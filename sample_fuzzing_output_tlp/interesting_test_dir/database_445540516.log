-- Time: 2024/06/10 21:05:36
-- Database: database16
-- Database version: 3.40.0
-- seed value: 445540516
PRAGMA cache_size = 50000; -- 9ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 1ms;
CREATE TEMPORARY TABLE t0 (c0 INTEGER ); -- 1ms;
UPDATE OR IGNORE t0 SET c0='-1902259892'; -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x'59f9'), (-1902259892), (x''); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 1ms;
UPDATE OR IGNORE t0 SET (c0, c0)=(NULL, '') WHERE CAST(((t0.c0)<(t0.c0)) AS TEXT); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=(1085628224, 0xffffffffb4e89f9f); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (''), (x'2491'), (x'6ce5f55e'); -- 0ms;
ANALYZE; -- 0ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0) AS SELECT (((((('hlt}}''-W(')OR(t0.c0)))AND(t0.c0)))LIKE(t0.c0)) FROM t0; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t0 VALUES (0xffffffff8e9dd14c) ON CONFLICT DO NOTHING; -- 0ms;
COMMIT; -- 1ms;
INSERT OR FAIL INTO t0(c0) VALUES (0.830797226252091), (''), (''); -- 0ms;
UPDATE t0 SET c0=0.4144182002322694, c0='-1902259892'; -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (x'32b5321b'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('C^mKT'), ('-1902259892'), (-1902259892); -- 0ms;
PRAGMA checkpoint_fullfsync; -- 1ms;
UPDATE t0 SET c0=-1902259892 WHERE NULLIF((t0.c0 IN ()), json_array(t0.c0, NULL, t0.c0, t0.c0)); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'e84d34d8', c0='1085628224'; -- 1ms;
ALTER TABLE t0 ADD COLUMN c83 TEXT; -- 1ms;
UPDATE t0 SET c0='-1076142526'; -- 0ms;
UPDATE OR FAIL t0 SET (c0)=(NULL) WHERE LOWER((t0.c83 IN ())); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.12457938030879656) WHERE (+ (t0.c0)); -- 1ms;
INSERT OR FAIL INTO t0 VALUES (NULL, NULL); -- 0ms;
UPDATE t0 SET c0='' WHERE t0.c83; -- 0ms;
END; -- 0ms;
ANALYZE; -- 0ms;
REINDEX; -- 0ms;
COMMIT TRANSACTION; -- 1ms;
PRAGMA journal_size_limit = 0; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ABORT INTO t0(c83) VALUES ('x\rQZh'), (x''), ('%ꝇ'); -- 4ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 REAL ); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR FAIL t0 SET c83=1.085628224E9; -- 0ms;
CREATE TEMP TABLE t1 (c0 REAL ); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 1ms;
CREATE UNIQUE INDEX IF NOT EXISTS i55 ON t0(CASE ((c83) BETWEEN (c83) AND (c83))  WHEN '' THEN CASE WHEN c83 THEN c0 WHEN c0 THEN c83 WHEN c0 THEN c83 ELSE '1703585607' END WHEN ((c0) NOT BETWEEN (c83) AND (c0)) THEN (~ (c0)) WHEN (((c0)) NOT BETWEEN ((c0)) AND ((c0))) THEN ((((((((c0)OR(c83)))AND(x'')))AND(c83)))OR(c83)) END DESC,(((((0.13944841176100953))!=((c0))))=(CAST(c83 AS NUMERIC))) COLLATE RTRIM); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE INDEX i4 ON t0(((((c0)IS NOT(c83)))!=((c83 IN ()))) COLLATE RTRIM ASC,(((x'0eef', c0, c83)) NOT BETWEEN (((((c83)) NOT BETWEEN ((c0)) AND ((c83))), (NOT (c0)), TRIM(DISTINCT c0))) AND ((((((c0)OR(c0)))OR(c0)), (((1.085628224E9))<>((c0))), ((c0) NOT NULL)))) COLLATE NOCASE DESC); -- 0ms;
PRAGMA automatic_index = true; -- 0ms;
UPDATE t0 SET (c83)=(NULL) WHERE ((((t0.c83) NOT BETWEEN (t0.c83) AND (t0.c83)))GLOB(x'a4f4')); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE rt0 SET (c2)=(-1.076142526E9) WHERE ((((rt0.c0)IS(rt0.c2))) BETWEEN (NULL) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))); -- 0ms;
ALTER TABLE t0 ADD COLUMN c92 INTEGER CHECK ( (CASE t0.c83  WHEN t0.c83 THEN t0.c83 END IN ())); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c83 TO c43; -- 1ms;
UPDATE t0 SET (c0, c43, c43)=(x'', x'0a0a', 1163699063) WHERE t0.c43; -- 0ms;
END TRANSACTION; -- 1ms;
UPDATE OR IGNORE rt0 SET (c3)=(NULL) WHERE (NOT ((rt0.c2 IN (rt0.c3, rt0.c1)))); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c3) VALUES ('-1076142526', '-1902259892'); -- 0ms;
UPDATE OR IGNORE t0 SET (c43)=(x'') WHERE (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c43, t0.c43)) AND ((t0.c0, t0.c43, t0.c0)))) BETWEEN (((((t0.c0)AND(0.3302539447484951)))OR(t0.c0))) AND (((t0.c43)>>(t0.c0)))); -- 1ms;
UPDATE t0 SET (c0, c0)=(x'', NULL); -- 0ms;
UPDATE OR REPLACE rt0 SET c1='507268836', c2=x'8f66' WHERE (rt0.c2 IN (0.9252463670770354, rt0.c0, rt0.c0)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-1352208051 unordered'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c3, c2) VALUES ('3300644410415872634 4894273275873105932:-461717997987384764T-2064672645548290411T1762 -8055018817673108580 1441 534020985006763756:-9101995463371560005-', '-145604528', NULL), (x'f5c5', 0X6e3a8f98, 0x629fcaad), (0.7345369505997785, '', 0.947063858567237); -- 0ms;
UPDATE OR ABORT rt0 SET c3=x'694355aa', c1=x'974d'; -- 1ms;
INSERT OR FAIL INTO rt0(c0, c2, c1) VALUES (0.8869050638464337, 'KM', x'98c4'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1, c3) VALUES ('159920739', '', x'd0b3'); -- 0ms;
UPDATE OR IGNORE rt0 SET c3=x'', c3=NULL, c1=NULL; -- 1ms;
DELETE FROM rt0 WHERE ((LIKELY(rt0.c0))>((~ (rt0.c1)))); -- 0ms;
REINDEX; -- 0ms;
UPDATE t0 SET (c43)=(x'') WHERE t0.c0; -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c0, c3) VALUES ('', NULL, 1682158009); -- 6ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR ABORT INTO t0(c43) VALUES (NULL); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (0.8869050638464337), (NULL), (0.6702220670161384); -- 0ms;
UPDATE OR IGNORE rt0 SET (c3)=(x'') WHERE ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)) COLLATE BINARY; -- 0ms;
END TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c43) VALUES (x''), (''), (NULL); -- 0ms;
DROP INDEX "i55"; -- 0ms;
INSERT OR IGNORE INTO t0(c0, c43) VALUES (NULL, '1163699063'); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1); -- 1ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL rt0.c0, rt0.c2, t0.c0, rt0.c1, v0.c0, vt0.c0 FROM vt0, rt0 LEFT OUTER JOIN v0 ON LIKE(CAST(rt0.c2 AS REAL), CASE t0.c0  WHEN t0.c43 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c0 WHEN t0.c0 THEN rt0.c0 END) LEFT OUTER JOIN t0 ON CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER);
SELECT DISTINCT rt0.c2 FROM t0, rt0 NATURAL JOIN v0;
SELECT DISTINCT rt0.c2 FROM t0, rt0 NATURAL JOIN v0 WHERE (t0.c0) UNION SELECT DISTINCT rt0.c2 FROM t0, rt0 NATURAL JOIN v0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT rt0.c2 FROM t0 NOT INDEXED, rt0 NATURAL JOIN v0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT rt0.c2 FROM t0, rt0 NATURAL JOIN v0;
SELECT ALL vt0.c1, t0.c0, rt0.c0, rt0.c2 FROM t0, vt0, rt0, v0 GROUP BY vt0.c1, t0.c0, rt0.c0, rt0.c2;
SELECT ALL vt0.c1, t0.c0, rt0.c0, rt0.c2 FROM t0, vt0, rt0, v0 WHERE (CASE ((((rt0.c3)AND(v0.c0)))AND(rt0.c1))  WHEN ((rt0.c2) IS TRUE) THEN (x'9b38' IN ()) WHEN ((((vt0.c1)AND(v0.c0)))AND(rt0.c3)) THEN CASE WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN rt0.c2 END WHEN (vt0.c0 IN (vt0.c0, rt0.c1)) THEN rt0.c1 COLLATE RTRIM WHEN ((t0.c43) NOT NULL) THEN '-732122252' WHEN '-102119975' THEN LOWER(NULL) ELSE rt0.c0 COLLATE NOCASE END) GROUP BY vt0.c1, t0.c0, rt0.c0, rt0.c2 UNION SELECT ALL vt0.c1, t0.c0, rt0.c0, rt0.c2 FROM t0, vt0, rt0, v0 WHERE ((NOT (CASE ((((rt0.c3)AND(v0.c0)))AND(rt0.c1))  WHEN ((rt0.c2) IS TRUE) THEN (x'9b38' IN ()) WHEN ((((vt0.c1)AND(v0.c0)))AND(rt0.c3)) THEN CASE WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN rt0.c2 END WHEN (vt0.c0 IN (vt0.c0, rt0.c1)) THEN rt0.c1 COLLATE RTRIM WHEN ((t0.c43) NOT NULL) THEN '-732122252' WHEN '-102119975' THEN LOWER(NULL) ELSE rt0.c0 COLLATE NOCASE END))) GROUP BY vt0.c1, t0.c0, rt0.c0, rt0.c2 UNION SELECT vt0.c1, t0.c0, rt0.c0, rt0.c2 FROM t0, vt0, rt0, v0 WHERE (((CASE ((((rt0.c3)AND(v0.c0)))AND(rt0.c1))  WHEN ((rt0.c2) IS TRUE) THEN (x'9b38' IN ()) WHEN ((((vt0.c1)AND(v0.c0)))AND(rt0.c3)) THEN CASE WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN rt0.c2 END WHEN (vt0.c0 IN (vt0.c0, rt0.c1)) THEN rt0.c1 COLLATE RTRIM WHEN ((t0.c43) NOT NULL) THEN '-732122252' WHEN '-102119975' THEN LOWER(NULL) ELSE rt0.c0 COLLATE NOCASE END) ISNULL)) GROUP BY vt0.c1, t0.c0, rt0.c0, rt0.c2;
SELECT ALL vt0.c1, t0.c0, rt0.c0, rt0.c2 FROM t0, vt0, rt0, v0 GROUP BY vt0.c1, t0.c0, rt0.c0, rt0.c2;
SELECT ALL vt0.c1, rt0.c3, vt0.c0, t0.c0, v0.c0, rt0.c1 FROM rt0, v0, t0, vt0 INDEXED BY i4 GROUP BY vt0.c1, rt0.c3, vt0.c0, t0.c0, v0.c0, rt0.c1;
SELECT ALL SUM('1711673588') FROM rt0, t0, v0;
SELECT rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c1, t0.c0, vt0.c1, vt0.c0, t0.c43 FROM vt0, rt0, t0, v0;
SELECT rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c1, t0.c0, vt0.c1, vt0.c0, t0.c43 FROM vt0, rt0, t0, v0 WHERE (NULLIF((~ (t0.c43)), (t0.c43 IN ()))) UNION ALL SELECT rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c1, t0.c0, vt0.c1, vt0.c0, t0.c43 FROM vt0, rt0, t0, v0 WHERE ((NOT (NULLIF((~ (t0.c43)), (t0.c43 IN ()))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c1, t0.c0, vt0.c1, vt0.c0, t0.c43 FROM vt0, rt0, t0, v0 WHERE (((NULLIF((~ (t0.c43)), (t0.c43 IN ()))) ISNULL));
SELECT rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c1, t0.c0, vt0.c1, vt0.c0, t0.c43 FROM vt0, rt0, t0, v0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS TEXT))) AND ((((vt0.c1)GLOB(rt0.c1)))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS TEXT))) AND ((((vt0.c1)GLOB(rt0.c1)))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS TEXT))) AND ((((vt0.c1)GLOB(rt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL v0.c0, vt0.c0, rt0.c3, vt0.c1, rt0.c0 FROM vt0, v0 INDEXED BY i4, rt0 GROUP BY v0.c0, vt0.c0, rt0.c3, vt0.c1, rt0.c0;
SELECT rt0.c2, v0.c0 FROM rt0, vt0, t0 INNER JOIN v0 ON ((((rt0.c0)<>(rt0.c1)))*((+ (vt0.c0)))) GROUP BY rt0.c2, v0.c0;
SELECT rt0.c2, v0.c0 FROM rt0, vt0, t0 INNER JOIN v0 ON ((((rt0.c0)<>(rt0.c1)))*((+ (vt0.c0)))) GROUP BY rt0.c2, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, v0.c0 FROM rt0, vt0, t0 INNER JOIN v0 ON ((((rt0.c0)!=(rt0.c1)))*((+ (vt0.c0)))) GROUP BY rt0.c2, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, v0.c0 FROM rt0, vt0, t0 INNER JOIN v0 ON ((((rt0.c0)!=(rt0.c1)))*((+ (vt0.c0)))) GROUP BY rt0.c2, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, v0.c0 FROM rt0, vt0, t0 INNER JOIN v0 ON ((((rt0.c0)<>(rt0.c1)))*((+ (vt0.c0)))) GROUP BY rt0.c2, v0.c0;
SELECT rt0.c2, v0.c0 FROM rt0, vt0, t0 INNER JOIN v0 ON ((((rt0.c0)<>(rt0.c1)))*((+ (vt0.c0)))) GROUP BY rt0.c2, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, v0.c0 FROM rt0, vt0, t0 INNER JOIN v0 ON ((((rt0.c0)!=(rt0.c1)))*((+ (vt0.c0)))) GROUP BY rt0.c2, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, v0.c0 FROM rt0, vt0, t0 INNER JOIN v0 ON ((((rt0.c0)!=(rt0.c1)))*((+ (vt0.c0)))) GROUP BY rt0.c2, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, v0.c0 FROM rt0, vt0, t0 INNER JOIN v0 ON ((((rt0.c0)<>(rt0.c1)))*((+ (vt0.c0)))) GROUP BY rt0.c2, v0.c0;
SELECT t0.c0, t0.c43 FROM t0;
SELECT ALL t0.c0, t0.c43 FROM t0 WHERE (CAST((((t0.c43)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) AS NUMERIC)) UNION ALL SELECT t0.c0, t0.c43 FROM t0 WHERE ((NOT (CAST((((t0.c43)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) AS NUMERIC)))) UNION ALL SELECT t0.c0, t0.c43 FROM t0 WHERE (((CAST((((t0.c43)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) AS NUMERIC)) ISNULL));
SELECT t0.c0, t0.c43 FROM t0;
SELECT DISTINCT vt0.c0, rt0.c2, t0.c43, t0.c0, rt0.c0, v0.c0 FROM v0, vt0 FULL OUTER JOIN rt0 ON ((((t0.c0)AND(vt0.c0))) BETWEEN ((~ (rt0.c0))) AND (QUOTE(rt0.c0))) LEFT OUTER JOIN t0 ON (((~ (vt0.c0))) BETWEEN ((~ (vt0.c1))) AND (((t0.c0)OR(vt0.c1))));
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (CASE WHEN CASE WHEN -2134357367 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END THEN CAST(vt0.c0 AS INTEGER) ELSE ((vt0.c1) ISNULL) END) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CASE WHEN CASE WHEN -2134357367 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END THEN CAST(vt0.c0 AS INTEGER) ELSE ((vt0.c1) ISNULL) END))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((CASE WHEN CASE WHEN -2134357367 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END THEN CAST(vt0.c0 AS INTEGER) ELSE ((vt0.c1) ISNULL) END) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c1 FROM v0, vt0, t0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM v0, vt0, t0 GROUP BY vt0.c1 HAVING (AVG(t0.c43) IN (COUNT(GROUP_CONCAT(TOTAL(MAX(GROUP_CONCAT(COUNT(*)))))), SUM(GROUP_CONCAT(AVG(vt0.c1))))) UNION ALL SELECT ALL vt0.c1 FROM v0, vt0, t0 GROUP BY vt0.c1 HAVING (NOT ((AVG(t0.c43) IN (COUNT(GROUP_CONCAT(TOTAL(MAX(GROUP_CONCAT(COUNT(*)))))), SUM(GROUP_CONCAT(AVG(vt0.c1))))))) UNION ALL SELECT ALL vt0.c1 FROM v0, vt0, t0 GROUP BY vt0.c1 HAVING (((AVG(t0.c43) IN (COUNT(GROUP_CONCAT(TOTAL(MAX(GROUP_CONCAT(COUNT(*)))))), SUM(GROUP_CONCAT(AVG(vt0.c1)))))) ISNULL);
SELECT * FROM rt0, t0, v0, vt0;
SELECT ALL * FROM rt0, t0, v0, vt0 WHERE ((((t0.c43)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))) AND ((((rt0.c0)IS(rt0.c2)))))) UNION ALL SELECT ALL * FROM rt0, t0, v0, vt0 WHERE ((NOT ((((t0.c43)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))) AND ((((rt0.c0)IS(rt0.c2)))))))) UNION ALL SELECT * FROM rt0, t0, v0, vt0 WHERE ((((((t0.c43)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))) AND ((((rt0.c0)IS(rt0.c2)))))) ISNULL));
SELECT * FROM rt0, t0, v0, vt0;
SELECT DISTINCT * FROM vt0, v0, rt0, t0;
SELECT DISTINCT * FROM vt0, v0, rt0, t0 WHERE (((((vt0.c1)AND(t0.c0)))OR(rt0.c1)) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0, v0, rt0, t0 WHERE ((NOT (((((vt0.c1)AND(t0.c0)))OR(rt0.c1)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0, v0, rt0, t0 WHERE (((((((vt0.c1)AND(t0.c0)))OR(rt0.c1)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0, v0, rt0, t0;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE ((- (rt0.c3)) COLLATE RTRIM) GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT ((- (rt0.c3)) COLLATE RTRIM))) GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE ((((- (rt0.c3)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2;
SELECT ALL vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0;
SELECT ALL vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0 HAVING t0.c43 UNION ALL SELECT vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0 HAVING (NOT (t0.c43)) UNION ALL SELECT vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0 HAVING ((t0.c43) ISNULL);
SELECT ALL vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0;
SELECT ALL vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0 HAVING t0.c43 UNION ALL SELECT vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0 HAVING (NOT (t0.c43)) UNION ALL SELECT vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0 HAVING ((t0.c43) ISNULL);
SELECT ALL vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, t0.c43, rt0.c1, t0.c0 FROM v0, t0 LEFT OUTER JOIN rt0 ON CAST((NOT (v0.c0)) AS TEXT);
SELECT rt0.c2, rt0.c3, rt0.c0, t0.c43, rt0.c1, t0.c0 FROM v0, t0 LEFT OUTER JOIN rt0 ON CAST((NOT (v0.c0)) AS TEXT) WHERE (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((t0.c0)))))!=((((rt0.c3) IS TRUE))))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0, t0.c43, rt0.c1, t0.c0 FROM v0, t0 LEFT OUTER JOIN rt0 ON CAST((NOT (v0.c0)) AS TEXT) WHERE ((NOT (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((t0.c0)))))!=((((rt0.c3) IS TRUE))))))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, t0.c43, rt0.c1, t0.c0 FROM v0, t0 LEFT OUTER JOIN rt0 ON CAST((NOT (v0.c0)) AS TEXT) WHERE (((((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((t0.c0)))))<>((((rt0.c3) IS TRUE))))) ISNULL));
SELECT ALL rt0.c2, rt0.c3, rt0.c0, t0.c43, rt0.c1, t0.c0 FROM v0, t0 LEFT OUTER JOIN rt0 ON CAST((NOT (v0.c0)) AS TEXT);
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (NULL) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c1, vt0.c1, rt0.c0, vt0.c0, rt0.c3, v0.c0, rt0.c2 FROM vt0, v0 FULL OUTER JOIN rt0 ON TYPEOF(LIKELIHOOD(DISTINCT rt0.c3, 0.3495003080814427)) GROUP BY rt0.c1, vt0.c1, rt0.c0, vt0.c0, rt0.c3, v0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c1, rt0.c0, vt0.c0, rt0.c3, v0.c0, rt0.c2 FROM vt0, v0 FULL OUTER JOIN rt0 ON TYPEOF(LIKELIHOOD(DISTINCT rt0.c3, 0.3495003080814427)) WHERE (1654639277) GROUP BY rt0.c1, vt0.c1, rt0.c0, vt0.c0, rt0.c3, v0.c0, rt0.c2 UNION SELECT rt0.c1, vt0.c1, rt0.c0, vt0.c0, rt0.c3, v0.c0, rt0.c2 FROM vt0, v0 FULL OUTER JOIN rt0 ON TYPEOF(LIKELIHOOD(DISTINCT rt0.c3, 0.3495003080814427)) WHERE ((NOT (1654639277))) GROUP BY rt0.c1, vt0.c1, rt0.c0, vt0.c0, rt0.c3, v0.c0, rt0.c2 UNION SELECT rt0.c1, vt0.c1, rt0.c0, vt0.c0, rt0.c3, v0.c0, rt0.c2 FROM vt0, v0 FULL OUTER JOIN rt0 ON TYPEOF(LIKELIHOOD(DISTINCT rt0.c3, 0.3495003080814427)) WHERE (((1654639277) ISNULL)) GROUP BY rt0.c1, vt0.c1, rt0.c0, vt0.c0, rt0.c3, v0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c1, rt0.c0, vt0.c0, rt0.c3, v0.c0, rt0.c2 FROM vt0, v0 FULL OUTER JOIN rt0 ON TYPEOF(LIKELIHOOD(DISTINCT rt0.c3, 0.3495003080814427)) GROUP BY rt0.c1, vt0.c1, rt0.c0, vt0.c0, rt0.c3, v0.c0, rt0.c2;
SELECT ALL rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, v0.c0;
SELECT rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, v0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, v0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, v0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT MIN(QUOTE(((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c0)))AND(t0.c0)))OR(vt0.c0)))) FROM vt0, rt0, t0, v0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c43 THEN rt0.c0 WHEN t0.c43 THEN v0.c0 END)|(((rt0.c3) NOT NULL))) ASC  NULLS FIRST, ((0.4068178781591013) IS TRUE) ASC;
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (json_valid(((rt0.c1)||(v0.c0)))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (json_valid(((rt0.c1)||(v0.c0)))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((json_valid(((rt0.c1)||(v0.c0)))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c1) IS TRUE))) AND ((((2061326814) NOT BETWEEN (v0.c0) AND (x'')))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((((rt0.c2)) BETWEEN ((((rt0.c1) IS TRUE))) AND ((((2061326814) NOT BETWEEN (v0.c0) AND (x'')))))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((((rt0.c2)) BETWEEN ((((rt0.c1) IS TRUE))) AND ((((2061326814) NOT BETWEEN (v0.c0) AND (x'')))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL vt0.c1, rt0.c3, v0.c0, vt0.c0, rt0.c0 FROM v0, vt0 INNER JOIN rt0 ON TRIM(DISTINCT ((v0.c0) IS FALSE), CAST(vt0.c0 AS REAL)) LEFT OUTER JOIN t0 ON ((((((v0.c0) NOTNULL))AND(CASE WHEN v0.c0 THEN rt0.c3 END)))OR(0.345096857717222)) GROUP BY vt0.c1, rt0.c3, v0.c0, vt0.c0, rt0.c0;
SELECT ALL vt0.c1, rt0.c3, v0.c0, vt0.c0, rt0.c0 FROM v0, vt0 INNER JOIN rt0 ON TRIM(DISTINCT ((v0.c0) IS FALSE), CAST(vt0.c0 AS REAL)) LEFT OUTER JOIN t0 ON ((((((v0.c0) NOTNULL))AND(CASE WHEN v0.c0 THEN rt0.c3 END)))OR(0.345096857717222)) WHERE (v0.c0) GROUP BY vt0.c1, rt0.c3, v0.c0, vt0.c0, rt0.c0 UNION SELECT ALL vt0.c1, rt0.c3, v0.c0, vt0.c0, rt0.c0 FROM v0, vt0 INNER JOIN rt0 ON TRIM(DISTINCT ((v0.c0) IS FALSE), CAST(vt0.c0 AS REAL)) LEFT OUTER JOIN t0 ON ((((((v0.c0) NOTNULL))AND(CASE WHEN v0.c0 THEN rt0.c3 END)))OR(0.345096857717222)) WHERE ((NOT (v0.c0))) GROUP BY vt0.c1, rt0.c3, v0.c0, vt0.c0, rt0.c0 UNION SELECT ALL vt0.c1, rt0.c3, v0.c0, vt0.c0, rt0.c0 FROM v0, vt0 INNER JOIN rt0 ON TRIM(DISTINCT ((v0.c0) IS FALSE), CAST(vt0.c0 AS REAL)) LEFT OUTER JOIN t0 ON ((((((v0.c0) NOTNULL))AND(CASE WHEN v0.c0 THEN rt0.c3 END)))OR(0.345096857717222)) WHERE (((v0.c0) ISNULL)) GROUP BY vt0.c1, rt0.c3, v0.c0, vt0.c0, rt0.c0;
SELECT ALL vt0.c1, rt0.c3, v0.c0, vt0.c0, rt0.c0 FROM v0, vt0 INNER JOIN rt0 ON TRIM(DISTINCT ((v0.c0) IS FALSE), CAST(vt0.c0 AS REAL)) LEFT OUTER JOIN t0 ON ((((((v0.c0) NOTNULL))AND(CASE WHEN v0.c0 THEN rt0.c3 END)))OR(0.345096857717222)) GROUP BY vt0.c1, rt0.c3, v0.c0, vt0.c0, rt0.c0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING AVG(AVG(rt0.c1)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (AVG(AVG(rt0.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((AVG(AVG(rt0.c1))) ISNULL);
SELECT ALL SUM((+ (v0.c0))) FROM v0, t0, vt0;
SELECT * FROM rt0 INDEXED BY i4;
SELECT DISTINCT rt0.c2, v0.c0, t0.c0 FROM rt0, vt0, v0, t0;
SELECT DISTINCT rt0.c2, v0.c0, t0.c0 FROM rt0, vt0, v0, t0 WHERE (v0.c0) UNION SELECT DISTINCT rt0.c2, v0.c0, t0.c0 FROM rt0, vt0, v0, t0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT rt0.c2, v0.c0, t0.c0 FROM rt0, vt0, v0, t0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT rt0.c2, v0.c0, t0.c0 FROM rt0, vt0, v0, t0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (CAST((('A箻}')<(vt0.c0)) AS BLOB)) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CAST((('A箻}')<(vt0.c0)) AS BLOB)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((CAST((('A箻}')<(vt0.c0)) AS BLOB)) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(((MIN(v0.c0))==(GROUP_CONCAT(AVG(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(((MIN(v0.c0))==(GROUP_CONCAT(AVG(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(((MIN(v0.c0))=(GROUP_CONCAT(AVG(v0.c0)))))) ISNULL);
SELECT t0.c43 FROM t0 FULL OUTER JOIN vt0 ON CASE WHEN (- (t0.c0)) THEN ((-844636357)IS(vt0.c1)) ELSE (- (vt0.c1)) END;
SELECT ALL t0.c43 FROM t0 FULL OUTER JOIN vt0 ON CASE WHEN (- (t0.c0)) THEN ((-844636357)IS(vt0.c1)) ELSE (- (vt0.c1)) END WHERE ((+ (((vt0.c0)LIKE(vt0.c1))))) UNION ALL SELECT ALL t0.c43 FROM t0 FULL OUTER JOIN vt0 ON CASE WHEN (- (t0.c0)) THEN ((-844636357)IS(vt0.c1)) ELSE (- (vt0.c1)) END WHERE ((NOT ((+ (((vt0.c0)LIKE(vt0.c1))))))) UNION ALL SELECT ALL t0.c43 FROM t0 FULL OUTER JOIN vt0 ON CASE WHEN (- (t0.c0)) THEN ((-844636357)IS(vt0.c1)) ELSE (- (vt0.c1)) END WHERE ((((+ (((vt0.c0)LIKE(vt0.c1))))) ISNULL));
SELECT t0.c43 FROM t0 FULL OUTER JOIN vt0 ON CASE WHEN (- (t0.c0)) THEN ((-844636357)IS(vt0.c1)) ELSE (- (vt0.c1)) END;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE (PRINTF(((((((((NULL)AND(vt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c3)))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE ((NOT (PRINTF(((((((((NULL)AND(vt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c3)))))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE (((PRINTF(((((((((NULL)AND(vt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c3)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 WHERE (ABS((((('1314987299')OR(t0.c0)))AND(vt0.c1)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt0, t0 WHERE ((NOT (ABS((((('1314987299')OR(t0.c0)))AND(vt0.c1)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 WHERE (((ABS((((('1314987299')OR(t0.c0)))AND(vt0.c1)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, vt0.c1, v0.c0 FROM vt0, rt0 INNER JOIN t0 ON (~ ((+ (t0.c0)))) RIGHT OUTER JOIN v0 ON CASE ((rt0.c2) IS FALSE)  WHEN CASE WHEN rt0.c1 THEN vt0.c0 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END THEN rt0.c1 COLLATE BINARY ELSE ((t0.c0) IS TRUE) END GROUP BY rt0.c3, rt0.c1, rt0.c0, vt0.c1, v0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, vt0.c1, v0.c0 FROM vt0, rt0 INNER JOIN t0 ON (~ ((+ (t0.c0)))) RIGHT OUTER JOIN v0 ON CASE ((rt0.c2) IS FALSE)  WHEN CASE WHEN rt0.c1 THEN vt0.c0 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END THEN rt0.c1 COLLATE BINARY ELSE ((t0.c0) IS TRUE) END GROUP BY rt0.c3, rt0.c1, rt0.c0, vt0.c1, v0.c0 HAVING SUM(SUM(SUM(COUNT(t0.c0)))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0, vt0.c1, v0.c0 FROM vt0, rt0 INNER JOIN t0 ON (~ ((+ (t0.c0)))) RIGHT OUTER JOIN v0 ON CASE ((rt0.c2) IS FALSE)  WHEN CASE WHEN rt0.c1 THEN vt0.c0 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END THEN rt0.c1 COLLATE BINARY ELSE ((t0.c0) IS TRUE) END GROUP BY rt0.c3, rt0.c1, rt0.c0, vt0.c1, v0.c0 HAVING (NOT (SUM(SUM(SUM(COUNT(t0.c0)))))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0, vt0.c1, v0.c0 FROM vt0, rt0 INNER JOIN t0 ON (~ ((+ (t0.c0)))) RIGHT OUTER JOIN v0 ON CASE ((rt0.c2) IS FALSE)  WHEN CASE WHEN rt0.c1 THEN vt0.c0 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END THEN rt0.c1 COLLATE BINARY ELSE ((t0.c0) IS TRUE) END GROUP BY rt0.c3, rt0.c1, rt0.c0, vt0.c1, v0.c0 HAVING ((SUM(SUM(SUM(COUNT(t0.c0))))) ISNULL);
SELECT ALL * FROM t0, vt0, rt0;
SELECT ALL * FROM t0, vt0, rt0 WHERE (x'') UNION ALL SELECT ALL * FROM t0, vt0, rt0 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM t0, vt0, rt0 WHERE (((x'') ISNULL));
SELECT ALL * FROM t0, vt0, rt0;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON (LOWER(DISTINCT v0.c0) IN ());
SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON (LOWER(DISTINCT v0.c0) IN ()) WHERE (((CAST(t0.c43 AS REAL)) NOT BETWEEN (((t0.c43) IS TRUE)) AND (((((t0.c0)OR(0xffffffffb9bb5ceb)))OR(v0.c0))))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON (LOWER(DISTINCT v0.c0) IN ()) WHERE ((NOT (((CAST(t0.c43 AS REAL)) NOT BETWEEN (((t0.c43) IS TRUE)) AND (((((t0.c0)OR(0Xffffffffb9bb5ceb)))OR(v0.c0))))))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON (LOWER(DISTINCT v0.c0) IN ()) WHERE (((((CAST(t0.c43 AS REAL)) NOT BETWEEN (((t0.c43) IS TRUE)) AND (((((t0.c0)OR(0xffffffffb9bb5ceb)))OR(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON (LOWER(DISTINCT v0.c0) IN ());
SELECT ALL rt0.c2, t0.c43, rt0.c0, rt0.c3, v0.c0 FROM v0 INNER JOIN rt0 ON ((((t0.c0)-(rt0.c1))) NOT NULL) RIGHT OUTER JOIN t0 ON (CAST('0.8869050638464337' AS BLOB) IN ()) GROUP BY rt0.c2, t0.c43, rt0.c0, rt0.c3, v0.c0;
SELECT ALL v0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON ((~ (rt0.c0)) IN ()) INNER JOIN rt0 ON CASE TYPEOF(vt0.c0)  WHEN NULL THEN ((0Xffffffffae7b3028)>>(vt0.c0)) WHEN vt0.c1 COLLATE BINARY THEN ((t0.c43)LIKE(t0.c0)) WHEN t0.c0 THEN (vt0.c1 IN (t0.c43)) ELSE ((((v0.c0)AND(vt0.c1)))OR(NULL)) END LEFT OUTER JOIN v0 ON COALESCE((rt0.c3 IN ()), CASE WHEN rt0.c3 THEN vt0.c0 END) GROUP BY v0.c0, vt0.c0;
SELECT MAX((~ ((- (rt0.c2))))) FROM t0, rt0;
SELECT ALL t0.c0 FROM t0, v0;
SELECT ALL t0.c0 FROM t0, v0 WHERE ((((NOT (t0.c0))) NOT BETWEEN (((v0.c0)<=(v0.c0))) AND (NULL))) UNION ALL SELECT t0.c0 FROM t0, v0 WHERE ((NOT ((((NOT (t0.c0))) NOT BETWEEN (((v0.c0)<=(v0.c0))) AND (NULL))))) UNION ALL SELECT ALL t0.c0 FROM t0, v0 WHERE ((((((NOT (t0.c0))) NOT BETWEEN (((v0.c0)<=(v0.c0))) AND (NULL))) ISNULL));
SELECT ALL t0.c0 FROM t0, v0;
SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON ((((rt0.c0)IS(rt0.c1))) BETWEEN (((vt0.c1) NOT BETWEEN (v0.c0) AND (x''))) AND (CAST(vt0.c0 AS INTEGER))) INNER JOIN v0 ON rt0.c3;
SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON ((((rt0.c0)IS(rt0.c1))) BETWEEN (((vt0.c1) NOT BETWEEN (v0.c0) AND (x''))) AND (CAST(vt0.c0 AS INTEGER))) INNER JOIN v0 ON rt0.c3 WHERE (((((((((((((((((rt0.c2)AND(x'5a72')))OR(vt0.c1)))OR(x'a154')))OR(CAST(rt0.c3 AS INTEGER))))OR(rt0.c2)))OR(((((NULL)OR(rt0.c1)))OR(v0.c0)))))OR(((rt0.c3) NOTNULL))))OR((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON ((((rt0.c0)IS(rt0.c1))) BETWEEN (((vt0.c1) NOT BETWEEN (v0.c0) AND (x''))) AND (CAST(vt0.c0 AS INTEGER))) INNER JOIN v0 ON rt0.c3 WHERE ((NOT (((((((((((((((((rt0.c2)AND(x'5a72')))OR(vt0.c1)))OR(x'a154')))OR(CAST(rt0.c3 AS INTEGER))))OR(rt0.c2)))OR(((((NULL)OR(rt0.c1)))OR(v0.c0)))))OR(((rt0.c3) NOTNULL))))OR((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON ((((rt0.c0)IS(rt0.c1))) BETWEEN (((vt0.c1) NOT BETWEEN (v0.c0) AND (x''))) AND (CAST(vt0.c0 AS INTEGER))) INNER JOIN v0 ON rt0.c3 WHERE (((((((((((((((((((rt0.c2)AND(x'5a72')))OR(vt0.c1)))OR(x'a154')))OR(CAST(rt0.c3 AS INTEGER))))OR(rt0.c2)))OR(((((NULL)OR(rt0.c1)))OR(v0.c0)))))OR(((rt0.c3) NOTNULL))))OR((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON ((((rt0.c0)IS(rt0.c1))) BETWEEN (((vt0.c1) NOT BETWEEN (v0.c0) AND (x''))) AND (CAST(vt0.c0 AS INTEGER))) INNER JOIN v0 ON rt0.c3;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((('') BETWEEN ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) AND (0.9983751031261782))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((('') BETWEEN ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) AND (0.9983751031261782))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((('') BETWEEN ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) AND (0.9983751031261782))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c43, t0.c0 FROM vt0, v0, t0 GROUP BY t0.c43, t0.c0;
SELECT t0.c43, t0.c0 FROM vt0, v0, t0 GROUP BY t0.c43, t0.c0 HAVING (- (MAX(t0.c43))) UNION ALL SELECT t0.c43, t0.c0 FROM vt0, v0, t0 GROUP BY t0.c43, t0.c0 HAVING (NOT ((- (MAX(t0.c43))))) UNION ALL SELECT t0.c43, t0.c0 FROM vt0, v0, t0 GROUP BY t0.c43, t0.c0 HAVING (((- (MAX(t0.c43)))) ISNULL);
SELECT ALL t0.c43, t0.c0 FROM vt0, v0, t0 GROUP BY t0.c43, t0.c0;
SELECT t0.c43, t0.c0 FROM vt0, v0, t0 GROUP BY t0.c43, t0.c0 HAVING (- (MAX(t0.c43))) UNION ALL SELECT t0.c43, t0.c0 FROM vt0, v0, t0 GROUP BY t0.c43, t0.c0 HAVING (NOT ((- (MAX(t0.c43))))) UNION ALL SELECT t0.c43, t0.c0 FROM vt0, v0, t0 GROUP BY t0.c43, t0.c0 HAVING (((- (MAX(t0.c43)))) ISNULL);
SELECT ALL t0.c43, t0.c0 FROM vt0, v0, t0 GROUP BY t0.c43, t0.c0;
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (rt0.c0) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((rt0.c0) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1)IS(vt0.c0))) NOT BETWEEN (CAST(NULL AS TEXT)) AND (COALESCE(DISTINCT vt0.c1, vt0.c1)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c1)IS(vt0.c0))) NOT BETWEEN (CAST(NULL AS TEXT)) AND (COALESCE(DISTINCT vt0.c1, vt0.c1)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c1)IS(vt0.c0))) NOT BETWEEN (CAST(NULL AS TEXT)) AND (COALESCE(DISTINCT vt0.c1, vt0.c1)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0 FROM t0, v0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, v0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, v0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, v0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, v0 GROUP BY t0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING LIKELY(COUNT(*)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (LIKELY(COUNT(*)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((LIKELY(COUNT(*))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING LIKELY(COUNT(*)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (LIKELY(COUNT(*)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((LIKELY(COUNT(*))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL t0.c0, vt0.c0, v0.c0, t0.c43, vt0.c1 FROM v0, vt0, t0;
SELECT ALL t0.c0, vt0.c0, v0.c0, t0.c43, vt0.c1 FROM v0 NOT INDEXED, vt0, t0 WHERE (((((t0.c43) NOT BETWEEN (vt0.c1) AND (t0.c0)))GLOB(CAST(vt0.c0 AS INTEGER)))) UNION ALL SELECT t0.c0, vt0.c0, v0.c0, t0.c43, vt0.c1 FROM v0, vt0, t0 WHERE ((NOT (((((t0.c43) NOT BETWEEN (vt0.c1) AND (t0.c0)))GLOB(CAST(vt0.c0 AS INTEGER)))))) UNION ALL SELECT t0.c0, vt0.c0, v0.c0, t0.c43, vt0.c1 FROM v0, vt0, t0 WHERE (((((((t0.c43) NOT BETWEEN (vt0.c1) AND (t0.c0)))GLOB(CAST(vt0.c0 AS INTEGER)))) ISNULL));
SELECT ALL t0.c0, vt0.c0, v0.c0, t0.c43, vt0.c1 FROM v0, vt0, t0;
SELECT DISTINCT rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c3 FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (NULL)))==(load_extension(rt0.c0)))) UNION SELECT DISTINCT rt0.c3 FROM rt0 WHERE ((NOT (((((rt0.c0) BETWEEN (rt0.c1) AND (NULL)))=(load_extension(rt0.c0)))))) UNION SELECT DISTINCT rt0.c3 FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c1) AND (NULL)))==(load_extension(rt0.c0)))) ISNULL));
SELECT v0.c0, rt0.c3 FROM t0 RIGHT OUTER JOIN rt0 ON ((vt0.c1 COLLATE NOCASE)/(((((NULL)OR(rt0.c0)))OR(rt0.c2)))) LEFT OUTER JOIN vt0 ON CASE ((272951610) BETWEEN (t0.c0) AND (v0.c0))  WHEN NULL THEN CASE rt0.c0  WHEN 0Xfffffffff59abf81 THEN rt0.c0 WHEN t0.c43 THEN rt0.c1 WHEN t0.c0 THEN vt0.c1 ELSE vt0.c1 END ELSE rt0.c1 END FULL OUTER JOIN v0 ON (NOT ((rt0.c0 IN ()))) GROUP BY v0.c0, rt0.c3;
SELECT vt0.c0, t0.c43, t0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c43, t0.c0, vt0.c1;
SELECT ALL vt0.c0, t0.c43, t0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c43, t0.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, t0.c43, t0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c43, t0.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, t0.c43, t0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c43, t0.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, t0.c43, t0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c43, t0.c0, vt0.c1;
SELECT ALL vt0.c0, t0.c43, t0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c43, t0.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, t0.c43, t0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c43, t0.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, t0.c43, t0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c43, t0.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, t0.c43, t0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c43, t0.c0, vt0.c1;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))) ISNULL)) ORDER BY ((NULLIF('0.345096857717222', rt0.c1))IS NOT(load_extension(rt0.c3))) DESC  NULLS FIRST, CASE WHEN (- (rt0.c3)) THEN CAST(rt0.c3 AS BLOB) WHEN rt0.c2 COLLATE BINARY THEN ((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)) WHEN ((rt0.c0)>(rt0.c2)) THEN rt0.c3 COLLATE BINARY ELSE (('')<=(rt0.c3)) END;
SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))) ISNULL)))) ORDER BY ((NULLIF('0.345096857717222', rt0.c1))IS NOT(load_extension(rt0.c3))) DESC  NULLS FIRST, CASE WHEN (- (rt0.c3)) THEN CAST(rt0.c3 AS BLOB) WHEN rt0.c2 COLLATE BINARY THEN ((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)) WHEN ((rt0.c0)>(rt0.c2)) THEN rt0.c3 COLLATE BINARY ELSE (('')<=(rt0.c3)) END;
SELECT DISTINCT v0.c0, rt0.c1, vt0.c0, vt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c3, t0.c43 FROM vt0, rt0 FULL OUTER JOIN t0 ON ((+ (v0.c0)) IN ((((rt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) FULL OUTER JOIN v0 ON ((((rt0.c1)OR(rt0.c3)))OR(vt0.c1)) COLLATE NOCASE;
SELECT vt0.c0, rt0.c2, vt0.c1, rt0.c0, t0.c0, v0.c0, rt0.c3 FROM v0 LEFT OUTER JOIN t0 ON CAST(((rt0.c1)>>(rt0.c3)) AS INTEGER) CROSS JOIN rt0 ON (((((t0.c0)) NOT BETWEEN ((t0.c43)) AND ((t0.c0)))) NOT NULL) INNER JOIN vt0 ON ROUND(((rt0.c2)!=(rt0.c3)), t0.c43 COLLATE BINARY) GROUP BY vt0.c0, rt0.c2, vt0.c1, rt0.c0, t0.c0, v0.c0, rt0.c3;
SELECT ALL rt0.c0, t0.c43, rt0.c2, rt0.c1 FROM rt0, v0, t0, vt0 GROUP BY rt0.c0, t0.c43, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, t0.c43, rt0.c2, rt0.c1 FROM rt0, v0, t0, vt0 GROUP BY rt0.c0, t0.c43, rt0.c2, rt0.c1 HAVING (+ (CAST(rt0.c1 AS NUMERIC))) UNION ALL SELECT ALL rt0.c0, t0.c43, rt0.c2, rt0.c1 FROM rt0 NOT INDEXED, v0, t0, vt0 GROUP BY rt0.c0, t0.c43, rt0.c2, rt0.c1 HAVING (NOT ((+ (CAST(rt0.c1 AS NUMERIC))))) UNION ALL SELECT rt0.c0, t0.c43, rt0.c2, rt0.c1 FROM rt0, v0, t0, vt0 GROUP BY rt0.c0, t0.c43, rt0.c2, rt0.c1 HAVING (((+ (CAST(rt0.c1 AS NUMERIC)))) ISNULL);
SELECT ALL rt0.c0, t0.c43, rt0.c2, rt0.c1 FROM rt0, v0, t0, vt0 GROUP BY rt0.c0, t0.c43, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, t0.c43, rt0.c2, rt0.c1 FROM rt0, v0, t0, vt0 GROUP BY rt0.c0, t0.c43, rt0.c2, rt0.c1 HAVING (+ (CAST(rt0.c1 AS NUMERIC))) UNION ALL SELECT ALL rt0.c0, t0.c43, rt0.c2, rt0.c1 FROM rt0 NOT INDEXED, v0, t0, vt0 GROUP BY rt0.c0, t0.c43, rt0.c2, rt0.c1 HAVING (NOT ((+ (CAST(rt0.c1 AS NUMERIC))))) UNION ALL SELECT rt0.c0, t0.c43, rt0.c2, rt0.c1 FROM rt0, v0, t0, vt0 GROUP BY rt0.c0, t0.c43, rt0.c2, rt0.c1 HAVING (((+ (CAST(rt0.c1 AS NUMERIC)))) ISNULL);
SELECT ALL rt0.c0, t0.c43, rt0.c2, rt0.c1 FROM rt0, v0, t0, vt0 GROUP BY rt0.c0, t0.c43, rt0.c2, rt0.c1;
SELECT ALL SUM((CAST(vt0.c0 AS INTEGER) IN ())) FROM t0, v0, vt0 ORDER BY (((vt0.c1)) BETWEEN (('-174407807')) AND ((((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))))  NULLS LAST, (((v0.c0, vt0.c1, t0.c43)) BETWEEN ((vt0.c0, (t0.c0 IN (vt0.c0)), CAST(vt0.c0 AS NUMERIC))) AND ((CHAR(vt0.c1, t0.c43, vt0.c1), v0.c0, (NOT (0Xfffffffff7524050))))) ASC;
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c2) NOT NULL)) NOT NULL)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2) NOT NULL)) NOT NULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c2) NOT NULL)) NOT NULL)) ISNULL));
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT vt0.c1, t0.c43, rt0.c3, rt0.c2, t0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((((t0.c0)|(t0.c0))) NOT NULL) RIGHT OUTER JOIN t0 ON (- (((vt0.c1) NOT BETWEEN (NULL) AND (t0.c0)))) CROSS JOIN rt0 ON (+ ((NULL IN (t0.c0))));
SELECT rt0.c0 FROM v0, t0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM v0, t0, rt0 WHERE ((((v0.c0)<<('')) IN (((((rt0.c1)AND('-165616802')))AND(t0.c43))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM v0, t0, rt0 WHERE ((NOT ((((v0.c0)<<('')) IN (((((rt0.c1)AND('-165616802')))AND(t0.c43))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM v0, t0, rt0 WHERE ((((((v0.c0)<<('')) IN (((((rt0.c1)AND('-165616802')))AND(t0.c43))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM v0, t0, rt0 GROUP BY rt0.c0;
SELECT ALL vt0.c0, t0.c43, rt0.c2, rt0.c0, v0.c0 FROM v0, vt0, t0, rt0 GROUP BY vt0.c0, t0.c43, rt0.c2, rt0.c0, v0.c0;
SELECT ALL vt0.c0, t0.c43, rt0.c2, rt0.c0, v0.c0 FROM v0, vt0, t0, rt0 GROUP BY vt0.c0, t0.c43, rt0.c2, rt0.c0, v0.c0 HAVING MIN(SUM(rt0.c2)) UNION ALL SELECT ALL vt0.c0, t0.c43, rt0.c2, rt0.c0, v0.c0 FROM v0, vt0, t0, rt0 GROUP BY vt0.c0, t0.c43, rt0.c2, rt0.c0, v0.c0 HAVING (NOT (MIN(SUM(rt0.c2)))) UNION ALL SELECT ALL vt0.c0, t0.c43, rt0.c2, rt0.c0, v0.c0 FROM v0, vt0, t0, rt0 GROUP BY vt0.c0, t0.c43, rt0.c2, rt0.c0, v0.c0 HAVING ((MIN(SUM(rt0.c2))) ISNULL);
SELECT * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE (CAST(((t0.c0) IS FALSE) AS INTEGER)) UNION ALL SELECT * FROM rt0, t0 NOT INDEXED WHERE ((NOT (CAST(((t0.c0) IS FALSE) AS INTEGER)))) UNION ALL SELECT * FROM rt0, t0 WHERE (((CAST(((t0.c0) IS FALSE) AS INTEGER)) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT t0.c43, rt0.c3, rt0.c1 FROM t0, v0, rt0;
SELECT DISTINCT t0.c43, rt0.c3, rt0.c1 FROM t0, v0, rt0 WHERE ((((((((((((((+ (rt0.c0)))OR(t0.c0 COLLATE BINARY)))OR((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))))))AND(NULL)))AND(((t0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)))))OR(t0.c0)))AND((rt0.c3 IN ())))) UNION SELECT DISTINCT t0.c43, rt0.c3, rt0.c1 FROM t0 NOT INDEXED, v0, rt0 WHERE ((NOT ((((((((((((((+ (rt0.c0)))OR(t0.c0 COLLATE BINARY)))OR((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))))))AND(NULL)))AND(((t0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)))))OR(t0.c0)))AND((rt0.c3 IN ())))))) UNION SELECT DISTINCT t0.c43, rt0.c3, rt0.c1 FROM t0, v0, rt0 WHERE ((((((((((((((((+ (rt0.c0)))OR(t0.c0 COLLATE BINARY)))OR((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))))))AND(NULL)))AND(((t0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)))))OR(t0.c0)))AND((rt0.c3 IN ())))) ISNULL));
SELECT DISTINCT t0.c43, rt0.c3, rt0.c1 FROM t0, v0, rt0;
SELECT ALL rt0.c1, rt0.c2, t0.c43, vt0.c0, vt0.c1, t0.c0, v0.c0, rt0.c3, rt0.c0 FROM vt0, rt0, t0, v0 GROUP BY rt0.c1, rt0.c2, t0.c43, vt0.c0, vt0.c1, t0.c0, v0.c0, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, t0.c43, vt0.c0, vt0.c1, t0.c0, v0.c0, rt0.c3, rt0.c0 FROM vt0, rt0, t0, v0 WHERE ((rt0.c1 IN ())) GROUP BY rt0.c1, rt0.c2, t0.c43, vt0.c0, vt0.c1, t0.c0, v0.c0, rt0.c3, rt0.c0 UNION SELECT rt0.c1, rt0.c2, t0.c43, vt0.c0, vt0.c1, t0.c0, v0.c0, rt0.c3, rt0.c0 FROM vt0, rt0, t0, v0 WHERE ((NOT ((rt0.c1 IN ())))) GROUP BY rt0.c1, rt0.c2, t0.c43, vt0.c0, vt0.c1, t0.c0, v0.c0, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, t0.c43, vt0.c0, vt0.c1, t0.c0, v0.c0, rt0.c3, rt0.c0 FROM vt0, rt0, t0, v0 WHERE ((((rt0.c1 IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c2, t0.c43, vt0.c0, vt0.c1, t0.c0, v0.c0, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, t0.c43, vt0.c0, vt0.c1, t0.c0, v0.c0, rt0.c3, rt0.c0 FROM vt0, rt0, t0, v0 GROUP BY rt0.c1, rt0.c2, t0.c43, vt0.c0, vt0.c1, t0.c0, v0.c0, rt0.c3, rt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt0 RIGHT OUTER JOIN v0 ON UNLIKELY((+ (rt0.c0))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, vt0 RIGHT OUTER JOIN v0 ON UNLIKELY((+ (rt0.c0))) GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM rt0, vt0 RIGHT OUTER JOIN v0 ON UNLIKELY((+ (rt0.c0))) GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM rt0, vt0 RIGHT OUTER JOIN v0 ON UNLIKELY((+ (rt0.c0))) GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM rt0, vt0 RIGHT OUTER JOIN v0 ON UNLIKELY((+ (rt0.c0))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, vt0 RIGHT OUTER JOIN v0 ON UNLIKELY((+ (rt0.c0))) GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM rt0, vt0 RIGHT OUTER JOIN v0 ON UNLIKELY((+ (rt0.c0))) GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM rt0, vt0 RIGHT OUTER JOIN v0 ON UNLIKELY((+ (rt0.c0))) GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM rt0, vt0 RIGHT OUTER JOIN v0 ON UNLIKELY((+ (rt0.c0))) GROUP BY vt0.c0;
SELECT ALL * FROM vt0, v0 INNER JOIN t0 ON ((((rt0.c3)*(rt0.c1)))-((('*(^g?')|(rt0.c1)))) INNER JOIN rt0 ON ((((((((((((t0.c43)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(((rt0.c0) BETWEEN (x'') AND (t0.c43)))))OR(t0.c0 COLLATE NOCASE));
SELECT * FROM vt0, v0 INNER JOIN t0 ON ((((rt0.c3)*(rt0.c1)))-((('*(^g?')|(rt0.c1)))) INNER JOIN rt0 ON ((((((((((((t0.c43)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(((rt0.c0) BETWEEN (x'') AND (t0.c43)))))OR(t0.c0 COLLATE NOCASE)) WHERE (((((rt0.c3)||(rt0.c0)))GLOB(((vt0.c1)>(rt0.c0))))) UNION ALL SELECT * FROM vt0, v0 INNER JOIN t0 ON ((((rt0.c3)*(rt0.c1)))-((('*(^g?')|(rt0.c1)))) INNER JOIN rt0 ON ((((((((((((t0.c43)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(((rt0.c0) BETWEEN (x'') AND (t0.c43)))))OR(t0.c0 COLLATE NOCASE)) WHERE ((NOT (((((rt0.c3)||(rt0.c0)))GLOB(((vt0.c1)>(rt0.c0))))))) UNION ALL SELECT ALL * FROM vt0, v0 INNER JOIN t0 ON ((((rt0.c3)*(rt0.c1)))-((('*(^g?')|(rt0.c1)))) INNER JOIN rt0 ON ((((((((((((t0.c43)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(((rt0.c0) BETWEEN (x'') AND (t0.c43)))))OR(t0.c0 COLLATE NOCASE)) WHERE (((((((rt0.c3)||(rt0.c0)))GLOB(((vt0.c1)>(rt0.c0))))) ISNULL));
SELECT ALL * FROM vt0, v0 INNER JOIN t0 ON ((((rt0.c3)*(rt0.c1)))-((('*(^g?')|(rt0.c1)))) INNER JOIN rt0 ON ((((((((((((t0.c43)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(((rt0.c0) BETWEEN (x'') AND (t0.c43)))))OR(t0.c0 COLLATE NOCASE));
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT vt0.c0 FROM vt0, t0, v0, rt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0, v0, rt0 WHERE ((((((vt0.c0, v0.c0, rt0.c1)) BETWEEN (('-1902259892', rt0.c3, vt0.c0)) AND ((rt0.c1, t0.c43, t0.c43))))-(((rt0.c3)IS(rt0.c3))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t0, v0, rt0 WHERE ((NOT ((((((vt0.c0, v0.c0, rt0.c1)) BETWEEN (('-1902259892', rt0.c3, vt0.c0)) AND ((rt0.c1, t0.c43, t0.c43))))-(((rt0.c3)IS(rt0.c3))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t0, v0, rt0 WHERE ((((((((vt0.c0, v0.c0, rt0.c1)) BETWEEN (('-1902259892', rt0.c3, vt0.c0)) AND ((rt0.c1, t0.c43, t0.c43))))-(((rt0.c3)IS(rt0.c3))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0, v0, rt0 GROUP BY vt0.c0;
SELECT rt0.c1, t0.c0, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c2;
SELECT rt0.c1, t0.c0, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c2 HAVING ((((((t0.c0)AND(rt0.c2)))AND(MIN(SUM(rt0.c0)))))<(GROUP_CONCAT(AVG(MIN(MAX(0.9213997401544318)))))) UNION ALL SELECT rt0.c1, t0.c0, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c2 HAVING (NOT (((((((t0.c0)AND(rt0.c2)))AND(MIN(SUM(rt0.c0)))))<(GROUP_CONCAT(AVG(MIN(MAX(0.9213997401544318)))))))) UNION ALL SELECT rt0.c1, t0.c0, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c2 HAVING ((((((((t0.c0)AND(rt0.c2)))AND(MIN(SUM(rt0.c0)))))<(GROUP_CONCAT(AVG(MIN(MAX(0.9213997401544318))))))) ISNULL);
SELECT * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE ((t0.c0 IN ()) COLLATE RTRIM) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((NOT ((t0.c0 IN ()) COLLATE RTRIM))) UNION ALL SELECT * FROM v0, t0 WHERE ((((t0.c0 IN ()) COLLATE RTRIM) ISNULL));
SELECT * FROM v0, t0;
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c1 END THEN (('-1367658456') NOTNULL) END) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((NOT (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c1 END THEN (('-1367658456') NOTNULL) END))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c1 END THEN (('-1367658456') NOTNULL) END) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END  WHEN ((vt0.c0) BETWEEN ('0.9213997401544318') AND (vt0.c1)) THEN LIKE(vt0.c1, vt0.c1, '*') ELSE (- (NULL)) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END  WHEN ((vt0.c0) BETWEEN ('0.9213997401544318') AND (vt0.c1)) THEN LIKE(vt0.c1, vt0.c1, '*') ELSE (- (NULL)) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END  WHEN ((vt0.c0) BETWEEN ('0.9213997401544318') AND (vt0.c1)) THEN LIKE(vt0.c1, vt0.c1, '*') ELSE (- (NULL)) END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM v0, t0, rt0;
SELECT * FROM v0, t0, rt0 WHERE (CASE CASE WHEN t0.c43 THEN t0.c0 END  WHEN (~ (v0.c0)) THEN t0.c43 COLLATE NOCASE END) UNION ALL SELECT ALL * FROM v0, t0, rt0 WHERE ((NOT (CASE CASE WHEN t0.c43 THEN t0.c0 END  WHEN (~ (v0.c0)) THEN t0.c43 COLLATE NOCASE END))) UNION ALL SELECT ALL * FROM v0, t0, rt0 WHERE (((CASE CASE WHEN t0.c43 THEN t0.c0 END  WHEN (~ (v0.c0)) THEN t0.c43 COLLATE NOCASE END) ISNULL));
SELECT ALL * FROM v0, t0, rt0;
SELECT DISTINCT * FROM rt0, vt0, v0, t0;
SELECT DISTINCT * FROM rt0, vt0, v0, t0 WHERE ((~ (CAST(rt0.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM rt0, vt0, v0, t0 WHERE ((NOT ((~ (CAST(rt0.c0 AS BLOB)))))) UNION SELECT DISTINCT * FROM rt0, vt0, v0, t0 WHERE ((((~ (CAST(rt0.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, v0, t0;
SELECT ALL t0.c43, v0.c0, t0.c0 FROM v0 CROSS JOIN t0 ON ((((t0.c0)OR(t0.c43)))IS NOT(((NULL) ISNULL))) GROUP BY t0.c43, v0.c0, t0.c0;
SELECT ALL t0.c43, v0.c0, t0.c0 FROM v0 CROSS JOIN t0 ON ((((t0.c0)OR(t0.c43)))IS NOT(((NULL) ISNULL))) WHERE ((NOT (((t0.c43)==(t0.c43))))) GROUP BY t0.c43, v0.c0, t0.c0 UNION SELECT ALL t0.c43, v0.c0, t0.c0 FROM v0 CROSS JOIN t0 ON ((((t0.c0)OR(t0.c43)))IS NOT(((NULL) ISNULL))) WHERE ((NOT ((NOT (((t0.c43)==(t0.c43))))))) GROUP BY t0.c43, v0.c0, t0.c0 UNION SELECT t0.c43, v0.c0, t0.c0 FROM v0 CROSS JOIN t0 ON ((((t0.c0)OR(t0.c43)))IS NOT(((NULL) ISNULL))) WHERE ((((NOT (((t0.c43)=(t0.c43))))) ISNULL)) GROUP BY t0.c43, v0.c0, t0.c0;
SELECT ALL t0.c43, v0.c0, t0.c0 FROM v0 CROSS JOIN t0 ON ((((t0.c0)OR(t0.c43)))IS NOT(((NULL) ISNULL))) GROUP BY t0.c43, v0.c0, t0.c0;
SELECT ALL t0.c0, t0.c43, v0.c0 FROM rt0, t0, v0 GROUP BY t0.c0, t0.c43, v0.c0;
SELECT t0.c0, t0.c43, v0.c0 FROM rt0, t0, v0 GROUP BY t0.c0, t0.c43, v0.c0 HAVING COUNT(COUNT(*) COLLATE BINARY) UNION ALL SELECT ALL t0.c0, t0.c43, v0.c0 FROM rt0, t0, v0 GROUP BY t0.c0, t0.c43, v0.c0 HAVING (NOT (COUNT(COUNT(*) COLLATE BINARY))) UNION ALL SELECT t0.c0, t0.c43, v0.c0 FROM rt0, t0, v0 GROUP BY t0.c0, t0.c43, v0.c0 HAVING ((COUNT(COUNT(*) COLLATE BINARY)) ISNULL);
SELECT * FROM rt0, v0, t0, vt0;
SELECT ALL * FROM rt0, v0, t0, vt0 WHERE ((((v0.c0)) BETWEEN (((+ (rt0.c0)))) AND ((((t0.c0)>=(t0.c43)))))) UNION ALL SELECT * FROM rt0, v0, t0, vt0 WHERE ((NOT ((((v0.c0)) BETWEEN (((+ (rt0.c0)))) AND ((((t0.c0)>=(t0.c43)))))))) UNION ALL SELECT ALL * FROM rt0, v0, t0, vt0 WHERE ((((((v0.c0)) BETWEEN (((+ (rt0.c0)))) AND ((((t0.c0)>=(t0.c43)))))) ISNULL));
SELECT * FROM rt0, v0, t0, vt0;
SELECT DISTINCT * FROM v0, t0 INDEXED BY i4, rt0, vt0;
SELECT DISTINCT * FROM v0, t0 INDEXED BY i4, rt0, vt0 WHERE (CASE WHEN (+ (rt0.c2)) THEN CASE rt0.c3  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN 'E!J?C(' THEN rt0.c3 ELSE t0.c0 END END) UNION SELECT DISTINCT * FROM v0, t0 INDEXED BY i4, rt0, vt0 WHERE ((NOT (CASE WHEN (+ (rt0.c2)) THEN CASE rt0.c3  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN 'E!J?C(' THEN rt0.c3 ELSE t0.c0 END END))) UNION SELECT DISTINCT * FROM v0, t0 INDEXED BY i4, rt0, vt0 WHERE (((CASE WHEN (+ (rt0.c2)) THEN CASE rt0.c3  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN 'E!J?C(' THEN rt0.c3 ELSE t0.c0 END END) ISNULL));
SELECT DISTINCT * FROM v0, t0 INDEXED BY i4, rt0, vt0;
SELECT rt0.c1, rt0.c2, rt0.c0, vt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c1, rt0.c3, vt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, vt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0 WHERE ((json_array(rt0.c2, rt0.c0) IN (((rt0.c0)IS NOT(rt0.c2))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c1, rt0.c3, vt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0, vt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((json_array(rt0.c2, rt0.c0) IN (((rt0.c0)IS NOT(rt0.c2))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c1, rt0.c3, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0 WHERE ((((json_array(rt0.c2, rt0.c0) IN (((rt0.c0)IS NOT(rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c1, rt0.c3, vt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, vt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c1, rt0.c3, vt0.c0;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 HAVING COUNT(CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 HAVING (NOT (COUNT(CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 HAVING ((COUNT(CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END)) ISNULL);
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 HAVING COUNT(CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 HAVING (NOT (COUNT(CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 HAVING ((COUNT(CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END)) ISNULL);
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c0, vt0.c0, t0.c0, rt0.c1 FROM t0, rt0, vt0;
SELECT ALL rt0.c0, vt0.c0, t0.c0, rt0.c1 FROM t0, rt0, vt0 WHERE (rt0.c0) UNION ALL SELECT ALL rt0.c0, vt0.c0, t0.c0, rt0.c1 FROM t0, rt0, vt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL rt0.c0, vt0.c0, t0.c0, rt0.c1 FROM t0, rt0, vt0 WHERE (((rt0.c0) ISNULL));
SELECT rt0.c0, vt0.c0, t0.c0, rt0.c1 FROM t0, rt0, vt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE ((- (TRIM(rt0.c0, t0.c0)))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT ((- (TRIM(rt0.c0, t0.c0)))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((((- (TRIM(rt0.c0, t0.c0)))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL rt0.c3, rt0.c1, v0.c0, vt0.c1, rt0.c0 FROM rt0, vt0 RIGHT OUTER JOIN t0 ON ((((CAST(t0.c0 AS TEXT))OR(0.14314112882128915)))OR((NOT (t0.c43)))) INNER JOIN v0 ON CASE WHEN ((((t0.c43)OR(rt0.c0)))OR(t0.c0)) THEN CAST(t0.c43 AS TEXT) END GROUP BY rt0.c3, rt0.c1, v0.c0, vt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c1, v0.c0, vt0.c1, rt0.c0 FROM rt0, vt0 RIGHT OUTER JOIN t0 ON ((((CAST(t0.c0 AS TEXT))OR(0.14314112882128915)))OR((NOT (t0.c43)))) INNER JOIN v0 ON CASE WHEN ((((t0.c43)OR(rt0.c0)))OR(t0.c0)) THEN CAST(t0.c43 AS TEXT) END WHERE (t0.c0) GROUP BY rt0.c3, rt0.c1, v0.c0, vt0.c1, rt0.c0 UNION SELECT rt0.c3, rt0.c1, v0.c0, vt0.c1, rt0.c0 FROM rt0, vt0 RIGHT OUTER JOIN t0 ON ((((CAST(t0.c0 AS TEXT))OR(0.14314112882128915)))OR((NOT (t0.c43)))) INNER JOIN v0 ON CASE WHEN ((((t0.c43)OR(rt0.c0)))OR(t0.c0)) THEN CAST(t0.c43 AS TEXT) END WHERE ((NOT (t0.c0))) GROUP BY rt0.c3, rt0.c1, v0.c0, vt0.c1, rt0.c0 UNION SELECT rt0.c3, rt0.c1, v0.c0, vt0.c1, rt0.c0 FROM rt0, vt0 RIGHT OUTER JOIN t0 ON ((((CAST(t0.c0 AS TEXT))OR(0.14314112882128915)))OR((NOT (t0.c43)))) INNER JOIN v0 ON CASE WHEN ((((t0.c43)OR(rt0.c0)))OR(t0.c0)) THEN CAST(t0.c43 AS TEXT) END WHERE (((t0.c0) ISNULL)) GROUP BY rt0.c3, rt0.c1, v0.c0, vt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c1, v0.c0, vt0.c1, rt0.c0 FROM rt0, vt0 RIGHT OUTER JOIN t0 ON ((((CAST(t0.c0 AS TEXT))OR(0.14314112882128915)))OR((NOT (t0.c43)))) INNER JOIN v0 ON CASE WHEN ((((t0.c43)OR(rt0.c0)))OR(t0.c0)) THEN CAST(t0.c43 AS TEXT) END GROUP BY rt0.c3, rt0.c1, v0.c0, vt0.c1, rt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (- (AVG(SUM(x'53c4')))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((- (AVG(SUM(x'53c4')))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((- (AVG(SUM(x'53c4'))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c3))) COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c3))) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c3))) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((0x560804a8)+(rt0.c2)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((0X560804a8)+(rt0.c2)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((0X560804a8)+(rt0.c2)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c1 FROM v0 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c0) IS FALSE) AS INTEGER) GROUP BY vt0.c1;
SELECT vt0.c1 FROM v0 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c0) IS FALSE) AS INTEGER) WHERE (CAST(0.35706110507116173 AS BLOB)) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM v0 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c0) IS FALSE) AS INTEGER) WHERE ((NOT (CAST(0.35706110507116173 AS BLOB)))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM v0 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c0) IS FALSE) AS INTEGER) WHERE (((CAST(0.35706110507116173 AS BLOB)) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM v0 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c0) IS FALSE) AS INTEGER) GROUP BY vt0.c1;
SELECT ALL t0.c43, vt0.c1 FROM t0, vt0 GROUP BY t0.c43, vt0.c1;
SELECT t0.c43, vt0.c1 FROM t0, vt0 GROUP BY t0.c43, vt0.c1 HAVING ((COUNT(*)) NOT BETWEEN (((((COUNT(*))AND(t0.c0)))AND(TOTAL(vt0.c0)))) AND (CAST(t0.c0 AS NUMERIC))) UNION ALL SELECT ALL t0.c43, vt0.c1 FROM t0, vt0 GROUP BY t0.c43, vt0.c1 HAVING (NOT (((COUNT(*)) NOT BETWEEN (((((COUNT(*))AND(t0.c0)))AND(TOTAL(vt0.c0)))) AND (CAST(t0.c0 AS NUMERIC))))) UNION ALL SELECT t0.c43, vt0.c1 FROM t0, vt0 GROUP BY t0.c43, vt0.c1 HAVING ((((COUNT(*)) NOT BETWEEN (((((COUNT(*))AND(t0.c0)))AND(TOTAL(vt0.c0)))) AND (CAST(t0.c0 AS NUMERIC)))) ISNULL);
SELECT ALL t0.c43, vt0.c1 FROM t0, vt0 GROUP BY t0.c43, vt0.c1;
SELECT t0.c43, vt0.c1 FROM t0, vt0 GROUP BY t0.c43, vt0.c1 HAVING ((COUNT(*)) NOT BETWEEN (((((COUNT(*))AND(t0.c0)))AND(TOTAL(vt0.c0)))) AND (CAST(t0.c0 AS NUMERIC))) UNION ALL SELECT ALL t0.c43, vt0.c1 FROM t0, vt0 GROUP BY t0.c43, vt0.c1 HAVING (NOT (((COUNT(*)) NOT BETWEEN (((((COUNT(*))AND(t0.c0)))AND(TOTAL(vt0.c0)))) AND (CAST(t0.c0 AS NUMERIC))))) UNION ALL SELECT t0.c43, vt0.c1 FROM t0, vt0 GROUP BY t0.c43, vt0.c1 HAVING ((((COUNT(*)) NOT BETWEEN (((((COUNT(*))AND(t0.c0)))AND(TOTAL(vt0.c0)))) AND (CAST(t0.c0 AS NUMERIC)))) ISNULL);
SELECT ALL t0.c43, vt0.c1 FROM t0, vt0 GROUP BY t0.c43, vt0.c1;
SELECT ALL * FROM v0, vt0, t0, rt0;
SELECT * FROM v0, vt0, t0, rt0 WHERE (0X411a31f1) UNION ALL SELECT * FROM v0, vt0, t0, rt0 WHERE ((NOT (0X411a31f1))) UNION ALL SELECT ALL * FROM v0, vt0, t0, rt0 WHERE (((0X411a31f1) ISNULL));
SELECT ALL * FROM v0, vt0, t0, rt0;
SELECT DISTINCT vt0.c1, rt0.c1, rt0.c2, vt0.c0, t0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)|(vt0.c1)))<>(((((rt0.c2)AND(NULL)))AND(rt0.c2)))) LEFT OUTER JOIN vt0 ON 0.30781654888790244 CROSS JOIN t0 ON (((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1))) COLLATE BINARY;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3, vt0.c1, vt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3, vt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3, vt0.c1, vt0.c0 FROM rt0, v0, vt0 WHERE (((((((vt0.c1)AND(rt0.c1)))AND('1443366056'))) BETWEEN (((((rt0.c1)AND(vt0.c1)))OR(rt0.c2))) AND (((((rt0.c0)OR(vt0.c1)))OR('0.6702220670161384'))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3, vt0.c1, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3, vt0.c1, vt0.c0 FROM rt0, v0, vt0 WHERE ((NOT (((((((vt0.c1)AND(rt0.c1)))AND('1443366056'))) BETWEEN (((((rt0.c1)AND(vt0.c1)))OR(rt0.c2))) AND (((((rt0.c0)OR(vt0.c1)))OR('0.6702220670161384'))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3, vt0.c1, vt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3, vt0.c1, vt0.c0 FROM rt0, v0, vt0 WHERE (((((((((vt0.c1)AND(rt0.c1)))AND('1443366056'))) BETWEEN (((((rt0.c1)AND(vt0.c1)))OR(rt0.c2))) AND (((((rt0.c0)OR(vt0.c1)))OR('0.6702220670161384'))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3, vt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3, vt0.c1, vt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3, vt0.c1, vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((x'')=(TYPEOF(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((x'')==(TYPEOF(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((x'')=(TYPEOF(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((x'')=(TYPEOF(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((x'')==(TYPEOF(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((x'')=(TYPEOF(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL SUM(rt0.c0) FROM rt0, vt0, t0;
SELECT rt0.c0, rt0.c3, t0.c0 FROM t0, vt0, rt0, v0;
SELECT ALL rt0.c0, rt0.c3, t0.c0 FROM t0, vt0, rt0 NOT INDEXED, v0 WHERE ((- (('F5*6/I鐌*h' IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c3, t0.c0 FROM t0, vt0, rt0, v0 WHERE ((NOT ((- (('F5*6/I鐌*h' IN ())))))) UNION ALL SELECT ALL rt0.c0, rt0.c3, t0.c0 FROM t0, vt0, rt0, v0 WHERE ((((- (('F5*6/I鐌*h' IN ())))) ISNULL));
SELECT rt0.c0, rt0.c3, t0.c0 FROM t0, vt0, rt0, v0;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON ((t0.c0) ISNULL);
SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON ((t0.c0) ISNULL) WHERE (((CASE WHEN v0.c0 THEN t0.c43 END) BETWEEN (((t0.c0)&(t0.c43))) AND (SQLITE_VERSION()))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON ((t0.c0) ISNULL) WHERE ((NOT (((CASE WHEN v0.c0 THEN t0.c43 END) BETWEEN (((t0.c0)&(t0.c43))) AND (SQLITE_VERSION()))))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON ((t0.c0) ISNULL) WHERE (((((CASE WHEN v0.c0 THEN t0.c43 END) BETWEEN (((t0.c0)&(t0.c43))) AND (SQLITE_VERSION()))) ISNULL));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON ((t0.c0) ISNULL);
SELECT ALL t0.c0, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c2;
SELECT t0.c0, rt0.c2 FROM t0, rt0 WHERE (rt0.c3) GROUP BY t0.c0, rt0.c2 UNION SELECT t0.c0, rt0.c2 FROM t0, rt0 WHERE ((NOT (rt0.c3))) GROUP BY t0.c0, rt0.c2 UNION SELECT ALL t0.c0, rt0.c2 FROM t0, rt0 WHERE (((rt0.c3) ISNULL)) GROUP BY t0.c0, rt0.c2;
SELECT ALL t0.c0, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c2;
SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT vt0.c1, vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c1, vt0.c0, v0.c0 HAVING SUM(MIN(TOTAL(vt0.c1))) UNION ALL SELECT vt0.c1, vt0.c0, v0.c0 FROM v0 NOT INDEXED, vt0 GROUP BY vt0.c1, vt0.c0, v0.c0 HAVING (NOT (SUM(MIN(TOTAL(vt0.c1))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c1, vt0.c0, v0.c0 HAVING ((SUM(MIN(TOTAL(vt0.c1)))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (((((((((((((((vt0.c0) NOTNULL))OR(((rt0.c1) ISNULL))))OR((- (rt0.c0)))))AND(((rt0.c1) BETWEEN ('') AND (vt0.c1)))))AND(CAST(NULL AS TEXT))))AND(0.8346626287609018)))OR((vt0.c1 IN ())))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (((((((((((((((vt0.c0) NOTNULL))OR(((rt0.c1) ISNULL))))OR((- (rt0.c0)))))AND(((rt0.c1) BETWEEN ('') AND (vt0.c1)))))AND(CAST(NULL AS TEXT))))AND(0.8346626287609018)))OR((vt0.c1 IN ())))))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((((((((((((((((vt0.c0) NOTNULL))OR(((rt0.c1) ISNULL))))OR((- (rt0.c0)))))AND(((rt0.c1) BETWEEN ('') AND (vt0.c1)))))AND(CAST(NULL AS TEXT))))AND(0.8346626287609018)))OR((vt0.c1 IN ())))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (CAST(((v0.c0)LIKE(vt0.c0)) AS INTEGER)) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ((NOT (CAST(((v0.c0)LIKE(vt0.c0)) AS INTEGER)))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (((CAST(((v0.c0)LIKE(vt0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT ALL rt0.c0, t0.c43, rt0.c1, rt0.c3 FROM v0, t0 LEFT OUTER JOIN rt0 ON ((((NULL) NOT BETWEEN (x'') AND (rt0.c2)))>>(CASE WHEN 0.8634332041404778 THEN t0.c0 END)) GROUP BY rt0.c0, t0.c43, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, t0.c43, rt0.c1, rt0.c3 FROM v0, t0 LEFT OUTER JOIN rt0 ON ((((NULL) NOT BETWEEN (x'') AND (rt0.c2)))>>(CASE WHEN 0.8634332041404778 THEN t0.c0 END)) WHERE (CASE (+ (t0.c0))  WHEN t0.c0 COLLATE BINARY THEN CAST(x'' AS REAL) WHEN 0.7850183517019191 THEN ((((rt0.c3)AND(rt0.c2)))AND(rt0.c0)) WHEN (((t0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0))) THEN (((rt0.c3, rt0.c1, t0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((t0.c43, rt0.c3, rt0.c0, rt0.c2, t0.c43)) AND ((rt0.c2, t0.c0, v0.c0, rt0.c0, t0.c0))) END) GROUP BY rt0.c0, t0.c43, rt0.c1, rt0.c3 UNION SELECT rt0.c0, t0.c43, rt0.c1, rt0.c3 FROM v0, t0 LEFT OUTER JOIN rt0 ON ((((NULL) NOT BETWEEN (x'') AND (rt0.c2)))>>(CASE WHEN 0.8634332041404778 THEN t0.c0 END)) WHERE ((NOT (CASE (+ (t0.c0))  WHEN t0.c0 COLLATE BINARY THEN CAST(x'' AS REAL) WHEN 0.7850183517019191 THEN ((((rt0.c3)AND(rt0.c2)))AND(rt0.c0)) WHEN (((t0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0))) THEN (((rt0.c3, rt0.c1, t0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((t0.c43, rt0.c3, rt0.c0, rt0.c2, t0.c43)) AND ((rt0.c2, t0.c0, v0.c0, rt0.c0, t0.c0))) END))) GROUP BY rt0.c0, t0.c43, rt0.c1, rt0.c3 UNION SELECT rt0.c0, t0.c43, rt0.c1, rt0.c3 FROM v0, t0 LEFT OUTER JOIN rt0 ON ((((NULL) NOT BETWEEN (x'') AND (rt0.c2)))>>(CASE WHEN 0.8634332041404778 THEN t0.c0 END)) WHERE (((CASE (+ (t0.c0))  WHEN t0.c0 COLLATE BINARY THEN CAST(x'' AS REAL) WHEN 0.7850183517019191 THEN ((((rt0.c3)AND(rt0.c2)))AND(rt0.c0)) WHEN (((t0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0))) THEN (((rt0.c3, rt0.c1, t0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((t0.c43, rt0.c3, rt0.c0, rt0.c2, t0.c43)) AND ((rt0.c2, t0.c0, v0.c0, rt0.c0, t0.c0))) END) ISNULL)) GROUP BY rt0.c0, t0.c43, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, t0.c43, rt0.c1, rt0.c3 FROM v0, t0 LEFT OUTER JOIN rt0 ON ((((NULL) NOT BETWEEN (x'') AND (rt0.c2)))>>(CASE WHEN 0.8634332041404778 THEN t0.c0 END)) GROUP BY rt0.c0, t0.c43, rt0.c1, rt0.c3;
SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0 HAVING ((COUNT(GROUP_CONCAT(SUM(MIN(MIN(MAX(TOTAL(COUNT(*)))))))) COLLATE RTRIM)|(COUNT(*))) UNION ALL SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0 HAVING (NOT (((COUNT(GROUP_CONCAT(SUM(MIN(MIN(MAX(TOTAL(COUNT(*)))))))) COLLATE RTRIM)|(COUNT(*))))) UNION ALL SELECT ALL v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0 HAVING ((((COUNT(GROUP_CONCAT(SUM(MIN(MIN(MAX(TOTAL(COUNT(*)))))))) COLLATE RTRIM)|(COUNT(*)))) ISNULL);
SELECT ALL t0.c43 FROM v0, t0, vt0;
SELECT ALL t0.c43 FROM v0, t0, vt0 WHERE ((((('-321469642')IS NOT(vt0.c0))) NOTNULL)) UNION ALL SELECT ALL t0.c43 FROM v0, t0, vt0 WHERE ((NOT ((((('-321469642')IS NOT(vt0.c0))) NOTNULL)))) UNION ALL SELECT ALL t0.c43 FROM v0, t0, vt0 WHERE ((((((('-321469642')IS NOT(vt0.c0))) NOTNULL)) ISNULL));
SELECT ALL t0.c43 FROM v0, t0, vt0;
SELECT DISTINCT * FROM v0, vt0, rt0, t0;
SELECT DISTINCT * FROM v0, vt0, rt0, t0 WHERE ((~ (((rt0.c0)>=(v0.c0))))) UNION SELECT DISTINCT * FROM v0, vt0, rt0, t0 WHERE ((NOT ((~ (((rt0.c0)>=(v0.c0))))))) UNION SELECT DISTINCT * FROM v0, vt0, rt0 NOT INDEXED, t0 WHERE ((((~ (((rt0.c0)>=(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, rt0, t0;
SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1, vt0.c1, vt0.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0, v0, rt0 WHERE ((~ (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN rt0.c1 END))) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1, vt0.c1, vt0.c0 UNION SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0, v0, rt0 WHERE ((NOT ((~ (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN rt0.c1 END))))) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1, vt0.c1, vt0.c0 UNION SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0, v0, rt0 WHERE ((((~ (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN rt0.c1 END))) ISNULL)) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1, vt0.c1, vt0.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1, vt0.c1, vt0.c0;
SELECT ALL t0.c43 FROM t0 GROUP BY t0.c43;
SELECT t0.c43 FROM t0 GROUP BY t0.c43 HAVING (NOT (COUNT(x'3629d6ba'))) COLLATE RTRIM UNION ALL SELECT ALL t0.c43 FROM t0 GROUP BY t0.c43 HAVING (NOT ((NOT (COUNT(x'3629d6ba'))) COLLATE RTRIM)) UNION ALL SELECT t0.c43 FROM t0 GROUP BY t0.c43 HAVING (((NOT (COUNT(x'3629d6ba'))) COLLATE RTRIM) ISNULL);
SELECT ALL t0.c43 FROM t0 GROUP BY t0.c43;
SELECT t0.c43 FROM t0 GROUP BY t0.c43 HAVING (NOT (COUNT(x'3629d6ba'))) COLLATE RTRIM UNION ALL SELECT ALL t0.c43 FROM t0 GROUP BY t0.c43 HAVING (NOT ((NOT (COUNT(x'3629d6ba'))) COLLATE RTRIM)) UNION ALL SELECT t0.c43 FROM t0 GROUP BY t0.c43 HAVING (((NOT (COUNT(x'3629d6ba'))) COLLATE RTRIM) ISNULL);
SELECT ALL t0.c43 FROM t0 GROUP BY t0.c43;
SELECT ALL t0.c43 FROM v0, t0;
SELECT t0.c43 FROM v0, t0 WHERE (CAST(((v0.c0)IS NOT(t0.c43)) AS NUMERIC)) UNION ALL SELECT ALL t0.c43 FROM v0, t0 WHERE ((NOT (CAST(((v0.c0)IS NOT(t0.c43)) AS NUMERIC)))) UNION ALL SELECT t0.c43 FROM v0, t0 WHERE (((CAST(((v0.c0)IS NOT(t0.c43)) AS NUMERIC)) ISNULL));
SELECT ALL t0.c43 FROM v0, t0;
SELECT DISTINCT vt0.c0, t0.c43, v0.c0, rt0.c0, rt0.c2, t0.c0, rt0.c3 FROM rt0, t0, vt0 LEFT OUTER JOIN v0 ON (0.12515131638581034 IN ());
SELECT DISTINCT vt0.c0, t0.c43, v0.c0, rt0.c0, rt0.c2, t0.c0, rt0.c3 FROM rt0, t0, vt0 LEFT OUTER JOIN v0 ON (0.12515131638581034 IN ()) WHERE ((NOT (((rt0.c2) NOT BETWEEN (vt0.c0) AND (t0.c43))))) UNION SELECT DISTINCT vt0.c0, t0.c43, v0.c0, rt0.c0, rt0.c2, t0.c0, rt0.c3 FROM rt0, t0, vt0 LEFT OUTER JOIN v0 ON (0.12515131638581034 IN ()) WHERE ((NOT ((NOT (((rt0.c2) NOT BETWEEN (vt0.c0) AND (t0.c43))))))) UNION SELECT DISTINCT vt0.c0, t0.c43, v0.c0, rt0.c0, rt0.c2, t0.c0, rt0.c3 FROM rt0, t0, vt0 LEFT OUTER JOIN v0 ON (0.12515131638581034 IN ()) WHERE ((((NOT (((rt0.c2) NOT BETWEEN (vt0.c0) AND (t0.c43))))) ISNULL));
SELECT DISTINCT vt0.c0, t0.c43, v0.c0, rt0.c0, rt0.c2, t0.c0, rt0.c3 FROM rt0, t0, vt0 LEFT OUTER JOIN v0 ON (0.12515131638581034 IN ());
SELECT ALL rt0.c1, rt0.c3, rt0.c0, t0.c0 FROM v0, rt0, t0 GROUP BY rt0.c1, rt0.c3, rt0.c0, t0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c0, t0.c0 FROM v0, rt0, t0 WHERE (CASE ((t0.c0)>>(rt0.c3))  WHEN -1889524004 THEN ((((t0.c0)OR(rt0.c0)))OR(rt0.c0)) ELSE ((t0.c43)IS(rt0.c2)) END) GROUP BY rt0.c1, rt0.c3, rt0.c0, t0.c0 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c0, t0.c0 FROM v0, rt0, t0 WHERE ((NOT (CASE ((t0.c0)>>(rt0.c3))  WHEN -1889524004 THEN ((((t0.c0)OR(rt0.c0)))OR(rt0.c0)) ELSE ((t0.c43)IS(rt0.c2)) END))) GROUP BY rt0.c1, rt0.c3, rt0.c0, t0.c0 UNION SELECT rt0.c1, rt0.c3, rt0.c0, t0.c0 FROM v0, rt0, t0 WHERE (((CASE ((t0.c0)>>(rt0.c3))  WHEN -1889524004 THEN ((((t0.c0)OR(rt0.c0)))OR(rt0.c0)) ELSE ((t0.c43)IS(rt0.c2)) END) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c0, t0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c0, t0.c0 FROM v0, rt0, t0 GROUP BY rt0.c1, rt0.c3, rt0.c0, t0.c0;
SELECT rt0.c3, rt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c3, rt0.c0 HAVING AVG(vt0.c0) COLLATE RTRIM UNION ALL SELECT rt0.c3, rt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c3, rt0.c0 HAVING (NOT (AVG(vt0.c0) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c3, rt0.c0 HAVING ((AVG(vt0.c0) COLLATE RTRIM) ISNULL);
SELECT rt0.c3, rt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c3, rt0.c0 HAVING AVG(vt0.c0) COLLATE RTRIM UNION ALL SELECT rt0.c3, rt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c3, rt0.c0 HAVING (NOT (AVG(vt0.c0) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c3, rt0.c0 HAVING ((AVG(vt0.c0) COLLATE RTRIM) ISNULL);
SELECT rt0.c3, rt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c3, rt0.c0;
SELECT rt0.c3, rt0.c2, t0.c0, rt0.c1 FROM t0, vt0, rt0, v0;
SELECT ALL rt0.c3, rt0.c2, t0.c0, rt0.c1 FROM t0, vt0, rt0, v0 WHERE ((((~ (vt0.c1))) BETWEEN ((((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND ((((v0.c0)) NOT BETWEEN ((t0.c43)) AND ((t0.c0)))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, t0.c0, rt0.c1 FROM t0, vt0, rt0, v0 WHERE ((NOT ((((~ (vt0.c1))) BETWEEN ((((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND ((((v0.c0)) NOT BETWEEN ((t0.c43)) AND ((t0.c0)))))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, t0.c0, rt0.c1 FROM t0, vt0, rt0, v0 WHERE ((((((~ (vt0.c1))) BETWEEN ((((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND ((((v0.c0)) NOT BETWEEN ((t0.c43)) AND ((t0.c0)))))) ISNULL));
SELECT rt0.c3, rt0.c2, t0.c0, rt0.c1 FROM t0, vt0, rt0, v0;
SELECT DISTINCT rt0.c2, rt0.c1, t0.c43, vt0.c0, v0.c0, rt0.c0 FROM v0, t0 CROSS JOIN rt0 ON json_insert(v0.c0, ((t0.c43) NOT BETWEEN (rt0.c1) AND (rt0.c1)), rt0.c2 COLLATE RTRIM) RIGHT OUTER JOIN vt0 ON ((CHAR(vt0.c0))>(((t0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))));
SELECT vt0.c0 FROM vt0, rt0, t0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt0, t0, v0 WHERE (((json_array_length(rt0.c3, vt0.c0))|(CASE t0.c43  WHEN t0.c0 THEN 2.061326814E9 END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, rt0, t0, v0 WHERE ((NOT (((json_array_length(rt0.c3, vt0.c0))|(CASE t0.c43  WHEN t0.c0 THEN 2.061326814E9 END))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, rt0, t0, v0 WHERE (((((json_array_length(rt0.c3, vt0.c0))|(CASE t0.c43  WHEN t0.c0 THEN 2.061326814E9 END))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt0, t0, v0 GROUP BY vt0.c0;
SELECT t0.c0, t0.c43, rt0.c2, rt0.c0, rt0.c1 FROM t0, v0, rt0 GROUP BY t0.c0, t0.c43, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL t0.c0, t0.c43, rt0.c2, rt0.c0, rt0.c1 FROM t0, v0, rt0 GROUP BY t0.c0, t0.c43, rt0.c2, rt0.c0, rt0.c1 HAVING (((rt0.c1, AVG(SUM(rt0.c0)), NULL)) BETWEEN ((((rt0.c1)>=(rt0.c1)), COUNT(*), CASE GROUP_CONCAT(MIN(rt0.c3))  WHEN COUNT(*) THEN rt0.c3 ELSE rt0.c0 END)) AND ((COUNT(rt0.c1), ((TOTAL(rt0.c0)) NOTNULL), HEX(DISTINCT rt0.c2)))) UNION ALL SELECT t0.c0, t0.c43, rt0.c2, rt0.c0, rt0.c1 FROM t0, v0, rt0 GROUP BY t0.c0, t0.c43, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((((rt0.c1, AVG(SUM(rt0.c0)), NULL)) BETWEEN ((((rt0.c1)>=(rt0.c1)), COUNT(*), CASE GROUP_CONCAT(MIN(rt0.c3))  WHEN COUNT(*) THEN rt0.c3 ELSE rt0.c0 END)) AND ((COUNT(rt0.c1), ((TOTAL(rt0.c0)) NOTNULL), HEX(DISTINCT rt0.c2)))))) UNION ALL SELECT t0.c0, t0.c43, rt0.c2, rt0.c0, rt0.c1 FROM t0, v0, rt0 GROUP BY t0.c0, t0.c43, rt0.c2, rt0.c0, rt0.c1 HAVING (((((rt0.c1, AVG(SUM(rt0.c0)), NULL)) BETWEEN ((((rt0.c1)>=(rt0.c1)), COUNT(*), CASE GROUP_CONCAT(MIN(rt0.c3))  WHEN COUNT(*) THEN rt0.c3 ELSE rt0.c0 END)) AND ((COUNT(rt0.c1), ((TOTAL(rt0.c0)) NOTNULL), HEX(DISTINCT rt0.c2))))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (((((0.8567836046133451)<<(rt0.c2)))>(((rt0.c1)IS NOT(0.5368137146724354))))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (((((0.8567836046133451)<<(rt0.c2)))>(((rt0.c1)IS NOT(0.5368137146724354))))))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((((((0.8567836046133451)<<(rt0.c2)))>(((rt0.c1)IS NOT(0.5368137146724354))))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT t0.c43 FROM t0;
SELECT DISTINCT t0.c43 FROM t0 WHERE (((t0.c43) NOT NULL) COLLATE BINARY) UNION SELECT DISTINCT t0.c43 FROM t0 WHERE ((NOT (((t0.c43) NOT NULL) COLLATE BINARY))) UNION SELECT DISTINCT t0.c43 FROM t0 WHERE (((((t0.c43) NOT NULL) COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c43 FROM t0;
SELECT v0.c0, t0.c43, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c43, t0.c0;
SELECT v0.c0, t0.c43, t0.c0 FROM v0, t0 WHERE (((CAST(t0.c43 AS BLOB))IS NOT(CASE WHEN NULL THEN t0.c0 END))) GROUP BY v0.c0, t0.c43, t0.c0 UNION SELECT v0.c0, t0.c43, t0.c0 FROM v0, t0 WHERE ((NOT (((CAST(t0.c43 AS BLOB))IS NOT(CASE WHEN NULL THEN t0.c0 END))))) GROUP BY v0.c0, t0.c43, t0.c0 UNION SELECT ALL v0.c0, t0.c43, t0.c0 FROM v0, t0 WHERE (((((CAST(t0.c43 AS BLOB))IS NOT(CASE WHEN NULL THEN t0.c0 END))) ISNULL)) GROUP BY v0.c0, t0.c43, t0.c0;
SELECT v0.c0, t0.c43, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c43, t0.c0;
SELECT t0.c43 FROM t0 GROUP BY t0.c43;
SELECT t0.c43 FROM t0 GROUP BY t0.c43 HAVING ((t0.c0 COLLATE RTRIM) BETWEEN (SUM(COUNT(*))) AND (COUNT(TOTAL(t0.c0)))) UNION ALL SELECT ALL t0.c43 FROM t0 GROUP BY t0.c43 HAVING (NOT (((t0.c0 COLLATE RTRIM) BETWEEN (SUM(COUNT(*))) AND (COUNT(TOTAL(t0.c0)))))) UNION ALL SELECT ALL t0.c43 FROM t0 GROUP BY t0.c43 HAVING ((((t0.c0 COLLATE RTRIM) BETWEEN (SUM(COUNT(*))) AND (COUNT(TOTAL(t0.c0))))) ISNULL);
SELECT ALL v0.c0, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON NULL;
SELECT ALL v0.c0, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON NULL WHERE (CAST(((((v0.c0)AND(t0.c43)))OR(t0.c0)) AS REAL)) UNION ALL SELECT v0.c0, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON NULL WHERE ((NOT (CAST(((((v0.c0)AND(t0.c43)))OR(t0.c0)) AS REAL)))) UNION ALL SELECT v0.c0, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON NULL WHERE (((CAST(((((v0.c0)AND(t0.c43)))OR(t0.c0)) AS REAL)) ISNULL));
SELECT ALL v0.c0, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON NULL;
SELECT DISTINCT * FROM t0, v0, rt0;
SELECT DISTINCT * FROM t0, v0, rt0 WHERE (t0.c43) UNION SELECT DISTINCT * FROM t0, v0, rt0 WHERE ((NOT (t0.c43))) UNION SELECT DISTINCT * FROM t0, v0, rt0 WHERE (((t0.c43) ISNULL));
SELECT DISTINCT * FROM t0, v0, rt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((- (vt0.c0)) COLLATE NOCASE) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((- (vt0.c0)) COLLATE NOCASE))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((- (vt0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 NOT INDEXED, v0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING COUNT(*) COLLATE BINARY UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING (NOT (COUNT(*) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING ((COUNT(*) COLLATE BINARY) ISNULL);
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 NOT INDEXED, v0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING COUNT(*) COLLATE BINARY UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING (NOT (COUNT(*) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING ((COUNT(*) COLLATE BINARY) ISNULL);
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 NOT INDEXED, v0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((UPPER(rt0.c3) IN ())) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((UPPER(rt0.c3) IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((((UPPER(rt0.c3) IN ())) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM v0, t0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM v0, t0 NATURAL JOIN rt0 WHERE (CAST(((rt0.c1)%(rt0.c1)) AS INTEGER)) UNION SELECT DISTINCT * FROM v0, t0 NATURAL JOIN rt0 WHERE ((NOT (CAST(((rt0.c1)%(rt0.c1)) AS INTEGER)))) UNION SELECT DISTINCT * FROM v0, t0 NOT INDEXED NATURAL JOIN rt0 WHERE (((CAST(((rt0.c1)%(rt0.c1)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM v0, t0 NATURAL JOIN rt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (vt0.c1) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL rt0.c3 FROM rt0, v0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0, v0 GROUP BY rt0.c3 HAVING MIN(CASE rt0.c1  WHEN MIN(TOTAL(SUM(TOTAL(rt0.c2)))) THEN COUNT('') ELSE rt0.c1 END) UNION ALL SELECT ALL rt0.c3 FROM rt0, v0 GROUP BY rt0.c3 HAVING (NOT (MIN(CASE rt0.c1  WHEN MIN(TOTAL(SUM(TOTAL(rt0.c2)))) THEN COUNT('') ELSE rt0.c1 END))) UNION ALL SELECT rt0.c3 FROM rt0, v0 GROUP BY rt0.c3 HAVING ((MIN(CASE rt0.c1  WHEN MIN(TOTAL(SUM(TOTAL(rt0.c2)))) THEN COUNT('') ELSE rt0.c1 END)) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (CASE (+ (v0.c0))  WHEN (v0.c0 IN ()) THEN v0.c0 COLLATE RTRIM WHEN (v0.c0 IN (v0.c0)) THEN v0.c0 COLLATE NOCASE WHEN v0.c0 THEN 0.830797226252091 ELSE (((v0.c0, x'', v0.c0))>=((v0.c0, v0.c0, v0.c0))) END) UNION ALL SELECT * FROM v0 WHERE ((NOT (CASE (+ (v0.c0))  WHEN (v0.c0 IN ()) THEN v0.c0 COLLATE RTRIM WHEN (v0.c0 IN (v0.c0)) THEN v0.c0 COLLATE NOCASE WHEN v0.c0 THEN 0.830797226252091 ELSE (((v0.c0, x'', v0.c0))>=((v0.c0, v0.c0, v0.c0))) END))) UNION ALL SELECT ALL * FROM v0 WHERE (((CASE (+ (v0.c0))  WHEN (v0.c0 IN ()) THEN v0.c0 COLLATE RTRIM WHEN (v0.c0 IN (v0.c0)) THEN v0.c0 COLLATE NOCASE WHEN v0.c0 THEN 0.830797226252091 ELSE (((v0.c0, x'', v0.c0))>=((v0.c0, v0.c0, v0.c0))) END) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c3 FROM rt0, t0;
SELECT DISTINCT rt0.c3 FROM rt0, t0 WHERE (NULL) UNION SELECT DISTINCT rt0.c3 FROM rt0, t0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c3 FROM rt0, t0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c3 FROM rt0, t0;
SELECT vt0.c0, v0.c0, vt0.c1, t0.c43, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((0.9926803861758917)AND(vt0.c0)) INNER JOIN v0 ON TYPEOF(((v0.c0)/(NULL))) GROUP BY vt0.c0, v0.c0, vt0.c1, t0.c43, t0.c0;
SELECT vt0.c0, v0.c0, vt0.c1, t0.c43, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((0.9926803861758917)AND(vt0.c0)) INNER JOIN v0 ON TYPEOF(((v0.c0)/(NULL))) WHERE ((NULL IN ())) GROUP BY vt0.c0, v0.c0, vt0.c1, t0.c43, t0.c0 UNION SELECT ALL vt0.c0, v0.c0, vt0.c1, t0.c43, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((0.9926803861758917)AND(vt0.c0)) INNER JOIN v0 ON TYPEOF(((v0.c0)/(NULL))) WHERE ((NOT ((NULL IN ())))) GROUP BY vt0.c0, v0.c0, vt0.c1, t0.c43, t0.c0 UNION SELECT vt0.c0, v0.c0, vt0.c1, t0.c43, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((0.9926803861758917)AND(vt0.c0)) INNER JOIN v0 ON TYPEOF(((v0.c0)/(NULL))) WHERE ((((NULL IN ())) ISNULL)) GROUP BY vt0.c0, v0.c0, vt0.c1, t0.c43, t0.c0;
SELECT vt0.c0, v0.c0, vt0.c1, t0.c43, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((0.9926803861758917)AND(vt0.c0)) INNER JOIN v0 ON TYPEOF(((v0.c0)/(NULL))) GROUP BY vt0.c0, v0.c0, vt0.c1, t0.c43, t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(AVG(AVG(GROUP_CONCAT(AVG('0I'))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(AVG(AVG(GROUP_CONCAT(AVG('0I'))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(AVG(AVG(GROUP_CONCAT(AVG('0I')))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c3) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c3))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c3) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT t0.c0, t0.c43 FROM t0, v0 LEFT OUTER JOIN vt0 ON UNLIKELY(')>');
SELECT DISTINCT t0.c0, t0.c43 FROM t0, v0 LEFT OUTER JOIN vt0 ON UNLIKELY(')>') WHERE (((COALESCE(DISTINCT t0.c43, t0.c43))GLOB(vt0.c1 COLLATE BINARY))) UNION SELECT DISTINCT t0.c0, t0.c43 FROM t0, v0 LEFT OUTER JOIN vt0 ON UNLIKELY(')>') WHERE ((NOT (((COALESCE(DISTINCT t0.c43, t0.c43))GLOB(vt0.c1 COLLATE BINARY))))) UNION SELECT DISTINCT t0.c0, t0.c43 FROM t0, v0 LEFT OUTER JOIN vt0 ON UNLIKELY(')>') WHERE (((((COALESCE(DISTINCT t0.c43, t0.c43))GLOB(vt0.c1 COLLATE BINARY))) ISNULL));
SELECT DISTINCT t0.c0, t0.c43 FROM t0, v0 LEFT OUTER JOIN vt0 ON UNLIKELY(')>');
SELECT ALL t0.c43, rt0.c2, rt0.c1, rt0.c0, vt0.c0, rt0.c3 FROM vt0, v0 INNER JOIN rt0 ON (vt0.c0 IN ()) FULL OUTER JOIN t0 ON CASE WHEN ((rt0.c1)>(t0.c43)) THEN ((rt0.c2)AND(rt0.c0)) END GROUP BY t0.c43, rt0.c2, rt0.c1, rt0.c0, vt0.c0, rt0.c3;
SELECT ALL t0.c43, rt0.c2, rt0.c1, rt0.c0, vt0.c0, rt0.c3 FROM vt0, v0 INNER JOIN rt0 ON (vt0.c0 IN ()) FULL OUTER JOIN t0 ON CASE WHEN ((rt0.c1)>(t0.c43)) THEN ((rt0.c2)AND(rt0.c0)) END WHERE (((rt0.c1 COLLATE RTRIM)%(0xffffffffcd6802d9))) GROUP BY t0.c43, rt0.c2, rt0.c1, rt0.c0, vt0.c0, rt0.c3 UNION SELECT ALL t0.c43, rt0.c2, rt0.c1, rt0.c0, vt0.c0, rt0.c3 FROM vt0, v0 NOT INDEXED INNER JOIN rt0 ON (vt0.c0 IN ()) FULL OUTER JOIN t0 ON CASE WHEN ((rt0.c1)>(t0.c43)) THEN ((rt0.c2)AND(rt0.c0)) END WHERE ((NOT (((rt0.c1 COLLATE RTRIM)%(0Xffffffffcd6802d9))))) GROUP BY t0.c43, rt0.c2, rt0.c1, rt0.c0, vt0.c0, rt0.c3 UNION SELECT ALL t0.c43, rt0.c2, rt0.c1, rt0.c0, vt0.c0, rt0.c3 FROM vt0, v0 INNER JOIN rt0 ON (vt0.c0 IN ()) FULL OUTER JOIN t0 ON CASE WHEN ((rt0.c1)>(t0.c43)) THEN ((rt0.c2)AND(rt0.c0)) END WHERE (((((rt0.c1 COLLATE RTRIM)%(0Xffffffffcd6802d9))) ISNULL)) GROUP BY t0.c43, rt0.c2, rt0.c1, rt0.c0, vt0.c0, rt0.c3;
SELECT ALL t0.c43, rt0.c2, rt0.c1, rt0.c0, vt0.c0, rt0.c3 FROM vt0, v0 INNER JOIN rt0 ON (vt0.c0 IN ()) FULL OUTER JOIN t0 ON CASE WHEN ((rt0.c1)>(t0.c43)) THEN ((rt0.c2)AND(rt0.c0)) END GROUP BY t0.c43, rt0.c2, rt0.c1, rt0.c0, vt0.c0, rt0.c3;
SELECT rt0.c0, rt0.c3, vt0.c1, rt0.c2, t0.c43, vt0.c0, v0.c0 FROM v0 CROSS JOIN rt0 ON x'7640' CROSS JOIN vt0 ON ')8' CROSS JOIN t0 ON ((TOTAL_CHANGES()) BETWEEN (((((vt0.c0)OR(rt0.c2)))OR(t0.c43))) AND ((~ (v0.c0)))) GROUP BY rt0.c0, rt0.c3, vt0.c1, rt0.c2, t0.c43, vt0.c0, v0.c0;
SELECT ALL rt0.c0, rt0.c3, vt0.c1, rt0.c2, t0.c43, vt0.c0, v0.c0 FROM v0 CROSS JOIN rt0 ON x'7640' CROSS JOIN vt0 ON ')8' CROSS JOIN t0 ON ((TOTAL_CHANGES()) BETWEEN (((((vt0.c0)OR(rt0.c2)))OR(t0.c43))) AND ((~ (v0.c0)))) GROUP BY rt0.c0, rt0.c3, vt0.c1, rt0.c2, t0.c43, vt0.c0, v0.c0 HAVING ((CAST(GROUP_CONCAT(TOTAL(COUNT(MAX(vt0.c1)))) AS BLOB)) IS FALSE) UNION ALL SELECT rt0.c0, rt0.c3, vt0.c1, rt0.c2, t0.c43, vt0.c0, v0.c0 FROM v0 CROSS JOIN rt0 ON x'7640' CROSS JOIN vt0 ON ')8' CROSS JOIN t0 ON ((TOTAL_CHANGES()) BETWEEN (((((vt0.c0)OR(rt0.c2)))OR(t0.c43))) AND ((~ (v0.c0)))) GROUP BY rt0.c0, rt0.c3, vt0.c1, rt0.c2, t0.c43, vt0.c0, v0.c0 HAVING (NOT (((CAST(GROUP_CONCAT(TOTAL(COUNT(MAX(vt0.c1)))) AS BLOB)) IS FALSE))) UNION ALL SELECT rt0.c0, rt0.c3, vt0.c1, rt0.c2, t0.c43, vt0.c0, v0.c0 FROM v0 CROSS JOIN rt0 ON x'7640' CROSS JOIN vt0 ON ')8' CROSS JOIN t0 ON ((TOTAL_CHANGES()) BETWEEN (((((vt0.c0)OR(rt0.c2)))OR(t0.c43))) AND ((~ (v0.c0)))) GROUP BY rt0.c0, rt0.c3, vt0.c1, rt0.c2, t0.c43, vt0.c0, v0.c0 HAVING ((((CAST(GROUP_CONCAT(TOTAL(COUNT(MAX(vt0.c1)))) AS BLOB)) IS FALSE)) ISNULL);
SELECT rt0.c3, rt0.c1, rt0.c0 FROM t0, vt0, rt0, v0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM t0, vt0, rt0, v0 WHERE (((((rt0.c1) NOT BETWEEN (vt0.c1) AND ('峫Q')))!=((NOT (rt0.c1))))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0 FROM t0, vt0, rt0, v0 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (vt0.c1) AND ('峫Q')))!=((NOT (rt0.c1))))))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM t0, vt0, rt0, v0 WHERE (((((((rt0.c1) NOT BETWEEN (vt0.c1) AND ('峫Q')))!=((NOT (rt0.c1))))) ISNULL));
SELECT rt0.c3, rt0.c1, rt0.c0 FROM t0, vt0, rt0, v0;
SELECT DISTINCT * FROM v0, rt0, vt0;
SELECT DISTINCT * FROM v0, rt0, vt0 WHERE (((((rt0.c3, rt0.c1, vt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c2)) AND ((rt0.c1, vt0.c1, rt0.c0))) IN ())) UNION SELECT DISTINCT * FROM v0, rt0, vt0 WHERE ((NOT (((((rt0.c3, rt0.c1, vt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c2)) AND ((rt0.c1, vt0.c1, rt0.c0))) IN ())))) UNION SELECT DISTINCT * FROM v0, rt0, vt0 WHERE (((((((rt0.c3, rt0.c1, vt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c2)) AND ((rt0.c1, vt0.c1, rt0.c0))) IN ())) ISNULL));
SELECT DISTINCT * FROM v0, rt0, vt0;
SELECT rt0.c0, t0.c43, t0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON ((((((t0.c0)AND(rt0.c2)))OR(rt0.c2))) NOTNULL) GROUP BY rt0.c0, t0.c43, t0.c0, rt0.c2;
SELECT ALL rt0.c0, t0.c43, t0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON ((((((t0.c0)AND(rt0.c2)))OR(rt0.c2))) NOTNULL) WHERE ((CAST(t0.c0 AS INTEGER) IN ())) GROUP BY rt0.c0, t0.c43, t0.c0, rt0.c2 UNION SELECT ALL rt0.c0, t0.c43, t0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON ((((((t0.c0)AND(rt0.c2)))OR(rt0.c2))) NOTNULL) WHERE ((NOT ((CAST(t0.c0 AS INTEGER) IN ())))) GROUP BY rt0.c0, t0.c43, t0.c0, rt0.c2 UNION SELECT ALL rt0.c0, t0.c43, t0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON ((((((t0.c0)AND(rt0.c2)))OR(rt0.c2))) NOTNULL) WHERE ((((CAST(t0.c0 AS INTEGER) IN ())) ISNULL)) GROUP BY rt0.c0, t0.c43, t0.c0, rt0.c2;
SELECT rt0.c0, t0.c43, t0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON ((((((t0.c0)AND(rt0.c2)))OR(rt0.c2))) NOTNULL) GROUP BY rt0.c0, t0.c43, t0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2, v0.c0, vt0.c1, rt0.c1, rt0.c3 FROM v0, rt0, vt0, t0 GROUP BY rt0.c0, rt0.c2, v0.c0, vt0.c1, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, v0.c0, vt0.c1, rt0.c1, rt0.c3 FROM v0, rt0, vt0, t0 GROUP BY rt0.c0, rt0.c2, v0.c0, vt0.c1, rt0.c1, rt0.c3 HAVING ((TOTAL(t0.c0)) NOT NULL) UNION ALL SELECT rt0.c0, rt0.c2, v0.c0, vt0.c1, rt0.c1, rt0.c3 FROM v0, rt0, vt0, t0 GROUP BY rt0.c0, rt0.c2, v0.c0, vt0.c1, rt0.c1, rt0.c3 HAVING (NOT (((TOTAL(t0.c0)) NOT NULL))) UNION ALL SELECT rt0.c0, rt0.c2, v0.c0, vt0.c1, rt0.c1, rt0.c3 FROM v0, rt0, vt0, t0 GROUP BY rt0.c0, rt0.c2, v0.c0, vt0.c1, rt0.c1, rt0.c3 HAVING ((((TOTAL(t0.c0)) NOT NULL)) ISNULL);
SELECT rt0.c0, rt0.c2, v0.c0, vt0.c1, rt0.c1, rt0.c3 FROM v0, rt0, vt0, t0 GROUP BY rt0.c0, rt0.c2, v0.c0, vt0.c1, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, v0.c0, vt0.c1, rt0.c1, rt0.c3 FROM v0, rt0, vt0, t0 GROUP BY rt0.c0, rt0.c2, v0.c0, vt0.c1, rt0.c1, rt0.c3 HAVING ((TOTAL(t0.c0)) NOT NULL) UNION ALL SELECT rt0.c0, rt0.c2, v0.c0, vt0.c1, rt0.c1, rt0.c3 FROM v0, rt0, vt0, t0 GROUP BY rt0.c0, rt0.c2, v0.c0, vt0.c1, rt0.c1, rt0.c3 HAVING (NOT (((TOTAL(t0.c0)) NOT NULL))) UNION ALL SELECT rt0.c0, rt0.c2, v0.c0, vt0.c1, rt0.c1, rt0.c3 FROM v0, rt0, vt0, t0 GROUP BY rt0.c0, rt0.c2, v0.c0, vt0.c1, rt0.c1, rt0.c3 HAVING ((((TOTAL(t0.c0)) NOT NULL)) ISNULL);
SELECT rt0.c0, rt0.c2, v0.c0, vt0.c1, rt0.c1, rt0.c3 FROM v0, rt0, vt0, t0 GROUP BY rt0.c0, rt0.c2, v0.c0, vt0.c1, rt0.c1, rt0.c3;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT)) NOT BETWEEN (NULLIF(DISTINCT rt0.c2, rt0.c1)) AND ((('땿PBrxnT())')GLOB(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS TEXT)) NOT BETWEEN (NULLIF(DISTINCT rt0.c2, rt0.c1)) AND ((('땿PBrxnT())')GLOB(rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE (((((CAST(rt0.c0 AS TEXT)) NOT BETWEEN (NULLIF(DISTINCT rt0.c2, rt0.c1)) AND ((('땿PBrxnT())')GLOB(rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0 FROM t0, rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0 FROM t0, rt0 WHERE (x'8a47') UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0 FROM t0, rt0 WHERE ((NOT (x'8a47'))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0 FROM t0, rt0 WHERE (((x'8a47') ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0 FROM t0, rt0;
SELECT ALL t0.c43, t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c43, t0.c0, vt0.c1, vt0.c0;
SELECT ALL t0.c43, t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 WHERE ((((NULL))<=((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)))) GROUP BY t0.c43, t0.c0, vt0.c1, vt0.c0 UNION SELECT t0.c43, t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 WHERE ((NOT ((((NULL))<=((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)))))) GROUP BY t0.c43, t0.c0, vt0.c1, vt0.c0 UNION SELECT ALL t0.c43, t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 WHERE ((((((NULL))<=((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)))) ISNULL)) GROUP BY t0.c43, t0.c0, vt0.c1, vt0.c0;
SELECT ALL t0.c43, t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c43, t0.c0, vt0.c1, vt0.c0;
SELECT vt0.c0, rt0.c1, rt0.c3, rt0.c0, t0.c43 FROM vt0, rt0, t0 GROUP BY vt0.c0, rt0.c1, rt0.c3, rt0.c0, t0.c43;
SELECT vt0.c0, rt0.c1, rt0.c3, rt0.c0, t0.c43 FROM vt0, rt0, t0 GROUP BY vt0.c0, rt0.c1, rt0.c3, rt0.c0, t0.c43 HAVING MIN(0.46937874572780713) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c3, rt0.c0, t0.c43 FROM vt0, rt0, t0 GROUP BY vt0.c0, rt0.c1, rt0.c3, rt0.c0, t0.c43 HAVING (NOT (MIN(0.46937874572780713))) UNION ALL SELECT vt0.c0, rt0.c1, rt0.c3, rt0.c0, t0.c43 FROM vt0, rt0, t0 GROUP BY vt0.c0, rt0.c1, rt0.c3, rt0.c0, t0.c43 HAVING ((MIN(0.46937874572780713)) ISNULL);
SELECT vt0.c0, rt0.c1, rt0.c3, rt0.c0, t0.c43 FROM vt0, rt0, t0 GROUP BY vt0.c0, rt0.c1, rt0.c3, rt0.c0, t0.c43;
SELECT vt0.c0, rt0.c1, rt0.c3, rt0.c0, t0.c43 FROM vt0, rt0, t0 GROUP BY vt0.c0, rt0.c1, rt0.c3, rt0.c0, t0.c43 HAVING MIN(0.46937874572780713) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c3, rt0.c0, t0.c43 FROM vt0, rt0, t0 GROUP BY vt0.c0, rt0.c1, rt0.c3, rt0.c0, t0.c43 HAVING (NOT (MIN(0.46937874572780713))) UNION ALL SELECT vt0.c0, rt0.c1, rt0.c3, rt0.c0, t0.c43 FROM vt0, rt0, t0 GROUP BY vt0.c0, rt0.c1, rt0.c3, rt0.c0, t0.c43 HAVING ((MIN(0.46937874572780713)) ISNULL);
SELECT vt0.c0, rt0.c1, rt0.c3, rt0.c0, t0.c43 FROM vt0, rt0, t0 GROUP BY vt0.c0, rt0.c1, rt0.c3, rt0.c0, t0.c43;
SELECT ALL rt0.c2, rt0.c1, rt0.c3, vt0.c1 FROM vt0, t0, v0, rt0;
SELECT rt0.c2, rt0.c1, rt0.c3, vt0.c1 FROM vt0, t0, v0, rt0 WHERE ((((((vt0.c1)) BETWEEN ((t0.c43)) AND ((x'')))) NOT BETWEEN (((rt0.c0)*(rt0.c0))) AND ((('')>=(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c3, vt0.c1 FROM vt0, t0, v0, rt0 WHERE ((NOT ((((((vt0.c1)) BETWEEN ((t0.c43)) AND ((x'')))) NOT BETWEEN (((rt0.c0)*(rt0.c0))) AND ((('')>=(rt0.c0))))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c3, vt0.c1 FROM vt0, t0, v0, rt0 WHERE ((((((((vt0.c1)) BETWEEN ((t0.c43)) AND ((x'')))) NOT BETWEEN (((rt0.c0)*(rt0.c0))) AND ((('')>=(rt0.c0))))) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c3, vt0.c1 FROM vt0, t0, v0, rt0;
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((CASE vt0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN ('130797874') AND (CAST(rt0.c0 AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((NOT (((CASE vt0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN ('130797874') AND (CAST(rt0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((((CASE vt0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN ('130797874') AND (CAST(rt0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT t0.c43 FROM v0 NATURAL JOIN t0 GROUP BY t0.c43;
SELECT t0.c43 FROM v0 NATURAL JOIN t0 WHERE (t0.c0) GROUP BY t0.c43 UNION SELECT ALL t0.c43 FROM v0 NATURAL JOIN t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c43 UNION SELECT ALL t0.c43 FROM v0 NATURAL JOIN t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c43;
SELECT t0.c43 FROM v0 NATURAL JOIN t0 GROUP BY t0.c43;
SELECT vt0.c0, vt0.c1, v0.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM v0, vt0, rt0 GROUP BY vt0.c0, vt0.c1, v0.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT vt0.c0, vt0.c1, v0.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM v0, vt0, rt0 GROUP BY vt0.c0, vt0.c1, v0.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1 HAVING (SUM(COUNT(*)) IN (TOTAL(vt0.c0))) UNION ALL SELECT vt0.c0, vt0.c1, v0.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM v0, vt0, rt0 GROUP BY vt0.c0, vt0.c1, v0.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1 HAVING (NOT ((SUM(COUNT(*)) IN (TOTAL(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, v0.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM v0, vt0, rt0 GROUP BY vt0.c0, vt0.c1, v0.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1 HAVING (((SUM(COUNT(*)) IN (TOTAL(vt0.c0)))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (CAST(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) AS REAL)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CAST(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) AS REAL)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((CAST(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) AS REAL)) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND (('-1021790849')))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND (('-1021790849')))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND (('-1021790849')))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((rt0.c0 COLLATE RTRIM) IS TRUE) INNER JOIN rt0 ON 0.42373391124696735 COLLATE BINARY GROUP BY t0.c0;
SELECT vt0.c1, rt0.c2, rt0.c0, v0.c0, t0.c43, t0.c0, rt0.c3, rt0.c1, vt0.c0 FROM vt0, v0, rt0 RIGHT OUTER JOIN t0 ON ((((((((rt0.c3 COLLATE BINARY)AND(((t0.c0) ISNULL))))OR((((v0.c0, vt0.c0, vt0.c1, t0.c0, rt0.c2))<((rt0.c3, t0.c43, rt0.c1, rt0.c1, x'5e51'))))))OR(('-1178903317' IN (vt0.c1)))))OR((t0.c43 IN ()))) GROUP BY vt0.c1, rt0.c2, rt0.c0, v0.c0, t0.c43, t0.c0, rt0.c3, rt0.c1, vt0.c0;
SELECT ALL vt0.c1, rt0.c2, rt0.c0, v0.c0, t0.c43, t0.c0, rt0.c3, rt0.c1, vt0.c0 FROM vt0, v0, rt0 RIGHT OUTER JOIN t0 ON ((((((((rt0.c3 COLLATE BINARY)AND(((t0.c0) ISNULL))))OR((((v0.c0, vt0.c0, vt0.c1, t0.c0, rt0.c2))<((rt0.c3, t0.c43, rt0.c1, rt0.c1, x'5e51'))))))OR(('-1178903317' IN (vt0.c1)))))OR((t0.c43 IN ()))) GROUP BY vt0.c1, rt0.c2, rt0.c0, v0.c0, t0.c43, t0.c0, rt0.c3, rt0.c1, vt0.c0 HAVING ((TOTAL(v0.c0)) BETWEEN (AVG(0.40455923408662064)) AND (SUM(SUM(AVG(COUNT(*)))))) UNION ALL SELECT ALL vt0.c1, rt0.c2, rt0.c0, v0.c0, t0.c43, t0.c0, rt0.c3, rt0.c1, vt0.c0 FROM vt0, v0, rt0 RIGHT OUTER JOIN t0 ON ((((((((rt0.c3 COLLATE BINARY)AND(((t0.c0) ISNULL))))OR((((v0.c0, vt0.c0, vt0.c1, t0.c0, rt0.c2))<((rt0.c3, t0.c43, rt0.c1, rt0.c1, x'5e51'))))))OR(('-1178903317' IN (vt0.c1)))))OR((t0.c43 IN ()))) GROUP BY vt0.c1, rt0.c2, rt0.c0, v0.c0, t0.c43, t0.c0, rt0.c3, rt0.c1, vt0.c0 HAVING (NOT (((TOTAL(v0.c0)) BETWEEN (AVG(0.40455923408662064)) AND (SUM(SUM(AVG(COUNT(*)))))))) UNION ALL SELECT vt0.c1, rt0.c2, rt0.c0, v0.c0, t0.c43, t0.c0, rt0.c3, rt0.c1, vt0.c0 FROM vt0, v0, rt0 RIGHT OUTER JOIN t0 ON ((((((((rt0.c3 COLLATE BINARY)AND(((t0.c0) ISNULL))))OR((((v0.c0, vt0.c0, vt0.c1, t0.c0, rt0.c2))<((rt0.c3, t0.c43, rt0.c1, rt0.c1, x'5e51'))))))OR(('-1178903317' IN (vt0.c1)))))OR((t0.c43 IN ()))) GROUP BY vt0.c1, rt0.c2, rt0.c0, v0.c0, t0.c43, t0.c0, rt0.c3, rt0.c1, vt0.c0 HAVING ((((TOTAL(v0.c0)) BETWEEN (AVG(0.40455923408662064)) AND (SUM(SUM(AVG(COUNT(*))))))) ISNULL);
SELECT ALL vt0.c0, rt0.c1 FROM vt0, t0, v0, rt0;
SELECT ALL vt0.c0, rt0.c1 FROM vt0, t0, v0, rt0 WHERE (v0.c0) UNION ALL SELECT ALL vt0.c0, rt0.c1 FROM vt0, t0, v0, rt0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL vt0.c0, rt0.c1 FROM vt0, t0, v0, rt0 WHERE (((v0.c0) ISNULL));
SELECT ALL vt0.c0, rt0.c1 FROM vt0, t0, v0, rt0;
SELECT DISTINCT * FROM vt0, rt0 NOT INDEXED INNER JOIN t0 ON (+ (json_array(rt0.c0, vt0.c0, rt0.c2, rt0.c2))) CROSS JOIN v0 ON ((0X31a7c851)OR(68330667));
SELECT DISTINCT * FROM vt0, rt0 NOT INDEXED INNER JOIN t0 ON (+ (json_array(rt0.c0, vt0.c0, rt0.c2, rt0.c2))) CROSS JOIN v0 ON ((0X31a7c851)OR(68330667)) WHERE ((IFNULL(DISTINCT v0.c0, t0.c0) IN ())) UNION SELECT DISTINCT * FROM vt0, rt0 INNER JOIN t0 ON (+ (json_array(rt0.c0, vt0.c0, rt0.c2, rt0.c2))) CROSS JOIN v0 ON ((0x31a7c851)OR(68330667)) WHERE ((NOT ((IFNULL(DISTINCT v0.c0, t0.c0) IN ())))) UNION SELECT DISTINCT * FROM vt0, rt0 INNER JOIN t0 ON (+ (json_array(rt0.c0, vt0.c0, rt0.c2, rt0.c2))) CROSS JOIN v0 ON ((0X31a7c851)OR(68330667)) WHERE ((((IFNULL(DISTINCT v0.c0, t0.c0) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, rt0 NOT INDEXED INNER JOIN t0 ON (+ (json_array(rt0.c0, vt0.c0, rt0.c2, rt0.c2))) CROSS JOIN v0 ON ((0X31a7c851)OR(68330667));
SELECT vt0.c1, rt0.c3 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c3;
SELECT ALL vt0.c1, rt0.c3 FROM vt0, rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)))*(CASE vt0.c1  WHEN vt0.c0 THEN NULL END))) GROUP BY vt0.c1, rt0.c3 UNION SELECT ALL vt0.c1, rt0.c3 FROM vt0, rt0 WHERE ((NOT (((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)))*(CASE vt0.c1  WHEN vt0.c0 THEN NULL END))))) GROUP BY vt0.c1, rt0.c3 UNION SELECT ALL vt0.c1, rt0.c3 FROM vt0, rt0 WHERE (((((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)))*(CASE vt0.c1  WHEN vt0.c0 THEN NULL END))) ISNULL)) GROUP BY vt0.c1, rt0.c3;
SELECT vt0.c1, rt0.c3 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, vt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, vt0.c0 HAVING MAX(CASE WHEN COUNT(rt0.c1) THEN vt0.c0 ELSE rt0.c2 END) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, vt0.c0 HAVING (NOT (MAX(CASE WHEN COUNT(rt0.c1) THEN vt0.c0 ELSE rt0.c2 END))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, vt0.c0 HAVING ((MAX(CASE WHEN COUNT(rt0.c1) THEN vt0.c0 ELSE rt0.c2 END)) ISNULL);
SELECT ALL MIN(((rt0.c3 IN ()) IN ())) FROM rt0;
SELECT ALL t0.c0, t0.c43 FROM t0;
SELECT t0.c0, t0.c43 FROM t0 WHERE (CASE CASE t0.c43  WHEN t0.c0 THEN t0.c43 WHEN t0.c43 THEN '942967381' WHEN t0.c43 THEN t0.c0 END  WHEN ((t0.c0) NOTNULL) THEN CAST(t0.c0 AS BLOB) ELSE ((t0.c43)OR(t0.c43)) END) UNION ALL SELECT t0.c0, t0.c43 FROM t0 WHERE ((NOT (CASE CASE t0.c43  WHEN t0.c0 THEN t0.c43 WHEN t0.c43 THEN '942967381' WHEN t0.c43 THEN t0.c0 END  WHEN ((t0.c0) NOTNULL) THEN CAST(t0.c0 AS BLOB) ELSE ((t0.c43)OR(t0.c43)) END))) UNION ALL SELECT t0.c0, t0.c43 FROM t0 WHERE (((CASE CASE t0.c43  WHEN t0.c0 THEN t0.c43 WHEN t0.c43 THEN '942967381' WHEN t0.c43 THEN t0.c0 END  WHEN ((t0.c0) NOTNULL) THEN CAST(t0.c0 AS BLOB) ELSE ((t0.c43)OR(t0.c43)) END) ISNULL));
SELECT ALL t0.c0, t0.c43 FROM t0;
SELECT DISTINCT vt0.c1 FROM vt0, t0 INDEXED BY i4;
SELECT DISTINCT vt0.c1 FROM vt0, t0 INDEXED BY i4 WHERE (((((vt0.c0)LIKE(vt0.c1)))<<(((vt0.c1) IS TRUE)))) UNION SELECT DISTINCT vt0.c1 FROM vt0, t0 INDEXED BY i4 WHERE ((NOT (((((vt0.c0)LIKE(vt0.c1)))<<(((vt0.c1) IS TRUE)))))) UNION SELECT DISTINCT vt0.c1 FROM vt0, t0 INDEXED BY i4 WHERE (((((((vt0.c0)LIKE(vt0.c1)))<<(((vt0.c1) IS TRUE)))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0, t0 INDEXED BY i4;
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c1, rt0.c3, vt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0 WHERE (LIKELY(0.9683810321437606)) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c1, rt0.c3, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0 WHERE ((NOT (LIKELY(0.9683810321437606)))) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c1, rt0.c3, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0 WHERE (((LIKELY(0.9683810321437606)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c1, rt0.c3, vt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c1, rt0.c3, vt0.c0;
SELECT ALL rt0.c0 FROM rt0, t0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, t0 GROUP BY rt0.c0 HAVING ((((AVG(rt0.c0))AND(MAX(rt0.c3))))OR(SUM(rt0.c0))) UNION ALL SELECT rt0.c0 FROM rt0, t0 GROUP BY rt0.c0 HAVING (NOT (((((AVG(rt0.c0))AND(MAX(rt0.c3))))OR(SUM(rt0.c0))))) UNION ALL SELECT rt0.c0 FROM rt0, t0 GROUP BY rt0.c0 HAVING ((((((AVG(rt0.c0))AND(MAX(rt0.c3))))OR(SUM(rt0.c0)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0, t0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, t0 GROUP BY rt0.c0 HAVING ((((AVG(rt0.c0))AND(MAX(rt0.c3))))OR(SUM(rt0.c0))) UNION ALL SELECT rt0.c0 FROM rt0, t0 GROUP BY rt0.c0 HAVING (NOT (((((AVG(rt0.c0))AND(MAX(rt0.c3))))OR(SUM(rt0.c0))))) UNION ALL SELECT rt0.c0 FROM rt0, t0 GROUP BY rt0.c0 HAVING ((((((AVG(rt0.c0))AND(MAX(rt0.c3))))OR(SUM(rt0.c0)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0, t0 GROUP BY rt0.c0;
SELECT ALL * FROM vt0 INNER JOIN t0 ON (vt0.c0 IN ()) COLLATE BINARY;
SELECT ALL * FROM vt0 INNER JOIN t0 ON (vt0.c0 IN ()) COLLATE BINARY WHERE ((vt0.c1 COLLATE RTRIM IN ())) UNION ALL SELECT ALL * FROM vt0 INNER JOIN t0 ON (vt0.c0 IN ()) COLLATE BINARY WHERE ((NOT ((vt0.c1 COLLATE RTRIM IN ())))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN t0 ON (vt0.c0 IN ()) COLLATE BINARY WHERE ((((vt0.c1 COLLATE RTRIM IN ())) ISNULL));
SELECT ALL * FROM vt0 INNER JOIN t0 ON (vt0.c0 IN ()) COLLATE BINARY;
SELECT DISTINCT rt0.c3, vt0.c1, t0.c0, rt0.c1 FROM rt0, vt0, t0;
SELECT DISTINCT rt0.c3, vt0.c1, t0.c0, rt0.c1 FROM rt0, vt0, t0 WHERE (((NULL) ISNULL) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c3, vt0.c1, t0.c0, rt0.c1 FROM rt0, vt0, t0 WHERE ((NOT (((NULL) ISNULL) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c3, vt0.c1, t0.c0, rt0.c1 FROM rt0, vt0, t0 WHERE (((((NULL) ISNULL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c3, vt0.c1, t0.c0, rt0.c1 FROM rt0, vt0, t0;
SELECT t0.c43, rt0.c1, rt0.c3 FROM rt0, t0 GROUP BY t0.c43, rt0.c1, rt0.c3;
SELECT ALL t0.c43, rt0.c1, rt0.c3 FROM rt0, t0 WHERE ((((rt0.c2, t0.c43, t0.c0)) NOT BETWEEN ((((t0.c43) ISNULL), (((rt0.c3))<>((rt0.c0))), rt0.c2 COLLATE RTRIM)) AND ((IFNULL(rt0.c3, rt0.c3), t0.c43, NULL)))) GROUP BY t0.c43, rt0.c1, rt0.c3 UNION SELECT ALL t0.c43, rt0.c1, rt0.c3 FROM rt0, t0 WHERE ((NOT ((((rt0.c2, t0.c43, t0.c0)) NOT BETWEEN ((((t0.c43) ISNULL), (((rt0.c3))!=((rt0.c0))), rt0.c2 COLLATE RTRIM)) AND ((IFNULL(rt0.c3, rt0.c3), t0.c43, NULL)))))) GROUP BY t0.c43, rt0.c1, rt0.c3 UNION SELECT ALL t0.c43, rt0.c1, rt0.c3 FROM rt0, t0 WHERE ((((((rt0.c2, t0.c43, t0.c0)) NOT BETWEEN ((((t0.c43) ISNULL), (((rt0.c3))!=((rt0.c0))), rt0.c2 COLLATE RTRIM)) AND ((IFNULL(rt0.c3, rt0.c3), t0.c43, NULL)))) ISNULL)) GROUP BY t0.c43, rt0.c1, rt0.c3;
SELECT t0.c43, rt0.c1, rt0.c3 FROM rt0, t0 GROUP BY t0.c43, rt0.c1, rt0.c3;
SELECT ALL vt0.c0, rt0.c3, v0.c0, t0.c0 FROM v0, rt0, vt0, t0 GROUP BY vt0.c0, rt0.c3, v0.c0, t0.c0;
SELECT vt0.c0, rt0.c3, v0.c0, t0.c0 FROM v0, rt0, vt0, t0 GROUP BY vt0.c0, rt0.c3, v0.c0, t0.c0 HAVING GROUP_CONCAT(TOTAL(rt0.c3)) UNION ALL SELECT vt0.c0, rt0.c3, v0.c0, t0.c0 FROM v0, rt0, vt0, t0 GROUP BY vt0.c0, rt0.c3, v0.c0, t0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(rt0.c3)))) UNION ALL SELECT ALL vt0.c0, rt0.c3, v0.c0, t0.c0 FROM v0, rt0, vt0, t0 GROUP BY vt0.c0, rt0.c3, v0.c0, t0.c0 HAVING ((GROUP_CONCAT(TOTAL(rt0.c3))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (NULL) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((NULL) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT v0.c0, t0.c43, t0.c0 FROM t0 NATURAL JOIN v0;
SELECT DISTINCT v0.c0, t0.c43, t0.c0 FROM t0 NATURAL JOIN v0 WHERE ('XQcohs*C') UNION SELECT DISTINCT v0.c0, t0.c43, t0.c0 FROM t0 NATURAL JOIN v0 WHERE ((NOT ('XQcohs*C'))) UNION SELECT DISTINCT v0.c0, t0.c43, t0.c0 FROM t0 NATURAL JOIN v0 WHERE ((('XQcohs*C') ISNULL));
SELECT DISTINCT v0.c0, t0.c43, t0.c0 FROM t0 NATURAL JOIN v0;
SELECT t0.c43, vt0.c0, rt0.c3, rt0.c1 FROM t0, rt0, v0, vt0 GROUP BY t0.c43, vt0.c0, rt0.c3, rt0.c1;
SELECT ALL t0.c43, vt0.c0, rt0.c3, rt0.c1 FROM t0, rt0, v0, vt0 WHERE ((~ (json_extract(t0.c0, vt0.c0, t0.c0, rt0.c2)))) GROUP BY t0.c43, vt0.c0, rt0.c3, rt0.c1 UNION SELECT t0.c43, vt0.c0, rt0.c3, rt0.c1 FROM t0, rt0, v0, vt0 WHERE ((NOT ((~ (json_extract(t0.c0, vt0.c0, t0.c0, rt0.c2)))))) GROUP BY t0.c43, vt0.c0, rt0.c3, rt0.c1 UNION SELECT t0.c43, vt0.c0, rt0.c3, rt0.c1 FROM t0, rt0, v0, vt0 WHERE ((((~ (json_extract(t0.c0, vt0.c0, t0.c0, rt0.c2)))) ISNULL)) GROUP BY t0.c43, vt0.c0, rt0.c3, rt0.c1;
SELECT t0.c43, vt0.c0, rt0.c3, rt0.c1 FROM t0, rt0, v0, vt0 GROUP BY t0.c43, vt0.c0, rt0.c3, rt0.c1;
SELECT ALL t0.c43, v0.c0, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON CASE CAST(t0.c0 AS INTEGER)  WHEN t0.c43 THEN (- (v0.c0)) ELSE ((t0.c0) BETWEEN (v0.c0) AND ('c^mkt')) END GROUP BY t0.c43, v0.c0, t0.c0;
SELECT ALL t0.c43, v0.c0, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON CASE CAST(t0.c0 AS INTEGER)  WHEN t0.c43 THEN (- (v0.c0)) ELSE ((t0.c0) BETWEEN (v0.c0) AND ('c^mkt')) END GROUP BY t0.c43, v0.c0, t0.c0 HAVING MAX(t0.c43) COLLATE BINARY UNION ALL SELECT ALL t0.c43, v0.c0, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON CASE CAST(t0.c0 AS INTEGER)  WHEN t0.c43 THEN (- (v0.c0)) ELSE ((t0.c0) BETWEEN (v0.c0) AND ('c^mkt')) END GROUP BY t0.c43, v0.c0, t0.c0 HAVING (NOT (MAX(t0.c43) COLLATE BINARY)) UNION ALL SELECT ALL t0.c43, v0.c0, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON CASE CAST(t0.c0 AS INTEGER)  WHEN t0.c43 THEN (- (v0.c0)) ELSE ((t0.c0) BETWEEN (v0.c0) AND ('c^mkt')) END GROUP BY t0.c43, v0.c0, t0.c0 HAVING ((MAX(t0.c43) COLLATE BINARY) ISNULL);
SELECT ALL t0.c43, v0.c0, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON CASE CAST(t0.c0 AS INTEGER)  WHEN t0.c43 THEN (- (v0.c0)) ELSE ((t0.c0) BETWEEN (v0.c0) AND ('c^mkt')) END GROUP BY t0.c43, v0.c0, t0.c0;
SELECT ALL t0.c43, v0.c0, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON CASE CAST(t0.c0 AS INTEGER)  WHEN t0.c43 THEN (- (v0.c0)) ELSE ((t0.c0) BETWEEN (v0.c0) AND ('c^mkt')) END GROUP BY t0.c43, v0.c0, t0.c0 HAVING MAX(t0.c43) COLLATE BINARY UNION ALL SELECT ALL t0.c43, v0.c0, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON CASE CAST(t0.c0 AS INTEGER)  WHEN t0.c43 THEN (- (v0.c0)) ELSE ((t0.c0) BETWEEN (v0.c0) AND ('c^mkt')) END GROUP BY t0.c43, v0.c0, t0.c0 HAVING (NOT (MAX(t0.c43) COLLATE BINARY)) UNION ALL SELECT ALL t0.c43, v0.c0, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON CASE CAST(t0.c0 AS INTEGER)  WHEN t0.c43 THEN (- (v0.c0)) ELSE ((t0.c0) BETWEEN (v0.c0) AND ('c^mkt')) END GROUP BY t0.c43, v0.c0, t0.c0 HAVING ((MAX(t0.c43) COLLATE BINARY) ISNULL);
SELECT ALL t0.c43, v0.c0, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON CASE CAST(t0.c0 AS INTEGER)  WHEN t0.c43 THEN (- (v0.c0)) ELSE ((t0.c0) BETWEEN (v0.c0) AND ('c^mkt')) END GROUP BY t0.c43, v0.c0, t0.c0;
SELECT vt0.c1, rt0.c3 FROM rt0, vt0;
SELECT vt0.c1, rt0.c3 FROM rt0, vt0 WHERE (LOWER(DISTINCT CAST(rt0.c1 AS INTEGER))) UNION ALL SELECT ALL vt0.c1, rt0.c3 FROM rt0, vt0 WHERE ((NOT (LOWER(DISTINCT CAST(rt0.c1 AS INTEGER))))) UNION ALL SELECT ALL vt0.c1, rt0.c3 FROM rt0, vt0 WHERE (((LOWER(DISTINCT CAST(rt0.c1 AS INTEGER))) ISNULL));
SELECT vt0.c1, rt0.c3 FROM rt0, vt0;
SELECT DISTINCT * FROM t0, rt0, v0;
SELECT DISTINCT * FROM t0, rt0, v0 WHERE ((((rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c3 ELSE v0.c0 END)) AND ((load_extension(v0.c0))))) UNION SELECT DISTINCT * FROM t0, rt0, v0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c3 ELSE v0.c0 END)) AND ((load_extension(v0.c0))))))) UNION SELECT DISTINCT * FROM t0, rt0, v0 WHERE ((((((rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c3 ELSE v0.c0 END)) AND ((load_extension(v0.c0))))) ISNULL));
SELECT rt0.c0, t0.c0 FROM rt0, t0 LEFT OUTER JOIN v0 ON (CAST(rt0.c1 AS REAL) IN ('0.9755236890539855')) GROUP BY rt0.c0, t0.c0;
SELECT ALL rt0.c0, t0.c0 FROM rt0, t0 LEFT OUTER JOIN v0 ON (CAST(rt0.c1 AS REAL) IN ('0.9755236890539855')) WHERE (TYPEOF(rt0.c3 COLLATE NOCASE)) GROUP BY rt0.c0, t0.c0 UNION SELECT ALL rt0.c0, t0.c0 FROM rt0, t0 LEFT OUTER JOIN v0 ON (CAST(rt0.c1 AS REAL) IN ('0.9755236890539855')) WHERE ((NOT (TYPEOF(rt0.c3 COLLATE NOCASE)))) GROUP BY rt0.c0, t0.c0 UNION SELECT rt0.c0, t0.c0 FROM rt0, t0 LEFT OUTER JOIN v0 ON (CAST(rt0.c1 AS REAL) IN ('0.9755236890539855')) WHERE (((TYPEOF(rt0.c3 COLLATE NOCASE)) ISNULL)) GROUP BY rt0.c0, t0.c0;
SELECT rt0.c0, t0.c0 FROM rt0, t0 LEFT OUTER JOIN v0 ON (CAST(rt0.c1 AS REAL) IN ('0.9755236890539855')) GROUP BY rt0.c0, t0.c0;
SELECT ALL vt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3;
SELECT ALL vt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 HAVING MAX((+ (rt0.c0))) UNION ALL SELECT ALL vt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 HAVING (NOT (MAX((+ (rt0.c0))))) UNION ALL SELECT ALL vt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 HAVING ((MAX((+ (rt0.c0)))) ISNULL);
SELECT ALL vt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3;
SELECT ALL vt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 HAVING MAX((+ (rt0.c0))) UNION ALL SELECT ALL vt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 HAVING (NOT (MAX((+ (rt0.c0))))) UNION ALL SELECT ALL vt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 HAVING ((MAX((+ (rt0.c0)))) ISNULL);
SELECT ALL vt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3;
SELECT ALL MIN(((((0.7850183517019191)AND(CAST(rt0.c2 AS INTEGER))))OR(CAST(rt0.c3 AS BLOB)))) FROM rt0, v0, t0 ORDER BY (((((rt0.c1, rt0.c3, v0.c0))>((t0.c0, t0.c0, rt0.c1))))%((t0.c43 IN (t0.c43, rt0.c2)))) ASC  NULLS FIRST;
SELECT * FROM t0, v0 INNER JOIN rt0 ON MIN(((rt0.c3)LIKE(vt0.c1)), ((rt0.c3) NOT BETWEEN (vt0.c0) AND (t0.c43)), (((rt0.c1, vt0.c1, t0.c43))<=((rt0.c3, t0.c43, vt0.c1))), (rt0.c2 IN (vt0.c0))) INNER JOIN vt0 ON (NOT (((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2))));
SELECT * FROM t0, v0 INNER JOIN rt0 ON MIN(((rt0.c3)LIKE(vt0.c1)), ((rt0.c3) NOT BETWEEN (vt0.c0) AND (t0.c43)), (((rt0.c1, vt0.c1, t0.c43))<=((rt0.c3, t0.c43, vt0.c1))), (rt0.c2 IN (vt0.c0))) INNER JOIN vt0 ON (NOT (((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)))) WHERE (CAST(((vt0.c1)>>(t0.c43)) AS BLOB)) ORDER BY UPPER(DISTINCT (x'' IN (rt0.c0, rt0.c3))), ((vt0.c1)|(((vt0.c1) NOT BETWEEN (rt0.c3) AND (v0.c0)))) ASC;
SELECT * FROM t0, v0 INNER JOIN rt0 ON MIN(((rt0.c3)LIKE(vt0.c1)), ((rt0.c3) NOT BETWEEN (vt0.c0) AND (t0.c43)), (((rt0.c1, vt0.c1, t0.c43))<=((rt0.c3, t0.c43, vt0.c1))), (rt0.c2 IN (vt0.c0))) INNER JOIN vt0 ON (NOT (((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)))) WHERE ((NOT (CAST(((vt0.c1)>>(t0.c43)) AS BLOB)))) ORDER BY UPPER(DISTINCT (x'' IN (rt0.c0, rt0.c3))), ((vt0.c1)|(((vt0.c1) NOT BETWEEN (rt0.c3) AND (v0.c0)))) ASC;
SELECT ALL * FROM t0, v0 INNER JOIN rt0 ON MIN(((rt0.c3)LIKE(vt0.c1)), ((rt0.c3) NOT BETWEEN (vt0.c0) AND (t0.c43)), (((rt0.c1, vt0.c1, t0.c43))<=((rt0.c3, t0.c43, vt0.c1))), (rt0.c2 IN (vt0.c0))) INNER JOIN vt0 ON (NOT (((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)))) WHERE (((CAST(((vt0.c1)>>(t0.c43)) AS BLOB)) ISNULL)) ORDER BY UPPER(DISTINCT (x'' IN (rt0.c0, rt0.c3))), ((vt0.c1)|(((vt0.c1) NOT BETWEEN (rt0.c3) AND (v0.c0)))) ASC;
SELECT * FROM t0, v0 INNER JOIN rt0 ON MIN(((rt0.c3)LIKE(vt0.c1)), ((rt0.c3) NOT BETWEEN (vt0.c0) AND (t0.c43)), (((rt0.c1, vt0.c1, t0.c43))<=((rt0.c3, t0.c43, vt0.c1))), (rt0.c2 IN (vt0.c0))) INNER JOIN vt0 ON (NOT (((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2))));
SELECT DISTINCT t0.c0, vt0.c0, v0.c0 FROM t0, v0, vt0;
SELECT DISTINCT t0.c0, vt0.c0, v0.c0 FROM t0, v0, vt0 WHERE (((COALESCE(DISTINCT t0.c0, vt0.c1)) NOT NULL)) UNION SELECT DISTINCT t0.c0, vt0.c0, v0.c0 FROM t0, v0, vt0 WHERE ((NOT (((COALESCE(DISTINCT t0.c0, vt0.c1)) NOT NULL)))) UNION SELECT DISTINCT t0.c0, vt0.c0, v0.c0 FROM t0, v0, vt0 WHERE (((((COALESCE(DISTINCT t0.c0, vt0.c1)) NOT NULL)) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0, v0.c0 FROM t0, v0, vt0;
SELECT ALL vt0.c0 FROM rt0, vt0 RIGHT OUTER JOIN t0 ON vt0.c0 RIGHT OUTER JOIN v0 ON ((((vt0.c0, vt0.c0, 0X22661c86))<>((t0.c0, rt0.c1, rt0.c3))) IN ()) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt0 RIGHT OUTER JOIN t0 ON vt0.c0 RIGHT OUTER JOIN v0 ON ((((vt0.c0, vt0.c0, 0x22661c86))!=((t0.c0, rt0.c1, rt0.c3))) IN ()) WHERE (1526184848) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM rt0, vt0 RIGHT OUTER JOIN t0 ON vt0.c0 RIGHT OUTER JOIN v0 ON ((((vt0.c0, vt0.c0, 0X22661c86))<>((t0.c0, rt0.c1, rt0.c3))) IN ()) WHERE ((NOT (1526184848))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM rt0, vt0 RIGHT OUTER JOIN t0 ON vt0.c0 RIGHT OUTER JOIN v0 ON ((((vt0.c0, vt0.c0, 0x22661c86))!=((t0.c0, rt0.c1, rt0.c3))) IN ()) WHERE (((1526184848) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt0 RIGHT OUTER JOIN t0 ON vt0.c0 RIGHT OUTER JOIN v0 ON ((((vt0.c0, vt0.c0, 0X22661c86))<>((t0.c0, rt0.c1, rt0.c3))) IN ()) GROUP BY vt0.c0;
SELECT ALL rt0.c2, rt0.c3, t0.c0, vt0.c0, t0.c43 FROM rt0, vt0, t0 LEFT OUTER JOIN v0 ON (rt0.c3 IN ()) COLLATE BINARY COLLATE NOCASE GROUP BY rt0.c2, rt0.c3, t0.c0, vt0.c0, t0.c43;
SELECT ALL rt0.c2, rt0.c3, t0.c0, vt0.c0, t0.c43 FROM rt0, vt0, t0 LEFT OUTER JOIN v0 ON (rt0.c3 IN ()) COLLATE BINARY COLLATE NOCASE GROUP BY rt0.c2, rt0.c3, t0.c0, vt0.c0, t0.c43 HAVING GROUP_CONCAT(GROUP_CONCAT(rt0.c3) COLLATE RTRIM) UNION ALL SELECT rt0.c2, rt0.c3, t0.c0, vt0.c0, t0.c43 FROM rt0, vt0, t0 LEFT OUTER JOIN v0 ON (rt0.c3 IN ()) COLLATE BINARY COLLATE NOCASE GROUP BY rt0.c2, rt0.c3, t0.c0, vt0.c0, t0.c43 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(rt0.c3) COLLATE RTRIM))) UNION ALL SELECT rt0.c2, rt0.c3, t0.c0, vt0.c0, t0.c43 FROM rt0, vt0, t0 LEFT OUTER JOIN v0 ON (rt0.c3 IN ()) COLLATE BINARY COLLATE NOCASE GROUP BY rt0.c2, rt0.c3, t0.c0, vt0.c0, t0.c43 HAVING ((GROUP_CONCAT(GROUP_CONCAT(rt0.c3) COLLATE RTRIM)) ISNULL);
SELECT t0.c43, vt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM vt0, v0, rt0, t0;
SELECT ALL t0.c43, vt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM vt0, v0, rt0, t0 WHERE (rt0.c3) UNION ALL SELECT ALL t0.c43, vt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM vt0, v0, rt0, t0 WHERE ((NOT (rt0.c3))) UNION ALL SELECT t0.c43, vt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM vt0, v0 NOT INDEXED, rt0, t0 WHERE (((rt0.c3) ISNULL));
SELECT t0.c43, vt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM vt0, v0, rt0, t0;
SELECT DISTINCT rt0.c3, rt0.c2 FROM rt0, v0;
SELECT DISTINCT rt0.c3, rt0.c2 FROM rt0, v0 WHERE (((CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN x'' WHEN v0.c0 THEN rt0.c0 END) NOT BETWEEN (((rt0.c0)&(rt0.c0))) AND (rt0.c2))) UNION SELECT DISTINCT rt0.c3, rt0.c2 FROM rt0, v0 WHERE ((NOT (((CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN x'' WHEN v0.c0 THEN rt0.c0 END) NOT BETWEEN (((rt0.c0)&(rt0.c0))) AND (rt0.c2))))) UNION SELECT DISTINCT rt0.c3, rt0.c2 FROM rt0, v0 WHERE (((((CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN x'' WHEN v0.c0 THEN rt0.c0 END) NOT BETWEEN (((rt0.c0)&(rt0.c0))) AND (rt0.c2))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2 FROM rt0, v0;
SELECT ALL rt0.c0, v0.c0, rt0.c3 FROM rt0 INNER JOIN t0 ON (((((v0.c0)<<(t0.c0))))<((((v0.c0)GLOB(rt0.c0))))) INNER JOIN v0 ON rt0.c2 GROUP BY rt0.c0, v0.c0, rt0.c3;
SELECT ALL rt0.c0, v0.c0, rt0.c3 FROM rt0 INNER JOIN t0 ON (((((v0.c0)<<(t0.c0))))<((((v0.c0)GLOB(rt0.c0))))) INNER JOIN v0 ON rt0.c2 WHERE (((v0.c0)<(t0.c0)) COLLATE NOCASE) GROUP BY rt0.c0, v0.c0, rt0.c3 UNION SELECT ALL rt0.c0, v0.c0, rt0.c3 FROM rt0 INNER JOIN t0 ON (((((v0.c0)<<(t0.c0))))<((((v0.c0)GLOB(rt0.c0))))) INNER JOIN v0 ON rt0.c2 WHERE ((NOT (((v0.c0)<(t0.c0)) COLLATE NOCASE))) GROUP BY rt0.c0, v0.c0, rt0.c3 UNION SELECT ALL rt0.c0, v0.c0, rt0.c3 FROM rt0 INNER JOIN t0 ON (((((v0.c0)<<(t0.c0))))<((((v0.c0)GLOB(rt0.c0))))) INNER JOIN v0 ON rt0.c2 WHERE (((((v0.c0)<(t0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0, v0.c0, rt0.c3;
SELECT ALL rt0.c0, v0.c0, rt0.c3 FROM rt0 INNER JOIN t0 ON (((((v0.c0)<<(t0.c0))))<((((v0.c0)GLOB(rt0.c0))))) INNER JOIN v0 ON rt0.c2 GROUP BY rt0.c0, v0.c0, rt0.c3;
SELECT v0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 RIGHT OUTER JOIN v0 ON vt0.c0 GROUP BY v0.c0, rt0.c1, vt0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 RIGHT OUTER JOIN v0 ON vt0.c0 GROUP BY v0.c0, rt0.c1, vt0.c0, rt0.c2 HAVING AVG(((TOTAL(v0.c0)) NOT BETWEEN (rt0.c2) AND (rt0.c2))) UNION ALL SELECT v0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 RIGHT OUTER JOIN v0 ON vt0.c0 GROUP BY v0.c0, rt0.c1, vt0.c0, rt0.c2 HAVING (NOT (AVG(((TOTAL(v0.c0)) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) UNION ALL SELECT ALL v0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 RIGHT OUTER JOIN v0 ON vt0.c0 GROUP BY v0.c0, rt0.c1, vt0.c0, rt0.c2 HAVING ((AVG(((TOTAL(v0.c0)) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) ISNULL);
SELECT rt0.c2, t0.c0, rt0.c0, rt0.c3, t0.c43, vt0.c1, v0.c0 FROM t0 CROSS JOIN v0 ON CAST(rt0.c1 COLLATE BINARY AS REAL) FULL OUTER JOIN rt0 ON ((((vt0.c0 IN ())))<=((((rt0.c2)/(rt0.c3))))) CROSS JOIN vt0 ON ((CASE vt0.c1  WHEN vt0.c0 THEN 0.7652400767150404 ELSE t0.c0 END)||(((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c1))));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c3 IN ()))*((((rt0.c2, rt0.c3, rt0.c3))<>((rt0.c2, rt0.c0, rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c3 IN ()))*((((rt0.c2, rt0.c3, rt0.c3))!=((rt0.c2, rt0.c0, rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c3 IN ()))*((((rt0.c2, rt0.c3, rt0.c3))<>((rt0.c2, rt0.c0, rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0, v0.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON json_insert(CAST(NULL AS TEXT), -742932242 COLLATE BINARY, ((vt0.c0) ISNULL)) GROUP BY vt0.c0, v0.c0, vt0.c1;
SELECT vt0.c0, v0.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON json_insert(CAST(NULL AS TEXT), -742932242 COLLATE BINARY, ((vt0.c0) ISNULL)) WHERE (CAST((+ (vt0.c0)) AS NUMERIC)) GROUP BY vt0.c0, v0.c0, vt0.c1 UNION SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON json_insert(CAST(NULL AS TEXT), -742932242 COLLATE BINARY, ((vt0.c0) ISNULL)) WHERE ((NOT (CAST((+ (vt0.c0)) AS NUMERIC)))) GROUP BY vt0.c0, v0.c0, vt0.c1 UNION SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON json_insert(CAST(NULL AS TEXT), -742932242 COLLATE BINARY, ((vt0.c0) ISNULL)) WHERE (((CAST((+ (vt0.c0)) AS NUMERIC)) ISNULL)) GROUP BY vt0.c0, v0.c0, vt0.c1;
SELECT vt0.c0, v0.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON json_insert(CAST(NULL AS TEXT), -742932242 COLLATE BINARY, ((vt0.c0) ISNULL)) GROUP BY vt0.c0, v0.c0, vt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING QUOTE(((v0.c0)OR(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (QUOTE(((v0.c0)OR(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((QUOTE(((v0.c0)OR(v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING QUOTE(((v0.c0)OR(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (QUOTE(((v0.c0)OR(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((QUOTE(((v0.c0)OR(v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, rt0.c0, vt0.c0, t0.c0 FROM v0 INNER JOIN t0 ON t0.c43 FULL OUTER JOIN vt0 ON ((((rt0.c2)<<(rt0.c1))) BETWEEN (0.26456636662154975) AND (CASE t0.c43  WHEN rt0.c2 THEN rt0.c1 ELSE t0.c43 END)) FULL OUTER JOIN rt0 ON (NOT (CAST(rt0.c1 AS BLOB)));
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c1 END COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c1 END COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c1 END COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c1, rt0.c0, t0.c0, rt0.c3, rt0.c2, vt0.c0, vt0.c1, t0.c43 FROM rt0 FULL OUTER JOIN vt0 ON (((NOT (rt0.c1)))+((+ (vt0.c1)))) INNER JOIN t0 ON TRIM(rt0.c1, vt0.c1) COLLATE NOCASE GROUP BY rt0.c1, rt0.c0, t0.c0, rt0.c3, rt0.c2, vt0.c0, vt0.c1, t0.c43;
SELECT ALL rt0.c1, rt0.c0, t0.c0, rt0.c3, rt0.c2, vt0.c0, vt0.c1, t0.c43 FROM rt0 FULL OUTER JOIN vt0 ON (((NOT (rt0.c1)))+((+ (vt0.c1)))) INNER JOIN t0 ON TRIM(rt0.c1, vt0.c1) COLLATE NOCASE WHERE (rt0.c3) GROUP BY rt0.c1, rt0.c0, t0.c0, rt0.c3, rt0.c2, vt0.c0, vt0.c1, t0.c43 UNION SELECT ALL rt0.c1, rt0.c0, t0.c0, rt0.c3, rt0.c2, vt0.c0, vt0.c1, t0.c43 FROM rt0 FULL OUTER JOIN vt0 ON (((NOT (rt0.c1)))+((+ (vt0.c1)))) INNER JOIN t0 ON TRIM(rt0.c1, vt0.c1) COLLATE NOCASE WHERE ((NOT (rt0.c3))) GROUP BY rt0.c1, rt0.c0, t0.c0, rt0.c3, rt0.c2, vt0.c0, vt0.c1, t0.c43 UNION SELECT ALL rt0.c1, rt0.c0, t0.c0, rt0.c3, rt0.c2, vt0.c0, vt0.c1, t0.c43 FROM rt0 FULL OUTER JOIN vt0 ON (((NOT (rt0.c1)))+((+ (vt0.c1)))) INNER JOIN t0 ON TRIM(rt0.c1, vt0.c1) COLLATE NOCASE WHERE (((rt0.c3) ISNULL)) GROUP BY rt0.c1, rt0.c0, t0.c0, rt0.c3, rt0.c2, vt0.c0, vt0.c1, t0.c43;
SELECT rt0.c1, rt0.c0, t0.c0, rt0.c3, rt0.c2, vt0.c0, vt0.c1, t0.c43 FROM rt0 FULL OUTER JOIN vt0 ON (((NOT (rt0.c1)))+((+ (vt0.c1)))) INNER JOIN t0 ON TRIM(rt0.c1, vt0.c1) COLLATE NOCASE GROUP BY rt0.c1, rt0.c0, t0.c0, rt0.c3, rt0.c2, vt0.c0, vt0.c1, t0.c43;
SELECT ALL t0.c0, v0.c0, t0.c43 FROM t0, v0, rt0 GROUP BY t0.c0, v0.c0, t0.c43;
SELECT ALL t0.c0, v0.c0, t0.c43 FROM t0, v0, rt0 GROUP BY t0.c0, v0.c0, t0.c43 HAVING GROUP_CONCAT(CAST(TOTAL(TOTAL(rt0.c1)) AS INTEGER)) UNION ALL SELECT t0.c0, v0.c0, t0.c43 FROM t0, v0, rt0 GROUP BY t0.c0, v0.c0, t0.c43 HAVING (NOT (GROUP_CONCAT(CAST(TOTAL(TOTAL(rt0.c1)) AS INTEGER)))) UNION ALL SELECT ALL t0.c0, v0.c0, t0.c43 FROM t0, v0, rt0 GROUP BY t0.c0, v0.c0, t0.c43 HAVING ((GROUP_CONCAT(CAST(TOTAL(TOTAL(rt0.c1)) AS INTEGER))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((((+ (v0.c0)))>=(((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(730991567)))AND(v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((+ (v0.c0)))>=(((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(730991567)))AND(v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE ((((((+ (v0.c0)))>=(((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(730991567)))AND(v0.c0))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0, rt0, vt0;
SELECT DISTINCT * FROM v0, rt0, vt0 WHERE (CASE WHEN (((vt0.c1))>=((rt0.c2))) THEN TYPEOF(DISTINCT vt0.c0) END) UNION SELECT DISTINCT * FROM v0, rt0, vt0 WHERE ((NOT (CASE WHEN (((vt0.c1))>=((rt0.c2))) THEN TYPEOF(DISTINCT vt0.c0) END))) UNION SELECT DISTINCT * FROM v0, rt0, vt0 WHERE (((CASE WHEN (((vt0.c1))>=((rt0.c2))) THEN TYPEOF(DISTINCT vt0.c0) END) ISNULL));
SELECT DISTINCT * FROM v0, rt0, vt0;
SELECT ALL vt0.c0, t0.c43 FROM v0, rt0, vt0, t0 GROUP BY vt0.c0, t0.c43;
SELECT ALL vt0.c0, t0.c43 FROM v0, rt0, vt0, t0 WHERE (PRINTF(CAST(rt0.c1 AS NUMERIC))) GROUP BY vt0.c0, t0.c43 UNION SELECT ALL vt0.c0, t0.c43 FROM v0, rt0, vt0, t0 WHERE ((NOT (PRINTF(CAST(rt0.c1 AS NUMERIC))))) GROUP BY vt0.c0, t0.c43 UNION SELECT vt0.c0, t0.c43 FROM v0, rt0, vt0, t0 WHERE (((PRINTF(CAST(rt0.c1 AS NUMERIC))) ISNULL)) GROUP BY vt0.c0, t0.c43;
SELECT ALL vt0.c0, t0.c43 FROM v0, rt0, vt0, t0 GROUP BY vt0.c0, t0.c43;
SELECT ALL rt0.c1, vt0.c0, rt0.c2, t0.c43, rt0.c3 FROM rt0 FULL OUTER JOIN vt0 ON rt0.c1 CROSS JOIN t0 ON (((- (rt0.c0))) IS TRUE) GROUP BY rt0.c1, vt0.c0, rt0.c2, t0.c43, rt0.c3;
SELECT rt0.c1, vt0.c0, rt0.c2, t0.c43, rt0.c3 FROM rt0 FULL OUTER JOIN vt0 ON rt0.c1 CROSS JOIN t0 ON (((- (rt0.c0))) IS TRUE) GROUP BY rt0.c1, vt0.c0, rt0.c2, t0.c43, rt0.c3 HAVING AVG(AVG(t0.c43)) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2, t0.c43, rt0.c3 FROM rt0 FULL OUTER JOIN vt0 ON rt0.c1 CROSS JOIN t0 ON (((- (rt0.c0))) IS TRUE) GROUP BY rt0.c1, vt0.c0, rt0.c2, t0.c43, rt0.c3 HAVING (NOT (AVG(AVG(t0.c43)))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2, t0.c43, rt0.c3 FROM rt0 FULL OUTER JOIN vt0 ON rt0.c1 CROSS JOIN t0 ON (((- (rt0.c0))) IS TRUE) GROUP BY rt0.c1, vt0.c0, rt0.c2, t0.c43, rt0.c3 HAVING ((AVG(AVG(t0.c43))) ISNULL);
SELECT rt0.c2, v0.c0, t0.c43, rt0.c3, rt0.c1 FROM rt0, v0, t0;
SELECT rt0.c2, v0.c0, t0.c43, rt0.c3, rt0.c1 FROM rt0, v0, t0 WHERE (json_remove(v0.c0, (rt0.c2 IN (rt0.c0, rt0.c2)), ((rt0.c1) NOT NULL), (- (t0.c0)))) UNION ALL SELECT rt0.c2, v0.c0, t0.c43, rt0.c3, rt0.c1 FROM rt0, v0, t0 WHERE ((NOT (json_remove(v0.c0, (rt0.c2 IN (rt0.c0, rt0.c2)), ((rt0.c1) NOT NULL), (- (t0.c0)))))) UNION ALL SELECT rt0.c2, v0.c0, t0.c43, rt0.c3, rt0.c1 FROM rt0, v0, t0 WHERE (((json_remove(v0.c0, (rt0.c2 IN (rt0.c0, rt0.c2)), ((rt0.c1) NOT NULL), (- (t0.c0)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, t0.c0, rt0.c0, vt0.c1, v0.c0, t0.c43 FROM t0, v0, vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, t0.c0, rt0.c0, vt0.c1, v0.c0, t0.c43 FROM t0, v0, vt0, rt0 WHERE (((x'')/(((rt0.c1)GLOB(t0.c43))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, t0.c0, rt0.c0, vt0.c1, v0.c0, t0.c43 FROM t0, v0, vt0, rt0 WHERE ((NOT (((x'')/(((rt0.c1)GLOB(t0.c43))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, t0.c0, rt0.c0, vt0.c1, v0.c0, t0.c43 FROM t0, v0, vt0, rt0 WHERE (((((x'')/(((rt0.c1)GLOB(t0.c43))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, t0.c0, rt0.c0, vt0.c1, v0.c0, t0.c43 FROM t0, v0, vt0, rt0;
SELECT rt0.c3, t0.c43, rt0.c0, v0.c0 FROM v0, t0, rt0 GROUP BY rt0.c3, t0.c43, rt0.c0, v0.c0;
SELECT rt0.c3, t0.c43, rt0.c0, v0.c0 FROM v0, t0, rt0 WHERE (((((v0.c0)IS(rt0.c2)))|(t0.c0 COLLATE BINARY))) GROUP BY rt0.c3, t0.c43, rt0.c0, v0.c0 UNION SELECT rt0.c3, t0.c43, rt0.c0, v0.c0 FROM v0, t0, rt0 WHERE ((NOT (((((v0.c0)IS(rt0.c2)))|(t0.c0 COLLATE BINARY))))) GROUP BY rt0.c3, t0.c43, rt0.c0, v0.c0 UNION SELECT ALL rt0.c3, t0.c43, rt0.c0, v0.c0 FROM v0, t0, rt0 WHERE (((((((v0.c0)IS(rt0.c2)))|(t0.c0 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c3, t0.c43, rt0.c0, v0.c0;
SELECT rt0.c3, t0.c43, rt0.c0, v0.c0 FROM v0, t0, rt0 GROUP BY rt0.c3, t0.c43, rt0.c0, v0.c0;
SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2 HAVING ((MAX(rt0.c0))IS NOT(MAX(COUNT(*)))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2 HAVING (NOT (((MAX(rt0.c0))IS NOT(MAX(COUNT(*)))))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2 HAVING ((((MAX(rt0.c0))IS NOT(MAX(COUNT(*))))) ISNULL);
SELECT rt0.c0, v0.c0, t0.c43, rt0.c2, rt0.c1 FROM rt0 CROSS JOIN t0 ON (NOT ((rt0.c3 IN (rt0.c1, rt0.c3, v0.c0)))) LEFT OUTER JOIN v0 ON ((((v0.c0)=(x''))) IS TRUE);
SELECT rt0.c0, v0.c0, t0.c43, rt0.c2, rt0.c1 FROM rt0 CROSS JOIN t0 ON (NOT ((rt0.c3 IN (rt0.c1, rt0.c3, v0.c0)))) LEFT OUTER JOIN v0 ON ((((v0.c0)==(x''))) IS TRUE) WHERE (((((CAST(rt0.c3 AS REAL))OR(NULL)))AND(rt0.c0))) UNION ALL SELECT rt0.c0, v0.c0, t0.c43, rt0.c2, rt0.c1 FROM rt0 CROSS JOIN t0 ON (NOT ((rt0.c3 IN (rt0.c1, rt0.c3, v0.c0)))) LEFT OUTER JOIN v0 ON ((((v0.c0)=(x''))) IS TRUE) WHERE ((NOT (((((CAST(rt0.c3 AS REAL))OR(NULL)))AND(rt0.c0))))) UNION ALL SELECT rt0.c0, v0.c0, t0.c43, rt0.c2, rt0.c1 FROM rt0 CROSS JOIN t0 ON (NOT ((rt0.c3 IN (rt0.c1, rt0.c3, v0.c0)))) LEFT OUTER JOIN v0 ON ((((v0.c0)==(x''))) IS TRUE) WHERE (((((((CAST(rt0.c3 AS REAL))OR(NULL)))AND(rt0.c0))) ISNULL));
SELECT rt0.c0, v0.c0, t0.c43, rt0.c2, rt0.c1 FROM rt0 CROSS JOIN t0 ON (NOT ((rt0.c3 IN (rt0.c1, rt0.c3, v0.c0)))) LEFT OUTER JOIN v0 ON ((((v0.c0)=(x''))) IS TRUE);
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE (((NULL)OR(NULL)) COLLATE BINARY) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((NOT (((NULL)OR(NULL)) COLLATE BINARY))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE (((((NULL)OR(NULL)) COLLATE BINARY) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM rt0 INNER JOIN v0 ON ((((((((CAST(0.07985895103389817 AS NUMERIC))OR(UNLIKELY(rt0.c0))))OR(v0.c0 COLLATE RTRIM)))AND(((((((((rt0.c0)AND(rt0.c2)))AND(v0.c0)))OR(v0.c0)))OR(rt0.c2)))))OR(((rt0.c0) IS TRUE))) GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1, v0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM rt0 INNER JOIN v0 ON ((((((((CAST(0.07985895103389817 AS NUMERIC))OR(UNLIKELY(rt0.c0))))OR(v0.c0 COLLATE RTRIM)))AND(((((((((rt0.c0)AND(rt0.c2)))AND(v0.c0)))OR(v0.c0)))OR(rt0.c2)))))OR(((rt0.c0) IS TRUE))) WHERE (0.5249010545146608) GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1, v0.c0 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM rt0 NOT INDEXED INNER JOIN v0 ON ((((((((CAST(0.07985895103389817 AS NUMERIC))OR(UNLIKELY(rt0.c0))))OR(v0.c0 COLLATE RTRIM)))AND(((((((((rt0.c0)AND(rt0.c2)))AND(v0.c0)))OR(v0.c0)))OR(rt0.c2)))))OR(((rt0.c0) IS TRUE))) WHERE ((NOT (0.5249010545146608))) GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1, v0.c0 UNION SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM rt0 INNER JOIN v0 ON ((((((((CAST(0.07985895103389817 AS NUMERIC))OR(UNLIKELY(rt0.c0))))OR(v0.c0 COLLATE RTRIM)))AND(((((((((rt0.c0)AND(rt0.c2)))AND(v0.c0)))OR(v0.c0)))OR(rt0.c2)))))OR(((rt0.c0) IS TRUE))) WHERE (((0.5249010545146608) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1, v0.c0;
SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM rt0 INNER JOIN v0 ON ((((((((CAST(0.07985895103389817 AS NUMERIC))OR(UNLIKELY(rt0.c0))))OR(v0.c0 COLLATE RTRIM)))AND(((((((((rt0.c0)AND(rt0.c2)))AND(v0.c0)))OR(v0.c0)))OR(rt0.c2)))))OR(((rt0.c0) IS TRUE))) GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1, v0.c0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL vt0.c1 FROM vt0 NOT INDEXED GROUP BY vt0.c1 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL * FROM t0, vt0, rt0, v0;
SELECT * FROM t0, vt0, rt0, v0 WHERE (NULLIF(DISTINCT ((rt0.c3)>=(t0.c43)), CAST(NULL AS BLOB))) UNION ALL SELECT * FROM t0, vt0, rt0, v0 WHERE ((NOT (NULLIF(DISTINCT ((rt0.c3)>=(t0.c43)), CAST(NULL AS BLOB))))) UNION ALL SELECT * FROM t0, vt0, rt0, v0 WHERE (((NULLIF(DISTINCT ((rt0.c3)>=(t0.c43)), CAST(NULL AS BLOB))) ISNULL));
SELECT ALL * FROM t0, vt0, rt0, v0;
SELECT DISTINCT * FROM rt0 INDEXED BY i4, v0;
SELECT ALL t0.c43 FROM t0 RIGHT OUTER JOIN vt0 ON x'' CROSS JOIN v0 ON CASE (t0.c43 IN ('687293507', t0.c43))  WHEN (((t0.c0, t0.c43, t0.c0))==((v0.c0, vt0.c0, t0.c43))) THEN '1085628224' WHEN (((vt0.c0))==((vt0.c1))) THEN ((((vt0.c1)AND(0.6470667388843149)))AND(vt0.c0)) WHEN t0.c0 THEN t0.c43 ELSE CAST(v0.c0 AS REAL) END GROUP BY t0.c43;
SELECT t0.c43 FROM t0 RIGHT OUTER JOIN vt0 ON x'' CROSS JOIN v0 ON CASE (t0.c43 IN ('687293507', t0.c43))  WHEN (((t0.c0, t0.c43, t0.c0))=((v0.c0, vt0.c0, t0.c43))) THEN '1085628224' WHEN (((vt0.c0))=((vt0.c1))) THEN ((((vt0.c1)AND(0.6470667388843149)))AND(vt0.c0)) WHEN t0.c0 THEN t0.c43 ELSE CAST(v0.c0 AS REAL) END WHERE ((- (NULL)) COLLATE BINARY) GROUP BY t0.c43 UNION SELECT ALL t0.c43 FROM t0 RIGHT OUTER JOIN vt0 ON x'' CROSS JOIN v0 ON CASE (t0.c43 IN ('687293507', t0.c43))  WHEN (((t0.c0, t0.c43, t0.c0))==((v0.c0, vt0.c0, t0.c43))) THEN '1085628224' WHEN (((vt0.c0))=((vt0.c1))) THEN ((((vt0.c1)AND(0.6470667388843149)))AND(vt0.c0)) WHEN t0.c0 THEN t0.c43 ELSE CAST(v0.c0 AS REAL) END WHERE ((NOT ((- (NULL)) COLLATE BINARY))) GROUP BY t0.c43 UNION SELECT t0.c43 FROM t0 RIGHT OUTER JOIN vt0 ON x'' CROSS JOIN v0 ON CASE (t0.c43 IN ('687293507', t0.c43))  WHEN (((t0.c0, t0.c43, t0.c0))=((v0.c0, vt0.c0, t0.c43))) THEN '1085628224' WHEN (((vt0.c0))==((vt0.c1))) THEN ((((vt0.c1)AND(0.6470667388843149)))AND(vt0.c0)) WHEN t0.c0 THEN t0.c43 ELSE CAST(v0.c0 AS REAL) END WHERE ((((- (NULL)) COLLATE BINARY) ISNULL)) GROUP BY t0.c43;
SELECT ALL t0.c43 FROM t0 RIGHT OUTER JOIN vt0 ON x'' CROSS JOIN v0 ON CASE (t0.c43 IN ('687293507', t0.c43))  WHEN (((t0.c0, t0.c43, t0.c0))==((v0.c0, vt0.c0, t0.c43))) THEN '1085628224' WHEN (((vt0.c0))==((vt0.c1))) THEN ((((vt0.c1)AND(0.6470667388843149)))AND(vt0.c0)) WHEN t0.c0 THEN t0.c43 ELSE CAST(v0.c0 AS REAL) END GROUP BY t0.c43;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(GROUP_CONCAT(v0.c0) AS INTEGER) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(GROUP_CONCAT(v0.c0) AS INTEGER))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(GROUP_CONCAT(v0.c0) AS INTEGER)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(GROUP_CONCAT(v0.c0) AS INTEGER) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(GROUP_CONCAT(v0.c0) AS INTEGER))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(GROUP_CONCAT(v0.c0) AS INTEGER)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM vt0, v0, rt0;
SELECT * FROM vt0, v0, rt0 WHERE ((((((rt0.c2) IS FALSE)))>=((vt0.c1 COLLATE NOCASE)))) UNION ALL SELECT ALL * FROM vt0, v0, rt0 WHERE ((NOT ((((((rt0.c2) IS FALSE)))>=((vt0.c1 COLLATE NOCASE)))))) UNION ALL SELECT ALL * FROM vt0, v0, rt0 WHERE ((((((((rt0.c2) IS FALSE)))>=((vt0.c1 COLLATE NOCASE)))) ISNULL));
SELECT * FROM vt0, v0, rt0;
SELECT DISTINCT vt0.c1 FROM vt0, rt0, v0, t0;
SELECT DISTINCT vt0.c1 FROM vt0, rt0, v0, t0 WHERE (x'cf8c') UNION SELECT DISTINCT vt0.c1 FROM vt0, rt0, v0, t0 WHERE ((NOT (x'cf8c'))) UNION SELECT DISTINCT vt0.c1 FROM vt0, rt0, v0 NOT INDEXED, t0 WHERE (((x'cf8c') ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0, rt0, v0, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((CASE t0.c43  WHEN t0.c43 THEN t0.c0 ELSE t0.c0 END)OR((~ (t0.c43)))))AND((+ (t0.c43))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((CASE t0.c43  WHEN t0.c43 THEN t0.c0 ELSE t0.c0 END)OR((~ (t0.c43)))))AND((+ (t0.c43))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((CASE t0.c43  WHEN t0.c43 THEN t0.c0 ELSE t0.c0 END)OR((~ (t0.c43)))))AND((+ (t0.c43))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c1, rt0.c0, vt0.c1, rt0.c2, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c1, rt0.c2, rt0.c3;
SELECT rt0.c1, rt0.c0, vt0.c1, rt0.c2, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c1, rt0.c2, rt0.c3 HAVING AVG(AVG(MIN(MAX(TOTAL(COUNT(*)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c1, rt0.c2, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c1, rt0.c2, rt0.c3 HAVING (NOT (AVG(AVG(MIN(MAX(TOTAL(COUNT(*)))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c1, rt0.c2, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c1, rt0.c2, rt0.c3 HAVING ((AVG(AVG(MIN(MAX(TOTAL(COUNT(*))))))) ISNULL);
SELECT ALL MAX(CASE rt0.c3 COLLATE RTRIM  WHEN ((rt0.c2)-(NULL)) THEN ((rt0.c1) ISNULL) WHEN vt0.c1 THEN (('828137471') NOT BETWEEN (v0.c0) AND (t0.c0)) WHEN HEX(DISTINCT vt0.c1) THEN (vt0.c0 IN ()) WHEN ((t0.c0)==(rt0.c1)) THEN ((rt0.c2)OR(vt0.c1)) WHEN (rt0.c1 IN ()) THEN ((v0.c0)>=(t0.c0)) END) FROM rt0, vt0, t0, v0 ORDER BY CASE WHEN (+ (vt0.c0)) THEN CAST(v0.c0 AS BLOB) END  NULLS FIRST;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((((((v0.c0, x'', v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))/(v0.c0))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((((v0.c0, x'', v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))/(v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((((((v0.c0, x'', v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))/(v0.c0))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0)>=(v0.c0)), ((v0.c0) ISNULL), CAST(v0.c0 AS INTEGER))) AND ((((((v0.c0)OR(v0.c0)))AND(v0.c0)), v0.c0, 1.59920739E8)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0)>=(v0.c0)), ((v0.c0) ISNULL), CAST(v0.c0 AS INTEGER))) AND ((((((v0.c0)OR(v0.c0)))AND(v0.c0)), v0.c0, 1.59920739E8)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0)>=(v0.c0)), ((v0.c0) ISNULL), CAST(v0.c0 AS INTEGER))) AND ((((((v0.c0)OR(v0.c0)))AND(v0.c0)), v0.c0, 1.59920739E8)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0, vt0.c1 FROM vt0, rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0, vt0.c1;
SELECT v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0, vt0.c1 FROM vt0, rt0, v0 WHERE (((rt0.c2) BETWEEN (rt0.c2) AND ('1850094869')) COLLATE RTRIM) GROUP BY v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0, vt0.c1 UNION SELECT ALL v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0, vt0.c1 FROM vt0, rt0, v0 WHERE ((NOT (((rt0.c2) BETWEEN (rt0.c2) AND ('1850094869')) COLLATE RTRIM))) GROUP BY v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0, vt0.c1 UNION SELECT ALL v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0, vt0.c1 FROM vt0, rt0, v0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND ('1850094869')) COLLATE RTRIM) ISNULL)) GROUP BY v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0, vt0.c1;
SELECT ALL v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0, vt0.c1 FROM vt0, rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0, vt0.c1;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((MIN(vt0.c0))GLOB(COUNT(*))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((MIN(vt0.c0))GLOB(COUNT(*))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((MIN(vt0.c0))GLOB(COUNT(*)))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((MIN(vt0.c0))GLOB(COUNT(*))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((MIN(vt0.c0))GLOB(COUNT(*))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((MIN(vt0.c0))GLOB(COUNT(*)))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT t0.c43, t0.c0, vt0.c0 FROM vt0, t0;
SELECT t0.c43, t0.c0, vt0.c0 FROM vt0 NOT INDEXED, t0 WHERE (LIKELIHOOD(CASE t0.c0  WHEN vt0.c1 THEN t0.c43 ELSE 320795182 END, 0.13474522968563563)) UNION ALL SELECT t0.c43, t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (LIKELIHOOD(CASE t0.c0  WHEN vt0.c1 THEN t0.c43 ELSE 320795182 END, 0.13474522968563563)))) UNION ALL SELECT t0.c43, t0.c0, vt0.c0 FROM vt0, t0 WHERE (((LIKELIHOOD(CASE t0.c0  WHEN vt0.c1 THEN t0.c43 ELSE 320795182 END, 0.13474522968563563)) ISNULL));
SELECT t0.c43, t0.c0, vt0.c0 FROM vt0, t0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS REAL)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS REAL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS REAL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0, t0.c0, t0.c43, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, t0.c43, vt0.c1;
SELECT ALL vt0.c0, t0.c0, t0.c43, vt0.c1 FROM t0, vt0 WHERE (((t0.c43 IN (vt0.c0)) IN ())) GROUP BY vt0.c0, t0.c0, t0.c43, vt0.c1 UNION SELECT vt0.c0, t0.c0, t0.c43, vt0.c1 FROM t0, vt0 WHERE ((NOT (((t0.c43 IN (vt0.c0)) IN ())))) GROUP BY vt0.c0, t0.c0, t0.c43, vt0.c1 UNION SELECT ALL vt0.c0, t0.c0, t0.c43, vt0.c1 FROM t0, vt0 WHERE (((((t0.c43 IN (vt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c0, t0.c0, t0.c43, vt0.c1;
SELECT ALL vt0.c0, t0.c0, t0.c43, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, t0.c43, vt0.c1;
SELECT ALL t0.c0 FROM v0, vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM v0, vt0, t0 GROUP BY t0.c0 HAVING ((((MAX(t0.c43)) NOTNULL)) NOT BETWEEN (SQLITE_COMPILEOPTION_GET(t0.c0)) AND (AVG(AVG(AVG(TOTAL(t0.c43)))))) UNION ALL SELECT t0.c0 FROM v0, vt0, t0 GROUP BY t0.c0 HAVING (NOT (((((MAX(t0.c43)) NOTNULL)) NOT BETWEEN (SQLITE_COMPILEOPTION_GET(t0.c0)) AND (AVG(AVG(AVG(TOTAL(t0.c43)))))))) UNION ALL SELECT t0.c0 FROM v0, vt0, t0 GROUP BY t0.c0 HAVING ((((((MAX(t0.c43)) NOTNULL)) NOT BETWEEN (SQLITE_COMPILEOPTION_GET(t0.c0)) AND (AVG(AVG(AVG(TOTAL(t0.c43))))))) ISNULL);
SELECT rt0.c0, rt0.c1, t0.c43, rt0.c3, t0.c0 FROM rt0, t0;
SELECT ALL rt0.c0, rt0.c1, t0.c43, rt0.c3, t0.c0 FROM rt0, t0 WHERE (((t0.c0) NOT BETWEEN (t0.c43) AND (rt0.c2)) COLLATE RTRIM COLLATE BINARY) UNION ALL SELECT ALL rt0.c0, rt0.c1, t0.c43, rt0.c3, t0.c0 FROM rt0, t0 WHERE ((NOT (((t0.c0) NOT BETWEEN (t0.c43) AND (rt0.c2)) COLLATE RTRIM COLLATE BINARY))) UNION ALL SELECT ALL rt0.c0, rt0.c1, t0.c43, rt0.c3, t0.c0 FROM rt0, t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c43) AND (rt0.c2)) COLLATE RTRIM COLLATE BINARY) ISNULL));
SELECT rt0.c0, rt0.c1, t0.c43, rt0.c3, t0.c0 FROM rt0, t0;
SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0 WHERE (((((vt0.c1)<=(vt0.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (((((vt0.c1)<=(vt0.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0 WHERE (((((((vt0.c1)<=(vt0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0;
SELECT v0.c0 FROM rt0 CROSS JOIN vt0 ON '0.5269332168411157' LEFT OUTER JOIN v0 ON CASE WHEN (+ (t0.c43)) THEN t0.c43 END CROSS JOIN t0 ON ((((t0.c0)OR(((vt0.c0) NOT BETWEEN (t0.c43) AND (rt0.c0)))))AND(((rt0.c1)-(rt0.c0)))) GROUP BY v0.c0;
SELECT ALL vt0.c1, rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c43, vt0.c0 FROM rt0, v0, vt0, t0 GROUP BY vt0.c1, rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c43, vt0.c0;
SELECT ALL vt0.c1, rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c43, vt0.c0 FROM rt0, v0, vt0, t0 GROUP BY vt0.c1, rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c43, vt0.c0 HAVING AVG(CASE WHEN rt0.c0 THEN v0.c0 ELSE AVG(rt0.c1) END) UNION ALL SELECT vt0.c1, rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c43, vt0.c0 FROM rt0, v0, vt0, t0 GROUP BY vt0.c1, rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c43, vt0.c0 HAVING (NOT (AVG(CASE WHEN rt0.c0 THEN v0.c0 ELSE AVG(rt0.c1) END))) UNION ALL SELECT vt0.c1, rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c43, vt0.c0 FROM rt0, v0, vt0, t0 GROUP BY vt0.c1, rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c43, vt0.c0 HAVING ((AVG(CASE WHEN rt0.c0 THEN v0.c0 ELSE AVG(rt0.c1) END)) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM)<=(((vt0.c0)-(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c1 COLLATE RTRIM)<=(((vt0.c0)-(vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c1 COLLATE RTRIM)<=(((vt0.c0)-(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN (((((v0.c0))<((vt0.c1))), ((vt0.c1) IS TRUE), (vt0.c0 IN (vt0.c1)))) AND (((+ (v0.c0)), IFNULL(DISTINCT vt0.c1, vt0.c0), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ((NOT ((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN (((((v0.c0))<((vt0.c1))), ((vt0.c1) IS TRUE), (vt0.c0 IN (vt0.c1)))) AND (((+ (v0.c0)), IFNULL(DISTINCT vt0.c1, vt0.c0), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))))))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN (((((v0.c0))<((vt0.c1))), ((vt0.c1) IS TRUE), (vt0.c0 IN (vt0.c1)))) AND (((+ (v0.c0)), IFNULL(DISTINCT vt0.c1, vt0.c0), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT t0.c43 FROM vt0, v0 RIGHT OUTER JOIN t0 ON CAST((v0.c0 IN ()) AS NUMERIC) GROUP BY t0.c43;
SELECT ALL t0.c43 FROM vt0, v0 RIGHT OUTER JOIN t0 ON CAST((v0.c0 IN ()) AS NUMERIC) WHERE (LIKELY(DISTINCT TYPEOF(vt0.c1))) GROUP BY t0.c43 UNION SELECT ALL t0.c43 FROM vt0, v0 RIGHT OUTER JOIN t0 ON CAST((v0.c0 IN ()) AS NUMERIC) WHERE ((NOT (LIKELY(DISTINCT TYPEOF(vt0.c1))))) GROUP BY t0.c43 UNION SELECT ALL t0.c43 FROM vt0, v0 RIGHT OUTER JOIN t0 ON CAST((v0.c0 IN ()) AS NUMERIC) WHERE (((LIKELY(DISTINCT TYPEOF(vt0.c1))) ISNULL)) GROUP BY t0.c43;
SELECT t0.c43 FROM vt0, v0 RIGHT OUTER JOIN t0 ON CAST((v0.c0 IN ()) AS NUMERIC) GROUP BY t0.c43;
SELECT t0.c43 FROM vt0, t0 GROUP BY t0.c43;
SELECT t0.c43 FROM vt0, t0 GROUP BY t0.c43 HAVING COUNT(COUNT(AVG(COUNT(t0.c43)))) UNION ALL SELECT t0.c43 FROM vt0, t0 GROUP BY t0.c43 HAVING (NOT (COUNT(COUNT(AVG(COUNT(t0.c43)))))) UNION ALL SELECT t0.c43 FROM vt0, t0 GROUP BY t0.c43 HAVING ((COUNT(COUNT(AVG(COUNT(t0.c43))))) ISNULL);
SELECT ALL * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE (((CASE WHEN t0.c0 THEN t0.c43 WHEN t0.c0 THEN vt0.c1 WHEN vt0.c1 THEN t0.c0 END)>((t0.c43 IN ())))) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT (((CASE WHEN t0.c0 THEN t0.c43 WHEN t0.c0 THEN vt0.c1 WHEN vt0.c1 THEN t0.c0 END)>((t0.c43 IN ())))))) UNION ALL SELECT * FROM vt0, t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c43 WHEN t0.c0 THEN vt0.c1 WHEN vt0.c1 THEN t0.c0 END)>((t0.c43 IN ())))) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT vt0.c1, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT vt0.c1, rt0.c0 FROM rt0, vt0 WHERE (NULL) UNION SELECT DISTINCT vt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt0.c1, rt0.c0 FROM rt0, vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c0 FROM rt0, vt0;
SELECT vt0.c0, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0, v0.c0, rt0.c2, rt0.c0;
SELECT vt0.c0, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0, vt0 WHERE (CAST(((rt0.c1)%(rt0.c1)) AS NUMERIC)) GROUP BY vt0.c0, v0.c0, rt0.c2, rt0.c0 UNION SELECT vt0.c0, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0, vt0 WHERE ((NOT (CAST(((rt0.c1)%(rt0.c1)) AS NUMERIC)))) GROUP BY vt0.c0, v0.c0, rt0.c2, rt0.c0 UNION SELECT vt0.c0, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0, vt0 WHERE (((CAST(((rt0.c1)%(rt0.c1)) AS NUMERIC)) ISNULL)) GROUP BY vt0.c0, v0.c0, rt0.c2, rt0.c0;
SELECT vt0.c0, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0, v0.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING TOTAL(CAST(0.470445292499154 AS NUMERIC)) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING (NOT (TOTAL(CAST(0.470445292499154 AS NUMERIC)))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING ((TOTAL(CAST(0.470445292499154 AS NUMERIC))) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING TOTAL(CAST(0.470445292499154 AS NUMERIC)) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING (NOT (TOTAL(CAST(0.470445292499154 AS NUMERIC)))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING ((TOTAL(CAST(0.470445292499154 AS NUMERIC))) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT ALL t0.c0, rt0.c1, vt0.c0, rt0.c0 FROM vt0, v0, rt0 RIGHT OUTER JOIN t0 ON (rt0.c2 IN ());
SELECT ALL t0.c0, rt0.c1, vt0.c0, rt0.c0 FROM vt0, v0, rt0 RIGHT OUTER JOIN t0 ON (rt0.c2 IN ()) WHERE (((((rt0.c2, 0.3917420232272162, v0.c0)) BETWEEN ((vt0.c1, t0.c0, 0.9983751031261782)) AND ((t0.c43, vt0.c1, rt0.c3))) IN ())) UNION ALL SELECT t0.c0, rt0.c1, vt0.c0, rt0.c0 FROM vt0, v0, rt0 RIGHT OUTER JOIN t0 ON (rt0.c2 IN ()) WHERE ((NOT (((((rt0.c2, 0.3917420232272162, v0.c0)) BETWEEN ((vt0.c1, t0.c0, 0.9983751031261782)) AND ((t0.c43, vt0.c1, rt0.c3))) IN ())))) UNION ALL SELECT ALL t0.c0, rt0.c1, vt0.c0, rt0.c0 FROM vt0, v0, rt0 RIGHT OUTER JOIN t0 ON (rt0.c2 IN ()) WHERE (((((((rt0.c2, 0.3917420232272162, v0.c0)) BETWEEN ((vt0.c1, t0.c0, 0.9983751031261782)) AND ((t0.c43, vt0.c1, rt0.c3))) IN ())) ISNULL));
SELECT ALL t0.c0, rt0.c1, vt0.c0, rt0.c0 FROM vt0, v0, rt0 RIGHT OUTER JOIN t0 ON (rt0.c2 IN ());
SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON (- ((vt0.c0 IN (rt0.c0, vt0.c1)))) CROSS JOIN vt0 ON (((vt0.c1))<((v0.c0))) COLLATE BINARY;
SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON (- ((vt0.c0 IN (rt0.c0, vt0.c1)))) CROSS JOIN vt0 ON (((vt0.c1))<((v0.c0))) COLLATE BINARY WHERE (((v0.c0 COLLATE RTRIM) BETWEEN (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END) AND ((rt0.c2 IN ())))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON (- ((vt0.c0 IN (rt0.c0, vt0.c1)))) CROSS JOIN vt0 ON (((vt0.c1))<((v0.c0))) COLLATE BINARY WHERE ((NOT (((v0.c0 COLLATE RTRIM) BETWEEN (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END) AND ((rt0.c2 IN ())))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON (- ((vt0.c0 IN (rt0.c0, vt0.c1)))) CROSS JOIN vt0 ON (((vt0.c1))<((v0.c0))) COLLATE BINARY WHERE (((((v0.c0 COLLATE RTRIM) BETWEEN (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END) AND ((rt0.c2 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON (- ((vt0.c0 IN (rt0.c0, vt0.c1)))) CROSS JOIN vt0 ON (((vt0.c1))<((v0.c0))) COLLATE BINARY;
SELECT ALL rt0.c3, rt0.c1 FROM v0, t0, rt0, vt0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM v0, t0, rt0, vt0 WHERE ((((- (x''))) NOT NULL)) GROUP BY rt0.c3, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c1 FROM v0, t0, rt0, vt0 WHERE ((NOT ((((- (x''))) NOT NULL)))) GROUP BY rt0.c3, rt0.c1 UNION SELECT rt0.c3, rt0.c1 FROM v0, t0, rt0, vt0 WHERE ((((((- (x''))) NOT NULL)) ISNULL)) GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM v0, t0, rt0, vt0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL v0.c0 FROM t0, v0, rt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0, v0, rt0 GROUP BY v0.c0 HAVING ((((NOT (rt0.c0))))=((AVG(t0.c43)))) UNION ALL SELECT ALL v0.c0 FROM t0, v0, rt0 GROUP BY v0.c0 HAVING (NOT (((((NOT (rt0.c0))))=((AVG(t0.c43)))))) UNION ALL SELECT ALL v0.c0 FROM t0, v0, rt0 GROUP BY v0.c0 HAVING ((((((NOT (rt0.c0))))==((AVG(t0.c43))))) ISNULL);
SELECT ALL v0.c0 FROM t0, v0, rt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0, v0, rt0 GROUP BY v0.c0 HAVING ((((NOT (rt0.c0))))=((AVG(t0.c43)))) UNION ALL SELECT ALL v0.c0 FROM t0, v0, rt0 GROUP BY v0.c0 HAVING (NOT (((((NOT (rt0.c0))))=((AVG(t0.c43)))))) UNION ALL SELECT ALL v0.c0 FROM t0, v0, rt0 GROUP BY v0.c0 HAVING ((((((NOT (rt0.c0))))==((AVG(t0.c43))))) ISNULL);
SELECT ALL v0.c0 FROM t0, v0, rt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CASE WHEN ((v0.c0) NOTNULL) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) END) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE WHEN ((v0.c0) NOTNULL) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) END))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN ((v0.c0) NOTNULL) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) END) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT t0.c43, rt0.c3, rt0.c0, v0.c0, t0.c0, vt0.c1, rt0.c1, rt0.c2, vt0.c0 FROM rt0, t0, v0 INNER JOIN vt0 ON ((t0.c0)GLOB(vt0.c1));
SELECT DISTINCT t0.c43, rt0.c3, rt0.c0, v0.c0, t0.c0, vt0.c1, rt0.c1, rt0.c2, vt0.c0 FROM rt0, t0, v0 INNER JOIN vt0 ON ((t0.c0)GLOB(vt0.c1)) WHERE ((((vt0.c0))<((t0.c43))) COLLATE BINARY) UNION SELECT DISTINCT t0.c43, rt0.c3, rt0.c0, v0.c0, t0.c0, vt0.c1, rt0.c1, rt0.c2, vt0.c0 FROM rt0, t0, v0 INNER JOIN vt0 ON ((t0.c0)GLOB(vt0.c1)) WHERE ((NOT ((((vt0.c0))<((t0.c43))) COLLATE BINARY))) UNION SELECT DISTINCT t0.c43, rt0.c3, rt0.c0, v0.c0, t0.c0, vt0.c1, rt0.c1, rt0.c2, vt0.c0 FROM rt0, t0, v0 INNER JOIN vt0 ON ((t0.c0)GLOB(vt0.c1)) WHERE ((((((vt0.c0))<((t0.c43))) COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c43, rt0.c3, rt0.c0, v0.c0, t0.c0, vt0.c1, rt0.c1, rt0.c2, vt0.c0 FROM rt0, t0, v0 INNER JOIN vt0 ON ((t0.c0)GLOB(vt0.c1));
SELECT rt0.c1, rt0.c2, vt0.c1, rt0.c3, rt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON QUOTE(CAST(NULL AS REAL)) FULL OUTER JOIN rt0 ON CHAR(((v0.c0)<=(rt0.c1))) GROUP BY rt0.c1, rt0.c2, vt0.c1, rt0.c3, rt0.c0;
SELECT rt0.c1, rt0.c2, vt0.c1, rt0.c3, rt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON QUOTE(CAST(NULL AS REAL)) FULL OUTER JOIN rt0 ON CHAR(((v0.c0)<=(rt0.c1))) WHERE ((((0.9021325653598827)) NOT BETWEEN ((v0.c0)) AND ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)))) GROUP BY rt0.c1, rt0.c2, vt0.c1, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, vt0.c1, rt0.c3, rt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON QUOTE(CAST(NULL AS REAL)) FULL OUTER JOIN rt0 ON CHAR(((v0.c0)<=(rt0.c1))) WHERE ((NOT ((((0.9021325653598827)) NOT BETWEEN ((v0.c0)) AND ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)))))) GROUP BY rt0.c1, rt0.c2, vt0.c1, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, vt0.c1, rt0.c3, rt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON QUOTE(CAST(NULL AS REAL)) FULL OUTER JOIN rt0 ON CHAR(((v0.c0)<=(rt0.c1))) WHERE ((((((0.9021325653598827)) NOT BETWEEN ((v0.c0)) AND ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)))) ISNULL)) GROUP BY rt0.c1, rt0.c2, vt0.c1, rt0.c3, rt0.c0;
SELECT rt0.c1, rt0.c2, vt0.c1, rt0.c3, rt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON QUOTE(CAST(NULL AS REAL)) FULL OUTER JOIN rt0 ON CHAR(((v0.c0)<=(rt0.c1))) GROUP BY rt0.c1, rt0.c2, vt0.c1, rt0.c3, rt0.c0;
SELECT vt0.c0, rt0.c0, vt0.c1, rt0.c2, t0.c43, rt0.c1 FROM rt0, v0, t0, vt0 GROUP BY vt0.c0, rt0.c0, vt0.c1, rt0.c2, t0.c43, rt0.c1;
SELECT vt0.c0, rt0.c0, vt0.c1, rt0.c2, t0.c43, rt0.c1 FROM rt0, v0, t0, vt0 GROUP BY vt0.c0, rt0.c0, vt0.c1, rt0.c2, t0.c43, rt0.c1 HAVING MIN(COUNT(*)) UNION ALL SELECT vt0.c0, rt0.c0, vt0.c1, rt0.c2, t0.c43, rt0.c1 FROM rt0, v0, t0, vt0 GROUP BY vt0.c0, rt0.c0, vt0.c1, rt0.c2, t0.c43, rt0.c1 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, rt0.c0, vt0.c1, rt0.c2, t0.c43, rt0.c1 FROM rt0, v0, t0, vt0 GROUP BY vt0.c0, rt0.c0, vt0.c1, rt0.c2, t0.c43, rt0.c1 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL * FROM rt0, vt0, t0, v0;
SELECT ALL * FROM rt0, vt0, t0, v0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c1)) THEN rt0.c3 COLLATE RTRIM ELSE (vt0.c1 IN (rt0.c2)) END) UNION ALL SELECT ALL * FROM rt0, vt0, t0, v0 WHERE ((NOT (CASE WHEN ((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c1)) THEN rt0.c3 COLLATE RTRIM ELSE (vt0.c1 IN (rt0.c2)) END))) UNION ALL SELECT * FROM rt0, vt0, t0, v0 WHERE (((CASE WHEN ((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c1)) THEN rt0.c3 COLLATE RTRIM ELSE (vt0.c1 IN (rt0.c2)) END) ISNULL));
SELECT ALL * FROM rt0, vt0, t0, v0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (json_extract((((('-396040783')OR(vt0.c1)))AND(vt0.c0)), UPPER(DISTINCT '-1259823201'), CAST(vt0.c0 AS TEXT), ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (json_extract((((('-396040783')OR(vt0.c1)))AND(vt0.c0)), UPPER(DISTINCT '-1259823201'), CAST(vt0.c0 AS TEXT), ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((json_extract((((('-396040783')OR(vt0.c1)))AND(vt0.c0)), UPPER(DISTINCT '-1259823201'), CAST(vt0.c0 AS TEXT), ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT t0.c0, vt0.c1, t0.c43 FROM vt0, t0 GROUP BY t0.c0, vt0.c1, t0.c43;
SELECT ALL t0.c0, vt0.c1, t0.c43 FROM vt0, t0 WHERE (load_extension(vt0.c1) COLLATE NOCASE) GROUP BY t0.c0, vt0.c1, t0.c43 UNION SELECT t0.c0, vt0.c1, t0.c43 FROM vt0, t0 WHERE ((NOT (load_extension(vt0.c1) COLLATE NOCASE))) GROUP BY t0.c0, vt0.c1, t0.c43 UNION SELECT t0.c0, vt0.c1, t0.c43 FROM vt0, t0 WHERE (((load_extension(vt0.c1) COLLATE NOCASE) ISNULL)) GROUP BY t0.c0, vt0.c1, t0.c43;
SELECT t0.c0, vt0.c1, t0.c43 FROM vt0, t0 GROUP BY t0.c0, vt0.c1, t0.c43;
SELECT ALL t0.c43, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY t0.c43, rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT t0.c43, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY t0.c43, rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING (+ (t0.c43)) COLLATE BINARY UNION ALL SELECT t0.c43, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY t0.c43, rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING (NOT ((+ (t0.c43)) COLLATE BINARY)) UNION ALL SELECT t0.c43, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY t0.c43, rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING (((+ (t0.c43)) COLLATE BINARY) ISNULL);
SELECT ALL t0.c43, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY t0.c43, rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT t0.c43, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY t0.c43, rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING (+ (t0.c43)) COLLATE BINARY UNION ALL SELECT t0.c43, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY t0.c43, rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING (NOT ((+ (t0.c43)) COLLATE BINARY)) UNION ALL SELECT t0.c43, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY t0.c43, rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING (((+ (t0.c43)) COLLATE BINARY) ISNULL);
SELECT ALL t0.c43, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY t0.c43, rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ('387087291') UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ('387087291'))) UNION ALL SELECT ALL * FROM vt0 WHERE ((('387087291') ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ('KH') UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ('KH'))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((('KH') ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL t0.c0, rt0.c3, rt0.c1, rt0.c0, t0.c43 FROM rt0, t0 GROUP BY t0.c0, rt0.c3, rt0.c1, rt0.c0, t0.c43;
SELECT t0.c0, rt0.c3, rt0.c1, rt0.c0, t0.c43 FROM rt0, t0 WHERE (('0.7054794474642561' IN ())) GROUP BY t0.c0, rt0.c3, rt0.c1, rt0.c0, t0.c43 UNION SELECT ALL t0.c0, rt0.c3, rt0.c1, rt0.c0, t0.c43 FROM rt0, t0 WHERE ((NOT (('0.7054794474642561' IN ())))) GROUP BY t0.c0, rt0.c3, rt0.c1, rt0.c0, t0.c43 UNION SELECT t0.c0, rt0.c3, rt0.c1, rt0.c0, t0.c43 FROM rt0, t0 WHERE (((('0.7054794474642561' IN ())) ISNULL)) GROUP BY t0.c0, rt0.c3, rt0.c1, rt0.c0, t0.c43;
SELECT ALL t0.c0, rt0.c3, rt0.c1, rt0.c0, t0.c43 FROM rt0, t0 GROUP BY t0.c0, rt0.c3, rt0.c1, rt0.c0, t0.c43;
SELECT ALL vt0.c0, t0.c0 FROM vt0, v0, t0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, v0, t0 GROUP BY vt0.c0, t0.c0 HAVING GROUP_CONCAT((+ (v0.c0))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0, v0, t0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (GROUP_CONCAT((+ (v0.c0))))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0, v0, t0 GROUP BY vt0.c0, t0.c0 HAVING ((GROUP_CONCAT((+ (v0.c0)))) ISNULL);
SELECT ALL vt0.c0, t0.c0 FROM vt0, v0, t0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, v0, t0 GROUP BY vt0.c0, t0.c0 HAVING GROUP_CONCAT((+ (v0.c0))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0, v0, t0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (GROUP_CONCAT((+ (v0.c0))))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0, v0, t0 GROUP BY vt0.c0, t0.c0 HAVING ((GROUP_CONCAT((+ (v0.c0)))) ISNULL);
SELECT ALL vt0.c0, t0.c0 FROM vt0, v0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 NOT INDEXED WHERE ((rt0.c2 IN ())) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT ((rt0.c2 IN ())))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c2 IN ())) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM t0, v0, vt0, rt0;
SELECT DISTINCT * FROM t0, v0, vt0, rt0 WHERE (((((v0.c0)AND(rt0.c0))) NOT BETWEEN ('-649919160') AND ((vt0.c0 IN ())))) UNION SELECT DISTINCT * FROM t0, v0, vt0, rt0 WHERE ((NOT (((((v0.c0)AND(rt0.c0))) NOT BETWEEN ('-649919160') AND ((vt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM t0, v0, vt0, rt0 WHERE (((((((v0.c0)AND(rt0.c0))) NOT BETWEEN ('-649919160') AND ((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM t0, v0, vt0, rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM v0 INNER JOIN t0 ON ((UNLIKELY(DISTINCT x''))>>((+ (t0.c43)))) LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE NOCASE)=(CASE '-2120897520'  WHEN t0.c43 THEN t0.c0 WHEN v0.c0 THEN rt0.c2 WHEN 0.3005636119393611 THEN rt0.c3 WHEN 0.12191620967317585 THEN rt0.c0 WHEN t0.c0 THEN v0.c0 ELSE t0.c43 END)) GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM v0 INNER JOIN t0 ON ((UNLIKELY(DISTINCT x''))>>((+ (t0.c43)))) LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE NOCASE)==(CASE '-2120897520'  WHEN t0.c43 THEN t0.c0 WHEN v0.c0 THEN rt0.c2 WHEN 0.3005636119393611 THEN rt0.c3 WHEN 0.12191620967317585 THEN rt0.c0 WHEN t0.c0 THEN v0.c0 ELSE t0.c43 END)) WHERE ((((NOT (t0.c43))) NOT BETWEEN (t0.c43 COLLATE RTRIM) AND (((((t0.c43)OR(v0.c0)))OR(rt0.c1))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM v0 INNER JOIN t0 ON ((UNLIKELY(DISTINCT x''))>>((+ (t0.c43)))) LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE NOCASE)=(CASE '-2120897520'  WHEN t0.c43 THEN t0.c0 WHEN v0.c0 THEN rt0.c2 WHEN 0.3005636119393611 THEN rt0.c3 WHEN 0.12191620967317585 THEN rt0.c0 WHEN t0.c0 THEN v0.c0 ELSE t0.c43 END)) WHERE ((NOT ((((NOT (t0.c43))) NOT BETWEEN (t0.c43 COLLATE RTRIM) AND (((((t0.c43)OR(v0.c0)))OR(rt0.c1))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM v0 INNER JOIN t0 ON ((UNLIKELY(DISTINCT x''))>>((+ (t0.c43)))) LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE NOCASE)==(CASE '-2120897520'  WHEN t0.c43 THEN t0.c0 WHEN v0.c0 THEN rt0.c2 WHEN 0.3005636119393611 THEN rt0.c3 WHEN 0.12191620967317585 THEN rt0.c0 WHEN t0.c0 THEN v0.c0 ELSE t0.c43 END)) WHERE ((((((NOT (t0.c43))) NOT BETWEEN (t0.c43 COLLATE RTRIM) AND (((((t0.c43)OR(v0.c0)))OR(rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM v0 INNER JOIN t0 ON ((UNLIKELY(DISTINCT x''))>>((+ (t0.c43)))) LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE NOCASE)=(CASE '-2120897520'  WHEN t0.c43 THEN t0.c0 WHEN v0.c0 THEN rt0.c2 WHEN 0.3005636119393611 THEN rt0.c3 WHEN 0.12191620967317585 THEN rt0.c0 WHEN t0.c0 THEN v0.c0 ELSE t0.c43 END)) GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c0;
SELECT t0.c43, t0.c0 FROM vt0, t0 GROUP BY t0.c43, t0.c0;
SELECT ALL t0.c43, t0.c0 FROM vt0, t0 GROUP BY t0.c43, t0.c0 HAVING (+ (COUNT(*))) UNION ALL SELECT t0.c43, t0.c0 FROM vt0, t0 GROUP BY t0.c43, t0.c0 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT ALL t0.c43, t0.c0 FROM vt0, t0 GROUP BY t0.c43, t0.c0 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT t0.c43, t0.c0 FROM vt0, t0 GROUP BY t0.c43, t0.c0;
SELECT ALL t0.c43, t0.c0 FROM vt0, t0 GROUP BY t0.c43, t0.c0 HAVING (+ (COUNT(*))) UNION ALL SELECT t0.c43, t0.c0 FROM vt0, t0 GROUP BY t0.c43, t0.c0 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT ALL t0.c43, t0.c0 FROM vt0, t0 GROUP BY t0.c43, t0.c0 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT t0.c43, t0.c0 FROM vt0, t0 GROUP BY t0.c43, t0.c0;
SELECT vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((NULL)) AND (((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c1, vt0.c1))))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((NULL)) AND (((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c1, vt0.c1))))))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((NULL)) AND (((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c1, vt0.c1))))))) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (((0.6956513473634464 COLLATE BINARY)GLOB(((rt0.c2)*(t0.c0))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (((0.6956513473634464 COLLATE BINARY)GLOB(((rt0.c2)*(t0.c0))))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((((0.6956513473634464 COLLATE BINARY)GLOB(((rt0.c2)*(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL rt0.c2, t0.c0, v0.c0, rt0.c1, rt0.c0 FROM v0, rt0, vt0 RIGHT OUTER JOIN t0 ON CAST((v0.c0 IN (rt0.c1)) AS REAL) GROUP BY rt0.c2, t0.c0, v0.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, t0.c0, v0.c0, rt0.c1, rt0.c0 FROM v0, rt0, vt0 RIGHT OUTER JOIN t0 ON CAST((v0.c0 IN (rt0.c1)) AS REAL) WHERE (x'') GROUP BY rt0.c2, t0.c0, v0.c0, rt0.c1, rt0.c0 UNION SELECT rt0.c2, t0.c0, v0.c0, rt0.c1, rt0.c0 FROM v0, rt0, vt0 RIGHT OUTER JOIN t0 ON CAST((v0.c0 IN (rt0.c1)) AS REAL) WHERE ((NOT (x''))) GROUP BY rt0.c2, t0.c0, v0.c0, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, t0.c0, v0.c0, rt0.c1, rt0.c0 FROM v0, rt0, vt0 RIGHT OUTER JOIN t0 ON CAST((v0.c0 IN (rt0.c1)) AS REAL) WHERE (((x'') ISNULL)) GROUP BY rt0.c2, t0.c0, v0.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, t0.c0, v0.c0, rt0.c1, rt0.c0 FROM v0, rt0, vt0 RIGHT OUTER JOIN t0 ON CAST((v0.c0 IN (rt0.c1)) AS REAL) GROUP BY rt0.c2, t0.c0, v0.c0, rt0.c1, rt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (v0.c0 COLLATE RTRIM IN ()) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((v0.c0 COLLATE RTRIM IN ()))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((v0.c0 COLLATE RTRIM IN ())) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (v0.c0 COLLATE RTRIM IN ()) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((v0.c0 COLLATE RTRIM IN ()))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((v0.c0 COLLATE RTRIM IN ())) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0, t0, rt0;
SELECT ALL * FROM v0, t0, rt0 WHERE (v0.c0) UNION ALL SELECT * FROM v0, t0, rt0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM v0, t0, rt0 WHERE (((v0.c0) ISNULL));
SELECT * FROM v0, t0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, vt0.c1, rt0.c1, v0.c0, t0.c0 FROM v0 FULL OUTER JOIN t0 ON vt0.c0 FULL OUTER JOIN rt0 ON ((((((((((vt0.c1) NOTNULL))OR(CAST(t0.c0 AS NUMERIC))))AND(((rt0.c2) NOT NULL))))AND(CASE vt0.c0  WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN t0.c0 WHEN vt0.c1 THEN rt0.c0 END)))OR(((rt0.c2)LIKE(rt0.c0)))) FULL OUTER JOIN vt0 ON (((t0.c43)) NOT BETWEEN ((json_array(vt0.c0, rt0.c2))) AND ((((t0.c43) IS TRUE)))) GROUP BY vt0.c0, vt0.c1, rt0.c1, v0.c0, t0.c0;
SELECT rt0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c3 FROM t0, vt0, v0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c3;
SELECT rt0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c3 FROM t0, vt0, v0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c3 HAVING ((CASE COUNT(rt0.c1)  WHEN AVG(MIN(v0.c0)) THEN AVG(TOTAL(t0.c0)) END)<<(COUNT(*))) UNION ALL SELECT rt0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c3 FROM t0, vt0, v0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c3 HAVING (NOT (((CASE COUNT(rt0.c1)  WHEN AVG(MIN(v0.c0)) THEN AVG(TOTAL(t0.c0)) END)<<(COUNT(*))))) UNION ALL SELECT rt0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c3 FROM t0, vt0, v0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c3 HAVING ((((CASE COUNT(rt0.c1)  WHEN AVG(MIN(v0.c0)) THEN AVG(TOTAL(t0.c0)) END)<<(COUNT(*)))) ISNULL);
SELECT ALL SUM(CAST(CAST(rt0.c2 AS REAL) AS BLOB)) FROM vt0, rt0, v0, t0 ORDER BY (NOT ((('\nX,<%!') ISNULL))) DESC  NULLS LAST, ((t0.c43) NOT BETWEEN (v0.c0) AND (t0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE ((rt0.c0 IN (((((rt0.c1)OR(rt0.c3)))OR(-1494771192))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT ((rt0.c0 IN (((((rt0.c1)OR(rt0.c3)))OR(-1494771192))))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((((rt0.c0 IN (((((rt0.c1)OR(rt0.c3)))OR(-1494771192))))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT vt0.c0, rt0.c1 FROM rt0, v0, vt0 INNER JOIN t0 ON ((((vt0.c0) NOT NULL)) IS FALSE);
SELECT DISTINCT vt0.c0, rt0.c1 FROM rt0, v0, vt0 INNER JOIN t0 ON ((((vt0.c0) NOT NULL)) IS FALSE) WHERE (CAST(rt0.c1 AS NUMERIC) COLLATE BINARY) UNION SELECT DISTINCT vt0.c0, rt0.c1 FROM rt0, v0, vt0 INNER JOIN t0 ON ((((vt0.c0) NOT NULL)) IS FALSE) WHERE ((NOT (CAST(rt0.c1 AS NUMERIC) COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0, rt0.c1 FROM rt0, v0, vt0 INNER JOIN t0 ON ((((vt0.c0) NOT NULL)) IS FALSE) WHERE (((CAST(rt0.c1 AS NUMERIC) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c1 FROM rt0, v0, vt0 INNER JOIN t0 ON ((((vt0.c0) NOT NULL)) IS FALSE);
SELECT ALL t0.c43 FROM t0 GROUP BY t0.c43;
SELECT t0.c43 FROM t0 WHERE (((t0.c43) IS TRUE) COLLATE NOCASE) GROUP BY t0.c43 UNION SELECT ALL t0.c43 FROM t0 WHERE ((NOT (((t0.c43) IS TRUE) COLLATE NOCASE))) GROUP BY t0.c43 UNION SELECT ALL t0.c43 FROM t0 WHERE (((((t0.c43) IS TRUE) COLLATE NOCASE) ISNULL)) GROUP BY t0.c43;
SELECT ALL t0.c43 FROM t0 GROUP BY t0.c43;
SELECT t0.c43, vt0.c1, rt0.c0, rt0.c3, v0.c0, t0.c0 FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((rt0.c3) NOT BETWEEN (((rt0.c1) NOTNULL)) AND ((NOT (t0.c43)))) FULL OUTER JOIN v0 ON SUBSTR(CAST(t0.c0 AS TEXT), 1.443366056E9) GROUP BY t0.c43, vt0.c1, rt0.c0, rt0.c3, v0.c0, t0.c0;
SELECT t0.c43, vt0.c1, rt0.c0, rt0.c3, v0.c0, t0.c0 FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((rt0.c3) NOT BETWEEN (((rt0.c1) NOTNULL)) AND ((NOT (t0.c43)))) FULL OUTER JOIN v0 ON SUBSTR(CAST(t0.c0 AS TEXT), 1.443366056E9) GROUP BY t0.c43, vt0.c1, rt0.c0, rt0.c3, v0.c0, t0.c0 HAVING MAX(GROUP_CONCAT(GROUP_CONCAT(rt0.c2))) UNION ALL SELECT ALL t0.c43, vt0.c1, rt0.c0, rt0.c3, v0.c0, t0.c0 FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((rt0.c3) NOT BETWEEN (((rt0.c1) NOTNULL)) AND ((NOT (t0.c43)))) FULL OUTER JOIN v0 ON SUBSTR(CAST(t0.c0 AS TEXT), 1.443366056E9) GROUP BY t0.c43, vt0.c1, rt0.c0, rt0.c3, v0.c0, t0.c0 HAVING (NOT (MAX(GROUP_CONCAT(GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT t0.c43, vt0.c1, rt0.c0, rt0.c3, v0.c0, t0.c0 FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((rt0.c3) NOT BETWEEN (((rt0.c1) NOTNULL)) AND ((NOT (t0.c43)))) FULL OUTER JOIN v0 ON SUBSTR(CAST(t0.c0 AS TEXT), 1.443366056E9) GROUP BY t0.c43, vt0.c1, rt0.c0, rt0.c3, v0.c0, t0.c0 HAVING ((MAX(GROUP_CONCAT(GROUP_CONCAT(rt0.c2)))) ISNULL);
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON CAST(UNLIKELY(vt0.c0) AS REAL) LEFT OUTER JOIN rt0 ON (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('529256162')))))AND(((((NULL)OR(vt0.c1)))AND(rt0.c0))));
SELECT ALL * FROM vt0 NOT INDEXED RIGHT OUTER JOIN v0 ON CAST(UNLIKELY(vt0.c0) AS REAL) LEFT OUTER JOIN rt0 ON (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('529256162')))))AND(((((NULL)OR(vt0.c1)))AND(rt0.c0)))) WHERE (((((v0.c0) ISNULL)) NOT BETWEEN ((((rt0.c0, v0.c0, rt0.c1, vt0.c1, '1879032083')) NOT BETWEEN ((rt0.c3, 0.0010249361735852336, rt0.c3, rt0.c3, v0.c0)) AND ((vt0.c1, vt0.c0, v0.c0, rt0.c3, rt0.c1)))) AND (((rt0.c0)/(rt0.c0))))) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON CAST(UNLIKELY(vt0.c0) AS REAL) LEFT OUTER JOIN rt0 ON (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('529256162')))))AND(((((NULL)OR(vt0.c1)))AND(rt0.c0)))) WHERE ((NOT (((((v0.c0) ISNULL)) NOT BETWEEN ((((rt0.c0, v0.c0, rt0.c1, vt0.c1, '1879032083')) NOT BETWEEN ((rt0.c3, 0.0010249361735852336, rt0.c3, rt0.c3, v0.c0)) AND ((vt0.c1, vt0.c0, v0.c0, rt0.c3, rt0.c1)))) AND (((rt0.c0)/(rt0.c0))))))) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON CAST(UNLIKELY(vt0.c0) AS REAL) LEFT OUTER JOIN rt0 ON (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('529256162')))))AND(((((NULL)OR(vt0.c1)))AND(rt0.c0)))) WHERE (((((((v0.c0) ISNULL)) NOT BETWEEN ((((rt0.c0, v0.c0, rt0.c1, vt0.c1, '1879032083')) NOT BETWEEN ((rt0.c3, 0.0010249361735852336, rt0.c3, rt0.c3, v0.c0)) AND ((vt0.c1, vt0.c0, v0.c0, rt0.c3, rt0.c1)))) AND (((rt0.c0)/(rt0.c0))))) ISNULL));
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON CAST(UNLIKELY(vt0.c0) AS REAL) LEFT OUTER JOIN rt0 ON (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('529256162')))))AND(((((NULL)OR(vt0.c1)))AND(rt0.c0))));
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (((((v0.c0)IS(v0.c0))) ISNULL)) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (((((v0.c0)IS(v0.c0))) ISNULL)))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((((((v0.c0)IS(v0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 LEFT OUTER JOIN t0 ON (((((((((((t0.c43)AND(rt0.c2)))OR(rt0.c2)))OR(v0.c0)))OR(rt0.c0)), (+ (rt0.c1)), ((rt0.c0) ISNULL)))>((UPPER(DISTINCT rt0.c3), (- (rt0.c2)), (v0.c0 IN (v0.c0))))) GROUP BY rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 LEFT OUTER JOIN t0 ON (((((((((((t0.c43)AND(rt0.c2)))OR(rt0.c2)))OR(v0.c0)))OR(rt0.c0)), (+ (rt0.c1)), ((rt0.c0) ISNULL)))>((UPPER(DISTINCT rt0.c3), (- (rt0.c2)), (v0.c0 IN (v0.c0))))) WHERE (v0.c0) GROUP BY rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 LEFT OUTER JOIN t0 ON (((((((((((t0.c43)AND(rt0.c2)))OR(rt0.c2)))OR(v0.c0)))OR(rt0.c0)), (+ (rt0.c1)), ((rt0.c0) ISNULL)))>((UPPER(DISTINCT rt0.c3), (- (rt0.c2)), (v0.c0 IN (v0.c0))))) WHERE ((NOT (v0.c0))) GROUP BY rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 LEFT OUTER JOIN t0 ON (((((((((((t0.c43)AND(rt0.c2)))OR(rt0.c2)))OR(v0.c0)))OR(rt0.c0)), (+ (rt0.c1)), ((rt0.c0) ISNULL)))>((UPPER(DISTINCT rt0.c3), (- (rt0.c2)), (v0.c0 IN (v0.c0))))) WHERE (((v0.c0) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c1;
SELECT rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 LEFT OUTER JOIN t0 ON (((((((((((t0.c43)AND(rt0.c2)))OR(rt0.c2)))OR(v0.c0)))OR(rt0.c0)), (+ (rt0.c1)), ((rt0.c0) ISNULL)))>((UPPER(DISTINCT rt0.c3), (- (rt0.c2)), (v0.c0 IN (v0.c0))))) GROUP BY rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c1;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (((+ (COUNT(*))))<=(NULL)) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT ((((+ (COUNT(*))))<=(NULL)))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (((((+ (COUNT(*))))<=(NULL))) ISNULL);
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (((+ (COUNT(*))))<=(NULL)) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT ((((+ (COUNT(*))))<=(NULL)))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (((((+ (COUNT(*))))<=(NULL))) ISNULL);
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT vt0.c0, rt0.c1, rt0.c3, vt0.c1, rt0.c0, rt0.c2 FROM t0, rt0, vt0;
SELECT vt0.c0, rt0.c1, rt0.c3, vt0.c1, rt0.c0, rt0.c2 FROM t0, rt0, vt0 WHERE ((((rt0.c1)%(rt0.c3)) IN ((t0.c0 IN ()), (~ (rt0.c2))))) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c3, vt0.c1, rt0.c0, rt0.c2 FROM t0, rt0, vt0 WHERE ((NOT ((((rt0.c1)%(rt0.c3)) IN ((t0.c0 IN ()), (~ (rt0.c2))))))) UNION ALL SELECT vt0.c0, rt0.c1, rt0.c3, vt0.c1, rt0.c0, rt0.c2 FROM t0, rt0, vt0 WHERE ((((((rt0.c1)%(rt0.c3)) IN ((t0.c0 IN ()), (~ (rt0.c2))))) ISNULL));
SELECT vt0.c0, rt0.c1, rt0.c3, vt0.c1, rt0.c0, rt0.c2 FROM t0, rt0, vt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((ROUND(rt0.c2, v0.c0)) IS TRUE)) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((ROUND(rt0.c2, v0.c0)) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((ROUND(rt0.c2, v0.c0)) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 INNER JOIN v0 ON rt0.c3 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 INNER JOIN v0 ON rt0.c3 WHERE (((CAST(x'' AS INTEGER)) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1))))) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3 UNION SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 INNER JOIN v0 ON rt0.c3 WHERE ((NOT (((CAST(x'' AS INTEGER)) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3 UNION SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 INNER JOIN v0 ON rt0.c3 WHERE (((((CAST(x'' AS INTEGER)) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 INNER JOIN v0 ON rt0.c3 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT t0.c43 FROM t0 GROUP BY t0.c43;
SELECT ALL t0.c43 FROM t0 GROUP BY t0.c43 HAVING SUM(COUNT(*)) UNION ALL SELECT t0.c43 FROM t0 GROUP BY t0.c43 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL t0.c43 FROM t0 GROUP BY t0.c43 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (DATETIME(CAST(vt0.c0 AS BLOB), (((vt0.c1))>((vt0.c1))), (- (vt0.c0)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (DATETIME(CAST(vt0.c0 AS BLOB), (((vt0.c1))>((vt0.c1))), (- (vt0.c0)))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((DATETIME(CAST(vt0.c0 AS BLOB), (((vt0.c1))>((vt0.c1))), (- (vt0.c0)))) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT v0.c0, rt0.c1, rt0.c3, rt0.c2 FROM t0, v0, rt0;
SELECT DISTINCT v0.c0, rt0.c1, rt0.c3, rt0.c2 FROM t0, v0, rt0 WHERE (CASE t0.c43 COLLATE NOCASE  WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) THEN CAST(rt0.c0 AS REAL) WHEN t0.c43 THEN TRIM(v0.c0, rt0.c2) WHEN (NOT (rt0.c3)) THEN CAST(-874009210 AS REAL) END) UNION SELECT DISTINCT v0.c0, rt0.c1, rt0.c3, rt0.c2 FROM t0, v0, rt0 WHERE ((NOT (CASE t0.c43 COLLATE NOCASE  WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) THEN CAST(rt0.c0 AS REAL) WHEN t0.c43 THEN TRIM(v0.c0, rt0.c2) WHEN (NOT (rt0.c3)) THEN CAST(-874009210 AS REAL) END))) UNION SELECT DISTINCT v0.c0, rt0.c1, rt0.c3, rt0.c2 FROM t0, v0, rt0 WHERE (((CASE t0.c43 COLLATE NOCASE  WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) THEN CAST(rt0.c0 AS REAL) WHEN t0.c43 THEN TRIM(v0.c0, rt0.c2) WHEN (NOT (rt0.c3)) THEN CAST(-874009210 AS REAL) END) ISNULL));
SELECT DISTINCT v0.c0, rt0.c1, rt0.c3, rt0.c2 FROM t0, v0, rt0;
SELECT rt0.c1, rt0.c2 FROM t0, v0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM t0, v0, rt0 WHERE (((GLOB(rt0.c0, v0.c0)) NOTNULL)) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM t0, v0, rt0 WHERE ((NOT (((GLOB(rt0.c0, v0.c0)) NOTNULL)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM t0, v0, rt0 WHERE (((((GLOB(rt0.c0, v0.c0)) NOTNULL)) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM t0, v0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c2 FROM rt0, v0, t0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, v0, t0 GROUP BY rt0.c2 HAVING COUNT((NOT (t0.c43))) UNION ALL SELECT rt0.c2 FROM rt0, v0, t0 GROUP BY rt0.c2 HAVING (NOT (COUNT((NOT (t0.c43))))) UNION ALL SELECT rt0.c2 FROM rt0, v0, t0 GROUP BY rt0.c2 HAVING ((COUNT((NOT (t0.c43)))) ISNULL);
SELECT rt0.c2 FROM rt0, v0, t0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, v0, t0 GROUP BY rt0.c2 HAVING COUNT((NOT (t0.c43))) UNION ALL SELECT rt0.c2 FROM rt0, v0, t0 GROUP BY rt0.c2 HAVING (NOT (COUNT((NOT (t0.c43))))) UNION ALL SELECT rt0.c2 FROM rt0, v0, t0 GROUP BY rt0.c2 HAVING ((COUNT((NOT (t0.c43)))) ISNULL);
SELECT rt0.c2 FROM rt0, v0, t0 GROUP BY rt0.c2;
SELECT ALL v0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON json_type((rt0.c0 IN ()));
SELECT v0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON json_type((rt0.c0 IN ())) WHERE (((((rt0.c0) IS FALSE)) NOT NULL)) UNION ALL SELECT v0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON json_type((rt0.c0 IN ())) WHERE ((NOT (((((rt0.c0) IS FALSE)) NOT NULL)))) UNION ALL SELECT v0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON json_type((rt0.c0 IN ())) WHERE (((((((rt0.c0) IS FALSE)) NOT NULL)) ISNULL));
SELECT ALL v0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON json_type((rt0.c0 IN ()));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CAST((- (v0.c0)) AS BLOB)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CAST((- (v0.c0)) AS BLOB)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST((- (v0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0)) NOT BETWEEN (((((v0.c0))>=((v0.c0))))) AND ((((v0.c0)<(v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN (((((v0.c0))>=((v0.c0))))) AND ((((v0.c0)<(v0.c0)))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN (((((v0.c0))>=((v0.c0))))) AND ((((v0.c0)<(v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, rt0.c3 FROM rt0 NOT INDEXED, vt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c3 HAVING CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (AVG(TOTAL(MIN(rt0.c2))))) THEN ((rt0.c0)IS(vt0.c0)) WHEN MAX(COUNT(COUNT(rt0.c2))) COLLATE RTRIM THEN ((rt0.c2) IS TRUE) WHEN MIN(SUM(rt0.c2)) THEN MAX(COUNT(*)) END UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (AVG(TOTAL(MIN(rt0.c2))))) THEN ((rt0.c0)IS(vt0.c0)) WHEN MAX(COUNT(COUNT(rt0.c2))) COLLATE RTRIM THEN ((rt0.c2) IS TRUE) WHEN MIN(SUM(rt0.c2)) THEN MAX(COUNT(*)) END)) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c3 HAVING ((CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (AVG(TOTAL(MIN(rt0.c2))))) THEN ((rt0.c0)IS(vt0.c0)) WHEN MAX(COUNT(COUNT(rt0.c2))) COLLATE RTRIM THEN ((rt0.c2) IS TRUE) WHEN MIN(SUM(rt0.c2)) THEN MAX(COUNT(*)) END) ISNULL);
SELECT ALL rt0.c2 FROM t0 FULL OUTER JOIN vt0 ON CASE (NOT (t0.c0))  WHEN ((((((((NULL)AND(vt0.c1)))AND(t0.c43)))AND(rt0.c0)))OR(rt0.c1)) THEN ((rt0.c0)LIKE(vt0.c1)) WHEN (((rt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((t0.c43, '', vt0.c1)) AND ((rt0.c3, rt0.c3, t0.c43))) THEN LAST_INSERT_ROWID() WHEN ((rt0.c1) IS TRUE) THEN LIKELY(t0.c0) ELSE vt0.c1 COLLATE NOCASE END INNER JOIN rt0 ON ((((((((((t0.c0)OR(rt0.c0)))OR(t0.c43)))AND(t0.c43)))AND('C4')))<=(((rt0.c3) NOT BETWEEN (t0.c0) AND (rt0.c0))));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN ((v0.c0)%(v0.c0)) ELSE 0x2a9684cd COLLATE BINARY END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN (v0.c0 IN ()) THEN ((v0.c0)%(v0.c0)) ELSE 0X2a9684cd COLLATE BINARY END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE WHEN (v0.c0 IN ()) THEN ((v0.c0)%(v0.c0)) ELSE 0X2a9684cd COLLATE BINARY END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.c0, v0.c0, t0.c43, rt0.c2, rt0.c3, vt0.c1, rt0.c1, t0.c0, rt0.c0 FROM v0, rt0, vt0, t0 GROUP BY vt0.c0, v0.c0, t0.c43, rt0.c2, rt0.c3, vt0.c1, rt0.c1, t0.c0, rt0.c0;
SELECT ALL vt0.c0, v0.c0, t0.c43, rt0.c2, rt0.c3, vt0.c1, rt0.c1, t0.c0, rt0.c0 FROM v0, rt0, vt0, t0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS REAL)) GROUP BY vt0.c0, v0.c0, t0.c43, rt0.c2, rt0.c3, vt0.c1, rt0.c1, t0.c0, rt0.c0 UNION SELECT ALL vt0.c0, v0.c0, t0.c43, rt0.c2, rt0.c3, vt0.c1, rt0.c1, t0.c0, rt0.c0 FROM v0, rt0, vt0, t0 WHERE ((NOT (CAST(CAST(vt0.c0 AS TEXT) AS REAL)))) GROUP BY vt0.c0, v0.c0, t0.c43, rt0.c2, rt0.c3, vt0.c1, rt0.c1, t0.c0, rt0.c0 UNION SELECT ALL vt0.c0, v0.c0, t0.c43, rt0.c2, rt0.c3, vt0.c1, rt0.c1, t0.c0, rt0.c0 FROM v0, rt0, vt0, t0 WHERE (((CAST(CAST(vt0.c0 AS TEXT) AS REAL)) ISNULL)) GROUP BY vt0.c0, v0.c0, t0.c43, rt0.c2, rt0.c3, vt0.c1, rt0.c1, t0.c0, rt0.c0;
SELECT vt0.c0, v0.c0, t0.c43, rt0.c2, rt0.c3, vt0.c1, rt0.c1, t0.c0, rt0.c0 FROM v0, rt0, vt0, t0 GROUP BY vt0.c0, v0.c0, t0.c43, rt0.c2, rt0.c3, vt0.c1, rt0.c1, t0.c0, rt0.c0;
SELECT rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING CAST(TOTAL(COUNT(AVG(rt0.c2))) AS NUMERIC) UNION ALL SELECT rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING (NOT (CAST(TOTAL(COUNT(AVG(rt0.c2))) AS NUMERIC))) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING ((CAST(TOTAL(COUNT(AVG(rt0.c2))) AS NUMERIC)) ISNULL);
SELECT ALL t0.c43, v0.c0, t0.c0 FROM v0 NATURAL JOIN t0;
SELECT t0.c43, v0.c0, t0.c0 FROM v0 NATURAL JOIN t0 WHERE ((NOT (((v0.c0)|(v0.c0))))) UNION ALL SELECT ALL t0.c43, v0.c0, t0.c0 FROM v0 NATURAL JOIN t0 WHERE ((NOT ((NOT (((v0.c0)|(v0.c0))))))) UNION ALL SELECT ALL t0.c43, v0.c0, t0.c0 FROM v0 NATURAL JOIN t0 WHERE ((((NOT (((v0.c0)|(v0.c0))))) ISNULL));
SELECT ALL t0.c43, v0.c0, t0.c0 FROM v0 NATURAL JOIN t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((0.6598732134975103)) AND ((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((0.6598732134975103)) AND ((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((0.6598732134975103)) AND ((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0, v0 WHERE (((((rt0.c2) NOTNULL)) NOTNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0, v0 WHERE ((NOT (((((rt0.c2) NOTNULL)) NOTNULL)))) GROUP BY rt0.c3, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0, v0 WHERE (((((((rt0.c2) NOTNULL)) NOTNULL)) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0 HAVING CASE GROUP_CONCAT(MAX(SUM(SUM(rt0.c1))))  WHEN COUNT(COUNT(TOTAL(TOTAL(rt0.c0)))) THEN COUNT(MIN(TOTAL(rt0.c1))) END UNION ALL SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (CASE GROUP_CONCAT(MAX(SUM(SUM(rt0.c1))))  WHEN COUNT(COUNT(TOTAL(TOTAL(rt0.c0)))) THEN COUNT(MIN(TOTAL(rt0.c1))) END)) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0 HAVING ((CASE GROUP_CONCAT(MAX(SUM(SUM(rt0.c1))))  WHEN COUNT(COUNT(TOTAL(TOTAL(rt0.c0)))) THEN COUNT(MIN(TOTAL(rt0.c1))) END) ISNULL);
SELECT ALL MIN(((UNLIKELY(rt0.c1)) NOT BETWEEN (((rt0.c3) IS FALSE)) AND (((rt0.c3) BETWEEN (t0.c0) AND (t0.c0))))) FROM v0, vt0, t0, rt0;
SELECT ALL vt0.c0, rt0.c2, rt0.c0 FROM v0, vt0, rt0;
SELECT ALL vt0.c0, rt0.c2, rt0.c0 FROM v0, vt0, rt0 WHERE (CASE ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN (((rt0.c3)) BETWEEN ((rt0.c2)) AND ((v0.c0))) THEN ((rt0.c2) IS TRUE) ELSE ((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)) END) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c0 FROM v0, vt0, rt0 WHERE ((NOT (CASE ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN (((rt0.c3)) BETWEEN ((rt0.c2)) AND ((v0.c0))) THEN ((rt0.c2) IS TRUE) ELSE ((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)) END))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c0 FROM v0, vt0, rt0 WHERE (((CASE ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN (((rt0.c3)) BETWEEN ((rt0.c2)) AND ((v0.c0))) THEN ((rt0.c2) IS TRUE) ELSE ((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)) END) ISNULL));
SELECT ALL vt0.c0, rt0.c2, rt0.c0 FROM v0, vt0, rt0;
SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON CASE WHEN CAST(vt0.c0 AS TEXT) THEN LIKELIHOOD(DISTINCT vt0.c1, 0.42934328573362) ELSE (((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) END INNER JOIN vt0 ON UNLIKELY(((rt0.c3)%(x'')));
SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON CASE WHEN CAST(vt0.c0 AS TEXT) THEN LIKELIHOOD(DISTINCT vt0.c1, 0.42934328573362) ELSE (((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) END INNER JOIN vt0 ON UNLIKELY(((rt0.c3)%(x''))) WHERE (CAST(((((v0.c0)OR(rt0.c1)))AND(vt0.c1)) AS BLOB)) UNION SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON CASE WHEN CAST(vt0.c0 AS TEXT) THEN LIKELIHOOD(DISTINCT vt0.c1, 0.42934328573362) ELSE (((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) END INNER JOIN vt0 ON UNLIKELY(((rt0.c3)%(x''))) WHERE ((NOT (CAST(((((v0.c0)OR(rt0.c1)))AND(vt0.c1)) AS BLOB)))) UNION SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON CASE WHEN CAST(vt0.c0 AS TEXT) THEN LIKELIHOOD(DISTINCT vt0.c1, 0.42934328573362) ELSE (((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) END INNER JOIN vt0 ON UNLIKELY(((rt0.c3)%(x''))) WHERE (((CAST(((((v0.c0)OR(rt0.c1)))AND(vt0.c1)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON CASE WHEN CAST(vt0.c0 AS TEXT) THEN LIKELIHOOD(DISTINCT vt0.c1, 0.42934328573362) ELSE (((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) END INNER JOIN vt0 ON UNLIKELY(((rt0.c3)%(x'')));
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT rt0.c1, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE (COALESCE(((((rt0.c3)AND(rt0.c2)))AND(vt0.c0)), NULL)) GROUP BY rt0.c1, rt0.c3, rt0.c2 UNION SELECT rt0.c1, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE ((NOT (COALESCE(((((rt0.c3)AND(rt0.c2)))AND(vt0.c0)), NULL)))) GROUP BY rt0.c1, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE (((COALESCE(((((rt0.c3)AND(rt0.c2)))AND(vt0.c0)), NULL)) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT rt0.c2 FROM rt0, v0, vt0 INNER JOIN t0 ON ((((rt0.c0) IS FALSE))LIKE(rt0.c2 COLLATE NOCASE)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, v0, vt0 INNER JOIN t0 ON ((((rt0.c0) IS FALSE))LIKE(rt0.c2 COLLATE NOCASE)) GROUP BY rt0.c2 HAVING SUM(NULL) UNION ALL SELECT ALL rt0.c2 FROM rt0, v0, vt0 INNER JOIN t0 ON ((((rt0.c0) IS FALSE))LIKE(rt0.c2 COLLATE NOCASE)) GROUP BY rt0.c2 HAVING (NOT (SUM(NULL))) UNION ALL SELECT ALL rt0.c2 FROM rt0, v0, vt0 INNER JOIN t0 ON ((((rt0.c0) IS FALSE))LIKE(rt0.c2 COLLATE NOCASE)) GROUP BY rt0.c2 HAVING ((SUM(NULL)) ISNULL);
SELECT rt0.c2 FROM rt0, v0, vt0 INNER JOIN t0 ON ((((rt0.c0) IS FALSE))LIKE(rt0.c2 COLLATE NOCASE)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, v0, vt0 INNER JOIN t0 ON ((((rt0.c0) IS FALSE))LIKE(rt0.c2 COLLATE NOCASE)) GROUP BY rt0.c2 HAVING SUM(NULL) UNION ALL SELECT ALL rt0.c2 FROM rt0, v0, vt0 INNER JOIN t0 ON ((((rt0.c0) IS FALSE))LIKE(rt0.c2 COLLATE NOCASE)) GROUP BY rt0.c2 HAVING (NOT (SUM(NULL))) UNION ALL SELECT ALL rt0.c2 FROM rt0, v0, vt0 INNER JOIN t0 ON ((((rt0.c0) IS FALSE))LIKE(rt0.c2 COLLATE NOCASE)) GROUP BY rt0.c2 HAVING ((SUM(NULL)) ISNULL);
SELECT rt0.c2 FROM rt0, v0, vt0 INNER JOIN t0 ON ((((rt0.c0) IS FALSE))LIKE(rt0.c2 COLLATE NOCASE)) GROUP BY rt0.c2;
SELECT ALL * FROM vt0 NATURAL JOIN t0;
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE ((- (t0.c0)) COLLATE RTRIM) UNION ALL SELECT * FROM vt0 NATURAL JOIN t0 WHERE ((NOT ((- (t0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE ((((- (t0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS INTEGER)) NOT BETWEEN (json_remove(t0.c0, t0.c0)) AND (((((((((t0.c0)OR(t0.c0)))AND(t0.c43)))AND(t0.c43)))AND(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((CAST(t0.c0 AS INTEGER)) NOT BETWEEN (json_remove(t0.c0, t0.c0)) AND (((((((((t0.c0)OR(t0.c0)))AND(t0.c43)))AND(t0.c43)))AND(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((CAST(t0.c0 AS INTEGER)) NOT BETWEEN (json_remove(t0.c0, t0.c0)) AND (((((((((t0.c0)OR(t0.c0)))AND(t0.c43)))AND(t0.c43)))AND(t0.c0))))) ISNULL));
SELECT t0.c43 FROM t0 GROUP BY t0.c43;
SELECT ALL t0.c43 FROM t0 WHERE ((CAST(t0.c43 AS NUMERIC) IN (CAST(t0.c0 AS INTEGER)))) GROUP BY t0.c43 UNION SELECT t0.c43 FROM t0 WHERE ((NOT ((CAST(t0.c43 AS NUMERIC) IN (CAST(t0.c0 AS INTEGER)))))) GROUP BY t0.c43 UNION SELECT t0.c43 FROM t0 WHERE ((((CAST(t0.c43 AS NUMERIC) IN (CAST(t0.c0 AS INTEGER)))) ISNULL)) GROUP BY t0.c43;
SELECT t0.c43 FROM t0 GROUP BY t0.c43;
SELECT rt0.c2 FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((((((((((t0.c43) NOT BETWEEN (t0.c43) AND (rt0.c0)))AND((+ (rt0.c0)))))AND(306653324)))AND(LIKELIHOOD(DISTINCT vt0.c1, 0.4002209694634735))))AND((vt0.c1 IN ()))) LEFT OUTER JOIN v0 ON COALESCE(((x'adf9')>>(v0.c0)), ((rt0.c2) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((((((((((t0.c43) NOT BETWEEN (t0.c43) AND (rt0.c0)))AND((+ (rt0.c0)))))AND(306653324)))AND(LIKELIHOOD(DISTINCT vt0.c1, 0.4002209694634735))))AND((vt0.c1 IN ()))) LEFT OUTER JOIN v0 ON COALESCE(((x'adf9')>>(v0.c0)), ((rt0.c2) ISNULL)) GROUP BY rt0.c2 HAVING (((MAX(MAX(COUNT(COUNT(*))))))<=((CASE GROUP_CONCAT(SUM(rt0.c2))  WHEN SUM(rt0.c0) THEN rt0.c0 ELSE GROUP_CONCAT(COUNT(*)) END))) UNION ALL SELECT ALL rt0.c2 FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((((((((((t0.c43) NOT BETWEEN (t0.c43) AND (rt0.c0)))AND((+ (rt0.c0)))))AND(306653324)))AND(LIKELIHOOD(DISTINCT vt0.c1, 0.4002209694634735))))AND((vt0.c1 IN ()))) LEFT OUTER JOIN v0 ON COALESCE(((x'adf9')>>(v0.c0)), ((rt0.c2) ISNULL)) GROUP BY rt0.c2 HAVING (NOT ((((MAX(MAX(COUNT(COUNT(*))))))<=((CASE GROUP_CONCAT(SUM(rt0.c2))  WHEN SUM(rt0.c0) THEN rt0.c0 ELSE GROUP_CONCAT(COUNT(*)) END))))) UNION ALL SELECT ALL rt0.c2 FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((((((((((t0.c43) NOT BETWEEN (t0.c43) AND (rt0.c0)))AND((+ (rt0.c0)))))AND(306653324)))AND(LIKELIHOOD(DISTINCT vt0.c1, 0.4002209694634735))))AND((vt0.c1 IN ()))) LEFT OUTER JOIN v0 ON COALESCE(((x'adf9')>>(v0.c0)), ((rt0.c2) ISNULL)) GROUP BY rt0.c2 HAVING (((((MAX(MAX(COUNT(COUNT(*))))))<=((CASE GROUP_CONCAT(SUM(rt0.c2))  WHEN SUM(rt0.c0) THEN rt0.c0 ELSE GROUP_CONCAT(COUNT(*)) END)))) ISNULL);
SELECT ALL * FROM vt0, t0 INNER JOIN v0 ON ((t0.c0 COLLATE BINARY)IS NOT(-874009210)) RIGHT OUTER JOIN rt0 ON ((~ (rt0.c3)) IN ());
SELECT * FROM vt0, t0 INNER JOIN v0 ON ((t0.c0 COLLATE BINARY)IS NOT(-874009210)) RIGHT OUTER JOIN rt0 ON ((~ (rt0.c3)) IN ()) WHERE (((((t0.c43) NOT NULL)) NOTNULL)) UNION ALL SELECT * FROM vt0, t0 INNER JOIN v0 ON ((t0.c0 COLLATE BINARY)IS NOT(-874009210)) RIGHT OUTER JOIN rt0 ON ((~ (rt0.c3)) IN ()) WHERE ((NOT (((((t0.c43) NOT NULL)) NOTNULL)))) UNION ALL SELECT * FROM vt0, t0 INNER JOIN v0 ON ((t0.c0 COLLATE BINARY)IS NOT(-874009210)) RIGHT OUTER JOIN rt0 ON ((~ (rt0.c3)) IN ()) WHERE (((((((t0.c43) NOT NULL)) NOTNULL)) ISNULL));
SELECT ALL * FROM vt0, t0 INNER JOIN v0 ON ((t0.c0 COLLATE BINARY)IS NOT(-874009210)) RIGHT OUTER JOIN rt0 ON ((~ (rt0.c3)) IN ());
SELECT DISTINCT t0.c43, vt0.c1 FROM t0, vt0;
SELECT DISTINCT t0.c43, vt0.c1 FROM t0, vt0 WHERE (IFNULL(((t0.c0) IS TRUE), ((((vt0.c1)OR(t0.c43)))OR(vt0.c1)))) UNION SELECT DISTINCT t0.c43, vt0.c1 FROM t0, vt0 WHERE ((NOT (IFNULL(((t0.c0) IS TRUE), ((((vt0.c1)OR(t0.c43)))OR(vt0.c1)))))) UNION SELECT DISTINCT t0.c43, vt0.c1 FROM t0, vt0 WHERE (((IFNULL(((t0.c0) IS TRUE), ((((vt0.c1)OR(t0.c43)))OR(vt0.c1)))) ISNULL));
SELECT DISTINCT t0.c43, vt0.c1 FROM t0, vt0;
SELECT rt0.c2, rt0.c0, vt0.c1, vt0.c0, rt0.c3, v0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1) ISNULL)) NOT NULL) CROSS JOIN v0 ON CAST(vt0.c1 COLLATE BINARY AS INTEGER) GROUP BY rt0.c2, rt0.c0, vt0.c1, vt0.c0, rt0.c3, v0.c0;
SELECT ALL rt0.c2, rt0.c0, vt0.c1, vt0.c0, rt0.c3, v0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1) ISNULL)) NOT NULL) CROSS JOIN v0 ON CAST(vt0.c1 COLLATE BINARY AS INTEGER) WHERE ((((+ (rt0.c1)))<<(((x'')>=(v0.c0))))) GROUP BY rt0.c2, rt0.c0, vt0.c1, vt0.c0, rt0.c3, v0.c0 UNION SELECT ALL rt0.c2, rt0.c0, vt0.c1, vt0.c0, rt0.c3, v0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1) ISNULL)) NOT NULL) CROSS JOIN v0 ON CAST(vt0.c1 COLLATE BINARY AS INTEGER) WHERE ((NOT ((((+ (rt0.c1)))<<(((x'')>=(v0.c0))))))) GROUP BY rt0.c2, rt0.c0, vt0.c1, vt0.c0, rt0.c3, v0.c0 UNION SELECT ALL rt0.c2, rt0.c0, vt0.c1, vt0.c0, rt0.c3, v0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1) ISNULL)) NOT NULL) CROSS JOIN v0 ON CAST(vt0.c1 COLLATE BINARY AS INTEGER) WHERE ((((((+ (rt0.c1)))<<(((x'')>=(v0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, vt0.c1, vt0.c0, rt0.c3, v0.c0;
SELECT rt0.c2, rt0.c0, vt0.c1, vt0.c0, rt0.c3, v0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1) ISNULL)) NOT NULL) CROSS JOIN v0 ON CAST(vt0.c1 COLLATE BINARY AS INTEGER) GROUP BY rt0.c2, rt0.c0, vt0.c1, vt0.c0, rt0.c3, v0.c0;
SELECT ALL t0.c0, t0.c43 FROM t0 GROUP BY t0.c0, t0.c43;
SELECT t0.c0, t0.c43 FROM t0 GROUP BY t0.c0, t0.c43 HAVING COUNT((((GROUP_CONCAT(x''), t0.c0, MIN(t0.c43))) NOT BETWEEN (('948131586', COUNT(*), COUNT(*))) AND ((AVG(MAX(t0.c0)), TOTAL(COUNT(*)), t0.c0)))) UNION ALL SELECT ALL t0.c0, t0.c43 FROM t0 GROUP BY t0.c0, t0.c43 HAVING (NOT (COUNT((((GROUP_CONCAT(x''), t0.c0, MIN(t0.c43))) NOT BETWEEN (('948131586', COUNT(*), COUNT(*))) AND ((AVG(MAX(t0.c0)), TOTAL(COUNT(*)), t0.c0)))))) UNION ALL SELECT t0.c0, t0.c43 FROM t0 GROUP BY t0.c0, t0.c43 HAVING ((COUNT((((GROUP_CONCAT(x''), t0.c0, MIN(t0.c43))) NOT BETWEEN (('948131586', COUNT(*), COUNT(*))) AND ((AVG(MAX(t0.c0)), TOTAL(COUNT(*)), t0.c0))))) ISNULL);
SELECT ALL * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE ((((((vt0.c1)GLOB(v0.c0))))>((((((vt0.c1)OR(v0.c0)))OR(v0.c0)))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT ((((((vt0.c1)GLOB(v0.c0))))>((((((vt0.c1)OR(v0.c0)))OR(v0.c0)))))))) UNION ALL SELECT * FROM v0, vt0 WHERE ((((((((vt0.c1)GLOB(v0.c0))))>((((((vt0.c1)OR(v0.c0)))OR(v0.c0)))))) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1)<>(vt0.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c1)<>(vt0.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c1)!=(vt0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c3, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c1 FROM rt0 NOT INDEXED WHERE ((NOT (rt0.c1))) GROUP BY rt0.c3, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c1 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN vt0.c0 END) NOT NULL) GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT v0.c0, vt0.c0, vt0.c1 FROM vt0 NOT INDEXED LEFT OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN vt0.c0 END) NOT NULL) GROUP BY v0.c0, vt0.c0, vt0.c1 HAVING CAST(COUNT(*) AS REAL) UNION ALL SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN vt0.c0 END) NOT NULL) GROUP BY v0.c0, vt0.c0, vt0.c1 HAVING (NOT (CAST(COUNT(*) AS REAL))) UNION ALL SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN vt0.c0 END) NOT NULL) GROUP BY v0.c0, vt0.c0, vt0.c1 HAVING ((CAST(COUNT(*) AS REAL)) ISNULL);
SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN vt0.c0 END) NOT NULL) GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT v0.c0, vt0.c0, vt0.c1 FROM vt0 NOT INDEXED LEFT OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN vt0.c0 END) NOT NULL) GROUP BY v0.c0, vt0.c0, vt0.c1 HAVING CAST(COUNT(*) AS REAL) UNION ALL SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN vt0.c0 END) NOT NULL) GROUP BY v0.c0, vt0.c0, vt0.c1 HAVING (NOT (CAST(COUNT(*) AS REAL))) UNION ALL SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN vt0.c0 END) NOT NULL) GROUP BY v0.c0, vt0.c0, vt0.c1 HAVING ((CAST(COUNT(*) AS REAL)) ISNULL);
SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN vt0.c0 END) NOT NULL) GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT ALL * FROM vt0, rt0, v0, t0;
SELECT ALL * FROM vt0, rt0, v0, t0 WHERE (t0.c0) UNION ALL SELECT ALL * FROM vt0, rt0, v0, t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT * FROM vt0, rt0, v0, t0 WHERE (((t0.c0) ISNULL));
SELECT ALL * FROM vt0, rt0, v0, t0;
SELECT DISTINCT * FROM t0, vt0, v0;
SELECT DISTINCT * FROM t0, vt0, v0 WHERE ((((((vt0.c0))>=((t0.c43))))>>((((vt0.c1)) BETWEEN ((t0.c0)) AND ((vt0.c0)))))) UNION SELECT DISTINCT * FROM t0, vt0, v0 WHERE ((NOT ((((((vt0.c0))>=((t0.c43))))>>((((vt0.c1)) BETWEEN ((t0.c0)) AND ((vt0.c0)))))))) UNION SELECT DISTINCT * FROM t0, vt0, v0 WHERE ((((((((vt0.c0))>=((t0.c43))))>>((((vt0.c1)) BETWEEN ((t0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0, v0;
SELECT vt0.c0, t0.c43, rt0.c3, v0.c0, t0.c0 FROM vt0, rt0 LEFT OUTER JOIN v0 ON ((vt0.c1 COLLATE NOCASE) NOTNULL) FULL OUTER JOIN t0 ON ((((rt0.c1)LIKE(rt0.c0)))|(0x478437eb)) GROUP BY vt0.c0, t0.c43, rt0.c3, v0.c0, t0.c0;
SELECT vt0.c0, t0.c43, rt0.c3, v0.c0, t0.c0 FROM vt0, rt0 LEFT OUTER JOIN v0 ON ((vt0.c1 COLLATE NOCASE) NOTNULL) FULL OUTER JOIN t0 ON ((((rt0.c1)LIKE(rt0.c0)))|(0x478437eb)) WHERE ((~ (((((t0.c0)OR(rt0.c0)))AND(vt0.c0))))) GROUP BY vt0.c0, t0.c43, rt0.c3, v0.c0, t0.c0 UNION SELECT vt0.c0, t0.c43, rt0.c3, v0.c0, t0.c0 FROM vt0, rt0 LEFT OUTER JOIN v0 ON ((vt0.c1 COLLATE NOCASE) NOTNULL) FULL OUTER JOIN t0 ON ((((rt0.c1)LIKE(rt0.c0)))|(0X478437eb)) WHERE ((NOT ((~ (((((t0.c0)OR(rt0.c0)))AND(vt0.c0))))))) GROUP BY vt0.c0, t0.c43, rt0.c3, v0.c0, t0.c0 UNION SELECT vt0.c0, t0.c43, rt0.c3, v0.c0, t0.c0 FROM vt0, rt0 LEFT OUTER JOIN v0 ON ((vt0.c1 COLLATE NOCASE) NOTNULL) FULL OUTER JOIN t0 ON ((((rt0.c1)LIKE(rt0.c0)))|(0X478437eb)) WHERE ((((~ (((((t0.c0)OR(rt0.c0)))AND(vt0.c0))))) ISNULL)) GROUP BY vt0.c0, t0.c43, rt0.c3, v0.c0, t0.c0;
SELECT vt0.c0, t0.c43, rt0.c3, v0.c0, t0.c0 FROM vt0, rt0 LEFT OUTER JOIN v0 ON ((vt0.c1 COLLATE NOCASE) NOTNULL) FULL OUTER JOIN t0 ON ((((rt0.c1)LIKE(rt0.c0)))|(0x478437eb)) GROUP BY vt0.c0, t0.c43, rt0.c3, v0.c0, t0.c0;
SELECT ALL vt0.c1, rt0.c3, v0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c1, rt0.c3, v0.c0, vt0.c0;
SELECT vt0.c1, rt0.c3, v0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c1, rt0.c3, v0.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1, rt0.c3, v0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c1, rt0.c3, v0.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, rt0.c3, v0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c1, rt0.c3, v0.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, rt0.c3, v0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c1, rt0.c3, v0.c0, vt0.c0;
SELECT vt0.c1, rt0.c3, v0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c1, rt0.c3, v0.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1, rt0.c3, v0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c1, rt0.c3, v0.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, rt0.c3, v0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c1, rt0.c3, v0.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, rt0.c3, v0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c1, rt0.c3, v0.c0, vt0.c0;
SELECT rt0.c3, rt0.c2, vt0.c0, v0.c0, t0.c43, rt0.c0, rt0.c1 FROM rt0, v0 INDEXED BY i4, t0, vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c3, rt0.c1, t0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON ((x'')<<(CAST(rt0.c1 AS INTEGER))) GROUP BY rt0.c3, rt0.c1, t0.c0;
SELECT ALL rt0.c3, rt0.c1, t0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON ((x'')<<(CAST(rt0.c1 AS INTEGER))) WHERE ((~ (((rt0.c3)-(rt0.c2))))) GROUP BY rt0.c3, rt0.c1, t0.c0 UNION SELECT rt0.c3, rt0.c1, t0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON ((x'')<<(CAST(rt0.c1 AS INTEGER))) WHERE ((NOT ((~ (((rt0.c3)-(rt0.c2))))))) GROUP BY rt0.c3, rt0.c1, t0.c0 UNION SELECT ALL rt0.c3, rt0.c1, t0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON ((x'')<<(CAST(rt0.c1 AS INTEGER))) WHERE ((((~ (((rt0.c3)-(rt0.c2))))) ISNULL)) GROUP BY rt0.c3, rt0.c1, t0.c0;
SELECT ALL rt0.c3, rt0.c1, t0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON ((x'')<<(CAST(rt0.c1 AS INTEGER))) GROUP BY rt0.c3, rt0.c1, t0.c0;
SELECT ALL rt0.c3, t0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c3) IS FALSE))OR((((t0.c0))==((rt0.c0))))) GROUP BY rt0.c3, t0.c0, rt0.c2;
SELECT rt0.c3, t0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c3) IS FALSE))OR((((t0.c0))=((rt0.c0))))) GROUP BY rt0.c3, t0.c0, rt0.c2 HAVING AVG(((rt0.c3) IS TRUE)) UNION ALL SELECT ALL rt0.c3, t0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c3) IS FALSE))OR((((t0.c0))=((rt0.c0))))) GROUP BY rt0.c3, t0.c0, rt0.c2 HAVING (NOT (AVG(((rt0.c3) IS TRUE)))) UNION ALL SELECT ALL rt0.c3, t0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c3) IS FALSE))OR((((t0.c0))=((rt0.c0))))) GROUP BY rt0.c3, t0.c0, rt0.c2 HAVING ((AVG(((rt0.c3) IS TRUE))) ISNULL);
SELECT ALL rt0.c3, t0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c3) IS FALSE))OR((((t0.c0))==((rt0.c0))))) GROUP BY rt0.c3, t0.c0, rt0.c2;
SELECT rt0.c3, t0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c3) IS FALSE))OR((((t0.c0))=((rt0.c0))))) GROUP BY rt0.c3, t0.c0, rt0.c2 HAVING AVG(((rt0.c3) IS TRUE)) UNION ALL SELECT ALL rt0.c3, t0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c3) IS FALSE))OR((((t0.c0))=((rt0.c0))))) GROUP BY rt0.c3, t0.c0, rt0.c2 HAVING (NOT (AVG(((rt0.c3) IS TRUE)))) UNION ALL SELECT ALL rt0.c3, t0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c3) IS FALSE))OR((((t0.c0))=((rt0.c0))))) GROUP BY rt0.c3, t0.c0, rt0.c2 HAVING ((AVG(((rt0.c3) IS TRUE))) ISNULL);
SELECT ALL rt0.c3, t0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c3) IS FALSE))OR((((t0.c0))==((rt0.c0))))) GROUP BY rt0.c3, t0.c0, rt0.c2;
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON ((((CASE WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN t0.c43 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN vt0.c1 ELSE t0.c0 END)AND(rtreenode(t0.c43, rt0.c3))))AND(NULL)) LEFT OUTER JOIN vt0 ON ((((t0.c0) BETWEEN ('-998575440') AND (rt0.c1)))LIKE(CASE t0.c43  WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 ELSE 0.23793133249615073 END)) LEFT OUTER JOIN v0 ON CASE x''  WHEN CASE WHEN rt0.c1 THEN 0.2519385984523027 END THEN x'bee9' END;
SELECT DISTINCT rt0.c3 FROM rt0, t0, vt0, v0;
SELECT DISTINCT rt0.c3 FROM rt0, t0, vt0, v0 WHERE (((rt0.c2 COLLATE NOCASE)OR(((rt0.c2)+(rt0.c2))))) UNION SELECT DISTINCT rt0.c3 FROM rt0, t0, vt0, v0 WHERE ((NOT (((rt0.c2 COLLATE NOCASE)OR(((rt0.c2)+(rt0.c2))))))) UNION SELECT DISTINCT rt0.c3 FROM rt0, t0, vt0, v0 WHERE (((((rt0.c2 COLLATE NOCASE)OR(((rt0.c2)+(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c3 FROM rt0, t0, vt0, v0;
SELECT ALL t0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, t0.c43 FROM t0, v0, rt0 GROUP BY t0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, t0.c43;
SELECT ALL t0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, t0.c43 FROM t0, v0, rt0 WHERE (((((((t0.c43)>=(rt0.c2)))AND(t0.c43 COLLATE NOCASE)))AND(rt0.c3))) GROUP BY t0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, t0.c43 UNION SELECT t0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, t0.c43 FROM t0, v0, rt0 WHERE ((NOT (((((((t0.c43)>=(rt0.c2)))AND(t0.c43 COLLATE NOCASE)))AND(rt0.c3))))) GROUP BY t0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, t0.c43 UNION SELECT ALL t0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, t0.c43 FROM t0, v0, rt0 WHERE (((((((((t0.c43)>=(rt0.c2)))AND(t0.c43 COLLATE NOCASE)))AND(rt0.c3))) ISNULL)) GROUP BY t0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, t0.c43;
SELECT ALL t0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, t0.c43 FROM t0, v0, rt0 GROUP BY t0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, t0.c43;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((MAX(t0.c43)) NOT BETWEEN (t0.c43) AND (t0.c43)))%(AVG(t0.c43))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((MAX(t0.c43)) NOT BETWEEN (t0.c43) AND (t0.c43)))%(AVG(t0.c43))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((MAX(t0.c43)) NOT BETWEEN (t0.c43) AND (t0.c43)))%(AVG(t0.c43)))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((MAX(t0.c43)) NOT BETWEEN (t0.c43) AND (t0.c43)))%(AVG(t0.c43))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((MAX(t0.c43)) NOT BETWEEN (t0.c43) AND (t0.c43)))%(AVG(t0.c43))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((MAX(t0.c43)) NOT BETWEEN (t0.c43) AND (t0.c43)))%(AVG(t0.c43)))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL MAX(((LIKELY(vt0.c1)) NOTNULL)) FROM vt0;
SELECT ALL rt0.c2, rt0.c3 FROM rt0;
SELECT ALL rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (ABS(DISTINCT rt0.c3)))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT ((NOT (ABS(DISTINCT rt0.c3)))))) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0 WHERE ((((NOT (ABS(DISTINCT rt0.c3)))) ISNULL));
SELECT ALL rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT * FROM v0, vt0, t0, rt0;
SELECT DISTINCT * FROM v0, vt0, t0, rt0 WHERE ((((rt0.c3)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (rt0.c0)))) AND ((((((((((t0.c43)AND(rt0.c0)))OR(t0.c43)))OR(v0.c0)))OR(rt0.c3)))))) UNION SELECT DISTINCT * FROM v0, vt0, t0, rt0 WHERE ((NOT ((((rt0.c3)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (rt0.c0)))) AND ((((((((((t0.c43)AND(rt0.c0)))OR(t0.c43)))OR(v0.c0)))OR(rt0.c3)))))))) UNION SELECT DISTINCT * FROM v0, vt0, t0, rt0 WHERE ((((((rt0.c3)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (rt0.c0)))) AND ((((((((((t0.c43)AND(rt0.c0)))OR(t0.c43)))OR(v0.c0)))OR(rt0.c3)))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, t0, rt0;
SELECT v0.c0, vt0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM v0 FULL OUTER JOIN vt0 ON TYPEOF(DISTINCT rt0.c0) LEFT OUTER JOIN rt0 ON ((((((((((v0.c0)/(vt0.c1)))AND(((rt0.c0) ISNULL))))AND(rt0.c3)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))))OR((~ (rt0.c2)))) GROUP BY v0.c0, vt0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(v0.c0 COLLATE BINARY) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(v0.c0 COLLATE BINARY))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(v0.c0 COLLATE BINARY)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(v0.c0 COLLATE BINARY) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(v0.c0 COLLATE BINARY))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(v0.c0 COLLATE BINARY)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, vt0.c1, rt0.c0 FROM rt0 INNER JOIN vt0 ON (rt0.c1 IN (STRFTIME(vt0.c0, vt0.c0, vt0.c0)));
SELECT ALL rt0.c2, vt0.c1, rt0.c0 FROM rt0 INNER JOIN vt0 ON (rt0.c1 IN (STRFTIME(vt0.c0, vt0.c0, vt0.c0))) WHERE (((0xffffffffc2e7d9ee)>>(rt0.c0))) UNION ALL SELECT rt0.c2, vt0.c1, rt0.c0 FROM rt0 INNER JOIN vt0 ON (rt0.c1 IN (STRFTIME(vt0.c0, vt0.c0, vt0.c0))) WHERE ((NOT (((0xffffffffc2e7d9ee)>>(rt0.c0))))) UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c0 FROM rt0 INNER JOIN vt0 ON (rt0.c1 IN (STRFTIME(vt0.c0, vt0.c0, vt0.c0))) WHERE (((((0xffffffffc2e7d9ee)>>(rt0.c0))) ISNULL));
SELECT rt0.c2, vt0.c1, rt0.c0 FROM rt0 INNER JOIN vt0 ON (rt0.c1 IN (STRFTIME(vt0.c0, vt0.c0, vt0.c0)));
SELECT DISTINCT * FROM v0, rt0 INNER JOIN t0 ON v0.c0 RIGHT OUTER JOIN vt0 ON (NOT (((t0.c43) IS FALSE)));
SELECT DISTINCT * FROM v0, rt0 INNER JOIN t0 ON v0.c0 RIGHT OUTER JOIN vt0 ON (NOT (((t0.c43) IS FALSE))) WHERE (((((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)AND((+ (rt0.c1)))))AND(((t0.c43)|(rt0.c1))))) UNION SELECT DISTINCT * FROM v0, rt0 INNER JOIN t0 ON v0.c0 RIGHT OUTER JOIN vt0 ON (NOT (((t0.c43) IS FALSE))) WHERE ((NOT (((((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)AND((+ (rt0.c1)))))AND(((t0.c43)|(rt0.c1))))))) UNION SELECT DISTINCT * FROM v0, rt0 INNER JOIN t0 ON v0.c0 RIGHT OUTER JOIN vt0 ON (NOT (((t0.c43) IS FALSE))) WHERE (((((((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)AND((+ (rt0.c1)))))AND(((t0.c43)|(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0 INNER JOIN t0 ON v0.c0 RIGHT OUTER JOIN vt0 ON (NOT (((t0.c43) IS FALSE)));
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 WHERE ((- (((vt0.c1) NOTNULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0 NOT INDEXED, v0 WHERE ((NOT ((- (((vt0.c1) NOTNULL)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((((- (((vt0.c1) NOTNULL)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL rt0.c3, t0.c43, vt0.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, vt0 INNER JOIN v0 ON (- ((+ (vt0.c1)))) FULL OUTER JOIN t0 ON ((((((vt0.c1)OR(t0.c0)))OR(rt0.c0))) BETWEEN (x'') AND (((t0.c43) NOT NULL))) GROUP BY rt0.c3, t0.c43, vt0.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0;
SELECT ALL rt0.c3, t0.c43, vt0.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, vt0 INNER JOIN v0 ON (- ((+ (vt0.c1)))) FULL OUTER JOIN t0 ON ((((((vt0.c1)OR(t0.c0)))OR(rt0.c0))) BETWEEN (x'') AND (((t0.c43) NOT NULL))) GROUP BY rt0.c3, t0.c43, vt0.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0 HAVING AVG(CAST(TOTAL(rt0.c3) AS NUMERIC)) UNION ALL SELECT rt0.c3, t0.c43, vt0.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, vt0 INNER JOIN v0 ON (- ((+ (vt0.c1)))) FULL OUTER JOIN t0 ON ((((((vt0.c1)OR(t0.c0)))OR(rt0.c0))) BETWEEN (x'') AND (((t0.c43) NOT NULL))) GROUP BY rt0.c3, t0.c43, vt0.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0 HAVING (NOT (AVG(CAST(TOTAL(rt0.c3) AS NUMERIC)))) UNION ALL SELECT ALL rt0.c3, t0.c43, vt0.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, vt0 INNER JOIN v0 ON (- ((+ (vt0.c1)))) FULL OUTER JOIN t0 ON ((((((vt0.c1)OR(t0.c0)))OR(rt0.c0))) BETWEEN (x'') AND (((t0.c43) NOT NULL))) GROUP BY rt0.c3, t0.c43, vt0.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0 HAVING ((AVG(CAST(TOTAL(rt0.c3) AS NUMERIC))) ISNULL);
SELECT ALL MIN((+ (((vt0.c1) IS TRUE)))) FROM v0, vt0;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (CAST(LIKELIHOOD(t0.c43, 0.16109181243648463) AS TEXT)) UNION ALL SELECT * FROM t0 WHERE ((NOT (CAST(LIKELIHOOD(t0.c43, 0.16109181243648463) AS TEXT)))) UNION ALL SELECT ALL * FROM t0 WHERE (((CAST(LIKELIHOOD(t0.c43, 0.16109181243648463) AS TEXT)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c43, t0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c2)))IS(((rt0.c0) IS FALSE))) FULL OUTER JOIN t0 ON ((v0.c0 COLLATE BINARY)=((NOT (t0.c0)))) FULL OUTER JOIN vt0 ON (((t0.c43 IN (t0.c0, rt0.c0)))>(CASE WHEN t0.c0 THEN t0.c43 WHEN rt0.c3 THEN rt0.c0 WHEN -1902259892 THEN rt0.c0 END));
SELECT DISTINCT t0.c43, t0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c2)))IS(((rt0.c0) IS FALSE))) FULL OUTER JOIN t0 ON ((v0.c0 COLLATE BINARY)=((NOT (t0.c0)))) FULL OUTER JOIN vt0 ON (((t0.c43 IN (t0.c0, rt0.c0)))>(CASE WHEN t0.c0 THEN t0.c43 WHEN rt0.c3 THEN rt0.c0 WHEN -1902259892 THEN rt0.c0 END)) WHERE (((((rt0.c3)IS(rt0.c1)))<>((vt0.c1 IN ())))) UNION SELECT DISTINCT t0.c43, t0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c2)))IS(((rt0.c0) IS FALSE))) FULL OUTER JOIN t0 ON ((v0.c0 COLLATE BINARY)==((NOT (t0.c0)))) FULL OUTER JOIN vt0 ON (((t0.c43 IN (t0.c0, rt0.c0)))>(CASE WHEN t0.c0 THEN t0.c43 WHEN rt0.c3 THEN rt0.c0 WHEN -1902259892 THEN rt0.c0 END)) WHERE ((NOT (((((rt0.c3)IS(rt0.c1)))!=((vt0.c1 IN ())))))) UNION SELECT DISTINCT t0.c43, t0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c2)))IS(((rt0.c0) IS FALSE))) FULL OUTER JOIN t0 ON ((v0.c0 COLLATE BINARY)=((NOT (t0.c0)))) FULL OUTER JOIN vt0 ON (((t0.c43 IN (t0.c0, rt0.c0)))>(CASE WHEN t0.c0 THEN t0.c43 WHEN rt0.c3 THEN rt0.c0 WHEN -1902259892 THEN rt0.c0 END)) WHERE (((((((rt0.c3)IS(rt0.c1)))!=((vt0.c1 IN ())))) ISNULL));
SELECT DISTINCT t0.c43, t0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c2)))IS(((rt0.c0) IS FALSE))) FULL OUTER JOIN t0 ON ((v0.c0 COLLATE BINARY)=((NOT (t0.c0)))) FULL OUTER JOIN vt0 ON (((t0.c43 IN (t0.c0, rt0.c0)))>(CASE WHEN t0.c0 THEN t0.c43 WHEN rt0.c3 THEN rt0.c0 WHEN -1902259892 THEN rt0.c0 END));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((TRIM(v0.c0))) AND (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((TRIM(v0.c0))) AND (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((TRIM(v0.c0))) AND (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c0 FROM t0, rt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, rt0 GROUP BY t0.c0 HAVING TOTAL(MIN(MAX('FALSE'))) UNION ALL SELECT t0.c0 FROM t0, rt0 GROUP BY t0.c0 HAVING (NOT (TOTAL(MIN(MAX('FALSE'))))) UNION ALL SELECT t0.c0 FROM t0, rt0 GROUP BY t0.c0 HAVING ((TOTAL(MIN(MAX('FALSE')))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((~ (((v0.c0) IS FALSE)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((~ (((v0.c0) IS FALSE)))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((~ (((v0.c0) IS FALSE)))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT t0.c0 FROM v0, t0;
SELECT DISTINCT t0.c0 FROM v0, t0 WHERE (v0.c0) UNION SELECT DISTINCT t0.c0 FROM v0, t0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT t0.c0 FROM v0, t0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT t0.c0 FROM v0, t0;
SELECT t0.c0, vt0.c0, t0.c43, v0.c0 FROM v0, vt0 FULL OUTER JOIN t0 ON ((((t0.c43)GLOB(vt0.c0)))OR(((((t0.c43)AND(t0.c43)))OR(vt0.c0)))) GROUP BY t0.c0, vt0.c0, t0.c43, v0.c0;
SELECT t0.c0, vt0.c0, t0.c43, v0.c0 FROM v0, vt0 FULL OUTER JOIN t0 ON ((((t0.c43)GLOB(vt0.c0)))OR(((((t0.c43)AND(t0.c43)))OR(vt0.c0)))) WHERE (('' IN ())) GROUP BY t0.c0, vt0.c0, t0.c43, v0.c0 UNION SELECT t0.c0, vt0.c0, t0.c43, v0.c0 FROM v0, vt0 FULL OUTER JOIN t0 ON ((((t0.c43)GLOB(vt0.c0)))OR(((((t0.c43)AND(t0.c43)))OR(vt0.c0)))) WHERE ((NOT (('' IN ())))) GROUP BY t0.c0, vt0.c0, t0.c43, v0.c0 UNION SELECT t0.c0, vt0.c0, t0.c43, v0.c0 FROM v0, vt0 FULL OUTER JOIN t0 ON ((((t0.c43)GLOB(vt0.c0)))OR(((((t0.c43)AND(t0.c43)))OR(vt0.c0)))) WHERE (((('' IN ())) ISNULL)) GROUP BY t0.c0, vt0.c0, t0.c43, v0.c0;
SELECT t0.c0, vt0.c0, t0.c43, v0.c0 FROM v0, vt0 FULL OUTER JOIN t0 ON ((((t0.c43)GLOB(vt0.c0)))OR(((((t0.c43)AND(t0.c43)))OR(vt0.c0)))) GROUP BY t0.c0, vt0.c0, t0.c43, v0.c0;
SELECT v0.c0, t0.c43, t0.c0 FROM v0 INNER JOIN t0 ON (((((v0.c0 IN ()))AND(CASE WHEN t0.c43 THEN t0.c43 END)))OR((((v0.c0)) BETWEEN ((t0.c43)) AND ((t0.c43))))) GROUP BY v0.c0, t0.c43, t0.c0;
SELECT v0.c0, t0.c43, t0.c0 FROM v0 INNER JOIN t0 ON (((((v0.c0 IN ()))AND(CASE WHEN t0.c43 THEN t0.c43 END)))OR((((v0.c0)) BETWEEN ((t0.c43)) AND ((t0.c43))))) GROUP BY v0.c0, t0.c43, t0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0, t0.c43, t0.c0 FROM v0 INNER JOIN t0 ON (((((v0.c0 IN ()))AND(CASE WHEN t0.c43 THEN t0.c43 END)))OR((((v0.c0)) BETWEEN ((t0.c43)) AND ((t0.c43))))) GROUP BY v0.c0, t0.c43, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, t0.c43, t0.c0 FROM v0 INNER JOIN t0 ON (((((v0.c0 IN ()))AND(CASE WHEN t0.c43 THEN t0.c43 END)))OR((((v0.c0)) BETWEEN ((t0.c43)) AND ((t0.c43))))) GROUP BY v0.c0, t0.c43, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0, t0.c43, t0.c0 FROM v0 INNER JOIN t0 ON (((((v0.c0 IN ()))AND(CASE WHEN t0.c43 THEN t0.c43 END)))OR((((v0.c0)) BETWEEN ((t0.c43)) AND ((t0.c43))))) GROUP BY v0.c0, t0.c43, t0.c0;
SELECT v0.c0, t0.c43, t0.c0 FROM v0 INNER JOIN t0 ON (((((v0.c0 IN ()))AND(CASE WHEN t0.c43 THEN t0.c43 END)))OR((((v0.c0)) BETWEEN ((t0.c43)) AND ((t0.c43))))) GROUP BY v0.c0, t0.c43, t0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0, t0.c43, t0.c0 FROM v0 INNER JOIN t0 ON (((((v0.c0 IN ()))AND(CASE WHEN t0.c43 THEN t0.c43 END)))OR((((v0.c0)) BETWEEN ((t0.c43)) AND ((t0.c43))))) GROUP BY v0.c0, t0.c43, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, t0.c43, t0.c0 FROM v0 INNER JOIN t0 ON (((((v0.c0 IN ()))AND(CASE WHEN t0.c43 THEN t0.c43 END)))OR((((v0.c0)) BETWEEN ((t0.c43)) AND ((t0.c43))))) GROUP BY v0.c0, t0.c43, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0, t0.c43, t0.c0 FROM v0 INNER JOIN t0 ON (((((v0.c0 IN ()))AND(CASE WHEN t0.c43 THEN t0.c43 END)))OR((((v0.c0)) BETWEEN ((t0.c43)) AND ((t0.c43))))) GROUP BY v0.c0, t0.c43, t0.c0;
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((((x'')AND(rt0.c0)))OR(rt0.c1)) IN ())) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((((x'')AND(rt0.c0)))OR(rt0.c1)) IN ())))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((x'')AND(rt0.c0)))OR(rt0.c1)) IN ())) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) IS FALSE)) IS FALSE)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0) IS FALSE)) IS FALSE)))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0) IS FALSE)) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL t0.c0 FROM t0, v0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, v0, vt0 WHERE ((((((((NULL, 0.4075450896862508, NULL))>=((v0.c0, t0.c0, t0.c43))))AND(((0.031214615955744485) ISNULL))))AND(HEX(DISTINCT vt0.c0)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, v0, vt0 WHERE ((NOT ((((((((NULL, 0.4075450896862508, NULL))>=((v0.c0, t0.c0, t0.c43))))AND(((0.031214615955744485) ISNULL))))AND(HEX(DISTINCT vt0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, v0, vt0 WHERE ((((((((((NULL, 0.4075450896862508, NULL))>=((v0.c0, t0.c0, t0.c43))))AND(((0.031214615955744485) ISNULL))))AND(HEX(DISTINCT vt0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, v0, vt0 GROUP BY t0.c0;
SELECT ALL vt0.c0, vt0.c1, rt0.c2, rt0.c0 FROM vt0 NOT INDEXED RIGHT OUTER JOIN rt0 ON (((0.48467829738382684)) NOT BETWEEN ((CASE rt0.c3  WHEN vt0.c1 THEN rt0.c0 END)) AND (((rt0.c2 IN ())))) GROUP BY vt0.c0, vt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt0.c0, vt0.c1, rt0.c2, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON (((0.48467829738382684)) NOT BETWEEN ((CASE rt0.c3  WHEN vt0.c1 THEN rt0.c0 END)) AND (((rt0.c2 IN ())))) GROUP BY vt0.c0, vt0.c1, rt0.c2, rt0.c0 HAVING '929119612' UNION ALL SELECT ALL vt0.c0, vt0.c1, rt0.c2, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON (((0.48467829738382684)) NOT BETWEEN ((CASE rt0.c3  WHEN vt0.c1 THEN rt0.c0 END)) AND (((rt0.c2 IN ())))) GROUP BY vt0.c0, vt0.c1, rt0.c2, rt0.c0 HAVING (NOT ('929119612')) UNION ALL SELECT ALL vt0.c0, vt0.c1, rt0.c2, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON (((0.48467829738382684)) NOT BETWEEN ((CASE rt0.c3  WHEN vt0.c1 THEN rt0.c0 END)) AND (((rt0.c2 IN ())))) GROUP BY vt0.c0, vt0.c1, rt0.c2, rt0.c0 HAVING (('929119612') ISNULL);
SELECT ALL vt0.c0, vt0.c1, rt0.c2, rt0.c0 FROM vt0 NOT INDEXED RIGHT OUTER JOIN rt0 ON (((0.48467829738382684)) NOT BETWEEN ((CASE rt0.c3  WHEN vt0.c1 THEN rt0.c0 END)) AND (((rt0.c2 IN ())))) GROUP BY vt0.c0, vt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt0.c0, vt0.c1, rt0.c2, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON (((0.48467829738382684)) NOT BETWEEN ((CASE rt0.c3  WHEN vt0.c1 THEN rt0.c0 END)) AND (((rt0.c2 IN ())))) GROUP BY vt0.c0, vt0.c1, rt0.c2, rt0.c0 HAVING '929119612' UNION ALL SELECT ALL vt0.c0, vt0.c1, rt0.c2, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON (((0.48467829738382684)) NOT BETWEEN ((CASE rt0.c3  WHEN vt0.c1 THEN rt0.c0 END)) AND (((rt0.c2 IN ())))) GROUP BY vt0.c0, vt0.c1, rt0.c2, rt0.c0 HAVING (NOT ('929119612')) UNION ALL SELECT ALL vt0.c0, vt0.c1, rt0.c2, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON (((0.48467829738382684)) NOT BETWEEN ((CASE rt0.c3  WHEN vt0.c1 THEN rt0.c0 END)) AND (((rt0.c2 IN ())))) GROUP BY vt0.c0, vt0.c1, rt0.c2, rt0.c0 HAVING (('929119612') ISNULL);
SELECT ALL vt0.c0, vt0.c1, rt0.c2, rt0.c0 FROM vt0 NOT INDEXED RIGHT OUTER JOIN rt0 ON (((0.48467829738382684)) NOT BETWEEN ((CASE rt0.c3  WHEN vt0.c1 THEN rt0.c0 END)) AND (((rt0.c2 IN ())))) GROUP BY vt0.c0, vt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, t0.c0, vt0.c0, rt0.c3, vt0.c1 FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(rt0.c3 AS TEXT)) BETWEEN (((t0.c0)||(t0.c43))) AND (CASE WHEN vt0.c1 THEN v0.c0 END)) CROSS JOIN v0 ON (((((rt0.c1)OR(rt0.c0)))OR('iv')) IN ((+ (NULL)), ((t0.c0) NOT BETWEEN ('\n5f	>	#') AND (rt0.c0)))) LEFT OUTER JOIN rt0 ON HEX(DISTINCT ((((rt0.c2)OR(t0.c0)))OR(t0.c43)));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) IN ())) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) IN ())))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) IN ())) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c1, t0.c0, v0.c0, t0.c43, vt0.c0 FROM vt0, t0, v0 GROUP BY vt0.c1, t0.c0, v0.c0, t0.c43, vt0.c0;
SELECT vt0.c1, t0.c0, v0.c0, t0.c43, vt0.c0 FROM vt0, t0, v0 WHERE ((NOT ((- (t0.c0))))) GROUP BY vt0.c1, t0.c0, v0.c0, t0.c43, vt0.c0 UNION SELECT ALL vt0.c1, t0.c0, v0.c0, t0.c43, vt0.c0 FROM vt0, t0, v0 WHERE ((NOT ((NOT ((- (t0.c0))))))) GROUP BY vt0.c1, t0.c0, v0.c0, t0.c43, vt0.c0 UNION SELECT ALL vt0.c1, t0.c0, v0.c0, t0.c43, vt0.c0 FROM vt0, t0, v0 WHERE ((((NOT ((- (t0.c0))))) ISNULL)) GROUP BY vt0.c1, t0.c0, v0.c0, t0.c43, vt0.c0;
SELECT vt0.c1, t0.c0, v0.c0, t0.c43, vt0.c0 FROM vt0, t0, v0 GROUP BY vt0.c1, t0.c0, v0.c0, t0.c43, vt0.c0;
SELECT ALL rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, v0.c0;
SELECT rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, v0.c0 HAVING TOTAL(TOTAL(rt0.c0)) UNION ALL SELECT rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, v0.c0 HAVING (NOT (TOTAL(TOTAL(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, v0.c0 HAVING ((TOTAL(TOTAL(rt0.c0))) ISNULL);
SELECT rt0.c2, rt0.c1, t0.c43, rt0.c0, t0.c0, rt0.c3, vt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c0)IS(t0.c43)))AND('-102119975')))AND(((vt0.c1) NOTNULL))) RIGHT OUTER JOIN t0 ON (+ (((vt0.c0)<>(t0.c0))));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1)|(vt0.c1)))>>(((vt0.c1) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c1)|(vt0.c1)))>>(((vt0.c1) NOT NULL)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c1)|(vt0.c1)))>>(((vt0.c1) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0, t0.c43 FROM t0 GROUP BY t0.c0, t0.c43;
SELECT ALL t0.c0, t0.c43 FROM t0 WHERE ((((((NULL))!=((t0.c0))))<(CASE t0.c43  WHEN t0.c43 THEN t0.c43 ELSE t0.c43 END))) GROUP BY t0.c0, t0.c43 UNION SELECT ALL t0.c0, t0.c43 FROM t0 WHERE ((NOT ((((((NULL))!=((t0.c0))))<(CASE t0.c43  WHEN t0.c43 THEN t0.c43 ELSE t0.c43 END))))) GROUP BY t0.c0, t0.c43 UNION SELECT ALL t0.c0, t0.c43 FROM t0 WHERE ((((((((NULL))<>((t0.c0))))<(CASE t0.c43  WHEN t0.c43 THEN t0.c43 ELSE t0.c43 END))) ISNULL)) GROUP BY t0.c0, t0.c43;
SELECT t0.c0, t0.c43 FROM t0 GROUP BY t0.c0, t0.c43;
SELECT ALL rt0.c0, vt0.c0, rt0.c3, rt0.c1, rt0.c2, vt0.c1 FROM rt0 INNER JOIN vt0 ON ((((rt0.c3)%(rt0.c2))) NOT BETWEEN ((('C^mKT')IS(vt0.c0))) AND (((rt0.c1)%(vt0.c0)))) GROUP BY rt0.c0, vt0.c0, rt0.c3, rt0.c1, rt0.c2, vt0.c1;
SELECT ALL rt0.c0, vt0.c0, rt0.c3, rt0.c1, rt0.c2, vt0.c1 FROM rt0 INNER JOIN vt0 ON ((((rt0.c3)%(rt0.c2))) NOT BETWEEN ((('C^mKT')IS(vt0.c0))) AND (((rt0.c1)%(vt0.c0)))) GROUP BY rt0.c0, vt0.c0, rt0.c3, rt0.c1, rt0.c2, vt0.c1 HAVING (('9X|h>V')&(COUNT(TOTAL(MAX(COUNT(rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c3, rt0.c1, rt0.c2, vt0.c1 FROM rt0 INNER JOIN vt0 ON ((((rt0.c3)%(rt0.c2))) NOT BETWEEN ((('C^mKT')IS(vt0.c0))) AND (((rt0.c1)%(vt0.c0)))) GROUP BY rt0.c0, vt0.c0, rt0.c3, rt0.c1, rt0.c2, vt0.c1 HAVING (NOT ((('9X|h>V')&(COUNT(TOTAL(MAX(COUNT(rt0.c2)))))))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c3, rt0.c1, rt0.c2, vt0.c1 FROM rt0 INNER JOIN vt0 ON ((((rt0.c3)%(rt0.c2))) NOT BETWEEN ((('C^mKT')IS(vt0.c0))) AND (((rt0.c1)%(vt0.c0)))) GROUP BY rt0.c0, vt0.c0, rt0.c3, rt0.c1, rt0.c2, vt0.c1 HAVING (((('9X|h>V')&(COUNT(TOTAL(MAX(COUNT(rt0.c2))))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c3)))<=(((((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((~ (rt0.c3)))<=(((((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((~ (rt0.c3)))<=(((((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)=(t0.c0)))&(CASE WHEN t0.c0 THEN t0.c43 WHEN t0.c43 THEN t0.c43 WHEN t0.c0 THEN t0.c43 ELSE t0.c0 END))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0)=(t0.c0)))&(CASE WHEN t0.c0 THEN t0.c43 WHEN t0.c43 THEN t0.c43 WHEN t0.c0 THEN t0.c43 ELSE t0.c0 END))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)=(t0.c0)))&(CASE WHEN t0.c0 THEN t0.c43 WHEN t0.c43 THEN t0.c43 WHEN t0.c0 THEN t0.c43 ELSE t0.c0 END))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0 IN ()) IN (CAST(v0.c0 AS INTEGER)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0 IN ()) IN (CAST(v0.c0 AS INTEGER)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0 IN ()) IN (CAST(v0.c0 AS INTEGER)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING ((AVG(GROUP_CONCAT(COUNT(rt0.c2))))>>(((rt0.c0)/(MAX(COUNT(*)))))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING (NOT (((AVG(GROUP_CONCAT(COUNT(rt0.c2))))>>(((rt0.c0)/(MAX(COUNT(*)))))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING ((((AVG(GROUP_CONCAT(COUNT(rt0.c2))))>>(((rt0.c0)/(MAX(COUNT(*))))))) ISNULL);
SELECT ALL t0.c0 FROM vt0, v0, t0, rt0;
SELECT ALL t0.c0 FROM vt0 NOT INDEXED, v0, t0, rt0 WHERE (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 END COLLATE NOCASE) UNION ALL SELECT ALL t0.c0 FROM vt0, v0, t0, rt0 WHERE ((NOT (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 END COLLATE NOCASE))) UNION ALL SELECT t0.c0 FROM vt0, v0, t0, rt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 END COLLATE NOCASE) ISNULL));
SELECT ALL t0.c0 FROM vt0, v0, t0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT NULL)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT NULL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT NULL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT t0.c0, t0.c43 FROM t0 GROUP BY t0.c0, t0.c43;
SELECT ALL t0.c0, t0.c43 FROM t0 WHERE ((((+ (t0.c0)))<=(((((((((t0.c43)OR(t0.c0)))AND(t0.c0)))OR(t0.c43)))AND(t0.c0))))) GROUP BY t0.c0, t0.c43 UNION SELECT t0.c0, t0.c43 FROM t0 WHERE ((NOT ((((+ (t0.c0)))<=(((((((((t0.c43)OR(t0.c0)))AND(t0.c0)))OR(t0.c43)))AND(t0.c0))))))) GROUP BY t0.c0, t0.c43 UNION SELECT t0.c0, t0.c43 FROM t0 WHERE ((((((+ (t0.c0)))<=(((((((((t0.c43)OR(t0.c0)))AND(t0.c0)))OR(t0.c43)))AND(t0.c0))))) ISNULL)) GROUP BY t0.c0, t0.c43;
SELECT t0.c0, t0.c43 FROM t0 GROUP BY t0.c0, t0.c43;
SELECT vt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM vt0, t0, rt0 NATURAL JOIN v0 GROUP BY vt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT vt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM vt0, t0, rt0 NATURAL JOIN v0 GROUP BY vt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(COUNT(*))) BETWEEN (MIN(AVG(rt0.c3))) AND (TOTAL(rt0.c1))) UNION ALL SELECT vt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM vt0, t0, rt0 NATURAL JOIN v0 GROUP BY vt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((GROUP_CONCAT(COUNT(*))) BETWEEN (MIN(AVG(rt0.c3))) AND (TOTAL(rt0.c1))))) UNION ALL SELECT vt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM vt0, t0, rt0 NATURAL JOIN v0 GROUP BY vt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING ((((GROUP_CONCAT(COUNT(*))) BETWEEN (MIN(AVG(rt0.c3))) AND (TOTAL(rt0.c1)))) ISNULL);
SELECT SUM(((((rt0.c1))<=((NULL))) IN ())) FROM vt0, rt0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((v0.c0) NOT NULL) COLLATE BINARY) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((v0.c0) NOT NULL) COLLATE BINARY))) UNION ALL SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT NULL) COLLATE BINARY) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM rt0, v0, t0;
SELECT DISTINCT * FROM rt0, v0, t0 WHERE (rt0.c3) UNION SELECT DISTINCT * FROM rt0, v0, t0 WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT * FROM rt0, v0, t0 WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT * FROM rt0, v0, t0;
SELECT ALL t0.c0, t0.c43 FROM t0 GROUP BY t0.c0, t0.c43;
SELECT ALL t0.c0, t0.c43 FROM t0 WHERE (((((t0.c43)||(t0.c0))) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (t0.c43))) GROUP BY t0.c0, t0.c43 UNION SELECT t0.c0, t0.c43 FROM t0 WHERE ((NOT (((((t0.c43)||(t0.c0))) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (t0.c43))))) GROUP BY t0.c0, t0.c43 UNION SELECT ALL t0.c0, t0.c43 FROM t0 WHERE (((((((t0.c43)||(t0.c0))) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (t0.c43))) ISNULL)) GROUP BY t0.c0, t0.c43;
SELECT ALL t0.c0, t0.c43 FROM t0 GROUP BY t0.c0, t0.c43;
SELECT rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3 HAVING rt0.c3 UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3 HAVING (NOT (rt0.c3)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3 HAVING ((rt0.c3) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3 HAVING rt0.c3 UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3 HAVING (NOT (rt0.c3)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3 HAVING ((rt0.c3) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3;
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((((vt0.c1)-(vt0.c1))))>((LIKELY(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((((vt0.c1)-(vt0.c1))))>((LIKELY(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((((((vt0.c1)-(vt0.c1))))>((LIKELY(vt0.c0))))) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON vt0.c0 INNER JOIN rt0 ON CAST((t0.c43 IN (rt0.c3)) AS INTEGER);
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON vt0.c0 INNER JOIN rt0 ON CAST((t0.c43 IN (rt0.c3)) AS INTEGER) WHERE (((((vt0.c1) NOT NULL)) BETWEEN ((rt0.c2 IN (rt0.c2))) AND ((+ (vt0.c0))))) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON vt0.c0 INNER JOIN rt0 ON CAST((t0.c43 IN (rt0.c3)) AS INTEGER) WHERE ((NOT (((((vt0.c1) NOT NULL)) BETWEEN ((rt0.c2 IN (rt0.c2))) AND ((+ (vt0.c0))))))) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON vt0.c0 INNER JOIN rt0 ON CAST((t0.c43 IN (rt0.c3)) AS INTEGER) WHERE (((((((vt0.c1) NOT NULL)) BETWEEN ((rt0.c2 IN (rt0.c2))) AND ((+ (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON vt0.c0 INNER JOIN rt0 ON CAST((t0.c43 IN (rt0.c3)) AS INTEGER);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (vt0.c1 COLLATE RTRIM))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT ((NOT (vt0.c1 COLLATE RTRIM))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((NOT (vt0.c1 COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c3, rt0.c0, vt0.c0 FROM t0, v0, rt0, vt0;
SELECT ALL rt0.c3, rt0.c0, vt0.c0 FROM t0, v0, rt0, vt0 WHERE ((+ (CAST(vt0.c1 AS BLOB)))) UNION ALL SELECT ALL rt0.c3, rt0.c0, vt0.c0 FROM t0, v0, rt0, vt0 WHERE ((NOT ((+ (CAST(vt0.c1 AS BLOB)))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, vt0.c0 FROM t0, v0, rt0, vt0 WHERE ((((+ (CAST(vt0.c1 AS BLOB)))) ISNULL));
SELECT ALL rt0.c3, rt0.c0, vt0.c0 FROM t0, v0, rt0, vt0;
SELECT DISTINCT rt0.c2, t0.c43, rt0.c1, rt0.c0, rt0.c3, vt0.c0 FROM vt0, t0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c2, t0.c43, rt0.c1, rt0.c0, rt0.c3, vt0.c0 FROM vt0, t0 NATURAL JOIN rt0 WHERE (((x'6006') NOT BETWEEN (((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (CAST(rt0.c2 AS INTEGER)))) UNION SELECT DISTINCT rt0.c2, t0.c43, rt0.c1, rt0.c0, rt0.c3, vt0.c0 FROM vt0, t0 NATURAL JOIN rt0 WHERE ((NOT (((x'6006') NOT BETWEEN (((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (CAST(rt0.c2 AS INTEGER)))))) UNION SELECT DISTINCT rt0.c2, t0.c43, rt0.c1, rt0.c0, rt0.c3, vt0.c0 FROM vt0, t0 NATURAL JOIN rt0 WHERE (((((x'6006') NOT BETWEEN (((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (CAST(rt0.c2 AS INTEGER)))) ISNULL));
SELECT DISTINCT rt0.c2, t0.c43, rt0.c1, rt0.c0, rt0.c3, vt0.c0 FROM vt0, t0 NATURAL JOIN rt0;
SELECT ALL v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM t0, v0 WHERE (((x'')>(((('529256162')) NOT BETWEEN ((t0.c43)) AND ((t0.c0)))))) GROUP BY v0.c0, t0.c0 UNION SELECT ALL v0.c0, t0.c0 FROM t0, v0 WHERE ((NOT (((x'')>(((('529256162')) NOT BETWEEN ((t0.c43)) AND ((t0.c0)))))))) GROUP BY v0.c0, t0.c0 UNION SELECT v0.c0, t0.c0 FROM t0, v0 WHERE (((((x'')>(((('529256162')) NOT BETWEEN ((t0.c43)) AND ((t0.c0)))))) ISNULL)) GROUP BY v0.c0, t0.c0;
SELECT ALL v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0;
SELECT rt0.c2, t0.c43, vt0.c1 FROM vt0, rt0, t0, v0 GROUP BY rt0.c2, t0.c43, vt0.c1;
SELECT ALL rt0.c2, t0.c43, vt0.c1 FROM vt0, rt0, t0, v0 GROUP BY rt0.c2, t0.c43, vt0.c1 HAVING ((CAST(vt0.c1 AS INTEGER))%(COUNT(rt0.c1))) UNION ALL SELECT ALL rt0.c2, t0.c43, vt0.c1 FROM vt0, rt0, t0, v0 GROUP BY rt0.c2, t0.c43, vt0.c1 HAVING (NOT (((CAST(vt0.c1 AS INTEGER))%(COUNT(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, t0.c43, vt0.c1 FROM vt0, rt0, t0, v0 GROUP BY rt0.c2, t0.c43, vt0.c1 HAVING ((((CAST(vt0.c1 AS INTEGER))%(COUNT(rt0.c1)))) ISNULL);
SELECT rt0.c2, t0.c43, vt0.c1 FROM vt0, rt0, t0, v0 GROUP BY rt0.c2, t0.c43, vt0.c1;
SELECT ALL rt0.c2, t0.c43, vt0.c1 FROM vt0, rt0, t0, v0 GROUP BY rt0.c2, t0.c43, vt0.c1 HAVING ((CAST(vt0.c1 AS INTEGER))%(COUNT(rt0.c1))) UNION ALL SELECT ALL rt0.c2, t0.c43, vt0.c1 FROM vt0, rt0, t0, v0 GROUP BY rt0.c2, t0.c43, vt0.c1 HAVING (NOT (((CAST(vt0.c1 AS INTEGER))%(COUNT(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, t0.c43, vt0.c1 FROM vt0, rt0, t0, v0 GROUP BY rt0.c2, t0.c43, vt0.c1 HAVING ((((CAST(vt0.c1 AS INTEGER))%(COUNT(rt0.c1)))) ISNULL);
SELECT rt0.c2, t0.c43, vt0.c1 FROM vt0, rt0, t0, v0 GROUP BY rt0.c2, t0.c43, vt0.c1;
SELECT ALL * FROM rt0, vt0, v0;
SELECT ALL * FROM rt0, vt0, v0 WHERE ((((rt0.c0, ((vt0.c0) ISNULL), ((NULL)LIKE(vt0.c1))))==((CAST(rt0.c2 AS INTEGER), ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)), (~ (v0.c0)))))) UNION ALL SELECT ALL * FROM rt0, vt0, v0 WHERE ((NOT ((((rt0.c0, ((vt0.c0) ISNULL), ((NULL)LIKE(vt0.c1))))=((CAST(rt0.c2 AS INTEGER), ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)), (~ (v0.c0)))))))) UNION ALL SELECT * FROM rt0 NOT INDEXED, vt0, v0 WHERE ((((((rt0.c0, ((vt0.c0) ISNULL), ((NULL)LIKE(vt0.c1))))==((CAST(rt0.c2 AS INTEGER), ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)), (~ (v0.c0)))))) ISNULL));
SELECT ALL * FROM rt0, vt0, v0;
SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0 WHERE ((((NOT (rt0.c3)))||((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c3)) AND ((rt0.c3, rt0.c3, rt0.c3)))))) UNION SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT ((((NOT (rt0.c3)))||((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c3)) AND ((rt0.c3, rt0.c3, rt0.c3)))))))) UNION SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0 WHERE ((((((NOT (rt0.c3)))||((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c3)) AND ((rt0.c3, rt0.c3, rt0.c3)))))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM v0, rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2, rt0.c3 UNION SELECT rt0.c2, rt0.c3 FROM v0, rt0 WHERE ((NOT ((NOT (rt0.c2))))) GROUP BY rt0.c2, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c3 FROM v0, rt0 WHERE ((((NOT (rt0.c2))) ISNULL)) GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c0, t0.c0, rt0.c2, rt0.c3, t0.c43 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c2, rt0.c3, t0.c43;
SELECT ALL rt0.c0, t0.c0, rt0.c2, rt0.c3, t0.c43 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c2, rt0.c3, t0.c43 HAVING '&*az{KG' UNION ALL SELECT ALL rt0.c0, t0.c0, rt0.c2, rt0.c3, t0.c43 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c2, rt0.c3, t0.c43 HAVING (NOT ('&*az{KG')) UNION ALL SELECT rt0.c0, t0.c0, rt0.c2, rt0.c3, t0.c43 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c2, rt0.c3, t0.c43 HAVING (('&*az{KG') ISNULL);
SELECT rt0.c0, t0.c0, rt0.c2, rt0.c3, t0.c43 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c2, rt0.c3, t0.c43;
SELECT ALL rt0.c0, t0.c0, rt0.c2, rt0.c3, t0.c43 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c2, rt0.c3, t0.c43 HAVING '&*az{KG' UNION ALL SELECT ALL rt0.c0, t0.c0, rt0.c2, rt0.c3, t0.c43 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c2, rt0.c3, t0.c43 HAVING (NOT ('&*az{KG')) UNION ALL SELECT rt0.c0, t0.c0, rt0.c2, rt0.c3, t0.c43 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c2, rt0.c3, t0.c43 HAVING (('&*az{KG') ISNULL);
SELECT rt0.c0, t0.c0, rt0.c2, rt0.c3, t0.c43 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c2, rt0.c3, t0.c43;
SELECT * FROM rt0 INDEXED BY i4, t0, v0;
SELECT DISTINCT * FROM v0, t0, vt0, rt0;
SELECT DISTINCT * FROM v0, t0, vt0, rt0 WHERE (CHAR(((((rt0.c3)OR(NULL)))OR(rt0.c1)), TYPEOF(NULL), ((t0.c43)>=(rt0.c0)))) UNION SELECT DISTINCT * FROM v0, t0, vt0, rt0 WHERE ((NOT (CHAR(((((rt0.c3)OR(NULL)))OR(rt0.c1)), TYPEOF(NULL), ((t0.c43)>=(rt0.c0)))))) UNION SELECT DISTINCT * FROM v0, t0, vt0, rt0 WHERE (((CHAR(((((rt0.c3)OR(NULL)))OR(rt0.c1)), TYPEOF(NULL), ((t0.c43)>=(rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0, t0, vt0, rt0;
SELECT ALL vt0.c1, t0.c0, v0.c0, t0.c43 FROM t0, vt0, v0, rt0 GROUP BY vt0.c1, t0.c0, v0.c0, t0.c43;
SELECT ALL vt0.c1, t0.c0, v0.c0, t0.c43 FROM t0, vt0, v0, rt0 WHERE ((((((rt0.c3 IN ()))AND(UPPER(rt0.c1))))AND((t0.c0 IN ())))) GROUP BY vt0.c1, t0.c0, v0.c0, t0.c43 UNION SELECT vt0.c1, t0.c0, v0.c0, t0.c43 FROM t0, vt0, v0, rt0 WHERE ((NOT ((((((rt0.c3 IN ()))AND(UPPER(rt0.c1))))AND((t0.c0 IN ())))))) GROUP BY vt0.c1, t0.c0, v0.c0, t0.c43 UNION SELECT ALL vt0.c1, t0.c0, v0.c0, t0.c43 FROM t0, vt0, v0, rt0 WHERE ((((((((rt0.c3 IN ()))AND(UPPER(rt0.c1))))AND((t0.c0 IN ())))) ISNULL)) GROUP BY vt0.c1, t0.c0, v0.c0, t0.c43;
SELECT ALL vt0.c1, t0.c0, v0.c0, t0.c43 FROM t0, vt0, v0, rt0 GROUP BY vt0.c1, t0.c0, v0.c0, t0.c43;
SELECT t0.c0 FROM t0, rt0, v0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, rt0, v0, vt0 GROUP BY t0.c0 HAVING COUNT(CAST(t0.c0 AS BLOB)) UNION ALL SELECT ALL t0.c0 FROM t0, rt0, v0, vt0 GROUP BY t0.c0 HAVING (NOT (COUNT(CAST(t0.c0 AS BLOB)))) UNION ALL SELECT t0.c0 FROM t0 NOT INDEXED, rt0, v0, vt0 GROUP BY t0.c0 HAVING ((COUNT(CAST(t0.c0 AS BLOB))) ISNULL);
SELECT t0.c0 FROM t0, rt0, v0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, rt0, v0, vt0 GROUP BY t0.c0 HAVING COUNT(CAST(t0.c0 AS BLOB)) UNION ALL SELECT ALL t0.c0 FROM t0, rt0, v0, vt0 GROUP BY t0.c0 HAVING (NOT (COUNT(CAST(t0.c0 AS BLOB)))) UNION ALL SELECT t0.c0 FROM t0 NOT INDEXED, rt0, v0, vt0 GROUP BY t0.c0 HAVING ((COUNT(CAST(t0.c0 AS BLOB))) ISNULL);
SELECT t0.c0 FROM t0, rt0, v0, vt0 GROUP BY t0.c0;
SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM v0, vt0;
SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 WHERE ((+ (((v0.c0)/(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 WHERE ((NOT ((+ (((v0.c0)/(vt0.c0))))))) UNION ALL SELECT vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 WHERE ((((+ (((v0.c0)/(vt0.c0))))) ISNULL));
SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM v0, vt0;
SELECT DISTINCT vt0.c0, vt0.c1, rt0.c3 FROM rt0, v0, t0, vt0;
SELECT DISTINCT vt0.c0, vt0.c1, rt0.c3 FROM rt0, v0, t0, vt0 WHERE (((((((t0.c43) NOTNULL))AND(((v0.c0) ISNULL))))OR(((t0.c43) BETWEEN (t0.c0) AND (x'd329'))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, rt0.c3 FROM rt0, v0, t0, vt0 WHERE ((NOT (((((((t0.c43) NOTNULL))AND(((v0.c0) ISNULL))))OR(((t0.c43) BETWEEN (t0.c0) AND (x'd329'))))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, rt0.c3 FROM rt0, v0, t0, vt0 WHERE (((((((((t0.c43) NOTNULL))AND(((v0.c0) ISNULL))))OR(((t0.c43) BETWEEN (t0.c0) AND (x'd329'))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, rt0.c3 FROM rt0, v0, t0, vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0))) BETWEEN (v0.c0) AND ('-612894738'))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0)AND(v0.c0)))OR(v0.c0))) BETWEEN (v0.c0) AND ('-612894738'))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((((v0.c0)AND(v0.c0)))OR(v0.c0))) BETWEEN (v0.c0) AND ('-612894738'))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(TOTAL(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(TOTAL(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(TOTAL(v0.c0))) ISNULL);
SELECT ALL MIN((((vt0.c0)) NOT BETWEEN ((((rt0.c1)>=(t0.c43)))) AND ((SQLITE_COMPILEOPTION_GET(rt0.c2))))) FROM vt0, t0, rt0 ORDER BY HEX(DISTINCT (- (rt0.c1))) DESC  NULLS LAST;
SELECT * FROM v0, t0;
SELECT * FROM v0, t0 WHERE ((~ ((+ (t0.c43))))) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((NOT ((~ ((+ (t0.c43))))))) UNION ALL SELECT * FROM v0, t0 WHERE ((((~ ((+ (t0.c43))))) ISNULL));
SELECT * FROM v0, t0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (CAST(rt0.c1 AS REAL) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (CAST(rt0.c1 AS REAL) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((CAST(rt0.c1 AS REAL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL vt0.c1, v0.c0 FROM v0, vt0, t0 CROSS JOIN rt0 ON ((((rt0.c0) IS TRUE))+((((vt0.c1))>=((rt0.c0))))) GROUP BY vt0.c1, v0.c0;
SELECT vt0.c1, v0.c0 FROM v0, vt0, t0 CROSS JOIN rt0 ON ((((rt0.c0) IS TRUE))+((((vt0.c1))>=((rt0.c0))))) WHERE (CASE ((vt0.c1)>(rt0.c2))  WHEN TYPEOF(rt0.c2) THEN rt0.c3 COLLATE BINARY END) GROUP BY vt0.c1, v0.c0 UNION SELECT vt0.c1, v0.c0 FROM v0, vt0, t0 CROSS JOIN rt0 ON ((((rt0.c0) IS TRUE))+((((vt0.c1))>=((rt0.c0))))) WHERE ((NOT (CASE ((vt0.c1)>(rt0.c2))  WHEN TYPEOF(rt0.c2) THEN rt0.c3 COLLATE BINARY END))) GROUP BY vt0.c1, v0.c0 UNION SELECT vt0.c1, v0.c0 FROM v0, vt0, t0 CROSS JOIN rt0 ON ((((rt0.c0) IS TRUE))+((((vt0.c1))>=((rt0.c0))))) WHERE (((CASE ((vt0.c1)>(rt0.c2))  WHEN TYPEOF(rt0.c2) THEN rt0.c3 COLLATE BINARY END) ISNULL)) GROUP BY vt0.c1, v0.c0;
SELECT ALL vt0.c1, v0.c0 FROM v0, vt0, t0 CROSS JOIN rt0 ON ((((rt0.c0) IS TRUE))+((((vt0.c1))>=((rt0.c0))))) GROUP BY vt0.c1, v0.c0;
SELECT ALL t0.c0, rt0.c0, t0.c43, rt0.c1, rt0.c3 FROM rt0 CROSS JOIN v0 ON (NOT (v0.c0)) COLLATE BINARY CROSS JOIN t0 ON (((v0.c0) IS FALSE) IN ()) GROUP BY t0.c0, rt0.c0, t0.c43, rt0.c1, rt0.c3;
SELECT ALL t0.c0, rt0.c0, t0.c43, rt0.c1, rt0.c3 FROM rt0 CROSS JOIN v0 ON (NOT (v0.c0)) COLLATE BINARY CROSS JOIN t0 ON (((v0.c0) IS FALSE) IN ()) GROUP BY t0.c0, rt0.c0, t0.c43, rt0.c1, rt0.c3 HAVING COUNT(COUNT(*)) COLLATE NOCASE UNION ALL SELECT t0.c0, rt0.c0, t0.c43, rt0.c1, rt0.c3 FROM rt0 CROSS JOIN v0 ON (NOT (v0.c0)) COLLATE BINARY CROSS JOIN t0 ON (((v0.c0) IS FALSE) IN ()) GROUP BY t0.c0, rt0.c0, t0.c43, rt0.c1, rt0.c3 HAVING (NOT (COUNT(COUNT(*)) COLLATE NOCASE)) UNION ALL SELECT ALL t0.c0, rt0.c0, t0.c43, rt0.c1, rt0.c3 FROM rt0 CROSS JOIN v0 ON (NOT (v0.c0)) COLLATE BINARY CROSS JOIN t0 ON (((v0.c0) IS FALSE) IN ()) GROUP BY t0.c0, rt0.c0, t0.c43, rt0.c1, rt0.c3 HAVING ((COUNT(COUNT(*)) COLLATE NOCASE) ISNULL);
SELECT ALL * FROM v0, vt0, t0;
SELECT * FROM v0, vt0, t0 WHERE ((((t0.c0 IN ())) IS TRUE)) UNION ALL SELECT ALL * FROM v0, vt0, t0 WHERE ((NOT ((((t0.c0 IN ())) IS TRUE)))) UNION ALL SELECT * FROM v0, vt0, t0 WHERE ((((((t0.c0 IN ())) IS TRUE)) ISNULL));
SELECT ALL * FROM v0, vt0, t0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((CAST(rt0.c3 AS BLOB)) BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) AND (((v0.c0) ISNULL)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((CAST(rt0.c3 AS BLOB)) BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) AND (((v0.c0) ISNULL)))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((CAST(rt0.c3 AS BLOB)) BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) AND (((v0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT vt0.c0 FROM v0, vt0, t0, rt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0, t0, rt0 WHERE (((((vt0.c1) IS TRUE))&((- (0.5623903249636424))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0, t0, rt0 WHERE ((NOT (((((vt0.c1) IS TRUE))&((- (0.5623903249636424))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0, t0, rt0 WHERE (((((((vt0.c1) IS TRUE))&((- (0.5623903249636424))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0, t0, rt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2, rt0.c3 FROM rt0, v0, t0, vt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM rt0, v0, t0, vt0 GROUP BY rt0.c2, rt0.c3 HAVING MAX(rt0.c0) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0, v0, t0, vt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT (MAX(rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0, v0, t0, vt0 GROUP BY rt0.c2, rt0.c3 HAVING ((MAX(rt0.c0)) ISNULL);
SELECT ALL rt0.c2, rt0.c3 FROM rt0, v0, t0, vt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM rt0, v0, t0, vt0 GROUP BY rt0.c2, rt0.c3 HAVING MAX(rt0.c0) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0, v0, t0, vt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT (MAX(rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0, v0, t0, vt0 GROUP BY rt0.c2, rt0.c3 HAVING ((MAX(rt0.c0)) ISNULL);
SELECT ALL rt0.c2, rt0.c3 FROM rt0, v0, t0, vt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((~ ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((~ ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((~ ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON ((((0.7845085838163727)OR(vt0.c1)))IS NOT(((vt0.c0)>(v0.c0))));
SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON ((((0.7845085838163727)OR(vt0.c1)))IS NOT(((vt0.c0)>(v0.c0)))) WHERE (CAST('>hrbN|\' AS NUMERIC)) UNION SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON ((((0.7845085838163727)OR(vt0.c1)))IS NOT(((vt0.c0)>(v0.c0)))) WHERE ((NOT (CAST('>hrbN|\' AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON ((((0.7845085838163727)OR(vt0.c1)))IS NOT(((vt0.c0)>(v0.c0)))) WHERE (((CAST('>hrbN|\' AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON ((((0.7845085838163727)OR(vt0.c1)))IS NOT(((vt0.c0)>(v0.c0))));
SELECT rt0.c0, vt0.c0, rt0.c1, t0.c0 FROM vt0, t0, rt0 LEFT OUTER JOIN v0 ON ((((vt0.c0) ISNULL))/((NOT (vt0.c1)))) GROUP BY rt0.c0, vt0.c0, rt0.c1, t0.c0;
SELECT rt0.c0, vt0.c0, rt0.c1, t0.c0 FROM vt0, t0, rt0 LEFT OUTER JOIN v0 ON ((((vt0.c0) ISNULL))/((NOT (vt0.c1)))) WHERE ((((NOT (rt0.c1))) NOT NULL)) GROUP BY rt0.c0, vt0.c0, rt0.c1, t0.c0 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c1, t0.c0 FROM vt0, t0, rt0 LEFT OUTER JOIN v0 ON ((((vt0.c0) ISNULL))/((NOT (vt0.c1)))) WHERE ((NOT ((((NOT (rt0.c1))) NOT NULL)))) GROUP BY rt0.c0, vt0.c0, rt0.c1, t0.c0 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c1, t0.c0 FROM vt0, t0, rt0 LEFT OUTER JOIN v0 ON ((((vt0.c0) ISNULL))/((NOT (vt0.c1)))) WHERE ((((((NOT (rt0.c1))) NOT NULL)) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c1, t0.c0;
SELECT rt0.c0, vt0.c0, rt0.c1, t0.c0 FROM vt0, t0, rt0 LEFT OUTER JOIN v0 ON ((((vt0.c0) ISNULL))/((NOT (vt0.c1)))) GROUP BY rt0.c0, vt0.c0, rt0.c1, t0.c0;
SELECT ALL vt0.c0, v0.c0, t0.c43 FROM vt0, t0 INDEXED BY i4, v0 GROUP BY vt0.c0, v0.c0, t0.c43;
SELECT ALL vt0.c0, v0.c0, t0.c43 FROM vt0, t0 INDEXED BY i4, v0 GROUP BY vt0.c0, v0.c0, t0.c43 HAVING GROUP_CONCAT(ABS(vt0.c0)) UNION ALL SELECT ALL vt0.c0, v0.c0, t0.c43 FROM vt0, t0 INDEXED BY i4, v0 GROUP BY vt0.c0, v0.c0, t0.c43 HAVING (NOT (GROUP_CONCAT(ABS(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, v0.c0, t0.c43 FROM vt0, t0 INDEXED BY i4, v0 GROUP BY vt0.c0, v0.c0, t0.c43 HAVING ((GROUP_CONCAT(ABS(vt0.c0))) ISNULL);
SELECT ALL vt0.c0, v0.c0, t0.c43 FROM vt0, t0 INDEXED BY i4, v0 GROUP BY vt0.c0, v0.c0, t0.c43;
SELECT ALL vt0.c0, v0.c0, t0.c43 FROM vt0, t0 INDEXED BY i4, v0 GROUP BY vt0.c0, v0.c0, t0.c43 HAVING GROUP_CONCAT(ABS(vt0.c0)) UNION ALL SELECT ALL vt0.c0, v0.c0, t0.c43 FROM vt0, t0 INDEXED BY i4, v0 GROUP BY vt0.c0, v0.c0, t0.c43 HAVING (NOT (GROUP_CONCAT(ABS(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, v0.c0, t0.c43 FROM vt0, t0 INDEXED BY i4, v0 GROUP BY vt0.c0, v0.c0, t0.c43 HAVING ((GROUP_CONCAT(ABS(vt0.c0))) ISNULL);
SELECT ALL vt0.c0, v0.c0, t0.c43 FROM vt0, t0 INDEXED BY i4, v0 GROUP BY vt0.c0, v0.c0, t0.c43;
SELECT t0.c43 FROM t0;
SELECT t0.c43 FROM t0 WHERE (((((((t0.c43)/(t0.c43)))OR(((0.031214615955744485) IS TRUE))))OR(0X6fffc113))) UNION ALL SELECT t0.c43 FROM t0 WHERE ((NOT (((((((t0.c43)/(t0.c43)))OR(((0.031214615955744485) IS TRUE))))OR(0X6fffc113))))) UNION ALL SELECT ALL t0.c43 FROM t0 WHERE (((((((((t0.c43)/(t0.c43)))OR(((0.031214615955744485) IS TRUE))))OR(0X6fffc113))) ISNULL));
SELECT t0.c43 FROM t0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (IFNULL(DISTINCT '0.5368137146724354', t0.c43)) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (IFNULL(DISTINCT '0.5368137146724354', t0.c43)))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((IFNULL(DISTINCT '0.5368137146724354', t0.c43)) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL t0.c0, t0.c43 FROM t0 GROUP BY t0.c0, t0.c43;
SELECT t0.c0, t0.c43 FROM t0 WHERE (((GLOB(t0.c43, x'8b0b'))GLOB(CAST(t0.c0 AS BLOB)))) GROUP BY t0.c0, t0.c43 UNION SELECT ALL t0.c0, t0.c43 FROM t0 WHERE ((NOT (((GLOB(t0.c43, x'8b0b'))GLOB(CAST(t0.c0 AS BLOB)))))) GROUP BY t0.c0, t0.c43 UNION SELECT ALL t0.c0, t0.c43 FROM t0 WHERE (((((GLOB(t0.c43, x'8b0b'))GLOB(CAST(t0.c0 AS BLOB)))) ISNULL)) GROUP BY t0.c0, t0.c43;
SELECT ALL t0.c0, t0.c43 FROM t0 GROUP BY t0.c0, t0.c43;
SELECT ALL vt0.c1, vt0.c0 FROM v0, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM v0, vt0 GROUP BY vt0.c1, vt0.c0 HAVING v0.c0 UNION ALL SELECT vt0.c1, vt0.c0 FROM v0, vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT vt0.c1, vt0.c0 FROM v0, vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM v0, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM v0, vt0 GROUP BY vt0.c1, vt0.c0 HAVING v0.c0 UNION ALL SELECT vt0.c1, vt0.c0 FROM v0, vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT vt0.c1, vt0.c0 FROM v0, vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM v0, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, v0.c0, vt0.c0 FROM v0, vt0;
SELECT ALL vt0.c1, v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((((v0.c0))<((vt0.c0))))<(CAST(vt0.c1 AS INTEGER)))) UNION ALL SELECT ALL vt0.c1, v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT ((((((v0.c0))<((vt0.c0))))<(CAST(vt0.c1 AS INTEGER)))))) UNION ALL SELECT ALL vt0.c1, v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((((((v0.c0))<((vt0.c0))))<(CAST(vt0.c1 AS INTEGER)))) ISNULL));
SELECT vt0.c1, v0.c0, vt0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM vt0, v0, t0;
SELECT DISTINCT * FROM vt0, v0, t0 WHERE (0.6464136232236686) UNION SELECT DISTINCT * FROM vt0, v0, t0 WHERE ((NOT (0.6464136232236686))) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED, v0, t0 WHERE (((0.6464136232236686) ISNULL));
SELECT DISTINCT * FROM vt0, v0, t0;
SELECT vt0.c1, rt0.c3 FROM vt0, rt0, t0 GROUP BY vt0.c1, rt0.c3;
SELECT ALL vt0.c1, rt0.c3 FROM vt0, rt0, t0 WHERE (((x'8efc') BETWEEN (t0.c43) AND (NULL)) COLLATE BINARY) GROUP BY vt0.c1, rt0.c3 UNION SELECT ALL vt0.c1, rt0.c3 FROM vt0, rt0, t0 WHERE ((NOT (((x'8efc') BETWEEN (t0.c43) AND (NULL)) COLLATE BINARY))) GROUP BY vt0.c1, rt0.c3 UNION SELECT ALL vt0.c1, rt0.c3 FROM vt0, rt0, t0 WHERE (((((x'8efc') BETWEEN (t0.c43) AND (NULL)) COLLATE BINARY) ISNULL)) GROUP BY vt0.c1, rt0.c3;
SELECT vt0.c1, rt0.c3 FROM vt0, rt0, t0 GROUP BY vt0.c1, rt0.c3;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING '190178306' UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT ('190178306')) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (('190178306') ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING '190178306' UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT ('190178306')) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (('190178306') ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE ('d9') UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ('d9'))) UNION ALL SELECT * FROM t0 WHERE ((('d9') ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM rt0, v0, vt0, t0 NOT INDEXED;
SELECT DISTINCT * FROM rt0, v0, vt0, t0 WHERE (CASE WHEN NULL THEN '' COLLATE BINARY END) UNION SELECT DISTINCT * FROM rt0, v0, vt0, t0 WHERE ((NOT (CASE WHEN NULL THEN '' COLLATE BINARY END))) UNION SELECT DISTINCT * FROM rt0, v0 NOT INDEXED, vt0, t0 WHERE (((CASE WHEN NULL THEN '' COLLATE BINARY END) ISNULL));
SELECT DISTINCT * FROM rt0, v0, vt0, t0 NOT INDEXED;
SELECT ALL vt0.c0, rt0.c3, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c3, vt0.c1;
SELECT vt0.c0, rt0.c3, vt0.c1 FROM rt0, vt0 WHERE ((((((rt0.c3)&(vt0.c1)), rt0.c3, CAST(rt0.c3 AS TEXT)))=((((0.14673836259698014) NOT NULL), ((((vt0.c1)OR(rt0.c0)))AND(rt0.c1)), (- (rt0.c0)))))) GROUP BY vt0.c0, rt0.c3, vt0.c1 UNION SELECT ALL vt0.c0, rt0.c3, vt0.c1 FROM rt0, vt0 WHERE ((NOT ((((((rt0.c3)&(vt0.c1)), rt0.c3, CAST(rt0.c3 AS TEXT)))=((((0.14673836259698014) NOT NULL), ((((vt0.c1)OR(rt0.c0)))AND(rt0.c1)), (- (rt0.c0)))))))) GROUP BY vt0.c0, rt0.c3, vt0.c1 UNION SELECT vt0.c0, rt0.c3, vt0.c1 FROM rt0, vt0 WHERE ((((((((rt0.c3)&(vt0.c1)), rt0.c3, CAST(rt0.c3 AS TEXT)))==((((0.14673836259698014) NOT NULL), ((((vt0.c1)OR(rt0.c0)))AND(rt0.c1)), (- (rt0.c0)))))) ISNULL)) GROUP BY vt0.c0, rt0.c3, vt0.c1;
SELECT ALL vt0.c0, rt0.c3, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c3, vt0.c1;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 NOT INDEXED, v0 GROUP BY v0.c0 HAVING TOTAL(CHANGES()) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(CHANGES()))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((TOTAL(CHANGES())) ISNULL);
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 NOT INDEXED, v0 GROUP BY v0.c0 HAVING TOTAL(CHANGES()) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(CHANGES()))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((TOTAL(CHANGES())) ISNULL);
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT vt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0, v0;
SELECT vt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0, v0 WHERE (CAST((((rt0.c1))<>((v0.c0))) AS INTEGER)) UNION ALL SELECT ALL vt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0, v0 WHERE ((NOT (CAST((((rt0.c1))<>((v0.c0))) AS INTEGER)))) UNION ALL SELECT vt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0, v0 WHERE (((CAST((((rt0.c1))<>((v0.c0))) AS INTEGER)) ISNULL));
SELECT vt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0, v0;
SELECT DISTINCT * FROM t0, vt0, rt0;
SELECT DISTINCT * FROM t0, vt0, rt0 WHERE ((((((vt0.c0 IN (t0.c0)))AND(CASE rt0.c1  WHEN t0.c0 THEN rt0.c1 ELSE rt0.c3 END)))AND(CASE WHEN t0.c43 THEN rt0.c1 END))) UNION SELECT DISTINCT * FROM t0, vt0, rt0 WHERE ((NOT ((((((vt0.c0 IN (t0.c0)))AND(CASE rt0.c1  WHEN t0.c0 THEN rt0.c1 ELSE rt0.c3 END)))AND(CASE WHEN t0.c43 THEN rt0.c1 END))))) UNION SELECT DISTINCT * FROM t0, vt0, rt0 WHERE ((((((((vt0.c0 IN (t0.c0)))AND(CASE rt0.c1  WHEN t0.c0 THEN rt0.c1 ELSE rt0.c3 END)))AND(CASE WHEN t0.c43 THEN rt0.c1 END))) ISNULL));
SELECT DISTINCT * FROM t0, vt0, rt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE ((((0.7227171167948248) NOT NULL) IN ())) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((((0.7227171167948248) NOT NULL) IN ())))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((((((0.7227171167948248) NOT NULL) IN ())) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL t0.c43, rt0.c3, vt0.c0, rt0.c1, v0.c0 FROM t0, rt0, v0, vt0 GROUP BY t0.c43, rt0.c3, vt0.c0, rt0.c1, v0.c0;
SELECT t0.c43, rt0.c3, vt0.c0, rt0.c1, v0.c0 FROM t0, rt0, v0, vt0 GROUP BY t0.c43, rt0.c3, vt0.c0, rt0.c1, v0.c0 HAVING (~ (rt0.c3)) UNION ALL SELECT t0.c43, rt0.c3, vt0.c0, rt0.c1, v0.c0 FROM t0, rt0, v0, vt0 GROUP BY t0.c43, rt0.c3, vt0.c0, rt0.c1, v0.c0 HAVING (NOT ((~ (rt0.c3)))) UNION ALL SELECT ALL t0.c43, rt0.c3, vt0.c0, rt0.c1, v0.c0 FROM t0, rt0, v0, vt0 GROUP BY t0.c43, rt0.c3, vt0.c0, rt0.c1, v0.c0 HAVING (((~ (rt0.c3))) ISNULL);
SELECT ALL t0.c43, rt0.c3, vt0.c0, rt0.c1, v0.c0 FROM t0, rt0, v0, vt0 GROUP BY t0.c43, rt0.c3, vt0.c0, rt0.c1, v0.c0;
SELECT t0.c43, rt0.c3, vt0.c0, rt0.c1, v0.c0 FROM t0, rt0, v0, vt0 GROUP BY t0.c43, rt0.c3, vt0.c0, rt0.c1, v0.c0 HAVING (~ (rt0.c3)) UNION ALL SELECT t0.c43, rt0.c3, vt0.c0, rt0.c1, v0.c0 FROM t0, rt0, v0, vt0 GROUP BY t0.c43, rt0.c3, vt0.c0, rt0.c1, v0.c0 HAVING (NOT ((~ (rt0.c3)))) UNION ALL SELECT ALL t0.c43, rt0.c3, vt0.c0, rt0.c1, v0.c0 FROM t0, rt0, v0, vt0 GROUP BY t0.c43, rt0.c3, vt0.c0, rt0.c1, v0.c0 HAVING (((~ (rt0.c3))) ISNULL);
SELECT ALL t0.c43, rt0.c3, vt0.c0, rt0.c1, v0.c0 FROM t0, rt0, v0, vt0 GROUP BY t0.c43, rt0.c3, vt0.c0, rt0.c1, v0.c0;
SELECT rt0.c3, t0.c0, vt0.c0, t0.c43, vt0.c1, v0.c0 FROM t0, v0, rt0, vt0;
SELECT rt0.c3, t0.c0, vt0.c0, t0.c43, vt0.c1, v0.c0 FROM t0, v0, rt0, vt0 WHERE ((((((+ (rt0.c3)))AND(t0.c43 COLLATE NOCASE)))OR(((vt0.c0)>=(rt0.c3))))) UNION ALL SELECT ALL rt0.c3, t0.c0, vt0.c0, t0.c43, vt0.c1, v0.c0 FROM t0, v0, rt0, vt0 WHERE ((NOT ((((((+ (rt0.c3)))AND(t0.c43 COLLATE NOCASE)))OR(((vt0.c0)>=(rt0.c3))))))) UNION ALL SELECT rt0.c3, t0.c0, vt0.c0, t0.c43, vt0.c1, v0.c0 FROM t0, v0, rt0, vt0 WHERE ((((((((+ (rt0.c3)))AND(t0.c43 COLLATE NOCASE)))OR(((vt0.c0)>=(rt0.c3))))) ISNULL));
SELECT rt0.c3, t0.c0, vt0.c0, t0.c43, vt0.c1, v0.c0 FROM t0, v0, rt0, vt0;
SELECT DISTINCT t0.c0, rt0.c0, rt0.c3 FROM v0, rt0, t0 INDEXED BY i4;
SELECT DISTINCT t0.c0, rt0.c0, rt0.c3 FROM v0, rt0, t0 INDEXED BY i4 WHERE (((((x'')OR(t0.c43))) NOT NULL)) UNION SELECT DISTINCT t0.c0, rt0.c0, rt0.c3 FROM v0, rt0, t0 INDEXED BY i4 WHERE ((NOT (((((x'')OR(t0.c43))) NOT NULL)))) UNION SELECT DISTINCT t0.c0, rt0.c0, rt0.c3 FROM v0, rt0, t0 INDEXED BY i4 WHERE (((((((x'')OR(t0.c43))) NOT NULL)) ISNULL));
SELECT DISTINCT t0.c0, rt0.c0, rt0.c3 FROM v0, rt0, t0 INDEXED BY i4;
SELECT v0.c0, vt0.c0, vt0.c1 FROM vt0 NATURAL JOIN v0 GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM vt0 NATURAL JOIN v0 WHERE (((vt0.c1)%(json_valid(vt0.c0)))) GROUP BY v0.c0, vt0.c0, vt0.c1 UNION SELECT v0.c0, vt0.c0, vt0.c1 FROM vt0 NATURAL JOIN v0 WHERE ((NOT (((vt0.c1)%(json_valid(vt0.c0)))))) GROUP BY v0.c0, vt0.c0, vt0.c1 UNION SELECT v0.c0, vt0.c0, vt0.c1 FROM vt0 NATURAL JOIN v0 WHERE (((((vt0.c1)%(json_valid(vt0.c0)))) ISNULL)) GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT v0.c0, vt0.c0, vt0.c1 FROM vt0 NATURAL JOIN v0 GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT ALL rt0.c3, vt0.c1, rt0.c1, t0.c0, vt0.c0 FROM vt0, v0, t0, rt0 GROUP BY rt0.c3, vt0.c1, rt0.c1, t0.c0, vt0.c0;
SELECT ALL rt0.c3, vt0.c1, rt0.c1, t0.c0, vt0.c0 FROM vt0, v0, t0, rt0 GROUP BY rt0.c3, vt0.c1, rt0.c1, t0.c0, vt0.c0 HAVING PRINTF(MAX(COUNT(t0.c0))) UNION ALL SELECT rt0.c3, vt0.c1, rt0.c1, t0.c0, vt0.c0 FROM vt0, v0, t0, rt0 GROUP BY rt0.c3, vt0.c1, rt0.c1, t0.c0, vt0.c0 HAVING (NOT (PRINTF(MAX(COUNT(t0.c0))))) UNION ALL SELECT rt0.c3, vt0.c1, rt0.c1, t0.c0, vt0.c0 FROM vt0, v0, t0, rt0 GROUP BY rt0.c3, vt0.c1, rt0.c1, t0.c0, vt0.c0 HAVING ((PRINTF(MAX(COUNT(t0.c0)))) ISNULL);
SELECT ALL v0.c0, t0.c0 FROM t0, v0;
SELECT v0.c0, t0.c0 FROM t0, v0 WHERE ((((v0.c0)) BETWEEN (((t0.c43 IN (t0.c43)))) AND ((((((t0.c43)AND(t0.c43)))OR(t0.c0)))))) UNION ALL SELECT v0.c0, t0.c0 FROM t0, v0 WHERE ((NOT ((((v0.c0)) BETWEEN (((t0.c43 IN (t0.c43)))) AND ((((((t0.c43)AND(t0.c43)))OR(t0.c0)))))))) UNION ALL SELECT v0.c0, t0.c0 FROM t0, v0 WHERE ((((((v0.c0)) BETWEEN (((t0.c43 IN (t0.c43)))) AND ((((((t0.c43)AND(t0.c43)))OR(t0.c0)))))) ISNULL));
SELECT ALL v0.c0, t0.c0 FROM t0, v0;
SELECT DISTINCT t0.c0, t0.c43 FROM t0;
SELECT DISTINCT t0.c0, t0.c43 FROM t0 WHERE (NULL) UNION SELECT DISTINCT t0.c0, t0.c43 FROM t0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT t0.c0, t0.c43 FROM t0 WHERE (((NULL) ISNULL));
SELECT DISTINCT t0.c0, t0.c43 FROM t0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((0.7652400767150404)AND(vt0.c1)))OR(vt0.c0)))&((~ (vt0.c1))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((((0.7652400767150404)AND(vt0.c1)))OR(vt0.c0)))&((~ (vt0.c1))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((0.7652400767150404)AND(vt0.c1)))OR(vt0.c0)))&((~ (vt0.c1))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL t0.c43, vt0.c0, t0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c43, vt0.c0, t0.c0, vt0.c1;
SELECT ALL t0.c43, vt0.c0, t0.c0, vt0.c1 FROM vt0, t0 NOT INDEXED GROUP BY t0.c43, vt0.c0, t0.c0, vt0.c1 HAVING ((((((vt0.c1)OR(GROUP_CONCAT(SUM(vt0.c1)))))OR(vt0.c1))) NOT NULL) UNION ALL SELECT ALL t0.c43, vt0.c0, t0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c43, vt0.c0, t0.c0, vt0.c1 HAVING (NOT (((((((vt0.c1)OR(GROUP_CONCAT(SUM(vt0.c1)))))OR(vt0.c1))) NOT NULL))) UNION ALL SELECT t0.c43, vt0.c0, t0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c43, vt0.c0, t0.c0, vt0.c1 HAVING ((((((((vt0.c1)OR(GROUP_CONCAT(SUM(vt0.c1)))))OR(vt0.c1))) NOT NULL)) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END) NOTNULL)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END) NOTNULL)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END) NOTNULL)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, v0, t0;
SELECT DISTINCT * FROM vt0, v0, t0 WHERE (load_extension('1770700630', (t0.c43 IN ()))) UNION SELECT DISTINCT * FROM vt0, v0, t0 WHERE ((NOT (load_extension('1770700630', (t0.c43 IN ()))))) UNION SELECT DISTINCT * FROM vt0, v0, t0 WHERE (((load_extension('1770700630', (t0.c43 IN ()))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, t0;
SELECT ALL t0.c0, rt0.c2, vt0.c0, rt0.c1, t0.c43, rt0.c3, vt0.c1, v0.c0 FROM rt0, v0, vt0, t0 GROUP BY t0.c0, rt0.c2, vt0.c0, rt0.c1, t0.c43, rt0.c3, vt0.c1, v0.c0;
SELECT t0.c0, rt0.c2, vt0.c0, rt0.c1, t0.c43, rt0.c3, vt0.c1, v0.c0 FROM rt0, v0, vt0, t0 WHERE (vt0.c0) GROUP BY t0.c0, rt0.c2, vt0.c0, rt0.c1, t0.c43, rt0.c3, vt0.c1, v0.c0 UNION SELECT t0.c0, rt0.c2, vt0.c0, rt0.c1, t0.c43, rt0.c3, vt0.c1, v0.c0 FROM rt0, v0, vt0, t0 WHERE ((NOT (vt0.c0))) GROUP BY t0.c0, rt0.c2, vt0.c0, rt0.c1, t0.c43, rt0.c3, vt0.c1, v0.c0 UNION SELECT ALL t0.c0, rt0.c2, vt0.c0, rt0.c1, t0.c43, rt0.c3, vt0.c1, v0.c0 FROM rt0 NOT INDEXED, v0, vt0, t0 WHERE (((vt0.c0) ISNULL)) GROUP BY t0.c0, rt0.c2, vt0.c0, rt0.c1, t0.c43, rt0.c3, vt0.c1, v0.c0;
SELECT ALL t0.c0, rt0.c2, vt0.c0, rt0.c1, t0.c43, rt0.c3, vt0.c1, v0.c0 FROM rt0, v0, vt0, t0 GROUP BY t0.c0, rt0.c2, vt0.c0, rt0.c1, t0.c43, rt0.c3, vt0.c1, v0.c0;
SELECT ALL t0.c0, rt0.c3, rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON ((t0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) COLLATE RTRIM INNER JOIN v0 ON CASE CASE WHEN rt0.c2 THEN rt0.c2 END  WHEN (((t0.c0)) BETWEEN ((rt0.c2)) AND (('951215563'))) THEN v0.c0 END GROUP BY t0.c0, rt0.c3, rt0.c1;
SELECT t0.c0, rt0.c3, rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON ((t0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) COLLATE RTRIM INNER JOIN v0 ON CASE CASE WHEN rt0.c2 THEN rt0.c2 END  WHEN (((t0.c0)) BETWEEN ((rt0.c2)) AND (('951215563'))) THEN v0.c0 END GROUP BY t0.c0, rt0.c3, rt0.c1 HAVING SUM(CAST(TOTAL(rt0.c0) AS INTEGER)) UNION ALL SELECT t0.c0, rt0.c3, rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON ((t0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) COLLATE RTRIM INNER JOIN v0 ON CASE CASE WHEN rt0.c2 THEN rt0.c2 END  WHEN (((t0.c0)) BETWEEN ((rt0.c2)) AND (('951215563'))) THEN v0.c0 END GROUP BY t0.c0, rt0.c3, rt0.c1 HAVING (NOT (SUM(CAST(TOTAL(rt0.c0) AS INTEGER)))) UNION ALL SELECT ALL t0.c0, rt0.c3, rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON ((t0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) COLLATE RTRIM INNER JOIN v0 ON CASE CASE WHEN rt0.c2 THEN rt0.c2 END  WHEN (((t0.c0)) BETWEEN ((rt0.c2)) AND (('951215563'))) THEN v0.c0 END GROUP BY t0.c0, rt0.c3, rt0.c1 HAVING ((SUM(CAST(TOTAL(rt0.c0) AS INTEGER))) ISNULL);
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((((0x2b920bcf COLLATE BINARY)OR(((vt0.c1)%(v0.c0)))))AND(CASE v0.c0  WHEN vt0.c1 THEN v0.c0 END));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((((0X2b920bcf COLLATE BINARY)OR(((vt0.c1)%(v0.c0)))))AND(CASE v0.c0  WHEN vt0.c1 THEN v0.c0 END)) WHERE (((vt0.c0)AND(((((v0.c0)AND(vt0.c0)))OR(0.8657148542686175))))) UNION ALL SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((((0X2b920bcf COLLATE BINARY)OR(((vt0.c1)%(v0.c0)))))AND(CASE v0.c0  WHEN vt0.c1 THEN v0.c0 END)) WHERE ((NOT (((vt0.c0)AND(((((v0.c0)AND(vt0.c0)))OR(0.8657148542686175))))))) UNION ALL SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((((0x2b920bcf COLLATE BINARY)OR(((vt0.c1)%(v0.c0)))))AND(CASE v0.c0  WHEN vt0.c1 THEN v0.c0 END)) WHERE (((((vt0.c0)AND(((((v0.c0)AND(vt0.c0)))OR(0.8657148542686175))))) ISNULL));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((((0x2b920bcf COLLATE BINARY)OR(((vt0.c1)%(v0.c0)))))AND(CASE v0.c0  WHEN vt0.c1 THEN v0.c0 END));
SELECT DISTINCT vt0.c1 FROM vt0, v0;
SELECT DISTINCT vt0.c1 FROM vt0, v0 WHERE ((NOT (CAST('Nb h2k6' AS REAL)))) UNION SELECT DISTINCT vt0.c1 FROM vt0, v0 WHERE ((NOT ((NOT (CAST('Nb h2k6' AS REAL)))))) UNION SELECT DISTINCT vt0.c1 FROM vt0, v0 WHERE ((((NOT (CAST('Nb h2k6' AS REAL)))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0, v0;
SELECT rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((+ (rt0.c2)) COLLATE NOCASE) GROUP BY rt0.c0, v0.c0, rt0.c1 UNION SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT ((+ (rt0.c2)) COLLATE NOCASE))) GROUP BY rt0.c0, v0.c0, rt0.c1 UNION SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((((+ (rt0.c2)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CASE SUM(GROUP_CONCAT(MAX(t0.c43)))  WHEN MIN(TOTAL(COUNT(*))) THEN x'' ELSE AVG(AVG(MIN(t0.c43))) END UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CASE SUM(GROUP_CONCAT(MAX(t0.c43)))  WHEN MIN(TOTAL(COUNT(*))) THEN x'' ELSE AVG(AVG(MIN(t0.c43))) END)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CASE SUM(GROUP_CONCAT(MAX(t0.c43)))  WHEN MIN(TOTAL(COUNT(*))) THEN x'' ELSE AVG(AVG(MIN(t0.c43))) END) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CAST((('0.7845085838163727') BETWEEN (rt0.c3) AND (rt0.c1)) AS BLOB)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST((('0.7845085838163727') BETWEEN (rt0.c3) AND (rt0.c1)) AS BLOB)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST((('0.7845085838163727') BETWEEN (rt0.c3) AND (rt0.c1)) AS BLOB)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT v0.c0, t0.c43, t0.c0 FROM t0 CROSS JOIN v0 ON ((((t0.c43 IN ())))>=((CASE WHEN t0.c43 THEN NULL END)));
SELECT DISTINCT v0.c0, t0.c43, t0.c0 FROM t0 CROSS JOIN v0 ON ((((t0.c43 IN ())))>=((CASE WHEN t0.c43 THEN NULL END))) WHERE (((((v0.c0) NOT BETWEEN ('529256162') AND (t0.c0)))&(((t0.c0) IS TRUE)))) UNION SELECT DISTINCT v0.c0, t0.c43, t0.c0 FROM t0 CROSS JOIN v0 ON ((((t0.c43 IN ())))>=((CASE WHEN t0.c43 THEN NULL END))) WHERE ((NOT (((((v0.c0) NOT BETWEEN ('529256162') AND (t0.c0)))&(((t0.c0) IS TRUE)))))) UNION SELECT DISTINCT v0.c0, t0.c43, t0.c0 FROM t0 CROSS JOIN v0 ON ((((t0.c43 IN ())))>=((CASE WHEN t0.c43 THEN NULL END))) WHERE (((((((v0.c0) NOT BETWEEN ('529256162') AND (t0.c0)))&(((t0.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT v0.c0, t0.c43, t0.c0 FROM t0 CROSS JOIN v0 ON ((((t0.c43 IN ())))>=((CASE WHEN t0.c43 THEN NULL END)));
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END COLLATE BINARY) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, vt0 WHERE ((NOT (CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END COLLATE BINARY))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END COLLATE BINARY) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT ALL vt0.c1, rt0.c3, v0.c0 FROM t0, rt0, vt0 INDEXED BY i4, v0 GROUP BY vt0.c1, rt0.c3, v0.c0;
SELECT vt0.c1, v0.c0, t0.c43, t0.c0, vt0.c0 FROM vt0, t0, v0;
SELECT vt0.c1, v0.c0, t0.c43, t0.c0, vt0.c0 FROM vt0, t0, v0 WHERE (((((t0.c43)!=(t0.c0)))&(t0.c43 COLLATE BINARY))) UNION ALL SELECT ALL vt0.c1, v0.c0, t0.c43, t0.c0, vt0.c0 FROM vt0, t0, v0 WHERE ((NOT (((((t0.c43)<>(t0.c0)))&(t0.c43 COLLATE BINARY))))) UNION ALL SELECT vt0.c1, v0.c0, t0.c43, t0.c0, vt0.c0 FROM vt0, t0, v0 WHERE (((((((t0.c43)<>(t0.c0)))&(t0.c43 COLLATE BINARY))) ISNULL));
SELECT vt0.c1, v0.c0, t0.c43, t0.c0, vt0.c0 FROM vt0, t0, v0;
SELECT DISTINCT v0.c0 FROM t0, v0;
SELECT DISTINCT v0.c0 FROM t0, v0 WHERE (((((v0.c0 IN (v0.c0))))=((MIN(NULL, t0.c43, t0.c0, v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM t0, v0 WHERE ((NOT (((((v0.c0 IN (v0.c0))))=((MIN(NULL, t0.c43, t0.c0, v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM t0, v0 WHERE (((((((v0.c0 IN (v0.c0))))==((MIN(NULL, t0.c43, t0.c0, v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM t0, v0;
SELECT ALL vt0.c1, rt0.c1, vt0.c0, t0.c43, rt0.c0, t0.c0, rt0.c3 FROM rt0, t0, vt0, v0 GROUP BY vt0.c1, rt0.c1, vt0.c0, t0.c43, rt0.c0, t0.c0, rt0.c3;
SELECT vt0.c1, rt0.c1, vt0.c0, t0.c43, rt0.c0, t0.c0, rt0.c3 FROM rt0, t0, vt0, v0 WHERE (rt0.c2) GROUP BY vt0.c1, rt0.c1, vt0.c0, t0.c43, rt0.c0, t0.c0, rt0.c3 UNION SELECT vt0.c1, rt0.c1, vt0.c0, t0.c43, rt0.c0, t0.c0, rt0.c3 FROM rt0, t0, vt0, v0 WHERE ((NOT (rt0.c2))) GROUP BY vt0.c1, rt0.c1, vt0.c0, t0.c43, rt0.c0, t0.c0, rt0.c3 UNION SELECT vt0.c1, rt0.c1, vt0.c0, t0.c43, rt0.c0, t0.c0, rt0.c3 FROM rt0, t0, vt0, v0 WHERE (((rt0.c2) ISNULL)) GROUP BY vt0.c1, rt0.c1, vt0.c0, t0.c43, rt0.c0, t0.c0, rt0.c3;
SELECT ALL vt0.c1, rt0.c1, vt0.c0, t0.c43, rt0.c0, t0.c0, rt0.c3 FROM rt0, t0, vt0, v0 GROUP BY vt0.c1, rt0.c1, vt0.c0, t0.c43, rt0.c0, t0.c0, rt0.c3;
SELECT ALL vt0.c1 FROM vt0, t0, v0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, t0, v0 GROUP BY vt0.c1 HAVING GROUP_CONCAT(CASE WHEN MIN(SUM(t0.c0)) THEN vt0.c1 WHEN TOTAL(t0.c0) THEN TOTAL(MAX(AVG(SUM(MAX(NULL))))) WHEN x'ef3f' THEN AVG(t0.c0) ELSE vt0.c0 END) UNION ALL SELECT vt0.c1 FROM vt0, t0, v0 GROUP BY vt0.c1 HAVING (NOT (GROUP_CONCAT(CASE WHEN MIN(SUM(t0.c0)) THEN vt0.c1 WHEN TOTAL(t0.c0) THEN TOTAL(MAX(AVG(SUM(MAX(NULL))))) WHEN x'ef3f' THEN AVG(t0.c0) ELSE vt0.c0 END))) UNION ALL SELECT ALL vt0.c1 FROM vt0, t0, v0 GROUP BY vt0.c1 HAVING ((GROUP_CONCAT(CASE WHEN MIN(SUM(t0.c0)) THEN vt0.c1 WHEN TOTAL(t0.c0) THEN TOTAL(MAX(AVG(SUM(MAX(NULL))))) WHEN x'ef3f' THEN AVG(t0.c0) ELSE vt0.c0 END)) ISNULL);
SELECT * FROM vt0, rt0, v0;
SELECT * FROM vt0, rt0, v0 WHERE (((((vt0.c1)OR('1e500')))AND(vt0.c1)) COLLATE BINARY) UNION ALL SELECT * FROM vt0, rt0, v0 WHERE ((NOT (((((vt0.c1)OR('1e500')))AND(vt0.c1)) COLLATE BINARY))) UNION ALL SELECT * FROM vt0, rt0, v0 WHERE (((((((vt0.c1)OR('1e500')))AND(vt0.c1)) COLLATE BINARY) ISNULL));
SELECT * FROM vt0, rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, t0.c0, v0.c0, rt0.c3, vt0.c0 FROM rt0, t0 RIGHT OUTER JOIN v0 ON ((((rt0.c0)<=(NULL))) IS FALSE) CROSS JOIN vt0 ON NULL;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, t0.c0, v0.c0, rt0.c3, vt0.c0 FROM rt0, t0 RIGHT OUTER JOIN v0 ON ((((rt0.c0)<=(NULL))) IS FALSE) CROSS JOIN vt0 ON NULL WHERE (ABS(DISTINCT x'')) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, t0.c0, v0.c0, rt0.c3, vt0.c0 FROM rt0, t0 RIGHT OUTER JOIN v0 ON ((((rt0.c0)<=(NULL))) IS FALSE) CROSS JOIN vt0 ON NULL WHERE ((NOT (ABS(DISTINCT x'')))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, t0.c0, v0.c0, rt0.c3, vt0.c0 FROM rt0, t0 RIGHT OUTER JOIN v0 ON ((((rt0.c0)<=(NULL))) IS FALSE) CROSS JOIN vt0 ON NULL WHERE (((ABS(DISTINCT x'')) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, t0.c0, v0.c0, rt0.c3, vt0.c0 FROM rt0, t0 RIGHT OUTER JOIN v0 ON ((((rt0.c0)<=(NULL))) IS FALSE) CROSS JOIN vt0 ON NULL;
SELECT ALL rt0.c0, vt0.c1, rt0.c3, rt0.c1, rt0.c2 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c0, vt0.c1, rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c0, vt0.c1, rt0.c3, rt0.c1, rt0.c2 FROM vt0 NATURAL JOIN rt0 WHERE (CAST(((((rt0.c1)OR(vt0.c0)))OR(vt0.c1)) AS TEXT)) GROUP BY rt0.c0, vt0.c1, rt0.c3, rt0.c1, rt0.c2 UNION SELECT rt0.c0, vt0.c1, rt0.c3, rt0.c1, rt0.c2 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (CAST(((((rt0.c1)OR(vt0.c0)))OR(vt0.c1)) AS TEXT)))) GROUP BY rt0.c0, vt0.c1, rt0.c3, rt0.c1, rt0.c2 UNION SELECT rt0.c0, vt0.c1, rt0.c3, rt0.c1, rt0.c2 FROM vt0 NATURAL JOIN rt0 WHERE (((CAST(((((rt0.c1)OR(vt0.c0)))OR(vt0.c1)) AS TEXT)) ISNULL)) GROUP BY rt0.c0, vt0.c1, rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt0.c1, rt0.c3, rt0.c1, rt0.c2 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c0, vt0.c1, rt0.c3, rt0.c1, rt0.c2;
SELECT ALL t0.c43 FROM t0 GROUP BY t0.c43;
SELECT t0.c43 FROM t0 GROUP BY t0.c43 HAVING AVG(TOTAL(t0.c43)) UNION ALL SELECT t0.c43 FROM t0 GROUP BY t0.c43 HAVING (NOT (AVG(TOTAL(t0.c43)))) UNION ALL SELECT t0.c43 FROM t0 GROUP BY t0.c43 HAVING ((AVG(TOTAL(t0.c43))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((((~ (v0.c0)))||(v0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((~ (v0.c0)))||(v0.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((~ (v0.c0)))||(v0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE ((TRIM(t0.c43) IN ((((t0.c0, t0.c43, t0.c43))<((t0.c0, t0.c43, v0.c0)))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT ((TRIM(t0.c43) IN ((((t0.c0, t0.c43, t0.c43))<((t0.c0, t0.c43, v0.c0)))))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((((TRIM(t0.c43) IN ((((t0.c0, t0.c43, t0.c43))<((t0.c0, t0.c43, v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT ALL rt0.c1, rt0.c3, t0.c43, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c3, t0.c43, rt0.c2;
SELECT ALL rt0.c1, rt0.c3, t0.c43, rt0.c2 FROM rt0, t0 WHERE (CASE ((rt0.c1) BETWEEN (t0.c0) AND (rt0.c0))  WHEN rt0.c0 THEN CASE rt0.c2  WHEN 0.9863800147858323 THEN rt0.c3 WHEN t0.c0 THEN t0.c0 WHEN x'' THEN rt0.c1 ELSE t0.c43 END ELSE (((rt0.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c2))<>((rt0.c1, t0.c0, rt0.c0, rt0.c1, t0.c43))) END) GROUP BY rt0.c1, rt0.c3, t0.c43, rt0.c2 UNION SELECT rt0.c1, rt0.c3, t0.c43, rt0.c2 FROM rt0, t0 WHERE ((NOT (CASE ((rt0.c1) BETWEEN (t0.c0) AND (rt0.c0))  WHEN rt0.c0 THEN CASE rt0.c2  WHEN 0.9863800147858323 THEN rt0.c3 WHEN t0.c0 THEN t0.c0 WHEN x'' THEN rt0.c1 ELSE t0.c43 END ELSE (((rt0.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c2))!=((rt0.c1, t0.c0, rt0.c0, rt0.c1, t0.c43))) END))) GROUP BY rt0.c1, rt0.c3, t0.c43, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c3, t0.c43, rt0.c2 FROM rt0, t0 WHERE (((CASE ((rt0.c1) BETWEEN (t0.c0) AND (rt0.c0))  WHEN rt0.c0 THEN CASE rt0.c2  WHEN 0.9863800147858323 THEN rt0.c3 WHEN t0.c0 THEN t0.c0 WHEN x'' THEN rt0.c1 ELSE t0.c43 END ELSE (((rt0.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c2))!=((rt0.c1, t0.c0, rt0.c0, rt0.c1, t0.c43))) END) ISNULL)) GROUP BY rt0.c1, rt0.c3, t0.c43, rt0.c2;
SELECT ALL rt0.c1, rt0.c3, t0.c43, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c3, t0.c43, rt0.c2;
SELECT ALL rt0.c3 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c3 HAVING COUNT(CAST(MIN(AVG(COUNT(*))) AS REAL)) UNION ALL SELECT rt0.c3 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c3 HAVING (NOT (COUNT(CAST(MIN(AVG(COUNT(*))) AS REAL)))) UNION ALL SELECT ALL rt0.c3 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c3 HAVING ((COUNT(CAST(MIN(AVG(COUNT(*))) AS REAL))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((NULLIF(vt0.c1, 0.08527933239232832))AND(((((vt0.c0)OR('0.6956513473634464')))AND(vt0.c1)))))AND(((vt0.c0) NOT NULL)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((NULLIF(vt0.c1, 0.08527933239232832))AND(((((vt0.c0)OR('0.6956513473634464')))AND(vt0.c1)))))AND(((vt0.c0) NOT NULL)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((NULLIF(vt0.c1, 0.08527933239232832))AND(((((vt0.c0)OR('0.6956513473634464')))AND(vt0.c1)))))AND(((vt0.c0) NOT NULL)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.c1) IS FALSE) THEN LIKELIHOOD(rt0.c1, 0.5534529360220466) END CROSS JOIN v0 ON (((rt0.c2, vt0.c1, rt0.c3)) NOT BETWEEN ((((rt0.c0)<<('-396040783')), t0.c43, '2062456304')) AND ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE t0.c43 END, LIKELIHOOD(DISTINCT rt0.c0, 0.985693339347051), rt0.c2))) INNER JOIN t0 ON 0.8882285141332943;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.c1) IS FALSE) THEN LIKELIHOOD(rt0.c1, 0.5534529360220466) END CROSS JOIN v0 ON (((rt0.c2, vt0.c1, rt0.c3)) NOT BETWEEN ((((rt0.c0)<<('-396040783')), t0.c43, '2062456304')) AND ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE t0.c43 END, LIKELIHOOD(DISTINCT rt0.c0, 0.985693339347051), rt0.c2))) INNER JOIN t0 ON 0.8882285141332943 WHERE (CAST(CAST(vt0.c0 AS REAL) AS INTEGER)) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.c1) IS FALSE) THEN LIKELIHOOD(rt0.c1, 0.5534529360220466) END CROSS JOIN v0 ON (((rt0.c2, vt0.c1, rt0.c3)) NOT BETWEEN ((((rt0.c0)<<('-396040783')), t0.c43, '2062456304')) AND ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE t0.c43 END, LIKELIHOOD(DISTINCT rt0.c0, 0.985693339347051), rt0.c2))) INNER JOIN t0 ON 0.8882285141332943 WHERE ((NOT (CAST(CAST(vt0.c0 AS REAL) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.c1) IS FALSE) THEN LIKELIHOOD(rt0.c1, 0.5534529360220466) END CROSS JOIN v0 ON (((rt0.c2, vt0.c1, rt0.c3)) NOT BETWEEN ((((rt0.c0)<<('-396040783')), t0.c43, '2062456304')) AND ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE t0.c43 END, LIKELIHOOD(DISTINCT rt0.c0, 0.985693339347051), rt0.c2))) INNER JOIN t0 ON 0.8882285141332943 WHERE (((CAST(CAST(vt0.c0 AS REAL) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.c1) IS FALSE) THEN LIKELIHOOD(rt0.c1, 0.5534529360220466) END CROSS JOIN v0 ON (((rt0.c2, vt0.c1, rt0.c3)) NOT BETWEEN ((((rt0.c0)<<('-396040783')), t0.c43, '2062456304')) AND ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE t0.c43 END, LIKELIHOOD(DISTINCT rt0.c0, 0.985693339347051), rt0.c2))) INNER JOIN t0 ON 0.8882285141332943;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt0, v0, rt0, t0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt0, v0, rt0, t0 WHERE ((CAST(vt0.c0 AS REAL) IN ())) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt0, v0, rt0, t0 WHERE ((NOT ((CAST(vt0.c0 AS REAL) IN ())))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt0, v0, rt0, t0 WHERE ((((CAST(vt0.c0 AS REAL) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt0, v0, rt0, t0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL t0.c43, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY t0.c43, vt0.c1, t0.c0;
SELECT t0.c43, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY t0.c43, vt0.c1, t0.c0 HAVING CAST(MIN(MAX(COUNT(MIN(vt0.c0)))) AS NUMERIC) UNION ALL SELECT ALL t0.c43, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY t0.c43, vt0.c1, t0.c0 HAVING (NOT (CAST(MIN(MAX(COUNT(MIN(vt0.c0)))) AS NUMERIC))) UNION ALL SELECT ALL t0.c43, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY t0.c43, vt0.c1, t0.c0 HAVING ((CAST(MIN(MAX(COUNT(MIN(vt0.c0)))) AS NUMERIC)) ISNULL);
SELECT rt0.c3, rt0.c2, t0.c43, vt0.c0, rt0.c1, v0.c0, t0.c0, vt0.c1, rt0.c0 FROM vt0 INNER JOIN rt0 ON CAST(UNLIKELY(rt0.c3) AS NUMERIC) FULL OUTER JOIN t0 ON (((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((rt0.c0 COLLATE NOCASE, (~ (vt0.c1)), (((rt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c1))))) AND (((((rt0.c3, rt0.c3, t0.c43))>((rt0.c3, 0xffffffffbb242a92, rt0.c3))), t0.c43, (t0.c0 IN ('', v0.c0))))) FULL OUTER JOIN v0 ON (((NULL IN ())) NOT NULL);
SELECT DISTINCT v0.c0, t0.c0, rt0.c2, rt0.c0, rt0.c3 FROM rt0, t0, v0;
SELECT DISTINCT v0.c0, t0.c0, rt0.c2, rt0.c0, rt0.c3 FROM rt0, t0, v0 WHERE ((- ((~ (t0.c0))))) UNION SELECT DISTINCT v0.c0, t0.c0, rt0.c2, rt0.c0, rt0.c3 FROM rt0, t0, v0 WHERE ((NOT ((- ((~ (t0.c0))))))) UNION SELECT DISTINCT v0.c0, t0.c0, rt0.c2, rt0.c0, rt0.c3 FROM rt0, t0, v0 WHERE ((((- ((~ (t0.c0))))) ISNULL));
SELECT DISTINCT v0.c0, t0.c0, rt0.c2, rt0.c0, rt0.c3 FROM rt0, t0, v0;
SELECT ALL rt0.c3, v0.c0 FROM v0, vt0 NOT INDEXED, rt0, t0 GROUP BY rt0.c3, v0.c0;
SELECT ALL rt0.c3, v0.c0 FROM v0, vt0, rt0, t0 WHERE ((((0.46136229153200636, (rt0.c2 IN ()), (~ (rt0.c0))))==((((NULL)*(vt0.c0)), t0.c0, CASE WHEN vt0.c0 THEN x'' WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))) GROUP BY rt0.c3, v0.c0 UNION SELECT ALL rt0.c3, v0.c0 FROM v0, vt0, rt0, t0 WHERE ((NOT ((((0.46136229153200636, (rt0.c2 IN ()), (~ (rt0.c0))))=((((NULL)*(vt0.c0)), t0.c0, CASE WHEN vt0.c0 THEN x'' WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))))) GROUP BY rt0.c3, v0.c0 UNION SELECT ALL rt0.c3, v0.c0 FROM v0, vt0, rt0 NOT INDEXED, t0 WHERE ((((((0.46136229153200636, (rt0.c2 IN ()), (~ (rt0.c0))))=((((NULL)*(vt0.c0)), t0.c0, CASE WHEN vt0.c0 THEN x'' WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))) ISNULL)) GROUP BY rt0.c3, v0.c0;
SELECT ALL rt0.c3, v0.c0 FROM v0, vt0 NOT INDEXED, rt0, t0 GROUP BY rt0.c3, v0.c0;
SELECT ALL v0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON CASE WHEN (+ ('')) THEN (rt0.c3 IN ()) ELSE ((rt0.c3)||(rt0.c3)) END GROUP BY v0.c0, rt0.c1;
SELECT v0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON CASE WHEN (+ ('')) THEN (rt0.c3 IN ()) ELSE ((rt0.c3)||(rt0.c3)) END GROUP BY v0.c0, rt0.c1 HAVING MAX(((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))) UNION ALL SELECT v0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON CASE WHEN (+ ('')) THEN (rt0.c3 IN ()) ELSE ((rt0.c3)||(rt0.c3)) END GROUP BY v0.c0, rt0.c1 HAVING (NOT (MAX(((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))))) UNION ALL SELECT v0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON CASE WHEN (+ ('')) THEN (rt0.c3 IN ()) ELSE ((rt0.c3)||(rt0.c3)) END GROUP BY v0.c0, rt0.c1 HAVING ((MAX(((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))) ISNULL);
SELECT ALL v0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON CASE WHEN (+ ('')) THEN (rt0.c3 IN ()) ELSE ((rt0.c3)||(rt0.c3)) END GROUP BY v0.c0, rt0.c1;
SELECT v0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON CASE WHEN (+ ('')) THEN (rt0.c3 IN ()) ELSE ((rt0.c3)||(rt0.c3)) END GROUP BY v0.c0, rt0.c1 HAVING MAX(((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))) UNION ALL SELECT v0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON CASE WHEN (+ ('')) THEN (rt0.c3 IN ()) ELSE ((rt0.c3)||(rt0.c3)) END GROUP BY v0.c0, rt0.c1 HAVING (NOT (MAX(((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))))) UNION ALL SELECT v0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON CASE WHEN (+ ('')) THEN (rt0.c3 IN ()) ELSE ((rt0.c3)||(rt0.c3)) END GROUP BY v0.c0, rt0.c1 HAVING ((MAX(((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))) ISNULL);
SELECT ALL v0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON CASE WHEN (+ ('')) THEN (rt0.c3 IN ()) ELSE ((rt0.c3)||(rt0.c3)) END GROUP BY v0.c0, rt0.c1;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((((t0.c0)AND(((t0.c43)==(t0.c43)))))AND(LIKELY(DISTINCT t0.c43)))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((t0.c0)AND(((t0.c43)=(t0.c43)))))AND(LIKELY(DISTINCT t0.c43)))))) UNION ALL SELECT * FROM t0 WHERE (((((((t0.c0)AND(((t0.c43)=(t0.c43)))))AND(LIKELY(DISTINCT t0.c43)))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c1)OR(vt0.c1)))&(CASE WHEN vt0.c1 THEN vt0.c0 END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c1)OR(vt0.c1)))&(CASE WHEN vt0.c1 THEN vt0.c0 END))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))&(CASE WHEN vt0.c1 THEN vt0.c0 END))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c2, t0.c43 FROM vt0, t0, rt0 GROUP BY rt0.c2, t0.c43;
SELECT rt0.c2, t0.c43 FROM vt0, t0, rt0 WHERE ((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))))>=((((t0.c0)>(rt0.c3)))))) GROUP BY rt0.c2, t0.c43 UNION SELECT rt0.c2, t0.c43 FROM vt0, t0, rt0 WHERE ((NOT ((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))))>=((((t0.c0)>(rt0.c3)))))))) GROUP BY rt0.c2, t0.c43 UNION SELECT ALL rt0.c2, t0.c43 FROM vt0, t0, rt0 WHERE ((((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))))>=((((t0.c0)>(rt0.c3)))))) ISNULL)) GROUP BY rt0.c2, t0.c43;
SELECT ALL rt0.c2, t0.c43 FROM vt0, t0, rt0 GROUP BY rt0.c2, t0.c43;
SELECT t0.c43, vt0.c0, rt0.c2, t0.c0, rt0.c3, rt0.c0, rt0.c1 FROM t0, rt0, vt0 GROUP BY t0.c43, vt0.c0, rt0.c2, t0.c0, rt0.c3, rt0.c0, rt0.c1;
SELECT t0.c43, vt0.c0, rt0.c2, t0.c0, rt0.c3, rt0.c0, rt0.c1 FROM t0, rt0, vt0 GROUP BY t0.c43, vt0.c0, rt0.c2, t0.c0, rt0.c3, rt0.c0, rt0.c1 HAVING ((((0.25439023332131494)AND(rt0.c0)))AND(GROUP_CONCAT(COUNT(t0.c43)))) UNION ALL SELECT ALL t0.c43, vt0.c0, rt0.c2, t0.c0, rt0.c3, rt0.c0, rt0.c1 FROM t0 NOT INDEXED, rt0, vt0 GROUP BY t0.c43, vt0.c0, rt0.c2, t0.c0, rt0.c3, rt0.c0, rt0.c1 HAVING (NOT (((((0.25439023332131494)AND(rt0.c0)))AND(GROUP_CONCAT(COUNT(t0.c43)))))) UNION ALL SELECT ALL t0.c43, vt0.c0, rt0.c2, t0.c0, rt0.c3, rt0.c0, rt0.c1 FROM t0, rt0, vt0 GROUP BY t0.c43, vt0.c0, rt0.c2, t0.c0, rt0.c3, rt0.c0, rt0.c1 HAVING ((((((0.25439023332131494)AND(rt0.c0)))AND(GROUP_CONCAT(COUNT(t0.c43))))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((t0.c0) NOT NULL) COLLATE BINARY) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((t0.c0) NOT NULL) COLLATE BINARY))) UNION ALL SELECT * FROM t0 WHERE (((((t0.c0) NOT NULL) COLLATE BINARY) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM v0, rt0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM v0, rt0 NATURAL JOIN vt0 WHERE ((((+ (rt0.c1))) IS FALSE)) UNION SELECT DISTINCT * FROM v0, rt0 NATURAL JOIN vt0 WHERE ((NOT ((((+ (rt0.c1))) IS FALSE)))) UNION SELECT DISTINCT * FROM v0, rt0 NATURAL JOIN vt0 WHERE ((((((+ (rt0.c1))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM v0, rt0 NATURAL JOIN vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((ABS(DISTINCT v0.c0))GLOB(CAST(v0.c0 AS INTEGER)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((ABS(DISTINCT v0.c0))GLOB(CAST(v0.c0 AS INTEGER)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((ABS(DISTINCT v0.c0))GLOB(CAST(v0.c0 AS INTEGER)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c0 FROM v0, t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM v0, t0, vt0 GROUP BY t0.c0 HAVING MIN(MIN(MIN(MIN(t0.c43)))) UNION ALL SELECT t0.c0 FROM v0, t0, vt0 GROUP BY t0.c0 HAVING (NOT (MIN(MIN(MIN(MIN(t0.c43)))))) UNION ALL SELECT t0.c0 FROM v0, t0, vt0 GROUP BY t0.c0 HAVING ((MIN(MIN(MIN(MIN(t0.c43))))) ISNULL);
SELECT ALL rt0.c0, rt0.c3, rt0.c1, v0.c0, vt0.c1 FROM rt0, v0, t0, vt0;
SELECT rt0.c0, rt0.c3, rt0.c1, v0.c0, vt0.c1 FROM rt0, v0, t0, vt0 WHERE (CAST((NOT (rt0.c1)) AS INTEGER)) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c1, v0.c0, vt0.c1 FROM rt0, v0, t0, vt0 WHERE ((NOT (CAST((NOT (rt0.c1)) AS INTEGER)))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1, v0.c0, vt0.c1 FROM rt0, v0, t0, vt0 WHERE (((CAST((NOT (rt0.c1)) AS INTEGER)) ISNULL));
SELECT ALL rt0.c0, rt0.c3, rt0.c1, v0.c0, vt0.c1 FROM rt0, v0, t0, vt0;
SELECT DISTINCT vt0.c0 FROM rt0, vt0, t0, v0;
SELECT DISTINCT vt0.c0 FROM rt0, vt0, t0, v0 WHERE ((((((t0.c43)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) NOT BETWEEN ((rt0.c3 IN ())) AND ((v0.c0 IN ())))) UNION SELECT DISTINCT vt0.c0 FROM rt0, vt0, t0, v0 WHERE ((NOT ((((((t0.c43)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) NOT BETWEEN ((rt0.c3 IN ())) AND ((v0.c0 IN ())))))) UNION SELECT DISTINCT vt0.c0 FROM rt0, vt0, t0, v0 WHERE ((((((((t0.c43)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) NOT BETWEEN ((rt0.c3 IN ())) AND ((v0.c0 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0 FROM rt0, vt0, t0, v0;
SELECT ALL v0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3, rt0.c0, t0.c43 FROM rt0, v0, t0 GROUP BY v0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3, rt0.c0, t0.c43;
SELECT v0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3, rt0.c0, t0.c43 FROM rt0, v0, t0 WHERE (((CASE v0.c0  WHEN t0.c43 THEN rt0.c1 WHEN t0.c0 THEN t0.c43 WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN 0.457100704287305 WHEN rt0.c1 THEN t0.c43 END) NOT BETWEEN (((v0.c0)IS(rt0.c1))) AND ((t0.c43 IN (rt0.c0))))) GROUP BY v0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3, rt0.c0, t0.c43 UNION SELECT ALL v0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3, rt0.c0, t0.c43 FROM rt0, v0, t0 WHERE ((NOT (((CASE v0.c0  WHEN t0.c43 THEN rt0.c1 WHEN t0.c0 THEN t0.c43 WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN 0.457100704287305 WHEN rt0.c1 THEN t0.c43 END) NOT BETWEEN (((v0.c0)IS(rt0.c1))) AND ((t0.c43 IN (rt0.c0))))))) GROUP BY v0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3, rt0.c0, t0.c43 UNION SELECT v0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3, rt0.c0, t0.c43 FROM rt0, v0, t0 WHERE (((((CASE v0.c0  WHEN t0.c43 THEN rt0.c1 WHEN t0.c0 THEN t0.c43 WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN 0.457100704287305 WHEN rt0.c1 THEN t0.c43 END) NOT BETWEEN (((v0.c0)IS(rt0.c1))) AND ((t0.c43 IN (rt0.c0))))) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3, rt0.c0, t0.c43;
SELECT ALL v0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3, rt0.c0, t0.c43 FROM rt0, v0, t0 GROUP BY v0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3, rt0.c0, t0.c43;
SELECT t0.c0, vt0.c1, v0.c0, t0.c43, rt0.c3, rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM v0, rt0 LEFT OUTER JOIN t0 ON ((highlight(vt0.c0, v0.c0, t0.c43, rt0.c3)) IS FALSE) FULL OUTER JOIN vt0 ON UNLIKELY(DISTINCT rt0.c0) COLLATE RTRIM GROUP BY t0.c0, vt0.c1, v0.c0, t0.c43, rt0.c3, rt0.c0, rt0.c1, vt0.c0, rt0.c2;
SELECT t0.c43, t0.c0, v0.c0, rt0.c1, vt0.c1, rt0.c3, rt0.c0 FROM v0, t0 INDEXED BY i4, rt0, vt0;
SELECT ALL t0.c43, t0.c0, v0.c0, rt0.c1, vt0.c1, rt0.c3, rt0.c0 FROM v0, t0 INDEXED BY i4, rt0, vt0 WHERE (SQLITE_COMPILEOPTION_GET('d2')) UNION ALL SELECT t0.c43, t0.c0, v0.c0, rt0.c1, vt0.c1, rt0.c3, rt0.c0 FROM v0, t0 INDEXED BY i4, rt0, vt0 WHERE ((NOT (SQLITE_COMPILEOPTION_GET('d2')))) UNION ALL SELECT ALL t0.c43, t0.c0, v0.c0, rt0.c1, vt0.c1, rt0.c3, rt0.c0 FROM v0, t0 INDEXED BY i4, rt0, vt0 WHERE (((SQLITE_COMPILEOPTION_GET('d2')) ISNULL));
SELECT t0.c43, t0.c0, v0.c0, rt0.c1, vt0.c1, rt0.c3, rt0.c0 FROM v0, t0 INDEXED BY i4, rt0, vt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC))%(((v0.c0) IS FALSE)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS NUMERIC))%(((v0.c0) IS FALSE)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS NUMERIC))%(((v0.c0) IS FALSE)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0, vt0.c1, t0.c0, v0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0, v0.c0;
SELECT ALL vt0.c0, vt0.c1, t0.c0, v0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0, v0.c0 HAVING MAX(MIN(t0.c0) COLLATE BINARY) UNION ALL SELECT ALL vt0.c0, vt0.c1, t0.c0, v0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0, v0.c0 HAVING (NOT (MAX(MIN(t0.c0) COLLATE BINARY))) UNION ALL SELECT vt0.c0, vt0.c1, t0.c0, v0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0, v0.c0 HAVING ((MAX(MIN(t0.c0) COLLATE BINARY)) ISNULL);
SELECT ALL MAX(((SUBSTR(rt0.c3, rt0.c3))<((((rt0.c0))==((v0.c0)))))) FROM v0, vt0, t0, rt0 ORDER BY (+ (vt0.c1)), (((((+ (vt0.c0)))AND(rt0.c1)))OR(((t0.c43)>>(rt0.c0)))) DESC  NULLS LAST;
SELECT rt0.c3 FROM rt0, v0, vt0;
SELECT ALL rt0.c3 FROM rt0, v0, vt0 WHERE (((((((vt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, vt0.c0, vt0.c0)) AND ((rt0.c0, vt0.c1, rt0.c1)))))<=((((vt0.c0) NOT NULL))))) UNION ALL SELECT rt0.c3 FROM rt0, v0, vt0 WHERE ((NOT (((((((vt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, vt0.c0, vt0.c0)) AND ((rt0.c0, vt0.c1, rt0.c1)))))<=((((vt0.c0) NOT NULL))))))) UNION ALL SELECT rt0.c3 FROM rt0, v0, vt0 WHERE (((((((((vt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, vt0.c0, vt0.c0)) AND ((rt0.c0, vt0.c1, rt0.c1)))))<=((((vt0.c0) NOT NULL))))) ISNULL));
SELECT rt0.c3 FROM rt0, v0, vt0;
SELECT DISTINCT rt0.c3, t0.c0, rt0.c0, rt0.c1, rt0.c2, t0.c43 FROM v0, t0, rt0;
SELECT DISTINCT rt0.c3, t0.c0, rt0.c0, rt0.c1, rt0.c2, t0.c43 FROM v0, t0, rt0 WHERE (((x'') NOT BETWEEN (((t0.c0)%(t0.c0))) AND (((NULL) BETWEEN (rt0.c0) AND (t0.c0))))) UNION SELECT DISTINCT rt0.c3, t0.c0, rt0.c0, rt0.c1, rt0.c2, t0.c43 FROM v0, t0, rt0 WHERE ((NOT (((x'') NOT BETWEEN (((t0.c0)%(t0.c0))) AND (((NULL) BETWEEN (rt0.c0) AND (t0.c0))))))) UNION SELECT DISTINCT rt0.c3, t0.c0, rt0.c0, rt0.c1, rt0.c2, t0.c43 FROM v0, t0, rt0 WHERE (((((x'') NOT BETWEEN (((t0.c0)%(t0.c0))) AND (((NULL) BETWEEN (rt0.c0) AND (t0.c0))))) ISNULL));
SELECT DISTINCT rt0.c3, t0.c0, rt0.c0, rt0.c1, rt0.c2, t0.c43 FROM v0, t0, rt0;
SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE ((((UNLIKELY(NULL)))>((x'')))) GROUP BY rt0.c0, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT ((((UNLIKELY(NULL)))>((x'')))))) GROUP BY rt0.c0, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE ((((((UNLIKELY(NULL)))>((x'')))) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c2, rt0.c3, v0.c0, t0.c0 FROM v0, rt0, t0, vt0 GROUP BY rt0.c2, rt0.c3, v0.c0, t0.c0;
SELECT rt0.c2, rt0.c3, v0.c0, t0.c0 FROM v0, rt0, t0, vt0 GROUP BY rt0.c2, rt0.c3, v0.c0, t0.c0 HAVING COUNT(GROUP_CONCAT(TOTAL(COUNT(*)))) UNION ALL SELECT ALL rt0.c2, rt0.c3, v0.c0, t0.c0 FROM v0, rt0, t0, vt0 GROUP BY rt0.c2, rt0.c3, v0.c0, t0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(TOTAL(COUNT(*)))))) UNION ALL SELECT ALL rt0.c2, rt0.c3, v0.c0, t0.c0 FROM v0, rt0, t0, vt0 GROUP BY rt0.c2, rt0.c3, v0.c0, t0.c0 HAVING ((COUNT(GROUP_CONCAT(TOTAL(COUNT(*))))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((CAST(-850091616 AS TEXT))%(json(v0.c0)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((CAST(-850091616 AS TEXT))%(json(v0.c0)))))) UNION ALL SELECT * FROM v0 WHERE (((((CAST(-850091616 AS TEXT))%(json(v0.c0)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0, t0, rt0;
SELECT DISTINCT * FROM v0, t0, rt0 WHERE (((t0.c0 COLLATE NOCASE) ISNULL)) UNION SELECT DISTINCT * FROM v0, t0, rt0 WHERE ((NOT (((t0.c0 COLLATE NOCASE) ISNULL)))) UNION SELECT DISTINCT * FROM v0, t0, rt0 WHERE (((((t0.c0 COLLATE NOCASE) ISNULL)) ISNULL));
SELECT DISTINCT * FROM v0, t0, rt0;
SELECT ALL t0.c0, v0.c0 FROM t0, vt0 NATURAL JOIN v0 GROUP BY t0.c0, v0.c0;
SELECT ALL t0.c0, v0.c0 FROM t0, vt0 NATURAL JOIN v0 WHERE (((t0.c0 IN ()) IN (((vt0.c0) NOT BETWEEN (297349790) AND (v0.c0))))) GROUP BY t0.c0, v0.c0 UNION SELECT t0.c0, v0.c0 FROM t0, vt0 NATURAL JOIN v0 WHERE ((NOT (((t0.c0 IN ()) IN (((vt0.c0) NOT BETWEEN (297349790) AND (v0.c0))))))) GROUP BY t0.c0, v0.c0 UNION SELECT ALL t0.c0, v0.c0 FROM t0, vt0 NATURAL JOIN v0 WHERE (((((t0.c0 IN ()) IN (((vt0.c0) NOT BETWEEN (297349790) AND (v0.c0))))) ISNULL)) GROUP BY t0.c0, v0.c0;
SELECT ALL t0.c0, v0.c0 FROM t0, vt0 NATURAL JOIN v0 GROUP BY t0.c0, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(AVG(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(AVG(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(AVG(v0.c0))) ISNULL);
SELECT ALL vt0.c1, vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON t0.c0 COLLATE NOCASE COLLATE RTRIM;
SELECT ALL vt0.c1, vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON t0.c0 COLLATE NOCASE COLLATE RTRIM WHERE ('M뀊') UNION ALL SELECT vt0.c1, vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON t0.c0 COLLATE NOCASE COLLATE RTRIM WHERE ((NOT ('M뀊'))) UNION ALL SELECT vt0.c1, vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON t0.c0 COLLATE NOCASE COLLATE RTRIM WHERE ((('M뀊') ISNULL));
SELECT ALL vt0.c1, vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON t0.c0 COLLATE NOCASE COLLATE RTRIM;
SELECT DISTINCT t0.c0, t0.c43 FROM t0;
SELECT DISTINCT t0.c0, t0.c43 FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))OR(t0.c0)))GLOB(((((t0.c0)OR(t0.c0)))AND(t0.c43))))) UNION SELECT DISTINCT t0.c0, t0.c43 FROM t0 WHERE ((NOT (((((((t0.c0)AND(t0.c0)))OR(t0.c0)))GLOB(((((t0.c0)OR(t0.c0)))AND(t0.c43))))))) UNION SELECT DISTINCT t0.c0, t0.c43 FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))GLOB(((((t0.c0)OR(t0.c0)))AND(t0.c43))))) ISNULL));
SELECT DISTINCT t0.c0, t0.c43 FROM t0;
SELECT ALL t0.c43, rt0.c1, vt0.c0, v0.c0, t0.c0 FROM v0, rt0, vt0, t0 GROUP BY t0.c43, rt0.c1, vt0.c0, v0.c0, t0.c0;
SELECT t0.c43, rt0.c1, vt0.c0, v0.c0, t0.c0 FROM v0, rt0, vt0, t0 WHERE (CASE ((NULL)IS NOT(rt0.c0))  WHEN ((((vt0.c1)OR(rt0.c2)))AND(rt0.c0)) THEN ((t0.c43) NOT BETWEEN (t0.c0) AND (vt0.c1)) END) GROUP BY t0.c43, rt0.c1, vt0.c0, v0.c0, t0.c0 UNION SELECT t0.c43, rt0.c1, vt0.c0, v0.c0, t0.c0 FROM v0, rt0, vt0, t0 WHERE ((NOT (CASE ((NULL)IS NOT(rt0.c0))  WHEN ((((vt0.c1)OR(rt0.c2)))AND(rt0.c0)) THEN ((t0.c43) NOT BETWEEN (t0.c0) AND (vt0.c1)) END))) GROUP BY t0.c43, rt0.c1, vt0.c0, v0.c0, t0.c0 UNION SELECT ALL t0.c43, rt0.c1, vt0.c0, v0.c0, t0.c0 FROM v0, rt0, vt0, t0 WHERE (((CASE ((NULL)IS NOT(rt0.c0))  WHEN ((((vt0.c1)OR(rt0.c2)))AND(rt0.c0)) THEN ((t0.c43) NOT BETWEEN (t0.c0) AND (vt0.c1)) END) ISNULL)) GROUP BY t0.c43, rt0.c1, vt0.c0, v0.c0, t0.c0;
SELECT ALL t0.c43, rt0.c1, vt0.c0, v0.c0, t0.c0 FROM v0, rt0, vt0, t0 GROUP BY t0.c43, rt0.c1, vt0.c0, v0.c0, t0.c0;
SELECT ALL t0.c43, vt0.c0, vt0.c1, t0.c0 FROM v0, t0, vt0 GROUP BY t0.c43, vt0.c0, vt0.c1, t0.c0;
SELECT t0.c43, vt0.c0, vt0.c1, t0.c0 FROM v0, t0, vt0 GROUP BY t0.c43, vt0.c0, vt0.c1, t0.c0 HAVING CAST(((t0.c0) BETWEEN (MAX(vt0.c0)) AND (vt0.c1)) AS NUMERIC) UNION ALL SELECT ALL t0.c43, vt0.c0, vt0.c1, t0.c0 FROM v0, t0, vt0 GROUP BY t0.c43, vt0.c0, vt0.c1, t0.c0 HAVING (NOT (CAST(((t0.c0) BETWEEN (MAX(vt0.c0)) AND (vt0.c1)) AS NUMERIC))) UNION ALL SELECT ALL t0.c43, vt0.c0, vt0.c1, t0.c0 FROM v0, t0, vt0 GROUP BY t0.c43, vt0.c0, vt0.c1, t0.c0 HAVING ((CAST(((t0.c0) BETWEEN (MAX(vt0.c0)) AND (vt0.c1)) AS NUMERIC)) ISNULL);
SELECT ALL t0.c43, vt0.c0, vt0.c1, t0.c0 FROM v0, t0, vt0 GROUP BY t0.c43, vt0.c0, vt0.c1, t0.c0;
SELECT t0.c43, vt0.c0, vt0.c1, t0.c0 FROM v0, t0, vt0 GROUP BY t0.c43, vt0.c0, vt0.c1, t0.c0 HAVING CAST(((t0.c0) BETWEEN (MAX(vt0.c0)) AND (vt0.c1)) AS NUMERIC) UNION ALL SELECT ALL t0.c43, vt0.c0, vt0.c1, t0.c0 FROM v0, t0, vt0 GROUP BY t0.c43, vt0.c0, vt0.c1, t0.c0 HAVING (NOT (CAST(((t0.c0) BETWEEN (MAX(vt0.c0)) AND (vt0.c1)) AS NUMERIC))) UNION ALL SELECT ALL t0.c43, vt0.c0, vt0.c1, t0.c0 FROM v0, t0, vt0 GROUP BY t0.c43, vt0.c0, vt0.c1, t0.c0 HAVING ((CAST(((t0.c0) BETWEEN (MAX(vt0.c0)) AND (vt0.c1)) AS NUMERIC)) ISNULL);
SELECT ALL t0.c43, vt0.c0, vt0.c1, t0.c0 FROM v0, t0, vt0 GROUP BY t0.c43, vt0.c0, vt0.c1, t0.c0;
SELECT ALL * FROM vt0, t0, v0;
SELECT ALL * FROM vt0, t0 NOT INDEXED, v0 WHERE (((v0.c0) ISNULL) COLLATE NOCASE) UNION ALL SELECT * FROM vt0, t0, v0 WHERE ((NOT (((v0.c0) ISNULL) COLLATE NOCASE))) UNION ALL SELECT * FROM vt0, t0, v0 WHERE (((((v0.c0) ISNULL) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt0, t0, v0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON rt0.c0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON rt0.c0 WHERE (((((((rt0.c0)GLOB(rt0.c0)))AND(NULL)))AND(0Xffffffffd88dfcff))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON rt0.c0 WHERE ((NOT (((((((rt0.c0)GLOB(rt0.c0)))AND(NULL)))AND(0Xffffffffd88dfcff))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON rt0.c0 WHERE (((((((((rt0.c0)GLOB(rt0.c0)))AND(NULL)))AND(0Xffffffffd88dfcff))) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON rt0.c0;
SELECT ALL rt0.c3, vt0.c0, rt0.c0, vt0.c1, t0.c43 FROM vt0, rt0, t0 GROUP BY rt0.c3, vt0.c0, rt0.c0, vt0.c1, t0.c43;
SELECT ALL rt0.c3, vt0.c0, rt0.c0, vt0.c1, t0.c43 FROM vt0, rt0, t0 WHERE (((((((((((rt0.c2)AND('-1813694385')))OR(vt0.c1)))AND((('-1165464635') BETWEEN (rt0.c1) AND (rt0.c2)))))OR(((('1850094869'))<((vt0.c0))))))OR(((rt0.c3)<(t0.c0))))) GROUP BY rt0.c3, vt0.c0, rt0.c0, vt0.c1, t0.c43 UNION SELECT ALL rt0.c3, vt0.c0, rt0.c0, vt0.c1, t0.c43 FROM vt0, rt0, t0 WHERE ((NOT (((((((((((rt0.c2)AND('-1813694385')))OR(vt0.c1)))AND((('-1165464635') BETWEEN (rt0.c1) AND (rt0.c2)))))OR(((('1850094869'))<((vt0.c0))))))OR(((rt0.c3)<(t0.c0))))))) GROUP BY rt0.c3, vt0.c0, rt0.c0, vt0.c1, t0.c43 UNION SELECT rt0.c3, vt0.c0, rt0.c0, vt0.c1, t0.c43 FROM vt0, rt0, t0 WHERE (((((((((((((rt0.c2)AND('-1813694385')))OR(vt0.c1)))AND((('-1165464635') BETWEEN (rt0.c1) AND (rt0.c2)))))OR(((('1850094869'))<((vt0.c0))))))OR(((rt0.c3)<(t0.c0))))) ISNULL)) GROUP BY rt0.c3, vt0.c0, rt0.c0, vt0.c1, t0.c43;
SELECT ALL rt0.c3, vt0.c0, rt0.c0, vt0.c1, t0.c43 FROM vt0, rt0, t0 GROUP BY rt0.c3, vt0.c0, rt0.c0, vt0.c1, t0.c43;
SELECT vt0.c1, t0.c0 FROM rt0, vt0 INDEXED BY i4, v0, t0 GROUP BY vt0.c1, t0.c0;
SELECT * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE (LIKELY(v0.c0 COLLATE BINARY)) UNION ALL SELECT * FROM v0, t0 WHERE ((NOT (LIKELY(v0.c0 COLLATE BINARY)))) UNION ALL SELECT ALL * FROM v0, t0 WHERE (((LIKELY(v0.c0 COLLATE BINARY)) ISNULL));
SELECT * FROM v0, t0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) NOTNULL)) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) NOTNULL)))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT t0.c0, rt0.c3, v0.c0, t0.c43, rt0.c0, rt0.c2, rt0.c1 FROM t0 CROSS JOIN rt0 ON TRIM((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) LEFT OUTER JOIN v0 ON ((((rt0.c1) BETWEEN (t0.c0) AND (t0.c43)))>(NULL COLLATE RTRIM)) GROUP BY t0.c0, rt0.c3, v0.c0, t0.c43, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL t0.c0, rt0.c3, v0.c0, t0.c43, rt0.c0, rt0.c2, rt0.c1 FROM t0 CROSS JOIN rt0 ON TRIM((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) LEFT OUTER JOIN v0 ON ((((rt0.c1) BETWEEN (t0.c0) AND (t0.c43)))>(NULL COLLATE RTRIM)) WHERE ((~ (CAST(rt0.c0 AS TEXT)))) GROUP BY t0.c0, rt0.c3, v0.c0, t0.c43, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL t0.c0, rt0.c3, v0.c0, t0.c43, rt0.c0, rt0.c2, rt0.c1 FROM t0 CROSS JOIN rt0 ON TRIM((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) LEFT OUTER JOIN v0 ON ((((rt0.c1) BETWEEN (t0.c0) AND (t0.c43)))>(NULL COLLATE RTRIM)) WHERE ((NOT ((~ (CAST(rt0.c0 AS TEXT)))))) GROUP BY t0.c0, rt0.c3, v0.c0, t0.c43, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL t0.c0, rt0.c3, v0.c0, t0.c43, rt0.c0, rt0.c2, rt0.c1 FROM t0 CROSS JOIN rt0 ON TRIM((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) LEFT OUTER JOIN v0 ON ((((rt0.c1) BETWEEN (t0.c0) AND (t0.c43)))>(NULL COLLATE RTRIM)) WHERE ((((~ (CAST(rt0.c0 AS TEXT)))) ISNULL)) GROUP BY t0.c0, rt0.c3, v0.c0, t0.c43, rt0.c0, rt0.c2, rt0.c1;
SELECT t0.c0, rt0.c3, v0.c0, t0.c43, rt0.c0, rt0.c2, rt0.c1 FROM t0 CROSS JOIN rt0 ON TRIM((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) LEFT OUTER JOIN v0 ON ((((rt0.c1) BETWEEN (t0.c0) AND (t0.c43)))>(NULL COLLATE RTRIM)) GROUP BY t0.c0, rt0.c3, v0.c0, t0.c43, rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c3, vt0.c1 FROM v0 CROSS JOIN rt0 ON ((((rt0.c3)*(rt0.c2))) NOT BETWEEN (rt0.c1) AND (((((vt0.c0)AND(t0.c0)))AND(NULL)))) FULL OUTER JOIN t0 ON CASE rt0.c1  WHEN v0.c0 THEN rt0.c3 ELSE vt0.c1 END COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((((NULL) IS FALSE))IS NOT((((t0.c0, t0.c0, rt0.c3)) BETWEEN ((x'fe27', vt0.c1, rt0.c3)) AND ((0X1f8bcee2, rt0.c2, vt0.c0))))) GROUP BY rt0.c3, vt0.c1;
SELECT TOTAL(rt0.c1) FROM t0, rt0, vt0 ORDER BY (((t0.c43 COLLATE RTRIM))!=((rt0.c1)))  NULLS LAST, CASE ((rt0.c2) ISNULL)  WHEN ((t0.c43)>>(rt0.c1)) THEN ((vt0.c1)<<(rt0.c3)) WHEN (t0.c0 IN ()) THEN TRIM(rt0.c1) WHEN ((rt0.c1)LIKE(rt0.c1)) THEN NULL END  NULLS LAST;
SELECT t0.c0, v0.c0, t0.c43 FROM t0, v0;
SELECT t0.c0, v0.c0, t0.c43 FROM t0, v0 WHERE (CAST(x'1005' AS TEXT)) UNION ALL SELECT ALL t0.c0, v0.c0, t0.c43 FROM t0, v0 WHERE ((NOT (CAST(x'1005' AS TEXT)))) UNION ALL SELECT t0.c0, v0.c0, t0.c43 FROM t0, v0 WHERE (((CAST(x'1005' AS TEXT)) ISNULL));
SELECT t0.c0, v0.c0, t0.c43 FROM t0, v0;
SELECT DISTINCT * FROM t0, vt0, rt0;
SELECT DISTINCT * FROM t0, vt0, rt0 WHERE ((((((t0.c43)) NOT BETWEEN ((t0.c43)) AND ((rt0.c1))))<((rt0.c0 IN (rt0.c2))))) UNION SELECT DISTINCT * FROM t0, vt0, rt0 WHERE ((NOT ((((((t0.c43)) NOT BETWEEN ((t0.c43)) AND ((rt0.c1))))<((rt0.c0 IN (rt0.c2))))))) UNION SELECT DISTINCT * FROM t0, vt0, rt0 WHERE ((((((((t0.c43)) NOT BETWEEN ((t0.c43)) AND ((rt0.c1))))<((rt0.c0 IN (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0, rt0;
SELECT vt0.c0, rt0.c2, t0.c43, v0.c0, vt0.c1, t0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)IS(rt0.c3)))+(((((((((v0.c0)OR(v0.c0)))AND(rt0.c2)))OR(rt0.c0)))AND(t0.c43)))) FULL OUTER JOIN v0 ON ((x'') BETWEEN (CASE WHEN '-251792287' THEN '!' WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN t0.c0 END) AND ((rt0.c1 IN ()))) CROSS JOIN t0 ON (~ (vt0.c1)) COLLATE BINARY GROUP BY vt0.c0, rt0.c2, t0.c43, v0.c0, vt0.c1, t0.c0;
SELECT v0.c0, rt0.c3, rt0.c1, t0.c43, rt0.c0 FROM rt0, t0 FULL OUTER JOIN v0 ON ((LIKELY(DISTINCT t0.c0))IS(((rt0.c2) BETWEEN ('543162431') AND (rt0.c3)))) GROUP BY v0.c0, rt0.c3, rt0.c1, t0.c43, rt0.c0;
SELECT ALL v0.c0, rt0.c3, rt0.c1, t0.c43, rt0.c0 FROM rt0, t0 FULL OUTER JOIN v0 ON ((LIKELY(DISTINCT t0.c0))IS(((rt0.c2) BETWEEN ('543162431') AND (rt0.c3)))) GROUP BY v0.c0, rt0.c3, rt0.c1, t0.c43, rt0.c0 HAVING CASE WHEN MAX(COUNT(v0.c0)) THEN SUM(rt0.c2) ELSE MIN(t0.c43) END UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c1, t0.c43, rt0.c0 FROM rt0, t0 FULL OUTER JOIN v0 ON ((LIKELY(DISTINCT t0.c0))IS(((rt0.c2) BETWEEN ('543162431') AND (rt0.c3)))) GROUP BY v0.c0, rt0.c3, rt0.c1, t0.c43, rt0.c0 HAVING (NOT (CASE WHEN MAX(COUNT(v0.c0)) THEN SUM(rt0.c2) ELSE MIN(t0.c43) END)) UNION ALL SELECT v0.c0, rt0.c3, rt0.c1, t0.c43, rt0.c0 FROM rt0, t0 FULL OUTER JOIN v0 ON ((LIKELY(DISTINCT t0.c0))IS(((rt0.c2) BETWEEN ('543162431') AND (rt0.c3)))) GROUP BY v0.c0, rt0.c3, rt0.c1, t0.c43, rt0.c0 HAVING ((CASE WHEN MAX(COUNT(v0.c0)) THEN SUM(rt0.c2) ELSE MIN(t0.c43) END) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE ((NOT (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT ((NOT (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0))))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((((NOT (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((~ (t0.c0)))!=((t0.c0 IN ())))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((~ (t0.c0)))!=((t0.c0 IN ())))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((~ (t0.c0)))!=((t0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt0.c1, rt0.c0 FROM vt0, rt0 NATURAL JOIN t0 GROUP BY vt0.c1, rt0.c0;
SELECT vt0.c1, rt0.c0 FROM vt0, rt0 NATURAL JOIN t0 WHERE (CASE ((rt0.c3)OR(rt0.c1))  WHEN ((((rt0.c0)OR(rt0.c3)))OR(rt0.c1)) THEN (NOT (t0.c0)) END) GROUP BY vt0.c1, rt0.c0 UNION SELECT ALL vt0.c1, rt0.c0 FROM vt0, rt0 NATURAL JOIN t0 WHERE ((NOT (CASE ((rt0.c3)OR(rt0.c1))  WHEN ((((rt0.c0)OR(rt0.c3)))OR(rt0.c1)) THEN (NOT (t0.c0)) END))) GROUP BY vt0.c1, rt0.c0 UNION SELECT vt0.c1, rt0.c0 FROM vt0, rt0 NATURAL JOIN t0 WHERE (((CASE ((rt0.c3)OR(rt0.c1))  WHEN ((((rt0.c0)OR(rt0.c3)))OR(rt0.c1)) THEN (NOT (t0.c0)) END) ISNULL)) GROUP BY vt0.c1, rt0.c0;
SELECT ALL vt0.c1, rt0.c0 FROM vt0, rt0 NATURAL JOIN t0 GROUP BY vt0.c1, rt0.c0;
SELECT t0.c0, rt0.c2, rt0.c1, vt0.c0, t0.c43, v0.c0, rt0.c3, rt0.c0, vt0.c1 FROM vt0, t0, rt0, v0 GROUP BY t0.c0, rt0.c2, rt0.c1, vt0.c0, t0.c43, v0.c0, rt0.c3, rt0.c0, vt0.c1;
SELECT ALL t0.c0, rt0.c2, rt0.c1, vt0.c0, t0.c43, v0.c0, rt0.c3, rt0.c0, vt0.c1 FROM vt0, t0, rt0, v0 GROUP BY t0.c0, rt0.c2, rt0.c1, vt0.c0, t0.c43, v0.c0, rt0.c3, rt0.c0, vt0.c1 HAVING GROUP_CONCAT((rt0.c0 IN ())) UNION ALL SELECT t0.c0, rt0.c2, rt0.c1, vt0.c0, t0.c43, v0.c0, rt0.c3, rt0.c0, vt0.c1 FROM vt0 NOT INDEXED, t0, rt0, v0 GROUP BY t0.c0, rt0.c2, rt0.c1, vt0.c0, t0.c43, v0.c0, rt0.c3, rt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT((rt0.c0 IN ())))) UNION ALL SELECT t0.c0, rt0.c2, rt0.c1, vt0.c0, t0.c43, v0.c0, rt0.c3, rt0.c0, vt0.c1 FROM vt0, t0, rt0, v0 GROUP BY t0.c0, rt0.c2, rt0.c1, vt0.c0, t0.c43, v0.c0, rt0.c3, rt0.c0, vt0.c1 HAVING ((GROUP_CONCAT((rt0.c0 IN ()))) ISNULL);
SELECT t0.c0, rt0.c2, rt0.c1, vt0.c0, t0.c43, v0.c0, rt0.c3, rt0.c0, vt0.c1 FROM vt0, t0, rt0, v0 GROUP BY t0.c0, rt0.c2, rt0.c1, vt0.c0, t0.c43, v0.c0, rt0.c3, rt0.c0, vt0.c1;
SELECT ALL t0.c0, rt0.c2, rt0.c1, vt0.c0, t0.c43, v0.c0, rt0.c3, rt0.c0, vt0.c1 FROM vt0, t0, rt0, v0 GROUP BY t0.c0, rt0.c2, rt0.c1, vt0.c0, t0.c43, v0.c0, rt0.c3, rt0.c0, vt0.c1 HAVING GROUP_CONCAT((rt0.c0 IN ())) UNION ALL SELECT t0.c0, rt0.c2, rt0.c1, vt0.c0, t0.c43, v0.c0, rt0.c3, rt0.c0, vt0.c1 FROM vt0 NOT INDEXED, t0, rt0, v0 GROUP BY t0.c0, rt0.c2, rt0.c1, vt0.c0, t0.c43, v0.c0, rt0.c3, rt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT((rt0.c0 IN ())))) UNION ALL SELECT t0.c0, rt0.c2, rt0.c1, vt0.c0, t0.c43, v0.c0, rt0.c3, rt0.c0, vt0.c1 FROM vt0, t0, rt0, v0 GROUP BY t0.c0, rt0.c2, rt0.c1, vt0.c0, t0.c43, v0.c0, rt0.c3, rt0.c0, vt0.c1 HAVING ((GROUP_CONCAT((rt0.c0 IN ()))) ISNULL);
SELECT t0.c0, rt0.c2, rt0.c1, vt0.c0, t0.c43, v0.c0, rt0.c3, rt0.c0, vt0.c1 FROM vt0, t0, rt0, v0 GROUP BY t0.c0, rt0.c2, rt0.c1, vt0.c0, t0.c43, v0.c0, rt0.c3, rt0.c0, vt0.c1;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0)) NOT BETWEEN (((v0.c0 IN ('')))) AND ((v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN (((v0.c0 IN ('')))) AND ((v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN (((v0.c0 IN ('')))) AND ((v0.c0)))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT t0.c0, v0.c0, rt0.c2 FROM vt0, rt0, t0, v0;
SELECT DISTINCT t0.c0, v0.c0, rt0.c2 FROM vt0 NOT INDEXED, rt0, t0, v0 WHERE ((((rt0.c2)) BETWEEN ((x'6e76')) AND ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END)))) UNION SELECT DISTINCT t0.c0, v0.c0, rt0.c2 FROM vt0, rt0, t0, v0 WHERE ((NOT ((((rt0.c2)) BETWEEN ((x'6e76')) AND ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END)))))) UNION SELECT DISTINCT t0.c0, v0.c0, rt0.c2 FROM vt0, rt0, t0, v0 WHERE ((((((rt0.c2)) BETWEEN ((x'6e76')) AND ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END)))) ISNULL));
SELECT DISTINCT t0.c0, v0.c0, rt0.c2 FROM vt0, rt0, t0, v0;
SELECT rt0.c0, rt0.c3, t0.c43, vt0.c1, vt0.c0, t0.c0, rt0.c2 FROM t0, rt0, vt0 GROUP BY rt0.c0, rt0.c3, t0.c43, vt0.c1, vt0.c0, t0.c0, rt0.c2;
SELECT rt0.c0, rt0.c3, t0.c43, vt0.c1, vt0.c0, t0.c0, rt0.c2 FROM t0, rt0, vt0 WHERE (((((t0.c43) NOT BETWEEN (vt0.c0) AND (rt0.c1)))|(((((rt0.c3)AND(t0.c43)))OR(vt0.c0))))) GROUP BY rt0.c0, rt0.c3, t0.c43, vt0.c1, vt0.c0, t0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c3, t0.c43, vt0.c1, vt0.c0, t0.c0, rt0.c2 FROM t0, rt0, vt0 WHERE ((NOT (((((t0.c43) NOT BETWEEN (vt0.c0) AND (rt0.c1)))|(((((rt0.c3)AND(t0.c43)))OR(vt0.c0))))))) GROUP BY rt0.c0, rt0.c3, t0.c43, vt0.c1, vt0.c0, t0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c3, t0.c43, vt0.c1, vt0.c0, t0.c0, rt0.c2 FROM t0, rt0, vt0 WHERE (((((((t0.c43) NOT BETWEEN (vt0.c0) AND (rt0.c1)))|(((((rt0.c3)AND(t0.c43)))OR(vt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c3, t0.c43, vt0.c1, vt0.c0, t0.c0, rt0.c2;
SELECT rt0.c0, rt0.c3, t0.c43, vt0.c1, vt0.c0, t0.c0, rt0.c2 FROM t0, rt0, vt0 GROUP BY rt0.c0, rt0.c3, t0.c43, vt0.c1, vt0.c0, t0.c0, rt0.c2;
SELECT rt0.c3, vt0.c1, rt0.c1, t0.c0, vt0.c0 FROM vt0 CROSS JOIN v0 ON (- (((((((((rt0.c1)OR(rt0.c3)))AND(vt0.c0)))AND(t0.c43)))OR(rt0.c0)))) RIGHT OUTER JOIN rt0 ON ((((rt0.c0) NOT NULL)) BETWEEN (((rt0.c3) BETWEEN (v0.c0) AND (rt0.c2))) AND (x'')) RIGHT OUTER JOIN t0 ON CASE WHEN ((t0.c0) NOT NULL) THEN (NOT (t0.c0)) WHEN (vt0.c0 IN ()) THEN CASE WHEN rt0.c1 THEN t0.c0 ELSE rt0.c3 END WHEN (rt0.c0 IN ()) THEN ((((vt0.c0)AND(t0.c43)))AND(vt0.c1)) ELSE ((((rt0.c2)AND(vt0.c1)))OR(rt0.c3)) END GROUP BY rt0.c3, vt0.c1, rt0.c1, t0.c0, vt0.c0;
SELECT ALL * FROM t0, vt0, rt0;
SELECT ALL * FROM t0, vt0, rt0 WHERE (rt0.c2) UNION ALL SELECT * FROM t0, vt0, rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT * FROM t0, vt0, rt0 WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM t0, vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1)*(vt0.c1))))=((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c1)*(vt0.c1))))==((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c1)*(vt0.c1))))==((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE ('-152022145') GROUP BY rt0.c2, rt0.c3, rt0.c1 UNION SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT ('-152022145'))) GROUP BY rt0.c2, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE ((('-152022145') ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (- (GROUP_CONCAT(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((- (GROUP_CONCAT(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((- (GROUP_CONCAT(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (- (GROUP_CONCAT(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((- (GROUP_CONCAT(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((- (GROUP_CONCAT(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0, t0, rt0;
SELECT ALL * FROM v0, t0, rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c0 ELSE t0.c0 END) NOT BETWEEN (((rt0.c2)IS(v0.c0))) AND (((rt0.c1)|(t0.c43))))) UNION ALL SELECT * FROM v0, t0, rt0 WHERE ((NOT (((CASE WHEN rt0.c3 THEN rt0.c0 ELSE t0.c0 END) NOT BETWEEN (((rt0.c2)IS(v0.c0))) AND (((rt0.c1)|(t0.c43))))))) UNION ALL SELECT * FROM v0, t0, rt0 WHERE (((((CASE WHEN rt0.c3 THEN rt0.c0 ELSE t0.c0 END) NOT BETWEEN (((rt0.c2)IS(v0.c0))) AND (((rt0.c1)|(t0.c43))))) ISNULL));
SELECT * FROM v0, t0, rt0;
SELECT DISTINCT * FROM rt0, t0, v0;
SELECT DISTINCT * FROM rt0, t0, v0 WHERE (((((rt0.c3)>>(rt0.c3)))OR(TYPEOF(t0.c0)))) UNION SELECT DISTINCT * FROM rt0, t0, v0 WHERE ((NOT (((((rt0.c3)>>(rt0.c3)))OR(TYPEOF(t0.c0)))))) UNION SELECT DISTINCT * FROM rt0, t0, v0 WHERE (((((((rt0.c3)>>(rt0.c3)))OR(TYPEOF(t0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0, t0, v0;
SELECT rt0.c2, rt0.c3, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c2, rt0.c3, v0.c0;
SELECT ALL rt0.c2, rt0.c3, v0.c0 FROM v0, vt0, rt0 WHERE (rt0.c3) GROUP BY rt0.c2, rt0.c3, v0.c0 UNION SELECT rt0.c2, rt0.c3, v0.c0 FROM v0, vt0, rt0 WHERE ((NOT (rt0.c3))) GROUP BY rt0.c2, rt0.c3, v0.c0 UNION SELECT ALL rt0.c2, rt0.c3, v0.c0 FROM v0, vt0, rt0 WHERE (((rt0.c3) ISNULL)) GROUP BY rt0.c2, rt0.c3, v0.c0;
SELECT rt0.c2, rt0.c3, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c2, rt0.c3, v0.c0;
SELECT rt0.c3 FROM v0 INNER JOIN rt0 ON (((('0.7850183517019191')%(rt0.c3))) NOTNULL) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM v0 INNER JOIN rt0 ON (((('0.7850183517019191')%(rt0.c3))) NOTNULL) GROUP BY rt0.c3 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3 FROM v0 INNER JOIN rt0 ON (((('0.7850183517019191')%(rt0.c3))) NOTNULL) GROUP BY rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c3 FROM v0 INNER JOIN rt0 ON (((('0.7850183517019191')%(rt0.c3))) NOTNULL) GROUP BY rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c3 FROM v0 INNER JOIN rt0 ON (((('0.7850183517019191')%(rt0.c3))) NOTNULL) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM v0 INNER JOIN rt0 ON (((('0.7850183517019191')%(rt0.c3))) NOTNULL) GROUP BY rt0.c3 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3 FROM v0 INNER JOIN rt0 ON (((('0.7850183517019191')%(rt0.c3))) NOTNULL) GROUP BY rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c3 FROM v0 INNER JOIN rt0 ON (((('0.7850183517019191')%(rt0.c3))) NOTNULL) GROUP BY rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c3 FROM v0 INNER JOIN rt0 ON (((('0.7850183517019191')%(rt0.c3))) NOTNULL) GROUP BY rt0.c3;
SELECT ALL vt0.c1, v0.c0, vt0.c0 FROM t0, vt0, v0, rt0;
SELECT vt0.c1, v0.c0, vt0.c0 FROM t0, vt0, v0, rt0 WHERE ((NOT (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3))))) UNION ALL SELECT vt0.c1, v0.c0, vt0.c0 FROM t0, vt0, v0, rt0 WHERE ((NOT ((NOT (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3))))))) UNION ALL SELECT ALL vt0.c1, v0.c0, vt0.c0 FROM t0, vt0, v0, rt0 WHERE ((((NOT (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3))))) ISNULL));
SELECT ALL vt0.c1, v0.c0, vt0.c0 FROM t0, vt0, v0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM v0, rt0, t0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM v0, rt0, t0 WHERE ((~ ((((rt0.c1)) BETWEEN ((t0.c0)) AND ((rt0.c3)))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM v0, rt0, t0 WHERE ((NOT ((~ ((((rt0.c1)) BETWEEN ((t0.c0)) AND ((rt0.c3)))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM v0, rt0, t0 WHERE ((((~ ((((rt0.c1)) BETWEEN ((t0.c0)) AND ((rt0.c3)))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM v0, rt0, t0;
SELECT v0.c0, t0.c43 FROM v0, vt0, t0 GROUP BY v0.c0, t0.c43;
SELECT ALL v0.c0, t0.c43 FROM v0, vt0, t0 WHERE ((~ (vt0.c0))) GROUP BY v0.c0, t0.c43 UNION SELECT v0.c0, t0.c43 FROM v0, vt0, t0 WHERE ((NOT ((~ (vt0.c0))))) GROUP BY v0.c0, t0.c43 UNION SELECT v0.c0, t0.c43 FROM v0, vt0, t0 WHERE ((((~ (vt0.c0))) ISNULL)) GROUP BY v0.c0, t0.c43;
SELECT v0.c0, t0.c43 FROM v0, vt0, t0 GROUP BY v0.c0, t0.c43;
SELECT ALL v0.c0 FROM v0, rt0, t0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt0, t0 GROUP BY v0.c0 HAVING t0.c0 UNION ALL SELECT v0.c0 FROM v0, rt0, t0 GROUP BY v0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0, rt0, t0 GROUP BY v0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0, rt0, t0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt0, t0 GROUP BY v0.c0 HAVING t0.c0 UNION ALL SELECT v0.c0 FROM v0, rt0, t0 GROUP BY v0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0, rt0, t0 GROUP BY v0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0, rt0, t0 GROUP BY v0.c0;
SELECT rt0.c0, t0.c0, rt0.c2, rt0.c1, t0.c43, rt0.c3 FROM rt0, t0;
SELECT ALL rt0.c0, t0.c0, rt0.c2, rt0.c1, t0.c43, rt0.c3 FROM rt0, t0 WHERE (0.30781654888790244) UNION ALL SELECT rt0.c0, t0.c0, rt0.c2, rt0.c1, t0.c43, rt0.c3 FROM rt0, t0 WHERE ((NOT (0.30781654888790244))) UNION ALL SELECT ALL rt0.c0, t0.c0, rt0.c2, rt0.c1, t0.c43, rt0.c3 FROM rt0, t0 WHERE (((0.30781654888790244) ISNULL));
SELECT rt0.c0, t0.c0, rt0.c2, rt0.c1, t0.c43, rt0.c3 FROM rt0, t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)LIKE(v0.c0)))>=(0xfffffffff620e35e))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0)LIKE(v0.c0)))>=(0Xfffffffff620e35e))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0)LIKE(v0.c0)))>=(0xfffffffff620e35e))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c1, rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c3 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c3;
SELECT vt0.c1, rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c3 FROM vt0, rt0 WHERE (CAST(((vt0.c0)>(vt0.c1)) AS BLOB)) GROUP BY vt0.c1, rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c3 UNION SELECT ALL vt0.c1, rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c3 FROM vt0, rt0 WHERE ((NOT (CAST(((vt0.c0)>(vt0.c1)) AS BLOB)))) GROUP BY vt0.c1, rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c3 UNION SELECT ALL vt0.c1, rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c3 FROM vt0, rt0 WHERE (((CAST(((vt0.c0)>(vt0.c1)) AS BLOB)) ISNULL)) GROUP BY vt0.c1, rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c3;
SELECT vt0.c1, rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c3 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c3;
SELECT v0.c0, t0.c43 FROM t0, v0, rt0 GROUP BY v0.c0, t0.c43;
SELECT ALL v0.c0, t0.c43 FROM t0, v0, rt0 GROUP BY v0.c0, t0.c43 HAVING ((MAX(v0.c0)) NOT BETWEEN ((((t0.c0, TOTAL(MIN(COUNT(*))), rt0.c3)) NOT BETWEEN ((rt0.c1, GROUP_CONCAT(COUNT(rt0.c2)), rt0.c3)) AND ((GROUP_CONCAT(rt0.c3), AVG(t0.c0), GROUP_CONCAT(MAX(x'')))))) AND (CAST(TOTAL(rt0.c3) AS BLOB))) UNION ALL SELECT ALL v0.c0, t0.c43 FROM t0, v0, rt0 GROUP BY v0.c0, t0.c43 HAVING (NOT (((MAX(v0.c0)) NOT BETWEEN ((((t0.c0, TOTAL(MIN(COUNT(*))), rt0.c3)) NOT BETWEEN ((rt0.c1, GROUP_CONCAT(COUNT(rt0.c2)), rt0.c3)) AND ((GROUP_CONCAT(rt0.c3), AVG(t0.c0), GROUP_CONCAT(MAX(x'')))))) AND (CAST(TOTAL(rt0.c3) AS BLOB))))) UNION ALL SELECT ALL v0.c0, t0.c43 FROM t0, v0, rt0 GROUP BY v0.c0, t0.c43 HAVING ((((MAX(v0.c0)) NOT BETWEEN ((((t0.c0, TOTAL(MIN(COUNT(*))), rt0.c3)) NOT BETWEEN ((rt0.c1, GROUP_CONCAT(COUNT(rt0.c2)), rt0.c3)) AND ((GROUP_CONCAT(rt0.c3), AVG(t0.c0), GROUP_CONCAT(MAX(x'')))))) AND (CAST(TOTAL(rt0.c3) AS BLOB)))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((1908547547) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((1908547547) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE RTRIM))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((1908547547) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE RTRIM) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM v0, rt0, t0, vt0;
SELECT DISTINCT * FROM v0, rt0, t0, vt0 WHERE ((CASE WHEN rt0.c1 THEN vt0.c1 ELSE vt0.c0 END IN (((t0.c0) BETWEEN (vt0.c1) AND (v0.c0))))) UNION SELECT DISTINCT * FROM v0, rt0, t0, vt0 WHERE ((NOT ((CASE WHEN rt0.c1 THEN vt0.c1 ELSE vt0.c0 END IN (((t0.c0) BETWEEN (vt0.c1) AND (v0.c0))))))) UNION SELECT DISTINCT * FROM v0, rt0, t0, vt0 WHERE ((((CASE WHEN rt0.c1 THEN vt0.c1 ELSE vt0.c0 END IN (((t0.c0) BETWEEN (vt0.c1) AND (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0, t0, vt0;
SELECT ALL vt0.c1 FROM vt0 INDEXED BY i4 GROUP BY vt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SQLITE_VERSION())||(AVG(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((SQLITE_VERSION())||(AVG(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((SQLITE_VERSION())||(AVG(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SQLITE_VERSION())||(AVG(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((SQLITE_VERSION())||(AVG(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((SQLITE_VERSION())||(AVG(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (((((TRIM(DISTINCT t0.c0, t0.c43))OR(((0.8218570130852498)<(t0.c0)))))OR('{\r'))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((TRIM(DISTINCT t0.c0, t0.c43))OR(((0.8218570130852498)<(t0.c0)))))OR('{\r'))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((TRIM(DISTINCT t0.c0, t0.c43))OR(((0.8218570130852498)<(t0.c0)))))OR('{\r'))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN (vt0.c1 IN ()) THEN ((vt0.c1)<=(vt0.c1)) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE WHEN (vt0.c1 IN ()) THEN ((vt0.c1)<=(vt0.c1)) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN (vt0.c1 IN ()) THEN ((vt0.c1)<=(vt0.c1)) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c3, rt0.c0, v0.c0, rt0.c1 FROM v0, t0, rt0 GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, v0.c0, rt0.c1 FROM v0, t0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN (((((t0.c43, rt0.c3, rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((t0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c0))))) AND ((((rt0.c3) NOT NULL))))) GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c0, v0.c0, rt0.c1 FROM v0, t0, rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN (((((t0.c43, rt0.c3, rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((t0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c0))))) AND ((((rt0.c3) NOT NULL))))))) GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c0, v0.c0, rt0.c1 FROM v0, t0, rt0 WHERE ((((((rt0.c1)) NOT BETWEEN (((((t0.c43, rt0.c3, rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((t0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c0))))) AND ((((rt0.c3) NOT NULL))))) ISNULL)) GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c1;
SELECT rt0.c3, rt0.c0, v0.c0, rt0.c1 FROM v0, t0, rt0 GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1 HAVING rt0.c3 UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (rt0.c3)) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1 HAVING ((rt0.c3) ISNULL);
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1 HAVING rt0.c3 UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (rt0.c3)) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1 HAVING ((rt0.c3) ISNULL);
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((~ ((((v0.c0))<>((v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((~ ((((v0.c0))!=((v0.c0)))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((~ ((((v0.c0))!=((v0.c0)))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt0.c3, t0.c43, t0.c0, rt0.c1 FROM t0 INNER JOIN rt0 ON ((((rt0.c0) BETWEEN (rt0.c2) AND ('FZ佰')))<(((t0.c0)&(x''))));
SELECT DISTINCT rt0.c3, t0.c43, t0.c0, rt0.c1 FROM t0 NOT INDEXED INNER JOIN rt0 ON ((((rt0.c0) BETWEEN (rt0.c2) AND ('FZ佰')))<(((t0.c0)&(x'')))) WHERE (TRIM(DISTINCT rt0.c3 COLLATE BINARY)) UNION SELECT DISTINCT rt0.c3, t0.c43, t0.c0, rt0.c1 FROM t0 NOT INDEXED INNER JOIN rt0 ON ((((rt0.c0) BETWEEN (rt0.c2) AND ('FZ佰')))<(((t0.c0)&(x'')))) WHERE ((NOT (TRIM(DISTINCT rt0.c3 COLLATE BINARY)))) UNION SELECT DISTINCT rt0.c3, t0.c43, t0.c0, rt0.c1 FROM t0 INNER JOIN rt0 ON ((((rt0.c0) BETWEEN (rt0.c2) AND ('FZ佰')))<(((t0.c0)&(x'')))) WHERE (((TRIM(DISTINCT rt0.c3 COLLATE BINARY)) ISNULL));
SELECT DISTINCT rt0.c3, t0.c43, t0.c0, rt0.c1 FROM t0 INNER JOIN rt0 ON ((((rt0.c0) BETWEEN (rt0.c2) AND ('FZ佰')))<(((t0.c0)&(x''))));
SELECT ALL vt0.c1, t0.c0, t0.c43, vt0.c0, rt0.c2, rt0.c0, v0.c0, rt0.c3 FROM v0 FULL OUTER JOIN vt0 ON ((((((0.6171788806812722) IS TRUE))OR(((x'') NOT NULL))))AND(((v0.c0) NOT BETWEEN (vt0.c1) AND (t0.c0)))) RIGHT OUTER JOIN rt0 ON ((((CAST(t0.c43 AS REAL))AND(CAST('SZ pS.I' AS TEXT))))AND((~ (rt0.c2)))) CROSS JOIN t0 ON vt0.c0 GROUP BY vt0.c1, t0.c0, t0.c43, vt0.c0, rt0.c2, rt0.c0, v0.c0, rt0.c3;
SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM v0, vt0 GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT v0.c0, vt0.c0, vt0.c1 FROM v0, vt0 GROUP BY v0.c0, vt0.c0, vt0.c1 HAVING ((AVG(SUM(COUNT(*))))<=(((((x'e1ee')OR(vt0.c1)))OR(AVG(vt0.c1))))) UNION ALL SELECT v0.c0, vt0.c0, vt0.c1 FROM v0, vt0 GROUP BY v0.c0, vt0.c0, vt0.c1 HAVING (NOT (((AVG(SUM(COUNT(*))))<=(((((x'e1ee')OR(vt0.c1)))OR(AVG(vt0.c1))))))) UNION ALL SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM v0, vt0 GROUP BY v0.c0, vt0.c0, vt0.c1 HAVING ((((AVG(SUM(COUNT(*))))<=(((((x'e1ee')OR(vt0.c1)))OR(AVG(vt0.c1)))))) ISNULL);
SELECT vt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c3)) NOT BETWEEN ((CAST(v0.c0 AS BLOB))) AND ((((rt0.c3)>>(vt0.c0))))) INNER JOIN vt0 ON (((rt0.c3 IN ()))!=(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3))));
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((((CAST(vt0.c1 AS NUMERIC))AND((NOT (vt0.c0)))))OR((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((((CAST(vt0.c1 AS NUMERIC))AND((NOT (vt0.c0)))))OR((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((((CAST(vt0.c1 AS NUMERIC))AND((NOT (vt0.c0)))))OR((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL v0.c0 FROM t0, vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t0, vt0, v0 WHERE (CASE SQLITE_VERSION()  WHEN CASE WHEN t0.c43 THEN vt0.c0 END THEN CAST(t0.c0 AS BLOB) END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t0, vt0, v0 WHERE ((NOT (CASE SQLITE_VERSION()  WHEN CASE WHEN t0.c43 THEN vt0.c0 END THEN CAST(t0.c0 AS BLOB) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t0, vt0, v0 WHERE (((CASE SQLITE_VERSION()  WHEN CASE WHEN t0.c43 THEN vt0.c0 END THEN CAST(t0.c0 AS BLOB) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0, vt0, v0 GROUP BY v0.c0;
SELECT vt0.c1, t0.c43, vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c1, t0.c43, vt0.c0, t0.c0;
SELECT ALL vt0.c1, t0.c43, vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c1, t0.c43, vt0.c0, t0.c0 HAVING COUNT((NOT (AVG(MAX(COUNT(*)))))) UNION ALL SELECT vt0.c1, t0.c43, vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c1, t0.c43, vt0.c0, t0.c0 HAVING (NOT (COUNT((NOT (AVG(MAX(COUNT(*)))))))) UNION ALL SELECT vt0.c1, t0.c43, vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c1, t0.c43, vt0.c0, t0.c0 HAVING ((COUNT((NOT (AVG(MAX(COUNT(*))))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ('') UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (''))) UNION ALL SELECT ALL * FROM rt0 WHERE ((('') ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt0, v0, rt0, t0;
SELECT DISTINCT * FROM vt0, v0, rt0, t0 WHERE (CAST(((vt0.c0) IS FALSE) AS TEXT)) UNION SELECT DISTINCT * FROM vt0, v0, rt0, t0 WHERE ((NOT (CAST(((vt0.c0) IS FALSE) AS TEXT)))) UNION SELECT DISTINCT * FROM vt0, v0, rt0, t0 WHERE (((CAST(((vt0.c0) IS FALSE) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt0, v0, rt0, t0;
SELECT ALL t0.c43, t0.c0 FROM t0 GROUP BY t0.c43, t0.c0;
SELECT ALL t0.c43, t0.c0 FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c43 ELSE t0.c43 END) NOT BETWEEN (t0.c0) AND (((t0.c43)/(t0.c43))))) GROUP BY t0.c43, t0.c0 UNION SELECT ALL t0.c43, t0.c0 FROM t0 WHERE ((NOT (((CASE WHEN t0.c0 THEN t0.c43 ELSE t0.c43 END) NOT BETWEEN (t0.c0) AND (((t0.c43)/(t0.c43))))))) GROUP BY t0.c43, t0.c0 UNION SELECT t0.c43, t0.c0 FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c43 ELSE t0.c43 END) NOT BETWEEN (t0.c0) AND (((t0.c43)/(t0.c43))))) ISNULL)) GROUP BY t0.c43, t0.c0;
SELECT ALL t0.c43, t0.c0 FROM t0 GROUP BY t0.c43, t0.c0;
SELECT v0.c0, vt0.c1, rt0.c3, rt0.c1, vt0.c0 FROM v0, vt0, rt0 NOT INDEXED GROUP BY v0.c0, vt0.c1, rt0.c3, rt0.c1, vt0.c0;
SELECT v0.c0, vt0.c1, rt0.c3, rt0.c1, vt0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0, vt0.c1, rt0.c3, rt0.c1, vt0.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT v0.c0, vt0.c1, rt0.c3, rt0.c1, vt0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0, vt0.c1, rt0.c3, rt0.c1, vt0.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT v0.c0, vt0.c1, rt0.c3, rt0.c1, vt0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0, vt0.c1, rt0.c3, rt0.c1, vt0.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT MIN(rt0.c2) FROM t0, v0, rt0, vt0;
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (vt0.c1) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((vt0.c1) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (((CAST(v0.c0 AS REAL)) NOTNULL)) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (((CAST(v0.c0 AS REAL)) NOTNULL)))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((((CAST(v0.c0 AS REAL)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM v0, rt0, t0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM v0, rt0, t0 WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (v0.c0)) THEN CAST(t0.c43 AS REAL) WHEN (t0.c43 IN ()) THEN (('bw&Xy-''H')<(rt0.c3)) WHEN ((t0.c0)&(t0.c0)) THEN ((x'') NOT NULL) ELSE ((t0.c43) NOT NULL) END) GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0 UNION SELECT v0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM v0, rt0, t0 WHERE ((NOT (CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (v0.c0)) THEN CAST(t0.c43 AS REAL) WHEN (t0.c43 IN ()) THEN (('bw&Xy-''H')<(rt0.c3)) WHEN ((t0.c0)&(t0.c0)) THEN ((x'') NOT NULL) ELSE ((t0.c43) NOT NULL) END))) GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0 UNION SELECT v0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM v0, rt0, t0 WHERE (((CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (v0.c0)) THEN CAST(t0.c43 AS REAL) WHEN (t0.c43 IN ()) THEN (('bw&Xy-''H')<(rt0.c3)) WHEN ((t0.c0)&(t0.c0)) THEN ((x'') NOT NULL) ELSE ((t0.c43) NOT NULL) END) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM v0, rt0, t0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((((v0.c0)+(v0.c0)))OR(CAST(v0.c0 AS REAL))))AND(CASE WHEN GROUP_CONCAT(v0.c0) THEN GROUP_CONCAT(v0.c0) ELSE v0.c0 END)))AND('0.586691367642503')))OR((COUNT(*) IN ()))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((((((((v0.c0)+(v0.c0)))OR(CAST(v0.c0 AS REAL))))AND(CASE WHEN GROUP_CONCAT(v0.c0) THEN GROUP_CONCAT(v0.c0) ELSE v0.c0 END)))AND('0.586691367642503')))OR((COUNT(*) IN ()))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((((((v0.c0)+(v0.c0)))OR(CAST(v0.c0 AS REAL))))AND(CASE WHEN GROUP_CONCAT(v0.c0) THEN GROUP_CONCAT(v0.c0) ELSE v0.c0 END)))AND('0.586691367642503')))OR((COUNT(*) IN ())))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((((v0.c0)+(v0.c0)))OR(CAST(v0.c0 AS REAL))))AND(CASE WHEN GROUP_CONCAT(v0.c0) THEN GROUP_CONCAT(v0.c0) ELSE v0.c0 END)))AND('0.586691367642503')))OR((COUNT(*) IN ()))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((((((((v0.c0)+(v0.c0)))OR(CAST(v0.c0 AS REAL))))AND(CASE WHEN GROUP_CONCAT(v0.c0) THEN GROUP_CONCAT(v0.c0) ELSE v0.c0 END)))AND('0.586691367642503')))OR((COUNT(*) IN ()))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((((((v0.c0)+(v0.c0)))OR(CAST(v0.c0 AS REAL))))AND(CASE WHEN GROUP_CONCAT(v0.c0) THEN GROUP_CONCAT(v0.c0) ELSE v0.c0 END)))AND('0.586691367642503')))OR((COUNT(*) IN ())))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c0, vt0.c1, t0.c43, vt0.c0 FROM vt0, t0;
SELECT t0.c0, vt0.c1, t0.c43, vt0.c0 FROM vt0, t0 WHERE (IFNULL(DISTINCT t0.c43, vt0.c1) COLLATE NOCASE) UNION ALL SELECT t0.c0, vt0.c1, t0.c43, vt0.c0 FROM vt0, t0 WHERE ((NOT (IFNULL(DISTINCT t0.c43, vt0.c1) COLLATE NOCASE))) UNION ALL SELECT t0.c0, vt0.c1, t0.c43, vt0.c0 FROM vt0, t0 WHERE (((IFNULL(DISTINCT t0.c43, vt0.c1) COLLATE NOCASE) ISNULL));
SELECT t0.c0, vt0.c1, t0.c43, vt0.c0 FROM vt0, t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (-102119975) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (-102119975))) UNION SELECT DISTINCT * FROM v0 WHERE (((-102119975) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t0.c0, v0.c0, rt0.c2 FROM t0, rt0, v0 GROUP BY t0.c0, v0.c0, rt0.c2;
SELECT ALL t0.c0, v0.c0, rt0.c2 FROM t0, rt0, v0 WHERE (((((rt0.c2)>=(rt0.c1))) BETWEEN (((rt0.c2)GLOB(t0.c0))) AND (((rt0.c0) NOT NULL)))) GROUP BY t0.c0, v0.c0, rt0.c2 UNION SELECT t0.c0, v0.c0, rt0.c2 FROM t0, rt0, v0 WHERE ((NOT (((((rt0.c2)>=(rt0.c1))) BETWEEN (((rt0.c2)GLOB(t0.c0))) AND (((rt0.c0) NOT NULL)))))) GROUP BY t0.c0, v0.c0, rt0.c2 UNION SELECT t0.c0, v0.c0, rt0.c2 FROM t0, rt0, v0 WHERE (((((((rt0.c2)>=(rt0.c1))) BETWEEN (((rt0.c2)GLOB(t0.c0))) AND (((rt0.c0) NOT NULL)))) ISNULL)) GROUP BY t0.c0, v0.c0, rt0.c2;
SELECT t0.c0, v0.c0, rt0.c2 FROM t0, rt0, v0 GROUP BY t0.c0, v0.c0, rt0.c2;
SELECT ALL vt0.c0 FROM vt0, t0, v0 CROSS JOIN rt0 ON CASE 0.5679593961000517  WHEN v0.c0 THEN v0.c0 WHEN 170563365 THEN v0.c0 WHEN rt0.c0 THEN vt0.c1 END COLLATE BINARY GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0, v0 CROSS JOIN rt0 ON CASE 0.5679593961000517  WHEN v0.c0 THEN v0.c0 WHEN 170563365 THEN v0.c0 WHEN rt0.c0 THEN vt0.c1 END COLLATE BINARY GROUP BY vt0.c0 HAVING GROUP_CONCAT(rt0.c3 COLLATE BINARY) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0, v0 CROSS JOIN rt0 ON CASE 0.5679593961000517  WHEN v0.c0 THEN v0.c0 WHEN 170563365 THEN v0.c0 WHEN rt0.c0 THEN vt0.c1 END COLLATE BINARY GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(rt0.c3 COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0, v0 CROSS JOIN rt0 ON CASE 0.5679593961000517  WHEN v0.c0 THEN v0.c0 WHEN 170563365 THEN v0.c0 WHEN rt0.c0 THEN vt0.c1 END COLLATE BINARY GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(rt0.c3 COLLATE BINARY)) ISNULL);
SELECT ALL vt0.c0 FROM vt0, t0, v0 CROSS JOIN rt0 ON CASE 0.5679593961000517  WHEN v0.c0 THEN v0.c0 WHEN 170563365 THEN v0.c0 WHEN rt0.c0 THEN vt0.c1 END COLLATE BINARY GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0, v0 CROSS JOIN rt0 ON CASE 0.5679593961000517  WHEN v0.c0 THEN v0.c0 WHEN 170563365 THEN v0.c0 WHEN rt0.c0 THEN vt0.c1 END COLLATE BINARY GROUP BY vt0.c0 HAVING GROUP_CONCAT(rt0.c3 COLLATE BINARY) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0, v0 CROSS JOIN rt0 ON CASE 0.5679593961000517  WHEN v0.c0 THEN v0.c0 WHEN 170563365 THEN v0.c0 WHEN rt0.c0 THEN vt0.c1 END COLLATE BINARY GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(rt0.c3 COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0, v0 CROSS JOIN rt0 ON CASE 0.5679593961000517  WHEN v0.c0 THEN v0.c0 WHEN 170563365 THEN v0.c0 WHEN rt0.c0 THEN vt0.c1 END COLLATE BINARY GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(rt0.c3 COLLATE BINARY)) ISNULL);
SELECT ALL vt0.c0 FROM vt0, t0, v0 CROSS JOIN rt0 ON CASE 0.5679593961000517  WHEN v0.c0 THEN v0.c0 WHEN 170563365 THEN v0.c0 WHEN rt0.c0 THEN vt0.c1 END COLLATE BINARY GROUP BY vt0.c0;
SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c3 COLLATE RTRIM) ISNULL)) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c3 COLLATE RTRIM) ISNULL)))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c3 COLLATE RTRIM) ISNULL)) ISNULL));
SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT DISTINCT * FROM vt0, v0, rt0 WHERE (((x'') BETWEEN ((((vt0.c0, rt0.c1, rt0.c2))>((v0.c0, rt0.c3, rt0.c3)))) AND (((rt0.c2) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE ((NOT (((x'') BETWEEN ((((vt0.c0, rt0.c1, rt0.c2))>((v0.c0, rt0.c3, rt0.c3)))) AND (((rt0.c2) NOTNULL)))))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE (((((x'') BETWEEN ((((vt0.c0, rt0.c1, rt0.c2))>((v0.c0, rt0.c3, rt0.c3)))) AND (((rt0.c2) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (json_valid((vt0.c1 IN ()))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (json_valid((vt0.c1 IN ()))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((json_valid((vt0.c1 IN ()))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((GROUP_CONCAT(MAX(vt0.c0)))*(AVG(COUNT(vt0.c1)))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (((GROUP_CONCAT(MAX(vt0.c0)))*(AVG(COUNT(vt0.c1)))))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((((GROUP_CONCAT(MAX(vt0.c0)))*(AVG(COUNT(vt0.c1))))) ISNULL);
SELECT rt0.c0, rt0.c1, t0.c0 FROM rt0 INNER JOIN t0 ON ((LIKE(rt0.c3, t0.c0))|(CASE t0.c43  WHEN t0.c43 THEN t0.c43 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN 'fU[zr+V' ELSE t0.c0 END));
SELECT ALL rt0.c0, rt0.c1, t0.c0 FROM rt0 INNER JOIN t0 ON ((LIKE(rt0.c3, t0.c0))|(CASE t0.c43  WHEN t0.c43 THEN t0.c43 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN 'fU[zr+V' ELSE t0.c0 END)) WHERE (((((t0.c0) NOT BETWEEN (rt0.c2) AND (t0.c43)))==(((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, t0.c0 FROM rt0 INNER JOIN t0 ON ((LIKE(rt0.c3, t0.c0))|(CASE t0.c43  WHEN t0.c43 THEN t0.c43 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN 'fU[zr+V' ELSE t0.c0 END)) WHERE ((NOT (((((t0.c0) NOT BETWEEN (rt0.c2) AND (t0.c43)))==(((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c0))))))) UNION ALL SELECT rt0.c0, rt0.c1, t0.c0 FROM rt0 INNER JOIN t0 ON ((LIKE(rt0.c3, t0.c0))|(CASE t0.c43  WHEN t0.c43 THEN t0.c43 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN 'fU[zr+V' ELSE t0.c0 END)) WHERE (((((((t0.c0) NOT BETWEEN (rt0.c2) AND (t0.c43)))==(((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c0))))) ISNULL));
SELECT rt0.c0, rt0.c1, t0.c0 FROM rt0 INNER JOIN t0 ON ((LIKE(rt0.c3, t0.c0))|(CASE t0.c43  WHEN t0.c43 THEN t0.c43 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN 'fU[zr+V' ELSE t0.c0 END));
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON x'' LEFT OUTER JOIN v0 ON vt0.c1;
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON x'' LEFT OUTER JOIN v0 ON vt0.c1 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((rt0.c2)LIKE(vt0.c0))) AND (((rt0.c3) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON x'' LEFT OUTER JOIN v0 ON vt0.c1 WHERE ((NOT (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((rt0.c2)LIKE(vt0.c0))) AND (((rt0.c3) NOT NULL)))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON x'' LEFT OUTER JOIN v0 ON vt0.c1 WHERE (((((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((rt0.c2)LIKE(vt0.c0))) AND (((rt0.c3) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON x'' LEFT OUTER JOIN v0 ON vt0.c1;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (0xfffffffff9e7c30d) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (0xfffffffff9e7c30d))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((0xfffffffff9e7c30d) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c0, vt0.c1, v0.c0, vt0.c0, rt0.c3, t0.c43, t0.c0, rt0.c2, rt0.c1 FROM vt0, t0, v0, rt0 GROUP BY rt0.c0, vt0.c1, v0.c0, vt0.c0, rt0.c3, t0.c43, t0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, vt0.c1, v0.c0, vt0.c0, rt0.c3, t0.c43, t0.c0, rt0.c2, rt0.c1 FROM vt0, t0, v0, rt0 GROUP BY rt0.c0, vt0.c1, v0.c0, vt0.c0, rt0.c3, t0.c43, t0.c0, rt0.c2, rt0.c1 HAVING (+ (130797874)) COLLATE RTRIM UNION ALL SELECT rt0.c0, vt0.c1, v0.c0, vt0.c0, rt0.c3, t0.c43, t0.c0, rt0.c2, rt0.c1 FROM vt0, t0, v0, rt0 GROUP BY rt0.c0, vt0.c1, v0.c0, vt0.c0, rt0.c3, t0.c43, t0.c0, rt0.c2, rt0.c1 HAVING (NOT ((+ (130797874)) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c0, vt0.c1, v0.c0, vt0.c0, rt0.c3, t0.c43, t0.c0, rt0.c2, rt0.c1 FROM vt0, t0, v0, rt0 GROUP BY rt0.c0, vt0.c1, v0.c0, vt0.c0, rt0.c3, t0.c43, t0.c0, rt0.c2, rt0.c1 HAVING (((+ (130797874)) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c0, vt0.c1, v0.c0, vt0.c0, rt0.c3, t0.c43, t0.c0, rt0.c2, rt0.c1 FROM vt0, t0, v0, rt0 GROUP BY rt0.c0, vt0.c1, v0.c0, vt0.c0, rt0.c3, t0.c43, t0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, vt0.c1, v0.c0, vt0.c0, rt0.c3, t0.c43, t0.c0, rt0.c2, rt0.c1 FROM vt0, t0, v0, rt0 GROUP BY rt0.c0, vt0.c1, v0.c0, vt0.c0, rt0.c3, t0.c43, t0.c0, rt0.c2, rt0.c1 HAVING (+ (130797874)) COLLATE RTRIM UNION ALL SELECT rt0.c0, vt0.c1, v0.c0, vt0.c0, rt0.c3, t0.c43, t0.c0, rt0.c2, rt0.c1 FROM vt0, t0, v0, rt0 GROUP BY rt0.c0, vt0.c1, v0.c0, vt0.c0, rt0.c3, t0.c43, t0.c0, rt0.c2, rt0.c1 HAVING (NOT ((+ (130797874)) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c0, vt0.c1, v0.c0, vt0.c0, rt0.c3, t0.c43, t0.c0, rt0.c2, rt0.c1 FROM vt0, t0, v0, rt0 GROUP BY rt0.c0, vt0.c1, v0.c0, vt0.c0, rt0.c3, t0.c43, t0.c0, rt0.c2, rt0.c1 HAVING (((+ (130797874)) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c0, vt0.c1, v0.c0, vt0.c0, rt0.c3, t0.c43, t0.c0, rt0.c2, rt0.c1 FROM vt0, t0, v0, rt0 GROUP BY rt0.c0, vt0.c1, v0.c0, vt0.c0, rt0.c3, t0.c43, t0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0 FROM t0, vt0, rt0;
SELECT rt0.c0 FROM t0, vt0, rt0 WHERE ((((((rt0.c3))<((rt0.c3)))) NOTNULL)) UNION ALL SELECT ALL rt0.c0 FROM t0, vt0, rt0 WHERE ((NOT ((((((rt0.c3))<((rt0.c3)))) NOTNULL)))) UNION ALL SELECT rt0.c0 FROM t0, vt0, rt0 WHERE ((((((((rt0.c3))<((rt0.c3)))) NOTNULL)) ISNULL));
SELECT rt0.c0 FROM t0, vt0, rt0;
SELECT DISTINCT * FROM t0, rt0, vt0, v0;
SELECT DISTINCT * FROM t0, rt0, vt0, v0 WHERE (rt0.c3) UNION SELECT DISTINCT * FROM t0, rt0, vt0, v0 WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT * FROM t0, rt0, vt0, v0 WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT * FROM t0, rt0, vt0, v0;
SELECT rt0.c1, rt0.c0, v0.c0, rt0.c3 FROM t0, rt0 RIGHT OUTER JOIN v0 ON (NOT (LIKELIHOOD(DISTINCT rt0.c3, 0.8081954533644207))) GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c3;
SELECT rt0.c1, rt0.c0, v0.c0, rt0.c3 FROM t0, rt0 RIGHT OUTER JOIN v0 ON (NOT (LIKELIHOOD(DISTINCT rt0.c3, 0.8081954533644207))) WHERE ((((((v0.c0, t0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, t0.c0)) AND ((v0.c0, rt0.c3, v0.c0)))) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c3) AND (t0.c43))) AND (load_extension(t0.c43)))) GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c3 UNION SELECT rt0.c1, rt0.c0, v0.c0, rt0.c3 FROM t0, rt0 RIGHT OUTER JOIN v0 ON (NOT (LIKELIHOOD(DISTINCT rt0.c3, 0.8081954533644207))) WHERE ((NOT ((((((v0.c0, t0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, t0.c0)) AND ((v0.c0, rt0.c3, v0.c0)))) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c3) AND (t0.c43))) AND (load_extension(t0.c43)))))) GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c0, v0.c0, rt0.c3 FROM t0, rt0 RIGHT OUTER JOIN v0 ON (NOT (LIKELIHOOD(DISTINCT rt0.c3, 0.8081954533644207))) WHERE ((((((((v0.c0, t0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, t0.c0)) AND ((v0.c0, rt0.c3, v0.c0)))) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c3) AND (t0.c43))) AND (load_extension(t0.c43)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c3;
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING MIN(((((t0.c43)AND(COUNT(v0.c0))))OR(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING (NOT (MIN(((((t0.c43)AND(COUNT(v0.c0))))OR(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING ((MIN(((((t0.c43)AND(COUNT(v0.c0))))OR(t0.c0)))) ISNULL);
SELECT ALL t0.c43 FROM vt0, t0;
SELECT ALL t0.c43 FROM vt0, t0 WHERE ((- (((t0.c0)<<(t0.c0))))) UNION ALL SELECT ALL t0.c43 FROM vt0, t0 WHERE ((NOT ((- (((t0.c0)<<(t0.c0))))))) UNION ALL SELECT ALL t0.c43 FROM vt0, t0 WHERE ((((- (((t0.c0)<<(t0.c0))))) ISNULL));
SELECT ALL t0.c43 FROM vt0, t0;
SELECT DISTINCT v0.c0, t0.c43, rt0.c3, vt0.c1 FROM t0, v0, rt0 NOT INDEXED, vt0;
SELECT DISTINCT v0.c0, t0.c43, rt0.c3, vt0.c1 FROM t0, v0, rt0, vt0 WHERE ((+ (t0.c43))) UNION SELECT DISTINCT v0.c0, t0.c43, rt0.c3, vt0.c1 FROM t0, v0, rt0, vt0 WHERE ((NOT ((+ (t0.c43))))) UNION SELECT DISTINCT v0.c0, t0.c43, rt0.c3, vt0.c1 FROM t0, v0, rt0, vt0 WHERE ((((+ (t0.c43))) ISNULL));
SELECT DISTINCT v0.c0, t0.c43, rt0.c3, vt0.c1 FROM t0, v0, rt0 NOT INDEXED, vt0;
SELECT t0.c0, t0.c43 FROM v0, t0 INDEXED BY i4 GROUP BY t0.c0, t0.c43;
SELECT t0.c0, t0.c43 FROM v0, t0 INDEXED BY i4 WHERE (((((t0.c0)<(t0.c43))) IS TRUE)) GROUP BY t0.c0, t0.c43 UNION SELECT ALL t0.c0, t0.c43 FROM v0, t0 INDEXED BY i4 WHERE ((NOT (((((t0.c0)<(t0.c43))) IS TRUE)))) GROUP BY t0.c0, t0.c43 UNION SELECT t0.c0, t0.c43 FROM v0, t0 INDEXED BY i4 WHERE (((((((t0.c0)<(t0.c43))) IS TRUE)) ISNULL)) GROUP BY t0.c0, t0.c43;
SELECT t0.c0, t0.c43 FROM v0, t0 INDEXED BY i4 GROUP BY t0.c0, t0.c43;
SELECT ALL rt0.c0 FROM rt0, t0, v0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, t0, v0 GROUP BY rt0.c0 HAVING (((((COUNT(MAX(SUM(COUNT(*))))))<=((MIN(t0.c43))))) BETWEEN (COUNT(MAX(TOTAL(rt0.c1)))) AND ('(H')) UNION ALL SELECT ALL rt0.c0 FROM rt0, t0, v0 GROUP BY rt0.c0 HAVING (NOT ((((((COUNT(MAX(SUM(COUNT(*))))))<=((MIN(t0.c43))))) BETWEEN (COUNT(MAX(TOTAL(rt0.c1)))) AND ('(H')))) UNION ALL SELECT ALL rt0.c0 FROM rt0, t0, v0 GROUP BY rt0.c0 HAVING (((((((COUNT(MAX(SUM(COUNT(*))))))<=((MIN(t0.c43))))) BETWEEN (COUNT(MAX(TOTAL(rt0.c1)))) AND ('(H'))) ISNULL);
SELECT * FROM v0, t0, vt0, rt0;
SELECT * FROM v0, t0, vt0, rt0 WHERE ((x'9ba3' IN (t0.c43)) COLLATE BINARY) UNION ALL SELECT * FROM v0, t0, vt0, rt0 WHERE ((NOT ((x'9ba3' IN (t0.c43)) COLLATE BINARY))) UNION ALL SELECT * FROM v0, t0, vt0, rt0 WHERE ((((x'9ba3' IN (t0.c43)) COLLATE BINARY) ISNULL));
SELECT * FROM v0, t0, vt0, rt0;
SELECT DISTINCT vt0.c0, v0.c0, rt0.c2, rt0.c3, vt0.c1, t0.c0 FROM vt0, rt0, v0, t0;
SELECT DISTINCT vt0.c0, v0.c0, rt0.c2, rt0.c3, vt0.c1, t0.c0 FROM vt0, rt0, v0, t0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0, v0.c0, rt0.c2, rt0.c3, vt0.c1, t0.c0 FROM vt0, rt0, v0, t0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0, v0.c0, rt0.c2, rt0.c3, vt0.c1, t0.c0 FROM vt0, rt0, v0, t0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0, rt0.c2, rt0.c3, vt0.c1, t0.c0 FROM vt0, rt0, v0, t0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE x'' END) ISNULL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE x'' END) ISNULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE x'' END) ISNULL)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0 HAVING AVG(COUNT(rt0.c1)) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0 HAVING (NOT (AVG(COUNT(rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0 HAVING ((AVG(COUNT(rt0.c1))) ISNULL);
SELECT ALL SUM(CASE WHEN rt0.c1 COLLATE RTRIM THEN (+ (rt0.c0)) WHEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)) WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END THEN ((rt0.c3)LIKE(0.7174279537572064)) END) FROM rt0 ORDER BY (((((rt0.c3))<>((rt0.c3))))IS NOT((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))) DESC;
SELECT ALL * FROM t0, v0 CROSS JOIN rt0 ON ((((CASE WHEN v0.c0 THEN rt0.c3 ELSE v0.c0 END)OR(((rt0.c2) IS TRUE))))OR((~ (rt0.c3))));
SELECT ALL * FROM t0, v0 CROSS JOIN rt0 ON ((((CASE WHEN v0.c0 THEN rt0.c3 ELSE v0.c0 END)OR(((rt0.c2) IS TRUE))))OR((~ (rt0.c3)))) WHERE ((((((((t0.c0)OR(rt0.c0)))AND(t0.c0)), ((t0.c43)-(t0.c0)), ((rt0.c3)GLOB(rt0.c1))))=((rt0.c3 COLLATE RTRIM, v0.c0 COLLATE BINARY, CAST(t0.c0 AS NUMERIC))))) UNION ALL SELECT * FROM t0, v0 CROSS JOIN rt0 ON ((((CASE WHEN v0.c0 THEN rt0.c3 ELSE v0.c0 END)OR(((rt0.c2) IS TRUE))))OR((~ (rt0.c3)))) WHERE ((NOT ((((((((t0.c0)OR(rt0.c0)))AND(t0.c0)), ((t0.c43)-(t0.c0)), ((rt0.c3)GLOB(rt0.c1))))=((rt0.c3 COLLATE RTRIM, v0.c0 COLLATE BINARY, CAST(t0.c0 AS NUMERIC))))))) UNION ALL SELECT * FROM t0, v0 CROSS JOIN rt0 ON ((((CASE WHEN v0.c0 THEN rt0.c3 ELSE v0.c0 END)OR(((rt0.c2) IS TRUE))))OR((~ (rt0.c3)))) WHERE ((((((((((t0.c0)OR(rt0.c0)))AND(t0.c0)), ((t0.c43)-(t0.c0)), ((rt0.c3)GLOB(rt0.c1))))==((rt0.c3 COLLATE RTRIM, v0.c0 COLLATE BINARY, CAST(t0.c0 AS NUMERIC))))) ISNULL));
SELECT ALL * FROM t0, v0 CROSS JOIN rt0 ON ((((CASE WHEN v0.c0 THEN rt0.c3 ELSE v0.c0 END)OR(((rt0.c2) IS TRUE))))OR((~ (rt0.c3))));
SELECT DISTINCT rt0.c2, t0.c43, rt0.c0, rt0.c1 FROM t0, rt0;
SELECT DISTINCT rt0.c2, t0.c43, rt0.c0, rt0.c1 FROM t0, rt0 WHERE (((((SQLITE_SOURCE_ID())OR((NOT ('')))))AND(CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c3 END))) UNION SELECT DISTINCT rt0.c2, t0.c43, rt0.c0, rt0.c1 FROM t0, rt0 WHERE ((NOT (((((SQLITE_SOURCE_ID())OR((NOT ('')))))AND(CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c3 END))))) UNION SELECT DISTINCT rt0.c2, t0.c43, rt0.c0, rt0.c1 FROM t0, rt0 WHERE (((((((SQLITE_SOURCE_ID())OR((NOT ('')))))AND(CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c3 END))) ISNULL));
SELECT DISTINCT rt0.c2, t0.c43, rt0.c0, rt0.c1 FROM t0, rt0;
SELECT t0.c43, vt0.c1 FROM t0 CROSS JOIN vt0 ON (((CASE vt0.c0  WHEN t0.c0 THEN vt0.c1 END, ((vt0.c0)||(vt0.c1)), (vt0.c0 IN ())))=((((((t0.c0)OR(vt0.c1)))AND(t0.c43)), 0Xffffffffaf3fab6f, ((t0.c0) NOT NULL)))) GROUP BY t0.c43, vt0.c1;
SELECT ALL t0.c43, vt0.c1 FROM t0 CROSS JOIN vt0 ON (((CASE vt0.c0  WHEN t0.c0 THEN vt0.c1 END, ((vt0.c0)||(vt0.c1)), (vt0.c0 IN ())))==((((((t0.c0)OR(vt0.c1)))AND(t0.c43)), 0Xffffffffaf3fab6f, ((t0.c0) NOT NULL)))) WHERE ((((t0.c43)) BETWEEN ((UNLIKELY(t0.c43))) AND ((((x'') IS FALSE))))) GROUP BY t0.c43, vt0.c1 UNION SELECT t0.c43, vt0.c1 FROM t0 CROSS JOIN vt0 ON (((CASE vt0.c0  WHEN t0.c0 THEN vt0.c1 END, ((vt0.c0)||(vt0.c1)), (vt0.c0 IN ())))==((((((t0.c0)OR(vt0.c1)))AND(t0.c43)), 0Xffffffffaf3fab6f, ((t0.c0) NOT NULL)))) WHERE ((NOT ((((t0.c43)) BETWEEN ((UNLIKELY(t0.c43))) AND ((((x'') IS FALSE))))))) GROUP BY t0.c43, vt0.c1 UNION SELECT t0.c43, vt0.c1 FROM t0 CROSS JOIN vt0 ON (((CASE vt0.c0  WHEN t0.c0 THEN vt0.c1 END, ((vt0.c0)||(vt0.c1)), (vt0.c0 IN ())))=((((((t0.c0)OR(vt0.c1)))AND(t0.c43)), 0xffffffffaf3fab6f, ((t0.c0) NOT NULL)))) WHERE ((((((t0.c43)) BETWEEN ((UNLIKELY(t0.c43))) AND ((((x'') IS FALSE))))) ISNULL)) GROUP BY t0.c43, vt0.c1;
SELECT t0.c43, vt0.c1 FROM t0 CROSS JOIN vt0 ON (((CASE vt0.c0  WHEN t0.c0 THEN vt0.c1 END, ((vt0.c0)||(vt0.c1)), (vt0.c0 IN ())))=((((((t0.c0)OR(vt0.c1)))AND(t0.c43)), 0Xffffffffaf3fab6f, ((t0.c0) NOT NULL)))) GROUP BY t0.c43, vt0.c1;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING COUNT(GROUP_CONCAT(COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING ((COUNT(GROUP_CONCAT(COUNT(*)))) ISNULL);
SELECT MAX(CAST(((t0.c43)*(t0.c0)) AS INTEGER)) FROM rt0, vt0, t0 ORDER BY (0.6337751221180759 IN ())  NULLS LAST;
SELECT ALL rt0.c1, rt0.c3, t0.c43, v0.c0, vt0.c1, rt0.c2 FROM rt0, vt0, t0, v0;
SELECT rt0.c1, rt0.c3, t0.c43, v0.c0, vt0.c1, rt0.c2 FROM rt0, vt0, t0, v0 WHERE ((((t0.c43, vt0.c1, vt0.c1, vt0.c1, t0.c0)) NOT BETWEEN (((v0.c0 IN ()), vt0.c1, LIKELY(vt0.c1), ((vt0.c0)|(0.6574710408726036)), CAST(v0.c0 AS REAL))) AND ((CASE rt0.c3  WHEN v0.c0 THEN t0.c0 WHEN t0.c43 THEN t0.c0 WHEN rt0.c0 THEN rt0.c3 END, HEX(vt0.c0), ((x'') BETWEEN (t0.c43) AND (vt0.c0)), (((v0.c0, rt0.c0, x'')) BETWEEN ((rt0.c1, rt0.c3, rt0.c0)) AND ((rt0.c1, v0.c0, rt0.c3))), ((((((((rt0.c1)AND(t0.c0)))OR(rt0.c1)))OR(v0.c0)))OR(v0.c0)))))) UNION ALL SELECT rt0.c1, rt0.c3, t0.c43, v0.c0, vt0.c1, rt0.c2 FROM rt0, vt0, t0, v0 WHERE ((NOT ((((t0.c43, vt0.c1, vt0.c1, vt0.c1, t0.c0)) NOT BETWEEN (((v0.c0 IN ()), vt0.c1, LIKELY(vt0.c1), ((vt0.c0)|(0.6574710408726036)), CAST(v0.c0 AS REAL))) AND ((CASE rt0.c3  WHEN v0.c0 THEN t0.c0 WHEN t0.c43 THEN t0.c0 WHEN rt0.c0 THEN rt0.c3 END, HEX(vt0.c0), ((x'') BETWEEN (t0.c43) AND (vt0.c0)), (((v0.c0, rt0.c0, x'')) BETWEEN ((rt0.c1, rt0.c3, rt0.c0)) AND ((rt0.c1, v0.c0, rt0.c3))), ((((((((rt0.c1)AND(t0.c0)))OR(rt0.c1)))OR(v0.c0)))OR(v0.c0)))))))) UNION ALL SELECT rt0.c1, rt0.c3, t0.c43, v0.c0, vt0.c1, rt0.c2 FROM rt0, vt0, t0, v0 WHERE ((((((t0.c43, vt0.c1, vt0.c1, vt0.c1, t0.c0)) NOT BETWEEN (((v0.c0 IN ()), vt0.c1, LIKELY(vt0.c1), ((vt0.c0)|(0.6574710408726036)), CAST(v0.c0 AS REAL))) AND ((CASE rt0.c3  WHEN v0.c0 THEN t0.c0 WHEN t0.c43 THEN t0.c0 WHEN rt0.c0 THEN rt0.c3 END, HEX(vt0.c0), ((x'') BETWEEN (t0.c43) AND (vt0.c0)), (((v0.c0, rt0.c0, x'')) BETWEEN ((rt0.c1, rt0.c3, rt0.c0)) AND ((rt0.c1, v0.c0, rt0.c3))), ((((((((rt0.c1)AND(t0.c0)))OR(rt0.c1)))OR(v0.c0)))OR(v0.c0)))))) ISNULL));
SELECT ALL rt0.c1, rt0.c3, t0.c43, v0.c0, vt0.c1, rt0.c2 FROM rt0, vt0, t0, v0;
SELECT DISTINCT * FROM vt0, rt0, t0 FULL OUTER JOIN v0 ON (UPPER(t0.c43) IN ());
SELECT DISTINCT * FROM vt0, rt0, t0 FULL OUTER JOIN v0 ON (UPPER(t0.c43) IN ()) WHERE ((v0.c0 COLLATE BINARY IN ())) UNION SELECT DISTINCT * FROM vt0, rt0, t0 FULL OUTER JOIN v0 ON (UPPER(t0.c43) IN ()) WHERE ((NOT ((v0.c0 COLLATE BINARY IN ())))) UNION SELECT DISTINCT * FROM vt0, rt0, t0 FULL OUTER JOIN v0 ON (UPPER(t0.c43) IN ()) WHERE ((((v0.c0 COLLATE BINARY IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, t0 FULL OUTER JOIN v0 ON (UPPER(t0.c43) IN ());
SELECT ALL rt0.c1 FROM rt0, vt0 INDEXED BY i4 GROUP BY rt0.c1;
SELECT ALL rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, vt0.c1 FROM t0, rt0, vt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, vt0.c1;
SELECT ALL rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, vt0.c1 FROM t0, rt0, vt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, vt0.c1 HAVING CAST(SQLITE_VERSION() AS TEXT) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, vt0.c1 FROM t0, rt0, vt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, vt0.c1 HAVING (NOT (CAST(SQLITE_VERSION() AS TEXT))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, vt0.c1 FROM t0, rt0, vt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, vt0.c1 HAVING ((CAST(SQLITE_VERSION() AS TEXT)) ISNULL);
SELECT ALL rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, vt0.c1 FROM t0, rt0, vt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, vt0.c1;
SELECT ALL rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, vt0.c1 FROM t0, rt0, vt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, vt0.c1 HAVING CAST(SQLITE_VERSION() AS TEXT) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, vt0.c1 FROM t0, rt0, vt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, vt0.c1 HAVING (NOT (CAST(SQLITE_VERSION() AS TEXT))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, vt0.c1 FROM t0, rt0, vt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, vt0.c1 HAVING ((CAST(SQLITE_VERSION() AS TEXT)) ISNULL);
SELECT ALL rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, vt0.c1 FROM t0, rt0, vt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, vt0.c1;
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (NULL) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM rt0, v0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM v0, vt0, t0, rt0;
SELECT DISTINCT * FROM v0, vt0, t0, rt0 WHERE (((((rt0.c0)IS(rt0.c1)))<=((NOT (t0.c0))))) UNION SELECT DISTINCT * FROM v0, vt0, t0, rt0 WHERE ((NOT (((((rt0.c0)IS(rt0.c1)))<=((NOT (t0.c0))))))) UNION SELECT DISTINCT * FROM v0, vt0, t0, rt0 WHERE (((((((rt0.c0)IS(rt0.c1)))<=((NOT (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, t0, rt0;
SELECT ALL vt0.c0, vt0.c1, t0.c43 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c43;
SELECT ALL vt0.c0, vt0.c1, t0.c43 FROM t0, vt0 WHERE (UPPER(((t0.c43)<(vt0.c0)))) GROUP BY vt0.c0, vt0.c1, t0.c43 UNION SELECT ALL vt0.c0, vt0.c1, t0.c43 FROM t0, vt0 WHERE ((NOT (UPPER(((t0.c43)<(vt0.c0)))))) GROUP BY vt0.c0, vt0.c1, t0.c43 UNION SELECT vt0.c0, vt0.c1, t0.c43 FROM t0, vt0 WHERE (((UPPER(((t0.c43)<(vt0.c0)))) ISNULL)) GROUP BY vt0.c0, vt0.c1, t0.c43;
SELECT ALL vt0.c0, vt0.c1, t0.c43 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c43;
SELECT ALL rt0.c3 FROM vt0, rt0, t0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM vt0, rt0, t0 GROUP BY rt0.c3 HAVING ((SUM(t0.c43)) ISNULL) UNION ALL SELECT ALL rt0.c3 FROM vt0, rt0, t0 GROUP BY rt0.c3 HAVING (NOT (((SUM(t0.c43)) ISNULL))) UNION ALL SELECT ALL rt0.c3 FROM vt0, rt0, t0 GROUP BY rt0.c3 HAVING ((((SUM(t0.c43)) ISNULL)) ISNULL);
SELECT ALL rt0.c3 FROM vt0, rt0, t0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM vt0, rt0, t0 GROUP BY rt0.c3 HAVING ((SUM(t0.c43)) ISNULL) UNION ALL SELECT ALL rt0.c3 FROM vt0, rt0, t0 GROUP BY rt0.c3 HAVING (NOT (((SUM(t0.c43)) ISNULL))) UNION ALL SELECT ALL rt0.c3 FROM vt0, rt0, t0 GROUP BY rt0.c3 HAVING ((((SUM(t0.c43)) ISNULL)) ISNULL);
SELECT ALL rt0.c3 FROM vt0, rt0, t0 GROUP BY rt0.c3;
SELECT ALL rt0.c0, v0.c0 FROM rt0, v0;
SELECT rt0.c0, v0.c0 FROM rt0, v0 WHERE (rt0.c1) UNION ALL SELECT rt0.c0, v0.c0 FROM rt0, v0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL rt0.c0, v0.c0 FROM rt0, v0 WHERE (((rt0.c1) ISNULL));
SELECT ALL rt0.c0, v0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM t0, v0, rt0, vt0;
SELECT DISTINCT * FROM t0, v0, rt0, vt0 WHERE (NULL) UNION SELECT DISTINCT * FROM t0 NOT INDEXED, v0, rt0, vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM t0, v0, rt0, vt0 NOT INDEXED WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM t0, v0, rt0, vt0;
SELECT ALL rt0.c3, rt0.c0, vt0.c0 FROM t0, v0, vt0 RIGHT OUTER JOIN rt0 ON (((NULL COLLATE BINARY))!=(((vt0.c0 IN (vt0.c0))))) GROUP BY rt0.c3, rt0.c0, vt0.c0;
SELECT rt0.c3, rt0.c0, vt0.c0 FROM t0, v0, vt0 RIGHT OUTER JOIN rt0 ON (((NULL COLLATE BINARY))<>(((vt0.c0 IN (vt0.c0))))) WHERE (((((((rt0.c2)AND(rt0.c2)))AND('>guYb'))) NOT BETWEEN (((((vt0.c1)OR(rt0.c3)))OR(vt0.c1))) AND (ABS(DISTINCT '')))) GROUP BY rt0.c3, rt0.c0, vt0.c0 UNION SELECT rt0.c3, rt0.c0, vt0.c0 FROM t0, v0, vt0 RIGHT OUTER JOIN rt0 ON (((NULL COLLATE BINARY))!=(((vt0.c0 IN (vt0.c0))))) WHERE ((NOT (((((((rt0.c2)AND(rt0.c2)))AND('>guYb'))) NOT BETWEEN (((((vt0.c1)OR(rt0.c3)))OR(vt0.c1))) AND (ABS(DISTINCT '')))))) GROUP BY rt0.c3, rt0.c0, vt0.c0 UNION SELECT rt0.c3, rt0.c0, vt0.c0 FROM t0, v0, vt0 RIGHT OUTER JOIN rt0 ON (((NULL COLLATE BINARY))!=(((vt0.c0 IN (vt0.c0))))) WHERE (((((((((rt0.c2)AND(rt0.c2)))AND('>guYb'))) NOT BETWEEN (((((vt0.c1)OR(rt0.c3)))OR(vt0.c1))) AND (ABS(DISTINCT '')))) ISNULL)) GROUP BY rt0.c3, rt0.c0, vt0.c0;
SELECT ALL rt0.c3, rt0.c0, vt0.c0 FROM t0, v0, vt0 RIGHT OUTER JOIN rt0 ON (((NULL COLLATE BINARY))!=(((vt0.c0 IN (vt0.c0))))) GROUP BY rt0.c3, rt0.c0, vt0.c0;
SELECT ALL rt0.c2, vt0.c1 FROM v0, vt0 FULL OUTER JOIN rt0 ON (((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((TYPEOF(DISTINCT v0.c0), rt0.c2 COLLATE NOCASE, rt0.c0)) AND ((((((((((rt0.c2)AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('')), load_extension(rt0.c0, rt0.c1), ((v0.c0)<(0X790a5425))))) GROUP BY rt0.c2, vt0.c1;
SELECT ALL rt0.c2, vt0.c1 FROM v0, vt0 FULL OUTER JOIN rt0 ON (((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((TYPEOF(DISTINCT v0.c0), rt0.c2 COLLATE NOCASE, rt0.c0)) AND ((((((((((rt0.c2)AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('')), load_extension(rt0.c0, rt0.c1), ((v0.c0)<(0x790a5425))))) GROUP BY rt0.c2, vt0.c1 HAVING GROUP_CONCAT(rt0.c2) COLLATE BINARY COLLATE RTRIM UNION ALL SELECT ALL rt0.c2, vt0.c1 FROM v0, vt0 FULL OUTER JOIN rt0 ON (((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((TYPEOF(DISTINCT v0.c0), rt0.c2 COLLATE NOCASE, rt0.c0)) AND ((((((((((rt0.c2)AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('')), load_extension(rt0.c0, rt0.c1), ((v0.c0)<(0x790a5425))))) GROUP BY rt0.c2, vt0.c1 HAVING (NOT (GROUP_CONCAT(rt0.c2) COLLATE BINARY COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c2, vt0.c1 FROM v0, vt0 FULL OUTER JOIN rt0 ON (((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((TYPEOF(DISTINCT v0.c0), rt0.c2 COLLATE NOCASE, rt0.c0)) AND ((((((((((rt0.c2)AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('')), load_extension(rt0.c0, rt0.c1), ((v0.c0)<(0X790a5425))))) GROUP BY rt0.c2, vt0.c1 HAVING ((GROUP_CONCAT(rt0.c2) COLLATE BINARY COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c2, vt0.c1 FROM v0, vt0 FULL OUTER JOIN rt0 ON (((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((TYPEOF(DISTINCT v0.c0), rt0.c2 COLLATE NOCASE, rt0.c0)) AND ((((((((((rt0.c2)AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('')), load_extension(rt0.c0, rt0.c1), ((v0.c0)<(0X790a5425))))) GROUP BY rt0.c2, vt0.c1;
SELECT ALL rt0.c2, vt0.c1 FROM v0, vt0 FULL OUTER JOIN rt0 ON (((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((TYPEOF(DISTINCT v0.c0), rt0.c2 COLLATE NOCASE, rt0.c0)) AND ((((((((((rt0.c2)AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('')), load_extension(rt0.c0, rt0.c1), ((v0.c0)<(0x790a5425))))) GROUP BY rt0.c2, vt0.c1 HAVING GROUP_CONCAT(rt0.c2) COLLATE BINARY COLLATE RTRIM UNION ALL SELECT ALL rt0.c2, vt0.c1 FROM v0, vt0 FULL OUTER JOIN rt0 ON (((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((TYPEOF(DISTINCT v0.c0), rt0.c2 COLLATE NOCASE, rt0.c0)) AND ((((((((((rt0.c2)AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('')), load_extension(rt0.c0, rt0.c1), ((v0.c0)<(0x790a5425))))) GROUP BY rt0.c2, vt0.c1 HAVING (NOT (GROUP_CONCAT(rt0.c2) COLLATE BINARY COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c2, vt0.c1 FROM v0, vt0 FULL OUTER JOIN rt0 ON (((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((TYPEOF(DISTINCT v0.c0), rt0.c2 COLLATE NOCASE, rt0.c0)) AND ((((((((((rt0.c2)AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('')), load_extension(rt0.c0, rt0.c1), ((v0.c0)<(0X790a5425))))) GROUP BY rt0.c2, vt0.c1 HAVING ((GROUP_CONCAT(rt0.c2) COLLATE BINARY COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c2, vt0.c1 FROM v0, vt0 FULL OUTER JOIN rt0 ON (((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((TYPEOF(DISTINCT v0.c0), rt0.c2 COLLATE NOCASE, rt0.c0)) AND ((((((((((rt0.c2)AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('')), load_extension(rt0.c0, rt0.c1), ((v0.c0)<(0X790a5425))))) GROUP BY rt0.c2, vt0.c1;
SELECT ALL vt0.c0, t0.c43 FROM t0, vt0;
SELECT vt0.c0, t0.c43 FROM t0, vt0 WHERE ('{}w^') UNION ALL SELECT vt0.c0, t0.c43 FROM t0, vt0 WHERE ((NOT ('{}w^'))) UNION ALL SELECT vt0.c0, t0.c43 FROM t0, vt0 WHERE ((('{}w^') ISNULL));
SELECT ALL vt0.c0, t0.c43 FROM t0, vt0;
SELECT DISTINCT vt0.c0, vt0.c1, rt0.c2, t0.c0, rt0.c3, rt0.c0, v0.c0, t0.c43, rt0.c1 FROM t0 RIGHT OUTER JOIN v0 ON ((((vt0.c0)AND(t0.c0)))AND(vt0.c1)) COLLATE NOCASE INNER JOIN vt0 ON CAST(rt0.c2 COLLATE NOCASE AS TEXT) CROSS JOIN rt0 ON '-1718223124';
SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM v0, t0 WHERE (GLOB(((t0.c43)<(t0.c0)), UNLIKELY(DISTINCT t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM v0, t0 WHERE ((NOT (GLOB(((t0.c43)<(t0.c0)), UNLIKELY(DISTINCT t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM v0, t0 WHERE (((GLOB(((t0.c43)<(t0.c0)), UNLIKELY(DISTINCT t0.c0))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT rt0.c0 FROM v0, t0, rt0 RIGHT OUTER JOIN vt0 ON ((('TsՈVAFyx ', rt0.c2, t0.c43)) BETWEEN ((MAX(rt0.c3, x''), CAST(rt0.c1 AS REAL), CAST(vt0.c0 AS REAL))) AND ((((t0.c43) BETWEEN (rt0.c3) AND (rt0.c3)), NULL, NULL))) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, t0, rt0 RIGHT OUTER JOIN vt0 ON ((('TsՈVAFyx ', rt0.c2, t0.c43)) BETWEEN ((MAX(rt0.c3, x''), CAST(rt0.c1 AS REAL), CAST(vt0.c0 AS REAL))) AND ((((t0.c43) BETWEEN (rt0.c3) AND (rt0.c3)), NULL, NULL))) GROUP BY rt0.c0 HAVING ((((((t0.c43)AND(TOTAL(rt0.c2))))AND(MIN(rt0.c2)))) NOTNULL) UNION ALL SELECT ALL rt0.c0 FROM v0, t0, rt0 RIGHT OUTER JOIN vt0 ON ((('TsՈVAFyx ', rt0.c2, t0.c43)) BETWEEN ((MAX(rt0.c3, x''), CAST(rt0.c1 AS REAL), CAST(vt0.c0 AS REAL))) AND ((((t0.c43) BETWEEN (rt0.c3) AND (rt0.c3)), NULL, NULL))) GROUP BY rt0.c0 HAVING (NOT (((((((t0.c43)AND(TOTAL(rt0.c2))))AND(MIN(rt0.c2)))) NOTNULL))) UNION ALL SELECT rt0.c0 FROM v0, t0, rt0 RIGHT OUTER JOIN vt0 ON ((('TsՈVAFyx ', rt0.c2, t0.c43)) BETWEEN ((MAX(rt0.c3, x''), CAST(rt0.c1 AS REAL), CAST(vt0.c0 AS REAL))) AND ((((t0.c43) BETWEEN (rt0.c3) AND (rt0.c3)), NULL, NULL))) GROUP BY rt0.c0 HAVING ((((((((t0.c43)AND(TOTAL(rt0.c2))))AND(MIN(rt0.c2)))) NOTNULL)) ISNULL);
SELECT rt0.c0 FROM v0, t0, rt0 RIGHT OUTER JOIN vt0 ON ((('TsՈVAFyx ', rt0.c2, t0.c43)) BETWEEN ((MAX(rt0.c3, x''), CAST(rt0.c1 AS REAL), CAST(vt0.c0 AS REAL))) AND ((((t0.c43) BETWEEN (rt0.c3) AND (rt0.c3)), NULL, NULL))) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, t0, rt0 RIGHT OUTER JOIN vt0 ON ((('TsՈVAFyx ', rt0.c2, t0.c43)) BETWEEN ((MAX(rt0.c3, x''), CAST(rt0.c1 AS REAL), CAST(vt0.c0 AS REAL))) AND ((((t0.c43) BETWEEN (rt0.c3) AND (rt0.c3)), NULL, NULL))) GROUP BY rt0.c0 HAVING ((((((t0.c43)AND(TOTAL(rt0.c2))))AND(MIN(rt0.c2)))) NOTNULL) UNION ALL SELECT ALL rt0.c0 FROM v0, t0, rt0 RIGHT OUTER JOIN vt0 ON ((('TsՈVAFyx ', rt0.c2, t0.c43)) BETWEEN ((MAX(rt0.c3, x''), CAST(rt0.c1 AS REAL), CAST(vt0.c0 AS REAL))) AND ((((t0.c43) BETWEEN (rt0.c3) AND (rt0.c3)), NULL, NULL))) GROUP BY rt0.c0 HAVING (NOT (((((((t0.c43)AND(TOTAL(rt0.c2))))AND(MIN(rt0.c2)))) NOTNULL))) UNION ALL SELECT rt0.c0 FROM v0, t0, rt0 RIGHT OUTER JOIN vt0 ON ((('TsՈVAFyx ', rt0.c2, t0.c43)) BETWEEN ((MAX(rt0.c3, x''), CAST(rt0.c1 AS REAL), CAST(vt0.c0 AS REAL))) AND ((((t0.c43) BETWEEN (rt0.c3) AND (rt0.c3)), NULL, NULL))) GROUP BY rt0.c0 HAVING ((((((((t0.c43)AND(TOTAL(rt0.c2))))AND(MIN(rt0.c2)))) NOTNULL)) ISNULL);
SELECT rt0.c0 FROM v0, t0, rt0 RIGHT OUTER JOIN vt0 ON ((('TsՈVAFyx ', rt0.c2, t0.c43)) BETWEEN ((MAX(rt0.c3, x''), CAST(rt0.c1 AS REAL), CAST(vt0.c0 AS REAL))) AND ((((t0.c43) BETWEEN (rt0.c3) AND (rt0.c3)), NULL, NULL))) GROUP BY rt0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (CAST(((v0.c0)*(v0.c0)) AS TEXT)) UNION ALL SELECT * FROM v0 WHERE ((NOT (CAST(((v0.c0)*(v0.c0)) AS TEXT)))) UNION ALL SELECT * FROM v0 WHERE (((CAST(((v0.c0)*(v0.c0)) AS TEXT)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((((vt0.c1))>=((vt0.c1))) COLLATE NOCASE COLLATE NOCASE) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c1))>=((vt0.c1))) COLLATE NOCASE COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((((((vt0.c1))>=((vt0.c1))) COLLATE NOCASE COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT vt0.c1, v0.c0, vt0.c0 FROM t0, v0, vt0 GROUP BY vt0.c1, v0.c0, vt0.c0;
SELECT ALL vt0.c1, v0.c0, vt0.c0 FROM t0, v0, vt0 WHERE (((vt0.c0) NOT NULL) COLLATE NOCASE) GROUP BY vt0.c1, v0.c0, vt0.c0 UNION SELECT ALL vt0.c1, v0.c0, vt0.c0 FROM t0, v0, vt0 WHERE ((NOT (((vt0.c0) NOT NULL) COLLATE NOCASE))) GROUP BY vt0.c1, v0.c0, vt0.c0 UNION SELECT ALL vt0.c1, v0.c0, vt0.c0 FROM t0, v0, vt0 WHERE (((((vt0.c0) NOT NULL) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c1, v0.c0, vt0.c0;
SELECT vt0.c1, v0.c0, vt0.c0 FROM t0, v0, vt0 GROUP BY vt0.c1, v0.c0, vt0.c0;
SELECT ALL t0.c43, v0.c0, vt0.c0, vt0.c1 FROM v0 INNER JOIN vt0 ON CAST(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS INTEGER) INNER JOIN t0 ON NULL GROUP BY t0.c43, v0.c0, vt0.c0, vt0.c1;
SELECT ALL t0.c43, v0.c0, vt0.c0, vt0.c1 FROM v0 INNER JOIN vt0 ON CAST(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS INTEGER) INNER JOIN t0 ON NULL GROUP BY t0.c43, v0.c0, vt0.c0, vt0.c1 HAVING MIN(CAST(v0.c0 AS NUMERIC)) UNION ALL SELECT ALL t0.c43, v0.c0, vt0.c0, vt0.c1 FROM v0 INNER JOIN vt0 ON CAST(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS INTEGER) INNER JOIN t0 ON NULL GROUP BY t0.c43, v0.c0, vt0.c0, vt0.c1 HAVING (NOT (MIN(CAST(v0.c0 AS NUMERIC)))) UNION ALL SELECT t0.c43, v0.c0, vt0.c0, vt0.c1 FROM v0 INNER JOIN vt0 ON CAST(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS INTEGER) INNER JOIN t0 ON NULL GROUP BY t0.c43, v0.c0, vt0.c0, vt0.c1 HAVING ((MIN(CAST(v0.c0 AS NUMERIC))) ISNULL);
SELECT ALL t0.c43, v0.c0, vt0.c0, vt0.c1 FROM v0 INNER JOIN vt0 ON CAST(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS INTEGER) INNER JOIN t0 ON NULL GROUP BY t0.c43, v0.c0, vt0.c0, vt0.c1;
SELECT ALL t0.c43, v0.c0, vt0.c0, vt0.c1 FROM v0 INNER JOIN vt0 ON CAST(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS INTEGER) INNER JOIN t0 ON NULL GROUP BY t0.c43, v0.c0, vt0.c0, vt0.c1 HAVING MIN(CAST(v0.c0 AS NUMERIC)) UNION ALL SELECT ALL t0.c43, v0.c0, vt0.c0, vt0.c1 FROM v0 INNER JOIN vt0 ON CAST(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS INTEGER) INNER JOIN t0 ON NULL GROUP BY t0.c43, v0.c0, vt0.c0, vt0.c1 HAVING (NOT (MIN(CAST(v0.c0 AS NUMERIC)))) UNION ALL SELECT t0.c43, v0.c0, vt0.c0, vt0.c1 FROM v0 INNER JOIN vt0 ON CAST(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS INTEGER) INNER JOIN t0 ON NULL GROUP BY t0.c43, v0.c0, vt0.c0, vt0.c1 HAVING ((MIN(CAST(v0.c0 AS NUMERIC))) ISNULL);
SELECT ALL t0.c43, v0.c0, vt0.c0, vt0.c1 FROM v0 INNER JOIN vt0 ON CAST(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS INTEGER) INNER JOIN t0 ON NULL GROUP BY t0.c43, v0.c0, vt0.c0, vt0.c1;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c0)OR(0.8031935220317624)))OR(x'')))AND(CASE WHEN rt0.c3 THEN rt0.c2 END)))AND(((((rt0.c3)OR(rt0.c2)))OR(rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((((rt0.c0)OR(0.8031935220317624)))OR(x'')))AND(CASE WHEN rt0.c3 THEN rt0.c2 END)))AND(((((rt0.c3)OR(rt0.c2)))OR(rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c0)OR(0.8031935220317624)))OR(x'')))AND(CASE WHEN rt0.c3 THEN rt0.c2 END)))AND(((((rt0.c3)OR(rt0.c2)))OR(rt0.c2))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM t0, vt0 NOT INDEXED, v0, rt0;
SELECT DISTINCT * FROM t0, vt0, v0, rt0 WHERE (CASE WHEN ((rt0.c2)>(t0.c43)) THEN ((vt0.c0) IS TRUE) END) UNION SELECT DISTINCT * FROM t0, vt0, v0, rt0 WHERE ((NOT (CASE WHEN ((rt0.c2)>(t0.c43)) THEN ((vt0.c0) IS TRUE) END))) UNION SELECT DISTINCT * FROM t0, vt0, v0, rt0 WHERE (((CASE WHEN ((rt0.c2)>(t0.c43)) THEN ((vt0.c0) IS TRUE) END) ISNULL));
SELECT DISTINCT * FROM t0, vt0 NOT INDEXED, v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0)==(v0.c0)) IN ())) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)=(v0.c0)) IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((v0.c0)=(v0.c0)) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c3, vt0.c0, rt0.c2, rt0.c0;
SELECT v0.c0 FROM v0, vt0, t0;
SELECT v0.c0 FROM v0, vt0, t0 WHERE (((CASE WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN t0.c0 THEN vt0.c1 ELSE t0.c0 END) NOTNULL)) UNION ALL SELECT v0.c0 FROM v0, vt0, t0 WHERE ((NOT (((CASE WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN t0.c0 THEN vt0.c1 ELSE t0.c0 END) NOTNULL)))) UNION ALL SELECT v0.c0 FROM v0 NOT INDEXED, vt0, t0 WHERE (((((CASE WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN t0.c0 THEN vt0.c1 ELSE t0.c0 END) NOTNULL)) ISNULL));
SELECT v0.c0 FROM v0, vt0, t0;
SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM vt0, t0 WHERE ((((((vt0.c1)) BETWEEN ((x'ac3e')) AND ((t0.c0))))GLOB(0.6956513473634464))) UNION SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT ((((((vt0.c1)) BETWEEN ((x'ac3e')) AND ((t0.c0))))GLOB(0.6956513473634464))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM vt0, t0 WHERE ((((((((vt0.c1)) BETWEEN ((x'ac3e')) AND ((t0.c0))))GLOB(0.6956513473634464))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM vt0, t0;
SELECT t0.c0, vt0.c1, vt0.c0, v0.c0 FROM t0, v0, vt0 GROUP BY t0.c0, vt0.c1, vt0.c0, v0.c0;
SELECT ALL t0.c0, vt0.c1, vt0.c0, v0.c0 FROM t0, v0, vt0 WHERE (v0.c0) GROUP BY t0.c0, vt0.c1, vt0.c0, v0.c0 UNION SELECT ALL t0.c0, vt0.c1, vt0.c0, v0.c0 FROM t0, v0, vt0 WHERE ((NOT (v0.c0))) GROUP BY t0.c0, vt0.c1, vt0.c0, v0.c0 UNION SELECT ALL t0.c0, vt0.c1, vt0.c0, v0.c0 FROM t0, v0, vt0 WHERE (((v0.c0) ISNULL)) GROUP BY t0.c0, vt0.c1, vt0.c0, v0.c0;
SELECT t0.c0, vt0.c1, vt0.c0, v0.c0 FROM t0, v0, vt0 GROUP BY t0.c0, vt0.c1, vt0.c0, v0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING x'' UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (x'')) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((x'') ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING x'' UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (x'')) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((x'') ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE ((((rt0.c1) ISNULL) IN ())) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT ((((rt0.c1) ISNULL) IN ())))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((((((rt0.c1) ISNULL) IN ())) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT v0.c0, t0.c43, t0.c0, vt0.c0, vt0.c1 FROM vt0, t0, v0;
SELECT DISTINCT v0.c0, t0.c43, t0.c0, vt0.c0, vt0.c1 FROM vt0, t0, v0 WHERE ((((vt0.c1 IN ()))GLOB(((vt0.c1) IS TRUE)))) UNION SELECT DISTINCT v0.c0, t0.c43, t0.c0, vt0.c0, vt0.c1 FROM vt0, t0, v0 WHERE ((NOT ((((vt0.c1 IN ()))GLOB(((vt0.c1) IS TRUE)))))) UNION SELECT DISTINCT v0.c0, t0.c43, t0.c0, vt0.c0, vt0.c1 FROM vt0, t0, v0 WHERE ((((((vt0.c1 IN ()))GLOB(((vt0.c1) IS TRUE)))) ISNULL));
SELECT DISTINCT v0.c0, t0.c43, t0.c0, vt0.c0, vt0.c1 FROM vt0, t0, v0;
SELECT t0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c1;
SELECT ALL t0.c0, vt0.c1 FROM vt0, t0 WHERE (((((t0.c43))>=((vt0.c0))) IN ())) GROUP BY t0.c0, vt0.c1 UNION SELECT t0.c0, vt0.c1 FROM vt0, t0 WHERE ((NOT (((((t0.c43))>=((vt0.c0))) IN ())))) GROUP BY t0.c0, vt0.c1 UNION SELECT ALL t0.c0, vt0.c1 FROM vt0, t0 WHERE (((((((t0.c43))>=((vt0.c0))) IN ())) ISNULL)) GROUP BY t0.c0, vt0.c1;
SELECT t0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c1;
SELECT t0.c0, vt0.c0, t0.c43, rt0.c3, rt0.c0, vt0.c1, rt0.c2 FROM t0, rt0 INNER JOIN vt0 ON TRIM(((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))) GROUP BY t0.c0, vt0.c0, t0.c43, rt0.c3, rt0.c0, vt0.c1, rt0.c2;
SELECT ALL t0.c0, vt0.c0, t0.c43, rt0.c3, rt0.c0, vt0.c1, rt0.c2 FROM t0, rt0 INNER JOIN vt0 ON TRIM(((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))) GROUP BY t0.c0, vt0.c0, t0.c43, rt0.c3, rt0.c0, vt0.c1, rt0.c2 HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c43, rt0.c3, rt0.c0, vt0.c1, rt0.c2 FROM t0, rt0 INNER JOIN vt0 ON TRIM(((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))) GROUP BY t0.c0, vt0.c0, t0.c43, rt0.c3, rt0.c0, vt0.c1, rt0.c2 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c43, rt0.c3, rt0.c0, vt0.c1, rt0.c2 FROM t0, rt0 INNER JOIN vt0 ON TRIM(((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))) GROUP BY t0.c0, vt0.c0, t0.c43, rt0.c3, rt0.c0, vt0.c1, rt0.c2 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE (((((((rt0.c2)>=(rt0.c2)))AND(((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))))OR(CASE WHEN '-1813694385' THEN rt0.c2 ELSE rt0.c1 END))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c2)>=(rt0.c2)))AND(((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))))OR(CASE WHEN '-1813694385' THEN rt0.c2 ELSE rt0.c1 END))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE (((((((((rt0.c2)>=(rt0.c2)))AND(((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))))OR(CASE WHEN '-1813694385' THEN rt0.c2 ELSE rt0.c1 END))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0 FROM v0, t0, vt0, rt0;
SELECT DISTINCT rt0.c0 FROM v0, t0, vt0, rt0 WHERE (((((v0.c0)+(rt0.c3)))&(((rt0.c1)AND(vt0.c1))))) UNION SELECT DISTINCT rt0.c0 FROM v0, t0, vt0, rt0 WHERE ((NOT (((((v0.c0)+(rt0.c3)))&(((rt0.c1)AND(vt0.c1))))))) UNION SELECT DISTINCT rt0.c0 FROM v0, t0, vt0, rt0 WHERE (((((((v0.c0)+(rt0.c3)))&(((rt0.c1)AND(vt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM v0, t0, vt0, rt0;
SELECT vt0.c1 FROM t0, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM t0, vt0 WHERE (((((((((((t0.c0) IS TRUE))OR(((t0.c43)-(vt0.c0)))))AND(vt0.c1)))OR((~ (vt0.c0)))))AND(((t0.c43) NOTNULL)))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM t0, vt0 WHERE ((NOT (((((((((((t0.c0) IS TRUE))OR(((t0.c43)-(vt0.c0)))))AND(vt0.c1)))OR((~ (vt0.c0)))))AND(((t0.c43) NOTNULL)))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM t0, vt0 WHERE (((((((((((((t0.c0) IS TRUE))OR(((t0.c43)-(vt0.c0)))))AND(vt0.c1)))OR((~ (vt0.c0)))))AND(((t0.c43) NOTNULL)))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM t0, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, v0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, v0 GROUP BY vt0.c1 HAVING SUM((((TOTAL(MAX(COUNT(vt0.c0)))))<((MIN(vt0.c1))))) UNION ALL SELECT vt0.c1 FROM vt0, v0 GROUP BY vt0.c1 HAVING (NOT (SUM((((TOTAL(MAX(COUNT(vt0.c0)))))<((MIN(vt0.c1))))))) UNION ALL SELECT vt0.c1 FROM vt0, v0 GROUP BY vt0.c1 HAVING ((SUM((((TOTAL(MAX(COUNT(vt0.c0)))))<((MIN(vt0.c1)))))) ISNULL);
SELECT vt0.c1, v0.c0, vt0.c0, rt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON ((((rt0.c1) ISNULL)) NOT BETWEEN (((((v0.c0)AND(rt0.c1)))OR(vt0.c0))) AND (((vt0.c0)*(vt0.c1)))) INNER JOIN rt0 ON (- (((rt0.c2) NOT NULL)));
SELECT DISTINCT rt0.c3 FROM t0, rt0, vt0;
SELECT DISTINCT rt0.c3 FROM t0, rt0, vt0 WHERE ((((((rt0.c2))==(('sU_D')))) IS TRUE)) UNION SELECT DISTINCT rt0.c3 FROM t0, rt0, vt0 WHERE ((NOT ((((((rt0.c2))==(('sU_D')))) IS TRUE)))) UNION SELECT DISTINCT rt0.c3 FROM t0, rt0, vt0 WHERE ((((((((rt0.c2))==(('sU_D')))) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c3 FROM t0, rt0, vt0;
SELECT rt0.c0, rt0.c3, vt0.c1 FROM v0, vt0, rt0 GROUP BY rt0.c0, rt0.c3, vt0.c1;
SELECT rt0.c0, rt0.c3, vt0.c1 FROM v0, vt0, rt0 WHERE (0.46273960163672645) GROUP BY rt0.c0, rt0.c3, vt0.c1 UNION SELECT rt0.c0, rt0.c3, vt0.c1 FROM v0, vt0, rt0 WHERE ((NOT (0.46273960163672645))) GROUP BY rt0.c0, rt0.c3, vt0.c1 UNION SELECT ALL rt0.c0, rt0.c3, vt0.c1 FROM v0, vt0, rt0 WHERE (((0.46273960163672645) ISNULL)) GROUP BY rt0.c0, rt0.c3, vt0.c1;
SELECT rt0.c0, rt0.c3, vt0.c1 FROM v0, vt0, rt0 GROUP BY rt0.c0, rt0.c3, vt0.c1;
SELECT ALL v0.c0, rt0.c2, rt0.c0 FROM rt0, t0, v0 GROUP BY v0.c0, rt0.c2, rt0.c0;
SELECT ALL v0.c0, rt0.c2, rt0.c0 FROM rt0, t0, v0 GROUP BY v0.c0, rt0.c2, rt0.c0 HAVING t0.c43 UNION ALL SELECT v0.c0, rt0.c2, rt0.c0 FROM rt0, t0, v0 GROUP BY v0.c0, rt0.c2, rt0.c0 HAVING (NOT (t0.c43)) UNION ALL SELECT v0.c0, rt0.c2, rt0.c0 FROM rt0, t0, v0 GROUP BY v0.c0, rt0.c2, rt0.c0 HAVING ((t0.c43) ISNULL);
SELECT ALL v0.c0, rt0.c2, rt0.c0 FROM rt0, t0, v0 GROUP BY v0.c0, rt0.c2, rt0.c0;
SELECT ALL v0.c0, rt0.c2, rt0.c0 FROM rt0, t0, v0 GROUP BY v0.c0, rt0.c2, rt0.c0 HAVING t0.c43 UNION ALL SELECT v0.c0, rt0.c2, rt0.c0 FROM rt0, t0, v0 GROUP BY v0.c0, rt0.c2, rt0.c0 HAVING (NOT (t0.c43)) UNION ALL SELECT v0.c0, rt0.c2, rt0.c0 FROM rt0, t0, v0 GROUP BY v0.c0, rt0.c2, rt0.c0 HAVING ((t0.c43) ISNULL);
SELECT ALL v0.c0, rt0.c2, rt0.c0 FROM rt0, t0, v0 GROUP BY v0.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, t0.c0 FROM rt0, t0;
SELECT rt0.c1, t0.c0 FROM rt0, t0 WHERE (CASE (x'' IN ())  WHEN ((rt0.c0)<<(rt0.c3)) THEN ((rt0.c1)<>(t0.c0)) WHEN (~ (rt0.c3)) THEN (~ (rt0.c0)) WHEN ((t0.c43)OR(rt0.c3)) THEN ((rt0.c1) IS FALSE) END) UNION ALL SELECT rt0.c1, t0.c0 FROM rt0, t0 WHERE ((NOT (CASE (x'' IN ())  WHEN ((rt0.c0)<<(rt0.c3)) THEN ((rt0.c1)!=(t0.c0)) WHEN (~ (rt0.c3)) THEN (~ (rt0.c0)) WHEN ((t0.c43)OR(rt0.c3)) THEN ((rt0.c1) IS FALSE) END))) UNION ALL SELECT ALL rt0.c1, t0.c0 FROM rt0, t0 NOT INDEXED WHERE (((CASE (x'' IN ())  WHEN ((rt0.c0)<<(rt0.c3)) THEN ((rt0.c1)!=(t0.c0)) WHEN (~ (rt0.c3)) THEN (~ (rt0.c0)) WHEN ((t0.c43)OR(rt0.c3)) THEN ((rt0.c1) IS FALSE) END) ISNULL));
SELECT ALL rt0.c1, t0.c0 FROM rt0, t0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c3, vt0.c1, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c3, vt0.c1, vt0.c0 FROM vt0, rt0 WHERE (CAST(((vt0.c1)|(vt0.c1)) AS NUMERIC)) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c3, vt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT (CAST(((vt0.c1)|(vt0.c1)) AS NUMERIC)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c3, vt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((CAST(((vt0.c1)|(vt0.c1)) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c3, vt0.c1, vt0.c0 FROM vt0, rt0;
SELECT t0.c43 FROM t0 GROUP BY t0.c43;
SELECT ALL t0.c43 FROM t0 WHERE (((((('0.7227171167948248'))>((t0.c43)))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c43))) AND ((t0.c43 IN (t0.c43))))) GROUP BY t0.c43 UNION SELECT ALL t0.c43 FROM t0 WHERE ((NOT (((((('0.7227171167948248'))>((t0.c43)))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c43))) AND ((t0.c43 IN (t0.c43))))))) GROUP BY t0.c43 UNION SELECT ALL t0.c43 FROM t0 WHERE (((((((('0.7227171167948248'))>((t0.c43)))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c43))) AND ((t0.c43 IN (t0.c43))))) ISNULL)) GROUP BY t0.c43;
SELECT t0.c43 FROM t0 GROUP BY t0.c43;
SELECT ALL t0.c43, rt0.c3, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, t0.c0 FROM vt0, t0, rt0 GROUP BY t0.c43, rt0.c3, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, t0.c0;
SELECT t0.c43, rt0.c3, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, t0.c0 FROM vt0, t0, rt0 GROUP BY t0.c43, rt0.c3, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, t0.c0 HAVING x'' UNION ALL SELECT ALL t0.c43, rt0.c3, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, t0.c0 FROM vt0, t0, rt0 GROUP BY t0.c43, rt0.c3, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, t0.c0 HAVING (NOT (x'')) UNION ALL SELECT t0.c43, rt0.c3, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, t0.c0 FROM vt0, t0, rt0 GROUP BY t0.c43, rt0.c3, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, t0.c0 HAVING ((x'') ISNULL);
SELECT ALL t0.c43, rt0.c3, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, t0.c0 FROM vt0, t0, rt0 GROUP BY t0.c43, rt0.c3, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, t0.c0;
SELECT t0.c43, rt0.c3, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, t0.c0 FROM vt0, t0, rt0 GROUP BY t0.c43, rt0.c3, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, t0.c0 HAVING x'' UNION ALL SELECT ALL t0.c43, rt0.c3, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, t0.c0 FROM vt0, t0, rt0 GROUP BY t0.c43, rt0.c3, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, t0.c0 HAVING (NOT (x'')) UNION ALL SELECT t0.c43, rt0.c3, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, t0.c0 FROM vt0, t0, rt0 GROUP BY t0.c43, rt0.c3, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, t0.c0 HAVING ((x'') ISNULL);
SELECT ALL t0.c43, rt0.c3, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, t0.c0 FROM vt0, t0, rt0 GROUP BY t0.c43, rt0.c3, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c2, t0.c0;
SELECT ALL vt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0;
SELECT vt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0 WHERE (((((rt0.c0)%(rt0.c0)))<(json_extract(vt0.c1, vt0.c1)))) UNION ALL SELECT vt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0 WHERE ((NOT (((((rt0.c0)%(rt0.c0)))<(json_extract(vt0.c1, vt0.c1)))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0 WHERE (((((((rt0.c0)%(rt0.c0)))<(json_extract(vt0.c1, vt0.c1)))) ISNULL));
SELECT ALL vt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN t0 ON (t0.c43 IN ()) CROSS JOIN vt0 ON CASE CASE WHEN t0.c43 THEN vt0.c1 ELSE rt0.c3 END  WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN t0.c43 END INNER JOIN v0 ON ((((t0.c0)<>(vt0.c0))) IS FALSE);
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN t0 ON (t0.c43 IN ()) CROSS JOIN vt0 ON CASE CASE WHEN t0.c43 THEN vt0.c1 ELSE rt0.c3 END  WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN t0.c43 END INNER JOIN v0 ON ((((t0.c0)<>(vt0.c0))) IS FALSE) WHERE (((((t0.c0)AND(CASE 0.7054794474642561  WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c3 THEN t0.c43 WHEN rt0.c2 THEN t0.c0 ELSE t0.c0 END)))OR(((((((((t0.c0)AND(rt0.c2)))OR(rt0.c3)))AND(t0.c43)))AND(vt0.c0))))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN t0 ON (t0.c43 IN ()) CROSS JOIN vt0 ON CASE CASE WHEN t0.c43 THEN vt0.c1 ELSE rt0.c3 END  WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN t0.c43 END INNER JOIN v0 ON ((((t0.c0)!=(vt0.c0))) IS FALSE) WHERE ((NOT (((((t0.c0)AND(CASE 0.7054794474642561  WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c3 THEN t0.c43 WHEN rt0.c2 THEN t0.c0 ELSE t0.c0 END)))OR(((((((((t0.c0)AND(rt0.c2)))OR(rt0.c3)))AND(t0.c43)))AND(vt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN t0 ON (t0.c43 IN ()) CROSS JOIN vt0 ON CASE CASE WHEN t0.c43 THEN vt0.c1 ELSE rt0.c3 END  WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN t0.c43 END INNER JOIN v0 ON ((((t0.c0)<>(vt0.c0))) IS FALSE) WHERE (((((((t0.c0)AND(CASE 0.7054794474642561  WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c3 THEN t0.c43 WHEN rt0.c2 THEN t0.c0 ELSE t0.c0 END)))OR(((((((((t0.c0)AND(rt0.c2)))OR(rt0.c3)))AND(t0.c43)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN t0 ON (t0.c43 IN ()) CROSS JOIN vt0 ON CASE CASE WHEN t0.c43 THEN vt0.c1 ELSE rt0.c3 END  WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN t0.c43 END INNER JOIN v0 ON ((((t0.c0)<>(vt0.c0))) IS FALSE);
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 WHERE (rt0.c3) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE ((NOT (rt0.c3))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0 WHERE (((rt0.c3) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING MIN(x'f5b0') UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (MIN(x'f5b0'))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((MIN(x'f5b0')) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING MIN(x'f5b0') UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (MIN(x'f5b0'))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((MIN(x'f5b0')) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT SUM(((vt0.c1)>(t0.c0)) COLLATE BINARY) FROM rt0, t0, v0, vt0;
