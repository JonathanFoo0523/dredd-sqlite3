-- Time: 2024/06/08 22:12:24
-- Database: database20
-- Database version: 3.40.0
-- seed value: 3154819120
PRAGMA cache_size = 50000; -- 12ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 INT , +c4 TEXT ); -- 1ms;
REINDEX BINARY; -- 1ms;
REINDEX; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES (x'1b27', NULL, 1999902087, 0.08379465133504438, 1.999902087E9); -- 0ms;
PRAGMA journal_mode = PERSIST; -- 0ms;
PRAGMA temp.cell_size_check = true; -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT (((~ (rt0.c4)))*(((rt0.c0)>(rt0.c1)))) FROM rt0 WHERE (NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1, c4, c0) VALUES (x'', NULL, x'', 0.9040059943943661); -- 0ms;
PRAGMA legacy_file_format = true; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-1251556368 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-17276149 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '-2132081244 sz=780928318 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE '1999902087'  WHEN x'' THEN x'' END)OR(x'' COLLATE RTRIM)))AND((('-729863383') NOT BETWEEN ('-1303599018') AND ('FVXᖇ#/Y1')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'a3dc')+(x''))) NOT BETWEEN (((((-7.29863383E8)AND('-17276149')))OR(NULL))) AND ((~ (x'335d')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1.251556368E9)) NOT BETWEEN (((('0.9040059943943661') ISNULL))) AND ((LIKELIHOOD(0.08379465133504438, 0.5166851941183741)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=26102848 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-17276149'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=1375385206'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=780928318'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -23917429 sz=-1251556368'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2001041621 sz=-381799965 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((NULL IN ()))AND(ABS(0.320107084166545))))AND(CASE 0x4c41ef75  WHEN '-1303599018' THEN NULL ELSE x'3f73' END)))AND(((0x2e8c053e) ISNULL))))AND('-1770025035' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '-1764767963 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1744112106 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN ()) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-55355894 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '-234903041 -543358660'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((0.9601547605168775 IN ()) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-17276149 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '1999902087 -2128326463 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -1572584374'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-729863383 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' sz=-2128326463 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '239594064 -50846288 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=1193303417 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=276400478'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '-244035618'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 5ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE ''  WHEN '' THEN '' WHEN 0.6065127716922946 THEN NULL WHEN '-1433056952' THEN 26102848 END)&(((NULL)|(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=722713889 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1251556368'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-104969254 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1309613891'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '2001041621 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=1258887627 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.987300745035211 IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_COMPILEOPTION_USED(''))<(((('-15399730')) NOT BETWEEN ((NULL)) AND ((x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (HEX(DISTINCT '	'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=315994764 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '-1186682262 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=239594064'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-7.29863383E8) IS FALSE))-((('-381799965')>=(x'84888279')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('-1770025035') IS TRUE)) BETWEEN ((- (0.053048178188946915))) AND (0X5e92846c COLLATE BINARY)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-715621299'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (-5.5355894E7)))>=(((((((((((((0.14754823577962306)OR(NULL)))OR(x'')))OR(x'')))AND(NULL)))AND('-381799965')))AND(NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 2 sz=-685136408 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '0 sz=728632879 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1279389557'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(NULL AS REAL) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7382950873331623)) NOT BETWEEN (((((('')OR(x'')))AND('711367305')))) AND ((x'' COLLATE BINARY))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('*A|6L.p')) NOT BETWEEN ((0.17254584275100027)) AND ((NULL))) AS INTEGER); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'e411282c', x'', -1.572584374E9, NULL, NULL, '&7', -511607227)) NOT BETWEEN (((('2킨op') NOT BETWEEN (x'') AND (0.8347262704887267)), CASE '	*'  WHEN 0.057708625520185075 THEN NULL END, (NULL IN ()), (x'' IN ()), ((0.8394366695478345) NOT BETWEEN (x'') AND ('-1303599018')), ((0X17adb7a2)IS(1430176055)), ((((-594104191)OR('0.6065127716922946')))AND(x'47c3')))) AND (((('0.08379465133504438') NOTNULL), NULL COLLATE RTRIM, (('FVXᖇ#/Y1')<<(0.004875539752272839)), (~ (1583585876)), CASE WHEN 'EMH7?[2 ' THEN '5l' ELSE NULL END, 'n惱d', ((('1155585215'))==((-1.04969254E8)))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '2 sz=872480883 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'd('; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=872480883 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=435472833 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((1.77334095E8)OR('N0ch')))AND(0.10721097691808124))  WHEN CAST(x'' AS INTEGER) THEN (('392114947') NOT NULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1929522006 sz=-2063605619'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2063605619 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-1764767963 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-1186682262 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1 sz=-1295985985'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NOT (x'a5b51ac0')), NULL, CASE 0.6065127716922946  WHEN '-2128326463' THEN NULL END))>=(((NOT ('-23917429')), ((((((((0X17adb7a2)AND(x'ba87e812')))OR(x'')))OR(1.375385206E9)))OR(NULL)), LENGTH(x'c8ea5bce')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((('**o)_J]') NOT BETWEEN (x'') AND (NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('') NOT BETWEEN ('-408752482') AND (0.892970741460357)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-81323066 sz=-2063605619 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-288069727 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((x'8ea0')OR(0Xffffffffb2c0d2bf)))OR(-1.457991512E9)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1583585876 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1674026743 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '0 sz=-1572584374 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=236145333 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' sz=-534784652'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LTRIM(0.7858555825449473, '-1196005605'))LIKE((- (0X493f9fb6)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=392114947'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' sz=872480883 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0Xffffffffa5dafdc4 THEN 0.7382950873331623 END COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '276400478 sz=-1653139080 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.2828011404961983) BETWEEN ('') AND (0.126694433321915))))!=((TRIM(0.8076441572309218)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '397260706 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (NULL) AND (NULL)))&(((x'8b88')OR(-1.251556368E9)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((0x3c57e244)AND(0.8076441572309218)))AND('8k<[n')))<<(NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('6S' IN (1.012392516E9)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1786084634 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')IS(NULL)))*(((NULL)LIKE(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-1777579765 -104969254'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(DISTINCT NULL, '66102008'))*(((0.392639763765936) NOT BETWEEN (NULL) AND (1031796714)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' sz=-2063605619'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '949203459 sz=-500641319'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=854404230 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-864441405 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((((((NULL)AND(NULL)))OR('251649854')))OR(0.6846801369890568)))OR('6s'))  WHEN ((x'') NOT NULL) THEN (((x'4724', NULL, 0.16047447980083074)) BETWEEN ((2.6102848E7, 0.983087386332805, x'')) AND ((0.4261335567894817, 0.9051162297528798, ','))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('~,Ft9c(') BETWEEN (NULL) AND ('1375385206'))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((1.786084634E9)IS('')) AS BLOB); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-233017932 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') ISNULL)) NOT BETWEEN ('1586660460') AND (CAST(NULL AS BLOB))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)<=('-23917429')))OR((~ (0.9958630439401357)))))OR((('>.pP6') IS TRUE))))AND(CAST(x'baf3' AS REAL))))AND((('')LIKE(0.027897588613001956)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '872480883 0 sz=392114947'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1671746202 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.8513661330301692) NOT BETWEEN ('251649854') AND ('rS')) THEN TIME('0.10721097691808124', x'', x'', 'z ', 0.24277278861405238) WHEN (~ (x'')) THEN PRINTF(NULL) WHEN (((('1457390559')AND('0.4261335567894817')))OR('1')) THEN x'' ELSE CAST(x'' AS TEXT) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1793402754 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1763276152 sz=67351155'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '391823485 -544643560 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '0 sz=1633249144 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '0 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-594104191 sz=1772640839 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1155585215')OR(0.01604335011077107)))AND(x'')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '2 sz=-929996977 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((''))<((NULL))) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT NULL) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-1382994289 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1913148243 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(UPPER('-17276149') AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-17276149 2069577649 sz=-909033622'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '401116488 sz=2007241011'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1674618872', '-1441191128', 0X6b375afb)) NOT BETWEEN (('y(N' COLLATE BINARY, ((0.027897588613001956)<=('0.8394366695478345')), (NULL IN ()))) AND ((CAST(NULL AS TEXT), ((0.7582463591440755)IS NOT(0.33600689465546396)), ((('l')) BETWEEN (('a')) AND (('')))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffffe7daa127)AND(((x'') IS TRUE))))AND((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(x''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (x'') AND (x''))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' sz=284191653'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' sz=261377432 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '-1748001263 0 sz=-1971510373 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('9m%!') NOT BETWEEN (NULL) AND (x''))) BETWEEN ((~ (1645025809))) AND (((((0.37535493946949827)AND(x'')))AND('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1807997208 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE 0.8053769792126659; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((((((((((NULL)OR(-1271998913)))AND(NULL)))OR('<g')))AND('-1770025035')))AND(NULL)))AND(0Xa91e74f)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '4 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.21506872035880364) NOT BETWEEN (NULL) AND ('147651834')))AND(((((x'ef07')OR(x'51c5')))AND(-1.764767963E9)))))OR(x'' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '2124670133 sz=53852844'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=215260207 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)IS NOT(NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1693295306 sz=-1196005605 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE(0x77341587 COLLATE BINARY, x'' COLLATE BINARY, '.'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 sz=61757194 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' sz=-886041979 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'8fa7' COLLATE RTRIM) BETWEEN (((0xffffffff8eba53a4)OR('479409811'))) AND (((x'')IS NOT('GE')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('728632879') IS FALSE))/(((NULL)IS('F]')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(DISTINCT '1EC]')) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-140904040 0 sz=-1861521731 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '2 sz=-50846288 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((json_insert('-1303599018', '}t', x'')))==((((0.4864936208968522) ISNULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE TYPEOF(0xffffffff9aeaf49d)  WHEN ((0.9180337163516901) BETWEEN ('K.#<') AND (NULL)) THEN (('-1162167694') BETWEEN ('PW') AND (x'')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-1361642845 sz=1364732732 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=37593127 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((((((((((0x69a85a47)AND('1205308253')))AND(0.5739198093010658)))OR(NULL)))OR(0.7382950873331623)))) AND ((((0.5343527465781482)|(0Xffffffffe93e31e3))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1877888404 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((NULL)AND(x'')))OR('-97316901')))AND('rCf-K%J)')))AND('-1617357206')))AND((('직婇')AND(NULL)))))AND(998647813)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '780928318 0 sz=712006012 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('1199582646' IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1475821477 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=26102848 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -1642477258 sz=-1693960968 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')AND('nᄳ{-Z')))OR('-1087807247')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=241207638'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE BINARY AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL) IS TRUE)))>((x'afff'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-342784011 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1430176055 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1914864876 sz=841865975 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' sz=-1775950999 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '1645025809'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('as' IN ()) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '618271866 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(TRIM('') AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' sz=-909033622 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1367738255 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' sz=-698180873 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1674026743'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((NULL))>(('-840842928'))) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-1072398407'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-1303599018 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1251556368 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=111384900 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '924207420 -1912187818 sz=1171330367'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '-1512374844' COLLATE NOCASE THEN (('') ISNULL) WHEN (((x'')) NOT BETWEEN (('')) AND (('-1326174221'))) THEN (+ (NULL)) WHEN ((('	', '-244035618', 0.4864936208968522)) BETWEEN (('', 'gT-ega㹫UP', x'')) AND (('De', NULL, NULL))) THEN TYPEOF(DISTINCT 0.19382966597807205) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-685136408 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=277263081 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' sz=1729369192 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('ⵦB' IN (-1.087807247E9, 0.6886864585229827))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1208550180'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '1341314653 sz=-1781546471 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '0 sz=-1748001263 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((NULL COLLATE NOCASE)) AND ((0x3198bc94 COLLATE NOCASE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'c45c')||(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '614196430'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1539981027'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-493856760'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1583585876'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=221823922 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((0.05671772004949516)AND(-477463678)))AND(NULL)))OR((NOT ('0.5739198093010658')))))AND(CASE WHEN NULL THEN NULL ELSE x'' END)))OR(CASE WHEN x'4431' THEN NULL ELSE 0.9040059943943661 END)))OR(((x'') BETWEEN (NULL) AND ('198606211')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' sz=-1374488395 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-616051822 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' sz=2092278571 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-23917429 sz=-1163692127 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-1504450417 sz=-1572584374 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'')IS(0.39531600132145517))  WHEN (('I3<z>룛⬙') NOT BETWEEN (NULL) AND (NULL)) THEN ((0.4261335567894817) ISNULL) WHEN x'' COLLATE BINARY THEN 0.07899559442247939 WHEN (('br')>=(-1395944301)) THEN ((NULL) NOT BETWEEN ('') AND (x'')) ELSE NULL COLLATE BINARY END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(((0.8924305283611825) NOT BETWEEN (NULL) AND ('6S')), ((((((((((((NULL)OR('tVwF')))AND(x'8bf6')))OR(NULL)))OR('& d>Q')))OR('177334095')))AND('-493273609'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE IFNULL(NULL, 0.3342984747238772)  WHEN CASE WHEN 0.37636922452428134 THEN x'' WHEN NULL THEN 0x44cfb2c2 WHEN 0x476fe9ff THEN 315994764 ELSE NULL END THEN CASE WHEN x'' THEN x'bef2' WHEN '鸑E7Tseconds*' THEN NULL WHEN ')2' THEN NULL END END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=750729632 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=662171003 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)||('722713889')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))%(CAST(x'd2c7' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.37535493946949827  WHEN NULL COLLATE BINARY THEN ((-1e500)>>('177334095')) ELSE x'' END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN (HEX(DISTINCT 0.41308263571619885)) AND (((0.4885563817531243) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1327837796 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE 'u9*T/'  WHEN NULL THEN '871389279' WHEN '*L%2_瀐,#' THEN NULL WHEN x'c20d' THEN x'6cd8' ELSE '435472833' END AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-1303599018'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '1836746987 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((435697155) BETWEEN (NULL) AND (NULL))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-543358660'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '1775877567 603579544 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' sz=722713889'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-1744112106 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' sz=-999171757'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=2069577649'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '1836566639'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '4'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-76917074 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '-1510098338 1073361386'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (1282716408)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-23917429 sz=-864441405 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (NULL COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.3671222523530395 IN ('gv龶?~Z<au'))) NOT BETWEEN (NULL COLLATE BINARY) AND ((267692097 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-701172181 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((x'26f5')LIKE(0x493f9fb6))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (0.8513661330301692) AND ('ཱྀ3k')))|(('397260706' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1068199629 COLLATE RTRIM)AND((0xffffffffc8915f4f IN ('-1920981485')))))OR(((x'')+(x'9549')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_patch(-1433056952, (((0.07899559442247939, '.X', '820096664'))<=(('554452863', '-1694114833', '~')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('B')-(NULL))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '-1971510373 sz=-1979340937 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE 0.4979314409066774  WHEN '-1106467441' THEN NULL END IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(NULL COLLATE RTRIM); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.23750989244803178 THEN NULL ELSE 0.10443995113696614 END COLLATE NOCASE; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=2016410125 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1789342620' COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN NULL THEN 0.33430909998811376 WHEN '&X^xgH' THEN x'' WHEN NULL THEN 'D' ELSE 0X297752e7 END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE json_insert(x'', LENGTH('0.0'), UPPER(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1793402754' IN ('1510460390', '﹅6級W'))) NOT BETWEEN (((('\D6ykwy'))>=((0.9757368664185256)))) AND (((((((((x'')AND('-2128326463')))OR(NULL)))AND('ꇃ}pw|')))AND('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-1895584997'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '2 sz=794167135 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=23060132 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') BETWEEN ('Ag	^a') AND (-5.4464356E8)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)AND('-1457991512')))OR(-2.44035618E8)))AND(0.6286897493788767)))OR(0.1806259882433202)))-(((('')) BETWEEN (('i')) AND (('284191653'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT '' COLLATE BINARY); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=808808902 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((json_type(-1.441191128E9))>(NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.6886864585229827') NOT NULL)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(x'29afe49d' AS NUMERIC) THEN ((NULL)LIKE(0Xffffffff96cfc725)) WHEN ((NULL) ISNULL) THEN (('90 ')>>(x'9a11')) WHEN (('-1030465844')/(x'')) THEN CASE WHEN NULL THEN 'U[(Ms?*w4t)' WHEN NULL THEN 1743058550 WHEN NULL THEN 0.1997570569551218 END ELSE ((x'')*(0xffffffff82bad4b5)) END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1887338258'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=670059561'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-1707737392 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT TRIM(x'6c86')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' sz=649855970 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL COLLATE RTRIM  WHEN CASE WHEN NULL THEN NULL END THEN ((0.4805204317239119)GLOB('1991277946')) ELSE (('ꇃ}pw|')=(0x1)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' sz=-1653817751 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' sz=-685136408 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x'')))>=(((((0.14620648756223942)AND('')))OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.8604208626644516))=((NULL))))>(NULLIF('1586660460', 0.002823170233878458))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=137335346 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((LIKELY(DISTINCT 0.919797204772546))AND(NULL COLLATE NOCASE)))OR(((NULL) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 sz=2031052458 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-50846288 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=1809134511 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE '-48317037'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-1290643450 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1746709097 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1193303417 -1584014009 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 'tVwF'  WHEN x'' THEN 'Uv' ELSE x'a57f' END) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-1770025035 sz=-670268237 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1973715374 sz=1092766322 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1105871497 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1770025035 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' sz=-405102297 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-511607227 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.26453297409111365 IN ()))AND(((x'a16b') BETWEEN (NULL) AND (x'')))))AND(CASE WHEN '-511607227' THEN 1368332877 ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '1155585215 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(7.22713889E8 AS INTEGER) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((('0.4979314409066774'))<=((0.048074336839878495))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CHAR((NOT (NULL)), ((NULL)<('-288069727')), CAST(x'' AS REAL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE GLOB((+ ('1457390559')), ((((((((NULL)AND(x'')))OR(x'e541')))OR(x'5609')))OR(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '2 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-325553449 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '1677396634 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('y(N')/(x'f3b9'))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-277811431 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1213134158' COLLATE BINARY) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('PW')) NOT BETWEEN (('854404230')) AND ((((NULL) NOTNULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '1586660460 711367305 sz=-187283067 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' sz=0 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE JULIANDAY((((((((((((('-770394813')AND(NULL)))AND(x'')))OR(NULL)))AND(NULL)))OR(NULL)))AND(NULL)), 0.3200019640625278 COLLATE RTRIM, CASE WHEN '*H' THEN x'' ELSE x'' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-288069727 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('1469708201' AS TEXT) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' sz=936803285 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '0 sz=-1572584374 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((236145333) BETWEEN (x'23a4') AND (x'59fb')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' sz=391823485 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1565959665 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((0.9747173782912274 IN ()) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) BETWEEN ('-514900123' COLLATE BINARY) AND (((x'')<<(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '772413709 sz=1031796714 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- ('-1186682262')))OR((((('-1793297973')AND(0.8610586626595756)))OR(NULL)))))OR((('1508131878') IS TRUE))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('') NOT BETWEEN ('') AND (0.25267978859490947)), (((0.8673939323863074)) BETWEEN ((0xffffffffa4bcbfed)) AND (('-81323066'))), ((x'de3c') NOT BETWEEN (0.9162728123759615) AND (x''))))<((0Xffffffffcdfe6f58, TIME(x'', '251649854', x''), (+ ('ཱྀ3k'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '1645025809 sz=820458178 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')IS NOT(x'40b9'))))>((((NULL)<<('1586660460'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'y(N'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ('jzB3i' IN ('-504821522')) THEN ('0.892970741460357' IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '599681961 sz=-479726082 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x''  WHEN ((((((((0.33600689465546396)OR(NULL)))AND(NULL)))OR(NULL)))OR(0.4090589362990803)) THEN CAST(0.3342984747238772 AS TEXT) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '632670140 sz=243277126 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=1254113237'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((0.7582463591440755, x'', NULL)) NOT BETWEEN ((0.032176163744325526, NULL, 0.6030094592438007)) AND ((x'', x'', NULL))))+(((NULL)>(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1138650771 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-570715026 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '0 -534666844 sz=-1158663087 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5475058851163553; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=854404230 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=284191653 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN -1445028424 THEN -1.196005605E9 WHEN NULL THEN NULL WHEN 0.6075965643872536 THEN 'MH' END)LIKE(NULL COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' sz=-1671746202 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-715621299')) BETWEEN (('jmM璝h	ky')) AND ((0.6374084975196003)))) NOT BETWEEN (NULL) AND ((((('6H#}쏖<5_')OR(0X652cd851)))AND(0.21506872035880364)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '2 2 sz=0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST(0.07516079097855244 AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATETIME(((x'ca44') BETWEEN (x'') AND ('1265152839')), ((x'')>=('Sl')), (((NULL, '', 0.29211372692490123))<=((0Xffffffffb1318400, NULL, '?望sqA(t')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1073320930 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-2128326463'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (570240948)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL COLLATE NOCASE))<(((~ (NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1236326234 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1075144099'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.4170286076028773 AS TEXT))%(((((((((0.7198268150531775)AND(0Xffffffff9bb4fdb0)))OR('952888906')))OR(NULL)))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(((((-376168028)OR(x'')))OR(NULL)), (NULL IN ())); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('Sm')=(0.793384112679049)))OR(0.9531263056012331)))OR(UNLIKELY(DISTINCT 0.002823170233878458))))OR((NULL IN (x'')))))AND((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 0 sz=1471324341 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=363806387 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1309613891 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((DATETIME(0.19580749845851908, x'', 0.6134950582308959, '-81323066', '-1303599018'))<=(((0.987300745035211) BETWEEN ('D5\n') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-9223372036854775808 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=815416657'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-1580404269 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-511607227'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-3.81799965E8)) NOT BETWEEN ((((('973534320')) BETWEEN (('-544643560')) AND ((NULL))))) AND ((((('')) NOT BETWEEN (('1195867992')) AND ((NULL)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-391716020 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-83390616 1251119608 sz=1903258468 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((((2056474130))!=((0Xffffffffd507c039))))AND((((((((('-2121119073')OR(x'')))AND('%smA]')))AND('C_')))OR(0.8073058394040565)))))OR(CASE 0x1bb6adfb  WHEN '-143131464' THEN 233256118 WHEN '!^fooU' THEN '<돀' WHEN x'' THEN '711367305' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=286935743 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1647417053', '-366791394', 0Xffffffffa371f229, '', 0.4962223673735313)) NOT BETWEEN ((((1969618746) NOT BETWEEN ('1099134401') AND (0Xfffffffffaca4116)), ((((0.33430909998811376)AND('1160042129')))AND(x'')), CAST(NULL AS TEXT), ((x'')<=(x'f238')), ((NULL) NOT BETWEEN ('-705639756') AND ('1363630013')))) AND ((((1644648759)+(NULL)), '', CAST('!u㺙lVTʵ|w' AS REAL), ((0.07417943156474305)>>(NULL)), ((1.031796714E9) ISNULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS TRUE)) NOT BETWEEN (((0.4338383813486708) NOT NULL)) AND (LIKELIHOOD(x'', 0.7842013186439659))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=9223372036854775807 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' sz=-1224967481 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 sz=-866000831 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')&(0.3015527393091223))) BETWEEN (((('*')) BETWEEN ((0.021345964415623864)) AND ((x'a6f8')))) AND ((NOT (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 sz=-543358660'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST('uH뉳9j' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE x''  WHEN x'' THEN '!]᳆eU!q' WHEN NULL THEN 0.020531309552895727 WHEN NULL THEN 0.9417520650203138 ELSE '0.9531263056012331' END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '-1441191128 sz=-912197451 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '-1441191128 sz=-1908941918 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.1913839682182975) BETWEEN ('26102848') AND (0.41308263571619885)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1502939809'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '-593999111'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((x'')OR(x'')))AND(NULL)))OR(0.42143423650574907)))OR(x'')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-864441405 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((1.583585876E9)LIKE('{p)c')))AND(((x'5e6d')<=('6>')))))AND(CASE WHEN 0.2881713251759286 THEN NULL ELSE x'' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.7088317491390262))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (TRIM(DISTINCT x'', -1370969259) IN ((~ (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-1623189408 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '-81323066 sz=-408752482'); -- 5ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=764955604 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-65271153 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.39531600132145517)GLOB(0xffffffff86d5b8fc)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '-38791984 4 sz=2068050305'); -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 1ms;
DELETE FROM sqlite_stat1; -- 4ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-929996977 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=872480883 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY)!=((((NULL, -1.777579765E9, 0.2565970780957917))<(('', '461268181', NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-450488757 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((json(''))) AND ((CAST(x'' AS BLOB)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'0895') NOT BETWEEN (NULL) AND ('h6C\*\rCe'))) BETWEEN (CASE 'I3<z>룛⬙'  WHEN 0xffffffff830c1b59 THEN 962585229 END) AND (((0.4236887565532833)%(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=315994764 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-2063605619 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=1063155125 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'') BETWEEN (NULL) AND (-446733708)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=177334095 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '66102008 sz=-334010746 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1087807247; -- 1ms;
DELETE FROM sqlite_stat1 WHERE -17276149; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) NOT BETWEEN ((NULL)) AND (((+ (0.42888658589809436))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL)|(1.258887627E9))  WHEN ((NULL) NOT BETWEEN ('-544643560') AND (NULL)) THEN ((((((((0Xffffffff97cf9e11)AND(0.4236887565532833)))AND(x'')))AND(0.3952446254908121)))OR(x'')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.07516079097855244)) NOT BETWEEN ((UPPER('G}뾳'))) AND ((json_patch(NULL, NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE 0.17852814797895566  WHEN x'' THEN '9&l>(Up*' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-929996977'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-1904941743'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER((('2069577649')IS(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1519011909 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.8795721327520791, '', NULL))<=((NULL, NULL, x''))))<<((('') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '2 sz=1929522006 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' sz=302216551 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.10443995113696614) NOT BETWEEN (0.05971181944200166) AND (x'c3d9'))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((TRIM(1241969582, '-1653139080')))==((((((((((-1.7276149E7)AND(x'5122')))AND(NULL)))AND(x'1677')))AND(x'949e'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS FALSE) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '401116488 2 sz=261377432'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1438645282')) NOT BETWEEN (((((0.5106140392833516))<((-1.65313908E9))))) AND ((NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension((((NULL)) BETWEEN (('L\G	k*讹JS')) AND ((0.3487119608114583))), ((0x41ce76d2) NOT BETWEEN (-1800023251) AND ('-104969254'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((-266734387)OR(NULL)))OR('1031796714')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-1474809829 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-55355894'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1922875437)) NOT BETWEEN ((CAST(x'' AS BLOB))) AND ((((161112979)IS NOT(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=525709567'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TYPEOF(NULL))>>(((NULL)GLOB(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '9835404'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 sz=-1408098021'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1653067573 -72283204 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'f86a' COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-1913148243 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.5558872937085252)|(x'')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 sz=-433102422 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2137630727 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN '0.2828011404961983' THEN NULL END)!=(CAST(x'' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-15399730 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=1391479790 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) NOT BETWEEN (0x493f9fb6) AND ('w%8')))AND(((-1913148243) NOTNULL))))AND(STRFTIME(NULL, -1303599018, '-1964077612', NULL, 0.3770247227586002))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.1283467915827472) NOT BETWEEN (1.279389557E9) AND ('~'))  WHEN (0.6297006445373704 IN ()) THEN (x'' IN ()) WHEN CAST(x'' AS REAL) THEN ((((((((((((x'7f96')OR(0.4736757577121439)))OR(NULL)))OR(0.9531263056012331)))OR(NULL)))AND(NULL)))OR('711367305')) WHEN (~ (x'')) THEN (('') IS TRUE) ELSE '<xBk5*)' COLLATE NOCASE END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1015667694'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) BETWEEN ((0.06422596183336315)) AND (('j\. ''沀'))))>=(CASE NULL  WHEN 'l' THEN '-1309613891' WHEN x'' THEN NULL WHEN 0.35819400198080653 THEN 0.3713728862456699 END)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 -421406344'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-775241879 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-234903041 0 sz=-543358660'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS((~ (1.375385206E9))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '1596718335 sz=1083564338 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((x'59b6')AND(0.8073058394040565)))OR(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(0.8255924055131283, '')) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(json_insert(0.11198762746443203, 0x3d1b778a, x'') AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' sz=949203459 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE NULL  WHEN NULL THEN '1193303417' END, ((0.983087386332805) IS FALSE), (('0.1997570569551218') BETWEEN (NULL) AND (NULL))))<=((((NULL)!=(NULL)), (((x'')) NOT BETWEEN ((0.41308263571619885)) AND ((0.053048178188946915))), CAST('-1309613891' AS NUMERIC)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.04371582105707916)<>(NULL))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.9302346577580012 AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((('1039876424')) BETWEEN (('-15399730')) AND (((('')AND(x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '1652590484'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=2043263243 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-568698720 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE 0Xffffffffd6b8fd55; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.20598524608876834)OR(-1658633338)))OR('-594104191')))<(((NULL) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-17276149'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('-729863383') NOT BETWEEN (0.39217044323903383) AND (0xffffffff845ef113)) THEN ((((0.1785571516604182)AND(x'')))AND('Gm')) ELSE '-737910762' COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('' COLLATE NOCASE IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=1645025809'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('330946622')) BETWEEN ((CAST('26102848' AS INTEGER))) AND (((('-1744112106') BETWEEN (x'') AND (0.9180337163516901))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1078722714 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '-1512374844'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 515286665 THEN 0Xffffffffe01fd574 WHEN 0Xffffffff87f2b353 THEN 'm-''7I컭t(' WHEN x'' THEN 0.3046262818683576 ELSE NULL END)AND(CAST(x'442a' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=342403320 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE 'n惱d'  WHEN NULL THEN NULL WHEN 'i3<z>룛⬙' THEN '-597759734' WHEN 0x6849e166 THEN -1.382994289E9 END AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' noskipscan'); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' sz=1213316362 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL)GLOB('-23917429')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'0f83'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'c18063ea')OR(CASE WHEN 0x50d5baa5 THEN '' WHEN -1295985985 THEN 0.5343527465781482 WHEN NULL THEN NULL ELSE x'' END)))AND((('') IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')OR(0.2503394669292933)))OR(x'20f8')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' sz=-1748001263 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2024085248 sz=-585319667'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-2001322396')*(-715621299 COLLATE BINARY)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1582735479 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) BETWEEN ((- ('r*늌E07#'))) AND ((((-1.777579765E9)) NOT BETWEEN ((1985239110)) AND ((0.26453297409111365))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.5159988426288168)AND(x'44ca')))OR(0.2896290981926378)))AND('1929522006')))OR(x''))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_patch(((x'')<=('1037258422')), CAST('-15399730' AS INTEGER)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('*o**')))>((('e-j3rU') NOT BETWEEN (-4.05102297E8) AND (0.6189841141640374)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '4 285717859 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X1f7dcef1 IN ()), -408752482 COLLATE NOCASE, 0x77341587))>((((x'') ISNULL), NULL, (+ (x'42f5'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=401116488 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-6555155 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELY(x''))>=((+ (0.10443995113696614)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('')) BETWEEN ((0.9051162297528798)) AND (('䪵0F8eZ'))))GLOB(((NULL)%(0.8410668952187984)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' sz=-616548413 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' sz=-882766398'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '2 1508701583 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_extract(x'', x'') COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((('fr'))==((x''))))OR(((((((((((((NULL)AND(x'')))AND(0.709785980296726)))OR('1012392516')))AND(0.505874569834855)))AND(NULL)))AND(0X61596778)))))OR(((0xffffffff8fe03312)%(NULL)))))AND(((0.46089205247664977)+(0.6323102461178288)))))AND((((('')OR('')))AND('p9QZ')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'35a1' COLLATE NOCASE)AND('-244035618')))OR(CASE '-288069727'  WHEN 0.6509247337571118 THEN '6e' ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((CASE WHEN '{}' THEN '1624282987' WHEN NULL THEN '2043909897' WHEN '-937585419' THEN '692239218' END)) AND ((UPPER(DISTINCT x'1a170e1a')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1705818015'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1107020658 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1406209030 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-544643560 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'8a62') NOT BETWEEN (x'1d477ce0') AND (0x3c57e244))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.26395659407042515)AND(LOWER(0.5302970922672423))))OR(CAST(-338330332 AS BLOB))))AND(((1071227649)LIKE(0.31196986827328776)))))AND('' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '0 sz=2137562193 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '2 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-623386325 -1571376651 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=3870149'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '4 2 sz=510512102 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1864309198 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.15153117051153797 AS TEXT)) BETWEEN (CAST(x'' AS INTEGER)) AND (CAST(x'' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '0 0 sz=-408752482 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('Zx') NOT NULL)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((('67351155', 0.9757368664185256, ''))>=((0.2978896486714828, '1212980891', '670180834'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(0Xffffffffb7b12784)) BETWEEN (rtreenode(NULL, NULL)) AND (((x'') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '649328696 sz=1732251320 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOT BETWEEN (x'') AND (-1608539727)) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('1928086865')AND(0.6811641511939936)))AND('grt'))))>=(((x'' IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-65832657 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '-704556591 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1131323388 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '1035411011 sz=1772640839 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.10396548750752)AND('\nB䖪Me9')))OR(NULL))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1697875890 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' sz=532390406 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '-17276149 -537699485'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '0 sz=-1547808628'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 2 sz=-1071913104 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1569875319 sz=251649854 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '1566644337 sz=-764726872 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_GET((('^g')|(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND(x'61f8')))AND(NULL)))<=(((0.9014319789602772) IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '0 4 sz=-1309613891 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') IS TRUE) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-1433056952 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' sz=-2088923878 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-55366684 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=223501568'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '2 0 sz=-104969254 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT (NULL IN ())); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '-1784118866 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-328481082 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.1997570569551218)LIKE(HEX('-342269470'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=1457390559 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN (((('') BETWEEN (NULL) AND (NULL)))) AND ((NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ((2.36145333E8)<>(0.7569171821482186))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '0 sz=1249848225 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA foreign_keys; -- 0ms;
REINDEX; -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES ('1457390559'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c3, c2) VALUES (x'', '-890795325'); -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c3, c1, c0) VALUES ('401116488', NULL, 0.6065127716922946, '2 5>\rx￿d'); -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, c3, c4); -- 1ms;
UPDATE OR FAIL rt1 SET c3=NULL; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA temp.locking_mode; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c1='**o)_J]'; -- 0ms;
PRAGMA short_column_names; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 INSTEAD OF INSERT ON v0 BEGIN SELECT RAISE(IGNORE);END; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c4, c2, c0) VALUES (0xffffffffd333d047, 0.8439205850864996, 'HQw/?SL昘d'), ('1260069119', x'', '0.6030094592438007'), ('1104850163', 0.18286506807228287, '0.2828011404961983'), (0.24468543725221448, 'E', x''), ('.', '', NULL); -- 0ms;
INSERT OR ABORT INTO rt0(c2) VALUES (0.3701912374247899); -- 0ms;
ANALYZE; -- 0ms;
UPDATE rt1 SET c2=x'' WHERE rt1.c0; -- 0ms;
PRAGMA temp.journal_size_limit = -6697391441311357552; -- 0ms;
END; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA soft_heap_limit = 5767720644659307668; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA temp.ignore_check_constraints; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((2007241011 COLLATE BINARY)||((- ('-1130117201')))); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c3, c1) VALUES (0.3311880706042627, NULL, NULL), (NULL, NULL, x''), ('-286162015', '1499937616', x'2132'); -- 0ms;
PRAGMA mmap_size = 3608062105293634858; -- 1ms;
PRAGMA temp.wal_autocheckpoint = 3268704340763474678; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR REPLACE rt0 SET (c3, c0)=(x'', NULL); -- 0ms;
PRAGMA temp.mmap_size; -- 0ms;
PRAGMA main.wal_autocheckpoint; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE temp; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
PRAGMA temp.ignore_check_constraints; -- 0ms;
ANALYZE temp; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(x'08f5') WHERE (((rt0.c2)<<(rt0.c1)) IN (((rt0.c2) NOTNULL))); -- 1ms;
UPDATE OR IGNORE rt0 SET (c4, c4, c3)=('6h#}쏖<5_', 0.7492826690474144, '-234903041'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE temp; -- 0ms;
PRAGMA temp.default_cache_size = 251649854; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.14704099941538973; -- 0ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c2)=(NULL, x'8575') WHERE (((((rt0.c2))=((rt0.c4))))+((rt0.c4 IN (rt0.c1, NULL)))); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
SELECT rt0.c3, rt0.c4 FROM rt0;
SELECT ALL rt0.c3, rt0.c4 FROM rt0 WHERE ((NULLIF(rt0.c0, rt0.c1) IN ())) UNION ALL SELECT ALL rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT ((NULLIF(rt0.c0, rt0.c1) IN ())))) UNION ALL SELECT ALL rt0.c3, rt0.c4 FROM rt0 WHERE ((((NULLIF(rt0.c0, rt0.c1) IN ())) ISNULL));
SELECT rt0.c3, rt0.c4 FROM rt0;
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt0, rt1, v0;
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt0, rt1, v0 WHERE ((((- (rt0.c4)))<>((((rt0.c3))<=((rt0.c4)))))) UNION SELECT DISTINCT rt1.c0, rt1.c2 FROM rt0, rt1, v0 WHERE ((NOT ((((- (rt0.c4)))<>((((rt0.c3))<=((rt0.c4)))))))) UNION SELECT DISTINCT rt1.c0, rt1.c2 FROM rt0, rt1, v0 WHERE ((((((- (rt0.c4)))!=((((rt0.c3))<=((rt0.c4)))))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt0, rt1, v0;
SELECT ALL v0.c0, rt1.c2, rt0.c4, rt1.c0, rt1.c3, rt0.c2, rt1.c1, rt0.c3 FROM rt0, v0, rt1 GROUP BY v0.c0, rt1.c2, rt0.c4, rt1.c0, rt1.c3, rt0.c2, rt1.c1, rt0.c3;
SELECT ALL v0.c0, rt1.c2, rt0.c4, rt1.c0, rt1.c3, rt0.c2, rt1.c1, rt0.c3 FROM rt0, v0, rt1 WHERE ((+ (rt0.c4)) COLLATE NOCASE) GROUP BY v0.c0, rt1.c2, rt0.c4, rt1.c0, rt1.c3, rt0.c2, rt1.c1, rt0.c3 UNION SELECT v0.c0, rt1.c2, rt0.c4, rt1.c0, rt1.c3, rt0.c2, rt1.c1, rt0.c3 FROM rt0, v0, rt1 WHERE ((NOT ((+ (rt0.c4)) COLLATE NOCASE))) GROUP BY v0.c0, rt1.c2, rt0.c4, rt1.c0, rt1.c3, rt0.c2, rt1.c1, rt0.c3 UNION SELECT v0.c0, rt1.c2, rt0.c4, rt1.c0, rt1.c3, rt0.c2, rt1.c1, rt0.c3 FROM rt0, v0, rt1 WHERE ((((+ (rt0.c4)) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0, rt1.c2, rt0.c4, rt1.c0, rt1.c3, rt0.c2, rt1.c1, rt0.c3;
SELECT ALL v0.c0, rt1.c2, rt0.c4, rt1.c0, rt1.c3, rt0.c2, rt1.c1, rt0.c3 FROM rt0, v0, rt1 GROUP BY v0.c0, rt1.c2, rt0.c4, rt1.c0, rt1.c3, rt0.c2, rt1.c1, rt0.c3;
SELECT ALL v0.c0, rt0.c2, rt0.c1, rt1.c4, rt1.c1, rt1.c3, rt0.c4, rt0.c3, rt1.c0, rt0.c0, rt1.c2 FROM v0, rt0, rt1 GROUP BY v0.c0, rt0.c2, rt0.c1, rt1.c4, rt1.c1, rt1.c3, rt0.c4, rt0.c3, rt1.c0, rt0.c0, rt1.c2;
SELECT v0.c0, rt0.c2, rt0.c1, rt1.c4, rt1.c1, rt1.c3, rt0.c4, rt0.c3, rt1.c0, rt0.c0, rt1.c2 FROM v0, rt0, rt1 GROUP BY v0.c0, rt0.c2, rt0.c1, rt1.c4, rt1.c1, rt1.c3, rt0.c4, rt0.c3, rt1.c0, rt0.c0, rt1.c2 HAVING (((GROUP_CONCAT(rt0.c2) COLLATE RTRIM))>((((SUM(MIN(AVG(0X3ea3d1b9)))) NOT BETWEEN (COUNT(*)) AND (TOTAL(rt1.c4)))))) UNION ALL SELECT v0.c0, rt0.c2, rt0.c1, rt1.c4, rt1.c1, rt1.c3, rt0.c4, rt0.c3, rt1.c0, rt0.c0, rt1.c2 FROM v0, rt0, rt1 GROUP BY v0.c0, rt0.c2, rt0.c1, rt1.c4, rt1.c1, rt1.c3, rt0.c4, rt0.c3, rt1.c0, rt0.c0, rt1.c2 HAVING (NOT ((((GROUP_CONCAT(rt0.c2) COLLATE RTRIM))>((((SUM(MIN(AVG(0X3ea3d1b9)))) NOT BETWEEN (COUNT(*)) AND (TOTAL(rt1.c4)))))))) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c1, rt1.c4, rt1.c1, rt1.c3, rt0.c4, rt0.c3, rt1.c0, rt0.c0, rt1.c2 FROM v0, rt0, rt1 GROUP BY v0.c0, rt0.c2, rt0.c1, rt1.c4, rt1.c1, rt1.c3, rt0.c4, rt0.c3, rt1.c0, rt0.c0, rt1.c2 HAVING (((((GROUP_CONCAT(rt0.c2) COLLATE RTRIM))>((((SUM(MIN(AVG(0X3ea3d1b9)))) NOT BETWEEN (COUNT(*)) AND (TOTAL(rt1.c4))))))) ISNULL);
SELECT rt0.c3, rt1.c4, rt0.c0, rt1.c0, rt1.c2, rt0.c2, rt0.c1, rt1.c1, rt0.c4 FROM rt0, rt1, v0;
SELECT rt0.c3, rt1.c4, rt0.c0, rt1.c0, rt1.c2, rt0.c2, rt0.c1, rt1.c1, rt0.c4 FROM rt0, rt1, v0 WHERE (HEX((rt1.c1 IN ()))) UNION ALL SELECT ALL rt0.c3, rt1.c4, rt0.c0, rt1.c0, rt1.c2, rt0.c2, rt0.c1, rt1.c1, rt0.c4 FROM rt0, rt1, v0 WHERE ((NOT (HEX((rt1.c1 IN ()))))) UNION ALL SELECT rt0.c3, rt1.c4, rt0.c0, rt1.c0, rt1.c2, rt0.c2, rt0.c1, rt1.c1, rt0.c4 FROM rt0, rt1, v0 WHERE (((HEX((rt1.c1 IN ()))) ISNULL));
SELECT rt0.c3, rt1.c4, rt0.c0, rt1.c0, rt1.c2, rt0.c2, rt0.c1, rt1.c1, rt0.c4 FROM rt0, rt1, v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((SQLITE_COMPILEOPTION_GET('-1604690340'))AND((- (rt0.c0)))))AND((- (rt0.c3))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((SQLITE_COMPILEOPTION_GET('-1604690340'))AND((- (rt0.c0)))))AND((- (rt0.c3))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((SQLITE_COMPILEOPTION_GET('-1604690340'))AND((- (rt0.c0)))))AND((- (rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c4;
SELECT ALL rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 WHERE (((((((((CAST(rt0.c2 AS REAL))AND(CAST(rt0.c1 AS BLOB))))OR(rt0.c1)))AND(((rt0.c3)*(rt0.c3)))))AND(((rt0.c3)<(rt0.c1))))) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 WHERE ((NOT (((((((((CAST(rt0.c2 AS REAL))AND(CAST(rt0.c1 AS BLOB))))OR(rt0.c1)))AND(((rt0.c3)*(rt0.c3)))))AND(((rt0.c3)<(rt0.c1))))))) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 WHERE (((((((((((CAST(rt0.c2 AS REAL))AND(CAST(rt0.c1 AS BLOB))))OR(rt0.c1)))AND(((rt0.c3)*(rt0.c3)))))AND(((rt0.c3)<(rt0.c1))))) ISNULL)) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c4;
SELECT rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c4;
SELECT rt1.c1, rt1.c3, rt0.c3, rt0.c0, rt0.c2 FROM rt0, rt1, v0 GROUP BY rt1.c1, rt1.c3, rt0.c3, rt0.c0, rt0.c2;
SELECT ALL rt1.c1, rt1.c3, rt0.c3, rt0.c0, rt0.c2 FROM rt0, rt1 NOT INDEXED, v0 GROUP BY rt1.c1, rt1.c3, rt0.c3, rt0.c0, rt0.c2 HAVING ((((rt0.c3) NOT NULL)) BETWEEN (GROUP_CONCAT(rt0.c4)) AND (MIN(rt1.c0))) UNION ALL SELECT ALL rt1.c1, rt1.c3, rt0.c3, rt0.c0, rt0.c2 FROM rt0, rt1, v0 GROUP BY rt1.c1, rt1.c3, rt0.c3, rt0.c0, rt0.c2 HAVING (NOT (((((rt0.c3) NOT NULL)) BETWEEN (GROUP_CONCAT(rt0.c4)) AND (MIN(rt1.c0))))) UNION ALL SELECT rt1.c1, rt1.c3, rt0.c3, rt0.c0, rt0.c2 FROM rt0, rt1, v0 GROUP BY rt1.c1, rt1.c3, rt0.c3, rt0.c0, rt0.c2 HAVING ((((((rt0.c3) NOT NULL)) BETWEEN (GROUP_CONCAT(rt0.c4)) AND (MIN(rt1.c0)))) ISNULL);
SELECT rt1.c1, rt1.c3, rt0.c3, rt0.c0, rt0.c2 FROM rt0, rt1, v0 GROUP BY rt1.c1, rt1.c3, rt0.c3, rt0.c0, rt0.c2;
SELECT ALL rt1.c1, rt1.c3, rt0.c3, rt0.c0, rt0.c2 FROM rt0, rt1 NOT INDEXED, v0 GROUP BY rt1.c1, rt1.c3, rt0.c3, rt0.c0, rt0.c2 HAVING ((((rt0.c3) NOT NULL)) BETWEEN (GROUP_CONCAT(rt0.c4)) AND (MIN(rt1.c0))) UNION ALL SELECT ALL rt1.c1, rt1.c3, rt0.c3, rt0.c0, rt0.c2 FROM rt0, rt1, v0 GROUP BY rt1.c1, rt1.c3, rt0.c3, rt0.c0, rt0.c2 HAVING (NOT (((((rt0.c3) NOT NULL)) BETWEEN (GROUP_CONCAT(rt0.c4)) AND (MIN(rt1.c0))))) UNION ALL SELECT rt1.c1, rt1.c3, rt0.c3, rt0.c0, rt0.c2 FROM rt0, rt1, v0 GROUP BY rt1.c1, rt1.c3, rt0.c3, rt0.c0, rt0.c2 HAVING ((((((rt0.c3) NOT NULL)) BETWEEN (GROUP_CONCAT(rt0.c4)) AND (MIN(rt1.c0)))) ISNULL);
SELECT rt1.c1, rt1.c3, rt0.c3, rt0.c0, rt0.c2 FROM rt0, rt1, v0 GROUP BY rt1.c1, rt1.c3, rt0.c3, rt0.c0, rt0.c2;
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE ((+ (((((((((rt1.c1)OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c3)))AND(rt1.c4))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT ((+ (((((((((rt1.c1)OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c3)))AND(rt1.c4))))))) UNION ALL SELECT * FROM rt1 WHERE ((((+ (((((((((rt1.c1)OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c3)))AND(rt1.c4))))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM rt1 NOT INDEXED, rt0;
SELECT DISTINCT * FROM rt1, rt0 WHERE (CASE ((rt0.c3)*(NULL))  WHEN NULL COLLATE NOCASE THEN (1630293594 IN ()) END) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((NOT (CASE ((rt0.c3)*(NULL))  WHEN NULL COLLATE NOCASE THEN (1630293594 IN ()) END))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE (((CASE ((rt0.c3)*(NULL))  WHEN NULL COLLATE NOCASE THEN (1630293594 IN ()) END) ISNULL));
SELECT DISTINCT * FROM rt1 NOT INDEXED, rt0;
SELECT ALL rt1.c0, rt0.c4, v0.c0, rt0.c0, rt1.c4 FROM rt0, v0, rt1 GROUP BY rt1.c0, rt0.c4, v0.c0, rt0.c0, rt1.c4;
SELECT rt1.c0, rt0.c4, v0.c0, rt0.c0, rt1.c4 FROM rt0, v0 NOT INDEXED, rt1 WHERE (((((((NULL)OR(rt0.c4)))AND(rt0.c1)))=(v0.c0))) GROUP BY rt1.c0, rt0.c4, v0.c0, rt0.c0, rt1.c4 UNION SELECT rt1.c0, rt0.c4, v0.c0, rt0.c0, rt1.c4 FROM rt0, v0, rt1 WHERE ((NOT (((((((NULL)OR(rt0.c4)))AND(rt0.c1)))==(v0.c0))))) GROUP BY rt1.c0, rt0.c4, v0.c0, rt0.c0, rt1.c4 UNION SELECT rt1.c0, rt0.c4, v0.c0, rt0.c0, rt1.c4 FROM rt0, v0, rt1 WHERE (((((((((NULL)OR(rt0.c4)))AND(rt0.c1)))==(v0.c0))) ISNULL)) GROUP BY rt1.c0, rt0.c4, v0.c0, rt0.c0, rt1.c4;
SELECT ALL rt1.c0, rt0.c4, v0.c0, rt0.c0, rt1.c4 FROM rt0, v0, rt1 GROUP BY rt1.c0, rt0.c4, v0.c0, rt0.c0, rt1.c4;
SELECT rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4;
SELECT ALL rt0.c1, rt0.c4 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c4 HAVING (((COUNT(*))+(rt0.c3)) IN ()) UNION ALL SELECT ALL rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4 HAVING (NOT ((((COUNT(*))+(rt0.c3)) IN ()))) UNION ALL SELECT rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4 HAVING (((((COUNT(*))+(rt0.c3)) IN ())) ISNULL);
SELECT rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4;
SELECT ALL rt0.c1, rt0.c4 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c4 HAVING (((COUNT(*))+(rt0.c3)) IN ()) UNION ALL SELECT ALL rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4 HAVING (NOT ((((COUNT(*))+(rt0.c3)) IN ()))) UNION ALL SELECT rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4 HAVING (((((COUNT(*))+(rt0.c3)) IN ())) ISNULL);
SELECT rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4;
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE (((CASE rt1.c4  WHEN rt1.c2 THEN rt1.c1 END) NOT NULL)) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((CASE rt1.c4  WHEN rt1.c2 THEN rt1.c1 END) NOT NULL)))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((CASE rt1.c4  WHEN rt1.c2 THEN rt1.c1 END) NOT NULL)) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM rt1, rt0, v0;
SELECT DISTINCT * FROM rt1, rt0, v0 WHERE (((((rt0.c4)/(rt0.c3))) BETWEEN (rt0.c0) AND (((((rt0.c1)AND(rt1.c2)))OR(rt0.c3))))) UNION SELECT DISTINCT * FROM rt1, rt0, v0 WHERE ((NOT (((((rt0.c4)/(rt0.c3))) BETWEEN (rt0.c0) AND (((((rt0.c1)AND(rt1.c2)))OR(rt0.c3))))))) UNION SELECT DISTINCT * FROM rt1, rt0, v0 WHERE (((((((rt0.c4)/(rt0.c3))) BETWEEN (rt0.c0) AND (((((rt0.c1)AND(rt1.c2)))OR(rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM rt1, rt0, v0;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE ((((NULLIF(DISTINCT rt0.c0, rt0.c0), ((rt0.c1)LIKE(rt0.c3)), ((rt0.c3)OR(rt0.c3))))<=((((rt0.c0)IS NOT(rt0.c3)), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c4)), ((rt0.c4)*(rt0.c4)))))) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((NULLIF(DISTINCT rt0.c0, rt0.c0), ((rt0.c1)LIKE(rt0.c3)), ((rt0.c3)OR(rt0.c3))))<=((((rt0.c0)IS NOT(rt0.c3)), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c4)), ((rt0.c4)*(rt0.c4)))))))) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((NULLIF(DISTINCT rt0.c0, rt0.c0), ((rt0.c1)LIKE(rt0.c3)), ((rt0.c3)OR(rt0.c3))))<=((((rt0.c0)IS NOT(rt0.c3)), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c4)), ((rt0.c4)*(rt0.c4)))))) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt1.c0, rt0.c2, rt1.c3, rt0.c1, rt1.c2, v0.c0, rt1.c4, rt1.c1 FROM v0, rt1, rt0 GROUP BY rt1.c0, rt0.c2, rt1.c3, rt0.c1, rt1.c2, v0.c0, rt1.c4, rt1.c1;
SELECT rt1.c0, rt0.c2, rt1.c3, rt0.c1, rt1.c2, v0.c0, rt1.c4, rt1.c1 FROM v0, rt1, rt0 GROUP BY rt1.c0, rt0.c2, rt1.c3, rt0.c1, rt1.c2, v0.c0, rt1.c4, rt1.c1 HAVING COUNT((+ (rt0.c2))) UNION ALL SELECT ALL rt1.c0, rt0.c2, rt1.c3, rt0.c1, rt1.c2, v0.c0, rt1.c4, rt1.c1 FROM v0, rt1, rt0 GROUP BY rt1.c0, rt0.c2, rt1.c3, rt0.c1, rt1.c2, v0.c0, rt1.c4, rt1.c1 HAVING (NOT (COUNT((+ (rt0.c2))))) UNION ALL SELECT rt1.c0, rt0.c2, rt1.c3, rt0.c1, rt1.c2, v0.c0, rt1.c4, rt1.c1 FROM v0, rt1, rt0 GROUP BY rt1.c0, rt0.c2, rt1.c3, rt0.c1, rt1.c2, v0.c0, rt1.c4, rt1.c1 HAVING ((COUNT((+ (rt0.c2)))) ISNULL);
SELECT ALL rt1.c0, rt0.c2, rt1.c3, rt0.c1, rt1.c2, v0.c0, rt1.c4, rt1.c1 FROM v0, rt1, rt0 GROUP BY rt1.c0, rt0.c2, rt1.c3, rt0.c1, rt1.c2, v0.c0, rt1.c4, rt1.c1;
SELECT rt1.c0, rt0.c2, rt1.c3, rt0.c1, rt1.c2, v0.c0, rt1.c4, rt1.c1 FROM v0, rt1, rt0 GROUP BY rt1.c0, rt0.c2, rt1.c3, rt0.c1, rt1.c2, v0.c0, rt1.c4, rt1.c1 HAVING COUNT((+ (rt0.c2))) UNION ALL SELECT ALL rt1.c0, rt0.c2, rt1.c3, rt0.c1, rt1.c2, v0.c0, rt1.c4, rt1.c1 FROM v0, rt1, rt0 GROUP BY rt1.c0, rt0.c2, rt1.c3, rt0.c1, rt1.c2, v0.c0, rt1.c4, rt1.c1 HAVING (NOT (COUNT((+ (rt0.c2))))) UNION ALL SELECT rt1.c0, rt0.c2, rt1.c3, rt0.c1, rt1.c2, v0.c0, rt1.c4, rt1.c1 FROM v0, rt1, rt0 GROUP BY rt1.c0, rt0.c2, rt1.c3, rt0.c1, rt1.c2, v0.c0, rt1.c4, rt1.c1 HAVING ((COUNT((+ (rt0.c2)))) ISNULL);
SELECT ALL rt1.c0, rt0.c2, rt1.c3, rt0.c1, rt1.c2, v0.c0, rt1.c4, rt1.c1 FROM v0, rt1, rt0 GROUP BY rt1.c0, rt0.c2, rt1.c3, rt0.c1, rt1.c2, v0.c0, rt1.c4, rt1.c1;
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE ((- (CAST(rt0.c0 AS NUMERIC)))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT ((- (CAST(rt0.c0 AS NUMERIC)))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((((- (CAST(rt0.c0 AS NUMERIC)))) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS REAL)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS REAL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS REAL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON ((CASE rt0.c0  WHEN v0.c0 THEN v0.c0 ELSE rt0.c4 END)<(((((-237205971)AND(rt0.c4)))AND(rt0.c3)))) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON ((CASE rt0.c0  WHEN v0.c0 THEN v0.c0 ELSE rt0.c4 END)<(((((-237205971)AND(rt0.c4)))AND(rt0.c3)))) WHERE (CASE WHEN (v0.c0 IN (1557519458)) THEN rt0.c1 WHEN (((v0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN (((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) WHEN (rt0.c3 IN (rt0.c0, rt0.c3)) THEN (- (rt0.c0)) ELSE rt0.c0 END) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON ((CASE rt0.c0  WHEN v0.c0 THEN v0.c0 ELSE rt0.c4 END)<(((((-237205971)AND(rt0.c4)))AND(rt0.c3)))) WHERE ((NOT (CASE WHEN (v0.c0 IN (1557519458)) THEN rt0.c1 WHEN (((v0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN (((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) WHEN (rt0.c3 IN (rt0.c0, rt0.c3)) THEN (- (rt0.c0)) ELSE rt0.c0 END))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON ((CASE rt0.c0  WHEN v0.c0 THEN v0.c0 ELSE rt0.c4 END)<(((((-237205971)AND(rt0.c4)))AND(rt0.c3)))) WHERE (((CASE WHEN (v0.c0 IN (1557519458)) THEN rt0.c1 WHEN (((v0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN (((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) WHEN (rt0.c3 IN (rt0.c0, rt0.c3)) THEN (- (rt0.c0)) ELSE rt0.c0 END) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON ((CASE rt0.c0  WHEN v0.c0 THEN v0.c0 ELSE rt0.c4 END)<(((((-237205971)AND(rt0.c4)))AND(rt0.c3)))) GROUP BY rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM rt0, rt1;
SELECT * FROM rt0, rt1 WHERE ((((+ (rt1.c4)))GLOB(rt0.c2 COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE ((NOT ((((+ (rt1.c4)))GLOB(rt0.c2 COLLATE BINARY))))) UNION ALL SELECT * FROM rt0, rt1 WHERE ((((((+ (rt1.c4)))GLOB(rt0.c2 COLLATE BINARY))) ISNULL));
SELECT ALL * FROM rt0, rt1;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3, rt1.c1, rt1.c4, rt1.c3, rt0.c4, rt1.c0, rt1.c2, rt0.c1 FROM rt0, rt1;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3, rt1.c1, rt1.c4, rt1.c3, rt0.c4, rt1.c0, rt1.c2, rt0.c1 FROM rt0, rt1 WHERE (x'') UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3, rt1.c1, rt1.c4, rt1.c3, rt0.c4, rt1.c0, rt1.c2, rt0.c1 FROM rt0, rt1 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3, rt1.c1, rt1.c4, rt1.c3, rt0.c4, rt1.c0, rt1.c2, rt0.c1 FROM rt0, rt1 WHERE (((x'') ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3, rt1.c1, rt1.c4, rt1.c3, rt0.c4, rt1.c0, rt1.c2, rt0.c1 FROM rt0, rt1;
SELECT rt0.c3, rt1.c1, rt0.c2 FROM v0 INNER JOIN rt0 ON ((x'' COLLATE BINARY)||(((rt0.c3)>=(rt1.c1)))) INNER JOIN rt1 ON TYPEOF(DISTINCT ((((((((((((rt1.c2)AND(rt0.c4)))AND(rt0.c2)))OR(rt1.c3)))OR(rt1.c4)))AND(rt0.c0)))AND(rt0.c4))) GROUP BY rt0.c3, rt1.c1, rt0.c2;
SELECT rt0.c3, rt1.c1, rt0.c2 FROM v0 INNER JOIN rt0 ON ((x'' COLLATE BINARY)||(((rt0.c3)>=(rt1.c1)))) INNER JOIN rt1 ON TYPEOF(DISTINCT ((((((((((((rt1.c2)AND(rt0.c4)))AND(rt0.c2)))OR(rt1.c3)))OR(rt1.c4)))AND(rt0.c0)))AND(rt0.c4))) WHERE ((NOT (CASE rt1.c4  WHEN '' THEN rt1.c3 END))) GROUP BY rt0.c3, rt1.c1, rt0.c2 UNION SELECT rt0.c3, rt1.c1, rt0.c2 FROM v0 INNER JOIN rt0 ON ((x'' COLLATE BINARY)||(((rt0.c3)>=(rt1.c1)))) INNER JOIN rt1 ON TYPEOF(DISTINCT ((((((((((((rt1.c2)AND(rt0.c4)))AND(rt0.c2)))OR(rt1.c3)))OR(rt1.c4)))AND(rt0.c0)))AND(rt0.c4))) WHERE ((NOT ((NOT (CASE rt1.c4  WHEN '' THEN rt1.c3 END))))) GROUP BY rt0.c3, rt1.c1, rt0.c2 UNION SELECT ALL rt0.c3, rt1.c1, rt0.c2 FROM v0 INNER JOIN rt0 ON ((x'' COLLATE BINARY)||(((rt0.c3)>=(rt1.c1)))) INNER JOIN rt1 ON TYPEOF(DISTINCT ((((((((((((rt1.c2)AND(rt0.c4)))AND(rt0.c2)))OR(rt1.c3)))OR(rt1.c4)))AND(rt0.c0)))AND(rt0.c4))) WHERE ((((NOT (CASE rt1.c4  WHEN '' THEN rt1.c3 END))) ISNULL)) GROUP BY rt0.c3, rt1.c1, rt0.c2;
SELECT rt0.c3, rt1.c1, rt0.c2 FROM v0 INNER JOIN rt0 ON ((x'' COLLATE BINARY)||(((rt0.c3)>=(rt1.c1)))) INNER JOIN rt1 ON TYPEOF(DISTINCT ((((((((((((rt1.c2)AND(rt0.c4)))AND(rt0.c2)))OR(rt1.c3)))OR(rt1.c4)))AND(rt0.c0)))AND(rt0.c4))) GROUP BY rt0.c3, rt1.c1, rt0.c2;
SELECT v0.c0, rt1.c0 FROM v0, rt0 CROSS JOIN rt1 ON -296212907 GROUP BY v0.c0, rt1.c0;
SELECT ALL v0.c0, rt1.c0 FROM v0, rt0 CROSS JOIN rt1 ON -296212907 GROUP BY v0.c0, rt1.c0 HAVING (+ ((MAX(GROUP_CONCAT(AVG(rt0.c3))) IN (AVG(TOTAL(COUNT(rt0.c0))))))) UNION ALL SELECT ALL v0.c0, rt1.c0 FROM v0, rt0 CROSS JOIN rt1 ON -296212907 GROUP BY v0.c0, rt1.c0 HAVING (NOT ((+ ((MAX(GROUP_CONCAT(AVG(rt0.c3))) IN (AVG(TOTAL(COUNT(rt0.c0))))))))) UNION ALL SELECT v0.c0, rt1.c0 FROM v0, rt0 CROSS JOIN rt1 ON -296212907 GROUP BY v0.c0, rt1.c0 HAVING (((+ ((MAX(GROUP_CONCAT(AVG(rt0.c3))) IN (AVG(TOTAL(COUNT(rt0.c0)))))))) ISNULL);
SELECT TOTAL(((((rt1.c4)+(rt0.c1))) NOTNULL)) FROM rt0, v0, rt1 ORDER BY NULL DESC;
SELECT ALL rt1.c3 FROM rt1;
SELECT rt1.c3 FROM rt1 WHERE (((((rt1.c4)<=(rt1.c1)))%(CASE WHEN rt1.c3 THEN rt1.c3 WHEN x'ba7d' THEN rt1.c4 WHEN rt1.c1 THEN rt1.c4 ELSE 0.8111152124536634 END))) UNION ALL SELECT ALL rt1.c3 FROM rt1 WHERE ((NOT (((((rt1.c4)<=(rt1.c1)))%(CASE WHEN rt1.c3 THEN rt1.c3 WHEN x'ba7d' THEN rt1.c4 WHEN rt1.c1 THEN rt1.c4 ELSE 0.8111152124536634 END))))) UNION ALL SELECT rt1.c3 FROM rt1 WHERE (((((((rt1.c4)<=(rt1.c1)))%(CASE WHEN rt1.c3 THEN rt1.c3 WHEN x'ba7d' THEN rt1.c4 WHEN rt1.c1 THEN rt1.c4 ELSE 0.8111152124536634 END))) ISNULL));
SELECT ALL rt1.c3 FROM rt1;
SELECT DISTINCT rt0.c1 FROM rt1 RIGHT OUTER JOIN rt0 ON rt1.c3;
SELECT DISTINCT rt0.c1 FROM rt1 RIGHT OUTER JOIN rt0 ON rt1.c3 WHERE ((((((rt0.c4) BETWEEN (rt0.c0) AND (rt1.c3)), ((rt0.c1) NOT NULL), (rt1.c4 IN (rt0.c4)), rt1.c3, (rt0.c0 IN ())))>=((((rt0.c0)<<(rt0.c2)), 0.6065127716922946, (rt1.c3 IN ()), (+ (rt0.c0)), CHANGES())))) UNION SELECT DISTINCT rt0.c1 FROM rt1 RIGHT OUTER JOIN rt0 ON rt1.c3 WHERE ((NOT ((((((rt0.c4) BETWEEN (rt0.c0) AND (rt1.c3)), ((rt0.c1) NOT NULL), (rt1.c4 IN (rt0.c4)), rt1.c3, (rt0.c0 IN ())))>=((((rt0.c0)<<(rt0.c2)), 0.6065127716922946, (rt1.c3 IN ()), (+ (rt0.c0)), CHANGES())))))) UNION SELECT DISTINCT rt0.c1 FROM rt1 RIGHT OUTER JOIN rt0 ON rt1.c3 WHERE ((((((((rt0.c4) BETWEEN (rt0.c0) AND (rt1.c3)), ((rt0.c1) NOT NULL), (rt1.c4 IN (rt0.c4)), rt1.c3, (rt0.c0 IN ())))>=((((rt0.c0)<<(rt0.c2)), 0.6065127716922946, (rt1.c3 IN ()), (+ (rt0.c0)), CHANGES())))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt1 RIGHT OUTER JOIN rt0 ON rt1.c3;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (rt0.c4) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 NOT INDEXED WHERE ((NOT (rt0.c4))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((rt0.c4) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0 FROM rt1, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt1, rt0 GROUP BY rt0.c0 HAVING (((rt0.c4)) NOT BETWEEN ((COUNT(rt1.c1))) AND ((rt0.c1))) UNION ALL SELECT rt0.c0 FROM rt1, rt0 GROUP BY rt0.c0 HAVING (NOT ((((rt0.c4)) NOT BETWEEN ((COUNT(rt1.c1))) AND ((rt0.c1))))) UNION ALL SELECT ALL rt0.c0 FROM rt1, rt0 GROUP BY rt0.c0 HAVING (((((rt0.c4)) NOT BETWEEN ((COUNT(rt1.c1))) AND ((rt0.c1)))) ISNULL);
SELECT ALL rt0.c0 FROM rt1, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt1, rt0 GROUP BY rt0.c0 HAVING (((rt0.c4)) NOT BETWEEN ((COUNT(rt1.c1))) AND ((rt0.c1))) UNION ALL SELECT rt0.c0 FROM rt1, rt0 GROUP BY rt0.c0 HAVING (NOT ((((rt0.c4)) NOT BETWEEN ((COUNT(rt1.c1))) AND ((rt0.c1))))) UNION ALL SELECT ALL rt0.c0 FROM rt1, rt0 GROUP BY rt0.c0 HAVING (((((rt0.c4)) NOT BETWEEN ((COUNT(rt1.c1))) AND ((rt0.c1)))) ISNULL);
SELECT ALL rt0.c0 FROM rt1, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2, rt1.c4, v0.c0, rt1.c3, rt0.c1, rt0.c3, rt1.c2, rt0.c4 FROM rt1, rt0, v0;
SELECT rt0.c2, rt1.c4, v0.c0, rt1.c3, rt0.c1, rt0.c3, rt1.c2, rt0.c4 FROM rt1, rt0, v0 WHERE (1.583585876E9) UNION ALL SELECT rt0.c2, rt1.c4, v0.c0, rt1.c3, rt0.c1, rt0.c3, rt1.c2, rt0.c4 FROM rt1, rt0, v0 WHERE ((NOT (1.583585876E9))) UNION ALL SELECT rt0.c2, rt1.c4, v0.c0, rt1.c3, rt0.c1, rt0.c3, rt1.c2, rt0.c4 FROM rt1, rt0, v0 WHERE (((1.583585876E9) ISNULL));
SELECT ALL rt0.c2, rt1.c4, v0.c0, rt1.c3, rt0.c1, rt0.c3, rt1.c2, rt0.c4 FROM rt1, rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2)/(rt0.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c2)/(rt0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)/(rt0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c4;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0, v0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c0)%(v0.c0)))) AND ((((((((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c0)))AND(rt0.c4)))OR(v0.c0)))))) GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c4 UNION SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0, v0 WHERE ((NOT ((((rt0.c0)) BETWEEN ((((rt0.c0)%(v0.c0)))) AND ((((((((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c0)))AND(rt0.c4)))OR(v0.c0)))))))) GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c4 UNION SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0, v0 WHERE ((((((rt0.c0)) BETWEEN ((((rt0.c0)%(v0.c0)))) AND ((((((((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c0)))AND(rt0.c4)))OR(v0.c0)))))) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c4;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c4;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING SUM(((GROUP_CONCAT(TOTAL(TOTAL(x'')))) NOT NULL)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(((GROUP_CONCAT(TOTAL(TOTAL(x'')))) NOT NULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(((GROUP_CONCAT(TOTAL(TOTAL(x'')))) NOT NULL))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((- (rt0.c0)) COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((- (rt0.c0)) COLLATE NOCASE))) UNION ALL SELECT * FROM rt0 WHERE ((((- (rt0.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c4 FROM rt0, v0, rt1;
SELECT DISTINCT rt0.c0, rt0.c4 FROM rt0, v0, rt1 WHERE ((((((v0.c0)OR(0X57b76a9c)))AND(rt1.c4)) IN ())) UNION SELECT DISTINCT rt0.c0, rt0.c4 FROM rt0, v0, rt1 WHERE ((NOT ((((((v0.c0)OR(0x57b76a9c)))AND(rt1.c4)) IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c4 FROM rt0, v0, rt1 WHERE ((((((((v0.c0)OR(0X57b76a9c)))AND(rt1.c4)) IN ())) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c4 FROM rt0, v0, rt1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c2, rt1.c4, rt0.c3, v0.c0, rt0.c4, rt1.c0 FROM rt1, rt0, v0 GROUP BY rt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c2, rt1.c4, rt0.c3, v0.c0, rt0.c4, rt1.c0;
SELECT ALL rt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c2, rt1.c4, rt0.c3, v0.c0, rt0.c4, rt1.c0 FROM rt1, rt0, v0 GROUP BY rt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c2, rt1.c4, rt0.c3, v0.c0, rt0.c4, rt1.c0 HAVING GROUP_CONCAT(CASE WHEN MAX(rt0.c3) THEN rt0.c1 WHEN rt0.c0 THEN COUNT(*) WHEN AVG(COUNT(*)) THEN rt1.c4 END) UNION ALL SELECT rt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c2, rt1.c4, rt0.c3, v0.c0, rt0.c4, rt1.c0 FROM rt1, rt0, v0 GROUP BY rt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c2, rt1.c4, rt0.c3, v0.c0, rt0.c4, rt1.c0 HAVING (NOT (GROUP_CONCAT(CASE WHEN MAX(rt0.c3) THEN rt0.c1 WHEN rt0.c0 THEN COUNT(*) WHEN AVG(COUNT(*)) THEN rt1.c4 END))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c2, rt1.c4, rt0.c3, v0.c0, rt0.c4, rt1.c0 FROM rt1, rt0, v0 GROUP BY rt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c2, rt1.c4, rt0.c3, v0.c0, rt0.c4, rt1.c0 HAVING ((GROUP_CONCAT(CASE WHEN MAX(rt0.c3) THEN rt0.c1 WHEN rt0.c0 THEN COUNT(*) WHEN AVG(COUNT(*)) THEN rt1.c4 END)) ISNULL);
SELECT ALL * FROM rt0, rt1;
SELECT ALL * FROM rt0, rt1 WHERE (rt0.c3 COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE ((NOT (rt0.c3 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE (((rt0.c3 COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt0, rt1;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((((((((rt0.c3)AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c1 COLLATE RTRIM)))OR((rt0.c0 IN ())))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((((((((rt0.c3)AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c1 COLLATE RTRIM)))OR((rt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((((((((rt0.c3)AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c1 COLLATE RTRIM)))OR((rt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c3, rt1.c3, rt1.c0, rt1.c4, rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt1, rt0 GROUP BY rt0.c3, rt1.c3, rt1.c0, rt1.c4, rt0.c4, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, rt1.c3, rt1.c0, rt1.c4, rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt1, rt0 WHERE ((((rt0.c4)) NOT BETWEEN ((((rt1.c3) NOTNULL))) AND ((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt0.c2)))))) GROUP BY rt0.c3, rt1.c3, rt1.c0, rt1.c4, rt0.c4, rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c3, rt1.c3, rt1.c0, rt1.c4, rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt1, rt0 WHERE ((NOT ((((rt0.c4)) NOT BETWEEN ((((rt1.c3) NOTNULL))) AND ((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt0.c2)))))))) GROUP BY rt0.c3, rt1.c3, rt1.c0, rt1.c4, rt0.c4, rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c3, rt1.c3, rt1.c0, rt1.c4, rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt1, rt0 WHERE ((((((rt0.c4)) NOT BETWEEN ((((rt1.c3) NOTNULL))) AND ((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt0.c2)))))) ISNULL)) GROUP BY rt0.c3, rt1.c3, rt1.c0, rt1.c4, rt0.c4, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, rt1.c3, rt1.c0, rt1.c4, rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt1, rt0 GROUP BY rt0.c3, rt1.c3, rt1.c0, rt1.c4, rt0.c4, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt1.c3, rt0.c3, rt0.c0, rt1.c4 FROM v0, rt1, rt0 GROUP BY rt1.c3, rt0.c3, rt0.c0, rt1.c4;
SELECT rt1.c3, rt0.c3, rt0.c0, rt1.c4 FROM v0, rt1, rt0 GROUP BY rt1.c3, rt0.c3, rt0.c0, rt1.c4 HAVING MAX(SUM(SUM(rt0.c0))) UNION ALL SELECT rt1.c3, rt0.c3, rt0.c0, rt1.c4 FROM v0, rt1, rt0 GROUP BY rt1.c3, rt0.c3, rt0.c0, rt1.c4 HAVING (NOT (MAX(SUM(SUM(rt0.c0))))) UNION ALL SELECT ALL rt1.c3, rt0.c3, rt0.c0, rt1.c4 FROM v0, rt1, rt0 GROUP BY rt1.c3, rt0.c3, rt0.c0, rt1.c4 HAVING ((MAX(SUM(SUM(rt0.c0)))) ISNULL);
SELECT * FROM rt0, rt1;
SELECT * FROM rt0, rt1 WHERE (((((rt0.c2) ISNULL)) IS FALSE)) UNION ALL SELECT * FROM rt0, rt1 WHERE ((NOT (((((rt0.c2) ISNULL)) IS FALSE)))) UNION ALL SELECT * FROM rt0, rt1 WHERE (((((((rt0.c2) ISNULL)) IS FALSE)) ISNULL));
SELECT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0 WHERE (COALESCE(((rt0.c3)<(rt0.c4)), rt0.c1 COLLATE RTRIM)) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((NOT (COALESCE(((rt0.c3)<(rt0.c4)), rt0.c1 COLLATE RTRIM)))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE (((COALESCE(((rt0.c3)<(rt0.c4)), rt0.c1 COLLATE RTRIM)) ISNULL));
SELECT DISTINCT * FROM rt1, rt0;
SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE ((('Xu[0gqOt')IS(rt1.c4))) GROUP BY rt1.c2, rt1.c0 UNION SELECT rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT ((('Xu[0gqOt')IS(rt1.c4))))) GROUP BY rt1.c2, rt1.c0 UNION SELECT rt1.c2, rt1.c0 FROM rt1 WHERE ((((('Xu[0gqOt')IS(rt1.c4))) ISNULL)) GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2;
SELECT rt1.c3, rt0.c0, rt0.c4 FROM rt1, rt0, v0;
SELECT rt1.c3, rt0.c0, rt0.c4 FROM rt1, rt0, v0 WHERE (((((rt1.c4)==(rt1.c0))) BETWEEN (x'') AND (CASE WHEN NULL THEN v0.c0 ELSE v0.c0 END))) UNION ALL SELECT ALL rt1.c3, rt0.c0, rt0.c4 FROM rt1, rt0, v0 WHERE ((NOT (((((rt1.c4)=(rt1.c0))) BETWEEN (x'') AND (CASE WHEN NULL THEN v0.c0 ELSE v0.c0 END))))) UNION ALL SELECT rt1.c3, rt0.c0, rt0.c4 FROM rt1, rt0, v0 WHERE (((((((rt1.c4)==(rt1.c0))) BETWEEN (x'') AND (CASE WHEN NULL THEN v0.c0 ELSE v0.c0 END))) ISNULL));
SELECT rt1.c3, rt0.c0, rt0.c4 FROM rt1, rt0, v0;
SELECT DISTINCT * FROM rt1, v0, rt0;
SELECT DISTINCT * FROM rt1, v0, rt0 WHERE (0.983087386332805) UNION SELECT DISTINCT * FROM rt1, v0, rt0 WHERE ((NOT (0.983087386332805))) UNION SELECT DISTINCT * FROM rt1, v0, rt0 WHERE (((0.983087386332805) ISNULL));
SELECT DISTINCT * FROM rt1, v0, rt0;
SELECT ALL rt1.c0, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c0, rt1.c3, rt1.c4;
SELECT ALL rt1.c0, rt1.c3, rt1.c4 FROM rt1 WHERE (json_array_length(CASE WHEN rt1.c2 THEN rt1.c3 END)) GROUP BY rt1.c0, rt1.c3, rt1.c4 UNION SELECT rt1.c0, rt1.c3, rt1.c4 FROM rt1 WHERE ((NOT (json_array_length(CASE WHEN rt1.c2 THEN rt1.c3 END)))) GROUP BY rt1.c0, rt1.c3, rt1.c4 UNION SELECT rt1.c0, rt1.c3, rt1.c4 FROM rt1 WHERE (((json_array_length(CASE WHEN rt1.c2 THEN rt1.c3 END)) ISNULL)) GROUP BY rt1.c0, rt1.c3, rt1.c4;
SELECT ALL rt1.c0, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c0, rt1.c3, rt1.c4;
SELECT rt0.c0, rt1.c4, rt0.c3, rt1.c2, rt1.c0 FROM v0 LEFT OUTER JOIN rt0 ON (((((+ (rt0.c4)))OR(CAST(rt1.c2 AS INTEGER))))AND(((rt0.c0)OR(rt0.c1)))) INNER JOIN rt1 ON rt1.c4 GROUP BY rt0.c0, rt1.c4, rt0.c3, rt1.c2, rt1.c0;
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE ((((rt1.c2, rt1.c1, rt1.c2, rt1.c3, rt1.c4)) NOT BETWEEN ((SUBSTR(rt1.c0, rt1.c3), ((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c2)), ((0.8891060090448419)>(rt1.c4)), (((rt1.c2, rt1.c3, rt1.c0))=((rt1.c1, rt1.c4, rt1.c4))), ((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c0)))) AND ((CASE rt1.c3  WHEN rt1.c3 THEN rt1.c3 END, '-44937908', rt1.c2 COLLATE RTRIM, (NOT (rt1.c1)), (rt1.c4 IN ()))))) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((((rt1.c2, rt1.c1, rt1.c2, rt1.c3, rt1.c4)) NOT BETWEEN ((SUBSTR(rt1.c0, rt1.c3), ((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c2)), ((0.8891060090448419)>(rt1.c4)), (((rt1.c2, rt1.c3, rt1.c0))==((rt1.c1, rt1.c4, rt1.c4))), ((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c0)))) AND ((CASE rt1.c3  WHEN rt1.c3 THEN rt1.c3 END, '-44937908', rt1.c2 COLLATE RTRIM, (NOT (rt1.c1)), (rt1.c4 IN ()))))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((((((rt1.c2, rt1.c1, rt1.c2, rt1.c3, rt1.c4)) NOT BETWEEN ((SUBSTR(rt1.c0, rt1.c3), ((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c2)), ((0.8891060090448419)>(rt1.c4)), (((rt1.c2, rt1.c3, rt1.c0))==((rt1.c1, rt1.c4, rt1.c4))), ((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c0)))) AND ((CASE rt1.c3  WHEN rt1.c3 THEN rt1.c3 END, '-44937908', rt1.c2 COLLATE RTRIM, (NOT (rt1.c1)), (rt1.c4 IN ()))))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2))==((rt0.c3))))OR(x'2be2'))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c2))==((rt0.c3))))OR(x'2be2'))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c2))=((rt0.c3))))OR(x'2be2'))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt1.c1, rt0.c4, rt1.c0, rt1.c2, rt1.c3, v0.c0, rt0.c2, rt0.c0 FROM v0, rt1, rt0 GROUP BY rt1.c1, rt0.c4, rt1.c0, rt1.c2, rt1.c3, v0.c0, rt0.c2, rt0.c0;
SELECT ALL rt1.c1, rt0.c4, rt1.c0, rt1.c2, rt1.c3, v0.c0, rt0.c2, rt0.c0 FROM v0, rt1, rt0 WHERE (((((((((rt1.c1)OR(rt1.c1)))OR(rt0.c4)))AND(CAST(rt0.c4 AS TEXT))))AND(CASE rt1.c4  WHEN rt0.c0 THEN rt0.c1 END))) GROUP BY rt1.c1, rt0.c4, rt1.c0, rt1.c2, rt1.c3, v0.c0, rt0.c2, rt0.c0 UNION SELECT rt1.c1, rt0.c4, rt1.c0, rt1.c2, rt1.c3, v0.c0, rt0.c2, rt0.c0 FROM v0, rt1, rt0 WHERE ((NOT (((((((((rt1.c1)OR(rt1.c1)))OR(rt0.c4)))AND(CAST(rt0.c4 AS TEXT))))AND(CASE rt1.c4  WHEN rt0.c0 THEN rt0.c1 END))))) GROUP BY rt1.c1, rt0.c4, rt1.c0, rt1.c2, rt1.c3, v0.c0, rt0.c2, rt0.c0 UNION SELECT rt1.c1, rt0.c4, rt1.c0, rt1.c2, rt1.c3, v0.c0, rt0.c2, rt0.c0 FROM v0, rt1, rt0 WHERE (((((((((((rt1.c1)OR(rt1.c1)))OR(rt0.c4)))AND(CAST(rt0.c4 AS TEXT))))AND(CASE rt1.c4  WHEN rt0.c0 THEN rt0.c1 END))) ISNULL)) GROUP BY rt1.c1, rt0.c4, rt1.c0, rt1.c2, rt1.c3, v0.c0, rt0.c2, rt0.c0;
SELECT rt1.c1, rt0.c4, rt1.c0, rt1.c2, rt1.c3, v0.c0, rt0.c2, rt0.c0 FROM v0, rt1, rt0 GROUP BY rt1.c1, rt0.c4, rt1.c0, rt1.c2, rt1.c3, v0.c0, rt0.c2, rt0.c0;
SELECT ALL rt1.c3, rt0.c3 FROM rt1 INNER JOIN v0 ON (rt0.c3 COLLATE NOCASE IN ()) CROSS JOIN rt0 ON CASE WHEN IFNULL(DISTINCT v0.c0, rt0.c2) THEN '' WHEN 'A*(얙_3]+~' THEN (((0.5814617527996913))>((rt0.c4))) WHEN '{P)C' THEN rt1.c3 END GROUP BY rt1.c3, rt0.c3;
SELECT ALL rt1.c3, rt0.c3 FROM rt1 INNER JOIN v0 ON (rt0.c3 COLLATE NOCASE IN ()) CROSS JOIN rt0 ON CASE WHEN IFNULL(DISTINCT v0.c0, rt0.c2) THEN '' WHEN 'A*(얙_3]+~' THEN (((0.5814617527996913))>((rt0.c4))) WHEN '{P)C' THEN rt1.c3 END GROUP BY rt1.c3, rt0.c3 HAVING CASE WHEN ((((((((((((rt1.c2)OR(rt1.c3)))AND(v0.c0)))OR(COUNT(rt0.c2))))AND(rt0.c1)))AND(AVG(AVG(MIN(rt0.c1))))))AND(0Xffffffffdf9d013c)) THEN (- (GROUP_CONCAT(MAX(rt0.c3)))) WHEN rt1.c0 THEN NULL WHEN ((rt0.c1) BETWEEN (COUNT(MAX(TOTAL(COUNT(*))))) AND ('nP')) THEN CAST(MIN(rt1.c4) AS NUMERIC) WHEN ('-566362939' IN ()) THEN COUNT(*) WHEN ((((rt1.c3)AND(rt1.c1)))AND(rt0.c2)) THEN MIN(TOTAL(AVG(0.37256297858213616))) ELSE ((COUNT(*)) IS TRUE) END UNION ALL SELECT ALL rt1.c3, rt0.c3 FROM rt1 INNER JOIN v0 ON (rt0.c3 COLLATE NOCASE IN ()) CROSS JOIN rt0 ON CASE WHEN IFNULL(DISTINCT v0.c0, rt0.c2) THEN '' WHEN 'A*(얙_3]+~' THEN (((0.5814617527996913))>((rt0.c4))) WHEN '{P)C' THEN rt1.c3 END GROUP BY rt1.c3, rt0.c3 HAVING (NOT (CASE WHEN ((((((((((((rt1.c2)OR(rt1.c3)))AND(v0.c0)))OR(COUNT(rt0.c2))))AND(rt0.c1)))AND(AVG(AVG(MIN(rt0.c1))))))AND(0xffffffffdf9d013c)) THEN (- (GROUP_CONCAT(MAX(rt0.c3)))) WHEN rt1.c0 THEN NULL WHEN ((rt0.c1) BETWEEN (COUNT(MAX(TOTAL(COUNT(*))))) AND ('nP')) THEN CAST(MIN(rt1.c4) AS NUMERIC) WHEN ('-566362939' IN ()) THEN COUNT(*) WHEN ((((rt1.c3)AND(rt1.c1)))AND(rt0.c2)) THEN MIN(TOTAL(AVG(0.37256297858213616))) ELSE ((COUNT(*)) IS TRUE) END)) UNION ALL SELECT ALL rt1.c3, rt0.c3 FROM rt1 INNER JOIN v0 ON (rt0.c3 COLLATE NOCASE IN ()) CROSS JOIN rt0 ON CASE WHEN IFNULL(DISTINCT v0.c0, rt0.c2) THEN '' WHEN 'A*(얙_3]+~' THEN (((0.5814617527996913))>((rt0.c4))) WHEN '{P)C' THEN rt1.c3 END GROUP BY rt1.c3, rt0.c3 HAVING ((CASE WHEN ((((((((((((rt1.c2)OR(rt1.c3)))AND(v0.c0)))OR(COUNT(rt0.c2))))AND(rt0.c1)))AND(AVG(AVG(MIN(rt0.c1))))))AND(0xffffffffdf9d013c)) THEN (- (GROUP_CONCAT(MAX(rt0.c3)))) WHEN rt1.c0 THEN NULL WHEN ((rt0.c1) BETWEEN (COUNT(MAX(TOTAL(COUNT(*))))) AND ('nP')) THEN CAST(MIN(rt1.c4) AS NUMERIC) WHEN ('-566362939' IN ()) THEN COUNT(*) WHEN ((((rt1.c3)AND(rt1.c1)))AND(rt0.c2)) THEN MIN(TOTAL(AVG(0.37256297858213616))) ELSE ((COUNT(*)) IS TRUE) END) ISNULL);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON (NOT (((rt0.c0)%(rt1.c4)))) LEFT OUTER JOIN rt1 ON ((((rt0.c4 IN ())))<((rt1.c1)));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN rt0.c2 COLLATE NOCASE THEN (((rt0.c2, rt0.c2, rt0.c4)) BETWEEN ((rt0.c0, rt0.c3, rt0.c0)) AND ((rt0.c0, rt0.c3, rt0.c1))) ELSE (rt0.c1 IN ()) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN rt0.c2 COLLATE NOCASE THEN (((rt0.c2, rt0.c2, rt0.c4)) BETWEEN ((rt0.c0, rt0.c3, rt0.c0)) AND ((rt0.c0, rt0.c3, rt0.c1))) ELSE (rt0.c1 IN ()) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN rt0.c2 COLLATE NOCASE THEN (((rt0.c2, rt0.c2, rt0.c4)) BETWEEN ((rt0.c0, rt0.c3, rt0.c0)) AND ((rt0.c0, rt0.c3, rt0.c1))) ELSE (rt0.c1 IN ()) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1, rt1.c4, rt0.c3 FROM rt1, rt0 GROUP BY rt0.c0, rt0.c1, rt1.c4, rt0.c3;
SELECT rt0.c0, rt0.c1, rt1.c4, rt0.c3 FROM rt1, rt0 WHERE ((((NOT (rt0.c4)))<>((- (rt0.c1))))) GROUP BY rt0.c0, rt0.c1, rt1.c4, rt0.c3 UNION SELECT rt0.c0, rt0.c1, rt1.c4, rt0.c3 FROM rt1, rt0 WHERE ((NOT ((((NOT (rt0.c4)))<>((- (rt0.c1))))))) GROUP BY rt0.c0, rt0.c1, rt1.c4, rt0.c3 UNION SELECT rt0.c0, rt0.c1, rt1.c4, rt0.c3 FROM rt1, rt0 WHERE ((((((NOT (rt0.c4)))<>((- (rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt1.c4, rt0.c3;
SELECT rt0.c0, rt0.c1, rt1.c4, rt0.c3 FROM rt1, rt0 GROUP BY rt0.c0, rt0.c1, rt1.c4, rt0.c3;
SELECT rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2 HAVING MAX(((COUNT(*))<=(rt1.c0))) UNION ALL SELECT rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2 HAVING (NOT (MAX(((COUNT(*))<=(rt1.c0))))) UNION ALL SELECT rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2 HAVING ((MAX(((COUNT(*))<=(rt1.c0)))) ISNULL);
SELECT ALL * FROM v0, rt0, rt1;
SELECT * FROM v0, rt0, rt1 WHERE (((CAST(rt0.c2 AS REAL))GLOB(((0.9747173782912274)<=(rt0.c3))))) UNION ALL SELECT * FROM v0, rt0, rt1 WHERE ((NOT (((CAST(rt0.c2 AS REAL))GLOB(((0.9747173782912274)<=(rt0.c3))))))) UNION ALL SELECT ALL * FROM v0, rt0, rt1 WHERE (((((CAST(rt0.c2 AS REAL))GLOB(((0.9747173782912274)<=(rt0.c3))))) ISNULL));
SELECT ALL * FROM v0, rt0, rt1;
SELECT DISTINCT * FROM rt1, v0, rt0;
SELECT DISTINCT * FROM rt1, v0, rt0 WHERE ((((~ (rt1.c0))) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt1.c2))))) UNION SELECT DISTINCT * FROM rt1, v0, rt0 WHERE ((NOT ((((~ (rt1.c0))) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt1.c2))))))) UNION SELECT DISTINCT * FROM rt1, v0, rt0 WHERE ((((((~ (rt1.c0))) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt1.c2))))) ISNULL));
SELECT DISTINCT * FROM rt1, v0, rt0;
SELECT ALL rt0.c2, rt0.c0, rt1.c2, rt0.c4 FROM rt0 RIGHT OUTER JOIN rt1 ON (('397260706') BETWEEN (((rt0.c3) NOTNULL)) AND (CAST(rt0.c0 AS NUMERIC))) FULL OUTER JOIN v0 ON ((((CAST(1897028205 AS REAL))AND((- (rt1.c4)))))OR(CAST(rt1.c3 AS BLOB))) GROUP BY rt0.c2, rt0.c0, rt1.c2, rt0.c4;
SELECT ALL rt0.c2, rt0.c0, rt1.c2, rt0.c4 FROM rt0 RIGHT OUTER JOIN rt1 ON (('397260706') BETWEEN (((rt0.c3) NOTNULL)) AND (CAST(rt0.c0 AS NUMERIC))) FULL OUTER JOIN v0 ON ((((CAST(1897028205 AS REAL))AND((- (rt1.c4)))))OR(CAST(rt1.c3 AS BLOB))) WHERE (CAST(v0.c0 COLLATE NOCASE AS BLOB)) GROUP BY rt0.c2, rt0.c0, rt1.c2, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c0, rt1.c2, rt0.c4 FROM rt0 RIGHT OUTER JOIN rt1 ON (('397260706') BETWEEN (((rt0.c3) NOTNULL)) AND (CAST(rt0.c0 AS NUMERIC))) FULL OUTER JOIN v0 ON ((((CAST(1897028205 AS REAL))AND((- (rt1.c4)))))OR(CAST(rt1.c3 AS BLOB))) WHERE ((NOT (CAST(v0.c0 COLLATE NOCASE AS BLOB)))) GROUP BY rt0.c2, rt0.c0, rt1.c2, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c0, rt1.c2, rt0.c4 FROM rt0 RIGHT OUTER JOIN rt1 ON (('397260706') BETWEEN (((rt0.c3) NOTNULL)) AND (CAST(rt0.c0 AS NUMERIC))) FULL OUTER JOIN v0 ON ((((CAST(1897028205 AS REAL))AND((- (rt1.c4)))))OR(CAST(rt1.c3 AS BLOB))) WHERE (((CAST(v0.c0 COLLATE NOCASE AS BLOB)) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt1.c2, rt0.c4;
SELECT ALL rt0.c2, rt0.c0, rt1.c2, rt0.c4 FROM rt0 RIGHT OUTER JOIN rt1 ON (('397260706') BETWEEN (((rt0.c3) NOTNULL)) AND (CAST(rt0.c0 AS NUMERIC))) FULL OUTER JOIN v0 ON ((((CAST(1897028205 AS REAL))AND((- (rt1.c4)))))OR(CAST(rt1.c3 AS BLOB))) GROUP BY rt0.c2, rt0.c0, rt1.c2, rt0.c4;
SELECT v0.c0, rt1.c0, rt1.c4, rt1.c2, rt1.c3, rt1.c1 FROM rt1, v0 GROUP BY v0.c0, rt1.c0, rt1.c4, rt1.c2, rt1.c3, rt1.c1;
SELECT v0.c0, rt1.c0, rt1.c4, rt1.c2, rt1.c3, rt1.c1 FROM rt1, v0 GROUP BY v0.c0, rt1.c0, rt1.c4, rt1.c2, rt1.c3, rt1.c1 HAVING '-1404374373' UNION ALL SELECT ALL v0.c0, rt1.c0, rt1.c4, rt1.c2, rt1.c3, rt1.c1 FROM rt1, v0 GROUP BY v0.c0, rt1.c0, rt1.c4, rt1.c2, rt1.c3, rt1.c1 HAVING (NOT ('-1404374373')) UNION ALL SELECT v0.c0, rt1.c0, rt1.c4, rt1.c2, rt1.c3, rt1.c1 FROM rt1, v0 GROUP BY v0.c0, rt1.c0, rt1.c4, rt1.c2, rt1.c3, rt1.c1 HAVING (('-1404374373') ISNULL);
SELECT v0.c0, rt1.c0, rt1.c4, rt1.c2, rt1.c3, rt1.c1 FROM rt1, v0 GROUP BY v0.c0, rt1.c0, rt1.c4, rt1.c2, rt1.c3, rt1.c1;
SELECT v0.c0, rt1.c0, rt1.c4, rt1.c2, rt1.c3, rt1.c1 FROM rt1, v0 GROUP BY v0.c0, rt1.c0, rt1.c4, rt1.c2, rt1.c3, rt1.c1 HAVING '-1404374373' UNION ALL SELECT ALL v0.c0, rt1.c0, rt1.c4, rt1.c2, rt1.c3, rt1.c1 FROM rt1, v0 GROUP BY v0.c0, rt1.c0, rt1.c4, rt1.c2, rt1.c3, rt1.c1 HAVING (NOT ('-1404374373')) UNION ALL SELECT v0.c0, rt1.c0, rt1.c4, rt1.c2, rt1.c3, rt1.c1 FROM rt1, v0 GROUP BY v0.c0, rt1.c0, rt1.c4, rt1.c2, rt1.c3, rt1.c1 HAVING (('-1404374373') ISNULL);
SELECT v0.c0, rt1.c0, rt1.c4, rt1.c2, rt1.c3, rt1.c1 FROM rt1, v0 GROUP BY v0.c0, rt1.c0, rt1.c4, rt1.c2, rt1.c3, rt1.c1;
SELECT * FROM v0 RIGHT OUTER JOIN rt1 ON (rt1.c4 IN ()) RIGHT OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN (((v0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt1.c2, rt0.c0, rt1.c2)) AND ((rt0.c0, rt1.c0, rt1.c3))) WHEN (rt0.c0 IN ()) THEN CASE WHEN rt1.c3 THEN rt0.c1 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c0 END WHEN ((rt1.c1)>=(v0.c0)) THEN rt0.c4 COLLATE RTRIM ELSE (((x'', rt0.c0, rt0.c1, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c1, rt1.c1, rt0.c4)) AND ((rt1.c3, rt0.c2, rt0.c1, v0.c0, '2069577649'))) END;
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt1 ON (rt1.c4 IN ()) RIGHT OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN (((v0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt1.c2, rt0.c0, rt1.c2)) AND ((rt0.c0, rt1.c0, rt1.c3))) WHEN (rt0.c0 IN ()) THEN CASE WHEN rt1.c3 THEN rt0.c1 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c0 END WHEN ((rt1.c1)>=(v0.c0)) THEN rt0.c4 COLLATE RTRIM ELSE (((x'', rt0.c0, rt0.c1, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c1, rt1.c1, rt0.c4)) AND ((rt1.c3, rt0.c2, rt0.c1, v0.c0, '2069577649'))) END WHERE (CAST(((rt0.c1)GLOB(rt1.c1)) AS NUMERIC)) UNION ALL SELECT ALL * FROM v0 RIGHT OUTER JOIN rt1 ON (rt1.c4 IN ()) RIGHT OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN (((v0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt1.c2, rt0.c0, rt1.c2)) AND ((rt0.c0, rt1.c0, rt1.c3))) WHEN (rt0.c0 IN ()) THEN CASE WHEN rt1.c3 THEN rt0.c1 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c0 END WHEN ((rt1.c1)>=(v0.c0)) THEN rt0.c4 COLLATE RTRIM ELSE (((x'', rt0.c0, rt0.c1, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c1, rt1.c1, rt0.c4)) AND ((rt1.c3, rt0.c2, rt0.c1, v0.c0, '2069577649'))) END WHERE ((NOT (CAST(((rt0.c1)GLOB(rt1.c1)) AS NUMERIC)))) UNION ALL SELECT * FROM v0 RIGHT OUTER JOIN rt1 ON (rt1.c4 IN ()) RIGHT OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN (((v0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt1.c2, rt0.c0, rt1.c2)) AND ((rt0.c0, rt1.c0, rt1.c3))) WHEN (rt0.c0 IN ()) THEN CASE WHEN rt1.c3 THEN rt0.c1 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c0 END WHEN ((rt1.c1)>=(v0.c0)) THEN rt0.c4 COLLATE RTRIM ELSE (((x'', rt0.c0, rt0.c1, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c1, rt1.c1, rt0.c4)) AND ((rt1.c3, rt0.c2, rt0.c1, v0.c0, '2069577649'))) END WHERE (((CAST(((rt0.c1)GLOB(rt1.c1)) AS NUMERIC)) ISNULL));
SELECT * FROM v0 RIGHT OUTER JOIN rt1 ON (rt1.c4 IN ()) RIGHT OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN (((v0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt1.c2, rt0.c0, rt1.c2)) AND ((rt0.c0, rt1.c0, rt1.c3))) WHEN (rt0.c0 IN ()) THEN CASE WHEN rt1.c3 THEN rt0.c1 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c0 END WHEN ((rt1.c1)>=(v0.c0)) THEN rt0.c4 COLLATE RTRIM ELSE (((x'', rt0.c0, rt0.c1, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c1, rt1.c1, rt0.c4)) AND ((rt1.c3, rt0.c2, rt0.c1, v0.c0, '2069577649'))) END;
SELECT DISTINCT * FROM v0, rt1;
SELECT DISTINCT * FROM v0, rt1 WHERE (rt1.c4) UNION SELECT DISTINCT * FROM v0, rt1 WHERE ((NOT (rt1.c4))) UNION SELECT DISTINCT * FROM v0, rt1 WHERE (((rt1.c4) ISNULL));
SELECT DISTINCT * FROM v0, rt1;
SELECT ALL rt1.c2, rt1.c3, rt0.c2, rt0.c1, rt1.c1, rt1.c0, rt0.c3, rt0.c4 FROM rt1, rt0 GROUP BY rt1.c2, rt1.c3, rt0.c2, rt0.c1, rt1.c1, rt1.c0, rt0.c3, rt0.c4;
SELECT ALL rt1.c2, rt1.c3, rt0.c2, rt0.c1, rt1.c1, rt1.c0, rt0.c3, rt0.c4 FROM rt1, rt0 WHERE (((((((rt1.c4) NOTNULL))OR((((rt0.c1))=((rt1.c3))))))AND(((rt1.c4)==(rt0.c3))))) GROUP BY rt1.c2, rt1.c3, rt0.c2, rt0.c1, rt1.c1, rt1.c0, rt0.c3, rt0.c4 UNION SELECT rt1.c2, rt1.c3, rt0.c2, rt0.c1, rt1.c1, rt1.c0, rt0.c3, rt0.c4 FROM rt1, rt0 WHERE ((NOT (((((((rt1.c4) NOTNULL))OR((((rt0.c1))==((rt1.c3))))))AND(((rt1.c4)=(rt0.c3))))))) GROUP BY rt1.c2, rt1.c3, rt0.c2, rt0.c1, rt1.c1, rt1.c0, rt0.c3, rt0.c4 UNION SELECT rt1.c2, rt1.c3, rt0.c2, rt0.c1, rt1.c1, rt1.c0, rt0.c3, rt0.c4 FROM rt1, rt0 WHERE (((((((((rt1.c4) NOTNULL))OR((((rt0.c1))=((rt1.c3))))))AND(((rt1.c4)==(rt0.c3))))) ISNULL)) GROUP BY rt1.c2, rt1.c3, rt0.c2, rt0.c1, rt1.c1, rt1.c0, rt0.c3, rt0.c4;
SELECT ALL rt1.c2, rt1.c3, rt0.c2, rt0.c1, rt1.c1, rt1.c0, rt0.c3, rt0.c4 FROM rt1, rt0 GROUP BY rt1.c2, rt1.c3, rt0.c2, rt0.c1, rt1.c1, rt1.c0, rt0.c3, rt0.c4;
SELECT v0.c0, rt0.c3, rt1.c3, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON CAST(((rt1.c3)<=(rt1.c0)) AS NUMERIC) CROSS JOIN rt1 ON x'' GROUP BY v0.c0, rt0.c3, rt1.c3, rt0.c1;
SELECT TOTAL(CAST(((rt1.c1) NOTNULL) AS TEXT)) FROM rt1;
SELECT ALL * FROM v0, rt0, rt1;
SELECT * FROM v0, rt0, rt1 WHERE (CAST((((v0.c0))>((v0.c0))) AS BLOB)) UNION ALL SELECT * FROM v0, rt0, rt1 WHERE ((NOT (CAST((((v0.c0))>((v0.c0))) AS BLOB)))) UNION ALL SELECT * FROM v0, rt0, rt1 WHERE (((CAST((((v0.c0))>((v0.c0))) AS BLOB)) ISNULL));
SELECT ALL * FROM v0, rt0, rt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((CASE WHEN rt0.c0 THEN rt0.c3 END IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((CASE WHEN rt0.c0 THEN rt0.c3 END IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((CASE WHEN rt0.c0 THEN rt0.c3 END IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt1.c4, rt1.c2, rt1.c0, rt1.c1 FROM v0, rt1 GROUP BY rt1.c4, rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c4, rt1.c2, rt1.c0, rt1.c1 FROM v0, rt1 WHERE ((~ (NULLIF(DISTINCT v0.c0, 0.014901644713064988)))) GROUP BY rt1.c4, rt1.c2, rt1.c0, rt1.c1 UNION SELECT rt1.c4, rt1.c2, rt1.c0, rt1.c1 FROM v0, rt1 WHERE ((NOT ((~ (NULLIF(DISTINCT v0.c0, 0.014901644713064988)))))) GROUP BY rt1.c4, rt1.c2, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c4, rt1.c2, rt1.c0, rt1.c1 FROM v0, rt1 WHERE ((((~ (NULLIF(DISTINCT v0.c0, 0.014901644713064988)))) ISNULL)) GROUP BY rt1.c4, rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c4, rt1.c2, rt1.c0, rt1.c1 FROM v0, rt1 GROUP BY rt1.c4, rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt0.c3, rt0.c4, rt1.c1 FROM rt0, rt1 RIGHT OUTER JOIN v0 ON json_type(((rt1.c4) NOTNULL)) GROUP BY rt1.c0, rt0.c3, rt0.c4, rt1.c1;
SELECT rt1.c0, rt0.c3, rt0.c4, rt1.c1 FROM rt0, rt1 RIGHT OUTER JOIN v0 ON json_type(((rt1.c4) NOTNULL)) GROUP BY rt1.c0, rt0.c3, rt0.c4, rt1.c1 HAVING SUM(COUNT('0.16047447980083074')) UNION ALL SELECT ALL rt1.c0, rt0.c3, rt0.c4, rt1.c1 FROM rt0, rt1 RIGHT OUTER JOIN v0 ON json_type(((rt1.c4) NOTNULL)) GROUP BY rt1.c0, rt0.c3, rt0.c4, rt1.c1 HAVING (NOT (SUM(COUNT('0.16047447980083074')))) UNION ALL SELECT rt1.c0, rt0.c3, rt0.c4, rt1.c1 FROM rt0, rt1 RIGHT OUTER JOIN v0 ON json_type(((rt1.c4) NOTNULL)) GROUP BY rt1.c0, rt0.c3, rt0.c4, rt1.c1 HAVING ((SUM(COUNT('0.16047447980083074'))) ISNULL);
SELECT ALL rt1.c1, rt0.c3, rt0.c2, rt1.c3, rt1.c4, rt0.c0, rt0.c1, rt1.c2, v0.c0 FROM rt1, rt0, v0;
SELECT ALL rt1.c1, rt0.c3, rt0.c2, rt1.c3, rt1.c4, rt0.c0, rt0.c1, rt1.c2, v0.c0 FROM rt1, rt0, v0 WHERE (CAST(rt0.c2 AS REAL)) UNION ALL SELECT rt1.c1, rt0.c3, rt0.c2, rt1.c3, rt1.c4, rt0.c0, rt0.c1, rt1.c2, v0.c0 FROM rt1, rt0, v0 WHERE ((NOT (CAST(rt0.c2 AS REAL)))) UNION ALL SELECT ALL rt1.c1, rt0.c3, rt0.c2, rt1.c3, rt1.c4, rt0.c0, rt0.c1, rt1.c2, v0.c0 FROM rt1, rt0, v0 WHERE (((CAST(rt0.c2 AS REAL)) ISNULL));
SELECT ALL rt1.c1, rt0.c3, rt0.c2, rt1.c3, rt1.c4, rt0.c0, rt0.c1, rt1.c2, v0.c0 FROM rt1, rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((((('-(F|HO}') NOT NULL))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND(((v0.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((((('-(F|HO}') NOT NULL))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND(((v0.c0) NOT NULL)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((((('-(F|HO}') NOT NULL))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND(((v0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt1.c1, rt0.c0, rt1.c2 FROM v0, rt0, rt1 GROUP BY rt1.c1, rt0.c0, rt1.c2;
SELECT rt1.c1, rt0.c0, rt1.c2 FROM v0, rt0, rt1 WHERE (CASE ((rt1.c4)GLOB(rt0.c1))  WHEN CASE WHEN rt0.c0 THEN rt0.c3 END THEN 0.8673939323863074 COLLATE RTRIM ELSE rt0.c3 COLLATE BINARY END) GROUP BY rt1.c1, rt0.c0, rt1.c2 UNION SELECT ALL rt1.c1, rt0.c0, rt1.c2 FROM v0, rt0, rt1 WHERE ((NOT (CASE ((rt1.c4)GLOB(rt0.c1))  WHEN CASE WHEN rt0.c0 THEN rt0.c3 END THEN 0.8673939323863074 COLLATE RTRIM ELSE rt0.c3 COLLATE BINARY END))) GROUP BY rt1.c1, rt0.c0, rt1.c2 UNION SELECT ALL rt1.c1, rt0.c0, rt1.c2 FROM v0, rt0, rt1 WHERE (((CASE ((rt1.c4)GLOB(rt0.c1))  WHEN CASE WHEN rt0.c0 THEN rt0.c3 END THEN 0.8673939323863074 COLLATE RTRIM ELSE rt0.c3 COLLATE BINARY END) ISNULL)) GROUP BY rt1.c1, rt0.c0, rt1.c2;
SELECT ALL rt1.c1, rt0.c0, rt1.c2 FROM v0, rt0, rt1 GROUP BY rt1.c1, rt0.c0, rt1.c2;
SELECT rt1.c2, v0.c0, rt1.c3 FROM v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c3;
SELECT ALL rt1.c2, v0.c0, rt1.c3 FROM v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c3 HAVING (+ (((((((((MIN(rt1.c1))OR(COUNT(*))))OR(GROUP_CONCAT(MIN(TOTAL(rt1.c1))))))AND(v0.c0)))OR(rt1.c0)))) UNION ALL SELECT rt1.c2, v0.c0, rt1.c3 FROM v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c3 HAVING (NOT ((+ (((((((((MIN(rt1.c1))OR(COUNT(*))))OR(GROUP_CONCAT(MIN(TOTAL(rt1.c1))))))AND(v0.c0)))OR(rt1.c0)))))) UNION ALL SELECT rt1.c2, v0.c0, rt1.c3 FROM v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c3 HAVING (((+ (((((((((MIN(rt1.c1))OR(COUNT(*))))OR(GROUP_CONCAT(MIN(TOTAL(rt1.c1))))))AND(v0.c0)))OR(rt1.c0))))) ISNULL);
SELECT * FROM rt1, v0;
SELECT ALL * FROM rt1, v0 WHERE (CASE WHEN (NOT (rt1.c1)) THEN CAST(rt1.c0 AS INTEGER) WHEN ((NULL) ISNULL) THEN LIKELY(DISTINCT v0.c0) WHEN ((((((((rt1.c4)AND(v0.c0)))OR('o4m1j28l')))AND(rt1.c1)))OR(rt1.c3)) THEN (+ (rt1.c0)) ELSE -1.971510373E9 END) UNION ALL SELECT ALL * FROM rt1, v0 WHERE ((NOT (CASE WHEN (NOT (rt1.c1)) THEN CAST(rt1.c0 AS INTEGER) WHEN ((NULL) ISNULL) THEN LIKELY(DISTINCT v0.c0) WHEN ((((((((rt1.c4)AND(v0.c0)))OR('o4m1j28l')))AND(rt1.c1)))OR(rt1.c3)) THEN (+ (rt1.c0)) ELSE -1.971510373E9 END))) UNION ALL SELECT ALL * FROM rt1, v0 WHERE (((CASE WHEN (NOT (rt1.c1)) THEN CAST(rt1.c0 AS INTEGER) WHEN ((NULL) ISNULL) THEN LIKELY(DISTINCT v0.c0) WHEN ((((((((rt1.c4)AND(v0.c0)))OR('o4m1j28l')))AND(rt1.c1)))OR(rt1.c3)) THEN (+ (rt1.c0)) ELSE -1.971510373E9 END) ISNULL));
SELECT * FROM rt1, v0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((('T㸲')>(CAST(rt1.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((('T㸲')>(CAST(rt1.c0 AS BLOB)))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((('T㸲')>(CAST(rt1.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c2, rt1.c1, rt1.c4, rt0.c0, rt0.c4, v0.c0 FROM v0, rt0, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c4, rt0.c0, rt0.c4, v0.c0;
SELECT rt1.c2, rt1.c1, rt1.c4, rt0.c0, rt0.c4, v0.c0 FROM v0, rt0, rt1 WHERE (((CASE WHEN rt1.c2 THEN rt0.c4 END)<<(((rt1.c3)OR(v0.c0))))) GROUP BY rt1.c2, rt1.c1, rt1.c4, rt0.c0, rt0.c4, v0.c0 UNION SELECT rt1.c2, rt1.c1, rt1.c4, rt0.c0, rt0.c4, v0.c0 FROM v0, rt0, rt1 WHERE ((NOT (((CASE WHEN rt1.c2 THEN rt0.c4 END)<<(((rt1.c3)OR(v0.c0))))))) GROUP BY rt1.c2, rt1.c1, rt1.c4, rt0.c0, rt0.c4, v0.c0 UNION SELECT rt1.c2, rt1.c1, rt1.c4, rt0.c0, rt0.c4, v0.c0 FROM v0, rt0, rt1 WHERE (((((CASE WHEN rt1.c2 THEN rt0.c4 END)<<(((rt1.c3)OR(v0.c0))))) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c4, rt0.c0, rt0.c4, v0.c0;
SELECT rt1.c2, rt1.c1, rt1.c4, rt0.c0, rt0.c4, v0.c0 FROM v0, rt0, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c4, rt0.c0, rt0.c4, v0.c0;
SELECT rt1.c4, rt0.c0, rt1.c2, rt0.c1, rt0.c2, v0.c0, rt1.c3, rt0.c4, rt1.c0, rt1.c1, rt0.c3 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt0.c0, rt1.c2, rt0.c1, rt0.c2, v0.c0, rt1.c3, rt0.c4, rt1.c0, rt1.c1, rt0.c3;
SELECT ALL rt1.c4, rt0.c0, rt1.c2, rt0.c1, rt0.c2, v0.c0, rt1.c3, rt0.c4, rt1.c0, rt1.c1, rt0.c3 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt0.c0, rt1.c2, rt0.c1, rt0.c2, v0.c0, rt1.c3, rt0.c4, rt1.c0, rt1.c1, rt0.c3 HAVING CASE WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c1))) THEN ((COUNT(*)) NOT BETWEEN (rt1.c0) AND (rt1.c2)) END UNION ALL SELECT rt1.c4, rt0.c0, rt1.c2, rt0.c1, rt0.c2, v0.c0, rt1.c3, rt0.c4, rt1.c0, rt1.c1, rt0.c3 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt0.c0, rt1.c2, rt0.c1, rt0.c2, v0.c0, rt1.c3, rt0.c4, rt1.c0, rt1.c1, rt0.c3 HAVING (NOT (CASE WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c1))) THEN ((COUNT(*)) NOT BETWEEN (rt1.c0) AND (rt1.c2)) END)) UNION ALL SELECT rt1.c4, rt0.c0, rt1.c2, rt0.c1, rt0.c2, v0.c0, rt1.c3, rt0.c4, rt1.c0, rt1.c1, rt0.c3 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt0.c0, rt1.c2, rt0.c1, rt0.c2, v0.c0, rt1.c3, rt0.c4, rt1.c0, rt1.c1, rt0.c3 HAVING ((CASE WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c1))) THEN ((COUNT(*)) NOT BETWEEN (rt1.c0) AND (rt1.c2)) END) ISNULL);
SELECT rt1.c4, rt0.c0, rt1.c2, rt0.c1, rt0.c2, v0.c0, rt1.c3, rt0.c4, rt1.c0, rt1.c1, rt0.c3 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt0.c0, rt1.c2, rt0.c1, rt0.c2, v0.c0, rt1.c3, rt0.c4, rt1.c0, rt1.c1, rt0.c3;
SELECT ALL rt1.c4, rt0.c0, rt1.c2, rt0.c1, rt0.c2, v0.c0, rt1.c3, rt0.c4, rt1.c0, rt1.c1, rt0.c3 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt0.c0, rt1.c2, rt0.c1, rt0.c2, v0.c0, rt1.c3, rt0.c4, rt1.c0, rt1.c1, rt0.c3 HAVING CASE WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c1))) THEN ((COUNT(*)) NOT BETWEEN (rt1.c0) AND (rt1.c2)) END UNION ALL SELECT rt1.c4, rt0.c0, rt1.c2, rt0.c1, rt0.c2, v0.c0, rt1.c3, rt0.c4, rt1.c0, rt1.c1, rt0.c3 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt0.c0, rt1.c2, rt0.c1, rt0.c2, v0.c0, rt1.c3, rt0.c4, rt1.c0, rt1.c1, rt0.c3 HAVING (NOT (CASE WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c1))) THEN ((COUNT(*)) NOT BETWEEN (rt1.c0) AND (rt1.c2)) END)) UNION ALL SELECT rt1.c4, rt0.c0, rt1.c2, rt0.c1, rt0.c2, v0.c0, rt1.c3, rt0.c4, rt1.c0, rt1.c1, rt0.c3 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt0.c0, rt1.c2, rt0.c1, rt0.c2, v0.c0, rt1.c3, rt0.c4, rt1.c0, rt1.c1, rt0.c3 HAVING ((CASE WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c1))) THEN ((COUNT(*)) NOT BETWEEN (rt1.c0) AND (rt1.c2)) END) ISNULL);
SELECT rt1.c4, rt0.c0, rt1.c2, rt0.c1, rt0.c2, v0.c0, rt1.c3, rt0.c4, rt1.c0, rt1.c1, rt0.c3 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt0.c0, rt1.c2, rt0.c1, rt0.c2, v0.c0, rt1.c3, rt0.c4, rt1.c0, rt1.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM rt0;
SELECT rt0.c2, rt0.c3 FROM rt0 WHERE (((((rt0.c4)AND(rt0.c4)))AND(rt0.c1)) COLLATE BINARY) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (((((rt0.c4)AND(rt0.c4)))AND(rt0.c1)) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0 WHERE (((((((rt0.c4)AND(rt0.c4)))AND(rt0.c1)) COLLATE BINARY) ISNULL));
SELECT ALL rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0))>=((v0.c0))) COLLATE RTRIM) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0))>=((v0.c0))) COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0))>=((v0.c0))) COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt1.c3, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c1, rt1.c0;
SELECT rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE ((+ ((NOT (1557234848))))) GROUP BY rt1.c3, rt1.c1, rt1.c0 UNION SELECT ALL rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT ((+ ((NOT (1557234848))))))) GROUP BY rt1.c3, rt1.c1, rt1.c0 UNION SELECT ALL rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE ((((+ ((NOT (1557234848))))) ISNULL)) GROUP BY rt1.c3, rt1.c1, rt1.c0;
SELECT rt1.c3, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c1, rt1.c0;
SELECT rt1.c4, rt0.c0 FROM rt0 CROSS JOIN rt1 ON (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c4)) IN ()) GROUP BY rt1.c4, rt0.c0;
SELECT rt1.c4, rt0.c0 FROM rt0 CROSS JOIN rt1 ON (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c4)) IN ()) GROUP BY rt1.c4, rt0.c0 HAVING MIN('1925943545') UNION ALL SELECT rt1.c4, rt0.c0 FROM rt0 CROSS JOIN rt1 ON (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c4)) IN ()) GROUP BY rt1.c4, rt0.c0 HAVING (NOT (MIN('1925943545'))) UNION ALL SELECT rt1.c4, rt0.c0 FROM rt0 CROSS JOIN rt1 ON (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c4)) IN ()) GROUP BY rt1.c4, rt0.c0 HAVING ((MIN('1925943545')) ISNULL);
SELECT rt1.c4, rt0.c0 FROM rt0 CROSS JOIN rt1 ON (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c4)) IN ()) GROUP BY rt1.c4, rt0.c0;
SELECT rt1.c4, rt0.c0 FROM rt0 CROSS JOIN rt1 ON (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c4)) IN ()) GROUP BY rt1.c4, rt0.c0 HAVING MIN('1925943545') UNION ALL SELECT rt1.c4, rt0.c0 FROM rt0 CROSS JOIN rt1 ON (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c4)) IN ()) GROUP BY rt1.c4, rt0.c0 HAVING (NOT (MIN('1925943545'))) UNION ALL SELECT rt1.c4, rt0.c0 FROM rt0 CROSS JOIN rt1 ON (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c4)) IN ()) GROUP BY rt1.c4, rt0.c0 HAVING ((MIN('1925943545')) ISNULL);
SELECT rt1.c4, rt0.c0 FROM rt0 CROSS JOIN rt1 ON (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c4)) IN ()) GROUP BY rt1.c4, rt0.c0;
SELECT * FROM v0 CROSS JOIN rt0 ON CAST((+ (rt0.c0)) AS TEXT);
SELECT * FROM v0 CROSS JOIN rt0 ON CAST((+ (rt0.c0)) AS TEXT) WHERE (rt0.c1) UNION ALL SELECT * FROM v0 CROSS JOIN rt0 ON CAST((+ (rt0.c0)) AS TEXT) WHERE ((NOT (rt0.c1))) UNION ALL SELECT * FROM v0 CROSS JOIN rt0 ON CAST((+ (rt0.c0)) AS TEXT) WHERE (((rt0.c1) ISNULL));
SELECT * FROM v0 CROSS JOIN rt0 ON CAST((+ (rt0.c0)) AS TEXT);
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (((((((((CASE rt1.c4  WHEN 'Pb' THEN rt1.c4 ELSE rt1.c3 END)OR(((NULL)<=(0.9417921515281978)))))AND((rt1.c3 IN (rt1.c0)))))AND(((((((((rt1.c2)AND(x'103d')))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c3)))))AND(((rt1.c1)LIKE(rt1.c2))))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (((((((((CASE rt1.c4  WHEN 'Pb' THEN rt1.c4 ELSE rt1.c3 END)OR(((NULL)<=(0.9417921515281978)))))AND((rt1.c3 IN (rt1.c0)))))AND(((((((((rt1.c2)AND(x'103d')))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c3)))))AND(((rt1.c1)LIKE(rt1.c2))))))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (((((((((((CASE rt1.c4  WHEN 'Pb' THEN rt1.c4 ELSE rt1.c3 END)OR(((NULL)<=(0.9417921515281978)))))AND((rt1.c3 IN (rt1.c0)))))AND(((((((((rt1.c2)AND(x'103d')))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c3)))))AND(((rt1.c1)LIKE(rt1.c2))))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT ALL rt1.c4, rt0.c2, rt0.c3 FROM rt1, rt0 GROUP BY rt1.c4, rt0.c2, rt0.c3;
SELECT ALL rt1.c4, rt0.c2, rt0.c3 FROM rt1, rt0 WHERE (-1.793402754E9) GROUP BY rt1.c4, rt0.c2, rt0.c3 UNION SELECT rt1.c4, rt0.c2, rt0.c3 FROM rt1, rt0 WHERE ((NOT (-1.793402754E9))) GROUP BY rt1.c4, rt0.c2, rt0.c3 UNION SELECT ALL rt1.c4, rt0.c2, rt0.c3 FROM rt1, rt0 WHERE (((-1.793402754E9) ISNULL)) GROUP BY rt1.c4, rt0.c2, rt0.c3;
SELECT ALL rt1.c4, rt0.c2, rt0.c3 FROM rt1, rt0 GROUP BY rt1.c4, rt0.c2, rt0.c3;
SELECT rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON NULL GROUP BY rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON NULL GROUP BY rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c0 HAVING ((COUNT(COUNT(*)))LIKE(CAST(rt0.c4 AS NUMERIC))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON NULL GROUP BY rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c0 HAVING (NOT (((COUNT(COUNT(*)))LIKE(CAST(rt0.c4 AS NUMERIC))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON NULL GROUP BY rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c0 HAVING ((((COUNT(COUNT(*)))LIKE(CAST(rt0.c4 AS NUMERIC)))) ISNULL);
SELECT rt1.c0, rt0.c2, rt0.c4, rt1.c1, rt0.c3, rt0.c0, v0.c0, rt1.c2, rt1.c3 FROM rt0, rt1 LEFT OUTER JOIN v0 ON (((rt0.c4)) BETWEEN ((CASE rt0.c4  WHEN rt1.c0 THEN rt0.c3 WHEN v0.c0 THEN '-1793402754' WHEN rt1.c1 THEN rt0.c1 END)) AND (((rt1.c1 IN ()))));
SELECT rt1.c0, rt0.c2, rt0.c4, rt1.c1, rt0.c3, rt0.c0, v0.c0, rt1.c2, rt1.c3 FROM rt0, rt1 LEFT OUTER JOIN v0 ON (((rt0.c4)) BETWEEN ((CASE rt0.c4  WHEN rt1.c0 THEN rt0.c3 WHEN v0.c0 THEN '-1793402754' WHEN rt1.c1 THEN rt0.c1 END)) AND (((rt1.c1 IN ())))) WHERE (((((rt1.c1)AND(rt0.c2)))AND((rt1.c3 IN ())))) UNION ALL SELECT rt1.c0, rt0.c2, rt0.c4, rt1.c1, rt0.c3, rt0.c0, v0.c0, rt1.c2, rt1.c3 FROM rt0, rt1 LEFT OUTER JOIN v0 ON (((rt0.c4)) BETWEEN ((CASE rt0.c4  WHEN rt1.c0 THEN rt0.c3 WHEN v0.c0 THEN '-1793402754' WHEN rt1.c1 THEN rt0.c1 END)) AND (((rt1.c1 IN ())))) WHERE ((NOT (((((rt1.c1)AND(rt0.c2)))AND((rt1.c3 IN ())))))) UNION ALL SELECT rt1.c0, rt0.c2, rt0.c4, rt1.c1, rt0.c3, rt0.c0, v0.c0, rt1.c2, rt1.c3 FROM rt0, rt1 LEFT OUTER JOIN v0 ON (((rt0.c4)) BETWEEN ((CASE rt0.c4  WHEN rt1.c0 THEN rt0.c3 WHEN v0.c0 THEN '-1793402754' WHEN rt1.c1 THEN rt0.c1 END)) AND (((rt1.c1 IN ())))) WHERE (((((((rt1.c1)AND(rt0.c2)))AND((rt1.c3 IN ())))) ISNULL));
SELECT rt1.c0, rt0.c2, rt0.c4, rt1.c1, rt0.c3, rt0.c0, v0.c0, rt1.c2, rt1.c3 FROM rt0, rt1 LEFT OUTER JOIN v0 ON (((rt0.c4)) BETWEEN ((CASE rt0.c4  WHEN rt1.c0 THEN rt0.c3 WHEN v0.c0 THEN '-1793402754' WHEN rt1.c1 THEN rt0.c1 END)) AND (((rt1.c1 IN ()))));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0 COLLATE BINARY, ((v0.c0)<(v0.c0)), ((v0.c0) IS TRUE))) AND ((((v0.c0)+(v0.c0)), CAST(v0.c0 AS REAL), -1971510373 COLLATE BINARY)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0 COLLATE BINARY, ((v0.c0)<(v0.c0)), ((v0.c0) IS TRUE))) AND ((((v0.c0)+(v0.c0)), CAST(v0.c0 AS REAL), -1971510373 COLLATE BINARY)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0 COLLATE BINARY, ((v0.c0)<(v0.c0)), ((v0.c0) IS TRUE))) AND ((((v0.c0)+(v0.c0)), CAST(v0.c0 AS REAL), -1971510373 COLLATE BINARY)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt1.c3, rt1.c2, rt1.c4, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c4, rt1.c1, rt1.c0;
SELECT ALL rt1.c3, rt1.c2, rt1.c4, rt1.c1, rt1.c0 FROM rt1 WHERE (CAST(CASE rt1.c4  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END AS BLOB)) GROUP BY rt1.c3, rt1.c2, rt1.c4, rt1.c1, rt1.c0 UNION SELECT ALL rt1.c3, rt1.c2, rt1.c4, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (CAST(CASE rt1.c4  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END AS BLOB)))) GROUP BY rt1.c3, rt1.c2, rt1.c4, rt1.c1, rt1.c0 UNION SELECT ALL rt1.c3, rt1.c2, rt1.c4, rt1.c1, rt1.c0 FROM rt1 WHERE (((CAST(CASE rt1.c4  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END AS BLOB)) ISNULL)) GROUP BY rt1.c3, rt1.c2, rt1.c4, rt1.c1, rt1.c0;
SELECT rt1.c3, rt1.c2, rt1.c4, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c4, rt1.c1, rt1.c0;
SELECT rt1.c4, rt1.c2, rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c4, rt1.c2, rt1.c3, rt1.c1;
SELECT ALL rt1.c4, rt1.c2, rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c4, rt1.c2, rt1.c3, rt1.c1 HAVING COUNT((NOT (rt1.c2))) UNION ALL SELECT ALL rt1.c4, rt1.c2, rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c4, rt1.c2, rt1.c3, rt1.c1 HAVING (NOT (COUNT((NOT (rt1.c2))))) UNION ALL SELECT rt1.c4, rt1.c2, rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c4, rt1.c2, rt1.c3, rt1.c1 HAVING ((COUNT((NOT (rt1.c2)))) ISNULL);
SELECT rt1.c4, rt1.c2, rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c4, rt1.c2, rt1.c3, rt1.c1;
SELECT ALL rt1.c4, rt1.c2, rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c4, rt1.c2, rt1.c3, rt1.c1 HAVING COUNT((NOT (rt1.c2))) UNION ALL SELECT ALL rt1.c4, rt1.c2, rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c4, rt1.c2, rt1.c3, rt1.c1 HAVING (NOT (COUNT((NOT (rt1.c2))))) UNION ALL SELECT rt1.c4, rt1.c2, rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c4, rt1.c2, rt1.c3, rt1.c1 HAVING ((COUNT((NOT (rt1.c2)))) ISNULL);
SELECT rt1.c4, rt1.c2, rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c4, rt1.c2, rt1.c3, rt1.c1;
SELECT * FROM rt1, v0;
SELECT ALL * FROM rt1, v0 WHERE ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((((((rt1.c2)AND(rt1.c3)))OR(rt1.c3)))))) UNION ALL SELECT ALL * FROM rt1, v0 WHERE ((NOT ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((((((rt1.c2)AND(rt1.c3)))OR(rt1.c3)))))))) UNION ALL SELECT ALL * FROM rt1, v0 WHERE ((((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((((((rt1.c2)AND(rt1.c3)))OR(rt1.c3)))))) ISNULL));
SELECT * FROM rt1, v0;
SELECT DISTINCT rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c0 FROM rt1 WHERE (CAST(((rt1.c3)GLOB(rt1.c3)) AS BLOB)) UNION SELECT DISTINCT rt1.c0 FROM rt1 WHERE ((NOT (CAST(((rt1.c3)GLOB(rt1.c3)) AS BLOB)))) UNION SELECT DISTINCT rt1.c0 FROM rt1 WHERE (((CAST(((rt1.c3)GLOB(rt1.c3)) AS BLOB)) ISNULL));
SELECT DISTINCT rt1.c0 FROM rt1;
SELECT ALL rt0.c3, rt1.c2 FROM rt1, rt0 NOT INDEXED, v0 GROUP BY rt0.c3, rt1.c2;
SELECT rt0.c3, rt1.c2 FROM rt1, rt0, v0 WHERE (CAST(((rt1.c3) IS TRUE) AS REAL)) GROUP BY rt0.c3, rt1.c2 UNION SELECT ALL rt0.c3, rt1.c2 FROM rt1, rt0, v0 WHERE ((NOT (CAST(((rt1.c3) IS TRUE) AS REAL)))) GROUP BY rt0.c3, rt1.c2 UNION SELECT rt0.c3, rt1.c2 FROM rt1, rt0, v0 WHERE (((CAST(((rt1.c3) IS TRUE) AS REAL)) ISNULL)) GROUP BY rt0.c3, rt1.c2;
SELECT ALL rt0.c3, rt1.c2 FROM rt1, rt0 NOT INDEXED, v0 GROUP BY rt0.c3, rt1.c2;
SELECT ALL rt1.c3, rt0.c3, rt1.c0, rt1.c1, rt0.c0, rt0.c4, rt0.c2, rt1.c2 FROM rt0, rt1 GROUP BY rt1.c3, rt0.c3, rt1.c0, rt1.c1, rt0.c0, rt0.c4, rt0.c2, rt1.c2;
SELECT rt1.c3, rt0.c3, rt1.c0, rt1.c1, rt0.c0, rt0.c4, rt0.c2, rt1.c2 FROM rt0, rt1 GROUP BY rt1.c3, rt0.c3, rt1.c0, rt1.c1, rt0.c0, rt0.c4, rt0.c2, rt1.c2 HAVING '0.8673939323863074' UNION ALL SELECT ALL rt1.c3, rt0.c3, rt1.c0, rt1.c1, rt0.c0, rt0.c4, rt0.c2, rt1.c2 FROM rt0, rt1 GROUP BY rt1.c3, rt0.c3, rt1.c0, rt1.c1, rt0.c0, rt0.c4, rt0.c2, rt1.c2 HAVING (NOT ('0.8673939323863074')) UNION ALL SELECT ALL rt1.c3, rt0.c3, rt1.c0, rt1.c1, rt0.c0, rt0.c4, rt0.c2, rt1.c2 FROM rt0, rt1 GROUP BY rt1.c3, rt0.c3, rt1.c0, rt1.c1, rt0.c0, rt0.c4, rt0.c2, rt1.c2 HAVING (('0.8673939323863074') ISNULL);
SELECT ALL rt1.c3, rt0.c3, rt1.c0, rt1.c1, rt0.c0, rt0.c4, rt0.c2, rt1.c2 FROM rt0, rt1 GROUP BY rt1.c3, rt0.c3, rt1.c0, rt1.c1, rt0.c0, rt0.c4, rt0.c2, rt1.c2;
SELECT rt1.c3, rt0.c3, rt1.c0, rt1.c1, rt0.c0, rt0.c4, rt0.c2, rt1.c2 FROM rt0, rt1 GROUP BY rt1.c3, rt0.c3, rt1.c0, rt1.c1, rt0.c0, rt0.c4, rt0.c2, rt1.c2 HAVING '0.8673939323863074' UNION ALL SELECT ALL rt1.c3, rt0.c3, rt1.c0, rt1.c1, rt0.c0, rt0.c4, rt0.c2, rt1.c2 FROM rt0, rt1 GROUP BY rt1.c3, rt0.c3, rt1.c0, rt1.c1, rt0.c0, rt0.c4, rt0.c2, rt1.c2 HAVING (NOT ('0.8673939323863074')) UNION ALL SELECT ALL rt1.c3, rt0.c3, rt1.c0, rt1.c1, rt0.c0, rt0.c4, rt0.c2, rt1.c2 FROM rt0, rt1 GROUP BY rt1.c3, rt0.c3, rt1.c0, rt1.c1, rt0.c0, rt0.c4, rt0.c2, rt1.c2 HAVING (('0.8673939323863074') ISNULL);
SELECT ALL rt1.c3, rt0.c3, rt1.c0, rt1.c1, rt0.c0, rt0.c4, rt0.c2, rt1.c2 FROM rt0, rt1 GROUP BY rt1.c3, rt0.c3, rt1.c0, rt1.c1, rt0.c0, rt0.c4, rt0.c2, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM rt1 CROSS JOIN v0 ON '66102008';
SELECT rt1.c1, rt1.c2 FROM rt1 CROSS JOIN v0 ON '66102008' WHERE (CASE WHEN ((rt1.c1) BETWEEN (v0.c0) AND (rt1.c3)) THEN CASE rt1.c4  WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c4 THEN v0.c0 WHEN rt1.c2 THEN rt1.c0 END WHEN ((rt1.c2) NOTNULL) THEN ((v0.c0)!=(rt1.c0)) WHEN (~ (v0.c0)) THEN ((rt1.c4) BETWEEN (rt1.c4) AND (0.7351233279408984)) ELSE ((rt1.c4)!=(rt1.c4)) END) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1 CROSS JOIN v0 ON '66102008' WHERE ((NOT (CASE WHEN ((rt1.c1) BETWEEN (v0.c0) AND (rt1.c3)) THEN CASE rt1.c4  WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c4 THEN v0.c0 WHEN rt1.c2 THEN rt1.c0 END WHEN ((rt1.c2) NOTNULL) THEN ((v0.c0)<>(rt1.c0)) WHEN (~ (v0.c0)) THEN ((rt1.c4) BETWEEN (rt1.c4) AND (0.7351233279408984)) ELSE ((rt1.c4)!=(rt1.c4)) END))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1 CROSS JOIN v0 ON '66102008' WHERE (((CASE WHEN ((rt1.c1) BETWEEN (v0.c0) AND (rt1.c3)) THEN CASE rt1.c4  WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c4 THEN v0.c0 WHEN rt1.c2 THEN rt1.c0 END WHEN ((rt1.c2) NOTNULL) THEN ((v0.c0)!=(rt1.c0)) WHEN (~ (v0.c0)) THEN ((rt1.c4) BETWEEN (rt1.c4) AND (0.7351233279408984)) ELSE ((rt1.c4)<>(rt1.c4)) END) ISNULL));
SELECT rt1.c1, rt1.c2 FROM rt1 CROSS JOIN v0 ON '66102008';
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((rt0.c4)IS NOT(v0.c0)))>((('') NOT BETWEEN (rt0.c1) AND (v0.c0))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((rt0.c4)IS NOT(v0.c0)))>((('') NOT BETWEEN (rt0.c1) AND (v0.c0))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((rt0.c4)IS NOT(v0.c0)))>((('') NOT BETWEEN (rt0.c1) AND (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((((CAST(rt0.c1 AS TEXT))OR((v0.c0 IN ()))))AND((~ (rt0.c3)))) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0;
SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((((CAST(rt0.c1 AS TEXT))OR((v0.c0 IN ()))))AND((~ (rt0.c3)))) WHERE (-1777579765) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0 UNION SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((((CAST(rt0.c1 AS TEXT))OR((v0.c0 IN ()))))AND((~ (rt0.c3)))) WHERE ((NOT (-1777579765))) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0 UNION SELECT ALL rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((((CAST(rt0.c1 AS TEXT))OR((v0.c0 IN ()))))AND((~ (rt0.c3)))) WHERE (((-1777579765) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0;
SELECT ALL rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((((CAST(rt0.c1 AS TEXT))OR((v0.c0 IN ()))))AND((~ (rt0.c3)))) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0;
SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3, v0.c0;
SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3, v0.c0 HAVING (+ (SUM(COUNT(x'')))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3, v0.c0 HAVING (NOT ((+ (SUM(COUNT(x'')))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3, v0.c0 HAVING (((+ (SUM(COUNT(x''))))) ISNULL);
SELECT rt0.c4, rt0.c3, v0.c0, rt0.c2 FROM rt0, v0;
SELECT ALL rt0.c4, rt0.c3, v0.c0, rt0.c2 FROM rt0, v0 WHERE (((((((NULL)AND(rt0.c1)))AND(rt0.c2)))AND((((v0.c0, v0.c0, rt0.c1)) BETWEEN (('a', rt0.c1, rt0.c0)) AND (('-1448844465', rt0.c4, '911157328')))))) UNION ALL SELECT ALL rt0.c4, rt0.c3, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT (((((((NULL)AND(rt0.c1)))AND(rt0.c2)))AND((((v0.c0, v0.c0, rt0.c1)) BETWEEN (('a', rt0.c1, rt0.c0)) AND (('-1448844465', rt0.c4, '911157328')))))))) UNION ALL SELECT ALL rt0.c4, rt0.c3, v0.c0, rt0.c2 FROM rt0, v0 WHERE (((((((((NULL)AND(rt0.c1)))AND(rt0.c2)))AND((((v0.c0, v0.c0, rt0.c1)) BETWEEN (('a', rt0.c1, rt0.c0)) AND (('-1448844465', rt0.c4, '911157328')))))) ISNULL));
SELECT rt0.c4, rt0.c3, v0.c0, rt0.c2 FROM rt0, v0;
SELECT DISTINCT rt1.c1, v0.c0, rt0.c0, rt1.c3, rt0.c4, rt0.c3, rt1.c4, rt1.c0, rt0.c1, rt1.c2, rt0.c2 FROM v0, rt0, rt1;
SELECT DISTINCT rt1.c1, v0.c0, rt0.c0, rt1.c3, rt0.c4, rt0.c3, rt1.c4, rt1.c0, rt0.c1, rt1.c2, rt0.c2 FROM v0, rt0, rt1 WHERE ((((((((((~ (NULL)))OR(((rt1.c0) NOT NULL))))AND(CASE WHEN rt0.c0 THEN rt1.c2 ELSE v0.c0 END)))AND(CAST(v0.c0 AS REAL))))OR(((v0.c0) NOTNULL)))) UNION SELECT DISTINCT rt1.c1, v0.c0, rt0.c0, rt1.c3, rt0.c4, rt0.c3, rt1.c4, rt1.c0, rt0.c1, rt1.c2, rt0.c2 FROM v0, rt0, rt1 WHERE ((NOT ((((((((((~ (NULL)))OR(((rt1.c0) NOT NULL))))AND(CASE WHEN rt0.c0 THEN rt1.c2 ELSE v0.c0 END)))AND(CAST(v0.c0 AS REAL))))OR(((v0.c0) NOTNULL)))))) UNION SELECT DISTINCT rt1.c1, v0.c0, rt0.c0, rt1.c3, rt0.c4, rt0.c3, rt1.c4, rt1.c0, rt0.c1, rt1.c2, rt0.c2 FROM v0, rt0, rt1 WHERE ((((((((((((~ (NULL)))OR(((rt1.c0) NOT NULL))))AND(CASE WHEN rt0.c0 THEN rt1.c2 ELSE v0.c0 END)))AND(CAST(v0.c0 AS REAL))))OR(((v0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT rt1.c1, v0.c0, rt0.c0, rt1.c3, rt0.c4, rt0.c3, rt1.c4, rt1.c0, rt0.c1, rt1.c2, rt0.c2 FROM v0, rt0, rt1;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 WHERE (v0.c0) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 WHERE ((NOT (v0.c0))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 WHERE (((v0.c0) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c3 FROM rt0 NOT INDEXED GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((LOWER(DISTINCT 1e500))&(MAX(GROUP_CONCAT(rt0.c2), rt0.c0))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (((LOWER(DISTINCT 1e500))&(MAX(GROUP_CONCAT(rt0.c2), rt0.c0))))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((((LOWER(DISTINCT 1e500))&(MAX(GROUP_CONCAT(rt0.c2), rt0.c0)))) ISNULL);
SELECT ALL rt0.c3 FROM rt0 NOT INDEXED GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((LOWER(DISTINCT 1e500))&(MAX(GROUP_CONCAT(rt0.c2), rt0.c0))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (((LOWER(DISTINCT 1e500))&(MAX(GROUP_CONCAT(rt0.c2), rt0.c0))))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((((LOWER(DISTINCT 1e500))&(MAX(GROUP_CONCAT(rt0.c2), rt0.c0)))) ISNULL);
SELECT ALL rt0.c3 FROM rt0 NOT INDEXED GROUP BY rt0.c3;
SELECT rt1.c3, rt0.c3, v0.c0, rt0.c2, rt0.c1, rt1.c4, rt1.c0, rt0.c0, rt1.c2 FROM rt1, v0, rt0;
SELECT ALL rt1.c3, rt0.c3, v0.c0, rt0.c2, rt0.c1, rt1.c4, rt1.c0, rt0.c0, rt1.c2 FROM rt1, v0, rt0 WHERE (((((rt0.c1)-(rt0.c1))) ISNULL)) UNION ALL SELECT rt1.c3, rt0.c3, v0.c0, rt0.c2, rt0.c1, rt1.c4, rt1.c0, rt0.c0, rt1.c2 FROM rt1, v0, rt0 WHERE ((NOT (((((rt0.c1)-(rt0.c1))) ISNULL)))) UNION ALL SELECT rt1.c3, rt0.c3, v0.c0, rt0.c2, rt0.c1, rt1.c4, rt1.c0, rt0.c0, rt1.c2 FROM rt1, v0, rt0 WHERE (((((((rt0.c1)-(rt0.c1))) ISNULL)) ISNULL));
SELECT rt1.c3, rt0.c3, v0.c0, rt0.c2, rt0.c1, rt1.c4, rt1.c0, rt0.c0, rt1.c2 FROM rt1, v0, rt0;
SELECT DISTINCT rt1.c2, v0.c0, rt1.c4, rt1.c1, rt1.c3, rt0.c2, rt0.c3, rt0.c1 FROM rt0, rt1, v0;
SELECT DISTINCT rt1.c2, v0.c0, rt1.c4, rt1.c1, rt1.c3, rt0.c2, rt0.c3, rt0.c1 FROM rt0, rt1, v0 WHERE (((((rt1.c2))>=((rt1.c2))) IN (rt1.c1, 'u'))) UNION SELECT DISTINCT rt1.c2, v0.c0, rt1.c4, rt1.c1, rt1.c3, rt0.c2, rt0.c3, rt0.c1 FROM rt0, rt1, v0 WHERE ((NOT (((((rt1.c2))>=((rt1.c2))) IN (rt1.c1, 'u'))))) UNION SELECT DISTINCT rt1.c2, v0.c0, rt1.c4, rt1.c1, rt1.c3, rt0.c2, rt0.c3, rt0.c1 FROM rt0, rt1, v0 WHERE (((((((rt1.c2))>=((rt1.c2))) IN (rt1.c1, 'u'))) ISNULL));
SELECT DISTINCT rt1.c2, v0.c0, rt1.c4, rt1.c1, rt1.c3, rt0.c2, rt0.c3, rt0.c1 FROM rt0, rt1, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CAST(((v0.c0)>=(v0.c0)) AS TEXT)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 NOT INDEXED WHERE ((NOT (CAST(((v0.c0)>=(v0.c0)) AS TEXT)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST(((v0.c0)>=(v0.c0)) AS TEXT)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt1.c4, v0.c0, rt1.c0, rt1.c1, rt1.c2, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt1.c3 FROM rt1, v0 CROSS JOIN rt0 ON (('994314157' COLLATE NOCASE)>>(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c4 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c0 ELSE rt1.c3 END)) GROUP BY rt1.c4, v0.c0, rt1.c0, rt1.c1, rt1.c2, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt1.c3;
SELECT ALL rt1.c4, v0.c0, rt1.c0, rt1.c1, rt1.c2, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt1.c3 FROM rt1, v0 CROSS JOIN rt0 ON (('994314157' COLLATE NOCASE)>>(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c4 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c0 ELSE rt1.c3 END)) GROUP BY rt1.c4, v0.c0, rt1.c0, rt1.c1, rt1.c2, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt1.c3 HAVING rt0.c0 UNION ALL SELECT rt1.c4, v0.c0, rt1.c0, rt1.c1, rt1.c2, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt1.c3 FROM rt1, v0 CROSS JOIN rt0 ON (('994314157' COLLATE NOCASE)>>(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c4 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c0 ELSE rt1.c3 END)) GROUP BY rt1.c4, v0.c0, rt1.c0, rt1.c1, rt1.c2, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt1.c3 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL rt1.c4, v0.c0, rt1.c0, rt1.c1, rt1.c2, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt1.c3 FROM rt1, v0 CROSS JOIN rt0 ON (('994314157' COLLATE NOCASE)>>(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c4 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c0 ELSE rt1.c3 END)) GROUP BY rt1.c4, v0.c0, rt1.c0, rt1.c1, rt1.c2, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt1.c3 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt1.c4, v0.c0, rt1.c0, rt1.c1, rt1.c2, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt1.c3 FROM rt1, v0 CROSS JOIN rt0 ON (('994314157' COLLATE NOCASE)>>(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c4 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c0 ELSE rt1.c3 END)) GROUP BY rt1.c4, v0.c0, rt1.c0, rt1.c1, rt1.c2, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt1.c3;
SELECT ALL rt1.c4, v0.c0, rt1.c0, rt1.c1, rt1.c2, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt1.c3 FROM rt1, v0 CROSS JOIN rt0 ON (('994314157' COLLATE NOCASE)>>(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c4 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c0 ELSE rt1.c3 END)) GROUP BY rt1.c4, v0.c0, rt1.c0, rt1.c1, rt1.c2, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt1.c3 HAVING rt0.c0 UNION ALL SELECT rt1.c4, v0.c0, rt1.c0, rt1.c1, rt1.c2, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt1.c3 FROM rt1, v0 CROSS JOIN rt0 ON (('994314157' COLLATE NOCASE)>>(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c4 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c0 ELSE rt1.c3 END)) GROUP BY rt1.c4, v0.c0, rt1.c0, rt1.c1, rt1.c2, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt1.c3 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL rt1.c4, v0.c0, rt1.c0, rt1.c1, rt1.c2, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt1.c3 FROM rt1, v0 CROSS JOIN rt0 ON (('994314157' COLLATE NOCASE)>>(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c4 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c0 ELSE rt1.c3 END)) GROUP BY rt1.c4, v0.c0, rt1.c0, rt1.c1, rt1.c2, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt1.c3 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt1.c4, v0.c0, rt1.c0, rt1.c1, rt1.c2, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt1.c3 FROM rt1, v0 CROSS JOIN rt0 ON (('994314157' COLLATE NOCASE)>>(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c4 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c0 ELSE rt1.c3 END)) GROUP BY rt1.c4, v0.c0, rt1.c0, rt1.c1, rt1.c2, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt1.c3;
SELECT ALL * FROM rt1, rt0;
SELECT * FROM rt1, rt0 WHERE ((((CAST(rt1.c0 AS TEXT)))!=((UNLIKELY(rt1.c1))))) UNION ALL SELECT * FROM rt1, rt0 WHERE ((NOT ((((CAST(rt1.c0 AS TEXT)))!=((UNLIKELY(rt1.c1))))))) UNION ALL SELECT * FROM rt1, rt0 WHERE ((((((CAST(rt1.c0 AS TEXT)))<>((UNLIKELY(rt1.c1))))) ISNULL));
SELECT ALL * FROM rt1, rt0;
SELECT DISTINCT * FROM rt0, rt1, v0;
SELECT DISTINCT * FROM rt0, rt1, v0 WHERE (CAST(CASE WHEN 0.7901954493624669 THEN rt0.c0 END AS REAL)) UNION SELECT DISTINCT * FROM rt0, rt1, v0 WHERE ((NOT (CAST(CASE WHEN 0.7901954493624669 THEN rt0.c0 END AS REAL)))) UNION SELECT DISTINCT * FROM rt0, rt1, v0 WHERE (((CAST(CASE WHEN 0.7901954493624669 THEN rt0.c0 END AS REAL)) ISNULL));
SELECT DISTINCT * FROM rt0, rt1, v0;
SELECT ALL rt1.c2, rt1.c4, rt1.c3, v0.c0 FROM v0 CROSS JOIN rt1 ON 1388586445 GROUP BY rt1.c2, rt1.c4, rt1.c3, v0.c0;
SELECT rt1.c2, rt1.c4, rt1.c3, v0.c0 FROM v0 CROSS JOIN rt1 ON 1388586445 WHERE (CAST(((rt1.c4) IS FALSE) AS NUMERIC)) GROUP BY rt1.c2, rt1.c4, rt1.c3, v0.c0 UNION SELECT ALL rt1.c2, rt1.c4, rt1.c3, v0.c0 FROM v0 CROSS JOIN rt1 ON 1388586445 WHERE ((NOT (CAST(((rt1.c4) IS FALSE) AS NUMERIC)))) GROUP BY rt1.c2, rt1.c4, rt1.c3, v0.c0 UNION SELECT ALL rt1.c2, rt1.c4, rt1.c3, v0.c0 FROM v0 CROSS JOIN rt1 ON 1388586445 WHERE (((CAST(((rt1.c4) IS FALSE) AS NUMERIC)) ISNULL)) GROUP BY rt1.c2, rt1.c4, rt1.c3, v0.c0;
SELECT ALL rt1.c2, rt1.c4, rt1.c3, v0.c0 FROM v0 CROSS JOIN rt1 ON 1388586445 GROUP BY rt1.c2, rt1.c4, rt1.c3, v0.c0;
SELECT ALL rt1.c1, rt0.c3, rt0.c0, rt1.c0, rt1.c3, v0.c0, rt1.c4, rt0.c2, rt0.c1, rt1.c2, rt0.c4 FROM rt0, rt1, v0 GROUP BY rt1.c1, rt0.c3, rt0.c0, rt1.c0, rt1.c3, v0.c0, rt1.c4, rt0.c2, rt0.c1, rt1.c2, rt0.c4;
SELECT ALL rt1.c1, rt0.c3, rt0.c0, rt1.c0, rt1.c3, v0.c0, rt1.c4, rt0.c2, rt0.c1, rt1.c2, rt0.c4 FROM rt0, rt1, v0 GROUP BY rt1.c1, rt0.c3, rt0.c0, rt1.c0, rt1.c3, v0.c0, rt1.c4, rt0.c2, rt0.c1, rt1.c2, rt0.c4 HAVING MIN(MAX(rt0.c2)) UNION ALL SELECT rt1.c1, rt0.c3, rt0.c0, rt1.c0, rt1.c3, v0.c0, rt1.c4, rt0.c2, rt0.c1, rt1.c2, rt0.c4 FROM rt0, rt1, v0 GROUP BY rt1.c1, rt0.c3, rt0.c0, rt1.c0, rt1.c3, v0.c0, rt1.c4, rt0.c2, rt0.c1, rt1.c2, rt0.c4 HAVING (NOT (MIN(MAX(rt0.c2)))) UNION ALL SELECT rt1.c1, rt0.c3, rt0.c0, rt1.c0, rt1.c3, v0.c0, rt1.c4, rt0.c2, rt0.c1, rt1.c2, rt0.c4 FROM rt0, rt1, v0 GROUP BY rt1.c1, rt0.c3, rt0.c0, rt1.c0, rt1.c3, v0.c0, rt1.c4, rt0.c2, rt0.c1, rt1.c2, rt0.c4 HAVING ((MIN(MAX(rt0.c2))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((('q|') NOTNULL)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((('q|') NOTNULL)))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((('q|') NOTNULL)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0, rt1.c1, rt1.c3, rt0.c0, rt0.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt1.c4 FROM rt0, rt1 LEFT OUTER JOIN v0 ON ((((rt1.c1) NOT NULL)) IS TRUE);
SELECT DISTINCT v0.c0, rt1.c1, rt1.c3, rt0.c0, rt0.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt1.c4 FROM rt0, rt1 LEFT OUTER JOIN v0 ON ((((rt1.c1) NOT NULL)) IS TRUE) WHERE (x'') UNION SELECT DISTINCT v0.c0, rt1.c1, rt1.c3, rt0.c0, rt0.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt1.c4 FROM rt0, rt1 LEFT OUTER JOIN v0 ON ((((rt1.c1) NOT NULL)) IS TRUE) WHERE ((NOT (x''))) UNION SELECT DISTINCT v0.c0, rt1.c1, rt1.c3, rt0.c0, rt0.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt1.c4 FROM rt0, rt1 LEFT OUTER JOIN v0 ON ((((rt1.c1) NOT NULL)) IS TRUE) WHERE (((x'') ISNULL));
SELECT DISTINCT v0.c0, rt1.c1, rt1.c3, rt0.c0, rt0.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt1.c4 FROM rt0, rt1 LEFT OUTER JOIN v0 ON ((((rt1.c1) NOT NULL)) IS TRUE);
SELECT rt0.c4, v0.c0, rt0.c3, rt1.c1, rt0.c1, rt1.c3, rt0.c2 FROM rt0, v0, rt1 GROUP BY rt0.c4, v0.c0, rt0.c3, rt1.c1, rt0.c1, rt1.c3, rt0.c2;
SELECT rt0.c4, v0.c0, rt0.c3, rt1.c1, rt0.c1, rt1.c3, rt0.c2 FROM rt0, v0, rt1 WHERE (((DATETIME(rt0.c2, rt1.c1, rt1.c0))||(x''))) GROUP BY rt0.c4, v0.c0, rt0.c3, rt1.c1, rt0.c1, rt1.c3, rt0.c2 UNION SELECT ALL rt0.c4, v0.c0, rt0.c3, rt1.c1, rt0.c1, rt1.c3, rt0.c2 FROM rt0, v0, rt1 WHERE ((NOT (((DATETIME(rt0.c2, rt1.c1, rt1.c0))||(x''))))) GROUP BY rt0.c4, v0.c0, rt0.c3, rt1.c1, rt0.c1, rt1.c3, rt0.c2 UNION SELECT rt0.c4, v0.c0, rt0.c3, rt1.c1, rt0.c1, rt1.c3, rt0.c2 FROM rt0, v0, rt1 WHERE (((((DATETIME(rt0.c2, rt1.c1, rt1.c0))||(x''))) ISNULL)) GROUP BY rt0.c4, v0.c0, rt0.c3, rt1.c1, rt0.c1, rt1.c3, rt0.c2;
SELECT rt0.c4, v0.c0, rt0.c3, rt1.c1, rt0.c1, rt1.c3, rt0.c2 FROM rt0, v0, rt1 GROUP BY rt0.c4, v0.c0, rt0.c3, rt1.c1, rt0.c1, rt1.c3, rt0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(MAX(MIN(MAX(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(MAX(MIN(MAX(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(MAX(MIN(MAX(v0.c0))))) ISNULL);
SELECT rt1.c0, rt1.c2, rt1.c3 FROM rt1;
SELECT rt1.c0, rt1.c2, rt1.c3 FROM rt1 WHERE (((((((rt1.c2)OR(-1913148243)))AND(rt1.c2)))-(((rt1.c2) NOT BETWEEN (rt1.c0) AND ('I'))))) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c3 FROM rt1 WHERE ((NOT (((((((rt1.c2)OR(-1913148243)))AND(rt1.c2)))-(((rt1.c2) NOT BETWEEN (rt1.c0) AND ('I'))))))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c3 FROM rt1 WHERE (((((((((rt1.c2)OR(-1913148243)))AND(rt1.c2)))-(((rt1.c2) NOT BETWEEN (rt1.c0) AND ('I'))))) ISNULL));
SELECT rt1.c0, rt1.c2, rt1.c3 FROM rt1;
SELECT DISTINCT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0 WHERE (CAST(CASE WHEN rt0.c4 THEN rt1.c2 ELSE rt0.c1 END AS REAL)) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((NOT (CAST(CASE WHEN rt0.c4 THEN rt1.c2 ELSE rt0.c1 END AS REAL)))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE (((CAST(CASE WHEN rt0.c4 THEN rt1.c2 ELSE rt0.c1 END AS REAL)) ISNULL));
SELECT DISTINCT * FROM rt1, rt0;
SELECT rt0.c1, rt1.c4, v0.c0, rt1.c2, rt1.c1, rt0.c2, rt0.c4, rt0.c3, rt1.c3 FROM rt0, rt1 INNER JOIN v0 ON (((('435472833')AND(rt0.c2)))OR(rt1.c4)) COLLATE RTRIM GROUP BY rt0.c1, rt1.c4, v0.c0, rt1.c2, rt1.c1, rt0.c2, rt0.c4, rt0.c3, rt1.c3;
SELECT ALL rt0.c1, rt1.c4, v0.c0, rt1.c2, rt1.c1, rt0.c2, rt0.c4, rt0.c3, rt1.c3 FROM rt0, rt1 INNER JOIN v0 ON (((('435472833')AND(rt0.c2)))OR(rt1.c4)) COLLATE RTRIM WHERE ((((((rt1.c3))>=((rt0.c3))))OR(((rt0.c1)IS NOT(rt0.c4))))) GROUP BY rt0.c1, rt1.c4, v0.c0, rt1.c2, rt1.c1, rt0.c2, rt0.c4, rt0.c3, rt1.c3 UNION SELECT ALL rt0.c1, rt1.c4, v0.c0, rt1.c2, rt1.c1, rt0.c2, rt0.c4, rt0.c3, rt1.c3 FROM rt0, rt1 INNER JOIN v0 ON (((('435472833')AND(rt0.c2)))OR(rt1.c4)) COLLATE RTRIM WHERE ((NOT ((((((rt1.c3))>=((rt0.c3))))OR(((rt0.c1)IS NOT(rt0.c4))))))) GROUP BY rt0.c1, rt1.c4, v0.c0, rt1.c2, rt1.c1, rt0.c2, rt0.c4, rt0.c3, rt1.c3 UNION SELECT rt0.c1, rt1.c4, v0.c0, rt1.c2, rt1.c1, rt0.c2, rt0.c4, rt0.c3, rt1.c3 FROM rt0, rt1 INNER JOIN v0 ON (((('435472833')AND(rt0.c2)))OR(rt1.c4)) COLLATE RTRIM WHERE ((((((((rt1.c3))>=((rt0.c3))))OR(((rt0.c1)IS NOT(rt0.c4))))) ISNULL)) GROUP BY rt0.c1, rt1.c4, v0.c0, rt1.c2, rt1.c1, rt0.c2, rt0.c4, rt0.c3, rt1.c3;
SELECT rt0.c1, rt1.c4, v0.c0, rt1.c2, rt1.c1, rt0.c2, rt0.c4, rt0.c3, rt1.c3 FROM rt0, rt1 INNER JOIN v0 ON (((('435472833')AND(rt0.c2)))OR(rt1.c4)) COLLATE RTRIM GROUP BY rt0.c1, rt1.c4, v0.c0, rt1.c2, rt1.c1, rt0.c2, rt0.c4, rt0.c3, rt1.c3;
SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c4, rt0.c0;
SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c4, rt0.c0 HAVING (((rt0.c0)) BETWEEN ((((rt0.c4)||(rt0.c3)))) AND ((COUNT(MIN(SUM(rt0.c3)))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c4, rt0.c0 HAVING (NOT ((((rt0.c0)) BETWEEN ((((rt0.c4)||(rt0.c3)))) AND ((COUNT(MIN(SUM(rt0.c3)))))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c4, rt0.c0 HAVING (((((rt0.c0)) BETWEEN ((((rt0.c4)||(rt0.c3)))) AND ((COUNT(MIN(SUM(rt0.c3))))))) ISNULL);
SELECT * FROM v0, rt0 FULL OUTER JOIN rt1 ON (- ((rt1.c2 IN ())));
SELECT ALL * FROM v0, rt0 FULL OUTER JOIN rt1 ON (- ((rt1.c2 IN ()))) WHERE (((((v0.c0)!=('+tPGཀྵf䯡^*'))) NOT NULL)) UNION ALL SELECT ALL * FROM v0, rt0 FULL OUTER JOIN rt1 ON (- ((rt1.c2 IN ()))) WHERE ((NOT (((((v0.c0)<>('+tPGཀྵf䯡^*'))) NOT NULL)))) UNION ALL SELECT ALL * FROM v0, rt0 FULL OUTER JOIN rt1 ON (- ((rt1.c2 IN ()))) WHERE (((((((v0.c0)!=('+tPGཀྵf䯡^*'))) NOT NULL)) ISNULL));
SELECT * FROM v0, rt0 FULL OUTER JOIN rt1 ON (- ((rt1.c2 IN ())));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((NOT (rt0.c1))))==((((rt0.c4) BETWEEN (x'') AND (rt0.c4)))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (((((NOT (rt0.c1))))=((((rt0.c4) BETWEEN (x'') AND (rt0.c4)))))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((((NOT (rt0.c1))))=((((rt0.c4) BETWEEN (x'') AND (rt0.c4)))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT rt1.c3 FROM rt1 WHERE (((((rt1.c0)-(rt1.c3)))>((((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))))) GROUP BY rt1.c3 UNION SELECT ALL rt1.c3 FROM rt1 WHERE ((NOT (((((rt1.c0)-(rt1.c3)))>((((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))))))) GROUP BY rt1.c3 UNION SELECT rt1.c3 FROM rt1 WHERE (((((((rt1.c0)-(rt1.c3)))>((((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))))) ISNULL)) GROUP BY rt1.c3;
SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT ALL rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1;
SELECT rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1 HAVING MIN((rt0.c3 IN ())) UNION ALL SELECT ALL rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1 HAVING (NOT (MIN((rt0.c3 IN ())))) UNION ALL SELECT ALL rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1 HAVING ((MIN((rt0.c3 IN ()))) ISNULL);
SELECT ALL rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1;
SELECT rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1 HAVING MIN((rt0.c3 IN ())) UNION ALL SELECT ALL rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1 HAVING (NOT (MIN((rt0.c3 IN ())))) UNION ALL SELECT ALL rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1 HAVING ((MIN((rt0.c3 IN ()))) ISNULL);
SELECT ALL rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0)AND(v0.c0))) NOT NULL)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)AND(v0.c0))) NOT NULL)))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)AND(v0.c0))) NOT NULL)) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT v0.c0, rt0.c1 FROM rt0, v0;
SELECT DISTINCT v0.c0, rt0.c1 FROM rt0, v0 WHERE ((((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0)))) NOTNULL)) UNION SELECT DISTINCT v0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT ((((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0)))) NOTNULL)))) UNION SELECT DISTINCT v0.c0, rt0.c1 FROM rt0, v0 WHERE ((((((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0)))) NOTNULL)) ISNULL));
SELECT DISTINCT v0.c0, rt0.c1 FROM rt0, v0;
SELECT ALL rt1.c2 FROM rt0, rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt0, rt1 WHERE (CASE CAST(rt1.c0 AS REAL)  WHEN ((rt1.c4)+(x'e7b8')) THEN ((rt0.c4) NOTNULL) END) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt0, rt1 WHERE ((NOT (CASE CAST(rt1.c0 AS REAL)  WHEN ((rt1.c4)+(x'e7b8')) THEN ((rt0.c4) NOTNULL) END))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt0, rt1 WHERE (((CASE CAST(rt1.c0 AS REAL)  WHEN ((rt1.c4)+(x'e7b8')) THEN ((rt0.c4) NOTNULL) END) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt0, rt1 GROUP BY rt1.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(SUM(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(SUM(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(SUM(v0.c0))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM v0, rt0 WHERE (IFNULL(DISTINCT CAST(rt0.c3 AS BLOB), (rt0.c3 IN ()))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM v0, rt0 WHERE ((NOT (IFNULL(DISTINCT CAST(rt0.c3 AS BLOB), (rt0.c3 IN ()))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM v0, rt0 WHERE (((IFNULL(DISTINCT CAST(rt0.c3 AS BLOB), (rt0.c3 IN ()))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM v0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 NOT INDEXED WHERE (((((v0.c0) BETWEEN ('') AND (v0.c0))) NOTNULL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN ('') AND (v0.c0))) NOTNULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((v0.c0) BETWEEN ('') AND (v0.c0))) NOTNULL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(MIN(v0.c0) AS REAL))IS NOT((- (v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((CAST(MIN(v0.c0) AS REAL))IS NOT((- (v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((CAST(MIN(v0.c0) AS REAL))IS NOT((- (v0.c0))))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(MIN(v0.c0) AS REAL))IS NOT((- (v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((CAST(MIN(v0.c0) AS REAL))IS NOT((- (v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((CAST(MIN(v0.c0) AS REAL))IS NOT((- (v0.c0))))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL MAX((+ (rt1.c1 COLLATE BINARY))) FROM v0, rt0, rt1 ORDER BY (~ (CAST(rt0.c1 AS INTEGER)));
SELECT v0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0;
SELECT v0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 WHERE ((+ (((rt0.c4) IS TRUE)))) UNION ALL SELECT v0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT ((+ (((rt0.c4) IS TRUE)))))) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 WHERE ((((+ (((rt0.c4) IS TRUE)))) ISNULL));
SELECT v0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0;
SELECT DISTINCT rt1.c4, rt0.c4, rt0.c0, rt0.c3 FROM rt0, rt1;
SELECT DISTINCT rt1.c4, rt0.c4, rt0.c0, rt0.c3 FROM rt0, rt1 WHERE (((((0.8881585935656823) BETWEEN (rt0.c2) AND (rt0.c3)))<=((rt1.c0 IN (rt0.c0, rt0.c0))))) UNION SELECT DISTINCT rt1.c4, rt0.c4, rt0.c0, rt0.c3 FROM rt0, rt1 WHERE ((NOT (((((0.8881585935656823) BETWEEN (rt0.c2) AND (rt0.c3)))<=((rt1.c0 IN (rt0.c0, rt0.c0))))))) UNION SELECT DISTINCT rt1.c4, rt0.c4, rt0.c0, rt0.c3 FROM rt0, rt1 WHERE (((((((0.8881585935656823) BETWEEN (rt0.c2) AND (rt0.c3)))<=((rt1.c0 IN (rt0.c0, rt0.c0))))) ISNULL));
SELECT DISTINCT rt1.c4, rt0.c4, rt0.c0, rt0.c3 FROM rt0, rt1;
SELECT rt1.c2, v0.c0, rt1.c0, rt1.c1, rt0.c1, rt0.c0, rt0.c3, rt0.c4, rt1.c3 FROM rt0 INNER JOIN v0 ON CAST(CAST(v0.c0 AS NUMERIC) AS TEXT) FULL OUTER JOIN rt1 ON (((rt1.c1) NOTNULL) IN ()) GROUP BY rt1.c2, v0.c0, rt1.c0, rt1.c1, rt0.c1, rt0.c0, rt0.c3, rt0.c4, rt1.c3;
SELECT ALL rt1.c2, v0.c0, rt1.c0, rt1.c1, rt0.c1, rt0.c0, rt0.c3, rt0.c4, rt1.c3 FROM rt0 INNER JOIN v0 ON CAST(CAST(v0.c0 AS NUMERIC) AS TEXT) FULL OUTER JOIN rt1 ON (((rt1.c1) NOTNULL) IN ()) WHERE ((NOT ((rt1.c1 IN (rt0.c1))))) GROUP BY rt1.c2, v0.c0, rt1.c0, rt1.c1, rt0.c1, rt0.c0, rt0.c3, rt0.c4, rt1.c3 UNION SELECT ALL rt1.c2, v0.c0, rt1.c0, rt1.c1, rt0.c1, rt0.c0, rt0.c3, rt0.c4, rt1.c3 FROM rt0 INNER JOIN v0 ON CAST(CAST(v0.c0 AS NUMERIC) AS TEXT) FULL OUTER JOIN rt1 ON (((rt1.c1) NOTNULL) IN ()) WHERE ((NOT ((NOT ((rt1.c1 IN (rt0.c1))))))) GROUP BY rt1.c2, v0.c0, rt1.c0, rt1.c1, rt0.c1, rt0.c0, rt0.c3, rt0.c4, rt1.c3 UNION SELECT rt1.c2, v0.c0, rt1.c0, rt1.c1, rt0.c1, rt0.c0, rt0.c3, rt0.c4, rt1.c3 FROM rt0 INNER JOIN v0 ON CAST(CAST(v0.c0 AS NUMERIC) AS TEXT) FULL OUTER JOIN rt1 ON (((rt1.c1) NOTNULL) IN ()) WHERE ((((NOT ((rt1.c1 IN (rt0.c1))))) ISNULL)) GROUP BY rt1.c2, v0.c0, rt1.c0, rt1.c1, rt0.c1, rt0.c0, rt0.c3, rt0.c4, rt1.c3;
SELECT rt1.c2, v0.c0, rt1.c0, rt1.c1, rt0.c1, rt0.c0, rt0.c3, rt0.c4, rt1.c3 FROM rt0 INNER JOIN v0 ON CAST(CAST(v0.c0 AS NUMERIC) AS TEXT) FULL OUTER JOIN rt1 ON (((rt1.c1) NOTNULL) IN ()) GROUP BY rt1.c2, v0.c0, rt1.c0, rt1.c1, rt0.c1, rt0.c0, rt0.c3, rt0.c4, rt1.c3;
SELECT ALL rt1.c4, rt1.c0, rt0.c2, rt0.c3, rt1.c2, rt1.c3, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c4, rt1.c0, rt0.c2, rt0.c3, rt1.c2, rt1.c3, rt0.c0;
SELECT rt1.c4, rt1.c0, rt0.c2, rt0.c3, rt1.c2, rt1.c3, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c4, rt1.c0, rt0.c2, rt0.c3, rt1.c2, rt1.c3, rt0.c0 HAVING SUM(((((AVG(TOTAL(rt1.c4)))OR(rt1.c3)))OR(rt1.c0))) UNION ALL SELECT rt1.c4, rt1.c0, rt0.c2, rt0.c3, rt1.c2, rt1.c3, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c4, rt1.c0, rt0.c2, rt0.c3, rt1.c2, rt1.c3, rt0.c0 HAVING (NOT (SUM(((((AVG(TOTAL(rt1.c4)))OR(rt1.c3)))OR(rt1.c0))))) UNION ALL SELECT rt1.c4, rt1.c0, rt0.c2, rt0.c3, rt1.c2, rt1.c3, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c4, rt1.c0, rt0.c2, rt0.c3, rt1.c2, rt1.c3, rt0.c0 HAVING ((SUM(((((AVG(TOTAL(rt1.c4)))OR(rt1.c3)))OR(rt1.c0)))) ISNULL);
SELECT rt1.c1, v0.c0, rt0.c1, rt0.c4 FROM rt0, rt1, v0;
SELECT ALL rt1.c1, v0.c0, rt0.c1, rt0.c4 FROM rt0, rt1, v0 WHERE ((((- (rt0.c0))) NOT BETWEEN ((((rt1.c1))<=((rt0.c0)))) AND (LIKELY(rt0.c2)))) UNION ALL SELECT ALL rt1.c1, v0.c0, rt0.c1, rt0.c4 FROM rt0, rt1, v0 WHERE ((NOT ((((- (rt0.c0))) NOT BETWEEN ((((rt1.c1))<=((rt0.c0)))) AND (LIKELY(rt0.c2)))))) UNION ALL SELECT rt1.c1, v0.c0, rt0.c1, rt0.c4 FROM rt0, rt1, v0 WHERE ((((((- (rt0.c0))) NOT BETWEEN ((((rt1.c1))<=((rt0.c0)))) AND (LIKELY(rt0.c2)))) ISNULL));
SELECT rt1.c1, v0.c0, rt0.c1, rt0.c4 FROM rt0, rt1, v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (CAST(((rt0.c1)IS(rt0.c4)) AS REAL)) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (CAST(((rt0.c1)IS(rt0.c4)) AS REAL)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((CAST(((rt0.c1)IS(rt0.c4)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c0, v0.c0, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c3, rt0.c1;
SELECT rt0.c0, v0.c0, rt0.c3, rt0.c1 FROM rt0, v0 WHERE (((rt0.c0)+('hF\nMX%2'))) GROUP BY rt0.c0, v0.c0, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c0, v0.c0, rt0.c3, rt0.c1 FROM rt0, v0 WHERE ((NOT (((rt0.c0)+('hF\nMX%2'))))) GROUP BY rt0.c0, v0.c0, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c0, v0.c0, rt0.c3, rt0.c1 FROM rt0, v0 WHERE (((((rt0.c0)+('hF\nMX%2'))) ISNULL)) GROUP BY rt0.c0, v0.c0, rt0.c3, rt0.c1;
SELECT rt0.c0, v0.c0, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c3, rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(GROUP_CONCAT(MAX(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(GROUP_CONCAT(MAX(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(GROUP_CONCAT(MAX(v0.c0)))) ISNULL);
SELECT * FROM rt0, v0, rt1;
SELECT * FROM rt0, v0, rt1 WHERE (((rt0.c3) IS TRUE) COLLATE BINARY) UNION ALL SELECT * FROM rt0, v0, rt1 WHERE ((NOT (((rt0.c3) IS TRUE) COLLATE BINARY))) UNION ALL SELECT * FROM rt0, v0, rt1 WHERE (((((rt0.c3) IS TRUE) COLLATE BINARY) ISNULL));
SELECT * FROM rt0, v0, rt1;
SELECT DISTINCT rt1.c1, rt1.c4, rt1.c3, rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c4, rt1.c3, rt1.c2, rt1.c0 FROM rt1 WHERE ((~ ((rt1.c3 IN ())))) UNION SELECT DISTINCT rt1.c1, rt1.c4, rt1.c3, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT ((~ ((rt1.c3 IN ())))))) UNION SELECT DISTINCT rt1.c1, rt1.c4, rt1.c3, rt1.c2, rt1.c0 FROM rt1 WHERE ((((~ ((rt1.c3 IN ())))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c4, rt1.c3, rt1.c2, rt1.c0 FROM rt1;
SELECT ALL rt1.c0, rt1.c2, rt1.c4, rt0.c1, rt0.c4, rt0.c3, rt1.c3 FROM v0, rt0 CROSS JOIN rt1 ON (((((rt0.c1, rt1.c3, rt0.c3)) NOT BETWEEN ((rt0.c2, x'07d2', rt0.c4)) AND ((rt0.c2, rt1.c1, rt1.c2)))) NOT BETWEEN (x'') AND (((((rt0.c3)AND(rt1.c1)))OR(x'd566')))) GROUP BY rt1.c0, rt1.c2, rt1.c4, rt0.c1, rt0.c4, rt0.c3, rt1.c3;
SELECT rt1.c0, rt1.c2, rt1.c4, rt0.c1, rt0.c4, rt0.c3, rt1.c3 FROM v0, rt0 CROSS JOIN rt1 ON (((((rt0.c1, rt1.c3, rt0.c3)) NOT BETWEEN ((rt0.c2, x'07d2', rt0.c4)) AND ((rt0.c2, rt1.c1, rt1.c2)))) NOT BETWEEN (x'') AND (((((rt0.c3)AND(rt1.c1)))OR(x'd566')))) WHERE (CAST(((rt0.c2) NOT BETWEEN (rt1.c3) AND (rt0.c3)) AS TEXT)) GROUP BY rt1.c0, rt1.c2, rt1.c4, rt0.c1, rt0.c4, rt0.c3, rt1.c3 UNION SELECT rt1.c0, rt1.c2, rt1.c4, rt0.c1, rt0.c4, rt0.c3, rt1.c3 FROM v0, rt0 CROSS JOIN rt1 ON (((((rt0.c1, rt1.c3, rt0.c3)) NOT BETWEEN ((rt0.c2, x'07d2', rt0.c4)) AND ((rt0.c2, rt1.c1, rt1.c2)))) NOT BETWEEN (x'') AND (((((rt0.c3)AND(rt1.c1)))OR(x'd566')))) WHERE ((NOT (CAST(((rt0.c2) NOT BETWEEN (rt1.c3) AND (rt0.c3)) AS TEXT)))) GROUP BY rt1.c0, rt1.c2, rt1.c4, rt0.c1, rt0.c4, rt0.c3, rt1.c3 UNION SELECT ALL rt1.c0, rt1.c2, rt1.c4, rt0.c1, rt0.c4, rt0.c3, rt1.c3 FROM v0, rt0 CROSS JOIN rt1 ON (((((rt0.c1, rt1.c3, rt0.c3)) NOT BETWEEN ((rt0.c2, x'07d2', rt0.c4)) AND ((rt0.c2, rt1.c1, rt1.c2)))) NOT BETWEEN (x'') AND (((((rt0.c3)AND(rt1.c1)))OR(x'd566')))) WHERE (((CAST(((rt0.c2) NOT BETWEEN (rt1.c3) AND (rt0.c3)) AS TEXT)) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt1.c4, rt0.c1, rt0.c4, rt0.c3, rt1.c3;
SELECT ALL rt1.c0, rt1.c2, rt1.c4, rt0.c1, rt0.c4, rt0.c3, rt1.c3 FROM v0, rt0 CROSS JOIN rt1 ON (((((rt0.c1, rt1.c3, rt0.c3)) NOT BETWEEN ((rt0.c2, x'07d2', rt0.c4)) AND ((rt0.c2, rt1.c1, rt1.c2)))) NOT BETWEEN (x'') AND (((((rt0.c3)AND(rt1.c1)))OR(x'd566')))) GROUP BY rt1.c0, rt1.c2, rt1.c4, rt0.c1, rt0.c4, rt0.c3, rt1.c3;
SELECT rt0.c1, rt1.c1 FROM v0, rt1, rt0 GROUP BY rt0.c1, rt1.c1;
SELECT ALL rt0.c1, rt1.c1 FROM v0, rt1, rt0 GROUP BY rt0.c1, rt1.c1 HAVING COUNT(0.3156671517682029) UNION ALL SELECT rt0.c1, rt1.c1 FROM v0, rt1, rt0 GROUP BY rt0.c1, rt1.c1 HAVING (NOT (COUNT(0.3156671517682029))) UNION ALL SELECT ALL rt0.c1, rt1.c1 FROM v0, rt1, rt0 GROUP BY rt0.c1, rt1.c1 HAVING ((COUNT(0.3156671517682029)) ISNULL);
SELECT rt0.c1, rt1.c1 FROM v0, rt1, rt0 GROUP BY rt0.c1, rt1.c1;
SELECT ALL rt0.c1, rt1.c1 FROM v0, rt1, rt0 GROUP BY rt0.c1, rt1.c1 HAVING COUNT(0.3156671517682029) UNION ALL SELECT rt0.c1, rt1.c1 FROM v0, rt1, rt0 GROUP BY rt0.c1, rt1.c1 HAVING (NOT (COUNT(0.3156671517682029))) UNION ALL SELECT ALL rt0.c1, rt1.c1 FROM v0, rt1, rt0 GROUP BY rt0.c1, rt1.c1 HAVING ((COUNT(0.3156671517682029)) ISNULL);
SELECT rt0.c1, rt1.c1 FROM v0, rt1, rt0 GROUP BY rt0.c1, rt1.c1;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ('') UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (''))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((('') ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN v0 ON (((0.48123695353801943 IN ()))LIKE(((rt1.c2)!=(x'9435'))));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN v0 ON (((0.48123695353801943 IN ()))LIKE(((rt1.c2)<>(x'9435')))) WHERE (CASE WHEN 'r#籍xZlJn' THEN CAST(v0.c0 AS REAL) WHEN (((rt1.c3))==((rt1.c4))) THEN ((rt1.c3)+(rt1.c2)) WHEN ((rt1.c2)GLOB(rt1.c0)) THEN ((rt1.c4) BETWEEN (v0.c0) AND (NULL)) ELSE (rt1.c0 IN (rt1.c3, rt1.c4)) END) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 NOT INDEXED RIGHT OUTER JOIN v0 ON (((0.48123695353801943 IN ()))LIKE(((rt1.c2)!=(x'9435')))) WHERE ((NOT (CASE WHEN 'r#籍xZlJn' THEN CAST(v0.c0 AS REAL) WHEN (((rt1.c3))==((rt1.c4))) THEN ((rt1.c3)+(rt1.c2)) WHEN ((rt1.c2)GLOB(rt1.c0)) THEN ((rt1.c4) BETWEEN (v0.c0) AND (NULL)) ELSE (rt1.c0 IN (rt1.c3, rt1.c4)) END))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN v0 ON (((0.48123695353801943 IN ()))LIKE(((rt1.c2)!=(x'9435')))) WHERE (((CASE WHEN 'r#籍xZlJn' THEN CAST(v0.c0 AS REAL) WHEN (((rt1.c3))=((rt1.c4))) THEN ((rt1.c3)+(rt1.c2)) WHEN ((rt1.c2)GLOB(rt1.c0)) THEN ((rt1.c4) BETWEEN (v0.c0) AND (NULL)) ELSE (rt1.c0 IN (rt1.c3, rt1.c4)) END) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN v0 ON (((0.48123695353801943 IN ()))LIKE(((rt1.c2)!=(x'9435'))));
SELECT rt1.c2, rt1.c3, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c3, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c3, rt1.c0, rt1.c1 FROM rt1 WHERE ((+ (((((rt1.c0)OR(rt1.c1)))AND(rt1.c2))))) GROUP BY rt1.c2, rt1.c3, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c3, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT ((+ (((((rt1.c0)OR(rt1.c1)))AND(rt1.c2))))))) GROUP BY rt1.c2, rt1.c3, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c3, rt1.c0, rt1.c1 FROM rt1 WHERE ((((+ (((((rt1.c0)OR(rt1.c1)))AND(rt1.c2))))) ISNULL)) GROUP BY rt1.c2, rt1.c3, rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c3, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c3, rt1.c0, rt1.c1;
SELECT rt1.c1, v0.c0, rt1.c0, rt1.c4, rt1.c3, rt1.c2 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c4, rt1.c3, rt1.c2;
SELECT rt1.c1, v0.c0, rt1.c0, rt1.c4, rt1.c3, rt1.c2 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c4, rt1.c3, rt1.c2 HAVING GROUP_CONCAT(CAST(rt1.c4 AS BLOB)) UNION ALL SELECT rt1.c1, v0.c0, rt1.c0, rt1.c4, rt1.c3, rt1.c2 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c4, rt1.c3, rt1.c2 HAVING (NOT (GROUP_CONCAT(CAST(rt1.c4 AS BLOB)))) UNION ALL SELECT rt1.c1, v0.c0, rt1.c0, rt1.c4, rt1.c3, rt1.c2 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c4, rt1.c3, rt1.c2 HAVING ((GROUP_CONCAT(CAST(rt1.c4 AS BLOB))) ISNULL);
SELECT rt1.c1, v0.c0, rt1.c0, rt1.c4, rt1.c3, rt1.c2 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c4, rt1.c3, rt1.c2;
SELECT rt1.c1, v0.c0, rt1.c0, rt1.c4, rt1.c3, rt1.c2 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c4, rt1.c3, rt1.c2 HAVING GROUP_CONCAT(CAST(rt1.c4 AS BLOB)) UNION ALL SELECT rt1.c1, v0.c0, rt1.c0, rt1.c4, rt1.c3, rt1.c2 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c4, rt1.c3, rt1.c2 HAVING (NOT (GROUP_CONCAT(CAST(rt1.c4 AS BLOB)))) UNION ALL SELECT rt1.c1, v0.c0, rt1.c0, rt1.c4, rt1.c3, rt1.c2 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c4, rt1.c3, rt1.c2 HAVING ((GROUP_CONCAT(CAST(rt1.c4 AS BLOB))) ISNULL);
SELECT rt1.c1, v0.c0, rt1.c0, rt1.c4, rt1.c3, rt1.c2 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c4, rt1.c3, rt1.c2;
SELECT ALL MIN((- ((((rt0.c0, rt0.c0, rt0.c0))=((rt0.c1, rt0.c1, 0xffffffffcc79abc3)))))) FROM rt0 ORDER BY ((CASE rt0.c3  WHEN NULL THEN rt0.c3 END) NOT NULL) DESC  NULLS FIRST;
SELECT rt1.c2, rt0.c1 FROM rt1 INNER JOIN rt0 ON 'MR4D' CROSS JOIN v0 ON CAST((('251649854') BETWEEN (rt1.c3) AND (rt0.c1)) AS BLOB);
SELECT rt1.c2, rt0.c1 FROM rt1 INNER JOIN rt0 ON 'MR4D' CROSS JOIN v0 ON CAST((('251649854') BETWEEN (rt1.c3) AND (rt0.c1)) AS BLOB) WHERE ((((UNLIKELY(DISTINCT rt0.c1)))<(((((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c3))))))) UNION ALL SELECT rt1.c2, rt0.c1 FROM rt1 INNER JOIN rt0 ON 'MR4D' CROSS JOIN v0 ON CAST((('251649854') BETWEEN (rt1.c3) AND (rt0.c1)) AS BLOB) WHERE ((NOT ((((UNLIKELY(DISTINCT rt0.c1)))<(((((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c3))))))))) UNION ALL SELECT rt1.c2, rt0.c1 FROM rt1 INNER JOIN rt0 ON 'MR4D' CROSS JOIN v0 ON CAST((('251649854') BETWEEN (rt1.c3) AND (rt0.c1)) AS BLOB) WHERE ((((((UNLIKELY(DISTINCT rt0.c1)))<(((((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c3))))))) ISNULL));
SELECT rt1.c2, rt0.c1 FROM rt1 INNER JOIN rt0 ON 'MR4D' CROSS JOIN v0 ON CAST((('251649854') BETWEEN (rt1.c3) AND (rt0.c1)) AS BLOB);
SELECT DISTINCT rt0.c3, rt0.c2, rt1.c2, rt0.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c0, rt1.c0, rt1.c4 FROM rt0, rt1;
SELECT DISTINCT rt0.c3, rt0.c2, rt1.c2, rt0.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c0, rt1.c0, rt1.c4 FROM rt0, rt1 WHERE ((((rt0.c3)<=(rt1.c3)) IN (CASE rt1.c2  WHEN rt0.c4 THEN rt0.c2 ELSE rt1.c4 END))) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt1.c2, rt0.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c0, rt1.c0, rt1.c4 FROM rt0, rt1 WHERE ((NOT ((((rt0.c3)<=(rt1.c3)) IN (CASE rt1.c2  WHEN rt0.c4 THEN rt0.c2 ELSE rt1.c4 END))))) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt1.c2, rt0.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c0, rt1.c0, rt1.c4 FROM rt0, rt1 WHERE ((((((rt0.c3)<=(rt1.c3)) IN (CASE rt1.c2  WHEN rt0.c4 THEN rt0.c2 ELSE rt1.c4 END))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2, rt1.c2, rt0.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c0, rt1.c0, rt1.c4 FROM rt0, rt1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((NOT (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((NOT (v0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (- (SUM(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((- (SUM(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((- (SUM(v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (- (SUM(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((- (SUM(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((- (SUM(v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT SUM(CAST(CASE WHEN rt1.c3 THEN rt1.c3 END AS TEXT)) FROM v0, rt0, rt1;
SELECT * FROM v0, rt1 NATURAL JOIN rt0;
SELECT ALL * FROM v0, rt1 NATURAL JOIN rt0 WHERE (rt1.c1) UNION ALL SELECT ALL * FROM v0, rt1 NATURAL JOIN rt0 WHERE ((NOT (rt1.c1))) UNION ALL SELECT ALL * FROM v0, rt1 NATURAL JOIN rt0 WHERE (((rt1.c1) ISNULL));
SELECT * FROM v0, rt1 NATURAL JOIN rt0;
SELECT DISTINCT * FROM v0, rt0, rt1;
SELECT DISTINCT * FROM v0, rt0, rt1 WHERE (((rt1.c2)IS NOT((+ (rt0.c2))))) UNION SELECT DISTINCT * FROM v0, rt0, rt1 WHERE ((NOT (((rt1.c2)IS NOT((+ (rt0.c2))))))) UNION SELECT DISTINCT * FROM v0, rt0, rt1 WHERE (((((rt1.c2)IS NOT((+ (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0, rt1;
SELECT ALL rt1.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt1.c4, rt1.c1, v0.c0 FROM rt0, v0, rt1 GROUP BY rt1.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt1.c4, rt1.c1, v0.c0;
SELECT ALL rt1.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt1.c4, rt1.c1, v0.c0 FROM rt0, v0, rt1 WHERE (CASE WHEN json_patch(rt1.c3, rt0.c1) THEN TYPEOF(rt0.c2) END) GROUP BY rt1.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt1.c4, rt1.c1, v0.c0 UNION SELECT ALL rt1.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt1.c4, rt1.c1, v0.c0 FROM rt0, v0, rt1 WHERE ((NOT (CASE WHEN json_patch(rt1.c3, rt0.c1) THEN TYPEOF(rt0.c2) END))) GROUP BY rt1.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt1.c4, rt1.c1, v0.c0 UNION SELECT ALL rt1.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt1.c4, rt1.c1, v0.c0 FROM rt0, v0, rt1 WHERE (((CASE WHEN json_patch(rt1.c3, rt0.c1) THEN TYPEOF(rt0.c2) END) ISNULL)) GROUP BY rt1.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt1.c4, rt1.c1, v0.c0;
SELECT ALL rt1.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt1.c4, rt1.c1, v0.c0 FROM rt0, v0, rt1 GROUP BY rt1.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt1.c4, rt1.c1, v0.c0;
SELECT ALL rt0.c0, rt1.c4, rt1.c2, rt0.c2, rt0.c3 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c4, rt1.c2, rt0.c2, rt0.c3;
SELECT rt0.c0, rt1.c4, rt1.c2, rt0.c2, rt0.c3 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c4, rt1.c2, rt0.c2, rt0.c3 HAVING (((COUNT(*), GROUP_CONCAT(rt1.c4), COUNT(*))) NOT BETWEEN ((MIN(rt1.c2), (((COUNT(MAX(rt0.c3)), rt0.c0, rt1.c4)) BETWEEN ((rt1.c4, rt1.c2, COUNT(*))) AND ((rt1.c4, rt1.c1, SUM(MIN(COUNT(*)))))), ((rt0.c4) NOT BETWEEN (COUNT(rt1.c3)) AND (rt0.c2)))) AND ((COUNT(MAX(rt0.c2)), GROUP_CONCAT(MAX(rt1.c4)), 'Pzzm裈+-棡'))) UNION ALL SELECT ALL rt0.c0, rt1.c4, rt1.c2, rt0.c2, rt0.c3 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c4, rt1.c2, rt0.c2, rt0.c3 HAVING (NOT ((((COUNT(*), GROUP_CONCAT(rt1.c4), COUNT(*))) NOT BETWEEN ((MIN(rt1.c2), (((COUNT(MAX(rt0.c3)), rt0.c0, rt1.c4)) BETWEEN ((rt1.c4, rt1.c2, COUNT(*))) AND ((rt1.c4, rt1.c1, SUM(MIN(COUNT(*)))))), ((rt0.c4) NOT BETWEEN (COUNT(rt1.c3)) AND (rt0.c2)))) AND ((COUNT(MAX(rt0.c2)), GROUP_CONCAT(MAX(rt1.c4)), 'Pzzm裈+-棡'))))) UNION ALL SELECT rt0.c0, rt1.c4, rt1.c2, rt0.c2, rt0.c3 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c4, rt1.c2, rt0.c2, rt0.c3 HAVING (((((COUNT(*), GROUP_CONCAT(rt1.c4), COUNT(*))) NOT BETWEEN ((MIN(rt1.c2), (((COUNT(MAX(rt0.c3)), rt0.c0, rt1.c4)) BETWEEN ((rt1.c4, rt1.c2, COUNT(*))) AND ((rt1.c4, rt1.c1, SUM(MIN(COUNT(*)))))), ((rt0.c4) NOT BETWEEN (COUNT(rt1.c3)) AND (rt0.c2)))) AND ((COUNT(MAX(rt0.c2)), GROUP_CONCAT(MAX(rt1.c4)), 'Pzzm裈+-棡')))) ISNULL);
SELECT rt1.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0 NOT INDEXED CROSS JOIN v0 ON CAST(CAST(v0.c0 AS INTEGER) AS BLOB) RIGHT OUTER JOIN rt1 ON ((CASE WHEN rt1.c0 THEN rt0.c0 END)<=(rt0.c0));
SELECT rt1.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0 CROSS JOIN v0 ON CAST(CAST(v0.c0 AS INTEGER) AS BLOB) RIGHT OUTER JOIN rt1 ON ((CASE WHEN rt1.c0 THEN rt0.c0 END)<=(rt0.c0)) WHERE ((((rt0.c0)) NOT BETWEEN (((NULL IN ()))) AND ((((((rt1.c3)OR(rt1.c3)))OR(rt1.c1)))))) UNION ALL SELECT rt1.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0 CROSS JOIN v0 ON CAST(CAST(v0.c0 AS INTEGER) AS BLOB) RIGHT OUTER JOIN rt1 ON ((CASE WHEN rt1.c0 THEN rt0.c0 END)<=(rt0.c0)) WHERE ((NOT ((((rt0.c0)) NOT BETWEEN (((NULL IN ()))) AND ((((((rt1.c3)OR(rt1.c3)))OR(rt1.c1)))))))) UNION ALL SELECT rt1.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0 CROSS JOIN v0 ON CAST(CAST(v0.c0 AS INTEGER) AS BLOB) RIGHT OUTER JOIN rt1 ON ((CASE WHEN rt1.c0 THEN rt0.c0 END)<=(rt0.c0)) WHERE ((((((rt0.c0)) NOT BETWEEN (((NULL IN ()))) AND ((((((rt1.c3)OR(rt1.c3)))OR(rt1.c1)))))) ISNULL));
SELECT rt1.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0 NOT INDEXED CROSS JOIN v0 ON CAST(CAST(v0.c0 AS INTEGER) AS BLOB) RIGHT OUTER JOIN rt1 ON ((CASE WHEN rt1.c0 THEN rt0.c0 END)<=(rt0.c0));
SELECT DISTINCT v0.c0, rt1.c4, rt1.c1, rt0.c0 FROM rt0, rt1, v0;
SELECT DISTINCT v0.c0, rt1.c4, rt1.c1, rt0.c0 FROM rt0, rt1, v0 WHERE (((((((((((((((((rt1.c1)AND(rt0.c3)))OR(rt0.c1)))AND(((rt1.c0)>=(-9.09033622E8)))))AND(rt1.c0 COLLATE BINARY)))OR(rt1.c0)))OR(((((rt0.c4)AND(rt0.c1)))OR(rt0.c4)))))AND((((v0.c0, rt0.c3, '5*YZ')) BETWEEN ((rt0.c4, rt1.c4, rt0.c3)) AND ((rt0.c0, rt0.c0, rt0.c1))))))AND(rt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0, rt1.c4, rt1.c1, rt0.c0 FROM rt0, rt1, v0 WHERE ((NOT (((((((((((((((((rt1.c1)AND(rt0.c3)))OR(rt0.c1)))AND(((rt1.c0)>=(-9.09033622E8)))))AND(rt1.c0 COLLATE BINARY)))OR(rt1.c0)))OR(((((rt0.c4)AND(rt0.c1)))OR(rt0.c4)))))AND((((v0.c0, rt0.c3, '5*YZ')) BETWEEN ((rt0.c4, rt1.c4, rt0.c3)) AND ((rt0.c0, rt0.c0, rt0.c1))))))AND(rt0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT v0.c0, rt1.c4, rt1.c1, rt0.c0 FROM rt0, rt1, v0 WHERE (((((((((((((((((((rt1.c1)AND(rt0.c3)))OR(rt0.c1)))AND(((rt1.c0)>=(-9.09033622E8)))))AND(rt1.c0 COLLATE BINARY)))OR(rt1.c0)))OR(((((rt0.c4)AND(rt0.c1)))OR(rt0.c4)))))AND((((v0.c0, rt0.c3, '5*YZ')) BETWEEN ((rt0.c4, rt1.c4, rt0.c3)) AND ((rt0.c0, rt0.c0, rt0.c1))))))AND(rt0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT v0.c0, rt1.c4, rt1.c1, rt0.c0 FROM rt0, rt1, v0;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 WHERE ((((rt1.c4)) BETWEEN (((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c3))))) AND ((((rt1.c1)>(rt1.c1)))))) GROUP BY rt1.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT ((((rt1.c4)) BETWEEN (((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c3))))) AND ((((rt1.c1)>(rt1.c1)))))))) GROUP BY rt1.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE ((((((rt1.c4)) BETWEEN (((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c3))))) AND ((((rt1.c1)>(rt1.c1)))))) ISNULL)) GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c4, rt1.c3, rt1.c2 FROM v0, rt1 GROUP BY rt1.c4, rt1.c3, rt1.c2;
SELECT rt1.c4, rt1.c3, rt1.c2 FROM v0, rt1 GROUP BY rt1.c4, rt1.c3, rt1.c2 HAVING HEX(((((COUNT(*))OR(GROUP_CONCAT(rt1.c1))))AND(rt1.c2))) UNION ALL SELECT rt1.c4, rt1.c3, rt1.c2 FROM v0, rt1 GROUP BY rt1.c4, rt1.c3, rt1.c2 HAVING (NOT (HEX(((((COUNT(*))OR(GROUP_CONCAT(rt1.c1))))AND(rt1.c2))))) UNION ALL SELECT ALL rt1.c4, rt1.c3, rt1.c2 FROM v0, rt1 GROUP BY rt1.c4, rt1.c3, rt1.c2 HAVING ((HEX(((((COUNT(*))OR(GROUP_CONCAT(rt1.c1))))AND(rt1.c2)))) ISNULL);
SELECT ALL rt1.c4, rt1.c3, rt1.c2 FROM v0, rt1 GROUP BY rt1.c4, rt1.c3, rt1.c2;
SELECT rt1.c4, rt1.c3, rt1.c2 FROM v0, rt1 GROUP BY rt1.c4, rt1.c3, rt1.c2 HAVING HEX(((((COUNT(*))OR(GROUP_CONCAT(rt1.c1))))AND(rt1.c2))) UNION ALL SELECT rt1.c4, rt1.c3, rt1.c2 FROM v0, rt1 GROUP BY rt1.c4, rt1.c3, rt1.c2 HAVING (NOT (HEX(((((COUNT(*))OR(GROUP_CONCAT(rt1.c1))))AND(rt1.c2))))) UNION ALL SELECT ALL rt1.c4, rt1.c3, rt1.c2 FROM v0, rt1 GROUP BY rt1.c4, rt1.c3, rt1.c2 HAVING ((HEX(((((COUNT(*))OR(GROUP_CONCAT(rt1.c1))))AND(rt1.c2)))) ISNULL);
SELECT ALL rt1.c4, rt1.c3, rt1.c2 FROM v0, rt1 GROUP BY rt1.c4, rt1.c3, rt1.c2;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((CAST(rt0.c2 AS INTEGER))+(((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS INTEGER))+(((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE (((((CAST(rt0.c2 AS INTEGER))+(((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0, v0, rt1;
SELECT DISTINCT * FROM rt0, v0, rt1 WHERE (CASE CASE WHEN rt1.c1 THEN rt1.c1 ELSE v0.c0 END  WHEN (rt1.c2 IN ()) THEN LIKELY(rt0.c2) WHEN CASE rt1.c4  WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c4 END THEN (((x'd844')) BETWEEN ((v0.c0)) AND ((0x17e88d48))) WHEN rt0.c0 THEN ((v0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) END) UNION SELECT DISTINCT * FROM rt0, v0, rt1 WHERE ((NOT (CASE CASE WHEN rt1.c1 THEN rt1.c1 ELSE v0.c0 END  WHEN (rt1.c2 IN ()) THEN LIKELY(rt0.c2) WHEN CASE rt1.c4  WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c4 END THEN (((x'd844')) BETWEEN ((v0.c0)) AND ((0X17e88d48))) WHEN rt0.c0 THEN ((v0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) END))) UNION SELECT DISTINCT * FROM rt0, v0, rt1 WHERE (((CASE CASE WHEN rt1.c1 THEN rt1.c1 ELSE v0.c0 END  WHEN (rt1.c2 IN ()) THEN LIKELY(rt0.c2) WHEN CASE rt1.c4  WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c4 END THEN (((x'd844')) BETWEEN ((v0.c0)) AND ((0X17e88d48))) WHEN rt0.c0 THEN ((v0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) END) ISNULL));
SELECT DISTINCT * FROM rt0, v0, rt1;
SELECT rt0.c1, rt1.c3, rt0.c0, rt1.c0, rt1.c2, rt1.c4, rt0.c4, rt0.c2, rt0.c3 FROM rt1, v0, rt0 GROUP BY rt0.c1, rt1.c3, rt0.c0, rt1.c0, rt1.c2, rt1.c4, rt0.c4, rt0.c2, rt0.c3;
SELECT ALL rt0.c1, rt1.c3, rt0.c0, rt1.c0, rt1.c2, rt1.c4, rt0.c4, rt0.c2, rt0.c3 FROM rt1, v0, rt0 WHERE (LIKELIHOOD(DISTINCT ((((((((rt0.c0)AND(rt0.c1)))OR(0.4864936208968522)))AND(rt0.c0)))AND(v0.c0)), 0.522801357887721)) GROUP BY rt0.c1, rt1.c3, rt0.c0, rt1.c0, rt1.c2, rt1.c4, rt0.c4, rt0.c2, rt0.c3 UNION SELECT rt0.c1, rt1.c3, rt0.c0, rt1.c0, rt1.c2, rt1.c4, rt0.c4, rt0.c2, rt0.c3 FROM rt1, v0, rt0 WHERE ((NOT (LIKELIHOOD(DISTINCT ((((((((rt0.c0)AND(rt0.c1)))OR(0.4864936208968522)))AND(rt0.c0)))AND(v0.c0)), 0.522801357887721)))) GROUP BY rt0.c1, rt1.c3, rt0.c0, rt1.c0, rt1.c2, rt1.c4, rt0.c4, rt0.c2, rt0.c3 UNION SELECT rt0.c1, rt1.c3, rt0.c0, rt1.c0, rt1.c2, rt1.c4, rt0.c4, rt0.c2, rt0.c3 FROM rt1, v0, rt0 WHERE (((LIKELIHOOD(DISTINCT ((((((((rt0.c0)AND(rt0.c1)))OR(0.4864936208968522)))AND(rt0.c0)))AND(v0.c0)), 0.522801357887721)) ISNULL)) GROUP BY rt0.c1, rt1.c3, rt0.c0, rt1.c0, rt1.c2, rt1.c4, rt0.c4, rt0.c2, rt0.c3;
SELECT rt0.c1, rt1.c3, rt0.c0, rt1.c0, rt1.c2, rt1.c4, rt0.c4, rt0.c2, rt0.c3 FROM rt1, v0, rt0 GROUP BY rt0.c1, rt1.c3, rt0.c0, rt1.c0, rt1.c2, rt1.c4, rt0.c4, rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt1.c3 FROM rt0, v0, rt1 GROUP BY rt0.c2, rt1.c3;
SELECT rt0.c2, rt1.c3 FROM rt0, v0, rt1 GROUP BY rt0.c2, rt1.c3 HAVING SUM(TOTAL(x'f3b2')) UNION ALL SELECT ALL rt0.c2, rt1.c3 FROM rt0, v0, rt1 GROUP BY rt0.c2, rt1.c3 HAVING (NOT (SUM(TOTAL(x'f3b2')))) UNION ALL SELECT rt0.c2, rt1.c3 FROM rt0, v0, rt1 GROUP BY rt0.c2, rt1.c3 HAVING ((SUM(TOTAL(x'f3b2'))) ISNULL);
SELECT rt1.c3, v0.c0 FROM rt1, v0;
SELECT rt1.c3, v0.c0 FROM rt1, v0 WHERE (((rt1.c2)OR(rt1.c3)) COLLATE RTRIM) UNION ALL SELECT rt1.c3, v0.c0 FROM rt1, v0 WHERE ((NOT (((rt1.c2)OR(rt1.c3)) COLLATE RTRIM))) UNION ALL SELECT ALL rt1.c3, v0.c0 FROM rt1, v0 WHERE (((((rt1.c2)OR(rt1.c3)) COLLATE RTRIM) ISNULL));
SELECT rt1.c3, v0.c0 FROM rt1, v0;
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE (((rt0.c4 COLLATE NOCASE)IS((((rt0.c0))>((rt1.c0)))))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT (((rt0.c4 COLLATE NOCASE)IS((((rt0.c0))>((rt1.c0)))))))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE (((((rt0.c4 COLLATE NOCASE)IS((((rt0.c0))>((rt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT ALL rt1.c4, rt1.c2, rt0.c0, rt1.c3, rt1.c1, rt0.c1 FROM rt1, v0, rt0 GROUP BY rt1.c4, rt1.c2, rt0.c0, rt1.c3, rt1.c1, rt0.c1;
SELECT rt1.c4, rt1.c2, rt0.c0, rt1.c3, rt1.c1, rt0.c1 FROM rt1, v0, rt0 WHERE ((- (rt1.c4))) GROUP BY rt1.c4, rt1.c2, rt0.c0, rt1.c3, rt1.c1, rt0.c1 UNION SELECT ALL rt1.c4, rt1.c2, rt0.c0, rt1.c3, rt1.c1, rt0.c1 FROM rt1, v0, rt0 WHERE ((NOT ((- (rt1.c4))))) GROUP BY rt1.c4, rt1.c2, rt0.c0, rt1.c3, rt1.c1, rt0.c1 UNION SELECT rt1.c4, rt1.c2, rt0.c0, rt1.c3, rt1.c1, rt0.c1 FROM rt1, v0, rt0 WHERE ((((- (rt1.c4))) ISNULL)) GROUP BY rt1.c4, rt1.c2, rt0.c0, rt1.c3, rt1.c1, rt0.c1;
SELECT ALL rt1.c4, rt1.c2, rt0.c0, rt1.c3, rt1.c1, rt0.c1 FROM rt1, v0, rt0 GROUP BY rt1.c4, rt1.c2, rt0.c0, rt1.c3, rt1.c1, rt0.c1;
SELECT rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4;
SELECT ALL rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4 HAVING MIN(SUM(GROUP_CONCAT('67351155'))) UNION ALL SELECT rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4 HAVING (NOT (MIN(SUM(GROUP_CONCAT('67351155'))))) UNION ALL SELECT ALL rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4 HAVING ((MIN(SUM(GROUP_CONCAT('67351155')))) ISNULL);
SELECT rt0.c4 FROM rt0;
SELECT ALL rt0.c4 FROM rt0 WHERE (((NOT (rt0.c1)) IN ((+ (rt0.c1))))) UNION ALL SELECT ALL rt0.c4 FROM rt0 WHERE ((NOT (((NOT (rt0.c1)) IN ((+ (rt0.c1))))))) UNION ALL SELECT rt0.c4 FROM rt0 WHERE (((((NOT (rt0.c1)) IN ((+ (rt0.c1))))) ISNULL));
SELECT rt0.c4 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((0.4962223673735313) NOT BETWEEN (rt0.c4) AND (rt0.c2)))>(0xffffffffb566c3f0))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((0.4962223673735313) NOT BETWEEN (rt0.c4) AND (rt0.c2)))>(0Xffffffffb566c3f0))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((0.4962223673735313) NOT BETWEEN (rt0.c4) AND (rt0.c2)))>(0xffffffffb566c3f0))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM rt0 INNER JOIN v0 ON CASE (rt1.c0 IN ())  WHEN (((((((('205470140')OR(rt1.c3)))OR(rt0.c1)))OR(rt1.c1)))AND(rt0.c2)) THEN rt1.c0 COLLATE BINARY END CROSS JOIN rt1 ON ((CAST(rt1.c1 AS TEXT))OR(rt1.c3)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 INNER JOIN v0 ON CASE (rt1.c0 IN ())  WHEN (((((((('205470140')OR(rt1.c3)))OR(rt0.c1)))OR(rt1.c1)))AND(rt0.c2)) THEN rt1.c0 COLLATE BINARY END CROSS JOIN rt1 ON ((CAST(rt1.c1 AS TEXT))OR(rt1.c3)) WHERE ((((rt0.c2, NULL, rt1.c3)) BETWEEN ((INSTR(x'', '2007241011'), rt0.c0, ((rt0.c3) BETWEEN (rt1.c4) AND (rt0.c0)))) AND ((rt0.c4 COLLATE RTRIM, rt0.c2, ((rt0.c1) IS FALSE))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 INNER JOIN v0 ON CASE (rt1.c0 IN ())  WHEN (((((((('205470140')OR(rt1.c3)))OR(rt0.c1)))OR(rt1.c1)))AND(rt0.c2)) THEN rt1.c0 COLLATE BINARY END CROSS JOIN rt1 ON ((CAST(rt1.c1 AS TEXT))OR(rt1.c3)) WHERE ((NOT ((((rt0.c2, NULL, rt1.c3)) BETWEEN ((INSTR(x'', '2007241011'), rt0.c0, ((rt0.c3) BETWEEN (rt1.c4) AND (rt0.c0)))) AND ((rt0.c4 COLLATE RTRIM, rt0.c2, ((rt0.c1) IS FALSE))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 INNER JOIN v0 ON CASE (rt1.c0 IN ())  WHEN (((((((('205470140')OR(rt1.c3)))OR(rt0.c1)))OR(rt1.c1)))AND(rt0.c2)) THEN rt1.c0 COLLATE BINARY END CROSS JOIN rt1 ON ((CAST(rt1.c1 AS TEXT))OR(rt1.c3)) WHERE ((((((rt0.c2, NULL, rt1.c3)) BETWEEN ((INSTR(x'', '2007241011'), rt0.c0, ((rt0.c3) BETWEEN (rt1.c4) AND (rt0.c0)))) AND ((rt0.c4 COLLATE RTRIM, rt0.c2, ((rt0.c1) IS FALSE))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 INNER JOIN v0 ON CASE (rt1.c0 IN ())  WHEN (((((((('205470140')OR(rt1.c3)))OR(rt0.c1)))OR(rt1.c1)))AND(rt0.c2)) THEN rt1.c0 COLLATE BINARY END CROSS JOIN rt1 ON ((CAST(rt1.c1 AS TEXT))OR(rt1.c3)) GROUP BY rt0.c1;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING rt0.c4 UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (rt0.c4)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((rt0.c4) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING rt0.c4 UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (rt0.c4)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((rt0.c4) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT * FROM rt1, rt0, v0;
SELECT ALL * FROM rt1, rt0, v0 WHERE (((((((rt1.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2)))))<=((((rt0.c4) IS TRUE))))) UNION ALL SELECT ALL * FROM rt1, rt0, v0 WHERE ((NOT (((((((rt1.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2)))))<=((((rt0.c4) IS TRUE))))))) UNION ALL SELECT * FROM rt1, rt0, v0 WHERE (((((((((rt1.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2)))))<=((((rt0.c4) IS TRUE))))) ISNULL));
SELECT * FROM rt1, rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c0 COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0, rt1.c4, v0.c0, rt0.c1, rt1.c1, rt0.c3 FROM v0, rt0, rt1 GROUP BY rt0.c2, rt0.c0, rt1.c4, v0.c0, rt0.c1, rt1.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, rt1.c4, v0.c0, rt0.c1, rt1.c1, rt0.c3 FROM v0, rt0, rt1 WHERE ((((((((((((rt0.c0))>((rt1.c2))))AND(rt1.c3)))AND((~ (rt0.c1)))))OR(((((((((rt0.c4)OR(rt0.c1)))OR(NULL)))AND(rt0.c1)))OR(rt0.c2)))))OR(((v0.c0) NOT NULL)))) GROUP BY rt0.c2, rt0.c0, rt1.c4, v0.c0, rt0.c1, rt1.c1, rt0.c3 UNION SELECT rt0.c2, rt0.c0, rt1.c4, v0.c0, rt0.c1, rt1.c1, rt0.c3 FROM v0, rt0, rt1 WHERE ((NOT ((((((((((((rt0.c0))>((rt1.c2))))AND(rt1.c3)))AND((~ (rt0.c1)))))OR(((((((((rt0.c4)OR(rt0.c1)))OR(NULL)))AND(rt0.c1)))OR(rt0.c2)))))OR(((v0.c0) NOT NULL)))))) GROUP BY rt0.c2, rt0.c0, rt1.c4, v0.c0, rt0.c1, rt1.c1, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c0, rt1.c4, v0.c0, rt0.c1, rt1.c1, rt0.c3 FROM v0, rt0, rt1 WHERE ((((((((((((((rt0.c0))>((rt1.c2))))AND(rt1.c3)))AND((~ (rt0.c1)))))OR(((((((((rt0.c4)OR(rt0.c1)))OR(NULL)))AND(rt0.c1)))OR(rt0.c2)))))OR(((v0.c0) NOT NULL)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt1.c4, v0.c0, rt0.c1, rt1.c1, rt0.c3;
SELECT rt0.c2, rt0.c0, rt1.c4, v0.c0, rt0.c1, rt1.c1, rt0.c3 FROM v0, rt0, rt1 GROUP BY rt0.c2, rt0.c0, rt1.c4, v0.c0, rt0.c1, rt1.c1, rt0.c3;
SELECT rt1.c3, rt1.c1, rt1.c0, rt1.c4 FROM rt1 GROUP BY rt1.c3, rt1.c1, rt1.c0, rt1.c4;
SELECT rt1.c3, rt1.c1, rt1.c0, rt1.c4 FROM rt1 GROUP BY rt1.c3, rt1.c1, rt1.c0, rt1.c4 HAVING GROUP_CONCAT(((MAX(rt1.c4))IS NOT(-192278864))) UNION ALL SELECT rt1.c3, rt1.c1, rt1.c0, rt1.c4 FROM rt1 GROUP BY rt1.c3, rt1.c1, rt1.c0, rt1.c4 HAVING (NOT (GROUP_CONCAT(((MAX(rt1.c4))IS NOT(-192278864))))) UNION ALL SELECT rt1.c3, rt1.c1, rt1.c0, rt1.c4 FROM rt1 GROUP BY rt1.c3, rt1.c1, rt1.c0, rt1.c4 HAVING ((GROUP_CONCAT(((MAX(rt1.c4))IS NOT(-192278864)))) ISNULL);
SELECT rt0.c1, rt1.c2, rt1.c4, rt1.c0, rt0.c3, v0.c0 FROM rt1, rt0, v0;
SELECT ALL rt0.c1, rt1.c2, rt1.c4, rt1.c0, rt0.c3, v0.c0 FROM rt1, rt0, v0 WHERE (CAST(rt1.c2 AS NUMERIC)) UNION ALL SELECT rt0.c1, rt1.c2, rt1.c4, rt1.c0, rt0.c3, v0.c0 FROM rt1, rt0, v0 WHERE ((NOT (CAST(rt1.c2 AS NUMERIC)))) UNION ALL SELECT ALL rt0.c1, rt1.c2, rt1.c4, rt1.c0, rt0.c3, v0.c0 FROM rt1, rt0, v0 WHERE (((CAST(rt1.c2 AS NUMERIC)) ISNULL));
SELECT rt0.c1, rt1.c2, rt1.c4, rt1.c0, rt0.c3, v0.c0 FROM rt1, rt0, v0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((x'') BETWEEN (((rt1.c3) NOTNULL)) AND (CAST(rt1.c0 AS TEXT)))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((x'') BETWEEN (((rt1.c3) NOTNULL)) AND (CAST(rt1.c0 AS TEXT)))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((x'') BETWEEN (((rt1.c3) NOTNULL)) AND (CAST(rt1.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT rt1.c3 FROM rt1 WHERE ((((((rt1.c4))>((rt1.c3)))) NOT NULL)) GROUP BY rt1.c3 UNION SELECT rt1.c3 FROM rt1 WHERE ((NOT ((((((rt1.c4))>((rt1.c3)))) NOT NULL)))) GROUP BY rt1.c3 UNION SELECT ALL rt1.c3 FROM rt1 WHERE ((((((((rt1.c4))>((rt1.c3)))) NOT NULL)) ISNULL)) GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(TOTAL(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(TOTAL(v0.c0))) ISNULL);
SELECT rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c2) NOTNULL))IS(rt0.c4 COLLATE BINARY))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2) NOTNULL))IS(rt0.c4 COLLATE BINARY))))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c2) NOTNULL))IS(rt0.c4 COLLATE BINARY))) ISNULL));
SELECT rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (x'f182' COLLATE BINARY) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (x'f182' COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt1 WHERE (((x'f182' COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c4, rt1.c3, rt0.c4, rt1.c2, rt0.c1 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt1.c3, rt0.c4, rt1.c2, rt0.c1;
SELECT rt1.c4, rt1.c3, rt0.c4, rt1.c2, rt0.c1 FROM rt0, v0, rt1 WHERE (rt0.c1) GROUP BY rt1.c4, rt1.c3, rt0.c4, rt1.c2, rt0.c1 UNION SELECT ALL rt1.c4, rt1.c3, rt0.c4, rt1.c2, rt0.c1 FROM rt0, v0, rt1 WHERE ((NOT (rt0.c1))) GROUP BY rt1.c4, rt1.c3, rt0.c4, rt1.c2, rt0.c1 UNION SELECT rt1.c4, rt1.c3, rt0.c4, rt1.c2, rt0.c1 FROM rt0, v0, rt1 WHERE (((rt0.c1) ISNULL)) GROUP BY rt1.c4, rt1.c3, rt0.c4, rt1.c2, rt0.c1;
SELECT ALL rt1.c4, rt1.c3, rt0.c4, rt1.c2, rt0.c1 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt1.c3, rt0.c4, rt1.c2, rt0.c1;
SELECT ALL rt1.c0, rt1.c3, rt1.c4, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c3, rt1.c4, rt1.c1;
SELECT ALL rt1.c0, rt1.c3, rt1.c4, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c3, rt1.c4, rt1.c1 HAVING SUM(SUM(rt1.c3)) UNION ALL SELECT ALL rt1.c0, rt1.c3, rt1.c4, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c3, rt1.c4, rt1.c1 HAVING (NOT (SUM(SUM(rt1.c3)))) UNION ALL SELECT rt1.c0, rt1.c3, rt1.c4, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c3, rt1.c4, rt1.c1 HAVING ((SUM(SUM(rt1.c3))) ISNULL);
SELECT * FROM rt1, v0;
SELECT ALL * FROM rt1, v0 WHERE ((((~ ('KJ?xB꿕')))!=(0.6856319726164216))) UNION ALL SELECT ALL * FROM rt1, v0 WHERE ((NOT ((((~ ('KJ?xB꿕')))<>(0.6856319726164216))))) UNION ALL SELECT ALL * FROM rt1, v0 WHERE ((((((~ ('KJ?xB꿕')))<>(0.6856319726164216))) ISNULL));
SELECT * FROM rt1, v0;
SELECT DISTINCT v0.c0, rt1.c3, rt1.c1 FROM v0, rt1;
SELECT DISTINCT v0.c0, rt1.c3, rt1.c1 FROM v0, rt1 WHERE (((CASE NULL  WHEN rt1.c2 THEN rt1.c4 END)%(x''))) UNION SELECT DISTINCT v0.c0, rt1.c3, rt1.c1 FROM v0, rt1 WHERE ((NOT (((CASE NULL  WHEN rt1.c2 THEN rt1.c4 END)%(x''))))) UNION SELECT DISTINCT v0.c0, rt1.c3, rt1.c1 FROM v0, rt1 WHERE (((((CASE NULL  WHEN rt1.c2 THEN rt1.c4 END)%(x''))) ISNULL));
SELECT DISTINCT v0.c0, rt1.c3, rt1.c1 FROM v0, rt1;
SELECT v0.c0 FROM v0, rt1 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt1 WHERE ((- ((((NULL, rt1.c2, rt1.c2))<>((rt1.c1, v0.c0, v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, rt1 WHERE ((NOT ((- ((((NULL, rt1.c2, rt1.c2))<>((rt1.c1, v0.c0, v0.c0)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, rt1 WHERE ((((- ((((NULL, rt1.c2, rt1.c2))!=((rt1.c1, v0.c0, v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt1 GROUP BY v0.c0;
SELECT v0.c0, rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN '' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END) IS FALSE) GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c3, rt0.c1;
SELECT v0.c0, rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN '' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END) IS FALSE) GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c3, rt0.c1 HAVING (((COUNT(*), '', (((rt0.c0, rt0.c3, AVG(rt0.c0)))<=((rt0.c2, GROUP_CONCAT(SUM(GROUP_CONCAT(NULL))), rt0.c3)))))<=((COUNT(MAX(rt0.c4)), COUNT(*), CAST(rt0.c4 AS TEXT)))) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN '' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END) IS FALSE) GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c3, rt0.c1 HAVING (NOT ((((COUNT(*), '', (((rt0.c0, rt0.c3, AVG(rt0.c0)))<=((rt0.c2, GROUP_CONCAT(SUM(GROUP_CONCAT(NULL))), rt0.c3)))))<=((COUNT(MAX(rt0.c4)), COUNT(*), CAST(rt0.c4 AS TEXT)))))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN '' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END) IS FALSE) GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c3, rt0.c1 HAVING (((((COUNT(*), '', (((rt0.c0, rt0.c3, AVG(rt0.c0)))<=((rt0.c2, GROUP_CONCAT(SUM(GROUP_CONCAT(NULL))), rt0.c3)))))<=((COUNT(MAX(rt0.c4)), COUNT(*), CAST(rt0.c4 AS TEXT))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)%(rt0.c1)))>=(CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c0)%(rt0.c1)))>=(CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END))))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c0)%(rt0.c1)))>=(CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((rt0.c0 IN ())) NOT BETWEEN (LIKELIHOOD(DISTINCT rt0.c4, 0.15558577740774127)) AND ((NOT (rt0.c3))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c0 IN ())) NOT BETWEEN (LIKELIHOOD(DISTINCT rt0.c4, 0.15558577740774127)) AND ((NOT (rt0.c3))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((((rt0.c0 IN ())) NOT BETWEEN (LIKELIHOOD(DISTINCT rt0.c4, 0.15558577740774127)) AND ((NOT (rt0.c3))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt1.c2, rt1.c0, rt1.c1, v0.c0, rt1.c3, rt1.c4 FROM v0, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1, v0.c0, rt1.c3, rt1.c4;
SELECT ALL rt1.c2, rt1.c0, rt1.c1, v0.c0, rt1.c3, rt1.c4 FROM v0, rt1 WHERE (((((0.9138345225277626)OR(NULLIF(rt1.c0, v0.c0))))OR(NULL))) GROUP BY rt1.c2, rt1.c0, rt1.c1, v0.c0, rt1.c3, rt1.c4 UNION SELECT ALL rt1.c2, rt1.c0, rt1.c1, v0.c0, rt1.c3, rt1.c4 FROM v0, rt1 WHERE ((NOT (((((0.9138345225277626)OR(NULLIF(rt1.c0, v0.c0))))OR(NULL))))) GROUP BY rt1.c2, rt1.c0, rt1.c1, v0.c0, rt1.c3, rt1.c4 UNION SELECT ALL rt1.c2, rt1.c0, rt1.c1, v0.c0, rt1.c3, rt1.c4 FROM v0, rt1 WHERE (((((((0.9138345225277626)OR(NULLIF(rt1.c0, v0.c0))))OR(NULL))) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt1.c1, v0.c0, rt1.c3, rt1.c4;
SELECT ALL rt1.c2, rt1.c0, rt1.c1, v0.c0, rt1.c3, rt1.c4 FROM v0, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1, v0.c0, rt1.c3, rt1.c4;
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING CAST(((((rt1.c2)AND(rt1.c3)))AND(rt1.c3)) AS INTEGER) UNION ALL SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING (NOT (CAST(((((rt1.c2)AND(rt1.c3)))AND(rt1.c3)) AS INTEGER))) UNION ALL SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING ((CAST(((((rt1.c2)AND(rt1.c3)))AND(rt1.c3)) AS INTEGER)) ISNULL);
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING CAST(((((rt1.c2)AND(rt1.c3)))AND(rt1.c3)) AS INTEGER) UNION ALL SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING (NOT (CAST(((((rt1.c2)AND(rt1.c3)))AND(rt1.c3)) AS INTEGER))) UNION ALL SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING ((CAST(((((rt1.c2)AND(rt1.c3)))AND(rt1.c3)) AS INTEGER)) ISNULL);
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT ALL rt1.c0, rt0.c2, rt1.c2, rt0.c0, rt0.c4, rt1.c1, rt1.c3, v0.c0, rt1.c4, rt0.c1 FROM rt1, rt0, v0;
SELECT ALL rt1.c0, rt0.c2, rt1.c2, rt0.c0, rt0.c4, rt1.c1, rt1.c3, v0.c0, rt1.c4, rt0.c1 FROM rt1, rt0, v0 WHERE (JULIANDAY(rt1.c2 COLLATE RTRIM, -7.29863383E8, ((rt1.c2)==(rt1.c0)))) UNION ALL SELECT ALL rt1.c0, rt0.c2, rt1.c2, rt0.c0, rt0.c4, rt1.c1, rt1.c3, v0.c0, rt1.c4, rt0.c1 FROM rt1, rt0, v0 WHERE ((NOT (JULIANDAY(rt1.c2 COLLATE RTRIM, -7.29863383E8, ((rt1.c2)==(rt1.c0)))))) UNION ALL SELECT ALL rt1.c0, rt0.c2, rt1.c2, rt0.c0, rt0.c4, rt1.c1, rt1.c3, v0.c0, rt1.c4, rt0.c1 FROM rt1, rt0, v0 WHERE (((JULIANDAY(rt1.c2 COLLATE RTRIM, -7.29863383E8, ((rt1.c2)=(rt1.c0)))) ISNULL));
SELECT ALL rt1.c0, rt0.c2, rt1.c2, rt0.c0, rt0.c4, rt1.c1, rt1.c3, v0.c0, rt1.c4, rt0.c1 FROM rt1, rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (ABS(v0.c0)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (ABS(v0.c0)))) UNION SELECT DISTINCT * FROM v0 NOT INDEXED WHERE (((ABS(v0.c0)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c3 FROM rt0, v0 WHERE (((LOWER(rt0.c1))|(((((rt0.c1)OR(rt0.c1)))AND(rt0.c3))))) GROUP BY rt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c3 UNION SELECT rt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c3 FROM rt0, v0 WHERE ((NOT (((LOWER(rt0.c1))|(((((rt0.c1)OR(rt0.c1)))AND(rt0.c3))))))) GROUP BY rt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c3 UNION SELECT rt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c3 FROM rt0, v0 WHERE (((((LOWER(rt0.c1))|(((((rt0.c1)OR(rt0.c1)))AND(rt0.c3))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c3;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING NULL UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((NULL) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING NULL UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((NULL) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((v0.c0)LIKE(v0.c0)) COLLATE RTRIM) UNION ALL SELECT * FROM v0 WHERE ((NOT (((v0.c0)LIKE(v0.c0)) COLLATE RTRIM))) UNION ALL SELECT * FROM v0 WHERE (((((v0.c0)LIKE(v0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt1.c1, rt1.c4, rt1.c3 FROM rt1, v0 GROUP BY rt1.c1, rt1.c4, rt1.c3;
SELECT rt1.c1, rt1.c4, rt1.c3 FROM rt1, v0 WHERE ((((((((((((rt1.c2)AND(rt1.c4)))OR(rt1.c3)))AND('-1671746202')))AND(rt1.c2))))>=((COALESCE(DISTINCT v0.c0, rt1.c3))))) GROUP BY rt1.c1, rt1.c4, rt1.c3 UNION SELECT ALL rt1.c1, rt1.c4, rt1.c3 FROM rt1, v0 WHERE ((NOT ((((((((((((rt1.c2)AND(rt1.c4)))OR(rt1.c3)))AND('-1671746202')))AND(rt1.c2))))>=((COALESCE(DISTINCT v0.c0, rt1.c3))))))) GROUP BY rt1.c1, rt1.c4, rt1.c3 UNION SELECT rt1.c1, rt1.c4, rt1.c3 FROM rt1, v0 WHERE ((((((((((((((rt1.c2)AND(rt1.c4)))OR(rt1.c3)))AND('-1671746202')))AND(rt1.c2))))>=((COALESCE(DISTINCT v0.c0, rt1.c3))))) ISNULL)) GROUP BY rt1.c1, rt1.c4, rt1.c3;
SELECT rt1.c1, rt1.c4, rt1.c3 FROM rt1, v0 GROUP BY rt1.c1, rt1.c4, rt1.c3;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM((((COUNT(TOTAL(COUNT(v0.c0))))) NOT BETWEEN ((COUNT(MAX(AVG(MIN(v0.c0)))))) AND ((AVG(TOTAL(AVG(NULL))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM((((COUNT(TOTAL(COUNT(v0.c0))))) NOT BETWEEN ((COUNT(MAX(AVG(MIN(v0.c0)))))) AND ((AVG(TOTAL(AVG(NULL))))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM((((COUNT(TOTAL(COUNT(v0.c0))))) NOT BETWEEN ((COUNT(MAX(AVG(MIN(v0.c0)))))) AND ((AVG(TOTAL(AVG(NULL)))))))) ISNULL);
SELECT ALL * FROM rt1, rt0, v0;
SELECT ALL * FROM rt1, rt0, v0 WHERE ((((rt1.c4 IN ()))|(rt0.c1 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt1, rt0, v0 WHERE ((NOT ((((rt1.c4 IN ()))|(rt0.c1 COLLATE NOCASE))))) UNION ALL SELECT * FROM rt1, rt0, v0 WHERE ((((((rt1.c4 IN ()))|(rt0.c1 COLLATE NOCASE))) ISNULL));
SELECT ALL * FROM rt1, rt0, v0;
SELECT DISTINCT rt0.c3, rt0.c4, rt1.c0, rt1.c4, rt0.c0, rt1.c1 FROM rt0 RIGHT OUTER JOIN rt1 ON 0.6337763839314448;
SELECT DISTINCT rt0.c3, rt0.c4, rt1.c0, rt1.c4, rt0.c0, rt1.c1 FROM rt0 RIGHT OUTER JOIN rt1 ON 0.6337763839314448 WHERE ((((rt1.c3)OR(rt0.c2)) IN ())) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt1.c0, rt1.c4, rt0.c0, rt1.c1 FROM rt0 RIGHT OUTER JOIN rt1 ON 0.6337763839314448 WHERE ((NOT ((((rt1.c3)OR(rt0.c2)) IN ())))) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt1.c0, rt1.c4, rt0.c0, rt1.c1 FROM rt0 RIGHT OUTER JOIN rt1 ON 0.6337763839314448 WHERE ((((((rt1.c3)OR(rt0.c2)) IN ())) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c4, rt1.c0, rt1.c4, rt0.c0, rt1.c1 FROM rt0 RIGHT OUTER JOIN rt1 ON 0.6337763839314448;
SELECT ALL rt0.c1, rt1.c3 FROM rt0 CROSS JOIN v0 ON ((((rt1.c1)<<(rt0.c2))) BETWEEN ((NOT (rt0.c1))) AND (rt0.c1)) RIGHT OUTER JOIN rt1 ON rt0.c1 GROUP BY rt0.c1, rt1.c3;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(MIN(MIN(AVG(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(MIN(MIN(AVG(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(MIN(MIN(AVG(v0.c0))))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (NULL) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (NULL))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((NULL) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt1.c0, rt1.c2, rt0.c1, rt0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON CAST(((rt0.c3)LIKE(rt0.c1)) AS BLOB) LEFT OUTER JOIN v0 ON LIKELY((('N*') ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, rt0.c1, rt0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON CAST(((rt0.c3)LIKE(rt0.c1)) AS BLOB) LEFT OUTER JOIN v0 ON LIKELY((('N*') ISNULL)) WHERE (CASE (NOT (rt0.c1))  WHEN ((v0.c0) NOT BETWEEN (rt0.c4) AND (0.8886889663648561)) THEN ((((rt1.c1)AND(rt0.c3)))OR(rt1.c1)) ELSE (((NULL)) BETWEEN ((0.7198268150531775)) AND ((rt0.c0))) END) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt0.c1, rt0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON CAST(((rt0.c3)LIKE(rt0.c1)) AS BLOB) LEFT OUTER JOIN v0 ON LIKELY((('N*') ISNULL)) WHERE ((NOT (CASE (NOT (rt0.c1))  WHEN ((v0.c0) NOT BETWEEN (rt0.c4) AND (0.8886889663648561)) THEN ((((rt1.c1)AND(rt0.c3)))OR(rt1.c1)) ELSE (((NULL)) BETWEEN ((0.7198268150531775)) AND ((rt0.c0))) END))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt0.c1, rt0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON CAST(((rt0.c3)LIKE(rt0.c1)) AS BLOB) LEFT OUTER JOIN v0 ON LIKELY((('N*') ISNULL)) WHERE (((CASE (NOT (rt0.c1))  WHEN ((v0.c0) NOT BETWEEN (rt0.c4) AND (0.8886889663648561)) THEN ((((rt1.c1)AND(rt0.c3)))OR(rt1.c1)) ELSE (((NULL)) BETWEEN ((0.7198268150531775)) AND ((rt0.c0))) END) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, rt0.c1, rt0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON CAST(((rt0.c3)LIKE(rt0.c1)) AS BLOB) LEFT OUTER JOIN v0 ON LIKELY((('N*') ISNULL));
SELECT rt0.c4, rt0.c2, rt0.c3 FROM rt0 NOT INDEXED FULL OUTER JOIN v0 ON ((LIKELIHOOD(DISTINCT rt0.c2, 0.7944762492988124))%((((v0.c0, rt0.c3, rt0.c2, rt0.c3, rt0.c0))!=((rt0.c4, rt0.c1, rt0.c4, rt0.c0, rt0.c2))))) GROUP BY rt0.c4, rt0.c2, rt0.c3;
SELECT ALL rt0.c4, rt0.c2, rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON ((LIKELIHOOD(DISTINCT rt0.c2, 0.7944762492988124))%((((v0.c0, rt0.c3, rt0.c2, rt0.c3, rt0.c0))<>((rt0.c4, rt0.c1, rt0.c4, rt0.c0, rt0.c2))))) WHERE ((rt0.c1 COLLATE RTRIM IN ())) GROUP BY rt0.c4, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c4, rt0.c2, rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON ((LIKELIHOOD(DISTINCT rt0.c2, 0.7944762492988124))%((((v0.c0, rt0.c3, rt0.c2, rt0.c3, rt0.c0))!=((rt0.c4, rt0.c1, rt0.c4, rt0.c0, rt0.c2))))) WHERE ((NOT ((rt0.c1 COLLATE RTRIM IN ())))) GROUP BY rt0.c4, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c4, rt0.c2, rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON ((LIKELIHOOD(DISTINCT rt0.c2, 0.7944762492988124))%((((v0.c0, rt0.c3, rt0.c2, rt0.c3, rt0.c0))<>((rt0.c4, rt0.c1, rt0.c4, rt0.c0, rt0.c2))))) WHERE ((((rt0.c1 COLLATE RTRIM IN ())) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c3;
SELECT rt0.c4, rt0.c2, rt0.c3 FROM rt0 NOT INDEXED FULL OUTER JOIN v0 ON ((LIKELIHOOD(DISTINCT rt0.c2, 0.7944762492988124))%((((v0.c0, rt0.c3, rt0.c2, rt0.c3, rt0.c0))!=((rt0.c4, rt0.c1, rt0.c4, rt0.c0, rt0.c2))))) GROUP BY rt0.c4, rt0.c2, rt0.c3;
SELECT ALL rt1.c2, rt1.c4, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c1;
SELECT ALL rt1.c2, rt1.c4, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c1 HAVING COUNT(((((((((COUNT(*))OR(rt1.c2)))AND(GROUP_CONCAT(rt1.c1))))OR(rt1.c0)))OR(rt1.c2))) UNION ALL SELECT ALL rt1.c2, rt1.c4, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c1 HAVING (NOT (COUNT(((((((((COUNT(*))OR(rt1.c2)))AND(GROUP_CONCAT(rt1.c1))))OR(rt1.c0)))OR(rt1.c2))))) UNION ALL SELECT ALL rt1.c2, rt1.c4, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c1 HAVING ((COUNT(((((((((COUNT(*))OR(rt1.c2)))AND(GROUP_CONCAT(rt1.c1))))OR(rt1.c0)))OR(rt1.c2)))) ISNULL);
SELECT ALL rt0.c3, rt0.c2 FROM rt0;
SELECT ALL rt0.c3, rt0.c2 FROM rt0 WHERE (CAST(rt0.c1 AS NUMERIC)) UNION ALL SELECT rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (CAST(rt0.c1 AS NUMERIC)))) UNION ALL SELECT ALL rt0.c3, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c1 AS NUMERIC)) ISNULL));
SELECT ALL rt0.c3, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt1.c0, rt0.c0, rt0.c3, rt1.c4, rt0.c2, rt0.c4, rt0.c1, rt1.c1, v0.c0 FROM v0 INNER JOIN rt0 ON CASE WHEN rt0.c0 COLLATE RTRIM THEN 0.21953098311206387 WHEN rt0.c0 COLLATE BINARY THEN 0.9729143367293226 WHEN v0.c0 THEN RTRIM(rt0.c3) END FULL OUTER JOIN rt1 ON (((rt1.c2)) BETWEEN (((~ (rt1.c4)))) AND (((rt0.c2 IN ())))) GROUP BY rt1.c0, rt0.c0, rt0.c3, rt1.c4, rt0.c2, rt0.c4, rt0.c1, rt1.c1, v0.c0;
SELECT rt1.c0, rt0.c0, rt0.c3, rt1.c4, rt0.c2, rt0.c4, rt0.c1, rt1.c1, v0.c0 FROM v0 INNER JOIN rt0 ON CASE WHEN rt0.c0 COLLATE RTRIM THEN 0.21953098311206387 WHEN rt0.c0 COLLATE BINARY THEN 0.9729143367293226 WHEN v0.c0 THEN RTRIM(rt0.c3) END FULL OUTER JOIN rt1 ON (((rt1.c2)) BETWEEN (((~ (rt1.c4)))) AND (((rt0.c2 IN ())))) WHERE (((((v0.c0) NOTNULL)) NOTNULL)) GROUP BY rt1.c0, rt0.c0, rt0.c3, rt1.c4, rt0.c2, rt0.c4, rt0.c1, rt1.c1, v0.c0 UNION SELECT rt1.c0, rt0.c0, rt0.c3, rt1.c4, rt0.c2, rt0.c4, rt0.c1, rt1.c1, v0.c0 FROM v0 INNER JOIN rt0 ON CASE WHEN rt0.c0 COLLATE RTRIM THEN 0.21953098311206387 WHEN rt0.c0 COLLATE BINARY THEN 0.9729143367293226 WHEN v0.c0 THEN RTRIM(rt0.c3) END FULL OUTER JOIN rt1 ON (((rt1.c2)) BETWEEN (((~ (rt1.c4)))) AND (((rt0.c2 IN ())))) WHERE ((NOT (((((v0.c0) NOTNULL)) NOTNULL)))) GROUP BY rt1.c0, rt0.c0, rt0.c3, rt1.c4, rt0.c2, rt0.c4, rt0.c1, rt1.c1, v0.c0 UNION SELECT ALL rt1.c0, rt0.c0, rt0.c3, rt1.c4, rt0.c2, rt0.c4, rt0.c1, rt1.c1, v0.c0 FROM v0 INNER JOIN rt0 ON CASE WHEN rt0.c0 COLLATE RTRIM THEN 0.21953098311206387 WHEN rt0.c0 COLLATE BINARY THEN 0.9729143367293226 WHEN v0.c0 THEN RTRIM(rt0.c3) END FULL OUTER JOIN rt1 ON (((rt1.c2)) BETWEEN (((~ (rt1.c4)))) AND (((rt0.c2 IN ())))) WHERE (((((((v0.c0) NOTNULL)) NOTNULL)) ISNULL)) GROUP BY rt1.c0, rt0.c0, rt0.c3, rt1.c4, rt0.c2, rt0.c4, rt0.c1, rt1.c1, v0.c0;
SELECT ALL rt1.c0, rt0.c0, rt0.c3, rt1.c4, rt0.c2, rt0.c4, rt0.c1, rt1.c1, v0.c0 FROM v0 INNER JOIN rt0 ON CASE WHEN rt0.c0 COLLATE RTRIM THEN 0.21953098311206387 WHEN rt0.c0 COLLATE BINARY THEN 0.9729143367293226 WHEN v0.c0 THEN RTRIM(rt0.c3) END FULL OUTER JOIN rt1 ON (((rt1.c2)) BETWEEN (((~ (rt1.c4)))) AND (((rt0.c2 IN ())))) GROUP BY rt1.c0, rt0.c0, rt0.c3, rt1.c4, rt0.c2, rt0.c4, rt0.c1, rt1.c1, v0.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((SUM(MIN(AVG(rt1.c3))))GLOB(MAX(rt1.c4))) UNION ALL SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (NOT (((SUM(MIN(AVG(rt1.c3))))GLOB(MAX(rt1.c4))))) UNION ALL SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((((SUM(MIN(AVG(rt1.c3))))GLOB(MAX(rt1.c4)))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ('Tv4Brm淕O') UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ('Tv4Brm淕O'))) UNION ALL SELECT * FROM rt0 WHERE ((('Tv4Brm淕O') ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt1.c0, rt0.c3, rt1.c1, rt1.c2 FROM rt0, v0, rt1;
SELECT DISTINCT rt1.c0, rt0.c3, rt1.c1, rt1.c2 FROM rt0, v0, rt1 WHERE (((DATETIME(rt0.c1, rt0.c0, rt0.c4))<(ABS(rt0.c4)))) UNION SELECT DISTINCT rt1.c0, rt0.c3, rt1.c1, rt1.c2 FROM rt0, v0, rt1 WHERE ((NOT (((DATETIME(rt0.c1, rt0.c0, rt0.c4))<(ABS(rt0.c4)))))) UNION SELECT DISTINCT rt1.c0, rt0.c3, rt1.c1, rt1.c2 FROM rt0, v0, rt1 WHERE (((((DATETIME(rt0.c1, rt0.c0, rt0.c4))<(ABS(rt0.c4)))) ISNULL));
SELECT DISTINCT rt1.c0, rt0.c3, rt1.c1, rt1.c2 FROM rt0, v0, rt1;
SELECT rt1.c3, rt1.c4, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c3, rt1.c4, rt1.c1, rt1.c2;
SELECT rt1.c3, rt1.c4, rt1.c1, rt1.c2 FROM rt1 WHERE ((((+ (rt1.c1))) IS TRUE)) GROUP BY rt1.c3, rt1.c4, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c3, rt1.c4, rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT ((((+ (rt1.c1))) IS TRUE)))) GROUP BY rt1.c3, rt1.c4, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c3, rt1.c4, rt1.c1, rt1.c2 FROM rt1 WHERE ((((((+ (rt1.c1))) IS TRUE)) ISNULL)) GROUP BY rt1.c3, rt1.c4, rt1.c1, rt1.c2;
SELECT rt1.c3, rt1.c4, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c3, rt1.c4, rt1.c1, rt1.c2;
SELECT ALL rt0.c4 FROM rt0, rt1 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0, rt1 GROUP BY rt0.c4 HAVING AVG(UNLIKELY(DISTINCT 0.30209360994358025)) UNION ALL SELECT rt0.c4 FROM rt0, rt1 GROUP BY rt0.c4 HAVING (NOT (AVG(UNLIKELY(DISTINCT 0.30209360994358025)))) UNION ALL SELECT rt0.c4 FROM rt0, rt1 GROUP BY rt0.c4 HAVING ((AVG(UNLIKELY(DISTINCT 0.30209360994358025))) ISNULL);
SELECT ALL rt0.c4 FROM rt0, rt1 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0, rt1 GROUP BY rt0.c4 HAVING AVG(UNLIKELY(DISTINCT 0.30209360994358025)) UNION ALL SELECT rt0.c4 FROM rt0, rt1 GROUP BY rt0.c4 HAVING (NOT (AVG(UNLIKELY(DISTINCT 0.30209360994358025)))) UNION ALL SELECT rt0.c4 FROM rt0, rt1 GROUP BY rt0.c4 HAVING ((AVG(UNLIKELY(DISTINCT 0.30209360994358025))) ISNULL);
SELECT ALL rt0.c4 FROM rt0, rt1 GROUP BY rt0.c4;
SELECT ALL * FROM rt0, rt1, v0;
SELECT ALL * FROM rt0, rt1, v0 WHERE (CAST((NOT ('1031796714')) AS NUMERIC)) UNION ALL SELECT * FROM rt0, rt1, v0 WHERE ((NOT (CAST((NOT ('1031796714')) AS NUMERIC)))) UNION ALL SELECT * FROM rt0, rt1, v0 WHERE (((CAST((NOT ('1031796714')) AS NUMERIC)) ISNULL));
SELECT ALL * FROM rt0, rt1, v0;
SELECT DISTINCT v0.c0, rt1.c3, rt1.c4, rt1.c1 FROM v0, rt1;
SELECT DISTINCT v0.c0, rt1.c3, rt1.c4, rt1.c1 FROM v0, rt1 WHERE ((((((-1512374844 IN (rt1.c1)))OR(((((rt1.c2)AND(rt1.c4)))OR(rt1.c4)))))OR(((rt1.c2)GLOB(rt1.c4))))) UNION SELECT DISTINCT v0.c0, rt1.c3, rt1.c4, rt1.c1 FROM v0, rt1 WHERE ((NOT ((((((-1512374844 IN (rt1.c1)))OR(((((rt1.c2)AND(rt1.c4)))OR(rt1.c4)))))OR(((rt1.c2)GLOB(rt1.c4))))))) UNION SELECT DISTINCT v0.c0, rt1.c3, rt1.c4, rt1.c1 FROM v0, rt1 WHERE ((((((((-1512374844 IN (rt1.c1)))OR(((((rt1.c2)AND(rt1.c4)))OR(rt1.c4)))))OR(((rt1.c2)GLOB(rt1.c4))))) ISNULL));
SELECT DISTINCT v0.c0, rt1.c3, rt1.c4, rt1.c1 FROM v0, rt1;
SELECT ALL rt0.c1, rt1.c3, rt0.c0, rt1.c4 FROM rt0 INNER JOIN rt1 ON (((CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c4 THEN rt0.c4 ELSE v0.c0 END))>((TIME(v0.c0, rt1.c1, 'sX[d')))) LEFT OUTER JOIN v0 ON ((((rt1.c0)IS NOT(-1744112106)))AND(((v0.c0) NOTNULL))) GROUP BY rt0.c1, rt1.c3, rt0.c0, rt1.c4;
SELECT ALL rt0.c1, rt1.c3, rt0.c0, rt1.c4 FROM rt0 INNER JOIN rt1 ON (((CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c4 THEN rt0.c4 ELSE v0.c0 END))>((TIME(v0.c0, rt1.c1, 'sX[d')))) LEFT OUTER JOIN v0 ON ((((rt1.c0)IS NOT(-1744112106)))AND(((v0.c0) NOTNULL))) WHERE ((((NOT (rt0.c0))) IS TRUE)) GROUP BY rt0.c1, rt1.c3, rt0.c0, rt1.c4 UNION SELECT rt0.c1, rt1.c3, rt0.c0, rt1.c4 FROM rt0 INNER JOIN rt1 ON (((CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c4 THEN rt0.c4 ELSE v0.c0 END))>((TIME(v0.c0, rt1.c1, 'sX[d')))) LEFT OUTER JOIN v0 ON ((((rt1.c0)IS NOT(-1744112106)))AND(((v0.c0) NOTNULL))) WHERE ((NOT ((((NOT (rt0.c0))) IS TRUE)))) GROUP BY rt0.c1, rt1.c3, rt0.c0, rt1.c4 UNION SELECT ALL rt0.c1, rt1.c3, rt0.c0, rt1.c4 FROM rt0 INNER JOIN rt1 ON (((CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c4 THEN rt0.c4 ELSE v0.c0 END))>((TIME(v0.c0, rt1.c1, 'sX[d')))) LEFT OUTER JOIN v0 ON ((((rt1.c0)IS NOT(-1744112106)))AND(((v0.c0) NOTNULL))) WHERE ((((((NOT (rt0.c0))) IS TRUE)) ISNULL)) GROUP BY rt0.c1, rt1.c3, rt0.c0, rt1.c4;
SELECT ALL rt0.c1, rt1.c3, rt0.c0, rt1.c4 FROM rt0 INNER JOIN rt1 ON (((CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c4 THEN rt0.c4 ELSE v0.c0 END))>((TIME(v0.c0, rt1.c1, 'sX[d')))) LEFT OUTER JOIN v0 ON ((((rt1.c0)IS NOT(-1744112106)))AND(((v0.c0) NOTNULL))) GROUP BY rt0.c1, rt1.c3, rt0.c0, rt1.c4;
SELECT rt1.c4, rt1.c0, rt1.c1, rt0.c3, rt1.c2, rt0.c4, rt0.c0 FROM v0, rt1 FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL))OR(NULLIF(854404230, rt1.c0))) GROUP BY rt1.c4, rt1.c0, rt1.c1, rt0.c3, rt1.c2, rt0.c4, rt0.c0;
SELECT ALL rt1.c4, rt1.c0, rt1.c1, rt0.c3, rt1.c2, rt0.c4, rt0.c0 FROM v0, rt1 FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL))OR(NULLIF(854404230, rt1.c0))) GROUP BY rt1.c4, rt1.c0, rt1.c1, rt0.c3, rt1.c2, rt0.c4, rt0.c0 HAVING SUM((rt1.c0 IN (AVG(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT ALL rt1.c4, rt1.c0, rt1.c1, rt0.c3, rt1.c2, rt0.c4, rt0.c0 FROM v0, rt1 FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL))OR(NULLIF(854404230, rt1.c0))) GROUP BY rt1.c4, rt1.c0, rt1.c1, rt0.c3, rt1.c2, rt0.c4, rt0.c0 HAVING (NOT (SUM((rt1.c0 IN (AVG(GROUP_CONCAT(COUNT(*)))))))) UNION ALL SELECT ALL rt1.c4, rt1.c0, rt1.c1, rt0.c3, rt1.c2, rt0.c4, rt0.c0 FROM v0, rt1 FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL))OR(NULLIF(854404230, rt1.c0))) GROUP BY rt1.c4, rt1.c0, rt1.c1, rt0.c3, rt1.c2, rt0.c4, rt0.c0 HAVING ((SUM((rt1.c0 IN (AVG(GROUP_CONCAT(COUNT(*))))))) ISNULL);
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (x'' COLLATE RTRIM) ORDER BY ((((((rt1.c4)LIKE(rt1.c4)))AND(((rt1.c4)LIKE(rt1.c0)))))AND(((rt1.c1)>(rt1.c2))))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((NOT (x'' COLLATE RTRIM))) ORDER BY ((((((rt1.c4)LIKE(rt1.c4)))AND(((rt1.c4)LIKE(rt1.c0)))))AND(((rt1.c1)>(rt1.c2))))  NULLS LAST;
SELECT * FROM rt1 WHERE (((x'' COLLATE RTRIM) ISNULL)) ORDER BY ((((((rt1.c4)LIKE(rt1.c4)))AND(((rt1.c4)LIKE(rt1.c0)))))AND(((rt1.c1)>(rt1.c2))))  NULLS LAST;
SELECT ALL * FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c4, rt1.c1, rt1.c2, rt1.c3 FROM v0, rt1;
SELECT DISTINCT rt1.c0, rt1.c4, rt1.c1, rt1.c2, rt1.c3 FROM v0, rt1 WHERE ((((((rt1.c1, rt1.c3, rt1.c1))>((0.5415814797114739, rt1.c2, rt1.c3))))<=(rt1.c0 COLLATE RTRIM))) UNION SELECT DISTINCT rt1.c0, rt1.c4, rt1.c1, rt1.c2, rt1.c3 FROM v0, rt1 WHERE ((NOT ((((((rt1.c1, rt1.c3, rt1.c1))>((0.5415814797114739, rt1.c2, rt1.c3))))<=(rt1.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT rt1.c0, rt1.c4, rt1.c1, rt1.c2, rt1.c3 FROM v0, rt1 WHERE ((((((((rt1.c1, rt1.c3, rt1.c1))>((0.5415814797114739, rt1.c2, rt1.c3))))<=(rt1.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c4, rt1.c1, rt1.c2, rt1.c3 FROM v0, rt1;
SELECT ALL rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0;
SELECT ALL rt0.c4, rt0.c2, rt0.c0 FROM rt0 WHERE ((~ (((rt0.c2) IS TRUE)))) GROUP BY rt0.c4, rt0.c2, rt0.c0 UNION SELECT rt0.c4, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((~ (((rt0.c2) IS TRUE)))))) GROUP BY rt0.c4, rt0.c2, rt0.c0 UNION SELECT rt0.c4, rt0.c2, rt0.c0 FROM rt0 WHERE ((((~ (((rt0.c2) IS TRUE)))) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c0;
SELECT ALL rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0;
SELECT rt0.c4, v0.c0, rt1.c3, rt0.c1 FROM v0, rt1, rt0 GROUP BY rt0.c4, v0.c0, rt1.c3, rt0.c1;
SELECT rt0.c4, v0.c0, rt1.c3, rt0.c1 FROM v0, rt1, rt0 GROUP BY rt0.c4, v0.c0, rt1.c3, rt0.c1 HAVING (+ (COUNT(*))) UNION ALL SELECT ALL rt0.c4, v0.c0, rt1.c3, rt0.c1 FROM v0, rt1, rt0 GROUP BY rt0.c4, v0.c0, rt1.c3, rt0.c1 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT ALL rt0.c4, v0.c0, rt1.c3, rt0.c1 FROM v0, rt1, rt0 GROUP BY rt0.c4, v0.c0, rt1.c3, rt0.c1 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT rt0.c4, v0.c0, rt1.c3, rt0.c1 FROM v0, rt1, rt0 GROUP BY rt0.c4, v0.c0, rt1.c3, rt0.c1;
SELECT rt0.c4, v0.c0, rt1.c3, rt0.c1 FROM v0, rt1, rt0 GROUP BY rt0.c4, v0.c0, rt1.c3, rt0.c1 HAVING (+ (COUNT(*))) UNION ALL SELECT ALL rt0.c4, v0.c0, rt1.c3, rt0.c1 FROM v0, rt1, rt0 GROUP BY rt0.c4, v0.c0, rt1.c3, rt0.c1 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT ALL rt0.c4, v0.c0, rt1.c3, rt0.c1 FROM v0, rt1, rt0 GROUP BY rt0.c4, v0.c0, rt1.c3, rt0.c1 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT rt0.c4, v0.c0, rt1.c3, rt0.c1 FROM v0, rt1, rt0 GROUP BY rt0.c4, v0.c0, rt1.c3, rt0.c1;
SELECT ALL * FROM rt0, rt1, v0;
SELECT ALL * FROM rt0, rt1, v0 WHERE (((rt0.c0 COLLATE NOCASE) IS TRUE)) UNION ALL SELECT * FROM rt0, rt1, v0 WHERE ((NOT (((rt0.c0 COLLATE NOCASE) IS TRUE)))) UNION ALL SELECT ALL * FROM rt0, rt1, v0 WHERE (((((rt0.c0 COLLATE NOCASE) IS TRUE)) ISNULL));
SELECT ALL * FROM rt0, rt1, v0;
SELECT DISTINCT rt0.c2, rt1.c4, rt1.c1, rt0.c3, rt0.c4, rt0.c0, v0.c0, rt1.c0, rt1.c3, rt0.c1 FROM rt0, v0, rt1;
SELECT DISTINCT rt0.c2, rt1.c4, rt1.c1, rt0.c3, rt0.c4, rt0.c0, v0.c0, rt1.c0, rt1.c3, rt0.c1 FROM rt0, v0, rt1 WHERE (CAST(((rt1.c3)*(rt1.c3)) AS NUMERIC)) UNION SELECT DISTINCT rt0.c2, rt1.c4, rt1.c1, rt0.c3, rt0.c4, rt0.c0, v0.c0, rt1.c0, rt1.c3, rt0.c1 FROM rt0, v0, rt1 WHERE ((NOT (CAST(((rt1.c3)*(rt1.c3)) AS NUMERIC)))) UNION SELECT DISTINCT rt0.c2, rt1.c4, rt1.c1, rt0.c3, rt0.c4, rt0.c0, v0.c0, rt1.c0, rt1.c3, rt0.c1 FROM rt0, v0, rt1 WHERE (((CAST(((rt1.c3)*(rt1.c3)) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c2, rt1.c4, rt1.c1, rt0.c3, rt0.c4, rt0.c0, v0.c0, rt1.c0, rt1.c3, rt0.c1 FROM rt0, v0, rt1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (HEX(DISTINCT (NULL IN (v0.c0)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (HEX(DISTINCT (NULL IN (v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((HEX(DISTINCT (NULL IN (v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt1.c4 FROM rt1 GROUP BY rt1.c4;
SELECT ALL rt1.c4 FROM rt1 GROUP BY rt1.c4 HAVING CASE CAST(MAX(rt1.c0) AS BLOB)  WHEN MIN(rt1.c4) THEN ((rt1.c1)AND(COUNT(TOTAL(MIN(TOTAL(GROUP_CONCAT(MAX(MIN(rt1.c1))))))))) ELSE ((NULL)OR(TOTAL(TOTAL(rt1.c0)))) END UNION ALL SELECT rt1.c4 FROM rt1 GROUP BY rt1.c4 HAVING (NOT (CASE CAST(MAX(rt1.c0) AS BLOB)  WHEN MIN(rt1.c4) THEN ((rt1.c1)AND(COUNT(TOTAL(MIN(TOTAL(GROUP_CONCAT(MAX(MIN(rt1.c1))))))))) ELSE ((NULL)OR(TOTAL(TOTAL(rt1.c0)))) END)) UNION ALL SELECT ALL rt1.c4 FROM rt1 GROUP BY rt1.c4 HAVING ((CASE CAST(MAX(rt1.c0) AS BLOB)  WHEN MIN(rt1.c4) THEN ((rt1.c1)AND(COUNT(TOTAL(MIN(TOTAL(GROUP_CONCAT(MAX(MIN(rt1.c1))))))))) ELSE ((NULL)OR(TOTAL(TOTAL(rt1.c0)))) END) ISNULL);
SELECT rt1.c4, rt0.c1, rt1.c2 FROM rt0, rt1 INNER JOIN v0 ON 1.228906422E9;
SELECT ALL rt1.c4, rt0.c1, rt1.c2 FROM rt0, rt1 INNER JOIN v0 ON 1.228906422E9 WHERE ((NOT (((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c0))))) UNION ALL SELECT ALL rt1.c4, rt0.c1, rt1.c2 FROM rt0, rt1 INNER JOIN v0 ON 1.228906422E9 WHERE ((NOT ((NOT (((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c0))))))) UNION ALL SELECT rt1.c4, rt0.c1, rt1.c2 FROM rt0, rt1 INNER JOIN v0 ON 1.228906422E9 WHERE ((((NOT (((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c0))))) ISNULL));
SELECT rt1.c4, rt0.c1, rt1.c2 FROM rt0, rt1 INNER JOIN v0 ON 1.228906422E9;
SELECT DISTINCT rt0.c0, rt1.c1, rt1.c4 FROM rt0, rt1, v0;
SELECT DISTINCT rt0.c0, rt1.c1, rt1.c4 FROM rt0, rt1, v0 WHERE (HEX((((rt0.c1))<=((rt1.c2))))) UNION SELECT DISTINCT rt0.c0, rt1.c1, rt1.c4 FROM rt0, rt1, v0 WHERE ((NOT (HEX((((rt0.c1))<=((rt1.c2))))))) UNION SELECT DISTINCT rt0.c0, rt1.c1, rt1.c4 FROM rt0, rt1, v0 WHERE (((HEX((((rt0.c1))<=((rt1.c2))))) ISNULL));
SELECT DISTINCT rt0.c0, rt1.c1, rt1.c4 FROM rt0, rt1, v0;
SELECT rt1.c3, rt1.c4, rt1.c1, rt0.c4 FROM rt0 LEFT OUTER JOIN rt1 ON (((~ (rt0.c2)))>=(((rt1.c1)==(rt0.c3)))) GROUP BY rt1.c3, rt1.c4, rt1.c1, rt0.c4;
SELECT ALL rt1.c3, rt1.c4, rt1.c1, rt0.c4 FROM rt0 LEFT OUTER JOIN rt1 ON (((~ (rt0.c2)))>=(((rt1.c1)=(rt0.c3)))) WHERE (UNLIKELY(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 END)) GROUP BY rt1.c3, rt1.c4, rt1.c1, rt0.c4 UNION SELECT rt1.c3, rt1.c4, rt1.c1, rt0.c4 FROM rt0 LEFT OUTER JOIN rt1 ON (((~ (rt0.c2)))>=(((rt1.c1)=(rt0.c3)))) WHERE ((NOT (UNLIKELY(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 END)))) GROUP BY rt1.c3, rt1.c4, rt1.c1, rt0.c4 UNION SELECT ALL rt1.c3, rt1.c4, rt1.c1, rt0.c4 FROM rt0 LEFT OUTER JOIN rt1 ON (((~ (rt0.c2)))>=(((rt1.c1)==(rt0.c3)))) WHERE (((UNLIKELY(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 END)) ISNULL)) GROUP BY rt1.c3, rt1.c4, rt1.c1, rt0.c4;
SELECT rt1.c3, rt1.c4, rt1.c1, rt0.c4 FROM rt0 LEFT OUTER JOIN rt1 ON (((~ (rt0.c2)))>=(((rt1.c1)==(rt0.c3)))) GROUP BY rt1.c3, rt1.c4, rt1.c1, rt0.c4;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4 HAVING GROUP_CONCAT((rt0.c4 IN ())) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4 HAVING (NOT (GROUP_CONCAT((rt0.c4 IN ())))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4 HAVING ((GROUP_CONCAT((rt0.c4 IN ()))) ISNULL);
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4 HAVING GROUP_CONCAT((rt0.c4 IN ())) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4 HAVING (NOT (GROUP_CONCAT((rt0.c4 IN ())))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4 HAVING ((GROUP_CONCAT((rt0.c4 IN ()))) ISNULL);
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4;
SELECT rt0.c4, rt1.c3, rt0.c1 FROM rt0, rt1, v0;
SELECT ALL rt0.c4, rt1.c3, rt0.c1 FROM rt0, rt1, v0 WHERE (((((((rt1.c3)OR(rt0.c2)))AND(rt1.c4))) IS FALSE)) UNION ALL SELECT rt0.c4, rt1.c3, rt0.c1 FROM rt0, rt1, v0 WHERE ((NOT (((((((rt1.c3)OR(rt0.c2)))AND(rt1.c4))) IS FALSE)))) UNION ALL SELECT ALL rt0.c4, rt1.c3, rt0.c1 FROM rt0, rt1, v0 WHERE (((((((((rt1.c3)OR(rt0.c2)))AND(rt1.c4))) IS FALSE)) ISNULL));
SELECT rt0.c4, rt1.c3, rt0.c1 FROM rt0, rt1, v0;
SELECT DISTINCT rt1.c0, rt1.c2, rt0.c0, rt1.c1, rt0.c4, rt1.c3, rt0.c2, rt1.c4 FROM rt0, v0, rt1;
SELECT DISTINCT rt1.c0, rt1.c2, rt0.c0, rt1.c1, rt0.c4, rt1.c3, rt0.c2, rt1.c4 FROM rt0, v0, rt1 WHERE ((((((v0.c0)AND(rt0.c2)))AND(rt0.c4)) IN ())) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt0.c0, rt1.c1, rt0.c4, rt1.c3, rt0.c2, rt1.c4 FROM rt0, v0, rt1 WHERE ((NOT ((((((v0.c0)AND(rt0.c2)))AND(rt0.c4)) IN ())))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt0.c0, rt1.c1, rt0.c4, rt1.c3, rt0.c2, rt1.c4 FROM rt0, v0, rt1 WHERE ((((((((v0.c0)AND(rt0.c2)))AND(rt0.c4)) IN ())) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, rt0.c0, rt1.c1, rt0.c4, rt1.c3, rt0.c2, rt1.c4 FROM rt0, v0, rt1;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4))) NOTNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2 UNION SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4))) NOTNULL)))) GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2 UNION SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4))) NOTNULL)) ISNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(MIN(COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(MIN(COUNT(*))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(MIN(COUNT(*)))) ISNULL);
SELECT ALL rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE ((- (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT ((- (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0))))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((((- (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0))))) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM rt1 WHERE (rt1.c1) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM rt1 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM rt1 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM rt1;
SELECT rt1.c1, rt1.c0, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c3, rt1.c4;
SELECT ALL rt1.c1, rt1.c0, rt1.c3, rt1.c4 FROM rt1 WHERE ((- (((rt1.c4)*(rt1.c3))))) GROUP BY rt1.c1, rt1.c0, rt1.c3, rt1.c4 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c3, rt1.c4 FROM rt1 WHERE ((NOT ((- (((rt1.c4)*(rt1.c3))))))) GROUP BY rt1.c1, rt1.c0, rt1.c3, rt1.c4 UNION SELECT rt1.c1, rt1.c0, rt1.c3, rt1.c4 FROM rt1 WHERE ((((- (((rt1.c4)*(rt1.c3))))) ISNULL)) GROUP BY rt1.c1, rt1.c0, rt1.c3, rt1.c4;
SELECT rt1.c1, rt1.c0, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c3, rt1.c4;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING COUNT(NULL) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (COUNT(NULL))) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((COUNT(NULL)) ISNULL);
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING COUNT(NULL) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (COUNT(NULL))) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((COUNT(NULL)) ISNULL);
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2, v0.c0, rt1.c0 FROM v0, rt0 INNER JOIN rt1 ON rt1.c2;
SELECT rt1.c2, v0.c0, rt1.c0 FROM v0, rt0 INNER JOIN rt1 ON rt1.c2 WHERE (CASE ((rt0.c4)>(rt1.c2))  WHEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 END THEN ((((((((((((rt0.c3)AND(rt1.c4)))AND(rt1.c2)))OR(rt1.c0)))OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c3)) END) UNION ALL SELECT ALL rt1.c2, v0.c0, rt1.c0 FROM v0, rt0 INNER JOIN rt1 ON rt1.c2 WHERE ((NOT (CASE ((rt0.c4)>(rt1.c2))  WHEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 END THEN ((((((((((((rt0.c3)AND(rt1.c4)))AND(rt1.c2)))OR(rt1.c0)))OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c3)) END))) UNION ALL SELECT ALL rt1.c2, v0.c0, rt1.c0 FROM v0, rt0 INNER JOIN rt1 ON rt1.c2 WHERE (((CASE ((rt0.c4)>(rt1.c2))  WHEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 END THEN ((((((((((((rt0.c3)AND(rt1.c4)))AND(rt1.c2)))OR(rt1.c0)))OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c3)) END) ISNULL));
SELECT ALL rt1.c2, v0.c0, rt1.c0 FROM v0, rt0 INNER JOIN rt1 ON rt1.c2;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0) IS FALSE)) NOT BETWEEN ((v0.c0 IN (v0.c0))) AND ((v0.c0 IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) IS FALSE)) NOT BETWEEN ((v0.c0 IN (v0.c0))) AND ((v0.c0 IN ())))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0) IS FALSE)) NOT BETWEEN ((v0.c0 IN (v0.c0))) AND ((v0.c0 IN ())))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 WHERE ((((+ (rt1.c3))) NOT BETWEEN (((rt1.c1)&(rt1.c4))) AND (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2))))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1 WHERE ((NOT ((((+ (rt1.c3))) NOT BETWEEN (((rt1.c1)&(rt1.c4))) AND (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2))))))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1 WHERE ((((((+ (rt1.c3))) NOT BETWEEN (((rt1.c1)&(rt1.c4))) AND (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2))))) ISNULL)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (x'' IN ()) GROUP BY rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (x'' IN ()) GROUP BY rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 HAVING GROUP_CONCAT(x'') UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (x'' IN ()) GROUP BY rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 HAVING (NOT (GROUP_CONCAT(x''))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (x'' IN ()) GROUP BY rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 HAVING ((GROUP_CONCAT(x'')) ISNULL);
SELECT rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (x'' IN ()) GROUP BY rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (x'' IN ()) GROUP BY rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 HAVING GROUP_CONCAT(x'') UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (x'' IN ()) GROUP BY rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 HAVING (NOT (GROUP_CONCAT(x''))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (x'' IN ()) GROUP BY rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 HAVING ((GROUP_CONCAT(x'')) ISNULL);
SELECT rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (x'' IN ()) GROUP BY rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0;
SELECT rt0.c3, rt0.c4, rt0.c2 FROM rt0;
SELECT rt0.c3, rt0.c4, rt0.c2 FROM rt0 WHERE (rt0.c4) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c4))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c2 FROM rt0 WHERE (((rt0.c4) ISNULL));
SELECT rt0.c3, rt0.c4, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt1.c4, rt0.c3, rt1.c0, v0.c0, rt0.c4 FROM rt1, rt0, v0;
SELECT DISTINCT rt0.c1, rt1.c4, rt0.c3, rt1.c0, v0.c0, rt0.c4 FROM rt1, rt0, v0 WHERE (CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN rt1.c0 END) UNION SELECT DISTINCT rt0.c1, rt1.c4, rt0.c3, rt1.c0, v0.c0, rt0.c4 FROM rt1, rt0, v0 WHERE ((NOT (CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN rt1.c0 END))) UNION SELECT DISTINCT rt0.c1, rt1.c4, rt0.c3, rt1.c0, v0.c0, rt0.c4 FROM rt1, rt0, v0 WHERE (((CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN rt1.c0 END) ISNULL));
SELECT DISTINCT rt0.c1, rt1.c4, rt0.c3, rt1.c0, v0.c0, rt0.c4 FROM rt1, rt0, v0;
SELECT rt1.c2, v0.c0, rt1.c0, rt1.c3, rt1.c4, rt1.c1 FROM v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c0, rt1.c3, rt1.c4, rt1.c1;
SELECT rt1.c2, v0.c0, rt1.c0, rt1.c3, rt1.c4, rt1.c1 FROM v0, rt1 WHERE ((((((rt1.c1)OR(rt1.c4)))AND(v0.c0)) IN (NULLIF(DISTINCT rt1.c1, rt1.c2)))) GROUP BY rt1.c2, v0.c0, rt1.c0, rt1.c3, rt1.c4, rt1.c1 UNION SELECT ALL rt1.c2, v0.c0, rt1.c0, rt1.c3, rt1.c4, rt1.c1 FROM v0, rt1 WHERE ((NOT ((((((rt1.c1)OR(rt1.c4)))AND(v0.c0)) IN (NULLIF(DISTINCT rt1.c1, rt1.c2)))))) GROUP BY rt1.c2, v0.c0, rt1.c0, rt1.c3, rt1.c4, rt1.c1 UNION SELECT rt1.c2, v0.c0, rt1.c0, rt1.c3, rt1.c4, rt1.c1 FROM v0, rt1 WHERE ((((((((rt1.c1)OR(rt1.c4)))AND(v0.c0)) IN (NULLIF(DISTINCT rt1.c1, rt1.c2)))) ISNULL)) GROUP BY rt1.c2, v0.c0, rt1.c0, rt1.c3, rt1.c4, rt1.c1;
SELECT rt1.c2, v0.c0, rt1.c0, rt1.c3, rt1.c4, rt1.c1 FROM v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c0, rt1.c3, rt1.c4, rt1.c1;
SELECT rt0.c1, rt0.c4, rt1.c0, rt1.c4, rt0.c0, rt0.c2, rt0.c3, rt1.c3 FROM rt1 LEFT OUTER JOIN rt0 ON (((rt0.c2, rt0.c4, rt1.c0)) BETWEEN ((0.8017467889304839, (rt0.c3 IN (rt1.c0)), ((v0.c0)>(rt0.c3)))) AND ((CAST(v0.c0 AS NUMERIC), TRIM(v0.c0, v0.c0), 0xffffffffe9db28ea))) CROSS JOIN v0 ON CAST(((((((((rt1.c3)AND(rt0.c0)))AND(rt0.c2)))AND(rt1.c2)))AND(0.9962118034160719)) AS TEXT) GROUP BY rt0.c1, rt0.c4, rt1.c0, rt1.c4, rt0.c0, rt0.c2, rt0.c3, rt1.c3;
SELECT ALL MAX((((+ (rt1.c3)))!=((((rt0.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c3)))))) FROM rt1, rt0, v0 ORDER BY (((rt0.c2)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((rt0.c3 COLLATE BINARY)));
SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt1.c2, rt1.c4, rt1.c0, rt0.c0, v0.c0, rt1.c1 FROM v0, rt1, rt0;
SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt1.c2, rt1.c4, rt1.c0, rt0.c0, v0.c0, rt1.c1 FROM v0, rt1, rt0 WHERE (((rt1.c3 COLLATE BINARY)||(((rt0.c2)/(rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt1.c2, rt1.c4, rt1.c0, rt0.c0, v0.c0, rt1.c1 FROM v0, rt1, rt0 WHERE ((NOT (((rt1.c3 COLLATE BINARY)||(((rt0.c2)/(rt0.c2))))))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt1.c2, rt1.c4, rt1.c0, rt0.c0, v0.c0, rt1.c1 FROM v0, rt1, rt0 WHERE (((((rt1.c3 COLLATE BINARY)||(((rt0.c2)/(rt0.c2))))) ISNULL));
SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt1.c2, rt1.c4, rt1.c0, rt0.c0, v0.c0, rt1.c1 FROM v0, rt1, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0)/(v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0)/(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)/(v0.c0))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c3, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3, v0.c0;
SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c3, v0.c0 FROM v0, rt0 WHERE ('') GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3, v0.c0 UNION SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c3, v0.c0 FROM v0, rt0 WHERE ((NOT (''))) GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3, v0.c0 UNION SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c3, v0.c0 FROM v0, rt0 WHERE ((('') ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3, v0.c0;
SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c3, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3, v0.c0;
SELECT rt1.c4, v0.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c0 FROM rt1 RIGHT OUTER JOIN v0 ON TRIM(((rt1.c0)/(v0.c0)), (((rt1.c2, rt1.c2, '')) BETWEEN ((v0.c0, rt1.c0, rt1.c4)) AND ((rt1.c3, v0.c0, rt1.c0)))) GROUP BY rt1.c4, v0.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c0;
SELECT rt1.c4, v0.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c0 FROM rt1 RIGHT OUTER JOIN v0 ON TRIM(((rt1.c0)/(v0.c0)), (((rt1.c2, rt1.c2, '')) BETWEEN ((v0.c0, rt1.c0, rt1.c4)) AND ((rt1.c3, v0.c0, rt1.c0)))) GROUP BY rt1.c4, v0.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c0 HAVING (((((rt1.c4) BETWEEN (TOTAL(GROUP_CONCAT(MAX(v0.c0)))) AND (v0.c0)), SUM(rt1.c3), ((((MIN(rt1.c2))AND(rt1.c0)))OR(rt1.c1))))=((TOTAL(SUM(TOTAL(MIN(v0.c0)))), GROUP_CONCAT(COUNT(AVG(rt1.c4))), COUNT(*)))) UNION ALL SELECT rt1.c4, v0.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c0 FROM rt1 RIGHT OUTER JOIN v0 ON TRIM(((rt1.c0)/(v0.c0)), (((rt1.c2, rt1.c2, '')) BETWEEN ((v0.c0, rt1.c0, rt1.c4)) AND ((rt1.c3, v0.c0, rt1.c0)))) GROUP BY rt1.c4, v0.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c0 HAVING (NOT ((((((rt1.c4) BETWEEN (TOTAL(GROUP_CONCAT(MAX(v0.c0)))) AND (v0.c0)), SUM(rt1.c3), ((((MIN(rt1.c2))AND(rt1.c0)))OR(rt1.c1))))=((TOTAL(SUM(TOTAL(MIN(v0.c0)))), GROUP_CONCAT(COUNT(AVG(rt1.c4))), COUNT(*)))))) UNION ALL SELECT ALL rt1.c4, v0.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c0 FROM rt1 RIGHT OUTER JOIN v0 ON TRIM(((rt1.c0)/(v0.c0)), (((rt1.c2, rt1.c2, '')) BETWEEN ((v0.c0, rt1.c0, rt1.c4)) AND ((rt1.c3, v0.c0, rt1.c0)))) GROUP BY rt1.c4, v0.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c0 HAVING (((((((rt1.c4) BETWEEN (TOTAL(GROUP_CONCAT(MAX(v0.c0)))) AND (v0.c0)), SUM(rt1.c3), ((((MIN(rt1.c2))AND(rt1.c0)))OR(rt1.c1))))==((TOTAL(SUM(TOTAL(MIN(v0.c0)))), GROUP_CONCAT(COUNT(AVG(rt1.c4))), COUNT(*))))) ISNULL);
SELECT rt1.c1 FROM v0 LEFT OUTER JOIN rt1 ON (~ (rt1.c2)) COLLATE NOCASE;
SELECT ALL rt1.c1 FROM v0 LEFT OUTER JOIN rt1 ON (~ (rt1.c2)) COLLATE NOCASE WHERE ((((0.4338383813486708, rt1.c2, '\rCSWg')) BETWEEN (((rt1.c4 IN ()), CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 END, json_insert(rt1.c4, rt1.c1, rt1.c1))) AND ((1930909558, CAST(rt1.c4 AS INTEGER), ((((rt1.c4)OR(0.6728317495231122)))AND(rt1.c0)))))) UNION ALL SELECT rt1.c1 FROM v0 LEFT OUTER JOIN rt1 ON (~ (rt1.c2)) COLLATE NOCASE WHERE ((NOT ((((0.4338383813486708, rt1.c2, '\rCSWg')) BETWEEN (((rt1.c4 IN ()), CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 END, json_insert(rt1.c4, rt1.c1, rt1.c1))) AND ((1930909558, CAST(rt1.c4 AS INTEGER), ((((rt1.c4)OR(0.6728317495231122)))AND(rt1.c0)))))))) UNION ALL SELECT rt1.c1 FROM v0 LEFT OUTER JOIN rt1 ON (~ (rt1.c2)) COLLATE NOCASE WHERE ((((((0.4338383813486708, rt1.c2, '\rCSWg')) BETWEEN (((rt1.c4 IN ()), CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 END, json_insert(rt1.c4, rt1.c1, rt1.c1))) AND ((1930909558, CAST(rt1.c4 AS INTEGER), ((((rt1.c4)OR(0.6728317495231122)))AND(rt1.c0)))))) ISNULL));
SELECT rt1.c1 FROM v0 LEFT OUTER JOIN rt1 ON (~ (rt1.c2)) COLLATE NOCASE;
SELECT DISTINCT * FROM rt1 INNER JOIN v0 ON (('uH뉳9j' COLLATE BINARY)=(CAST(v0.c0 AS TEXT)));
SELECT DISTINCT * FROM rt1 INNER JOIN v0 ON (('uH뉳9j' COLLATE BINARY)=(CAST(v0.c0 AS TEXT))) WHERE (((((v0.c0) IS TRUE))%(((rt1.c0)||(rt1.c4))))) UNION SELECT DISTINCT * FROM rt1 INNER JOIN v0 ON (('uH뉳9j' COLLATE BINARY)==(CAST(v0.c0 AS TEXT))) WHERE ((NOT (((((v0.c0) IS TRUE))%(((rt1.c0)||(rt1.c4))))))) UNION SELECT DISTINCT * FROM rt1 INNER JOIN v0 ON (('uH뉳9j' COLLATE BINARY)==(CAST(v0.c0 AS TEXT))) WHERE (((((((v0.c0) IS TRUE))%(((rt1.c0)||(rt1.c4))))) ISNULL));
SELECT DISTINCT * FROM rt1 INNER JOIN v0 ON (('uH뉳9j' COLLATE BINARY)=(CAST(v0.c0 AS TEXT)));
SELECT ALL rt1.c4, rt1.c1, rt1.c2, rt1.c0, v0.c0, rt1.c3 FROM v0, rt1 GROUP BY rt1.c4, rt1.c1, rt1.c2, rt1.c0, v0.c0, rt1.c3;
SELECT rt1.c4, rt1.c1, rt1.c2, rt1.c0, v0.c0, rt1.c3 FROM v0, rt1 WHERE ((((((rt1.c3)OR(rt1.c1)))AND(rt1.c1)) IN ())) GROUP BY rt1.c4, rt1.c1, rt1.c2, rt1.c0, v0.c0, rt1.c3 UNION SELECT rt1.c4, rt1.c1, rt1.c2, rt1.c0, v0.c0, rt1.c3 FROM v0, rt1 WHERE ((NOT ((((((rt1.c3)OR(rt1.c1)))AND(rt1.c1)) IN ())))) GROUP BY rt1.c4, rt1.c1, rt1.c2, rt1.c0, v0.c0, rt1.c3 UNION SELECT rt1.c4, rt1.c1, rt1.c2, rt1.c0, v0.c0, rt1.c3 FROM v0, rt1 WHERE ((((((((rt1.c3)OR(rt1.c1)))AND(rt1.c1)) IN ())) ISNULL)) GROUP BY rt1.c4, rt1.c1, rt1.c2, rt1.c0, v0.c0, rt1.c3;
SELECT ALL rt1.c4, rt1.c1, rt1.c2, rt1.c0, v0.c0, rt1.c3 FROM v0, rt1 GROUP BY rt1.c4, rt1.c1, rt1.c2, rt1.c0, v0.c0, rt1.c3;
SELECT rt0.c3, v0.c0, rt1.c2, rt0.c1, rt1.c0, rt0.c0, rt0.c2 FROM v0, rt1, rt0 GROUP BY rt0.c3, v0.c0, rt1.c2, rt0.c1, rt1.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, v0.c0, rt1.c2, rt0.c1, rt1.c0, rt0.c0, rt0.c2 FROM v0, rt1, rt0 GROUP BY rt0.c3, v0.c0, rt1.c2, rt0.c1, rt1.c0, rt0.c0, rt0.c2 HAVING ('0 ' IN ()) UNION ALL SELECT ALL rt0.c3, v0.c0, rt1.c2, rt0.c1, rt1.c0, rt0.c0, rt0.c2 FROM v0, rt1, rt0 GROUP BY rt0.c3, v0.c0, rt1.c2, rt0.c1, rt1.c0, rt0.c0, rt0.c2 HAVING (NOT (('0 ' IN ()))) UNION ALL SELECT rt0.c3, v0.c0, rt1.c2, rt0.c1, rt1.c0, rt0.c0, rt0.c2 FROM v0, rt1, rt0 GROUP BY rt0.c3, v0.c0, rt1.c2, rt0.c1, rt1.c0, rt0.c0, rt0.c2 HAVING ((('0 ' IN ())) ISNULL);
SELECT rt0.c3, v0.c0, rt1.c2, rt0.c1, rt1.c0, rt0.c0, rt0.c2 FROM v0, rt1, rt0 GROUP BY rt0.c3, v0.c0, rt1.c2, rt0.c1, rt1.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, v0.c0, rt1.c2, rt0.c1, rt1.c0, rt0.c0, rt0.c2 FROM v0, rt1, rt0 GROUP BY rt0.c3, v0.c0, rt1.c2, rt0.c1, rt1.c0, rt0.c0, rt0.c2 HAVING ('0 ' IN ()) UNION ALL SELECT ALL rt0.c3, v0.c0, rt1.c2, rt0.c1, rt1.c0, rt0.c0, rt0.c2 FROM v0, rt1, rt0 GROUP BY rt0.c3, v0.c0, rt1.c2, rt0.c1, rt1.c0, rt0.c0, rt0.c2 HAVING (NOT (('0 ' IN ()))) UNION ALL SELECT rt0.c3, v0.c0, rt1.c2, rt0.c1, rt1.c0, rt0.c0, rt0.c2 FROM v0, rt1, rt0 GROUP BY rt0.c3, v0.c0, rt1.c2, rt0.c1, rt1.c0, rt0.c0, rt0.c2 HAVING ((('0 ' IN ())) ISNULL);
SELECT rt0.c3, v0.c0, rt1.c2, rt0.c1, rt1.c0, rt0.c0, rt0.c2 FROM v0, rt1, rt0 GROUP BY rt0.c3, v0.c0, rt1.c2, rt0.c1, rt1.c0, rt0.c0, rt0.c2;
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON (((NOT (rt1.c4))) BETWEEN (CASE rt1.c0  WHEN rt1.c1 THEN 0Xfffffffff85e8702 END) AND (((x'')%(v0.c0)))) LEFT OUTER JOIN rt1 ON CAST(rt1.c2 COLLATE BINARY AS NUMERIC);
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CAST(v0.c0 AS INTEGER)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CAST(v0.c0 AS INTEGER)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 WHERE (NULL) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt1.c4, rt1.c3, rt1.c2, rt1.c0 FROM v0 RIGHT OUTER JOIN rt1 ON ((json_valid(rt1.c2))<=(((rt1.c4) IS TRUE))) GROUP BY rt1.c4, rt1.c3, rt1.c2, rt1.c0;
SELECT rt1.c4, rt1.c3, rt1.c2, rt1.c0 FROM v0 RIGHT OUTER JOIN rt1 ON ((json_valid(rt1.c2))<=(((rt1.c4) IS TRUE))) GROUP BY rt1.c4, rt1.c3, rt1.c2, rt1.c0 HAVING MIN(SUM(rt1.c4)) UNION ALL SELECT ALL rt1.c4, rt1.c3, rt1.c2, rt1.c0 FROM v0 RIGHT OUTER JOIN rt1 ON ((json_valid(rt1.c2))<=(((rt1.c4) IS TRUE))) GROUP BY rt1.c4, rt1.c3, rt1.c2, rt1.c0 HAVING (NOT (MIN(SUM(rt1.c4)))) UNION ALL SELECT rt1.c4, rt1.c3, rt1.c2, rt1.c0 FROM v0 RIGHT OUTER JOIN rt1 ON ((json_valid(rt1.c2))<=(((rt1.c4) IS TRUE))) GROUP BY rt1.c4, rt1.c3, rt1.c2, rt1.c0 HAVING ((MIN(SUM(rt1.c4))) ISNULL);
SELECT * FROM rt0, rt1, v0;
SELECT * FROM rt0, rt1, v0 WHERE (TYPEOF(DISTINCT NULL)) UNION ALL SELECT * FROM rt0, rt1, v0 WHERE ((NOT (TYPEOF(DISTINCT NULL)))) UNION ALL SELECT * FROM rt0, rt1, v0 WHERE (((TYPEOF(DISTINCT NULL)) ISNULL));
SELECT * FROM rt0, rt1, v0;
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE (((rt1.c2 COLLATE RTRIM) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (rt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT (((rt1.c2 COLLATE RTRIM) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (rt0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM rt0, rt1 NOT INDEXED WHERE (((((rt1.c2 COLLATE RTRIM) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (rt0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT ALL rt1.c1, rt0.c4, rt0.c2, v0.c0, rt1.c2, rt1.c0, rt0.c3, rt1.c4, rt1.c3, rt0.c0 FROM rt1, v0, rt0 GROUP BY rt1.c1, rt0.c4, rt0.c2, v0.c0, rt1.c2, rt1.c0, rt0.c3, rt1.c4, rt1.c3, rt0.c0;
SELECT ALL rt1.c1, rt0.c4, rt0.c2, v0.c0, rt1.c2, rt1.c0, rt0.c3, rt1.c4, rt1.c3, rt0.c0 FROM rt1, v0, rt0 WHERE (rt1.c1) GROUP BY rt1.c1, rt0.c4, rt0.c2, v0.c0, rt1.c2, rt1.c0, rt0.c3, rt1.c4, rt1.c3, rt0.c0 UNION SELECT rt1.c1, rt0.c4, rt0.c2, v0.c0, rt1.c2, rt1.c0, rt0.c3, rt1.c4, rt1.c3, rt0.c0 FROM rt1, v0, rt0 WHERE ((NOT (rt1.c1))) GROUP BY rt1.c1, rt0.c4, rt0.c2, v0.c0, rt1.c2, rt1.c0, rt0.c3, rt1.c4, rt1.c3, rt0.c0 UNION SELECT ALL rt1.c1, rt0.c4, rt0.c2, v0.c0, rt1.c2, rt1.c0, rt0.c3, rt1.c4, rt1.c3, rt0.c0 FROM rt1, v0, rt0 WHERE (((rt1.c1) ISNULL)) GROUP BY rt1.c1, rt0.c4, rt0.c2, v0.c0, rt1.c2, rt1.c0, rt0.c3, rt1.c4, rt1.c3, rt0.c0;
SELECT ALL rt1.c1, rt0.c4, rt0.c2, v0.c0, rt1.c2, rt1.c0, rt0.c3, rt1.c4, rt1.c3, rt0.c0 FROM rt1, v0, rt0 GROUP BY rt1.c1, rt0.c4, rt0.c2, v0.c0, rt1.c2, rt1.c0, rt0.c3, rt1.c4, rt1.c3, rt0.c0;
SELECT ALL rt0.c0, rt1.c3, rt0.c2, rt1.c2, rt0.c1, rt0.c4, rt0.c3, rt1.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c3, rt0.c2, rt1.c2, rt0.c1, rt0.c4, rt0.c3, rt1.c0, rt1.c1;
SELECT ALL rt0.c0, rt1.c3, rt0.c2, rt1.c2, rt0.c1, rt0.c4, rt0.c3, rt1.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c3, rt0.c2, rt1.c2, rt0.c1, rt0.c4, rt0.c3, rt1.c0, rt1.c1 HAVING 0.7246920254960706 UNION ALL SELECT ALL rt0.c0, rt1.c3, rt0.c2, rt1.c2, rt0.c1, rt0.c4, rt0.c3, rt1.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c3, rt0.c2, rt1.c2, rt0.c1, rt0.c4, rt0.c3, rt1.c0, rt1.c1 HAVING (NOT (0.7246920254960706)) UNION ALL SELECT rt0.c0, rt1.c3, rt0.c2, rt1.c2, rt0.c1, rt0.c4, rt0.c3, rt1.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c3, rt0.c2, rt1.c2, rt0.c1, rt0.c4, rt0.c3, rt1.c0, rt1.c1 HAVING ((0.7246920254960706) ISNULL);
SELECT ALL rt0.c0, rt1.c3, rt0.c2, rt1.c2, rt0.c1, rt0.c4, rt0.c3, rt1.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c3, rt0.c2, rt1.c2, rt0.c1, rt0.c4, rt0.c3, rt1.c0, rt1.c1;
SELECT ALL rt0.c0, rt1.c3, rt0.c2, rt1.c2, rt0.c1, rt0.c4, rt0.c3, rt1.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c3, rt0.c2, rt1.c2, rt0.c1, rt0.c4, rt0.c3, rt1.c0, rt1.c1 HAVING 0.7246920254960706 UNION ALL SELECT ALL rt0.c0, rt1.c3, rt0.c2, rt1.c2, rt0.c1, rt0.c4, rt0.c3, rt1.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c3, rt0.c2, rt1.c2, rt0.c1, rt0.c4, rt0.c3, rt1.c0, rt1.c1 HAVING (NOT (0.7246920254960706)) UNION ALL SELECT rt0.c0, rt1.c3, rt0.c2, rt1.c2, rt0.c1, rt0.c4, rt0.c3, rt1.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c3, rt0.c2, rt1.c2, rt0.c1, rt0.c4, rt0.c3, rt1.c0, rt1.c1 HAVING ((0.7246920254960706) ISNULL);
SELECT ALL rt0.c0, rt1.c3, rt0.c2, rt1.c2, rt0.c1, rt0.c4, rt0.c3, rt1.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c3, rt0.c2, rt1.c2, rt0.c1, rt0.c4, rt0.c3, rt1.c0, rt1.c1;
SELECT ALL MAX(CAST(JULIANDAY(rt1.c0, rt1.c1, rt0.c1) AS BLOB)) FROM rt1, rt0, v0 ORDER BY ((((rt1.c3))<=((rt1.c0))) IN (-1.441191128E9));
SELECT rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c3)) BETWEEN (((~ (rt0.c4)))) AND ((rt0.c4)));
SELECT ALL rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c3)) BETWEEN (((~ (rt0.c4)))) AND ((rt0.c4))) WHERE (((((((((DATE(NULL, rt0.c3, v0.c0))OR(((rt0.c0) IS FALSE))))OR(NULL)))AND(((((392114947)OR(rt0.c2)))AND(rt0.c0)))))OR((('-1441191128') ISNULL)))) UNION ALL SELECT rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c3)) BETWEEN (((~ (rt0.c4)))) AND ((rt0.c4))) WHERE ((NOT (((((((((DATE(NULL, rt0.c3, v0.c0))OR(((rt0.c0) IS FALSE))))OR(NULL)))AND(((((392114947)OR(rt0.c2)))AND(rt0.c0)))))OR((('-1441191128') ISNULL)))))) UNION ALL SELECT ALL rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c3)) BETWEEN (((~ (rt0.c4)))) AND ((rt0.c4))) WHERE (((((((((((DATE(NULL, rt0.c3, v0.c0))OR(((rt0.c0) IS FALSE))))OR(NULL)))AND(((((392114947)OR(rt0.c2)))AND(rt0.c0)))))OR((('-1441191128') ISNULL)))) ISNULL));
SELECT rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c3)) BETWEEN (((~ (rt0.c4)))) AND ((rt0.c4)));
SELECT DISTINCT v0.c0, rt1.c0, rt1.c3, rt0.c1 FROM rt0, rt1, v0;
SELECT DISTINCT v0.c0, rt1.c0, rt1.c3, rt0.c1 FROM rt0, rt1, v0 WHERE (((((rt1.c1)AND((~ (rt0.c3)))))OR(((rt1.c2)&(rt0.c2))))) UNION SELECT DISTINCT v0.c0, rt1.c0, rt1.c3, rt0.c1 FROM rt0, rt1, v0 WHERE ((NOT (((((rt1.c1)AND((~ (rt0.c3)))))OR(((rt1.c2)&(rt0.c2))))))) UNION SELECT DISTINCT v0.c0, rt1.c0, rt1.c3, rt0.c1 FROM rt0, rt1, v0 WHERE (((((((rt1.c1)AND((~ (rt0.c3)))))OR(((rt1.c2)&(rt0.c2))))) ISNULL));
SELECT DISTINCT v0.c0, rt1.c0, rt1.c3, rt0.c1 FROM rt0, rt1, v0;
SELECT ALL rt1.c1, rt1.c0, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, rt1.c3;
SELECT rt1.c1, rt1.c0, rt1.c2, rt1.c3 FROM rt1 WHERE (((CASE rt1.c3  WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c1 END)<(UNLIKELY(rt1.c2)))) GROUP BY rt1.c1, rt1.c0, rt1.c2, rt1.c3 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c2, rt1.c3 FROM rt1 WHERE ((NOT (((CASE rt1.c3  WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c1 END)<(UNLIKELY(rt1.c2)))))) GROUP BY rt1.c1, rt1.c0, rt1.c2, rt1.c3 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c2, rt1.c3 FROM rt1 WHERE (((((CASE rt1.c3  WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c1 END)<(UNLIKELY(rt1.c2)))) ISNULL)) GROUP BY rt1.c1, rt1.c0, rt1.c2, rt1.c3;
SELECT ALL rt1.c1, rt1.c0, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, rt1.c3;
SELECT ALL rt0.c4, rt0.c3, v0.c0, rt0.c1, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN (~ (rt0.c1)) THEN ((rt0.c2) BETWEEN ('-233017932') AND (rt0.c3)) ELSE rt0.c1 COLLATE RTRIM END GROUP BY rt0.c4, rt0.c3, v0.c0, rt0.c1, rt0.c0;
SELECT rt0.c4, rt0.c3, v0.c0, rt0.c1, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN (~ (rt0.c1)) THEN ((rt0.c2) BETWEEN ('-233017932') AND (rt0.c3)) ELSE rt0.c1 COLLATE RTRIM END GROUP BY rt0.c4, rt0.c3, v0.c0, rt0.c1, rt0.c0 HAVING ((TOTAL(AVG(MAX(AVG(COUNT(*)))))) IS TRUE) UNION ALL SELECT ALL rt0.c4, rt0.c3, v0.c0, rt0.c1, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN (~ (rt0.c1)) THEN ((rt0.c2) BETWEEN ('-233017932') AND (rt0.c3)) ELSE rt0.c1 COLLATE RTRIM END GROUP BY rt0.c4, rt0.c3, v0.c0, rt0.c1, rt0.c0 HAVING (NOT (((TOTAL(AVG(MAX(AVG(COUNT(*)))))) IS TRUE))) UNION ALL SELECT ALL rt0.c4, rt0.c3, v0.c0, rt0.c1, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN (~ (rt0.c1)) THEN ((rt0.c2) BETWEEN ('-233017932') AND (rt0.c3)) ELSE rt0.c1 COLLATE RTRIM END GROUP BY rt0.c4, rt0.c3, v0.c0, rt0.c1, rt0.c0 HAVING ((((TOTAL(AVG(MAX(AVG(COUNT(*)))))) IS TRUE)) ISNULL);
SELECT ALL rt1.c4, rt0.c4, rt1.c0, rt0.c3, v0.c0, rt1.c2, rt0.c2, rt0.c0, rt1.c3, rt1.c1 FROM v0, rt1, rt0;
SELECT ALL rt1.c4, rt0.c4, rt1.c0, rt0.c3, v0.c0, rt1.c2, rt0.c2, rt0.c0, rt1.c3, rt1.c1 FROM v0, rt1, rt0 WHERE (RTRIM(x'')) UNION ALL SELECT ALL rt1.c4, rt0.c4, rt1.c0, rt0.c3, v0.c0, rt1.c2, rt0.c2, rt0.c0, rt1.c3, rt1.c1 FROM v0, rt1, rt0 WHERE ((NOT (RTRIM(x'')))) UNION ALL SELECT ALL rt1.c4, rt0.c4, rt1.c0, rt0.c3, v0.c0, rt1.c2, rt0.c2, rt0.c0, rt1.c3, rt1.c1 FROM v0, rt1, rt0 WHERE (((RTRIM(x'')) ISNULL));
SELECT ALL rt1.c4, rt0.c4, rt1.c0, rt0.c3, v0.c0, rt1.c2, rt0.c2, rt0.c0, rt1.c3, rt1.c1 FROM v0, rt1, rt0;
SELECT DISTINCT * FROM v0 NOT INDEXED, rt1, rt0;
SELECT DISTINCT * FROM v0, rt1, rt0 WHERE (x'') UNION SELECT DISTINCT * FROM v0, rt1, rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM v0, rt1, rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM v0 NOT INDEXED, rt1, rt0;
SELECT ALL rt0.c3, rt1.c2, rt0.c4 FROM rt1 CROSS JOIN rt0 ON (((rt1.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c2)), rt0.c1 COLLATE RTRIM, ((rt1.c4)IS NOT(rt1.c1)))) AND ((((rt1.c1)=(rt1.c2)), ((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c3)), CASE rt0.c0  WHEN rt1.c4 THEN rt0.c0 ELSE rt1.c1 END))) GROUP BY rt0.c3, rt1.c2, rt0.c4;
SELECT rt0.c3, rt1.c2, rt0.c4 FROM rt1 CROSS JOIN rt0 ON (((rt1.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c2)), rt0.c1 COLLATE RTRIM, ((rt1.c4)IS NOT(rt1.c1)))) AND ((((rt1.c1)=(rt1.c2)), ((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c3)), CASE rt0.c0  WHEN rt1.c4 THEN rt0.c0 ELSE rt1.c1 END))) WHERE (x'a9b3') GROUP BY rt0.c3, rt1.c2, rt0.c4 UNION SELECT rt0.c3, rt1.c2, rt0.c4 FROM rt1 CROSS JOIN rt0 ON (((rt1.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c2)), rt0.c1 COLLATE RTRIM, ((rt1.c4)IS NOT(rt1.c1)))) AND ((((rt1.c1)=(rt1.c2)), ((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c3)), CASE rt0.c0  WHEN rt1.c4 THEN rt0.c0 ELSE rt1.c1 END))) WHERE ((NOT (x'a9b3'))) GROUP BY rt0.c3, rt1.c2, rt0.c4 UNION SELECT ALL rt0.c3, rt1.c2, rt0.c4 FROM rt1 CROSS JOIN rt0 ON (((rt1.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c2)), rt0.c1 COLLATE RTRIM, ((rt1.c4)IS NOT(rt1.c1)))) AND ((((rt1.c1)=(rt1.c2)), ((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c3)), CASE rt0.c0  WHEN rt1.c4 THEN rt0.c0 ELSE rt1.c1 END))) WHERE (((x'a9b3') ISNULL)) GROUP BY rt0.c3, rt1.c2, rt0.c4;
SELECT ALL rt0.c3, rt1.c2, rt0.c4 FROM rt1 CROSS JOIN rt0 ON (((rt1.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c2)), rt0.c1 COLLATE RTRIM, ((rt1.c4)IS NOT(rt1.c1)))) AND ((((rt1.c1)=(rt1.c2)), ((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c3)), CASE rt0.c0  WHEN rt1.c4 THEN rt0.c0 ELSE rt1.c1 END))) GROUP BY rt0.c3, rt1.c2, rt0.c4;
SELECT rt1.c4, rt1.c0, rt0.c0, rt1.c3, rt0.c4, rt1.c2, rt0.c3, rt1.c1, rt0.c1, rt0.c2 FROM rt1, rt0 NOT INDEXED NATURAL JOIN v0 GROUP BY rt1.c4, rt1.c0, rt0.c0, rt1.c3, rt0.c4, rt1.c2, rt0.c3, rt1.c1, rt0.c1, rt0.c2;
SELECT rt1.c4, rt1.c0, rt0.c0, rt1.c3, rt0.c4, rt1.c2, rt0.c3, rt1.c1, rt0.c1, rt0.c2 FROM rt1, rt0 NATURAL JOIN v0 GROUP BY rt1.c4, rt1.c0, rt0.c0, rt1.c3, rt0.c4, rt1.c2, rt0.c3, rt1.c1, rt0.c1, rt0.c2 HAVING ((TOTAL(GROUP_CONCAT(rt1.c2)))%(((rt0.c4)==(MAX(COUNT(*)))))) UNION ALL SELECT rt1.c4, rt1.c0, rt0.c0, rt1.c3, rt0.c4, rt1.c2, rt0.c3, rt1.c1, rt0.c1, rt0.c2 FROM rt1, rt0 NATURAL JOIN v0 GROUP BY rt1.c4, rt1.c0, rt0.c0, rt1.c3, rt0.c4, rt1.c2, rt0.c3, rt1.c1, rt0.c1, rt0.c2 HAVING (NOT (((TOTAL(GROUP_CONCAT(rt1.c2)))%(((rt0.c4)=(MAX(COUNT(*)))))))) UNION ALL SELECT rt1.c4, rt1.c0, rt0.c0, rt1.c3, rt0.c4, rt1.c2, rt0.c3, rt1.c1, rt0.c1, rt0.c2 FROM rt1, rt0 NATURAL JOIN v0 GROUP BY rt1.c4, rt1.c0, rt0.c0, rt1.c3, rt0.c4, rt1.c2, rt0.c3, rt1.c1, rt0.c1, rt0.c2 HAVING ((((TOTAL(GROUP_CONCAT(rt1.c2)))%(((rt0.c4)==(MAX(COUNT(*))))))) ISNULL);
SELECT ALL rt1.c3, rt1.c1, rt0.c0, rt0.c1, rt0.c3, rt0.c4, v0.c0, rt0.c2 FROM rt0 INNER JOIN rt1 ON CAST(((rt0.c2)AND(x'beac')) AS NUMERIC) FULL OUTER JOIN v0 ON (- (((rt1.c0)/(v0.c0))));
SELECT rt1.c3, rt1.c1, rt0.c0, rt0.c1, rt0.c3, rt0.c4, v0.c0, rt0.c2 FROM rt0 INNER JOIN rt1 ON CAST(((rt0.c2)AND(x'beac')) AS NUMERIC) FULL OUTER JOIN v0 ON (- (((rt1.c0)/(v0.c0)))) WHERE (((rt1.c0) NOT BETWEEN ((((rt0.c3, rt1.c0, rt1.c2)) BETWEEN ((rt0.c3, rt0.c3, -1457991512)) AND ((rt0.c3, rt0.c0, rt1.c0)))) AND (load_extension(rt0.c4, rt1.c3)))) UNION ALL SELECT ALL rt1.c3, rt1.c1, rt0.c0, rt0.c1, rt0.c3, rt0.c4, v0.c0, rt0.c2 FROM rt0 INNER JOIN rt1 ON CAST(((rt0.c2)AND(x'beac')) AS NUMERIC) FULL OUTER JOIN v0 ON (- (((rt1.c0)/(v0.c0)))) WHERE ((NOT (((rt1.c0) NOT BETWEEN ((((rt0.c3, rt1.c0, rt1.c2)) BETWEEN ((rt0.c3, rt0.c3, -1457991512)) AND ((rt0.c3, rt0.c0, rt1.c0)))) AND (load_extension(rt0.c4, rt1.c3)))))) UNION ALL SELECT rt1.c3, rt1.c1, rt0.c0, rt0.c1, rt0.c3, rt0.c4, v0.c0, rt0.c2 FROM rt0 INNER JOIN rt1 ON CAST(((rt0.c2)AND(x'beac')) AS NUMERIC) FULL OUTER JOIN v0 ON (- (((rt1.c0)/(v0.c0)))) WHERE (((((rt1.c0) NOT BETWEEN ((((rt0.c3, rt1.c0, rt1.c2)) BETWEEN ((rt0.c3, rt0.c3, -1457991512)) AND ((rt0.c3, rt0.c0, rt1.c0)))) AND (load_extension(rt0.c4, rt1.c3)))) ISNULL));
SELECT ALL rt1.c3, rt1.c1, rt0.c0, rt0.c1, rt0.c3, rt0.c4, v0.c0, rt0.c2 FROM rt0 INNER JOIN rt1 ON CAST(((rt0.c2)AND(x'beac')) AS NUMERIC) FULL OUTER JOIN v0 ON (- (((rt1.c0)/(v0.c0))));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (json_array(CAST(rt0.c4 AS TEXT), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 END)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (json_array(CAST(rt0.c4 AS TEXT), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 END)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((json_array(CAST(rt0.c4 AS TEXT), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 END)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt1.c0, rt1.c3, v0.c0, rt1.c1 FROM v0 RIGHT OUTER JOIN rt1 ON rt1.c1 GROUP BY rt1.c0, rt1.c3, v0.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c3, v0.c0, rt1.c1 FROM v0 RIGHT OUTER JOIN rt1 ON rt1.c1 WHERE (((((rt1.c0)<=(rt1.c0)))AND(LOWER(rt1.c0)))) GROUP BY rt1.c0, rt1.c3, v0.c0, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c3, v0.c0, rt1.c1 FROM v0 RIGHT OUTER JOIN rt1 ON rt1.c1 WHERE ((NOT (((((rt1.c0)<=(rt1.c0)))AND(LOWER(rt1.c0)))))) GROUP BY rt1.c0, rt1.c3, v0.c0, rt1.c1 UNION SELECT rt1.c0, rt1.c3, v0.c0, rt1.c1 FROM v0 RIGHT OUTER JOIN rt1 ON rt1.c1 WHERE (((((((rt1.c0)<=(rt1.c0)))AND(LOWER(rt1.c0)))) ISNULL)) GROUP BY rt1.c0, rt1.c3, v0.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c3, v0.c0, rt1.c1 FROM v0 RIGHT OUTER JOIN rt1 ON rt1.c1 GROUP BY rt1.c0, rt1.c3, v0.c0, rt1.c1;
SELECT ALL rt1.c3, v0.c0, rt1.c2 FROM rt1, v0 GROUP BY rt1.c3, v0.c0, rt1.c2;
SELECT rt1.c3, v0.c0, rt1.c2 FROM rt1, v0 GROUP BY rt1.c3, v0.c0, rt1.c2 HAVING CAST(((((((((COUNT(MIN(AVG(rt1.c0))))OR(MIN(MIN(GROUP_CONCAT(COUNT(COUNT(*))))))))AND(TOTAL(rt1.c0))))AND(rt1.c3)))OR(SUM(AVG(GROUP_CONCAT(rt1.c0))))) AS INTEGER) UNION ALL SELECT ALL rt1.c3, v0.c0, rt1.c2 FROM rt1, v0 GROUP BY rt1.c3, v0.c0, rt1.c2 HAVING (NOT (CAST(((((((((COUNT(MIN(AVG(rt1.c0))))OR(MIN(MIN(GROUP_CONCAT(COUNT(COUNT(*))))))))AND(TOTAL(rt1.c0))))AND(rt1.c3)))OR(SUM(AVG(GROUP_CONCAT(rt1.c0))))) AS INTEGER))) UNION ALL SELECT ALL rt1.c3, v0.c0, rt1.c2 FROM rt1, v0 GROUP BY rt1.c3, v0.c0, rt1.c2 HAVING ((CAST(((((((((COUNT(MIN(AVG(rt1.c0))))OR(MIN(MIN(GROUP_CONCAT(COUNT(COUNT(*))))))))AND(TOTAL(rt1.c0))))AND(rt1.c3)))OR(SUM(AVG(GROUP_CONCAT(rt1.c0))))) AS INTEGER)) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE ((((((rt0.c4))==((v0.c0)))) NOT BETWEEN (ABS(NULL)) AND (v0.c0 COLLATE BINARY))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT ((((((rt0.c4))==((v0.c0)))) NOT BETWEEN (ABS(NULL)) AND (v0.c0 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((((((((rt0.c4))=((v0.c0)))) NOT BETWEEN (ABS(NULL)) AND (v0.c0 COLLATE BINARY))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0, v0 WHERE (CASE WHEN rt0.c4 THEN ((rt0.c1)OR(rt0.c3)) END) UNION SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0, v0 WHERE ((NOT (CASE WHEN rt0.c4 THEN ((rt0.c1)OR(rt0.c3)) END))) UNION SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0, v0 WHERE (((CASE WHEN rt0.c4 THEN ((rt0.c1)OR(rt0.c3)) END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0, v0;
SELECT rt1.c4, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c4, rt1.c0, rt1.c1;
SELECT ALL rt1.c4, rt1.c0, rt1.c1 FROM rt1 WHERE ((((((rt1.c3, rt1.c3, -288810903)) BETWEEN ((rt1.c2, rt1.c3, rt1.c1)) AND ((rt1.c0, rt1.c0, rt1.c2)))) BETWEEN (((x'')GLOB(rt1.c1))) AND ((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2)))))) GROUP BY rt1.c4, rt1.c0, rt1.c1 UNION SELECT rt1.c4, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT ((((((rt1.c3, rt1.c3, -288810903)) BETWEEN ((rt1.c2, rt1.c3, rt1.c1)) AND ((rt1.c0, rt1.c0, rt1.c2)))) BETWEEN (((x'')GLOB(rt1.c1))) AND ((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2)))))))) GROUP BY rt1.c4, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c4, rt1.c0, rt1.c1 FROM rt1 WHERE ((((((((rt1.c3, rt1.c3, -288810903)) BETWEEN ((rt1.c2, rt1.c3, rt1.c1)) AND ((rt1.c0, rt1.c0, rt1.c2)))) BETWEEN (((x'')GLOB(rt1.c1))) AND ((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2)))))) ISNULL)) GROUP BY rt1.c4, rt1.c0, rt1.c1;
SELECT rt1.c4, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c4, rt1.c0, rt1.c1;
SELECT ALL rt1.c3, rt1.c0, rt1.c1, rt1.c4 FROM rt1 GROUP BY rt1.c3, rt1.c0, rt1.c1, rt1.c4;
SELECT ALL rt1.c3, rt1.c0, rt1.c1, rt1.c4 FROM rt1 GROUP BY rt1.c3, rt1.c0, rt1.c1, rt1.c4 HAVING AVG(((0.04139964983161104)AND(AVG(TOTAL(COUNT(MIN(-1911929736))))))) UNION ALL SELECT rt1.c3, rt1.c0, rt1.c1, rt1.c4 FROM rt1 GROUP BY rt1.c3, rt1.c0, rt1.c1, rt1.c4 HAVING (NOT (AVG(((0.04139964983161104)AND(AVG(TOTAL(COUNT(MIN(-1911929736))))))))) UNION ALL SELECT rt1.c3, rt1.c0, rt1.c1, rt1.c4 FROM rt1 GROUP BY rt1.c3, rt1.c0, rt1.c1, rt1.c4 HAVING ((AVG(((0.04139964983161104)AND(AVG(TOTAL(COUNT(MIN(-1911929736)))))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c3 AS REAL) IN (-1269550092, CAST(rt0.c0 AS NUMERIC)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((CAST(rt0.c3 AS REAL) IN (-1269550092, CAST(rt0.c0 AS NUMERIC)))))) UNION ALL SELECT * FROM rt0 WHERE ((((CAST(rt0.c3 AS REAL) IN (-1269550092, CAST(rt0.c0 AS NUMERIC)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CAST(((rt1.c0)<<(rt1.c3)) AS TEXT)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CAST(((rt1.c0)<<(rt1.c3)) AS TEXT)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CAST(((rt1.c0)<<(rt1.c3)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 WHERE (-523641357) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE ((NOT (-523641357))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE (((-523641357) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2;
SELECT v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING (~ (TOTAL(COUNT(rt0.c2)))) UNION ALL SELECT ALL v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING (NOT ((~ (TOTAL(COUNT(rt0.c2)))))) UNION ALL SELECT ALL v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING (((~ (TOTAL(COUNT(rt0.c2))))) ISNULL);
SELECT ALL rt1.c4, rt1.c1, rt1.c2, v0.c0, rt1.c0 FROM rt1, v0;
SELECT rt1.c4, rt1.c1, rt1.c2, v0.c0, rt1.c0 FROM rt1, v0 WHERE ((((-465369678)<=(v0.c0)) IN ())) UNION ALL SELECT ALL rt1.c4, rt1.c1, rt1.c2, v0.c0, rt1.c0 FROM rt1, v0 WHERE ((NOT ((((-465369678)<=(v0.c0)) IN ())))) UNION ALL SELECT rt1.c4, rt1.c1, rt1.c2, v0.c0, rt1.c0 FROM rt1, v0 WHERE ((((((-465369678)<=(v0.c0)) IN ())) ISNULL));
SELECT ALL rt1.c4, rt1.c1, rt1.c2, v0.c0, rt1.c0 FROM rt1, v0;
SELECT DISTINCT rt1.c3, rt1.c4 FROM rt1;
SELECT DISTINCT rt1.c3, rt1.c4 FROM rt1 WHERE (x'') UNION SELECT DISTINCT rt1.c3, rt1.c4 FROM rt1 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt1.c3, rt1.c4 FROM rt1 WHERE (((x'') ISNULL));
SELECT DISTINCT rt1.c3, rt1.c4 FROM rt1;
SELECT ALL rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2;
SELECT rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0 WHERE ('-729863383') GROUP BY rt0.c4, rt0.c1, rt0.c2 UNION SELECT rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0 WHERE ((NOT ('-729863383'))) GROUP BY rt0.c4, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0 WHERE ((('-729863383') ISNULL)) GROUP BY rt0.c4, rt0.c1, rt0.c2;
SELECT ALL rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2;
SELECT ALL rt1.c4, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt1.c0, rt0.c3, rt1.c3, rt0.c2, rt1.c2, rt1.c1 FROM v0, rt1 NATURAL JOIN rt0 GROUP BY rt1.c4, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt1.c0, rt0.c3, rt1.c3, rt0.c2, rt1.c2, rt1.c1;
SELECT ALL rt1.c4, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt1.c0, rt0.c3, rt1.c3, rt0.c2, rt1.c2, rt1.c1 FROM v0, rt1 NATURAL JOIN rt0 GROUP BY rt1.c4, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt1.c0, rt0.c3, rt1.c3, rt0.c2, rt1.c2, rt1.c1 HAVING ((((rt0.c0)&(COUNT(*)))) IS TRUE) UNION ALL SELECT rt1.c4, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt1.c0, rt0.c3, rt1.c3, rt0.c2, rt1.c2, rt1.c1 FROM v0, rt1 NATURAL JOIN rt0 GROUP BY rt1.c4, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt1.c0, rt0.c3, rt1.c3, rt0.c2, rt1.c2, rt1.c1 HAVING (NOT (((((rt0.c0)&(COUNT(*)))) IS TRUE))) UNION ALL SELECT rt1.c4, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt1.c0, rt0.c3, rt1.c3, rt0.c2, rt1.c2, rt1.c1 FROM v0, rt1 NATURAL JOIN rt0 GROUP BY rt1.c4, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt1.c0, rt0.c3, rt1.c3, rt0.c2, rt1.c2, rt1.c1 HAVING ((((((rt0.c0)&(COUNT(*)))) IS TRUE)) ISNULL);
SELECT ALL rt1.c4, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt1.c0, rt0.c3, rt1.c3, rt0.c2, rt1.c2, rt1.c1 FROM v0, rt1 NATURAL JOIN rt0 GROUP BY rt1.c4, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt1.c0, rt0.c3, rt1.c3, rt0.c2, rt1.c2, rt1.c1;
SELECT ALL rt1.c4, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt1.c0, rt0.c3, rt1.c3, rt0.c2, rt1.c2, rt1.c1 FROM v0, rt1 NATURAL JOIN rt0 GROUP BY rt1.c4, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt1.c0, rt0.c3, rt1.c3, rt0.c2, rt1.c2, rt1.c1 HAVING ((((rt0.c0)&(COUNT(*)))) IS TRUE) UNION ALL SELECT rt1.c4, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt1.c0, rt0.c3, rt1.c3, rt0.c2, rt1.c2, rt1.c1 FROM v0, rt1 NATURAL JOIN rt0 GROUP BY rt1.c4, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt1.c0, rt0.c3, rt1.c3, rt0.c2, rt1.c2, rt1.c1 HAVING (NOT (((((rt0.c0)&(COUNT(*)))) IS TRUE))) UNION ALL SELECT rt1.c4, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt1.c0, rt0.c3, rt1.c3, rt0.c2, rt1.c2, rt1.c1 FROM v0, rt1 NATURAL JOIN rt0 GROUP BY rt1.c4, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt1.c0, rt0.c3, rt1.c3, rt0.c2, rt1.c2, rt1.c1 HAVING ((((((rt0.c0)&(COUNT(*)))) IS TRUE)) ISNULL);
SELECT ALL rt1.c4, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt1.c0, rt0.c3, rt1.c3, rt0.c2, rt1.c2, rt1.c1 FROM v0, rt1 NATURAL JOIN rt0 GROUP BY rt1.c4, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt1.c0, rt0.c3, rt1.c3, rt0.c2, rt1.c2, rt1.c1;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CASE (NOT (rt0.c0))  WHEN CAST(rt0.c4 AS INTEGER) THEN ((x'dee9')>=(rt0.c0)) WHEN ((rt0.c1)<=(rt0.c0)) THEN LIKELIHOOD(rt0.c2, 0.9171843527708791) WHEN (rt0.c1 IN ()) THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE (NOT (rt0.c0))  WHEN CAST(rt0.c4 AS INTEGER) THEN ((x'dee9')>=(rt0.c0)) WHEN ((rt0.c1)<=(rt0.c0)) THEN LIKELIHOOD(rt0.c2, 0.9171843527708791) WHEN (rt0.c1 IN ()) THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE (NOT (rt0.c0))  WHEN CAST(rt0.c4 AS INTEGER) THEN ((x'dee9')>=(rt0.c0)) WHEN ((rt0.c1)<=(rt0.c0)) THEN LIKELIHOOD(rt0.c2, 0.9171843527708791) WHEN (rt0.c1 IN ()) THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM v0, rt1, rt0;
SELECT DISTINCT * FROM v0, rt1, rt0 WHERE (TRIM(x'')) UNION SELECT DISTINCT * FROM v0, rt1, rt0 WHERE ((NOT (TRIM(x'')))) UNION SELECT DISTINCT * FROM v0, rt1, rt0 WHERE (((TRIM(x'')) ISNULL));
SELECT DISTINCT * FROM v0, rt1, rt0;
SELECT ALL rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c0;
SELECT rt1.c3, rt1.c0 FROM rt1 WHERE (CAST(CAST(rt1.c0 AS REAL) AS TEXT)) GROUP BY rt1.c3, rt1.c0 UNION SELECT rt1.c3, rt1.c0 FROM rt1 WHERE ((NOT (CAST(CAST(rt1.c0 AS REAL) AS TEXT)))) GROUP BY rt1.c3, rt1.c0 UNION SELECT ALL rt1.c3, rt1.c0 FROM rt1 WHERE (((CAST(CAST(rt1.c0 AS REAL) AS TEXT)) ISNULL)) GROUP BY rt1.c3, rt1.c0;
SELECT ALL rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c0;
SELECT ALL rt0.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt1, v0, rt0 GROUP BY rt0.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c2, rt0.c1, rt0.c4, rt0.c3;
SELECT ALL rt0.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt1, v0, rt0 GROUP BY rt0.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c2, rt0.c1, rt0.c4, rt0.c3 HAVING ((CAST(COUNT(*) AS REAL)) NOTNULL) UNION ALL SELECT ALL rt0.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt1, v0, rt0 GROUP BY rt0.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c2, rt0.c1, rt0.c4, rt0.c3 HAVING (NOT (((CAST(COUNT(*) AS REAL)) NOTNULL))) UNION ALL SELECT rt0.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt1, v0, rt0 GROUP BY rt0.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c2, rt0.c1, rt0.c4, rt0.c3 HAVING ((((CAST(COUNT(*) AS REAL)) NOTNULL)) ISNULL);
SELECT ALL rt0.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt1, v0, rt0 GROUP BY rt0.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c2, rt0.c1, rt0.c4, rt0.c3;
SELECT ALL rt0.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt1, v0, rt0 GROUP BY rt0.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c2, rt0.c1, rt0.c4, rt0.c3 HAVING ((CAST(COUNT(*) AS REAL)) NOTNULL) UNION ALL SELECT ALL rt0.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt1, v0, rt0 GROUP BY rt0.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c2, rt0.c1, rt0.c4, rt0.c3 HAVING (NOT (((CAST(COUNT(*) AS REAL)) NOTNULL))) UNION ALL SELECT rt0.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt1, v0, rt0 GROUP BY rt0.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c2, rt0.c1, rt0.c4, rt0.c3 HAVING ((((CAST(COUNT(*) AS REAL)) NOTNULL)) ISNULL);
SELECT ALL rt0.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt1, v0, rt0 GROUP BY rt0.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c2, rt0.c1, rt0.c4, rt0.c3;
SELECT * FROM rt1, rt0, v0;
SELECT * FROM rt1, rt0, v0 WHERE (((((((((((rt0.c1)AND(rt0.c2)))AND(rt1.c4)))AND(rt0.c2)))OR(rt1.c0))) IS FALSE)) UNION ALL SELECT ALL * FROM rt1, rt0, v0 WHERE ((NOT (((((((((((rt0.c1)AND(rt0.c2)))AND(rt1.c4)))AND(rt0.c2)))OR(rt1.c0))) IS FALSE)))) UNION ALL SELECT ALL * FROM rt1, rt0, v0 WHERE (((((((((((((rt0.c1)AND(rt0.c2)))AND(rt1.c4)))AND(rt0.c2)))OR(rt1.c0))) IS FALSE)) ISNULL));
SELECT * FROM rt1, rt0, v0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((((x'')LIKE(rt1.c0)))AND(((((((((((((rt1.c3)OR(rt1.c3)))OR(rt1.c1)))OR(rt1.c3)))OR(rt1.c1)))OR(rt1.c4)))AND(rt1.c3)))))OR(((rt1.c0)*(rt1.c1))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((((((x'')LIKE(rt1.c0)))AND(((((((((((((rt1.c3)OR(rt1.c3)))OR(rt1.c1)))OR(rt1.c3)))OR(rt1.c1)))OR(rt1.c4)))AND(rt1.c3)))))OR(((rt1.c0)*(rt1.c1))))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((((x'')LIKE(rt1.c0)))AND(((((((((((((rt1.c3)OR(rt1.c3)))OR(rt1.c1)))OR(rt1.c3)))OR(rt1.c1)))OR(rt1.c4)))AND(rt1.c3)))))OR(((rt1.c0)*(rt1.c1))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (CAST(x'' AS REAL)) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST(x'' AS REAL)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST(x'' AS REAL)) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(((((v0.c0)AND(v0.c0)))OR(SUM(AVG(SUM(COUNT(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(((((v0.c0)AND(v0.c0)))OR(SUM(AVG(SUM(COUNT(v0.c0))))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(((((v0.c0)AND(v0.c0)))OR(SUM(AVG(SUM(COUNT(v0.c0)))))))) ISNULL);
SELECT ALL rt1.c1, rt1.c3, rt1.c2, rt1.c0, rt0.c2, rt0.c0 FROM rt1, rt0;
SELECT rt1.c1, rt1.c3, rt1.c2, rt1.c0, rt0.c2, rt0.c0 FROM rt1, rt0 WHERE (x'') UNION ALL SELECT ALL rt1.c1, rt1.c3, rt1.c2, rt1.c0, rt0.c2, rt0.c0 FROM rt1, rt0 WHERE ((NOT (x''))) UNION ALL SELECT ALL rt1.c1, rt1.c3, rt1.c2, rt1.c0, rt0.c2, rt0.c0 FROM rt1, rt0 WHERE (((x'') ISNULL));
SELECT ALL rt1.c1, rt1.c3, rt1.c2, rt1.c0, rt0.c2, rt0.c0 FROM rt1, rt0;
SELECT DISTINCT rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c3 FROM rt0 NOT INDEXED WHERE (((GLOB(rt0.c0, rt0.c3))>>((- (rt0.c0))))) UNION SELECT DISTINCT rt0.c3 FROM rt0 WHERE ((NOT (((GLOB(rt0.c0, rt0.c3))>>((- (rt0.c0))))))) UNION SELECT DISTINCT rt0.c3 FROM rt0 WHERE (((((GLOB(rt0.c0, rt0.c3))>>((- (rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c3 FROM rt0;
SELECT v0.c0, rt1.c2, rt0.c3 FROM rt1 CROSS JOIN rt0 ON (((rt1.c4) NOT BETWEEN (rt0.c4) AND (0.7516518171761456)) IN ()) FULL OUTER JOIN v0 ON LOWER((('GNyj麴u')IS(v0.c0))) GROUP BY v0.c0, rt1.c2, rt0.c3;
SELECT ALL v0.c0, rt1.c2, rt0.c3 FROM rt1 CROSS JOIN rt0 ON (((rt1.c4) NOT BETWEEN (rt0.c4) AND (0.7516518171761456)) IN ()) FULL OUTER JOIN v0 ON LOWER((('GNyj麴u')IS(v0.c0))) WHERE (rt1.c0) GROUP BY v0.c0, rt1.c2, rt0.c3 UNION SELECT v0.c0, rt1.c2, rt0.c3 FROM rt1 CROSS JOIN rt0 ON (((rt1.c4) NOT BETWEEN (rt0.c4) AND (0.7516518171761456)) IN ()) FULL OUTER JOIN v0 ON LOWER((('GNyj麴u')IS(v0.c0))) WHERE ((NOT (rt1.c0))) GROUP BY v0.c0, rt1.c2, rt0.c3 UNION SELECT v0.c0, rt1.c2, rt0.c3 FROM rt1 CROSS JOIN rt0 ON (((rt1.c4) NOT BETWEEN (rt0.c4) AND (0.7516518171761456)) IN ()) FULL OUTER JOIN v0 ON LOWER((('GNyj麴u')IS(v0.c0))) WHERE (((rt1.c0) ISNULL)) GROUP BY v0.c0, rt1.c2, rt0.c3;
SELECT v0.c0, rt1.c2, rt0.c3 FROM rt1 CROSS JOIN rt0 ON (((rt1.c4) NOT BETWEEN (rt0.c4) AND (0.7516518171761456)) IN ()) FULL OUTER JOIN v0 ON LOWER((('GNyj麴u')IS(v0.c0))) GROUP BY v0.c0, rt1.c2, rt0.c3;
SELECT ALL rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2;
SELECT rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2 HAVING MIN(COUNT(rt0.c3) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2 HAVING (NOT (MIN(COUNT(rt0.c3) COLLATE NOCASE))) UNION ALL SELECT rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2 HAVING ((MIN(COUNT(rt0.c3) COLLATE NOCASE)) ISNULL);
SELECT rt0.c3, rt0.c4 FROM rt0;
SELECT ALL rt0.c3, rt0.c4 FROM rt0 WHERE (CAST(((-1.572584374E9) BETWEEN (rt0.c4) AND (rt0.c4)) AS REAL)) UNION ALL SELECT rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (CAST(((-1.572584374E9) BETWEEN (rt0.c4) AND (rt0.c4)) AS REAL)))) UNION ALL SELECT rt0.c3, rt0.c4 FROM rt0 WHERE (((CAST(((-1.572584374E9) BETWEEN (rt0.c4) AND (rt0.c4)) AS REAL)) ISNULL));
SELECT rt0.c3, rt0.c4 FROM rt0;
SELECT DISTINCT * FROM v0, rt0, rt1;
SELECT DISTINCT * FROM v0, rt0, rt1 NOT INDEXED WHERE (rt0.c0) UNION SELECT DISTINCT * FROM v0, rt0, rt1 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM v0, rt0, rt1 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM v0, rt0, rt1;
SELECT v0.c0, rt1.c3, rt1.c2, rt1.c1 FROM rt1, v0 GROUP BY v0.c0, rt1.c3, rt1.c2, rt1.c1;
SELECT ALL v0.c0, rt1.c3, rt1.c2, rt1.c1 FROM rt1, v0 WHERE (rt1.c4) GROUP BY v0.c0, rt1.c3, rt1.c2, rt1.c1 UNION SELECT v0.c0, rt1.c3, rt1.c2, rt1.c1 FROM rt1, v0 WHERE ((NOT (rt1.c4))) GROUP BY v0.c0, rt1.c3, rt1.c2, rt1.c1 UNION SELECT ALL v0.c0, rt1.c3, rt1.c2, rt1.c1 FROM rt1, v0 WHERE (((rt1.c4) ISNULL)) GROUP BY v0.c0, rt1.c3, rt1.c2, rt1.c1;
SELECT v0.c0, rt1.c3, rt1.c2, rt1.c1 FROM rt1, v0 GROUP BY v0.c0, rt1.c3, rt1.c2, rt1.c1;
SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2 HAVING CASE GROUP_CONCAT(MIN(rt0.c0))  WHEN ((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c2)))OR(COUNT(*))))OR(rt0.c2)) THEN (((COUNT(*), rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c0, AVG(0.941429562917681), rt0.c3)) AND ((GROUP_CONCAT(COUNT(rt0.c1)), MAX(TOTAL(COUNT(*))), GROUP_CONCAT(rt0.c0)))) ELSE COUNT(*) END UNION ALL SELECT rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2 HAVING (NOT (CASE GROUP_CONCAT(MIN(rt0.c0))  WHEN ((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c2)))OR(COUNT(*))))OR(rt0.c2)) THEN (((COUNT(*), rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c0, AVG(0.941429562917681), rt0.c3)) AND ((GROUP_CONCAT(COUNT(rt0.c1)), MAX(TOTAL(COUNT(*))), GROUP_CONCAT(rt0.c0)))) ELSE COUNT(*) END)) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2 HAVING ((CASE GROUP_CONCAT(MIN(rt0.c0))  WHEN ((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c2)))OR(COUNT(*))))OR(rt0.c2)) THEN (((COUNT(*), rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c0, AVG(0.941429562917681), rt0.c3)) AND ((GROUP_CONCAT(COUNT(rt0.c1)), MAX(TOTAL(COUNT(*))), GROUP_CONCAT(rt0.c0)))) ELSE COUNT(*) END) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS TEXT)) NOTNULL)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS TEXT)) NOTNULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS TEXT)) NOTNULL)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((NOT (rt0.c3)) IN ())) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((NOT (rt0.c3)) IN ())))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((NOT (rt0.c3)) IN ())) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt1.c1, rt0.c0, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c1, rt0.c0, rt0.c1;
SELECT ALL rt1.c1, rt0.c0, rt0.c1 FROM rt1, rt0 WHERE (((((CASE WHEN rt1.c2 THEN rt1.c4 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 WHEN rt0.c4 THEN rt0.c1 ELSE rt1.c1 END)AND(TYPEOF(DISTINCT rt0.c4))))OR(((rt1.c4)<(rt0.c3))))) GROUP BY rt1.c1, rt0.c0, rt0.c1 UNION SELECT rt1.c1, rt0.c0, rt0.c1 FROM rt1, rt0 WHERE ((NOT (((((CASE WHEN rt1.c2 THEN rt1.c4 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 WHEN rt0.c4 THEN rt0.c1 ELSE rt1.c1 END)AND(TYPEOF(DISTINCT rt0.c4))))OR(((rt1.c4)<(rt0.c3))))))) GROUP BY rt1.c1, rt0.c0, rt0.c1 UNION SELECT ALL rt1.c1, rt0.c0, rt0.c1 FROM rt1, rt0 WHERE (((((((CASE WHEN rt1.c2 THEN rt1.c4 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 WHEN rt0.c4 THEN rt0.c1 ELSE rt1.c1 END)AND(TYPEOF(DISTINCT rt0.c4))))OR(((rt1.c4)<(rt0.c3))))) ISNULL)) GROUP BY rt1.c1, rt0.c0, rt0.c1;
SELECT rt1.c1, rt0.c0, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c1, rt0.c0, rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((COUNT(*))) NOT BETWEEN ((((v0.c0)*(TOTAL(v0.c0))))) AND ((MAX(MIN(SUM(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((COUNT(*))) NOT BETWEEN ((((v0.c0)*(TOTAL(v0.c0))))) AND ((MAX(MIN(SUM(v0.c0)))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((COUNT(*))) NOT BETWEEN ((((v0.c0)*(TOTAL(v0.c0))))) AND ((MAX(MIN(SUM(v0.c0))))))) ISNULL);
SELECT ALL * FROM v0 CROSS JOIN rt1 ON CAST(((rt1.c2) NOTNULL) AS NUMERIC) RIGHT OUTER JOIN rt0 ON ((rt1.c2)%((NOT (rt1.c2))));
SELECT ALL * FROM v0 CROSS JOIN rt1 ON CAST(((rt1.c2) NOTNULL) AS NUMERIC) RIGHT OUTER JOIN rt0 ON ((rt1.c2)%((NOT (rt1.c2)))) WHERE (((((((((ABS(rt1.c0))OR(CASE WHEN rt1.c4 THEN rt1.c4 END)))AND(((0.7088317491390262) IS TRUE))))AND(((rt0.c4) NOT BETWEEN ('1R	U |K*') AND (rt1.c2)))))AND(((rt1.c4)IS('-1622335004'))))) UNION ALL SELECT * FROM v0 CROSS JOIN rt1 ON CAST(((rt1.c2) NOTNULL) AS NUMERIC) RIGHT OUTER JOIN rt0 ON ((rt1.c2)%((NOT (rt1.c2)))) WHERE ((NOT (((((((((ABS(rt1.c0))OR(CASE WHEN rt1.c4 THEN rt1.c4 END)))AND(((0.7088317491390262) IS TRUE))))AND(((rt0.c4) NOT BETWEEN ('1R	U |K*') AND (rt1.c2)))))AND(((rt1.c4)IS('-1622335004'))))))) UNION ALL SELECT ALL * FROM v0 CROSS JOIN rt1 ON CAST(((rt1.c2) NOTNULL) AS NUMERIC) RIGHT OUTER JOIN rt0 ON ((rt1.c2)%((NOT (rt1.c2)))) WHERE (((((((((((ABS(rt1.c0))OR(CASE WHEN rt1.c4 THEN rt1.c4 END)))AND(((0.7088317491390262) IS TRUE))))AND(((rt0.c4) NOT BETWEEN ('1R	U |K*') AND (rt1.c2)))))AND(((rt1.c4)IS('-1622335004'))))) ISNULL));
SELECT ALL * FROM v0 CROSS JOIN rt1 ON CAST(((rt1.c2) NOTNULL) AS NUMERIC) RIGHT OUTER JOIN rt0 ON ((rt1.c2)%((NOT (rt1.c2))));
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c4 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c4 FROM rt1 WHERE (rt1.c4 COLLATE RTRIM) UNION SELECT DISTINCT rt1.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c4 FROM rt1 WHERE ((NOT (rt1.c4 COLLATE RTRIM))) UNION SELECT DISTINCT rt1.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c4 FROM rt1 WHERE (((rt1.c4 COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c4 FROM rt1;
SELECT ALL rt1.c1, rt0.c2, rt0.c1, rt1.c4, rt1.c0, rt0.c3, rt0.c4, v0.c0, rt1.c3, rt0.c0 FROM v0 LEFT OUTER JOIN rt1 ON ((CAST(NULL AS BLOB))<=(((rt1.c2) BETWEEN (x'13ae') AND (rt1.c0)))) INNER JOIN rt0 ON TOTAL_CHANGES() GROUP BY rt1.c1, rt0.c2, rt0.c1, rt1.c4, rt1.c0, rt0.c3, rt0.c4, v0.c0, rt1.c3, rt0.c0;
SELECT ALL rt1.c1, rt0.c2, rt0.c1, rt1.c4, rt1.c0, rt0.c3, rt0.c4, v0.c0, rt1.c3, rt0.c0 FROM v0 LEFT OUTER JOIN rt1 ON ((CAST(NULL AS BLOB))<=(((rt1.c2) BETWEEN (x'13ae') AND (rt1.c0)))) INNER JOIN rt0 ON TOTAL_CHANGES() WHERE (CASE ((v0.c0) NOT BETWEEN (rt1.c4) AND (rt0.c4))  WHEN ((rt1.c1)+(rt0.c3)) THEN '815722893' END) GROUP BY rt1.c1, rt0.c2, rt0.c1, rt1.c4, rt1.c0, rt0.c3, rt0.c4, v0.c0, rt1.c3, rt0.c0 UNION SELECT rt1.c1, rt0.c2, rt0.c1, rt1.c4, rt1.c0, rt0.c3, rt0.c4, v0.c0, rt1.c3, rt0.c0 FROM v0 LEFT OUTER JOIN rt1 ON ((CAST(NULL AS BLOB))<=(((rt1.c2) BETWEEN (x'13ae') AND (rt1.c0)))) INNER JOIN rt0 ON TOTAL_CHANGES() WHERE ((NOT (CASE ((v0.c0) NOT BETWEEN (rt1.c4) AND (rt0.c4))  WHEN ((rt1.c1)+(rt0.c3)) THEN '815722893' END))) GROUP BY rt1.c1, rt0.c2, rt0.c1, rt1.c4, rt1.c0, rt0.c3, rt0.c4, v0.c0, rt1.c3, rt0.c0 UNION SELECT rt1.c1, rt0.c2, rt0.c1, rt1.c4, rt1.c0, rt0.c3, rt0.c4, v0.c0, rt1.c3, rt0.c0 FROM v0 LEFT OUTER JOIN rt1 ON ((CAST(NULL AS BLOB))<=(((rt1.c2) BETWEEN (x'13ae') AND (rt1.c0)))) INNER JOIN rt0 ON TOTAL_CHANGES() WHERE (((CASE ((v0.c0) NOT BETWEEN (rt1.c4) AND (rt0.c4))  WHEN ((rt1.c1)+(rt0.c3)) THEN '815722893' END) ISNULL)) GROUP BY rt1.c1, rt0.c2, rt0.c1, rt1.c4, rt1.c0, rt0.c3, rt0.c4, v0.c0, rt1.c3, rt0.c0;
SELECT ALL rt1.c1, rt0.c2, rt0.c1, rt1.c4, rt1.c0, rt0.c3, rt0.c4, v0.c0, rt1.c3, rt0.c0 FROM v0 LEFT OUTER JOIN rt1 ON ((CAST(NULL AS BLOB))<=(((rt1.c2) BETWEEN (x'13ae') AND (rt1.c0)))) INNER JOIN rt0 ON TOTAL_CHANGES() GROUP BY rt1.c1, rt0.c2, rt0.c1, rt1.c4, rt1.c0, rt0.c3, rt0.c4, v0.c0, rt1.c3, rt0.c0;
SELECT rt1.c0 FROM rt1, rt0 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, rt0 GROUP BY rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c0 FROM rt1, rt0 GROUP BY rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c0 FROM rt1, rt0 GROUP BY rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c0 FROM rt1, rt0 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, rt0 GROUP BY rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c0 FROM rt1, rt0 GROUP BY rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c0 FROM rt1, rt0 GROUP BY rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c0 FROM rt1, rt0 GROUP BY rt1.c0;
SELECT ALL MIN(((rt0.c1 COLLATE RTRIM) BETWEEN ((((rt0.c4, rt1.c4, rt1.c1)) BETWEEN ((rt0.c1, rt1.c4, rt0.c3)) AND ((rt0.c3, rt0.c3, rt0.c4)))) AND (CASE '172909111'  WHEN rt1.c4 THEN '-1433056952' ELSE rt0.c4 END))) FROM rt1, rt0, v0;
SELECT ALL * FROM rt0, rt1;
SELECT ALL * FROM rt0, rt1 WHERE (((rt1.c3 IN ()) IN ())) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE ((NOT (((rt1.c3 IN ()) IN ())))) UNION ALL SELECT * FROM rt0, rt1 WHERE (((((rt1.c3 IN ()) IN ())) ISNULL));
SELECT ALL * FROM rt0, rt1;
SELECT DISTINCT * FROM rt1 INNER JOIN rt0 ON (('')>=(rt0.c1));
SELECT DISTINCT * FROM rt1 INNER JOIN rt0 ON (('')>=(rt0.c1)) WHERE (((LIKELY(rt1.c2)) NOT NULL)) UNION SELECT DISTINCT * FROM rt1 INNER JOIN rt0 ON (('')>=(rt0.c1)) WHERE ((NOT (((LIKELY(rt1.c2)) NOT NULL)))) UNION SELECT DISTINCT * FROM rt1 INNER JOIN rt0 ON (('')>=(rt0.c1)) WHERE (((((LIKELY(rt1.c2)) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt1 INNER JOIN rt0 ON (('')>=(rt0.c1));
SELECT ALL rt1.c1, rt0.c2, rt0.c3, rt1.c2, rt0.c1, rt1.c4, rt0.c0, rt0.c4, v0.c0, rt1.c3 FROM rt1, rt0, v0 GROUP BY rt1.c1, rt0.c2, rt0.c3, rt1.c2, rt0.c1, rt1.c4, rt0.c0, rt0.c4, v0.c0, rt1.c3;
SELECT ALL rt1.c1, rt0.c2, rt0.c3, rt1.c2, rt0.c1, rt1.c4, rt0.c0, rt0.c4, v0.c0, rt1.c3 FROM rt1, rt0, v0 WHERE (UPPER(rt0.c0)) GROUP BY rt1.c1, rt0.c2, rt0.c3, rt1.c2, rt0.c1, rt1.c4, rt0.c0, rt0.c4, v0.c0, rt1.c3 UNION SELECT rt1.c1, rt0.c2, rt0.c3, rt1.c2, rt0.c1, rt1.c4, rt0.c0, rt0.c4, v0.c0, rt1.c3 FROM rt1, rt0, v0 WHERE ((NOT (UPPER(rt0.c0)))) GROUP BY rt1.c1, rt0.c2, rt0.c3, rt1.c2, rt0.c1, rt1.c4, rt0.c0, rt0.c4, v0.c0, rt1.c3 UNION SELECT ALL rt1.c1, rt0.c2, rt0.c3, rt1.c2, rt0.c1, rt1.c4, rt0.c0, rt0.c4, v0.c0, rt1.c3 FROM rt1, rt0, v0 WHERE (((UPPER(rt0.c0)) ISNULL)) GROUP BY rt1.c1, rt0.c2, rt0.c3, rt1.c2, rt0.c1, rt1.c4, rt0.c0, rt0.c4, v0.c0, rt1.c3;
SELECT ALL rt1.c1, rt0.c2, rt0.c3, rt1.c2, rt0.c1, rt1.c4, rt0.c0, rt0.c4, v0.c0, rt1.c3 FROM rt1, rt0, v0 GROUP BY rt1.c1, rt0.c2, rt0.c3, rt1.c2, rt0.c1, rt1.c4, rt0.c0, rt0.c4, v0.c0, rt1.c3;
SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4 HAVING x'' UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4 HAVING (NOT (x'')) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4 HAVING ((x'') ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4 HAVING x'' UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4 HAVING (NOT (x'')) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4 HAVING ((x'') ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4;
SELECT * FROM rt0, rt1;
SELECT ALL * FROM rt0, rt1 WHERE (((((((rt0.c4)AND(rt1.c4)))AND(rt0.c0))) IS FALSE)) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE ((NOT (((((((rt0.c4)AND(rt1.c4)))AND(rt0.c0))) IS FALSE)))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE (((((((((rt0.c4)AND(rt1.c4)))AND(rt0.c0))) IS FALSE)) ISNULL));
SELECT * FROM rt0, rt1;
SELECT DISTINCT * FROM v0 CROSS JOIN rt1 ON ((rt1.c1)>(v0.c0));
SELECT DISTINCT * FROM v0 CROSS JOIN rt1 ON ((rt1.c1)>(v0.c0)) WHERE (NULL) UNION SELECT DISTINCT * FROM v0 CROSS JOIN rt1 ON ((rt1.c1)>(v0.c0)) WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN rt1 ON ((rt1.c1)>(v0.c0)) WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM v0 CROSS JOIN rt1 ON ((rt1.c1)>(v0.c0));
SELECT ALL rt1.c3, rt0.c4 FROM v0, rt0, rt1 GROUP BY rt1.c3, rt0.c4;
SELECT ALL rt1.c3, rt0.c4 FROM v0, rt0, rt1 WHERE (PRINTF(CAST(rt1.c0 AS INTEGER), ('Q%' IN ()), (rt0.c0 IN ()))) GROUP BY rt1.c3, rt0.c4 UNION SELECT rt1.c3, rt0.c4 FROM v0, rt0, rt1 WHERE ((NOT (PRINTF(CAST(rt1.c0 AS INTEGER), ('Q%' IN ()), (rt0.c0 IN ()))))) GROUP BY rt1.c3, rt0.c4 UNION SELECT ALL rt1.c3, rt0.c4 FROM v0, rt0, rt1 WHERE (((PRINTF(CAST(rt1.c0 AS INTEGER), ('Q%' IN ()), (rt0.c0 IN ()))) ISNULL)) GROUP BY rt1.c3, rt0.c4;
SELECT ALL rt1.c3, rt0.c4 FROM v0, rt0, rt1 GROUP BY rt1.c3, rt0.c4;
SELECT rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0;
SELECT rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0;
SELECT rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0;
SELECT * FROM rt0, rt1;
SELECT ALL * FROM rt0, rt1 WHERE (CAST(((rt1.c4) BETWEEN (rt0.c0) AND (rt1.c3)) AS NUMERIC)) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE ((NOT (CAST(((rt1.c4) BETWEEN (rt0.c0) AND (rt1.c3)) AS NUMERIC)))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE (((CAST(((rt1.c4) BETWEEN (rt0.c0) AND (rt1.c3)) AS NUMERIC)) ISNULL));
SELECT * FROM rt0, rt1;
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM v0, rt0;
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM v0, rt0 WHERE (((((v0.c0) IS TRUE)) BETWEEN (((v0.c0)-(rt0.c1))) AND (((NULL)<<(rt0.c4))))) UNION SELECT DISTINCT rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM v0, rt0 WHERE ((NOT (((((v0.c0) IS TRUE)) BETWEEN (((v0.c0)-(rt0.c1))) AND (((NULL)<<(rt0.c4))))))) UNION SELECT DISTINCT rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM v0, rt0 WHERE (((((((v0.c0) IS TRUE)) BETWEEN (((v0.c0)-(rt0.c1))) AND (((NULL)<<(rt0.c4))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM v0, rt0;
SELECT ALL rt1.c1, rt1.c4, rt1.c3, rt0.c4, rt1.c0, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c1, rt1.c4, rt1.c3, rt0.c4, rt1.c0, rt0.c1;
SELECT rt1.c1, rt1.c4, rt1.c3, rt0.c4, rt1.c0, rt0.c1 FROM rt0, rt1 WHERE (CAST(rt0.c4 COLLATE NOCASE AS BLOB)) GROUP BY rt1.c1, rt1.c4, rt1.c3, rt0.c4, rt1.c0, rt0.c1 UNION SELECT ALL rt1.c1, rt1.c4, rt1.c3, rt0.c4, rt1.c0, rt0.c1 FROM rt0, rt1 WHERE ((NOT (CAST(rt0.c4 COLLATE NOCASE AS BLOB)))) GROUP BY rt1.c1, rt1.c4, rt1.c3, rt0.c4, rt1.c0, rt0.c1 UNION SELECT rt1.c1, rt1.c4, rt1.c3, rt0.c4, rt1.c0, rt0.c1 FROM rt0, rt1 WHERE (((CAST(rt0.c4 COLLATE NOCASE AS BLOB)) ISNULL)) GROUP BY rt1.c1, rt1.c4, rt1.c3, rt0.c4, rt1.c0, rt0.c1;
SELECT ALL rt1.c1, rt1.c4, rt1.c3, rt0.c4, rt1.c0, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c1, rt1.c4, rt1.c3, rt0.c4, rt1.c0, rt0.c1;
SELECT ALL rt1.c0, rt1.c3, rt0.c4, rt1.c4, rt0.c2, rt1.c1 FROM rt1 INNER JOIN rt0 ON ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN (((((rt1.c1)OR(rt0.c4)))AND(rt1.c3))) AND (rt1.c4)) CROSS JOIN v0 ON ((rt0.c4 COLLATE BINARY) NOTNULL) GROUP BY rt1.c0, rt1.c3, rt0.c4, rt1.c4, rt0.c2, rt1.c1;
SELECT rt1.c0, rt1.c3, rt0.c4, rt1.c4, rt0.c2, rt1.c1 FROM rt1 INNER JOIN rt0 ON ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN (((((rt1.c1)OR(rt0.c4)))AND(rt1.c3))) AND (rt1.c4)) CROSS JOIN v0 ON ((rt0.c4 COLLATE BINARY) NOTNULL) GROUP BY rt1.c0, rt1.c3, rt0.c4, rt1.c4, rt0.c2, rt1.c1 HAVING ((((((((MIN(rt0.c2))OR(COUNT(*))))AND(SUBSTR(rt0.c4, rt1.c2))))AND(COUNT(rt1.c0))))OR(CAST(SUM(COUNT(rt0.c4)) AS BLOB))) UNION ALL SELECT ALL rt1.c0, rt1.c3, rt0.c4, rt1.c4, rt0.c2, rt1.c1 FROM rt1 INNER JOIN rt0 ON ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN (((((rt1.c1)OR(rt0.c4)))AND(rt1.c3))) AND (rt1.c4)) CROSS JOIN v0 ON ((rt0.c4 COLLATE BINARY) NOTNULL) GROUP BY rt1.c0, rt1.c3, rt0.c4, rt1.c4, rt0.c2, rt1.c1 HAVING (NOT (((((((((MIN(rt0.c2))OR(COUNT(*))))AND(SUBSTR(rt0.c4, rt1.c2))))AND(COUNT(rt1.c0))))OR(CAST(SUM(COUNT(rt0.c4)) AS BLOB))))) UNION ALL SELECT ALL rt1.c0, rt1.c3, rt0.c4, rt1.c4, rt0.c2, rt1.c1 FROM rt1 INNER JOIN rt0 ON ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN (((((rt1.c1)OR(rt0.c4)))AND(rt1.c3))) AND (rt1.c4)) CROSS JOIN v0 ON ((rt0.c4 COLLATE BINARY) NOTNULL) GROUP BY rt1.c0, rt1.c3, rt0.c4, rt1.c4, rt0.c2, rt1.c1 HAVING ((((((((((MIN(rt0.c2))OR(COUNT(*))))AND(SUBSTR(rt0.c4, rt1.c2))))AND(COUNT(rt1.c0))))OR(CAST(SUM(COUNT(rt0.c4)) AS BLOB)))) ISNULL);
SELECT ALL rt1.c4, rt1.c2, rt0.c1, rt0.c0, rt1.c1, rt0.c2 FROM rt1, rt0;
SELECT rt1.c4, rt1.c2, rt0.c1, rt0.c0, rt1.c1, rt0.c2 FROM rt1, rt0 WHERE (json_insert(NULL COLLATE BINARY, (rt1.c1 IN (rt1.c3)), (rt1.c0 IN ()))) ORDER BY ((((((rt0.c4)OR(rt1.c0)))OR(rt0.c3))) NOT BETWEEN (((rt1.c3)IS NOT(rt0.c3))) AND (x'')), (((rt0.c4)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((((rt1.c0)||(rt0.c3)))));
SELECT ALL rt1.c4, rt1.c2, rt0.c1, rt0.c0, rt1.c1, rt0.c2 FROM rt1, rt0 WHERE ((NOT (json_insert(NULL COLLATE BINARY, (rt1.c1 IN (rt1.c3)), (rt1.c0 IN ()))))) ORDER BY ((((((rt0.c4)OR(rt1.c0)))OR(rt0.c3))) NOT BETWEEN (((rt1.c3)IS NOT(rt0.c3))) AND (x'')), (((rt0.c4)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((((rt1.c0)||(rt0.c3)))));
SELECT rt1.c4, rt1.c2, rt0.c1, rt0.c0, rt1.c1, rt0.c2 FROM rt1, rt0 WHERE (((json_insert(NULL COLLATE BINARY, (rt1.c1 IN (rt1.c3)), (rt1.c0 IN ()))) ISNULL)) ORDER BY ((((((rt0.c4)OR(rt1.c0)))OR(rt0.c3))) NOT BETWEEN (((rt1.c3)IS NOT(rt0.c3))) AND (x'')), (((rt0.c4)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((((rt1.c0)||(rt0.c3)))));
SELECT ALL rt1.c4, rt1.c2, rt0.c1, rt0.c0, rt1.c1, rt0.c2 FROM rt1, rt0;
SELECT DISTINCT * FROM v0, rt1;
SELECT DISTINCT * FROM v0, rt1 WHERE ((((NULL)OR(v0.c0)) IN ())) UNION SELECT DISTINCT * FROM v0, rt1 WHERE ((NOT ((((NULL)OR(v0.c0)) IN ())))) UNION SELECT DISTINCT * FROM v0, rt1 WHERE ((((((NULL)OR(v0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM v0, rt1;
SELECT rt0.c4, rt0.c3, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c4, rt0.c3, rt1.c2;
SELECT ALL rt0.c4, rt0.c3, rt1.c2 FROM rt0, rt1 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt1.c2 UNION SELECT rt0.c4, rt0.c3, rt1.c2 FROM rt0, rt1 WHERE ((NOT (((rt0.c0) ISNULL)))) GROUP BY rt0.c4, rt0.c3, rt1.c2 UNION SELECT ALL rt0.c4, rt0.c3, rt1.c2 FROM rt0, rt1 WHERE (((((rt0.c0) ISNULL)) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt1.c2;
SELECT rt0.c4, rt0.c3, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c4, rt0.c3, rt1.c2;
SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2) NOT NULL))/((('(')/(rt1.c3)))) RIGHT OUTER JOIN v0 ON (((CASE rt0.c0  WHEN rt1.c2 THEN rt0.c0 ELSE rt1.c2 END))<>((0.3839454374673623))) GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2) NOT NULL))/((('(')/(rt1.c3)))) RIGHT OUTER JOIN v0 ON (((CASE rt0.c0  WHEN rt1.c2 THEN rt0.c0 ELSE rt1.c2 END))!=((0.3839454374673623))) GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1 HAVING MIN(CAST(AVG(MIN(rt1.c0)) AS BLOB)) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2) NOT NULL))/((('(')/(rt1.c3)))) RIGHT OUTER JOIN v0 ON (((CASE rt0.c0  WHEN rt1.c2 THEN rt0.c0 ELSE rt1.c2 END))!=((0.3839454374673623))) GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1 HAVING (NOT (MIN(CAST(AVG(MIN(rt1.c0)) AS BLOB)))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2) NOT NULL))/((('(')/(rt1.c3)))) RIGHT OUTER JOIN v0 ON (((CASE rt0.c0  WHEN rt1.c2 THEN rt0.c0 ELSE rt1.c2 END))!=((0.3839454374673623))) GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1 HAVING ((MIN(CAST(AVG(MIN(rt1.c0)) AS BLOB))) ISNULL);
SELECT * FROM rt0, rt1;
SELECT * FROM rt0, rt1 WHERE ((- ((rt0.c0 IN (rt0.c0))))) UNION ALL SELECT * FROM rt0, rt1 WHERE ((NOT ((- ((rt0.c0 IN (rt0.c0))))))) UNION ALL SELECT * FROM rt0, rt1 WHERE ((((- ((rt0.c0 IN (rt0.c0))))) ISNULL));
SELECT * FROM rt0, rt1;
SELECT DISTINCT v0.c0, rt0.c2, rt0.c1, rt1.c4, rt1.c1 FROM v0, rt0, rt1;
SELECT DISTINCT v0.c0, rt0.c2, rt0.c1, rt1.c4, rt1.c1 FROM v0, rt0, rt1 WHERE (LIKE(CAST(rt1.c0 AS NUMERIC), CASE WHEN rt1.c3 THEN rt0.c4 WHEN rt1.c4 THEN rt0.c4 WHEN v0.c0 THEN rt0.c2 END, 'P')) UNION SELECT DISTINCT v0.c0, rt0.c2, rt0.c1, rt1.c4, rt1.c1 FROM v0, rt0, rt1 WHERE ((NOT (LIKE(CAST(rt1.c0 AS NUMERIC), CASE WHEN rt1.c3 THEN rt0.c4 WHEN rt1.c4 THEN rt0.c4 WHEN v0.c0 THEN rt0.c2 END, 'P')))) UNION SELECT DISTINCT v0.c0, rt0.c2, rt0.c1, rt1.c4, rt1.c1 FROM v0, rt0, rt1 WHERE (((LIKE(CAST(rt1.c0 AS NUMERIC), CASE WHEN rt1.c3 THEN rt0.c4 WHEN rt1.c4 THEN rt0.c4 WHEN v0.c0 THEN rt0.c2 END, 'P')) ISNULL));
SELECT DISTINCT v0.c0, rt0.c2, rt0.c1, rt1.c4, rt1.c1 FROM v0, rt0, rt1;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 WHERE ((- ((+ (rt1.c0))))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 WHERE ((NOT ((- ((+ (rt1.c0))))))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1 WHERE ((((- ((+ (rt1.c0))))) ISNULL)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0, rt0.c1, rt1.c4, rt0.c0 FROM v0, rt1, rt0 GROUP BY rt1.c0, rt0.c1, rt1.c4, rt0.c0;
SELECT ALL rt1.c0, rt0.c1, rt1.c4, rt0.c0 FROM v0, rt1, rt0 GROUP BY rt1.c0, rt0.c1, rt1.c4, rt0.c0 HAVING NULL UNION ALL SELECT rt1.c0, rt0.c1, rt1.c4, rt0.c0 FROM v0, rt1, rt0 GROUP BY rt1.c0, rt0.c1, rt1.c4, rt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt1.c0, rt0.c1, rt1.c4, rt0.c0 FROM v0, rt1, rt0 GROUP BY rt1.c0, rt0.c1, rt1.c4, rt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL rt1.c0, rt0.c1, rt1.c4, rt0.c0 FROM v0, rt1, rt0 GROUP BY rt1.c0, rt0.c1, rt1.c4, rt0.c0;
SELECT ALL rt1.c0, rt0.c1, rt1.c4, rt0.c0 FROM v0, rt1, rt0 GROUP BY rt1.c0, rt0.c1, rt1.c4, rt0.c0 HAVING NULL UNION ALL SELECT rt1.c0, rt0.c1, rt1.c4, rt0.c0 FROM v0, rt1, rt0 GROUP BY rt1.c0, rt0.c1, rt1.c4, rt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt1.c0, rt0.c1, rt1.c4, rt0.c0 FROM v0, rt1, rt0 GROUP BY rt1.c0, rt0.c1, rt1.c4, rt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL rt1.c0, rt0.c1, rt1.c4, rt0.c0 FROM v0, rt1, rt0 GROUP BY rt1.c0, rt0.c1, rt1.c4, rt0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((~ ((- (v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((~ ((- (v0.c0))))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((~ ((- (v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt1.c2, rt1.c3, rt1.c4, rt1.c0, v0.c0 FROM v0, rt1;
SELECT DISTINCT rt1.c2, rt1.c3, rt1.c4, rt1.c0, v0.c0 FROM v0 NOT INDEXED, rt1 WHERE (rt1.c0) UNION SELECT DISTINCT rt1.c2, rt1.c3, rt1.c4, rt1.c0, v0.c0 FROM v0, rt1 WHERE ((NOT (rt1.c0))) UNION SELECT DISTINCT rt1.c2, rt1.c3, rt1.c4, rt1.c0, v0.c0 FROM v0, rt1 WHERE (((rt1.c0) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c3, rt1.c4, rt1.c0, v0.c0 FROM v0, rt1;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, v0.c0, rt1.c4, rt1.c0, rt0.c4, rt1.c1, rt1.c2, rt0.c3, rt1.c3 FROM rt0, v0, rt1 GROUP BY rt0.c0, rt0.c1, rt0.c2, v0.c0, rt1.c4, rt1.c0, rt0.c4, rt1.c1, rt1.c2, rt0.c3, rt1.c3;
SELECT rt0.c0, rt0.c1, rt0.c2, v0.c0, rt1.c4, rt1.c0, rt0.c4, rt1.c1, rt1.c2, rt0.c3, rt1.c3 FROM rt0, v0, rt1 WHERE (((rt0.c3 COLLATE NOCASE) NOTNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2, v0.c0, rt1.c4, rt1.c0, rt0.c4, rt1.c1, rt1.c2, rt0.c3, rt1.c3 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2, v0.c0, rt1.c4, rt1.c0, rt0.c4, rt1.c1, rt1.c2, rt0.c3, rt1.c3 FROM rt0, v0, rt1 WHERE ((NOT (((rt0.c3 COLLATE NOCASE) NOTNULL)))) GROUP BY rt0.c0, rt0.c1, rt0.c2, v0.c0, rt1.c4, rt1.c0, rt0.c4, rt1.c1, rt1.c2, rt0.c3, rt1.c3 UNION SELECT rt0.c0, rt0.c1, rt0.c2, v0.c0, rt1.c4, rt1.c0, rt0.c4, rt1.c1, rt1.c2, rt0.c3, rt1.c3 FROM rt0, v0, rt1 WHERE (((((rt0.c3 COLLATE NOCASE) NOTNULL)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2, v0.c0, rt1.c4, rt1.c0, rt0.c4, rt1.c1, rt1.c2, rt0.c3, rt1.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, v0.c0, rt1.c4, rt1.c0, rt0.c4, rt1.c1, rt1.c2, rt0.c3, rt1.c3 FROM rt0, v0, rt1 GROUP BY rt0.c0, rt0.c1, rt0.c2, v0.c0, rt1.c4, rt1.c0, rt0.c4, rt1.c1, rt1.c2, rt0.c3, rt1.c3;
SELECT rt1.c4, rt1.c2, rt1.c0, v0.c0, rt1.c1 FROM rt1, v0 GROUP BY rt1.c4, rt1.c2, rt1.c0, v0.c0, rt1.c1;
SELECT ALL rt1.c4, rt1.c2, rt1.c0, v0.c0, rt1.c1 FROM rt1, v0 GROUP BY rt1.c4, rt1.c2, rt1.c0, v0.c0, rt1.c1 HAVING SUM(GROUP_CONCAT(rt1.c1)) UNION ALL SELECT ALL rt1.c4, rt1.c2, rt1.c0, v0.c0, rt1.c1 FROM rt1, v0 GROUP BY rt1.c4, rt1.c2, rt1.c0, v0.c0, rt1.c1 HAVING (NOT (SUM(GROUP_CONCAT(rt1.c1)))) UNION ALL SELECT rt1.c4, rt1.c2, rt1.c0, v0.c0, rt1.c1 FROM rt1, v0 GROUP BY rt1.c4, rt1.c2, rt1.c0, v0.c0, rt1.c1 HAVING ((SUM(GROUP_CONCAT(rt1.c1))) ISNULL);
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END COLLATE NOCASE) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END COLLATE NOCASE))) UNION ALL SELECT * FROM v0, rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END COLLATE NOCASE) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE (CASE (rt1.c4 IN ())  WHEN 0.4170286076028773 THEN rt1.c2 ELSE (- (rt0.c3)) END) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT (CASE (rt1.c4 IN ())  WHEN 0.4170286076028773 THEN rt1.c2 ELSE (- (rt0.c3)) END))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE (((CASE (rt1.c4 IN ())  WHEN 0.4170286076028773 THEN rt1.c2 ELSE (- (rt0.c3)) END) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT rt1.c2, rt0.c4, rt0.c3, rt1.c4, rt1.c0, rt0.c1, rt0.c0, rt1.c3 FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c0 IN ()), ((rt1.c3)AND(rt1.c0)), ((rt1.c2)/(rt1.c4)), ((rt0.c0)OR(rt1.c1)), CAST(1.763276152E9 AS INTEGER)))<(((~ (rt0.c4)), CASE -1.382994289E9  WHEN NULL THEN rt1.c2 WHEN rt1.c0 THEN x'' WHEN rt1.c0 THEN rt0.c0 END, CAST(rt1.c0 AS NUMERIC), rt1.c1, (rt0.c2 IN ())))) GROUP BY rt1.c2, rt0.c4, rt0.c3, rt1.c4, rt1.c0, rt0.c1, rt0.c0, rt1.c3;
SELECT rt1.c2, rt0.c4, rt0.c3, rt1.c4, rt1.c0, rt0.c1, rt0.c0, rt1.c3 FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c0 IN ()), ((rt1.c3)AND(rt1.c0)), ((rt1.c2)/(rt1.c4)), ((rt0.c0)OR(rt1.c1)), CAST(1.763276152E9 AS INTEGER)))<(((~ (rt0.c4)), CASE -1.382994289E9  WHEN NULL THEN rt1.c2 WHEN rt1.c0 THEN x'' WHEN rt1.c0 THEN rt0.c0 END, CAST(rt1.c0 AS NUMERIC), rt1.c1, (rt0.c2 IN ())))) WHERE (rt0.c1) GROUP BY rt1.c2, rt0.c4, rt0.c3, rt1.c4, rt1.c0, rt0.c1, rt0.c0, rt1.c3 UNION SELECT ALL rt1.c2, rt0.c4, rt0.c3, rt1.c4, rt1.c0, rt0.c1, rt0.c0, rt1.c3 FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c0 IN ()), ((rt1.c3)AND(rt1.c0)), ((rt1.c2)/(rt1.c4)), ((rt0.c0)OR(rt1.c1)), CAST(1.763276152E9 AS INTEGER)))<(((~ (rt0.c4)), CASE -1.382994289E9  WHEN NULL THEN rt1.c2 WHEN rt1.c0 THEN x'' WHEN rt1.c0 THEN rt0.c0 END, CAST(rt1.c0 AS NUMERIC), rt1.c1, (rt0.c2 IN ())))) WHERE ((NOT (rt0.c1))) GROUP BY rt1.c2, rt0.c4, rt0.c3, rt1.c4, rt1.c0, rt0.c1, rt0.c0, rt1.c3 UNION SELECT ALL rt1.c2, rt0.c4, rt0.c3, rt1.c4, rt1.c0, rt0.c1, rt0.c0, rt1.c3 FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c0 IN ()), ((rt1.c3)AND(rt1.c0)), ((rt1.c2)/(rt1.c4)), ((rt0.c0)OR(rt1.c1)), CAST(1.763276152E9 AS INTEGER)))<(((~ (rt0.c4)), CASE -1.382994289E9  WHEN NULL THEN rt1.c2 WHEN rt1.c0 THEN x'' WHEN rt1.c0 THEN rt0.c0 END, CAST(rt1.c0 AS NUMERIC), rt1.c1, (rt0.c2 IN ())))) WHERE (((rt0.c1) ISNULL)) GROUP BY rt1.c2, rt0.c4, rt0.c3, rt1.c4, rt1.c0, rt0.c1, rt0.c0, rt1.c3;
SELECT rt1.c2, rt0.c4, rt0.c3, rt1.c4, rt1.c0, rt0.c1, rt0.c0, rt1.c3 FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c0 IN ()), ((rt1.c3)AND(rt1.c0)), ((rt1.c2)/(rt1.c4)), ((rt0.c0)OR(rt1.c1)), CAST(1.763276152E9 AS INTEGER)))<(((~ (rt0.c4)), CASE -1.382994289E9  WHEN NULL THEN rt1.c2 WHEN rt1.c0 THEN x'' WHEN rt1.c0 THEN rt0.c0 END, CAST(rt1.c0 AS NUMERIC), rt1.c1, (rt0.c2 IN ())))) GROUP BY rt1.c2, rt0.c4, rt0.c3, rt1.c4, rt1.c0, rt0.c1, rt0.c0, rt1.c3;
SELECT ALL rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2;
SELECT ALL rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2 HAVING MIN(GROUP_CONCAT(COUNT(GROUP_CONCAT(rt0.c3)))) COLLATE RTRIM UNION ALL SELECT rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2 HAVING (NOT (MIN(GROUP_CONCAT(COUNT(GROUP_CONCAT(rt0.c3)))) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2 HAVING ((MIN(GROUP_CONCAT(COUNT(GROUP_CONCAT(rt0.c3)))) COLLATE RTRIM) ISNULL);
SELECT ALL * FROM rt0, v0, rt1;
SELECT ALL * FROM rt0, v0, rt1 WHERE (CASE WHEN rt0.c1 THEN ((rt1.c2)IS NOT(rt1.c0)) WHEN LIKELY(rt1.c4) THEN ((0.3595904155628932)||(rt0.c3)) WHEN rt1.c3 THEN CASE WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c4 WHEN rt1.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c2 END END) UNION ALL SELECT ALL * FROM rt0, v0, rt1 WHERE ((NOT (CASE WHEN rt0.c1 THEN ((rt1.c2)IS NOT(rt1.c0)) WHEN LIKELY(rt1.c4) THEN ((0.3595904155628932)||(rt0.c3)) WHEN rt1.c3 THEN CASE WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c4 WHEN rt1.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c2 END END))) UNION ALL SELECT * FROM rt0, v0, rt1 WHERE (((CASE WHEN rt0.c1 THEN ((rt1.c2)IS NOT(rt1.c0)) WHEN LIKELY(rt1.c4) THEN ((0.3595904155628932)||(rt0.c3)) WHEN rt1.c3 THEN CASE WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c4 WHEN rt1.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c2 END END) ISNULL));
SELECT ALL * FROM rt0, v0, rt1;
SELECT DISTINCT rt1.c4 FROM rt1, v0;
SELECT DISTINCT rt1.c4 FROM rt1, v0 WHERE (CAST(((((((((v0.c0)AND(NULL)))OR(rt1.c0)))AND(rt1.c3)))OR(rt1.c3)) AS BLOB)) UNION SELECT DISTINCT rt1.c4 FROM rt1, v0 WHERE ((NOT (CAST(((((((((v0.c0)AND(NULL)))OR(rt1.c0)))AND(rt1.c3)))OR(rt1.c3)) AS BLOB)))) UNION SELECT DISTINCT rt1.c4 FROM rt1, v0 WHERE (((CAST(((((((((v0.c0)AND(NULL)))OR(rt1.c0)))AND(rt1.c3)))OR(rt1.c3)) AS BLOB)) ISNULL));
SELECT DISTINCT rt1.c4 FROM rt1, v0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM v0, rt0 WHERE (CASE WHEN TRIM(DISTINCT rt0.c1, rt0.c0) THEN (NOT (rt0.c0)) WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c3) NOT NULL) WHEN (rt0.c1 IN (rt0.c3)) THEN rt0.c2 END) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM v0, rt0 WHERE ((NOT (CASE WHEN TRIM(DISTINCT rt0.c1, rt0.c0) THEN (NOT (rt0.c0)) WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c3) NOT NULL) WHEN (rt0.c1 IN (rt0.c3)) THEN rt0.c2 END))) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM v0, rt0 WHERE (((CASE WHEN TRIM(DISTINCT rt0.c1, rt0.c0) THEN (NOT (rt0.c0)) WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c3) NOT NULL) WHEN (rt0.c1 IN (rt0.c3)) THEN rt0.c2 END) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (- (CAST(rt0.c2 AS BLOB))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT ((- (CAST(rt0.c2 AS BLOB))))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (((- (CAST(rt0.c2 AS BLOB)))) ISNULL);
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (- (CAST(rt0.c2 AS BLOB))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT ((- (CAST(rt0.c2 AS BLOB))))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (((- (CAST(rt0.c2 AS BLOB)))) ISNULL);
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3, rt1.c4 FROM v0, rt1, rt0;
SELECT ALL rt0.c3, rt1.c4 FROM v0, rt1, rt0 WHERE (SQLITE_VERSION()) UNION ALL SELECT ALL rt0.c3, rt1.c4 FROM v0, rt1, rt0 WHERE ((NOT (SQLITE_VERSION()))) UNION ALL SELECT rt0.c3, rt1.c4 FROM v0, rt1, rt0 WHERE (((SQLITE_VERSION()) ISNULL));
SELECT rt0.c3, rt1.c4 FROM v0, rt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c4 AS NUMERIC))*(DATE(rt0.c3, rt0.c3, rt0.c0)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CAST(rt0.c4 AS NUMERIC))*(DATE(rt0.c3, rt0.c3, rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CAST(rt0.c4 AS NUMERIC))*(DATE(rt0.c3, rt0.c3, rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((((- (v0.c0)))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(v0.c0 COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((((- (v0.c0)))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(v0.c0 COLLATE NOCASE))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((((- (v0.c0)))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(v0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(((COUNT(v0.c0)) IS FALSE)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(((COUNT(v0.c0)) IS FALSE)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(((COUNT(v0.c0)) IS FALSE))) ISNULL);
SELECT rt0.c3, rt0.c2, rt0.c4 FROM rt0;
SELECT ALL rt0.c3, rt0.c2, rt0.c4 FROM rt0 WHERE ((((rt0.c2 IN ()))<<(rt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT ((((rt0.c2 IN ()))<<(rt0.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c4 FROM rt0 WHERE ((((((rt0.c2 IN ()))<<(rt0.c0 COLLATE NOCASE))) ISNULL));
SELECT rt0.c3, rt0.c2, rt0.c4 FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((NOT (v0.c0)))>>(v0.c0 COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((NOT (v0.c0)))>>(v0.c0 COLLATE RTRIM))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((NOT (v0.c0)))>>(v0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING GROUP_CONCAT(TOTAL(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(TOTAL(v0.c0))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0 IN ()))IS NOT(((((v0.c0)OR('251649854')))AND(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 IN ()))IS NOT(((((v0.c0)OR('251649854')))AND(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((((v0.c0 IN ()))IS NOT(((((v0.c0)OR('251649854')))AND(v0.c0))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0 WHERE (((((rt0.c4) NOT BETWEEN (rt1.c3) AND (rt0.c3)))&((NOT (rt0.c1))))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((NOT (((((rt0.c4) NOT BETWEEN (rt1.c3) AND (rt0.c3)))&((NOT (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE (((((((rt0.c4) NOT BETWEEN (rt1.c3) AND (rt0.c3)))&((NOT (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt1, rt0;
SELECT rt0.c3 FROM rt0 INNER JOIN v0 ON ((((rt0.c4)<(rt0.c3))) NOT BETWEEN ((((rt0.c2, rt0.c0, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c0)) AND ((rt0.c4, NULL, rt0.c2)))) AND (rt0.c1 COLLATE NOCASE)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 INNER JOIN v0 ON ((((rt0.c4)<(rt0.c3))) NOT BETWEEN ((((rt0.c2, rt0.c0, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c0)) AND ((rt0.c4, NULL, rt0.c2)))) AND (rt0.c1 COLLATE NOCASE)) WHERE ((+ (v0.c0))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 INNER JOIN v0 ON ((((rt0.c4)<(rt0.c3))) NOT BETWEEN ((((rt0.c2, rt0.c0, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c0)) AND ((rt0.c4, NULL, rt0.c2)))) AND (rt0.c1 COLLATE NOCASE)) WHERE ((NOT ((+ (v0.c0))))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0 INNER JOIN v0 ON ((((rt0.c4)<(rt0.c3))) NOT BETWEEN ((((rt0.c2, rt0.c0, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c0)) AND ((rt0.c4, NULL, rt0.c2)))) AND (rt0.c1 COLLATE NOCASE)) WHERE ((((+ (v0.c0))) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 INNER JOIN v0 ON ((((rt0.c4)<(rt0.c3))) NOT BETWEEN ((((rt0.c2, rt0.c0, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c0)) AND ((rt0.c4, NULL, rt0.c2)))) AND (rt0.c1 COLLATE NOCASE)) GROUP BY rt0.c3;
SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (((v0.c0 IN (rt0.c4)) IN ())) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (((v0.c0 IN (rt0.c4)) IN ())))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((((v0.c0 IN (rt0.c4)) IN ())) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN rt0 ON ((((- (rt0.c4))))<=((((rt0.c4) ISNULL))));
SELECT DISTINCT * FROM rt1 NOT INDEXED LEFT OUTER JOIN rt0 ON ((((- (rt0.c4))))<=((((rt0.c4) ISNULL)))) WHERE (CASE WHEN ((((rt1.c1)OR(rt1.c1)))AND(rt0.c4)) THEN ((621033535)&(rt1.c1)) WHEN (rt1.c2 IN ()) THEN ((NULL)&(rt0.c2)) WHEN (((rt1.c2, rt0.c0, rt1.c1)) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((rt0.c0, rt1.c1, rt1.c2))) THEN (((rt1.c2)) BETWEEN ((rt1.c0)) AND (('1965760582'))) WHEN ((((((((rt1.c3)OR(rt1.c1)))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c3)) THEN (~ (rt1.c0)) WHEN (((((((('-685136408')OR(rt1.c4)))AND(rt0.c3)))AND(rt0.c2)))AND(rt1.c3)) THEN (rt0.c2 IN ()) END) UNION SELECT DISTINCT * FROM rt1 NOT INDEXED LEFT OUTER JOIN rt0 ON ((((- (rt0.c4))))<=((((rt0.c4) ISNULL)))) WHERE ((NOT (CASE WHEN ((((rt1.c1)OR(rt1.c1)))AND(rt0.c4)) THEN ((621033535)&(rt1.c1)) WHEN (rt1.c2 IN ()) THEN ((NULL)&(rt0.c2)) WHEN (((rt1.c2, rt0.c0, rt1.c1)) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((rt0.c0, rt1.c1, rt1.c2))) THEN (((rt1.c2)) BETWEEN ((rt1.c0)) AND (('1965760582'))) WHEN ((((((((rt1.c3)OR(rt1.c1)))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c3)) THEN (~ (rt1.c0)) WHEN (((((((('-685136408')OR(rt1.c4)))AND(rt0.c3)))AND(rt0.c2)))AND(rt1.c3)) THEN (rt0.c2 IN ()) END))) UNION SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN rt0 ON ((((- (rt0.c4))))<=((((rt0.c4) ISNULL)))) WHERE (((CASE WHEN ((((rt1.c1)OR(rt1.c1)))AND(rt0.c4)) THEN ((621033535)&(rt1.c1)) WHEN (rt1.c2 IN ()) THEN ((NULL)&(rt0.c2)) WHEN (((rt1.c2, rt0.c0, rt1.c1)) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((rt0.c0, rt1.c1, rt1.c2))) THEN (((rt1.c2)) BETWEEN ((rt1.c0)) AND (('1965760582'))) WHEN ((((((((rt1.c3)OR(rt1.c1)))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c3)) THEN (~ (rt1.c0)) WHEN (((((((('-685136408')OR(rt1.c4)))AND(rt0.c3)))AND(rt0.c2)))AND(rt1.c3)) THEN (rt0.c2 IN ()) END) ISNULL));
SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN rt0 ON ((((- (rt0.c4))))<=((((rt0.c4) ISNULL))));
SELECT rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c0)==(rt0.c3))) NOT NULL) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c4;
SELECT rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c0)==(rt0.c3))) NOT NULL) WHERE ((((((((('*e')OR((~ (rt0.c2)))))OR(UPPER(rt0.c0))))AND((('') ISNULL))))AND(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c4 UNION SELECT rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c0)=(rt0.c3))) NOT NULL) WHERE ((NOT ((((((((('*e')OR((~ (rt0.c2)))))OR(UPPER(rt0.c0))))AND((('') ISNULL))))AND(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1))))))) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c0)=(rt0.c3))) NOT NULL) WHERE ((((((((((('*e')OR((~ (rt0.c2)))))OR(UPPER(rt0.c0))))AND((('') ISNULL))))AND(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c4;
SELECT rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c0)==(rt0.c3))) NOT NULL) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c4;
SELECT ALL rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c3, rt1.c1;
SELECT rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c3, rt1.c1 HAVING (~ (((((SUM(rt1.c3))AND(rt1.c1)))AND(TOTAL(rt1.c3))))) UNION ALL SELECT ALL rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c3, rt1.c1 HAVING (NOT ((~ (((((SUM(rt1.c3))AND(rt1.c1)))AND(TOTAL(rt1.c3))))))) UNION ALL SELECT rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c3, rt1.c1 HAVING (((~ (((((SUM(rt1.c3))AND(rt1.c1)))AND(TOTAL(rt1.c3)))))) ISNULL);
SELECT ALL rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c3, rt1.c1;
SELECT rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c3, rt1.c1 HAVING (~ (((((SUM(rt1.c3))AND(rt1.c1)))AND(TOTAL(rt1.c3))))) UNION ALL SELECT ALL rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c3, rt1.c1 HAVING (NOT ((~ (((((SUM(rt1.c3))AND(rt1.c1)))AND(TOTAL(rt1.c3))))))) UNION ALL SELECT rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c3, rt1.c1 HAVING (((~ (((((SUM(rt1.c3))AND(rt1.c1)))AND(TOTAL(rt1.c3)))))) ISNULL);
SELECT ALL rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c3, rt1.c1;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) ISNULL)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) ISNULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) ISNULL)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt1.c4, v0.c0, rt1.c0 FROM rt1 LEFT OUTER JOIN v0 ON ((((((((((v0.c0)AND(rt1.c3)))AND(rt1.c0)))AND(v0.c0)))OR(rt1.c2))) NOTNULL);
SELECT DISTINCT rt1.c4, v0.c0, rt1.c0 FROM rt1 LEFT OUTER JOIN v0 ON ((((((((((v0.c0)AND(rt1.c3)))AND(rt1.c0)))AND(v0.c0)))OR(rt1.c2))) NOTNULL) WHERE (((((rt1.c0))!=((rt1.c3))) IN ())) UNION SELECT DISTINCT rt1.c4, v0.c0, rt1.c0 FROM rt1 LEFT OUTER JOIN v0 ON ((((((((((v0.c0)AND(rt1.c3)))AND(rt1.c0)))AND(v0.c0)))OR(rt1.c2))) NOTNULL) WHERE ((NOT (((((rt1.c0))<>((rt1.c3))) IN ())))) UNION SELECT DISTINCT rt1.c4, v0.c0, rt1.c0 FROM rt1 LEFT OUTER JOIN v0 ON ((((((((((v0.c0)AND(rt1.c3)))AND(rt1.c0)))AND(v0.c0)))OR(rt1.c2))) NOTNULL) WHERE (((((((rt1.c0))!=((rt1.c3))) IN ())) ISNULL));
SELECT DISTINCT rt1.c4, v0.c0, rt1.c0 FROM rt1 LEFT OUTER JOIN v0 ON ((((((((((v0.c0)AND(rt1.c3)))AND(rt1.c0)))AND(v0.c0)))OR(rt1.c2))) NOTNULL);
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE (((((rt1.c2)OR(((((((((((((x'4fd77fc8')AND(rt1.c2)))AND(rt1.c3)))OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c2)))))OR(rt1.c4))) GROUP BY rt1.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (((((rt1.c2)OR(((((((((((((x'4fd77fc8')AND(rt1.c2)))AND(rt1.c3)))OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c2)))))OR(rt1.c4))))) GROUP BY rt1.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE (((((((rt1.c2)OR(((((((((((((x'4fd77fc8')AND(rt1.c2)))AND(rt1.c3)))OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c2)))))OR(rt1.c4))) ISNULL)) GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1 HAVING SUM(((((rt0.c4)OR(rt0.c4)))AND(MIN(SUM(rt0.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1 HAVING (NOT (SUM(((((rt0.c4)OR(rt0.c4)))AND(MIN(SUM(rt0.c1))))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1 HAVING ((SUM(((((rt0.c4)OR(rt0.c4)))AND(MIN(SUM(rt0.c1)))))) ISNULL);
SELECT v0.c0, rt0.c0, rt1.c1, rt0.c1 FROM rt0, rt1, v0;
SELECT ALL v0.c0, rt0.c0, rt1.c1, rt0.c1 FROM rt0, rt1, v0 WHERE (rt0.c2) UNION ALL SELECT v0.c0, rt0.c0, rt1.c1, rt0.c1 FROM rt0, rt1, v0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT v0.c0, rt0.c0, rt1.c1, rt0.c1 FROM rt0, rt1, v0 WHERE (((rt0.c2) ISNULL));
SELECT v0.c0, rt0.c0, rt1.c1, rt0.c1 FROM rt0, rt1, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN (((+ (rt0.c0)))) AND ((((rt0.c1) IS FALSE))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2)) BETWEEN (((+ (rt0.c0)))) AND ((((rt0.c1) IS FALSE))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2)) BETWEEN (((+ (rt0.c0)))) AND ((((rt0.c1) IS FALSE))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt1.c0, rt1.c1, rt0.c4, rt0.c1, rt0.c2, rt1.c2, rt0.c3 FROM rt0, rt1 GROUP BY rt1.c0, rt1.c1, rt0.c4, rt0.c1, rt0.c2, rt1.c2, rt0.c3;
SELECT ALL rt1.c0, rt1.c1, rt0.c4, rt0.c1, rt0.c2, rt1.c2, rt0.c3 FROM rt0, rt1 WHERE (((((rt1.c1)IS(rt1.c4))) BETWEEN (rt1.c3 COLLATE RTRIM) AND (((1.999902087E9)+(rt1.c3))))) GROUP BY rt1.c0, rt1.c1, rt0.c4, rt0.c1, rt0.c2, rt1.c2, rt0.c3 UNION SELECT rt1.c0, rt1.c1, rt0.c4, rt0.c1, rt0.c2, rt1.c2, rt0.c3 FROM rt0, rt1 WHERE ((NOT (((((rt1.c1)IS(rt1.c4))) BETWEEN (rt1.c3 COLLATE RTRIM) AND (((1.999902087E9)+(rt1.c3))))))) GROUP BY rt1.c0, rt1.c1, rt0.c4, rt0.c1, rt0.c2, rt1.c2, rt0.c3 UNION SELECT rt1.c0, rt1.c1, rt0.c4, rt0.c1, rt0.c2, rt1.c2, rt0.c3 FROM rt0, rt1 WHERE (((((((rt1.c1)IS(rt1.c4))) BETWEEN (rt1.c3 COLLATE RTRIM) AND (((1.999902087E9)+(rt1.c3))))) ISNULL)) GROUP BY rt1.c0, rt1.c1, rt0.c4, rt0.c1, rt0.c2, rt1.c2, rt0.c3;
SELECT ALL rt1.c0, rt1.c1, rt0.c4, rt0.c1, rt0.c2, rt1.c2, rt0.c3 FROM rt0, rt1 GROUP BY rt1.c0, rt1.c1, rt0.c4, rt0.c1, rt0.c2, rt1.c2, rt0.c3;
SELECT ALL v0.c0, rt0.c1, rt1.c3, rt0.c0, rt1.c4, rt1.c2, rt1.c0 FROM v0, rt0, rt1 GROUP BY v0.c0, rt0.c1, rt1.c3, rt0.c0, rt1.c4, rt1.c2, rt1.c0;
SELECT ALL v0.c0, rt0.c1, rt1.c3, rt0.c0, rt1.c4, rt1.c2, rt1.c0 FROM v0, rt0, rt1 GROUP BY v0.c0, rt0.c1, rt1.c3, rt0.c0, rt1.c4, rt1.c2, rt1.c0 HAVING ((((rt0.c0) IS FALSE))<=(((AVG(rt1.c3))%(rt0.c4)))) UNION ALL SELECT ALL v0.c0, rt0.c1, rt1.c3, rt0.c0, rt1.c4, rt1.c2, rt1.c0 FROM v0, rt0, rt1 GROUP BY v0.c0, rt0.c1, rt1.c3, rt0.c0, rt1.c4, rt1.c2, rt1.c0 HAVING (NOT (((((rt0.c0) IS FALSE))<=(((AVG(rt1.c3))%(rt0.c4)))))) UNION ALL SELECT v0.c0, rt0.c1, rt1.c3, rt0.c0, rt1.c4, rt1.c2, rt1.c0 FROM v0, rt0, rt1 GROUP BY v0.c0, rt0.c1, rt1.c3, rt0.c0, rt1.c4, rt1.c2, rt1.c0 HAVING ((((((rt0.c0) IS FALSE))<=(((AVG(rt1.c3))%(rt0.c4))))) ISNULL);
SELECT ALL v0.c0, rt0.c1, rt1.c3, rt0.c0, rt1.c4, rt1.c2, rt1.c0 FROM v0, rt0, rt1 GROUP BY v0.c0, rt0.c1, rt1.c3, rt0.c0, rt1.c4, rt1.c2, rt1.c0;
SELECT ALL v0.c0, rt0.c1, rt1.c3, rt0.c0, rt1.c4, rt1.c2, rt1.c0 FROM v0, rt0, rt1 GROUP BY v0.c0, rt0.c1, rt1.c3, rt0.c0, rt1.c4, rt1.c2, rt1.c0 HAVING ((((rt0.c0) IS FALSE))<=(((AVG(rt1.c3))%(rt0.c4)))) UNION ALL SELECT ALL v0.c0, rt0.c1, rt1.c3, rt0.c0, rt1.c4, rt1.c2, rt1.c0 FROM v0, rt0, rt1 GROUP BY v0.c0, rt0.c1, rt1.c3, rt0.c0, rt1.c4, rt1.c2, rt1.c0 HAVING (NOT (((((rt0.c0) IS FALSE))<=(((AVG(rt1.c3))%(rt0.c4)))))) UNION ALL SELECT v0.c0, rt0.c1, rt1.c3, rt0.c0, rt1.c4, rt1.c2, rt1.c0 FROM v0, rt0, rt1 GROUP BY v0.c0, rt0.c1, rt1.c3, rt0.c0, rt1.c4, rt1.c2, rt1.c0 HAVING ((((((rt0.c0) IS FALSE))<=(((AVG(rt1.c3))%(rt0.c4))))) ISNULL);
SELECT ALL v0.c0, rt0.c1, rt1.c3, rt0.c0, rt1.c4, rt1.c2, rt1.c0 FROM v0, rt0, rt1 GROUP BY v0.c0, rt0.c1, rt1.c3, rt0.c0, rt1.c4, rt1.c2, rt1.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((rt0.c1)=(NULL))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rt0.c1)==(NULL))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rt0.c1)==(NULL))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c4, rt1.c1, rt0.c0, rt1.c0 FROM rt1, rt0, v0;
SELECT DISTINCT rt0.c4, rt1.c1, rt0.c0, rt1.c0 FROM rt1, rt0, v0 WHERE (MIN(rt0.c0, rt0.c2) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c4, rt1.c1, rt0.c0, rt1.c0 FROM rt1, rt0, v0 WHERE ((NOT (MIN(rt0.c0, rt0.c2) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c4, rt1.c1, rt0.c0, rt1.c0 FROM rt1, rt0, v0 WHERE (((MIN(rt0.c0, rt0.c2) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c4, rt1.c1, rt0.c0, rt1.c0 FROM rt1, rt0, v0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c2) AND (0.8673939323863074)))-(CASE rt0.c4  WHEN rt0.c3 THEN 'Cqx{' ELSE -1295985985 END))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c3) BETWEEN (rt0.c2) AND (0.8673939323863074)))-(CASE rt0.c4  WHEN rt0.c3 THEN 'Cqx{' ELSE -1295985985 END))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((((rt0.c3) BETWEEN (rt0.c2) AND (0.8673939323863074)))-(CASE rt0.c4  WHEN rt0.c3 THEN 'Cqx{' ELSE -1295985985 END))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt1.c4, rt1.c2, rt0.c2 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt1.c2, rt0.c2;
SELECT ALL rt1.c4, rt1.c2, rt0.c2 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt1.c2, rt0.c2 HAVING COUNT('1193303417') UNION ALL SELECT rt1.c4, rt1.c2, rt0.c2 FROM rt0 NOT INDEXED, v0, rt1 GROUP BY rt1.c4, rt1.c2, rt0.c2 HAVING (NOT (COUNT('1193303417'))) UNION ALL SELECT ALL rt1.c4, rt1.c2, rt0.c2 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt1.c2, rt0.c2 HAVING ((COUNT('1193303417')) ISNULL);
SELECT rt1.c4, rt1.c2, rt0.c2 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt1.c2, rt0.c2;
SELECT ALL rt1.c4, rt1.c2, rt0.c2 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt1.c2, rt0.c2 HAVING COUNT('1193303417') UNION ALL SELECT rt1.c4, rt1.c2, rt0.c2 FROM rt0 NOT INDEXED, v0, rt1 GROUP BY rt1.c4, rt1.c2, rt0.c2 HAVING (NOT (COUNT('1193303417'))) UNION ALL SELECT ALL rt1.c4, rt1.c2, rt0.c2 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt1.c2, rt0.c2 HAVING ((COUNT('1193303417')) ISNULL);
SELECT rt1.c4, rt1.c2, rt0.c2 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt1.c2, rt0.c2;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((NOT (v0.c0)) IN ())) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((NOT (v0.c0)) IN ())))) UNION ALL SELECT ALL * FROM v0 WHERE (((((NOT (v0.c0)) IN ())) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt1.c0, rt1.c1, rt0.c0, rt1.c4, rt1.c2 FROM rt1, rt0;
SELECT DISTINCT rt1.c0, rt1.c1, rt0.c0, rt1.c4, rt1.c2 FROM rt1, rt0 WHERE (CAST(x'' AS BLOB)) UNION SELECT DISTINCT rt1.c0, rt1.c1, rt0.c0, rt1.c4, rt1.c2 FROM rt1, rt0 WHERE ((NOT (CAST(x'' AS BLOB)))) UNION SELECT DISTINCT rt1.c0, rt1.c1, rt0.c0, rt1.c4, rt1.c2 FROM rt1, rt0 WHERE (((CAST(x'' AS BLOB)) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1, rt0.c0, rt1.c4, rt1.c2 FROM rt1, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))AND('')))OR(CAST(v0.c0 AS INTEGER)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))AND('')))OR(CAST(v0.c0 AS INTEGER)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))AND('')))OR(CAST(v0.c0 AS INTEGER)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt1.c2, rt1.c1, rt1.c4, rt0.c2 FROM rt0, rt1, v0 GROUP BY rt1.c2, rt1.c1, rt1.c4, rt0.c2;
SELECT rt1.c2, rt1.c1, rt1.c4, rt0.c2 FROM rt0, rt1, v0 GROUP BY rt1.c2, rt1.c1, rt1.c4, rt0.c2 HAVING CASE COUNT(rt0.c1)  WHEN COUNT(TOTAL(GROUP_CONCAT(MAX(0.9984912522891995)))) THEN (rt0.c3 IN (COUNT(*))) ELSE GROUP_CONCAT(rt0.c4) END UNION ALL SELECT rt1.c2, rt1.c1, rt1.c4, rt0.c2 FROM rt0, rt1, v0 GROUP BY rt1.c2, rt1.c1, rt1.c4, rt0.c2 HAVING (NOT (CASE COUNT(rt0.c1)  WHEN COUNT(TOTAL(GROUP_CONCAT(MAX(0.9984912522891995)))) THEN (rt0.c3 IN (COUNT(*))) ELSE GROUP_CONCAT(rt0.c4) END)) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c4, rt0.c2 FROM rt0, rt1, v0 GROUP BY rt1.c2, rt1.c1, rt1.c4, rt0.c2 HAVING ((CASE COUNT(rt0.c1)  WHEN COUNT(TOTAL(GROUP_CONCAT(MAX(0.9984912522891995)))) THEN (rt0.c3 IN (COUNT(*))) ELSE GROUP_CONCAT(rt0.c4) END) ISNULL);
SELECT * FROM rt0, rt1, v0;
SELECT ALL * FROM rt0, rt1, v0 WHERE (CASE ((((rt1.c4)OR(rt1.c1)))OR(rt0.c4))  WHEN 0.7494875476370926 THEN rt1.c1 ELSE CAST(rt0.c4 AS TEXT) END) UNION ALL SELECT * FROM rt0, rt1, v0 WHERE ((NOT (CASE ((((rt1.c4)OR(rt1.c1)))OR(rt0.c4))  WHEN 0.7494875476370926 THEN rt1.c1 ELSE CAST(rt0.c4 AS TEXT) END))) UNION ALL SELECT ALL * FROM rt0, rt1, v0 WHERE (((CASE ((((rt1.c4)OR(rt1.c1)))OR(rt0.c4))  WHEN 0.7494875476370926 THEN rt1.c1 ELSE CAST(rt0.c4 AS TEXT) END) ISNULL));
SELECT * FROM rt0, rt1, v0;
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT (rt1.c3)) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT ((NOT (rt1.c3)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((((NOT (rt1.c3)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT ALL rt1.c4, rt0.c2, v0.c0, rt0.c1, rt0.c3, rt0.c0, rt1.c2, rt1.c0, rt1.c3, rt0.c4, rt1.c1 FROM rt0, rt1 RIGHT OUTER JOIN v0 ON ABS(((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c4))) GROUP BY rt1.c4, rt0.c2, v0.c0, rt0.c1, rt0.c3, rt0.c0, rt1.c2, rt1.c0, rt1.c3, rt0.c4, rt1.c1;
SELECT ALL rt1.c4, rt0.c2, v0.c0, rt0.c1, rt0.c3, rt0.c0, rt1.c2, rt1.c0, rt1.c3, rt0.c4, rt1.c1 FROM rt0, rt1 RIGHT OUTER JOIN v0 ON ABS(((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c4))) WHERE (((rt1.c4 COLLATE NOCASE) NOT BETWEEN ((rt0.c1 IN ())) AND (((rt0.c1) ISNULL)))) GROUP BY rt1.c4, rt0.c2, v0.c0, rt0.c1, rt0.c3, rt0.c0, rt1.c2, rt1.c0, rt1.c3, rt0.c4, rt1.c1 UNION SELECT rt1.c4, rt0.c2, v0.c0, rt0.c1, rt0.c3, rt0.c0, rt1.c2, rt1.c0, rt1.c3, rt0.c4, rt1.c1 FROM rt0, rt1 RIGHT OUTER JOIN v0 ON ABS(((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c4))) WHERE ((NOT (((rt1.c4 COLLATE NOCASE) NOT BETWEEN ((rt0.c1 IN ())) AND (((rt0.c1) ISNULL)))))) GROUP BY rt1.c4, rt0.c2, v0.c0, rt0.c1, rt0.c3, rt0.c0, rt1.c2, rt1.c0, rt1.c3, rt0.c4, rt1.c1 UNION SELECT ALL rt1.c4, rt0.c2, v0.c0, rt0.c1, rt0.c3, rt0.c0, rt1.c2, rt1.c0, rt1.c3, rt0.c4, rt1.c1 FROM rt0, rt1 RIGHT OUTER JOIN v0 ON ABS(((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c4))) WHERE (((((rt1.c4 COLLATE NOCASE) NOT BETWEEN ((rt0.c1 IN ())) AND (((rt0.c1) ISNULL)))) ISNULL)) GROUP BY rt1.c4, rt0.c2, v0.c0, rt0.c1, rt0.c3, rt0.c0, rt1.c2, rt1.c0, rt1.c3, rt0.c4, rt1.c1;
SELECT ALL rt1.c4, rt0.c2, v0.c0, rt0.c1, rt0.c3, rt0.c0, rt1.c2, rt1.c0, rt1.c3, rt0.c4, rt1.c1 FROM rt0, rt1 RIGHT OUTER JOIN v0 ON ABS(((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c4))) GROUP BY rt1.c4, rt0.c2, v0.c0, rt0.c1, rt0.c3, rt0.c0, rt1.c2, rt1.c0, rt1.c3, rt0.c4, rt1.c1;
SELECT rt0.c0, rt1.c2, rt1.c1 FROM rt0 RIGHT OUTER JOIN rt1 ON rt0.c2 COLLATE NOCASE COLLATE BINARY GROUP BY rt0.c0, rt1.c2, rt1.c1;
SELECT ALL rt0.c0, rt1.c2, rt1.c1 FROM rt0 RIGHT OUTER JOIN rt1 ON rt0.c2 COLLATE NOCASE COLLATE BINARY GROUP BY rt0.c0, rt1.c2, rt1.c1 HAVING MIN(COUNT(*)) UNION ALL SELECT rt0.c0, rt1.c2, rt1.c1 FROM rt0 RIGHT OUTER JOIN rt1 ON rt0.c2 COLLATE NOCASE COLLATE BINARY GROUP BY rt0.c0, rt1.c2, rt1.c1 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT rt0.c0, rt1.c2, rt1.c1 FROM rt0 RIGHT OUTER JOIN rt1 ON rt0.c2 COLLATE NOCASE COLLATE BINARY GROUP BY rt0.c0, rt1.c2, rt1.c1 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL rt1.c3, v0.c0 FROM rt1, v0;
SELECT ALL rt1.c3, v0.c0 FROM rt1, v0 WHERE ((((- (rt1.c4)))>(((rt1.c2) NOTNULL)))) UNION ALL SELECT ALL rt1.c3, v0.c0 FROM rt1, v0 WHERE ((NOT ((((- (rt1.c4)))>(((rt1.c2) NOTNULL)))))) UNION ALL SELECT rt1.c3, v0.c0 FROM rt1, v0 WHERE ((((((- (rt1.c4)))>(((rt1.c2) NOTNULL)))) ISNULL));
SELECT ALL rt1.c3, v0.c0 FROM rt1, v0;
SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN v0 ON (((((((('-408752482')OR((- (v0.c0)))))AND(CASE WHEN rt1.c4 THEN v0.c0 END)))AND(((((((((v0.c0)OR(rt1.c2)))AND(rt1.c4)))AND(rt1.c4)))OR(rt1.c2)))))AND(''));
SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN v0 ON (((((((('-408752482')OR((- (v0.c0)))))AND(CASE WHEN rt1.c4 THEN v0.c0 END)))AND(((((((((v0.c0)OR(rt1.c2)))AND(rt1.c4)))AND(rt1.c4)))OR(rt1.c2)))))AND('')) WHERE ((rt1.c0 IN ())) UNION SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN v0 ON (((((((('-408752482')OR((- (v0.c0)))))AND(CASE WHEN rt1.c4 THEN v0.c0 END)))AND(((((((((v0.c0)OR(rt1.c2)))AND(rt1.c4)))AND(rt1.c4)))OR(rt1.c2)))))AND('')) WHERE ((NOT ((rt1.c0 IN ())))) UNION SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN v0 ON (((((((('-408752482')OR((- (v0.c0)))))AND(CASE WHEN rt1.c4 THEN v0.c0 END)))AND(((((((((v0.c0)OR(rt1.c2)))AND(rt1.c4)))AND(rt1.c4)))OR(rt1.c2)))))AND('')) WHERE ((((rt1.c0 IN ())) ISNULL));
SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN v0 ON (((((((('-408752482')OR((- (v0.c0)))))AND(CASE WHEN rt1.c4 THEN v0.c0 END)))AND(((((((((v0.c0)OR(rt1.c2)))AND(rt1.c4)))AND(rt1.c4)))OR(rt1.c2)))))AND(''));
SELECT rt0.c0, rt0.c2, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c2))) IS FALSE) GROUP BY rt0.c0, rt0.c2, v0.c0;
SELECT rt0.c0, rt0.c2, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c2))) IS FALSE) WHERE (LIKELY(DISTINCT NULL)) GROUP BY rt0.c0, rt0.c2, v0.c0 UNION SELECT rt0.c0, rt0.c2, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c2))) IS FALSE) WHERE ((NOT (LIKELY(DISTINCT NULL)))) GROUP BY rt0.c0, rt0.c2, v0.c0 UNION SELECT ALL rt0.c0, rt0.c2, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c2))) IS FALSE) WHERE (((LIKELY(DISTINCT NULL)) ISNULL)) GROUP BY rt0.c0, rt0.c2, v0.c0;
SELECT rt0.c0, rt0.c2, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c2))) IS FALSE) GROUP BY rt0.c0, rt0.c2, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL((v0.c0 IN ())) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL((v0.c0 IN ())))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL((v0.c0 IN ()))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL((v0.c0 IN ())) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL((v0.c0 IN ())))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL((v0.c0 IN ()))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt1.c1) BETWEEN (rt1.c0) AND (x'4e86')) COLLATE NOCASE;
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt1.c1) BETWEEN (rt1.c0) AND (x'4e86')) COLLATE NOCASE WHERE (((((rt0.c0)>(rt0.c3)))IS((((rt0.c4))>((rt1.c2)))))) UNION ALL SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt1.c1) BETWEEN (rt1.c0) AND (x'4e86')) COLLATE NOCASE WHERE ((NOT (((((rt0.c0)>(rt0.c3)))IS((((rt0.c4))>((rt1.c2)))))))) UNION ALL SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt1.c1) BETWEEN (rt1.c0) AND (x'4e86')) COLLATE NOCASE WHERE (((((((rt0.c0)>(rt0.c3)))IS((((rt0.c4))>((rt1.c2)))))) ISNULL));
SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt1.c1) BETWEEN (rt1.c0) AND (x'4e86')) COLLATE NOCASE;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((rt0.c3, rt0.c4, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c0, rt0.c2)) AND ((rt0.c2, '1157926224', rt0.c2))) IN (0.5685986145558513, ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c3, rt0.c4, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c0, rt0.c2)) AND ((rt0.c2, '1157926224', rt0.c2))) IN (0.5685986145558513, ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4))))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((((rt0.c3, rt0.c4, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c0, rt0.c2)) AND ((rt0.c2, '1157926224', rt0.c2))) IN (0.5685986145558513, ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt1.c1, rt0.c4, rt1.c3, rt0.c2, v0.c0, rt0.c1 FROM rt1, rt0, v0 GROUP BY rt1.c1, rt0.c4, rt1.c3, rt0.c2, v0.c0, rt0.c1;
SELECT rt1.c1, rt0.c4, rt1.c3, rt0.c2, v0.c0, rt0.c1 FROM rt1, rt0, v0 WHERE ((((rt0.c4)<=(v0.c0)) IN ())) GROUP BY rt1.c1, rt0.c4, rt1.c3, rt0.c2, v0.c0, rt0.c1 UNION SELECT ALL rt1.c1, rt0.c4, rt1.c3, rt0.c2, v0.c0, rt0.c1 FROM rt1, rt0, v0 WHERE ((NOT ((((rt0.c4)<=(v0.c0)) IN ())))) GROUP BY rt1.c1, rt0.c4, rt1.c3, rt0.c2, v0.c0, rt0.c1 UNION SELECT ALL rt1.c1, rt0.c4, rt1.c3, rt0.c2, v0.c0, rt0.c1 FROM rt1, rt0, v0 WHERE ((((((rt0.c4)<=(v0.c0)) IN ())) ISNULL)) GROUP BY rt1.c1, rt0.c4, rt1.c3, rt0.c2, v0.c0, rt0.c1;
SELECT rt1.c1, rt0.c4, rt1.c3, rt0.c2, v0.c0, rt0.c1 FROM rt1, rt0, v0 GROUP BY rt1.c1, rt0.c4, rt1.c3, rt0.c2, v0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4;
SELECT rt0.c2, rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4 HAVING TOTAL(MIN(rt0.c2) COLLATE BINARY) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4 HAVING (NOT (TOTAL(MIN(rt0.c2) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4 HAVING ((TOTAL(MIN(rt0.c2) COLLATE BINARY)) ISNULL);
SELECT * FROM rt1 FULL OUTER JOIN v0 ON ((((((rt0.c4)AND(rt1.c3)))OR(rt1.c1))) NOTNULL) INNER JOIN rt0 ON (NOT ((NOT (rt0.c1))));
SELECT DISTINCT rt1.c1, rt1.c0, v0.c0, rt0.c0 FROM rt1 NOT INDEXED, v0 FULL OUTER JOIN rt0 ON CASE WHEN json_array(rt0.c2, rt0.c3) THEN ((rt1.c2)AND(rt1.c0)) ELSE CASE rt0.c0  WHEN NULL THEN rt1.c3 WHEN rt0.c4 THEN rt0.c2 WHEN v0.c0 THEN rt1.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c0 ELSE rt0.c0 END END;
SELECT DISTINCT rt1.c1, rt1.c0, v0.c0, rt0.c0 FROM rt1, v0 FULL OUTER JOIN rt0 ON CASE WHEN json_array(rt0.c2, rt0.c3) THEN ((rt1.c2)AND(rt1.c0)) ELSE CASE rt0.c0  WHEN NULL THEN rt1.c3 WHEN rt0.c4 THEN rt0.c2 WHEN v0.c0 THEN rt1.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c0 ELSE rt0.c0 END END WHERE (CASE CASE WHEN rt0.c1 THEN v0.c0 END  WHEN CASE rt0.c0  WHEN rt1.c2 THEN rt1.c3 WHEN x'171a' THEN rt1.c0 WHEN rt1.c2 THEN rt0.c4 ELSE NULL END THEN rt1.c3 COLLATE BINARY END) UNION SELECT DISTINCT rt1.c1, rt1.c0, v0.c0, rt0.c0 FROM rt1, v0 FULL OUTER JOIN rt0 ON CASE WHEN json_array(rt0.c2, rt0.c3) THEN ((rt1.c2)AND(rt1.c0)) ELSE CASE rt0.c0  WHEN NULL THEN rt1.c3 WHEN rt0.c4 THEN rt0.c2 WHEN v0.c0 THEN rt1.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c0 ELSE rt0.c0 END END WHERE ((NOT (CASE CASE WHEN rt0.c1 THEN v0.c0 END  WHEN CASE rt0.c0  WHEN rt1.c2 THEN rt1.c3 WHEN x'171a' THEN rt1.c0 WHEN rt1.c2 THEN rt0.c4 ELSE NULL END THEN rt1.c3 COLLATE BINARY END))) UNION SELECT DISTINCT rt1.c1, rt1.c0, v0.c0, rt0.c0 FROM rt1, v0 FULL OUTER JOIN rt0 ON CASE WHEN json_array(rt0.c2, rt0.c3) THEN ((rt1.c2)AND(rt1.c0)) ELSE CASE rt0.c0  WHEN NULL THEN rt1.c3 WHEN rt0.c4 THEN rt0.c2 WHEN v0.c0 THEN rt1.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c0 ELSE rt0.c0 END END WHERE (((CASE CASE WHEN rt0.c1 THEN v0.c0 END  WHEN CASE rt0.c0  WHEN rt1.c2 THEN rt1.c3 WHEN x'171a' THEN rt1.c0 WHEN rt1.c2 THEN rt0.c4 ELSE NULL END THEN rt1.c3 COLLATE BINARY END) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, v0.c0, rt0.c0 FROM rt1 NOT INDEXED, v0 FULL OUTER JOIN rt0 ON CASE WHEN json_array(rt0.c2, rt0.c3) THEN ((rt1.c2)AND(rt1.c0)) ELSE CASE rt0.c0  WHEN NULL THEN rt1.c3 WHEN rt0.c4 THEN rt0.c2 WHEN v0.c0 THEN rt1.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c0 ELSE rt0.c0 END END;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 WHERE (((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c4 END) IS TRUE)) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE ((NOT (((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c4 END) IS TRUE)))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE (((((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c4 END) IS TRUE)) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c0, rt1.c4, rt0.c4, rt0.c0, rt1.c2, rt0.c2 FROM v0, rt1, rt0 GROUP BY rt1.c0, rt1.c4, rt0.c4, rt0.c0, rt1.c2, rt0.c2;
SELECT rt1.c0, rt1.c4, rt0.c4, rt0.c0, rt1.c2, rt0.c2 FROM v0, rt1, rt0 GROUP BY rt1.c0, rt1.c4, rt0.c4, rt0.c0, rt1.c2, rt0.c2 HAVING CAST(((((MIN(MIN(rt1.c3)))OR(COUNT(*))))OR(MAX(GROUP_CONCAT(rt0.c2)))) AS TEXT) UNION ALL SELECT rt1.c0, rt1.c4, rt0.c4, rt0.c0, rt1.c2, rt0.c2 FROM v0, rt1, rt0 GROUP BY rt1.c0, rt1.c4, rt0.c4, rt0.c0, rt1.c2, rt0.c2 HAVING (NOT (CAST(((((MIN(MIN(rt1.c3)))OR(COUNT(*))))OR(MAX(GROUP_CONCAT(rt0.c2)))) AS TEXT))) UNION ALL SELECT rt1.c0, rt1.c4, rt0.c4, rt0.c0, rt1.c2, rt0.c2 FROM v0, rt1, rt0 GROUP BY rt1.c0, rt1.c4, rt0.c4, rt0.c0, rt1.c2, rt0.c2 HAVING ((CAST(((((MIN(MIN(rt1.c3)))OR(COUNT(*))))OR(MAX(GROUP_CONCAT(rt0.c2)))) AS TEXT)) ISNULL);
SELECT v0.c0, rt1.c1, rt0.c1, rt0.c3, rt0.c4 FROM rt1, rt0, v0;
SELECT v0.c0, rt1.c1, rt0.c1, rt0.c3, rt0.c4 FROM rt1, rt0, v0 WHERE (NULL) UNION ALL SELECT v0.c0, rt1.c1, rt0.c1, rt0.c3, rt0.c4 FROM rt1, rt0, v0 WHERE ((NOT (NULL))) UNION ALL SELECT v0.c0, rt1.c1, rt0.c1, rt0.c3, rt0.c4 FROM rt1, rt0, v0 WHERE (((NULL) ISNULL));
SELECT v0.c0, rt1.c1, rt0.c1, rt0.c3, rt0.c4 FROM rt1, rt0, v0;
SELECT DISTINCT rt1.c1 FROM rt1, v0;
SELECT DISTINCT rt1.c1 FROM rt1, v0 WHERE ((((((((rt1.c3)AND(rt1.c3)))AND(rt1.c2))))<=(((- (rt1.c1)))))) UNION SELECT DISTINCT rt1.c1 FROM rt1, v0 WHERE ((NOT ((((((((rt1.c3)AND(rt1.c3)))AND(rt1.c2))))<=(((- (rt1.c1)))))))) UNION SELECT DISTINCT rt1.c1 FROM rt1, v0 WHERE ((((((((((rt1.c3)AND(rt1.c3)))AND(rt1.c2))))<=(((- (rt1.c1)))))) ISNULL));
SELECT DISTINCT rt1.c1 FROM rt1, v0;
SELECT rt1.c3, rt1.c2, v0.c0, rt1.c0 FROM v0 INNER JOIN rt1 ON rt1.c3 GROUP BY rt1.c3, rt1.c2, v0.c0, rt1.c0;
SELECT rt1.c3, rt1.c2, v0.c0, rt1.c0 FROM v0 INNER JOIN rt1 ON rt1.c3 WHERE (NULL) GROUP BY rt1.c3, rt1.c2, v0.c0, rt1.c0 UNION SELECT rt1.c3, rt1.c2, v0.c0, rt1.c0 FROM v0 INNER JOIN rt1 ON rt1.c3 WHERE ((NOT (NULL))) GROUP BY rt1.c3, rt1.c2, v0.c0, rt1.c0 UNION SELECT ALL rt1.c3, rt1.c2, v0.c0, rt1.c0 FROM v0 INNER JOIN rt1 ON rt1.c3 WHERE (((NULL) ISNULL)) GROUP BY rt1.c3, rt1.c2, v0.c0, rt1.c0;
SELECT rt1.c3, rt1.c2, v0.c0, rt1.c0 FROM v0 INNER JOIN rt1 ON rt1.c3 GROUP BY rt1.c3, rt1.c2, v0.c0, rt1.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c2;
SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c2 HAVING (((NOT (COUNT(rt0.c4)))) IS FALSE) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c2 HAVING (NOT ((((NOT (COUNT(rt0.c4)))) IS FALSE))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c2 HAVING (((((NOT (COUNT(rt0.c4)))) IS FALSE)) ISNULL);
SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c2;
SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c2 HAVING (((NOT (COUNT(rt0.c4)))) IS FALSE) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c2 HAVING (NOT ((((NOT (COUNT(rt0.c4)))) IS FALSE))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c2 HAVING (((((NOT (COUNT(rt0.c4)))) IS FALSE)) ISNULL);
SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c2;
SELECT v0.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0, v0;
SELECT ALL v0.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0, v0 WHERE (((rt0.c3)IS(rt0.c0)) COLLATE NOCASE) UNION ALL SELECT v0.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0, v0 WHERE ((NOT (((rt0.c3)IS(rt0.c0)) COLLATE NOCASE))) UNION ALL SELECT v0.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0, v0 WHERE (((((rt0.c3)IS(rt0.c0)) COLLATE NOCASE) ISNULL));
SELECT v0.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0, v0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ('cl(67') UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ('cl(67'))) UNION SELECT DISTINCT * FROM rt1 WHERE ((('cl(67') ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL v0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2 FROM rt1 NATURAL JOIN v0 GROUP BY v0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2;
SELECT v0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2 FROM rt1 NATURAL JOIN v0 WHERE (((((rt1.c2)AND(x'')))%(((rt1.c3)<<(rt1.c3))))) GROUP BY v0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2 UNION SELECT v0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2 FROM rt1 NATURAL JOIN v0 WHERE ((NOT (((((rt1.c2)AND(x'')))%(((rt1.c3)<<(rt1.c3))))))) GROUP BY v0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2 UNION SELECT v0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2 FROM rt1 NATURAL JOIN v0 WHERE (((((((rt1.c2)AND(x'')))%(((rt1.c3)<<(rt1.c3))))) ISNULL)) GROUP BY v0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2;
SELECT ALL v0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2 FROM rt1 NATURAL JOIN v0 GROUP BY v0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2;
SELECT ALL rt1.c3, rt1.c1, rt0.c0, rt0.c1, rt1.c4, rt0.c2, rt0.c3, rt1.c0 FROM rt1, rt0 GROUP BY rt1.c3, rt1.c1, rt0.c0, rt0.c1, rt1.c4, rt0.c2, rt0.c3, rt1.c0;
SELECT rt1.c3, rt1.c1, rt0.c0, rt0.c1, rt1.c4, rt0.c2, rt0.c3, rt1.c0 FROM rt1, rt0 GROUP BY rt1.c3, rt1.c1, rt0.c0, rt0.c1, rt1.c4, rt0.c2, rt0.c3, rt1.c0 HAVING ((GROUP_CONCAT(COUNT(rt0.c2)))|(GROUP_CONCAT(NULL))) UNION ALL SELECT rt1.c3, rt1.c1, rt0.c0, rt0.c1, rt1.c4, rt0.c2, rt0.c3, rt1.c0 FROM rt1, rt0 GROUP BY rt1.c3, rt1.c1, rt0.c0, rt0.c1, rt1.c4, rt0.c2, rt0.c3, rt1.c0 HAVING (NOT (((GROUP_CONCAT(COUNT(rt0.c2)))|(GROUP_CONCAT(NULL))))) UNION ALL SELECT rt1.c3, rt1.c1, rt0.c0, rt0.c1, rt1.c4, rt0.c2, rt0.c3, rt1.c0 FROM rt1, rt0 GROUP BY rt1.c3, rt1.c1, rt0.c0, rt0.c1, rt1.c4, rt0.c2, rt0.c3, rt1.c0 HAVING ((((GROUP_CONCAT(COUNT(rt0.c2)))|(GROUP_CONCAT(NULL)))) ISNULL);
SELECT ALL rt1.c2, rt1.c3, v0.c0 FROM rt1, rt0, v0;
SELECT rt1.c2, rt1.c3, v0.c0 FROM rt1, rt0, v0 WHERE (((0.38178822980898075)<=(((rt1.c2) IS FALSE)))) UNION ALL SELECT ALL rt1.c2, rt1.c3, v0.c0 FROM rt1, rt0, v0 WHERE ((NOT (((0.38178822980898075)<=(((rt1.c2) IS FALSE)))))) UNION ALL SELECT rt1.c2, rt1.c3, v0.c0 FROM rt1, rt0, v0 WHERE (((((0.38178822980898075)<=(((rt1.c2) IS FALSE)))) ISNULL));
SELECT ALL rt1.c2, rt1.c3, v0.c0 FROM rt1, rt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0)OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT v0.c0 FROM v0 NOT INDEXED WHERE ((NOT (((((v0.c0)OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt1.c2, rt0.c3 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c3;
SELECT ALL rt1.c2, rt0.c3 FROM rt0, rt1 WHERE ((((rt0.c0 IN ()))>(((((rt0.c1)OR(rt0.c2)))AND(rt1.c3))))) GROUP BY rt1.c2, rt0.c3 UNION SELECT ALL rt1.c2, rt0.c3 FROM rt0, rt1 WHERE ((NOT ((((rt0.c0 IN ()))>(((((rt0.c1)OR(rt0.c2)))AND(rt1.c3))))))) GROUP BY rt1.c2, rt0.c3 UNION SELECT ALL rt1.c2, rt0.c3 FROM rt0, rt1 WHERE ((((((rt0.c0 IN ()))>(((((rt0.c1)OR(rt0.c2)))AND(rt1.c3))))) ISNULL)) GROUP BY rt1.c2, rt0.c3;
SELECT rt1.c2, rt0.c3 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c3;
SELECT rt0.c2, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3;
SELECT ALL rt0.c2, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3 HAVING (+ (CAST(rt0.c4 AS REAL))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3 HAVING (NOT ((+ (CAST(rt0.c4 AS REAL))))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c3 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c4, rt0.c3 HAVING (((+ (CAST(rt0.c4 AS REAL)))) ISNULL);
SELECT rt0.c2, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3;
SELECT ALL rt0.c2, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3 HAVING (+ (CAST(rt0.c4 AS REAL))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3 HAVING (NOT ((+ (CAST(rt0.c4 AS REAL))))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c3 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c4, rt0.c3 HAVING (((+ (CAST(rt0.c4 AS REAL)))) ISNULL);
SELECT rt0.c2, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3;
SELECT MAX(((CAST(rt0.c1 AS TEXT)) NOTNULL)) FROM v0, rt0 ORDER BY ((((rt0.c2) ISNULL)) BETWEEN (0.8946117728362109) AND ((((v0.c0))<=((x'0585'))))) DESC  NULLS LAST;
SELECT * FROM rt0, v0 INNER JOIN rt1 ON ((((((((((rt1.c4)AND(rt0.c4)))AND(rt1.c0)))AND(rt0.c3)))OR(rt1.c1)))<(CAST(rt0.c4 AS NUMERIC)));
SELECT ALL * FROM rt0, v0 INNER JOIN rt1 ON ((((((((((rt1.c4)AND(rt0.c4)))AND(rt1.c0)))AND(rt0.c3)))OR(rt1.c1)))<(CAST(rt0.c4 AS NUMERIC))) WHERE (rt0.c0) UNION ALL SELECT ALL * FROM rt0, v0 INNER JOIN rt1 ON ((((((((((rt1.c4)AND(rt0.c4)))AND(rt1.c0)))AND(rt0.c3)))OR(rt1.c1)))<(CAST(rt0.c4 AS NUMERIC))) WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL * FROM rt0, v0 INNER JOIN rt1 ON ((((((((((rt1.c4)AND(rt0.c4)))AND(rt1.c0)))AND(rt0.c3)))OR(rt1.c1)))<(CAST(rt0.c4 AS NUMERIC))) WHERE (((rt0.c0) ISNULL));
SELECT * FROM rt0, v0 INNER JOIN rt1 ON ((((((((((rt1.c4)AND(rt0.c4)))AND(rt1.c0)))AND(rt0.c3)))OR(rt1.c1)))<(CAST(rt0.c4 AS NUMERIC)));
SELECT DISTINCT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0 WHERE (CASE ((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c2))  WHEN x'7286' THEN ((rt1.c0) IS FALSE) WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt1.c1 THEN '0.7858555825449473' ELSE rt1.c1 END THEN (rt1.c0 IN (rt0.c1)) WHEN (((rt0.c1, rt0.c1, rt1.c2)) BETWEEN ((rt1.c4, rt0.c3, rt0.c3)) AND ((rt1.c4, rt1.c0, rt1.c2))) THEN rt1.c4 COLLATE BINARY END) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((NOT (CASE ((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c2))  WHEN x'7286' THEN ((rt1.c0) IS FALSE) WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt1.c1 THEN '0.7858555825449473' ELSE rt1.c1 END THEN (rt1.c0 IN (rt0.c1)) WHEN (((rt0.c1, rt0.c1, rt1.c2)) BETWEEN ((rt1.c4, rt0.c3, rt0.c3)) AND ((rt1.c4, rt1.c0, rt1.c2))) THEN rt1.c4 COLLATE BINARY END))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE (((CASE ((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c2))  WHEN x'7286' THEN ((rt1.c0) IS FALSE) WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt1.c1 THEN '0.7858555825449473' ELSE rt1.c1 END THEN (rt1.c0 IN (rt0.c1)) WHEN (((rt0.c1, rt0.c1, rt1.c2)) BETWEEN ((rt1.c4, rt0.c3, rt0.c3)) AND ((rt1.c4, rt1.c0, rt1.c2))) THEN rt1.c4 COLLATE BINARY END) ISNULL));
SELECT DISTINCT * FROM rt1, rt0;
SELECT rt1.c3, rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c3, rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (CASE WHEN ((rt1.c2)GLOB(rt1.c2)) THEN rt1.c1 COLLATE NOCASE ELSE 'ཱྀ3k' END) GROUP BY rt1.c3, rt1.c2, rt1.c1, rt1.c0 UNION SELECT rt1.c3, rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (CASE WHEN ((rt1.c2)GLOB(rt1.c2)) THEN rt1.c1 COLLATE NOCASE ELSE 'ཱྀ3k' END))) GROUP BY rt1.c3, rt1.c2, rt1.c1, rt1.c0 UNION SELECT ALL rt1.c3, rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (((CASE WHEN ((rt1.c2)GLOB(rt1.c2)) THEN rt1.c1 COLLATE NOCASE ELSE 'ཱྀ3k' END) ISNULL)) GROUP BY rt1.c3, rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c3, rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c1, rt1.c0;
SELECT rt0.c1, rt1.c1, rt1.c4, rt1.c3, rt1.c0 FROM v0, rt0, rt1 GROUP BY rt0.c1, rt1.c1, rt1.c4, rt1.c3, rt1.c0;
SELECT ALL rt0.c1, rt1.c1, rt1.c4, rt1.c3, rt1.c0 FROM v0, rt0, rt1 GROUP BY rt0.c1, rt1.c1, rt1.c4, rt1.c3, rt1.c0 HAVING rt0.c4 UNION ALL SELECT rt0.c1, rt1.c1, rt1.c4, rt1.c3, rt1.c0 FROM v0, rt0, rt1 GROUP BY rt0.c1, rt1.c1, rt1.c4, rt1.c3, rt1.c0 HAVING (NOT (rt0.c4)) UNION ALL SELECT ALL rt0.c1, rt1.c1, rt1.c4, rt1.c3, rt1.c0 FROM v0, rt0, rt1 GROUP BY rt0.c1, rt1.c1, rt1.c4, rt1.c3, rt1.c0 HAVING ((rt0.c4) ISNULL);
SELECT rt0.c1, rt1.c1, rt1.c4, rt1.c3, rt1.c0 FROM v0, rt0, rt1 GROUP BY rt0.c1, rt1.c1, rt1.c4, rt1.c3, rt1.c0;
SELECT ALL rt0.c1, rt1.c1, rt1.c4, rt1.c3, rt1.c0 FROM v0, rt0, rt1 GROUP BY rt0.c1, rt1.c1, rt1.c4, rt1.c3, rt1.c0 HAVING rt0.c4 UNION ALL SELECT rt0.c1, rt1.c1, rt1.c4, rt1.c3, rt1.c0 FROM v0, rt0, rt1 GROUP BY rt0.c1, rt1.c1, rt1.c4, rt1.c3, rt1.c0 HAVING (NOT (rt0.c4)) UNION ALL SELECT ALL rt0.c1, rt1.c1, rt1.c4, rt1.c3, rt1.c0 FROM v0, rt0, rt1 GROUP BY rt0.c1, rt1.c1, rt1.c4, rt1.c3, rt1.c0 HAVING ((rt0.c4) ISNULL);
SELECT rt0.c1, rt1.c1, rt1.c4, rt1.c3, rt1.c0 FROM v0, rt0, rt1 GROUP BY rt0.c1, rt1.c1, rt1.c4, rt1.c3, rt1.c0;
SELECT * FROM v0, rt0, rt1;
SELECT ALL * FROM v0, rt0, rt1 WHERE (TRIM(((((rt1.c4)OR(rt1.c2)))OR(v0.c0)))) UNION ALL SELECT ALL * FROM v0, rt0, rt1 WHERE ((NOT (TRIM(((((rt1.c4)OR(rt1.c2)))OR(v0.c0)))))) UNION ALL SELECT * FROM v0, rt0, rt1 WHERE (((TRIM(((((rt1.c4)OR(rt1.c2)))OR(v0.c0)))) ISNULL));
SELECT * FROM v0, rt0, rt1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((v0.c0 IN ())) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((v0.c0 IN ())))) UNION SELECT DISTINCT * FROM v0 WHERE ((((v0.c0 IN ())) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt1.c1, rt1.c4 FROM rt1 GROUP BY rt1.c1, rt1.c4;
SELECT ALL rt1.c1, rt1.c4 FROM rt1 WHERE ((rt1.c2 COLLATE BINARY IN ())) GROUP BY rt1.c1, rt1.c4 UNION SELECT ALL rt1.c1, rt1.c4 FROM rt1 WHERE ((NOT ((rt1.c2 COLLATE BINARY IN ())))) GROUP BY rt1.c1, rt1.c4 UNION SELECT ALL rt1.c1, rt1.c4 FROM rt1 WHERE ((((rt1.c2 COLLATE BINARY IN ())) ISNULL)) GROUP BY rt1.c1, rt1.c4;
SELECT ALL rt1.c1, rt1.c4 FROM rt1 GROUP BY rt1.c1, rt1.c4;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL * FROM rt1, v0;
SELECT ALL * FROM rt1 NOT INDEXED, v0 WHERE (((((rt1.c3)=('n]?-'))) ISNULL)) UNION ALL SELECT ALL * FROM rt1, v0 WHERE ((NOT (((((rt1.c3)==('n]?-'))) ISNULL)))) UNION ALL SELECT * FROM rt1, v0 WHERE (((((((rt1.c3)==('n]?-'))) ISNULL)) ISNULL));
SELECT ALL * FROM rt1, v0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (load_extension((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))), rt0.c2 COLLATE RTRIM)) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (load_extension((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))), rt0.c2 COLLATE RTRIM)))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((load_extension((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))), rt0.c2 COLLATE RTRIM)) ISNULL));
SELECT rt1.c4, rt1.c0 FROM rt1 LEFT OUTER JOIN v0 ON rt1.c0 GROUP BY rt1.c4, rt1.c0;
SELECT ALL rt1.c4, rt1.c0 FROM rt1 LEFT OUTER JOIN v0 ON rt1.c0 WHERE ((((((((rt1.c0)AND(rt1.c0)))AND(NULL)), json(0x45482034), ((rt1.c4)&(NULL)), LIKELY(rt1.c1), x''))=((SQLITE_VERSION(), ((rt1.c3) IS TRUE), (rt1.c4 IN ()), ((rt1.c0) IS TRUE), LTRIM(rt1.c3, rt1.c4))))) GROUP BY rt1.c4, rt1.c0 UNION SELECT ALL rt1.c4, rt1.c0 FROM rt1 LEFT OUTER JOIN v0 ON rt1.c0 WHERE ((NOT ((((((((rt1.c0)AND(rt1.c0)))AND(NULL)), json(0X45482034), ((rt1.c4)&(NULL)), LIKELY(rt1.c1), x''))==((SQLITE_VERSION(), ((rt1.c3) IS TRUE), (rt1.c4 IN ()), ((rt1.c0) IS TRUE), LTRIM(rt1.c3, rt1.c4))))))) GROUP BY rt1.c4, rt1.c0 UNION SELECT ALL rt1.c4, rt1.c0 FROM rt1 LEFT OUTER JOIN v0 ON rt1.c0 WHERE ((((((((((rt1.c0)AND(rt1.c0)))AND(NULL)), json(0x45482034), ((rt1.c4)&(NULL)), LIKELY(rt1.c1), x''))==((SQLITE_VERSION(), ((rt1.c3) IS TRUE), (rt1.c4 IN ()), ((rt1.c0) IS TRUE), LTRIM(rt1.c3, rt1.c4))))) ISNULL)) GROUP BY rt1.c4, rt1.c0;
SELECT rt1.c4, rt1.c0 FROM rt1 LEFT OUTER JOIN v0 ON rt1.c0 GROUP BY rt1.c4, rt1.c0;
SELECT ALL rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c0;
SELECT rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c0 HAVING CAST(((rt0.c0)|(TOTAL(GROUP_CONCAT(rt0.c1)))) AS TEXT) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c0 HAVING (NOT (CAST(((rt0.c0)|(TOTAL(GROUP_CONCAT(rt0.c1)))) AS TEXT))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c0 HAVING ((CAST(((rt0.c0)|(TOTAL(GROUP_CONCAT(rt0.c1)))) AS TEXT)) ISNULL);
SELECT TOTAL(((((((rt0.c4)OR(rt1.c0)))OR(rt1.c2))) ISNULL)) FROM v0, rt0, rt1 ORDER BY (NOT (((((rt0.c1)AND(rt0.c1)))OR(x'51e4')))) ASC;
SELECT ALL rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM v0, rt0;
SELECT rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((UNLIKELY(rt0.c4))) AND ((((v0.c0)<(rt0.c2)))))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((UNLIKELY(rt0.c4))) AND ((((v0.c0)<(rt0.c2)))))))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((UNLIKELY(rt0.c4))) AND ((((v0.c0)<(rt0.c2)))))) ISNULL));
SELECT ALL rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM v0, rt0;
SELECT DISTINCT * FROM rt1, v0, rt0;
SELECT DISTINCT * FROM rt1, v0, rt0 WHERE (NULLIF(CAST(x'' AS BLOB), ((((rt0.c3)OR(rt1.c0)))OR(rt0.c0)))) UNION SELECT DISTINCT * FROM rt1, v0, rt0 WHERE ((NOT (NULLIF(CAST(x'' AS BLOB), ((((rt0.c3)OR(rt1.c0)))OR(rt0.c0)))))) UNION SELECT DISTINCT * FROM rt1, v0, rt0 WHERE (((NULLIF(CAST(x'' AS BLOB), ((((rt0.c3)OR(rt1.c0)))OR(rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt1, v0, rt0;
SELECT ALL rt0.c3, rt0.c4, rt1.c2, rt0.c2, rt0.c1, v0.c0, rt1.c1, rt0.c0 FROM v0, rt1 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt1.c3 THEN rt1.c1 ELSE rt0.c1 END)/((rt0.c4 IN ()))) GROUP BY rt0.c3, rt0.c4, rt1.c2, rt0.c2, rt0.c1, v0.c0, rt1.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt1.c2, rt0.c2, rt0.c1, v0.c0, rt1.c1, rt0.c0 FROM v0, rt1 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt1.c3 THEN rt1.c1 ELSE rt0.c1 END)/((rt0.c4 IN ()))) WHERE (((rt1.c1 COLLATE BINARY)||((rt0.c0 IN ())))) GROUP BY rt0.c3, rt0.c4, rt1.c2, rt0.c2, rt0.c1, v0.c0, rt1.c1, rt0.c0 UNION SELECT rt0.c3, rt0.c4, rt1.c2, rt0.c2, rt0.c1, v0.c0, rt1.c1, rt0.c0 FROM v0, rt1 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt1.c3 THEN rt1.c1 ELSE rt0.c1 END)/((rt0.c4 IN ()))) WHERE ((NOT (((rt1.c1 COLLATE BINARY)||((rt0.c0 IN ())))))) GROUP BY rt0.c3, rt0.c4, rt1.c2, rt0.c2, rt0.c1, v0.c0, rt1.c1, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c4, rt1.c2, rt0.c2, rt0.c1, v0.c0, rt1.c1, rt0.c0 FROM v0, rt1 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt1.c3 THEN rt1.c1 ELSE rt0.c1 END)/((rt0.c4 IN ()))) WHERE (((((rt1.c1 COLLATE BINARY)||((rt0.c0 IN ())))) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt1.c2, rt0.c2, rt0.c1, v0.c0, rt1.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt1.c2, rt0.c2, rt0.c1, v0.c0, rt1.c1, rt0.c0 FROM v0, rt1 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt1.c3 THEN rt1.c1 ELSE rt0.c1 END)/((rt0.c4 IN ()))) GROUP BY rt0.c3, rt0.c4, rt1.c2, rt0.c2, rt0.c1, v0.c0, rt1.c1, rt0.c0;
SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING MIN(MAX(MIN(0xffffffffccb2a47e))) UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING (NOT (MIN(MAX(MIN(0xffffffffccb2a47e))))) UNION ALL SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING ((MIN(MAX(MIN(0xffffffffccb2a47e)))) ISNULL);
SELECT * FROM v0, rt0, rt1;
SELECT * FROM v0, rt0, rt1 WHERE ((NOT ((((x''))>((rt1.c3)))))) UNION ALL SELECT * FROM v0, rt0, rt1 WHERE ((NOT ((NOT ((((x''))>((rt1.c3)))))))) UNION ALL SELECT * FROM v0, rt0, rt1 WHERE ((((NOT ((((x''))>((rt1.c3)))))) ISNULL));
SELECT * FROM v0, rt0, rt1;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON rt0.c1;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON rt0.c1 WHERE (((((((((((rt0.c2) NOTNULL))AND((rt0.c3 IN (rt0.c3)))))OR(rt0.c1 COLLATE RTRIM)))OR(NULL)))AND(CASE rt0.c1  WHEN NULL THEN '-1980839865' WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN '' WHEN rt0.c2 THEN 'nj' WHEN rt0.c2 THEN rt0.c0 END))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON rt0.c1 WHERE ((NOT (((((((((((rt0.c2) NOTNULL))AND((rt0.c3 IN (rt0.c3)))))OR(rt0.c1 COLLATE RTRIM)))OR(NULL)))AND(CASE rt0.c1  WHEN NULL THEN '-1980839865' WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN '' WHEN rt0.c2 THEN 'nj' WHEN rt0.c2 THEN rt0.c0 END))))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON rt0.c1 WHERE (((((((((((((rt0.c2) NOTNULL))AND((rt0.c3 IN (rt0.c3)))))OR(rt0.c1 COLLATE RTRIM)))OR(NULL)))AND(CASE rt0.c1  WHEN NULL THEN '-1980839865' WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN '' WHEN rt0.c2 THEN 'nj' WHEN rt0.c2 THEN rt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON rt0.c1;
SELECT rt1.c0, rt1.c2, rt1.c1, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1, rt1.c3, rt1.c4;
SELECT rt1.c0, rt1.c2, rt1.c1, rt1.c3, rt1.c4 FROM rt1 WHERE (CASE WHEN (rt1.c1 IN (rt1.c2)) THEN (((rt1.c4)) BETWEEN ((rt1.c2)) AND ((rt1.c3))) ELSE ((rt1.c0)GLOB(NULL)) END) GROUP BY rt1.c0, rt1.c2, rt1.c1, rt1.c3, rt1.c4 UNION SELECT ALL rt1.c0, rt1.c2, rt1.c1, rt1.c3, rt1.c4 FROM rt1 WHERE ((NOT (CASE WHEN (rt1.c1 IN (rt1.c2)) THEN (((rt1.c4)) BETWEEN ((rt1.c2)) AND ((rt1.c3))) ELSE ((rt1.c0)GLOB(NULL)) END))) GROUP BY rt1.c0, rt1.c2, rt1.c1, rt1.c3, rt1.c4 UNION SELECT rt1.c0, rt1.c2, rt1.c1, rt1.c3, rt1.c4 FROM rt1 WHERE (((CASE WHEN (rt1.c1 IN (rt1.c2)) THEN (((rt1.c4)) BETWEEN ((rt1.c2)) AND ((rt1.c3))) ELSE ((rt1.c0)GLOB(NULL)) END) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt1.c1, rt1.c3, rt1.c4;
SELECT rt1.c0, rt1.c2, rt1.c1, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1, rt1.c3, rt1.c4;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((v0.c0)) BETWEEN ((GROUP_CONCAT(v0.c0))) AND (('1257803358'))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((v0.c0)) BETWEEN ((GROUP_CONCAT(v0.c0))) AND (('1257803358'))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((v0.c0)) BETWEEN ((GROUP_CONCAT(v0.c0))) AND (('1257803358')))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((v0.c0)) BETWEEN ((GROUP_CONCAT(v0.c0))) AND (('1257803358'))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((v0.c0)) BETWEEN ((GROUP_CONCAT(v0.c0))) AND (('1257803358'))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((v0.c0)) BETWEEN ((GROUP_CONCAT(v0.c0))) AND (('1257803358')))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c2) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT v0.c0, rt0.c3, rt0.c0 FROM v0, rt0;
SELECT DISTINCT v0.c0, rt0.c3, rt0.c0 FROM v0, rt0 WHERE (((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT v0.c0, rt0.c3, rt0.c0 FROM v0, rt0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0, rt0.c3, rt0.c0 FROM v0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c0, rt0.c3, rt0.c0 FROM v0, rt0;
SELECT ALL v0.c0, rt1.c3, rt1.c4, rt0.c1, rt0.c0, rt1.c1, rt0.c2 FROM rt1 RIGHT OUTER JOIN v0 ON HEX((NOT (NULL))) RIGHT OUTER JOIN rt0 ON (~ (rt0.c0)) COLLATE NOCASE GROUP BY v0.c0, rt1.c3, rt1.c4, rt0.c1, rt0.c0, rt1.c1, rt0.c2;
SELECT v0.c0, rt1.c3, rt1.c4, rt0.c1, rt0.c0, rt1.c1, rt0.c2 FROM rt1 RIGHT OUTER JOIN v0 ON HEX((NOT (NULL))) RIGHT OUTER JOIN rt0 ON (~ (rt0.c0)) COLLATE NOCASE WHERE (CAST(((rt0.c4)GLOB(rt1.c1)) AS REAL)) GROUP BY v0.c0, rt1.c3, rt1.c4, rt0.c1, rt0.c0, rt1.c1, rt0.c2 UNION SELECT ALL v0.c0, rt1.c3, rt1.c4, rt0.c1, rt0.c0, rt1.c1, rt0.c2 FROM rt1 RIGHT OUTER JOIN v0 ON HEX((NOT (NULL))) RIGHT OUTER JOIN rt0 ON (~ (rt0.c0)) COLLATE NOCASE WHERE ((NOT (CAST(((rt0.c4)GLOB(rt1.c1)) AS REAL)))) GROUP BY v0.c0, rt1.c3, rt1.c4, rt0.c1, rt0.c0, rt1.c1, rt0.c2 UNION SELECT ALL v0.c0, rt1.c3, rt1.c4, rt0.c1, rt0.c0, rt1.c1, rt0.c2 FROM rt1 RIGHT OUTER JOIN v0 ON HEX((NOT (NULL))) RIGHT OUTER JOIN rt0 ON (~ (rt0.c0)) COLLATE NOCASE WHERE (((CAST(((rt0.c4)GLOB(rt1.c1)) AS REAL)) ISNULL)) GROUP BY v0.c0, rt1.c3, rt1.c4, rt0.c1, rt0.c0, rt1.c1, rt0.c2;
SELECT ALL v0.c0, rt1.c3, rt1.c4, rt0.c1, rt0.c0, rt1.c1, rt0.c2 FROM rt1 RIGHT OUTER JOIN v0 ON HEX((NOT (NULL))) RIGHT OUTER JOIN rt0 ON (~ (rt0.c0)) COLLATE NOCASE GROUP BY v0.c0, rt1.c3, rt1.c4, rt0.c1, rt0.c0, rt1.c1, rt0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0) NOT NULL)) NOT BETWEEN (v0.c0) AND (TOTAL(TOTAL(AVG(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((v0.c0) NOT NULL)) NOT BETWEEN (v0.c0) AND (TOTAL(TOTAL(AVG(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((v0.c0) NOT NULL)) NOT BETWEEN (v0.c0) AND (TOTAL(TOTAL(AVG(v0.c0)))))) ISNULL);
SELECT ALL rt1.c2, rt1.c3 FROM rt1;
SELECT ALL rt1.c2, rt1.c3 FROM rt1 WHERE (CAST((rt1.c0 IN (rt1.c4)) AS REAL)) ORDER BY (CAST(rt1.c3 AS REAL) IN (((rt1.c4)>>(rt1.c2)))) ASC  NULLS FIRST;
SELECT rt1.c2, rt1.c3 FROM rt1 WHERE ((NOT (CAST((rt1.c0 IN (rt1.c4)) AS REAL)))) ORDER BY (CAST(rt1.c3 AS REAL) IN (((rt1.c4)>>(rt1.c2)))) ASC  NULLS FIRST;
SELECT ALL rt1.c2, rt1.c3 FROM rt1 WHERE (((CAST((rt1.c0 IN (rt1.c4)) AS REAL)) ISNULL)) ORDER BY (CAST(rt1.c3 AS REAL) IN (((rt1.c4)>>(rt1.c2)))) ASC  NULLS FIRST;
SELECT ALL rt1.c2, rt1.c3 FROM rt1;
SELECT DISTINCT rt0.c0, rt0.c4 FROM v0, rt0 LEFT OUTER JOIN rt1 ON rt0.c2;
SELECT DISTINCT rt0.c0, rt0.c4 FROM v0, rt0 LEFT OUTER JOIN rt1 ON rt0.c2 WHERE ((rt0.c3 COLLATE NOCASE IN ())) UNION SELECT DISTINCT rt0.c0, rt0.c4 FROM v0, rt0 LEFT OUTER JOIN rt1 ON rt0.c2 WHERE ((NOT ((rt0.c3 COLLATE NOCASE IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c4 FROM v0, rt0 LEFT OUTER JOIN rt1 ON rt0.c2 WHERE ((((rt0.c3 COLLATE NOCASE IN ())) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c4 FROM v0, rt0 LEFT OUTER JOIN rt1 ON rt0.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c3;
SELECT ALL rt1.c1, rt1.c0, rt1.c3 FROM rt1 WHERE (((rt1.c0)&(NULL)) COLLATE NOCASE) GROUP BY rt1.c1, rt1.c0, rt1.c3 UNION SELECT rt1.c1, rt1.c0, rt1.c3 FROM rt1 WHERE ((NOT (((rt1.c0)&(NULL)) COLLATE NOCASE))) GROUP BY rt1.c1, rt1.c0, rt1.c3 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c3 FROM rt1 WHERE (((((rt1.c0)&(NULL)) COLLATE NOCASE) ISNULL)) GROUP BY rt1.c1, rt1.c0, rt1.c3;
SELECT ALL rt1.c1, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c3;
SELECT rt0.c2, rt1.c0, rt1.c3, rt0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON '-1439884613' GROUP BY rt0.c2, rt1.c0, rt1.c3, rt0.c0;
SELECT ALL rt0.c2, rt1.c0, rt1.c3, rt0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON '-1439884613' GROUP BY rt0.c2, rt1.c0, rt1.c3, rt0.c0 HAVING COUNT(TOTAL(rt0.c4)) UNION ALL SELECT rt0.c2, rt1.c0, rt1.c3, rt0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON '-1439884613' GROUP BY rt0.c2, rt1.c0, rt1.c3, rt0.c0 HAVING (NOT (COUNT(TOTAL(rt0.c4)))) UNION ALL SELECT ALL rt0.c2, rt1.c0, rt1.c3, rt0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON '-1439884613' GROUP BY rt0.c2, rt1.c0, rt1.c3, rt0.c0 HAVING ((COUNT(TOTAL(rt0.c4))) ISNULL);
SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM rt0;
SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE (((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 END)GLOB(((rt0.c1) IS FALSE)))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 END)GLOB(((rt0.c1) IS FALSE)))))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE (((((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 END)GLOB(((rt0.c1) IS FALSE)))) ISNULL));
SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c4) IS TRUE)) BETWEEN (rt1.c2) AND (((rt1.c2)==(rt1.c0))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((((rt1.c4) IS TRUE)) BETWEEN (rt1.c2) AND (((rt1.c2)=(rt1.c0))))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c4) IS TRUE)) BETWEEN (rt1.c2) AND (((rt1.c2)=(rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c3, rt1.c0, rt0.c2, rt1.c4, rt0.c3, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c3, rt1.c0, rt0.c2, rt1.c4, rt0.c3, rt0.c0;
SELECT rt1.c3, rt1.c0, rt0.c2, rt1.c4, rt0.c3, rt0.c0 FROM rt0, rt1 WHERE ((NOT ((rt0.c0 IN ())))) GROUP BY rt1.c3, rt1.c0, rt0.c2, rt1.c4, rt0.c3, rt0.c0 UNION SELECT rt1.c3, rt1.c0, rt0.c2, rt1.c4, rt0.c3, rt0.c0 FROM rt0, rt1 WHERE ((NOT ((NOT ((rt0.c0 IN ())))))) GROUP BY rt1.c3, rt1.c0, rt0.c2, rt1.c4, rt0.c3, rt0.c0 UNION SELECT rt1.c3, rt1.c0, rt0.c2, rt1.c4, rt0.c3, rt0.c0 FROM rt0, rt1 WHERE ((((NOT ((rt0.c0 IN ())))) ISNULL)) GROUP BY rt1.c3, rt1.c0, rt0.c2, rt1.c4, rt0.c3, rt0.c0;
SELECT rt1.c3, rt1.c0, rt0.c2, rt1.c4, rt0.c3, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c3, rt1.c0, rt0.c2, rt1.c4, rt0.c3, rt0.c0;
SELECT rt1.c0, rt1.c4, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c4, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c1, rt1.c2 HAVING (rt1.c1 IN ()) COLLATE NOCASE UNION ALL SELECT ALL rt1.c0, rt1.c4, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c1, rt1.c2 HAVING (NOT ((rt1.c1 IN ()) COLLATE NOCASE)) UNION ALL SELECT ALL rt1.c0, rt1.c4, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c1, rt1.c2 HAVING (((rt1.c1 IN ()) COLLATE NOCASE) ISNULL);
SELECT rt1.c0, rt1.c4, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c4, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c1, rt1.c2 HAVING (rt1.c1 IN ()) COLLATE NOCASE UNION ALL SELECT ALL rt1.c0, rt1.c4, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c1, rt1.c2 HAVING (NOT ((rt1.c1 IN ()) COLLATE NOCASE)) UNION ALL SELECT ALL rt1.c0, rt1.c4, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c1, rt1.c2 HAVING (((rt1.c1 IN ()) COLLATE NOCASE) ISNULL);
SELECT rt1.c0, rt1.c4, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c1, rt1.c2;
SELECT MAX(CASE WHEN ((rt0.c0)AND(rt0.c3)) THEN CAST(rt0.c2 AS TEXT) WHEN rt0.c1 COLLATE BINARY THEN (((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c4))) WHEN ((rt0.c2) IS TRUE) THEN rt0.c2 COLLATE NOCASE ELSE (('2129134585') NOTNULL) END) FROM rt0 ORDER BY ((rt0.c0)+(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c1 END));
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c4) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c4))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c4) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0 CROSS JOIN rt1 ON (((+ (''))) IS FALSE);
SELECT DISTINCT * FROM rt0 CROSS JOIN rt1 ON (((+ (''))) IS FALSE) WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c0))) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN rt1 ON (((+ (''))) IS FALSE) WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c0))) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN rt1 ON (((+ (''))) IS FALSE) WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c0))) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN rt1 ON (((+ (''))) IS FALSE);
SELECT ALL rt1.c1, rt0.c3, rt0.c0, rt1.c4, rt1.c3 FROM rt1, rt0 RIGHT OUTER JOIN v0 ON (CASE '67351155'  WHEN rt0.c0 THEN rt0.c3 END IN ()) GROUP BY rt1.c1, rt0.c3, rt0.c0, rt1.c4, rt1.c3;
SELECT rt1.c1, rt0.c3, rt0.c0, rt1.c4, rt1.c3 FROM rt1, rt0 RIGHT OUTER JOIN v0 ON (CASE '67351155'  WHEN rt0.c0 THEN rt0.c3 END IN ()) WHERE (((((((((((((rt0.c0)AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)) COLLATE RTRIM) GROUP BY rt1.c1, rt0.c3, rt0.c0, rt1.c4, rt1.c3 UNION SELECT ALL rt1.c1, rt0.c3, rt0.c0, rt1.c4, rt1.c3 FROM rt1, rt0 RIGHT OUTER JOIN v0 ON (CASE '67351155'  WHEN rt0.c0 THEN rt0.c3 END IN ()) WHERE ((NOT (((((((((((((rt0.c0)AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)) COLLATE RTRIM))) GROUP BY rt1.c1, rt0.c3, rt0.c0, rt1.c4, rt1.c3 UNION SELECT rt1.c1, rt0.c3, rt0.c0, rt1.c4, rt1.c3 FROM rt1, rt0 RIGHT OUTER JOIN v0 ON (CASE '67351155'  WHEN rt0.c0 THEN rt0.c3 END IN ()) WHERE (((((((((((((((rt0.c0)AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)) COLLATE RTRIM) ISNULL)) GROUP BY rt1.c1, rt0.c3, rt0.c0, rt1.c4, rt1.c3;
SELECT ALL rt1.c1, rt0.c3, rt0.c0, rt1.c4, rt1.c3 FROM rt1, rt0 RIGHT OUTER JOIN v0 ON (CASE '67351155'  WHEN rt0.c0 THEN rt0.c3 END IN ()) GROUP BY rt1.c1, rt0.c3, rt0.c0, rt1.c4, rt1.c3;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(((TOTAL(SUM(v0.c0))) NOTNULL)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(((TOTAL(SUM(v0.c0))) NOTNULL)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(((TOTAL(SUM(v0.c0))) NOTNULL))) ISNULL);
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE ('bk	慱㽪OEG') UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT ('bk	慱㽪OEG'))) UNION ALL SELECT ALL * FROM rt1 WHERE ((('bk	慱㽪OEG') ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt1.c1, rt0.c2 FROM rt1, rt0 RIGHT OUTER JOIN v0 ON rt0.c4;
SELECT DISTINCT rt1.c1, rt0.c2 FROM rt1, rt0 RIGHT OUTER JOIN v0 ON rt0.c4 WHERE (IFNULL(((rt0.c1)<>(rt1.c4)), CASE rt1.c2  WHEN 0.4326748560596074 THEN rt0.c3 END)) UNION SELECT DISTINCT rt1.c1, rt0.c2 FROM rt1, rt0 RIGHT OUTER JOIN v0 ON rt0.c4 WHERE ((NOT (IFNULL(((rt0.c1)!=(rt1.c4)), CASE rt1.c2  WHEN 0.4326748560596074 THEN rt0.c3 END)))) UNION SELECT DISTINCT rt1.c1, rt0.c2 FROM rt1, rt0 RIGHT OUTER JOIN v0 ON rt0.c4 WHERE (((IFNULL(((rt0.c1)!=(rt1.c4)), CASE rt1.c2  WHEN 0.4326748560596074 THEN rt0.c3 END)) ISNULL));
SELECT DISTINCT rt1.c1, rt0.c2 FROM rt1, rt0 RIGHT OUTER JOIN v0 ON rt0.c4;
SELECT ALL rt1.c3, rt1.c0, v0.c0, rt1.c1, rt1.c4, rt1.c2 FROM rt1, v0 GROUP BY rt1.c3, rt1.c0, v0.c0, rt1.c1, rt1.c4, rt1.c2;
SELECT ALL rt1.c3, rt1.c0, v0.c0, rt1.c1, rt1.c4, rt1.c2 FROM rt1, v0 WHERE (CAST(rt1.c1 AS BLOB) COLLATE NOCASE) GROUP BY rt1.c3, rt1.c0, v0.c0, rt1.c1, rt1.c4, rt1.c2 UNION SELECT rt1.c3, rt1.c0, v0.c0, rt1.c1, rt1.c4, rt1.c2 FROM rt1, v0 WHERE ((NOT (CAST(rt1.c1 AS BLOB) COLLATE NOCASE))) GROUP BY rt1.c3, rt1.c0, v0.c0, rt1.c1, rt1.c4, rt1.c2 UNION SELECT rt1.c3, rt1.c0, v0.c0, rt1.c1, rt1.c4, rt1.c2 FROM rt1, v0 WHERE (((CAST(rt1.c1 AS BLOB) COLLATE NOCASE) ISNULL)) GROUP BY rt1.c3, rt1.c0, v0.c0, rt1.c1, rt1.c4, rt1.c2;
SELECT ALL rt1.c3, rt1.c0, v0.c0, rt1.c1, rt1.c4, rt1.c2 FROM rt1, v0 GROUP BY rt1.c3, rt1.c0, v0.c0, rt1.c1, rt1.c4, rt1.c2;
SELECT rt0.c1, rt1.c4 FROM rt0, v0, rt1 GROUP BY rt0.c1, rt1.c4;
SELECT ALL rt0.c1, rt1.c4 FROM rt0, v0, rt1 GROUP BY rt0.c1, rt1.c4 HAVING AVG(SUM(SUM(rt1.c1))) UNION ALL SELECT rt0.c1, rt1.c4 FROM rt0, v0, rt1 GROUP BY rt0.c1, rt1.c4 HAVING (NOT (AVG(SUM(SUM(rt1.c1))))) UNION ALL SELECT ALL rt0.c1, rt1.c4 FROM rt0, v0, rt1 GROUP BY rt0.c1, rt1.c4 HAVING ((AVG(SUM(SUM(rt1.c1)))) ISNULL);
SELECT ALL SUM(json_array_length(((v0.c0) NOTNULL), NULL)) FROM v0;
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (CASE WHEN LOWER(rt1.c1) THEN (~ (rt1.c0)) ELSE ((rt1.c1)%(rt1.c0)) END) UNION ALL SELECT * FROM rt1 WHERE ((NOT (CASE WHEN LOWER(rt1.c1) THEN (~ (rt1.c0)) ELSE ((rt1.c1)%(rt1.c0)) END))) UNION ALL SELECT ALL * FROM rt1 WHERE (((CASE WHEN LOWER(rt1.c1) THEN (~ (rt1.c0)) ELSE ((rt1.c1)%(rt1.c0)) END) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM rt1 CROSS JOIN rt0 ON ((((rt0.c3)AND(rt1.c4)))==(0.4261335567894817));
SELECT DISTINCT * FROM rt1 CROSS JOIN rt0 ON ((((rt0.c3)AND(rt1.c4)))==(0.4261335567894817)) WHERE (((((CASE WHEN rt1.c0 THEN 0.8347262704887267 ELSE 0X34a63878 END)AND((+ (rt1.c4)))))OR((- (rt0.c0))))) UNION SELECT DISTINCT * FROM rt1 CROSS JOIN rt0 ON ((((rt0.c3)AND(rt1.c4)))==(0.4261335567894817)) WHERE ((NOT (((((CASE WHEN rt1.c0 THEN 0.8347262704887267 ELSE 0X34a63878 END)AND((+ (rt1.c4)))))OR((- (rt0.c0))))))) UNION SELECT DISTINCT * FROM rt1 CROSS JOIN rt0 ON ((((rt0.c3)AND(rt1.c4)))=(0.4261335567894817)) WHERE (((((((CASE WHEN rt1.c0 THEN 0.8347262704887267 ELSE 0x34a63878 END)AND((+ (rt1.c4)))))OR((- (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1 CROSS JOIN rt0 ON ((((rt0.c3)AND(rt1.c4)))==(0.4261335567894817));
SELECT rt0.c4, rt0.c3, rt0.c1, v0.c0, rt0.c2, rt1.c0, rt1.c2, rt1.c4, rt1.c3 FROM rt1, v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, v0.c0, rt0.c2, rt1.c0, rt1.c2, rt1.c4, rt1.c3;
SELECT ALL rt0.c4, rt0.c3, rt0.c1, v0.c0, rt0.c2, rt1.c0, rt1.c2, rt1.c4, rt1.c3 FROM rt1, v0, rt0 WHERE (((UNICODE(rt1.c0)) BETWEEN (((rt1.c4) NOT BETWEEN ('236145333') AND (rt0.c0))) AND (rt1.c3))) GROUP BY rt0.c4, rt0.c3, rt0.c1, v0.c0, rt0.c2, rt1.c0, rt1.c2, rt1.c4, rt1.c3 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c1, v0.c0, rt0.c2, rt1.c0, rt1.c2, rt1.c4, rt1.c3 FROM rt1, v0, rt0 WHERE ((NOT (((UNICODE(rt1.c0)) BETWEEN (((rt1.c4) NOT BETWEEN ('236145333') AND (rt0.c0))) AND (rt1.c3))))) GROUP BY rt0.c4, rt0.c3, rt0.c1, v0.c0, rt0.c2, rt1.c0, rt1.c2, rt1.c4, rt1.c3 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c1, v0.c0, rt0.c2, rt1.c0, rt1.c2, rt1.c4, rt1.c3 FROM rt1, v0, rt0 WHERE (((((UNICODE(rt1.c0)) BETWEEN (((rt1.c4) NOT BETWEEN ('236145333') AND (rt0.c0))) AND (rt1.c3))) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c1, v0.c0, rt0.c2, rt1.c0, rt1.c2, rt1.c4, rt1.c3;
SELECT rt0.c4, rt0.c3, rt0.c1, v0.c0, rt0.c2, rt1.c0, rt1.c2, rt1.c4, rt1.c3 FROM rt1, v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, v0.c0, rt0.c2, rt1.c0, rt1.c2, rt1.c4, rt1.c3;
SELECT rt1.c1, rt1.c2 FROM v0, rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM v0, rt1 GROUP BY rt1.c1, rt1.c2 HAVING (((~ (NULL)))+(MAX(rt1.c2))) UNION ALL SELECT rt1.c1, rt1.c2 FROM v0, rt1 GROUP BY rt1.c1, rt1.c2 HAVING (NOT ((((~ (NULL)))+(MAX(rt1.c2))))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM v0, rt1 GROUP BY rt1.c1, rt1.c2 HAVING (((((~ (NULL)))+(MAX(rt1.c2)))) ISNULL);
SELECT rt1.c1, rt1.c2 FROM v0, rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM v0, rt1 GROUP BY rt1.c1, rt1.c2 HAVING (((~ (NULL)))+(MAX(rt1.c2))) UNION ALL SELECT rt1.c1, rt1.c2 FROM v0, rt1 GROUP BY rt1.c1, rt1.c2 HAVING (NOT ((((~ (NULL)))+(MAX(rt1.c2))))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM v0, rt1 GROUP BY rt1.c1, rt1.c2 HAVING (((((~ (NULL)))+(MAX(rt1.c2)))) ISNULL);
SELECT rt1.c1, rt1.c2 FROM v0, rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL * FROM v0 LEFT OUTER JOIN rt1 ON ((rt1.c3 COLLATE NOCASE) IS TRUE);
SELECT * FROM v0 LEFT OUTER JOIN rt1 ON ((rt1.c3 COLLATE NOCASE) IS TRUE) WHERE ((+ (((((rt1.c4)OR(rt1.c1)))OR(rt1.c0))))) UNION ALL SELECT * FROM v0 LEFT OUTER JOIN rt1 ON ((rt1.c3 COLLATE NOCASE) IS TRUE) WHERE ((NOT ((+ (((((rt1.c4)OR(rt1.c1)))OR(rt1.c0))))))) UNION ALL SELECT * FROM v0 LEFT OUTER JOIN rt1 ON ((rt1.c3 COLLATE NOCASE) IS TRUE) WHERE ((((+ (((((rt1.c4)OR(rt1.c1)))OR(rt1.c0))))) ISNULL));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt1 ON ((rt1.c3 COLLATE NOCASE) IS TRUE);
SELECT DISTINCT rt1.c4 FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c0 IN ())))>=((((rt1.c4)||(rt0.c2)))));
SELECT DISTINCT rt1.c4 FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c0 IN ())))>=((((rt1.c4)||(rt0.c2))))) WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4)) AS NUMERIC)) UNION SELECT DISTINCT rt1.c4 FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c0 IN ())))>=((((rt1.c4)||(rt0.c2))))) WHERE ((NOT (CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4)) AS NUMERIC)))) UNION SELECT DISTINCT rt1.c4 FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c0 IN ())))>=((((rt1.c4)||(rt0.c2))))) WHERE (((CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4)) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt1.c4 FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c0 IN ())))>=((((rt1.c4)||(rt0.c2)))));
SELECT rt1.c2, v0.c0, rt1.c1, rt1.c0, rt1.c4, rt1.c3 FROM rt1, v0 GROUP BY rt1.c2, v0.c0, rt1.c1, rt1.c0, rt1.c4, rt1.c3;
SELECT ALL rt1.c2, v0.c0, rt1.c1, rt1.c0, rt1.c4, rt1.c3 FROM rt1, v0 WHERE (x'') GROUP BY rt1.c2, v0.c0, rt1.c1, rt1.c0, rt1.c4, rt1.c3 UNION SELECT ALL rt1.c2, v0.c0, rt1.c1, rt1.c0, rt1.c4, rt1.c3 FROM rt1, v0 WHERE ((NOT (x''))) GROUP BY rt1.c2, v0.c0, rt1.c1, rt1.c0, rt1.c4, rt1.c3 UNION SELECT ALL rt1.c2, v0.c0, rt1.c1, rt1.c0, rt1.c4, rt1.c3 FROM rt1, v0 WHERE (((x'') ISNULL)) GROUP BY rt1.c2, v0.c0, rt1.c1, rt1.c0, rt1.c4, rt1.c3;
SELECT rt1.c2, v0.c0, rt1.c1, rt1.c0, rt1.c4, rt1.c3 FROM rt1, v0 GROUP BY rt1.c2, v0.c0, rt1.c1, rt1.c0, rt1.c4, rt1.c3;
SELECT rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2;
SELECT ALL rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2 HAVING MIN(rt0.c2) COLLATE BINARY UNION ALL SELECT ALL rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2 HAVING (NOT (MIN(rt0.c2) COLLATE BINARY)) UNION ALL SELECT rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2 HAVING ((MIN(rt0.c2) COLLATE BINARY) ISNULL);
SELECT rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2;
SELECT ALL rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2 HAVING MIN(rt0.c2) COLLATE BINARY UNION ALL SELECT ALL rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2 HAVING (NOT (MIN(rt0.c2) COLLATE BINARY)) UNION ALL SELECT rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2 HAVING ((MIN(rt0.c2) COLLATE BINARY) ISNULL);
SELECT rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2;
SELECT v0.c0, rt1.c3, rt1.c0 FROM rt1, rt0, v0;
SELECT ALL v0.c0, rt1.c3, rt1.c0 FROM rt1, rt0, v0 WHERE ((((x'')) NOT BETWEEN ((-1671746202)) AND ((((rt0.c4) ISNULL))))) UNION ALL SELECT ALL v0.c0, rt1.c3, rt1.c0 FROM rt1, rt0, v0 WHERE ((NOT ((((x'')) NOT BETWEEN ((-1671746202)) AND ((((rt0.c4) ISNULL))))))) UNION ALL SELECT v0.c0, rt1.c3, rt1.c0 FROM rt1, rt0, v0 WHERE ((((((x'')) NOT BETWEEN ((-1671746202)) AND ((((rt0.c4) ISNULL))))) ISNULL));
SELECT v0.c0, rt1.c3, rt1.c0 FROM rt1, rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (0.14159628900383814) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (0.14159628900383814))) UNION SELECT DISTINCT * FROM rt0 WHERE (((0.14159628900383814) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c3, rt1.c0, v0.c0, rt1.c2, rt0.c4, rt0.c0, rt1.c3, rt1.c1, rt0.c2, rt0.c1 FROM v0, rt1 RIGHT OUTER JOIN rt0 ON (((rt1.c4 IN ()))||(((rt0.c2)*(rt1.c0)))) GROUP BY rt0.c3, rt1.c0, v0.c0, rt1.c2, rt0.c4, rt0.c0, rt1.c3, rt1.c1, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt1.c0, v0.c0, rt1.c2, rt0.c4, rt0.c0, rt1.c3, rt1.c1, rt0.c2, rt0.c1 FROM v0, rt1 RIGHT OUTER JOIN rt0 ON (((rt1.c4 IN ()))||(((rt0.c2)*(rt1.c0)))) WHERE (x'977a') GROUP BY rt0.c3, rt1.c0, v0.c0, rt1.c2, rt0.c4, rt0.c0, rt1.c3, rt1.c1, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c3, rt1.c0, v0.c0, rt1.c2, rt0.c4, rt0.c0, rt1.c3, rt1.c1, rt0.c2, rt0.c1 FROM v0, rt1 RIGHT OUTER JOIN rt0 ON (((rt1.c4 IN ()))||(((rt0.c2)*(rt1.c0)))) WHERE ((NOT (x'977a'))) GROUP BY rt0.c3, rt1.c0, v0.c0, rt1.c2, rt0.c4, rt0.c0, rt1.c3, rt1.c1, rt0.c2, rt0.c1 UNION SELECT rt0.c3, rt1.c0, v0.c0, rt1.c2, rt0.c4, rt0.c0, rt1.c3, rt1.c1, rt0.c2, rt0.c1 FROM v0, rt1 RIGHT OUTER JOIN rt0 ON (((rt1.c4 IN ()))||(((rt0.c2)*(rt1.c0)))) WHERE (((x'977a') ISNULL)) GROUP BY rt0.c3, rt1.c0, v0.c0, rt1.c2, rt0.c4, rt0.c0, rt1.c3, rt1.c1, rt0.c2, rt0.c1;
SELECT rt0.c3, rt1.c0, v0.c0, rt1.c2, rt0.c4, rt0.c0, rt1.c3, rt1.c1, rt0.c2, rt0.c1 FROM v0, rt1 RIGHT OUTER JOIN rt0 ON (((rt1.c4 IN ()))||(((rt0.c2)*(rt1.c0)))) GROUP BY rt0.c3, rt1.c0, v0.c0, rt1.c2, rt0.c4, rt0.c0, rt1.c3, rt1.c1, rt0.c2, rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((- (v0.c0)))AND(COUNT(*))))OR(COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((((- (v0.c0)))AND(COUNT(*))))OR(COUNT(*))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((((- (v0.c0)))AND(COUNT(*))))OR(COUNT(*)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((- (v0.c0)))AND(COUNT(*))))OR(COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((((- (v0.c0)))AND(COUNT(*))))OR(COUNT(*))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((((- (v0.c0)))AND(COUNT(*))))OR(COUNT(*)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (CASE WHEN CAST(rt0.c4 AS TEXT) THEN (((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c4))) END) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (CASE WHEN CAST(rt0.c4 AS TEXT) THEN (((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c4))) END))) UNION ALL SELECT * FROM rt0, v0 WHERE (((CASE WHEN CAST(rt0.c4 AS TEXT) THEN (((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c4))) END) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CASE ((((x'')AND(v0.c0)))OR(v0.c0))  WHEN (- (v0.c0)) THEN (((v0.c0))>=((v0.c0))) END) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CASE ((((x'')AND(v0.c0)))OR(v0.c0))  WHEN (- (v0.c0)) THEN (((v0.c0))>=((v0.c0))) END))) UNION SELECT DISTINCT * FROM v0 WHERE (((CASE ((((x'')AND(v0.c0)))OR(v0.c0))  WHEN (- (v0.c0)) THEN (((v0.c0))>=((v0.c0))) END) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt1.c2, v0.c0, rt1.c4, rt1.c0 FROM rt0, rt1, v0 GROUP BY rt1.c2, v0.c0, rt1.c4, rt1.c0;
SELECT ALL rt1.c2, v0.c0, rt1.c4, rt1.c0 FROM rt0, rt1, v0 WHERE (DATETIME(((rt0.c3)<=(rt1.c2)), (v0.c0 IN ()), ((rt1.c4)/(rt0.c1)))) GROUP BY rt1.c2, v0.c0, rt1.c4, rt1.c0 UNION SELECT ALL rt1.c2, v0.c0, rt1.c4, rt1.c0 FROM rt0, rt1, v0 WHERE ((NOT (DATETIME(((rt0.c3)<=(rt1.c2)), (v0.c0 IN ()), ((rt1.c4)/(rt0.c1)))))) GROUP BY rt1.c2, v0.c0, rt1.c4, rt1.c0 UNION SELECT ALL rt1.c2, v0.c0, rt1.c4, rt1.c0 FROM rt0, rt1, v0 WHERE (((DATETIME(((rt0.c3)<=(rt1.c2)), (v0.c0 IN ()), ((rt1.c4)/(rt0.c1)))) ISNULL)) GROUP BY rt1.c2, v0.c0, rt1.c4, rt1.c0;
SELECT rt1.c2, v0.c0, rt1.c4, rt1.c0 FROM rt0, rt1, v0 GROUP BY rt1.c2, v0.c0, rt1.c4, rt1.c0;
SELECT rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3;
SELECT ALL rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3 HAVING COUNT(*) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3;
SELECT ALL rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3 HAVING COUNT(*) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3;
SELECT * FROM rt0, rt1;
SELECT ALL * FROM rt0, rt1 WHERE (LTRIM(((rt0.c2) NOT NULL), ((rt0.c3)=(rt0.c1)))) UNION ALL SELECT ALL * FROM rt0 NOT INDEXED, rt1 WHERE ((NOT (LTRIM(((rt0.c2) NOT NULL), ((rt0.c3)==(rt0.c1)))))) UNION ALL SELECT * FROM rt0 NOT INDEXED, rt1 WHERE (((LTRIM(((rt0.c2) NOT NULL), ((rt0.c3)=(rt0.c1)))) ISNULL));
SELECT * FROM rt0, rt1;
SELECT DISTINCT rt1.c4, rt0.c1, rt1.c3 FROM rt0, rt1, v0;
SELECT DISTINCT rt1.c4, rt0.c1, rt1.c3 FROM rt0, rt1, v0 WHERE (((-74826399)<(x'c6a1b1fd'))) UNION SELECT DISTINCT rt1.c4, rt0.c1, rt1.c3 FROM rt0, rt1, v0 WHERE ((NOT (((-74826399)<(x'c6a1b1fd'))))) UNION SELECT DISTINCT rt1.c4, rt0.c1, rt1.c3 FROM rt0, rt1, v0 WHERE (((((-74826399)<(x'c6a1b1fd'))) ISNULL));
SELECT DISTINCT rt1.c4, rt0.c1, rt1.c3 FROM rt0, rt1, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0)AND(v0.c0)))AND(NULL))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)AND(v0.c0)))AND(NULL))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(NULL))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt1.c2, rt1.c3, rt1.c4, rt1.c0 FROM v0, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c4, rt1.c0;
SELECT rt1.c2, rt1.c3, rt1.c4, rt1.c0 FROM v0, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c4, rt1.c0 HAVING (((((rt1.c0)-(COUNT(SUM(rt1.c0)))), DATE(MIN(AVG(GROUP_CONCAT(COUNT(*)))), NULL, '0.4885563817531243', MAX(rt1.c3), rt1.c2), COUNT(MIN(rt1.c4))))!=(((((SUM(COUNT(*)))) BETWEEN ((SUM(rt1.c2))) AND ((0.3810332858408225))), ((MIN(COUNT(*))) NOT NULL), COUNT(*)))) UNION ALL SELECT rt1.c2, rt1.c3, rt1.c4, rt1.c0 FROM v0, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c4, rt1.c0 HAVING (NOT ((((((rt1.c0)-(COUNT(SUM(rt1.c0)))), DATE(MIN(AVG(GROUP_CONCAT(COUNT(*)))), NULL, '0.4885563817531243', MAX(rt1.c3), rt1.c2), COUNT(MIN(rt1.c4))))!=(((((SUM(COUNT(*)))) BETWEEN ((SUM(rt1.c2))) AND ((0.3810332858408225))), ((MIN(COUNT(*))) NOT NULL), COUNT(*)))))) UNION ALL SELECT rt1.c2, rt1.c3, rt1.c4, rt1.c0 FROM v0, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c4, rt1.c0 HAVING (((((((rt1.c0)-(COUNT(SUM(rt1.c0)))), DATE(MIN(AVG(GROUP_CONCAT(COUNT(*)))), NULL, '0.4885563817531243', MAX(rt1.c3), rt1.c2), COUNT(MIN(rt1.c4))))<>(((((SUM(COUNT(*)))) BETWEEN ((SUM(rt1.c2))) AND ((0.3810332858408225))), ((MIN(COUNT(*))) NOT NULL), COUNT(*))))) ISNULL);
SELECT ALL rt0.c3, rt1.c2, rt1.c4, rt0.c1 FROM rt0, rt1, v0;
SELECT ALL rt0.c3, rt1.c2, rt1.c4, rt0.c1 FROM rt0, rt1, v0 WHERE (rt1.c3) UNION ALL SELECT rt0.c3, rt1.c2, rt1.c4, rt0.c1 FROM rt0, rt1, v0 WHERE ((NOT (rt1.c3))) UNION ALL SELECT rt0.c3, rt1.c2, rt1.c4, rt0.c1 FROM rt0, rt1, v0 WHERE (((rt1.c3) ISNULL));
SELECT ALL rt0.c3, rt1.c2, rt1.c4, rt0.c1 FROM rt0, rt1, v0;
SELECT DISTINCT rt1.c4 FROM rt1;
SELECT DISTINCT rt1.c4 FROM rt1 WHERE (DATETIME(rt1.c2 COLLATE RTRIM, rt1.c2 COLLATE RTRIM, rt1.c3 COLLATE RTRIM)) UNION SELECT DISTINCT rt1.c4 FROM rt1 WHERE ((NOT (DATETIME(rt1.c2 COLLATE RTRIM, rt1.c2 COLLATE RTRIM, rt1.c3 COLLATE RTRIM)))) UNION SELECT DISTINCT rt1.c4 FROM rt1 WHERE (((DATETIME(rt1.c2 COLLATE RTRIM, rt1.c2 COLLATE RTRIM, rt1.c3 COLLATE RTRIM)) ISNULL));
SELECT DISTINCT rt1.c4 FROM rt1;
SELECT rt0.c2, rt1.c3 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c3;
SELECT rt0.c2, rt1.c3 FROM rt0, rt1 WHERE (TOTAL_CHANGES()) GROUP BY rt0.c2, rt1.c3 UNION SELECT rt0.c2, rt1.c3 FROM rt0, rt1 WHERE ((NOT (TOTAL_CHANGES()))) GROUP BY rt0.c2, rt1.c3 UNION SELECT rt0.c2, rt1.c3 FROM rt0, rt1 WHERE (((TOTAL_CHANGES()) ISNULL)) GROUP BY rt0.c2, rt1.c3;
SELECT rt0.c2, rt1.c3 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c3;
SELECT rt1.c1 FROM rt1, v0, rt0 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1, v0, rt0 GROUP BY rt1.c1 HAVING TOTAL(((SUM(COUNT(AVG(GROUP_CONCAT(rt1.c0)))))<<(GROUP_CONCAT(SUM(rt1.c1))))) UNION ALL SELECT rt1.c1 FROM rt1, v0, rt0 GROUP BY rt1.c1 HAVING (NOT (TOTAL(((SUM(COUNT(AVG(GROUP_CONCAT(rt1.c0)))))<<(GROUP_CONCAT(SUM(rt1.c1))))))) UNION ALL SELECT ALL rt1.c1 FROM rt1, v0, rt0 GROUP BY rt1.c1 HAVING ((TOTAL(((SUM(COUNT(AVG(GROUP_CONCAT(rt1.c0)))))<<(GROUP_CONCAT(SUM(rt1.c1)))))) ISNULL);
SELECT rt1.c0, rt1.c3, rt1.c2, rt0.c3, rt1.c4, rt1.c1 FROM rt0, rt1;
SELECT rt1.c0, rt1.c3, rt1.c2, rt0.c3, rt1.c4, rt1.c1 FROM rt0, rt1 WHERE (((((((((((((CAST(rt0.c0 AS NUMERIC))AND(((rt1.c3)<<(rt1.c2)))))AND(((rt1.c1)>=(rt1.c2)))))OR(CASE rt0.c4  WHEN rt1.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt1.c2 WHEN rt0.c3 THEN rt1.c4 ELSE NULL END)))AND(((rt1.c2)>>(rt0.c1)))))OR(TIME(rt1.c1, rt0.c1, rt1.c2, rt0.c0, rt1.c4))))AND((- (rt1.c3))))) UNION ALL SELECT ALL rt1.c0, rt1.c3, rt1.c2, rt0.c3, rt1.c4, rt1.c1 FROM rt0, rt1 WHERE ((NOT (((((((((((((CAST(rt0.c0 AS NUMERIC))AND(((rt1.c3)<<(rt1.c2)))))AND(((rt1.c1)>=(rt1.c2)))))OR(CASE rt0.c4  WHEN rt1.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt1.c2 WHEN rt0.c3 THEN rt1.c4 ELSE NULL END)))AND(((rt1.c2)>>(rt0.c1)))))OR(TIME(rt1.c1, rt0.c1, rt1.c2, rt0.c0, rt1.c4))))AND((- (rt1.c3))))))) UNION ALL SELECT rt1.c0, rt1.c3, rt1.c2, rt0.c3, rt1.c4, rt1.c1 FROM rt0, rt1 WHERE (((((((((((((((CAST(rt0.c0 AS NUMERIC))AND(((rt1.c3)<<(rt1.c2)))))AND(((rt1.c1)>=(rt1.c2)))))OR(CASE rt0.c4  WHEN rt1.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt1.c2 WHEN rt0.c3 THEN rt1.c4 ELSE NULL END)))AND(((rt1.c2)>>(rt0.c1)))))OR(TIME(rt1.c1, rt0.c1, rt1.c2, rt0.c0, rt1.c4))))AND((- (rt1.c3))))) ISNULL));
SELECT rt1.c0, rt1.c3, rt1.c2, rt0.c3, rt1.c4, rt1.c1 FROM rt0, rt1;
SELECT DISTINCT rt0.c1 FROM rt0, rt1, v0;
SELECT DISTINCT rt0.c1 FROM rt0, rt1, v0 WHERE (((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1)))==(((rt1.c4)IS NOT(rt0.c0))))) UNION SELECT DISTINCT rt0.c1 FROM rt0, rt1, v0 WHERE ((NOT (((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1)))=(((rt1.c4)IS NOT(rt0.c0))))))) UNION SELECT DISTINCT rt0.c1 FROM rt0, rt1, v0 WHERE (((((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1)))=(((rt1.c4)IS NOT(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0, rt1, v0;
SELECT rt1.c0, rt0.c2, rt0.c1, rt1.c3, rt1.c1, rt1.c4, rt1.c2, rt0.c3, v0.c0, rt0.c0 FROM rt1, rt0, v0 GROUP BY rt1.c0, rt0.c2, rt0.c1, rt1.c3, rt1.c1, rt1.c4, rt1.c2, rt0.c3, v0.c0, rt0.c0;
SELECT rt1.c0, rt0.c2, rt0.c1, rt1.c3, rt1.c1, rt1.c4, rt1.c2, rt0.c3, v0.c0, rt0.c0 FROM rt1, rt0, v0 WHERE (((CAST(872480883 AS INTEGER)) ISNULL)) GROUP BY rt1.c0, rt0.c2, rt0.c1, rt1.c3, rt1.c1, rt1.c4, rt1.c2, rt0.c3, v0.c0, rt0.c0 UNION SELECT rt1.c0, rt0.c2, rt0.c1, rt1.c3, rt1.c1, rt1.c4, rt1.c2, rt0.c3, v0.c0, rt0.c0 FROM rt1, rt0, v0 WHERE ((NOT (((CAST(872480883 AS INTEGER)) ISNULL)))) GROUP BY rt1.c0, rt0.c2, rt0.c1, rt1.c3, rt1.c1, rt1.c4, rt1.c2, rt0.c3, v0.c0, rt0.c0 UNION SELECT ALL rt1.c0, rt0.c2, rt0.c1, rt1.c3, rt1.c1, rt1.c4, rt1.c2, rt0.c3, v0.c0, rt0.c0 FROM rt1, rt0, v0 WHERE (((((CAST(872480883 AS INTEGER)) ISNULL)) ISNULL)) GROUP BY rt1.c0, rt0.c2, rt0.c1, rt1.c3, rt1.c1, rt1.c4, rt1.c2, rt0.c3, v0.c0, rt0.c0;
SELECT rt1.c0, rt0.c2, rt0.c1, rt1.c3, rt1.c1, rt1.c4, rt1.c2, rt0.c3, v0.c0, rt0.c0 FROM rt1, rt0, v0 GROUP BY rt1.c0, rt0.c2, rt0.c1, rt1.c3, rt1.c1, rt1.c4, rt1.c2, rt0.c3, v0.c0, rt0.c0;
SELECT rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2;
SELECT rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2 HAVING rt0.c3 UNION ALL SELECT rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2 HAVING (NOT (rt0.c3)) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2 HAVING ((rt0.c3) ISNULL);
SELECT rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2;
SELECT rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2 HAVING rt0.c3 UNION ALL SELECT rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2 HAVING (NOT (rt0.c3)) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2 HAVING ((rt0.c3) ISNULL);
SELECT rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2;
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (NOT (v0.c0)) COLLATE NOCASE RIGHT OUTER JOIN rt1 ON CAST(v0.c0 AS BLOB);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (NOT (v0.c0)) COLLATE NOCASE RIGHT OUTER JOIN rt1 ON CAST(v0.c0 AS BLOB) WHERE ((~ (CAST(rt0.c1 AS BLOB)))) ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt0.c2 THEN rt0.c4 WHEN rt1.c4 THEN v0.c0 END) ISNULL)  NULLS FIRST;
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (NOT (v0.c0)) COLLATE NOCASE RIGHT OUTER JOIN rt1 ON CAST(v0.c0 AS BLOB) WHERE ((NOT ((~ (CAST(rt0.c1 AS BLOB)))))) ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt0.c2 THEN rt0.c4 WHEN rt1.c4 THEN v0.c0 END) ISNULL)  NULLS FIRST;
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (NOT (v0.c0)) COLLATE NOCASE RIGHT OUTER JOIN rt1 ON CAST(v0.c0 AS BLOB) WHERE ((((~ (CAST(rt0.c1 AS BLOB)))) ISNULL)) ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt0.c2 THEN rt0.c4 WHEN rt1.c4 THEN v0.c0 END) ISNULL)  NULLS FIRST;
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (NOT (v0.c0)) COLLATE NOCASE RIGHT OUTER JOIN rt1 ON CAST(v0.c0 AS BLOB);
SELECT DISTINCT * FROM rt0 INNER JOIN rt1 ON rt0.c2;
SELECT DISTINCT * FROM rt0 INNER JOIN rt1 ON rt0.c2 WHERE (rt1.c2) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED INNER JOIN rt1 ON rt0.c2 WHERE ((NOT (rt1.c2))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN rt1 ON rt0.c2 WHERE (((rt1.c2) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN rt1 ON rt0.c2;
SELECT ALL rt0.c1 FROM rt0 NOT INDEXED RIGHT OUTER JOIN v0 ON CAST((~ (v0.c0)) AS REAL) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON CAST((~ (v0.c0)) AS REAL) WHERE (CASE WHEN NULL THEN LOWER(x'') ELSE ((((v0.c0)OR(v0.c0)))OR(rt0.c2)) END) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON CAST((~ (v0.c0)) AS REAL) WHERE ((NOT (CASE WHEN NULL THEN LOWER(x'') ELSE ((((v0.c0)OR(v0.c0)))OR(rt0.c2)) END))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON CAST((~ (v0.c0)) AS REAL) WHERE (((CASE WHEN NULL THEN LOWER(x'') ELSE ((((v0.c0)OR(v0.c0)))OR(rt0.c2)) END) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 NOT INDEXED RIGHT OUTER JOIN v0 ON CAST((~ (v0.c0)) AS REAL) GROUP BY rt0.c1;
SELECT ALL rt1.c4, rt0.c2, rt1.c0, rt0.c1, rt0.c0 FROM rt0, rt1, v0 GROUP BY rt1.c4, rt0.c2, rt1.c0, rt0.c1, rt0.c0;
SELECT ALL rt1.c4, rt0.c2, rt1.c0, rt0.c1, rt0.c0 FROM rt0, rt1, v0 GROUP BY rt1.c4, rt0.c2, rt1.c0, rt0.c1, rt0.c0 HAVING AVG(COALESCE(rt1.c2, GROUP_CONCAT(GROUP_CONCAT(AVG(rt0.c0))), rt1.c0, GROUP_CONCAT(MAX(SUM(rt0.c2))))) UNION ALL SELECT rt1.c4, rt0.c2, rt1.c0, rt0.c1, rt0.c0 FROM rt0, rt1, v0 GROUP BY rt1.c4, rt0.c2, rt1.c0, rt0.c1, rt0.c0 HAVING (NOT (AVG(COALESCE(rt1.c2, GROUP_CONCAT(GROUP_CONCAT(AVG(rt0.c0))), rt1.c0, GROUP_CONCAT(MAX(SUM(rt0.c2))))))) UNION ALL SELECT rt1.c4, rt0.c2, rt1.c0, rt0.c1, rt0.c0 FROM rt0, rt1, v0 GROUP BY rt1.c4, rt0.c2, rt1.c0, rt0.c1, rt0.c0 HAVING ((AVG(COALESCE(rt1.c2, GROUP_CONCAT(GROUP_CONCAT(AVG(rt0.c0))), rt1.c0, GROUP_CONCAT(MAX(SUM(rt0.c2)))))) ISNULL);
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (CAST(((rt0.c2)+(rt0.c2)) AS NUMERIC)) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (CAST(((rt0.c2)+(rt0.c2)) AS NUMERIC)))) UNION ALL SELECT * FROM v0, rt0 WHERE (((CAST(((rt0.c2)+(rt0.c2)) AS NUMERIC)) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT rt1.c2, rt0.c4, v0.c0, rt0.c2, rt1.c0, rt1.c1, rt0.c1, rt1.c3, rt0.c3 FROM v0, rt0, rt1;
SELECT DISTINCT rt1.c2, rt0.c4, v0.c0, rt0.c2, rt1.c0, rt1.c1, rt0.c1, rt1.c3, rt0.c3 FROM v0, rt0, rt1 WHERE (((((((rt1.c4)AND(')2')))AND(0.8429297747348303))) BETWEEN ((rt1.c0 IN ())) AND (((rt1.c2)-(v0.c0))))) UNION SELECT DISTINCT rt1.c2, rt0.c4, v0.c0, rt0.c2, rt1.c0, rt1.c1, rt0.c1, rt1.c3, rt0.c3 FROM v0, rt0, rt1 WHERE ((NOT (((((((rt1.c4)AND(')2')))AND(0.8429297747348303))) BETWEEN ((rt1.c0 IN ())) AND (((rt1.c2)-(v0.c0))))))) UNION SELECT DISTINCT rt1.c2, rt0.c4, v0.c0, rt0.c2, rt1.c0, rt1.c1, rt0.c1, rt1.c3, rt0.c3 FROM v0, rt0, rt1 WHERE (((((((((rt1.c4)AND(')2')))AND(0.8429297747348303))) BETWEEN ((rt1.c0 IN ())) AND (((rt1.c2)-(v0.c0))))) ISNULL));
SELECT DISTINCT rt1.c2, rt0.c4, v0.c0, rt0.c2, rt1.c0, rt1.c1, rt0.c1, rt1.c3, rt0.c3 FROM v0, rt0, rt1;
SELECT ALL rt1.c4, rt0.c2, rt1.c1, rt0.c1, rt1.c3, rt1.c0, rt0.c3, rt0.c4, rt0.c0, rt1.c2 FROM rt0, rt1 GROUP BY rt1.c4, rt0.c2, rt1.c1, rt0.c1, rt1.c3, rt1.c0, rt0.c3, rt0.c4, rt0.c0, rt1.c2;
SELECT ALL rt1.c4, rt0.c2, rt1.c1, rt0.c1, rt1.c3, rt1.c0, rt0.c3, rt0.c4, rt0.c0, rt1.c2 FROM rt0, rt1 WHERE (NULL) GROUP BY rt1.c4, rt0.c2, rt1.c1, rt0.c1, rt1.c3, rt1.c0, rt0.c3, rt0.c4, rt0.c0, rt1.c2 UNION SELECT rt1.c4, rt0.c2, rt1.c1, rt0.c1, rt1.c3, rt1.c0, rt0.c3, rt0.c4, rt0.c0, rt1.c2 FROM rt0, rt1 WHERE ((NOT (NULL))) GROUP BY rt1.c4, rt0.c2, rt1.c1, rt0.c1, rt1.c3, rt1.c0, rt0.c3, rt0.c4, rt0.c0, rt1.c2 UNION SELECT rt1.c4, rt0.c2, rt1.c1, rt0.c1, rt1.c3, rt1.c0, rt0.c3, rt0.c4, rt0.c0, rt1.c2 FROM rt0, rt1 WHERE (((NULL) ISNULL)) GROUP BY rt1.c4, rt0.c2, rt1.c1, rt0.c1, rt1.c3, rt1.c0, rt0.c3, rt0.c4, rt0.c0, rt1.c2;
SELECT ALL rt1.c4, rt0.c2, rt1.c1, rt0.c1, rt1.c3, rt1.c0, rt0.c3, rt0.c4, rt0.c0, rt1.c2 FROM rt0, rt1 GROUP BY rt1.c4, rt0.c2, rt1.c1, rt0.c1, rt1.c3, rt1.c0, rt0.c3, rt0.c4, rt0.c0, rt1.c2;
SELECT rt1.c4 FROM rt1 GROUP BY rt1.c4;
SELECT ALL rt1.c4 FROM rt1 GROUP BY rt1.c4 HAVING GROUP_CONCAT(((((rt1.c2)OR(COUNT(*))))OR(COUNT(GROUP_CONCAT(rt1.c2))))) UNION ALL SELECT ALL rt1.c4 FROM rt1 GROUP BY rt1.c4 HAVING (NOT (GROUP_CONCAT(((((rt1.c2)OR(COUNT(*))))OR(COUNT(GROUP_CONCAT(rt1.c2))))))) UNION ALL SELECT ALL rt1.c4 FROM rt1 GROUP BY rt1.c4 HAVING ((GROUP_CONCAT(((((rt1.c2)OR(COUNT(*))))OR(COUNT(GROUP_CONCAT(rt1.c2)))))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((((((v0.c0) ISNULL))AND(x'7f6b')))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((((v0.c0) ISNULL))AND(x'7f6b')))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))))) UNION ALL SELECT * FROM v0 WHERE (((((((((v0.c0) ISNULL))AND(x'7f6b')))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt1.c3, rt0.c1, rt1.c1, rt1.c0, rt1.c2, v0.c0, rt1.c4, rt0.c3, rt0.c2 FROM rt1, rt0, v0;
SELECT DISTINCT rt1.c3, rt0.c1, rt1.c1, rt1.c0, rt1.c2, v0.c0, rt1.c4, rt0.c3, rt0.c2 FROM rt1, rt0, v0 WHERE (((CASE rt1.c2  WHEN rt1.c0 THEN rt0.c1 END) NOT BETWEEN (CASE WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN rt1.c4 WHEN rt0.c4 THEN rt0.c1 END) AND ((~ (rt0.c2))))) UNION SELECT DISTINCT rt1.c3, rt0.c1, rt1.c1, rt1.c0, rt1.c2, v0.c0, rt1.c4, rt0.c3, rt0.c2 FROM rt1, rt0, v0 WHERE ((NOT (((CASE rt1.c2  WHEN rt1.c0 THEN rt0.c1 END) NOT BETWEEN (CASE WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN rt1.c4 WHEN rt0.c4 THEN rt0.c1 END) AND ((~ (rt0.c2))))))) UNION SELECT DISTINCT rt1.c3, rt0.c1, rt1.c1, rt1.c0, rt1.c2, v0.c0, rt1.c4, rt0.c3, rt0.c2 FROM rt1 NOT INDEXED, rt0, v0 WHERE (((((CASE rt1.c2  WHEN rt1.c0 THEN rt0.c1 END) NOT BETWEEN (CASE WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN rt1.c4 WHEN rt0.c4 THEN rt0.c1 END) AND ((~ (rt0.c2))))) ISNULL));
SELECT DISTINCT rt1.c3, rt0.c1, rt1.c1, rt1.c0, rt1.c2, v0.c0, rt1.c4, rt0.c3, rt0.c2 FROM rt1, rt0, v0;
SELECT v0.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM rt1, v0 GROUP BY v0.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c0;
SELECT ALL v0.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM rt1, v0 WHERE ((- (((v0.c0)%(rt1.c2))))) GROUP BY v0.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c0 UNION SELECT v0.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM rt1, v0 WHERE ((NOT ((- (((v0.c0)%(rt1.c2))))))) GROUP BY v0.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c0 UNION SELECT ALL v0.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM rt1, v0 WHERE ((((- (((v0.c0)%(rt1.c2))))) ISNULL)) GROUP BY v0.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c0;
SELECT v0.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM rt1, v0 GROUP BY v0.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c0;
SELECT v0.c0, rt1.c1, rt0.c2, rt0.c4, rt1.c4, rt1.c3, rt1.c2, rt0.c0 FROM rt1, rt0, v0 GROUP BY v0.c0, rt1.c1, rt0.c2, rt0.c4, rt1.c4, rt1.c3, rt1.c2, rt0.c0;
SELECT v0.c0, rt1.c1, rt0.c2, rt0.c4, rt1.c4, rt1.c3, rt1.c2, rt0.c0 FROM rt1, rt0, v0 GROUP BY v0.c0, rt1.c1, rt0.c2, rt0.c4, rt1.c4, rt1.c3, rt1.c2, rt0.c0 HAVING TOTAL(MAX(SUM(rt0.c0)) COLLATE NOCASE) UNION ALL SELECT v0.c0, rt1.c1, rt0.c2, rt0.c4, rt1.c4, rt1.c3, rt1.c2, rt0.c0 FROM rt1, rt0, v0 GROUP BY v0.c0, rt1.c1, rt0.c2, rt0.c4, rt1.c4, rt1.c3, rt1.c2, rt0.c0 HAVING (NOT (TOTAL(MAX(SUM(rt0.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL v0.c0, rt1.c1, rt0.c2, rt0.c4, rt1.c4, rt1.c3, rt1.c2, rt0.c0 FROM rt1, rt0, v0 GROUP BY v0.c0, rt1.c1, rt0.c2, rt0.c4, rt1.c4, rt1.c3, rt1.c2, rt0.c0 HAVING ((TOTAL(MAX(SUM(rt0.c0)) COLLATE NOCASE)) ISNULL);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt0.c4)) BETWEEN ((CAST(rt1.c0 AS BLOB))) AND ((((rt1.c1) NOT NULL))));
SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt0.c4)) BETWEEN ((CAST(rt1.c0 AS BLOB))) AND ((((rt1.c1) NOT NULL)))) WHERE (rt0.c2) UNION ALL SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt0.c4)) BETWEEN ((CAST(rt1.c0 AS BLOB))) AND ((((rt1.c1) NOT NULL)))) WHERE ((NOT (rt0.c2))) UNION ALL SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt0.c4)) BETWEEN ((CAST(rt1.c0 AS BLOB))) AND ((((rt1.c1) NOT NULL)))) WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt0.c4)) BETWEEN ((CAST(rt1.c0 AS BLOB))) AND ((((rt1.c1) NOT NULL))));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CAST('-2021441157' AS TEXT)) NOT BETWEEN (rt0.c1) AND (((rt0.c2)IS NOT(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CAST('-2021441157' AS TEXT)) NOT BETWEEN (rt0.c1) AND (((rt0.c2)IS NOT(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CAST('-2021441157' AS TEXT)) NOT BETWEEN (rt0.c1) AND (((rt0.c2)IS NOT(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c3 FROM rt1 NOT INDEXED, rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt1, rt0 WHERE ((((((rt1.c2)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c4))))=(((rt1.c0) IS FALSE)))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt1, rt0 WHERE ((NOT ((((((rt1.c2)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c4))))=(((rt1.c0) IS FALSE)))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt1, rt0 WHERE ((((((((rt1.c2)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c4))))==(((rt1.c0) IS FALSE)))) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt1 NOT INDEXED, rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING GROUP_CONCAT(((0.33096400348072996)IS(v0.c0))) UNION ALL SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(((0.33096400348072996)IS(v0.c0))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(((0.33096400348072996)IS(v0.c0)))) ISNULL);
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING GROUP_CONCAT(((0.33096400348072996)IS(v0.c0))) UNION ALL SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(((0.33096400348072996)IS(v0.c0))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(((0.33096400348072996)IS(v0.c0)))) ISNULL);
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c3 FROM v0, rt0;
SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c3 FROM v0, rt0 WHERE ((NOT (((((((((rt0.c4)OR(rt0.c0)))OR(0.5665643477951672)))OR(rt0.c0)))OR(rt0.c4))))) UNION ALL SELECT rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c3 FROM v0, rt0 WHERE ((NOT ((NOT (((((((((rt0.c4)OR(rt0.c0)))OR(0.5665643477951672)))OR(rt0.c0)))OR(rt0.c4))))))) UNION ALL SELECT rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c3 FROM v0, rt0 WHERE ((((NOT (((((((((rt0.c4)OR(rt0.c0)))OR(0.5665643477951672)))OR(rt0.c0)))OR(rt0.c4))))) ISNULL));
SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c3 FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt1, rt0;
SELECT DISTINCT * FROM v0, rt1, rt0 WHERE (UNLIKELY(-1382994289)) UNION SELECT DISTINCT * FROM v0, rt1, rt0 WHERE ((NOT (UNLIKELY(-1382994289)))) UNION SELECT DISTINCT * FROM v0, rt1, rt0 WHERE (((UNLIKELY(-1382994289)) ISNULL));
SELECT DISTINCT * FROM v0, rt1, rt0;
SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c3, v0.c0;
SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c3, v0.c0 FROM rt0, v0 WHERE (((((((((CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 END)OR(((rt0.c4) ISNULL))))AND((((rt0.c3)) BETWEEN ((v0.c0)) AND ((rt0.c2))))))OR(((rt0.c4) ISNULL))))OR(((rt0.c0)>(rt0.c1))))) GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c3, v0.c0 UNION SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c3, v0.c0 FROM rt0, v0 WHERE ((NOT (((((((((CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 END)OR(((rt0.c4) ISNULL))))AND((((rt0.c3)) BETWEEN ((v0.c0)) AND ((rt0.c2))))))OR(((rt0.c4) ISNULL))))OR(((rt0.c0)>(rt0.c1))))))) GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c3, v0.c0 UNION SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c3, v0.c0 FROM rt0, v0 WHERE (((((((((((CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 END)OR(((rt0.c4) ISNULL))))AND((((rt0.c3)) BETWEEN ((v0.c0)) AND ((rt0.c2))))))OR(((rt0.c4) ISNULL))))OR(((rt0.c0)>(rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c3, v0.c0;
SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c3, v0.c0;
SELECT ALL rt0.c4, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON rt0.c4 GROUP BY rt0.c4, rt0.c0;
SELECT rt0.c4, rt0.c0 FROM rt0 NOT INDEXED LEFT OUTER JOIN v0 ON rt0.c4 GROUP BY rt0.c4, rt0.c0 HAVING DATE(CAST(MAX(x'') AS BLOB), COUNT(rt0.c4), NULL) UNION ALL SELECT rt0.c4, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON rt0.c4 GROUP BY rt0.c4, rt0.c0 HAVING (NOT (DATE(CAST(MAX(x'') AS BLOB), COUNT(rt0.c4), NULL))) UNION ALL SELECT ALL rt0.c4, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON rt0.c4 GROUP BY rt0.c4, rt0.c0 HAVING ((DATE(CAST(MAX(x'') AS BLOB), COUNT(rt0.c4), NULL)) ISNULL);
SELECT ALL rt0.c4, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON rt0.c4 GROUP BY rt0.c4, rt0.c0;
SELECT rt0.c4, rt0.c0 FROM rt0 NOT INDEXED LEFT OUTER JOIN v0 ON rt0.c4 GROUP BY rt0.c4, rt0.c0 HAVING DATE(CAST(MAX(x'') AS BLOB), COUNT(rt0.c4), NULL) UNION ALL SELECT rt0.c4, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON rt0.c4 GROUP BY rt0.c4, rt0.c0 HAVING (NOT (DATE(CAST(MAX(x'') AS BLOB), COUNT(rt0.c4), NULL))) UNION ALL SELECT ALL rt0.c4, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON rt0.c4 GROUP BY rt0.c4, rt0.c0 HAVING ((DATE(CAST(MAX(x'') AS BLOB), COUNT(rt0.c4), NULL)) ISNULL);
SELECT ALL rt0.c4, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON rt0.c4 GROUP BY rt0.c4, rt0.c0;
SELECT ALL * FROM rt0, rt1;
SELECT * FROM rt0, rt1 WHERE (CAST(((rt0.c1)>=(rt0.c1)) AS BLOB)) UNION ALL SELECT * FROM rt0, rt1 WHERE ((NOT (CAST(((rt0.c1)>=(rt0.c1)) AS BLOB)))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE (((CAST(((rt0.c1)>=(rt0.c1)) AS BLOB)) ISNULL));
SELECT ALL * FROM rt0, rt1;
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE (rt1.c4) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (rt1.c4))) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE (((rt1.c4) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1;
SELECT rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c4, rt1.c3, rt1.c2, rt0.c2, rt1.c1 FROM rt0 CROSS JOIN v0 ON ((rt0.c4) IS FALSE) FULL OUTER JOIN rt1 ON ((rt0.c4)LIKE(rt0.c2)) COLLATE NOCASE GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c4, rt1.c3, rt1.c2, rt0.c2, rt1.c1;
SELECT rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c4, rt1.c3, rt1.c2, rt0.c2, rt1.c1 FROM rt0 CROSS JOIN v0 ON ((rt0.c4) IS FALSE) FULL OUTER JOIN rt1 ON ((rt0.c4)LIKE(rt0.c2)) COLLATE NOCASE WHERE (((CAST(rt1.c1 AS REAL)) IS FALSE)) GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c4, rt1.c3, rt1.c2, rt0.c2, rt1.c1 UNION SELECT rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c4, rt1.c3, rt1.c2, rt0.c2, rt1.c1 FROM rt0 CROSS JOIN v0 ON ((rt0.c4) IS FALSE) FULL OUTER JOIN rt1 ON ((rt0.c4)LIKE(rt0.c2)) COLLATE NOCASE WHERE ((NOT (((CAST(rt1.c1 AS REAL)) IS FALSE)))) GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c4, rt1.c3, rt1.c2, rt0.c2, rt1.c1 UNION SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c4, rt1.c3, rt1.c2, rt0.c2, rt1.c1 FROM rt0 CROSS JOIN v0 ON ((rt0.c4) IS FALSE) FULL OUTER JOIN rt1 ON ((rt0.c4)LIKE(rt0.c2)) COLLATE NOCASE WHERE (((((CAST(rt1.c1 AS REAL)) IS FALSE)) ISNULL)) GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c4, rt1.c3, rt1.c2, rt0.c2, rt1.c1;
SELECT rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c4, rt1.c3, rt1.c2, rt0.c2, rt1.c1 FROM rt0 CROSS JOIN v0 ON ((rt0.c4) IS FALSE) FULL OUTER JOIN rt1 ON ((rt0.c4)LIKE(rt0.c2)) COLLATE NOCASE GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c4, rt1.c3, rt1.c2, rt0.c2, rt1.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TRIM(x'') UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TRIM(x''))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TRIM(x'')) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TRIM(x'') UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TRIM(x''))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TRIM(x'')) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt1.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c3 FROM rt1;
SELECT rt1.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c3 FROM rt1 WHERE (x'be551de7') UNION ALL SELECT rt1.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c3 FROM rt1 WHERE ((NOT (x'be551de7'))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c3 FROM rt1 WHERE (((x'be551de7') ISNULL));
SELECT ALL rt1.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c3 FROM rt1;
SELECT DISTINCT rt1.c3, rt0.c4, v0.c0, rt0.c1 FROM rt1, v0, rt0;
SELECT DISTINCT rt1.c3, rt0.c4, v0.c0, rt0.c1 FROM rt1, v0, rt0 WHERE ((((rt1.c4, rt0.c0, rt0.c1, rt0.c4, rt1.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c2)), (((v0.c0, rt1.c2, rt1.c2))>((rt1.c0, rt0.c4, rt0.c3))), ((rt1.c2) NOT NULL), ((rt1.c3)||(rt0.c4)), (+ (rt0.c4)))) AND ((x'ccf4', ((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), CASE '907487357'  WHEN rt1.c4 THEN rt1.c3 ELSE 0.048074336839878495 END, ((NULL)>=(rt1.c2)), ((v0.c0)OR(rt0.c1)))))) UNION SELECT DISTINCT rt1.c3, rt0.c4, v0.c0, rt0.c1 FROM rt1, v0, rt0 WHERE ((NOT ((((rt1.c4, rt0.c0, rt0.c1, rt0.c4, rt1.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c2)), (((v0.c0, rt1.c2, rt1.c2))>((rt1.c0, rt0.c4, rt0.c3))), ((rt1.c2) NOT NULL), ((rt1.c3)||(rt0.c4)), (+ (rt0.c4)))) AND ((x'ccf4', ((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), CASE '907487357'  WHEN rt1.c4 THEN rt1.c3 ELSE 0.048074336839878495 END, ((NULL)>=(rt1.c2)), ((v0.c0)OR(rt0.c1)))))))) UNION SELECT DISTINCT rt1.c3, rt0.c4, v0.c0, rt0.c1 FROM rt1, v0, rt0 WHERE ((((((rt1.c4, rt0.c0, rt0.c1, rt0.c4, rt1.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c2)), (((v0.c0, rt1.c2, rt1.c2))>((rt1.c0, rt0.c4, rt0.c3))), ((rt1.c2) NOT NULL), ((rt1.c3)||(rt0.c4)), (+ (rt0.c4)))) AND ((x'ccf4', ((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), CASE '907487357'  WHEN rt1.c4 THEN rt1.c3 ELSE 0.048074336839878495 END, ((NULL)>=(rt1.c2)), ((v0.c0)OR(rt0.c1)))))) ISNULL));
SELECT DISTINCT rt1.c3, rt0.c4, v0.c0, rt0.c1 FROM rt1, v0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CAST(v0.c0 AS REAL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CAST(v0.c0 AS REAL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS REAL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt1.c0, v0.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3 FROM rt1 CROSS JOIN v0 ON ((((((((((((CAST(rt1.c2 AS INTEGER))OR(rt1.c2 COLLATE BINARY)))OR(((v0.c0) BETWEEN (rt1.c0) AND (rt1.c4)))))AND(rt1.c3)))OR('')))AND((- (rt1.c4)))))OR(CAST(rt1.c1 AS TEXT))) GROUP BY rt1.c0, v0.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3;
SELECT ALL rt1.c0, v0.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3 FROM rt1 CROSS JOIN v0 ON ((((((((((((CAST(rt1.c2 AS INTEGER))OR(rt1.c2 COLLATE BINARY)))OR(((v0.c0) BETWEEN (rt1.c0) AND (rt1.c4)))))AND(rt1.c3)))OR('')))AND((- (rt1.c4)))))OR(CAST(rt1.c1 AS TEXT))) GROUP BY rt1.c0, v0.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3 HAVING ((TOTAL(rt1.c1)) BETWEEN (TOTAL(v0.c0)) AND (GROUP_CONCAT(rt1.c2))) UNION ALL SELECT rt1.c0, v0.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3 FROM rt1 CROSS JOIN v0 ON ((((((((((((CAST(rt1.c2 AS INTEGER))OR(rt1.c2 COLLATE BINARY)))OR(((v0.c0) BETWEEN (rt1.c0) AND (rt1.c4)))))AND(rt1.c3)))OR('')))AND((- (rt1.c4)))))OR(CAST(rt1.c1 AS TEXT))) GROUP BY rt1.c0, v0.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3 HAVING (NOT (((TOTAL(rt1.c1)) BETWEEN (TOTAL(v0.c0)) AND (GROUP_CONCAT(rt1.c2))))) UNION ALL SELECT ALL rt1.c0, v0.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3 FROM rt1 CROSS JOIN v0 ON ((((((((((((CAST(rt1.c2 AS INTEGER))OR(rt1.c2 COLLATE BINARY)))OR(((v0.c0) BETWEEN (rt1.c0) AND (rt1.c4)))))AND(rt1.c3)))OR('')))AND((- (rt1.c4)))))OR(CAST(rt1.c1 AS TEXT))) GROUP BY rt1.c0, v0.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3 HAVING ((((TOTAL(rt1.c1)) BETWEEN (TOTAL(v0.c0)) AND (GROUP_CONCAT(rt1.c2)))) ISNULL);
SELECT ALL rt1.c0, v0.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3 FROM rt1 CROSS JOIN v0 ON ((((((((((((CAST(rt1.c2 AS INTEGER))OR(rt1.c2 COLLATE BINARY)))OR(((v0.c0) BETWEEN (rt1.c0) AND (rt1.c4)))))AND(rt1.c3)))OR('')))AND((- (rt1.c4)))))OR(CAST(rt1.c1 AS TEXT))) GROUP BY rt1.c0, v0.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3;
SELECT ALL rt1.c0, v0.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3 FROM rt1 CROSS JOIN v0 ON ((((((((((((CAST(rt1.c2 AS INTEGER))OR(rt1.c2 COLLATE BINARY)))OR(((v0.c0) BETWEEN (rt1.c0) AND (rt1.c4)))))AND(rt1.c3)))OR('')))AND((- (rt1.c4)))))OR(CAST(rt1.c1 AS TEXT))) GROUP BY rt1.c0, v0.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3 HAVING ((TOTAL(rt1.c1)) BETWEEN (TOTAL(v0.c0)) AND (GROUP_CONCAT(rt1.c2))) UNION ALL SELECT rt1.c0, v0.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3 FROM rt1 CROSS JOIN v0 ON ((((((((((((CAST(rt1.c2 AS INTEGER))OR(rt1.c2 COLLATE BINARY)))OR(((v0.c0) BETWEEN (rt1.c0) AND (rt1.c4)))))AND(rt1.c3)))OR('')))AND((- (rt1.c4)))))OR(CAST(rt1.c1 AS TEXT))) GROUP BY rt1.c0, v0.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3 HAVING (NOT (((TOTAL(rt1.c1)) BETWEEN (TOTAL(v0.c0)) AND (GROUP_CONCAT(rt1.c2))))) UNION ALL SELECT ALL rt1.c0, v0.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3 FROM rt1 CROSS JOIN v0 ON ((((((((((((CAST(rt1.c2 AS INTEGER))OR(rt1.c2 COLLATE BINARY)))OR(((v0.c0) BETWEEN (rt1.c0) AND (rt1.c4)))))AND(rt1.c3)))OR('')))AND((- (rt1.c4)))))OR(CAST(rt1.c1 AS TEXT))) GROUP BY rt1.c0, v0.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3 HAVING ((((TOTAL(rt1.c1)) BETWEEN (TOTAL(v0.c0)) AND (GROUP_CONCAT(rt1.c2)))) ISNULL);
SELECT ALL rt1.c0, v0.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3 FROM rt1 CROSS JOIN v0 ON ((((((((((((CAST(rt1.c2 AS INTEGER))OR(rt1.c2 COLLATE BINARY)))OR(((v0.c0) BETWEEN (rt1.c0) AND (rt1.c4)))))AND(rt1.c3)))OR('')))AND((- (rt1.c4)))))OR(CAST(rt1.c1 AS TEXT))) GROUP BY rt1.c0, v0.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3;
SELECT rt1.c0, rt0.c1, rt1.c2, rt0.c2, rt1.c1, rt0.c0, rt1.c4, v0.c0, rt0.c4, rt0.c3 FROM rt1, rt0, v0;
SELECT ALL rt1.c0, rt0.c1, rt1.c2, rt0.c2, rt1.c1, rt0.c0, rt1.c4, v0.c0, rt0.c4, rt0.c3 FROM rt1, rt0, v0 WHERE (CASE (~ ('Oe'))  WHEN ('-1792222183' IN ()) THEN ((rt0.c0) NOTNULL) WHEN rt1.c4 THEN rt0.c1 COLLATE RTRIM WHEN TYPEOF(rt1.c4) THEN CAST(v0.c0 AS TEXT) ELSE ((v0.c0) NOT NULL) END) UNION ALL SELECT rt1.c0, rt0.c1, rt1.c2, rt0.c2, rt1.c1, rt0.c0, rt1.c4, v0.c0, rt0.c4, rt0.c3 FROM rt1, rt0, v0 WHERE ((NOT (CASE (~ ('Oe'))  WHEN ('-1792222183' IN ()) THEN ((rt0.c0) NOTNULL) WHEN rt1.c4 THEN rt0.c1 COLLATE RTRIM WHEN TYPEOF(rt1.c4) THEN CAST(v0.c0 AS TEXT) ELSE ((v0.c0) NOT NULL) END))) UNION ALL SELECT ALL rt1.c0, rt0.c1, rt1.c2, rt0.c2, rt1.c1, rt0.c0, rt1.c4, v0.c0, rt0.c4, rt0.c3 FROM rt1, rt0, v0 WHERE (((CASE (~ ('Oe'))  WHEN ('-1792222183' IN ()) THEN ((rt0.c0) NOTNULL) WHEN rt1.c4 THEN rt0.c1 COLLATE RTRIM WHEN TYPEOF(rt1.c4) THEN CAST(v0.c0 AS TEXT) ELSE ((v0.c0) NOT NULL) END) ISNULL));
SELECT rt1.c0, rt0.c1, rt1.c2, rt0.c2, rt1.c1, rt0.c0, rt1.c4, v0.c0, rt0.c4, rt0.c3 FROM rt1, rt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) IS FALSE)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS BLOB)) IS FALSE)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS BLOB)) IS FALSE)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt1.c3, v0.c0, rt0.c1, rt1.c2, rt1.c0, rt0.c2, rt1.c1, rt0.c4, rt1.c4, rt0.c3, rt0.c0 FROM rt0, rt1, v0 GROUP BY rt1.c3, v0.c0, rt0.c1, rt1.c2, rt1.c0, rt0.c2, rt1.c1, rt0.c4, rt1.c4, rt0.c3, rt0.c0;
SELECT ALL rt1.c3, v0.c0, rt0.c1, rt1.c2, rt1.c0, rt0.c2, rt1.c1, rt0.c4, rt1.c4, rt0.c3, rt0.c0 FROM rt0, rt1, v0 WHERE ((((x'3fa9') NOTNULL) IN ())) GROUP BY rt1.c3, v0.c0, rt0.c1, rt1.c2, rt1.c0, rt0.c2, rt1.c1, rt0.c4, rt1.c4, rt0.c3, rt0.c0 UNION SELECT rt1.c3, v0.c0, rt0.c1, rt1.c2, rt1.c0, rt0.c2, rt1.c1, rt0.c4, rt1.c4, rt0.c3, rt0.c0 FROM rt0, rt1, v0 WHERE ((NOT ((((x'3fa9') NOTNULL) IN ())))) GROUP BY rt1.c3, v0.c0, rt0.c1, rt1.c2, rt1.c0, rt0.c2, rt1.c1, rt0.c4, rt1.c4, rt0.c3, rt0.c0 UNION SELECT ALL rt1.c3, v0.c0, rt0.c1, rt1.c2, rt1.c0, rt0.c2, rt1.c1, rt0.c4, rt1.c4, rt0.c3, rt0.c0 FROM rt0, rt1, v0 WHERE ((((((x'3fa9') NOTNULL) IN ())) ISNULL)) GROUP BY rt1.c3, v0.c0, rt0.c1, rt1.c2, rt1.c0, rt0.c2, rt1.c1, rt0.c4, rt1.c4, rt0.c3, rt0.c0;
SELECT rt1.c3, v0.c0, rt0.c1, rt1.c2, rt1.c0, rt0.c2, rt1.c1, rt0.c4, rt1.c4, rt0.c3, rt0.c0 FROM rt0, rt1, v0 GROUP BY rt1.c3, v0.c0, rt0.c1, rt1.c2, rt1.c0, rt0.c2, rt1.c1, rt0.c4, rt1.c4, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, rt1.c2, rt0.c1, rt1.c4, rt1.c3, rt1.c0, rt0.c0, rt0.c4 FROM rt1, rt0 GROUP BY rt0.c2, rt1.c2, rt0.c1, rt1.c4, rt1.c3, rt1.c0, rt0.c0, rt0.c4;
SELECT rt0.c2, rt1.c2, rt0.c1, rt1.c4, rt1.c3, rt1.c0, rt0.c0, rt0.c4 FROM rt1, rt0 GROUP BY rt0.c2, rt1.c2, rt0.c1, rt1.c4, rt1.c3, rt1.c0, rt0.c0, rt0.c4 HAVING (((('0.7198268150531775')OR(MIN(0x5a1a0b5))))AND(TOTAL(AVG(rt1.c2)))) UNION ALL SELECT rt0.c2, rt1.c2, rt0.c1, rt1.c4, rt1.c3, rt1.c0, rt0.c0, rt0.c4 FROM rt1, rt0 GROUP BY rt0.c2, rt1.c2, rt0.c1, rt1.c4, rt1.c3, rt1.c0, rt0.c0, rt0.c4 HAVING (NOT ((((('0.7198268150531775')OR(MIN(0x5a1a0b5))))AND(TOTAL(AVG(rt1.c2)))))) UNION ALL SELECT rt0.c2, rt1.c2, rt0.c1, rt1.c4, rt1.c3, rt1.c0, rt0.c0, rt0.c4 FROM rt1, rt0 GROUP BY rt0.c2, rt1.c2, rt0.c1, rt1.c4, rt1.c3, rt1.c0, rt0.c0, rt0.c4 HAVING (((((('0.7198268150531775')OR(MIN(0X5a1a0b5))))AND(TOTAL(AVG(rt1.c2))))) ISNULL);
SELECT * FROM rt0, v0, rt1;
SELECT * FROM rt0, v0, rt1 WHERE (SQLITE_VERSION()) UNION ALL SELECT * FROM rt0, v0, rt1 WHERE ((NOT (SQLITE_VERSION()))) UNION ALL SELECT ALL * FROM rt0, v0, rt1 WHERE (((SQLITE_VERSION()) ISNULL));
SELECT * FROM rt0, v0, rt1;
SELECT DISTINCT * FROM rt0 CROSS JOIN rt1 ON (((CAST(rt1.c3 AS BLOB), ((rt1.c0) NOT BETWEEN (rt0.c4) AND (0.2962887131095583)), rt0.c0))>((((rt1.c0) NOT BETWEEN (rt1.c4) AND (NULL)), ((rt1.c2)IS('-1382994289')), CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c2 WHEN rt1.c2 THEN rt0.c0 WHEN rt1.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c0 END)));
SELECT DISTINCT * FROM rt0 CROSS JOIN rt1 ON (((CAST(rt1.c3 AS BLOB), ((rt1.c0) NOT BETWEEN (rt0.c4) AND (0.2962887131095583)), rt0.c0))>((((rt1.c0) NOT BETWEEN (rt1.c4) AND (NULL)), ((rt1.c2)IS('-1382994289')), CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c2 WHEN rt1.c2 THEN rt0.c0 WHEN rt1.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c0 END))) WHERE (CAST(rt0.c3 AS REAL)) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN rt1 ON (((CAST(rt1.c3 AS BLOB), ((rt1.c0) NOT BETWEEN (rt0.c4) AND (0.2962887131095583)), rt0.c0))>((((rt1.c0) NOT BETWEEN (rt1.c4) AND (NULL)), ((rt1.c2)IS('-1382994289')), CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c2 WHEN rt1.c2 THEN rt0.c0 WHEN rt1.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c0 END))) WHERE ((NOT (CAST(rt0.c3 AS REAL)))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN rt1 ON (((CAST(rt1.c3 AS BLOB), ((rt1.c0) NOT BETWEEN (rt0.c4) AND (0.2962887131095583)), rt0.c0))>((((rt1.c0) NOT BETWEEN (rt1.c4) AND (NULL)), ((rt1.c2)IS('-1382994289')), CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c2 WHEN rt1.c2 THEN rt0.c0 WHEN rt1.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c0 END))) WHERE (((CAST(rt0.c3 AS REAL)) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN rt1 ON (((CAST(rt1.c3 AS BLOB), ((rt1.c0) NOT BETWEEN (rt0.c4) AND (0.2962887131095583)), rt0.c0))>((((rt1.c0) NOT BETWEEN (rt1.c4) AND (NULL)), ((rt1.c2)IS('-1382994289')), CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c2 WHEN rt1.c2 THEN rt0.c0 WHEN rt1.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c0 END)));
SELECT ALL rt0.c1, rt1.c0, rt1.c1, rt0.c0, rt1.c3 FROM rt0 FULL OUTER JOIN rt1 ON ((((((((rt1.c0)OR(x'd15f')))OR(rt1.c2)))OR(TOTAL_CHANGES())))AND(CAST(rt1.c4 AS NUMERIC))) GROUP BY rt0.c1, rt1.c0, rt1.c1, rt0.c0, rt1.c3;
SELECT ALL rt0.c1, rt1.c0, rt1.c1, rt0.c0, rt1.c3 FROM rt0 FULL OUTER JOIN rt1 ON ((((((((rt1.c0)OR(x'd15f')))OR(rt1.c2)))OR(TOTAL_CHANGES())))AND(CAST(rt1.c4 AS NUMERIC))) WHERE ((((~ (rt0.c2)))<<(rt0.c1))) GROUP BY rt0.c1, rt1.c0, rt1.c1, rt0.c0, rt1.c3 UNION SELECT rt0.c1, rt1.c0, rt1.c1, rt0.c0, rt1.c3 FROM rt0 FULL OUTER JOIN rt1 ON ((((((((rt1.c0)OR(x'd15f')))OR(rt1.c2)))OR(TOTAL_CHANGES())))AND(CAST(rt1.c4 AS NUMERIC))) WHERE ((NOT ((((~ (rt0.c2)))<<(rt0.c1))))) GROUP BY rt0.c1, rt1.c0, rt1.c1, rt0.c0, rt1.c3 UNION SELECT ALL rt0.c1, rt1.c0, rt1.c1, rt0.c0, rt1.c3 FROM rt0 FULL OUTER JOIN rt1 ON ((((((((rt1.c0)OR(x'd15f')))OR(rt1.c2)))OR(TOTAL_CHANGES())))AND(CAST(rt1.c4 AS NUMERIC))) WHERE ((((((~ (rt0.c2)))<<(rt0.c1))) ISNULL)) GROUP BY rt0.c1, rt1.c0, rt1.c1, rt0.c0, rt1.c3;
SELECT ALL rt0.c1, rt1.c0, rt1.c1, rt0.c0, rt1.c3 FROM rt0 FULL OUTER JOIN rt1 ON ((((((((rt1.c0)OR(x'd15f')))OR(rt1.c2)))OR(TOTAL_CHANGES())))AND(CAST(rt1.c4 AS NUMERIC))) GROUP BY rt0.c1, rt1.c0, rt1.c1, rt0.c0, rt1.c3;
SELECT ALL rt0.c3, rt0.c2, rt1.c0, rt0.c1 FROM rt1, rt0 GROUP BY rt0.c3, rt0.c2, rt1.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, rt1.c0, rt0.c1 FROM rt1, rt0 GROUP BY rt0.c3, rt0.c2, rt1.c0, rt0.c1 HAVING (((((rt1.c2, rt0.c4, '1258887627')) BETWEEN ((rt0.c4, rt1.c1, 0Xfffffffffb271bc6)) AND ((-3.81799965E8, NULL, MIN(rt0.c2)))))!=(TOTAL(AVG(COUNT(rt1.c0))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt1.c0, rt0.c1 FROM rt1, rt0 GROUP BY rt0.c3, rt0.c2, rt1.c0, rt0.c1 HAVING (NOT ((((((rt1.c2, rt0.c4, '1258887627')) BETWEEN ((rt0.c4, rt1.c1, 0xfffffffffb271bc6)) AND ((-3.81799965E8, NULL, MIN(rt0.c2)))))!=(TOTAL(AVG(COUNT(rt1.c0))))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt1.c0, rt0.c1 FROM rt1, rt0 GROUP BY rt0.c3, rt0.c2, rt1.c0, rt0.c1 HAVING (((((((rt1.c2, rt0.c4, '1258887627')) BETWEEN ((rt0.c4, rt1.c1, 0Xfffffffffb271bc6)) AND ((-3.81799965E8, NULL, MIN(rt0.c2)))))!=(TOTAL(AVG(COUNT(rt1.c0)))))) ISNULL);
SELECT TOTAL(((((((((((((((rt1.c4) NOT BETWEEN (rt0.c1) AND (rt1.c4)))OR(((((((((((((rt1.c3)AND(rt1.c2)))AND(rt1.c1)))OR(v0.c0)))AND(rt1.c2)))OR(rt0.c1)))AND(rt1.c4)))))OR(rt1.c1 COLLATE BINARY)))OR(NULL)))AND(SUBSTR(rt1.c2, rt1.c0))))OR(((rt0.c3)>>(rt1.c3)))))OR(((rt0.c4)!=(rt0.c0))))) FROM v0, rt0, rt1 ORDER BY ((((rt1.c1)OR(v0.c0)))>>('')) ASC;
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (NOT (((rt1.c3) NOT NULL)));
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (NOT (((rt1.c3) NOT NULL))) WHERE (((((rt0.c0)OR(x'')))AND((rt0.c2 IN (rt0.c0))))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON (NOT (((rt1.c3) NOT NULL))) WHERE ((NOT (((((rt0.c0)OR(x'')))AND((rt0.c2 IN (rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON (NOT (((rt1.c3) NOT NULL))) WHERE (((((((rt0.c0)OR(x'')))AND((rt0.c2 IN (rt0.c0))))) ISNULL));
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (NOT (((rt1.c3) NOT NULL)));
SELECT DISTINCT rt1.c1, rt1.c4 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c4 FROM rt1 WHERE ((- (((rt1.c2) ISNULL)))) UNION SELECT DISTINCT rt1.c1, rt1.c4 FROM rt1 WHERE ((NOT ((- (((rt1.c2) ISNULL)))))) UNION SELECT DISTINCT rt1.c1, rt1.c4 FROM rt1 WHERE ((((- (((rt1.c2) ISNULL)))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c4 FROM rt1;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4;
SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4 UNION SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4 UNION SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4;
SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c0 FROM v0, rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c0 HAVING COUNT(COUNT(SUM(rt0.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c0 HAVING (NOT (COUNT(COUNT(SUM(rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c0 HAVING ((COUNT(COUNT(SUM(rt0.c0)))) ISNULL);
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (((rt1.c0) ISNULL) COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((rt1.c0) ISNULL) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((rt1.c0) ISNULL) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((- (v0.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((- (v0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0 WHERE ((((- (v0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((NOT (NULL)))IS NOT((((v0.c0))>((v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((NOT (NULL)))IS NOT((((v0.c0))>((v0.c0)))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((NOT (NULL)))IS NOT((((v0.c0))>((v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt1.c2, rt0.c3, rt0.c1, rt0.c4, rt1.c4, rt1.c1, rt0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON rt0.c2 CROSS JOIN rt0 ON ((v0.c0 COLLATE BINARY) BETWEEN (((rt0.c1) BETWEEN (rt1.c0) AND (rt0.c4))) AND ('H䑨hD])')) GROUP BY rt1.c2, rt0.c3, rt0.c1, rt0.c4, rt1.c4, rt1.c1, rt0.c0;
SELECT ALL rt1.c1, rt1.c0, rt1.c3, rt1.c4 FROM rt1;
SELECT ALL rt1.c1, rt1.c0, rt1.c3, rt1.c4 FROM rt1 WHERE ((((rt1.c3)) NOT BETWEEN ((x'583f')) AND ((' X')))) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c3, rt1.c4 FROM rt1 WHERE ((NOT ((((rt1.c3)) NOT BETWEEN ((x'583f')) AND ((' X')))))) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c3, rt1.c4 FROM rt1 WHERE ((((((rt1.c3)) NOT BETWEEN ((x'583f')) AND ((' X')))) ISNULL));
SELECT ALL rt1.c1, rt1.c0, rt1.c3, rt1.c4 FROM rt1;
SELECT DISTINCT rt0.c2, rt1.c2 FROM rt1 INNER JOIN v0 ON (+ ((rt1.c2 IN (rt1.c4)))) FULL OUTER JOIN rt0 ON ((((rt0.c4)||(rt1.c1)))-((rt1.c2 IN ())));
SELECT DISTINCT rt0.c2, rt1.c2 FROM rt1 INNER JOIN v0 ON (+ ((rt1.c2 IN (rt1.c4)))) FULL OUTER JOIN rt0 ON ((((rt0.c4)||(rt1.c1)))-((rt1.c2 IN ()))) WHERE (CASE ((rt0.c0)|(v0.c0))  WHEN CAST(rt1.c4 AS NUMERIC) THEN ((rt0.c3) BETWEEN (rt0.c3) AND (rt1.c0)) ELSE (- (rt1.c2)) END) UNION SELECT DISTINCT rt0.c2, rt1.c2 FROM rt1 INNER JOIN v0 ON (+ ((rt1.c2 IN (rt1.c4)))) FULL OUTER JOIN rt0 ON ((((rt0.c4)||(rt1.c1)))-((rt1.c2 IN ()))) WHERE ((NOT (CASE ((rt0.c0)|(v0.c0))  WHEN CAST(rt1.c4 AS NUMERIC) THEN ((rt0.c3) BETWEEN (rt0.c3) AND (rt1.c0)) ELSE (- (rt1.c2)) END))) UNION SELECT DISTINCT rt0.c2, rt1.c2 FROM rt1 INNER JOIN v0 ON (+ ((rt1.c2 IN (rt1.c4)))) FULL OUTER JOIN rt0 ON ((((rt0.c4)||(rt1.c1)))-((rt1.c2 IN ()))) WHERE (((CASE ((rt0.c0)|(v0.c0))  WHEN CAST(rt1.c4 AS NUMERIC) THEN ((rt0.c3) BETWEEN (rt0.c3) AND (rt1.c0)) ELSE (- (rt1.c2)) END) ISNULL));
SELECT DISTINCT rt0.c2, rt1.c2 FROM rt1 INNER JOIN v0 ON (+ ((rt1.c2 IN (rt1.c4)))) FULL OUTER JOIN rt0 ON ((((rt0.c4)||(rt1.c1)))-((rt1.c2 IN ())));
SELECT ALL rt0.c3, rt1.c4, rt1.c3, rt0.c1, rt0.c4, rt1.c2, rt1.c0, rt0.c0 FROM rt1, rt0 GROUP BY rt0.c3, rt1.c4, rt1.c3, rt0.c1, rt0.c4, rt1.c2, rt1.c0, rt0.c0;
SELECT rt0.c3, rt1.c4, rt1.c3, rt0.c1, rt0.c4, rt1.c2, rt1.c0, rt0.c0 FROM rt1, rt0 WHERE (LOWER(((rt0.c4)LIKE(rt0.c0)))) GROUP BY rt0.c3, rt1.c4, rt1.c3, rt0.c1, rt0.c4, rt1.c2, rt1.c0, rt0.c0 UNION SELECT rt0.c3, rt1.c4, rt1.c3, rt0.c1, rt0.c4, rt1.c2, rt1.c0, rt0.c0 FROM rt1, rt0 WHERE ((NOT (LOWER(((rt0.c4)LIKE(rt0.c0)))))) GROUP BY rt0.c3, rt1.c4, rt1.c3, rt0.c1, rt0.c4, rt1.c2, rt1.c0, rt0.c0 UNION SELECT rt0.c3, rt1.c4, rt1.c3, rt0.c1, rt0.c4, rt1.c2, rt1.c0, rt0.c0 FROM rt1, rt0 WHERE (((LOWER(((rt0.c4)LIKE(rt0.c0)))) ISNULL)) GROUP BY rt0.c3, rt1.c4, rt1.c3, rt0.c1, rt0.c4, rt1.c2, rt1.c0, rt0.c0;
SELECT ALL rt0.c3, rt1.c4, rt1.c3, rt0.c1, rt0.c4, rt1.c2, rt1.c0, rt0.c0 FROM rt1, rt0 GROUP BY rt0.c3, rt1.c4, rt1.c3, rt0.c1, rt0.c4, rt1.c2, rt1.c0, rt0.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c3, rt0.c0 FROM rt0, rt1, v0 GROUP BY rt0.c2, v0.c0, rt0.c3, rt0.c0;
SELECT rt0.c2, v0.c0, rt0.c3, rt0.c0 FROM rt0, rt1, v0 GROUP BY rt0.c2, v0.c0, rt0.c3, rt0.c0 HAVING MAX(COUNT(rt0.c1)) UNION ALL SELECT rt0.c2, v0.c0, rt0.c3, rt0.c0 FROM rt0, rt1, v0 GROUP BY rt0.c2, v0.c0, rt0.c3, rt0.c0 HAVING (NOT (MAX(COUNT(rt0.c1)))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c3, rt0.c0 FROM rt0, rt1, v0 GROUP BY rt0.c2, v0.c0, rt0.c3, rt0.c0 HAVING ((MAX(COUNT(rt0.c1))) ISNULL);
SELECT ALL rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c1 FROM rt1;
SELECT rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c1 FROM rt1 WHERE (LIKELY(DISTINCT '0.4962223673735313')) UNION ALL SELECT rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (LIKELY(DISTINCT '0.4962223673735313')))) UNION ALL SELECT rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c1 FROM rt1 WHERE (((LIKELY(DISTINCT '0.4962223673735313')) ISNULL));
SELECT ALL rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT rt0.c2 FROM rt0, rt1;
SELECT DISTINCT rt0.c2 FROM rt0, rt1 WHERE (load_extension((+ (rt0.c1)))) UNION SELECT DISTINCT rt0.c2 FROM rt0, rt1 WHERE ((NOT (load_extension((+ (rt0.c1)))))) UNION SELECT DISTINCT rt0.c2 FROM rt0, rt1 WHERE (((load_extension((+ (rt0.c1)))) ISNULL));
SELECT rt1.c4, rt0.c2, rt1.c0, rt1.c1, rt0.c3, rt0.c1 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt0.c2, rt1.c0, rt1.c1, rt0.c3, rt0.c1;
SELECT ALL rt1.c4, rt0.c2, rt1.c0, rt1.c1, rt0.c3, rt0.c1 FROM rt0, v0, rt1 WHERE (CASE WHEN ((rt1.c3)GLOB(rt0.c0)) THEN (((rt1.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) ELSE rt1.c3 COLLATE RTRIM END) GROUP BY rt1.c4, rt0.c2, rt1.c0, rt1.c1, rt0.c3, rt0.c1 UNION SELECT rt1.c4, rt0.c2, rt1.c0, rt1.c1, rt0.c3, rt0.c1 FROM rt0, v0, rt1 WHERE ((NOT (CASE WHEN ((rt1.c3)GLOB(rt0.c0)) THEN (((rt1.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) ELSE rt1.c3 COLLATE RTRIM END))) GROUP BY rt1.c4, rt0.c2, rt1.c0, rt1.c1, rt0.c3, rt0.c1 UNION SELECT ALL rt1.c4, rt0.c2, rt1.c0, rt1.c1, rt0.c3, rt0.c1 FROM rt0, v0, rt1 WHERE (((CASE WHEN ((rt1.c3)GLOB(rt0.c0)) THEN (((rt1.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) ELSE rt1.c3 COLLATE RTRIM END) ISNULL)) GROUP BY rt1.c4, rt0.c2, rt1.c0, rt1.c1, rt0.c3, rt0.c1;
SELECT rt1.c4, rt0.c2, rt1.c0, rt1.c1, rt0.c3, rt0.c1 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt0.c2, rt1.c0, rt1.c1, rt0.c3, rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(MIN(COUNT(SUM(SUM(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(MIN(COUNT(SUM(SUM(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(MIN(COUNT(SUM(SUM(v0.c0)))))) ISNULL);
SELECT ALL * FROM rt0, rt1;
SELECT ALL * FROM rt0, rt1 WHERE ((((rt0.c4, rt0.c1, rt0.c4, rt1.c0, rt0.c2, rt1.c4, rt1.c1)) NOT BETWEEN (((- (rt1.c4)), ((rt0.c4)==(rt1.c4)), rt0.c3, ((rt1.c1)>(rt0.c1)), '-990850153', (((rt0.c4))<>((rt1.c2))), (rt0.c3 IN ()))) AND (((- (rt0.c2)), rt0.c0 COLLATE NOCASE, (('-202523754')>=(rt0.c1)), COALESCE(rt1.c0, rt1.c2), ((-1087807247)%(rt0.c4)), ((((rt1.c0)AND(rt0.c0)))AND(x'')), 0.5143740177133971)))) UNION ALL SELECT * FROM rt0, rt1 WHERE ((NOT ((((rt0.c4, rt0.c1, rt0.c4, rt1.c0, rt0.c2, rt1.c4, rt1.c1)) NOT BETWEEN (((- (rt1.c4)), ((rt0.c4)==(rt1.c4)), rt0.c3, ((rt1.c1)>(rt0.c1)), '-990850153', (((rt0.c4))<>((rt1.c2))), (rt0.c3 IN ()))) AND (((- (rt0.c2)), rt0.c0 COLLATE NOCASE, (('-202523754')>=(rt0.c1)), COALESCE(rt1.c0, rt1.c2), ((-1087807247)%(rt0.c4)), ((((rt1.c0)AND(rt0.c0)))AND(x'')), 0.5143740177133971)))))) UNION ALL SELECT * FROM rt0, rt1 WHERE ((((((rt0.c4, rt0.c1, rt0.c4, rt1.c0, rt0.c2, rt1.c4, rt1.c1)) NOT BETWEEN (((- (rt1.c4)), ((rt0.c4)=(rt1.c4)), rt0.c3, ((rt1.c1)>(rt0.c1)), '-990850153', (((rt0.c4))<>((rt1.c2))), (rt0.c3 IN ()))) AND (((- (rt0.c2)), rt0.c0 COLLATE NOCASE, (('-202523754')>=(rt0.c1)), COALESCE(rt1.c0, rt1.c2), ((-1087807247)%(rt0.c4)), ((((rt1.c0)AND(rt0.c0)))AND(x'')), 0.5143740177133971)))) ISNULL));
SELECT ALL * FROM rt0, rt1;
SELECT DISTINCT rt0.c1, rt1.c1, rt0.c3, rt1.c0, rt0.c0 FROM v0, rt0, rt1;
SELECT DISTINCT rt0.c1, rt1.c1, rt0.c3, rt1.c0, rt0.c0 FROM v0, rt0, rt1 WHERE (((((((x'') IS TRUE))AND(CAST(rt1.c2 AS NUMERIC))))AND((rt0.c1 IN ('', rt0.c2))))) UNION SELECT DISTINCT rt0.c1, rt1.c1, rt0.c3, rt1.c0, rt0.c0 FROM v0, rt0, rt1 WHERE ((NOT (((((((x'') IS TRUE))AND(CAST(rt1.c2 AS NUMERIC))))AND((rt0.c1 IN ('', rt0.c2))))))) UNION SELECT DISTINCT rt0.c1, rt1.c1, rt0.c3, rt1.c0, rt0.c0 FROM v0, rt0, rt1 WHERE (((((((((x'') IS TRUE))AND(CAST(rt1.c2 AS NUMERIC))))AND((rt0.c1 IN ('', rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c1, rt1.c1, rt0.c3, rt1.c0, rt0.c0 FROM v0, rt0, rt1;
SELECT rt0.c4, rt0.c0, rt1.c4, rt0.c3 FROM rt0, rt1 GROUP BY rt0.c4, rt0.c0, rt1.c4, rt0.c3;
SELECT ALL rt0.c4, rt0.c0, rt1.c4, rt0.c3 FROM rt0, rt1 WHERE (rt1.c3) GROUP BY rt0.c4, rt0.c0, rt1.c4, rt0.c3 UNION SELECT rt0.c4, rt0.c0, rt1.c4, rt0.c3 FROM rt0, rt1 WHERE ((NOT (rt1.c3))) GROUP BY rt0.c4, rt0.c0, rt1.c4, rt0.c3 UNION SELECT rt0.c4, rt0.c0, rt1.c4, rt0.c3 FROM rt0, rt1 WHERE (((rt1.c3) ISNULL)) GROUP BY rt0.c4, rt0.c0, rt1.c4, rt0.c3;
SELECT rt0.c4, rt0.c0, rt1.c4, rt0.c3 FROM rt0, rt1 GROUP BY rt0.c4, rt0.c0, rt1.c4, rt0.c3;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (v0.c0 IN ()) COLLATE RTRIM UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((v0.c0 IN ()) COLLATE RTRIM)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((v0.c0 IN ()) COLLATE RTRIM) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (v0.c0 IN ()) COLLATE RTRIM UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((v0.c0 IN ()) COLLATE RTRIM)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((v0.c0 IN ()) COLLATE RTRIM) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt1.c4, rt0.c4, rt1.c3, rt1.c0 FROM v0, rt1, rt0;
SELECT ALL rt1.c4, rt0.c4, rt1.c3, rt1.c0 FROM v0, rt1, rt0 WHERE (CASE WHEN (((rt1.c0, rt1.c3, rt0.c3))>((0x7b661355, rt0.c3, rt1.c2))) THEN rt1.c0 ELSE ((((v0.c0)OR(rt0.c3)))AND(rt0.c0)) END) UNION ALL SELECT rt1.c4, rt0.c4, rt1.c3, rt1.c0 FROM v0, rt1, rt0 WHERE ((NOT (CASE WHEN (((rt1.c0, rt1.c3, rt0.c3))>((0x7b661355, rt0.c3, rt1.c2))) THEN rt1.c0 ELSE ((((v0.c0)OR(rt0.c3)))AND(rt0.c0)) END))) UNION ALL SELECT rt1.c4, rt0.c4, rt1.c3, rt1.c0 FROM v0, rt1, rt0 WHERE (((CASE WHEN (((rt1.c0, rt1.c3, rt0.c3))>((0X7b661355, rt0.c3, rt1.c2))) THEN rt1.c0 ELSE ((((v0.c0)OR(rt0.c3)))AND(rt0.c0)) END) ISNULL));
SELECT rt1.c4, rt0.c4, rt1.c3, rt1.c0 FROM v0, rt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((('cm'))==((rt0.c1 COLLATE RTRIM)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((('cm'))==((rt0.c1 COLLATE RTRIM)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((('cm'))=((rt0.c1 COLLATE RTRIM)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c4, rt1.c4, v0.c0, rt0.c3, rt0.c2, rt1.c0, rt1.c3, rt0.c0 FROM rt1, rt0, v0 GROUP BY rt0.c1, rt0.c4, rt1.c4, v0.c0, rt0.c3, rt0.c2, rt1.c0, rt1.c3, rt0.c0;
SELECT rt0.c1, rt0.c4, rt1.c4, v0.c0, rt0.c3, rt0.c2, rt1.c0, rt1.c3, rt0.c0 FROM rt1, rt0, v0 WHERE (((((((rt1.c3, rt1.c1, v0.c0)) NOT BETWEEN ((v0.c0, rt0.c0, rt0.c3)) AND ((rt1.c2, rt1.c0, rt1.c1)))))<=((CASE WHEN rt1.c3 THEN v0.c0 WHEN rt0.c4 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c3 END)))) GROUP BY rt0.c1, rt0.c4, rt1.c4, v0.c0, rt0.c3, rt0.c2, rt1.c0, rt1.c3, rt0.c0 UNION SELECT rt0.c1, rt0.c4, rt1.c4, v0.c0, rt0.c3, rt0.c2, rt1.c0, rt1.c3, rt0.c0 FROM rt1, rt0, v0 WHERE ((NOT (((((((rt1.c3, rt1.c1, v0.c0)) NOT BETWEEN ((v0.c0, rt0.c0, rt0.c3)) AND ((rt1.c2, rt1.c0, rt1.c1)))))<=((CASE WHEN rt1.c3 THEN v0.c0 WHEN rt0.c4 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c3 END)))))) GROUP BY rt0.c1, rt0.c4, rt1.c4, v0.c0, rt0.c3, rt0.c2, rt1.c0, rt1.c3, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c4, rt1.c4, v0.c0, rt0.c3, rt0.c2, rt1.c0, rt1.c3, rt0.c0 FROM rt1, rt0, v0 WHERE (((((((((rt1.c3, rt1.c1, v0.c0)) NOT BETWEEN ((v0.c0, rt0.c0, rt0.c3)) AND ((rt1.c2, rt1.c0, rt1.c1)))))<=((CASE WHEN rt1.c3 THEN v0.c0 WHEN rt0.c4 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c3 END)))) ISNULL)) GROUP BY rt0.c1, rt0.c4, rt1.c4, v0.c0, rt0.c3, rt0.c2, rt1.c0, rt1.c3, rt0.c0;
SELECT rt0.c1, rt0.c4, rt1.c4, v0.c0, rt0.c3, rt0.c2, rt1.c0, rt1.c3, rt0.c0 FROM rt1, rt0, v0 GROUP BY rt0.c1, rt0.c4, rt1.c4, v0.c0, rt0.c3, rt0.c2, rt1.c0, rt1.c3, rt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE AVG(AVG(v0.c0))  WHEN COUNT(MIN(COUNT(v0.c0))) THEN MAX(GROUP_CONCAT(v0.c0)) WHEN GROUP_CONCAT(v0.c0) THEN v0.c0 WHEN v0.c0 THEN COUNT(*) ELSE v0.c0 END) ISNULL) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((CASE AVG(AVG(v0.c0))  WHEN COUNT(MIN(COUNT(v0.c0))) THEN MAX(GROUP_CONCAT(v0.c0)) WHEN GROUP_CONCAT(v0.c0) THEN v0.c0 WHEN v0.c0 THEN COUNT(*) ELSE v0.c0 END) ISNULL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((CASE AVG(AVG(v0.c0))  WHEN COUNT(MIN(COUNT(v0.c0))) THEN MAX(GROUP_CONCAT(v0.c0)) WHEN GROUP_CONCAT(v0.c0) THEN v0.c0 WHEN v0.c0 THEN COUNT(*) ELSE v0.c0 END) ISNULL)) ISNULL);
SELECT * FROM v0, rt1;
SELECT ALL * FROM v0, rt1 WHERE (((((((((v0.c0)OR(((rt1.c2)IS NOT(rt1.c1)))))OR(CASE WHEN 'i3<z>룛⬙' THEN rt1.c4 END)))OR(SQLITE_SOURCE_ID())))OR(rt1.c2 COLLATE RTRIM))) UNION ALL SELECT * FROM v0, rt1 WHERE ((NOT (((((((((v0.c0)OR(((rt1.c2)IS NOT(rt1.c1)))))OR(CASE WHEN 'i3<z>룛⬙' THEN rt1.c4 END)))OR(SQLITE_SOURCE_ID())))OR(rt1.c2 COLLATE RTRIM))))) UNION ALL SELECT ALL * FROM v0, rt1 WHERE (((((((((((v0.c0)OR(((rt1.c2)IS NOT(rt1.c1)))))OR(CASE WHEN 'i3<z>룛⬙' THEN rt1.c4 END)))OR(SQLITE_SOURCE_ID())))OR(rt1.c2 COLLATE RTRIM))) ISNULL));
SELECT * FROM v0, rt1;
SELECT DISTINCT rt1.c4, rt0.c2, rt1.c2, rt1.c1, rt0.c1, rt0.c3, rt1.c3, rt0.c0, rt0.c4, rt1.c0 FROM rt1, rt0;
SELECT DISTINCT rt1.c4, rt0.c2, rt1.c2, rt1.c1, rt0.c1, rt0.c3, rt1.c3, rt0.c0, rt0.c4, rt1.c0 FROM rt1, rt0 WHERE (CASE WHEN ((rt1.c0) ISNULL) THEN CASE rt1.c4  WHEN '-511607227' THEN rt1.c1 WHEN '' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 ELSE '' END ELSE ((((rt0.c3)AND(rt0.c2)))AND(rt0.c4)) END) UNION SELECT DISTINCT rt1.c4, rt0.c2, rt1.c2, rt1.c1, rt0.c1, rt0.c3, rt1.c3, rt0.c0, rt0.c4, rt1.c0 FROM rt1, rt0 WHERE ((NOT (CASE WHEN ((rt1.c0) ISNULL) THEN CASE rt1.c4  WHEN '-511607227' THEN rt1.c1 WHEN '' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 ELSE '' END ELSE ((((rt0.c3)AND(rt0.c2)))AND(rt0.c4)) END))) UNION SELECT DISTINCT rt1.c4, rt0.c2, rt1.c2, rt1.c1, rt0.c1, rt0.c3, rt1.c3, rt0.c0, rt0.c4, rt1.c0 FROM rt1, rt0 WHERE (((CASE WHEN ((rt1.c0) ISNULL) THEN CASE rt1.c4  WHEN '-511607227' THEN rt1.c1 WHEN '' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 ELSE '' END ELSE ((((rt0.c3)AND(rt0.c2)))AND(rt0.c4)) END) ISNULL));
SELECT DISTINCT rt1.c4, rt0.c2, rt1.c2, rt1.c1, rt0.c1, rt0.c3, rt1.c3, rt0.c0, rt0.c4, rt1.c0 FROM rt1, rt0;
SELECT ALL rt1.c4 FROM rt1, v0 GROUP BY rt1.c4;
SELECT ALL rt1.c4 FROM rt1, v0 WHERE ((((((rt1.c4, v0.c0, rt1.c1)) BETWEEN ((rt1.c0, rt1.c2, rt1.c4)) AND ((rt1.c3, rt1.c4, rt1.c2))))IS(((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c1))))) GROUP BY rt1.c4 UNION SELECT rt1.c4 FROM rt1, v0 WHERE ((NOT ((((((rt1.c4, v0.c0, rt1.c1)) BETWEEN ((rt1.c0, rt1.c2, rt1.c4)) AND ((rt1.c3, rt1.c4, rt1.c2))))IS(((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c1))))))) GROUP BY rt1.c4 UNION SELECT ALL rt1.c4 FROM rt1, v0 WHERE ((((((((rt1.c4, v0.c0, rt1.c1)) BETWEEN ((rt1.c0, rt1.c2, rt1.c4)) AND ((rt1.c3, rt1.c4, rt1.c2))))IS(((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c1))))) ISNULL)) GROUP BY rt1.c4;
SELECT ALL rt1.c4 FROM rt1, v0 GROUP BY rt1.c4;
SELECT rt0.c2, rt1.c2, rt1.c0, v0.c0, rt1.c3, rt1.c1 FROM v0, rt1, rt0 GROUP BY rt0.c2, rt1.c2, rt1.c0, v0.c0, rt1.c3, rt1.c1;
SELECT rt0.c2, rt1.c2, rt1.c0, v0.c0, rt1.c3, rt1.c1 FROM v0, rt1, rt0 GROUP BY rt0.c2, rt1.c2, rt1.c0, v0.c0, rt1.c3, rt1.c1 HAVING COUNT(COUNT(TOTAL(AVG(rt0.c3)))) UNION ALL SELECT ALL rt0.c2, rt1.c2, rt1.c0, v0.c0, rt1.c3, rt1.c1 FROM v0, rt1, rt0 GROUP BY rt0.c2, rt1.c2, rt1.c0, v0.c0, rt1.c3, rt1.c1 HAVING (NOT (COUNT(COUNT(TOTAL(AVG(rt0.c3)))))) UNION ALL SELECT rt0.c2, rt1.c2, rt1.c0, v0.c0, rt1.c3, rt1.c1 FROM v0, rt1 NOT INDEXED, rt0 GROUP BY rt0.c2, rt1.c2, rt1.c0, v0.c0, rt1.c3, rt1.c1 HAVING ((COUNT(COUNT(TOTAL(AVG(rt0.c3))))) ISNULL);
SELECT rt1.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt1.c4 FROM rt0, rt1;
SELECT rt1.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt1.c4 FROM rt0, rt1 WHERE (((((((((rt1.c3)AND(rt0.c4)))OR(rt0.c0)))AND(rt1.c0 COLLATE NOCASE)))AND((rt1.c3 IN (rt0.c3))))) UNION ALL SELECT ALL rt1.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt1.c4 FROM rt0, rt1 WHERE ((NOT (((((((((rt1.c3)AND(rt0.c4)))OR(rt0.c0)))AND(rt1.c0 COLLATE NOCASE)))AND((rt1.c3 IN (rt0.c3))))))) UNION ALL SELECT ALL rt1.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt1.c4 FROM rt0, rt1 WHERE (((((((((((rt1.c3)AND(rt0.c4)))OR(rt0.c0)))AND(rt1.c0 COLLATE NOCASE)))AND((rt1.c3 IN (rt0.c3))))) ISNULL));
SELECT rt1.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt1.c4 FROM rt0, rt1;
SELECT DISTINCT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0 WHERE (((((rt0.c1)>>(rt0.c0)))*(((((rt0.c1)AND(rt1.c2)))OR(rt0.c1))))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((NOT (((((rt0.c1)>>(rt0.c0)))*(((((rt0.c1)AND(rt1.c2)))OR(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE (((((((rt0.c1)>>(rt0.c0)))*(((((rt0.c1)AND(rt1.c2)))OR(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt1, rt0;
SELECT ALL rt0.c1, rt1.c3, rt1.c0, rt1.c4, rt0.c2, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c3, rt1.c0, rt1.c4, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt1.c3, rt1.c0, rt1.c4, rt0.c2, rt0.c0 FROM rt0, rt1 WHERE (TYPEOF(((rt1.c0) NOT NULL))) GROUP BY rt0.c1, rt1.c3, rt1.c0, rt1.c4, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt1.c3, rt1.c0, rt1.c4, rt0.c2, rt0.c0 FROM rt0, rt1 WHERE ((NOT (TYPEOF(((rt1.c0) NOT NULL))))) GROUP BY rt0.c1, rt1.c3, rt1.c0, rt1.c4, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt1.c3, rt1.c0, rt1.c4, rt0.c2, rt0.c0 FROM rt0, rt1 WHERE (((TYPEOF(((rt1.c0) NOT NULL))) ISNULL)) GROUP BY rt0.c1, rt1.c3, rt1.c0, rt1.c4, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt1.c3, rt1.c0, rt1.c4, rt0.c2, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c3, rt1.c0, rt1.c4, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0;
SELECT ALL rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0 HAVING ((GROUP_CONCAT(COUNT(*)))/(((COUNT(*))||(TOTAL(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0 HAVING (NOT (((GROUP_CONCAT(COUNT(*)))/(((COUNT(*))||(TOTAL(rt0.c1))))))) UNION ALL SELECT ALL rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0 HAVING ((((GROUP_CONCAT(COUNT(*)))/(((COUNT(*))||(TOTAL(rt0.c1)))))) ISNULL);
SELECT MIN(0.9872884265534494) FROM v0 ORDER BY ((((v0.c0) NOT NULL)) NOT BETWEEN (((v0.c0) IS FALSE)) AND (((v0.c0)LIKE(v0.c0))))  NULLS FIRST, CAST((~ (v0.c0)) AS BLOB) DESC  NULLS FIRST;
SELECT ALL * FROM v0 FULL OUTER JOIN rt1 ON CAST(rt0.c0 AS INTEGER) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (v0.c0) AND (0.2978398305287586))) NOT BETWEEN (((((rt0.c3)AND(rt1.c0)))AND(rt1.c1))) AND ((((rt1.c3))=((rt0.c0)))));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)>((+ (v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)>((+ (v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)>((+ (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt1.c1, v0.c0, rt1.c2, rt1.c0, rt1.c3 FROM v0, rt1 GROUP BY rt1.c1, v0.c0, rt1.c2, rt1.c0, rt1.c3;
SELECT rt1.c1, v0.c0, rt1.c2, rt1.c0, rt1.c3 FROM v0, rt1 WHERE (((rt1.c0 COLLATE RTRIM)&(0.09504715162456001))) GROUP BY rt1.c1, v0.c0, rt1.c2, rt1.c0, rt1.c3 UNION SELECT rt1.c1, v0.c0, rt1.c2, rt1.c0, rt1.c3 FROM v0, rt1 WHERE ((NOT (((rt1.c0 COLLATE RTRIM)&(0.09504715162456001))))) GROUP BY rt1.c1, v0.c0, rt1.c2, rt1.c0, rt1.c3 UNION SELECT ALL rt1.c1, v0.c0, rt1.c2, rt1.c0, rt1.c3 FROM v0, rt1 WHERE (((((rt1.c0 COLLATE RTRIM)&(0.09504715162456001))) ISNULL)) GROUP BY rt1.c1, v0.c0, rt1.c2, rt1.c0, rt1.c3;
SELECT rt1.c1, v0.c0, rt1.c2, rt1.c0, rt1.c3 FROM v0, rt1 GROUP BY rt1.c1, v0.c0, rt1.c2, rt1.c0, rt1.c3;
SELECT ALL rt1.c4 FROM rt1 GROUP BY rt1.c4;
SELECT ALL rt1.c4 FROM rt1 GROUP BY rt1.c4 HAVING ((GROUP_CONCAT(AVG(rt1.c0))) BETWEEN (rt1.c3 COLLATE RTRIM) AND (((AVG(rt1.c2))>(rt1.c2)))) UNION ALL SELECT ALL rt1.c4 FROM rt1 GROUP BY rt1.c4 HAVING (NOT (((GROUP_CONCAT(AVG(rt1.c0))) BETWEEN (rt1.c3 COLLATE RTRIM) AND (((AVG(rt1.c2))>(rt1.c2)))))) UNION ALL SELECT rt1.c4 FROM rt1 GROUP BY rt1.c4 HAVING ((((GROUP_CONCAT(AVG(rt1.c0))) BETWEEN (rt1.c3 COLLATE RTRIM) AND (((AVG(rt1.c2))>(rt1.c2))))) ISNULL);
SELECT v0.c0, rt1.c4, rt1.c3 FROM v0, rt1;
SELECT ALL v0.c0, rt1.c4, rt1.c3 FROM v0, rt1 WHERE ((((rt1.c1 IN ())) NOT BETWEEN (DATE('-715621299', rt1.c3, v0.c0)) AND ((((rt1.c2, rt1.c0, ''))<>((rt1.c0, rt1.c0, rt1.c1)))))) UNION ALL SELECT ALL v0.c0, rt1.c4, rt1.c3 FROM v0, rt1 WHERE ((NOT ((((rt1.c1 IN ())) NOT BETWEEN (DATE('-715621299', rt1.c3, v0.c0)) AND ((((rt1.c2, rt1.c0, ''))<>((rt1.c0, rt1.c0, rt1.c1)))))))) UNION ALL SELECT ALL v0.c0, rt1.c4, rt1.c3 FROM v0, rt1 WHERE ((((((rt1.c1 IN ())) NOT BETWEEN (DATE('-715621299', rt1.c3, v0.c0)) AND ((((rt1.c2, rt1.c0, ''))<>((rt1.c0, rt1.c0, rt1.c1)))))) ISNULL));
SELECT v0.c0, rt1.c4, rt1.c3 FROM v0, rt1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3;
SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM v0, rt0 WHERE (((x'') NOT NULL)) GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM v0, rt0 WHERE ((NOT (((x'') NOT NULL)))) GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM v0, rt0 WHERE (((((x'') NOT NULL)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3;
SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3;
SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING (((CAST(SUM(MAX(COUNT(rt1.c1))) AS REAL), MIN(AVG(TOTAL(COUNT(*)))), GROUP_CONCAT(COUNT(SUM(AVG(rt1.c4))))))<>((TOTAL(AVG(rt1.c0)), AVG(rt1.c2), rt1.c3))) UNION ALL SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING (NOT ((((CAST(SUM(MAX(COUNT(rt1.c1))) AS REAL), MIN(AVG(TOTAL(COUNT(*)))), GROUP_CONCAT(COUNT(SUM(AVG(rt1.c4))))))!=((TOTAL(AVG(rt1.c0)), AVG(rt1.c2), rt1.c3))))) UNION ALL SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING (((((CAST(SUM(MAX(COUNT(rt1.c1))) AS REAL), MIN(AVG(TOTAL(COUNT(*)))), GROUP_CONCAT(COUNT(SUM(AVG(rt1.c4))))))<>((TOTAL(AVG(rt1.c0)), AVG(rt1.c2), rt1.c3)))) ISNULL);
SELECT ALL * FROM rt1, v0, rt0;
SELECT ALL * FROM rt1, v0, rt0 WHERE (((((v0.c0)&(rt0.c3))) NOT NULL)) UNION ALL SELECT ALL * FROM rt1, v0, rt0 WHERE ((NOT (((((v0.c0)&(rt0.c3))) NOT NULL)))) UNION ALL SELECT * FROM rt1, v0, rt0 WHERE (((((((v0.c0)&(rt0.c3))) NOT NULL)) ISNULL));
SELECT ALL * FROM rt1, v0, rt0;
SELECT DISTINCT rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c1 FROM rt1 WHERE ((((rt1.c4)) NOT BETWEEN (((+ (rt1.c0)))) AND ((0.6134950582308959)))) UNION SELECT DISTINCT rt1.c1 FROM rt1 WHERE ((NOT ((((rt1.c4)) NOT BETWEEN (((+ (rt1.c0)))) AND ((0.6134950582308959)))))) UNION SELECT DISTINCT rt1.c1 FROM rt1 WHERE ((((((rt1.c4)) NOT BETWEEN (((+ (rt1.c0)))) AND ((0.6134950582308959)))) ISNULL));
SELECT DISTINCT rt1.c1 FROM rt1;
SELECT rt0.c1, rt0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON '*H' COLLATE NOCASE CROSS JOIN v0 ON UNICODE((+ (rt0.c3))) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON '*H' COLLATE NOCASE CROSS JOIN v0 ON UNICODE((+ (rt0.c3))) WHERE ((rt0.c2 IN ())) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON '*H' COLLATE NOCASE CROSS JOIN v0 ON UNICODE((+ (rt0.c3))) WHERE ((NOT ((rt0.c2 IN ())))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON '*H' COLLATE NOCASE CROSS JOIN v0 ON UNICODE((+ (rt0.c3))) WHERE ((((rt0.c2 IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON '*H' COLLATE NOCASE CROSS JOIN v0 ON UNICODE((+ (rt0.c3))) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c2 FROM rt0, v0, rt1 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, v0, rt1 GROUP BY rt0.c2 HAVING (((((NULL))>=((AVG(AVG('-779123418')))))) BETWEEN ((((MIN(rt0.c3), MAX(rt1.c4), TOTAL(rt0.c2)))<((rt0.c0, COUNT(rt0.c1), COUNT(AVG(SUM(rt1.c2))))))) AND (((rt1.c0) NOT BETWEEN (GROUP_CONCAT(SUM(rt1.c1))) AND (rt0.c3)))) UNION ALL SELECT ALL rt0.c2 FROM rt0, v0, rt1 GROUP BY rt0.c2 HAVING (NOT ((((((NULL))>=((AVG(AVG('-779123418')))))) BETWEEN ((((MIN(rt0.c3), MAX(rt1.c4), TOTAL(rt0.c2)))<((rt0.c0, COUNT(rt0.c1), COUNT(AVG(SUM(rt1.c2))))))) AND (((rt1.c0) NOT BETWEEN (GROUP_CONCAT(SUM(rt1.c1))) AND (rt0.c3)))))) UNION ALL SELECT rt0.c2 FROM rt0, v0, rt1 GROUP BY rt0.c2 HAVING (((((((NULL))>=((AVG(AVG('-779123418')))))) BETWEEN ((((MIN(rt0.c3), MAX(rt1.c4), TOTAL(rt0.c2)))<((rt0.c0, COUNT(rt0.c1), COUNT(AVG(SUM(rt1.c2))))))) AND (((rt1.c0) NOT BETWEEN (GROUP_CONCAT(SUM(rt1.c1))) AND (rt0.c3))))) ISNULL);
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON ((((CAST(rt1.c2 AS TEXT))OR((rt0.c0 IN (rt1.c4)))))OR(((rt1.c4) NOT BETWEEN (rt0.c4) AND (rt0.c2)))) INNER JOIN v0 ON ((v0.c0 COLLATE BINARY) BETWEEN (rt0.c2) AND (((((rt0.c1)AND(rt1.c4)))AND(rt0.c4))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON ((((CAST(rt1.c2 AS TEXT))OR((rt0.c0 IN (rt1.c4)))))OR(((rt1.c4) NOT BETWEEN (rt0.c4) AND (rt0.c2)))) INNER JOIN v0 ON ((v0.c0 COLLATE BINARY) BETWEEN (rt0.c2) AND (((((rt0.c1)AND(rt1.c4)))AND(rt0.c4)))) WHERE ((- (((((((((rt0.c2)AND(NULL)))AND(v0.c0)))AND('tVwF')))AND('LR'))))) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON ((((CAST(rt1.c2 AS TEXT))OR((rt0.c0 IN (rt1.c4)))))OR(((rt1.c4) NOT BETWEEN (rt0.c4) AND (rt0.c2)))) INNER JOIN v0 ON ((v0.c0 COLLATE BINARY) BETWEEN (rt0.c2) AND (((((rt0.c1)AND(rt1.c4)))AND(rt0.c4)))) WHERE ((NOT ((- (((((((((rt0.c2)AND(NULL)))AND(v0.c0)))AND('tVwF')))AND('LR'))))))) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON ((((CAST(rt1.c2 AS TEXT))OR((rt0.c0 IN (rt1.c4)))))OR(((rt1.c4) NOT BETWEEN (rt0.c4) AND (rt0.c2)))) INNER JOIN v0 ON ((v0.c0 COLLATE BINARY) BETWEEN (rt0.c2) AND (((((rt0.c1)AND(rt1.c4)))AND(rt0.c4)))) WHERE ((((- (((((((((rt0.c2)AND(NULL)))AND(v0.c0)))AND('tVwF')))AND('LR'))))) ISNULL));
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON ((((CAST(rt1.c2 AS TEXT))OR((rt0.c0 IN (rt1.c4)))))OR(((rt1.c4) NOT BETWEEN (rt0.c4) AND (rt0.c2)))) INNER JOIN v0 ON ((v0.c0 COLLATE BINARY) BETWEEN (rt0.c2) AND (((((rt0.c1)AND(rt1.c4)))AND(rt0.c4))));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt1.c2, rt1.c4, rt0.c2, rt1.c1, rt1.c0, rt0.c0 FROM rt0, v0 LEFT OUTER JOIN rt1 ON (((rt0.c3 IN (rt1.c1, rt0.c2, v0.c0))) IS TRUE) GROUP BY rt1.c2, rt1.c4, rt0.c2, rt1.c1, rt1.c0, rt0.c0;
SELECT rt1.c2, rt1.c4, rt0.c2, rt1.c1, rt1.c0, rt0.c0 FROM rt0, v0 LEFT OUTER JOIN rt1 ON (((rt0.c3 IN (rt1.c1, rt0.c2, v0.c0))) IS TRUE) WHERE ('b#d') GROUP BY rt1.c2, rt1.c4, rt0.c2, rt1.c1, rt1.c0, rt0.c0 UNION SELECT rt1.c2, rt1.c4, rt0.c2, rt1.c1, rt1.c0, rt0.c0 FROM rt0, v0 LEFT OUTER JOIN rt1 ON (((rt0.c3 IN (rt1.c1, rt0.c2, v0.c0))) IS TRUE) WHERE ((NOT ('b#d'))) GROUP BY rt1.c2, rt1.c4, rt0.c2, rt1.c1, rt1.c0, rt0.c0 UNION SELECT rt1.c2, rt1.c4, rt0.c2, rt1.c1, rt1.c0, rt0.c0 FROM rt0, v0 LEFT OUTER JOIN rt1 ON (((rt0.c3 IN (rt1.c1, rt0.c2, v0.c0))) IS TRUE) WHERE ((('b#d') ISNULL)) GROUP BY rt1.c2, rt1.c4, rt0.c2, rt1.c1, rt1.c0, rt0.c0;
SELECT rt1.c2, rt1.c4, rt0.c2, rt1.c1, rt1.c0, rt0.c0 FROM rt0, v0 LEFT OUTER JOIN rt1 ON (((rt0.c3 IN (rt1.c1, rt0.c2, v0.c0))) IS TRUE) GROUP BY rt1.c2, rt1.c4, rt0.c2, rt1.c1, rt1.c0, rt0.c0;
SELECT ALL rt0.c0, rt1.c0 FROM rt1 RIGHT OUTER JOIN rt0 ON (NOT ((v0.c0 IN ()))) RIGHT OUTER JOIN v0 ON (HEX(rt1.c1) IN ()) GROUP BY rt0.c0, rt1.c0;
SELECT rt0.c0, rt1.c0 FROM rt1 RIGHT OUTER JOIN rt0 ON (NOT ((v0.c0 IN ()))) RIGHT OUTER JOIN v0 ON (HEX(rt1.c1) IN ()) GROUP BY rt0.c0, rt1.c0 HAVING MAX(COUNT(rt1.c4)) UNION ALL SELECT ALL rt0.c0, rt1.c0 FROM rt1 RIGHT OUTER JOIN rt0 ON (NOT ((v0.c0 IN ()))) RIGHT OUTER JOIN v0 ON (HEX(rt1.c1) IN ()) GROUP BY rt0.c0, rt1.c0 HAVING (NOT (MAX(COUNT(rt1.c4)))) UNION ALL SELECT ALL rt0.c0, rt1.c0 FROM rt1 RIGHT OUTER JOIN rt0 ON (NOT ((v0.c0 IN ()))) RIGHT OUTER JOIN v0 ON (HEX(rt1.c1) IN ()) GROUP BY rt0.c0, rt1.c0 HAVING ((MAX(COUNT(rt1.c4))) ISNULL);
SELECT ALL * FROM rt0, rt1, v0;
SELECT ALL * FROM rt0, rt1, v0 WHERE (CAST(((((((((rt0.c2)AND(rt1.c4)))AND(rt0.c4)))OR(rt1.c0)))AND(rt1.c4)) AS NUMERIC)) UNION ALL SELECT ALL * FROM rt0, rt1, v0 WHERE ((NOT (CAST(((((((((rt0.c2)AND(rt1.c4)))AND(rt0.c4)))OR(rt1.c0)))AND(rt1.c4)) AS NUMERIC)))) UNION ALL SELECT ALL * FROM rt0, rt1, v0 WHERE (((CAST(((((((((rt0.c2)AND(rt1.c4)))AND(rt0.c4)))OR(rt1.c0)))AND(rt1.c4)) AS NUMERIC)) ISNULL));
SELECT ALL * FROM rt0, rt1, v0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE (CAST(((rt0.c3) IS TRUE) AS NUMERIC)) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CAST(((rt0.c3) IS TRUE) AS NUMERIC)))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE (((CAST(((rt0.c3) IS TRUE) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c1 END) IS FALSE)) GROUP BY rt1.c2, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (((CASE WHEN rt1.c2 THEN rt1.c1 END) IS FALSE)))) GROUP BY rt1.c2, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE (((((CASE WHEN rt1.c2 THEN rt1.c1 END) IS FALSE)) ISNULL)) GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT rt0.c3, rt1.c4, rt0.c1, rt0.c2, rt1.c3, rt0.c4, rt1.c2, v0.c0 FROM v0 FULL OUTER JOIN rt1 ON (+ (CAST(rt0.c4 AS NUMERIC))) CROSS JOIN rt0 ON (((((v0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))))<>((~ (rt0.c3)))) GROUP BY rt0.c3, rt1.c4, rt0.c1, rt0.c2, rt1.c3, rt0.c4, rt1.c2, v0.c0;
SELECT rt1.c3, rt1.c1, rt1.c0, v0.c0, rt1.c4 FROM rt1, v0;
SELECT rt1.c3, rt1.c1, rt1.c0, v0.c0, rt1.c4 FROM rt1, v0 WHERE (rt1.c2) UNION ALL SELECT ALL rt1.c3, rt1.c1, rt1.c0, v0.c0, rt1.c4 FROM rt1, v0 WHERE ((NOT (rt1.c2))) UNION ALL SELECT ALL rt1.c3, rt1.c1, rt1.c0, v0.c0, rt1.c4 FROM rt1, v0 WHERE (((rt1.c2) ISNULL));
SELECT rt1.c3, rt1.c1, rt1.c0, v0.c0, rt1.c4 FROM rt1, v0;
SELECT DISTINCT v0.c0, rt1.c1, rt1.c3, rt1.c4, rt1.c2, rt1.c0 FROM rt1, v0;
SELECT DISTINCT v0.c0, rt1.c1, rt1.c3, rt1.c4, rt1.c2, rt1.c0 FROM rt1, v0 WHERE (((((rt1.c2)>>(rt1.c2))) NOT BETWEEN (CASE '1258887627'  WHEN rt1.c4 THEN v0.c0 WHEN v0.c0 THEN rt1.c0 WHEN rt1.c3 THEN 0.053048178188946915 END) AND (((rt1.c4)>('#Hb}2'))))) UNION SELECT DISTINCT v0.c0, rt1.c1, rt1.c3, rt1.c4, rt1.c2, rt1.c0 FROM rt1, v0 WHERE ((NOT (((((rt1.c2)>>(rt1.c2))) NOT BETWEEN (CASE '1258887627'  WHEN rt1.c4 THEN v0.c0 WHEN v0.c0 THEN rt1.c0 WHEN rt1.c3 THEN 0.053048178188946915 END) AND (((rt1.c4)>('#Hb}2'))))))) UNION SELECT DISTINCT v0.c0, rt1.c1, rt1.c3, rt1.c4, rt1.c2, rt1.c0 FROM rt1, v0 WHERE (((((((rt1.c2)>>(rt1.c2))) NOT BETWEEN (CASE '1258887627'  WHEN rt1.c4 THEN v0.c0 WHEN v0.c0 THEN rt1.c0 WHEN rt1.c3 THEN 0.053048178188946915 END) AND (((rt1.c4)>('#Hb}2'))))) ISNULL));
SELECT DISTINCT v0.c0, rt1.c1, rt1.c3, rt1.c4, rt1.c2, rt1.c0 FROM rt1, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CASE ((v0.c0)IS NOT(v0.c0))  WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN ((v0.c0)>=(v0.c0)) WHEN v0.c0 THEN (((v0.c0))<((v0.c0))) WHEN (v0.c0 IN ()) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) ELSE (x'' IN (v0.c0)) END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE ((v0.c0)IS NOT(v0.c0))  WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN ((v0.c0)>=(v0.c0)) WHEN v0.c0 THEN (((v0.c0))<((v0.c0))) WHEN (v0.c0 IN ()) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) ELSE (x'' IN (v0.c0)) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE ((v0.c0)IS NOT(v0.c0))  WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN ((v0.c0)>=(v0.c0)) WHEN v0.c0 THEN (((v0.c0))<((v0.c0))) WHEN (v0.c0 IN ()) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) ELSE (x'' IN (v0.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt1.c3, rt1.c4, rt1.c1 FROM rt1, v0 GROUP BY rt1.c3, rt1.c4, rt1.c1;
SELECT ALL rt1.c3, rt1.c4, rt1.c1 FROM rt1, v0 GROUP BY rt1.c3, rt1.c4, rt1.c1 HAVING SQLITE_COMPILEOPTION_GET('	WU') UNION ALL SELECT rt1.c3, rt1.c4, rt1.c1 FROM rt1, v0 GROUP BY rt1.c3, rt1.c4, rt1.c1 HAVING (NOT (SQLITE_COMPILEOPTION_GET('	WU'))) UNION ALL SELECT rt1.c3, rt1.c4, rt1.c1 FROM rt1, v0 GROUP BY rt1.c3, rt1.c4, rt1.c1 HAVING ((SQLITE_COMPILEOPTION_GET('	WU')) ISNULL);
SELECT ALL rt1.c3, rt1.c4, rt1.c1 FROM rt1, v0 GROUP BY rt1.c3, rt1.c4, rt1.c1;
SELECT ALL rt1.c3, rt1.c4, rt1.c1 FROM rt1, v0 GROUP BY rt1.c3, rt1.c4, rt1.c1 HAVING SQLITE_COMPILEOPTION_GET('	WU') UNION ALL SELECT rt1.c3, rt1.c4, rt1.c1 FROM rt1, v0 GROUP BY rt1.c3, rt1.c4, rt1.c1 HAVING (NOT (SQLITE_COMPILEOPTION_GET('	WU'))) UNION ALL SELECT rt1.c3, rt1.c4, rt1.c1 FROM rt1, v0 GROUP BY rt1.c3, rt1.c4, rt1.c1 HAVING ((SQLITE_COMPILEOPTION_GET('	WU')) ISNULL);
SELECT ALL rt1.c3, rt1.c4, rt1.c1 FROM rt1, v0 GROUP BY rt1.c3, rt1.c4, rt1.c1;
SELECT ALL MIN(CASE WHEN ((v0.c0)GLOB(v0.c0)) THEN MAX(v0.c0, v0.c0) END) FROM v0;
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (((json_patch(rt1.c1, rt1.c4))LIKE(((rt1.c0)&(rt1.c0))))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (((json_patch(rt1.c1, rt1.c4))LIKE(((rt1.c0)&(rt1.c0))))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((json_patch(rt1.c1, rt1.c4))LIKE(((rt1.c0)&(rt1.c0))))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM rt1, v0, rt0;
SELECT DISTINCT * FROM rt1, v0, rt0 WHERE ((((((~ (rt0.c2)))OR(rt1.c1)))OR(CASE v0.c0  WHEN rt1.c3 THEN rt0.c2 ELSE rt0.c0 END))) UNION SELECT DISTINCT * FROM rt1, v0, rt0 WHERE ((NOT ((((((~ (rt0.c2)))OR(rt1.c1)))OR(CASE v0.c0  WHEN rt1.c3 THEN rt0.c2 ELSE rt0.c0 END))))) UNION SELECT DISTINCT * FROM rt1, v0, rt0 WHERE ((((((((~ (rt0.c2)))OR(rt1.c1)))OR(CASE v0.c0  WHEN rt1.c3 THEN rt0.c2 ELSE rt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM rt1, v0, rt0;
SELECT ALL rt1.c2, rt0.c0 FROM rt0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt0.c0;
SELECT ALL rt1.c2, rt0.c0 FROM rt0 NATURAL JOIN rt1 WHERE (((NULL)*((+ (rt0.c3))))) GROUP BY rt1.c2, rt0.c0 UNION SELECT rt1.c2, rt0.c0 FROM rt0 NATURAL JOIN rt1 WHERE ((NOT (((NULL)*((+ (rt0.c3))))))) GROUP BY rt1.c2, rt0.c0 UNION SELECT ALL rt1.c2, rt0.c0 FROM rt0 NATURAL JOIN rt1 WHERE (((((NULL)*((+ (rt0.c3))))) ISNULL)) GROUP BY rt1.c2, rt0.c0;
SELECT ALL rt1.c2, rt0.c0 FROM rt0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt0.c0;
SELECT rt1.c2, v0.c0, rt1.c3, rt1.c0 FROM v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c3, rt1.c0;
SELECT rt1.c2, v0.c0, rt1.c3, rt1.c0 FROM v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c3, rt1.c0 HAVING (((((TOTAL(COUNT(rt1.c0))) IS TRUE)))<=((MAX(AVG(COUNT(*)))))) UNION ALL SELECT ALL rt1.c2, v0.c0, rt1.c3, rt1.c0 FROM v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c3, rt1.c0 HAVING (NOT ((((((TOTAL(COUNT(rt1.c0))) IS TRUE)))<=((MAX(AVG(COUNT(*)))))))) UNION ALL SELECT ALL rt1.c2, v0.c0, rt1.c3, rt1.c0 FROM v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c3, rt1.c0 HAVING (((((((TOTAL(COUNT(rt1.c0))) IS TRUE)))<=((MAX(AVG(COUNT(*))))))) ISNULL);
SELECT ALL * FROM v0, rt0, rt1;
SELECT ALL * FROM v0, rt0, rt1 WHERE (((rt1.c2 COLLATE RTRIM) IS FALSE)) UNION ALL SELECT ALL * FROM v0, rt0, rt1 WHERE ((NOT (((rt1.c2 COLLATE RTRIM) IS FALSE)))) UNION ALL SELECT * FROM v0, rt0, rt1 WHERE (((((rt1.c2 COLLATE RTRIM) IS FALSE)) ISNULL));
SELECT ALL * FROM v0, rt0, rt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((x'' IN ((- (rt0.c4)), rt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((x'' IN ((- (rt0.c4)), rt0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((x'' IN ((- (rt0.c4)), rt0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c3, v0.c0, rt0.c0, rt0.c4, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c4, rt0.c2;
SELECT ALL rt0.c3, v0.c0, rt0.c0, rt0.c4, rt0.c2 FROM rt0, v0 WHERE (CAST(ROUND(v0.c0, rt0.c1) AS INTEGER)) GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c4, rt0.c2 UNION SELECT ALL rt0.c3, v0.c0, rt0.c0, rt0.c4, rt0.c2 FROM rt0 NOT INDEXED, v0 WHERE ((NOT (CAST(ROUND(v0.c0, rt0.c1) AS INTEGER)))) GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c4, rt0.c2 UNION SELECT ALL rt0.c3, v0.c0, rt0.c0, rt0.c4, rt0.c2 FROM rt0, v0 WHERE (((CAST(ROUND(v0.c0, rt0.c1) AS INTEGER)) ISNULL)) GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c4, rt0.c2;
SELECT ALL rt0.c3, v0.c0, rt0.c0, rt0.c4, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c4, rt0.c2;
SELECT rt0.c2, rt1.c4, rt0.c3, rt0.c1 FROM rt0, rt1, v0 NOT INDEXED GROUP BY rt0.c2, rt1.c4, rt0.c3, rt0.c1;
SELECT rt0.c2, rt1.c4, rt0.c3, rt0.c1 FROM rt0, rt1, v0 GROUP BY rt0.c2, rt1.c4, rt0.c3, rt0.c1 HAVING MAX((+ (GROUP_CONCAT(COUNT(rt0.c4))))) UNION ALL SELECT ALL rt0.c2, rt1.c4, rt0.c3, rt0.c1 FROM rt0, rt1, v0 GROUP BY rt0.c2, rt1.c4, rt0.c3, rt0.c1 HAVING (NOT (MAX((+ (GROUP_CONCAT(COUNT(rt0.c4))))))) UNION ALL SELECT rt0.c2, rt1.c4, rt0.c3, rt0.c1 FROM rt0, rt1, v0 GROUP BY rt0.c2, rt1.c4, rt0.c3, rt0.c1 HAVING ((MAX((+ (GROUP_CONCAT(COUNT(rt0.c4)))))) ISNULL);
SELECT ALL MAX(((((rt1.c4) NOT BETWEEN (rt1.c4) AND (0.7270311753923647))) NOT BETWEEN ((NOT (rt1.c2))) AND (((rt1.c4)OR(rt1.c2))))) FROM rt1;
SELECT ALL rt1.c2 FROM rt1;
SELECT ALL rt1.c2 FROM rt1 WHERE (load_extension(((rt1.c2) NOT BETWEEN (0.9162728123759615) AND (rt1.c2)), CAST(-1.7976931348623157E308 AS BLOB))) UNION ALL SELECT ALL rt1.c2 FROM rt1 WHERE ((NOT (load_extension(((rt1.c2) NOT BETWEEN (0.9162728123759615) AND (rt1.c2)), CAST(-1.7976931348623157E308 AS BLOB))))) UNION ALL SELECT ALL rt1.c2 FROM rt1 WHERE (((load_extension(((rt1.c2) NOT BETWEEN (0.9162728123759615) AND (rt1.c2)), CAST(-1.7976931348623157E308 AS BLOB))) ISNULL));
SELECT ALL rt1.c2 FROM rt1;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT ((NOT (rt0.c2))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE ((((NOT (rt0.c2))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt1.c0, rt0.c0, rt0.c3 FROM v0, rt1, rt0 GROUP BY rt0.c1, rt1.c0, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt1.c0, rt0.c0, rt0.c3 FROM v0, rt1, rt0 WHERE (CAST(json_array(rt0.c4, rt1.c3) AS BLOB)) GROUP BY rt0.c1, rt1.c0, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c1, rt1.c0, rt0.c0, rt0.c3 FROM v0, rt1, rt0 WHERE ((NOT (CAST(json_array(rt0.c4, rt1.c3) AS BLOB)))) GROUP BY rt0.c1, rt1.c0, rt0.c0, rt0.c3 UNION SELECT rt0.c1, rt1.c0, rt0.c0, rt0.c3 FROM v0, rt1, rt0 WHERE (((CAST(json_array(rt0.c4, rt1.c3) AS BLOB)) ISNULL)) GROUP BY rt0.c1, rt1.c0, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt1.c0, rt0.c0, rt0.c3 FROM v0, rt1, rt0 GROUP BY rt0.c1, rt1.c0, rt0.c0, rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING SUM(COUNT(*)) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS TEXT)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c0 AS REAL) AS TEXT)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST(CAST(rt0.c0 AS REAL) AS TEXT)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt1.c2, rt0.c2, rt0.c4 FROM rt0, v0 CROSS JOIN rt1 ON ((CAST(rt1.c0 AS NUMERIC))>=(rt0.c3));
SELECT DISTINCT rt1.c2, rt0.c2, rt0.c4 FROM rt0, v0 CROSS JOIN rt1 ON ((CAST(rt1.c0 AS NUMERIC))>=(rt0.c3)) WHERE (0.4872935256568791) UNION SELECT DISTINCT rt1.c2, rt0.c2, rt0.c4 FROM rt0, v0 CROSS JOIN rt1 ON ((CAST(rt1.c0 AS NUMERIC))>=(rt0.c3)) WHERE ((NOT (0.4872935256568791))) UNION SELECT DISTINCT rt1.c2, rt0.c2, rt0.c4 FROM rt0, v0 CROSS JOIN rt1 ON ((CAST(rt1.c0 AS NUMERIC))>=(rt0.c3)) WHERE (((0.4872935256568791) ISNULL));
SELECT DISTINCT rt1.c2, rt0.c2, rt0.c4 FROM rt0, v0 CROSS JOIN rt1 ON ((CAST(rt1.c0 AS NUMERIC))>=(rt0.c3));
SELECT ALL rt1.c0, rt0.c4, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c0, rt0.c4, rt1.c1;
SELECT rt1.c0, rt0.c4, rt1.c1 FROM rt0, v0, rt1 WHERE (CASE ((rt1.c2) NOTNULL)  WHEN (- (rt1.c3)) THEN (- (rt0.c3)) ELSE COALESCE(DISTINCT rt0.c4, rt1.c1, rt1.c1, rt1.c2) END) GROUP BY rt1.c0, rt0.c4, rt1.c1 UNION SELECT rt1.c0, rt0.c4, rt1.c1 FROM rt0, v0, rt1 WHERE ((NOT (CASE ((rt1.c2) NOTNULL)  WHEN (- (rt1.c3)) THEN (- (rt0.c3)) ELSE COALESCE(DISTINCT rt0.c4, rt1.c1, rt1.c1, rt1.c2) END))) GROUP BY rt1.c0, rt0.c4, rt1.c1 UNION SELECT rt1.c0, rt0.c4, rt1.c1 FROM rt0, v0, rt1 WHERE (((CASE ((rt1.c2) NOTNULL)  WHEN (- (rt1.c3)) THEN (- (rt0.c3)) ELSE COALESCE(DISTINCT rt0.c4, rt1.c1, rt1.c1, rt1.c2) END) ISNULL)) GROUP BY rt1.c0, rt0.c4, rt1.c1;
SELECT ALL rt1.c0, rt0.c4, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c0, rt0.c4, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c4, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c4, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c4, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c4, rt1.c1 HAVING COUNT(SUM(GROUP_CONCAT(rt1.c0))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c4, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c4, rt1.c1 HAVING (NOT (COUNT(SUM(GROUP_CONCAT(rt1.c0))))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c4, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c4, rt1.c1 HAVING ((COUNT(SUM(GROUP_CONCAT(rt1.c0)))) ISNULL);
SELECT * FROM v0, rt0, rt1;
SELECT * FROM v0, rt0, rt1 WHERE (x'') UNION ALL SELECT * FROM v0, rt0, rt1 WHERE ((NOT (x''))) UNION ALL SELECT * FROM v0, rt0, rt1 WHERE (((x'') ISNULL));
SELECT * FROM v0, rt0, rt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c4)|((rt0.c0 IN (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c4)|((rt0.c0 IN (rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c4)|((rt0.c0 IN (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
