-- Time: 2024/06/09 14:09:37
-- Database: database76
-- Database version: 3.40.0
-- seed value: 2872178376
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, languageid="lid"); -- 13ms;
INSERT OR REPLACE INTO vt0(lid) VALUES (0X4e3965f2), (0.8736144941638334), (0xebd4f5a); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE vt0 SET lid=NULL WHERE (~ ((~ (vt0.c0)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=247287642 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((('Nq佚VC/s'))<((NULL))))OR(CASE x''  WHEN '185358519' THEN NULL END)))OR((((0.33407412122921754))>=((0.8736144941638334))))))AND(0xffffffff909f1fd5)))AND(((0.2053894513381056)<(0.7375577037235559)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '185358519 sz=-1080595572 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1370852883 sz=959063955 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=959063955 unordered noskipscan'); -- 3ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '' THEN '' END)!=(((x'712bac21') NOT BETWEEN (0.4324444480529296) AND (0x5bd2ae1e)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -1175624375'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=157810260'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '959063955 sz=1370852883 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.03687719775460174) NOT BETWEEN ('~u') AND ('-1175624375')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1512973616 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2069941342 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(451751279 AS BLOB) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE NULL  WHEN x'' THEN 0.8736144941638334 END)OR(UNLIKELY(0.5060932358526453))))OR(((1.7976931348623157E308) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1315424341 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((NULL, x'', NULL)) NOT BETWEEN ((x'3678', 0X4e67c855, NULL)) AND ((248634331, NULL, NULL))) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN ()) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=248634331 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-1430865491 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1175624375'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1868619819 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1315424341 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-861589075 -1080595572 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '582682264 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1461085006 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(NULL AS INTEGER))OR((('0.5060932358526453') NOT BETWEEN (0X51b58e13) AND (NULL)))))AND(x'' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-54676834'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-807621249 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('ꔏeR~hp[')GLOB(0.4340325011854196)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1683132873 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE BINARY AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE RTRIM AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(json_valid(NULL) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-1543575584'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-38802327 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN NULL END) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1080595572 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-72340513'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1454656409 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 2ms;
DELETE FROM sqlite_stat1 WHERE (((('Ct6.')>>(x''))) BETWEEN (NULL) AND (((NULL)IS('<}q\7')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.7375577037235559')>>('-807621249')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_object(0.1690567545150513, NULL))/(0.7400397481788509 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'34cb')LIKE(0.10157963434117667)))>((+ (0.11298339936681767)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNICODE(((x'')!=(0.8272808948201215))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0X4e67c855, NULL, '0.8272808948201215')) NOT BETWEEN ((((('-1543575584'))>((NULL))), (0.22550920420500775 IN (0.009026893370699618, NULL)), x'011a9a1b' COLLATE BINARY)) AND (((((x''))<((x'4c22bc37fd4d'))), ((' ')>('-50499294')), (~ (0.3664733664563996))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1390798268, x'', x'')) NOT BETWEEN ((((NULL) NOT BETWEEN ('*') AND (0.7375577037235559)), ((x'') NOT NULL), ((0.6343386202242194) BETWEEN ('582682264') AND ('')))) AND (((((')')) NOT BETWEEN ((x'')) AND ((''))), CASE WHEN NULL THEN '-157272613' WHEN '0a㣜''F>}J}' THEN x'969b' WHEN 0.32004660355914405 THEN 744078790 ELSE NULL END, NULL COLLATE RTRIM))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-801380131 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- ('o^4Qk+#'')')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '157810260 1624044914 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN NULL THEN NULL END)AND(TRIM(DISTINCT NULL))))AND(CAST('-263026933' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1021909909 sz=84733440 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE QUOTE(CASE 1.312384498E9  WHEN x'' THEN NULL END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-560720887'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '404361293 sz=141459685'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) BETWEEN (NULL COLLATE BINARY) AND ((('-801380131')LIKE(0xffffffffb0a7e363)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((669185984)IS(x'')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'7b78')&(x'fa3f'))) BETWEEN ((NOT (0.717375075111866))) AND (((0.17870532810267603)!=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1806628889'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=185358519 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1390798268 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1370852883 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-261429350 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-899925796)=('-1868619819'))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1303868432 sz=-831279377 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=185358519 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-831279377')IS NOT(x''))))>((CAST(0x342b2fbf AS REAL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1782010725 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1247504574 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT ('<ak-%J5' IN ())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0.5801220474898191 AS TEXT) IN (CASE ''  WHEN x'' THEN 0.8477981986108573 ELSE 0.3961686216809608 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, 0.2154076068583839, '')) BETWEEN (((((0Xffffffff849f33a2, '247287642', '#?', x'', 0X6bef6b22, '-923652054', x''))>=((NULL, 0.11403613396109169, NULL, '1672674533', NULL, x'', NULL))), (~ (x'')), ((x'') IS FALSE))) AND (((('Ct5.')%('-199097508')), -923652054 COLLATE NOCASE, NULLIF(DISTINCT 0.1690567545150513, 'C萒b_NE')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'' COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1393013079 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1624044914 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x967fe54) BETWEEN ((('') NOT NULL)) AND (x'97c0294f')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-263026933 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE PRINTF(((((((((-1.430865491E9)OR(NULL)))OR('-1868619819')))AND('~8謥0E8(w')))AND(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'' IN ()))AND(((x'5f74') NOT NULL))))OR((((('0.8736144941638334')AND('1624044914')))AND(0.004074447094619904)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1782010725 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 -1898751247'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.7830088818816878)OR(NULL)))OR(NULL))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '6 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LOWER(',')) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'ba10'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN LIKELIHOOD(x'', 0.3381551561690248) THEN (0.9165192064007249 IN (0.8958990480930863)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((NULL)%(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1040519420 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-779579514 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=570984081'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0xfffffffff15bbd8c))>(('GѠ63d#x')))) BETWEEN ((((1.672674533E9)) NOT BETWEEN ((x'')) AND (('1811843877')))) AND ((NOT ('C,lpP}Zg')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
DELETE FROM sqlite_stat1 WHERE UNICODE(((('FuZ?6pT,'))>=(('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1806628889 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1913977760 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (NULL)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1835823553'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=854591810 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.5675678922488995)AND(NULL)))AND(NULL)) IN (((x'') NOT BETWEEN (744078790) AND (NULL)), ((((0.556194670119028)AND(0.7709368461291245)))AND('2062730754')), ((0.44809128166144063)AND('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 4ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-50499294 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 6.69185984E8; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1257022735 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (NULL) AND ('PR'))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1393013079 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1806628889 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1336320737'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2038036188'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT ((((NULL)OR(NULL)))OR(''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('ꔏeR~hp[')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('0.7375577037235559') NOTNULL) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '701147504 sz=1540533790'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '274605645'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1393013079 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UNICODE('')) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1955307136 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2080126226'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 -1898751247 sz=-364821335 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE NOCASE AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') NOT BETWEEN (x'') AND (-1371468578)) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('䃴E') NOT BETWEEN ('-1461085006') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-801380131 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1223854699 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-54676834 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-642232432 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (NOT (x'3e34')) THEN ((('1e500', 0.3664733664563996, 2080126226)) NOT BETWEEN ((0.22550920420500775, '1370852883', '247287642')) AND ((x'f78a40d3', x'', NULL))) WHEN (((x'0aef', NULL, 0.21345427117949323))=((x'5da7db17', '1246389770', 0.6537746815232799))) THEN LIKELIHOOD(DISTINCT x'', 0.09294479037032355) WHEN ((x'')/(0.08400635287704761)) THEN ((x'')%(1.811843877E9)) ELSE (~ (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN x'' THEN 0.3555407273706429 WHEN x'' THEN x'' WHEN '' THEN x'' ELSE '' END COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)+(''))) NOT BETWEEN (TIME(0.2887283541986364, 0.47916396737953293, x'', '{', x'')) AND (((0Xddaefa8) NOT BETWEEN (NULL) AND (x'3994')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1543575584'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=160184398 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN ('-1301100103') AND (NULL)))<<((((0.5380028333067363)) NOT BETWEEN (('-1144390160')) AND (('0.8736144941638334'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 0 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=327539190 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.03804600513365364)OR(NULL)))AND(x'216f')))OR(']e1')))AND(1.312384498E9)))||((NOT (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'')<<('-1358492890')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ ('718875688')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)-(-1301100103)))AND((~ (0.054577478778171096)))))AND(((((((((NULL)OR(1758718257)))AND('}d\r6x-]|(')))AND(x'')))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1919822936 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT x'' COLLATE RTRIM, '-1454656409' COLLATE BINARY); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((x'')AND(x'')))AND(x'edcb')) AS BLOB); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST((('') BETWEEN (0.11306111155029885) AND (x'')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '4 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=49265670 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-998593536 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'')OR('1246389770')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0.5438025776154035)) BETWEEN ((0.17484969511434)) AND ((NULL))) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(UNLIKELY(DISTINCT '1840324673') AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '' THEN '-546003766' ELSE '1919822936' END) BETWEEN ((('-923652054') NOT NULL)) AND (((0.4540676543162454)AND('^9_]30㐲G謍')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.2547219312089408) BETWEEN (x'6d0b') AND (x'')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1568795965'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('hp')>(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8436764517918885, -890968907, '1315424341')) NOT BETWEEN ((x'', 470997470, '0.2887283541986364')) AND (('Mw^L.<4o', -611189570, NULL))) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1983349096'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(CASE 0.7389942157614574  WHEN x'' THEN x'' WHEN 0Xfffffffff8d08412 THEN x'' WHEN NULL THEN 0.2547219312089408 ELSE '1840324673' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=485388812 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-981774029 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=850667078'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=535111975 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1419569020 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (SUBSTR('', -5.46003766E8) IN ((((0xffffffffea4144a9)) NOT BETWEEN ((x'538a')) AND ((x'fd9c'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'P)'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '295021951'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-192152747 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-263026933 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((('-409734149')) BETWEEN ((NULL)) AND ((0.42840800661179956))))AND((('499010425')IS(0Xffffffffed99d65a)))))OR(NULL)))AND((((1305190530)) BETWEEN ((x'')) AND ((x''))))))OR(((((((((0.03804600513365364)AND(0.68335470415513)))OR(0.6439739641824985)))AND('469296824')))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=-72340513'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((1314447911) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2062730754 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 992539286 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=447196787 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.0866241750041008 AS REAL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=69752475 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((1995618800) BETWEEN (x'') AND ('-1912442788'))))!=(((~ (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-289562246 sz=-1012451793 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '247287642 2038770225 sz=1247504574 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT CAST('' AS TEXT), 0.7383306787534122); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1257022735 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2062730754'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 952502810 sz=650549269'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 854591810 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(NULL AS NUMERIC) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')%(x'')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1146954742 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('1223854699' COLLATE NOCASE AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('fuz?6pt,') IS TRUE)) BETWEEN ('ꔏer~hp[' COLLATE RTRIM) AND ('胥D' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.5060932358526453 THEN NULL END)<((~ ('1919822936')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE ((('-1248733673', 0.3527018596087297, 0X6bef6b22))<=((1274377157, '}HqP-NaN?3?', '-1454656409')))  WHEN ((']Cwg|ࣉ<n') ISNULL) THEN ((0Xffffffffd3094272) NOT NULL) WHEN CAST(x'' AS NUMERIC) THEN LOWER(DISTINCT NULL) WHEN MIN(NULL, 0.5675678922488995) THEN '-1144390160' END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((((NULL)AND(0.6254362039124753)))AND('274605645')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '745987739 sz=1758718257 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-957491261 0 sz=-9223372036854775808 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 9.47863796E8 COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE x''  WHEN 'm' THEN NULL ELSE ')' END THEN CASE 0x7bfc3512  WHEN '1885210964' THEN 'pm tZA' END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=814105094 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-72340513 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))==((((('404361293')AND(0.054577478778171096)))OR('1672674533')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.6099849494457331; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-199097508 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT CAST(x'faf9' AS BLOB), NULL COLLATE RTRIM); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL))/(LIKE(')*I\<mMH', 0.17870532810267603, '0'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE 0.38118007781332264  WHEN x'' THEN x'' WHEN -38802327 THEN -1369877620 WHEN x'' THEN '-1540679309' WHEN 0.10844041242227453 THEN NULL WHEN '1261408046' THEN '-1050953459' ELSE x'' END THEN (('0.22550920420500775')/(x'c3aa')) WHEN (((x''))==((0.021976770342421403))) THEN ((x'')<('蔶')) WHEN NULL THEN CASE WHEN NULL THEN 0.8141873667266433 WHEN NULL THEN x'' WHEN '669185984' THEN x'592d' END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((('z)')OR('')))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-784978565 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-467672620 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-560720887)>=(x'')))-(NULL COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((NULL)) NOT BETWEEN ((0.6438221808582012)) AND ((0xffffffffd7baa22c))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-780706234 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1083602946 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (' ' IN (0.5806235410465183))  WHEN NULL COLLATE RTRIM THEN ((1901479729)<(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_USED((('u/o&l⁁F') BETWEEN (1.24638977E9) AND ('B|뢵 h'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'3fc6')*('')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0X1da43afc, '', -5.4676834E7))<=(('GmNsY{', x'', ''))) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1270587619 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-999272745 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '187842871 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'eb27') NOT BETWEEN ('爌^㱐8') AND ('*1sD|}X[&')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)>(CASE WHEN NULL THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-206754558 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHANGES(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((x'' COLLATE NOCASE)) AND ((x'' COLLATE NOCASE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATETIME((('OKG') IS TRUE), UNLIKELY(DISTINCT 0x6bef6b22), ((NULL)GLOB(0.3945972889245678))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=731908526 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=629424252 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(TOTAL_CHANGES()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-125708619 sz=1704959913 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '4 sz=-861589075 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1024901058 0 sz=897828049'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=854591810 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1336320737 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN (((((0.19307757348766952)) NOT BETWEEN ((-1.568795965E9)) AND (('t༕'))))) AND (((((0.6438221808582012)) BETWEEN ((NULL)) AND (('-955012115')))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')IS NOT('v')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1837004424'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1910103006'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY((('977046315') BETWEEN (0.06948013850027823) AND (NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2133684896 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1997722653 0 sz=160184398'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-959692973'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1371468578 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=850667078'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-546003766'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (0.8228726410470676)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=854591810 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-726774040 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2140662104 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1403452877 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1239950201 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1175624375 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1672674533'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=682522110 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(533111923) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS TEXT)) NOT BETWEEN ((~ ('1036533480'))) AND (((x'') BETWEEN ('⏩%W<y''S<') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-684288361'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2059607055 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-290837113 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffff9318d5a3)|(NULL)))GLOB((0.39594268685309153 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '947863796 -50499294 sz=332847263'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((536122338 COLLATE NOCASE) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('u[S^R~cx') NOT BETWEEN ('PR') AND (x''))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1.835823553E9) NOTNULL))|(((NULL)+(0Xffffffffa3cff6a2)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (x'')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.1414748437928931)) BETWEEN ((((-8.61589075E8)AND(NULL)))) AND ((LIKELIHOOD(0Xffffffffea4144a9, 0.8338851269355421)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS INTEGER))OR(((x'') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1288113687 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE MIN(((x'')<=('247287642')), SUBSTR(0.33520874139844103, 0.5014292489192206), (('-1977683705')<(0.9400026530361261)), CAST(0xffffffffeb4c9005 AS INTEGER)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1269988865 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1823805287 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2045238437 noskipscan'); -- 3ms;
DELETE FROM sqlite_stat1 WHERE ((((((((('' IN ()))OR(((NULL)||('248634331')))))AND((NULL IN ()))))AND(CAST(NULL AS REAL))))AND(((0X68709f14)>(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1983349096 2062730754 sz=1223854699 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1683132873 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-245645940 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((x'')OR(NULL)))OR(x'bf95')) THEN CAST('[zP]' AS NUMERIC) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1868619819'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND(('' IN ()))))AND(((-1495681616)+(160184398)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1142315455 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 -111455600 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')*(-261429350))) BETWEEN (rtreenode(NULL, '')) AND (LTRIM(x'', x'1db1'))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (LOWER(DISTINCT NULL) IN (((('-1395871688'))>=((x''))), UNLIKELY(9.82813453E8))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_extract(LIKELIHOOD('-546003766', 0.12666065886021205), CASE WHEN 0.4346847747133261 THEN '' END, ((0X68c18df4) NOT BETWEEN ('') AND (x'')), ((334947756) NOT NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1080595572 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('q9dC[Cu') BETWEEN (NULL) AND (1.919822936E9))) NOT BETWEEN (SUBSTR(NULL, 0Xffffffffa27e12c3)) AND (((NULL) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-678540061 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT ((0.3520593076231372) NOT BETWEEN ('701147504') AND (0.7056692285362267))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-170496363 -656212405 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1868619819 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.5032637861333811) ISNULL), ((x'') BETWEEN (x'8cb4') AND ('')), (((('1040519420')OR(x'')))AND(x''))))<(((+ ('-410329071')), (('')<=(x'')), x'fa21' COLLATE RTRIM))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1617760554 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')+('^9_]30㐲g謍')))LIKE(((NULL)IS(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'23e9' AS TEXT)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-497186352 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(HEX(DISTINCT 0.4649688224089845) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '530385794 898506443 sz=389963532'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1358492890 sz=-494684176'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1974939294 -1438661135 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT ((0.3555407273706429) BETWEEN (0.6423365809924658) AND ('4*V'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-510357234 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1616520457 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-546003766 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1481778019 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1247692929 0 sz=-295658855 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.6503129496456483 IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS NUMERIC)) BETWEEN ('ࡔ憼 頠' COLLATE NOCASE) AND ((- (x'1cba')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(DISTINCT (x'' IN ('dG\'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1188902172 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'8fd5' THEN 0.903713081293899 END) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1547126187 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT 0.25929169839483157 COLLATE RTRIM); -- 0ms;
DELETE FROM sqlite_stat1 WHERE INSTR(((x'') NOT BETWEEN ('P.') AND (0.6460765382401926)), 0xffffffffa94bb467 COLLATE BINARY); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-156520786))!=((NULL COLLATE RTRIM))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_object(((NULL)>(0.03687719775460174)), CAST(0Xffffffffae410cde AS REAL), CAST('0.1690567545150513' AS BLOB), NULL COLLATE BINARY, CASE 'Pmm^PD'  WHEN 0x68d3e931 THEN x'' ELSE '' END, (('b昊') NOT BETWEEN ('422208770') AND (x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=669185984'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-642232432 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKE('YCi梾qi*', 0.4014491311286488, '}')) NOT BETWEEN (NULL COLLATE BINARY) AND (((((((((-5.0499294E7)AND(0.7259916258293915)))AND(x'06aa')))OR(0xffffffff8ff09420)))OR(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' COLLATE RTRIM THEN LOWER(496932772) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-261429350'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-587859789 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=185358519'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1.60184398E8 IN ('e99}i')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.3945972889245678; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1358492890')|('')))%(IFNULL(NULL, x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.7743010603068866 COLLATE NOCASE)%(-1576458174 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(x'' AS NUMERIC))OR(CAST(NULL AS REAL))))AND((((x''))<=((x'8037'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'8a61')AND(1835823553)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-611189570 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN NULL THEN x'' WHEN -5.4676834E7 THEN NULL WHEN NULL THEN 0.524530942475739 END AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-312996244 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(NULLIF('1246389770', 0.2154076068583839)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (2001942085)))+(SQLITE_VERSION())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (NULL)))>>(((x'') BETWEEN (x'5735') AND (0.9963718586264024)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0x1a46c967)AND(0Xffffffffd85e6f55)))OR('q3[iS\K')))AND('<AK-%J5' COLLATE NOCASE)))AND((('101488232')-(470997470)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE))>>(((0.6719591088055326) NOT BETWEEN ('K\rArN3') AND (0.39334024342050156)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CHANGES()) NOT BETWEEN (CAST(x'05648019' AS REAL)) AND ((((0xe16ccac, -2069941342, x'')) BETWEEN ((0x68d3e931, 1526268452, x'4255')) AND ((0.8561087114351047, '-54676834', 'B侐O9?Zv'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1986288439)*(x''))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x''))>=((NULL))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '-807621249' COLLATE NOCASE THEN (((((((((((('')OR(x'')))OR(-1.868619819E9)))AND(NULL)))AND('XJ')))AND(NULL)))AND(10719157)) WHEN ((744078790) NOT BETWEEN (0.6093449668805013) AND (x'')) THEN ((('49265670')) BETWEEN ((-1.983349096E9)) AND ((x''))) WHEN ('' IN (x'')) THEN LOWER(0.8559199210717112) WHEN ((x'')+(x'6cc0')) THEN (((('QU')OR(0x3d706b68)))AND('1313289572')) WHEN CASE '0.8561087114351047'  WHEN NULL THEN 0.7087345636208028 WHEN 1.315424341E9 THEN '' WHEN 'Y<\%' THEN x'89d6' ELSE x'' END THEN (('') ISNULL) ELSE 0.3529535733813439 COLLATE RTRIM END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-324786006'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-134147267 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1031906416 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2076009735'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1564387369'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (-1568795965)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xfffffffff43d2913 IN ('0.10844041242227453')))IS(CAST('D ' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1758718257; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-541591796 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1806628889 0 sz=2038036188 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=791598784 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1977836122 sz=-957755349'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-824123928 sz=850667078'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1272290941 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1312384498 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.42004033056094725; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '*v.)4'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-560720887 sz=854591810 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.04174844176313497) NOTNULL)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT ABS(x'9750'), 0.9864244340588778); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, 0.7675306635032297, NULL, '6q', '[zp]')) NOT BETWEEN (((- ('ᓽZ]')), CAST(-1402081639 AS INTEGER), CAST(0.6373397315696353 AS TEXT), UNICODE('6q'), (('-1868619819')IS(0xffffffffebe4474a)))) AND ((CASE 0xffffffffa8552058  WHEN NULL THEN 0.15506000588610624 ELSE '' END, ((-0.0) NOT BETWEEN (x'') AND ('')), (('Z9l~hD0B') IS FALSE), UNLIKELY('676974789'), NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('1960903143')OR(0.5323873457429199)))OR(NULL)))AND('-831279377')))AND(0.8958990480930863))) BETWEEN (((x'')OR(x''))) AND (((x'135f')-(4.04361293E8)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (x'1527'))) BETWEEN ((+ (x'ab43'))) AND (((0.5503893671489156)*(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('') BETWEEN (0.7286747737999668) AND (0Xffffffffb16ad8aa)))OR((0.5855535235257715 IN ()))))OR((('-831279377')-(0.7115472848034485)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=850667078 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -1955307136 sz=-1014685580 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-145795261 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=482660850'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-72340513 sz=917372839 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '635722536 sz=-105618127 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_COMPILEOPTION_USED(NULL)) BETWEEN ((0X6fbee396 IN ())) AND (CASE -1294205876  WHEN NULL THEN 0.829020053288312 ELSE x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=825422125 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1438821621 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('蔶')+(NULL)), CASE WHEN 'wYt%' THEN '' ELSE NULL END, UPPER(DISTINCT '\rX')))<=((((((0.6856918066938988)AND('669185984')))AND(x'6927')), (- (0.5051001929886073)), ((('', 2.47287642E8, -1.91397776E9)) BETWEEN ((2035124419, -8.99925796E8, '')) AND ((x'f3c8', -936331996, 0.25929169839483157)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1794269998 sz=-261429350 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '4'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.7552511690634603 AS INTEGER)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-409716190 sz=-801380131 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-608539673 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') IS TRUE))<((0.0377347654295801 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1144390160'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND(0.717375075111866)))AND(x'6cfa')))!=(((0.10104533253746639) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1280186472 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-795766001 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '954747535 -1267152757 sz=494853470 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 959063955 sz=1811843877 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2062730754 -1543665634 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=404361293 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=701147504 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('xm+' IN ())) NOT BETWEEN ((NULL IN ())) AND (NULL COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-769315665'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((((((('1806628889')AND(x'81b5')))OR(NULL)))OR(-193970627)))OR('w3'))  WHEN CASE '-981774029'  WHEN 'z2lS' THEN 0.7518643579040913 END THEN (((-1023429911)) BETWEEN (('0.6439739641824985')) AND (('av'))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1257225809 -1206450759 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-546003766 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -120552430; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1371468578 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (-436198988 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST('1040519420' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.4649688224089845') ISNULL)) BETWEEN ((('GmNsY{')<<(x''))) AND (((0.3520593076231372) BETWEEN (x'') AND (x'fe078437')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'06cc')OR('')))AND(x'64a9')) IN (NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (1690498501))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'297b' COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=49265670 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1914865506'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(load_extension('1414735274', NULL) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1456446022 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-358990850'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(NULL AS INTEGER)))<(((((((((('-1543575584')OR(NULL)))OR('-1784073195')))AND(-1898751247)))AND(''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.7021620662893888; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((('49265670')) NOT BETWEEN ((0x3e0510fc)) AND (('-1746717646'))) THEN (('-899925796') NOT NULL) WHEN (('1235906308')AND(x'')) THEN 0.10168984922926438 COLLATE RTRIM WHEN (-725419298 IN ('-1568795965', NULL)) THEN (((NULL, 0x105e264d, NULL))<=((NULL, 274605645, NULL))) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=358371912 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(((NULL)*(x'e8ed'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1758718257 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UNLIKELY(DISTINCT NULL)) NOT BETWEEN ((NOT ('-616741718'))) AND (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1840324673 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1452039434 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('~U') BETWEEN (x'cf21') AND (NULL)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-923652054 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1003716579'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ (NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-263026933 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('') BETWEEN (0.7012339543286071) AND (0.11206331691154126))  WHEN 0.710612880197258 COLLATE RTRIM THEN (((x'')) NOT BETWEEN ((x'0f76')) AND (('-1811560681'))) WHEN (('481237992')<>(0X220258eb)) THEN (~ (NULL)) WHEN 0xffffffffc66abc09 COLLATE BINARY THEN (((NULL))<>((x''))) END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0.3734873401869746) ISNULL))==(0.6438221808582012 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=141459685 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 913947554 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1122741205 -1211251005 sz=333655391 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '411327368 -9223372036854775808 sz=-861589075 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 497632815'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-761289859'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-2.6142935E8) NOT BETWEEN (0.56410741844484) AND ('1512973616'))))<((CAST(x'' AS INTEGER)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))=((0.3527018596087297))))=(('' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'7bae' IN (x'')))GLOB(HEX(''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1413177573 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE x'a734'  WHEN x'' THEN '-1144390160' WHEN NULL THEN x'' WHEN NULL THEN '-54676834' END IN (PRINTF(0.5378605477455722), CASE WHEN x'' THEN 0x5bd2ae1e WHEN 0.5549998993482161 THEN 0X72eae8ff WHEN -8.99925796E8 THEN '' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 357210785 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-157272613'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1842131780'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 2 sz=470997470 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1400735147 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN (((((((((('')AND(x'')))OR(x'')))AND(0.3406858333710554)))OR('eF\njGp,9')))) AND ((HEX('-83182387')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '141459685 185358519 sz=-1265369213 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-2076364145 sz=-1955307136'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '''	' COLLATE RTRIM THEN (((x'', 0Xfffffffff3af3153, x'')) NOT BETWEEN ((NULL, NULL, x'')) AND ((0.9151581829960246, x'', x'09b9'))) WHEN ((('', 0.9507050156845658, x''))=((NULL, x'13e6', x''))) THEN (0.43829842140100916 IN (x'c8b7', NULL)) WHEN CAST(0.5749006305427886 AS INTEGER) THEN (('爌^㱐8') NOT BETWEEN (x'') AND (-1.371468578E9)) ELSE ((x'')IS NOT('')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '347917118 sz=-515760832 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=528045774 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') BETWEEN (NULL) AND (NULL)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1810852642'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((388062304) NOTNULL)))<>((((x'') BETWEEN (NULL) AND (NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0Xffffffffcae4e4b5 THEN 0.13172977997046975 ELSE 0.39334024342050156 END)AND((0.7400397481788509 IN ('0.08400635287704761')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1868619819 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LTRIM('921738534', NULL))OR(NULLIF(0xffffffffc57b5133, ''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.04174844176313497')) NOT BETWEEN ((x'')) AND (((('1512973616')&(0.26549782607213135))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1624044914'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=592918533 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-812374942 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'8b3c' COLLATE RTRIM)LIKE((('669185984')<(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('&O' COLLATE RTRIM)OR((((('')OR(NULL)))AND(0.0866241750041008)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.07897542326685147)) NOT BETWEEN ((0X1cee720c)) AND (('-1440571223')))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1117875379'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '9223372036854775807 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN ('K<D~egD') AND (0.9963718586264024)))%(CAST(9.59063955E8 AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-928213971'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1370852883 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-17502452 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1057172727'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=773470343 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1257022735 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX(DISTINCT NULL))||(((-157272613) BETWEEN (0.22359219873449043) AND (0.6537746815232799)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 7ms;
DELETE FROM sqlite_stat1 WHERE (((0.8161115493159192) ISNULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1246389770 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-891876547')<<(-981774029)))<(((('엺}')) NOT BETWEEN ((NULL)) AND ((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1430865491'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2069941342 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.3664733664563996)AND(x'')))AND(698835444))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1291887744 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2102768202 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((((-566865802)OR(NULL)))AND(x'')))OR(DATETIME('-1565253489', NULL, NULL))))OR(((x'd905')&('-807621249')))))OR(-3.8802327E7)))AND(((0.7269816360159546) NOTNULL))))OR(CAST(NULL AS BLOB))))AND((('l8')&('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('1540533790' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')IS(0X7a951edc)))<(((0.24454726069992494)<>('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('34140396') IS FALSE))IS(((NULL)|('-1023989133')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-54676834 sz=-642232432 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, '-1', '-1850451893')) NOT BETWEEN ((CAST(x'' AS INTEGER), ((NULL) BETWEEN (0.686888812468896) AND ('')), (((NULL)) NOT BETWEEN (('')) AND ((0.4340325011854196))))) AND ((((158435151)==('')), COALESCE('P.', 0.18556113242322514), (((x'')) BETWEEN ((NULL)) AND ((x'')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '' COLLATE BINARY THEN ((NULL) NOT BETWEEN (x'') AND ('850667078')) WHEN CASE WHEN NULL THEN '' END THEN (((((((('-54676834')OR('')))OR(x'12c2')))AND(0.760124606281011)))OR('Rm㊭\n')) WHEN (((((((('}Z')AND(x'f607')))OR(0.9331807592389885)))OR('1887113027')))OR(0.20972577706403983)) THEN (('')IS NOT(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 5ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1481553893 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=582682264 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1072984446 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=669185984'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1101907171 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6847703440093308)&(x'3591')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-780940594 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (+ (0.6558706909738579))  WHEN ((x'') IS FALSE) THEN (('1393013079')>=(-1134885437)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('QI,4[㐲')>(0.002845810001668947))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.10415733796504534)AND(0.7157318998657675 COLLATE RTRIM)))OR(0Xffffffffc8f2302a)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=240801295 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=49265670 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(CASE WHEN '-120552430' THEN x'' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1624044914 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1518924927 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-2038001746'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1090095126'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 4 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1871073480 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=601899950 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (-9.81774029E8)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-611189570 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=-364821335 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1096907813'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=789429106 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8272808948201215, x'525c', 0xffffffffe0f9e17f, x'', '701006189')) NOT BETWEEN (((- (NULL)), ABS('160184398'), (NULL IN ()), x'' COLLATE NOCASE, (((('1760844898')OR('')))OR(0x569c0cd2)))) AND (((('\nd')%('_f')), ((((-7.2340513E7)AND(0.5098039250826648)))AND(NULL)), ((NULL) NOT BETWEEN (0.35951175522065215) AND (0X24401efc)), ((0.9683397120018691)>>(0Xffffffff88c683d4)), CASE '1257022735'  WHEN '1375561500' THEN '' ELSE '2052473798' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-1301100103'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(NULL AS TEXT))OR((NOT (x'')))))AND(UPPER(0Xff0697c))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1690466880') BETWEEN ('穿蹸') AND ('-831279377')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM((0.6758872104854382 IN ()), (~ (NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')GLOB(CAST('1876517677' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((- ('-50499294')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1126433528 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((SQLITE_VERSION(), 1808275783 COLLATE NOCASE, ((((((((x'3057')OR(1672674533)))AND('b3_z뭨')))AND(NULL)))AND(x'')), ('141459685' IN (x'')), (('150043583')%(0.0866241750041008))))>(((((x''))<>((x''))), DATE('*\F', NULL, x''), x'', NULL COLLATE NOCASE, ((((NULL)OR('ဃ15')))AND('-611189570'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1257022735 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-417979043') NOT NULL)) NOT BETWEEN (0xfffffffffeee57c8) AND (CASE WHEN NULL THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-2138034219'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=677712428'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1821757271 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ')b|SWl'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-966927778 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '970582587'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-72340513' IN ()) IN (('15800569' IN ()), ((x'e3a3')-(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1943859905 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2114798539 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1782010725 1919822936 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY)/('-451192334')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1247504574'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 834304084  WHEN 0.7087345636208028 THEN 0.150852798219261 WHEN NULL THEN x'' WHEN x'867d' THEN x'e685' END COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=701147504 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-157272613 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1247504574'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=157810260 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1344359576 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS TEXT))<=((+ (x'8021')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.3516553611967568)GLOB(0.41767370522141745)), DATETIME('', 'V9', '1811843877', 'Fq붌86Pg㉬', '0.8436764517918885', 0.6876515096108814, x'4dc8'), ((((((((0.12399193445963941)AND(x'')))AND(NULL)))OR(NULL)))OR('x'))))>(((((NULL, '485388812', NULL)) BETWEEN (('KZ%tv2쏉?P', 958244933, 0.7105868528582906)) AND (('-50499294', NULL, 0.38846447436142506))), ((NULL) NOT NULL), (((0.1913735450734818)) BETWEEN ((NULL)) AND ((0.5060932358526453)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE vt0 SET lid=x'' WHERE (CASE vt0.c0  WHEN 'IxA<TV}JI' THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 WHEN 0.5210649400127624 THEN vt0.lid END IN (CASE WHEN vt0.lid THEN vt0.c0 ELSE vt0.lid END, COALESCE(vt0.c0, vt0.lid, 0.0955320205597292, vt0.c0))); -- 0ms;
REINDEX BINARY; -- 0ms;
INSERT OR IGNORE INTO vt0(lid) VALUES (''), (x''), ('/g_'); -- 0ms;
REINDEX; -- 2ms;
PRAGMA cache_spill = true; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('1840324673'); -- 0ms;
INSERT OR ABORT INTO vt0(lid) VALUES (NULL); -- 0ms;
INSERT OR ABORT INTO vt0(lid, c0) VALUES ('157810260', 0.26366896751302105), ('-466627671', 0.19924700828654263), (NULL, NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(lid) VALUES (NULL); -- 0ms;
UPDATE OR ABORT vt0 SET c0=x'e1f67ba1'; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2132487126); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('1806628889', NULL), (1.835823553E9, NULL), ('儳2DbrW7o', '1811843877'), (NULL, x''), ('', 2.062730754E9); -- 0ms;
INSERT OR REPLACE INTO vt0(c0, lid) VALUES ('y8\r', '-804189605'); -- 0ms;
INSERT OR ABORT INTO vt0(lid) VALUES (-990484572); -- 0ms;
INSERT OR REPLACE INTO vt0(c0, lid) VALUES (0xffffffffd3e0683e, COALESCE((('')AND(x'')), (~ (x'e64f')), ((0.8968303209407078) BETWEEN (0.5884586114948366) AND (NULL)), ((((((((NULL)AND(0.11030608611564807)))AND('')))AND('0.08400635287704761')))OR('')))), (NULL, '1B	'), (NULL, x''); -- 0ms;
END TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
VACUUM main; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA temp.legacy_file_format; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=0.8888335962017727 WHERE ((- (vt0.lid)) IN ()); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
VACUUM; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1284558403);\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt0 SET lid='248634331', lid=x'' WHERE ((vt0.c0)/(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA cache_spill; -- 0ms;
PRAGMA main.foreign_keys; -- 0ms;
INSERT OR FAIL INTO vt0(lid, c0) VALUES (x'', NULL); -- 0ms;
PRAGMA temp.auto_vacuum = NONE; -- 0ms;
REINDEX; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('UP[rw7'); -- 0ms;
PRAGMA temp.cell_size_check = false; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '53722'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 232452008);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA wal_autocheckpoint = -8696944253402497783; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE vt0 SET lid='-1604083913'; -- 0ms;
UPDATE OR REPLACE vt0 SET c0=0.653323591499404; -- 7ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0); -- 0ms;
REINDEX; -- 0ms;
PRAGMA short_column_names = false; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (-0.0); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(''); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL), (485388812), (NULL); -- 1ms;
PRAGMA wal_autocheckpoint; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 1ms;
UPDATE OR FAIL vt0 SET (c0)=(NULL); -- 3ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA application_id = 7078284533118440684; -- 9ms;
PRAGMA temp.secure_delete = FAST; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (NULL, '-219070391'); -- 0ms;
INSERT OR REPLACE INTO vt0(lid) VALUES (1555595028); -- 0ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0) AS SELECT ALL (((((((((((vt0.lid)) NOT BETWEEN ((vt0.c0)) AND (('1758718257'))))AND((((vt0.lid))<=(('zwG'))))))OR(((vt0.lid)IS NOT(vt0.c0)))))AND(((vt0.lid) IS TRUE))))AND('1116606329')) FROM vt0; -- 0ms;
PRAGMA defer_foreign_keys; -- 2ms;
END TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (NULL); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1014553959 unordered'); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-731701131 unordered noskipscan'); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0 NOT INDEXED, rt0 WHERE (((x'')>>((((vt0.c0))<=((vt0.lid)))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((x'')>>((((vt0.c0))<=((vt0.lid)))))))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((((x'')>>((((vt0.c0))<=((vt0.lid)))))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT rt0.c1 FROM vt0, v0, rt0;
SELECT DISTINCT rt0.c1 FROM vt0, v0, rt0 WHERE (((((vt0.lid) NOT NULL))OR(CAST(rt0.c0 AS NUMERIC)))) UNION SELECT DISTINCT rt0.c1 FROM vt0, v0, rt0 WHERE ((NOT (((((vt0.lid) NOT NULL))OR(CAST(rt0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT rt0.c1 FROM vt0, v0, rt0 WHERE (((((((vt0.lid) NOT NULL))OR(CAST(rt0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT rt0.c1 FROM vt0, v0, rt0;
SELECT rt0.c2, vt0.lid, v0.c0, rt0.c3, rt0.c1, rt0.c4, vt0.c0, rt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c2, vt0.lid, v0.c0, rt0.c3, rt0.c1, rt0.c4, vt0.c0, rt0.c0;
SELECT ALL rt0.c2, vt0.lid, v0.c0, rt0.c3, rt0.c1, rt0.c4, vt0.c0, rt0.c0 FROM vt0, v0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.lid)))>=(CASE rt0.c1  WHEN v0.c0 THEN vt0.lid END))) GROUP BY rt0.c2, vt0.lid, v0.c0, rt0.c3, rt0.c1, rt0.c4, vt0.c0, rt0.c0 UNION SELECT rt0.c2, vt0.lid, v0.c0, rt0.c3, rt0.c1, rt0.c4, vt0.c0, rt0.c0 FROM vt0, v0, rt0 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.lid)))>=(CASE rt0.c1  WHEN v0.c0 THEN vt0.lid END))))) GROUP BY rt0.c2, vt0.lid, v0.c0, rt0.c3, rt0.c1, rt0.c4, vt0.c0, rt0.c0 UNION SELECT ALL rt0.c2, vt0.lid, v0.c0, rt0.c3, rt0.c1, rt0.c4, vt0.c0, rt0.c0 FROM vt0, v0, rt0 NOT INDEXED WHERE (((((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.lid)))>=(CASE rt0.c1  WHEN v0.c0 THEN vt0.lid END))) ISNULL)) GROUP BY rt0.c2, vt0.lid, v0.c0, rt0.c3, rt0.c1, rt0.c4, vt0.c0, rt0.c0;
SELECT rt0.c2, vt0.lid, v0.c0, rt0.c3, rt0.c1, rt0.c4, vt0.c0, rt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c2, vt0.lid, v0.c0, rt0.c3, rt0.c1, rt0.c4, vt0.c0, rt0.c0;
SELECT ALL rt0.c3, vt0.c0, rt0.c1, rt0.c0, vt0.lid, rt0.c2, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c3, vt0.c0, rt0.c1, rt0.c0, vt0.lid, rt0.c2, rt0.c4;
SELECT ALL rt0.c3, vt0.c0, rt0.c1, rt0.c0, vt0.lid, rt0.c2, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c3, vt0.c0, rt0.c1, rt0.c0, vt0.lid, rt0.c2, rt0.c4 HAVING MIN(MIN(rt0.c4)) UNION ALL SELECT rt0.c3, vt0.c0, rt0.c1, rt0.c0, vt0.lid, rt0.c2, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c3, vt0.c0, rt0.c1, rt0.c0, vt0.lid, rt0.c2, rt0.c4 HAVING (NOT (MIN(MIN(rt0.c4)))) UNION ALL SELECT ALL rt0.c3, vt0.c0, rt0.c1, rt0.c0, vt0.lid, rt0.c2, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c3, vt0.c0, rt0.c1, rt0.c0, vt0.lid, rt0.c2, rt0.c4 HAVING ((MIN(MIN(rt0.c4))) ISNULL);
SELECT * FROM rt0, v0, vt0;
SELECT * FROM rt0, v0, vt0 WHERE (0X22088691) UNION ALL SELECT ALL * FROM rt0, v0, vt0 WHERE ((NOT (0x22088691))) UNION ALL SELECT * FROM rt0, v0, vt0 WHERE (((0x22088691) ISNULL));
SELECT * FROM rt0, v0, vt0;
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (CASE WHEN CAST('-245645940' AS REAL) THEN ((vt0.lid) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE ((NOT (CASE WHEN CAST('-245645940' AS REAL) THEN ((vt0.lid) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (((CASE WHEN CAST('-245645940' AS REAL) THEN ((vt0.lid) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM v0 CROSS JOIN rt0 ON CAST((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) AS BLOB) GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM v0 CROSS JOIN rt0 ON CAST((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) AS BLOB) WHERE (UPPER(DISTINCT ((v0.c0) IS FALSE))) GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM v0 CROSS JOIN rt0 ON CAST((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) AS BLOB) WHERE ((NOT (UPPER(DISTINCT ((v0.c0) IS FALSE))))) GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM v0 CROSS JOIN rt0 ON CAST((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) AS BLOB) WHERE (((UPPER(DISTINCT ((v0.c0) IS FALSE))) ISNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM v0 CROSS JOIN rt0 ON CAST((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) AS BLOB) GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0;
SELECT ALL rt0.c4, rt0.c3, vt0.lid, rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM vt0, v0 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c3, vt0.lid, rt0.c2, v0.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c4, rt0.c3, vt0.lid, rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM vt0, v0 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c3, vt0.lid, rt0.c2, v0.c0, rt0.c1, rt0.c0 HAVING ((COUNT(*))LIKE(TOTAL(rt0.c4))) UNION ALL SELECT rt0.c4, rt0.c3, vt0.lid, rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM vt0, v0 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c3, vt0.lid, rt0.c2, v0.c0, rt0.c1, rt0.c0 HAVING (NOT (((COUNT(*))LIKE(TOTAL(rt0.c4))))) UNION ALL SELECT rt0.c4, rt0.c3, vt0.lid, rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM vt0, v0 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c3, vt0.lid, rt0.c2, v0.c0, rt0.c1, rt0.c0 HAVING ((((COUNT(*))LIKE(TOTAL(rt0.c4)))) ISNULL);
SELECT ALL rt0.c4, rt0.c3, vt0.lid, rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM vt0, v0 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c3, vt0.lid, rt0.c2, v0.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c4, rt0.c3, vt0.lid, rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM vt0, v0 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c3, vt0.lid, rt0.c2, v0.c0, rt0.c1, rt0.c0 HAVING ((COUNT(*))LIKE(TOTAL(rt0.c4))) UNION ALL SELECT rt0.c4, rt0.c3, vt0.lid, rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM vt0, v0 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c3, vt0.lid, rt0.c2, v0.c0, rt0.c1, rt0.c0 HAVING (NOT (((COUNT(*))LIKE(TOTAL(rt0.c4))))) UNION ALL SELECT rt0.c4, rt0.c3, vt0.lid, rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM vt0, v0 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c3, vt0.lid, rt0.c2, v0.c0, rt0.c1, rt0.c0 HAVING ((((COUNT(*))LIKE(TOTAL(rt0.c4)))) ISNULL);
SELECT ALL rt0.c4, rt0.c3, vt0.lid, rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM vt0, v0 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c3, vt0.lid, rt0.c2, v0.c0, rt0.c1, rt0.c0;
SELECT * FROM vt0, v0, rt0;
SELECT ALL * FROM vt0, v0, rt0 WHERE (((((LIKELY(rt0.c2))AND(((rt0.c0)OR(rt0.c2)))))OR((((rt0.c0, rt0.c1, rt0.c2, v0.c0, v0.c0)) NOT BETWEEN ((vt0.lid, vt0.lid, vt0.lid, rt0.c4, vt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c4)))))) UNION ALL SELECT * FROM vt0, v0 NOT INDEXED, rt0 WHERE ((NOT (((((LIKELY(rt0.c2))AND(((rt0.c0)OR(rt0.c2)))))OR((((rt0.c0, rt0.c1, rt0.c2, v0.c0, v0.c0)) NOT BETWEEN ((vt0.lid, vt0.lid, vt0.lid, rt0.c4, vt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c4)))))))) UNION ALL SELECT ALL * FROM vt0, v0, rt0 WHERE (((((((LIKELY(rt0.c2))AND(((rt0.c0)OR(rt0.c2)))))OR((((rt0.c0, rt0.c1, rt0.c2, v0.c0, v0.c0)) NOT BETWEEN ((vt0.lid, vt0.lid, vt0.lid, rt0.c4, vt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c4)))))) ISNULL));
SELECT * FROM vt0, v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.lid) IS FALSE) IN (vt0.lid))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.lid) IS FALSE) IN (vt0.lid))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.lid) IS FALSE) IN (vt0.lid))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c0, vt0.lid, v0.c0, rt0.c2, rt0.c4 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.lid, v0.c0, rt0.c2, rt0.c4;
SELECT rt0.c0, vt0.lid, v0.c0, rt0.c2, rt0.c4 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.lid, v0.c0, rt0.c2, rt0.c4 HAVING (MAX(TOTAL(vt0.c0)) IN ()) UNION ALL SELECT ALL rt0.c0, vt0.lid, v0.c0, rt0.c2, rt0.c4 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.lid, v0.c0, rt0.c2, rt0.c4 HAVING (NOT ((MAX(TOTAL(vt0.c0)) IN ()))) UNION ALL SELECT ALL rt0.c0, vt0.lid, v0.c0, rt0.c2, rt0.c4 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.lid, v0.c0, rt0.c2, rt0.c4 HAVING (((MAX(TOTAL(vt0.c0)) IN ())) ISNULL);
SELECT rt0.c0, vt0.lid, v0.c0, rt0.c2, rt0.c4 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.lid, v0.c0, rt0.c2, rt0.c4;
SELECT rt0.c0, vt0.lid, v0.c0, rt0.c2, rt0.c4 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.lid, v0.c0, rt0.c2, rt0.c4 HAVING (MAX(TOTAL(vt0.c0)) IN ()) UNION ALL SELECT ALL rt0.c0, vt0.lid, v0.c0, rt0.c2, rt0.c4 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.lid, v0.c0, rt0.c2, rt0.c4 HAVING (NOT ((MAX(TOTAL(vt0.c0)) IN ()))) UNION ALL SELECT ALL rt0.c0, vt0.lid, v0.c0, rt0.c2, rt0.c4 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.lid, v0.c0, rt0.c2, rt0.c4 HAVING (((MAX(TOTAL(vt0.c0)) IN ())) ISNULL);
SELECT rt0.c0, vt0.lid, v0.c0, rt0.c2, rt0.c4 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.lid, v0.c0, rt0.c2, rt0.c4;
SELECT MIN(((((((vt0.lid) IS TRUE))OR(0.6373397315696353)))OR(0.7743010603068866))) FROM vt0 ORDER BY ((vt0.lid)|(((vt0.lid)*(vt0.lid)))) DESC  NULLS FIRST;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE (((((rt0.c3)&(rt0.c1)))+(((rt0.c0)>(rt0.c3))))) ORDER BY ((((rt0.c0) ISNULL))*((NULL IN ())))  NULLS FIRST;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT (((((rt0.c3)&(rt0.c1)))+(((rt0.c0)>(rt0.c3))))))) ORDER BY ((((rt0.c0) ISNULL))*((NULL IN ())))  NULLS FIRST;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE (((((((rt0.c3)&(rt0.c1)))+(((rt0.c0)>(rt0.c3))))) ISNULL)) ORDER BY ((((rt0.c0) ISNULL))*((NULL IN ())))  NULLS FIRST;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c4, rt0.c1, vt0.lid, rt0.c3, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c4, rt0.c1, vt0.lid, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE ((+ (((vt0.c0) NOT NULL)))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c4, rt0.c1, vt0.lid, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((+ (((vt0.c0) NOT NULL)))))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c4, rt0.c1, vt0.lid, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE ((((+ (((vt0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c4, rt0.c1, vt0.lid, rt0.c3, rt0.c2 FROM vt0, rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((CAST(vt0.lid AS INTEGER))&((+ (''))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.lid AS INTEGER))&((+ (''))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((CAST(vt0.lid AS INTEGER))&((+ (''))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(MAX(AVG(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(MAX(AVG(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(MAX(AVG(v0.c0)))) ISNULL);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON IFNULL(DISTINCT ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), ((vt0.c0) BETWEEN (rt0.c3) AND (vt0.lid)));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON IFNULL(DISTINCT ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), ((vt0.c0) BETWEEN (rt0.c3) AND (vt0.lid))) WHERE ((('/g_')-(((rt0.c1)%(2.080126226E9))))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON IFNULL(DISTINCT ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), ((vt0.c0) BETWEEN (rt0.c3) AND (vt0.lid))) WHERE ((NOT ((('/g_')-(((rt0.c1)%(2.080126226E9))))))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON IFNULL(DISTINCT ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), ((vt0.c0) BETWEEN (rt0.c3) AND (vt0.lid))) WHERE ((((('/g_')-(((rt0.c1)%(2.080126226E9))))) ISNULL));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON IFNULL(DISTINCT ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), ((vt0.c0) BETWEEN (rt0.c3) AND (vt0.lid)));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN (((v0.c0) NOT BETWEEN ('830857272') AND (v0.c0)), v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN (((v0.c0) NOT BETWEEN ('830857272') AND (v0.c0)), v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN (((v0.c0) NOT BETWEEN ('830857272') AND (v0.c0)), v0.c0))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c3)AND('tXMY6쌱y')))) AND ((((rt0.c0) NOTNULL))))) GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((((rt0.c3)AND('tXMY6쌱y')))) AND ((((rt0.c0) NOTNULL))))))) GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c3, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((((rt0.c3)AND('tXMY6쌱y')))) AND ((((rt0.c0) NOTNULL))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c3, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c3, rt0.c1;
SELECT rt0.c2, vt0.lid, rt0.c1, vt0.c0, rt0.c4, rt0.c0 FROM vt0 NOT INDEXED, v0, rt0 GROUP BY rt0.c2, vt0.lid, rt0.c1, vt0.c0, rt0.c4, rt0.c0;
SELECT ALL rt0.c2, vt0.lid, rt0.c1, vt0.c0, rt0.c4, rt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c2, vt0.lid, rt0.c1, vt0.c0, rt0.c4, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, vt0.lid, rt0.c1, vt0.c0, rt0.c4, rt0.c0 FROM vt0, v0, rt0 NOT INDEXED GROUP BY rt0.c2, vt0.lid, rt0.c1, vt0.c0, rt0.c4, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, vt0.lid, rt0.c1, vt0.c0, rt0.c4, rt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c2, vt0.lid, rt0.c1, vt0.c0, rt0.c4, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, vt0.lid, rt0.c1, vt0.c0, rt0.c4, rt0.c0 FROM vt0 NOT INDEXED, v0, rt0 GROUP BY rt0.c2, vt0.lid, rt0.c1, vt0.c0, rt0.c4, rt0.c0;
SELECT ALL rt0.c2, vt0.lid, rt0.c1, vt0.c0, rt0.c4, rt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c2, vt0.lid, rt0.c1, vt0.c0, rt0.c4, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, vt0.lid, rt0.c1, vt0.c0, rt0.c4, rt0.c0 FROM vt0, v0, rt0 NOT INDEXED GROUP BY rt0.c2, vt0.lid, rt0.c1, vt0.c0, rt0.c4, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, vt0.lid, rt0.c1, vt0.c0, rt0.c4, rt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c2, vt0.lid, rt0.c1, vt0.c0, rt0.c4, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, vt0.lid, rt0.c1, vt0.c0, rt0.c4, rt0.c0 FROM vt0 NOT INDEXED, v0, rt0 GROUP BY rt0.c2, vt0.lid, rt0.c1, vt0.c0, rt0.c4, rt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)!=('')))>(NULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)<>('')))>(NULL))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)!=('')))>(NULL))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CASE ((('1128318033')) BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN '248634331' THEN v0.c0 ELSE (v0.c0 IN (0.3563918854774729)) END) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CASE ((('1128318033')) BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN '248634331' THEN v0.c0 ELSE (v0.c0 IN (0.3563918854774729)) END))) UNION SELECT DISTINCT * FROM v0 WHERE (((CASE ((('1128318033')) BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN '248634331' THEN v0.c0 ELSE (v0.c0 IN (0.3563918854774729)) END) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c3, rt0.c4, vt0.lid, rt0.c0, vt0.c0, v0.c0, rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c3, rt0.c4, vt0.lid, rt0.c0, vt0.c0, v0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c4, vt0.lid, rt0.c0, vt0.c0, v0.c0, rt0.c1 FROM v0, rt0, vt0 WHERE ((+ ((rt0.c2 IN (vt0.c0))))) GROUP BY rt0.c3, rt0.c4, vt0.lid, rt0.c0, vt0.c0, v0.c0, rt0.c1 UNION SELECT rt0.c3, rt0.c4, vt0.lid, rt0.c0, vt0.c0, v0.c0, rt0.c1 FROM v0, rt0, vt0 WHERE ((NOT ((+ ((rt0.c2 IN (vt0.c0))))))) GROUP BY rt0.c3, rt0.c4, vt0.lid, rt0.c0, vt0.c0, v0.c0, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c4, vt0.lid, rt0.c0, vt0.c0, v0.c0, rt0.c1 FROM v0, rt0, vt0 WHERE ((((+ ((rt0.c2 IN (vt0.c0))))) ISNULL)) GROUP BY rt0.c3, rt0.c4, vt0.lid, rt0.c0, vt0.c0, v0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c4, vt0.lid, rt0.c0, vt0.c0, v0.c0, rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c3, rt0.c4, vt0.lid, rt0.c0, vt0.c0, v0.c0, rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(v0.c0))*(((MIN(MIN(COUNT(v0.c0)))) NOT BETWEEN (v0.c0) AND (MIN(SUM(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((GROUP_CONCAT(v0.c0))*(((MIN(MIN(COUNT(v0.c0)))) NOT BETWEEN (v0.c0) AND (MIN(SUM(v0.c0)))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((GROUP_CONCAT(v0.c0))*(((MIN(MIN(COUNT(v0.c0)))) NOT BETWEEN (v0.c0) AND (MIN(SUM(v0.c0))))))) ISNULL);
SELECT TOTAL((+ (vt0.lid)) COLLATE BINARY COLLATE NOCASE) FROM v0, vt0, rt0 ORDER BY (((rt0.c3 IN (v0.c0))) BETWEEN ((v0.c0 IN ())) AND (((rt0.c3)<=(NULL))))  NULLS FIRST;
SELECT ALL * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (CASE v0.c0  WHEN ((vt0.lid)+(vt0.c0)) THEN (- (vt0.lid)) WHEN 1.85358519E8 THEN 0.6647674450855767 WHEN ((((v0.c0)OR(vt0.lid)))AND(vt0.c0)) THEN ((v0.c0)+(vt0.c0)) ELSE v0.c0 END) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (CASE v0.c0  WHEN ((vt0.lid)+(vt0.c0)) THEN (- (vt0.lid)) WHEN 1.85358519E8 THEN 0.6647674450855767 WHEN ((((v0.c0)OR(vt0.lid)))AND(vt0.c0)) THEN ((v0.c0)+(vt0.c0)) ELSE v0.c0 END))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((CASE v0.c0  WHEN ((vt0.lid)+(vt0.c0)) THEN (- (vt0.lid)) WHEN 1.85358519E8 THEN 0.6647674450855767 WHEN ((((v0.c0)OR(vt0.lid)))AND(vt0.c0)) THEN ((v0.c0)+(vt0.c0)) ELSE v0.c0 END) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT vt0.lid FROM vt0;
SELECT DISTINCT vt0.lid FROM vt0 WHERE (((((vt0.c0) NOTNULL))%(((vt0.lid) BETWEEN (vt0.lid) AND (vt0.c0))))) UNION SELECT DISTINCT vt0.lid FROM vt0 WHERE ((NOT (((((vt0.c0) NOTNULL))%(((vt0.lid) BETWEEN (vt0.lid) AND (vt0.c0))))))) UNION SELECT DISTINCT vt0.lid FROM vt0 WHERE (((((((vt0.c0) NOTNULL))%(((vt0.lid) BETWEEN (vt0.lid) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.lid FROM vt0;
SELECT rt0.c0, rt0.c1, vt0.lid, rt0.c4, rt0.c2, v0.c0 FROM vt0, v0 RIGHT OUTER JOIN rt0 ON v0.c0 GROUP BY rt0.c0, rt0.c1, vt0.lid, rt0.c4, rt0.c2, v0.c0;
SELECT ALL rt0.c0, rt0.c1, vt0.lid, rt0.c4, rt0.c2, v0.c0 FROM vt0, v0 RIGHT OUTER JOIN rt0 ON v0.c0 WHERE ((((rt0.c4)) BETWEEN ((rt0.c4)) AND (((((rt0.c2))==((rt0.c3))))))) GROUP BY rt0.c0, rt0.c1, vt0.lid, rt0.c4, rt0.c2, v0.c0 UNION SELECT ALL rt0.c0, rt0.c1, vt0.lid, rt0.c4, rt0.c2, v0.c0 FROM vt0, v0 RIGHT OUTER JOIN rt0 ON v0.c0 WHERE ((NOT ((((rt0.c4)) BETWEEN ((rt0.c4)) AND (((((rt0.c2))=((rt0.c3))))))))) GROUP BY rt0.c0, rt0.c1, vt0.lid, rt0.c4, rt0.c2, v0.c0 UNION SELECT ALL rt0.c0, rt0.c1, vt0.lid, rt0.c4, rt0.c2, v0.c0 FROM vt0, v0 RIGHT OUTER JOIN rt0 ON v0.c0 WHERE ((((((rt0.c4)) BETWEEN ((rt0.c4)) AND (((((rt0.c2))==((rt0.c3))))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt0.lid, rt0.c4, rt0.c2, v0.c0;
SELECT rt0.c0, rt0.c1, vt0.lid, rt0.c4, rt0.c2, v0.c0 FROM vt0, v0 RIGHT OUTER JOIN rt0 ON v0.c0 GROUP BY rt0.c0, rt0.c1, vt0.lid, rt0.c4, rt0.c2, v0.c0;
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING MAX((GROUP_CONCAT(COUNT(*)) IN (TOTAL(rt0.c1), rt0.c3))) UNION ALL SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING (NOT (MAX((GROUP_CONCAT(COUNT(*)) IN (TOTAL(rt0.c1), rt0.c3))))) UNION ALL SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING ((MAX((GROUP_CONCAT(COUNT(*)) IN (TOTAL(rt0.c1), rt0.c3)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (CAST(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 END AS NUMERIC)) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 END AS NUMERIC)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 END AS NUMERIC)) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT vt0.lid, vt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT vt0.lid, vt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM rt0 NATURAL JOIN vt0 WHERE (((TYPEOF(DISTINCT rt0.c4)) IS FALSE)) UNION SELECT DISTINCT vt0.lid, vt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (((TYPEOF(DISTINCT rt0.c4)) IS FALSE)))) UNION SELECT DISTINCT vt0.lid, vt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM rt0 NATURAL JOIN vt0 WHERE (((((TYPEOF(DISTINCT rt0.c4)) IS FALSE)) ISNULL));
SELECT DISTINCT vt0.lid, vt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM rt0 NATURAL JOIN vt0;
SELECT rt0.c4, rt0.c1, v0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c4, rt0.c1, v0.c0;
SELECT ALL rt0.c4, rt0.c1, v0.c0 FROM vt0, v0, rt0 WHERE (rt0.c4) GROUP BY rt0.c4, rt0.c1, v0.c0 UNION SELECT ALL rt0.c4, rt0.c1, v0.c0 FROM vt0, v0, rt0 WHERE ((NOT (rt0.c4))) GROUP BY rt0.c4, rt0.c1, v0.c0 UNION SELECT ALL rt0.c4, rt0.c1, v0.c0 FROM vt0, v0, rt0 WHERE (((rt0.c4) ISNULL)) GROUP BY rt0.c4, rt0.c1, v0.c0;
SELECT rt0.c4, rt0.c1, v0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c4, rt0.c1, v0.c0;
SELECT ALL v0.c0, rt0.c3, rt0.c1 FROM rt0, v0, vt0 GROUP BY v0.c0, rt0.c3, rt0.c1;
SELECT ALL v0.c0, rt0.c3, rt0.c1 FROM rt0, v0 NOT INDEXED, vt0 GROUP BY v0.c0, rt0.c3, rt0.c1 HAVING ((GROUP_CONCAT(vt0.lid)) NOT NULL) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c1 FROM rt0, v0, vt0 GROUP BY v0.c0, rt0.c3, rt0.c1 HAVING (NOT (((GROUP_CONCAT(vt0.lid)) NOT NULL))) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c1 FROM rt0, v0, vt0 GROUP BY v0.c0, rt0.c3, rt0.c1 HAVING ((((GROUP_CONCAT(vt0.lid)) NOT NULL)) ISNULL);
SELECT ALL v0.c0, rt0.c3, rt0.c1 FROM rt0, v0, vt0 GROUP BY v0.c0, rt0.c3, rt0.c1;
SELECT ALL v0.c0, rt0.c3, rt0.c1 FROM rt0, v0 NOT INDEXED, vt0 GROUP BY v0.c0, rt0.c3, rt0.c1 HAVING ((GROUP_CONCAT(vt0.lid)) NOT NULL) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c1 FROM rt0, v0, vt0 GROUP BY v0.c0, rt0.c3, rt0.c1 HAVING (NOT (((GROUP_CONCAT(vt0.lid)) NOT NULL))) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c1 FROM rt0, v0, vt0 GROUP BY v0.c0, rt0.c3, rt0.c1 HAVING ((((GROUP_CONCAT(vt0.lid)) NOT NULL)) ISNULL);
SELECT ALL v0.c0, rt0.c3, rt0.c1 FROM rt0, v0, vt0 GROUP BY v0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0, vt0;
SELECT rt0.c0, rt0.c4, rt0.c2 FROM rt0, vt0 WHERE (CAST(((rt0.c2)/(rt0.c1)) AS NUMERIC)) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0, vt0 WHERE ((NOT (CAST(((rt0.c2)/(rt0.c1)) AS NUMERIC)))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0, vt0 WHERE (((CAST(((rt0.c2)/(rt0.c1)) AS NUMERIC)) ISNULL));
SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON ((rt0.c0 COLLATE NOCASE)<=(((rt0.c3) BETWEEN (NULL) AND (vt0.c0)))) INNER JOIN rt0 ON CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c4))) THEN CASE vt0.c0  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END ELSE (vt0.c0 IN ()) END;
SELECT ALL rt0.c1, rt0.c2, vt0.c0 FROM vt0 INNER JOIN rt0 ON load_extension(vt0.lid) COLLATE RTRIM GROUP BY rt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3, vt0.c0, v0.c0, vt0.lid, rt0.c4 FROM v0 NOT INDEXED, vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3, vt0.c0, v0.c0, vt0.lid, rt0.c4;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3, vt0.c0, v0.c0, vt0.lid, rt0.c4 FROM v0 NOT INDEXED, vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3, vt0.c0, v0.c0, vt0.lid, rt0.c4 HAVING ((CAST(rt0.c0 AS REAL))AND(MIN(COUNT(*)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3, vt0.c0, v0.c0, vt0.lid, rt0.c4 FROM v0, vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3, vt0.c0, v0.c0, vt0.lid, rt0.c4 HAVING (NOT (((CAST(rt0.c0 AS REAL))AND(MIN(COUNT(*)))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3, vt0.c0, v0.c0, vt0.lid, rt0.c4 FROM v0, vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3, vt0.c0, v0.c0, vt0.lid, rt0.c4 HAVING ((((CAST(rt0.c0 AS REAL))AND(MIN(COUNT(*))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (ABS(DISTINCT vt0.c0 COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (ABS(DISTINCT vt0.c0 COLLATE BINARY)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((ABS(DISTINCT vt0.c0 COLLATE BINARY)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0 COLLATE BINARY, ((v0.c0)+(v0.c0)), ((v0.c0) NOT BETWEEN (1385672603) AND (v0.c0))))==((((v0.c0)OR(v0.c0)), NULLIF(v0.c0, v0.c0), LIKELY(DISTINCT v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 COLLATE BINARY, ((v0.c0)+(v0.c0)), ((v0.c0) NOT BETWEEN (1385672603) AND (v0.c0))))==((((v0.c0)OR(v0.c0)), NULLIF(v0.c0, v0.c0), LIKELY(DISTINCT v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0 COLLATE BINARY, ((v0.c0)+(v0.c0)), ((v0.c0) NOT BETWEEN (1385672603) AND (v0.c0))))==((((v0.c0)OR(v0.c0)), NULLIF(v0.c0, v0.c0), LIKELY(DISTINCT v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c2 FROM v0 NOT INDEXED, rt0, vt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, rt0, vt0 WHERE ((+ ('wR*z263%'))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM v0, rt0, vt0 WHERE ((NOT ((+ ('wR*z263%'))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM v0, rt0, vt0 WHERE ((((+ ('wR*z263%'))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0 NOT INDEXED, rt0, vt0 GROUP BY rt0.c2;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING SUM(COUNT(COUNT(*))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (SUM(COUNT(COUNT(*))))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((SUM(COUNT(COUNT(*)))) ISNULL);
SELECT ALL v0.c0, rt0.c2, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM v0, rt0;
SELECT ALL v0.c0, rt0.c2, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM v0, rt0 WHERE ((((LIKELY(v0.c0)))<((ROUND(v0.c0, rt0.c0))))) UNION ALL SELECT v0.c0, rt0.c2, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM v0, rt0 WHERE ((NOT ((((LIKELY(v0.c0)))<((ROUND(v0.c0, rt0.c0))))))) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM v0, rt0 WHERE ((((((LIKELY(v0.c0)))<((ROUND(v0.c0, rt0.c0))))) ISNULL));
SELECT ALL v0.c0, rt0.c2, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM v0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((~ (((0.1665298073098911)<>(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((~ (((0.1665298073098911)!=(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((~ (((0.1665298073098911)!=(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (CAST((((rt0.c0))>((rt0.c2))) AS REAL)) GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST((((rt0.c0))>((rt0.c2))) AS REAL)))) GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST((((rt0.c0))>((rt0.c2))) AS REAL)) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c4, rt0.c1, rt0.c3, rt0.c2, v0.c0, vt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c2, v0.c0, vt0.c0;
SELECT rt0.c4, rt0.c1, rt0.c3, rt0.c2, v0.c0, vt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c2, v0.c0, vt0.c0 HAVING MIN(MIN(SUM(SUM(AVG(v0.c0))))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c3, rt0.c2, v0.c0, vt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c2, v0.c0, vt0.c0 HAVING (NOT (MIN(MIN(SUM(SUM(AVG(v0.c0))))))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c3, rt0.c2, v0.c0, vt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c2, v0.c0, vt0.c0 HAVING ((MIN(MIN(SUM(SUM(AVG(v0.c0)))))) ISNULL);
SELECT MIN((((-1e500))==((vt0.c0)))) FROM vt0;
SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0;
SELECT rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 WHERE (((((rt0.c1)IS(rt0.c3))) IS TRUE)) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 NOT INDEXED WHERE ((NOT (((((rt0.c1)IS(rt0.c3))) IS TRUE)))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 WHERE (((((((rt0.c1)IS(rt0.c3))) IS TRUE)) ISNULL));
SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c0, v0.c0, rt0.c3, rt0.c4, rt0.c1 FROM v0, rt0;
SELECT DISTINCT rt0.c0, v0.c0, rt0.c3, rt0.c4, rt0.c1 FROM v0, rt0 WHERE ((- (rt0.c2)) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c0, v0.c0, rt0.c3, rt0.c4, rt0.c1 FROM v0, rt0 WHERE ((NOT ((- (rt0.c2)) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c0, v0.c0, rt0.c3, rt0.c4, rt0.c1 FROM v0, rt0 WHERE ((((- (rt0.c2)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c0, v0.c0, rt0.c3, rt0.c4, rt0.c1 FROM v0, rt0;
SELECT ALL vt0.c0, v0.c0, vt0.lid FROM v0 FULL OUTER JOIN vt0 ON ((((0xffffffffedbca1ed) NOT BETWEEN (v0.c0) AND (vt0.lid)))<=((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.lid))))) GROUP BY vt0.c0, v0.c0, vt0.lid;
SELECT ALL vt0.c0, v0.c0, vt0.lid FROM v0 FULL OUTER JOIN vt0 ON ((((0Xffffffffedbca1ed) NOT BETWEEN (v0.c0) AND (vt0.lid)))<=((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.lid))))) WHERE ('-1021909909') GROUP BY vt0.c0, v0.c0, vt0.lid UNION SELECT ALL vt0.c0, v0.c0, vt0.lid FROM v0 FULL OUTER JOIN vt0 ON ((((0Xffffffffedbca1ed) NOT BETWEEN (v0.c0) AND (vt0.lid)))<=((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.lid))))) WHERE ((NOT ('-1021909909'))) GROUP BY vt0.c0, v0.c0, vt0.lid UNION SELECT vt0.c0, v0.c0, vt0.lid FROM v0 FULL OUTER JOIN vt0 ON ((((0xffffffffedbca1ed) NOT BETWEEN (v0.c0) AND (vt0.lid)))<=((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.lid))))) WHERE ((('-1021909909') ISNULL)) GROUP BY vt0.c0, v0.c0, vt0.lid;
SELECT ALL vt0.c0, v0.c0, vt0.lid FROM v0 FULL OUTER JOIN vt0 ON ((((0xffffffffedbca1ed) NOT BETWEEN (v0.c0) AND (vt0.lid)))<=((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.lid))))) GROUP BY vt0.c0, v0.c0, vt0.lid;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c4 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c4 FROM rt0, v0, vt0 NOT INDEXED GROUP BY rt0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c4 HAVING ((((COALESCE(DISTINCT vt0.c0, AVG(vt0.c0)))AND(TOTAL(SUM(AVG(x''))))))OR(COUNT('9rm*B'))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c4 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c4 HAVING (NOT (((((COALESCE(DISTINCT vt0.c0, AVG(vt0.c0)))AND(TOTAL(SUM(AVG(x''))))))OR(COUNT('9rm*B'))))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c4 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c4 HAVING ((((((COALESCE(DISTINCT vt0.c0, AVG(vt0.c0)))AND(TOTAL(SUM(AVG(x''))))))OR(COUNT('9rm*B')))) ISNULL);
SELECT * FROM v0, vt0, rt0;
SELECT ALL * FROM v0, vt0, rt0 WHERE (CASE (((rt0.c2))<((vt0.c0)))  WHEN rt0.c1 COLLATE RTRIM THEN (rt0.c1 IN ()) END) UNION ALL SELECT ALL * FROM v0, vt0, rt0 WHERE ((NOT (CASE (((rt0.c2))<((vt0.c0)))  WHEN rt0.c1 COLLATE RTRIM THEN (rt0.c1 IN ()) END))) UNION ALL SELECT * FROM v0, vt0, rt0 WHERE (((CASE (((rt0.c2))<((vt0.c0)))  WHEN rt0.c1 COLLATE RTRIM THEN (rt0.c1 IN ()) END) ISNULL));
SELECT * FROM v0, vt0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CAST(TRIM(v0.c0) AS NUMERIC)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CAST(TRIM(v0.c0) AS NUMERIC)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST(TRIM(v0.c0) AS NUMERIC)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1;
SELECT ALL rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM rt0, vt0 WHERE (CAST(rt0.c2 AS TEXT)) GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM rt0, vt0 WHERE ((NOT (CAST(rt0.c2 AS TEXT)))) GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 UNION SELECT rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM rt0 NOT INDEXED, vt0 WHERE (((CAST(rt0.c2 AS TEXT)) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1;
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT ALL vt0.lid FROM vt0 GROUP BY vt0.lid HAVING MAX(load_extension(vt0.lid, vt0.lid)) UNION ALL SELECT ALL vt0.lid FROM vt0 GROUP BY vt0.lid HAVING (NOT (MAX(load_extension(vt0.lid, vt0.lid)))) UNION ALL SELECT vt0.lid FROM vt0 GROUP BY vt0.lid HAVING ((MAX(load_extension(vt0.lid, vt0.lid))) ISNULL);
SELECT MIN((((rt0.c4)) NOT BETWEEN ((rt0.c1 COLLATE NOCASE)) AND (((NOT (rt0.c4)))))) FROM rt0, vt0, v0 ORDER BY ((((v0.c0) IS FALSE)) BETWEEN (((rt0.c3)<<(rt0.c2))) AND (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)) DESC, ABS(((vt0.c0)LIKE(rt0.c2)));
SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM v0, rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM v0, rt0 WHERE (((((((v0.c0)OR(v0.c0)))OR(rt0.c1))) ISNULL)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM v0, rt0 WHERE ((NOT (((((((v0.c0)OR(v0.c0)))OR(rt0.c1))) ISNULL)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM v0, rt0 WHERE (((((((((v0.c0)OR(v0.c0)))OR(rt0.c1))) ISNULL)) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM v0, rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((((rt0.c4 IN ())) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 END) AND (((rt0.c3) ISNULL)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((((rt0.c4 IN ())) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 END) AND (((rt0.c3) ISNULL)))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((((rt0.c4 IN ())) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 END) AND (((rt0.c3) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((HEX(x'7a9e'))AND((~ (v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (NULL))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((HEX(x'7a9e'))AND((~ (v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (NULL))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((HEX(x'7a9e'))AND((~ (v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (NULL))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING MIN(((((((((rt0.c2)OR(COUNT(rt0.c0))))OR(GROUP_CONCAT(rt0.c1))))OR(rt0.c2)))OR(rt0.c2))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MIN(((((((((rt0.c2)OR(COUNT(rt0.c0))))OR(GROUP_CONCAT(rt0.c1))))OR(rt0.c2)))OR(rt0.c2))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((MIN(((((((((rt0.c2)OR(COUNT(rt0.c0))))OR(GROUP_CONCAT(rt0.c1))))OR(rt0.c2)))OR(rt0.c2)))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((- (CASE v0.c0  WHEN v0.c0 THEN NULL END))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((- (CASE v0.c0  WHEN v0.c0 THEN NULL END))))) UNION ALL SELECT * FROM v0 WHERE ((((- (CASE v0.c0  WHEN v0.c0 THEN NULL END))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c4, rt0.c0, v0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c2, vt0.lid FROM vt0, rt0, v0;
SELECT DISTINCT rt0.c4, rt0.c0, v0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c2, vt0.lid FROM vt0, rt0, v0 WHERE (UPPER(DISTINCT ((((vt0.lid)OR(rt0.c4)))AND(v0.c0)))) UNION SELECT DISTINCT rt0.c4, rt0.c0, v0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c2, vt0.lid FROM vt0, rt0, v0 WHERE ((NOT (UPPER(DISTINCT ((((vt0.lid)OR(rt0.c4)))AND(v0.c0)))))) UNION SELECT DISTINCT rt0.c4, rt0.c0, v0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c2, vt0.lid FROM vt0, rt0, v0 WHERE (((UPPER(DISTINCT ((((vt0.lid)OR(rt0.c4)))AND(v0.c0)))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c0, v0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c2, vt0.lid FROM vt0, rt0, v0;
SELECT vt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, v0, vt0 WHERE (CASE 'ᓽZ]'  WHEN x'' COLLATE NOCASE THEN ((vt0.lid)&(rt0.c3)) WHEN vt0.lid COLLATE BINARY THEN STRFTIME(vt0.c0, rt0.c4, rt0.c4) WHEN ((rt0.c0)OR(rt0.c1)) THEN (~ (v0.c0)) ELSE (~ (rt0.c2)) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM rt0, v0, vt0 WHERE ((NOT (CASE 'ᓽZ]'  WHEN x'' COLLATE NOCASE THEN ((vt0.lid)&(rt0.c3)) WHEN vt0.lid COLLATE BINARY THEN STRFTIME(vt0.c0, rt0.c4, rt0.c4) WHEN ((rt0.c0)OR(rt0.c1)) THEN (~ (v0.c0)) ELSE (~ (rt0.c2)) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM rt0, v0, vt0 WHERE (((CASE 'ᓽZ]'  WHEN x'' COLLATE NOCASE THEN ((vt0.lid)&(rt0.c3)) WHEN vt0.lid COLLATE BINARY THEN STRFTIME(vt0.c0, rt0.c4, rt0.c4) WHEN ((rt0.c0)OR(rt0.c1)) THEN (~ (v0.c0)) ELSE (~ (rt0.c2)) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(CASE COUNT(*)  WHEN TOTAL(v0.c0) THEN AVG(AVG(v0.c0)) ELSE MAX(v0.c0) END) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(CASE COUNT(*)  WHEN TOTAL(v0.c0) THEN AVG(AVG(v0.c0)) ELSE MAX(v0.c0) END))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(CASE COUNT(*)  WHEN TOTAL(v0.c0) THEN AVG(AVG(v0.c0)) ELSE MAX(v0.c0) END)) ISNULL);
SELECT rt0.c4, vt0.lid, rt0.c1, vt0.c0 FROM vt0, rt0;
SELECT rt0.c4, vt0.lid, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (json_valid((((rt0.c4, rt0.c3, rt0.c0))>((rt0.c3, rt0.c2, vt0.lid))))) UNION ALL SELECT ALL rt0.c4, vt0.lid, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT (json_valid((((rt0.c4, rt0.c3, rt0.c0))>((rt0.c3, rt0.c2, vt0.lid))))))) UNION ALL SELECT ALL rt0.c4, vt0.lid, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((json_valid((((rt0.c4, rt0.c3, rt0.c0))>((rt0.c3, rt0.c2, vt0.lid))))) ISNULL));
SELECT rt0.c4, vt0.lid, rt0.c1, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c3 FROM rt0, v0, vt0;
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c3 FROM rt0, v0, vt0 WHERE (CAST(((rt0.c0)IS(rt0.c0)) AS REAL)) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c3 FROM rt0, v0, vt0 WHERE ((NOT (CAST(((rt0.c0)IS(rt0.c0)) AS REAL)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c3 FROM rt0, v0, vt0 WHERE (((CAST(((rt0.c0)IS(rt0.c0)) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c3 FROM rt0, v0, vt0;
SELECT vt0.c0, rt0.c4, rt0.c0, vt0.lid, v0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON ((((0.11315474281902493) IS FALSE))&((+ (rt0.c2)))) LEFT OUTER JOIN vt0 ON CAST((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) AS TEXT) GROUP BY vt0.c0, rt0.c4, rt0.c0, vt0.lid, v0.c0, rt0.c3;
SELECT ALL vt0.c0, rt0.c4, rt0.c0, vt0.lid, v0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON ((((0.11315474281902493) IS FALSE))&((+ (rt0.c2)))) LEFT OUTER JOIN vt0 ON CAST((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) AS TEXT) WHERE (((((((rt0.c3)AND('U清,HlHv')))OR(vt0.c0))) ISNULL)) GROUP BY vt0.c0, rt0.c4, rt0.c0, vt0.lid, v0.c0, rt0.c3 UNION SELECT vt0.c0, rt0.c4, rt0.c0, vt0.lid, v0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON ((((0.11315474281902493) IS FALSE))&((+ (rt0.c2)))) LEFT OUTER JOIN vt0 ON CAST((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) AS TEXT) WHERE ((NOT (((((((rt0.c3)AND('U清,HlHv')))OR(vt0.c0))) ISNULL)))) GROUP BY vt0.c0, rt0.c4, rt0.c0, vt0.lid, v0.c0, rt0.c3 UNION SELECT ALL vt0.c0, rt0.c4, rt0.c0, vt0.lid, v0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON ((((0.11315474281902493) IS FALSE))&((+ (rt0.c2)))) LEFT OUTER JOIN vt0 ON CAST((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) AS TEXT) WHERE (((((((((rt0.c3)AND('U清,HlHv')))OR(vt0.c0))) ISNULL)) ISNULL)) GROUP BY vt0.c0, rt0.c4, rt0.c0, vt0.lid, v0.c0, rt0.c3;
SELECT vt0.c0, rt0.c4, rt0.c0, vt0.lid, v0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON ((((0.11315474281902493) IS FALSE))&((+ (rt0.c2)))) LEFT OUTER JOIN vt0 ON CAST((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) AS TEXT) GROUP BY vt0.c0, rt0.c4, rt0.c0, vt0.lid, v0.c0, rt0.c3;
SELECT vt0.lid, v0.c0 FROM vt0, v0 GROUP BY vt0.lid, v0.c0;
SELECT vt0.lid, v0.c0 FROM vt0, v0 GROUP BY vt0.lid, v0.c0 HAVING v0.c0 UNION ALL SELECT vt0.lid, v0.c0 FROM vt0, v0 GROUP BY vt0.lid, v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL vt0.lid, v0.c0 FROM vt0, v0 GROUP BY vt0.lid, v0.c0 HAVING ((v0.c0) ISNULL);
SELECT vt0.lid, v0.c0 FROM vt0, v0 GROUP BY vt0.lid, v0.c0;
SELECT vt0.lid, v0.c0 FROM vt0, v0 GROUP BY vt0.lid, v0.c0 HAVING v0.c0 UNION ALL SELECT vt0.lid, v0.c0 FROM vt0, v0 GROUP BY vt0.lid, v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL vt0.lid, v0.c0 FROM vt0, v0 GROUP BY vt0.lid, v0.c0 HAVING ((v0.c0) ISNULL);
SELECT vt0.lid, v0.c0 FROM vt0, v0 GROUP BY vt0.lid, v0.c0;
SELECT ALL vt0.lid, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 RIGHT OUTER JOIN v0 ON CASE (+ (rt0.c0))  WHEN 'l' THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) WHEN v0.c0 COLLATE BINARY THEN ((vt0.lid)!=(rt0.c4)) WHEN ((rt0.c4) ISNULL) THEN ((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)) WHEN NULLIF(DISTINCT v0.c0, v0.c0) THEN rt0.c4 COLLATE NOCASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (vt0.lid)) THEN ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c3)) ELSE (- (rt0.c2)) END;
SELECT vt0.lid, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 RIGHT OUTER JOIN v0 ON CASE (+ (rt0.c0))  WHEN 'l' THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) WHEN v0.c0 COLLATE BINARY THEN ((vt0.lid)<>(rt0.c4)) WHEN ((rt0.c4) ISNULL) THEN ((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)) WHEN NULLIF(DISTINCT v0.c0, v0.c0) THEN rt0.c4 COLLATE NOCASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (vt0.lid)) THEN ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c3)) ELSE (- (rt0.c2)) END WHERE ((NOT ((NOT (vt0.c0))))) UNION ALL SELECT vt0.lid, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 RIGHT OUTER JOIN v0 ON CASE (+ (rt0.c0))  WHEN 'l' THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) WHEN v0.c0 COLLATE BINARY THEN ((vt0.lid)<>(rt0.c4)) WHEN ((rt0.c4) ISNULL) THEN ((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)) WHEN NULLIF(DISTINCT v0.c0, v0.c0) THEN rt0.c4 COLLATE NOCASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (vt0.lid)) THEN ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c3)) ELSE (- (rt0.c2)) END WHERE ((NOT ((NOT ((NOT (vt0.c0))))))) UNION ALL SELECT ALL vt0.lid, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 RIGHT OUTER JOIN v0 ON CASE (+ (rt0.c0))  WHEN 'l' THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) WHEN v0.c0 COLLATE BINARY THEN ((vt0.lid)!=(rt0.c4)) WHEN ((rt0.c4) ISNULL) THEN ((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)) WHEN NULLIF(DISTINCT v0.c0, v0.c0) THEN rt0.c4 COLLATE NOCASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (vt0.lid)) THEN ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c3)) ELSE (- (rt0.c2)) END WHERE ((((NOT ((NOT (vt0.c0))))) ISNULL));
SELECT ALL vt0.lid, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 RIGHT OUTER JOIN v0 ON CASE (+ (rt0.c0))  WHEN 'l' THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) WHEN v0.c0 COLLATE BINARY THEN ((vt0.lid)!=(rt0.c4)) WHEN ((rt0.c4) ISNULL) THEN ((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)) WHEN NULLIF(DISTINCT v0.c0, v0.c0) THEN rt0.c4 COLLATE NOCASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (vt0.lid)) THEN ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c3)) ELSE (- (rt0.c2)) END;
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT DISTINCT * FROM vt0, v0, rt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS TEXT))) AND ((TIME(vt0.c0, rt0.c4, v0.c0))))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS TEXT))) AND ((TIME(vt0.c0, rt0.c4, v0.c0))))))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS TEXT))) AND ((TIME(vt0.c0, rt0.c4, v0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT ALL rt0.c0, rt0.c3, vt0.lid, vt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c3, vt0.lid, vt0.c0, rt0.c2, rt0.c1, rt0.c4;
SELECT ALL rt0.c0, rt0.c3, vt0.lid, vt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM vt0, rt0 WHERE ('629736947') GROUP BY rt0.c0, rt0.c3, vt0.lid, vt0.c0, rt0.c2, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c0, rt0.c3, vt0.lid, vt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM vt0, rt0 WHERE ((NOT ('629736947'))) GROUP BY rt0.c0, rt0.c3, vt0.lid, vt0.c0, rt0.c2, rt0.c1, rt0.c4 UNION SELECT rt0.c0, rt0.c3, vt0.lid, vt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM vt0, rt0 WHERE ((('629736947') ISNULL)) GROUP BY rt0.c0, rt0.c3, vt0.lid, vt0.c0, rt0.c2, rt0.c1, rt0.c4;
SELECT ALL rt0.c0, rt0.c3, vt0.lid, vt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c3, vt0.lid, vt0.c0, rt0.c2, rt0.c1, rt0.c4;
SELECT rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING rt0.c4 UNION ALL SELECT rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (rt0.c4)) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((rt0.c4) ISNULL);
SELECT rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING rt0.c4 UNION ALL SELECT rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (rt0.c4)) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((rt0.c4) ISNULL);
SELECT rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0, vt0.lid, rt0.c3, rt0.c1, rt0.c4, v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON ((((((rt0.c3)AND(0.46072733847950786)))OR(vt0.lid)))%(rt0.c1)) RIGHT OUTER JOIN rt0 ON HEX(DISTINCT rt0.c3 COLLATE RTRIM);
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c3, rt0.c1, vt0.lid, rt0.c4 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c3, rt0.c1, vt0.lid, rt0.c4 FROM vt0, rt0 WHERE (CAST((vt0.lid IN (rt0.c4)) AS BLOB)) UNION SELECT DISTINCT rt0.c2, vt0.c0, rt0.c3, rt0.c1, vt0.lid, rt0.c4 FROM vt0, rt0 WHERE ((NOT (CAST((vt0.lid IN (rt0.c4)) AS BLOB)))) UNION SELECT DISTINCT rt0.c2, vt0.c0, rt0.c3, rt0.c1, vt0.lid, rt0.c4 FROM vt0, rt0 WHERE (((CAST((vt0.lid IN (rt0.c4)) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c3, rt0.c1, vt0.lid, rt0.c4 FROM vt0, rt0;
SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid;
SELECT vt0.c0, vt0.lid FROM vt0 WHERE (vt0.lid) GROUP BY vt0.c0, vt0.lid UNION SELECT ALL vt0.c0, vt0.lid FROM vt0 WHERE ((NOT (vt0.lid))) GROUP BY vt0.c0, vt0.lid UNION SELECT ALL vt0.c0, vt0.lid FROM vt0 WHERE (((vt0.lid) ISNULL)) GROUP BY vt0.c0, vt0.lid;
SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid;
SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0;
SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING MAX(COUNT(AVG(COUNT(*)))) UNION ALL SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING (NOT (MAX(COUNT(AVG(COUNT(*)))))) UNION ALL SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING ((MAX(COUNT(AVG(COUNT(*))))) ISNULL);
SELECT ALL * FROM vt0 NOT INDEXED, v0;
SELECT ALL * FROM vt0, v0 WHERE (((((((((((v0.c0)OR(vt0.c0)))OR(vt0.lid)))OR(v0.c0)))OR(vt0.lid)))=('R[,G'))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT (((((((((((v0.c0)OR(vt0.c0)))OR(vt0.lid)))OR(v0.c0)))OR(vt0.lid)))=('R[,G'))))) UNION ALL SELECT * FROM vt0, v0 NOT INDEXED WHERE (((((((((((((v0.c0)OR(vt0.c0)))OR(vt0.lid)))OR(v0.c0)))OR(vt0.lid)))==('R[,G'))) ISNULL));
SELECT ALL * FROM vt0 NOT INDEXED, v0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (x'a02a') UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (x'a02a'))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((x'a02a') ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT v0.c0, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, rt0.c2;
SELECT ALL v0.c0, rt0.c3, rt0.c2 FROM v0, rt0 WHERE ((~ (CASE rt0.c1  WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END))) GROUP BY v0.c0, rt0.c3, rt0.c2 UNION SELECT ALL v0.c0, rt0.c3, rt0.c2 FROM v0, rt0 WHERE ((NOT ((~ (CASE rt0.c1  WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END))))) GROUP BY v0.c0, rt0.c3, rt0.c2 UNION SELECT ALL v0.c0, rt0.c3, rt0.c2 FROM v0, rt0 WHERE ((((~ (CASE rt0.c1  WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END))) ISNULL)) GROUP BY v0.c0, rt0.c3, rt0.c2;
SELECT v0.c0, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, rt0.c2;
SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING GROUP_CONCAT(((rt0.c4) NOT NULL)) UNION ALL SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING (NOT (GROUP_CONCAT(((rt0.c4) NOT NULL)))) UNION ALL SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING ((GROUP_CONCAT(((rt0.c4) NOT NULL))) ISNULL);
SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING GROUP_CONCAT(((rt0.c4) NOT NULL)) UNION ALL SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING (NOT (GROUP_CONCAT(((rt0.c4) NOT NULL)))) UNION ALL SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING ((GROUP_CONCAT(((rt0.c4) NOT NULL))) ISNULL);
SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (CAST((v0.c0 IN ()) AS TEXT)) UNION ALL SELECT * FROM v0 WHERE ((NOT (CAST((v0.c0 IN ()) AS TEXT)))) UNION ALL SELECT * FROM v0 WHERE (((CAST((v0.c0 IN ()) AS TEXT)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT DISTINCT * FROM v0, vt0, rt0 WHERE (((((((rt0.c1) ISNULL))OR(rt0.c2)))OR((- (vt0.c0))))) UNION SELECT DISTINCT * FROM v0, vt0, rt0 WHERE ((NOT (((((((rt0.c1) ISNULL))OR(rt0.c2)))OR((- (vt0.c0))))))) UNION SELECT DISTINCT * FROM v0, vt0, rt0 WHERE (((((((((rt0.c1) ISNULL))OR(rt0.c2)))OR((- (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT ALL rt0.c4, vt0.c0, vt0.lid, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c4, vt0.c0, vt0.lid, rt0.c2;
SELECT ALL rt0.c4, vt0.c0, vt0.lid, rt0.c2 FROM vt0, rt0 WHERE ((((rt0.c0, vt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c4, vt0.lid, vt0.lid)) AND ((rt0.c1, vt0.c0, rt0.c2))) COLLATE BINARY) GROUP BY rt0.c4, vt0.c0, vt0.lid, rt0.c2 UNION SELECT rt0.c4, vt0.c0, vt0.lid, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((rt0.c0, vt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c4, vt0.lid, vt0.lid)) AND ((rt0.c1, vt0.c0, rt0.c2))) COLLATE BINARY))) GROUP BY rt0.c4, vt0.c0, vt0.lid, rt0.c2 UNION SELECT rt0.c4, vt0.c0, vt0.lid, rt0.c2 FROM vt0, rt0 WHERE ((((((rt0.c0, vt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c4, vt0.lid, vt0.lid)) AND ((rt0.c1, vt0.c0, rt0.c2))) COLLATE BINARY) ISNULL)) GROUP BY rt0.c4, vt0.c0, vt0.lid, rt0.c2;
SELECT ALL rt0.c4, vt0.c0, vt0.lid, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c4, vt0.c0, vt0.lid, rt0.c2;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING MAX(MAX(AVG(AVG(AVG(vt0.c0))))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (MAX(MAX(AVG(AVG(AVG(vt0.c0))))))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((MAX(MAX(AVG(AVG(AVG(vt0.c0)))))) ISNULL);
SELECT ALL vt0.lid FROM v0 CROSS JOIN vt0 ON vt0.c0;
SELECT ALL vt0.lid FROM v0 CROSS JOIN vt0 ON vt0.c0 WHERE (CASE WHEN '-1144390160' THEN x'e5ba' WHEN x'e863' THEN ((vt0.lid)AND(vt0.lid)) WHEN '485388812' THEN ((vt0.lid) BETWEEN (v0.c0) AND (v0.c0)) ELSE '' END) UNION ALL SELECT ALL vt0.lid FROM v0 CROSS JOIN vt0 ON vt0.c0 WHERE ((NOT (CASE WHEN '-1144390160' THEN x'e5ba' WHEN x'e863' THEN ((vt0.lid)AND(vt0.lid)) WHEN '485388812' THEN ((vt0.lid) BETWEEN (v0.c0) AND (v0.c0)) ELSE '' END))) UNION ALL SELECT vt0.lid FROM v0 CROSS JOIN vt0 ON vt0.c0 WHERE (((CASE WHEN '-1144390160' THEN x'e5ba' WHEN x'e863' THEN ((vt0.lid)AND(vt0.lid)) WHEN '485388812' THEN ((vt0.lid) BETWEEN (v0.c0) AND (v0.c0)) ELSE '' END) ISNULL));
SELECT ALL vt0.lid FROM v0 CROSS JOIN vt0 ON vt0.c0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((((((v0.c0)AND(v0.c0)))AND(v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((((((v0.c0)AND(v0.c0)))AND(v0.c0)))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((((((v0.c0)AND(v0.c0)))AND(v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE (HEX((((rt0.c0)) BETWEEN (('NA')) AND ((rt0.c1))))) GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (HEX((((rt0.c0)) BETWEEN (('NA')) AND ((rt0.c1))))))) GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE (((HEX((((rt0.c0)) BETWEEN (('NA')) AND ((rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c4;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, vt0.c0, rt0.c4, rt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, vt0.c0, rt0.c4, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, vt0.c0, rt0.c4, rt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, vt0.c0, rt0.c4, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, vt0.c0, rt0.c4, rt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, vt0.c0, rt0.c4, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, vt0.c0, rt0.c4, rt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, vt0.c0, rt0.c4, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c0, vt0.c0, rt0.c4, rt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, vt0.c0, rt0.c4, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, vt0.c0, rt0.c4, rt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, vt0.c0, rt0.c4, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, vt0.c0, rt0.c4, rt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, vt0.c0, rt0.c4, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, vt0.c0, rt0.c4, rt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, vt0.c0, rt0.c4, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c0, vt0.c0, rt0.c4, rt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, vt0.c0, rt0.c4, rt0.c1;
SELECT * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE (CHANGES()) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT (CHANGES()))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE (((CHANGES()) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT vt0.lid, v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.lid, v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN ((~ (v0.c0))) AND (((vt0.lid)AND(v0.c0))))) UNION SELECT DISTINCT vt0.lid, v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN ((~ (v0.c0))) AND (((vt0.lid)AND(v0.c0))))))) UNION SELECT DISTINCT vt0.lid, v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN ((~ (v0.c0))) AND (((vt0.lid)AND(v0.c0))))) ISNULL));
SELECT DISTINCT vt0.lid, v0.c0, vt0.c0 FROM vt0, v0;
SELECT ALL vt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c2, vt0.lid, rt0.c1, rt0.c0 FROM vt0, rt0 NATURAL JOIN v0 GROUP BY vt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c2, vt0.lid, rt0.c1, rt0.c0;
SELECT ALL vt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c2, vt0.lid, rt0.c1, rt0.c0 FROM vt0, rt0 NATURAL JOIN v0 WHERE (CASE WHEN ((((((((v0.c0)AND(x'')))AND(rt0.c2)))AND(vt0.c0)))AND(rt0.c0)) THEN CASE WHEN v0.c0 THEN vt0.lid ELSE rt0.c4 END WHEN vt0.c0 THEN ((((((((rt0.c2)AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) ELSE ((vt0.lid) NOT NULL) END) GROUP BY vt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c2, vt0.lid, rt0.c1, rt0.c0 UNION SELECT vt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c2, vt0.lid, rt0.c1, rt0.c0 FROM vt0, rt0 NATURAL JOIN v0 WHERE ((NOT (CASE WHEN ((((((((v0.c0)AND(x'')))AND(rt0.c2)))AND(vt0.c0)))AND(rt0.c0)) THEN CASE WHEN v0.c0 THEN vt0.lid ELSE rt0.c4 END WHEN vt0.c0 THEN ((((((((rt0.c2)AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) ELSE ((vt0.lid) NOT NULL) END))) GROUP BY vt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c2, vt0.lid, rt0.c1, rt0.c0 UNION SELECT vt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c2, vt0.lid, rt0.c1, rt0.c0 FROM vt0, rt0 NATURAL JOIN v0 WHERE (((CASE WHEN ((((((((v0.c0)AND(x'')))AND(rt0.c2)))AND(vt0.c0)))AND(rt0.c0)) THEN CASE WHEN v0.c0 THEN vt0.lid ELSE rt0.c4 END WHEN vt0.c0 THEN ((((((((rt0.c2)AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) ELSE ((vt0.lid) NOT NULL) END) ISNULL)) GROUP BY vt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c2, vt0.lid, rt0.c1, rt0.c0;
SELECT ALL vt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c2, vt0.lid, rt0.c1, rt0.c0 FROM vt0, rt0 NATURAL JOIN v0 GROUP BY vt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c2, vt0.lid, rt0.c1, rt0.c0;
SELECT ALL rt0.c4 FROM rt0 CROSS JOIN vt0 ON CAST(((rt0.c2) NOT NULL) AS NUMERIC) GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0 CROSS JOIN vt0 ON CAST(((rt0.c2) NOT NULL) AS NUMERIC) GROUP BY rt0.c4 HAVING (CAST(rt0.c3 AS TEXT) IN (MAX(rt0.c4))) UNION ALL SELECT ALL rt0.c4 FROM rt0 CROSS JOIN vt0 ON CAST(((rt0.c2) NOT NULL) AS NUMERIC) GROUP BY rt0.c4 HAVING (NOT ((CAST(rt0.c3 AS TEXT) IN (MAX(rt0.c4))))) UNION ALL SELECT rt0.c4 FROM rt0 CROSS JOIN vt0 ON CAST(((rt0.c2) NOT NULL) AS NUMERIC) GROUP BY rt0.c4 HAVING (((CAST(rt0.c3 AS TEXT) IN (MAX(rt0.c4)))) ISNULL);
SELECT ALL rt0.c4 FROM rt0 CROSS JOIN vt0 ON CAST(((rt0.c2) NOT NULL) AS NUMERIC) GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0 CROSS JOIN vt0 ON CAST(((rt0.c2) NOT NULL) AS NUMERIC) GROUP BY rt0.c4 HAVING (CAST(rt0.c3 AS TEXT) IN (MAX(rt0.c4))) UNION ALL SELECT ALL rt0.c4 FROM rt0 CROSS JOIN vt0 ON CAST(((rt0.c2) NOT NULL) AS NUMERIC) GROUP BY rt0.c4 HAVING (NOT ((CAST(rt0.c3 AS TEXT) IN (MAX(rt0.c4))))) UNION ALL SELECT rt0.c4 FROM rt0 CROSS JOIN vt0 ON CAST(((rt0.c2) NOT NULL) AS NUMERIC) GROUP BY rt0.c4 HAVING (((CAST(rt0.c3 AS TEXT) IN (MAX(rt0.c4)))) ISNULL);
SELECT ALL rt0.c4 FROM rt0 CROSS JOIN vt0 ON CAST(((rt0.c2) NOT NULL) AS NUMERIC) GROUP BY rt0.c4;
SELECT ALL * FROM rt0, v0, vt0;
SELECT * FROM rt0, v0, vt0 WHERE (((vt0.c0) NOT BETWEEN (rt0.c2) AND (853067677)) COLLATE BINARY) UNION ALL SELECT * FROM rt0, v0, vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (rt0.c2) AND (853067677)) COLLATE BINARY))) UNION ALL SELECT * FROM rt0, v0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c2) AND (853067677)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM rt0, v0, vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (CAST(vt0.lid AS TEXT)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((NOT (CAST(vt0.lid AS TEXT)))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((NOT (CAST(vt0.lid AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c3 FROM v0, rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM v0, rt0 WHERE (((TOTAL_CHANGES()) NOT NULL)) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM v0, rt0 WHERE ((NOT (((TOTAL_CHANGES()) NOT NULL)))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM v0, rt0 NOT INDEXED WHERE (((((TOTAL_CHANGES()) NOT NULL)) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM v0, rt0 GROUP BY rt0.c3;
SELECT v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING ((CAST(MIN(TOTAL(SUM(COUNT(*)))) AS REAL))=(SUM(rt0.c3))) UNION ALL SELECT v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING (NOT (((CAST(MIN(TOTAL(SUM(COUNT(*)))) AS REAL))==(SUM(rt0.c3))))) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING ((((CAST(MIN(TOTAL(SUM(COUNT(*)))) AS REAL))=(SUM(rt0.c3)))) ISNULL);
SELECT * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((('274605645')<=(((rt0.c3)-(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((('274605645')<=(((rt0.c3)-(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((('274605645')<=(((rt0.c3)-(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((NULL, v0.c0, v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CAST(v0.c0 AS REAL), (+ (v0.c0)))) AND ((CAST(v0.c0 AS NUMERIC), ((v0.c0)%(v0.c0)), ((v0.c0) NOT BETWEEN (x'7b57') AND (v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((NULL, v0.c0, v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CAST(v0.c0 AS REAL), (+ (v0.c0)))) AND ((CAST(v0.c0 AS NUMERIC), ((v0.c0)%(v0.c0)), ((v0.c0) NOT BETWEEN (x'7b57') AND (v0.c0)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((NULL, v0.c0, v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CAST(v0.c0 AS REAL), (+ (v0.c0)))) AND ((CAST(v0.c0 AS NUMERIC), ((v0.c0)%(v0.c0)), ((v0.c0) NOT BETWEEN (x'7b57') AND (v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0 FROM v0 INNER JOIN vt0 ON ((((~ (rt0.c3))))>((CAST(rt0.c2 AS INTEGER)))) RIGHT OUTER JOIN rt0 ON (((((vt0.c0 IN ()))OR(TRIM(DISTINCT rt0.c1))))OR(0.5032637861333811)) GROUP BY rt0.c0;
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE ((((NULL)) BETWEEN ((NULL COLLATE NOCASE)) AND ((NULLIF(rt0.c3, rt0.c1))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT ((((NULL)) BETWEEN ((NULL COLLATE NOCASE)) AND ((NULLIF(rt0.c3, rt0.c1))))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((((((NULL)) BETWEEN ((NULL COLLATE NOCASE)) AND ((NULLIF(rt0.c3, rt0.c1))))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT rt0.c2, rt0.c4, v0.c0 FROM rt0, v0, vt0;
SELECT DISTINCT rt0.c2, rt0.c4, v0.c0 FROM rt0, v0, vt0 WHERE (x'') UNION SELECT DISTINCT rt0.c2, rt0.c4, v0.c0 FROM rt0, v0, vt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt0.c2, rt0.c4, v0.c0 FROM rt0, v0, vt0 WHERE (((x'') ISNULL));
SELECT DISTINCT rt0.c2, rt0.c4, v0.c0 FROM rt0, v0, vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL((((TOTAL(v0.c0))) NOT BETWEEN ((AVG(v0.c0))) AND ((COUNT(*))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL((((TOTAL(v0.c0))) NOT BETWEEN ((AVG(v0.c0))) AND ((COUNT(*))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL((((TOTAL(v0.c0))) NOT BETWEEN ((AVG(v0.c0))) AND ((COUNT(*)))))) ISNULL);
SELECT rt0.c0, rt0.c3, vt0.lid, vt0.c0, rt0.c1 FROM vt0, rt0;
SELECT rt0.c0, rt0.c3, vt0.lid, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (('1806628889' IN ())) UNION ALL SELECT ALL rt0.c0, rt0.c3, vt0.lid, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (('1806628889' IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c3, vt0.lid, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((('1806628889' IN ())) ISNULL));
SELECT rt0.c0, rt0.c3, vt0.lid, vt0.c0, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0)=(CAST(v0.c0 AS TEXT)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0)==(CAST(v0.c0 AS TEXT)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)=(CAST(v0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (x'ae20') GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (x'ae20'))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((x'ae20') ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM rt0, v0 FULL OUTER JOIN vt0 ON (+ (rt0.c4 COLLATE NOCASE)) GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM rt0, v0 FULL OUTER JOIN vt0 ON (+ (rt0.c4 COLLATE NOCASE)) GROUP BY vt0.c0, rt0.c0 HAVING ((MAX(vt0.c0)) BETWEEN (GROUP_CONCAT(rt0.c0)) AND (AVG(SUM(rt0.c4)))) UNION ALL SELECT vt0.c0, rt0.c0 FROM rt0, v0 FULL OUTER JOIN vt0 ON (+ (rt0.c4 COLLATE NOCASE)) GROUP BY vt0.c0, rt0.c0 HAVING (NOT (((MAX(vt0.c0)) BETWEEN (GROUP_CONCAT(rt0.c0)) AND (AVG(SUM(rt0.c4)))))) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM rt0, v0 FULL OUTER JOIN vt0 ON (+ (rt0.c4 COLLATE NOCASE)) GROUP BY vt0.c0, rt0.c0 HAVING ((((MAX(vt0.c0)) BETWEEN (GROUP_CONCAT(rt0.c0)) AND (AVG(SUM(rt0.c4))))) ISNULL);
SELECT ALL rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (LIKELY(0Xffffffff82eda53c) IN ()) CROSS JOIN v0 ON (((vt0.c0, rt0.c4, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, rt0.c0))) COLLATE NOCASE;
SELECT rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (LIKELY(0Xffffffff82eda53c) IN ()) CROSS JOIN v0 ON (((vt0.c0, rt0.c4, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, rt0.c0))) COLLATE NOCASE WHERE (((rt0.c2)<(CAST(rt0.c4 AS INTEGER)))) UNION ALL SELECT rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (LIKELY(0Xffffffff82eda53c) IN ()) CROSS JOIN v0 ON (((vt0.c0, rt0.c4, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, rt0.c0))) COLLATE NOCASE WHERE ((NOT (((rt0.c2)<(CAST(rt0.c4 AS INTEGER)))))) UNION ALL SELECT ALL rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (LIKELY(0Xffffffff82eda53c) IN ()) CROSS JOIN v0 ON (((vt0.c0, rt0.c4, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, rt0.c0))) COLLATE NOCASE WHERE (((((rt0.c2)<(CAST(rt0.c4 AS INTEGER)))) ISNULL));
SELECT ALL rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (LIKELY(0Xffffffff82eda53c) IN ()) CROSS JOIN v0 ON (((vt0.c0, rt0.c4, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, rt0.c0))) COLLATE NOCASE;
SELECT DISTINCT vt0.lid FROM vt0;
SELECT DISTINCT vt0.lid FROM vt0 WHERE (json_array_length(((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)), CAST(vt0.lid AS NUMERIC))) UNION SELECT DISTINCT vt0.lid FROM vt0 WHERE ((NOT (json_array_length(((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)), CAST(vt0.lid AS NUMERIC))))) UNION SELECT DISTINCT vt0.lid FROM vt0 WHERE (((json_array_length(((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)), CAST(vt0.lid AS NUMERIC))) ISNULL));
SELECT DISTINCT vt0.lid FROM vt0;
SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM rt0, v0 WHERE (SQLITE_COMPILEOPTION_GET(CAST(rt0.c2 AS REAL))) GROUP BY rt0.c3, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM rt0, v0 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(CAST(rt0.c2 AS REAL))))) GROUP BY rt0.c3, rt0.c1, rt0.c0 UNION SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0, v0 WHERE (((SQLITE_COMPILEOPTION_GET(CAST(rt0.c2 AS REAL))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1, rt0.c0;
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT ALL vt0.lid FROM vt0 GROUP BY vt0.lid HAVING SUM(AVG(vt0.c0)) UNION ALL SELECT vt0.lid FROM vt0 GROUP BY vt0.lid HAVING (NOT (SUM(AVG(vt0.c0)))) UNION ALL SELECT vt0.lid FROM vt0 GROUP BY vt0.lid HAVING ((SUM(AVG(vt0.c0))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((((((vt0.lid, vt0.c0, NULL)) NOT BETWEEN ((vt0.lid, NULL, vt0.lid)) AND ((vt0.lid, '718875688', vt0.c0))))AND((+ (vt0.lid)))))OR(CAST('-709774237' AS REAL)))) UNION ALL SELECT ALL * FROM vt0 NOT INDEXED WHERE ((NOT ((((((((vt0.lid, vt0.c0, NULL)) NOT BETWEEN ((vt0.lid, NULL, vt0.lid)) AND ((vt0.lid, '718875688', vt0.c0))))AND((+ (vt0.lid)))))OR(CAST('-709774237' AS REAL)))))) UNION ALL SELECT * FROM vt0 WHERE ((((((((((vt0.lid, vt0.c0, NULL)) NOT BETWEEN ((vt0.lid, NULL, vt0.lid)) AND ((vt0.lid, '718875688', vt0.c0))))AND((+ (vt0.lid)))))OR(CAST('-709774237' AS REAL)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c3 COLLATE BINARY)=(((rt0.c0)OR(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c3 COLLATE BINARY)==(((rt0.c0)OR(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c3 COLLATE BINARY)==(((rt0.c0)OR(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, vt0.lid, vt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c2 FROM vt0, v0, rt0 GROUP BY rt0.c0, vt0.lid, vt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c2;
SELECT ALL rt0.c0, vt0.lid, vt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c2 FROM vt0, v0, rt0 WHERE (((((((('327539190', rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c4, vt0.c0, vt0.lid)) AND ((rt0.c1, rt0.c4, rt0.c0))))AND((rt0.c0 IN ()))))OR((~ (vt0.c0))))) GROUP BY rt0.c0, vt0.lid, vt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c2 UNION SELECT rt0.c0, vt0.lid, vt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c2 FROM vt0, v0, rt0 WHERE ((NOT (((((((('327539190', rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c4, vt0.c0, vt0.lid)) AND ((rt0.c1, rt0.c4, rt0.c0))))AND((rt0.c0 IN ()))))OR((~ (vt0.c0))))))) GROUP BY rt0.c0, vt0.lid, vt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c2 UNION SELECT rt0.c0, vt0.lid, vt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c2 FROM vt0, v0, rt0 WHERE (((((((((('327539190', rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c4, vt0.c0, vt0.lid)) AND ((rt0.c1, rt0.c4, rt0.c0))))AND((rt0.c0 IN ()))))OR((~ (vt0.c0))))) ISNULL)) GROUP BY rt0.c0, vt0.lid, vt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c2;
SELECT rt0.c0, vt0.lid, vt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c2 FROM vt0, v0, rt0 GROUP BY rt0.c0, vt0.lid, vt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c2;
SELECT ALL rt0.c0, rt0.c4, vt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c2 FROM rt0, vt0 INNER JOIN v0 ON CAST(CASE WHEN v0.c0 THEN rt0.c4 WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN vt0.lid ELSE rt0.c2 END AS INTEGER) GROUP BY rt0.c0, rt0.c4, vt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c2;
SELECT rt0.c0, rt0.c4, vt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c2 FROM rt0, vt0 INNER JOIN v0 ON CAST(CASE WHEN v0.c0 THEN rt0.c4 WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN vt0.lid ELSE rt0.c2 END AS INTEGER) GROUP BY rt0.c0, rt0.c4, vt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c2 HAVING TOTAL(SUM(COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c4, vt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c2 FROM rt0, vt0 INNER JOIN v0 ON CAST(CASE WHEN v0.c0 THEN rt0.c4 WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN vt0.lid ELSE rt0.c2 END AS INTEGER) GROUP BY rt0.c0, rt0.c4, vt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c2 HAVING (NOT (TOTAL(SUM(COUNT(*))))) UNION ALL SELECT rt0.c0, rt0.c4, vt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c2 FROM rt0, vt0 INNER JOIN v0 ON CAST(CASE WHEN v0.c0 THEN rt0.c4 WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN vt0.lid ELSE rt0.c2 END AS INTEGER) GROUP BY rt0.c0, rt0.c4, vt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c2 HAVING ((TOTAL(SUM(COUNT(*)))) ISNULL);
SELECT * FROM v0 NOT INDEXED, rt0;
SELECT ALL * FROM v0, rt0 WHERE (((LOWER(rt0.c1)) NOT BETWEEN (rt0.c2) AND (rt0.c2))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (((LOWER(rt0.c1)) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) UNION ALL SELECT * FROM v0, rt0 WHERE (((((LOWER(rt0.c1)) NOT BETWEEN (rt0.c2) AND (rt0.c2))) ISNULL));
SELECT * FROM v0 NOT INDEXED, rt0;
SELECT DISTINCT vt0.lid FROM vt0;
SELECT DISTINCT vt0.lid FROM vt0 WHERE ((((('-9223372036854775808')OR((((vt0.lid))<((vt0.lid))))))OR(CASE WHEN vt0.lid THEN vt0.c0 WHEN x'' THEN vt0.lid WHEN vt0.c0 THEN vt0.lid ELSE vt0.lid END))) UNION SELECT DISTINCT vt0.lid FROM vt0 WHERE ((NOT ((((('-9223372036854775808')OR((((vt0.lid))<((vt0.lid))))))OR(CASE WHEN vt0.lid THEN vt0.c0 WHEN x'' THEN vt0.lid WHEN vt0.c0 THEN vt0.lid ELSE vt0.lid END))))) UNION SELECT DISTINCT vt0.lid FROM vt0 WHERE ((((((('-9223372036854775808')OR((((vt0.lid))<((vt0.lid))))))OR(CASE WHEN vt0.lid THEN vt0.c0 WHEN x'' THEN vt0.lid WHEN vt0.c0 THEN vt0.lid ELSE vt0.lid END))) ISNULL));
SELECT DISTINCT vt0.lid FROM vt0;
SELECT ALL rt0.c4, rt0.c3, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, v0.c0, rt0.c0, rt0.c1;
SELECT rt0.c4, rt0.c3, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 WHERE (0.4912026310620631 COLLATE NOCASE) GROUP BY rt0.c4, rt0.c3, v0.c0, rt0.c0, rt0.c1 UNION SELECT rt0.c4, rt0.c3, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (0.4912026310620631 COLLATE NOCASE))) GROUP BY rt0.c4, rt0.c3, v0.c0, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c3, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 WHERE (((0.4912026310620631 COLLATE NOCASE) ISNULL)) GROUP BY rt0.c4, rt0.c3, v0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c3, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, v0.c0, rt0.c0, rt0.c1;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((((((((TOTAL(vt0.lid))AND(vt0.lid COLLATE RTRIM)))OR(COUNT(*))))AND((- (v0.c0)))))OR(TOTAL(vt0.c0))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (((((((((TOTAL(vt0.lid))AND(vt0.lid COLLATE RTRIM)))OR(COUNT(*))))AND((- (v0.c0)))))OR(TOTAL(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((((((((((TOTAL(vt0.lid))AND(vt0.lid COLLATE RTRIM)))OR(COUNT(*))))AND((- (v0.c0)))))OR(TOTAL(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((((((((TOTAL(vt0.lid))AND(vt0.lid COLLATE RTRIM)))OR(COUNT(*))))AND((- (v0.c0)))))OR(TOTAL(vt0.c0))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (((((((((TOTAL(vt0.lid))AND(vt0.lid COLLATE RTRIM)))OR(COUNT(*))))AND((- (v0.c0)))))OR(TOTAL(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((((((((((TOTAL(vt0.lid))AND(vt0.lid COLLATE RTRIM)))OR(COUNT(*))))AND((- (v0.c0)))))OR(TOTAL(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL MAX((((~ (rt0.c2)))%(((((rt0.c0)OR(rt0.c4)))OR(rt0.c1))))) FROM rt0 ORDER BY rt0.c0;
SELECT ALL * FROM v0 NATURAL JOIN vt0;
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (NULL) UNION ALL SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM v0 NATURAL JOIN vt0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM v0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ('-7Vt') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ('-7Vt'))) UNION SELECT DISTINCT * FROM rt0 WHERE ((('-7Vt') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4, vt0.lid, vt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (((- (rt0.c1))) IS FALSE) FULL OUTER JOIN vt0 ON (TYPEOF(rt0.c4) IN ()) GROUP BY v0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4, vt0.lid, vt0.c0;
SELECT ALL v0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4, vt0.lid, vt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (((- (rt0.c1))) IS FALSE) FULL OUTER JOIN vt0 ON (TYPEOF(rt0.c4) IN ()) WHERE ((((~ (vt0.c0)))||(((0.9001022723195558) IS FALSE)))) GROUP BY v0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4, vt0.lid, vt0.c0 UNION SELECT v0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4, vt0.lid, vt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (((- (rt0.c1))) IS FALSE) FULL OUTER JOIN vt0 ON (TYPEOF(rt0.c4) IN ()) WHERE ((NOT ((((~ (vt0.c0)))||(((0.9001022723195558) IS FALSE)))))) GROUP BY v0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4, vt0.lid, vt0.c0 UNION SELECT ALL v0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4, vt0.lid, vt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (((- (rt0.c1))) IS FALSE) FULL OUTER JOIN vt0 ON (TYPEOF(rt0.c4) IN ()) WHERE ((((((~ (vt0.c0)))||(((0.9001022723195558) IS FALSE)))) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4, vt0.lid, vt0.c0;
SELECT v0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4, vt0.lid, vt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (((- (rt0.c1))) IS FALSE) FULL OUTER JOIN vt0 ON (TYPEOF(rt0.c4) IN ()) GROUP BY v0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4, vt0.lid, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0 COLLATE NOCASE) ISNULL) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((v0.c0 COLLATE NOCASE) ISNULL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0 COLLATE NOCASE) ISNULL)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0 COLLATE NOCASE) ISNULL) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((v0.c0 COLLATE NOCASE) ISNULL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0 COLLATE NOCASE) ISNULL)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT MAX(((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((((v0.c0)OR(v0.c0)))OR(v0.c0))) AND ((((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) FROM v0;
SELECT rt0.c2, rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0 WHERE ((((rt0.c3)>=(rt0.c4)) IN (rt0.c2))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c3)>=(rt0.c4)) IN (rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0 WHERE ((((((rt0.c3)>=(rt0.c4)) IN (rt0.c2))) ISNULL));
SELECT rt0.c2, rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(UNICODE(vt0.c0) AS NUMERIC)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(UNICODE(vt0.c0) AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(UNICODE(vt0.c0) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c2 FROM rt0, vt0 FULL OUTER JOIN v0 ON ((((vt0.c0 COLLATE RTRIM)AND(x'dbd7')))OR(x'')) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt0 FULL OUTER JOIN v0 ON ((((vt0.c0 COLLATE RTRIM)AND(x'dbd7')))OR(x'')) WHERE (((((rt0.c4)<(rt0.c2))) NOT BETWEEN (SQLITE_COMPILEOPTION_GET(rt0.c4)) AND (IFNULL(719281701, rt0.c0)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, vt0 FULL OUTER JOIN v0 ON ((((vt0.c0 COLLATE RTRIM)AND(x'dbd7')))OR(x'')) WHERE ((NOT (((((rt0.c4)<(rt0.c2))) NOT BETWEEN (SQLITE_COMPILEOPTION_GET(rt0.c4)) AND (IFNULL(719281701, rt0.c0)))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt0 FULL OUTER JOIN v0 ON ((((vt0.c0 COLLATE RTRIM)AND(x'dbd7')))OR(x'')) WHERE (((((((rt0.c4)<(rt0.c2))) NOT BETWEEN (SQLITE_COMPILEOPTION_GET(rt0.c4)) AND (IFNULL(719281701, rt0.c0)))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt0 FULL OUTER JOIN v0 ON ((((vt0.c0 COLLATE RTRIM)AND(x'dbd7')))OR(x'')) GROUP BY rt0.c2;
SELECT rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c4)AND(rt0.c4))) IS TRUE) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c4)AND(rt0.c4))) IS TRUE) GROUP BY rt0.c3 HAVING (((rt0.c4 IN (rt0.c3)))>(((((MIN(MIN(COUNT(COUNT(rt0.c1)))))AND(MAX(MIN(COUNT(*))))))AND(rt0.c0)))) UNION ALL SELECT rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c4)AND(rt0.c4))) IS TRUE) GROUP BY rt0.c3 HAVING (NOT ((((rt0.c4 IN (rt0.c3)))>(((((MIN(MIN(COUNT(COUNT(rt0.c1)))))AND(MAX(MIN(COUNT(*))))))AND(rt0.c0)))))) UNION ALL SELECT rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c4)AND(rt0.c4))) IS TRUE) GROUP BY rt0.c3 HAVING (((((rt0.c4 IN (rt0.c3)))>(((((MIN(MIN(COUNT(COUNT(rt0.c1)))))AND(MAX(MIN(COUNT(*))))))AND(rt0.c0))))) ISNULL);
SELECT ALL v0.c0, vt0.lid FROM v0, vt0;
SELECT ALL v0.c0, vt0.lid FROM v0, vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ())) UNION ALL SELECT v0.c0, vt0.lid FROM v0, vt0 WHERE ((NOT ((CAST(vt0.c0 AS INTEGER) IN ())))) UNION ALL SELECT ALL v0.c0, vt0.lid FROM v0, vt0 WHERE ((((CAST(vt0.c0 AS INTEGER) IN ())) ISNULL));
SELECT ALL v0.c0, vt0.lid FROM v0, vt0;
SELECT DISTINCT vt0.lid FROM vt0;
SELECT DISTINCT vt0.lid FROM vt0 WHERE (((((vt0.lid)|(vt0.c0)))>((((vt0.lid))<((vt0.c0)))))) UNION SELECT DISTINCT vt0.lid FROM vt0 WHERE ((NOT (((((vt0.lid)|(vt0.c0)))>((((vt0.lid))<((vt0.c0)))))))) UNION SELECT DISTINCT vt0.lid FROM vt0 WHERE (((((((vt0.lid)|(vt0.c0)))>((((vt0.lid))<((vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.lid FROM vt0;
SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0;
SELECT vt0.lid, vt0.c0 FROM vt0 WHERE (CASE ((vt0.c0)&(vt0.lid))  WHEN vt0.c0 COLLATE NOCASE THEN vt0.lid COLLATE RTRIM WHEN CASE vt0.c0  WHEN vt0.lid THEN vt0.lid ELSE vt0.lid END THEN vt0.c0 COLLATE RTRIM WHEN (+ (vt0.c0)) THEN vt0.lid END) GROUP BY vt0.lid, vt0.c0 UNION SELECT ALL vt0.lid, vt0.c0 FROM vt0 WHERE ((NOT (CASE ((vt0.c0)&(vt0.lid))  WHEN vt0.c0 COLLATE NOCASE THEN vt0.lid COLLATE RTRIM WHEN CASE vt0.c0  WHEN vt0.lid THEN vt0.lid ELSE vt0.lid END THEN vt0.c0 COLLATE RTRIM WHEN (+ (vt0.c0)) THEN vt0.lid END))) GROUP BY vt0.lid, vt0.c0 UNION SELECT ALL vt0.lid, vt0.c0 FROM vt0 WHERE (((CASE ((vt0.c0)&(vt0.lid))  WHEN vt0.c0 COLLATE NOCASE THEN vt0.lid COLLATE RTRIM WHEN CASE vt0.c0  WHEN vt0.lid THEN vt0.lid ELSE vt0.lid END THEN vt0.c0 COLLATE RTRIM WHEN (+ (vt0.c0)) THEN vt0.lid END) ISNULL)) GROUP BY vt0.lid, vt0.c0;
SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0;
SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid;
SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid HAVING vt0.lid UNION ALL SELECT ALL vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid HAVING (NOT (vt0.lid)) UNION ALL SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid HAVING ((vt0.lid) ISNULL);
SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid;
SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid HAVING vt0.lid UNION ALL SELECT ALL vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid HAVING (NOT (vt0.lid)) UNION ALL SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid HAVING ((vt0.lid) ISNULL);
SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid;
SELECT ALL * FROM rt0 NOT INDEXED;
SELECT ALL * FROM rt0 WHERE ((- (((rt0.c3)==(rt0.c3))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((- (((rt0.c3)==(rt0.c3))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((- (((rt0.c3)==(rt0.c3))))) ISNULL));
SELECT ALL * FROM rt0 NOT INDEXED;
SELECT DISTINCT v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (- (vt0.lid));
SELECT DISTINCT v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (- (vt0.lid)) WHERE ((((vt0.lid IN ())) IS FALSE)) UNION SELECT DISTINCT v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (- (vt0.lid)) WHERE ((NOT ((((vt0.lid IN ())) IS FALSE)))) UNION SELECT DISTINCT v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (- (vt0.lid)) WHERE ((((((vt0.lid IN ())) IS FALSE)) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (- (vt0.lid));
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE (((((rt0.c3)+(rt0.c1)))>=(CAST(rt0.c3 AS NUMERIC)))) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4 UNION SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT (((((rt0.c3)+(rt0.c1)))>=(CAST(rt0.c3 AS NUMERIC)))))) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE (((((((rt0.c3)+(rt0.c1)))>=(CAST(rt0.c3 AS NUMERIC)))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4;
SELECT ALL rt0.c2, vt0.lid, v0.c0, rt0.c3, vt0.c0, rt0.c4 FROM rt0, v0 CROSS JOIN vt0 ON CASE WHEN (~ (rt0.c4)) THEN (((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) ELSE (rt0.c1 IN ()) END GROUP BY rt0.c2, vt0.lid, v0.c0, rt0.c3, vt0.c0, rt0.c4;
SELECT ALL rt0.c2, vt0.lid, v0.c0, rt0.c3, vt0.c0, rt0.c4 FROM rt0, v0 CROSS JOIN vt0 ON CASE WHEN (~ (rt0.c4)) THEN (((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) ELSE (rt0.c1 IN ()) END GROUP BY rt0.c2, vt0.lid, v0.c0, rt0.c3, vt0.c0, rt0.c4 HAVING (- (rt0.c0)) COLLATE RTRIM UNION ALL SELECT ALL rt0.c2, vt0.lid, v0.c0, rt0.c3, vt0.c0, rt0.c4 FROM rt0, v0 CROSS JOIN vt0 ON CASE WHEN (~ (rt0.c4)) THEN (((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) ELSE (rt0.c1 IN ()) END GROUP BY rt0.c2, vt0.lid, v0.c0, rt0.c3, vt0.c0, rt0.c4 HAVING (NOT ((- (rt0.c0)) COLLATE RTRIM)) UNION ALL SELECT rt0.c2, vt0.lid, v0.c0, rt0.c3, vt0.c0, rt0.c4 FROM rt0, v0 CROSS JOIN vt0 ON CASE WHEN (~ (rt0.c4)) THEN (((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) ELSE (rt0.c1 IN ()) END GROUP BY rt0.c2, vt0.lid, v0.c0, rt0.c3, vt0.c0, rt0.c4 HAVING (((- (rt0.c0)) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c2, vt0.lid, v0.c0, rt0.c3, vt0.c0, rt0.c4 FROM rt0, v0 CROSS JOIN vt0 ON CASE WHEN (~ (rt0.c4)) THEN (((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) ELSE (rt0.c1 IN ()) END GROUP BY rt0.c2, vt0.lid, v0.c0, rt0.c3, vt0.c0, rt0.c4;
SELECT ALL rt0.c2, vt0.lid, v0.c0, rt0.c3, vt0.c0, rt0.c4 FROM rt0, v0 CROSS JOIN vt0 ON CASE WHEN (~ (rt0.c4)) THEN (((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) ELSE (rt0.c1 IN ()) END GROUP BY rt0.c2, vt0.lid, v0.c0, rt0.c3, vt0.c0, rt0.c4 HAVING (- (rt0.c0)) COLLATE RTRIM UNION ALL SELECT ALL rt0.c2, vt0.lid, v0.c0, rt0.c3, vt0.c0, rt0.c4 FROM rt0, v0 CROSS JOIN vt0 ON CASE WHEN (~ (rt0.c4)) THEN (((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) ELSE (rt0.c1 IN ()) END GROUP BY rt0.c2, vt0.lid, v0.c0, rt0.c3, vt0.c0, rt0.c4 HAVING (NOT ((- (rt0.c0)) COLLATE RTRIM)) UNION ALL SELECT rt0.c2, vt0.lid, v0.c0, rt0.c3, vt0.c0, rt0.c4 FROM rt0, v0 CROSS JOIN vt0 ON CASE WHEN (~ (rt0.c4)) THEN (((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) ELSE (rt0.c1 IN ()) END GROUP BY rt0.c2, vt0.lid, v0.c0, rt0.c3, vt0.c0, rt0.c4 HAVING (((- (rt0.c0)) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c2, vt0.lid, v0.c0, rt0.c3, vt0.c0, rt0.c4 FROM rt0, v0 CROSS JOIN vt0 ON CASE WHEN (~ (rt0.c4)) THEN (((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) ELSE (rt0.c1 IN ()) END GROUP BY rt0.c2, vt0.lid, v0.c0, rt0.c3, vt0.c0, rt0.c4;
SELECT ALL * FROM rt0 NOT INDEXED, v0;
SELECT ALL * FROM rt0, v0 WHERE ((((((rt0.c0 IN ('C,lpP}Zg')))AND((rt0.c0 IN ()))))AND(rt0.c2))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT ((((((rt0.c0 IN ('C,lpP}Zg')))AND((rt0.c0 IN ()))))AND(rt0.c2))))) UNION ALL SELECT * FROM rt0 NOT INDEXED, v0 NOT INDEXED WHERE ((((((((rt0.c0 IN ('C,lpP}Zg')))AND((rt0.c0 IN ()))))AND(rt0.c2))) ISNULL));
SELECT ALL * FROM rt0 NOT INDEXED, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0, v0.c0, v0.c0))<>((v0.c0, '뭳~l', v0.c0))), LOWER(DISTINCT v0.c0), NULLIF(DISTINCT x'', v0.c0)))<=(((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), (((v0.c0))<((v0.c0))), v0.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((((v0.c0, v0.c0, v0.c0))!=((v0.c0, '뭳~l', v0.c0))), LOWER(DISTINCT v0.c0), NULLIF(DISTINCT x'', v0.c0)))<=(((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), (((v0.c0))<((v0.c0))), v0.c0 COLLATE RTRIM)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((((v0.c0, v0.c0, v0.c0))<>((v0.c0, '뭳~l', v0.c0))), LOWER(DISTINCT v0.c0), NULLIF(DISTINCT x'', v0.c0)))<=(((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), (((v0.c0))<((v0.c0))), v0.c0 COLLATE RTRIM)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid;
SELECT vt0.c0, vt0.lid FROM vt0 WHERE ((((vt0.lid)) NOT BETWEEN (((vt0.lid IN ()))) AND ((((((vt0.c0)AND(vt0.lid)))AND(vt0.lid)))))) GROUP BY vt0.c0, vt0.lid UNION SELECT vt0.c0, vt0.lid FROM vt0 WHERE ((NOT ((((vt0.lid)) NOT BETWEEN (((vt0.lid IN ()))) AND ((((((vt0.c0)AND(vt0.lid)))AND(vt0.lid)))))))) GROUP BY vt0.c0, vt0.lid UNION SELECT ALL vt0.c0, vt0.lid FROM vt0 WHERE ((((((vt0.lid)) NOT BETWEEN (((vt0.lid IN ()))) AND ((((((vt0.c0)AND(vt0.lid)))AND(vt0.lid)))))) ISNULL)) GROUP BY vt0.c0, vt0.lid;
SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid;
SELECT ALL rt0.c4 FROM rt0, vt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0, vt0 GROUP BY rt0.c4 HAVING vt0.c0 UNION ALL SELECT ALL rt0.c4 FROM rt0, vt0 GROUP BY rt0.c4 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL rt0.c4 FROM rt0, vt0 GROUP BY rt0.c4 HAVING ((vt0.c0) ISNULL);
SELECT ALL rt0.c4 FROM rt0, vt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0, vt0 GROUP BY rt0.c4 HAVING vt0.c0 UNION ALL SELECT ALL rt0.c4 FROM rt0, vt0 GROUP BY rt0.c4 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL rt0.c4 FROM rt0, vt0 GROUP BY rt0.c4 HAVING ((vt0.c0) ISNULL);
SELECT ALL rt0.c4 FROM rt0, vt0 GROUP BY rt0.c4;
SELECT MAX(vt0.c0) FROM rt0, v0, vt0;
SELECT vt0.lid, vt0.c0 FROM vt0;
SELECT ALL vt0.lid, vt0.c0 FROM vt0 WHERE (((vt0.c0)GLOB(CAST(vt0.c0 AS NUMERIC)))) UNION ALL SELECT ALL vt0.lid, vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)GLOB(CAST(vt0.c0 AS NUMERIC)))))) UNION ALL SELECT vt0.lid, vt0.c0 FROM vt0 WHERE (((((vt0.c0)GLOB(CAST(vt0.c0 AS NUMERIC)))) ISNULL));
SELECT vt0.lid, vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3 FROM rt0 WHERE (NULL) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3 FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3 FROM rt0;
SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED WHERE (CASE TYPEOF(rt0.c2)  WHEN rt0.c2 THEN ((rt0.c3)<(rt0.c0)) WHEN (((rt0.c1))>=((rt0.c1))) THEN CAST(rt0.c1 AS TEXT) WHEN (- (rt0.c0)) THEN (((rt0.c4, 0.5244352116723608, rt0.c2))<=((rt0.c0, rt0.c2, rt0.c0))) END) GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CASE TYPEOF(rt0.c2)  WHEN rt0.c2 THEN ((rt0.c3)<(rt0.c0)) WHEN (((rt0.c1))>=((rt0.c1))) THEN CAST(rt0.c1 AS TEXT) WHEN (- (rt0.c0)) THEN (((rt0.c4, 0.5244352116723608, rt0.c2))<=((rt0.c0, rt0.c2, rt0.c0))) END))) GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE TYPEOF(rt0.c2)  WHEN rt0.c2 THEN ((rt0.c3)<(rt0.c0)) WHEN (((rt0.c1))>=((rt0.c1))) THEN CAST(rt0.c1 AS TEXT) WHEN (- (rt0.c0)) THEN (((rt0.c4, 0.5244352116723608, rt0.c2))<=((rt0.c0, rt0.c2, rt0.c0))) END) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c3, vt0.lid, rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((x'9860') BETWEEN (ABS(rt0.c0)) AND ((((rt0.c2, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c0, vt0.lid)) AND ((vt0.lid, vt0.c0, rt0.c0))))) GROUP BY rt0.c3, vt0.lid, rt0.c4, rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c3, vt0.lid, rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((x'9860') BETWEEN (ABS(rt0.c0)) AND ((((rt0.c2, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c0, vt0.lid)) AND ((vt0.lid, vt0.c0, rt0.c0))))) GROUP BY rt0.c3, vt0.lid, rt0.c4, rt0.c2, rt0.c0, rt0.c1 HAVING MIN(MAX(vt0.c0)) UNION ALL SELECT rt0.c3, vt0.lid, rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((x'9860') BETWEEN (ABS(rt0.c0)) AND ((((rt0.c2, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c0, vt0.lid)) AND ((vt0.lid, vt0.c0, rt0.c0))))) GROUP BY rt0.c3, vt0.lid, rt0.c4, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (MIN(MAX(vt0.c0)))) UNION ALL SELECT rt0.c3, vt0.lid, rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((x'9860') BETWEEN (ABS(rt0.c0)) AND ((((rt0.c2, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c0, vt0.lid)) AND ((vt0.lid, vt0.c0, rt0.c0))))) GROUP BY rt0.c3, vt0.lid, rt0.c4, rt0.c2, rt0.c0, rt0.c1 HAVING ((MIN(MAX(vt0.c0))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ('') UNION ALL SELECT * FROM v0 WHERE ((NOT (''))) UNION ALL SELECT ALL * FROM v0 WHERE ((('') ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON ((((v0.c0 IN ()), CAST(vt0.c0 AS NUMERIC), (('W៙4G[ژf~#')>>(v0.c0)), CASE WHEN v0.c0 THEN 1.257022735E9 END, (+ (vt0.lid))))!=((CAST(vt0.lid AS TEXT), (+ (vt0.c0)), vt0.lid COLLATE NOCASE, (- (v0.c0)), CAST(v0.c0 AS INTEGER))));
SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON ((((v0.c0 IN ()), CAST(vt0.c0 AS NUMERIC), (('W៙4G[ژf~#')>>(v0.c0)), CASE WHEN v0.c0 THEN 1.257022735E9 END, (+ (vt0.lid))))!=((CAST(vt0.lid AS TEXT), (+ (vt0.c0)), vt0.lid COLLATE NOCASE, (- (v0.c0)), CAST(v0.c0 AS INTEGER)))) WHERE ((((+ (vt0.lid))) NOT BETWEEN (CASE 0x7b6e5496  WHEN vt0.lid THEN vt0.c0 ELSE v0.c0 END) AND (vt0.lid COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON ((((v0.c0 IN ()), CAST(vt0.c0 AS NUMERIC), (('W៙4G[ژf~#')>>(v0.c0)), CASE WHEN v0.c0 THEN 1.257022735E9 END, (+ (vt0.lid))))!=((CAST(vt0.lid AS TEXT), (+ (vt0.c0)), vt0.lid COLLATE NOCASE, (- (v0.c0)), CAST(v0.c0 AS INTEGER)))) WHERE ((NOT ((((+ (vt0.lid))) NOT BETWEEN (CASE 0X7b6e5496  WHEN vt0.lid THEN vt0.c0 ELSE v0.c0 END) AND (vt0.lid COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON ((((v0.c0 IN ()), CAST(vt0.c0 AS NUMERIC), (('W៙4G[ژf~#')>>(v0.c0)), CASE WHEN v0.c0 THEN 1.257022735E9 END, (+ (vt0.lid))))<>((CAST(vt0.lid AS TEXT), (+ (vt0.c0)), vt0.lid COLLATE NOCASE, (- (v0.c0)), CAST(v0.c0 AS INTEGER)))) WHERE ((((((+ (vt0.lid))) NOT BETWEEN (CASE 0x7b6e5496  WHEN vt0.lid THEN vt0.c0 ELSE v0.c0 END) AND (vt0.lid COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON ((((v0.c0 IN ()), CAST(vt0.c0 AS NUMERIC), (('W៙4G[ژf~#')>>(v0.c0)), CASE WHEN v0.c0 THEN 1.257022735E9 END, (+ (vt0.lid))))!=((CAST(vt0.lid AS TEXT), (+ (vt0.c0)), vt0.lid COLLATE NOCASE, (- (v0.c0)), CAST(v0.c0 AS INTEGER))));
SELECT vt0.c0, rt0.c3, v0.c0, rt0.c0, vt0.lid, rt0.c2, rt0.c1 FROM v0, vt0, rt0 GROUP BY vt0.c0, rt0.c3, v0.c0, rt0.c0, vt0.lid, rt0.c2, rt0.c1;
SELECT ALL vt0.c0, rt0.c3, v0.c0, rt0.c0, vt0.lid, rt0.c2, rt0.c1 FROM v0, vt0, rt0 WHERE (0xffffffffabd974f5) GROUP BY vt0.c0, rt0.c3, v0.c0, rt0.c0, vt0.lid, rt0.c2, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c3, v0.c0, rt0.c0, vt0.lid, rt0.c2, rt0.c1 FROM v0, vt0, rt0 WHERE ((NOT (0Xffffffffabd974f5))) GROUP BY vt0.c0, rt0.c3, v0.c0, rt0.c0, vt0.lid, rt0.c2, rt0.c1 UNION SELECT vt0.c0, rt0.c3, v0.c0, rt0.c0, vt0.lid, rt0.c2, rt0.c1 FROM v0, vt0, rt0 WHERE (((0xffffffffabd974f5) ISNULL)) GROUP BY vt0.c0, rt0.c3, v0.c0, rt0.c0, vt0.lid, rt0.c2, rt0.c1;
SELECT vt0.c0, rt0.c3, v0.c0, rt0.c0, vt0.lid, rt0.c2, rt0.c1 FROM v0, vt0, rt0 GROUP BY vt0.c0, rt0.c3, v0.c0, rt0.c0, vt0.lid, rt0.c2, rt0.c1;
SELECT v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2;
SELECT ALL v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 HAVING (- ((rt0.c2 IN ('1906548077', v0.c0)))) UNION ALL SELECT v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 HAVING (NOT ((- ((rt0.c2 IN ('1906548077', v0.c0)))))) UNION ALL SELECT ALL v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 HAVING (((- ((rt0.c2 IN ('1906548077', v0.c0))))) ISNULL);
SELECT v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2;
SELECT ALL v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 HAVING (- ((rt0.c2 IN ('1906548077', v0.c0)))) UNION ALL SELECT v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 HAVING (NOT ((- ((rt0.c2 IN ('1906548077', v0.c0)))))) UNION ALL SELECT ALL v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 HAVING (((- ((rt0.c2 IN ('1906548077', v0.c0))))) ISNULL);
SELECT v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2;
SELECT ALL vt0.c0, vt0.lid FROM vt0;
SELECT vt0.c0, vt0.lid FROM vt0 WHERE (((((((((LIKELY(DISTINCT vt0.c0))OR(((vt0.lid)>(vt0.c0)))))AND(CASE vt0.lid  WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.lid)))))OR(((((((((vt0.lid)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt0.lid FROM vt0 WHERE ((NOT (((((((((LIKELY(DISTINCT vt0.c0))OR(((vt0.lid)>(vt0.c0)))))AND(CASE vt0.lid  WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.lid)))))OR(((((((((vt0.lid)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0, vt0.lid FROM vt0 WHERE (((((((((((LIKELY(DISTINCT vt0.c0))OR(((vt0.lid)>(vt0.c0)))))AND(CASE vt0.lid  WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.lid)))))OR(((((((((vt0.lid)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT ALL vt0.c0, vt0.lid FROM vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (highlight(v0.c0, x'', v0.c0, 'Z矆BL.?') COLLATE RTRIM) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (highlight(v0.c0, x'', v0.c0, 'Z矆BL.?') COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0 WHERE (((highlight(v0.c0, x'', v0.c0, 'Z矆BL.?') COLLATE RTRIM) ISNULL));
SELECT ALL v0.c0, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c4, rt0.c0;
SELECT ALL v0.c0, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0 WHERE ((CAST(rt0.c1 AS REAL) IN (CAST(v0.c0 AS TEXT)))) GROUP BY v0.c0, rt0.c1, rt0.c4, rt0.c0 UNION SELECT v0.c0, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0 WHERE ((NOT ((CAST(rt0.c1 AS REAL) IN (CAST(v0.c0 AS TEXT)))))) GROUP BY v0.c0, rt0.c1, rt0.c4, rt0.c0 UNION SELECT v0.c0, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0 WHERE ((((CAST(rt0.c1 AS REAL) IN (CAST(v0.c0 AS TEXT)))) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c4, rt0.c0;
SELECT ALL v0.c0, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c4, rt0.c0;
SELECT ALL v0.c0, rt0.c1 FROM v0, vt0, rt0 GROUP BY v0.c0, rt0.c1;
SELECT ALL v0.c0, rt0.c1 FROM v0, vt0, rt0 GROUP BY v0.c0, rt0.c1 HAVING MAX(((COUNT(SUM(SUM(vt0.lid)))) NOT BETWEEN (COUNT(*)) AND (vt0.lid))) UNION ALL SELECT ALL v0.c0, rt0.c1 FROM v0, vt0, rt0 GROUP BY v0.c0, rt0.c1 HAVING (NOT (MAX(((COUNT(SUM(SUM(vt0.lid)))) NOT BETWEEN (COUNT(*)) AND (vt0.lid))))) UNION ALL SELECT v0.c0, rt0.c1 FROM v0, vt0, rt0 GROUP BY v0.c0, rt0.c1 HAVING ((MAX(((COUNT(SUM(SUM(vt0.lid)))) NOT BETWEEN (COUNT(*)) AND (vt0.lid)))) ISNULL);
SELECT * FROM vt0, v0, rt0;
SELECT * FROM vt0, v0, rt0 WHERE (CASE CASE rt0.c0  WHEN vt0.lid THEN '-1297607454' WHEN v0.c0 THEN rt0.c4 WHEN v0.c0 THEN rt0.c3 END  WHEN rt0.c4 COLLATE BINARY THEN (- (rt0.c0)) WHEN ((vt0.lid)*(vt0.c0)) THEN CAST(NULL AS TEXT) WHEN rt0.c1 THEN ((rt0.c1) IS FALSE) ELSE vt0.c0 COLLATE BINARY END) UNION ALL SELECT ALL * FROM vt0, v0, rt0 WHERE ((NOT (CASE CASE rt0.c0  WHEN vt0.lid THEN '-1297607454' WHEN v0.c0 THEN rt0.c4 WHEN v0.c0 THEN rt0.c3 END  WHEN rt0.c4 COLLATE BINARY THEN (- (rt0.c0)) WHEN ((vt0.lid)*(vt0.c0)) THEN CAST(NULL AS TEXT) WHEN rt0.c1 THEN ((rt0.c1) IS FALSE) ELSE vt0.c0 COLLATE BINARY END))) UNION ALL SELECT * FROM vt0, v0, rt0 WHERE (((CASE CASE rt0.c0  WHEN vt0.lid THEN '-1297607454' WHEN v0.c0 THEN rt0.c4 WHEN v0.c0 THEN rt0.c3 END  WHEN rt0.c4 COLLATE BINARY THEN (- (rt0.c0)) WHEN ((vt0.lid)*(vt0.c0)) THEN CAST(NULL AS TEXT) WHEN rt0.c1 THEN ((rt0.c1) IS FALSE) ELSE vt0.c0 COLLATE BINARY END) ISNULL));
SELECT * FROM vt0, v0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN rt0 ON ((((v0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))>=(CASE rt0.c3  WHEN v0.c0 THEN rt0.c2 ELSE vt0.c0 END)) RIGHT OUTER JOIN v0 ON (NOT (rt0.c0)) COLLATE RTRIM;
SELECT rt0.c3, rt0.c2, v0.c0, rt0.c1, vt0.lid FROM vt0, v0, rt0 GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c1, vt0.lid;
SELECT ALL rt0.c3, rt0.c2, v0.c0, rt0.c1, vt0.lid FROM vt0, v0, rt0 WHERE (rt0.c3) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c1, vt0.lid UNION SELECT ALL rt0.c3, rt0.c2, v0.c0, rt0.c1, vt0.lid FROM vt0, v0, rt0 WHERE ((NOT (rt0.c3))) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c1, vt0.lid UNION SELECT rt0.c3, rt0.c2, v0.c0, rt0.c1, vt0.lid FROM vt0, v0, rt0 WHERE (((rt0.c3) ISNULL)) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c1, vt0.lid;
SELECT rt0.c3, rt0.c2, v0.c0, rt0.c1, vt0.lid FROM vt0, v0, rt0 GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c1, vt0.lid;
SELECT ALL v0.c0, vt0.c0, vt0.lid FROM vt0, v0 GROUP BY v0.c0, vt0.c0, vt0.lid;
SELECT v0.c0, vt0.c0, vt0.lid FROM vt0, v0 GROUP BY v0.c0, vt0.c0, vt0.lid HAVING CAST(GROUP_CONCAT(COUNT(*)) AS TEXT) UNION ALL SELECT ALL v0.c0, vt0.c0, vt0.lid FROM vt0, v0 GROUP BY v0.c0, vt0.c0, vt0.lid HAVING (NOT (CAST(GROUP_CONCAT(COUNT(*)) AS TEXT))) UNION ALL SELECT v0.c0, vt0.c0, vt0.lid FROM vt0, v0 GROUP BY v0.c0, vt0.c0, vt0.lid HAVING ((CAST(GROUP_CONCAT(COUNT(*)) AS TEXT)) ISNULL);
SELECT ALL TOTAL(((rt0.c1)&(rt0.c0)) COLLATE NOCASE) FROM v0, rt0;
SELECT ALL rt0.c4, rt0.c2 FROM rt0;
SELECT rt0.c4, rt0.c2 FROM rt0 WHERE (((((rt0.c3, x'', rt0.c0))==((rt0.c3, rt0.c0, rt0.c1))) IN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) UNION ALL SELECT ALL rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c3, x'', rt0.c0))=((rt0.c3, rt0.c0, rt0.c1))) IN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))))) UNION ALL SELECT ALL rt0.c4, rt0.c2 FROM rt0 WHERE (((((((rt0.c3, x'', rt0.c0))=((rt0.c3, rt0.c0, rt0.c1))) IN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) ISNULL));
SELECT ALL rt0.c4, rt0.c2 FROM rt0;
SELECT DISTINCT v0.c0, vt0.lid, vt0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.lid, vt0.c0 FROM v0, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT v0.c0, vt0.lid, vt0.c0 FROM v0, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT v0.c0, vt0.lid, vt0.c0 FROM v0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT v0.c0, vt0.lid, vt0.c0 FROM v0, vt0;
SELECT vt0.c0, vt0.lid, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, vt0.lid, v0.c0;
SELECT vt0.c0, vt0.lid, v0.c0 FROM v0, vt0 WHERE ((NOT (CASE WHEN 0.5199675676411107 THEN vt0.lid END))) GROUP BY vt0.c0, vt0.lid, v0.c0 UNION SELECT ALL vt0.c0, vt0.lid, v0.c0 FROM v0, vt0 WHERE ((NOT ((NOT (CASE WHEN 0.5199675676411107 THEN vt0.lid END))))) GROUP BY vt0.c0, vt0.lid, v0.c0 UNION SELECT vt0.c0, vt0.lid, v0.c0 FROM v0, vt0 WHERE ((((NOT (CASE WHEN 0.5199675676411107 THEN vt0.lid END))) ISNULL)) GROUP BY vt0.c0, vt0.lid, v0.c0;
SELECT vt0.c0, vt0.lid, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, vt0.lid, v0.c0;
SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1;
SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1 HAVING CASE WHEN MAX(COUNT(MAX(rt0.c4))) THEN ((MIN(COUNT(*))) NOTNULL) END UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1 HAVING (NOT (CASE WHEN MAX(COUNT(MAX(rt0.c4))) THEN ((MIN(COUNT(*))) NOTNULL) END)) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1 HAVING ((CASE WHEN MAX(COUNT(MAX(rt0.c4))) THEN ((MIN(COUNT(*))) NOTNULL) END) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (v0.c0) UNION ALL SELECT * FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0, rt0, vt0;
SELECT DISTINCT * FROM v0, rt0, vt0 WHERE (NULL) UNION SELECT DISTINCT * FROM v0, rt0, vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM v0, rt0, vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM v0, rt0, vt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (CAST((((rt0.c1))>=((rt0.c0))) AS REAL)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CAST((((rt0.c1))>=((rt0.c0))) AS REAL)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((CAST((((rt0.c1))>=((rt0.c0))) AS REAL)) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c3, vt0.c0, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c3, vt0.c0, rt0.c1, rt0.c4, rt0.c0;
SELECT ALL rt0.c3, vt0.c0, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c3, vt0.c0, rt0.c1, rt0.c4, rt0.c0 HAVING (~ (SUM(rt0.c2))) UNION ALL SELECT ALL rt0.c3, vt0.c0, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c3, vt0.c0, rt0.c1, rt0.c4, rt0.c0 HAVING (NOT ((~ (SUM(rt0.c2))))) UNION ALL SELECT ALL rt0.c3, vt0.c0, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c3, vt0.c0, rt0.c1, rt0.c4, rt0.c0 HAVING (((~ (SUM(rt0.c2)))) ISNULL);
SELECT rt0.c3, vt0.c0, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c3, vt0.c0, rt0.c1, rt0.c4, rt0.c0;
SELECT ALL rt0.c3, vt0.c0, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c3, vt0.c0, rt0.c1, rt0.c4, rt0.c0 HAVING (~ (SUM(rt0.c2))) UNION ALL SELECT ALL rt0.c3, vt0.c0, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c3, vt0.c0, rt0.c1, rt0.c4, rt0.c0 HAVING (NOT ((~ (SUM(rt0.c2))))) UNION ALL SELECT ALL rt0.c3, vt0.c0, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c3, vt0.c0, rt0.c1, rt0.c4, rt0.c0 HAVING (((~ (SUM(rt0.c2)))) ISNULL);
SELECT rt0.c3, vt0.c0, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c3, vt0.c0, rt0.c1, rt0.c4, rt0.c0;
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (((((rt0.c0) IS FALSE))IS NOT((+ (v0.c0))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (((((rt0.c0) IS FALSE))IS NOT((+ (v0.c0))))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((((((rt0.c0) IS FALSE))IS NOT((+ (v0.c0))))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0, vt0;
SELECT DISTINCT * FROM rt0, v0, vt0 WHERE ((+ ((vt0.c0 IN (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0, v0, vt0 WHERE ((NOT ((+ ((vt0.c0 IN (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0, v0, vt0 WHERE ((((+ ((vt0.c0 IN (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0, vt0;
SELECT rt0.c4, rt0.c2, rt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c3 FROM rt0, vt0, v0 GROUP BY rt0.c4, rt0.c2, rt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c3;
SELECT ALL rt0.c4, rt0.c2, rt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c3 FROM rt0, vt0, v0 WHERE (IFNULL(rt0.c0, rt0.c0) COLLATE RTRIM) GROUP BY rt0.c4, rt0.c2, rt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c3 UNION SELECT rt0.c4, rt0.c2, rt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c3 FROM rt0, vt0, v0 WHERE ((NOT (IFNULL(rt0.c0, rt0.c0) COLLATE RTRIM))) GROUP BY rt0.c4, rt0.c2, rt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c4, rt0.c2, rt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c3 FROM rt0, vt0, v0 WHERE (((IFNULL(rt0.c0, rt0.c0) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c3;
SELECT rt0.c4, rt0.c2, rt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c3 FROM rt0, vt0, v0 GROUP BY rt0.c4, rt0.c2, rt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c3;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((v0.c0 IN (SUM(v0.c0))))>>(TOTAL(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((v0.c0 IN (SUM(v0.c0))))>>(TOTAL(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((v0.c0 IN (SUM(v0.c0))))>>(TOTAL(v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((v0.c0 IN (SUM(v0.c0))))>>(TOTAL(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((v0.c0 IN (SUM(v0.c0))))>>(TOTAL(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((v0.c0 IN (SUM(v0.c0))))>>(TOTAL(v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM vt0, v0, rt0;
SELECT * FROM vt0, v0, rt0 WHERE ((((0.03545291115587945 IN ())) BETWEEN (CASE WHEN vt0.lid THEN rt0.c4 ELSE vt0.lid END) AND ((((rt0.c4))>=((vt0.lid)))))) UNION ALL SELECT ALL * FROM vt0, v0, rt0 WHERE ((NOT ((((0.03545291115587945 IN ())) BETWEEN (CASE WHEN vt0.lid THEN rt0.c4 ELSE vt0.lid END) AND ((((rt0.c4))>=((vt0.lid)))))))) UNION ALL SELECT * FROM vt0, v0, rt0 WHERE ((((((0.03545291115587945 IN ())) BETWEEN (CASE WHEN vt0.lid THEN rt0.c4 ELSE vt0.lid END) AND ((((rt0.c4))>=((vt0.lid)))))) ISNULL));
SELECT ALL * FROM vt0, v0, rt0;
SELECT DISTINCT * FROM rt0, vt0 NOT INDEXED;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((((rt0.c4, rt0.c2, '')) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c2, vt0.c0))) IN ())) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((((rt0.c4, rt0.c2, '')) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c2, vt0.c0))) IN ())))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((rt0.c4, rt0.c2, '')) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c2, vt0.c0))) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0, vt0 NOT INDEXED;
SELECT vt0.lid, vt0.c0, v0.c0, rt0.c4, rt0.c1, rt0.c0 FROM rt0, v0 INNER JOIN vt0 ON ((CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c1 END) ISNULL) GROUP BY vt0.lid, vt0.c0, v0.c0, rt0.c4, rt0.c1, rt0.c0;
SELECT vt0.lid, vt0.c0, v0.c0, rt0.c4, rt0.c1, rt0.c0 FROM rt0, v0 INNER JOIN vt0 ON ((CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c1 END) ISNULL) WHERE (((((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c4)))AND(rt0.c4)))OR(v0.c0))) NOT BETWEEN ((- (rt0.c4))) AND (CAST(v0.c0 AS TEXT)))) GROUP BY vt0.lid, vt0.c0, v0.c0, rt0.c4, rt0.c1, rt0.c0 UNION SELECT vt0.lid, vt0.c0, v0.c0, rt0.c4, rt0.c1, rt0.c0 FROM rt0, v0 INNER JOIN vt0 ON ((CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c1 END) ISNULL) WHERE ((NOT (((((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c4)))AND(rt0.c4)))OR(v0.c0))) NOT BETWEEN ((- (rt0.c4))) AND (CAST(v0.c0 AS TEXT)))))) GROUP BY vt0.lid, vt0.c0, v0.c0, rt0.c4, rt0.c1, rt0.c0 UNION SELECT vt0.lid, vt0.c0, v0.c0, rt0.c4, rt0.c1, rt0.c0 FROM rt0, v0 INNER JOIN vt0 ON ((CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c1 END) ISNULL) WHERE (((((((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c4)))AND(rt0.c4)))OR(v0.c0))) NOT BETWEEN ((- (rt0.c4))) AND (CAST(v0.c0 AS TEXT)))) ISNULL)) GROUP BY vt0.lid, vt0.c0, v0.c0, rt0.c4, rt0.c1, rt0.c0;
SELECT vt0.lid, vt0.c0, v0.c0, rt0.c4, rt0.c1, rt0.c0 FROM rt0, v0 INNER JOIN vt0 ON ((CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c1 END) ISNULL) GROUP BY vt0.lid, vt0.c0, v0.c0, rt0.c4, rt0.c1, rt0.c0;
SELECT vt0.c0, vt0.lid, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON CASE x''  WHEN -970501650 THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) ELSE ((v0.c0) IS TRUE) END GROUP BY vt0.c0, vt0.lid, v0.c0;
SELECT ALL vt0.c0, vt0.lid, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON CASE x''  WHEN -970501650 THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) ELSE ((v0.c0) IS TRUE) END GROUP BY vt0.c0, vt0.lid, v0.c0 HAVING v0.c0 UNION ALL SELECT vt0.c0, vt0.lid, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON CASE x''  WHEN -970501650 THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) ELSE ((v0.c0) IS TRUE) END GROUP BY vt0.c0, vt0.lid, v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT vt0.c0, vt0.lid, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON CASE x''  WHEN -970501650 THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) ELSE ((v0.c0) IS TRUE) END GROUP BY vt0.c0, vt0.lid, v0.c0 HAVING ((v0.c0) ISNULL);
SELECT vt0.c0, vt0.lid, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON CASE x''  WHEN -970501650 THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) ELSE ((v0.c0) IS TRUE) END GROUP BY vt0.c0, vt0.lid, v0.c0;
SELECT ALL vt0.c0, vt0.lid, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON CASE x''  WHEN -970501650 THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) ELSE ((v0.c0) IS TRUE) END GROUP BY vt0.c0, vt0.lid, v0.c0 HAVING v0.c0 UNION ALL SELECT vt0.c0, vt0.lid, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON CASE x''  WHEN -970501650 THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) ELSE ((v0.c0) IS TRUE) END GROUP BY vt0.c0, vt0.lid, v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT vt0.c0, vt0.lid, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON CASE x''  WHEN -970501650 THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) ELSE ((v0.c0) IS TRUE) END GROUP BY vt0.c0, vt0.lid, v0.c0 HAVING ((v0.c0) ISNULL);
SELECT vt0.c0, vt0.lid, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON CASE x''  WHEN -970501650 THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) ELSE ((v0.c0) IS TRUE) END GROUP BY vt0.c0, vt0.lid, v0.c0;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS REAL)) IS FALSE)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS REAL)) IS FALSE)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS REAL)) IS FALSE)) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT v0.c0, rt0.c1, rt0.c4, rt0.c3, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 CROSS JOIN v0 ON ((CAST(vt0.lid AS TEXT))|(((-56856056) NOTNULL)));
SELECT DISTINCT v0.c0, rt0.c1, rt0.c4, rt0.c3, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 CROSS JOIN v0 ON ((CAST(vt0.lid AS TEXT))|(((-56856056) NOTNULL))) WHERE (vt0.lid) UNION SELECT DISTINCT v0.c0, rt0.c1, rt0.c4, rt0.c3, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 CROSS JOIN v0 ON ((CAST(vt0.lid AS TEXT))|(((-56856056) NOTNULL))) WHERE ((NOT (vt0.lid))) UNION SELECT DISTINCT v0.c0, rt0.c1, rt0.c4, rt0.c3, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 CROSS JOIN v0 ON ((CAST(vt0.lid AS TEXT))|(((-56856056) NOTNULL))) WHERE (((vt0.lid) ISNULL));
SELECT DISTINCT v0.c0, rt0.c1, rt0.c4, rt0.c3, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 CROSS JOIN v0 ON ((CAST(vt0.lid AS TEXT))|(((-56856056) NOTNULL)));
SELECT ALL vt0.c0, rt0.c4, vt0.lid, rt0.c1, v0.c0 FROM vt0, v0, rt0 GROUP BY vt0.c0, rt0.c4, vt0.lid, rt0.c1, v0.c0;
SELECT vt0.c0, rt0.c4, vt0.lid, rt0.c1, v0.c0 FROM vt0, v0, rt0 WHERE ((((vt0.lid IN ())) NOT BETWEEN (vt0.lid) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) GROUP BY vt0.c0, rt0.c4, vt0.lid, rt0.c1, v0.c0 UNION SELECT ALL vt0.c0, rt0.c4, vt0.lid, rt0.c1, v0.c0 FROM vt0, v0, rt0 WHERE ((NOT ((((vt0.lid IN ())) NOT BETWEEN (vt0.lid) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))))) GROUP BY vt0.c0, rt0.c4, vt0.lid, rt0.c1, v0.c0 UNION SELECT vt0.c0, rt0.c4, vt0.lid, rt0.c1, v0.c0 FROM vt0, v0, rt0 WHERE ((((((vt0.lid IN ())) NOT BETWEEN (vt0.lid) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ISNULL)) GROUP BY vt0.c0, rt0.c4, vt0.lid, rt0.c1, v0.c0;
SELECT ALL vt0.c0, rt0.c4, vt0.lid, rt0.c1, v0.c0 FROM vt0, v0, rt0 GROUP BY vt0.c0, rt0.c4, vt0.lid, rt0.c1, v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING '1109909978' UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ('1109909978')) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (('1109909978') ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING '1109909978' UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ('1109909978')) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (('1109909978') ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT MAX((((((v0.c0)==(vt0.c0))))!=((((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))))) FROM v0, vt0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 NOT INDEXED WHERE (((((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)))=(json_patch('2062730754', vt0.c0)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)))==(json_patch('2062730754', vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)))==(json_patch('2062730754', vt0.c0)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((9.47863796E8) NOT BETWEEN (v0.c0) AND (v0.c0)))&(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((9.47863796E8) NOT BETWEEN (v0.c0) AND (v0.c0)))&(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((9.47863796E8) NOT BETWEEN (v0.c0) AND (v0.c0)))&(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c2 FROM vt0 CROSS JOIN rt0 ON (rt0.c4 IN (rt0.c1)) COLLATE BINARY GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0 CROSS JOIN rt0 ON (rt0.c4 IN (rt0.c1)) COLLATE BINARY WHERE (((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)) COLLATE BINARY) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt0 CROSS JOIN rt0 ON (rt0.c4 IN (rt0.c1)) COLLATE BINARY WHERE ((NOT (((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)) COLLATE BINARY))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0 CROSS JOIN rt0 ON (rt0.c4 IN (rt0.c1)) COLLATE BINARY WHERE (((((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0 CROSS JOIN rt0 ON (rt0.c4 IN (rt0.c1)) COLLATE BINARY GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c1 FROM vt0, rt0, v0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM vt0, rt0, v0 GROUP BY rt0.c2, rt0.c1 HAVING (((((COUNT(*)))<>((AVG(rt0.c2))))) BETWEEN (TOTAL(rt0.c4)) AND (TYPEOF(rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0, v0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT ((((((COUNT(*)))!=((AVG(rt0.c2))))) BETWEEN (TOTAL(rt0.c4)) AND (TYPEOF(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM vt0, rt0, v0 GROUP BY rt0.c2, rt0.c1 HAVING (((((((COUNT(*)))<>((AVG(rt0.c2))))) BETWEEN (TOTAL(rt0.c4)) AND (TYPEOF(rt0.c0)))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM vt0, rt0, v0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM vt0, rt0, v0 GROUP BY rt0.c2, rt0.c1 HAVING (((((COUNT(*)))<>((AVG(rt0.c2))))) BETWEEN (TOTAL(rt0.c4)) AND (TYPEOF(rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0, v0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT ((((((COUNT(*)))!=((AVG(rt0.c2))))) BETWEEN (TOTAL(rt0.c4)) AND (TYPEOF(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM vt0, rt0, v0 GROUP BY rt0.c2, rt0.c1 HAVING (((((((COUNT(*)))<>((AVG(rt0.c2))))) BETWEEN (TOTAL(rt0.c4)) AND (TYPEOF(rt0.c0)))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM vt0, rt0, v0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c2 FROM v0, rt0, vt0;
SELECT ALL rt0.c3, rt0.c2 FROM v0, rt0, vt0 WHERE (rt0.c2) UNION ALL SELECT ALL rt0.c3, rt0.c2 FROM v0, rt0, vt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL rt0.c3, rt0.c2 FROM v0, rt0, vt0 WHERE (((rt0.c2) ISNULL));
SELECT rt0.c3, rt0.c2 FROM v0, rt0, vt0;
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0;
SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0, v0 WHERE (((rt0.c4 COLLATE RTRIM) NOT BETWEEN (((rt0.c2)<>(rt0.c2))) AND (0.7350288344840995))) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c3 UNION SELECT rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0, v0 WHERE ((NOT (((rt0.c4 COLLATE RTRIM) NOT BETWEEN (((rt0.c2)<>(rt0.c2))) AND (0.7350288344840995))))) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0, v0 WHERE (((((rt0.c4 COLLATE RTRIM) NOT BETWEEN (((rt0.c2)<>(rt0.c2))) AND (0.7350288344840995))) ISNULL)) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c3, vt0.lid, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, vt0.lid, vt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c3, vt0.lid, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, vt0.lid, vt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3, vt0.lid, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, vt0.lid, vt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3, vt0.lid, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, vt0.lid, vt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c3, vt0.lid, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, vt0.lid, vt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c3, vt0.lid, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, vt0.lid, vt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3, vt0.lid, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, vt0.lid, vt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3, vt0.lid, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, vt0.lid, vt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c3, vt0.lid, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, vt0.lid, vt0.c0, rt0.c2;
SELECT ALL SUM((((rt0.c0)) BETWEEN ((TYPEOF(rt0.c4))) AND ((((rt0.c0) NOT NULL))))) FROM v0, rt0, vt0 ORDER BY ABS(((rt0.c3) NOT NULL)) ASC  NULLS FIRST;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(CASE WHEN v0.c0 THEN 0.4503176381345789 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '-1768309458' ELSE v0.c0 END AS REAL)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(CASE WHEN v0.c0 THEN 0.4503176381345789 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '-1768309458' ELSE v0.c0 END AS REAL)))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CAST(CASE WHEN v0.c0 THEN 0.4503176381345789 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '-1768309458' ELSE v0.c0 END AS REAL)) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE ((((CAST(NULL AS BLOB)))>((vt0.c0)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT ((((CAST(NULL AS BLOB)))>((vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((((((CAST(NULL AS BLOB)))>((vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ('') GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (''))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((('') ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(GROUP_CONCAT(MAX(')*i\<mmh'))) COLLATE RTRIM UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(GROUP_CONCAT(MAX(')*i\<mmh'))) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(GROUP_CONCAT(MAX(')*i\<mmh'))) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE (highlight(LTRIM(rt0.c3, rt0.c4), ((rt0.c2) ISNULL), ((rt0.c0) ISNULL), ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c4)))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (highlight(LTRIM(rt0.c3, rt0.c4), ((rt0.c2) ISNULL), ((rt0.c0) ISNULL), ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c4)))))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE (((highlight(LTRIM(rt0.c3, rt0.c4), ((rt0.c2) ISNULL), ((rt0.c0) ISNULL), ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c4)))) ISNULL));
SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN (v0.c0) AND (((v0.c0)|(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN (v0.c0) AND (((v0.c0)|(v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN (v0.c0) AND (((v0.c0)|(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM v0, vt0, rt0 GROUP BY vt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4;
SELECT ALL vt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM v0, vt0, rt0 WHERE (rt0.c2) GROUP BY vt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 UNION SELECT ALL vt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM v0, vt0, rt0 WHERE ((NOT (rt0.c2))) GROUP BY vt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 UNION SELECT vt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM v0, vt0, rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY vt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4;
SELECT vt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM v0, vt0, rt0 GROUP BY vt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4;
SELECT rt0.c3 FROM rt0, v0 CROSS JOIN vt0 ON CAST(((((rt0.c1)AND(v0.c0)))AND('0.6537746815232799')) AS INTEGER) GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0, v0 CROSS JOIN vt0 ON CAST(((((rt0.c1)AND(v0.c0)))AND('0.6537746815232799')) AS INTEGER) GROUP BY rt0.c3 HAVING ((MIN(vt0.lid))IS(TOTAL(v0.c0))) UNION ALL SELECT ALL rt0.c3 FROM rt0, v0 CROSS JOIN vt0 ON CAST(((((rt0.c1)AND(v0.c0)))AND('0.6537746815232799')) AS INTEGER) GROUP BY rt0.c3 HAVING (NOT (((MIN(vt0.lid))IS(TOTAL(v0.c0))))) UNION ALL SELECT ALL rt0.c3 FROM rt0, v0 CROSS JOIN vt0 ON CAST(((((rt0.c1)AND(v0.c0)))AND('0.6537746815232799')) AS INTEGER) GROUP BY rt0.c3 HAVING ((((MIN(vt0.lid))IS(TOTAL(v0.c0)))) ISNULL);
SELECT rt0.c3 FROM rt0, v0 CROSS JOIN vt0 ON CAST(((((rt0.c1)AND(v0.c0)))AND('0.6537746815232799')) AS INTEGER) GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0, v0 CROSS JOIN vt0 ON CAST(((((rt0.c1)AND(v0.c0)))AND('0.6537746815232799')) AS INTEGER) GROUP BY rt0.c3 HAVING ((MIN(vt0.lid))IS(TOTAL(v0.c0))) UNION ALL SELECT ALL rt0.c3 FROM rt0, v0 CROSS JOIN vt0 ON CAST(((((rt0.c1)AND(v0.c0)))AND('0.6537746815232799')) AS INTEGER) GROUP BY rt0.c3 HAVING (NOT (((MIN(vt0.lid))IS(TOTAL(v0.c0))))) UNION ALL SELECT ALL rt0.c3 FROM rt0, v0 CROSS JOIN vt0 ON CAST(((((rt0.c1)AND(v0.c0)))AND('0.6537746815232799')) AS INTEGER) GROUP BY rt0.c3 HAVING ((((MIN(vt0.lid))IS(TOTAL(v0.c0)))) ISNULL);
SELECT rt0.c3 FROM rt0, v0 CROSS JOIN vt0 ON CAST(((((rt0.c1)AND(v0.c0)))AND('0.6537746815232799')) AS INTEGER) GROUP BY rt0.c3;
SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM vt0, rt0, v0;
SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM vt0, rt0, v0 WHERE (((((((((((((vt0.lid)AND(v0.c0)))AND(vt0.c0)))OR(vt0.lid COLLATE BINARY)))OR(((rt0.c4)<<(vt0.c0)))))OR(CASE WHEN NULL THEN vt0.lid ELSE v0.c0 END)))OR(LIKELIHOOD(rt0.c4, 0.5265001800424893)))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM vt0, rt0, v0 WHERE ((NOT (((((((((((((vt0.lid)AND(v0.c0)))AND(vt0.c0)))OR(vt0.lid COLLATE BINARY)))OR(((rt0.c4)<<(vt0.c0)))))OR(CASE WHEN NULL THEN vt0.lid ELSE v0.c0 END)))OR(LIKELIHOOD(rt0.c4, 0.5265001800424893)))))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM vt0, rt0, v0 WHERE (((((((((((((((vt0.lid)AND(v0.c0)))AND(vt0.c0)))OR(vt0.lid COLLATE BINARY)))OR(((rt0.c4)<<(vt0.c0)))))OR(CASE WHEN NULL THEN vt0.lid ELSE v0.c0 END)))OR(LIKELIHOOD(rt0.c4, 0.5265001800424893)))) ISNULL));
SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM vt0, rt0, v0;
SELECT DISTINCT vt0.lid FROM rt0, vt0, v0;
SELECT DISTINCT vt0.lid FROM rt0, vt0, v0 WHERE ((((((((((((((+ (rt0.c0)))AND('232452008' COLLATE RTRIM)))OR(rt0.c1 COLLATE NOCASE)))AND((~ (rt0.c0)))))OR(((rt0.c3) BETWEEN (rt0.c0) AND (vt0.lid)))))AND(((rt0.c1)IS(vt0.lid)))))AND(((((rt0.c1)AND(vt0.lid)))AND(vt0.c0))))) UNION SELECT DISTINCT vt0.lid FROM rt0, vt0, v0 WHERE ((NOT ((((((((((((((+ (rt0.c0)))AND('232452008' COLLATE RTRIM)))OR(rt0.c1 COLLATE NOCASE)))AND((~ (rt0.c0)))))OR(((rt0.c3) BETWEEN (rt0.c0) AND (vt0.lid)))))AND(((rt0.c1)IS(vt0.lid)))))AND(((((rt0.c1)AND(vt0.lid)))AND(vt0.c0))))))) UNION SELECT DISTINCT vt0.lid FROM rt0 NOT INDEXED, vt0, v0 WHERE ((((((((((((((((+ (rt0.c0)))AND('232452008' COLLATE RTRIM)))OR(rt0.c1 COLLATE NOCASE)))AND((~ (rt0.c0)))))OR(((rt0.c3) BETWEEN (rt0.c0) AND (vt0.lid)))))AND(((rt0.c1)IS(vt0.lid)))))AND(((((rt0.c1)AND(vt0.lid)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.lid FROM rt0, vt0, v0;
SELECT ALL vt0.c0, rt0.c1 FROM rt0, v0, vt0 GROUP BY vt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c1 FROM rt0, v0, vt0 WHERE (((((NULL)OR((rt0.c2 IN ()))))OR(((rt0.c4) IS TRUE)))) GROUP BY vt0.c0, rt0.c1 UNION SELECT vt0.c0, rt0.c1 FROM rt0, v0, vt0 WHERE ((NOT (((((NULL)OR((rt0.c2 IN ()))))OR(((rt0.c4) IS TRUE)))))) GROUP BY vt0.c0, rt0.c1 UNION SELECT vt0.c0, rt0.c1 FROM rt0, v0, vt0 WHERE (((((((NULL)OR((rt0.c2 IN ()))))OR(((rt0.c4) IS TRUE)))) ISNULL)) GROUP BY vt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c1 FROM rt0, v0, vt0 GROUP BY vt0.c0, rt0.c1;
SELECT vt0.lid FROM v0 RIGHT OUTER JOIN vt0 ON (NOT (((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c0)))) GROUP BY vt0.lid;
SELECT vt0.lid FROM v0 RIGHT OUTER JOIN vt0 ON (NOT (((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c0)))) GROUP BY vt0.lid HAVING GROUP_CONCAT(SUM('')) UNION ALL SELECT ALL vt0.lid FROM v0 RIGHT OUTER JOIN vt0 ON (NOT (((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c0)))) GROUP BY vt0.lid HAVING (NOT (GROUP_CONCAT(SUM('')))) UNION ALL SELECT vt0.lid FROM v0 RIGHT OUTER JOIN vt0 ON (NOT (((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c0)))) GROUP BY vt0.lid HAVING ((GROUP_CONCAT(SUM(''))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((NOT ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((NOT ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c4 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c4 FROM rt0, vt0 WHERE (vt0.lid) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c4 FROM rt0, vt0 WHERE ((NOT (vt0.lid))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c4 FROM rt0, vt0 WHERE (((vt0.lid) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c4 FROM rt0, vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((((((((v0.c0) ISNULL))OR((((v0.c0))<=((v0.c0))))))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))OR((v0.c0 IN ()))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((((((v0.c0) ISNULL))OR((((v0.c0))<=((v0.c0))))))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))OR((v0.c0 IN ()))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((((((((v0.c0) ISNULL))OR((((v0.c0))<=((v0.c0))))))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))OR((v0.c0 IN ()))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c3, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c2;
SELECT rt0.c3, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c2 HAVING GROUP_CONCAT(GROUP_CONCAT(COUNT(*))) UNION ALL SELECT ALL rt0.c3, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT rt0.c3, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c2 HAVING ((GROUP_CONCAT(GROUP_CONCAT(COUNT(*)))) ISNULL);
SELECT ALL vt0.lid, v0.c0, vt0.c0 FROM vt0, v0;
SELECT vt0.lid, v0.c0, vt0.c0 FROM vt0, v0 WHERE (CAST(vt0.lid COLLATE BINARY AS REAL)) UNION ALL SELECT vt0.lid, v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (CAST(vt0.lid COLLATE BINARY AS REAL)))) UNION ALL SELECT ALL vt0.lid, v0.c0, vt0.c0 FROM vt0, v0 WHERE (((CAST(vt0.lid COLLATE BINARY AS REAL)) ISNULL));
SELECT ALL vt0.lid, v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((((((NULL)AND(rt0.c1)))AND(rt0.c0)))GLOB(((rt0.c1)=(rt0.c0))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((((((NULL)AND(rt0.c1)))AND(rt0.c0)))GLOB(((rt0.c1)==(rt0.c0))))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((((((NULL)AND(rt0.c1)))AND(rt0.c0)))GLOB(((rt0.c1)=(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (CASE v0.c0  WHEN 'C,lpP}Zg' THEN x'' ELSE v0.c0 END) AND ((NOT (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (CASE v0.c0  WHEN 'C,lpP}Zg' THEN x'' ELSE v0.c0 END) AND ((NOT (v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (CASE v0.c0  WHEN 'C,lpP}Zg' THEN x'' ELSE v0.c0 END) AND ((NOT (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, rt0.c4, rt0.c0, rt0.c3 FROM rt0 INNER JOIN v0 ON '409417551' GROUP BY v0.c0, rt0.c4, rt0.c0, rt0.c3;
SELECT ALL v0.c0, rt0.c4, rt0.c0, rt0.c3 FROM rt0 INNER JOIN v0 ON '409417551' GROUP BY v0.c0, rt0.c4, rt0.c0, rt0.c3 HAVING ((0xfffffffff22d83a6)>(MIN(rt0.c4))) UNION ALL SELECT v0.c0, rt0.c4, rt0.c0, rt0.c3 FROM rt0 INNER JOIN v0 ON '409417551' GROUP BY v0.c0, rt0.c4, rt0.c0, rt0.c3 HAVING (NOT (((0Xfffffffff22d83a6)>(MIN(rt0.c4))))) UNION ALL SELECT v0.c0, rt0.c4, rt0.c0, rt0.c3 FROM rt0 INNER JOIN v0 ON '409417551' GROUP BY v0.c0, rt0.c4, rt0.c0, rt0.c3 HAVING ((((0xfffffffff22d83a6)>(MIN(rt0.c4)))) ISNULL);
SELECT ALL v0.c0, rt0.c4, rt0.c0, rt0.c3 FROM rt0 INNER JOIN v0 ON '409417551' GROUP BY v0.c0, rt0.c4, rt0.c0, rt0.c3;
SELECT ALL v0.c0, rt0.c4, rt0.c0, rt0.c3 FROM rt0 INNER JOIN v0 ON '409417551' GROUP BY v0.c0, rt0.c4, rt0.c0, rt0.c3 HAVING ((0xfffffffff22d83a6)>(MIN(rt0.c4))) UNION ALL SELECT v0.c0, rt0.c4, rt0.c0, rt0.c3 FROM rt0 INNER JOIN v0 ON '409417551' GROUP BY v0.c0, rt0.c4, rt0.c0, rt0.c3 HAVING (NOT (((0Xfffffffff22d83a6)>(MIN(rt0.c4))))) UNION ALL SELECT v0.c0, rt0.c4, rt0.c0, rt0.c3 FROM rt0 INNER JOIN v0 ON '409417551' GROUP BY v0.c0, rt0.c4, rt0.c0, rt0.c3 HAVING ((((0xfffffffff22d83a6)>(MIN(rt0.c4)))) ISNULL);
SELECT ALL v0.c0, rt0.c4, rt0.c0, rt0.c3 FROM rt0 INNER JOIN v0 ON '409417551' GROUP BY v0.c0, rt0.c4, rt0.c0, rt0.c3;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOTNULL)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY) NOTNULL)))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY) NOTNULL)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0) IS TRUE)) IS TRUE)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) IS TRUE)) IS TRUE)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0) IS TRUE)) IS TRUE)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT vt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (CASE WHEN vt0.c0 THEN ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)) ELSE rt0.c2 END) GROUP BY vt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 UNION SELECT vt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)) ELSE rt0.c2 END))) GROUP BY vt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 UNION SELECT ALL vt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((CASE WHEN vt0.c0 THEN ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)) ELSE rt0.c2 END) ISNULL)) GROUP BY vt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL vt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING (((((v0.c0)<<(0x392a2793))))>=(((COUNT(*) IN ())))) UNION ALL SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING (NOT ((((((v0.c0)<<(0X392a2793))))>=(((COUNT(*) IN ())))))) UNION ALL SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING (((((((v0.c0)<<(0x392a2793))))>=(((COUNT(*) IN ()))))) ISNULL);
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING (((((v0.c0)<<(0x392a2793))))>=(((COUNT(*) IN ())))) UNION ALL SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING (NOT ((((((v0.c0)<<(0X392a2793))))>=(((COUNT(*) IN ())))))) UNION ALL SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING (((((((v0.c0)<<(0x392a2793))))>=(((COUNT(*) IN ()))))) ISNULL);
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT * FROM rt0, v0, vt0;
SELECT ALL * FROM rt0, v0, vt0 WHERE (CASE (rt0.c4 IN ())  WHEN ((rt0.c2)=(rt0.c0)) THEN ((rt0.c4)<<(rt0.c3)) END) UNION ALL SELECT ALL * FROM rt0, v0, vt0 WHERE ((NOT (CASE (rt0.c4 IN ())  WHEN ((rt0.c2)=(rt0.c0)) THEN ((rt0.c4)<<(rt0.c3)) END))) UNION ALL SELECT * FROM rt0, v0, vt0 WHERE (((CASE (rt0.c4 IN ())  WHEN ((rt0.c2)=(rt0.c0)) THEN ((rt0.c4)<<(rt0.c3)) END) ISNULL));
SELECT * FROM rt0, v0, vt0;
SELECT DISTINCT v0.c0, rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0, v0;
SELECT DISTINCT v0.c0, rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0, v0 WHERE (0.5192369184286862) UNION SELECT DISTINCT v0.c0, rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0, v0 WHERE ((NOT (0.5192369184286862))) UNION SELECT DISTINCT v0.c0, rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0, v0 WHERE (((0.5192369184286862) ISNULL));
SELECT DISTINCT v0.c0, rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0, v0;
SELECT rt0.c2, rt0.c3, rt0.c4, v0.c0, vt0.c0, vt0.lid, rt0.c1 FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c4, rt0.c3, vt0.lid)) BETWEEN ((DATE(rt0.c3, v0.c0, rt0.c1), ((v0.c0) ISNULL), ABS(DISTINCT rt0.c3))) AND (((~ (vt0.c0)), 0.7921455042943023, x''))) INNER JOIN vt0 ON ((((((rt0.c0)+(rt0.c3)))AND(((vt0.c0)<(rt0.c2)))))OR(v0.c0 COLLATE NOCASE)) GROUP BY rt0.c2, rt0.c3, rt0.c4, v0.c0, vt0.c0, vt0.lid, rt0.c1;
SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0;
SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING MIN((+ (vt0.lid))) UNION ALL SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING (NOT (MIN((+ (vt0.lid))))) UNION ALL SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING ((MIN((+ (vt0.lid)))) ISNULL);
SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0;
SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING MIN((+ (vt0.lid))) UNION ALL SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING (NOT (MIN((+ (vt0.lid))))) UNION ALL SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING ((MIN((+ (vt0.lid)))) ISNULL);
SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0;
SELECT rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))) IS TRUE)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))) IS TRUE)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))) IS TRUE)) ISNULL));
SELECT rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((((((rt0.c4)-(rt0.c1)))AND(CASE vt0.lid  WHEN vt0.lid THEN vt0.lid WHEN rt0.c2 THEN x'' WHEN 0X4c2287a1 THEN vt0.lid END)))OR(((rt0.c0)<=(rt0.c3))))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((NOT (((((((rt0.c4)-(rt0.c1)))AND(CASE vt0.lid  WHEN vt0.lid THEN vt0.lid WHEN rt0.c2 THEN x'' WHEN 0x4c2287a1 THEN vt0.lid END)))OR(((rt0.c0)<=(rt0.c3))))))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((((((((rt0.c4)-(rt0.c1)))AND(CASE vt0.lid  WHEN vt0.lid THEN vt0.lid WHEN rt0.c2 THEN x'' WHEN 0X4c2287a1 THEN vt0.lid END)))OR(((rt0.c0)<=(rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT v0.c0, rt0.c2, rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((v0.c0))) COLLATE RTRIM GROUP BY v0.c0, rt0.c2, rt0.c3;
SELECT ALL v0.c0, rt0.c2, rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((v0.c0))) COLLATE RTRIM WHERE (((((NULL)OR(NULL)))AND(((((rt0.c2)OR(rt0.c3)))AND(0.14240045410359803))))) GROUP BY v0.c0, rt0.c2, rt0.c3 UNION SELECT v0.c0, rt0.c2, rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((v0.c0))) COLLATE RTRIM WHERE ((NOT (((((NULL)OR(NULL)))AND(((((rt0.c2)OR(rt0.c3)))AND(0.14240045410359803))))))) GROUP BY v0.c0, rt0.c2, rt0.c3 UNION SELECT ALL v0.c0, rt0.c2, rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((v0.c0))) COLLATE RTRIM WHERE (((((((NULL)OR(NULL)))AND(((((rt0.c2)OR(rt0.c3)))AND(0.14240045410359803))))) ISNULL)) GROUP BY v0.c0, rt0.c2, rt0.c3;
SELECT v0.c0, rt0.c2, rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((v0.c0))) COLLATE RTRIM GROUP BY v0.c0, rt0.c2, rt0.c3;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING json_insert(((((vt0.c0)AND(vt0.c0)))AND(COUNT(vt0.c0))), TOTAL(x''), ((MIN(GROUP_CONCAT(COUNT(*))))IS NOT(vt0.c0)), GROUP_CONCAT(vt0.lid), vt0.lid) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (json_insert(((((vt0.c0)AND(vt0.c0)))AND(COUNT(vt0.c0))), TOTAL(x''), ((MIN(GROUP_CONCAT(COUNT(*))))IS NOT(vt0.c0)), GROUP_CONCAT(vt0.lid), vt0.lid))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((json_insert(((((vt0.c0)AND(vt0.c0)))AND(COUNT(vt0.c0))), TOTAL(x''), ((MIN(GROUP_CONCAT(COUNT(*))))IS NOT(vt0.c0)), GROUP_CONCAT(vt0.lid), vt0.lid)) ISNULL);
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))IS NOT((rt0.c3 IN ())))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT ((((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))IS NOT((rt0.c3 IN ())))))) UNION ALL SELECT * FROM v0, rt0 WHERE ((((((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))IS NOT((rt0.c3 IN ())))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((((v0.c0)/(vt0.c0))) BETWEEN ((+ (NULL))) AND (SQLITE_COMPILEOPTION_GET(v0.c0)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((((v0.c0)/(vt0.c0))) BETWEEN ((+ (NULL))) AND (SQLITE_COMPILEOPTION_GET(v0.c0)))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((((v0.c0)/(vt0.c0))) BETWEEN ((+ (NULL))) AND (SQLITE_COMPILEOPTION_GET(v0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL rt0.c2, vt0.c0, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c1, vt0.lid FROM vt0, v0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c1, vt0.lid;
SELECT rt0.c2, vt0.c0, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c1, vt0.lid FROM vt0, v0, rt0 WHERE (LOWER(CASE vt0.c0  WHEN v0.c0 THEN vt0.lid END)) GROUP BY rt0.c2, vt0.c0, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c1, vt0.lid UNION SELECT rt0.c2, vt0.c0, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c1, vt0.lid FROM vt0 NOT INDEXED, v0, rt0 WHERE ((NOT (LOWER(CASE vt0.c0  WHEN v0.c0 THEN vt0.lid END)))) GROUP BY rt0.c2, vt0.c0, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c1, vt0.lid UNION SELECT rt0.c2, vt0.c0, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c1, vt0.lid FROM vt0, v0, rt0 WHERE (((LOWER(CASE vt0.c0  WHEN v0.c0 THEN vt0.lid END)) ISNULL)) GROUP BY rt0.c2, vt0.c0, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c1, vt0.lid;
SELECT ALL rt0.c2, vt0.c0, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c1, vt0.lid FROM vt0, v0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c1, vt0.lid;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((+ (v0.c0)))AND(x'')))AND(GROUP_CONCAT(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((((+ (v0.c0)))AND(x'')))AND(GROUP_CONCAT(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((((+ (v0.c0)))AND(x'')))AND(GROUP_CONCAT(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((+ (v0.c0)))AND(x'')))AND(GROUP_CONCAT(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((((+ (v0.c0)))AND(x'')))AND(GROUP_CONCAT(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((((+ (v0.c0)))AND(x'')))AND(GROUP_CONCAT(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM rt0, v0, vt0;
SELECT ALL * FROM rt0, v0, vt0 WHERE (CAST(v0.c0 COLLATE BINARY AS REAL)) UNION ALL SELECT * FROM rt0, v0, vt0 WHERE ((NOT (CAST(v0.c0 COLLATE BINARY AS REAL)))) UNION ALL SELECT * FROM rt0, v0, vt0 WHERE (((CAST(v0.c0 COLLATE BINARY AS REAL)) ISNULL));
SELECT * FROM rt0, v0, vt0;
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE ('\rX') UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ('\rX'))) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE ((('\rX') ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c0 FROM rt0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 WHERE ((~ (CAST(v0.c0 AS TEXT)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE ((NOT ((~ (CAST(v0.c0 AS TEXT)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((((~ (CAST(v0.c0 AS TEXT)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, vt0.lid, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, v0 GROUP BY vt0.c0, vt0.lid, rt0.c2, v0.c0, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, vt0.lid, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, v0 NOT INDEXED GROUP BY vt0.c0, vt0.lid, rt0.c2, v0.c0, rt0.c0, rt0.c1 HAVING ((vt0.lid)IS NOT(vt0.c0)) COLLATE BINARY UNION ALL SELECT ALL vt0.c0, vt0.lid, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, v0 GROUP BY vt0.c0, vt0.lid, rt0.c2, v0.c0, rt0.c0, rt0.c1 HAVING (NOT (((vt0.lid)IS NOT(vt0.c0)) COLLATE BINARY)) UNION ALL SELECT vt0.c0, vt0.lid, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, v0 GROUP BY vt0.c0, vt0.lid, rt0.c2, v0.c0, rt0.c0, rt0.c1 HAVING ((((vt0.lid)IS NOT(vt0.c0)) COLLATE BINARY) ISNULL);
SELECT ALL vt0.c0, vt0.lid, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, v0 GROUP BY vt0.c0, vt0.lid, rt0.c2, v0.c0, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, vt0.lid, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, v0 NOT INDEXED GROUP BY vt0.c0, vt0.lid, rt0.c2, v0.c0, rt0.c0, rt0.c1 HAVING ((vt0.lid)IS NOT(vt0.c0)) COLLATE BINARY UNION ALL SELECT ALL vt0.c0, vt0.lid, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, v0 GROUP BY vt0.c0, vt0.lid, rt0.c2, v0.c0, rt0.c0, rt0.c1 HAVING (NOT (((vt0.lid)IS NOT(vt0.c0)) COLLATE BINARY)) UNION ALL SELECT vt0.c0, vt0.lid, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, v0 GROUP BY vt0.c0, vt0.lid, rt0.c2, v0.c0, rt0.c0, rt0.c1 HAVING ((((vt0.lid)IS NOT(vt0.c0)) COLLATE BINARY) ISNULL);
SELECT ALL vt0.c0, vt0.lid, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, v0 GROUP BY vt0.c0, vt0.lid, rt0.c2, v0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c4, vt0.c0, rt0.c0, vt0.lid, rt0.c2, rt0.c1, v0.c0, rt0.c3 FROM vt0, rt0, v0;
SELECT ALL rt0.c4, vt0.c0, rt0.c0, vt0.lid, rt0.c2, rt0.c1, v0.c0, rt0.c3 FROM vt0, rt0, v0 WHERE (CASE WHEN x'fac9' THEN ((rt0.c2)<=(rt0.c1)) END) UNION ALL SELECT rt0.c4, vt0.c0, rt0.c0, vt0.lid, rt0.c2, rt0.c1, v0.c0, rt0.c3 FROM vt0, rt0, v0 WHERE ((NOT (CASE WHEN x'fac9' THEN ((rt0.c2)<=(rt0.c1)) END))) UNION ALL SELECT rt0.c4, vt0.c0, rt0.c0, vt0.lid, rt0.c2, rt0.c1, v0.c0, rt0.c3 FROM vt0, rt0, v0 WHERE (((CASE WHEN x'fac9' THEN ((rt0.c2)<=(rt0.c1)) END) ISNULL));
SELECT ALL rt0.c4, vt0.c0, rt0.c0, vt0.lid, rt0.c2, rt0.c1, v0.c0, rt0.c3 FROM vt0, rt0, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (IFNULL((((8.473344E7))<((vt0.c0))), (+ (vt0.lid)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (IFNULL((((8.473344E7))<((vt0.c0))), (+ (vt0.lid)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((IFNULL((((8.473344E7))<((vt0.c0))), (+ (vt0.lid)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.lid, v0.c0 FROM rt0, v0 CROSS JOIN vt0 ON (- ((((v0.c0, '-560720887', rt0.c2, rt0.c3, NULL)) BETWEEN ((vt0.c0, vt0.c0, 0.019740519419708336, rt0.c3, vt0.lid)) AND ((vt0.lid, rt0.c3, vt0.c0, vt0.c0, -1806050707))))) GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.lid, v0.c0;
SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.lid, v0.c0 FROM rt0, v0 CROSS JOIN vt0 ON (- ((((v0.c0, '-560720887', rt0.c2, rt0.c3, NULL)) BETWEEN ((vt0.c0, vt0.c0, 0.019740519419708336, rt0.c3, vt0.lid)) AND ((vt0.lid, rt0.c3, vt0.c0, vt0.c0, -1806050707))))) WHERE (json_patch(CASE WHEN rt0.c2 THEN rt0.c1 END, ((rt0.c0)OR('6q')))) GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.lid, v0.c0 UNION SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.lid, v0.c0 FROM rt0, v0 CROSS JOIN vt0 ON (- ((((v0.c0, '-560720887', rt0.c2, rt0.c3, NULL)) BETWEEN ((vt0.c0, vt0.c0, 0.019740519419708336, rt0.c3, vt0.lid)) AND ((vt0.lid, rt0.c3, vt0.c0, vt0.c0, -1806050707))))) WHERE ((NOT (json_patch(CASE WHEN rt0.c2 THEN rt0.c1 END, ((rt0.c0)OR('6q')))))) GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.lid, v0.c0 UNION SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.lid, v0.c0 FROM rt0, v0 CROSS JOIN vt0 ON (- ((((v0.c0, '-560720887', rt0.c2, rt0.c3, NULL)) BETWEEN ((vt0.c0, vt0.c0, 0.019740519419708336, rt0.c3, vt0.lid)) AND ((vt0.lid, rt0.c3, vt0.c0, vt0.c0, -1806050707))))) WHERE (((json_patch(CASE WHEN rt0.c2 THEN rt0.c1 END, ((rt0.c0)OR('6q')))) ISNULL)) GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.lid, v0.c0;
SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.lid, v0.c0 FROM rt0, v0 CROSS JOIN vt0 ON (- ((((v0.c0, '-560720887', rt0.c2, rt0.c3, NULL)) BETWEEN ((vt0.c0, vt0.c0, 0.019740519419708336, rt0.c3, vt0.lid)) AND ((vt0.lid, rt0.c3, vt0.c0, vt0.c0, -1806050707))))) GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.lid, v0.c0;
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid HAVING SUM(COUNT(*)) UNION ALL SELECT ALL vt0.lid FROM vt0 GROUP BY vt0.lid HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT vt0.lid FROM vt0 GROUP BY vt0.lid HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((~ (CAST(rt0.c1 AS NUMERIC)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((~ (CAST(rt0.c1 AS NUMERIC)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((~ (CAST(rt0.c1 AS NUMERIC)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT vt0.lid FROM vt0;
SELECT DISTINCT vt0.lid FROM vt0 WHERE ((~ (((vt0.lid) IS TRUE)))) UNION SELECT DISTINCT vt0.lid FROM vt0 WHERE ((NOT ((~ (((vt0.lid) IS TRUE)))))) UNION SELECT DISTINCT vt0.lid FROM vt0 WHERE ((((~ (((vt0.lid) IS TRUE)))) ISNULL));
SELECT DISTINCT vt0.lid FROM vt0;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3, v0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3, v0.c0 FROM rt0, v0 WHERE (x'c571') GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3, v0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3, v0.c0 FROM rt0, v0 WHERE ((NOT (x'c571'))) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3, v0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3, v0.c0 FROM rt0, v0 WHERE (((x'c571') ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3, v0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3, v0.c0;
SELECT ALL v0.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM v0, rt0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4;
SELECT v0.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM v0, rt0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4 HAVING MAX(MAX(TOTAL('959063955'))) UNION ALL SELECT ALL v0.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM v0, rt0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4 HAVING (NOT (MAX(MAX(TOTAL('959063955'))))) UNION ALL SELECT v0.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM v0, rt0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4 HAVING ((MAX(MAX(TOTAL('959063955')))) ISNULL);
SELECT ALL MIN(CASE ((rt0.c1) NOT NULL)  WHEN ((rt0.c3) IS FALSE) THEN CASE rt0.c0  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END WHEN CAST(rt0.c3 AS NUMERIC) THEN rt0.c4 WHEN ((NULL) NOT NULL) THEN CASE WHEN rt0.c2 THEN rt0.c1 END WHEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4)) THEN rt0.c4 COLLATE RTRIM WHEN (rt0.c2 IN ()) THEN ((((((((rt0.c0)AND('-1454656409')))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)) ELSE rt0.c4 END) FROM rt0;
SELECT ALL * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (((vt0.lid) BETWEEN ((~ (v0.c0))) AND (((v0.c0)-(vt0.c0))))) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (((vt0.lid) BETWEEN ((~ (v0.c0))) AND (((v0.c0)-(vt0.c0))))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((((vt0.lid) BETWEEN ((~ (v0.c0))) AND (((v0.c0)-(vt0.c0))))) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT rt0.c2, vt0.lid, vt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c1 FROM v0, vt0, rt0;
SELECT DISTINCT rt0.c2, vt0.lid, vt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c1 FROM v0, vt0, rt0 WHERE ((((((rt0.c0))>((x'')))) BETWEEN (LENGTH(rt0.c4)) AND ((rt0.c4 IN (rt0.c4))))) UNION SELECT DISTINCT rt0.c2, vt0.lid, vt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c1 FROM v0, vt0, rt0 WHERE ((NOT ((((((rt0.c0))>((x'')))) BETWEEN (LENGTH(rt0.c4)) AND ((rt0.c4 IN (rt0.c4))))))) UNION SELECT DISTINCT rt0.c2, vt0.lid, vt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c1 FROM v0, vt0, rt0 WHERE ((((((((rt0.c0))>((x'')))) BETWEEN (LENGTH(rt0.c4)) AND ((rt0.c4 IN (rt0.c4))))) ISNULL));
SELECT DISTINCT rt0.c2, vt0.lid, vt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c1 FROM v0, vt0, rt0;
SELECT ALL rt0.c4, vt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c4, vt0.c0;
SELECT rt0.c4, vt0.c0 FROM v0, rt0, vt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c0 THEN '' ELSE rt0.c4 END  WHEN vt0.lid THEN (- (v0.c0)) ELSE v0.c0 END) GROUP BY rt0.c4, vt0.c0 UNION SELECT rt0.c4, vt0.c0 FROM v0, rt0, vt0 WHERE ((NOT (CASE CASE vt0.c0  WHEN vt0.c0 THEN '' ELSE rt0.c4 END  WHEN vt0.lid THEN (- (v0.c0)) ELSE v0.c0 END))) GROUP BY rt0.c4, vt0.c0 UNION SELECT rt0.c4, vt0.c0 FROM v0, rt0, vt0 WHERE (((CASE CASE vt0.c0  WHEN vt0.c0 THEN '' ELSE rt0.c4 END  WHEN vt0.lid THEN (- (v0.c0)) ELSE v0.c0 END) ISNULL)) GROUP BY rt0.c4, vt0.c0;
SELECT ALL rt0.c4, vt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c4, vt0.c0;
SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0;
SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING ((((((((((((((((COUNT(vt0.lid))OR('g1J>')))AND(SUM(GROUP_CONCAT(AVG(0.08400635287704761))))))OR(vt0.c0)))OR(GROUP_CONCAT(COUNT(*)))))OR(((vt0.lid) BETWEEN (vt0.lid) AND (vt0.c0)))))OR((~ (vt0.c0)))))AND(((((((((MAX(COUNT(vt0.lid)))AND(SUM(TOTAL(COUNT(SUM(vt0.c0)))))))AND(MIN(vt0.c0))))AND(MIN(GROUP_CONCAT(MAX(vt0.lid))))))OR(vt0.lid)))))OR(GROUP_CONCAT(SUM(SUM(vt0.c0))))) UNION ALL SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING (NOT (((((((((((((((((COUNT(vt0.lid))OR('g1J>')))AND(SUM(GROUP_CONCAT(AVG(0.08400635287704761))))))OR(vt0.c0)))OR(GROUP_CONCAT(COUNT(*)))))OR(((vt0.lid) BETWEEN (vt0.lid) AND (vt0.c0)))))OR((~ (vt0.c0)))))AND(((((((((MAX(COUNT(vt0.lid)))AND(SUM(TOTAL(COUNT(SUM(vt0.c0)))))))AND(MIN(vt0.c0))))AND(MIN(GROUP_CONCAT(MAX(vt0.lid))))))OR(vt0.lid)))))OR(GROUP_CONCAT(SUM(SUM(vt0.c0))))))) UNION ALL SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING ((((((((((((((((((COUNT(vt0.lid))OR('g1J>')))AND(SUM(GROUP_CONCAT(AVG(0.08400635287704761))))))OR(vt0.c0)))OR(GROUP_CONCAT(COUNT(*)))))OR(((vt0.lid) BETWEEN (vt0.lid) AND (vt0.c0)))))OR((~ (vt0.c0)))))AND(((((((((MAX(COUNT(vt0.lid)))AND(SUM(TOTAL(COUNT(SUM(vt0.c0)))))))AND(MIN(vt0.c0))))AND(MIN(GROUP_CONCAT(MAX(vt0.lid))))))OR(vt0.lid)))))OR(GROUP_CONCAT(SUM(SUM(vt0.c0)))))) ISNULL);
SELECT ALL * FROM rt0, vt0 NATURAL JOIN v0;
SELECT ALL * FROM rt0 NOT INDEXED, vt0 NATURAL JOIN v0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN NULL END)AND((((vt0.lid)) NOT BETWEEN ((rt0.c4)) AND ((vt0.lid))))))OR(vt0.c0))) UNION ALL SELECT * FROM rt0, vt0 NATURAL JOIN v0 WHERE ((NOT (((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN NULL END)AND((((vt0.lid)) NOT BETWEEN ((rt0.c4)) AND ((vt0.lid))))))OR(vt0.c0))))) UNION ALL SELECT * FROM rt0, vt0 NATURAL JOIN v0 WHERE (((((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN NULL END)AND((((vt0.lid)) NOT BETWEEN ((rt0.c4)) AND ((vt0.lid))))))OR(vt0.c0))) ISNULL));
SELECT ALL * FROM rt0, vt0 NATURAL JOIN v0;
SELECT DISTINCT v0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((NOT (LIKELY(v0.c0)))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((NOT ((NOT (LIKELY(v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((((NOT (LIKELY(v0.c0)))) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0, v0;
SELECT v0.c0, rt0.c2, vt0.c0, vt0.lid, rt0.c4, rt0.c0, rt0.c3 FROM v0, rt0, vt0 GROUP BY v0.c0, rt0.c2, vt0.c0, vt0.lid, rt0.c4, rt0.c0, rt0.c3;
SELECT ALL v0.c0, rt0.c2, vt0.c0, vt0.lid, rt0.c4, rt0.c0, rt0.c3 FROM v0, rt0, vt0 WHERE (CASE WHEN CAST(vt0.lid AS TEXT) THEN RTRIM(rt0.c4) WHEN ((rt0.c1)LIKE(rt0.c0)) THEN NULL WHEN (- (vt0.c0)) THEN (rt0.c4 IN ()) END) GROUP BY v0.c0, rt0.c2, vt0.c0, vt0.lid, rt0.c4, rt0.c0, rt0.c3 UNION SELECT v0.c0, rt0.c2, vt0.c0, vt0.lid, rt0.c4, rt0.c0, rt0.c3 FROM v0, rt0, vt0 WHERE ((NOT (CASE WHEN CAST(vt0.lid AS TEXT) THEN RTRIM(rt0.c4) WHEN ((rt0.c1)LIKE(rt0.c0)) THEN NULL WHEN (- (vt0.c0)) THEN (rt0.c4 IN ()) END))) GROUP BY v0.c0, rt0.c2, vt0.c0, vt0.lid, rt0.c4, rt0.c0, rt0.c3 UNION SELECT v0.c0, rt0.c2, vt0.c0, vt0.lid, rt0.c4, rt0.c0, rt0.c3 FROM v0, rt0, vt0 WHERE (((CASE WHEN CAST(vt0.lid AS TEXT) THEN RTRIM(rt0.c4) WHEN ((rt0.c1)LIKE(rt0.c0)) THEN NULL WHEN (- (vt0.c0)) THEN (rt0.c4 IN ()) END) ISNULL)) GROUP BY v0.c0, rt0.c2, vt0.c0, vt0.lid, rt0.c4, rt0.c0, rt0.c3;
SELECT v0.c0, rt0.c2, vt0.c0, vt0.lid, rt0.c4, rt0.c0, rt0.c3 FROM v0, rt0, vt0 GROUP BY v0.c0, rt0.c2, vt0.c0, vt0.lid, rt0.c4, rt0.c0, rt0.c3;
SELECT v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING SUM(((COUNT(*)) NOT BETWEEN (MAX(v0.c0)) AND (rt0.c1))) UNION ALL SELECT ALL v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (SUM(((COUNT(*)) NOT BETWEEN (MAX(v0.c0)) AND (rt0.c1))))) UNION ALL SELECT ALL v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING ((SUM(((COUNT(*)) NOT BETWEEN (MAX(v0.c0)) AND (rt0.c1)))) ISNULL);
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE ((+ (x'afb4'))) UNION ALL SELECT * FROM v0, rt0 NOT INDEXED WHERE ((NOT ((+ (x'afb4'))))) UNION ALL SELECT * FROM v0, rt0 WHERE ((((+ (x'afb4'))) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT rt0.c4, rt0.c0, vt0.lid, rt0.c2, rt0.c3, v0.c0, rt0.c1, vt0.c0 FROM rt0 CROSS JOIN v0 ON ((((rt0.c4) NOT BETWEEN (rt0.c1) AND ('~8謥0E8(w')))|((((vt0.lid))=((rt0.c0))))) FULL OUTER JOIN vt0 ON ((((rt0.c3 IN ())))>=((((vt0.lid) IS FALSE))));
SELECT ALL rt0.c1, vt0.lid FROM v0, rt0 CROSS JOIN vt0 ON CASE WHEN (((('')OR(vt0.c0)))OR(rt0.c1)) THEN ((((((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c4)))AND(v0.c0)))OR('')))OR(rt0.c1)))AND(rt0.c1)) END GROUP BY rt0.c1, vt0.lid;
SELECT rt0.c1, vt0.lid FROM v0, rt0 CROSS JOIN vt0 ON CASE WHEN (((('')OR(vt0.c0)))OR(rt0.c1)) THEN ((((((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c4)))AND(v0.c0)))OR('')))OR(rt0.c1)))AND(rt0.c1)) END WHERE (((((x'da884667')=(rt0.c3)))<<((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((x'')))))) GROUP BY rt0.c1, vt0.lid UNION SELECT ALL rt0.c1, vt0.lid FROM v0, rt0 CROSS JOIN vt0 ON CASE WHEN (((('')OR(vt0.c0)))OR(rt0.c1)) THEN ((((((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c4)))AND(v0.c0)))OR('')))OR(rt0.c1)))AND(rt0.c1)) END WHERE ((NOT (((((x'da884667')=(rt0.c3)))<<((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((x'')))))))) GROUP BY rt0.c1, vt0.lid UNION SELECT rt0.c1, vt0.lid FROM v0, rt0 NOT INDEXED CROSS JOIN vt0 ON CASE WHEN (((('')OR(vt0.c0)))OR(rt0.c1)) THEN ((((((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c4)))AND(v0.c0)))OR('')))OR(rt0.c1)))AND(rt0.c1)) END WHERE (((((((x'da884667')=(rt0.c3)))<<((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((x'')))))) ISNULL)) GROUP BY rt0.c1, vt0.lid;
SELECT ALL rt0.c1, vt0.lid FROM v0, rt0 CROSS JOIN vt0 ON CASE WHEN (((('')OR(vt0.c0)))OR(rt0.c1)) THEN ((((((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c4)))AND(v0.c0)))OR('')))OR(rt0.c1)))AND(rt0.c1)) END GROUP BY rt0.c1, vt0.lid;
SELECT v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (1232365155 IN (CAST(vt0.lid AS NUMERIC))) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (1232365155 IN (CAST(vt0.lid AS NUMERIC))) GROUP BY v0.c0 HAVING GROUP_CONCAT(NULLIF(GROUP_CONCAT(TOTAL(AVG(NULL))), v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (1232365155 IN (CAST(vt0.lid AS NUMERIC))) GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(NULLIF(GROUP_CONCAT(TOTAL(AVG(NULL))), v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (1232365155 IN (CAST(vt0.lid AS NUMERIC))) GROUP BY v0.c0 HAVING ((GROUP_CONCAT(NULLIF(GROUP_CONCAT(TOTAL(AVG(NULL))), v0.c0))) ISNULL);
SELECT * FROM rt0, v0, vt0;
SELECT ALL * FROM rt0, v0, vt0 WHERE (CASE (((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c2)))  WHEN CAST(rt0.c3 AS BLOB) THEN rt0.c4 COLLATE BINARY ELSE rt0.c1 END) UNION ALL SELECT ALL * FROM rt0, v0, vt0 WHERE ((NOT (CASE (((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c2)))  WHEN CAST(rt0.c3 AS BLOB) THEN rt0.c4 COLLATE BINARY ELSE rt0.c1 END))) UNION ALL SELECT ALL * FROM rt0, v0, vt0 WHERE (((CASE (((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c2)))  WHEN CAST(rt0.c3 AS BLOB) THEN rt0.c4 COLLATE BINARY ELSE rt0.c1 END) ISNULL));
SELECT * FROM rt0, v0, vt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE (LOWER(0x7bfc3512)) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT (LOWER(0x7bfc3512)))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE (((LOWER(0x7bfc3512)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0;
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0 WHERE ((UNLIKELY(DISTINCT vt0.lid) IN ())) GROUP BY vt0.lid UNION SELECT ALL vt0.lid FROM vt0 WHERE ((NOT ((UNLIKELY(DISTINCT vt0.lid) IN ())))) GROUP BY vt0.lid UNION SELECT ALL vt0.lid FROM vt0 WHERE ((((UNLIKELY(DISTINCT vt0.lid) IN ())) ISNULL)) GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0 NOT INDEXED, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((AVG(GROUP_CONCAT(SUM(v0.c0))))==(MIN(MIN(v0.c0)))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (((AVG(GROUP_CONCAT(SUM(v0.c0))))=(MIN(MIN(v0.c0)))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((((AVG(GROUP_CONCAT(SUM(v0.c0))))==(MIN(MIN(v0.c0))))) ISNULL);
SELECT ALL rt0.c2, rt0.c4, rt0.c1 FROM v0, rt0;
SELECT ALL rt0.c2, rt0.c4, rt0.c1 FROM v0, rt0 WHERE (json_quote(json_array_length(0.7015267249945769, rt0.c1))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c1 FROM v0, rt0 WHERE ((NOT (json_quote(json_array_length(0.7015267249945769, rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c1 FROM v0, rt0 WHERE (((json_quote(json_array_length(0.7015267249945769, rt0.c1))) ISNULL));
SELECT ALL rt0.c2, rt0.c4, rt0.c1 FROM v0, rt0;
SELECT DISTINCT vt0.lid, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.lid, vt0.c0 FROM vt0 WHERE (CASE (((vt0.c0)) BETWEEN ((vt0.lid)) AND ((vt0.lid)))  WHEN (NOT (vt0.c0)) THEN (- (vt0.c0)) END) UNION SELECT DISTINCT vt0.lid, vt0.c0 FROM vt0 WHERE ((NOT (CASE (((vt0.c0)) BETWEEN ((vt0.lid)) AND ((vt0.lid)))  WHEN (NOT (vt0.c0)) THEN (- (vt0.c0)) END))) UNION SELECT DISTINCT vt0.lid, vt0.c0 FROM vt0 WHERE (((CASE (((vt0.c0)) BETWEEN ((vt0.lid)) AND ((vt0.lid)))  WHEN (NOT (vt0.c0)) THEN (- (vt0.c0)) END) ISNULL));
SELECT DISTINCT vt0.lid, vt0.c0 FROM vt0;
SELECT vt0.lid FROM vt0 RIGHT OUTER JOIN v0 ON ((vt0.lid) BETWEEN ((((vt0.lid)) NOT BETWEEN ((v0.c0)) AND ((vt0.lid)))) AND ((- (vt0.c0)))) GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0 RIGHT OUTER JOIN v0 ON ((vt0.lid) BETWEEN ((((vt0.lid)) NOT BETWEEN ((v0.c0)) AND ((vt0.lid)))) AND ((- (vt0.c0)))) WHERE (NULL) GROUP BY vt0.lid UNION SELECT vt0.lid FROM vt0 RIGHT OUTER JOIN v0 ON ((vt0.lid) BETWEEN ((((vt0.lid)) NOT BETWEEN ((v0.c0)) AND ((vt0.lid)))) AND ((- (vt0.c0)))) WHERE ((NOT (NULL))) GROUP BY vt0.lid UNION SELECT vt0.lid FROM vt0 RIGHT OUTER JOIN v0 ON ((vt0.lid) BETWEEN ((((vt0.lid)) NOT BETWEEN ((v0.c0)) AND ((vt0.lid)))) AND ((- (vt0.c0)))) WHERE (((NULL) ISNULL)) GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0 RIGHT OUTER JOIN v0 ON ((vt0.lid) BETWEEN ((((vt0.lid)) NOT BETWEEN ((v0.c0)) AND ((vt0.lid)))) AND ((- (vt0.c0)))) GROUP BY vt0.lid;
SELECT v0.c0, vt0.lid, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.lid, vt0.c0;
SELECT v0.c0, vt0.lid, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.lid, vt0.c0 HAVING 0Xffffffffa551743d UNION ALL SELECT v0.c0, vt0.lid, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.lid, vt0.c0 HAVING (NOT (0xffffffffa551743d)) UNION ALL SELECT ALL v0.c0, vt0.lid, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.lid, vt0.c0 HAVING ((0Xffffffffa551743d) ISNULL);
SELECT v0.c0, vt0.lid, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.lid, vt0.c0;
SELECT v0.c0, vt0.lid, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.lid, vt0.c0 HAVING 0Xffffffffa551743d UNION ALL SELECT v0.c0, vt0.lid, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.lid, vt0.c0 HAVING (NOT (0xffffffffa551743d)) UNION ALL SELECT ALL v0.c0, vt0.lid, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.lid, vt0.c0 HAVING ((0Xffffffffa551743d) ISNULL);
SELECT v0.c0, vt0.lid, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.lid, vt0.c0;
SELECT * FROM rt0 CROSS JOIN v0 ON CAST(LOWER(NULL) AS NUMERIC);
SELECT * FROM rt0 CROSS JOIN v0 ON CAST(LOWER(NULL) AS NUMERIC) WHERE ((((rt0.c3 IN (rt0.c3)))>=(((((rt0.c3)OR(rt0.c1)))OR(rt0.c1))))) UNION ALL SELECT * FROM rt0 CROSS JOIN v0 ON CAST(LOWER(NULL) AS NUMERIC) WHERE ((NOT ((((rt0.c3 IN (rt0.c3)))>=(((((rt0.c3)OR(rt0.c1)))OR(rt0.c1))))))) UNION ALL SELECT * FROM rt0 CROSS JOIN v0 ON CAST(LOWER(NULL) AS NUMERIC) WHERE ((((((rt0.c3 IN (rt0.c3)))>=(((((rt0.c3)OR(rt0.c1)))OR(rt0.c1))))) ISNULL));
SELECT * FROM rt0 CROSS JOIN v0 ON CAST(LOWER(NULL) AS NUMERIC);
SELECT DISTINCT * FROM v0 NOT INDEXED, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (CAST((- (rt0.c4)) AS NUMERIC)) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (CAST((- (rt0.c4)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((CAST((- (rt0.c4)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM v0 NOT INDEXED, rt0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((((v0.c0)IS(v0.c0)))OR(((vt0.lid)IS NOT('-568571534')))))OR(((((((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (((((((v0.c0)IS(v0.c0)))OR(((vt0.lid)IS NOT('-568571534')))))OR(((((((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0))))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((((((v0.c0)IS(v0.c0)))OR(((vt0.lid)IS NOT('-568571534')))))OR(((((((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0))))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2, v0.c0;
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2, v0.c0 HAVING (((MIN(GROUP_CONCAT(rt0.c2))))=((SUM(COUNT(*))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2, v0.c0 HAVING (NOT ((((MIN(GROUP_CONCAT(rt0.c2))))=((SUM(COUNT(*))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2, v0.c0 HAVING (((((MIN(GROUP_CONCAT(rt0.c2))))=((SUM(COUNT(*)))))) ISNULL);
SELECT rt0.c0, v0.c0, vt0.lid, rt0.c2 FROM vt0, v0, rt0;
SELECT ALL rt0.c0, v0.c0, vt0.lid, rt0.c2 FROM vt0, v0, rt0 WHERE (((rt0.c2)GLOB(rt0.c4)) COLLATE BINARY) UNION ALL SELECT ALL rt0.c0, v0.c0, vt0.lid, rt0.c2 FROM vt0, v0, rt0 WHERE ((NOT (((rt0.c2)GLOB(rt0.c4)) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c0, v0.c0, vt0.lid, rt0.c2 FROM vt0, v0, rt0 WHERE (((((rt0.c2)GLOB(rt0.c4)) COLLATE BINARY) ISNULL));
SELECT rt0.c0, v0.c0, vt0.lid, rt0.c2 FROM vt0, v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(-1002031185)))OR(2.47287642E8))  WHEN ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(-1.7976931348623157E308)) THEN (((NULL))<((-339845701))) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(-1002031185)))OR(2.47287642E8))  WHEN ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(-1.7976931348623157E308)) THEN (((NULL))<((-339845701))) END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(-1002031185)))OR(2.47287642E8))  WHEN ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(-1.7976931348623157E308)) THEN (((NULL))<((-339845701))) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (UNICODE('-899925796')) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (UNICODE('-899925796')))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((UNICODE('-899925796')) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1, rt0.c3, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c1, rt0.c3, v0.c0;
SELECT ALL rt0.c1, rt0.c3, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c1, rt0.c3, v0.c0 HAVING (((TOTAL(AVG(AVG(rt0.c1))))) NOT BETWEEN ((COUNT(*))) AND (((- (AVG(rt0.c2)))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c1, rt0.c3, v0.c0 HAVING (NOT ((((TOTAL(AVG(AVG(rt0.c1))))) NOT BETWEEN ((COUNT(*))) AND (((- (AVG(rt0.c2)))))))) UNION ALL SELECT rt0.c1, rt0.c3, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c1, rt0.c3, v0.c0 HAVING (((((TOTAL(AVG(AVG(rt0.c1))))) NOT BETWEEN ((COUNT(*))) AND (((- (AVG(rt0.c2))))))) ISNULL);
SELECT ALL * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE ((((((NOT (vt0.c0)))OR(((((((((((((vt0.lid)AND(vt0.c0)))OR(982813453)))OR(vt0.c0)))OR(vt0.lid)))AND(vt0.c0)))OR(vt0.lid)))))OR(v0.c0))) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT ((((((NOT (vt0.c0)))OR(((((((((((((vt0.lid)AND(vt0.c0)))OR(982813453)))OR(vt0.c0)))OR(vt0.lid)))AND(vt0.c0)))OR(vt0.lid)))))OR(v0.c0))))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((((((((NOT (vt0.c0)))OR(((((((((((((vt0.lid)AND(vt0.c0)))OR(982813453)))OR(vt0.c0)))OR(vt0.lid)))AND(vt0.c0)))OR(vt0.lid)))))OR(v0.c0))) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (CAST(rt0.c3 AS REAL) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (CAST(rt0.c3 AS REAL) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((CAST(rt0.c3 AS REAL) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((((CASE WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END))!=((UNLIKELY(DISTINCT NULL))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 WHERE ((NOT ((((CASE WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END))!=((UNLIKELY(DISTINCT NULL))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 WHERE ((((((CASE WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END))!=((UNLIKELY(DISTINCT NULL))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c3 HAVING GROUP_CONCAT(MIN(SUM(COUNT(*)))) UNION ALL SELECT ALL rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c3 HAVING (NOT (GROUP_CONCAT(MIN(SUM(COUNT(*)))))) UNION ALL SELECT ALL rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c3 HAVING ((GROUP_CONCAT(MIN(SUM(COUNT(*))))) ISNULL);
SELECT vt0.c0, rt0.c3, vt0.lid, rt0.c1 FROM vt0, v0, rt0;
SELECT vt0.c0, rt0.c3, vt0.lid, rt0.c1 FROM vt0, v0, rt0 WHERE (CAST('ZB' AS BLOB)) UNION ALL SELECT vt0.c0, rt0.c3, vt0.lid, rt0.c1 FROM vt0, v0, rt0 WHERE ((NOT (CAST('ZB' AS BLOB)))) UNION ALL SELECT ALL vt0.c0, rt0.c3, vt0.lid, rt0.c1 FROM vt0, v0, rt0 WHERE (((CAST('ZB' AS BLOB)) ISNULL));
SELECT vt0.c0, rt0.c3, vt0.lid, rt0.c1 FROM vt0, v0, rt0;
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT DISTINCT * FROM vt0, v0, rt0 WHERE ((((rt0.c3) IS FALSE) IN ())) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE ((NOT ((((rt0.c3) IS FALSE) IN ())))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE ((((((rt0.c3) IS FALSE) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT rt0.c2 FROM vt0 INNER JOIN rt0 ON CASE WHEN NULLIF(DISTINCT rt0.c0, v0.c0) THEN rt0.c3 END CROSS JOIN v0 ON ((~ (rt0.c1)) IN ()) GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0 INNER JOIN rt0 ON CASE WHEN NULLIF(DISTINCT rt0.c0, v0.c0) THEN rt0.c3 END CROSS JOIN v0 ON ((~ (rt0.c1)) IN ()) WHERE (CASE ((((vt0.c0)OR(0.17900844767646829)))OR(rt0.c1))  WHEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 END THEN ((rt0.c2) NOTNULL) ELSE CAST(rt0.c3 AS NUMERIC) END) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt0 INNER JOIN rt0 ON CASE WHEN NULLIF(DISTINCT rt0.c0, v0.c0) THEN rt0.c3 END CROSS JOIN v0 ON ((~ (rt0.c1)) IN ()) WHERE ((NOT (CASE ((((vt0.c0)OR(0.17900844767646829)))OR(rt0.c1))  WHEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 END THEN ((rt0.c2) NOTNULL) ELSE CAST(rt0.c3 AS NUMERIC) END))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt0 INNER JOIN rt0 ON CASE WHEN NULLIF(DISTINCT rt0.c0, v0.c0) THEN rt0.c3 END CROSS JOIN v0 ON ((~ (rt0.c1)) IN ()) WHERE (((CASE ((((vt0.c0)OR(0.17900844767646829)))OR(rt0.c1))  WHEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 END THEN ((rt0.c2) NOTNULL) ELSE CAST(rt0.c3 AS NUMERIC) END) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0 INNER JOIN rt0 ON CASE WHEN NULLIF(DISTINCT rt0.c0, v0.c0) THEN rt0.c3 END CROSS JOIN v0 ON ((~ (rt0.c1)) IN ()) GROUP BY rt0.c2;
SELECT rt0.c3, vt0.lid, v0.c0, rt0.c2, rt0.c4 FROM rt0, vt0, v0 GROUP BY rt0.c3, vt0.lid, v0.c0, rt0.c2, rt0.c4;
SELECT rt0.c3, vt0.lid, v0.c0, rt0.c2, rt0.c4 FROM rt0, vt0, v0 GROUP BY rt0.c3, vt0.lid, v0.c0, rt0.c2, rt0.c4 HAVING rt0.c2 UNION ALL SELECT rt0.c3, vt0.lid, v0.c0, rt0.c2, rt0.c4 FROM rt0, vt0, v0 GROUP BY rt0.c3, vt0.lid, v0.c0, rt0.c2, rt0.c4 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c3, vt0.lid, v0.c0, rt0.c2, rt0.c4 FROM rt0, vt0, v0 GROUP BY rt0.c3, vt0.lid, v0.c0, rt0.c2, rt0.c4 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c3, vt0.lid, v0.c0, rt0.c2, rt0.c4 FROM rt0, vt0, v0 GROUP BY rt0.c3, vt0.lid, v0.c0, rt0.c2, rt0.c4;
SELECT rt0.c3, vt0.lid, v0.c0, rt0.c2, rt0.c4 FROM rt0, vt0, v0 GROUP BY rt0.c3, vt0.lid, v0.c0, rt0.c2, rt0.c4 HAVING rt0.c2 UNION ALL SELECT rt0.c3, vt0.lid, v0.c0, rt0.c2, rt0.c4 FROM rt0, vt0, v0 GROUP BY rt0.c3, vt0.lid, v0.c0, rt0.c2, rt0.c4 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c3, vt0.lid, v0.c0, rt0.c2, rt0.c4 FROM rt0, vt0, v0 GROUP BY rt0.c3, vt0.lid, v0.c0, rt0.c2, rt0.c4 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c3, vt0.lid, v0.c0, rt0.c2, rt0.c4 FROM rt0, vt0, v0 GROUP BY rt0.c3, vt0.lid, v0.c0, rt0.c2, rt0.c4;
SELECT ALL vt0.lid, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON CAST(CASE WHEN vt0.c0 THEN '949074001' END AS NUMERIC);
SELECT vt0.lid, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON CAST(CASE WHEN vt0.c0 THEN '949074001' END AS NUMERIC) WHERE (((CASE WHEN vt0.c0 THEN vt0.lid END) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.lid)))) AND (((v0.c0) NOTNULL)))) UNION ALL SELECT ALL vt0.lid, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON CAST(CASE WHEN vt0.c0 THEN '949074001' END AS NUMERIC) WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.lid END) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.lid)))) AND (((v0.c0) NOTNULL)))))) UNION ALL SELECT vt0.lid, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON CAST(CASE WHEN vt0.c0 THEN '949074001' END AS NUMERIC) WHERE (((((CASE WHEN vt0.c0 THEN vt0.lid END) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.lid)))) AND (((v0.c0) NOTNULL)))) ISNULL));
SELECT ALL vt0.lid, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON CAST(CASE WHEN vt0.c0 THEN '949074001' END AS NUMERIC);
SELECT DISTINCT rt0.c4 FROM vt0, rt0;
SELECT DISTINCT rt0.c4 FROM vt0, rt0 WHERE (((((((((((vt0.c0) IS TRUE))AND(((vt0.lid)GLOB(vt0.lid)))))AND(0.5263587901722806)))AND(((((rt0.c0)OR(vt0.c0)))OR(rt0.c3)))))AND((((rt0.c4, vt0.lid, rt0.c1))<((' 蜋[Me', vt0.lid, rt0.c3)))))) UNION SELECT DISTINCT rt0.c4 FROM vt0, rt0 WHERE ((NOT (((((((((((vt0.c0) IS TRUE))AND(((vt0.lid)GLOB(vt0.lid)))))AND(0.5263587901722806)))AND(((((rt0.c0)OR(vt0.c0)))OR(rt0.c3)))))AND((((rt0.c4, vt0.lid, rt0.c1))<((' 蜋[Me', vt0.lid, rt0.c3)))))))) UNION SELECT DISTINCT rt0.c4 FROM vt0, rt0 WHERE (((((((((((((vt0.c0) IS TRUE))AND(((vt0.lid)GLOB(vt0.lid)))))AND(0.5263587901722806)))AND(((((rt0.c0)OR(vt0.c0)))OR(rt0.c3)))))AND((((rt0.c4, vt0.lid, rt0.c1))<((' 蜋[Me', vt0.lid, rt0.c3)))))) ISNULL));
SELECT DISTINCT rt0.c4 FROM vt0, rt0;
SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE ((((CAST(rt0.c4 AS BLOB)))<((NULL)))) GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3 UNION SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT ((((CAST(rt0.c4 AS BLOB)))<((NULL)))))) GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE ((((((CAST(rt0.c4 AS BLOB)))<((NULL)))) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3;
SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3;
SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1, v0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1, v0.c0;
SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1, v0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1, v0.c0 HAVING TOTAL(SUM(rt0.c1) COLLATE NOCASE) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1, v0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1, v0.c0 HAVING (NOT (TOTAL(SUM(rt0.c1) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1, v0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1, v0.c0 HAVING ((TOTAL(SUM(rt0.c1) COLLATE NOCASE)) ISNULL);
SELECT vt0.c0, v0.c0 FROM rt0, vt0, v0;
SELECT ALL vt0.c0, v0.c0 FROM rt0, vt0, v0 WHERE (((0.7389942157614574) NOTNULL)) UNION ALL SELECT vt0.c0, v0.c0 FROM rt0, vt0, v0 WHERE ((NOT (((0.7389942157614574) NOTNULL)))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM rt0, vt0, v0 WHERE (((((0.7389942157614574) NOTNULL)) ISNULL));
SELECT vt0.c0, v0.c0 FROM rt0, vt0, v0;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, rt0.c4 FROM v0, vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, rt0.c4 FROM v0, vt0, rt0 WHERE (NULLIF(DISTINCT ((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)), (((vt0.lid))!=((rt0.c3))))) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, rt0.c4 FROM v0, vt0, rt0 WHERE ((NOT (NULLIF(DISTINCT ((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)), (((vt0.lid))!=((rt0.c3))))))) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, rt0.c4 FROM v0, vt0, rt0 WHERE (((NULLIF(DISTINCT ((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)), (((vt0.lid))<>((rt0.c3))))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, rt0.c4 FROM v0, vt0, rt0;
SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt0.c0, v0.c0, rt0.c3, rt0.c4, vt0.lid FROM rt0, vt0, v0 GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0, v0.c0, rt0.c3, rt0.c4, vt0.lid;
SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c0, v0.c0, rt0.c3, rt0.c4, vt0.lid FROM rt0, vt0, v0 WHERE (LIKELY((((rt0.c3))>((rt0.c3))))) GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0, v0.c0, rt0.c3, rt0.c4, vt0.lid UNION SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt0.c0, v0.c0, rt0.c3, rt0.c4, vt0.lid FROM rt0, vt0, v0 WHERE ((NOT (LIKELY((((rt0.c3))>((rt0.c3))))))) GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0, v0.c0, rt0.c3, rt0.c4, vt0.lid UNION SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c0, v0.c0, rt0.c3, rt0.c4, vt0.lid FROM rt0, vt0, v0 WHERE (((LIKELY((((rt0.c3))>((rt0.c3))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0, v0.c0, rt0.c3, rt0.c4, vt0.lid;
SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt0.c0, v0.c0, rt0.c3, rt0.c4, vt0.lid FROM rt0, vt0, v0 GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0, v0.c0, rt0.c3, rt0.c4, vt0.lid;
SELECT ALL vt0.lid, rt0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c0 FROM rt0, v0 NOT INDEXED, vt0 GROUP BY vt0.lid, rt0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c0;
SELECT vt0.lid, rt0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.lid, rt0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c0 HAVING CAST(TYPEOF(COUNT(*)) AS INTEGER) UNION ALL SELECT vt0.lid, rt0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.lid, rt0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c0 HAVING (NOT (CAST(TYPEOF(COUNT(*)) AS INTEGER))) UNION ALL SELECT vt0.lid, rt0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.lid, rt0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c0 HAVING ((CAST(TYPEOF(COUNT(*)) AS INTEGER)) ISNULL);
SELECT ALL vt0.lid, rt0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c0 FROM rt0, v0 NOT INDEXED, vt0 GROUP BY vt0.lid, rt0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c0;
SELECT vt0.lid, rt0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.lid, rt0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c0 HAVING CAST(TYPEOF(COUNT(*)) AS INTEGER) UNION ALL SELECT vt0.lid, rt0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.lid, rt0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c0 HAVING (NOT (CAST(TYPEOF(COUNT(*)) AS INTEGER))) UNION ALL SELECT vt0.lid, rt0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.lid, rt0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c0 HAVING ((CAST(TYPEOF(COUNT(*)) AS INTEGER)) ISNULL);
SELECT ALL vt0.lid, rt0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c0 FROM rt0, v0 NOT INDEXED, vt0 GROUP BY vt0.lid, rt0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c0;
SELECT * FROM v0, rt0, vt0;
SELECT * FROM v0, rt0, vt0 WHERE (CAST((+ (NULL)) AS TEXT)) UNION ALL SELECT ALL * FROM v0, rt0, vt0 WHERE ((NOT (CAST((+ (NULL)) AS TEXT)))) UNION ALL SELECT ALL * FROM v0, rt0, vt0 WHERE (((CAST((+ (NULL)) AS TEXT)) ISNULL));
SELECT * FROM v0, rt0, vt0;
SELECT DISTINCT rt0.c3, vt0.lid, v0.c0, rt0.c1, rt0.c0 FROM v0, rt0, vt0;
SELECT DISTINCT rt0.c3, vt0.lid, v0.c0, rt0.c1, rt0.c0 FROM v0, rt0, vt0 WHERE ((((((((((rt0.c3 IN ()))OR(CAST(vt0.c0 AS NUMERIC))))OR((v0.c0 IN ()))))AND(((((rt0.c4)OR(vt0.c0)))OR(rt0.c1)))))AND((NOT (rt0.c4))))) UNION SELECT DISTINCT rt0.c3, vt0.lid, v0.c0, rt0.c1, rt0.c0 FROM v0, rt0, vt0 WHERE ((NOT ((((((((((rt0.c3 IN ()))OR(CAST(vt0.c0 AS NUMERIC))))OR((v0.c0 IN ()))))AND(((((rt0.c4)OR(vt0.c0)))OR(rt0.c1)))))AND((NOT (rt0.c4))))))) UNION SELECT DISTINCT rt0.c3, vt0.lid, v0.c0, rt0.c1, rt0.c0 FROM v0, rt0, vt0 WHERE ((((((((((((rt0.c3 IN ()))OR(CAST(vt0.c0 AS NUMERIC))))OR((v0.c0 IN ()))))AND(((((rt0.c4)OR(vt0.c0)))OR(rt0.c1)))))AND((NOT (rt0.c4))))) ISNULL));
SELECT DISTINCT rt0.c3, vt0.lid, v0.c0, rt0.c1, rt0.c0 FROM v0, rt0, vt0;
SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0;
SELECT ALL vt0.lid, vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.lid, vt0.c0 UNION SELECT vt0.lid, vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.lid, vt0.c0 UNION SELECT vt0.lid, vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.lid, vt0.c0;
SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((AVG('')))>((COUNT(*)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((AVG('')))>((COUNT(*)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((AVG('')))>((COUNT(*))))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((AVG('')))>((COUNT(*)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((AVG('')))>((COUNT(*)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((AVG('')))>((COUNT(*))))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c3)AND('-923652054')) COLLATE BINARY) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (((rt0.c3)AND('-923652054')) COLLATE BINARY))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((((rt0.c3)AND('-923652054')) COLLATE BINARY) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT rt0.c3, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, v0, rt0;
SELECT DISTINCT rt0.c3, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, v0, rt0 WHERE ((((((rt0.c2, rt0.c4, 0Xffffffffa7f82ea7)) NOT BETWEEN ((vt0.c0, vt0.lid, vt0.c0)) AND ((0Xffffffff86886d14, vt0.lid, 0.903713081293899))))AND((rt0.c3 IN ())))) UNION SELECT DISTINCT rt0.c3, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, v0, rt0 WHERE ((NOT ((((((rt0.c2, rt0.c4, 0xffffffffa7f82ea7)) NOT BETWEEN ((vt0.c0, vt0.lid, vt0.c0)) AND ((0xffffffff86886d14, vt0.lid, 0.903713081293899))))AND((rt0.c3 IN ())))))) UNION SELECT DISTINCT rt0.c3, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, v0, rt0 WHERE ((((((((rt0.c2, rt0.c4, 0xffffffffa7f82ea7)) NOT BETWEEN ((vt0.c0, vt0.lid, vt0.c0)) AND ((0xffffffff86886d14, vt0.lid, 0.903713081293899))))AND((rt0.c3 IN ())))) ISNULL));
SELECT DISTINCT rt0.c3, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, v0, rt0;
SELECT ALL rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2;
SELECT ALL rt0.c3, rt0.c2 FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END)+(CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN '536727067' WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END))) GROUP BY rt0.c3, rt0.c2 UNION SELECT rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END)+(CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN '536727067' WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END))))) GROUP BY rt0.c3, rt0.c2 UNION SELECT rt0.c3, rt0.c2 FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END)+(CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN '536727067' WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END))) ISNULL)) GROUP BY rt0.c3, rt0.c2;
SELECT ALL rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2;
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.lid, rt0.c3, v0.c0, vt0.c0, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON CAST(rt0.c2 COLLATE NOCASE AS REAL) FULL OUTER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END) BETWEEN (((rt0.c1)LIKE(rt0.c1))) AND ((rt0.c0 IN (rt0.c1)))) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.lid, rt0.c3, v0.c0, vt0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.lid, rt0.c3, v0.c0, vt0.c0, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON CAST(rt0.c2 COLLATE NOCASE AS REAL) FULL OUTER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END) BETWEEN (((rt0.c1)LIKE(rt0.c1))) AND ((rt0.c0 IN (rt0.c1)))) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.lid, rt0.c3, v0.c0, vt0.c0, rt0.c4 HAVING CASE WHEN SUM(GROUP_CONCAT(v0.c0)) THEN SUM(MAX(SUM(rt0.c4))) ELSE CASE WHEN MAX(vt0.lid) THEN rt0.c1 ELSE rt0.c3 END END UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.lid, rt0.c3, v0.c0, vt0.c0, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON CAST(rt0.c2 COLLATE NOCASE AS REAL) FULL OUTER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END) BETWEEN (((rt0.c1)LIKE(rt0.c1))) AND ((rt0.c0 IN (rt0.c1)))) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.lid, rt0.c3, v0.c0, vt0.c0, rt0.c4 HAVING (NOT (CASE WHEN SUM(GROUP_CONCAT(v0.c0)) THEN SUM(MAX(SUM(rt0.c4))) ELSE CASE WHEN MAX(vt0.lid) THEN rt0.c1 ELSE rt0.c3 END END)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt0.lid, rt0.c3, v0.c0, vt0.c0, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON CAST(rt0.c2 COLLATE NOCASE AS REAL) FULL OUTER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END) BETWEEN (((rt0.c1)LIKE(rt0.c1))) AND ((rt0.c0 IN (rt0.c1)))) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.lid, rt0.c3, v0.c0, vt0.c0, rt0.c4 HAVING ((CASE WHEN SUM(GROUP_CONCAT(v0.c0)) THEN SUM(MAX(SUM(rt0.c4))) ELSE CASE WHEN MAX(vt0.lid) THEN rt0.c1 ELSE rt0.c3 END END) ISNULL);
SELECT ALL rt0.c0, rt0.c2, vt0.c0, vt0.lid FROM v0, rt0, vt0;
SELECT ALL rt0.c0, rt0.c2, vt0.c0, vt0.lid FROM v0, rt0, vt0 WHERE (CAST(LIKE(rt0.c4, rt0.c3, '-') AS INTEGER)) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c0, vt0.lid FROM v0, rt0, vt0 WHERE ((NOT (CAST(LIKE(rt0.c4, rt0.c3, '-') AS INTEGER)))) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c0, vt0.lid FROM v0, rt0, vt0 WHERE (((CAST(LIKE(rt0.c4, rt0.c3, '-') AS INTEGER)) ISNULL));
SELECT ALL rt0.c0, rt0.c2, vt0.c0, vt0.lid FROM v0, rt0, vt0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt0.c0, v0.c0 FROM rt0, v0, vt0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt0.c0, v0.c0 FROM rt0, v0, vt0 WHERE ((CAST(rt0.c1 AS NUMERIC) IN ())) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt0.c0, v0.c0 FROM rt0, v0, vt0 WHERE ((NOT ((CAST(rt0.c1 AS NUMERIC) IN ())))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt0.c0, v0.c0 FROM rt0, v0, vt0 WHERE ((((CAST(rt0.c1 AS NUMERIC) IN ())) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt0.c0, v0.c0 FROM rt0, v0, vt0;
SELECT ALL rt0.c1, rt0.c4, rt0.c0, vt0.c0, rt0.c3, rt0.c2, v0.c0, vt0.lid FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, vt0.c0, rt0.c3, rt0.c2, v0.c0, vt0.lid;
SELECT rt0.c1, rt0.c4, rt0.c0, vt0.c0, rt0.c3, rt0.c2, v0.c0, vt0.lid FROM v0, vt0, rt0 WHERE (((((((((((v0.c0)||(rt0.c1)))AND(((rt0.c4)*(rt0.c2)))))AND(((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4)))))AND(CAST(rt0.c0 AS TEXT))))AND(rt0.c3 COLLATE BINARY))) GROUP BY rt0.c1, rt0.c4, rt0.c0, vt0.c0, rt0.c3, rt0.c2, v0.c0, vt0.lid UNION SELECT ALL rt0.c1, rt0.c4, rt0.c0, vt0.c0, rt0.c3, rt0.c2, v0.c0, vt0.lid FROM v0, vt0, rt0 WHERE ((NOT (((((((((((v0.c0)||(rt0.c1)))AND(((rt0.c4)*(rt0.c2)))))AND(((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4)))))AND(CAST(rt0.c0 AS TEXT))))AND(rt0.c3 COLLATE BINARY))))) GROUP BY rt0.c1, rt0.c4, rt0.c0, vt0.c0, rt0.c3, rt0.c2, v0.c0, vt0.lid UNION SELECT ALL rt0.c1, rt0.c4, rt0.c0, vt0.c0, rt0.c3, rt0.c2, v0.c0, vt0.lid FROM v0, vt0, rt0 WHERE (((((((((((((v0.c0)||(rt0.c1)))AND(((rt0.c4)*(rt0.c2)))))AND(((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4)))))AND(CAST(rt0.c0 AS TEXT))))AND(rt0.c3 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c0, vt0.c0, rt0.c3, rt0.c2, v0.c0, vt0.lid;
SELECT ALL rt0.c1, rt0.c4, rt0.c0, vt0.c0, rt0.c3, rt0.c2, v0.c0, vt0.lid FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, vt0.c0, rt0.c3, rt0.c2, v0.c0, vt0.lid;
SELECT ALL v0.c0, rt0.c4, rt0.c0, vt0.lid, rt0.c1, rt0.c2, rt0.c3, vt0.c0 FROM vt0, v0, rt0 GROUP BY v0.c0, rt0.c4, rt0.c0, vt0.lid, rt0.c1, rt0.c2, rt0.c3, vt0.c0;
SELECT ALL v0.c0, rt0.c4, rt0.c0, vt0.lid, rt0.c1, rt0.c2, rt0.c3, vt0.c0 FROM vt0, v0, rt0 GROUP BY v0.c0, rt0.c4, rt0.c0, vt0.lid, rt0.c1, rt0.c2, rt0.c3, vt0.c0 HAVING ((COUNT(*))||(((rt0.c3) NOT BETWEEN (SUM(GROUP_CONCAT(v0.c0))) AND (COUNT(*))))) UNION ALL SELECT ALL v0.c0, rt0.c4, rt0.c0, vt0.lid, rt0.c1, rt0.c2, rt0.c3, vt0.c0 FROM vt0, v0, rt0 GROUP BY v0.c0, rt0.c4, rt0.c0, vt0.lid, rt0.c1, rt0.c2, rt0.c3, vt0.c0 HAVING (NOT (((COUNT(*))||(((rt0.c3) NOT BETWEEN (SUM(GROUP_CONCAT(v0.c0))) AND (COUNT(*))))))) UNION ALL SELECT v0.c0, rt0.c4, rt0.c0, vt0.lid, rt0.c1, rt0.c2, rt0.c3, vt0.c0 FROM vt0, v0, rt0 NOT INDEXED GROUP BY v0.c0, rt0.c4, rt0.c0, vt0.lid, rt0.c1, rt0.c2, rt0.c3, vt0.c0 HAVING ((((COUNT(*))||(((rt0.c3) NOT BETWEEN (SUM(GROUP_CONCAT(v0.c0))) AND (COUNT(*)))))) ISNULL);
SELECT v0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 CROSS JOIN v0 ON ((0.4812222437129756) IS FALSE);
SELECT v0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 CROSS JOIN v0 ON ((0.4812222437129756) IS FALSE) WHERE (CAST(((rt0.c3) NOT NULL) AS REAL)) UNION ALL SELECT v0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 CROSS JOIN v0 ON ((0.4812222437129756) IS FALSE) WHERE ((NOT (CAST(((rt0.c3) NOT NULL) AS REAL)))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 CROSS JOIN v0 ON ((0.4812222437129756) IS FALSE) WHERE (((CAST(((rt0.c3) NOT NULL) AS REAL)) ISNULL));
SELECT v0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 CROSS JOIN v0 ON ((0.4812222437129756) IS FALSE);
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c0, vt0.c0 FROM v0, vt0, rt0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c0, vt0.c0 FROM v0, vt0, rt0 WHERE (((((rt0.c4)>(vt0.lid))) IS FALSE)) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c0, vt0.c0 FROM v0, vt0, rt0 WHERE ((NOT (((((rt0.c4)>(vt0.lid))) IS FALSE)))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c0, vt0.c0 FROM v0, vt0, rt0 WHERE (((((((rt0.c4)>(vt0.lid))) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c0, vt0.c0 FROM v0, vt0, rt0;
SELECT ALL rt0.c1, vt0.lid, v0.c0, vt0.c0, rt0.c3, rt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c1, vt0.lid, v0.c0, vt0.c0, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, vt0.lid, v0.c0, vt0.c0, rt0.c3, rt0.c0 FROM vt0, rt0, v0 WHERE ((((((((rt0.c3))>((rt0.c4))))AND((rt0.c0 IN (rt0.c4)))))AND('160184398'))) GROUP BY rt0.c1, vt0.lid, v0.c0, vt0.c0, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c1, vt0.lid, v0.c0, vt0.c0, rt0.c3, rt0.c0 FROM vt0, rt0, v0 WHERE ((NOT ((((((((rt0.c3))>((rt0.c4))))AND((rt0.c0 IN (rt0.c4)))))AND('160184398'))))) GROUP BY rt0.c1, vt0.lid, v0.c0, vt0.c0, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c1, vt0.lid, v0.c0, vt0.c0, rt0.c3, rt0.c0 FROM vt0, rt0, v0 WHERE ((((((((((rt0.c3))>((rt0.c4))))AND((rt0.c0 IN (rt0.c4)))))AND('160184398'))) ISNULL)) GROUP BY rt0.c1, vt0.lid, v0.c0, vt0.c0, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, vt0.lid, v0.c0, vt0.c0, rt0.c3, rt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c1, vt0.lid, v0.c0, vt0.c0, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c0, rt0.c3, vt0.lid, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON ((((((((((((NULL)AND(v0.c0)))OR(rt0.c3)))AND(rt0.c3)))OR(NULL)))OR(((vt0.c0) IS TRUE))))OR(vt0.lid)) INNER JOIN vt0 ON ((((rt0.c3)OR(rt0.c1)))OR(v0.c0)) COLLATE NOCASE GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c0, rt0.c3, vt0.lid, v0.c0;
SELECT ALL vt0.lid, vt0.c0 FROM vt0;
SELECT vt0.lid, vt0.c0 FROM vt0 WHERE ((((~ (vt0.lid))) IS TRUE)) UNION ALL SELECT vt0.lid, vt0.c0 FROM vt0 WHERE ((NOT ((((~ (vt0.lid))) IS TRUE)))) UNION ALL SELECT vt0.lid, vt0.c0 FROM vt0 WHERE ((((((~ (vt0.lid))) IS TRUE)) ISNULL));
SELECT ALL vt0.lid, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((((NULL) NOTNULL)))<=((((v0.c0)>>(v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((((NULL) NOTNULL)))<=((((v0.c0)>>(v0.c0)))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((((NULL) NOTNULL)))<=((((v0.c0)>>(v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.lid, rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM vt0, rt0 GROUP BY vt0.lid, rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2;
SELECT vt0.lid, rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM vt0, rt0 WHERE (((NULL) IS FALSE)) GROUP BY vt0.lid, rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2 UNION SELECT vt0.lid, rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((NULL) IS FALSE)))) GROUP BY vt0.lid, rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2 UNION SELECT ALL vt0.lid, rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM vt0, rt0 WHERE (((((NULL) IS FALSE)) ISNULL)) GROUP BY vt0.lid, rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2;
SELECT vt0.lid, rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM vt0, rt0 GROUP BY vt0.lid, rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2;
SELECT vt0.c0, v0.c0, vt0.lid FROM vt0, v0 GROUP BY vt0.c0, v0.c0, vt0.lid;
SELECT ALL vt0.c0, v0.c0, vt0.lid FROM vt0, v0 GROUP BY vt0.c0, v0.c0, vt0.lid HAVING CAST(CAST(vt0.c0 AS REAL) AS BLOB) UNION ALL SELECT vt0.c0, v0.c0, vt0.lid FROM vt0, v0 GROUP BY vt0.c0, v0.c0, vt0.lid HAVING (NOT (CAST(CAST(vt0.c0 AS REAL) AS BLOB))) UNION ALL SELECT vt0.c0, v0.c0, vt0.lid FROM vt0, v0 GROUP BY vt0.c0, v0.c0, vt0.lid HAVING ((CAST(CAST(vt0.c0 AS REAL) AS BLOB)) ISNULL);
SELECT vt0.c0, v0.c0, vt0.lid FROM vt0, v0 GROUP BY vt0.c0, v0.c0, vt0.lid;
SELECT ALL vt0.c0, v0.c0, vt0.lid FROM vt0, v0 GROUP BY vt0.c0, v0.c0, vt0.lid HAVING CAST(CAST(vt0.c0 AS REAL) AS BLOB) UNION ALL SELECT vt0.c0, v0.c0, vt0.lid FROM vt0, v0 GROUP BY vt0.c0, v0.c0, vt0.lid HAVING (NOT (CAST(CAST(vt0.c0 AS REAL) AS BLOB))) UNION ALL SELECT vt0.c0, v0.c0, vt0.lid FROM vt0, v0 GROUP BY vt0.c0, v0.c0, vt0.lid HAVING ((CAST(CAST(vt0.c0 AS REAL) AS BLOB)) ISNULL);
SELECT vt0.c0, v0.c0, vt0.lid FROM vt0, v0 GROUP BY vt0.c0, v0.c0, vt0.lid;
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (((vt0.c0)/(vt0.lid)) COLLATE RTRIM) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (((vt0.c0)/(vt0.lid)) COLLATE RTRIM))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((((vt0.c0)/(vt0.lid)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.lid END)-(((((((((0x2302654b)OR(vt0.lid)))AND(vt0.c0)))OR(vt0.lid)))AND(rt0.c3))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((CASE WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.lid END)-(((((((((0x2302654b)OR(vt0.lid)))AND(vt0.c0)))OR(vt0.lid)))AND(rt0.c3))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((CASE WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.lid END)-(((((((((0x2302654b)OR(vt0.lid)))AND(vt0.c0)))OR(vt0.lid)))AND(rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT vt0.c0 FROM vt0 CROSS JOIN v0 ON CAST(CAST(vt0.c0 AS TEXT) AS REAL) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN v0 ON CAST(CAST(vt0.c0 AS TEXT) AS REAL) WHERE ((+ (vt0.lid COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 CROSS JOIN v0 ON CAST(CAST(vt0.c0 AS TEXT) AS REAL) WHERE ((NOT ((+ (vt0.lid COLLATE BINARY))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 CROSS JOIN v0 ON CAST(CAST(vt0.c0 AS TEXT) AS REAL) WHERE ((((+ (vt0.lid COLLATE BINARY))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 CROSS JOIN v0 ON CAST(CAST(vt0.c0 AS TEXT) AS REAL) GROUP BY vt0.c0;
SELECT ALL rt0.c4, rt0.c1, rt0.c3 FROM vt0 LEFT OUTER JOIN rt0 ON (+ (((rt0.c0) NOTNULL))) RIGHT OUTER JOIN v0 ON vt0.c0 GROUP BY rt0.c4, rt0.c1, rt0.c3;
SELECT rt0.c4, rt0.c1, rt0.c3 FROM vt0 LEFT OUTER JOIN rt0 ON (+ (((rt0.c0) NOTNULL))) RIGHT OUTER JOIN v0 ON vt0.c0 GROUP BY rt0.c4, rt0.c1, rt0.c3 HAVING TOTAL(MIN(AVG(vt0.c0))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c3 FROM vt0 LEFT OUTER JOIN rt0 ON (+ (((rt0.c0) NOTNULL))) RIGHT OUTER JOIN v0 ON vt0.c0 GROUP BY rt0.c4, rt0.c1, rt0.c3 HAVING (NOT (TOTAL(MIN(AVG(vt0.c0))))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c3 FROM vt0 LEFT OUTER JOIN rt0 ON (+ (((rt0.c0) NOTNULL))) RIGHT OUTER JOIN v0 ON vt0.c0 GROUP BY rt0.c4, rt0.c1, rt0.c3 HAVING ((TOTAL(MIN(AVG(vt0.c0)))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((((CAST(v0.c0 AS BLOB))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0) BETWEEN (v0.c0) AND (0.9607765569258424))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((CAST(v0.c0 AS BLOB))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0) BETWEEN (v0.c0) AND (0.9607765569258424))))))) UNION ALL SELECT * FROM v0 WHERE (((((((CAST(v0.c0 AS BLOB))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0) BETWEEN (v0.c0) AND (0.9607765569258424))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((((vt0.lid)) BETWEEN ((0.5341947789326398)) AND ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((((vt0.lid)) BETWEEN ((0.5341947789326398)) AND ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END)))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((((vt0.lid)) BETWEEN ((0.5341947789326398)) AND ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c1;
SELECT ALL rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE (((rt0.c4) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c1 UNION SELECT rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c4) ISNULL)))) GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c1 UNION SELECT rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE (((((rt0.c4) ISNULL)) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c1;
SELECT ALL rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c1;
SELECT ALL rt0.c0, rt0.c1, vt0.lid, rt0.c4, rt0.c3, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.lid, rt0.c4, rt0.c3, vt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, vt0.lid, rt0.c4, rt0.c3, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.lid, rt0.c4, rt0.c3, vt0.c0, rt0.c2 HAVING x'abdb' UNION ALL SELECT rt0.c0, rt0.c1, vt0.lid, rt0.c4, rt0.c3, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.lid, rt0.c4, rt0.c3, vt0.c0, rt0.c2 HAVING (NOT (x'abdb')) UNION ALL SELECT rt0.c0, rt0.c1, vt0.lid, rt0.c4, rt0.c3, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.lid, rt0.c4, rt0.c3, vt0.c0, rt0.c2 HAVING ((x'abdb') ISNULL);
SELECT ALL rt0.c0, rt0.c1, vt0.lid, rt0.c4, rt0.c3, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.lid, rt0.c4, rt0.c3, vt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, vt0.lid, rt0.c4, rt0.c3, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.lid, rt0.c4, rt0.c3, vt0.c0, rt0.c2 HAVING x'abdb' UNION ALL SELECT rt0.c0, rt0.c1, vt0.lid, rt0.c4, rt0.c3, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.lid, rt0.c4, rt0.c3, vt0.c0, rt0.c2 HAVING (NOT (x'abdb')) UNION ALL SELECT rt0.c0, rt0.c1, vt0.lid, rt0.c4, rt0.c3, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.lid, rt0.c4, rt0.c3, vt0.c0, rt0.c2 HAVING ((x'abdb') ISNULL);
SELECT ALL rt0.c0, rt0.c1, vt0.lid, rt0.c4, rt0.c3, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.lid, rt0.c4, rt0.c3, vt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM v0, rt0;
SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM v0, rt0 WHERE (CAST(((rt0.c0)>(rt0.c3)) AS BLOB)) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM v0, rt0 WHERE ((NOT (CAST(((rt0.c0)>(rt0.c3)) AS BLOB)))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM v0, rt0 WHERE (((CAST(((rt0.c0)>(rt0.c3)) AS BLOB)) ISNULL));
SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM v0, rt0;
SELECT DISTINCT vt0.lid FROM vt0;
SELECT DISTINCT vt0.lid FROM vt0 WHERE (((((((vt0.c0)OR(vt0.lid)))OR(vt0.lid)))>=(vt0.lid))) UNION SELECT DISTINCT vt0.lid FROM vt0 WHERE ((NOT (((((((vt0.c0)OR(vt0.lid)))OR(vt0.lid)))>=(vt0.lid))))) UNION SELECT DISTINCT vt0.lid FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.lid)))OR(vt0.lid)))>=(vt0.lid))) ISNULL));
SELECT DISTINCT vt0.lid FROM vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (RTRIM(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (RTRIM(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((RTRIM(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING rt0.c4 UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (rt0.c4)) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((rt0.c4) ISNULL);
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING rt0.c4 UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (rt0.c4)) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((rt0.c4) ISNULL);
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0;
SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 WHERE ((((('701147504')||(rt0.c4)))-((('-639045142')GLOB(rt0.c0))))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT ((((('701147504')||(rt0.c4)))-((('-639045142')GLOB(rt0.c0))))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 WHERE ((((((('701147504')||(rt0.c4)))-((('-639045142')GLOB(rt0.c0))))) ISNULL));
SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c1, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CAST(((rt0.c1)+(rt0.c0)) AS REAL) FULL OUTER JOIN rt0 ON -1.430865491E9;
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3;
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 END)) AND ((rt0.c3 COLLATE RTRIM)))) GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3 UNION SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT ((((rt0.c2)) BETWEEN ((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 END)) AND ((rt0.c3 COLLATE RTRIM)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3 UNION SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 END)) AND ((rt0.c3 COLLATE RTRIM)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3;
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG((v0.c0 IN ())) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG((v0.c0 IN ())))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG((v0.c0 IN ()))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG((v0.c0 IN ())) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG((v0.c0 IN ())))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG((v0.c0 IN ()))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL SUM((((~ (rt0.c2)))>(TIME('t䃴6', vt0.lid, rt0.c0, v0.c0, vt0.lid, rt0.c2, v0.c0)))) FROM rt0, v0, vt0;
SELECT * FROM rt0, vt0, v0;
SELECT * FROM rt0, vt0, v0 WHERE (((((((((-1898751247)AND((rt0.c1 IN ()))))OR(rt0.c0)))OR(((((rt0.c0)AND(rt0.c4)))AND('185358519')))))AND(json_extract(rt0.c4, rt0.c3)))) UNION ALL SELECT ALL * FROM rt0, vt0, v0 WHERE ((NOT (((((((((-1898751247)AND((rt0.c1 IN ()))))OR(rt0.c0)))OR(((((rt0.c0)AND(rt0.c4)))AND('185358519')))))AND(json_extract(rt0.c4, rt0.c3)))))) UNION ALL SELECT ALL * FROM rt0, vt0, v0 WHERE (((((((((((-1898751247)AND((rt0.c1 IN ()))))OR(rt0.c0)))OR(((((rt0.c0)AND(rt0.c4)))AND('185358519')))))AND(json_extract(rt0.c4, rt0.c3)))) ISNULL));
SELECT * FROM rt0, vt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (x'd69e') UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (x'd69e'))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((x'd69e') ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((+ (2.74605645E8))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((+ (2.74605645E8))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((+ (2.74605645E8))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)/(vt0.lid)))>(((vt0.lid) BETWEEN (vt0.lid) AND (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)/(vt0.lid)))>(((vt0.lid) BETWEEN (vt0.lid) AND (vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)/(vt0.lid)))>(((vt0.lid) BETWEEN (vt0.lid) AND (vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (LIKELY(108459890) COLLATE NOCASE) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (LIKELY(108459890) COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((LIKELY(108459890) COLLATE NOCASE) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (COALESCE(rt0.c1, rt0.c3, rt0.c0, rt0.c0) COLLATE RTRIM) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (COALESCE(rt0.c1, rt0.c3, rt0.c0, rt0.c0) COLLATE RTRIM))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((COALESCE(rt0.c1, rt0.c3, rt0.c0, rt0.c0) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL vt0.c0, vt0.lid, rt0.c1, rt0.c3, rt0.c4 FROM rt0, vt0 GROUP BY vt0.c0, vt0.lid, rt0.c1, rt0.c3, rt0.c4;
SELECT vt0.c0, vt0.lid, rt0.c1, rt0.c3, rt0.c4 FROM rt0, vt0 GROUP BY vt0.c0, vt0.lid, rt0.c1, rt0.c3, rt0.c4 HAVING (((vt0.lid IN ()))>=(TOTAL(vt0.lid))) UNION ALL SELECT ALL vt0.c0, vt0.lid, rt0.c1, rt0.c3, rt0.c4 FROM rt0, vt0 GROUP BY vt0.c0, vt0.lid, rt0.c1, rt0.c3, rt0.c4 HAVING (NOT ((((vt0.lid IN ()))>=(TOTAL(vt0.lid))))) UNION ALL SELECT vt0.c0, vt0.lid, rt0.c1, rt0.c3, rt0.c4 FROM rt0, vt0 GROUP BY vt0.c0, vt0.lid, rt0.c1, rt0.c3, rt0.c4 HAVING (((((vt0.lid IN ()))>=(TOTAL(vt0.lid)))) ISNULL);
SELECT ALL vt0.c0, vt0.lid, rt0.c1, rt0.c3, rt0.c4 FROM rt0, vt0 GROUP BY vt0.c0, vt0.lid, rt0.c1, rt0.c3, rt0.c4;
SELECT vt0.c0, vt0.lid, rt0.c1, rt0.c3, rt0.c4 FROM rt0, vt0 GROUP BY vt0.c0, vt0.lid, rt0.c1, rt0.c3, rt0.c4 HAVING (((vt0.lid IN ()))>=(TOTAL(vt0.lid))) UNION ALL SELECT ALL vt0.c0, vt0.lid, rt0.c1, rt0.c3, rt0.c4 FROM rt0, vt0 GROUP BY vt0.c0, vt0.lid, rt0.c1, rt0.c3, rt0.c4 HAVING (NOT ((((vt0.lid IN ()))>=(TOTAL(vt0.lid))))) UNION ALL SELECT vt0.c0, vt0.lid, rt0.c1, rt0.c3, rt0.c4 FROM rt0, vt0 GROUP BY vt0.c0, vt0.lid, rt0.c1, rt0.c3, rt0.c4 HAVING (((((vt0.lid IN ()))>=(TOTAL(vt0.lid)))) ISNULL);
SELECT ALL vt0.c0, vt0.lid, rt0.c1, rt0.c3, rt0.c4 FROM rt0, vt0 GROUP BY vt0.c0, vt0.lid, rt0.c1, rt0.c3, rt0.c4;
SELECT ALL TOTAL(CAST(((((vt0.lid)AND(rt0.c2)))OR(rt0.c3)) AS TEXT)) FROM v0, rt0, vt0 ORDER BY (- (((((vt0.c0)OR(rt0.c4)))OR(rt0.c2)))) ASC;
SELECT ALL * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (((COALESCE(DISTINCT vt0.lid, 0.6260050817255777, v0.c0, vt0.c0))>>((((vt0.c0, '1952609516', vt0.c0))<((vt0.lid, vt0.c0, vt0.lid)))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT (((COALESCE(DISTINCT vt0.lid, 0.6260050817255777, v0.c0, vt0.c0))>>((((vt0.c0, '1952609516', vt0.c0))<((vt0.lid, vt0.c0, vt0.lid)))))))) UNION ALL SELECT * FROM v0, vt0 WHERE (((((COALESCE(DISTINCT vt0.lid, 0.6260050817255777, v0.c0, vt0.c0))>>((((vt0.c0, '1952609516', vt0.c0))<((vt0.lid, vt0.c0, vt0.lid)))))) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0)>(rt0.c2)))OR((rt0.c0 IN ()))))OR(rt0.c4))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((rt0.c0)>(rt0.c2)))OR((rt0.c0 IN ()))))OR(rt0.c4))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c0)>(rt0.c2)))OR((rt0.c0 IN ()))))OR(rt0.c4))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0)>=(v0.c0)))-(((v0.c0)<=(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)>=(v0.c0)))-(((v0.c0)<=(v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)>=(v0.c0)))-(((v0.c0)<=(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0, rt0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c2 FROM v0, rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c2 FROM v0, rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c2 HAVING ((CASE AVG(GROUP_CONCAT(rt0.c1))  WHEN COUNT(*) THEN MIN(rt0.c0) WHEN vt0.c0 THEN MIN(NULL) WHEN NULL THEN v0.c0 ELSE AVG(MIN(v0.c0)) END)LIKE(((AVG(vt0.lid))LIKE(rt0.c1)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c2 FROM v0, rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c2 HAVING (NOT (((CASE AVG(GROUP_CONCAT(rt0.c1))  WHEN COUNT(*) THEN MIN(rt0.c0) WHEN vt0.c0 THEN MIN(NULL) WHEN NULL THEN v0.c0 ELSE AVG(MIN(v0.c0)) END)LIKE(((AVG(vt0.lid))LIKE(rt0.c1)))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c2 FROM v0, rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c2 HAVING ((((CASE AVG(GROUP_CONCAT(rt0.c1))  WHEN COUNT(*) THEN MIN(rt0.c0) WHEN vt0.c0 THEN MIN(NULL) WHEN NULL THEN v0.c0 ELSE AVG(MIN(v0.c0)) END)LIKE(((AVG(vt0.lid))LIKE(rt0.c1))))) ISNULL);
SELECT ALL rt0.c1, vt0.c0, rt0.c4, rt0.c2, v0.c0, rt0.c3, rt0.c0 FROM rt0, vt0 FULL OUTER JOIN v0 ON (((rt0.c4)AND(rt0.c2)) IN ());
SELECT ALL rt0.c1, vt0.c0, rt0.c4, rt0.c2, v0.c0, rt0.c3, rt0.c0 FROM rt0, vt0 FULL OUTER JOIN v0 ON (((rt0.c4)AND(rt0.c2)) IN ()) WHERE ((((+ (v0.c0)))<<(rt0.c4))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c4, rt0.c2, v0.c0, rt0.c3, rt0.c0 FROM rt0, vt0 FULL OUTER JOIN v0 ON (((rt0.c4)AND(rt0.c2)) IN ()) WHERE ((NOT ((((+ (v0.c0)))<<(rt0.c4))))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c4, rt0.c2, v0.c0, rt0.c3, rt0.c0 FROM rt0, vt0 FULL OUTER JOIN v0 ON (((rt0.c4)AND(rt0.c2)) IN ()) WHERE ((((((+ (v0.c0)))<<(rt0.c4))) ISNULL));
SELECT ALL rt0.c1, vt0.c0, rt0.c4, rt0.c2, v0.c0, rt0.c3, rt0.c0 FROM rt0, vt0 FULL OUTER JOIN v0 ON (((rt0.c4)AND(rt0.c2)) IN ());
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (x'e2b5b6b8')) AS INTEGER)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (x'e2b5b6b8')) AS INTEGER)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (x'e2b5b6b8')) AS INTEGER)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c0, x'', rt0.c4)) BETWEEN ((((rt0.c3)LIKE(rt0.c3)), ((((rt0.c4)AND(rt0.c4)))OR(rt0.c4)), rt0.c3 COLLATE NOCASE)) AND ((CAST(rt0.c2 AS REAL), ((rt0.c2) ISNULL), ((rt0.c0)<(rt0.c1)))))) GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c0, x'', rt0.c4)) BETWEEN ((((rt0.c3)LIKE(rt0.c3)), ((((rt0.c4)AND(rt0.c4)))OR(rt0.c4)), rt0.c3 COLLATE NOCASE)) AND ((CAST(rt0.c2 AS REAL), ((rt0.c2) ISNULL), ((rt0.c0)<(rt0.c1)))))))) GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c0, x'', rt0.c4)) BETWEEN ((((rt0.c3)LIKE(rt0.c3)), ((((rt0.c4)AND(rt0.c4)))OR(rt0.c4)), rt0.c3 COLLATE NOCASE)) AND ((CAST(rt0.c2 AS REAL), ((rt0.c2) ISNULL), ((rt0.c0)<(rt0.c1)))))) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c2;
SELECT rt0.c2, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4;
SELECT ALL rt0.c2, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4 HAVING TOTAL(rt0.c2) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4 HAVING (NOT (TOTAL(rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4 HAVING ((TOTAL(rt0.c2)) ISNULL);
SELECT rt0.c2, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4;
SELECT ALL rt0.c2, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4 HAVING TOTAL(rt0.c2) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4 HAVING (NOT (TOTAL(rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4 HAVING ((TOTAL(rt0.c2)) ISNULL);
SELECT rt0.c2, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (NULL) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM rt0 NOT INDEXED WHERE (((NULL) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE ('1338461547' COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT ('1338461547' COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((('1338461547' COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL vt0.lid, vt0.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c4, v0.c0 FROM v0 FULL OUTER JOIN vt0 ON rt0.c4 RIGHT OUTER JOIN rt0 ON rt0.c0 GROUP BY vt0.lid, vt0.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c4, v0.c0;
SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c2;
SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c2;
SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c2;
SELECT ALL vt0.lid, vt0.c0, v0.c0 FROM v0, vt0;
SELECT ALL vt0.lid, vt0.c0, v0.c0 FROM v0, vt0 WHERE ((~ (((v0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c0))))) UNION ALL SELECT ALL vt0.lid, vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT ((~ (((v0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c0))))))) UNION ALL SELECT vt0.lid, vt0.c0, v0.c0 FROM v0, vt0 WHERE ((((~ (((v0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c0))))) ISNULL));
SELECT ALL vt0.lid, vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0, v0 WHERE (LOWER(rt0.c1 COLLATE RTRIM)) UNION SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0, v0 WHERE ((NOT (LOWER(rt0.c1 COLLATE RTRIM)))) UNION SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0, v0 WHERE (((LOWER(rt0.c1 COLLATE RTRIM)) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0, v0;
SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0;
SELECT ALL vt0.lid, vt0.c0 FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0))) BETWEEN (CAST(vt0.lid AS INTEGER)) AND (((vt0.c0) NOT NULL)))) GROUP BY vt0.lid, vt0.c0 UNION SELECT vt0.lid, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)<<(vt0.c0))) BETWEEN (CAST(vt0.lid AS INTEGER)) AND (((vt0.c0) NOT NULL)))))) GROUP BY vt0.lid, vt0.c0 UNION SELECT ALL vt0.lid, vt0.c0 FROM vt0 WHERE (((((((vt0.c0)<<(vt0.c0))) BETWEEN (CAST(vt0.lid AS INTEGER)) AND (((vt0.c0) NOT NULL)))) ISNULL)) GROUP BY vt0.lid, vt0.c0;
SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(SUM(vt0.c0) AS BLOB) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(SUM(vt0.c0) AS BLOB))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(SUM(vt0.c0) AS BLOB)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(SUM(vt0.c0) AS BLOB) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(SUM(vt0.c0) AS BLOB))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(SUM(vt0.c0) AS BLOB)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (('6&ㆭlfcL' COLLATE RTRIM IN (((((((((vt0.lid)OR(vt0.lid)))AND(vt0.lid)))OR(vt0.lid)))OR(vt0.lid))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (('6&ㆭlfcL' COLLATE RTRIM IN (((((((((vt0.lid)OR(vt0.lid)))AND(vt0.lid)))OR(vt0.lid)))OR(vt0.lid))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((('6&ㆭlfcL' COLLATE RTRIM IN (((((((((vt0.lid)OR(vt0.lid)))AND(vt0.lid)))OR(vt0.lid)))OR(vt0.lid))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, vt0.lid FROM v0, vt0 FULL OUTER JOIN rt0 ON ((((((((((((rt0.c4 COLLATE RTRIM)AND(vt0.c0)))OR((NOT (vt0.c0)))))OR(TRIM(vt0.c0))))AND(((vt0.lid) NOT BETWEEN (vt0.lid) AND (rt0.c3)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.lid)))))AND(vt0.lid COLLATE BINARY));
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, vt0.lid FROM v0, vt0 FULL OUTER JOIN rt0 ON ((((((((((((rt0.c4 COLLATE RTRIM)AND(vt0.c0)))OR((NOT (vt0.c0)))))OR(TRIM(vt0.c0))))AND(((vt0.lid) NOT BETWEEN (vt0.lid) AND (rt0.c3)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.lid)))))AND(vt0.lid COLLATE BINARY)) WHERE (CAST(CASE rt0.c3  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN v0.c0 END AS INTEGER)) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, vt0.lid FROM v0, vt0 FULL OUTER JOIN rt0 ON ((((((((((((rt0.c4 COLLATE RTRIM)AND(vt0.c0)))OR((NOT (vt0.c0)))))OR(TRIM(vt0.c0))))AND(((vt0.lid) NOT BETWEEN (vt0.lid) AND (rt0.c3)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.lid)))))AND(vt0.lid COLLATE BINARY)) WHERE ((NOT (CAST(CASE rt0.c3  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN v0.c0 END AS INTEGER)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, vt0.lid FROM v0, vt0 FULL OUTER JOIN rt0 ON ((((((((((((rt0.c4 COLLATE RTRIM)AND(vt0.c0)))OR((NOT (vt0.c0)))))OR(TRIM(vt0.c0))))AND(((vt0.lid) NOT BETWEEN (vt0.lid) AND (rt0.c3)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.lid)))))AND(vt0.lid COLLATE BINARY)) WHERE (((CAST(CASE rt0.c3  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN v0.c0 END AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, vt0.lid FROM v0, vt0 FULL OUTER JOIN rt0 ON ((((((((((((rt0.c4 COLLATE RTRIM)AND(vt0.c0)))OR((NOT (vt0.c0)))))OR(TRIM(vt0.c0))))AND(((vt0.lid) NOT BETWEEN (vt0.lid) AND (rt0.c3)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.lid)))))AND(vt0.lid COLLATE BINARY));
SELECT vt0.c0, v0.c0, rt0.c1, rt0.c0, vt0.lid, rt0.c2, rt0.c4, rt0.c3 FROM vt0, v0, rt0 GROUP BY vt0.c0, v0.c0, rt0.c1, rt0.c0, vt0.lid, rt0.c2, rt0.c4, rt0.c3;
SELECT vt0.c0, v0.c0, rt0.c1, rt0.c0, vt0.lid, rt0.c2, rt0.c4, rt0.c3 FROM vt0, v0, rt0 WHERE (((rt0.c0) ISNULL) COLLATE BINARY) GROUP BY vt0.c0, v0.c0, rt0.c1, rt0.c0, vt0.lid, rt0.c2, rt0.c4, rt0.c3 UNION SELECT ALL vt0.c0, v0.c0, rt0.c1, rt0.c0, vt0.lid, rt0.c2, rt0.c4, rt0.c3 FROM vt0, v0, rt0 WHERE ((NOT (((rt0.c0) ISNULL) COLLATE BINARY))) GROUP BY vt0.c0, v0.c0, rt0.c1, rt0.c0, vt0.lid, rt0.c2, rt0.c4, rt0.c3 UNION SELECT ALL vt0.c0, v0.c0, rt0.c1, rt0.c0, vt0.lid, rt0.c2, rt0.c4, rt0.c3 FROM vt0, v0, rt0 WHERE (((((rt0.c0) ISNULL) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0, v0.c0, rt0.c1, rt0.c0, vt0.lid, rt0.c2, rt0.c4, rt0.c3;
SELECT vt0.c0, v0.c0, rt0.c1, rt0.c0, vt0.lid, rt0.c2, rt0.c4, rt0.c3 FROM vt0, v0, rt0 GROUP BY vt0.c0, v0.c0, rt0.c1, rt0.c0, vt0.lid, rt0.c2, rt0.c4, rt0.c3;
SELECT rt0.c0, vt0.lid, vt0.c0, rt0.c4 FROM vt0, rt0, v0 GROUP BY rt0.c0, vt0.lid, vt0.c0, rt0.c4;
SELECT ALL rt0.c0, vt0.lid, vt0.c0, rt0.c4 FROM vt0, rt0, v0 NOT INDEXED GROUP BY rt0.c0, vt0.lid, vt0.c0, rt0.c4 HAVING MIN(AVG(vt0.c0)) COLLATE NOCASE UNION ALL SELECT ALL rt0.c0, vt0.lid, vt0.c0, rt0.c4 FROM vt0, rt0, v0 GROUP BY rt0.c0, vt0.lid, vt0.c0, rt0.c4 HAVING (NOT (MIN(AVG(vt0.c0)) COLLATE NOCASE)) UNION ALL SELECT rt0.c0, vt0.lid, vt0.c0, rt0.c4 FROM vt0, rt0, v0 GROUP BY rt0.c0, vt0.lid, vt0.c0, rt0.c4 HAVING ((MIN(AVG(vt0.c0)) COLLATE NOCASE) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (LIKELY(json_type(vt0.lid))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (LIKELY(json_type(vt0.lid))))) UNION ALL SELECT * FROM vt0 WHERE (((LIKELY(json_type(vt0.lid))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0, vt0.lid FROM vt0;
SELECT DISTINCT vt0.c0, vt0.lid FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (0.6438221808582012) AND (vt0.c0)) COLLATE BINARY) UNION SELECT DISTINCT vt0.c0, vt0.lid FROM vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (0.6438221808582012) AND (vt0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0, vt0.lid FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (0.6438221808582012) AND (vt0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c0, vt0.lid FROM vt0;
SELECT rt0.c4, rt0.c2, rt0.c1, vt0.lid, v0.c0, rt0.c3, vt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, vt0.lid, v0.c0, rt0.c3, vt0.c0;
SELECT rt0.c4, rt0.c2, rt0.c1, vt0.lid, v0.c0, rt0.c3, vt0.c0 FROM v0, rt0, vt0 WHERE (((((rt0.c0) BETWEEN (rt0.c4) AND (vt0.lid))) BETWEEN ('') AND (NULL))) GROUP BY rt0.c4, rt0.c2, rt0.c1, vt0.lid, v0.c0, rt0.c3, vt0.c0 UNION SELECT rt0.c4, rt0.c2, rt0.c1, vt0.lid, v0.c0, rt0.c3, vt0.c0 FROM v0, rt0, vt0 WHERE ((NOT (((((rt0.c0) BETWEEN (rt0.c4) AND (vt0.lid))) BETWEEN ('') AND (NULL))))) GROUP BY rt0.c4, rt0.c2, rt0.c1, vt0.lid, v0.c0, rt0.c3, vt0.c0 UNION SELECT rt0.c4, rt0.c2, rt0.c1, vt0.lid, v0.c0, rt0.c3, vt0.c0 FROM v0, rt0, vt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c4) AND (vt0.lid))) BETWEEN ('') AND (NULL))) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c1, vt0.lid, v0.c0, rt0.c3, vt0.c0;
SELECT rt0.c4, rt0.c2, rt0.c1, vt0.lid, v0.c0, rt0.c3, vt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, vt0.lid, v0.c0, rt0.c3, vt0.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(((GROUP_CONCAT(COUNT(SUM(SUM(MAX(rt0.c4))))))LIKE(x''))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(((GROUP_CONCAT(COUNT(SUM(SUM(MAX(rt0.c4))))))LIKE(x''))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(((GROUP_CONCAT(COUNT(SUM(SUM(MAX(rt0.c4))))))LIKE(x'')))) ISNULL);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON vt0.lid;
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON vt0.lid WHERE ((((+ (vt0.c0))) NOT BETWEEN (LOWER(v0.c0)) AND (((((vt0.c0)AND(v0.c0)))OR(v0.c0))))) UNION ALL SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON vt0.lid WHERE ((NOT ((((+ (vt0.c0))) NOT BETWEEN (LOWER(v0.c0)) AND (((((vt0.c0)AND(v0.c0)))OR(v0.c0))))))) UNION ALL SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON vt0.lid WHERE ((((((+ (vt0.c0))) NOT BETWEEN (LOWER(v0.c0)) AND (((((vt0.c0)AND(v0.c0)))OR(v0.c0))))) ISNULL));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON vt0.lid;
SELECT DISTINCT rt0.c0, rt0.c4, v0.c0, rt0.c1, rt0.c3 FROM v0, rt0, vt0;
SELECT DISTINCT rt0.c0, rt0.c4, v0.c0, rt0.c1, rt0.c3 FROM v0, rt0, vt0 WHERE ((CAST(rt0.c2 AS NUMERIC) IN ())) UNION SELECT DISTINCT rt0.c0, rt0.c4, v0.c0, rt0.c1, rt0.c3 FROM v0, rt0, vt0 WHERE ((NOT ((CAST(rt0.c2 AS NUMERIC) IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c4, v0.c0, rt0.c1, rt0.c3 FROM v0, rt0, vt0 WHERE ((((CAST(rt0.c2 AS NUMERIC) IN ())) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c4, v0.c0, rt0.c1, rt0.c3 FROM v0, rt0, vt0;
SELECT ALL rt0.c4, rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c4, rt0.c2, rt0.c1;
SELECT rt0.c4, rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN v0 WHERE (CASE (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND (('LBC&s}2n[')))  WHEN x'' THEN (v0.c0 IN ()) ELSE CAST(rt0.c3 AS NUMERIC) END) GROUP BY rt0.c4, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (CASE (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND (('LBC&s}2n[')))  WHEN x'' THEN (v0.c0 IN ()) ELSE CAST(rt0.c3 AS NUMERIC) END))) GROUP BY rt0.c4, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN v0 WHERE (((CASE (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND (('LBC&s}2n[')))  WHEN x'' THEN (v0.c0 IN ()) ELSE CAST(rt0.c3 AS NUMERIC) END) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c1;
SELECT ALL rt0.c4, rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c4, rt0.c2, rt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(MAX(vt0.lid)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(MAX(vt0.lid)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(MAX(vt0.lid))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0, vt0;
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0, vt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN vt0.c0 THEN x'28b5' ELSE rt0.c2 END)<<(((vt0.c0) NOT NULL)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0, vt0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN vt0.c0 THEN x'28b5' ELSE rt0.c2 END)<<(((vt0.c0) NOT NULL)))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0, vt0 WHERE (((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN vt0.c0 THEN x'28b5' ELSE rt0.c2 END)<<(((vt0.c0) NOT NULL)))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0, vt0;
SELECT DISTINCT rt0.c1, rt0.c4 FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c4 FROM v0, rt0 WHERE (v0.c0) UNION SELECT DISTINCT rt0.c1, rt0.c4 FROM v0, rt0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT rt0.c1, rt0.c4 FROM v0, rt0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c4 FROM v0, rt0;
SELECT rt0.c3, rt0.c1, vt0.lid, v0.c0, rt0.c2 FROM vt0, v0, rt0 GROUP BY rt0.c3, rt0.c1, vt0.lid, v0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, vt0.lid, v0.c0, rt0.c2 FROM vt0, v0, rt0 WHERE (((rt0.c1)||(vt0.lid)) COLLATE RTRIM) GROUP BY rt0.c3, rt0.c1, vt0.lid, v0.c0, rt0.c2 UNION SELECT rt0.c3, rt0.c1, vt0.lid, v0.c0, rt0.c2 FROM vt0, v0, rt0 WHERE ((NOT (((rt0.c1)||(vt0.lid)) COLLATE RTRIM))) GROUP BY rt0.c3, rt0.c1, vt0.lid, v0.c0, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c1, vt0.lid, v0.c0, rt0.c2 FROM vt0, v0, rt0 WHERE (((((rt0.c1)||(vt0.lid)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c3, rt0.c1, vt0.lid, v0.c0, rt0.c2;
SELECT rt0.c3, rt0.c1, vt0.lid, v0.c0, rt0.c2 FROM vt0, v0, rt0 GROUP BY rt0.c3, rt0.c1, vt0.lid, v0.c0, rt0.c2;
SELECT ALL v0.c0, vt0.lid, rt0.c3, rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0, v0 GROUP BY v0.c0, vt0.lid, rt0.c3, rt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT ALL v0.c0, vt0.lid, rt0.c3, rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0, v0 GROUP BY v0.c0, vt0.lid, rt0.c3, rt0.c1, rt0.c0, rt0.c2, vt0.c0 HAVING (((UPPER(DISTINCT COUNT(*)), ((((COUNT(*))AND(MAX(MIN(rt0.c1)))))AND(rt0.c1)), ((rt0.c0)*(rt0.c2))))!=((TOTAL(rt0.c0), MAX(rt0.c1), ((rt0.c1)!=(GROUP_CONCAT(rt0.c4)))))) UNION ALL SELECT v0.c0, vt0.lid, rt0.c3, rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0, v0 GROUP BY v0.c0, vt0.lid, rt0.c3, rt0.c1, rt0.c0, rt0.c2, vt0.c0 HAVING (NOT ((((UPPER(DISTINCT COUNT(*)), ((((COUNT(*))AND(MAX(MIN(rt0.c1)))))AND(rt0.c1)), ((rt0.c0)*(rt0.c2))))!=((TOTAL(rt0.c0), MAX(rt0.c1), ((rt0.c1)!=(GROUP_CONCAT(rt0.c4)))))))) UNION ALL SELECT v0.c0, vt0.lid, rt0.c3, rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0, v0 GROUP BY v0.c0, vt0.lid, rt0.c3, rt0.c1, rt0.c0, rt0.c2, vt0.c0 HAVING (((((UPPER(DISTINCT COUNT(*)), ((((COUNT(*))AND(MAX(MIN(rt0.c1)))))AND(rt0.c1)), ((rt0.c0)*(rt0.c2))))<>((TOTAL(rt0.c0), MAX(rt0.c1), ((rt0.c1)!=(GROUP_CONCAT(rt0.c4))))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM v0, vt0, rt0;
SELECT ALL rt0.c0, rt0.c2 FROM v0, vt0, rt0 WHERE (0X6bef6b22) UNION ALL SELECT rt0.c0, rt0.c2 FROM v0, vt0, rt0 WHERE ((NOT (0X6bef6b22))) UNION ALL SELECT rt0.c0, rt0.c2 FROM v0, vt0, rt0 WHERE (((0X6bef6b22) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM v0, vt0, rt0;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c3) NOTNULL)) BETWEEN (vt0.c0 COLLATE BINARY) AND (COALESCE(DISTINCT rt0.c0, rt0.c1, rt0.c0, vt0.lid)));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c3) NOTNULL)) BETWEEN (vt0.c0 COLLATE BINARY) AND (COALESCE(DISTINCT rt0.c0, rt0.c1, rt0.c0, vt0.lid))) WHERE (NULL) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c3) NOTNULL)) BETWEEN (vt0.c0 COLLATE BINARY) AND (COALESCE(DISTINCT rt0.c0, rt0.c1, rt0.c0, vt0.lid))) WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c3) NOTNULL)) BETWEEN (vt0.c0 COLLATE BINARY) AND (COALESCE(DISTINCT rt0.c0, rt0.c1, rt0.c0, vt0.lid))) WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c3) NOTNULL)) BETWEEN (vt0.c0 COLLATE BINARY) AND (COALESCE(DISTINCT rt0.c0, rt0.c1, rt0.c0, vt0.lid)));
SELECT ALL rt0.c4, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c2, v0.c0;
SELECT ALL rt0.c4, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 WHERE ((((rt0.c1, rt0.c3, 1.624044914E9, rt0.c4, rt0.c4)) BETWEEN ((((v0.c0) NOT NULL), ((rt0.c2)%(rt0.c1)), (~ (rt0.c1)), CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 ELSE NULL END, (rt0.c3 IN ()))) AND ((((((v0.c0)OR(rt0.c3)))OR(v0.c0)), x'', (((rt0.c3))=((rt0.c2))), 0.717375075111866 COLLATE BINARY, ((v0.c0)&(v0.c0)))))) GROUP BY rt0.c4, rt0.c0, rt0.c2, v0.c0 UNION SELECT rt0.c4, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 WHERE ((NOT ((((rt0.c1, rt0.c3, 1.624044914E9, rt0.c4, rt0.c4)) BETWEEN ((((v0.c0) NOT NULL), ((rt0.c2)%(rt0.c1)), (~ (rt0.c1)), CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 ELSE NULL END, (rt0.c3 IN ()))) AND ((((((v0.c0)OR(rt0.c3)))OR(v0.c0)), x'', (((rt0.c3))=((rt0.c2))), 0.717375075111866 COLLATE BINARY, ((v0.c0)&(v0.c0)))))))) GROUP BY rt0.c4, rt0.c0, rt0.c2, v0.c0 UNION SELECT ALL rt0.c4, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 WHERE ((((((rt0.c1, rt0.c3, 1.624044914E9, rt0.c4, rt0.c4)) BETWEEN ((((v0.c0) NOT NULL), ((rt0.c2)%(rt0.c1)), (~ (rt0.c1)), CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 ELSE NULL END, (rt0.c3 IN ()))) AND ((((((v0.c0)OR(rt0.c3)))OR(v0.c0)), x'', (((rt0.c3))=((rt0.c2))), 0.717375075111866 COLLATE BINARY, ((v0.c0)&(v0.c0)))))) ISNULL)) GROUP BY rt0.c4, rt0.c0, rt0.c2, v0.c0;
SELECT ALL rt0.c4, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c2, v0.c0;
SELECT vt0.lid, vt0.c0, v0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((load_extension(vt0.lid, vt0.lid)) BETWEEN (((vt0.lid)IS NOT(vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.lid ELSE v0.c0 END)) GROUP BY vt0.lid, vt0.c0, v0.c0;
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN rt0.c4 THEN RTRIM(rt0.c3) WHEN (((rt0.c3))<>((v0.c0))) THEN ((v0.c0)<=(rt0.c0)) WHEN ((rt0.c4) IS FALSE) THEN '1782010725' END) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (CASE WHEN rt0.c4 THEN RTRIM(rt0.c3) WHEN (((rt0.c3))<>((v0.c0))) THEN ((v0.c0)<=(rt0.c0)) WHEN ((rt0.c4) IS FALSE) THEN '1782010725' END))) UNION ALL SELECT * FROM v0, rt0 WHERE (((CASE WHEN rt0.c4 THEN RTRIM(rt0.c3) WHEN (((rt0.c3))!=((v0.c0))) THEN ((v0.c0)<=(rt0.c0)) WHEN ((rt0.c4) IS FALSE) THEN '1782010725' END) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT DISTINCT * FROM v0, vt0, rt0 WHERE (((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY) UNION SELECT DISTINCT * FROM v0, vt0, rt0 WHERE ((NOT (((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0, vt0, rt0 WHERE (((((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, v0 WHERE (1.85358519E8) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0, v0 WHERE ((NOT (1.85358519E8))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0, v0 WHERE (((1.85358519E8) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING TOTAL((rt0.c0 IN ())) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING (NOT (TOTAL((rt0.c0 IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING ((TOTAL((rt0.c0 IN ()))) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING TOTAL((rt0.c0 IN ())) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING (NOT (TOTAL((rt0.c0 IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING ((TOTAL((rt0.c0 IN ()))) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (((rt0.c4) BETWEEN (rt0.c0 COLLATE RTRIM) AND (''))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (((rt0.c4) BETWEEN (rt0.c0 COLLATE RTRIM) AND (''))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c4) BETWEEN (rt0.c0 COLLATE RTRIM) AND (''))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((PRINTF(v0.c0))/((((v0.c0)) BETWEEN ((NULL)) AND ((v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((PRINTF(v0.c0))/((((v0.c0)) BETWEEN ((NULL)) AND ((v0.c0)))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((PRINTF(v0.c0))/((((v0.c0)) BETWEEN ((NULL)) AND ((v0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0, vt0.c0, vt0.lid FROM vt0, v0 GROUP BY v0.c0, vt0.c0, vt0.lid;
SELECT v0.c0, vt0.c0, vt0.lid FROM vt0, v0 WHERE (CAST(0.4340325011854196 AS NUMERIC)) GROUP BY v0.c0, vt0.c0, vt0.lid UNION SELECT ALL v0.c0, vt0.c0, vt0.lid FROM vt0, v0 WHERE ((NOT (CAST(0.4340325011854196 AS NUMERIC)))) GROUP BY v0.c0, vt0.c0, vt0.lid UNION SELECT ALL v0.c0, vt0.c0, vt0.lid FROM vt0, v0 WHERE (((CAST(0.4340325011854196 AS NUMERIC)) ISNULL)) GROUP BY v0.c0, vt0.c0, vt0.lid;
SELECT v0.c0, vt0.c0, vt0.lid FROM vt0, v0 GROUP BY v0.c0, vt0.c0, vt0.lid;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(COUNT(COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(COUNT(COUNT(*))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(COUNT(COUNT(*)))) ISNULL);
SELECT ALL * FROM rt0, vt0, v0;
SELECT ALL * FROM rt0, vt0, v0 WHERE (((rt0.c3) BETWEEN ((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3)))) AND ((NOT (rt0.c4))))) UNION ALL SELECT * FROM rt0, vt0, v0 WHERE ((NOT (((rt0.c3) BETWEEN ((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3)))) AND ((NOT (rt0.c4))))))) UNION ALL SELECT * FROM rt0, vt0, v0 WHERE (((((rt0.c3) BETWEEN ((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3)))) AND ((NOT (rt0.c4))))) ISNULL));
SELECT ALL * FROM rt0, vt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (TRIM(DISTINCT ((v0.c0) ISNULL), ((v0.c0) ISNULL))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (TRIM(DISTINCT ((v0.c0) ISNULL), ((v0.c0) ISNULL))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((TRIM(DISTINCT ((v0.c0) ISNULL), ((v0.c0) ISNULL))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0;
SELECT ALL vt0.lid, vt0.c0 FROM vt0 WHERE (vt0.lid) GROUP BY vt0.lid, vt0.c0 UNION SELECT ALL vt0.lid, vt0.c0 FROM vt0 WHERE ((NOT (vt0.lid))) GROUP BY vt0.lid, vt0.c0 UNION SELECT ALL vt0.lid, vt0.c0 FROM vt0 WHERE (((vt0.lid) ISNULL)) GROUP BY vt0.lid, vt0.c0;
SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING MIN(AVG(vt0.c0)) COLLATE BINARY UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(AVG(vt0.c0)) COLLATE BINARY)) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((MIN(AVG(vt0.c0)) COLLATE BINARY) ISNULL);
SELECT vt0.lid FROM vt0;
SELECT vt0.lid FROM vt0 WHERE (UPPER((((vt0.lid)) BETWEEN ((vt0.c0)) AND ((vt0.lid))))) UNION ALL SELECT ALL vt0.lid FROM vt0 WHERE ((NOT (UPPER((((vt0.lid)) BETWEEN ((vt0.c0)) AND ((vt0.lid))))))) UNION ALL SELECT vt0.lid FROM vt0 WHERE (((UPPER((((vt0.lid)) BETWEEN ((vt0.c0)) AND ((vt0.lid))))) ISNULL));
SELECT vt0.lid FROM vt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c0))) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c0))) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c0))) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4;
SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4 UNION SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4;
SELECT ALL vt0.lid FROM v0, vt0 GROUP BY vt0.lid;
SELECT vt0.lid FROM v0, vt0 GROUP BY vt0.lid HAVING CASE AVG(AVG(SUM(v0.c0)))  WHEN (~ (v0.c0)) THEN json_patch(MIN(vt0.c0), MIN(v0.c0)) WHEN GROUP_CONCAT(vt0.lid) THEN AVG(COUNT(TOTAL(v0.c0))) WHEN COUNT(*) THEN (MIN(vt0.lid) IN (vt0.c0, v0.c0)) END UNION ALL SELECT ALL vt0.lid FROM v0, vt0 GROUP BY vt0.lid HAVING (NOT (CASE AVG(AVG(SUM(v0.c0)))  WHEN (~ (v0.c0)) THEN json_patch(MIN(vt0.c0), MIN(v0.c0)) WHEN GROUP_CONCAT(vt0.lid) THEN AVG(COUNT(TOTAL(v0.c0))) WHEN COUNT(*) THEN (MIN(vt0.lid) IN (vt0.c0, v0.c0)) END)) UNION ALL SELECT vt0.lid FROM v0, vt0 GROUP BY vt0.lid HAVING ((CASE AVG(AVG(SUM(v0.c0)))  WHEN (~ (v0.c0)) THEN json_patch(MIN(vt0.c0), MIN(v0.c0)) WHEN GROUP_CONCAT(vt0.lid) THEN AVG(COUNT(TOTAL(v0.c0))) WHEN COUNT(*) THEN (MIN(vt0.lid) IN (vt0.c0, v0.c0)) END) ISNULL);
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON CASE rt0.c1  WHEN rt0.c0 COLLATE BINARY THEN rt0.c3 COLLATE BINARY END FULL OUTER JOIN rt0 ON ((((v0.c0) IS FALSE))GLOB(CAST(vt0.c0 AS REAL)));
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0;
SELECT vt0.c0, v0.c0, vt0.lid FROM v0, vt0 GROUP BY vt0.c0, v0.c0, vt0.lid;
SELECT vt0.c0, v0.c0, vt0.lid FROM v0, vt0 WHERE ((((vt0.lid IN ()))>(vt0.c0))) GROUP BY vt0.c0, v0.c0, vt0.lid UNION SELECT vt0.c0, v0.c0, vt0.lid FROM v0, vt0 WHERE ((NOT ((((vt0.lid IN ()))>(vt0.c0))))) GROUP BY vt0.c0, v0.c0, vt0.lid UNION SELECT vt0.c0, v0.c0, vt0.lid FROM v0, vt0 WHERE ((((((vt0.lid IN ()))>(vt0.c0))) ISNULL)) GROUP BY vt0.c0, v0.c0, vt0.lid;
SELECT vt0.c0, v0.c0, vt0.lid FROM v0, vt0 GROUP BY vt0.c0, v0.c0, vt0.lid;
SELECT ALL vt0.lid, rt0.c4, vt0.c0, rt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0 GROUP BY vt0.lid, rt0.c4, vt0.c0, rt0.c0, rt0.c2, rt0.c3;
SELECT vt0.lid, rt0.c4, vt0.c0, rt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0 GROUP BY vt0.lid, rt0.c4, vt0.c0, rt0.c0, rt0.c2, rt0.c3 HAVING SUM((((TOTAL(rt0.c2), MAX(COUNT(*)), COUNT(rt0.c3)))<>((rt0.c2, SUM(rt0.c0), MAX(rt0.c2))))) UNION ALL SELECT ALL vt0.lid, rt0.c4, vt0.c0, rt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0 GROUP BY vt0.lid, rt0.c4, vt0.c0, rt0.c0, rt0.c2, rt0.c3 HAVING (NOT (SUM((((TOTAL(rt0.c2), MAX(COUNT(*)), COUNT(rt0.c3)))<>((rt0.c2, SUM(rt0.c0), MAX(rt0.c2))))))) UNION ALL SELECT vt0.lid, rt0.c4, vt0.c0, rt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0 GROUP BY vt0.lid, rt0.c4, vt0.c0, rt0.c0, rt0.c2, rt0.c3 HAVING ((SUM((((TOTAL(rt0.c2), MAX(COUNT(*)), COUNT(rt0.c3)))!=((rt0.c2, SUM(rt0.c0), MAX(rt0.c2)))))) ISNULL);
SELECT ALL v0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4, vt0.c0, vt0.lid, rt0.c0 FROM rt0, vt0 INNER JOIN v0 ON ((('-50499294') IS TRUE) IN (((rt0.c1)||(rt0.c4))));
SELECT ALL v0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4, vt0.c0, vt0.lid, rt0.c0 FROM rt0, vt0 INNER JOIN v0 ON ((('-50499294') IS TRUE) IN (((rt0.c1)||(rt0.c4)))) WHERE (((((rt0.c1)|(rt0.c3)))>=(((vt0.lid) ISNULL)))) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4, vt0.c0, vt0.lid, rt0.c0 FROM rt0, vt0 INNER JOIN v0 ON ((('-50499294') IS TRUE) IN (((rt0.c1)||(rt0.c4)))) WHERE ((NOT (((((rt0.c1)|(rt0.c3)))>=(((vt0.lid) ISNULL)))))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4, vt0.c0, vt0.lid, rt0.c0 FROM rt0, vt0 INNER JOIN v0 ON ((('-50499294') IS TRUE) IN (((rt0.c1)||(rt0.c4)))) WHERE (((((((rt0.c1)|(rt0.c3)))>=(((vt0.lid) ISNULL)))) ISNULL));
SELECT ALL v0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4, vt0.c0, vt0.lid, rt0.c0 FROM rt0, vt0 INNER JOIN v0 ON ((('-50499294') IS TRUE) IN (((rt0.c1)||(rt0.c4))));
SELECT DISTINCT rt0.c3 FROM v0, vt0, rt0;
SELECT DISTINCT rt0.c3 FROM v0, vt0, rt0 WHERE (((((((((((NULL)%(rt0.c4)))AND((~ (v0.c0)))))AND((rt0.c0 IN ()))))AND(((vt0.c0)<<(v0.c0)))))AND((- (rt0.c2))))) UNION SELECT DISTINCT rt0.c3 FROM v0, vt0, rt0 WHERE ((NOT (((((((((((NULL)%(rt0.c4)))AND((~ (v0.c0)))))AND((rt0.c0 IN ()))))AND(((vt0.c0)<<(v0.c0)))))AND((- (rt0.c2))))))) UNION SELECT DISTINCT rt0.c3 FROM v0, vt0, rt0 WHERE (((((((((((((NULL)%(rt0.c4)))AND((~ (v0.c0)))))AND((rt0.c0 IN ()))))AND(((vt0.c0)<<(v0.c0)))))AND((- (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c3 FROM v0, vt0, rt0;
SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE ((((((rt0.c1 IN ()))AND(LTRIM(rt0.c0))))OR(CAST(rt0.c3 AS NUMERIC)))) GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT ((((((rt0.c1 IN ()))AND(LTRIM(rt0.c0))))OR(CAST(rt0.c3 AS NUMERIC)))))) GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c4 UNION SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE ((((((((rt0.c1 IN ()))AND(LTRIM(rt0.c0))))OR(CAST(rt0.c3 AS NUMERIC)))) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c4;
SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c4;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(v0.c0)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(v0.c0)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.lid) NOT NULL)) ISNULL)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.lid) NOT NULL)) ISNULL)))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.lid) NOT NULL)) ISNULL)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((((rt0.c2 IN ())) BETWEEN (IFNULL(rt0.c2, rt0.c0)) AND (((rt0.c3) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((((rt0.c2 IN ())) BETWEEN (IFNULL(rt0.c2, rt0.c0)) AND (((rt0.c3) IS FALSE)))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((rt0.c2 IN ())) BETWEEN (IFNULL(rt0.c2, rt0.c0)) AND (((rt0.c3) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0)AND(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((NOT (((v0.c0)AND(v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((NOT (((v0.c0)AND(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, vt0.lid, vt0.c0 FROM vt0 INNER JOIN v0 ON ((CASE vt0.c0  WHEN vt0.lid THEN v0.c0 ELSE v0.c0 END)&(CAST(vt0.c0 AS BLOB))) GROUP BY v0.c0, vt0.lid, vt0.c0;
SELECT v0.c0, vt0.lid, vt0.c0 FROM vt0 INNER JOIN v0 ON ((CASE vt0.c0  WHEN vt0.lid THEN v0.c0 ELSE v0.c0 END)&(CAST(vt0.c0 AS BLOB))) GROUP BY v0.c0, vt0.lid, vt0.c0 HAVING AVG(PRINTF(TOTAL(vt0.lid))) UNION ALL SELECT v0.c0, vt0.lid, vt0.c0 FROM vt0 INNER JOIN v0 ON ((CASE vt0.c0  WHEN vt0.lid THEN v0.c0 ELSE v0.c0 END)&(CAST(vt0.c0 AS BLOB))) GROUP BY v0.c0, vt0.lid, vt0.c0 HAVING (NOT (AVG(PRINTF(TOTAL(vt0.lid))))) UNION ALL SELECT v0.c0, vt0.lid, vt0.c0 FROM vt0 INNER JOIN v0 ON ((CASE vt0.c0  WHEN vt0.lid THEN v0.c0 ELSE v0.c0 END)&(CAST(vt0.c0 AS BLOB))) GROUP BY v0.c0, vt0.lid, vt0.c0 HAVING ((AVG(PRINTF(TOTAL(vt0.lid)))) ISNULL);
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON (NOT (TYPEOF(DISTINCT rt0.c4)));
SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON (NOT (TYPEOF(DISTINCT rt0.c4))) WHERE (CAST(((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)) AS NUMERIC)) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1, v0.c0 FROM rt0 NOT INDEXED FULL OUTER JOIN v0 ON (NOT (TYPEOF(DISTINCT rt0.c4))) WHERE ((NOT (CAST(((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)) AS NUMERIC)))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON (NOT (TYPEOF(DISTINCT rt0.c4))) WHERE (((CAST(((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)) AS NUMERIC)) ISNULL));
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON (NOT (TYPEOF(DISTINCT rt0.c4)));
SELECT DISTINCT rt0.c2, rt0.c3, vt0.lid, rt0.c4 FROM rt0, vt0, v0;
SELECT DISTINCT rt0.c2, rt0.c3, vt0.lid, rt0.c4 FROM rt0, vt0, v0 WHERE (((rt0.c3) NOTNULL) COLLATE BINARY) UNION SELECT DISTINCT rt0.c2, rt0.c3, vt0.lid, rt0.c4 FROM rt0, vt0, v0 WHERE ((NOT (((rt0.c3) NOTNULL) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2, rt0.c3, vt0.lid, rt0.c4 FROM rt0, vt0, v0 WHERE (((((rt0.c3) NOTNULL) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3, vt0.lid, rt0.c4 FROM rt0, vt0, v0;
SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid;
SELECT ALL vt0.c0, vt0.lid FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.lid)-(vt0.lid)))) AND ((((vt0.lid) NOT NULL))))) GROUP BY vt0.c0, vt0.lid UNION SELECT vt0.c0, vt0.lid FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((((vt0.lid)-(vt0.lid)))) AND ((((vt0.lid) NOT NULL))))))) GROUP BY vt0.c0, vt0.lid UNION SELECT ALL vt0.c0, vt0.lid FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((((vt0.lid)-(vt0.lid)))) AND ((((vt0.lid) NOT NULL))))) ISNULL)) GROUP BY vt0.c0, vt0.lid;
SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid;
SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM v0 NATURAL JOIN rt0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c4;
SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM v0 NATURAL JOIN rt0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c4 HAVING SUM(MIN(SUM(GROUP_CONCAT(rt0.c4)))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM v0 NATURAL JOIN rt0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c4 HAVING (NOT (SUM(MIN(SUM(GROUP_CONCAT(rt0.c4)))))) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM v0 NOT INDEXED NATURAL JOIN rt0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c4 HAVING ((SUM(MIN(SUM(GROUP_CONCAT(rt0.c4))))) ISNULL);
SELECT ALL * FROM rt0, vt0, v0;
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((vt0.c0)>=(vt0.c0))) NOTNULL)) UNION ALL SELECT * FROM rt0, vt0, v0 WHERE ((NOT (((((vt0.c0)>=(vt0.c0))) NOTNULL)))) UNION ALL SELECT ALL * FROM rt0, vt0, v0 WHERE (((((((vt0.c0)>=(vt0.c0))) NOTNULL)) ISNULL));
SELECT ALL * FROM rt0, vt0, v0;
SELECT DISTINCT vt0.lid, rt0.c2, rt0.c0, v0.c0, vt0.c0, rt0.c1, rt0.c4 FROM rt0, v0, vt0;
SELECT DISTINCT vt0.lid, rt0.c2, rt0.c0, v0.c0, vt0.c0, rt0.c1, rt0.c4 FROM rt0, v0, vt0 WHERE ((CASE vt0.lid  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN 0.29576472690169253 WHEN rt0.c4 THEN rt0.c0 END IN ())) UNION SELECT DISTINCT vt0.lid, rt0.c2, rt0.c0, v0.c0, vt0.c0, rt0.c1, rt0.c4 FROM rt0, v0, vt0 WHERE ((NOT ((CASE vt0.lid  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN 0.29576472690169253 WHEN rt0.c4 THEN rt0.c0 END IN ())))) UNION SELECT DISTINCT vt0.lid, rt0.c2, rt0.c0, v0.c0, vt0.c0, rt0.c1, rt0.c4 FROM rt0, v0, vt0 WHERE ((((CASE vt0.lid  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN 0.29576472690169253 WHEN rt0.c4 THEN rt0.c0 END IN ())) ISNULL));
SELECT DISTINCT vt0.lid, rt0.c2, rt0.c0, v0.c0, vt0.c0, rt0.c1, rt0.c4 FROM rt0, v0, vt0;
SELECT rt0.c4, rt0.c0, v0.c0, rt0.c3, rt0.c2, vt0.c0, vt0.lid FROM rt0, v0, vt0 GROUP BY rt0.c4, rt0.c0, v0.c0, rt0.c3, rt0.c2, vt0.c0, vt0.lid;
SELECT ALL rt0.c4, rt0.c0, v0.c0, rt0.c3, rt0.c2, vt0.c0, vt0.lid FROM rt0, v0, vt0 WHERE ((((((- (rt0.c0)))AND(x'101d' COLLATE BINARY)))AND(((((rt0.c3)OR(vt0.lid)))AND(rt0.c1))))) GROUP BY rt0.c4, rt0.c0, v0.c0, rt0.c3, rt0.c2, vt0.c0, vt0.lid UNION SELECT ALL rt0.c4, rt0.c0, v0.c0, rt0.c3, rt0.c2, vt0.c0, vt0.lid FROM rt0, v0, vt0 WHERE ((NOT ((((((- (rt0.c0)))AND(x'101d' COLLATE BINARY)))AND(((((rt0.c3)OR(vt0.lid)))AND(rt0.c1))))))) GROUP BY rt0.c4, rt0.c0, v0.c0, rt0.c3, rt0.c2, vt0.c0, vt0.lid UNION SELECT ALL rt0.c4, rt0.c0, v0.c0, rt0.c3, rt0.c2, vt0.c0, vt0.lid FROM rt0, v0, vt0 WHERE ((((((((- (rt0.c0)))AND(x'101d' COLLATE BINARY)))AND(((((rt0.c3)OR(vt0.lid)))AND(rt0.c1))))) ISNULL)) GROUP BY rt0.c4, rt0.c0, v0.c0, rt0.c3, rt0.c2, vt0.c0, vt0.lid;
SELECT rt0.c4, rt0.c0, v0.c0, rt0.c3, rt0.c2, vt0.c0, vt0.lid FROM rt0, v0, vt0 GROUP BY rt0.c4, rt0.c0, v0.c0, rt0.c3, rt0.c2, vt0.c0, vt0.lid;
SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0;
SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING AVG(vt0.lid) COLLATE BINARY UNION ALL SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING (NOT (AVG(vt0.lid) COLLATE BINARY)) UNION ALL SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING ((AVG(vt0.lid) COLLATE BINARY) ISNULL);
SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0;
SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING AVG(vt0.lid) COLLATE BINARY UNION ALL SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING (NOT (AVG(vt0.lid) COLLATE BINARY)) UNION ALL SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING ((AVG(vt0.lid) COLLATE BINARY) ISNULL);
SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0;
SELECT ALL rt0.c4, vt0.c0, rt0.c3, vt0.lid, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (+ (((rt0.c4)IS NOT(0.3481837111771029))));
SELECT ALL rt0.c4, vt0.c0, rt0.c3, vt0.lid, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (+ (((rt0.c4)IS NOT(0.3481837111771029)))) WHERE ((((rt0.c1)) BETWEEN (((rt0.c3 IN ()))) AND (((NULL IN ()))))) UNION ALL SELECT ALL rt0.c4, vt0.c0, rt0.c3, vt0.lid, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (+ (((rt0.c4)IS NOT(0.3481837111771029)))) WHERE ((NOT ((((rt0.c1)) BETWEEN (((rt0.c3 IN ()))) AND (((NULL IN ()))))))) UNION ALL SELECT rt0.c4, vt0.c0, rt0.c3, vt0.lid, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (+ (((rt0.c4)IS NOT(0.3481837111771029)))) WHERE ((((((rt0.c1)) BETWEEN (((rt0.c3 IN ()))) AND (((NULL IN ()))))) ISNULL));
SELECT ALL rt0.c4, vt0.c0, rt0.c3, vt0.lid, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (+ (((rt0.c4)IS NOT(0.3481837111771029))));
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (LIKELY(((v0.c0)AND(vt0.lid)))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (LIKELY(((v0.c0)AND(vt0.lid)))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((LIKELY(((v0.c0)AND(vt0.lid)))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT rt0.c2, vt0.lid, v0.c0, rt0.c0, vt0.c0, rt0.c3, rt0.c4 FROM rt0, v0, vt0 GROUP BY rt0.c2, vt0.lid, v0.c0, rt0.c0, vt0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c2, vt0.lid, v0.c0, rt0.c0, vt0.c0, rt0.c3, rt0.c4 FROM rt0, v0, vt0 WHERE (((('484666555', rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c2)<(rt0.c1)), (('-106024034')<<(rt0.c3)), ((((((((rt0.c3)OR(NULL)))OR(rt0.c2)))AND(rt0.c4)))AND(vt0.c0)))) AND ((rt0.c4, (rt0.c0 IN ()), (((vt0.lid)) BETWEEN ((vt0.c0)) AND ((rt0.c4))))))) GROUP BY rt0.c2, vt0.lid, v0.c0, rt0.c0, vt0.c0, rt0.c3, rt0.c4 UNION SELECT rt0.c2, vt0.lid, v0.c0, rt0.c0, vt0.c0, rt0.c3, rt0.c4 FROM rt0, v0, vt0 WHERE ((NOT (((('484666555', rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c2)<(rt0.c1)), (('-106024034')<<(rt0.c3)), ((((((((rt0.c3)OR(NULL)))OR(rt0.c2)))AND(rt0.c4)))AND(vt0.c0)))) AND ((rt0.c4, (rt0.c0 IN ()), (((vt0.lid)) BETWEEN ((vt0.c0)) AND ((rt0.c4))))))))) GROUP BY rt0.c2, vt0.lid, v0.c0, rt0.c0, vt0.c0, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c2, vt0.lid, v0.c0, rt0.c0, vt0.c0, rt0.c3, rt0.c4 FROM rt0, v0, vt0 WHERE (((((('484666555', rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c2)<(rt0.c1)), (('-106024034')<<(rt0.c3)), ((((((((rt0.c3)OR(NULL)))OR(rt0.c2)))AND(rt0.c4)))AND(vt0.c0)))) AND ((rt0.c4, (rt0.c0 IN ()), (((vt0.lid)) BETWEEN ((vt0.c0)) AND ((rt0.c4))))))) ISNULL)) GROUP BY rt0.c2, vt0.lid, v0.c0, rt0.c0, vt0.c0, rt0.c3, rt0.c4;
SELECT rt0.c2, vt0.lid, v0.c0, rt0.c0, vt0.c0, rt0.c3, rt0.c4 FROM rt0, v0, vt0 GROUP BY rt0.c2, vt0.lid, v0.c0, rt0.c0, vt0.c0, rt0.c3, rt0.c4;
SELECT rt0.c0, rt0.c3, rt0.c2, vt0.lid, rt0.c4, v0.c0, rt0.c1 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c2, vt0.lid, rt0.c4, v0.c0, rt0.c1;
SELECT rt0.c0, rt0.c3, rt0.c2, vt0.lid, rt0.c4, v0.c0, rt0.c1 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c2, vt0.lid, rt0.c4, v0.c0, rt0.c1 HAVING COUNT(COUNT(COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, vt0.lid, rt0.c4, v0.c0, rt0.c1 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c2, vt0.lid, rt0.c4, v0.c0, rt0.c1 HAVING (NOT (COUNT(COUNT(COUNT(*))))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, vt0.lid, rt0.c4, v0.c0, rt0.c1 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c2, vt0.lid, rt0.c4, v0.c0, rt0.c1 HAVING ((COUNT(COUNT(COUNT(*)))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((+ (vt0.c0 COLLATE BINARY))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((+ (vt0.c0 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0 COLLATE BINARY))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.lid, v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.lid, v0.c0, vt0.c0 FROM vt0, v0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.lid, v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.lid, v0.c0, vt0.c0 FROM vt0, v0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.lid, v0.c0, vt0.c0 FROM vt0, v0;
SELECT vt0.c0, vt0.lid, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, vt0.lid, v0.c0;
SELECT ALL vt0.c0, vt0.lid, v0.c0 FROM v0, vt0 WHERE ((((+ (vt0.c0))) NOT BETWEEN (CASE WHEN x'b77c' THEN vt0.c0 END) AND (LOWER(DISTINCT v0.c0)))) GROUP BY vt0.c0, vt0.lid, v0.c0 UNION SELECT vt0.c0, vt0.lid, v0.c0 FROM v0, vt0 WHERE ((NOT ((((+ (vt0.c0))) NOT BETWEEN (CASE WHEN x'b77c' THEN vt0.c0 END) AND (LOWER(DISTINCT v0.c0)))))) GROUP BY vt0.c0, vt0.lid, v0.c0 UNION SELECT ALL vt0.c0, vt0.lid, v0.c0 FROM v0, vt0 WHERE ((((((+ (vt0.c0))) NOT BETWEEN (CASE WHEN x'b77c' THEN vt0.c0 END) AND (LOWER(DISTINCT v0.c0)))) ISNULL)) GROUP BY vt0.c0, vt0.lid, v0.c0;
SELECT vt0.c0, vt0.lid, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, vt0.lid, v0.c0;
SELECT v0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2 HAVING ((AVG(COUNT(*))) BETWEEN (GROUP_CONCAT(MAX(rt0.c3))) AND (COUNT(SUM(MIN(AVG(COUNT(COUNT(v0.c0)))))))) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (((AVG(COUNT(*))) BETWEEN (GROUP_CONCAT(MAX(rt0.c3))) AND (COUNT(SUM(MIN(AVG(COUNT(COUNT(v0.c0)))))))))) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2 HAVING ((((AVG(COUNT(*))) BETWEEN (GROUP_CONCAT(MAX(rt0.c3))) AND (COUNT(SUM(MIN(AVG(COUNT(COUNT(v0.c0))))))))) ISNULL);
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM v0, vt0, rt0;
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM v0, vt0, rt0 WHERE ((TIME('-861589075', rt0.c1, NULL) IN ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0)))))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM v0, vt0, rt0 WHERE ((NOT ((TIME('-861589075', rt0.c1, NULL) IN ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0)))))))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM v0, vt0, rt0 WHERE ((((TIME('-861589075', rt0.c1, NULL) IN ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0)))))) ISNULL));
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM v0, vt0, rt0;
SELECT DISTINCT v0.c0, vt0.c0, vt0.lid FROM vt0 INNER JOIN v0 ON (~ (((((v0.c0)AND(v0.c0)))AND(v0.c0))));
SELECT DISTINCT v0.c0, vt0.c0, vt0.lid FROM vt0 INNER JOIN v0 ON (~ (((((v0.c0)AND(v0.c0)))AND(v0.c0)))) WHERE (((HEX(v0.c0))IS NOT((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))))) UNION SELECT DISTINCT v0.c0, vt0.c0, vt0.lid FROM vt0 INNER JOIN v0 ON (~ (((((v0.c0)AND(v0.c0)))AND(v0.c0)))) WHERE ((NOT (((HEX(v0.c0))IS NOT((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))))))) UNION SELECT DISTINCT v0.c0, vt0.c0, vt0.lid FROM vt0 INNER JOIN v0 ON (~ (((((v0.c0)AND(v0.c0)))AND(v0.c0)))) WHERE (((((HEX(v0.c0))IS NOT((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0, vt0.lid FROM vt0 INNER JOIN v0 ON (~ (((((v0.c0)AND(v0.c0)))AND(v0.c0))));
SELECT ALL rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c4 FROM rt0, v0 WHERE ((- (((rt0.c1)<<(rt0.c3))))) GROUP BY rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c4 UNION SELECT rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c4 FROM rt0, v0 WHERE ((NOT ((- (((rt0.c1)<<(rt0.c3))))))) GROUP BY rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c4 FROM rt0, v0 WHERE ((((- (((rt0.c1)<<(rt0.c3))))) ISNULL)) GROUP BY rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c4;
SELECT rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4;
SELECT rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4 HAVING rt0.c3 UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4 HAVING (NOT (rt0.c3)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4 HAVING ((rt0.c3) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4;
SELECT rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4 HAVING rt0.c3 UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4 HAVING (NOT (rt0.c3)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4 HAVING ((rt0.c3) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4;
SELECT * FROM vt0, rt0, v0;
SELECT * FROM vt0, rt0, v0 WHERE ((((NOT (vt0.c0)))LIKE(CASE WHEN '' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 WHEN vt0.c0 THEN vt0.lid END))) UNION ALL SELECT ALL * FROM vt0, rt0, v0 WHERE ((NOT ((((NOT (vt0.c0)))LIKE(CASE WHEN '' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 WHEN vt0.c0 THEN vt0.lid END))))) UNION ALL SELECT * FROM vt0, rt0, v0 WHERE ((((((NOT (vt0.c0)))LIKE(CASE WHEN '' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 WHEN vt0.c0 THEN vt0.lid END))) ISNULL));
SELECT * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((((((vt0.lid)OR(vt0.lid)))AND(vt0.c0)))OR(0.8531194219269587)))AND(vt0.c0)) IN ())) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((((((vt0.lid)OR(vt0.lid)))AND(vt0.c0)))OR(0.8531194219269587)))AND(vt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((((((vt0.lid)OR(vt0.lid)))AND(vt0.c0)))OR(0.8531194219269587)))AND(vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((~ (vt0.lid))) IS TRUE)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((~ (vt0.lid))) IS TRUE)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((~ (vt0.lid))) IS TRUE)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c0, v0.c0, rt0.c4, rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c4, rt0.c2;
SELECT rt0.c0, v0.c0, rt0.c4, rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c4, rt0.c2 HAVING ((x'')*(TOTAL(rt0.c3))) UNION ALL SELECT rt0.c0, v0.c0, rt0.c4, rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c4, rt0.c2 HAVING (NOT (((x'')*(TOTAL(rt0.c3))))) UNION ALL SELECT rt0.c0, v0.c0, rt0.c4, rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c4, rt0.c2 HAVING ((((x'')*(TOTAL(rt0.c3)))) ISNULL);
SELECT rt0.c0, v0.c0, rt0.c4, rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c4, rt0.c2;
SELECT rt0.c0, v0.c0, rt0.c4, rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c4, rt0.c2 HAVING ((x'')*(TOTAL(rt0.c3))) UNION ALL SELECT rt0.c0, v0.c0, rt0.c4, rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c4, rt0.c2 HAVING (NOT (((x'')*(TOTAL(rt0.c3))))) UNION ALL SELECT rt0.c0, v0.c0, rt0.c4, rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c4, rt0.c2 HAVING ((((x'')*(TOTAL(rt0.c3)))) ISNULL);
SELECT rt0.c0, v0.c0, rt0.c4, rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c4, rt0.c2;
SELECT ALL rt0.c1, vt0.c0, rt0.c3, rt0.c0, vt0.lid, rt0.c4 FROM vt0 LEFT OUTER JOIN rt0 ON ((0.6207359453385383) NOTNULL);
SELECT rt0.c1, vt0.c0, rt0.c3, rt0.c0, vt0.lid, rt0.c4 FROM vt0 LEFT OUTER JOIN rt0 ON ((0.6207359453385383) NOTNULL) WHERE ((((((vt0.c0)-(rt0.c3))))==(((vt0.lid IN ()))))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c3, rt0.c0, vt0.lid, rt0.c4 FROM vt0 LEFT OUTER JOIN rt0 ON ((0.6207359453385383) NOTNULL) WHERE ((NOT ((((((vt0.c0)-(rt0.c3))))=(((vt0.lid IN ()))))))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c3, rt0.c0, vt0.lid, rt0.c4 FROM vt0 LEFT OUTER JOIN rt0 ON ((0.6207359453385383) NOTNULL) WHERE ((((((((vt0.c0)-(rt0.c3))))=(((vt0.lid IN ()))))) ISNULL));
SELECT ALL rt0.c1, vt0.c0, rt0.c3, rt0.c0, vt0.lid, rt0.c4 FROM vt0 LEFT OUTER JOIN rt0 ON ((0.6207359453385383) NOTNULL);
SELECT DISTINCT vt0.c0, vt0.lid FROM vt0;
SELECT DISTINCT vt0.c0, vt0.lid FROM vt0 WHERE ((((((vt0.lid)GLOB(0x63b2fce5)), (0.726448304160535 IN ()), CASE NULL  WHEN vt0.c0 THEN vt0.lid WHEN '6Q' THEN vt0.lid WHEN vt0.lid THEN vt0.c0 ELSE vt0.c0 END))==(((~ (vt0.lid)), ((((vt0.lid)OR(vt0.c0)))OR(vt0.c0)), (~ (vt0.c0)))))) UNION SELECT DISTINCT vt0.c0, vt0.lid FROM vt0 WHERE ((NOT ((((((vt0.lid)GLOB(0X63b2fce5)), (0.726448304160535 IN ()), CASE NULL  WHEN vt0.c0 THEN vt0.lid WHEN '6Q' THEN vt0.lid WHEN vt0.lid THEN vt0.c0 ELSE vt0.c0 END))==(((~ (vt0.lid)), ((((vt0.lid)OR(vt0.c0)))OR(vt0.c0)), (~ (vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0, vt0.lid FROM vt0 WHERE ((((((((vt0.lid)GLOB(0x63b2fce5)), (0.726448304160535 IN ()), CASE NULL  WHEN vt0.c0 THEN vt0.lid WHEN '6Q' THEN vt0.lid WHEN vt0.lid THEN vt0.c0 ELSE vt0.c0 END))==(((~ (vt0.lid)), ((((vt0.lid)OR(vt0.c0)))OR(vt0.c0)), (~ (vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.lid FROM vt0;
SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0;
SELECT vt0.lid, vt0.c0 FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC)) GROUP BY vt0.lid, vt0.c0 UNION SELECT vt0.lid, vt0.c0 FROM vt0 WHERE ((NOT (CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC)))) GROUP BY vt0.lid, vt0.c0 UNION SELECT ALL vt0.lid, vt0.c0 FROM vt0 WHERE (((CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC)) ISNULL)) GROUP BY vt0.lid, vt0.c0;
SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TYPEOF(((MAX(TOTAL(v0.c0))) NOTNULL)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TYPEOF(((MAX(TOTAL(v0.c0))) NOTNULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TYPEOF(((MAX(TOTAL(v0.c0))) NOTNULL))) ISNULL);
SELECT * FROM vt0, v0, rt0;
SELECT ALL * FROM vt0, v0, rt0 WHERE ((('0.7389942157614574') NOT BETWEEN (((v0.c0) BETWEEN (rt0.c1) AND (rt0.c3))) AND (((rt0.c0)IS(v0.c0))))) UNION ALL SELECT * FROM vt0, v0, rt0 WHERE ((NOT ((('0.7389942157614574') NOT BETWEEN (((v0.c0) BETWEEN (rt0.c1) AND (rt0.c3))) AND (((rt0.c0)IS(v0.c0))))))) UNION ALL SELECT * FROM vt0, v0, rt0 WHERE ((((('0.7389942157614574') NOT BETWEEN (((v0.c0) BETWEEN (rt0.c1) AND (rt0.c3))) AND (((rt0.c0)IS(v0.c0))))) ISNULL));
SELECT * FROM vt0, v0, rt0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (('-801380131') ISNULL);
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (('-801380131') ISNULL) WHERE (vt0.lid) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (('-801380131') ISNULL) WHERE ((NOT (vt0.lid))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (('-801380131') ISNULL) WHERE (((vt0.lid) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (('-801380131') ISNULL);
SELECT rt0.c3, rt0.c4, rt0.c0, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON '' INNER JOIN vt0 ON (((((((rt0.c2)OR(vt0.lid)))OR(vt0.lid))))=((CASE v0.c0  WHEN v0.c0 THEN rt0.c4 ELSE rt0.c0 END))) GROUP BY rt0.c3, rt0.c4, rt0.c0, v0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c0, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON '' INNER JOIN vt0 ON (((((((rt0.c2)OR(vt0.lid)))OR(vt0.lid))))==((CASE v0.c0  WHEN v0.c0 THEN rt0.c4 ELSE rt0.c0 END))) WHERE (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND((NULL IN ()))))AND(HEX(DISTINCT rt0.c4)))) GROUP BY rt0.c3, rt0.c4, rt0.c0, v0.c0 UNION SELECT ALL rt0.c3, rt0.c4, rt0.c0, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON '' INNER JOIN vt0 ON (((((((rt0.c2)OR(vt0.lid)))OR(vt0.lid))))==((CASE v0.c0  WHEN v0.c0 THEN rt0.c4 ELSE rt0.c0 END))) WHERE ((NOT (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND((NULL IN ()))))AND(HEX(DISTINCT rt0.c4)))))) GROUP BY rt0.c3, rt0.c4, rt0.c0, v0.c0 UNION SELECT ALL rt0.c3, rt0.c4, rt0.c0, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON '' INNER JOIN vt0 ON (((((((rt0.c2)OR(vt0.lid)))OR(vt0.lid))))==((CASE v0.c0  WHEN v0.c0 THEN rt0.c4 ELSE rt0.c0 END))) WHERE (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND((NULL IN ()))))AND(HEX(DISTINCT rt0.c4)))) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c0, v0.c0;
SELECT rt0.c3, rt0.c4, rt0.c0, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON '' INNER JOIN vt0 ON (((((((rt0.c2)OR(vt0.lid)))OR(vt0.lid))))=((CASE v0.c0  WHEN v0.c0 THEN rt0.c4 ELSE rt0.c0 END))) GROUP BY rt0.c3, rt0.c4, rt0.c0, v0.c0;
SELECT v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c2 FROM v0 NATURAL JOIN rt0 GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c2;
SELECT ALL v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c2 FROM v0 NATURAL JOIN rt0 GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c2 HAVING ((((MAX(AVG(rt0.c4)), v0.c0, v0.c0))>((COUNT(COUNT(COUNT(rt0.c0))), rt0.c2, COUNT(*)))) IN (v0.c0, TRIM(rt0.c2, rt0.c1))) UNION ALL SELECT ALL v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c2 FROM v0 NATURAL JOIN rt0 GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c2 HAVING (NOT (((((MAX(AVG(rt0.c4)), v0.c0, v0.c0))>((COUNT(COUNT(COUNT(rt0.c0))), rt0.c2, COUNT(*)))) IN (v0.c0, TRIM(rt0.c2, rt0.c1))))) UNION ALL SELECT ALL v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c2 FROM v0 NATURAL JOIN rt0 GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c2 HAVING ((((((MAX(AVG(rt0.c4)), v0.c0, v0.c0))>((COUNT(COUNT(COUNT(rt0.c0))), rt0.c2, COUNT(*)))) IN (v0.c0, TRIM(rt0.c2, rt0.c1)))) ISNULL);
SELECT rt0.c4, vt0.c0, v0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.lid FROM rt0 FULL OUTER JOIN vt0 ON TRIM(DISTINCT (- (rt0.c2))) CROSS JOIN v0 ON (NOT ((rt0.c4 IN ())));
SELECT ALL rt0.c4, vt0.c0, v0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.lid FROM rt0 FULL OUTER JOIN vt0 ON TRIM(DISTINCT (- (rt0.c2))) CROSS JOIN v0 ON (NOT ((rt0.c4 IN ()))) WHERE (CAST(rt0.c0 AS REAL)) UNION ALL SELECT rt0.c4, vt0.c0, v0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.lid FROM rt0 FULL OUTER JOIN vt0 ON TRIM(DISTINCT (- (rt0.c2))) CROSS JOIN v0 ON (NOT ((rt0.c4 IN ()))) WHERE ((NOT (CAST(rt0.c0 AS REAL)))) UNION ALL SELECT ALL rt0.c4, vt0.c0, v0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.lid FROM rt0 FULL OUTER JOIN vt0 ON TRIM(DISTINCT (- (rt0.c2))) CROSS JOIN v0 ON (NOT ((rt0.c4 IN ()))) WHERE (((CAST(rt0.c0 AS REAL)) ISNULL));
SELECT rt0.c4, vt0.c0, v0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.lid FROM rt0 FULL OUTER JOIN vt0 ON TRIM(DISTINCT (- (rt0.c2))) CROSS JOIN v0 ON (NOT ((rt0.c4 IN ())));
SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON ((((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c2)))+((~ (rt0.c2))));
SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON ((((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c2)))+((~ (rt0.c2)))) WHERE (((rt0.c3) NOTNULL)) UNION SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON ((((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c2)))+((~ (rt0.c2)))) WHERE ((NOT (((rt0.c3) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON ((((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c2)))+((~ (rt0.c2)))) WHERE (((((rt0.c3) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON ((((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c2)))+((~ (rt0.c2))));
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT ALL vt0.lid FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.lid, vt0.c0)) BETWEEN ((vt0.lid, vt0.lid, vt0.lid)) AND ((vt0.lid, vt0.lid, vt0.lid))) THEN 0.5795628255300456 WHEN (vt0.lid IN ()) THEN CASE vt0.lid  WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid ELSE vt0.c0 END WHEN (~ (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE CASE vt0.lid  WHEN vt0.lid THEN vt0.lid END END) GROUP BY vt0.lid UNION SELECT vt0.lid FROM vt0 WHERE ((NOT (CASE WHEN (((vt0.c0, vt0.lid, vt0.c0)) BETWEEN ((vt0.lid, vt0.lid, vt0.lid)) AND ((vt0.lid, vt0.lid, vt0.lid))) THEN 0.5795628255300456 WHEN (vt0.lid IN ()) THEN CASE vt0.lid  WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid ELSE vt0.c0 END WHEN (~ (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE CASE vt0.lid  WHEN vt0.lid THEN vt0.lid END END))) GROUP BY vt0.lid UNION SELECT vt0.lid FROM vt0 WHERE (((CASE WHEN (((vt0.c0, vt0.lid, vt0.c0)) BETWEEN ((vt0.lid, vt0.lid, vt0.lid)) AND ((vt0.lid, vt0.lid, vt0.lid))) THEN 0.5795628255300456 WHEN (vt0.lid IN ()) THEN CASE vt0.lid  WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid ELSE vt0.c0 END WHEN (~ (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE CASE vt0.lid  WHEN vt0.lid THEN vt0.lid END END) ISNULL)) GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING COUNT(CAST(rt0.c3 AS NUMERIC)) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING (NOT (COUNT(CAST(rt0.c3 AS NUMERIC)))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1 FROM vt0 NOT INDEXED, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING ((COUNT(CAST(rt0.c3 AS NUMERIC))) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING COUNT(CAST(rt0.c3 AS NUMERIC)) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING (NOT (COUNT(CAST(rt0.c3 AS NUMERIC)))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1 FROM vt0 NOT INDEXED, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING ((COUNT(CAST(rt0.c3 AS NUMERIC))) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT vt0.lid, rt0.c3, rt0.c0, rt0.c1 FROM rt0, vt0;
SELECT vt0.lid, rt0.c3, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((- (((rt0.c4)>(rt0.c1))))) UNION ALL SELECT ALL vt0.lid, rt0.c3, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT ((- (((rt0.c4)>(rt0.c1))))))) UNION ALL SELECT ALL vt0.lid, rt0.c3, rt0.c0, rt0.c1 FROM rt0, vt0 NOT INDEXED WHERE ((((- (((rt0.c4)>(rt0.c1))))) ISNULL));
SELECT vt0.lid, rt0.c3, rt0.c0, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((+ (rt0.c0)))OR(0.469090420605384)))AND(LIKELY(rt0.c4)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((((((+ (rt0.c0)))OR(0.469090420605384)))AND(LIKELY(rt0.c4)))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((((+ (rt0.c0)))OR(0.469090420605384)))AND(LIKELY(rt0.c4)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL vt0.c0 FROM v0, vt0, rt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0, rt0 WHERE ((((((vt0.lid)OR(0.5096020886643543)))AND('0.10157963434117667')) IN (((((((((rt0.c0)OR(vt0.lid)))AND(rt0.c0)))OR(v0.c0)))OR(rt0.c2)), (((vt0.c0, vt0.lid, 0Xffffffffc1433b59)) BETWEEN ((rt0.c4, rt0.c4, vt0.lid)) AND ((rt0.c0, rt0.c2, rt0.c3)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0, rt0 WHERE ((NOT ((((((vt0.lid)OR(0.5096020886643543)))AND('0.10157963434117667')) IN (((((((((rt0.c0)OR(vt0.lid)))AND(rt0.c0)))OR(v0.c0)))OR(rt0.c2)), (((vt0.c0, vt0.lid, 0Xffffffffc1433b59)) BETWEEN ((rt0.c4, rt0.c4, vt0.lid)) AND ((rt0.c0, rt0.c2, rt0.c3)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0, rt0 WHERE ((((((((vt0.lid)OR(0.5096020886643543)))AND('0.10157963434117667')) IN (((((((((rt0.c0)OR(vt0.lid)))AND(rt0.c0)))OR(v0.c0)))OR(rt0.c2)), (((vt0.c0, vt0.lid, 0Xffffffffc1433b59)) BETWEEN ((rt0.c4, rt0.c4, vt0.lid)) AND ((rt0.c0, rt0.c2, rt0.c3)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0, rt0 GROUP BY vt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((rt0.c4) IS TRUE) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (((rt0.c4) IS TRUE))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((((rt0.c4) IS TRUE)) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((rt0.c4) IS TRUE) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (((rt0.c4) IS TRUE))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((((rt0.c4) IS TRUE)) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CAST((- (v0.c0)) AS REAL)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CAST((- (v0.c0)) AS REAL)))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CAST((- (v0.c0)) AS REAL)) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0 WHERE ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c4)) IN ())) UNION SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c4)) IN ())))) UNION SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0 WHERE ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c4)) IN ())) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c4, vt0.c0, vt0.lid FROM vt0 RIGHT OUTER JOIN v0 ON ((((vt0.c0) NOTNULL)) NOT NULL) CROSS JOIN rt0 ON ((((((rt0.c3)OR(rt0.c0)))AND(rt0.c4)))*(rt0.c1)) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c4, vt0.c0, vt0.lid;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c4, vt0.c0, vt0.lid FROM vt0 RIGHT OUTER JOIN v0 ON ((((vt0.c0) NOTNULL)) NOT NULL) CROSS JOIN rt0 ON ((((((rt0.c3)OR(rt0.c0)))AND(rt0.c4)))*(rt0.c1)) WHERE (CASE WHEN (((rt0.c1, vt0.lid, rt0.c0))>((rt0.c0, rt0.c3, rt0.c1))) THEN CAST(v0.c0 AS REAL) WHEN rt0.c1 THEN NULL WHEN (NOT (rt0.c0)) THEN LENGTH(rt0.c4) END) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c4, vt0.c0, vt0.lid UNION SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c4, vt0.c0, vt0.lid FROM vt0 RIGHT OUTER JOIN v0 ON ((((vt0.c0) NOTNULL)) NOT NULL) CROSS JOIN rt0 ON ((((((rt0.c3)OR(rt0.c0)))AND(rt0.c4)))*(rt0.c1)) WHERE ((NOT (CASE WHEN (((rt0.c1, vt0.lid, rt0.c0))>((rt0.c0, rt0.c3, rt0.c1))) THEN CAST(v0.c0 AS REAL) WHEN rt0.c1 THEN NULL WHEN (NOT (rt0.c0)) THEN LENGTH(rt0.c4) END))) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c4, vt0.c0, vt0.lid UNION SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c4, vt0.c0, vt0.lid FROM vt0 RIGHT OUTER JOIN v0 ON ((((vt0.c0) NOTNULL)) NOT NULL) CROSS JOIN rt0 ON ((((((rt0.c3)OR(rt0.c0)))AND(rt0.c4)))*(rt0.c1)) WHERE (((CASE WHEN (((rt0.c1, vt0.lid, rt0.c0))>((rt0.c0, rt0.c3, rt0.c1))) THEN CAST(v0.c0 AS REAL) WHEN rt0.c1 THEN NULL WHEN (NOT (rt0.c0)) THEN LENGTH(rt0.c4) END) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c4, vt0.c0, vt0.lid;
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c4, vt0.c0, vt0.lid FROM vt0 RIGHT OUTER JOIN v0 ON ((((vt0.c0) NOTNULL)) NOT NULL) CROSS JOIN rt0 ON ((((((rt0.c3)OR(rt0.c0)))AND(rt0.c4)))*(rt0.c1)) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c4, vt0.c0, vt0.lid;
SELECT v0.c0 FROM v0, rt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, rt0 GROUP BY v0.c0 HAVING ((AVG(rt0.c2))GLOB(COUNT(MAX(GROUP_CONCAT(GROUP_CONCAT(TOTAL(SUM(MAX(GROUP_CONCAT('')))))))))) UNION ALL SELECT ALL v0.c0 FROM v0, rt0 GROUP BY v0.c0 HAVING (NOT (((AVG(rt0.c2))GLOB(COUNT(MAX(GROUP_CONCAT(GROUP_CONCAT(TOTAL(SUM(MAX(GROUP_CONCAT('')))))))))))) UNION ALL SELECT v0.c0 FROM v0, rt0 GROUP BY v0.c0 HAVING ((((AVG(rt0.c2))GLOB(COUNT(MAX(GROUP_CONCAT(GROUP_CONCAT(TOTAL(SUM(MAX(GROUP_CONCAT(''))))))))))) ISNULL);
SELECT * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c0 COLLATE RTRIM)<=(v0.c0))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (((rt0.c0 COLLATE RTRIM)<=(v0.c0))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c0 COLLATE RTRIM)<=(v0.c0))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt0.lid, vt0.c0, v0.c0, rt0.c3 FROM vt0 FULL OUTER JOIN v0 ON TRIM(vt0.lid, v0.c0) COLLATE RTRIM COLLATE RTRIM INNER JOIN rt0 ON CASE rt0.c3  WHEN 0.7375577037235559 THEN ((v0.c0) ISNULL) ELSE (((vt0.lid))>=((v0.c0))) END;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt0.lid, vt0.c0, v0.c0, rt0.c3 FROM vt0 FULL OUTER JOIN v0 ON TRIM(vt0.lid, v0.c0) COLLATE RTRIM COLLATE RTRIM INNER JOIN rt0 ON CASE rt0.c3  WHEN 0.7375577037235559 THEN ((v0.c0) ISNULL) ELSE (((vt0.lid))>=((v0.c0))) END WHERE ((((((((((((rt0.c0))=((vt0.lid))))OR(((v0.c0)-(vt0.lid)))))AND(((((rt0.c1)AND(rt0.c3)))OR(rt0.c0)))))OR(vt0.lid)))AND(((rt0.c3)==(vt0.c0))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt0.lid, vt0.c0, v0.c0, rt0.c3 FROM vt0 FULL OUTER JOIN v0 ON TRIM(vt0.lid, v0.c0) COLLATE RTRIM COLLATE RTRIM INNER JOIN rt0 ON CASE rt0.c3  WHEN 0.7375577037235559 THEN ((v0.c0) ISNULL) ELSE (((vt0.lid))>=((v0.c0))) END WHERE ((NOT ((((((((((((rt0.c0))=((vt0.lid))))OR(((v0.c0)-(vt0.lid)))))AND(((((rt0.c1)AND(rt0.c3)))OR(rt0.c0)))))OR(vt0.lid)))AND(((rt0.c3)=(vt0.c0))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt0.lid, vt0.c0, v0.c0, rt0.c3 FROM vt0 FULL OUTER JOIN v0 ON TRIM(vt0.lid, v0.c0) COLLATE RTRIM COLLATE RTRIM INNER JOIN rt0 ON CASE rt0.c3  WHEN 0.7375577037235559 THEN ((v0.c0) ISNULL) ELSE (((vt0.lid))>=((v0.c0))) END WHERE ((((((((((((((rt0.c0))==((vt0.lid))))OR(((v0.c0)-(vt0.lid)))))AND(((((rt0.c1)AND(rt0.c3)))OR(rt0.c0)))))OR(vt0.lid)))AND(((rt0.c3)=(vt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt0.lid, vt0.c0, v0.c0, rt0.c3 FROM vt0 FULL OUTER JOIN v0 ON TRIM(vt0.lid, v0.c0) COLLATE RTRIM COLLATE RTRIM INNER JOIN rt0 ON CASE rt0.c3  WHEN 0.7375577037235559 THEN ((v0.c0) ISNULL) ELSE (((vt0.lid))>=((v0.c0))) END;
SELECT ALL v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1;
SELECT v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM v0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0)))<>(json_valid(rt0.c1)))) GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 UNION SELECT v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM v0, rt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0)))<>(json_valid(rt0.c1)))))) GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 UNION SELECT ALL v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM v0, rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0)))<>(json_valid(rt0.c1)))) ISNULL)) GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1;
SELECT ALL v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt0.lid FROM vt0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt0.lid;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt0.lid FROM vt0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt0.lid HAVING SUM(GROUP_CONCAT(TOTAL(AVG(COUNT(*))))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt0.lid FROM vt0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt0.lid HAVING (NOT (SUM(GROUP_CONCAT(TOTAL(AVG(COUNT(*))))))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt0.lid FROM vt0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt0.lid HAVING ((SUM(GROUP_CONCAT(TOTAL(AVG(COUNT(*)))))) ISNULL);
SELECT ALL SUM(CAST(((rt0.c0) NOTNULL) AS NUMERIC)) FROM v0, rt0, vt0;
SELECT ALL * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (((((vt0.c0 COLLATE NOCASE)AND(CASE WHEN v0.c0 THEN vt0.c0 END)))OR(((((v0.c0)AND(NULL)))AND(vt0.lid))))) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (((((vt0.c0 COLLATE NOCASE)AND(CASE WHEN v0.c0 THEN vt0.c0 END)))OR(((((v0.c0)AND(NULL)))AND(vt0.lid))))))) UNION ALL SELECT * FROM v0, vt0 WHERE (((((((vt0.c0 COLLATE NOCASE)AND(CASE WHEN v0.c0 THEN vt0.c0 END)))OR(((((v0.c0)AND(NULL)))AND(vt0.lid))))) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT DISTINCT * FROM v0, vt0, rt0 WHERE ((((vt0.c0) IS FALSE) IN (((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c4))))) UNION SELECT DISTINCT * FROM v0, vt0 NOT INDEXED, rt0 WHERE ((NOT ((((vt0.c0) IS FALSE) IN (((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c4))))))) UNION SELECT DISTINCT * FROM v0, vt0, rt0 WHERE ((((((vt0.c0) IS FALSE) IN (((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c4))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT ALL rt0.c3, vt0.c0, rt0.c1, vt0.lid FROM rt0, vt0 GROUP BY rt0.c3, vt0.c0, rt0.c1, vt0.lid;
SELECT rt0.c3, vt0.c0, rt0.c1, vt0.lid FROM rt0, vt0 WHERE (((((((vt0.lid))>((rt0.c3)))))!=((highlight(rt0.c1, vt0.lid, vt0.c0, rt0.c4))))) GROUP BY rt0.c3, vt0.c0, rt0.c1, vt0.lid UNION SELECT rt0.c3, vt0.c0, rt0.c1, vt0.lid FROM rt0, vt0 WHERE ((NOT (((((((vt0.lid))>((rt0.c3)))))!=((highlight(rt0.c1, vt0.lid, vt0.c0, rt0.c4))))))) GROUP BY rt0.c3, vt0.c0, rt0.c1, vt0.lid UNION SELECT rt0.c3, vt0.c0, rt0.c1, vt0.lid FROM rt0, vt0 WHERE (((((((((vt0.lid))>((rt0.c3)))))!=((highlight(rt0.c1, vt0.lid, vt0.c0, rt0.c4))))) ISNULL)) GROUP BY rt0.c3, vt0.c0, rt0.c1, vt0.lid;
SELECT ALL rt0.c3, vt0.c0, rt0.c1, vt0.lid FROM rt0, vt0 GROUP BY rt0.c3, vt0.c0, rt0.c1, vt0.lid;
SELECT ALL v0.c0, vt0.c0, vt0.lid FROM v0, vt0 GROUP BY v0.c0, vt0.c0, vt0.lid;
SELECT ALL v0.c0, vt0.c0, vt0.lid FROM v0, vt0 GROUP BY v0.c0, vt0.c0, vt0.lid HAVING TOTAL(TOTAL(SUM(MAX(v0.c0)))) UNION ALL SELECT ALL v0.c0, vt0.c0, vt0.lid FROM v0, vt0 GROUP BY v0.c0, vt0.c0, vt0.lid HAVING (NOT (TOTAL(TOTAL(SUM(MAX(v0.c0)))))) UNION ALL SELECT v0.c0, vt0.c0, vt0.lid FROM v0, vt0 GROUP BY v0.c0, vt0.c0, vt0.lid HAVING ((TOTAL(TOTAL(SUM(MAX(v0.c0))))) ISNULL);
SELECT * FROM vt0, v0, rt0;
SELECT * FROM vt0, v0, rt0 WHERE ((~ (((rt0.c3)|(rt0.c1))))) UNION ALL SELECT * FROM vt0, v0, rt0 WHERE ((NOT ((~ (((rt0.c3)|(rt0.c1))))))) UNION ALL SELECT * FROM vt0, v0, rt0 WHERE ((((~ (((rt0.c3)|(rt0.c1))))) ISNULL));
SELECT * FROM vt0, v0, rt0;
SELECT DISTINCT rt0.c3, rt0.c4 FROM v0, vt0, rt0;
SELECT DISTINCT rt0.c3, rt0.c4 FROM v0, vt0, rt0 WHERE (json_valid(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) UNION SELECT DISTINCT rt0.c3, rt0.c4 FROM v0, vt0, rt0 WHERE ((NOT (json_valid(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))) UNION SELECT DISTINCT rt0.c3, rt0.c4 FROM v0, vt0, rt0 WHERE (((json_valid(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c4 FROM v0, vt0, rt0;
SELECT rt0.c3, rt0.c0, vt0.lid, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c0, vt0.lid, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, vt0.lid, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) NOT NULL)) GROUP BY rt0.c3, rt0.c0, vt0.lid, rt0.c2, rt0.c1 UNION SELECT rt0.c3, rt0.c0, vt0.lid, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((NOT (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) NOT NULL)))) GROUP BY rt0.c3, rt0.c0, vt0.lid, rt0.c2, rt0.c1 UNION SELECT rt0.c3, rt0.c0, vt0.lid, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) NOT NULL)) ISNULL)) GROUP BY rt0.c3, rt0.c0, vt0.lid, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c0, vt0.lid, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c0, vt0.lid, rt0.c2, rt0.c1;
SELECT rt0.c3, vt0.lid, rt0.c1, rt0.c4, rt0.c2, vt0.c0, rt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c3, vt0.lid, rt0.c1, rt0.c4, rt0.c2, vt0.c0, rt0.c0;
SELECT ALL rt0.c3, vt0.lid, rt0.c1, rt0.c4, rt0.c2, vt0.c0, rt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c3, vt0.lid, rt0.c1, rt0.c4, rt0.c2, vt0.c0, rt0.c0 HAVING MIN(CAST(vt0.c0 AS REAL)) UNION ALL SELECT rt0.c3, vt0.lid, rt0.c1, rt0.c4, rt0.c2, vt0.c0, rt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c3, vt0.lid, rt0.c1, rt0.c4, rt0.c2, vt0.c0, rt0.c0 HAVING (NOT (MIN(CAST(vt0.c0 AS REAL)))) UNION ALL SELECT rt0.c3, vt0.lid, rt0.c1, rt0.c4, rt0.c2, vt0.c0, rt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c3, vt0.lid, rt0.c1, rt0.c4, rt0.c2, vt0.c0, rt0.c0 HAVING ((MIN(CAST(vt0.c0 AS REAL))) ISNULL);
SELECT rt0.c3, vt0.lid, rt0.c1, rt0.c4, rt0.c2, vt0.c0, rt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c3, vt0.lid, rt0.c1, rt0.c4, rt0.c2, vt0.c0, rt0.c0;
SELECT ALL rt0.c3, vt0.lid, rt0.c1, rt0.c4, rt0.c2, vt0.c0, rt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c3, vt0.lid, rt0.c1, rt0.c4, rt0.c2, vt0.c0, rt0.c0 HAVING MIN(CAST(vt0.c0 AS REAL)) UNION ALL SELECT rt0.c3, vt0.lid, rt0.c1, rt0.c4, rt0.c2, vt0.c0, rt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c3, vt0.lid, rt0.c1, rt0.c4, rt0.c2, vt0.c0, rt0.c0 HAVING (NOT (MIN(CAST(vt0.c0 AS REAL)))) UNION ALL SELECT rt0.c3, vt0.lid, rt0.c1, rt0.c4, rt0.c2, vt0.c0, rt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c3, vt0.lid, rt0.c1, rt0.c4, rt0.c2, vt0.c0, rt0.c0 HAVING ((MIN(CAST(vt0.c0 AS REAL))) ISNULL);
SELECT rt0.c3, vt0.lid, rt0.c1, rt0.c4, rt0.c2, vt0.c0, rt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c3, vt0.lid, rt0.c1, rt0.c4, rt0.c2, vt0.c0, rt0.c0;
SELECT ALL rt0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c4 FROM vt0, rt0, v0;
SELECT rt0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c4 FROM vt0, rt0, v0 WHERE ((((((rt0.c0))!=(('687452791'))))IS(((v0.c0) BETWEEN (vt0.c0) AND (vt0.lid))))) UNION ALL SELECT rt0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c4 FROM vt0, rt0, v0 WHERE ((NOT ((((((rt0.c0))<>(('687452791'))))IS(((v0.c0) BETWEEN (vt0.c0) AND (vt0.lid))))))) UNION ALL SELECT rt0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c4 FROM vt0, rt0, v0 WHERE ((((((((rt0.c0))<>(('687452791'))))IS(((v0.c0) BETWEEN (vt0.c0) AND (vt0.lid))))) ISNULL));
SELECT ALL rt0.c0, vt0.c0, v0.c0, rt0.c3, rt0.c4 FROM vt0, rt0, v0;
SELECT DISTINCT vt0.lid FROM vt0, v0;
SELECT DISTINCT vt0.lid FROM vt0, v0 WHERE (CASE CAST(x'9d56' AS TEXT)  WHEN x'' THEN CAST(v0.c0 AS NUMERIC) ELSE (+ (vt0.c0)) END) UNION SELECT DISTINCT vt0.lid FROM vt0, v0 WHERE ((NOT (CASE CAST(x'9d56' AS TEXT)  WHEN x'' THEN CAST(v0.c0 AS NUMERIC) ELSE (+ (vt0.c0)) END))) UNION SELECT DISTINCT vt0.lid FROM vt0, v0 WHERE (((CASE CAST(x'9d56' AS TEXT)  WHEN x'' THEN CAST(v0.c0 AS NUMERIC) ELSE (+ (vt0.c0)) END) ISNULL));
SELECT DISTINCT vt0.lid FROM vt0, v0;
SELECT ALL vt0.lid, rt0.c4, rt0.c3, rt0.c0, vt0.c0, rt0.c1, v0.c0 FROM vt0, rt0 RIGHT OUTER JOIN v0 ON ((((vt0.lid)-(rt0.c3))) ISNULL) GROUP BY vt0.lid, rt0.c4, rt0.c3, rt0.c0, vt0.c0, rt0.c1, v0.c0;
SELECT vt0.lid, rt0.c4, rt0.c3, rt0.c0, vt0.c0, rt0.c1, v0.c0 FROM vt0, rt0 RIGHT OUTER JOIN v0 ON ((((vt0.lid)-(rt0.c3))) ISNULL) WHERE (CAST(((rt0.c4)OR(rt0.c1)) AS TEXT)) GROUP BY vt0.lid, rt0.c4, rt0.c3, rt0.c0, vt0.c0, rt0.c1, v0.c0 UNION SELECT vt0.lid, rt0.c4, rt0.c3, rt0.c0, vt0.c0, rt0.c1, v0.c0 FROM vt0, rt0 RIGHT OUTER JOIN v0 ON ((((vt0.lid)-(rt0.c3))) ISNULL) WHERE ((NOT (CAST(((rt0.c4)OR(rt0.c1)) AS TEXT)))) GROUP BY vt0.lid, rt0.c4, rt0.c3, rt0.c0, vt0.c0, rt0.c1, v0.c0 UNION SELECT vt0.lid, rt0.c4, rt0.c3, rt0.c0, vt0.c0, rt0.c1, v0.c0 FROM vt0, rt0 RIGHT OUTER JOIN v0 ON ((((vt0.lid)-(rt0.c3))) ISNULL) WHERE (((CAST(((rt0.c4)OR(rt0.c1)) AS TEXT)) ISNULL)) GROUP BY vt0.lid, rt0.c4, rt0.c3, rt0.c0, vt0.c0, rt0.c1, v0.c0;
SELECT ALL vt0.lid, rt0.c4, rt0.c3, rt0.c0, vt0.c0, rt0.c1, v0.c0 FROM vt0, rt0 RIGHT OUTER JOIN v0 ON ((((vt0.lid)-(rt0.c3))) ISNULL) GROUP BY vt0.lid, rt0.c4, rt0.c3, rt0.c0, vt0.c0, rt0.c1, v0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0, rt0.c0;
SELECT vt0.c0, rt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0, rt0.c0 HAVING ((MAX(MAX(vt0.lid)))>=(((SUM(rt0.c1)) BETWEEN (rt0.c0) AND (GROUP_CONCAT(TOTAL(rt0.c4)))))) UNION ALL SELECT vt0.c0, rt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0, rt0.c0 HAVING (NOT (((MAX(MAX(vt0.lid)))>=(((SUM(rt0.c1)) BETWEEN (rt0.c0) AND (GROUP_CONCAT(TOTAL(rt0.c4)))))))) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0, rt0.c0 HAVING ((((MAX(MAX(vt0.lid)))>=(((SUM(rt0.c1)) BETWEEN (rt0.c0) AND (GROUP_CONCAT(TOTAL(rt0.c4))))))) ISNULL);
SELECT ALL vt0.c0, vt0.lid, v0.c0 FROM v0, vt0;
SELECT ALL vt0.c0, vt0.lid, v0.c0 FROM v0, vt0 WHERE (CAST((((vt0.c0))<>((0.21345427117949323))) AS BLOB)) UNION ALL SELECT vt0.c0, vt0.lid, v0.c0 FROM v0, vt0 WHERE ((NOT (CAST((((vt0.c0))!=((0.21345427117949323))) AS BLOB)))) UNION ALL SELECT ALL vt0.c0, vt0.lid, v0.c0 FROM v0, vt0 WHERE (((CAST((((vt0.c0))<>((0.21345427117949323))) AS BLOB)) ISNULL));
SELECT ALL vt0.c0, vt0.lid, v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.lid FROM v0 LEFT OUTER JOIN vt0 ON vt0.c0;
SELECT DISTINCT v0.c0, vt0.lid FROM v0 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (CAST(((((((((vt0.c0)AND(vt0.lid)))AND(vt0.lid)))AND(vt0.lid)))AND(v0.c0)) AS REAL)) UNION SELECT DISTINCT v0.c0, vt0.lid FROM v0 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE ((NOT (CAST(((((((((vt0.c0)AND(vt0.lid)))AND(vt0.lid)))AND(vt0.lid)))AND(v0.c0)) AS REAL)))) UNION SELECT DISTINCT v0.c0, vt0.lid FROM v0 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (((CAST(((((((((vt0.c0)AND(vt0.lid)))AND(vt0.lid)))AND(vt0.lid)))AND(v0.c0)) AS REAL)) ISNULL));
SELECT DISTINCT v0.c0, vt0.lid FROM v0 LEFT OUTER JOIN vt0 ON vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 WHERE ((((vt0.c0)<(vt0.lid)) IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT ((((vt0.c0)<(vt0.lid)) IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE ((((((vt0.c0)<(vt0.lid)) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.lid, vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.lid, vt0.c0, v0.c0;
SELECT vt0.lid, vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.lid, vt0.c0, v0.c0 HAVING MIN(AVG(AVG(vt0.c0))) UNION ALL SELECT vt0.lid, vt0.c0, v0.c0 FROM vt0 NOT INDEXED, v0 GROUP BY vt0.lid, vt0.c0, v0.c0 HAVING (NOT (MIN(AVG(AVG(vt0.c0))))) UNION ALL SELECT ALL vt0.lid, vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.lid, vt0.c0, v0.c0 HAVING ((MIN(AVG(AVG(vt0.c0)))) ISNULL);
SELECT TOTAL(((CAST(vt0.lid AS INTEGER)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (CAST(vt0.lid AS TEXT)))) FROM vt0;
SELECT rt0.c0, rt0.c4, v0.c0 FROM rt0, v0;
SELECT ALL rt0.c0, rt0.c4, v0.c0 FROM rt0, v0 WHERE ((((CAST(0.1444429973378505 AS BLOB), CAST(rt0.c1 AS REAL), (- (rt0.c2))))<>((((((v0.c0)OR(rt0.c3)))OR(rt0.c1)), LIKELY(rt0.c4), TRIM(rt0.c1, rt0.c3))))) UNION ALL SELECT ALL rt0.c0, rt0.c4, v0.c0 FROM rt0, v0 WHERE ((NOT ((((CAST(0.1444429973378505 AS BLOB), CAST(rt0.c1 AS REAL), (- (rt0.c2))))!=((((((v0.c0)OR(rt0.c3)))OR(rt0.c1)), LIKELY(rt0.c4), TRIM(rt0.c1, rt0.c3))))))) UNION ALL SELECT ALL rt0.c0, rt0.c4, v0.c0 FROM rt0, v0 WHERE ((((((CAST(0.1444429973378505 AS BLOB), CAST(rt0.c1 AS REAL), (- (rt0.c2))))<>((((((v0.c0)OR(rt0.c3)))OR(rt0.c1)), LIKELY(rt0.c4), TRIM(rt0.c1, rt0.c3))))) ISNULL));
SELECT rt0.c0, rt0.c4, v0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((('df') IS FALSE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((('df') IS FALSE)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((('df') IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c0, vt0.lid, rt0.c3 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c0, vt0.lid, rt0.c3;
SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c0, vt0.lid, rt0.c3 FROM rt0, v0, vt0 WHERE (CASE WHEN ((rt0.c2) NOTNULL) THEN (NOT (vt0.lid)) END) GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c0, vt0.lid, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c0, vt0.lid, rt0.c3 FROM rt0, v0, vt0 WHERE ((NOT (CASE WHEN ((rt0.c2) NOTNULL) THEN (NOT (vt0.lid)) END))) GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c0, vt0.lid, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c0, vt0.lid, rt0.c3 FROM rt0, v0, vt0 WHERE (((CASE WHEN ((rt0.c2) NOTNULL) THEN (NOT (vt0.lid)) END) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c0, vt0.lid, rt0.c3;
SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c0, vt0.lid, rt0.c3 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c0, vt0.lid, rt0.c3;
SELECT rt0.c4, v0.c0, rt0.c2, vt0.c0, vt0.lid, rt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c2, vt0.c0, vt0.lid, rt0.c0, rt0.c3;
SELECT rt0.c4, v0.c0, rt0.c2, vt0.c0, vt0.lid, rt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c2, vt0.c0, vt0.lid, rt0.c0, rt0.c3 HAVING (((rt0.c1)) NOT BETWEEN ((COUNT(*))) AND ((v0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c2, vt0.c0, vt0.lid, rt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c2, vt0.c0, vt0.lid, rt0.c0, rt0.c3 HAVING (NOT ((((rt0.c1)) NOT BETWEEN ((COUNT(*))) AND ((v0.c0 COLLATE NOCASE))))) UNION ALL SELECT rt0.c4, v0.c0, rt0.c2, vt0.c0, vt0.lid, rt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c2, vt0.c0, vt0.lid, rt0.c0, rt0.c3 HAVING (((((rt0.c1)) NOT BETWEEN ((COUNT(*))) AND ((v0.c0 COLLATE NOCASE)))) ISNULL);
SELECT rt0.c4, v0.c0, rt0.c2, vt0.c0, vt0.lid, rt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c2, vt0.c0, vt0.lid, rt0.c0, rt0.c3;
SELECT rt0.c4, v0.c0, rt0.c2, vt0.c0, vt0.lid, rt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c2, vt0.c0, vt0.lid, rt0.c0, rt0.c3 HAVING (((rt0.c1)) NOT BETWEEN ((COUNT(*))) AND ((v0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c2, vt0.c0, vt0.lid, rt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c2, vt0.c0, vt0.lid, rt0.c0, rt0.c3 HAVING (NOT ((((rt0.c1)) NOT BETWEEN ((COUNT(*))) AND ((v0.c0 COLLATE NOCASE))))) UNION ALL SELECT rt0.c4, v0.c0, rt0.c2, vt0.c0, vt0.lid, rt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c2, vt0.c0, vt0.lid, rt0.c0, rt0.c3 HAVING (((((rt0.c1)) NOT BETWEEN ((COUNT(*))) AND ((v0.c0 COLLATE NOCASE)))) ISNULL);
SELECT rt0.c4, v0.c0, rt0.c2, vt0.c0, vt0.lid, rt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c2, vt0.c0, vt0.lid, rt0.c0, rt0.c3;
SELECT ALL vt0.lid FROM vt0;
SELECT ALL vt0.lid FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)OR(vt0.lid COLLATE BINARY))) UNION ALL SELECT ALL vt0.lid FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM)OR(vt0.lid COLLATE BINARY))))) UNION ALL SELECT ALL vt0.lid FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)OR(vt0.lid COLLATE BINARY))) ISNULL));
SELECT ALL vt0.lid FROM vt0;
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((((0.9834805630532291))<>((rt0.c4)))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((NOT ((((0.9834805630532291))!=((rt0.c4)))))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((((((0.9834805630532291))<>((rt0.c4)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT vt0.lid, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.lid, vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.lid, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((((rt0.c3) NOT BETWEEN (vt0.lid) AND (vt0.c0)))&(((rt0.c4) IS FALSE)))) GROUP BY vt0.lid, vt0.c0, rt0.c2, rt0.c0, rt0.c1 UNION SELECT vt0.lid, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT (((((rt0.c3) NOT BETWEEN (vt0.lid) AND (vt0.c0)))&(((rt0.c4) IS FALSE)))))) GROUP BY vt0.lid, vt0.c0, rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL vt0.lid, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((((((rt0.c3) NOT BETWEEN (vt0.lid) AND (vt0.c0)))&(((rt0.c4) IS FALSE)))) ISNULL)) GROUP BY vt0.lid, vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT vt0.lid, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.lid, vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(COUNT(v0.c0))) BETWEEN (((v0.c0) IS TRUE)) AND (((SUM(v0.c0)) BETWEEN (TOTAL(SUM(COUNT(*)))) AND (v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((MIN(COUNT(v0.c0))) BETWEEN (((v0.c0) IS TRUE)) AND (((SUM(v0.c0)) BETWEEN (TOTAL(SUM(COUNT(*)))) AND (v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((MIN(COUNT(v0.c0))) BETWEEN (((v0.c0) IS TRUE)) AND (((SUM(v0.c0)) BETWEEN (TOTAL(SUM(COUNT(*)))) AND (v0.c0))))) ISNULL);
SELECT rt0.c1, vt0.c0, rt0.c4, rt0.c3 FROM rt0, vt0, v0;
SELECT rt0.c1, vt0.c0, rt0.c4, rt0.c3 FROM rt0, vt0, v0 WHERE (((vt0.c0)GLOB(x'b074'))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c4, rt0.c3 FROM rt0, vt0, v0 WHERE ((NOT (((vt0.c0)GLOB(x'b074'))))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c4, rt0.c3 FROM rt0, vt0, v0 WHERE (((((vt0.c0)GLOB(x'b074'))) ISNULL));
SELECT rt0.c1, vt0.c0, rt0.c4, rt0.c3 FROM rt0, vt0, v0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0 NOT INDEXED, rt0 WHERE (rt0.c2 COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (rt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((rt0.c2 COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c1 FROM rt0, vt0, v0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt0, v0 WHERE (CAST(((rt0.c1) IS TRUE) AS REAL)) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, vt0, v0 WHERE ((NOT (CAST(((rt0.c1) IS TRUE) AS REAL)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, vt0, v0 WHERE (((CAST(((rt0.c1) IS TRUE) AS REAL)) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0, v0 GROUP BY rt0.c1;
SELECT ALL rt0.c1, rt0.c3, vt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c3, vt0.c0;
SELECT rt0.c1, rt0.c3, vt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c3, vt0.c0 HAVING (MIN(rt0.c0) IN ()) UNION ALL SELECT ALL rt0.c1, rt0.c3, vt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c3, vt0.c0 HAVING (NOT ((MIN(rt0.c0) IN ()))) UNION ALL SELECT rt0.c1, rt0.c3, vt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c3, vt0.c0 HAVING (((MIN(rt0.c0) IN ())) ISNULL);
SELECT ALL rt0.c1, rt0.c3, vt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c3, vt0.c0;
SELECT rt0.c1, rt0.c3, vt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c3, vt0.c0 HAVING (MIN(rt0.c0) IN ()) UNION ALL SELECT ALL rt0.c1, rt0.c3, vt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c3, vt0.c0 HAVING (NOT ((MIN(rt0.c0) IN ()))) UNION ALL SELECT rt0.c1, rt0.c3, vt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c3, vt0.c0 HAVING (((MIN(rt0.c0) IN ())) ISNULL);
SELECT ALL rt0.c1, rt0.c3, vt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c3, vt0.c0;
SELECT rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0, vt0;
SELECT ALL rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0, vt0 WHERE ((LOWER(vt0.c0) IN ())) UNION ALL SELECT rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0, vt0 WHERE ((NOT ((LOWER(vt0.c0) IN ())))) UNION ALL SELECT ALL rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0, vt0 WHERE ((((LOWER(vt0.c0) IN ())) ISNULL));
SELECT rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0, vt0;
SELECT DISTINCT * FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c3))) NOTNULL);
SELECT DISTINCT * FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c3))) NOTNULL) WHERE ((((((rt0.c0)>>(rt0.c3)), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END, LIKELY(DISTINCT rt0.c3)))==(((rt0.c3 IN ()), ((rt0.c3)>>(rt0.c1)), (rt0.c4 IN ()))))) UNION SELECT DISTINCT * FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c3))) NOTNULL) WHERE ((NOT ((((((rt0.c0)>>(rt0.c3)), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END, LIKELY(DISTINCT rt0.c3)))=(((rt0.c3 IN ()), ((rt0.c3)>>(rt0.c1)), (rt0.c4 IN ()))))))) UNION SELECT DISTINCT * FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c3))) NOTNULL) WHERE ((((((((rt0.c0)>>(rt0.c3)), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END, LIKELY(DISTINCT rt0.c3)))==(((rt0.c3 IN ()), ((rt0.c3)>>(rt0.c1)), (rt0.c4 IN ()))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c3))) NOTNULL);
SELECT vt0.c0, v0.c0, vt0.lid FROM vt0, v0 GROUP BY vt0.c0, v0.c0, vt0.lid;
SELECT ALL vt0.c0, v0.c0, vt0.lid FROM vt0, v0 WHERE (TRIM((vt0.lid IN (vt0.lid)), ((vt0.c0) IS FALSE))) GROUP BY vt0.c0, v0.c0, vt0.lid UNION SELECT vt0.c0, v0.c0, vt0.lid FROM vt0, v0 WHERE ((NOT (TRIM((vt0.lid IN (vt0.lid)), ((vt0.c0) IS FALSE))))) GROUP BY vt0.c0, v0.c0, vt0.lid UNION SELECT ALL vt0.c0, v0.c0, vt0.lid FROM vt0, v0 WHERE (((TRIM((vt0.lid IN (vt0.lid)), ((vt0.c0) IS FALSE))) ISNULL)) GROUP BY vt0.c0, v0.c0, vt0.lid;
SELECT vt0.c0, v0.c0, vt0.lid FROM vt0, v0 GROUP BY vt0.c0, v0.c0, vt0.lid;
SELECT ALL rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0 HAVING (MAX(GROUP_CONCAT(MAX(rt0.c0))) IN (rt0.c3)) UNION ALL SELECT ALL rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0 HAVING (NOT ((MAX(GROUP_CONCAT(MAX(rt0.c0))) IN (rt0.c3)))) UNION ALL SELECT rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0 HAVING (((MAX(GROUP_CONCAT(MAX(rt0.c0))) IN (rt0.c3))) ISNULL);
SELECT ALL v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM v0, rt0;
SELECT ALL v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM v0, rt0 WHERE (((((rt0.c2) ISNULL))IS NOT(0.39334024342050156))) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM v0, rt0 WHERE ((NOT (((((rt0.c2) ISNULL))IS NOT(0.39334024342050156))))) UNION ALL SELECT v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM v0, rt0 WHERE (((((((rt0.c2) ISNULL))IS NOT(0.39334024342050156))) ISNULL));
SELECT ALL v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM v0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4, vt0.lid FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4, vt0.lid;
SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4, vt0.lid FROM vt0, rt0 WHERE (((((((((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2)))AND(((NULL)=(vt0.c0)))))OR(rt0.c1 COLLATE BINARY)))OR((((vt0.lid))==((vt0.c0))))))AND(((rt0.c1)IS(rt0.c0))))) GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4, vt0.lid UNION SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4, vt0.lid FROM vt0, rt0 WHERE ((NOT (((((((((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2)))AND(((NULL)==(vt0.c0)))))OR(rt0.c1 COLLATE BINARY)))OR((((vt0.lid))==((vt0.c0))))))AND(((rt0.c1)IS(rt0.c0))))))) GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4, vt0.lid UNION SELECT rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4, vt0.lid FROM vt0, rt0 WHERE (((((((((((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2)))AND(((NULL)==(vt0.c0)))))OR(rt0.c1 COLLATE BINARY)))OR((((vt0.lid))==((vt0.c0))))))AND(((rt0.c1)IS(rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4, vt0.lid;
SELECT rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4, vt0.lid FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4, vt0.lid;
SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 HAVING ((MAX(COUNT(MIN(rt0.c2)))) NOTNULL) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 HAVING (NOT (((MAX(COUNT(MIN(rt0.c2)))) NOTNULL))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 HAVING ((((MAX(COUNT(MIN(rt0.c2)))) NOTNULL)) ISNULL);
SELECT rt0.c2, rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c0, vt0.c0 FROM vt0, v0, rt0;
SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c0, vt0.c0 FROM vt0, v0, rt0 WHERE (x'') UNION ALL SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c0, vt0.c0 FROM vt0, v0, rt0 WHERE ((NOT (x''))) UNION ALL SELECT rt0.c2, rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c0, vt0.c0 FROM vt0, v0, rt0 WHERE (((x'') ISNULL));
SELECT rt0.c2, rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c0, vt0.c0 FROM vt0, v0, rt0;
SELECT DISTINCT rt0.c1, vt0.lid, rt0.c0, rt0.c4 FROM vt0, rt0, v0;
SELECT DISTINCT rt0.c1, vt0.lid, rt0.c0, rt0.c4 FROM vt0, rt0, v0 WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN ('k<d~egd') AND (0.7763244305047)) THEN ((rt0.c2)||(vt0.lid)) WHEN NULL THEN vt0.c0 WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))) THEN ABS(vt0.c0) END) UNION SELECT DISTINCT rt0.c1, vt0.lid, rt0.c0, rt0.c4 FROM vt0, rt0, v0 WHERE ((NOT (CASE WHEN ((rt0.c2) NOT BETWEEN ('k<d~egd') AND (0.7763244305047)) THEN ((rt0.c2)||(vt0.lid)) WHEN NULL THEN vt0.c0 WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))) THEN ABS(vt0.c0) END))) UNION SELECT DISTINCT rt0.c1, vt0.lid, rt0.c0, rt0.c4 FROM vt0, rt0, v0 WHERE (((CASE WHEN ((rt0.c2) NOT BETWEEN ('k<d~egd') AND (0.7763244305047)) THEN ((rt0.c2)||(vt0.lid)) WHEN NULL THEN vt0.c0 WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))) THEN ABS(vt0.c0) END) ISNULL));
SELECT DISTINCT rt0.c1, vt0.lid, rt0.c0, rt0.c4 FROM vt0, rt0, v0;
SELECT rt0.c3 FROM vt0, rt0, v0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM vt0, rt0, v0 WHERE (0Xffffffffe90bf786) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM vt0, rt0, v0 WHERE ((NOT (0Xffffffffe90bf786))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM vt0, rt0, v0 WHERE (((0Xffffffffe90bf786) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM vt0, rt0, v0 GROUP BY rt0.c3;
SELECT ALL v0.c0, rt0.c0, vt0.lid, rt0.c3, rt0.c4, vt0.c0, rt0.c1 FROM vt0 CROSS JOIN v0 ON CAST(((v0.c0)-(rt0.c3)) AS TEXT) FULL OUTER JOIN rt0 ON ((rt0.c2)/((((vt0.lid, rt0.c4, rt0.c1)) NOT BETWEEN ((v0.c0, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c3, rt0.c3))))) GROUP BY v0.c0, rt0.c0, vt0.lid, rt0.c3, rt0.c4, vt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0;
SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE ((((rt0.c4) NOTNULL) IN ())) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT ((((rt0.c4) NOTNULL) IN ())))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE ((((((rt0.c4) NOTNULL) IN ())) ISNULL));
SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT vt0.c0, v0.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM v0 FULL OUTER JOIN vt0 ON vt0.lid INNER JOIN rt0 ON (vt0.c0 COLLATE RTRIM IN ());
SELECT DISTINCT vt0.c0, v0.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM v0 FULL OUTER JOIN vt0 ON vt0.lid INNER JOIN rt0 ON (vt0.c0 COLLATE RTRIM IN ()) WHERE (CASE WHEN ((rt0.c1)GLOB(rt0.c0)) THEN CASE WHEN rt0.c4 THEN rt0.c1 WHEN '0.6537746815232799' THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 ELSE vt0.c0 END ELSE (((rt0.c2, rt0.c1, vt0.lid))<=((rt0.c3, NULL, v0.c0))) END) UNION SELECT DISTINCT vt0.c0, v0.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM v0 FULL OUTER JOIN vt0 ON vt0.lid INNER JOIN rt0 ON (vt0.c0 COLLATE RTRIM IN ()) WHERE ((NOT (CASE WHEN ((rt0.c1)GLOB(rt0.c0)) THEN CASE WHEN rt0.c4 THEN rt0.c1 WHEN '0.6537746815232799' THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 ELSE vt0.c0 END ELSE (((rt0.c2, rt0.c1, vt0.lid))<=((rt0.c3, NULL, v0.c0))) END))) UNION SELECT DISTINCT vt0.c0, v0.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM v0 FULL OUTER JOIN vt0 ON vt0.lid INNER JOIN rt0 ON (vt0.c0 COLLATE RTRIM IN ()) WHERE (((CASE WHEN ((rt0.c1)GLOB(rt0.c0)) THEN CASE WHEN rt0.c4 THEN rt0.c1 WHEN '0.6537746815232799' THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 ELSE vt0.c0 END ELSE (((rt0.c2, rt0.c1, vt0.lid))<=((rt0.c3, NULL, v0.c0))) END) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM v0 FULL OUTER JOIN vt0 ON vt0.lid INNER JOIN rt0 ON (vt0.c0 COLLATE RTRIM IN ());
SELECT ALL rt0.c1, rt0.c3, vt0.lid, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c0 COLLATE NOCASE)OR(CAST(rt0.c2 AS BLOB))))AND(rt0.c2 COLLATE RTRIM)) GROUP BY rt0.c1, rt0.c3, vt0.lid, vt0.c0;
SELECT ALL rt0.c1, rt0.c3, vt0.lid, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c0 COLLATE NOCASE)OR(CAST(rt0.c2 AS BLOB))))AND(rt0.c2 COLLATE RTRIM)) WHERE ((((')*i\<mmh'))<=((((rt0.c0)<(rt0.c3)))))) GROUP BY rt0.c1, rt0.c3, vt0.lid, vt0.c0 UNION SELECT rt0.c1, rt0.c3, vt0.lid, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c0 COLLATE NOCASE)OR(CAST(rt0.c2 AS BLOB))))AND(rt0.c2 COLLATE RTRIM)) WHERE ((NOT ((((')*i\<mmh'))<=((((rt0.c0)<(rt0.c3)))))))) GROUP BY rt0.c1, rt0.c3, vt0.lid, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c3, vt0.lid, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c0 COLLATE NOCASE)OR(CAST(rt0.c2 AS BLOB))))AND(rt0.c2 COLLATE RTRIM)) WHERE ((((((')*i\<mmh'))<=((((rt0.c0)<(rt0.c3)))))) ISNULL)) GROUP BY rt0.c1, rt0.c3, vt0.lid, vt0.c0;
SELECT ALL rt0.c1, rt0.c3, vt0.lid, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c0 COLLATE NOCASE)OR(CAST(rt0.c2 AS BLOB))))AND(rt0.c2 COLLATE RTRIM)) GROUP BY rt0.c1, rt0.c3, vt0.lid, vt0.c0;
SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0;
SELECT v0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 HAVING COUNT(MAX(rt0.c1)) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 HAVING (NOT (COUNT(MAX(rt0.c1)))) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 HAVING ((COUNT(MAX(rt0.c1))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE 0.5801220474898191  WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE 0.5801220474898191  WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CASE 0.5801220474898191  WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT vt0.lid, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.lid, vt0.c0 FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS TEXT)) UNION SELECT DISTINCT vt0.lid, vt0.c0 FROM vt0 WHERE ((NOT (CAST((NOT (vt0.c0)) AS TEXT)))) UNION SELECT DISTINCT vt0.lid, vt0.c0 FROM vt0 WHERE (((CAST((NOT (vt0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT vt0.lid, vt0.c0 FROM vt0;
SELECT ALL rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4;
SELECT ALL rt0.c3, rt0.c0, rt0.c4 FROM rt0 WHERE ((((('vX{-\nSAbB')||(0.4663971108725894))) BETWEEN (rt0.c2) AND (((rt0.c4) BETWEEN (1.223854699E9) AND (rt0.c0))))) GROUP BY rt0.c3, rt0.c0, rt0.c4 UNION SELECT rt0.c3, rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT ((((('vX{-\nSAbB')||(0.4663971108725894))) BETWEEN (rt0.c2) AND (((rt0.c4) BETWEEN (1.223854699E9) AND (rt0.c0))))))) GROUP BY rt0.c3, rt0.c0, rt0.c4 UNION SELECT rt0.c3, rt0.c0, rt0.c4 FROM rt0 WHERE ((((((('vX{-\nSAbB')||(0.4663971108725894))) BETWEEN (rt0.c2) AND (((rt0.c4) BETWEEN (1.223854699E9) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c4;
SELECT ALL rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4;
SELECT ALL v0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c4;
SELECT v0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c4 HAVING TOTAL(GROUP_CONCAT(rt0.c1)) UNION ALL SELECT v0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c4 HAVING (NOT (TOTAL(GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c4 HAVING ((TOTAL(GROUP_CONCAT(rt0.c1))) ISNULL);
SELECT ALL vt0.lid, rt0.c0, rt0.c4, rt0.c3 FROM rt0, vt0, v0;
SELECT ALL vt0.lid, rt0.c0, rt0.c4, rt0.c3 FROM rt0, vt0, v0 WHERE (((((((rt0.c2)AND(vt0.lid)))AND(x'df34' COLLATE NOCASE)))OR(((vt0.lid) IS FALSE)))) UNION ALL SELECT ALL vt0.lid, rt0.c0, rt0.c4, rt0.c3 FROM rt0, vt0 NOT INDEXED, v0 WHERE ((NOT (((((((rt0.c2)AND(vt0.lid)))AND(x'df34' COLLATE NOCASE)))OR(((vt0.lid) IS FALSE)))))) UNION ALL SELECT ALL vt0.lid, rt0.c0, rt0.c4, rt0.c3 FROM rt0, vt0, v0 WHERE (((((((((rt0.c2)AND(vt0.lid)))AND(x'df34' COLLATE NOCASE)))OR(((vt0.lid) IS FALSE)))) ISNULL));
SELECT ALL vt0.lid, rt0.c0, rt0.c4, rt0.c3 FROM rt0, vt0, v0;
SELECT DISTINCT vt0.lid, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.lid, vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN vt0.lid THEN vt0.c0 END))) UNION SELECT DISTINCT vt0.lid, vt0.c0 FROM vt0 WHERE ((NOT ((NOT (CASE WHEN vt0.lid THEN vt0.c0 END))))) UNION SELECT DISTINCT vt0.lid, vt0.c0 FROM vt0 WHERE ((((NOT (CASE WHEN vt0.lid THEN vt0.c0 END))) ISNULL));
SELECT DISTINCT vt0.lid, vt0.c0 FROM vt0;
SELECT ALL rt0.c4, rt0.c2, rt0.c3, v0.c0, rt0.c1, rt0.c0 FROM v0 INNER JOIN rt0 ON CASE SQLITE_COMPILEOPTION_USED(-642502828)  WHEN TRIM(rt0.c1, v0.c0) THEN (((rt0.c0, rt0.c2, rt0.c1))=((v0.c0, rt0.c1, rt0.c3))) WHEN ((rt0.c2) NOTNULL) THEN v0.c0 WHEN ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c4)) THEN v0.c0 COLLATE BINARY ELSE CASE WHEN rt0.c3 THEN v0.c0 WHEN rt0.c4 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 END END GROUP BY rt0.c4, rt0.c2, rt0.c3, v0.c0, rt0.c1, rt0.c0;
SELECT rt0.c4, rt0.c2, rt0.c3, v0.c0, rt0.c1, rt0.c0 FROM v0 INNER JOIN rt0 ON CASE SQLITE_COMPILEOPTION_USED(-642502828)  WHEN TRIM(rt0.c1, v0.c0) THEN (((rt0.c0, rt0.c2, rt0.c1))=((v0.c0, rt0.c1, rt0.c3))) WHEN ((rt0.c2) NOTNULL) THEN v0.c0 WHEN ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c4)) THEN v0.c0 COLLATE BINARY ELSE CASE WHEN rt0.c3 THEN v0.c0 WHEN rt0.c4 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 END END WHERE (NULLIF(((-6.1118957E8)<<(v0.c0)), (((v0.c0)) BETWEEN ((rt0.c1)) AND ((NULL))))) GROUP BY rt0.c4, rt0.c2, rt0.c3, v0.c0, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c2, rt0.c3, v0.c0, rt0.c1, rt0.c0 FROM v0 INNER JOIN rt0 ON CASE SQLITE_COMPILEOPTION_USED(-642502828)  WHEN TRIM(rt0.c1, v0.c0) THEN (((rt0.c0, rt0.c2, rt0.c1))==((v0.c0, rt0.c1, rt0.c3))) WHEN ((rt0.c2) NOTNULL) THEN v0.c0 WHEN ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c4)) THEN v0.c0 COLLATE BINARY ELSE CASE WHEN rt0.c3 THEN v0.c0 WHEN rt0.c4 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 END END WHERE ((NOT (NULLIF(((-6.1118957E8)<<(v0.c0)), (((v0.c0)) BETWEEN ((rt0.c1)) AND ((NULL))))))) GROUP BY rt0.c4, rt0.c2, rt0.c3, v0.c0, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c2, rt0.c3, v0.c0, rt0.c1, rt0.c0 FROM v0 INNER JOIN rt0 ON CASE SQLITE_COMPILEOPTION_USED(-642502828)  WHEN TRIM(rt0.c1, v0.c0) THEN (((rt0.c0, rt0.c2, rt0.c1))=((v0.c0, rt0.c1, rt0.c3))) WHEN ((rt0.c2) NOTNULL) THEN v0.c0 WHEN ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c4)) THEN v0.c0 COLLATE BINARY ELSE CASE WHEN rt0.c3 THEN v0.c0 WHEN rt0.c4 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 END END WHERE (((NULLIF(((-6.1118957E8)<<(v0.c0)), (((v0.c0)) BETWEEN ((rt0.c1)) AND ((NULL))))) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c3, v0.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c4, rt0.c2, rt0.c3, v0.c0, rt0.c1, rt0.c0 FROM v0 INNER JOIN rt0 ON CASE SQLITE_COMPILEOPTION_USED(-642502828)  WHEN TRIM(rt0.c1, v0.c0) THEN (((rt0.c0, rt0.c2, rt0.c1))=((v0.c0, rt0.c1, rt0.c3))) WHEN ((rt0.c2) NOTNULL) THEN v0.c0 WHEN ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c4)) THEN v0.c0 COLLATE BINARY ELSE CASE WHEN rt0.c3 THEN v0.c0 WHEN rt0.c4 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 END END GROUP BY rt0.c4, rt0.c2, rt0.c3, v0.c0, rt0.c1, rt0.c0;
SELECT rt0.c4 FROM rt0, vt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0, vt0 GROUP BY rt0.c4 HAVING ((((((((COUNT(COUNT(*)))AND((TOTAL(SUM(rt0.c0)) IN ()))))OR(COUNT(*) COLLATE BINARY)))OR((NULL IN ()))))OR(COUNT(*))) UNION ALL SELECT rt0.c4 FROM rt0, vt0 GROUP BY rt0.c4 HAVING (NOT (((((((((COUNT(COUNT(*)))AND((TOTAL(SUM(rt0.c0)) IN ()))))OR(COUNT(*) COLLATE BINARY)))OR((NULL IN ()))))OR(COUNT(*))))) UNION ALL SELECT rt0.c4 FROM rt0, vt0 GROUP BY rt0.c4 HAVING ((((((((((COUNT(COUNT(*)))AND((TOTAL(SUM(rt0.c0)) IN ()))))OR(COUNT(*) COLLATE BINARY)))OR((NULL IN ()))))OR(COUNT(*)))) ISNULL);
SELECT rt0.c4 FROM rt0, vt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0, vt0 GROUP BY rt0.c4 HAVING ((((((((COUNT(COUNT(*)))AND((TOTAL(SUM(rt0.c0)) IN ()))))OR(COUNT(*) COLLATE BINARY)))OR((NULL IN ()))))OR(COUNT(*))) UNION ALL SELECT rt0.c4 FROM rt0, vt0 GROUP BY rt0.c4 HAVING (NOT (((((((((COUNT(COUNT(*)))AND((TOTAL(SUM(rt0.c0)) IN ()))))OR(COUNT(*) COLLATE BINARY)))OR((NULL IN ()))))OR(COUNT(*))))) UNION ALL SELECT rt0.c4 FROM rt0, vt0 GROUP BY rt0.c4 HAVING ((((((((((COUNT(COUNT(*)))AND((TOTAL(SUM(rt0.c0)) IN ()))))OR(COUNT(*) COLLATE BINARY)))OR((NULL IN ()))))OR(COUNT(*)))) ISNULL);
SELECT rt0.c4 FROM rt0, vt0 GROUP BY rt0.c4;
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON (('582682264')-(CAST(vt0.lid AS REAL)));
SELECT ALL * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON (('582682264')-(CAST(vt0.lid AS REAL))) WHERE ((v0.c0 COLLATE NOCASE IN (((rt0.c0)>=(rt0.c1))))) UNION ALL SELECT * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON (('582682264')-(CAST(vt0.lid AS REAL))) WHERE ((NOT ((v0.c0 COLLATE NOCASE IN (((rt0.c0)>=(rt0.c1))))))) UNION ALL SELECT * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON (('582682264')-(CAST(vt0.lid AS REAL))) WHERE ((((v0.c0 COLLATE NOCASE IN (((rt0.c0)>=(rt0.c1))))) ISNULL));
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON (('582682264')-(CAST(vt0.lid AS REAL)));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE 'RO'  WHEN (vt0.lid IN ()) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE vt0.c0 COLLATE BINARY END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE 'RO'  WHEN (vt0.lid IN ()) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE vt0.c0 COLLATE BINARY END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE 'RO'  WHEN (vt0.lid IN ()) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE vt0.c0 COLLATE BINARY END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0, v0 LEFT OUTER JOIN vt0 ON vt0.lid GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3;
SELECT ALL v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0, v0 LEFT OUTER JOIN vt0 ON vt0.lid WHERE ((((rt0.c2)) BETWEEN (((NOT (rt0.c2)))) AND ((((vt0.c0) NOTNULL))))) GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3 UNION SELECT ALL v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0, v0 LEFT OUTER JOIN vt0 ON vt0.lid WHERE ((NOT ((((rt0.c2)) BETWEEN (((NOT (rt0.c2)))) AND ((((vt0.c0) NOTNULL))))))) GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3 UNION SELECT ALL v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0, v0 LEFT OUTER JOIN vt0 ON vt0.lid WHERE ((((((rt0.c2)) BETWEEN (((NOT (rt0.c2)))) AND ((((vt0.c0) NOTNULL))))) ISNULL)) GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3;
SELECT ALL v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0, v0 LEFT OUTER JOIN vt0 ON vt0.lid GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3;
SELECT ALL vt0.lid, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1) NOTNULL)) BETWEEN (CHAR(rt0.c2, rt0.c4, rt0.c4, vt0.c0, rt0.c1)) AND (((v0.c0) BETWEEN (rt0.c4) AND (rt0.c1)))) LEFT OUTER JOIN vt0 ON TYPEOF(DISTINCT ((((619400103)AND(vt0.lid)))OR(rt0.c1))) GROUP BY vt0.lid, rt0.c3;
SELECT v0.c0 FROM vt0, v0;
SELECT ALL v0.c0 FROM vt0, v0 WHERE (v0.c0) UNION ALL SELECT v0.c0 FROM vt0, v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 WHERE (((v0.c0) ISNULL));
SELECT v0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM rt0, v0, vt0;
SELECT DISTINCT * FROM rt0, v0, vt0 WHERE (CASE WHEN INSTR(rt0.c1, vt0.c0) THEN CAST(rt0.c4 AS REAL) END) UNION SELECT DISTINCT * FROM rt0, v0, vt0 WHERE ((NOT (CASE WHEN INSTR(rt0.c1, vt0.c0) THEN CAST(rt0.c4 AS REAL) END))) UNION SELECT DISTINCT * FROM rt0, v0, vt0 WHERE (((CASE WHEN INSTR(rt0.c1, vt0.c0) THEN CAST(rt0.c4 AS REAL) END) ISNULL));
SELECT DISTINCT * FROM rt0, v0, vt0;
SELECT ALL rt0.c4, rt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c4, rt0.c0 FROM rt0, vt0, v0 WHERE (((((v0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c4, vt0.c0)) AND ((rt0.c4, rt0.c1, rt0.c2))) IN ())) GROUP BY rt0.c4, rt0.c0 UNION SELECT rt0.c4, rt0.c0 FROM rt0, vt0, v0 WHERE ((NOT (((((v0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c4, vt0.c0)) AND ((rt0.c4, rt0.c1, rt0.c2))) IN ())))) GROUP BY rt0.c4, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c0 FROM rt0, vt0, v0 WHERE (((((((v0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c4, vt0.c0)) AND ((rt0.c4, rt0.c1, rt0.c2))) IN ())) ISNULL)) GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c4, rt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c1, rt0.c3, vt0.lid, vt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c3, vt0.lid, vt0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c3, vt0.lid, vt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c3, vt0.lid, vt0.c0, rt0.c4 HAVING COUNT(MAX(COUNT(0.7709368461291245))) UNION ALL SELECT ALL rt0.c1, rt0.c3, vt0.lid, vt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c3, vt0.lid, vt0.c0, rt0.c4 HAVING (NOT (COUNT(MAX(COUNT(0.7709368461291245))))) UNION ALL SELECT rt0.c1, rt0.c3, vt0.lid, vt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c3, vt0.lid, vt0.c0, rt0.c4 HAVING ((COUNT(MAX(COUNT(0.7709368461291245)))) ISNULL);
SELECT ALL v0.c0, rt0.c0, rt0.c3 FROM rt0, v0;
SELECT ALL v0.c0, rt0.c0, rt0.c3 FROM rt0, v0 WHERE (json_array_length(rt0.c3, rt0.c0) COLLATE RTRIM) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c3 FROM rt0, v0 WHERE ((NOT (json_array_length(rt0.c3, rt0.c0) COLLATE RTRIM))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c3 FROM rt0, v0 WHERE (((json_array_length(rt0.c3, rt0.c0) COLLATE RTRIM) ISNULL));
SELECT ALL v0.c0, rt0.c0, rt0.c3 FROM rt0, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((((('ym)W' COLLATE RTRIM)OR(NULL)))AND(CASE WHEN vt0.lid THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0)<(vt0.lid)))))OR(vt0.lid COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((((('ym)W' COLLATE RTRIM)OR(NULL)))AND(CASE WHEN vt0.lid THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0)<(vt0.lid)))))OR(vt0.lid COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((((('ym)W' COLLATE RTRIM)OR(NULL)))AND(CASE WHEN vt0.lid THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0)<(vt0.lid)))))OR(vt0.lid COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((HEX(v0.c0))<<(v0.c0 COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((HEX(v0.c0))<<(v0.c0 COLLATE BINARY))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((HEX(v0.c0))<<(v0.c0 COLLATE BINARY))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1, rt0.c3 FROM vt0, v0 INNER JOIN rt0 ON (rt0.c2 IN ()) GROUP BY rt0.c1, rt0.c3;
SELECT ALL rt0.c1, rt0.c3 FROM vt0, v0 INNER JOIN rt0 ON (rt0.c2 IN ()) GROUP BY rt0.c1, rt0.c3 HAVING vt0.lid UNION ALL SELECT rt0.c1, rt0.c3 FROM vt0, v0 INNER JOIN rt0 ON (rt0.c2 IN ()) GROUP BY rt0.c1, rt0.c3 HAVING (NOT (vt0.lid)) UNION ALL SELECT rt0.c1, rt0.c3 FROM vt0, v0 INNER JOIN rt0 ON (rt0.c2 IN ()) GROUP BY rt0.c1, rt0.c3 HAVING ((vt0.lid) ISNULL);
SELECT rt0.c1, rt0.c3 FROM vt0, v0 INNER JOIN rt0 ON (rt0.c2 IN ()) GROUP BY rt0.c1, rt0.c3;
SELECT ALL rt0.c1, rt0.c3 FROM vt0, v0 INNER JOIN rt0 ON (rt0.c2 IN ()) GROUP BY rt0.c1, rt0.c3 HAVING vt0.lid UNION ALL SELECT rt0.c1, rt0.c3 FROM vt0, v0 INNER JOIN rt0 ON (rt0.c2 IN ()) GROUP BY rt0.c1, rt0.c3 HAVING (NOT (vt0.lid)) UNION ALL SELECT rt0.c1, rt0.c3 FROM vt0, v0 INNER JOIN rt0 ON (rt0.c2 IN ()) GROUP BY rt0.c1, rt0.c3 HAVING ((vt0.lid) ISNULL);
SELECT rt0.c1, rt0.c3 FROM vt0, v0 INNER JOIN rt0 ON (rt0.c2 IN ()) GROUP BY rt0.c1, rt0.c3;
SELECT vt0.lid, rt0.c1 FROM rt0, v0, vt0;
SELECT ALL vt0.lid, rt0.c1 FROM rt0, v0, vt0 WHERE (((((((((((((((('-300163578', v0.c0, rt0.c0, vt0.lid, vt0.c0))>((rt0.c2, '-801380131', rt0.c4, rt0.c4, rt0.c1))))AND(CAST(rt0.c2 AS INTEGER))))AND(rt0.c0)))OR(vt0.c0)))AND(x'' COLLATE NOCASE)))OR((((rt0.c0, vt0.lid, x''))==((rt0.c3, rt0.c4, rt0.c4))))))AND((vt0.lid IN (vt0.lid))))) UNION ALL SELECT ALL vt0.lid, rt0.c1 FROM rt0, v0, vt0 WHERE ((NOT (((((((((((((((('-300163578', v0.c0, rt0.c0, vt0.lid, vt0.c0))>((rt0.c2, '-801380131', rt0.c4, rt0.c4, rt0.c1))))AND(CAST(rt0.c2 AS INTEGER))))AND(rt0.c0)))OR(vt0.c0)))AND(x'' COLLATE NOCASE)))OR((((rt0.c0, vt0.lid, x''))=((rt0.c3, rt0.c4, rt0.c4))))))AND((vt0.lid IN (vt0.lid))))))) UNION ALL SELECT ALL vt0.lid, rt0.c1 FROM rt0, v0, vt0 WHERE (((((((((((((((((('-300163578', v0.c0, rt0.c0, vt0.lid, vt0.c0))>((rt0.c2, '-801380131', rt0.c4, rt0.c4, rt0.c1))))AND(CAST(rt0.c2 AS INTEGER))))AND(rt0.c0)))OR(vt0.c0)))AND(x'' COLLATE NOCASE)))OR((((rt0.c0, vt0.lid, x''))=((rt0.c3, rt0.c4, rt0.c4))))))AND((vt0.lid IN (vt0.lid))))) ISNULL));
SELECT vt0.lid, rt0.c1 FROM rt0, v0, vt0;
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT DISTINCT * FROM rt0, vt0, v0 WHERE ((((rt0.c2)) BETWEEN (((((rt0.c0, rt0.c3, v0.c0))==((v0.c0, vt0.c0, rt0.c3))))) AND ((((((((((rt0.c2)AND(x'')))AND(rt0.c3)))OR(rt0.c0)))AND(vt0.lid)))))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE ((NOT ((((rt0.c2)) BETWEEN (((((rt0.c0, rt0.c3, v0.c0))=((v0.c0, vt0.c0, rt0.c3))))) AND ((((((((((rt0.c2)AND(x'')))AND(rt0.c3)))OR(rt0.c0)))AND(vt0.lid)))))))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE ((((((rt0.c2)) BETWEEN (((((rt0.c0, rt0.c3, v0.c0))==((v0.c0, vt0.c0, rt0.c3))))) AND ((((((((((rt0.c2)AND(x'')))AND(rt0.c3)))OR(rt0.c0)))AND(vt0.lid)))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT ALL vt0.c0, rt0.c1, rt0.c2, vt0.lid, rt0.c3, rt0.c4, rt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, rt0.c1, rt0.c2, vt0.lid, rt0.c3, rt0.c4, rt0.c0;
SELECT ALL vt0.c0, rt0.c1, rt0.c2, vt0.lid, rt0.c3, rt0.c4, rt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE (x'') GROUP BY vt0.c0, rt0.c1, rt0.c2, vt0.lid, rt0.c3, rt0.c4, rt0.c0 UNION SELECT ALL vt0.c0, rt0.c1, rt0.c2, vt0.lid, rt0.c3, rt0.c4, rt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (x''))) GROUP BY vt0.c0, rt0.c1, rt0.c2, vt0.lid, rt0.c3, rt0.c4, rt0.c0 UNION SELECT vt0.c0, rt0.c1, rt0.c2, vt0.lid, rt0.c3, rt0.c4, rt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE (((x'') ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c2, vt0.lid, rt0.c3, rt0.c4, rt0.c0;
SELECT ALL vt0.c0, rt0.c1, rt0.c2, vt0.lid, rt0.c3, rt0.c4, rt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, rt0.c1, rt0.c2, vt0.lid, rt0.c3, rt0.c4, rt0.c0;
SELECT v0.c0, rt0.c1, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON ((((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))<=((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c3))))) GROUP BY v0.c0, rt0.c1, rt0.c4;
SELECT ALL v0.c0, rt0.c1, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON ((((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))<=((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c3))))) GROUP BY v0.c0, rt0.c1, rt0.c4 HAVING 0.11403613396109169 UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON ((((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))<=((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c3))))) GROUP BY v0.c0, rt0.c1, rt0.c4 HAVING (NOT (0.11403613396109169)) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON ((((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))<=((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c3))))) GROUP BY v0.c0, rt0.c1, rt0.c4 HAVING ((0.11403613396109169) ISNULL);
SELECT v0.c0, rt0.c1, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON ((((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))<=((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c3))))) GROUP BY v0.c0, rt0.c1, rt0.c4;
SELECT ALL v0.c0, rt0.c1, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON ((((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))<=((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c3))))) GROUP BY v0.c0, rt0.c1, rt0.c4 HAVING 0.11403613396109169 UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON ((((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))<=((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c3))))) GROUP BY v0.c0, rt0.c1, rt0.c4 HAVING (NOT (0.11403613396109169)) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON ((((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))<=((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c3))))) GROUP BY v0.c0, rt0.c1, rt0.c4 HAVING ((0.11403613396109169) ISNULL);
SELECT v0.c0, rt0.c1, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON ((((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))<=((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c3))))) GROUP BY v0.c0, rt0.c1, rt0.c4;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (CASE CAST(v0.c0 AS NUMERIC)  WHEN v0.c0 COLLATE BINARY THEN ((v0.c0) NOT BETWEEN (0.20011364226320116) AND (v0.c0)) ELSE ((0.7346062694761295)+(v0.c0)) END) UNION ALL SELECT * FROM v0 WHERE ((NOT (CASE CAST(v0.c0 AS NUMERIC)  WHEN v0.c0 COLLATE BINARY THEN ((v0.c0) NOT BETWEEN (0.20011364226320116) AND (v0.c0)) ELSE ((0.7346062694761295)+(v0.c0)) END))) UNION ALL SELECT * FROM v0 WHERE (((CASE CAST(v0.c0 AS NUMERIC)  WHEN v0.c0 COLLATE BINARY THEN ((v0.c0) NOT BETWEEN (0.20011364226320116) AND (v0.c0)) ELSE ((0.7346062694761295)+(v0.c0)) END) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((v0.c0)>>((rt0.c0 IN ())))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((v0.c0)>>((rt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((v0.c0)>>((rt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 WHERE (((vt0.c0)+(v0.c0)) COLLATE BINARY) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE ((NOT (((vt0.c0)+(v0.c0)) COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE (((((vt0.c0)+(v0.c0)) COLLATE BINARY) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, v0;
SELECT vt0.c0 FROM vt0, v0 WHERE (CAST(vt0.c0 AS NUMERIC)) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((NOT (CAST(vt0.c0 AS NUMERIC)))) UNION ALL SELECT vt0.c0 FROM vt0, v0 WHERE (((CAST(vt0.c0 AS NUMERIC)) ISNULL));
SELECT ALL vt0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0, vt0.lid, v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM v0 CROSS JOIN vt0 ON (((((rt0.c1 IN (rt0.c4, vt0.lid)))AND((((rt0.c0))>=((vt0.c0))))))OR(((v0.c0)<=(rt0.c1)))) INNER JOIN rt0 ON ((0xffffffffb5308ca9 COLLATE BINARY) BETWEEN (CASE rt0.c3  WHEN rt0.c0 THEN vt0.c0 END) AND (((rt0.c2)&(rt0.c4))));
SELECT DISTINCT vt0.c0, vt0.lid, v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM v0 CROSS JOIN vt0 ON (((((rt0.c1 IN (rt0.c4, vt0.lid)))AND((((rt0.c0))>=((vt0.c0))))))OR(((v0.c0)<=(rt0.c1)))) INNER JOIN rt0 ON ((0xffffffffb5308ca9 COLLATE BINARY) BETWEEN (CASE rt0.c3  WHEN rt0.c0 THEN vt0.c0 END) AND (((rt0.c2)&(rt0.c4)))) WHERE (CAST(((vt0.c0) IS TRUE) AS TEXT)) UNION SELECT DISTINCT vt0.c0, vt0.lid, v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM v0 CROSS JOIN vt0 ON (((((rt0.c1 IN (rt0.c4, vt0.lid)))AND((((rt0.c0))>=((vt0.c0))))))OR(((v0.c0)<=(rt0.c1)))) INNER JOIN rt0 ON ((0Xffffffffb5308ca9 COLLATE BINARY) BETWEEN (CASE rt0.c3  WHEN rt0.c0 THEN vt0.c0 END) AND (((rt0.c2)&(rt0.c4)))) WHERE ((NOT (CAST(((vt0.c0) IS TRUE) AS TEXT)))) UNION SELECT DISTINCT vt0.c0, vt0.lid, v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM v0 CROSS JOIN vt0 ON (((((rt0.c1 IN (rt0.c4, vt0.lid)))AND((((rt0.c0))>=((vt0.c0))))))OR(((v0.c0)<=(rt0.c1)))) INNER JOIN rt0 ON ((0Xffffffffb5308ca9 COLLATE BINARY) BETWEEN (CASE rt0.c3  WHEN rt0.c0 THEN vt0.c0 END) AND (((rt0.c2)&(rt0.c4)))) WHERE (((CAST(((vt0.c0) IS TRUE) AS TEXT)) ISNULL));
SELECT DISTINCT vt0.c0, vt0.lid, v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM v0 CROSS JOIN vt0 ON (((((rt0.c1 IN (rt0.c4, vt0.lid)))AND((((rt0.c0))>=((vt0.c0))))))OR(((v0.c0)<=(rt0.c1)))) INNER JOIN rt0 ON ((0xffffffffb5308ca9 COLLATE BINARY) BETWEEN (CASE rt0.c3  WHEN rt0.c0 THEN vt0.c0 END) AND (((rt0.c2)&(rt0.c4))));
SELECT ALL rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM v0 CROSS JOIN rt0 ON CAST(NULL AS NUMERIC) GROUP BY rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1;
SELECT rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM v0 NOT INDEXED CROSS JOIN rt0 ON CAST(NULL AS NUMERIC) WHERE (v0.c0) GROUP BY rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1 UNION SELECT rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM v0 CROSS JOIN rt0 ON CAST(NULL AS NUMERIC) WHERE ((NOT (v0.c0))) GROUP BY rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1 UNION SELECT rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM v0 NOT INDEXED CROSS JOIN rt0 ON CAST(NULL AS NUMERIC) WHERE (((v0.c0) ISNULL)) GROUP BY rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1;
SELECT ALL rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM v0 CROSS JOIN rt0 ON CAST(NULL AS NUMERIC) GROUP BY rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1;
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid HAVING ((((GROUP_CONCAT(vt0.c0))AND(vt0.lid)))AND(COUNT(AVG(vt0.lid)))) COLLATE BINARY UNION ALL SELECT vt0.lid FROM vt0 GROUP BY vt0.lid HAVING (NOT (((((GROUP_CONCAT(vt0.c0))AND(vt0.lid)))AND(COUNT(AVG(vt0.lid)))) COLLATE BINARY)) UNION ALL SELECT ALL vt0.lid FROM vt0 GROUP BY vt0.lid HAVING ((((((GROUP_CONCAT(vt0.c0))AND(vt0.lid)))AND(COUNT(AVG(vt0.lid)))) COLLATE BINARY) ISNULL);
SELECT ALL * FROM v0 NATURAL JOIN vt0;
SELECT * FROM v0 NATURAL JOIN vt0 WHERE (LOWER(CAST(vt0.lid AS NUMERIC))) UNION ALL SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE ((NOT (LOWER(CAST(vt0.lid AS NUMERIC))))) UNION ALL SELECT * FROM v0 NATURAL JOIN vt0 WHERE (((LOWER(CAST(vt0.lid AS NUMERIC))) ISNULL));
SELECT ALL * FROM v0 NATURAL JOIN vt0;
SELECT DISTINCT vt0.lid, rt0.c4, vt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0, v0.c0 FROM vt0, v0, rt0 NOT INDEXED;
SELECT DISTINCT vt0.lid, rt0.c4, vt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0, v0.c0 FROM vt0, v0, rt0 WHERE (((((((v0.c0)OR(rt0.c0)))AND(vt0.c0)))GLOB(CAST(v0.c0 AS REAL)))) UNION SELECT DISTINCT vt0.lid, rt0.c4, vt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0, v0.c0 FROM vt0, v0, rt0 WHERE ((NOT (((((((v0.c0)OR(rt0.c0)))AND(vt0.c0)))GLOB(CAST(v0.c0 AS REAL)))))) UNION SELECT DISTINCT vt0.lid, rt0.c4, vt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0, v0.c0 FROM vt0, v0, rt0 WHERE (((((((((v0.c0)OR(rt0.c0)))AND(vt0.c0)))GLOB(CAST(v0.c0 AS REAL)))) ISNULL));
SELECT DISTINCT vt0.lid, rt0.c4, vt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0, v0.c0 FROM vt0, v0, rt0 NOT INDEXED;
SELECT ALL vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((+ ((~ (vt0.lid))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((NOT ((+ ((~ (vt0.lid))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((((+ ((~ (vt0.lid))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, rt0.c1, vt0.lid, rt0.c3, rt0.c2, rt0.c4 FROM v0, vt0, rt0 GROUP BY vt0.c0, rt0.c1, vt0.lid, rt0.c3, rt0.c2, rt0.c4;
SELECT ALL vt0.c0, rt0.c1, vt0.lid, rt0.c3, rt0.c2, rt0.c4 FROM v0, vt0, rt0 GROUP BY vt0.c0, rt0.c1, vt0.lid, rt0.c3, rt0.c2, rt0.c4 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, rt0.c1, vt0.lid, rt0.c3, rt0.c2, rt0.c4 FROM v0, vt0, rt0 GROUP BY vt0.c0, rt0.c1, vt0.lid, rt0.c3, rt0.c2, rt0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, rt0.c1, vt0.lid, rt0.c3, rt0.c2, rt0.c4 FROM v0, vt0, rt0 GROUP BY vt0.c0, rt0.c1, vt0.lid, rt0.c3, rt0.c2, rt0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, rt0.c1, vt0.lid, rt0.c3, rt0.c2, rt0.c4 FROM v0, vt0, rt0 GROUP BY vt0.c0, rt0.c1, vt0.lid, rt0.c3, rt0.c2, rt0.c4;
SELECT ALL vt0.c0, rt0.c1, vt0.lid, rt0.c3, rt0.c2, rt0.c4 FROM v0, vt0, rt0 GROUP BY vt0.c0, rt0.c1, vt0.lid, rt0.c3, rt0.c2, rt0.c4 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, rt0.c1, vt0.lid, rt0.c3, rt0.c2, rt0.c4 FROM v0, vt0, rt0 GROUP BY vt0.c0, rt0.c1, vt0.lid, rt0.c3, rt0.c2, rt0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, rt0.c1, vt0.lid, rt0.c3, rt0.c2, rt0.c4 FROM v0, vt0, rt0 GROUP BY vt0.c0, rt0.c1, vt0.lid, rt0.c3, rt0.c2, rt0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, rt0.c1, vt0.lid, rt0.c3, rt0.c2, rt0.c4 FROM v0, vt0, rt0 GROUP BY vt0.c0, rt0.c1, vt0.lid, rt0.c3, rt0.c2, rt0.c4;
SELECT vt0.lid, vt0.c0 FROM vt0;
SELECT vt0.lid, vt0.c0 FROM vt0 WHERE (((('0.717375075111866')) BETWEEN ((COALESCE(vt0.c0, vt0.c0))) AND ((((vt0.c0) NOT NULL))))) UNION ALL SELECT vt0.lid, vt0.c0 FROM vt0 WHERE ((NOT (((('0.717375075111866')) BETWEEN ((COALESCE(vt0.c0, vt0.c0))) AND ((((vt0.c0) NOT NULL))))))) UNION ALL SELECT vt0.lid, vt0.c0 FROM vt0 WHERE (((((('0.717375075111866')) BETWEEN ((COALESCE(vt0.c0, vt0.c0))) AND ((((vt0.c0) NOT NULL))))) ISNULL));
SELECT vt0.lid, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT DISTINCT * FROM v0, vt0, rt0 WHERE (rt0.c4) UNION SELECT DISTINCT * FROM v0, vt0, rt0 WHERE ((NOT (rt0.c4))) UNION SELECT DISTINCT * FROM v0, vt0, rt0 WHERE (((rt0.c4) ISNULL));
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT ALL rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON v0.c0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON v0.c0 WHERE ((~ (CAST(rt0.c1 AS REAL)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON v0.c0 WHERE ((NOT ((~ (CAST(rt0.c1 AS REAL)))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON v0.c0 WHERE ((((~ (CAST(rt0.c1 AS REAL)))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON v0.c0 GROUP BY rt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.lid IN ())) NOT BETWEEN (GROUP_CONCAT(COUNT(*))) AND ((MAX(vt0.c0) IN (vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((vt0.lid IN ())) NOT BETWEEN (GROUP_CONCAT(COUNT(*))) AND ((MAX(vt0.c0) IN (vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.lid IN ())) NOT BETWEEN (GROUP_CONCAT(COUNT(*))) AND ((MAX(vt0.c0) IN (vt0.c0))))) ISNULL);
SELECT vt0.c0, rt0.c2, rt0.c3 FROM rt0, vt0;
SELECT vt0.c0, rt0.c2, rt0.c3 FROM rt0, vt0 WHERE ((- (((((((((0x6a3dda70)AND(rt0.c0)))OR(vt0.lid)))OR(rt0.c1)))AND(vt0.lid))))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c3 FROM rt0, vt0 WHERE ((NOT ((- (((((((((0x6a3dda70)AND(rt0.c0)))OR(vt0.lid)))OR(rt0.c1)))AND(vt0.lid))))))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c3 FROM rt0, vt0 WHERE ((((- (((((((((0X6a3dda70)AND(rt0.c0)))OR(vt0.lid)))OR(rt0.c1)))AND(vt0.lid))))) ISNULL));
SELECT vt0.c0, rt0.c2, rt0.c3 FROM rt0, vt0;
SELECT DISTINCT vt0.lid, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.lid, vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN (vt0.lid)))&(((vt0.c0) ISNULL)))) UNION SELECT DISTINCT vt0.lid, vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN (vt0.lid)))&(((vt0.c0) ISNULL)))))) UNION SELECT DISTINCT vt0.lid, vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN (vt0.lid)))&(((vt0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT vt0.lid, vt0.c0 FROM vt0;
SELECT ALL vt0.lid, vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.lid, vt0.c0, v0.c0;
SELECT ALL vt0.lid, vt0.c0, v0.c0 FROM v0, vt0 WHERE (CASE 0.3350039654805268  WHEN CASE vt0.c0  WHEN '' THEN v0.c0 ELSE v0.c0 END THEN ('-229959433' IN ()) ELSE CASE WHEN vt0.c0 THEN vt0.lid END END) GROUP BY vt0.lid, vt0.c0, v0.c0 UNION SELECT vt0.lid, vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (CASE 0.3350039654805268  WHEN CASE vt0.c0  WHEN '' THEN v0.c0 ELSE v0.c0 END THEN ('-229959433' IN ()) ELSE CASE WHEN vt0.c0 THEN vt0.lid END END))) GROUP BY vt0.lid, vt0.c0, v0.c0 UNION SELECT vt0.lid, vt0.c0, v0.c0 FROM v0, vt0 WHERE (((CASE 0.3350039654805268  WHEN CASE vt0.c0  WHEN '' THEN v0.c0 ELSE v0.c0 END THEN ('-229959433' IN ()) ELSE CASE WHEN vt0.c0 THEN vt0.lid END END) ISNULL)) GROUP BY vt0.lid, vt0.c0, v0.c0;
SELECT ALL vt0.lid, vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.lid, vt0.c0, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL * FROM rt0, v0, vt0;
SELECT * FROM rt0, v0, vt0 WHERE (CAST((vt0.lid IN ()) AS BLOB)) UNION ALL SELECT ALL * FROM rt0, v0, vt0 WHERE ((NOT (CAST((vt0.lid IN ()) AS BLOB)))) UNION ALL SELECT ALL * FROM rt0, v0, vt0 WHERE (((CAST((vt0.lid IN ()) AS BLOB)) ISNULL));
SELECT ALL * FROM rt0, v0, vt0;
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 WHERE (CAST(((v0.c0) NOT BETWEEN (vt0.lid) AND (vt0.lid)) AS REAL)) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 WHERE ((NOT (CAST(((v0.c0) NOT BETWEEN (vt0.lid) AND (vt0.lid)) AS REAL)))) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 WHERE (((CAST(((v0.c0) NOT BETWEEN (vt0.lid) AND (vt0.lid)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c3, vt0.c0, rt0.c2 FROM rt0, v0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, vt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c3, vt0.c0, rt0.c2 FROM rt0, v0, vt0 WHERE (CASE WHEN '96372819' COLLATE BINARY THEN v0.c0 COLLATE NOCASE END) GROUP BY rt0.c0, rt0.c1, rt0.c3, vt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c3, vt0.c0, rt0.c2 FROM rt0, v0, vt0 WHERE ((NOT (CASE WHEN '96372819' COLLATE BINARY THEN v0.c0 COLLATE NOCASE END))) GROUP BY rt0.c0, rt0.c1, rt0.c3, vt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c3, vt0.c0, rt0.c2 FROM rt0, v0 NOT INDEXED, vt0 WHERE (((CASE WHEN '96372819' COLLATE BINARY THEN v0.c0 COLLATE NOCASE END) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c3, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c3, vt0.c0, rt0.c2 FROM rt0, v0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, vt0.c0, rt0.c2;
SELECT ALL rt0.c4, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0;
SELECT ALL rt0.c4, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0 HAVING AVG(SUM(rt0.c0)) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0 HAVING (NOT (AVG(SUM(rt0.c0)))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0 HAVING ((AVG(SUM(rt0.c0))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((vt0.lid)))))==((((vt0.c0)LIKE(rt0.c4)))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (((((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((vt0.lid)))))=((((vt0.c0)LIKE(rt0.c4)))))))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((((((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((vt0.lid)))))=((((vt0.c0)LIKE(rt0.c4)))))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT rt0.c0 FROM v0 NOT INDEXED, rt0, vt0;
SELECT DISTINCT rt0.c0 FROM v0, rt0, vt0 WHERE (CAST(rt0.c0 AS INTEGER)) UNION SELECT DISTINCT rt0.c0 FROM v0, rt0, vt0 WHERE ((NOT (CAST(rt0.c0 AS INTEGER)))) UNION SELECT DISTINCT rt0.c0 FROM v0, rt0, vt0 WHERE (((CAST(rt0.c0 AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c0 FROM v0 NOT INDEXED, rt0, vt0;
SELECT rt0.c0, rt0.c3, vt0.lid, rt0.c1, vt0.c0, rt0.c4 FROM v0, rt0, vt0 GROUP BY rt0.c0, rt0.c3, vt0.lid, rt0.c1, vt0.c0, rt0.c4;
SELECT rt0.c0, rt0.c3, vt0.lid, rt0.c1, vt0.c0, rt0.c4 FROM v0, rt0, vt0 WHERE (((((rt0.c2)%(rt0.c3)))LIKE(((((((((((((rt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c3)))AND(rt0.c3)))AND(v0.c0)))AND(v0.c0))))) GROUP BY rt0.c0, rt0.c3, vt0.lid, rt0.c1, vt0.c0, rt0.c4 UNION SELECT ALL rt0.c0, rt0.c3, vt0.lid, rt0.c1, vt0.c0, rt0.c4 FROM v0, rt0, vt0 WHERE ((NOT (((((rt0.c2)%(rt0.c3)))LIKE(((((((((((((rt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c3)))AND(rt0.c3)))AND(v0.c0)))AND(v0.c0))))))) GROUP BY rt0.c0, rt0.c3, vt0.lid, rt0.c1, vt0.c0, rt0.c4 UNION SELECT ALL rt0.c0, rt0.c3, vt0.lid, rt0.c1, vt0.c0, rt0.c4 FROM v0, rt0, vt0 WHERE (((((((rt0.c2)%(rt0.c3)))LIKE(((((((((((((rt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c3)))AND(rt0.c3)))AND(v0.c0)))AND(v0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c3, vt0.lid, rt0.c1, vt0.c0, rt0.c4;
SELECT rt0.c0, rt0.c3, vt0.lid, rt0.c1, vt0.c0, rt0.c4 FROM v0, rt0, vt0 GROUP BY rt0.c0, rt0.c3, vt0.lid, rt0.c1, vt0.c0, rt0.c4;
SELECT ALL rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((vt0.lid)-(rt0.c3)) AS INTEGER) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((vt0.lid)-(rt0.c3)) AS INTEGER) GROUP BY rt0.c1 HAVING CAST(vt0.lid AS BLOB) COLLATE BINARY UNION ALL SELECT ALL rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((vt0.lid)-(rt0.c3)) AS INTEGER) GROUP BY rt0.c1 HAVING (NOT (CAST(vt0.lid AS BLOB) COLLATE BINARY)) UNION ALL SELECT rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((vt0.lid)-(rt0.c3)) AS INTEGER) GROUP BY rt0.c1 HAVING ((CAST(vt0.lid AS BLOB) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((vt0.lid)-(rt0.c3)) AS INTEGER) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((vt0.lid)-(rt0.c3)) AS INTEGER) GROUP BY rt0.c1 HAVING CAST(vt0.lid AS BLOB) COLLATE BINARY UNION ALL SELECT ALL rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((vt0.lid)-(rt0.c3)) AS INTEGER) GROUP BY rt0.c1 HAVING (NOT (CAST(vt0.lid AS BLOB) COLLATE BINARY)) UNION ALL SELECT rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((vt0.lid)-(rt0.c3)) AS INTEGER) GROUP BY rt0.c1 HAVING ((CAST(vt0.lid AS BLOB) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((vt0.lid)-(rt0.c3)) AS INTEGER) GROUP BY rt0.c1;
SELECT ALL rt0.c2 FROM rt0, v0;
SELECT ALL rt0.c2 FROM rt0, v0 WHERE (((((((rt0.c4) IS TRUE))AND((+ (rt0.c3)))))AND((rt0.c0 IN ())))) UNION ALL SELECT ALL rt0.c2 FROM rt0, v0 WHERE ((NOT (((((((rt0.c4) IS TRUE))AND((+ (rt0.c3)))))AND((rt0.c0 IN ())))))) UNION ALL SELECT ALL rt0.c2 FROM rt0, v0 WHERE (((((((((rt0.c4) IS TRUE))AND((+ (rt0.c3)))))AND((rt0.c0 IN ())))) ISNULL));
SELECT ALL rt0.c2 FROM rt0, v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (CAST(x'' AS INTEGER)) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (CAST(x'' AS INTEGER)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((CAST(x'' AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c2;
SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE (0.5503893671489156) GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c2 UNION SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (0.5503893671489156))) GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE (((0.5503893671489156) ISNULL)) GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(NULL) UNION ALL SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING (NOT (AVG(NULL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(NULL)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(NULL) UNION ALL SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING (NOT (AVG(NULL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(NULL)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (COALESCE(DISTINCT (((rt0.c0))<>((rt0.c4))), NULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (COALESCE(DISTINCT (((rt0.c0))<>((rt0.c4))), NULL)))) UNION ALL SELECT * FROM rt0 WHERE (((COALESCE(DISTINCT (((rt0.c0))!=((rt0.c4))), NULL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (CASE '-998593536'  WHEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)) THEN (((('404361293')AND(rt0.c0)))OR(rt0.c1)) ELSE (rt0.c3 IN (rt0.c2)) END) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (CASE '-998593536'  WHEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)) THEN (((('404361293')AND(rt0.c0)))OR(rt0.c1)) ELSE (rt0.c3 IN (rt0.c2)) END))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((CASE '-998593536'  WHEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)) THEN (((('404361293')AND(rt0.c0)))OR(rt0.c1)) ELSE (rt0.c3 IN (rt0.c2)) END) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c3, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c0, vt0.c0, rt0.c2;
SELECT rt0.c3, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((((-2086482495, rt0.c0, vt0.c0)) NOT BETWEEN ((((rt0.c4)<<(x'')), (rt0.c1 IN (rt0.c2)), CASE WHEN vt0.lid THEN rt0.c0 WHEN vt0.lid THEN vt0.c0 WHEN rt0.c3 THEN '' END)) AND ((rt0.c2, ((rt0.c1)||(vt0.lid)), UPPER(rt0.c1))))) GROUP BY rt0.c3, rt0.c0, vt0.c0, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((-2086482495, rt0.c0, vt0.c0)) NOT BETWEEN ((((rt0.c4)<<(x'')), (rt0.c1 IN (rt0.c2)), CASE WHEN vt0.lid THEN rt0.c0 WHEN vt0.lid THEN vt0.c0 WHEN rt0.c3 THEN '' END)) AND ((rt0.c2, ((rt0.c1)||(vt0.lid)), UPPER(rt0.c1))))))) GROUP BY rt0.c3, rt0.c0, vt0.c0, rt0.c2 UNION SELECT rt0.c3, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((((((-2086482495, rt0.c0, vt0.c0)) NOT BETWEEN ((((rt0.c4)<<(x'')), (rt0.c1 IN (rt0.c2)), CASE WHEN vt0.lid THEN rt0.c0 WHEN vt0.lid THEN vt0.c0 WHEN rt0.c3 THEN '' END)) AND ((rt0.c2, ((rt0.c1)||(vt0.lid)), UPPER(rt0.c1))))) ISNULL)) GROUP BY rt0.c3, rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c0, vt0.c0, rt0.c2;
SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid;
SELECT ALL vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid HAVING TOTAL(ABS(DISTINCT vt0.lid)) UNION ALL SELECT ALL vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid HAVING (NOT (TOTAL(ABS(DISTINCT vt0.lid)))) UNION ALL SELECT ALL vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid HAVING ((TOTAL(ABS(DISTINCT vt0.lid))) ISNULL);
SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid;
SELECT ALL vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid HAVING TOTAL(ABS(DISTINCT vt0.lid)) UNION ALL SELECT ALL vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid HAVING (NOT (TOTAL(ABS(DISTINCT vt0.lid)))) UNION ALL SELECT ALL vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid HAVING ((TOTAL(ABS(DISTINCT vt0.lid))) ISNULL);
SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid;
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON (~ (((((((((((((v0.c0)AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c4))));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON (~ (((((((((((((v0.c0)AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c4)))) WHERE (x'b08a') UNION ALL SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON (~ (((((((((((((v0.c0)AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c4)))) WHERE ((NOT (x'b08a'))) UNION ALL SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON (~ (((((((((((((v0.c0)AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c4)))) WHERE (((x'b08a') ISNULL));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON (~ (((((((((((((v0.c0)AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c4))));
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE (((rt0.c3)<=(LAST_INSERT_ROWID()))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c3)<=(LAST_INSERT_ROWID()))))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE (((((rt0.c3)<=(LAST_INSERT_ROWID()))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0;
SELECT rt0.c0, vt0.c0, rt0.c4, rt0.c1, vt0.lid, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON ((CASE vt0.c0  WHEN v0.c0 THEN rt0.c4 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN vt0.lid END) IS TRUE) LEFT OUTER JOIN v0 ON rt0.c1 GROUP BY rt0.c0, vt0.c0, rt0.c4, rt0.c1, vt0.lid, rt0.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c4, vt0.lid, rt0.c0, v0.c0, vt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, vt0.lid, rt0.c0, v0.c0, vt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c4, vt0.lid, rt0.c0, v0.c0, vt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, vt0.lid, rt0.c0, v0.c0, vt0.c0, rt0.c3 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4, vt0.lid, rt0.c0, v0.c0, vt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, vt0.lid, rt0.c0, v0.c0, vt0.c0, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4, vt0.lid, rt0.c0, v0.c0, vt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, vt0.lid, rt0.c0, v0.c0, vt0.c0, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c4, vt0.lid, rt0.c0, v0.c0, vt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, vt0.lid, rt0.c0, v0.c0, vt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c4, vt0.lid, rt0.c0, v0.c0, vt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, vt0.lid, rt0.c0, v0.c0, vt0.c0, rt0.c3 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4, vt0.lid, rt0.c0, v0.c0, vt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, vt0.lid, rt0.c0, v0.c0, vt0.c0, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4, vt0.lid, rt0.c0, v0.c0, vt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, vt0.lid, rt0.c0, v0.c0, vt0.c0, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c4, vt0.lid, rt0.c0, v0.c0, vt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, vt0.lid, rt0.c0, v0.c0, vt0.c0, rt0.c3;
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (- (((rt0.c4)IS(vt0.lid)))) INNER JOIN v0 ON NULLIF(DISTINCT rt0.c4, v0.c0) COLLATE NOCASE;
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (- (((rt0.c4)IS(vt0.lid)))) INNER JOIN v0 ON NULLIF(DISTINCT rt0.c4, v0.c0) COLLATE NOCASE WHERE (rt0.c4) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (- (((rt0.c4)IS(vt0.lid)))) INNER JOIN v0 ON NULLIF(DISTINCT rt0.c4, v0.c0) COLLATE NOCASE WHERE ((NOT (rt0.c4))) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (- (((rt0.c4)IS(vt0.lid)))) INNER JOIN v0 ON NULLIF(DISTINCT rt0.c4, v0.c0) COLLATE NOCASE WHERE (((rt0.c4) ISNULL));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (- (((rt0.c4)IS(vt0.lid)))) INNER JOIN v0 ON NULLIF(DISTINCT rt0.c4, v0.c0) COLLATE NOCASE;
SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON (~ (CAST(vt0.lid AS BLOB)));
SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON (~ (CAST(vt0.lid AS BLOB))) WHERE ('0') UNION SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON (~ (CAST(vt0.lid AS BLOB))) WHERE ((NOT ('0'))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON (~ (CAST(vt0.lid AS BLOB))) WHERE ((('0') ISNULL));
SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON (~ (CAST(vt0.lid AS BLOB)));
SELECT rt0.c2, rt0.c4, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (((CASE WHEN x'' THEN rt0.c4 END))>((((rt0.c0) IS TRUE)))) GROUP BY rt0.c2, rt0.c4, rt0.c1;
SELECT rt0.c2, rt0.c4, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (((CASE WHEN x'' THEN rt0.c4 END))>((((rt0.c0) IS TRUE)))) WHERE ((((rt0.c3)) NOT BETWEEN ((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR('-801380131')))OR(rt0.c4)))) AND ((0.6927054633718485)))) GROUP BY rt0.c2, rt0.c4, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (((CASE WHEN x'' THEN rt0.c4 END))>((((rt0.c0) IS TRUE)))) WHERE ((NOT ((((rt0.c3)) NOT BETWEEN ((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR('-801380131')))OR(rt0.c4)))) AND ((0.6927054633718485)))))) GROUP BY rt0.c2, rt0.c4, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (((CASE WHEN x'' THEN rt0.c4 END))>((((rt0.c0) IS TRUE)))) WHERE ((((((rt0.c3)) NOT BETWEEN ((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR('-801380131')))OR(rt0.c4)))) AND ((0.6927054633718485)))) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c1;
SELECT rt0.c2, rt0.c4, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (((CASE WHEN x'' THEN rt0.c4 END))>((((rt0.c0) IS TRUE)))) GROUP BY rt0.c2, rt0.c4, rt0.c1;
SELECT ALL rt0.c2, vt0.lid, rt0.c0, rt0.c4, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.lid, rt0.c0, rt0.c4, rt0.c1;
SELECT rt0.c2, vt0.lid, rt0.c0, rt0.c4, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.lid, rt0.c0, rt0.c4, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c2, vt0.lid, rt0.c0, rt0.c4, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.lid, rt0.c0, rt0.c4, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, vt0.lid, rt0.c0, rt0.c4, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.lid, rt0.c0, rt0.c4, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, vt0.lid, rt0.c0, rt0.c4, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.lid, rt0.c0, rt0.c4, rt0.c1;
SELECT rt0.c2, vt0.lid, rt0.c0, rt0.c4, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.lid, rt0.c0, rt0.c4, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c2, vt0.lid, rt0.c0, rt0.c4, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.lid, rt0.c0, rt0.c4, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, vt0.lid, rt0.c0, rt0.c4, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.lid, rt0.c0, rt0.c4, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, vt0.lid, rt0.c0, rt0.c4, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.lid, rt0.c0, rt0.c4, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c4, rt0.c3, vt0.lid, rt0.c1 FROM rt0, vt0;
SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c4, rt0.c3, vt0.lid, rt0.c1 FROM rt0, vt0 WHERE (rt0.c3) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c2, rt0.c4, rt0.c3, vt0.lid, rt0.c1 FROM rt0, vt0 WHERE ((NOT (rt0.c3))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c4, rt0.c3, vt0.lid, rt0.c1 FROM rt0, vt0 WHERE (((rt0.c3) ISNULL));
SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c4, rt0.c3, vt0.lid, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c3, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c0 FROM rt0 WHERE ((((1512973616, rt0.c1, rt0.c1, rt0.c1, rt0.c0, '', rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0, x'', rt0.c1, NULL, rt0.c3)) AND ((rt0.c4, rt0.c3, '0.3961686216809608', rt0.c1, rt0.c2, rt0.c1, rt0.c3))) COLLATE BINARY COLLATE BINARY) UNION SELECT DISTINCT rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT ((((1512973616, rt0.c1, rt0.c1, rt0.c1, rt0.c0, '', rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0, x'', rt0.c1, NULL, rt0.c3)) AND ((rt0.c4, rt0.c3, '0.3961686216809608', rt0.c1, rt0.c2, rt0.c1, rt0.c3))) COLLATE BINARY COLLATE BINARY))) UNION SELECT DISTINCT rt0.c3, rt0.c0 FROM rt0 WHERE ((((((1512973616, rt0.c1, rt0.c1, rt0.c1, rt0.c0, '', rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0, x'', rt0.c1, NULL, rt0.c3)) AND ((rt0.c4, rt0.c3, '0.3961686216809608', rt0.c1, rt0.c2, rt0.c1, rt0.c3))) COLLATE BINARY COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0 FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((- (((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((- (((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((- (((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(TOTAL(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(TOTAL(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(TOTAL(v0.c0))) ISNULL);
SELECT MIN(0.3399669075421555) FROM vt0 ORDER BY x'374de9e7'  NULLS LAST;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((((((v0.c0)<(v0.c0)))OR((NOT (v0.c0)))))AND(TRIM(DISTINCT v0.c0))))AND(v0.c0)))OR(v0.c0 COLLATE NOCASE))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((((((((((v0.c0)<(v0.c0)))OR((NOT (v0.c0)))))AND(TRIM(DISTINCT v0.c0))))AND(v0.c0)))OR(v0.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((((((((v0.c0)<(v0.c0)))OR((NOT (v0.c0)))))AND(TRIM(DISTINCT v0.c0))))AND(v0.c0)))OR(v0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT rt0.c2, vt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON ((CAST(vt0.lid AS NUMERIC))>>(0.4175302883004952)) CROSS JOIN vt0 ON CAST((rt0.c2 IN ()) AS TEXT) GROUP BY rt0.c2, vt0.c0;
SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0;
SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0;
SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0;
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE ((~ (((rt0.c2)<(v0.c0))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT ((~ (((rt0.c2)<(v0.c0))))))) UNION ALL SELECT ALL * FROM rt0, v0 NOT INDEXED WHERE ((((~ (((rt0.c2)<(v0.c0))))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON (+ ((NOT (vt0.c0)))) INNER JOIN v0 ON IFNULL((- (vt0.lid)), rt0.c2);
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON (+ ((NOT (vt0.c0)))) INNER JOIN v0 ON IFNULL((- (vt0.lid)), rt0.c2) WHERE (CAST(CAST(rt0.c3 AS REAL) AS INTEGER)) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON (+ ((NOT (vt0.c0)))) INNER JOIN v0 ON IFNULL((- (vt0.lid)), rt0.c2) WHERE ((NOT (CAST(CAST(rt0.c3 AS REAL) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON (+ ((NOT (vt0.c0)))) INNER JOIN v0 ON IFNULL((- (vt0.lid)), rt0.c2) WHERE (((CAST(CAST(rt0.c3 AS REAL) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON (+ ((NOT (vt0.c0)))) INNER JOIN v0 ON IFNULL((- (vt0.lid)), rt0.c2);
SELECT ALL vt0.lid, vt0.c0 FROM vt0, v0 GROUP BY vt0.lid, vt0.c0;
SELECT vt0.lid, vt0.c0 FROM vt0, v0 WHERE (v0.c0) GROUP BY vt0.lid, vt0.c0 UNION SELECT vt0.lid, vt0.c0 FROM vt0, v0 WHERE ((NOT (v0.c0))) GROUP BY vt0.lid, vt0.c0 UNION SELECT ALL vt0.lid, vt0.c0 FROM vt0, v0 WHERE (((v0.c0) ISNULL)) GROUP BY vt0.lid, vt0.c0;
SELECT ALL vt0.lid, vt0.c0 FROM vt0, v0 GROUP BY vt0.lid, vt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c0, vt0.lid, rt0.c1, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON CAST(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END AS REAL) GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c0, vt0.lid, rt0.c1, vt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c4, rt0.c0, vt0.lid, rt0.c1, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON CAST(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END AS REAL) GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c0, vt0.lid, rt0.c1, vt0.c0 HAVING MIN(COUNT(vt0.lid)) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c0, vt0.lid, rt0.c1, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON CAST(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END AS REAL) GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c0, vt0.lid, rt0.c1, vt0.c0 HAVING (NOT (MIN(COUNT(vt0.lid)))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c4, rt0.c0, vt0.lid, rt0.c1, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON CAST(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END AS REAL) GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c0, vt0.lid, rt0.c1, vt0.c0 HAVING ((MIN(COUNT(vt0.lid))) ISNULL);
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c1)<=(rt0.c2)))) AND (((NOT (rt0.c0)))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c1)<=(rt0.c2)))) AND (((NOT (rt0.c0))))) WHERE ((+ (HEX(rt0.c0)))) UNION ALL SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c1)<=(rt0.c2)))) AND (((NOT (rt0.c0))))) WHERE ((NOT ((+ (HEX(rt0.c0)))))) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c1)<=(rt0.c2)))) AND (((NOT (rt0.c0))))) WHERE ((((+ (HEX(rt0.c0)))) ISNULL));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c1)<=(rt0.c2)))) AND (((NOT (rt0.c0)))));
SELECT DISTINCT rt0.c4, rt0.c0, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c4, rt0.c0, v0.c0 FROM v0, rt0 WHERE (((CASE v0.c0  WHEN '1303868432' THEN '-1684514388' END)|((- (rt0.c3))))) UNION SELECT DISTINCT rt0.c4, rt0.c0, v0.c0 FROM v0, rt0 WHERE ((NOT (((CASE v0.c0  WHEN '1303868432' THEN '-1684514388' END)|((- (rt0.c3))))))) UNION SELECT DISTINCT rt0.c4, rt0.c0, v0.c0 FROM v0, rt0 WHERE (((((CASE v0.c0  WHEN '1303868432' THEN '-1684514388' END)|((- (rt0.c3))))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c0, v0.c0 FROM v0, rt0;
SELECT v0.c0, vt0.lid, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.lid, vt0.c0;
SELECT ALL v0.c0, vt0.lid, vt0.c0 FROM vt0, v0 WHERE ((- (((vt0.lid)-(vt0.lid))))) GROUP BY v0.c0, vt0.lid, vt0.c0 UNION SELECT ALL v0.c0, vt0.lid, vt0.c0 FROM vt0, v0 WHERE ((NOT ((- (((vt0.lid)-(vt0.lid))))))) GROUP BY v0.c0, vt0.lid, vt0.c0 UNION SELECT ALL v0.c0, vt0.lid, vt0.c0 FROM vt0, v0 WHERE ((((- (((vt0.lid)-(vt0.lid))))) ISNULL)) GROUP BY v0.c0, vt0.lid, vt0.c0;
SELECT v0.c0, vt0.lid, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.lid, vt0.c0;
SELECT ALL vt0.lid, rt0.c2, v0.c0, rt0.c4, rt0.c3, vt0.c0, rt0.c1, rt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.lid, rt0.c2, v0.c0, rt0.c4, rt0.c3, vt0.c0, rt0.c1, rt0.c0;
SELECT ALL vt0.lid, rt0.c2, v0.c0, rt0.c4, rt0.c3, vt0.c0, rt0.c1, rt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.lid, rt0.c2, v0.c0, rt0.c4, rt0.c3, vt0.c0, rt0.c1, rt0.c0 HAVING (((((((((((''))<((TOTAL(rt0.c0)))))OR(SUM(rt0.c4))))OR(((rt0.c4) ISNULL))))OR(COUNT(vt0.lid))))OR(GROUP_CONCAT(GROUP_CONCAT(COUNT(0X2efbc06))))) UNION ALL SELECT vt0.lid, rt0.c2, v0.c0, rt0.c4, rt0.c3, vt0.c0, rt0.c1, rt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.lid, rt0.c2, v0.c0, rt0.c4, rt0.c3, vt0.c0, rt0.c1, rt0.c0 HAVING (NOT ((((((((((((''))<((TOTAL(rt0.c0)))))OR(SUM(rt0.c4))))OR(((rt0.c4) ISNULL))))OR(COUNT(vt0.lid))))OR(GROUP_CONCAT(GROUP_CONCAT(COUNT(0X2efbc06))))))) UNION ALL SELECT ALL vt0.lid, rt0.c2, v0.c0, rt0.c4, rt0.c3, vt0.c0, rt0.c1, rt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.lid, rt0.c2, v0.c0, rt0.c4, rt0.c3, vt0.c0, rt0.c1, rt0.c0 HAVING (((((((((((((''))<((TOTAL(rt0.c0)))))OR(SUM(rt0.c4))))OR(((rt0.c4) ISNULL))))OR(COUNT(vt0.lid))))OR(GROUP_CONCAT(GROUP_CONCAT(COUNT(0X2efbc06)))))) ISNULL);
SELECT rt0.c1 FROM v0, rt0;
SELECT rt0.c1 FROM v0, rt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL rt0.c1 FROM v0, rt0 WHERE ((NOT ((NOT (NULL))))) UNION ALL SELECT ALL rt0.c1 FROM v0, rt0 WHERE ((((NOT (NULL))) ISNULL));
SELECT rt0.c1 FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(v0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(v0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(v0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.lid, rt0.c1, rt0.c3, vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((((vt0.c0)<=(vt0.c0)))<=(INSTR(x'b096', vt0.lid))) RIGHT OUTER JOIN rt0 ON (- (rt0.c0 COLLATE NOCASE)) GROUP BY vt0.lid, rt0.c1, rt0.c3, vt0.c0, v0.c0;
SELECT ALL vt0.lid, rt0.c1, rt0.c3, vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((((vt0.c0)<=(vt0.c0)))<=(INSTR(x'b096', vt0.lid))) RIGHT OUTER JOIN rt0 ON (- (rt0.c0 COLLATE NOCASE)) WHERE ((+ (((vt0.c0) IS FALSE)))) GROUP BY vt0.lid, rt0.c1, rt0.c3, vt0.c0, v0.c0 UNION SELECT vt0.lid, rt0.c1, rt0.c3, vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((((vt0.c0)<=(vt0.c0)))<=(INSTR(x'b096', vt0.lid))) RIGHT OUTER JOIN rt0 ON (- (rt0.c0 COLLATE NOCASE)) WHERE ((NOT ((+ (((vt0.c0) IS FALSE)))))) GROUP BY vt0.lid, rt0.c1, rt0.c3, vt0.c0, v0.c0 UNION SELECT ALL vt0.lid, rt0.c1, rt0.c3, vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((((vt0.c0)<=(vt0.c0)))<=(INSTR(x'b096', vt0.lid))) RIGHT OUTER JOIN rt0 ON (- (rt0.c0 COLLATE NOCASE)) WHERE ((((+ (((vt0.c0) IS FALSE)))) ISNULL)) GROUP BY vt0.lid, rt0.c1, rt0.c3, vt0.c0, v0.c0;
SELECT vt0.lid, rt0.c1, rt0.c3, vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((((vt0.c0)<=(vt0.c0)))<=(INSTR(x'b096', vt0.lid))) RIGHT OUTER JOIN rt0 ON (- (rt0.c0 COLLATE NOCASE)) GROUP BY vt0.lid, rt0.c1, rt0.c3, vt0.c0, v0.c0;
SELECT rt0.c3, rt0.c4, vt0.c0, rt0.c2, v0.c0, vt0.lid, rt0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c3, rt0.c4, vt0.c0, rt0.c2, v0.c0, vt0.lid, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c4, vt0.c0, rt0.c2, v0.c0, vt0.lid, rt0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c3, rt0.c4, vt0.c0, rt0.c2, v0.c0, vt0.lid, rt0.c0, rt0.c1 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL rt0.c3, rt0.c4, vt0.c0, rt0.c2, v0.c0, vt0.lid, rt0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c3, rt0.c4, vt0.c0, rt0.c2, v0.c0, vt0.lid, rt0.c0, rt0.c1 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL rt0.c3, rt0.c4, vt0.c0, rt0.c2, v0.c0, vt0.lid, rt0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c3, rt0.c4, vt0.c0, rt0.c2, v0.c0, vt0.lid, rt0.c0, rt0.c1 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0 COLLATE RTRIM, CAST(v0.c0 AS NUMERIC), ((v0.c0)||(v0.c0)))) AND ((((v0.c0) ISNULL), ((v0.c0)GLOB(v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0 COLLATE RTRIM, CAST(v0.c0 AS NUMERIC), ((v0.c0)||(v0.c0)))) AND ((((v0.c0) ISNULL), ((v0.c0)GLOB(v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0 COLLATE RTRIM, CAST(v0.c0 AS NUMERIC), ((v0.c0)||(v0.c0)))) AND ((((v0.c0) ISNULL), ((v0.c0)GLOB(v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0 NOT INDEXED;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0)+(v0.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0)+(v0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)+(v0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0 NOT INDEXED;
SELECT ALL rt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, vt0, rt0 WHERE (((- (rt0.c4)) IN ())) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM v0, vt0, rt0 WHERE ((NOT (((- (rt0.c4)) IN ())))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM v0, vt0, rt0 WHERE (((((- (rt0.c4)) IN ())) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c0;
SELECT ALL v0.c0, vt0.c0, rt0.c2, rt0.c3 FROM rt0, v0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c2, rt0.c3;
SELECT ALL v0.c0, vt0.c0, rt0.c2, rt0.c3 FROM rt0, v0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c2, rt0.c3 HAVING NULL UNION ALL SELECT ALL v0.c0, vt0.c0, rt0.c2, rt0.c3 FROM rt0, v0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c2, rt0.c3 HAVING (NOT (NULL)) UNION ALL SELECT v0.c0, vt0.c0, rt0.c2, rt0.c3 FROM rt0, v0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c2, rt0.c3 HAVING ((NULL) ISNULL);
SELECT ALL v0.c0, vt0.c0, rt0.c2, rt0.c3 FROM rt0, v0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c2, rt0.c3;
SELECT ALL v0.c0, vt0.c0, rt0.c2, rt0.c3 FROM rt0, v0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c2, rt0.c3 HAVING NULL UNION ALL SELECT ALL v0.c0, vt0.c0, rt0.c2, rt0.c3 FROM rt0, v0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c2, rt0.c3 HAVING (NOT (NULL)) UNION ALL SELECT v0.c0, vt0.c0, rt0.c2, rt0.c3 FROM rt0, v0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c2, rt0.c3 HAVING ((NULL) ISNULL);
SELECT ALL v0.c0, vt0.c0, rt0.c2, rt0.c3 FROM rt0, v0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c2, rt0.c3;
SELECT vt0.c0, v0.c0, vt0.lid FROM vt0, v0;
SELECT vt0.c0, v0.c0, vt0.lid FROM vt0, v0 WHERE (LAST_INSERT_ROWID()) UNION ALL SELECT vt0.c0, v0.c0, vt0.lid FROM vt0, v0 WHERE ((NOT (LAST_INSERT_ROWID()))) UNION ALL SELECT ALL vt0.c0, v0.c0, vt0.lid FROM vt0, v0 WHERE (((LAST_INSERT_ROWID()) ISNULL));
SELECT vt0.c0, v0.c0, vt0.lid FROM vt0, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN (((vt0.lid) ISNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0) NOT NULL) IN (((vt0.lid) ISNULL)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0) NOT NULL) IN (((vt0.lid) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c3;
SELECT rt0.c0, rt0.c3 FROM rt0 WHERE (((((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c4 END)AND('')))OR(NULLIF(rt0.c3, rt0.c0)))) GROUP BY rt0.c0, rt0.c3 UNION SELECT rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (((((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c4 END)AND('')))OR(NULLIF(rt0.c3, rt0.c0)))))) GROUP BY rt0.c0, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c3 FROM rt0 WHERE (((((((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c4 END)AND('')))OR(NULLIF(rt0.c3, rt0.c0)))) ISNULL)) GROUP BY rt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c3;
SELECT vt0.lid FROM vt0, v0 GROUP BY vt0.lid;
SELECT ALL vt0.lid FROM vt0, v0 GROUP BY vt0.lid HAVING vt0.c0 UNION ALL SELECT vt0.lid FROM vt0, v0 GROUP BY vt0.lid HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.lid FROM vt0, v0 GROUP BY vt0.lid HAVING ((vt0.c0) ISNULL);
SELECT vt0.lid FROM vt0, v0 GROUP BY vt0.lid;
SELECT ALL vt0.lid FROM vt0, v0 GROUP BY vt0.lid HAVING vt0.c0 UNION ALL SELECT vt0.lid FROM vt0, v0 GROUP BY vt0.lid HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.lid FROM vt0, v0 GROUP BY vt0.lid HAVING ((vt0.c0) ISNULL);
SELECT vt0.lid FROM vt0, v0 GROUP BY vt0.lid;
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c2)) COLLATE RTRIM COLLATE RTRIM) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c2)) COLLATE RTRIM COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c2)) COLLATE RTRIM COLLATE RTRIM) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT vt0.lid, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT vt0.lid, rt0.c2 FROM rt0, vt0 WHERE ((((NOT (rt0.c2)))*(((rt0.c2)=(rt0.c2))))) UNION SELECT DISTINCT vt0.lid, rt0.c2 FROM rt0, vt0 WHERE ((NOT ((((NOT (rt0.c2)))*(((rt0.c2)==(rt0.c2))))))) UNION SELECT DISTINCT vt0.lid, rt0.c2 FROM rt0, vt0 WHERE ((((((NOT (rt0.c2)))*(((rt0.c2)=(rt0.c2))))) ISNULL));
SELECT DISTINCT vt0.lid, rt0.c2 FROM rt0, vt0;
SELECT rt0.c0, rt0.c1 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0, v0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.lid)<('-103761436')))) AND (((rt0.c1 IN ()))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0, vt0, v0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((vt0.lid)<('-103761436')))) AND (((rt0.c1 IN ()))))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0, vt0, v0 WHERE ((((((vt0.c0)) BETWEEN ((((vt0.lid)<('-103761436')))) AND (((rt0.c1 IN ()))))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c4, rt0.c1, rt0.c3, rt0.c2, vt0.c0, vt0.lid, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c2, vt0.c0, vt0.lid, rt0.c0;
SELECT rt0.c4, rt0.c1, rt0.c3, rt0.c2, vt0.c0, vt0.lid, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c2, vt0.c0, vt0.lid, rt0.c0 HAVING ((TOTAL(COUNT(*)))<<(CAST(MAX(rt0.c1) AS REAL))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c3, rt0.c2, vt0.c0, vt0.lid, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c2, vt0.c0, vt0.lid, rt0.c0 HAVING (NOT (((TOTAL(COUNT(*)))<<(CAST(MAX(rt0.c1) AS REAL))))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c3, rt0.c2, vt0.c0, vt0.lid, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c2, vt0.c0, vt0.lid, rt0.c0 HAVING ((((TOTAL(COUNT(*)))<<(CAST(MAX(rt0.c1) AS REAL)))) ISNULL);
SELECT TOTAL(CASE (NOT (rt0.c0))  WHEN CAST(rt0.c2 AS REAL) THEN '99595721' END) FROM rt0 ORDER BY CAST(rt0.c4 AS BLOB) COLLATE BINARY  NULLS FIRST;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (TRIM(UPPER(DISTINCT vt0.lid))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (TRIM(UPPER(DISTINCT vt0.lid))))) UNION ALL SELECT * FROM vt0 WHERE (((TRIM(UPPER(DISTINCT vt0.lid))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c1, v0.c0, rt0.c3, vt0.lid, vt0.c0, rt0.c0, rt0.c4 FROM vt0, v0 INNER JOIN rt0 ON (+ (CAST(v0.c0 AS TEXT)));
SELECT DISTINCT rt0.c1, v0.c0, rt0.c3, vt0.lid, vt0.c0, rt0.c0, rt0.c4 FROM vt0, v0 INNER JOIN rt0 ON (+ (CAST(v0.c0 AS TEXT))) WHERE (ABS(DISTINCT vt0.lid COLLATE RTRIM)) UNION SELECT DISTINCT rt0.c1, v0.c0, rt0.c3, vt0.lid, vt0.c0, rt0.c0, rt0.c4 FROM vt0, v0 INNER JOIN rt0 ON (+ (CAST(v0.c0 AS TEXT))) WHERE ((NOT (ABS(DISTINCT vt0.lid COLLATE RTRIM)))) UNION SELECT DISTINCT rt0.c1, v0.c0, rt0.c3, vt0.lid, vt0.c0, rt0.c0, rt0.c4 FROM vt0, v0 INNER JOIN rt0 ON (+ (CAST(v0.c0 AS TEXT))) WHERE (((ABS(DISTINCT vt0.lid COLLATE RTRIM)) ISNULL));
SELECT DISTINCT rt0.c1, v0.c0, rt0.c3, vt0.lid, vt0.c0, rt0.c0, rt0.c4 FROM vt0, v0 INNER JOIN rt0 ON (+ (CAST(v0.c0 AS TEXT)));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.lid) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.lid))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.lid) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING ((((((((COUNT(GROUP_CONCAT(COUNT(*))))OR(MAX(AVG(rt0.c1)))))AND(MIN(rt0.c4))))AND(AVG(rt0.c0))))AND(((rt0.c0) NOT BETWEEN (v0.c0) AND (SUM(SUM(COUNT(*))))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING (NOT (((((((((COUNT(GROUP_CONCAT(COUNT(*))))OR(MAX(AVG(rt0.c1)))))AND(MIN(rt0.c4))))AND(AVG(rt0.c0))))AND(((rt0.c0) NOT BETWEEN (v0.c0) AND (SUM(SUM(COUNT(*))))))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING ((((((((((COUNT(GROUP_CONCAT(COUNT(*))))OR(MAX(AVG(rt0.c1)))))AND(MIN(rt0.c4))))AND(AVG(rt0.c0))))AND(((rt0.c0) NOT BETWEEN (v0.c0) AND (SUM(SUM(COUNT(*)))))))) ISNULL);
SELECT ALL MIN((- (CASE vt0.lid  WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 ELSE vt0.lid END))) FROM vt0 ORDER BY NULLIF(DISTINCT JULIANDAY(-9.98593536E8, vt0.lid, vt0.c0), ((vt0.c0) IS FALSE));
SELECT ALL * FROM rt0, vt0, v0;
SELECT ALL * FROM rt0, vt0, v0 WHERE (CASE ((rt0.c0) NOT NULL)  WHEN v0.c0 COLLATE RTRIM THEN ((rt0.c4)GLOB(vt0.lid)) ELSE v0.c0 COLLATE RTRIM END) UNION ALL SELECT ALL * FROM rt0, vt0, v0 WHERE ((NOT (CASE ((rt0.c0) NOT NULL)  WHEN v0.c0 COLLATE RTRIM THEN ((rt0.c4)GLOB(vt0.lid)) ELSE v0.c0 COLLATE RTRIM END))) UNION ALL SELECT * FROM rt0, vt0, v0 WHERE (((CASE ((rt0.c0) NOT NULL)  WHEN v0.c0 COLLATE RTRIM THEN ((rt0.c4)GLOB(vt0.lid)) ELSE v0.c0 COLLATE RTRIM END) ISNULL));
SELECT ALL * FROM rt0, vt0, v0;
