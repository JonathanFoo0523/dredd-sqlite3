-- Time: 2024/06/10 09:09:10
-- Database: database47
-- Database version: 3.40.0
-- seed value: 110033647
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, compress=likely, uncompress=likely); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, c3, c4); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=('|矁', -2.97895999E8); -- 0ms;
PRAGMA temp.defer_foreign_keys; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.07423681064043774 WHERE ((((vt0.c0)*(vt0.c0)))LIKE(vt0.c0)); -- 0ms;
INSERT OR REPLACE INTO rt1(c2, c1, c4, c3) VALUES ('㴝DA', '-1913919287', x'', '-297895999'); -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES ('63274710', x'', 0.07423681064043774, NULL, '|d('), ('4VmQ-u4H', '', 0Xffffffff969c0473, 0.4603917650476732, NULL), (0.4603917650476732, NULL, x'dba4a459', NULL, '~tCtim+'); -- 0ms;
CREATE TABLE t0 (c0 BLOB ); -- 0ms;
UPDATE OR ROLLBACK rt1 SET c1='-1768160141', c2=NULL; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 BEFORE INSERT ON t0 BEGIN INSERT OR REPLACE INTO rt1(c3, c2, c1) VALUES ('-403331702', NULL, x''), ('g휑''hA*', 0.1359700502180201, -1049307375), (x'', 0xffffffffc174d711, '-403331702');UPDATE OR IGNORE vt0 SET c0=NULL WHERE ((((vt0.c0 COLLATE NOCASE)OR((vt0.c0 IN ()))))AND(((vt0.c0)LIKE(vt0.c0))));END; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='0.4603917650476732' WHERE ((((vt0.c0) IS TRUE)) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (vt0.c0)); -- 0ms;
ANALYZE; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE vt0 SET (c0)=('V~S5-d|3') WHERE ((json_array_length(vt0.c0, vt0.c0))%(CAST(vt0.c0 AS REAL))); -- 0ms;
INSERT OR FAIL INTO rt1(c4, c0, c2, c1, c3) VALUES ('1236145070', NULL, '-1513341667', '63274710', x''), (1.23614507E9, '-1768160141', '-297895999', NULL, NULL), (0.07423681064043774, x'9fbf', 0.8192792041646649, x'9656', x''); -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c2, c4, c0) VALUES (NULL, x'', 0.9469345419212555, x''), (NULL, x'', 0.06320754434725218, NULL), ('-1787911533', NULL, NULL, x''), (0.9049234835317677, 0.5614381165464386, 'm*0\r', x''), ('63274710', '%RC', '~tCtim+', NULL); -- 4ms;
UPDATE OR ROLLBACK rt1 SET (c0, c3)=(x'f7f8', NULL); -- 0ms;
UPDATE OR ABORT rt1 SET c1='1769899511' WHERE NULL; -- 0ms;
PRAGMA checkpoint_fullfsync = true; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '2036'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-819802214,2');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1646378769); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt1 SET (c3)=(''); -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c3, c2, c4) VALUES (0.07423681064043774, 0x1800de36, x'', NULL), (NULL, 'M*0\r', NULL, x''), ('', x'', '-100921105', x''); -- 0ms;
UPDATE vt0 SET (c0)=(0Xffffffffd646b213); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-321223441,13');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA temp.mmap_size = -6148770377125173416; -- 0ms;
UPDATE rt1 SET (c4)=(x'') WHERE ((((rt1.c3)OR(rt1.c3)))*(CASE WHEN rt1.c3 THEN rt1.c4 END)); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
PRAGMA recursive_triggers; -- 0ms;
ANALYZE vt0; -- 1ms;
INSERT OR FAIL INTO vt0 VALUES (NULL), (0Xffffffffbe26002f), (0.827498352891399); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR FAIL vt0 SET c0='V~S5-D|3', c0='1468826244', c0=-1.768160141E9 WHERE CAST(((vt0.c0)<<(vt0.c0)) AS TEXT); -- 0ms;
UPDATE OR FAIL rt1 SET c4='' WHERE ((rt1.c4 COLLATE RTRIM)*(rt1.c3)); -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
END TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
VACUUM main; -- 2ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED, tokenize = "unicode61 remove_diacritics 0 tokenchars 'ᐟC'", detail=column, prefix = 926); -- 1ms;
ANALYZE temp; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (402710070); -- 0ms;
ANALYZE vt0; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('1679353756'); -- 0ms;
UPDATE OR IGNORE vt1 SET c0='-1513341667', c0=NULL WHERE (((vt1.c0) NOT NULL) IN ()); -- 0ms;
UPDATE vt1 SET (c0)=(''); -- 0ms;
PRAGMA secure_delete; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1040089186); -- 0ms;
DELETE FROM vt1; -- 0ms;
UPDATE vt0 SET c0=0X39e5fb81, c0=-1.787911533E9 WHERE LOWER(DISTINCT ((vt0.c0) IS FALSE)); -- 0ms;
REINDEX  rt1; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='1851120278'; -- 0ms;
UPDATE OR IGNORE rt1 SET (c3, c4)=('', x'ad34'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=9'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
REINDEX; -- 4ms;
UPDATE vt0 SET (c0)=(0Xffffffffe95d4f64); -- 1ms;
PRAGMA shrink_memory; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (''), (0.39787630118850126), (NULL); -- 0ms;
END TRANSACTION; -- 1ms;
PRAGMA auto_vacuum; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=1376452928, c0=NULL; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0)=(NULL) WHERE ((((vt0.c0)*(vt0.c0))) NOT BETWEEN (((vt0.c0)!=(vt0.c0))) AND (vt0.c0)); -- 0ms;
ANALYZE main; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
INSERT OR FAIL INTO rt1(c4) VALUES ('-435406860'), (x''), ('032,눓|A(a'); -- 0ms;
INSERT OR ABORT INTO rt1(c2, c4) VALUES (NULL, x'2a69'); -- 5ms;
ANALYZE; -- 0ms;
COMMIT; -- 0ms;
ANALYZE; -- 1ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt1 SET c0='-700009965'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(99648654 AS INTEGER))|(((NULL) BETWEEN (0.15304497435382258) AND ('-1104805841')))); -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=(0.9683794446826526); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(-1.768160141E9) WHERE json_quote((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
UPDATE vt1 SET c0=NULL; -- 0ms;
UPDATE vt1 SET (c0)=(6.327471E7); -- 0ms;
INSERT OR REPLACE INTO rt1(c4, c1, c2, c3, c0) VALUES (0.6203372459209986, x'0456', x'', 0.6870840447639428, NULL); -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES (NULL); -- 0ms;
PRAGMA locking_mode; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt1, rt1;
SELECT * FROM vt1, rt1 WHERE ((((((rt1.c1))<((rt1.c4)))) IS FALSE)) UNION ALL SELECT ALL * FROM vt1, rt1 WHERE ((NOT ((((((rt1.c1))<((rt1.c4)))) IS FALSE)))) UNION ALL SELECT ALL * FROM vt1, rt1 WHERE ((((((((rt1.c1))<((rt1.c4)))) IS FALSE)) ISNULL));
SELECT ALL * FROM vt1, rt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CASE WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt1.c0)))OR('1e500000')) ELSE ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(0Xffffffffc226a5c9)))OR(vt1.c0)) END) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CASE WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt1.c0)))OR('1e500000')) ELSE ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(0Xffffffffc226a5c9)))OR(vt1.c0)) END))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CASE WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt1.c0)))OR('1e500000')) ELSE ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(0Xffffffffc226a5c9)))OR(vt1.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM rt1, vt0, vt1 GROUP BY vt1.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1, vt0.c0;
SELECT ALL vt1.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM rt1, vt0, vt1 WHERE (((((rt1.c4) ISNULL))=(rtreenode(rt1.c0, rt1.c0)))) GROUP BY vt1.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1, vt0.c0 UNION SELECT ALL vt1.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM rt1, vt0, vt1 WHERE ((NOT (((((rt1.c4) ISNULL))==(rtreenode(rt1.c0, rt1.c0)))))) GROUP BY vt1.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1, vt0.c0 UNION SELECT ALL vt1.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM rt1, vt0, vt1 WHERE (((((((rt1.c4) ISNULL))==(rtreenode(rt1.c0, rt1.c0)))) ISNULL)) GROUP BY vt1.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1, vt0.c0;
SELECT vt1.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM rt1, vt0, vt1 GROUP BY vt1.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, rt1.c0, rt1.c3, rt1.c1 FROM rt1 FULL OUTER JOIN vt1 ON ((CASE WHEN vt1.c0 THEN rt1.c2 END) BETWEEN (x'f86b') AND ((~ (rt1.c3))));
SELECT vt1.c0, rt1.c0, rt1.c3, rt1.c1 FROM rt1 FULL OUTER JOIN vt1 ON ((CASE WHEN vt1.c0 THEN rt1.c2 END) BETWEEN (x'f86b') AND ((~ (rt1.c3)))) WHERE (rt1.c4) UNION ALL SELECT ALL vt1.c0, rt1.c0, rt1.c3, rt1.c1 FROM rt1 FULL OUTER JOIN vt1 ON ((CASE WHEN vt1.c0 THEN rt1.c2 END) BETWEEN (x'f86b') AND ((~ (rt1.c3)))) WHERE ((NOT (rt1.c4))) UNION ALL SELECT ALL vt1.c0, rt1.c0, rt1.c3, rt1.c1 FROM rt1 FULL OUTER JOIN vt1 ON ((CASE WHEN vt1.c0 THEN rt1.c2 END) BETWEEN (x'f86b') AND ((~ (rt1.c3)))) WHERE (((rt1.c4) ISNULL));
SELECT ALL vt1.c0, rt1.c0, rt1.c3, rt1.c1 FROM rt1 FULL OUTER JOIN vt1 ON ((CASE WHEN vt1.c0 THEN rt1.c2 END) BETWEEN (x'f86b') AND ((~ (rt1.c3))));
SELECT DISTINCT * FROM rt1, vt0, vt1;
SELECT DISTINCT * FROM rt1, vt0, vt1 WHERE (((((load_extension(rt1.c2, rt1.c0))OR(1065490830)))AND((('N5uuEX') NOT NULL)))) UNION SELECT DISTINCT * FROM rt1, vt0, vt1 WHERE ((NOT (((((load_extension(rt1.c2, rt1.c0))OR(1065490830)))AND((('N5uuEX') NOT NULL)))))) UNION SELECT DISTINCT * FROM rt1, vt0, vt1 WHERE (((((((load_extension(rt1.c2, rt1.c0))OR(1065490830)))AND((('N5uuEX') NOT NULL)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 WHERE ((((vt0.c0) IS TRUE) IN ())) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((vt0.c0) IS TRUE) IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE ((((((vt0.c0) IS TRUE) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT rt1.c1, rt1.c4, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c4, vt1.c0;
SELECT rt1.c1, rt1.c4, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c4, vt1.c0 HAVING rt1.c1 UNION ALL SELECT rt1.c1, rt1.c4, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c4, vt1.c0 HAVING (NOT (rt1.c1)) UNION ALL SELECT ALL rt1.c1, rt1.c4, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c4, vt1.c0 HAVING ((rt1.c1) ISNULL);
SELECT rt1.c1, rt1.c4, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c4, vt1.c0;
SELECT rt1.c1, rt1.c4, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c4, vt1.c0 HAVING rt1.c1 UNION ALL SELECT rt1.c1, rt1.c4, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c4, vt1.c0 HAVING (NOT (rt1.c1)) UNION ALL SELECT ALL rt1.c1, rt1.c4, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c4, vt1.c0 HAVING ((rt1.c1) ISNULL);
SELECT rt1.c1, rt1.c4, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c4, vt1.c0;
SELECT MAX(((((rt1.c3)<>(rt1.c3)))|(((rt1.c0) ISNULL)))) FROM vt1, rt1;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (CAST(vt1.c0 AS REAL) COLLATE RTRIM) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS REAL) COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS REAL) COLLATE RTRIM) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0, rt1 WHERE (CASE (+ (rt1.c1))  WHEN rt1.c0 THEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c4 END END) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((NOT (CASE (+ (rt1.c1))  WHEN rt1.c0 THEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c4 END END))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE (((CASE (+ (rt1.c1))  WHEN rt1.c0 THEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c4 END END) ISNULL));
SELECT DISTINCT * FROM vt0, rt1;
SELECT rt1.c1, vt0.c0, vt1.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c4 FROM vt1, vt0 LEFT OUTER JOIN rt1 ON (((('-297895999')*(rt1.c2)))||((+ (rt1.c0)))) GROUP BY rt1.c1, vt0.c0, vt1.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c4;
SELECT rt1.c1, vt0.c0, vt1.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c4 FROM vt1, vt0 LEFT OUTER JOIN rt1 ON (((('-297895999')*(rt1.c2)))||((+ (rt1.c0)))) WHERE ((((rt1.c4) IS FALSE) IN (((rt1.c0)IS(rt1.c3))))) GROUP BY rt1.c1, vt0.c0, vt1.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c4 UNION SELECT ALL rt1.c1, vt0.c0, vt1.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c4 FROM vt1, vt0 LEFT OUTER JOIN rt1 ON (((('-297895999')*(rt1.c2)))||((+ (rt1.c0)))) WHERE ((NOT ((((rt1.c4) IS FALSE) IN (((rt1.c0)IS(rt1.c3))))))) GROUP BY rt1.c1, vt0.c0, vt1.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c4 UNION SELECT ALL rt1.c1, vt0.c0, vt1.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c4 FROM vt1, vt0 LEFT OUTER JOIN rt1 ON (((('-297895999')*(rt1.c2)))||((+ (rt1.c0)))) WHERE ((((((rt1.c4) IS FALSE) IN (((rt1.c0)IS(rt1.c3))))) ISNULL)) GROUP BY rt1.c1, vt0.c0, vt1.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c4;
SELECT rt1.c1, vt0.c0, vt1.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c4 FROM vt1, vt0 LEFT OUTER JOIN rt1 ON (((('-297895999')*(rt1.c2)))||((+ (rt1.c0)))) GROUP BY rt1.c1, vt0.c0, vt1.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c4;
SELECT rt1.c3, rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c3, rt1.c0, vt0.c0, rt1.c1, rt1.c2;
SELECT rt1.c3, rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c3, rt1.c0, vt0.c0, rt1.c1, rt1.c2 HAVING AVG(CASE COUNT(COUNT(*))  WHEN TOTAL(COUNT(*)) THEN MAX(MAX(COUNT(*))) WHEN COUNT(rt1.c3) THEN rt1.c0 WHEN rt1.c2 THEN rt1.c4 END) UNION ALL SELECT rt1.c3, rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c3, rt1.c0, vt0.c0, rt1.c1, rt1.c2 HAVING (NOT (AVG(CASE COUNT(COUNT(*))  WHEN TOTAL(COUNT(*)) THEN MAX(MAX(COUNT(*))) WHEN COUNT(rt1.c3) THEN rt1.c0 WHEN rt1.c2 THEN rt1.c4 END))) UNION ALL SELECT ALL rt1.c3, rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c3, rt1.c0, vt0.c0, rt1.c1, rt1.c2 HAVING ((AVG(CASE COUNT(COUNT(*))  WHEN TOTAL(COUNT(*)) THEN MAX(MAX(COUNT(*))) WHEN COUNT(rt1.c3) THEN rt1.c0 WHEN rt1.c2 THEN rt1.c4 END)) ISNULL);
SELECT * FROM vt0, rt1, vt1;
SELECT ALL * FROM vt0, rt1, vt1 WHERE ((((((((((((('517219957')AND('-700009965')))AND(((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c3)))))OR(((NULL) IS FALSE))))AND(CAST(rt1.c3 AS BLOB))))OR(rt1.c1)))AND(CAST(vt1.c0 AS TEXT)))) UNION ALL SELECT ALL * FROM vt0, rt1, vt1 WHERE ((NOT ((((((((((((('517219957')AND('-700009965')))AND(((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c3)))))OR(((NULL) IS FALSE))))AND(CAST(rt1.c3 AS BLOB))))OR(rt1.c1)))AND(CAST(vt1.c0 AS TEXT)))))) UNION ALL SELECT ALL * FROM vt0, rt1, vt1 WHERE ((((((((((((((('517219957')AND('-700009965')))AND(((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c3)))))OR(((NULL) IS FALSE))))AND(CAST(rt1.c3 AS BLOB))))OR(rt1.c1)))AND(CAST(vt1.c0 AS TEXT)))) ISNULL));
SELECT * FROM vt0, rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1, vt0;
SELECT DISTINCT * FROM rt1, vt1, vt0 WHERE ((- (((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))OR('-321223441')))AND(rt1.c0))))) UNION SELECT DISTINCT * FROM rt1, vt1, vt0 WHERE ((NOT ((- (((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))OR('-321223441')))AND(rt1.c0))))))) UNION SELECT DISTINCT * FROM rt1, vt1, vt0 WHERE ((((- (((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))OR('-321223441')))AND(rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1, vt1, vt0;
SELECT rt1.c1, vt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c1, vt1.c0;
SELECT ALL rt1.c1, vt1.c0 FROM vt0, vt1, rt1 WHERE ((((rt1.c1 COLLATE RTRIM, (((vt1.c0, rt1.c4, ''))<((rt1.c4, vt1.c0, rt1.c1))), (+ (rt1.c3))))=(((((rt1.c1))>((vt0.c0))), (~ (rt1.c1)), NULLIF(rt1.c2, vt0.c0))))) GROUP BY rt1.c1, vt1.c0 UNION SELECT rt1.c1, vt1.c0 FROM vt0, vt1, rt1 WHERE ((NOT ((((rt1.c1 COLLATE RTRIM, (((vt1.c0, rt1.c4, ''))<((rt1.c4, vt1.c0, rt1.c1))), (+ (rt1.c3))))=(((((rt1.c1))>((vt0.c0))), (~ (rt1.c1)), NULLIF(rt1.c2, vt0.c0))))))) GROUP BY rt1.c1, vt1.c0 UNION SELECT ALL rt1.c1, vt1.c0 FROM vt0, vt1, rt1 WHERE ((((((rt1.c1 COLLATE RTRIM, (((vt1.c0, rt1.c4, ''))<((rt1.c4, vt1.c0, rt1.c1))), (+ (rt1.c3))))==(((((rt1.c1))>((vt0.c0))), (~ (rt1.c1)), NULLIF(rt1.c2, vt0.c0))))) ISNULL)) GROUP BY rt1.c1, vt1.c0;
SELECT rt1.c1, vt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c1, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(((SUM(COUNT(vt1.c0)))||(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(((SUM(COUNT(vt1.c0)))||(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(((SUM(COUNT(vt1.c0)))||(vt1.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((((((CAST(vt0.c0 AS BLOB))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0Xffffffffc57051e2 THEN vt0.c0 WHEN 0.7618288975770834 THEN vt0.c0 ELSE vt0.c0 END)))AND(TYPEOF(vt0.c0))))AND(((vt0.c0) ISNULL))))OR((((vt0.c0))<((vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((((CAST(vt0.c0 AS BLOB))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0Xffffffffc57051e2 THEN vt0.c0 WHEN 0.7618288975770834 THEN vt0.c0 ELSE vt0.c0 END)))AND(TYPEOF(vt0.c0))))AND(((vt0.c0) ISNULL))))OR((((vt0.c0))<((vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((((((CAST(vt0.c0 AS BLOB))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0Xffffffffc57051e2 THEN vt0.c0 WHEN 0.7618288975770834 THEN vt0.c0 ELSE vt0.c0 END)))AND(TYPEOF(vt0.c0))))AND(((vt0.c0) ISNULL))))OR((((vt0.c0))<((vt0.c0)))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT rt1.c4, rt1.c3, rt1.c0, rt1.c1, rt1.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON SQLITE_COMPILEOPTION_USED((vt0.c0 IN ())) FULL OUTER JOIN rt1 ON ((CASE vt0.c0  WHEN rt1.c3 THEN vt1.c0 ELSE rt1.c3 END)OR(((((((((((((rt1.c4)AND(rt1.c2)))OR(vt0.c0)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c3))));
SELECT DISTINCT rt1.c4, rt1.c3, rt1.c0, rt1.c1, rt1.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON SQLITE_COMPILEOPTION_USED((vt0.c0 IN ())) FULL OUTER JOIN rt1 ON ((CASE vt0.c0  WHEN rt1.c3 THEN vt1.c0 ELSE rt1.c3 END)OR(((((((((((((rt1.c4)AND(rt1.c2)))OR(vt0.c0)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c3)))) WHERE (((((rt1.c1)*(vt1.c0))) NOTNULL)) UNION SELECT DISTINCT rt1.c4, rt1.c3, rt1.c0, rt1.c1, rt1.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON SQLITE_COMPILEOPTION_USED((vt0.c0 IN ())) FULL OUTER JOIN rt1 ON ((CASE vt0.c0  WHEN rt1.c3 THEN vt1.c0 ELSE rt1.c3 END)OR(((((((((((((rt1.c4)AND(rt1.c2)))OR(vt0.c0)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c3)))) WHERE ((NOT (((((rt1.c1)*(vt1.c0))) NOTNULL)))) UNION SELECT DISTINCT rt1.c4, rt1.c3, rt1.c0, rt1.c1, rt1.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON SQLITE_COMPILEOPTION_USED((vt0.c0 IN ())) FULL OUTER JOIN rt1 ON ((CASE vt0.c0  WHEN rt1.c3 THEN vt1.c0 ELSE rt1.c3 END)OR(((((((((((((rt1.c4)AND(rt1.c2)))OR(vt0.c0)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c3)))) WHERE (((((((rt1.c1)*(vt1.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT rt1.c4, rt1.c3, rt1.c0, rt1.c1, rt1.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON SQLITE_COMPILEOPTION_USED((vt0.c0 IN ())) FULL OUTER JOIN rt1 ON ((CASE vt0.c0  WHEN rt1.c3 THEN vt1.c0 ELSE rt1.c3 END)OR(((((((((((((rt1.c4)AND(rt1.c2)))OR(vt0.c0)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c3))));
SELECT rt1.c0, rt1.c2, vt0.c0, rt1.c1, rt1.c4 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c2, vt0.c0, rt1.c1, rt1.c4;
SELECT ALL rt1.c0, rt1.c2, vt0.c0, rt1.c1, rt1.c4 FROM rt1, vt0 WHERE (CAST(('' IN ()) AS NUMERIC)) GROUP BY rt1.c0, rt1.c2, vt0.c0, rt1.c1, rt1.c4 UNION SELECT rt1.c0, rt1.c2, vt0.c0, rt1.c1, rt1.c4 FROM rt1, vt0 WHERE ((NOT (CAST(('' IN ()) AS NUMERIC)))) GROUP BY rt1.c0, rt1.c2, vt0.c0, rt1.c1, rt1.c4 UNION SELECT ALL rt1.c0, rt1.c2, vt0.c0, rt1.c1, rt1.c4 FROM rt1, vt0 WHERE (((CAST(('' IN ()) AS NUMERIC)) ISNULL)) GROUP BY rt1.c0, rt1.c2, vt0.c0, rt1.c1, rt1.c4;
SELECT rt1.c0, rt1.c2, vt0.c0, rt1.c1, rt1.c4 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c2, vt0.c0, rt1.c1, rt1.c4;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING CASE WHEN (MIN(SUM(vt1.c0)) IN (MAX(MIN(AVG(MIN(vt1.c0)))))) THEN SUM(vt1.c0) ELSE AVG(MIN(TOTAL(vt0.c0))) END UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (CASE WHEN (MIN(SUM(vt1.c0)) IN (MAX(MIN(AVG(MIN(vt1.c0)))))) THEN SUM(vt1.c0) ELSE AVG(MIN(TOTAL(vt0.c0))) END)) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((CASE WHEN (MIN(SUM(vt1.c0)) IN (MAX(MIN(AVG(MIN(vt1.c0)))))) THEN SUM(vt1.c0) ELSE AVG(MIN(TOTAL(vt0.c0))) END) ISNULL);
SELECT MAX((((x'fd50' IN ())) NOT BETWEEN ((vt1.c0 IN (vt1.c0))) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) FROM vt1 ORDER BY (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((-1768689509, '-819802214', vt1.c0))))<>(NULL)) ASC  NULLS FIRST, '1188968426' DESC  NULLS LAST;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0)/(vt1.c0)))IS(((vt1.c0) BETWEEN (x'') AND (vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)/(vt1.c0)))IS(((vt1.c0) BETWEEN (x'') AND (vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)/(vt1.c0)))IS(((vt1.c0) BETWEEN (x'') AND (vt1.c0))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c2)IS NOT(rt1.c0)) IN (CASE rt1.c0  WHEN '' THEN rt1.c1 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c1 END, ((rt1.c1)<<(rt1.c2))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((rt1.c2)IS NOT(rt1.c0)) IN (CASE rt1.c0  WHEN '' THEN rt1.c1 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c1 END, ((rt1.c1)<<(rt1.c2))))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c2)IS NOT(rt1.c0)) IN (CASE rt1.c0  WHEN '' THEN rt1.c1 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c1 END, ((rt1.c1)<<(rt1.c2))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL vt0.c0, vt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1 INNER JOIN vt0 ON CASE CAST(vt1.c0 AS INTEGER)  WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (rt1.c1)) THEN ((x'')IS NOT(rt1.c0)) ELSE ((vt0.c0) BETWEEN (x'') AND (rt1.c1)) END GROUP BY vt0.c0, vt1.c0, rt1.c1, rt1.c2;
SELECT vt0.c0, vt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1 INNER JOIN vt0 ON CASE CAST(vt1.c0 AS INTEGER)  WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (rt1.c1)) THEN ((x'')IS NOT(rt1.c0)) ELSE ((vt0.c0) BETWEEN (x'') AND (rt1.c1)) END WHERE ((((vt0.c0)) NOT BETWEEN ((SQLITE_COMPILEOPTION_USED(rt1.c0))) AND (('-1787911533')))) GROUP BY vt0.c0, vt1.c0, rt1.c1, rt1.c2 UNION SELECT ALL vt0.c0, vt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1 INNER JOIN vt0 ON CASE CAST(vt1.c0 AS INTEGER)  WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (rt1.c1)) THEN ((x'')IS NOT(rt1.c0)) ELSE ((vt0.c0) BETWEEN (x'') AND (rt1.c1)) END WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((SQLITE_COMPILEOPTION_USED(rt1.c0))) AND (('-1787911533')))))) GROUP BY vt0.c0, vt1.c0, rt1.c1, rt1.c2 UNION SELECT vt0.c0, vt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1 INNER JOIN vt0 ON CASE CAST(vt1.c0 AS INTEGER)  WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (rt1.c1)) THEN ((x'')IS NOT(rt1.c0)) ELSE ((vt0.c0) BETWEEN (x'') AND (rt1.c1)) END WHERE ((((((vt0.c0)) NOT BETWEEN ((SQLITE_COMPILEOPTION_USED(rt1.c0))) AND (('-1787911533')))) ISNULL)) GROUP BY vt0.c0, vt1.c0, rt1.c1, rt1.c2;
SELECT ALL vt0.c0, vt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1 INNER JOIN vt0 ON CASE CAST(vt1.c0 AS INTEGER)  WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (rt1.c1)) THEN ((x'')IS NOT(rt1.c0)) ELSE ((vt0.c0) BETWEEN (x'') AND (rt1.c1)) END GROUP BY vt0.c0, vt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c0, rt1.c3 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c3;
SELECT rt1.c0, rt1.c3 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c3 HAVING SUM(((rt1.c2) IS FALSE)) UNION ALL SELECT rt1.c0, rt1.c3 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c3 HAVING (NOT (SUM(((rt1.c2) IS FALSE)))) UNION ALL SELECT ALL rt1.c0, rt1.c3 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c3 HAVING ((SUM(((rt1.c2) IS FALSE))) ISNULL);
SELECT rt1.c0, rt1.c3 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c3;
SELECT rt1.c0, rt1.c3 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c3 HAVING SUM(((rt1.c2) IS FALSE)) UNION ALL SELECT rt1.c0, rt1.c3 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c3 HAVING (NOT (SUM(((rt1.c2) IS FALSE)))) UNION ALL SELECT ALL rt1.c0, rt1.c3 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c3 HAVING ((SUM(((rt1.c2) IS FALSE))) ISNULL);
SELECT rt1.c0, rt1.c3 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c3;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (NULL) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (NULL))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((NULL) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT rt1.c1, vt1.c0, rt1.c0, rt1.c4, rt1.c3, rt1.c2 FROM vt1, rt1;
SELECT DISTINCT rt1.c1, vt1.c0, rt1.c0, rt1.c4, rt1.c3, rt1.c2 FROM vt1, rt1 WHERE ((((rt1.c3))>=((LENGTH(rt1.c2))))) UNION SELECT DISTINCT rt1.c1, vt1.c0, rt1.c0, rt1.c4, rt1.c3, rt1.c2 FROM vt1, rt1 WHERE ((NOT ((((rt1.c3))>=((LENGTH(rt1.c2))))))) UNION SELECT DISTINCT rt1.c1, vt1.c0, rt1.c0, rt1.c4, rt1.c3, rt1.c2 FROM vt1, rt1 WHERE ((((((rt1.c3))>=((LENGTH(rt1.c2))))) ISNULL));
SELECT DISTINCT rt1.c1, vt1.c0, rt1.c0, rt1.c4, rt1.c3, rt1.c2 FROM vt1, rt1;
SELECT ALL vt0.c0, vt1.c0, rt1.c1, rt1.c2, rt1.c4, rt1.c3 FROM vt1 NOT INDEXED, vt0, rt1 GROUP BY vt0.c0, vt1.c0, rt1.c1, rt1.c2, rt1.c4, rt1.c3;
SELECT ALL vt0.c0, vt1.c0, rt1.c1, rt1.c2, rt1.c4, rt1.c3 FROM vt1, vt0, rt1 WHERE ((x'' IN ())) GROUP BY vt0.c0, vt1.c0, rt1.c1, rt1.c2, rt1.c4, rt1.c3 UNION SELECT ALL vt0.c0, vt1.c0, rt1.c1, rt1.c2, rt1.c4, rt1.c3 FROM vt1, vt0, rt1 WHERE ((NOT ((x'' IN ())))) GROUP BY vt0.c0, vt1.c0, rt1.c1, rt1.c2, rt1.c4, rt1.c3 UNION SELECT ALL vt0.c0, vt1.c0, rt1.c1, rt1.c2, rt1.c4, rt1.c3 FROM vt1, vt0, rt1 WHERE ((((x'' IN ())) ISNULL)) GROUP BY vt0.c0, vt1.c0, rt1.c1, rt1.c2, rt1.c4, rt1.c3;
SELECT ALL vt0.c0, vt1.c0, rt1.c1, rt1.c2, rt1.c4, rt1.c3 FROM vt1 NOT INDEXED, vt0, rt1 GROUP BY vt0.c0, vt1.c0, rt1.c1, rt1.c2, rt1.c4, rt1.c3;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS NUMERIC))) AND ((COUNT(MIN(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS NUMERIC))) AND ((COUNT(MIN(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS NUMERIC))) AND ((COUNT(MIN(vt1.c0)))))) ISNULL);
SELECT ALL SUM((~ (CAST(rt1.c4 AS TEXT)))) FROM rt1, vt1, vt0 ORDER BY rt1.c2  NULLS LAST;
SELECT * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0)|(vt1.c0))) NOT NULL)) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (((((vt1.c0)|(vt1.c0))) NOT NULL)))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((((((vt1.c0)|(vt1.c0))) NOT NULL)) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT * FROM rt1, vt0 CROSS JOIN vt1 ON ((((rt1.c4)!=(rt1.c1)))<<(((rt1.c4) IS FALSE)));
SELECT DISTINCT * FROM rt1, vt0 CROSS JOIN vt1 ON ((((rt1.c4)<>(rt1.c1)))<<(((rt1.c4) IS FALSE))) WHERE ((((+ (rt1.c3))) IS TRUE)) UNION SELECT DISTINCT * FROM rt1, vt0 CROSS JOIN vt1 ON ((((rt1.c4)!=(rt1.c1)))<<(((rt1.c4) IS FALSE))) WHERE ((NOT ((((+ (rt1.c3))) IS TRUE)))) UNION SELECT DISTINCT * FROM rt1, vt0 CROSS JOIN vt1 ON ((((rt1.c4)!=(rt1.c1)))<<(((rt1.c4) IS FALSE))) WHERE ((((((+ (rt1.c3))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt1, vt0 CROSS JOIN vt1 ON ((((rt1.c4)!=(rt1.c1)))<<(((rt1.c4) IS FALSE)));
SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))%(CAST(vt0.c0 AS NUMERIC))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))%(CAST(vt0.c0 AS NUMERIC))) WHERE (((vt0.c0) IS FALSE) COLLATE RTRIM) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))%(CAST(vt0.c0 AS NUMERIC))) WHERE ((NOT (((vt0.c0) IS FALSE) COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))%(CAST(vt0.c0 AS NUMERIC))) WHERE (((((vt0.c0) IS FALSE) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))%(CAST(vt0.c0 AS NUMERIC))) GROUP BY vt1.c0;
SELECT rt1.c4 FROM vt1, rt1 GROUP BY rt1.c4;
SELECT ALL rt1.c4 FROM vt1, rt1 GROUP BY rt1.c4 HAVING TOTAL((rt1.c3 IN (COUNT(*)))) UNION ALL SELECT ALL rt1.c4 FROM vt1, rt1 GROUP BY rt1.c4 HAVING (NOT (TOTAL((rt1.c3 IN (COUNT(*)))))) UNION ALL SELECT ALL rt1.c4 FROM vt1, rt1 GROUP BY rt1.c4 HAVING ((TOTAL((rt1.c3 IN (COUNT(*))))) ISNULL);
SELECT ALL * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (0.44775148207115234) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT (0.44775148207115234))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE (((0.44775148207115234) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((('')!=(vt1.c0))))<=((vt1.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((('')!=(vt1.c0))))<=((vt1.c0 COLLATE RTRIM)))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((((('')<>(vt1.c0))))<=((vt1.c0 COLLATE RTRIM)))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT ALL rt1.c3, vt0.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c3, vt0.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c0;
SELECT rt1.c3, vt0.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c0 FROM vt0, rt1 WHERE (x'') GROUP BY rt1.c3, vt0.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c0 UNION SELECT ALL rt1.c3, vt0.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c0 FROM vt0, rt1 WHERE ((NOT (x''))) GROUP BY rt1.c3, vt0.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c0 UNION SELECT rt1.c3, vt0.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c0 FROM vt0, rt1 WHERE (((x'') ISNULL)) GROUP BY rt1.c3, vt0.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c0;
SELECT ALL rt1.c3, vt0.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c3, vt0.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING 0X15ce450d UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (0x15ce450d)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((0X15ce450d) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING 0X15ce450d UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (0x15ce450d)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((0X15ce450d) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1 INNER JOIN vt0 ON ((((vt0.c0) NOT NULL))<=((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))));
SELECT ALL vt0.c0 FROM vt1 INNER JOIN vt0 ON ((((vt0.c0) NOT NULL))<=((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) WHERE ((((vt1.c0) IS TRUE) IN ())) ORDER BY ((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE, (((((vt1.c0)IS(vt1.c0)), json_array_length(vt0.c0), ((vt1.c0)*(vt1.c0))))!=((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, ((vt0.c0)-(vt0.c0)), CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN '1754817940' WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))) DESC;
SELECT ALL vt0.c0 FROM vt1 INNER JOIN vt0 ON ((((vt0.c0) NOT NULL))<=((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) WHERE ((NOT ((((vt1.c0) IS TRUE) IN ())))) ORDER BY ((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE, (((((vt1.c0)IS(vt1.c0)), json_array_length(vt0.c0), ((vt1.c0)*(vt1.c0))))!=((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, ((vt0.c0)-(vt0.c0)), CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN '1754817940' WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))) DESC;
SELECT ALL vt0.c0 FROM vt1 INNER JOIN vt0 ON ((((vt0.c0) NOT NULL))<=((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) WHERE ((((((vt1.c0) IS TRUE) IN ())) ISNULL)) ORDER BY ((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE, (((((vt1.c0)IS(vt1.c0)), json_array_length(vt0.c0), ((vt1.c0)*(vt1.c0))))<>((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, ((vt0.c0)-(vt0.c0)), CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN '1754817940' WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))) DESC;
SELECT ALL vt0.c0 FROM vt1 INNER JOIN vt0 ON ((((vt0.c0) NOT NULL))<=((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))));
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((('~tctim+') BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((('~tctim+') BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((('~tctim+') BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt1.c4, vt0.c0, rt1.c1 FROM vt0, vt1, rt1 GROUP BY rt1.c4, vt0.c0, rt1.c1;
SELECT ALL rt1.c4, vt0.c0, rt1.c1 FROM vt0, vt1, rt1 WHERE (((((((((0X6418e79c)AND(rt1.c4)))AND(((vt0.c0) IS TRUE))))OR(rt1.c0)))OR(vt1.c0 COLLATE BINARY))) GROUP BY rt1.c4, vt0.c0, rt1.c1 UNION SELECT ALL rt1.c4, vt0.c0, rt1.c1 FROM vt0, vt1, rt1 WHERE ((NOT (((((((((0x6418e79c)AND(rt1.c4)))AND(((vt0.c0) IS TRUE))))OR(rt1.c0)))OR(vt1.c0 COLLATE BINARY))))) GROUP BY rt1.c4, vt0.c0, rt1.c1 UNION SELECT ALL rt1.c4, vt0.c0, rt1.c1 FROM vt0, vt1, rt1 WHERE (((((((((((0x6418e79c)AND(rt1.c4)))AND(((vt0.c0) IS TRUE))))OR(rt1.c0)))OR(vt1.c0 COLLATE BINARY))) ISNULL)) GROUP BY rt1.c4, vt0.c0, rt1.c1;
SELECT rt1.c4, vt0.c0, rt1.c1 FROM vt0, vt1, rt1 GROUP BY rt1.c4, vt0.c0, rt1.c1;
SELECT ALL vt1.c0, rt1.c4 FROM vt1, vt0 CROSS JOIN rt1 ON (((rt1.c4 IN (rt1.c4)))&(rt1.c4)) GROUP BY vt1.c0, rt1.c4;
SELECT vt1.c0, rt1.c4 FROM vt1, vt0 CROSS JOIN rt1 ON (((rt1.c4 IN (rt1.c4)))&(rt1.c4)) GROUP BY vt1.c0, rt1.c4 HAVING COUNT(*) UNION ALL SELECT vt1.c0, rt1.c4 FROM vt1, vt0 CROSS JOIN rt1 ON (((rt1.c4 IN (rt1.c4)))&(rt1.c4)) GROUP BY vt1.c0, rt1.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, rt1.c4 FROM vt1, vt0 CROSS JOIN rt1 ON (((rt1.c4 IN (rt1.c4)))&(rt1.c4)) GROUP BY vt1.c0, rt1.c4 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, rt1.c4 FROM vt1, vt0 CROSS JOIN rt1 ON (((rt1.c4 IN (rt1.c4)))&(rt1.c4)) GROUP BY vt1.c0, rt1.c4;
SELECT vt1.c0, rt1.c4 FROM vt1, vt0 CROSS JOIN rt1 ON (((rt1.c4 IN (rt1.c4)))&(rt1.c4)) GROUP BY vt1.c0, rt1.c4 HAVING COUNT(*) UNION ALL SELECT vt1.c0, rt1.c4 FROM vt1, vt0 CROSS JOIN rt1 ON (((rt1.c4 IN (rt1.c4)))&(rt1.c4)) GROUP BY vt1.c0, rt1.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, rt1.c4 FROM vt1, vt0 CROSS JOIN rt1 ON (((rt1.c4 IN (rt1.c4)))&(rt1.c4)) GROUP BY vt1.c0, rt1.c4 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, rt1.c4 FROM vt1, vt0 CROSS JOIN rt1 ON (((rt1.c4 IN (rt1.c4)))&(rt1.c4)) GROUP BY vt1.c0, rt1.c4;
SELECT ALL * FROM rt1, vt1, vt0;
SELECT ALL * FROM rt1, vt1, vt0 WHERE (TIME(ROUND(rt1.c4, vt1.c0), (((rt1.c4))>=((rt1.c2))), CAST(rt1.c4 AS REAL), ((0.08167659359199753)!=(vt0.c0)), CASE WHEN NULL THEN rt1.c4 END)) UNION ALL SELECT ALL * FROM rt1, vt1, vt0 WHERE ((NOT (TIME(ROUND(rt1.c4, vt1.c0), (((rt1.c4))>=((rt1.c2))), CAST(rt1.c4 AS REAL), ((0.08167659359199753)<>(vt0.c0)), CASE WHEN NULL THEN rt1.c4 END)))) UNION ALL SELECT ALL * FROM rt1, vt1, vt0 WHERE (((TIME(ROUND(rt1.c4, vt1.c0), (((rt1.c4))>=((rt1.c2))), CAST(rt1.c4 AS REAL), ((0.08167659359199753)!=(vt0.c0)), CASE WHEN NULL THEN rt1.c4 END)) ISNULL));
SELECT ALL * FROM rt1, vt1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (vt0.c0) AND ((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, 0.08167659359199753)))))) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE ((NOT ((((vt0.c0 IN ())) NOT BETWEEN (vt0.c0) AND ((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, 0.08167659359199753)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0 IN ())) NOT BETWEEN (vt0.c0) AND ((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, 0.08167659359199753)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)|(vt0.c0)))IS NOT(CAST(NULL AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)|(vt0.c0)))IS NOT(CAST(NULL AS NUMERIC)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)|(vt0.c0)))IS NOT(CAST(NULL AS NUMERIC)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c2, rt1.c1, rt1.c4, vt1.c0, rt1.c3, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c1, rt1.c4, vt1.c0, rt1.c3, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c4, vt1.c0, rt1.c3, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c1, rt1.c4, vt1.c0, rt1.c3, rt1.c0 HAVING MIN(((((GROUP_CONCAT(rt1.c3))AND(rt1.c3)))OR(MAX(SUM(vt1.c0))))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c4, vt1.c0, rt1.c3, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c1, rt1.c4, vt1.c0, rt1.c3, rt1.c0 HAVING (NOT (MIN(((((GROUP_CONCAT(rt1.c3))AND(rt1.c3)))OR(MAX(SUM(vt1.c0))))))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c4, vt1.c0, rt1.c3, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c1, rt1.c4, vt1.c0, rt1.c3, rt1.c0 HAVING ((MIN(((((GROUP_CONCAT(rt1.c3))AND(rt1.c3)))OR(MAX(SUM(vt1.c0)))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, rt1, vt1;
SELECT DISTINCT * FROM vt0, rt1, vt1 WHERE ('') UNION SELECT DISTINCT * FROM vt0, rt1, vt1 WHERE ((NOT (''))) UNION SELECT DISTINCT * FROM vt0, rt1, vt1 WHERE ((('') ISNULL));
SELECT DISTINCT * FROM vt0, rt1, vt1;
SELECT ALL vt1.c0, rt1.c3, rt1.c0, rt1.c4, vt0.c0, rt1.c1 FROM vt1, rt1 INNER JOIN vt0 ON COALESCE(DISTINCT COALESCE(vt0.c0, '1533433840'), vt1.c0 COLLATE NOCASE) GROUP BY vt1.c0, rt1.c3, rt1.c0, rt1.c4, vt0.c0, rt1.c1;
SELECT vt1.c0, rt1.c3, rt1.c0, rt1.c4, vt0.c0, rt1.c1 FROM vt1, rt1 INNER JOIN vt0 ON COALESCE(DISTINCT COALESCE(vt0.c0, '1533433840'), vt1.c0 COLLATE NOCASE) WHERE ((((rt1.c4)||(rt1.c0)) IN ())) GROUP BY vt1.c0, rt1.c3, rt1.c0, rt1.c4, vt0.c0, rt1.c1 UNION SELECT ALL vt1.c0, rt1.c3, rt1.c0, rt1.c4, vt0.c0, rt1.c1 FROM vt1, rt1 INNER JOIN vt0 ON COALESCE(DISTINCT COALESCE(vt0.c0, '1533433840'), vt1.c0 COLLATE NOCASE) WHERE ((NOT ((((rt1.c4)||(rt1.c0)) IN ())))) GROUP BY vt1.c0, rt1.c3, rt1.c0, rt1.c4, vt0.c0, rt1.c1 UNION SELECT ALL vt1.c0, rt1.c3, rt1.c0, rt1.c4, vt0.c0, rt1.c1 FROM vt1, rt1 INNER JOIN vt0 ON COALESCE(DISTINCT COALESCE(vt0.c0, '1533433840'), vt1.c0 COLLATE NOCASE) WHERE ((((((rt1.c4)||(rt1.c0)) IN ())) ISNULL)) GROUP BY vt1.c0, rt1.c3, rt1.c0, rt1.c4, vt0.c0, rt1.c1;
SELECT ALL vt1.c0, rt1.c3, rt1.c0, rt1.c4, vt0.c0, rt1.c1 FROM vt1, rt1 INNER JOIN vt0 ON COALESCE(DISTINCT COALESCE(vt0.c0, '1533433840'), vt1.c0 COLLATE NOCASE) GROUP BY vt1.c0, rt1.c3, rt1.c0, rt1.c4, vt0.c0, rt1.c1;
SELECT vt0.c0, rt1.c0 FROM vt1, rt1, vt0 GROUP BY vt0.c0, rt1.c0;
SELECT ALL vt0.c0, rt1.c0 FROM vt1, rt1, vt0 GROUP BY vt0.c0, rt1.c0 HAVING AVG(x'2b5cbe76') UNION ALL SELECT vt0.c0, rt1.c0 FROM vt1, rt1, vt0 GROUP BY vt0.c0, rt1.c0 HAVING (NOT (AVG(x'2b5cbe76'))) UNION ALL SELECT ALL vt0.c0, rt1.c0 FROM vt1, rt1, vt0 GROUP BY vt0.c0, rt1.c0 HAVING ((AVG(x'2b5cbe76')) ISNULL);
SELECT vt0.c0, rt1.c0 FROM vt1, rt1, vt0 GROUP BY vt0.c0, rt1.c0;
SELECT ALL vt0.c0, rt1.c0 FROM vt1, rt1, vt0 GROUP BY vt0.c0, rt1.c0 HAVING AVG(x'2b5cbe76') UNION ALL SELECT vt0.c0, rt1.c0 FROM vt1, rt1, vt0 GROUP BY vt0.c0, rt1.c0 HAVING (NOT (AVG(x'2b5cbe76'))) UNION ALL SELECT ALL vt0.c0, rt1.c0 FROM vt1, rt1, vt0 GROUP BY vt0.c0, rt1.c0 HAVING ((AVG(x'2b5cbe76')) ISNULL);
SELECT vt0.c0, rt1.c0 FROM vt1, rt1, vt0 GROUP BY vt0.c0, rt1.c0;
SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (((1504792004)IS NOT(vt1.c0)) IN (vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS REAL)));
SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (((1504792004)IS NOT(vt1.c0)) IN (vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS REAL))) WHERE ((~ (((vt0.c0)&(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (((1504792004)IS NOT(vt1.c0)) IN (vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS REAL))) WHERE ((NOT ((~ (((vt0.c0)&(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (((1504792004)IS NOT(vt1.c0)) IN (vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS REAL))) WHERE ((((~ (((vt0.c0)&(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (((1504792004)IS NOT(vt1.c0)) IN (vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS REAL)));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((~ (((vt1.c0)<>(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((~ (((vt1.c0)!=(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((~ (((vt1.c0)<>(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt1.c2, vt0.c0, rt1.c0, rt1.c1 FROM vt0 RIGHT OUTER JOIN rt1 ON (((NOT (rt1.c3)))<=(((((((((rt1.c0)OR(rt1.c4)))AND(rt1.c1)))OR(vt0.c0)))OR(vt0.c0)))) GROUP BY rt1.c2, vt0.c0, rt1.c0, rt1.c1;
SELECT rt1.c2, vt0.c0, rt1.c0, rt1.c1 FROM vt0 RIGHT OUTER JOIN rt1 ON (((NOT (rt1.c3)))<=(((((((((rt1.c0)OR(rt1.c4)))AND(rt1.c1)))OR(vt0.c0)))OR(vt0.c0)))) WHERE (((x'5f74' COLLATE RTRIM) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND (((rt1.c4) NOTNULL)))) GROUP BY rt1.c2, vt0.c0, rt1.c0, rt1.c1 UNION SELECT rt1.c2, vt0.c0, rt1.c0, rt1.c1 FROM vt0 RIGHT OUTER JOIN rt1 ON (((NOT (rt1.c3)))<=(((((((((rt1.c0)OR(rt1.c4)))AND(rt1.c1)))OR(vt0.c0)))OR(vt0.c0)))) WHERE ((NOT (((x'5f74' COLLATE RTRIM) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND (((rt1.c4) NOTNULL)))))) GROUP BY rt1.c2, vt0.c0, rt1.c0, rt1.c1 UNION SELECT rt1.c2, vt0.c0, rt1.c0, rt1.c1 FROM vt0 RIGHT OUTER JOIN rt1 ON (((NOT (rt1.c3)))<=(((((((((rt1.c0)OR(rt1.c4)))AND(rt1.c1)))OR(vt0.c0)))OR(vt0.c0)))) WHERE (((((x'5f74' COLLATE RTRIM) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND (((rt1.c4) NOTNULL)))) ISNULL)) GROUP BY rt1.c2, vt0.c0, rt1.c0, rt1.c1;
SELECT rt1.c2, vt0.c0, rt1.c0, rt1.c1 FROM vt0 RIGHT OUTER JOIN rt1 ON (((NOT (rt1.c3)))<=(((((((((rt1.c0)OR(rt1.c4)))AND(rt1.c1)))OR(vt0.c0)))OR(vt0.c0)))) GROUP BY rt1.c2, vt0.c0, rt1.c0, rt1.c1;
SELECT vt1.c0, rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3, vt0.c0 FROM rt1, vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3, vt0.c0;
SELECT ALL vt1.c0, rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3, vt0.c0 FROM rt1, vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3, vt0.c0 HAVING TOTAL(COUNT(SUM(SUM(COUNT(AVG(MAX(vt1.c0)))))) COLLATE BINARY) UNION ALL SELECT vt1.c0, rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3, vt0.c0 FROM rt1, vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3, vt0.c0 HAVING (NOT (TOTAL(COUNT(SUM(SUM(COUNT(AVG(MAX(vt1.c0)))))) COLLATE BINARY))) UNION ALL SELECT vt1.c0, rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3, vt0.c0 FROM rt1, vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3, vt0.c0 HAVING ((TOTAL(COUNT(SUM(SUM(COUNT(AVG(MAX(vt1.c0)))))) COLLATE BINARY)) ISNULL);
SELECT ALL MAX(CASE ((x'') NOT BETWEEN (rt1.c1) AND (0.5933826600485909))  WHEN CASE WHEN rt1.c2 THEN rt1.c0 END THEN x'256a' WHEN DATE(rt1.c1, rt1.c0, rt1.c3) THEN ((rt1.c0) ISNULL) WHEN '971373441' THEN ((rt1.c4)<(rt1.c3)) ELSE '|d(' END) FROM vt1, rt1;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((('ꗉSU?D)7+')==(((vt0.c0) IS FALSE)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((('ꗉSU?D)7+')=(((vt0.c0) IS FALSE)))))) UNION ALL SELECT * FROM vt0 WHERE ((((('ꗉSU?D)7+')==(((vt0.c0) IS FALSE)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, vt1, rt1;
SELECT DISTINCT * FROM vt0, vt1, rt1 WHERE ((((vt0.c0 IN ())) BETWEEN (((rt1.c2)|(rt1.c2))) AND (((vt0.c0)<(rt1.c0))))) UNION SELECT DISTINCT * FROM vt0, vt1, rt1 WHERE ((NOT ((((vt0.c0 IN ())) BETWEEN (((rt1.c2)|(rt1.c2))) AND (((vt0.c0)<(rt1.c0))))))) UNION SELECT DISTINCT * FROM vt0, vt1, rt1 WHERE ((((((vt0.c0 IN ())) BETWEEN (((rt1.c2)|(rt1.c2))) AND (((vt0.c0)<(rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)!=(NULL)))OR(((((vt0.c0)OR(-800687936)))OR(vt0.c0)))))OR(SQLITE_SOURCE_ID()))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)!=(NULL)))OR(((((vt0.c0)OR(-800687936)))OR(vt0.c0)))))OR(SQLITE_SOURCE_ID()))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)<>(NULL)))OR(((((vt0.c0)OR(-800687936)))OR(vt0.c0)))))OR(SQLITE_SOURCE_ID()))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(((vt0.c0) BETWEEN (MIN(COUNT(vt0.c0))) AND (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(((vt0.c0) BETWEEN (MIN(COUNT(vt0.c0))) AND (vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(((vt0.c0) BETWEEN (MIN(COUNT(vt0.c0))) AND (vt0.c0)))) ISNULL);
SELECT vt1.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c0, rt1.c1, vt0.c0 FROM rt1 RIGHT OUTER JOIN vt1 ON CASE WHEN NULLIF(DISTINCT rt1.c0, rt1.c3) THEN UNLIKELY(rt1.c1) ELSE ((rt1.c3)GLOB(rt1.c4)) END RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ())) ISNULL);
SELECT vt1.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c0, rt1.c1, vt0.c0 FROM rt1 RIGHT OUTER JOIN vt1 ON CASE WHEN NULLIF(DISTINCT rt1.c0, rt1.c3) THEN UNLIKELY(rt1.c1) ELSE ((rt1.c3)GLOB(rt1.c4)) END RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ())) ISNULL) WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN rt1.c2 WHEN x'' THEN x'' ELSE rt1.c0 END)<(((((rt1.c3)OR(vt1.c0)))AND(rt1.c4))))) UNION ALL SELECT ALL vt1.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c0, rt1.c1, vt0.c0 FROM rt1 RIGHT OUTER JOIN vt1 ON CASE WHEN NULLIF(DISTINCT rt1.c0, rt1.c3) THEN UNLIKELY(rt1.c1) ELSE ((rt1.c3)GLOB(rt1.c4)) END RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ())) ISNULL) WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN rt1.c2 WHEN x'' THEN x'' ELSE rt1.c0 END)<(((((rt1.c3)OR(vt1.c0)))AND(rt1.c4))))))) UNION ALL SELECT ALL vt1.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c0, rt1.c1, vt0.c0 FROM rt1 RIGHT OUTER JOIN vt1 ON CASE WHEN NULLIF(DISTINCT rt1.c0, rt1.c3) THEN UNLIKELY(rt1.c1) ELSE ((rt1.c3)GLOB(rt1.c4)) END RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ())) ISNULL) WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN rt1.c2 WHEN x'' THEN x'' ELSE rt1.c0 END)<(((((rt1.c3)OR(vt1.c0)))AND(rt1.c4))))) ISNULL));
SELECT vt1.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c0, rt1.c1, vt0.c0 FROM rt1 RIGHT OUTER JOIN vt1 ON CASE WHEN NULLIF(DISTINCT rt1.c0, rt1.c3) THEN UNLIKELY(rt1.c1) ELSE ((rt1.c3)GLOB(rt1.c4)) END RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ())) ISNULL);
SELECT DISTINCT rt1.c4, rt1.c1, rt1.c2, vt1.c0, rt1.c3, rt1.c0, vt0.c0 FROM rt1, vt1, vt0;
SELECT DISTINCT rt1.c4, rt1.c1, rt1.c2, vt1.c0, rt1.c3, rt1.c0, vt0.c0 FROM rt1, vt1 NOT INDEXED, vt0 WHERE (CASE rt1.c3  WHEN ((rt1.c0)%(rt1.c2)) THEN (vt0.c0 IN (rt1.c1, rt1.c3)) END) UNION SELECT DISTINCT rt1.c4, rt1.c1, rt1.c2, vt1.c0, rt1.c3, rt1.c0, vt0.c0 FROM rt1, vt1, vt0 WHERE ((NOT (CASE rt1.c3  WHEN ((rt1.c0)%(rt1.c2)) THEN (vt0.c0 IN (rt1.c1, rt1.c3)) END))) UNION SELECT DISTINCT rt1.c4, rt1.c1, rt1.c2, vt1.c0, rt1.c3, rt1.c0, vt0.c0 FROM rt1, vt1, vt0 WHERE (((CASE rt1.c3  WHEN ((rt1.c0)%(rt1.c2)) THEN (vt0.c0 IN (rt1.c1, rt1.c3)) END) ISNULL));
SELECT DISTINCT rt1.c4, rt1.c1, rt1.c2, vt1.c0, rt1.c3, rt1.c0, vt0.c0 FROM rt1, vt1, vt0;
SELECT ALL rt1.c4, rt1.c1, vt0.c0 FROM vt0, rt1, vt1 GROUP BY rt1.c4, rt1.c1, vt0.c0;
SELECT ALL rt1.c4, rt1.c1, vt0.c0 FROM vt0, rt1, vt1 WHERE (rt1.c2) GROUP BY rt1.c4, rt1.c1, vt0.c0 UNION SELECT rt1.c4, rt1.c1, vt0.c0 FROM vt0, rt1, vt1 WHERE ((NOT (rt1.c2))) GROUP BY rt1.c4, rt1.c1, vt0.c0 UNION SELECT ALL rt1.c4, rt1.c1, vt0.c0 FROM vt0, rt1, vt1 WHERE (((rt1.c2) ISNULL)) GROUP BY rt1.c4, rt1.c1, vt0.c0;
SELECT ALL rt1.c4, rt1.c1, vt0.c0 FROM vt0, rt1, vt1 GROUP BY rt1.c4, rt1.c1, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(((vt0.c0)||(MAX(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(((vt0.c0)||(MAX(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(((vt0.c0)||(MAX(vt0.c0))))) ISNULL);
SELECT * FROM vt1, vt0, rt1;
SELECT * FROM vt1, vt0, rt1 WHERE (((vt1.c0) ISNULL) COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt1, vt0, rt1 WHERE ((NOT (((vt1.c0) ISNULL) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt1, vt0, rt1 WHERE (((((vt1.c0) ISNULL) COLLATE RTRIM) ISNULL));
SELECT * FROM vt1, vt0, rt1;
SELECT DISTINCT * FROM rt1, vt1, vt0;
SELECT DISTINCT * FROM rt1, vt1, vt0 WHERE ((((rt1.c1 IN ()))|(CASE WHEN vt0.c0 THEN '-97703140' ELSE 0.9593449482532878 END))) UNION SELECT DISTINCT * FROM rt1, vt1, vt0 WHERE ((NOT ((((rt1.c1 IN ()))|(CASE WHEN vt0.c0 THEN '-97703140' ELSE 0.9593449482532878 END))))) UNION SELECT DISTINCT * FROM rt1, vt1, vt0 WHERE ((((((rt1.c1 IN ()))|(CASE WHEN vt0.c0 THEN '-97703140' ELSE 0.9593449482532878 END))) ISNULL));
SELECT DISTINCT * FROM rt1, vt1, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((~ (x'3a6c'))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((~ (x'3a6c'))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((~ (x'3a6c'))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0) BETWEEN (vt0.c0) AND (''))) NOT NULL) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0) BETWEEN (vt0.c0) AND (''))) NOT NULL) GROUP BY vt1.c0, vt0.c0 HAVING COUNT(MAX(vt0.c0)) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0) BETWEEN (vt0.c0) AND (''))) NOT NULL) GROUP BY vt1.c0, vt0.c0 HAVING (NOT (COUNT(MAX(vt0.c0)))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0) BETWEEN (vt0.c0) AND (''))) NOT NULL) GROUP BY vt1.c0, vt0.c0 HAVING ((COUNT(MAX(vt0.c0))) ISNULL);
SELECT * FROM vt1, rt1;
SELECT * FROM vt1, rt1 WHERE ((((('(HSy') IS TRUE))<>(rt1.c1))) UNION ALL SELECT ALL * FROM vt1, rt1 WHERE ((NOT ((((('(HSy') IS TRUE))!=(rt1.c1))))) UNION ALL SELECT * FROM vt1, rt1 WHERE ((((((('(HSy') IS TRUE))!=(rt1.c1))) ISNULL));
SELECT * FROM vt1, rt1;
SELECT DISTINCT rt1.c1, rt1.c4, vt0.c0, rt1.c2 FROM vt1, vt0, rt1;
SELECT DISTINCT rt1.c1, rt1.c4, vt0.c0, rt1.c2 FROM vt1, vt0, rt1 WHERE ((((((rt1.c4))>=((rt1.c1))))OR(((rt1.c0) NOTNULL)))) UNION SELECT DISTINCT rt1.c1, rt1.c4, vt0.c0, rt1.c2 FROM vt1, vt0, rt1 WHERE ((NOT ((((((rt1.c4))>=((rt1.c1))))OR(((rt1.c0) NOTNULL)))))) UNION SELECT DISTINCT rt1.c1, rt1.c4, vt0.c0, rt1.c2 FROM vt1, vt0, rt1 WHERE ((((((((rt1.c4))>=((rt1.c1))))OR(((rt1.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c4, vt0.c0, rt1.c2 FROM vt1, vt0, rt1;
SELECT ALL vt0.c0 FROM vt1 CROSS JOIN vt0 ON CAST(CASE WHEN vt1.c0 THEN 0.622594346668281 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE vt1.c0 END AS TEXT) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1 CROSS JOIN vt0 ON CAST(CASE WHEN vt1.c0 THEN 0.622594346668281 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE vt1.c0 END AS TEXT) WHERE (vt1.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1 CROSS JOIN vt0 ON CAST(CASE WHEN vt1.c0 THEN 0.622594346668281 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE vt1.c0 END AS TEXT) WHERE ((NOT (vt1.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1 CROSS JOIN vt0 ON CAST(CASE WHEN vt1.c0 THEN 0.622594346668281 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE vt1.c0 END AS TEXT) WHERE (((vt1.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1 CROSS JOIN vt0 ON CAST(CASE WHEN vt1.c0 THEN 0.622594346668281 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE vt1.c0 END AS TEXT) GROUP BY vt0.c0;
SELECT rt1.c2, rt1.c4, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c4, vt1.c0;
SELECT rt1.c2, rt1.c4, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c4, vt1.c0 HAVING MIN(TOTAL(rt1.c3)) UNION ALL SELECT ALL rt1.c2, rt1.c4, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c4, vt1.c0 HAVING (NOT (MIN(TOTAL(rt1.c3)))) UNION ALL SELECT rt1.c2, rt1.c4, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c4, vt1.c0 HAVING ((MIN(TOTAL(rt1.c3))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN '-100921105' THEN (vt0.c0 IN ()) WHEN (0Xffffffffee3e77c1 IN (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN ()) END) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN '-100921105' THEN (vt0.c0 IN ()) WHEN (0Xffffffffee3e77c1 IN (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN ()) END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN '-100921105' THEN (vt0.c0 IN ()) WHEN (0Xffffffffee3e77c1 IN (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN ()) END) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((CASE vt1.c0  WHEN 0.39787630118850126 THEN vt1.c0 WHEN -7.39491298E8 THEN vt1.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END IN ())) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((CASE vt1.c0  WHEN 0.39787630118850126 THEN vt1.c0 WHEN -7.39491298E8 THEN vt1.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((CASE vt1.c0  WHEN 0.39787630118850126 THEN vt1.c0 WHEN -7.39491298E8 THEN vt1.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0, rt1.c2, rt1.c4, rt1.c3, rt1.c1 FROM rt1, vt0, vt1 GROUP BY vt1.c0, rt1.c2, rt1.c4, rt1.c3, rt1.c1;
SELECT ALL vt1.c0, rt1.c2, rt1.c4, rt1.c3, rt1.c1 FROM rt1, vt0, vt1 WHERE (((CAST(rt1.c0 AS BLOB))IS NOT(((rt1.c4)-(x'3b84'))))) GROUP BY vt1.c0, rt1.c2, rt1.c4, rt1.c3, rt1.c1 UNION SELECT ALL vt1.c0, rt1.c2, rt1.c4, rt1.c3, rt1.c1 FROM rt1, vt0, vt1 WHERE ((NOT (((CAST(rt1.c0 AS BLOB))IS NOT(((rt1.c4)-(x'3b84'))))))) GROUP BY vt1.c0, rt1.c2, rt1.c4, rt1.c3, rt1.c1 UNION SELECT ALL vt1.c0, rt1.c2, rt1.c4, rt1.c3, rt1.c1 FROM rt1, vt0, vt1 WHERE (((((CAST(rt1.c0 AS BLOB))IS NOT(((rt1.c4)-(x'3b84'))))) ISNULL)) GROUP BY vt1.c0, rt1.c2, rt1.c4, rt1.c3, rt1.c1;
SELECT ALL vt1.c0, rt1.c2, rt1.c4, rt1.c3, rt1.c1 FROM rt1, vt0, vt1 GROUP BY vt1.c0, rt1.c2, rt1.c4, rt1.c3, rt1.c1;
SELECT vt0.c0, vt1.c0 FROM vt1 CROSS JOIN vt0 ON ((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))))<>((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0))))) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1 CROSS JOIN vt0 ON ((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))))!=((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0))))) GROUP BY vt0.c0, vt1.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(vt1.c0)) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1 CROSS JOIN vt0 ON ((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))))!=((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0))))) GROUP BY vt0.c0, vt1.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1 CROSS JOIN vt0 ON ((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))))<>((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0))))) GROUP BY vt0.c0, vt1.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(vt1.c0))) ISNULL);
SELECT ALL * FROM vt0, vt1, rt1;
SELECT ALL * FROM vt0, vt1, rt1 WHERE (((CAST(rt1.c1 AS BLOB))&(rt1.c4 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt0, vt1, rt1 WHERE ((NOT (((CAST(rt1.c1 AS BLOB))&(rt1.c4 COLLATE NOCASE))))) UNION ALL SELECT ALL * FROM vt0, vt1, rt1 WHERE (((((CAST(rt1.c1 AS BLOB))&(rt1.c4 COLLATE NOCASE))) ISNULL));
SELECT ALL * FROM vt0, vt1, rt1;
SELECT DISTINCT rt1.c0, rt1.c2, vt1.c0, rt1.c3, rt1.c1 FROM rt1, vt1, vt0;
SELECT DISTINCT rt1.c0, rt1.c2, vt1.c0, rt1.c3, rt1.c1 FROM rt1, vt1, vt0 WHERE (((((vt1.c0) NOT NULL)) IS FALSE)) UNION SELECT DISTINCT rt1.c0, rt1.c2, vt1.c0, rt1.c3, rt1.c1 FROM rt1, vt1, vt0 WHERE ((NOT (((((vt1.c0) NOT NULL)) IS FALSE)))) UNION SELECT DISTINCT rt1.c0, rt1.c2, vt1.c0, rt1.c3, rt1.c1 FROM rt1, vt1, vt0 WHERE (((((((vt1.c0) NOT NULL)) IS FALSE)) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, vt1.c0, rt1.c3, rt1.c1 FROM rt1, vt1, vt0;
SELECT rt1.c2, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c3, rt1.c4;
SELECT ALL rt1.c2, rt1.c3, rt1.c4 FROM rt1 WHERE ((((- (rt1.c4)))-((((NULL)) BETWEEN ((rt1.c3)) AND ((rt1.c0)))))) GROUP BY rt1.c2, rt1.c3, rt1.c4 UNION SELECT ALL rt1.c2, rt1.c3, rt1.c4 FROM rt1 WHERE ((NOT ((((- (rt1.c4)))-((((NULL)) BETWEEN ((rt1.c3)) AND ((rt1.c0)))))))) GROUP BY rt1.c2, rt1.c3, rt1.c4 UNION SELECT ALL rt1.c2, rt1.c3, rt1.c4 FROM rt1 WHERE ((((((- (rt1.c4)))-((((NULL)) BETWEEN ((rt1.c3)) AND ((rt1.c0)))))) ISNULL)) GROUP BY rt1.c2, rt1.c3, rt1.c4;
SELECT rt1.c2, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c3, rt1.c4;
SELECT rt1.c4, rt1.c2 FROM vt1 NATURAL JOIN rt1 GROUP BY rt1.c4, rt1.c2;
SELECT rt1.c4, rt1.c2 FROM vt1 NATURAL JOIN rt1 GROUP BY rt1.c4, rt1.c2 HAVING MIN(((COUNT(*))&(rt1.c1))) UNION ALL SELECT rt1.c4, rt1.c2 FROM vt1 NATURAL JOIN rt1 GROUP BY rt1.c4, rt1.c2 HAVING (NOT (MIN(((COUNT(*))&(rt1.c1))))) UNION ALL SELECT ALL rt1.c4, rt1.c2 FROM vt1 NATURAL JOIN rt1 GROUP BY rt1.c4, rt1.c2 HAVING ((MIN(((COUNT(*))&(rt1.c1)))) ISNULL);
SELECT * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE ((LIKELY(vt0.c0) IN ())) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT ((LIKELY(vt0.c0) IN ())))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((((LIKELY(vt0.c0) IN ())) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0)) BETWEEN (((((vt1.c0))==(('99648654'))))) AND (((vt0.c0 IN (vt1.c0, vt1.c0, '')))));
SELECT DISTINCT vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0)) BETWEEN (((((vt1.c0))=(('99648654'))))) AND (((vt0.c0 IN (vt1.c0, vt1.c0, ''))))) WHERE (STRFTIME(vt1.c0, vt1.c0, vt1.c0) COLLATE NOCASE) UNION SELECT DISTINCT vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0)) BETWEEN (((((vt1.c0))==(('99648654'))))) AND (((vt0.c0 IN (vt1.c0, vt1.c0, ''))))) WHERE ((NOT (STRFTIME(vt1.c0, vt1.c0, vt1.c0) COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0)) BETWEEN (((((vt1.c0))=(('99648654'))))) AND (((vt0.c0 IN (vt1.c0, vt1.c0, ''))))) WHERE (((STRFTIME(vt1.c0, vt1.c0, vt1.c0) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0)) BETWEEN (((((vt1.c0))==(('99648654'))))) AND (((vt0.c0 IN (vt1.c0, vt1.c0, '')))));
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((vt1.c0) NOT NULL))LIKE(((vt0.c0)/(vt1.c0))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((((vt1.c0) NOT NULL))LIKE(((vt0.c0)/(vt1.c0))))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((((vt1.c0) NOT NULL))LIKE(((vt0.c0)/(vt1.c0))))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL rt1.c4, rt1.c1, rt1.c3, vt1.c0, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c4, rt1.c1, rt1.c3, vt1.c0, rt1.c2;
SELECT rt1.c4, rt1.c1, rt1.c3, vt1.c0, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c4, rt1.c1, rt1.c3, vt1.c0, rt1.c2 HAVING CASE WHEN (~ (SUM(rt1.c3))) THEN COUNT(*) WHEN 0.15304497435382258 THEN ((COUNT(0X25db8fdd))<=(rt1.c2)) WHEN AVG(MAX(rt1.c2)) THEN rt1.c4 COLLATE RTRIM ELSE ((rt1.c0)IS(rt1.c4)) END UNION ALL SELECT ALL rt1.c4, rt1.c1, rt1.c3, vt1.c0, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c4, rt1.c1, rt1.c3, vt1.c0, rt1.c2 HAVING (NOT (CASE WHEN (~ (SUM(rt1.c3))) THEN COUNT(*) WHEN 0.15304497435382258 THEN ((COUNT(0x25db8fdd))<=(rt1.c2)) WHEN AVG(MAX(rt1.c2)) THEN rt1.c4 COLLATE RTRIM ELSE ((rt1.c0)IS(rt1.c4)) END)) UNION ALL SELECT ALL rt1.c4, rt1.c1, rt1.c3, vt1.c0, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c4, rt1.c1, rt1.c3, vt1.c0, rt1.c2 HAVING ((CASE WHEN (~ (SUM(rt1.c3))) THEN COUNT(*) WHEN 0.15304497435382258 THEN ((COUNT(0X25db8fdd))<=(rt1.c2)) WHEN AVG(MAX(rt1.c2)) THEN rt1.c4 COLLATE RTRIM ELSE ((rt1.c0)IS(rt1.c4)) END) ISNULL);
SELECT rt1.c4, rt1.c3, vt1.c0, rt1.c0, rt1.c2, vt0.c0 FROM vt0, vt1, rt1;
SELECT ALL rt1.c4, rt1.c3, vt1.c0, rt1.c0, rt1.c2, vt0.c0 FROM vt0, vt1, rt1 WHERE (CASE (((x'', rt1.c4, vt0.c0)) NOT BETWEEN ((rt1.c1, vt1.c0, rt1.c3)) AND ((rt1.c1, rt1.c1, rt1.c3)))  WHEN (rt1.c2 IN (rt1.c2, rt1.c0)) THEN ((rt1.c2) BETWEEN (rt1.c3) AND (NULL)) ELSE vt0.c0 COLLATE NOCASE END) UNION ALL SELECT rt1.c4, rt1.c3, vt1.c0, rt1.c0, rt1.c2, vt0.c0 FROM vt0, vt1, rt1 WHERE ((NOT (CASE (((x'', rt1.c4, vt0.c0)) NOT BETWEEN ((rt1.c1, vt1.c0, rt1.c3)) AND ((rt1.c1, rt1.c1, rt1.c3)))  WHEN (rt1.c2 IN (rt1.c2, rt1.c0)) THEN ((rt1.c2) BETWEEN (rt1.c3) AND (NULL)) ELSE vt0.c0 COLLATE NOCASE END))) UNION ALL SELECT ALL rt1.c4, rt1.c3, vt1.c0, rt1.c0, rt1.c2, vt0.c0 FROM vt0, vt1, rt1 WHERE (((CASE (((x'', rt1.c4, vt0.c0)) NOT BETWEEN ((rt1.c1, vt1.c0, rt1.c3)) AND ((rt1.c1, rt1.c1, rt1.c3)))  WHEN (rt1.c2 IN (rt1.c2, rt1.c0)) THEN ((rt1.c2) BETWEEN (rt1.c3) AND (NULL)) ELSE vt0.c0 COLLATE NOCASE END) ISNULL));
SELECT rt1.c4, rt1.c3, vt1.c0, rt1.c0, rt1.c2, vt0.c0 FROM vt0, vt1, rt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0))) BETWEEN (vt0.c0) AND ('-1874409492'))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)LIKE(vt0.c0))) BETWEEN (vt0.c0) AND ('-1874409492'))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)LIKE(vt0.c0))) BETWEEN (vt0.c0) AND ('-1874409492'))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c4;
SELECT ALL rt1.c2, rt1.c4 FROM rt1 WHERE (CASE WHEN ((rt1.c1)+(rt1.c3)) THEN 614188654 ELSE ((rt1.c1)|(rt1.c4)) END) GROUP BY rt1.c2, rt1.c4 UNION SELECT rt1.c2, rt1.c4 FROM rt1 WHERE ((NOT (CASE WHEN ((rt1.c1)+(rt1.c3)) THEN 614188654 ELSE ((rt1.c1)|(rt1.c4)) END))) GROUP BY rt1.c2, rt1.c4 UNION SELECT ALL rt1.c2, rt1.c4 FROM rt1 WHERE (((CASE WHEN ((rt1.c1)+(rt1.c3)) THEN 614188654 ELSE ((rt1.c1)|(rt1.c4)) END) ISNULL)) GROUP BY rt1.c2, rt1.c4;
SELECT ALL rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c4;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING MIN(CASE SUM(536368670)  WHEN SUM(vt0.c0) THEN vt0.c0 WHEN TOTAL(TOTAL(MIN(AVG(COUNT(*))))) THEN SUM(vt1.c0) WHEN MIN(vt0.c0) THEN vt1.c0 ELSE vt0.c0 END) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (MIN(CASE SUM(536368670)  WHEN SUM(vt0.c0) THEN vt0.c0 WHEN TOTAL(TOTAL(MIN(AVG(COUNT(*))))) THEN SUM(vt1.c0) WHEN MIN(vt0.c0) THEN vt1.c0 ELSE vt0.c0 END))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((MIN(CASE SUM(536368670)  WHEN SUM(vt0.c0) THEN vt0.c0 WHEN TOTAL(TOTAL(MIN(AVG(COUNT(*))))) THEN SUM(vt1.c0) WHEN MIN(vt0.c0) THEN vt1.c0 ELSE vt0.c0 END)) ISNULL);
SELECT ALL rt1.c0, rt1.c3, rt1.c2, rt1.c4, rt1.c1, vt0.c0 FROM rt1, vt0;
SELECT rt1.c0, rt1.c3, rt1.c2, rt1.c4, rt1.c1, vt0.c0 FROM rt1, vt0 WHERE (((CAST(rt1.c0 AS TEXT)) NOT BETWEEN (((((((((rt1.c1)OR(rt1.c2)))OR(vt0.c0)))OR(rt1.c3)))OR(rt1.c2))) AND (CAST(rt1.c1 AS REAL)))) UNION ALL SELECT ALL rt1.c0, rt1.c3, rt1.c2, rt1.c4, rt1.c1, vt0.c0 FROM rt1, vt0 WHERE ((NOT (((CAST(rt1.c0 AS TEXT)) NOT BETWEEN (((((((((rt1.c1)OR(rt1.c2)))OR(vt0.c0)))OR(rt1.c3)))OR(rt1.c2))) AND (CAST(rt1.c1 AS REAL)))))) UNION ALL SELECT rt1.c0, rt1.c3, rt1.c2, rt1.c4, rt1.c1, vt0.c0 FROM rt1, vt0 WHERE (((((CAST(rt1.c0 AS TEXT)) NOT BETWEEN (((((((((rt1.c1)OR(rt1.c2)))OR(vt0.c0)))OR(rt1.c3)))OR(rt1.c2))) AND (CAST(rt1.c1 AS REAL)))) ISNULL));
SELECT ALL rt1.c0, rt1.c3, rt1.c2, rt1.c4, rt1.c1, vt0.c0 FROM rt1, vt0;
SELECT DISTINCT rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE (((((((rt1.c1)OR(rt1.c2)))AND(rt1.c4))) BETWEEN (((rt1.c1) IS FALSE)) AND (((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4))))) UNION SELECT DISTINCT rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (((((((rt1.c1)OR(rt1.c2)))AND(rt1.c4))) BETWEEN (((rt1.c1) IS FALSE)) AND (((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4))))))) UNION SELECT DISTINCT rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE (((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c4))) BETWEEN (((rt1.c1) IS FALSE)) AND (((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4))))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM rt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((rtreenode(vt0.c0, 0.7618288975770834))) AND (((vt0.c0 IN ()))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((rtreenode(vt0.c0, 0.7618288975770834))) AND (((vt0.c0 IN ()))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((rtreenode(vt0.c0, 0.7618288975770834))) AND (((vt0.c0 IN ()))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c3, rt1.c0, rt1.c2 FROM vt0, vt1 CROSS JOIN rt1 ON json_type(((vt1.c0) ISNULL)) GROUP BY rt1.c3, rt1.c0, rt1.c2;
SELECT rt1.c3, rt1.c0, rt1.c2 FROM vt0, vt1 CROSS JOIN rt1 ON json_type(((vt1.c0) ISNULL)) GROUP BY rt1.c3, rt1.c0, rt1.c2 HAVING ((ABS(SUM(MIN(vt1.c0))))==(NULL)) UNION ALL SELECT rt1.c3, rt1.c0, rt1.c2 FROM vt0, vt1 CROSS JOIN rt1 ON json_type(((vt1.c0) ISNULL)) GROUP BY rt1.c3, rt1.c0, rt1.c2 HAVING (NOT (((ABS(SUM(MIN(vt1.c0))))==(NULL)))) UNION ALL SELECT ALL rt1.c3, rt1.c0, rt1.c2 FROM vt0, vt1 CROSS JOIN rt1 ON json_type(((vt1.c0) ISNULL)) GROUP BY rt1.c3, rt1.c0, rt1.c2 HAVING ((((ABS(SUM(MIN(vt1.c0))))=(NULL))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)GLOB(((0.3473577314620385)IS NOT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE RTRIM)GLOB(((0.3473577314620385)IS NOT(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0 COLLATE RTRIM)GLOB(((0.3473577314620385)IS NOT(vt1.c0))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT rt1.c2, rt1.c1 FROM vt1, vt0, rt1;
SELECT DISTINCT rt1.c2, rt1.c1 FROM vt1, vt0, rt1 WHERE (TYPEOF(CASE vt0.c0  WHEN rt1.c1 THEN rt1.c3 ELSE NULL END)) UNION SELECT DISTINCT rt1.c2, rt1.c1 FROM vt1, vt0, rt1 WHERE ((NOT (TYPEOF(CASE vt0.c0  WHEN rt1.c1 THEN rt1.c3 ELSE NULL END)))) UNION SELECT DISTINCT rt1.c2, rt1.c1 FROM vt1, vt0, rt1 WHERE (((TYPEOF(CASE vt0.c0  WHEN rt1.c1 THEN rt1.c3 ELSE NULL END)) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1 FROM vt1, vt0, rt1;
SELECT rt1.c4, rt1.c1 FROM rt1 GROUP BY rt1.c4, rt1.c1;
SELECT rt1.c4, rt1.c1 FROM rt1 WHERE (SQLITE_COMPILEOPTION_USED(json_object(rt1.c2, rt1.c2, rt1.c2, NULL))) GROUP BY rt1.c4, rt1.c1 UNION SELECT rt1.c4, rt1.c1 FROM rt1 WHERE ((NOT (SQLITE_COMPILEOPTION_USED(json_object(rt1.c2, rt1.c2, rt1.c2, NULL))))) GROUP BY rt1.c4, rt1.c1 UNION SELECT rt1.c4, rt1.c1 FROM rt1 WHERE (((SQLITE_COMPILEOPTION_USED(json_object(rt1.c2, rt1.c2, rt1.c2, NULL))) ISNULL)) GROUP BY rt1.c4, rt1.c1;
SELECT ALL rt1.c2, rt1.c4, vt0.c0, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN rt1 ON rt1.c0 GROUP BY rt1.c2, rt1.c4, vt0.c0, vt1.c0;
SELECT ALL rt1.c2, rt1.c4, vt0.c0, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN rt1 ON rt1.c0 GROUP BY rt1.c2, rt1.c4, vt0.c0, vt1.c0 HAVING (TOTAL(SUM(MAX(rt1.c1))) IN ()) UNION ALL SELECT ALL rt1.c2, rt1.c4, vt0.c0, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN rt1 ON rt1.c0 GROUP BY rt1.c2, rt1.c4, vt0.c0, vt1.c0 HAVING (NOT ((TOTAL(SUM(MAX(rt1.c1))) IN ()))) UNION ALL SELECT ALL rt1.c2, rt1.c4, vt0.c0, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN rt1 ON rt1.c0 GROUP BY rt1.c2, rt1.c4, vt0.c0, vt1.c0 HAVING (((TOTAL(SUM(MAX(rt1.c1))) IN ())) ISNULL);
SELECT ALL rt1.c2, rt1.c4, vt0.c0, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN rt1 ON rt1.c0 GROUP BY rt1.c2, rt1.c4, vt0.c0, vt1.c0;
SELECT ALL rt1.c2, rt1.c4, vt0.c0, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN rt1 ON rt1.c0 GROUP BY rt1.c2, rt1.c4, vt0.c0, vt1.c0 HAVING (TOTAL(SUM(MAX(rt1.c1))) IN ()) UNION ALL SELECT ALL rt1.c2, rt1.c4, vt0.c0, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN rt1 ON rt1.c0 GROUP BY rt1.c2, rt1.c4, vt0.c0, vt1.c0 HAVING (NOT ((TOTAL(SUM(MAX(rt1.c1))) IN ()))) UNION ALL SELECT ALL rt1.c2, rt1.c4, vt0.c0, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN rt1 ON rt1.c0 GROUP BY rt1.c2, rt1.c4, vt0.c0, vt1.c0 HAVING (((TOTAL(SUM(MAX(rt1.c1))) IN ())) ISNULL);
SELECT ALL rt1.c2, rt1.c4, vt0.c0, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN rt1 ON rt1.c0 GROUP BY rt1.c2, rt1.c4, vt0.c0, vt1.c0;
SELECT * FROM vt0, vt1, rt1;
SELECT * FROM vt0, vt1, rt1 WHERE (LIKELIHOOD(DISTINCT (((rt1.c3, '256563578', rt1.c4))<=((vt0.c0, vt0.c0, rt1.c3))), 0.8282768572249734)) UNION ALL SELECT * FROM vt0, vt1, rt1 WHERE ((NOT (LIKELIHOOD(DISTINCT (((rt1.c3, '256563578', rt1.c4))<=((vt0.c0, vt0.c0, rt1.c3))), 0.8282768572249734)))) UNION ALL SELECT ALL * FROM vt0, vt1, rt1 WHERE (((LIKELIHOOD(DISTINCT (((rt1.c3, '256563578', rt1.c4))<=((vt0.c0, vt0.c0, rt1.c3))), 0.8282768572249734)) ISNULL));
SELECT * FROM vt0, vt1, rt1;
SELECT DISTINCT * FROM rt1, vt1, vt0;
SELECT DISTINCT * FROM rt1, vt1, vt0 WHERE ((((+ (rt1.c3)))GLOB(CASE vt1.c0  WHEN vt0.c0 THEN '-664218876' ELSE rt1.c4 END))) UNION SELECT DISTINCT * FROM rt1, vt1, vt0 WHERE ((NOT ((((+ (rt1.c3)))GLOB(CASE vt1.c0  WHEN vt0.c0 THEN '-664218876' ELSE rt1.c4 END))))) UNION SELECT DISTINCT * FROM rt1, vt1, vt0 WHERE ((((((+ (rt1.c3)))GLOB(CASE vt1.c0  WHEN vt0.c0 THEN '-664218876' ELSE rt1.c4 END))) ISNULL));
SELECT DISTINCT * FROM rt1, vt1, vt0;
SELECT rt1.c1, rt1.c0, vt0.c0, rt1.c2, rt1.c4 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c0, vt0.c0, rt1.c2, rt1.c4;
SELECT ALL rt1.c1, rt1.c0, vt0.c0, rt1.c2, rt1.c4 FROM vt0, rt1 WHERE ((((- (rt1.c4)))|(NULL))) GROUP BY rt1.c1, rt1.c0, vt0.c0, rt1.c2, rt1.c4 UNION SELECT rt1.c1, rt1.c0, vt0.c0, rt1.c2, rt1.c4 FROM vt0, rt1 WHERE ((NOT ((((- (rt1.c4)))|(NULL))))) GROUP BY rt1.c1, rt1.c0, vt0.c0, rt1.c2, rt1.c4 UNION SELECT ALL rt1.c1, rt1.c0, vt0.c0, rt1.c2, rt1.c4 FROM vt0, rt1 WHERE ((((((- (rt1.c4)))|(NULL))) ISNULL)) GROUP BY rt1.c1, rt1.c0, vt0.c0, rt1.c2, rt1.c4;
SELECT rt1.c1, rt1.c0, vt0.c0, rt1.c2, rt1.c4 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c0, vt0.c0, rt1.c2, rt1.c4;
SELECT ALL vt0.c0, rt1.c3, rt1.c4, rt1.c0, rt1.c2 FROM rt1, vt1, vt0 GROUP BY vt0.c0, rt1.c3, rt1.c4, rt1.c0, rt1.c2;
SELECT vt0.c0, rt1.c3, rt1.c4, rt1.c0, rt1.c2 FROM rt1, vt1, vt0 GROUP BY vt0.c0, rt1.c3, rt1.c4, rt1.c0, rt1.c2 HAVING x'' UNION ALL SELECT ALL vt0.c0, rt1.c3, rt1.c4, rt1.c0, rt1.c2 FROM rt1, vt1, vt0 GROUP BY vt0.c0, rt1.c3, rt1.c4, rt1.c0, rt1.c2 HAVING (NOT (x'')) UNION ALL SELECT vt0.c0, rt1.c3, rt1.c4, rt1.c0, rt1.c2 FROM rt1, vt1, vt0 GROUP BY vt0.c0, rt1.c3, rt1.c4, rt1.c0, rt1.c2 HAVING ((x'') ISNULL);
SELECT ALL vt0.c0, rt1.c3, rt1.c4, rt1.c0, rt1.c2 FROM rt1, vt1, vt0 GROUP BY vt0.c0, rt1.c3, rt1.c4, rt1.c0, rt1.c2;
SELECT vt0.c0, rt1.c3, rt1.c4, rt1.c0, rt1.c2 FROM rt1, vt1, vt0 GROUP BY vt0.c0, rt1.c3, rt1.c4, rt1.c0, rt1.c2 HAVING x'' UNION ALL SELECT ALL vt0.c0, rt1.c3, rt1.c4, rt1.c0, rt1.c2 FROM rt1, vt1, vt0 GROUP BY vt0.c0, rt1.c3, rt1.c4, rt1.c0, rt1.c2 HAVING (NOT (x'')) UNION ALL SELECT vt0.c0, rt1.c3, rt1.c4, rt1.c0, rt1.c2 FROM rt1, vt1, vt0 GROUP BY vt0.c0, rt1.c3, rt1.c4, rt1.c0, rt1.c2 HAVING ((x'') ISNULL);
SELECT ALL vt0.c0, rt1.c3, rt1.c4, rt1.c0, rt1.c2 FROM rt1, vt1, vt0 GROUP BY vt0.c0, rt1.c3, rt1.c4, rt1.c0, rt1.c2;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (CASE ((vt1.c0) NOTNULL)  WHEN (vt1.c0 IN (vt1.c0)) THEN ((vt1.c0)IS NOT(vt1.c0)) WHEN NULL THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN vt1.c0 THEN (vt1.c0 IN ()) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CASE ((vt1.c0) NOTNULL)  WHEN (vt1.c0 IN (vt1.c0)) THEN ((vt1.c0)IS NOT(vt1.c0)) WHEN NULL THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN vt1.c0 THEN (vt1.c0 IN ()) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END))) UNION ALL SELECT * FROM vt1 WHERE (((CASE ((vt1.c0) NOTNULL)  WHEN (vt1.c0 IN (vt1.c0)) THEN ((vt1.c0)IS NOT(vt1.c0)) WHEN NULL THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN vt1.c0 THEN (vt1.c0 IN ()) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT rt1.c1, rt1.c4, vt0.c0 FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON (((((rt1.c0))>=((vt0.c0)))) BETWEEN (((vt1.c0)||(rt1.c3))) AND ((rt1.c0 IN (rt1.c1, 1189132262))));
SELECT DISTINCT rt1.c1, rt1.c4, vt0.c0 FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON (((((rt1.c0))>=((vt0.c0)))) BETWEEN (((vt1.c0)||(rt1.c3))) AND ((rt1.c0 IN (rt1.c1, 1189132262)))) WHERE ((((((vt1.c0)>=(rt1.c1)), rt1.c4, (((rt1.c3)) BETWEEN ((vt0.c0)) AND (('4rk0t>4y')))))=((((((rt1.c4)OR(rt1.c2)))OR(rt1.c1)), '-1037654583', CASE rt1.c0  WHEN NULL THEN rt1.c0 END)))) UNION SELECT DISTINCT rt1.c1, rt1.c4, vt0.c0 FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON (((((rt1.c0))>=((vt0.c0)))) BETWEEN (((vt1.c0)||(rt1.c3))) AND ((rt1.c0 IN (rt1.c1, 1189132262)))) WHERE ((NOT ((((((vt1.c0)>=(rt1.c1)), rt1.c4, (((rt1.c3)) BETWEEN ((vt0.c0)) AND (('4rk0t>4y')))))==((((((rt1.c4)OR(rt1.c2)))OR(rt1.c1)), '-1037654583', CASE rt1.c0  WHEN NULL THEN rt1.c0 END)))))) UNION SELECT DISTINCT rt1.c1, rt1.c4, vt0.c0 FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON (((((rt1.c0))>=((vt0.c0)))) BETWEEN (((vt1.c0)||(rt1.c3))) AND ((rt1.c0 IN (rt1.c1, 1189132262)))) WHERE ((((((((vt1.c0)>=(rt1.c1)), rt1.c4, (((rt1.c3)) BETWEEN ((vt0.c0)) AND (('4rk0t>4y')))))=((((((rt1.c4)OR(rt1.c2)))OR(rt1.c1)), '-1037654583', CASE rt1.c0  WHEN NULL THEN rt1.c0 END)))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c4, vt0.c0 FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON (((((rt1.c0))>=((vt0.c0)))) BETWEEN (((vt1.c0)||(rt1.c3))) AND ((rt1.c0 IN (rt1.c1, 1189132262))));
SELECT ALL vt1.c0, rt1.c3 FROM vt1, rt1, vt0 GROUP BY vt1.c0, rt1.c3;
SELECT vt1.c0, rt1.c3 FROM vt1, rt1, vt0 WHERE ((((rt1.c0 COLLATE NOCASE))<((((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c3)))))) GROUP BY vt1.c0, rt1.c3 UNION SELECT vt1.c0, rt1.c3 FROM vt1, rt1, vt0 WHERE ((NOT ((((rt1.c0 COLLATE NOCASE))<((((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c3)))))))) GROUP BY vt1.c0, rt1.c3 UNION SELECT ALL vt1.c0, rt1.c3 FROM vt1, rt1, vt0 WHERE ((((((rt1.c0 COLLATE NOCASE))<((((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c3)))))) ISNULL)) GROUP BY vt1.c0, rt1.c3;
SELECT ALL vt1.c0, rt1.c3 FROM vt1, rt1, vt0 GROUP BY vt1.c0, rt1.c3;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(COALESCE(vt0.c0, SUM(GROUP_CONCAT(MIN(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(COALESCE(vt0.c0, SUM(GROUP_CONCAT(MIN(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(COALESCE(vt0.c0, SUM(GROUP_CONCAT(MIN(vt0.c0)))))) ISNULL);
SELECT ALL * FROM vt0, vt1, rt1;
SELECT ALL * FROM vt0, vt1, rt1 WHERE (((CAST(vt0.c0 AS TEXT)) IS FALSE)) UNION ALL SELECT ALL * FROM vt0, vt1, rt1 WHERE ((NOT (((CAST(vt0.c0 AS TEXT)) IS FALSE)))) UNION ALL SELECT ALL * FROM vt0, vt1, rt1 WHERE (((((CAST(vt0.c0 AS TEXT)) IS FALSE)) ISNULL));
SELECT ALL * FROM vt0, vt1, rt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((vt0.c0) NOT NULL))%(''))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((((vt0.c0) NOT NULL))%(''))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((((vt0.c0) NOT NULL))%(''))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT ALL rt1.c3, rt1.c2, vt1.c0, rt1.c0, rt1.c4 FROM rt1, vt1 GROUP BY rt1.c3, rt1.c2, vt1.c0, rt1.c0, rt1.c4;
SELECT rt1.c3, rt1.c2, vt1.c0, rt1.c0, rt1.c4 FROM rt1, vt1 WHERE (('-2006664525' COLLATE BINARY IN ())) GROUP BY rt1.c3, rt1.c2, vt1.c0, rt1.c0, rt1.c4 UNION SELECT rt1.c3, rt1.c2, vt1.c0, rt1.c0, rt1.c4 FROM rt1, vt1 WHERE ((NOT (('-2006664525' COLLATE BINARY IN ())))) GROUP BY rt1.c3, rt1.c2, vt1.c0, rt1.c0, rt1.c4 UNION SELECT rt1.c3, rt1.c2, vt1.c0, rt1.c0, rt1.c4 FROM rt1, vt1 WHERE (((('-2006664525' COLLATE BINARY IN ())) ISNULL)) GROUP BY rt1.c3, rt1.c2, vt1.c0, rt1.c0, rt1.c4;
SELECT ALL rt1.c3, rt1.c2, vt1.c0, rt1.c0, rt1.c4 FROM rt1, vt1 GROUP BY rt1.c3, rt1.c2, vt1.c0, rt1.c0, rt1.c4;
SELECT ALL rt1.c4 FROM vt0 NOT INDEXED, rt1 GROUP BY rt1.c4;
SELECT ALL rt1.c4 FROM vt0, rt1 GROUP BY rt1.c4 HAVING COUNT(MAX(AVG(rt1.c4))) UNION ALL SELECT ALL rt1.c4 FROM vt0, rt1 GROUP BY rt1.c4 HAVING (NOT (COUNT(MAX(AVG(rt1.c4))))) UNION ALL SELECT ALL rt1.c4 FROM vt0, rt1 GROUP BY rt1.c4 HAVING ((COUNT(MAX(AVG(rt1.c4)))) ISNULL);
SELECT ALL * FROM rt1, vt1 FULL OUTER JOIN vt0 ON (((((rt1.c4)!=(vt1.c0))))!=((((((rt1.c0)OR(rt1.c1)))AND(rt1.c3)))));
SELECT ALL * FROM rt1, vt1 FULL OUTER JOIN vt0 ON (((((rt1.c4)!=(vt1.c0))))<>((((((rt1.c0)OR(rt1.c1)))AND(rt1.c3))))) WHERE ((CASE WHEN rt1.c4 THEN rt1.c4 WHEN NULL THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 END IN (((0X458ad71c)+(rt1.c3)), LIKELY(rt1.c0)))) UNION ALL SELECT ALL * FROM rt1, vt1 FULL OUTER JOIN vt0 ON (((((rt1.c4)!=(vt1.c0))))!=((((((rt1.c0)OR(rt1.c1)))AND(rt1.c3))))) WHERE ((NOT ((CASE WHEN rt1.c4 THEN rt1.c4 WHEN NULL THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 END IN (((0x458ad71c)+(rt1.c3)), LIKELY(rt1.c0)))))) UNION ALL SELECT * FROM rt1, vt1 FULL OUTER JOIN vt0 ON (((((rt1.c4)!=(vt1.c0))))!=((((((rt1.c0)OR(rt1.c1)))AND(rt1.c3))))) WHERE ((((CASE WHEN rt1.c4 THEN rt1.c4 WHEN NULL THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 END IN (((0x458ad71c)+(rt1.c3)), LIKELY(rt1.c0)))) ISNULL));
SELECT ALL * FROM rt1, vt1 FULL OUTER JOIN vt0 ON (((((rt1.c4)!=(vt1.c0))))!=((((((rt1.c0)OR(rt1.c1)))AND(rt1.c3)))));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON ((((((rt1.c4)OR(rt1.c3)))OR(rt1.c4))) IS FALSE) CROSS JOIN rt1 ON ((((((rt1.c3)OR(vt1.c0)))OR(((rt1.c0) IS FALSE))))OR(((rt1.c1)IS NOT(rt1.c2))));
SELECT ALL rt1.c4, rt1.c2, vt0.c0, rt1.c3, rt1.c0 FROM vt1, rt1, vt0 GROUP BY rt1.c4, rt1.c2, vt0.c0, rt1.c3, rt1.c0;
SELECT rt1.c4, rt1.c2, vt0.c0, rt1.c3, rt1.c0 FROM vt1, rt1, vt0 WHERE (((((vt0.c0)||(rt1.c1))) NOT BETWEEN (((vt1.c0)<<(rt1.c1))) AND ((rt1.c0 IN (rt1.c2))))) GROUP BY rt1.c4, rt1.c2, vt0.c0, rt1.c3, rt1.c0 UNION SELECT rt1.c4, rt1.c2, vt0.c0, rt1.c3, rt1.c0 FROM vt1, rt1, vt0 WHERE ((NOT (((((vt0.c0)||(rt1.c1))) NOT BETWEEN (((vt1.c0)<<(rt1.c1))) AND ((rt1.c0 IN (rt1.c2))))))) GROUP BY rt1.c4, rt1.c2, vt0.c0, rt1.c3, rt1.c0 UNION SELECT rt1.c4, rt1.c2, vt0.c0, rt1.c3, rt1.c0 FROM vt1, rt1, vt0 WHERE (((((((vt0.c0)||(rt1.c1))) NOT BETWEEN (((vt1.c0)<<(rt1.c1))) AND ((rt1.c0 IN (rt1.c2))))) ISNULL)) GROUP BY rt1.c4, rt1.c2, vt0.c0, rt1.c3, rt1.c0;
SELECT ALL rt1.c4, rt1.c2, vt0.c0, rt1.c3, rt1.c0 FROM vt1, rt1, vt0 GROUP BY rt1.c4, rt1.c2, vt0.c0, rt1.c3, rt1.c0;
SELECT rt1.c0, vt1.c0, vt0.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4 FROM vt1, vt0, rt1 GROUP BY rt1.c0, vt1.c0, vt0.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4;
SELECT rt1.c0, vt1.c0, vt0.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4 FROM vt1, vt0, rt1 GROUP BY rt1.c0, vt1.c0, vt0.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4 HAVING MAX(GROUP_CONCAT(SUM(vt0.c0))) UNION ALL SELECT rt1.c0, vt1.c0, vt0.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4 FROM vt1 NOT INDEXED, vt0, rt1 GROUP BY rt1.c0, vt1.c0, vt0.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4 HAVING (NOT (MAX(GROUP_CONCAT(SUM(vt0.c0))))) UNION ALL SELECT rt1.c0, vt1.c0, vt0.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4 FROM vt1, vt0, rt1 GROUP BY rt1.c0, vt1.c0, vt0.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4 HAVING ((MAX(GROUP_CONCAT(SUM(vt0.c0)))) ISNULL);
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (rt1.c1) UNION ALL SELECT * FROM rt1 WHERE ((NOT (rt1.c1))) UNION ALL SELECT ALL * FROM rt1 WHERE (((rt1.c1) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c2 FROM rt1 WHERE (0X67133598) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE ((NOT (0X67133598))) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE (((0x67133598) ISNULL));
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3;
SELECT rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3 FROM rt1 WHERE ((((rt1.c1, rt1.c0, rt1.c0)) BETWEEN ((((((rt1.c4)AND(rt1.c3)))OR(rt1.c2)), LOWER(rt1.c3), ((rt1.c3) NOTNULL))) AND ((((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c3)), LIKELY(DISTINCT rt1.c1), ((((((((rt1.c3)AND(rt1.c1)))OR(rt1.c4)))OR('VsI ')))OR(rt1.c3)))))) GROUP BY rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3 UNION SELECT ALL rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3 FROM rt1 WHERE ((NOT ((((rt1.c1, rt1.c0, rt1.c0)) BETWEEN ((((((rt1.c4)AND(rt1.c3)))OR(rt1.c2)), LOWER(rt1.c3), ((rt1.c3) NOTNULL))) AND ((((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c3)), LIKELY(DISTINCT rt1.c1), ((((((((rt1.c3)AND(rt1.c1)))OR(rt1.c4)))OR('VsI ')))OR(rt1.c3)))))))) GROUP BY rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3 UNION SELECT ALL rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3 FROM rt1 WHERE ((((((rt1.c1, rt1.c0, rt1.c0)) BETWEEN ((((((rt1.c4)AND(rt1.c3)))OR(rt1.c2)), LOWER(rt1.c3), ((rt1.c3) NOTNULL))) AND ((((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c3)), LIKELY(DISTINCT rt1.c1), ((((((((rt1.c3)AND(rt1.c1)))OR(rt1.c4)))OR('VsI ')))OR(rt1.c3)))))) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3;
SELECT rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(AVG(SUM(GROUP_CONCAT(vt1.c0))))) ISNULL) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((GROUP_CONCAT(AVG(SUM(GROUP_CONCAT(vt1.c0))))) ISNULL))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((GROUP_CONCAT(AVG(SUM(GROUP_CONCAT(vt1.c0))))) ISNULL)) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ('782621119') UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ('782621119'))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((('782621119') ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, rt1, vt1;
SELECT DISTINCT * FROM vt0, rt1, vt1 WHERE (((CAST(rt1.c0 AS REAL))OR((((('1#')OR(NULL)))AND(rt1.c3))))) UNION SELECT DISTINCT * FROM vt0, rt1, vt1 WHERE ((NOT (((CAST(rt1.c0 AS REAL))OR((((('1#')OR(NULL)))AND(rt1.c3))))))) UNION SELECT DISTINCT * FROM vt0, rt1, vt1 WHERE (((((CAST(rt1.c0 AS REAL))OR((((('1#')OR(NULL)))AND(rt1.c3))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (LIKELIHOOD(vt1.c0, 0.37583866881500716) COLLATE RTRIM) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (LIKELIHOOD(vt1.c0, 0.37583866881500716) COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((LIKELIHOOD(vt1.c0, 0.37583866881500716) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(COALESCE(MAX(MIN(vt0.c0)), vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(COALESCE(MAX(MIN(vt0.c0)), vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(COALESCE(MAX(MIN(vt0.c0)), vt0.c0))) ISNULL);
SELECT ALL TOTAL((((rt1.c1)=(rt1.c0)) IN ((((rt1.c2, vt0.c0, '-823716833'))<((rt1.c4, vt1.c0, vt0.c0))), (((rt1.c4))<((rt1.c2)))))) FROM vt0, vt1, rt1 ORDER BY ((rt1.c1 COLLATE RTRIM)+((NOT (vt1.c0)))) ASC;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (NULL) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (NULL))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((NULL) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0, rt1, vt1;
SELECT DISTINCT * FROM vt0, rt1, vt1 WHERE (rt1.c4) UNION SELECT DISTINCT * FROM vt0, rt1, vt1 WHERE ((NOT (rt1.c4))) UNION SELECT DISTINCT * FROM vt0, rt1, vt1 WHERE (((rt1.c4) ISNULL));
SELECT DISTINCT * FROM vt0, rt1, vt1;
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT rt1.c3 FROM rt1 WHERE (rt1.c2) GROUP BY rt1.c3 UNION SELECT ALL rt1.c3 FROM rt1 WHERE ((NOT (rt1.c2))) GROUP BY rt1.c3 UNION SELECT rt1.c3 FROM rt1 WHERE (((rt1.c2) ISNULL)) GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT ((NOT (GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (((NOT (GROUP_CONCAT(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT ((NOT (GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (((NOT (GROUP_CONCAT(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL rt1.c2, rt1.c4, rt1.c0, vt0.c0, rt1.c1, rt1.c3, vt1.c0 FROM rt1, vt0, vt1;
SELECT ALL rt1.c2, rt1.c4, rt1.c0, vt0.c0, rt1.c1, rt1.c3, vt1.c0 FROM rt1, vt0, vt1 WHERE ((((- (rt1.c1)))GLOB('(Vhsb0tx'))) UNION ALL SELECT rt1.c2, rt1.c4, rt1.c0, vt0.c0, rt1.c1, rt1.c3, vt1.c0 FROM rt1, vt0, vt1 WHERE ((NOT ((((- (rt1.c1)))GLOB('(Vhsb0tx'))))) UNION ALL SELECT rt1.c2, rt1.c4, rt1.c0, vt0.c0, rt1.c1, rt1.c3, vt1.c0 FROM rt1, vt0, vt1 WHERE ((((((- (rt1.c1)))GLOB('(Vhsb0tx'))) ISNULL));
SELECT ALL rt1.c2, rt1.c4, rt1.c0, vt0.c0, rt1.c1, rt1.c3, vt1.c0 FROM rt1, vt0, vt1;
SELECT DISTINCT * FROM vt0 INNER JOIN rt1 ON CASE WHEN CAST(rt1.c4 AS REAL) THEN CAST(rt1.c4 AS TEXT) ELSE ((rt1.c4) NOT NULL) END;
SELECT DISTINCT * FROM vt0 INNER JOIN rt1 ON CASE WHEN CAST(rt1.c4 AS REAL) THEN CAST(rt1.c4 AS TEXT) ELSE ((rt1.c4) NOT NULL) END WHERE ((((rt1.c0 IN ())) BETWEEN (((rt1.c0) IS FALSE)) AND (x''))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN rt1 ON CASE WHEN CAST(rt1.c4 AS REAL) THEN CAST(rt1.c4 AS TEXT) ELSE ((rt1.c4) NOT NULL) END WHERE ((NOT ((((rt1.c0 IN ())) BETWEEN (((rt1.c0) IS FALSE)) AND (x''))))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN rt1 ON CASE WHEN CAST(rt1.c4 AS REAL) THEN CAST(rt1.c4 AS TEXT) ELSE ((rt1.c4) NOT NULL) END WHERE ((((((rt1.c0 IN ())) BETWEEN (((rt1.c0) IS FALSE)) AND (x''))) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN rt1 ON CASE WHEN CAST(rt1.c4 AS REAL) THEN CAST(rt1.c4 AS TEXT) ELSE ((rt1.c4) NOT NULL) END;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN NULL THEN ((vt1.c0) NOT BETWEEN (x'6d4c') AND (vt1.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)) WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END THEN (((('1679353756')OR('1636791750')))AND(vt0.c0)) END) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (CASE vt0.c0 COLLATE NOCASE  WHEN NULL THEN ((vt1.c0) NOT BETWEEN (x'6d4c') AND (vt1.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)) WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END THEN (((('1679353756')OR('1636791750')))AND(vt0.c0)) END))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((CASE vt0.c0 COLLATE NOCASE  WHEN NULL THEN ((vt1.c0) NOT BETWEEN (x'6d4c') AND (vt1.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)) WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END THEN (((('1679353756')OR('1636791750')))AND(vt0.c0)) END) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c3 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c3;
SELECT ALL rt1.c2, rt1.c1, rt1.c3 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c3 HAVING TOTAL(CAST(SUM(AVG(NULL)) AS NUMERIC)) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c3 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c3 HAVING (NOT (TOTAL(CAST(SUM(AVG(NULL)) AS NUMERIC)))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c3 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c3 HAVING ((TOTAL(CAST(SUM(AVG(NULL)) AS NUMERIC))) ISNULL);
SELECT ALL TOTAL((((((rt1.c2, rt1.c3, rt1.c3))==((rt1.c1, x'', NULL)))) ISNULL)) FROM rt1;
SELECT ALL * FROM vt1, vt0, rt1;
SELECT ALL * FROM vt1, vt0, rt1 NOT INDEXED WHERE ((((vt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))) COLLATE BINARY) UNION ALL SELECT ALL * FROM vt1, vt0, rt1 WHERE ((NOT ((((vt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))) COLLATE BINARY))) UNION ALL SELECT * FROM vt1, vt0, rt1 WHERE ((((((vt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt1, vt0, rt1;
SELECT DISTINCT * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0 WHERE (((((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c4)))<(((rt1.c1)LIKE(vt0.c0))))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((NOT (((((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c4)))<(((rt1.c1)LIKE(vt0.c0))))))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE (((((((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c4)))<(((rt1.c1)LIKE(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((NOT (-18457421))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((NOT (-18457421))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((NOT (-18457421))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c4, vt0.c0, rt1.c1, rt1.c3 FROM vt1, vt0, rt1 GROUP BY rt1.c4, vt0.c0, rt1.c1, rt1.c3;
SELECT ALL rt1.c4, vt0.c0, rt1.c1, rt1.c3 FROM vt1, vt0, rt1 GROUP BY rt1.c4, vt0.c0, rt1.c1, rt1.c3 HAVING SUM(COUNT(*)) UNION ALL SELECT rt1.c4, vt0.c0, rt1.c1, rt1.c3 FROM vt1, vt0, rt1 GROUP BY rt1.c4, vt0.c0, rt1.c1, rt1.c3 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL rt1.c4, vt0.c0, rt1.c1, rt1.c3 FROM vt1, vt0, rt1 GROUP BY rt1.c4, vt0.c0, rt1.c1, rt1.c3 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) BETWEEN ('s#5') AND (x'c6bd'))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE BINARY) BETWEEN ('s#5') AND (x'c6bd'))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((vt1.c0 COLLATE BINARY) BETWEEN ('s#5') AND (x'c6bd'))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT rt1.c1 FROM vt0, vt1, rt1;
SELECT DISTINCT rt1.c1 FROM vt0, vt1, rt1 WHERE ((~ (vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT rt1.c1 FROM vt0, vt1, rt1 WHERE ((NOT ((~ (vt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT rt1.c1 FROM vt0, vt1, rt1 WHERE ((((~ (vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt1.c1 FROM vt0, vt1, rt1;
SELECT ALL rt1.c3, rt1.c1, vt0.c0, rt1.c4 FROM rt1, vt0 FULL OUTER JOIN vt1 ON (((rt1.c3)/(rt1.c2)) IN ()) GROUP BY rt1.c3, rt1.c1, vt0.c0, rt1.c4;
SELECT rt1.c3, rt1.c1, vt0.c0, rt1.c4 FROM rt1, vt0 FULL OUTER JOIN vt1 ON (((rt1.c3)/(rt1.c2)) IN ()) WHERE (((rt1.c3 COLLATE RTRIM)&(rt1.c0 COLLATE BINARY))) GROUP BY rt1.c3, rt1.c1, vt0.c0, rt1.c4 UNION SELECT rt1.c3, rt1.c1, vt0.c0, rt1.c4 FROM rt1, vt0 FULL OUTER JOIN vt1 ON (((rt1.c3)/(rt1.c2)) IN ()) WHERE ((NOT (((rt1.c3 COLLATE RTRIM)&(rt1.c0 COLLATE BINARY))))) GROUP BY rt1.c3, rt1.c1, vt0.c0, rt1.c4 UNION SELECT rt1.c3, rt1.c1, vt0.c0, rt1.c4 FROM rt1, vt0 FULL OUTER JOIN vt1 ON (((rt1.c3)/(rt1.c2)) IN ()) WHERE (((((rt1.c3 COLLATE RTRIM)&(rt1.c0 COLLATE BINARY))) ISNULL)) GROUP BY rt1.c3, rt1.c1, vt0.c0, rt1.c4;
SELECT ALL rt1.c3, rt1.c1, vt0.c0, rt1.c4 FROM rt1, vt0 FULL OUTER JOIN vt1 ON (((rt1.c3)/(rt1.c2)) IN ()) GROUP BY rt1.c3, rt1.c1, vt0.c0, rt1.c4;
SELECT rt1.c4, vt0.c0, rt1.c1, rt1.c3 FROM vt0, vt1 NOT INDEXED, rt1 GROUP BY rt1.c4, vt0.c0, rt1.c1, rt1.c3;
SELECT rt1.c4, vt0.c0, rt1.c1, rt1.c3 FROM vt0, vt1, rt1 GROUP BY rt1.c4, vt0.c0, rt1.c1, rt1.c3 HAVING ((MIN(MAX(TOTAL(rt1.c4)))) NOTNULL) UNION ALL SELECT ALL rt1.c4, vt0.c0, rt1.c1, rt1.c3 FROM vt0, vt1, rt1 GROUP BY rt1.c4, vt0.c0, rt1.c1, rt1.c3 HAVING (NOT (((MIN(MAX(TOTAL(rt1.c4)))) NOTNULL))) UNION ALL SELECT rt1.c4, vt0.c0, rt1.c1, rt1.c3 FROM vt0, vt1 NOT INDEXED, rt1 GROUP BY rt1.c4, vt0.c0, rt1.c1, rt1.c3 HAVING ((((MIN(MAX(TOTAL(rt1.c4)))) NOTNULL)) ISNULL);
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (0.6254900110849191) AND ((((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0))<((0X3c57ed6, vt0.c0, vt0.c0, vt0.c0, vt1.c0)))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (0.6254900110849191) AND ((((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0))<((0X3c57ed6, vt0.c0, vt0.c0, vt0.c0, vt1.c0)))))))) UNION ALL SELECT ALL * FROM vt0 NOT INDEXED, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (0.6254900110849191) AND ((((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0))<((0x3c57ed6, vt0.c0, vt0.c0, vt0.c0, vt1.c0)))))) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c3 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c3 FROM rt1 WHERE (x'') UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c3 FROM rt1 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c3 FROM rt1 WHERE (((x'') ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c3 FROM rt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0)))/((vt0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)LIKE(vt0.c0)))/((vt0.c0 IN ())))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)LIKE(vt0.c0)))/((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c4, rt1.c2, rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1 LEFT OUTER JOIN vt1 ON vt1.c0 GROUP BY rt1.c4, rt1.c2, rt1.c0, vt0.c0, rt1.c1;
SELECT rt1.c4, rt1.c2, rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1 LEFT OUTER JOIN vt1 ON vt1.c0 GROUP BY rt1.c4, rt1.c2, rt1.c0, vt0.c0, rt1.c1 HAVING (~ (MAX(x''))) UNION ALL SELECT rt1.c4, rt1.c2, rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1 NOT INDEXED LEFT OUTER JOIN vt1 ON vt1.c0 GROUP BY rt1.c4, rt1.c2, rt1.c0, vt0.c0, rt1.c1 HAVING (NOT ((~ (MAX(x''))))) UNION ALL SELECT ALL rt1.c4, rt1.c2, rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1 LEFT OUTER JOIN vt1 ON vt1.c0 GROUP BY rt1.c4, rt1.c2, rt1.c0, vt0.c0, rt1.c1 HAVING (((~ (MAX(x'')))) ISNULL);
SELECT rt1.c4, rt1.c2, rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1 LEFT OUTER JOIN vt1 ON vt1.c0 GROUP BY rt1.c4, rt1.c2, rt1.c0, vt0.c0, rt1.c1;
SELECT rt1.c4, rt1.c2, rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1 LEFT OUTER JOIN vt1 ON vt1.c0 GROUP BY rt1.c4, rt1.c2, rt1.c0, vt0.c0, rt1.c1 HAVING (~ (MAX(x''))) UNION ALL SELECT rt1.c4, rt1.c2, rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1 NOT INDEXED LEFT OUTER JOIN vt1 ON vt1.c0 GROUP BY rt1.c4, rt1.c2, rt1.c0, vt0.c0, rt1.c1 HAVING (NOT ((~ (MAX(x''))))) UNION ALL SELECT ALL rt1.c4, rt1.c2, rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1 LEFT OUTER JOIN vt1 ON vt1.c0 GROUP BY rt1.c4, rt1.c2, rt1.c0, vt0.c0, rt1.c1 HAVING (((~ (MAX(x'')))) ISNULL);
SELECT rt1.c4, rt1.c2, rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1 LEFT OUTER JOIN vt1 ON vt1.c0 GROUP BY rt1.c4, rt1.c2, rt1.c0, vt0.c0, rt1.c1;
SELECT rt1.c1, rt1.c2, rt1.c3, rt1.c4 FROM rt1 NATURAL JOIN vt0;
SELECT ALL rt1.c1, rt1.c2, rt1.c3, rt1.c4 FROM rt1 NATURAL JOIN vt0 WHERE (((((((((CAST(rt1.c0 AS TEXT))AND((((rt1.c4)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2))))))AND(CAST(rt1.c3 AS INTEGER))))OR((rt1.c4 IN (rt1.c2)))))OR(((rt1.c2)IS(rt1.c0))))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c3, rt1.c4 FROM rt1 NATURAL JOIN vt0 WHERE ((NOT (((((((((CAST(rt1.c0 AS TEXT))AND((((rt1.c4)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2))))))AND(CAST(rt1.c3 AS INTEGER))))OR((rt1.c4 IN (rt1.c2)))))OR(((rt1.c2)IS(rt1.c0))))))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c3, rt1.c4 FROM rt1 NATURAL JOIN vt0 WHERE (((((((((((CAST(rt1.c0 AS TEXT))AND((((rt1.c4)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2))))))AND(CAST(rt1.c3 AS INTEGER))))OR((rt1.c4 IN (rt1.c2)))))OR(((rt1.c2)IS(rt1.c0))))) ISNULL));
SELECT rt1.c1, rt1.c2, rt1.c3, rt1.c4 FROM rt1 NATURAL JOIN vt0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (((((vt0.c0)OR(vt0.c0))) ISNULL)) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((vt0.c0)OR(vt0.c0))) ISNULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (((((((vt0.c0)OR(vt0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE, vt0.c0, CAST(vt0.c0 AS INTEGER)))<((vt0.c0 COLLATE BINARY, NULL, vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 COLLATE NOCASE, vt0.c0, CAST(vt0.c0 AS INTEGER)))<((vt0.c0 COLLATE BINARY, NULL, vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0 COLLATE NOCASE, vt0.c0, CAST(vt0.c0 AS INTEGER)))<((vt0.c0 COLLATE BINARY, NULL, vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c3 FROM rt1, vt1, vt0 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1 NOT INDEXED, vt1, vt0 GROUP BY rt1.c3 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c3 FROM rt1, vt1, vt0 GROUP BY rt1.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c3 FROM rt1, vt1, vt0 GROUP BY rt1.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c3 FROM rt1, vt1, vt0 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1 NOT INDEXED, vt1, vt0 GROUP BY rt1.c3 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c3 FROM rt1, vt1, vt0 GROUP BY rt1.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c3 FROM rt1, vt1, vt0 GROUP BY rt1.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c3 FROM rt1, vt1, vt0 GROUP BY rt1.c3;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((MAX(0.6836667885188539, vt1.c0))<(vt1.c0 COLLATE BINARY))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((MAX(0.6836667885188539, vt1.c0))<(vt1.c0 COLLATE BINARY))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((MAX(0.6836667885188539, vt1.c0))<(vt1.c0 COLLATE BINARY))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT rt1.c2, rt1.c4, vt0.c0, rt1.c3 FROM vt0, rt1, vt1;
SELECT DISTINCT rt1.c2, rt1.c4, vt0.c0, rt1.c3 FROM vt0, rt1, vt1 WHERE ((((rt1.c3)<=(rt1.c2)) IN ())) UNION SELECT DISTINCT rt1.c2, rt1.c4, vt0.c0, rt1.c3 FROM vt0, rt1, vt1 WHERE ((NOT ((((rt1.c3)<=(rt1.c2)) IN ())))) UNION SELECT DISTINCT rt1.c2, rt1.c4, vt0.c0, rt1.c3 FROM vt0, rt1, vt1 WHERE ((((((rt1.c3)<=(rt1.c2)) IN ())) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c4, vt0.c0, rt1.c3 FROM vt0, rt1, vt1;
SELECT ALL rt1.c3, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c4, rt1.c0;
SELECT ALL rt1.c3, rt1.c4, rt1.c0 FROM rt1 WHERE ((((rt1.c0 IN (rt1.c0, rt1.c2)))OR(CASE WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c2 END))) GROUP BY rt1.c3, rt1.c4, rt1.c0 UNION SELECT ALL rt1.c3, rt1.c4, rt1.c0 FROM rt1 WHERE ((NOT ((((rt1.c0 IN (rt1.c0, rt1.c2)))OR(CASE WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c2 END))))) GROUP BY rt1.c3, rt1.c4, rt1.c0 UNION SELECT rt1.c3, rt1.c4, rt1.c0 FROM rt1 WHERE ((((((rt1.c0 IN (rt1.c0, rt1.c2)))OR(CASE WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c2 END))) ISNULL)) GROUP BY rt1.c3, rt1.c4, rt1.c0;
SELECT ALL rt1.c3, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c4, rt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((MAX(GROUP_CONCAT(vt0.c0)) IN ())) BETWEEN (((MIN(MAX(vt0.c0))) IS FALSE)) AND (MAX(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((MAX(GROUP_CONCAT(vt0.c0)) IN ())) BETWEEN (((MIN(MAX(vt0.c0))) IS FALSE)) AND (MAX(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((MAX(GROUP_CONCAT(vt0.c0)) IN ())) BETWEEN (((MIN(MAX(vt0.c0))) IS FALSE)) AND (MAX(vt0.c0)))) ISNULL);
SELECT * FROM rt1, vt1;
SELECT * FROM rt1, vt1 WHERE (((rt1.c1) IS FALSE)) UNION ALL SELECT ALL * FROM rt1, vt1 WHERE ((NOT (((rt1.c1) IS FALSE)))) UNION ALL SELECT * FROM rt1, vt1 WHERE (((((rt1.c1) IS FALSE)) ISNULL));
SELECT * FROM rt1, vt1;
SELECT DISTINCT vt1.c0, rt1.c3, rt1.c4 FROM rt1, vt1;
SELECT DISTINCT vt1.c0, rt1.c3, rt1.c4 FROM rt1, vt1 WHERE (((((rt1.c0) IS FALSE))||(((((x'')OR(vt1.c0)))OR(rt1.c0))))) UNION SELECT DISTINCT vt1.c0, rt1.c3, rt1.c4 FROM rt1, vt1 WHERE ((NOT (((((rt1.c0) IS FALSE))||(((((x'')OR(vt1.c0)))OR(rt1.c0))))))) UNION SELECT DISTINCT vt1.c0, rt1.c3, rt1.c4 FROM rt1, vt1 WHERE (((((((rt1.c0) IS FALSE))||(((((x'')OR(vt1.c0)))OR(rt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0, rt1.c3, rt1.c4 FROM rt1, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(GROUP_CONCAT(vt1.c0)))+(MIN(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((COUNT(GROUP_CONCAT(vt1.c0)))+(MIN(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT(GROUP_CONCAT(vt1.c0)))+(MIN(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((vt1.c0)<<(0X3baca6f6)) THEN (((vt1.c0))!=((vt1.c0))) WHEN (vt1.c0 IN ()) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN (NOT (vt1.c0)) END) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((vt1.c0)<<(0x3baca6f6)) THEN (((vt1.c0))<>((vt1.c0))) WHEN (vt1.c0 IN ()) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN (NOT (vt1.c0)) END))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((vt1.c0)<<(0x3baca6f6)) THEN (((vt1.c0))<>((vt1.c0))) WHEN (vt1.c0 IN ()) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN (NOT (vt1.c0)) END) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE (CASE WHEN NULL THEN NULL END) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT (CASE WHEN NULL THEN NULL END))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE (((CASE WHEN NULL THEN NULL END) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT ALL vt0.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c1 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c1;
SELECT ALL vt0.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c1 FROM vt0, rt1 WHERE ((((CAST(rt1.c4 AS BLOB), (((rt1.c2))<=((rt1.c1))), ((rt1.c0) NOT NULL)))>=((CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c3 END, (NULL IN ()), ((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt0.c0)))))) GROUP BY vt0.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c1 UNION SELECT ALL vt0.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c1 FROM vt0, rt1 WHERE ((NOT ((((CAST(rt1.c4 AS BLOB), (((rt1.c2))<=((rt1.c1))), ((rt1.c0) NOT NULL)))>=((CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c3 END, (NULL IN ()), ((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt0.c0)))))))) GROUP BY vt0.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c1 UNION SELECT ALL vt0.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c1 FROM vt0, rt1 WHERE ((((((CAST(rt1.c4 AS BLOB), (((rt1.c2))<=((rt1.c1))), ((rt1.c0) NOT NULL)))>=((CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c3 END, (NULL IN ()), ((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt0.c0)))))) ISNULL)) GROUP BY vt0.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c1;
SELECT ALL vt0.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c1 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c3, rt1.c1, rt1.c0, vt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c0, vt1.c0;
SELECT rt1.c2, rt1.c3, rt1.c1, rt1.c0, vt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c0, vt1.c0 HAVING LTRIM(((vt0.c0) NOTNULL), SUM(COUNT(GROUP_CONCAT(SUM(MAX(AVG(MIN(MIN(rt1.c4))))))))) UNION ALL SELECT ALL rt1.c2, rt1.c3, rt1.c1, rt1.c0, vt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c0, vt1.c0 HAVING (NOT (LTRIM(((vt0.c0) NOTNULL), SUM(COUNT(GROUP_CONCAT(SUM(MAX(AVG(MIN(MIN(rt1.c4))))))))))) UNION ALL SELECT rt1.c2, rt1.c3, rt1.c1, rt1.c0, vt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c0, vt1.c0 HAVING ((LTRIM(((vt0.c0) NOTNULL), SUM(COUNT(GROUP_CONCAT(SUM(MAX(AVG(MIN(MIN(rt1.c4)))))))))) ISNULL);
SELECT ALL * FROM vt1, rt1, vt0;
SELECT * FROM vt1, rt1, vt0 WHERE (CASE CAST(rt1.c1 AS REAL)  WHEN rt1.c1 THEN (((rt1.c4)) NOT BETWEEN ((0.3909147465606023)) AND ((x'e47f'))) ELSE rt1.c0 END) UNION ALL SELECT ALL * FROM vt1, rt1, vt0 WHERE ((NOT (CASE CAST(rt1.c1 AS REAL)  WHEN rt1.c1 THEN (((rt1.c4)) NOT BETWEEN ((0.3909147465606023)) AND ((x'e47f'))) ELSE rt1.c0 END))) UNION ALL SELECT * FROM vt1, rt1, vt0 WHERE (((CASE CAST(rt1.c1 AS REAL)  WHEN rt1.c1 THEN (((rt1.c4)) NOT BETWEEN ((0.3909147465606023)) AND ((x'e47f'))) ELSE rt1.c0 END) ISNULL));
SELECT ALL * FROM vt1, rt1, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (NULL) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c0, rt1.c1, rt1.c4, vt1.c0, rt1.c2, rt1.c3 FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON LOWER(DISTINCT x'') GROUP BY vt0.c0, rt1.c1, rt1.c4, vt1.c0, rt1.c2, rt1.c3;
SELECT ALL vt0.c0, rt1.c1, rt1.c4, vt1.c0, rt1.c2, rt1.c3 FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON LOWER(DISTINCT x'') WHERE (((('270413505'))==((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(rt1.c0)))))) GROUP BY vt0.c0, rt1.c1, rt1.c4, vt1.c0, rt1.c2, rt1.c3 UNION SELECT vt0.c0, rt1.c1, rt1.c4, vt1.c0, rt1.c2, rt1.c3 FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON LOWER(DISTINCT x'') WHERE ((NOT (((('270413505'))==((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(rt1.c0)))))))) GROUP BY vt0.c0, rt1.c1, rt1.c4, vt1.c0, rt1.c2, rt1.c3 UNION SELECT ALL vt0.c0, rt1.c1, rt1.c4, vt1.c0, rt1.c2, rt1.c3 FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON LOWER(DISTINCT x'') WHERE (((((('270413505'))=((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(rt1.c0)))))) ISNULL)) GROUP BY vt0.c0, rt1.c1, rt1.c4, vt1.c0, rt1.c2, rt1.c3;
SELECT ALL vt0.c0, rt1.c1, rt1.c4, vt1.c0, rt1.c2, rt1.c3 FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON LOWER(DISTINCT x'') GROUP BY vt0.c0, rt1.c1, rt1.c4, vt1.c0, rt1.c2, rt1.c3;
SELECT ALL rt1.c1, vt1.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c4 FROM rt1, vt1 GROUP BY rt1.c1, vt1.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c4;
SELECT rt1.c1, vt1.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c4 FROM rt1, vt1 GROUP BY rt1.c1, vt1.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c4 HAVING MIN(AVG(rt1.c3)) UNION ALL SELECT ALL rt1.c1, vt1.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c4 FROM rt1, vt1 GROUP BY rt1.c1, vt1.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c4 HAVING (NOT (MIN(AVG(rt1.c3)))) UNION ALL SELECT rt1.c1, vt1.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c4 FROM rt1, vt1 GROUP BY rt1.c1, vt1.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c4 HAVING ((MIN(AVG(rt1.c3))) ISNULL);
SELECT rt1.c3 FROM rt1;
SELECT ALL rt1.c3 FROM rt1 WHERE (x'f983') UNION ALL SELECT ALL rt1.c3 FROM rt1 WHERE ((NOT (x'f983'))) UNION ALL SELECT rt1.c3 FROM rt1 WHERE (((x'f983') ISNULL));
SELECT rt1.c3 FROM rt1;
SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt0 ON (((+ (rt1.c1)))|((NOT (vt0.c0))));
SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt0 ON (((+ (rt1.c1)))|((NOT (vt0.c0)))) WHERE (json_valid(((rt1.c2) NOTNULL))) UNION SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt0 ON (((+ (rt1.c1)))|((NOT (vt0.c0)))) WHERE ((NOT (json_valid(((rt1.c2) NOTNULL))))) UNION SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt0 ON (((+ (rt1.c1)))|((NOT (vt0.c0)))) WHERE (((json_valid(((rt1.c2) NOTNULL))) ISNULL));
SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt0 ON (((+ (rt1.c1)))|((NOT (vt0.c0))));
SELECT rt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0, rt1 GROUP BY rt1.c1, vt1.c0, vt0.c0;
SELECT rt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0, rt1 WHERE ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c4)) IN ())) GROUP BY rt1.c1, vt1.c0, vt0.c0 UNION SELECT rt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0, rt1 WHERE ((NOT ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c4)) IN ())))) GROUP BY rt1.c1, vt1.c0, vt0.c0 UNION SELECT rt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0, rt1 WHERE ((((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c4)) IN ())) ISNULL)) GROUP BY rt1.c1, vt1.c0, vt0.c0;
SELECT rt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0, rt1 GROUP BY rt1.c1, vt1.c0, vt0.c0;
SELECT rt1.c2, rt1.c3, vt1.c0, rt1.c4, rt1.c1 FROM vt0, rt1, vt1 GROUP BY rt1.c2, rt1.c3, vt1.c0, rt1.c4, rt1.c1;
SELECT ALL rt1.c2, rt1.c3, vt1.c0, rt1.c4, rt1.c1 FROM vt0, rt1, vt1 GROUP BY rt1.c2, rt1.c3, vt1.c0, rt1.c4, rt1.c1 HAVING MIN(((MAX(TOTAL(TOTAL(COUNT(*)))))IS NOT(COUNT(*)))) UNION ALL SELECT ALL rt1.c2, rt1.c3, vt1.c0, rt1.c4, rt1.c1 FROM vt0, rt1, vt1 GROUP BY rt1.c2, rt1.c3, vt1.c0, rt1.c4, rt1.c1 HAVING (NOT (MIN(((MAX(TOTAL(TOTAL(COUNT(*)))))IS NOT(COUNT(*)))))) UNION ALL SELECT rt1.c2, rt1.c3, vt1.c0, rt1.c4, rt1.c1 FROM vt0, rt1, vt1 GROUP BY rt1.c2, rt1.c3, vt1.c0, rt1.c4, rt1.c1 HAVING ((MIN(((MAX(TOTAL(TOTAL(COUNT(*)))))IS NOT(COUNT(*))))) ISNULL);
SELECT * FROM rt1, vt0, vt1;
SELECT ALL * FROM rt1, vt0, vt1 WHERE (((((rt1.c2)!=(rt1.c2)))>(NULL COLLATE NOCASE))) UNION ALL SELECT * FROM rt1, vt0, vt1 WHERE ((NOT (((((rt1.c2)<>(rt1.c2)))>(NULL COLLATE NOCASE))))) UNION ALL SELECT ALL * FROM rt1, vt0, vt1 WHERE (((((((rt1.c2)<>(rt1.c2)))>(NULL COLLATE NOCASE))) ISNULL));
SELECT * FROM rt1, vt0, vt1;
SELECT DISTINCT * FROM vt1, rt1;
SELECT DISTINCT * FROM vt1, rt1 WHERE ((((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((((rt1.c1))==((rt1.c2)))))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE ((NOT ((((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((((rt1.c1))=((rt1.c2)))))))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE ((((((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((((rt1.c1))==((rt1.c2)))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt1;
SELECT rt1.c2, vt1.c0, rt1.c4, rt1.c0, rt1.c3 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c4, rt1.c0, rt1.c3;
SELECT ALL rt1.c2, vt1.c0, rt1.c4, rt1.c0, rt1.c3 FROM vt1, rt1 WHERE ((NOT (CAST(rt1.c0 AS INTEGER)))) GROUP BY rt1.c2, vt1.c0, rt1.c4, rt1.c0, rt1.c3 UNION SELECT rt1.c2, vt1.c0, rt1.c4, rt1.c0, rt1.c3 FROM vt1, rt1 WHERE ((NOT ((NOT (CAST(rt1.c0 AS INTEGER)))))) GROUP BY rt1.c2, vt1.c0, rt1.c4, rt1.c0, rt1.c3 UNION SELECT rt1.c2, vt1.c0, rt1.c4, rt1.c0, rt1.c3 FROM vt1, rt1 WHERE ((((NOT (CAST(rt1.c0 AS INTEGER)))) ISNULL)) GROUP BY rt1.c2, vt1.c0, rt1.c4, rt1.c0, rt1.c3;
SELECT rt1.c2, vt1.c0, rt1.c4, rt1.c0, rt1.c3 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c4, rt1.c0, rt1.c3;
SELECT ALL rt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c0 HAVING AVG(x'') UNION ALL SELECT rt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c0 HAVING (NOT (AVG(x''))) UNION ALL SELECT rt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c0 HAVING ((AVG(x'')) ISNULL);
SELECT ALL rt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c0 HAVING AVG(x'') UNION ALL SELECT rt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c0 HAVING (NOT (AVG(x''))) UNION ALL SELECT rt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c0 HAVING ((AVG(x'')) ISNULL);
SELECT ALL rt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c0;
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON (((+ (rt1.c2))) IS FALSE);
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON (((+ (rt1.c2))) IS FALSE) WHERE (((LIKELY(DISTINCT vt0.c0))<<(UPPER(rt1.c1)))) UNION ALL SELECT * FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON (((+ (rt1.c2))) IS FALSE) WHERE ((NOT (((LIKELY(DISTINCT vt0.c0))<<(UPPER(rt1.c1)))))) UNION ALL SELECT * FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON (((+ (rt1.c2))) IS FALSE) WHERE (((((LIKELY(DISTINCT vt0.c0))<<(UPPER(rt1.c1)))) ISNULL));
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON (((+ (rt1.c2))) IS FALSE);
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((x'' IN ())) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((x'' IN ())))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((x'' IN ())) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c3, rt1.c2, rt1.c1, vt0.c0 FROM vt0, rt1, vt1 GROUP BY rt1.c3, rt1.c2, rt1.c1, vt0.c0;
SELECT rt1.c3, rt1.c2, rt1.c1, vt0.c0 FROM vt0, rt1, vt1 WHERE (CASE WHEN ((((rt1.c2)AND(vt1.c0)))OR(vt1.c0)) THEN (((rt1.c3))>=((vt1.c0))) WHEN CAST(rt1.c1 AS TEXT) THEN ((vt1.c0) NOT BETWEEN ('') AND (rt1.c0)) WHEN rt1.c0 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (NULL) AND (NULL)) END) GROUP BY rt1.c3, rt1.c2, rt1.c1, vt0.c0 UNION SELECT rt1.c3, rt1.c2, rt1.c1, vt0.c0 FROM vt0, rt1, vt1 WHERE ((NOT (CASE WHEN ((((rt1.c2)AND(vt1.c0)))OR(vt1.c0)) THEN (((rt1.c3))>=((vt1.c0))) WHEN CAST(rt1.c1 AS TEXT) THEN ((vt1.c0) NOT BETWEEN ('') AND (rt1.c0)) WHEN rt1.c0 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (NULL) AND (NULL)) END))) GROUP BY rt1.c3, rt1.c2, rt1.c1, vt0.c0 UNION SELECT ALL rt1.c3, rt1.c2, rt1.c1, vt0.c0 FROM vt0, rt1, vt1 WHERE (((CASE WHEN ((((rt1.c2)AND(vt1.c0)))OR(vt1.c0)) THEN (((rt1.c3))>=((vt1.c0))) WHEN CAST(rt1.c1 AS TEXT) THEN ((vt1.c0) NOT BETWEEN ('') AND (rt1.c0)) WHEN rt1.c0 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (NULL) AND (NULL)) END) ISNULL)) GROUP BY rt1.c3, rt1.c2, rt1.c1, vt0.c0;
SELECT rt1.c3, rt1.c2, rt1.c1, vt0.c0 FROM vt0, rt1, vt1 GROUP BY rt1.c3, rt1.c2, rt1.c1, vt0.c0;
SELECT rt1.c3, vt0.c0 FROM vt1, vt0 CROSS JOIN rt1 ON (((((rt1.c0 IN (vt1.c0)))AND(((((vt1.c0)AND(rt1.c4)))AND('1679353756')))))OR((- (rt1.c1)))) GROUP BY rt1.c3, vt0.c0;
SELECT ALL rt1.c3, vt0.c0 FROM vt1, vt0 CROSS JOIN rt1 ON (((((rt1.c0 IN (vt1.c0)))AND(((((vt1.c0)AND(rt1.c4)))AND('1679353756')))))OR((- (rt1.c1)))) GROUP BY rt1.c3, vt0.c0 HAVING (+ (CASE WHEN '970276735' THEN SUM(rt1.c4) END)) UNION ALL SELECT rt1.c3, vt0.c0 FROM vt1, vt0 CROSS JOIN rt1 ON (((((rt1.c0 IN (vt1.c0)))AND(((((vt1.c0)AND(rt1.c4)))AND('1679353756')))))OR((- (rt1.c1)))) GROUP BY rt1.c3, vt0.c0 HAVING (NOT ((+ (CASE WHEN '970276735' THEN SUM(rt1.c4) END)))) UNION ALL SELECT ALL rt1.c3, vt0.c0 FROM vt1, vt0 CROSS JOIN rt1 ON (((((rt1.c0 IN (vt1.c0)))AND(((((vt1.c0)AND(rt1.c4)))AND('1679353756')))))OR((- (rt1.c1)))) GROUP BY rt1.c3, vt0.c0 HAVING (((+ (CASE WHEN '970276735' THEN SUM(rt1.c4) END))) ISNULL);
SELECT rt1.c3, vt0.c0 FROM vt1, vt0 CROSS JOIN rt1 ON (((((rt1.c0 IN (vt1.c0)))AND(((((vt1.c0)AND(rt1.c4)))AND('1679353756')))))OR((- (rt1.c1)))) GROUP BY rt1.c3, vt0.c0;
SELECT ALL rt1.c3, vt0.c0 FROM vt1, vt0 CROSS JOIN rt1 ON (((((rt1.c0 IN (vt1.c0)))AND(((((vt1.c0)AND(rt1.c4)))AND('1679353756')))))OR((- (rt1.c1)))) GROUP BY rt1.c3, vt0.c0 HAVING (+ (CASE WHEN '970276735' THEN SUM(rt1.c4) END)) UNION ALL SELECT rt1.c3, vt0.c0 FROM vt1, vt0 CROSS JOIN rt1 ON (((((rt1.c0 IN (vt1.c0)))AND(((((vt1.c0)AND(rt1.c4)))AND('1679353756')))))OR((- (rt1.c1)))) GROUP BY rt1.c3, vt0.c0 HAVING (NOT ((+ (CASE WHEN '970276735' THEN SUM(rt1.c4) END)))) UNION ALL SELECT ALL rt1.c3, vt0.c0 FROM vt1, vt0 CROSS JOIN rt1 ON (((((rt1.c0 IN (vt1.c0)))AND(((((vt1.c0)AND(rt1.c4)))AND('1679353756')))))OR((- (rt1.c1)))) GROUP BY rt1.c3, vt0.c0 HAVING (((+ (CASE WHEN '970276735' THEN SUM(rt1.c4) END))) ISNULL);
SELECT rt1.c3, vt0.c0 FROM vt1, vt0 CROSS JOIN rt1 ON (((((rt1.c0 IN (vt1.c0)))AND(((((vt1.c0)AND(rt1.c4)))AND('1679353756')))))OR((- (rt1.c1)))) GROUP BY rt1.c3, vt0.c0;
SELECT ALL rt1.c2, rt1.c3, rt1.c4, rt1.c0 FROM vt0, rt1;
SELECT rt1.c2, rt1.c3, rt1.c4, rt1.c0 FROM vt0, rt1 WHERE ((((((rt1.c1)%(rt1.c0)), ((((((((rt1.c3)AND(rt1.c4)))AND(rt1.c3)))AND(rt1.c3)))AND(rt1.c3)), vt0.c0 COLLATE RTRIM))<=((CASE WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c4 END, vt0.c0, rt1.c1)))) UNION ALL SELECT ALL rt1.c2, rt1.c3, rt1.c4, rt1.c0 FROM vt0, rt1 WHERE ((NOT ((((((rt1.c1)%(rt1.c0)), ((((((((rt1.c3)AND(rt1.c4)))AND(rt1.c3)))AND(rt1.c3)))AND(rt1.c3)), vt0.c0 COLLATE RTRIM))<=((CASE WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c4 END, vt0.c0, rt1.c1)))))) UNION ALL SELECT rt1.c2, rt1.c3, rt1.c4, rt1.c0 FROM vt0, rt1 WHERE ((((((((rt1.c1)%(rt1.c0)), ((((((((rt1.c3)AND(rt1.c4)))AND(rt1.c3)))AND(rt1.c3)))AND(rt1.c3)), vt0.c0 COLLATE RTRIM))<=((CASE WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c4 END, vt0.c0, rt1.c1)))) ISNULL));
SELECT ALL rt1.c2, rt1.c3, rt1.c4, rt1.c0 FROM vt0, rt1;
SELECT DISTINCT * FROM vt1, rt1;
SELECT DISTINCT * FROM vt1, rt1 WHERE ((~ (json_array_length(vt1.c0)))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE ((NOT ((~ (json_array_length(vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE ((((~ (json_array_length(vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1, rt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((0.571471069116802)AND(((vt0.c0) IS FALSE))))OR((vt0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((0.571471069116802)AND(((vt0.c0) IS FALSE))))OR((vt0.c0 IN ())))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((0.571471069116802)AND(((vt0.c0) IS FALSE))))OR((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(GROUP_CONCAT(SUM(MIN(SUM(0.08167659359199753))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(SUM(MIN(SUM(0.08167659359199753))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(GROUP_CONCAT(SUM(MIN(SUM(0.08167659359199753)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)IS(x'')))IS((~ (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)IS(x'')))IS((~ (vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)IS(x'')))IS((~ (vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c0, rt1.c4 FROM rt1, vt0;
SELECT DISTINCT vt0.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c0, rt1.c4 FROM rt1, vt0 WHERE (((((MAX(0.6353933568525741, rt1.c1))OR(((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))))AND((rt1.c3 IN ())))) UNION SELECT DISTINCT vt0.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c0, rt1.c4 FROM rt1, vt0 WHERE ((NOT (((((MAX(0.6353933568525741, rt1.c1))OR(((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))))AND((rt1.c3 IN ())))))) UNION SELECT DISTINCT vt0.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c0, rt1.c4 FROM rt1, vt0 WHERE (((((((MAX(0.6353933568525741, rt1.c1))OR(((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))))AND((rt1.c3 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0, rt1.c1, rt1.c3, rt1.c2, rt1.c0, rt1.c4 FROM rt1, vt0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 WHERE (CASE (vt1.c0 IN ())  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '-819802214' END THEN (vt1.c0 IN ()) ELSE CAST(vt1.c0 AS BLOB) END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((NOT (CASE (vt1.c0 IN ())  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '-819802214' END THEN (vt1.c0 IN ()) ELSE CAST(vt1.c0 AS BLOB) END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 WHERE (((CASE (vt1.c0 IN ())  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '-819802214' END THEN (vt1.c0 IN ()) ELSE CAST(vt1.c0 AS BLOB) END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT rt1.c3, rt1.c1 FROM rt1 INNER JOIN vt1 ON (+ (((rt1.c2) NOT NULL))) GROUP BY rt1.c3, rt1.c1;
SELECT rt1.c3, rt1.c1 FROM rt1 INNER JOIN vt1 ON (+ (((rt1.c2) NOT NULL))) GROUP BY rt1.c3, rt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c3, rt1.c1 FROM rt1 INNER JOIN vt1 ON (+ (((rt1.c2) NOT NULL))) GROUP BY rt1.c3, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c3, rt1.c1 FROM rt1 INNER JOIN vt1 ON (+ (((rt1.c2) NOT NULL))) GROUP BY rt1.c3, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c3, rt1.c1 FROM rt1 INNER JOIN vt1 ON (+ (((rt1.c2) NOT NULL))) GROUP BY rt1.c3, rt1.c1;
SELECT rt1.c3, rt1.c1 FROM rt1 INNER JOIN vt1 ON (+ (((rt1.c2) NOT NULL))) GROUP BY rt1.c3, rt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c3, rt1.c1 FROM rt1 INNER JOIN vt1 ON (+ (((rt1.c2) NOT NULL))) GROUP BY rt1.c3, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c3, rt1.c1 FROM rt1 INNER JOIN vt1 ON (+ (((rt1.c2) NOT NULL))) GROUP BY rt1.c3, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c3, rt1.c1 FROM rt1 INNER JOIN vt1 ON (+ (((rt1.c2) NOT NULL))) GROUP BY rt1.c3, rt1.c1;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (ABS(CAST(vt0.c0 AS TEXT))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (ABS(CAST(vt0.c0 AS TEXT))))) UNION ALL SELECT * FROM vt0 WHERE (((ABS(CAST(vt0.c0 AS TEXT))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt1.c0, rt1.c4, rt1.c2, vt0.c0, rt1.c1, vt1.c0 FROM rt1, vt1, vt0;
SELECT DISTINCT rt1.c0, rt1.c4, rt1.c2, vt0.c0, rt1.c1, vt1.c0 FROM rt1, vt1, vt0 WHERE (((vt1.c0 COLLATE NOCASE) NOT BETWEEN (NULL) AND (((NULL)/(''))))) UNION SELECT DISTINCT rt1.c0, rt1.c4, rt1.c2, vt0.c0, rt1.c1, vt1.c0 FROM rt1, vt1, vt0 WHERE ((NOT (((vt1.c0 COLLATE NOCASE) NOT BETWEEN (NULL) AND (((NULL)/(''))))))) UNION SELECT DISTINCT rt1.c0, rt1.c4, rt1.c2, vt0.c0, rt1.c1, vt1.c0 FROM rt1, vt1, vt0 WHERE (((((vt1.c0 COLLATE NOCASE) NOT BETWEEN (NULL) AND (((NULL)/(''))))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c4, rt1.c2, vt0.c0, rt1.c1, vt1.c0 FROM rt1, vt1, vt0;
SELECT rt1.c0, vt0.c0, rt1.c1, rt1.c3, rt1.c4, rt1.c2 FROM rt1 INNER JOIN vt0 ON ((((rt1.c2)OR(rt1.c0)))!=((NOT (rt1.c4)))) GROUP BY rt1.c0, vt0.c0, rt1.c1, rt1.c3, rt1.c4, rt1.c2;
SELECT ALL rt1.c0, vt0.c0, rt1.c1, rt1.c3, rt1.c4, rt1.c2 FROM rt1 INNER JOIN vt0 ON ((((rt1.c2)OR(rt1.c0)))!=((NOT (rt1.c4)))) WHERE ((((rt1.c2) BETWEEN (rt1.c4) AND (rt1.c1)) IN (json_object(rt1.c4, rt1.c4)))) GROUP BY rt1.c0, vt0.c0, rt1.c1, rt1.c3, rt1.c4, rt1.c2 UNION SELECT ALL rt1.c0, vt0.c0, rt1.c1, rt1.c3, rt1.c4, rt1.c2 FROM rt1 INNER JOIN vt0 ON ((((rt1.c2)OR(rt1.c0)))<>((NOT (rt1.c4)))) WHERE ((NOT ((((rt1.c2) BETWEEN (rt1.c4) AND (rt1.c1)) IN (json_object(rt1.c4, rt1.c4)))))) GROUP BY rt1.c0, vt0.c0, rt1.c1, rt1.c3, rt1.c4, rt1.c2 UNION SELECT ALL rt1.c0, vt0.c0, rt1.c1, rt1.c3, rt1.c4, rt1.c2 FROM rt1 INNER JOIN vt0 ON ((((rt1.c2)OR(rt1.c0)))!=((NOT (rt1.c4)))) WHERE ((((((rt1.c2) BETWEEN (rt1.c4) AND (rt1.c1)) IN (json_object(rt1.c4, rt1.c4)))) ISNULL)) GROUP BY rt1.c0, vt0.c0, rt1.c1, rt1.c3, rt1.c4, rt1.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(CAST(vt0.c0 AS REAL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(CAST(vt0.c0 AS REAL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(CAST(vt0.c0 AS REAL))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(CAST(vt0.c0 AS REAL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(CAST(vt0.c0 AS REAL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(CAST(vt0.c0 AS REAL))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (NULL) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((NULL) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS NUMERIC) THEN vt0.c0 ELSE (- (NULL)) END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS NUMERIC) THEN vt0.c0 ELSE (- (NULL)) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS NUMERIC) THEN vt0.c0 ELSE (- (NULL)) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0)<>(vt1.c0)) COLLATE NOCASE) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0)!=(vt1.c0)) COLLATE NOCASE))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)!=(vt1.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt1.c3, rt1.c4, rt1.c2 FROM rt1 GROUP BY rt1.c3, rt1.c4, rt1.c2;
SELECT ALL rt1.c3, rt1.c4, rt1.c2 FROM rt1 GROUP BY rt1.c3, rt1.c4, rt1.c2 HAVING AVG(((TOTAL(AVG(COUNT(rt1.c3))))OR(AVG(MIN(TOTAL(rt1.c3)))))) UNION ALL SELECT rt1.c3, rt1.c4, rt1.c2 FROM rt1 GROUP BY rt1.c3, rt1.c4, rt1.c2 HAVING (NOT (AVG(((TOTAL(AVG(COUNT(rt1.c3))))OR(AVG(MIN(TOTAL(rt1.c3)))))))) UNION ALL SELECT rt1.c3, rt1.c4, rt1.c2 FROM rt1 GROUP BY rt1.c3, rt1.c4, rt1.c2 HAVING ((AVG(((TOTAL(AVG(COUNT(rt1.c3))))OR(AVG(MIN(TOTAL(rt1.c3))))))) ISNULL);
SELECT ALL rt1.c4, rt1.c0, rt1.c3 FROM rt1, vt1, vt0;
SELECT rt1.c4, rt1.c0, rt1.c3 FROM rt1, vt1, vt0 WHERE (((((x'') NOT BETWEEN (rt1.c2) AND (0.9464326869229022)))==(((((vt0.c0)OR(vt0.c0)))OR(rt1.c1))))) UNION ALL SELECT rt1.c4, rt1.c0, rt1.c3 FROM rt1, vt1, vt0 WHERE ((NOT (((((x'') NOT BETWEEN (rt1.c2) AND (0.9464326869229022)))=(((((vt0.c0)OR(vt0.c0)))OR(rt1.c1))))))) UNION ALL SELECT rt1.c4, rt1.c0, rt1.c3 FROM rt1, vt1, vt0 WHERE (((((((x'') NOT BETWEEN (rt1.c2) AND (0.9464326869229022)))=(((((vt0.c0)OR(vt0.c0)))OR(rt1.c1))))) ISNULL));
SELECT ALL rt1.c4, rt1.c0, rt1.c3 FROM rt1, vt1, vt0;
SELECT DISTINCT * FROM vt0, vt1, rt1;
SELECT DISTINCT * FROM vt0, vt1, rt1 WHERE (CASE (((rt1.c1, rt1.c2, rt1.c4))<((rt1.c1, vt0.c0, rt1.c1)))  WHEN NULLIF(DISTINCT rt1.c4, rt1.c1) THEN ((((rt1.c1)OR(vt1.c0)))OR(x'eb83eb9a')) END) UNION SELECT DISTINCT * FROM vt0, vt1, rt1 WHERE ((NOT (CASE (((rt1.c1, rt1.c2, rt1.c4))<((rt1.c1, vt0.c0, rt1.c1)))  WHEN NULLIF(DISTINCT rt1.c4, rt1.c1) THEN ((((rt1.c1)OR(vt1.c0)))OR(x'eb83eb9a')) END))) UNION SELECT DISTINCT * FROM vt0, vt1, rt1 WHERE (((CASE (((rt1.c1, rt1.c2, rt1.c4))<((rt1.c1, vt0.c0, rt1.c1)))  WHEN NULLIF(DISTINCT rt1.c4, rt1.c1) THEN ((((rt1.c1)OR(vt1.c0)))OR(x'eb83eb9a')) END) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt1;
SELECT ALL vt0.c0 FROM vt0, vt1, rt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1, rt1 WHERE ((('') IS FALSE) COLLATE NOCASE) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1, rt1 WHERE ((NOT ((('') IS FALSE) COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1, rt1 WHERE ((((('') IS FALSE) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1, rt1 GROUP BY vt0.c0;
SELECT ALL rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0 HAVING rt1.c4 UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (rt1.c4)) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((rt1.c4) ISNULL);
SELECT ALL rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0 HAVING rt1.c4 UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (rt1.c4)) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((rt1.c4) ISNULL);
SELECT ALL rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt1 ON (~ (((rt1.c0) NOTNULL)));
SELECT * FROM vt1 RIGHT OUTER JOIN rt1 ON (~ (((rt1.c0) NOTNULL))) WHERE (MAX(((rt1.c0) IS TRUE), CAST(rt1.c2 AS BLOB))) UNION ALL SELECT * FROM vt1 RIGHT OUTER JOIN rt1 ON (~ (((rt1.c0) NOTNULL))) WHERE ((NOT (MAX(((rt1.c0) IS TRUE), CAST(rt1.c2 AS BLOB))))) UNION ALL SELECT * FROM vt1 RIGHT OUTER JOIN rt1 ON (~ (((rt1.c0) NOTNULL))) WHERE (((MAX(((rt1.c0) IS TRUE), CAST(rt1.c2 AS BLOB))) ISNULL));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt1 ON (~ (((rt1.c0) NOTNULL)));
SELECT DISTINCT * FROM vt0, vt1, rt1;
SELECT DISTINCT * FROM vt0, vt1, rt1 WHERE ((rt1.c4 COLLATE RTRIM IN ())) UNION SELECT DISTINCT * FROM vt0, vt1, rt1 WHERE ((NOT ((rt1.c4 COLLATE RTRIM IN ())))) UNION SELECT DISTINCT * FROM vt0, vt1, rt1 WHERE ((((rt1.c4 COLLATE RTRIM IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt1;
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1 WHERE (CASE WHEN rt1.c4 THEN '' WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c0 END COLLATE BINARY) GROUP BY rt1.c3 UNION SELECT rt1.c3 FROM rt1 WHERE ((NOT (CASE WHEN rt1.c4 THEN '' WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c0 END COLLATE BINARY))) GROUP BY rt1.c3 UNION SELECT ALL rt1.c3 FROM rt1 WHERE (((CASE WHEN rt1.c4 THEN '' WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c0 END COLLATE BINARY) ISNULL)) GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT ALL rt1.c0, rt1.c2, vt1.c0, rt1.c3, vt0.c0, rt1.c4, rt1.c1 FROM vt0, vt1, rt1 GROUP BY rt1.c0, rt1.c2, vt1.c0, rt1.c3, vt0.c0, rt1.c4, rt1.c1;
SELECT rt1.c0, rt1.c2, vt1.c0, rt1.c3, vt0.c0, rt1.c4, rt1.c1 FROM vt0, vt1, rt1 GROUP BY rt1.c0, rt1.c2, vt1.c0, rt1.c3, vt0.c0, rt1.c4, rt1.c1 HAVING AVG(COUNT(*) COLLATE NOCASE) UNION ALL SELECT rt1.c0, rt1.c2, vt1.c0, rt1.c3, vt0.c0, rt1.c4, rt1.c1 FROM vt0, vt1, rt1 GROUP BY rt1.c0, rt1.c2, vt1.c0, rt1.c3, vt0.c0, rt1.c4, rt1.c1 HAVING (NOT (AVG(COUNT(*) COLLATE NOCASE))) UNION ALL SELECT ALL rt1.c0, rt1.c2, vt1.c0, rt1.c3, vt0.c0, rt1.c4, rt1.c1 FROM vt0, vt1, rt1 GROUP BY rt1.c0, rt1.c2, vt1.c0, rt1.c3, vt0.c0, rt1.c4, rt1.c1 HAVING ((AVG(COUNT(*) COLLATE NOCASE)) ISNULL);
SELECT ALL * FROM vt0, rt1;
SELECT ALL * FROM vt0, rt1 WHERE ((((((NOT (rt1.c4)))OR(((rt1.c3) NOT NULL))))AND(((rt1.c3)==(vt0.c0))))) UNION ALL SELECT * FROM vt0, rt1 WHERE ((NOT ((((((NOT (rt1.c4)))OR(((rt1.c3) NOT NULL))))AND(((rt1.c3)=(vt0.c0))))))) UNION ALL SELECT * FROM vt0, rt1 WHERE ((((((((NOT (rt1.c4)))OR(((rt1.c3) NOT NULL))))AND(((rt1.c3)==(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0, rt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE vt0.c0  WHEN 'zR' THEN vt0.c0 ELSE vt0.c0 END)!=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN 'zR' THEN vt0.c0 ELSE vt0.c0 END)<>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((CASE vt0.c0  WHEN 'zR' THEN vt0.c0 ELSE vt0.c0 END)<>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt1, vt0 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt1, vt0 WHERE (((((+ (vt1.c0))))<=(((NOT ('154122617')))))) GROUP BY rt1.c2, rt1.c0, rt1.c1 UNION SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt1, vt0 WHERE ((NOT (((((+ (vt1.c0))))<=(((NOT ('154122617')))))))) GROUP BY rt1.c2, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt1, vt0 WHERE (((((((+ (vt1.c0))))<=(((NOT ('154122617')))))) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt1, vt0 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((SUM('1486053470'))OR(COUNT(vt0.c0))))OR(TRIM(DISTINCT AVG(vt0.c0)))))AND((((AVG(x'')))>((COUNT(*)))))))OR(SUM(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((((((SUM('1486053470'))OR(COUNT(vt0.c0))))OR(TRIM(DISTINCT AVG(vt0.c0)))))AND((((AVG(x'')))>((COUNT(*)))))))OR(SUM(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((((SUM('1486053470'))OR(COUNT(vt0.c0))))OR(TRIM(DISTINCT AVG(vt0.c0)))))AND((((AVG(x'')))>((COUNT(*)))))))OR(SUM(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((SUM('1486053470'))OR(COUNT(vt0.c0))))OR(TRIM(DISTINCT AVG(vt0.c0)))))AND((((AVG(x'')))>((COUNT(*)))))))OR(SUM(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((((((SUM('1486053470'))OR(COUNT(vt0.c0))))OR(TRIM(DISTINCT AVG(vt0.c0)))))AND((((AVG(x'')))>((COUNT(*)))))))OR(SUM(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((((SUM('1486053470'))OR(COUNT(vt0.c0))))OR(TRIM(DISTINCT AVG(vt0.c0)))))AND((((AVG(x'')))>((COUNT(*)))))))OR(SUM(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((json_remove(vt1.c0, vt1.c0)) IS TRUE)) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((json_remove(vt1.c0, vt1.c0)) IS TRUE)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((json_remove(vt1.c0, vt1.c0)) IS TRUE)) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c4) NOTNULL)))<=((((((rt1.c2)AND(rt1.c0)))OR(rt1.c4)))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((((rt1.c4) NOTNULL)))<=((((((rt1.c2)AND(rt1.c0)))OR(rt1.c4)))))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((((rt1.c4) NOTNULL)))<=((((((rt1.c2)AND(rt1.c0)))OR(rt1.c4)))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0 COLLATE RTRIM) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0 COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, rt1.c3, rt1.c2 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c3, rt1.c2;
SELECT ALL vt1.c0, rt1.c3, rt1.c2 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c3, rt1.c2 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, rt1.c3, rt1.c2 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c3, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, rt1.c3, rt1.c2 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c3, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, rt1.c3, rt1.c2 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c3, rt1.c2;
SELECT ALL vt1.c0, rt1.c3, rt1.c2 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c3, rt1.c2 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, rt1.c3, rt1.c2 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c3, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, rt1.c3, rt1.c2 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c3, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, rt1.c3, rt1.c2 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c3, rt1.c2;
SELECT * FROM rt1, vt1, vt0;
SELECT * FROM rt1, vt1, vt0 WHERE (x'') UNION ALL SELECT ALL * FROM rt1, vt1, vt0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM rt1, vt1, vt0 WHERE (((x'') ISNULL));
SELECT * FROM rt1, vt1, vt0;
SELECT DISTINCT rt1.c2 FROM rt1, vt1;
SELECT DISTINCT rt1.c2 FROM rt1, vt1 WHERE (rt1.c3) UNION SELECT DISTINCT rt1.c2 FROM rt1, vt1 WHERE ((NOT (rt1.c3))) UNION SELECT DISTINCT rt1.c2 FROM rt1, vt1 WHERE (((rt1.c3) ISNULL));
SELECT DISTINCT rt1.c2 FROM rt1, vt1;
SELECT ALL vt1.c0, rt1.c3, rt1.c4, rt1.c2, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c3, rt1.c4, rt1.c2, rt1.c0;
SELECT ALL vt1.c0, rt1.c3, rt1.c4, rt1.c2, rt1.c0 FROM vt1, rt1 WHERE ((((rt1.c3 IN ()))||((+ (rt1.c2))))) GROUP BY vt1.c0, rt1.c3, rt1.c4, rt1.c2, rt1.c0 UNION SELECT ALL vt1.c0, rt1.c3, rt1.c4, rt1.c2, rt1.c0 FROM vt1, rt1 WHERE ((NOT ((((rt1.c3 IN ()))||((+ (rt1.c2))))))) GROUP BY vt1.c0, rt1.c3, rt1.c4, rt1.c2, rt1.c0 UNION SELECT vt1.c0, rt1.c3, rt1.c4, rt1.c2, rt1.c0 FROM vt1, rt1 WHERE ((((((rt1.c3 IN ()))||((+ (rt1.c2))))) ISNULL)) GROUP BY vt1.c0, rt1.c3, rt1.c4, rt1.c2, rt1.c0;
SELECT ALL vt1.c0, rt1.c3, rt1.c4, rt1.c2, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c3, rt1.c4, rt1.c2, rt1.c0;
SELECT ALL vt0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2 FROM rt1 NATURAL JOIN vt0 GROUP BY vt0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2;
SELECT ALL vt0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2 FROM rt1 NATURAL JOIN vt0 GROUP BY vt0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2 HAVING GROUP_CONCAT((((MAX(TOTAL(rt1.c3))))=((rt1.c1)))) UNION ALL SELECT ALL vt0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2 FROM rt1 NATURAL JOIN vt0 GROUP BY vt0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2 HAVING (NOT (GROUP_CONCAT((((MAX(TOTAL(rt1.c3))))=((rt1.c1)))))) UNION ALL SELECT vt0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2 FROM rt1 NATURAL JOIN vt0 GROUP BY vt0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2 HAVING ((GROUP_CONCAT((((MAX(TOTAL(rt1.c3))))=((rt1.c1))))) ISNULL);
SELECT rt1.c1, rt1.c3, rt1.c4, rt1.c0 FROM rt1;
SELECT ALL rt1.c1, rt1.c3, rt1.c4, rt1.c0 FROM rt1 WHERE ((((rt1.c4) ISNULL) IN ())) UNION ALL SELECT ALL rt1.c1, rt1.c3, rt1.c4, rt1.c0 FROM rt1 WHERE ((NOT ((((rt1.c4) ISNULL) IN ())))) UNION ALL SELECT rt1.c1, rt1.c3, rt1.c4, rt1.c0 FROM rt1 WHERE ((((((rt1.c4) ISNULL) IN ())) ISNULL));
SELECT rt1.c1, rt1.c3, rt1.c4, rt1.c0 FROM rt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)<>(vt1.c0)))*(IFNULL(vt1.c0, vt1.c0)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0)!=(vt1.c0)))*(IFNULL(vt1.c0, vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)!=(vt1.c0)))*(IFNULL(vt1.c0, vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0, rt1.c0, rt1.c4, rt1.c2, vt0.c0, rt1.c3, rt1.c1 FROM rt1, vt0, vt1 GROUP BY vt1.c0, rt1.c0, rt1.c4, rt1.c2, vt0.c0, rt1.c3, rt1.c1;
SELECT ALL vt1.c0, rt1.c0, rt1.c4, rt1.c2, vt0.c0, rt1.c3, rt1.c1 FROM rt1, vt0, vt1 WHERE (CAST(CAST(rt1.c1 AS TEXT) AS BLOB)) GROUP BY vt1.c0, rt1.c0, rt1.c4, rt1.c2, vt0.c0, rt1.c3, rt1.c1 UNION SELECT vt1.c0, rt1.c0, rt1.c4, rt1.c2, vt0.c0, rt1.c3, rt1.c1 FROM rt1, vt0, vt1 WHERE ((NOT (CAST(CAST(rt1.c1 AS TEXT) AS BLOB)))) GROUP BY vt1.c0, rt1.c0, rt1.c4, rt1.c2, vt0.c0, rt1.c3, rt1.c1 UNION SELECT vt1.c0, rt1.c0, rt1.c4, rt1.c2, vt0.c0, rt1.c3, rt1.c1 FROM rt1, vt0, vt1 WHERE (((CAST(CAST(rt1.c1 AS TEXT) AS BLOB)) ISNULL)) GROUP BY vt1.c0, rt1.c0, rt1.c4, rt1.c2, vt0.c0, rt1.c3, rt1.c1;
SELECT vt1.c0, rt1.c0, rt1.c4, rt1.c2, vt0.c0, rt1.c3, rt1.c1 FROM rt1, vt0, vt1 GROUP BY vt1.c0, rt1.c0, rt1.c4, rt1.c2, vt0.c0, rt1.c3, rt1.c1;
SELECT ALL rt1.c4, rt1.c3, rt1.c0 FROM rt1, vt0, vt1 GROUP BY rt1.c4, rt1.c3, rt1.c0;
SELECT ALL rt1.c4, rt1.c3, rt1.c0 FROM rt1, vt0, vt1 GROUP BY rt1.c4, rt1.c3, rt1.c0 HAVING SUM(MIN(AVG(rt1.c0))) UNION ALL SELECT rt1.c4, rt1.c3, rt1.c0 FROM rt1, vt0, vt1 GROUP BY rt1.c4, rt1.c3, rt1.c0 HAVING (NOT (SUM(MIN(AVG(rt1.c0))))) UNION ALL SELECT ALL rt1.c4, rt1.c3, rt1.c0 FROM rt1, vt0, vt1 GROUP BY rt1.c4, rt1.c3, rt1.c0 HAVING ((SUM(MIN(AVG(rt1.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((QUOTE('czឰOA᡻'))!=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((QUOTE('czឰOA᡻'))<>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((QUOTE('czឰOA᡻'))<>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT rt1.c2, vt0.c0, rt1.c1, rt1.c3, rt1.c4, rt1.c0, vt1.c0 FROM rt1 LEFT OUTER JOIN vt0 ON ((((DATETIME(rt1.c2, rt1.c3, rt1.c0))OR((vt1.c0 IN ()))))AND((- (rt1.c0)))) CROSS JOIN vt1 ON CAST(CASE 0.5933826600485909  WHEN vt0.c0 THEN rt1.c4 ELSE rt1.c4 END AS NUMERIC);
SELECT DISTINCT rt1.c2, vt0.c0, rt1.c1, rt1.c3, rt1.c4, rt1.c0, vt1.c0 FROM rt1 LEFT OUTER JOIN vt0 ON ((((DATETIME(rt1.c2, rt1.c3, rt1.c0))OR((vt1.c0 IN ()))))AND((- (rt1.c0)))) CROSS JOIN vt1 ON CAST(CASE 0.5933826600485909  WHEN vt0.c0 THEN rt1.c4 ELSE rt1.c4 END AS NUMERIC) WHERE (((CAST(vt0.c0 AS BLOB))*(vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT rt1.c2, vt0.c0, rt1.c1, rt1.c3, rt1.c4, rt1.c0, vt1.c0 FROM rt1 LEFT OUTER JOIN vt0 ON ((((DATETIME(rt1.c2, rt1.c3, rt1.c0))OR((vt1.c0 IN ()))))AND((- (rt1.c0)))) CROSS JOIN vt1 ON CAST(CASE 0.5933826600485909  WHEN vt0.c0 THEN rt1.c4 ELSE rt1.c4 END AS NUMERIC) WHERE ((NOT (((CAST(vt0.c0 AS BLOB))*(vt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT rt1.c2, vt0.c0, rt1.c1, rt1.c3, rt1.c4, rt1.c0, vt1.c0 FROM rt1 LEFT OUTER JOIN vt0 ON ((((DATETIME(rt1.c2, rt1.c3, rt1.c0))OR((vt1.c0 IN ()))))AND((- (rt1.c0)))) CROSS JOIN vt1 ON CAST(CASE 0.5933826600485909  WHEN vt0.c0 THEN rt1.c4 ELSE rt1.c4 END AS NUMERIC) WHERE (((((CAST(vt0.c0 AS BLOB))*(vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt1.c2, vt0.c0, rt1.c1, rt1.c3, rt1.c4, rt1.c0, vt1.c0 FROM rt1 LEFT OUTER JOIN vt0 ON ((((DATETIME(rt1.c2, rt1.c3, rt1.c0))OR((vt1.c0 IN ()))))AND((- (rt1.c0)))) CROSS JOIN vt1 ON CAST(CASE 0.5933826600485909  WHEN vt0.c0 THEN rt1.c4 ELSE rt1.c4 END AS NUMERIC);
SELECT rt1.c0, rt1.c3, vt1.c0, rt1.c4 FROM vt1, vt0, rt1 GROUP BY rt1.c0, rt1.c3, vt1.c0, rt1.c4;
SELECT ALL rt1.c0, rt1.c3, vt1.c0, rt1.c4 FROM vt1, vt0, rt1 WHERE ((NOT ((+ (rt1.c3))))) GROUP BY rt1.c0, rt1.c3, vt1.c0, rt1.c4 UNION SELECT ALL rt1.c0, rt1.c3, vt1.c0, rt1.c4 FROM vt1, vt0, rt1 WHERE ((NOT ((NOT ((+ (rt1.c3))))))) GROUP BY rt1.c0, rt1.c3, vt1.c0, rt1.c4 UNION SELECT ALL rt1.c0, rt1.c3, vt1.c0, rt1.c4 FROM vt1, vt0, rt1 WHERE ((((NOT ((+ (rt1.c3))))) ISNULL)) GROUP BY rt1.c0, rt1.c3, vt1.c0, rt1.c4;
SELECT rt1.c0, rt1.c3, vt1.c0, rt1.c4 FROM vt1, vt0, rt1 GROUP BY rt1.c0, rt1.c3, vt1.c0, rt1.c4;
SELECT rt1.c4, rt1.c2, vt0.c0, rt1.c0 FROM rt1 INNER JOIN vt0 ON CASE (('gz') BETWEEN (vt0.c0) AND (rt1.c3))  WHEN vt0.c0 THEN NULL END GROUP BY rt1.c4, rt1.c2, vt0.c0, rt1.c0;
SELECT ALL rt1.c4, rt1.c2, vt0.c0, rt1.c0 FROM rt1 INNER JOIN vt0 ON CASE (('gz') BETWEEN (vt0.c0) AND (rt1.c3))  WHEN vt0.c0 THEN NULL END GROUP BY rt1.c4, rt1.c2, vt0.c0, rt1.c0 HAVING rt1.c4 UNION ALL SELECT ALL rt1.c4, rt1.c2, vt0.c0, rt1.c0 FROM rt1 INNER JOIN vt0 ON CASE (('gz') BETWEEN (vt0.c0) AND (rt1.c3))  WHEN vt0.c0 THEN NULL END GROUP BY rt1.c4, rt1.c2, vt0.c0, rt1.c0 HAVING (NOT (rt1.c4)) UNION ALL SELECT ALL rt1.c4, rt1.c2, vt0.c0, rt1.c0 FROM rt1 INNER JOIN vt0 ON CASE (('gz') BETWEEN (vt0.c0) AND (rt1.c3))  WHEN vt0.c0 THEN NULL END GROUP BY rt1.c4, rt1.c2, vt0.c0, rt1.c0 HAVING ((rt1.c4) ISNULL);
SELECT rt1.c4, rt1.c2, vt0.c0, rt1.c0 FROM rt1 INNER JOIN vt0 ON CASE (('gz') BETWEEN (vt0.c0) AND (rt1.c3))  WHEN vt0.c0 THEN NULL END GROUP BY rt1.c4, rt1.c2, vt0.c0, rt1.c0;
SELECT ALL rt1.c4, rt1.c2, vt0.c0, rt1.c0 FROM rt1 INNER JOIN vt0 ON CASE (('gz') BETWEEN (vt0.c0) AND (rt1.c3))  WHEN vt0.c0 THEN NULL END GROUP BY rt1.c4, rt1.c2, vt0.c0, rt1.c0 HAVING rt1.c4 UNION ALL SELECT ALL rt1.c4, rt1.c2, vt0.c0, rt1.c0 FROM rt1 INNER JOIN vt0 ON CASE (('gz') BETWEEN (vt0.c0) AND (rt1.c3))  WHEN vt0.c0 THEN NULL END GROUP BY rt1.c4, rt1.c2, vt0.c0, rt1.c0 HAVING (NOT (rt1.c4)) UNION ALL SELECT ALL rt1.c4, rt1.c2, vt0.c0, rt1.c0 FROM rt1 INNER JOIN vt0 ON CASE (('gz') BETWEEN (vt0.c0) AND (rt1.c3))  WHEN vt0.c0 THEN NULL END GROUP BY rt1.c4, rt1.c2, vt0.c0, rt1.c0 HAVING ((rt1.c4) ISNULL);
SELECT rt1.c4, rt1.c2, vt0.c0, rt1.c0 FROM rt1 INNER JOIN vt0 ON CASE (('gz') BETWEEN (vt0.c0) AND (rt1.c3))  WHEN vt0.c0 THEN NULL END GROUP BY rt1.c4, rt1.c2, vt0.c0, rt1.c0;
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((((rt1.c4)/('%\rgc鋒)]>^'))) NOT BETWEEN (CAST(rt1.c2 AS INTEGER)) AND (((vt1.c0) NOTNULL))) RIGHT OUTER JOIN rt1 ON (((rt1.c4)||(rt1.c0)) IN ());
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS REAL)) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (CAST(CAST(vt0.c0 AS BLOB) AS REAL)))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((CAST(CAST(vt0.c0 AS BLOB) AS REAL)) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT rt1.c4, rt1.c1, rt1.c2, vt0.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON CAST(COALESCE(rt1.c4, rt1.c1) AS INTEGER) FULL OUTER JOIN vt1 ON (((vt1.c0 IN (rt1.c1)))IS(((rt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) GROUP BY rt1.c4, rt1.c1, rt1.c2, vt0.c0;
SELECT rt1.c4, rt1.c1, rt1.c2, vt0.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON CAST(COALESCE(rt1.c4, rt1.c1) AS INTEGER) FULL OUTER JOIN vt1 ON (((vt1.c0 IN (rt1.c1)))IS(((rt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE (NULL) GROUP BY rt1.c4, rt1.c1, rt1.c2, vt0.c0 UNION SELECT rt1.c4, rt1.c1, rt1.c2, vt0.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON CAST(COALESCE(rt1.c4, rt1.c1) AS INTEGER) FULL OUTER JOIN vt1 ON (((vt1.c0 IN (rt1.c1)))IS(((rt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE ((NOT (NULL))) GROUP BY rt1.c4, rt1.c1, rt1.c2, vt0.c0 UNION SELECT ALL rt1.c4, rt1.c1, rt1.c2, vt0.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON CAST(COALESCE(rt1.c4, rt1.c1) AS INTEGER) FULL OUTER JOIN vt1 ON (((vt1.c0 IN (rt1.c1)))IS(((rt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE (((NULL) ISNULL)) GROUP BY rt1.c4, rt1.c1, rt1.c2, vt0.c0;
SELECT rt1.c4, rt1.c1, rt1.c2, vt0.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON CAST(COALESCE(rt1.c4, rt1.c1) AS INTEGER) FULL OUTER JOIN vt1 ON (((vt1.c0 IN (rt1.c1)))IS(((rt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) GROUP BY rt1.c4, rt1.c1, rt1.c2, vt0.c0;
SELECT ALL rt1.c4, rt1.c1, rt1.c2 FROM vt0, vt1, rt1 GROUP BY rt1.c4, rt1.c1, rt1.c2;
SELECT ALL rt1.c4, rt1.c1, rt1.c2 FROM vt0, vt1, rt1 GROUP BY rt1.c4, rt1.c1, rt1.c2 HAVING (((COUNT(*) COLLATE BINARY, vt0.c0, (vt0.c0 IN ()), TOTAL(TOTAL(rt1.c4)), (+ (rt1.c0)), COUNT(*), GROUP_CONCAT(AVG(COUNT(*)))))!=((rt1.c3, TOTAL(MAX(rt1.c3)), GROUP_CONCAT(vt0.c0), MIN(COUNT(MAX(SUM(vt0.c0)))), NULL, (- (-1351036193)), NULL))) UNION ALL SELECT ALL rt1.c4, rt1.c1, rt1.c2 FROM vt0, vt1 NOT INDEXED, rt1 GROUP BY rt1.c4, rt1.c1, rt1.c2 HAVING (NOT ((((COUNT(*) COLLATE BINARY, vt0.c0, (vt0.c0 IN ()), TOTAL(TOTAL(rt1.c4)), (+ (rt1.c0)), COUNT(*), GROUP_CONCAT(AVG(COUNT(*)))))<>((rt1.c3, TOTAL(MAX(rt1.c3)), GROUP_CONCAT(vt0.c0), MIN(COUNT(MAX(SUM(vt0.c0)))), NULL, (- (-1351036193)), NULL))))) UNION ALL SELECT rt1.c4, rt1.c1, rt1.c2 FROM vt0, vt1, rt1 GROUP BY rt1.c4, rt1.c1, rt1.c2 HAVING (((((COUNT(*) COLLATE BINARY, vt0.c0, (vt0.c0 IN ()), TOTAL(TOTAL(rt1.c4)), (+ (rt1.c0)), COUNT(*), GROUP_CONCAT(AVG(COUNT(*)))))!=((rt1.c3, TOTAL(MAX(rt1.c3)), GROUP_CONCAT(vt0.c0), MIN(COUNT(MAX(SUM(vt0.c0)))), NULL, (- (-1351036193)), NULL)))) ISNULL);
SELECT ALL TOTAL((+ (((rt1.c2) IS TRUE)))) FROM vt0, rt1 ORDER BY (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c4 END IN ()) ASC;
SELECT ALL * FROM rt1, vt0, vt1;
SELECT * FROM rt1, vt0, vt1 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM rt1, vt0, vt1 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM rt1, vt0, vt1 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM rt1, vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (LIKELIHOOD(DISTINCT (((vt1.c0))!=((vt1.c0))), 0.6620228283097314)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (LIKELIHOOD(DISTINCT (((vt1.c0))<>((vt1.c0))), 0.6620228283097314)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((LIKELIHOOD(DISTINCT (((vt1.c0))<>((vt1.c0))), 0.6620228283097314)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE vt1.c0 COLLATE RTRIM  WHEN ((vt1.c0) ISNULL) THEN (+ (vt1.c0)) ELSE (((vt1.c0))<=((vt1.c0))) END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE vt1.c0 COLLATE RTRIM  WHEN ((vt1.c0) ISNULL) THEN (+ (vt1.c0)) ELSE (((vt1.c0))<=((vt1.c0))) END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE vt1.c0 COLLATE RTRIM  WHEN ((vt1.c0) ISNULL) THEN (+ (vt1.c0)) ELSE (((vt1.c0))<=((vt1.c0))) END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt1.c1, rt1.c4, rt1.c3, rt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c4, rt1.c3, rt1.c2, vt1.c0, rt1.c0;
SELECT ALL rt1.c1, rt1.c4, rt1.c3, rt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c4, rt1.c3, rt1.c2, vt1.c0, rt1.c0 HAVING x'' UNION ALL SELECT rt1.c1, rt1.c4, rt1.c3, rt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c4, rt1.c3, rt1.c2, vt1.c0, rt1.c0 HAVING (NOT (x'')) UNION ALL SELECT rt1.c1, rt1.c4, rt1.c3, rt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c4, rt1.c3, rt1.c2, vt1.c0, rt1.c0 HAVING ((x'') ISNULL);
SELECT ALL rt1.c1, rt1.c4, rt1.c3, rt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c4, rt1.c3, rt1.c2, vt1.c0, rt1.c0;
SELECT ALL rt1.c1, rt1.c4, rt1.c3, rt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c4, rt1.c3, rt1.c2, vt1.c0, rt1.c0 HAVING x'' UNION ALL SELECT rt1.c1, rt1.c4, rt1.c3, rt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c4, rt1.c3, rt1.c2, vt1.c0, rt1.c0 HAVING (NOT (x'')) UNION ALL SELECT rt1.c1, rt1.c4, rt1.c3, rt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c4, rt1.c3, rt1.c2, vt1.c0, rt1.c0 HAVING ((x'') ISNULL);
SELECT ALL rt1.c1, rt1.c4, rt1.c3, rt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c4, rt1.c3, rt1.c2, vt1.c0, rt1.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE ((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(((vt1.c0)OR(-28811963)))))OR(json_array_length(vt1.c0, vt1.c0)))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(((vt1.c0)OR(-28811963)))))OR(json_array_length(vt1.c0, vt1.c0)))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(((vt1.c0)OR(-28811963)))))OR(json_array_length(vt1.c0, vt1.c0)))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT rt1.c0, vt0.c0, rt1.c4 FROM rt1, vt0;
SELECT DISTINCT rt1.c0, vt0.c0, rt1.c4 FROM rt1, vt0 WHERE ((TYPEOF(rt1.c2) IN (rt1.c1 COLLATE BINARY))) UNION SELECT DISTINCT rt1.c0, vt0.c0, rt1.c4 FROM rt1, vt0 WHERE ((NOT ((TYPEOF(rt1.c2) IN (rt1.c1 COLLATE BINARY))))) UNION SELECT DISTINCT rt1.c0, vt0.c0, rt1.c4 FROM rt1, vt0 WHERE ((((TYPEOF(rt1.c2) IN (rt1.c1 COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt1.c0, vt0.c0, rt1.c4 FROM rt1, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ('1386467855') GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ('1386467855'))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((('1386467855') ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c4;
SELECT rt1.c0, rt1.c1, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c4 HAVING (((GROUP_CONCAT(AVG(rt1.c3)))*(SUM(rt1.c3))) IN (((MIN(COUNT(rt1.c1))) BETWEEN (COUNT(rt1.c3)) AND (rt1.c2)))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c4 HAVING (NOT ((((GROUP_CONCAT(AVG(rt1.c3)))*(SUM(rt1.c3))) IN (((MIN(COUNT(rt1.c1))) BETWEEN (COUNT(rt1.c3)) AND (rt1.c2)))))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c4 HAVING (((((GROUP_CONCAT(AVG(rt1.c3)))*(SUM(rt1.c3))) IN (((MIN(COUNT(rt1.c1))) BETWEEN (COUNT(rt1.c3)) AND (rt1.c2))))) ISNULL);
SELECT vt1.c0 FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt0, vt1 WHERE (((('e5')AND(vt0.c0)) IN ())) UNION ALL SELECT vt1.c0 FROM vt0, vt1 WHERE ((NOT (((('e5')AND(vt0.c0)) IN ())))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 WHERE (((((('e5')AND(vt0.c0)) IN ())) ISNULL));
SELECT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM rt1, vt0, vt1;
SELECT DISTINCT * FROM rt1 NOT INDEXED, vt0, vt1 WHERE (((CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c1 END)LIKE(((rt1.c3)+(rt1.c0))))) UNION SELECT DISTINCT * FROM rt1, vt0, vt1 WHERE ((NOT (((CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c1 END)LIKE(((rt1.c3)+(rt1.c0))))))) UNION SELECT DISTINCT * FROM rt1, vt0, vt1 WHERE (((((CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c1 END)LIKE(((rt1.c3)+(rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1, vt0, vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(((GROUP_CONCAT(COUNT(*))) IS TRUE)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(((GROUP_CONCAT(COUNT(*))) IS TRUE)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(((GROUP_CONCAT(COUNT(*))) IS TRUE))) ISNULL);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON TYPEOF(DISTINCT ((((NULL)AND('-1768689509')))OR(rt1.c2))) RIGHT OUTER JOIN rt1 ON ((((rt1.c0)OR(rt1.c4)))OR(rt1.c4)) COLLATE RTRIM;
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE (((((((((((rt1.c2)OR(rt1.c4)))OR(rt1.c3)))OR(vt1.c0)))OR(rt1.c0)))<=(rt1.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT (((((((((((rt1.c2)OR(rt1.c4)))OR(rt1.c3)))OR(vt1.c0)))OR(rt1.c0)))<=(rt1.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE (((((((((((((rt1.c2)OR(rt1.c4)))OR(rt1.c3)))OR(vt1.c0)))OR(rt1.c0)))<=(rt1.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT ALL rt1.c0, rt1.c2 FROM vt1, vt0, rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM vt1, vt0, rt1 WHERE (CASE WHEN ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c2)) THEN (((rt1.c3, rt1.c4, rt1.c3))=((rt1.c0, rt1.c2, rt1.c1))) ELSE rt1.c3 END) GROUP BY rt1.c0, rt1.c2 UNION SELECT rt1.c0, rt1.c2 FROM vt1, vt0, rt1 WHERE ((NOT (CASE WHEN ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c2)) THEN (((rt1.c3, rt1.c4, rt1.c3))==((rt1.c0, rt1.c2, rt1.c1))) ELSE rt1.c3 END))) GROUP BY rt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c2 FROM vt1, vt0, rt1 WHERE (((CASE WHEN ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c2)) THEN (((rt1.c3, rt1.c4, rt1.c3))=((rt1.c0, rt1.c2, rt1.c1))) ELSE rt1.c3 END) ISNULL)) GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM vt1, vt0, rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING TOTAL(vt0.c0 COLLATE RTRIM) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(vt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((TOTAL(vt0.c0 COLLATE RTRIM)) ISNULL);
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING TOTAL(vt0.c0 COLLATE RTRIM) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(vt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((TOTAL(vt0.c0 COLLATE RTRIM)) ISNULL);
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt0.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1, rt1.c4 FROM rt1, vt0, vt1;
SELECT ALL vt1.c0, vt0.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1, rt1.c4 FROM rt1, vt0, vt1 WHERE (((rt1.c2 IN (vt0.c0, vt0.c0)) IN ((rt1.c2 IN (rt1.c1)), CASE WHEN '*sQg' THEN rt1.c1 ELSE vt0.c0 END))) UNION ALL SELECT ALL vt1.c0, vt0.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1, rt1.c4 FROM rt1, vt0, vt1 WHERE ((NOT (((rt1.c2 IN (vt0.c0, vt0.c0)) IN ((rt1.c2 IN (rt1.c1)), CASE WHEN '*sQg' THEN rt1.c1 ELSE vt0.c0 END))))) UNION ALL SELECT ALL vt1.c0, vt0.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1, rt1.c4 FROM rt1, vt0, vt1 WHERE (((((rt1.c2 IN (vt0.c0, vt0.c0)) IN ((rt1.c2 IN (rt1.c1)), CASE WHEN '*sQg' THEN rt1.c1 ELSE vt0.c0 END))) ISNULL));
SELECT ALL vt1.c0, vt0.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1, rt1.c4 FROM rt1, vt0, vt1;
SELECT DISTINCT rt1.c4, rt1.c2, rt1.c0, vt1.c0, vt0.c0, rt1.c1, rt1.c3 FROM vt0, rt1, vt1;
SELECT DISTINCT rt1.c4, rt1.c2, rt1.c0, vt1.c0, vt0.c0, rt1.c1, rt1.c3 FROM vt0, rt1, vt1 WHERE (((((NULL)*(rt1.c3))) BETWEEN (((vt1.c0)IS NOT(rt1.c3))) AND (LTRIM(rt1.c1)))) UNION SELECT DISTINCT rt1.c4, rt1.c2, rt1.c0, vt1.c0, vt0.c0, rt1.c1, rt1.c3 FROM vt0, rt1, vt1 WHERE ((NOT (((((NULL)*(rt1.c3))) BETWEEN (((vt1.c0)IS NOT(rt1.c3))) AND (LTRIM(rt1.c1)))))) UNION SELECT DISTINCT rt1.c4, rt1.c2, rt1.c0, vt1.c0, vt0.c0, rt1.c1, rt1.c3 FROM vt0, rt1, vt1 WHERE (((((((NULL)*(rt1.c3))) BETWEEN (((vt1.c0)IS NOT(rt1.c3))) AND (LTRIM(rt1.c1)))) ISNULL));
SELECT DISTINCT rt1.c4, rt1.c2, rt1.c0, vt1.c0, vt0.c0, rt1.c1, rt1.c3 FROM vt0, rt1, vt1;
SELECT ALL rt1.c3, rt1.c2, rt1.c1, rt1.c4 FROM vt1, vt0, rt1 GROUP BY rt1.c3, rt1.c2, rt1.c1, rt1.c4;
SELECT rt1.c3, rt1.c2, rt1.c1, rt1.c4 FROM vt1, vt0, rt1 WHERE ((((((x''))<=((rt1.c2))))*(((rt1.c0)&(rt1.c3))))) GROUP BY rt1.c3, rt1.c2, rt1.c1, rt1.c4 UNION SELECT ALL rt1.c3, rt1.c2, rt1.c1, rt1.c4 FROM vt1, vt0, rt1 WHERE ((NOT ((((((x''))<=((rt1.c2))))*(((rt1.c0)&(rt1.c3))))))) GROUP BY rt1.c3, rt1.c2, rt1.c1, rt1.c4 UNION SELECT rt1.c3, rt1.c2, rt1.c1, rt1.c4 FROM vt1, vt0, rt1 WHERE ((((((((x''))<=((rt1.c2))))*(((rt1.c0)&(rt1.c3))))) ISNULL)) GROUP BY rt1.c3, rt1.c2, rt1.c1, rt1.c4;
SELECT ALL rt1.c3, rt1.c2, rt1.c1, rt1.c4 FROM vt1, vt0, rt1 GROUP BY rt1.c3, rt1.c2, rt1.c1, rt1.c4;
SELECT ALL rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c3;
SELECT ALL rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c3 HAVING ((((rt1.c3) NOT NULL)) ISNULL) UNION ALL SELECT ALL rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c3 HAVING (NOT (((((rt1.c3) NOT NULL)) ISNULL))) UNION ALL SELECT rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c3 HAVING ((((((rt1.c3) NOT NULL)) ISNULL)) ISNULL);
SELECT ALL rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c3;
SELECT ALL rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c3 HAVING ((((rt1.c3) NOT NULL)) ISNULL) UNION ALL SELECT ALL rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c3 HAVING (NOT (((((rt1.c3) NOT NULL)) ISNULL))) UNION ALL SELECT rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c3 HAVING ((((((rt1.c3) NOT NULL)) ISNULL)) ISNULL);
SELECT ALL rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c3;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CASE NULL  WHEN (((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN vt0.c0 END;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CASE NULL  WHEN (((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN vt0.c0 END WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0)OR(vt0.c0)))) AND ((LIKE(vt0.c0, vt1.c0))))) UNION ALL SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CASE NULL  WHEN (((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN vt0.c0 END WHERE ((NOT ((((vt1.c0)) BETWEEN ((((vt1.c0)OR(vt0.c0)))) AND ((LIKE(vt0.c0, vt1.c0))))))) UNION ALL SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON CASE NULL  WHEN (((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN vt0.c0 END WHERE ((((((vt1.c0)) BETWEEN ((((vt1.c0)OR(vt0.c0)))) AND ((LIKE(vt0.c0, vt1.c0))))) ISNULL));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CASE NULL  WHEN (((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN vt0.c0 END;
SELECT DISTINCT * FROM rt1, vt1, vt0;
SELECT DISTINCT * FROM rt1, vt1, vt0 WHERE (((((((((json_quote(rt1.c1))OR(CASE rt1.c1  WHEN rt1.c3 THEN vt1.c0 ELSE rt1.c4 END)))OR(((((vt1.c0)OR(rt1.c0)))OR(rt1.c0)))))AND((((0x22500f36))=((rt1.c0))))))OR(((vt0.c0) NOT BETWEEN (rt1.c0) AND ('O%'))))) UNION SELECT DISTINCT * FROM rt1, vt1, vt0 WHERE ((NOT (((((((((json_quote(rt1.c1))OR(CASE rt1.c1  WHEN rt1.c3 THEN vt1.c0 ELSE rt1.c4 END)))OR(((((vt1.c0)OR(rt1.c0)))OR(rt1.c0)))))AND((((0x22500f36))==((rt1.c0))))))OR(((vt0.c0) NOT BETWEEN (rt1.c0) AND ('O%'))))))) UNION SELECT DISTINCT * FROM rt1, vt1, vt0 WHERE (((((((((((json_quote(rt1.c1))OR(CASE rt1.c1  WHEN rt1.c3 THEN vt1.c0 ELSE rt1.c4 END)))OR(((((vt1.c0)OR(rt1.c0)))OR(rt1.c0)))))AND((((0X22500f36))==((rt1.c0))))))OR(((vt0.c0) NOT BETWEEN (rt1.c0) AND ('O%'))))) ISNULL));
SELECT DISTINCT * FROM rt1, vt1, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)/(vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND(x''))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0)/(vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND(x''))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)/(vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND(x''))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt1.c1, rt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c1, rt1.c0 HAVING MIN((+ (MAX(COUNT(*))))) UNION ALL SELECT rt1.c1, rt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (MIN((+ (MAX(COUNT(*))))))) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((MIN((+ (MAX(COUNT(*)))))) ISNULL);
SELECT SUM(rt1.c3) FROM rt1, vt0, vt1;
SELECT rt1.c0, rt1.c1, rt1.c4, rt1.c2 FROM rt1;
SELECT ALL rt1.c0, rt1.c1, rt1.c4, rt1.c2 FROM rt1 WHERE (((NULL)IS(CASE WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c2 END))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c4, rt1.c2 FROM rt1 WHERE ((NOT (((NULL)IS(CASE WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c2 END))))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c4, rt1.c2 FROM rt1 WHERE (((((NULL)IS(CASE WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c2 END))) ISNULL));
SELECT rt1.c0, rt1.c1, rt1.c4, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c4, vt0.c0, rt1.c3, rt1.c1, vt1.c0 FROM vt1, vt0, rt1;
SELECT DISTINCT rt1.c4, vt0.c0, rt1.c3, rt1.c1, vt1.c0 FROM vt1, vt0, rt1 WHERE (CASE WHEN CAST(rt1.c2 AS TEXT) THEN (~ (rt1.c2)) ELSE ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)) END) UNION SELECT DISTINCT rt1.c4, vt0.c0, rt1.c3, rt1.c1, vt1.c0 FROM vt1, vt0, rt1 WHERE ((NOT (CASE WHEN CAST(rt1.c2 AS TEXT) THEN (~ (rt1.c2)) ELSE ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)) END))) UNION SELECT DISTINCT rt1.c4, vt0.c0, rt1.c3, rt1.c1, vt1.c0 FROM vt1, vt0, rt1 WHERE (((CASE WHEN CAST(rt1.c2 AS TEXT) THEN (~ (rt1.c2)) ELSE ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)) END) ISNULL));
SELECT DISTINCT rt1.c4, vt0.c0, rt1.c3, rt1.c1, vt1.c0 FROM vt1, vt0, rt1;
SELECT rt1.c0, vt0.c0, vt1.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c1 FROM vt0, vt1, rt1 GROUP BY rt1.c0, vt0.c0, vt1.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, vt0.c0, vt1.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c1 FROM vt0, vt1, rt1 WHERE (((((rt1.c2)<>(rt1.c4))) NOT NULL)) GROUP BY rt1.c0, vt0.c0, vt1.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c1 UNION SELECT ALL rt1.c0, vt0.c0, vt1.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c1 FROM vt0, vt1, rt1 WHERE ((NOT (((((rt1.c2)!=(rt1.c4))) NOT NULL)))) GROUP BY rt1.c0, vt0.c0, vt1.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c1 UNION SELECT ALL rt1.c0, vt0.c0, vt1.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c1 FROM vt0, vt1, rt1 WHERE (((((((rt1.c2)!=(rt1.c4))) NOT NULL)) ISNULL)) GROUP BY rt1.c0, vt0.c0, vt1.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c1;
SELECT rt1.c0, vt0.c0, vt1.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c1 FROM vt0, vt1, rt1 GROUP BY rt1.c0, vt0.c0, vt1.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c1;
SELECT rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3;
SELECT ALL rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3 HAVING ((MIN(rt1.c3))AND((((COUNT(*)))>((MAX(rt1.c3)))))) UNION ALL SELECT rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3 HAVING (NOT (((MIN(rt1.c3))AND((((COUNT(*)))>((MAX(rt1.c3)))))))) UNION ALL SELECT rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3 HAVING ((((MIN(rt1.c3))AND((((COUNT(*)))>((MAX(rt1.c3))))))) ISNULL);
SELECT rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3;
SELECT ALL rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3 HAVING ((MIN(rt1.c3))AND((((COUNT(*)))>((MAX(rt1.c3)))))) UNION ALL SELECT rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3 HAVING (NOT (((MIN(rt1.c3))AND((((COUNT(*)))>((MAX(rt1.c3)))))))) UNION ALL SELECT rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3 HAVING ((((MIN(rt1.c3))AND((((COUNT(*)))>((MAX(rt1.c3))))))) ISNULL);
SELECT rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3;
SELECT ALL * FROM vt0, rt1;
SELECT * FROM vt0, rt1 WHERE (((((NULL)OR((- (rt1.c4)))))OR(((rt1.c4) NOTNULL)))) UNION ALL SELECT * FROM vt0, rt1 WHERE ((NOT (((((NULL)OR((- (rt1.c4)))))OR(((rt1.c4) NOTNULL)))))) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE (((((((NULL)OR((- (rt1.c4)))))OR(((rt1.c4) NOTNULL)))) ISNULL));
SELECT ALL * FROM vt0, rt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (CAST(rt1.c4 AS TEXT)))) GROUP BY rt1.c0, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT ((NOT (CAST(rt1.c4 AS TEXT)))))) GROUP BY rt1.c0, rt1.c1 UNION SELECT rt1.c0, rt1.c1 FROM rt1 WHERE ((((NOT (CAST(rt1.c4 AS TEXT)))) ISNULL)) GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c1, rt1.c4, rt1.c2, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c2, rt1.c3, rt1.c0;
SELECT rt1.c1, rt1.c4, rt1.c2, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c2, rt1.c3, rt1.c0 HAVING rt1.c0 UNION ALL SELECT rt1.c1, rt1.c4, rt1.c2, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c2, rt1.c3, rt1.c0 HAVING (NOT (rt1.c0)) UNION ALL SELECT ALL rt1.c1, rt1.c4, rt1.c2, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c2, rt1.c3, rt1.c0 HAVING ((rt1.c0) ISNULL);
SELECT rt1.c1, rt1.c4, rt1.c2, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c2, rt1.c3, rt1.c0;
SELECT rt1.c1, rt1.c4, rt1.c2, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c2, rt1.c3, rt1.c0 HAVING rt1.c0 UNION ALL SELECT rt1.c1, rt1.c4, rt1.c2, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c2, rt1.c3, rt1.c0 HAVING (NOT (rt1.c0)) UNION ALL SELECT ALL rt1.c1, rt1.c4, rt1.c2, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c2, rt1.c3, rt1.c0 HAVING ((rt1.c0) ISNULL);
SELECT rt1.c1, rt1.c4, rt1.c2, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c2, rt1.c3, rt1.c0;
SELECT rt1.c4 FROM vt0, vt1, rt1;
SELECT ALL rt1.c4 FROM vt0, vt1, rt1 WHERE (((((vt1.c0)OR(rt1.c2)))OR((((rt1.c1))>((vt1.c0)))))) UNION ALL SELECT ALL rt1.c4 FROM vt0, vt1, rt1 WHERE ((NOT (((((vt1.c0)OR(rt1.c2)))OR((((rt1.c1))>((vt1.c0)))))))) UNION ALL SELECT rt1.c4 FROM vt0, vt1, rt1 WHERE (((((((vt1.c0)OR(rt1.c2)))OR((((rt1.c1))>((vt1.c0)))))) ISNULL));
SELECT rt1.c4 FROM vt0, vt1, rt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.35078949316214403)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.35078949316214403)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.35078949316214403)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (json_quote(((vt1.c0)<(vt1.c0)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (json_quote(((vt1.c0)<(vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((json_quote(((vt1.c0)<(vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE AVG(MAX(SUM(vt1.c0)))  WHEN x'' THEN MIN(NULL) WHEN AVG(vt1.c0) THEN COUNT(*) WHEN vt1.c0 THEN vt1.c0 ELSE TOTAL(GROUP_CONCAT(COUNT(*))) END) IS TRUE) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((CASE AVG(MAX(SUM(vt1.c0)))  WHEN x'' THEN MIN(NULL) WHEN AVG(vt1.c0) THEN COUNT(*) WHEN vt1.c0 THEN vt1.c0 ELSE TOTAL(GROUP_CONCAT(COUNT(*))) END) IS TRUE))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((CASE AVG(MAX(SUM(vt1.c0)))  WHEN x'' THEN MIN(NULL) WHEN AVG(vt1.c0) THEN COUNT(*) WHEN vt1.c0 THEN vt1.c0 ELSE TOTAL(GROUP_CONCAT(COUNT(*))) END) IS TRUE)) ISNULL);
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE (((((((((((rt1.c4)AND(rt1.c3)))OR(rt1.c4)))OR(NULL)))AND('*sQg'))) BETWEEN (((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c4))) AND ((((rt1.c2))<=((NULL)))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((((((((((rt1.c4)AND(rt1.c3)))OR(rt1.c4)))OR(NULL)))AND('*sQg'))) BETWEEN (((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c4))) AND ((((rt1.c2))<=((NULL)))))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((((((((((rt1.c4)AND(rt1.c3)))OR(rt1.c4)))OR(NULL)))AND('*sQg'))) BETWEEN (((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c4))) AND ((((rt1.c2))<=((NULL)))))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((json_insert(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))<(CASE NULL  WHEN vt1.c0 THEN vt1.c0 END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((json_insert(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))<(CASE NULL  WHEN vt1.c0 THEN vt1.c0 END))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((json_insert(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))<(CASE NULL  WHEN vt1.c0 THEN vt1.c0 END))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (LTRIM(CAST(vt1.c0 AS TEXT))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (LTRIM(CAST(vt1.c0 AS TEXT))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 NOT INDEXED WHERE (((LTRIM(CAST(vt1.c0 AS TEXT))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(((vt0.c0) ISNULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(((vt0.c0) ISNULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(((vt0.c0) ISNULL))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(((vt0.c0) ISNULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(((vt0.c0) ISNULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(((vt0.c0) ISNULL))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE ((((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c1)) IN ())) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT ((((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c1)) IN ())))) UNION ALL SELECT ALL * FROM rt1 WHERE ((((((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c1)) IN ())) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)>>(((vt0.c0) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)>>(((vt0.c0) IS FALSE)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)>>(((vt0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 WHERE (CAST(((vt1.c0)%(vt0.c0)) AS INTEGER)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((NOT (CAST(((vt1.c0)%(vt0.c0)) AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE (((CAST(((vt1.c0)%(vt0.c0)) AS INTEGER)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TYPEOF(DISTINCT 0.8958331005550674) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TYPEOF(DISTINCT 0.8958331005550674))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TYPEOF(DISTINCT 0.8958331005550674)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TYPEOF(DISTINCT 0.8958331005550674) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TYPEOF(DISTINCT 0.8958331005550674))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TYPEOF(DISTINCT 0.8958331005550674)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL TOTAL(((((((((((rt1.c1)LIKE(vt0.c0)))OR(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c0 ELSE vt1.c0 END)))OR(((rt1.c3) ISNULL))))AND((~ (rt1.c2)))))OR((('365839629') IS TRUE)))) FROM vt1, vt0, rt1;
SELECT rt1.c3, rt1.c1, rt1.c2 FROM vt1, vt0 INNER JOIN rt1 ON ((vt1.c0)=(rt1.c0)) COLLATE NOCASE;
SELECT ALL rt1.c3, rt1.c1, rt1.c2 FROM vt1, vt0 INNER JOIN rt1 ON ((vt1.c0)=(rt1.c0)) COLLATE NOCASE WHERE ('-858736536') UNION ALL SELECT ALL rt1.c3, rt1.c1, rt1.c2 FROM vt1, vt0 INNER JOIN rt1 ON ((vt1.c0)=(rt1.c0)) COLLATE NOCASE WHERE ((NOT ('-858736536'))) UNION ALL SELECT ALL rt1.c3, rt1.c1, rt1.c2 FROM vt1, vt0 INNER JOIN rt1 ON ((vt1.c0)=(rt1.c0)) COLLATE NOCASE WHERE ((('-858736536') ISNULL));
SELECT rt1.c3, rt1.c1, rt1.c2 FROM vt1, vt0 INNER JOIN rt1 ON ((vt1.c0)=(rt1.c0)) COLLATE NOCASE;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt1 ON ((((((((((vt1.c0)-(rt1.c2)))OR(((rt1.c3)>(rt1.c0)))))OR(HEX(NULL))))AND((vt0.c0 IN ()))))OR(((rt1.c1)GLOB(rt1.c4)))) INNER JOIN vt1 ON CASE 0.08496712507363824  WHEN ((vt1.c0) IS FALSE) THEN ((rt1.c0)IS NOT(rt1.c3)) END;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt1 ON ((((((((((vt1.c0)-(rt1.c2)))OR(((rt1.c3)>(rt1.c0)))))OR(HEX(NULL))))AND((vt0.c0 IN ()))))OR(((rt1.c1)GLOB(rt1.c4)))) INNER JOIN vt1 ON CASE 0.08496712507363824  WHEN ((vt1.c0) IS FALSE) THEN ((rt1.c0)IS NOT(rt1.c3)) END WHERE (CAST(CAST(vt1.c0 AS REAL) AS TEXT)) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt1 ON ((((((((((vt1.c0)-(rt1.c2)))OR(((rt1.c3)>(rt1.c0)))))OR(HEX(NULL))))AND((vt0.c0 IN ()))))OR(((rt1.c1)GLOB(rt1.c4)))) INNER JOIN vt1 ON CASE 0.08496712507363824  WHEN ((vt1.c0) IS FALSE) THEN ((rt1.c0)IS NOT(rt1.c3)) END WHERE ((NOT (CAST(CAST(vt1.c0 AS REAL) AS TEXT)))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt1 ON ((((((((((vt1.c0)-(rt1.c2)))OR(((rt1.c3)>(rt1.c0)))))OR(HEX(NULL))))AND((vt0.c0 IN ()))))OR(((rt1.c1)GLOB(rt1.c4)))) INNER JOIN vt1 ON CASE 0.08496712507363824  WHEN ((vt1.c0) IS FALSE) THEN ((rt1.c0)IS NOT(rt1.c3)) END WHERE (((CAST(CAST(vt1.c0 AS REAL) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt1 ON ((((((((((vt1.c0)-(rt1.c2)))OR(((rt1.c3)>(rt1.c0)))))OR(HEX(NULL))))AND((vt0.c0 IN ()))))OR(((rt1.c1)GLOB(rt1.c4)))) INNER JOIN vt1 ON CASE 0.08496712507363824  WHEN ((vt1.c0) IS FALSE) THEN ((rt1.c0)IS NOT(rt1.c3)) END;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (((vt0.c0) IS TRUE)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (((vt0.c0) IS TRUE)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (((vt0.c0) IS TRUE)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c3, vt0.c0, rt1.c2, rt1.c0, rt1.c4 FROM vt1, rt1, vt0 GROUP BY rt1.c3, vt0.c0, rt1.c2, rt1.c0, rt1.c4;
SELECT rt1.c3, vt0.c0, rt1.c2, rt1.c0, rt1.c4 FROM vt1, rt1, vt0 GROUP BY rt1.c3, vt0.c0, rt1.c2, rt1.c0, rt1.c4 HAVING AVG(vt0.c0 COLLATE NOCASE) UNION ALL SELECT rt1.c3, vt0.c0, rt1.c2, rt1.c0, rt1.c4 FROM vt1, rt1, vt0 GROUP BY rt1.c3, vt0.c0, rt1.c2, rt1.c0, rt1.c4 HAVING (NOT (AVG(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL rt1.c3, vt0.c0, rt1.c2, rt1.c0, rt1.c4 FROM vt1, rt1, vt0 GROUP BY rt1.c3, vt0.c0, rt1.c2, rt1.c0, rt1.c4 HAVING ((AVG(vt0.c0 COLLATE NOCASE)) ISNULL);
SELECT rt1.c3, vt0.c0, rt1.c2, rt1.c0, rt1.c4 FROM vt1, rt1, vt0 GROUP BY rt1.c3, vt0.c0, rt1.c2, rt1.c0, rt1.c4;
SELECT rt1.c3, vt0.c0, rt1.c2, rt1.c0, rt1.c4 FROM vt1, rt1, vt0 GROUP BY rt1.c3, vt0.c0, rt1.c2, rt1.c0, rt1.c4 HAVING AVG(vt0.c0 COLLATE NOCASE) UNION ALL SELECT rt1.c3, vt0.c0, rt1.c2, rt1.c0, rt1.c4 FROM vt1, rt1, vt0 GROUP BY rt1.c3, vt0.c0, rt1.c2, rt1.c0, rt1.c4 HAVING (NOT (AVG(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL rt1.c3, vt0.c0, rt1.c2, rt1.c0, rt1.c4 FROM vt1, rt1, vt0 GROUP BY rt1.c3, vt0.c0, rt1.c2, rt1.c0, rt1.c4 HAVING ((AVG(vt0.c0 COLLATE NOCASE)) ISNULL);
SELECT rt1.c3, vt0.c0, rt1.c2, rt1.c0, rt1.c4 FROM vt1, rt1, vt0 GROUP BY rt1.c3, vt0.c0, rt1.c2, rt1.c0, rt1.c4;
SELECT MAX(((('g휑''hA*', vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (~ (vt1.c0)), (('241244283') BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((vt1.c0 COLLATE NOCASE, '1441381651' COLLATE NOCASE, LIKELIHOOD(vt1.c0, 0.5591841363435344))))) FROM vt1;
SELECT ALL rt1.c4, rt1.c2, rt1.c3, rt1.c0, rt1.c1 FROM rt1;
SELECT ALL rt1.c4, rt1.c2, rt1.c3, rt1.c0, rt1.c1 FROM rt1 WHERE (CAST(LIKELIHOOD(DISTINCT rt1.c4, 0.7819870794827504) AS INTEGER)) UNION ALL SELECT rt1.c4, rt1.c2, rt1.c3, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (CAST(LIKELIHOOD(DISTINCT rt1.c4, 0.7819870794827504) AS INTEGER)))) UNION ALL SELECT rt1.c4, rt1.c2, rt1.c3, rt1.c0, rt1.c1 FROM rt1 WHERE (((CAST(LIKELIHOOD(DISTINCT rt1.c4, 0.7819870794827504) AS INTEGER)) ISNULL));
SELECT ALL rt1.c4, rt1.c2, rt1.c3, rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c2 FROM rt1, vt1;
SELECT DISTINCT rt1.c2 FROM rt1, vt1 WHERE (((rt1.c3)AND(rt1.c0)) COLLATE BINARY) UNION SELECT DISTINCT rt1.c2 FROM rt1, vt1 WHERE ((NOT (((rt1.c3)AND(rt1.c0)) COLLATE BINARY))) UNION SELECT DISTINCT rt1.c2 FROM rt1, vt1 WHERE (((((rt1.c3)AND(rt1.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt1.c2 FROM rt1, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) IS TRUE), (0x615bdd3d IN ()), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (((((((('kN')AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), vt1.c0 COLLATE NOCASE)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) IS TRUE), (0x615bdd3d IN ()), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (((((((('kN')AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), vt1.c0 COLLATE NOCASE)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) IS TRUE), (0X615bdd3d IN ()), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (((((((('kN')AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), vt1.c0 COLLATE NOCASE)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN MIN(TOTAL(MIN(vt1.c0))) ELSE vt1.c0 END) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN MIN(TOTAL(MIN(vt1.c0))) ELSE vt1.c0 END))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN MIN(TOTAL(MIN(vt1.c0))) ELSE vt1.c0 END)) ISNULL);
SELECT vt1.c0, rt1.c1, rt1.c0, rt1.c2 FROM vt1, rt1;
SELECT ALL vt1.c0, rt1.c1, rt1.c0, rt1.c2 FROM vt1, rt1 WHERE (rt1.c3) UNION ALL SELECT vt1.c0, rt1.c1, rt1.c0, rt1.c2 FROM vt1, rt1 WHERE ((NOT (rt1.c3))) UNION ALL SELECT vt1.c0, rt1.c1, rt1.c0, rt1.c2 FROM vt1, rt1 WHERE (((rt1.c3) ISNULL));
SELECT vt1.c0, rt1.c1, rt1.c0, rt1.c2 FROM vt1, rt1;
SELECT DISTINCT vt1.c0, rt1.c1, rt1.c4, rt1.c3, rt1.c0, rt1.c2 FROM vt1, rt1;
SELECT DISTINCT vt1.c0, rt1.c1, rt1.c4, rt1.c3, rt1.c0, rt1.c2 FROM vt1, rt1 WHERE ((('1001170678' IN (rt1.c0)) IN ())) UNION SELECT DISTINCT vt1.c0, rt1.c1, rt1.c4, rt1.c3, rt1.c0, rt1.c2 FROM vt1, rt1 WHERE ((NOT ((('1001170678' IN (rt1.c0)) IN ())))) UNION SELECT DISTINCT vt1.c0, rt1.c1, rt1.c4, rt1.c3, rt1.c0, rt1.c2 FROM vt1, rt1 WHERE ((((('1001170678' IN (rt1.c0)) IN ())) ISNULL));
SELECT DISTINCT vt1.c0, rt1.c1, rt1.c4, rt1.c3, rt1.c0, rt1.c2 FROM vt1, rt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE NOCASE) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 IN (vt0.c0)) COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((UNLIKELY(DISTINCT vt0.c0)))) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((UNLIKELY(DISTINCT vt0.c0)))) GROUP BY vt0.c0, vt1.c0 HAVING ((((SUM(MIN(COUNT(vt1.c0))))AND((((vt1.c0))>=((GROUP_CONCAT(COUNT(*))))))))AND(CAST(vt0.c0 AS NUMERIC))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((UNLIKELY(DISTINCT vt0.c0)))) GROUP BY vt0.c0, vt1.c0 HAVING (NOT (((((SUM(MIN(COUNT(vt1.c0))))AND((((vt1.c0))>=((GROUP_CONCAT(COUNT(*))))))))AND(CAST(vt0.c0 AS NUMERIC))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((UNLIKELY(DISTINCT vt0.c0)))) GROUP BY vt0.c0, vt1.c0 HAVING ((((((SUM(MIN(COUNT(vt1.c0))))AND((((vt1.c0))>=((GROUP_CONCAT(COUNT(*))))))))AND(CAST(vt0.c0 AS NUMERIC)))) ISNULL);
SELECT ALL rt1.c2, rt1.c4, rt1.c0, vt0.c0 FROM rt1, vt0;
SELECT rt1.c2, rt1.c4, rt1.c0, vt0.c0 FROM rt1, vt0 WHERE (((rt1.c2)=(rt1.c2)) COLLATE NOCASE) UNION ALL SELECT rt1.c2, rt1.c4, rt1.c0, vt0.c0 FROM rt1, vt0 WHERE ((NOT (((rt1.c2)==(rt1.c2)) COLLATE NOCASE))) UNION ALL SELECT ALL rt1.c2, rt1.c4, rt1.c0, vt0.c0 FROM rt1, vt0 WHERE (((((rt1.c2)==(rt1.c2)) COLLATE NOCASE) ISNULL));
SELECT ALL rt1.c2, rt1.c4, rt1.c0, vt0.c0 FROM rt1, vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt1.c0 IN ('', vt1.c0))))<((((vt0.c0)/(vt1.c0)))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((((vt1.c0 IN ('', vt1.c0))))<((((vt0.c0)/(vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((vt1.c0 IN ('', vt1.c0))))<((((vt0.c0)/(vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT rt1.c4, vt1.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c4, vt1.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2;
SELECT rt1.c4, vt1.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2 FROM rt1, vt1 WHERE (CAST(((rt1.c3) BETWEEN (vt1.c0) AND (rt1.c1)) AS BLOB)) GROUP BY rt1.c4, vt1.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2 UNION SELECT rt1.c4, vt1.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2 FROM rt1, vt1 WHERE ((NOT (CAST(((rt1.c3) BETWEEN (vt1.c0) AND (rt1.c1)) AS BLOB)))) GROUP BY rt1.c4, vt1.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2 UNION SELECT ALL rt1.c4, vt1.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2 FROM rt1, vt1 WHERE (((CAST(((rt1.c3) BETWEEN (vt1.c0) AND (rt1.c1)) AS BLOB)) ISNULL)) GROUP BY rt1.c4, vt1.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2;
SELECT rt1.c4, vt1.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c4, vt1.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOTNULL))%(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOTNULL))%(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOTNULL))%(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT rt1.c3, rt1.c1, vt0.c0, rt1.c4, rt1.c0, rt1.c2, vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST(CAST(rt1.c2 AS BLOB) AS REAL) FULL OUTER JOIN rt1 ON rt1.c3;
SELECT ALL rt1.c4 FROM rt1 GROUP BY rt1.c4;
SELECT rt1.c4 FROM rt1 WHERE ((((((((((('-0.0') BETWEEN (rt1.c3) AND (rt1.c0)))OR((((rt1.c3, rt1.c2, rt1.c4, rt1.c4, x'')) BETWEEN ((rt1.c1, rt1.c3, rt1.c2, rt1.c4, rt1.c4)) AND ((rt1.c2, rt1.c2, rt1.c1, rt1.c3, rt1.c4))))))AND(((rt1.c4) NOTNULL))))AND(rt1.c1 COLLATE NOCASE)))OR(load_extension(rt1.c4, rt1.c4)))) GROUP BY rt1.c4 UNION SELECT ALL rt1.c4 FROM rt1 WHERE ((NOT ((((((((((('-0.0') BETWEEN (rt1.c3) AND (rt1.c0)))OR((((rt1.c3, rt1.c2, rt1.c4, rt1.c4, x'')) BETWEEN ((rt1.c1, rt1.c3, rt1.c2, rt1.c4, rt1.c4)) AND ((rt1.c2, rt1.c2, rt1.c1, rt1.c3, rt1.c4))))))AND(((rt1.c4) NOTNULL))))AND(rt1.c1 COLLATE NOCASE)))OR(load_extension(rt1.c4, rt1.c4)))))) GROUP BY rt1.c4 UNION SELECT rt1.c4 FROM rt1 WHERE ((((((((((((('-0.0') BETWEEN (rt1.c3) AND (rt1.c0)))OR((((rt1.c3, rt1.c2, rt1.c4, rt1.c4, x'')) BETWEEN ((rt1.c1, rt1.c3, rt1.c2, rt1.c4, rt1.c4)) AND ((rt1.c2, rt1.c2, rt1.c1, rt1.c3, rt1.c4))))))AND(((rt1.c4) NOTNULL))))AND(rt1.c1 COLLATE NOCASE)))OR(load_extension(rt1.c4, rt1.c4)))) ISNULL)) GROUP BY rt1.c4;
SELECT ALL rt1.c2, rt1.c3, rt1.c1, rt1.c4, vt1.c0 FROM rt1 INNER JOIN vt1 ON CAST(((rt1.c4) IS TRUE) AS BLOB) GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c4, vt1.c0;
SELECT ALL rt1.c2, rt1.c3, rt1.c1, rt1.c4, vt1.c0 FROM rt1 INNER JOIN vt1 ON CAST(((rt1.c4) IS TRUE) AS BLOB) GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c4, vt1.c0 HAVING (~ (MAX(rt1.c3))) UNION ALL SELECT ALL rt1.c2, rt1.c3, rt1.c1, rt1.c4, vt1.c0 FROM rt1 INNER JOIN vt1 ON CAST(((rt1.c4) IS TRUE) AS BLOB) GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c4, vt1.c0 HAVING (NOT ((~ (MAX(rt1.c3))))) UNION ALL SELECT rt1.c2, rt1.c3, rt1.c1, rt1.c4, vt1.c0 FROM rt1 INNER JOIN vt1 ON CAST(((rt1.c4) IS TRUE) AS BLOB) GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c4, vt1.c0 HAVING (((~ (MAX(rt1.c3)))) ISNULL);
SELECT ALL rt1.c2, rt1.c3, rt1.c1, rt1.c4, vt1.c0 FROM rt1 INNER JOIN vt1 ON CAST(((rt1.c4) IS TRUE) AS BLOB) GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c4, vt1.c0;
SELECT ALL rt1.c2, rt1.c3, rt1.c1, rt1.c4, vt1.c0 FROM rt1 INNER JOIN vt1 ON CAST(((rt1.c4) IS TRUE) AS BLOB) GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c4, vt1.c0 HAVING (~ (MAX(rt1.c3))) UNION ALL SELECT ALL rt1.c2, rt1.c3, rt1.c1, rt1.c4, vt1.c0 FROM rt1 INNER JOIN vt1 ON CAST(((rt1.c4) IS TRUE) AS BLOB) GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c4, vt1.c0 HAVING (NOT ((~ (MAX(rt1.c3))))) UNION ALL SELECT rt1.c2, rt1.c3, rt1.c1, rt1.c4, vt1.c0 FROM rt1 INNER JOIN vt1 ON CAST(((rt1.c4) IS TRUE) AS BLOB) GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c4, vt1.c0 HAVING (((~ (MAX(rt1.c3)))) ISNULL);
SELECT ALL rt1.c2, rt1.c3, rt1.c1, rt1.c4, vt1.c0 FROM rt1 INNER JOIN vt1 ON CAST(((rt1.c4) IS TRUE) AS BLOB) GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c4, vt1.c0;
SELECT * FROM rt1, vt1, vt0;
SELECT * FROM rt1, vt1, vt0 WHERE (((LAST_INSERT_ROWID())<<(vt1.c0 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt1, vt1, vt0 WHERE ((NOT (((LAST_INSERT_ROWID())<<(vt1.c0 COLLATE RTRIM))))) UNION ALL SELECT * FROM rt1, vt1, vt0 WHERE (((((LAST_INSERT_ROWID())<<(vt1.c0 COLLATE RTRIM))) ISNULL));
SELECT * FROM rt1, vt1, vt0;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c4, rt1.c3, rt1.c0, vt0.c0 FROM rt1, vt0;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c4, rt1.c3, rt1.c0, vt0.c0 FROM rt1, vt0 WHERE (rt1.c3) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c4, rt1.c3, rt1.c0, vt0.c0 FROM rt1, vt0 WHERE ((NOT (rt1.c3))) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c4, rt1.c3, rt1.c0, vt0.c0 FROM rt1, vt0 WHERE (((rt1.c3) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c4, rt1.c3, rt1.c0, vt0.c0 FROM rt1, vt0;
SELECT ALL rt1.c3, rt1.c1, rt1.c2, rt1.c4, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c3, rt1.c1, rt1.c2, rt1.c4, vt0.c0;
SELECT rt1.c3, rt1.c1, rt1.c2, rt1.c4, vt0.c0 FROM vt0, rt1 WHERE ('HҭXR|ꖊ[{') GROUP BY rt1.c3, rt1.c1, rt1.c2, rt1.c4, vt0.c0 UNION SELECT rt1.c3, rt1.c1, rt1.c2, rt1.c4, vt0.c0 FROM vt0, rt1 WHERE ((NOT ('HҭXR|ꖊ[{'))) GROUP BY rt1.c3, rt1.c1, rt1.c2, rt1.c4, vt0.c0 UNION SELECT ALL rt1.c3, rt1.c1, rt1.c2, rt1.c4, vt0.c0 FROM vt0, rt1 WHERE ((('HҭXR|ꖊ[{') ISNULL)) GROUP BY rt1.c3, rt1.c1, rt1.c2, rt1.c4, vt0.c0;
SELECT ALL rt1.c3, rt1.c1, rt1.c2, rt1.c4, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c3, rt1.c1, rt1.c2, rt1.c4, vt0.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0, rt1.c4, rt1.c3, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c2, rt1.c0, rt1.c4, rt1.c3, vt0.c0;
SELECT rt1.c1, rt1.c2, rt1.c0, rt1.c4, rt1.c3, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c2, rt1.c0, rt1.c4, rt1.c3, vt0.c0 HAVING COUNT(rt1.c4) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0, rt1.c4, rt1.c3, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c2, rt1.c0, rt1.c4, rt1.c3, vt0.c0 HAVING (NOT (COUNT(rt1.c4))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0, rt1.c4, rt1.c3, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c2, rt1.c0, rt1.c4, rt1.c3, vt0.c0 HAVING ((COUNT(rt1.c4)) ISNULL);
SELECT ALL rt1.c1, rt1.c2, rt1.c0, rt1.c4, rt1.c3, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c2, rt1.c0, rt1.c4, rt1.c3, vt0.c0;
SELECT rt1.c1, rt1.c2, rt1.c0, rt1.c4, rt1.c3, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c2, rt1.c0, rt1.c4, rt1.c3, vt0.c0 HAVING COUNT(rt1.c4) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0, rt1.c4, rt1.c3, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c2, rt1.c0, rt1.c4, rt1.c3, vt0.c0 HAVING (NOT (COUNT(rt1.c4))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0, rt1.c4, rt1.c3, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c2, rt1.c0, rt1.c4, rt1.c3, vt0.c0 HAVING ((COUNT(rt1.c4)) ISNULL);
SELECT ALL rt1.c1, rt1.c2, rt1.c0, rt1.c4, rt1.c3, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c1, rt1.c2, rt1.c0, rt1.c4, rt1.c3, vt0.c0;
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE ((((((rt1.c2)|(rt1.c3))))>=((((rt1.c0) IS FALSE))))) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((((((rt1.c2)|(rt1.c3))))>=((((rt1.c0) IS FALSE))))))) UNION ALL SELECT * FROM rt1 WHERE ((((((((rt1.c2)|(rt1.c3))))>=((((rt1.c0) IS FALSE))))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)-(vt0.c0))) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) AND (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)-(vt0.c0))) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) AND (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)-(vt0.c0))) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) AND (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt1.c4, rt1.c3, rt1.c2, rt1.c1, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c4, rt1.c3, rt1.c2, rt1.c1, vt0.c0;
SELECT ALL rt1.c4, rt1.c3, rt1.c2, rt1.c1, vt0.c0 FROM rt1, vt0 WHERE (rt1.c0) GROUP BY rt1.c4, rt1.c3, rt1.c2, rt1.c1, vt0.c0 UNION SELECT ALL rt1.c4, rt1.c3, rt1.c2, rt1.c1, vt0.c0 FROM rt1, vt0 WHERE ((NOT (rt1.c0))) GROUP BY rt1.c4, rt1.c3, rt1.c2, rt1.c1, vt0.c0 UNION SELECT rt1.c4, rt1.c3, rt1.c2, rt1.c1, vt0.c0 FROM rt1, vt0 WHERE (((rt1.c0) ISNULL)) GROUP BY rt1.c4, rt1.c3, rt1.c2, rt1.c1, vt0.c0;
SELECT ALL rt1.c4, rt1.c3, rt1.c2, rt1.c1, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c4, rt1.c3, rt1.c2, rt1.c1, vt0.c0;
SELECT rt1.c3, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c4;
SELECT rt1.c3, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c4 HAVING (((('h,h(sSms') ISNULL))OR(MAX(rt1.c4))) UNION ALL SELECT ALL rt1.c3, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c4 HAVING (NOT ((((('h,h(sSms') ISNULL))OR(MAX(rt1.c4))))) UNION ALL SELECT ALL rt1.c3, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c4 HAVING (((((('h,h(sSms') ISNULL))OR(MAX(rt1.c4)))) ISNULL);
SELECT rt1.c3, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c4;
SELECT rt1.c3, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c4 HAVING (((('h,h(sSms') ISNULL))OR(MAX(rt1.c4))) UNION ALL SELECT ALL rt1.c3, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c4 HAVING (NOT ((((('h,h(sSms') ISNULL))OR(MAX(rt1.c4))))) UNION ALL SELECT ALL rt1.c3, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c4 HAVING (((((('h,h(sSms') ISNULL))OR(MAX(rt1.c4)))) ISNULL);
SELECT rt1.c3, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c4;
SELECT ALL SUM(((((vt0.c0)=(vt0.c0)))<(NULL COLLATE NOCASE))) FROM vt0 ORDER BY (((vt0.c0 IN ('119435769'))) IS TRUE)  NULLS FIRST;
SELECT rt1.c1, rt1.c4 FROM vt0 INNER JOIN rt1 ON x'';
SELECT rt1.c1, rt1.c4 FROM vt0 INNER JOIN rt1 ON x'' WHERE ('-724731991') UNION ALL SELECT rt1.c1, rt1.c4 FROM vt0 INNER JOIN rt1 ON x'' WHERE ((NOT ('-724731991'))) UNION ALL SELECT ALL rt1.c1, rt1.c4 FROM vt0 INNER JOIN rt1 ON x'' WHERE ((('-724731991') ISNULL));
SELECT rt1.c1, rt1.c4 FROM vt0 INNER JOIN rt1 ON x'';
SELECT DISTINCT vt1.c0, rt1.c2, rt1.c0, rt1.c1 FROM vt1, rt1;
SELECT DISTINCT vt1.c0, rt1.c2, rt1.c0, rt1.c1 FROM vt1, rt1 WHERE (LIKELY(((((((((((((rt1.c0)OR(rt1.c1)))AND(vt1.c0)))OR(rt1.c4)))AND(rt1.c1)))OR(rt1.c4)))OR(rt1.c3)))) UNION SELECT DISTINCT vt1.c0, rt1.c2, rt1.c0, rt1.c1 FROM vt1, rt1 WHERE ((NOT (LIKELY(((((((((((((rt1.c0)OR(rt1.c1)))AND(vt1.c0)))OR(rt1.c4)))AND(rt1.c1)))OR(rt1.c4)))OR(rt1.c3)))))) UNION SELECT DISTINCT vt1.c0, rt1.c2, rt1.c0, rt1.c1 FROM vt1, rt1 WHERE (((LIKELY(((((((((((((rt1.c0)OR(rt1.c1)))AND(vt1.c0)))OR(rt1.c4)))AND(rt1.c1)))OR(rt1.c4)))OR(rt1.c3)))) ISNULL));
SELECT DISTINCT vt1.c0, rt1.c2, rt1.c0, rt1.c1 FROM vt1, rt1;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((vt0.c0))==((vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE ((NOT ((NOT ((((vt0.c0))==((vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((((NOT ((((vt0.c0))==((vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c3 FROM rt1, vt1, vt0 GROUP BY rt1.c1, rt1.c2, rt1.c3;
SELECT ALL rt1.c1, rt1.c2, rt1.c3 FROM rt1, vt1, vt0 GROUP BY rt1.c1, rt1.c2, rt1.c3 HAVING ((((vt1.c0)) NOT BETWEEN ((SUM(GROUP_CONCAT(GROUP_CONCAT(rt1.c2))))) AND ((rt1.c2))) IN ()) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c3 FROM rt1, vt1, vt0 GROUP BY rt1.c1, rt1.c2, rt1.c3 HAVING (NOT (((((vt1.c0)) NOT BETWEEN ((SUM(GROUP_CONCAT(GROUP_CONCAT(rt1.c2))))) AND ((rt1.c2))) IN ()))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c3 FROM rt1, vt1, vt0 GROUP BY rt1.c1, rt1.c2, rt1.c3 HAVING ((((((vt1.c0)) NOT BETWEEN ((SUM(GROUP_CONCAT(GROUP_CONCAT(rt1.c2))))) AND ((rt1.c2))) IN ())) ISNULL);
SELECT rt1.c1, rt1.c2, rt1.c3 FROM rt1, vt1, vt0 GROUP BY rt1.c1, rt1.c2, rt1.c3;
SELECT ALL rt1.c1, rt1.c2, rt1.c3 FROM rt1, vt1, vt0 GROUP BY rt1.c1, rt1.c2, rt1.c3 HAVING ((((vt1.c0)) NOT BETWEEN ((SUM(GROUP_CONCAT(GROUP_CONCAT(rt1.c2))))) AND ((rt1.c2))) IN ()) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c3 FROM rt1, vt1, vt0 GROUP BY rt1.c1, rt1.c2, rt1.c3 HAVING (NOT (((((vt1.c0)) NOT BETWEEN ((SUM(GROUP_CONCAT(GROUP_CONCAT(rt1.c2))))) AND ((rt1.c2))) IN ()))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c3 FROM rt1, vt1, vt0 GROUP BY rt1.c1, rt1.c2, rt1.c3 HAVING ((((((vt1.c0)) NOT BETWEEN ((SUM(GROUP_CONCAT(GROUP_CONCAT(rt1.c2))))) AND ((rt1.c2))) IN ())) ISNULL);
SELECT rt1.c1, rt1.c2, rt1.c3 FROM rt1, vt1, vt0 GROUP BY rt1.c1, rt1.c2, rt1.c3;
SELECT rt1.c1 FROM rt1;
SELECT ALL rt1.c1 FROM rt1 WHERE (UNLIKELY(rt1.c1 COLLATE NOCASE)) UNION ALL SELECT ALL rt1.c1 FROM rt1 WHERE ((NOT (UNLIKELY(rt1.c1 COLLATE NOCASE)))) UNION ALL SELECT rt1.c1 FROM rt1 WHERE (((UNLIKELY(rt1.c1 COLLATE NOCASE)) ISNULL));
SELECT rt1.c1 FROM rt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>((vt0.c0 IN ())))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>((vt0.c0 IN ())))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT rt1.c0 FROM rt1, vt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1, vt1 WHERE (0.7841857592533964) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1, vt1 WHERE ((NOT (0.7841857592533964))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1, vt1 WHERE (((0.7841857592533964) ISNULL)) GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1, vt1 GROUP BY rt1.c0;
SELECT ALL rt1.c2, vt1.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c1, rt1.c4 FROM rt1, vt1, vt0 GROUP BY rt1.c2, vt1.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c1, rt1.c4;
SELECT ALL rt1.c2, vt1.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c1, rt1.c4 FROM rt1, vt1, vt0 GROUP BY rt1.c2, vt1.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c1, rt1.c4 HAVING 'A''V8hmꦥT_' UNION ALL SELECT rt1.c2, vt1.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c1, rt1.c4 FROM rt1, vt1, vt0 GROUP BY rt1.c2, vt1.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c1, rt1.c4 HAVING (NOT ('A''V8hmꦥT_')) UNION ALL SELECT ALL rt1.c2, vt1.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c1, rt1.c4 FROM rt1, vt1, vt0 GROUP BY rt1.c2, vt1.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c1, rt1.c4 HAVING (('A''V8hmꦥT_') ISNULL);
SELECT ALL rt1.c2, vt1.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c1, rt1.c4 FROM rt1, vt1, vt0 GROUP BY rt1.c2, vt1.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c1, rt1.c4;
SELECT ALL rt1.c2, vt1.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c1, rt1.c4 FROM rt1, vt1, vt0 GROUP BY rt1.c2, vt1.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c1, rt1.c4 HAVING 'A''V8hmꦥT_' UNION ALL SELECT rt1.c2, vt1.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c1, rt1.c4 FROM rt1, vt1, vt0 GROUP BY rt1.c2, vt1.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c1, rt1.c4 HAVING (NOT ('A''V8hmꦥT_')) UNION ALL SELECT ALL rt1.c2, vt1.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c1, rt1.c4 FROM rt1, vt1, vt0 GROUP BY rt1.c2, vt1.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c1, rt1.c4 HAVING (('A''V8hmꦥT_') ISNULL);
SELECT ALL rt1.c2, vt1.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c1, rt1.c4 FROM rt1, vt1, vt0 GROUP BY rt1.c2, vt1.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c1, rt1.c4;
SELECT * FROM vt1, vt0, rt1 NOT INDEXED;
SELECT * FROM vt1, vt0, rt1 WHERE ((NOT (((rt1.c4) IS FALSE)))) UNION ALL SELECT ALL * FROM vt1, vt0, rt1 WHERE ((NOT ((NOT (((rt1.c4) IS FALSE)))))) UNION ALL SELECT * FROM vt1, vt0, rt1 WHERE ((((NOT (((rt1.c4) IS FALSE)))) ISNULL));
SELECT * FROM vt1, vt0, rt1 NOT INDEXED;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) BETWEEN (vt0.c0 COLLATE NOCASE) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS REAL)) BETWEEN (vt0.c0 COLLATE NOCASE) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL)) BETWEEN (vt0.c0 COLLATE NOCASE) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt1.c2, vt0.c0, rt1.c4, rt1.c0, vt1.c0 FROM vt1, vt0, rt1 GROUP BY rt1.c2, vt0.c0, rt1.c4, rt1.c0, vt1.c0;
SELECT ALL rt1.c2, vt0.c0, rt1.c4, rt1.c0, vt1.c0 FROM vt1, vt0, rt1 WHERE (((rt1.c1) NOTNULL)) GROUP BY rt1.c2, vt0.c0, rt1.c4, rt1.c0, vt1.c0 UNION SELECT rt1.c2, vt0.c0, rt1.c4, rt1.c0, vt1.c0 FROM vt1, vt0, rt1 WHERE ((NOT (((rt1.c1) NOTNULL)))) GROUP BY rt1.c2, vt0.c0, rt1.c4, rt1.c0, vt1.c0 UNION SELECT ALL rt1.c2, vt0.c0, rt1.c4, rt1.c0, vt1.c0 FROM vt1, vt0, rt1 WHERE (((((rt1.c1) NOTNULL)) ISNULL)) GROUP BY rt1.c2, vt0.c0, rt1.c4, rt1.c0, vt1.c0;
SELECT rt1.c2, vt0.c0, rt1.c4, rt1.c0, vt1.c0 FROM vt1, vt0, rt1 GROUP BY rt1.c2, vt0.c0, rt1.c4, rt1.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((GROUP_CONCAT(COUNT(*))) BETWEEN (SUM(vt1.c0)) AND (SUM(vt1.c0))))<<(CASE WHEN GROUP_CONCAT(AVG(vt1.c0)) THEN MAX(vt1.c0) ELSE vt1.c0 END)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((GROUP_CONCAT(COUNT(*))) BETWEEN (SUM(vt1.c0)) AND (SUM(vt1.c0))))<<(CASE WHEN GROUP_CONCAT(AVG(vt1.c0)) THEN MAX(vt1.c0) ELSE vt1.c0 END)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((GROUP_CONCAT(COUNT(*))) BETWEEN (SUM(vt1.c0)) AND (SUM(vt1.c0))))<<(CASE WHEN GROUP_CONCAT(AVG(vt1.c0)) THEN MAX(vt1.c0) ELSE vt1.c0 END))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ('-1768160141') UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ('-1768160141'))) UNION ALL SELECT ALL * FROM vt1 WHERE ((('-1768160141') ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT rt1.c0, vt1.c0 FROM rt1, vt1;
SELECT DISTINCT rt1.c0, vt1.c0 FROM rt1, vt1 WHERE (NULL) UNION SELECT DISTINCT rt1.c0, vt1.c0 FROM rt1, vt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt1.c0, vt1.c0 FROM rt1, vt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt1.c0, vt1.c0 FROM rt1, vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ('#UD') GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ('#UD'))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((('#UD') ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c4, rt1.c3 FROM rt1 NATURAL JOIN vt0 GROUP BY rt1.c4, rt1.c3;
SELECT ALL rt1.c4, rt1.c3 FROM rt1 NATURAL JOIN vt0 GROUP BY rt1.c4, rt1.c3 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL rt1.c4, rt1.c3 FROM rt1 NATURAL JOIN vt0 GROUP BY rt1.c4, rt1.c3 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL rt1.c4, rt1.c3 FROM rt1 NATURAL JOIN vt0 GROUP BY rt1.c4, rt1.c3 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (+ (((vt1.c0)LIKE(vt1.c0))));
SELECT vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (+ (((vt1.c0)LIKE(vt1.c0)))) WHERE ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) IN ())) UNION ALL SELECT vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (+ (((vt1.c0)LIKE(vt1.c0)))) WHERE ((NOT ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) IN ())))) UNION ALL SELECT ALL vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (+ (((vt1.c0)LIKE(vt1.c0)))) WHERE ((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) IN ())) ISNULL));
SELECT vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (+ (((vt1.c0)LIKE(vt1.c0))));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c0, rt1.c1, rt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON CAST(NULL AS TEXT) LEFT OUTER JOIN vt0 ON LOWER(DISTINCT ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))) GROUP BY vt1.c0, rt1.c1, rt1.c0;
SELECT ALL vt1.c0, rt1.c1, rt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON CAST(NULL AS TEXT) LEFT OUTER JOIN vt0 ON LOWER(DISTINCT ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))) WHERE (((rt1.c1)GLOB(vt1.c0)) COLLATE NOCASE) GROUP BY vt1.c0, rt1.c1, rt1.c0 UNION SELECT ALL vt1.c0, rt1.c1, rt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON CAST(NULL AS TEXT) LEFT OUTER JOIN vt0 ON LOWER(DISTINCT ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))) WHERE ((NOT (((rt1.c1)GLOB(vt1.c0)) COLLATE NOCASE))) GROUP BY vt1.c0, rt1.c1, rt1.c0 UNION SELECT ALL vt1.c0, rt1.c1, rt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON CAST(NULL AS TEXT) LEFT OUTER JOIN vt0 ON LOWER(DISTINCT ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))) WHERE (((((rt1.c1)GLOB(vt1.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0, rt1.c1, rt1.c0;
SELECT vt1.c0, rt1.c1, rt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON CAST(NULL AS TEXT) LEFT OUTER JOIN vt0 ON LOWER(DISTINCT ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))) GROUP BY vt1.c0, rt1.c1, rt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(AVG(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(AVG(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(AVG(vt1.c0))) ISNULL);
SELECT ALL rt1.c2, vt0.c0, rt1.c0, vt1.c0, rt1.c4 FROM vt1, vt0, rt1;
SELECT ALL rt1.c2, vt0.c0, rt1.c0, vt1.c0, rt1.c4 FROM vt1, vt0, rt1 WHERE (CASE vt1.c0  WHEN '1166726940' THEN vt1.c0 END COLLATE NOCASE) UNION ALL SELECT rt1.c2, vt0.c0, rt1.c0, vt1.c0, rt1.c4 FROM vt1, vt0, rt1 WHERE ((NOT (CASE vt1.c0  WHEN '1166726940' THEN vt1.c0 END COLLATE NOCASE))) UNION ALL SELECT ALL rt1.c2, vt0.c0, rt1.c0, vt1.c0, rt1.c4 FROM vt1, vt0, rt1 WHERE (((CASE vt1.c0  WHEN '1166726940' THEN vt1.c0 END COLLATE NOCASE) ISNULL));
SELECT ALL rt1.c2, vt0.c0, rt1.c0, vt1.c0, rt1.c4 FROM vt1, vt0, rt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0) NOTNULL))<<('0<L.pk,]t'))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0) NOTNULL))<<('0<L.pk,]t'))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0) NOTNULL))<<('0<L.pk,]t'))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt1.c0, rt1.c3, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c3, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c3, rt1.c1, rt1.c2 FROM rt1 WHERE (CASE WHEN QUOTE(rt1.c0) THEN CAST(rt1.c2 AS REAL) END) GROUP BY rt1.c0, rt1.c3, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c3, rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (CASE WHEN QUOTE(rt1.c0) THEN CAST(rt1.c2 AS REAL) END))) GROUP BY rt1.c0, rt1.c3, rt1.c1, rt1.c2 UNION SELECT rt1.c0, rt1.c3, rt1.c1, rt1.c2 FROM rt1 WHERE (((CASE WHEN QUOTE(rt1.c0) THEN CAST(rt1.c2 AS REAL) END) ISNULL)) GROUP BY rt1.c0, rt1.c3, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c3, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c3, rt1.c1, rt1.c2;
SELECT ALL rt1.c1 FROM vt0, vt1, rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM vt0, vt1, rt1 GROUP BY rt1.c1 HAVING MIN(SQLITE_COMPILEOPTION_USED(SUM(rt1.c4))) UNION ALL SELECT ALL rt1.c1 FROM vt0, vt1, rt1 GROUP BY rt1.c1 HAVING (NOT (MIN(SQLITE_COMPILEOPTION_USED(SUM(rt1.c4))))) UNION ALL SELECT rt1.c1 FROM vt0, vt1, rt1 GROUP BY rt1.c1 HAVING ((MIN(SQLITE_COMPILEOPTION_USED(SUM(rt1.c4)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 AS BLOB)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS BLOB)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ('r%?{ᚯ &g') UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ('r%?{ᚯ &g'))) UNION SELECT DISTINCT * FROM rt1 WHERE ((('r%?{ᚯ &g') ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 WHERE (x'7535') GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE ((NOT (x'7535'))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE (((x'7535') ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1, rt1.c2, rt1.c4, rt1.c0, vt0.c0, vt1.c0, rt1.c3 FROM vt0, vt1, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c4, rt1.c0, vt0.c0, vt1.c0, rt1.c3;
SELECT ALL rt1.c1, rt1.c2, rt1.c4, rt1.c0, vt0.c0, vt1.c0, rt1.c3 FROM vt0, vt1, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c4, rt1.c0, vt0.c0, vt1.c0, rt1.c3 HAVING (NOT (((GROUP_CONCAT(rt1.c1))IS NOT(rt1.c2)))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c4, rt1.c0, vt0.c0, vt1.c0, rt1.c3 FROM vt0, vt1, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c4, rt1.c0, vt0.c0, vt1.c0, rt1.c3 HAVING (NOT ((NOT (((GROUP_CONCAT(rt1.c1))IS NOT(rt1.c2)))))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c4, rt1.c0, vt0.c0, vt1.c0, rt1.c3 FROM vt0, vt1, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c4, rt1.c0, vt0.c0, vt1.c0, rt1.c3 HAVING (((NOT (((GROUP_CONCAT(rt1.c1))IS NOT(rt1.c2))))) ISNULL);
SELECT rt1.c1, rt1.c2, rt1.c4, rt1.c0, vt0.c0, vt1.c0, rt1.c3 FROM vt0, vt1, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c4, rt1.c0, vt0.c0, vt1.c0, rt1.c3;
SELECT ALL rt1.c1, rt1.c2, rt1.c4, rt1.c0, vt0.c0, vt1.c0, rt1.c3 FROM vt0, vt1, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c4, rt1.c0, vt0.c0, vt1.c0, rt1.c3 HAVING (NOT (((GROUP_CONCAT(rt1.c1))IS NOT(rt1.c2)))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c4, rt1.c0, vt0.c0, vt1.c0, rt1.c3 FROM vt0, vt1, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c4, rt1.c0, vt0.c0, vt1.c0, rt1.c3 HAVING (NOT ((NOT (((GROUP_CONCAT(rt1.c1))IS NOT(rt1.c2)))))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c4, rt1.c0, vt0.c0, vt1.c0, rt1.c3 FROM vt0, vt1, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c4, rt1.c0, vt0.c0, vt1.c0, rt1.c3 HAVING (((NOT (((GROUP_CONCAT(rt1.c1))IS NOT(rt1.c2))))) ISNULL);
SELECT rt1.c1, rt1.c2, rt1.c4, rt1.c0, vt0.c0, vt1.c0, rt1.c3 FROM vt0, vt1, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c4, rt1.c0, vt0.c0, vt1.c0, rt1.c3;
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE (UNLIKELY(x'')) UNION ALL SELECT * FROM rt1 WHERE ((NOT (UNLIKELY(x'')))) UNION ALL SELECT * FROM rt1 WHERE (((UNLIKELY(x'')) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((NOT (vt0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((NOT (vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt1.c4, rt1.c3, rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c4, rt1.c3, rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c4, rt1.c3, rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (CASE WHEN ((rt1.c3)|(rt1.c2)) THEN (rt1.c0 IN ()) END) GROUP BY rt1.c4, rt1.c3, rt1.c2, rt1.c0, rt1.c1 UNION SELECT rt1.c4, rt1.c3, rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (CASE WHEN ((rt1.c3)|(rt1.c2)) THEN (rt1.c0 IN ()) END))) GROUP BY rt1.c4, rt1.c3, rt1.c2, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c4, rt1.c3, rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (((CASE WHEN ((rt1.c3)|(rt1.c2)) THEN (rt1.c0 IN ()) END) ISNULL)) GROUP BY rt1.c4, rt1.c3, rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c4, rt1.c3, rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c4, rt1.c3, rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING CASE WHEN ((((AVG(COUNT(rt1.c4)))OR(AVG(rt1.c3))))AND(rt1.c4)) THEN (+ (TOTAL(rt1.c4))) ELSE COALESCE(rt1.c1, 0.15046518918990937) END UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (CASE WHEN ((((AVG(COUNT(rt1.c4)))OR(AVG(rt1.c3))))AND(rt1.c4)) THEN (+ (TOTAL(rt1.c4))) ELSE COALESCE(rt1.c1, 0.15046518918990937) END)) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((CASE WHEN ((((AVG(COUNT(rt1.c4)))OR(AVG(rt1.c3))))AND(rt1.c4)) THEN (+ (TOTAL(rt1.c4))) ELSE COALESCE(rt1.c1, 0.15046518918990937) END) ISNULL);
SELECT ALL * FROM vt0, rt1;
SELECT * FROM vt0, rt1 WHERE ((~ (NULL))) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE ((NOT ((~ (NULL))))) UNION ALL SELECT * FROM vt0, rt1 WHERE ((((~ (NULL))) ISNULL));
SELECT ALL * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((((rt1.c4)*(vt1.c0)))) AND ((CASE 0.22140486117347247  WHEN vt1.c0 THEN rt1.c3 ELSE vt1.c0 END))) CROSS JOIN rt1 ON ((((((((((rt1.c1)OR(vt0.c0)))AND(rt1.c3)))OR(vt1.c0)))OR(vt1.c0))) ISNULL);
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((((rt1.c4)*(vt1.c0)))) AND ((CASE 0.22140486117347247  WHEN vt1.c0 THEN rt1.c3 ELSE vt1.c0 END))) CROSS JOIN rt1 ON ((((((((((rt1.c1)OR(vt0.c0)))AND(rt1.c3)))OR(vt1.c0)))OR(vt1.c0))) ISNULL) WHERE ((- (((rt1.c0)%(rt1.c0))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((((rt1.c4)*(vt1.c0)))) AND ((CASE 0.22140486117347247  WHEN vt1.c0 THEN rt1.c3 ELSE vt1.c0 END))) CROSS JOIN rt1 ON ((((((((((rt1.c1)OR(vt0.c0)))AND(rt1.c3)))OR(vt1.c0)))OR(vt1.c0))) ISNULL) WHERE ((NOT ((- (((rt1.c0)%(rt1.c0))))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((((rt1.c4)*(vt1.c0)))) AND ((CASE 0.22140486117347247  WHEN vt1.c0 THEN rt1.c3 ELSE vt1.c0 END))) CROSS JOIN rt1 ON ((((((((((rt1.c1)OR(vt0.c0)))AND(rt1.c3)))OR(vt1.c0)))OR(vt1.c0))) ISNULL) WHERE ((((- (((rt1.c0)%(rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((((rt1.c4)*(vt1.c0)))) AND ((CASE 0.22140486117347247  WHEN vt1.c0 THEN rt1.c3 ELSE vt1.c0 END))) CROSS JOIN rt1 ON ((((((((((rt1.c1)OR(vt0.c0)))AND(rt1.c3)))OR(vt1.c0)))OR(vt1.c0))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((~ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN 143118189 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((~ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN 143118189 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((~ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN 143118189 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(vt0.c0)) NOT BETWEEN (((vt0.c0)OR(vt0.c0))) AND (1982559352)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((GROUP_CONCAT(vt0.c0)) NOT BETWEEN (((vt0.c0)OR(vt0.c0))) AND (1982559352)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((GROUP_CONCAT(vt0.c0)) NOT BETWEEN (((vt0.c0)OR(vt0.c0))) AND (1982559352))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(vt0.c0)) NOT BETWEEN (((vt0.c0)OR(vt0.c0))) AND (1982559352)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((GROUP_CONCAT(vt0.c0)) NOT BETWEEN (((vt0.c0)OR(vt0.c0))) AND (1982559352)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((GROUP_CONCAT(vt0.c0)) NOT BETWEEN (((vt0.c0)OR(vt0.c0))) AND (1982559352))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0, vt1, rt1;
SELECT ALL * FROM vt0, vt1, rt1 WHERE (rt1.c1) UNION ALL SELECT ALL * FROM vt0, vt1, rt1 WHERE ((NOT (rt1.c1))) UNION ALL SELECT ALL * FROM vt0, vt1, rt1 WHERE (((rt1.c1) ISNULL));
SELECT ALL * FROM vt0, vt1, rt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c0)LIKE(vt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (((vt0.c0)LIKE(vt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((((vt0.c0)LIKE(vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0 IN ()))AND(highlight(vt1.c0, vt1.c0, vt1.c0, vt1.c0))))OR(((vt1.c0)+(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0 IN ()))AND(highlight(vt1.c0, vt1.c0, vt1.c0, vt1.c0))))OR(((vt1.c0)+(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((vt1.c0 IN ()))AND(highlight(vt1.c0, vt1.c0, vt1.c0, vt1.c0))))OR(((vt1.c0)+(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE WHEN vt1.c0 THEN ((TOTAL(vt1.c0))-(vt1.c0)) WHEN SUM(COUNT(vt1.c0)) THEN COUNT(*) WHEN NULL THEN ((SUM(vt1.c0))>=(vt1.c0)) END UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE WHEN vt1.c0 THEN ((TOTAL(vt1.c0))-(vt1.c0)) WHEN SUM(COUNT(vt1.c0)) THEN COUNT(*) WHEN NULL THEN ((SUM(vt1.c0))>=(vt1.c0)) END)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE WHEN vt1.c0 THEN ((TOTAL(vt1.c0))-(vt1.c0)) WHEN SUM(COUNT(vt1.c0)) THEN COUNT(*) WHEN NULL THEN ((SUM(vt1.c0))>=(vt1.c0)) END) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((0.23452462708883748)AND((vt1.c0 IN (vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((0.23452462708883748)AND((vt1.c0 IN (vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((0.23452462708883748)AND((vt1.c0 IN (vt1.c0))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0, vt1, rt1;
SELECT DISTINCT * FROM vt0, vt1, rt1 WHERE ((((vt0.c0)) BETWEEN ((((x'')||(vt0.c0)))) AND (('-693378934')))) UNION SELECT DISTINCT * FROM vt0, vt1, rt1 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((x'')||(vt0.c0)))) AND (('-693378934')))))) UNION SELECT DISTINCT * FROM vt0, vt1, rt1 WHERE ((((((vt0.c0)) BETWEEN ((((x'')||(vt0.c0)))) AND (('-693378934')))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 WHERE ('1020650593') GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE ((NOT ('1020650593'))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE ((('1020650593') ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 FULL OUTER JOIN vt0 ON ((((CAST(vt0.c0 AS BLOB))OR(((rt1.c2) NOT NULL))))AND(((((0.9049234835317677)OR(rt1.c3)))AND(rt1.c1)))) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 FULL OUTER JOIN vt0 ON ((((CAST(vt0.c0 AS BLOB))OR(((rt1.c2) NOT NULL))))AND(((((0.9049234835317677)OR(rt1.c3)))AND(rt1.c1)))) GROUP BY rt1.c1 HAVING COUNT(*) UNION ALL SELECT rt1.c1 FROM rt1 FULL OUTER JOIN vt0 ON ((((CAST(vt0.c0 AS BLOB))OR(((rt1.c2) NOT NULL))))AND(((((0.9049234835317677)OR(rt1.c3)))AND(rt1.c1)))) GROUP BY rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c1 FROM rt1 NOT INDEXED FULL OUTER JOIN vt0 ON ((((CAST(vt0.c0 AS BLOB))OR(((rt1.c2) NOT NULL))))AND(((((0.9049234835317677)OR(rt1.c3)))AND(rt1.c1)))) GROUP BY rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c1 FROM rt1 FULL OUTER JOIN vt0 ON ((((CAST(vt0.c0 AS BLOB))OR(((rt1.c2) NOT NULL))))AND(((((0.9049234835317677)OR(rt1.c3)))AND(rt1.c1)))) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 FULL OUTER JOIN vt0 ON ((((CAST(vt0.c0 AS BLOB))OR(((rt1.c2) NOT NULL))))AND(((((0.9049234835317677)OR(rt1.c3)))AND(rt1.c1)))) GROUP BY rt1.c1 HAVING COUNT(*) UNION ALL SELECT rt1.c1 FROM rt1 FULL OUTER JOIN vt0 ON ((((CAST(vt0.c0 AS BLOB))OR(((rt1.c2) NOT NULL))))AND(((((0.9049234835317677)OR(rt1.c3)))AND(rt1.c1)))) GROUP BY rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c1 FROM rt1 NOT INDEXED FULL OUTER JOIN vt0 ON ((((CAST(vt0.c0 AS BLOB))OR(((rt1.c2) NOT NULL))))AND(((((0.9049234835317677)OR(rt1.c3)))AND(rt1.c1)))) GROUP BY rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c1 FROM rt1 FULL OUTER JOIN vt0 ON ((((CAST(vt0.c0 AS BLOB))OR(((rt1.c2) NOT NULL))))AND(((((0.9049234835317677)OR(rt1.c3)))AND(rt1.c1)))) GROUP BY rt1.c1;
SELECT ALL rt1.c2 FROM rt1;
SELECT rt1.c2 FROM rt1 WHERE (((NULL COLLATE NOCASE) BETWEEN (0x3351ed67) AND (x'5594'))) UNION ALL SELECT ALL rt1.c2 FROM rt1 WHERE ((NOT (((NULL COLLATE NOCASE) BETWEEN (0x3351ed67) AND (x'5594'))))) UNION ALL SELECT rt1.c2 FROM rt1 WHERE (((((NULL COLLATE NOCASE) BETWEEN (0x3351ed67) AND (x'5594'))) ISNULL));
SELECT ALL rt1.c2 FROM rt1;
SELECT DISTINCT * FROM vt1, rt1, vt0;
SELECT DISTINCT * FROM vt1, rt1, vt0 WHERE (json_type('')) UNION SELECT DISTINCT * FROM vt1, rt1, vt0 WHERE ((NOT (json_type('')))) UNION SELECT DISTINCT * FROM vt1, rt1, vt0 WHERE (((json_type('')) ISNULL));
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((STRFTIME(vt1.c0, vt1.c0, vt1.c0))OR(vt1.c0 COLLATE BINARY)))AND(CASE vt0.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((((STRFTIME(vt1.c0, vt1.c0, vt1.c0))OR(vt1.c0 COLLATE BINARY)))AND(CASE vt0.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((((STRFTIME(vt1.c0, vt1.c0, vt1.c0))OR(vt1.c0 COLLATE BINARY)))AND(CASE vt0.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING MAX(vt0.c0) COLLATE BINARY UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(vt0.c0) COLLATE BINARY)) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((MAX(vt0.c0) COLLATE BINARY) ISNULL);
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING MAX(vt0.c0) COLLATE BINARY UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(vt0.c0) COLLATE BINARY)) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((MAX(vt0.c0) COLLATE BINARY) ISNULL);
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT MAX(vt1.c0) FROM rt1, vt0, vt1 ORDER BY 0.39579063490024713  NULLS FIRST;
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (((CASE WHEN '嘛Z\YZ1P' THEN rt1.c4 END) BETWEEN (NULL) AND (CASE rt1.c3  WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c0 END))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (((CASE WHEN '嘛Z\YZ1P' THEN rt1.c4 END) BETWEEN (NULL) AND (CASE rt1.c3  WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c0 END))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((CASE WHEN '嘛Z\YZ1P' THEN rt1.c4 END) BETWEEN (NULL) AND (CASE rt1.c3  WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c0 END))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt1.c4 FROM rt1;
SELECT DISTINCT rt1.c4 FROM rt1 WHERE ((((rt1.c4)) BETWEEN (((- (rt1.c3)))) AND ((rt1.c2)))) UNION SELECT DISTINCT rt1.c4 FROM rt1 WHERE ((NOT ((((rt1.c4)) BETWEEN (((- (rt1.c3)))) AND ((rt1.c2)))))) UNION SELECT DISTINCT rt1.c4 FROM rt1 WHERE ((((((rt1.c4)) BETWEEN (((- (rt1.c3)))) AND ((rt1.c2)))) ISNULL));
SELECT DISTINCT rt1.c4 FROM rt1;
SELECT rt1.c3 FROM rt1, vt0 GROUP BY rt1.c3;
SELECT rt1.c3 FROM rt1, vt0 WHERE ((((NOT (rt1.c0)))LIKE(((rt1.c0) BETWEEN (rt1.c3) AND (vt0.c0))))) GROUP BY rt1.c3 UNION SELECT rt1.c3 FROM rt1, vt0 WHERE ((NOT ((((NOT (rt1.c0)))LIKE(((rt1.c0) BETWEEN (rt1.c3) AND (vt0.c0))))))) GROUP BY rt1.c3 UNION SELECT rt1.c3 FROM rt1, vt0 WHERE ((((((NOT (rt1.c0)))LIKE(((rt1.c0) BETWEEN (rt1.c3) AND (vt0.c0))))) ISNULL)) GROUP BY rt1.c3;
SELECT rt1.c3 FROM rt1, vt0 GROUP BY rt1.c3;
SELECT vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) IN ()) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) IN ()) GROUP BY vt1.c0, vt0.c0 HAVING COUNT(((vt1.c0)<>(AVG(vt1.c0)))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) IN ()) GROUP BY vt1.c0, vt0.c0 HAVING (NOT (COUNT(((vt1.c0)<>(AVG(vt1.c0)))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) IN ()) GROUP BY vt1.c0, vt0.c0 HAVING ((COUNT(((vt1.c0)<>(AVG(vt1.c0))))) ISNULL);
SELECT rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1 FROM vt0 NATURAL JOIN rt1;
SELECT rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1 FROM vt0 NATURAL JOIN rt1 WHERE (NULL COLLATE NOCASE) UNION ALL SELECT rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1 FROM vt0 NATURAL JOIN rt1 WHERE ((NOT (NULL COLLATE NOCASE))) UNION ALL SELECT ALL rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1 FROM vt0 NATURAL JOIN rt1 WHERE (((NULL COLLATE NOCASE) ISNULL));
SELECT rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1 FROM vt0 NATURAL JOIN rt1;
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt1 ON CASE ((rt1.c0)%(rt1.c0))  WHEN LIKELIHOOD(vt1.c0, 0.6920929664323578) THEN ((x'93cf') NOT BETWEEN (rt1.c1) AND (0.7813159151597129)) ELSE rt1.c4 COLLATE BINARY END;
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt1 ON CASE ((rt1.c0)%(rt1.c0))  WHEN LIKELIHOOD(vt1.c0, 0.6920929664323578) THEN ((x'93cf') NOT BETWEEN (rt1.c1) AND (0.7813159151597129)) ELSE rt1.c4 COLLATE BINARY END WHERE (0.1387775355592964 COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt1 ON CASE ((rt1.c0)%(rt1.c0))  WHEN LIKELIHOOD(vt1.c0, 0.6920929664323578) THEN ((x'93cf') NOT BETWEEN (rt1.c1) AND (0.7813159151597129)) ELSE rt1.c4 COLLATE BINARY END WHERE ((NOT (0.1387775355592964 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt1 ON CASE ((rt1.c0)%(rt1.c0))  WHEN LIKELIHOOD(vt1.c0, 0.6920929664323578) THEN ((x'93cf') NOT BETWEEN (rt1.c1) AND (0.7813159151597129)) ELSE rt1.c4 COLLATE BINARY END WHERE (((0.1387775355592964 COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt1 ON CASE ((rt1.c0)%(rt1.c0))  WHEN LIKELIHOOD(vt1.c0, 0.6920929664323578) THEN ((x'93cf') NOT BETWEEN (rt1.c1) AND (0.7813159151597129)) ELSE rt1.c4 COLLATE BINARY END;
SELECT ALL vt1.c0 FROM rt1 NOT INDEXED, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt1, vt1 WHERE ((((~ (rt1.c4)))<=(CAST('tu	xD' AS INTEGER)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM rt1, vt1 WHERE ((NOT ((((~ (rt1.c4)))<=(CAST('tu	xD' AS INTEGER)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM rt1, vt1 WHERE ((((((~ (rt1.c4)))<=(CAST('tu	xD' AS INTEGER)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt1 NOT INDEXED, vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(((vt0.c0) ISNULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(((vt0.c0) ISNULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(((vt0.c0) ISNULL))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(((vt0.c0) ISNULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(((vt0.c0) ISNULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(((vt0.c0) ISNULL))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM rt1, vt0;
SELECT ALL * FROM rt1, vt0 WHERE (TRIM(rt1.c3) COLLATE NOCASE COLLATE BINARY) UNION ALL SELECT * FROM rt1, vt0 WHERE ((NOT (TRIM(rt1.c3) COLLATE NOCASE COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE (((TRIM(rt1.c3) COLLATE NOCASE COLLATE BINARY) ISNULL));
SELECT ALL * FROM rt1, vt0;
SELECT DISTINCT rt1.c3, rt1.c4, rt1.c1, rt1.c2, vt0.c0 FROM vt1, vt0, rt1;
SELECT DISTINCT rt1.c3, rt1.c4, rt1.c1, rt1.c2, vt0.c0 FROM vt1, vt0, rt1 WHERE (((((((rt1.c2))>((rt1.c0))), (~ (vt1.c0)), (((vt0.c0))<=(('-683692916')))))<>((CASE WHEN vt1.c0 THEN rt1.c0 END, ((vt0.c0) ISNULL), '-2135489363')))) UNION SELECT DISTINCT rt1.c3, rt1.c4, rt1.c1, rt1.c2, vt0.c0 FROM vt1, vt0, rt1 WHERE ((NOT (((((((rt1.c2))>((rt1.c0))), (~ (vt1.c0)), (((vt0.c0))<=(('-683692916')))))!=((CASE WHEN vt1.c0 THEN rt1.c0 END, ((vt0.c0) ISNULL), '-2135489363')))))) UNION SELECT DISTINCT rt1.c3, rt1.c4, rt1.c1, rt1.c2, vt0.c0 FROM vt1, vt0, rt1 WHERE (((((((((rt1.c2))>((rt1.c0))), (~ (vt1.c0)), (((vt0.c0))<=(('-683692916')))))<>((CASE WHEN vt1.c0 THEN rt1.c0 END, ((vt0.c0) ISNULL), '-2135489363')))) ISNULL));
SELECT DISTINCT rt1.c3, rt1.c4, rt1.c1, rt1.c2, vt0.c0 FROM vt1, vt0, rt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)>=((('') NOTNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE)>=((('') NOTNULL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)>=((('') NOTNULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c4 FROM rt1, vt1 GROUP BY rt1.c4;
SELECT ALL rt1.c4 FROM rt1, vt1 GROUP BY rt1.c4 HAVING ((GROUP_CONCAT(GROUP_CONCAT(rt1.c0))) NOTNULL) UNION ALL SELECT rt1.c4 FROM rt1, vt1 GROUP BY rt1.c4 HAVING (NOT (((GROUP_CONCAT(GROUP_CONCAT(rt1.c0))) NOTNULL))) UNION ALL SELECT rt1.c4 FROM rt1, vt1 GROUP BY rt1.c4 HAVING ((((GROUP_CONCAT(GROUP_CONCAT(rt1.c0))) NOTNULL)) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (STRFTIME(((((0.2703108237488404)AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0)<>(vt0.c0)), CAST(vt0.c0 AS INTEGER))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (STRFTIME(((((0.2703108237488404)AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0)<>(vt0.c0)), CAST(vt0.c0 AS INTEGER))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((STRFTIME(((((0.2703108237488404)AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0)!=(vt0.c0)), CAST(vt0.c0 AS INTEGER))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt1.c1, rt1.c4 FROM rt1, vt1;
SELECT DISTINCT rt1.c1, rt1.c4 FROM rt1, vt1 WHERE (NULL) UNION SELECT DISTINCT rt1.c1, rt1.c4 FROM rt1, vt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt1.c1, rt1.c4 FROM rt1, vt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c4 FROM rt1, vt1;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((((vt0.c0 IN ()))OR(CAST(vt1.c0 AS REAL))))AND(CAST('430949961' AS REAL)))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((((vt0.c0 IN ()))OR(CAST(vt1.c0 AS REAL))))AND(CAST('430949961' AS REAL)))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((((((vt0.c0 IN ()))OR(CAST(vt1.c0 AS REAL))))AND(CAST('430949961' AS REAL)))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT rt1.c4, vt1.c0, rt1.c0, rt1.c3, rt1.c2, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c4, vt1.c0, rt1.c0, rt1.c3, rt1.c2, rt1.c1;
SELECT rt1.c4, vt1.c0, rt1.c0, rt1.c3, rt1.c2, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c4, vt1.c0, rt1.c0, rt1.c3, rt1.c2, rt1.c1 HAVING ((CAST(AVG(MIN(rt1.c1)) AS INTEGER)) NOT BETWEEN ((- (rt1.c3))) AND (SUM(vt1.c0))) UNION ALL SELECT rt1.c4, vt1.c0, rt1.c0, rt1.c3, rt1.c2, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c4, vt1.c0, rt1.c0, rt1.c3, rt1.c2, rt1.c1 HAVING (NOT (((CAST(AVG(MIN(rt1.c1)) AS INTEGER)) NOT BETWEEN ((- (rt1.c3))) AND (SUM(vt1.c0))))) UNION ALL SELECT ALL rt1.c4, vt1.c0, rt1.c0, rt1.c3, rt1.c2, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c4, vt1.c0, rt1.c0, rt1.c3, rt1.c2, rt1.c1 HAVING ((((CAST(AVG(MIN(rt1.c1)) AS INTEGER)) NOT BETWEEN ((- (rt1.c3))) AND (SUM(vt1.c0)))) ISNULL);
SELECT * FROM vt0, rt1;
SELECT * FROM vt0, rt1 WHERE ('-162924690' COLLATE NOCASE) UNION ALL SELECT * FROM vt0, rt1 NOT INDEXED WHERE ((NOT ('-162924690' COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE ((('-162924690' COLLATE NOCASE) ISNULL));
SELECT * FROM vt0, rt1;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (CAST(((((vt0.c0)OR('99648654')))OR(vt0.c0)) AS INTEGER)) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (CAST(((((vt0.c0)OR('99648654')))OR(vt0.c0)) AS INTEGER)))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((CAST(((((vt0.c0)OR('99648654')))OR(vt0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT ALL rt1.c3, rt1.c4 FROM vt0 NOT INDEXED, vt1, rt1 NOT INDEXED GROUP BY rt1.c3, rt1.c4;
SELECT rt1.c3, rt1.c4 FROM vt0, vt1, rt1 WHERE ((+ (x'' COLLATE RTRIM))) GROUP BY rt1.c3, rt1.c4 UNION SELECT ALL rt1.c3, rt1.c4 FROM vt0, vt1, rt1 WHERE ((NOT ((+ (x'' COLLATE RTRIM))))) GROUP BY rt1.c3, rt1.c4 UNION SELECT ALL rt1.c3, rt1.c4 FROM vt0, vt1, rt1 WHERE ((((+ (x'' COLLATE RTRIM))) ISNULL)) GROUP BY rt1.c3, rt1.c4;
SELECT ALL rt1.c3, rt1.c4 FROM vt0 NOT INDEXED, vt1, rt1 NOT INDEXED GROUP BY rt1.c3, rt1.c4;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(COUNT(AVG(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(COUNT(AVG(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(COUNT(AVG(vt1.c0)))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)IS NOT(vt0.c0)) COLLATE NOCASE) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0)IS NOT(vt0.c0)) COLLATE NOCASE))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((~ ((((vt0.c0))<((vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((~ ((((vt0.c0))<((vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((~ ((((vt0.c0))<((vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)<<('575672118')))OR((+ (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)<<('575672118')))OR((+ (vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)<<('575672118')))OR((+ (vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, vt0.c0, rt1.c1, rt1.c3 FROM vt0, vt1 LEFT OUTER JOIN rt1 ON (((rt1.c2, rt1.c2, rt1.c2)) NOT BETWEEN (('0.08496712507363824', rt1.c1 COLLATE BINARY, ((((rt1.c4)OR(vt0.c0)))AND('1441381651')))) AND ((((((rt1.c4)OR(rt1.c3)))AND(0xffffffffd4367c74)), CASE rt1.c3  WHEN rt1.c1 THEN rt1.c0 END, CASE rt1.c2  WHEN vt1.c0 THEN vt1.c0 END))) GROUP BY vt1.c0, vt0.c0, rt1.c1, rt1.c3;
SELECT ALL vt1.c0, vt0.c0, rt1.c1, rt1.c3 FROM vt0, vt1 LEFT OUTER JOIN rt1 ON (((rt1.c2, rt1.c2, rt1.c2)) NOT BETWEEN (('0.08496712507363824', rt1.c1 COLLATE BINARY, ((((rt1.c4)OR(vt0.c0)))AND('1441381651')))) AND ((((((rt1.c4)OR(rt1.c3)))AND(0Xffffffffd4367c74)), CASE rt1.c3  WHEN rt1.c1 THEN rt1.c0 END, CASE rt1.c2  WHEN vt1.c0 THEN vt1.c0 END))) GROUP BY vt1.c0, vt0.c0, rt1.c1, rt1.c3 HAVING (~ (CASE WHEN rt1.c2 THEN rt1.c1 END)) UNION ALL SELECT ALL vt1.c0, vt0.c0, rt1.c1, rt1.c3 FROM vt0, vt1 LEFT OUTER JOIN rt1 ON (((rt1.c2, rt1.c2, rt1.c2)) NOT BETWEEN (('0.08496712507363824', rt1.c1 COLLATE BINARY, ((((rt1.c4)OR(vt0.c0)))AND('1441381651')))) AND ((((((rt1.c4)OR(rt1.c3)))AND(0xffffffffd4367c74)), CASE rt1.c3  WHEN rt1.c1 THEN rt1.c0 END, CASE rt1.c2  WHEN vt1.c0 THEN vt1.c0 END))) GROUP BY vt1.c0, vt0.c0, rt1.c1, rt1.c3 HAVING (NOT ((~ (CASE WHEN rt1.c2 THEN rt1.c1 END)))) UNION ALL SELECT vt1.c0, vt0.c0, rt1.c1, rt1.c3 FROM vt0, vt1 LEFT OUTER JOIN rt1 ON (((rt1.c2, rt1.c2, rt1.c2)) NOT BETWEEN (('0.08496712507363824', rt1.c1 COLLATE BINARY, ((((rt1.c4)OR(vt0.c0)))AND('1441381651')))) AND ((((((rt1.c4)OR(rt1.c3)))AND(0Xffffffffd4367c74)), CASE rt1.c3  WHEN rt1.c1 THEN rt1.c0 END, CASE rt1.c2  WHEN vt1.c0 THEN vt1.c0 END))) GROUP BY vt1.c0, vt0.c0, rt1.c1, rt1.c3 HAVING (((~ (CASE WHEN rt1.c2 THEN rt1.c1 END))) ISNULL);
SELECT vt1.c0, vt0.c0, rt1.c1, rt1.c3 FROM vt0, vt1 LEFT OUTER JOIN rt1 ON (((rt1.c2, rt1.c2, rt1.c2)) NOT BETWEEN (('0.08496712507363824', rt1.c1 COLLATE BINARY, ((((rt1.c4)OR(vt0.c0)))AND('1441381651')))) AND ((((((rt1.c4)OR(rt1.c3)))AND(0xffffffffd4367c74)), CASE rt1.c3  WHEN rt1.c1 THEN rt1.c0 END, CASE rt1.c2  WHEN vt1.c0 THEN vt1.c0 END))) GROUP BY vt1.c0, vt0.c0, rt1.c1, rt1.c3;
SELECT ALL vt1.c0, vt0.c0, rt1.c1, rt1.c3 FROM vt0, vt1 LEFT OUTER JOIN rt1 ON (((rt1.c2, rt1.c2, rt1.c2)) NOT BETWEEN (('0.08496712507363824', rt1.c1 COLLATE BINARY, ((((rt1.c4)OR(vt0.c0)))AND('1441381651')))) AND ((((((rt1.c4)OR(rt1.c3)))AND(0Xffffffffd4367c74)), CASE rt1.c3  WHEN rt1.c1 THEN rt1.c0 END, CASE rt1.c2  WHEN vt1.c0 THEN vt1.c0 END))) GROUP BY vt1.c0, vt0.c0, rt1.c1, rt1.c3 HAVING (~ (CASE WHEN rt1.c2 THEN rt1.c1 END)) UNION ALL SELECT ALL vt1.c0, vt0.c0, rt1.c1, rt1.c3 FROM vt0, vt1 LEFT OUTER JOIN rt1 ON (((rt1.c2, rt1.c2, rt1.c2)) NOT BETWEEN (('0.08496712507363824', rt1.c1 COLLATE BINARY, ((((rt1.c4)OR(vt0.c0)))AND('1441381651')))) AND ((((((rt1.c4)OR(rt1.c3)))AND(0xffffffffd4367c74)), CASE rt1.c3  WHEN rt1.c1 THEN rt1.c0 END, CASE rt1.c2  WHEN vt1.c0 THEN vt1.c0 END))) GROUP BY vt1.c0, vt0.c0, rt1.c1, rt1.c3 HAVING (NOT ((~ (CASE WHEN rt1.c2 THEN rt1.c1 END)))) UNION ALL SELECT vt1.c0, vt0.c0, rt1.c1, rt1.c3 FROM vt0, vt1 LEFT OUTER JOIN rt1 ON (((rt1.c2, rt1.c2, rt1.c2)) NOT BETWEEN (('0.08496712507363824', rt1.c1 COLLATE BINARY, ((((rt1.c4)OR(vt0.c0)))AND('1441381651')))) AND ((((((rt1.c4)OR(rt1.c3)))AND(0Xffffffffd4367c74)), CASE rt1.c3  WHEN rt1.c1 THEN rt1.c0 END, CASE rt1.c2  WHEN vt1.c0 THEN vt1.c0 END))) GROUP BY vt1.c0, vt0.c0, rt1.c1, rt1.c3 HAVING (((~ (CASE WHEN rt1.c2 THEN rt1.c1 END))) ISNULL);
SELECT vt1.c0, vt0.c0, rt1.c1, rt1.c3 FROM vt0, vt1 LEFT OUTER JOIN rt1 ON (((rt1.c2, rt1.c2, rt1.c2)) NOT BETWEEN (('0.08496712507363824', rt1.c1 COLLATE BINARY, ((((rt1.c4)OR(vt0.c0)))AND('1441381651')))) AND ((((((rt1.c4)OR(rt1.c3)))AND(0xffffffffd4367c74)), CASE rt1.c3  WHEN rt1.c1 THEN rt1.c0 END, CASE rt1.c2  WHEN vt1.c0 THEN vt1.c0 END))) GROUP BY vt1.c0, vt0.c0, rt1.c1, rt1.c3;
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (CASE WHEN ((((((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c4)))OR(rt1.c3)) THEN (~ (x'')) WHEN (((rt1.c0, rt1.c2, rt1.c0))<((rt1.c0, rt1.c1, rt1.c2))) THEN ((((((((rt1.c4)AND(rt1.c4)))OR(rt1.c1)))AND(rt1.c1)))AND(rt1.c3)) WHEN rt1.c3 THEN rt1.c0 END) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (CASE WHEN ((((((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c4)))OR(rt1.c3)) THEN (~ (x'')) WHEN (((rt1.c0, rt1.c2, rt1.c0))<((rt1.c0, rt1.c1, rt1.c2))) THEN ((((((((rt1.c4)AND(rt1.c4)))OR(rt1.c1)))AND(rt1.c1)))AND(rt1.c3)) WHEN rt1.c3 THEN rt1.c0 END))) UNION ALL SELECT ALL * FROM rt1 WHERE (((CASE WHEN ((((((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c4)))OR(rt1.c3)) THEN (~ (x'')) WHEN (((rt1.c0, rt1.c2, rt1.c0))<((rt1.c0, rt1.c1, rt1.c2))) THEN ((((((((rt1.c4)AND(rt1.c4)))OR(rt1.c1)))AND(rt1.c1)))AND(rt1.c3)) WHEN rt1.c3 THEN rt1.c0 END) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt1 ON (((rt1.c2)) NOT BETWEEN ((((rt1.c3) IS TRUE))) AND ((UPPER(DISTINCT rt1.c4)))) INNER JOIN vt0 ON (NOT (vt1.c0));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt1 ON (((rt1.c2)) NOT BETWEEN ((((rt1.c3) IS TRUE))) AND ((UPPER(DISTINCT rt1.c4)))) INNER JOIN vt0 ON (NOT (vt1.c0)) WHERE ((+ (((((((((0.6376450592418147)AND(rt1.c4)))OR(rt1.c0)))OR(rt1.c3)))OR(rt1.c0))))) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt1 ON (((rt1.c2)) NOT BETWEEN ((((rt1.c3) IS TRUE))) AND ((UPPER(DISTINCT rt1.c4)))) INNER JOIN vt0 ON (NOT (vt1.c0)) WHERE ((NOT ((+ (((((((((0.6376450592418147)AND(rt1.c4)))OR(rt1.c0)))OR(rt1.c3)))OR(rt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt1 ON (((rt1.c2)) NOT BETWEEN ((((rt1.c3) IS TRUE))) AND ((UPPER(DISTINCT rt1.c4)))) INNER JOIN vt0 ON (NOT (vt1.c0)) WHERE ((((+ (((((((((0.6376450592418147)AND(rt1.c4)))OR(rt1.c0)))OR(rt1.c3)))OR(rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt1 ON (((rt1.c2)) NOT BETWEEN ((((rt1.c3) IS TRUE))) AND ((UPPER(DISTINCT rt1.c4)))) INNER JOIN vt0 ON (NOT (vt1.c0));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) BETWEEN (((vt0.c0)IS(vt0.c0))) AND (CAST(vt0.c0 AS TEXT)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) BETWEEN (((vt0.c0)IS(vt0.c0))) AND (CAST(vt0.c0 AS TEXT)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) BETWEEN (((vt0.c0)IS(vt0.c0))) AND (CAST(vt0.c0 AS TEXT)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(((COUNT(vt0.c0)) IS FALSE)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(((COUNT(vt0.c0)) IS FALSE)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(((COUNT(vt0.c0)) IS FALSE))) ISNULL);
SELECT ALL rt1.c3, rt1.c2, rt1.c1, vt1.c0, vt0.c0, rt1.c4, rt1.c0 FROM vt0, rt1, vt1;
SELECT rt1.c3, rt1.c2, rt1.c1, vt1.c0, vt0.c0, rt1.c4, rt1.c0 FROM vt0, rt1, vt1 WHERE ((((rt1.c4)GLOB(rt1.c3)) IN ())) UNION ALL SELECT rt1.c3, rt1.c2, rt1.c1, vt1.c0, vt0.c0, rt1.c4, rt1.c0 FROM vt0, rt1, vt1 WHERE ((NOT ((((rt1.c4)GLOB(rt1.c3)) IN ())))) UNION ALL SELECT rt1.c3, rt1.c2, rt1.c1, vt1.c0, vt0.c0, rt1.c4, rt1.c0 FROM vt0, rt1, vt1 WHERE ((((((rt1.c4)GLOB(rt1.c3)) IN ())) ISNULL));
SELECT ALL rt1.c3, rt1.c2, rt1.c1, vt1.c0, vt0.c0, rt1.c4, rt1.c0 FROM vt0, rt1, vt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((- (((rt1.c2) ISNULL)))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((- (((rt1.c2) ISNULL)))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((- (((rt1.c2) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((NOT (vt0.c0))) BETWEEN (COALESCE(DISTINCT vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((NOT (vt0.c0))) BETWEEN (COALESCE(DISTINCT vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((NOT (vt0.c0))) BETWEEN (COALESCE(DISTINCT vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (((+ (COUNT(vt0.c0)))) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (AVG(GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT ((((+ (COUNT(vt0.c0)))) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (AVG(GROUP_CONCAT(vt1.c0)))))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (((((+ (COUNT(vt0.c0)))) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (AVG(GROUP_CONCAT(vt1.c0))))) ISNULL);
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE ((((((rt1.c3) IS FALSE)))>=((rt1.c0)))) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((((((rt1.c3) IS FALSE)))>=((rt1.c0)))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((((((((rt1.c3) IS FALSE)))>=((rt1.c0)))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM vt0, vt1, rt1;
SELECT DISTINCT * FROM vt0 NOT INDEXED, vt1, rt1 WHERE ((((((rt1.c0))>=((vt1.c0)))) NOT BETWEEN (rt1.c2 COLLATE RTRIM) AND (CAST(rt1.c2 AS REAL)))) UNION SELECT DISTINCT * FROM vt0, vt1, rt1 WHERE ((NOT ((((((rt1.c0))>=((vt1.c0)))) NOT BETWEEN (rt1.c2 COLLATE RTRIM) AND (CAST(rt1.c2 AS REAL)))))) UNION SELECT DISTINCT * FROM vt0, vt1, rt1 WHERE ((((((((rt1.c0))>=((vt1.c0)))) NOT BETWEEN (rt1.c2 COLLATE RTRIM) AND (CAST(rt1.c2 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt1;
SELECT rt1.c2, rt1.c1, rt1.c3, rt1.c4, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c3, rt1.c4, rt1.c0, vt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c3, rt1.c4, rt1.c0, vt1.c0 FROM vt1, rt1 WHERE (((NULL)-(rt1.c0 COLLATE RTRIM))) GROUP BY rt1.c2, rt1.c1, rt1.c3, rt1.c4, rt1.c0, vt1.c0 UNION SELECT rt1.c2, rt1.c1, rt1.c3, rt1.c4, rt1.c0, vt1.c0 FROM vt1, rt1 WHERE ((NOT (((NULL)-(rt1.c0 COLLATE RTRIM))))) GROUP BY rt1.c2, rt1.c1, rt1.c3, rt1.c4, rt1.c0, vt1.c0 UNION SELECT rt1.c2, rt1.c1, rt1.c3, rt1.c4, rt1.c0, vt1.c0 FROM vt1, rt1 WHERE (((((NULL)-(rt1.c0 COLLATE RTRIM))) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c3, rt1.c4, rt1.c0, vt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c3, rt1.c4, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c3, rt1.c4, rt1.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(((vt1.c0)||(GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(((vt1.c0)||(GROUP_CONCAT(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(((vt1.c0)||(GROUP_CONCAT(vt1.c0))))) ISNULL);
SELECT rt1.c1 FROM rt1;
SELECT rt1.c1 FROM rt1 WHERE (((CAST(rt1.c0 AS TEXT))GLOB(0.06320754434725218))) UNION ALL SELECT rt1.c1 FROM rt1 WHERE ((NOT (((CAST(rt1.c0 AS TEXT))GLOB(0.06320754434725218))))) UNION ALL SELECT rt1.c1 FROM rt1 WHERE (((((CAST(rt1.c0 AS TEXT))GLOB(0.06320754434725218))) ISNULL));
SELECT rt1.c1 FROM rt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (0x69789548) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (0x69789548))) UNION SELECT DISTINCT * FROM vt0 WHERE (((0x69789548) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt1.c0, rt1.c4, rt1.c3, vt0.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c0, rt1.c4, rt1.c3, vt0.c0;
SELECT rt1.c0, rt1.c4, rt1.c3, vt0.c0 FROM vt0, vt1, rt1 WHERE (vt1.c0) GROUP BY rt1.c0, rt1.c4, rt1.c3, vt0.c0 UNION SELECT rt1.c0, rt1.c4, rt1.c3, vt0.c0 FROM vt0, vt1, rt1 WHERE ((NOT (vt1.c0))) GROUP BY rt1.c0, rt1.c4, rt1.c3, vt0.c0 UNION SELECT rt1.c0, rt1.c4, rt1.c3, vt0.c0 FROM vt0, vt1, rt1 WHERE (((vt1.c0) ISNULL)) GROUP BY rt1.c0, rt1.c4, rt1.c3, vt0.c0;
SELECT rt1.c0, rt1.c4, rt1.c3, vt0.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c0, rt1.c4, rt1.c3, vt0.c0;
SELECT ALL vt1.c0, rt1.c4, rt1.c0, rt1.c2, rt1.c3, rt1.c1 FROM vt1, vt0, rt1 GROUP BY vt1.c0, rt1.c4, rt1.c0, rt1.c2, rt1.c3, rt1.c1;
SELECT vt1.c0, rt1.c4, rt1.c0, rt1.c2, rt1.c3, rt1.c1 FROM vt1, vt0, rt1 GROUP BY vt1.c0, rt1.c4, rt1.c0, rt1.c2, rt1.c3, rt1.c1 HAVING TOTAL(CASE MIN(TOTAL(MAX(MAX(rt1.c0))))  WHEN SUM(vt1.c0) THEN TOTAL(rt1.c0) END) UNION ALL SELECT vt1.c0, rt1.c4, rt1.c0, rt1.c2, rt1.c3, rt1.c1 FROM vt1, vt0 NOT INDEXED, rt1 GROUP BY vt1.c0, rt1.c4, rt1.c0, rt1.c2, rt1.c3, rt1.c1 HAVING (NOT (TOTAL(CASE MIN(TOTAL(MAX(MAX(rt1.c0))))  WHEN SUM(vt1.c0) THEN TOTAL(rt1.c0) END))) UNION ALL SELECT ALL vt1.c0, rt1.c4, rt1.c0, rt1.c2, rt1.c3, rt1.c1 FROM vt1, vt0, rt1 GROUP BY vt1.c0, rt1.c4, rt1.c0, rt1.c2, rt1.c3, rt1.c1 HAVING ((TOTAL(CASE MIN(TOTAL(MAX(MAX(rt1.c0))))  WHEN SUM(vt1.c0) THEN TOTAL(rt1.c0) END)) ISNULL);
SELECT * FROM vt1, rt1 INNER JOIN vt0 ON CAST(CAST(vt1.c0 AS INTEGER) AS INTEGER);
SELECT ALL * FROM vt1, rt1 INNER JOIN vt0 ON CAST(CAST(vt1.c0 AS INTEGER) AS INTEGER) WHERE (rt1.c4) UNION ALL SELECT * FROM vt1, rt1 INNER JOIN vt0 ON CAST(CAST(vt1.c0 AS INTEGER) AS INTEGER) WHERE ((NOT (rt1.c4))) UNION ALL SELECT * FROM vt1, rt1 INNER JOIN vt0 ON CAST(CAST(vt1.c0 AS INTEGER) AS INTEGER) WHERE (((rt1.c4) ISNULL));
SELECT * FROM vt1, rt1 INNER JOIN vt0 ON CAST(CAST(vt1.c0 AS INTEGER) AS INTEGER);
SELECT DISTINCT rt1.c2, rt1.c3, rt1.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN rt1 ON CAST((- (rt1.c2)) AS INTEGER) INNER JOIN vt0 ON (((((rt1.c4)) BETWEEN ((rt1.c4)) AND ((vt0.c0)))) ISNULL);
SELECT DISTINCT rt1.c2, rt1.c3, rt1.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN rt1 ON CAST((- (rt1.c2)) AS INTEGER) INNER JOIN vt0 ON (((((rt1.c4)) BETWEEN ((rt1.c4)) AND ((vt0.c0)))) ISNULL) WHERE ((((rt1.c0 IN ())) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c3 END) AND (TRIM(DISTINCT rt1.c1, NULL)))) UNION SELECT DISTINCT rt1.c2, rt1.c3, rt1.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN rt1 ON CAST((- (rt1.c2)) AS INTEGER) INNER JOIN vt0 ON (((((rt1.c4)) BETWEEN ((rt1.c4)) AND ((vt0.c0)))) ISNULL) WHERE ((NOT ((((rt1.c0 IN ())) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c3 END) AND (TRIM(DISTINCT rt1.c1, NULL)))))) UNION SELECT DISTINCT rt1.c2, rt1.c3, rt1.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN rt1 ON CAST((- (rt1.c2)) AS INTEGER) INNER JOIN vt0 ON (((((rt1.c4)) BETWEEN ((rt1.c4)) AND ((vt0.c0)))) ISNULL) WHERE ((((((rt1.c0 IN ())) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c3 END) AND (TRIM(DISTINCT rt1.c1, NULL)))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c3, rt1.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN rt1 ON CAST((- (rt1.c2)) AS INTEGER) INNER JOIN vt0 ON (((((rt1.c4)) BETWEEN ((rt1.c4)) AND ((vt0.c0)))) ISNULL);
SELECT ALL vt0.c0, rt1.c0, rt1.c3, rt1.c2, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN CAST(rt1.c0 AS INTEGER) THEN json_array_length(rt1.c3) END INNER JOIN rt1 ON rt1.c3 GROUP BY vt0.c0, rt1.c0, rt1.c3, rt1.c2, vt1.c0;
SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING ((rt1.c4) NOT BETWEEN (rt1.c0) AND (COUNT(COUNT(*)))) COLLATE RTRIM UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING (NOT (((rt1.c4) NOT BETWEEN (rt1.c0) AND (COUNT(COUNT(*)))) COLLATE RTRIM)) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING ((((rt1.c4) NOT BETWEEN (rt1.c0) AND (COUNT(COUNT(*)))) COLLATE RTRIM) ISNULL);
SELECT ALL * FROM vt0, rt1, vt1;
SELECT ALL * FROM vt0, rt1, vt1 WHERE (((((x'')>(rt1.c4)))||(rt1.c2 COLLATE NOCASE))) ORDER BY (((vt0.c0))<=((vt0.c0))) COLLATE RTRIM  NULLS LAST;
SELECT * FROM vt0, rt1, vt1 WHERE ((NOT (((((x'')>(rt1.c4)))||(rt1.c2 COLLATE NOCASE))))) ORDER BY (((vt0.c0))<=((vt0.c0))) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM vt0, rt1, vt1 WHERE (((((((x'')>(rt1.c4)))||(rt1.c2 COLLATE NOCASE))) ISNULL)) ORDER BY (((vt0.c0))<=((vt0.c0))) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM vt0, rt1, vt1;
SELECT DISTINCT rt1.c4, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt1, vt0;
SELECT DISTINCT rt1.c4, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt1, vt0 WHERE ((NOT (rt1.c1)) COLLATE RTRIM) UNION SELECT DISTINCT rt1.c4, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt1, vt0 WHERE ((NOT ((NOT (rt1.c1)) COLLATE RTRIM))) UNION SELECT DISTINCT rt1.c4, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt1, vt0 WHERE ((((NOT (rt1.c1)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt1.c4, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt1, vt0;
SELECT rt1.c2, rt1.c3, rt1.c4, rt1.c0, rt1.c1, vt0.c0 FROM rt1 LEFT OUTER JOIN vt0 ON ((highlight(rt1.c3, rt1.c2, vt0.c0, rt1.c3)) NOT BETWEEN (rt1.c1 COLLATE RTRIM) AND (vt0.c0)) GROUP BY rt1.c2, rt1.c3, rt1.c4, rt1.c0, rt1.c1, vt0.c0;
SELECT vt0.c0, rt1.c4, rt1.c1, rt1.c0 FROM rt1, vt0 FULL OUTER JOIN vt1 ON LOWER(DISTINCT ((rt1.c3) IS FALSE)) GROUP BY vt0.c0, rt1.c4, rt1.c1, rt1.c0;
SELECT ALL vt0.c0, rt1.c4, rt1.c1, rt1.c0 FROM rt1, vt0 FULL OUTER JOIN vt1 ON LOWER(DISTINCT ((rt1.c3) IS FALSE)) GROUP BY vt0.c0, rt1.c4, rt1.c1, rt1.c0 HAVING COUNT(GROUP_CONCAT(COUNT(rt1.c0))) UNION ALL SELECT vt0.c0, rt1.c4, rt1.c1, rt1.c0 FROM rt1, vt0 FULL OUTER JOIN vt1 ON LOWER(DISTINCT ((rt1.c3) IS FALSE)) GROUP BY vt0.c0, rt1.c4, rt1.c1, rt1.c0 HAVING (NOT (COUNT(GROUP_CONCAT(COUNT(rt1.c0))))) UNION ALL SELECT vt0.c0, rt1.c4, rt1.c1, rt1.c0 FROM rt1, vt0 FULL OUTER JOIN vt1 ON LOWER(DISTINCT ((rt1.c3) IS FALSE)) GROUP BY vt0.c0, rt1.c4, rt1.c1, rt1.c0 HAVING ((COUNT(GROUP_CONCAT(COUNT(rt1.c0)))) ISNULL);
SELECT ALL * FROM vt0, rt1, vt1;
SELECT * FROM vt0, rt1, vt1 WHERE ((((rt1.c2, rt1.c1, vt1.c0)) BETWEEN ((((rt1.c0)>=(vt0.c0)), LAST_INSERT_ROWID(), (x'' IN ()))) AND ((CASE WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 ELSE vt1.c0 END, ((vt1.c0)>>(rt1.c4)), (((rt1.c1))<=((vt1.c0))))))) UNION ALL SELECT * FROM vt0, rt1, vt1 WHERE ((NOT ((((rt1.c2, rt1.c1, vt1.c0)) BETWEEN ((((rt1.c0)>=(vt0.c0)), LAST_INSERT_ROWID(), (x'' IN ()))) AND ((CASE WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 ELSE vt1.c0 END, ((vt1.c0)>>(rt1.c4)), (((rt1.c1))<=((vt1.c0))))))))) UNION ALL SELECT ALL * FROM vt0, rt1, vt1 WHERE ((((((rt1.c2, rt1.c1, vt1.c0)) BETWEEN ((((rt1.c0)>=(vt0.c0)), LAST_INSERT_ROWID(), (x'' IN ()))) AND ((CASE WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 ELSE vt1.c0 END, ((vt1.c0)>>(rt1.c4)), (((rt1.c1))<=((vt1.c0))))))) ISNULL));
SELECT ALL * FROM vt0, rt1, vt1;
SELECT DISTINCT * FROM vt0, rt1, vt1;
SELECT DISTINCT * FROM vt0, rt1, vt1 WHERE (CAST(((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM vt0, rt1, vt1 WHERE ((NOT (CAST(((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0, rt1, vt1 WHERE (((CAST(((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt0, rt1, vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE (~ (vt0.c0))  WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, NULL))) ELSE ((vt0.c0)==(vt0.c0)) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE (~ (vt0.c0))  WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, NULL))) ELSE ((vt0.c0)=(vt0.c0)) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE (~ (vt0.c0))  WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, NULL))) ELSE ((vt0.c0)==(vt0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, vt1.c0, rt1.c2, rt1.c0, rt1.c3 FROM rt1, vt0, vt1 GROUP BY vt0.c0, vt1.c0, rt1.c2, rt1.c0, rt1.c3;
SELECT ALL vt0.c0, vt1.c0, rt1.c2, rt1.c0, rt1.c3 FROM rt1, vt0, vt1 GROUP BY vt0.c0, vt1.c0, rt1.c2, rt1.c0, rt1.c3 HAVING (((+ (GROUP_CONCAT(MIN(AVG(COUNT(SUM(COUNT(*)))))))))==(COUNT(rt1.c1))) UNION ALL SELECT ALL vt0.c0, vt1.c0, rt1.c2, rt1.c0, rt1.c3 FROM rt1, vt0, vt1 GROUP BY vt0.c0, vt1.c0, rt1.c2, rt1.c0, rt1.c3 HAVING (NOT ((((+ (GROUP_CONCAT(MIN(AVG(COUNT(SUM(COUNT(*)))))))))==(COUNT(rt1.c1))))) UNION ALL SELECT vt0.c0, vt1.c0, rt1.c2, rt1.c0, rt1.c3 FROM rt1, vt0, vt1 GROUP BY vt0.c0, vt1.c0, rt1.c2, rt1.c0, rt1.c3 HAVING (((((+ (GROUP_CONCAT(MIN(AVG(COUNT(SUM(COUNT(*)))))))))==(COUNT(rt1.c1)))) ISNULL);
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (((CAST(rt1.c1 AS REAL))-((rt1.c0 IN ())))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (((CAST(rt1.c1 AS REAL))-((rt1.c0 IN ())))))) UNION ALL SELECT * FROM rt1 WHERE (((((CAST(rt1.c1 AS REAL))-((rt1.c0 IN ())))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (vt1.c0 COLLATE NOCASE IN ());
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (vt1.c0 COLLATE NOCASE IN ()) WHERE ((((vt1.c0 IN ()))IS NOT(((vt0.c0) ISNULL)))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (vt1.c0 COLLATE NOCASE IN ()) WHERE ((NOT ((((vt1.c0 IN ()))IS NOT(((vt0.c0) ISNULL)))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (vt1.c0 COLLATE NOCASE IN ()) WHERE ((((((vt1.c0 IN ()))IS NOT(((vt0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (vt1.c0 COLLATE NOCASE IN ());
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT rt1.c4, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c4, rt1.c0;
SELECT ALL rt1.c4, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c4, rt1.c0 HAVING (((((rt1.c1, SUM(x''), rt1.c3))<>((rt1.c3, COUNT(MIN(SUM(MAX(rt1.c3)))), rt1.c3))))<(0.043716535524492506)) UNION ALL SELECT rt1.c4, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c4, rt1.c0 HAVING (NOT ((((((rt1.c1, SUM(x''), rt1.c3))<>((rt1.c3, COUNT(MIN(SUM(MAX(rt1.c3)))), rt1.c3))))<(0.043716535524492506)))) UNION ALL SELECT rt1.c4, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c4, rt1.c0 HAVING (((((((rt1.c1, SUM(x''), rt1.c3))<>((rt1.c3, COUNT(MIN(SUM(MAX(rt1.c3)))), rt1.c3))))<(0.043716535524492506))) ISNULL);
SELECT ALL rt1.c0, rt1.c3, vt0.c0, rt1.c1, rt1.c4 FROM vt0, vt1 INNER JOIN rt1 ON ((vt1.c0)<<(((rt1.c1)>(vt1.c0))));
SELECT ALL rt1.c0, rt1.c3, vt0.c0, rt1.c1, rt1.c4 FROM vt0, vt1 INNER JOIN rt1 ON ((vt1.c0)<<(((rt1.c1)>(vt1.c0)))) WHERE (((vt1.c0) NOT BETWEEN (((((rt1.c1)OR(rt1.c0)))AND(rt1.c1))) AND (((rt1.c4)>>(rt1.c4))))) UNION ALL SELECT rt1.c0, rt1.c3, vt0.c0, rt1.c1, rt1.c4 FROM vt0, vt1 INNER JOIN rt1 ON ((vt1.c0)<<(((rt1.c1)>(vt1.c0)))) WHERE ((NOT (((vt1.c0) NOT BETWEEN (((((rt1.c1)OR(rt1.c0)))AND(rt1.c1))) AND (((rt1.c4)>>(rt1.c4))))))) UNION ALL SELECT rt1.c0, rt1.c3, vt0.c0, rt1.c1, rt1.c4 FROM vt0, vt1 INNER JOIN rt1 ON ((vt1.c0)<<(((rt1.c1)>(vt1.c0)))) WHERE (((((vt1.c0) NOT BETWEEN (((((rt1.c1)OR(rt1.c0)))AND(rt1.c1))) AND (((rt1.c4)>>(rt1.c4))))) ISNULL));
SELECT ALL rt1.c0, rt1.c3, vt0.c0, rt1.c1, rt1.c4 FROM vt0, vt1 INNER JOIN rt1 ON ((vt1.c0)<<(((rt1.c1)>(vt1.c0))));
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, '1670296142', vt1.c0)))) IS FALSE)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, '1670296142', vt1.c0)))) IS FALSE)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, '1670296142', vt1.c0)))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt1.c1, rt1.c3, vt0.c0, rt1.c4 FROM vt1, vt0 CROSS JOIN rt1 ON CAST((vt1.c0 IN ()) AS NUMERIC) GROUP BY rt1.c1, rt1.c3, vt0.c0, rt1.c4;
SELECT ALL rt1.c1, rt1.c3, vt0.c0, rt1.c4 FROM vt1, vt0 CROSS JOIN rt1 ON CAST((vt1.c0 IN ()) AS NUMERIC) WHERE (0x49ae13ae) GROUP BY rt1.c1, rt1.c3, vt0.c0, rt1.c4 UNION SELECT ALL rt1.c1, rt1.c3, vt0.c0, rt1.c4 FROM vt1, vt0 CROSS JOIN rt1 ON CAST((vt1.c0 IN ()) AS NUMERIC) WHERE ((NOT (0x49ae13ae))) GROUP BY rt1.c1, rt1.c3, vt0.c0, rt1.c4 UNION SELECT ALL rt1.c1, rt1.c3, vt0.c0, rt1.c4 FROM vt1, vt0 CROSS JOIN rt1 ON CAST((vt1.c0 IN ()) AS NUMERIC) WHERE (((0X49ae13ae) ISNULL)) GROUP BY rt1.c1, rt1.c3, vt0.c0, rt1.c4;
SELECT ALL rt1.c1, rt1.c3, vt0.c0, rt1.c4 FROM vt1, vt0 CROSS JOIN rt1 ON CAST((vt1.c0 IN ()) AS NUMERIC) GROUP BY rt1.c1, rt1.c3, vt0.c0, rt1.c4;
SELECT ALL rt1.c4, rt1.c3, vt1.c0, vt0.c0, rt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c4, rt1.c3, vt1.c0, vt0.c0, rt1.c0;
SELECT rt1.c4, rt1.c3, vt1.c0, vt0.c0, rt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c4, rt1.c3, vt1.c0, vt0.c0, rt1.c0 HAVING TOTAL(((((((((GROUP_CONCAT(rt1.c4))AND(COUNT(MIN(TOTAL(rt1.c1))))))OR(vt1.c0)))OR(vt0.c0)))AND(COUNT(TOTAL(AVG(SUM(rt1.c1))))))) UNION ALL SELECT ALL rt1.c4, rt1.c3, vt1.c0, vt0.c0, rt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c4, rt1.c3, vt1.c0, vt0.c0, rt1.c0 HAVING (NOT (TOTAL(((((((((GROUP_CONCAT(rt1.c4))AND(COUNT(MIN(TOTAL(rt1.c1))))))OR(vt1.c0)))OR(vt0.c0)))AND(COUNT(TOTAL(AVG(SUM(rt1.c1))))))))) UNION ALL SELECT rt1.c4, rt1.c3, vt1.c0, vt0.c0, rt1.c0 FROM vt0, vt1, rt1 GROUP BY rt1.c4, rt1.c3, vt1.c0, vt0.c0, rt1.c0 HAVING ((TOTAL(((((((((GROUP_CONCAT(rt1.c4))AND(COUNT(MIN(TOTAL(rt1.c1))))))OR(vt1.c0)))OR(vt0.c0)))AND(COUNT(TOTAL(AVG(SUM(rt1.c1)))))))) ISNULL);
SELECT * FROM vt1, rt1, vt0;
SELECT * FROM vt1, rt1, vt0 WHERE (CAST((+ (rt1.c4)) AS INTEGER)) UNION ALL SELECT ALL * FROM vt1, rt1, vt0 WHERE ((NOT (CAST((+ (rt1.c4)) AS INTEGER)))) UNION ALL SELECT ALL * FROM vt1, rt1, vt0 WHERE (((CAST((+ (rt1.c4)) AS INTEGER)) ISNULL));
SELECT * FROM vt1, rt1, vt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 NOT INDEXED WHERE ((NOT ((+ (rt1.c4))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((NOT ((+ (rt1.c4))))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((NOT ((+ (rt1.c4))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c2, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0;
SELECT rt1.c2, vt1.c0 FROM vt1, rt1 WHERE (((((((rt1.c2)<(rt1.c0)))OR(vt1.c0)))AND(rt1.c4))) GROUP BY rt1.c2, vt1.c0 UNION SELECT ALL rt1.c2, vt1.c0 FROM vt1, rt1 WHERE ((NOT (((((((rt1.c2)<(rt1.c0)))OR(vt1.c0)))AND(rt1.c4))))) GROUP BY rt1.c2, vt1.c0 UNION SELECT ALL rt1.c2, vt1.c0 FROM vt1, rt1 WHERE (((((((((rt1.c2)<(rt1.c0)))OR(vt1.c0)))AND(rt1.c4))) ISNULL)) GROUP BY rt1.c2, vt1.c0;
SELECT rt1.c2, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0;
SELECT ALL rt1.c0, rt1.c4, vt0.c0, rt1.c2 FROM rt1, vt0 NOT INDEXED GROUP BY rt1.c0, rt1.c4, vt0.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c4, vt0.c0, rt1.c2 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c4, vt0.c0, rt1.c2 HAVING MAX((rt1.c3 IN ())) UNION ALL SELECT ALL rt1.c0, rt1.c4, vt0.c0, rt1.c2 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c4, vt0.c0, rt1.c2 HAVING (NOT (MAX((rt1.c3 IN ())))) UNION ALL SELECT ALL rt1.c0, rt1.c4, vt0.c0, rt1.c2 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c4, vt0.c0, rt1.c2 HAVING ((MAX((rt1.c3 IN ()))) ISNULL);
SELECT ALL rt1.c0, rt1.c4, vt0.c0, rt1.c2 FROM rt1, vt0 NOT INDEXED GROUP BY rt1.c0, rt1.c4, vt0.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c4, vt0.c0, rt1.c2 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c4, vt0.c0, rt1.c2 HAVING MAX((rt1.c3 IN ())) UNION ALL SELECT ALL rt1.c0, rt1.c4, vt0.c0, rt1.c2 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c4, vt0.c0, rt1.c2 HAVING (NOT (MAX((rt1.c3 IN ())))) UNION ALL SELECT ALL rt1.c0, rt1.c4, vt0.c0, rt1.c2 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c4, vt0.c0, rt1.c2 HAVING ((MAX((rt1.c3 IN ()))) ISNULL);
SELECT ALL rt1.c0, rt1.c4, vt0.c0, rt1.c2 FROM rt1, vt0 NOT INDEXED GROUP BY rt1.c0, rt1.c4, vt0.c0, rt1.c2;
SELECT * FROM vt1 CROSS JOIN rt1 ON (((rt1.c3)) NOT BETWEEN (((rt1.c2 IN (rt1.c2, rt1.c1)))) AND (((rt1.c0 IN ()))));
SELECT ALL * FROM vt1 CROSS JOIN rt1 ON (((rt1.c3)) NOT BETWEEN (((rt1.c2 IN (rt1.c2, rt1.c1)))) AND (((rt1.c0 IN ())))) WHERE (((((((((((((((((rt1.c4)AND(rt1.c0)))AND(rt1.c0)))AND(0.35462214784043045)))AND(rt1.c3)))OR((((rt1.c1, rt1.c4, rt1.c0))<=((rt1.c0, 1020650593, rt1.c4))))))AND((('C3J')=(rt1.c3)))))AND(((rt1.c1)%(rt1.c2)))))AND(CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c4 END))) UNION ALL SELECT ALL * FROM vt1 CROSS JOIN rt1 ON (((rt1.c3)) NOT BETWEEN (((rt1.c2 IN (rt1.c2, rt1.c1)))) AND (((rt1.c0 IN ())))) WHERE ((NOT (((((((((((((((((rt1.c4)AND(rt1.c0)))AND(rt1.c0)))AND(0.35462214784043045)))AND(rt1.c3)))OR((((rt1.c1, rt1.c4, rt1.c0))<=((rt1.c0, 1020650593, rt1.c4))))))AND((('C3J')=(rt1.c3)))))AND(((rt1.c1)%(rt1.c2)))))AND(CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c4 END))))) UNION ALL SELECT * FROM vt1 CROSS JOIN rt1 ON (((rt1.c3)) NOT BETWEEN (((rt1.c2 IN (rt1.c2, rt1.c1)))) AND (((rt1.c0 IN ())))) WHERE (((((((((((((((((((rt1.c4)AND(rt1.c0)))AND(rt1.c0)))AND(0.35462214784043045)))AND(rt1.c3)))OR((((rt1.c1, rt1.c4, rt1.c0))<=((rt1.c0, 1020650593, rt1.c4))))))AND((('C3J')==(rt1.c3)))))AND(((rt1.c1)%(rt1.c2)))))AND(CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c4 END))) ISNULL));
SELECT * FROM vt1 CROSS JOIN rt1 ON (((rt1.c3)) NOT BETWEEN (((rt1.c2 IN (rt1.c2, rt1.c1)))) AND (((rt1.c0 IN ()))));
SELECT DISTINCT rt1.c3, vt0.c0, vt1.c0, rt1.c2 FROM vt1, vt0, rt1;
SELECT DISTINCT rt1.c3, vt0.c0, vt1.c0, rt1.c2 FROM vt1, vt0, rt1 WHERE (((rt1.c4) BETWEEN (0.4499386076417009) AND (vt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT rt1.c3, vt0.c0, vt1.c0, rt1.c2 FROM vt1, vt0, rt1 WHERE ((NOT (((rt1.c4) BETWEEN (0.4499386076417009) AND (vt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT rt1.c3, vt0.c0, vt1.c0, rt1.c2 FROM vt1, vt0, rt1 WHERE (((((rt1.c4) BETWEEN (0.4499386076417009) AND (vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt1.c3, vt0.c0, vt1.c0, rt1.c2 FROM vt1, vt0, rt1;
SELECT ALL rt1.c0, rt1.c2, vt1.c0, rt1.c4 FROM rt1, vt0, vt1 GROUP BY rt1.c0, rt1.c2, vt1.c0, rt1.c4;
SELECT rt1.c0, rt1.c2, vt1.c0, rt1.c4 FROM rt1, vt0, vt1 WHERE (CASE json_array(rt1.c2, rt1.c1)  WHEN ((rt1.c3) BETWEEN (rt1.c3) AND (vt1.c0)) THEN (+ (rt1.c0)) ELSE UNLIKELY(rt1.c3) END) GROUP BY rt1.c0, rt1.c2, vt1.c0, rt1.c4 UNION SELECT ALL rt1.c0, rt1.c2, vt1.c0, rt1.c4 FROM rt1, vt0, vt1 WHERE ((NOT (CASE json_array(rt1.c2, rt1.c1)  WHEN ((rt1.c3) BETWEEN (rt1.c3) AND (vt1.c0)) THEN (+ (rt1.c0)) ELSE UNLIKELY(rt1.c3) END))) GROUP BY rt1.c0, rt1.c2, vt1.c0, rt1.c4 UNION SELECT ALL rt1.c0, rt1.c2, vt1.c0, rt1.c4 FROM rt1, vt0, vt1 WHERE (((CASE json_array(rt1.c2, rt1.c1)  WHEN ((rt1.c3) BETWEEN (rt1.c3) AND (vt1.c0)) THEN (+ (rt1.c0)) ELSE UNLIKELY(rt1.c3) END) ISNULL)) GROUP BY rt1.c0, rt1.c2, vt1.c0, rt1.c4;
SELECT ALL rt1.c0, rt1.c2, vt1.c0, rt1.c4 FROM rt1, vt0, vt1 GROUP BY rt1.c0, rt1.c2, vt1.c0, rt1.c4;
SELECT vt1.c0, rt1.c4 FROM rt1 CROSS JOIN vt0 ON ((NULL) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (rt1.c3))) AND ('9|')) LEFT OUTER JOIN vt1 ON vt1.c0 GROUP BY vt1.c0, rt1.c4;
SELECT ALL vt1.c0, rt1.c4 FROM rt1 CROSS JOIN vt0 ON ((NULL) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (rt1.c3))) AND ('9|')) LEFT OUTER JOIN vt1 ON vt1.c0 GROUP BY vt1.c0, rt1.c4 HAVING MAX(GROUP_CONCAT(x'')) UNION ALL SELECT vt1.c0, rt1.c4 FROM rt1 CROSS JOIN vt0 ON ((NULL) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (rt1.c3))) AND ('9|')) LEFT OUTER JOIN vt1 ON vt1.c0 GROUP BY vt1.c0, rt1.c4 HAVING (NOT (MAX(GROUP_CONCAT(x'')))) UNION ALL SELECT vt1.c0, rt1.c4 FROM rt1 CROSS JOIN vt0 ON ((NULL) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (rt1.c3))) AND ('9|')) LEFT OUTER JOIN vt1 ON vt1.c0 GROUP BY vt1.c0, rt1.c4 HAVING ((MAX(GROUP_CONCAT(x''))) ISNULL);
SELECT rt1.c4, rt1.c3, rt1.c2, rt1.c1 FROM rt1;
SELECT ALL rt1.c4, rt1.c3, rt1.c2, rt1.c1 FROM rt1 WHERE (rt1.c3) UNION ALL SELECT ALL rt1.c4, rt1.c3, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (rt1.c3))) UNION ALL SELECT rt1.c4, rt1.c3, rt1.c2, rt1.c1 FROM rt1 WHERE (((rt1.c3) ISNULL));
SELECT rt1.c4, rt1.c3, rt1.c2, rt1.c1 FROM rt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt1.c3, vt1.c0, rt1.c2 FROM vt0, rt1, vt1 GROUP BY rt1.c3, vt1.c0, rt1.c2;
SELECT ALL rt1.c3, vt1.c0, rt1.c2 FROM vt0, rt1, vt1 WHERE (((((CASE rt1.c1  WHEN rt1.c3 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN x'f1e0' THEN rt1.c4 END)OR(((((((((rt1.c1)OR(vt1.c0)))AND(vt0.c0)))AND(rt1.c3)))OR(rt1.c2)))))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt0.c0))))) GROUP BY rt1.c3, vt1.c0, rt1.c2 UNION SELECT rt1.c3, vt1.c0, rt1.c2 FROM vt0, rt1, vt1 WHERE ((NOT (((((CASE rt1.c1  WHEN rt1.c3 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN x'f1e0' THEN rt1.c4 END)OR(((((((((rt1.c1)OR(vt1.c0)))AND(vt0.c0)))AND(rt1.c3)))OR(rt1.c2)))))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt0.c0))))))) GROUP BY rt1.c3, vt1.c0, rt1.c2 UNION SELECT ALL rt1.c3, vt1.c0, rt1.c2 FROM vt0, rt1, vt1 WHERE (((((((CASE rt1.c1  WHEN rt1.c3 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN x'f1e0' THEN rt1.c4 END)OR(((((((((rt1.c1)OR(vt1.c0)))AND(vt0.c0)))AND(rt1.c3)))OR(rt1.c2)))))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt0.c0))))) ISNULL)) GROUP BY rt1.c3, vt1.c0, rt1.c2;
SELECT ALL rt1.c3, vt1.c0, rt1.c2 FROM vt0, rt1, vt1 GROUP BY rt1.c3, vt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c2, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c2, vt1.c0;
SELECT ALL rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c2, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c2, vt1.c0 HAVING ((AVG(COUNT(*)))<=(((NULL)<(vt1.c0)))) UNION ALL SELECT ALL rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c2, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c2, vt1.c0 HAVING (NOT (((AVG(COUNT(*)))<=(((NULL)<(vt1.c0)))))) UNION ALL SELECT ALL rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c2, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c2, vt1.c0 HAVING ((((AVG(COUNT(*)))<=(((NULL)<(vt1.c0))))) ISNULL);
SELECT * FROM vt0 INNER JOIN vt1 ON (((vt0.c0)) BETWEEN ((COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0))) AND ((vt1.c0 COLLATE NOCASE)));
SELECT * FROM vt0 INNER JOIN vt1 ON (((vt0.c0)) BETWEEN ((COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0))) AND ((vt1.c0 COLLATE NOCASE))) WHERE ((((vt1.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) UNION ALL SELECT * FROM vt0 INNER JOIN vt1 ON (((vt0.c0)) BETWEEN ((COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0))) AND ((vt1.c0 COLLATE NOCASE))) WHERE ((NOT ((((vt1.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN vt1 ON (((vt0.c0)) BETWEEN ((COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0))) AND ((vt1.c0 COLLATE NOCASE))) WHERE ((((((vt1.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) ISNULL));
SELECT * FROM vt0 INNER JOIN vt1 ON (((vt0.c0)) BETWEEN ((COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0))) AND ((vt1.c0 COLLATE NOCASE)));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 AS REAL) COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS REAL) COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS REAL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt1.c1, rt1.c2, rt1.c3 FROM vt0 CROSS JOIN rt1 ON (((((rt1.c4)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))) NOT BETWEEN (CASE rt1.c1  WHEN x'' THEN 0xffffffff8debe8c9 ELSE rt1.c2 END) AND (((vt0.c0)<>(vt0.c0)))) GROUP BY rt1.c1, rt1.c2, rt1.c3;
SELECT ALL rt1.c1, rt1.c2, rt1.c3 FROM vt0 CROSS JOIN rt1 ON (((((rt1.c4)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))) NOT BETWEEN (CASE rt1.c1  WHEN x'' THEN 0xffffffff8debe8c9 ELSE rt1.c2 END) AND (((vt0.c0)<>(vt0.c0)))) WHERE (rt1.c0) GROUP BY rt1.c1, rt1.c2, rt1.c3 UNION SELECT rt1.c1, rt1.c2, rt1.c3 FROM vt0 CROSS JOIN rt1 ON (((((rt1.c4)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))) NOT BETWEEN (CASE rt1.c1  WHEN x'' THEN 0Xffffffff8debe8c9 ELSE rt1.c2 END) AND (((vt0.c0)<>(vt0.c0)))) WHERE ((NOT (rt1.c0))) GROUP BY rt1.c1, rt1.c2, rt1.c3 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c3 FROM vt0 CROSS JOIN rt1 ON (((((rt1.c4)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))) NOT BETWEEN (CASE rt1.c1  WHEN x'' THEN 0xffffffff8debe8c9 ELSE rt1.c2 END) AND (((vt0.c0)<>(vt0.c0)))) WHERE (((rt1.c0) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c3;
SELECT rt1.c1, rt1.c2, rt1.c3 FROM vt0 CROSS JOIN rt1 ON (((((rt1.c4)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))) NOT BETWEEN (CASE rt1.c1  WHEN x'' THEN 0xffffffff8debe8c9 ELSE rt1.c2 END) AND (((vt0.c0)<>(vt0.c0)))) GROUP BY rt1.c1, rt1.c2, rt1.c3;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0)%(vt1.c0)))IS NOT(AVG(0Xffffffff9046c7ec))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((vt1.c0)%(vt1.c0)))IS NOT(AVG(0xffffffff9046c7ec))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((vt1.c0)%(vt1.c0)))IS NOT(AVG(0Xffffffff9046c7ec)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0)%(vt1.c0)))IS NOT(AVG(0Xffffffff9046c7ec))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((vt1.c0)%(vt1.c0)))IS NOT(AVG(0xffffffff9046c7ec))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((vt1.c0)%(vt1.c0)))IS NOT(AVG(0Xffffffff9046c7ec)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((vt1.c0 COLLATE RTRIM)<=(((vt1.c0)GLOB(vt1.c0))));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON ((vt1.c0 COLLATE RTRIM)<=(((vt1.c0)GLOB(vt1.c0)))) WHERE (LOWER(vt0.c0) COLLATE BINARY) UNION ALL SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((vt1.c0 COLLATE RTRIM)<=(((vt1.c0)GLOB(vt1.c0)))) WHERE ((NOT (LOWER(vt0.c0) COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((vt1.c0 COLLATE RTRIM)<=(((vt1.c0)GLOB(vt1.c0)))) WHERE (((LOWER(vt0.c0) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((vt1.c0 COLLATE RTRIM)<=(((vt1.c0)GLOB(vt1.c0))));
SELECT DISTINCT * FROM rt1, vt0, vt1;
SELECT DISTINCT * FROM rt1, vt0, vt1 WHERE (((((((rt1.c1)<<(rt1.c4)))OR(CASE x''  WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c4 THEN vt1.c0 ELSE vt0.c0 END)))OR(x''))) UNION SELECT DISTINCT * FROM rt1, vt0, vt1 WHERE ((NOT (((((((rt1.c1)<<(rt1.c4)))OR(CASE x''  WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c4 THEN vt1.c0 ELSE vt0.c0 END)))OR(x''))))) UNION SELECT DISTINCT * FROM rt1, vt0, vt1 WHERE (((((((((rt1.c1)<<(rt1.c4)))OR(CASE x''  WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c4 THEN vt1.c0 ELSE vt0.c0 END)))OR(x''))) ISNULL));
SELECT DISTINCT * FROM rt1, vt0, vt1;
SELECT ALL rt1.c0 FROM rt1 FULL OUTER JOIN vt1 ON x'' GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 FULL OUTER JOIN vt1 ON x'' WHERE (((((rt1.c2)OR(rt1.c3 COLLATE NOCASE)))AND(((rt1.c1)||(rt1.c1))))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 FULL OUTER JOIN vt1 ON x'' WHERE ((NOT (((((rt1.c2)OR(rt1.c3 COLLATE NOCASE)))AND(((rt1.c1)||(rt1.c1))))))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 FULL OUTER JOIN vt1 ON x'' WHERE (((((((rt1.c2)OR(rt1.c3 COLLATE NOCASE)))AND(((rt1.c1)||(rt1.c1))))) ISNULL)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 FULL OUTER JOIN vt1 ON x'' GROUP BY rt1.c0;
SELECT ALL rt1.c1, rt1.c0, vt0.c0, rt1.c4, vt1.c0, rt1.c3 FROM vt0, vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt0.c0, rt1.c4, vt1.c0, rt1.c3;
SELECT ALL rt1.c1, rt1.c0, vt0.c0, rt1.c4, vt1.c0, rt1.c3 FROM vt0, vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt0.c0, rt1.c4, vt1.c0, rt1.c3 HAVING vt1.c0 UNION ALL SELECT ALL rt1.c1, rt1.c0, vt0.c0, rt1.c4, vt1.c0, rt1.c3 FROM vt0, vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt0.c0, rt1.c4, vt1.c0, rt1.c3 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL rt1.c1, rt1.c0, vt0.c0, rt1.c4, vt1.c0, rt1.c3 FROM vt0, vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt0.c0, rt1.c4, vt1.c0, rt1.c3 HAVING ((vt1.c0) ISNULL);
SELECT ALL rt1.c1, rt1.c0, vt0.c0, rt1.c4, vt1.c0, rt1.c3 FROM vt0, vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt0.c0, rt1.c4, vt1.c0, rt1.c3;
SELECT ALL rt1.c1, rt1.c0, vt0.c0, rt1.c4, vt1.c0, rt1.c3 FROM vt0, vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt0.c0, rt1.c4, vt1.c0, rt1.c3 HAVING vt1.c0 UNION ALL SELECT ALL rt1.c1, rt1.c0, vt0.c0, rt1.c4, vt1.c0, rt1.c3 FROM vt0, vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt0.c0, rt1.c4, vt1.c0, rt1.c3 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL rt1.c1, rt1.c0, vt0.c0, rt1.c4, vt1.c0, rt1.c3 FROM vt0, vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt0.c0, rt1.c4, vt1.c0, rt1.c3 HAVING ((vt1.c0) ISNULL);
SELECT ALL rt1.c1, rt1.c0, vt0.c0, rt1.c4, vt1.c0, rt1.c3 FROM vt0, vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt0.c0, rt1.c4, vt1.c0, rt1.c3;
SELECT rt1.c0 FROM rt1, vt1;
SELECT ALL rt1.c0 FROM rt1, vt1 WHERE (rt1.c2) UNION ALL SELECT ALL rt1.c0 FROM rt1, vt1 WHERE ((NOT (rt1.c2))) UNION ALL SELECT ALL rt1.c0 FROM rt1, vt1 WHERE (((rt1.c2) ISNULL));
SELECT rt1.c0 FROM rt1, vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (x'f6cf') UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (x'f6cf'))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((x'f6cf') ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 WHERE ((((- (vt0.c0)))+('-297895999'))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 WHERE ((NOT ((((- (vt0.c0)))+('-297895999'))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((((((- (vt0.c0)))+('-297895999'))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING TOTAL((COUNT(AVG(COUNT(*))) IN ())) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (TOTAL((COUNT(AVG(COUNT(*))) IN ())))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((TOTAL((COUNT(AVG(COUNT(*))) IN ()))) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING TOTAL((COUNT(AVG(COUNT(*))) IN ())) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (TOTAL((COUNT(AVG(COUNT(*))) IN ())))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((TOTAL((COUNT(AVG(COUNT(*))) IN ()))) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC)))) UNION ALL SELECT * FROM vt1 WHERE (((CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((vt0.c0, vt0.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0)))) BETWEEN (((((vt1.c0)OR(0.687508632437793)))AND(vt1.c0))) AND (((vt1.c0)-(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((((((vt0.c0, vt0.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0)))) BETWEEN (((((vt1.c0)OR(0.687508632437793)))AND(vt1.c0))) AND (((vt1.c0)-(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((((vt0.c0, vt0.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0)))) BETWEEN (((((vt1.c0)OR(0.687508632437793)))AND(vt1.c0))) AND (((vt1.c0)-(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT rt1.c2, rt1.c0, vt1.c0 FROM vt1, vt0, rt1 GROUP BY rt1.c2, rt1.c0, vt1.c0;
SELECT ALL rt1.c2, rt1.c0, vt1.c0 FROM vt1, vt0, rt1 WHERE (((CASE WHEN rt1.c4 THEN 0.5236844178735063 ELSE rt1.c3 END)+(CASE rt1.c3  WHEN rt1.c3 THEN vt0.c0 ELSE rt1.c1 END))) GROUP BY rt1.c2, rt1.c0, vt1.c0 UNION SELECT ALL rt1.c2, rt1.c0, vt1.c0 FROM vt1, vt0, rt1 WHERE ((NOT (((CASE WHEN rt1.c4 THEN 0.5236844178735063 ELSE rt1.c3 END)+(CASE rt1.c3  WHEN rt1.c3 THEN vt0.c0 ELSE rt1.c1 END))))) GROUP BY rt1.c2, rt1.c0, vt1.c0 UNION SELECT ALL rt1.c2, rt1.c0, vt1.c0 FROM vt1, vt0, rt1 WHERE (((((CASE WHEN rt1.c4 THEN 0.5236844178735063 ELSE rt1.c3 END)+(CASE rt1.c3  WHEN rt1.c3 THEN vt0.c0 ELSE rt1.c1 END))) ISNULL)) GROUP BY rt1.c2, rt1.c0, vt1.c0;
SELECT rt1.c2, rt1.c0, vt1.c0 FROM vt1, vt0, rt1 GROUP BY rt1.c2, rt1.c0, vt1.c0;
SELECT rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0, vt1.c0 FROM vt0, rt1, vt1 GROUP BY rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0, vt1.c0;
SELECT ALL rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0, vt1.c0 FROM vt0, rt1, vt1 GROUP BY rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0, vt1.c0 FROM vt0, rt1, vt1 GROUP BY rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0, vt1.c0 FROM vt0, rt1, vt1 GROUP BY rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0, vt1.c0 FROM vt0, rt1, vt1 GROUP BY rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0, vt1.c0;
SELECT ALL rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0, vt1.c0 FROM vt0, rt1, vt1 GROUP BY rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0, vt1.c0 FROM vt0, rt1, vt1 GROUP BY rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0, vt1.c0 FROM vt0, rt1, vt1 GROUP BY rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0, vt1.c0 FROM vt0, rt1, vt1 GROUP BY rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0, vt1.c0;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CASE WHEN UPPER(vt1.c0) THEN (NOT (vt1.c0)) WHEN ((vt1.c0)+(vt1.c0)) THEN CASE -1024864727  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN UNLIKELY(DISTINCT vt1.c0) THEN ((vt1.c0)>(vt1.c0)) END) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CASE WHEN UPPER(vt1.c0) THEN (NOT (vt1.c0)) WHEN ((vt1.c0)+(vt1.c0)) THEN CASE -1024864727  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN UNLIKELY(DISTINCT vt1.c0) THEN ((vt1.c0)>(vt1.c0)) END))) UNION ALL SELECT * FROM vt1 WHERE (((CASE WHEN UPPER(vt1.c0) THEN (NOT (vt1.c0)) WHEN ((vt1.c0)+(vt1.c0)) THEN CASE -1024864727  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN UNLIKELY(DISTINCT vt1.c0) THEN ((vt1.c0)>(vt1.c0)) END) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)OR(((vt0.c0) NOT BETWEEN (x'ef0e') AND (vt0.c0)))))AND(CAST(vt0.c0 AS REAL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)OR(((vt0.c0) NOT BETWEEN (x'ef0e') AND (vt0.c0)))))AND(CAST(vt0.c0 AS REAL)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)OR(((vt0.c0) NOT BETWEEN (x'ef0e') AND (vt0.c0)))))AND(CAST(vt0.c0 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((~ (CAST(vt0.c0 AS REAL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((~ (CAST(vt0.c0 AS REAL)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((~ (CAST(vt0.c0 AS REAL)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING COALESCE(MIN(MIN(AVG(COUNT(*)))), ((SUM(rt1.c4))>=(rt1.c4))) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (COALESCE(MIN(MIN(AVG(COUNT(*)))), ((SUM(rt1.c4))>=(rt1.c4))))) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((COALESCE(MIN(MIN(AVG(COUNT(*)))), ((SUM(rt1.c4))>=(rt1.c4)))) ISNULL);
SELECT ALL * FROM vt0, rt1;
SELECT ALL * FROM vt0, rt1 WHERE (((((((((((x'')OR(0.9937488602244152)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)))AND(((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c3))))) UNION ALL SELECT * FROM vt0, rt1 WHERE ((NOT (((((((((((x'')OR(0.9937488602244152)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)))AND(((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c3))))))) UNION ALL SELECT * FROM vt0, rt1 WHERE (((((((((((((x'')OR(0.9937488602244152)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)))AND(((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c3))))) ISNULL));
SELECT ALL * FROM vt0, rt1;
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c3, vt0.c0, rt1.c4, vt1.c0, rt1.c2 FROM vt1, vt0, rt1;
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c3, vt0.c0, rt1.c4, vt1.c0, rt1.c2 FROM vt1, vt0, rt1 WHERE (((((((((((vt1.c0)OR(rt1.c0)))AND(vt1.c0)))OR('-682499582')))AND(rt1.c2))) NOT BETWEEN (rt1.c1) AND (vt1.c0))) UNION SELECT DISTINCT rt1.c0, rt1.c1, rt1.c3, vt0.c0, rt1.c4, vt1.c0, rt1.c2 FROM vt1, vt0, rt1 WHERE ((NOT (((((((((((vt1.c0)OR(rt1.c0)))AND(vt1.c0)))OR('-682499582')))AND(rt1.c2))) NOT BETWEEN (rt1.c1) AND (vt1.c0))))) UNION SELECT DISTINCT rt1.c0, rt1.c1, rt1.c3, vt0.c0, rt1.c4, vt1.c0, rt1.c2 FROM vt1, vt0, rt1 WHERE (((((((((((((vt1.c0)OR(rt1.c0)))AND(vt1.c0)))OR('-682499582')))AND(rt1.c2))) NOT BETWEEN (rt1.c1) AND (vt1.c0))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c3, vt0.c0, rt1.c4, vt1.c0, rt1.c2 FROM vt1, vt0, rt1;
SELECT rt1.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4;
SELECT rt1.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4 FROM rt1 WHERE (((((LIKELIHOOD(DISTINCT rt1.c0, 0.7473119342687845))OR(((x'2ec3') NOT BETWEEN (rt1.c3) AND (rt1.c3)))))OR(NULLIF(rt1.c1, rt1.c4)))) GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4 FROM rt1 WHERE ((NOT (((((LIKELIHOOD(DISTINCT rt1.c0, 0.7473119342687845))OR(((x'2ec3') NOT BETWEEN (rt1.c3) AND (rt1.c3)))))OR(NULLIF(rt1.c1, rt1.c4)))))) GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4 FROM rt1 NOT INDEXED WHERE (((((((LIKELIHOOD(DISTINCT rt1.c0, 0.7473119342687845))OR(((x'2ec3') NOT BETWEEN (rt1.c3) AND (rt1.c3)))))OR(NULLIF(rt1.c1, rt1.c4)))) ISNULL)) GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4;
SELECT rt1.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c4;
SELECT rt1.c0, rt1.c1, rt1.c3 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c3;
SELECT ALL rt1.c0, rt1.c1, rt1.c3 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c3 HAVING TOTAL(TOTAL(rt1.c0)) COLLATE RTRIM UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c3 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c3 HAVING (NOT (TOTAL(TOTAL(rt1.c0)) COLLATE RTRIM)) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c3 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c3 HAVING ((TOTAL(TOTAL(rt1.c0)) COLLATE RTRIM) ISNULL);
SELECT rt1.c1, rt1.c2, rt1.c4, rt1.c0, vt1.c0 FROM vt1, rt1 NATURAL JOIN vt0;
SELECT ALL rt1.c1, rt1.c2, rt1.c4, rt1.c0, vt1.c0 FROM vt1, rt1 NATURAL JOIN vt0 WHERE (((0Xffffffffb0246e40 COLLATE RTRIM) NOTNULL)) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c4, rt1.c0, vt1.c0 FROM vt1, rt1 NATURAL JOIN vt0 WHERE ((NOT (((0Xffffffffb0246e40 COLLATE RTRIM) NOTNULL)))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c4, rt1.c0, vt1.c0 FROM vt1, rt1 NATURAL JOIN vt0 WHERE (((((0Xffffffffb0246e40 COLLATE RTRIM) NOTNULL)) ISNULL));
SELECT rt1.c1, rt1.c2, rt1.c4, rt1.c0, vt1.c0 FROM vt1, rt1 NATURAL JOIN vt0;
SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1, vt1, vt0;
SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1, vt1, vt0 WHERE (LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.9700030312031639)) UNION SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1, vt1, vt0 WHERE ((NOT (LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.9700030312031639)))) UNION SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1, vt1, vt0 WHERE (((LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.9700030312031639)) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1, vt1, vt0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (vt1.c0 IN (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT ((vt1.c0 IN (COUNT(*))))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (((vt1.c0 IN (COUNT(*)))) ISNULL);
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (vt1.c0 IN (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT ((vt1.c0 IN (COUNT(*))))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (((vt1.c0 IN (COUNT(*)))) ISNULL);
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (CASE '!*'  WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0) NOTNULL) END) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (CASE '!*'  WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0) NOTNULL) END))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE (((CASE '!*'  WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0) NOTNULL) END) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, rt1, vt0;
SELECT DISTINCT * FROM vt1, rt1, vt0 WHERE (((((x'0103')+(rt1.c0))) NOT BETWEEN (((rt1.c2) IS TRUE)) AND (rt1.c4))) UNION SELECT DISTINCT * FROM vt1, rt1, vt0 WHERE ((NOT (((((x'0103')+(rt1.c0))) NOT BETWEEN (((rt1.c2) IS TRUE)) AND (rt1.c4))))) UNION SELECT DISTINCT * FROM vt1, rt1, vt0 WHERE (((((((x'0103')+(rt1.c0))) NOT BETWEEN (((rt1.c2) IS TRUE)) AND (rt1.c4))) ISNULL));
SELECT DISTINCT * FROM vt1, rt1, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN (vt1.c0))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING x'' UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((x'') ISNULL);
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING x'' UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((x'') ISNULL);
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL rt1.c1 FROM rt1;
SELECT ALL rt1.c1 FROM rt1 WHERE (((((((((CAST(rt1.c2 AS INTEGER))OR(CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c2 END)))OR(((((((((rt1.c3)AND(rt1.c1)))AND(rt1.c3)))OR(rt1.c1)))OR(rt1.c1)))))OR(((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c4)))AND(rt1.c1)))OR(rt1.c1)))))OR(((rt1.c0)*(rt1.c0))))) UNION ALL SELECT rt1.c1 FROM rt1 WHERE ((NOT (((((((((CAST(rt1.c2 AS INTEGER))OR(CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c2 END)))OR(((((((((rt1.c3)AND(rt1.c1)))AND(rt1.c3)))OR(rt1.c1)))OR(rt1.c1)))))OR(((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c4)))AND(rt1.c1)))OR(rt1.c1)))))OR(((rt1.c0)*(rt1.c0))))))) UNION ALL SELECT rt1.c1 FROM rt1 WHERE (((((((((((CAST(rt1.c2 AS INTEGER))OR(CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c2 END)))OR(((((((((rt1.c3)AND(rt1.c1)))AND(rt1.c3)))OR(rt1.c1)))OR(rt1.c1)))))OR(((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c4)))AND(rt1.c1)))OR(rt1.c1)))))OR(((rt1.c0)*(rt1.c0))))) ISNULL));
SELECT ALL rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c3, vt1.c0, rt1.c2, rt1.c0 FROM rt1 LEFT OUTER JOIN vt1 ON rt1.c4;
SELECT DISTINCT rt1.c3, vt1.c0, rt1.c2, rt1.c0 FROM rt1 LEFT OUTER JOIN vt1 ON rt1.c4 WHERE (NULLIF(CASE WHEN rt1.c0 THEN rt1.c1 ELSE vt1.c0 END, ((rt1.c4)IS NOT(rt1.c2)))) UNION SELECT DISTINCT rt1.c3, vt1.c0, rt1.c2, rt1.c0 FROM rt1 LEFT OUTER JOIN vt1 ON rt1.c4 WHERE ((NOT (NULLIF(CASE WHEN rt1.c0 THEN rt1.c1 ELSE vt1.c0 END, ((rt1.c4)IS NOT(rt1.c2)))))) UNION SELECT DISTINCT rt1.c3, vt1.c0, rt1.c2, rt1.c0 FROM rt1 LEFT OUTER JOIN vt1 ON rt1.c4 WHERE (((NULLIF(CASE WHEN rt1.c0 THEN rt1.c1 ELSE vt1.c0 END, ((rt1.c4)IS NOT(rt1.c2)))) ISNULL));
SELECT DISTINCT rt1.c3, vt1.c0, rt1.c2, rt1.c0 FROM rt1 LEFT OUTER JOIN vt1 ON rt1.c4;
SELECT rt1.c2, rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c0, vt0.c0, rt1.c1;
SELECT rt1.c2, rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1 WHERE (CAST(((rt1.c0)|(rt1.c4)) AS BLOB)) GROUP BY rt1.c2, rt1.c0, vt0.c0, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1 WHERE ((NOT (CAST(((rt1.c0)|(rt1.c4)) AS BLOB)))) GROUP BY rt1.c2, rt1.c0, vt0.c0, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1 WHERE (((CAST(((rt1.c0)|(rt1.c4)) AS BLOB)) ISNULL)) GROUP BY rt1.c2, rt1.c0, vt0.c0, rt1.c1;
SELECT rt1.c2, rt1.c0, vt0.c0, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c0, vt0.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c4;
SELECT ALL rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c4 HAVING MAX((+ (MIN(0.18300054033486646)))) UNION ALL SELECT ALL rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c4 HAVING (NOT (MAX((+ (MIN(0.18300054033486646)))))) UNION ALL SELECT rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c4 HAVING ((MAX((+ (MIN(0.18300054033486646))))) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((CASE ''  WHEN rt1.c4 THEN vt1.c0 WHEN rt1.c0 THEN rt1.c4 WHEN x'43ce' THEN rt1.c2 END) NOT BETWEEN (rt1.c2) AND (rt1.c4 COLLATE RTRIM)) FULL OUTER JOIN rt1 ON ((rt1.c1 COLLATE NOCASE)/(json_array_length(vt0.c0)));
SELECT DISTINCT vt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt1.c3 FROM vt0, rt1 RIGHT OUTER JOIN vt1 ON ((((((((((((((0.7618288975770834) NOT BETWEEN (rt1.c1) AND (rt1.c0)))AND(x'')))OR(NULLIF(rt1.c3, rt1.c0))))OR(x'4aab')))OR(rt1.c0)))OR(rt1.c1)))AND((- (rt1.c1))));
SELECT DISTINCT vt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt1.c3 FROM vt0, rt1 RIGHT OUTER JOIN vt1 ON ((((((((((((((0.7618288975770834) NOT BETWEEN (rt1.c1) AND (rt1.c0)))AND(x'')))OR(NULLIF(rt1.c3, rt1.c0))))OR(x'4aab')))OR(rt1.c0)))OR(rt1.c1)))AND((- (rt1.c1)))) WHERE (((((rt1.c0, rt1.c3, rt1.c1)) BETWEEN ((vt1.c0, rt1.c4, rt1.c1)) AND ((vt1.c0, rt1.c0, vt0.c0))) IN ())) UNION SELECT DISTINCT vt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt1.c3 FROM vt0, rt1 RIGHT OUTER JOIN vt1 ON ((((((((((((((0.7618288975770834) NOT BETWEEN (rt1.c1) AND (rt1.c0)))AND(x'')))OR(NULLIF(rt1.c3, rt1.c0))))OR(x'4aab')))OR(rt1.c0)))OR(rt1.c1)))AND((- (rt1.c1)))) WHERE ((NOT (((((rt1.c0, rt1.c3, rt1.c1)) BETWEEN ((vt1.c0, rt1.c4, rt1.c1)) AND ((vt1.c0, rt1.c0, vt0.c0))) IN ())))) UNION SELECT DISTINCT vt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt1.c3 FROM vt0, rt1 RIGHT OUTER JOIN vt1 ON ((((((((((((((0.7618288975770834) NOT BETWEEN (rt1.c1) AND (rt1.c0)))AND(x'')))OR(NULLIF(rt1.c3, rt1.c0))))OR(x'4aab')))OR(rt1.c0)))OR(rt1.c1)))AND((- (rt1.c1)))) WHERE (((((((rt1.c0, rt1.c3, rt1.c1)) BETWEEN ((vt1.c0, rt1.c4, rt1.c1)) AND ((vt1.c0, rt1.c0, vt0.c0))) IN ())) ISNULL));
SELECT DISTINCT vt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt1.c3 FROM vt0, rt1 RIGHT OUTER JOIN vt1 ON ((((((((((((((0.7618288975770834) NOT BETWEEN (rt1.c1) AND (rt1.c0)))AND(x'')))OR(NULLIF(rt1.c3, rt1.c0))))OR(x'4aab')))OR(rt1.c0)))OR(rt1.c1)))AND((- (rt1.c1))));
SELECT ALL rt1.c1, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c3, rt1.c2;
SELECT ALL rt1.c1, rt1.c3, rt1.c2 FROM rt1 WHERE (CAST(rt1.c2 AS REAL)) GROUP BY rt1.c1, rt1.c3, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c3, rt1.c2 FROM rt1 WHERE ((NOT (CAST(rt1.c2 AS REAL)))) GROUP BY rt1.c1, rt1.c3, rt1.c2 UNION SELECT rt1.c1, rt1.c3, rt1.c2 FROM rt1 WHERE (((CAST(rt1.c2 AS REAL)) ISNULL)) GROUP BY rt1.c1, rt1.c3, rt1.c2;
SELECT ALL rt1.c1, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c3, rt1.c2;
SELECT rt1.c0, rt1.c3 FROM vt1, rt1, vt0 GROUP BY rt1.c0, rt1.c3;
SELECT ALL rt1.c0, rt1.c3 FROM vt1, rt1, vt0 GROUP BY rt1.c0, rt1.c3 HAVING '' UNION ALL SELECT rt1.c0, rt1.c3 FROM vt1, rt1, vt0 GROUP BY rt1.c0, rt1.c3 HAVING (NOT ('')) UNION ALL SELECT ALL rt1.c0, rt1.c3 FROM vt1, rt1, vt0 GROUP BY rt1.c0, rt1.c3 HAVING (('') ISNULL);
SELECT rt1.c0, rt1.c3 FROM vt1, rt1, vt0 GROUP BY rt1.c0, rt1.c3;
SELECT ALL rt1.c0, rt1.c3 FROM vt1, rt1, vt0 GROUP BY rt1.c0, rt1.c3 HAVING '' UNION ALL SELECT rt1.c0, rt1.c3 FROM vt1, rt1, vt0 GROUP BY rt1.c0, rt1.c3 HAVING (NOT ('')) UNION ALL SELECT ALL rt1.c0, rt1.c3 FROM vt1, rt1, vt0 GROUP BY rt1.c0, rt1.c3 HAVING (('') ISNULL);
SELECT rt1.c0, rt1.c3 FROM vt1, rt1, vt0 GROUP BY rt1.c0, rt1.c3;
SELECT MIN((- (((((NULL)OR(rt1.c4)))AND(rt1.c1))))) FROM rt1, vt1 ORDER BY ((0Xfffffffff8c904ee)*(MIN(rt1.c1, NULL, rt1.c3, x'', 0.670741312481093, rt1.c4)))  NULLS LAST, ((((rt1.c3) BETWEEN (rt1.c1) AND (vt1.c0))) BETWEEN (((rt1.c2)+(rt1.c3))) AND (CAST(0.8349152908304203 AS TEXT))) DESC  NULLS FIRST, (((rt1.c1))<>((((((rt1.c4)OR(rt1.c3)))OR(x''))))) ASC  NULLS FIRST, ((((((rt1.c0) NOTNULL))AND(-7.00009965E8)))OR(rt1.c4)) ASC;
SELECT rt1.c0, rt1.c3, vt0.c0, rt1.c2, rt1.c1, vt1.c0, rt1.c4 FROM rt1 RIGHT OUTER JOIN vt1 ON ((((((rt1.c4)AND(rt1.c3)))OR(vt1.c0)))OR((rt1.c1 IN ()))) RIGHT OUTER JOIN vt0 ON ((rt1.c2) BETWEEN ('H>.꾝Oe<觽') AND (rt1.c0)) COLLATE BINARY;
SELECT ALL rt1.c0, rt1.c3, vt0.c0, rt1.c2, rt1.c1, vt1.c0, rt1.c4 FROM rt1 RIGHT OUTER JOIN vt1 ON ((((((rt1.c4)AND(rt1.c3)))OR(vt1.c0)))OR((rt1.c1 IN ()))) RIGHT OUTER JOIN vt0 ON ((rt1.c2) BETWEEN ('H>.꾝Oe<觽') AND (rt1.c0)) COLLATE BINARY WHERE (NULL) UNION ALL SELECT ALL rt1.c0, rt1.c3, vt0.c0, rt1.c2, rt1.c1, vt1.c0, rt1.c4 FROM rt1 RIGHT OUTER JOIN vt1 ON ((((((rt1.c4)AND(rt1.c3)))OR(vt1.c0)))OR((rt1.c1 IN ()))) RIGHT OUTER JOIN vt0 ON ((rt1.c2) BETWEEN ('H>.꾝Oe<觽') AND (rt1.c0)) COLLATE BINARY WHERE ((NOT (NULL))) UNION ALL SELECT ALL rt1.c0, rt1.c3, vt0.c0, rt1.c2, rt1.c1, vt1.c0, rt1.c4 FROM rt1 RIGHT OUTER JOIN vt1 ON ((((((rt1.c4)AND(rt1.c3)))OR(vt1.c0)))OR((rt1.c1 IN ()))) RIGHT OUTER JOIN vt0 ON ((rt1.c2) BETWEEN ('H>.꾝Oe<觽') AND (rt1.c0)) COLLATE BINARY WHERE (((NULL) ISNULL));
SELECT rt1.c0, rt1.c3, vt0.c0, rt1.c2, rt1.c1, vt1.c0, rt1.c4 FROM rt1 RIGHT OUTER JOIN vt1 ON ((((((rt1.c4)AND(rt1.c3)))OR(vt1.c0)))OR((rt1.c1 IN ()))) RIGHT OUTER JOIN vt0 ON ((rt1.c2) BETWEEN ('H>.꾝Oe<觽') AND (rt1.c0)) COLLATE BINARY;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ('') UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (''))) UNION SELECT DISTINCT * FROM vt0 WHERE ((('') ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ((vt0.c0 IN ())) AND (UNLIKELY(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN ((vt0.c0 IN ())) AND (UNLIKELY(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN ((vt0.c0 IN ())) AND (UNLIKELY(vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c3 FROM rt1, vt0, vt1 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1, vt0, vt1 GROUP BY rt1.c3 HAVING COUNT(*) UNION ALL SELECT rt1.c3 FROM rt1, vt0, vt1 GROUP BY rt1.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c3 FROM rt1, vt0, vt1 GROUP BY rt1.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c3 FROM rt1, vt0, vt1 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1, vt0, vt1 GROUP BY rt1.c3 HAVING COUNT(*) UNION ALL SELECT rt1.c3 FROM rt1, vt0, vt1 GROUP BY rt1.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c3 FROM rt1, vt0, vt1 GROUP BY rt1.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c3 FROM rt1, vt0, vt1 GROUP BY rt1.c3;
SELECT ALL rt1.c1 FROM rt1, vt1;
SELECT ALL rt1.c1 FROM rt1, vt1 WHERE (json_extract(((rt1.c4)GLOB(vt1.c0)), ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c3)), ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0)), ((((NULL)AND(rt1.c2)))AND(0.6870840447639428)), CAST(rt1.c2 AS NUMERIC), ((rt1.c3)<<(rt1.c2)))) UNION ALL SELECT ALL rt1.c1 FROM rt1, vt1 WHERE ((NOT (json_extract(((rt1.c4)GLOB(vt1.c0)), ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c3)), ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0)), ((((NULL)AND(rt1.c2)))AND(0.6870840447639428)), CAST(rt1.c2 AS NUMERIC), ((rt1.c3)<<(rt1.c2)))))) UNION ALL SELECT rt1.c1 FROM rt1, vt1 WHERE (((json_extract(((rt1.c4)GLOB(vt1.c0)), ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c3)), ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0)), ((((NULL)AND(rt1.c2)))AND(0.6870840447639428)), CAST(rt1.c2 AS NUMERIC), ((rt1.c3)<<(rt1.c2)))) ISNULL));
SELECT ALL rt1.c1 FROM rt1, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (0.4578479966253113) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (0.4578479966253113))) UNION SELECT DISTINCT * FROM vt1 WHERE (((0.4578479966253113) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt1.c4 FROM rt1, vt0, vt1 GROUP BY rt1.c4;
SELECT ALL rt1.c4 FROM rt1, vt0, vt1 WHERE (((LIKELY(rt1.c1))&(NULLIF(rt1.c3, rt1.c0)))) GROUP BY rt1.c4 UNION SELECT rt1.c4 FROM rt1, vt0, vt1 WHERE ((NOT (((LIKELY(rt1.c1))&(NULLIF(rt1.c3, rt1.c0)))))) GROUP BY rt1.c4 UNION SELECT ALL rt1.c4 FROM rt1, vt0, vt1 WHERE (((((LIKELY(rt1.c1))&(NULLIF(rt1.c3, rt1.c0)))) ISNULL)) GROUP BY rt1.c4;
SELECT rt1.c4 FROM rt1, vt0, vt1 GROUP BY rt1.c4;
SELECT ALL vt1.c0 FROM vt0, vt1, rt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1, rt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt0, vt1, rt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt0, vt1, rt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt0, vt1, rt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1, rt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt0, vt1, rt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt0, vt1, rt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt0, vt1, rt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt1, vt0;
SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (CAST((('q]') ISNULL) AS BLOB)) UNION ALL SELECT vt0.c0 FROM vt1, vt0 WHERE ((NOT (CAST((('q]') ISNULL) AS BLOB)))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (((CAST((('q]') ISNULL) AS BLOB)) ISNULL));
SELECT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS REAL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST((vt0.c0 IN ()) AS REAL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST((vt0.c0 IN ()) AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 WHERE (vt1.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE ((NOT (vt1.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (((vt1.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 LEFT OUTER JOIN rt1 ON (- (x'')) CROSS JOIN vt0 ON ((((vt1.c0) IS FALSE))IS NOT(rt1.c2)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 LEFT OUTER JOIN rt1 ON (- (x'')) CROSS JOIN vt0 ON ((((vt1.c0) IS FALSE))IS NOT(rt1.c2)) GROUP BY vt1.c0 HAVING CAST(CASE WHEN MAX(COUNT(MIN(MAX(COUNT(*))))) THEN MAX(AVG(rt1.c0)) WHEN MAX(rt1.c4) THEN rt1.c1 WHEN COUNT(SUM(MAX(vt0.c0))) THEN rt1.c2 END AS TEXT) UNION ALL SELECT ALL vt1.c0 FROM vt1 LEFT OUTER JOIN rt1 ON (- (x'')) CROSS JOIN vt0 ON ((((vt1.c0) IS FALSE))IS NOT(rt1.c2)) GROUP BY vt1.c0 HAVING (NOT (CAST(CASE WHEN MAX(COUNT(MIN(MAX(COUNT(*))))) THEN MAX(AVG(rt1.c0)) WHEN MAX(rt1.c4) THEN rt1.c1 WHEN COUNT(SUM(MAX(vt0.c0))) THEN rt1.c2 END AS TEXT))) UNION ALL SELECT vt1.c0 FROM vt1 LEFT OUTER JOIN rt1 ON (- (x'')) CROSS JOIN vt0 ON ((((vt1.c0) IS FALSE))IS NOT(rt1.c2)) GROUP BY vt1.c0 HAVING ((CAST(CASE WHEN MAX(COUNT(MIN(MAX(COUNT(*))))) THEN MAX(AVG(rt1.c0)) WHEN MAX(rt1.c4) THEN rt1.c1 WHEN COUNT(SUM(MAX(vt0.c0))) THEN rt1.c2 END AS TEXT)) ISNULL);
SELECT ALL * FROM vt1, vt0 NATURAL JOIN rt1;
SELECT * FROM vt1, vt0 NATURAL JOIN rt1 WHERE ((((((rt1.c3) NOTNULL)))!=((rt1.c2 COLLATE BINARY)))) UNION ALL SELECT * FROM vt1, vt0 NATURAL JOIN rt1 WHERE ((NOT ((((((rt1.c3) NOTNULL)))<>((rt1.c2 COLLATE BINARY)))))) UNION ALL SELECT * FROM vt1, vt0 NATURAL JOIN rt1 WHERE ((((((((rt1.c3) NOTNULL)))<>((rt1.c2 COLLATE BINARY)))) ISNULL));
SELECT ALL * FROM vt1, vt0 NATURAL JOIN rt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c3, rt1.c2, rt1.c4, vt1.c0, vt0.c0 FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c1) ISNULL)) ISNULL) CROSS JOIN vt1 ON ((rt1.c4 COLLATE BINARY) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c0 END) AND (((vt0.c0)<(vt0.c0))));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c3, rt1.c2, rt1.c4, vt1.c0, vt0.c0 FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c1) ISNULL)) ISNULL) CROSS JOIN vt1 ON ((rt1.c4 COLLATE BINARY) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c0 END) AND (((vt0.c0)<(vt0.c0)))) WHERE (rt1.c1) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c3, rt1.c2, rt1.c4, vt1.c0, vt0.c0 FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c1) ISNULL)) ISNULL) CROSS JOIN vt1 ON ((rt1.c4 COLLATE BINARY) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c0 END) AND (((vt0.c0)<(vt0.c0)))) WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c3, rt1.c2, rt1.c4, vt1.c0, vt0.c0 FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c1) ISNULL)) ISNULL) CROSS JOIN vt1 ON ((rt1.c4 COLLATE BINARY) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c0 END) AND (((vt0.c0)<(vt0.c0)))) WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c3, rt1.c2, rt1.c4, vt1.c0, vt0.c0 FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c1) ISNULL)) ISNULL) CROSS JOIN vt1 ON ((rt1.c4 COLLATE BINARY) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c0 END) AND (((vt0.c0)<(vt0.c0))));
SELECT rt1.c0, rt1.c4, vt0.c0, rt1.c2, rt1.c1, vt1.c0 FROM vt1 CROSS JOIN vt0 ON (((vt1.c0, rt1.c0, rt1.c4)) BETWEEN (((rt1.c4 IN ()), ((rt1.c3)LIKE(rt1.c1)), rt1.c4)) AND ((json_array_length(rt1.c0, vt0.c0), ('+vU|(bh' IN ()), (- (vt0.c0))))) FULL OUTER JOIN rt1 ON ((((('fL')) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))>>(0Xffffffffddadc23b)) GROUP BY rt1.c0, rt1.c4, vt0.c0, rt1.c2, rt1.c1, vt1.c0;
SELECT vt1.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT ALL vt1.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c2, rt1.c1, rt1.c0 HAVING MAX(TOTAL(rt1.c2)) UNION ALL SELECT vt1.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (MAX(TOTAL(rt1.c2)))) UNION ALL SELECT vt1.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c2, rt1.c1, rt1.c0 HAVING ((MAX(TOTAL(rt1.c2))) ISNULL);
SELECT ALL rt1.c3, rt1.c2 FROM rt1, vt0 NATURAL JOIN vt1;
SELECT ALL rt1.c3, rt1.c2 FROM rt1, vt0 NATURAL JOIN vt1 WHERE (CAST((rt1.c1 IN ()) AS INTEGER)) UNION ALL SELECT rt1.c3, rt1.c2 FROM rt1, vt0 NATURAL JOIN vt1 WHERE ((NOT (CAST((rt1.c1 IN ()) AS INTEGER)))) UNION ALL SELECT ALL rt1.c3, rt1.c2 FROM rt1, vt0 NATURAL JOIN vt1 WHERE (((CAST((rt1.c1 IN ()) AS INTEGER)) ISNULL));
SELECT ALL rt1.c3, rt1.c2 FROM rt1, vt0 NATURAL JOIN vt1;
SELECT DISTINCT rt1.c0, rt1.c4, rt1.c1, rt1.c2, rt1.c3 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c4, rt1.c1, rt1.c2, rt1.c3 FROM rt1 WHERE (((((((((((rt1.c4)OR(rt1.c4)))OR(-2006723242)))AND(rt1.c0)))OR(rt1.c2))) NOTNULL)) UNION SELECT DISTINCT rt1.c0, rt1.c4, rt1.c1, rt1.c2, rt1.c3 FROM rt1 WHERE ((NOT (((((((((((rt1.c4)OR(rt1.c4)))OR(-2006723242)))AND(rt1.c0)))OR(rt1.c2))) NOTNULL)))) UNION SELECT DISTINCT rt1.c0, rt1.c4, rt1.c1, rt1.c2, rt1.c3 FROM rt1 WHERE (((((((((((((rt1.c4)OR(rt1.c4)))OR(-2006723242)))AND(rt1.c0)))OR(rt1.c2))) NOTNULL)) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c4, rt1.c1, rt1.c2, rt1.c3 FROM rt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0)%(vt1.c0)))OR((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))))))AND(UPPER(vt1.c0)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0)%(vt1.c0)))OR((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))))))AND(UPPER(vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)%(vt1.c0)))OR((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))))))AND(UPPER(vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON ((((rt1.c1)+(rt1.c4))) NOTNULL) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON ((((rt1.c1)+(rt1.c4))) NOTNULL) GROUP BY vt1.c0 HAVING COUNT(((SUM(GROUP_CONCAT(MAX(MAX(COUNT(*))))))%(rt1.c1))) UNION ALL SELECT ALL vt1.c0 FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON ((((rt1.c1)+(rt1.c4))) NOTNULL) GROUP BY vt1.c0 HAVING (NOT (COUNT(((SUM(GROUP_CONCAT(MAX(MAX(COUNT(*))))))%(rt1.c1))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON ((((rt1.c1)+(rt1.c4))) NOTNULL) GROUP BY vt1.c0 HAVING ((COUNT(((SUM(GROUP_CONCAT(MAX(MAX(COUNT(*))))))%(rt1.c1)))) ISNULL);
SELECT SUM((((((rt1.c3))>((rt1.c3)))) NOT BETWEEN (CAST('1376452928' AS BLOB)) AND (CAST(rt1.c1 AS BLOB)))) FROM rt1;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE RTRIM) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) NOT NULL) COLLATE RTRIM))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT NULL) COLLATE RTRIM) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt1 ON rt1.c3;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt1 ON rt1.c3 WHERE (rt1.c1) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt1 ON rt1.c3 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt1 ON rt1.c3 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt1 ON rt1.c3;
SELECT ALL vt0.c0, rt1.c2, rt1.c3, rt1.c4, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c2, rt1.c3, rt1.c4, rt1.c0;
SELECT ALL vt0.c0, rt1.c2, rt1.c3, rt1.c4, rt1.c0 FROM vt0, rt1 WHERE (CASE WHEN 0.5876759815144954 COLLATE NOCASE THEN (~ (vt0.c0)) WHEN rt1.c2 THEN CASE WHEN rt1.c2 THEN rt1.c1 END WHEN 0.0 THEN LIKELIHOOD(DISTINCT rt1.c1, 0.20083065501065356) ELSE rt1.c2 END) GROUP BY vt0.c0, rt1.c2, rt1.c3, rt1.c4, rt1.c0 UNION SELECT vt0.c0, rt1.c2, rt1.c3, rt1.c4, rt1.c0 FROM vt0, rt1 WHERE ((NOT (CASE WHEN 0.5876759815144954 COLLATE NOCASE THEN (~ (vt0.c0)) WHEN rt1.c2 THEN CASE WHEN rt1.c2 THEN rt1.c1 END WHEN 0.0 THEN LIKELIHOOD(DISTINCT rt1.c1, 0.20083065501065356) ELSE rt1.c2 END))) GROUP BY vt0.c0, rt1.c2, rt1.c3, rt1.c4, rt1.c0 UNION SELECT vt0.c0, rt1.c2, rt1.c3, rt1.c4, rt1.c0 FROM vt0, rt1 WHERE (((CASE WHEN 0.5876759815144954 COLLATE NOCASE THEN (~ (vt0.c0)) WHEN rt1.c2 THEN CASE WHEN rt1.c2 THEN rt1.c1 END WHEN 0.0 THEN LIKELIHOOD(DISTINCT rt1.c1, 0.20083065501065356) ELSE rt1.c2 END) ISNULL)) GROUP BY vt0.c0, rt1.c2, rt1.c3, rt1.c4, rt1.c0;
SELECT ALL vt0.c0, rt1.c2, rt1.c3, rt1.c4, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c2, rt1.c3, rt1.c4, rt1.c0;
SELECT ALL rt1.c2 FROM vt0, rt1, vt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM vt0, rt1, vt1 GROUP BY rt1.c2 HAVING MIN(((rt1.c3)LIKE(vt0.c0))) UNION ALL SELECT rt1.c2 FROM vt0, rt1, vt1 GROUP BY rt1.c2 HAVING (NOT (MIN(((rt1.c3)LIKE(vt0.c0))))) UNION ALL SELECT ALL rt1.c2 FROM vt0, rt1, vt1 GROUP BY rt1.c2 HAVING ((MIN(((rt1.c3)LIKE(vt0.c0)))) ISNULL);
SELECT ALL rt1.c2 FROM vt0, rt1, vt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM vt0, rt1, vt1 GROUP BY rt1.c2 HAVING MIN(((rt1.c3)LIKE(vt0.c0))) UNION ALL SELECT rt1.c2 FROM vt0, rt1, vt1 GROUP BY rt1.c2 HAVING (NOT (MIN(((rt1.c3)LIKE(vt0.c0))))) UNION ALL SELECT ALL rt1.c2 FROM vt0, rt1, vt1 GROUP BY rt1.c2 HAVING ((MIN(((rt1.c3)LIKE(vt0.c0)))) ISNULL);
SELECT ALL rt1.c2 FROM vt0, rt1, vt1 GROUP BY rt1.c2;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)<(vt1.c0))) BETWEEN (((0.6612925869085932)||(vt1.c0))) AND (CHANGES()))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0)<(vt1.c0))) BETWEEN (((0.6612925869085932)||(vt1.c0))) AND (CHANGES()))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)<(vt1.c0))) BETWEEN (((0.6612925869085932)||(vt1.c0))) AND (CHANGES()))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (DATETIME(x'', vt1.c0, vt1.c0)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((NOT (DATETIME(x'', vt1.c0, vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((NOT (DATETIME(x'', vt1.c0, vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3, vt1.c0, rt1.c4 FROM vt1, rt1 LEFT OUTER JOIN vt0 ON CASE WHEN rt1.c1 COLLATE BINARY THEN ((rt1.c0)|(rt1.c4)) END GROUP BY vt0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3, vt1.c0, rt1.c4;
SELECT vt0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3, vt1.c0, rt1.c4 FROM vt1, rt1 LEFT OUTER JOIN vt0 ON CASE WHEN rt1.c1 COLLATE BINARY THEN ((rt1.c0)|(rt1.c4)) END GROUP BY vt0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3, vt1.c0, rt1.c4 HAVING TOTAL((((MAX(COUNT(rt1.c1)), MAX(rt1.c2), rt1.c1)) NOT BETWEEN ((AVG(rt1.c3), vt1.c0, COUNT(*))) AND ((MAX(MAX(x'')), MAX(rt1.c0), MIN(rt1.c1))))) UNION ALL SELECT vt0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3, vt1.c0, rt1.c4 FROM vt1, rt1 LEFT OUTER JOIN vt0 ON CASE WHEN rt1.c1 COLLATE BINARY THEN ((rt1.c0)|(rt1.c4)) END GROUP BY vt0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3, vt1.c0, rt1.c4 HAVING (NOT (TOTAL((((MAX(COUNT(rt1.c1)), MAX(rt1.c2), rt1.c1)) NOT BETWEEN ((AVG(rt1.c3), vt1.c0, COUNT(*))) AND ((MAX(MAX(x'')), MAX(rt1.c0), MIN(rt1.c1))))))) UNION ALL SELECT vt0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3, vt1.c0, rt1.c4 FROM vt1, rt1 LEFT OUTER JOIN vt0 ON CASE WHEN rt1.c1 COLLATE BINARY THEN ((rt1.c0)|(rt1.c4)) END GROUP BY vt0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3, vt1.c0, rt1.c4 HAVING ((TOTAL((((MAX(COUNT(rt1.c1)), MAX(rt1.c2), rt1.c1)) NOT BETWEEN ((AVG(rt1.c3), vt1.c0, COUNT(*))) AND ((MAX(MAX(x'')), MAX(rt1.c0), MIN(rt1.c1)))))) ISNULL);
SELECT TOTAL('1376452928') FROM vt0, vt1;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) AND ((-1.037654583E9 COLLATE BINARY)))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) AND ((-1.037654583E9 COLLATE BINARY)))))) UNION ALL SELECT * FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) AND ((-1.037654583E9 COLLATE BINARY)))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((('1851120278', rt1.c4, rt1.c4))<=((rt1.c3, rt1.c0, 0X67db2c7e))))OR(CAST(rt1.c2 AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((((('1851120278', rt1.c4, rt1.c4))<=((rt1.c3, rt1.c0, 0x67db2c7e))))OR(CAST(rt1.c2 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((('1851120278', rt1.c4, rt1.c4))<=((rt1.c3, rt1.c0, 0x67db2c7e))))OR(CAST(rt1.c2 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST(vt1.c0 AS INTEGER)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS INTEGER)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING SUM(((AVG(AVG(rt1.c3)))IS(0xffffffffd20e5a2d))) UNION ALL SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (NOT (SUM(((AVG(AVG(rt1.c3)))IS(0Xffffffffd20e5a2d))))) UNION ALL SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((SUM(((AVG(AVG(rt1.c3)))IS(0xffffffffd20e5a2d)))) ISNULL);
SELECT rt1.c4, vt1.c0, rt1.c2, rt1.c3, rt1.c1 FROM vt1, rt1, vt0;
SELECT rt1.c4, vt1.c0, rt1.c2, rt1.c3, rt1.c1 FROM vt1, rt1, vt0 WHERE ((- ('TRUE'))) UNION ALL SELECT rt1.c4, vt1.c0, rt1.c2, rt1.c3, rt1.c1 FROM vt1, rt1, vt0 WHERE ((NOT ((- ('TRUE'))))) UNION ALL SELECT rt1.c4, vt1.c0, rt1.c2, rt1.c3, rt1.c1 FROM vt1, rt1, vt0 NOT INDEXED WHERE ((((- ('TRUE'))) ISNULL));
SELECT rt1.c4, vt1.c0, rt1.c2, rt1.c3, rt1.c1 FROM vt1, rt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (LOWER(((vt1.c0)&(vt1.c0)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (LOWER(((vt1.c0)&(vt1.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((LOWER(((vt1.c0)&(vt1.c0)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((+ (((vt1.c0)+(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((+ (((vt1.c0)+(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((+ (((vt1.c0)+(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(MAX(MIN(MIN(vt0.c0))))) BETWEEN (vt0.c0) AND (GROUP_CONCAT(vt0.c0))))-(((vt0.c0)IS(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((COUNT(MAX(MIN(MIN(vt0.c0))))) BETWEEN (vt0.c0) AND (GROUP_CONCAT(vt0.c0))))-(((vt0.c0)IS(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((COUNT(MAX(MIN(MIN(vt0.c0))))) BETWEEN (vt0.c0) AND (GROUP_CONCAT(vt0.c0))))-(((vt0.c0)IS(vt0.c0))))) ISNULL);
SELECT TOTAL((((rt1.c3 IN ()))>((((rt1.c0))>=((rt1.c4)))))) FROM rt1;
SELECT rt1.c3, vt1.c0 FROM vt1, rt1;
SELECT ALL rt1.c3, vt1.c0 FROM vt1, rt1 WHERE (vt1.c0) UNION ALL SELECT rt1.c3, vt1.c0 FROM vt1, rt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL rt1.c3, vt1.c0 FROM vt1, rt1 WHERE (((vt1.c0) ISNULL));
SELECT rt1.c3, vt1.c0 FROM vt1, rt1;
SELECT DISTINCT * FROM rt1, vt0, vt1;
SELECT DISTINCT * FROM rt1, vt0, vt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c1 END) IS FALSE)) UNION SELECT DISTINCT * FROM rt1, vt0, vt1 WHERE ((NOT (((CASE WHEN rt1.c2 THEN rt1.c1 END) IS FALSE)))) UNION SELECT DISTINCT * FROM rt1, vt0, vt1 WHERE (((((CASE WHEN rt1.c2 THEN rt1.c1 END) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt1, vt0, vt1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 WHERE (0.551670359363867) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE ((NOT (0.551670359363867))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE (((0.551670359363867) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING IFNULL(vt1.c0 COLLATE BINARY, COUNT(*)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (IFNULL(vt1.c0 COLLATE BINARY, COUNT(*)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((IFNULL(vt1.c0 COLLATE BINARY, COUNT(*))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING IFNULL(vt1.c0 COLLATE BINARY, COUNT(*)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (IFNULL(vt1.c0 COLLATE BINARY, COUNT(*)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((IFNULL(vt1.c0 COLLATE BINARY, COUNT(*))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ('X?#Uf\r.') UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ('X?#Uf\r.'))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((('X?#Uf\r.') ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (-2.97895999E8) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (-2.97895999E8))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((-2.97895999E8) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (MAX(GROUP_CONCAT(vt0.c0)) IN (SUM(TOTAL(vt1.c0)), TOTAL(GROUP_CONCAT(TOTAL(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT ((MAX(GROUP_CONCAT(vt0.c0)) IN (SUM(TOTAL(vt1.c0)), TOTAL(GROUP_CONCAT(TOTAL(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (((MAX(GROUP_CONCAT(vt0.c0)) IN (SUM(TOTAL(vt1.c0)), TOTAL(GROUP_CONCAT(TOTAL(vt0.c0)))))) ISNULL);
SELECT vt1.c0 FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt0, vt1 WHERE (((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))<<((+ (vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((NOT (((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))<<((+ (vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 WHERE (((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))<<((+ (vt1.c0))))) ISNULL));
SELECT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (UPPER(((rt1.c0)LIKE(rt1.c4)))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (UPPER(((rt1.c0)LIKE(rt1.c4)))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((UPPER(((rt1.c0)LIKE(rt1.c4)))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL vt1.c0, rt1.c2, vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((LIKELY(DISTINCT vt0.c0))>=((((rt1.c2))=((rt1.c0))))) FULL OUTER JOIN rt1 ON UNLIKELY(DISTINCT ((rt1.c4) BETWEEN (rt1.c3) AND (vt0.c0))) GROUP BY vt1.c0, rt1.c2, vt0.c0;
SELECT rt1.c2, vt0.c0, vt1.c0, rt1.c1, rt1.c4, rt1.c0 FROM vt1, rt1, vt0 GROUP BY rt1.c2, vt0.c0, vt1.c0, rt1.c1, rt1.c4, rt1.c0;
SELECT rt1.c2, vt0.c0, vt1.c0, rt1.c1, rt1.c4, rt1.c0 FROM vt1, rt1, vt0 GROUP BY rt1.c2, vt0.c0, vt1.c0, rt1.c1, rt1.c4, rt1.c0 HAVING (~ (rt1.c4)) COLLATE BINARY UNION ALL SELECT rt1.c2, vt0.c0, vt1.c0, rt1.c1, rt1.c4, rt1.c0 FROM vt1, rt1, vt0 GROUP BY rt1.c2, vt0.c0, vt1.c0, rt1.c1, rt1.c4, rt1.c0 HAVING (NOT ((~ (rt1.c4)) COLLATE BINARY)) UNION ALL SELECT ALL rt1.c2, vt0.c0, vt1.c0, rt1.c1, rt1.c4, rt1.c0 FROM vt1, rt1, vt0 GROUP BY rt1.c2, vt0.c0, vt1.c0, rt1.c1, rt1.c4, rt1.c0 HAVING (((~ (rt1.c4)) COLLATE BINARY) ISNULL);
SELECT rt1.c2, vt0.c0, vt1.c0, rt1.c1, rt1.c4, rt1.c0 FROM vt1, rt1, vt0 GROUP BY rt1.c2, vt0.c0, vt1.c0, rt1.c1, rt1.c4, rt1.c0;
SELECT rt1.c2, vt0.c0, vt1.c0, rt1.c1, rt1.c4, rt1.c0 FROM vt1, rt1, vt0 GROUP BY rt1.c2, vt0.c0, vt1.c0, rt1.c1, rt1.c4, rt1.c0 HAVING (~ (rt1.c4)) COLLATE BINARY UNION ALL SELECT rt1.c2, vt0.c0, vt1.c0, rt1.c1, rt1.c4, rt1.c0 FROM vt1, rt1, vt0 GROUP BY rt1.c2, vt0.c0, vt1.c0, rt1.c1, rt1.c4, rt1.c0 HAVING (NOT ((~ (rt1.c4)) COLLATE BINARY)) UNION ALL SELECT ALL rt1.c2, vt0.c0, vt1.c0, rt1.c1, rt1.c4, rt1.c0 FROM vt1, rt1, vt0 GROUP BY rt1.c2, vt0.c0, vt1.c0, rt1.c1, rt1.c4, rt1.c0 HAVING (((~ (rt1.c4)) COLLATE BINARY) ISNULL);
SELECT rt1.c2, vt0.c0, vt1.c0, rt1.c1, rt1.c4, rt1.c0 FROM vt1, rt1, vt0 GROUP BY rt1.c2, vt0.c0, vt1.c0, rt1.c1, rt1.c4, rt1.c0;
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE (HEX(DISTINCT ((rt1.c2) IS FALSE))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (HEX(DISTINCT ((rt1.c2) IS FALSE))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((HEX(DISTINCT ((rt1.c2) IS FALSE))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt1.c4, rt1.c0, rt1.c2, rt1.c1, vt0.c0, rt1.c3, vt1.c0 FROM rt1, vt1, vt0;
SELECT DISTINCT rt1.c4, rt1.c0, rt1.c2, rt1.c1, vt0.c0, rt1.c3, vt1.c0 FROM rt1, vt1, vt0 WHERE ((- ('-298242119'))) UNION SELECT DISTINCT rt1.c4, rt1.c0, rt1.c2, rt1.c1, vt0.c0, rt1.c3, vt1.c0 FROM rt1, vt1, vt0 WHERE ((NOT ((- ('-298242119'))))) UNION SELECT DISTINCT rt1.c4, rt1.c0, rt1.c2, rt1.c1, vt0.c0, rt1.c3, vt1.c0 FROM rt1, vt1, vt0 WHERE ((((- ('-298242119'))) ISNULL));
SELECT DISTINCT rt1.c4, rt1.c0, rt1.c2, rt1.c1, vt0.c0, rt1.c3, vt1.c0 FROM rt1, vt1, vt0;
SELECT ALL rt1.c0 FROM vt0 RIGHT OUTER JOIN rt1 ON (+ (vt1.c0)) FULL OUTER JOIN vt1 ON rt1.c3 GROUP BY rt1.c0;
SELECT rt1.c4 FROM vt0, rt1, vt1 GROUP BY rt1.c4;
SELECT ALL rt1.c4 FROM vt0, rt1, vt1 GROUP BY rt1.c4 HAVING AVG(MIN(SUM(vt1.c0))) UNION ALL SELECT rt1.c4 FROM vt0, rt1, vt1 GROUP BY rt1.c4 HAVING (NOT (AVG(MIN(SUM(vt1.c0))))) UNION ALL SELECT rt1.c4 FROM vt0, rt1, vt1 GROUP BY rt1.c4 HAVING ((AVG(MIN(SUM(vt1.c0)))) ISNULL);
SELECT ALL MIN((((((((rt1.c2)AND(0xffffffff969c0473)))OR(rt1.c1))))<((((vt0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c3)))))) FROM rt1, vt0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (TRIM(DISTINCT vt0.c0 COLLATE NOCASE, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (TRIM(DISTINCT vt0.c0 COLLATE NOCASE, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((TRIM(DISTINCT vt0.c0 COLLATE NOCASE, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0, rt1.c1, rt1.c4, rt1.c0, vt1.c0 FROM rt1, vt0, vt1;
SELECT DISTINCT vt0.c0, rt1.c1, rt1.c4, rt1.c0, vt1.c0 FROM rt1, vt0 NOT INDEXED, vt1 WHERE ((((rt1.c4 IN ())) ISNULL)) UNION SELECT DISTINCT vt0.c0, rt1.c1, rt1.c4, rt1.c0, vt1.c0 FROM rt1, vt0, vt1 WHERE ((NOT ((((rt1.c4 IN ())) ISNULL)))) UNION SELECT DISTINCT vt0.c0, rt1.c1, rt1.c4, rt1.c0, vt1.c0 FROM rt1, vt0, vt1 WHERE ((((((rt1.c4 IN ())) ISNULL)) ISNULL));
SELECT DISTINCT vt0.c0, rt1.c1, rt1.c4, rt1.c0, vt1.c0 FROM rt1, vt0, vt1;
SELECT ALL rt1.c2, rt1.c3, rt1.c1, rt1.c4 FROM vt1, vt0 LEFT OUTER JOIN rt1 ON CAST(((rt1.c2) NOT BETWEEN (vt1.c0) AND (rt1.c4)) AS INTEGER) GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c4;
SELECT rt1.c2, rt1.c3, rt1.c1, rt1.c4 FROM vt1, vt0 LEFT OUTER JOIN rt1 ON CAST(((rt1.c2) NOT BETWEEN (vt1.c0) AND (rt1.c4)) AS INTEGER) WHERE ((- ((~ (rt1.c0))))) GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c4 UNION SELECT rt1.c2, rt1.c3, rt1.c1, rt1.c4 FROM vt1, vt0 LEFT OUTER JOIN rt1 ON CAST(((rt1.c2) NOT BETWEEN (vt1.c0) AND (rt1.c4)) AS INTEGER) WHERE ((NOT ((- ((~ (rt1.c0))))))) GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c4 UNION SELECT ALL rt1.c2, rt1.c3, rt1.c1, rt1.c4 FROM vt1, vt0 LEFT OUTER JOIN rt1 ON CAST(((rt1.c2) NOT BETWEEN (vt1.c0) AND (rt1.c4)) AS INTEGER) WHERE ((((- ((~ (rt1.c0))))) ISNULL)) GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c4;
SELECT ALL rt1.c2, rt1.c3, rt1.c1, rt1.c4 FROM vt1, vt0 LEFT OUTER JOIN rt1 ON CAST(((rt1.c2) NOT BETWEEN (vt1.c0) AND (rt1.c4)) AS INTEGER) GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c4;
SELECT vt0.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c0, rt1.c3, vt1.c0 FROM rt1, vt0, vt1 GROUP BY vt0.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c0, rt1.c3, vt1.c0;
SELECT ALL vt0.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c0, rt1.c3, vt1.c0 FROM rt1, vt0, vt1 GROUP BY vt0.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c0, rt1.c3, vt1.c0 HAVING SUM(((COUNT(vt1.c0))>>(rt1.c2))) UNION ALL SELECT vt0.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c0, rt1.c3, vt1.c0 FROM rt1, vt0, vt1 GROUP BY vt0.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c0, rt1.c3, vt1.c0 HAVING (NOT (SUM(((COUNT(vt1.c0))>>(rt1.c2))))) UNION ALL SELECT ALL vt0.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c0, rt1.c3, vt1.c0 FROM rt1, vt0, vt1 GROUP BY vt0.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c0, rt1.c3, vt1.c0 HAVING ((SUM(((COUNT(vt1.c0))>>(rt1.c2)))) ISNULL);
SELECT * FROM vt1, vt0, rt1;
SELECT ALL * FROM vt1, vt0, rt1 WHERE (((TRIM(rt1.c0)) IS TRUE)) UNION ALL SELECT * FROM vt1, vt0, rt1 WHERE ((NOT (((TRIM(rt1.c0)) IS TRUE)))) UNION ALL SELECT ALL * FROM vt1, vt0, rt1 WHERE (((((TRIM(rt1.c0)) IS TRUE)) ISNULL));
SELECT * FROM vt1, vt0, rt1;
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END IN ())) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((NOT ((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT vt0.c0, rt1.c4, rt1.c1, rt1.c0, vt1.c0, rt1.c2, rt1.c3 FROM rt1, vt0 FULL OUTER JOIN vt1 ON (((rt1.c3)) BETWEEN (((((rt1.c2, vt1.c0, rt1.c2))<((rt1.c0, rt1.c4, vt1.c0))))) AND ((((((((((((((vt0.c0)AND(vt1.c0)))OR(rt1.c3)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) GROUP BY vt0.c0, rt1.c4, rt1.c1, rt1.c0, vt1.c0, rt1.c2, rt1.c3;
SELECT vt0.c0, rt1.c4, rt1.c1, rt1.c0, vt1.c0, rt1.c2, rt1.c3 FROM rt1, vt0 FULL OUTER JOIN vt1 ON (((rt1.c3)) BETWEEN (((((rt1.c2, vt1.c0, rt1.c2))<((rt1.c0, rt1.c4, vt1.c0))))) AND ((((((((((((((vt0.c0)AND(vt1.c0)))OR(rt1.c3)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) WHERE ((((((((((((rt1.c4, vt0.c0, rt1.c0))>((vt1.c0, rt1.c0, rt1.c0))))AND(vt1.c0 COLLATE RTRIM)))OR(((vt1.c0)=(rt1.c0)))))OR(TYPEOF(DISTINCT rt1.c1))))OR(((rt1.c0) NOT NULL)))) GROUP BY vt0.c0, rt1.c4, rt1.c1, rt1.c0, vt1.c0, rt1.c2, rt1.c3 UNION SELECT vt0.c0, rt1.c4, rt1.c1, rt1.c0, vt1.c0, rt1.c2, rt1.c3 FROM rt1 NOT INDEXED, vt0 FULL OUTER JOIN vt1 ON (((rt1.c3)) BETWEEN (((((rt1.c2, vt1.c0, rt1.c2))<((rt1.c0, rt1.c4, vt1.c0))))) AND ((((((((((((((vt0.c0)AND(vt1.c0)))OR(rt1.c3)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) WHERE ((NOT ((((((((((((rt1.c4, vt0.c0, rt1.c0))>((vt1.c0, rt1.c0, rt1.c0))))AND(vt1.c0 COLLATE RTRIM)))OR(((vt1.c0)==(rt1.c0)))))OR(TYPEOF(DISTINCT rt1.c1))))OR(((rt1.c0) NOT NULL)))))) GROUP BY vt0.c0, rt1.c4, rt1.c1, rt1.c0, vt1.c0, rt1.c2, rt1.c3 UNION SELECT ALL vt0.c0, rt1.c4, rt1.c1, rt1.c0, vt1.c0, rt1.c2, rt1.c3 FROM rt1, vt0 FULL OUTER JOIN vt1 ON (((rt1.c3)) BETWEEN (((((rt1.c2, vt1.c0, rt1.c2))<((rt1.c0, rt1.c4, vt1.c0))))) AND ((((((((((((((vt0.c0)AND(vt1.c0)))OR(rt1.c3)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) WHERE ((((((((((((((rt1.c4, vt0.c0, rt1.c0))>((vt1.c0, rt1.c0, rt1.c0))))AND(vt1.c0 COLLATE RTRIM)))OR(((vt1.c0)=(rt1.c0)))))OR(TYPEOF(DISTINCT rt1.c1))))OR(((rt1.c0) NOT NULL)))) ISNULL)) GROUP BY vt0.c0, rt1.c4, rt1.c1, rt1.c0, vt1.c0, rt1.c2, rt1.c3;
SELECT vt0.c0, rt1.c4, rt1.c1, rt1.c0, vt1.c0, rt1.c2, rt1.c3 FROM rt1, vt0 FULL OUTER JOIN vt1 ON (((rt1.c3)) BETWEEN (((((rt1.c2, vt1.c0, rt1.c2))<((rt1.c0, rt1.c4, vt1.c0))))) AND ((((((((((((((vt0.c0)AND(vt1.c0)))OR(rt1.c3)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) GROUP BY vt0.c0, rt1.c4, rt1.c1, rt1.c0, vt1.c0, rt1.c2, rt1.c3;
SELECT rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt1.c3;
SELECT rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt1.c3 HAVING (SUM(GROUP_CONCAT(rt1.c1)) IN ()) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt1.c3 HAVING (NOT ((SUM(GROUP_CONCAT(rt1.c1)) IN ()))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt1.c3 HAVING (((SUM(GROUP_CONCAT(rt1.c1)) IN ())) ISNULL);
SELECT rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt1.c3;
SELECT rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt1.c3 HAVING (SUM(GROUP_CONCAT(rt1.c1)) IN ()) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt1.c3 HAVING (NOT ((SUM(GROUP_CONCAT(rt1.c1)) IN ()))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt1.c3 HAVING (((SUM(GROUP_CONCAT(rt1.c1)) IN ())) ISNULL);
SELECT rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c4, rt1.c0, rt1.c3;
SELECT ALL * FROM rt1, vt0;
SELECT ALL * FROM rt1, vt0 WHERE (((rt1.c2) BETWEEN (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c1 END) AND (CASE rt1.c2  WHEN vt0.c0 THEN rt1.c2 END))) UNION ALL SELECT * FROM rt1, vt0 WHERE ((NOT (((rt1.c2) BETWEEN (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c1 END) AND (CASE rt1.c2  WHEN vt0.c0 THEN rt1.c2 END))))) UNION ALL SELECT * FROM rt1, vt0 WHERE (((((rt1.c2) BETWEEN (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c1 END) AND (CASE rt1.c2  WHEN vt0.c0 THEN rt1.c2 END))) ISNULL));
SELECT ALL * FROM rt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((LOWER(DISTINCT vt0.c0))>=(vt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (((LOWER(DISTINCT vt0.c0))>=(vt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((((LOWER(DISTINCT vt0.c0))>=(vt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0) BETWEEN (194211393) AND (vt1.c0))))!=((((vt1.c0) IS TRUE), HEX(DISTINCT vt1.c0), x'')))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0) BETWEEN (194211393) AND (vt1.c0))))<>((((vt1.c0) IS TRUE), HEX(DISTINCT vt1.c0), x'')))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0) BETWEEN (194211393) AND (vt1.c0))))!=((((vt1.c0) IS TRUE), HEX(DISTINCT vt1.c0), x'')))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING COUNT(TOTAL(AVG(AVG(TOTAL(vt0.c0))))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (COUNT(TOTAL(AVG(AVG(TOTAL(vt0.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((COUNT(TOTAL(AVG(AVG(TOTAL(vt0.c0)))))) ISNULL);
SELECT rt1.c1, rt1.c4, vt1.c0, rt1.c2, rt1.c0, rt1.c3, vt0.c0 FROM vt1, rt1, vt0;
SELECT ALL rt1.c1, rt1.c4, vt1.c0, rt1.c2, rt1.c0, rt1.c3, vt0.c0 FROM vt1, rt1, vt0 WHERE (rt1.c4) UNION ALL SELECT rt1.c1, rt1.c4, vt1.c0, rt1.c2, rt1.c0, rt1.c3, vt0.c0 FROM vt1, rt1, vt0 WHERE ((NOT (rt1.c4))) UNION ALL SELECT ALL rt1.c1, rt1.c4, vt1.c0, rt1.c2, rt1.c0, rt1.c3, vt0.c0 FROM vt1, rt1, vt0 WHERE (((rt1.c4) ISNULL));
SELECT rt1.c1, rt1.c4, vt1.c0, rt1.c2, rt1.c0, rt1.c3, vt0.c0 FROM vt1, rt1, vt0;
SELECT DISTINCT rt1.c4, rt1.c2, vt0.c0, rt1.c0 FROM vt1, rt1, vt0;
SELECT DISTINCT rt1.c4, rt1.c2, vt0.c0, rt1.c0 FROM vt1, rt1, vt0 WHERE ((((rt1.c0, rt1.c1, NULL, rt1.c3, vt0.c0)) BETWEEN (((((vt1.c0, rt1.c3, vt0.c0)) BETWEEN ((NULL, rt1.c1, vt1.c0)) AND ((vt0.c0, rt1.c0, rt1.c4))), CAST(rt1.c0 AS INTEGER), LENGTH(rt1.c2), NULL, ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) AND (((~ (rt1.c2)), rt1.c4 COLLATE NOCASE, (rt1.c2 IN ()), ((rt1.c0) IS FALSE), ((0.0731491920664622) BETWEEN (vt0.c0) AND (rt1.c2)))))) UNION SELECT DISTINCT rt1.c4, rt1.c2, vt0.c0, rt1.c0 FROM vt1, rt1, vt0 WHERE ((NOT ((((rt1.c0, rt1.c1, NULL, rt1.c3, vt0.c0)) BETWEEN (((((vt1.c0, rt1.c3, vt0.c0)) BETWEEN ((NULL, rt1.c1, vt1.c0)) AND ((vt0.c0, rt1.c0, rt1.c4))), CAST(rt1.c0 AS INTEGER), LENGTH(rt1.c2), NULL, ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) AND (((~ (rt1.c2)), rt1.c4 COLLATE NOCASE, (rt1.c2 IN ()), ((rt1.c0) IS FALSE), ((0.0731491920664622) BETWEEN (vt0.c0) AND (rt1.c2)))))))) UNION SELECT DISTINCT rt1.c4, rt1.c2, vt0.c0, rt1.c0 FROM vt1, rt1, vt0 WHERE ((((((rt1.c0, rt1.c1, NULL, rt1.c3, vt0.c0)) BETWEEN (((((vt1.c0, rt1.c3, vt0.c0)) BETWEEN ((NULL, rt1.c1, vt1.c0)) AND ((vt0.c0, rt1.c0, rt1.c4))), CAST(rt1.c0 AS INTEGER), LENGTH(rt1.c2), NULL, ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) AND (((~ (rt1.c2)), rt1.c4 COLLATE NOCASE, (rt1.c2 IN ()), ((rt1.c0) IS FALSE), ((0.0731491920664622) BETWEEN (vt0.c0) AND (rt1.c2)))))) ISNULL));
SELECT DISTINCT rt1.c4, rt1.c2, vt0.c0, rt1.c0 FROM vt1, rt1, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0)>(-1874409492))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)>(-1874409492))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)>(-1874409492))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(vt0.c0) COLLATE NOCASE UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(vt0.c0) COLLATE NOCASE)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(vt0.c0) COLLATE NOCASE) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(vt0.c0) COLLATE NOCASE UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(vt0.c0) COLLATE NOCASE)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(vt0.c0) COLLATE NOCASE) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM rt1, vt0;
SELECT ALL * FROM rt1, vt0 WHERE (CAST(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c0 END AS TEXT)) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE ((NOT (CAST(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c0 END AS TEXT)))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE (((CAST(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c0 END AS TEXT)) ISNULL));
SELECT * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0, vt1;
SELECT DISTINCT * FROM rt1, vt0, vt1 WHERE (((CASE WHEN rt1.c0 THEN 670403835 WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c4 END) NOT NULL)) UNION SELECT DISTINCT * FROM rt1, vt0, vt1 WHERE ((NOT (((CASE WHEN rt1.c0 THEN 670403835 WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c4 END) NOT NULL)))) UNION SELECT DISTINCT * FROM rt1, vt0, vt1 WHERE (((((CASE WHEN rt1.c0 THEN 670403835 WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c4 END) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt1, vt0, vt1;
SELECT vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((((((((('')AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)) IN (vt0.c0, ((vt0.c0) NOTNULL))) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((((((((('')AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)) IN (vt0.c0, ((vt0.c0) NOTNULL))) WHERE (((((vt1.c0)&(vt0.c0))) NOTNULL)) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1 NOT INDEXED CROSS JOIN vt0 ON ((((((((('')AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)) IN (vt0.c0, ((vt0.c0) NOTNULL))) WHERE ((NOT (((((vt1.c0)&(vt0.c0))) NOTNULL)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((((((((('')AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)) IN (vt0.c0, ((vt0.c0) NOTNULL))) WHERE (((((((vt1.c0)&(vt0.c0))) NOTNULL)) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((((((((('')AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)) IN (vt0.c0, ((vt0.c0) NOTNULL))) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, rt1.c1, rt1.c0, vt0.c0 FROM rt1, vt0, vt1 GROUP BY vt1.c0, rt1.c1, rt1.c0, vt0.c0;
SELECT vt1.c0, rt1.c1, rt1.c0, vt0.c0 FROM rt1, vt0, vt1 GROUP BY vt1.c0, rt1.c1, rt1.c0, vt0.c0 HAVING AVG(GROUP_CONCAT(COUNT(*))) UNION ALL SELECT vt1.c0, rt1.c1, rt1.c0, vt0.c0 FROM rt1, vt0, vt1 GROUP BY vt1.c0, rt1.c1, rt1.c0, vt0.c0 HAVING (NOT (AVG(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT vt1.c0, rt1.c1, rt1.c0, vt0.c0 FROM rt1, vt0, vt1 GROUP BY vt1.c0, rt1.c1, rt1.c0, vt0.c0 HAVING ((AVG(GROUP_CONCAT(COUNT(*)))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)+(vt0.c0))) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0)<<(vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0)+(vt0.c0))) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0)<<(vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0)+(vt0.c0))) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0)<<(vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt1.c3, rt1.c4, rt1.c0, rt1.c1 FROM rt1, vt1;
SELECT DISTINCT rt1.c3, rt1.c4, rt1.c0, rt1.c1 FROM rt1, vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((rt1.c1 COLLATE BINARY)))) UNION SELECT DISTINCT rt1.c3, rt1.c4, rt1.c0, rt1.c1 FROM rt1, vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((rt1.c1 COLLATE BINARY)))))) UNION SELECT DISTINCT rt1.c3, rt1.c4, rt1.c0, rt1.c1 FROM rt1, vt1 WHERE ((((((vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((rt1.c1 COLLATE BINARY)))) ISNULL));
SELECT DISTINCT rt1.c3, rt1.c4, rt1.c0, rt1.c1 FROM rt1, vt1;
SELECT rt1.c0 FROM vt1 INNER JOIN rt1 ON CASE WHEN (((rt1.c0))>=((vt0.c0))) THEN ((rt1.c0) ISNULL) ELSE CASE rt1.c1  WHEN vt1.c0 THEN rt1.c0 ELSE rt1.c1 END END CROSS JOIN vt0 ON CASE NULL  WHEN ((rt1.c0)!=(0.5167275151326639)) THEN ((vt0.c0) IS FALSE) WHEN IFNULL('-1760877935', vt0.c0) THEN (rt1.c4 IN ()) WHEN ((x'')|(rt1.c3)) THEN (vt1.c0 IN ()) ELSE (~ (rt1.c0)) END GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM vt1 INNER JOIN rt1 ON CASE WHEN (((rt1.c0))>=((vt0.c0))) THEN ((rt1.c0) ISNULL) ELSE CASE rt1.c1  WHEN vt1.c0 THEN rt1.c0 ELSE rt1.c1 END END CROSS JOIN vt0 ON CASE NULL  WHEN ((rt1.c0)!=(0.5167275151326639)) THEN ((vt0.c0) IS FALSE) WHEN IFNULL('-1760877935', vt0.c0) THEN (rt1.c4 IN ()) WHEN ((x'')|(rt1.c3)) THEN (vt1.c0 IN ()) ELSE (~ (rt1.c0)) END WHERE (0.1621594427272144 COLLATE RTRIM) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM vt1 INNER JOIN rt1 ON CASE WHEN (((rt1.c0))>=((vt0.c0))) THEN ((rt1.c0) ISNULL) ELSE CASE rt1.c1  WHEN vt1.c0 THEN rt1.c0 ELSE rt1.c1 END END CROSS JOIN vt0 ON CASE NULL  WHEN ((rt1.c0)!=(0.5167275151326639)) THEN ((vt0.c0) IS FALSE) WHEN IFNULL('-1760877935', vt0.c0) THEN (rt1.c4 IN ()) WHEN ((x'')|(rt1.c3)) THEN (vt1.c0 IN ()) ELSE (~ (rt1.c0)) END WHERE ((NOT (0.1621594427272144 COLLATE RTRIM))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM vt1 INNER JOIN rt1 ON CASE WHEN (((rt1.c0))>=((vt0.c0))) THEN ((rt1.c0) ISNULL) ELSE CASE rt1.c1  WHEN vt1.c0 THEN rt1.c0 ELSE rt1.c1 END END CROSS JOIN vt0 ON CASE NULL  WHEN ((rt1.c0)!=(0.5167275151326639)) THEN ((vt0.c0) IS FALSE) WHEN IFNULL('-1760877935', vt0.c0) THEN (rt1.c4 IN ()) WHEN ((x'')|(rt1.c3)) THEN (vt1.c0 IN ()) ELSE (~ (rt1.c0)) END WHERE (((0.1621594427272144 COLLATE RTRIM) ISNULL)) GROUP BY rt1.c0;
SELECT rt1.c0 FROM vt1 INNER JOIN rt1 ON CASE WHEN (((rt1.c0))>=((vt0.c0))) THEN ((rt1.c0) ISNULL) ELSE CASE rt1.c1  WHEN vt1.c0 THEN rt1.c0 ELSE rt1.c1 END END CROSS JOIN vt0 ON CASE NULL  WHEN ((rt1.c0)!=(0.5167275151326639)) THEN ((vt0.c0) IS FALSE) WHEN IFNULL('-1760877935', vt0.c0) THEN (rt1.c4 IN ()) WHEN ((x'')|(rt1.c3)) THEN (vt1.c0 IN ()) ELSE (~ (rt1.c0)) END GROUP BY rt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (- (NULL)) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT ((- (NULL)))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (((- (NULL))) ISNULL);
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (- (NULL)) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT ((- (NULL)))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (((- (NULL))) ISNULL);
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE HEX(vt1.c0)  WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN 0.04822132568340831 COLLATE RTRIM ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) ORDER BY (~ ((NOT (vt1.c0))))  NULLS LAST, CAST(vt1.c0 AS REAL) COLLATE RTRIM  NULLS FIRST, (+ (vt1.c0)) COLLATE NOCASE ASC  NULLS FIRST, (((vt1.c0 IN ()))<<(((vt1.c0)>>(vt1.c0))))  NULLS FIRST;
SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE HEX(vt1.c0)  WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN 0.04822132568340831 COLLATE RTRIM ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END))) ORDER BY (~ ((NOT (vt1.c0))))  NULLS LAST, CAST(vt1.c0 AS REAL) COLLATE RTRIM  NULLS FIRST, (+ (vt1.c0)) COLLATE NOCASE ASC  NULLS FIRST, (((vt1.c0 IN ()))<<(((vt1.c0)>>(vt1.c0))))  NULLS FIRST;
SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE HEX(vt1.c0)  WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN 0.04822132568340831 COLLATE RTRIM ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) ISNULL)) ORDER BY (~ ((NOT (vt1.c0))))  NULLS LAST, CAST(vt1.c0 AS REAL) COLLATE RTRIM  NULLS FIRST, (+ (vt1.c0)) COLLATE NOCASE ASC  NULLS FIRST, (((vt1.c0 IN ()))<<(((vt1.c0)>>(vt1.c0))))  NULLS FIRST;
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((LIKELY(DISTINCT vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((LIKELY(DISTINCT vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((LIKELY(DISTINCT vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt1.c2, vt0.c0 FROM vt0 CROSS JOIN rt1 ON ((CASE rt1.c2  WHEN 0.010530633462901284 THEN rt1.c1 ELSE rt1.c2 END) NOT BETWEEN (NULL) AND (((vt0.c0) ISNULL))) GROUP BY rt1.c2, vt0.c0;
SELECT rt1.c2, vt0.c0 FROM vt0 CROSS JOIN rt1 ON ((CASE rt1.c2  WHEN 0.010530633462901284 THEN rt1.c1 ELSE rt1.c2 END) NOT BETWEEN (NULL) AND (((vt0.c0) ISNULL))) WHERE ((((((('527046576') NOT BETWEEN (rt1.c3) AND (rt1.c4)))AND(TRIM(rt1.c0))))AND(((((vt0.c0)AND(0.5975535005769778)))AND(rt1.c3))))) GROUP BY rt1.c2, vt0.c0 UNION SELECT ALL rt1.c2, vt0.c0 FROM vt0 CROSS JOIN rt1 ON ((CASE rt1.c2  WHEN 0.010530633462901284 THEN rt1.c1 ELSE rt1.c2 END) NOT BETWEEN (NULL) AND (((vt0.c0) ISNULL))) WHERE ((NOT ((((((('527046576') NOT BETWEEN (rt1.c3) AND (rt1.c4)))AND(TRIM(rt1.c0))))AND(((((vt0.c0)AND(0.5975535005769778)))AND(rt1.c3))))))) GROUP BY rt1.c2, vt0.c0 UNION SELECT ALL rt1.c2, vt0.c0 FROM vt0 NOT INDEXED CROSS JOIN rt1 ON ((CASE rt1.c2  WHEN 0.010530633462901284 THEN rt1.c1 ELSE rt1.c2 END) NOT BETWEEN (NULL) AND (((vt0.c0) ISNULL))) WHERE ((((((((('527046576') NOT BETWEEN (rt1.c3) AND (rt1.c4)))AND(TRIM(rt1.c0))))AND(((((vt0.c0)AND(0.5975535005769778)))AND(rt1.c3))))) ISNULL)) GROUP BY rt1.c2, vt0.c0;
SELECT rt1.c2, vt0.c0 FROM vt0 CROSS JOIN rt1 ON ((CASE rt1.c2  WHEN 0.010530633462901284 THEN rt1.c1 ELSE rt1.c2 END) NOT BETWEEN (NULL) AND (((vt0.c0) ISNULL))) GROUP BY rt1.c2, vt0.c0;
SELECT ALL rt1.c1, vt0.c0, rt1.c4, rt1.c2 FROM vt0, rt1 NOT INDEXED GROUP BY rt1.c1, vt0.c0, rt1.c4, rt1.c2;
SELECT ALL rt1.c1, vt0.c0, rt1.c4, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0, rt1.c4, rt1.c2 HAVING (((TOTAL('1236145070'))) NOT BETWEEN ((((rt1.c4) NOTNULL))) AND (((((rt1.c0, AVG(rt1.c0), rt1.c0)) NOT BETWEEN ((x'', AVG(TOTAL('1925-388 992 57:3753323372421873263:')), rt1.c3)) AND ((rt1.c4, rt1.c1, vt0.c0)))))) UNION ALL SELECT ALL rt1.c1, vt0.c0, rt1.c4, rt1.c2 FROM vt0, rt1 NOT INDEXED GROUP BY rt1.c1, vt0.c0, rt1.c4, rt1.c2 HAVING (NOT ((((TOTAL('1236145070'))) NOT BETWEEN ((((rt1.c4) NOTNULL))) AND (((((rt1.c0, AVG(rt1.c0), rt1.c0)) NOT BETWEEN ((x'', AVG(TOTAL('1925-388 992 57:3753323372421873263:')), rt1.c3)) AND ((rt1.c4, rt1.c1, vt0.c0)))))))) UNION ALL SELECT ALL rt1.c1, vt0.c0, rt1.c4, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0, rt1.c4, rt1.c2 HAVING (((((TOTAL('1236145070'))) NOT BETWEEN ((((rt1.c4) NOTNULL))) AND (((((rt1.c0, AVG(rt1.c0), rt1.c0)) NOT BETWEEN ((x'', AVG(TOTAL('1925-388 992 57:3753323372421873263:')), rt1.c3)) AND ((rt1.c4, rt1.c1, vt0.c0))))))) ISNULL);
SELECT * FROM vt1, vt0, rt1;
SELECT * FROM vt1, vt0, rt1 WHERE (((NULL)<((((vt1.c0)) NOT BETWEEN (('0.6376450592418147')) AND ((rt1.c3)))))) UNION ALL SELECT ALL * FROM vt1, vt0, rt1 WHERE ((NOT (((NULL)<((((vt1.c0)) NOT BETWEEN (('0.6376450592418147')) AND ((rt1.c3)))))))) UNION ALL SELECT * FROM vt1, vt0, rt1 WHERE (((((NULL)<((((vt1.c0)) NOT BETWEEN (('0.6376450592418147')) AND ((rt1.c3)))))) ISNULL));
SELECT * FROM vt1, vt0, rt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))&(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))&(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))&(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt1, vt0, rt1 GROUP BY vt1.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT ALL vt1.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt1, vt0, rt1 WHERE ((((rt1.c0)) BETWEEN ((rt1.c3)) AND ((vt1.c0)))) GROUP BY vt1.c0, rt1.c2, rt1.c1, rt1.c0 UNION SELECT vt1.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt1, vt0, rt1 WHERE ((NOT ((((rt1.c0)) BETWEEN ((rt1.c3)) AND ((vt1.c0)))))) GROUP BY vt1.c0, rt1.c2, rt1.c1, rt1.c0 UNION SELECT ALL vt1.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt1, vt0, rt1 WHERE ((((((rt1.c0)) BETWEEN ((rt1.c3)) AND ((vt1.c0)))) ISNULL)) GROUP BY vt1.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT vt1.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt1, vt0, rt1 GROUP BY vt1.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING SUM(COUNT(MAX(AVG(COUNT(rt1.c0))))) UNION ALL SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (SUM(COUNT(MAX(AVG(COUNT(rt1.c0))))))) UNION ALL SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((SUM(COUNT(MAX(AVG(COUNT(rt1.c0)))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0) IS FALSE) THEN vt1.c0 ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CASE WHEN ((vt1.c0) IS FALSE) THEN vt1.c0 ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CASE WHEN ((vt1.c0) IS FALSE) THEN vt1.c0 ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ('') UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (''))) UNION SELECT DISTINCT * FROM vt1 WHERE ((('') ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2;
SELECT ALL vt1.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2 FROM rt1 NOT INDEXED, vt1 WHERE (((CASE WHEN rt1.c4 THEN 0.04940405362739397 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c2 END) IS FALSE)) GROUP BY vt1.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2 UNION SELECT vt1.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2 FROM rt1, vt1 WHERE ((NOT (((CASE WHEN rt1.c4 THEN 0.04940405362739397 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c2 END) IS FALSE)))) GROUP BY vt1.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2 UNION SELECT ALL vt1.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2 FROM rt1, vt1 WHERE (((((CASE WHEN rt1.c4 THEN 0.04940405362739397 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c2 END) IS FALSE)) ISNULL)) GROUP BY vt1.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2;
SELECT vt1.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c2;
SELECT ALL rt1.c3 FROM vt1, rt1 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM vt1, rt1 GROUP BY rt1.c3 HAVING DATETIME(TRIM(TOTAL(SUM(rt1.c3))), COUNT(*) COLLATE BINARY, COUNT(*)) UNION ALL SELECT ALL rt1.c3 FROM vt1, rt1 GROUP BY rt1.c3 HAVING (NOT (DATETIME(TRIM(TOTAL(SUM(rt1.c3))), COUNT(*) COLLATE BINARY, COUNT(*)))) UNION ALL SELECT rt1.c3 FROM vt1, rt1 GROUP BY rt1.c3 HAVING ((DATETIME(TRIM(TOTAL(SUM(rt1.c3))), COUNT(*) COLLATE BINARY, COUNT(*))) ISNULL);
SELECT ALL vt0.c0 FROM vt1, vt0;
SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (((vt0.c0)/(vt0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((NOT (((vt0.c0)/(vt0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (((((vt0.c0)/(vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL vt0.c0 FROM vt1, vt0;
SELECT DISTINCT rt1.c4 FROM vt1, vt0, rt1;
SELECT DISTINCT rt1.c4 FROM vt1, vt0, rt1 WHERE (vt0.c0) UNION SELECT DISTINCT rt1.c4 FROM vt1, vt0, rt1 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT rt1.c4 FROM vt1, vt0, rt1 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT rt1.c4 FROM vt1, vt0, rt1;
SELECT ALL vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt1 WHERE (TYPEOF((+ (vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, rt1 WHERE ((NOT (TYPEOF((+ (vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, rt1 WHERE (((TYPEOF((+ (vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0;
SELECT rt1.c0, rt1.c1, rt1.c3, rt1.c4, vt1.c0, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c3, rt1.c4, vt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c3, rt1.c4, vt1.c0, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c3, rt1.c4, vt1.c0, rt1.c2 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c3, rt1.c4, vt1.c0, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c3, rt1.c4, vt1.c0, rt1.c2 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c3, rt1.c4, vt1.c0, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c3, rt1.c4, vt1.c0, rt1.c2 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL vt0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c4 FROM vt0, rt1, vt1;
SELECT vt0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c4 FROM vt0, rt1, vt1 WHERE ((((rt1.c4)) NOT BETWEEN ((NULL)) AND (((((('')OR(0.788692051466413)))OR('-1581521192')))))) UNION ALL SELECT vt0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c4 FROM vt0, rt1, vt1 WHERE ((NOT ((((rt1.c4)) NOT BETWEEN ((NULL)) AND (((((('')OR(0.788692051466413)))OR('-1581521192')))))))) UNION ALL SELECT vt0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c4 FROM vt0, rt1, vt1 WHERE ((((((rt1.c4)) NOT BETWEEN ((NULL)) AND (((((('')OR(0.788692051466413)))OR('-1581521192')))))) ISNULL));
SELECT ALL vt0.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c4 FROM vt0, rt1, vt1;
SELECT DISTINCT * FROM vt1, vt0 CROSS JOIN rt1 ON rt1.c3;
SELECT DISTINCT * FROM vt1 NOT INDEXED, vt0 CROSS JOIN rt1 ON rt1.c3 WHERE (rt1.c1) UNION SELECT DISTINCT * FROM vt1, vt0 CROSS JOIN rt1 ON rt1.c3 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT * FROM vt1, vt0 CROSS JOIN rt1 ON rt1.c3 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT * FROM vt1, vt0 CROSS JOIN rt1 ON rt1.c3;
SELECT ALL rt1.c1, rt1.c3 FROM vt1, vt0, rt1 GROUP BY rt1.c1, rt1.c3;
SELECT ALL rt1.c1, rt1.c3 FROM vt1, vt0, rt1 WHERE ((((rt1.c4 IN ())) BETWEEN (ROUND(rt1.c4, rt1.c2)) AND (NULLIF(vt1.c0, rt1.c1)))) GROUP BY rt1.c1, rt1.c3 UNION SELECT rt1.c1, rt1.c3 FROM vt1, vt0, rt1 WHERE ((NOT ((((rt1.c4 IN ())) BETWEEN (ROUND(rt1.c4, rt1.c2)) AND (NULLIF(vt1.c0, rt1.c1)))))) GROUP BY rt1.c1, rt1.c3 UNION SELECT rt1.c1, rt1.c3 FROM vt1, vt0, rt1 WHERE ((((((rt1.c4 IN ())) BETWEEN (ROUND(rt1.c4, rt1.c2)) AND (NULLIF(vt1.c0, rt1.c1)))) ISNULL)) GROUP BY rt1.c1, rt1.c3;
SELECT ALL rt1.c1, rt1.c3 FROM vt1, vt0, rt1 GROUP BY rt1.c1, rt1.c3;
SELECT rt1.c0, rt1.c3, rt1.c1, vt0.c0, rt1.c4 FROM rt1 CROSS JOIN vt0 ON (((((((rt1.c3)AND(rt1.c1)))AND(rt1.c2))))<=((((rt1.c2) IS TRUE)))) GROUP BY rt1.c0, rt1.c3, rt1.c1, vt0.c0, rt1.c4;
SELECT ALL rt1.c0, rt1.c3, rt1.c1, vt0.c0, rt1.c4 FROM rt1 CROSS JOIN vt0 ON (((((((rt1.c3)AND(rt1.c1)))AND(rt1.c2))))<=((((rt1.c2) IS TRUE)))) GROUP BY rt1.c0, rt1.c3, rt1.c1, vt0.c0, rt1.c4 HAVING ((COUNT(*)) NOT BETWEEN (AVG(rt1.c1)) AND (CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN MAX(rt1.c1) WHEN rt1.c4 THEN rt1.c3 END)) UNION ALL SELECT ALL rt1.c0, rt1.c3, rt1.c1, vt0.c0, rt1.c4 FROM rt1 CROSS JOIN vt0 ON (((((((rt1.c3)AND(rt1.c1)))AND(rt1.c2))))<=((((rt1.c2) IS TRUE)))) GROUP BY rt1.c0, rt1.c3, rt1.c1, vt0.c0, rt1.c4 HAVING (NOT (((COUNT(*)) NOT BETWEEN (AVG(rt1.c1)) AND (CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN MAX(rt1.c1) WHEN rt1.c4 THEN rt1.c3 END)))) UNION ALL SELECT rt1.c0, rt1.c3, rt1.c1, vt0.c0, rt1.c4 FROM rt1 CROSS JOIN vt0 ON (((((((rt1.c3)AND(rt1.c1)))AND(rt1.c2))))<=((((rt1.c2) IS TRUE)))) GROUP BY rt1.c0, rt1.c3, rt1.c1, vt0.c0, rt1.c4 HAVING ((((COUNT(*)) NOT BETWEEN (AVG(rt1.c1)) AND (CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN MAX(rt1.c1) WHEN rt1.c4 THEN rt1.c3 END))) ISNULL);
SELECT rt1.c0, rt1.c3, rt1.c1, vt0.c0, rt1.c4 FROM rt1 CROSS JOIN vt0 ON (((((((rt1.c3)AND(rt1.c1)))AND(rt1.c2))))<=((((rt1.c2) IS TRUE)))) GROUP BY rt1.c0, rt1.c3, rt1.c1, vt0.c0, rt1.c4;
SELECT ALL rt1.c0, rt1.c3, rt1.c1, vt0.c0, rt1.c4 FROM rt1 CROSS JOIN vt0 ON (((((((rt1.c3)AND(rt1.c1)))AND(rt1.c2))))<=((((rt1.c2) IS TRUE)))) GROUP BY rt1.c0, rt1.c3, rt1.c1, vt0.c0, rt1.c4 HAVING ((COUNT(*)) NOT BETWEEN (AVG(rt1.c1)) AND (CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN MAX(rt1.c1) WHEN rt1.c4 THEN rt1.c3 END)) UNION ALL SELECT ALL rt1.c0, rt1.c3, rt1.c1, vt0.c0, rt1.c4 FROM rt1 CROSS JOIN vt0 ON (((((((rt1.c3)AND(rt1.c1)))AND(rt1.c2))))<=((((rt1.c2) IS TRUE)))) GROUP BY rt1.c0, rt1.c3, rt1.c1, vt0.c0, rt1.c4 HAVING (NOT (((COUNT(*)) NOT BETWEEN (AVG(rt1.c1)) AND (CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN MAX(rt1.c1) WHEN rt1.c4 THEN rt1.c3 END)))) UNION ALL SELECT rt1.c0, rt1.c3, rt1.c1, vt0.c0, rt1.c4 FROM rt1 CROSS JOIN vt0 ON (((((((rt1.c3)AND(rt1.c1)))AND(rt1.c2))))<=((((rt1.c2) IS TRUE)))) GROUP BY rt1.c0, rt1.c3, rt1.c1, vt0.c0, rt1.c4 HAVING ((((COUNT(*)) NOT BETWEEN (AVG(rt1.c1)) AND (CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN MAX(rt1.c1) WHEN rt1.c4 THEN rt1.c3 END))) ISNULL);
SELECT rt1.c0, rt1.c3, rt1.c1, vt0.c0, rt1.c4 FROM rt1 CROSS JOIN vt0 ON (((((((rt1.c3)AND(rt1.c1)))AND(rt1.c2))))<=((((rt1.c2) IS TRUE)))) GROUP BY rt1.c0, rt1.c3, rt1.c1, vt0.c0, rt1.c4;
SELECT vt0.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON (('{a') IS FALSE);
SELECT ALL vt0.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON (('{a') IS FALSE) WHERE (((((rt1.c0)AND((((rt1.c0))<((rt1.c1))))))AND(NULLIF(DISTINCT rt1.c1, rt1.c1)))) UNION ALL SELECT vt0.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON (('{a') IS FALSE) WHERE ((NOT (((((rt1.c0)AND((((rt1.c0))<((rt1.c1))))))AND(NULLIF(DISTINCT rt1.c1, rt1.c1)))))) UNION ALL SELECT ALL vt0.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON (('{a') IS FALSE) WHERE (((((((rt1.c0)AND((((rt1.c0))<((rt1.c1))))))AND(NULLIF(DISTINCT rt1.c1, rt1.c1)))) ISNULL));
SELECT vt0.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON (('{a') IS FALSE);
SELECT DISTINCT rt1.c4, rt1.c3, rt1.c1, vt1.c0 FROM vt1, rt1;
SELECT DISTINCT rt1.c4, rt1.c3, rt1.c1, vt1.c0 FROM vt1, rt1 WHERE (CASE WHEN CASE rt1.c1  WHEN rt1.c3 THEN rt1.c4 END THEN SQLITE_COMPILEOPTION_GET(rt1.c2) ELSE ((rt1.c1)>(x'')) END) UNION SELECT DISTINCT rt1.c4, rt1.c3, rt1.c1, vt1.c0 FROM vt1, rt1 WHERE ((NOT (CASE WHEN CASE rt1.c1  WHEN rt1.c3 THEN rt1.c4 END THEN SQLITE_COMPILEOPTION_GET(rt1.c2) ELSE ((rt1.c1)>(x'')) END))) UNION SELECT DISTINCT rt1.c4, rt1.c3, rt1.c1, vt1.c0 FROM vt1, rt1 WHERE (((CASE WHEN CASE rt1.c1  WHEN rt1.c3 THEN rt1.c4 END THEN SQLITE_COMPILEOPTION_GET(rt1.c2) ELSE ((rt1.c1)>(x'')) END) ISNULL));
SELECT DISTINCT rt1.c4, rt1.c3, rt1.c1, vt1.c0 FROM vt1, rt1;
SELECT rt1.c4, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c4, rt1.c1;
SELECT ALL rt1.c4, rt1.c1 FROM vt0, rt1 WHERE ((+ (((((rt1.c4)OR(rt1.c3)))AND(rt1.c0))))) GROUP BY rt1.c4, rt1.c1 UNION SELECT ALL rt1.c4, rt1.c1 FROM vt0, rt1 WHERE ((NOT ((+ (((((rt1.c4)OR(rt1.c3)))AND(rt1.c0))))))) GROUP BY rt1.c4, rt1.c1 UNION SELECT ALL rt1.c4, rt1.c1 FROM vt0, rt1 WHERE ((((+ (((((rt1.c4)OR(rt1.c3)))AND(rt1.c0))))) ISNULL)) GROUP BY rt1.c4, rt1.c1;
SELECT rt1.c4, rt1.c1 FROM vt0, rt1 GROUP BY rt1.c4, rt1.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(0.9469345419212555) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(0.9469345419212555))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(0.9469345419212555)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(0.9469345419212555) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(0.9469345419212555))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(0.9469345419212555)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt1, rt1;
SELECT * FROM vt1, rt1 WHERE (rt1.c3) UNION ALL SELECT ALL * FROM vt1, rt1 WHERE ((NOT (rt1.c3))) UNION ALL SELECT ALL * FROM vt1, rt1 WHERE (((rt1.c3) ISNULL));
SELECT * FROM vt1, rt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((vt1.c0 COLLATE BINARY IN (((vt1.c0)-(vt1.c0)), CAST(vt1.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((vt1.c0 COLLATE BINARY IN (((vt1.c0)-(vt1.c0)), CAST(vt1.c0 AS BLOB)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0 COLLATE BINARY IN (((vt1.c0)-(vt1.c0)), CAST(vt1.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3;
SELECT ALL rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3 FROM rt1 WHERE (CASE ((rt1.c4)|(rt1.c4))  WHEN ((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c1)) THEN CASE WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c2 END END) GROUP BY rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3 UNION SELECT ALL rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3 FROM rt1 WHERE ((NOT (CASE ((rt1.c4)|(rt1.c4))  WHEN ((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c1)) THEN CASE WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c2 END END))) GROUP BY rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3 UNION SELECT ALL rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3 FROM rt1 WHERE (((CASE ((rt1.c4)|(rt1.c4))  WHEN ((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c1)) THEN CASE WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c2 END END) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3;
SELECT ALL rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3;
SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON rt1.c0 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0;
SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON rt1.c0 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0 HAVING SUM(MIN(COUNT(rt1.c4))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON rt1.c0 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0 HAVING (NOT (SUM(MIN(COUNT(rt1.c4))))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON rt1.c0 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0 HAVING ((SUM(MIN(COUNT(rt1.c4)))) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ());
SELECT vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) WHERE (((((vt0.c0)!=(vt0.c0)))>=(((((vt1.c0)AND(vt0.c0)))OR(vt1.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) WHERE ((NOT (((((vt0.c0)<>(vt0.c0)))>=(((((vt1.c0)AND(vt0.c0)))OR(vt1.c0))))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) WHERE (((((((vt0.c0)!=(vt0.c0)))>=(((((vt1.c0)AND(vt0.c0)))OR(vt1.c0))))) ISNULL));
SELECT vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ());
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) IS TRUE)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE BINARY) IS TRUE)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0 COLLATE BINARY) IS TRUE)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt1.c4 FROM vt1 RIGHT OUTER JOIN rt1 ON ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)) COLLATE BINARY GROUP BY rt1.c4;
SELECT ALL rt1.c4 FROM vt1 RIGHT OUTER JOIN rt1 ON ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)) COLLATE BINARY WHERE (((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c1))) BETWEEN (((((((((rt1.c4)OR(-3.21223441E8)))AND(vt1.c0)))AND(rt1.c2)))AND(rt1.c0))) AND (((vt1.c0) NOTNULL)))) GROUP BY rt1.c4 UNION SELECT rt1.c4 FROM vt1 RIGHT OUTER JOIN rt1 ON ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)) COLLATE BINARY WHERE ((NOT (((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c1))) BETWEEN (((((((((rt1.c4)OR(-3.21223441E8)))AND(vt1.c0)))AND(rt1.c2)))AND(rt1.c0))) AND (((vt1.c0) NOTNULL)))))) GROUP BY rt1.c4 UNION SELECT ALL rt1.c4 FROM vt1 RIGHT OUTER JOIN rt1 ON ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)) COLLATE BINARY WHERE (((((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c1))) BETWEEN (((((((((rt1.c4)OR(-3.21223441E8)))AND(vt1.c0)))AND(rt1.c2)))AND(rt1.c0))) AND (((vt1.c0) NOTNULL)))) ISNULL)) GROUP BY rt1.c4;
SELECT ALL rt1.c4 FROM vt1 RIGHT OUTER JOIN rt1 ON ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)) COLLATE BINARY GROUP BY rt1.c4;
SELECT rt1.c2, rt1.c0, rt1.c3, rt1.c4, rt1.c1 FROM vt1 RIGHT OUTER JOIN rt1 ON ((CASE NULL  WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c4 END) IS TRUE) GROUP BY rt1.c2, rt1.c0, rt1.c3, rt1.c4, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c3, rt1.c4, rt1.c1 FROM vt1 RIGHT OUTER JOIN rt1 ON ((CASE NULL  WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c4 END) IS TRUE) GROUP BY rt1.c2, rt1.c0, rt1.c3, rt1.c4, rt1.c1 HAVING ((GROUP_CONCAT(rt1.c1))|(TOTAL(COUNT(rt1.c0)))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c3, rt1.c4, rt1.c1 FROM vt1 RIGHT OUTER JOIN rt1 ON ((CASE NULL  WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c4 END) IS TRUE) GROUP BY rt1.c2, rt1.c0, rt1.c3, rt1.c4, rt1.c1 HAVING (NOT (((GROUP_CONCAT(rt1.c1))|(TOTAL(COUNT(rt1.c0)))))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c3, rt1.c4, rt1.c1 FROM vt1 RIGHT OUTER JOIN rt1 ON ((CASE NULL  WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c4 END) IS TRUE) GROUP BY rt1.c2, rt1.c0, rt1.c3, rt1.c4, rt1.c1 HAVING ((((GROUP_CONCAT(rt1.c1))|(TOTAL(COUNT(rt1.c0))))) ISNULL);
SELECT rt1.c2, rt1.c0 FROM vt0, rt1;
SELECT ALL rt1.c2, rt1.c0 FROM vt0, rt1 WHERE ((((rt1.c0)) BETWEEN ((TRIM(rt1.c1, rt1.c0))) AND ((((((rt1.c4)AND(rt1.c0)))AND(rt1.c1)))))) UNION ALL SELECT rt1.c2, rt1.c0 FROM vt0, rt1 WHERE ((NOT ((((rt1.c0)) BETWEEN ((TRIM(rt1.c1, rt1.c0))) AND ((((((rt1.c4)AND(rt1.c0)))AND(rt1.c1)))))))) UNION ALL SELECT rt1.c2, rt1.c0 FROM vt0, rt1 WHERE ((((((rt1.c0)) BETWEEN ((TRIM(rt1.c1, rt1.c0))) AND ((((((rt1.c4)AND(rt1.c0)))AND(rt1.c1)))))) ISNULL));
SELECT rt1.c2, rt1.c0 FROM vt0, rt1;
SELECT DISTINCT * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0 WHERE (CASE (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c3)))  WHEN ((((((((vt0.c0)AND(rt1.c1)))AND(rt1.c4)))OR(rt1.c1)))AND(0Xffffffffe6e06476)) THEN (NOT (rt1.c2)) ELSE LIKELIHOOD(DISTINCT x'4c68', 0.8109936703084737) END) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((NOT (CASE (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c3)))  WHEN ((((((((vt0.c0)AND(rt1.c1)))AND(rt1.c4)))OR(rt1.c1)))AND(0xffffffffe6e06476)) THEN (NOT (rt1.c2)) ELSE LIKELIHOOD(DISTINCT x'4c68', 0.8109936703084737) END))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE (((CASE (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c3)))  WHEN ((((((((vt0.c0)AND(rt1.c1)))AND(rt1.c4)))OR(rt1.c1)))AND(0xffffffffe6e06476)) THEN (NOT (rt1.c2)) ELSE LIKELIHOOD(DISTINCT x'4c68', 0.8109936703084737) END) ISNULL));
SELECT DISTINCT * FROM rt1, vt0;
SELECT ALL rt1.c3, rt1.c4, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt0 GROUP BY rt1.c3, rt1.c4, rt1.c1, vt0.c0, rt1.c2;
SELECT ALL rt1.c3, rt1.c4, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt0 WHERE (((((((rt1.c1)AND(rt1.c4)))OR(rt1.c1)))||(vt0.c0 COLLATE RTRIM))) GROUP BY rt1.c3, rt1.c4, rt1.c1, vt0.c0, rt1.c2 UNION SELECT ALL rt1.c3, rt1.c4, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt0 WHERE ((NOT (((((((rt1.c1)AND(rt1.c4)))OR(rt1.c1)))||(vt0.c0 COLLATE RTRIM))))) GROUP BY rt1.c3, rt1.c4, rt1.c1, vt0.c0, rt1.c2 UNION SELECT rt1.c3, rt1.c4, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt0 WHERE (((((((((rt1.c1)AND(rt1.c4)))OR(rt1.c1)))||(vt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY rt1.c3, rt1.c4, rt1.c1, vt0.c0, rt1.c2;
SELECT ALL rt1.c3, rt1.c4, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt0 GROUP BY rt1.c3, rt1.c4, rt1.c1, vt0.c0, rt1.c2;
SELECT vt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3, rt1.c0, vt0.c0 FROM rt1, vt1, vt0 GROUP BY vt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3, rt1.c0, vt0.c0;
SELECT ALL vt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3, rt1.c0, vt0.c0 FROM rt1, vt1, vt0 GROUP BY vt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3, rt1.c0, vt0.c0 HAVING (((GROUP_CONCAT(rt1.c1)))>=(((((NULL, SUM(rt1.c4), NULL))>=((AVG(rt1.c2), COUNT(rt1.c0), vt0.c0)))))) UNION ALL SELECT vt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3, rt1.c0, vt0.c0 FROM rt1, vt1, vt0 GROUP BY vt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3, rt1.c0, vt0.c0 HAVING (NOT ((((GROUP_CONCAT(rt1.c1)))>=(((((NULL, SUM(rt1.c4), NULL))>=((AVG(rt1.c2), COUNT(rt1.c0), vt0.c0)))))))) UNION ALL SELECT vt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3, rt1.c0, vt0.c0 FROM rt1, vt1, vt0 GROUP BY vt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3, rt1.c0, vt0.c0 HAVING (((((GROUP_CONCAT(rt1.c1)))>=(((((NULL, SUM(rt1.c4), NULL))>=((AVG(rt1.c2), COUNT(rt1.c0), vt0.c0))))))) ISNULL);
SELECT vt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3, rt1.c0, vt0.c0 FROM rt1, vt1, vt0 GROUP BY vt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3, rt1.c0, vt0.c0;
SELECT ALL vt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3, rt1.c0, vt0.c0 FROM rt1, vt1, vt0 GROUP BY vt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3, rt1.c0, vt0.c0 HAVING (((GROUP_CONCAT(rt1.c1)))>=(((((NULL, SUM(rt1.c4), NULL))>=((AVG(rt1.c2), COUNT(rt1.c0), vt0.c0)))))) UNION ALL SELECT vt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3, rt1.c0, vt0.c0 FROM rt1, vt1, vt0 GROUP BY vt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3, rt1.c0, vt0.c0 HAVING (NOT ((((GROUP_CONCAT(rt1.c1)))>=(((((NULL, SUM(rt1.c4), NULL))>=((AVG(rt1.c2), COUNT(rt1.c0), vt0.c0)))))))) UNION ALL SELECT vt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3, rt1.c0, vt0.c0 FROM rt1, vt1, vt0 GROUP BY vt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3, rt1.c0, vt0.c0 HAVING (((((GROUP_CONCAT(rt1.c1)))>=(((((NULL, SUM(rt1.c4), NULL))>=((AVG(rt1.c2), COUNT(rt1.c0), vt0.c0))))))) ISNULL);
SELECT vt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3, rt1.c0, vt0.c0 FROM rt1, vt1, vt0 GROUP BY vt1.c0, rt1.c2, rt1.c1, rt1.c4, rt1.c3, rt1.c0, vt0.c0;
SELECT ALL rt1.c0, rt1.c3, rt1.c2, rt1.c4, vt1.c0 FROM vt0, rt1, vt1;
SELECT ALL rt1.c0, rt1.c3, rt1.c2, rt1.c4, vt1.c0 FROM vt0, rt1, vt1 WHERE (((CAST(vt0.c0 AS REAL)) ISNULL)) UNION ALL SELECT rt1.c0, rt1.c3, rt1.c2, rt1.c4, vt1.c0 FROM vt0, rt1, vt1 WHERE ((NOT (((CAST(vt0.c0 AS REAL)) ISNULL)))) UNION ALL SELECT ALL rt1.c0, rt1.c3, rt1.c2, rt1.c4, vt1.c0 FROM vt0, rt1, vt1 WHERE (((((CAST(vt0.c0 AS REAL)) ISNULL)) ISNULL));
SELECT ALL rt1.c0, rt1.c3, rt1.c2, rt1.c4, vt1.c0 FROM vt0, rt1, vt1;
SELECT DISTINCT rt1.c2, vt1.c0, rt1.c1 FROM vt0, rt1, vt1;
SELECT DISTINCT rt1.c2, vt1.c0, rt1.c1 FROM vt0, rt1, vt1 WHERE ((('ﺆ,')IS(((rt1.c4) NOT NULL)))) UNION SELECT DISTINCT rt1.c2, vt1.c0, rt1.c1 FROM vt0, rt1, vt1 WHERE ((NOT ((('ﺆ,')IS(((rt1.c4) NOT NULL)))))) UNION SELECT DISTINCT rt1.c2, vt1.c0, rt1.c1 FROM vt0, rt1, vt1 WHERE ((((('ﺆ,')IS(((rt1.c4) NOT NULL)))) ISNULL));
SELECT DISTINCT rt1.c2, vt1.c0, rt1.c1 FROM vt0, rt1, vt1;
SELECT rt1.c4 FROM rt1 GROUP BY rt1.c4;
SELECT rt1.c4 FROM rt1 WHERE ((~ (rt1.c3))) GROUP BY rt1.c4 UNION SELECT ALL rt1.c4 FROM rt1 WHERE ((NOT ((~ (rt1.c3))))) GROUP BY rt1.c4 UNION SELECT ALL rt1.c4 FROM rt1 WHERE ((((~ (rt1.c3))) ISNULL)) GROUP BY rt1.c4;
SELECT rt1.c4 FROM rt1 GROUP BY rt1.c4;
SELECT ALL rt1.c4, vt1.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c4, vt1.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c4, vt1.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c4, vt1.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1 HAVING COUNT((- (rt1.c0))) UNION ALL SELECT ALL rt1.c4, vt1.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c4, vt1.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1 HAVING (NOT (COUNT((- (rt1.c0))))) UNION ALL SELECT ALL rt1.c4, vt1.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c4, vt1.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1 HAVING ((COUNT((- (rt1.c0)))) ISNULL);
SELECT ALL rt1.c4, vt1.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c4, vt1.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c4, vt1.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c4, vt1.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1 HAVING COUNT((- (rt1.c0))) UNION ALL SELECT ALL rt1.c4, vt1.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c4, vt1.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1 HAVING (NOT (COUNT((- (rt1.c0))))) UNION ALL SELECT ALL rt1.c4, vt1.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c4, vt1.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1 HAVING ((COUNT((- (rt1.c0)))) ISNULL);
SELECT ALL rt1.c4, vt1.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c4, vt1.c0, rt1.c3, rt1.c0, rt1.c2, rt1.c1;
SELECT ALL * FROM vt1, rt1, vt0;
SELECT ALL * FROM vt1, rt1, vt0 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (((rt1.c2)/(rt1.c3))) AND (((((((((rt1.c1)OR(vt1.c0)))AND(vt1.c0)))OR(rt1.c1)))OR(rt1.c1))))) UNION ALL SELECT ALL * FROM vt1, rt1, vt0 WHERE ((NOT ((((vt1.c0 IN ())) NOT BETWEEN (((rt1.c2)/(rt1.c3))) AND (((((((((rt1.c1)OR(vt1.c0)))AND(vt1.c0)))OR(rt1.c1)))OR(rt1.c1))))))) UNION ALL SELECT * FROM vt1, rt1, vt0 WHERE ((((((vt1.c0 IN ())) NOT BETWEEN (((rt1.c2)/(rt1.c3))) AND (((((((((rt1.c1)OR(vt1.c0)))AND(vt1.c0)))OR(rt1.c1)))OR(rt1.c1))))) ISNULL));
SELECT ALL * FROM vt1, rt1, vt0;
SELECT DISTINCT vt1.c0, rt1.c0, rt1.c1 FROM vt1, rt1;
SELECT DISTINCT vt1.c0, rt1.c0, rt1.c1 FROM vt1, rt1 WHERE (CAST(rt1.c1 AS REAL) COLLATE RTRIM) UNION SELECT DISTINCT vt1.c0, rt1.c0, rt1.c1 FROM vt1, rt1 WHERE ((NOT (CAST(rt1.c1 AS REAL) COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0, rt1.c0, rt1.c1 FROM vt1, rt1 WHERE (((CAST(rt1.c1 AS REAL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c0, rt1.c0, rt1.c1 FROM vt1, rt1;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 WHERE (json_array_length((NOT (vt1.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 WHERE ((NOT (json_array_length((NOT (vt1.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 WHERE (((json_array_length((NOT (vt1.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING MIN(MAX(rt1.c2)) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (MIN(MAX(rt1.c2)))) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((MIN(MAX(rt1.c2))) ISNULL);
SELECT SUM('	AB') FROM vt0, rt1, vt1;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((~ (((vt0.c0)<=(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((~ (((vt0.c0)<=(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((~ (((vt0.c0)<=(vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CAST(rt1.c3 AS TEXT)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CAST(rt1.c3 AS TEXT)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CAST(rt1.c3 AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (0.6836667885188539) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (0.6836667885188539))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((0.6836667885188539) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL rt1.c0, rt1.c3, vt1.c0, rt1.c1, rt1.c4 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c3, vt1.c0, rt1.c1, rt1.c4;
SELECT ALL rt1.c0, rt1.c3, vt1.c0, rt1.c1, rt1.c4 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c3, vt1.c0, rt1.c1, rt1.c4 HAVING (((MAX(rt1.c1))) NOT BETWEEN ((MIN(AVG(AVG(COUNT(rt1.c3)))))) AND ((COUNT(*)))) COLLATE BINARY UNION ALL SELECT ALL rt1.c0, rt1.c3, vt1.c0, rt1.c1, rt1.c4 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c3, vt1.c0, rt1.c1, rt1.c4 HAVING (NOT ((((MAX(rt1.c1))) NOT BETWEEN ((MIN(AVG(AVG(COUNT(rt1.c3)))))) AND ((COUNT(*)))) COLLATE BINARY)) UNION ALL SELECT ALL rt1.c0, rt1.c3, vt1.c0, rt1.c1, rt1.c4 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c3, vt1.c0, rt1.c1, rt1.c4 HAVING (((((MAX(rt1.c1))) NOT BETWEEN ((MIN(AVG(AVG(COUNT(rt1.c3)))))) AND ((COUNT(*)))) COLLATE BINARY) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0))==((vt0.c0)))) BETWEEN ((NOT (vt0.c0))) AND (CAST(vt0.c0 AS TEXT)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0))==((vt0.c0)))) BETWEEN ((NOT (vt0.c0))) AND (CAST(vt0.c0 AS TEXT)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0))=((vt0.c0)))) BETWEEN ((NOT (vt0.c0))) AND (CAST(vt0.c0 AS TEXT)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, vt1, rt1;
SELECT DISTINCT * FROM vt0, vt1, rt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS BLOB)) UNION SELECT DISTINCT * FROM vt0, vt1, rt1 WHERE ((NOT (CAST(vt1.c0 COLLATE RTRIM AS BLOB)))) UNION SELECT DISTINCT * FROM vt0, vt1, rt1 WHERE (((CAST(vt1.c0 COLLATE RTRIM AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt1;
SELECT ALL rt1.c4, rt1.c2, rt1.c3 FROM rt1, vt0 GROUP BY rt1.c4, rt1.c2, rt1.c3;
SELECT rt1.c4, rt1.c2, rt1.c3 FROM rt1, vt0 WHERE (((((('' IN ()))AND((- (rt1.c4)))))OR((rt1.c4 IN ())))) GROUP BY rt1.c4, rt1.c2, rt1.c3 UNION SELECT ALL rt1.c4, rt1.c2, rt1.c3 FROM rt1, vt0 WHERE ((NOT (((((('' IN ()))AND((- (rt1.c4)))))OR((rt1.c4 IN ())))))) GROUP BY rt1.c4, rt1.c2, rt1.c3 UNION SELECT ALL rt1.c4, rt1.c2, rt1.c3 FROM rt1, vt0 WHERE (((((((('' IN ()))AND((- (rt1.c4)))))OR((rt1.c4 IN ())))) ISNULL)) GROUP BY rt1.c4, rt1.c2, rt1.c3;
SELECT ALL rt1.c4, rt1.c2, rt1.c3 FROM rt1, vt0 GROUP BY rt1.c4, rt1.c2, rt1.c3;
SELECT ALL vt1.c0, rt1.c3, rt1.c2 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c3, rt1.c2;
SELECT ALL vt1.c0, rt1.c3, rt1.c2 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c3, rt1.c2 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, rt1.c3, rt1.c2 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c3, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, rt1.c3, rt1.c2 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c3, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, rt1.c3, rt1.c2 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c3, rt1.c2;
SELECT ALL vt1.c0, rt1.c3, rt1.c2 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c3, rt1.c2 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, rt1.c3, rt1.c2 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c3, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, rt1.c3, rt1.c2 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c3, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, rt1.c3, rt1.c2 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c3, rt1.c2;
SELECT rt1.c2, rt1.c1, vt1.c0, rt1.c0 FROM vt1, rt1;
SELECT rt1.c2, rt1.c1, vt1.c0, rt1.c0 FROM vt1, rt1 WHERE (((((CASE rt1.c1  WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c2 THEN 0.7216819102624814 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c2 END)AND(CASE rt1.c0  WHEN NULL THEN rt1.c3 WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c1 ELSE rt1.c4 END)))AND(CASE WHEN vt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c3 ELSE NULL END))) UNION ALL SELECT rt1.c2, rt1.c1, vt1.c0, rt1.c0 FROM vt1, rt1 WHERE ((NOT (((((CASE rt1.c1  WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c2 THEN 0.7216819102624814 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c2 END)AND(CASE rt1.c0  WHEN NULL THEN rt1.c3 WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c1 ELSE rt1.c4 END)))AND(CASE WHEN vt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c3 ELSE NULL END))))) UNION ALL SELECT rt1.c2, rt1.c1, vt1.c0, rt1.c0 FROM vt1, rt1 WHERE (((((((CASE rt1.c1  WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c2 THEN 0.7216819102624814 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c2 END)AND(CASE rt1.c0  WHEN NULL THEN rt1.c3 WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c1 ELSE rt1.c4 END)))AND(CASE WHEN vt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c3 ELSE NULL END))) ISNULL));
SELECT rt1.c2, rt1.c1, vt1.c0, rt1.c0 FROM vt1, rt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN ())) NOTNULL)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 IN ())) NOTNULL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0 IN ())) NOTNULL)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt1.c1, rt1.c4, rt1.c2, rt1.c0, vt0.c0, rt1.c3 FROM vt0 LEFT OUTER JOIN rt1 ON ((((((rt1.c0)AND(rt1.c1)))OR(rt1.c2))) NOT BETWEEN ((((vt0.c0))<((rt1.c3)))) AND (0.5598854879929503)) GROUP BY rt1.c1, rt1.c4, rt1.c2, rt1.c0, vt0.c0, rt1.c3;
SELECT ALL rt1.c1, rt1.c4, rt1.c2, rt1.c0, vt0.c0, rt1.c3 FROM vt0 LEFT OUTER JOIN rt1 ON ((((((rt1.c0)AND(rt1.c1)))OR(rt1.c2))) NOT BETWEEN ((((vt0.c0))<((rt1.c3)))) AND (0.5598854879929503)) WHERE ((+ (rt1.c0))) GROUP BY rt1.c1, rt1.c4, rt1.c2, rt1.c0, vt0.c0, rt1.c3 UNION SELECT ALL rt1.c1, rt1.c4, rt1.c2, rt1.c0, vt0.c0, rt1.c3 FROM vt0 LEFT OUTER JOIN rt1 ON ((((((rt1.c0)AND(rt1.c1)))OR(rt1.c2))) NOT BETWEEN ((((vt0.c0))<((rt1.c3)))) AND (0.5598854879929503)) WHERE ((NOT ((+ (rt1.c0))))) GROUP BY rt1.c1, rt1.c4, rt1.c2, rt1.c0, vt0.c0, rt1.c3 UNION SELECT rt1.c1, rt1.c4, rt1.c2, rt1.c0, vt0.c0, rt1.c3 FROM vt0 LEFT OUTER JOIN rt1 ON ((((((rt1.c0)AND(rt1.c1)))OR(rt1.c2))) NOT BETWEEN ((((vt0.c0))<((rt1.c3)))) AND (0.5598854879929503)) WHERE ((((+ (rt1.c0))) ISNULL)) GROUP BY rt1.c1, rt1.c4, rt1.c2, rt1.c0, vt0.c0, rt1.c3;
SELECT ALL rt1.c1, rt1.c4, rt1.c2, rt1.c0, vt0.c0, rt1.c3 FROM vt0 LEFT OUTER JOIN rt1 ON ((((((rt1.c0)AND(rt1.c1)))OR(rt1.c2))) NOT BETWEEN ((((vt0.c0))<((rt1.c3)))) AND (0.5598854879929503)) GROUP BY rt1.c1, rt1.c4, rt1.c2, rt1.c0, vt0.c0, rt1.c3;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING GROUP_CONCAT(MAX(TOTAL(vt0.c0))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(MAX(TOTAL(vt0.c0))))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(MAX(TOTAL(vt0.c0)))) ISNULL);
SELECT * FROM rt1 RIGHT OUTER JOIN vt1 ON x'90fd';
SELECT * FROM rt1 RIGHT OUTER JOIN vt1 ON x'90fd' WHERE (IFNULL((- (vt1.c0)), CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN vt1.c0 WHEN NULL THEN rt1.c2 END)) UNION ALL SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt1 ON x'90fd' WHERE ((NOT (IFNULL((- (vt1.c0)), CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN vt1.c0 WHEN NULL THEN rt1.c2 END)))) UNION ALL SELECT * FROM rt1 RIGHT OUTER JOIN vt1 ON x'90fd' WHERE (((IFNULL((- (vt1.c0)), CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN vt1.c0 WHEN NULL THEN rt1.c2 END)) ISNULL));
SELECT * FROM rt1 RIGHT OUTER JOIN vt1 ON x'90fd';
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((LIKELIHOOD(DISTINCT vt0.c0, 0.2410355484958484) IN ())) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((LIKELIHOOD(DISTINCT vt0.c0, 0.2410355484958484) IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((LIKELIHOOD(DISTINCT vt0.c0, 0.2410355484958484) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0;
