-- Time: 2024/06/12 07:37:50
-- Database: database35
-- Database version: 3.40.0
-- seed value: 108355335
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1 UNINDEXED); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED, c1 UNINDEXED, tokenize = "unicode61 remove_diacritics 1 tokenchars 'J~51'"); -- 1ms;
END; -- 0ms;
ANALYZE; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE vt0 SET (c0, c0)=(0.3018902041598984, NULL) WHERE ((((vt0.c1)) BETWEEN ((x'')) AND ((vt0.c0))) IN (((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)), (~ (vt0.c0)))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (NULL); -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (NULL, x''), ('-1', x''), ('-810650778', x'e763'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0x7fc8a37f); -- 0ms;
REINDEX RTRIM; -- 1ms;
DELETE FROM sqlite_stat1 WHERE json_quote(((0.48082134335107585) NOTNULL)); -- 0ms;
INSERT OR IGNORE INTO vt1(c0, c1) VALUES ('hkxTS(s', '0.48082134335107585'); -- 0ms;
ROLLBACK TRANSACTION; -- 4ms;
REINDEX  vt0; -- 0ms;
UPDATE OR IGNORE vt1 SET (c1)=('2143855487'); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.5452467959285741) WHERE ((CAST(vt0.c1 AS BLOB)) BETWEEN ((vt0.c1 IN (vt0.c1))) AND (((vt0.c0)-(vt0.c0)))); -- 2ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (x''); -- 12ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (0.30577139377570084, NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 13); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1607286196 unordered'); -- 0ms;
UPDATE vt0 SET c1=NULL, c1='', c0=NULL; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE temp; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'834f') WHERE vt0.c1; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
CREATE VIRTUAL TABLE vt2 USING fts4(c0 UNINDEXED); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt2 VALUES ('2143855487'); -- 1ms;
ANALYZE sqlite_master; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 TEXT ); -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX i43 ON t0((+ ((+ (0X636f03f1)))) COLLATE BINARY ASC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1607286196 0'); -- 1ms;
ANALYZE; -- 6ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET c1=x'd4b1db12' WHERE (((vt1.c1)/(vt1.c0)) IN ()); -- 1ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (NULL), (0.29946397846325934), (x'55cc'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ALTER TABLE t0 ADD COLUMN c39 INT; -- 0ms;
UPDATE OR FAIL vt1 SET (c1)=(x'971e'); -- 0ms;
UPDATE OR IGNORE vt0 SET c1=NULL; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
DELETE FROM vt2; -- 1ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=('-9223372036854775808', '1022485722') WHERE (CASE NULL  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END IN ()); -- 0ms;
END TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt2, vt0, vt1;
SELECT ALL * FROM vt2, vt0, vt1 WHERE (((((vt1.c0)<>(vt1.c0)))-(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) UNION ALL SELECT * FROM vt2, vt0, vt1 WHERE ((NOT (((((vt1.c0)!=(vt1.c0)))-(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))))) UNION ALL SELECT ALL * FROM vt2, vt0, vt1 WHERE (((((((vt1.c0)<>(vt1.c0)))-(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ISNULL));
SELECT ALL * FROM vt2, vt0, vt1;
SELECT DISTINCT vt0.c1 FROM vt2 NATURAL JOIN vt0;
SELECT DISTINCT vt0.c1 FROM vt2 NATURAL JOIN vt0 WHERE ((((((NULL)AND(vt0.c1)), (NOT (vt2.c0)), (~ (vt0.c1))))>=((((((vt2.c0)AND(vt2.c0)))OR(vt0.c1)), ((vt0.c0)<(vt2.c0)), 'BoA2&Iai')))) UNION SELECT DISTINCT vt0.c1 FROM vt2 NATURAL JOIN vt0 WHERE ((NOT ((((((NULL)AND(vt0.c1)), (NOT (vt2.c0)), (~ (vt0.c1))))>=((((((vt2.c0)AND(vt2.c0)))OR(vt0.c1)), ((vt0.c0)<(vt2.c0)), 'BoA2&Iai')))))) UNION SELECT DISTINCT vt0.c1 FROM vt2 NATURAL JOIN vt0 WHERE ((((((((NULL)AND(vt0.c1)), (NOT (vt2.c0)), (~ (vt0.c1))))>=((((((vt2.c0)AND(vt2.c0)))OR(vt0.c1)), ((vt0.c0)<(vt2.c0)), 'BoA2&Iai')))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt2 NATURAL JOIN vt0;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 WHERE ((vt1.c1 IN (vt1.c0, vt1.c0)) COLLATE BINARY) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE ((NOT ((vt1.c1 IN (vt1.c0, vt1.c0)) COLLATE BINARY))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE ((((vt1.c1 IN (vt1.c0, vt1.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1, vt2.c0, vt0.c0, t0.c0, vt0.c1 FROM vt2, vt1, vt0, t0 GROUP BY vt1.c1, vt2.c0, vt0.c0, t0.c0, vt0.c1;
SELECT ALL vt1.c1, vt2.c0, vt0.c0, t0.c0, vt0.c1 FROM vt2, vt1, vt0, t0 GROUP BY vt1.c1, vt2.c0, vt0.c0, t0.c0, vt0.c1 HAVING ((((vt0.c0)||(MAX(MAX(vt2.c0)))))>(SUM(TOTAL(vt0.c1)))) UNION ALL SELECT vt1.c1, vt2.c0, vt0.c0, t0.c0, vt0.c1 FROM vt2, vt1, vt0, t0 GROUP BY vt1.c1, vt2.c0, vt0.c0, t0.c0, vt0.c1 HAVING (NOT (((((vt0.c0)||(MAX(MAX(vt2.c0)))))>(SUM(TOTAL(vt0.c1)))))) UNION ALL SELECT vt1.c1, vt2.c0, vt0.c0, t0.c0, vt0.c1 FROM vt2, vt1, vt0, t0 GROUP BY vt1.c1, vt2.c0, vt0.c0, t0.c0, vt0.c1 HAVING ((((((vt0.c0)||(MAX(MAX(vt2.c0)))))>(SUM(TOTAL(vt0.c1))))) ISNULL);
SELECT vt2.c0 FROM vt2;
SELECT ALL vt2.c0 FROM vt2 WHERE ((((- (vt2.c0))) BETWEEN ('0.5452467959285741') AND ((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0)))))) UNION ALL SELECT vt2.c0 FROM vt2 WHERE ((NOT ((((- (vt2.c0))) BETWEEN ('0.5452467959285741') AND ((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0)))))))) UNION ALL SELECT vt2.c0 FROM vt2 WHERE ((((((- (vt2.c0))) BETWEEN ('0.5452467959285741') AND ((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0)))))) ISNULL));
SELECT vt2.c0 FROM vt2;
SELECT DISTINCT t0.c0, vt0.c0, vt0.c1, t0.c39, vt1.c1 FROM vt1, vt2, t0, vt0;
SELECT DISTINCT t0.c0, vt0.c0, vt0.c1, t0.c39, vt1.c1 FROM vt1, vt2, t0, vt0 WHERE (((- (vt0.c0)) IN ())) UNION SELECT DISTINCT t0.c0, vt0.c0, vt0.c1, t0.c39, vt1.c1 FROM vt1, vt2, t0, vt0 WHERE ((NOT (((- (vt0.c0)) IN ())))) UNION SELECT DISTINCT t0.c0, vt0.c0, vt0.c1, t0.c39, vt1.c1 FROM vt1, vt2, t0, vt0 WHERE (((((- (vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0, vt0.c1, t0.c39, vt1.c1 FROM vt1, vt2, t0, vt0;
SELECT vt1.c1, vt0.c1, vt0.c0 FROM vt2, vt1 CROSS JOIN vt0 ON CAST(((vt0.c1)-(NULL)) AS INTEGER) GROUP BY vt1.c1, vt0.c1, vt0.c0;
SELECT vt1.c1, vt0.c1, vt0.c0 FROM vt2, vt1 CROSS JOIN vt0 ON CAST(((vt0.c1)-(NULL)) AS INTEGER) WHERE (((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))==(((((((((vt0.c0)AND(vt0.c1)))OR(vt2.c0)))AND(vt1.c0)))AND(vt1.c1))))) GROUP BY vt1.c1, vt0.c1, vt0.c0 UNION SELECT ALL vt1.c1, vt0.c1, vt0.c0 FROM vt2, vt1 CROSS JOIN vt0 ON CAST(((vt0.c1)-(NULL)) AS INTEGER) WHERE ((NOT (((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))==(((((((((vt0.c0)AND(vt0.c1)))OR(vt2.c0)))AND(vt1.c0)))AND(vt1.c1))))))) GROUP BY vt1.c1, vt0.c1, vt0.c0 UNION SELECT vt1.c1, vt0.c1, vt0.c0 FROM vt2, vt1 CROSS JOIN vt0 ON CAST(((vt0.c1)-(NULL)) AS INTEGER) WHERE (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))=(((((((((vt0.c0)AND(vt0.c1)))OR(vt2.c0)))AND(vt1.c0)))AND(vt1.c1))))) ISNULL)) GROUP BY vt1.c1, vt0.c1, vt0.c0;
SELECT vt1.c1, vt0.c1, vt0.c0 FROM vt2, vt1 CROSS JOIN vt0 ON CAST(((vt0.c1)-(NULL)) AS INTEGER) GROUP BY vt1.c1, vt0.c1, vt0.c0;
SELECT ALL vt1.c1, vt0.c1, vt0.c0, vt2.c0, vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt1.c1, vt0.c1, vt0.c0, vt2.c0, vt1.c0;
SELECT vt1.c1, vt0.c1, vt0.c0, vt2.c0, vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt1.c1, vt0.c1, vt0.c0, vt2.c0, vt1.c0 HAVING SUM(((((COUNT(*))AND(MAX(vt1.c0))))AND(TOTAL(vt2.c0)))) UNION ALL SELECT vt1.c1, vt0.c1, vt0.c0, vt2.c0, vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt1.c1, vt0.c1, vt0.c0, vt2.c0, vt1.c0 HAVING (NOT (SUM(((((COUNT(*))AND(MAX(vt1.c0))))AND(TOTAL(vt2.c0)))))) UNION ALL SELECT vt1.c1, vt0.c1, vt0.c0, vt2.c0, vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt1.c1, vt0.c1, vt0.c0, vt2.c0, vt1.c0 HAVING ((SUM(((((COUNT(*))AND(MAX(vt1.c0))))AND(TOTAL(vt2.c0))))) ISNULL);
SELECT vt1.c0, vt0.c1, vt0.c0, vt1.c1, vt2.c0, t0.c39 FROM t0, vt1 CROSS JOIN vt2 ON (((((NOT (vt1.c1)))OR((((((((('')OR(vt2.c0)))OR(t0.c0)))OR(vt0.c1)))OR(vt1.c0)))))OR(CAST(x'' AS BLOB))) CROSS JOIN vt0 ON ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)) COLLATE NOCASE COLLATE BINARY;
SELECT vt1.c0, vt0.c1, vt0.c0, vt1.c1, vt2.c0, t0.c39 FROM t0, vt1 CROSS JOIN vt2 ON (((((NOT (vt1.c1)))OR((((((((('')OR(vt2.c0)))OR(t0.c0)))OR(vt0.c1)))OR(vt1.c0)))))OR(CAST(x'' AS BLOB))) CROSS JOIN vt0 ON ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)) COLLATE NOCASE COLLATE BINARY WHERE (((((((((((((vt0.c1 COLLATE RTRIM)AND(vt0.c0)))OR(((vt1.c1)OR(t0.c39)))))OR((NOT (t0.c39)))))OR(((vt0.c0) ISNULL))))AND(vt0.c0)))AND((((t0.c0))<((t0.c0)))))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0, vt1.c1, vt2.c0, t0.c39 FROM t0, vt1 CROSS JOIN vt2 ON (((((NOT (vt1.c1)))OR((((((((('')OR(vt2.c0)))OR(t0.c0)))OR(vt0.c1)))OR(vt1.c0)))))OR(CAST(x'' AS BLOB))) CROSS JOIN vt0 ON ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)) COLLATE NOCASE COLLATE BINARY WHERE ((NOT (((((((((((((vt0.c1 COLLATE RTRIM)AND(vt0.c0)))OR(((vt1.c1)OR(t0.c39)))))OR((NOT (t0.c39)))))OR(((vt0.c0) ISNULL))))AND(vt0.c0)))AND((((t0.c0))<((t0.c0)))))))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0, vt1.c1, vt2.c0, t0.c39 FROM t0, vt1 CROSS JOIN vt2 ON (((((NOT (vt1.c1)))OR((((((((('')OR(vt2.c0)))OR(t0.c0)))OR(vt0.c1)))OR(vt1.c0)))))OR(CAST(x'' AS BLOB))) CROSS JOIN vt0 ON ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)) COLLATE NOCASE COLLATE BINARY WHERE (((((((((((((((vt0.c1 COLLATE RTRIM)AND(vt0.c0)))OR(((vt1.c1)OR(t0.c39)))))OR((NOT (t0.c39)))))OR(((vt0.c0) ISNULL))))AND(vt0.c0)))AND((((t0.c0))<((t0.c0)))))) ISNULL));
SELECT vt1.c0, vt0.c1, vt0.c0, vt1.c1, vt2.c0, t0.c39 FROM t0, vt1 CROSS JOIN vt2 ON (((((NOT (vt1.c1)))OR((((((((('')OR(vt2.c0)))OR(t0.c0)))OR(vt0.c1)))OR(vt1.c0)))))OR(CAST(x'' AS BLOB))) CROSS JOIN vt0 ON ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)) COLLATE NOCASE COLLATE BINARY;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)>>(t0.c39)))<((NOT (t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0)>>(t0.c39)))<((NOT (t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)>>(t0.c39)))<((NOT (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c1, vt1.c0 FROM vt0, vt2, vt1 GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c1, vt1.c0 FROM vt0, vt2, vt1 WHERE ((((COALESCE(vt1.c1, vt1.c1), (- (vt0.c1)), ((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c1)), (vt1.c1 IN ()), (('-878488970') BETWEEN (vt2.c0) AND (vt1.c1))))>((CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 END, CASE WHEN vt0.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt2.c0 WHEN 0.7451229640481615 THEN vt2.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c1 THEN vt0.c0 END, vt1.c1, (((vt0.c0))=((vt2.c0))), CASE vt0.c0  WHEN vt0.c1 THEN vt2.c0 ELSE vt0.c1 END)))) GROUP BY vt0.c1, vt1.c0 UNION SELECT ALL vt0.c1, vt1.c0 FROM vt0, vt2, vt1 WHERE ((NOT ((((COALESCE(vt1.c1, vt1.c1), (- (vt0.c1)), ((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c1)), (vt1.c1 IN ()), (('-878488970') BETWEEN (vt2.c0) AND (vt1.c1))))>((CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 END, CASE WHEN vt0.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt2.c0 WHEN 0.7451229640481615 THEN vt2.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c1 THEN vt0.c0 END, vt1.c1, (((vt0.c0))=((vt2.c0))), CASE vt0.c0  WHEN vt0.c1 THEN vt2.c0 ELSE vt0.c1 END)))))) GROUP BY vt0.c1, vt1.c0 UNION SELECT vt0.c1, vt1.c0 FROM vt0, vt2, vt1 WHERE ((((((COALESCE(vt1.c1, vt1.c1), (- (vt0.c1)), ((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c1)), (vt1.c1 IN ()), (('-878488970') BETWEEN (vt2.c0) AND (vt1.c1))))>((CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 END, CASE WHEN vt0.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt2.c0 WHEN 0.7451229640481615 THEN vt2.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c1 THEN vt0.c0 END, vt1.c1, (((vt0.c0))=((vt2.c0))), CASE vt0.c0  WHEN vt0.c1 THEN vt2.c0 ELSE vt0.c1 END)))) ISNULL)) GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c1, vt1.c0 FROM vt0, vt2, vt1 GROUP BY vt0.c1, vt1.c0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(vt0.c0)) BETWEEN (TOTAL(vt0.c0)) AND (MIN(vt0.c0))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (((COUNT(vt0.c0)) BETWEEN (TOTAL(vt0.c0)) AND (MIN(vt0.c0))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((COUNT(vt0.c0)) BETWEEN (TOTAL(vt0.c0)) AND (MIN(vt0.c0)))) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(vt0.c0)) BETWEEN (TOTAL(vt0.c0)) AND (MIN(vt0.c0))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (((COUNT(vt0.c0)) BETWEEN (TOTAL(vt0.c0)) AND (MIN(vt0.c0))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((COUNT(vt0.c0)) BETWEEN (TOTAL(vt0.c0)) AND (MIN(vt0.c0)))) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT t0.c39 FROM t0, vt2, vt0, vt1;
SELECT ALL t0.c39 FROM t0, vt2, vt0, vt1 WHERE (CASE WHEN ((vt1.c1) ISNULL) THEN ((vt0.c1)IS(t0.c39)) ELSE CAST(vt1.c0 AS TEXT) END) UNION ALL SELECT t0.c39 FROM t0, vt2, vt0, vt1 WHERE ((NOT (CASE WHEN ((vt1.c1) ISNULL) THEN ((vt0.c1)IS(t0.c39)) ELSE CAST(vt1.c0 AS TEXT) END))) UNION ALL SELECT t0.c39 FROM t0, vt2, vt0, vt1 WHERE (((CASE WHEN ((vt1.c1) ISNULL) THEN ((vt0.c1)IS(t0.c39)) ELSE CAST(vt1.c0 AS TEXT) END) ISNULL));
SELECT t0.c39 FROM t0, vt2, vt0, vt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c39 AS INTEGER))&(((t0.c39) IS TRUE)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((CAST(t0.c39 AS INTEGER))&(((t0.c39) IS TRUE)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((CAST(t0.c39 AS INTEGER))&(((t0.c39) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt0.c1, vt0.c0, t0.c39 FROM t0 RIGHT OUTER JOIN vt0 ON vt0.c1 GROUP BY vt0.c1, vt0.c0, t0.c39;
SELECT ALL vt0.c1, vt0.c0, t0.c39 FROM t0 RIGHT OUTER JOIN vt0 ON vt0.c1 WHERE (((((0.5089732866977332)=(456445374)))>>((- (vt0.c1))))) GROUP BY vt0.c1, vt0.c0, t0.c39 UNION SELECT vt0.c1, vt0.c0, t0.c39 FROM t0 RIGHT OUTER JOIN vt0 ON vt0.c1 WHERE ((NOT (((((0.5089732866977332)==(456445374)))>>((- (vt0.c1))))))) GROUP BY vt0.c1, vt0.c0, t0.c39 UNION SELECT vt0.c1, vt0.c0, t0.c39 FROM t0 RIGHT OUTER JOIN vt0 ON vt0.c1 WHERE (((((((0.5089732866977332)==(456445374)))>>((- (vt0.c1))))) ISNULL)) GROUP BY vt0.c1, vt0.c0, t0.c39;
SELECT ALL vt0.c1, vt0.c0, t0.c39 FROM t0 RIGHT OUTER JOIN vt0 ON vt0.c1 GROUP BY vt0.c1, vt0.c0, t0.c39;
SELECT ALL t0.c0, vt0.c1 FROM vt0, t0 INNER JOIN vt2 ON UPPER(vt0.c0) COLLATE BINARY GROUP BY t0.c0, vt0.c1;
SELECT ALL t0.c0, vt0.c1 FROM vt0, t0 INNER JOIN vt2 ON UPPER(vt0.c0) COLLATE BINARY GROUP BY t0.c0, vt0.c1 HAVING ((SUM(t0.c0))&(ABS(vt0.c0))) UNION ALL SELECT ALL t0.c0, vt0.c1 FROM vt0, t0 INNER JOIN vt2 ON UPPER(vt0.c0) COLLATE BINARY GROUP BY t0.c0, vt0.c1 HAVING (NOT (((SUM(t0.c0))&(ABS(vt0.c0))))) UNION ALL SELECT t0.c0, vt0.c1 FROM vt0 NOT INDEXED, t0 INNER JOIN vt2 ON UPPER(vt0.c0) COLLATE BINARY GROUP BY t0.c0, vt0.c1 HAVING ((((SUM(t0.c0))&(ABS(vt0.c0)))) ISNULL);
SELECT ALL t0.c0, vt0.c1 FROM vt0, t0 INNER JOIN vt2 ON UPPER(vt0.c0) COLLATE BINARY GROUP BY t0.c0, vt0.c1;
SELECT ALL t0.c0, vt0.c1 FROM vt0, t0 INNER JOIN vt2 ON UPPER(vt0.c0) COLLATE BINARY GROUP BY t0.c0, vt0.c1 HAVING ((SUM(t0.c0))&(ABS(vt0.c0))) UNION ALL SELECT ALL t0.c0, vt0.c1 FROM vt0, t0 INNER JOIN vt2 ON UPPER(vt0.c0) COLLATE BINARY GROUP BY t0.c0, vt0.c1 HAVING (NOT (((SUM(t0.c0))&(ABS(vt0.c0))))) UNION ALL SELECT t0.c0, vt0.c1 FROM vt0 NOT INDEXED, t0 INNER JOIN vt2 ON UPPER(vt0.c0) COLLATE BINARY GROUP BY t0.c0, vt0.c1 HAVING ((((SUM(t0.c0))&(ABS(vt0.c0)))) ISNULL);
SELECT ALL t0.c0, vt0.c1 FROM vt0, t0 INNER JOIN vt2 ON UPPER(vt0.c0) COLLATE BINARY GROUP BY t0.c0, vt0.c1;
SELECT ALL MIN((+ (((vt1.c1)-(vt1.c0))))) FROM vt1 ORDER BY 0.409398907514689 ASC;
SELECT * FROM vt2, vt0;
SELECT * FROM vt2, vt0 WHERE ((0.054172036448600136 IN ())) UNION ALL SELECT * FROM vt2, vt0 WHERE ((NOT ((0.054172036448600136 IN ())))) UNION ALL SELECT ALL * FROM vt2, vt0 WHERE ((((0.054172036448600136 IN ())) ISNULL));
SELECT * FROM vt2, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c1) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t0.c0, vt0.c0, t0.c39 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c39;
SELECT ALL t0.c0, vt0.c0, t0.c39 FROM vt0, t0 WHERE (LIKELIHOOD(DISTINCT TRIM(t0.c39), 0.8853068775266865)) GROUP BY t0.c0, vt0.c0, t0.c39 UNION SELECT t0.c0, vt0.c0, t0.c39 FROM vt0, t0 WHERE ((NOT (LIKELIHOOD(DISTINCT TRIM(t0.c39), 0.8853068775266865)))) GROUP BY t0.c0, vt0.c0, t0.c39 UNION SELECT ALL t0.c0, vt0.c0, t0.c39 FROM vt0, t0 WHERE (((LIKELIHOOD(DISTINCT TRIM(t0.c39), 0.8853068775266865)) ISNULL)) GROUP BY t0.c0, vt0.c0, t0.c39;
SELECT t0.c0, vt0.c0, t0.c39 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c39;
SELECT ALL t0.c0, t0.c39, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, t0.c39, vt0.c1, vt0.c0;
SELECT ALL t0.c0, t0.c39, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, t0.c39, vt0.c1, vt0.c0 HAVING MIN(GROUP_CONCAT(SUM(vt0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL t0.c0, t0.c39, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, t0.c39, vt0.c1, vt0.c0 HAVING (NOT (MIN(GROUP_CONCAT(SUM(vt0.c0)) COLLATE RTRIM))) UNION ALL SELECT t0.c0, t0.c39, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, t0.c39, vt0.c1, vt0.c0 HAVING ((MIN(GROUP_CONCAT(SUM(vt0.c0)) COLLATE RTRIM)) ISNULL);
SELECT ALL t0.c39, t0.c0 FROM t0;
SELECT t0.c39, t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS INTEGER))%(CASE t0.c0  WHEN t0.c39 THEN t0.c0 ELSE t0.c0 END))) UNION ALL SELECT t0.c39, t0.c0 FROM t0 WHERE ((NOT (((CAST(t0.c0 AS INTEGER))%(CASE t0.c0  WHEN t0.c39 THEN t0.c0 ELSE t0.c0 END))))) UNION ALL SELECT ALL t0.c39, t0.c0 FROM t0 WHERE (((((CAST(t0.c0 AS INTEGER))%(CASE t0.c0  WHEN t0.c39 THEN t0.c0 ELSE t0.c0 END))) ISNULL));
SELECT ALL t0.c39, t0.c0 FROM t0;
SELECT DISTINCT vt2.c0 FROM vt2, vt0, t0;
SELECT DISTINCT vt2.c0 FROM vt2, vt0, t0 WHERE ((((((t0.c39, vt0.c0, vt0.c0)) BETWEEN ((t0.c39, vt2.c0, vt0.c1)) AND ((x'', t0.c39, vt0.c0))))IS(0Xffffffff857c7aee))) UNION SELECT DISTINCT vt2.c0 FROM vt2, vt0, t0 WHERE ((NOT ((((((t0.c39, vt0.c0, vt0.c0)) BETWEEN ((t0.c39, vt2.c0, vt0.c1)) AND ((x'', t0.c39, vt0.c0))))IS(0xffffffff857c7aee))))) UNION SELECT DISTINCT vt2.c0 FROM vt2, vt0, t0 WHERE ((((((((t0.c39, vt0.c0, vt0.c0)) BETWEEN ((t0.c39, vt2.c0, vt0.c1)) AND ((x'', t0.c39, vt0.c0))))IS(0xffffffff857c7aee))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2, vt0, t0;
SELECT ALL vt2.c0, vt1.c1, t0.c39, t0.c0, vt0.c1 FROM vt0, t0, vt2, vt1 GROUP BY vt2.c0, vt1.c1, t0.c39, t0.c0, vt0.c1;
SELECT ALL vt2.c0, vt1.c1, t0.c39, t0.c0, vt0.c1 FROM vt0, t0, vt2, vt1 WHERE ((vt0.c0 IN (t0.c0, t0.c0)) COLLATE NOCASE) GROUP BY vt2.c0, vt1.c1, t0.c39, t0.c0, vt0.c1 UNION SELECT vt2.c0, vt1.c1, t0.c39, t0.c0, vt0.c1 FROM vt0, t0, vt2, vt1 WHERE ((NOT ((vt0.c0 IN (t0.c0, t0.c0)) COLLATE NOCASE))) GROUP BY vt2.c0, vt1.c1, t0.c39, t0.c0, vt0.c1 UNION SELECT ALL vt2.c0, vt1.c1, t0.c39, t0.c0, vt0.c1 FROM vt0, t0, vt2, vt1 WHERE ((((vt0.c0 IN (t0.c0, t0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt2.c0, vt1.c1, t0.c39, t0.c0, vt0.c1;
SELECT ALL vt2.c0, vt1.c1, t0.c39, t0.c0, vt0.c1 FROM vt0, t0, vt2, vt1 GROUP BY vt2.c0, vt1.c1, t0.c39, t0.c0, vt0.c1;
SELECT vt1.c1, t0.c39, vt0.c0 FROM t0, vt0, vt2 INDEXED BY i43, vt1 GROUP BY vt1.c1, t0.c39, vt0.c0;
SELECT * FROM vt1, vt2;
SELECT ALL * FROM vt1, vt2 WHERE ('') UNION ALL SELECT * FROM vt1, vt2 WHERE ((NOT (''))) UNION ALL SELECT ALL * FROM vt1, vt2 WHERE ((('') ISNULL));
SELECT * FROM vt1, vt2;
SELECT DISTINCT * FROM vt0, vt2;
SELECT DISTINCT * FROM vt0, vt2 WHERE (((((((((NULL)OR(vt0.c1)))OR(vt2.c0 COLLATE RTRIM)))OR(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt2.c0 END)))AND((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0)))))) UNION SELECT DISTINCT * FROM vt0, vt2 WHERE ((NOT (((((((((NULL)OR(vt0.c1)))OR(vt2.c0 COLLATE RTRIM)))OR(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt2.c0 END)))AND((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0)))))))) UNION SELECT DISTINCT * FROM vt0, vt2 WHERE (((((((((((NULL)OR(vt0.c1)))OR(vt2.c0 COLLATE RTRIM)))OR(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt2.c0 END)))AND((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt2;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (((((x'')IS NOT(x''))) IS TRUE)) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (((((x'')IS NOT(x''))) IS TRUE)))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (((((((x'')IS NOT(x''))) IS TRUE)) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c0, t0.c0, vt2.c0 FROM t0, vt2, vt1 GROUP BY vt1.c0, t0.c0, vt2.c0;
SELECT ALL vt1.c0, t0.c0, vt2.c0 FROM t0, vt2, vt1 GROUP BY vt1.c0, t0.c0, vt2.c0 HAVING MIN((- (TOTAL(GROUP_CONCAT(t0.c0))))) UNION ALL SELECT vt1.c0, t0.c0, vt2.c0 FROM t0, vt2, vt1 GROUP BY vt1.c0, t0.c0, vt2.c0 HAVING (NOT (MIN((- (TOTAL(GROUP_CONCAT(t0.c0))))))) UNION ALL SELECT vt1.c0, t0.c0, vt2.c0 FROM t0, vt2, vt1 GROUP BY vt1.c0, t0.c0, vt2.c0 HAVING ((MIN((- (TOTAL(GROUP_CONCAT(t0.c0)))))) ISNULL);
SELECT MAX(NULLIF(DISTINCT ((t0.c39)LIKE(t0.c0)), t0.c39)) FROM t0;
SELECT ALL vt1.c1 FROM vt1, vt2;
SELECT vt1.c1 FROM vt1, vt2 WHERE ((((json_quote(vt2.c0), (vt1.c1 IN ()), NULL COLLATE BINARY))<=((vt2.c0, x'584bee1e', ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))))) UNION ALL SELECT ALL vt1.c1 FROM vt1, vt2 WHERE ((NOT ((((json_quote(vt2.c0), (vt1.c1 IN ()), NULL COLLATE BINARY))<=((vt2.c0, x'584bee1e', ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))))))) UNION ALL SELECT ALL vt1.c1 FROM vt1, vt2 WHERE ((((((json_quote(vt2.c0), (vt1.c1 IN ()), NULL COLLATE BINARY))<=((vt2.c0, x'584bee1e', ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))))) ISNULL));
SELECT ALL vt1.c1 FROM vt1, vt2;
SELECT DISTINCT vt1.c0 FROM vt0, vt2, vt1, t0;
SELECT DISTINCT vt1.c0 FROM vt0, vt2, vt1, t0 WHERE (((vt2.c0) IS FALSE)) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt2, vt1, t0 WHERE ((NOT (((vt2.c0) IS FALSE)))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt2, vt1, t0 WHERE (((((vt2.c0) IS FALSE)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, vt2, vt1, t0;
SELECT t0.c39, t0.c0 FROM t0 GROUP BY t0.c39, t0.c0;
SELECT t0.c39, t0.c0 FROM t0 WHERE (NULLIF((t0.c0 IN (t0.c0, t0.c39)), (((t0.c0))!=((t0.c0))))) GROUP BY t0.c39, t0.c0 UNION SELECT t0.c39, t0.c0 FROM t0 WHERE ((NOT (NULLIF((t0.c0 IN (t0.c0, t0.c39)), (((t0.c0))<>((t0.c0))))))) GROUP BY t0.c39, t0.c0 UNION SELECT ALL t0.c39, t0.c0 FROM t0 WHERE (((NULLIF((t0.c0 IN (t0.c0, t0.c39)), (((t0.c0))!=((t0.c0))))) ISNULL)) GROUP BY t0.c39, t0.c0;
SELECT t0.c39, t0.c0 FROM t0 GROUP BY t0.c39, t0.c0;
SELECT t0.c39, t0.c0 FROM t0, vt0, vt2 GROUP BY t0.c39, t0.c0;
SELECT t0.c39, t0.c0 FROM t0, vt0, vt2 GROUP BY t0.c39, t0.c0 HAVING CASE WHEN ((MIN(SUM(MIN(COUNT(*))))) IS TRUE) THEN ((SUM(COUNT(AVG(GROUP_CONCAT(t0.c39)))))AND(vt2.c0)) WHEN COUNT(*) THEN GROUP_CONCAT(SUM(MAX(vt0.c0))) WHEN MIN(COUNT(AVG(GROUP_CONCAT(vt2.c0)))) THEN SUM(MIN(SUM(vt0.c0))) COLLATE BINARY END UNION ALL SELECT ALL t0.c39, t0.c0 FROM t0, vt0, vt2 GROUP BY t0.c39, t0.c0 HAVING (NOT (CASE WHEN ((MIN(SUM(MIN(COUNT(*))))) IS TRUE) THEN ((SUM(COUNT(AVG(GROUP_CONCAT(t0.c39)))))AND(vt2.c0)) WHEN COUNT(*) THEN GROUP_CONCAT(SUM(MAX(vt0.c0))) WHEN MIN(COUNT(AVG(GROUP_CONCAT(vt2.c0)))) THEN SUM(MIN(SUM(vt0.c0))) COLLATE BINARY END)) UNION ALL SELECT ALL t0.c39, t0.c0 FROM t0, vt0, vt2 GROUP BY t0.c39, t0.c0 HAVING ((CASE WHEN ((MIN(SUM(MIN(COUNT(*))))) IS TRUE) THEN ((SUM(COUNT(AVG(GROUP_CONCAT(t0.c39)))))AND(vt2.c0)) WHEN COUNT(*) THEN GROUP_CONCAT(SUM(MAX(vt0.c0))) WHEN MIN(COUNT(AVG(GROUP_CONCAT(vt2.c0)))) THEN SUM(MIN(SUM(vt0.c0))) COLLATE BINARY END) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((((t0.c0 IN ('')))<(IFNULL(DISTINCT t0.c0, t0.c0)))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((t0.c0 IN ('')))<(IFNULL(DISTINCT t0.c0, t0.c0)))))) UNION ALL SELECT * FROM t0 WHERE ((((((t0.c0 IN ('')))<(IFNULL(DISTINCT t0.c0, t0.c0)))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c39, vt0.c1, vt1.c1, vt2.c0 FROM t0, vt1 RIGHT OUTER JOIN vt2 ON ((((vt1.c0) IS FALSE)) ISNULL) CROSS JOIN vt0 ON (+ (CAST(vt2.c0 AS NUMERIC)));
SELECT DISTINCT t0.c39, vt0.c1, vt1.c1, vt2.c0 FROM t0, vt1 RIGHT OUTER JOIN vt2 ON ((((vt1.c0) IS FALSE)) ISNULL) CROSS JOIN vt0 ON (+ (CAST(vt2.c0 AS NUMERIC))) WHERE (vt1.c1) UNION SELECT DISTINCT t0.c39, vt0.c1, vt1.c1, vt2.c0 FROM t0, vt1 RIGHT OUTER JOIN vt2 ON ((((vt1.c0) IS FALSE)) ISNULL) CROSS JOIN vt0 ON (+ (CAST(vt2.c0 AS NUMERIC))) WHERE ((NOT (vt1.c1))) UNION SELECT DISTINCT t0.c39, vt0.c1, vt1.c1, vt2.c0 FROM t0, vt1 RIGHT OUTER JOIN vt2 ON ((((vt1.c0) IS FALSE)) ISNULL) CROSS JOIN vt0 ON (+ (CAST(vt2.c0 AS NUMERIC))) WHERE (((vt1.c1) ISNULL));
SELECT DISTINCT t0.c39, vt0.c1, vt1.c1, vt2.c0 FROM t0, vt1 RIGHT OUTER JOIN vt2 ON ((((vt1.c0) IS FALSE)) ISNULL) CROSS JOIN vt0 ON (+ (CAST(vt2.c0 AS NUMERIC)));
SELECT vt1.c0, vt1.c1, vt0.c1 FROM vt1, vt2, t0, vt0 GROUP BY vt1.c0, vt1.c1, vt0.c1;
SELECT ALL vt1.c0, vt1.c1, vt0.c1 FROM vt1, vt2, t0, vt0 WHERE (((vt2.c0)OR(vt1.c0 COLLATE BINARY))) GROUP BY vt1.c0, vt1.c1, vt0.c1 UNION SELECT vt1.c0, vt1.c1, vt0.c1 FROM vt1, vt2, t0, vt0 WHERE ((NOT (((vt2.c0)OR(vt1.c0 COLLATE BINARY))))) GROUP BY vt1.c0, vt1.c1, vt0.c1 UNION SELECT ALL vt1.c0, vt1.c1, vt0.c1 FROM vt1, vt2, t0, vt0 WHERE (((((vt2.c0)OR(vt1.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt1.c0, vt1.c1, vt0.c1;
SELECT vt1.c0, vt1.c1, vt0.c1 FROM vt1, vt2, t0, vt0 GROUP BY vt1.c0, vt1.c1, vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING TOTAL(GROUP_CONCAT(vt0.c1)) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (TOTAL(GROUP_CONCAT(vt0.c1)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((TOTAL(GROUP_CONCAT(vt0.c1))) ISNULL);
SELECT ALL t0.c39 FROM t0, vt2, vt1;
SELECT t0.c39 FROM t0, vt2, vt1 WHERE (NULL) ORDER BY json(vt1.c0 COLLATE NOCASE) ASC, ((((((t0.c39) ISNULL))AND((NOT ('403322793')))))OR(((vt2.c0) NOTNULL)))  NULLS FIRST;
SELECT t0.c39 FROM t0, vt2, vt1 WHERE ((NOT (NULL))) ORDER BY json(vt1.c0 COLLATE NOCASE) ASC, ((((((t0.c39) ISNULL))AND((NOT ('403322793')))))OR(((vt2.c0) NOTNULL)))  NULLS FIRST;
SELECT ALL t0.c39 FROM t0, vt2, vt1 WHERE (((NULL) ISNULL)) ORDER BY json(vt1.c0 COLLATE NOCASE) ASC, ((((((t0.c39) ISNULL))AND((NOT ('403322793')))))OR(((vt2.c0) NOTNULL)))  NULLS FIRST;
SELECT ALL t0.c39 FROM t0, vt2, vt1;
SELECT DISTINCT * FROM vt0, vt2;
SELECT DISTINCT * FROM vt0, vt2 WHERE (CAST(CASE WHEN vt0.c1 THEN vt2.c0 END AS REAL)) UNION SELECT DISTINCT * FROM vt0, vt2 WHERE ((NOT (CAST(CASE WHEN vt0.c1 THEN vt2.c0 END AS REAL)))) UNION SELECT DISTINCT * FROM vt0, vt2 WHERE (((CAST(CASE WHEN vt0.c1 THEN vt2.c0 END AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt0, vt2;
SELECT ALL vt0.c0, t0.c39, vt0.c1 FROM vt2, t0, vt0 GROUP BY vt0.c0, t0.c39, vt0.c1;
SELECT vt0.c0, t0.c39, vt0.c1 FROM vt2, t0, vt0 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt2.c0) BETWEEN (vt0.c0) AND (t0.c39)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END END) GROUP BY vt0.c0, t0.c39, vt0.c1 UNION SELECT vt0.c0, t0.c39, vt0.c1 FROM vt2, t0, vt0 WHERE ((NOT (CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt2.c0) BETWEEN (vt0.c0) AND (t0.c39)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END END))) GROUP BY vt0.c0, t0.c39, vt0.c1 UNION SELECT ALL vt0.c0, t0.c39, vt0.c1 FROM vt2, t0, vt0 WHERE (((CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt2.c0) BETWEEN (vt0.c0) AND (t0.c39)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END END) ISNULL)) GROUP BY vt0.c0, t0.c39, vt0.c1;
SELECT ALL vt0.c0, t0.c39, vt0.c1 FROM vt2, t0, vt0 GROUP BY vt0.c0, t0.c39, vt0.c1;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING GROUP_CONCAT(MIN(MAX(vt2.c0))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (GROUP_CONCAT(MIN(MAX(vt2.c0))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((GROUP_CONCAT(MIN(MAX(vt2.c0)))) ISNULL);
SELECT vt2.c0 FROM vt2;
SELECT vt2.c0 FROM vt2 WHERE ((((((vt2.c0) IS TRUE)))<((vt2.c0 COLLATE RTRIM)))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT ((((((vt2.c0) IS TRUE)))<((vt2.c0 COLLATE RTRIM)))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE ((((((((vt2.c0) IS TRUE)))<((vt2.c0 COLLATE RTRIM)))) ISNULL));
SELECT vt2.c0 FROM vt2;
SELECT DISTINCT vt1.c0, t0.c39, vt2.c0, vt0.c1 FROM vt1, vt0, vt2, t0;
SELECT DISTINCT vt1.c0, t0.c39, vt2.c0, vt0.c1 FROM vt1, vt0, vt2, t0 WHERE (CAST(((vt1.c1) BETWEEN (t0.c0) AND (t0.c39)) AS REAL)) UNION SELECT DISTINCT vt1.c0, t0.c39, vt2.c0, vt0.c1 FROM vt1, vt0, vt2, t0 WHERE ((NOT (CAST(((vt1.c1) BETWEEN (t0.c0) AND (t0.c39)) AS REAL)))) UNION SELECT DISTINCT vt1.c0, t0.c39, vt2.c0, vt0.c1 FROM vt1, vt0, vt2, t0 WHERE (((CAST(((vt1.c1) BETWEEN (t0.c0) AND (t0.c39)) AS REAL)) ISNULL));
SELECT DISTINCT vt1.c0, t0.c39, vt2.c0, vt0.c1 FROM vt1, vt0, vt2, t0;
SELECT vt1.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt0, vt1 WHERE ((json_array(vt0.c0, vt1.c0) IN ())) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt0, vt1 WHERE ((NOT ((json_array(vt0.c0, vt1.c0) IN ())))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt0, vt1 WHERE ((((json_array(vt0.c0, vt1.c0) IN ())) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, t0.c0, vt1.c1 FROM vt1 INNER JOIN t0 ON ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c39))) NOT BETWEEN (vt1.c1 COLLATE RTRIM) AND (((t0.c0) NOT BETWEEN (0.5452467959285741) AND (vt1.c0)))) GROUP BY vt1.c0, t0.c0, vt1.c1;
SELECT vt1.c0, t0.c0, vt1.c1 FROM vt1 INNER JOIN t0 ON ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c39))) NOT BETWEEN (vt1.c1 COLLATE RTRIM) AND (((t0.c0) NOT BETWEEN (0.5452467959285741) AND (vt1.c0)))) GROUP BY vt1.c0, t0.c0, vt1.c1 HAVING SUM(AVG(vt1.c0)) UNION ALL SELECT ALL vt1.c0, t0.c0, vt1.c1 FROM vt1 INNER JOIN t0 ON ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c39))) NOT BETWEEN (vt1.c1 COLLATE RTRIM) AND (((t0.c0) NOT BETWEEN (0.5452467959285741) AND (vt1.c0)))) GROUP BY vt1.c0, t0.c0, vt1.c1 HAVING (NOT (SUM(AVG(vt1.c0)))) UNION ALL SELECT vt1.c0, t0.c0, vt1.c1 FROM vt1 INNER JOIN t0 ON ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c39))) NOT BETWEEN (vt1.c1 COLLATE RTRIM) AND (((t0.c0) NOT BETWEEN (0.5452467959285741) AND (vt1.c0)))) GROUP BY vt1.c0, t0.c0, vt1.c1 HAVING ((SUM(AVG(vt1.c0))) ISNULL);
SELECT ALL * FROM t0, vt2, vt1;
SELECT ALL * FROM t0, vt2, vt1 WHERE (0.7412146629830771) UNION ALL SELECT ALL * FROM t0, vt2, vt1 WHERE ((NOT (0.7412146629830771))) UNION ALL SELECT ALL * FROM t0, vt2, vt1 WHERE (((0.7412146629830771) ISNULL));
SELECT ALL * FROM t0, vt2, vt1;
SELECT DISTINCT t0.c0, vt1.c0, t0.c39, vt1.c1, vt2.c0 FROM t0, vt1 INNER JOIN vt2 ON '-1862751135';
SELECT DISTINCT t0.c0, vt1.c0, t0.c39, vt1.c1, vt2.c0 FROM t0, vt1 INNER JOIN vt2 ON '-1862751135' WHERE ((((vt1.c0 IN ()))>(((t0.c39) BETWEEN (vt2.c0) AND (vt1.c1))))) UNION SELECT DISTINCT t0.c0, vt1.c0, t0.c39, vt1.c1, vt2.c0 FROM t0, vt1 INNER JOIN vt2 ON '-1862751135' WHERE ((NOT ((((vt1.c0 IN ()))>(((t0.c39) BETWEEN (vt2.c0) AND (vt1.c1))))))) UNION SELECT DISTINCT t0.c0, vt1.c0, t0.c39, vt1.c1, vt2.c0 FROM t0, vt1 INNER JOIN vt2 ON '-1862751135' WHERE ((((((vt1.c0 IN ()))>(((t0.c39) BETWEEN (vt2.c0) AND (vt1.c1))))) ISNULL));
SELECT DISTINCT t0.c0, vt1.c0, t0.c39, vt1.c1, vt2.c0 FROM t0, vt1 INNER JOIN vt2 ON '-1862751135';
SELECT ALL vt2.c0, t0.c39, t0.c0 FROM vt2, t0 GROUP BY vt2.c0, t0.c39, t0.c0;
SELECT vt2.c0, t0.c39, t0.c0 FROM vt2, t0 WHERE (NULL) GROUP BY vt2.c0, t0.c39, t0.c0 UNION SELECT vt2.c0, t0.c39, t0.c0 FROM vt2 NOT INDEXED, t0 WHERE ((NOT (NULL))) GROUP BY vt2.c0, t0.c39, t0.c0 UNION SELECT vt2.c0, t0.c39, t0.c0 FROM vt2, t0 WHERE (((NULL) ISNULL)) GROUP BY vt2.c0, t0.c39, t0.c0;
SELECT ALL vt2.c0, t0.c39, t0.c0 FROM vt2, t0 GROUP BY vt2.c0, t0.c39, t0.c0;
SELECT t0.c0, t0.c39, vt2.c0 FROM t0 CROSS JOIN vt2 ON (((vt0.c0)) BETWEEN ((t0.c39)) AND ((CASE t0.c39  WHEN t0.c0 THEN vt0.c1 END))) INNER JOIN vt0 ON CAST('ᾢ''Uw9RE' AS TEXT) GROUP BY t0.c0, t0.c39, vt2.c0;
SELECT t0.c0, t0.c39, vt2.c0 FROM t0 CROSS JOIN vt2 ON (((vt0.c0)) BETWEEN ((t0.c39)) AND ((CASE t0.c39  WHEN t0.c0 THEN vt0.c1 END))) INNER JOIN vt0 ON CAST('ᾢ''Uw9RE' AS TEXT) GROUP BY t0.c0, t0.c39, vt2.c0 HAVING (t0.c39 IN (TOTAL(vt0.c1))) COLLATE BINARY UNION ALL SELECT t0.c0, t0.c39, vt2.c0 FROM t0 CROSS JOIN vt2 ON (((vt0.c0)) BETWEEN ((t0.c39)) AND ((CASE t0.c39  WHEN t0.c0 THEN vt0.c1 END))) INNER JOIN vt0 ON CAST('ᾢ''Uw9RE' AS TEXT) GROUP BY t0.c0, t0.c39, vt2.c0 HAVING (NOT ((t0.c39 IN (TOTAL(vt0.c1))) COLLATE BINARY)) UNION ALL SELECT t0.c0, t0.c39, vt2.c0 FROM t0 CROSS JOIN vt2 ON (((vt0.c0)) BETWEEN ((t0.c39)) AND ((CASE t0.c39  WHEN t0.c0 THEN vt0.c1 END))) INNER JOIN vt0 ON CAST('ᾢ''Uw9RE' AS TEXT) GROUP BY t0.c0, t0.c39, vt2.c0 HAVING (((t0.c39 IN (TOTAL(vt0.c1))) COLLATE BINARY) ISNULL);
SELECT t0.c0, t0.c39, vt2.c0 FROM t0 CROSS JOIN vt2 ON (((vt0.c0)) BETWEEN ((t0.c39)) AND ((CASE t0.c39  WHEN t0.c0 THEN vt0.c1 END))) INNER JOIN vt0 ON CAST('ᾢ''Uw9RE' AS TEXT) GROUP BY t0.c0, t0.c39, vt2.c0;
SELECT t0.c0, t0.c39, vt2.c0 FROM t0 CROSS JOIN vt2 ON (((vt0.c0)) BETWEEN ((t0.c39)) AND ((CASE t0.c39  WHEN t0.c0 THEN vt0.c1 END))) INNER JOIN vt0 ON CAST('ᾢ''Uw9RE' AS TEXT) GROUP BY t0.c0, t0.c39, vt2.c0 HAVING (t0.c39 IN (TOTAL(vt0.c1))) COLLATE BINARY UNION ALL SELECT t0.c0, t0.c39, vt2.c0 FROM t0 CROSS JOIN vt2 ON (((vt0.c0)) BETWEEN ((t0.c39)) AND ((CASE t0.c39  WHEN t0.c0 THEN vt0.c1 END))) INNER JOIN vt0 ON CAST('ᾢ''Uw9RE' AS TEXT) GROUP BY t0.c0, t0.c39, vt2.c0 HAVING (NOT ((t0.c39 IN (TOTAL(vt0.c1))) COLLATE BINARY)) UNION ALL SELECT t0.c0, t0.c39, vt2.c0 FROM t0 CROSS JOIN vt2 ON (((vt0.c0)) BETWEEN ((t0.c39)) AND ((CASE t0.c39  WHEN t0.c0 THEN vt0.c1 END))) INNER JOIN vt0 ON CAST('ᾢ''Uw9RE' AS TEXT) GROUP BY t0.c0, t0.c39, vt2.c0 HAVING (((t0.c39 IN (TOTAL(vt0.c1))) COLLATE BINARY) ISNULL);
SELECT t0.c0, t0.c39, vt2.c0 FROM t0 CROSS JOIN vt2 ON (((vt0.c0)) BETWEEN ((t0.c39)) AND ((CASE t0.c39  WHEN t0.c0 THEN vt0.c1 END))) INNER JOIN vt0 ON CAST('ᾢ''Uw9RE' AS TEXT) GROUP BY t0.c0, t0.c39, vt2.c0;
SELECT * FROM vt2;
SELECT * FROM vt2 WHERE (json_array((((vt2.c0, vt2.c0, vt2.c0))<(('1401481838', '1022485722', vt2.c0))), ((vt2.c0) IS FALSE), 0x636f03f1 COLLATE RTRIM, ((vt2.c0) NOT NULL), (NOT (vt2.c0)), ((vt2.c0)=(vt2.c0)))) UNION ALL SELECT ALL * FROM vt2 WHERE ((NOT (json_array((((vt2.c0, vt2.c0, vt2.c0))<(('1401481838', '1022485722', vt2.c0))), ((vt2.c0) IS FALSE), 0X636f03f1 COLLATE RTRIM, ((vt2.c0) NOT NULL), (NOT (vt2.c0)), ((vt2.c0)==(vt2.c0)))))) UNION ALL SELECT * FROM vt2 WHERE (((json_array((((vt2.c0, vt2.c0, vt2.c0))<(('1401481838', '1022485722', vt2.c0))), ((vt2.c0) IS FALSE), 0x636f03f1 COLLATE RTRIM, ((vt2.c0) NOT NULL), (NOT (vt2.c0)), ((vt2.c0)==(vt2.c0)))) ISNULL));
SELECT * FROM vt2;
SELECT DISTINCT vt0.c1, t0.c0 FROM vt2, vt0, t0;
SELECT DISTINCT vt0.c1, t0.c0 FROM vt2, vt0, t0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt2.c0 WHEN vt0.c1 THEN t0.c0 END COLLATE NOCASE) UNION SELECT DISTINCT vt0.c1, t0.c0 FROM vt2, vt0, t0 WHERE ((NOT (CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt2.c0 WHEN vt0.c1 THEN t0.c0 END COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c1, t0.c0 FROM vt2, vt0, t0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt2.c0 WHEN vt0.c1 THEN t0.c0 END COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c1, t0.c0 FROM vt2, vt0, t0;
SELECT t0.c39, t0.c0, vt1.c0, vt1.c1, vt2.c0 FROM vt1, vt2 CROSS JOIN t0 ON (~ (vt1.c0 COLLATE NOCASE)) GROUP BY t0.c39, t0.c0, vt1.c0, vt1.c1, vt2.c0;
SELECT ALL t0.c39, t0.c0, vt1.c0, vt1.c1, vt2.c0 FROM vt1, vt2 CROSS JOIN t0 ON (~ (vt1.c0 COLLATE NOCASE)) WHERE (vt2.c0) GROUP BY t0.c39, t0.c0, vt1.c0, vt1.c1, vt2.c0 UNION SELECT ALL t0.c39, t0.c0, vt1.c0, vt1.c1, vt2.c0 FROM vt1, vt2 CROSS JOIN t0 ON (~ (vt1.c0 COLLATE NOCASE)) WHERE ((NOT (vt2.c0))) GROUP BY t0.c39, t0.c0, vt1.c0, vt1.c1, vt2.c0 UNION SELECT ALL t0.c39, t0.c0, vt1.c0, vt1.c1, vt2.c0 FROM vt1, vt2 CROSS JOIN t0 ON (~ (vt1.c0 COLLATE NOCASE)) WHERE (((vt2.c0) ISNULL)) GROUP BY t0.c39, t0.c0, vt1.c0, vt1.c1, vt2.c0;
SELECT t0.c39, t0.c0, vt1.c0, vt1.c1, vt2.c0 FROM vt1, vt2 CROSS JOIN t0 ON (~ (vt1.c0 COLLATE NOCASE)) GROUP BY t0.c39, t0.c0, vt1.c0, vt1.c1, vt2.c0;
SELECT ALL vt0.c1, vt2.c0, t0.c39, vt1.c1, t0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN t0 ON x'f001' CROSS JOIN vt2 ON CASE WHEN ((t0.c0)+('')) THEN 0.7451229640481615 COLLATE RTRIM ELSE (- (vt1.c0)) END GROUP BY vt0.c1, vt2.c0, t0.c39, vt1.c1, t0.c0, vt1.c0;
SELECT ALL vt0.c1, vt2.c0, t0.c39, vt1.c1, t0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN t0 ON x'f001' CROSS JOIN vt2 ON CASE WHEN ((t0.c0)+('')) THEN 0.7451229640481615 COLLATE RTRIM ELSE (- (vt1.c0)) END GROUP BY vt0.c1, vt2.c0, t0.c39, vt1.c1, t0.c0, vt1.c0 HAVING '-2055439634' UNION ALL SELECT vt0.c1, vt2.c0, t0.c39, vt1.c1, t0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN t0 ON x'f001' CROSS JOIN vt2 ON CASE WHEN ((t0.c0)+('')) THEN 0.7451229640481615 COLLATE RTRIM ELSE (- (vt1.c0)) END GROUP BY vt0.c1, vt2.c0, t0.c39, vt1.c1, t0.c0, vt1.c0 HAVING (NOT ('-2055439634')) UNION ALL SELECT vt0.c1, vt2.c0, t0.c39, vt1.c1, t0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN t0 ON x'f001' CROSS JOIN vt2 ON CASE WHEN ((t0.c0)+('')) THEN 0.7451229640481615 COLLATE RTRIM ELSE (- (vt1.c0)) END GROUP BY vt0.c1, vt2.c0, t0.c39, vt1.c1, t0.c0, vt1.c0 HAVING (('-2055439634') ISNULL);
SELECT ALL vt0.c1, vt2.c0, t0.c39, vt1.c1, t0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN t0 ON x'f001' CROSS JOIN vt2 ON CASE WHEN ((t0.c0)+('')) THEN 0.7451229640481615 COLLATE RTRIM ELSE (- (vt1.c0)) END GROUP BY vt0.c1, vt2.c0, t0.c39, vt1.c1, t0.c0, vt1.c0;
SELECT ALL vt0.c1, vt2.c0, t0.c39, vt1.c1, t0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN t0 ON x'f001' CROSS JOIN vt2 ON CASE WHEN ((t0.c0)+('')) THEN 0.7451229640481615 COLLATE RTRIM ELSE (- (vt1.c0)) END GROUP BY vt0.c1, vt2.c0, t0.c39, vt1.c1, t0.c0, vt1.c0 HAVING '-2055439634' UNION ALL SELECT vt0.c1, vt2.c0, t0.c39, vt1.c1, t0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN t0 ON x'f001' CROSS JOIN vt2 ON CASE WHEN ((t0.c0)+('')) THEN 0.7451229640481615 COLLATE RTRIM ELSE (- (vt1.c0)) END GROUP BY vt0.c1, vt2.c0, t0.c39, vt1.c1, t0.c0, vt1.c0 HAVING (NOT ('-2055439634')) UNION ALL SELECT vt0.c1, vt2.c0, t0.c39, vt1.c1, t0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN t0 ON x'f001' CROSS JOIN vt2 ON CASE WHEN ((t0.c0)+('')) THEN 0.7451229640481615 COLLATE RTRIM ELSE (- (vt1.c0)) END GROUP BY vt0.c1, vt2.c0, t0.c39, vt1.c1, t0.c0, vt1.c0 HAVING (('-2055439634') ISNULL);
SELECT ALL vt0.c1, vt2.c0, t0.c39, vt1.c1, t0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN t0 ON x'f001' CROSS JOIN vt2 ON CASE WHEN ((t0.c0)+('')) THEN 0.7451229640481615 COLLATE RTRIM ELSE (- (vt1.c0)) END GROUP BY vt0.c1, vt2.c0, t0.c39, vt1.c1, t0.c0, vt1.c0;
SELECT vt2.c0, t0.c39 FROM t0, vt1, vt2;
SELECT ALL vt2.c0, t0.c39 FROM t0, vt1, vt2 WHERE ((((vt2.c0)) NOT BETWEEN (((((0.4036122959038534))<((vt2.c0))))) AND ((((t0.c39) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))) UNION ALL SELECT ALL vt2.c0, t0.c39 FROM t0 NOT INDEXED, vt1, vt2 WHERE ((NOT ((((vt2.c0)) NOT BETWEEN (((((0.4036122959038534))<((vt2.c0))))) AND ((((t0.c39) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))))) UNION ALL SELECT vt2.c0, t0.c39 FROM t0, vt1, vt2 WHERE ((((((vt2.c0)) NOT BETWEEN (((((0.4036122959038534))<((vt2.c0))))) AND ((((t0.c39) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))) ISNULL));
SELECT vt2.c0, t0.c39 FROM t0, vt1, vt2;
SELECT DISTINCT vt2.c0, vt0.c1, t0.c39, vt0.c0 FROM vt2, t0, vt0;
SELECT DISTINCT vt2.c0, vt0.c1, t0.c39, vt0.c0 FROM vt2, t0, vt0 WHERE ((((vt0.c0 IN (vt2.c0)))/(((0X1f33ea68)-(vt2.c0))))) UNION SELECT DISTINCT vt2.c0, vt0.c1, t0.c39, vt0.c0 FROM vt2, t0, vt0 WHERE ((NOT ((((vt0.c0 IN (vt2.c0)))/(((0x1f33ea68)-(vt2.c0))))))) UNION SELECT DISTINCT vt2.c0, vt0.c1, t0.c39, vt0.c0 FROM vt2, t0, vt0 WHERE ((((((vt0.c0 IN (vt2.c0)))/(((0x1f33ea68)-(vt2.c0))))) ISNULL));
SELECT DISTINCT vt2.c0, vt0.c1, t0.c39, vt0.c0 FROM vt2, t0, vt0;
SELECT ALL vt0.c0 FROM vt0, t0, vt2 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0, vt2 WHERE ((((t0.c0 COLLATE NOCASE))<((((vt0.c1) BETWEEN (t0.c0) AND (t0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t0, vt2 WHERE ((NOT ((((t0.c0 COLLATE NOCASE))<((((vt0.c1) BETWEEN (t0.c0) AND (t0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t0, vt2 WHERE ((((((t0.c0 COLLATE NOCASE))<((((vt0.c1) BETWEEN (t0.c0) AND (t0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0, vt2 GROUP BY vt0.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING TOTAL(SUM(vt0.c1)) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (TOTAL(SUM(vt0.c1)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((TOTAL(SUM(vt0.c1))) ISNULL);
SELECT ALL MAX((((vt1.c1 IN ())) NOT BETWEEN ((- (vt1.c1))) AND (((vt1.c0)GLOB(vt1.c1))))) FROM vt1;
SELECT vt1.c1 FROM vt2, vt1;
SELECT vt1.c1 FROM vt2, vt1 WHERE ((((x'')) BETWEEN ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END)) AND (((vt2.c0 IN ()))))) UNION ALL SELECT ALL vt1.c1 FROM vt2, vt1 WHERE ((NOT ((((x'')) BETWEEN ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END)) AND (((vt2.c0 IN ()))))))) UNION ALL SELECT vt1.c1 FROM vt2, vt1 WHERE ((((((x'')) BETWEEN ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END)) AND (((vt2.c0 IN ()))))) ISNULL));
SELECT vt1.c1 FROM vt2, vt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c39) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c39))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c39) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c39, vt0.c1, vt1.c0, vt1.c1, t0.c0 FROM vt0, t0, vt1, vt2 GROUP BY t0.c39, vt0.c1, vt1.c0, vt1.c1, t0.c0;
SELECT ALL t0.c39, vt0.c1, vt1.c0, vt1.c1, t0.c0 FROM vt0, t0, vt1, vt2 WHERE (ABS((t0.c39 IN (vt0.c1)))) GROUP BY t0.c39, vt0.c1, vt1.c0, vt1.c1, t0.c0 UNION SELECT ALL t0.c39, vt0.c1, vt1.c0, vt1.c1, t0.c0 FROM vt0, t0, vt1, vt2 WHERE ((NOT (ABS((t0.c39 IN (vt0.c1)))))) GROUP BY t0.c39, vt0.c1, vt1.c0, vt1.c1, t0.c0 UNION SELECT ALL t0.c39, vt0.c1, vt1.c0, vt1.c1, t0.c0 FROM vt0, t0, vt1, vt2 WHERE (((ABS((t0.c39 IN (vt0.c1)))) ISNULL)) GROUP BY t0.c39, vt0.c1, vt1.c0, vt1.c1, t0.c0;
SELECT ALL t0.c39, vt0.c1, vt1.c0, vt1.c1, t0.c0 FROM vt0, t0, vt1, vt2 GROUP BY t0.c39, vt0.c1, vt1.c0, vt1.c1, t0.c0;
SELECT vt0.c1 FROM vt0 INNER JOIN vt1 ON (~ ((- (vt1.c0)))) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 INNER JOIN vt1 ON (~ ((- (vt1.c0)))) GROUP BY vt0.c1 HAVING AVG(((((SUM(COUNT(vt0.c1)))OR(vt0.c1)))OR(vt0.c0))) UNION ALL SELECT vt0.c1 FROM vt0 INNER JOIN vt1 ON (~ ((- (vt1.c0)))) GROUP BY vt0.c1 HAVING (NOT (AVG(((((SUM(COUNT(vt0.c1)))OR(vt0.c1)))OR(vt0.c0))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 INNER JOIN vt1 ON (~ ((- (vt1.c0)))) GROUP BY vt0.c1 HAVING ((AVG(((((SUM(COUNT(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))) ISNULL);
SELECT MIN(((- (vt0.c0)) IN (t0.c39))) FROM vt0, t0;
SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)*(t0.c39)))<(((t0.c39) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)*(t0.c39)))<(((t0.c39) BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) COLLATE NOCASE) UNION ALL SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)*(t0.c39)))<(((t0.c39) BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE ((NOT (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) COLLATE NOCASE))) UNION ALL SELECT t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)*(t0.c39)))<(((t0.c39) BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE (((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) COLLATE NOCASE) ISNULL));
SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)*(t0.c39)))<(((t0.c39) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON (vt2.c0 COLLATE NOCASE IN ()) FULL OUTER JOIN vt2 ON CAST(((((t0.c0)OR('Zy')))AND(t0.c0)) AS NUMERIC) RIGHT OUTER JOIN vt1 ON vt1.c0;
SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON (vt2.c0 COLLATE NOCASE IN ()) FULL OUTER JOIN vt2 ON CAST(((((t0.c0)OR('Zy')))AND(t0.c0)) AS NUMERIC) RIGHT OUTER JOIN vt1 ON vt1.c0 WHERE (((((CAST(vt0.c0 AS NUMERIC))OR(((t0.c39)>=(vt2.c0)))))OR(LIKELIHOOD(0.41765778778808527, 0.46809846956184986)))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON (vt2.c0 COLLATE NOCASE IN ()) FULL OUTER JOIN vt2 ON CAST(((((t0.c0)OR('Zy')))AND(t0.c0)) AS NUMERIC) RIGHT OUTER JOIN vt1 ON vt1.c0 WHERE ((NOT (((((CAST(vt0.c0 AS NUMERIC))OR(((t0.c39)>=(vt2.c0)))))OR(LIKELIHOOD(0.41765778778808527, 0.46809846956184986)))))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON (vt2.c0 COLLATE NOCASE IN ()) FULL OUTER JOIN vt2 ON CAST(((((t0.c0)OR('Zy')))AND(t0.c0)) AS NUMERIC) RIGHT OUTER JOIN vt1 ON vt1.c0 WHERE (((((((CAST(vt0.c0 AS NUMERIC))OR(((t0.c39)>=(vt2.c0)))))OR(LIKELIHOOD(0.41765778778808527, 0.46809846956184986)))) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON (vt2.c0 COLLATE NOCASE IN ()) FULL OUTER JOIN vt2 ON CAST(((((t0.c0)OR('Zy')))AND(t0.c0)) AS NUMERIC) RIGHT OUTER JOIN vt1 ON vt1.c0;
SELECT ALL t0.c39 FROM vt1, vt0 LEFT OUTER JOIN t0 ON ((CAST(vt0.c0 AS TEXT))LIKE(t0.c39 COLLATE BINARY)) GROUP BY t0.c39;
SELECT ALL t0.c39 FROM vt1, vt0 LEFT OUTER JOIN t0 ON ((CAST(vt0.c0 AS TEXT))LIKE(t0.c39 COLLATE BINARY)) WHERE (TYPEOF(DISTINCT ((NULL)GLOB(vt0.c0)))) GROUP BY t0.c39 UNION SELECT ALL t0.c39 FROM vt1, vt0 LEFT OUTER JOIN t0 ON ((CAST(vt0.c0 AS TEXT))LIKE(t0.c39 COLLATE BINARY)) WHERE ((NOT (TYPEOF(DISTINCT ((NULL)GLOB(vt0.c0)))))) GROUP BY t0.c39 UNION SELECT ALL t0.c39 FROM vt1, vt0 LEFT OUTER JOIN t0 ON ((CAST(vt0.c0 AS TEXT))LIKE(t0.c39 COLLATE BINARY)) WHERE (((TYPEOF(DISTINCT ((NULL)GLOB(vt0.c0)))) ISNULL)) GROUP BY t0.c39;
SELECT ALL t0.c39 FROM vt1, vt0 LEFT OUTER JOIN t0 ON ((CAST(vt0.c0 AS TEXT))LIKE(t0.c39 COLLATE BINARY)) GROUP BY t0.c39;
SELECT ALL vt2.c0, t0.c39, vt1.c1, vt0.c1, t0.c0 FROM vt0, t0, vt1, vt2 GROUP BY vt2.c0, t0.c39, vt1.c1, vt0.c1, t0.c0;
SELECT vt2.c0, t0.c39, vt1.c1, vt0.c1, t0.c0 FROM vt0, t0, vt1, vt2 GROUP BY vt2.c0, t0.c39, vt1.c1, vt0.c1, t0.c0 HAVING ((COUNT(vt0.c0))<>(((MIN(t0.c39)) NOT NULL))) UNION ALL SELECT vt2.c0, t0.c39, vt1.c1, vt0.c1, t0.c0 FROM vt0, t0, vt1, vt2 GROUP BY vt2.c0, t0.c39, vt1.c1, vt0.c1, t0.c0 HAVING (NOT (((COUNT(vt0.c0))!=(((MIN(t0.c39)) NOT NULL))))) UNION ALL SELECT vt2.c0, t0.c39, vt1.c1, vt0.c1, t0.c0 FROM vt0, t0, vt1, vt2 GROUP BY vt2.c0, t0.c39, vt1.c1, vt0.c1, t0.c0 HAVING ((((COUNT(vt0.c0))!=(((MIN(t0.c39)) NOT NULL)))) ISNULL);
SELECT ALL vt2.c0, t0.c39, vt1.c1, vt0.c1, t0.c0 FROM vt0, t0, vt1, vt2 GROUP BY vt2.c0, t0.c39, vt1.c1, vt0.c1, t0.c0;
SELECT vt2.c0, t0.c39, vt1.c1, vt0.c1, t0.c0 FROM vt0, t0, vt1, vt2 GROUP BY vt2.c0, t0.c39, vt1.c1, vt0.c1, t0.c0 HAVING ((COUNT(vt0.c0))<>(((MIN(t0.c39)) NOT NULL))) UNION ALL SELECT vt2.c0, t0.c39, vt1.c1, vt0.c1, t0.c0 FROM vt0, t0, vt1, vt2 GROUP BY vt2.c0, t0.c39, vt1.c1, vt0.c1, t0.c0 HAVING (NOT (((COUNT(vt0.c0))!=(((MIN(t0.c39)) NOT NULL))))) UNION ALL SELECT vt2.c0, t0.c39, vt1.c1, vt0.c1, t0.c0 FROM vt0, t0, vt1, vt2 GROUP BY vt2.c0, t0.c39, vt1.c1, vt0.c1, t0.c0 HAVING ((((COUNT(vt0.c0))!=(((MIN(t0.c39)) NOT NULL)))) ISNULL);
SELECT ALL vt2.c0, t0.c39, vt1.c1, vt0.c1, t0.c0 FROM vt0, t0, vt1, vt2 GROUP BY vt2.c0, t0.c39, vt1.c1, vt0.c1, t0.c0;
SELECT ALL vt0.c1, t0.c0, vt0.c0 FROM t0, vt0, vt1, vt2;
SELECT ALL vt0.c1, t0.c0, vt0.c0 FROM t0, vt0, vt1, vt2 WHERE (((((t0.c0)%(t0.c0))) BETWEEN (vt0.c1) AND ((+ (vt0.c0))))) UNION ALL SELECT ALL vt0.c1, t0.c0, vt0.c0 FROM t0, vt0, vt1, vt2 WHERE ((NOT (((((t0.c0)%(t0.c0))) BETWEEN (vt0.c1) AND ((+ (vt0.c0))))))) UNION ALL SELECT vt0.c1, t0.c0, vt0.c0 FROM t0, vt0, vt1, vt2 WHERE (((((((t0.c0)%(t0.c0))) BETWEEN (vt0.c1) AND ((+ (vt0.c0))))) ISNULL));
SELECT ALL vt0.c1, t0.c0, vt0.c0 FROM t0, vt0, vt1, vt2;
SELECT DISTINCT * FROM t0, vt2;
SELECT DISTINCT * FROM t0, vt2 WHERE (((((((((((t0.c0)OR(vt2.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))==(((vt2.c0) ISNULL)))) UNION SELECT DISTINCT * FROM t0, vt2 WHERE ((NOT (((((((((((t0.c0)OR(vt2.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))==(((vt2.c0) ISNULL)))))) UNION SELECT DISTINCT * FROM t0, vt2 WHERE (((((((((((((t0.c0)OR(vt2.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))=(((vt2.c0) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM t0, vt2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((vt1.c1 COLLATE BINARY IN (((vt1.c1)OR(vt1.c0)), vt1.c0 COLLATE NOCASE))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((vt1.c1 COLLATE BINARY IN (((vt1.c1)OR(vt1.c0)), vt1.c0 COLLATE NOCASE))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c1 COLLATE BINARY IN (((vt1.c1)OR(vt1.c0)), vt1.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c1, vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c1, vt1.c0, vt2.c0;
SELECT ALL vt1.c1, vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c1, vt1.c0, vt2.c0 HAVING CASE WHEN AVG(vt1.c1) THEN COUNT(*) END UNION ALL SELECT vt1.c1, vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c1, vt1.c0, vt2.c0 HAVING (NOT (CASE WHEN AVG(vt1.c1) THEN COUNT(*) END)) UNION ALL SELECT ALL vt1.c1, vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c1, vt1.c0, vt2.c0 HAVING ((CASE WHEN AVG(vt1.c1) THEN COUNT(*) END) ISNULL);
SELECT ALL vt1.c1, vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c1, vt1.c0, vt2.c0;
SELECT ALL vt1.c1, vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c1, vt1.c0, vt2.c0 HAVING CASE WHEN AVG(vt1.c1) THEN COUNT(*) END UNION ALL SELECT vt1.c1, vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c1, vt1.c0, vt2.c0 HAVING (NOT (CASE WHEN AVG(vt1.c1) THEN COUNT(*) END)) UNION ALL SELECT ALL vt1.c1, vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c1, vt1.c0, vt2.c0 HAVING ((CASE WHEN AVG(vt1.c1) THEN COUNT(*) END) ISNULL);
SELECT ALL vt1.c1, vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c1, vt1.c0, vt2.c0;
SELECT ALL * FROM vt1, t0, vt0;
SELECT * FROM vt1, t0, vt0 WHERE ((- (x''))) UNION ALL SELECT * FROM vt1, t0, vt0 WHERE ((NOT ((- (x''))))) UNION ALL SELECT ALL * FROM vt1, t0, vt0 WHERE ((((- (x''))) ISNULL));
SELECT ALL * FROM vt1, t0, vt0;
SELECT DISTINCT vt1.c1, t0.c39, t0.c0 FROM vt1, t0;
SELECT DISTINCT vt1.c1, t0.c39, t0.c0 FROM vt1, t0 WHERE (((CASE WHEN t0.c0 THEN t0.c39 ELSE t0.c39 END)|(CAST(vt1.c0 AS INTEGER)))) UNION SELECT DISTINCT vt1.c1, t0.c39, t0.c0 FROM vt1, t0 WHERE ((NOT (((CASE WHEN t0.c0 THEN t0.c39 ELSE t0.c39 END)|(CAST(vt1.c0 AS INTEGER)))))) UNION SELECT DISTINCT vt1.c1, t0.c39, t0.c0 FROM vt1, t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c39 ELSE t0.c39 END)|(CAST(vt1.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT vt1.c1, t0.c39, t0.c0 FROM vt1, t0;
SELECT ALL t0.c39, vt0.c1 FROM vt2, vt0, t0 GROUP BY t0.c39, vt0.c1;
SELECT t0.c39, vt0.c1 FROM vt2, vt0, t0 WHERE (CASE WHEN ((((((((vt2.c0)AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c0)) THEN (~ (vt2.c0)) END) GROUP BY t0.c39, vt0.c1 UNION SELECT ALL t0.c39, vt0.c1 FROM vt2, vt0, t0 WHERE ((NOT (CASE WHEN ((((((((vt2.c0)AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c0)) THEN (~ (vt2.c0)) END))) GROUP BY t0.c39, vt0.c1 UNION SELECT t0.c39, vt0.c1 FROM vt2, vt0, t0 WHERE (((CASE WHEN ((((((((vt2.c0)AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c0)) THEN (~ (vt2.c0)) END) ISNULL)) GROUP BY t0.c39, vt0.c1;
SELECT ALL t0.c39, vt0.c1 FROM vt2, vt0, t0 GROUP BY t0.c39, vt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(((GROUP_CONCAT(AVG(COUNT(GROUP_CONCAT(GROUP_CONCAT(vt0.c1)))))) IS FALSE)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(((GROUP_CONCAT(AVG(COUNT(GROUP_CONCAT(GROUP_CONCAT(vt0.c1)))))) IS FALSE)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(((GROUP_CONCAT(AVG(COUNT(GROUP_CONCAT(GROUP_CONCAT(vt0.c1)))))) IS FALSE))) ISNULL);
SELECT ALL MAX(CASE (t0.c39 IN (t0.c39))  WHEN (+ (t0.c0)) THEN (NOT (vt0.c1)) END) FROM vt0, t0 ORDER BY ((((t0.c39)-(vt0.c1))) BETWEEN ('ZCGWZh^㞩T' COLLATE RTRIM) AND (((t0.c0) NOT BETWEEN (x'') AND (t0.c39)))) DESC;
SELECT * FROM vt0, vt1, vt2;
SELECT * FROM vt0, vt1, vt2 WHERE (CASE ((vt1.c0)>>(vt1.c1))  WHEN (- (vt2.c0)) THEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN 0xffffffffcb90c20a WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END ELSE vt0.c1 END) UNION ALL SELECT * FROM vt0, vt1, vt2 WHERE ((NOT (CASE ((vt1.c0)>>(vt1.c1))  WHEN (- (vt2.c0)) THEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN 0Xffffffffcb90c20a WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END ELSE vt0.c1 END))) UNION ALL SELECT * FROM vt0, vt1, vt2 WHERE (((CASE ((vt1.c0)>>(vt1.c1))  WHEN (- (vt2.c0)) THEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN 0xffffffffcb90c20a WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END ELSE vt0.c1 END) ISNULL));
SELECT * FROM vt0, vt1, vt2;
SELECT DISTINCT t0.c39, vt2.c0, vt1.c1, t0.c0, vt1.c0 FROM vt1, vt2, t0;
SELECT DISTINCT t0.c39, vt2.c0, vt1.c1, t0.c0, vt1.c0 FROM vt1, vt2, t0 WHERE (CAST(UNLIKELY(DISTINCT vt2.c0) AS TEXT)) UNION SELECT DISTINCT t0.c39, vt2.c0, vt1.c1, t0.c0, vt1.c0 FROM vt1, vt2, t0 WHERE ((NOT (CAST(UNLIKELY(DISTINCT vt2.c0) AS TEXT)))) UNION SELECT DISTINCT t0.c39, vt2.c0, vt1.c1, t0.c0, vt1.c0 FROM vt1, vt2, t0 WHERE (((CAST(UNLIKELY(DISTINCT vt2.c0) AS TEXT)) ISNULL));
SELECT DISTINCT t0.c39, vt2.c0, vt1.c1, t0.c0, vt1.c0 FROM vt1, vt2, t0;
SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM t0 NOT INDEXED, vt0 GROUP BY vt0.c0, t0.c0, vt0.c1;
SELECT vt0.c0, t0.c0, vt0.c1 FROM t0, vt0 WHERE (((CAST(vt0.c1 AS TEXT)) NOT BETWEEN (((vt0.c1) ISNULL)) AND ((- (t0.c39))))) GROUP BY vt0.c0, t0.c0, vt0.c1 UNION SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM t0, vt0 WHERE ((NOT (((CAST(vt0.c1 AS TEXT)) NOT BETWEEN (((vt0.c1) ISNULL)) AND ((- (t0.c39))))))) GROUP BY vt0.c0, t0.c0, vt0.c1 UNION SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM t0, vt0 WHERE (((((CAST(vt0.c1 AS TEXT)) NOT BETWEEN (((vt0.c1) ISNULL)) AND ((- (t0.c39))))) ISNULL)) GROUP BY vt0.c0, t0.c0, vt0.c1;
SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM t0 NOT INDEXED, vt0 GROUP BY vt0.c0, t0.c0, vt0.c1;
SELECT t0.c39, t0.c0, vt0.c0, vt2.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt0, vt1, vt2, t0 GROUP BY t0.c39, t0.c0, vt0.c0, vt2.c0, vt1.c0, vt0.c1, vt1.c1;
SELECT ALL t0.c39, t0.c0, vt0.c0, vt2.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt0, vt1, vt2, t0 GROUP BY t0.c39, t0.c0, vt0.c0, vt2.c0, vt1.c0, vt0.c1, vt1.c1 HAVING (((TOTAL(vt0.c0))) NOT BETWEEN (((((SUM(t0.c0), vt2.c0, vt0.c1))<((COUNT(vt2.c0), t0.c39, t0.c39))))) AND ((COUNT(vt0.c0)))) UNION ALL SELECT t0.c39, t0.c0, vt0.c0, vt2.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt0, vt1, vt2, t0 GROUP BY t0.c39, t0.c0, vt0.c0, vt2.c0, vt1.c0, vt0.c1, vt1.c1 HAVING (NOT ((((TOTAL(vt0.c0))) NOT BETWEEN (((((SUM(t0.c0), vt2.c0, vt0.c1))<((COUNT(vt2.c0), t0.c39, t0.c39))))) AND ((COUNT(vt0.c0)))))) UNION ALL SELECT ALL t0.c39, t0.c0, vt0.c0, vt2.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt0, vt1, vt2, t0 GROUP BY t0.c39, t0.c0, vt0.c0, vt2.c0, vt1.c0, vt0.c1, vt1.c1 HAVING (((((TOTAL(vt0.c0))) NOT BETWEEN (((((SUM(t0.c0), vt2.c0, vt0.c1))<((COUNT(vt2.c0), t0.c39, t0.c39))))) AND ((COUNT(vt0.c0))))) ISNULL);
SELECT t0.c39, t0.c0, vt0.c0, vt2.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt0, vt1, vt2, t0 GROUP BY t0.c39, t0.c0, vt0.c0, vt2.c0, vt1.c0, vt0.c1, vt1.c1;
SELECT ALL t0.c39, t0.c0, vt0.c0, vt2.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt0, vt1, vt2, t0 GROUP BY t0.c39, t0.c0, vt0.c0, vt2.c0, vt1.c0, vt0.c1, vt1.c1 HAVING (((TOTAL(vt0.c0))) NOT BETWEEN (((((SUM(t0.c0), vt2.c0, vt0.c1))<((COUNT(vt2.c0), t0.c39, t0.c39))))) AND ((COUNT(vt0.c0)))) UNION ALL SELECT t0.c39, t0.c0, vt0.c0, vt2.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt0, vt1, vt2, t0 GROUP BY t0.c39, t0.c0, vt0.c0, vt2.c0, vt1.c0, vt0.c1, vt1.c1 HAVING (NOT ((((TOTAL(vt0.c0))) NOT BETWEEN (((((SUM(t0.c0), vt2.c0, vt0.c1))<((COUNT(vt2.c0), t0.c39, t0.c39))))) AND ((COUNT(vt0.c0)))))) UNION ALL SELECT ALL t0.c39, t0.c0, vt0.c0, vt2.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt0, vt1, vt2, t0 GROUP BY t0.c39, t0.c0, vt0.c0, vt2.c0, vt1.c0, vt0.c1, vt1.c1 HAVING (((((TOTAL(vt0.c0))) NOT BETWEEN (((((SUM(t0.c0), vt2.c0, vt0.c1))<((COUNT(vt2.c0), t0.c39, t0.c39))))) AND ((COUNT(vt0.c0))))) ISNULL);
SELECT t0.c39, t0.c0, vt0.c0, vt2.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt0, vt1, vt2, t0 GROUP BY t0.c39, t0.c0, vt0.c0, vt2.c0, vt1.c0, vt0.c1, vt1.c1;
SELECT * FROM vt2;
SELECT * FROM vt2 WHERE (((((vt2.c0)/(vt2.c0))) NOT BETWEEN (vt2.c0 COLLATE NOCASE) AND (((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0))))) UNION ALL SELECT ALL * FROM vt2 WHERE ((NOT (((((vt2.c0)/(vt2.c0))) NOT BETWEEN (vt2.c0 COLLATE NOCASE) AND (((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0))))))) UNION ALL SELECT * FROM vt2 WHERE (((((((vt2.c0)/(vt2.c0))) NOT BETWEEN (vt2.c0 COLLATE NOCASE) AND (((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0))))) ISNULL));
SELECT * FROM vt2;
SELECT DISTINCT vt1.c1, vt2.c0, vt1.c0 FROM vt2 LEFT OUTER JOIN vt1 ON '523496040';
SELECT DISTINCT vt1.c1, vt2.c0, vt1.c0 FROM vt2 LEFT OUTER JOIN vt1 ON '523496040' WHERE (((CAST(vt1.c0 AS REAL))-(CASE vt1.c0  WHEN vt2.c0 THEN vt1.c0 ELSE vt1.c1 END))) UNION SELECT DISTINCT vt1.c1, vt2.c0, vt1.c0 FROM vt2 LEFT OUTER JOIN vt1 ON '523496040' WHERE ((NOT (((CAST(vt1.c0 AS REAL))-(CASE vt1.c0  WHEN vt2.c0 THEN vt1.c0 ELSE vt1.c1 END))))) UNION SELECT DISTINCT vt1.c1, vt2.c0, vt1.c0 FROM vt2 LEFT OUTER JOIN vt1 ON '523496040' WHERE (((((CAST(vt1.c0 AS REAL))-(CASE vt1.c0  WHEN vt2.c0 THEN vt1.c0 ELSE vt1.c1 END))) ISNULL));
SELECT DISTINCT vt1.c1, vt2.c0, vt1.c0 FROM vt2 LEFT OUTER JOIN vt1 ON '523496040';
SELECT t0.c0, vt2.c0, t0.c39 FROM vt2, t0 GROUP BY t0.c0, vt2.c0, t0.c39;
SELECT ALL t0.c0, vt2.c0, t0.c39 FROM vt2, t0 NOT INDEXED WHERE (CAST(((t0.c0)-(t0.c0)) AS REAL)) GROUP BY t0.c0, vt2.c0, t0.c39 UNION SELECT ALL t0.c0, vt2.c0, t0.c39 FROM vt2, t0 WHERE ((NOT (CAST(((t0.c0)-(t0.c0)) AS REAL)))) GROUP BY t0.c0, vt2.c0, t0.c39 UNION SELECT ALL t0.c0, vt2.c0, t0.c39 FROM vt2, t0 WHERE (((CAST(((t0.c0)-(t0.c0)) AS REAL)) ISNULL)) GROUP BY t0.c0, vt2.c0, t0.c39;
SELECT t0.c0, vt2.c0, t0.c39 FROM vt2, t0 GROUP BY t0.c0, vt2.c0, t0.c39;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((((COUNT(MAX(vt2.c0)))) BETWEEN ((0X4a2157ad)) AND ((MIN(vt2.c0)))))*((- (vt2.c0)))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT ((((((COUNT(MAX(vt2.c0)))) BETWEEN ((0X4a2157ad)) AND ((MIN(vt2.c0)))))*((- (vt2.c0)))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((((((COUNT(MAX(vt2.c0)))) BETWEEN ((0X4a2157ad)) AND ((MIN(vt2.c0)))))*((- (vt2.c0))))) ISNULL);
SELECT ALL t0.c39 FROM t0 INDEXED BY i43;
SELECT ALL t0.c39 FROM t0 INDEXED BY i43 WHERE ((((0.9278100374671049)) NOT BETWEEN ((t0.c39)) AND ((t0.c39))) COLLATE BINARY) UNION ALL SELECT t0.c39 FROM t0 INDEXED BY i43 WHERE ((NOT ((((0.9278100374671049)) NOT BETWEEN ((t0.c39)) AND ((t0.c39))) COLLATE BINARY))) UNION ALL SELECT t0.c39 FROM t0 INDEXED BY i43 WHERE ((((((0.9278100374671049)) NOT BETWEEN ((t0.c39)) AND ((t0.c39))) COLLATE BINARY) ISNULL));
SELECT ALL t0.c39 FROM t0 INDEXED BY i43;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND (('9223372036854775807')))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND (('9223372036854775807')))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND (('9223372036854775807')))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c1 FROM vt0, vt2 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, vt2 WHERE ((((vt0.c1) NOT BETWEEN (vt2.c0) AND (vt2.c0)) IN (((x'') NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((vt2.c0) IS FALSE)))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0, vt2 WHERE ((NOT ((((vt0.c1) NOT BETWEEN (vt2.c0) AND (vt2.c0)) IN (((x'') NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((vt2.c0) IS FALSE)))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0, vt2 WHERE ((((((vt0.c1) NOT BETWEEN (vt2.c0) AND (vt2.c0)) IN (((x'') NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((vt2.c0) IS FALSE)))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, vt2 GROUP BY vt0.c1;
SELECT ALL t0.c0, t0.c39, vt1.c1, vt2.c0 FROM vt2 LEFT OUTER JOIN vt1 ON (((- (t0.c39)))<((~ (t0.c0)))) LEFT OUTER JOIN t0 ON (((vt2.c0 IN (vt1.c1)))OR(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN t0.c39 THEN '￳c{T(v' WHEN vt1.c1 THEN t0.c39 ELSE t0.c39 END)) GROUP BY t0.c0, t0.c39, vt1.c1, vt2.c0;
SELECT ALL vt2.c0, t0.c0, vt0.c1 FROM vt0, vt1, vt2, t0;
SELECT vt2.c0, t0.c0, vt0.c1 FROM vt0, vt1, vt2, t0 WHERE (UNLIKELY((+ (vt0.c1)))) UNION ALL SELECT vt2.c0, t0.c0, vt0.c1 FROM vt0, vt1, vt2, t0 WHERE ((NOT (UNLIKELY((+ (vt0.c1)))))) UNION ALL SELECT ALL vt2.c0, t0.c0, vt0.c1 FROM vt0, vt1, vt2, t0 WHERE (((UNLIKELY((+ (vt0.c1)))) ISNULL));
SELECT ALL vt2.c0, t0.c0, vt0.c1 FROM vt0, vt1, vt2, t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c0)OR('0.4036122959038534')))OR(0xffffffffadfa8088)))OR(vt0.c1)))AND(vt0.c1)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((((vt0.c0)OR('0.4036122959038534')))OR(0xffffffffadfa8088)))OR(vt0.c1)))AND(vt0.c1)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((((vt0.c0)OR('0.4036122959038534')))OR(0xffffffffadfa8088)))OR(vt0.c1)))AND(vt0.c1)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL t0.c39 FROM t0, vt2 GROUP BY t0.c39;
SELECT t0.c39 FROM t0, vt2 WHERE ((((((0X4948c5ed)) NOT BETWEEN ((t0.c39)) AND ((t0.c39))))<(CASE WHEN t0.c0 THEN x'' END))) GROUP BY t0.c39 UNION SELECT t0.c39 FROM t0, vt2 WHERE ((NOT ((((((0X4948c5ed)) NOT BETWEEN ((t0.c39)) AND ((t0.c39))))<(CASE WHEN t0.c0 THEN x'' END))))) GROUP BY t0.c39 UNION SELECT ALL t0.c39 FROM t0, vt2 WHERE ((((((((0x4948c5ed)) NOT BETWEEN ((t0.c39)) AND ((t0.c39))))<(CASE WHEN t0.c0 THEN x'' END))) ISNULL)) GROUP BY t0.c39;
SELECT ALL t0.c39 FROM t0, vt2 GROUP BY t0.c39;
SELECT ALL vt0.c1, t0.c0, vt1.c1, t0.c39, vt2.c0, vt0.c0 FROM vt1, vt0, vt2 NATURAL JOIN t0 GROUP BY vt0.c1, t0.c0, vt1.c1, t0.c39, vt2.c0, vt0.c0;
SELECT ALL vt0.c1, t0.c0, vt1.c1, t0.c39, vt2.c0, vt0.c0 FROM vt1, vt0, vt2 NATURAL JOIN t0 GROUP BY vt0.c1, t0.c0, vt1.c1, t0.c39, vt2.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c1, t0.c0, vt1.c1, t0.c39, vt2.c0, vt0.c0 FROM vt1, vt0, vt2 NATURAL JOIN t0 GROUP BY vt0.c1, t0.c0, vt1.c1, t0.c39, vt2.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, t0.c0, vt1.c1, t0.c39, vt2.c0, vt0.c0 FROM vt1, vt0, vt2 NATURAL JOIN t0 GROUP BY vt0.c1, t0.c0, vt1.c1, t0.c39, vt2.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, t0.c0, vt1.c1, t0.c39, vt2.c0, vt0.c0 FROM vt1, vt0, vt2 NATURAL JOIN t0 GROUP BY vt0.c1, t0.c0, vt1.c1, t0.c39, vt2.c0, vt0.c0;
SELECT ALL vt0.c1, t0.c0, vt1.c1, t0.c39, vt2.c0, vt0.c0 FROM vt1, vt0, vt2 NATURAL JOIN t0 GROUP BY vt0.c1, t0.c0, vt1.c1, t0.c39, vt2.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c1, t0.c0, vt1.c1, t0.c39, vt2.c0, vt0.c0 FROM vt1, vt0, vt2 NATURAL JOIN t0 GROUP BY vt0.c1, t0.c0, vt1.c1, t0.c39, vt2.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, t0.c0, vt1.c1, t0.c39, vt2.c0, vt0.c0 FROM vt1, vt0, vt2 NATURAL JOIN t0 GROUP BY vt0.c1, t0.c0, vt1.c1, t0.c39, vt2.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, t0.c0, vt1.c1, t0.c39, vt2.c0, vt0.c0 FROM vt1, vt0, vt2 NATURAL JOIN t0 GROUP BY vt0.c1, t0.c0, vt1.c1, t0.c39, vt2.c0, vt0.c0;
SELECT ALL vt0.c1, vt1.c0, vt2.c0, vt1.c1, vt0.c0 FROM vt0, vt1 INNER JOIN vt2 ON CASE vt1.c1 COLLATE RTRIM  WHEN (~ (vt1.c1)) THEN ((((vt0.c1)AND(vt2.c0)))OR(vt2.c0)) END;
SELECT vt0.c1, vt1.c0, vt2.c0, vt1.c1, vt0.c0 FROM vt0, vt1 INNER JOIN vt2 ON CASE vt1.c1 COLLATE RTRIM  WHEN (~ (vt1.c1)) THEN ((((vt0.c1)AND(vt2.c0)))OR(vt2.c0)) END WHERE ((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt2.c0)))) NOT BETWEEN (0.45523083580116774) AND (NULL))) UNION ALL SELECT vt0.c1, vt1.c0, vt2.c0, vt1.c1, vt0.c0 FROM vt0, vt1 INNER JOIN vt2 ON CASE vt1.c1 COLLATE RTRIM  WHEN (~ (vt1.c1)) THEN ((((vt0.c1)AND(vt2.c0)))OR(vt2.c0)) END WHERE ((NOT ((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt2.c0)))) NOT BETWEEN (0.45523083580116774) AND (NULL))))) UNION ALL SELECT vt0.c1, vt1.c0, vt2.c0, vt1.c1, vt0.c0 FROM vt0, vt1 INNER JOIN vt2 ON CASE vt1.c1 COLLATE RTRIM  WHEN (~ (vt1.c1)) THEN ((((vt0.c1)AND(vt2.c0)))OR(vt2.c0)) END WHERE ((((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt2.c0)))) NOT BETWEEN (0.45523083580116774) AND (NULL))) ISNULL));
SELECT ALL vt0.c1, vt1.c0, vt2.c0, vt1.c1, vt0.c0 FROM vt0, vt1 INNER JOIN vt2 ON CASE vt1.c1 COLLATE RTRIM  WHEN (~ (vt1.c1)) THEN ((((vt0.c1)AND(vt2.c0)))OR(vt2.c0)) END;
SELECT DISTINCT * FROM t0 INDEXED BY i43;
SELECT DISTINCT * FROM t0 INDEXED BY i43 WHERE (((t0.c0 IN (t0.c0)) IN ())) UNION SELECT DISTINCT * FROM t0 INDEXED BY i43 WHERE ((NOT (((t0.c0 IN (t0.c0)) IN ())))) UNION SELECT DISTINCT * FROM t0 INDEXED BY i43 WHERE (((((t0.c0 IN (t0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM t0 INDEXED BY i43;
SELECT ALL vt0.c1, t0.c39 FROM vt2, vt1, t0, vt0 GROUP BY vt0.c1, t0.c39;
SELECT ALL vt0.c1, t0.c39 FROM vt2, vt1, t0, vt0 WHERE (MIN((t0.c39 IN ()), NULL)) GROUP BY vt0.c1, t0.c39 UNION SELECT ALL vt0.c1, t0.c39 FROM vt2, vt1, t0, vt0 WHERE ((NOT (MIN((t0.c39 IN ()), NULL)))) GROUP BY vt0.c1, t0.c39 UNION SELECT ALL vt0.c1, t0.c39 FROM vt2, vt1, t0, vt0 WHERE (((MIN((t0.c39 IN ()), NULL)) ISNULL)) GROUP BY vt0.c1, t0.c39;
SELECT ALL vt0.c1, t0.c39 FROM vt2, vt1, t0, vt0 GROUP BY vt0.c1, t0.c39;
SELECT ALL t0.c0, vt0.c1, vt1.c1, vt2.c0, vt1.c0, vt0.c0, t0.c39 FROM vt1, vt2, vt0, t0 GROUP BY t0.c0, vt0.c1, vt1.c1, vt2.c0, vt1.c0, vt0.c0, t0.c39;
SELECT t0.c0, vt0.c1, vt1.c1, vt2.c0, vt1.c0, vt0.c0, t0.c39 FROM vt1, vt2, vt0, t0 GROUP BY t0.c0, vt0.c1, vt1.c1, vt2.c0, vt1.c0, vt0.c0, t0.c39 HAVING TOTAL(TRIM(COUNT(*), COUNT(*))) UNION ALL SELECT t0.c0, vt0.c1, vt1.c1, vt2.c0, vt1.c0, vt0.c0, t0.c39 FROM vt1, vt2, vt0, t0 GROUP BY t0.c0, vt0.c1, vt1.c1, vt2.c0, vt1.c0, vt0.c0, t0.c39 HAVING (NOT (TOTAL(TRIM(COUNT(*), COUNT(*))))) UNION ALL SELECT ALL t0.c0, vt0.c1, vt1.c1, vt2.c0, vt1.c0, vt0.c0, t0.c39 FROM vt1, vt2, vt0, t0 GROUP BY t0.c0, vt0.c1, vt1.c1, vt2.c0, vt1.c0, vt0.c0, t0.c39 HAVING ((TOTAL(TRIM(COUNT(*), COUNT(*)))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) AS REAL)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) AS REAL)))) UNION ALL SELECT * FROM vt0 WHERE (((CAST(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) AS REAL)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE ((vt2.c0 COLLATE NOCASE IN (((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))))) UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT ((vt2.c0 COLLATE NOCASE IN (((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))))))) UNION SELECT DISTINCT * FROM vt2 WHERE ((((vt2.c0 COLLATE NOCASE IN (((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))))) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT vt0.c1 FROM vt0, vt2 NATURAL JOIN t0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, vt2 NATURAL JOIN t0 WHERE ('' COLLATE NOCASE) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0, vt2 NATURAL JOIN t0 WHERE ((NOT ('' COLLATE NOCASE))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0, vt2 NATURAL JOIN t0 WHERE ((('' COLLATE NOCASE) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, vt2 NATURAL JOIN t0 GROUP BY vt0.c1;
SELECT t0.c39, t0.c0 FROM t0 GROUP BY t0.c39, t0.c0;
SELECT ALL t0.c39, t0.c0 FROM t0 GROUP BY t0.c39, t0.c0 HAVING SUM(((t0.c39) NOT NULL)) UNION ALL SELECT t0.c39, t0.c0 FROM t0 GROUP BY t0.c39, t0.c0 HAVING (NOT (SUM(((t0.c39) NOT NULL)))) UNION ALL SELECT t0.c39, t0.c0 FROM t0 GROUP BY t0.c39, t0.c0 HAVING ((SUM(((t0.c39) NOT NULL))) ISNULL);
SELECT t0.c39, t0.c0 FROM t0 GROUP BY t0.c39, t0.c0;
SELECT ALL t0.c39, t0.c0 FROM t0 GROUP BY t0.c39, t0.c0 HAVING SUM(((t0.c39) NOT NULL)) UNION ALL SELECT t0.c39, t0.c0 FROM t0 GROUP BY t0.c39, t0.c0 HAVING (NOT (SUM(((t0.c39) NOT NULL)))) UNION ALL SELECT t0.c39, t0.c0 FROM t0 GROUP BY t0.c39, t0.c0 HAVING ((SUM(((t0.c39) NOT NULL))) ISNULL);
SELECT t0.c39, t0.c0 FROM t0 GROUP BY t0.c39, t0.c0;
SELECT ALL * FROM t0, vt1;
SELECT * FROM t0, vt1 WHERE (((((t0.c0) ISNULL))>>(((t0.c39) IS FALSE)))) UNION ALL SELECT ALL * FROM t0, vt1 WHERE ((NOT (((((t0.c0) ISNULL))>>(((t0.c39) IS FALSE)))))) UNION ALL SELECT * FROM t0, vt1 WHERE (((((((t0.c0) ISNULL))>>(((t0.c39) IS FALSE)))) ISNULL));
SELECT ALL * FROM t0, vt1;
SELECT DISTINCT vt2.c0, t0.c39, vt0.c0, t0.c0 FROM vt0, t0, vt2;
SELECT DISTINCT vt2.c0, t0.c39, vt0.c0, t0.c0 FROM vt0, t0, vt2 WHERE (((((((((t0.c0 COLLATE BINARY)AND('')))AND(((vt2.c0)<<(vt0.c1)))))AND(((((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)))OR(vt0.c0)))OR(vt0.c1)))))AND(((((((((vt0.c0)AND(vt2.c0)))OR(vt2.c0)))AND(t0.c0)))OR(vt0.c1))))) UNION SELECT DISTINCT vt2.c0, t0.c39, vt0.c0, t0.c0 FROM vt0, t0, vt2 WHERE ((NOT (((((((((t0.c0 COLLATE BINARY)AND('')))AND(((vt2.c0)<<(vt0.c1)))))AND(((((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)))OR(vt0.c0)))OR(vt0.c1)))))AND(((((((((vt0.c0)AND(vt2.c0)))OR(vt2.c0)))AND(t0.c0)))OR(vt0.c1))))))) UNION SELECT DISTINCT vt2.c0, t0.c39, vt0.c0, t0.c0 FROM vt0, t0, vt2 WHERE (((((((((((t0.c0 COLLATE BINARY)AND('')))AND(((vt2.c0)<<(vt0.c1)))))AND(((((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)))OR(vt0.c0)))OR(vt0.c1)))))AND(((((((((vt0.c0)AND(vt2.c0)))OR(vt2.c0)))AND(t0.c0)))OR(vt0.c1))))) ISNULL));
SELECT DISTINCT vt2.c0, t0.c39, vt0.c0, t0.c0 FROM vt0, t0, vt2;
SELECT vt2.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((((x'') NOTNULL)) NOT BETWEEN ((t0.c39 IN (0.43309047738701534))) AND (CAST(t0.c0 AS REAL))) LEFT OUTER JOIN vt2 ON (((vt1.c0)|(t0.c0)) IN (vt2.c0 COLLATE BINARY)) FULL OUTER JOIN t0 ON CASE WHEN CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt2.c0 THEN vt1.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c1 THEN t0.c0 WHEN vt1.c1 THEN vt0.c1 ELSE t0.c0 END THEN (((vt1.c1))>=((vt0.c0))) WHEN ((vt2.c0)<(t0.c0)) THEN CAST(vt0.c0 AS REAL) WHEN ((vt0.c1)IS NOT(vt1.c0)) THEN CASE WHEN 'Y肈⏚.zQb' THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 WHEN vt1.c1 THEN vt2.c0 ELSE vt0.c0 END END GROUP BY vt2.c0, vt0.c0;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (((((SUM(vt1.c0)))==((COUNT(MIN(TOTAL(vt1.c0)))))))IS(TOTAL(vt1.c0))) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT ((((((SUM(vt1.c0)))=((COUNT(MIN(TOTAL(vt1.c0)))))))IS(TOTAL(vt1.c0))))) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (((((((SUM(vt1.c0)))==((COUNT(MIN(TOTAL(vt1.c0)))))))IS(TOTAL(vt1.c0)))) ISNULL);
SELECT vt2.c0 FROM vt2;
SELECT ALL vt2.c0 FROM vt2 WHERE ((((((((((~ (vt2.c0)))OR(CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END)))OR(((vt2.c0)!=(vt2.c0)))))AND(CAST(0.4897283411956129 AS INTEGER))))AND((vt2.c0 IN (vt2.c0))))) UNION ALL SELECT vt2.c0 FROM vt2 WHERE ((NOT ((((((((((~ (vt2.c0)))OR(CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END)))OR(((vt2.c0)!=(vt2.c0)))))AND(CAST(0.4897283411956129 AS INTEGER))))AND((vt2.c0 IN (vt2.c0))))))) UNION ALL SELECT vt2.c0 FROM vt2 WHERE ((((((((((((~ (vt2.c0)))OR(CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END)))OR(((vt2.c0)<>(vt2.c0)))))AND(CAST(0.4897283411956129 AS INTEGER))))AND((vt2.c0 IN (vt2.c0))))) ISNULL));
SELECT vt2.c0 FROM vt2;
SELECT DISTINCT t0.c39, vt1.c0 FROM vt0, t0, vt1, vt2;
SELECT DISTINCT t0.c39, vt1.c0 FROM vt0, t0, vt1, vt2 WHERE ((((vt1.c1)) BETWEEN (((vt1.c1 IN ()))) AND ((-1437801967)))) UNION SELECT DISTINCT t0.c39, vt1.c0 FROM vt0, t0, vt1, vt2 WHERE ((NOT ((((vt1.c1)) BETWEEN (((vt1.c1 IN ()))) AND ((-1437801967)))))) UNION SELECT DISTINCT t0.c39, vt1.c0 FROM vt0, t0, vt1, vt2 NOT INDEXED WHERE ((((((vt1.c1)) BETWEEN (((vt1.c1 IN ()))) AND ((-1437801967)))) ISNULL));
SELECT DISTINCT t0.c39, vt1.c0 FROM vt0, t0, vt1, vt2;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE ((~ (vt2.c0 COLLATE RTRIM))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT ((~ (vt2.c0 COLLATE RTRIM))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((((~ (vt2.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL t0.c0, vt0.c1, t0.c39 FROM t0, vt0 GROUP BY t0.c0, vt0.c1, t0.c39;
SELECT t0.c0, vt0.c1, t0.c39 FROM t0, vt0 GROUP BY t0.c0, vt0.c1, t0.c39 HAVING GROUP_CONCAT(SUM(t0.c0)) UNION ALL SELECT t0.c0, vt0.c1, t0.c39 FROM t0, vt0 GROUP BY t0.c0, vt0.c1, t0.c39 HAVING (NOT (GROUP_CONCAT(SUM(t0.c0)))) UNION ALL SELECT ALL t0.c0, vt0.c1, t0.c39 FROM t0, vt0 GROUP BY t0.c0, vt0.c1, t0.c39 HAVING ((GROUP_CONCAT(SUM(t0.c0))) ISNULL);
SELECT ALL vt1.c1, vt1.c0, t0.c39 FROM vt1, t0;
SELECT vt1.c1, vt1.c0, t0.c39 FROM vt1, t0 WHERE (((CAST(vt1.c1 AS NUMERIC))IS NOT(0.6045769911884931))) UNION ALL SELECT vt1.c1, vt1.c0, t0.c39 FROM vt1, t0 WHERE ((NOT (((CAST(vt1.c1 AS NUMERIC))IS NOT(0.6045769911884931))))) UNION ALL SELECT vt1.c1, vt1.c0, t0.c39 FROM vt1, t0 WHERE (((((CAST(vt1.c1 AS NUMERIC))IS NOT(0.6045769911884931))) ISNULL));
SELECT ALL vt1.c1, vt1.c0, t0.c39 FROM vt1, t0;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON (((((vt0.c0)OR(0x1ab03741)))OR(vt2.c0)) IN ()) RIGHT OUTER JOIN vt1 ON LOWER(DISTINCT ((((vt1.c0)AND(vt2.c0)))OR(vt0.c0)));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON (((((vt0.c0)OR(0X1ab03741)))OR(vt2.c0)) IN ()) RIGHT OUTER JOIN vt1 ON LOWER(DISTINCT ((((vt1.c0)AND(vt2.c0)))OR(vt0.c0))) WHERE ((((vt0.c0 IN ()))%(CAST(NULL AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON (((((vt0.c0)OR(0x1ab03741)))OR(vt2.c0)) IN ()) RIGHT OUTER JOIN vt1 ON LOWER(DISTINCT ((((vt1.c0)AND(vt2.c0)))OR(vt0.c0))) WHERE ((NOT ((((vt0.c0 IN ()))%(CAST(NULL AS NUMERIC)))))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON (((((vt0.c0)OR(0X1ab03741)))OR(vt2.c0)) IN ()) RIGHT OUTER JOIN vt1 ON LOWER(DISTINCT ((((vt1.c0)AND(vt2.c0)))OR(vt0.c0))) WHERE ((((((vt0.c0 IN ()))%(CAST(NULL AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON (((((vt0.c0)OR(0x1ab03741)))OR(vt2.c0)) IN ()) RIGHT OUTER JOIN vt1 ON LOWER(DISTINCT ((((vt1.c0)AND(vt2.c0)))OR(vt0.c0)));
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((0.09902150923095454))==((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((0.09902150923095454))==((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((0.09902150923095454))=((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t0.c39, vt0.c0, vt2.c0, vt0.c1, t0.c0 FROM t0, vt2 CROSS JOIN vt0 ON CASE WHEN CASE WHEN vt0.c1 THEN x'919b' ELSE vt0.c0 END THEN t0.c0 ELSE ((vt0.c1)&(t0.c0)) END GROUP BY t0.c39, vt0.c0, vt2.c0, vt0.c1, t0.c0;
SELECT t0.c39, vt0.c0, vt2.c0, vt0.c1, t0.c0 FROM t0, vt2 CROSS JOIN vt0 ON CASE WHEN CASE WHEN vt0.c1 THEN x'919b' ELSE vt0.c0 END THEN t0.c0 ELSE ((vt0.c1)&(t0.c0)) END GROUP BY t0.c39, vt0.c0, vt2.c0, vt0.c1, t0.c0 HAVING (((NOT (AVG(vt2.c0)))) IS FALSE) UNION ALL SELECT ALL t0.c39, vt0.c0, vt2.c0, vt0.c1, t0.c0 FROM t0, vt2 CROSS JOIN vt0 ON CASE WHEN CASE WHEN vt0.c1 THEN x'919b' ELSE vt0.c0 END THEN t0.c0 ELSE ((vt0.c1)&(t0.c0)) END GROUP BY t0.c39, vt0.c0, vt2.c0, vt0.c1, t0.c0 HAVING (NOT ((((NOT (AVG(vt2.c0)))) IS FALSE))) UNION ALL SELECT t0.c39, vt0.c0, vt2.c0, vt0.c1, t0.c0 FROM t0, vt2 CROSS JOIN vt0 ON CASE WHEN CASE WHEN vt0.c1 THEN x'919b' ELSE vt0.c0 END THEN t0.c0 ELSE ((vt0.c1)&(t0.c0)) END GROUP BY t0.c39, vt0.c0, vt2.c0, vt0.c1, t0.c0 HAVING (((((NOT (AVG(vt2.c0)))) IS FALSE)) ISNULL);
SELECT ALL t0.c39, vt0.c0, vt2.c0, vt0.c1, t0.c0 FROM t0, vt2 CROSS JOIN vt0 ON CASE WHEN CASE WHEN vt0.c1 THEN x'919b' ELSE vt0.c0 END THEN t0.c0 ELSE ((vt0.c1)&(t0.c0)) END GROUP BY t0.c39, vt0.c0, vt2.c0, vt0.c1, t0.c0;
SELECT t0.c39, vt0.c0, vt2.c0, vt0.c1, t0.c0 FROM t0, vt2 CROSS JOIN vt0 ON CASE WHEN CASE WHEN vt0.c1 THEN x'919b' ELSE vt0.c0 END THEN t0.c0 ELSE ((vt0.c1)&(t0.c0)) END GROUP BY t0.c39, vt0.c0, vt2.c0, vt0.c1, t0.c0 HAVING (((NOT (AVG(vt2.c0)))) IS FALSE) UNION ALL SELECT ALL t0.c39, vt0.c0, vt2.c0, vt0.c1, t0.c0 FROM t0, vt2 CROSS JOIN vt0 ON CASE WHEN CASE WHEN vt0.c1 THEN x'919b' ELSE vt0.c0 END THEN t0.c0 ELSE ((vt0.c1)&(t0.c0)) END GROUP BY t0.c39, vt0.c0, vt2.c0, vt0.c1, t0.c0 HAVING (NOT ((((NOT (AVG(vt2.c0)))) IS FALSE))) UNION ALL SELECT t0.c39, vt0.c0, vt2.c0, vt0.c1, t0.c0 FROM t0, vt2 CROSS JOIN vt0 ON CASE WHEN CASE WHEN vt0.c1 THEN x'919b' ELSE vt0.c0 END THEN t0.c0 ELSE ((vt0.c1)&(t0.c0)) END GROUP BY t0.c39, vt0.c0, vt2.c0, vt0.c1, t0.c0 HAVING (((((NOT (AVG(vt2.c0)))) IS FALSE)) ISNULL);
SELECT ALL t0.c39, vt0.c0, vt2.c0, vt0.c1, t0.c0 FROM t0, vt2 CROSS JOIN vt0 ON CASE WHEN CASE WHEN vt0.c1 THEN x'919b' ELSE vt0.c0 END THEN t0.c0 ELSE ((vt0.c1)&(t0.c0)) END GROUP BY t0.c39, vt0.c0, vt2.c0, vt0.c1, t0.c0;
SELECT ALL * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (CASE ((vt1.c1) NOTNULL)  WHEN vt0.c1 COLLATE BINARY THEN CAST(vt1.c1 AS TEXT) WHEN ((vt1.c0)<(vt0.c0)) THEN ((((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c1)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)) WHEN ((vt1.c1) IS TRUE) THEN CASE vt1.c0  WHEN '1269802829' THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 END ELSE ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) END) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (CASE ((vt1.c1) NOTNULL)  WHEN vt0.c1 COLLATE BINARY THEN CAST(vt1.c1 AS TEXT) WHEN ((vt1.c0)<(vt0.c0)) THEN ((((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c1)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)) WHEN ((vt1.c1) IS TRUE) THEN CASE vt1.c0  WHEN '1269802829' THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 END ELSE ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) END))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE (((CASE ((vt1.c1) NOTNULL)  WHEN vt0.c1 COLLATE BINARY THEN CAST(vt1.c1 AS TEXT) WHEN ((vt1.c0)<(vt0.c0)) THEN ((((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c1)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)) WHEN ((vt1.c1) IS TRUE) THEN CASE vt1.c0  WHEN '1269802829' THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 END ELSE ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) END) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON ((vt0.c1 IN (vt2.c0)) IN ());
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON ((vt0.c1 IN (vt2.c0)) IN ()) WHERE (((CASE vt0.c1  WHEN vt2.c0 THEN vt0.c1 ELSE vt0.c0 END)IS NOT((NOT (vt2.c0))))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON ((vt0.c1 IN (vt2.c0)) IN ()) WHERE ((NOT (((CASE vt0.c1  WHEN vt2.c0 THEN vt0.c1 ELSE vt0.c0 END)IS NOT((NOT (vt2.c0))))))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON ((vt0.c1 IN (vt2.c0)) IN ()) WHERE (((((CASE vt0.c1  WHEN vt2.c0 THEN vt0.c1 ELSE vt0.c0 END)IS NOT((NOT (vt2.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON ((vt0.c1 IN (vt2.c0)) IN ());
SELECT vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0, vt1 WHERE ((((NULL IN (vt0.c0))) NOT NULL)) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0, vt1 WHERE ((NOT ((((NULL IN (vt0.c0))) NOT NULL)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0, vt1 WHERE ((((((NULL IN (vt0.c0))) NOT NULL)) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1;
SELECT vt2.c0, vt0.c0, t0.c39, t0.c0, vt1.c1 FROM vt1, vt2, vt0, t0 GROUP BY vt2.c0, vt0.c0, t0.c39, t0.c0, vt1.c1;
SELECT ALL vt2.c0, vt0.c0, t0.c39, t0.c0, vt1.c1 FROM vt1, vt2, vt0, t0 GROUP BY vt2.c0, vt0.c0, t0.c39, t0.c0, vt1.c1 HAVING TOTAL(MAX(MIN(COUNT(*)))) UNION ALL SELECT ALL vt2.c0, vt0.c0, t0.c39, t0.c0, vt1.c1 FROM vt1, vt2, vt0, t0 GROUP BY vt2.c0, vt0.c0, t0.c39, t0.c0, vt1.c1 HAVING (NOT (TOTAL(MAX(MIN(COUNT(*)))))) UNION ALL SELECT ALL vt2.c0, vt0.c0, t0.c39, t0.c0, vt1.c1 FROM vt1, vt2, vt0, t0 GROUP BY vt2.c0, vt0.c0, t0.c39, t0.c0, vt1.c1 HAVING ((TOTAL(MAX(MIN(COUNT(*))))) ISNULL);
SELECT ALL SUM(((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN (x'') AND ((NOT (vt0.c0))))) FROM vt0;
SELECT ALL t0.c0 FROM vt1 INDEXED BY i43, t0;
SELECT DISTINCT vt1.c0, t0.c0, vt1.c1, vt0.c0, vt0.c1, t0.c39 FROM vt0, t0, vt1;
SELECT DISTINCT vt1.c0, t0.c0, vt1.c1, vt0.c0, vt0.c1, t0.c39 FROM vt0, t0, vt1 WHERE (CASE WHEN SQLITE_VERSION() THEN CASE WHEN vt1.c0 THEN 0.054172036448600136 ELSE t0.c39 END ELSE CAST(t0.c39 AS NUMERIC) END) UNION SELECT DISTINCT vt1.c0, t0.c0, vt1.c1, vt0.c0, vt0.c1, t0.c39 FROM vt0, t0, vt1 WHERE ((NOT (CASE WHEN SQLITE_VERSION() THEN CASE WHEN vt1.c0 THEN 0.054172036448600136 ELSE t0.c39 END ELSE CAST(t0.c39 AS NUMERIC) END))) UNION SELECT DISTINCT vt1.c0, t0.c0, vt1.c1, vt0.c0, vt0.c1, t0.c39 FROM vt0, t0, vt1 WHERE (((CASE WHEN SQLITE_VERSION() THEN CASE WHEN vt1.c0 THEN 0.054172036448600136 ELSE t0.c39 END ELSE CAST(t0.c39 AS NUMERIC) END) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0, vt1.c1, vt0.c0, vt0.c1, t0.c39 FROM vt0, t0, vt1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (LIKELY(load_extension(vt0.c1))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (LIKELY(load_extension(vt0.c1))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((LIKELY(load_extension(vt0.c1))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt1.c0, vt2.c0, t0.c39, vt0.c1 FROM vt0, vt1, vt2, t0 GROUP BY vt1.c0, vt2.c0, t0.c39, vt0.c1;
SELECT ALL vt1.c0, vt2.c0, t0.c39, vt0.c1 FROM vt0, vt1, vt2, t0 GROUP BY vt1.c0, vt2.c0, t0.c39, vt0.c1 HAVING AVG((((vt0.c1))<((t0.c0)))) UNION ALL SELECT ALL vt1.c0, vt2.c0, t0.c39, vt0.c1 FROM vt0, vt1, vt2, t0 GROUP BY vt1.c0, vt2.c0, t0.c39, vt0.c1 HAVING (NOT (AVG((((vt0.c1))<((t0.c0)))))) UNION ALL SELECT vt1.c0, vt2.c0, t0.c39, vt0.c1 FROM vt0, vt1, vt2, t0 GROUP BY vt1.c0, vt2.c0, t0.c39, vt0.c1 HAVING ((AVG((((vt0.c1))<((t0.c0))))) ISNULL);
SELECT vt1.c0, vt2.c0, t0.c39, vt0.c1 FROM vt0, vt1, vt2, t0 GROUP BY vt1.c0, vt2.c0, t0.c39, vt0.c1;
SELECT ALL vt1.c0, vt2.c0, t0.c39, vt0.c1 FROM vt0, vt1, vt2, t0 GROUP BY vt1.c0, vt2.c0, t0.c39, vt0.c1 HAVING AVG((((vt0.c1))<((t0.c0)))) UNION ALL SELECT ALL vt1.c0, vt2.c0, t0.c39, vt0.c1 FROM vt0, vt1, vt2, t0 GROUP BY vt1.c0, vt2.c0, t0.c39, vt0.c1 HAVING (NOT (AVG((((vt0.c1))<((t0.c0)))))) UNION ALL SELECT vt1.c0, vt2.c0, t0.c39, vt0.c1 FROM vt0, vt1, vt2, t0 GROUP BY vt1.c0, vt2.c0, t0.c39, vt0.c1 HAVING ((AVG((((vt0.c1))<((t0.c0))))) ISNULL);
SELECT vt1.c0, vt2.c0, t0.c39, vt0.c1 FROM vt0, vt1, vt2, t0 GROUP BY vt1.c0, vt2.c0, t0.c39, vt0.c1;
SELECT vt2.c0 FROM vt2;
SELECT ALL vt2.c0 FROM vt2 WHERE (CAST(((vt2.c0)*(vt2.c0)) AS NUMERIC)) UNION ALL SELECT vt2.c0 FROM vt2 WHERE ((NOT (CAST(((vt2.c0)*(vt2.c0)) AS NUMERIC)))) UNION ALL SELECT vt2.c0 FROM vt2 WHERE (((CAST(((vt2.c0)*(vt2.c0)) AS NUMERIC)) ISNULL));
SELECT vt2.c0 FROM vt2;
SELECT DISTINCT * FROM vt0, vt1 FULL OUTER JOIN vt2 ON CASE WHEN (- (vt0.c0)) THEN (vt2.c0 IN ()) END;
SELECT DISTINCT * FROM vt0, vt1 FULL OUTER JOIN vt2 ON CASE WHEN (- (vt0.c0)) THEN (vt2.c0 IN ()) END WHERE ((((((- (vt0.c0)))OR(vt1.c1)))OR(PRINTF(NULL, vt0.c0, '301758515')))) UNION SELECT DISTINCT * FROM vt0, vt1 FULL OUTER JOIN vt2 ON CASE WHEN (- (vt0.c0)) THEN (vt2.c0 IN ()) END WHERE ((NOT ((((((- (vt0.c0)))OR(vt1.c1)))OR(PRINTF(NULL, vt0.c0, '301758515')))))) UNION SELECT DISTINCT * FROM vt0, vt1 FULL OUTER JOIN vt2 ON CASE WHEN (- (vt0.c0)) THEN (vt2.c0 IN ()) END WHERE ((((((((- (vt0.c0)))OR(vt1.c1)))OR(PRINTF(NULL, vt0.c0, '301758515')))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1 FULL OUTER JOIN vt2 ON CASE WHEN (- (vt0.c0)) THEN (vt2.c0 IN ()) END;
SELECT t0.c0, t0.c39 FROM t0 GROUP BY t0.c0, t0.c39;
SELECT ALL t0.c0, t0.c39 FROM t0 WHERE (0.1400685434371095) GROUP BY t0.c0, t0.c39 UNION SELECT ALL t0.c0, t0.c39 FROM t0 WHERE ((NOT (0.1400685434371095))) GROUP BY t0.c0, t0.c39 UNION SELECT ALL t0.c0, t0.c39 FROM t0 WHERE (((0.1400685434371095) ISNULL)) GROUP BY t0.c0, t0.c39;
SELECT t0.c0, t0.c39 FROM t0 GROUP BY t0.c0, t0.c39;
SELECT vt2.c0, vt0.c1, t0.c0, vt0.c0 FROM vt2, vt0, t0 GROUP BY vt2.c0, vt0.c1, t0.c0, vt0.c0;
SELECT vt2.c0, vt0.c1, t0.c0, vt0.c0 FROM vt2, vt0, t0 GROUP BY vt2.c0, vt0.c1, t0.c0, vt0.c0 HAVING COUNT(GROUP_CONCAT('')) UNION ALL SELECT ALL vt2.c0, vt0.c1, t0.c0, vt0.c0 FROM vt2, vt0, t0 GROUP BY vt2.c0, vt0.c1, t0.c0, vt0.c0 HAVING (NOT (COUNT(GROUP_CONCAT('')))) UNION ALL SELECT ALL vt2.c0, vt0.c1, t0.c0, vt0.c0 FROM vt2, vt0, t0 GROUP BY vt2.c0, vt0.c1, t0.c0, vt0.c0 HAVING ((COUNT(GROUP_CONCAT(''))) ISNULL);
SELECT ALL * FROM t0, vt2, vt1, vt0;
SELECT * FROM t0, vt2, vt1, vt0 WHERE (((vt0.c0 COLLATE BINARY)OR(((t0.c39) BETWEEN (vt1.c1) AND (vt0.c1))))) UNION ALL SELECT ALL * FROM t0, vt2, vt1, vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY)OR(((t0.c39) BETWEEN (vt1.c1) AND (vt0.c1))))))) UNION ALL SELECT * FROM t0, vt2, vt1, vt0 WHERE (((((vt0.c0 COLLATE BINARY)OR(((t0.c39) BETWEEN (vt1.c1) AND (vt0.c1))))) ISNULL));
SELECT ALL * FROM t0, vt2, vt1, vt0;
SELECT DISTINCT * FROM vt1, vt2;
SELECT DISTINCT * FROM vt1, vt2 WHERE ((CAST(vt1.c1 AS NUMERIC) IN ())) UNION SELECT DISTINCT * FROM vt1, vt2 WHERE ((NOT ((CAST(vt1.c1 AS NUMERIC) IN ())))) UNION SELECT DISTINCT * FROM vt1, vt2 WHERE ((((CAST(vt1.c1 AS NUMERIC) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, vt2;
SELECT vt0.c1 FROM vt2, vt0 INDEXED BY i43 GROUP BY vt0.c1;
SELECT t0.c39, t0.c0, vt2.c0, vt0.c1, vt0.c0 FROM vt0, vt2, t0 GROUP BY t0.c39, t0.c0, vt2.c0, vt0.c1, vt0.c0;
SELECT t0.c39, t0.c0, vt2.c0, vt0.c1, vt0.c0 FROM vt0, vt2, t0 GROUP BY t0.c39, t0.c0, vt2.c0, vt0.c1, vt0.c0 HAVING CAST(SUM(vt0.c0) AS REAL) UNION ALL SELECT t0.c39, t0.c0, vt2.c0, vt0.c1, vt0.c0 FROM vt0, vt2, t0 GROUP BY t0.c39, t0.c0, vt2.c0, vt0.c1, vt0.c0 HAVING (NOT (CAST(SUM(vt0.c0) AS REAL))) UNION ALL SELECT ALL t0.c39, t0.c0, vt2.c0, vt0.c1, vt0.c0 FROM vt0, vt2, t0 GROUP BY t0.c39, t0.c0, vt2.c0, vt0.c1, vt0.c0 HAVING ((CAST(SUM(vt0.c0) AS REAL)) ISNULL);
SELECT t0.c39, t0.c0, vt2.c0, vt0.c1, vt0.c0 FROM vt0, vt2, t0 GROUP BY t0.c39, t0.c0, vt2.c0, vt0.c1, vt0.c0;
SELECT t0.c39, t0.c0, vt2.c0, vt0.c1, vt0.c0 FROM vt0, vt2, t0 GROUP BY t0.c39, t0.c0, vt2.c0, vt0.c1, vt0.c0 HAVING CAST(SUM(vt0.c0) AS REAL) UNION ALL SELECT t0.c39, t0.c0, vt2.c0, vt0.c1, vt0.c0 FROM vt0, vt2, t0 GROUP BY t0.c39, t0.c0, vt2.c0, vt0.c1, vt0.c0 HAVING (NOT (CAST(SUM(vt0.c0) AS REAL))) UNION ALL SELECT ALL t0.c39, t0.c0, vt2.c0, vt0.c1, vt0.c0 FROM vt0, vt2, t0 GROUP BY t0.c39, t0.c0, vt2.c0, vt0.c1, vt0.c0 HAVING ((CAST(SUM(vt0.c0) AS REAL)) ISNULL);
SELECT t0.c39, t0.c0, vt2.c0, vt0.c1, vt0.c0 FROM vt0, vt2, t0 GROUP BY t0.c39, t0.c0, vt2.c0, vt0.c1, vt0.c0;
SELECT ALL vt0.c0, vt0.c1, vt2.c0 FROM vt0, vt2;
SELECT vt0.c0, vt0.c1, vt2.c0 FROM vt0, vt2 WHERE (0.29946397846325934) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt2.c0 FROM vt0, vt2 WHERE ((NOT (0.29946397846325934))) UNION ALL SELECT vt0.c0, vt0.c1, vt2.c0 FROM vt0, vt2 WHERE (((0.29946397846325934) ISNULL));
SELECT ALL vt0.c0, vt0.c1, vt2.c0 FROM vt0, vt2;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (json_patch(vt0.c0 COLLATE BINARY, (vt0.c1 IN ()))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (json_patch(vt0.c0 COLLATE BINARY, (vt0.c1 IN ()))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((json_patch(vt0.c0 COLLATE BINARY, (vt0.c1 IN ()))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, t0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0, t0 WHERE ((NULL IN ())) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0, t0 WHERE ((NOT ((NULL IN ())))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0, t0 WHERE ((((NULL IN ())) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, t0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt1.c1, t0.c0, vt2.c0 FROM t0 CROSS JOIN vt2 ON (vt1.c1 IN (t0.c0)) COLLATE RTRIM COLLATE RTRIM FULL OUTER JOIN vt1 ON ((vt1.c0 COLLATE RTRIM)||(TRIM(DISTINCT '447756097', t0.c39))) GROUP BY vt1.c1, t0.c0, vt2.c0;
SELECT MIN(((NULL) NOT BETWEEN ((+ (vt0.c0))) AND ((((vt2.c0))<=((t0.c39)))))) FROM vt0, vt2, vt1, t0 ORDER BY ((CASE WHEN vt2.c0 THEN vt0.c1 ELSE vt2.c0 END)<<(CAST(vt2.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT ALL vt2.c0 FROM vt1, vt2;
SELECT vt2.c0 FROM vt1, vt2 WHERE (((((vt1.c1)%(vt1.c1))) IS TRUE)) UNION ALL SELECT ALL vt2.c0 FROM vt1, vt2 WHERE ((NOT (((((vt1.c1)%(vt1.c1))) IS TRUE)))) UNION ALL SELECT ALL vt2.c0 FROM vt1, vt2 WHERE (((((((vt1.c1)%(vt1.c1))) IS TRUE)) ISNULL));
SELECT ALL vt2.c0 FROM vt1, vt2;
SELECT DISTINCT t0.c0, vt0.c1, vt0.c0, t0.c39 FROM t0, vt0;
SELECT DISTINCT t0.c0, vt0.c1, vt0.c0, t0.c39 FROM t0, vt0 WHERE ('-901387156') UNION SELECT DISTINCT t0.c0, vt0.c1, vt0.c0, t0.c39 FROM t0, vt0 WHERE ((NOT ('-901387156'))) UNION SELECT DISTINCT t0.c0, vt0.c1, vt0.c0, t0.c39 FROM t0, vt0 WHERE ((('-901387156') ISNULL));
SELECT DISTINCT t0.c0, vt0.c1, vt0.c0, t0.c39 FROM t0, vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) NOTNULL)) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) NOTNULL)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) NOTNULL)) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt2.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt2, t0 RIGHT OUTER JOIN vt0 ON CASE vt1.c0  WHEN t0.c39 THEN vt1.c0 ELSE vt2.c0 END COLLATE BINARY GROUP BY vt2.c0, vt0.c1, vt1.c0, vt0.c0;
SELECT ALL vt2.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt2, t0 RIGHT OUTER JOIN vt0 ON CASE vt1.c0  WHEN t0.c39 THEN vt1.c0 ELSE vt2.c0 END COLLATE BINARY GROUP BY vt2.c0, vt0.c1, vt1.c0, vt0.c0 HAVING AVG(MAX(TOTAL(TOTAL(COUNT(vt0.c1))))) UNION ALL SELECT ALL vt2.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt2, t0 RIGHT OUTER JOIN vt0 ON CASE vt1.c0  WHEN t0.c39 THEN vt1.c0 ELSE vt2.c0 END COLLATE BINARY GROUP BY vt2.c0, vt0.c1, vt1.c0, vt0.c0 HAVING (NOT (AVG(MAX(TOTAL(TOTAL(COUNT(vt0.c1))))))) UNION ALL SELECT ALL vt2.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt2, t0 RIGHT OUTER JOIN vt0 ON CASE vt1.c0  WHEN t0.c39 THEN vt1.c0 ELSE vt2.c0 END COLLATE BINARY GROUP BY vt2.c0, vt0.c1, vt1.c0, vt0.c0 HAVING ((AVG(MAX(TOTAL(TOTAL(COUNT(vt0.c1)))))) ISNULL);
SELECT ALL t0.c39, t0.c0 FROM vt1, vt2, vt0, t0;
SELECT t0.c39, t0.c0 FROM vt1, vt2, vt0, t0 WHERE ((NOT (((t0.c39)<=(t0.c0))))) UNION ALL SELECT t0.c39, t0.c0 FROM vt1, vt2, vt0, t0 WHERE ((NOT ((NOT (((t0.c39)<=(t0.c0))))))) UNION ALL SELECT t0.c39, t0.c0 FROM vt1, vt2, vt0, t0 WHERE ((((NOT (((t0.c39)<=(t0.c0))))) ISNULL));
SELECT ALL t0.c39, t0.c0 FROM vt1, vt2, vt0, t0;
SELECT DISTINCT vt1.c1, vt0.c0, vt2.c0, vt0.c1, vt1.c0 FROM vt0, vt1, vt2;
SELECT DISTINCT vt1.c1, vt0.c0, vt2.c0, vt0.c1, vt1.c0 FROM vt0, vt1, vt2 WHERE (((((vt2.c0)OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)))))AND(((((vt2.c0)AND(vt1.c0)))OR(vt1.c1))))) UNION SELECT DISTINCT vt1.c1, vt0.c0, vt2.c0, vt0.c1, vt1.c0 FROM vt0, vt1, vt2 WHERE ((NOT (((((vt2.c0)OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)))))AND(((((vt2.c0)AND(vt1.c0)))OR(vt1.c1))))))) UNION SELECT DISTINCT vt1.c1, vt0.c0, vt2.c0, vt0.c1, vt1.c0 FROM vt0, vt1, vt2 WHERE (((((((vt2.c0)OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)))))AND(((((vt2.c0)AND(vt1.c0)))OR(vt1.c1))))) ISNULL));
SELECT DISTINCT vt1.c1, vt0.c0, vt2.c0, vt0.c1, vt1.c0 FROM vt0, vt1, vt2;
SELECT ALL t0.c0 FROM t0 NOT INDEXED, vt0, vt2 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0, vt2 WHERE (TRIM(DISTINCT 0.40934550394124913, '-53247816')) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, vt0, vt2 WHERE ((NOT (TRIM(DISTINCT 0.40934550394124913, '-53247816')))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt0, vt2 WHERE (((TRIM(DISTINCT 0.40934550394124913, '-53247816')) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 NOT INDEXED, vt0, vt2 GROUP BY t0.c0;
SELECT vt2.c0, t0.c0, t0.c39 FROM t0, vt2 GROUP BY vt2.c0, t0.c0, t0.c39;
SELECT vt2.c0, t0.c0, t0.c39 FROM t0, vt2 GROUP BY vt2.c0, t0.c0, t0.c39 HAVING TOTAL(COUNT(t0.c39)) UNION ALL SELECT vt2.c0, t0.c0, t0.c39 FROM t0, vt2 GROUP BY vt2.c0, t0.c0, t0.c39 HAVING (NOT (TOTAL(COUNT(t0.c39)))) UNION ALL SELECT vt2.c0, t0.c0, t0.c39 FROM t0, vt2 GROUP BY vt2.c0, t0.c0, t0.c39 HAVING ((TOTAL(COUNT(t0.c39))) ISNULL);
SELECT ALL t0.c0, vt2.c0, t0.c39 FROM vt2 INDEXED BY i43 LEFT OUTER JOIN t0 ON (+ ((t0.c0 IN ())));
SELECT DISTINCT * FROM vt2, vt1, t0, vt0;
SELECT DISTINCT * FROM vt2, vt1, t0, vt0 WHERE (json_type(CAST(0Xfffffffff62d7462 AS REAL))) UNION SELECT DISTINCT * FROM vt2, vt1, t0, vt0 WHERE ((NOT (json_type(CAST(0Xfffffffff62d7462 AS REAL))))) UNION SELECT DISTINCT * FROM vt2, vt1, t0, vt0 WHERE (((json_type(CAST(0xfffffffff62d7462 AS REAL))) ISNULL));
SELECT DISTINCT * FROM vt2, vt1, t0, vt0;
SELECT t0.c0, vt0.c0, vt0.c1, vt1.c1, vt1.c0 FROM vt1 CROSS JOIN vt0 ON vt1.c1 INNER JOIN t0 ON (((+ (x'b022')))||(((vt1.c0)GLOB(t0.c39)))) GROUP BY t0.c0, vt0.c0, vt0.c1, vt1.c1, vt1.c0;
SELECT t0.c0, vt0.c0, vt0.c1, vt1.c1, vt1.c0 FROM vt1 CROSS JOIN vt0 ON vt1.c1 INNER JOIN t0 ON (((+ (x'b022')))||(((vt1.c0)GLOB(t0.c39)))) WHERE (CASE 0x4d86580e  WHEN ((t0.c39)==(vt0.c1)) THEN (('1318452740') ISNULL) END) GROUP BY t0.c0, vt0.c0, vt0.c1, vt1.c1, vt1.c0 UNION SELECT ALL t0.c0, vt0.c0, vt0.c1, vt1.c1, vt1.c0 FROM vt1 CROSS JOIN vt0 ON vt1.c1 INNER JOIN t0 ON (((+ (x'b022')))||(((vt1.c0)GLOB(t0.c39)))) WHERE ((NOT (CASE 0X4d86580e  WHEN ((t0.c39)==(vt0.c1)) THEN (('1318452740') ISNULL) END))) GROUP BY t0.c0, vt0.c0, vt0.c1, vt1.c1, vt1.c0 UNION SELECT ALL t0.c0, vt0.c0, vt0.c1, vt1.c1, vt1.c0 FROM vt1 CROSS JOIN vt0 ON vt1.c1 INNER JOIN t0 ON (((+ (x'b022')))||(((vt1.c0)GLOB(t0.c39)))) WHERE (((CASE 0X4d86580e  WHEN ((t0.c39)==(vt0.c1)) THEN (('1318452740') ISNULL) END) ISNULL)) GROUP BY t0.c0, vt0.c0, vt0.c1, vt1.c1, vt1.c0;
SELECT t0.c0, vt0.c0, vt0.c1, vt1.c1, vt1.c0 FROM vt1 CROSS JOIN vt0 ON vt1.c1 INNER JOIN t0 ON (((+ (x'b022')))||(((vt1.c0)GLOB(t0.c39)))) GROUP BY t0.c0, vt0.c0, vt0.c1, vt1.c1, vt1.c0;
SELECT ALL t0.c39, t0.c0 FROM vt2, t0 GROUP BY t0.c39, t0.c0;
SELECT ALL t0.c39, t0.c0 FROM vt2, t0 GROUP BY t0.c39, t0.c0 HAVING TOTAL(AVG(COUNT(*))) UNION ALL SELECT ALL t0.c39, t0.c0 FROM vt2, t0 GROUP BY t0.c39, t0.c0 HAVING (NOT (TOTAL(AVG(COUNT(*))))) UNION ALL SELECT t0.c39, t0.c0 FROM vt2, t0 GROUP BY t0.c39, t0.c0 HAVING ((TOTAL(AVG(COUNT(*)))) ISNULL);
SELECT ALL * FROM vt2, vt1, t0, vt0;
SELECT ALL * FROM vt2, vt1, t0, vt0 WHERE (((((CASE WHEN vt1.c1 THEN t0.c0 END)OR(((t0.c0) ISNULL))))OR(x''))) UNION ALL SELECT * FROM vt2, vt1, t0, vt0 WHERE ((NOT (((((CASE WHEN vt1.c1 THEN t0.c0 END)OR(((t0.c0) ISNULL))))OR(x''))))) UNION ALL SELECT * FROM vt2, vt1, t0, vt0 WHERE (((((((CASE WHEN vt1.c1 THEN t0.c0 END)OR(((t0.c0) ISNULL))))OR(x''))) ISNULL));
SELECT ALL * FROM vt2, vt1, t0, vt0;
SELECT DISTINCT vt0.c1, t0.c39, vt2.c0, vt0.c0, vt1.c1, t0.c0, vt1.c0 FROM vt1, t0, vt0 RIGHT OUTER JOIN vt2 ON CAST(vt0.c1 AS INTEGER);
SELECT DISTINCT vt0.c1, t0.c39, vt2.c0, vt0.c0, vt1.c1, t0.c0, vt1.c0 FROM vt1, t0, vt0 RIGHT OUTER JOIN vt2 ON CAST(vt0.c1 AS INTEGER) WHERE (((CAST(vt1.c1 AS BLOB)) IS TRUE)) UNION SELECT DISTINCT vt0.c1, t0.c39, vt2.c0, vt0.c0, vt1.c1, t0.c0, vt1.c0 FROM vt1, t0, vt0 RIGHT OUTER JOIN vt2 ON CAST(vt0.c1 AS INTEGER) WHERE ((NOT (((CAST(vt1.c1 AS BLOB)) IS TRUE)))) UNION SELECT DISTINCT vt0.c1, t0.c39, vt2.c0, vt0.c0, vt1.c1, t0.c0, vt1.c0 FROM vt1, t0, vt0 RIGHT OUTER JOIN vt2 ON CAST(vt0.c1 AS INTEGER) WHERE (((((CAST(vt1.c1 AS BLOB)) IS TRUE)) ISNULL));
SELECT DISTINCT vt0.c1, t0.c39, vt2.c0, vt0.c0, vt1.c1, t0.c0, vt1.c0 FROM vt1, t0, vt0 RIGHT OUTER JOIN vt2 ON CAST(vt0.c1 AS INTEGER);
SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt2, vt1 RIGHT OUTER JOIN vt0 ON (((+ (vt1.c0)))OR(vt0.c1)) GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt2, vt1 RIGHT OUTER JOIN vt0 ON (((+ (vt1.c0)))OR(vt0.c1)) WHERE ((((vt2.c0)) NOT BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN x'' THEN vt0.c0 WHEN vt1.c0 THEN vt2.c0 ELSE vt1.c0 END)) AND ((('{()N' IN ()))))) GROUP BY vt1.c0, vt0.c0, vt0.c1 UNION SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt2 NOT INDEXED, vt1 RIGHT OUTER JOIN vt0 ON (((+ (vt1.c0)))OR(vt0.c1)) WHERE ((NOT ((((vt2.c0)) NOT BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN x'' THEN vt0.c0 WHEN vt1.c0 THEN vt2.c0 ELSE vt1.c0 END)) AND ((('{()N' IN ()))))))) GROUP BY vt1.c0, vt0.c0, vt0.c1 UNION SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt2, vt1 RIGHT OUTER JOIN vt0 ON (((+ (vt1.c0)))OR(vt0.c1)) WHERE ((((((vt2.c0)) NOT BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN x'' THEN vt0.c0 WHEN vt1.c0 THEN vt2.c0 ELSE vt1.c0 END)) AND ((('{()N' IN ()))))) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt2, vt1 RIGHT OUTER JOIN vt0 ON (((+ (vt1.c0)))OR(vt0.c1)) GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT ALL t0.c0, vt0.c0 FROM vt1, vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt1, vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (((TOTAL(vt1.c1))) BETWEEN ((COUNT(*))) AND ((CASE WHEN GROUP_CONCAT(vt0.c0) THEN SUM(MAX(vt0.c1)) WHEN AVG(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(vt1.c1)))) THEN vt1.c1 WHEN AVG(MIN(t0.c0)) THEN vt1.c0 END))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt1, vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT ((((TOTAL(vt1.c1))) BETWEEN ((COUNT(*))) AND ((CASE WHEN GROUP_CONCAT(vt0.c0) THEN SUM(MAX(vt0.c1)) WHEN AVG(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(vt1.c1)))) THEN vt1.c1 WHEN AVG(MIN(t0.c0)) THEN vt1.c0 END))))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt1, vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (((((TOTAL(vt1.c1))) BETWEEN ((COUNT(*))) AND ((CASE WHEN GROUP_CONCAT(vt0.c0) THEN SUM(MAX(vt0.c1)) WHEN AVG(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(vt1.c1)))) THEN vt1.c1 WHEN AVG(MIN(t0.c0)) THEN vt1.c0 END)))) ISNULL);
SELECT ALL * FROM vt0 CROSS JOIN t0 ON TRIM(((vt0.c0) BETWEEN (462631962) AND (vt0.c1)), CASE WHEN NULL THEN t0.c0 END);
SELECT * FROM vt0 CROSS JOIN t0 ON TRIM(((vt0.c0) BETWEEN (462631962) AND (vt0.c1)), CASE WHEN NULL THEN t0.c0 END) WHERE (LIKELIHOOD(DISTINCT ((t0.c39)GLOB(vt0.c0)), 0.8205789163405084)) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN t0 ON TRIM(((vt0.c0) BETWEEN (462631962) AND (vt0.c1)), CASE WHEN NULL THEN t0.c0 END) WHERE ((NOT (LIKELIHOOD(DISTINCT ((t0.c39)GLOB(vt0.c0)), 0.8205789163405084)))) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN t0 ON TRIM(((vt0.c0) BETWEEN (462631962) AND (vt0.c1)), CASE WHEN NULL THEN t0.c0 END) WHERE (((LIKELIHOOD(DISTINCT ((t0.c39)GLOB(vt0.c0)), 0.8205789163405084)) ISNULL));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON TRIM(((vt0.c0) BETWEEN (462631962) AND (vt0.c1)), CASE WHEN NULL THEN t0.c0 END);
SELECT DISTINCT t0.c39 FROM t0;
SELECT DISTINCT t0.c39 FROM t0 WHERE (((t0.c0) IS TRUE)) UNION SELECT DISTINCT t0.c39 FROM t0 WHERE ((NOT (((t0.c0) IS TRUE)))) UNION SELECT DISTINCT t0.c39 FROM t0 WHERE (((((t0.c0) IS TRUE)) ISNULL));
SELECT DISTINCT t0.c39 FROM t0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c1)IS NOT(vt1.c1))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((NOT (((vt1.c1)IS NOT(vt1.c1))))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((((NOT (((vt1.c1)IS NOT(vt1.c1))))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt0.c0, vt2.c0, t0.c0, t0.c39 FROM vt2, vt0, t0 GROUP BY vt0.c0, vt2.c0, t0.c0, t0.c39;
SELECT ALL vt0.c0, vt2.c0, t0.c0, t0.c39 FROM vt2, vt0, t0 GROUP BY vt0.c0, vt2.c0, t0.c0, t0.c39 HAVING AVG(vt2.c0 COLLATE BINARY) UNION ALL SELECT ALL vt0.c0, vt2.c0, t0.c0, t0.c39 FROM vt2, vt0, t0 GROUP BY vt0.c0, vt2.c0, t0.c0, t0.c39 HAVING (NOT (AVG(vt2.c0 COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0, vt2.c0, t0.c0, t0.c39 FROM vt2, vt0, t0 GROUP BY vt0.c0, vt2.c0, t0.c0, t0.c39 HAVING ((AVG(vt2.c0 COLLATE BINARY)) ISNULL);
SELECT ALL vt0.c0, vt2.c0, t0.c0, t0.c39 FROM vt2, vt0, t0 GROUP BY vt0.c0, vt2.c0, t0.c0, t0.c39;
SELECT ALL vt0.c0, vt2.c0, t0.c0, t0.c39 FROM vt2, vt0, t0 GROUP BY vt0.c0, vt2.c0, t0.c0, t0.c39 HAVING AVG(vt2.c0 COLLATE BINARY) UNION ALL SELECT ALL vt0.c0, vt2.c0, t0.c0, t0.c39 FROM vt2, vt0, t0 GROUP BY vt0.c0, vt2.c0, t0.c0, t0.c39 HAVING (NOT (AVG(vt2.c0 COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0, vt2.c0, t0.c0, t0.c39 FROM vt2, vt0, t0 GROUP BY vt0.c0, vt2.c0, t0.c0, t0.c39 HAVING ((AVG(vt2.c0 COLLATE BINARY)) ISNULL);
SELECT ALL vt0.c0, vt2.c0, t0.c0, t0.c39 FROM vt2, vt0, t0 GROUP BY vt0.c0, vt2.c0, t0.c0, t0.c39;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1)+(x'd51b')) AS BLOB)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST(((vt0.c1)+(x'd51b')) AS BLOB)))) UNION ALL SELECT * FROM vt0 WHERE (((CAST(((vt0.c1)+(x'd51b')) AS BLOB)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL);
SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL) WHERE (((((x'')OR(vt0.c1))) NOT BETWEEN (((vt0.c1)>(vt0.c0))) AND (((t0.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL) WHERE ((NOT (((((x'')OR(vt0.c1))) NOT BETWEEN (((vt0.c1)>(vt0.c0))) AND (((t0.c0) NOTNULL)))))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL) WHERE (((((((x'')OR(vt0.c1))) NOT BETWEEN (((vt0.c1)>(vt0.c0))) AND (((t0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL);
SELECT ALL vt2.c0, t0.c39, vt0.c0 FROM vt0, vt2 INNER JOIN t0 ON '' GROUP BY vt2.c0, t0.c39, vt0.c0;
SELECT ALL vt2.c0, t0.c39, vt0.c0 FROM vt0, vt2 INNER JOIN t0 ON '' WHERE (((((((((((vt0.c0)&(t0.c0)))AND((t0.c0 IN ()))))AND(((vt2.c0)IS(t0.c39)))))AND(((vt2.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c39)))))) GROUP BY vt2.c0, t0.c39, vt0.c0 UNION SELECT ALL vt2.c0, t0.c39, vt0.c0 FROM vt0, vt2 INNER JOIN t0 ON '' WHERE ((NOT (((((((((((vt0.c0)&(t0.c0)))AND((t0.c0 IN ()))))AND(((vt2.c0)IS(t0.c39)))))AND(((vt2.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c39)))))))) GROUP BY vt2.c0, t0.c39, vt0.c0 UNION SELECT ALL vt2.c0, t0.c39, vt0.c0 FROM vt0, vt2 INNER JOIN t0 ON '' WHERE (((((((((((((vt0.c0)&(t0.c0)))AND((t0.c0 IN ()))))AND(((vt2.c0)IS(t0.c39)))))AND(((vt2.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c39)))))) ISNULL)) GROUP BY vt2.c0, t0.c39, vt0.c0;
SELECT ALL vt2.c0, t0.c39, vt0.c0 FROM vt0, vt2 INNER JOIN t0 ON '' GROUP BY vt2.c0, t0.c39, vt0.c0;
SELECT ALL t0.c39, t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c39, t0.c0, vt1.c0;
SELECT ALL t0.c39, t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c39, t0.c0, vt1.c0 HAVING TOTAL((+ (COUNT(*)))) UNION ALL SELECT t0.c39, t0.c0, vt1.c0 FROM vt1, t0 NOT INDEXED GROUP BY t0.c39, t0.c0, vt1.c0 HAVING (NOT (TOTAL((+ (COUNT(*)))))) UNION ALL SELECT t0.c39, t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c39, t0.c0, vt1.c0 HAVING ((TOTAL((+ (COUNT(*))))) ISNULL);
SELECT ALL * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE (((UPPER(vt0.c0)) ISNULL)) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT (((UPPER(vt0.c0)) ISNULL)))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE (((((UPPER(vt0.c0)) ISNULL)) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON '-879705590' COLLATE BINARY CROSS JOIN vt2 ON ((t0.c39)<(('923069382' IN ())));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON '-879705590' COLLATE BINARY CROSS JOIN vt2 ON ((t0.c39)<(('923069382' IN ()))) WHERE ('-1547608881') UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON '-879705590' COLLATE BINARY CROSS JOIN vt2 ON ((t0.c39)<(('923069382' IN ()))) WHERE ((NOT ('-1547608881'))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON '-879705590' COLLATE BINARY CROSS JOIN vt2 ON ((t0.c39)<(('923069382' IN ()))) WHERE ((('-1547608881') ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON '-879705590' COLLATE BINARY CROSS JOIN vt2 ON ((t0.c39)<(('923069382' IN ())));
SELECT vt2.c0, vt1.c1, vt1.c0, t0.c39, t0.c0 FROM t0, vt2, vt1 GROUP BY vt2.c0, vt1.c1, vt1.c0, t0.c39, t0.c0;
SELECT ALL vt2.c0, vt1.c1, vt1.c0, t0.c39, t0.c0 FROM t0, vt2 NOT INDEXED, vt1 WHERE (((((t0.c0 IN ())))>((CAST(vt1.c0 AS REAL))))) GROUP BY vt2.c0, vt1.c1, vt1.c0, t0.c39, t0.c0 UNION SELECT vt2.c0, vt1.c1, vt1.c0, t0.c39, t0.c0 FROM t0, vt2, vt1 WHERE ((NOT (((((t0.c0 IN ())))>((CAST(vt1.c0 AS REAL))))))) GROUP BY vt2.c0, vt1.c1, vt1.c0, t0.c39, t0.c0 UNION SELECT vt2.c0, vt1.c1, vt1.c0, t0.c39, t0.c0 FROM t0, vt2, vt1 WHERE (((((((t0.c0 IN ())))>((CAST(vt1.c0 AS REAL))))) ISNULL)) GROUP BY vt2.c0, vt1.c1, vt1.c0, t0.c39, t0.c0;
SELECT vt2.c0, vt1.c1, vt1.c0, t0.c39, t0.c0 FROM t0, vt2, vt1 GROUP BY vt2.c0, vt1.c1, vt1.c0, t0.c39, t0.c0;
SELECT vt0.c0, t0.c0, vt1.c0, vt2.c0 FROM vt0, vt1, t0, vt2 GROUP BY vt0.c0, t0.c0, vt1.c0, vt2.c0;
SELECT vt0.c0, t0.c0, vt1.c0, vt2.c0 FROM vt0, vt1, t0, vt2 GROUP BY vt0.c0, t0.c0, vt1.c0, vt2.c0 HAVING ((vt0.c0)<(vt1.c1)) COLLATE NOCASE UNION ALL SELECT vt0.c0, t0.c0, vt1.c0, vt2.c0 FROM vt0, vt1, t0, vt2 GROUP BY vt0.c0, t0.c0, vt1.c0, vt2.c0 HAVING (NOT (((vt0.c0)<(vt1.c1)) COLLATE NOCASE)) UNION ALL SELECT vt0.c0, t0.c0, vt1.c0, vt2.c0 FROM vt0, vt1, t0, vt2 GROUP BY vt0.c0, t0.c0, vt1.c0, vt2.c0 HAVING ((((vt0.c0)<(vt1.c1)) COLLATE NOCASE) ISNULL);
SELECT vt0.c0, t0.c0, vt1.c0, vt2.c0 FROM vt0, vt1, t0, vt2 GROUP BY vt0.c0, t0.c0, vt1.c0, vt2.c0;
SELECT vt0.c0, t0.c0, vt1.c0, vt2.c0 FROM vt0, vt1, t0, vt2 GROUP BY vt0.c0, t0.c0, vt1.c0, vt2.c0 HAVING ((vt0.c0)<(vt1.c1)) COLLATE NOCASE UNION ALL SELECT vt0.c0, t0.c0, vt1.c0, vt2.c0 FROM vt0, vt1, t0, vt2 GROUP BY vt0.c0, t0.c0, vt1.c0, vt2.c0 HAVING (NOT (((vt0.c0)<(vt1.c1)) COLLATE NOCASE)) UNION ALL SELECT vt0.c0, t0.c0, vt1.c0, vt2.c0 FROM vt0, vt1, t0, vt2 GROUP BY vt0.c0, t0.c0, vt1.c0, vt2.c0 HAVING ((((vt0.c0)<(vt1.c1)) COLLATE NOCASE) ISNULL);
SELECT vt0.c0, t0.c0, vt1.c0, vt2.c0 FROM vt0, vt1, t0, vt2 GROUP BY vt0.c0, t0.c0, vt1.c0, vt2.c0;
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) IS FALSE)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE) IS FALSE)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE) IS FALSE)) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT t0.c39, vt1.c1, t0.c0 FROM t0, vt1 FULL OUTER JOIN vt0 ON 0.12897342012208957 CROSS JOIN vt2 ON CASE ((((vt1.c0)OR(1563017166)))OR(vt1.c1))  WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c1 THEN vt1.c0 ELSE t0.c0 END WHEN t0.c0 THEN ((vt2.c0)!=(vt1.c1)) WHEN CAST(vt1.c0 AS NUMERIC) THEN (- (vt0.c0)) END;
SELECT DISTINCT t0.c39, vt1.c1, t0.c0 FROM t0, vt1 FULL OUTER JOIN vt0 ON 0.12897342012208957 CROSS JOIN vt2 ON CASE ((((vt1.c0)OR(1563017166)))OR(vt1.c1))  WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c1 THEN vt1.c0 ELSE t0.c0 END WHEN t0.c0 THEN ((vt2.c0)<>(vt1.c1)) WHEN CAST(vt1.c0 AS NUMERIC) THEN (- (vt0.c0)) END WHERE (HEX(DISTINCT ((vt0.c1) ISNULL))) UNION SELECT DISTINCT t0.c39, vt1.c1, t0.c0 FROM t0, vt1 FULL OUTER JOIN vt0 ON 0.12897342012208957 CROSS JOIN vt2 ON CASE ((((vt1.c0)OR(1563017166)))OR(vt1.c1))  WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c1 THEN vt1.c0 ELSE t0.c0 END WHEN t0.c0 THEN ((vt2.c0)<>(vt1.c1)) WHEN CAST(vt1.c0 AS NUMERIC) THEN (- (vt0.c0)) END WHERE ((NOT (HEX(DISTINCT ((vt0.c1) ISNULL))))) UNION SELECT DISTINCT t0.c39, vt1.c1, t0.c0 FROM t0, vt1 FULL OUTER JOIN vt0 ON 0.12897342012208957 CROSS JOIN vt2 ON CASE ((((vt1.c0)OR(1563017166)))OR(vt1.c1))  WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c1 THEN vt1.c0 ELSE t0.c0 END WHEN t0.c0 THEN ((vt2.c0)!=(vt1.c1)) WHEN CAST(vt1.c0 AS NUMERIC) THEN (- (vt0.c0)) END WHERE (((HEX(DISTINCT ((vt0.c1) ISNULL))) ISNULL));
SELECT DISTINCT t0.c39, vt1.c1, t0.c0 FROM t0, vt1 FULL OUTER JOIN vt0 ON 0.12897342012208957 CROSS JOIN vt2 ON CASE ((((vt1.c0)OR(1563017166)))OR(vt1.c1))  WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c1 THEN vt1.c0 ELSE t0.c0 END WHEN t0.c0 THEN ((vt2.c0)!=(vt1.c1)) WHEN CAST(vt1.c0 AS NUMERIC) THEN (- (vt0.c0)) END;
SELECT ALL vt0.c1, vt2.c0, vt0.c0 FROM vt2, t0, vt0 GROUP BY vt0.c1, vt2.c0, vt0.c0;
SELECT vt0.c1, vt2.c0, vt0.c0 FROM vt2, t0, vt0 WHERE (vt0.c0) GROUP BY vt0.c1, vt2.c0, vt0.c0 UNION SELECT vt0.c1, vt2.c0, vt0.c0 FROM vt2, t0, vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c1, vt2.c0, vt0.c0 UNION SELECT ALL vt0.c1, vt2.c0, vt0.c0 FROM vt2, t0, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c1, vt2.c0, vt0.c0;
SELECT ALL vt0.c1, vt2.c0, vt0.c0 FROM vt2, t0, vt0 GROUP BY vt0.c1, vt2.c0, vt0.c0;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (((((vt1.c0)) BETWEEN ((COUNT(vt1.c0))) AND ((vt1.c0))))%(GROUP_CONCAT(MIN(MAX(vt1.c0))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT ((((((vt1.c0)) BETWEEN ((COUNT(vt1.c0))) AND ((vt1.c0))))%(GROUP_CONCAT(MIN(MAX(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (((((((vt1.c0)) BETWEEN ((COUNT(vt1.c0))) AND ((vt1.c0))))%(GROUP_CONCAT(MIN(MAX(vt1.c0)))))) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt0, vt1;
SELECT vt1.c1, vt1.c0 FROM vt0, vt1 WHERE (x'a09c') UNION ALL SELECT vt1.c1, vt1.c0 FROM vt0, vt1 WHERE ((NOT (x'a09c'))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt0, vt1 WHERE (((x'a09c') ISNULL));
SELECT ALL vt1.c1, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt2, t0, vt1;
SELECT DISTINCT * FROM vt0, vt2, t0, vt1 WHERE (((x'8b3f') NOT BETWEEN (((4.47756097E8)&(vt1.c1))) AND (vt1.c1 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, vt2, t0, vt1 WHERE ((NOT (((x'8b3f') NOT BETWEEN (((4.47756097E8)&(vt1.c1))) AND (vt1.c1 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM vt0, vt2, t0, vt1 WHERE (((((x'8b3f') NOT BETWEEN (((4.47756097E8)&(vt1.c1))) AND (vt1.c1 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM vt0, vt2, t0, vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (((vt0.c0)/(vt0.c0))) AND (((0.2558445053082844) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((- (vt0.c0))) NOT BETWEEN (((vt0.c0)/(vt0.c0))) AND (((0.2558445053082844) NOTNULL)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((- (vt0.c0))) NOT BETWEEN (((vt0.c0)/(vt0.c0))) AND (((0.2558445053082844) NOTNULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((-2013304295) NOT BETWEEN (COUNT(vt2.c0)) AND (vt2.c0)) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (((-2013304295) NOT BETWEEN (COUNT(vt2.c0)) AND (vt2.c0)))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((((-2013304295) NOT BETWEEN (COUNT(vt2.c0)) AND (vt2.c0))) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((-2013304295) NOT BETWEEN (COUNT(vt2.c0)) AND (vt2.c0)) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (((-2013304295) NOT BETWEEN (COUNT(vt2.c0)) AND (vt2.c0)))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((((-2013304295) NOT BETWEEN (COUNT(vt2.c0)) AND (vt2.c0))) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt0.c0, vt1.c1, vt2.c0, vt1.c0 FROM vt2, vt0, vt1, t0;
SELECT ALL vt0.c0, vt1.c1, vt2.c0, vt1.c0 FROM vt2, vt0, vt1, t0 WHERE (((CASE t0.c39  WHEN t0.c0 THEN '0' WHEN t0.c39 THEN vt0.c1 WHEN vt1.c0 THEN t0.c0 END) NOT BETWEEN (1229506029 COLLATE RTRIM) AND (((vt0.c0)OR(vt2.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c1, vt2.c0, vt1.c0 FROM vt2, vt0, vt1, t0 WHERE ((NOT (((CASE t0.c39  WHEN t0.c0 THEN '0' WHEN t0.c39 THEN vt0.c1 WHEN vt1.c0 THEN t0.c0 END) NOT BETWEEN (1229506029 COLLATE RTRIM) AND (((vt0.c0)OR(vt2.c0))))))) UNION ALL SELECT ALL vt0.c0, vt1.c1, vt2.c0, vt1.c0 FROM vt2, vt0, vt1, t0 WHERE (((((CASE t0.c39  WHEN t0.c0 THEN '0' WHEN t0.c39 THEN vt0.c1 WHEN vt1.c0 THEN t0.c0 END) NOT BETWEEN (1229506029 COLLATE RTRIM) AND (((vt0.c0)OR(vt2.c0))))) ISNULL));
SELECT ALL vt0.c0, vt1.c1, vt2.c0, vt1.c0 FROM vt2, vt0, vt1, t0;
SELECT DISTINCT * FROM vt1, t0, vt0;
SELECT DISTINCT * FROM vt1, t0, vt0 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt0.c0)OR(vt1.c1)))))AND((~ (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1, t0, vt0 WHERE ((NOT (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt0.c0)OR(vt1.c1)))))AND((~ (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1, t0, vt0 WHERE (((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt0.c0)OR(vt1.c1)))))AND((~ (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, t0, vt0;
SELECT vt0.c0, vt2.c0, vt0.c1 FROM vt0, vt2 GROUP BY vt0.c0, vt2.c0, vt0.c1;
SELECT vt0.c0, vt2.c0, vt0.c1 FROM vt0, vt2 WHERE ((- ((vt2.c0 IN ())))) GROUP BY vt0.c0, vt2.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt2.c0, vt0.c1 FROM vt0, vt2 WHERE ((NOT ((- ((vt2.c0 IN ())))))) GROUP BY vt0.c0, vt2.c0, vt0.c1 UNION SELECT vt0.c0, vt2.c0, vt0.c1 FROM vt0, vt2 WHERE ((((- ((vt2.c0 IN ())))) ISNULL)) GROUP BY vt0.c0, vt2.c0, vt0.c1;
SELECT vt0.c0, vt2.c0, vt0.c1 FROM vt0, vt2 GROUP BY vt0.c0, vt2.c0, vt0.c1;
SELECT ALL vt1.c1, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c1, vt2.c0;
SELECT ALL vt1.c1, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c1, vt2.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL vt1.c1, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c1, vt2.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT vt1.c1, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c1, vt2.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT SUM(CAST(vt1.c0 AS NUMERIC)) FROM vt1, t0, vt2, vt0 ORDER BY CASE CASE -1421845982  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c39 WHEN t0.c0 THEN vt1.c0 END  WHEN (t0.c39 IN ()) THEN (~ (vt1.c1)) END  NULLS FIRST;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (DATE(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), (((vt0.c0))=((vt0.c1))), vt0.c0, ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), (~ (x'')))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (DATE(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), (((vt0.c0))==((vt0.c1))), vt0.c0, ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), (~ (x'')))))) UNION ALL SELECT * FROM vt0 WHERE (((DATE(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), (((vt0.c0))==((vt0.c1))), vt0.c0, ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), (~ (x'')))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((((((LTRIM(t0.c39, t0.c0))AND(((t0.c0)LIKE(t0.c39)))))OR((~ (t0.c39)))))OR('Zh81')))AND((- (t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((((((LTRIM(t0.c39, t0.c0))AND(((t0.c0)LIKE(t0.c39)))))OR((~ (t0.c39)))))OR('Zh81')))AND((- (t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((((((LTRIM(t0.c39, t0.c0))AND(((t0.c0)LIKE(t0.c39)))))OR((~ (t0.c39)))))OR('Zh81')))AND((- (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0 WHERE (CAST((((x'b93b'))>=((vt1.c1))) AS NUMERIC)) GROUP BY vt1.c0, vt1.c1, vt0.c0 UNION SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0 WHERE ((NOT (CAST((((x'b93b'))>=((vt1.c1))) AS NUMERIC)))) GROUP BY vt1.c0, vt1.c1, vt0.c0 UNION SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0 WHERE (((CAST((((x'b93b'))>=((vt1.c1))) AS NUMERIC)) ISNULL)) GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(COUNT(vt1.c1)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(COUNT(vt1.c1)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(COUNT(vt1.c1))) ISNULL);
SELECT * FROM vt1, vt2, t0, vt0;
SELECT ALL * FROM vt1, vt2, t0, vt0 WHERE ((((t0.c39)) BETWEEN ((vt2.c0)) AND ((vt1.c0))) COLLATE NOCASE) UNION ALL SELECT ALL * FROM vt1, vt2, t0, vt0 WHERE ((NOT ((((t0.c39)) BETWEEN ((vt2.c0)) AND ((vt1.c0))) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt1, vt2, t0, vt0 WHERE ((((((t0.c39)) BETWEEN ((vt2.c0)) AND ((vt1.c0))) COLLATE NOCASE) ISNULL));
SELECT * FROM vt1, vt2, t0, vt0;
SELECT DISTINCT t0.c0, vt2.c0, vt1.c0, vt1.c1, t0.c39 FROM vt2, vt1 INDEXED BY i43, t0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (x'af9f') GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT (x'af9f'))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((x'af9f') ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL t0.c39, vt1.c1, vt0.c1 FROM vt0 NOT INDEXED, vt2, vt1, t0 GROUP BY t0.c39, vt1.c1, vt0.c1;
SELECT t0.c39, vt1.c1, vt0.c1 FROM vt0, vt2, vt1, t0 GROUP BY t0.c39, vt1.c1, vt0.c1 HAVING (+ (MAX(vt0.c1))) UNION ALL SELECT t0.c39, vt1.c1, vt0.c1 FROM vt0, vt2, vt1, t0 GROUP BY t0.c39, vt1.c1, vt0.c1 HAVING (NOT ((+ (MAX(vt0.c1))))) UNION ALL SELECT t0.c39, vt1.c1, vt0.c1 FROM vt0, vt2, vt1, t0 GROUP BY t0.c39, vt1.c1, vt0.c1 HAVING (((+ (MAX(vt0.c1)))) ISNULL);
SELECT ALL t0.c39, vt1.c1, vt0.c1 FROM vt0 NOT INDEXED, vt2, vt1, t0 GROUP BY t0.c39, vt1.c1, vt0.c1;
SELECT t0.c39, vt1.c1, vt0.c1 FROM vt0, vt2, vt1, t0 GROUP BY t0.c39, vt1.c1, vt0.c1 HAVING (+ (MAX(vt0.c1))) UNION ALL SELECT t0.c39, vt1.c1, vt0.c1 FROM vt0, vt2, vt1, t0 GROUP BY t0.c39, vt1.c1, vt0.c1 HAVING (NOT ((+ (MAX(vt0.c1))))) UNION ALL SELECT t0.c39, vt1.c1, vt0.c1 FROM vt0, vt2, vt1, t0 GROUP BY t0.c39, vt1.c1, vt0.c1 HAVING (((+ (MAX(vt0.c1)))) ISNULL);
SELECT ALL t0.c39, vt1.c1, vt0.c1 FROM vt0 NOT INDEXED, vt2, vt1, t0 GROUP BY t0.c39, vt1.c1, vt0.c1;
SELECT vt0.c1 FROM vt1, vt0 NOT INDEXED;
SELECT vt0.c1 FROM vt1, vt0 WHERE (CAST(vt1.c1 AS NUMERIC)) UNION ALL SELECT ALL vt0.c1 FROM vt1, vt0 WHERE ((NOT (CAST(vt1.c1 AS NUMERIC)))) UNION ALL SELECT vt0.c1 FROM vt1, vt0 WHERE (((CAST(vt1.c1 AS NUMERIC)) ISNULL));
SELECT vt0.c1 FROM vt1, vt0 NOT INDEXED;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((~ (((((vt1.c1)AND(vt1.c1)))AND(vt1.c1))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((~ (((((vt1.c1)AND(vt1.c1)))AND(vt1.c1))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((~ (((((vt1.c1)AND(vt1.c1)))AND(vt1.c1))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt2.c0, vt1.c1 FROM vt2 LEFT OUTER JOIN vt1 ON '-837990362' CROSS JOIN t0 ON ((((t0.c0) IS TRUE))=(vt1.c0)) GROUP BY vt2.c0, vt1.c1;
SELECT vt2.c0, vt1.c1 FROM vt2 LEFT OUTER JOIN vt1 ON '-837990362' CROSS JOIN t0 ON ((((t0.c0) IS TRUE))==(vt1.c0)) WHERE (((((t0.c39)*(t0.c39))) BETWEEN (CAST(vt1.c0 AS BLOB)) AND ('8.'))) GROUP BY vt2.c0, vt1.c1 UNION SELECT vt2.c0, vt1.c1 FROM vt2 LEFT OUTER JOIN vt1 ON '-837990362' CROSS JOIN t0 ON ((((t0.c0) IS TRUE))=(vt1.c0)) WHERE ((NOT (((((t0.c39)*(t0.c39))) BETWEEN (CAST(vt1.c0 AS BLOB)) AND ('8.'))))) GROUP BY vt2.c0, vt1.c1 UNION SELECT vt2.c0, vt1.c1 FROM vt2 LEFT OUTER JOIN vt1 ON '-837990362' CROSS JOIN t0 ON ((((t0.c0) IS TRUE))==(vt1.c0)) WHERE (((((((t0.c39)*(t0.c39))) BETWEEN (CAST(vt1.c0 AS BLOB)) AND ('8.'))) ISNULL)) GROUP BY vt2.c0, vt1.c1;
SELECT ALL vt2.c0, vt1.c1 FROM vt2 LEFT OUTER JOIN vt1 ON '-837990362' CROSS JOIN t0 ON ((((t0.c0) IS TRUE))=(vt1.c0)) GROUP BY vt2.c0, vt1.c1;
SELECT vt2.c0 FROM t0, vt2 RIGHT OUTER JOIN vt0 ON t0.c0 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM t0, vt2 RIGHT OUTER JOIN vt0 ON t0.c0 GROUP BY vt2.c0 HAVING GROUP_CONCAT(COUNT(t0.c0)) UNION ALL SELECT ALL vt2.c0 FROM t0, vt2 RIGHT OUTER JOIN vt0 ON t0.c0 GROUP BY vt2.c0 HAVING (NOT (GROUP_CONCAT(COUNT(t0.c0)))) UNION ALL SELECT ALL vt2.c0 FROM t0, vt2 RIGHT OUTER JOIN vt0 ON t0.c0 GROUP BY vt2.c0 HAVING ((GROUP_CONCAT(COUNT(t0.c0))) ISNULL);
SELECT ALL vt1.c0, vt2.c0 FROM vt1 INNER JOIN vt2 ON (((vt1.c0))<>((((vt1.c0) IS FALSE))));
SELECT ALL vt1.c0, vt2.c0 FROM vt1 INNER JOIN vt2 ON (((vt1.c0))!=((((vt1.c0) IS FALSE)))) WHERE (((vt1.c0) NOT BETWEEN ((~ (vt1.c1))) AND ((vt2.c0 IN (vt1.c0, vt1.c1))))) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt1 INNER JOIN vt2 ON (((vt1.c0))<>((((vt1.c0) IS FALSE)))) WHERE ((NOT (((vt1.c0) NOT BETWEEN ((~ (vt1.c1))) AND ((vt2.c0 IN (vt1.c0, vt1.c1))))))) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt1 INNER JOIN vt2 ON (((vt1.c0))<>((((vt1.c0) IS FALSE)))) WHERE (((((vt1.c0) NOT BETWEEN ((~ (vt1.c1))) AND ((vt2.c0 IN (vt1.c0, vt1.c1))))) ISNULL));
SELECT ALL vt1.c0, vt2.c0 FROM vt1 INNER JOIN vt2 ON (((vt1.c0))<>((((vt1.c0) IS FALSE))));
SELECT DISTINCT * FROM vt0, vt2, t0, vt1;
SELECT DISTINCT * FROM vt0, vt2, t0, vt1 WHERE (t0.c39) UNION SELECT DISTINCT * FROM vt0, vt2, t0, vt1 WHERE ((NOT (t0.c39))) UNION SELECT DISTINCT * FROM vt0, vt2, t0, vt1 WHERE (((t0.c39) ISNULL));
SELECT DISTINCT * FROM vt0, vt2, t0, vt1;
SELECT vt1.c1 FROM vt2, t0, vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt2, t0, vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN t0.c39 ELSE vt1.c1 END AS BLOB)) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt2, t0, vt1 WHERE ((NOT (CAST(CASE WHEN vt1.c0 THEN t0.c39 ELSE vt1.c1 END AS BLOB)))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt2, t0, vt1 WHERE (((CAST(CASE WHEN vt1.c0 THEN t0.c39 ELSE vt1.c1 END AS BLOB)) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt2, t0, vt1 GROUP BY vt1.c1;
SELECT ALL t0.c0, vt0.c1, t0.c39, vt2.c0, vt0.c0 FROM t0, vt0 LEFT OUTER JOIN vt2 ON ((((vt2.c0)>=('860145683'))) NOT BETWEEN (((t0.c39) NOTNULL)) AND (((t0.c39) IS FALSE))) GROUP BY t0.c0, vt0.c1, t0.c39, vt2.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c1, t0.c39, vt2.c0, vt0.c0 FROM t0, vt0 LEFT OUTER JOIN vt2 ON ((((vt2.c0)>=('860145683'))) NOT BETWEEN (((t0.c39) NOTNULL)) AND (((t0.c39) IS FALSE))) GROUP BY t0.c0, vt0.c1, t0.c39, vt2.c0, vt0.c0 HAVING ((COUNT(COUNT(*))) BETWEEN (0.19685712476534212) AND (MAX(MIN(TOTAL(t0.c39))))) UNION ALL SELECT t0.c0, vt0.c1, t0.c39, vt2.c0, vt0.c0 FROM t0, vt0 LEFT OUTER JOIN vt2 ON ((((vt2.c0)>=('860145683'))) NOT BETWEEN (((t0.c39) NOTNULL)) AND (((t0.c39) IS FALSE))) GROUP BY t0.c0, vt0.c1, t0.c39, vt2.c0, vt0.c0 HAVING (NOT (((COUNT(COUNT(*))) BETWEEN (0.19685712476534212) AND (MAX(MIN(TOTAL(t0.c39))))))) UNION ALL SELECT ALL t0.c0, vt0.c1, t0.c39, vt2.c0, vt0.c0 FROM t0, vt0 LEFT OUTER JOIN vt2 ON ((((vt2.c0)>=('860145683'))) NOT BETWEEN (((t0.c39) NOTNULL)) AND (((t0.c39) IS FALSE))) GROUP BY t0.c0, vt0.c1, t0.c39, vt2.c0, vt0.c0 HAVING ((((COUNT(COUNT(*))) BETWEEN (0.19685712476534212) AND (MAX(MIN(TOTAL(t0.c39)))))) ISNULL);
SELECT ALL * FROM vt1, t0, vt0, vt2;
SELECT ALL * FROM vt1, t0, vt0, vt2 WHERE (-1547608881) UNION ALL SELECT ALL * FROM vt1, t0, vt0, vt2 WHERE ((NOT (-1547608881))) UNION ALL SELECT ALL * FROM vt1, t0, vt0, vt2 WHERE (((-1547608881) ISNULL));
SELECT ALL * FROM vt1, t0, vt0, vt2;
SELECT DISTINCT * FROM t0, vt0 INDEXED BY i43, vt2;
SELECT vt0.c1 FROM vt1, vt2 INNER JOIN t0 ON ((((CASE WHEN vt2.c0 THEN vt0.c1 END)AND(DATE(NULL, t0.c39, t0.c0))))AND(((((vt1.c1)OR(vt2.c0)))AND('447756097')))) INNER JOIN vt0 ON (((vt2.c0 IN ()))AND(t0.c0)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt1, vt2 INNER JOIN t0 ON ((((CASE WHEN vt2.c0 THEN vt0.c1 END)AND(DATE(NULL, t0.c39, t0.c0))))AND(((((vt1.c1)OR(vt2.c0)))AND('447756097')))) INNER JOIN vt0 ON (((vt2.c0 IN ()))AND(t0.c0)) WHERE ((((vt2.c0) NOT BETWEEN (vt1.c0) AND (t0.c39)) IN (vt2.c0, MIN(vt2.c0, NULL)))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt1, vt2 INNER JOIN t0 ON ((((CASE WHEN vt2.c0 THEN vt0.c1 END)AND(DATE(NULL, t0.c39, t0.c0))))AND(((((vt1.c1)OR(vt2.c0)))AND('447756097')))) INNER JOIN vt0 ON (((vt2.c0 IN ()))AND(t0.c0)) WHERE ((NOT ((((vt2.c0) NOT BETWEEN (vt1.c0) AND (t0.c39)) IN (vt2.c0, MIN(vt2.c0, NULL)))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt1, vt2 INNER JOIN t0 ON ((((CASE WHEN vt2.c0 THEN vt0.c1 END)AND(DATE(NULL, t0.c39, t0.c0))))AND(((((vt1.c1)OR(vt2.c0)))AND('447756097')))) INNER JOIN vt0 ON (((vt2.c0 IN ()))AND(t0.c0)) WHERE ((((((vt2.c0) NOT BETWEEN (vt1.c0) AND (t0.c39)) IN (vt2.c0, MIN(vt2.c0, NULL)))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt1, vt2 INNER JOIN t0 ON ((((CASE WHEN vt2.c0 THEN vt0.c1 END)AND(DATE(NULL, t0.c39, t0.c0))))AND(((((vt1.c1)OR(vt2.c0)))AND('447756097')))) INNER JOIN vt0 ON (((vt2.c0 IN ()))AND(t0.c0)) GROUP BY vt0.c1;
SELECT vt2.c0, t0.c0 FROM vt2, t0, vt0 GROUP BY vt2.c0, t0.c0;
SELECT vt2.c0, t0.c0 FROM vt2, t0, vt0 GROUP BY vt2.c0, t0.c0 HAVING SUM(MAX(t0.c0)) UNION ALL SELECT vt2.c0, t0.c0 FROM vt2, t0, vt0 GROUP BY vt2.c0, t0.c0 HAVING (NOT (SUM(MAX(t0.c0)))) UNION ALL SELECT ALL vt2.c0, t0.c0 FROM vt2, t0, vt0 GROUP BY vt2.c0, t0.c0 HAVING ((SUM(MAX(t0.c0))) ISNULL);
SELECT ALL * FROM vt1, vt2;
SELECT ALL * FROM vt1, vt2 WHERE (CAST(((vt2.c0)>>(vt2.c0)) AS TEXT)) UNION ALL SELECT * FROM vt1, vt2 WHERE ((NOT (CAST(((vt2.c0)>>(vt2.c0)) AS TEXT)))) UNION ALL SELECT ALL * FROM vt1, vt2 WHERE (((CAST(((vt2.c0)>>(vt2.c0)) AS TEXT)) ISNULL));
SELECT ALL * FROM vt1, vt2;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((CAST(t0.c0 AS REAL) IN ())) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((CAST(t0.c0 AS REAL) IN ())))) UNION SELECT DISTINCT * FROM t0 WHERE ((((CAST(t0.c0 AS REAL) IN ())) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((~ ((((vt0.c0))<((0.6921085163671741)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((~ ((((vt0.c0))<((0.6921085163671741)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((~ ((((vt0.c0))<((0.6921085163671741)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING MIN((vt2.c0 IN (GROUP_CONCAT('wSkd1hLo^')))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (MIN((vt2.c0 IN (GROUP_CONCAT('wSkd1hLo^')))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((MIN((vt2.c0 IN (GROUP_CONCAT('wSkd1hLo^'))))) ISNULL);
SELECT ALL * FROM vt2;
SELECT ALL * FROM vt2 WHERE (((LIKELIHOOD(DISTINCT vt2.c0, 0.8724862881711236))+(CAST(vt2.c0 AS NUMERIC)))) UNION ALL SELECT * FROM vt2 WHERE ((NOT (((LIKELIHOOD(DISTINCT vt2.c0, 0.8724862881711236))+(CAST(vt2.c0 AS NUMERIC)))))) UNION ALL SELECT * FROM vt2 WHERE (((((LIKELIHOOD(DISTINCT vt2.c0, 0.8724862881711236))+(CAST(vt2.c0 AS NUMERIC)))) ISNULL));
SELECT ALL * FROM vt2;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c1 COLLATE BINARY) BETWEEN (((((vt1.c0)OR(vt1.c1)))OR(vt1.c1))) AND (((-53247816)!=(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((vt1.c1 COLLATE BINARY) BETWEEN (((((vt1.c0)OR(vt1.c1)))OR(vt1.c1))) AND (((-53247816)!=(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c1 COLLATE BINARY) BETWEEN (((((vt1.c0)OR(vt1.c1)))OR(vt1.c1))) AND (((-53247816)!=(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL t0.c0, vt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON x'' INNER JOIN vt2 ON CASE WHEN (+ (t0.c39)) THEN t0.c0 COLLATE NOCASE WHEN vt0.c0 THEN ((((vt0.c1)OR(t0.c0)))OR(vt0.c0)) WHEN t0.c39 THEN (+ (vt0.c0)) ELSE ((t0.c0)>=(t0.c0)) END GROUP BY t0.c0, vt0.c1;
SELECT ALL t0.c0, vt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON x'' INNER JOIN vt2 ON CASE WHEN (+ (t0.c39)) THEN t0.c0 COLLATE NOCASE WHEN vt0.c0 THEN ((((vt0.c1)OR(t0.c0)))OR(vt0.c0)) WHEN t0.c39 THEN (+ (vt0.c0)) ELSE ((t0.c0)>=(t0.c0)) END WHERE (((t0.c0 COLLATE NOCASE)LIKE(CAST(t0.c0 AS BLOB)))) GROUP BY t0.c0, vt0.c1 UNION SELECT ALL t0.c0, vt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON x'' INNER JOIN vt2 ON CASE WHEN (+ (t0.c39)) THEN t0.c0 COLLATE NOCASE WHEN vt0.c0 THEN ((((vt0.c1)OR(t0.c0)))OR(vt0.c0)) WHEN t0.c39 THEN (+ (vt0.c0)) ELSE ((t0.c0)>=(t0.c0)) END WHERE ((NOT (((t0.c0 COLLATE NOCASE)LIKE(CAST(t0.c0 AS BLOB)))))) GROUP BY t0.c0, vt0.c1 UNION SELECT t0.c0, vt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON x'' INNER JOIN vt2 ON CASE WHEN (+ (t0.c39)) THEN t0.c0 COLLATE NOCASE WHEN vt0.c0 THEN ((((vt0.c1)OR(t0.c0)))OR(vt0.c0)) WHEN t0.c39 THEN (+ (vt0.c0)) ELSE ((t0.c0)>=(t0.c0)) END WHERE (((((t0.c0 COLLATE NOCASE)LIKE(CAST(t0.c0 AS BLOB)))) ISNULL)) GROUP BY t0.c0, vt0.c1;
SELECT ALL t0.c0, vt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON x'' INNER JOIN vt2 ON CASE WHEN (+ (t0.c39)) THEN t0.c0 COLLATE NOCASE WHEN vt0.c0 THEN ((((vt0.c1)OR(t0.c0)))OR(vt0.c0)) WHEN t0.c39 THEN (+ (vt0.c0)) ELSE ((t0.c0)>=(t0.c0)) END GROUP BY t0.c0, vt0.c1;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (LIKELY(vt2.c0))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT ((NOT (LIKELY(vt2.c0))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((NOT (LIKELY(vt2.c0)))) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (LIKELY(vt2.c0))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT ((NOT (LIKELY(vt2.c0))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((NOT (LIKELY(vt2.c0)))) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL * FROM t0, vt0, vt2;
SELECT ALL * FROM t0, vt0, vt2 WHERE ((- (CAST(x'374e' AS TEXT)))) UNION ALL SELECT ALL * FROM t0, vt0, vt2 NOT INDEXED WHERE ((NOT ((- (CAST(x'374e' AS TEXT)))))) UNION ALL SELECT ALL * FROM t0, vt0, vt2 WHERE ((((- (CAST(x'374e' AS TEXT)))) ISNULL));
SELECT ALL * FROM t0, vt0, vt2;
SELECT DISTINCT * FROM vt1, vt2, t0;
SELECT DISTINCT * FROM vt1, vt2, t0 WHERE ((- (CASE WHEN vt2.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c1 THEN t0.c39 END))) UNION SELECT DISTINCT * FROM vt1, vt2, t0 WHERE ((NOT ((- (CASE WHEN vt2.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c1 THEN t0.c39 END))))) UNION SELECT DISTINCT * FROM vt1, vt2, t0 WHERE ((((- (CASE WHEN vt2.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c1 THEN t0.c39 END))) ISNULL));
SELECT DISTINCT * FROM vt1, vt2, t0;
SELECT ALL vt0.c1, t0.c0, vt0.c0, vt1.c1, t0.c39 FROM vt0, vt1, t0, vt2 GROUP BY vt0.c1, t0.c0, vt0.c0, vt1.c1, t0.c39;
SELECT ALL vt0.c1, t0.c0, vt0.c0, vt1.c1, t0.c39 FROM vt0, vt1, t0, vt2 WHERE ((NOT ((NOT (vt0.c0))))) GROUP BY vt0.c1, t0.c0, vt0.c0, vt1.c1, t0.c39 UNION SELECT vt0.c1, t0.c0, vt0.c0, vt1.c1, t0.c39 FROM vt0, vt1, t0, vt2 WHERE ((NOT ((NOT ((NOT (vt0.c0))))))) GROUP BY vt0.c1, t0.c0, vt0.c0, vt1.c1, t0.c39 UNION SELECT ALL vt0.c1, t0.c0, vt0.c0, vt1.c1, t0.c39 FROM vt0, vt1, t0, vt2 WHERE ((((NOT ((NOT (vt0.c0))))) ISNULL)) GROUP BY vt0.c1, t0.c0, vt0.c0, vt1.c1, t0.c39;
SELECT ALL vt0.c1, t0.c0, vt0.c0, vt1.c1, t0.c39 FROM vt0, vt1, t0, vt2 GROUP BY vt0.c1, t0.c0, vt0.c0, vt1.c1, t0.c39;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t0.c39, vt2.c0, vt1.c1, vt0.c0 FROM vt1, vt2, vt0 CROSS JOIN t0 ON '292665038';
SELECT ALL t0.c39, vt2.c0, vt1.c1, vt0.c0 FROM vt1, vt2, vt0 CROSS JOIN t0 ON '292665038' WHERE (t0.c0 COLLATE BINARY) UNION ALL SELECT t0.c39, vt2.c0, vt1.c1, vt0.c0 FROM vt1, vt2, vt0 NOT INDEXED CROSS JOIN t0 ON '292665038' WHERE ((NOT (t0.c0 COLLATE BINARY))) UNION ALL SELECT ALL t0.c39, vt2.c0, vt1.c1, vt0.c0 FROM vt1, vt2, vt0 CROSS JOIN t0 ON '292665038' WHERE (((t0.c0 COLLATE BINARY) ISNULL));
SELECT ALL t0.c39, vt2.c0, vt1.c1, vt0.c0 FROM vt1, vt2, vt0 CROSS JOIN t0 ON '292665038';
SELECT DISTINCT vt1.c1, t0.c0, vt2.c0 FROM t0 RIGHT OUTER JOIN vt1 ON LOWER(DISTINCT ((vt0.c1) IS FALSE)) LEFT OUTER JOIN vt2 ON t0.c39 FULL OUTER JOIN vt0 ON (((vt0.c1 IN ())) NOT NULL);
SELECT t0.c39, t0.c0, vt2.c0 FROM vt2, t0 GROUP BY t0.c39, t0.c0, vt2.c0;
SELECT ALL t0.c39, t0.c0, vt2.c0 FROM vt2, t0 WHERE (((x'beaf') NOT BETWEEN ((((''))<((t0.c39)))) AND (((vt2.c0)=(vt2.c0))))) GROUP BY t0.c39, t0.c0, vt2.c0 UNION SELECT ALL t0.c39, t0.c0, vt2.c0 FROM vt2, t0 WHERE ((NOT (((x'beaf') NOT BETWEEN ((((''))<((t0.c39)))) AND (((vt2.c0)=(vt2.c0))))))) GROUP BY t0.c39, t0.c0, vt2.c0 UNION SELECT ALL t0.c39, t0.c0, vt2.c0 FROM vt2, t0 WHERE (((((x'beaf') NOT BETWEEN ((((''))<((t0.c39)))) AND (((vt2.c0)==(vt2.c0))))) ISNULL)) GROUP BY t0.c39, t0.c0, vt2.c0;
SELECT t0.c39, t0.c0, vt2.c0 FROM vt2, t0 GROUP BY t0.c39, t0.c0, vt2.c0;
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING TOTAL(CAST(COUNT(-1333309363) AS BLOB)) UNION ALL SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (NOT (TOTAL(CAST(COUNT(-1333309363) AS BLOB)))) UNION ALL SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING ((TOTAL(CAST(COUNT(-1333309363) AS BLOB))) ISNULL);
SELECT * FROM vt0, vt2, t0;
SELECT * FROM vt0, vt2, t0 WHERE (((((vt0.c0)%(t0.c39)))LIKE(vt0.c1))) UNION ALL SELECT * FROM vt0, vt2, t0 WHERE ((NOT (((((vt0.c0)%(t0.c39)))LIKE(vt0.c1))))) UNION ALL SELECT ALL * FROM vt0, vt2, t0 WHERE (((((((vt0.c0)%(t0.c39)))LIKE(vt0.c1))) ISNULL));
SELECT * FROM vt0, vt2, t0;
SELECT DISTINCT vt2.c0 FROM vt0, vt1, t0, vt2;
SELECT DISTINCT vt2.c0 FROM vt0, vt1, t0, vt2 WHERE ((('-421503648')GLOB(SQLITE_VERSION()))) UNION SELECT DISTINCT vt2.c0 FROM vt0, vt1, t0, vt2 WHERE ((NOT ((('-421503648')GLOB(SQLITE_VERSION()))))) UNION SELECT DISTINCT vt2.c0 FROM vt0, vt1, t0, vt2 NOT INDEXED WHERE ((((('-421503648')GLOB(SQLITE_VERSION()))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt0, vt1, t0, vt2;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0 WHERE ((vt1.c1 IN ()) COLLATE RTRIM) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt1, t0 WHERE ((NOT ((vt1.c1 IN ()) COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt1, t0 WHERE ((((vt1.c1 IN ()) COLLATE RTRIM) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT ALL vt1.c0, t0.c39, vt0.c1, vt1.c1, vt0.c0, t0.c0, vt2.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST((((vt0.c1))!=((t0.c0))) AS NUMERIC) FULL OUTER JOIN vt2 ON (~ (COALESCE(DISTINCT vt0.c1, -327526448))) FULL OUTER JOIN t0 ON CASE WHEN ((vt0.c1)||(t0.c0)) THEN (((t0.c0))=((vt0.c0))) WHEN vt0.c0 THEN ((vt1.c1)==(vt1.c0)) WHEN ((vt0.c0)<<(vt0.c1)) THEN ((vt0.c0)*(vt2.c0)) END GROUP BY vt1.c0, t0.c39, vt0.c1, vt1.c1, vt0.c0, t0.c0, vt2.c0;
SELECT vt1.c0, t0.c0, vt1.c1, vt0.c0, vt2.c0, vt0.c1, t0.c39 FROM vt2, t0, vt0, vt1;
SELECT vt1.c0, t0.c0, vt1.c1, vt0.c0, vt2.c0, vt0.c1, t0.c39 FROM vt2, t0, vt0, vt1 WHERE (CASE WHEN (((vt2.c0)) BETWEEN ((vt0.c0)) AND (('-686288799'))) THEN ((((vt1.c1)AND(vt2.c0)))AND(vt1.c0)) END) UNION ALL SELECT vt1.c0, t0.c0, vt1.c1, vt0.c0, vt2.c0, vt0.c1, t0.c39 FROM vt2, t0, vt0, vt1 WHERE ((NOT (CASE WHEN (((vt2.c0)) BETWEEN ((vt0.c0)) AND (('-686288799'))) THEN ((((vt1.c1)AND(vt2.c0)))AND(vt1.c0)) END))) UNION ALL SELECT vt1.c0, t0.c0, vt1.c1, vt0.c0, vt2.c0, vt0.c1, t0.c39 FROM vt2, t0, vt0, vt1 WHERE (((CASE WHEN (((vt2.c0)) BETWEEN ((vt0.c0)) AND (('-686288799'))) THEN ((((vt1.c1)AND(vt2.c0)))AND(vt1.c0)) END) ISNULL));
SELECT vt1.c0, t0.c0, vt1.c1, vt0.c0, vt2.c0, vt0.c1, t0.c39 FROM vt2, t0, vt0, vt1;
SELECT DISTINCT vt1.c0, t0.c39, t0.c0 FROM vt2, vt1, t0 NOT INDEXED;
SELECT DISTINCT vt1.c0, t0.c39, t0.c0 FROM vt2, vt1, t0 WHERE ((((UPPER(t0.c0)))<=((0.29946397846325934)))) UNION SELECT DISTINCT vt1.c0, t0.c39, t0.c0 FROM vt2, vt1, t0 WHERE ((NOT ((((UPPER(t0.c0)))<=((0.29946397846325934)))))) UNION SELECT DISTINCT vt1.c0, t0.c39, t0.c0 FROM vt2, vt1, t0 WHERE ((((((UPPER(t0.c0)))<=((0.29946397846325934)))) ISNULL));
SELECT DISTINCT vt1.c0, t0.c39, t0.c0 FROM vt2, vt1, t0 NOT INDEXED;
SELECT t0.c39 FROM vt0, vt2, vt1, t0 NOT INDEXED GROUP BY t0.c39;
SELECT ALL t0.c39 FROM vt0, vt2, vt1, t0 WHERE (x'') GROUP BY t0.c39 UNION SELECT ALL t0.c39 FROM vt0, vt2, vt1, t0 WHERE ((NOT (x''))) GROUP BY t0.c39 UNION SELECT t0.c39 FROM vt0, vt2, vt1, t0 WHERE (((x'') ISNULL)) GROUP BY t0.c39;
SELECT t0.c39 FROM vt0, vt2, vt1, t0 NOT INDEXED GROUP BY t0.c39;
SELECT vt1.c0, vt0.c1, vt1.c1, vt0.c0, t0.c0 FROM vt1, t0, vt2, vt0 GROUP BY vt1.c0, vt0.c1, vt1.c1, vt0.c0, t0.c0;
SELECT ALL vt1.c0, vt0.c1, vt1.c1, vt0.c0, t0.c0 FROM vt1, t0, vt2, vt0 GROUP BY vt1.c0, vt0.c1, vt1.c1, vt0.c0, t0.c0 HAVING (+ (MIN(vt1.c0))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt1.c1, vt0.c0, t0.c0 FROM vt1, t0, vt2, vt0 GROUP BY vt1.c0, vt0.c1, vt1.c1, vt0.c0, t0.c0 HAVING (NOT ((+ (MIN(vt1.c0))))) UNION ALL SELECT vt1.c0, vt0.c1, vt1.c1, vt0.c0, t0.c0 FROM vt1, t0, vt2, vt0 GROUP BY vt1.c0, vt0.c1, vt1.c1, vt0.c0, t0.c0 HAVING (((+ (MIN(vt1.c0)))) ISNULL);
SELECT vt1.c0, vt0.c1, vt1.c1, vt0.c0, t0.c0 FROM vt1, t0, vt2, vt0 GROUP BY vt1.c0, vt0.c1, vt1.c1, vt0.c0, t0.c0;
SELECT ALL vt1.c0, vt0.c1, vt1.c1, vt0.c0, t0.c0 FROM vt1, t0, vt2, vt0 GROUP BY vt1.c0, vt0.c1, vt1.c1, vt0.c0, t0.c0 HAVING (+ (MIN(vt1.c0))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt1.c1, vt0.c0, t0.c0 FROM vt1, t0, vt2, vt0 GROUP BY vt1.c0, vt0.c1, vt1.c1, vt0.c0, t0.c0 HAVING (NOT ((+ (MIN(vt1.c0))))) UNION ALL SELECT vt1.c0, vt0.c1, vt1.c1, vt0.c0, t0.c0 FROM vt1, t0, vt2, vt0 GROUP BY vt1.c0, vt0.c1, vt1.c1, vt0.c0, t0.c0 HAVING (((+ (MIN(vt1.c0)))) ISNULL);
SELECT vt1.c0, vt0.c1, vt1.c1, vt0.c0, t0.c0 FROM vt1, t0, vt2, vt0 GROUP BY vt1.c0, vt0.c1, vt1.c1, vt0.c0, t0.c0;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt2 ON 0.4096386274057491;
SELECT * FROM vt1 RIGHT OUTER JOIN vt2 ON 0.4096386274057491 WHERE (CASE ((vt1.c1) BETWEEN (vt1.c1) AND (vt2.c0))  WHEN vt2.c0 COLLATE BINARY THEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN CASE WHEN vt1.c0 THEN vt2.c0 END THEN (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, x'', vt1.c1))) WHEN x'ec47' THEN vt2.c0 WHEN ((vt1.c0)<(0.21114465720175601)) THEN vt1.c1 COLLATE RTRIM WHEN x'' THEN '-1071518843' ELSE ((vt1.c1)-(vt1.c1)) END) UNION ALL SELECT * FROM vt1 RIGHT OUTER JOIN vt2 ON 0.4096386274057491 WHERE ((NOT (CASE ((vt1.c1) BETWEEN (vt1.c1) AND (vt2.c0))  WHEN vt2.c0 COLLATE BINARY THEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN CASE WHEN vt1.c0 THEN vt2.c0 END THEN (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, x'', vt1.c1))) WHEN x'ec47' THEN vt2.c0 WHEN ((vt1.c0)<(0.21114465720175601)) THEN vt1.c1 COLLATE RTRIM WHEN x'' THEN '-1071518843' ELSE ((vt1.c1)-(vt1.c1)) END))) UNION ALL SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt2 ON 0.4096386274057491 WHERE (((CASE ((vt1.c1) BETWEEN (vt1.c1) AND (vt2.c0))  WHEN vt2.c0 COLLATE BINARY THEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN CASE WHEN vt1.c0 THEN vt2.c0 END THEN (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, x'', vt1.c1))) WHEN x'ec47' THEN vt2.c0 WHEN ((vt1.c0)<(0.21114465720175601)) THEN vt1.c1 COLLATE RTRIM WHEN x'' THEN '-1071518843' ELSE ((vt1.c1)-(vt1.c1)) END) ISNULL));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt2 ON 0.4096386274057491;
SELECT DISTINCT vt1.c1, t0.c39, vt1.c0, vt0.c1, t0.c0, vt2.c0 FROM t0, vt0, vt2 INNER JOIN vt1 ON ((NULLIF(t0.c0, t0.c0)) BETWEEN (0.35587979195452857) AND (((vt2.c0)>(t0.c0))));
SELECT DISTINCT vt1.c1, t0.c39, vt1.c0, vt0.c1, t0.c0, vt2.c0 FROM t0, vt0, vt2 INNER JOIN vt1 ON ((NULLIF(t0.c0, t0.c0)) BETWEEN (0.35587979195452857) AND (((vt2.c0)>(t0.c0)))) WHERE (((CAST(t0.c0 AS INTEGER))|(CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt2.c0 ELSE vt1.c0 END))) UNION SELECT DISTINCT vt1.c1, t0.c39, vt1.c0, vt0.c1, t0.c0, vt2.c0 FROM t0, vt0, vt2 INNER JOIN vt1 ON ((NULLIF(t0.c0, t0.c0)) BETWEEN (0.35587979195452857) AND (((vt2.c0)>(t0.c0)))) WHERE ((NOT (((CAST(t0.c0 AS INTEGER))|(CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt2.c0 ELSE vt1.c0 END))))) UNION SELECT DISTINCT vt1.c1, t0.c39, vt1.c0, vt0.c1, t0.c0, vt2.c0 FROM t0, vt0, vt2 INNER JOIN vt1 ON ((NULLIF(t0.c0, t0.c0)) BETWEEN (0.35587979195452857) AND (((vt2.c0)>(t0.c0)))) WHERE (((((CAST(t0.c0 AS INTEGER))|(CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt2.c0 ELSE vt1.c0 END))) ISNULL));
SELECT DISTINCT vt1.c1, t0.c39, vt1.c0, vt0.c1, t0.c0, vt2.c0 FROM t0, vt0, vt2 INNER JOIN vt1 ON ((NULLIF(t0.c0, t0.c0)) BETWEEN (0.35587979195452857) AND (((vt2.c0)>(t0.c0))));
SELECT t0.c0, vt1.c1 FROM vt1, t0 GROUP BY t0.c0, vt1.c1;
SELECT ALL t0.c0, vt1.c1 FROM vt1, t0 WHERE (TYPEOF(CAST(vt1.c0 AS TEXT))) GROUP BY t0.c0, vt1.c1 UNION SELECT ALL t0.c0, vt1.c1 FROM vt1, t0 WHERE ((NOT (TYPEOF(CAST(vt1.c0 AS TEXT))))) GROUP BY t0.c0, vt1.c1 UNION SELECT ALL t0.c0, vt1.c1 FROM vt1, t0 WHERE (((TYPEOF(CAST(vt1.c0 AS TEXT))) ISNULL)) GROUP BY t0.c0, vt1.c1;
SELECT t0.c0, vt1.c1 FROM vt1, t0 GROUP BY t0.c0, vt1.c1;
SELECT ALL vt1.c1, vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c1, vt0.c0;
SELECT vt1.c1, vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c1, vt0.c0 HAVING SUM(TOTAL(COUNT(*))) UNION ALL SELECT ALL vt1.c1, vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c1, vt0.c0 HAVING (NOT (SUM(TOTAL(COUNT(*))))) UNION ALL SELECT ALL vt1.c1, vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c1, vt0.c0 HAVING ((SUM(TOTAL(COUNT(*)))) ISNULL);
SELECT ALL vt0.c0, vt2.c0 FROM vt0 CROSS JOIN vt2 ON (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt2.c0) AND (vt0.c1)), ((vt0.c1) ISNULL), vt0.c0)) AND ((((vt0.c0)>(vt2.c0)), ((vt0.c1)<<(vt2.c0)), (~ (vt2.c0)))));
SELECT vt0.c0, vt2.c0 FROM vt0 CROSS JOIN vt2 ON (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt2.c0) AND (vt0.c1)), ((vt0.c1) ISNULL), vt0.c0)) AND ((((vt0.c0)>(vt2.c0)), ((vt0.c1)<<(vt2.c0)), (~ (vt2.c0))))) WHERE ((((NOT (vt2.c0))) NOT BETWEEN (((vt0.c0)AND(vt0.c0))) AND ('AP8UyLd' COLLATE NOCASE))) UNION ALL SELECT ALL vt0.c0, vt2.c0 FROM vt0 CROSS JOIN vt2 ON (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt2.c0) AND (vt0.c1)), ((vt0.c1) ISNULL), vt0.c0)) AND ((((vt0.c0)>(vt2.c0)), ((vt0.c1)<<(vt2.c0)), (~ (vt2.c0))))) WHERE ((NOT ((((NOT (vt2.c0))) NOT BETWEEN (((vt0.c0)AND(vt0.c0))) AND ('AP8UyLd' COLLATE NOCASE))))) UNION ALL SELECT vt0.c0, vt2.c0 FROM vt0 CROSS JOIN vt2 ON (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt2.c0) AND (vt0.c1)), ((vt0.c1) ISNULL), vt0.c0)) AND ((((vt0.c0)>(vt2.c0)), ((vt0.c1)<<(vt2.c0)), (~ (vt2.c0))))) WHERE ((((((NOT (vt2.c0))) NOT BETWEEN (((vt0.c0)AND(vt0.c0))) AND ('AP8UyLd' COLLATE NOCASE))) ISNULL));
SELECT ALL vt0.c0, vt2.c0 FROM vt0 CROSS JOIN vt2 ON (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt2.c0) AND (vt0.c1)), ((vt0.c1) ISNULL), vt0.c0)) AND ((((vt0.c0)>(vt2.c0)), ((vt0.c1)<<(vt2.c0)), (~ (vt2.c0)))));
SELECT DISTINCT vt0.c1, t0.c39, t0.c0, vt2.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((CASE vt2.c0  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'7b7f' THEN t0.c39 WHEN vt0.c1 THEN vt0.c1 WHEN vt2.c0 THEN t0.c39 ELSE vt0.c1 END)LIKE((- (t0.c39)))) INNER JOIN vt2 ON ((((((((((((((((((vt0.c0)GLOB(0.4897283411956129)))OR(CASE t0.c39  WHEN t0.c39 THEN vt0.c1 END)))AND(((vt0.c1)AND(t0.c39)))))OR(CAST(t0.c0 AS INTEGER))))AND(((((((((t0.c39)AND(vt0.c0)))OR(vt2.c0)))AND(t0.c39)))OR(vt0.c0)))))OR(vt2.c0)))AND(vt0.c0 COLLATE RTRIM)))OR(1563017166)))OR((((t0.c39)) NOT BETWEEN ((t0.c39)) AND ((vt2.c0)))));
SELECT ALL vt0.c0, vt0.c1, vt1.c0, vt1.c1 FROM vt1, vt2, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt1.c1;
SELECT ALL vt0.c0, vt0.c1, vt1.c0, vt1.c1 FROM vt1, vt2, vt0 WHERE (CASE ((vt0.c0)IS NOT(vt1.c0))  WHEN (NOT (vt1.c0)) THEN ((vt1.c0) NOTNULL) ELSE ((vt1.c1) NOT NULL) END) GROUP BY vt0.c0, vt0.c1, vt1.c0, vt1.c1 UNION SELECT ALL vt0.c0, vt0.c1, vt1.c0, vt1.c1 FROM vt1, vt2, vt0 WHERE ((NOT (CASE ((vt0.c0)IS NOT(vt1.c0))  WHEN (NOT (vt1.c0)) THEN ((vt1.c0) NOTNULL) ELSE ((vt1.c1) NOT NULL) END))) GROUP BY vt0.c0, vt0.c1, vt1.c0, vt1.c1 UNION SELECT vt0.c0, vt0.c1, vt1.c0, vt1.c1 FROM vt1, vt2, vt0 WHERE (((CASE ((vt0.c0)IS NOT(vt1.c0))  WHEN (NOT (vt1.c0)) THEN ((vt1.c0) NOTNULL) ELSE ((vt1.c1) NOT NULL) END) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt1.c0, vt1.c1;
SELECT ALL vt0.c0, vt0.c1, vt1.c0, vt1.c1 FROM vt1, vt2, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt1.c1;
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING COUNT(GROUP_CONCAT(TOTAL(GROUP_CONCAT(AVG(GROUP_CONCAT(t0.c39)))))) UNION ALL SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(GROUP_CONCAT(TOTAL(GROUP_CONCAT(AVG(GROUP_CONCAT(t0.c39)))))))) UNION ALL SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING ((COUNT(GROUP_CONCAT(TOTAL(GROUP_CONCAT(AVG(GROUP_CONCAT(t0.c39))))))) ISNULL);
SELECT MIN(((((((((json(t0.c0))AND((x'd4cb' IN (NULL)))))OR(((0.7191388548887642) ISNULL))))OR(0xffffffffa6f4382a)))OR((vt2.c0 IN (vt2.c0))))) FROM vt0, vt2, vt1, t0;
SELECT ALL * FROM vt2;
SELECT ALL * FROM vt2 WHERE (((x'a290')|(CAST(0.11322760090610495 AS TEXT)))) UNION ALL SELECT ALL * FROM vt2 WHERE ((NOT (((x'a290')|(CAST(0.11322760090610495 AS TEXT)))))) UNION ALL SELECT * FROM vt2 WHERE (((((x'a290')|(CAST(0.11322760090610495 AS TEXT)))) ISNULL));
SELECT ALL * FROM vt2;
SELECT DISTINCT * FROM vt2 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt2 NATURAL JOIN vt0 WHERE (vt2.c0) UNION SELECT DISTINCT * FROM vt2 NATURAL JOIN vt0 WHERE ((NOT (vt2.c0))) UNION SELECT DISTINCT * FROM vt2 NATURAL JOIN vt0 WHERE (((vt2.c0) ISNULL));
SELECT DISTINCT * FROM vt2 NATURAL JOIN vt0;
SELECT ALL vt1.c0, vt1.c1, vt2.c0 FROM vt1 FULL OUTER JOIN t0 ON ((((((t0.c39)OR(vt1.c0)))OR(vt2.c0)))<=(t0.c39 COLLATE NOCASE)) LEFT OUTER JOIN vt2 ON ((vt1.c1 COLLATE NOCASE) NOTNULL) GROUP BY vt1.c0, vt1.c1, vt2.c0;
SELECT t0.c39 FROM t0, vt1, vt0, vt2 GROUP BY t0.c39;
SELECT ALL t0.c39 FROM t0, vt1, vt0, vt2 GROUP BY t0.c39 HAVING TOTAL(MIN(vt1.c0)) UNION ALL SELECT t0.c39 FROM t0, vt1, vt0, vt2 GROUP BY t0.c39 HAVING (NOT (TOTAL(MIN(vt1.c0)))) UNION ALL SELECT ALL t0.c39 FROM t0, vt1, vt0, vt2 GROUP BY t0.c39 HAVING ((TOTAL(MIN(vt1.c0))) ISNULL);
SELECT * FROM vt2 INDEXED BY i43, vt1, t0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt1, vt0 WHERE ((((('-602438238')<(vt1.c0)))+(vt0.c1))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT ((((('-602438238')<(vt1.c0)))+(vt0.c1))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt1, vt0 WHERE ((((((('-602438238')<(vt1.c0)))+(vt0.c1))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt1, vt0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt2, vt0, vt1 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt2, vt0, vt1 WHERE ((((('')OR(((vt1.c1) NOT BETWEEN (vt2.c0) AND (vt1.c0)))))AND((+ (-901387156))))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM t0, vt2, vt0, vt1 WHERE ((NOT ((((('')OR(((vt1.c1) NOT BETWEEN (vt2.c0) AND (vt1.c0)))))AND((+ (-901387156))))))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM t0, vt2, vt0, vt1 WHERE ((((((('')OR(((vt1.c1) NOT BETWEEN (vt2.c0) AND (vt1.c0)))))AND((+ (-901387156))))) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt2, vt0, vt1 GROUP BY t0.c0, vt0.c0;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING CAST(((vt1.c0) BETWEEN (vt1.c1) AND (SUM(vt1.c0))) AS REAL) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (CAST(((vt1.c0) BETWEEN (vt1.c1) AND (SUM(vt1.c0))) AS REAL))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((CAST(((vt1.c0) BETWEEN (vt1.c1) AND (SUM(vt1.c0))) AS REAL)) ISNULL);
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING CAST(((vt1.c0) BETWEEN (vt1.c1) AND (SUM(vt1.c0))) AS REAL) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (CAST(((vt1.c0) BETWEEN (vt1.c1) AND (SUM(vt1.c0))) AS REAL))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((CAST(((vt1.c0) BETWEEN (vt1.c1) AND (SUM(vt1.c0))) AS REAL)) ISNULL);
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL t0.c0, vt2.c0, vt1.c1 FROM t0, vt1 LEFT OUTER JOIN vt2 ON ((vt1.c1 COLLATE NOCASE)<=(CAST(t0.c0 AS NUMERIC)));
SELECT ALL t0.c0, vt2.c0, vt1.c1 FROM t0, vt1 LEFT OUTER JOIN vt2 ON ((vt1.c1 COLLATE NOCASE)<=(CAST(t0.c0 AS NUMERIC))) WHERE (GLOB(x'', t0.c0) COLLATE BINARY) UNION ALL SELECT ALL t0.c0, vt2.c0, vt1.c1 FROM t0, vt1 LEFT OUTER JOIN vt2 ON ((vt1.c1 COLLATE NOCASE)<=(CAST(t0.c0 AS NUMERIC))) WHERE ((NOT (GLOB(x'', t0.c0) COLLATE BINARY))) UNION ALL SELECT t0.c0, vt2.c0, vt1.c1 FROM t0, vt1 LEFT OUTER JOIN vt2 ON ((vt1.c1 COLLATE NOCASE)<=(CAST(t0.c0 AS NUMERIC))) WHERE (((GLOB(x'', t0.c0) COLLATE BINARY) ISNULL));
SELECT ALL t0.c0, vt2.c0, vt1.c1 FROM t0, vt1 LEFT OUTER JOIN vt2 ON ((vt1.c1 COLLATE NOCASE)<=(CAST(t0.c0 AS NUMERIC)));
SELECT DISTINCT * FROM vt1, vt2, vt0;
SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE (LOWER(vt2.c0) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE ((NOT (LOWER(vt2.c0) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE (((LOWER(vt2.c0) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt1, vt2, vt0;
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt1 WHERE (((CAST(vt1.c0 AS REAL)) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (((t0.c0) IS TRUE)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, vt1 WHERE ((NOT (((CAST(vt1.c0 AS REAL)) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (((t0.c0) IS TRUE)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt1 WHERE (((((CAST(vt1.c0 AS REAL)) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (((t0.c0) IS TRUE)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT ALL t0.c39, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY t0.c39, vt0.c0, t0.c0;
SELECT t0.c39, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY t0.c39, vt0.c0, t0.c0 HAVING TOTAL(vt0.c0 COLLATE BINARY) UNION ALL SELECT ALL t0.c39, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY t0.c39, vt0.c0, t0.c0 HAVING (NOT (TOTAL(vt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL t0.c39, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY t0.c39, vt0.c0, t0.c0 HAVING ((TOTAL(vt0.c0 COLLATE BINARY)) ISNULL);
SELECT ALL t0.c39, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY t0.c39, vt0.c0, t0.c0;
SELECT t0.c39, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY t0.c39, vt0.c0, t0.c0 HAVING TOTAL(vt0.c0 COLLATE BINARY) UNION ALL SELECT ALL t0.c39, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY t0.c39, vt0.c0, t0.c0 HAVING (NOT (TOTAL(vt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL t0.c39, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY t0.c39, vt0.c0, t0.c0 HAVING ((TOTAL(vt0.c0 COLLATE BINARY)) ISNULL);
SELECT ALL t0.c39, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY t0.c39, vt0.c0, t0.c0;
SELECT * FROM vt1, vt2;
SELECT * FROM vt1, vt2 WHERE (0.9278100374671049) UNION ALL SELECT * FROM vt1, vt2 WHERE ((NOT (0.9278100374671049))) UNION ALL SELECT ALL * FROM vt1, vt2 WHERE (((0.9278100374671049) ISNULL));
SELECT * FROM vt1, vt2;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c39)||(0.34698870855902875)))=(t0.c39 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c39)||(0.34698870855902875)))=(t0.c39 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c39)||(0.34698870855902875)))==(t0.c39 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt1.c1, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c1, vt0.c0, vt0.c1;
SELECT ALL vt1.c1, vt0.c0, vt0.c1 FROM vt1, vt0 WHERE (NULL) GROUP BY vt1.c1, vt0.c0, vt0.c1 UNION SELECT vt1.c1, vt0.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT (NULL))) GROUP BY vt1.c1, vt0.c0, vt0.c1 UNION SELECT vt1.c1, vt0.c0, vt0.c1 FROM vt1, vt0 WHERE (((NULL) ISNULL)) GROUP BY vt1.c1, vt0.c0, vt0.c1;
SELECT vt1.c1, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c1, vt0.c0, vt0.c1;
SELECT ALL vt2.c0 FROM vt1, vt0 FULL OUTER JOIN vt2 ON x'' GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt1, vt0 FULL OUTER JOIN vt2 ON x'' GROUP BY vt2.c0 HAVING SUM(((((((((vt1.c1)AND(vt1.c0)))OR(vt2.c0)))OR(MIN(vt2.c0))))AND(MAX(GROUP_CONCAT(vt2.c0))))) UNION ALL SELECT vt2.c0 FROM vt1, vt0 FULL OUTER JOIN vt2 ON x'' GROUP BY vt2.c0 HAVING (NOT (SUM(((((((((vt1.c1)AND(vt1.c0)))OR(vt2.c0)))OR(MIN(vt2.c0))))AND(MAX(GROUP_CONCAT(vt2.c0))))))) UNION ALL SELECT ALL vt2.c0 FROM vt1, vt0 FULL OUTER JOIN vt2 ON x'' GROUP BY vt2.c0 HAVING ((SUM(((((((((vt1.c1)AND(vt1.c0)))OR(vt2.c0)))OR(MIN(vt2.c0))))AND(MAX(GROUP_CONCAT(vt2.c0)))))) ISNULL);
SELECT ALL vt1.c1, vt0.c1, vt2.c0, vt1.c0, vt0.c0, t0.c0, t0.c39 FROM vt2, vt0, t0, vt1;
SELECT vt1.c1, vt0.c1, vt2.c0, vt1.c0, vt0.c0, t0.c0, t0.c39 FROM vt2, vt0, t0, vt1 WHERE ((((9.23069382E8 IN ()))<>(((vt0.c1)AND(t0.c0))))) UNION ALL SELECT vt1.c1, vt0.c1, vt2.c0, vt1.c0, vt0.c0, t0.c0, t0.c39 FROM vt2, vt0, t0, vt1 WHERE ((NOT ((((9.23069382E8 IN ()))!=(((vt0.c1)AND(t0.c0))))))) UNION ALL SELECT vt1.c1, vt0.c1, vt2.c0, vt1.c0, vt0.c0, t0.c0, t0.c39 FROM vt2, vt0, t0, vt1 WHERE ((((((9.23069382E8 IN ()))<>(((vt0.c1)AND(t0.c0))))) ISNULL));
SELECT ALL vt1.c1, vt0.c1, vt2.c0, vt1.c0, vt0.c0, t0.c0, t0.c39 FROM vt2, vt0, t0, vt1;
SELECT DISTINCT vt2.c0, t0.c39, t0.c0 FROM t0 LEFT OUTER JOIN vt2 ON CAST(t0.c0 COLLATE NOCASE AS NUMERIC);
SELECT DISTINCT vt2.c0, t0.c39, t0.c0 FROM t0 LEFT OUTER JOIN vt2 ON CAST(t0.c0 COLLATE NOCASE AS NUMERIC) WHERE (CAST(((t0.c39) NOTNULL) AS INTEGER)) UNION SELECT DISTINCT vt2.c0, t0.c39, t0.c0 FROM t0 LEFT OUTER JOIN vt2 ON CAST(t0.c0 COLLATE NOCASE AS NUMERIC) WHERE ((NOT (CAST(((t0.c39) NOTNULL) AS INTEGER)))) UNION SELECT DISTINCT vt2.c0, t0.c39, t0.c0 FROM t0 LEFT OUTER JOIN vt2 ON CAST(t0.c0 COLLATE NOCASE AS NUMERIC) WHERE (((CAST(((t0.c39) NOTNULL) AS INTEGER)) ISNULL));
SELECT DISTINCT vt2.c0, t0.c39, t0.c0 FROM t0 LEFT OUTER JOIN vt2 ON CAST(t0.c0 COLLATE NOCASE AS NUMERIC);
SELECT vt0.c1, vt2.c0, vt0.c0 FROM vt2, vt0 GROUP BY vt0.c1, vt2.c0, vt0.c0;
SELECT ALL vt0.c1, vt2.c0, vt0.c0 FROM vt2, vt0 WHERE (((((vt0.c0)%(vt0.c0))) BETWEEN (((vt2.c0)&(vt2.c0))) AND (vt0.c0))) GROUP BY vt0.c1, vt2.c0, vt0.c0 UNION SELECT vt0.c1, vt2.c0, vt0.c0 FROM vt2, vt0 WHERE ((NOT (((((vt0.c0)%(vt0.c0))) BETWEEN (((vt2.c0)&(vt2.c0))) AND (vt0.c0))))) GROUP BY vt0.c1, vt2.c0, vt0.c0 UNION SELECT vt0.c1, vt2.c0, vt0.c0 FROM vt2, vt0 WHERE (((((((vt0.c0)%(vt0.c0))) BETWEEN (((vt2.c0)&(vt2.c0))) AND (vt0.c0))) ISNULL)) GROUP BY vt0.c1, vt2.c0, vt0.c0;
SELECT vt0.c1, vt2.c0, vt0.c0 FROM vt2, vt0 GROUP BY vt0.c1, vt2.c0, vt0.c0;
SELECT t0.c39, vt2.c0, vt0.c0, t0.c0, vt0.c1, vt1.c1 FROM vt2, vt0, vt1, t0 GROUP BY t0.c39, vt2.c0, vt0.c0, t0.c0, vt0.c1, vt1.c1;
SELECT ALL t0.c39, vt2.c0, vt0.c0, t0.c0, vt0.c1, vt1.c1 FROM vt2, vt0, vt1, t0 GROUP BY t0.c39, vt2.c0, vt0.c0, t0.c0, vt0.c1, vt1.c1 HAVING ((MAX(vt1.c0))||((GROUP_CONCAT(COUNT(*)) IN ()))) UNION ALL SELECT t0.c39, vt2.c0, vt0.c0, t0.c0, vt0.c1, vt1.c1 FROM vt2, vt0, vt1, t0 GROUP BY t0.c39, vt2.c0, vt0.c0, t0.c0, vt0.c1, vt1.c1 HAVING (NOT (((MAX(vt1.c0))||((GROUP_CONCAT(COUNT(*)) IN ()))))) UNION ALL SELECT ALL t0.c39, vt2.c0, vt0.c0, t0.c0, vt0.c1, vt1.c1 FROM vt2, vt0, vt1, t0 GROUP BY t0.c39, vt2.c0, vt0.c0, t0.c0, vt0.c1, vt1.c1 HAVING ((((MAX(vt1.c0))||((GROUP_CONCAT(COUNT(*)) IN ())))) ISNULL);
SELECT t0.c39, vt2.c0, vt0.c0, t0.c0, vt0.c1, vt1.c1 FROM vt2, vt0, vt1, t0 GROUP BY t0.c39, vt2.c0, vt0.c0, t0.c0, vt0.c1, vt1.c1;
SELECT ALL t0.c39, vt2.c0, vt0.c0, t0.c0, vt0.c1, vt1.c1 FROM vt2, vt0, vt1, t0 GROUP BY t0.c39, vt2.c0, vt0.c0, t0.c0, vt0.c1, vt1.c1 HAVING ((MAX(vt1.c0))||((GROUP_CONCAT(COUNT(*)) IN ()))) UNION ALL SELECT t0.c39, vt2.c0, vt0.c0, t0.c0, vt0.c1, vt1.c1 FROM vt2, vt0, vt1, t0 GROUP BY t0.c39, vt2.c0, vt0.c0, t0.c0, vt0.c1, vt1.c1 HAVING (NOT (((MAX(vt1.c0))||((GROUP_CONCAT(COUNT(*)) IN ()))))) UNION ALL SELECT ALL t0.c39, vt2.c0, vt0.c0, t0.c0, vt0.c1, vt1.c1 FROM vt2, vt0, vt1, t0 GROUP BY t0.c39, vt2.c0, vt0.c0, t0.c0, vt0.c1, vt1.c1 HAVING ((((MAX(vt1.c0))||((GROUP_CONCAT(COUNT(*)) IN ())))) ISNULL);
SELECT t0.c39, vt2.c0, vt0.c0, t0.c0, vt0.c1, vt1.c1 FROM vt2, vt0, vt1, t0 GROUP BY t0.c39, vt2.c0, vt0.c0, t0.c0, vt0.c1, vt1.c1;
SELECT vt1.c1, vt1.c0 FROM vt1;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)) AS NUMERIC)) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)) AS NUMERIC)))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)) AS NUMERIC)) ISNULL));
SELECT vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0, vt1, t0;
SELECT DISTINCT * FROM vt0, vt1, t0 WHERE ('') UNION SELECT DISTINCT * FROM vt0, vt1, t0 WHERE ((NOT (''))) UNION SELECT DISTINCT * FROM vt0, vt1, t0 WHERE ((('') ISNULL));
SELECT DISTINCT * FROM vt0, vt1, t0;
SELECT ALL vt1.c0, t0.c0, vt2.c0 FROM vt2, vt1, t0 GROUP BY vt1.c0, t0.c0, vt2.c0;
SELECT ALL vt1.c0, t0.c0, vt2.c0 FROM vt2 NOT INDEXED, vt1, t0 WHERE (((((vt1.c0) NOT NULL))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 ELSE vt2.c0 END))) GROUP BY vt1.c0, t0.c0, vt2.c0 UNION SELECT ALL vt1.c0, t0.c0, vt2.c0 FROM vt2, vt1, t0 WHERE ((NOT (((((vt1.c0) NOT NULL))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 ELSE vt2.c0 END))))) GROUP BY vt1.c0, t0.c0, vt2.c0 UNION SELECT vt1.c0, t0.c0, vt2.c0 FROM vt2, vt1, t0 WHERE (((((((vt1.c0) NOT NULL))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 ELSE vt2.c0 END))) ISNULL)) GROUP BY vt1.c0, t0.c0, vt2.c0;
SELECT ALL vt1.c0, t0.c0, vt2.c0 FROM vt2, vt1, t0 GROUP BY vt1.c0, t0.c0, vt2.c0;
SELECT vt0.c1, vt1.c0, vt0.c0, vt2.c0, vt1.c1 FROM vt2, vt0 CROSS JOIN vt1 ON (x'd151' IN ()) GROUP BY vt0.c1, vt1.c0, vt0.c0, vt2.c0, vt1.c1;
SELECT vt0.c1, vt1.c0, vt0.c0, vt2.c0, vt1.c1 FROM vt2, vt0 CROSS JOIN vt1 ON (x'd151' IN ()) GROUP BY vt0.c1, vt1.c0, vt0.c0, vt2.c0, vt1.c1 HAVING ((((COUNT(MIN(''))) NOT BETWEEN (TOTAL(vt0.c0)) AND (COUNT(vt0.c1)))) NOT BETWEEN (AVG(MIN(MAX(SUM(vt2.c0))))) AND (MAX(vt1.c0))) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt0.c0, vt2.c0, vt1.c1 FROM vt2, vt0 CROSS JOIN vt1 ON (x'd151' IN ()) GROUP BY vt0.c1, vt1.c0, vt0.c0, vt2.c0, vt1.c1 HAVING (NOT (((((COUNT(MIN(''))) NOT BETWEEN (TOTAL(vt0.c0)) AND (COUNT(vt0.c1)))) NOT BETWEEN (AVG(MIN(MAX(SUM(vt2.c0))))) AND (MAX(vt1.c0))))) UNION ALL SELECT vt0.c1, vt1.c0, vt0.c0, vt2.c0, vt1.c1 FROM vt2, vt0 CROSS JOIN vt1 ON (x'd151' IN ()) GROUP BY vt0.c1, vt1.c0, vt0.c0, vt2.c0, vt1.c1 HAVING ((((((COUNT(MIN(''))) NOT BETWEEN (TOTAL(vt0.c0)) AND (COUNT(vt0.c1)))) NOT BETWEEN (AVG(MIN(MAX(SUM(vt2.c0))))) AND (MAX(vt1.c0)))) ISNULL);
SELECT vt1.c1, t0.c0, t0.c39 FROM vt1 FULL OUTER JOIN t0 ON (t0.c39 IN (CAST(vt1.c0 AS INTEGER)));
SELECT ALL vt1.c1, t0.c0, t0.c39 FROM vt1 FULL OUTER JOIN t0 ON (t0.c39 IN (CAST(vt1.c0 AS INTEGER))) WHERE (COALESCE(t0.c0 COLLATE RTRIM, TRIM(t0.c0))) UNION ALL SELECT vt1.c1, t0.c0, t0.c39 FROM vt1 FULL OUTER JOIN t0 ON (t0.c39 IN (CAST(vt1.c0 AS INTEGER))) WHERE ((NOT (COALESCE(t0.c0 COLLATE RTRIM, TRIM(t0.c0))))) UNION ALL SELECT ALL vt1.c1, t0.c0, t0.c39 FROM vt1 FULL OUTER JOIN t0 ON (t0.c39 IN (CAST(vt1.c0 AS INTEGER))) WHERE (((COALESCE(t0.c0 COLLATE RTRIM, TRIM(t0.c0))) ISNULL));
SELECT vt1.c1, t0.c0, t0.c39 FROM vt1 FULL OUTER JOIN t0 ON (t0.c39 IN (CAST(vt1.c0 AS INTEGER)));
SELECT DISTINCT vt0.c1, vt2.c0 FROM t0, vt0, vt2, vt1;
SELECT DISTINCT vt0.c1, vt2.c0 FROM t0, vt0, vt2, vt1 WHERE (CASE ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN CAST(vt0.c0 AS NUMERIC) THEN vt2.c0 END) UNION SELECT DISTINCT vt0.c1, vt2.c0 FROM t0, vt0, vt2, vt1 WHERE ((NOT (CASE ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN CAST(vt0.c0 AS NUMERIC) THEN vt2.c0 END))) UNION SELECT DISTINCT vt0.c1, vt2.c0 FROM t0, vt0, vt2, vt1 WHERE (((CASE ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN CAST(vt0.c0 AS NUMERIC) THEN vt2.c0 END) ISNULL));
SELECT DISTINCT vt0.c1, vt2.c0 FROM t0, vt0, vt2, vt1;
SELECT ALL vt0.c1, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c1, vt2.c0;
SELECT vt0.c1, vt2.c0 FROM vt0, vt2 WHERE ((- (((vt0.c1)/(vt0.c1))))) GROUP BY vt0.c1, vt2.c0 UNION SELECT ALL vt0.c1, vt2.c0 FROM vt0, vt2 WHERE ((NOT ((- (((vt0.c1)/(vt0.c1))))))) GROUP BY vt0.c1, vt2.c0 UNION SELECT vt0.c1, vt2.c0 FROM vt0, vt2 WHERE ((((- (((vt0.c1)/(vt0.c1))))) ISNULL)) GROUP BY vt0.c1, vt2.c0;
SELECT ALL vt0.c1, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c1, vt2.c0;
SELECT ALL vt2.c0, vt0.c0, vt1.c0, vt1.c1, vt0.c1, t0.c39 FROM t0, vt0, vt1 RIGHT OUTER JOIN vt2 ON CASE WHEN CASE t0.c0  WHEN vt0.c1 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c1 ELSE t0.c0 END THEN CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END WHEN ((t0.c39)*(vt0.c0)) THEN CASE vt0.c1  WHEN t0.c39 THEN vt1.c1 ELSE t0.c0 END WHEN (NOT (vt0.c1)) THEN '-781396202' END GROUP BY vt2.c0, vt0.c0, vt1.c0, vt1.c1, vt0.c1, t0.c39;
SELECT ALL vt2.c0, vt0.c0, vt1.c0, vt1.c1, vt0.c1, t0.c39 FROM t0, vt0, vt1 RIGHT OUTER JOIN vt2 ON CASE WHEN CASE t0.c0  WHEN vt0.c1 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c1 ELSE t0.c0 END THEN CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END WHEN ((t0.c39)*(vt0.c0)) THEN CASE vt0.c1  WHEN t0.c39 THEN vt1.c1 ELSE t0.c0 END WHEN (NOT (vt0.c1)) THEN '-781396202' END GROUP BY vt2.c0, vt0.c0, vt1.c0, vt1.c1, vt0.c1, t0.c39 HAVING TOTAL(COUNT(*)) UNION ALL SELECT vt2.c0, vt0.c0, vt1.c0, vt1.c1, vt0.c1, t0.c39 FROM t0, vt0, vt1 RIGHT OUTER JOIN vt2 ON CASE WHEN CASE t0.c0  WHEN vt0.c1 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c1 ELSE t0.c0 END THEN CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END WHEN ((t0.c39)*(vt0.c0)) THEN CASE vt0.c1  WHEN t0.c39 THEN vt1.c1 ELSE t0.c0 END WHEN (NOT (vt0.c1)) THEN '-781396202' END GROUP BY vt2.c0, vt0.c0, vt1.c0, vt1.c1, vt0.c1, t0.c39 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL vt2.c0, vt0.c0, vt1.c0, vt1.c1, vt0.c1, t0.c39 FROM t0, vt0, vt1 RIGHT OUTER JOIN vt2 ON CASE WHEN CASE t0.c0  WHEN vt0.c1 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c1 ELSE t0.c0 END THEN CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END WHEN ((t0.c39)*(vt0.c0)) THEN CASE vt0.c1  WHEN t0.c39 THEN vt1.c1 ELSE t0.c0 END WHEN (NOT (vt0.c1)) THEN '-781396202' END GROUP BY vt2.c0, vt0.c0, vt1.c0, vt1.c1, vt0.c1, t0.c39 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((- (vt0.c0)))) AND (((x'' IN ()))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN (((- (vt0.c0)))) AND (((x'' IN ()))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN (((- (vt0.c0)))) AND (((x'' IN ()))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT t0.c39, vt2.c0 FROM vt0, vt2 FULL OUTER JOIN t0 ON vt0.c1;
SELECT DISTINCT t0.c39, vt2.c0 FROM vt0, vt2 FULL OUTER JOIN t0 ON vt0.c1 WHERE (HEX(((vt2.c0)||(vt2.c0)))) UNION SELECT DISTINCT t0.c39, vt2.c0 FROM vt0, vt2 FULL OUTER JOIN t0 ON vt0.c1 WHERE ((NOT (HEX(((vt2.c0)||(vt2.c0)))))) UNION SELECT DISTINCT t0.c39, vt2.c0 FROM vt0, vt2 FULL OUTER JOIN t0 ON vt0.c1 WHERE (((HEX(((vt2.c0)||(vt2.c0)))) ISNULL));
SELECT DISTINCT t0.c39, vt2.c0 FROM vt0, vt2 FULL OUTER JOIN t0 ON vt0.c1;
SELECT vt0.c1 FROM vt0 LEFT OUTER JOIN vt2 ON ((((((((((((vt0.c1)OR(vt0.c1)))AND(vt2.c0)))OR(CAST(vt0.c1 AS INTEGER))))AND(((vt0.c0) NOTNULL))))OR((+ (vt0.c0)))))AND(CAST(vt0.c1 AS INTEGER))) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 LEFT OUTER JOIN vt2 ON ((((((((((((vt0.c1)OR(vt0.c1)))AND(vt2.c0)))OR(CAST(vt0.c1 AS INTEGER))))AND(((vt0.c0) NOTNULL))))OR((+ (vt0.c0)))))AND(CAST(vt0.c1 AS INTEGER))) WHERE (((0.804105750943176)-(((vt0.c1) BETWEEN (vt2.c0) AND (vt0.c0))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 LEFT OUTER JOIN vt2 ON ((((((((((((vt0.c1)OR(vt0.c1)))AND(vt2.c0)))OR(CAST(vt0.c1 AS INTEGER))))AND(((vt0.c0) NOTNULL))))OR((+ (vt0.c0)))))AND(CAST(vt0.c1 AS INTEGER))) WHERE ((NOT (((0.804105750943176)-(((vt0.c1) BETWEEN (vt2.c0) AND (vt0.c0))))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 LEFT OUTER JOIN vt2 ON ((((((((((((vt0.c1)OR(vt0.c1)))AND(vt2.c0)))OR(CAST(vt0.c1 AS INTEGER))))AND(((vt0.c0) NOTNULL))))OR((+ (vt0.c0)))))AND(CAST(vt0.c1 AS INTEGER))) WHERE (((((0.804105750943176)-(((vt0.c1) BETWEEN (vt2.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 LEFT OUTER JOIN vt2 ON ((((((((((((vt0.c1)OR(vt0.c1)))AND(vt2.c0)))OR(CAST(vt0.c1 AS INTEGER))))AND(((vt0.c0) NOTNULL))))OR((+ (vt0.c0)))))AND(CAST(vt0.c1 AS INTEGER))) GROUP BY vt0.c1;
SELECT ALL t0.c0, vt2.c0, vt0.c0, t0.c39 FROM vt1, t0, vt0, vt2 GROUP BY t0.c0, vt2.c0, vt0.c0, t0.c39;
SELECT t0.c0, vt2.c0, vt0.c0, t0.c39 FROM vt1, t0, vt0, vt2 GROUP BY t0.c0, vt2.c0, vt0.c0, t0.c39 HAVING SUM(TOTAL(COUNT(GROUP_CONCAT(vt1.c1)))) UNION ALL SELECT t0.c0, vt2.c0, vt0.c0, t0.c39 FROM vt1, t0, vt0, vt2 GROUP BY t0.c0, vt2.c0, vt0.c0, t0.c39 HAVING (NOT (SUM(TOTAL(COUNT(GROUP_CONCAT(vt1.c1)))))) UNION ALL SELECT ALL t0.c0, vt2.c0, vt0.c0, t0.c39 FROM vt1, t0, vt0, vt2 GROUP BY t0.c0, vt2.c0, vt0.c0, t0.c39 HAVING ((SUM(TOTAL(COUNT(GROUP_CONCAT(vt1.c1))))) ISNULL);
SELECT ALL * FROM vt1, vt2, t0;
SELECT * FROM vt1, vt2, t0 WHERE (IFNULL(DISTINCT (((vt2.c0, t0.c0, t0.c39))<((NULL, t0.c39, 'TRUE'))), CASE WHEN vt2.c0 THEN t0.c39 END)) UNION ALL SELECT ALL * FROM vt1, vt2, t0 WHERE ((NOT (IFNULL(DISTINCT (((vt2.c0, t0.c0, t0.c39))<((NULL, t0.c39, 'TRUE'))), CASE WHEN vt2.c0 THEN t0.c39 END)))) UNION ALL SELECT ALL * FROM vt1, vt2, t0 WHERE (((IFNULL(DISTINCT (((vt2.c0, t0.c0, t0.c39))<((NULL, t0.c39, 'TRUE'))), CASE WHEN vt2.c0 THEN t0.c39 END)) ISNULL));
SELECT ALL * FROM vt1, vt2, t0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)))<<((((vt1.c0))>=((vt1.c1)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)))<<((((vt1.c0))>=((vt1.c1)))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)))<<((((vt1.c0))>=((vt1.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt1.c1;
SELECT vt0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt1, vt0 WHERE (COALESCE(DISTINCT 0.3309531343228467, ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) GROUP BY vt0.c0, vt1.c0, vt0.c1, vt1.c1 UNION SELECT vt0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt1, vt0 WHERE ((NOT (COALESCE(DISTINCT 0.3309531343228467, ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))) GROUP BY vt0.c0, vt1.c0, vt0.c1, vt1.c1 UNION SELECT vt0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt1, vt0 WHERE (((COALESCE(DISTINCT 0.3309531343228467, ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) ISNULL)) GROUP BY vt0.c0, vt1.c0, vt0.c1, vt1.c1;
SELECT ALL vt0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt1.c1;
SELECT vt2.c0, t0.c39, t0.c0 FROM t0, vt2 GROUP BY vt2.c0, t0.c39, t0.c0;
SELECT vt2.c0, t0.c39, t0.c0 FROM t0, vt2 GROUP BY vt2.c0, t0.c39, t0.c0 HAVING GROUP_CONCAT(((t0.c0) IS TRUE)) UNION ALL SELECT vt2.c0, t0.c39, t0.c0 FROM t0, vt2 GROUP BY vt2.c0, t0.c39, t0.c0 HAVING (NOT (GROUP_CONCAT(((t0.c0) IS TRUE)))) UNION ALL SELECT vt2.c0, t0.c39, t0.c0 FROM t0, vt2 GROUP BY vt2.c0, t0.c39, t0.c0 HAVING ((GROUP_CONCAT(((t0.c0) IS TRUE))) ISNULL);
SELECT vt2.c0, t0.c39, t0.c0 FROM t0, vt2 GROUP BY vt2.c0, t0.c39, t0.c0;
SELECT vt2.c0, t0.c39, t0.c0 FROM t0, vt2 GROUP BY vt2.c0, t0.c39, t0.c0 HAVING GROUP_CONCAT(((t0.c0) IS TRUE)) UNION ALL SELECT vt2.c0, t0.c39, t0.c0 FROM t0, vt2 GROUP BY vt2.c0, t0.c39, t0.c0 HAVING (NOT (GROUP_CONCAT(((t0.c0) IS TRUE)))) UNION ALL SELECT vt2.c0, t0.c39, t0.c0 FROM t0, vt2 GROUP BY vt2.c0, t0.c39, t0.c0 HAVING ((GROUP_CONCAT(((t0.c0) IS TRUE))) ISNULL);
SELECT vt2.c0, t0.c39, t0.c0 FROM t0, vt2 GROUP BY vt2.c0, t0.c39, t0.c0;
SELECT vt2.c0, vt1.c1, vt1.c0 FROM vt1, vt2;
SELECT vt2.c0, vt1.c1, vt1.c0 FROM vt1, vt2 WHERE (CAST(vt1.c1 COLLATE BINARY AS NUMERIC)) UNION ALL SELECT ALL vt2.c0, vt1.c1, vt1.c0 FROM vt1, vt2 WHERE ((NOT (CAST(vt1.c1 COLLATE BINARY AS NUMERIC)))) UNION ALL SELECT ALL vt2.c0, vt1.c1, vt1.c0 FROM vt1, vt2 WHERE (((CAST(vt1.c1 COLLATE BINARY AS NUMERIC)) ISNULL));
SELECT vt2.c0, vt1.c1, vt1.c0 FROM vt1, vt2;
SELECT DISTINCT vt1.c1, vt2.c0, vt0.c1, t0.c39 FROM t0, vt0, vt1 NATURAL JOIN vt2;
SELECT DISTINCT vt1.c1, vt2.c0, vt0.c1, t0.c39 FROM t0, vt0, vt1 NATURAL JOIN vt2 WHERE (((((t0.c39)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))) IN ())) UNION SELECT DISTINCT vt1.c1, vt2.c0, vt0.c1, t0.c39 FROM t0, vt0, vt1 NATURAL JOIN vt2 WHERE ((NOT (((((t0.c39)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))) IN ())))) UNION SELECT DISTINCT vt1.c1, vt2.c0, vt0.c1, t0.c39 FROM t0, vt0, vt1 NATURAL JOIN vt2 WHERE (((((((t0.c39)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))) IN ())) ISNULL));
SELECT DISTINCT vt1.c1, vt2.c0, vt0.c1, t0.c39 FROM t0, vt0, vt1 NATURAL JOIN vt2;
SELECT ALL vt0.c0, vt1.c1 FROM t0, vt1, vt2, vt0 GROUP BY vt0.c0, vt1.c1;
SELECT ALL vt0.c0, vt1.c1 FROM t0, vt1, vt2, vt0 WHERE ((- (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END))) GROUP BY vt0.c0, vt1.c1 UNION SELECT vt0.c0, vt1.c1 FROM t0, vt1, vt2, vt0 WHERE ((NOT ((- (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END))))) GROUP BY vt0.c0, vt1.c1 UNION SELECT vt0.c0, vt1.c1 FROM t0, vt1, vt2, vt0 WHERE ((((- (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END))) ISNULL)) GROUP BY vt0.c0, vt1.c1;
SELECT ALL vt0.c0, vt1.c1 FROM t0, vt1, vt2, vt0 GROUP BY vt0.c0, vt1.c1;
SELECT ALL t0.c0, t0.c39 FROM t0 GROUP BY t0.c0, t0.c39;
SELECT ALL t0.c0, t0.c39 FROM t0 GROUP BY t0.c0, t0.c39 HAVING (MIN(t0.c0) IN ()) UNION ALL SELECT t0.c0, t0.c39 FROM t0 GROUP BY t0.c0, t0.c39 HAVING (NOT ((MIN(t0.c0) IN ()))) UNION ALL SELECT t0.c0, t0.c39 FROM t0 GROUP BY t0.c0, t0.c39 HAVING (((MIN(t0.c0) IN ())) ISNULL);
SELECT ALL t0.c0, t0.c39 FROM t0 GROUP BY t0.c0, t0.c39;
SELECT ALL t0.c0, t0.c39 FROM t0 GROUP BY t0.c0, t0.c39 HAVING (MIN(t0.c0) IN ()) UNION ALL SELECT t0.c0, t0.c39 FROM t0 GROUP BY t0.c0, t0.c39 HAVING (NOT ((MIN(t0.c0) IN ()))) UNION ALL SELECT t0.c0, t0.c39 FROM t0 GROUP BY t0.c0, t0.c39 HAVING (((MIN(t0.c0) IN ())) ISNULL);
SELECT ALL t0.c0, t0.c39 FROM t0 GROUP BY t0.c0, t0.c39;
SELECT ALL * FROM t0, vt1, vt0, vt2;
SELECT * FROM t0, vt1, vt0, vt2 WHERE (((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (((vt0.c0)&(t0.c39))) AND (CASE WHEN vt0.c1 THEN t0.c0 WHEN vt1.c0 THEN 0.9427433255388779 WHEN t0.c39 THEN t0.c39 ELSE vt2.c0 END))) UNION ALL SELECT ALL * FROM t0, vt1, vt0, vt2 WHERE ((NOT (((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (((vt0.c0)&(t0.c39))) AND (CASE WHEN vt0.c1 THEN t0.c0 WHEN vt1.c0 THEN 0.9427433255388779 WHEN t0.c39 THEN t0.c39 ELSE vt2.c0 END))))) UNION ALL SELECT * FROM t0, vt1, vt0, vt2 WHERE (((((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (((vt0.c0)&(t0.c39))) AND (CASE WHEN vt0.c1 THEN t0.c0 WHEN vt1.c0 THEN 0.9427433255388779 WHEN t0.c39 THEN t0.c39 ELSE vt2.c0 END))) ISNULL));
SELECT ALL * FROM t0, vt1, vt0, vt2;
SELECT DISTINCT vt0.c1 FROM vt0, t0, vt2;
SELECT DISTINCT vt0.c1 FROM vt0, t0, vt2 WHERE (CASE (((vt0.c1))>((vt2.c0)))  WHEN ((vt0.c1)GLOB(t0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (x'')) WHEN (+ (0.985827715780289)) THEN json_array(NULL, vt0.c1, vt2.c0, vt2.c0) WHEN vt2.c0 THEN ((((((((((((t0.c0)AND(t0.c39)))OR(vt0.c1)))AND(NULL)))OR(vt0.c0)))OR(vt2.c0)))AND(t0.c39)) ELSE vt0.c0 COLLATE RTRIM END) UNION SELECT DISTINCT vt0.c1 FROM vt0, t0, vt2 WHERE ((NOT (CASE (((vt0.c1))>((vt2.c0)))  WHEN ((vt0.c1)GLOB(t0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (x'')) WHEN (+ (0.985827715780289)) THEN json_array(NULL, vt0.c1, vt2.c0, vt2.c0) WHEN vt2.c0 THEN ((((((((((((t0.c0)AND(t0.c39)))OR(vt0.c1)))AND(NULL)))OR(vt0.c0)))OR(vt2.c0)))AND(t0.c39)) ELSE vt0.c0 COLLATE RTRIM END))) UNION SELECT DISTINCT vt0.c1 FROM vt0, t0, vt2 WHERE (((CASE (((vt0.c1))>((vt2.c0)))  WHEN ((vt0.c1)GLOB(t0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (x'')) WHEN (+ (0.985827715780289)) THEN json_array(NULL, vt0.c1, vt2.c0, vt2.c0) WHEN vt2.c0 THEN ((((((((((((t0.c0)AND(t0.c39)))OR(vt0.c1)))AND(NULL)))OR(vt0.c0)))OR(vt2.c0)))AND(t0.c39)) ELSE vt0.c0 COLLATE RTRIM END) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0, t0, vt2;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 WHERE ((((vt1.c1 IN ()))LIKE(vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((vt1.c1 IN ()))LIKE(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((((((vt1.c1 IN ()))LIKE(vt1.c0))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (-5.72592011E8 IN (((t0.c0)-(t0.c39)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((-5.72592011E8 IN (((t0.c0)-(t0.c39)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((-5.72592011E8 IN (((t0.c0)-(t0.c39))))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (-5.72592011E8 IN (((t0.c0)-(t0.c39)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((-5.72592011E8 IN (((t0.c0)-(t0.c39)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((-5.72592011E8 IN (((t0.c0)-(t0.c39))))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt1.c1, vt0.c1, vt0.c0, vt1.c0 FROM t0, vt2, vt0, vt1;
SELECT vt1.c1, vt0.c1, vt0.c0, vt1.c0 FROM t0, vt2, vt0, vt1 WHERE (vt2.c0) UNION ALL SELECT vt1.c1, vt0.c1, vt0.c0, vt1.c0 FROM t0, vt2, vt0, vt1 WHERE ((NOT (vt2.c0))) UNION ALL SELECT vt1.c1, vt0.c1, vt0.c0, vt1.c0 FROM t0, vt2, vt0, vt1 WHERE (((vt2.c0) ISNULL));
SELECT ALL vt1.c1, vt0.c1, vt0.c0, vt1.c0 FROM t0, vt2, vt0, vt1;
SELECT DISTINCT vt0.c1, vt1.c1 FROM vt1, vt0;
SELECT DISTINCT vt0.c1, vt1.c1 FROM vt1, vt0 WHERE (((((vt0.c0)OR(vt1.c0)))GLOB(((vt0.c1) NOT NULL)))) UNION SELECT DISTINCT vt0.c1, vt1.c1 FROM vt1, vt0 WHERE ((NOT (((((vt0.c0)OR(vt1.c0)))GLOB(((vt0.c1) NOT NULL)))))) UNION SELECT DISTINCT vt0.c1, vt1.c1 FROM vt1, vt0 WHERE (((((((vt0.c0)OR(vt1.c0)))GLOB(((vt0.c1) NOT NULL)))) ISNULL));
SELECT DISTINCT vt0.c1, vt1.c1 FROM vt1, vt0;
SELECT vt2.c0 FROM vt2 INDEXED BY i43 GROUP BY vt2.c0;
SELECT ALL vt2.c0, vt1.c1, t0.c0, t0.c39, vt1.c0 FROM vt1, t0, vt2 GROUP BY vt2.c0, vt1.c1, t0.c0, t0.c39, vt1.c0;
SELECT vt2.c0, vt1.c1, t0.c0, t0.c39, vt1.c0 FROM vt1, t0, vt2 GROUP BY vt2.c0, vt1.c1, t0.c0, t0.c39, vt1.c0 HAVING GROUP_CONCAT((((GROUP_CONCAT(vt1.c0)))==((AVG(AVG(AVG(SUM(MIN(COUNT(t0.c0)))))))))) UNION ALL SELECT vt2.c0, vt1.c1, t0.c0, t0.c39, vt1.c0 FROM vt1, t0, vt2 GROUP BY vt2.c0, vt1.c1, t0.c0, t0.c39, vt1.c0 HAVING (NOT (GROUP_CONCAT((((GROUP_CONCAT(vt1.c0)))==((AVG(AVG(AVG(SUM(MIN(COUNT(t0.c0)))))))))))) UNION ALL SELECT ALL vt2.c0, vt1.c1, t0.c0, t0.c39, vt1.c0 FROM vt1, t0, vt2 GROUP BY vt2.c0, vt1.c1, t0.c0, t0.c39, vt1.c0 HAVING ((GROUP_CONCAT((((GROUP_CONCAT(vt1.c0)))=((AVG(AVG(AVG(SUM(MIN(COUNT(t0.c0))))))))))) ISNULL);
SELECT ALL * FROM vt2, t0 FULL OUTER JOIN vt1 ON COALESCE((- (vt1.c0)), (((t0.c39)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))), ((vt2.c0) NOTNULL), ((t0.c39) BETWEEN (vt2.c0) AND (vt2.c0)));
SELECT ALL * FROM vt2, t0 FULL OUTER JOIN vt1 ON COALESCE((- (vt1.c0)), (((t0.c39)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))), ((vt2.c0) NOTNULL), ((t0.c39) BETWEEN (vt2.c0) AND (vt2.c0))) WHERE (((((((((((vt1.c1)AND(vt2.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(t0.c39))) NOT BETWEEN (((((t0.c39)OR(vt1.c0)))AND(0.5965902838512319))) AND (CAST(t0.c0 AS BLOB)))) UNION ALL SELECT ALL * FROM vt2, t0 FULL OUTER JOIN vt1 ON COALESCE((- (vt1.c0)), (((t0.c39)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))), ((vt2.c0) NOTNULL), ((t0.c39) BETWEEN (vt2.c0) AND (vt2.c0))) WHERE ((NOT (((((((((((vt1.c1)AND(vt2.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(t0.c39))) NOT BETWEEN (((((t0.c39)OR(vt1.c0)))AND(0.5965902838512319))) AND (CAST(t0.c0 AS BLOB)))))) UNION ALL SELECT ALL * FROM vt2, t0 FULL OUTER JOIN vt1 ON COALESCE((- (vt1.c0)), (((t0.c39)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))), ((vt2.c0) NOTNULL), ((t0.c39) BETWEEN (vt2.c0) AND (vt2.c0))) WHERE (((((((((((((vt1.c1)AND(vt2.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(t0.c39))) NOT BETWEEN (((((t0.c39)OR(vt1.c0)))AND(0.5965902838512319))) AND (CAST(t0.c0 AS BLOB)))) ISNULL));
SELECT ALL * FROM vt2, t0 FULL OUTER JOIN vt1 ON COALESCE((- (vt1.c0)), (((t0.c39)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))), ((vt2.c0) NOTNULL), ((t0.c39) BETWEEN (vt2.c0) AND (vt2.c0)));
SELECT DISTINCT * FROM vt2, vt0, t0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM vt2, vt0, t0 NATURAL JOIN vt1 WHERE (((vt2.c0)==(vt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt2, vt0, t0 NATURAL JOIN vt1 WHERE ((NOT (((vt2.c0)=(vt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt2, vt0, t0 NATURAL JOIN vt1 WHERE (((((vt2.c0)==(vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt2, vt0, t0 NATURAL JOIN vt1;
SELECT ALL vt0.c0, vt1.c1, vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt1, t0, vt2 GROUP BY vt0.c0, vt1.c1, vt2.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, vt1.c1, vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt1, t0, vt2 WHERE (((vt1.c1) NOT NULL)) GROUP BY vt0.c0, vt1.c1, vt2.c0, vt1.c0, vt0.c1 UNION SELECT vt0.c0, vt1.c1, vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt1, t0, vt2 WHERE ((NOT (((vt1.c1) NOT NULL)))) GROUP BY vt0.c0, vt1.c1, vt2.c0, vt1.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt1.c1, vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt1, t0, vt2 WHERE (((((vt1.c1) NOT NULL)) ISNULL)) GROUP BY vt0.c0, vt1.c1, vt2.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, vt1.c1, vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt1, t0, vt2 GROUP BY vt0.c0, vt1.c1, vt2.c0, vt1.c0, vt0.c1;
SELECT t0.c0, t0.c39, vt1.c0, vt0.c1, vt1.c1, vt2.c0, vt0.c0 FROM vt2, vt0 CROSS JOIN vt1 ON (((((NULL)AND(vt1.c1)))AND(vt0.c1)) IN ()) RIGHT OUTER JOIN t0 ON CASE CAST(vt1.c1 AS INTEGER)  WHEN ((vt1.c1)>>(vt1.c1)) THEN highlight(NULL, t0.c39, vt0.c1, vt1.c0) END GROUP BY t0.c0, t0.c39, vt1.c0, vt0.c1, vt1.c1, vt2.c0, vt0.c0;
SELECT t0.c0, t0.c39, vt1.c0, vt0.c1, vt1.c1, vt2.c0, vt0.c0 FROM vt2, vt0 CROSS JOIN vt1 ON (((((NULL)AND(vt1.c1)))AND(vt0.c1)) IN ()) RIGHT OUTER JOIN t0 ON CASE CAST(vt1.c1 AS INTEGER)  WHEN ((vt1.c1)>>(vt1.c1)) THEN highlight(NULL, t0.c39, vt0.c1, vt1.c0) END GROUP BY t0.c0, t0.c39, vt1.c0, vt0.c1, vt1.c1, vt2.c0, vt0.c0 HAVING COUNT(((t0.c39) BETWEEN (AVG(t0.c0)) AND (vt0.c0))) UNION ALL SELECT t0.c0, t0.c39, vt1.c0, vt0.c1, vt1.c1, vt2.c0, vt0.c0 FROM vt2, vt0 CROSS JOIN vt1 ON (((((NULL)AND(vt1.c1)))AND(vt0.c1)) IN ()) RIGHT OUTER JOIN t0 ON CASE CAST(vt1.c1 AS INTEGER)  WHEN ((vt1.c1)>>(vt1.c1)) THEN highlight(NULL, t0.c39, vt0.c1, vt1.c0) END GROUP BY t0.c0, t0.c39, vt1.c0, vt0.c1, vt1.c1, vt2.c0, vt0.c0 HAVING (NOT (COUNT(((t0.c39) BETWEEN (AVG(t0.c0)) AND (vt0.c0))))) UNION ALL SELECT ALL t0.c0, t0.c39, vt1.c0, vt0.c1, vt1.c1, vt2.c0, vt0.c0 FROM vt2, vt0 CROSS JOIN vt1 ON (((((NULL)AND(vt1.c1)))AND(vt0.c1)) IN ()) RIGHT OUTER JOIN t0 ON CASE CAST(vt1.c1 AS INTEGER)  WHEN ((vt1.c1)>>(vt1.c1)) THEN highlight(NULL, t0.c39, vt0.c1, vt1.c0) END GROUP BY t0.c0, t0.c39, vt1.c0, vt0.c1, vt1.c1, vt2.c0, vt0.c0 HAVING ((COUNT(((t0.c39) BETWEEN (AVG(t0.c0)) AND (vt0.c0)))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c0)*(((0.3018902041598984) NOT BETWEEN (vt0.c0) AND (NULL))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c0)*(((0.3018902041598984) NOT BETWEEN (vt0.c0) AND (NULL))))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c0)*(((0.3018902041598984) NOT BETWEEN (vt0.c0) AND (NULL))))) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT t0.c0, t0.c39, vt1.c0 FROM vt1, t0, vt2, vt0;
SELECT DISTINCT t0.c0, t0.c39, vt1.c0 FROM vt1, t0, vt2, vt0 WHERE ((- (((vt2.c0)/(vt1.c0))))) UNION SELECT DISTINCT t0.c0, t0.c39, vt1.c0 FROM vt1, t0, vt2, vt0 WHERE ((NOT ((- (((vt2.c0)/(vt1.c0))))))) UNION SELECT DISTINCT t0.c0, t0.c39, vt1.c0 FROM vt1, t0, vt2, vt0 WHERE ((((- (((vt2.c0)/(vt1.c0))))) ISNULL));
SELECT DISTINCT t0.c0, t0.c39, vt1.c0 FROM vt1, t0, vt2, vt0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE (((vt2.c0)*(vt2.c0)) COLLATE BINARY) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT (((vt2.c0)*(vt2.c0)) COLLATE BINARY))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE (((((vt2.c0)*(vt2.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0 HAVING ((SUM(vt2.c0)) NOTNULL) UNION ALL SELECT vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0 HAVING (NOT (((SUM(vt2.c0)) NOTNULL))) UNION ALL SELECT ALL vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0 HAVING ((((SUM(vt2.c0)) NOTNULL)) ISNULL);
SELECT vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0 HAVING ((SUM(vt2.c0)) NOTNULL) UNION ALL SELECT vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0 HAVING (NOT (((SUM(vt2.c0)) NOTNULL))) UNION ALL SELECT ALL vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0 HAVING ((((SUM(vt2.c0)) NOTNULL)) ISNULL);
SELECT vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)>((('8.') IS FALSE)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)>((('8.') IS FALSE)))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)>((('8.') IS FALSE)))) ISNULL));
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt2 LEFT OUTER JOIN t0 ON (vt2.c0 IN ()) CROSS JOIN vt0 ON ((vt0.c0) IS FALSE) RIGHT OUTER JOIN vt1 ON UNLIKELY(DISTINCT CAST(vt2.c0 AS BLOB));
SELECT DISTINCT vt0.c0 FROM vt2 LEFT OUTER JOIN t0 ON (vt2.c0 IN ()) CROSS JOIN vt0 ON ((vt0.c0) IS FALSE) RIGHT OUTER JOIN vt1 ON UNLIKELY(DISTINCT CAST(vt2.c0 AS BLOB)) WHERE (((((((vt0.c0)-(vt2.c0)))OR(vt2.c0 COLLATE BINARY)))AND(vt1.c0 COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0 FROM vt2 LEFT OUTER JOIN t0 ON (vt2.c0 IN ()) CROSS JOIN vt0 ON ((vt0.c0) IS FALSE) RIGHT OUTER JOIN vt1 ON UNLIKELY(DISTINCT CAST(vt2.c0 AS BLOB)) WHERE ((NOT (((((((vt0.c0)-(vt2.c0)))OR(vt2.c0 COLLATE BINARY)))AND(vt1.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT vt0.c0 FROM vt2 LEFT OUTER JOIN t0 ON (vt2.c0 IN ()) CROSS JOIN vt0 ON ((vt0.c0) IS FALSE) RIGHT OUTER JOIN vt1 ON UNLIKELY(DISTINCT CAST(vt2.c0 AS BLOB)) WHERE (((((((((vt0.c0)-(vt2.c0)))OR(vt2.c0 COLLATE BINARY)))AND(vt1.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt2 LEFT OUTER JOIN t0 ON (vt2.c0 IN ()) CROSS JOIN vt0 ON ((vt0.c0) IS FALSE) RIGHT OUTER JOIN vt1 ON UNLIKELY(DISTINCT CAST(vt2.c0 AS BLOB));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (LIKELY((- (vt0.c1)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (LIKELY((- (vt0.c1)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((LIKELY((- (vt0.c1)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c1, vt1.c1, t0.c39, vt0.c0, vt1.c0 FROM vt1 INNER JOIN t0 ON ((CASE t0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)<=(UNLIKELY(t0.c0))) LEFT OUTER JOIN vt0 ON vt0.c0 COLLATE NOCASE GROUP BY vt0.c1, vt1.c1, t0.c39, vt0.c0, vt1.c0;
SELECT vt0.c1, vt1.c1, t0.c39, vt0.c0, vt1.c0 FROM vt1 INNER JOIN t0 ON ((CASE t0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)<=(UNLIKELY(t0.c0))) LEFT OUTER JOIN vt0 ON vt0.c0 COLLATE NOCASE GROUP BY vt0.c1, vt1.c1, t0.c39, vt0.c0, vt1.c0 HAVING MAX(COUNT(AVG(vt1.c0))) UNION ALL SELECT ALL vt0.c1, vt1.c1, t0.c39, vt0.c0, vt1.c0 FROM vt1 INNER JOIN t0 ON ((CASE t0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)<=(UNLIKELY(t0.c0))) LEFT OUTER JOIN vt0 ON vt0.c0 COLLATE NOCASE GROUP BY vt0.c1, vt1.c1, t0.c39, vt0.c0, vt1.c0 HAVING (NOT (MAX(COUNT(AVG(vt1.c0))))) UNION ALL SELECT vt0.c1, vt1.c1, t0.c39, vt0.c0, vt1.c0 FROM vt1 INNER JOIN t0 ON ((CASE t0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)<=(UNLIKELY(t0.c0))) LEFT OUTER JOIN vt0 ON vt0.c0 COLLATE NOCASE GROUP BY vt0.c1, vt1.c1, t0.c39, vt0.c0, vt1.c0 HAVING ((MAX(COUNT(AVG(vt1.c0)))) ISNULL);
SELECT * FROM vt2, vt1, t0;
SELECT * FROM vt2, vt1, t0 WHERE (((0Xffffffffcb90c20a) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((t0.c39)>(t0.c39))))) UNION ALL SELECT ALL * FROM vt2, vt1, t0 WHERE ((NOT (((0xffffffffcb90c20a) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((t0.c39)>(t0.c39))))))) UNION ALL SELECT * FROM vt2, vt1, t0 WHERE (((((0xffffffffcb90c20a) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((t0.c39)>(t0.c39))))) ISNULL));
SELECT * FROM vt2, vt1, t0;
SELECT DISTINCT * FROM vt0 CROSS JOIN vt2 ON ((vt0.c1 COLLATE NOCASE) NOT NULL);
SELECT DISTINCT * FROM vt0 CROSS JOIN vt2 ON ((vt0.c1 COLLATE NOCASE) NOT NULL) WHERE (CAST(((vt0.c1)AND(vt2.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN vt2 ON ((vt0.c1 COLLATE NOCASE) NOT NULL) WHERE ((NOT (CAST(((vt0.c1)AND(vt2.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN vt2 ON ((vt0.c1 COLLATE NOCASE) NOT NULL) WHERE (((CAST(((vt0.c1)AND(vt2.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN vt2 ON ((vt0.c1 COLLATE NOCASE) NOT NULL);
SELECT ALL vt0.c0, t0.c39, vt2.c0 FROM vt2, t0, vt0 GROUP BY vt0.c0, t0.c39, vt2.c0;
SELECT ALL vt0.c0, t0.c39, vt2.c0 FROM vt2 NOT INDEXED, t0, vt0 WHERE ((((vt0.c1, vt0.c0, t0.c39)) BETWEEN ((((vt2.c0) NOT BETWEEN (t0.c39) AND (NULL)), ((vt2.c0)LIKE(vt0.c0)), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE t0.c0 END)) AND ((((((vt0.c1)AND(t0.c39)))AND(vt2.c0)), ((vt0.c0) NOT BETWEEN (t0.c39) AND (t0.c0)), ((vt0.c0)*(0.1629067402856118)))))) GROUP BY vt0.c0, t0.c39, vt2.c0 UNION SELECT ALL vt0.c0, t0.c39, vt2.c0 FROM vt2, t0, vt0 WHERE ((NOT ((((vt0.c1, vt0.c0, t0.c39)) BETWEEN ((((vt2.c0) NOT BETWEEN (t0.c39) AND (NULL)), ((vt2.c0)LIKE(vt0.c0)), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE t0.c0 END)) AND ((((((vt0.c1)AND(t0.c39)))AND(vt2.c0)), ((vt0.c0) NOT BETWEEN (t0.c39) AND (t0.c0)), ((vt0.c0)*(0.1629067402856118)))))))) GROUP BY vt0.c0, t0.c39, vt2.c0 UNION SELECT vt0.c0, t0.c39, vt2.c0 FROM vt2, t0, vt0 WHERE ((((((vt0.c1, vt0.c0, t0.c39)) BETWEEN ((((vt2.c0) NOT BETWEEN (t0.c39) AND (NULL)), ((vt2.c0)LIKE(vt0.c0)), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE t0.c0 END)) AND ((((((vt0.c1)AND(t0.c39)))AND(vt2.c0)), ((vt0.c0) NOT BETWEEN (t0.c39) AND (t0.c0)), ((vt0.c0)*(0.1629067402856118)))))) ISNULL)) GROUP BY vt0.c0, t0.c39, vt2.c0;
SELECT ALL vt0.c0, t0.c39, vt2.c0 FROM vt2, t0, vt0 GROUP BY vt0.c0, t0.c39, vt2.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING AVG(SUM(vt1.c0)) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (AVG(SUM(vt1.c0)))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((AVG(SUM(vt1.c0))) ISNULL);
SELECT * FROM vt2 FULL OUTER JOIN t0 ON CASE vt0.c1  WHEN t0.c39 THEN vt0.c1 ELSE t0.c39 END COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((((t0.c0) BETWEEN (t0.c0) AND (t0.c39))) NOT BETWEEN (vt2.c0) AND ((+ (vt2.c0))));
SELECT DISTINCT t0.c39, t0.c0 FROM t0;
SELECT DISTINCT t0.c39, t0.c0 FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT t0.c39, t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c39, t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c39, t0.c0 FROM t0;
SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt2 WHERE (((((((((((vt1.c1)OR(vt2.c0)))OR(vt2.c0 COLLATE RTRIM)))AND(((vt1.c1) ISNULL))))AND((((0.7977056781542078))<((vt1.c1))))))AND(ABS(DISTINCT vt1.c1)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt2 WHERE ((NOT (((((((((((vt1.c1)OR(vt2.c0)))OR(vt2.c0 COLLATE RTRIM)))AND(((vt1.c1) ISNULL))))AND((((0.7977056781542078))<((vt1.c1))))))AND(ABS(DISTINCT vt1.c1)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt2 WHERE (((((((((((((vt1.c1)OR(vt2.c0)))OR(vt2.c0 COLLATE RTRIM)))AND(((vt1.c1) ISNULL))))AND((((0.7977056781542078))<((vt1.c1))))))AND(ABS(DISTINCT vt1.c1)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt0.c0, vt2.c0 FROM vt2, vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0;
SELECT vt1.c0, vt0.c0, vt2.c0 FROM vt2, vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0 HAVING ((((((((COUNT(*))OR(MIN(vt0.c0))))OR(NULL)))AND(MAX(vt1.c1))))OR(((NULL)OR(vt0.c1)))) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt2.c0 FROM vt2, vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0 HAVING (NOT (((((((((COUNT(*))OR(MIN(vt0.c0))))OR(NULL)))AND(MAX(vt1.c1))))OR(((NULL)OR(vt0.c1)))))) UNION ALL SELECT vt1.c0, vt0.c0, vt2.c0 FROM vt2 NOT INDEXED, vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0 HAVING ((((((((((COUNT(*))OR(MIN(vt0.c0))))OR(NULL)))AND(MAX(vt1.c1))))OR(((NULL)OR(vt0.c1))))) ISNULL);
SELECT ALL vt1.c0, vt0.c0, vt2.c0 FROM vt2, vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0;
SELECT vt1.c0, vt0.c0, vt2.c0 FROM vt2, vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0 HAVING ((((((((COUNT(*))OR(MIN(vt0.c0))))OR(NULL)))AND(MAX(vt1.c1))))OR(((NULL)OR(vt0.c1)))) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt2.c0 FROM vt2, vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0 HAVING (NOT (((((((((COUNT(*))OR(MIN(vt0.c0))))OR(NULL)))AND(MAX(vt1.c1))))OR(((NULL)OR(vt0.c1)))))) UNION ALL SELECT vt1.c0, vt0.c0, vt2.c0 FROM vt2 NOT INDEXED, vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0 HAVING ((((((((((COUNT(*))OR(MIN(vt0.c0))))OR(NULL)))AND(MAX(vt1.c1))))OR(((NULL)OR(vt0.c1))))) ISNULL);
SELECT ALL vt1.c0, vt0.c0, vt2.c0 FROM vt2, vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0;
SELECT ALL vt2.c0 FROM vt2;
SELECT ALL vt2.c0 FROM vt2 WHERE ((((vt2.c0 COLLATE NOCASE, ((vt2.c0)%('71383146')), ((vt2.c0)>=(vt2.c0))))=((vt2.c0 COLLATE NOCASE, vt2.c0, NULL)))) UNION ALL SELECT vt2.c0 FROM vt2 WHERE ((NOT ((((vt2.c0 COLLATE NOCASE, ((vt2.c0)%('71383146')), ((vt2.c0)>=(vt2.c0))))==((vt2.c0 COLLATE NOCASE, vt2.c0, NULL)))))) UNION ALL SELECT vt2.c0 FROM vt2 WHERE ((((((vt2.c0 COLLATE NOCASE, ((vt2.c0)%('71383146')), ((vt2.c0)>=(vt2.c0))))==((vt2.c0 COLLATE NOCASE, vt2.c0, NULL)))) ISNULL));
SELECT ALL vt2.c0 FROM vt2;
SELECT DISTINCT * FROM vt0, t0 INNER JOIN vt1 ON (((vt0.c1)IS(vt2.c0)) IN ()) FULL OUTER JOIN vt2 ON ((((t0.c39) IS TRUE))>(CASE vt2.c0  WHEN 0.06652979935672332 THEN t0.c0 WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c1 THEN vt1.c1 ELSE t0.c0 END));
SELECT DISTINCT * FROM vt0, t0 INNER JOIN vt1 ON (((vt0.c1)IS(vt2.c0)) IN ()) FULL OUTER JOIN vt2 ON ((((t0.c39) IS TRUE))>(CASE vt2.c0  WHEN 0.06652979935672332 THEN t0.c0 WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c1 THEN vt1.c1 ELSE t0.c0 END)) WHERE ((+ (CAST(vt1.c1 AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0, t0 INNER JOIN vt1 ON (((vt0.c1)IS(vt2.c0)) IN ()) FULL OUTER JOIN vt2 ON ((((t0.c39) IS TRUE))>(CASE vt2.c0  WHEN 0.06652979935672332 THEN t0.c0 WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c1 THEN vt1.c1 ELSE t0.c0 END)) WHERE ((NOT ((+ (CAST(vt1.c1 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM vt0, t0 INNER JOIN vt1 ON (((vt0.c1)IS(vt2.c0)) IN ()) FULL OUTER JOIN vt2 ON ((((t0.c39) IS TRUE))>(CASE vt2.c0  WHEN 0.06652979935672332 THEN t0.c0 WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c1 THEN vt1.c1 ELSE t0.c0 END)) WHERE ((((+ (CAST(vt1.c1 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM vt0, t0 INNER JOIN vt1 ON (((vt0.c1)IS(vt2.c0)) IN ()) FULL OUTER JOIN vt2 ON ((((t0.c39) IS TRUE))>(CASE vt2.c0  WHEN 0.06652979935672332 THEN t0.c0 WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c1 THEN vt1.c1 ELSE t0.c0 END));
SELECT vt1.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1, t0 WHERE ((('' COLLATE RTRIM)AND(CAST(vt1.c1 AS TEXT)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0, vt1, t0 WHERE ((NOT ((('' COLLATE RTRIM)AND(CAST(vt1.c1 AS TEXT)))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0, vt1, t0 WHERE ((((('' COLLATE RTRIM)AND(CAST(vt1.c1 AS TEXT)))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt2.c0, vt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN vt2 ON (NOT (vt0.c1)) GROUP BY vt2.c0, vt0.c0, vt0.c1;
SELECT ALL vt2.c0, vt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN vt2 ON (NOT (vt0.c1)) GROUP BY vt2.c0, vt0.c0, vt0.c1 HAVING MAX(COUNT(*)) COLLATE NOCASE UNION ALL SELECT ALL vt2.c0, vt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN vt2 ON (NOT (vt0.c1)) GROUP BY vt2.c0, vt0.c0, vt0.c1 HAVING (NOT (MAX(COUNT(*)) COLLATE NOCASE)) UNION ALL SELECT vt2.c0, vt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN vt2 ON (NOT (vt0.c1)) GROUP BY vt2.c0, vt0.c0, vt0.c1 HAVING ((MAX(COUNT(*)) COLLATE NOCASE) ISNULL);
SELECT ALL SUM(CASE (((t0.c39)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1)))  WHEN ((vt2.c0) ISNULL) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (-1071518843)) END) FROM vt1, t0, vt0, vt2;
SELECT ALL vt2.c0 FROM vt2;
SELECT vt2.c0 FROM vt2 WHERE (((x'b42e') NOT BETWEEN (CAST('1140072733' AS TEXT)) AND (IFNULL(vt2.c0, vt2.c0)))) UNION ALL SELECT vt2.c0 FROM vt2 WHERE ((NOT (((x'b42e') NOT BETWEEN (CAST('1140072733' AS TEXT)) AND (IFNULL(vt2.c0, vt2.c0)))))) UNION ALL SELECT vt2.c0 FROM vt2 WHERE (((((x'b42e') NOT BETWEEN (CAST('1140072733' AS TEXT)) AND (IFNULL(vt2.c0, vt2.c0)))) ISNULL));
SELECT ALL vt2.c0 FROM vt2;
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE (((((0.9516981618126915)*(vt2.c0))) NOT BETWEEN (((vt2.c0)<=(vt2.c0))) AND ((+ (vt2.c0))))) UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT (((((0.9516981618126915)*(vt2.c0))) NOT BETWEEN (((vt2.c0)<=(vt2.c0))) AND ((+ (vt2.c0))))))) UNION SELECT DISTINCT * FROM vt2 WHERE (((((((0.9516981618126915)*(vt2.c0))) NOT BETWEEN (((vt2.c0)<=(vt2.c0))) AND ((+ (vt2.c0))))) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((((vt0.c1) BETWEEN (vt0.c0) AND (-1.493944278E9)), (vt0.c1 IN (vt0.c1)), ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(80216620))))<=(('0.7977056781542078', UNLIKELY(vt0.c0), (vt0.c0 IN (vt0.c0, vt0.c0)))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((((vt0.c1) BETWEEN (vt0.c0) AND (-1.493944278E9)), (vt0.c1 IN (vt0.c1)), ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(80216620))))<=(('0.7977056781542078', UNLIKELY(vt0.c0), (vt0.c0 IN (vt0.c0, vt0.c0)))))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((((((vt0.c1) BETWEEN (vt0.c0) AND (-1.493944278E9)), (vt0.c1 IN (vt0.c1)), ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(80216620))))<=(('0.7977056781542078', UNLIKELY(vt0.c0), (vt0.c0 IN (vt0.c0, vt0.c0)))))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM(((COUNT(MAX(TOTAL(MAX(SUM(MAX(0.7412146629830771)))))))+(TOTAL(t0.c39)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM(((COUNT(MAX(TOTAL(MAX(SUM(MAX(0.7412146629830771)))))))+(TOTAL(t0.c39)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(((COUNT(MAX(TOTAL(MAX(SUM(MAX(0.7412146629830771)))))))+(TOTAL(t0.c39))))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (((t0.c0)GLOB(((((((((t0.c0)OR(t0.c39)))OR(t0.c39)))OR(t0.c39)))AND(t0.c0))))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((t0.c0)GLOB(((((((((t0.c0)OR(t0.c39)))OR(t0.c39)))OR(t0.c39)))AND(t0.c0))))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((t0.c0)GLOB(((((((((t0.c0)OR(t0.c39)))OR(t0.c39)))OR(t0.c39)))AND(t0.c0))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT vt0.c0 FROM vt0, vt1, t0, vt2 NOT INDEXED;
SELECT DISTINCT vt0.c0 FROM vt0, vt1, t0, vt2 WHERE ('8G%\r0j]O') UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1, t0, vt2 WHERE ((NOT ('8G%\r0j]O'))) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1, t0, vt2 WHERE ((('8G%\r0j]O') ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, vt1, t0, vt2 NOT INDEXED;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (UNLIKELY(DISTINCT (vt0.c1 IN ()))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (UNLIKELY(DISTINCT (vt0.c1 IN ()))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((UNLIKELY(DISTINCT (vt0.c1 IN ()))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING AVG(MAX(TOTAL(vt2.c0))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (AVG(MAX(TOTAL(vt2.c0))))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((AVG(MAX(TOTAL(vt2.c0)))) ISNULL);
SELECT * FROM vt2, t0;
SELECT ALL * FROM vt2, t0 WHERE (UNICODE(((t0.c0)|(vt2.c0)))) UNION ALL SELECT ALL * FROM vt2, t0 WHERE ((NOT (UNICODE(((t0.c0)|(vt2.c0)))))) UNION ALL SELECT * FROM vt2, t0 WHERE (((UNICODE(((t0.c0)|(vt2.c0)))) ISNULL));
SELECT * FROM vt2, t0;
SELECT DISTINCT * FROM vt2, t0, vt1, vt0;
SELECT DISTINCT * FROM vt2, t0, vt1, vt0 WHERE ((- ((vt0.c0 IN (NULL, vt1.c1))))) UNION SELECT DISTINCT * FROM vt2, t0, vt1, vt0 WHERE ((NOT ((- ((vt0.c0 IN (NULL, vt1.c1))))))) UNION SELECT DISTINCT * FROM vt2, t0, vt1, vt0 WHERE ((((- ((vt0.c0 IN (NULL, vt1.c1))))) ISNULL));
SELECT DISTINCT * FROM vt2, t0, vt1, vt0;
SELECT t0.c39, vt1.c0, vt1.c1 FROM vt1, vt2, vt0, t0 GROUP BY t0.c39, vt1.c0, vt1.c1;
SELECT ALL t0.c39, vt1.c0, vt1.c1 FROM vt1, vt2, vt0, t0 WHERE (((((vt1.c1) BETWEEN (vt0.c1) AND (t0.c0))) BETWEEN ((vt2.c0 IN (vt0.c1))) AND (TRIM(DISTINCT vt0.c1, vt1.c0)))) GROUP BY t0.c39, vt1.c0, vt1.c1 UNION SELECT ALL t0.c39, vt1.c0, vt1.c1 FROM vt1, vt2, vt0, t0 WHERE ((NOT (((((vt1.c1) BETWEEN (vt0.c1) AND (t0.c0))) BETWEEN ((vt2.c0 IN (vt0.c1))) AND (TRIM(DISTINCT vt0.c1, vt1.c0)))))) GROUP BY t0.c39, vt1.c0, vt1.c1 UNION SELECT t0.c39, vt1.c0, vt1.c1 FROM vt1, vt2, vt0, t0 WHERE (((((((vt1.c1) BETWEEN (vt0.c1) AND (t0.c0))) BETWEEN ((vt2.c0 IN (vt0.c1))) AND (TRIM(DISTINCT vt0.c1, vt1.c0)))) ISNULL)) GROUP BY t0.c39, vt1.c0, vt1.c1;
SELECT t0.c39, vt1.c0, vt1.c1 FROM vt1, vt2, vt0, t0 GROUP BY t0.c39, vt1.c0, vt1.c1;
SELECT vt1.c0, vt2.c0, vt0.c1 FROM vt0, t0, vt2, vt1 GROUP BY vt1.c0, vt2.c0, vt0.c1;
SELECT vt1.c0, vt2.c0, vt0.c1 FROM vt0, t0, vt2, vt1 GROUP BY vt1.c0, vt2.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, vt2.c0, vt0.c1 FROM vt0, t0, vt2, vt1 GROUP BY vt1.c0, vt2.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, vt2.c0, vt0.c1 FROM vt0, t0, vt2, vt1 GROUP BY vt1.c0, vt2.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, vt2.c0, vt0.c1 FROM vt0, t0, vt2, vt1 GROUP BY vt1.c0, vt2.c0, vt0.c1;
SELECT vt1.c0, vt2.c0, vt0.c1 FROM vt0, t0, vt2, vt1 GROUP BY vt1.c0, vt2.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, vt2.c0, vt0.c1 FROM vt0, t0, vt2, vt1 GROUP BY vt1.c0, vt2.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, vt2.c0, vt0.c1 FROM vt0, t0, vt2, vt1 GROUP BY vt1.c0, vt2.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, vt2.c0, vt0.c1 FROM vt0, t0, vt2, vt1 GROUP BY vt1.c0, vt2.c0, vt0.c1;
SELECT ALL * FROM vt0, vt1, t0;
SELECT * FROM vt0, vt1, t0 WHERE (CAST(((vt0.c1)IS(vt1.c0)) AS REAL)) UNION ALL SELECT * FROM vt0, vt1, t0 WHERE ((NOT (CAST(((vt0.c1)IS(vt1.c0)) AS REAL)))) UNION ALL SELECT * FROM vt0, vt1, t0 WHERE (((CAST(((vt0.c1)IS(vt1.c0)) AS REAL)) ISNULL));
SELECT ALL * FROM vt0, vt1, t0;
SELECT DISTINCT * FROM vt2, vt0, vt1;
SELECT DISTINCT * FROM vt2, vt0, vt1 WHERE (((((vt2.c0)IS NOT(vt1.c0)))=((x'f719' IN (vt1.c1))))) UNION SELECT DISTINCT * FROM vt2, vt0, vt1 WHERE ((NOT (((((vt2.c0)IS NOT(vt1.c0)))=((x'f719' IN (vt1.c1))))))) UNION SELECT DISTINCT * FROM vt2, vt0, vt1 WHERE (((((((vt2.c0)IS NOT(vt1.c0)))==((x'f719' IN (vt1.c1))))) ISNULL));
SELECT DISTINCT * FROM vt2, vt0, vt1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)))>>((vt1.c1 IN (vt1.c1))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)))>>((vt1.c1 IN (vt1.c1))))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)))>>((vt1.c1 IN (vt1.c1))))) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0, vt0.c0 HAVING CASE GROUP_CONCAT(vt1.c0)  WHEN ((MIN(MIN(MIN(vt0.c1)))) NOTNULL) THEN AVG(TOTAL(vt1.c1)) ELSE GROUP_CONCAT(vt1.c1) END UNION ALL SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0, vt0.c0 HAVING (NOT (CASE GROUP_CONCAT(vt1.c0)  WHEN ((MIN(MIN(MIN(vt0.c1)))) NOTNULL) THEN AVG(TOTAL(vt1.c1)) ELSE GROUP_CONCAT(vt1.c1) END)) UNION ALL SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0, vt0.c0 HAVING ((CASE GROUP_CONCAT(vt1.c0)  WHEN ((MIN(MIN(MIN(vt0.c1)))) NOTNULL) THEN AVG(TOTAL(vt1.c1)) ELSE GROUP_CONCAT(vt1.c1) END) ISNULL);
SELECT * FROM vt2;
SELECT * FROM vt2 WHERE (CASE (vt2.c0 IN ())  WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) THEN vt2.c0 COLLATE RTRIM ELSE ((vt2.c0)=(vt2.c0)) END) UNION ALL SELECT ALL * FROM vt2 WHERE ((NOT (CASE (vt2.c0 IN ())  WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) THEN vt2.c0 COLLATE RTRIM ELSE ((vt2.c0)=(vt2.c0)) END))) UNION ALL SELECT * FROM vt2 WHERE (((CASE (vt2.c0 IN ())  WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) THEN vt2.c0 COLLATE RTRIM ELSE ((vt2.c0)=(vt2.c0)) END) ISNULL));
SELECT * FROM vt2;
SELECT DISTINCT * FROM vt1, t0 INDEXED BY i43 LEFT OUTER JOIN vt2 ON NULLIF(x'27c5', CASE WHEN vt2.c0 THEN vt1.c0 END) INNER JOIN vt0 ON ((vt2.c0)LIKE((((t0.c39, vt2.c0, t0.c0))<((t0.c0, t0.c0, vt1.c1)))));
SELECT DISTINCT * FROM vt1, t0 INDEXED BY i43 LEFT OUTER JOIN vt2 ON NULLIF(x'27c5', CASE WHEN vt2.c0 THEN vt1.c0 END) INNER JOIN vt0 ON ((vt2.c0)LIKE((((t0.c39, vt2.c0, t0.c0))<((t0.c0, t0.c0, vt1.c1))))) WHERE (CASE WHEN '1123633782' THEN vt1.c1 COLLATE BINARY WHEN (vt1.c1 IN (vt1.c1)) THEN ((vt0.c0)%(vt0.c1)) WHEN LOWER(t0.c39) THEN CAST(vt2.c0 AS BLOB) ELSE ((vt1.c0) BETWEEN (vt2.c0) AND (vt0.c0)) END) UNION SELECT DISTINCT * FROM vt1, t0 INDEXED BY i43 LEFT OUTER JOIN vt2 ON NULLIF(x'27c5', CASE WHEN vt2.c0 THEN vt1.c0 END) INNER JOIN vt0 ON ((vt2.c0)LIKE((((t0.c39, vt2.c0, t0.c0))<((t0.c0, t0.c0, vt1.c1))))) WHERE ((NOT (CASE WHEN '1123633782' THEN vt1.c1 COLLATE BINARY WHEN (vt1.c1 IN (vt1.c1)) THEN ((vt0.c0)%(vt0.c1)) WHEN LOWER(t0.c39) THEN CAST(vt2.c0 AS BLOB) ELSE ((vt1.c0) BETWEEN (vt2.c0) AND (vt0.c0)) END))) UNION SELECT DISTINCT * FROM vt1, t0 INDEXED BY i43 LEFT OUTER JOIN vt2 ON NULLIF(x'27c5', CASE WHEN vt2.c0 THEN vt1.c0 END) INNER JOIN vt0 ON ((vt2.c0)LIKE((((t0.c39, vt2.c0, t0.c0))<((t0.c0, t0.c0, vt1.c1))))) WHERE (((CASE WHEN '1123633782' THEN vt1.c1 COLLATE BINARY WHEN (vt1.c1 IN (vt1.c1)) THEN ((vt0.c0)%(vt0.c1)) WHEN LOWER(t0.c39) THEN CAST(vt2.c0 AS BLOB) ELSE ((vt1.c0) BETWEEN (vt2.c0) AND (vt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt1, t0 INDEXED BY i43 LEFT OUTER JOIN vt2 ON NULLIF(x'27c5', CASE WHEN vt2.c0 THEN vt1.c0 END) INNER JOIN vt0 ON ((vt2.c0)LIKE((((t0.c39, vt2.c0, t0.c0))<((t0.c0, t0.c0, vt1.c1)))));
SELECT t0.c0, vt0.c1, vt0.c0 FROM vt0, vt2, t0 GROUP BY t0.c0, vt0.c1, vt0.c0;
SELECT t0.c0, vt0.c1, vt0.c0 FROM vt0, vt2, t0 WHERE ((((vt0.c0)IS(NULL)) IN ())) GROUP BY t0.c0, vt0.c1, vt0.c0 UNION SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM vt0, vt2, t0 WHERE ((NOT ((((vt0.c0)IS(NULL)) IN ())))) GROUP BY t0.c0, vt0.c1, vt0.c0 UNION SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM vt0, vt2, t0 WHERE ((((((vt0.c0)IS(NULL)) IN ())) ISNULL)) GROUP BY t0.c0, vt0.c1, vt0.c0;
SELECT t0.c0, vt0.c1, vt0.c0 FROM vt0, vt2, t0 GROUP BY t0.c0, vt0.c1, vt0.c0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN (COUNT(*)) AND (AVG(TOTAL(vt0.c1)))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (((CAST(vt0.c1 AS BLOB)) NOT BETWEEN (COUNT(*)) AND (AVG(TOTAL(vt0.c1)))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((CAST(vt0.c1 AS BLOB)) NOT BETWEEN (COUNT(*)) AND (AVG(TOTAL(vt0.c1))))) ISNULL);
SELECT vt2.c0, vt1.c1, vt0.c1, vt1.c0 FROM vt1, vt0, vt2;
SELECT ALL vt2.c0, vt1.c1, vt0.c1, vt1.c0 FROM vt1, vt0, vt2 WHERE (CAST(((vt1.c1)/(vt0.c1)) AS BLOB)) UNION ALL SELECT vt2.c0, vt1.c1, vt0.c1, vt1.c0 FROM vt1, vt0, vt2 WHERE ((NOT (CAST(((vt1.c1)/(vt0.c1)) AS BLOB)))) UNION ALL SELECT vt2.c0, vt1.c1, vt0.c1, vt1.c0 FROM vt1, vt0, vt2 WHERE (((CAST(((vt1.c1)/(vt0.c1)) AS BLOB)) ISNULL));
SELECT vt2.c0, vt1.c1, vt0.c1, vt1.c0 FROM vt1, vt0, vt2;
SELECT DISTINCT * FROM t0 INNER JOIN vt2 ON (((('Wᢎ({')AND(((vt2.c0)%(t0.c0)))))AND(x''));
SELECT DISTINCT * FROM t0 INNER JOIN vt2 ON (((('Wᢎ({')AND(((vt2.c0)%(t0.c0)))))AND(x'')) WHERE ((((vt2.c0)>(vt2.c0)) IN ())) UNION SELECT DISTINCT * FROM t0 INNER JOIN vt2 ON (((('Wᢎ({')AND(((vt2.c0)%(t0.c0)))))AND(x'')) WHERE ((NOT ((((vt2.c0)>(vt2.c0)) IN ())))) UNION SELECT DISTINCT * FROM t0 INNER JOIN vt2 ON (((('Wᢎ({')AND(((vt2.c0)%(t0.c0)))))AND(x'')) WHERE ((((((vt2.c0)>(vt2.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM t0 INNER JOIN vt2 ON (((('Wᢎ({')AND(((vt2.c0)%(t0.c0)))))AND(x''));
SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 WHERE (CASE CAST(t0.c39 AS NUMERIC)  WHEN (((('L]')AND(t0.c39)))AND(vt1.c0)) THEN (vt1.c1 IN (vt1.c1, vt1.c1)) WHEN ((((((((vt1.c1)AND(vt1.c1)))AND(t0.c0)))OR(vt1.c1)))AND(vt1.c0)) THEN IFNULL(vt1.c1, vt1.c1) WHEN t0.c0 THEN ((t0.c0)!=(t0.c0)) END) GROUP BY vt1.c0, t0.c0 UNION SELECT vt1.c0, t0.c0 FROM t0, vt1 WHERE ((NOT (CASE CAST(t0.c39 AS NUMERIC)  WHEN (((('L]')AND(t0.c39)))AND(vt1.c0)) THEN (vt1.c1 IN (vt1.c1, vt1.c1)) WHEN ((((((((vt1.c1)AND(vt1.c1)))AND(t0.c0)))OR(vt1.c1)))AND(vt1.c0)) THEN IFNULL(vt1.c1, vt1.c1) WHEN t0.c0 THEN ((t0.c0)!=(t0.c0)) END))) GROUP BY vt1.c0, t0.c0 UNION SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 WHERE (((CASE CAST(t0.c39 AS NUMERIC)  WHEN (((('L]')AND(t0.c39)))AND(vt1.c0)) THEN (vt1.c1 IN (vt1.c1, vt1.c1)) WHEN ((((((((vt1.c1)AND(vt1.c1)))AND(t0.c0)))OR(vt1.c1)))AND(vt1.c0)) THEN IFNULL(vt1.c1, vt1.c1) WHEN t0.c0 THEN ((t0.c0)!=(t0.c0)) END) ISNULL)) GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE COUNT(GROUP_CONCAT(vt1.c1))  WHEN SUM(NULL) THEN AVG(vt1.c1) WHEN ((GROUP_CONCAT(vt1.c0)) ISNULL) THEN COUNT(*) WHEN CAST(vt1.c0 AS INTEGER) THEN GROUP_CONCAT(COUNT(SUM(TOTAL(AVG(vt1.c0))))) WHEN ((vt1.c0)>(COUNT(vt1.c0))) THEN ((vt1.c0) IS FALSE) WHEN ((COUNT(SUM(vt1.c0))) NOT NULL) THEN GROUP_CONCAT(vt1.c1) ELSE (((vt1.c0))==((TOTAL(AVG(vt1.c0))))) END UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE COUNT(GROUP_CONCAT(vt1.c1))  WHEN SUM(NULL) THEN AVG(vt1.c1) WHEN ((GROUP_CONCAT(vt1.c0)) ISNULL) THEN COUNT(*) WHEN CAST(vt1.c0 AS INTEGER) THEN GROUP_CONCAT(COUNT(SUM(TOTAL(AVG(vt1.c0))))) WHEN ((vt1.c0)>(COUNT(vt1.c0))) THEN ((vt1.c0) IS FALSE) WHEN ((COUNT(SUM(vt1.c0))) NOT NULL) THEN GROUP_CONCAT(vt1.c1) ELSE (((vt1.c0))=((TOTAL(AVG(vt1.c0))))) END)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE COUNT(GROUP_CONCAT(vt1.c1))  WHEN SUM(NULL) THEN AVG(vt1.c1) WHEN ((GROUP_CONCAT(vt1.c0)) ISNULL) THEN COUNT(*) WHEN CAST(vt1.c0 AS INTEGER) THEN GROUP_CONCAT(COUNT(SUM(TOTAL(AVG(vt1.c0))))) WHEN ((vt1.c0)>(COUNT(vt1.c0))) THEN ((vt1.c0) IS FALSE) WHEN ((COUNT(SUM(vt1.c0))) NOT NULL) THEN GROUP_CONCAT(vt1.c1) ELSE (((vt1.c0))==((TOTAL(AVG(vt1.c0))))) END) ISNULL);
SELECT * FROM vt0, vt2;
SELECT * FROM vt0, vt2 WHERE (CASE (vt0.c1 IN ())  WHEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) THEN ((vt0.c0) BETWEEN (vt2.c0) AND (vt0.c0)) WHEN (vt0.c0 IN ()) THEN (vt0.c1 IN (vt2.c0, vt0.c1)) WHEN (((vt2.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, NULL))) THEN vt2.c0 COLLATE RTRIM END) UNION ALL SELECT ALL * FROM vt0, vt2 WHERE ((NOT (CASE (vt0.c1 IN ())  WHEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) THEN ((vt0.c0) BETWEEN (vt2.c0) AND (vt0.c0)) WHEN (vt0.c0 IN ()) THEN (vt0.c1 IN (vt2.c0, vt0.c1)) WHEN (((vt2.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, NULL))) THEN vt2.c0 COLLATE RTRIM END))) UNION ALL SELECT * FROM vt0, vt2 WHERE (((CASE (vt0.c1 IN ())  WHEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) THEN ((vt0.c0) BETWEEN (vt2.c0) AND (vt0.c0)) WHEN (vt0.c0 IN ()) THEN (vt0.c1 IN (vt2.c0, vt0.c1)) WHEN (((vt2.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, NULL))) THEN vt2.c0 COLLATE RTRIM END) ISNULL));
SELECT * FROM vt0, vt2;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((UNLIKELY(vt2.c0) IN ((((vt2.c0))>=((vt2.c0)))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT ((UNLIKELY(vt2.c0) IN ((((vt2.c0))>=((vt2.c0)))))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((((UNLIKELY(vt2.c0) IN ((((vt2.c0))>=((vt2.c0)))))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT t0.c39, vt0.c0, vt1.c1, vt1.c0 FROM t0, vt0, vt1 GROUP BY t0.c39, vt0.c0, vt1.c1, vt1.c0;
SELECT t0.c39, vt0.c0, vt1.c1, vt1.c0 FROM t0, vt0, vt1 WHERE (UNLIKELY(0.1872295770279384 COLLATE NOCASE)) GROUP BY t0.c39, vt0.c0, vt1.c1, vt1.c0 UNION SELECT ALL t0.c39, vt0.c0, vt1.c1, vt1.c0 FROM t0, vt0, vt1 WHERE ((NOT (UNLIKELY(0.1872295770279384 COLLATE NOCASE)))) GROUP BY t0.c39, vt0.c0, vt1.c1, vt1.c0 UNION SELECT ALL t0.c39, vt0.c0, vt1.c1, vt1.c0 FROM t0, vt0, vt1 WHERE (((UNLIKELY(0.1872295770279384 COLLATE NOCASE)) ISNULL)) GROUP BY t0.c39, vt0.c0, vt1.c1, vt1.c0;
SELECT t0.c39, vt0.c0, vt1.c1, vt1.c0 FROM t0, vt0, vt1 GROUP BY t0.c39, vt0.c0, vt1.c1, vt1.c0;
SELECT ALL vt0.c1 FROM vt1, vt0, vt2 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt1, vt0, vt2 GROUP BY vt0.c1 HAVING (+ (0.86226792874506)) COLLATE BINARY UNION ALL SELECT ALL vt0.c1 FROM vt1, vt0, vt2 GROUP BY vt0.c1 HAVING (NOT ((+ (0.86226792874506)) COLLATE BINARY)) UNION ALL SELECT ALL vt0.c1 FROM vt1, vt0, vt2 GROUP BY vt0.c1 HAVING (((+ (0.86226792874506)) COLLATE BINARY) ISNULL);
SELECT ALL vt0.c1 FROM vt1, vt0, vt2 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt1, vt0, vt2 GROUP BY vt0.c1 HAVING (+ (0.86226792874506)) COLLATE BINARY UNION ALL SELECT ALL vt0.c1 FROM vt1, vt0, vt2 GROUP BY vt0.c1 HAVING (NOT ((+ (0.86226792874506)) COLLATE BINARY)) UNION ALL SELECT ALL vt0.c1 FROM vt1, vt0, vt2 GROUP BY vt0.c1 HAVING (((+ (0.86226792874506)) COLLATE BINARY) ISNULL);
SELECT ALL vt0.c1 FROM vt1, vt0, vt2 GROUP BY vt0.c1;
SELECT MIN((~ ((((vt1.c1, vt1.c0, t0.c39))>=((t0.c0, vt1.c1, NULL)))))) FROM t0, vt1;
SELECT * FROM vt2;
SELECT ALL * FROM vt2 WHERE (CAST((NULL IN ()) AS NUMERIC)) UNION ALL SELECT * FROM vt2 WHERE ((NOT (CAST((NULL IN ()) AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt2 WHERE (((CAST((NULL IN ()) AS NUMERIC)) ISNULL));
SELECT * FROM vt2;
SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON CASE WHEN x'' THEN vt0.c1 COLLATE NOCASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END THEN t0.c39 WHEN (~ (vt0.c0)) THEN CASE -1622357545  WHEN t0.c39 THEN t0.c0 ELSE vt0.c1 END WHEN (vt0.c0 IN ()) THEN ((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (((t0.c39))<(('Ho'))) END;
SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON CASE WHEN x'' THEN vt0.c1 COLLATE NOCASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END THEN t0.c39 WHEN (~ (vt0.c0)) THEN CASE -1622357545  WHEN t0.c39 THEN t0.c0 ELSE vt0.c1 END WHEN (vt0.c0 IN ()) THEN ((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (((t0.c39))<(('Ho'))) END WHERE (((((t0.c0) IS FALSE))>=(CASE WHEN vt0.c1 THEN vt0.c0 END))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON CASE WHEN x'' THEN vt0.c1 COLLATE NOCASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END THEN t0.c39 WHEN (~ (vt0.c0)) THEN CASE -1622357545  WHEN t0.c39 THEN t0.c0 ELSE vt0.c1 END WHEN (vt0.c0 IN ()) THEN ((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (((t0.c39))<(('Ho'))) END WHERE ((NOT (((((t0.c0) IS FALSE))>=(CASE WHEN vt0.c1 THEN vt0.c0 END))))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON CASE WHEN x'' THEN vt0.c1 COLLATE NOCASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END THEN t0.c39 WHEN (~ (vt0.c0)) THEN CASE -1622357545  WHEN t0.c39 THEN t0.c0 ELSE vt0.c1 END WHEN (vt0.c0 IN ()) THEN ((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (((t0.c39))<(('Ho'))) END WHERE (((((((t0.c0) IS FALSE))>=(CASE WHEN vt0.c1 THEN vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON CASE WHEN x'' THEN vt0.c1 COLLATE NOCASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END THEN t0.c39 WHEN (~ (vt0.c0)) THEN CASE -1622357545  WHEN t0.c39 THEN t0.c0 ELSE vt0.c1 END WHEN (vt0.c0 IN ()) THEN ((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (((t0.c39))<(('Ho'))) END;
SELECT vt0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt0 LEFT OUTER JOIN vt1 ON ((CAST(vt0.c0 AS REAL))<=(NULLIF(DISTINCT vt1.c0, vt1.c0))) GROUP BY vt0.c0, vt1.c0, vt0.c1, vt1.c1;
SELECT vt0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt0 LEFT OUTER JOIN vt1 ON ((CAST(vt0.c0 AS REAL))<=(NULLIF(DISTINCT vt1.c0, vt1.c0))) WHERE ((((vt1.c0 IN ()))>(((vt0.c0) NOT NULL)))) GROUP BY vt0.c0, vt1.c0, vt0.c1, vt1.c1 UNION SELECT vt0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt0 LEFT OUTER JOIN vt1 ON ((CAST(vt0.c0 AS REAL))<=(NULLIF(DISTINCT vt1.c0, vt1.c0))) WHERE ((NOT ((((vt1.c0 IN ()))>(((vt0.c0) NOT NULL)))))) GROUP BY vt0.c0, vt1.c0, vt0.c1, vt1.c1 UNION SELECT ALL vt0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt0 LEFT OUTER JOIN vt1 ON ((CAST(vt0.c0 AS REAL))<=(NULLIF(DISTINCT vt1.c0, vt1.c0))) WHERE ((((((vt1.c0 IN ()))>(((vt0.c0) NOT NULL)))) ISNULL)) GROUP BY vt0.c0, vt1.c0, vt0.c1, vt1.c1;
SELECT vt0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt0 LEFT OUTER JOIN vt1 ON ((CAST(vt0.c0 AS REAL))<=(NULLIF(DISTINCT vt1.c0, vt1.c0))) GROUP BY vt0.c0, vt1.c0, vt0.c1, vt1.c1;
SELECT t0.c39 FROM vt1 FULL OUTER JOIN vt2 ON (~ (vt2.c0)) FULL OUTER JOIN t0 ON ((vt2.c0 COLLATE BINARY) IS FALSE) GROUP BY t0.c39;
SELECT ALL t0.c39 FROM vt1 FULL OUTER JOIN vt2 ON (~ (vt2.c0)) FULL OUTER JOIN t0 ON ((vt2.c0 COLLATE BINARY) IS FALSE) GROUP BY t0.c39 HAVING AVG(TOTAL(vt1.c0)) UNION ALL SELECT t0.c39 FROM vt1 FULL OUTER JOIN vt2 ON (~ (vt2.c0)) FULL OUTER JOIN t0 ON ((vt2.c0 COLLATE BINARY) IS FALSE) GROUP BY t0.c39 HAVING (NOT (AVG(TOTAL(vt1.c0)))) UNION ALL SELECT ALL t0.c39 FROM vt1 FULL OUTER JOIN vt2 ON (~ (vt2.c0)) FULL OUTER JOIN t0 ON ((vt2.c0 COLLATE BINARY) IS FALSE) GROUP BY t0.c39 HAVING ((AVG(TOTAL(vt1.c0))) ISNULL);
SELECT ALL * FROM t0, vt1, vt0 RIGHT OUTER JOIN vt2 ON ((((STRFTIME(vt0.c0, vt1.c1, vt0.c1))AND((((vt0.c1))!=((t0.c0))))))OR(((vt1.c0)IS NOT(t0.c0))));
SELECT ALL * FROM t0, vt1, vt0 RIGHT OUTER JOIN vt2 ON ((((STRFTIME(vt0.c0, vt1.c1, vt0.c1))AND((((vt0.c1))<>((t0.c0))))))OR(((vt1.c0)IS NOT(t0.c0)))) WHERE ((((vt0.c1)<=(vt2.c0)) IN ())) UNION ALL SELECT ALL * FROM t0, vt1, vt0 RIGHT OUTER JOIN vt2 ON ((((STRFTIME(vt0.c0, vt1.c1, vt0.c1))AND((((vt0.c1))!=((t0.c0))))))OR(((vt1.c0)IS NOT(t0.c0)))) WHERE ((NOT ((((vt0.c1)<=(vt2.c0)) IN ())))) UNION ALL SELECT ALL * FROM t0, vt1, vt0 RIGHT OUTER JOIN vt2 ON ((((STRFTIME(vt0.c0, vt1.c1, vt0.c1))AND((((vt0.c1))!=((t0.c0))))))OR(((vt1.c0)IS NOT(t0.c0)))) WHERE ((((((vt0.c1)<=(vt2.c0)) IN ())) ISNULL));
SELECT ALL * FROM t0, vt1, vt0 RIGHT OUTER JOIN vt2 ON ((((STRFTIME(vt0.c0, vt1.c1, vt0.c1))AND((((vt0.c1))!=((t0.c0))))))OR(((vt1.c0)IS NOT(t0.c0))));
SELECT DISTINCT * FROM t0, vt2, vt1;
SELECT DISTINCT * FROM t0, vt2, vt1 WHERE (CAST(((vt1.c1) IS FALSE) AS TEXT)) UNION SELECT DISTINCT * FROM t0, vt2, vt1 WHERE ((NOT (CAST(((vt1.c1) IS FALSE) AS TEXT)))) UNION SELECT DISTINCT * FROM t0, vt2, vt1 WHERE (((CAST(((vt1.c1) IS FALSE) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM t0, vt2, vt1;
SELECT vt2.c0, vt1.c0, vt1.c1 FROM vt1 INNER JOIN vt2 ON vt1.c1 GROUP BY vt2.c0, vt1.c0, vt1.c1;
SELECT vt2.c0, vt1.c0, vt1.c1 FROM vt1 INNER JOIN vt2 ON vt1.c1 WHERE (((0.6827064084651082) BETWEEN (vt1.c0) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END))) GROUP BY vt2.c0, vt1.c0, vt1.c1 UNION SELECT ALL vt2.c0, vt1.c0, vt1.c1 FROM vt1 INNER JOIN vt2 ON vt1.c1 WHERE ((NOT (((0.6827064084651082) BETWEEN (vt1.c0) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END))))) GROUP BY vt2.c0, vt1.c0, vt1.c1 UNION SELECT vt2.c0, vt1.c0, vt1.c1 FROM vt1 INNER JOIN vt2 ON vt1.c1 WHERE (((((0.6827064084651082) BETWEEN (vt1.c0) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END))) ISNULL)) GROUP BY vt2.c0, vt1.c0, vt1.c1;
SELECT vt2.c0, vt1.c0, vt1.c1 FROM vt1 INNER JOIN vt2 ON vt1.c1 GROUP BY vt2.c0, vt1.c0, vt1.c1;
SELECT vt2.c0 FROM vt1, t0 LEFT OUTER JOIN vt2 ON t0.c0 CROSS JOIN vt0 ON HEX(DISTINCT vt2.c0) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt1, t0 LEFT OUTER JOIN vt2 ON t0.c0 CROSS JOIN vt0 ON HEX(DISTINCT vt2.c0) GROUP BY vt2.c0 HAVING (((vt0.c1)) BETWEEN ((((((GROUP_CONCAT(COUNT(COUNT(*))))OR(t0.c0)))AND(vt1.c0)))) AND ((MAX(AVG(vt1.c0))))) UNION ALL SELECT ALL vt2.c0 FROM vt1, t0 LEFT OUTER JOIN vt2 ON t0.c0 CROSS JOIN vt0 ON HEX(DISTINCT vt2.c0) GROUP BY vt2.c0 HAVING (NOT ((((vt0.c1)) BETWEEN ((((((GROUP_CONCAT(COUNT(COUNT(*))))OR(t0.c0)))AND(vt1.c0)))) AND ((MAX(AVG(vt1.c0))))))) UNION ALL SELECT ALL vt2.c0 FROM vt1, t0 LEFT OUTER JOIN vt2 ON t0.c0 CROSS JOIN vt0 ON HEX(DISTINCT vt2.c0) GROUP BY vt2.c0 HAVING (((((vt0.c1)) BETWEEN ((((((GROUP_CONCAT(COUNT(COUNT(*))))OR(t0.c0)))AND(vt1.c0)))) AND ((MAX(AVG(vt1.c0)))))) ISNULL);
SELECT ALL * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.c0, t0.c39, t0.c0)) BETWEEN ((t0.c39, t0.c39, '')) AND ((vt0.c0, vt0.c0, vt0.c0)))) ISNULL)) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT ((((((vt0.c0, t0.c39, t0.c0)) BETWEEN ((t0.c39, t0.c39, '')) AND ((vt0.c0, vt0.c0, vt0.c0)))) ISNULL)))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((((((((vt0.c0, t0.c39, t0.c0)) BETWEEN ((t0.c39, t0.c39, '')) AND ((vt0.c0, vt0.c0, vt0.c0)))) ISNULL)) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (NULL)))AND((vt0.c0 IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c1) BETWEEN (vt0.c1) AND (NULL)))AND((vt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c1) BETWEEN (vt0.c1) AND (NULL)))AND((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt2.c0, t0.c0, t0.c39, vt1.c0, vt1.c1 FROM vt1, vt0, t0, vt2 GROUP BY vt2.c0, t0.c0, t0.c39, vt1.c0, vt1.c1;
SELECT vt2.c0, t0.c0, t0.c39, vt1.c0, vt1.c1 FROM vt1, vt0, t0, vt2 WHERE ((+ (((t0.c39) NOT BETWEEN (t0.c0) AND (vt1.c0))))) GROUP BY vt2.c0, t0.c0, t0.c39, vt1.c0, vt1.c1 UNION SELECT vt2.c0, t0.c0, t0.c39, vt1.c0, vt1.c1 FROM vt1, vt0, t0, vt2 WHERE ((NOT ((+ (((t0.c39) NOT BETWEEN (t0.c0) AND (vt1.c0))))))) GROUP BY vt2.c0, t0.c0, t0.c39, vt1.c0, vt1.c1 UNION SELECT ALL vt2.c0, t0.c0, t0.c39, vt1.c0, vt1.c1 FROM vt1, vt0, t0, vt2 WHERE ((((+ (((t0.c39) NOT BETWEEN (t0.c0) AND (vt1.c0))))) ISNULL)) GROUP BY vt2.c0, t0.c0, t0.c39, vt1.c0, vt1.c1;
SELECT ALL vt2.c0, t0.c0, t0.c39, vt1.c0, vt1.c1 FROM vt1, vt0, t0, vt2 GROUP BY vt2.c0, t0.c0, t0.c39, vt1.c0, vt1.c1;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING SUM(LIKELIHOOD(GROUP_CONCAT(MIN(vt1.c0)), 0.525394283896868)) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (SUM(LIKELIHOOD(GROUP_CONCAT(MIN(vt1.c0)), 0.525394283896868)))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c1, vt1.c0 HAVING ((SUM(LIKELIHOOD(GROUP_CONCAT(MIN(vt1.c0)), 0.525394283896868))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((t0.c39) BETWEEN ((((t0.c39)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (NULL))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((t0.c39) BETWEEN ((((t0.c39)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (NULL))))) UNION ALL SELECT * FROM t0 WHERE (((((t0.c39) BETWEEN ((((t0.c39)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (NULL))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT vt0.c0, vt2.c0, vt1.c0, vt1.c1, t0.c0, t0.c39 FROM vt2, t0, vt0, vt1;
SELECT DISTINCT vt0.c0, vt2.c0, vt1.c0, vt1.c1, t0.c0, t0.c39 FROM vt2, t0, vt0, vt1 WHERE ((((('-1706380019')>=(t0.c0))) IS FALSE)) UNION SELECT DISTINCT vt0.c0, vt2.c0, vt1.c0, vt1.c1, t0.c0, t0.c39 FROM vt2, t0, vt0, vt1 WHERE ((NOT ((((('-1706380019')>=(t0.c0))) IS FALSE)))) UNION SELECT DISTINCT vt0.c0, vt2.c0, vt1.c0, vt1.c1, t0.c0, t0.c39 FROM vt2, t0, vt0, vt1 WHERE ((((((('-1706380019')>=(t0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT vt0.c0, vt2.c0, vt1.c0, vt1.c1, t0.c0, t0.c39 FROM vt2, t0, vt0, vt1;
SELECT ALL vt2.c0 FROM t0, vt0, vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM t0, vt0, vt2 WHERE (CAST(CAST(vt2.c0 AS TEXT) AS TEXT)) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM t0, vt0, vt2 WHERE ((NOT (CAST(CAST(vt2.c0 AS TEXT) AS TEXT)))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM t0, vt0, vt2 WHERE (((CAST(CAST(vt2.c0 AS TEXT) AS TEXT)) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM t0, vt0, vt2 GROUP BY vt2.c0;
SELECT t0.c0 FROM t0 FULL OUTER JOIN vt1 ON (+ (COALESCE(vt1.c1, vt1.c0))) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 FULL OUTER JOIN vt1 ON (+ (COALESCE(vt1.c1, vt1.c0))) GROUP BY t0.c0 HAVING MIN(((TOTAL(MIN(vt1.c1)))>>(t0.c39))) UNION ALL SELECT t0.c0 FROM t0 FULL OUTER JOIN vt1 ON (+ (COALESCE(vt1.c1, vt1.c0))) GROUP BY t0.c0 HAVING (NOT (MIN(((TOTAL(MIN(vt1.c1)))>>(t0.c39))))) UNION ALL SELECT t0.c0 FROM t0 FULL OUTER JOIN vt1 ON (+ (COALESCE(vt1.c1, vt1.c0))) GROUP BY t0.c0 HAVING ((MIN(((TOTAL(MIN(vt1.c1)))>>(t0.c39)))) ISNULL);
SELECT vt1.c1, vt2.c0, vt1.c0 FROM vt1 CROSS JOIN vt2 ON (((((vt1.c1)*(0.6899625145410095)), x'', (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))))>=(((- (NULL)), UPPER(DISTINCT vt2.c0), ((vt1.c1)AND(vt1.c0)))));
SELECT ALL vt1.c1, vt2.c0, vt1.c0 FROM vt1 CROSS JOIN vt2 ON (((((vt1.c1)*(0.6899625145410095)), x'', (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))))>=(((- (NULL)), UPPER(DISTINCT vt2.c0), ((vt1.c1)AND(vt1.c0))))) WHERE (((((((((vt2.c0)OR(vt2.c0)))AND(vt1.c1)))OR(CAST(vt1.c0 AS BLOB))))AND(((vt2.c0) NOT NULL)))) UNION ALL SELECT ALL vt1.c1, vt2.c0, vt1.c0 FROM vt1 CROSS JOIN vt2 ON (((((vt1.c1)*(0.6899625145410095)), x'', (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))))>=(((- (NULL)), UPPER(DISTINCT vt2.c0), ((vt1.c1)AND(vt1.c0))))) WHERE ((NOT (((((((((vt2.c0)OR(vt2.c0)))AND(vt1.c1)))OR(CAST(vt1.c0 AS BLOB))))AND(((vt2.c0) NOT NULL)))))) UNION ALL SELECT vt1.c1, vt2.c0, vt1.c0 FROM vt1 CROSS JOIN vt2 ON (((((vt1.c1)*(0.6899625145410095)), x'', (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))))>=(((- (NULL)), UPPER(DISTINCT vt2.c0), ((vt1.c1)AND(vt1.c0))))) WHERE (((((((((((vt2.c0)OR(vt2.c0)))AND(vt1.c1)))OR(CAST(vt1.c0 AS BLOB))))AND(((vt2.c0) NOT NULL)))) ISNULL));
SELECT vt1.c1, vt2.c0, vt1.c0 FROM vt1 CROSS JOIN vt2 ON (((((vt1.c1)*(0.6899625145410095)), x'', (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))))>=(((- (NULL)), UPPER(DISTINCT vt2.c0), ((vt1.c1)AND(vt1.c0)))));
SELECT DISTINCT * FROM vt2, vt0, t0, vt1;
SELECT DISTINCT * FROM vt2, vt0, t0, vt1 WHERE (((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (vt0.c1) AND (((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) UNION SELECT DISTINCT * FROM vt2, vt0, t0, vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (vt0.c1) AND (((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt2, vt0, t0, vt1 WHERE (((((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (vt0.c1) AND (((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt2, vt0, t0, vt1;
SELECT ALL vt0.c0, vt2.c0 FROM vt0, vt1, t0 NATURAL JOIN vt2 GROUP BY vt0.c0, vt2.c0;
SELECT ALL vt0.c0, vt2.c0 FROM vt0, vt1, t0 NATURAL JOIN vt2 WHERE (CAST(x'' AS TEXT)) GROUP BY vt0.c0, vt2.c0 UNION SELECT ALL vt0.c0, vt2.c0 FROM vt0, vt1, t0 NATURAL JOIN vt2 WHERE ((NOT (CAST(x'' AS TEXT)))) GROUP BY vt0.c0, vt2.c0 UNION SELECT vt0.c0, vt2.c0 FROM vt0, vt1, t0 NATURAL JOIN vt2 WHERE (((CAST(x'' AS TEXT)) ISNULL)) GROUP BY vt0.c0, vt2.c0;
SELECT ALL vt0.c0, vt2.c0 FROM vt0, vt1, t0 NATURAL JOIN vt2 GROUP BY vt0.c0, vt2.c0;
SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING (((TIME(vt0.c1, vt1.c1, vt1.c0, COUNT(*), vt0.c1), (NOT (AVG(vt1.c0))), -1612938648, TOTAL(vt0.c0), TOTAL(vt0.c1)))<=((CAST(MAX(COUNT(*)) AS NUMERIC), TOTAL(vt0.c0), COUNT(vt0.c1), (GROUP_CONCAT(vt1.c0) IN (MAX(vt0.c1), vt1.c1)), CASE WHEN vt1.c1 THEN vt0.c1 ELSE vt0.c1 END))) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING (NOT ((((TIME(vt0.c1, vt1.c1, vt1.c0, COUNT(*), vt0.c1), (NOT (AVG(vt1.c0))), -1612938648, TOTAL(vt0.c0), TOTAL(vt0.c1)))<=((CAST(MAX(COUNT(*)) AS NUMERIC), TOTAL(vt0.c0), COUNT(vt0.c1), (GROUP_CONCAT(vt1.c0) IN (MAX(vt0.c1), vt1.c1)), CASE WHEN vt1.c1 THEN vt0.c1 ELSE vt0.c1 END))))) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING (((((TIME(vt0.c1, vt1.c1, vt1.c0, COUNT(*), vt0.c1), (NOT (AVG(vt1.c0))), -1612938648, TOTAL(vt0.c0), TOTAL(vt0.c1)))<=((CAST(MAX(COUNT(*)) AS NUMERIC), TOTAL(vt0.c0), COUNT(vt0.c1), (GROUP_CONCAT(vt1.c0) IN (MAX(vt0.c1), vt1.c1)), CASE WHEN vt1.c1 THEN vt0.c1 ELSE vt0.c1 END)))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((TIME(vt0.c0, vt0.c0, vt0.c1)) IS FALSE)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((TIME(vt0.c0, vt0.c0, vt0.c1)) IS FALSE)))) UNION ALL SELECT * FROM vt0 WHERE (((((TIME(vt0.c0, vt0.c0, vt0.c1)) IS FALSE)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt1 CROSS JOIN t0 ON CAST(((t0.c39)IS(vt0.c0)) AS TEXT) RIGHT OUTER JOIN vt0 ON ((((((vt1.c1)+(vt0.c0)))AND(vt0.c0)))OR(vt0.c1 COLLATE NOCASE));
SELECT ALL t0.c39, vt2.c0, vt1.c1, vt0.c1, t0.c0, vt0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN t0 ON ((vt0.c1 COLLATE BINARY)>(((t0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) LEFT OUTER JOIN vt2 ON x'' RIGHT OUTER JOIN vt0 ON ((vt2.c0) ISNULL) GROUP BY t0.c39, vt2.c0, vt1.c1, vt0.c1, t0.c0, vt0.c0, vt1.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING x'' UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (x'')) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((x'') ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING x'' UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (x'')) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((x'') ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT * FROM vt2, t0, vt1;
SELECT ALL * FROM vt2, t0, vt1 WHERE (((vt2.c0) NOT BETWEEN (t0.c39) AND (((((t0.c39)OR(vt1.c1)))AND(vt1.c1))))) UNION ALL SELECT * FROM vt2, t0, vt1 WHERE ((NOT (((vt2.c0) NOT BETWEEN (t0.c39) AND (((((t0.c39)OR(vt1.c1)))AND(vt1.c1))))))) UNION ALL SELECT * FROM vt2, t0, vt1 WHERE (((((vt2.c0) NOT BETWEEN (t0.c39) AND (((((t0.c39)OR(vt1.c1)))AND(vt1.c1))))) ISNULL));
SELECT * FROM vt2, t0, vt1;
SELECT DISTINCT * FROM vt2, vt0, vt1;
SELECT DISTINCT * FROM vt2, vt0, vt1 WHERE (CASE WHEN ((vt2.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN json_patch(NULL, vt1.c0) ELSE (((vt0.c1)) BETWEEN (('-878488970')) AND ((vt2.c0))) END) UNION SELECT DISTINCT * FROM vt2, vt0, vt1 WHERE ((NOT (CASE WHEN ((vt2.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN json_patch(NULL, vt1.c0) ELSE (((vt0.c1)) BETWEEN (('-878488970')) AND ((vt2.c0))) END))) UNION SELECT DISTINCT * FROM vt2, vt0, vt1 WHERE (((CASE WHEN ((vt2.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN json_patch(NULL, vt1.c0) ELSE (((vt0.c1)) BETWEEN (('-878488970')) AND ((vt2.c0))) END) ISNULL));
SELECT DISTINCT * FROM vt2, vt0, vt1;
SELECT ALL vt1.c1 FROM vt2 INNER JOIN t0 ON CAST(t0.c39 AS REAL) COLLATE BINARY RIGHT OUTER JOIN vt1 ON json_insert(vt1.c1 COLLATE RTRIM, ((vt2.c0) NOT NULL), (((vt1.c1))>=((vt1.c1)))) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt2 INNER JOIN t0 ON CAST(t0.c39 AS REAL) COLLATE BINARY RIGHT OUTER JOIN vt1 ON json_insert(vt1.c1 COLLATE RTRIM, ((vt2.c0) NOT NULL), (((vt1.c1))>=((vt1.c1)))) WHERE (NULL) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt2 INNER JOIN t0 ON CAST(t0.c39 AS REAL) COLLATE BINARY RIGHT OUTER JOIN vt1 ON json_insert(vt1.c1 COLLATE RTRIM, ((vt2.c0) NOT NULL), (((vt1.c1))>=((vt1.c1)))) WHERE ((NOT (NULL))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt2 INNER JOIN t0 ON CAST(t0.c39 AS REAL) COLLATE BINARY RIGHT OUTER JOIN vt1 ON json_insert(vt1.c1 COLLATE RTRIM, ((vt2.c0) NOT NULL), (((vt1.c1))>=((vt1.c1)))) WHERE (((NULL) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt2 INNER JOIN t0 ON CAST(t0.c39 AS REAL) COLLATE BINARY RIGHT OUTER JOIN vt1 ON json_insert(vt1.c1 COLLATE RTRIM, ((vt2.c0) NOT NULL), (((vt1.c1))>=((vt1.c1)))) GROUP BY vt1.c1;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING CASE CAST(MAX(MIN(vt2.c0)) AS REAL)  WHEN ((SUM(COUNT(*)))>>(COUNT(MAX(TOTAL(vt2.c0))))) THEN MAX(COUNT(COUNT(*))) ELSE MIN(AVG(MAX(vt2.c0))) END UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (CASE CAST(MAX(MIN(vt2.c0)) AS REAL)  WHEN ((SUM(COUNT(*)))>>(COUNT(MAX(TOTAL(vt2.c0))))) THEN MAX(COUNT(COUNT(*))) ELSE MIN(AVG(MAX(vt2.c0))) END)) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((CASE CAST(MAX(MIN(vt2.c0)) AS REAL)  WHEN ((SUM(COUNT(*)))>>(COUNT(MAX(TOTAL(vt2.c0))))) THEN MAX(COUNT(COUNT(*))) ELSE MIN(AVG(MAX(vt2.c0))) END) ISNULL);
SELECT ALL * FROM t0, vt1, vt0, vt2;
SELECT * FROM t0, vt1, vt0, vt2 WHERE (CAST(CASE vt0.c1  WHEN vt2.c0 THEN 1.243699117E9 END AS REAL)) UNION ALL SELECT * FROM t0, vt1, vt0, vt2 WHERE ((NOT (CAST(CASE vt0.c1  WHEN vt2.c0 THEN 1.243699117E9 END AS REAL)))) UNION ALL SELECT * FROM t0, vt1, vt0, vt2 WHERE (((CAST(CASE vt0.c1  WHEN vt2.c0 THEN 1.243699117E9 END AS REAL)) ISNULL));
SELECT ALL * FROM t0, vt1, vt0, vt2;
SELECT DISTINCT t0.c0, vt1.c1, vt2.c0, vt1.c0, t0.c39 FROM vt1, t0, vt2;
SELECT DISTINCT t0.c0, vt1.c1, vt2.c0, vt1.c0, t0.c39 FROM vt1, t0, vt2 WHERE (((0Xffffffff8c2862bb) NOT BETWEEN (((vt2.c0) IS TRUE)) AND (NULL))) UNION SELECT DISTINCT t0.c0, vt1.c1, vt2.c0, vt1.c0, t0.c39 FROM vt1, t0, vt2 WHERE ((NOT (((0xffffffff8c2862bb) NOT BETWEEN (((vt2.c0) IS TRUE)) AND (NULL))))) UNION SELECT DISTINCT t0.c0, vt1.c1, vt2.c0, vt1.c0, t0.c39 FROM vt1, t0, vt2 WHERE (((((0Xffffffff8c2862bb) NOT BETWEEN (((vt2.c0) IS TRUE)) AND (NULL))) ISNULL));
SELECT DISTINCT t0.c0, vt1.c1, vt2.c0, vt1.c0, t0.c39 FROM vt1, t0, vt2;
SELECT vt0.c0, t0.c39, t0.c0 FROM vt0, vt2, t0, vt1 GROUP BY vt0.c0, t0.c39, t0.c0;
SELECT vt0.c0, t0.c39, t0.c0 FROM vt0, vt2, t0, vt1 WHERE (CASE WHEN t0.c39 THEN (NOT ('''(')) END) GROUP BY vt0.c0, t0.c39, t0.c0 UNION SELECT vt0.c0, t0.c39, t0.c0 FROM vt0, vt2, t0, vt1 WHERE ((NOT (CASE WHEN t0.c39 THEN (NOT ('''(')) END))) GROUP BY vt0.c0, t0.c39, t0.c0 UNION SELECT vt0.c0, t0.c39, t0.c0 FROM vt0, vt2, t0, vt1 WHERE (((CASE WHEN t0.c39 THEN (NOT ('''(')) END) ISNULL)) GROUP BY vt0.c0, t0.c39, t0.c0;
SELECT vt0.c0, t0.c39, t0.c0 FROM vt0, vt2, t0, vt1 GROUP BY vt0.c0, t0.c39, t0.c0;
SELECT ALL t0.c39, t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c39, t0.c0;
SELECT ALL t0.c39, t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c39, t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c39, t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c39, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c39, t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c39, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c39, t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c39, t0.c0;
SELECT ALL t0.c39, t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c39, t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c39, t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c39, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c39, t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c39, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c39, t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c39, t0.c0;
SELECT * FROM t0, vt1;
SELECT * FROM t0, vt1 WHERE (((2.92665038E8)==((- (vt1.c1))))) UNION ALL SELECT * FROM t0, vt1 WHERE ((NOT (((2.92665038E8)==((- (vt1.c1))))))) UNION ALL SELECT ALL * FROM t0, vt1 WHERE (((((2.92665038E8)=((- (vt1.c1))))) ISNULL));
SELECT * FROM t0, vt1;
SELECT DISTINCT * FROM vt1, t0, vt0 RIGHT OUTER JOIN vt2 ON CASE WHEN ((vt0.c0)<(1.243699117E9)) THEN (vt2.c0 IN (t0.c0, vt0.c0)) ELSE (((vt1.c0, vt1.c0, NULL))=((t0.c39, vt0.c0, vt1.c0))) END;
SELECT DISTINCT * FROM vt1, t0, vt0 RIGHT OUTER JOIN vt2 ON CASE WHEN ((vt0.c0)<(1.243699117E9)) THEN (vt2.c0 IN (t0.c0, vt0.c0)) ELSE (((vt1.c0, vt1.c0, NULL))=((t0.c39, vt0.c0, vt1.c0))) END WHERE (((vt0.c0) NOT BETWEEN ((~ (t0.c0))) AND ((((vt0.c1, vt2.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, NULL, vt0.c1)) AND ((x'', vt1.c1, '-878488970')))))) UNION SELECT DISTINCT * FROM vt1 NOT INDEXED, t0, vt0 RIGHT OUTER JOIN vt2 ON CASE WHEN ((vt0.c0)<(1.243699117E9)) THEN (vt2.c0 IN (t0.c0, vt0.c0)) ELSE (((vt1.c0, vt1.c0, NULL))==((t0.c39, vt0.c0, vt1.c0))) END WHERE ((NOT (((vt0.c0) NOT BETWEEN ((~ (t0.c0))) AND ((((vt0.c1, vt2.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, NULL, vt0.c1)) AND ((x'', vt1.c1, '-878488970')))))))) UNION SELECT DISTINCT * FROM vt1, t0, vt0 RIGHT OUTER JOIN vt2 ON CASE WHEN ((vt0.c0)<(1.243699117E9)) THEN (vt2.c0 IN (t0.c0, vt0.c0)) ELSE (((vt1.c0, vt1.c0, NULL))==((t0.c39, vt0.c0, vt1.c0))) END WHERE (((((vt0.c0) NOT BETWEEN ((~ (t0.c0))) AND ((((vt0.c1, vt2.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, NULL, vt0.c1)) AND ((x'', vt1.c1, '-878488970')))))) ISNULL));
SELECT DISTINCT * FROM vt1, t0, vt0 RIGHT OUTER JOIN vt2 ON CASE WHEN ((vt0.c0)<(1.243699117E9)) THEN (vt2.c0 IN (t0.c0, vt0.c0)) ELSE (((vt1.c0, vt1.c0, NULL))=((t0.c39, vt0.c0, vt1.c0))) END;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((0.09690147563050588)OR(t0.c39 COLLATE BINARY)))OR(((t0.c39)+(t0.c39))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((0.09690147563050588)OR(t0.c39 COLLATE BINARY)))OR(((t0.c39)+(t0.c39))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((0.09690147563050588)OR(t0.c39 COLLATE BINARY)))OR(((t0.c39)+(t0.c39))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, vt0.c0, t0.c39, vt1.c1, vt1.c0, vt2.c0, vt0.c1 FROM vt2, vt1, vt0 NOT INDEXED, t0 GROUP BY t0.c0, vt0.c0, t0.c39, vt1.c1, vt1.c0, vt2.c0, vt0.c1;
SELECT ALL t0.c0, vt0.c0, t0.c39, vt1.c1, vt1.c0, vt2.c0, vt0.c1 FROM vt2, vt1, vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c39, vt1.c1, vt1.c0, vt2.c0, vt0.c1 HAVING MIN(TOTAL(t0.c39)) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c39, vt1.c1, vt1.c0, vt2.c0, vt0.c1 FROM vt2, vt1, vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c39, vt1.c1, vt1.c0, vt2.c0, vt0.c1 HAVING (NOT (MIN(TOTAL(t0.c39)))) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c39, vt1.c1, vt1.c0, vt2.c0, vt0.c1 FROM vt2, vt1, vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c39, vt1.c1, vt1.c0, vt2.c0, vt0.c1 HAVING ((MIN(TOTAL(t0.c39))) ISNULL);
SELECT * FROM vt1, t0 RIGHT OUTER JOIN vt2 ON (((vt0.c1)) BETWEEN ((((vt0.c1)%(vt1.c0)))) AND (((((vt0.c1))!=((vt1.c0)))))) RIGHT OUTER JOIN vt0 ON IFNULL(TRIM(DISTINCT vt1.c0, t0.c0), ((t0.c0)==(vt1.c0)));
SELECT DISTINCT t0.c39, t0.c0, vt2.c0, vt1.c1, vt0.c1, vt0.c0 FROM vt1, vt2, t0, vt0;
SELECT DISTINCT t0.c39, t0.c0, vt2.c0, vt1.c1, vt0.c1, vt0.c0 FROM vt1, vt2, t0, vt0 WHERE ((((+ (t0.c39)))+(t0.c0))) UNION SELECT DISTINCT t0.c39, t0.c0, vt2.c0, vt1.c1, vt0.c1, vt0.c0 FROM vt1, vt2, t0, vt0 WHERE ((NOT ((((+ (t0.c39)))+(t0.c0))))) UNION SELECT DISTINCT t0.c39, t0.c0, vt2.c0, vt1.c1, vt0.c1, vt0.c0 FROM vt1, vt2, t0, vt0 WHERE ((((((+ (t0.c39)))+(t0.c0))) ISNULL));
SELECT DISTINCT t0.c39, t0.c0, vt2.c0, vt1.c1, vt0.c1, vt0.c0 FROM vt1, vt2, t0, vt0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (vt2.c0) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT (vt2.c0))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((vt2.c0) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, vt0 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, vt0 GROUP BY vt2.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL vt2.c0 FROM vt2, vt0 GROUP BY vt2.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT vt2.c0 FROM vt2, vt0 GROUP BY vt2.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL t0.c0, t0.c39 FROM t0;
SELECT t0.c0, t0.c39 FROM t0 WHERE (((CASE WHEN t0.c39 THEN t0.c39 END) IS FALSE)) UNION ALL SELECT ALL t0.c0, t0.c39 FROM t0 WHERE ((NOT (((CASE WHEN t0.c39 THEN t0.c39 END) IS FALSE)))) UNION ALL SELECT t0.c0, t0.c39 FROM t0 WHERE (((((CASE WHEN t0.c39 THEN t0.c39 END) IS FALSE)) ISNULL));
SELECT ALL t0.c0, t0.c39 FROM t0;
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE (((((0.11322760090610495)AND(HEX(vt2.c0))))OR((vt2.c0 IN ())))) UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT (((((0.11322760090610495)AND(HEX(vt2.c0))))OR((vt2.c0 IN ())))))) UNION SELECT DISTINCT * FROM vt2 WHERE (((((((0.11322760090610495)AND(HEX(vt2.c0))))OR((vt2.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT vt0.c0, vt0.c1, vt1.c0, vt2.c0, vt1.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt2.c0, vt1.c1;
SELECT vt0.c0, vt0.c1, vt1.c0, vt2.c0, vt1.c1 FROM vt0, vt2, vt1 WHERE (CASE WHEN CAST(vt1.c1 AS BLOB) THEN CASE WHEN vt1.c1 THEN vt0.c1 END END) GROUP BY vt0.c0, vt0.c1, vt1.c0, vt2.c0, vt1.c1 UNION SELECT vt0.c0, vt0.c1, vt1.c0, vt2.c0, vt1.c1 FROM vt0, vt2, vt1 WHERE ((NOT (CASE WHEN CAST(vt1.c1 AS BLOB) THEN CASE WHEN vt1.c1 THEN vt0.c1 END END))) GROUP BY vt0.c0, vt0.c1, vt1.c0, vt2.c0, vt1.c1 UNION SELECT vt0.c0, vt0.c1, vt1.c0, vt2.c0, vt1.c1 FROM vt0, vt2, vt1 WHERE (((CASE WHEN CAST(vt1.c1 AS BLOB) THEN CASE WHEN vt1.c1 THEN vt0.c1 END END) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt1.c0, vt2.c0, vt1.c1;
SELECT vt0.c0, vt0.c1, vt1.c0, vt2.c0, vt1.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt2.c0, vt1.c1;
SELECT ALL vt0.c0, t0.c0, t0.c39 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, t0.c39;
SELECT ALL vt0.c0, t0.c0, t0.c39 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, t0.c39 HAVING ((((COUNT(TOTAL(t0.c39)))AND(LOWER(DISTINCT t0.c39))))OR(COUNT(*))) UNION ALL SELECT ALL vt0.c0, t0.c0, t0.c39 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, t0.c39 HAVING (NOT (((((COUNT(TOTAL(t0.c39)))AND(LOWER(DISTINCT t0.c39))))OR(COUNT(*))))) UNION ALL SELECT ALL vt0.c0, t0.c0, t0.c39 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, t0.c39 HAVING ((((((COUNT(TOTAL(t0.c39)))AND(LOWER(DISTINCT t0.c39))))OR(COUNT(*)))) ISNULL);
SELECT * FROM vt1 FULL OUTER JOIN t0 ON CHANGES();
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON CHANGES() WHERE ((CAST(vt1.c1 AS INTEGER) IN ())) UNION ALL SELECT * FROM vt1 FULL OUTER JOIN t0 ON CHANGES() WHERE ((NOT ((CAST(vt1.c1 AS INTEGER) IN ())))) UNION ALL SELECT * FROM vt1 FULL OUTER JOIN t0 ON CHANGES() WHERE ((((CAST(vt1.c1 AS INTEGER) IN ())) ISNULL));
SELECT * FROM vt1 FULL OUTER JOIN t0 ON CHANGES();
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (CAST((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) AS TEXT)) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CAST((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) AS TEXT)))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((CAST((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) AS TEXT)) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt2.c0, vt1.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON vt2.c0 GROUP BY vt2.c0, vt1.c1, vt1.c0;
SELECT ALL vt2.c0, vt1.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON vt2.c0 WHERE (highlight('2112018148' COLLATE RTRIM, (NOT (vt2.c0)), LTRIM(vt1.c0), ((vt1.c1) NOTNULL))) GROUP BY vt2.c0, vt1.c1, vt1.c0 UNION SELECT vt2.c0, vt1.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON vt2.c0 WHERE ((NOT (highlight('2112018148' COLLATE RTRIM, (NOT (vt2.c0)), LTRIM(vt1.c0), ((vt1.c1) NOTNULL))))) GROUP BY vt2.c0, vt1.c1, vt1.c0 UNION SELECT vt2.c0, vt1.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON vt2.c0 WHERE (((highlight('2112018148' COLLATE RTRIM, (NOT (vt2.c0)), LTRIM(vt1.c0), ((vt1.c1) NOTNULL))) ISNULL)) GROUP BY vt2.c0, vt1.c1, vt1.c0;
SELECT ALL vt2.c0, vt1.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON vt2.c0 GROUP BY vt2.c0, vt1.c1, vt1.c0;
SELECT ALL t0.c39, vt1.c0, t0.c0 FROM vt2 INNER JOIN t0 ON ((vt2.c0 COLLATE BINARY) BETWEEN (((vt1.c0) IS TRUE)) AND ('')) FULL OUTER JOIN vt1 ON vt1.c0 GROUP BY t0.c39, vt1.c0, t0.c0;
SELECT ALL t0.c0, vt1.c1, vt0.c1, t0.c39, vt0.c0 FROM vt1, t0, vt0 RIGHT OUTER JOIN vt2 ON (NOT ((vt2.c0 IN ())));
SELECT t0.c0, vt1.c1, vt0.c1, t0.c39, vt0.c0 FROM vt1, t0, vt0 RIGHT OUTER JOIN vt2 ON (NOT ((vt2.c0 IN ()))) WHERE (((((((((CASE vt0.c0  WHEN 0Xffffffff93c39d61 THEN t0.c39 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END)AND(((vt2.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))))AND(((vt2.c0)<(vt0.c0)))))OR(MIN(vt1.c0, vt0.c0))))OR((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt2.c0)))))) UNION ALL SELECT t0.c0, vt1.c1, vt0.c1, t0.c39, vt0.c0 FROM vt1, t0, vt0 RIGHT OUTER JOIN vt2 ON (NOT ((vt2.c0 IN ()))) WHERE ((NOT (((((((((CASE vt0.c0  WHEN 0xffffffff93c39d61 THEN t0.c39 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END)AND(((vt2.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))))AND(((vt2.c0)<(vt0.c0)))))OR(MIN(vt1.c0, vt0.c0))))OR((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt2.c0)))))))) UNION ALL SELECT ALL t0.c0, vt1.c1, vt0.c1, t0.c39, vt0.c0 FROM vt1, t0, vt0 RIGHT OUTER JOIN vt2 ON (NOT ((vt2.c0 IN ()))) WHERE (((((((((((CASE vt0.c0  WHEN 0Xffffffff93c39d61 THEN t0.c39 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END)AND(((vt2.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))))AND(((vt2.c0)<(vt0.c0)))))OR(MIN(vt1.c0, vt0.c0))))OR((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt2.c0)))))) ISNULL));
SELECT ALL t0.c0, vt1.c1, vt0.c1, t0.c39, vt0.c0 FROM vt1, t0, vt0 RIGHT OUTER JOIN vt2 ON (NOT ((vt2.c0 IN ())));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt1 ON json_array((vt1.c0 IN (t0.c0)), vt1.c1) CROSS JOIN vt2 ON CAST(((vt1.c1)LIKE(vt1.c1)) AS TEXT) RIGHT OUTER JOIN vt0 ON json_remove(0.824263766835899, vt0.c1 COLLATE RTRIM);
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt1 ON json_array((vt1.c0 IN (t0.c0)), vt1.c1) CROSS JOIN vt2 ON CAST(((vt1.c1)LIKE(vt1.c1)) AS TEXT) RIGHT OUTER JOIN vt0 ON json_remove(0.824263766835899, vt0.c1 COLLATE RTRIM) WHERE (((((t0.c0)) BETWEEN ((vt0.c0)) AND ((0Xffffffff9a4ab50d))) IN (x'854d'))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt1 ON json_array((vt1.c0 IN (t0.c0)), vt1.c1) CROSS JOIN vt2 ON CAST(((vt1.c1)LIKE(vt1.c1)) AS TEXT) RIGHT OUTER JOIN vt0 ON json_remove(0.824263766835899, vt0.c1 COLLATE RTRIM) WHERE ((NOT (((((t0.c0)) BETWEEN ((vt0.c0)) AND ((0Xffffffff9a4ab50d))) IN (x'854d'))))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt1 ON json_array((vt1.c0 IN (t0.c0)), vt1.c1) CROSS JOIN vt2 ON CAST(((vt1.c1)LIKE(vt1.c1)) AS TEXT) RIGHT OUTER JOIN vt0 ON json_remove(0.824263766835899, vt0.c1 COLLATE RTRIM) WHERE (((((((t0.c0)) BETWEEN ((vt0.c0)) AND ((0Xffffffff9a4ab50d))) IN (x'854d'))) ISNULL));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt1 ON json_array((vt1.c0 IN (t0.c0)), vt1.c1) CROSS JOIN vt2 ON CAST(((vt1.c1)LIKE(vt1.c1)) AS TEXT) RIGHT OUTER JOIN vt0 ON json_remove(0.824263766835899, vt0.c1 COLLATE RTRIM);
SELECT ALL vt0.c0, vt1.c1, t0.c0 FROM vt0, t0 NOT INDEXED CROSS JOIN vt1 ON ((((t0.c39) BETWEEN (vt1.c1) AND (x'')))*(vt1.c1 COLLATE BINARY)) GROUP BY vt0.c0, vt1.c1, t0.c0;
SELECT vt0.c0, vt1.c1, t0.c0 FROM vt0, t0 CROSS JOIN vt1 ON ((((t0.c39) BETWEEN (vt1.c1) AND (x'')))*(vt1.c1 COLLATE BINARY)) WHERE (((((t0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) IN ())) GROUP BY vt0.c0, vt1.c1, t0.c0 UNION SELECT ALL vt0.c0, vt1.c1, t0.c0 FROM vt0, t0 CROSS JOIN vt1 ON ((((t0.c39) BETWEEN (vt1.c1) AND (x'')))*(vt1.c1 COLLATE BINARY)) WHERE ((NOT (((((t0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) IN ())))) GROUP BY vt0.c0, vt1.c1, t0.c0 UNION SELECT ALL vt0.c0, vt1.c1, t0.c0 FROM vt0, t0 CROSS JOIN vt1 ON ((((t0.c39) BETWEEN (vt1.c1) AND (x'')))*(vt1.c1 COLLATE BINARY)) WHERE (((((((t0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) IN ())) ISNULL)) GROUP BY vt0.c0, vt1.c1, t0.c0;
SELECT ALL vt0.c0, vt1.c1, t0.c0 FROM vt0, t0 NOT INDEXED CROSS JOIN vt1 ON ((((t0.c39) BETWEEN (vt1.c1) AND (x'')))*(vt1.c1 COLLATE BINARY)) GROUP BY vt0.c0, vt1.c1, t0.c0;
SELECT ALL vt1.c1, vt2.c0 FROM t0, vt1, vt2 GROUP BY vt1.c1, vt2.c0;
SELECT ALL vt1.c1, vt2.c0 FROM t0, vt1, vt2 GROUP BY vt1.c1, vt2.c0 HAVING COUNT(t0.c39) UNION ALL SELECT ALL vt1.c1, vt2.c0 FROM t0, vt1, vt2 GROUP BY vt1.c1, vt2.c0 HAVING (NOT (COUNT(t0.c39))) UNION ALL SELECT ALL vt1.c1, vt2.c0 FROM t0, vt1, vt2 GROUP BY vt1.c1, vt2.c0 HAVING ((COUNT(t0.c39)) ISNULL);
SELECT ALL vt1.c1, vt2.c0 FROM t0, vt1, vt2 GROUP BY vt1.c1, vt2.c0;
SELECT ALL vt1.c1, vt2.c0 FROM t0, vt1, vt2 GROUP BY vt1.c1, vt2.c0 HAVING COUNT(t0.c39) UNION ALL SELECT ALL vt1.c1, vt2.c0 FROM t0, vt1, vt2 GROUP BY vt1.c1, vt2.c0 HAVING (NOT (COUNT(t0.c39))) UNION ALL SELECT ALL vt1.c1, vt2.c0 FROM t0, vt1, vt2 GROUP BY vt1.c1, vt2.c0 HAVING ((COUNT(t0.c39)) ISNULL);
SELECT ALL vt1.c1, vt2.c0 FROM t0, vt1, vt2 GROUP BY vt1.c1, vt2.c0;
SELECT SUM(((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (TRIM(t0.c39, t0.c0)))) FROM vt0, vt1, t0, vt2 ORDER BY ((((((((((vt1.c1) IS FALSE))AND(vt2.c0 COLLATE BINARY)))OR(vt2.c0 COLLATE NOCASE)))OR(vt0.c1)))OR(((vt0.c0) ISNULL))) DESC  NULLS FIRST, CASE ((vt2.c0) NOT NULL)  WHEN COALESCE(DISTINCT NULL, t0.c39, vt0.c0, t0.c0) THEN ((-881905449)LIKE(t0.c0)) WHEN (vt1.c1 IN ()) THEN ((vt1.c1)>>(1836625400)) WHEN ((t0.c0) NOT BETWEEN (vt2.c0) AND (vt0.c1)) THEN vt0.c1 ELSE (((vt1.c0))>((t0.c0))) END  NULLS FIRST;
SELECT * FROM t0 CROSS JOIN vt0 ON ((((vt0.c1) BETWEEN (vt0.c1) AND (t0.c0))) IS TRUE);
SELECT * FROM t0 CROSS JOIN vt0 ON ((((vt0.c1) BETWEEN (vt0.c1) AND (t0.c0))) IS TRUE) WHERE (CASE (~ (t0.c0))  WHEN ((((((((vt0.c1)OR(vt0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) THEN x'4e7c' COLLATE NOCASE ELSE (t0.c0 IN (NULL)) END) UNION ALL SELECT * FROM t0 CROSS JOIN vt0 ON ((((vt0.c1) BETWEEN (vt0.c1) AND (t0.c0))) IS TRUE) WHERE ((NOT (CASE (~ (t0.c0))  WHEN ((((((((vt0.c1)OR(vt0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) THEN x'4e7c' COLLATE NOCASE ELSE (t0.c0 IN (NULL)) END))) UNION ALL SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((((vt0.c1) BETWEEN (vt0.c1) AND (t0.c0))) IS TRUE) WHERE (((CASE (~ (t0.c0))  WHEN ((((((((vt0.c1)OR(vt0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) THEN x'4e7c' COLLATE NOCASE ELSE (t0.c0 IN (NULL)) END) ISNULL));
SELECT * FROM t0 CROSS JOIN vt0 ON ((((vt0.c1) BETWEEN (vt0.c1) AND (t0.c0))) IS TRUE);
SELECT DISTINCT t0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c0 FROM vt0, t0 WHERE (json_valid(vt0.c0) COLLATE NOCASE) UNION SELECT DISTINCT t0.c0 FROM vt0, t0 WHERE ((NOT (json_valid(vt0.c0) COLLATE NOCASE))) UNION SELECT DISTINCT t0.c0 FROM vt0, t0 WHERE (((json_valid(vt0.c0) COLLATE NOCASE) ISNULL));
SELECT DISTINCT t0.c0 FROM vt0, t0;
SELECT vt2.c0, t0.c39 FROM vt1, vt2, t0 GROUP BY vt2.c0, t0.c39;
SELECT ALL vt2.c0, t0.c39 FROM vt1, vt2, t0 WHERE (((ABS(vt2.c0))<=(CAST(vt1.c0 AS NUMERIC)))) GROUP BY vt2.c0, t0.c39 UNION SELECT vt2.c0, t0.c39 FROM vt1, vt2, t0 WHERE ((NOT (((ABS(vt2.c0))<=(CAST(vt1.c0 AS NUMERIC)))))) GROUP BY vt2.c0, t0.c39 UNION SELECT ALL vt2.c0, t0.c39 FROM vt1, vt2, t0 WHERE (((((ABS(vt2.c0))<=(CAST(vt1.c0 AS NUMERIC)))) ISNULL)) GROUP BY vt2.c0, t0.c39;
SELECT vt2.c0, t0.c39 FROM vt1, vt2, t0 GROUP BY vt2.c0, t0.c39;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(LOWER(COUNT(COUNT(*)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(LOWER(COUNT(COUNT(*)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(LOWER(COUNT(COUNT(*))))) ISNULL);
SELECT * FROM t0, vt1, vt0;
SELECT ALL * FROM t0, vt1, vt0 WHERE (((json_array(t0.c39, vt0.c0))%((~ (t0.c0))))) UNION ALL SELECT ALL * FROM t0, vt1, vt0 WHERE ((NOT (((json_array(t0.c39, vt0.c0))%((~ (t0.c0))))))) UNION ALL SELECT ALL * FROM t0, vt1, vt0 WHERE (((((json_array(t0.c39, vt0.c0))%((~ (t0.c0))))) ISNULL));
SELECT * FROM t0, vt1, vt0;
SELECT DISTINCT t0.c0, vt1.c0 FROM vt0, vt1, t0, vt2;
SELECT DISTINCT t0.c0, vt1.c0 FROM vt0, vt1, t0, vt2 WHERE ((((vt0.c0, vt1.c1, vt2.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((t0.c0, vt2.c0, t0.c39))) COLLATE NOCASE) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM vt0, vt1, t0, vt2 WHERE ((NOT ((((vt0.c0, vt1.c1, vt2.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((t0.c0, vt2.c0, t0.c39))) COLLATE NOCASE))) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM vt0, vt1, t0, vt2 WHERE ((((((vt0.c0, vt1.c1, vt2.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((t0.c0, vt2.c0, t0.c39))) COLLATE NOCASE) ISNULL));
SELECT DISTINCT t0.c0, vt1.c0 FROM vt0, vt1, t0, vt2;
SELECT vt2.c0, vt1.c1, vt1.c0, vt0.c0, t0.c0, t0.c39 FROM vt1, vt2, t0 INDEXED BY i43, vt0 GROUP BY vt2.c0, vt1.c1, vt1.c0, vt0.c0, t0.c0, t0.c39;
SELECT ALL vt2.c0, vt1.c1, vt1.c0, vt0.c0, t0.c0, t0.c39 FROM vt1, vt2, t0 INDEXED BY i43, vt0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c39 END)>>(CASE vt0.c1  WHEN vt1.c0 THEN vt1.c1 ELSE t0.c39 END))) GROUP BY vt2.c0, vt1.c1, vt1.c0, vt0.c0, t0.c0, t0.c39 UNION SELECT vt2.c0, vt1.c1, vt1.c0, vt0.c0, t0.c0, t0.c39 FROM vt1, vt2, t0 INDEXED BY i43, vt0 WHERE ((NOT (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c39 END)>>(CASE vt0.c1  WHEN vt1.c0 THEN vt1.c1 ELSE t0.c39 END))))) GROUP BY vt2.c0, vt1.c1, vt1.c0, vt0.c0, t0.c0, t0.c39 UNION SELECT ALL vt2.c0, vt1.c1, vt1.c0, vt0.c0, t0.c0, t0.c39 FROM vt1, vt2, t0 INDEXED BY i43, vt0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c39 END)>>(CASE vt0.c1  WHEN vt1.c0 THEN vt1.c1 ELSE t0.c39 END))) ISNULL)) GROUP BY vt2.c0, vt1.c1, vt1.c0, vt0.c0, t0.c0, t0.c39;
SELECT vt2.c0, vt1.c1, vt1.c0, vt0.c0, t0.c0, t0.c39 FROM vt1, vt2, t0 INDEXED BY i43, vt0 GROUP BY vt2.c0, vt1.c1, vt1.c0, vt0.c0, t0.c0, t0.c39;
SELECT ALL t0.c0, vt2.c0, t0.c39 FROM vt2, t0 GROUP BY t0.c0, vt2.c0, t0.c39;
SELECT t0.c0, vt2.c0, t0.c39 FROM vt2, t0 GROUP BY t0.c0, vt2.c0, t0.c39 HAVING ((AVG(COUNT(*))) NOT BETWEEN (((vt2.c0)%(vt2.c0))) AND (TOTAL(COUNT(t0.c0)))) UNION ALL SELECT ALL t0.c0, vt2.c0, t0.c39 FROM vt2, t0 GROUP BY t0.c0, vt2.c0, t0.c39 HAVING (NOT (((AVG(COUNT(*))) NOT BETWEEN (((vt2.c0)%(vt2.c0))) AND (TOTAL(COUNT(t0.c0)))))) UNION ALL SELECT t0.c0, vt2.c0, t0.c39 FROM vt2, t0 GROUP BY t0.c0, vt2.c0, t0.c39 HAVING ((((AVG(COUNT(*))) NOT BETWEEN (((vt2.c0)%(vt2.c0))) AND (TOTAL(COUNT(t0.c0))))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0)) COLLATE BINARY) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((NOT (vt0.c0)) COLLATE BINARY))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((NOT (vt0.c0)) COLLATE BINARY) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (((((t0.c39)OR(t0.c0)))OR(t0.c0))) AND (((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (((((vt0.c0) NOT NULL)) NOT BETWEEN (((((t0.c39)OR(t0.c0)))OR(t0.c0))) AND (((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((((((vt0.c0) NOT NULL)) NOT BETWEEN (((((t0.c39)OR(t0.c0)))OR(t0.c0))) AND (((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE ((((vt2.c0)+(vt2.c0)) IN (CAST(vt2.c0 AS BLOB)))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT ((((vt2.c0)+(vt2.c0)) IN (CAST(vt2.c0 AS BLOB)))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((((((vt2.c0)+(vt2.c0)) IN (CAST(vt2.c0 AS BLOB)))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 INNER JOIN vt2 ON vt2.c0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 INNER JOIN vt2 ON vt2.c0 GROUP BY vt0.c0, vt0.c1 HAVING (('')>>(COUNT(*))) COLLATE BINARY UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 INNER JOIN vt2 ON vt2.c0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((('')>>(COUNT(*))) COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 INNER JOIN vt2 ON vt2.c0 GROUP BY vt0.c0, vt0.c1 HAVING (((('')>>(COUNT(*))) COLLATE BINARY) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 INNER JOIN vt2 ON vt2.c0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 INNER JOIN vt2 ON vt2.c0 GROUP BY vt0.c0, vt0.c1 HAVING (('')>>(COUNT(*))) COLLATE BINARY UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 INNER JOIN vt2 ON vt2.c0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((('')>>(COUNT(*))) COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 INNER JOIN vt2 ON vt2.c0 GROUP BY vt0.c0, vt0.c1 HAVING (((('')>>(COUNT(*))) COLLATE BINARY) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 INNER JOIN vt2 ON vt2.c0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL * FROM t0 INNER JOIN vt2 ON (NOT ((~ (NULL))));
SELECT * FROM t0 INNER JOIN vt2 ON (NOT ((~ (NULL)))) WHERE (x'6c5b') UNION ALL SELECT * FROM t0 INNER JOIN vt2 ON (NOT ((~ (NULL)))) WHERE ((NOT (x'6c5b'))) UNION ALL SELECT ALL * FROM t0 INNER JOIN vt2 ON (NOT ((~ (NULL)))) WHERE (((x'6c5b') ISNULL));
SELECT ALL * FROM t0 INNER JOIN vt2 ON (NOT ((~ (NULL))));
SELECT DISTINCT vt1.c0 FROM t0, vt1;
SELECT DISTINCT vt1.c0 FROM t0, vt1 WHERE (((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1))) BETWEEN (CASE WHEN vt1.c1 THEN t0.c39 ELSE 3.20025059E8 END) AND (INSTR(vt1.c0, 'X!}I獦.')))) UNION SELECT DISTINCT vt1.c0 FROM t0, vt1 WHERE ((NOT (((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1))) BETWEEN (CASE WHEN vt1.c1 THEN t0.c39 ELSE 3.20025059E8 END) AND (INSTR(vt1.c0, 'X!}I獦.')))))) UNION SELECT DISTINCT vt1.c0 FROM t0, vt1 WHERE (((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1))) BETWEEN (CASE WHEN vt1.c1 THEN t0.c39 ELSE 3.20025059E8 END) AND (INSTR(vt1.c0, 'X!}I獦.')))) ISNULL));
SELECT DISTINCT vt1.c0 FROM t0, vt1;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE ((((((vt2.c0))<((vt2.c0))))<=((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0)))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT ((((((vt2.c0))<((vt2.c0))))<=((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0)))))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((((((((vt2.c0))<((vt2.c0))))<=((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0)))))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (STRFTIME(vt0.c0, vt0.c0, MAX(SUM(vt0.c0)), SUM(MAX(vt0.c0)), vt0.c0) IN ((((COUNT(vt0.c1), MAX(vt0.c0), 0.11101596595118723)) BETWEEN ((MAX(vt0.c0), AVG(MAX(MAX(vt0.c0))), MIN(vt0.c1))) AND ((GROUP_CONCAT(COUNT(*)), vt0.c1, vt0.c0))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT ((STRFTIME(vt0.c0, vt0.c0, MAX(SUM(vt0.c0)), SUM(MAX(vt0.c0)), vt0.c0) IN ((((COUNT(vt0.c1), MAX(vt0.c0), 0.11101596595118723)) BETWEEN ((MAX(vt0.c0), AVG(MAX(MAX(vt0.c0))), MIN(vt0.c1))) AND ((GROUP_CONCAT(COUNT(*)), vt0.c1, vt0.c0))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((STRFTIME(vt0.c0, vt0.c0, MAX(SUM(vt0.c0)), SUM(MAX(vt0.c0)), vt0.c0) IN ((((COUNT(vt0.c1), MAX(vt0.c0), 0.11101596595118723)) BETWEEN ((MAX(vt0.c0), AVG(MAX(MAX(vt0.c0))), MIN(vt0.c1))) AND ((GROUP_CONCAT(COUNT(*)), vt0.c1, vt0.c0)))))) ISNULL);
SELECT SUM(((json_quote(vt1.c0)) NOTNULL)) FROM vt0, t0, vt2, vt1;
SELECT ALL * FROM vt0, vt2 RIGHT OUTER JOIN vt1 ON (((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c1)) IN ());
SELECT ALL * FROM vt0, vt2 RIGHT OUTER JOIN vt1 ON (((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c1)) IN ()) WHERE ((CASE vt0.c1  WHEN 3.1180064158597975E-4 THEN vt0.c0 ELSE vt2.c0 END IN ())) UNION ALL SELECT ALL * FROM vt0, vt2 RIGHT OUTER JOIN vt1 ON (((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c1)) IN ()) WHERE ((NOT ((CASE vt0.c1  WHEN 3.1180064158597975E-4 THEN vt0.c0 ELSE vt2.c0 END IN ())))) UNION ALL SELECT ALL * FROM vt0, vt2 RIGHT OUTER JOIN vt1 ON (((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c1)) IN ()) WHERE ((((CASE vt0.c1  WHEN 3.1180064158597975E-4 THEN vt0.c0 ELSE vt2.c0 END IN ())) ISNULL));
SELECT ALL * FROM vt0, vt2 RIGHT OUTER JOIN vt1 ON (((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c1)) IN ());
SELECT DISTINCT vt1.c1, vt0.c0, t0.c39, vt1.c0 FROM t0, vt1, vt0;
SELECT DISTINCT vt1.c1, vt0.c0, t0.c39, vt1.c0 FROM t0, vt1, vt0 WHERE (((((vt1.c0)%('126360980'))) BETWEEN (LIKELY(vt1.c1)) AND (vt1.c0 COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c1, vt0.c0, t0.c39, vt1.c0 FROM t0, vt1, vt0 WHERE ((NOT (((((vt1.c0)%('126360980'))) BETWEEN (LIKELY(vt1.c1)) AND (vt1.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT vt1.c1, vt0.c0, t0.c39, vt1.c0 FROM t0, vt1, vt0 WHERE (((((((vt1.c0)%('126360980'))) BETWEEN (LIKELY(vt1.c1)) AND (vt1.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT vt1.c1, vt0.c0, t0.c39, vt1.c0 FROM t0, vt1, vt0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 WHERE ((+ ((NOT (vt0.c1))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((NOT ((+ ((NOT (vt0.c1))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((((+ ((NOT (vt0.c1))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt0.c1, t0.c39, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, t0.c39, vt0.c0;
SELECT vt0.c1, t0.c39, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, t0.c39, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c1, t0.c39, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, t0.c39, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, t0.c39, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, t0.c39, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1, t0.c39, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, t0.c39, vt0.c0;
SELECT vt0.c1, t0.c39, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, t0.c39, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c1, t0.c39, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, t0.c39, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, t0.c39, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, t0.c39, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1, t0.c39, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, t0.c39, vt0.c0;
SELECT * FROM t0, vt0, vt2;
SELECT ALL * FROM t0, vt0, vt2 WHERE (((((t0.c39)<(vt2.c0)))%((+ (vt0.c0))))) UNION ALL SELECT ALL * FROM t0, vt0, vt2 WHERE ((NOT (((((t0.c39)<(vt2.c0)))%((+ (vt0.c0))))))) UNION ALL SELECT * FROM t0, vt0, vt2 WHERE (((((((t0.c39)<(vt2.c0)))%((+ (vt0.c0))))) ISNULL));
SELECT * FROM t0, vt0, vt2;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((- ((((t0.c39))==((t0.c0)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((- ((((t0.c39))==((t0.c0)))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((- ((((t0.c39))==((t0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM vt2, t0 INDEXED BY i43, vt0 GROUP BY vt0.c0, t0.c0, vt0.c1;
SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM vt2, t0 INDEXED BY i43, vt0 WHERE (((((vt0.c1) IS FALSE))OR(x''))) GROUP BY vt0.c0, t0.c0, vt0.c1 UNION SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM vt2, t0 INDEXED BY i43, vt0 WHERE ((NOT (((((vt0.c1) IS FALSE))OR(x''))))) GROUP BY vt0.c0, t0.c0, vt0.c1 UNION SELECT vt0.c0, t0.c0, vt0.c1 FROM vt2, t0 INDEXED BY i43, vt0 WHERE (((((((vt0.c1) IS FALSE))OR(x''))) ISNULL)) GROUP BY vt0.c0, t0.c0, vt0.c1;
SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM vt2, t0 INDEXED BY i43, vt0 GROUP BY vt0.c0, t0.c0, vt0.c1;
SELECT ALL t0.c0, vt0.c1, t0.c39 FROM t0, vt2, vt0 GROUP BY t0.c0, vt0.c1, t0.c39;
SELECT t0.c0, vt0.c1, t0.c39 FROM t0, vt2, vt0 GROUP BY t0.c0, vt0.c1, t0.c39 HAVING NULL UNION ALL SELECT ALL t0.c0, vt0.c1, t0.c39 FROM t0, vt2, vt0 GROUP BY t0.c0, vt0.c1, t0.c39 HAVING (NOT (NULL)) UNION ALL SELECT t0.c0, vt0.c1, t0.c39 FROM t0, vt2, vt0 GROUP BY t0.c0, vt0.c1, t0.c39 HAVING ((NULL) ISNULL);
SELECT ALL t0.c0, vt0.c1, t0.c39 FROM t0, vt2, vt0 GROUP BY t0.c0, vt0.c1, t0.c39;
SELECT t0.c0, vt0.c1, t0.c39 FROM t0, vt2, vt0 GROUP BY t0.c0, vt0.c1, t0.c39 HAVING NULL UNION ALL SELECT ALL t0.c0, vt0.c1, t0.c39 FROM t0, vt2, vt0 GROUP BY t0.c0, vt0.c1, t0.c39 HAVING (NOT (NULL)) UNION ALL SELECT t0.c0, vt0.c1, t0.c39 FROM t0, vt2, vt0 GROUP BY t0.c0, vt0.c1, t0.c39 HAVING ((NULL) ISNULL);
SELECT ALL t0.c0, vt0.c1, t0.c39 FROM t0, vt2, vt0 GROUP BY t0.c0, vt0.c1, t0.c39;
SELECT * FROM vt2, t0;
SELECT ALL * FROM vt2, t0 WHERE (((((((vt2.c0)OR(t0.c39)))AND(t0.c39))) NOT BETWEEN ((((vt2.c0))>=((t0.c39)))) AND ((t0.c0 IN ())))) UNION ALL SELECT ALL * FROM vt2, t0 WHERE ((NOT (((((((vt2.c0)OR(t0.c39)))AND(t0.c39))) NOT BETWEEN ((((vt2.c0))>=((t0.c39)))) AND ((t0.c0 IN ())))))) UNION ALL SELECT * FROM vt2, t0 WHERE (((((((((vt2.c0)OR(t0.c39)))AND(t0.c39))) NOT BETWEEN ((((vt2.c0))>=((t0.c39)))) AND ((t0.c0 IN ())))) ISNULL));
SELECT * FROM vt2, t0;
SELECT DISTINCT * FROM vt1, vt2, t0;
SELECT DISTINCT * FROM vt1, vt2, t0 WHERE ((((((t0.c0 IN ()))AND(json_patch(vt2.c0, vt1.c1))))OR((~ (t0.c39))))) UNION SELECT DISTINCT * FROM vt1, vt2, t0 WHERE ((NOT ((((((t0.c0 IN ()))AND(json_patch(vt2.c0, vt1.c1))))OR((~ (t0.c39))))))) UNION SELECT DISTINCT * FROM vt1, vt2, t0 WHERE ((((((((t0.c0 IN ()))AND(json_patch(vt2.c0, vt1.c1))))OR((~ (t0.c39))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt2, t0;
SELECT ALL vt1.c1, vt2.c0, vt1.c0, vt0.c0 FROM vt2, vt0, vt1 GROUP BY vt1.c1, vt2.c0, vt1.c0, vt0.c0;
SELECT vt1.c1, vt2.c0, vt1.c0, vt0.c0 FROM vt2, vt0, vt1 WHERE (CASE WHEN ((((vt1.c0)AND(vt2.c0)))OR(vt2.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(0.9832017719662446)))AND(vt1.c0)) ELSE CASE WHEN vt0.c1 THEN vt1.c1 END END) GROUP BY vt1.c1, vt2.c0, vt1.c0, vt0.c0 UNION SELECT ALL vt1.c1, vt2.c0, vt1.c0, vt0.c0 FROM vt2, vt0, vt1 WHERE ((NOT (CASE WHEN ((((vt1.c0)AND(vt2.c0)))OR(vt2.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(0.9832017719662446)))AND(vt1.c0)) ELSE CASE WHEN vt0.c1 THEN vt1.c1 END END))) GROUP BY vt1.c1, vt2.c0, vt1.c0, vt0.c0 UNION SELECT vt1.c1, vt2.c0, vt1.c0, vt0.c0 FROM vt2, vt0, vt1 WHERE (((CASE WHEN ((((vt1.c0)AND(vt2.c0)))OR(vt2.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(0.9832017719662446)))AND(vt1.c0)) ELSE CASE WHEN vt0.c1 THEN vt1.c1 END END) ISNULL)) GROUP BY vt1.c1, vt2.c0, vt1.c0, vt0.c0;
SELECT ALL vt1.c1, vt2.c0, vt1.c0, vt0.c0 FROM vt2, vt0, vt1 GROUP BY vt1.c1, vt2.c0, vt1.c0, vt0.c0;
SELECT t0.c39 FROM t0 FULL OUTER JOIN vt1 ON CASE vt1.c1 COLLATE BINARY  WHEN ((vt1.c1) BETWEEN (vt2.c0) AND (vt1.c1)) THEN (vt1.c1 IN (vt1.c1, vt1.c1)) END INNER JOIN vt2 ON (((t0.c0 IN ())) BETWEEN ((((vt2.c0, vt1.c1, vt2.c0)) BETWEEN ((t0.c0, 0.9953444871860321, t0.c0)) AND ((vt2.c0, t0.c0, t0.c0)))) AND (CAST(t0.c0 AS INTEGER))) GROUP BY t0.c39;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END THEN vt1.c0 WHEN json_extract(vt1.c0, vt1.c1) THEN ((vt1.c0) NOTNULL) WHEN UPPER(DISTINCT vt1.c1) THEN ((vt1.c1)>(vt1.c0)) END) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END THEN vt1.c0 WHEN json_extract(vt1.c0, vt1.c1) THEN ((vt1.c0) NOTNULL) WHEN UPPER(DISTINCT vt1.c1) THEN ((vt1.c1)>(vt1.c0)) END))) UNION ALL SELECT * FROM vt1 WHERE (((CASE WHEN CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END THEN vt1.c0 WHEN json_extract(vt1.c0, vt1.c1) THEN ((vt1.c0) NOTNULL) WHEN UPPER(DISTINCT vt1.c1) THEN ((vt1.c1)>(vt1.c0)) END) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((~ (UNLIKELY(t0.c0)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((~ (UNLIKELY(t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((~ (UNLIKELY(t0.c0)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((((0.634346067946574))>((t0.c39)))) BETWEEN (t0.c0) AND ((((t0.c39))!=((t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((((0.634346067946574))>((t0.c39)))) BETWEEN (t0.c0) AND ((((t0.c39))!=((t0.c0)))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((((0.634346067946574))>((t0.c39)))) BETWEEN (t0.c0) AND ((((t0.c39))<>((t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0 FROM vt2, t0, vt0 FULL OUTER JOIN vt1 ON json_valid(vt0.c0) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt2, t0, vt0 FULL OUTER JOIN vt1 ON json_valid(vt0.c0) GROUP BY vt0.c0 HAVING (~ ('J~51')) UNION ALL SELECT ALL vt0.c0 FROM vt2, t0, vt0 NOT INDEXED FULL OUTER JOIN vt1 ON json_valid(vt0.c0) GROUP BY vt0.c0 HAVING (NOT ((~ ('J~51')))) UNION ALL SELECT vt0.c0 FROM vt2, t0, vt0 FULL OUTER JOIN vt1 ON json_valid(vt0.c0) GROUP BY vt0.c0 HAVING (((~ ('J~51'))) ISNULL);
SELECT vt0.c0 FROM vt2, t0, vt0 FULL OUTER JOIN vt1 ON json_valid(vt0.c0) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt2, t0, vt0 FULL OUTER JOIN vt1 ON json_valid(vt0.c0) GROUP BY vt0.c0 HAVING (~ ('J~51')) UNION ALL SELECT ALL vt0.c0 FROM vt2, t0, vt0 NOT INDEXED FULL OUTER JOIN vt1 ON json_valid(vt0.c0) GROUP BY vt0.c0 HAVING (NOT ((~ ('J~51')))) UNION ALL SELECT vt0.c0 FROM vt2, t0, vt0 FULL OUTER JOIN vt1 ON json_valid(vt0.c0) GROUP BY vt0.c0 HAVING (((~ ('J~51'))) ISNULL);
SELECT vt0.c0 FROM vt2, t0, vt0 FULL OUTER JOIN vt1 ON json_valid(vt0.c0) GROUP BY vt0.c0;
SELECT * FROM vt1 INNER JOIN vt0 ON ((((vt1.c0)&(vt0.c1)))%(((t0.c39) BETWEEN (vt0.c1) AND (vt0.c0)))) INNER JOIN t0 ON ((((vt0.c1) NOTNULL))>(((t0.c0) BETWEEN (vt2.c0) AND (x'2c5662a9')))) INNER JOIN vt2 ON (NOT (INSTR(0.8462319391753548, vt0.c1)));
SELECT * FROM vt1 NOT INDEXED INNER JOIN vt0 ON ((((vt1.c0)&(vt0.c1)))%(((t0.c39) BETWEEN (vt0.c1) AND (vt0.c0)))) INNER JOIN t0 ON ((((vt0.c1) NOTNULL))>(((t0.c0) BETWEEN (vt2.c0) AND (x'2c5662a9')))) INNER JOIN vt2 ON (NOT (INSTR(0.8462319391753548, vt0.c1))) WHERE ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN t0.c39 THEN t0.c39 END IN ())) UNION ALL SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((((vt1.c0)&(vt0.c1)))%(((t0.c39) BETWEEN (vt0.c1) AND (vt0.c0)))) INNER JOIN t0 ON ((((vt0.c1) NOTNULL))>(((t0.c0) BETWEEN (vt2.c0) AND (x'2c5662a9')))) INNER JOIN vt2 ON (NOT (INSTR(0.8462319391753548, vt0.c1))) WHERE ((NOT ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN t0.c39 THEN t0.c39 END IN ())))) UNION ALL SELECT * FROM vt1 INNER JOIN vt0 ON ((((vt1.c0)&(vt0.c1)))%(((t0.c39) BETWEEN (vt0.c1) AND (vt0.c0)))) INNER JOIN t0 ON ((((vt0.c1) NOTNULL))>(((t0.c0) BETWEEN (vt2.c0) AND (x'2c5662a9')))) INNER JOIN vt2 ON (NOT (INSTR(0.8462319391753548, vt0.c1))) WHERE ((((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN t0.c39 THEN t0.c39 END IN ())) ISNULL));
SELECT * FROM vt1 INNER JOIN vt0 ON ((((vt1.c0)&(vt0.c1)))%(((t0.c39) BETWEEN (vt0.c1) AND (vt0.c0)))) INNER JOIN t0 ON ((((vt0.c1) NOTNULL))>(((t0.c0) BETWEEN (vt2.c0) AND (x'2c5662a9')))) INNER JOIN vt2 ON (NOT (INSTR(0.8462319391753548, vt0.c1)));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((highlight(vt2.c0, '1757990837', vt2.c0, vt2.c0) IN ())) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT ((highlight(vt2.c0, '1757990837', vt2.c0, vt2.c0) IN ())))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((((highlight(vt2.c0, '1757990837', vt2.c0, vt2.c0) IN ())) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT vt2.c0, vt0.c1, t0.c39, t0.c0, vt1.c1, vt1.c0, vt0.c0 FROM vt2, vt0, t0, vt1 GROUP BY vt2.c0, vt0.c1, t0.c39, t0.c0, vt1.c1, vt1.c0, vt0.c0;
SELECT ALL vt2.c0, vt0.c1, t0.c39, t0.c0, vt1.c1, vt1.c0, vt0.c0 FROM vt2, vt0, t0, vt1 WHERE (((vt1.c0)%(CAST(vt1.c1 AS REAL)))) GROUP BY vt2.c0, vt0.c1, t0.c39, t0.c0, vt1.c1, vt1.c0, vt0.c0 UNION SELECT ALL vt2.c0, vt0.c1, t0.c39, t0.c0, vt1.c1, vt1.c0, vt0.c0 FROM vt2, vt0, t0, vt1 WHERE ((NOT (((vt1.c0)%(CAST(vt1.c1 AS REAL)))))) GROUP BY vt2.c0, vt0.c1, t0.c39, t0.c0, vt1.c1, vt1.c0, vt0.c0 UNION SELECT vt2.c0, vt0.c1, t0.c39, t0.c0, vt1.c1, vt1.c0, vt0.c0 FROM vt2, vt0, t0, vt1 WHERE (((((vt1.c0)%(CAST(vt1.c1 AS REAL)))) ISNULL)) GROUP BY vt2.c0, vt0.c1, t0.c39, t0.c0, vt1.c1, vt1.c0, vt0.c0;
SELECT vt2.c0, vt0.c1, t0.c39, t0.c0, vt1.c1, vt1.c0, vt0.c0 FROM vt2, vt0, t0, vt1 GROUP BY vt2.c0, vt0.c1, t0.c39, t0.c0, vt1.c1, vt1.c0, vt0.c0;
SELECT ALL vt0.c1, t0.c39 FROM vt1, t0, vt0, vt2 GROUP BY vt0.c1, t0.c39;
SELECT ALL vt0.c1, t0.c39 FROM vt1, t0, vt0, vt2 GROUP BY vt0.c1, t0.c39 HAVING TOTAL(SUM(AVG(vt0.c0))) UNION ALL SELECT ALL vt0.c1, t0.c39 FROM vt1, t0, vt0, vt2 GROUP BY vt0.c1, t0.c39 HAVING (NOT (TOTAL(SUM(AVG(vt0.c0))))) UNION ALL SELECT ALL vt0.c1, t0.c39 FROM vt1, t0, vt0, vt2 GROUP BY vt0.c1, t0.c39 HAVING ((TOTAL(SUM(AVG(vt0.c0)))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (x'') UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM t0 WHERE (((x'') ISNULL));
SELECT * FROM t0;
SELECT DISTINCT vt1.c0, t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (((t0.c39))>((t0.c0))) COLLATE RTRIM FULL OUTER JOIN t0 ON t0.c39;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (MIN(((vt2.c0)<>(vt2.c0)), -1.291421098E9)) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT (MIN(((vt2.c0)<>(vt2.c0)), -1.291421098E9)))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE (((MIN(((vt2.c0)!=(vt2.c0)), -1.291421098E9)) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0 HAVING AVG(COUNT(t0.c39)) UNION ALL SELECT vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(COUNT(t0.c39)))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0 HAVING ((AVG(COUNT(t0.c39))) ISNULL);
SELECT ALL * FROM vt2, vt0, t0, vt1;
SELECT ALL * FROM vt2, vt0, t0, vt1 WHERE (((((vt1.c1) NOTNULL))AND((vt1.c1 IN (vt0.c1, vt2.c0))))) UNION ALL SELECT * FROM vt2, vt0, t0, vt1 WHERE ((NOT (((((vt1.c1) NOTNULL))AND((vt1.c1 IN (vt0.c1, vt2.c0))))))) UNION ALL SELECT * FROM vt2, vt0, t0, vt1 WHERE (((((((vt1.c1) NOTNULL))AND((vt1.c1 IN (vt0.c1, vt2.c0))))) ISNULL));
SELECT ALL * FROM vt2, vt0, t0, vt1;
SELECT DISTINCT vt2.c0, t0.c0 FROM vt2, t0;
SELECT DISTINCT vt2.c0, t0.c0 FROM vt2, t0 WHERE ((CAST(t0.c39 AS REAL) IN ())) UNION SELECT DISTINCT vt2.c0, t0.c0 FROM vt2, t0 WHERE ((NOT ((CAST(t0.c39 AS REAL) IN ())))) UNION SELECT DISTINCT vt2.c0, t0.c0 FROM vt2, t0 WHERE ((((CAST(t0.c39 AS REAL) IN ())) ISNULL));
SELECT DISTINCT vt2.c0, t0.c0 FROM vt2, t0;
SELECT vt0.c0 FROM vt0, vt2 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt2 WHERE (((((((vt2.c0)) BETWEEN ((vt0.c1)) AND ((vt2.c0)))))==(((vt2.c0 IN ()))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt2 WHERE ((NOT (((((((vt2.c0)) BETWEEN ((vt0.c1)) AND ((vt2.c0)))))=(((vt2.c0 IN ()))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt2 WHERE (((((((((vt2.c0)) BETWEEN ((vt0.c1)) AND ((vt2.c0)))))==(((vt2.c0 IN ()))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt2 GROUP BY vt0.c0;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING vt1.c1 UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (vt1.c1)) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((vt1.c1) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING vt1.c1 UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (vt1.c1)) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((vt1.c1) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt2.c0, t0.c39, t0.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt2, vt0, vt1, t0;
SELECT vt2.c0, t0.c39, t0.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt2, vt0, vt1, t0 WHERE (UNICODE((+ (vt2.c0)))) UNION ALL SELECT vt2.c0, t0.c39, t0.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt2, vt0, vt1, t0 WHERE ((NOT (UNICODE((+ (vt2.c0)))))) UNION ALL SELECT vt2.c0, t0.c39, t0.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt2, vt0, vt1, t0 WHERE (((UNICODE((+ (vt2.c0)))) ISNULL));
SELECT vt2.c0, t0.c39, t0.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt2, vt0, vt1, t0;
SELECT DISTINCT * FROM vt2, vt0;
SELECT DISTINCT * FROM vt2, vt0 WHERE (((vt0.c0 COLLATE BINARY)IS NOT(TIME(vt2.c0, vt0.c1, vt2.c0)))) UNION SELECT DISTINCT * FROM vt2, vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY)IS NOT(TIME(vt2.c0, vt0.c1, vt2.c0)))))) UNION SELECT DISTINCT * FROM vt2, vt0 WHERE (((((vt0.c0 COLLATE BINARY)IS NOT(TIME(vt2.c0, vt0.c1, vt2.c0)))) ISNULL));
SELECT DISTINCT * FROM vt2, vt0;
SELECT ALL vt2.c0, vt0.c0, vt1.c0 FROM vt0, vt1, t0 RIGHT OUTER JOIN vt2 ON x'' GROUP BY vt2.c0, vt0.c0, vt1.c0;
SELECT vt2.c0, vt0.c0, vt1.c0 FROM vt0, vt1, t0 RIGHT OUTER JOIN vt2 ON x'' WHERE (COALESCE(((vt0.c0) ISNULL), ((vt0.c1)IS NOT(vt0.c1)))) GROUP BY vt2.c0, vt0.c0, vt1.c0 UNION SELECT vt2.c0, vt0.c0, vt1.c0 FROM vt0, vt1, t0 RIGHT OUTER JOIN vt2 ON x'' WHERE ((NOT (COALESCE(((vt0.c0) ISNULL), ((vt0.c1)IS NOT(vt0.c1)))))) GROUP BY vt2.c0, vt0.c0, vt1.c0 UNION SELECT ALL vt2.c0, vt0.c0, vt1.c0 FROM vt0, vt1, t0 RIGHT OUTER JOIN vt2 ON x'' WHERE (((COALESCE(((vt0.c0) ISNULL), ((vt0.c1)IS NOT(vt0.c1)))) ISNULL)) GROUP BY vt2.c0, vt0.c0, vt1.c0;
SELECT ALL vt2.c0, vt0.c0, vt1.c0 FROM vt0, vt1, t0 RIGHT OUTER JOIN vt2 ON x'' GROUP BY vt2.c0, vt0.c0, vt1.c0;
SELECT t0.c39, vt0.c0, vt1.c0, vt1.c1, vt2.c0, t0.c0 FROM vt0, t0 RIGHT OUTER JOIN vt2 ON (((((((vt0.c1, vt2.c0, vt2.c0, vt1.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0, vt2.c0, x'')) AND ((vt1.c0, vt0.c0, t0.c0, vt1.c1, vt0.c0))))AND(CASE vt1.c0  WHEN vt1.c1 THEN vt2.c0 ELSE t0.c0 END)))AND(((((vt2.c0)OR(vt2.c0)))OR(t0.c0)))) CROSS JOIN vt1 ON (('-1384817769' COLLATE RTRIM) BETWEEN ((('0.7868335903364606')GLOB(vt1.c1))) AND (0.5303537864750777)) GROUP BY t0.c39, vt0.c0, vt1.c0, vt1.c1, vt2.c0, t0.c0;
SELECT ALL * FROM vt1 INDEXED BY i43, vt2, t0;
SELECT DISTINCT * FROM vt2, vt1;
SELECT DISTINCT * FROM vt2, vt1 WHERE (((((vt1.c1) ISNULL)) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (vt2.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt2, vt1 WHERE ((NOT (((((vt1.c1) ISNULL)) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (vt2.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt2, vt1 WHERE (((((((vt1.c1) ISNULL)) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (vt2.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt2, vt1;
SELECT vt2.c0 FROM vt2, vt1 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2, vt1 WHERE (((((CAST(vt1.c1 AS NUMERIC))OR(((vt1.c0)OR(vt1.c0)))))OR((- (vt1.c0))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2, vt1 WHERE ((NOT (((((CAST(vt1.c1 AS NUMERIC))OR(((vt1.c0)OR(vt1.c0)))))OR((- (vt1.c0))))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2, vt1 WHERE (((((((CAST(vt1.c1 AS NUMERIC))OR(((vt1.c0)OR(vt1.c0)))))OR((- (vt1.c0))))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, vt1 GROUP BY vt2.c0;
SELECT ALL vt1.c0, vt2.c0, t0.c0, vt1.c1 FROM vt2, vt1, vt0, t0 GROUP BY vt1.c0, vt2.c0, t0.c0, vt1.c1;
SELECT vt1.c0, vt2.c0, t0.c0, vt1.c1 FROM vt2, vt1, vt0, t0 GROUP BY vt1.c0, vt2.c0, t0.c0, vt1.c1 HAVING SUM((NOT (vt1.c0))) UNION ALL SELECT vt1.c0, vt2.c0, t0.c0, vt1.c1 FROM vt2, vt1, vt0, t0 GROUP BY vt1.c0, vt2.c0, t0.c0, vt1.c1 HAVING (NOT (SUM((NOT (vt1.c0))))) UNION ALL SELECT ALL vt1.c0, vt2.c0, t0.c0, vt1.c1 FROM vt2, vt1, vt0, t0 GROUP BY vt1.c0, vt2.c0, t0.c0, vt1.c1 HAVING ((SUM((NOT (vt1.c0)))) ISNULL);
SELECT ALL vt1.c0, vt2.c0, t0.c0, vt1.c1 FROM vt2, vt1, vt0, t0 GROUP BY vt1.c0, vt2.c0, t0.c0, vt1.c1;
SELECT vt1.c0, vt2.c0, t0.c0, vt1.c1 FROM vt2, vt1, vt0, t0 GROUP BY vt1.c0, vt2.c0, t0.c0, vt1.c1 HAVING SUM((NOT (vt1.c0))) UNION ALL SELECT vt1.c0, vt2.c0, t0.c0, vt1.c1 FROM vt2, vt1, vt0, t0 GROUP BY vt1.c0, vt2.c0, t0.c0, vt1.c1 HAVING (NOT (SUM((NOT (vt1.c0))))) UNION ALL SELECT ALL vt1.c0, vt2.c0, t0.c0, vt1.c1 FROM vt2, vt1, vt0, t0 GROUP BY vt1.c0, vt2.c0, t0.c0, vt1.c1 HAVING ((SUM((NOT (vt1.c0)))) ISNULL);
SELECT ALL vt1.c0, vt2.c0, t0.c0, vt1.c1 FROM vt2, vt1, vt0, t0 GROUP BY vt1.c0, vt2.c0, t0.c0, vt1.c1;
SELECT * FROM vt2, t0, vt1, vt0;
SELECT * FROM vt2 NOT INDEXED, t0, vt1, vt0 WHERE (CASE WHEN CAST(t0.c0 AS BLOB) THEN (((vt1.c1)) BETWEEN ((0.30577139377570084)) AND ((vt1.c0))) END) UNION ALL SELECT * FROM vt2, t0, vt1, vt0 WHERE ((NOT (CASE WHEN CAST(t0.c0 AS BLOB) THEN (((vt1.c1)) BETWEEN ((0.30577139377570084)) AND ((vt1.c0))) END))) UNION ALL SELECT ALL * FROM vt2, t0, vt1, vt0 WHERE (((CASE WHEN CAST(t0.c0 AS BLOB) THEN (((vt1.c1)) BETWEEN ((0.30577139377570084)) AND ((vt1.c0))) END) ISNULL));
SELECT * FROM vt2, t0, vt1, vt0;
SELECT DISTINCT * FROM vt1, vt2, t0, vt0;
SELECT DISTINCT * FROM vt1, vt2, t0, vt0 WHERE (t0.c39) UNION SELECT DISTINCT * FROM vt1, vt2, t0, vt0 WHERE ((NOT (t0.c39))) UNION SELECT DISTINCT * FROM vt1, vt2, t0, vt0 WHERE (((t0.c39) ISNULL));
SELECT DISTINCT * FROM vt1, vt2, t0, vt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE)>=((vt0.c1 IN ())))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c1 COLLATE NOCASE)>=((vt0.c1 IN ())))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((((vt0.c1 COLLATE NOCASE)>=((vt0.c1 IN ())))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT t0.c39, vt1.c1, vt1.c0, t0.c0, vt0.c1, vt2.c0 FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS TEXT))LIKE(x'')) RIGHT OUTER JOIN vt2 ON (- (((t0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) GROUP BY t0.c39, vt1.c1, vt1.c0, t0.c0, vt0.c1, vt2.c0;
SELECT t0.c39, vt1.c1, vt1.c0, t0.c0, vt0.c1, vt2.c0 FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS TEXT))LIKE(x'')) RIGHT OUTER JOIN vt2 ON (- (((t0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) GROUP BY t0.c39, vt1.c1, vt1.c0, t0.c0, vt0.c1, vt2.c0 HAVING CAST(MAX(TOTAL(vt0.c1)) AS REAL) UNION ALL SELECT t0.c39, vt1.c1, vt1.c0, t0.c0, vt0.c1, vt2.c0 FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS TEXT))LIKE(x'')) RIGHT OUTER JOIN vt2 ON (- (((t0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) GROUP BY t0.c39, vt1.c1, vt1.c0, t0.c0, vt0.c1, vt2.c0 HAVING (NOT (CAST(MAX(TOTAL(vt0.c1)) AS REAL))) UNION ALL SELECT t0.c39, vt1.c1, vt1.c0, t0.c0, vt0.c1, vt2.c0 FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS TEXT))LIKE(x'')) RIGHT OUTER JOIN vt2 ON (- (((t0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) GROUP BY t0.c39, vt1.c1, vt1.c0, t0.c0, vt0.c1, vt2.c0 HAVING ((CAST(MAX(TOTAL(vt0.c1)) AS REAL)) ISNULL);
SELECT ALL vt0.c1, vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1;
SELECT vt0.c1, vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 WHERE (vt0.c0) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c1, vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt1, vt0 CROSS JOIN vt2 ON ((0.6425643649755267)!=(CAST(vt2.c0 AS BLOB)));
SELECT DISTINCT * FROM vt1, vt0 CROSS JOIN vt2 ON ((0.6425643649755267)!=(CAST(vt2.c0 AS BLOB))) WHERE (x'261f') UNION SELECT DISTINCT * FROM vt1, vt0 CROSS JOIN vt2 ON ((0.6425643649755267)!=(CAST(vt2.c0 AS BLOB))) WHERE ((NOT (x'261f'))) UNION SELECT DISTINCT * FROM vt1, vt0 CROSS JOIN vt2 ON ((0.6425643649755267)!=(CAST(vt2.c0 AS BLOB))) WHERE (((x'261f') ISNULL));
SELECT DISTINCT * FROM vt1, vt0 CROSS JOIN vt2 ON ((0.6425643649755267)!=(CAST(vt2.c0 AS BLOB)));
SELECT vt0.c0, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c0, vt2.c0;
SELECT ALL vt0.c0, vt2.c0 FROM vt0, vt2 WHERE ((+ (vt2.c0 COLLATE BINARY))) GROUP BY vt0.c0, vt2.c0 UNION SELECT ALL vt0.c0, vt2.c0 FROM vt0, vt2 WHERE ((NOT ((+ (vt2.c0 COLLATE BINARY))))) GROUP BY vt0.c0, vt2.c0 UNION SELECT ALL vt0.c0, vt2.c0 FROM vt0, vt2 WHERE ((((+ (vt2.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt0.c0, vt2.c0;
SELECT vt0.c0, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c0, vt2.c0;
SELECT vt2.c0, vt1.c1 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c1;
SELECT ALL vt2.c0, vt1.c1 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c1 HAVING NULL UNION ALL SELECT ALL vt2.c0, vt1.c1 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c1 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt2.c0, vt1.c1 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c1 HAVING ((NULL) ISNULL);
SELECT vt2.c0, vt1.c1 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c1;
SELECT ALL vt2.c0, vt1.c1 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c1 HAVING NULL UNION ALL SELECT ALL vt2.c0, vt1.c1 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c1 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt2.c0, vt1.c1 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c1 HAVING ((NULL) ISNULL);
SELECT vt2.c0, vt1.c1 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c1;
SELECT vt0.c0, vt1.c0, vt1.c1 FROM vt0, vt1, vt2;
SELECT ALL vt0.c0, vt1.c0, vt1.c1 FROM vt0, vt1, vt2 WHERE (((((((0.16746583644041224) IS FALSE))AND(((vt1.c1) NOT BETWEEN (0.9541682862381109) AND (vt1.c1)))))OR(vt1.c1 COLLATE BINARY))) UNION ALL SELECT vt0.c0, vt1.c0, vt1.c1 FROM vt0, vt1, vt2 WHERE ((NOT (((((((0.16746583644041224) IS FALSE))AND(((vt1.c1) NOT BETWEEN (0.9541682862381109) AND (vt1.c1)))))OR(vt1.c1 COLLATE BINARY))))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt1.c1 FROM vt0, vt1, vt2 WHERE (((((((((0.16746583644041224) IS FALSE))AND(((vt1.c1) NOT BETWEEN (0.9541682862381109) AND (vt1.c1)))))OR(vt1.c1 COLLATE BINARY))) ISNULL));
SELECT vt0.c0, vt1.c0, vt1.c1 FROM vt0, vt1, vt2;
SELECT DISTINCT t0.c39 FROM vt2 INDEXED BY i43, t0;
SELECT vt1.c1, vt0.c0, t0.c39, vt0.c1, vt1.c0 FROM vt0 CROSS JOIN t0 ON ((((vt1.c0)<=(vt2.c0))) BETWEEN (((((t0.c0)OR(t0.c0)))AND(t0.c0))) AND (UPPER(vt0.c0))) RIGHT OUTER JOIN vt2 ON 0.445406299839725 FULL OUTER JOIN vt1 ON (((NOT (vt0.c1)))>(((((vt0.c1)AND(vt1.c0)))AND(vt0.c0)))) GROUP BY vt1.c1, vt0.c0, t0.c39, vt0.c1, vt1.c0;
SELECT vt2.c0, vt0.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0, vt0.c0;
SELECT vt2.c0, vt0.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt2.c0, vt0.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt2.c0, vt0.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt2.c0, vt0.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0, vt0.c0;
SELECT vt2.c0, vt0.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt2.c0, vt0.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt2.c0, vt0.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt2.c0, vt0.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0, vt0.c0;
SELECT * FROM vt1 INNER JOIN vt0 ON ((((vt1.c0) IS FALSE)) IS FALSE);
SELECT * FROM vt1 INNER JOIN vt0 ON ((((vt1.c0) IS FALSE)) IS FALSE) WHERE (x'') UNION ALL SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((((vt1.c0) IS FALSE)) IS FALSE) WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((((vt1.c0) IS FALSE)) IS FALSE) WHERE (((x'') ISNULL));
SELECT * FROM vt1 INNER JOIN vt0 ON ((((vt1.c0) IS FALSE)) IS FALSE);
SELECT DISTINCT t0.c0, vt1.c1, t0.c39, vt1.c0, vt0.c1, vt0.c0 FROM t0, vt0, vt1;
SELECT DISTINCT t0.c0, vt1.c1, t0.c39, vt1.c0, vt0.c1, vt0.c0 FROM t0, vt0, vt1 WHERE (CAST(((t0.c39)>>(t0.c0)) AS BLOB)) UNION SELECT DISTINCT t0.c0, vt1.c1, t0.c39, vt1.c0, vt0.c1, vt0.c0 FROM t0, vt0, vt1 WHERE ((NOT (CAST(((t0.c39)>>(t0.c0)) AS BLOB)))) UNION SELECT DISTINCT t0.c0, vt1.c1, t0.c39, vt1.c0, vt0.c1, vt0.c0 FROM t0, vt0, vt1 WHERE (((CAST(((t0.c39)>>(t0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT t0.c0, vt1.c1, t0.c39, vt1.c0, vt0.c1, vt0.c0 FROM t0, vt0, vt1;
SELECT vt0.c1 FROM vt0, vt2 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, vt2 WHERE ('-2055439634') GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, vt2 WHERE ((NOT ('-2055439634'))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0, vt2 WHERE ((('-2055439634') ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, vt2 GROUP BY vt0.c1;
SELECT t0.c0, t0.c39 FROM vt2 NATURAL JOIN t0 GROUP BY t0.c0, t0.c39;
SELECT t0.c0, t0.c39 FROM vt2 NATURAL JOIN t0 GROUP BY t0.c0, t0.c39 HAVING TOTAL(((t0.c0) NOT BETWEEN (t0.c39) AND (TOTAL(COUNT(*))))) UNION ALL SELECT t0.c0, t0.c39 FROM vt2 NATURAL JOIN t0 GROUP BY t0.c0, t0.c39 HAVING (NOT (TOTAL(((t0.c0) NOT BETWEEN (t0.c39) AND (TOTAL(COUNT(*))))))) UNION ALL SELECT t0.c0, t0.c39 FROM vt2 NATURAL JOIN t0 GROUP BY t0.c0, t0.c39 HAVING ((TOTAL(((t0.c0) NOT BETWEEN (t0.c39) AND (TOTAL(COUNT(*)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((('-682644059')) BETWEEN ((vt0.c1)) AND ((x'')))) NOT NULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((('-682644059')) BETWEEN ((vt0.c1)) AND ((x'')))) NOT NULL)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((('-682644059')) BETWEEN ((vt0.c1)) AND ((x'')))) NOT NULL)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, t0, vt2, vt1;
SELECT DISTINCT * FROM vt0, t0, vt2, vt1 WHERE (((((((vt1.c0)AND(t0.c0)))AND(vt1.c1)))==(((vt1.c0)>>(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, t0, vt2, vt1 WHERE ((NOT (((((((vt1.c0)AND(t0.c0)))AND(vt1.c1)))=(((vt1.c0)>>(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, t0, vt2, vt1 WHERE (((((((((vt1.c0)AND(t0.c0)))AND(vt1.c1)))=(((vt1.c0)>>(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0, vt2, vt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CASE t0.c0  WHEN t0.c39 THEN t0.c0 ELSE x'' END COLLATE NOCASE) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CASE t0.c0  WHEN t0.c39 THEN t0.c0 ELSE x'' END COLLATE NOCASE))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CASE t0.c0  WHEN t0.c39 THEN t0.c0 ELSE x'' END COLLATE NOCASE) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, t0.c39 FROM t0 GROUP BY t0.c0, t0.c39;
SELECT ALL t0.c0, t0.c39 FROM t0 GROUP BY t0.c0, t0.c39 HAVING COUNT(COUNT(*)) UNION ALL SELECT t0.c0, t0.c39 FROM t0 GROUP BY t0.c0, t0.c39 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL t0.c0, t0.c39 FROM t0 GROUP BY t0.c0, t0.c39 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT MIN((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE t0.c39 END IN ())) FROM vt1, t0 ORDER BY ((((((t0.c0)AND(t0.c0)))AND(t0.c39)))-(vt1.c0 COLLATE BINARY))  NULLS LAST;
SELECT ALL * FROM vt2;
SELECT ALL * FROM vt2 WHERE (((vt2.c0)IS(vt2.c0)) COLLATE RTRIM) UNION ALL SELECT * FROM vt2 WHERE ((NOT (((vt2.c0)IS(vt2.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt2 WHERE (((((vt2.c0)IS(vt2.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt2;
SELECT DISTINCT * FROM vt2, vt1;
SELECT DISTINCT * FROM vt2, vt1 WHERE ((((CASE vt1.c1  WHEN vt1.c1 THEN vt2.c0 END))<=(((((vt2.c0, vt1.c1, vt1.c0, vt1.c1, vt1.c0)) BETWEEN ((vt1.c1, vt1.c0, vt1.c1, vt2.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt2.c0, vt2.c0))))))) UNION SELECT DISTINCT * FROM vt2, vt1 WHERE ((NOT ((((CASE vt1.c1  WHEN vt1.c1 THEN vt2.c0 END))<=(((((vt2.c0, vt1.c1, vt1.c0, vt1.c1, vt1.c0)) BETWEEN ((vt1.c1, vt1.c0, vt1.c1, vt2.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt2.c0, vt2.c0))))))))) UNION SELECT DISTINCT * FROM vt2, vt1 WHERE ((((((CASE vt1.c1  WHEN vt1.c1 THEN vt2.c0 END))<=(((((vt2.c0, vt1.c1, vt1.c0, vt1.c1, vt1.c0)) BETWEEN ((vt1.c1, vt1.c0, vt1.c1, vt2.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt2.c0, vt2.c0))))))) ISNULL));
SELECT DISTINCT * FROM vt2, vt1;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE ((((NULL COLLATE BINARY))<((((vt2.c0) NOT NULL))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT ((((NULL COLLATE BINARY))<((((vt2.c0) NOT NULL))))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((((((NULL COLLATE BINARY))<((((vt2.c0) NOT NULL))))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((- (AVG(COUNT(vt0.c0)))))>>(GROUP_CONCAT(COUNT(vt0.c0)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((((- (AVG(COUNT(vt0.c0)))))>>(GROUP_CONCAT(COUNT(vt0.c0)))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((((- (AVG(COUNT(vt0.c0)))))>>(GROUP_CONCAT(COUNT(vt0.c0))))) ISNULL);
SELECT vt2.c0 FROM vt2;
SELECT ALL vt2.c0 FROM vt2 WHERE ((((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) IN ())) UNION ALL SELECT vt2.c0 FROM vt2 WHERE ((NOT ((((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) IN ())))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE ((((((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) IN ())) ISNULL));
SELECT vt2.c0 FROM vt2;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c39) NOT BETWEEN (t0.c39) AND (t0.c0))) NOT BETWEEN (t0.c39) AND ((- (t0.c39))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c39) NOT BETWEEN (t0.c39) AND (t0.c0))) NOT BETWEEN (t0.c39) AND ((- (t0.c39))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c39) NOT BETWEEN (t0.c39) AND (t0.c0))) NOT BETWEEN (t0.c39) AND ((- (t0.c39))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE (((NULL)|(LAST_INSERT_ROWID()))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (((NULL)|(LAST_INSERT_ROWID()))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((((NULL)|(LAST_INSERT_ROWID()))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0 HAVING (NOT (((vt1.c1) NOTNULL))) UNION ALL SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0 HAVING (NOT ((NOT (((vt1.c1) NOTNULL))))) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0 HAVING (((NOT (((vt1.c1) NOTNULL)))) ISNULL);
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0 HAVING (NOT (((vt1.c1) NOTNULL))) UNION ALL SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0 HAVING (NOT ((NOT (((vt1.c1) NOTNULL))))) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0 HAVING (((NOT (((vt1.c1) NOTNULL)))) ISNULL);
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT ALL MAX(((((t0.c39) IS FALSE))>(((t0.c39)-(t0.c39))))) FROM t0, vt0, vt2 ORDER BY TRIM(vt0.c0)  NULLS FIRST;
SELECT * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE (((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c39 THEN t0.c39 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) IS FALSE)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((CASE t0.c0  WHEN t0.c39 THEN t0.c39 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) IS FALSE)))) UNION SELECT DISTINCT * FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c39 THEN t0.c39 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt1.c1, vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt1.c1, vt2.c0, vt1.c0;
SELECT ALL vt1.c1, vt2.c0, vt1.c0 FROM vt1, vt2 WHERE (((((vt1.c1)LIKE(vt2.c0))) NOT BETWEEN ((vt1.c1 IN (vt1.c1))) AND (vt1.c0))) GROUP BY vt1.c1, vt2.c0, vt1.c0 UNION SELECT vt1.c1, vt2.c0, vt1.c0 FROM vt1, vt2 WHERE ((NOT (((((vt1.c1)LIKE(vt2.c0))) NOT BETWEEN ((vt1.c1 IN (vt1.c1))) AND (vt1.c0))))) GROUP BY vt1.c1, vt2.c0, vt1.c0 UNION SELECT vt1.c1, vt2.c0, vt1.c0 FROM vt1, vt2 WHERE (((((((vt1.c1)LIKE(vt2.c0))) NOT BETWEEN ((vt1.c1 IN (vt1.c1))) AND (vt1.c0))) ISNULL)) GROUP BY vt1.c1, vt2.c0, vt1.c0;
SELECT vt1.c1, vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt1.c1, vt2.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c1 FROM vt0, vt2, t0, vt1 GROUP BY vt0.c0, vt1.c1;
SELECT ALL vt0.c0, vt1.c1 FROM vt0, vt2, t0, vt1 GROUP BY vt0.c0, vt1.c1 HAVING AVG(COUNT(*)) UNION ALL SELECT vt0.c0, vt1.c1 FROM vt0, vt2, t0, vt1 GROUP BY vt0.c0, vt1.c1 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT vt0.c0, vt1.c1 FROM vt0, vt2, t0, vt1 GROUP BY vt0.c0, vt1.c1 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT SUM((((t0.c39))<=((CAST(t0.c0 AS REAL))))) FROM t0, vt2 ORDER BY ((CAST(t0.c0 AS BLOB)) BETWEEN (((t0.c39) NOTNULL)) AND (0.7412146629830771)) ASC  NULLS LAST, ABS(DISTINCT CAST(vt2.c0 AS NUMERIC)) DESC  NULLS FIRST;
SELECT ALL vt0.c0, vt1.c1, vt2.c0, t0.c39, t0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, vt2, t0;
SELECT vt0.c0, vt1.c1, vt2.c0, t0.c39, t0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, vt2, t0 WHERE (((CASE vt0.c0  WHEN vt1.c0 THEN t0.c0 ELSE vt2.c0 END) IS TRUE)) UNION ALL SELECT vt0.c0, vt1.c1, vt2.c0, t0.c39, t0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, vt2, t0 WHERE ((NOT (((CASE vt0.c0  WHEN vt1.c0 THEN t0.c0 ELSE vt2.c0 END) IS TRUE)))) UNION ALL SELECT ALL vt0.c0, vt1.c1, vt2.c0, t0.c39, t0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, vt2, t0 WHERE (((((CASE vt0.c0  WHEN vt1.c0 THEN t0.c0 ELSE vt2.c0 END) IS TRUE)) ISNULL));
SELECT ALL vt0.c0, vt1.c1, vt2.c0, t0.c39, t0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, vt2, t0;
SELECT DISTINCT vt0.c0, t0.c0 FROM vt1 INNER JOIN t0 ON ((t0.c39)<(vt1.c1)) COLLATE RTRIM CROSS JOIN vt0 ON CASE ((t0.c0) BETWEEN (vt1.c1) AND (t0.c0))  WHEN t0.c0 COLLATE RTRIM THEN '_.' COLLATE NOCASE WHEN (((t0.c0)) NOT BETWEEN ((t0.c39)) AND ((t0.c0))) THEN (((t0.c39))>=((t0.c0))) WHEN vt0.c0 THEN (t0.c39 IN ()) ELSE (vt1.c1 IN (vt1.c0, vt0.c1)) END;
SELECT DISTINCT vt0.c0, t0.c0 FROM vt1 INNER JOIN t0 ON ((t0.c39)<(vt1.c1)) COLLATE RTRIM CROSS JOIN vt0 ON CASE ((t0.c0) BETWEEN (vt1.c1) AND (t0.c0))  WHEN t0.c0 COLLATE RTRIM THEN '_.' COLLATE NOCASE WHEN (((t0.c0)) NOT BETWEEN ((t0.c39)) AND ((t0.c0))) THEN (((t0.c39))>=((t0.c0))) WHEN vt0.c0 THEN (t0.c39 IN ()) ELSE (vt1.c1 IN (vt1.c0, vt0.c1)) END WHERE (((((vt0.c0)!=(''))) NOT BETWEEN ((NOT (vt0.c0))) AND (((vt1.c0)%(t0.c0))))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM vt1 INNER JOIN t0 ON ((t0.c39)<(vt1.c1)) COLLATE RTRIM CROSS JOIN vt0 ON CASE ((t0.c0) BETWEEN (vt1.c1) AND (t0.c0))  WHEN t0.c0 COLLATE RTRIM THEN '_.' COLLATE NOCASE WHEN (((t0.c0)) NOT BETWEEN ((t0.c39)) AND ((t0.c0))) THEN (((t0.c39))>=((t0.c0))) WHEN vt0.c0 THEN (t0.c39 IN ()) ELSE (vt1.c1 IN (vt1.c0, vt0.c1)) END WHERE ((NOT (((((vt0.c0)!=(''))) NOT BETWEEN ((NOT (vt0.c0))) AND (((vt1.c0)%(t0.c0))))))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM vt1 INNER JOIN t0 ON ((t0.c39)<(vt1.c1)) COLLATE RTRIM CROSS JOIN vt0 ON CASE ((t0.c0) BETWEEN (vt1.c1) AND (t0.c0))  WHEN t0.c0 COLLATE RTRIM THEN '_.' COLLATE NOCASE WHEN (((t0.c0)) NOT BETWEEN ((t0.c39)) AND ((t0.c0))) THEN (((t0.c39))>=((t0.c0))) WHEN vt0.c0 THEN (t0.c39 IN ()) ELSE (vt1.c1 IN (vt1.c0, vt0.c1)) END WHERE (((((((vt0.c0)!=(''))) NOT BETWEEN ((NOT (vt0.c0))) AND (((vt1.c0)%(t0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0 FROM vt1 INNER JOIN t0 ON ((t0.c39)<(vt1.c1)) COLLATE RTRIM CROSS JOIN vt0 ON CASE ((t0.c0) BETWEEN (vt1.c1) AND (t0.c0))  WHEN t0.c0 COLLATE RTRIM THEN '_.' COLLATE NOCASE WHEN (((t0.c0)) NOT BETWEEN ((t0.c39)) AND ((t0.c0))) THEN (((t0.c39))>=((t0.c0))) WHEN vt0.c0 THEN (t0.c39 IN ()) ELSE (vt1.c1 IN (vt1.c0, vt0.c1)) END;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE (((((vt2.c0)OR(vt2.c0)))>((NOT (vt2.c0))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (((((vt2.c0)OR(vt2.c0)))>((NOT (vt2.c0))))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((((((vt2.c0)OR(vt2.c0)))>((NOT (vt2.c0))))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((COUNT(*))AND(vt0.c1)))OR(MIN(COUNT(*)))))<=(CAST(COUNT(TOTAL(MAX(vt0.c1))) AS TEXT))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((((COUNT(*))AND(vt0.c1)))OR(MIN(COUNT(*)))))<=(CAST(COUNT(TOTAL(MAX(vt0.c1))) AS TEXT))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((COUNT(*))AND(vt0.c1)))OR(MIN(COUNT(*)))))<=(CAST(COUNT(TOTAL(MAX(vt0.c1))) AS TEXT)))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (CASE ((t0.c39)IS(t0.c0))  WHEN t0.c0 THEN ((t0.c39) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((t0.c0) NOTNULL) THEN 0.09431342145962995 WHEN (((t0.c0))>=((t0.c39))) THEN ((((t0.c39)AND(x'')))OR(t0.c39)) END) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CASE ((t0.c39)IS(t0.c0))  WHEN t0.c0 THEN ((t0.c39) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((t0.c0) NOTNULL) THEN 0.09431342145962995 WHEN (((t0.c0))>=((t0.c39))) THEN ((((t0.c39)AND(x'')))OR(t0.c39)) END))) UNION ALL SELECT * FROM t0 WHERE (((CASE ((t0.c39)IS(t0.c0))  WHEN t0.c0 THEN ((t0.c39) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((t0.c0) NOTNULL) THEN 0.09431342145962995 WHEN (((t0.c0))>=((t0.c39))) THEN ((((t0.c39)AND(x'')))OR(t0.c39)) END) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE WHEN (vt1.c1 IN ()) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN (vt1.c1 IN ()) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE WHEN (vt1.c1 IN ()) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 WHERE (CAST((NOT (vt1.c0)) AS REAL)) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE ((NOT (CAST((NOT (vt1.c0)) AS REAL)))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE (((CAST((NOT (vt1.c0)) AS REAL)) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING MAX(TOTAL(MIN(GROUP_CONCAT(vt0.c1)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (MAX(TOTAL(MIN(GROUP_CONCAT(vt0.c1)))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((MAX(TOTAL(MIN(GROUP_CONCAT(vt0.c1))))) ISNULL);
SELECT ALL * FROM vt1, vt2;
SELECT * FROM vt1, vt2 WHERE (((vt2.c0 COLLATE BINARY)|((((vt1.c0))>=((vt2.c0)))))) UNION ALL SELECT * FROM vt1, vt2 WHERE ((NOT (((vt2.c0 COLLATE BINARY)|((((vt1.c0))>=((vt2.c0)))))))) UNION ALL SELECT * FROM vt1, vt2 WHERE (((((vt2.c0 COLLATE BINARY)|((((vt1.c0))>=((vt2.c0)))))) ISNULL));
SELECT ALL * FROM vt1, vt2;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 NOT INDEXED WHERE (DATE((((vt1.c0))=((vt1.c0))), (NOT (vt1.c0)), (vt1.c0 IN ()), (vt1.c0 IN ()), ((((vt1.c1)OR(vt1.c1)))OR(vt1.c1)))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (DATE((((vt1.c0))=((vt1.c0))), (NOT (vt1.c0)), (vt1.c0 IN ()), (vt1.c0 IN ()), ((((vt1.c1)OR(vt1.c1)))OR(vt1.c1)))))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE (((DATE((((vt1.c0))==((vt1.c0))), (NOT (vt1.c0)), (vt1.c0 IN ()), (vt1.c0 IN ()), ((((vt1.c1)OR(vt1.c1)))OR(vt1.c1)))) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT ALL t0.c39, t0.c0 FROM vt2, t0 GROUP BY t0.c39, t0.c0;
SELECT t0.c39, t0.c0 FROM vt2, t0 WHERE (((((vt2.c0)LIKE(t0.c0)))%(0X1e49ee9b))) GROUP BY t0.c39, t0.c0 UNION SELECT t0.c39, t0.c0 FROM vt2, t0 WHERE ((NOT (((((vt2.c0)LIKE(t0.c0)))%(0X1e49ee9b))))) GROUP BY t0.c39, t0.c0 UNION SELECT ALL t0.c39, t0.c0 FROM vt2, t0 WHERE (((((((vt2.c0)LIKE(t0.c0)))%(0x1e49ee9b))) ISNULL)) GROUP BY t0.c39, t0.c0;
SELECT ALL t0.c39, t0.c0 FROM vt2, t0 GROUP BY t0.c39, t0.c0;
SELECT ALL vt0.c1, vt0.c0, vt2.c0 FROM vt2 CROSS JOIN vt0 ON (((((((((- (vt0.c1)))AND((- (vt2.c0)))))OR(NULL COLLATE BINARY)))AND(((vt0.c0)<>(vt0.c0)))))AND(vt0.c1 COLLATE NOCASE)) GROUP BY vt0.c1, vt0.c0, vt2.c0;
SELECT ALL vt0.c1, vt0.c0, vt2.c0 FROM vt2 CROSS JOIN vt0 ON (((((((((- (vt0.c1)))AND((- (vt2.c0)))))OR(NULL COLLATE BINARY)))AND(((vt0.c0)<>(vt0.c0)))))AND(vt0.c1 COLLATE NOCASE)) GROUP BY vt0.c1, vt0.c0, vt2.c0 HAVING ((((vt0.c1)<(vt0.c0))) IS FALSE) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt2.c0 FROM vt2 CROSS JOIN vt0 ON (((((((((- (vt0.c1)))AND((- (vt2.c0)))))OR(NULL COLLATE BINARY)))AND(((vt0.c0)<>(vt0.c0)))))AND(vt0.c1 COLLATE NOCASE)) GROUP BY vt0.c1, vt0.c0, vt2.c0 HAVING (NOT (((((vt0.c1)<(vt0.c0))) IS FALSE))) UNION ALL SELECT vt0.c1, vt0.c0, vt2.c0 FROM vt2 CROSS JOIN vt0 ON (((((((((- (vt0.c1)))AND((- (vt2.c0)))))OR(NULL COLLATE BINARY)))AND(((vt0.c0)!=(vt0.c0)))))AND(vt0.c1 COLLATE NOCASE)) GROUP BY vt0.c1, vt0.c0, vt2.c0 HAVING ((((((vt0.c1)<(vt0.c0))) IS FALSE)) ISNULL);
SELECT ALL vt0.c1, vt0.c0, vt2.c0 FROM vt2 CROSS JOIN vt0 ON (((((((((- (vt0.c1)))AND((- (vt2.c0)))))OR(NULL COLLATE BINARY)))AND(((vt0.c0)<>(vt0.c0)))))AND(vt0.c1 COLLATE NOCASE)) GROUP BY vt0.c1, vt0.c0, vt2.c0;
SELECT ALL vt0.c1, vt0.c0, vt2.c0 FROM vt2 CROSS JOIN vt0 ON (((((((((- (vt0.c1)))AND((- (vt2.c0)))))OR(NULL COLLATE BINARY)))AND(((vt0.c0)<>(vt0.c0)))))AND(vt0.c1 COLLATE NOCASE)) GROUP BY vt0.c1, vt0.c0, vt2.c0 HAVING ((((vt0.c1)<(vt0.c0))) IS FALSE) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt2.c0 FROM vt2 CROSS JOIN vt0 ON (((((((((- (vt0.c1)))AND((- (vt2.c0)))))OR(NULL COLLATE BINARY)))AND(((vt0.c0)<>(vt0.c0)))))AND(vt0.c1 COLLATE NOCASE)) GROUP BY vt0.c1, vt0.c0, vt2.c0 HAVING (NOT (((((vt0.c1)<(vt0.c0))) IS FALSE))) UNION ALL SELECT vt0.c1, vt0.c0, vt2.c0 FROM vt2 CROSS JOIN vt0 ON (((((((((- (vt0.c1)))AND((- (vt2.c0)))))OR(NULL COLLATE BINARY)))AND(((vt0.c0)!=(vt0.c0)))))AND(vt0.c1 COLLATE NOCASE)) GROUP BY vt0.c1, vt0.c0, vt2.c0 HAVING ((((((vt0.c1)<(vt0.c0))) IS FALSE)) ISNULL);
SELECT ALL vt0.c1, vt0.c0, vt2.c0 FROM vt2 CROSS JOIN vt0 ON (((((((((- (vt0.c1)))AND((- (vt2.c0)))))OR(NULL COLLATE BINARY)))AND(((vt0.c0)<>(vt0.c0)))))AND(vt0.c1 COLLATE NOCASE)) GROUP BY vt0.c1, vt0.c0, vt2.c0;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c1;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c1 WHERE (t0.c0) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c1 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c1 WHERE (((t0.c0) ISNULL));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c1;
SELECT DISTINCT vt0.c1, t0.c0 FROM vt0 INNER JOIN vt1 ON (((~ (t0.c0)))GLOB('450612604')) INNER JOIN t0 ON t0.c0 LEFT OUTER JOIN vt2 ON (+ (highlight(vt0.c1, vt0.c1, vt2.c0, vt2.c0)));
SELECT DISTINCT vt0.c1, t0.c0 FROM vt0 INNER JOIN vt1 ON (((~ (t0.c0)))GLOB('450612604')) INNER JOIN t0 ON t0.c0 LEFT OUTER JOIN vt2 ON (+ (highlight(vt0.c1, vt0.c1, vt2.c0, vt2.c0))) WHERE ((+ (vt2.c0)) COLLATE NOCASE) UNION SELECT DISTINCT vt0.c1, t0.c0 FROM vt0 INNER JOIN vt1 ON (((~ (t0.c0)))GLOB('450612604')) INNER JOIN t0 ON t0.c0 LEFT OUTER JOIN vt2 ON (+ (highlight(vt0.c1, vt0.c1, vt2.c0, vt2.c0))) WHERE ((NOT ((+ (vt2.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c1, t0.c0 FROM vt0 INNER JOIN vt1 ON (((~ (t0.c0)))GLOB('450612604')) INNER JOIN t0 ON t0.c0 LEFT OUTER JOIN vt2 ON (+ (highlight(vt0.c1, vt0.c1, vt2.c0, vt2.c0))) WHERE ((((+ (vt2.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c1, t0.c0 FROM vt0 INNER JOIN vt1 ON (((~ (t0.c0)))GLOB('450612604')) INNER JOIN t0 ON t0.c0 LEFT OUTER JOIN vt2 ON (+ (highlight(vt0.c1, vt0.c1, vt2.c0, vt2.c0)));
SELECT ALL vt1.c0, vt1.c1, vt2.c0 FROM vt2, vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt1.c1, vt2.c0;
SELECT ALL vt1.c0, vt1.c1, vt2.c0 FROM vt2, vt0 NATURAL JOIN vt1 WHERE (((((vt2.c0)%(vt0.c0)))>>((((vt1.c0))<((vt0.c0)))))) GROUP BY vt1.c0, vt1.c1, vt2.c0 UNION SELECT vt1.c0, vt1.c1, vt2.c0 FROM vt2, vt0 NATURAL JOIN vt1 WHERE ((NOT (((((vt2.c0)%(vt0.c0)))>>((((vt1.c0))<((vt0.c0)))))))) GROUP BY vt1.c0, vt1.c1, vt2.c0 UNION SELECT vt1.c0, vt1.c1, vt2.c0 FROM vt2, vt0 NATURAL JOIN vt1 WHERE (((((((vt2.c0)%(vt0.c0)))>>((((vt1.c0))<((vt0.c0)))))) ISNULL)) GROUP BY vt1.c0, vt1.c1, vt2.c0;
SELECT ALL vt1.c0, vt1.c1, vt2.c0 FROM vt2, vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt1.c1, vt2.c0;
SELECT ALL vt2.c0 FROM vt1, vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt1, vt2 GROUP BY vt2.c0 HAVING (~ (vt1.c1)) COLLATE RTRIM UNION ALL SELECT ALL vt2.c0 FROM vt1, vt2 GROUP BY vt2.c0 HAVING (NOT ((~ (vt1.c1)) COLLATE RTRIM)) UNION ALL SELECT vt2.c0 FROM vt1, vt2 GROUP BY vt2.c0 HAVING (((~ (vt1.c1)) COLLATE RTRIM) ISNULL);
SELECT ALL vt2.c0 FROM vt1, vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt1, vt2 GROUP BY vt2.c0 HAVING (~ (vt1.c1)) COLLATE RTRIM UNION ALL SELECT ALL vt2.c0 FROM vt1, vt2 GROUP BY vt2.c0 HAVING (NOT ((~ (vt1.c1)) COLLATE RTRIM)) UNION ALL SELECT vt2.c0 FROM vt1, vt2 GROUP BY vt2.c0 HAVING (((~ (vt1.c1)) COLLATE RTRIM) ISNULL);
SELECT ALL vt2.c0 FROM vt1, vt2 GROUP BY vt2.c0;
SELECT ALL * FROM vt2, vt1;
SELECT * FROM vt2, vt1 WHERE ((+ (((vt1.c0) BETWEEN (vt1.c0) AND (0.6827064084651082))))) UNION ALL SELECT * FROM vt2, vt1 WHERE ((NOT ((+ (((vt1.c0) BETWEEN (vt1.c0) AND (0.6827064084651082))))))) UNION ALL SELECT ALL * FROM vt2, vt1 WHERE ((((+ (((vt1.c0) BETWEEN (vt1.c0) AND (0.6827064084651082))))) ISNULL));
SELECT ALL * FROM vt2, vt1;
SELECT DISTINCT * FROM vt2, vt1, vt0;
SELECT DISTINCT * FROM vt2, vt1, vt0 WHERE ((((vt0.c1)) BETWEEN ((vt1.c1 COLLATE NOCASE)) AND (((((vt2.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c1))))))) UNION SELECT DISTINCT * FROM vt2, vt1, vt0 WHERE ((NOT ((((vt0.c1)) BETWEEN ((vt1.c1 COLLATE NOCASE)) AND (((((vt2.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c1))))))))) UNION SELECT DISTINCT * FROM vt2, vt1, vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt1.c1 COLLATE NOCASE)) AND (((((vt2.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c1))))))) ISNULL));
SELECT DISTINCT * FROM vt2, vt1, vt0;
SELECT vt0.c0, t0.c0 FROM vt0, t0, vt2 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0, vt2 WHERE ((((((t0.c0)/(t0.c0)), t0.c39 COLLATE BINARY, CASE t0.c0  WHEN t0.c39 THEN t0.c39 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c39 THEN vt0.c1 ELSE t0.c0 END, (- (t0.c0)), (vt0.c1 IN ())))<((x'', vt2.c0, CASE WHEN vt0.c1 THEN t0.c39 ELSE t0.c39 END, json_array_length(vt0.c0), CASE WHEN vt2.c0 THEN vt0.c0 ELSE vt2.c0 END)))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM vt0, t0, vt2 WHERE ((NOT ((((((t0.c0)/(t0.c0)), t0.c39 COLLATE BINARY, CASE t0.c0  WHEN t0.c39 THEN t0.c39 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c39 THEN vt0.c1 ELSE t0.c0 END, (- (t0.c0)), (vt0.c1 IN ())))<((x'', vt2.c0, CASE WHEN vt0.c1 THEN t0.c39 ELSE t0.c39 END, json_array_length(vt0.c0), CASE WHEN vt2.c0 THEN vt0.c0 ELSE vt2.c0 END)))))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0, t0, vt2 WHERE ((((((((t0.c0)/(t0.c0)), t0.c39 COLLATE BINARY, CASE t0.c0  WHEN t0.c39 THEN t0.c39 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c39 THEN vt0.c1 ELSE t0.c0 END, (- (t0.c0)), (vt0.c1 IN ())))<((x'', vt2.c0, CASE WHEN vt0.c1 THEN t0.c39 ELSE t0.c39 END, json_array_length(vt0.c0), CASE WHEN vt2.c0 THEN vt0.c0 ELSE vt2.c0 END)))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0, vt2 GROUP BY vt0.c0, t0.c0;
SELECT t0.c0, t0.c39, vt2.c0 FROM t0, vt2 GROUP BY t0.c0, t0.c39, vt2.c0;
SELECT t0.c0, t0.c39, vt2.c0 FROM t0, vt2 GROUP BY t0.c0, t0.c39, vt2.c0 HAVING ((((((((((AVG(t0.c0)) BETWEEN (t0.c0) AND (AVG(COUNT(*)))))AND(GROUP_CONCAT(t0.c39))))OR(CAST(vt2.c0 AS BLOB))))AND(GROUP_CONCAT(t0.c0))))OR(MAX(AVG(NULL)))) UNION ALL SELECT t0.c0, t0.c39, vt2.c0 FROM t0, vt2 GROUP BY t0.c0, t0.c39, vt2.c0 HAVING (NOT (((((((((((AVG(t0.c0)) BETWEEN (t0.c0) AND (AVG(COUNT(*)))))AND(GROUP_CONCAT(t0.c39))))OR(CAST(vt2.c0 AS BLOB))))AND(GROUP_CONCAT(t0.c0))))OR(MAX(AVG(NULL)))))) UNION ALL SELECT t0.c0, t0.c39, vt2.c0 FROM t0, vt2 GROUP BY t0.c0, t0.c39, vt2.c0 HAVING ((((((((((((AVG(t0.c0)) BETWEEN (t0.c0) AND (AVG(COUNT(*)))))AND(GROUP_CONCAT(t0.c39))))OR(CAST(vt2.c0 AS BLOB))))AND(GROUP_CONCAT(t0.c0))))OR(MAX(AVG(NULL))))) ISNULL);
SELECT ALL MAX(((((((((((t0.c39)IS(t0.c39)))AND(((t0.c0) IS FALSE))))OR(((t0.c39) IS TRUE))))AND(((((t0.c0)AND(t0.c39)))OR(t0.c0)))))OR(((t0.c0) BETWEEN (0Xffffffff98bd9c1a) AND (t0.c39))))) FROM t0;
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON (NOT (((t0.c39)<(x'afc4'))));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (NOT (((t0.c39)<(x'afc4')))) WHERE (((t0.c39)|(CAST(vt0.c0 AS BLOB)))) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON (NOT (((t0.c39)<(x'afc4')))) WHERE ((NOT (((t0.c39)|(CAST(vt0.c0 AS BLOB)))))) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON (NOT (((t0.c39)<(x'afc4')))) WHERE (((((t0.c39)|(CAST(vt0.c0 AS BLOB)))) ISNULL));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON (NOT (((t0.c39)<(x'afc4'))));
SELECT DISTINCT t0.c0, vt2.c0 FROM vt1, vt0, t0, vt2;
SELECT DISTINCT t0.c0, vt2.c0 FROM vt1, vt0, t0, vt2 WHERE ((- ((+ (vt1.c1))))) UNION SELECT DISTINCT t0.c0, vt2.c0 FROM vt1, vt0, t0, vt2 WHERE ((NOT ((- ((+ (vt1.c1))))))) UNION SELECT DISTINCT t0.c0, vt2.c0 FROM vt1, vt0, t0, vt2 WHERE ((((- ((+ (vt1.c1))))) ISNULL));
SELECT DISTINCT t0.c0, vt2.c0 FROM vt1, vt0, t0, vt2;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE ((((vt2.c0 IN ())) NOTNULL)) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT ((((vt2.c0 IN ())) NOTNULL)))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((((((vt2.c0 IN ())) NOTNULL)) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING SUM(SUM(MIN(MAX(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (SUM(SUM(MIN(MAX(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((SUM(SUM(MIN(MAX(vt0.c0))))) ISNULL);
SELECT vt1.c1 FROM vt1, vt0, vt2;
SELECT ALL vt1.c1 FROM vt1, vt0, vt2 WHERE (((((vt1.c0 COLLATE BINARY)OR(((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)))))AND(CAST(vt2.c0 AS REAL)))) UNION ALL SELECT ALL vt1.c1 FROM vt1, vt0, vt2 WHERE ((NOT (((((vt1.c0 COLLATE BINARY)OR(((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)))))AND(CAST(vt2.c0 AS REAL)))))) UNION ALL SELECT vt1.c1 FROM vt1, vt0, vt2 WHERE (((((((vt1.c0 COLLATE BINARY)OR(((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)))))AND(CAST(vt2.c0 AS REAL)))) ISNULL));
SELECT vt1.c1 FROM vt1, vt0, vt2;
SELECT DISTINCT t0.c39, t0.c0 FROM t0;
SELECT DISTINCT t0.c39, t0.c0 FROM t0 WHERE ((+ (((t0.c39) NOT NULL)))) UNION SELECT DISTINCT t0.c39, t0.c0 FROM t0 WHERE ((NOT ((+ (((t0.c39) NOT NULL)))))) UNION SELECT DISTINCT t0.c39, t0.c0 FROM t0 WHERE ((((+ (((t0.c39) NOT NULL)))) ISNULL));
SELECT DISTINCT t0.c39, t0.c0 FROM t0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c1))) BETWEEN ((~ (vt0.c1))) AND ((vt0.c0 IN ())))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c0)GLOB(vt0.c1))) BETWEEN ((~ (vt0.c1))) AND ((vt0.c0 IN ())))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((((((vt0.c0)GLOB(vt0.c1))) BETWEEN ((~ (vt0.c1))) AND ((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c39 AS BLOB)) NOT BETWEEN (CASE WHEN vt0.c1 THEN t0.c39 WHEN vt0.c0 THEN t0.c39 WHEN t0.c0 THEN '31117699' ELSE vt0.c0 END) AND (((vt0.c0) ISNULL))) LEFT OUTER JOIN vt2 ON ((((t0.c0) BETWEEN (t0.c39) AND (vt0.c1))) IS FALSE) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c39 AS BLOB)) NOT BETWEEN (CASE WHEN vt0.c1 THEN t0.c39 WHEN vt0.c0 THEN t0.c39 WHEN t0.c0 THEN '31117699' ELSE vt0.c0 END) AND (((vt0.c0) ISNULL))) LEFT OUTER JOIN vt2 ON ((((t0.c0) BETWEEN (t0.c39) AND (vt0.c1))) IS FALSE) GROUP BY vt0.c1 HAVING MIN(AVG(vt0.c1), SUM(t0.c0)) UNION ALL SELECT vt0.c1 FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c39 AS BLOB)) NOT BETWEEN (CASE WHEN vt0.c1 THEN t0.c39 WHEN vt0.c0 THEN t0.c39 WHEN t0.c0 THEN '31117699' ELSE vt0.c0 END) AND (((vt0.c0) ISNULL))) LEFT OUTER JOIN vt2 ON ((((t0.c0) BETWEEN (t0.c39) AND (vt0.c1))) IS FALSE) GROUP BY vt0.c1 HAVING (NOT (MIN(AVG(vt0.c1), SUM(t0.c0)))) UNION ALL SELECT vt0.c1 FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c39 AS BLOB)) NOT BETWEEN (CASE WHEN vt0.c1 THEN t0.c39 WHEN vt0.c0 THEN t0.c39 WHEN t0.c0 THEN '31117699' ELSE vt0.c0 END) AND (((vt0.c0) ISNULL))) LEFT OUTER JOIN vt2 ON ((((t0.c0) BETWEEN (t0.c39) AND (vt0.c1))) IS FALSE) GROUP BY vt0.c1 HAVING ((MIN(AVG(vt0.c1), SUM(t0.c0))) ISNULL);
SELECT ALL vt0.c1 FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c39 AS BLOB)) NOT BETWEEN (CASE WHEN vt0.c1 THEN t0.c39 WHEN vt0.c0 THEN t0.c39 WHEN t0.c0 THEN '31117699' ELSE vt0.c0 END) AND (((vt0.c0) ISNULL))) LEFT OUTER JOIN vt2 ON ((((t0.c0) BETWEEN (t0.c39) AND (vt0.c1))) IS FALSE) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c39 AS BLOB)) NOT BETWEEN (CASE WHEN vt0.c1 THEN t0.c39 WHEN vt0.c0 THEN t0.c39 WHEN t0.c0 THEN '31117699' ELSE vt0.c0 END) AND (((vt0.c0) ISNULL))) LEFT OUTER JOIN vt2 ON ((((t0.c0) BETWEEN (t0.c39) AND (vt0.c1))) IS FALSE) GROUP BY vt0.c1 HAVING MIN(AVG(vt0.c1), SUM(t0.c0)) UNION ALL SELECT vt0.c1 FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c39 AS BLOB)) NOT BETWEEN (CASE WHEN vt0.c1 THEN t0.c39 WHEN vt0.c0 THEN t0.c39 WHEN t0.c0 THEN '31117699' ELSE vt0.c0 END) AND (((vt0.c0) ISNULL))) LEFT OUTER JOIN vt2 ON ((((t0.c0) BETWEEN (t0.c39) AND (vt0.c1))) IS FALSE) GROUP BY vt0.c1 HAVING (NOT (MIN(AVG(vt0.c1), SUM(t0.c0)))) UNION ALL SELECT vt0.c1 FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c39 AS BLOB)) NOT BETWEEN (CASE WHEN vt0.c1 THEN t0.c39 WHEN vt0.c0 THEN t0.c39 WHEN t0.c0 THEN '31117699' ELSE vt0.c0 END) AND (((vt0.c0) ISNULL))) LEFT OUTER JOIN vt2 ON ((((t0.c0) BETWEEN (t0.c39) AND (vt0.c1))) IS FALSE) GROUP BY vt0.c1 HAVING ((MIN(AVG(vt0.c1), SUM(t0.c0))) ISNULL);
SELECT ALL vt0.c1 FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c39 AS BLOB)) NOT BETWEEN (CASE WHEN vt0.c1 THEN t0.c39 WHEN vt0.c0 THEN t0.c39 WHEN t0.c0 THEN '31117699' ELSE vt0.c0 END) AND (((vt0.c0) ISNULL))) LEFT OUTER JOIN vt2 ON ((((t0.c0) BETWEEN (t0.c39) AND (vt0.c1))) IS FALSE) GROUP BY vt0.c1;
SELECT ALL vt1.c1 FROM t0 LEFT OUTER JOIN vt1 ON CAST(NULL AS INTEGER);
SELECT vt1.c1 FROM t0 LEFT OUTER JOIN vt1 ON CAST(NULL AS INTEGER) WHERE (CASE (NULL IN ())  WHEN (NULL IN (vt1.c0, 1556322718)) THEN (t0.c39 IN (vt1.c0)) END) UNION ALL SELECT ALL vt1.c1 FROM t0 LEFT OUTER JOIN vt1 ON CAST(NULL AS INTEGER) WHERE ((NOT (CASE (NULL IN ())  WHEN (NULL IN (vt1.c0, 1556322718)) THEN (t0.c39 IN (vt1.c0)) END))) UNION ALL SELECT vt1.c1 FROM t0 LEFT OUTER JOIN vt1 ON CAST(NULL AS INTEGER) WHERE (((CASE (NULL IN ())  WHEN (NULL IN (vt1.c0, 1556322718)) THEN (t0.c39 IN (vt1.c0)) END) ISNULL));
SELECT ALL vt1.c1 FROM t0 LEFT OUTER JOIN vt1 ON CAST(NULL AS INTEGER);
SELECT DISTINCT vt1.c1, t0.c0, vt2.c0, vt0.c1 FROM vt2 INNER JOIN t0 ON vt0.c0 RIGHT OUTER JOIN vt0 ON (((((vt2.c0))<((vt1.c1)))) IS FALSE) INNER JOIN vt1 ON (((- (vt1.c1)))%(NULL));
SELECT vt2.c0, vt0.c0, t0.c0, vt1.c0, vt1.c1, t0.c39, vt0.c1 FROM vt1, vt2, t0, vt0 GROUP BY vt2.c0, vt0.c0, t0.c0, vt1.c0, vt1.c1, t0.c39, vt0.c1;
SELECT vt2.c0, vt0.c0, t0.c0, vt1.c0, vt1.c1, t0.c39, vt0.c1 FROM vt1, vt2, t0, vt0 WHERE ((+ (vt0.c0)) COLLATE RTRIM) GROUP BY vt2.c0, vt0.c0, t0.c0, vt1.c0, vt1.c1, t0.c39, vt0.c1 UNION SELECT ALL vt2.c0, vt0.c0, t0.c0, vt1.c0, vt1.c1, t0.c39, vt0.c1 FROM vt1, vt2, t0, vt0 WHERE ((NOT ((+ (vt0.c0)) COLLATE RTRIM))) GROUP BY vt2.c0, vt0.c0, t0.c0, vt1.c0, vt1.c1, t0.c39, vt0.c1 UNION SELECT vt2.c0, vt0.c0, t0.c0, vt1.c0, vt1.c1, t0.c39, vt0.c1 FROM vt1, vt2, t0 NOT INDEXED, vt0 WHERE ((((+ (vt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt2.c0, vt0.c0, t0.c0, vt1.c0, vt1.c1, t0.c39, vt0.c1;
SELECT vt2.c0, vt0.c0, t0.c0, vt1.c0, vt1.c1, t0.c39, vt0.c1 FROM vt1, vt2, t0, vt0 GROUP BY vt2.c0, vt0.c0, t0.c0, vt1.c0, vt1.c1, t0.c39, vt0.c1;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((((((((vt0.c1) IS FALSE))AND(TOTAL(vt0.c1))))OR(MAX(vt0.c1))))OR(MIN(SUM(MAX(''))))))AND(COUNT(*))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((((((((((vt0.c1) IS FALSE))AND(TOTAL(vt0.c1))))OR(MAX(vt0.c1))))OR(MIN(SUM(MAX(''))))))AND(COUNT(*))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((((((((((vt0.c1) IS FALSE))AND(TOTAL(vt0.c1))))OR(MAX(vt0.c1))))OR(MIN(SUM(MAX(''))))))AND(COUNT(*)))) ISNULL);
SELECT ALL * FROM vt2, vt1, vt0;
SELECT * FROM vt2, vt1, vt0 WHERE (CAST((x'' IN ()) AS BLOB)) UNION ALL SELECT * FROM vt2, vt1, vt0 WHERE ((NOT (CAST((x'' IN ()) AS BLOB)))) UNION ALL SELECT * FROM vt2, vt1, vt0 WHERE (((CAST((x'' IN ()) AS BLOB)) ISNULL));
SELECT ALL * FROM vt2, vt1, vt0;
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE (((((vt2.c0)|(vt2.c0)))>>((NOT (vt2.c0))))) UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT (((((vt2.c0)|(vt2.c0)))>>((NOT (vt2.c0))))))) UNION SELECT DISTINCT * FROM vt2 WHERE (((((((vt2.c0)|(vt2.c0)))>>((NOT (vt2.c0))))) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT t0.c39, t0.c0 FROM vt2, t0, vt0 GROUP BY t0.c39, t0.c0;
SELECT ALL t0.c39, t0.c0 FROM vt2, t0, vt0 WHERE (CAST(CASE t0.c0  WHEN t0.c39 THEN vt0.c1 END AS NUMERIC)) GROUP BY t0.c39, t0.c0 UNION SELECT ALL t0.c39, t0.c0 FROM vt2, t0, vt0 WHERE ((NOT (CAST(CASE t0.c0  WHEN t0.c39 THEN vt0.c1 END AS NUMERIC)))) GROUP BY t0.c39, t0.c0 UNION SELECT t0.c39, t0.c0 FROM vt2, t0, vt0 WHERE (((CAST(CASE t0.c0  WHEN t0.c39 THEN vt0.c1 END AS NUMERIC)) ISNULL)) GROUP BY t0.c39, t0.c0;
SELECT t0.c39, t0.c0 FROM vt2, t0, vt0 GROUP BY t0.c39, t0.c0;
SELECT t0.c39, t0.c0 FROM t0 GROUP BY t0.c39, t0.c0;
SELECT ALL t0.c39, t0.c0 FROM t0 GROUP BY t0.c39, t0.c0 HAVING GROUP_CONCAT(CASE WHEN t0.c0 THEN t0.c39 ELSE t0.c0 END) UNION ALL SELECT ALL t0.c39, t0.c0 FROM t0 GROUP BY t0.c39, t0.c0 HAVING (NOT (GROUP_CONCAT(CASE WHEN t0.c0 THEN t0.c39 ELSE t0.c0 END))) UNION ALL SELECT t0.c39, t0.c0 FROM t0 GROUP BY t0.c39, t0.c0 HAVING ((GROUP_CONCAT(CASE WHEN t0.c0 THEN t0.c39 ELSE t0.c0 END)) ISNULL);
SELECT t0.c39, t0.c0 FROM t0 GROUP BY t0.c39, t0.c0;
SELECT ALL t0.c39, t0.c0 FROM t0 GROUP BY t0.c39, t0.c0 HAVING GROUP_CONCAT(CASE WHEN t0.c0 THEN t0.c39 ELSE t0.c0 END) UNION ALL SELECT ALL t0.c39, t0.c0 FROM t0 GROUP BY t0.c39, t0.c0 HAVING (NOT (GROUP_CONCAT(CASE WHEN t0.c0 THEN t0.c39 ELSE t0.c0 END))) UNION ALL SELECT t0.c39, t0.c0 FROM t0 GROUP BY t0.c39, t0.c0 HAVING ((GROUP_CONCAT(CASE WHEN t0.c0 THEN t0.c39 ELSE t0.c0 END)) ISNULL);
SELECT t0.c39, t0.c0 FROM t0 GROUP BY t0.c39, t0.c0;
SELECT ALL MAX(NULL) FROM vt0, t0 ORDER BY (((t0.c0)>(vt0.c1)) IN ());
SELECT vt2.c0 FROM vt2;
SELECT vt2.c0 FROM vt2 WHERE (TRIM(vt2.c0 COLLATE RTRIM, (x'45039acd' IN ()))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (TRIM(vt2.c0 COLLATE RTRIM, (x'45039acd' IN ()))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE (((TRIM(vt2.c0 COLLATE RTRIM, (x'45039acd' IN ()))) ISNULL));
SELECT vt2.c0 FROM vt2;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (CASE t0.c39  WHEN ((((t0.c39)AND(vt0.c1)))AND(t0.c0)) THEN (((t0.c39, t0.c39, t0.c0)) NOT BETWEEN ((t0.c0, t0.c39, vt0.c1)) AND ((vt0.c1, t0.c39, vt0.c0))) WHEN ((0x59535ce9)*(vt0.c0)) THEN ((vt0.c0)&(vt0.c1)) WHEN (~ (t0.c39)) THEN CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN t0.c39 ELSE vt0.c1 END ELSE (((t0.c39))<=((t0.c0))) END) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (CASE t0.c39  WHEN ((((t0.c39)AND(vt0.c1)))AND(t0.c0)) THEN (((t0.c39, t0.c39, t0.c0)) NOT BETWEEN ((t0.c0, t0.c39, vt0.c1)) AND ((vt0.c1, t0.c39, vt0.c0))) WHEN ((0X59535ce9)*(vt0.c0)) THEN ((vt0.c0)&(vt0.c1)) WHEN (~ (t0.c39)) THEN CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN t0.c39 ELSE vt0.c1 END ELSE (((t0.c39))<=((t0.c0))) END))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((CASE t0.c39  WHEN ((((t0.c39)AND(vt0.c1)))AND(t0.c0)) THEN (((t0.c39, t0.c39, t0.c0)) NOT BETWEEN ((t0.c0, t0.c39, vt0.c1)) AND ((vt0.c1, t0.c39, vt0.c0))) WHEN ((0x59535ce9)*(vt0.c0)) THEN ((vt0.c0)&(vt0.c1)) WHEN (~ (t0.c39)) THEN CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN t0.c39 ELSE vt0.c1 END ELSE (((t0.c39))<=((t0.c0))) END) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL vt1.c0, vt0.c1, vt2.c0, t0.c0 FROM t0, vt1, vt0, vt2 GROUP BY vt1.c0, vt0.c1, vt2.c0, t0.c0;
SELECT ALL vt1.c0, vt0.c1, vt2.c0, t0.c0 FROM t0, vt1, vt0, vt2 WHERE (((((vt0.c0)AND((((vt2.c0))>((vt0.c0))))))OR(0.10223887378060859))) GROUP BY vt1.c0, vt0.c1, vt2.c0, t0.c0 UNION SELECT vt1.c0, vt0.c1, vt2.c0, t0.c0 FROM t0, vt1, vt0, vt2 WHERE ((NOT (((((vt0.c0)AND((((vt2.c0))>((vt0.c0))))))OR(0.10223887378060859))))) GROUP BY vt1.c0, vt0.c1, vt2.c0, t0.c0 UNION SELECT ALL vt1.c0, vt0.c1, vt2.c0, t0.c0 FROM t0, vt1, vt0, vt2 WHERE (((((((vt0.c0)AND((((vt2.c0))>((vt0.c0))))))OR(0.10223887378060859))) ISNULL)) GROUP BY vt1.c0, vt0.c1, vt2.c0, t0.c0;
SELECT ALL vt1.c0, vt0.c1, vt2.c0, t0.c0 FROM t0, vt1, vt0, vt2 GROUP BY vt1.c0, vt0.c1, vt2.c0, t0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING SUM(((MAX(MIN(vt0.c1))) IS FALSE)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (SUM(((MAX(MIN(vt0.c1))) IS FALSE)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((SUM(((MAX(MIN(vt0.c1))) IS FALSE))) ISNULL);
SELECT ALL vt2.c0, vt1.c1, vt1.c0 FROM vt1, vt2;
SELECT vt2.c0, vt1.c1, vt1.c0 FROM vt1, vt2 WHERE ('189651010') UNION ALL SELECT vt2.c0, vt1.c1, vt1.c0 FROM vt1, vt2 WHERE ((NOT ('189651010'))) UNION ALL SELECT ALL vt2.c0, vt1.c1, vt1.c0 FROM vt1, vt2 WHERE ((('189651010') ISNULL));
SELECT ALL vt2.c0, vt1.c1, vt1.c0 FROM vt1, vt2;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c1, vt1.c0, vt1.c1)) NOT BETWEEN ((((x'')-(vt1.c0)), ((vt1.c1) NOT NULL), ((vt1.c0)IS(vt1.c0)))) AND ((vt1.c1 COLLATE NOCASE, vt1.c1, vt1.c1)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((vt1.c1, vt1.c0, vt1.c1)) NOT BETWEEN ((((x'')-(vt1.c0)), ((vt1.c1) NOT NULL), ((vt1.c0)IS(vt1.c0)))) AND ((vt1.c1 COLLATE NOCASE, vt1.c1, vt1.c1)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c1, vt1.c0, vt1.c1)) NOT BETWEEN ((((x'')-(vt1.c0)), ((vt1.c1) NOT NULL), ((vt1.c0)IS(vt1.c0)))) AND ((vt1.c1 COLLATE NOCASE, vt1.c1, vt1.c1)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT t0.c0, vt1.c0, vt0.c0, vt2.c0, vt0.c1, vt1.c1, t0.c39 FROM t0, vt1, vt0, vt2 GROUP BY t0.c0, vt1.c0, vt0.c0, vt2.c0, vt0.c1, vt1.c1, t0.c39;
SELECT ALL t0.c0, vt1.c0, vt0.c0, vt2.c0, vt0.c1, vt1.c1, t0.c39 FROM t0, vt1, vt0, vt2 WHERE (((((((vt0.c0)AND(x'')))OR(t0.c0))) IS FALSE)) GROUP BY t0.c0, vt1.c0, vt0.c0, vt2.c0, vt0.c1, vt1.c1, t0.c39 UNION SELECT t0.c0, vt1.c0, vt0.c0, vt2.c0, vt0.c1, vt1.c1, t0.c39 FROM t0, vt1, vt0, vt2 WHERE ((NOT (((((((vt0.c0)AND(x'')))OR(t0.c0))) IS FALSE)))) GROUP BY t0.c0, vt1.c0, vt0.c0, vt2.c0, vt0.c1, vt1.c1, t0.c39 UNION SELECT ALL t0.c0, vt1.c0, vt0.c0, vt2.c0, vt0.c1, vt1.c1, t0.c39 FROM t0, vt1, vt0, vt2 WHERE (((((((((vt0.c0)AND(x'')))OR(t0.c0))) IS FALSE)) ISNULL)) GROUP BY t0.c0, vt1.c0, vt0.c0, vt2.c0, vt0.c1, vt1.c1, t0.c39;
SELECT t0.c0, vt1.c0, vt0.c0, vt2.c0, vt0.c1, vt1.c1, t0.c39 FROM t0, vt1, vt0, vt2 GROUP BY t0.c0, vt1.c0, vt0.c0, vt2.c0, vt0.c1, vt1.c1, t0.c39;
SELECT ALL vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0 HAVING CAST(COUNT(*) AS TEXT) UNION ALL SELECT vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0 HAVING (NOT (CAST(COUNT(*) AS TEXT))) UNION ALL SELECT vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0 HAVING ((CAST(COUNT(*) AS TEXT)) ISNULL);
SELECT ALL vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0 HAVING CAST(COUNT(*) AS TEXT) UNION ALL SELECT vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0 HAVING (NOT (CAST(COUNT(*) AS TEXT))) UNION ALL SELECT vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0 HAVING ((CAST(COUNT(*) AS TEXT)) ISNULL);
SELECT ALL vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0;
SELECT ALL SUM(-327526448) FROM vt2, vt1, t0 ORDER BY (((CAST(t0.c39 AS TEXT)))==((((((vt1.c1)OR(t0.c39)))AND(vt1.c0)))))  NULLS LAST;
SELECT * FROM vt0, vt2, t0;
SELECT ALL * FROM vt0, vt2, t0 WHERE ((((((t0.c0 IN ()))AND(((t0.c39)>(t0.c39)))))AND(CAST(t0.c39 AS TEXT)))) UNION ALL SELECT * FROM vt0, vt2, t0 WHERE ((NOT ((((((t0.c0 IN ()))AND(((t0.c39)>(t0.c39)))))AND(CAST(t0.c39 AS TEXT)))))) UNION ALL SELECT * FROM vt0, vt2, t0 WHERE ((((((((t0.c0 IN ()))AND(((t0.c39)>(t0.c39)))))AND(CAST(t0.c39 AS TEXT)))) ISNULL));
SELECT * FROM vt0, vt2, t0;
SELECT DISTINCT vt0.c0 FROM vt0, vt1, vt2;
SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED, vt1, vt2 WHERE (((json_valid(vt1.c0)) ISNULL)) UNION SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED, vt1, vt2 WHERE ((NOT (((json_valid(vt1.c0)) ISNULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1, vt2 WHERE (((((json_valid(vt1.c0)) ISNULL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, vt1, vt2;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, vt2 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0, vt2 WHERE (x'') GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0, vt2 WHERE ((NOT (x''))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0, vt2 WHERE (((x'') ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, vt2 GROUP BY vt0.c1, vt0.c0;
SELECT vt1.c1 FROM vt2 CROSS JOIN vt1 ON (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt2.c0)))) NOT BETWEEN (vt1.c0) AND (vt1.c1)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt2 CROSS JOIN vt1 ON (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt2.c0)))) NOT BETWEEN (vt1.c0) AND (vt1.c1)) GROUP BY vt1.c1 HAVING CAST('뢿UZ1଀' AS TEXT) UNION ALL SELECT ALL vt1.c1 FROM vt2 CROSS JOIN vt1 ON (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt2.c0)))) NOT BETWEEN (vt1.c0) AND (vt1.c1)) GROUP BY vt1.c1 HAVING (NOT (CAST('뢿UZ1଀' AS TEXT))) UNION ALL SELECT ALL vt1.c1 FROM vt2 CROSS JOIN vt1 ON (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt2.c0)))) NOT BETWEEN (vt1.c0) AND (vt1.c1)) GROUP BY vt1.c1 HAVING ((CAST('뢿UZ1଀' AS TEXT)) ISNULL);
SELECT vt1.c1 FROM vt2 CROSS JOIN vt1 ON (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt2.c0)))) NOT BETWEEN (vt1.c0) AND (vt1.c1)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt2 CROSS JOIN vt1 ON (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt2.c0)))) NOT BETWEEN (vt1.c0) AND (vt1.c1)) GROUP BY vt1.c1 HAVING CAST('뢿UZ1଀' AS TEXT) UNION ALL SELECT ALL vt1.c1 FROM vt2 CROSS JOIN vt1 ON (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt2.c0)))) NOT BETWEEN (vt1.c0) AND (vt1.c1)) GROUP BY vt1.c1 HAVING (NOT (CAST('뢿UZ1଀' AS TEXT))) UNION ALL SELECT ALL vt1.c1 FROM vt2 CROSS JOIN vt1 ON (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt2.c0)))) NOT BETWEEN (vt1.c0) AND (vt1.c1)) GROUP BY vt1.c1 HAVING ((CAST('뢿UZ1଀' AS TEXT)) ISNULL);
SELECT vt1.c1 FROM vt2 CROSS JOIN vt1 ON (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt2.c0)))) NOT BETWEEN (vt1.c0) AND (vt1.c1)) GROUP BY vt1.c1;
SELECT ALL vt2.c0, t0.c0, vt1.c1, vt1.c0, t0.c39 FROM t0, vt1, vt2;
SELECT ALL vt2.c0, t0.c0, vt1.c1, vt1.c0, t0.c39 FROM t0, vt1, vt2 WHERE (((t0.c0)-(((t0.c0)/(t0.c39))))) UNION ALL SELECT ALL vt2.c0, t0.c0, vt1.c1, vt1.c0, t0.c39 FROM t0, vt1, vt2 WHERE ((NOT (((t0.c0)-(((t0.c0)/(t0.c39))))))) UNION ALL SELECT ALL vt2.c0, t0.c0, vt1.c1, vt1.c0, t0.c39 FROM t0, vt1, vt2 WHERE (((((t0.c0)-(((t0.c0)/(t0.c39))))) ISNULL));
SELECT ALL vt2.c0, t0.c0, vt1.c1, vt1.c0, t0.c39 FROM t0, vt1, vt2;
SELECT DISTINCT t0.c0, vt1.c0, vt2.c0, t0.c39, vt1.c1, vt0.c0 FROM vt1, vt0, vt2, t0;
SELECT DISTINCT t0.c0, vt1.c0, vt2.c0, t0.c39, vt1.c1, vt0.c0 FROM vt1, vt0, vt2, t0 WHERE (((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))IS((+ (t0.c0))))) UNION SELECT DISTINCT t0.c0, vt1.c0, vt2.c0, t0.c39, vt1.c1, vt0.c0 FROM vt1, vt0, vt2, t0 WHERE ((NOT (((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))IS((+ (t0.c0))))))) UNION SELECT DISTINCT t0.c0, vt1.c0, vt2.c0, t0.c39, vt1.c1, vt0.c0 FROM vt1, vt0, vt2, t0 WHERE (((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))IS((+ (t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0, vt1.c0, vt2.c0, t0.c39, vt1.c1, vt0.c0 FROM vt1, vt0, vt2, t0;
SELECT t0.c39, vt0.c1, t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c39, vt0.c1, t0.c0, vt0.c0;
SELECT ALL t0.c39, vt0.c1, t0.c0, vt0.c0 FROM vt0, t0 WHERE ((((t0.c39 IN ())) IS FALSE)) GROUP BY t0.c39, vt0.c1, t0.c0, vt0.c0 UNION SELECT ALL t0.c39, vt0.c1, t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT ((((t0.c39 IN ())) IS FALSE)))) GROUP BY t0.c39, vt0.c1, t0.c0, vt0.c0 UNION SELECT ALL t0.c39, vt0.c1, t0.c0, vt0.c0 FROM vt0, t0 WHERE ((((((t0.c39 IN ())) IS FALSE)) ISNULL)) GROUP BY t0.c39, vt0.c1, t0.c0, vt0.c0;
SELECT t0.c39, vt0.c1, t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c39, vt0.c1, t0.c0, vt0.c0;
SELECT ALL vt0.c1, vt0.c0, vt2.c0, vt1.c1, vt1.c0, t0.c39 FROM vt0, vt1, vt2, t0 GROUP BY vt0.c1, vt0.c0, vt2.c0, vt1.c1, vt1.c0, t0.c39;
SELECT vt0.c1, vt0.c0, vt2.c0, vt1.c1, vt1.c0, t0.c39 FROM vt0, vt1, vt2, t0 GROUP BY vt0.c1, vt0.c0, vt2.c0, vt1.c1, vt1.c0, t0.c39 HAVING GROUP_CONCAT(GLOB(t0.c0, t0.c39)) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt2.c0, vt1.c1, vt1.c0, t0.c39 FROM vt0, vt1, vt2, t0 GROUP BY vt0.c1, vt0.c0, vt2.c0, vt1.c1, vt1.c0, t0.c39 HAVING (NOT (GROUP_CONCAT(GLOB(t0.c0, t0.c39)))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt2.c0, vt1.c1, vt1.c0, t0.c39 FROM vt0, vt1, vt2, t0 GROUP BY vt0.c1, vt0.c0, vt2.c0, vt1.c1, vt1.c0, t0.c39 HAVING ((GROUP_CONCAT(GLOB(t0.c0, t0.c39))) ISNULL);
SELECT ALL vt0.c1, vt0.c0, vt2.c0, vt1.c1, vt1.c0, t0.c39 FROM vt0, vt1, vt2, t0 GROUP BY vt0.c1, vt0.c0, vt2.c0, vt1.c1, vt1.c0, t0.c39;
SELECT vt0.c1, vt0.c0, vt2.c0, vt1.c1, vt1.c0, t0.c39 FROM vt0, vt1, vt2, t0 GROUP BY vt0.c1, vt0.c0, vt2.c0, vt1.c1, vt1.c0, t0.c39 HAVING GROUP_CONCAT(GLOB(t0.c0, t0.c39)) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt2.c0, vt1.c1, vt1.c0, t0.c39 FROM vt0, vt1, vt2, t0 GROUP BY vt0.c1, vt0.c0, vt2.c0, vt1.c1, vt1.c0, t0.c39 HAVING (NOT (GROUP_CONCAT(GLOB(t0.c0, t0.c39)))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt2.c0, vt1.c1, vt1.c0, t0.c39 FROM vt0, vt1, vt2, t0 GROUP BY vt0.c1, vt0.c0, vt2.c0, vt1.c1, vt1.c0, t0.c39 HAVING ((GROUP_CONCAT(GLOB(t0.c0, t0.c39))) ISNULL);
SELECT ALL vt0.c1, vt0.c0, vt2.c0, vt1.c1, vt1.c0, t0.c39 FROM vt0, vt1, vt2, t0 GROUP BY vt0.c1, vt0.c0, vt2.c0, vt1.c1, vt1.c0, t0.c39;
SELECT ALL * FROM vt0 FULL OUTER JOIN vt2 ON QUOTE(((vt2.c0)GLOB(vt0.c1)));
SELECT * FROM vt0 FULL OUTER JOIN vt2 ON QUOTE(((vt2.c0)GLOB(vt0.c1))) WHERE (CAST(((vt0.c1)+(vt0.c0)) AS NUMERIC)) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN vt2 ON QUOTE(((vt2.c0)GLOB(vt0.c1))) WHERE ((NOT (CAST(((vt0.c1)+(vt0.c0)) AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN vt2 ON QUOTE(((vt2.c0)GLOB(vt0.c1))) WHERE (((CAST(((vt0.c1)+(vt0.c0)) AS NUMERIC)) ISNULL));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt2 ON QUOTE(((vt2.c0)GLOB(vt0.c1)));
SELECT DISTINCT * FROM vt2 NOT INDEXED, t0 LEFT OUTER JOIN vt0 ON 'H7䂴';
SELECT DISTINCT * FROM vt2, t0 LEFT OUTER JOIN vt0 ON 'H7䂴' WHERE ((('0.1400685434371095' IN (vt0.c1)) IN ())) UNION SELECT DISTINCT * FROM vt2, t0 LEFT OUTER JOIN vt0 ON 'H7䂴' WHERE ((NOT ((('0.1400685434371095' IN (vt0.c1)) IN ())))) UNION SELECT DISTINCT * FROM vt2, t0 LEFT OUTER JOIN vt0 ON 'H7䂴' WHERE ((((('0.1400685434371095' IN (vt0.c1)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt2 NOT INDEXED, t0 LEFT OUTER JOIN vt0 ON 'H7䂴';
SELECT ALL t0.c39, t0.c0, vt0.c0, vt1.c1 FROM t0, vt0, vt1 GROUP BY t0.c39, t0.c0, vt0.c0, vt1.c1;
SELECT t0.c39, t0.c0, vt0.c0, vt1.c1 FROM t0, vt0, vt1 WHERE ((~ (vt1.c1))) GROUP BY t0.c39, t0.c0, vt0.c0, vt1.c1 UNION SELECT t0.c39, t0.c0, vt0.c0, vt1.c1 FROM t0, vt0, vt1 WHERE ((NOT ((~ (vt1.c1))))) GROUP BY t0.c39, t0.c0, vt0.c0, vt1.c1 UNION SELECT ALL t0.c39, t0.c0, vt0.c0, vt1.c1 FROM t0, vt0, vt1 WHERE ((((~ (vt1.c1))) ISNULL)) GROUP BY t0.c39, t0.c0, vt0.c0, vt1.c1;
SELECT ALL t0.c39, t0.c0, vt0.c0, vt1.c1 FROM t0, vt0, vt1 GROUP BY t0.c39, t0.c0, vt0.c0, vt1.c1;
SELECT vt2.c0 FROM t0 INNER JOIN vt2 ON '' GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM t0 INNER JOIN vt2 ON '' GROUP BY vt2.c0 HAVING COUNT(*) UNION ALL SELECT vt2.c0 FROM t0 INNER JOIN vt2 ON '' GROUP BY vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt2.c0 FROM t0 INNER JOIN vt2 ON '' GROUP BY vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt2.c0 FROM t0 INNER JOIN vt2 ON '' GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM t0 INNER JOIN vt2 ON '' GROUP BY vt2.c0 HAVING COUNT(*) UNION ALL SELECT vt2.c0 FROM t0 INNER JOIN vt2 ON '' GROUP BY vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt2.c0 FROM t0 INNER JOIN vt2 ON '' GROUP BY vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt2.c0 FROM t0 INNER JOIN vt2 ON '' GROUP BY vt2.c0;
SELECT ALL * FROM vt0, t0, vt1;
SELECT ALL * FROM vt0, t0, vt1 WHERE (CASE WHEN json_insert(t0.c0, vt0.c1, vt0.c1) THEN (+ (vt1.c1)) END) UNION ALL SELECT ALL * FROM vt0, t0, vt1 NOT INDEXED WHERE ((NOT (CASE WHEN json_insert(t0.c0, vt0.c1, vt0.c1) THEN (+ (vt1.c1)) END))) UNION ALL SELECT ALL * FROM vt0, t0, vt1 WHERE (((CASE WHEN json_insert(t0.c0, vt0.c1, vt0.c1) THEN (+ (vt1.c1)) END) ISNULL));
SELECT ALL * FROM vt0, t0, vt1;
SELECT DISTINCT * FROM vt1, t0, vt2, vt0;
SELECT DISTINCT * FROM vt1, t0, vt2, vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN NULL THEN t0.c39 ELSE (vt1.c1 IN (t0.c0)) END) UNION SELECT DISTINCT * FROM vt1, t0, vt2, vt0 WHERE ((NOT (CASE vt0.c0 COLLATE NOCASE  WHEN NULL THEN t0.c39 ELSE (vt1.c1 IN (t0.c0)) END))) UNION SELECT DISTINCT * FROM vt1, t0, vt2, vt0 WHERE (((CASE vt0.c0 COLLATE NOCASE  WHEN NULL THEN t0.c39 ELSE (vt1.c1 IN (t0.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt1, t0, vt2, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0) IS TRUE) IN ())) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0) IS TRUE) IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0) IS TRUE) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt2.c0, vt0.c0 FROM vt2 CROSS JOIN vt0 ON vt2.c0 COLLATE RTRIM GROUP BY vt2.c0, vt0.c0;
SELECT vt2.c0, vt0.c0 FROM vt2 CROSS JOIN vt0 ON vt2.c0 COLLATE RTRIM GROUP BY vt2.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt2.c0, vt0.c0 FROM vt2 CROSS JOIN vt0 ON vt2.c0 COLLATE RTRIM GROUP BY vt2.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt2.c0, vt0.c0 FROM vt2 CROSS JOIN vt0 ON vt2.c0 COLLATE RTRIM GROUP BY vt2.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt2.c0, vt0.c0 FROM vt2 CROSS JOIN vt0 ON vt2.c0 COLLATE RTRIM GROUP BY vt2.c0, vt0.c0;
SELECT vt2.c0, vt0.c0 FROM vt2 CROSS JOIN vt0 ON vt2.c0 COLLATE RTRIM GROUP BY vt2.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt2.c0, vt0.c0 FROM vt2 CROSS JOIN vt0 ON vt2.c0 COLLATE RTRIM GROUP BY vt2.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt2.c0, vt0.c0 FROM vt2 CROSS JOIN vt0 ON vt2.c0 COLLATE RTRIM GROUP BY vt2.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt2.c0, vt0.c0 FROM vt2 CROSS JOIN vt0 ON vt2.c0 COLLATE RTRIM GROUP BY vt2.c0, vt0.c0;
SELECT vt2.c0 FROM vt2;
SELECT vt2.c0 FROM vt2 WHERE ((((vt2.c0, vt2.c0, vt2.c0)) BETWEEN ((vt2.c0, vt2.c0 COLLATE BINARY, HEX(DISTINCT vt2.c0))) AND ((CAST(vt2.c0 AS BLOB), ((vt2.c0)!=(vt2.c0)), CAST(vt2.c0 AS BLOB))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT ((((vt2.c0, vt2.c0, vt2.c0)) BETWEEN ((vt2.c0, vt2.c0 COLLATE BINARY, HEX(DISTINCT vt2.c0))) AND ((CAST(vt2.c0 AS BLOB), ((vt2.c0)<>(vt2.c0)), CAST(vt2.c0 AS BLOB))))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE ((((((vt2.c0, vt2.c0, vt2.c0)) BETWEEN ((vt2.c0, vt2.c0 COLLATE BINARY, HEX(DISTINCT vt2.c0))) AND ((CAST(vt2.c0 AS BLOB), ((vt2.c0)<>(vt2.c0)), CAST(vt2.c0 AS BLOB))))) ISNULL));
SELECT vt2.c0 FROM vt2;
SELECT DISTINCT t0.c39, t0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c39, t0.c0 FROM vt0, t0 WHERE (CASE WHEN ((((((((vt0.c0)OR(t0.c39)))OR(vt0.c1)))AND('')))AND(x'')) THEN vt0.c0 WHEN ((t0.c39)AND(vt0.c0)) THEN -4.21503648E8 WHEN ((vt0.c0) NOTNULL) THEN GLOB(t0.c0, t0.c0) ELSE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c0)) END) UNION SELECT DISTINCT t0.c39, t0.c0 FROM vt0, t0 WHERE ((NOT (CASE WHEN ((((((((vt0.c0)OR(t0.c39)))OR(vt0.c1)))AND('')))AND(x'')) THEN vt0.c0 WHEN ((t0.c39)AND(vt0.c0)) THEN -4.21503648E8 WHEN ((vt0.c0) NOTNULL) THEN GLOB(t0.c0, t0.c0) ELSE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c0)) END))) UNION SELECT DISTINCT t0.c39, t0.c0 FROM vt0, t0 WHERE (((CASE WHEN ((((((((vt0.c0)OR(t0.c39)))OR(vt0.c1)))AND('')))AND(x'')) THEN vt0.c0 WHEN ((t0.c39)AND(vt0.c0)) THEN -4.21503648E8 WHEN ((vt0.c0) NOTNULL) THEN GLOB(t0.c0, t0.c0) ELSE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c0)) END) ISNULL));
SELECT DISTINCT t0.c39, t0.c0 FROM vt0, t0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (NULL) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (NULL))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((NULL) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING 0xffffffffcc8d6dda UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (0xffffffffcc8d6dda)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((0Xffffffffcc8d6dda) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING 0xffffffffcc8d6dda UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (0xffffffffcc8d6dda)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((0Xffffffffcc8d6dda) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT * FROM vt2;
SELECT ALL * FROM vt2 WHERE ('*h3(') UNION ALL SELECT * FROM vt2 WHERE ((NOT ('*h3('))) UNION ALL SELECT * FROM vt2 WHERE ((('*h3(') ISNULL));
SELECT * FROM vt2;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0) NOTNULL) IN ())) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((vt1.c0) NOTNULL) IN ())))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0) NOTNULL) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((''))>=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((''))>=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((''))>=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0, vt2.c0 FROM t0, vt2 GROUP BY t0.c0, vt2.c0;
SELECT ALL t0.c0, vt2.c0 FROM t0, vt2 GROUP BY t0.c0, vt2.c0 HAVING MAX(t0.c39 COLLATE RTRIM) UNION ALL SELECT t0.c0, vt2.c0 FROM t0, vt2 GROUP BY t0.c0, vt2.c0 HAVING (NOT (MAX(t0.c39 COLLATE RTRIM))) UNION ALL SELECT t0.c0, vt2.c0 FROM t0, vt2 GROUP BY t0.c0, vt2.c0 HAVING ((MAX(t0.c39 COLLATE RTRIM)) ISNULL);
SELECT t0.c0, vt2.c0 FROM t0, vt2 GROUP BY t0.c0, vt2.c0;
SELECT ALL t0.c0, vt2.c0 FROM t0, vt2 GROUP BY t0.c0, vt2.c0 HAVING MAX(t0.c39 COLLATE RTRIM) UNION ALL SELECT t0.c0, vt2.c0 FROM t0, vt2 GROUP BY t0.c0, vt2.c0 HAVING (NOT (MAX(t0.c39 COLLATE RTRIM))) UNION ALL SELECT t0.c0, vt2.c0 FROM t0, vt2 GROUP BY t0.c0, vt2.c0 HAVING ((MAX(t0.c39 COLLATE RTRIM)) ISNULL);
SELECT t0.c0, vt2.c0 FROM t0, vt2 GROUP BY t0.c0, vt2.c0;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ('WV') UNION ALL SELECT * FROM vt1 WHERE ((NOT ('WV'))) UNION ALL SELECT * FROM vt1 WHERE ((('WV') ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt0, vt2;
SELECT DISTINCT * FROM vt0, vt2 WHERE (TRIM(DISTINCT ((vt0.c0)<=(vt2.c0)), ((vt0.c1) NOT BETWEEN (vt2.c0) AND (vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED, vt2 WHERE ((NOT (TRIM(DISTINCT ((vt0.c0)<=(vt2.c0)), ((vt0.c1) NOT BETWEEN (vt2.c0) AND (vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, vt2 WHERE (((TRIM(DISTINCT ((vt0.c0)<=(vt2.c0)), ((vt0.c1) NOT BETWEEN (vt2.c0) AND (vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, vt2;
SELECT ALL t0.c0, t0.c39 FROM t0 GROUP BY t0.c0, t0.c39;
SELECT t0.c0, t0.c39 FROM t0 NOT INDEXED WHERE (t0.c0) GROUP BY t0.c0, t0.c39 UNION SELECT ALL t0.c0, t0.c39 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0, t0.c39 UNION SELECT t0.c0, t0.c39 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0, t0.c39;
SELECT ALL t0.c0, t0.c39 FROM t0 GROUP BY t0.c0, t0.c39;
SELECT t0.c39, vt2.c0, vt0.c1, vt0.c0 FROM vt2, vt0, t0 GROUP BY t0.c39, vt2.c0, vt0.c1, vt0.c0;
SELECT t0.c39, vt2.c0, vt0.c1, vt0.c0 FROM vt2, vt0, t0 GROUP BY t0.c39, vt2.c0, vt0.c1, vt0.c0 HAVING COUNT(CASE WHEN TOTAL(MAX(GROUP_CONCAT(GROUP_CONCAT(vt2.c0)))) THEN vt0.c1 END) UNION ALL SELECT ALL t0.c39, vt2.c0, vt0.c1, vt0.c0 FROM vt2, vt0, t0 GROUP BY t0.c39, vt2.c0, vt0.c1, vt0.c0 HAVING (NOT (COUNT(CASE WHEN TOTAL(MAX(GROUP_CONCAT(GROUP_CONCAT(vt2.c0)))) THEN vt0.c1 END))) UNION ALL SELECT ALL t0.c39, vt2.c0, vt0.c1, vt0.c0 FROM vt2, vt0, t0 GROUP BY t0.c39, vt2.c0, vt0.c1, vt0.c0 HAVING ((COUNT(CASE WHEN TOTAL(MAX(GROUP_CONCAT(GROUP_CONCAT(vt2.c0)))) THEN vt0.c1 END)) ISNULL);
SELECT ALL TOTAL(((((((((vt1.c0 COLLATE RTRIM)AND('%W')))AND(CAST(vt0.c1 AS TEXT))))AND(((vt1.c0)-(vt1.c1)))))OR(0.17012297051270342))) FROM vt0, vt2, vt1;
SELECT ALL t0.c39 FROM t0;
SELECT ALL t0.c39 FROM t0 WHERE ((((t0.c39, t0.c0, 4.56445374E8))<((t0.c39, 4.62631962E8, t0.c0))) COLLATE RTRIM) UNION ALL SELECT ALL t0.c39 FROM t0 WHERE ((NOT ((((t0.c39, t0.c0, 4.56445374E8))<((t0.c39, 4.62631962E8, t0.c0))) COLLATE RTRIM))) UNION ALL SELECT ALL t0.c39 FROM t0 WHERE ((((((t0.c39, t0.c0, 4.56445374E8))<((t0.c39, 4.62631962E8, t0.c0))) COLLATE RTRIM) ISNULL));
SELECT ALL t0.c39 FROM t0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER)) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt1.c1, vt0.c0, t0.c39, vt0.c1, vt1.c0, vt2.c0 FROM t0 INNER JOIN vt2 ON (((vt1.c0 IN ()))<<(((vt1.c1) NOT NULL))) FULL OUTER JOIN vt1 ON ((((vt0.c0) NOT NULL))<=(vt2.c0)) CROSS JOIN vt0 ON (CASE WHEN t0.c0 THEN vt2.c0 ELSE vt2.c0 END IN (CASE t0.c0  WHEN vt1.c1 THEN vt0.c1 END)) GROUP BY vt1.c1, vt0.c0, t0.c39, vt0.c1, vt1.c0, vt2.c0;
SELECT ALL vt1.c0 FROM t0 CROSS JOIN vt1 ON '뢿UZ1଀' GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0 CROSS JOIN vt1 ON '뢿UZ1଀' GROUP BY vt1.c0 HAVING MAX(((COUNT(*))%(t0.c0))) UNION ALL SELECT ALL vt1.c0 FROM t0 CROSS JOIN vt1 ON '뢿UZ1଀' GROUP BY vt1.c0 HAVING (NOT (MAX(((COUNT(*))%(t0.c0))))) UNION ALL SELECT vt1.c0 FROM t0 CROSS JOIN vt1 ON '뢿UZ1଀' GROUP BY vt1.c0 HAVING ((MAX(((COUNT(*))%(t0.c0)))) ISNULL);
SELECT vt0.c0 FROM t0, vt1, vt2, vt0;
SELECT ALL vt0.c0 FROM t0, vt1, vt2, vt0 WHERE ((((((vt2.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0)))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (NULLIF(t0.c39, vt1.c1)))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt1, vt2, vt0 WHERE ((NOT ((((((vt2.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0)))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (NULLIF(t0.c39, vt1.c1)))))) UNION ALL SELECT vt0.c0 FROM t0, vt1, vt2, vt0 WHERE ((((((((vt2.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0)))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (NULLIF(t0.c39, vt1.c1)))) ISNULL));
SELECT vt0.c0 FROM t0, vt1, vt2, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((- (((t0.c39)+(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((- (((t0.c39)+(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((- (((t0.c39)+(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c39 FROM t0 GROUP BY t0.c39;
SELECT ALL t0.c39 FROM t0 WHERE ((+ (t0.c39 COLLATE RTRIM))) GROUP BY t0.c39 UNION SELECT ALL t0.c39 FROM t0 WHERE ((NOT ((+ (t0.c39 COLLATE RTRIM))))) GROUP BY t0.c39 UNION SELECT ALL t0.c39 FROM t0 WHERE ((((+ (t0.c39 COLLATE RTRIM))) ISNULL)) GROUP BY t0.c39;
SELECT t0.c39 FROM t0 GROUP BY t0.c39;
SELECT vt1.c1, t0.c0, vt1.c0 FROM t0, vt1, vt2, vt0 GROUP BY vt1.c1, t0.c0, vt1.c0;
SELECT vt1.c1, t0.c0, vt1.c0 FROM t0, vt1, vt2, vt0 GROUP BY vt1.c1, t0.c0, vt1.c0 HAVING AVG(GROUP_CONCAT(AVG(t0.c0))) UNION ALL SELECT vt1.c1, t0.c0, vt1.c0 FROM t0, vt1, vt2, vt0 GROUP BY vt1.c1, t0.c0, vt1.c0 HAVING (NOT (AVG(GROUP_CONCAT(AVG(t0.c0))))) UNION ALL SELECT ALL vt1.c1, t0.c0, vt1.c0 FROM t0, vt1, vt2, vt0 GROUP BY vt1.c1, t0.c0, vt1.c0 HAVING ((AVG(GROUP_CONCAT(AVG(t0.c0)))) ISNULL);
SELECT ALL * FROM vt0, vt2, t0;
SELECT ALL * FROM vt0, vt2, t0 WHERE (t0.c39) UNION ALL SELECT * FROM vt0, vt2, t0 WHERE ((NOT (t0.c39))) UNION ALL SELECT ALL * FROM vt0, vt2, t0 WHERE (((t0.c39) ISNULL));
SELECT ALL * FROM vt0, vt2, t0;
SELECT DISTINCT * FROM vt0 INNER JOIN vt2 ON ((((vt2.c0) NOTNULL)) NOT NULL);
SELECT DISTINCT * FROM vt0 INNER JOIN vt2 ON ((((vt2.c0) NOTNULL)) NOT NULL) WHERE (CAST(vt0.c0 AS REAL) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0 INNER JOIN vt2 ON ((((vt2.c0) NOTNULL)) NOT NULL) WHERE ((NOT (CAST(vt0.c0 AS REAL) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN vt2 ON ((((vt2.c0) NOTNULL)) NOT NULL) WHERE (((CAST(vt0.c0 AS REAL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN vt2 ON ((((vt2.c0) NOTNULL)) NOT NULL);
SELECT ALL vt0.c1, vt1.c1, vt1.c0, vt2.c0, t0.c39 FROM vt2, vt1 RIGHT OUTER JOIN vt0 ON (NOT (t0.c0)) RIGHT OUTER JOIN t0 ON (((((('')AND(vt0.c1)))AND(vt1.c1)))/((vt1.c1 IN ()))) GROUP BY vt0.c1, vt1.c1, vt1.c0, vt2.c0, t0.c39;
SELECT ALL t0.c39, t0.c0, vt0.c1 FROM vt1 LEFT OUTER JOIN t0 ON CAST(vt0.c0 AS NUMERIC) INNER JOIN vt2 ON t0.c39 CROSS JOIN vt0 ON (((vt1.c0, '궥#', t0.c39)) BETWEEN (((vt1.c1 IN ()), -1265277511, ((t0.c39) BETWEEN (0.0374131186827833) AND (vt1.c0)))) AND (((+ (vt0.c1)), vt0.c1 COLLATE RTRIM, CAST(t0.c39 AS INTEGER)))) GROUP BY t0.c39, t0.c0, vt0.c1;
SELECT t0.c39, t0.c0, vt0.c1 FROM vt1 LEFT OUTER JOIN t0 ON CAST(vt0.c0 AS NUMERIC) INNER JOIN vt2 ON t0.c39 CROSS JOIN vt0 ON (((vt1.c0, '궥#', t0.c39)) BETWEEN (((vt1.c1 IN ()), -1265277511, ((t0.c39) BETWEEN (0.0374131186827833) AND (vt1.c0)))) AND (((+ (vt0.c1)), vt0.c1 COLLATE RTRIM, CAST(t0.c39 AS INTEGER)))) GROUP BY t0.c39, t0.c0, vt0.c1 HAVING TOTAL(SUM(TOTAL(SUM(MIN(GROUP_CONCAT(vt0.c1)))))) UNION ALL SELECT ALL t0.c39, t0.c0, vt0.c1 FROM vt1 LEFT OUTER JOIN t0 ON CAST(vt0.c0 AS NUMERIC) INNER JOIN vt2 ON t0.c39 CROSS JOIN vt0 ON (((vt1.c0, '궥#', t0.c39)) BETWEEN (((vt1.c1 IN ()), -1265277511, ((t0.c39) BETWEEN (0.0374131186827833) AND (vt1.c0)))) AND (((+ (vt0.c1)), vt0.c1 COLLATE RTRIM, CAST(t0.c39 AS INTEGER)))) GROUP BY t0.c39, t0.c0, vt0.c1 HAVING (NOT (TOTAL(SUM(TOTAL(SUM(MIN(GROUP_CONCAT(vt0.c1)))))))) UNION ALL SELECT t0.c39, t0.c0, vt0.c1 FROM vt1 LEFT OUTER JOIN t0 ON CAST(vt0.c0 AS NUMERIC) INNER JOIN vt2 ON t0.c39 CROSS JOIN vt0 ON (((vt1.c0, '궥#', t0.c39)) BETWEEN (((vt1.c1 IN ()), -1265277511, ((t0.c39) BETWEEN (0.0374131186827833) AND (vt1.c0)))) AND (((+ (vt0.c1)), vt0.c1 COLLATE RTRIM, CAST(t0.c39 AS INTEGER)))) GROUP BY t0.c39, t0.c0, vt0.c1 HAVING ((TOTAL(SUM(TOTAL(SUM(MIN(GROUP_CONCAT(vt0.c1))))))) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((vt1.c0 IN ())) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((vt1.c0 IN ())))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN ())) ISNULL));
SELECT ALL vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 WHERE (((((((((((vt1.c1) NOT BETWEEN (vt1.c0) AND (t0.c39)))OR(CASE t0.c39  WHEN vt1.c1 THEN NULL ELSE vt1.c1 END)))AND(CASE WHEN t0.c39 THEN t0.c0 ELSE vt1.c1 END)))AND(t0.c39 COLLATE RTRIM)))AND(ABS(DISTINCT '689334183')))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((NOT (((((((((((vt1.c1) NOT BETWEEN (vt1.c0) AND (t0.c39)))OR(CASE t0.c39  WHEN vt1.c1 THEN NULL ELSE vt1.c1 END)))AND(CASE WHEN t0.c39 THEN t0.c0 ELSE vt1.c1 END)))AND(t0.c39 COLLATE RTRIM)))AND(ABS(DISTINCT '689334183')))))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE (((((((((((((vt1.c1) NOT BETWEEN (vt1.c0) AND (t0.c39)))OR(CASE t0.c39  WHEN vt1.c1 THEN NULL ELSE vt1.c1 END)))AND(CASE WHEN t0.c39 THEN t0.c0 ELSE vt1.c1 END)))AND(t0.c39 COLLATE RTRIM)))AND(ABS(DISTINCT '689334183')))) ISNULL));
SELECT DISTINCT * FROM t0, vt1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) IN ())))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt1.c1 FROM vt2, t0 CROSS JOIN vt1 ON 0.5660767237233908 CROSS JOIN vt0 ON (((vt1.c0)) BETWEEN ((((vt2.c0) NOT NULL))) AND (((+ (0.5437119569504051))))) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt2, t0 CROSS JOIN vt1 ON 0.5660767237233908 CROSS JOIN vt0 ON (((vt1.c0)) BETWEEN ((((vt2.c0) NOT NULL))) AND (((+ (0.5437119569504051))))) GROUP BY vt1.c1 HAVING SUM(MIN(vt1.c1)) UNION ALL SELECT vt1.c1 FROM vt2, t0 CROSS JOIN vt1 ON 0.5660767237233908 CROSS JOIN vt0 ON (((vt1.c0)) BETWEEN ((((vt2.c0) NOT NULL))) AND (((+ (0.5437119569504051))))) GROUP BY vt1.c1 HAVING (NOT (SUM(MIN(vt1.c1)))) UNION ALL SELECT ALL vt1.c1 FROM vt2, t0 CROSS JOIN vt1 ON 0.5660767237233908 CROSS JOIN vt0 ON (((vt1.c0)) BETWEEN ((((vt2.c0) NOT NULL))) AND (((+ (0.5437119569504051))))) GROUP BY vt1.c1 HAVING ((SUM(MIN(vt1.c1))) ISNULL);
SELECT ALL vt2.c0, vt0.c1, t0.c0 FROM vt2, vt0 CROSS JOIN vt1 ON (NOT ((NOT (vt1.c1)))) LEFT OUTER JOIN t0 ON CAST(((vt1.c1) ISNULL) AS REAL);
SELECT vt2.c0, vt0.c1, t0.c0 FROM vt2, vt0 CROSS JOIN vt1 ON (NOT ((NOT (vt1.c1)))) LEFT OUTER JOIN t0 ON CAST(((vt1.c1) ISNULL) AS REAL) WHERE ((('663826598' COLLATE NOCASE)!=(((vt1.c0)AND(vt1.c0))))) UNION ALL SELECT vt2.c0, vt0.c1, t0.c0 FROM vt2, vt0 CROSS JOIN vt1 ON (NOT ((NOT (vt1.c1)))) LEFT OUTER JOIN t0 ON CAST(((vt1.c1) ISNULL) AS REAL) WHERE ((NOT ((('663826598' COLLATE NOCASE)<>(((vt1.c0)AND(vt1.c0))))))) UNION ALL SELECT vt2.c0, vt0.c1, t0.c0 FROM vt2, vt0 CROSS JOIN vt1 ON (NOT ((NOT (vt1.c1)))) LEFT OUTER JOIN t0 ON CAST(((vt1.c1) ISNULL) AS REAL) WHERE ((((('663826598' COLLATE NOCASE)<>(((vt1.c0)AND(vt1.c0))))) ISNULL));
SELECT ALL vt2.c0, vt0.c1, t0.c0 FROM vt2, vt0 CROSS JOIN vt1 ON (NOT ((NOT (vt1.c1)))) LEFT OUTER JOIN t0 ON CAST(((vt1.c1) ISNULL) AS REAL);
SELECT DISTINCT * FROM vt0, t0, vt2;
SELECT DISTINCT * FROM vt0, t0, vt2 WHERE (((CASE WHEN 0X1acc8efc THEN t0.c0 END) IS TRUE)) UNION SELECT DISTINCT * FROM vt0, t0, vt2 WHERE ((NOT (((CASE WHEN 0x1acc8efc THEN t0.c0 END) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0, t0, vt2 WHERE (((((CASE WHEN 0X1acc8efc THEN t0.c0 END) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt0, t0, vt2;
SELECT ALL vt0.c0, vt0.c1, vt1.c1 FROM vt2, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c1;
SELECT ALL vt0.c0, vt0.c1, vt1.c1 FROM vt2, vt1, vt0 WHERE ((((+ (vt0.c0))) IS TRUE)) GROUP BY vt0.c0, vt0.c1, vt1.c1 UNION SELECT vt0.c0, vt0.c1, vt1.c1 FROM vt2, vt1, vt0 WHERE ((NOT ((((+ (vt0.c0))) IS TRUE)))) GROUP BY vt0.c0, vt0.c1, vt1.c1 UNION SELECT vt0.c0, vt0.c1, vt1.c1 FROM vt2, vt1, vt0 WHERE ((((((+ (vt0.c0))) IS TRUE)) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt1.c1;
SELECT ALL vt0.c0, vt0.c1, vt1.c1 FROM vt2, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c1;
SELECT t0.c0 FROM vt2, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt2, t0 GROUP BY t0.c0 HAVING MAX((((COUNT(AVG(vt2.c0)))) NOT BETWEEN ((TOTAL(MAX(t0.c39)))) AND ((vt2.c0)))) UNION ALL SELECT ALL t0.c0 FROM vt2, t0 GROUP BY t0.c0 HAVING (NOT (MAX((((COUNT(AVG(vt2.c0)))) NOT BETWEEN ((TOTAL(MAX(t0.c39)))) AND ((vt2.c0)))))) UNION ALL SELECT ALL t0.c0 FROM vt2, t0 GROUP BY t0.c0 HAVING ((MAX((((COUNT(AVG(vt2.c0)))) NOT BETWEEN ((TOTAL(MAX(t0.c39)))) AND ((vt2.c0))))) ISNULL);
SELECT ALL * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE ((- (((vt0.c1)GLOB(vt0.c0))))) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT ((- (((vt0.c1)GLOB(vt0.c0))))))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((((- (((vt0.c1)GLOB(vt0.c0))))) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CASE ((vt1.c1)<(vt1.c0))  WHEN ((vt1.c1)||(vt1.c0)) THEN ((vt1.c0)%(vt1.c0)) END) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CASE ((vt1.c1)<(vt1.c0))  WHEN ((vt1.c1)||(vt1.c0)) THEN ((vt1.c0)%(vt1.c0)) END))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CASE ((vt1.c1)<(vt1.c0))  WHEN ((vt1.c1)||(vt1.c0)) THEN ((vt1.c0)%(vt1.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (MIN((vt2.c0 IN ()), CAST(vt2.c0 AS BLOB))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (MIN((vt2.c0 IN ()), CAST(vt2.c0 AS BLOB))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((MIN((vt2.c0 IN ()), CAST(vt2.c0 AS BLOB))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt0.c1, vt2.c0 FROM vt0 CROSS JOIN vt2 ON UNICODE(((vt2.c0)OR(vt0.c0))) GROUP BY vt0.c1, vt2.c0;
SELECT ALL vt0.c1, vt2.c0 FROM vt0 CROSS JOIN vt2 ON UNICODE(((vt2.c0)OR(vt0.c0))) GROUP BY vt0.c1, vt2.c0 HAVING CASE (vt0.c1 IN ())  WHEN vt0.c1 THEN COUNT(vt2.c0) ELSE 0.8462319391753548 COLLATE NOCASE END UNION ALL SELECT ALL vt0.c1, vt2.c0 FROM vt0 CROSS JOIN vt2 ON UNICODE(((vt2.c0)OR(vt0.c0))) GROUP BY vt0.c1, vt2.c0 HAVING (NOT (CASE (vt0.c1 IN ())  WHEN vt0.c1 THEN COUNT(vt2.c0) ELSE 0.8462319391753548 COLLATE NOCASE END)) UNION ALL SELECT vt0.c1, vt2.c0 FROM vt0 CROSS JOIN vt2 ON UNICODE(((vt2.c0)OR(vt0.c0))) GROUP BY vt0.c1, vt2.c0 HAVING ((CASE (vt0.c1 IN ())  WHEN vt0.c1 THEN COUNT(vt2.c0) ELSE 0.8462319391753548 COLLATE NOCASE END) ISNULL);
SELECT ALL vt0.c1, vt2.c0 FROM vt0 CROSS JOIN vt2 ON UNICODE(((vt2.c0)OR(vt0.c0))) GROUP BY vt0.c1, vt2.c0;
SELECT ALL vt0.c1, vt2.c0 FROM vt0 CROSS JOIN vt2 ON UNICODE(((vt2.c0)OR(vt0.c0))) GROUP BY vt0.c1, vt2.c0 HAVING CASE (vt0.c1 IN ())  WHEN vt0.c1 THEN COUNT(vt2.c0) ELSE 0.8462319391753548 COLLATE NOCASE END UNION ALL SELECT ALL vt0.c1, vt2.c0 FROM vt0 CROSS JOIN vt2 ON UNICODE(((vt2.c0)OR(vt0.c0))) GROUP BY vt0.c1, vt2.c0 HAVING (NOT (CASE (vt0.c1 IN ())  WHEN vt0.c1 THEN COUNT(vt2.c0) ELSE 0.8462319391753548 COLLATE NOCASE END)) UNION ALL SELECT vt0.c1, vt2.c0 FROM vt0 CROSS JOIN vt2 ON UNICODE(((vt2.c0)OR(vt0.c0))) GROUP BY vt0.c1, vt2.c0 HAVING ((CASE (vt0.c1 IN ())  WHEN vt0.c1 THEN COUNT(vt2.c0) ELSE 0.8462319391753548 COLLATE NOCASE END) ISNULL);
SELECT ALL vt0.c1, vt2.c0 FROM vt0 CROSS JOIN vt2 ON UNICODE(((vt2.c0)OR(vt0.c0))) GROUP BY vt0.c1, vt2.c0;
SELECT * FROM t0, vt0, vt2;
SELECT * FROM t0, vt0, vt2 WHERE (t0.c0) UNION ALL SELECT * FROM t0, vt0, vt2 WHERE ((NOT (t0.c0))) UNION ALL SELECT * FROM t0, vt0, vt2 WHERE (((t0.c0) ISNULL));
SELECT * FROM t0, vt0, vt2;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (('hkxTS(s' IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (('hkxTS(s' IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((('hkxTS(s' IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (((((vt2.c0)<(vt2.c0))) NOT NULL)) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (((((vt2.c0)<(vt2.c0))) NOT NULL)))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE (((((((vt2.c0)<(vt2.c0))) NOT NULL)) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT t0.c39, t0.c0 FROM t0, vt1, vt2 GROUP BY t0.c39, t0.c0;
SELECT t0.c39, t0.c0 FROM t0, vt1, vt2 GROUP BY t0.c39, t0.c0 HAVING (((vt2.c0, vt1.c1, TOTAL(AVG(COUNT(*))))) BETWEEN ((vt1.c0, SUM(SUM(AVG(t0.c39))), 'm')) AND ((SUM(COUNT(GROUP_CONCAT(MAX(-1.51557525E8)))), NULL, TOTAL(COUNT(*))))) COLLATE RTRIM UNION ALL SELECT ALL t0.c39, t0.c0 FROM t0, vt1, vt2 GROUP BY t0.c39, t0.c0 HAVING (NOT ((((vt2.c0, vt1.c1, TOTAL(AVG(COUNT(*))))) BETWEEN ((vt1.c0, SUM(SUM(AVG(t0.c39))), 'm')) AND ((SUM(COUNT(GROUP_CONCAT(MAX(-1.51557525E8)))), NULL, TOTAL(COUNT(*))))) COLLATE RTRIM)) UNION ALL SELECT t0.c39, t0.c0 FROM t0, vt1, vt2 GROUP BY t0.c39, t0.c0 HAVING (((((vt2.c0, vt1.c1, TOTAL(AVG(COUNT(*))))) BETWEEN ((vt1.c0, SUM(SUM(AVG(t0.c39))), 'm')) AND ((SUM(COUNT(GROUP_CONCAT(MAX(-1.51557525E8)))), NULL, TOTAL(COUNT(*))))) COLLATE RTRIM) ISNULL);
SELECT vt2.c0 FROM vt2;
SELECT vt2.c0 FROM vt2 WHERE (((((((((CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)OR(((vt2.c0)*(vt2.c0)))))OR(CAST(vt2.c0 AS NUMERIC))))AND((~ (vt2.c0)))))AND(CAST(vt2.c0 AS TEXT)))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (((((((((CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)OR(((vt2.c0)*(vt2.c0)))))OR(CAST(vt2.c0 AS NUMERIC))))AND((~ (vt2.c0)))))AND(CAST(vt2.c0 AS TEXT)))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE (((((((((((CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)OR(((vt2.c0)*(vt2.c0)))))OR(CAST(vt2.c0 AS NUMERIC))))AND((~ (vt2.c0)))))AND(CAST(vt2.c0 AS TEXT)))) ISNULL));
SELECT vt2.c0 FROM vt2;
SELECT DISTINCT * FROM vt0, vt1 INNER JOIN t0 ON ((((((((((vt1.c1)AND('lO')))OR(vt1.c0)))OR(t0.c39)))AND(vt2.c0))) IS FALSE) CROSS JOIN vt2 ON vt1.c0;
SELECT DISTINCT * FROM vt0, vt1 INNER JOIN t0 ON ((((((((((vt1.c1)AND('lO')))OR(vt1.c0)))OR(t0.c39)))AND(vt2.c0))) IS FALSE) CROSS JOIN vt2 ON vt1.c0 WHERE (((CAST(vt0.c1 AS BLOB))/(SQLITE_VERSION()))) UNION SELECT DISTINCT * FROM vt0, vt1 INNER JOIN t0 ON ((((((((((vt1.c1)AND('lO')))OR(vt1.c0)))OR(t0.c39)))AND(vt2.c0))) IS FALSE) CROSS JOIN vt2 ON vt1.c0 WHERE ((NOT (((CAST(vt0.c1 AS BLOB))/(SQLITE_VERSION()))))) UNION SELECT DISTINCT * FROM vt0, vt1 INNER JOIN t0 ON ((((((((((vt1.c1)AND('lO')))OR(vt1.c0)))OR(t0.c39)))AND(vt2.c0))) IS FALSE) CROSS JOIN vt2 ON vt1.c0 WHERE (((((CAST(vt0.c1 AS BLOB))/(SQLITE_VERSION()))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1 INNER JOIN t0 ON ((((((((((vt1.c1)AND('lO')))OR(vt1.c0)))OR(t0.c39)))AND(vt2.c0))) IS FALSE) CROSS JOIN vt2 ON vt1.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 WHERE (CASE ((t0.c39)+(t0.c0))  WHEN ((t0.c0)|(t0.c39)) THEN (t0.c39 IN ()) WHEN ((vt1.c1)<<(t0.c39)) THEN ((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)) WHEN ((NULL)<=(t0.c0)) THEN ((t0.c39)/(t0.c39)) WHEN JULIANDAY(vt1.c0, vt1.c1, vt1.c0) THEN ((((vt1.c0)OR(t0.c39)))AND(t0.c0)) WHEN CASE vt1.c0  WHEN t0.c0 THEN t0.c39 ELSE vt1.c1 END THEN NULL COLLATE RTRIM ELSE CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c39 END END) GROUP BY vt1.c0, t0.c0 UNION SELECT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((NOT (CASE ((t0.c39)+(t0.c0))  WHEN ((t0.c0)|(t0.c39)) THEN (t0.c39 IN ()) WHEN ((vt1.c1)<<(t0.c39)) THEN ((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)) WHEN ((NULL)<=(t0.c0)) THEN ((t0.c39)/(t0.c39)) WHEN JULIANDAY(vt1.c0, vt1.c1, vt1.c0) THEN ((((vt1.c0)OR(t0.c39)))AND(t0.c0)) WHEN CASE vt1.c0  WHEN t0.c0 THEN t0.c39 ELSE vt1.c1 END THEN NULL COLLATE RTRIM ELSE CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c39 END END))) GROUP BY vt1.c0, t0.c0 UNION SELECT vt1.c0, t0.c0 FROM vt1, t0 WHERE (((CASE ((t0.c39)+(t0.c0))  WHEN ((t0.c0)|(t0.c39)) THEN (t0.c39 IN ()) WHEN ((vt1.c1)<<(t0.c39)) THEN ((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)) WHEN ((NULL)<=(t0.c0)) THEN ((t0.c39)/(t0.c39)) WHEN JULIANDAY(vt1.c0, vt1.c1, vt1.c0) THEN ((((vt1.c0)OR(t0.c39)))AND(t0.c0)) WHEN CASE vt1.c0  WHEN t0.c0 THEN t0.c39 ELSE vt1.c1 END THEN NULL COLLATE RTRIM ELSE CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c39 END END) ISNULL)) GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt2.c0 FROM vt1 CROSS JOIN vt2 ON (+ (((vt2.c0)IS(vt1.c0)))) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt1 CROSS JOIN vt2 ON (+ (((vt2.c0)IS(vt1.c0)))) GROUP BY vt2.c0 HAVING ((AVG(MAX(vt1.c1))) NOT BETWEEN (GROUP_CONCAT(MIN(vt1.c1))) AND (AVG(GROUP_CONCAT(TOTAL(vt1.c1))))) UNION ALL SELECT vt2.c0 FROM vt1 CROSS JOIN vt2 ON (+ (((vt2.c0)IS(vt1.c0)))) GROUP BY vt2.c0 HAVING (NOT (((AVG(MAX(vt1.c1))) NOT BETWEEN (GROUP_CONCAT(MIN(vt1.c1))) AND (AVG(GROUP_CONCAT(TOTAL(vt1.c1))))))) UNION ALL SELECT vt2.c0 FROM vt1 CROSS JOIN vt2 ON (+ (((vt2.c0)IS(vt1.c0)))) GROUP BY vt2.c0 HAVING ((((AVG(MAX(vt1.c1))) NOT BETWEEN (GROUP_CONCAT(MIN(vt1.c1))) AND (AVG(GROUP_CONCAT(TOTAL(vt1.c1)))))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)))IS NOT((NOT (vt1.c0))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)))IS NOT((NOT (vt1.c0))))))) UNION ALL SELECT * FROM vt1 WHERE (((((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)))IS NOT((NOT (vt1.c0))))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT t0.c0, t0.c39 FROM t0;
SELECT DISTINCT t0.c0, t0.c39 FROM t0 WHERE ((((((t0.c0)AND(NULL)))OR(t0.c39)) IN ())) UNION SELECT DISTINCT t0.c0, t0.c39 FROM t0 WHERE ((NOT ((((((t0.c0)AND(NULL)))OR(t0.c39)) IN ())))) UNION SELECT DISTINCT t0.c0, t0.c39 FROM t0 WHERE ((((((((t0.c0)AND(NULL)))OR(t0.c39)) IN ())) ISNULL));
SELECT DISTINCT t0.c0, t0.c39 FROM t0;
SELECT vt1.c0, vt2.c0, t0.c39, vt0.c0, vt0.c1, vt1.c1 FROM vt0, vt1, vt2 RIGHT OUTER JOIN t0 ON ((CAST(vt0.c0 AS TEXT))!=((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1))))) GROUP BY vt1.c0, vt2.c0, t0.c39, vt0.c0, vt0.c1, vt1.c1;
SELECT vt1.c0, vt2.c0, t0.c39, vt0.c0, vt0.c1, vt1.c1 FROM vt0, vt1, vt2 RIGHT OUTER JOIN t0 ON ((CAST(vt0.c0 AS TEXT))!=((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1))))) WHERE (CAST(((t0.c39) IS TRUE) AS TEXT)) GROUP BY vt1.c0, vt2.c0, t0.c39, vt0.c0, vt0.c1, vt1.c1 UNION SELECT vt1.c0, vt2.c0, t0.c39, vt0.c0, vt0.c1, vt1.c1 FROM vt0, vt1, vt2 RIGHT OUTER JOIN t0 ON ((CAST(vt0.c0 AS TEXT))<>((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1))))) WHERE ((NOT (CAST(((t0.c39) IS TRUE) AS TEXT)))) GROUP BY vt1.c0, vt2.c0, t0.c39, vt0.c0, vt0.c1, vt1.c1 UNION SELECT vt1.c0, vt2.c0, t0.c39, vt0.c0, vt0.c1, vt1.c1 FROM vt0, vt1, vt2 RIGHT OUTER JOIN t0 ON ((CAST(vt0.c0 AS TEXT))!=((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1))))) WHERE (((CAST(((t0.c39) IS TRUE) AS TEXT)) ISNULL)) GROUP BY vt1.c0, vt2.c0, t0.c39, vt0.c0, vt0.c1, vt1.c1;
SELECT vt1.c0, vt2.c0, t0.c39, vt0.c0, vt0.c1, vt1.c1 FROM vt0, vt1, vt2 RIGHT OUTER JOIN t0 ON ((CAST(vt0.c0 AS TEXT))!=((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1))))) GROUP BY vt1.c0, vt2.c0, t0.c39, vt0.c0, vt0.c1, vt1.c1;
SELECT t0.c39, vt2.c0, vt1.c1 FROM vt2, vt1, t0 GROUP BY t0.c39, vt2.c0, vt1.c1;
SELECT t0.c39, vt2.c0, vt1.c1 FROM vt2, vt1, t0 GROUP BY t0.c39, vt2.c0, vt1.c1 HAVING ((MAX(vt1.c1)) NOT BETWEEN (((t0.c0) NOTNULL)) AND (((((((((SUM(t0.c0))AND(MAX(COUNT(*)))))AND(t0.c0)))OR(GROUP_CONCAT(MAX(GROUP_CONCAT(t0.c0))))))AND(vt2.c0)))) UNION ALL SELECT t0.c39, vt2.c0, vt1.c1 FROM vt2, vt1, t0 GROUP BY t0.c39, vt2.c0, vt1.c1 HAVING (NOT (((MAX(vt1.c1)) NOT BETWEEN (((t0.c0) NOTNULL)) AND (((((((((SUM(t0.c0))AND(MAX(COUNT(*)))))AND(t0.c0)))OR(GROUP_CONCAT(MAX(GROUP_CONCAT(t0.c0))))))AND(vt2.c0)))))) UNION ALL SELECT t0.c39, vt2.c0, vt1.c1 FROM vt2, vt1, t0 GROUP BY t0.c39, vt2.c0, vt1.c1 HAVING ((((MAX(vt1.c1)) NOT BETWEEN (((t0.c0) NOTNULL)) AND (((((((((SUM(t0.c0))AND(MAX(COUNT(*)))))AND(t0.c0)))OR(GROUP_CONCAT(MAX(GROUP_CONCAT(t0.c0))))))AND(vt2.c0))))) ISNULL);
SELECT ALL vt1.c0 FROM vt2, vt0, vt1, t0;
SELECT ALL vt1.c0 FROM vt2, vt0, vt1, t0 WHERE (CASE ((t0.c0)IS(vt0.c1))  WHEN ((vt0.c0) IS FALSE) THEN (t0.c0 IN (vt0.c0)) WHEN ((vt0.c0) BETWEEN (t0.c0) AND (t0.c39)) THEN ((((vt1.c0)OR(x'')))AND(vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN ((t0.c0)LIKE(vt0.c1)) ELSE '' END) UNION ALL SELECT ALL vt1.c0 FROM vt2, vt0, vt1, t0 WHERE ((NOT (CASE ((t0.c0)IS(vt0.c1))  WHEN ((vt0.c0) IS FALSE) THEN (t0.c0 IN (vt0.c0)) WHEN ((vt0.c0) BETWEEN (t0.c0) AND (t0.c39)) THEN ((((vt1.c0)OR(x'')))AND(vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN ((t0.c0)LIKE(vt0.c1)) ELSE '' END))) UNION ALL SELECT vt1.c0 FROM vt2, vt0, vt1, t0 WHERE (((CASE ((t0.c0)IS(vt0.c1))  WHEN ((vt0.c0) IS FALSE) THEN (t0.c0 IN (vt0.c0)) WHEN ((vt0.c0) BETWEEN (t0.c0) AND (t0.c39)) THEN ((((vt1.c0)OR(x'')))AND(vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN ((t0.c0)LIKE(vt0.c1)) ELSE '' END) ISNULL));
SELECT ALL vt1.c0 FROM vt2, vt0, vt1, t0;
SELECT DISTINCT * FROM vt2, vt1, vt0, t0;
SELECT DISTINCT * FROM vt2, vt1, vt0, t0 WHERE (((((((((((((vt1.c0 COLLATE RTRIM)OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((t0.c39) BETWEEN (t0.c39) AND (t0.c0)))))AND('褖5zD')))OR(CASE WHEN vt1.c1 THEN vt2.c0 WHEN vt1.c0 THEN t0.c39 WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt1.c1 WHEN '571986115' THEN t0.c0 ELSE vt2.c0 END)))OR((+ (vt0.c0)))))OR(((vt0.c1)LIKE(t0.c39))))) UNION SELECT DISTINCT * FROM vt2, vt1, vt0, t0 WHERE ((NOT (((((((((((((vt1.c0 COLLATE RTRIM)OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((t0.c39) BETWEEN (t0.c39) AND (t0.c0)))))AND('褖5zD')))OR(CASE WHEN vt1.c1 THEN vt2.c0 WHEN vt1.c0 THEN t0.c39 WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt1.c1 WHEN '571986115' THEN t0.c0 ELSE vt2.c0 END)))OR((+ (vt0.c0)))))OR(((vt0.c1)LIKE(t0.c39))))))) UNION SELECT DISTINCT * FROM vt2, vt1, vt0, t0 WHERE (((((((((((((((vt1.c0 COLLATE RTRIM)OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((t0.c39) BETWEEN (t0.c39) AND (t0.c0)))))AND('褖5zD')))OR(CASE WHEN vt1.c1 THEN vt2.c0 WHEN vt1.c0 THEN t0.c39 WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt1.c1 WHEN '571986115' THEN t0.c0 ELSE vt2.c0 END)))OR((+ (vt0.c0)))))OR(((vt0.c1)LIKE(t0.c39))))) ISNULL));
SELECT DISTINCT * FROM vt2, vt1, vt0, t0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE ((~ (((vt2.c0)+(vt2.c0))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT ((~ (((vt2.c0)+(vt2.c0))))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((((~ (((vt2.c0)+(vt2.c0))))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt1.c0, vt1.c1, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt1.c1, vt2.c0;
SELECT ALL vt1.c0, vt1.c1, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt1.c1, vt2.c0 HAVING (+ ((NOT (vt1.c1)))) UNION ALL SELECT ALL vt1.c0, vt1.c1, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt1.c1, vt2.c0 HAVING (NOT ((+ ((NOT (vt1.c1)))))) UNION ALL SELECT vt1.c0, vt1.c1, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt1.c1, vt2.c0 HAVING (((+ ((NOT (vt1.c1))))) ISNULL);
SELECT vt1.c0, vt1.c1, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt1.c1, vt2.c0;
SELECT ALL vt1.c0, vt1.c1, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt1.c1, vt2.c0 HAVING (+ ((NOT (vt1.c1)))) UNION ALL SELECT ALL vt1.c0, vt1.c1, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt1.c1, vt2.c0 HAVING (NOT ((+ ((NOT (vt1.c1)))))) UNION ALL SELECT vt1.c0, vt1.c1, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt1.c1, vt2.c0 HAVING (((+ ((NOT (vt1.c1))))) ISNULL);
SELECT vt1.c0, vt1.c1, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt1.c1, vt2.c0;
SELECT ALL SUM(((((((vt0.c0)IS NOT(vt0.c0)))OR(CAST(vt1.c1 AS BLOB))))AND(0.21114465720175601 COLLATE BINARY))) FROM vt2, vt1, vt0, t0 ORDER BY CASE CAST(vt0.c0 AS INTEGER)  WHEN x'' THEN (- (vt1.c0)) ELSE 0.09902150923095454 END ASC, (~ (CASE x''  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END));
SELECT * FROM t0, vt0, vt2, vt1;
SELECT * FROM t0, vt0, vt2, vt1 WHERE (json_object(((t0.c0)<(x'')), ((vt1.c0) BETWEEN (t0.c0) AND (vt0.c0)), INSTR(vt1.c1, t0.c39), ((t0.c39) BETWEEN (vt1.c0) AND (t0.c0)))) UNION ALL SELECT * FROM t0, vt0, vt2, vt1 WHERE ((NOT (json_object(((t0.c0)<(x'')), ((vt1.c0) BETWEEN (t0.c0) AND (vt0.c0)), INSTR(vt1.c1, t0.c39), ((t0.c39) BETWEEN (vt1.c0) AND (t0.c0)))))) UNION ALL SELECT ALL * FROM t0, vt0, vt2, vt1 WHERE (((json_object(((t0.c0)<(x'')), ((vt1.c0) BETWEEN (t0.c0) AND (vt0.c0)), INSTR(vt1.c1, t0.c39), ((t0.c39) BETWEEN (vt1.c0) AND (t0.c0)))) ISNULL));
SELECT * FROM t0, vt0, vt2, vt1;
SELECT DISTINCT t0.c39, vt1.c0, vt2.c0, vt1.c1 FROM t0 RIGHT OUTER JOIN vt1 ON (~ (CHANGES())) RIGHT OUTER JOIN vt2 ON (t0.c39 IN ());
SELECT DISTINCT t0.c39, vt1.c0, vt2.c0, vt1.c1 FROM t0 RIGHT OUTER JOIN vt1 ON (~ (CHANGES())) RIGHT OUTER JOIN vt2 ON (t0.c39 IN ()) WHERE ((((CASE WHEN vt1.c1 THEN t0.c39 END, LTRIM(vt2.c0, vt1.c0), HEX(t0.c0)))>=((CASE vt1.c0  WHEN vt1.c1 THEN vt2.c0 END, json_array(vt1.c1, 0.38782332704566813), ((t0.c0) IS FALSE))))) UNION SELECT DISTINCT t0.c39, vt1.c0, vt2.c0, vt1.c1 FROM t0 RIGHT OUTER JOIN vt1 ON (~ (CHANGES())) RIGHT OUTER JOIN vt2 ON (t0.c39 IN ()) WHERE ((NOT ((((CASE WHEN vt1.c1 THEN t0.c39 END, LTRIM(vt2.c0, vt1.c0), HEX(t0.c0)))>=((CASE vt1.c0  WHEN vt1.c1 THEN vt2.c0 END, json_array(vt1.c1, 0.38782332704566813), ((t0.c0) IS FALSE))))))) UNION SELECT DISTINCT t0.c39, vt1.c0, vt2.c0, vt1.c1 FROM t0 RIGHT OUTER JOIN vt1 ON (~ (CHANGES())) RIGHT OUTER JOIN vt2 ON (t0.c39 IN ()) WHERE ((((((CASE WHEN vt1.c1 THEN t0.c39 END, LTRIM(vt2.c0, vt1.c0), HEX(t0.c0)))>=((CASE vt1.c0  WHEN vt1.c1 THEN vt2.c0 END, json_array(vt1.c1, 0.38782332704566813), ((t0.c0) IS FALSE))))) ISNULL));
SELECT DISTINCT t0.c39, vt1.c0, vt2.c0, vt1.c1 FROM t0 RIGHT OUTER JOIN vt1 ON (~ (CHANGES())) RIGHT OUTER JOIN vt2 ON (t0.c39 IN ());
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)*(vt1.c1)))>=(vt1.c0 COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)*(vt1.c1)))>=(vt1.c0 COLLATE RTRIM))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)*(vt1.c1)))>=(vt1.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c1 FROM vt2, vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt2, vt1 GROUP BY vt1.c1 HAVING ((TOTAL(vt1.c0))IS(SUM(vt2.c0) COLLATE RTRIM)) UNION ALL SELECT vt1.c1 FROM vt2, vt1 GROUP BY vt1.c1 HAVING (NOT (((TOTAL(vt1.c0))IS(SUM(vt2.c0) COLLATE RTRIM)))) UNION ALL SELECT vt1.c1 FROM vt2, vt1 GROUP BY vt1.c1 HAVING ((((TOTAL(vt1.c0))IS(SUM(vt2.c0) COLLATE RTRIM))) ISNULL);
SELECT vt1.c1 FROM vt2, vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt2, vt1 GROUP BY vt1.c1 HAVING ((TOTAL(vt1.c0))IS(SUM(vt2.c0) COLLATE RTRIM)) UNION ALL SELECT vt1.c1 FROM vt2, vt1 GROUP BY vt1.c1 HAVING (NOT (((TOTAL(vt1.c0))IS(SUM(vt2.c0) COLLATE RTRIM)))) UNION ALL SELECT vt1.c1 FROM vt2, vt1 GROUP BY vt1.c1 HAVING ((((TOTAL(vt1.c0))IS(SUM(vt2.c0) COLLATE RTRIM))) ISNULL);
SELECT vt1.c1 FROM vt2, vt1 GROUP BY vt1.c1;
SELECT ALL * FROM t0 LEFT OUTER JOIN vt2 ON ((((t0.c39) BETWEEN (vt1.c0) AND (vt2.c0)))AND(CAST(vt0.c1 AS BLOB))) LEFT OUTER JOIN vt0 ON CAST(HEX(DISTINCT vt0.c0) AS TEXT) INNER JOIN vt1 ON PRINTF((((vt0.c1, vt1.c0, '\rN践!A}')) BETWEEN ((-69496544, NULL, x'a3ae')) AND ((vt1.c1, vt1.c1, vt2.c0))));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c39 COLLATE NOCASE)AND(CAST(t0.c0 AS NUMERIC))))OR((((t0.c0))==((t0.c39)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c39 COLLATE NOCASE)AND(CAST(t0.c0 AS NUMERIC))))OR((((t0.c0))=((t0.c39)))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c39 COLLATE NOCASE)AND(CAST(t0.c0 AS NUMERIC))))OR((((t0.c0))==((t0.c39)))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0, vt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON CAST(((vt0.c0)&(t0.c39)) AS INTEGER) GROUP BY t0.c0, vt0.c1;
SELECT t0.c0, vt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON CAST(((vt0.c0)&(t0.c39)) AS INTEGER) WHERE (((NOT (t0.c39)) IN ())) GROUP BY t0.c0, vt0.c1 UNION SELECT ALL t0.c0, vt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON CAST(((vt0.c0)&(t0.c39)) AS INTEGER) WHERE ((NOT (((NOT (t0.c39)) IN ())))) GROUP BY t0.c0, vt0.c1 UNION SELECT ALL t0.c0, vt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON CAST(((vt0.c0)&(t0.c39)) AS INTEGER) WHERE (((((NOT (t0.c39)) IN ())) ISNULL)) GROUP BY t0.c0, vt0.c1;
SELECT ALL t0.c0, vt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON CAST(((vt0.c0)&(t0.c39)) AS INTEGER) GROUP BY t0.c0, vt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c1 COLLATE NOCASE)OR(LIKELIHOOD(DISTINCT MAX(vt1.c0), 0.5219355438060298))))AND(MIN(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((vt1.c1 COLLATE NOCASE)OR(LIKELIHOOD(DISTINCT MAX(vt1.c0), 0.5219355438060298))))AND(MIN(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((vt1.c1 COLLATE NOCASE)OR(LIKELIHOOD(DISTINCT MAX(vt1.c0), 0.5219355438060298))))AND(MIN(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c1 COLLATE NOCASE)OR(LIKELIHOOD(DISTINCT MAX(vt1.c0), 0.5219355438060298))))AND(MIN(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((vt1.c1 COLLATE NOCASE)OR(LIKELIHOOD(DISTINCT MAX(vt1.c0), 0.5219355438060298))))AND(MIN(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((vt1.c1 COLLATE NOCASE)OR(LIKELIHOOD(DISTINCT MAX(vt1.c0), 0.5219355438060298))))AND(MIN(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt2.c0 FROM vt2, vt0;
SELECT ALL vt2.c0 FROM vt2, vt0 WHERE (CASE UNLIKELY(DISTINCT vt0.c1)  WHEN json_patch(vt2.c0, vt0.c1) THEN ((0.1267352275734226) NOT BETWEEN (vt2.c0) AND (vt2.c0)) END) UNION ALL SELECT ALL vt2.c0 FROM vt2, vt0 WHERE ((NOT (CASE UNLIKELY(DISTINCT vt0.c1)  WHEN json_patch(vt2.c0, vt0.c1) THEN ((0.1267352275734226) NOT BETWEEN (vt2.c0) AND (vt2.c0)) END))) UNION ALL SELECT vt2.c0 FROM vt2, vt0 WHERE (((CASE UNLIKELY(DISTINCT vt0.c1)  WHEN json_patch(vt2.c0, vt0.c1) THEN ((0.1267352275734226) NOT BETWEEN (vt2.c0) AND (vt2.c0)) END) ISNULL));
SELECT vt2.c0 FROM vt2, vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (CAST(vt1.c0 AS BLOB) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (CAST(vt1.c0 AS BLOB) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((CAST(vt1.c0 AS BLOB) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt0.c1, vt1.c1, vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0;
SELECT vt0.c1, vt1.c1, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((-9223372036854775808) BETWEEN (vt0.c1) AND (vt0.c0)))<=(CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END))) GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0 UNION SELECT vt0.c1, vt1.c1, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((((-9223372036854775808) BETWEEN (vt0.c1) AND (vt0.c0)))<=(CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END))))) GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0 UNION SELECT vt0.c1, vt1.c1, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((((-9223372036854775808) BETWEEN (vt0.c1) AND (vt0.c0)))<=(CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL)) GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0;
SELECT ALL vt0.c1, vt1.c1, vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0;
SELECT t0.c39 FROM vt1, vt0, t0 GROUP BY t0.c39;
SELECT ALL t0.c39 FROM vt1, vt0, t0 GROUP BY t0.c39 HAVING COUNT(GROUP_CONCAT(MAX(SUM(AVG(x'2f241356'))))) UNION ALL SELECT ALL t0.c39 FROM vt1, vt0, t0 GROUP BY t0.c39 HAVING (NOT (COUNT(GROUP_CONCAT(MAX(SUM(AVG(x'2f241356'))))))) UNION ALL SELECT t0.c39 FROM vt1, vt0, t0 GROUP BY t0.c39 HAVING ((COUNT(GROUP_CONCAT(MAX(SUM(AVG(x'2f241356')))))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)>(NULL))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE NOCASE)>(NULL))))) UNION ALL SELECT * FROM vt1 WHERE (((((vt1.c0 COLLATE NOCASE)>(NULL))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt2, vt1;
SELECT DISTINCT * FROM vt2, vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt2.c0)))|((vt2.c0 IN ())))) UNION SELECT DISTINCT * FROM vt2, vt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt2.c0)))|((vt2.c0 IN ())))))) UNION SELECT DISTINCT * FROM vt2, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt2.c0)))|((vt2.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt2, vt1;
SELECT vt1.c0, t0.c39 FROM t0, vt0, vt1 GROUP BY vt1.c0, t0.c39;
SELECT vt1.c0, t0.c39 FROM t0, vt0, vt1 WHERE ((- ((vt0.c0 IN (vt0.c1, t0.c0))))) GROUP BY vt1.c0, t0.c39 UNION SELECT vt1.c0, t0.c39 FROM t0, vt0, vt1 WHERE ((NOT ((- ((vt0.c0 IN (vt0.c1, t0.c0))))))) GROUP BY vt1.c0, t0.c39 UNION SELECT vt1.c0, t0.c39 FROM t0, vt0, vt1 WHERE ((((- ((vt0.c0 IN (vt0.c1, t0.c0))))) ISNULL)) GROUP BY vt1.c0, t0.c39;
SELECT vt1.c0, t0.c39 FROM t0, vt0, vt1 GROUP BY vt1.c0, t0.c39;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING CASE (((vt0.c1, AVG(MAX(GROUP_CONCAT(vt0.c1))), MAX(SUM(vt0.c1)), SUM(COUNT(*)), SUM(COUNT(*)))) NOT BETWEEN ((COUNT(vt0.c0), SUM(COUNT(vt0.c1)), GROUP_CONCAT(GROUP_CONCAT(vt0.c0)), SUM(vt0.c0), SUM(COUNT(GROUP_CONCAT(COUNT(vt0.c0)))))) AND ((vt0.c1, MAX(MIN(vt0.c1)), SUM(vt0.c1), vt0.c0, MIN(TOTAL(vt0.c0)))))  WHEN ((GROUP_CONCAT(vt0.c0)) NOT NULL) THEN AVG(vt0.c0) ELSE ((((COUNT(*))OR(MIN(vt0.c1))))OR(SUM(''))) END UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (CASE (((vt0.c1, AVG(MAX(GROUP_CONCAT(vt0.c1))), MAX(SUM(vt0.c1)), SUM(COUNT(*)), SUM(COUNT(*)))) NOT BETWEEN ((COUNT(vt0.c0), SUM(COUNT(vt0.c1)), GROUP_CONCAT(GROUP_CONCAT(vt0.c0)), SUM(vt0.c0), SUM(COUNT(GROUP_CONCAT(COUNT(vt0.c0)))))) AND ((vt0.c1, MAX(MIN(vt0.c1)), SUM(vt0.c1), vt0.c0, MIN(TOTAL(vt0.c0)))))  WHEN ((GROUP_CONCAT(vt0.c0)) NOT NULL) THEN AVG(vt0.c0) ELSE ((((COUNT(*))OR(MIN(vt0.c1))))OR(SUM(''))) END)) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((CASE (((vt0.c1, AVG(MAX(GROUP_CONCAT(vt0.c1))), MAX(SUM(vt0.c1)), SUM(COUNT(*)), SUM(COUNT(*)))) NOT BETWEEN ((COUNT(vt0.c0), SUM(COUNT(vt0.c1)), GROUP_CONCAT(GROUP_CONCAT(vt0.c0)), SUM(vt0.c0), SUM(COUNT(GROUP_CONCAT(COUNT(vt0.c0)))))) AND ((vt0.c1, MAX(MIN(vt0.c1)), SUM(vt0.c1), vt0.c0, MIN(TOTAL(vt0.c0)))))  WHEN ((GROUP_CONCAT(vt0.c0)) NOT NULL) THEN AVG(vt0.c0) ELSE ((((COUNT(*))OR(MIN(vt0.c1))))OR(SUM(''))) END) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1 CROSS JOIN t0 ON (((NOT (vt1.c1))) IS TRUE);
SELECT ALL vt1.c1, vt1.c0 FROM vt1 CROSS JOIN t0 ON (((NOT (vt1.c1))) IS TRUE) WHERE (x'68c2') UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 CROSS JOIN t0 ON (((NOT (vt1.c1))) IS TRUE) WHERE ((NOT (x'68c2'))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 CROSS JOIN t0 ON (((NOT (vt1.c1))) IS TRUE) WHERE (((x'68c2') ISNULL));
SELECT vt1.c1, vt1.c0 FROM vt1 CROSS JOIN t0 ON (((NOT (vt1.c1))) IS TRUE);
SELECT DISTINCT * FROM vt0, t0, vt1;
SELECT DISTINCT * FROM vt0, t0, vt1 WHERE (((((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)))OR((((vt0.c1, 'Bd^', vt0.c0)) NOT BETWEEN ((t0.c39, -1623791212, vt1.c1)) AND ((vt1.c1, vt0.c1, vt0.c0))))))AND(((vt1.c1) NOTNULL))))AND((((t0.c39)) BETWEEN ((t0.c0)) AND ((vt0.c1))))))OR(vt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, t0, vt1 WHERE ((NOT (((((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)))OR((((vt0.c1, 'Bd^', vt0.c0)) NOT BETWEEN ((t0.c39, -1623791212, vt1.c1)) AND ((vt1.c1, vt0.c1, vt0.c0))))))AND(((vt1.c1) NOTNULL))))AND((((t0.c39)) BETWEEN ((t0.c0)) AND ((vt0.c1))))))OR(vt0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM vt0, t0, vt1 WHERE (((((((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)))OR((((vt0.c1, 'Bd^', vt0.c0)) NOT BETWEEN ((t0.c39, -1623791212, vt1.c1)) AND ((vt1.c1, vt0.c1, vt0.c0))))))AND(((vt1.c1) NOTNULL))))AND((((t0.c39)) BETWEEN ((t0.c0)) AND ((vt0.c1))))))OR(vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM vt0, t0, vt1;
SELECT vt2.c0, t0.c0, t0.c39, vt0.c0, vt0.c1 FROM vt2 RIGHT OUTER JOIN t0 ON (+ (CASE t0.c0  WHEN t0.c0 THEN vt0.c1 END)) CROSS JOIN vt0 ON 0Xffffffffe43c2b3b GROUP BY vt2.c0, t0.c0, t0.c39, vt0.c0, vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING MAX(((vt0.c1) NOT NULL)) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (MAX(((vt0.c1) NOT NULL)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((MAX(((vt0.c1) NOT NULL))) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING MAX(((vt0.c1) NOT NULL)) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (MAX(((vt0.c1) NOT NULL)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((MAX(((vt0.c1) NOT NULL))) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT * FROM t0, vt2, vt0;
SELECT ALL * FROM t0, vt2, vt0 WHERE (((((((((0.5331137509244962)AND((vt0.c0 IN ()))))OR(((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))OR(LIKELY(vt2.c0))))AND(CAST(vt0.c1 AS BLOB)))) UNION ALL SELECT * FROM t0, vt2, vt0 WHERE ((NOT (((((((((0.5331137509244962)AND((vt0.c0 IN ()))))OR(((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))OR(LIKELY(vt2.c0))))AND(CAST(vt0.c1 AS BLOB)))))) UNION ALL SELECT ALL * FROM t0, vt2, vt0 WHERE (((((((((((0.5331137509244962)AND((vt0.c0 IN ()))))OR(((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))OR(LIKELY(vt2.c0))))AND(CAST(vt0.c1 AS BLOB)))) ISNULL));
SELECT * FROM t0, vt2, vt0;
SELECT DISTINCT * FROM vt2 RIGHT OUTER JOIN vt0 ON CASE WHEN vt0.c0 THEN CAST(vt0.c0 AS NUMERIC) WHEN (NOT (vt0.c0)) THEN -878488970 WHEN LIKELY(vt0.c1) THEN (NOT (vt0.c1)) END;
SELECT DISTINCT * FROM vt2 RIGHT OUTER JOIN vt0 ON CASE WHEN vt0.c0 THEN CAST(vt0.c0 AS NUMERIC) WHEN (NOT (vt0.c0)) THEN -878488970 WHEN LIKELY(vt0.c1) THEN (NOT (vt0.c1)) END WHERE (((-2.04642498E8)=(vt0.c1))) UNION SELECT DISTINCT * FROM vt2 RIGHT OUTER JOIN vt0 ON CASE WHEN vt0.c0 THEN CAST(vt0.c0 AS NUMERIC) WHEN (NOT (vt0.c0)) THEN -878488970 WHEN LIKELY(vt0.c1) THEN (NOT (vt0.c1)) END WHERE ((NOT (((-2.04642498E8)=(vt0.c1))))) UNION SELECT DISTINCT * FROM vt2 RIGHT OUTER JOIN vt0 ON CASE WHEN vt0.c0 THEN CAST(vt0.c0 AS NUMERIC) WHEN (NOT (vt0.c0)) THEN -878488970 WHEN LIKELY(vt0.c1) THEN (NOT (vt0.c1)) END WHERE (((((-2.04642498E8)=(vt0.c1))) ISNULL));
SELECT DISTINCT * FROM vt2 RIGHT OUTER JOIN vt0 ON CASE WHEN vt0.c0 THEN CAST(vt0.c0 AS NUMERIC) WHEN (NOT (vt0.c0)) THEN -878488970 WHEN LIKELY(vt0.c1) THEN (NOT (vt0.c1)) END;
SELECT vt0.c1 FROM vt2 INNER JOIN vt0 ON CAST('F>TLqz>|' AS TEXT) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt2 INNER JOIN vt0 ON CAST('F>TLqz>|' AS TEXT) WHERE (((TYPEOF(DISTINCT vt2.c0))>=(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt2 INNER JOIN vt0 ON CAST('F>TLqz>|' AS TEXT) WHERE ((NOT (((TYPEOF(DISTINCT vt2.c0))>=(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt2 INNER JOIN vt0 ON CAST('F>TLqz>|' AS TEXT) WHERE (((((TYPEOF(DISTINCT vt2.c0))>=(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt2 INNER JOIN vt0 ON CAST('F>TLqz>|' AS TEXT) GROUP BY vt0.c1;
SELECT t0.c39 FROM vt1 RIGHT OUTER JOIN vt0 ON (((((vt1.c1) ISNULL)))<>((((vt0.c1)+(vt1.c0))))) FULL OUTER JOIN vt2 ON ((vt1.c1)/((((vt0.c1)) BETWEEN ((t0.c0)) AND ((vt0.c0))))) CROSS JOIN t0 ON CAST(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt2.c0 END AS REAL) GROUP BY t0.c39;
SELECT vt0.c0, t0.c0, vt0.c1 FROM vt0, t0;
SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM vt0, t0 WHERE (((((vt0.c0, 0xffffffffaa4ce211, t0.c39))<((vt0.c1, t0.c39, t0.c0))) IN (((vt0.c1) BETWEEN (vt0.c1) AND (t0.c39))))) UNION ALL SELECT vt0.c0, t0.c0, vt0.c1 FROM vt0, t0 WHERE ((NOT (((((vt0.c0, 0xffffffffaa4ce211, t0.c39))<((vt0.c1, t0.c39, t0.c0))) IN (((vt0.c1) BETWEEN (vt0.c1) AND (t0.c39))))))) UNION ALL SELECT vt0.c0, t0.c0, vt0.c1 FROM vt0, t0 WHERE (((((((vt0.c0, 0Xffffffffaa4ce211, t0.c39))<((vt0.c1, t0.c39, t0.c0))) IN (((vt0.c1) BETWEEN (vt0.c1) AND (t0.c39))))) ISNULL));
SELECT vt0.c0, t0.c0, vt0.c1 FROM vt0, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c39)IS NOT((t0.c39 IN ())))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((t0.c39)IS NOT((t0.c39 IN ())))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c39)IS NOT((t0.c39 IN ())))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT vt2.c0, t0.c39 FROM vt2, vt0, t0, vt1 GROUP BY vt2.c0, t0.c39;
SELECT vt2.c0, t0.c39 FROM vt2, vt0, t0, vt1 WHERE (((((CASE vt0.c0  WHEN t0.c0 THEN vt2.c0 ELSE vt1.c0 END)AND(((vt0.c0) BETWEEN (vt2.c0) AND (vt2.c0)))))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) GROUP BY vt2.c0, t0.c39 UNION SELECT ALL vt2.c0, t0.c39 FROM vt2, vt0, t0, vt1 WHERE ((NOT (((((CASE vt0.c0  WHEN t0.c0 THEN vt2.c0 ELSE vt1.c0 END)AND(((vt0.c0) BETWEEN (vt2.c0) AND (vt2.c0)))))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))))) GROUP BY vt2.c0, t0.c39 UNION SELECT ALL vt2.c0, t0.c39 FROM vt2, vt0, t0, vt1 WHERE (((((((CASE vt0.c0  WHEN t0.c0 THEN vt2.c0 ELSE vt1.c0 END)AND(((vt0.c0) BETWEEN (vt2.c0) AND (vt2.c0)))))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL)) GROUP BY vt2.c0, t0.c39;
SELECT vt2.c0, t0.c39 FROM vt2, vt0, t0, vt1 GROUP BY vt2.c0, t0.c39;
SELECT ALL t0.c39, t0.c0 FROM t0 GROUP BY t0.c39, t0.c0;
SELECT t0.c39, t0.c0 FROM t0 GROUP BY t0.c39, t0.c0 HAVING GROUP_CONCAT(x'') UNION ALL SELECT ALL t0.c39, t0.c0 FROM t0 GROUP BY t0.c39, t0.c0 HAVING (NOT (GROUP_CONCAT(x''))) UNION ALL SELECT t0.c39, t0.c0 FROM t0 GROUP BY t0.c39, t0.c0 HAVING ((GROUP_CONCAT(x'')) ISNULL);
SELECT ALL t0.c39, t0.c0 FROM t0 GROUP BY t0.c39, t0.c0;
SELECT t0.c39, t0.c0 FROM t0 GROUP BY t0.c39, t0.c0 HAVING GROUP_CONCAT(x'') UNION ALL SELECT ALL t0.c39, t0.c0 FROM t0 GROUP BY t0.c39, t0.c0 HAVING (NOT (GROUP_CONCAT(x''))) UNION ALL SELECT t0.c39, t0.c0 FROM t0 GROUP BY t0.c39, t0.c0 HAVING ((GROUP_CONCAT(x'')) ISNULL);
SELECT ALL t0.c39, t0.c0 FROM t0 GROUP BY t0.c39, t0.c0;
