-- Time: 2024/06/09 04:23:50
-- Database: database2
-- Database version: 3.40.0
-- seed value: 2467078402
PRAGMA cache_size = 50000; -- 13ms;
PRAGMA temp_store=MEMORY; -- 1ms;
PRAGMA synchronous=off; -- 2ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4); -- 7ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO rt0(c1, c3, c4, c2) VALUES (NULL, NULL, x'', 0.6358895589510438), (NULL, x'f705', '', ''), (NULL, 0.6358895589510438, '&纖', 1751743405); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
DELETE FROM rt0; -- 4ms;
BEGIN EXCLUSIVE TRANSACTION; -- 1ms;
UPDATE OR IGNORE rt0 SET c1=x''; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES (x'ba2a', 0.7215493979575673, '', '1751743405', x'cba4cded'); -- 1ms;
INSERT OR IGNORE INTO rt0(c1, c4, c0, c2, c3) VALUES (0x68697bad, NULL, x'', x'', ''); -- 0ms;
ANALYZE sqlite_master; -- 1ms;
INSERT OR IGNORE INTO rt0(c0, c3, c1, c2) VALUES ('q厙!4u㉇S', 0.1928397356743795, '-223880331', NULL), (x'534c', 0.8984200470913285, NULL, 0xd8cc9e3), (0x13231333, '1650261051', '1751743405', '%c|h9y'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.6358895589510438)||(NULL)) AS INTEGER); -- 1ms;
END; -- 2ms;
BEGIN EXCLUSIVE TRANSACTION; -- 3ms;
ANALYZE; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
PRAGMA auto_vacuum = NONE; -- 0ms;
UPDATE rt0 SET (c0)=('') WHERE ((rt0.c2)>((rt0.c3 IN ()))); -- 1ms;
UPDATE OR IGNORE rt0 SET c2=x'40230223'; -- 0ms;
ANALYZE; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR FAIL INTO rt0 VALUES ('592876712', '-804364305', 0xffffffffae62be5f, 0.5165232175174641, x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c0) VALUES (0.8984200470913285, 'QPoR2Pb'); -- 0ms;
REINDEX RTRIM; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, 0.36641201903831566, '866009914', '866009914', 0.45057701724675203), (0.2559241840665478, x'', x'aaf5', '', NULL), (NULL, x'9f70', 8.66009914E8, x'', 0.08266639483571558), (0.530825402697494, NULL, '1477869206', NULL, 0.782992460643626), (NULL, NULL, '325857863', '325857863', 0.7566704885008539); -- 0ms;
PRAGMA main.short_column_names; -- 0ms;
INSERT OR FAIL INTO rt0(c2) VALUES (0xffffffff80dff4f9); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c4) VALUES ('0.0', 3.25857863E8); -- 0ms;
ROLLBACK TRANSACTION; -- 2ms;
END TRANSACTION; -- 1ms;
END TRANSACTION; -- 1ms;
REINDEX; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 1ms;
VACUUM; -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 1ms;
ANALYZE main; -- 0ms;
REINDEX  rt0; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR FAIL INTO rt0(c4) VALUES ('\r4%U%| '); -- 1ms;
UPDATE OR IGNORE rt0 SET c1=3.21065779E8; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
END; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c4, c3, c0) VALUES ('-346195655', 435456963, x'', x''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.687998672434436) BETWEEN (x'd303') AND ('b1-忯g>')))AND(((0.08266639483571558)+(x'')))))OR((('')>=('')))); -- 2ms;
DROP TABLE rt0; -- 3ms;
REINDEX; -- 0ms;
PRAGMA busy_timeout = 0; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('C'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '39631'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.17846323917136653 WHERE NULL; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'') WHERE '?/'; -- 0ms;
CREATE TEMP TABLE t0 (c0 INTEGER , c1 REAL , c2 BLOB ); -- 4ms;
INSERT OR IGNORE INTO t0(c0, c1) VALUES (x'', NULL); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 8ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0)*(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)*(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)*(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (CAST((NOT (t0.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (CAST((NOT (t0.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((CAST((NOT (t0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND (((~ (vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND (((~ (vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND (((~ (vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING GROUP_CONCAT(t0.c0) UNION ALL SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING (NOT (GROUP_CONCAT(t0.c0))) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING ((GROUP_CONCAT(t0.c0)) ISNULL);
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING GROUP_CONCAT(t0.c0) UNION ALL SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING (NOT (GROUP_CONCAT(t0.c0))) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING ((GROUP_CONCAT(t0.c0)) ISNULL);
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT MIN((((((((t0.c2))!=((t0.c2))))OR(((t0.c1) IS TRUE))))AND(CASE WHEN vt0.c0 THEN '-9223372036854775808' END))) FROM t0, vt0;
SELECT ALL vt0.c0, t0.c0, t0.c2, t0.c1 FROM vt0, t0;
SELECT vt0.c0, t0.c0, t0.c2, t0.c1 FROM vt0, t0 WHERE ((NOT (t0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL vt0.c0, t0.c0, t0.c2, t0.c1 FROM vt0, t0 WHERE ((NOT ((NOT (t0.c0 COLLATE NOCASE))))) UNION ALL SELECT vt0.c0, t0.c0, t0.c2, t0.c1 FROM vt0, t0 WHERE ((((NOT (t0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL vt0.c0, t0.c0, t0.c2, t0.c1 FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (NULL) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c1, t0.c2 HAVING MAX(GROUP_CONCAT('Wx|	|㷲J\r{')) UNION ALL SELECT ALL t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c1, t0.c2 HAVING (NOT (MAX(GROUP_CONCAT('Wx|	|㷲J\r{')))) UNION ALL SELECT ALL t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c1, t0.c2 HAVING ((MAX(GROUP_CONCAT('Wx|	|㷲J\r{'))) ISNULL);
SELECT MAX(((t0.c2)IS NOT(t0.c0)) COLLATE NOCASE) FROM t0 ORDER BY (((t0.c2, t0.c0, t0.c1)) NOT BETWEEN (((t0.c2 IN ()), ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)), ((t0.c0)OR(0.2559241840665478)))) AND ((LIKELY(DISTINCT t0.c2), (t0.c2 IN ()), ((x'4b5d') ISNULL)))) ASC  NULLS LAST;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))%((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))%((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))%((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE (t0.c2) UNION SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE ((NOT (t0.c2))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE (((t0.c2) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0)))<((- (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)<<(vt0.c0)))<((- (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)<<(vt0.c0)))<((- (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(vt0.c0)) IS TRUE) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((GROUP_CONCAT(vt0.c0)) IS TRUE))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((GROUP_CONCAT(vt0.c0)) IS TRUE)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(vt0.c0)) IS TRUE) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((GROUP_CONCAT(vt0.c0)) IS TRUE))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((GROUP_CONCAT(vt0.c0)) IS TRUE)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c2, vt0.c0 FROM vt0, t0;
SELECT t0.c2, vt0.c0 FROM vt0, t0 WHERE (CASE '<}}'  WHEN t0.c1 THEN t0.c2 END COLLATE BINARY) UNION ALL SELECT ALL t0.c2, vt0.c0 FROM vt0, t0 WHERE ((NOT (CASE '<}}'  WHEN t0.c1 THEN t0.c2 END COLLATE BINARY))) UNION ALL SELECT t0.c2, vt0.c0 FROM vt0, t0 WHERE (((CASE '<}}'  WHEN t0.c1 THEN t0.c2 END COLLATE BINARY) ISNULL));
SELECT ALL t0.c2, vt0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c1, vt0.c0, t0.c2, t0.c0 FROM t0, vt0;
SELECT DISTINCT t0.c1, vt0.c0, t0.c2, t0.c0 FROM t0, vt0 WHERE (((CASE vt0.c0  WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c2 WHEN vt0.c0 THEN t0.c2 WHEN vt0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 END)OR(CASE WHEN t0.c1 THEN 'Z[zz]No' ELSE t0.c1 END))) UNION SELECT DISTINCT t0.c1, vt0.c0, t0.c2, t0.c0 FROM t0, vt0 WHERE ((NOT (((CASE vt0.c0  WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c2 WHEN vt0.c0 THEN t0.c2 WHEN vt0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 END)OR(CASE WHEN t0.c1 THEN 'Z[zz]No' ELSE t0.c1 END))))) UNION SELECT DISTINCT t0.c1, vt0.c0, t0.c2, t0.c0 FROM t0, vt0 WHERE (((((CASE vt0.c0  WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c2 WHEN vt0.c0 THEN t0.c2 WHEN vt0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 END)OR(CASE WHEN t0.c1 THEN 'Z[zz]No' ELSE t0.c1 END))) ISNULL));
SELECT DISTINCT t0.c1, vt0.c0, t0.c2, t0.c0 FROM t0, vt0;
SELECT t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((((t0.c0) IS FALSE)) NOT BETWEEN (NULL COLLATE NOCASE) AND ((((t0.c1)) BETWEEN ((t0.c2)) AND ((t0.c1)))))) GROUP BY t0.c0, t0.c1, t0.c2 UNION SELECT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((NOT (((((t0.c0) IS FALSE)) NOT BETWEEN (NULL COLLATE NOCASE) AND ((((t0.c1)) BETWEEN ((t0.c2)) AND ((t0.c1)))))))) GROUP BY t0.c0, t0.c1, t0.c2 UNION SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((((((t0.c0) IS FALSE)) NOT BETWEEN (NULL COLLATE NOCASE) AND ((((t0.c1)) BETWEEN ((t0.c2)) AND ((t0.c1)))))) ISNULL)) GROUP BY t0.c0, t0.c1, t0.c2;
SELECT t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT vt0.c0, t0.c1, t0.c2, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c1, t0.c2, t0.c0;
SELECT ALL vt0.c0, t0.c1, t0.c2, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c1, t0.c2, t0.c0 HAVING MIN(((((((((TOTAL(COUNT(AVG(t0.c0))))OR(t0.c2)))OR(t0.c1)))OR(t0.c1)))AND(t0.c0))) UNION ALL SELECT vt0.c0, t0.c1, t0.c2, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c1, t0.c2, t0.c0 HAVING (NOT (MIN(((((((((TOTAL(COUNT(AVG(t0.c0))))OR(t0.c2)))OR(t0.c1)))OR(t0.c1)))AND(t0.c0))))) UNION ALL SELECT vt0.c0, t0.c1, t0.c2, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c1, t0.c2, t0.c0 HAVING ((MIN(((((((((TOTAL(COUNT(AVG(t0.c0))))OR(t0.c2)))OR(t0.c1)))OR(t0.c1)))AND(t0.c0)))) ISNULL);
SELECT t0.c0 FROM vt0, t0;
SELECT t0.c0 FROM vt0, t0 WHERE ((((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c2))))<>(t0.c2))) UNION ALL SELECT t0.c0 FROM vt0, t0 WHERE ((NOT ((((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c2))))<>(t0.c2))))) UNION ALL SELECT t0.c0 FROM vt0, t0 WHERE ((((((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c2))))!=(t0.c2))) ISNULL));
SELECT t0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c1, t0.c0 FROM t0;
SELECT DISTINCT t0.c1, t0.c0 FROM t0 WHERE (CAST(t0.c1 AS REAL) COLLATE BINARY) UNION SELECT DISTINCT t0.c1, t0.c0 FROM t0 WHERE ((NOT (CAST(t0.c1 AS REAL) COLLATE BINARY))) UNION SELECT DISTINCT t0.c1, t0.c0 FROM t0 WHERE (((CAST(t0.c1 AS REAL) COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c1, t0.c0 FROM t0;
SELECT ALL t0.c1, vt0.c0, t0.c0, t0.c2 FROM t0, vt0 GROUP BY t0.c1, vt0.c0, t0.c0, t0.c2;
SELECT t0.c1, vt0.c0, t0.c0, t0.c2 FROM t0, vt0 WHERE (json_patch(CASE NULL  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c1 THEN t0.c2 ELSE vt0.c0 END, (vt0.c0 IN ()))) GROUP BY t0.c1, vt0.c0, t0.c0, t0.c2 UNION SELECT ALL t0.c1, vt0.c0, t0.c0, t0.c2 FROM t0, vt0 WHERE ((NOT (json_patch(CASE NULL  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c1 THEN t0.c2 ELSE vt0.c0 END, (vt0.c0 IN ()))))) GROUP BY t0.c1, vt0.c0, t0.c0, t0.c2 UNION SELECT ALL t0.c1, vt0.c0, t0.c0, t0.c2 FROM t0, vt0 WHERE (((json_patch(CASE NULL  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c1 THEN t0.c2 ELSE vt0.c0 END, (vt0.c0 IN ()))) ISNULL)) GROUP BY t0.c1, vt0.c0, t0.c0, t0.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)/(vt0.c0)))GLOB(((vt0.c0) NOT NULL)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0)/(vt0.c0)))GLOB(((vt0.c0) NOT NULL)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)/(vt0.c0)))GLOB(((vt0.c0) NOT NULL)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (((vt0.c0)IS NOT(t0.c2)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (((vt0.c0)IS NOT(t0.c2)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((((vt0.c0)IS NOT(t0.c2)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((((t0.c2, t0.c2, NULL)) NOT BETWEEN ((CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END, CASE WHEN 0.3879891259445559 THEN t0.c1 ELSE t0.c1 END, (((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))) AND ((t0.c1, CAST(t0.c1 AS TEXT), x'' COLLATE NOCASE)))) GROUP BY t0.c2, t0.c1, t0.c0 UNION SELECT t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((NOT ((((t0.c2, t0.c2, NULL)) NOT BETWEEN ((CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END, CASE WHEN 0.3879891259445559 THEN t0.c1 ELSE t0.c1 END, (((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))) AND ((t0.c1, CAST(t0.c1 AS TEXT), x'' COLLATE NOCASE)))))) GROUP BY t0.c2, t0.c1, t0.c0 UNION SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((((((t0.c2, t0.c2, NULL)) NOT BETWEEN ((CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END, CASE WHEN 0.3879891259445559 THEN t0.c1 ELSE t0.c1 END, (((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))) AND ((t0.c1, CAST(t0.c1 AS TEXT), x'' COLLATE NOCASE)))) ISNULL)) GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL t0.c2, t0.c1 FROM t0, vt0 GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0, vt0 GROUP BY t0.c2, t0.c1 HAVING CASE COUNT(*)  WHEN ((vt0.c0) IS FALSE) THEN COUNT(t0.c2) END UNION ALL SELECT t0.c2, t0.c1 FROM t0, vt0 GROUP BY t0.c2, t0.c1 HAVING (NOT (CASE COUNT(*)  WHEN ((vt0.c0) IS FALSE) THEN COUNT(t0.c2) END)) UNION ALL SELECT t0.c2, t0.c1 FROM t0, vt0 GROUP BY t0.c2, t0.c1 HAVING ((CASE COUNT(*)  WHEN ((vt0.c0) IS FALSE) THEN COUNT(t0.c2) END) ISNULL);
SELECT ALL t0.c2, t0.c1 FROM t0, vt0 GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0, vt0 GROUP BY t0.c2, t0.c1 HAVING CASE COUNT(*)  WHEN ((vt0.c0) IS FALSE) THEN COUNT(t0.c2) END UNION ALL SELECT t0.c2, t0.c1 FROM t0, vt0 GROUP BY t0.c2, t0.c1 HAVING (NOT (CASE COUNT(*)  WHEN ((vt0.c0) IS FALSE) THEN COUNT(t0.c2) END)) UNION ALL SELECT t0.c2, t0.c1 FROM t0, vt0 GROUP BY t0.c2, t0.c1 HAVING ((CASE COUNT(*)  WHEN ((vt0.c0) IS FALSE) THEN COUNT(t0.c2) END) ISNULL);
SELECT ALL t0.c2, t0.c1 FROM t0, vt0 GROUP BY t0.c2, t0.c1;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)AND(vt0.c0 COLLATE BINARY)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0 COLLATE BINARY)AND(vt0.c0 COLLATE BINARY)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0 COLLATE BINARY)AND(vt0.c0 COLLATE BINARY)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL t0.c2 FROM t0, vt0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0, vt0 WHERE ((('-1342648469')<=(t0.c1)) COLLATE RTRIM) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0, vt0 WHERE ((NOT ((('-1342648469')<=(t0.c1)) COLLATE RTRIM))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0, vt0 WHERE ((((('-1342648469')<=(t0.c1)) COLLATE RTRIM) ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0, vt0 GROUP BY t0.c2;
SELECT t0.c0, t0.c1 FROM t0 NOT INDEXED GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING ((((((t0.c0)AND(SUM(t0.c2))))AND(AVG(t0.c1)))) NOT BETWEEN (t0.c2) AND (CASE WHEN COUNT(MIN(GROUP_CONCAT(t0.c1))) THEN t0.c0 END)) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING (NOT (((((((t0.c0)AND(SUM(t0.c2))))AND(AVG(t0.c1)))) NOT BETWEEN (t0.c2) AND (CASE WHEN COUNT(MIN(GROUP_CONCAT(t0.c1))) THEN t0.c0 END)))) UNION ALL SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING ((((((((t0.c0)AND(SUM(t0.c2))))AND(AVG(t0.c1)))) NOT BETWEEN (t0.c2) AND (CASE WHEN COUNT(MIN(GROUP_CONCAT(t0.c1))) THEN t0.c0 END))) ISNULL);
SELECT ALL TOTAL(t0.c2) FROM vt0, t0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN ((vt0.c0)+(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN ((((((((0x4a03ab8a)AND(vt0.c0)))AND('X쩠')))OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN COALESCE(vt0.c0, vt0.c0) THEN UNLIKELY('1284344661') ELSE CAST(vt0.c0 AS REAL) END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE vt0.c0 COLLATE RTRIM  WHEN ((vt0.c0)+(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN ((((((((0x4a03ab8a)AND(vt0.c0)))AND('X쩠')))OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN COALESCE(vt0.c0, vt0.c0) THEN UNLIKELY('1284344661') ELSE CAST(vt0.c0 AS REAL) END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0 COLLATE RTRIM  WHEN ((vt0.c0)+(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN ((((((((0x4a03ab8a)AND(vt0.c0)))AND('X쩠')))OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN COALESCE(vt0.c0, vt0.c0) THEN UNLIKELY('1284344661') ELSE CAST(vt0.c0 AS REAL) END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(json_insert(vt0.c0, vt0.c0, vt0.c0) AS INTEGER)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(json_insert(vt0.c0, vt0.c0, vt0.c0) AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(json_insert(vt0.c0, vt0.c0, vt0.c0) AS INTEGER)) ISNULL));
SELECT t0.c0, vt0.c0, t0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c2;
SELECT t0.c0, vt0.c0, t0.c2 FROM vt0, t0 WHERE ((((((vt0.c0))>((t0.c0)))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (CASE t0.c0  WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN vt0.c0 THEN vt0.c0 END))) GROUP BY t0.c0, vt0.c0, t0.c2 UNION SELECT t0.c0, vt0.c0, t0.c2 FROM vt0, t0 WHERE ((NOT ((((((vt0.c0))>((t0.c0)))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (CASE t0.c0  WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN vt0.c0 THEN vt0.c0 END))))) GROUP BY t0.c0, vt0.c0, t0.c2 UNION SELECT ALL t0.c0, vt0.c0, t0.c2 FROM vt0 NOT INDEXED, t0 WHERE ((((((((vt0.c0))>((t0.c0)))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (CASE t0.c0  WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN vt0.c0 THEN vt0.c0 END))) ISNULL)) GROUP BY t0.c0, vt0.c0, t0.c2;
SELECT t0.c0, vt0.c0, t0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((COUNT(*), COUNT(*), AVG(vt0.c0))) NOT BETWEEN (((NOT (MIN(vt0.c0))), GROUP_CONCAT(COUNT(GROUP_CONCAT(AVG(vt0.c0)))), GROUP_CONCAT(0xffffffffae62be5f))) AND ((MIN(GROUP_CONCAT(0.45057701724675203)), MIN(SUM(vt0.c0)), COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((COUNT(*), COUNT(*), AVG(vt0.c0))) NOT BETWEEN (((NOT (MIN(vt0.c0))), GROUP_CONCAT(COUNT(GROUP_CONCAT(AVG(vt0.c0)))), GROUP_CONCAT(0xffffffffae62be5f))) AND ((MIN(GROUP_CONCAT(0.45057701724675203)), MIN(SUM(vt0.c0)), COUNT(*)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((COUNT(*), COUNT(*), AVG(vt0.c0))) NOT BETWEEN (((NOT (MIN(vt0.c0))), GROUP_CONCAT(COUNT(GROUP_CONCAT(AVG(vt0.c0)))), GROUP_CONCAT(0xffffffffae62be5f))) AND ((MIN(GROUP_CONCAT(0.45057701724675203)), MIN(SUM(vt0.c0)), COUNT(*))))) ISNULL);
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((t0.c0) NOT BETWEEN ((t0.c0 IN (t0.c2, '\r4%U%| '))) AND (0.3800957798362604))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT (((t0.c0) NOT BETWEEN ((t0.c0 IN (t0.c2, '\r4%U%| '))) AND (0.3800957798362604))))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((((t0.c0) NOT BETWEEN ((t0.c0 IN (t0.c2, '\r4%U%| '))) AND (0.3800957798362604))) ISNULL));
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (0.5729343785017085) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (0.5729343785017085))) UNION SELECT DISTINCT * FROM t0 WHERE (((0.5729343785017085) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0 WHERE (t0.c2) GROUP BY t0.c1, t0.c0 UNION SELECT t0.c1, t0.c0 FROM t0 WHERE ((NOT (t0.c2))) GROUP BY t0.c1, t0.c0 UNION SELECT t0.c1, t0.c0 FROM t0 WHERE (((t0.c2) ISNULL)) GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(TOTAL(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(TOTAL(GROUP_CONCAT(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(TOTAL(GROUP_CONCAT(vt0.c0))))) ISNULL);
SELECT ALL * FROM vt0 NATURAL JOIN t0;
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((vt0.c0)>(t0.c0))) UNION ALL SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE ((NOT (((vt0.c0)>(t0.c0))))) UNION ALL SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((((vt0.c0)>(t0.c0))) ISNULL));
SELECT ALL * FROM vt0 NATURAL JOIN t0;
SELECT DISTINCT t0.c1, t0.c2, vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((((((t0.c2)OR(t0.c0)))AND(vt0.c0))) BETWEEN (vt0.c0) AND (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1))));
SELECT DISTINCT t0.c1, t0.c2, vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((((((t0.c2)OR(t0.c0)))AND(vt0.c0))) BETWEEN (vt0.c0) AND (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1)))) WHERE (((((((((((((((t0.c2) NOTNULL))AND(QUOTE(''))))OR(((vt0.c0) BETWEEN (0Xffffffffad21b533) AND (t0.c1)))))OR(x'')))OR(((t0.c1)LIKE(t0.c2)))))OR(((t0.c1)>=(t0.c0)))))OR(t0.c1))) UNION SELECT DISTINCT t0.c1, t0.c2, vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((((((t0.c2)OR(t0.c0)))AND(vt0.c0))) BETWEEN (vt0.c0) AND (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1)))) WHERE ((NOT (((((((((((((((t0.c2) NOTNULL))AND(QUOTE(''))))OR(((vt0.c0) BETWEEN (0xffffffffad21b533) AND (t0.c1)))))OR(x'')))OR(((t0.c1)LIKE(t0.c2)))))OR(((t0.c1)>=(t0.c0)))))OR(t0.c1))))) UNION SELECT DISTINCT t0.c1, t0.c2, vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((((((t0.c2)OR(t0.c0)))AND(vt0.c0))) BETWEEN (vt0.c0) AND (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1)))) WHERE (((((((((((((((((t0.c2) NOTNULL))AND(QUOTE(''))))OR(((vt0.c0) BETWEEN (0xffffffffad21b533) AND (t0.c1)))))OR(x'')))OR(((t0.c1)LIKE(t0.c2)))))OR(((t0.c1)>=(t0.c0)))))OR(t0.c1))) ISNULL));
SELECT DISTINCT t0.c1, t0.c2, vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((((((t0.c2)OR(t0.c0)))AND(vt0.c0))) BETWEEN (vt0.c0) AND (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1))));
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 WHERE ((CAST(t0.c0 AS BLOB) IN (CAST(t0.c2 AS NUMERIC)))) GROUP BY t0.c0, t0.c1 UNION SELECT ALL t0.c0, t0.c1 FROM t0 WHERE ((NOT ((CAST(t0.c0 AS BLOB) IN (CAST(t0.c2 AS NUMERIC)))))) GROUP BY t0.c0, t0.c1 UNION SELECT t0.c0, t0.c1 FROM t0 WHERE ((((CAST(t0.c0 AS BLOB) IN (CAST(t0.c2 AS NUMERIC)))) ISNULL)) GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (((AVG(AVG(COUNT(*)))))=(((~ (t0.c0))))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (NOT ((((AVG(AVG(COUNT(*)))))=(((~ (t0.c0))))))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (((((AVG(AVG(COUNT(*)))))==(((~ (t0.c0)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0 COLLATE RTRIM) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0 COLLATE RTRIM))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT t0.c2, t0.c1 FROM t0;
SELECT DISTINCT t0.c2, t0.c1 FROM t0 WHERE ((CAST(t0.c0 AS BLOB) IN ())) UNION SELECT DISTINCT t0.c2, t0.c1 FROM t0 WHERE ((NOT ((CAST(t0.c0 AS BLOB) IN ())))) UNION SELECT DISTINCT t0.c2, t0.c1 FROM t0 WHERE ((((CAST(t0.c0 AS BLOB) IN ())) ISNULL));
SELECT DISTINCT t0.c2, t0.c1 FROM t0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 WHERE (((((DATETIME(t0.c2, t0.c1, t0.c1))OR(0x4c8d8b55)))AND(0.28160026606085786))) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM t0 WHERE ((NOT (((((DATETIME(t0.c2, t0.c1, t0.c1))OR(0x4c8d8b55)))AND(0.28160026606085786))))) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM t0 WHERE (((((((DATETIME(t0.c2, t0.c1, t0.c1))OR(0x4c8d8b55)))AND(0.28160026606085786))) ISNULL)) GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c0, t0.c2, t0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, t0.c2, t0.c1, vt0.c0;
SELECT t0.c0, t0.c2, t0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, t0.c2, t0.c1, vt0.c0 HAVING (~ (GROUP_CONCAT(vt0.c0) COLLATE BINARY)) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, t0.c2, t0.c1, vt0.c0 HAVING (NOT ((~ (GROUP_CONCAT(vt0.c0) COLLATE BINARY)))) UNION ALL SELECT t0.c0, t0.c2, t0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, t0.c2, t0.c1, vt0.c0 HAVING (((~ (GROUP_CONCAT(vt0.c0) COLLATE BINARY))) ISNULL);
SELECT ALL t0.c0, t0.c2, t0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, t0.c2, t0.c1, vt0.c0;
SELECT t0.c0, t0.c2, t0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, t0.c2, t0.c1, vt0.c0 HAVING (~ (GROUP_CONCAT(vt0.c0) COLLATE BINARY)) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, t0.c2, t0.c1, vt0.c0 HAVING (NOT ((~ (GROUP_CONCAT(vt0.c0) COLLATE BINARY)))) UNION ALL SELECT t0.c0, t0.c2, t0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, t0.c2, t0.c1, vt0.c0 HAVING (((~ (GROUP_CONCAT(vt0.c0) COLLATE BINARY))) ISNULL);
SELECT ALL t0.c0, t0.c2, t0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, t0.c2, t0.c1, vt0.c0;
SELECT MIN((((NOT (t0.c2))) BETWEEN (((t0.c0) NOT NULL)) AND (x''))) FROM t0, vt0 ORDER BY ((((((t0.c0) NOT NULL))AND(CAST(t0.c2 AS TEXT))))OR(((((((((t0.c2)OR(t0.c1)))OR(x'f28d')))AND(t0.c1)))OR(t0.c2)))) DESC  NULLS LAST, CASE ((t0.c1)-(t0.c2))  WHEN (vt0.c0 IN ()) THEN CASE t0.c0  WHEN t0.c1 THEN t0.c1 END WHEN TOTAL_CHANGES() THEN (+ (t0.c0)) WHEN ((-1426679742) NOT NULL) THEN ((((vt0.c0)OR(t0.c1)))OR(vt0.c0)) ELSE ((t0.c2) IS FALSE) END DESC;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(x'' AS NUMERIC)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(x'' AS NUMERIC)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CAST(x'' AS NUMERIC)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT t0.c0, t0.c2 FROM vt0 FULL OUTER JOIN t0 ON t0.c1;
SELECT DISTINCT t0.c0, t0.c2 FROM vt0 FULL OUTER JOIN t0 ON t0.c1 WHERE (0.15747326709145282) UNION SELECT DISTINCT t0.c0, t0.c2 FROM vt0 FULL OUTER JOIN t0 ON t0.c1 WHERE ((NOT (0.15747326709145282))) UNION SELECT DISTINCT t0.c0, t0.c2 FROM vt0 FULL OUTER JOIN t0 ON t0.c1 WHERE (((0.15747326709145282) ISNULL));
SELECT DISTINCT t0.c0, t0.c2 FROM vt0 FULL OUTER JOIN t0 ON t0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (vt0.c0) AND ((((0.6807870577446596)) NOT BETWEEN ((vt0.c0)) AND ((0xffffffffaaeef62b)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN ())) BETWEEN (vt0.c0) AND ((((0.6807870577446596)) NOT BETWEEN ((vt0.c0)) AND ((0xffffffffaaeef62b)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN ())) BETWEEN (vt0.c0) AND ((((0.6807870577446596)) NOT BETWEEN ((vt0.c0)) AND ((0Xffffffffaaeef62b)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING ((COUNT(*)) ISNULL) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING (NOT (((COUNT(*)) ISNULL))) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 NOT INDEXED GROUP BY t0.c0, t0.c1 HAVING ((((COUNT(*)) ISNULL)) ISNULL);
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING ((COUNT(*)) ISNULL) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING (NOT (((COUNT(*)) ISNULL))) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 NOT INDEXED GROUP BY t0.c0, t0.c1 HAVING ((((COUNT(*)) ISNULL)) ISNULL);
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, vt0.c0))<=((x'8df0', vt0.c0, '-2056616263'))) AS TEXT)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST((((vt0.c0, vt0.c0, vt0.c0))<=((x'8df0', vt0.c0, '-2056616263'))) AS TEXT)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST((((vt0.c0, vt0.c0, vt0.c0))<=((x'8df0', vt0.c0, '-2056616263'))) AS TEXT)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT t0.c2 FROM t0 CROSS JOIN vt0 ON CASE ((t0.c2)<=(t0.c0))  WHEN t0.c2 COLLATE RTRIM THEN t0.c0 COLLATE BINARY END;
SELECT DISTINCT t0.c2 FROM t0 CROSS JOIN vt0 ON CASE ((t0.c2)<=(t0.c0))  WHEN t0.c2 COLLATE RTRIM THEN t0.c0 COLLATE BINARY END WHERE (((vt0.c0)GLOB(t0.c1)) COLLATE BINARY) UNION SELECT DISTINCT t0.c2 FROM t0 CROSS JOIN vt0 ON CASE ((t0.c2)<=(t0.c0))  WHEN t0.c2 COLLATE RTRIM THEN t0.c0 COLLATE BINARY END WHERE ((NOT (((vt0.c0)GLOB(t0.c1)) COLLATE BINARY))) UNION SELECT DISTINCT t0.c2 FROM t0 CROSS JOIN vt0 ON CASE ((t0.c2)<=(t0.c0))  WHEN t0.c2 COLLATE RTRIM THEN t0.c0 COLLATE BINARY END WHERE (((((vt0.c0)GLOB(t0.c1)) COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c2 FROM t0 CROSS JOIN vt0 ON CASE ((t0.c2)<=(t0.c0))  WHEN t0.c2 COLLATE RTRIM THEN t0.c0 COLLATE BINARY END;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 WHERE (((vt0.c0)|(t0.c0)) COLLATE NOCASE) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt0, t0 WHERE ((NOT (((vt0.c0)|(t0.c0)) COLLATE NOCASE))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 WHERE (((((vt0.c0)|(t0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT t0.c2, t0.c1, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (CASE WHEN t0.c2 THEN t0.c1 ELSE vt0.c0 END IN ()) GROUP BY t0.c2, t0.c1, vt0.c0;
SELECT t0.c2, t0.c1, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (CASE WHEN t0.c2 THEN t0.c1 ELSE vt0.c0 END IN ()) GROUP BY t0.c2, t0.c1, vt0.c0 HAVING TOTAL(SUM(t0.c0)) UNION ALL SELECT ALL t0.c2, t0.c1, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (CASE WHEN t0.c2 THEN t0.c1 ELSE vt0.c0 END IN ()) GROUP BY t0.c2, t0.c1, vt0.c0 HAVING (NOT (TOTAL(SUM(t0.c0)))) UNION ALL SELECT ALL t0.c2, t0.c1, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (CASE WHEN t0.c2 THEN t0.c1 ELSE vt0.c0 END IN ()) GROUP BY t0.c2, t0.c1, vt0.c0 HAVING ((TOTAL(SUM(t0.c0))) ISNULL);
SELECT MAX(((((vt0.c0) ISNULL)) NOT BETWEEN (json_array(vt0.c0, vt0.c0)) AND (((vt0.c0) IS FALSE)))) FROM vt0 ORDER BY '1861252778', ((((NULL)OR(vt0.c0 COLLATE BINARY)))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR('-1369260449')))OR(vt0.c0)))>>(vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR('-1369260449')))OR(vt0.c0)))>>(vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR('-1369260449')))OR(vt0.c0)))>>(vt0.c0))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (((t0.c2)) NOT BETWEEN ((((t0.c2)IS NOT(vt0.c0)))) AND ((CAST(t0.c1 AS REAL))));
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (((t0.c2)) NOT BETWEEN ((((t0.c2)IS NOT(vt0.c0)))) AND ((CAST(t0.c1 AS REAL)))) WHERE (((((NULL)AND(json_patch(vt0.c0, vt0.c0))))AND(t0.c1))) UNION SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (((t0.c2)) NOT BETWEEN ((((t0.c2)IS NOT(vt0.c0)))) AND ((CAST(t0.c1 AS REAL)))) WHERE ((NOT (((((NULL)AND(json_patch(vt0.c0, vt0.c0))))AND(t0.c1))))) UNION SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (((t0.c2)) NOT BETWEEN ((((t0.c2)IS NOT(vt0.c0)))) AND ((CAST(t0.c1 AS REAL)))) WHERE (((((((NULL)AND(json_patch(vt0.c0, vt0.c0))))AND(t0.c1))) ISNULL));
SELECT t0.c1, t0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c2, vt0.c0;
SELECT t0.c1, t0.c2, vt0.c0 FROM t0, vt0 NOT INDEXED WHERE ((((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c0)))) BETWEEN (t0.c0) AND ((((t0.c1))>((vt0.c0)))))) GROUP BY t0.c1, t0.c2, vt0.c0 UNION SELECT ALL t0.c1, t0.c2, vt0.c0 FROM t0, vt0 WHERE ((NOT ((((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c0)))) BETWEEN (t0.c0) AND ((((t0.c1))>((vt0.c0)))))))) GROUP BY t0.c1, t0.c2, vt0.c0 UNION SELECT t0.c1, t0.c2, vt0.c0 FROM t0, vt0 WHERE ((((((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c0)))) BETWEEN (t0.c0) AND ((((t0.c1))>((vt0.c0)))))) ISNULL)) GROUP BY t0.c1, t0.c2, vt0.c0;
SELECT t0.c1, t0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c2, vt0.c0;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING LTRIM((((TOTAL(COUNT(SUM(t0.c1))), COUNT(t0.c2), t0.c1)) BETWEEN ((t0.c1, TOTAL(MAX(GROUP_CONCAT(COUNT(AVG(t0.c2))))), GROUP_CONCAT(TOTAL('1284344661')))) AND ((t0.c1, MIN(t0.c1), t0.c2))), ((AVG(t0.c1))==(MAX(t0.c2)))) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING (NOT (LTRIM((((TOTAL(COUNT(SUM(t0.c1))), COUNT(t0.c2), t0.c1)) BETWEEN ((t0.c1, TOTAL(MAX(GROUP_CONCAT(COUNT(AVG(t0.c2))))), GROUP_CONCAT(TOTAL('1284344661')))) AND ((t0.c1, MIN(t0.c1), t0.c2))), ((AVG(t0.c1))==(MAX(t0.c2)))))) UNION ALL SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING ((LTRIM((((TOTAL(COUNT(SUM(t0.c1))), COUNT(t0.c2), t0.c1)) BETWEEN ((t0.c1, TOTAL(MAX(GROUP_CONCAT(COUNT(AVG(t0.c2))))), GROUP_CONCAT(TOTAL('1284344661')))) AND ((t0.c1, MIN(t0.c1), t0.c2))), ((AVG(t0.c1))==(MAX(t0.c2))))) ISNULL);
SELECT * FROM vt0 NOT INDEXED;
SELECT * FROM vt0 WHERE (LOWER(DISTINCT ((vt0.c0)>('3')))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (LOWER(DISTINCT ((vt0.c0)>('3')))))) UNION ALL SELECT * FROM vt0 WHERE (((LOWER(DISTINCT ((vt0.c0)>('3')))) ISNULL));
SELECT * FROM vt0 NOT INDEXED;
SELECT DISTINCT vt0.c0, t0.c2, t0.c1, t0.c0 FROM t0 INNER JOIN vt0 ON ((((t0.c2)LIKE(t0.c2)))%((('')==(vt0.c0))));
SELECT DISTINCT vt0.c0, t0.c2, t0.c1, t0.c0 FROM t0 INNER JOIN vt0 ON ((((t0.c2)LIKE(t0.c2)))%((('')==(vt0.c0)))) WHERE (((CAST('\' AS INTEGER)) IS FALSE)) UNION SELECT DISTINCT vt0.c0, t0.c2, t0.c1, t0.c0 FROM t0 INNER JOIN vt0 ON ((((t0.c2)LIKE(t0.c2)))%((('')==(vt0.c0)))) WHERE ((NOT (((CAST('\' AS INTEGER)) IS FALSE)))) UNION SELECT DISTINCT vt0.c0, t0.c2, t0.c1, t0.c0 FROM t0 INNER JOIN vt0 ON ((((t0.c2)LIKE(t0.c2)))%((('')=(vt0.c0)))) WHERE (((((CAST('\' AS INTEGER)) IS FALSE)) ISNULL));
SELECT DISTINCT vt0.c0, t0.c2, t0.c1, t0.c0 FROM t0 INNER JOIN vt0 ON ((((t0.c2)LIKE(t0.c2)))%((('')==(vt0.c0))));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((0x58167e96)AND(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c0)>=(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((((((0x58167e96)AND(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c0)>=(vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((((((0x58167e96)AND(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c0)>=(vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM((SUM(vt0.c0) IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM((SUM(vt0.c0) IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM((SUM(vt0.c0) IN ()))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM((SUM(vt0.c0) IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM((SUM(vt0.c0) IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM((SUM(vt0.c0) IN ()))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 WHERE (((((CAST(t0.c1 AS NUMERIC))OR(t0.c2 COLLATE RTRIM)))OR((+ (t0.c1))))) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((NOT (((((CAST(t0.c1 AS NUMERIC))OR(t0.c2 COLLATE RTRIM)))OR((+ (t0.c1))))))) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 WHERE (((((((CAST(t0.c1 AS NUMERIC))OR(t0.c2 COLLATE RTRIM)))OR((+ (t0.c1))))) ISNULL));
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (CAST(t0.c2 AS NUMERIC)) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (CAST(t0.c2 AS NUMERIC)))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((CAST(t0.c2 AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL vt0.c0, t0.c0, t0.c2 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0, t0.c0, t0.c2;
SELECT ALL vt0.c0, t0.c0, t0.c2 FROM vt0 NATURAL JOIN t0 WHERE (t0.c0) GROUP BY vt0.c0, t0.c0, t0.c2 UNION SELECT vt0.c0, t0.c0, t0.c2 FROM vt0 NATURAL JOIN t0 WHERE ((NOT (t0.c0))) GROUP BY vt0.c0, t0.c0, t0.c2 UNION SELECT vt0.c0, t0.c0, t0.c2 FROM vt0 NATURAL JOIN t0 WHERE (((t0.c0) ISNULL)) GROUP BY vt0.c0, t0.c0, t0.c2;
SELECT ALL vt0.c0, t0.c0, t0.c2 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0, t0.c0, t0.c2;
SELECT ALL t0.c2, vt0.c0, t0.c0, t0.c1 FROM t0, vt0 GROUP BY t0.c2, vt0.c0, t0.c0, t0.c1;
SELECT t0.c2, vt0.c0, t0.c0, t0.c1 FROM t0, vt0 GROUP BY t0.c2, vt0.c0, t0.c0, t0.c1 HAVING ((((t0.c2)OR(MAX(MIN(MIN(COUNT(*)))) COLLATE NOCASE)))OR(MIN(NULL))) UNION ALL SELECT ALL t0.c2, vt0.c0, t0.c0, t0.c1 FROM t0, vt0 GROUP BY t0.c2, vt0.c0, t0.c0, t0.c1 HAVING (NOT (((((t0.c2)OR(MAX(MIN(MIN(COUNT(*)))) COLLATE NOCASE)))OR(MIN(NULL))))) UNION ALL SELECT ALL t0.c2, vt0.c0, t0.c0, t0.c1 FROM t0, vt0 GROUP BY t0.c2, vt0.c0, t0.c0, t0.c1 HAVING ((((((t0.c2)OR(MAX(MIN(MIN(COUNT(*)))) COLLATE NOCASE)))OR(MIN(NULL)))) ISNULL);
SELECT vt0.c0, t0.c2, t0.c1, t0.c0 FROM t0 NATURAL JOIN vt0;
SELECT vt0.c0, t0.c2, t0.c1, t0.c0 FROM t0 NATURAL JOIN vt0 WHERE (((LOWER(vt0.c0))<(t0.c0))) UNION ALL SELECT vt0.c0, t0.c2, t0.c1, t0.c0 FROM t0 NATURAL JOIN vt0 WHERE ((NOT (((LOWER(vt0.c0))<(t0.c0))))) UNION ALL SELECT vt0.c0, t0.c2, t0.c1, t0.c0 FROM t0 NATURAL JOIN vt0 WHERE (((((LOWER(vt0.c0))<(t0.c0))) ISNULL));
SELECT vt0.c0, t0.c2, t0.c1, t0.c0 FROM t0 NATURAL JOIN vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((LENGTH('') IN (((vt0.c0) IS TRUE)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((LENGTH('') IN (((vt0.c0) IS TRUE)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((LENGTH('') IN (((vt0.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c1, vt0.c0, t0.c0 FROM t0 NOT INDEXED NATURAL JOIN vt0 GROUP BY t0.c1, vt0.c0, t0.c0;
SELECT ALL t0.c1, vt0.c0, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY t0.c1, vt0.c0, t0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT t0.c1, vt0.c0, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY t0.c1, vt0.c0, t0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT t0.c1, vt0.c0, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY t0.c1, vt0.c0, t0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE ((((((vt0.c0)-(t0.c0))))<=(((vt0.c0 IN ()))))) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT ((((((vt0.c0)-(t0.c0))))<=(((vt0.c0 IN ()))))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((((((((vt0.c0)-(t0.c0))))<=(((vt0.c0 IN ()))))) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN (((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0))) ELSE vt0.c0 END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0) ISNULL) THEN (((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0))) ELSE vt0.c0 END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN ((vt0.c0) ISNULL) THEN (((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))) ELSE vt0.c0 END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL t0.c1, t0.c0, vt0.c0, t0.c2 FROM t0, vt0 GROUP BY t0.c1, t0.c0, vt0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, vt0.c0, t0.c2 FROM t0, vt0 WHERE (((t0.c2 COLLATE NOCASE) NOT NULL)) GROUP BY t0.c1, t0.c0, vt0.c0, t0.c2 UNION SELECT t0.c1, t0.c0, vt0.c0, t0.c2 FROM t0, vt0 WHERE ((NOT (((t0.c2 COLLATE NOCASE) NOT NULL)))) GROUP BY t0.c1, t0.c0, vt0.c0, t0.c2 UNION SELECT t0.c1, t0.c0, vt0.c0, t0.c2 FROM t0, vt0 WHERE (((((t0.c2 COLLATE NOCASE) NOT NULL)) ISNULL)) GROUP BY t0.c1, t0.c0, vt0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, vt0.c0, t0.c2 FROM t0, vt0 GROUP BY t0.c1, t0.c0, vt0.c0, t0.c2;
SELECT ALL vt0.c0, t0.c2, t0.c0, t0.c1 FROM vt0 RIGHT OUTER JOIN t0 ON ((((((vt0.c0) ISNULL))OR(CAST(0.8847749416013975 AS INTEGER))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) GROUP BY vt0.c0, t0.c2, t0.c0, t0.c1;
SELECT ALL vt0.c0, t0.c2, t0.c0, t0.c1 FROM vt0 RIGHT OUTER JOIN t0 ON ((((((vt0.c0) ISNULL))OR(CAST(0.8847749416013975 AS INTEGER))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) GROUP BY vt0.c0, t0.c2, t0.c0, t0.c1 HAVING LIKE(t0.c1, ((COUNT(*))+(t0.c1))) UNION ALL SELECT ALL vt0.c0, t0.c2, t0.c0, t0.c1 FROM vt0 RIGHT OUTER JOIN t0 ON ((((((vt0.c0) ISNULL))OR(CAST(0.8847749416013975 AS INTEGER))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) GROUP BY vt0.c0, t0.c2, t0.c0, t0.c1 HAVING (NOT (LIKE(t0.c1, ((COUNT(*))+(t0.c1))))) UNION ALL SELECT ALL vt0.c0, t0.c2, t0.c0, t0.c1 FROM vt0 RIGHT OUTER JOIN t0 ON ((((((vt0.c0) ISNULL))OR(CAST(0.8847749416013975 AS INTEGER))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) GROUP BY vt0.c0, t0.c2, t0.c0, t0.c1 HAVING ((LIKE(t0.c1, ((COUNT(*))+(t0.c1)))) ISNULL);
SELECT ALL vt0.c0, t0.c2, t0.c0, t0.c1 FROM vt0 RIGHT OUTER JOIN t0 ON ((((((vt0.c0) ISNULL))OR(CAST(0.8847749416013975 AS INTEGER))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) GROUP BY vt0.c0, t0.c2, t0.c0, t0.c1;
SELECT ALL vt0.c0, t0.c2, t0.c0, t0.c1 FROM vt0 RIGHT OUTER JOIN t0 ON ((((((vt0.c0) ISNULL))OR(CAST(0.8847749416013975 AS INTEGER))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) GROUP BY vt0.c0, t0.c2, t0.c0, t0.c1 HAVING LIKE(t0.c1, ((COUNT(*))+(t0.c1))) UNION ALL SELECT ALL vt0.c0, t0.c2, t0.c0, t0.c1 FROM vt0 RIGHT OUTER JOIN t0 ON ((((((vt0.c0) ISNULL))OR(CAST(0.8847749416013975 AS INTEGER))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) GROUP BY vt0.c0, t0.c2, t0.c0, t0.c1 HAVING (NOT (LIKE(t0.c1, ((COUNT(*))+(t0.c1))))) UNION ALL SELECT ALL vt0.c0, t0.c2, t0.c0, t0.c1 FROM vt0 RIGHT OUTER JOIN t0 ON ((((((vt0.c0) ISNULL))OR(CAST(0.8847749416013975 AS INTEGER))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) GROUP BY vt0.c0, t0.c2, t0.c0, t0.c1 HAVING ((LIKE(t0.c1, ((COUNT(*))+(t0.c1)))) ISNULL);
SELECT ALL vt0.c0, t0.c2, t0.c0, t0.c1 FROM vt0 RIGHT OUTER JOIN t0 ON ((((((vt0.c0) ISNULL))OR(CAST(0.8847749416013975 AS INTEGER))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) GROUP BY vt0.c0, t0.c2, t0.c0, t0.c1;
SELECT vt0.c0, t0.c1, t0.c2 FROM t0, vt0;
SELECT ALL vt0.c0, t0.c1, t0.c2 FROM t0, vt0 WHERE (((((t0.c1)<=(t0.c1))) BETWEEN (((vt0.c0) IS FALSE)) AND (((t0.c2)<>(t0.c2))))) UNION ALL SELECT ALL vt0.c0, t0.c1, t0.c2 FROM t0, vt0 WHERE ((NOT (((((t0.c1)<=(t0.c1))) BETWEEN (((vt0.c0) IS FALSE)) AND (((t0.c2)<>(t0.c2))))))) UNION ALL SELECT vt0.c0, t0.c1, t0.c2 FROM t0, vt0 WHERE (((((((t0.c1)<=(t0.c1))) BETWEEN (((vt0.c0) IS FALSE)) AND (((t0.c2)!=(t0.c2))))) ISNULL));
SELECT vt0.c0, t0.c1, t0.c2 FROM t0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((NULL)IS((((vt0.c0))>((vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((NULL)IS((((vt0.c0))>((vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((NULL)IS((((vt0.c0))>((vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL t0.c2 FROM t0 RIGHT OUTER JOIN vt0 ON ((CASE t0.c0  WHEN t0.c0 THEN vt0.c0 END)IS(TRIM(t0.c2, t0.c2))) GROUP BY t0.c2;
SELECT t0.c2 FROM t0 RIGHT OUTER JOIN vt0 ON ((CASE t0.c0  WHEN t0.c0 THEN vt0.c0 END)IS(TRIM(t0.c2, t0.c2))) WHERE ('-953705571') GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 RIGHT OUTER JOIN vt0 ON ((CASE t0.c0  WHEN t0.c0 THEN vt0.c0 END)IS(TRIM(t0.c2, t0.c2))) WHERE ((NOT ('-953705571'))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 RIGHT OUTER JOIN vt0 ON ((CASE t0.c0  WHEN t0.c0 THEN vt0.c0 END)IS(TRIM(t0.c2, t0.c2))) WHERE ((('-953705571') ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 RIGHT OUTER JOIN vt0 ON ((CASE t0.c0  WHEN t0.c0 THEN vt0.c0 END)IS(TRIM(t0.c2, t0.c2))) GROUP BY t0.c2;
SELECT ALL t0.c0, vt0.c0, t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c1, t0.c2;
SELECT t0.c0, vt0.c0, t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c1, t0.c2 HAVING (NOT (CAST(t0.c2 AS BLOB))) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c1, t0.c2 HAVING (NOT ((NOT (CAST(t0.c2 AS BLOB))))) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c1, t0.c2 HAVING (((NOT (CAST(t0.c2 AS BLOB)))) ISNULL);
SELECT ALL t0.c0, vt0.c0, t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c1, t0.c2;
SELECT t0.c0, vt0.c0, t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c1, t0.c2 HAVING (NOT (CAST(t0.c2 AS BLOB))) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c1, t0.c2 HAVING (NOT ((NOT (CAST(t0.c2 AS BLOB))))) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c1, t0.c2 HAVING (((NOT (CAST(t0.c2 AS BLOB)))) ISNULL);
SELECT ALL t0.c0, vt0.c0, t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c1, t0.c2;
SELECT t0.c0, t0.c2, vt0.c0, t0.c1 FROM vt0, t0;
SELECT t0.c0, t0.c2, vt0.c0, t0.c1 FROM vt0, t0 WHERE (CASE WHEN t0.c1 COLLATE BINARY THEN t0.c0 COLLATE NOCASE WHEN t0.c0 COLLATE RTRIM THEN (t0.c1 IN ()) WHEN ((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2)) THEN CAST(vt0.c0 AS BLOB) WHEN (((t0.c2, t0.c2, vt0.c0))>((0.933511270259072, t0.c1, t0.c1))) THEN ((((((((t0.c0)OR(t0.c0)))AND(t0.c2)))OR(t0.c0)))OR(vt0.c0)) WHEN ((vt0.c0)=(t0.c2)) THEN ((vt0.c0)LIKE(vt0.c0)) END) UNION ALL SELECT t0.c0, t0.c2, vt0.c0, t0.c1 FROM vt0, t0 WHERE ((NOT (CASE WHEN t0.c1 COLLATE BINARY THEN t0.c0 COLLATE NOCASE WHEN t0.c0 COLLATE RTRIM THEN (t0.c1 IN ()) WHEN ((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2)) THEN CAST(vt0.c0 AS BLOB) WHEN (((t0.c2, t0.c2, vt0.c0))>((0.933511270259072, t0.c1, t0.c1))) THEN ((((((((t0.c0)OR(t0.c0)))AND(t0.c2)))OR(t0.c0)))OR(vt0.c0)) WHEN ((vt0.c0)==(t0.c2)) THEN ((vt0.c0)LIKE(vt0.c0)) END))) UNION ALL SELECT ALL t0.c0, t0.c2, vt0.c0, t0.c1 FROM vt0, t0 WHERE (((CASE WHEN t0.c1 COLLATE BINARY THEN t0.c0 COLLATE NOCASE WHEN t0.c0 COLLATE RTRIM THEN (t0.c1 IN ()) WHEN ((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2)) THEN CAST(vt0.c0 AS BLOB) WHEN (((t0.c2, t0.c2, vt0.c0))>((0.933511270259072, t0.c1, t0.c1))) THEN ((((((((t0.c0)OR(t0.c0)))AND(t0.c2)))OR(t0.c0)))OR(vt0.c0)) WHEN ((vt0.c0)==(t0.c2)) THEN ((vt0.c0)LIKE(vt0.c0)) END) ISNULL));
SELECT t0.c0, t0.c2, vt0.c0, t0.c1 FROM vt0, t0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL t0.c2, t0.c0, vt0.c0, t0.c1 FROM t0, vt0 GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1;
SELECT t0.c2, t0.c0, vt0.c0, t0.c1 FROM t0, vt0 WHERE ((((t0.c2, t0.c0, t0.c0)) BETWEEN ((CAST(t0.c0 AS BLOB), ((t0.c1)<=(t0.c2)), vt0.c0)) AND (((((t0.c0, t0.c0, t0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((t0.c0, t0.c1, t0.c2))), (- (t0.c1)), ((t0.c0) IS TRUE))))) GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1 UNION SELECT t0.c2, t0.c0, vt0.c0, t0.c1 FROM t0, vt0 WHERE ((NOT ((((t0.c2, t0.c0, t0.c0)) BETWEEN ((CAST(t0.c0 AS BLOB), ((t0.c1)<=(t0.c2)), vt0.c0)) AND (((((t0.c0, t0.c0, t0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((t0.c0, t0.c1, t0.c2))), (- (t0.c1)), ((t0.c0) IS TRUE))))))) GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1 UNION SELECT ALL t0.c2, t0.c0, vt0.c0, t0.c1 FROM t0, vt0 WHERE ((((((t0.c2, t0.c0, t0.c0)) BETWEEN ((CAST(t0.c0 AS BLOB), ((t0.c1)<=(t0.c2)), vt0.c0)) AND (((((t0.c0, t0.c0, t0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((t0.c0, t0.c1, t0.c2))), (- (t0.c1)), ((t0.c0) IS TRUE))))) ISNULL)) GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, vt0.c0, t0.c1 FROM t0, vt0 GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0, t0.c2, t0.c0, t0.c1 FROM t0, vt0;
SELECT DISTINCT vt0.c0, t0.c2, t0.c0, t0.c1 FROM t0, vt0 WHERE ((((NOT (vt0.c0))) ISNULL)) UNION SELECT DISTINCT vt0.c0, t0.c2, t0.c0, t0.c1 FROM t0, vt0 WHERE ((NOT ((((NOT (vt0.c0))) ISNULL)))) UNION SELECT DISTINCT vt0.c0, t0.c2, t0.c0, t0.c1 FROM t0, vt0 WHERE ((((((NOT (vt0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT vt0.c0, t0.c2, t0.c0, t0.c1 FROM t0, vt0;
SELECT t0.c2 FROM t0, vt0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0, vt0 WHERE (t0.c2) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0, vt0 NOT INDEXED WHERE ((NOT (t0.c2))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0, vt0 WHERE (((t0.c2) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM t0, vt0 GROUP BY t0.c2;
SELECT ALL t0.c2, vt0.c0 FROM vt0, t0 GROUP BY t0.c2, vt0.c0;
SELECT t0.c2, vt0.c0 FROM vt0, t0 GROUP BY t0.c2, vt0.c0 HAVING GROUP_CONCAT(SUM(GROUP_CONCAT(vt0.c0))) UNION ALL SELECT t0.c2, vt0.c0 FROM vt0, t0 GROUP BY t0.c2, vt0.c0 HAVING (NOT (GROUP_CONCAT(SUM(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT ALL t0.c2, vt0.c0 FROM vt0, t0 GROUP BY t0.c2, vt0.c0 HAVING ((GROUP_CONCAT(SUM(GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT vt0.c0, t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)&(t0.c0)))=((vt0.c0 IN ())));
SELECT vt0.c0, t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)&(t0.c0)))==((vt0.c0 IN ()))) WHERE ((- (CASE WHEN t0.c1 THEN vt0.c0 ELSE vt0.c0 END))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)&(t0.c0)))=((vt0.c0 IN ()))) WHERE ((NOT ((- (CASE WHEN t0.c1 THEN vt0.c0 ELSE vt0.c0 END))))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)&(t0.c0)))==((vt0.c0 IN ()))) WHERE ((((- (CASE WHEN t0.c1 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT vt0.c0, t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)&(t0.c0)))=((vt0.c0 IN ())));
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (-1724922276) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (-1724922276))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((-1724922276) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL vt0.c0, t0.c2, t0.c0, t0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c2, t0.c0, t0.c1;
SELECT vt0.c0, t0.c2, t0.c0, t0.c1 FROM t0, vt0 WHERE (((MAX(t0.c0, t0.c0)) BETWEEN (((vt0.c0)/(vt0.c0))) AND (CASE vt0.c0  WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END))) GROUP BY vt0.c0, t0.c2, t0.c0, t0.c1 UNION SELECT ALL vt0.c0, t0.c2, t0.c0, t0.c1 FROM t0, vt0 WHERE ((NOT (((MAX(t0.c0, t0.c0)) BETWEEN (((vt0.c0)/(vt0.c0))) AND (CASE vt0.c0  WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END))))) GROUP BY vt0.c0, t0.c2, t0.c0, t0.c1 UNION SELECT vt0.c0, t0.c2, t0.c0, t0.c1 FROM t0, vt0 WHERE (((((MAX(t0.c0, t0.c0)) BETWEEN (((vt0.c0)/(vt0.c0))) AND (CASE vt0.c0  WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END))) ISNULL)) GROUP BY vt0.c0, t0.c2, t0.c0, t0.c1;
SELECT ALL vt0.c0, t0.c2, t0.c0, t0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c2, t0.c0, t0.c1;
SELECT vt0.c0, t0.c1, t0.c2, t0.c0 FROM t0 CROSS JOIN vt0 ON (((((((t0.c0))<=((t0.c2))))AND(t0.c0 COLLATE RTRIM)))OR(((t0.c2)LIKE(t0.c0)))) GROUP BY vt0.c0, t0.c1, t0.c2, t0.c0;
SELECT ALL vt0.c0, t0.c1, t0.c2, t0.c0 FROM t0 CROSS JOIN vt0 ON (((((((t0.c0))<=((t0.c2))))AND(t0.c0 COLLATE RTRIM)))OR(((t0.c2)LIKE(t0.c0)))) GROUP BY vt0.c0, t0.c1, t0.c2, t0.c0 HAVING MIN(COUNT(*) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0, t0.c1, t0.c2, t0.c0 FROM t0 CROSS JOIN vt0 ON (((((((t0.c0))<=((t0.c2))))AND(t0.c0 COLLATE RTRIM)))OR(((t0.c2)LIKE(t0.c0)))) GROUP BY vt0.c0, t0.c1, t0.c2, t0.c0 HAVING (NOT (MIN(COUNT(*) COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0, t0.c1, t0.c2, t0.c0 FROM t0 CROSS JOIN vt0 ON (((((((t0.c0))<=((t0.c2))))AND(t0.c0 COLLATE RTRIM)))OR(((t0.c2)LIKE(t0.c0)))) GROUP BY vt0.c0, t0.c1, t0.c2, t0.c0 HAVING ((MIN(COUNT(*) COLLATE RTRIM)) ISNULL);
SELECT TOTAL(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) FROM vt0 ORDER BY ((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) BETWEEN (((((((((vt0.c0)OR(0x235694a8)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) AND (CAST(vt0.c0 AS REAL))) DESC  NULLS FIRST, LOWER((+ (NULL)));
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) ISNULL) AS BLOB)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST(((vt0.c0) ISNULL) AS BLOB)))) UNION ALL SELECT * FROM vt0 WHERE (((CAST(((vt0.c0) ISNULL) AS BLOB)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c0)||(((x'')/(t0.c2))));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c0)||(((x'')/(t0.c2)))) WHERE ((((((((((t0.c2)AND(vt0.c0)))OR(t0.c1)))OR(t0.c2)))AND(t0.c0)) IN ())) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c0)||(((x'')/(t0.c2)))) WHERE ((NOT ((((((((((t0.c2)AND(vt0.c0)))OR(t0.c1)))OR(t0.c2)))AND(t0.c0)) IN ())))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c0)||(((x'')/(t0.c2)))) WHERE ((((((((((((t0.c2)AND(vt0.c0)))OR(t0.c1)))OR(t0.c2)))AND(t0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c0)||(((x'')/(t0.c2))));
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((((t0.c2, t0.c0, t0.c0)) BETWEEN (((('-396409235') BETWEEN (t0.c1) AND (t0.c1)), (- (t0.c0)), (+ (t0.c1)))) AND (((t0.c2 IN ()), ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c0)), CAST(t0.c1 AS TEXT))))) GROUP BY t0.c2, t0.c1, t0.c0 UNION SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((NOT ((((t0.c2, t0.c0, t0.c0)) BETWEEN (((('-396409235') BETWEEN (t0.c1) AND (t0.c1)), (- (t0.c0)), (+ (t0.c1)))) AND (((t0.c2 IN ()), ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c0)), CAST(t0.c1 AS TEXT))))))) GROUP BY t0.c2, t0.c1, t0.c0 UNION SELECT t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((((((t0.c2, t0.c0, t0.c0)) BETWEEN (((('-396409235') BETWEEN (t0.c1) AND (t0.c1)), (- (t0.c0)), (+ (t0.c1)))) AND (((t0.c2 IN ()), ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c0)), CAST(t0.c1 AS TEXT))))) ISNULL)) GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(MAX(COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(MAX(COUNT(*))))) UNION ALL SELECT t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(MAX(COUNT(*)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) IS FALSE)) NOT NULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) IS FALSE)) NOT NULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) IS FALSE)) NOT NULL)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT t0.c1 FROM t0;
SELECT DISTINCT t0.c1 FROM t0 WHERE (((COALESCE(t0.c0, t0.c2))|(((t0.c1)>(t0.c1))))) UNION SELECT DISTINCT t0.c1 FROM t0 WHERE ((NOT (((COALESCE(t0.c0, t0.c2))|(((t0.c1)>(t0.c1))))))) UNION SELECT DISTINCT t0.c1 FROM t0 WHERE (((((COALESCE(t0.c0, t0.c2))|(((t0.c1)>(t0.c1))))) ISNULL));
SELECT DISTINCT t0.c1 FROM t0;
SELECT t0.c2, t0.c0, t0.c1 FROM vt0, t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM vt0, t0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN CAST(t0.c1 AS REAL) END) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT ALL t0.c2, t0.c0, t0.c1 FROM vt0, t0 WHERE ((NOT (CASE WHEN vt0.c0 COLLATE NOCASE THEN CAST(t0.c1 AS REAL) END))) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT ALL t0.c2, t0.c0, t0.c1 FROM vt0, t0 WHERE (((CASE WHEN vt0.c0 COLLATE NOCASE THEN CAST(t0.c1 AS REAL) END) ISNULL)) GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM vt0, t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((AVG(vt0.c0))OR(HEX(DISTINCT vt0.c0))))AND(((vt0.c0) NOT BETWEEN (TOTAL(vt0.c0)) AND (COUNT(COUNT(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((AVG(vt0.c0))OR(HEX(DISTINCT vt0.c0))))AND(((vt0.c0) NOT BETWEEN (TOTAL(vt0.c0)) AND (COUNT(COUNT(vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((AVG(vt0.c0))OR(HEX(DISTINCT vt0.c0))))AND(((vt0.c0) NOT BETWEEN (TOTAL(vt0.c0)) AND (COUNT(COUNT(vt0.c0))))))) ISNULL);
SELECT t0.c1, t0.c2, vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (((((vt0.c0)IS NOT(t0.c2))))>(((~ (t0.c1)))));
SELECT t0.c1, t0.c2, vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (((((vt0.c0)IS NOT(t0.c2))))>(((~ (t0.c1))))) WHERE (((((((((((vt0.c0) NOT NULL))AND(vt0.c0 COLLATE BINARY)))AND(CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END)))AND(((((((((t0.c0)AND(t0.c1)))AND(t0.c2)))OR(vt0.c0)))OR('-404624688')))))AND(((vt0.c0) BETWEEN (t0.c1) AND (t0.c0))))) UNION ALL SELECT ALL t0.c1, t0.c2, vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (((((vt0.c0)IS NOT(t0.c2))))>(((~ (t0.c1))))) WHERE ((NOT (((((((((((vt0.c0) NOT NULL))AND(vt0.c0 COLLATE BINARY)))AND(CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END)))AND(((((((((t0.c0)AND(t0.c1)))AND(t0.c2)))OR(vt0.c0)))OR('-404624688')))))AND(((vt0.c0) BETWEEN (t0.c1) AND (t0.c0))))))) UNION ALL SELECT ALL t0.c1, t0.c2, vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (((((vt0.c0)IS NOT(t0.c2))))>(((~ (t0.c1))))) WHERE (((((((((((((vt0.c0) NOT NULL))AND(vt0.c0 COLLATE BINARY)))AND(CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END)))AND(((((((((t0.c0)AND(t0.c1)))AND(t0.c2)))OR(vt0.c0)))OR('-404624688')))))AND(((vt0.c0) BETWEEN (t0.c1) AND (t0.c0))))) ISNULL));
SELECT t0.c1, t0.c2, vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (((((vt0.c0)IS NOT(t0.c2))))>(((~ (t0.c1)))));
SELECT DISTINCT t0.c0, t0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN ((t0.c2) BETWEEN (t0.c0) AND (t0.c1)) THEN CASE t0.c1  WHEN t0.c0 THEN vt0.c0 END ELSE t0.c2 END;
SELECT DISTINCT t0.c0, t0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN ((t0.c2) BETWEEN (t0.c0) AND (t0.c1)) THEN CASE t0.c1  WHEN t0.c0 THEN vt0.c0 END ELSE t0.c2 END WHERE (NULL) UNION SELECT DISTINCT t0.c0, t0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN ((t0.c2) BETWEEN (t0.c0) AND (t0.c1)) THEN CASE t0.c1  WHEN t0.c0 THEN vt0.c0 END ELSE t0.c2 END WHERE ((NOT (NULL))) UNION SELECT DISTINCT t0.c0, t0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN ((t0.c2) BETWEEN (t0.c0) AND (t0.c1)) THEN CASE t0.c1  WHEN t0.c0 THEN vt0.c0 END ELSE t0.c2 END WHERE (((NULL) ISNULL));
SELECT DISTINCT t0.c0, t0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN ((t0.c2) BETWEEN (t0.c0) AND (t0.c1)) THEN CASE t0.c1  WHEN t0.c0 THEN vt0.c0 END ELSE t0.c2 END;
SELECT t0.c1, t0.c0, vt0.c0, t0.c2 FROM vt0, t0 GROUP BY t0.c1, t0.c0, vt0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, vt0.c0, t0.c2 FROM vt0, t0 WHERE (((((vt0.c0)<>(t0.c2))) NOT BETWEEN ((~ (t0.c2))) AND (t0.c1 COLLATE NOCASE))) GROUP BY t0.c1, t0.c0, vt0.c0, t0.c2 UNION SELECT t0.c1, t0.c0, vt0.c0, t0.c2 FROM vt0, t0 WHERE ((NOT (((((vt0.c0)<>(t0.c2))) NOT BETWEEN ((~ (t0.c2))) AND (t0.c1 COLLATE NOCASE))))) GROUP BY t0.c1, t0.c0, vt0.c0, t0.c2 UNION SELECT ALL t0.c1, t0.c0, vt0.c0, t0.c2 FROM vt0, t0 WHERE (((((((vt0.c0)<>(t0.c2))) NOT BETWEEN ((~ (t0.c2))) AND (t0.c1 COLLATE NOCASE))) ISNULL)) GROUP BY t0.c1, t0.c0, vt0.c0, t0.c2;
SELECT t0.c1, t0.c0, vt0.c0, t0.c2 FROM vt0, t0 GROUP BY t0.c1, t0.c0, vt0.c0, t0.c2;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING MAX(NULL COLLATE BINARY) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (NOT (MAX(NULL COLLATE BINARY))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING ((MAX(NULL COLLATE BINARY)) ISNULL);
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING MAX(NULL COLLATE BINARY) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (NOT (MAX(NULL COLLATE BINARY))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING ((MAX(NULL COLLATE BINARY)) ISNULL);
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (0.9690794638002418) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (0.9690794638002418))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((0.9690794638002418) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c2 IN ()))AND(t0.c0 COLLATE RTRIM)))OR(CAST(t0.c1 AS INTEGER)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((((t0.c2 IN ()))AND(t0.c0 COLLATE RTRIM)))OR(CAST(t0.c1 AS INTEGER)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c2 IN ()))AND(t0.c0 COLLATE RTRIM)))OR(CAST(t0.c1 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c2, t0.c1, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c1, vt0.c0, t0.c0;
SELECT ALL t0.c2, t0.c1, vt0.c0, t0.c0 FROM t0, vt0 WHERE (CAST((((t0.c2, t0.c2, vt0.c0))<>((t0.c2, t0.c0, vt0.c0))) AS BLOB)) GROUP BY t0.c2, t0.c1, vt0.c0, t0.c0 UNION SELECT t0.c2, t0.c1, vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT (CAST((((t0.c2, t0.c2, vt0.c0))!=((t0.c2, t0.c0, vt0.c0))) AS BLOB)))) GROUP BY t0.c2, t0.c1, vt0.c0, t0.c0 UNION SELECT t0.c2, t0.c1, vt0.c0, t0.c0 FROM t0, vt0 WHERE (((CAST((((t0.c2, t0.c2, vt0.c0))!=((t0.c2, t0.c0, vt0.c0))) AS BLOB)) ISNULL)) GROUP BY t0.c2, t0.c1, vt0.c0, t0.c0;
SELECT t0.c2, t0.c1, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c1, vt0.c0, t0.c0;
SELECT ALL t0.c1, vt0.c0, t0.c0, t0.c2 FROM vt0, t0 GROUP BY t0.c1, vt0.c0, t0.c0, t0.c2;
SELECT ALL t0.c1, vt0.c0, t0.c0, t0.c2 FROM vt0, t0 GROUP BY t0.c1, vt0.c0, t0.c0, t0.c2 HAVING (((t0.c1)) BETWEEN ((AVG(MAX(t0.c0)))) AND ((HEX(DISTINCT t0.c0)))) UNION ALL SELECT ALL t0.c1, vt0.c0, t0.c0, t0.c2 FROM vt0, t0 GROUP BY t0.c1, vt0.c0, t0.c0, t0.c2 HAVING (NOT ((((t0.c1)) BETWEEN ((AVG(MAX(t0.c0)))) AND ((HEX(DISTINCT t0.c0)))))) UNION ALL SELECT t0.c1, vt0.c0, t0.c0, t0.c2 FROM vt0, t0 GROUP BY t0.c1, vt0.c0, t0.c0, t0.c2 HAVING (((((t0.c1)) BETWEEN ((AVG(MAX(t0.c0)))) AND ((HEX(DISTINCT t0.c0))))) ISNULL);
SELECT ALL * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE (((((x'a5a5') NOT BETWEEN (t0.c2) AND (t0.c1)))>(highlight(t0.c2, vt0.c0, t0.c1, t0.c0)))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT (((((x'a5a5') NOT BETWEEN (t0.c2) AND (t0.c1)))>(highlight(t0.c2, vt0.c0, t0.c1, t0.c0)))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((((((x'a5a5') NOT BETWEEN (t0.c2) AND (t0.c1)))>(highlight(t0.c2, vt0.c0, t0.c1, t0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (TRIM(DISTINCT (NOT (vt0.c0)))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (TRIM(DISTINCT (NOT (vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((TRIM(DISTINCT (NOT (vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0 WHERE ('M!b^ceu*') GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t0 WHERE ((NOT ('M!b^ceu*'))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t0 WHERE ((('M!b^ceu*') ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL MAX(((((((t0.c0)/(t0.c1)))OR('')))OR(CASE t0.c2  WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END))) FROM t0;
SELECT ALL t0.c2, t0.c1 FROM vt0, t0;
SELECT ALL t0.c2, t0.c1 FROM vt0, t0 WHERE (t0.c2 COLLATE BINARY) UNION ALL SELECT t0.c2, t0.c1 FROM vt0, t0 WHERE ((NOT (t0.c2 COLLATE BINARY))) UNION ALL SELECT ALL t0.c2, t0.c1 FROM vt0, t0 WHERE (((t0.c2 COLLATE BINARY) ISNULL));
SELECT ALL t0.c2, t0.c1 FROM vt0, t0;
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) NOT NULL);
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) NOT NULL) WHERE ((((t0.c1))==(('-1112541838'))) COLLATE BINARY) UNION SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) NOT NULL) WHERE ((NOT ((((t0.c1))==(('-1112541838'))) COLLATE BINARY))) UNION SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) NOT NULL) WHERE ((((((t0.c1))=(('-1112541838'))) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) NOT NULL);
SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM t0 WHERE (((((t0.c0) NOT NULL))=((+ (t0.c0))))) GROUP BY t0.c2, t0.c1 UNION SELECT ALL t0.c2, t0.c1 FROM t0 WHERE ((NOT (((((t0.c0) NOT NULL))==((+ (t0.c0))))))) GROUP BY t0.c2, t0.c1 UNION SELECT ALL t0.c2, t0.c1 FROM t0 WHERE (((((((t0.c0) NOT NULL))=((+ (t0.c0))))) ISNULL)) GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c1, vt0.c0;
SELECT t0.c2, t0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c1, vt0.c0 HAVING t0.c0 UNION ALL SELECT ALL t0.c2, t0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c1, vt0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT t0.c2, t0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c1, vt0.c0 HAVING ((t0.c0) ISNULL);
SELECT t0.c2, t0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c1, vt0.c0;
SELECT t0.c2, t0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c1, vt0.c0 HAVING t0.c0 UNION ALL SELECT ALL t0.c2, t0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c1, vt0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT t0.c2, t0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c1, vt0.c0 HAVING ((t0.c0) ISNULL);
SELECT t0.c2, t0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c1, vt0.c0;
SELECT * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE ('1') UNION ALL SELECT ALL * FROM t0, vt0 NOT INDEXED WHERE ((NOT ('1'))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((('1') ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT vt0.c0, t0.c1, t0.c0, t0.c2 FROM vt0, t0;
SELECT DISTINCT vt0.c0, t0.c1, t0.c0, t0.c2 FROM vt0, t0 WHERE (t0.c1) UNION SELECT DISTINCT vt0.c0, t0.c1, t0.c0, t0.c2 FROM vt0, t0 WHERE ((NOT (t0.c1))) UNION SELECT DISTINCT vt0.c0, t0.c1, t0.c0, t0.c2 FROM vt0, t0 WHERE (((t0.c1) ISNULL));
SELECT DISTINCT vt0.c0, t0.c1, t0.c0, t0.c2 FROM vt0, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((((t0.c1)AND(t0.c0)))OR(t0.c1)))>(((((t0.c0)OR(t0.c0)))OR(t0.c2))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((((t0.c1)AND(t0.c0)))OR(t0.c1)))>(((((t0.c0)OR(t0.c0)))OR(t0.c2))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((((t0.c1)AND(t0.c0)))OR(t0.c1)))>(((((t0.c0)OR(t0.c0)))OR(t0.c2))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0, t0.c2, t0.c1 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0, t0.c2, t0.c1;
SELECT vt0.c0, t0.c2, t0.c1 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0, t0.c2, t0.c1 HAVING TOTAL(MAX(TOTAL(SUM(MAX(t0.c2))))) UNION ALL SELECT vt0.c0, t0.c2, t0.c1 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0, t0.c2, t0.c1 HAVING (NOT (TOTAL(MAX(TOTAL(SUM(MAX(t0.c2))))))) UNION ALL SELECT vt0.c0, t0.c2, t0.c1 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0, t0.c2, t0.c1 HAVING ((TOTAL(MAX(TOTAL(SUM(MAX(t0.c2)))))) ISNULL);
SELECT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((((t0.c0)OR((~ (t0.c0)))))AND(((t0.c2) NOT NULL)))) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((NOT (((((t0.c0)OR((~ (t0.c0)))))AND(((t0.c2) NOT NULL)))))) UNION ALL SELECT t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((((((t0.c0)OR((~ (t0.c0)))))AND(((t0.c2) NOT NULL)))) ISNULL));
SELECT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0;
SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((((t0.c0) BETWEEN (t0.c1) AND (t0.c0)) IN ())) UNION SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((NOT ((((t0.c0) BETWEEN (t0.c1) AND (t0.c0)) IN ())))) UNION SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((((((t0.c0) BETWEEN (t0.c1) AND (t0.c0)) IN ())) ISNULL));
SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))<=((- (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)GLOB(vt0.c0)))<=((- (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)GLOB(vt0.c0)))<=((- (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((IFNULL(DISTINCT SUM(t0.c0), t0.c1))AND(AVG(t0.c0))))AND(COUNT(SUM(t0.c1)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((IFNULL(DISTINCT SUM(t0.c0), t0.c1))AND(AVG(t0.c0))))AND(COUNT(SUM(t0.c1)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((IFNULL(DISTINCT SUM(t0.c0), t0.c1))AND(AVG(t0.c0))))AND(COUNT(SUM(t0.c1))))) ISNULL);
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT (CAST(vt0.c0 COLLATE NOCASE AS INTEGER)))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE (((CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) ISNULL));
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE ((((t0.c0))<((t0.c1)))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT ((((t0.c0))<((t0.c1)))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((((((t0.c0))<((t0.c1)))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE NOCASE) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) NOTNULL) COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOTNULL) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING IFNULL(DISTINCT ((COUNT(*))>=(vt0.c0)), TOTAL(SUM(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (IFNULL(DISTINCT ((COUNT(*))>=(vt0.c0)), TOTAL(SUM(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((IFNULL(DISTINCT ((COUNT(*))>=(vt0.c0)), TOTAL(SUM(vt0.c0)))) ISNULL);
SELECT ALL * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE ((INSTR(vt0.c0, t0.c0) IN ())) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT ((INSTR(vt0.c0, t0.c0) IN ())))) UNION ALL SELECT * FROM vt0, t0 WHERE ((((INSTR(vt0.c0, t0.c0) IN ())) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN ((t0.c1) BETWEEN (t0.c2) AND (t0.c2)) THEN ((t0.c1) BETWEEN (t0.c2) AND (t0.c2)) ELSE (((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))) END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE WHEN ((t0.c1) BETWEEN (t0.c2) AND (t0.c2)) THEN ((t0.c1) BETWEEN (t0.c2) AND (t0.c2)) ELSE (((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))) END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN ((t0.c1) BETWEEN (t0.c2) AND (t0.c2)) THEN ((t0.c1) BETWEEN (t0.c2) AND (t0.c2)) ELSE (((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))) END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0 IN ())))<=((((vt0.c0) NOT NULL))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0 IN ())))<=((((vt0.c0) NOT NULL))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0 IN ())))<=((((vt0.c0) NOT NULL))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING t0.c2 UNION ALL SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING (NOT (t0.c2)) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING ((t0.c2) ISNULL);
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING t0.c2 UNION ALL SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING (NOT (t0.c2)) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING ((t0.c2) ISNULL);
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON (t0.c1 IN ()) COLLATE RTRIM;
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON (t0.c1 IN ()) COLLATE RTRIM WHERE (LIKELY(((t0.c0)>>(t0.c0)))) UNION ALL SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (t0.c1 IN ()) COLLATE RTRIM WHERE ((NOT (LIKELY(((t0.c0)>>(t0.c0)))))) UNION ALL SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (t0.c1 IN ()) COLLATE RTRIM WHERE (((LIKELY(((t0.c0)>>(t0.c0)))) ISNULL));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON (t0.c1 IN ()) COLLATE RTRIM;
SELECT DISTINCT t0.c0, t0.c1 FROM t0;
SELECT DISTINCT t0.c0, t0.c1 FROM t0 WHERE (((((NOT (t0.c1))))<=((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END)))) UNION SELECT DISTINCT t0.c0, t0.c1 FROM t0 WHERE ((NOT (((((NOT (t0.c1))))<=((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END)))))) UNION SELECT DISTINCT t0.c0, t0.c1 FROM t0 WHERE (((((((NOT (t0.c1))))<=((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END)))) ISNULL));
SELECT DISTINCT t0.c0, t0.c1 FROM t0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 WHERE (LIKELIHOOD(DISTINCT ((t0.c1)AND(vt0.c0)), 0.16046386305125382)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 WHERE ((NOT (LIKELIHOOD(DISTINCT ((t0.c1)AND(vt0.c0)), 0.16046386305125382)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt0, t0 WHERE (((LIKELIHOOD(DISTINCT ((t0.c1)AND(vt0.c0)), 0.16046386305125382)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM vt0 LEFT OUTER JOIN t0 ON (CAST(t0.c0 AS REAL) IN ()) GROUP BY t0.c0, t0.c1, t0.c2;
SELECT t0.c0, t0.c1, t0.c2 FROM vt0 LEFT OUTER JOIN t0 ON (CAST(t0.c0 AS REAL) IN ()) GROUP BY t0.c0, t0.c1, t0.c2 HAVING MIN(((TOTAL(t0.c2)) NOT BETWEEN (t0.c1) AND (AVG(MAX(MIN(AVG(t0.c2))))))) UNION ALL SELECT t0.c0, t0.c1, t0.c2 FROM vt0 LEFT OUTER JOIN t0 ON (CAST(t0.c0 AS REAL) IN ()) GROUP BY t0.c0, t0.c1, t0.c2 HAVING (NOT (MIN(((TOTAL(t0.c2)) NOT BETWEEN (t0.c1) AND (AVG(MAX(MIN(AVG(t0.c2))))))))) UNION ALL SELECT t0.c0, t0.c1, t0.c2 FROM vt0 LEFT OUTER JOIN t0 ON (CAST(t0.c0 AS REAL) IN ()) GROUP BY t0.c0, t0.c1, t0.c2 HAVING ((MIN(((TOTAL(t0.c2)) NOT BETWEEN (t0.c1) AND (AVG(MAX(MIN(AVG(t0.c2)))))))) ISNULL);
SELECT * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE (((((t0.c0) NOT NULL))<<(ABS(t0.c1)))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT (((((t0.c0) NOT NULL))<<(ABS(t0.c1)))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c0) NOT NULL))<<(ABS(t0.c1)))) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (json_array(vt0.c0, vt0.c0, vt0.c0, vt0.c0) COLLATE NOCASE) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (json_array(vt0.c0, vt0.c0, vt0.c0, vt0.c0) COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((json_array(vt0.c0, vt0.c0, vt0.c0, vt0.c0) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t0.c2 FROM t0, vt0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0, vt0 WHERE ((((t0.c0)) BETWEEN ((((t0.c1)=(t0.c1)))) AND (((((t0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0, vt0 WHERE ((NOT ((((t0.c0)) BETWEEN ((((t0.c1)=(t0.c1)))) AND (((((t0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0, vt0 WHERE ((((((t0.c0)) BETWEEN ((((t0.c1)==(t0.c1)))) AND (((((t0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM t0, vt0 GROUP BY t0.c2;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING MAX(TOTAL(GROUP_CONCAT(t0.c1))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (NOT (MAX(TOTAL(GROUP_CONCAT(t0.c1))))) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING ((MAX(TOTAL(GROUP_CONCAT(t0.c1)))) ISNULL);
SELECT t0.c1, t0.c0, t0.c2 FROM vt0, t0;
SELECT t0.c1, t0.c0, t0.c2 FROM vt0, t0 WHERE (t0.c1) UNION ALL SELECT t0.c1, t0.c0, t0.c2 FROM vt0, t0 WHERE ((NOT (t0.c1))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM vt0, t0 WHERE (((t0.c1) ISNULL));
SELECT t0.c1, t0.c0, t0.c2 FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (CAST(vt0.c0 AS TEXT) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((CAST(vt0.c0 AS TEXT) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0 WHERE ((((t0.c0, t0.c2, t0.c2)) BETWEEN ((t0.c1 COLLATE BINARY, t0.c2, t0.c0)) AND (((t0.c0 IN ()), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((((((((t0.c2)OR(t0.c1)))OR(NULL)))AND(0.08189223742032592)))OR(t0.c2)))))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t0 WHERE ((NOT ((((t0.c0, t0.c2, t0.c2)) BETWEEN ((t0.c1 COLLATE BINARY, t0.c2, t0.c0)) AND (((t0.c0 IN ()), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((((((((t0.c2)OR(t0.c1)))OR(NULL)))AND(0.08189223742032592)))OR(t0.c2)))))))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0 WHERE ((((((t0.c0, t0.c2, t0.c2)) BETWEEN ((t0.c1 COLLATE BINARY, t0.c2, t0.c0)) AND (((t0.c0 IN ()), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((((((((t0.c2)OR(t0.c1)))OR(NULL)))AND(0.08189223742032592)))OR(t0.c2)))))) ISNULL)) GROUP BY t0.c1;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT vt0.c0, t0.c2, t0.c0, t0.c1 FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c0)>(vt0.c0)))LIKE(((t0.c2) IS FALSE))) GROUP BY vt0.c0, t0.c2, t0.c0, t0.c1;
SELECT ALL vt0.c0, t0.c2, t0.c0, t0.c1 FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c0)>(vt0.c0)))LIKE(((t0.c2) IS FALSE))) GROUP BY vt0.c0, t0.c2, t0.c0, t0.c1 HAVING MAX(AVG(MIN(t0.c0))) UNION ALL SELECT ALL vt0.c0, t0.c2, t0.c0, t0.c1 FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c0)>(vt0.c0)))LIKE(((t0.c2) IS FALSE))) GROUP BY vt0.c0, t0.c2, t0.c0, t0.c1 HAVING (NOT (MAX(AVG(MIN(t0.c0))))) UNION ALL SELECT ALL vt0.c0, t0.c2, t0.c0, t0.c1 FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c0)>(vt0.c0)))LIKE(((t0.c2) IS FALSE))) GROUP BY vt0.c0, t0.c2, t0.c0, t0.c1 HAVING ((MAX(AVG(MIN(t0.c0)))) ISNULL);
SELECT ALL MIN(x'' COLLATE NOCASE) FROM t0;
SELECT ALL * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c0, t0.c2, vt0.c0)) BETWEEN ((t0.c1, t0.c1, t0.c0)) AND ((t0.c0, t0.c1, t0.c2))) IN ())) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT (((((vt0.c0, t0.c2, vt0.c0)) BETWEEN ((t0.c1, t0.c1, t0.c0)) AND ((t0.c0, t0.c1, t0.c2))) IN ())))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((((((vt0.c0, t0.c2, vt0.c0)) BETWEEN ((t0.c1, t0.c1, t0.c0)) AND ((t0.c0, t0.c1, t0.c2))) IN ())) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ('-475376868') UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ('-475376868'))) UNION SELECT DISTINCT * FROM vt0 WHERE ((('-475376868') ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((NOT ((~ (t0.c0))))) GROUP BY t0.c1, t0.c2, t0.c0 UNION SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((NOT ((NOT ((~ (t0.c0))))))) GROUP BY t0.c1, t0.c2, t0.c0 UNION SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((((NOT ((~ (t0.c0))))) ISNULL)) GROUP BY t0.c1, t0.c2, t0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING TRIM(DISTINCT ((COUNT(*)) ISNULL)) UNION ALL SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (TRIM(DISTINCT ((COUNT(*)) ISNULL)))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((TRIM(DISTINCT ((COUNT(*)) ISNULL))) ISNULL);
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING TRIM(DISTINCT ((COUNT(*)) ISNULL)) UNION ALL SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (TRIM(DISTINCT ((COUNT(*)) ISNULL)))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((TRIM(DISTINCT ((COUNT(*)) ISNULL))) ISNULL);
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (((vt0.c0)!=(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (((vt0.c0)!=(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (((vt0.c0)!=(vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0)!=(t0.c0))))<=((CAST(t0.c2 AS BLOB))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((((t0.c0)<>(t0.c0))))<=((CAST(t0.c2 AS BLOB))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c0)!=(t0.c0))))<=((CAST(t0.c2 AS BLOB))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 WHERE (((((((vt0.c0) BETWEEN (t0.c0) AND (t0.c2)))AND((vt0.c0 IN ()))))OR(((t0.c1)OR(NULL))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 WHERE ((NOT (((((((vt0.c0) BETWEEN (t0.c0) AND (t0.c2)))AND((vt0.c0 IN ()))))OR(((t0.c1)OR(NULL))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 WHERE (((((((((vt0.c0) BETWEEN (t0.c0) AND (t0.c2)))AND((vt0.c0 IN ()))))OR(((t0.c1)OR(NULL))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING ((((TOTAL(COUNT(*)))AND(((t0.c1)<=(t0.c1)))))OR(MAX(vt0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (NOT (((((TOTAL(COUNT(*)))AND(((t0.c1)<=(t0.c1)))))OR(MAX(vt0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING ((((((TOTAL(COUNT(*)))AND(((t0.c1)<=(t0.c1)))))OR(MAX(vt0.c0)))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (((((NULL)>>(t0.c0)))|(t0.c0 COLLATE BINARY))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((NULL)>>(t0.c0)))|(t0.c0 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((NULL)>>(t0.c0)))|(t0.c0 COLLATE BINARY))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0;
SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0 WHERE (CASE WHEN ((t0.c0)IS(t0.c0)) THEN t0.c0 END) UNION SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((NOT (CASE WHEN ((t0.c0)IS(t0.c0)) THEN t0.c0 END))) UNION SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0 WHERE (((CASE WHEN ((t0.c0)IS(t0.c0)) THEN t0.c0 END) ISNULL));
SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0;
SELECT ALL t0.c0, t0.c2, t0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, t0.c2, t0.c1, vt0.c0;
SELECT ALL t0.c0, t0.c2, t0.c1, vt0.c0 FROM t0, vt0 WHERE (t0.c0) GROUP BY t0.c0, t0.c2, t0.c1, vt0.c0 UNION SELECT ALL t0.c0, t0.c2, t0.c1, vt0.c0 FROM t0, vt0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0, t0.c2, t0.c1, vt0.c0 UNION SELECT t0.c0, t0.c2, t0.c1, vt0.c0 FROM t0, vt0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0, t0.c2, t0.c1, vt0.c0;
SELECT ALL t0.c0, t0.c2, t0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, t0.c2, t0.c1, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(((MIN(vt0.c0)) IS TRUE)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(((MIN(vt0.c0)) IS TRUE)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(((MIN(vt0.c0)) IS TRUE))) ISNULL);
SELECT ALL vt0.c0, t0.c2, t0.c1 FROM vt0, t0;
SELECT ALL vt0.c0, t0.c2, t0.c1 FROM vt0, t0 WHERE (CASE (t0.c2 IN ())  WHEN (((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0))) THEN LIKELY(DISTINCT vt0.c0) END) UNION ALL SELECT ALL vt0.c0, t0.c2, t0.c1 FROM vt0, t0 WHERE ((NOT (CASE (t0.c2 IN ())  WHEN (((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0))) THEN LIKELY(DISTINCT vt0.c0) END))) UNION ALL SELECT vt0.c0, t0.c2, t0.c1 FROM vt0, t0 WHERE (((CASE (t0.c2 IN ())  WHEN (((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0))) THEN LIKELY(DISTINCT vt0.c0) END) ISNULL));
SELECT ALL vt0.c0, t0.c2, t0.c1 FROM vt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0)OR(t0.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c0)OR(t0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)OR(t0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt0.c0, t0.c0, t0.c2, t0.c1 FROM t0 CROSS JOIN vt0 ON ((t0.c0) NOT NULL) COLLATE RTRIM GROUP BY vt0.c0, t0.c0, t0.c2, t0.c1;
SELECT ALL vt0.c0, t0.c0, t0.c2, t0.c1 FROM t0 CROSS JOIN vt0 ON ((t0.c0) NOT NULL) COLLATE RTRIM WHERE ((((((vt0.c0))<=((vt0.c0)))) NOT BETWEEN (((t0.c0)>(t0.c0))) AND (((t0.c0)AND(t0.c2))))) GROUP BY vt0.c0, t0.c0, t0.c2, t0.c1 UNION SELECT ALL vt0.c0, t0.c0, t0.c2, t0.c1 FROM t0 CROSS JOIN vt0 ON ((t0.c0) NOT NULL) COLLATE RTRIM WHERE ((NOT ((((((vt0.c0))<=((vt0.c0)))) NOT BETWEEN (((t0.c0)>(t0.c0))) AND (((t0.c0)AND(t0.c2))))))) GROUP BY vt0.c0, t0.c0, t0.c2, t0.c1 UNION SELECT ALL vt0.c0, t0.c0, t0.c2, t0.c1 FROM t0 CROSS JOIN vt0 ON ((t0.c0) NOT NULL) COLLATE RTRIM WHERE ((((((((vt0.c0))<=((vt0.c0)))) NOT BETWEEN (((t0.c0)>(t0.c0))) AND (((t0.c0)AND(t0.c2))))) ISNULL)) GROUP BY vt0.c0, t0.c0, t0.c2, t0.c1;
SELECT ALL vt0.c0, t0.c0, t0.c2, t0.c1 FROM t0 CROSS JOIN vt0 ON ((t0.c0) NOT NULL) COLLATE RTRIM GROUP BY vt0.c0, t0.c0, t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING MIN(SUM(MAX(t0.c1))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING (NOT (MIN(SUM(MAX(t0.c1))))) UNION ALL SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING ((MIN(SUM(MAX(t0.c1)))) ISNULL);
SELECT * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE (CAST(((vt0.c0) NOT BETWEEN (t0.c1) AND (vt0.c0)) AS INTEGER)) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT (CAST(((vt0.c0) NOT BETWEEN (t0.c1) AND (vt0.c0)) AS INTEGER)))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((CAST(((vt0.c0) NOT BETWEEN (t0.c1) AND (vt0.c0)) AS INTEGER)) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT vt0.c0, t0.c1 FROM vt0, t0;
SELECT DISTINCT vt0.c0, t0.c1 FROM vt0, t0 WHERE (((((((((-1.590454959E9)OR(((t0.c2) IS FALSE))))AND((((t0.c1, t0.c1, t0.c2))<((t0.c0, vt0.c0, -1.080482884E9))))))AND(CASE WHEN t0.c0 THEN t0.c2 END)))OR(((t0.c1)<(t0.c2))))) UNION SELECT DISTINCT vt0.c0, t0.c1 FROM vt0, t0 WHERE ((NOT (((((((((-1.590454959E9)OR(((t0.c2) IS FALSE))))AND((((t0.c1, t0.c1, t0.c2))<((t0.c0, vt0.c0, -1.080482884E9))))))AND(CASE WHEN t0.c0 THEN t0.c2 END)))OR(((t0.c1)<(t0.c2))))))) UNION SELECT DISTINCT vt0.c0, t0.c1 FROM vt0, t0 WHERE (((((((((((-1.590454959E9)OR(((t0.c2) IS FALSE))))AND((((t0.c1, t0.c1, t0.c2))<((t0.c0, vt0.c0, -1.080482884E9))))))AND(CASE WHEN t0.c0 THEN t0.c2 END)))OR(((t0.c1)<(t0.c2))))) ISNULL));
SELECT DISTINCT vt0.c0, t0.c1 FROM vt0, t0;
SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (x'') GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (x''))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((x'') ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT ALL vt0.c0, t0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c1, t0.c0;
SELECT ALL vt0.c0, t0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c1, t0.c0 HAVING COUNT(((SUM(MAX(COUNT(*)))) NOT NULL)) UNION ALL SELECT vt0.c0, t0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c1, t0.c0 HAVING (NOT (COUNT(((SUM(MAX(COUNT(*)))) NOT NULL)))) UNION ALL SELECT ALL vt0.c0, t0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c1, t0.c0 HAVING ((COUNT(((SUM(MAX(COUNT(*)))) NOT NULL))) ISNULL);
SELECT t0.c1, t0.c2 FROM t0;
SELECT t0.c1, t0.c2 FROM t0 WHERE (CAST(((t0.c1)OR(t0.c2)) AS TEXT)) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0 WHERE ((NOT (CAST(((t0.c1)OR(t0.c2)) AS TEXT)))) UNION ALL SELECT t0.c1, t0.c2 FROM t0 WHERE (((CAST(((t0.c1)OR(t0.c2)) AS TEXT)) ISNULL));
SELECT t0.c1, t0.c2 FROM t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (CASE vt0.c0  WHEN x'086e' THEN vt0.c0 ELSE vt0.c0 END, (((0.924446133727669)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE vt0.c0  WHEN x'' THEN vt0.c0 END))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (CASE vt0.c0  WHEN x'086e' THEN vt0.c0 ELSE vt0.c0 END, (((0.924446133727669)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE vt0.c0  WHEN x'' THEN vt0.c0 END))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (CASE vt0.c0  WHEN x'086e' THEN vt0.c0 ELSE vt0.c0 END, (((0.924446133727669)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE vt0.c0  WHEN x'' THEN vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE vt0.c0 COLLATE NOCASE  WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE vt0.c0 COLLATE NOCASE  WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING AVG(MIN(t0.c2)) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING (NOT (AVG(MIN(t0.c2)))) UNION ALL SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING ((AVG(MIN(t0.c2))) ISNULL);
SELECT TOTAL((- (CAST('704561436' AS NUMERIC)))) FROM vt0, t0;
SELECT t0.c2 FROM t0;
SELECT t0.c2 FROM t0 WHERE (CASE CASE WHEN t0.c0 THEN t0.c0 END  WHEN '1783114065' THEN SUBSTR(t0.c0, t0.c1) END) UNION ALL SELECT ALL t0.c2 FROM t0 WHERE ((NOT (CASE CASE WHEN t0.c0 THEN t0.c0 END  WHEN '1783114065' THEN SUBSTR(t0.c0, t0.c1) END))) UNION ALL SELECT t0.c2 FROM t0 WHERE (((CASE CASE WHEN t0.c0 THEN t0.c0 END  WHEN '1783114065' THEN SUBSTR(t0.c0, t0.c1) END) ISNULL));
SELECT t0.c2 FROM t0;
SELECT DISTINCT t0.c0, t0.c1 FROM vt0, t0;
SELECT DISTINCT t0.c0, t0.c1 FROM vt0, t0 WHERE (vt0.c0) UNION SELECT DISTINCT t0.c0, t0.c1 FROM vt0, t0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT t0.c0, t0.c1 FROM vt0, t0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT t0.c0, t0.c1 FROM vt0, t0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) IS FALSE))IS NOT(x'ab53'))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) IS FALSE))IS NOT(x'ab53'))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) IS FALSE))IS NOT(x'ab53'))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0, vt0.c0, t0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c1;
SELECT ALL t0.c0, vt0.c0, t0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c1 HAVING CAST(GROUP_CONCAT(t0.c2) AS BLOB) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c1 HAVING (NOT (CAST(GROUP_CONCAT(t0.c2) AS BLOB))) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c1 HAVING ((CAST(GROUP_CONCAT(t0.c2) AS BLOB)) ISNULL);
SELECT t0.c0, vt0.c0, t0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c1;
SELECT ALL t0.c0, vt0.c0, t0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c1 HAVING CAST(GROUP_CONCAT(t0.c2) AS BLOB) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c1 HAVING (NOT (CAST(GROUP_CONCAT(t0.c2) AS BLOB))) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c1 HAVING ((CAST(GROUP_CONCAT(t0.c2) AS BLOB)) ISNULL);
SELECT t0.c0, vt0.c0, t0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c1;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((- (x''))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND ((NOT (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((- (x''))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND ((NOT (vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((- (x''))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND ((NOT (vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST('x3' AS TEXT)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST('x3' AS TEXT)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST('x3' AS TEXT)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0 WHERE (((((((((((t0.c2)!=(t0.c0)))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE 704561436 END)))OR(0.3523621130530038)))OR((((t0.c2, t0.c1, t0.c1))>((t0.c1, t0.c1, t0.c1))))))OR(t0.c2 COLLATE BINARY))) GROUP BY t0.c2, t0.c1 UNION SELECT t0.c2, t0.c1 FROM t0 WHERE ((NOT (((((((((((t0.c2)!=(t0.c0)))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE 704561436 END)))OR(0.3523621130530038)))OR((((t0.c2, t0.c1, t0.c1))>((t0.c1, t0.c1, t0.c1))))))OR(t0.c2 COLLATE BINARY))))) GROUP BY t0.c2, t0.c1 UNION SELECT ALL t0.c2, t0.c1 FROM t0 WHERE (((((((((((((t0.c2)!=(t0.c0)))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE 704561436 END)))OR(0.3523621130530038)))OR((((t0.c2, t0.c1, t0.c1))>((t0.c1, t0.c1, t0.c1))))))OR(t0.c2 COLLATE BINARY))) ISNULL)) GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING COALESCE(DISTINCT t0.c1, 325857863) COLLATE BINARY UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING (NOT (COALESCE(DISTINCT t0.c1, 325857863) COLLATE BINARY)) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING ((COALESCE(DISTINCT t0.c1, 325857863) COLLATE BINARY) ISNULL);
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING COALESCE(DISTINCT t0.c1, 325857863) COLLATE BINARY UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING (NOT (COALESCE(DISTINCT t0.c1, 325857863) COLLATE BINARY)) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING ((COALESCE(DISTINCT t0.c1, 325857863) COLLATE BINARY) ISNULL);
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT ALL MIN(t0.c1) FROM t0, vt0 ORDER BY ((t0.c1)||((NOT (t0.c0)))) ASC, ((vt0.c0) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))) AND ((t0.c2 IN ())))  NULLS LAST, (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE ((((t0.c0 IN ()))IS NOT(((t0.c0)<(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT ((((t0.c0 IN ()))IS NOT(((t0.c0)<(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c0 IN ()))IS NOT(((t0.c0)<(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE (((vt0.c0, 2120660514, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))  WHEN ((vt0.c0)<<('-1299228971')) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)<<(x'458f')) THEN ((vt0.c0)>(vt0.c0)) WHEN ((vt0.c0)>=(vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE (((vt0.c0, 2120660514, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))  WHEN ((vt0.c0)<<('-1299228971')) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)<<(x'458f')) THEN ((vt0.c0)>(vt0.c0)) WHEN ((vt0.c0)>=(vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE (((vt0.c0, 2120660514, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))  WHEN ((vt0.c0)<<('-1299228971')) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)<<(x'458f')) THEN ((vt0.c0)>(vt0.c0)) WHEN ((vt0.c0)>=(vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING COUNT(*) UNION ALL SELECT t0.c1 FROM t0 NOT INDEXED GROUP BY t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING COUNT(*) UNION ALL SELECT t0.c1 FROM t0 NOT INDEXED GROUP BY t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((((((t0.c1))>(('2120660514')))) NOT BETWEEN ((- (t0.c2))) AND (TYPEOF(t0.c1)))) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((NOT ((((((t0.c1))>(('2120660514')))) NOT BETWEEN ((- (t0.c2))) AND (TYPEOF(t0.c1)))))) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((((((((t0.c1))>(('2120660514')))) NOT BETWEEN ((- (t0.c2))) AND (TYPEOF(t0.c1)))) ISNULL));
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((~ (vt0.c0)) IN ())) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((~ (vt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((~ (vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 WHERE (ABS(((NULL) ISNULL))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0 WHERE ((NOT (ABS(((NULL) ISNULL))))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0 WHERE (((ABS(((NULL) ISNULL))) ISNULL)) GROUP BY t0.c1;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT t0.c0, t0.c1, vt0.c0, t0.c2 FROM vt0 CROSS JOIN t0 ON ((TRIM(DISTINCT vt0.c0, t0.c0)) BETWEEN (t0.c1 COLLATE NOCASE) AND (CASE WHEN vt0.c0 THEN t0.c1 END)) GROUP BY t0.c0, t0.c1, vt0.c0, t0.c2;
SELECT ALL t0.c0, t0.c1, vt0.c0, t0.c2 FROM vt0 CROSS JOIN t0 ON ((TRIM(DISTINCT vt0.c0, t0.c0)) BETWEEN (t0.c1 COLLATE NOCASE) AND (CASE WHEN vt0.c0 THEN t0.c1 END)) GROUP BY t0.c0, t0.c1, vt0.c0, t0.c2 HAVING (((MAX(t0.c0)) NOT BETWEEN (t0.c0) AND (MAX(t0.c1))) IN ()) UNION ALL SELECT ALL t0.c0, t0.c1, vt0.c0, t0.c2 FROM vt0 CROSS JOIN t0 ON ((TRIM(DISTINCT vt0.c0, t0.c0)) BETWEEN (t0.c1 COLLATE NOCASE) AND (CASE WHEN vt0.c0 THEN t0.c1 END)) GROUP BY t0.c0, t0.c1, vt0.c0, t0.c2 HAVING (NOT ((((MAX(t0.c0)) NOT BETWEEN (t0.c0) AND (MAX(t0.c1))) IN ()))) UNION ALL SELECT ALL t0.c0, t0.c1, vt0.c0, t0.c2 FROM vt0 CROSS JOIN t0 ON ((TRIM(DISTINCT vt0.c0, t0.c0)) BETWEEN (t0.c1 COLLATE NOCASE) AND (CASE WHEN vt0.c0 THEN t0.c1 END)) GROUP BY t0.c0, t0.c1, vt0.c0, t0.c2 HAVING (((((MAX(t0.c0)) NOT BETWEEN (t0.c0) AND (MAX(t0.c1))) IN ())) ISNULL);
SELECT t0.c0, t0.c1, vt0.c0, t0.c2 FROM vt0 CROSS JOIN t0 ON ((TRIM(DISTINCT vt0.c0, t0.c0)) BETWEEN (t0.c1 COLLATE NOCASE) AND (CASE WHEN vt0.c0 THEN t0.c1 END)) GROUP BY t0.c0, t0.c1, vt0.c0, t0.c2;
SELECT ALL t0.c0, t0.c1, vt0.c0, t0.c2 FROM vt0 CROSS JOIN t0 ON ((TRIM(DISTINCT vt0.c0, t0.c0)) BETWEEN (t0.c1 COLLATE NOCASE) AND (CASE WHEN vt0.c0 THEN t0.c1 END)) GROUP BY t0.c0, t0.c1, vt0.c0, t0.c2 HAVING (((MAX(t0.c0)) NOT BETWEEN (t0.c0) AND (MAX(t0.c1))) IN ()) UNION ALL SELECT ALL t0.c0, t0.c1, vt0.c0, t0.c2 FROM vt0 CROSS JOIN t0 ON ((TRIM(DISTINCT vt0.c0, t0.c0)) BETWEEN (t0.c1 COLLATE NOCASE) AND (CASE WHEN vt0.c0 THEN t0.c1 END)) GROUP BY t0.c0, t0.c1, vt0.c0, t0.c2 HAVING (NOT ((((MAX(t0.c0)) NOT BETWEEN (t0.c0) AND (MAX(t0.c1))) IN ()))) UNION ALL SELECT ALL t0.c0, t0.c1, vt0.c0, t0.c2 FROM vt0 CROSS JOIN t0 ON ((TRIM(DISTINCT vt0.c0, t0.c0)) BETWEEN (t0.c1 COLLATE NOCASE) AND (CASE WHEN vt0.c0 THEN t0.c1 END)) GROUP BY t0.c0, t0.c1, vt0.c0, t0.c2 HAVING (((((MAX(t0.c0)) NOT BETWEEN (t0.c0) AND (MAX(t0.c1))) IN ())) ISNULL);
SELECT t0.c0, t0.c1, vt0.c0, t0.c2 FROM vt0 CROSS JOIN t0 ON ((TRIM(DISTINCT vt0.c0, t0.c0)) BETWEEN (t0.c1 COLLATE NOCASE) AND (CASE WHEN vt0.c0 THEN t0.c1 END)) GROUP BY t0.c0, t0.c1, vt0.c0, t0.c2;
SELECT * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE ((((((vt0.c0, t0.c2, t0.c2))<=((t0.c1, t0.c2, 0.9313364846217701)))) ISNULL)) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT ((((((vt0.c0, t0.c2, t0.c2))<=((t0.c1, t0.c2, 0.9313364846217701)))) ISNULL)))) UNION ALL SELECT * FROM t0, vt0 WHERE ((((((((vt0.c0, t0.c2, t0.c2))<=((t0.c1, t0.c2, 0.9313364846217701)))) ISNULL)) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT t0.c2, t0.c0, vt0.c0 FROM t0, vt0;
SELECT DISTINCT t0.c2, t0.c0, vt0.c0 FROM t0, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT t0.c2, t0.c0, vt0.c0 FROM t0, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT t0.c2, t0.c0, vt0.c0 FROM t0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT t0.c2, t0.c0, vt0.c0 FROM t0, vt0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 WHERE (t0.c2) GROUP BY t0.c2, t0.c1, t0.c0 UNION SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((NOT (t0.c2))) GROUP BY t0.c2, t0.c1, t0.c0 UNION SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 WHERE (((t0.c2) ISNULL)) GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING TOTAL(MAX(MIN(t0.c2))) UNION ALL SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING (NOT (TOTAL(MAX(MIN(t0.c2))))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING ((TOTAL(MAX(MIN(t0.c2)))) ISNULL);
SELECT vt0.c0, t0.c0, t0.c2 FROM vt0 NATURAL JOIN t0;
SELECT ALL vt0.c0, t0.c0, t0.c2 FROM vt0 NATURAL JOIN t0 WHERE ((((x'59ba' IN ()))>>(((t0.c2) ISNULL)))) UNION ALL SELECT vt0.c0, t0.c0, t0.c2 FROM vt0 NATURAL JOIN t0 WHERE ((NOT ((((x'59ba' IN ()))>>(((t0.c2) ISNULL)))))) UNION ALL SELECT ALL vt0.c0, t0.c0, t0.c2 FROM vt0 NATURAL JOIN t0 WHERE ((((((x'59ba' IN ()))>>(((t0.c2) ISNULL)))) ISNULL));
SELECT vt0.c0, t0.c0, t0.c2 FROM vt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)OR(x'2b65'))) NOTNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)OR(x'2b65'))) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)OR(x'2b65'))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0 WHERE ((~ (CASE t0.c0  WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END))) GROUP BY t0.c0, t0.c2 UNION SELECT ALL t0.c0, t0.c2 FROM t0 WHERE ((NOT ((~ (CASE t0.c0  WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END))))) GROUP BY t0.c0, t0.c2 UNION SELECT ALL t0.c0, t0.c2 FROM t0 WHERE ((((~ (CASE t0.c0  WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END))) ISNULL)) GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT t0.c1, t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((t0.c1) NOT NULL) COLLATE RTRIM GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((t0.c1) NOT NULL) COLLATE RTRIM GROUP BY t0.c1, t0.c0 HAVING TOTAL((- (t0.c0))) UNION ALL SELECT t0.c1, t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((t0.c1) NOT NULL) COLLATE RTRIM GROUP BY t0.c1, t0.c0 HAVING (NOT (TOTAL((- (t0.c0))))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((t0.c1) NOT NULL) COLLATE RTRIM GROUP BY t0.c1, t0.c0 HAVING ((TOTAL((- (t0.c0)))) ISNULL);
SELECT t0.c1, t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((t0.c1) NOT NULL) COLLATE RTRIM GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((t0.c1) NOT NULL) COLLATE RTRIM GROUP BY t0.c1, t0.c0 HAVING TOTAL((- (t0.c0))) UNION ALL SELECT t0.c1, t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((t0.c1) NOT NULL) COLLATE RTRIM GROUP BY t0.c1, t0.c0 HAVING (NOT (TOTAL((- (t0.c0))))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((t0.c1) NOT NULL) COLLATE RTRIM GROUP BY t0.c1, t0.c0 HAVING ((TOTAL((- (t0.c0)))) ISNULL);
SELECT t0.c1, t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((t0.c1) NOT NULL) COLLATE RTRIM GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1 FROM t0, vt0;
SELECT ALL t0.c1 FROM t0, vt0 WHERE (((CAST(NULL AS INTEGER)) NOTNULL)) UNION ALL SELECT t0.c1 FROM t0, vt0 WHERE ((NOT (((CAST(NULL AS INTEGER)) NOTNULL)))) UNION ALL SELECT t0.c1 FROM t0, vt0 WHERE (((((CAST(NULL AS INTEGER)) NOTNULL)) ISNULL));
SELECT ALL t0.c1 FROM t0, vt0;
SELECT DISTINCT t0.c0, t0.c1 FROM t0;
SELECT DISTINCT t0.c0, t0.c1 FROM t0 WHERE (((CASE t0.c2  WHEN t0.c1 THEN t0.c0 END) ISNULL)) UNION SELECT DISTINCT t0.c0, t0.c1 FROM t0 WHERE ((NOT (((CASE t0.c2  WHEN t0.c1 THEN t0.c0 END) ISNULL)))) UNION SELECT DISTINCT t0.c0, t0.c1 FROM t0 WHERE (((((CASE t0.c2  WHEN t0.c1 THEN t0.c0 END) ISNULL)) ISNULL));
SELECT DISTINCT t0.c0, t0.c1 FROM t0;
SELECT vt0.c0, t0.c2 FROM vt0, t0 GROUP BY vt0.c0, t0.c2;
SELECT vt0.c0, t0.c2 FROM vt0, t0 WHERE (CASE WHEN (vt0.c0 IN (vt0.c0)) THEN ((((t0.c1)AND(t0.c0)))AND(t0.c0)) END) GROUP BY vt0.c0, t0.c2 UNION SELECT vt0.c0, t0.c2 FROM vt0, t0 WHERE ((NOT (CASE WHEN (vt0.c0 IN (vt0.c0)) THEN ((((t0.c1)AND(t0.c0)))AND(t0.c0)) END))) GROUP BY vt0.c0, t0.c2 UNION SELECT ALL vt0.c0, t0.c2 FROM vt0, t0 WHERE (((CASE WHEN (vt0.c0 IN (vt0.c0)) THEN ((((t0.c1)AND(t0.c0)))AND(t0.c0)) END) ISNULL)) GROUP BY vt0.c0, t0.c2;
SELECT vt0.c0, t0.c2 FROM vt0, t0 GROUP BY vt0.c0, t0.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS REAL) COLLATE RTRIM) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS REAL) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL) COLLATE RTRIM) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT t0.c1 FROM t0;
SELECT DISTINCT t0.c1 FROM t0 WHERE (CASE ((t0.c1)<(t0.c0))  WHEN ((t0.c1) BETWEEN (t0.c1) AND (t0.c2)) THEN x'' END) UNION SELECT DISTINCT t0.c1 FROM t0 WHERE ((NOT (CASE ((t0.c1)<(t0.c0))  WHEN ((t0.c1) BETWEEN (t0.c1) AND (t0.c2)) THEN x'' END))) UNION SELECT DISTINCT t0.c1 FROM t0 WHERE (((CASE ((t0.c1)<(t0.c0))  WHEN ((t0.c1) BETWEEN (t0.c1) AND (t0.c2)) THEN x'' END) ISNULL));
SELECT DISTINCT t0.c1 FROM t0;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((t0.c0 COLLATE NOCASE IN ())) GROUP BY t0.c0, t0.c2, t0.c1 UNION SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((NOT ((t0.c0 COLLATE NOCASE IN ())))) GROUP BY t0.c0, t0.c2, t0.c1 UNION SELECT t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((((t0.c0 COLLATE NOCASE IN ())) ISNULL)) GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((SUM(GROUP_CONCAT(vt0.c0)))) NOT BETWEEN ((MIN(SUM(SUM(vt0.c0))))) AND ((GROUP_CONCAT(NULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((SUM(GROUP_CONCAT(vt0.c0)))) NOT BETWEEN ((MIN(SUM(SUM(vt0.c0))))) AND ((GROUP_CONCAT(NULL)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((SUM(GROUP_CONCAT(vt0.c0)))) NOT BETWEEN ((MIN(SUM(SUM(vt0.c0))))) AND ((GROUP_CONCAT(NULL))))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (t0.c0) UNION ALL SELECT * FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON (((((t0.c1))<=((t0.c2))))IS NOT(t0.c2));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON (((((t0.c1))<=((t0.c2))))IS NOT(t0.c2)) WHERE ((+ (CASE WHEN t0.c1 THEN t0.c2 ELSE vt0.c0 END))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON (((((t0.c1))<=((t0.c2))))IS NOT(t0.c2)) WHERE ((NOT ((+ (CASE WHEN t0.c1 THEN t0.c2 ELSE vt0.c0 END))))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON (((((t0.c1))<=((t0.c2))))IS NOT(t0.c2)) WHERE ((((+ (CASE WHEN t0.c1 THEN t0.c2 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON (((((t0.c1))<=((t0.c2))))IS NOT(t0.c2));
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 WHERE (CASE WHEN ('674577006' IN ()) THEN CAST(t0.c0 AS NUMERIC) ELSE t0.c1 END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt0 WHERE ((NOT (CASE WHEN ('674577006' IN ()) THEN CAST(t0.c0 AS NUMERIC) ELSE t0.c1 END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt0 WHERE (((CASE WHEN ('674577006' IN ()) THEN CAST(t0.c0 AS NUMERIC) ELSE t0.c1 END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING ((((COUNT(*))AND(((((MIN(t0.c2))OR(TOTAL(MAX(t0.c1)))))OR(GROUP_CONCAT(t0.c0))))))OR(MIN(COUNT(t0.c0)))) UNION ALL SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING (NOT (((((COUNT(*))AND(((((MIN(t0.c2))OR(TOTAL(MAX(t0.c1)))))OR(GROUP_CONCAT(t0.c0))))))OR(MIN(COUNT(t0.c0)))))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING ((((((COUNT(*))AND(((((MIN(t0.c2))OR(TOTAL(MAX(t0.c1)))))OR(GROUP_CONCAT(t0.c0))))))OR(MIN(COUNT(t0.c0))))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((((t0.c0) IS TRUE))&((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((t0.c0) IS TRUE))&((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((t0.c0) IS TRUE))&((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (0.08460509916136205) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (0.08460509916136205))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((0.08460509916136205) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT ALL vt0.c0, t0.c2, t0.c1 FROM t0 RIGHT OUTER JOIN vt0 ON NULL GROUP BY vt0.c0, t0.c2, t0.c1;
SELECT ALL vt0.c0, t0.c2, t0.c1 FROM t0 RIGHT OUTER JOIN vt0 ON NULL WHERE (((t0.c2)>(t0.c2)) COLLATE RTRIM) GROUP BY vt0.c0, t0.c2, t0.c1 UNION SELECT ALL vt0.c0, t0.c2, t0.c1 FROM t0 NOT INDEXED RIGHT OUTER JOIN vt0 ON NULL WHERE ((NOT (((t0.c2)>(t0.c2)) COLLATE RTRIM))) GROUP BY vt0.c0, t0.c2, t0.c1 UNION SELECT vt0.c0, t0.c2, t0.c1 FROM t0 RIGHT OUTER JOIN vt0 ON NULL WHERE (((((t0.c2)>(t0.c2)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0, t0.c2, t0.c1;
SELECT ALL vt0.c0, t0.c2, t0.c1 FROM t0 RIGHT OUTER JOIN vt0 ON NULL GROUP BY vt0.c0, t0.c2, t0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (TOTAL(vt0.c0) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((TOTAL(vt0.c0) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((TOTAL(vt0.c0) IN ())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (TOTAL(vt0.c0) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((TOTAL(vt0.c0) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((TOTAL(vt0.c0) IN ())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c1, t0.c0 FROM t0;
SELECT ALL t0.c1, t0.c0 FROM t0 WHERE (t0.c2) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 WHERE ((NOT (t0.c2))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 WHERE (((t0.c2) ISNULL));
SELECT t0.c1, t0.c0 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c2) IS TRUE)))>((((t0.c0) NOTNULL))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((((t0.c2) IS TRUE)))>((((t0.c0) NOTNULL))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c2) IS TRUE)))>((((t0.c0) NOTNULL))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0, t0.c2, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c2, t0.c0;
SELECT vt0.c0, t0.c2, t0.c0 FROM vt0, t0 WHERE (CAST(((t0.c1)+(t0.c0)) AS TEXT)) GROUP BY vt0.c0, t0.c2, t0.c0 UNION SELECT ALL vt0.c0, t0.c2, t0.c0 FROM vt0, t0 WHERE ((NOT (CAST(((t0.c1)+(t0.c0)) AS TEXT)))) GROUP BY vt0.c0, t0.c2, t0.c0 UNION SELECT vt0.c0, t0.c2, t0.c0 FROM vt0, t0 WHERE (((CAST(((t0.c1)+(t0.c0)) AS TEXT)) ISNULL)) GROUP BY vt0.c0, t0.c2, t0.c0;
SELECT vt0.c0, t0.c2, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c2, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING AVG(SUM(MAX(MAX('I_/u-wy')))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (AVG(SUM(MAX(MAX('I_/u-wy')))))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING ((AVG(SUM(MAX(MAX('I_/u-wy'))))) ISNULL);
SELECT ALL t0.c0, vt0.c0, t0.c2, t0.c1 FROM t0, vt0;
SELECT t0.c0, vt0.c0, t0.c2, t0.c1 FROM t0, vt0 WHERE (CAST(x'fb3c' AS BLOB)) UNION ALL SELECT t0.c0, vt0.c0, t0.c2, t0.c1 FROM t0, vt0 WHERE ((NOT (CAST(x'fb3c' AS BLOB)))) UNION ALL SELECT t0.c0, vt0.c0, t0.c2, t0.c1 FROM t0, vt0 WHERE (((CAST(x'fb3c' AS BLOB)) ISNULL));
SELECT ALL t0.c0, vt0.c0, t0.c2, t0.c1 FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE ((- ((((t0.c1)) BETWEEN ((t0.c1)) AND ((vt0.c0)))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT ((- ((((t0.c1)) BETWEEN ((t0.c1)) AND ((vt0.c0)))))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((((- ((((t0.c1)) BETWEEN ((t0.c1)) AND ((vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 WHERE (((((t0.c1)OR(t0.c2)))OR(t0.c0)) COLLATE BINARY) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 WHERE ((NOT (((((t0.c1)OR(t0.c2)))OR(t0.c0)) COLLATE BINARY))) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 WHERE (((((((t0.c1)OR(t0.c2)))OR(t0.c0)) COLLATE BINARY) ISNULL)) GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c1 FROM vt0, t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM vt0, t0 GROUP BY t0.c0, t0.c1 HAVING SUM(TRIM(DISTINCT t0.c1, vt0.c0)) UNION ALL SELECT ALL t0.c0, t0.c1 FROM vt0, t0 GROUP BY t0.c0, t0.c1 HAVING (NOT (SUM(TRIM(DISTINCT t0.c1, vt0.c0)))) UNION ALL SELECT t0.c0, t0.c1 FROM vt0, t0 GROUP BY t0.c0, t0.c1 HAVING ((SUM(TRIM(DISTINCT t0.c1, vt0.c0))) ISNULL);
SELECT ALL t0.c0, t0.c1 FROM vt0, t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM vt0, t0 GROUP BY t0.c0, t0.c1 HAVING SUM(TRIM(DISTINCT t0.c1, vt0.c0)) UNION ALL SELECT ALL t0.c0, t0.c1 FROM vt0, t0 GROUP BY t0.c0, t0.c1 HAVING (NOT (SUM(TRIM(DISTINCT t0.c1, vt0.c0)))) UNION ALL SELECT t0.c0, t0.c1 FROM vt0, t0 GROUP BY t0.c0, t0.c1 HAVING ((SUM(TRIM(DISTINCT t0.c1, vt0.c0))) ISNULL);
SELECT ALL t0.c0, t0.c1 FROM vt0, t0 GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (CASE WHEN (+ (t0.c1)) THEN (t0.c2 IN ()) END) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CASE WHEN (+ (t0.c1)) THEN (t0.c2 IN ()) END))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((CASE WHEN (+ (t0.c1)) THEN (t0.c2 IN ()) END) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (IFNULL(DISTINCT LIKELY(t0.c0), CAST(t0.c2 AS BLOB))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (IFNULL(DISTINCT LIKELY(t0.c0), CAST(t0.c2 AS BLOB))))) UNION SELECT DISTINCT * FROM t0 WHERE (((IFNULL(DISTINCT LIKELY(t0.c0), CAST(t0.c2 AS BLOB))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c2 FROM t0, vt0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0, vt0 WHERE ((+ (CASE t0.c2  WHEN t0.c2 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0, vt0 WHERE ((NOT ((+ (CASE t0.c2  WHEN t0.c2 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END))))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0, vt0 WHERE ((((+ (CASE t0.c2  WHEN t0.c2 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END))) ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0, vt0 GROUP BY t0.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(COUNT(MIN(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(COUNT(MIN(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(COUNT(MIN(vt0.c0)))) ISNULL);
SELECT ALL TOTAL(vt0.c0) FROM vt0;
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (- (t0.c2));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON (- (t0.c2)) WHERE (CAST(t0.c0 AS NUMERIC)) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN t0 ON (- (t0.c2)) WHERE ((NOT (CAST(t0.c0 AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON (- (t0.c2)) WHERE (((CAST(t0.c0 AS NUMERIC)) ISNULL));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (- (t0.c2));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0) IS FALSE))<=(CAST(vt0.c0 AS REAL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) IS FALSE))<=(CAST(vt0.c0 AS REAL)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) IS FALSE))<=(CAST(vt0.c0 AS REAL)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c1, vt0.c0 FROM t0 NATURAL JOIN vt0;
SELECT t0.c1, vt0.c0 FROM t0 NATURAL JOIN vt0 WHERE (STRFTIME(((((vt0.c0)OR(vt0.c0)))AND(t0.c1)), CASE WHEN '' THEN '*B' WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN '➙\n' END, ((t0.c0)LIKE(t0.c2)))) UNION ALL SELECT ALL t0.c1, vt0.c0 FROM t0 NATURAL JOIN vt0 WHERE ((NOT (STRFTIME(((((vt0.c0)OR(vt0.c0)))AND(t0.c1)), CASE WHEN '' THEN '*B' WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN '➙\n' END, ((t0.c0)LIKE(t0.c2)))))) UNION ALL SELECT t0.c1, vt0.c0 FROM t0 NATURAL JOIN vt0 WHERE (((STRFTIME(((((vt0.c0)OR(vt0.c0)))AND(t0.c1)), CASE WHEN '' THEN '*B' WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN '➙\n' END, ((t0.c0)LIKE(t0.c2)))) ISNULL));
SELECT t0.c1, vt0.c0 FROM t0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((CHAR(t0.c0) IN (((t0.c0)+(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((CHAR(t0.c0) IN (((t0.c0)+(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((CHAR(t0.c0) IN (((t0.c0)+(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((CASE WHEN t0.c2 THEN t0.c1 END)|(((t0.c2) IS FALSE)))) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT (((CASE WHEN t0.c2 THEN t0.c1 END)|(((t0.c2) IS FALSE)))))) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((((CASE WHEN t0.c2 THEN t0.c1 END)|(((t0.c2) IS FALSE)))) ISNULL)) GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (TOTAL(AVG(vt0.c0))))) BETWEEN (COUNT(vt0.c0)) AND (RTRIM(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (TOTAL(AVG(vt0.c0))))) BETWEEN (COUNT(vt0.c0)) AND (RTRIM(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (TOTAL(AVG(vt0.c0))))) BETWEEN (COUNT(vt0.c0)) AND (RTRIM(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((- (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((- (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((- (vt0.c0))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM t0 NATURAL JOIN vt0 WHERE ('1458262993') UNION SELECT DISTINCT * FROM t0 NATURAL JOIN vt0 WHERE ((NOT ('1458262993'))) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN vt0 WHERE ((('1458262993') ISNULL));
SELECT DISTINCT * FROM t0 NATURAL JOIN vt0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE ((((t0.c2)) BETWEEN (((NOT (vt0.c0)))) AND ((TYPEOF(t0.c0))))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT ((((t0.c2)) BETWEEN (((NOT (vt0.c0)))) AND ((TYPEOF(t0.c0))))))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE ((((((t0.c2)) BETWEEN (((NOT (vt0.c0)))) AND ((TYPEOF(t0.c0))))) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*))-(GROUP_CONCAT(COUNT(MIN(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*))-(GROUP_CONCAT(COUNT(MIN(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*))-(GROUP_CONCAT(COUNT(MIN(vt0.c0)))))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (HEX(DISTINCT -5.44112159E8)) UNION ALL SELECT * FROM t0 WHERE ((NOT (HEX(DISTINCT -5.44112159E8)))) UNION ALL SELECT * FROM t0 WHERE (((HEX(DISTINCT -5.44112159E8)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (t0.c2) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (t0.c2))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c2) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NOT INDEXED WHERE (((~ (vt0.c0)) IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((~ (vt0.c0)) IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((~ (vt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING '122210033' UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ('122210033')) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (('122210033') ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING '122210033' UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ('122210033')) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (('122210033') ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 WHERE (t0.c0) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0;
SELECT DISTINCT vt0.c0, t0.c0, t0.c2 FROM vt0, t0;
SELECT DISTINCT vt0.c0, t0.c0, t0.c2 FROM vt0, t0 WHERE (UPPER(x'471f')) UNION SELECT DISTINCT vt0.c0, t0.c0, t0.c2 FROM vt0, t0 WHERE ((NOT (UPPER(x'471f')))) UNION SELECT DISTINCT vt0.c0, t0.c0, t0.c2 FROM vt0, t0 WHERE (((UPPER(x'471f')) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0, t0.c2 FROM vt0, t0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c2 FROM vt0, t0 GROUP BY t0.c2;
SELECT t0.c2 FROM vt0, t0 GROUP BY t0.c2 HAVING SUM(SUM(GROUP_CONCAT(vt0.c0))) UNION ALL SELECT t0.c2 FROM vt0, t0 GROUP BY t0.c2 HAVING (NOT (SUM(SUM(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT ALL t0.c2 FROM vt0, t0 GROUP BY t0.c2 HAVING ((SUM(SUM(GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (CAST((t0.c1 IN ()) AS NUMERIC)) UNION ALL SELECT * FROM t0 WHERE ((NOT (CAST((t0.c1 IN ()) AS NUMERIC)))) UNION ALL SELECT ALL * FROM t0 WHERE (((CAST((t0.c1 IN ()) AS NUMERIC)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt0 ON t0.c0;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt0 ON t0.c0 WHERE ((~ (((t0.c0) IS TRUE)))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt0 ON t0.c0 WHERE ((NOT ((~ (((t0.c0) IS TRUE)))))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt0 ON t0.c0 WHERE ((((~ (((t0.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt0 ON t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CHANGES()) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CHANGES()))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CHANGES()) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0, t0.c1, t0.c2 FROM t0, vt0 GROUP BY vt0.c0, t0.c1, t0.c2;
SELECT ALL vt0.c0, t0.c1, t0.c2 FROM t0, vt0 NOT INDEXED GROUP BY vt0.c0, t0.c1, t0.c2 HAVING COUNT(*) UNION ALL SELECT vt0.c0, t0.c1, t0.c2 FROM t0, vt0 GROUP BY vt0.c0, t0.c1, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, t0.c1, t0.c2 FROM t0, vt0 GROUP BY vt0.c0, t0.c1, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, t0.c1, t0.c2 FROM t0, vt0 GROUP BY vt0.c0, t0.c1, t0.c2;
SELECT ALL vt0.c0, t0.c1, t0.c2 FROM t0, vt0 NOT INDEXED GROUP BY vt0.c0, t0.c1, t0.c2 HAVING COUNT(*) UNION ALL SELECT vt0.c0, t0.c1, t0.c2 FROM t0, vt0 GROUP BY vt0.c0, t0.c1, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, t0.c1, t0.c2 FROM t0, vt0 GROUP BY vt0.c0, t0.c1, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, t0.c1, t0.c2 FROM t0, vt0 GROUP BY vt0.c0, t0.c1, t0.c2;
SELECT t0.c0, t0.c1, vt0.c0, t0.c2 FROM t0, vt0;
SELECT t0.c0, t0.c1, vt0.c0, t0.c2 FROM t0, vt0 WHERE (CASE ((t0.c2) NOT BETWEEN ('.Lxy-1435601212045532880T1102-1778:1793:1941 1601T3575603727028850491T1837859757251837863-WyR5{') AND (t0.c0))  WHEN CASE WHEN t0.c2 THEN t0.c1 ELSE 0.7215493979575673 END THEN load_extension(t0.c1) END) UNION ALL SELECT ALL t0.c0, t0.c1, vt0.c0, t0.c2 FROM t0, vt0 WHERE ((NOT (CASE ((t0.c2) NOT BETWEEN ('.Lxy-1435601212045532880T1102-1778:1793:1941 1601T3575603727028850491T1837859757251837863-WyR5{') AND (t0.c0))  WHEN CASE WHEN t0.c2 THEN t0.c1 ELSE 0.7215493979575673 END THEN load_extension(t0.c1) END))) UNION ALL SELECT ALL t0.c0, t0.c1, vt0.c0, t0.c2 FROM t0, vt0 WHERE (((CASE ((t0.c2) NOT BETWEEN ('.Lxy-1435601212045532880T1102-1778:1793:1941 1601T3575603727028850491T1837859757251837863-WyR5{') AND (t0.c0))  WHEN CASE WHEN t0.c2 THEN t0.c1 ELSE 0.7215493979575673 END THEN load_extension(t0.c1) END) ISNULL));
SELECT t0.c0, t0.c1, vt0.c0, t0.c2 FROM t0, vt0;
SELECT DISTINCT t0.c2, vt0.c0, t0.c0, t0.c1 FROM t0, vt0;
SELECT DISTINCT t0.c2, vt0.c0, t0.c0, t0.c1 FROM t0, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) IS FALSE)) UNION SELECT DISTINCT t0.c2, vt0.c0, t0.c0, t0.c1 FROM t0, vt0 WHERE ((NOT (((CAST(vt0.c0 AS NUMERIC)) IS FALSE)))) UNION SELECT DISTINCT t0.c2, vt0.c0, t0.c0, t0.c1 FROM t0, vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC)) IS FALSE)) ISNULL));
SELECT DISTINCT t0.c2, vt0.c0, t0.c0, t0.c1 FROM t0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (TOTAL_CHANGES()) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (TOTAL_CHANGES()))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((TOTAL_CHANGES()) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0, vt0.c0, t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c1, t0.c2;
SELECT ALL t0.c0, vt0.c0, t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c1, t0.c2 HAVING MIN(MAX(NULL)) UNION ALL SELECT t0.c0, vt0.c0, t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c1, t0.c2 HAVING (NOT (MIN(MAX(NULL)))) UNION ALL SELECT t0.c0, vt0.c0, t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c1, t0.c2 HAVING ((MIN(MAX(NULL))) ISNULL);
SELECT SUM('0.15747326709145282') FROM vt0, t0;
SELECT t0.c1 FROM t0;
SELECT ALL t0.c1 FROM t0 WHERE (((((((t0.c1, t0.c2, t0.c0))>=((t0.c0, t0.c0, t0.c0)))))==((t0.c2)))) UNION ALL SELECT t0.c1 FROM t0 WHERE ((NOT (((((((t0.c1, t0.c2, t0.c0))>=((t0.c0, t0.c0, t0.c0)))))=((t0.c2)))))) UNION ALL SELECT ALL t0.c1 FROM t0 WHERE (((((((((t0.c1, t0.c2, t0.c0))>=((t0.c0, t0.c0, t0.c0)))))=((t0.c2)))) ISNULL));
SELECT t0.c1 FROM t0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE ((((t0.c2)) BETWEEN (((t0.c2 IN ()))) AND (((~ (t0.c0)))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT ((((t0.c2)) BETWEEN (((t0.c2 IN ()))) AND (((~ (t0.c0)))))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((((((t0.c2)) BETWEEN (((t0.c2 IN ()))) AND (((~ (t0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 WHERE (((((t0.c2)GLOB(t0.c1))) NOTNULL)) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE ((NOT (((((t0.c2)GLOB(t0.c1))) NOTNULL)))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE (((((((t0.c2)GLOB(t0.c1))) NOTNULL)) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING MAX(SUM(NULL)) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (NOT (MAX(SUM(NULL)))) UNION ALL SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING ((MAX(SUM(NULL))) ISNULL);
SELECT ALL * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE (TIME(t0.c1 COLLATE RTRIM, CAST(vt0.c0 AS TEXT), ((t0.c1) BETWEEN (vt0.c0) AND (t0.c2)))) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT (TIME(t0.c1 COLLATE RTRIM, CAST(vt0.c0 AS TEXT), ((t0.c1) BETWEEN (vt0.c0) AND (t0.c2)))))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE (((TIME(t0.c1 COLLATE RTRIM, CAST(vt0.c0 AS TEXT), ((t0.c1) BETWEEN (vt0.c0) AND (t0.c2)))) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT t0.c0, vt0.c0, t0.c1 FROM t0 FULL OUTER JOIN vt0 ON LIKELIHOOD((((''))<=((vt0.c0))), 0.24179806868115383);
SELECT DISTINCT t0.c0, vt0.c0, t0.c1 FROM t0 FULL OUTER JOIN vt0 ON LIKELIHOOD((((''))<=((vt0.c0))), 0.24179806868115383) WHERE (CAST(CASE t0.c2  WHEN t0.c2 THEN 462646163 END AS REAL)) UNION SELECT DISTINCT t0.c0, vt0.c0, t0.c1 FROM t0 FULL OUTER JOIN vt0 ON LIKELIHOOD((((''))<=((vt0.c0))), 0.24179806868115383) WHERE ((NOT (CAST(CASE t0.c2  WHEN t0.c2 THEN 462646163 END AS REAL)))) UNION SELECT DISTINCT t0.c0, vt0.c0, t0.c1 FROM t0 FULL OUTER JOIN vt0 ON LIKELIHOOD((((''))<=((vt0.c0))), 0.24179806868115383) WHERE (((CAST(CASE t0.c2  WHEN t0.c2 THEN 462646163 END AS REAL)) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0, t0.c1 FROM t0 FULL OUTER JOIN vt0 ON LIKELIHOOD((((''))<=((vt0.c0))), 0.24179806868115383);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE ((vt0.c0) ISNULL)  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (NOT (vt0.c0)) ELSE 0.33854705428105347 END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE ((vt0.c0) ISNULL)  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (NOT (vt0.c0)) ELSE 0.33854705428105347 END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE ((vt0.c0) ISNULL)  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (NOT (vt0.c0)) ELSE 0.33854705428105347 END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0, t0.c2, t0.c1 FROM vt0, t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM vt0, t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING MIN(((AVG(''))IS(SUM(t0.c2)))) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM vt0, t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (NOT (MIN(((AVG(''))IS(SUM(t0.c2)))))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM vt0, t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING ((MIN(((AVG(''))IS(SUM(t0.c2))))) ISNULL);
SELECT t0.c0, t0.c2, t0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON CASE CASE vt0.c0  WHEN t0.c2 THEN vt0.c0 ELSE t0.c1 END  WHEN (vt0.c0 IN ()) THEN (t0.c0 IN ()) WHEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN ((t0.c1) NOTNULL) WHEN ((t0.c0)>>(t0.c0)) THEN rtreenode(t0.c1, t0.c1) END;
SELECT t0.c0, t0.c2, t0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON CASE CASE vt0.c0  WHEN t0.c2 THEN vt0.c0 ELSE t0.c1 END  WHEN (vt0.c0 IN ()) THEN (t0.c0 IN ()) WHEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN ((t0.c1) NOTNULL) WHEN ((t0.c0)>>(t0.c0)) THEN rtreenode(t0.c1, t0.c1) END WHERE (CASE WHEN t0.c2 COLLATE BINARY THEN (((t0.c0, t0.c0, 0X1bdf1899))>((t0.c2, vt0.c0, t0.c1))) END) UNION ALL SELECT t0.c0, t0.c2, t0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON CASE CASE vt0.c0  WHEN t0.c2 THEN vt0.c0 ELSE t0.c1 END  WHEN (vt0.c0 IN ()) THEN (t0.c0 IN ()) WHEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN ((t0.c1) NOTNULL) WHEN ((t0.c0)>>(t0.c0)) THEN rtreenode(t0.c1, t0.c1) END WHERE ((NOT (CASE WHEN t0.c2 COLLATE BINARY THEN (((t0.c0, t0.c0, 0X1bdf1899))>((t0.c2, vt0.c0, t0.c1))) END))) UNION ALL SELECT t0.c0, t0.c2, t0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON CASE CASE vt0.c0  WHEN t0.c2 THEN vt0.c0 ELSE t0.c1 END  WHEN (vt0.c0 IN ()) THEN (t0.c0 IN ()) WHEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN ((t0.c1) NOTNULL) WHEN ((t0.c0)>>(t0.c0)) THEN rtreenode(t0.c1, t0.c1) END WHERE (((CASE WHEN t0.c2 COLLATE BINARY THEN (((t0.c0, t0.c0, 0X1bdf1899))>((t0.c2, vt0.c0, t0.c1))) END) ISNULL));
SELECT t0.c0, t0.c2, t0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON CASE CASE vt0.c0  WHEN t0.c2 THEN vt0.c0 ELSE t0.c1 END  WHEN (vt0.c0 IN ()) THEN (t0.c0 IN ()) WHEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN ((t0.c1) NOTNULL) WHEN ((t0.c0)>>(t0.c0)) THEN rtreenode(t0.c1, t0.c1) END;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0 WHERE ((- ((((('')AND(t0.c2)))OR(t0.c0))))) GROUP BY t0.c1, t0.c0 UNION SELECT ALL t0.c1, t0.c0 FROM t0 WHERE ((NOT ((- ((((('')AND(t0.c2)))OR(t0.c0))))))) GROUP BY t0.c1, t0.c0 UNION SELECT t0.c1, t0.c0 FROM t0 WHERE ((((- ((((('')AND(t0.c2)))OR(t0.c0))))) ISNULL)) GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING AVG(SUM('1033643929')) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING (NOT (AVG(SUM('1033643929')))) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING ((AVG(SUM('1033643929'))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((CAST(NULL AS REAL)) ISNULL)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((CAST(NULL AS REAL)) ISNULL)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((CAST(NULL AS REAL)) ISNULL)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((((((CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END)AND(TIME(-1e500, t0.c2, t0.c2))))AND(((((t0.c2)AND(t0.c0)))OR(t0.c1)))))AND(((t0.c1)>(t0.c1)))))OR(((t0.c1)IS NOT(t0.c2))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((((((CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END)AND(TIME(-1e500, t0.c2, t0.c2))))AND(((((t0.c2)AND(t0.c0)))OR(t0.c1)))))AND(((t0.c1)>(t0.c1)))))OR(((t0.c1)IS NOT(t0.c2))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((((((CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END)AND(TIME(-1e500, t0.c2, t0.c2))))AND(((((t0.c2)AND(t0.c0)))OR(t0.c1)))))AND(((t0.c1)>(t0.c1)))))OR(((t0.c1)IS NOT(t0.c2))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN ('') AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN ('') AND (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN ('') AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING ((((((((MIN(t0.c1))OR(((vt0.c0)>=(t0.c2)))))AND(COUNT(*))))AND(((t0.c0) ISNULL))))AND(MAX(TOTAL(COUNT(*))))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (((((((((MIN(t0.c1))OR(((vt0.c0)>=(t0.c2)))))AND(COUNT(*))))AND(((t0.c0) ISNULL))))AND(MAX(TOTAL(COUNT(*))))))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING ((((((((((MIN(t0.c1))OR(((vt0.c0)>=(t0.c2)))))AND(COUNT(*))))AND(((t0.c0) ISNULL))))AND(MAX(TOTAL(COUNT(*)))))) ISNULL);
SELECT vt0.c0 FROM vt0, t0;
SELECT vt0.c0 FROM vt0, t0 WHERE (((t0.c1) NOTNULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 WHERE ((NOT (((t0.c1) NOTNULL)))) UNION ALL SELECT vt0.c0 FROM vt0, t0 WHERE (((((t0.c1) NOTNULL)) ISNULL));
SELECT vt0.c0 FROM vt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 NOT INDEXED WHERE (((0.5224664651685075) BETWEEN (((t0.c0) IS TRUE)) AND (((t0.c0)>=(t0.c2))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((0.5224664651685075) BETWEEN (((t0.c0) IS TRUE)) AND (((t0.c0)>=(t0.c2))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((0.5224664651685075) BETWEEN (((t0.c0) IS TRUE)) AND (((t0.c0)>=(t0.c2))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c1, vt0.c0, t0.c2 FROM t0, vt0 GROUP BY t0.c1, vt0.c0, t0.c2;
SELECT ALL t0.c1, vt0.c0, t0.c2 FROM t0, vt0 WHERE (CAST((('8>') IS FALSE) AS BLOB)) GROUP BY t0.c1, vt0.c0, t0.c2 UNION SELECT t0.c1, vt0.c0, t0.c2 FROM t0, vt0 WHERE ((NOT (CAST((('8>') IS FALSE) AS BLOB)))) GROUP BY t0.c1, vt0.c0, t0.c2 UNION SELECT t0.c1, vt0.c0, t0.c2 FROM t0, vt0 WHERE (((CAST((('8>') IS FALSE) AS BLOB)) ISNULL)) GROUP BY t0.c1, vt0.c0, t0.c2;
SELECT ALL t0.c1, vt0.c0, t0.c2 FROM t0, vt0 GROUP BY t0.c1, vt0.c0, t0.c2;
SELECT ALL t0.c2 FROM t0 INNER JOIN vt0 ON CASE t0.c2  WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END COLLATE NOCASE GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 INNER JOIN vt0 ON CASE t0.c2  WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END COLLATE NOCASE GROUP BY t0.c2 HAVING GROUP_CONCAT(MAX(t0.c2)) UNION ALL SELECT t0.c2 FROM t0 INNER JOIN vt0 ON CASE t0.c2  WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END COLLATE NOCASE GROUP BY t0.c2 HAVING (NOT (GROUP_CONCAT(MAX(t0.c2)))) UNION ALL SELECT t0.c2 FROM t0 INNER JOIN vt0 ON CASE t0.c2  WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END COLLATE NOCASE GROUP BY t0.c2 HAVING ((GROUP_CONCAT(MAX(t0.c2))) ISNULL);
SELECT * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE (((UPPER(t0.c1)) ISNULL)) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT (((UPPER(t0.c1)) ISNULL)))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE (((((UPPER(t0.c1)) ISNULL)) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE ((((t0.c1 IN ())) NOT BETWEEN (((((t0.c0)OR(t0.c0)))AND(t0.c2))) AND (((t0.c2)-(t0.c1))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT ((((t0.c1 IN ())) NOT BETWEEN (((((t0.c0)OR(t0.c0)))AND(t0.c2))) AND (((t0.c2)-(t0.c1))))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((((((t0.c1 IN ())) NOT BETWEEN (((((t0.c0)OR(t0.c0)))AND(t0.c2))) AND (((t0.c2)-(t0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT ALL t0.c0, t0.c1, t0.c2, vt0.c0 FROM t0 NOT INDEXED RIGHT OUTER JOIN vt0 ON (~ (((vt0.c0) BETWEEN (t0.c0) AND (t0.c1)))) GROUP BY t0.c0, t0.c1, t0.c2, vt0.c0;
SELECT t0.c0, t0.c1, t0.c2, vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (~ (((vt0.c0) BETWEEN (t0.c0) AND (t0.c1)))) WHERE (((((((vt0.c0)<=(0.8213449064566147)))OR((t0.c1 IN ()))))OR(((t0.c0) IS TRUE)))) GROUP BY t0.c0, t0.c1, t0.c2, vt0.c0 UNION SELECT t0.c0, t0.c1, t0.c2, vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (~ (((vt0.c0) BETWEEN (t0.c0) AND (t0.c1)))) WHERE ((NOT (((((((vt0.c0)<=(0.8213449064566147)))OR((t0.c1 IN ()))))OR(((t0.c0) IS TRUE)))))) GROUP BY t0.c0, t0.c1, t0.c2, vt0.c0 UNION SELECT t0.c0, t0.c1, t0.c2, vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (~ (((vt0.c0) BETWEEN (t0.c0) AND (t0.c1)))) WHERE (((((((((vt0.c0)<=(0.8213449064566147)))OR((t0.c1 IN ()))))OR(((t0.c0) IS TRUE)))) ISNULL)) GROUP BY t0.c0, t0.c1, t0.c2, vt0.c0;
SELECT ALL t0.c0, t0.c1, t0.c2, vt0.c0 FROM t0 NOT INDEXED RIGHT OUTER JOIN vt0 ON (~ (((vt0.c0) BETWEEN (t0.c0) AND (t0.c1)))) GROUP BY t0.c0, t0.c1, t0.c2, vt0.c0;
SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING COUNT(*) UNION ALL SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING COUNT(*) UNION ALL SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT ALL * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (((t0.c2 COLLATE NOCASE) BETWEEN ((NOT (t0.c1))) AND (COALESCE(vt0.c0, ' /CEgy砍 ')))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (((t0.c2 COLLATE NOCASE) BETWEEN ((NOT (t0.c1))) AND (COALESCE(vt0.c0, ' /CEgy砍 ')))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((((t0.c2 COLLATE NOCASE) BETWEEN ((NOT (t0.c1))) AND (COALESCE(vt0.c0, ' /CEgy砍 ')))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (ROUND((NOT (vt0.c0)), (vt0.c0 IN ()))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (ROUND((NOT (vt0.c0)), (vt0.c0 IN ()))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((ROUND((NOT (vt0.c0)), (vt0.c0 IN ()))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING x'' COLLATE NOCASE UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (x'' COLLATE NOCASE)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((x'' COLLATE NOCASE) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING x'' COLLATE NOCASE UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (x'' COLLATE NOCASE)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((x'' COLLATE NOCASE) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, t0.c1 FROM vt0 INNER JOIN t0 ON CASE WHEN (('0.08266639483571558')IS NOT(t0.c2)) THEN HEX(vt0.c0) ELSE IFNULL(DISTINCT t0.c2, 0.08189223742032592) END;
SELECT ALL vt0.c0, t0.c1 FROM vt0 INNER JOIN t0 ON CASE WHEN (('0.08266639483571558')IS NOT(t0.c2)) THEN HEX(vt0.c0) ELSE IFNULL(DISTINCT t0.c2, 0.08189223742032592) END WHERE (t0.c0) UNION ALL SELECT vt0.c0, t0.c1 FROM vt0 INNER JOIN t0 ON CASE WHEN (('0.08266639483571558')IS NOT(t0.c2)) THEN HEX(vt0.c0) ELSE IFNULL(DISTINCT t0.c2, 0.08189223742032592) END WHERE ((NOT (t0.c0))) UNION ALL SELECT vt0.c0, t0.c1 FROM vt0 INNER JOIN t0 ON CASE WHEN (('0.08266639483571558')IS NOT(t0.c2)) THEN HEX(vt0.c0) ELSE IFNULL(DISTINCT t0.c2, 0.08189223742032592) END WHERE (((t0.c0) ISNULL));
SELECT vt0.c0, t0.c1 FROM vt0 INNER JOIN t0 ON CASE WHEN (('0.08266639483571558')IS NOT(t0.c2)) THEN HEX(vt0.c0) ELSE IFNULL(DISTINCT t0.c2, 0.08189223742032592) END;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c2 AS TEXT)) NOT BETWEEN (t0.c2) AND ((t0.c1 IN ())))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((CAST(t0.c2 AS TEXT)) NOT BETWEEN (t0.c2) AND ((t0.c1 IN ())))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((CAST(t0.c2 AS TEXT)) NOT BETWEEN (t0.c2) AND ((t0.c1 IN ())))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 WHERE (((CAST(t0.c1 AS BLOB)) NOT BETWEEN (CASE WHEN t0.c1 THEN t0.c2 WHEN 0.8808472624019954 THEN t0.c2 WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END) AND (t0.c1))) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT t0.c1, t0.c0, t0.c2 FROM t0 WHERE ((NOT (((CAST(t0.c1 AS BLOB)) NOT BETWEEN (CASE WHEN t0.c1 THEN t0.c2 WHEN 0.8808472624019954 THEN t0.c2 WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END) AND (t0.c1))))) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT t0.c1, t0.c0, t0.c2 FROM t0 WHERE (((((CAST(t0.c1 AS BLOB)) NOT BETWEEN (CASE WHEN t0.c1 THEN t0.c2 WHEN 0.8808472624019954 THEN t0.c2 WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END) AND (t0.c1))) ISNULL)) GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c2, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY t0.c2, t0.c0 HAVING ((((((((AVG(MAX(t0.c0)))OR(COUNT(*))))OR(((MAX(MIN(t0.c1)))GLOB(vt0.c0)))))OR(IFNULL(t0.c0, SUM(SUM(TOTAL('-1724922276')))))))AND(AVG(t0.c1))) UNION ALL SELECT t0.c2, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY t0.c2, t0.c0 HAVING (NOT (((((((((AVG(MAX(t0.c0)))OR(COUNT(*))))OR(((MAX(MIN(t0.c1)))GLOB(vt0.c0)))))OR(IFNULL(t0.c0, SUM(SUM(TOTAL('-1724922276')))))))AND(AVG(t0.c1))))) UNION ALL SELECT t0.c2, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY t0.c2, t0.c0 HAVING ((((((((((AVG(MAX(t0.c0)))OR(COUNT(*))))OR(((MAX(MIN(t0.c1)))GLOB(vt0.c0)))))OR(IFNULL(t0.c0, SUM(SUM(TOTAL('-1724922276')))))))AND(AVG(t0.c1)))) ISNULL);
SELECT ALL SUM(t0.c2) FROM vt0, t0 ORDER BY ((CASE 0.14966003859767585  WHEN t0.c1 THEN t0.c2 END) BETWEEN (((((t0.c1)OR(t0.c1)))AND(t0.c0))) AND (((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))), x'ab3b' ASC  NULLS LAST;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (((((((t0.c1)AND(NULL)))AND(-362561035)))==(((t0.c2)IS(t0.c1))))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((((t0.c1)AND(NULL)))AND(-362561035)))==(((t0.c2)IS(t0.c1))))))) UNION ALL SELECT * FROM t0 WHERE (((((((((t0.c1)AND(NULL)))AND(-362561035)))==(((t0.c2)IS(t0.c1))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c2) BETWEEN (t0.c1) AND (vt0.c0)))>(CASE vt0.c0  WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN t0.c0 END));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c2) BETWEEN (t0.c1) AND (vt0.c0)))>(CASE vt0.c0  WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN t0.c0 END)) WHERE (((((t0.c1)AND(t0.c2)))>=(x'7ede'))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c2) BETWEEN (t0.c1) AND (vt0.c0)))>(CASE vt0.c0  WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN t0.c0 END)) WHERE ((NOT (((((t0.c1)AND(t0.c2)))>=(x'7ede'))))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c2) BETWEEN (t0.c1) AND (vt0.c0)))>(CASE vt0.c0  WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN t0.c0 END)) WHERE (((((((t0.c1)AND(t0.c2)))>=(x'7ede'))) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c2) BETWEEN (t0.c1) AND (vt0.c0)))>(CASE vt0.c0  WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN t0.c0 END));
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0 WHERE ((((((t0.c1) NOT BETWEEN (t0.c2) AND (0.989893585556885))))!=(('0.7566704885008539')))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0 WHERE ((NOT ((((((t0.c1) NOT BETWEEN (t0.c2) AND (0.989893585556885))))<>(('0.7566704885008539')))))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0 WHERE ((((((((t0.c1) NOT BETWEEN (t0.c2) AND (0.989893585556885))))!=(('0.7566704885008539')))) ISNULL)) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT SUM(LIKELY(((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)))) FROM t0 ORDER BY ((((((t0.c0)OR(t0.c0)))OR(t0.c1)))IS NOT(((((t0.c2)OR(t0.c2)))AND(t0.c1))));
SELECT * FROM t0 CROSS JOIN vt0 ON COALESCE(CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END, CAST(t0.c0 AS REAL), (t0.c2 IN ()), ((t0.c0) IS TRUE));
SELECT * FROM t0 CROSS JOIN vt0 ON COALESCE(CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END, CAST(t0.c0 AS REAL), (t0.c2 IN ()), ((t0.c0) IS TRUE)) WHERE (CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN t0.c1 COLLATE NOCASE WHEN ((vt0.c0)IS(t0.c1)) THEN ('NF(/' IN ()) WHEN CASE vt0.c0  WHEN '%%' THEN t0.c2 ELSE t0.c0 END THEN LOWER(t0.c1) WHEN ((NULL)>=(t0.c0)) THEN ((t0.c1)*(t0.c2)) WHEN (((t0.c1)) BETWEEN ((t0.c1)) AND ((t0.c1))) THEN ((t0.c2)!=(t0.c2)) ELSE ((vt0.c0)<(t0.c0)) END) UNION ALL SELECT ALL * FROM t0 CROSS JOIN vt0 ON COALESCE(CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END, CAST(t0.c0 AS REAL), (t0.c2 IN ()), ((t0.c0) IS TRUE)) WHERE ((NOT (CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN t0.c1 COLLATE NOCASE WHEN ((vt0.c0)IS(t0.c1)) THEN ('NF(/' IN ()) WHEN CASE vt0.c0  WHEN '%%' THEN t0.c2 ELSE t0.c0 END THEN LOWER(t0.c1) WHEN ((NULL)>=(t0.c0)) THEN ((t0.c1)*(t0.c2)) WHEN (((t0.c1)) BETWEEN ((t0.c1)) AND ((t0.c1))) THEN ((t0.c2)<>(t0.c2)) ELSE ((vt0.c0)<(t0.c0)) END))) UNION ALL SELECT ALL * FROM t0 CROSS JOIN vt0 ON COALESCE(CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END, CAST(t0.c0 AS REAL), (t0.c2 IN ()), ((t0.c0) IS TRUE)) WHERE (((CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN t0.c1 COLLATE NOCASE WHEN ((vt0.c0)IS(t0.c1)) THEN ('NF(/' IN ()) WHEN CASE vt0.c0  WHEN '%%' THEN t0.c2 ELSE t0.c0 END THEN LOWER(t0.c1) WHEN ((NULL)>=(t0.c0)) THEN ((t0.c1)*(t0.c2)) WHEN (((t0.c1)) BETWEEN ((t0.c1)) AND ((t0.c1))) THEN ((t0.c2)<>(t0.c2)) ELSE ((vt0.c0)<(t0.c0)) END) ISNULL));
SELECT * FROM t0 CROSS JOIN vt0 ON COALESCE(CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END, CAST(t0.c0 AS REAL), (t0.c2 IN ()), ((t0.c0) IS TRUE));
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE (CAST(((((t0.c2)OR(t0.c2)))AND(t0.c1)) AS NUMERIC)) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((NOT (CAST(((((t0.c2)OR(t0.c2)))AND(t0.c1)) AS NUMERIC)))) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 NOT INDEXED WHERE (((CAST(((((t0.c2)OR(t0.c2)))AND(t0.c1)) AS NUMERIC)) ISNULL));
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((json_object(vt0.c0, vt0.c0)))>=((((vt0.c0)<<(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((json_object(vt0.c0, vt0.c0)))>=((((vt0.c0)<<(vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((json_object(vt0.c0, vt0.c0)))>=((((vt0.c0)<<(vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(((TOTAL(vt0.c0)) NOT NULL)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(((TOTAL(vt0.c0)) NOT NULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(((TOTAL(vt0.c0)) NOT NULL))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0)))GLOB((vt0.c0 IN ())))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0)IS NOT(vt0.c0)))GLOB((vt0.c0 IN ())))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0)IS NOT(vt0.c0)))GLOB((vt0.c0 IN ())))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS NUMERIC)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0) IS TRUE))GLOB(((t0.c1)<<(0.6762799852958246))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) IS TRUE))GLOB(((t0.c1)<<(0.6762799852958246))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((t0.c0) IS TRUE))GLOB(((t0.c1)<<(0.6762799852958246))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, t0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, t0.c2, vt0.c0;
SELECT t0.c0, t0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, t0.c2, vt0.c0 HAVING (((MAX(GROUP_CONCAT(SUM(t0.c1))))) BETWEEN ((MIN(t0.c2) COLLATE NOCASE)) AND ((COUNT(*)))) UNION ALL SELECT t0.c0, t0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, t0.c2, vt0.c0 HAVING (NOT ((((MAX(GROUP_CONCAT(SUM(t0.c1))))) BETWEEN ((MIN(t0.c2) COLLATE NOCASE)) AND ((COUNT(*)))))) UNION ALL SELECT ALL t0.c0, t0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, t0.c2, vt0.c0 HAVING (((((MAX(GROUP_CONCAT(SUM(t0.c1))))) BETWEEN ((MIN(t0.c2) COLLATE NOCASE)) AND ((COUNT(*))))) ISNULL);
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON (t0.c1 IN ());
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON (t0.c1 IN ()) WHERE (CAST(((t0.c2) IS TRUE) AS TEXT)) UNION ALL SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON (t0.c1 IN ()) WHERE ((NOT (CAST(((t0.c2) IS TRUE) AS TEXT)))) UNION ALL SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON (t0.c1 IN ()) WHERE (((CAST(((t0.c2) IS TRUE) AS TEXT)) ISNULL));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON (t0.c1 IN ());
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (t0.c1) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (t0.c1))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((t0.c1) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT ALL t0.c2, vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON (('7ᡭ') IS TRUE) GROUP BY t0.c2, vt0.c0, t0.c0;
SELECT t0.c2, vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON (('7ᡭ') IS TRUE) WHERE ((~ (UNLIKELY(t0.c0)))) GROUP BY t0.c2, vt0.c0, t0.c0 UNION SELECT t0.c2, vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON (('7ᡭ') IS TRUE) WHERE ((NOT ((~ (UNLIKELY(t0.c0)))))) GROUP BY t0.c2, vt0.c0, t0.c0 UNION SELECT ALL t0.c2, vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON (('7ᡭ') IS TRUE) WHERE ((((~ (UNLIKELY(t0.c0)))) ISNULL)) GROUP BY t0.c2, vt0.c0, t0.c0;
SELECT ALL t0.c2, vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON (('7ᡭ') IS TRUE) GROUP BY t0.c2, vt0.c0, t0.c0;
SELECT ALL t0.c0, t0.c1, vt0.c0, t0.c2 FROM vt0, t0 GROUP BY t0.c0, t0.c1, vt0.c0, t0.c2;
SELECT ALL t0.c0, t0.c1, vt0.c0, t0.c2 FROM vt0, t0 GROUP BY t0.c0, t0.c1, vt0.c0, t0.c2 HAVING GROUP_CONCAT(((t0.c0) BETWEEN (t0.c1) AND (AVG(TOTAL(t0.c0))))) UNION ALL SELECT t0.c0, t0.c1, vt0.c0, t0.c2 FROM vt0, t0 GROUP BY t0.c0, t0.c1, vt0.c0, t0.c2 HAVING (NOT (GROUP_CONCAT(((t0.c0) BETWEEN (t0.c1) AND (AVG(TOTAL(t0.c0))))))) UNION ALL SELECT ALL t0.c0, t0.c1, vt0.c0, t0.c2 FROM vt0, t0 GROUP BY t0.c0, t0.c1, vt0.c0, t0.c2 HAVING ((GROUP_CONCAT(((t0.c0) BETWEEN (t0.c1) AND (AVG(TOTAL(t0.c0)))))) ISNULL);
SELECT t0.c2 FROM t0;
SELECT t0.c2 FROM t0 WHERE ((((t0.c2)) BETWEEN ((((t0.c1)GLOB(0.8897129476872869)))) AND (((+ (t0.c2)))))) UNION ALL SELECT t0.c2 FROM t0 WHERE ((NOT ((((t0.c2)) BETWEEN ((((t0.c1)GLOB(0.8897129476872869)))) AND (((+ (t0.c2)))))))) UNION ALL SELECT ALL t0.c2 FROM t0 WHERE ((((((t0.c2)) BETWEEN ((((t0.c1)GLOB(0.8897129476872869)))) AND (((+ (t0.c2)))))) ISNULL));
SELECT t0.c2 FROM t0;
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0;
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((CAST('184558010' AS NUMERIC) IN ())) UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((NOT ((CAST('184558010' AS NUMERIC) IN ())))) UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((((CAST('184558010' AS NUMERIC) IN ())) ISNULL));
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0;
SELECT t0.c2, vt0.c0 FROM vt0, t0 GROUP BY t0.c2, vt0.c0;
SELECT ALL t0.c2, vt0.c0 FROM vt0, t0 WHERE (((x'')&((((2005448995)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0)))))) GROUP BY t0.c2, vt0.c0 UNION SELECT ALL t0.c2, vt0.c0 FROM vt0, t0 WHERE ((NOT (((x'')&((((2005448995)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0)))))))) GROUP BY t0.c2, vt0.c0 UNION SELECT ALL t0.c2, vt0.c0 FROM vt0, t0 WHERE (((((x'')&((((2005448995)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0)))))) ISNULL)) GROUP BY t0.c2, vt0.c0;
SELECT t0.c2, vt0.c0 FROM vt0, t0 GROUP BY t0.c2, vt0.c0;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0, vt0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0, vt0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING GROUP_CONCAT(x'' COLLATE NOCASE) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0, vt0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (NOT (GROUP_CONCAT(x'' COLLATE NOCASE))) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0, vt0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING ((GROUP_CONCAT(x'' COLLATE NOCASE)) ISNULL);
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0, vt0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0, vt0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING GROUP_CONCAT(x'' COLLATE NOCASE) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0, vt0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (NOT (GROUP_CONCAT(x'' COLLATE NOCASE))) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0, vt0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING ((GROUP_CONCAT(x'' COLLATE NOCASE)) ISNULL);
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0, vt0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE (LIKELIHOOD((('-882070704')|(vt0.c0)), 0.3262770756214839)) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT (LIKELIHOOD((('-882070704')|(vt0.c0)), 0.3262770756214839)))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE (((LIKELIHOOD((('-882070704')|(vt0.c0)), 0.3262770756214839)) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT t0.c2 FROM vt0, t0;
SELECT DISTINCT t0.c2 FROM vt0, t0 WHERE ((+ ((('-NZw') NOT NULL)))) UNION SELECT DISTINCT t0.c2 FROM vt0, t0 WHERE ((NOT ((+ ((('-NZw') NOT NULL)))))) UNION SELECT DISTINCT t0.c2 FROM vt0, t0 WHERE ((((+ ((('-NZw') NOT NULL)))) ISNULL));
SELECT DISTINCT t0.c2 FROM vt0, t0;
SELECT ALL t0.c2, t0.c1 FROM t0, vt0 GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0, vt0 WHERE ((((- (vt0.c0)))LIKE(((t0.c1) ISNULL)))) GROUP BY t0.c2, t0.c1 UNION SELECT t0.c2, t0.c1 FROM t0, vt0 WHERE ((NOT ((((- (vt0.c0)))LIKE(((t0.c1) ISNULL)))))) GROUP BY t0.c2, t0.c1 UNION SELECT ALL t0.c2, t0.c1 FROM t0, vt0 WHERE ((((((- (vt0.c0)))LIKE(((t0.c1) ISNULL)))) ISNULL)) GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM t0, vt0 GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c0, t0.c1, vt0.c0;
SELECT t0.c2, t0.c0, t0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c0, t0.c1, vt0.c0 HAVING CAST(TOTAL(COUNT(*)) AS BLOB) UNION ALL SELECT t0.c2, t0.c0, t0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c0, t0.c1, vt0.c0 HAVING (NOT (CAST(TOTAL(COUNT(*)) AS BLOB))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c0, t0.c1, vt0.c0 HAVING ((CAST(TOTAL(COUNT(*)) AS BLOB)) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE ((vt0.c0) IS TRUE)  WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE ((vt0.c0) IS TRUE)  WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((- (vt0.c0)))IS NOT(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((- (vt0.c0)))IS NOT(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((- (vt0.c0)))IS NOT(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 WHERE ((- (((t0.c1)GLOB(x''))))) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT t0.c1, t0.c0, t0.c2 FROM t0 WHERE ((NOT ((- (((t0.c1)GLOB(x''))))))) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT t0.c1, t0.c0, t0.c2 FROM t0 WHERE ((((- (((t0.c1)GLOB(x''))))) ISNULL)) GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING COUNT(CASE t0.c1  WHEN t0.c0 THEN COUNT(TOTAL(TOTAL(t0.c1))) WHEN t0.c2 THEN MAX(COUNT(*)) WHEN SUM(GROUP_CONCAT(COUNT(TOTAL(t0.c1)))) THEN COUNT(COUNT(COUNT(COUNT(*)))) END) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (COUNT(CASE t0.c1  WHEN t0.c0 THEN COUNT(TOTAL(TOTAL(t0.c1))) WHEN t0.c2 THEN MAX(COUNT(*)) WHEN SUM(GROUP_CONCAT(COUNT(TOTAL(t0.c1)))) THEN COUNT(COUNT(COUNT(COUNT(*)))) END))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((COUNT(CASE t0.c1  WHEN t0.c0 THEN COUNT(TOTAL(TOTAL(t0.c1))) WHEN t0.c2 THEN MAX(COUNT(*)) WHEN SUM(GROUP_CONCAT(COUNT(TOTAL(t0.c1)))) THEN COUNT(COUNT(COUNT(COUNT(*)))) END)) ISNULL);
SELECT SUM(CASE (- (vt0.c0))  WHEN (NOT (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)OR(vt0.c0)) END) FROM vt0 ORDER BY (- (UNLIKELY(vt0.c0)))  NULLS FIRST, (~ (((((vt0.c0)OR(vt0.c0)))OR(0.7402647688036945))));
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((ABS(DISTINCT t0.c2))/(((((((((t0.c0)OR(0.782992460643626)))AND(NULL)))AND(t0.c0)))OR(t0.c1))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((ABS(DISTINCT t0.c2))/(((((((((t0.c0)OR(0.782992460643626)))AND(NULL)))AND(t0.c0)))OR(t0.c1))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((ABS(DISTINCT t0.c2))/(((((((((t0.c0)OR(0.782992460643626)))AND(NULL)))AND(t0.c0)))OR(t0.c1))))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (highlight('725947521', t0.c2, (~ (t0.c0)), LIKELY(t0.c0))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (highlight('725947521', t0.c2, (~ (t0.c0)), LIKELY(t0.c0))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((highlight('725947521', t0.c2, (~ (t0.c0)), LIKELY(t0.c0))) ISNULL));
SELECT t0.c1 FROM vt0, t0 GROUP BY t0.c1;
SELECT t0.c1 FROM vt0, t0 WHERE (((CASE WHEN NULL THEN x'' WHEN t0.c2 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c2 END) NOT NULL)) GROUP BY t0.c1 UNION SELECT t0.c1 FROM vt0, t0 WHERE ((NOT (((CASE WHEN NULL THEN x'' WHEN t0.c2 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c2 END) NOT NULL)))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM vt0, t0 WHERE (((((CASE WHEN NULL THEN x'' WHEN t0.c2 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c2 END) NOT NULL)) ISNULL)) GROUP BY t0.c1;
SELECT t0.c1 FROM vt0, t0 GROUP BY t0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(SUM(COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(SUM(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(SUM(COUNT(*)))) ISNULL);
SELECT vt0.c0 FROM vt0 INNER JOIN t0 ON (- (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c2))));
SELECT vt0.c0 FROM vt0 INNER JOIN t0 ON (- (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c2)))) WHERE ((~ (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 INNER JOIN t0 ON (- (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c2)))) WHERE ((NOT ((~ (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 INNER JOIN t0 ON (- (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c2)))) WHERE ((((~ (vt0.c0))) ISNULL));
SELECT vt0.c0 FROM vt0 INNER JOIN t0 ON (- (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c2))));
SELECT DISTINCT t0.c1, t0.c2, t0.c0, vt0.c0 FROM t0, vt0;
SELECT DISTINCT t0.c1, t0.c2, t0.c0, vt0.c0 FROM t0, vt0 WHERE (t0.c0) UNION SELECT DISTINCT t0.c1, t0.c2, t0.c0, vt0.c0 FROM t0, vt0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c1, t0.c2, t0.c0, vt0.c0 FROM t0, vt0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c1, t0.c2, t0.c0, vt0.c0 FROM t0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOTNULL) THEN (((vt0.c0))>((vt0.c0))) WHEN ((vt0.c0)OR(vt0.c0)) THEN CAST(vt0.c0 AS REAL) WHEN CAST('-358443996' AS BLOB) THEN (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0) NOTNULL) THEN (((vt0.c0))>((vt0.c0))) WHEN ((vt0.c0)OR(vt0.c0)) THEN CAST(vt0.c0 AS REAL) WHEN CAST('-358443996' AS BLOB) THEN (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN ((vt0.c0) NOTNULL) THEN (((vt0.c0))>((vt0.c0))) WHEN ((vt0.c0)OR(vt0.c0)) THEN CAST(vt0.c0 AS REAL) WHEN CAST('-358443996' AS BLOB) THEN (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c1, t0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c2, vt0.c0;
SELECT t0.c1, t0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c2, vt0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c1, t0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c2, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c1, t0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c2, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c1, t0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c2, vt0.c0;
SELECT t0.c1, t0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c2, vt0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c1, t0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c2, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c1, t0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c2, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c1, t0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c2, vt0.c0;
SELECT ALL * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE (CASE CAST(t0.c1 AS REAL)  WHEN (vt0.c0 IN (vt0.c0)) THEN (+ (t0.c2)) WHEN CAST('-475376868' AS REAL) THEN ((t0.c2) BETWEEN (vt0.c0) AND (t0.c0)) WHEN (NULL IN ()) THEN t0.c1 END) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT (CASE CAST(t0.c1 AS REAL)  WHEN (vt0.c0 IN (vt0.c0)) THEN (+ (t0.c2)) WHEN CAST('-475376868' AS REAL) THEN ((t0.c2) BETWEEN (vt0.c0) AND (t0.c0)) WHEN (NULL IN ()) THEN t0.c1 END))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((CASE CAST(t0.c1 AS REAL)  WHEN (vt0.c0 IN (vt0.c0)) THEN (+ (t0.c2)) WHEN CAST('-475376868' AS REAL) THEN ((t0.c2) BETWEEN (vt0.c0) AND (t0.c0)) WHEN (NULL IN ()) THEN t0.c1 END) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (UPPER(((((vt0.c0)AND(vt0.c0)))AND(0xffffffffaba0ab41)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (UPPER(((((vt0.c0)AND(vt0.c0)))AND(0Xffffffffaba0ab41)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((UPPER(((((vt0.c0)AND(vt0.c0)))AND(0Xffffffffaba0ab41)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0 WHERE (((((((t0.c2)OR(t0.c0)))OR(t0.c2)))|(CASE t0.c0  WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END))) GROUP BY t0.c0, t0.c2 UNION SELECT ALL t0.c0, t0.c2 FROM t0 WHERE ((NOT (((((((t0.c2)OR(t0.c0)))OR(t0.c2)))|(CASE t0.c0  WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END))))) GROUP BY t0.c0, t0.c2 UNION SELECT t0.c0, t0.c2 FROM t0 WHERE (((((((((t0.c2)OR(t0.c0)))OR(t0.c2)))|(CASE t0.c0  WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END))) ISNULL)) GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING GROUP_CONCAT(t0.c0) UNION ALL SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (GROUP_CONCAT(t0.c0))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((GROUP_CONCAT(t0.c0)) ISNULL);
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING GROUP_CONCAT(t0.c0) UNION ALL SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (GROUP_CONCAT(t0.c0))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((GROUP_CONCAT(t0.c0)) ISNULL);
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE ((NOT (((t0.c0) NOT BETWEEN (-1.337418276E9) AND (t0.c1))))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((NOT (((t0.c0) NOT BETWEEN (-1.337418276E9) AND (t0.c1))))))) UNION ALL SELECT * FROM t0 WHERE ((((NOT (((t0.c0) NOT BETWEEN (-1.337418276E9) AND (t0.c1))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) ISNULL))%((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0x67442d61, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) ISNULL))%((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0x67442d61, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) ISNULL))%((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0x67442d61, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM t0 WHERE (6.74577006E8) GROUP BY t0.c2, t0.c1 UNION SELECT ALL t0.c2, t0.c1 FROM t0 WHERE ((NOT (6.74577006E8))) GROUP BY t0.c2, t0.c1 UNION SELECT t0.c2, t0.c1 FROM t0 WHERE (((6.74577006E8) ISNULL)) GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING AVG(((MAX(t0.c1)) IS FALSE)) UNION ALL SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING (NOT (AVG(((MAX(t0.c1)) IS FALSE)))) UNION ALL SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING ((AVG(((MAX(t0.c1)) IS FALSE))) ISNULL);
SELECT ALL * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE (CAST(x'' AS BLOB) COLLATE BINARY) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT (CAST(x'' AS BLOB) COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((CAST(x'' AS BLOB) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT * FROM vt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM vt0 NATURAL JOIN t0 WHERE ('0') UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN t0 WHERE ((NOT ('0'))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN t0 WHERE ((('0') ISNULL));
SELECT DISTINCT * FROM vt0 NATURAL JOIN t0;
SELECT ALL t0.c2, vt0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY t0.c2, vt0.c0;
SELECT ALL t0.c2, vt0.c0 FROM vt0 NATURAL JOIN t0 WHERE (0.8511976389652434) GROUP BY t0.c2, vt0.c0 UNION SELECT t0.c2, vt0.c0 FROM vt0 NATURAL JOIN t0 WHERE ((NOT (0.8511976389652434))) GROUP BY t0.c2, vt0.c0 UNION SELECT ALL t0.c2, vt0.c0 FROM vt0 NATURAL JOIN t0 WHERE (((0.8511976389652434) ISNULL)) GROUP BY t0.c2, vt0.c0;
SELECT ALL t0.c2, vt0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY t0.c2, vt0.c0;
SELECT t0.c2 FROM vt0, t0 GROUP BY t0.c2;
SELECT t0.c2 FROM vt0, t0 GROUP BY t0.c2 HAVING GROUP_CONCAT(((MAX(vt0.c0))+(vt0.c0))) UNION ALL SELECT t0.c2 FROM vt0, t0 GROUP BY t0.c2 HAVING (NOT (GROUP_CONCAT(((MAX(vt0.c0))+(vt0.c0))))) UNION ALL SELECT t0.c2 FROM vt0, t0 GROUP BY t0.c2 HAVING ((GROUP_CONCAT(((MAX(vt0.c0))+(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0, t0;
SELECT vt0.c0 FROM vt0, t0 WHERE ((((((((vt0.c0, x'', vt0.c0))<=((t0.c0, t0.c2, t0.c2))))AND(((t0.c1) BETWEEN (t0.c2) AND (t0.c1)))))OR(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 WHERE ((NOT ((((((((vt0.c0, x'', vt0.c0))<=((t0.c0, t0.c2, t0.c2))))AND(((t0.c1) BETWEEN (t0.c2) AND (t0.c1)))))OR(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0, t0 WHERE ((((((((((vt0.c0, x'', vt0.c0))<=((t0.c0, t0.c2, t0.c2))))AND(((t0.c1) BETWEEN (t0.c2) AND (t0.c1)))))OR(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0, t0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE ((- ((t0.c1 IN (t0.c0))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT ((- ((t0.c1 IN (t0.c0))))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((((- ((t0.c1 IN (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)||(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(TRIM(vt0.c0, vt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)||(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(TRIM(vt0.c0, vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)||(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(TRIM(vt0.c0, vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING AVG(t0.c0) UNION ALL SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (NOT (AVG(t0.c0))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING ((AVG(t0.c0)) ISNULL);
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING AVG(t0.c0) UNION ALL SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (NOT (AVG(t0.c0))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING ((AVG(t0.c0)) ISNULL);
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT ALL * FROM vt0 NATURAL JOIN t0;
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE ((- (t0.c2 COLLATE NOCASE))) UNION ALL SELECT * FROM vt0 NATURAL JOIN t0 WHERE ((NOT ((- (t0.c2 COLLATE NOCASE))))) UNION ALL SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE ((((- (t0.c2 COLLATE NOCASE))) ISNULL));
SELECT ALL * FROM vt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((-1536928301) BETWEEN (t0.c1) AND (t0.c1))) IS TRUE)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((-1536928301) BETWEEN (t0.c1) AND (t0.c1))) IS TRUE)))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((-1536928301) BETWEEN (t0.c1) AND (t0.c1))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(INSTR(x'', vt0.c0) AS TEXT)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(INSTR(x'', vt0.c0) AS TEXT)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(INSTR(x'', vt0.c0) AS TEXT)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING TOTAL(AVG(t0.c1)) COLLATE BINARY UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (TOTAL(AVG(t0.c1)) COLLATE BINARY)) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((TOTAL(AVG(t0.c1)) COLLATE BINARY) ISNULL);
SELECT t0.c2 FROM t0;
SELECT t0.c2 FROM t0 WHERE (((((((t0.c0)LIKE(t0.c2)))AND(((t0.c0) NOTNULL))))OR((t0.c0 IN ())))) UNION ALL SELECT t0.c2 FROM t0 WHERE ((NOT (((((((t0.c0)LIKE(t0.c2)))AND(((t0.c0) NOTNULL))))OR((t0.c0 IN ())))))) UNION ALL SELECT ALL t0.c2 FROM t0 WHERE (((((((((t0.c0)LIKE(t0.c2)))AND(((t0.c0) NOTNULL))))OR((t0.c0 IN ())))) ISNULL));
SELECT t0.c2 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c1) IS FALSE))||(x''))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c1) IS FALSE))||(x''))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c1) IS FALSE))||(x''))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c2 FROM t0, vt0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0, vt0 WHERE (((((((t0.c2)) NOT BETWEEN ((0.5936909815296858)) AND ((t0.c1)))))>=(((~ (t0.c0)))))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0, vt0 WHERE ((NOT (((((((t0.c2)) NOT BETWEEN ((0.5936909815296858)) AND ((t0.c1)))))>=(((~ (t0.c0)))))))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0, vt0 WHERE (((((((((t0.c2)) NOT BETWEEN ((0.5936909815296858)) AND ((t0.c1)))))>=(((~ (t0.c0)))))) ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0, vt0 GROUP BY t0.c2;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(MIN(MAX(t0.c1))) UNION ALL SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(MIN(MAX(t0.c1))))) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(MIN(MAX(t0.c1)))) ISNULL);
SELECT * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE (t0.c1) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT (t0.c1))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE (((t0.c1) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT t0.c2 FROM t0;
SELECT DISTINCT t0.c2 FROM t0 WHERE (CAST(NULL COLLATE NOCASE AS NUMERIC)) UNION SELECT DISTINCT t0.c2 FROM t0 WHERE ((NOT (CAST(NULL COLLATE NOCASE AS NUMERIC)))) UNION SELECT DISTINCT t0.c2 FROM t0 WHERE (((CAST(NULL COLLATE NOCASE AS NUMERIC)) ISNULL));
SELECT DISTINCT t0.c2 FROM t0;
SELECT ALL t0.c2, t0.c1, t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0, vt0.c0 FROM t0, vt0 WHERE ((0.038990120723188526 IN (((((t0.c2)OR(t0.c1)))AND(t0.c0)), t0.c0))) GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0 UNION SELECT ALL t0.c2, t0.c1, t0.c0, vt0.c0 FROM t0, vt0 WHERE ((NOT ((0.038990120723188526 IN (((((t0.c2)OR(t0.c1)))AND(t0.c0)), t0.c0))))) GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0 UNION SELECT ALL t0.c2, t0.c1, t0.c0, vt0.c0 FROM t0, vt0 WHERE ((((0.038990120723188526 IN (((((t0.c2)OR(t0.c1)))AND(t0.c0)), t0.c0))) ISNULL)) GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING MIN(MIN(SUM(t0.c1))) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT (MIN(MIN(SUM(t0.c1))))) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((MIN(MIN(SUM(t0.c1)))) ISNULL);
SELECT ALL vt0.c0, t0.c0, t0.c2 FROM t0, vt0;
SELECT ALL vt0.c0, t0.c0, t0.c2 FROM t0, vt0 WHERE (CAST(((t0.c2)LIKE(t0.c1)) AS TEXT)) UNION ALL SELECT vt0.c0, t0.c0, t0.c2 FROM t0, vt0 WHERE ((NOT (CAST(((t0.c2)LIKE(t0.c1)) AS TEXT)))) UNION ALL SELECT ALL vt0.c0, t0.c0, t0.c2 FROM t0, vt0 WHERE (((CAST(((t0.c2)LIKE(t0.c1)) AS TEXT)) ISNULL));
SELECT ALL vt0.c0, t0.c0, t0.c2 FROM t0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((NULL) IS TRUE))>=(((((vt0.c0)AND(NULL)))OR(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((NULL) IS TRUE))>=(((((vt0.c0)AND(NULL)))OR(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((NULL) IS TRUE))>=(((((vt0.c0)AND(NULL)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t0.c2, vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY t0.c2, vt0.c0;
SELECT t0.c2, vt0.c0 FROM t0 NATURAL JOIN vt0 WHERE (((((t0.c1)OR(t0.c2)))-(TYPEOF(DISTINCT 0.4699356731555644)))) GROUP BY t0.c2, vt0.c0 UNION SELECT ALL t0.c2, vt0.c0 FROM t0 NATURAL JOIN vt0 WHERE ((NOT (((((t0.c1)OR(t0.c2)))-(TYPEOF(DISTINCT 0.4699356731555644)))))) GROUP BY t0.c2, vt0.c0 UNION SELECT ALL t0.c2, vt0.c0 FROM t0 NATURAL JOIN vt0 WHERE (((((((t0.c1)OR(t0.c2)))-(TYPEOF(DISTINCT 0.4699356731555644)))) ISNULL)) GROUP BY t0.c2, vt0.c0;
SELECT t0.c2, vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY t0.c2, vt0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c0 HAVING MAX(CAST(COUNT(AVG(t0.c0)) AS REAL)) UNION ALL SELECT t0.c1, t0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c0 HAVING (NOT (MAX(CAST(COUNT(AVG(t0.c0)) AS REAL)))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c0 HAVING ((MAX(CAST(COUNT(AVG(t0.c0)) AS REAL))) ISNULL);
SELECT MAX((((vt0.c0 IN (0.795987830975946)))<(((t0.c2)IS(t0.c0))))) FROM t0, vt0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((~ (((t0.c2)AND(t0.c0))))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((~ (((t0.c2)AND(t0.c0))))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((~ (((t0.c2)AND(t0.c0))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c1 FROM t0;
SELECT DISTINCT t0.c1 FROM t0 WHERE (ABS(DISTINCT RTRIM(t0.c2))) UNION SELECT DISTINCT t0.c1 FROM t0 WHERE ((NOT (ABS(DISTINCT RTRIM(t0.c2))))) UNION SELECT DISTINCT t0.c1 FROM t0 WHERE (((ABS(DISTINCT RTRIM(t0.c2))) ISNULL));
SELECT DISTINCT t0.c1 FROM t0;
SELECT ALL t0.c2, t0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c1, vt0.c0;
SELECT t0.c2, t0.c1, vt0.c0 FROM t0, vt0 WHERE (LOWER(DISTINCT CASE 1727989403  WHEN vt0.c0 THEN t0.c2 ELSE t0.c2 END)) GROUP BY t0.c2, t0.c1, vt0.c0 UNION SELECT ALL t0.c2, t0.c1, vt0.c0 FROM t0, vt0 WHERE ((NOT (LOWER(DISTINCT CASE 1727989403  WHEN vt0.c0 THEN t0.c2 ELSE t0.c2 END)))) GROUP BY t0.c2, t0.c1, vt0.c0 UNION SELECT ALL t0.c2, t0.c1, vt0.c0 FROM t0, vt0 WHERE (((LOWER(DISTINCT CASE 1727989403  WHEN vt0.c0 THEN t0.c2 ELSE t0.c2 END)) ISNULL)) GROUP BY t0.c2, t0.c1, vt0.c0;
SELECT ALL t0.c2, t0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c1, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (- (MIN(2.120660514E9) COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((- (MIN(2.120660514E9) COLLATE BINARY)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((- (MIN(2.120660514E9) COLLATE BINARY))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (- (MIN(2.120660514E9) COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((- (MIN(2.120660514E9) COLLATE BINARY)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((- (MIN(2.120660514E9) COLLATE BINARY))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT NULL)) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM) NOT NULL)))) UNION ALL SELECT * FROM t0, vt0 WHERE (((((vt0.c0 COLLATE RTRIM) NOT NULL)) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (CAST((vt0.c0 IN ()) AS NUMERIC)) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (CAST((vt0.c0 IN ()) AS NUMERIC)))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((CAST((vt0.c0 IN ()) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((- (CAST(vt0.c0 AS BLOB)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((- (CAST(vt0.c0 AS BLOB)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((- (CAST(vt0.c0 AS BLOB)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING ((((CAST(t0.c2 AS INTEGER))OR(GROUP_CONCAT(MAX(MIN(AVG(MAX(t0.c0))))))))AND(SUM(t0.c0))) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING (NOT (((((CAST(t0.c2 AS INTEGER))OR(GROUP_CONCAT(MAX(MIN(AVG(MAX(t0.c0))))))))AND(SUM(t0.c0))))) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING ((((((CAST(t0.c2 AS INTEGER))OR(GROUP_CONCAT(MAX(MIN(AVG(MAX(t0.c0))))))))AND(SUM(t0.c0)))) ISNULL);
SELECT ALL * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE (((~ (t0.c1)) IN ())) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT (((~ (t0.c1)) IN ())))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((((~ (t0.c1)) IN ())) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS REAL) THEN CAST(vt0.c0 AS NUMERIC) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS REAL) THEN CAST(vt0.c0 AS NUMERIC) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS REAL) THEN CAST(vt0.c0 AS NUMERIC) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 WHERE ('x2wq1 xm') GROUP BY t0.c2, t0.c0 UNION SELECT ALL t0.c2, t0.c0 FROM t0 WHERE ((NOT ('x2wq1 xm'))) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM t0 WHERE ((('x2wq1 xm') ISNULL)) GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING (~ (CASE MIN(MIN(t0.c0))  WHEN MAX(t0.c0) THEN COUNT(SUM('')) END)) UNION ALL SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING (NOT ((~ (CASE MIN(MIN(t0.c0))  WHEN MAX(t0.c0) THEN COUNT(SUM('')) END)))) UNION ALL SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING (((~ (CASE MIN(MIN(t0.c0))  WHEN MAX(t0.c0) THEN COUNT(SUM('')) END))) ISNULL);
SELECT t0.c2 FROM t0;
SELECT ALL t0.c2 FROM t0 WHERE (NULL) UNION ALL SELECT t0.c2 FROM t0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL t0.c2 FROM t0 WHERE (((NULL) ISNULL));
SELECT t0.c2 FROM t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN '-63253071' END AS BLOB)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST(CASE WHEN vt0.c0 THEN '-63253071' END AS BLOB)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(CASE WHEN vt0.c0 THEN '-63253071' END AS BLOB)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (x'') GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (x''))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((x'') ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING CAST(COUNT(*) AS NUMERIC) UNION ALL SELECT vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING (NOT (CAST(COUNT(*) AS NUMERIC))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING ((CAST(COUNT(*) AS NUMERIC)) ISNULL);
SELECT vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING CAST(COUNT(*) AS NUMERIC) UNION ALL SELECT vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING (NOT (CAST(COUNT(*) AS NUMERIC))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING ((CAST(COUNT(*) AS NUMERIC)) ISNULL);
SELECT vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL t0.c1 FROM t0;
SELECT t0.c1 FROM t0 WHERE (CAST((t0.c2 IN ()) AS NUMERIC)) UNION ALL SELECT t0.c1 FROM t0 WHERE ((NOT (CAST((t0.c2 IN ()) AS NUMERIC)))) UNION ALL SELECT t0.c1 FROM t0 WHERE (((CAST((t0.c2 IN ()) AS NUMERIC)) ISNULL));
SELECT ALL t0.c1 FROM t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN -7.87362539E8 END))=((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND('j ')))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((CASE vt0.c0  WHEN vt0.c0 THEN -7.87362539E8 END))=((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND('j ')))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((CASE vt0.c0  WHEN vt0.c0 THEN -7.87362539E8 END))==((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND('j ')))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 WHERE (((((t0.c0) NOTNULL)) BETWEEN ('') AND (t0.c1))) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 WHERE ((NOT (((((t0.c0) NOTNULL)) BETWEEN ('') AND (t0.c1))))) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 WHERE (((((((t0.c0) NOTNULL)) BETWEEN ('') AND (t0.c1))) ISNULL)) GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING ((((t0.c1)GLOB(AVG(TOTAL(AVG(TOTAL(TOTAL(t0.c2)))))))) IS TRUE) UNION ALL SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (NOT (((((t0.c1)GLOB(AVG(TOTAL(AVG(TOTAL(TOTAL(t0.c2)))))))) IS TRUE))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING ((((((t0.c1)GLOB(AVG(TOTAL(AVG(TOTAL(TOTAL(t0.c2)))))))) IS TRUE)) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, 0x25a6346))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, 0x25a6346))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, 0x25a6346))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((IFNULL(DISTINCT vt0.c0, vt0.c0))*(((vt0.c0) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((IFNULL(DISTINCT vt0.c0, vt0.c0))*(((vt0.c0) IS FALSE)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((IFNULL(DISTINCT vt0.c0, vt0.c0))*(((vt0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, t0.c1, t0.c2 FROM t0, vt0 GROUP BY vt0.c0, t0.c1, t0.c2;
SELECT ALL vt0.c0, t0.c1, t0.c2 FROM t0, vt0 WHERE ((NOT ((((x'', vt0.c0, t0.c1)) NOT BETWEEN ((t0.c0, t0.c0, t0.c2)) AND ((vt0.c0, vt0.c0, t0.c1)))))) GROUP BY vt0.c0, t0.c1, t0.c2 UNION SELECT ALL vt0.c0, t0.c1, t0.c2 FROM t0, vt0 WHERE ((NOT ((NOT ((((x'', vt0.c0, t0.c1)) NOT BETWEEN ((t0.c0, t0.c0, t0.c2)) AND ((vt0.c0, vt0.c0, t0.c1)))))))) GROUP BY vt0.c0, t0.c1, t0.c2 UNION SELECT ALL vt0.c0, t0.c1, t0.c2 FROM t0, vt0 WHERE ((((NOT ((((x'', vt0.c0, t0.c1)) NOT BETWEEN ((t0.c0, t0.c0, t0.c2)) AND ((vt0.c0, vt0.c0, t0.c1)))))) ISNULL)) GROUP BY vt0.c0, t0.c1, t0.c2;
SELECT vt0.c0, t0.c1, t0.c2 FROM t0, vt0 GROUP BY vt0.c0, t0.c1, t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING CASE WHEN AVG(AVG(AVG(COUNT(GROUP_CONCAT(AVG(GROUP_CONCAT(t0.c1))))))) THEN t0.c0 END COLLATE NOCASE UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (CASE WHEN AVG(AVG(AVG(COUNT(GROUP_CONCAT(AVG(GROUP_CONCAT(t0.c1))))))) THEN t0.c0 END COLLATE NOCASE)) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((CASE WHEN AVG(AVG(AVG(COUNT(GROUP_CONCAT(AVG(GROUP_CONCAT(t0.c1))))))) THEN t0.c0 END COLLATE NOCASE) ISNULL);
SELECT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((((((((t0.c2)AND(t0.c0)))OR(t0.c0)))OR('q厙!4u㉇s')))OR(0.23067957734760802))) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((NOT (((((((((t0.c2)AND(t0.c0)))OR(t0.c0)))OR('q厙!4u㉇s')))OR(0.23067957734760802))))) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((((((((((t0.c2)AND(t0.c0)))OR(t0.c0)))OR('q厙!4u㉇s')))OR(0.23067957734760802))) ISNULL));
SELECT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((CAST(t0.c1 AS INTEGER))GLOB((((t0.c1))!=((t0.c1)))))) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((NOT (((CAST(t0.c1 AS INTEGER))GLOB((((t0.c1))!=((t0.c1)))))))) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((((CAST(t0.c1 AS INTEGER))GLOB((((t0.c1))!=((t0.c1)))))) ISNULL));
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT ALL t0.c0, t0.c2 FROM vt0, t0 GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM vt0, t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c2)))) IS TRUE)) GROUP BY t0.c0, t0.c2 UNION SELECT ALL t0.c0, t0.c2 FROM vt0, t0 WHERE ((NOT ((((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c2)))) IS TRUE)))) GROUP BY t0.c0, t0.c2 UNION SELECT ALL t0.c0, t0.c2 FROM vt0, t0 WHERE ((((((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c2)))) IS TRUE)) ISNULL)) GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM vt0, t0 GROUP BY t0.c0, t0.c2;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING MIN(TOTAL(TOTAL(COUNT(t0.c0)))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (MIN(TOTAL(TOTAL(COUNT(t0.c0)))))) UNION ALL SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((MIN(TOTAL(TOTAL(COUNT(t0.c0))))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((((t0.c0)*(t0.c2))) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (NULLIF(DISTINCT t0.c1, t0.c1)))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((t0.c0)*(t0.c2))) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (NULLIF(DISTINCT t0.c1, t0.c1)))))) UNION ALL SELECT * FROM t0 WHERE (((((((t0.c0)*(t0.c2))) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (NULLIF(DISTINCT t0.c1, t0.c1)))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c2, t0.c1 FROM t0;
SELECT DISTINCT t0.c2, t0.c1 FROM t0 WHERE (ABS(t0.c1)) UNION SELECT DISTINCT t0.c2, t0.c1 FROM t0 WHERE ((NOT (ABS(t0.c1)))) UNION SELECT DISTINCT t0.c2, t0.c1 FROM t0 WHERE (((ABS(t0.c1)) ISNULL));
SELECT DISTINCT t0.c2, t0.c1 FROM t0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 WHERE (t0.c1) GROUP BY t0.c2, t0.c1, t0.c0 UNION SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((NOT (t0.c1))) GROUP BY t0.c2, t0.c1, t0.c0 UNION SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 WHERE (((t0.c1) ISNULL)) GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING (+ (COUNT(*))) UNION ALL SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING (+ (COUNT(*))) UNION ALL SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE ((((((t0.c2)OR(t0.c1)))AND(t0.c1)) IN ())) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((((t0.c2)OR(t0.c1)))AND(t0.c1)) IN ())))) UNION ALL SELECT * FROM t0 WHERE ((((((((t0.c2)OR(t0.c1)))AND(t0.c1)) IN ())) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (CAST(json_array_length(vt0.c0, t0.c0) AS INTEGER)) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (CAST(json_array_length(vt0.c0, t0.c0) AS INTEGER)))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((CAST(json_array_length(vt0.c0, t0.c0) AS INTEGER)) ISNULL));
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 WHERE (((((t0.c1) IS FALSE)) ISNULL)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt0, t0 WHERE ((NOT (((((t0.c1) IS FALSE)) ISNULL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 WHERE (((((((t0.c1) IS FALSE)) ISNULL)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT t0.c1, t0.c0 FROM t0 NOT INDEXED, vt0 GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c0 HAVING (~ (((t0.c2)AND(MAX(MIN(MAX(vt0.c0))))))) UNION ALL SELECT t0.c1, t0.c0 FROM t0 NOT INDEXED, vt0 GROUP BY t0.c1, t0.c0 HAVING (NOT ((~ (((t0.c2)AND(MAX(MIN(MAX(vt0.c0))))))))) UNION ALL SELECT t0.c1, t0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c0 HAVING (((~ (((t0.c2)AND(MAX(MIN(MAX(vt0.c0)))))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((('')<(vt0.c0)))AND((('')|(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((('')<(vt0.c0)))AND((('')|(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((('')<(vt0.c0)))AND((('')|(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t0.c1, t0.c2 FROM vt0 INNER JOIN t0 ON ((NULL)<=(CASE t0.c1  WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END)) GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM vt0 INNER JOIN t0 ON ((NULL)<=(CASE t0.c1  WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END)) WHERE ((((((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))AND(((((t0.c2)OR(vt0.c0)))AND(t0.c2)))))OR(((0.6822696769271227) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM vt0 NOT INDEXED INNER JOIN t0 ON ((NULL)<=(CASE t0.c1  WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END)) WHERE ((NOT ((((((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))AND(((((t0.c2)OR(vt0.c0)))AND(t0.c2)))))OR(((0.6822696769271227) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM vt0 INNER JOIN t0 ON ((NULL)<=(CASE t0.c1  WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END)) WHERE ((((((((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))AND(((((t0.c2)OR(vt0.c0)))AND(t0.c2)))))OR(((0.6822696769271227) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM vt0 INNER JOIN t0 ON ((NULL)<=(CASE t0.c1  WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END)) GROUP BY t0.c1, t0.c2;
SELECT t0.c0, t0.c1 FROM t0, vt0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0, vt0 GROUP BY t0.c0, t0.c1 HAVING GROUP_CONCAT(TOTAL(t0.c0)) COLLATE BINARY UNION ALL SELECT t0.c0, t0.c1 FROM t0, vt0 GROUP BY t0.c0, t0.c1 HAVING (NOT (GROUP_CONCAT(TOTAL(t0.c0)) COLLATE BINARY)) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0, vt0 GROUP BY t0.c0, t0.c1 HAVING ((GROUP_CONCAT(TOTAL(t0.c0)) COLLATE BINARY) ISNULL);
SELECT * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE ((t0.c1 IN (vt0.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT ((t0.c1 IN (vt0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((((t0.c1 IN (vt0.c0)) COLLATE BINARY) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT t0.c0, vt0.c0, t0.c1 FROM t0, vt0;
SELECT DISTINCT t0.c0, vt0.c0, t0.c1 FROM t0, vt0 NOT INDEXED WHERE (CAST(((((t0.c0)OR(t0.c1)))AND(t0.c2)) AS REAL)) UNION SELECT DISTINCT t0.c0, vt0.c0, t0.c1 FROM t0, vt0 WHERE ((NOT (CAST(((((t0.c0)OR(t0.c1)))AND(t0.c2)) AS REAL)))) UNION SELECT DISTINCT t0.c0, vt0.c0, t0.c1 FROM t0, vt0 WHERE (((CAST(((((t0.c0)OR(t0.c1)))AND(t0.c2)) AS REAL)) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0, t0.c1 FROM t0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ()))AND(((((((((0.6358895589510438)AND(vt0.c0)))OR(NULL)))OR(vt0.c0)))OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN ()))AND(((((((((0.6358895589510438)AND(vt0.c0)))OR(NULL)))OR(vt0.c0)))OR(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN ()))AND(((((((((0.6358895589510438)AND(vt0.c0)))OR(NULL)))OR(vt0.c0)))OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((LIKELIHOOD(vt0.c0, 0.6848777425325094)) BETWEEN (MAX(MAX(vt0.c0))) AND (NULL)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((LIKELIHOOD(vt0.c0, 0.6848777425325094)) BETWEEN (MAX(MAX(vt0.c0))) AND (NULL)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((LIKELIHOOD(vt0.c0, 0.6848777425325094)) BETWEEN (MAX(MAX(vt0.c0))) AND (NULL))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(1820101728 AS REAL)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(1820101728 AS REAL)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CAST(1820101728 AS REAL)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE ((((CAST(t0.c0 AS INTEGER)))<((NULL)))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT ((((CAST(t0.c0 AS INTEGER)))<((NULL)))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((((((CAST(t0.c0 AS INTEGER)))<((NULL)))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT t0.c1, vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c0) BETWEEN (t0.c2) AND (t0.c2)))==(((t0.c1)>=(vt0.c0)))) GROUP BY t0.c1, vt0.c0, t0.c0;
SELECT ALL t0.c1, vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c0) BETWEEN (t0.c2) AND (t0.c2)))==(((t0.c1)>=(vt0.c0)))) WHERE (CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0)-(t0.c0)) WHEN vt0.c0 THEN ((((((((t0.c2)AND(t0.c1)))AND(vt0.c0)))OR(t0.c1)))AND(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)) THEN t0.c1 ELSE CASE WHEN t0.c0 THEN t0.c1 END END) GROUP BY t0.c1, vt0.c0, t0.c0 UNION SELECT ALL t0.c1, vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c0) BETWEEN (t0.c2) AND (t0.c2)))==(((t0.c1)>=(vt0.c0)))) WHERE ((NOT (CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0)-(t0.c0)) WHEN vt0.c0 THEN ((((((((t0.c2)AND(t0.c1)))AND(vt0.c0)))OR(t0.c1)))AND(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)) THEN t0.c1 ELSE CASE WHEN t0.c0 THEN t0.c1 END END))) GROUP BY t0.c1, vt0.c0, t0.c0 UNION SELECT ALL t0.c1, vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c0) BETWEEN (t0.c2) AND (t0.c2)))=(((t0.c1)>=(vt0.c0)))) WHERE (((CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0)-(t0.c0)) WHEN vt0.c0 THEN ((((((((t0.c2)AND(t0.c1)))AND(vt0.c0)))OR(t0.c1)))AND(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)) THEN t0.c1 ELSE CASE WHEN t0.c0 THEN t0.c1 END END) ISNULL)) GROUP BY t0.c1, vt0.c0, t0.c0;
SELECT t0.c1, vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c0) BETWEEN (t0.c2) AND (t0.c2)))==(((t0.c1)>=(vt0.c0)))) GROUP BY t0.c1, vt0.c0, t0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(GROUP_CONCAT(vt0.c0))) ISNULL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((TOTAL(GROUP_CONCAT(vt0.c0))) ISNULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(GROUP_CONCAT(vt0.c0))) ISNULL)) ISNULL);
SELECT MIN((((('D,')AND(t0.c2)))OR(t0.c2)) COLLATE RTRIM) FROM t0, vt0 ORDER BY TRIM(((((((((((((vt0.c0)OR(t0.c1)))AND(x'27ad')))AND('DX')))AND(vt0.c0)))OR(-404624688)))AND(vt0.c0))) DESC  NULLS FIRST, (((t0.c1, t0.c0, t0.c2)) BETWEEN ((t0.c2, t0.c0, vt0.c0)) AND ((t0.c0, t0.c1, '-1590454959'))) COLLATE NOCASE DESC, (((vt0.c0, t0.c0, t0.c0, t0.c1, vt0.c0)) NOT BETWEEN (((((t0.c0, t0.c0, t0.c2)) BETWEEN ((t0.c1, t0.c0, t0.c0)) AND ((t0.c2, '', t0.c0))), t0.c1, load_extension(t0.c2), UPPER(x''), ((((((((t0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(t0.c2)))AND(vt0.c0)))) AND ((((vt0.c0)=(vt0.c0)), ((t0.c1) ISNULL), TRIM(t0.c2, t0.c2), (((t0.c2, t0.c1, t0.c0, t0.c2, t0.c2)) BETWEEN ((NULL, t0.c0, t0.c0, t0.c2, vt0.c0)) AND ((t0.c1, t0.c2, t0.c0, t0.c0, t0.c0))), CASE WHEN t0.c1 THEN t0.c0 ELSE vt0.c0 END))) ASC;
SELECT ALL vt0.c0, t0.c1 FROM t0 CROSS JOIN vt0 ON t0.c0;
SELECT vt0.c0, t0.c1 FROM t0 CROSS JOIN vt0 ON t0.c0 WHERE ((((t0.c1)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c1 END)) AND ((CAST(t0.c2 AS REAL))))) UNION ALL SELECT vt0.c0, t0.c1 FROM t0 CROSS JOIN vt0 ON t0.c0 WHERE ((NOT ((((t0.c1)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c1 END)) AND ((CAST(t0.c2 AS REAL))))))) UNION ALL SELECT vt0.c0, t0.c1 FROM t0 CROSS JOIN vt0 ON t0.c0 WHERE ((((((t0.c1)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c1 END)) AND ((CAST(t0.c2 AS REAL))))) ISNULL));
SELECT ALL vt0.c0, t0.c1 FROM t0 CROSS JOIN vt0 ON t0.c0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 COLLATE BINARY IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((- (CASE WHEN vt0.c0 THEN vt0.c0 END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((- (CASE WHEN vt0.c0 THEN vt0.c0 END))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((- (CASE WHEN vt0.c0 THEN vt0.c0 END))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(CAST(COUNT(TOTAL(vt0.c0)) AS INTEGER)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(CAST(COUNT(TOTAL(vt0.c0)) AS INTEGER)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(CAST(COUNT(TOTAL(vt0.c0)) AS INTEGER))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (IFNULL(CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END, CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END)) UNION ALL SELECT * FROM t0 WHERE ((NOT (IFNULL(CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END, CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END)))) UNION ALL SELECT ALL * FROM t0 WHERE (((IFNULL(CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END, CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST(IFNULL(DISTINCT t0.c2, t0.c0) AS BLOB)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(IFNULL(DISTINCT t0.c2, t0.c0) AS BLOB)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(IFNULL(DISTINCT t0.c2, t0.c0) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0 WHERE (((((((((((((CAST(0X11dc49f AS INTEGER))AND(((t0.c0)OR(t0.c2)))))OR(CASE 'qEptF\'  WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c2 END)))OR(((t0.c2)+(t0.c2)))))OR((~ (t0.c1)))))AND(t0.c0)))OR((t0.c2 IN (t0.c1))))) GROUP BY t0.c2, t0.c1 UNION SELECT ALL t0.c2, t0.c1 FROM t0 WHERE ((NOT (((((((((((((CAST(0x11dc49f AS INTEGER))AND(((t0.c0)OR(t0.c2)))))OR(CASE 'qEptF\'  WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c2 END)))OR(((t0.c2)+(t0.c2)))))OR((~ (t0.c1)))))AND(t0.c0)))OR((t0.c2 IN (t0.c1))))))) GROUP BY t0.c2, t0.c1 UNION SELECT t0.c2, t0.c1 FROM t0 WHERE (((((((((((((((CAST(0x11dc49f AS INTEGER))AND(((t0.c0)OR(t0.c2)))))OR(CASE 'qEptF\'  WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c2 END)))OR(((t0.c2)+(t0.c2)))))OR((~ (t0.c1)))))AND(t0.c0)))OR((t0.c2 IN (t0.c1))))) ISNULL)) GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, vt0.c0, t0.c1, t0.c0 FROM vt0 CROSS JOIN t0 ON CASE ((t0.c2)>=(vt0.c0))  WHEN (t0.c0 IN (t0.c0)) THEN t0.c0 WHEN (vt0.c0 IN (t0.c1)) THEN ((t0.c2)=('1033643929')) WHEN ((t0.c2) NOT NULL) THEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) ELSE HEX(t0.c1) END GROUP BY t0.c2, vt0.c0, t0.c1, t0.c0;
SELECT ALL t0.c2, vt0.c0, t0.c1, t0.c0 FROM vt0 CROSS JOIN t0 ON CASE ((t0.c2)>=(vt0.c0))  WHEN (t0.c0 IN (t0.c0)) THEN t0.c0 WHEN (vt0.c0 IN (t0.c1)) THEN ((t0.c2)=('1033643929')) WHEN ((t0.c2) NOT NULL) THEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) ELSE HEX(t0.c1) END GROUP BY t0.c2, vt0.c0, t0.c1, t0.c0 HAVING MAX(AVG(t0.c1)) COLLATE NOCASE UNION ALL SELECT ALL t0.c2, vt0.c0, t0.c1, t0.c0 FROM vt0 CROSS JOIN t0 ON CASE ((t0.c2)>=(vt0.c0))  WHEN (t0.c0 IN (t0.c0)) THEN t0.c0 WHEN (vt0.c0 IN (t0.c1)) THEN ((t0.c2)==('1033643929')) WHEN ((t0.c2) NOT NULL) THEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) ELSE HEX(t0.c1) END GROUP BY t0.c2, vt0.c0, t0.c1, t0.c0 HAVING (NOT (MAX(AVG(t0.c1)) COLLATE NOCASE)) UNION ALL SELECT t0.c2, vt0.c0, t0.c1, t0.c0 FROM vt0 CROSS JOIN t0 ON CASE ((t0.c2)>=(vt0.c0))  WHEN (t0.c0 IN (t0.c0)) THEN t0.c0 WHEN (vt0.c0 IN (t0.c1)) THEN ((t0.c2)==('1033643929')) WHEN ((t0.c2) NOT NULL) THEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) ELSE HEX(t0.c1) END GROUP BY t0.c2, vt0.c0, t0.c1, t0.c0 HAVING ((MAX(AVG(t0.c1)) COLLATE NOCASE) ISNULL);
SELECT * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE (LIKELY(CASE WHEN t0.c1 THEN t0.c0 END)) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT (LIKELY(CASE WHEN t0.c1 THEN t0.c0 END)))) UNION ALL SELECT * FROM t0, vt0 WHERE (((LIKELY(CASE WHEN t0.c1 THEN t0.c0 END)) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0, vt0;
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0, vt0 WHERE (UNLIKELY(((t0.c0)!=(t0.c1)))) UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0, vt0 WHERE ((NOT (UNLIKELY(((t0.c0)!=(t0.c1)))))) UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0, vt0 WHERE (((UNLIKELY(((t0.c0)<>(t0.c1)))) ISNULL));
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0, vt0;
SELECT ALL t0.c0, t0.c2, vt0.c0, t0.c1 FROM t0, vt0 GROUP BY t0.c0, t0.c2, vt0.c0, t0.c1;
SELECT ALL t0.c0, t0.c2, vt0.c0, t0.c1 FROM t0, vt0 WHERE ((((- (t0.c2))) ISNULL)) GROUP BY t0.c0, t0.c2, vt0.c0, t0.c1 UNION SELECT ALL t0.c0, t0.c2, vt0.c0, t0.c1 FROM t0, vt0 WHERE ((NOT ((((- (t0.c2))) ISNULL)))) GROUP BY t0.c0, t0.c2, vt0.c0, t0.c1 UNION SELECT ALL t0.c0, t0.c2, vt0.c0, t0.c1 FROM t0, vt0 WHERE ((((((- (t0.c2))) ISNULL)) ISNULL)) GROUP BY t0.c0, t0.c2, vt0.c0, t0.c1;
SELECT ALL t0.c0, t0.c2, vt0.c0, t0.c1 FROM t0, vt0 GROUP BY t0.c0, t0.c2, vt0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING AVG(TOTAL(SUM(COUNT(t0.c0)))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING (NOT (AVG(TOTAL(SUM(COUNT(t0.c0)))))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING ((AVG(TOTAL(SUM(COUNT(t0.c0))))) ISNULL);
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((((t0.c0)) BETWEEN ((NULL COLLATE BINARY)) AND ((LENGTH(t0.c1))))) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) BETWEEN ((NULL COLLATE BINARY)) AND ((LENGTH(t0.c1))))))) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((((((t0.c0)) BETWEEN ((NULL COLLATE BINARY)) AND ((LENGTH(t0.c1))))) ISNULL));
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0;
SELECT DISTINCT t0.c1, t0.c2, vt0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c1, t0.c2, vt0.c0 FROM vt0, t0 WHERE (CASE CASE WHEN t0.c2 THEN t0.c0 END  WHEN ((((t0.c1)AND(t0.c0)))AND(vt0.c0)) THEN ((vt0.c0)>=(t0.c2)) END) UNION SELECT DISTINCT t0.c1, t0.c2, vt0.c0 FROM vt0, t0 WHERE ((NOT (CASE CASE WHEN t0.c2 THEN t0.c0 END  WHEN ((((t0.c1)AND(t0.c0)))AND(vt0.c0)) THEN ((vt0.c0)>=(t0.c2)) END))) UNION SELECT DISTINCT t0.c1, t0.c2, vt0.c0 FROM vt0, t0 WHERE (((CASE CASE WHEN t0.c2 THEN t0.c0 END  WHEN ((((t0.c1)AND(t0.c0)))AND(vt0.c0)) THEN ((vt0.c0)>=(t0.c2)) END) ISNULL));
SELECT DISTINCT t0.c1, t0.c2, vt0.c0 FROM vt0, t0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)<=(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) ISNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)<=(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) ISNULL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)<=(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) ISNULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING 0.3974257815532829 UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (0.3974257815532829)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((0.3974257815532829) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING 0.3974257815532829 UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (0.3974257815532829)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((0.3974257815532829) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (0.2944883656829963) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (0.2944883656829963))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((0.2944883656829963) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT t0.c1, t0.c0, t0.c2, vt0.c0 FROM t0, vt0;
SELECT DISTINCT t0.c1, t0.c0, t0.c2, vt0.c0 FROM t0, vt0 WHERE (((((t0.c0 IN ())))<=((t0.c0)))) UNION SELECT DISTINCT t0.c1, t0.c0, t0.c2, vt0.c0 FROM t0, vt0 WHERE ((NOT (((((t0.c0 IN ())))<=((t0.c0)))))) UNION SELECT DISTINCT t0.c1, t0.c0, t0.c2, vt0.c0 FROM t0, vt0 WHERE (((((((t0.c0 IN ())))<=((t0.c0)))) ISNULL));
SELECT DISTINCT t0.c1, t0.c0, t0.c2, vt0.c0 FROM t0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) BETWEEN (0.7139366702331552) AND (vt0.c0))) NOTNULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (0.7139366702331552) AND (vt0.c0))) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) BETWEEN (0.7139366702331552) AND (vt0.c0))) NOTNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c2, vt0.c0, t0.c1 FROM vt0 LEFT OUTER JOIN t0 ON 'vq3<.I' GROUP BY t0.c2, vt0.c0, t0.c1;
SELECT t0.c2, vt0.c0, t0.c1 FROM vt0 LEFT OUTER JOIN t0 ON 'vq3<.I' GROUP BY t0.c2, vt0.c0, t0.c1 HAVING COUNT(((((GROUP_CONCAT(COUNT(*)))AND(SUM('YF_{y'))))OR(t0.c0))) UNION ALL SELECT ALL t0.c2, vt0.c0, t0.c1 FROM vt0 LEFT OUTER JOIN t0 ON 'vq3<.I' GROUP BY t0.c2, vt0.c0, t0.c1 HAVING (NOT (COUNT(((((GROUP_CONCAT(COUNT(*)))AND(SUM('YF_{y'))))OR(t0.c0))))) UNION ALL SELECT t0.c2, vt0.c0, t0.c1 FROM vt0 LEFT OUTER JOIN t0 ON 'vq3<.I' GROUP BY t0.c2, vt0.c0, t0.c1 HAVING ((COUNT(((((GROUP_CONCAT(COUNT(*)))AND(SUM('YF_{y'))))OR(t0.c0)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CASE (NULL IN ())  WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (vt0.c0 IN ()) END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE (NULL IN ())  WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (vt0.c0 IN ()) END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE (NULL IN ())  WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (vt0.c0 IN ()) END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT ((t0.c2 IN (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT ((NOT ((t0.c2 IN (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((((NOT ((t0.c2 IN (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT t0.c1, vt0.c0, t0.c0, t0.c2 FROM t0, vt0 GROUP BY t0.c1, vt0.c0, t0.c0, t0.c2;
SELECT ALL t0.c1, vt0.c0, t0.c0, t0.c2 FROM t0, vt0 WHERE ('n,') GROUP BY t0.c1, vt0.c0, t0.c0, t0.c2 UNION SELECT t0.c1, vt0.c0, t0.c0, t0.c2 FROM t0, vt0 WHERE ((NOT ('n,'))) GROUP BY t0.c1, vt0.c0, t0.c0, t0.c2 UNION SELECT ALL t0.c1, vt0.c0, t0.c0, t0.c2 FROM t0, vt0 WHERE ((('n,') ISNULL)) GROUP BY t0.c1, vt0.c0, t0.c0, t0.c2;
SELECT t0.c1, vt0.c0, t0.c0, t0.c2 FROM t0, vt0 GROUP BY t0.c1, vt0.c0, t0.c0, t0.c2;
SELECT ALL t0.c2 FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0 COLLATE NOCASE)OR('')))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c2)))) GROUP BY t0.c2;
SELECT t0.c2 FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0 COLLATE NOCASE)OR('')))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c2)))) GROUP BY t0.c2 HAVING ((((TOTAL(MIN(COUNT(*))))+(COUNT(*))))>>(AVG(COUNT(COUNT(*))))) UNION ALL SELECT t0.c2 FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0 COLLATE NOCASE)OR('')))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c2)))) GROUP BY t0.c2 HAVING (NOT (((((TOTAL(MIN(COUNT(*))))+(COUNT(*))))>>(AVG(COUNT(COUNT(*))))))) UNION ALL SELECT t0.c2 FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0 COLLATE NOCASE)OR('')))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c2)))) GROUP BY t0.c2 HAVING ((((((TOTAL(MIN(COUNT(*))))+(COUNT(*))))>>(AVG(COUNT(COUNT(*)))))) ISNULL);
SELECT ALL t0.c0, t0.c2, t0.c1, vt0.c0 FROM vt0, t0;
SELECT ALL t0.c0, t0.c2, t0.c1, vt0.c0 FROM vt0, t0 WHERE ((NOT ((((t0.c1, t0.c0, t0.c1, t0.c0, t0.c1)) NOT BETWEEN ((vt0.c0, t0.c2, t0.c0, t0.c2, vt0.c0)) AND ((t0.c2, 0.3935936726376661, t0.c1, vt0.c0, t0.c1)))))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1, vt0.c0 FROM vt0, t0 WHERE ((NOT ((NOT ((((t0.c1, t0.c0, t0.c1, t0.c0, t0.c1)) NOT BETWEEN ((vt0.c0, t0.c2, t0.c0, t0.c2, vt0.c0)) AND ((t0.c2, 0.3935936726376661, t0.c1, vt0.c0, t0.c1)))))))) UNION ALL SELECT t0.c0, t0.c2, t0.c1, vt0.c0 FROM vt0, t0 WHERE ((((NOT ((((t0.c1, t0.c0, t0.c1, t0.c0, t0.c1)) NOT BETWEEN ((vt0.c0, t0.c2, t0.c0, t0.c2, vt0.c0)) AND ((t0.c2, 0.3935936726376661, t0.c1, vt0.c0, t0.c1)))))) ISNULL));
SELECT ALL t0.c0, t0.c2, t0.c1, vt0.c0 FROM vt0, t0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (((((t0.c1)||(t0.c1))) NOT NULL)) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (((((t0.c1)||(t0.c1))) NOT NULL)))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((((((t0.c1)||(t0.c1))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)+(vt0.c0)))OR(((vt0.c0)>=(vt0.c0)))))OR((vt0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)+(vt0.c0)))OR(((vt0.c0)>=(vt0.c0)))))OR((vt0.c0 IN ())))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)+(vt0.c0)))OR(((vt0.c0)>=(vt0.c0)))))OR((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(TOTAL(COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(TOTAL(COUNT(*))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(TOTAL(COUNT(*)))) ISNULL);
SELECT MAX(((CASE 'wx|	|㷲j\r{'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<<(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) FROM vt0;
SELECT t0.c0, t0.c1, vt0.c0, t0.c2 FROM t0, vt0;
SELECT ALL t0.c0, t0.c1, vt0.c0, t0.c2 FROM t0, vt0 WHERE (((CAST(t0.c2 AS REAL)) IS FALSE)) UNION ALL SELECT t0.c0, t0.c1, vt0.c0, t0.c2 FROM t0, vt0 WHERE ((NOT (((CAST(t0.c2 AS REAL)) IS FALSE)))) UNION ALL SELECT ALL t0.c0, t0.c1, vt0.c0, t0.c2 FROM t0, vt0 WHERE (((((CAST(t0.c2 AS REAL)) IS FALSE)) ISNULL));
SELECT t0.c0, t0.c1, vt0.c0, t0.c2 FROM t0, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN t0.c2 THEN t0.c1 ELSE '-973987917' END)GLOB(((t0.c0)OR(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((CASE WHEN t0.c2 THEN t0.c1 ELSE '-973987917' END)GLOB(((t0.c0)OR(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((CASE WHEN t0.c2 THEN t0.c1 ELSE '-973987917' END)GLOB(((t0.c0)OR(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) NOTNULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 END) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 END) NOTNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c1, t0.c0, t0.c2 FROM t0, vt0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0, vt0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (((((COUNT(t0.c2))-(TOTAL(COUNT(*))))))!=((MAX(t0.c2)))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0, vt0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (NOT ((((((COUNT(t0.c2))-(TOTAL(COUNT(*))))))!=((MAX(t0.c2)))))) UNION ALL SELECT t0.c1, t0.c0, t0.c2 FROM t0, vt0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (((((((COUNT(t0.c2))-(TOTAL(COUNT(*))))))<>((MAX(t0.c2))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN UPPER(NULL) THEN ((vt0.c0)-(vt0.c0)) WHEN rtreenode(vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 END) ORDER BY CASE WHEN vt0.c0 THEN ((NULL)>(vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN json_valid(vt0.c0) WHEN CAST(vt0.c0 AS NUMERIC) THEN (vt0.c0 IN ()) ELSE (NOT (vt0.c0)) END  NULLS FIRST;
SELECT * FROM vt0 WHERE ((NOT (CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN UPPER(NULL) THEN ((vt0.c0)-(vt0.c0)) WHEN rtreenode(vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 END))) ORDER BY CASE WHEN vt0.c0 THEN ((NULL)>(vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN json_valid(vt0.c0) WHEN CAST(vt0.c0 AS NUMERIC) THEN (vt0.c0 IN ()) ELSE (NOT (vt0.c0)) END  NULLS FIRST;
SELECT * FROM vt0 WHERE (((CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN UPPER(NULL) THEN ((vt0.c0)-(vt0.c0)) WHEN rtreenode(vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 END) ISNULL)) ORDER BY CASE WHEN vt0.c0 THEN ((NULL)>(vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN json_valid(vt0.c0) WHEN CAST(vt0.c0 AS NUMERIC) THEN (vt0.c0 IN ()) ELSE (NOT (vt0.c0)) END  NULLS FIRST;
SELECT ALL * FROM vt0;
SELECT DISTINCT t0.c0, vt0.c0, t0.c1 FROM vt0, t0;
SELECT DISTINCT t0.c0, vt0.c0, t0.c1 FROM vt0, t0 WHERE (((((t0.c2) BETWEEN (vt0.c0) AND (t0.c0))) NOT NULL)) UNION SELECT DISTINCT t0.c0, vt0.c0, t0.c1 FROM vt0, t0 WHERE ((NOT (((((t0.c2) BETWEEN (vt0.c0) AND (t0.c0))) NOT NULL)))) UNION SELECT DISTINCT t0.c0, vt0.c0, t0.c1 FROM vt0, t0 WHERE (((((((t0.c2) BETWEEN (vt0.c0) AND (t0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0, t0.c1 FROM vt0, t0;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 WHERE (((((((((((t0.c1)AND(t0.c1)))OR(t0.c1)))AND(3.25857863E8)))AND(0.17399214751387093)))IS(((t0.c0)<<(t0.c0))))) GROUP BY t0.c0, t0.c2, t0.c1 UNION SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((NOT (((((((((((t0.c1)AND(t0.c1)))OR(t0.c1)))AND(3.25857863E8)))AND(0.17399214751387093)))IS(((t0.c0)<<(t0.c0))))))) GROUP BY t0.c0, t0.c2, t0.c1 UNION SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE (((((((((((((t0.c1)AND(t0.c1)))OR(t0.c1)))AND(3.25857863E8)))AND(0.17399214751387093)))IS(((t0.c0)<<(t0.c0))))) ISNULL)) GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT ALL t0.c2 FROM t0, vt0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0, vt0 GROUP BY t0.c2 HAVING COUNT(*) UNION ALL SELECT ALL t0.c2 FROM t0, vt0 GROUP BY t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2 FROM t0, vt0 GROUP BY t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c2 FROM t0, vt0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0, vt0 GROUP BY t0.c2 HAVING COUNT(*) UNION ALL SELECT ALL t0.c2 FROM t0, vt0 GROUP BY t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2 FROM t0, vt0 GROUP BY t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c2 FROM t0, vt0 GROUP BY t0.c2;
SELECT ALL t0.c2, t0.c1 FROM t0;
SELECT ALL t0.c2, t0.c1 FROM t0 WHERE (t0.c2 COLLATE RTRIM) UNION ALL SELECT t0.c2, t0.c1 FROM t0 WHERE ((NOT (t0.c2 COLLATE RTRIM))) UNION ALL SELECT t0.c2, t0.c1 FROM t0 WHERE (((t0.c2 COLLATE RTRIM) ISNULL));
SELECT ALL t0.c2, t0.c1 FROM t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)GLOB(vt0.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)GLOB(vt0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c1, t0.c0, t0.c2, vt0.c0 FROM vt0, t0 GROUP BY t0.c1, t0.c0, t0.c2, vt0.c0;
SELECT t0.c1, t0.c0, t0.c2, vt0.c0 FROM vt0 NOT INDEXED, t0 WHERE (t0.c2) GROUP BY t0.c1, t0.c0, t0.c2, vt0.c0 UNION SELECT t0.c1, t0.c0, t0.c2, vt0.c0 FROM vt0, t0 WHERE ((NOT (t0.c2))) GROUP BY t0.c1, t0.c0, t0.c2, vt0.c0 UNION SELECT t0.c1, t0.c0, t0.c2, vt0.c0 FROM vt0, t0 WHERE (((t0.c2) ISNULL)) GROUP BY t0.c1, t0.c0, t0.c2, vt0.c0;
SELECT t0.c1, t0.c0, t0.c2, vt0.c0 FROM vt0, t0 GROUP BY t0.c1, t0.c0, t0.c2, vt0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT ALL * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE BINARY) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT (CAST(t0.c0 AS INTEGER) COLLATE BINARY))) UNION ALL SELECT * FROM vt0, t0 WHERE (((CAST(t0.c0 AS INTEGER) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT t0.c1 FROM vt0, t0;
SELECT DISTINCT t0.c1 FROM vt0, t0 WHERE (((((((((((vt0.c0)OR(t0.c2)))OR(t0.c1)))AND(t0.c2)))OR(t0.c0)))>=(((t0.c0) NOTNULL)))) UNION SELECT DISTINCT t0.c1 FROM vt0, t0 WHERE ((NOT (((((((((((vt0.c0)OR(t0.c2)))OR(t0.c1)))AND(t0.c2)))OR(t0.c0)))>=(((t0.c0) NOTNULL)))))) UNION SELECT DISTINCT t0.c1 FROM vt0, t0 WHERE (((((((((((((vt0.c0)OR(t0.c2)))OR(t0.c1)))AND(t0.c2)))OR(t0.c0)))>=(((t0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT t0.c1 FROM vt0, t0;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0 WHERE (((x'') NOT BETWEEN (((t0.c0) IS TRUE)) AND (((t0.c2)IS NOT(t0.c1))))) GROUP BY t0.c1, t0.c0 UNION SELECT ALL t0.c1, t0.c0 FROM t0 WHERE ((NOT (((x'') NOT BETWEEN (((t0.c0) IS TRUE)) AND (((t0.c2)IS NOT(t0.c1))))))) GROUP BY t0.c1, t0.c0 UNION SELECT t0.c1, t0.c0 FROM t0 WHERE (((((x'') NOT BETWEEN (((t0.c0) IS TRUE)) AND (((t0.c2)IS NOT(t0.c1))))) ISNULL)) GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0, vt0.c0 FROM t0 NOT INDEXED LEFT OUTER JOIN vt0 ON (~ ((t0.c2 IN (vt0.c0)))) GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0;
SELECT t0.c2, t0.c1, t0.c0, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (~ ((t0.c2 IN (vt0.c0)))) GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0 HAVING ((MIN(t0.c2))>=(MAX(vt0.c0))) UNION ALL SELECT t0.c2, t0.c1, t0.c0, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (~ ((t0.c2 IN (vt0.c0)))) GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0 HAVING (NOT (((MIN(t0.c2))>=(MAX(vt0.c0))))) UNION ALL SELECT t0.c2, t0.c1, t0.c0, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (~ ((t0.c2 IN (vt0.c0)))) GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0 HAVING ((((MIN(t0.c2))>=(MAX(vt0.c0)))) ISNULL);
SELECT ALL t0.c2, t0.c1, t0.c0, vt0.c0 FROM t0 NOT INDEXED LEFT OUTER JOIN vt0 ON (~ ((t0.c2 IN (vt0.c0)))) GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0;
SELECT t0.c2, t0.c1, t0.c0, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (~ ((t0.c2 IN (vt0.c0)))) GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0 HAVING ((MIN(t0.c2))>=(MAX(vt0.c0))) UNION ALL SELECT t0.c2, t0.c1, t0.c0, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (~ ((t0.c2 IN (vt0.c0)))) GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0 HAVING (NOT (((MIN(t0.c2))>=(MAX(vt0.c0))))) UNION ALL SELECT t0.c2, t0.c1, t0.c0, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (~ ((t0.c2 IN (vt0.c0)))) GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0 HAVING ((((MIN(t0.c2))>=(MAX(vt0.c0)))) ISNULL);
SELECT ALL t0.c2, t0.c1, t0.c0, vt0.c0 FROM t0 NOT INDEXED LEFT OUTER JOIN vt0 ON (~ ((t0.c2 IN (vt0.c0)))) GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0;
SELECT SUM((((((t0.c2, t0.c0, t0.c1))<>((t0.c1, t0.c2, t0.c2))))||(t0.c1 COLLATE RTRIM))) FROM t0;
SELECT ALL * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE ('1727989403') UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT ('1727989403'))) UNION ALL SELECT * FROM t0, vt0 WHERE ((('1727989403') ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT t0.c0, t0.c1 FROM vt0 NATURAL JOIN t0;
SELECT DISTINCT t0.c0, t0.c1 FROM vt0 NATURAL JOIN t0 WHERE (CASE WHEN (~ (t0.c0)) THEN TRIM(t0.c0) WHEN ((t0.c2) ISNULL) THEN COALESCE(t0.c2, t0.c2) WHEN ((vt0.c0)<=('>/i(N')) THEN ((t0.c1) IS TRUE) ELSE x'9693' END) UNION SELECT DISTINCT t0.c0, t0.c1 FROM vt0 NATURAL JOIN t0 WHERE ((NOT (CASE WHEN (~ (t0.c0)) THEN TRIM(t0.c0) WHEN ((t0.c2) ISNULL) THEN COALESCE(t0.c2, t0.c2) WHEN ((vt0.c0)<=('>/i(N')) THEN ((t0.c1) IS TRUE) ELSE x'9693' END))) UNION SELECT DISTINCT t0.c0, t0.c1 FROM vt0 NATURAL JOIN t0 WHERE (((CASE WHEN (~ (t0.c0)) THEN TRIM(t0.c0) WHEN ((t0.c2) ISNULL) THEN COALESCE(t0.c2, t0.c2) WHEN ((vt0.c0)<=('>/i(N')) THEN ((t0.c1) IS TRUE) ELSE x'9693' END) ISNULL));
SELECT DISTINCT t0.c0, t0.c1 FROM vt0 NATURAL JOIN t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CHAR(HEX(DISTINCT vt0.c0), vt0.c0, (vt0.c0 IN (vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CHAR(HEX(DISTINCT vt0.c0), vt0.c0, (vt0.c0 IN (vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CHAR(HEX(DISTINCT vt0.c0), vt0.c0, (vt0.c0 IN (vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(x'28a2')) NOT NULL) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((GROUP_CONCAT(x'28a2')) NOT NULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((GROUP_CONCAT(x'28a2')) NOT NULL)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(x'28a2')) NOT NULL) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((GROUP_CONCAT(x'28a2')) NOT NULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((GROUP_CONCAT(x'28a2')) NOT NULL)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT MAX(((((((((((((t0.c1)AND(t0.c0)))AND(t0.c1)))AND(((NULL)!=(t0.c2)))))AND((- (t0.c1)))))OR(((t0.c2)>>(t0.c0)))))AND((0.555644625087497 IN (t0.c1))))) FROM t0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((x'6dffd4cb')+(0.17874649043321256)))*(vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((x'6dffd4cb')+(0.17874649043321256)))*(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((x'6dffd4cb')+(0.17874649043321256)))*(vt0.c0))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (((vt0.c0 IN (vt0.c0))) NOT BETWEEN (((t0.c0)<(t0.c0))) AND (CASE t0.c2  WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END));
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (((vt0.c0 IN (vt0.c0))) NOT BETWEEN (((t0.c0)<(t0.c0))) AND (CASE t0.c2  WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END)) WHERE ((((t0.c1)) NOT BETWEEN ((((t0.c1)AND(t0.c0)))) AND ((((NULL) BETWEEN (t0.c0) AND (t0.c2)))))) UNION SELECT DISTINCT * FROM t0 NOT INDEXED INNER JOIN vt0 ON (((vt0.c0 IN (vt0.c0))) NOT BETWEEN (((t0.c0)<(t0.c0))) AND (CASE t0.c2  WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END)) WHERE ((NOT ((((t0.c1)) NOT BETWEEN ((((t0.c1)AND(t0.c0)))) AND ((((NULL) BETWEEN (t0.c0) AND (t0.c2)))))))) UNION SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (((vt0.c0 IN (vt0.c0))) NOT BETWEEN (((t0.c0)<(t0.c0))) AND (CASE t0.c2  WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END)) WHERE ((((((t0.c1)) NOT BETWEEN ((((t0.c1)AND(t0.c0)))) AND ((((NULL) BETWEEN (t0.c0) AND (t0.c2)))))) ISNULL));
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (((vt0.c0 IN (vt0.c0))) NOT BETWEEN (((t0.c0)<(t0.c0))) AND (CASE t0.c2  WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END));
SELECT ALL t0.c1, t0.c2, t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c1, t0.c2, t0.c0, vt0.c0;
SELECT t0.c1, t0.c2, t0.c0, vt0.c0 FROM vt0, t0 WHERE (t0.c1) GROUP BY t0.c1, t0.c2, t0.c0, vt0.c0 UNION SELECT ALL t0.c1, t0.c2, t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (t0.c1))) GROUP BY t0.c1, t0.c2, t0.c0, vt0.c0 UNION SELECT ALL t0.c1, t0.c2, t0.c0, vt0.c0 FROM vt0, t0 WHERE (((t0.c1) ISNULL)) GROUP BY t0.c1, t0.c2, t0.c0, vt0.c0;
SELECT ALL t0.c1, t0.c2, t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c1, t0.c2, t0.c0, vt0.c0;
SELECT ALL t0.c2, vt0.c0, t0.c1, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY t0.c2, vt0.c0, t0.c1, t0.c0;
SELECT t0.c2, vt0.c0, t0.c1, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY t0.c2, vt0.c0, t0.c1, t0.c0 HAVING MIN(((t0.c2)>>(AVG(vt0.c0)))) UNION ALL SELECT ALL t0.c2, vt0.c0, t0.c1, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY t0.c2, vt0.c0, t0.c1, t0.c0 HAVING (NOT (MIN(((t0.c2)>>(AVG(vt0.c0)))))) UNION ALL SELECT ALL t0.c2, vt0.c0, t0.c1, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY t0.c2, vt0.c0, t0.c1, t0.c0 HAVING ((MIN(((t0.c2)>>(AVG(vt0.c0))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((COALESCE(vt0.c0, vt0.c0))IS NOT(CAST(vt0.c0 AS BLOB)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((COALESCE(vt0.c0, vt0.c0))IS NOT(CAST(vt0.c0 AS BLOB)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((COALESCE(vt0.c0, vt0.c0))IS NOT(CAST(vt0.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL t0.c2, t0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0, vt0 WHERE (CASE ((t0.c0) IS TRUE)  WHEN (((t0.c0))>((t0.c2))) THEN (((t0.c1))<=((t0.c2))) WHEN t0.c1 THEN ((((((((((((t0.c1)OR(t0.c2)))AND(t0.c2)))OR(t0.c0)))AND(t0.c1)))AND(t0.c2)))OR(vt0.c0)) WHEN (((t0.c1, t0.c2, '981781466')) NOT BETWEEN ((t0.c2, vt0.c0, t0.c2)) AND ((t0.c2, t0.c0, '0.5936909815296858'))) THEN t0.c2 WHEN (t0.c2 IN ()) THEN (((t0.c2, t0.c1, vt0.c0))<((vt0.c0, t0.c0, t0.c2))) WHEN (((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))) THEN ((t0.c2) BETWEEN (t0.c0) AND (t0.c1)) ELSE (((('B[.cQv_')AND(vt0.c0)))AND(vt0.c0)) END) GROUP BY t0.c2, t0.c0 UNION SELECT ALL t0.c2, t0.c0 FROM t0, vt0 WHERE ((NOT (CASE ((t0.c0) IS TRUE)  WHEN (((t0.c0))>((t0.c2))) THEN (((t0.c1))<=((t0.c2))) WHEN t0.c1 THEN ((((((((((((t0.c1)OR(t0.c2)))AND(t0.c2)))OR(t0.c0)))AND(t0.c1)))AND(t0.c2)))OR(vt0.c0)) WHEN (((t0.c1, t0.c2, '981781466')) NOT BETWEEN ((t0.c2, vt0.c0, t0.c2)) AND ((t0.c2, t0.c0, '0.5936909815296858'))) THEN t0.c2 WHEN (t0.c2 IN ()) THEN (((t0.c2, t0.c1, vt0.c0))<((vt0.c0, t0.c0, t0.c2))) WHEN (((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))) THEN ((t0.c2) BETWEEN (t0.c0) AND (t0.c1)) ELSE (((('B[.cQv_')AND(vt0.c0)))AND(vt0.c0)) END))) GROUP BY t0.c2, t0.c0 UNION SELECT ALL t0.c2, t0.c0 FROM t0, vt0 WHERE (((CASE ((t0.c0) IS TRUE)  WHEN (((t0.c0))>((t0.c2))) THEN (((t0.c1))<=((t0.c2))) WHEN t0.c1 THEN ((((((((((((t0.c1)OR(t0.c2)))AND(t0.c2)))OR(t0.c0)))AND(t0.c1)))AND(t0.c2)))OR(vt0.c0)) WHEN (((t0.c1, t0.c2, '981781466')) NOT BETWEEN ((t0.c2, vt0.c0, t0.c2)) AND ((t0.c2, t0.c0, '0.5936909815296858'))) THEN t0.c2 WHEN (t0.c2 IN ()) THEN (((t0.c2, t0.c1, vt0.c0))<((vt0.c0, t0.c0, t0.c2))) WHEN (((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))) THEN ((t0.c2) BETWEEN (t0.c0) AND (t0.c1)) ELSE (((('B[.cQv_')AND(vt0.c0)))AND(vt0.c0)) END) ISNULL)) GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(MAX(AVG(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(MAX(AVG(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(MAX(AVG(vt0.c0)))) ISNULL);
SELECT t0.c0 FROM t0, vt0;
SELECT t0.c0 FROM t0, vt0 WHERE ((~ (CAST(t0.c2 AS INTEGER)))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 WHERE ((NOT ((~ (CAST(t0.c2 AS INTEGER)))))) UNION ALL SELECT t0.c0 FROM t0, vt0 WHERE ((((~ (CAST(t0.c2 AS INTEGER)))) ISNULL));
SELECT t0.c0 FROM t0, vt0;
SELECT DISTINCT t0.c1, vt0.c0, t0.c2, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c1)-(t0.c2)))AND((t0.c0 IN ())));
SELECT DISTINCT t0.c1, vt0.c0, t0.c2, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c1)-(t0.c2)))AND((t0.c0 IN ()))) WHERE ((((+ (t0.c2))) NOT BETWEEN (LIKE('-318214432', vt0.c0)) AND (t0.c2 COLLATE RTRIM))) UNION SELECT DISTINCT t0.c1, vt0.c0, t0.c2, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c1)-(t0.c2)))AND((t0.c0 IN ()))) WHERE ((NOT ((((+ (t0.c2))) NOT BETWEEN (LIKE('-318214432', vt0.c0)) AND (t0.c2 COLLATE RTRIM))))) UNION SELECT DISTINCT t0.c1, vt0.c0, t0.c2, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c1)-(t0.c2)))AND((t0.c0 IN ()))) WHERE ((((((+ (t0.c2))) NOT BETWEEN (LIKE('-318214432', vt0.c0)) AND (t0.c2 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT t0.c1, vt0.c0, t0.c2, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c1)-(t0.c2)))AND((t0.c0 IN ())));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED WHERE (CASE WHEN (vt0.c0 IN ()) THEN NULL ELSE ((vt0.c0)>(vt0.c0)) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN (vt0.c0 IN ()) THEN NULL ELSE ((vt0.c0)>(vt0.c0)) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN (vt0.c0 IN ()) THEN NULL ELSE ((vt0.c0)>(vt0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE WHEN COUNT(COUNT(*)) THEN vt0.c0 ELSE MIN(MIN(vt0.c0)) END COLLATE BINARY UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE WHEN COUNT(COUNT(*)) THEN vt0.c0 ELSE MIN(MIN(vt0.c0)) END COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE WHEN COUNT(COUNT(*)) THEN vt0.c0 ELSE MIN(MIN(vt0.c0)) END COLLATE BINARY) ISNULL);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON t0.c1;
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON t0.c1 WHERE ((((((t0.c0)&('122210033'))))<((((((((((t0.c1)AND('')))OR(vt0.c0)))AND(x'')))AND(t0.c1)))))) UNION ALL SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON t0.c1 WHERE ((NOT ((((((t0.c0)&('122210033'))))<((((((((((t0.c1)AND('')))OR(vt0.c0)))AND(x'')))AND(t0.c1)))))))) UNION ALL SELECT * FROM t0 LEFT OUTER JOIN vt0 ON t0.c1 WHERE ((((((((t0.c0)&('122210033'))))<((((((((((t0.c1)AND('')))OR(vt0.c0)))AND(x'')))AND(t0.c1)))))) ISNULL));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON t0.c1;
SELECT DISTINCT vt0.c0, t0.c0, t0.c1 FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)))-(t0.c2));
SELECT DISTINCT vt0.c0, t0.c0, t0.c1 FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)))-(t0.c2)) WHERE (((NULL) BETWEEN (t0.c0) AND (x'')) COLLATE BINARY) UNION SELECT DISTINCT vt0.c0, t0.c0, t0.c1 FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)))-(t0.c2)) WHERE ((NOT (((NULL) BETWEEN (t0.c0) AND (x'')) COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0, t0.c0, t0.c1 FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)))-(t0.c2)) WHERE (((((NULL) BETWEEN (t0.c0) AND (x'')) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0, t0.c1 FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)))-(t0.c2));
SELECT t0.c0, vt0.c0, t0.c1, t0.c2 FROM t0, vt0 GROUP BY t0.c0, vt0.c0, t0.c1, t0.c2;
SELECT ALL t0.c0, vt0.c0, t0.c1, t0.c2 FROM t0, vt0 WHERE (((t0.c2 COLLATE BINARY) ISNULL)) GROUP BY t0.c0, vt0.c0, t0.c1, t0.c2 UNION SELECT t0.c0, vt0.c0, t0.c1, t0.c2 FROM t0, vt0 WHERE ((NOT (((t0.c2 COLLATE BINARY) ISNULL)))) GROUP BY t0.c0, vt0.c0, t0.c1, t0.c2 UNION SELECT ALL t0.c0, vt0.c0, t0.c1, t0.c2 FROM t0, vt0 WHERE (((((t0.c2 COLLATE BINARY) ISNULL)) ISNULL)) GROUP BY t0.c0, vt0.c0, t0.c1, t0.c2;
SELECT t0.c0, vt0.c0, t0.c1, t0.c2 FROM t0, vt0 GROUP BY t0.c0, vt0.c0, t0.c1, t0.c2;
SELECT t0.c2 FROM t0, vt0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0, vt0 GROUP BY t0.c2 HAVING COUNT(*) UNION ALL SELECT ALL t0.c2 FROM t0, vt0 GROUP BY t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c2 FROM t0, vt0 GROUP BY t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c2 FROM t0, vt0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0, vt0 GROUP BY t0.c2 HAVING COUNT(*) UNION ALL SELECT ALL t0.c2 FROM t0, vt0 GROUP BY t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c2 FROM t0, vt0 GROUP BY t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c2 FROM t0, vt0 GROUP BY t0.c2;
SELECT t0.c1, t0.c2, t0.c0, vt0.c0 FROM vt0, t0;
SELECT t0.c1, t0.c2, t0.c0, vt0.c0 FROM vt0, t0 WHERE (((((TRIM(t0.c0))OR(NULL)))OR((t0.c2 IN ())))) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (((((TRIM(t0.c0))OR(NULL)))OR((t0.c2 IN ())))))) UNION ALL SELECT t0.c1, t0.c2, t0.c0, vt0.c0 FROM vt0, t0 WHERE (((((((TRIM(t0.c0))OR(NULL)))OR((t0.c2 IN ())))) ISNULL));
SELECT t0.c1, t0.c2, t0.c0, vt0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((((((t0.c0))<((t0.c0))))OR((+ (vt0.c0))))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT ((((((t0.c0))<((t0.c0))))OR((+ (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((((((((t0.c0))<((t0.c0))))OR((+ (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0;
SELECT vt0.c0, t0.c1, t0.c0, t0.c2 FROM vt0, t0 GROUP BY vt0.c0, t0.c1, t0.c0, t0.c2;
SELECT ALL vt0.c0, t0.c1, t0.c0, t0.c2 FROM vt0, t0 WHERE (t0.c1 COLLATE BINARY) GROUP BY vt0.c0, t0.c1, t0.c0, t0.c2 UNION SELECT ALL vt0.c0, t0.c1, t0.c0, t0.c2 FROM vt0, t0 WHERE ((NOT (t0.c1 COLLATE BINARY))) GROUP BY vt0.c0, t0.c1, t0.c0, t0.c2 UNION SELECT ALL vt0.c0, t0.c1, t0.c0, t0.c2 FROM vt0, t0 WHERE (((t0.c1 COLLATE BINARY) ISNULL)) GROUP BY vt0.c0, t0.c1, t0.c0, t0.c2;
SELECT vt0.c0, t0.c1, t0.c0, t0.c2 FROM vt0, t0 GROUP BY vt0.c0, t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c2, t0.c1, t0.c0, vt0.c0 FROM t0, vt0 NOT INDEXED GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0 HAVING TOTAL(MIN(COUNT(*))) UNION ALL SELECT t0.c2, t0.c1, t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0 HAVING (NOT (TOTAL(MIN(COUNT(*))))) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0 HAVING ((TOTAL(MIN(COUNT(*)))) ISNULL);
SELECT MAX(t0.c0) FROM t0, vt0;
SELECT ALL * FROM t0 NATURAL JOIN vt0;
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (((LIKELY(t0.c0))LIKE(((vt0.c0) ISNULL)))) UNION ALL SELECT * FROM t0 NATURAL JOIN vt0 WHERE ((NOT (((LIKELY(t0.c0))LIKE(((vt0.c0) ISNULL)))))) UNION ALL SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (((((LIKELY(t0.c0))LIKE(((vt0.c0) ISNULL)))) ISNULL));
SELECT ALL * FROM t0 NATURAL JOIN vt0;
SELECT DISTINCT t0.c2, t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON (t0.c1 COLLATE RTRIM IN (((t0.c2) NOT NULL)));
SELECT DISTINCT t0.c2, t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON (t0.c1 COLLATE RTRIM IN (((t0.c2) NOT NULL))) WHERE (NULLIF(DISTINCT ((((t0.c0)AND(vt0.c0)))AND(t0.c0)), '1324735108')) UNION SELECT DISTINCT t0.c2, t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON (t0.c1 COLLATE RTRIM IN (((t0.c2) NOT NULL))) WHERE ((NOT (NULLIF(DISTINCT ((((t0.c0)AND(vt0.c0)))AND(t0.c0)), '1324735108')))) UNION SELECT DISTINCT t0.c2, t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON (t0.c1 COLLATE RTRIM IN (((t0.c2) NOT NULL))) WHERE (((NULLIF(DISTINCT ((((t0.c0)AND(vt0.c0)))AND(t0.c0)), '1324735108')) ISNULL));
SELECT DISTINCT t0.c2, t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON (t0.c1 COLLATE RTRIM IN (((t0.c2) NOT NULL)));
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 WHERE (t0.c1) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 WHERE ((NOT (t0.c1))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE (((t0.c1) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*))<(COALESCE(COUNT(*), vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*))<(COALESCE(COUNT(*), vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*))<(COALESCE(COUNT(*), vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*))<(COALESCE(COUNT(*), vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*))<(COALESCE(COUNT(*), vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*))<(COALESCE(COUNT(*), vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND (('0.08460509916136205'))))>=(vt0.c0))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND (('0.08460509916136205'))))>=(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND (('0.08460509916136205'))))>=(vt0.c0))) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((NULL IN ())) BETWEEN (0.3312711681905718) AND (((t0.c2)>=(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((NULL IN ())) BETWEEN (0.3312711681905718) AND (((t0.c2)>=(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((NULL IN ())) BETWEEN (0.3312711681905718) AND (((t0.c2)>=(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0, vt0 WHERE (CAST(t0.c1 AS NUMERIC)) GROUP BY t0.c1, t0.c2, t0.c0 UNION SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0, vt0 WHERE ((NOT (CAST(t0.c1 AS NUMERIC)))) GROUP BY t0.c1, t0.c2, t0.c0 UNION SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0, vt0 WHERE (((CAST(t0.c1 AS NUMERIC)) ISNULL)) GROUP BY t0.c1, t0.c2, t0.c0;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING MAX(((t0.c1)/(t0.c2))) UNION ALL SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (NOT (MAX(((t0.c1)/(t0.c2))))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING ((MAX(((t0.c1)/(t0.c2)))) ISNULL);
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING MAX(((t0.c1)/(t0.c2))) UNION ALL SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (NOT (MAX(((t0.c1)/(t0.c2))))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING ((MAX(((t0.c1)/(t0.c2)))) ISNULL);
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((+ (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((+ (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE ((((+ (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0;
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE (((CAST(t0.c2 AS TEXT)) NOT BETWEEN (CASE WHEN 'B4.cQl_' THEN t0.c2 ELSE t0.c2 END) AND (t0.c1 COLLATE BINARY))) UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((NOT (((CAST(t0.c2 AS TEXT)) NOT BETWEEN (CASE WHEN 'B4.cQl_' THEN t0.c2 ELSE t0.c2 END) AND (t0.c1 COLLATE BINARY))))) UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE (((((CAST(t0.c2 AS TEXT)) NOT BETWEEN (CASE WHEN 'B4.cQl_' THEN t0.c2 ELSE t0.c2 END) AND (t0.c1 COLLATE BINARY))) ISNULL));
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0;
SELECT ALL t0.c2 FROM vt0, t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM vt0, t0 WHERE (TYPEOF(((t0.c0)OR(vt0.c0)))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM vt0, t0 WHERE ((NOT (TYPEOF(((t0.c0)OR(vt0.c0)))))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM vt0, t0 WHERE (((TYPEOF(((t0.c0)OR(vt0.c0)))) ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM vt0, t0 GROUP BY t0.c2;
SELECT ALL vt0.c0, t0.c1, t0.c2, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c1, t0.c2, t0.c0;
SELECT ALL vt0.c0, t0.c1, t0.c2, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c1, t0.c2, t0.c0 HAVING GROUP_CONCAT(((COUNT(*)) NOT NULL)) UNION ALL SELECT vt0.c0, t0.c1, t0.c2, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c1, t0.c2, t0.c0 HAVING (NOT (GROUP_CONCAT(((COUNT(*)) NOT NULL)))) UNION ALL SELECT vt0.c0, t0.c1, t0.c2, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c1, t0.c2, t0.c0 HAVING ((GROUP_CONCAT(((COUNT(*)) NOT NULL))) ISNULL);
SELECT ALL SUM(((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT NULL)) FROM vt0 ORDER BY vt0.c0 DESC;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS INTEGER)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT t0.c1, vt0.c0, t0.c2 FROM vt0, t0;
SELECT DISTINCT t0.c1, vt0.c0, t0.c2 FROM vt0, t0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)) UNION SELECT DISTINCT t0.c1, vt0.c0, t0.c2 FROM vt0, t0 WHERE ((NOT (CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)))) UNION SELECT DISTINCT t0.c1, vt0.c0, t0.c2 FROM vt0, t0 WHERE (((CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)) ISNULL));
SELECT DISTINCT t0.c1, vt0.c0, t0.c2 FROM vt0, t0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((+ (vt0.c0))) IS FALSE)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((+ (vt0.c0))) IS FALSE)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((+ (vt0.c0))) IS FALSE)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, t0.c1, t0.c2 FROM t0, vt0 GROUP BY vt0.c0, t0.c1, t0.c2;
SELECT vt0.c0, t0.c1, t0.c2 FROM t0, vt0 GROUP BY vt0.c0, t0.c1, t0.c2 HAVING CAST(GROUP_CONCAT(vt0.c0) AS BLOB) UNION ALL SELECT vt0.c0, t0.c1, t0.c2 FROM t0, vt0 GROUP BY vt0.c0, t0.c1, t0.c2 HAVING (NOT (CAST(GROUP_CONCAT(vt0.c0) AS BLOB))) UNION ALL SELECT vt0.c0, t0.c1, t0.c2 FROM t0 NOT INDEXED, vt0 GROUP BY vt0.c0, t0.c1, t0.c2 HAVING ((CAST(GROUP_CONCAT(vt0.c0) AS BLOB)) ISNULL);
SELECT ALL vt0.c0, t0.c1, t0.c2 FROM t0, vt0 GROUP BY vt0.c0, t0.c1, t0.c2;
SELECT vt0.c0, t0.c1, t0.c2 FROM t0, vt0 GROUP BY vt0.c0, t0.c1, t0.c2 HAVING CAST(GROUP_CONCAT(vt0.c0) AS BLOB) UNION ALL SELECT vt0.c0, t0.c1, t0.c2 FROM t0, vt0 GROUP BY vt0.c0, t0.c1, t0.c2 HAVING (NOT (CAST(GROUP_CONCAT(vt0.c0) AS BLOB))) UNION ALL SELECT vt0.c0, t0.c1, t0.c2 FROM t0 NOT INDEXED, vt0 GROUP BY vt0.c0, t0.c1, t0.c2 HAVING ((CAST(GROUP_CONCAT(vt0.c0) AS BLOB)) ISNULL);
SELECT ALL vt0.c0, t0.c1, t0.c2 FROM t0, vt0 GROUP BY vt0.c0, t0.c1, t0.c2;
SELECT MIN((((((((((((t0.c2)AND(vt0.c0)))OR(t0.c0)))OR(NULL)))AND(t0.c2))))<((t0.c0)))) FROM t0, vt0;
SELECT ALL * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE (((((((t0.c2)OR(t0.c2)))AND(vt0.c0)))IS(((vt0.c0)+(t0.c0))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT (((((((t0.c2)OR(t0.c2)))AND(vt0.c0)))IS(((vt0.c0)+(t0.c0))))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((((((((t0.c2)OR(t0.c2)))AND(vt0.c0)))IS(((vt0.c0)+(t0.c0))))) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((('763152859')-(((vt0.c0) NOTNULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((('763152859')-(((vt0.c0) NOTNULL)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((('763152859')-(((vt0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CASE WHEN ((t0.c1) NOT BETWEEN (x'') AND (x'5a43b5d2')) THEN (((t0.c1))>=((0.47320735380177303))) ELSE t0.c2 COLLATE RTRIM END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CASE WHEN ((t0.c1) NOT BETWEEN (x'') AND (x'5a43b5d2')) THEN (((t0.c1))>=((0.47320735380177303))) ELSE t0.c2 COLLATE RTRIM END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CASE WHEN ((t0.c1) NOT BETWEEN (x'') AND (x'5a43b5d2')) THEN (((t0.c1))>=((0.47320735380177303))) ELSE t0.c2 COLLATE RTRIM END) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING AVG(CAST(COUNT(*) AS BLOB)) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT (AVG(CAST(COUNT(*) AS BLOB)))) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((AVG(CAST(COUNT(*) AS BLOB))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (NULL) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((NULL) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (((((vt0.c0)&(t0.c0)))<>(LENGTH(t0.c0)))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (((((vt0.c0)&(t0.c0)))<>(LENGTH(t0.c0)))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((((((vt0.c0)&(t0.c0)))<>(LENGTH(t0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT vt0.c0, t0.c2, t0.c0, t0.c1 FROM vt0 INNER JOIN t0 ON CASE (- (vt0.c0))  WHEN ((((NULL)OR(vt0.c0)))OR(t0.c0)) THEN 0.687998672434436 ELSE ((x'') IS TRUE) END GROUP BY vt0.c0, t0.c2, t0.c0, t0.c1;
SELECT vt0.c0, t0.c2, t0.c0, t0.c1 FROM vt0 INNER JOIN t0 ON CASE (- (vt0.c0))  WHEN ((((NULL)OR(vt0.c0)))OR(t0.c0)) THEN 0.687998672434436 ELSE ((x'') IS TRUE) END WHERE (CAST(0.4114915071235824 AS TEXT)) GROUP BY vt0.c0, t0.c2, t0.c0, t0.c1 UNION SELECT ALL vt0.c0, t0.c2, t0.c0, t0.c1 FROM vt0 INNER JOIN t0 ON CASE (- (vt0.c0))  WHEN ((((NULL)OR(vt0.c0)))OR(t0.c0)) THEN 0.687998672434436 ELSE ((x'') IS TRUE) END WHERE ((NOT (CAST(0.4114915071235824 AS TEXT)))) GROUP BY vt0.c0, t0.c2, t0.c0, t0.c1 UNION SELECT ALL vt0.c0, t0.c2, t0.c0, t0.c1 FROM vt0 INNER JOIN t0 ON CASE (- (vt0.c0))  WHEN ((((NULL)OR(vt0.c0)))OR(t0.c0)) THEN 0.687998672434436 ELSE ((x'') IS TRUE) END WHERE (((CAST(0.4114915071235824 AS TEXT)) ISNULL)) GROUP BY vt0.c0, t0.c2, t0.c0, t0.c1;
SELECT vt0.c0, t0.c2, t0.c0, t0.c1 FROM vt0 INNER JOIN t0 ON CASE (- (vt0.c0))  WHEN ((((NULL)OR(vt0.c0)))OR(t0.c0)) THEN 0.687998672434436 ELSE ((x'') IS TRUE) END GROUP BY vt0.c0, t0.c2, t0.c0, t0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SQLITE_COMPILEOPTION_USED(vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SQLITE_COMPILEOPTION_USED(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SQLITE_COMPILEOPTION_USED(vt0.c0)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SQLITE_COMPILEOPTION_USED(vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SQLITE_COMPILEOPTION_USED(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SQLITE_COMPILEOPTION_USED(vt0.c0)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(LAST_INSERT_ROWID())))AND(TRIM(vt0.c0, vt0.c0)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(LAST_INSERT_ROWID())))AND(TRIM(vt0.c0, vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(LAST_INSERT_ROWID())))AND(TRIM(vt0.c0, vt0.c0)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0, t0.c2 FROM t0, vt0;
SELECT DISTINCT vt0.c0, t0.c2 FROM t0, vt0 WHERE ((- (t0.c1)) COLLATE BINARY) UNION SELECT DISTINCT vt0.c0, t0.c2 FROM t0, vt0 WHERE ((NOT ((- (t0.c1)) COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0, t0.c2 FROM t0, vt0 WHERE ((((- (t0.c1)) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c0, t0.c2 FROM t0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((((vt0.c0 IN ()))OR(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)>=(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((((((vt0.c0 IN ()))OR(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)>=(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((((((vt0.c0 IN ()))OR(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)>=(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((MAX(SUM(t0.c0)))>=(SUM(COUNT(*)))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (((MAX(SUM(t0.c0)))>=(SUM(COUNT(*)))))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((((MAX(SUM(t0.c0)))>=(SUM(COUNT(*))))) ISNULL);
SELECT ALL t0.c2, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 'RO(%' END)LIKE((((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c2)))));
SELECT ALL t0.c2, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 'RO(%' END)LIKE((((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c2))))) WHERE (vt0.c0) UNION ALL SELECT t0.c2, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 'RO(%' END)LIKE((((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c2))))) WHERE ((NOT (vt0.c0))) UNION ALL SELECT t0.c2, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 'RO(%' END)LIKE((((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c2))))) WHERE (((vt0.c0) ISNULL));
SELECT ALL t0.c2, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 'RO(%' END)LIKE((((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c2)))));
SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0;
SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0 WHERE (t0.c2) UNION SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((NOT (t0.c2))) UNION SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0 WHERE (((t0.c2) ISNULL));
SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), IFNULL(DISTINCT vt0.c0, vt0.c0), CAST(vt0.c0 AS TEXT)))>=((((vt0.c0)IS NOT(vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), 0x1b936b93)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), IFNULL(DISTINCT vt0.c0, vt0.c0), CAST(vt0.c0 AS TEXT)))>=((((vt0.c0)IS NOT(vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), 0X1b936b93)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), IFNULL(DISTINCT vt0.c0, vt0.c0), CAST(vt0.c0 AS TEXT)))>=((((vt0.c0)IS NOT(vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), 0x1b936b93)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c1, t0.c2 FROM t0, vt0 GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0, vt0 GROUP BY t0.c1, t0.c2 HAVING TOTAL(SQLITE_VERSION()) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0, vt0 GROUP BY t0.c1, t0.c2 HAVING (NOT (TOTAL(SQLITE_VERSION()))) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0, vt0 GROUP BY t0.c1, t0.c2 HAVING ((TOTAL(SQLITE_VERSION())) ISNULL);
SELECT ALL t0.c1, t0.c2 FROM t0, vt0 GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0, vt0 GROUP BY t0.c1, t0.c2 HAVING TOTAL(SQLITE_VERSION()) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0, vt0 GROUP BY t0.c1, t0.c2 HAVING (NOT (TOTAL(SQLITE_VERSION()))) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0, vt0 GROUP BY t0.c1, t0.c2 HAVING ((TOTAL(SQLITE_VERSION())) ISNULL);
SELECT ALL t0.c1, t0.c2 FROM t0, vt0 GROUP BY t0.c1, t0.c2;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(TRIM(DISTINCT vt0.c0, '1727989403')))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((CAST(vt0.c0 AS NUMERIC))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(TRIM(DISTINCT vt0.c0, '1727989403')))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((CAST(vt0.c0 AS NUMERIC))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(TRIM(DISTINCT vt0.c0, '1727989403')))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (CASE WHEN CAST(t0.c0 AS INTEGER) THEN (t0.c0 IN ()) END) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (CASE WHEN CAST(t0.c0 AS INTEGER) THEN (t0.c0 IN ()) END))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((CASE WHEN CAST(t0.c0 AS INTEGER) THEN (t0.c0 IN ()) END) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c1) AND ('-63253071')))>>((NOT (t0.c2))))) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (t0.c1) AND ('-63253071')))>>((NOT (t0.c2))))))) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c1) AND ('-63253071')))>>((NOT (t0.c2))))) ISNULL)) GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (- (TOTAL(GROUP_CONCAT(t0.c1)))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT ((- (TOTAL(GROUP_CONCAT(t0.c1)))))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (((- (TOTAL(GROUP_CONCAT(t0.c1))))) ISNULL);
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 WHERE (((COALESCE(DISTINCT t0.c2, t0.c0))AND(CAST(t0.c1 AS REAL)))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((NOT (((COALESCE(DISTINCT t0.c2, t0.c0))AND(CAST(t0.c1 AS REAL)))))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE (((((COALESCE(DISTINCT t0.c2, t0.c0))AND(CAST(t0.c1 AS REAL)))) ISNULL));
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0;
SELECT DISTINCT t0.c1, vt0.c0, t0.c2 FROM vt0, t0;
SELECT DISTINCT t0.c1, vt0.c0, t0.c2 FROM vt0, t0 NOT INDEXED WHERE (LOWER(DISTINCT CAST(vt0.c0 AS TEXT))) UNION SELECT DISTINCT t0.c1, vt0.c0, t0.c2 FROM vt0, t0 WHERE ((NOT (LOWER(DISTINCT CAST(vt0.c0 AS TEXT))))) UNION SELECT DISTINCT t0.c1, vt0.c0, t0.c2 FROM vt0, t0 WHERE (((LOWER(DISTINCT CAST(vt0.c0 AS TEXT))) ISNULL));
SELECT DISTINCT t0.c1, vt0.c0, t0.c2 FROM vt0, t0;
SELECT t0.c2, t0.c1, t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0, vt0.c0 FROM vt0, t0 WHERE ((((((t0.c1) NOT NULL)))=((CAST(t0.c0 AS INTEGER))))) GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0 UNION SELECT t0.c2, t0.c1, t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT ((((((t0.c1) NOT NULL)))=((CAST(t0.c0 AS INTEGER))))))) GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0 UNION SELECT ALL t0.c2, t0.c1, t0.c0, vt0.c0 FROM vt0, t0 WHERE ((((((((t0.c1) NOT NULL)))==((CAST(t0.c0 AS INTEGER))))) ISNULL)) GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0;
SELECT t0.c2, t0.c1, t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(TOTAL(AVG(vt0.c0))))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN SUM(MIN(x'')) END) AND (TOTAL(MAX(GROUP_CONCAT(TOTAL(NULL)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((GROUP_CONCAT(GROUP_CONCAT(TOTAL(AVG(vt0.c0))))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN SUM(MIN(x'')) END) AND (TOTAL(MAX(GROUP_CONCAT(TOTAL(NULL)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((GROUP_CONCAT(GROUP_CONCAT(TOTAL(AVG(vt0.c0))))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN SUM(MIN(x'')) END) AND (TOTAL(MAX(GROUP_CONCAT(TOTAL(NULL))))))) ISNULL);
SELECT vt0.c0, t0.c0, t0.c1, t0.c2 FROM vt0, t0;
SELECT ALL vt0.c0, t0.c0, t0.c1, t0.c2 FROM vt0, t0 WHERE (0.7717384421114204) UNION ALL SELECT ALL vt0.c0, t0.c0, t0.c1, t0.c2 FROM vt0, t0 WHERE ((NOT (0.7717384421114204))) UNION ALL SELECT vt0.c0, t0.c0, t0.c1, t0.c2 FROM vt0, t0 WHERE (((0.7717384421114204) ISNULL));
SELECT vt0.c0, t0.c0, t0.c1, t0.c2 FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN 0xffffffff992fc65c THEN CAST(vt0.c0 AS REAL) ELSE CAST(vt0.c0 AS INTEGER) END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE vt0.c0 COLLATE BINARY  WHEN 0xffffffff992fc65c THEN CAST(vt0.c0 AS REAL) ELSE CAST(vt0.c0 AS INTEGER) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE vt0.c0 COLLATE BINARY  WHEN 0xffffffff992fc65c THEN CAST(vt0.c0 AS REAL) ELSE CAST(vt0.c0 AS INTEGER) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0 WHERE ((((t0.c2, '0.5936909815296858', t0.c1, 'OX5	/', 'i|R[LZ')) BETWEEN ((CAST(t0.c0 AS TEXT), (t0.c0 IN ()), (~ (t0.c0)), ((t0.c0) BETWEEN (t0.c1) AND (t0.c0)), t0.c2 COLLATE NOCASE)) AND (((- (t0.c0)), (NOT (t0.c2)), t0.c1, (t0.c0 IN (t0.c0, t0.c2)), json_extract(t0.c1, t0.c0, t0.c1, t0.c2))))) GROUP BY t0.c2, t0.c0 UNION SELECT ALL t0.c2, t0.c0 FROM t0 WHERE ((NOT ((((t0.c2, '0.5936909815296858', t0.c1, 'OX5	/', 'i|R[LZ')) BETWEEN ((CAST(t0.c0 AS TEXT), (t0.c0 IN ()), (~ (t0.c0)), ((t0.c0) BETWEEN (t0.c1) AND (t0.c0)), t0.c2 COLLATE NOCASE)) AND (((- (t0.c0)), (NOT (t0.c2)), t0.c1, (t0.c0 IN (t0.c0, t0.c2)), json_extract(t0.c1, t0.c0, t0.c1, t0.c2))))))) GROUP BY t0.c2, t0.c0 UNION SELECT ALL t0.c2, t0.c0 FROM t0 WHERE ((((((t0.c2, '0.5936909815296858', t0.c1, 'OX5	/', 'i|R[LZ')) BETWEEN ((CAST(t0.c0 AS TEXT), (t0.c0 IN ()), (~ (t0.c0)), ((t0.c0) BETWEEN (t0.c1) AND (t0.c0)), t0.c2 COLLATE NOCASE)) AND (((- (t0.c0)), (NOT (t0.c2)), t0.c1, (t0.c0 IN (t0.c0, t0.c2)), json_extract(t0.c1, t0.c0, t0.c1, t0.c2))))) ISNULL)) GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING (SUM(SUM(t0.c2)) IN ()) UNION ALL SELECT t0.c0, t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING (NOT ((SUM(SUM(t0.c2)) IN ()))) UNION ALL SELECT t0.c0, t0.c1, t0.c2 FROM vt0, t0 NOT INDEXED GROUP BY t0.c0, t0.c1, t0.c2 HAVING (((SUM(SUM(t0.c2)) IN ())) ISNULL);
SELECT ALL t0.c0, t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING (SUM(SUM(t0.c2)) IN ()) UNION ALL SELECT t0.c0, t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING (NOT ((SUM(SUM(t0.c2)) IN ()))) UNION ALL SELECT t0.c0, t0.c1, t0.c2 FROM vt0, t0 NOT INDEXED GROUP BY t0.c0, t0.c1, t0.c2 HAVING (((SUM(SUM(t0.c2)) IN ())) ISNULL);
SELECT ALL t0.c0, t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE (((((((t0.c2)/(vt0.c0)))OR(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END)))AND(ABS(t0.c2)))) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT (((((((t0.c2)/(vt0.c0)))OR(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END)))AND(ABS(t0.c2)))))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE (((((((((t0.c2)/(vt0.c0)))OR(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END)))AND(ABS(t0.c2)))) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c1 IN (t0.c2)))=(NULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c1 IN (t0.c2)))=(NULL)) WHERE (t0.c1) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c1 IN (t0.c2)))=(NULL)) WHERE ((NOT (t0.c1))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c1 IN (t0.c2)))==(NULL)) WHERE (((t0.c1) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c1 IN (t0.c2)))=(NULL));
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0 WHERE ('2033531608') GROUP BY t0.c2, t0.c0 UNION SELECT ALL t0.c2, t0.c0 FROM t0 WHERE ((NOT ('2033531608'))) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM t0 WHERE ((('2033531608') ISNULL)) GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT vt0.c0, t0.c2, t0.c1, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0, t0.c2, t0.c1, t0.c0;
SELECT ALL vt0.c0, t0.c2, t0.c1, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0, t0.c2, t0.c1, t0.c0 HAVING (+ (MAX(t0.c2))) UNION ALL SELECT ALL vt0.c0, t0.c2, t0.c1, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0, t0.c2, t0.c1, t0.c0 HAVING (NOT ((+ (MAX(t0.c2))))) UNION ALL SELECT vt0.c0, t0.c2, t0.c1, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0, t0.c2, t0.c1, t0.c0 HAVING (((+ (MAX(t0.c2)))) ISNULL);
SELECT vt0.c0, t0.c2, t0.c1, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0, t0.c2, t0.c1, t0.c0;
SELECT ALL vt0.c0, t0.c2, t0.c1, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0, t0.c2, t0.c1, t0.c0 HAVING (+ (MAX(t0.c2))) UNION ALL SELECT ALL vt0.c0, t0.c2, t0.c1, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0, t0.c2, t0.c1, t0.c0 HAVING (NOT ((+ (MAX(t0.c2))))) UNION ALL SELECT vt0.c0, t0.c2, t0.c1, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0, t0.c2, t0.c1, t0.c0 HAVING (((+ (MAX(t0.c2)))) ISNULL);
SELECT vt0.c0, t0.c2, t0.c1, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0, t0.c2, t0.c1, t0.c0;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0;
SELECT t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((t0.c1) NOT NULL)) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((NOT (((t0.c1) NOT NULL)))) UNION ALL SELECT t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((((t0.c1) NOT NULL)) ISNULL));
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0;
SELECT DISTINCT t0.c0, vt0.c0, t0.c2, t0.c1 FROM t0, vt0;
SELECT DISTINCT t0.c0, vt0.c0, t0.c2, t0.c1 FROM t0, vt0 WHERE (CASE WHEN t0.c2 COLLATE BINARY THEN (1.136661901E9 IN ()) END) UNION SELECT DISTINCT t0.c0, vt0.c0, t0.c2, t0.c1 FROM t0, vt0 WHERE ((NOT (CASE WHEN t0.c2 COLLATE BINARY THEN (1.136661901E9 IN ()) END))) UNION SELECT DISTINCT t0.c0, vt0.c0, t0.c2, t0.c1 FROM t0, vt0 WHERE (((CASE WHEN t0.c2 COLLATE BINARY THEN (1.136661901E9 IN ()) END) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0, t0.c2, t0.c1 FROM t0, vt0;
SELECT ALL t0.c1 FROM t0 NOT INDEXED GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 WHERE (((((t0.c0) IS FALSE))<((((t0.c2))<=((t0.c1)))))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0 WHERE ((NOT (((((t0.c0) IS FALSE))<((((t0.c2))<=((t0.c1)))))))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0 WHERE (((((((t0.c0) IS FALSE))<((((t0.c2))<=((t0.c1)))))) ISNULL)) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 NOT INDEXED GROUP BY t0.c1;
SELECT ALL t0.c0, vt0.c0, t0.c2, t0.c1 FROM t0, vt0 GROUP BY t0.c0, vt0.c0, t0.c2, t0.c1;
SELECT ALL t0.c0, vt0.c0, t0.c2, t0.c1 FROM t0, vt0 GROUP BY t0.c0, vt0.c0, t0.c2, t0.c1 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c2, t0.c1 FROM t0, vt0 GROUP BY t0.c0, vt0.c0, t0.c2, t0.c1 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c2, t0.c1 FROM t0, vt0 GROUP BY t0.c0, vt0.c0, t0.c2, t0.c1 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL t0.c1, t0.c2 FROM t0;
SELECT t0.c1, t0.c2 FROM t0 WHERE ((((((((((((((t0.c1)AND(0Xffffffffe319722b)))AND(t0.c1)))AND(t0.c1)))AND(t0.c2)))AND(t0.c1)))AND(0.7134782033359621)) IN (((t0.c0) BETWEEN (t0.c2) AND (t0.c0)), ((t0.c1)OR(t0.c1))))) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0 WHERE ((NOT ((((((((((((((t0.c1)AND(0Xffffffffe319722b)))AND(t0.c1)))AND(t0.c1)))AND(t0.c2)))AND(t0.c1)))AND(0.7134782033359621)) IN (((t0.c0) BETWEEN (t0.c2) AND (t0.c0)), ((t0.c1)OR(t0.c1))))))) UNION ALL SELECT t0.c1, t0.c2 FROM t0 WHERE ((((((((((((((((t0.c1)AND(0xffffffffe319722b)))AND(t0.c1)))AND(t0.c1)))AND(t0.c2)))AND(t0.c1)))AND(0.7134782033359621)) IN (((t0.c0) BETWEEN (t0.c2) AND (t0.c0)), ((t0.c1)OR(t0.c1))))) ISNULL));
SELECT ALL t0.c1, t0.c2 FROM t0;
SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0;
SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0 WHERE (((((((((JULIANDAY('1,?V7\rEZ', t0.c1, t0.c2))OR(t0.c2)))AND(CASE WHEN t0.c0 THEN NULL WHEN '1241754506' THEN t0.c0 WHEN t0.c2 THEN t0.c0 END)))AND(CAST(t0.c1 AS INTEGER))))AND(CASE WHEN t0.c2 THEN t0.c1 END))) UNION SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((NOT (((((((((JULIANDAY('1,?V7\rEZ', t0.c1, t0.c2))OR(t0.c2)))AND(CASE WHEN t0.c0 THEN NULL WHEN '1241754506' THEN t0.c0 WHEN t0.c2 THEN t0.c0 END)))AND(CAST(t0.c1 AS INTEGER))))AND(CASE WHEN t0.c2 THEN t0.c1 END))))) UNION SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0 WHERE (((((((((((JULIANDAY('1,?V7\rEZ', t0.c1, t0.c2))OR(t0.c2)))AND(CASE WHEN t0.c0 THEN NULL WHEN '1241754506' THEN t0.c0 WHEN t0.c2 THEN t0.c0 END)))AND(CAST(t0.c1 AS INTEGER))))AND(CASE WHEN t0.c2 THEN t0.c1 END))) ISNULL));
SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((NULL)!=(vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((NULL)!=(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((NULL)<>(vt0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0, vt0.c0, t0.c2, t0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c2, t0.c1;
SELECT t0.c0, vt0.c0, t0.c2, t0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c2, t0.c1 HAVING (((AVG(MIN(MIN(MIN(t0.c2))))) IS FALSE) IN (TOTAL(MIN(MAX(t0.c0))), ((SUM(GROUP_CONCAT(vt0.c0)))=(t0.c2)))) UNION ALL SELECT t0.c0, vt0.c0, t0.c2, t0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c2, t0.c1 HAVING (NOT ((((AVG(MIN(MIN(MIN(t0.c2))))) IS FALSE) IN (TOTAL(MIN(MAX(t0.c0))), ((SUM(GROUP_CONCAT(vt0.c0)))==(t0.c2)))))) UNION ALL SELECT t0.c0, vt0.c0, t0.c2, t0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c2, t0.c1 HAVING (((((AVG(MIN(MIN(MIN(t0.c2))))) IS FALSE) IN (TOTAL(MIN(MAX(t0.c0))), ((SUM(GROUP_CONCAT(vt0.c0)))==(t0.c2))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, t0;
SELECT ALL vt0.c0 FROM vt0, t0 WHERE (CAST(((t0.c0) NOT NULL) AS BLOB)) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 WHERE ((NOT (CAST(((t0.c0) NOT NULL) AS BLOB)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 WHERE (((CAST(((t0.c0) NOT NULL) AS BLOB)) ISNULL));
SELECT ALL vt0.c0 FROM vt0, t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((- ((vt0.c0 IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((- ((vt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((- ((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, t0.c1 FROM vt0, t0 GROUP BY vt0.c0, t0.c1;
SELECT vt0.c0, t0.c1 FROM vt0, t0 WHERE (((((((t0.c1)OR(vt0.c0)))OR(t0.c0)))>>(NULL))) GROUP BY vt0.c0, t0.c1 UNION SELECT vt0.c0, t0.c1 FROM vt0, t0 WHERE ((NOT (((((((t0.c1)OR(vt0.c0)))OR(t0.c0)))>>(NULL))))) GROUP BY vt0.c0, t0.c1 UNION SELECT ALL vt0.c0, t0.c1 FROM vt0, t0 WHERE (((((((((t0.c1)OR(vt0.c0)))OR(t0.c0)))>>(NULL))) ISNULL)) GROUP BY vt0.c0, t0.c1;
SELECT ALL vt0.c0, t0.c1 FROM vt0, t0 GROUP BY vt0.c0, t0.c1;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (((t0.c0, TOTAL(MIN(t0.c2)), t0.c1)) NOT BETWEEN ((CASE t0.c1  WHEN t0.c1 THEN t0.c2 END, TOTAL(SUM(MAX(t0.c0))), (((t0.c2, t0.c2, t0.c1))<>((t0.c1, MIN(t0.c0), COUNT(t0.c2)))))) AND (((~ (AVG(t0.c2))), ((((((((GROUP_CONCAT(t0.c1))AND(TOTAL(t0.c0))))AND(COUNT(*))))AND(AVG(t0.c0))))AND(MAX(t0.c0))), x''))) UNION ALL SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (NOT ((((t0.c0, TOTAL(MIN(t0.c2)), t0.c1)) NOT BETWEEN ((CASE t0.c1  WHEN t0.c1 THEN t0.c2 END, TOTAL(SUM(MAX(t0.c0))), (((t0.c2, t0.c2, t0.c1))<>((t0.c1, MIN(t0.c0), COUNT(t0.c2)))))) AND (((~ (AVG(t0.c2))), ((((((((GROUP_CONCAT(t0.c1))AND(TOTAL(t0.c0))))AND(COUNT(*))))AND(AVG(t0.c0))))AND(MAX(t0.c0))), x''))))) UNION ALL SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (((((t0.c0, TOTAL(MIN(t0.c2)), t0.c1)) NOT BETWEEN ((CASE t0.c1  WHEN t0.c1 THEN t0.c2 END, TOTAL(SUM(MAX(t0.c0))), (((t0.c2, t0.c2, t0.c1))!=((t0.c1, MIN(t0.c0), COUNT(t0.c2)))))) AND (((~ (AVG(t0.c2))), ((((((((GROUP_CONCAT(t0.c1))AND(TOTAL(t0.c0))))AND(COUNT(*))))AND(AVG(t0.c0))))AND(MAX(t0.c0))), x'')))) ISNULL);
SELECT ALL MIN((((0.3199125281286047))>=((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))) FROM vt0 ORDER BY CAST(((vt0.c0)IS NOT(vt0.c0)) AS BLOB) DESC;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE 'qEptF\'  WHEN vt0.c0 THEN vt0.c0 END THEN '' WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN '640394931' THEN UNLIKELY(vt0.c0) ELSE (((x'', vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE WHEN CASE 'qEptF\'  WHEN vt0.c0 THEN vt0.c0 END THEN '' WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN '640394931' THEN UNLIKELY(vt0.c0) ELSE (((x'', vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE WHEN CASE 'qEptF\'  WHEN vt0.c0 THEN vt0.c0 END THEN '' WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN '640394931' THEN UNLIKELY(vt0.c0) ELSE (((x'', vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0, t0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, t0.c1, vt0.c0;
SELECT ALL t0.c0, t0.c1, vt0.c0 FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN t0.c1 ELSE vt0.c0 END)<=((((vt0.c0, vt0.c0, t0.c1))>=((t0.c1, t0.c1, t0.c1)))))) GROUP BY t0.c0, t0.c1, vt0.c0 UNION SELECT t0.c0, t0.c1, vt0.c0 FROM vt0, t0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN t0.c1 ELSE vt0.c0 END)<=((((vt0.c0, vt0.c0, t0.c1))>=((t0.c1, t0.c1, t0.c1)))))))) GROUP BY t0.c0, t0.c1, vt0.c0 UNION SELECT t0.c0, t0.c1, vt0.c0 FROM vt0, t0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN t0.c1 ELSE vt0.c0 END)<=((((vt0.c0, vt0.c0, t0.c1))>=((t0.c1, t0.c1, t0.c1)))))) ISNULL)) GROUP BY t0.c0, t0.c1, vt0.c0;
SELECT t0.c0, t0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, t0.c1, vt0.c0;
SELECT vt0.c0, t0.c0, t0.c1 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, t0.c1;
SELECT ALL vt0.c0, t0.c0, t0.c1 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, t0.c1 HAVING CAST(COUNT(SUM(t0.c1)) AS BLOB) COLLATE BINARY UNION ALL SELECT ALL vt0.c0, t0.c0, t0.c1 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, t0.c1 HAVING (NOT (CAST(COUNT(SUM(t0.c1)) AS BLOB) COLLATE BINARY)) UNION ALL SELECT vt0.c0, t0.c0, t0.c1 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, t0.c1 HAVING ((CAST(COUNT(SUM(t0.c1)) AS BLOB) COLLATE BINARY) ISNULL);
SELECT ALL MIN((~ (STRFTIME(t0.c2, t0.c2, t0.c2, t0.c1, t0.c1)))) FROM vt0, t0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((- (t0.c1 COLLATE NOCASE))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((- (t0.c1 COLLATE NOCASE))))) UNION ALL SELECT * FROM t0 WHERE ((((- (t0.c1 COLLATE NOCASE))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c0, t0.c2 FROM t0;
SELECT DISTINCT t0.c0, t0.c2 FROM t0 WHERE (((t0.c0 COLLATE NOCASE) IS FALSE)) UNION SELECT DISTINCT t0.c0, t0.c2 FROM t0 WHERE ((NOT (((t0.c0 COLLATE NOCASE) IS FALSE)))) UNION SELECT DISTINCT t0.c0, t0.c2 FROM t0 WHERE (((((t0.c0 COLLATE NOCASE) IS FALSE)) ISNULL));
SELECT DISTINCT t0.c0, t0.c2 FROM t0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))AND(((('4L'))<=((vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)AND(vt0.c0)))AND(((('4L'))<=((vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(((('4L'))<=((vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0, t0.c2, vt0.c0, t0.c1 FROM vt0 FULL OUTER JOIN t0 ON ((t0.c1)>=(t0.c0)) COLLATE RTRIM GROUP BY t0.c0, t0.c2, vt0.c0, t0.c1;
SELECT t0.c0, t0.c2, vt0.c0, t0.c1 FROM vt0 FULL OUTER JOIN t0 ON ((t0.c1)>=(t0.c0)) COLLATE RTRIM GROUP BY t0.c0, t0.c2, vt0.c0, t0.c1 HAVING (- (MAX(AVG(t0.c0)))) UNION ALL SELECT ALL t0.c0, t0.c2, vt0.c0, t0.c1 FROM vt0 FULL OUTER JOIN t0 ON ((t0.c1)>=(t0.c0)) COLLATE RTRIM GROUP BY t0.c0, t0.c2, vt0.c0, t0.c1 HAVING (NOT ((- (MAX(AVG(t0.c0)))))) UNION ALL SELECT t0.c0, t0.c2, vt0.c0, t0.c1 FROM vt0 FULL OUTER JOIN t0 ON ((t0.c1)>=(t0.c0)) COLLATE RTRIM GROUP BY t0.c0, t0.c2, vt0.c0, t0.c1 HAVING (((- (MAX(AVG(t0.c0))))) ISNULL);
SELECT ALL * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE (((0.9194479793544122) BETWEEN (((-7.00319874E8)<=(t0.c2))) AND (t0.c2))) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT (((0.9194479793544122) BETWEEN (((-7.00319874E8)<=(t0.c2))) AND (t0.c2))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((((0.9194479793544122) BETWEEN (((-7.00319874E8)<=(t0.c2))) AND (t0.c2))) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((NOT (LIKELIHOOD(DISTINCT vt0.c0, 0.754697986712979)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((NOT (LIKELIHOOD(DISTINCT vt0.c0, 0.754697986712979)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((NOT (LIKELIHOOD(DISTINCT vt0.c0, 0.754697986712979)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c2, vt0.c0, t0.c1 FROM vt0, t0 GROUP BY t0.c2, vt0.c0, t0.c1;
SELECT t0.c2, vt0.c0, t0.c1 FROM vt0, t0 WHERE (x'') GROUP BY t0.c2, vt0.c0, t0.c1 UNION SELECT ALL t0.c2, vt0.c0, t0.c1 FROM vt0, t0 WHERE ((NOT (x''))) GROUP BY t0.c2, vt0.c0, t0.c1 UNION SELECT ALL t0.c2, vt0.c0, t0.c1 FROM vt0, t0 WHERE (((x'') ISNULL)) GROUP BY t0.c2, vt0.c0, t0.c1;
SELECT t0.c2, vt0.c0, t0.c1 FROM vt0, t0 GROUP BY t0.c2, vt0.c0, t0.c1;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM vt0, t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM vt0, t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING MIN(TOTAL(GROUP_CONCAT(vt0.c0))) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM vt0, t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (NOT (MIN(TOTAL(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM vt0 NOT INDEXED, t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING ((MIN(TOTAL(GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT t0.c1, vt0.c0, t0.c0, t0.c2 FROM t0, vt0;
SELECT ALL t0.c1, vt0.c0, t0.c0, t0.c2 FROM t0, vt0 WHERE ((- (CASE WHEN t0.c0 THEN t0.c2 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN t0.c0 END))) UNION ALL SELECT t0.c1, vt0.c0, t0.c0, t0.c2 FROM t0, vt0 WHERE ((NOT ((- (CASE WHEN t0.c0 THEN t0.c2 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN t0.c0 END))))) UNION ALL SELECT ALL t0.c1, vt0.c0, t0.c0, t0.c2 FROM t0, vt0 WHERE ((((- (CASE WHEN t0.c0 THEN t0.c2 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN t0.c0 END))) ISNULL));
SELECT t0.c1, vt0.c0, t0.c0, t0.c2 FROM t0, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE ((t0.c0) BETWEEN (t0.c2) AND (t0.c0))  WHEN ((t0.c2) IS TRUE) THEN ((((t0.c2)AND(t0.c0)))OR(t0.c0)) ELSE 'vH' END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE ((t0.c0) BETWEEN (t0.c2) AND (t0.c0))  WHEN ((t0.c2) IS TRUE) THEN ((((t0.c2)AND(t0.c0)))OR(t0.c0)) ELSE 'vH' END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE ((t0.c0) BETWEEN (t0.c2) AND (t0.c0))  WHEN ((t0.c2) IS TRUE) THEN ((((t0.c2)AND(t0.c0)))OR(t0.c0)) ELSE 'vH' END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c1, t0.c2, vt0.c0, t0.c0 FROM vt0, t0 GROUP BY t0.c1, t0.c2, vt0.c0, t0.c0;
SELECT t0.c1, t0.c2, vt0.c0, t0.c0 FROM vt0, t0 WHERE (((((t0.c1) NOTNULL)) IS FALSE)) GROUP BY t0.c1, t0.c2, vt0.c0, t0.c0 UNION SELECT t0.c1, t0.c2, vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT (((((t0.c1) NOTNULL)) IS FALSE)))) GROUP BY t0.c1, t0.c2, vt0.c0, t0.c0 UNION SELECT t0.c1, t0.c2, vt0.c0, t0.c0 FROM vt0, t0 WHERE (((((((t0.c1) NOTNULL)) IS FALSE)) ISNULL)) GROUP BY t0.c1, t0.c2, vt0.c0, t0.c0;
SELECT t0.c1, t0.c2, vt0.c0, t0.c0 FROM vt0, t0 GROUP BY t0.c1, t0.c2, vt0.c0, t0.c0;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING AVG(SUM(MAX(SUM(t0.c1)))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (AVG(SUM(MAX(SUM(t0.c1)))))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((AVG(SUM(MAX(SUM(t0.c1))))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((((t0.c0) BETWEEN (2005448995) AND (t0.c2)) IN (((t0.c0) NOT NULL), t0.c2 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((t0.c0) BETWEEN (2005448995) AND (t0.c2)) IN (((t0.c0) NOT NULL), t0.c2 COLLATE NOCASE))))) UNION ALL SELECT * FROM t0 WHERE ((((((t0.c0) BETWEEN (2005448995) AND (t0.c2)) IN (((t0.c0) NOT NULL), t0.c2 COLLATE NOCASE))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (((((t0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (((((t0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((((((t0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 WHERE ((((t0.c1 COLLATE NOCASE, ((t0.c2)|(t0.c2)), (x'18d3' IN (t0.c1)), (((t0.c1, t0.c1, t0.c0, t0.c1, t0.c1)) NOT BETWEEN ((t0.c1, t0.c2, t0.c0, '', t0.c1)) AND ((t0.c2, t0.c2, t0.c1, t0.c1, t0.c1))), CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c2 END))<((((t0.c0) BETWEEN (0.10432013983986477) AND (t0.c2)), (((t0.c0))<((t0.c2))), ((t0.c2)+(t0.c2)), ((t0.c2) BETWEEN (t0.c1) AND (t0.c0)), ((t0.c0) IS FALSE))))) GROUP BY t0.c0, t0.c1 UNION SELECT ALL t0.c0, t0.c1 FROM t0 WHERE ((NOT ((((t0.c1 COLLATE NOCASE, ((t0.c2)|(t0.c2)), (x'18d3' IN (t0.c1)), (((t0.c1, t0.c1, t0.c0, t0.c1, t0.c1)) NOT BETWEEN ((t0.c1, t0.c2, t0.c0, '', t0.c1)) AND ((t0.c2, t0.c2, t0.c1, t0.c1, t0.c1))), CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c2 END))<((((t0.c0) BETWEEN (0.10432013983986477) AND (t0.c2)), (((t0.c0))<((t0.c2))), ((t0.c2)+(t0.c2)), ((t0.c2) BETWEEN (t0.c1) AND (t0.c0)), ((t0.c0) IS FALSE))))))) GROUP BY t0.c0, t0.c1 UNION SELECT ALL t0.c0, t0.c1 FROM t0 WHERE ((((((t0.c1 COLLATE NOCASE, ((t0.c2)|(t0.c2)), (x'18d3' IN (t0.c1)), (((t0.c1, t0.c1, t0.c0, t0.c1, t0.c1)) NOT BETWEEN ((t0.c1, t0.c2, t0.c0, '', t0.c1)) AND ((t0.c2, t0.c2, t0.c1, t0.c1, t0.c1))), CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c2 END))<((((t0.c0) BETWEEN (0.10432013983986477) AND (t0.c2)), (((t0.c0))<((t0.c2))), ((t0.c2)+(t0.c2)), ((t0.c2) BETWEEN (t0.c1) AND (t0.c0)), ((t0.c0) IS FALSE))))) ISNULL)) GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING MAX(SUM(t0.c0)) UNION ALL SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING (NOT (MAX(SUM(t0.c0)))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING ((MAX(SUM(t0.c0))) ISNULL);
SELECT ALL t0.c2 FROM vt0, t0;
SELECT ALL t0.c2 FROM vt0, t0 WHERE ((- (((vt0.c0) IS FALSE)))) UNION ALL SELECT t0.c2 FROM vt0, t0 WHERE ((NOT ((- (((vt0.c0) IS FALSE)))))) UNION ALL SELECT t0.c2 FROM vt0, t0 WHERE ((((- (((vt0.c0) IS FALSE)))) ISNULL));
SELECT ALL t0.c2 FROM vt0, t0;
SELECT DISTINCT vt0.c0, t0.c1 FROM t0, vt0;
SELECT DISTINCT vt0.c0, t0.c1 FROM t0, vt0 WHERE ((((~ (t0.c2)))<>(((vt0.c0)OR(0.9091487291429045))))) UNION SELECT DISTINCT vt0.c0, t0.c1 FROM t0, vt0 WHERE ((NOT ((((~ (t0.c2)))<>(((vt0.c0)OR(0.9091487291429045))))))) UNION SELECT DISTINCT vt0.c0, t0.c1 FROM t0, vt0 WHERE ((((((~ (t0.c2)))!=(((vt0.c0)OR(0.9091487291429045))))) ISNULL));
SELECT DISTINCT vt0.c0, t0.c1 FROM t0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) IS TRUE)) ISNULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) IS TRUE)) ISNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) IS TRUE)) ISNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING TOTAL(MAX(MIN(t0.c0))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (TOTAL(MAX(MIN(t0.c0))))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((TOTAL(MAX(MIN(t0.c0)))) ISNULL);
SELECT ALL SUM(json_array_length(((((((((0.16686089588020292)OR(t0.c0)))AND(vt0.c0)))AND(t0.c2)))OR(0.9567100873537473)), t0.c2)) FROM t0, vt0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((+ (0.940989413236907)))>=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((+ (0.940989413236907)))>=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((+ (0.940989413236907)))>=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT t0.c1 FROM t0, vt0;
SELECT DISTINCT t0.c1 FROM t0, vt0 WHERE ((((((~ (vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))OR(((((t0.c2)AND(t0.c0)))OR(t0.c1))))) UNION SELECT DISTINCT t0.c1 FROM t0, vt0 WHERE ((NOT ((((((~ (vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))OR(((((t0.c2)AND(t0.c0)))OR(t0.c1))))))) UNION SELECT DISTINCT t0.c1 FROM t0, vt0 WHERE ((((((((~ (vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))OR(((((t0.c2)AND(t0.c0)))OR(t0.c1))))) ISNULL));
SELECT DISTINCT t0.c1 FROM t0, vt0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 WHERE (CASE DATETIME(vt0.c0, x'', t0.c1, t0.c2, vt0.c0)  WHEN t0.c2 COLLATE BINARY THEN '' END) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 WHERE ((NOT (CASE DATETIME(vt0.c0, x'', t0.c1, t0.c2, vt0.c0)  WHEN t0.c2 COLLATE BINARY THEN '' END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 WHERE (((CASE DATETIME(vt0.c0, x'', t0.c1, t0.c2, vt0.c0)  WHEN t0.c2 COLLATE BINARY THEN '' END) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT t0.c1, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY t0.c1, vt0.c0, t0.c0;
SELECT t0.c1, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY t0.c1, vt0.c0, t0.c0 HAVING GROUP_CONCAT(CASE TOTAL(SUM(t0.c0))  WHEN TOTAL(t0.c1) THEN t0.c0 ELSE GROUP_CONCAT(SUM(vt0.c0)) END) UNION ALL SELECT ALL t0.c1, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY t0.c1, vt0.c0, t0.c0 HAVING (NOT (GROUP_CONCAT(CASE TOTAL(SUM(t0.c0))  WHEN TOTAL(t0.c1) THEN t0.c0 ELSE GROUP_CONCAT(SUM(vt0.c0)) END))) UNION ALL SELECT t0.c1, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY t0.c1, vt0.c0, t0.c0 HAVING ((GROUP_CONCAT(CASE TOTAL(SUM(t0.c0))  WHEN TOTAL(t0.c1) THEN t0.c0 ELSE GROUP_CONCAT(SUM(vt0.c0)) END)) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL))IS(NULLIF(vt0.c0, vt0.c0)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0) ISNULL))IS(NULLIF(vt0.c0, vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) ISNULL))IS(NULLIF(vt0.c0, vt0.c0)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE CASE t0.c0  WHEN t0.c0 THEN t0.c2 END  WHEN (t0.c0 IN ()) THEN CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END WHEN t0.c0 COLLATE RTRIM THEN t0.c2 COLLATE RTRIM WHEN TYPEOF(t0.c1) THEN ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) ELSE x'' END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE CASE t0.c0  WHEN t0.c0 THEN t0.c2 END  WHEN (t0.c0 IN ()) THEN CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END WHEN t0.c0 COLLATE RTRIM THEN t0.c2 COLLATE RTRIM WHEN TYPEOF(t0.c1) THEN ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) ELSE x'' END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE CASE t0.c0  WHEN t0.c0 THEN t0.c2 END  WHEN (t0.c0 IN ()) THEN CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END WHEN t0.c0 COLLATE RTRIM THEN t0.c2 COLLATE RTRIM WHEN TYPEOF(t0.c1) THEN ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) ELSE x'' END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 WHERE ('*') GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 WHERE ((NOT ('*'))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE ((('*') ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL vt0.c0, t0.c1, t0.c2 FROM t0, vt0 GROUP BY vt0.c0, t0.c1, t0.c2;
SELECT ALL vt0.c0, t0.c1, t0.c2 FROM t0, vt0 GROUP BY vt0.c0, t0.c1, t0.c2 HAVING AVG(((TOTAL(MAX(TOTAL(COUNT(*))))) BETWEEN (COUNT(t0.c2)) AND (t0.c0))) UNION ALL SELECT ALL vt0.c0, t0.c1, t0.c2 FROM t0, vt0 GROUP BY vt0.c0, t0.c1, t0.c2 HAVING (NOT (AVG(((TOTAL(MAX(TOTAL(COUNT(*))))) BETWEEN (COUNT(t0.c2)) AND (t0.c0))))) UNION ALL SELECT ALL vt0.c0, t0.c1, t0.c2 FROM t0, vt0 GROUP BY vt0.c0, t0.c1, t0.c2 HAVING ((AVG(((TOTAL(MAX(TOTAL(COUNT(*))))) BETWEEN (COUNT(t0.c2)) AND (t0.c0)))) ISNULL);
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 WHERE (json_extract('I_/u-wy', (t0.c1 IN ()), 0X74d977c0, (('907208325')|('*cP&')))) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((NOT (json_extract('I_/u-wy', (t0.c1 IN ()), 0x74d977c0, (('907208325')|('*cP&')))))) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 WHERE (((json_extract('I_/u-wy', (t0.c1 IN ()), 0x74d977c0, (('907208325')|('*cP&')))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0 COLLATE BINARY)OR(t0.c0))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c0 COLLATE BINARY)OR(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((t0.c0 COLLATE BINARY)OR(t0.c0))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)>(CAST(vt0.c0 AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE)>(CAST(vt0.c0 AS INTEGER)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)>(CAST(vt0.c0 AS INTEGER)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c2, t0.c0 FROM vt0, t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM vt0, t0 GROUP BY t0.c2, t0.c0 HAVING ((CASE WHEN t0.c1 THEN vt0.c0 WHEN t0.c1 THEN vt0.c0 WHEN 6.74577006E8 THEN SUM(t0.c1) ELSE t0.c0 END)&(MAX(GROUP_CONCAT(SUM(t0.c2))))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM vt0, t0 GROUP BY t0.c2, t0.c0 HAVING (NOT (((CASE WHEN t0.c1 THEN vt0.c0 WHEN t0.c1 THEN vt0.c0 WHEN 6.74577006E8 THEN SUM(t0.c1) ELSE t0.c0 END)&(MAX(GROUP_CONCAT(SUM(t0.c2))))))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM vt0, t0 GROUP BY t0.c2, t0.c0 HAVING ((((CASE WHEN t0.c1 THEN vt0.c0 WHEN t0.c1 THEN vt0.c0 WHEN 6.74577006E8 THEN SUM(t0.c1) ELSE t0.c0 END)&(MAX(GROUP_CONCAT(SUM(t0.c2)))))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)OR(vt0.c0)))) AND ((x'', vt0.c0 COLLATE BINARY, ((0.8498253802465229)/(vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)OR(vt0.c0)))) AND ((x'', vt0.c0 COLLATE BINARY, ((0.8498253802465229)/(vt0.c0)))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)OR(vt0.c0)))) AND ((x'', vt0.c0 COLLATE BINARY, ((0.8498253802465229)/(vt0.c0)))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE ((t0.c0 IN (CAST(vt0.c0 AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT ((t0.c0 IN (CAST(vt0.c0 AS INTEGER)))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((((t0.c0 IN (CAST(vt0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT t0.c0, vt0.c0, t0.c1, t0.c2 FROM t0, vt0 GROUP BY t0.c0, vt0.c0, t0.c1, t0.c2;
SELECT ALL t0.c0, vt0.c0, t0.c1, t0.c2 FROM t0, vt0 WHERE ((((CAST(t0.c2 AS INTEGER)))>=((CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END)))) GROUP BY t0.c0, vt0.c0, t0.c1, t0.c2 UNION SELECT t0.c0, vt0.c0, t0.c1, t0.c2 FROM t0, vt0 WHERE ((NOT ((((CAST(t0.c2 AS INTEGER)))>=((CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END)))))) GROUP BY t0.c0, vt0.c0, t0.c1, t0.c2 UNION SELECT t0.c0, vt0.c0, t0.c1, t0.c2 FROM t0, vt0 WHERE ((((((CAST(t0.c2 AS INTEGER)))>=((CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END)))) ISNULL)) GROUP BY t0.c0, vt0.c0, t0.c1, t0.c2;
SELECT t0.c0, vt0.c0, t0.c1, t0.c2 FROM t0, vt0 GROUP BY t0.c0, vt0.c0, t0.c1, t0.c2;
SELECT t0.c2, t0.c0, vt0.c0, t0.c1 FROM vt0 RIGHT OUTER JOIN t0 ON t0.c1 GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1;
SELECT t0.c2, t0.c0, vt0.c0, t0.c1 FROM vt0 RIGHT OUTER JOIN t0 ON t0.c1 GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1 HAVING ((COUNT(TOTAL(t0.c1))) IS TRUE) UNION ALL SELECT t0.c2, t0.c0, vt0.c0, t0.c1 FROM vt0 RIGHT OUTER JOIN t0 ON t0.c1 GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1 HAVING (NOT (((COUNT(TOTAL(t0.c1))) IS TRUE))) UNION ALL SELECT ALL t0.c2, t0.c0, vt0.c0, t0.c1 FROM vt0 RIGHT OUTER JOIN t0 ON t0.c1 GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1 HAVING ((((COUNT(TOTAL(t0.c1))) IS TRUE)) ISNULL);
SELECT t0.c1, t0.c0, t0.c2 FROM t0;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 WHERE (((t0.c1)OR(PRINTF(t0.c0)))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 WHERE ((NOT (((t0.c1)OR(PRINTF(t0.c0)))))) UNION ALL SELECT t0.c1, t0.c0, t0.c2 FROM t0 WHERE (((((t0.c1)OR(PRINTF(t0.c0)))) ISNULL));
SELECT t0.c1, t0.c0, t0.c2 FROM t0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (((((t0.c2)=(vt0.c0)))>=(UPPER(t0.c0)))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (((((t0.c2)=(vt0.c0)))>=(UPPER(t0.c0)))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((((((t0.c2)=(vt0.c0)))>=(UPPER(t0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT ALL t0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c2, vt0.c0;
SELECT ALL t0.c2, vt0.c0 FROM t0, vt0 WHERE (CASE t0.c2  WHEN vt0.c0 THEN t0.c0 WHEN t0.c2 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END COLLATE BINARY) GROUP BY t0.c2, vt0.c0 UNION SELECT ALL t0.c2, vt0.c0 FROM t0, vt0 WHERE ((NOT (CASE t0.c2  WHEN vt0.c0 THEN t0.c0 WHEN t0.c2 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END COLLATE BINARY))) GROUP BY t0.c2, vt0.c0 UNION SELECT ALL t0.c2, vt0.c0 FROM t0, vt0 WHERE (((CASE t0.c2  WHEN vt0.c0 THEN t0.c0 WHEN t0.c2 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END COLLATE BINARY) ISNULL)) GROUP BY t0.c2, vt0.c0;
SELECT ALL t0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c2, vt0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0, t0.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0, t0.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL * FROM vt0 CROSS JOIN t0 ON (((t0.c0)) NOT BETWEEN ((((t0.c1) NOTNULL))) AND (((vt0.c0 IN ()))));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON (((t0.c0)) NOT BETWEEN ((((t0.c1) NOTNULL))) AND (((vt0.c0 IN ())))) WHERE (CASE CAST(t0.c2 AS BLOB)  WHEN t0.c0 COLLATE NOCASE THEN CASE t0.c2  WHEN 1136661901 THEN vt0.c0 ELSE t0.c1 END ELSE (~ (vt0.c0)) END) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN t0 ON (((t0.c0)) NOT BETWEEN ((((t0.c1) NOTNULL))) AND (((vt0.c0 IN ())))) WHERE ((NOT (CASE CAST(t0.c2 AS BLOB)  WHEN t0.c0 COLLATE NOCASE THEN CASE t0.c2  WHEN 1136661901 THEN vt0.c0 ELSE t0.c1 END ELSE (~ (vt0.c0)) END))) UNION ALL SELECT * FROM vt0 CROSS JOIN t0 ON (((t0.c0)) NOT BETWEEN ((((t0.c1) NOTNULL))) AND (((vt0.c0 IN ())))) WHERE (((CASE CAST(t0.c2 AS BLOB)  WHEN t0.c0 COLLATE NOCASE THEN CASE t0.c2  WHEN 1136661901 THEN vt0.c0 ELSE t0.c1 END ELSE (~ (vt0.c0)) END) ISNULL));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON (((t0.c0)) NOT BETWEEN ((((t0.c1) NOTNULL))) AND (((vt0.c0 IN ()))));
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (((CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c2 END) IS FALSE)) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c2 END) IS FALSE)))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((((CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c2 END) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((((+ (vt0.c0)))OR(((vt0.c0)-(vt0.c0)))))OR(((vt0.c0)&(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((+ (vt0.c0)))OR(((vt0.c0)-(vt0.c0)))))OR(((vt0.c0)&(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((((+ (vt0.c0)))OR(((vt0.c0)-(vt0.c0)))))OR(((vt0.c0)&(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c2, vt0.c0, t0.c1 FROM t0 CROSS JOIN vt0 ON x'' GROUP BY t0.c2, vt0.c0, t0.c1;
SELECT ALL t0.c2, vt0.c0, t0.c1 FROM t0 CROSS JOIN vt0 ON x'' GROUP BY t0.c2, vt0.c0, t0.c1 HAVING TOTAL(t0.c2 COLLATE BINARY) UNION ALL SELECT t0.c2, vt0.c0, t0.c1 FROM t0 CROSS JOIN vt0 ON x'' GROUP BY t0.c2, vt0.c0, t0.c1 HAVING (NOT (TOTAL(t0.c2 COLLATE BINARY))) UNION ALL SELECT ALL t0.c2, vt0.c0, t0.c1 FROM t0 CROSS JOIN vt0 ON x'' GROUP BY t0.c2, vt0.c0, t0.c1 HAVING ((TOTAL(t0.c2 COLLATE BINARY)) ISNULL);
SELECT t0.c2, vt0.c0, t0.c1 FROM t0 CROSS JOIN vt0 ON x'' GROUP BY t0.c2, vt0.c0, t0.c1;
SELECT ALL t0.c2, vt0.c0, t0.c1 FROM t0 CROSS JOIN vt0 ON x'' GROUP BY t0.c2, vt0.c0, t0.c1 HAVING TOTAL(t0.c2 COLLATE BINARY) UNION ALL SELECT t0.c2, vt0.c0, t0.c1 FROM t0 CROSS JOIN vt0 ON x'' GROUP BY t0.c2, vt0.c0, t0.c1 HAVING (NOT (TOTAL(t0.c2 COLLATE BINARY))) UNION ALL SELECT ALL t0.c2, vt0.c0, t0.c1 FROM t0 CROSS JOIN vt0 ON x'' GROUP BY t0.c2, vt0.c0, t0.c1 HAVING ((TOTAL(t0.c2 COLLATE BINARY)) ISNULL);
SELECT t0.c2, vt0.c0, t0.c1 FROM t0 CROSS JOIN vt0 ON x'' GROUP BY t0.c2, vt0.c0, t0.c1;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)>=(vt0.c0)))) AND (((vt0.c0 IN ()))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((vt0.c0)>=(vt0.c0)))) AND (((vt0.c0 IN ()))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((((vt0.c0)>=(vt0.c0)))) AND (((vt0.c0 IN ()))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NULL IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((NULL IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((NULL IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL t0.c0, t0.c2, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, t0.c2, vt0.c0;
SELECT t0.c0, t0.c2, vt0.c0 FROM vt0, t0 WHERE (((TIME(t0.c0, '1477869206', t0.c2))IS NOT(((t0.c1)GLOB(t0.c1))))) GROUP BY t0.c0, t0.c2, vt0.c0 UNION SELECT ALL t0.c0, t0.c2, vt0.c0 FROM vt0, t0 WHERE ((NOT (((TIME(t0.c0, '1477869206', t0.c2))IS NOT(((t0.c1)GLOB(t0.c1))))))) GROUP BY t0.c0, t0.c2, vt0.c0 UNION SELECT ALL t0.c0, t0.c2, vt0.c0 FROM vt0, t0 WHERE (((((TIME(t0.c0, '1477869206', t0.c2))IS NOT(((t0.c1)GLOB(t0.c1))))) ISNULL)) GROUP BY t0.c0, t0.c2, vt0.c0;
SELECT ALL t0.c0, t0.c2, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, t0.c2, vt0.c0;
SELECT ALL t0.c0, vt0.c0, t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c1, t0.c2;
SELECT t0.c0, vt0.c0, t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c1, t0.c2 HAVING TOTAL(GROUP_CONCAT(t0.c1)) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c1, t0.c2 HAVING (NOT (TOTAL(GROUP_CONCAT(t0.c1)))) UNION ALL SELECT t0.c0, vt0.c0, t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c1, t0.c2 HAVING ((TOTAL(GROUP_CONCAT(t0.c1))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((((vt0.c0)<=(vt0.c0)))AND((((vt0.c0, vt0.c0, x''))>((vt0.c0, vt0.c0, vt0.c0))))))OR((+ (vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((((vt0.c0)<=(vt0.c0)))AND((((vt0.c0, vt0.c0, x''))>((vt0.c0, vt0.c0, vt0.c0))))))OR((+ (vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((((vt0.c0)<=(vt0.c0)))AND((((vt0.c0, vt0.c0, x''))>((vt0.c0, vt0.c0, vt0.c0))))))OR((+ (vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN TRIM(DISTINCT t0.c2, t0.c1) THEN CAST(t0.c1 AS INTEGER) ELSE ((t0.c2)>>(t0.c1)) END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE WHEN TRIM(DISTINCT t0.c2, t0.c1) THEN CAST(t0.c1 AS INTEGER) ELSE ((t0.c2)>>(t0.c1)) END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN TRIM(DISTINCT t0.c2, t0.c1) THEN CAST(t0.c1 AS INTEGER) ELSE ((t0.c2)>>(t0.c1)) END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 WHERE ((((((((((((t0.c0)AND(vt0.c0)))AND(t0.c2)))AND(t0.c0)))OR(t0.c0))))<>((((vt0.c0)*(t0.c1)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt0 WHERE ((NOT ((((((((((((t0.c0)AND(vt0.c0)))AND(t0.c2)))AND(t0.c0)))OR(t0.c0))))!=((((vt0.c0)*(t0.c1)))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 NOT INDEXED, vt0 WHERE ((((((((((((((t0.c0)AND(vt0.c0)))AND(t0.c2)))AND(t0.c0)))OR(t0.c0))))<>((((vt0.c0)*(t0.c1)))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0;
