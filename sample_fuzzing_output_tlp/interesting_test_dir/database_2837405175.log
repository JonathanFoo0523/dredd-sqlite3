-- Time: 2024/06/13 04:23:21
-- Database: database75
-- Database version: 3.40.0
-- seed value: 2837405175
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA automatic_index; -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c4, c3, c1) VALUES (NULL, x'7156', -739546643, 0xffffffffd3eb69ed); -- 1ms;
INSERT OR FAIL INTO rt0(c3, c4, c0) VALUES (x'', NULL, ''); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ABORT INTO rt0(c0, c4, c3) VALUES ('-739546643', '', '-739546643'); -- 0ms;
ANALYZE; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt0 SET c3=x''; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c4) VALUES (x'f3ac', '1527841103'); -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c4, c1) VALUES (0.705174192713821, '-739546643', NULL), (x'a638', x'', '1062023360'), (0.5382983980209851, '-940340757', x'c010'), ('-739546643', 0.22521850846056268, '1'), (0.705174192713821, x'', 0x1ade8264); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c1, c3, c0) VALUES (NULL, x'', 0.7954179784368076, x''), (NULL, x'ab1f', 0x5b11014f, x'fb97'), (0.2169635566519289, '\됆ダHqmd', x'', 'S 祿NACtTx'); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c0) VALUES (x'', x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c1, c0) VALUES (x'f5fee272', NULL, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c3) VALUES ('Cw8a', 0.2641104701681135); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM rt0 WHERE ((((x'146d') ISNULL))>>(((rt0.c1) NOT BETWEEN ('1940867522') AND (rt0.c1)))); -- 1ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(-1e500); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.legacy_file_format; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c0) VALUES (x'', '1000511937'); -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c4, c2, c3) VALUES (0.07325685133134996, 0.07325685133134996, NULL, '-805624323'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c4)=(x'') WHERE (+ (((rt0.c3)IS NOT(rt0.c3)))); -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c2) VALUES (0.2169635566519289, '5孳'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c3) VALUES (0.6483822695020944, x'858c'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c2, c3, c0) VALUES ('-739546643', '9''', x'', x''), (NULL, NULL, '', '1527841103'), (-9.40340757E8, 0.22521850846056268, 0.10254208586231728, '-1624592939'); -- 1ms;
UPDATE OR ROLLBACK rt0 SET (c4, c3)=(0.6658542435913466, x''); -- 1ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (-9.40340757E8); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c3=x''; -- 0ms;
REINDEX  rt0; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2) VALUES ('-1108401323'), (NULL), (0.923173128533987); -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c0, c1) VALUES (14489136, NULL, '-940340757'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c3, c4) VALUES ('-79144077', 0.42891018603723985, -1.070237313E9); -- 0ms;
UPDATE rt0 SET (c1)=(NULL) WHERE ((((((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c2)))OR(NULL)))OR(((((((((rt0.c2)AND(rt0.c4)))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c1)))))AND(LIKELY(DISTINCT rt0.c3))); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c0) VALUES ('', '450789988'), (NULL, '1790823094'), ('[HXRN*l', 'r\}'); -- 0ms;
UPDATE OR REPLACE rt0 SET c3=x'', c4=x'cf84' WHERE (((rt0.c2 IN ()))||(((rt0.c2) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c3, c1) VALUES (-205698841, CAST(0.7218265937534409 AS NUMERIC) COLLATE RTRIM, 0.941803774995826); -- 0ms;
PRAGMA temp.threads; -- 0ms;
UPDATE OR ABORT rt0 SET (c1)=(0x485795fd) WHERE (((((rt0.c1))<>((rt0.c2)))) BETWEEN ((rt0.c3 IN ())) AND (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))); -- 0ms;
UPDATE rt0 SET (c1, c0)=(0.41203578944903085, '1550367643') WHERE (+ (CAST(rt0.c2 AS BLOB))); -- 3ms;
UPDATE OR IGNORE rt0 SET c1=x'', c3=0.20400363808008815; -- 0ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0) AS SELECT ALL LAG(CAST(rt0.c2 AS REAL) COLLATE NOCASE, ((((((((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c4))) NOTNULL), ((((CAST(rt0.c2 AS BLOB))OR(((rt0.c4) IS FALSE))))AND(((((rt0.c3)OR(rt0.c1)))OR(rt0.c1))))) OVER () FROM rt0 WHERE ((~ (0xffffffffd3eb69ed)) COLLATE NOCASE) ORDER BY (NOT ((rt0.c1 IN (rt0.c2)))); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c2, c3) VALUES (x'', x'', ''); -- 4ms;
PRAGMA temp.foreign_keys = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT rt0.c1, rt0.c4, rt0.c0 FROM v0 NATURAL JOIN rt0;
SELECT rt0.c1, rt0.c4, rt0.c0 FROM v0 NATURAL JOIN rt0 WHERE (((((rt0.c4)AND(((rt0.c4)<<(v0.c0)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4))))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c0 FROM v0 NATURAL JOIN rt0 WHERE ((NOT (((((rt0.c4)AND(((rt0.c4)<<(v0.c0)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4))))))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c0 FROM v0 NATURAL JOIN rt0 WHERE (((((((rt0.c4)AND(((rt0.c4)<<(v0.c0)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4))))) ISNULL));
SELECT rt0.c1, rt0.c4, rt0.c0 FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (LIKE(((v0.c0) ISNULL), LIKELIHOOD(v0.c0, 0.1412147914616143), '|')) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (LIKE(((v0.c0) ISNULL), LIKELIHOOD(v0.c0, 0.1412147914616143), '|')))) UNION SELECT DISTINCT * FROM v0 WHERE (((LIKE(((v0.c0) ISNULL), LIKELIHOOD(v0.c0, 0.1412147914616143), '|')) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CAST(((v0.c0) ISNULL) AS REAL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c0) ISNULL) AS REAL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST(((v0.c0) ISNULL) AS REAL)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, v0.c0, rt0.c4, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c4, rt0.c3;
SELECT rt0.c2, v0.c0, rt0.c4, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c4, rt0.c3 HAVING AVG(GROUP_CONCAT(v0.c0)) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c4, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c4, rt0.c3 HAVING (NOT (AVG(GROUP_CONCAT(v0.c0)))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c4, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c4, rt0.c3 HAVING ((AVG(GROUP_CONCAT(v0.c0))) ISNULL);
SELECT rt0.c2, rt0.c0, v0.c0, rt0.c4, rt0.c1 FROM v0 LEFT OUTER JOIN rt0 ON rt0.c3;
SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c4, rt0.c1 FROM v0 LEFT OUTER JOIN rt0 ON rt0.c3 WHERE (((~ (rt0.c3)) IN ())) UNION ALL SELECT rt0.c2, rt0.c0, v0.c0, rt0.c4, rt0.c1 FROM v0 LEFT OUTER JOIN rt0 ON rt0.c3 WHERE ((NOT (((~ (rt0.c3)) IN ())))) UNION ALL SELECT rt0.c2, rt0.c0, v0.c0, rt0.c4, rt0.c1 FROM v0 LEFT OUTER JOIN rt0 ON rt0.c3 WHERE (((((~ (rt0.c3)) IN ())) ISNULL));
SELECT rt0.c2, rt0.c0, v0.c0, rt0.c4, rt0.c1 FROM v0 LEFT OUTER JOIN rt0 ON rt0.c3;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0) NOT NULL))OR(v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) NOT NULL))OR(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0) NOT NULL))OR(v0.c0))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0)IS(v0.c0)) IN ())) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)IS(v0.c0)) IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((v0.c0)IS(v0.c0)) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING NULL COLLATE RTRIM UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (NULL COLLATE RTRIM)) UNION ALL SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING ((NULL COLLATE RTRIM) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING NULL COLLATE RTRIM UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (NULL COLLATE RTRIM)) UNION ALL SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING ((NULL COLLATE RTRIM) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (NULLIF(((rt0.c2)+(rt0.c0)), ((rt0.c2) IS FALSE))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (NULLIF(((rt0.c2)+(rt0.c0)), ((rt0.c2) IS FALSE))))) UNION ALL SELECT * FROM rt0 WHERE (((NULLIF(((rt0.c2)+(rt0.c0)), ((rt0.c2) IS FALSE))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c2 FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c2 FROM rt0 NATURAL JOIN v0 WHERE (NULL) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt0.c2 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt0.c2 FROM rt0 NATURAL JOIN v0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c2 FROM rt0 NATURAL JOIN v0;
SELECT rt0.c2, rt0.c1, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON CAST(rt0.c4 COLLATE NOCASE AS INTEGER) GROUP BY rt0.c2, rt0.c1, v0.c0;
SELECT rt0.c2, rt0.c1, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON CAST(rt0.c4 COLLATE NOCASE AS INTEGER) WHERE (((((rt0.c1)<=(rt0.c4))) NOTNULL)) GROUP BY rt0.c2, rt0.c1, v0.c0 UNION SELECT rt0.c2, rt0.c1, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON CAST(rt0.c4 COLLATE NOCASE AS INTEGER) WHERE ((NOT (((((rt0.c1)<=(rt0.c4))) NOTNULL)))) GROUP BY rt0.c2, rt0.c1, v0.c0 UNION SELECT ALL rt0.c2, rt0.c1, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON CAST(rt0.c4 COLLATE NOCASE AS INTEGER) WHERE (((((((rt0.c1)<=(rt0.c4))) NOTNULL)) ISNULL)) GROUP BY rt0.c2, rt0.c1, v0.c0;
SELECT rt0.c2, rt0.c1, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON CAST(rt0.c4 COLLATE NOCASE AS INTEGER) GROUP BY rt0.c2, rt0.c1, v0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 HAVING GROUP_CONCAT(MAX(rt0.c2)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 HAVING (NOT (GROUP_CONCAT(MAX(rt0.c2)))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 HAVING ((GROUP_CONCAT(MAX(rt0.c2))) ISNULL);
SELECT * FROM v0 NATURAL JOIN rt0;
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (((((('-1910263862') BETWEEN (rt0.c4) AND (rt0.c1)), UPPER(rt0.c1), ((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0))))<>(((((rt0.c3))==((rt0.c1))), (rt0.c2 IN (v0.c0)), ((((rt0.c2)OR('FALSE')))AND(rt0.c1)))))) UNION ALL SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((NOT (((((('-1910263862') BETWEEN (rt0.c4) AND (rt0.c1)), UPPER(rt0.c1), ((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0))))!=(((((rt0.c3))=((rt0.c1))), (rt0.c2 IN (v0.c0)), ((((rt0.c2)OR('FALSE')))AND(rt0.c1)))))))) UNION ALL SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (((((((('-1910263862') BETWEEN (rt0.c4) AND (rt0.c1)), UPPER(rt0.c1), ((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0))))<>(((((rt0.c3))==((rt0.c1))), (rt0.c2 IN (v0.c0)), ((((rt0.c2)OR('FALSE')))AND(rt0.c1)))))) ISNULL));
SELECT * FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((COALESCE(DISTINCT v0.c0, v0.c0))OR(NULL)))OR(((v0.c0) ISNULL)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((COALESCE(DISTINCT v0.c0, v0.c0))OR(NULL)))OR(((v0.c0) ISNULL)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((COALESCE(DISTINCT v0.c0, v0.c0))OR(NULL)))OR(((v0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (DATETIME(x'baed', ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)==(v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (DATETIME(x'baed', ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)==(v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((DATETIME(x'baed', ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)=(v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4;
SELECT rt0.c1, rt0.c4 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c4 HAVING TOTAL((((rt0.c1, SUM(rt0.c4), rt0.c0)) NOT BETWEEN ((MAX(rt0.c0), rt0.c2, COUNT(*))) AND ((rt0.c1, rt0.c2, TOTAL(MAX(GROUP_CONCAT(rt0.c1))))))) UNION ALL SELECT rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4 HAVING (NOT (TOTAL((((rt0.c1, SUM(rt0.c4), rt0.c0)) NOT BETWEEN ((MAX(rt0.c0), rt0.c2, COUNT(*))) AND ((rt0.c1, rt0.c2, TOTAL(MAX(GROUP_CONCAT(rt0.c1))))))))) UNION ALL SELECT rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4 HAVING ((TOTAL((((rt0.c1, SUM(rt0.c4), rt0.c0)) NOT BETWEEN ((MAX(rt0.c0), rt0.c2, COUNT(*))) AND ((rt0.c1, rt0.c2, TOTAL(MAX(GROUP_CONCAT(rt0.c1)))))))) ISNULL);
SELECT rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0;
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0 WHERE (CAST(((v0.c0)IS NOT(rt0.c2)) AS INTEGER)) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0 WHERE ((NOT (CAST(((v0.c0)IS NOT(rt0.c2)) AS INTEGER)))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0 WHERE (((CAST(((v0.c0)IS NOT(rt0.c2)) AS INTEGER)) ISNULL));
SELECT rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((rt0.c3) IS TRUE)))<=(((rt0.c3 IN (rt0.c3)))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c3) IS TRUE)))<=(((rt0.c3 IN (rt0.c3)))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((((rt0.c3) IS TRUE)))<=(((rt0.c3 IN (rt0.c3)))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM v0, rt0 WHERE (((((((0X155d20ff)>(rt0.c4)))OR((~ (v0.c0)))))OR(rt0.c0))) GROUP BY rt0.c3, rt0.c0 UNION SELECT rt0.c3, rt0.c0 FROM v0, rt0 WHERE ((NOT (((((((0x155d20ff)>(rt0.c4)))OR((~ (v0.c0)))))OR(rt0.c0))))) GROUP BY rt0.c3, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c0 FROM v0, rt0 WHERE (((((((((0x155d20ff)>(rt0.c4)))OR((~ (v0.c0)))))OR(rt0.c0))) ISNULL)) GROUP BY rt0.c3, rt0.c0;
SELECT rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL v0.c0, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON NULL GROUP BY v0.c0, rt0.c4;
SELECT ALL v0.c0, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON NULL GROUP BY v0.c0, rt0.c4 HAVING COUNT(MIN(x'')) UNION ALL SELECT v0.c0, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON NULL GROUP BY v0.c0, rt0.c4 HAVING (NOT (COUNT(MIN(x'')))) UNION ALL SELECT v0.c0, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON NULL GROUP BY v0.c0, rt0.c4 HAVING ((COUNT(MIN(x''))) ISNULL);
SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c2, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c0) NOT NULL);
SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c2, rt0.c3 FROM v0 NOT INDEXED LEFT OUTER JOIN rt0 ON ((rt0.c0) NOT NULL) WHERE (x'') UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c2, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c0) NOT NULL) WHERE ((NOT (x''))) UNION ALL SELECT rt0.c0, v0.c0, rt0.c1, rt0.c2, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c0) NOT NULL) WHERE (((x'') ISNULL));
SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c2, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c0) NOT NULL);
SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0, v0;
SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0, v0 WHERE ((((((rt0.c4)) BETWEEN ((v0.c0)) AND ((rt0.c3))))=(rt0.c1))) UNION SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0, v0 WHERE ((NOT ((((((rt0.c4)) BETWEEN ((v0.c0)) AND ((rt0.c3))))==(rt0.c1))))) UNION SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0, v0 WHERE ((((((((rt0.c4)) BETWEEN ((v0.c0)) AND ((rt0.c3))))=(rt0.c1))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0, v0;
SELECT rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM v0, rt0 WHERE (((rt0.c4) IS TRUE) COLLATE NOCASE) GROUP BY rt0.c3, rt0.c0 UNION SELECT rt0.c3, rt0.c0 FROM v0, rt0 WHERE ((NOT (((rt0.c4) IS TRUE) COLLATE NOCASE))) GROUP BY rt0.c3, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c0 FROM v0, rt0 WHERE (((((rt0.c4) IS TRUE) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c3, rt0.c0;
SELECT rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING CAST(MAX(GROUP_CONCAT(MAX(TOTAL(MAX(rt0.c0))))) AS INTEGER) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (CAST(MAX(GROUP_CONCAT(MAX(TOTAL(MAX(rt0.c0))))) AS INTEGER))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((CAST(MAX(GROUP_CONCAT(MAX(TOTAL(MAX(rt0.c0))))) AS INTEGER)) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (v0.c0) UNION ALL SELECT * FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((0Xfffffffff3bd48e7)IS NOT((NOT (v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((0xfffffffff3bd48e7)IS NOT((NOT (v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((0Xfffffffff3bd48e7)IS NOT((NOT (v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0, rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON CASE ((((rt0.c4)AND(rt0.c0)))OR(rt0.c1))  WHEN v0.c0 THEN (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) WHEN (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))) THEN ((rt0.c4)>>(rt0.c0)) WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c4 THEN rt0.c0 END THEN rt0.c0 COLLATE NOCASE END GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c4, rt0.c3;
SELECT v0.c0, rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON CASE ((((rt0.c4)AND(rt0.c0)))OR(rt0.c1))  WHEN v0.c0 THEN (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) WHEN (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))) THEN ((rt0.c4)>>(rt0.c0)) WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c4 THEN rt0.c0 END THEN rt0.c0 COLLATE NOCASE END WHERE ((((v0.c0)>=(v0.c0)) IN ())) GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c4, rt0.c3 UNION SELECT ALL v0.c0, rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON CASE ((((rt0.c4)AND(rt0.c0)))OR(rt0.c1))  WHEN v0.c0 THEN (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) WHEN (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))) THEN ((rt0.c4)>>(rt0.c0)) WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c4 THEN rt0.c0 END THEN rt0.c0 COLLATE NOCASE END WHERE ((NOT ((((v0.c0)>=(v0.c0)) IN ())))) GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c4, rt0.c3 UNION SELECT v0.c0, rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON CASE ((((rt0.c4)AND(rt0.c0)))OR(rt0.c1))  WHEN v0.c0 THEN (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) WHEN (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))) THEN ((rt0.c4)>>(rt0.c0)) WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c4 THEN rt0.c0 END THEN rt0.c0 COLLATE NOCASE END WHERE ((((((v0.c0)>=(v0.c0)) IN ())) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c4, rt0.c3;
SELECT ALL v0.c0, rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON CASE ((((rt0.c4)AND(rt0.c0)))OR(rt0.c1))  WHEN v0.c0 THEN (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) WHEN (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))) THEN ((rt0.c4)>>(rt0.c0)) WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c4 THEN rt0.c0 END THEN rt0.c0 COLLATE NOCASE END GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c4, rt0.c3;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(CAST(TOTAL(COUNT(v0.c0)) AS REAL)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(CAST(TOTAL(COUNT(v0.c0)) AS REAL)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(CAST(TOTAL(COUNT(v0.c0)) AS REAL))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((0.4807629971433631) NOTNULL))))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((0.4807629971433631) NOTNULL))))))) UNION ALL SELECT * FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((0.4807629971433631) NOTNULL))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((NULL) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((('')IS(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((NULL) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((('')IS(v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((NULL) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((('')IS(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((CAST(v0.c0 AS TEXT) IN ())) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((CAST(v0.c0 AS TEXT) IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((CAST(v0.c0 AS TEXT) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(SUM(COUNT(TOTAL(v0.c0))) AS TEXT) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(SUM(COUNT(TOTAL(v0.c0))) AS TEXT))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(SUM(COUNT(TOTAL(v0.c0))) AS TEXT)) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS TEXT)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS TEXT)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS TEXT)) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM v0 CROSS JOIN rt0 ON ((((((rt0.c0, rt0.c2, rt0.c1))>=((rt0.c4, 0x632ade1c, v0.c0)))))<>((rt0.c4 COLLATE NOCASE)));
SELECT DISTINCT rt0.c0, rt0.c1 FROM v0 CROSS JOIN rt0 ON ((((((rt0.c0, rt0.c2, rt0.c1))>=((rt0.c4, 0x632ade1c, v0.c0)))))<>((rt0.c4 COLLATE NOCASE))) WHERE (TYPEOF(DISTINCT 0.9054794275644179)) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM v0 CROSS JOIN rt0 ON ((((((rt0.c0, rt0.c2, rt0.c1))>=((rt0.c4, 0x632ade1c, v0.c0)))))<>((rt0.c4 COLLATE NOCASE))) WHERE ((NOT (TYPEOF(DISTINCT 0.9054794275644179)))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM v0 CROSS JOIN rt0 ON ((((((rt0.c0, rt0.c2, rt0.c1))>=((rt0.c4, 0x632ade1c, v0.c0)))))!=((rt0.c4 COLLATE NOCASE))) WHERE (((TYPEOF(DISTINCT 0.9054794275644179)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM v0 CROSS JOIN rt0 ON ((((((rt0.c0, rt0.c2, rt0.c1))>=((rt0.c4, 0x632ade1c, v0.c0)))))<>((rt0.c4 COLLATE NOCASE)));
SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((v0.c0 IN ())) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((v0.c0 IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((v0.c0 IN ())) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c4 HAVING v0.c0 UNION ALL SELECT rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c4 HAVING (NOT (v0.c0)) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c4 HAVING ((v0.c0) ISNULL);
SELECT rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c4 HAVING v0.c0 UNION ALL SELECT rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c4 HAVING (NOT (v0.c0)) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c4 HAVING ((v0.c0) ISNULL);
SELECT rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c4;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CAST((+ (rt0.c2)) AS BLOB)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST((+ (rt0.c2)) AS BLOB)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST((+ (rt0.c2)) AS BLOB)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c4, v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c3, rt0.c0, v0.c0)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c1)) AND ((rt0.c3, rt0.c2, rt0.c4))))-(v0.c0));
SELECT DISTINCT rt0.c1, rt0.c4, v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c3, rt0.c0, v0.c0)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c1)) AND ((rt0.c3, rt0.c2, rt0.c4))))-(v0.c0)) WHERE (1.612525563E9) UNION SELECT DISTINCT rt0.c1, rt0.c4, v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c3, rt0.c0, v0.c0)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c1)) AND ((rt0.c3, rt0.c2, rt0.c4))))-(v0.c0)) WHERE ((NOT (1.612525563E9))) UNION SELECT DISTINCT rt0.c1, rt0.c4, v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c3, rt0.c0, v0.c0)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c1)) AND ((rt0.c3, rt0.c2, rt0.c4))))-(v0.c0)) WHERE (((1.612525563E9) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c4, v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c3, rt0.c0, v0.c0)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c1)) AND ((rt0.c3, rt0.c2, rt0.c4))))-(v0.c0));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((~ (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((~ (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((~ (v0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0;
SELECT ALL rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0 HAVING (((COUNT(*))) BETWEEN ((COUNT(rt0.c4))) AND ((CASE WHEN NULL THEN 0.03072701515878118 ELSE COUNT(rt0.c3) END))) UNION ALL SELECT rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0 HAVING (NOT ((((COUNT(*))) BETWEEN ((COUNT(rt0.c4))) AND ((CASE WHEN NULL THEN 0.03072701515878118 ELSE COUNT(rt0.c3) END))))) UNION ALL SELECT rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0 HAVING (((((COUNT(*))) BETWEEN ((COUNT(rt0.c4))) AND ((CASE WHEN NULL THEN 0.03072701515878118 ELSE COUNT(rt0.c3) END)))) ISNULL);
SELECT rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0;
SELECT ALL rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0 HAVING (((COUNT(*))) BETWEEN ((COUNT(rt0.c4))) AND ((CASE WHEN NULL THEN 0.03072701515878118 ELSE COUNT(rt0.c3) END))) UNION ALL SELECT rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0 HAVING (NOT ((((COUNT(*))) BETWEEN ((COUNT(rt0.c4))) AND ((CASE WHEN NULL THEN 0.03072701515878118 ELSE COUNT(rt0.c3) END))))) UNION ALL SELECT rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0 HAVING (((((COUNT(*))) BETWEEN ((COUNT(rt0.c4))) AND ((CASE WHEN NULL THEN 0.03072701515878118 ELSE COUNT(rt0.c3) END)))) ISNULL);
SELECT rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0;
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (((((((((((((v0.c0)OR(rt0.c4)))OR(rt0.c0)))OR(((rt0.c1) ISNULL))))AND((x'' IN (rt0.c2, rt0.c3)))))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 END)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (((((((((((((v0.c0)OR(rt0.c4)))OR(rt0.c0)))OR(((rt0.c1) ISNULL))))AND((x'' IN (rt0.c2, rt0.c3)))))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 END)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0))))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((((((((((((((v0.c0)OR(rt0.c4)))OR(rt0.c0)))OR(((rt0.c1) ISNULL))))AND((x'' IN (rt0.c2, rt0.c3)))))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 END)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0))))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((((x'')+('631612936')) IN ())) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((((x'')+('631612936')) IN ())))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((((x'')+('631612936')) IN ())) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 WHERE (LIKELY(json_extract(0x757f70ac, rt0.c1, rt0.c3, v0.c0, v0.c0, v0.c0))) GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0 UNION SELECT rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 WHERE ((NOT (LIKELY(json_extract(0x757f70ac, rt0.c1, rt0.c3, v0.c0, v0.c0, v0.c0))))) GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0 UNION SELECT rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 WHERE (((LIKELY(json_extract(0X757f70ac, rt0.c1, rt0.c3, v0.c0, v0.c0, v0.c0))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0;
SELECT ALL rt0.c4, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3;
SELECT ALL rt0.c4, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3 HAVING MIN(TOTAL_CHANGES()) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3 HAVING (NOT (MIN(TOTAL_CHANGES()))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3 HAVING ((MIN(TOTAL_CHANGES())) ISNULL);
SELECT ALL rt0.c4, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3;
SELECT ALL rt0.c4, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3 HAVING MIN(TOTAL_CHANGES()) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3 HAVING (NOT (MIN(TOTAL_CHANGES()))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3 HAVING ((MIN(TOTAL_CHANGES())) ISNULL);
SELECT ALL rt0.c4, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3;
SELECT * FROM v0 NATURAL JOIN rt0;
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (((((((v0.c0)OR(rt0.c1)))OR(((rt0.c3) NOTNULL))))OR((NOT (NULL))))) UNION ALL SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((NOT (((((((v0.c0)OR(rt0.c1)))OR(((rt0.c3) NOTNULL))))OR((NOT (NULL))))))) UNION ALL SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (((((((((v0.c0)OR(rt0.c1)))OR(((rt0.c3) NOTNULL))))OR((NOT (NULL))))) ISNULL));
SELECT * FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (x'bf7e') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (x'bf7e'))) UNION SELECT DISTINCT * FROM rt0 WHERE (((x'bf7e') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c4, rt0.c0, v0.c0, rt0.c3, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON ((((NOT (rt0.c4)), ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)), ((rt0.c4)<>(rt0.c1))))<((rt0.c2, ((rt0.c4)IS NOT(NULL)), CASE '0.07325685133134996'  WHEN v0.c0 THEN rt0.c3 END))) GROUP BY rt0.c4, rt0.c0, v0.c0, rt0.c3, rt0.c1;
SELECT rt0.c4, rt0.c0, v0.c0, rt0.c3, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON ((((NOT (rt0.c4)), ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)), ((rt0.c4)<>(rt0.c1))))<((rt0.c2, ((rt0.c4)IS NOT(NULL)), CASE '0.07325685133134996'  WHEN v0.c0 THEN rt0.c3 END))) WHERE (CAST('' AS TEXT)) GROUP BY rt0.c4, rt0.c0, v0.c0, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c0, v0.c0, rt0.c3, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON ((((NOT (rt0.c4)), ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)), ((rt0.c4)<>(rt0.c1))))<((rt0.c2, ((rt0.c4)IS NOT(NULL)), CASE '0.07325685133134996'  WHEN v0.c0 THEN rt0.c3 END))) WHERE ((NOT (CAST('' AS TEXT)))) GROUP BY rt0.c4, rt0.c0, v0.c0, rt0.c3, rt0.c1 UNION SELECT rt0.c4, rt0.c0, v0.c0, rt0.c3, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON ((((NOT (rt0.c4)), ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)), ((rt0.c4)!=(rt0.c1))))<((rt0.c2, ((rt0.c4)IS NOT(NULL)), CASE '0.07325685133134996'  WHEN v0.c0 THEN rt0.c3 END))) WHERE (((CAST('' AS TEXT)) ISNULL)) GROUP BY rt0.c4, rt0.c0, v0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c4, rt0.c0, v0.c0, rt0.c3, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON ((((NOT (rt0.c4)), ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)), ((rt0.c4)<>(rt0.c1))))<((rt0.c2, ((rt0.c4)IS NOT(NULL)), CASE '0.07325685133134996'  WHEN v0.c0 THEN rt0.c3 END))) GROUP BY rt0.c4, rt0.c0, v0.c0, rt0.c3, rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE CAST(v0.c0 AS NUMERIC)  WHEN (((v0.c0, v0.c0, MAX(MIN(v0.c0)))) BETWEEN ((v0.c0, v0.c0, MIN(v0.c0))) AND ((SUM(v0.c0), MAX(v0.c0), AVG(TOTAL(v0.c0))))) THEN MIN(COUNT(SUM(v0.c0))) WHEN AVG(v0.c0) THEN GROUP_CONCAT(v0.c0) WHEN MAX(v0.c0) THEN COUNT(SUM(MIN(COUNT(v0.c0)))) ELSE ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(AVG('-1591909548'))) END UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CASE CAST(v0.c0 AS NUMERIC)  WHEN (((v0.c0, v0.c0, MAX(MIN(v0.c0)))) BETWEEN ((v0.c0, v0.c0, MIN(v0.c0))) AND ((SUM(v0.c0), MAX(v0.c0), AVG(TOTAL(v0.c0))))) THEN MIN(COUNT(SUM(v0.c0))) WHEN AVG(v0.c0) THEN GROUP_CONCAT(v0.c0) WHEN MAX(v0.c0) THEN COUNT(SUM(MIN(COUNT(v0.c0)))) ELSE ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(AVG('-1591909548'))) END)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE CAST(v0.c0 AS NUMERIC)  WHEN (((v0.c0, v0.c0, MAX(MIN(v0.c0)))) BETWEEN ((v0.c0, v0.c0, MIN(v0.c0))) AND ((SUM(v0.c0), MAX(v0.c0), AVG(TOTAL(v0.c0))))) THEN MIN(COUNT(SUM(v0.c0))) WHEN AVG(v0.c0) THEN GROUP_CONCAT(v0.c0) WHEN MAX(v0.c0) THEN COUNT(SUM(MIN(COUNT(v0.c0)))) ELSE ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(AVG('-1591909548'))) END) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c0))) NOT NULL)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0)AND(v0.c0)))AND(v0.c0))) NOT NULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((((v0.c0)AND(v0.c0)))AND(v0.c0))) NOT NULL)) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0 WHERE (((((((((((NULL)AND(NULL)))AND(rt0.c0)))OR(v0.c0)))OR(rt0.c3)))-(((rt0.c0)AND(rt0.c1))))) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((NOT (((((((((((NULL)AND(NULL)))AND(rt0.c0)))OR(v0.c0)))OR(rt0.c3)))-(((rt0.c0)AND(rt0.c1))))))) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0 WHERE (((((((((((((NULL)AND(NULL)))AND(rt0.c0)))OR(v0.c0)))OR(rt0.c3)))-(((rt0.c0)AND(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c3)*(rt0.c3)) COLLATE BINARY GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c3)*(rt0.c3)) COLLATE BINARY WHERE (rt0.c4) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c3)*(rt0.c3)) COLLATE BINARY WHERE ((NOT (rt0.c4))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c3)*(rt0.c3)) COLLATE BINARY WHERE (((rt0.c4) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c3)*(rt0.c3)) COLLATE BINARY GROUP BY rt0.c2, rt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((MAX('597165942'))AND(v0.c0)))OR(x'')))OR(v0.c0)))OR(v0.c0)) COLLATE NOCASE UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((((((MAX('597165942'))AND(v0.c0)))OR(x'')))OR(v0.c0)))OR(v0.c0)) COLLATE NOCASE)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((((MAX('597165942'))AND(v0.c0)))OR(x'')))OR(v0.c0)))OR(v0.c0)) COLLATE NOCASE) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((MAX('597165942'))AND(v0.c0)))OR(x'')))OR(v0.c0)))OR(v0.c0)) COLLATE NOCASE UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((((((MAX('597165942'))AND(v0.c0)))OR(x'')))OR(v0.c0)))OR(v0.c0)) COLLATE NOCASE)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((((MAX('597165942'))AND(v0.c0)))OR(x'')))OR(v0.c0)))OR(v0.c0)) COLLATE NOCASE) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c3 END AS INTEGER)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST(CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c3 END AS INTEGER)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST(CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c3 END AS INTEGER)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE (LIKELY(((((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c1)))AND(x'4057')))AND(rt0.c4)))AND(rt0.c3)))) UNION SELECT DISTINCT rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (LIKELY(((((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c1)))AND(x'4057')))AND(rt0.c4)))AND(rt0.c3)))))) UNION SELECT DISTINCT rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE (((LIKELY(((((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c1)))AND(x'4057')))AND(rt0.c4)))AND(rt0.c3)))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2, v0.c0;
SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2, v0.c0 FROM v0, rt0 WHERE (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())) GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2, v0.c0 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((NOT (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())))) GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2, v0.c0 UNION SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2, v0.c0 FROM v0, rt0 WHERE (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2, v0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2, v0.c0;
SELECT ALL v0.c0, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c0;
SELECT ALL v0.c0, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c0 HAVING ((MAX(TOTAL(v0.c0)))>(MIN(TOTAL(SUM(SUM(COUNT(*))))))) COLLATE BINARY UNION ALL SELECT v0.c0, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c0 HAVING (NOT (((MAX(TOTAL(v0.c0)))>(MIN(TOTAL(SUM(SUM(COUNT(*))))))) COLLATE BINARY)) UNION ALL SELECT v0.c0, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c0 HAVING ((((MAX(TOTAL(v0.c0)))>(MIN(TOTAL(SUM(SUM(COUNT(*))))))) COLLATE BINARY) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE NOCASE)+(ROUND(v0.c0, 1.06202336E9)))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((v0.c0 COLLATE NOCASE)+(ROUND(v0.c0, 1.06202336E9)))))) UNION ALL SELECT * FROM v0 WHERE (((((v0.c0 COLLATE NOCASE)+(ROUND(v0.c0, 1.06202336E9)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((~ (HEX(v0.c0)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((~ (HEX(v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((~ (HEX(v0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c4)) THEN (+ (x'')) WHEN ((rt0.c0)>>(rt0.c4)) THEN ((rt0.c2)<<(0.8382488631889597)) WHEN ((-1.146172542E9)GLOB(rt0.c0)) THEN ((((rt0.c3)AND(rt0.c0)))OR(0.8913379478517891)) END GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3;
SELECT v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c4)) THEN (+ (x'')) WHEN ((rt0.c0)>>(rt0.c4)) THEN ((rt0.c2)<<(0.8382488631889597)) WHEN ((-1.146172542E9)GLOB(rt0.c0)) THEN ((((rt0.c3)AND(rt0.c0)))OR(0.8913379478517891)) END WHERE (0X485795fd) GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 UNION SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c4)) THEN (+ (x'')) WHEN ((rt0.c0)>>(rt0.c4)) THEN ((rt0.c2)<<(0.8382488631889597)) WHEN ((-1.146172542E9)GLOB(rt0.c0)) THEN ((((rt0.c3)AND(rt0.c0)))OR(0.8913379478517891)) END WHERE ((NOT (0X485795fd))) GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 UNION SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c4)) THEN (+ (x'')) WHEN ((rt0.c0)>>(rt0.c4)) THEN ((rt0.c2)<<(0.8382488631889597)) WHEN ((-1.146172542E9)GLOB(rt0.c0)) THEN ((((rt0.c3)AND(rt0.c0)))OR(0.8913379478517891)) END WHERE (((0x485795fd) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3;
SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c4)) THEN (+ (x'')) WHEN ((rt0.c0)>>(rt0.c4)) THEN ((rt0.c2)<<(0.8382488631889597)) WHEN ((-1.146172542E9)GLOB(rt0.c0)) THEN ((((rt0.c3)AND(rt0.c0)))OR(0.8913379478517891)) END GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3;
SELECT ALL rt0.c4, rt0.c2 FROM v0 INNER JOIN rt0 ON NULL GROUP BY rt0.c4, rt0.c2;
SELECT ALL rt0.c4, rt0.c2 FROM v0 INNER JOIN rt0 ON NULL GROUP BY rt0.c4, rt0.c2 HAVING ((((+ ('1721579811'))))!=((-1686775508))) UNION ALL SELECT rt0.c4, rt0.c2 FROM v0 INNER JOIN rt0 ON NULL GROUP BY rt0.c4, rt0.c2 HAVING (NOT (((((+ ('1721579811'))))!=((-1686775508))))) UNION ALL SELECT rt0.c4, rt0.c2 FROM v0 INNER JOIN rt0 ON NULL GROUP BY rt0.c4, rt0.c2 HAVING ((((((+ ('1721579811'))))<>((-1686775508)))) ISNULL);
SELECT ALL rt0.c4, rt0.c2 FROM v0 INNER JOIN rt0 ON NULL GROUP BY rt0.c4, rt0.c2;
SELECT ALL rt0.c4, rt0.c2 FROM v0 INNER JOIN rt0 ON NULL GROUP BY rt0.c4, rt0.c2 HAVING ((((+ ('1721579811'))))!=((-1686775508))) UNION ALL SELECT rt0.c4, rt0.c2 FROM v0 INNER JOIN rt0 ON NULL GROUP BY rt0.c4, rt0.c2 HAVING (NOT (((((+ ('1721579811'))))!=((-1686775508))))) UNION ALL SELECT rt0.c4, rt0.c2 FROM v0 INNER JOIN rt0 ON NULL GROUP BY rt0.c4, rt0.c2 HAVING ((((((+ ('1721579811'))))<>((-1686775508)))) ISNULL);
SELECT ALL rt0.c4, rt0.c2 FROM v0 INNER JOIN rt0 ON NULL GROUP BY rt0.c4, rt0.c2;
SELECT ALL rt0.c1 FROM v0, rt0;
SELECT ALL rt0.c1 FROM v0, rt0 WHERE (rt0.c0) UNION ALL SELECT rt0.c1 FROM v0, rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL rt0.c1 FROM v0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT ALL rt0.c1 FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((- (v0.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((- (v0.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((- (v0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0, rt0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 NOT INDEXED, rt0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0, rt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0, rt0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 NOT INDEXED, rt0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0, rt0 GROUP BY v0.c0;
SELECT * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE ((((((('-296204140')OR(rt0.c2)))AND(rt0.c4)))&(v0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT ((((((('-296204140')OR(rt0.c2)))AND(rt0.c4)))&(v0.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((((((((('-296204140')OR(rt0.c2)))AND(rt0.c4)))&(v0.c0 COLLATE NOCASE))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 WHERE ((((v0.c0) IS FALSE) IN ())) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 WHERE ((NOT ((((v0.c0) IS FALSE) IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 WHERE ((((((v0.c0) IS FALSE) IN ())) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0;
SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c4;
SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END)IS NOT(rt0.c4))) GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END)IS NOT(rt0.c4))))) GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE (((((CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END)IS NOT(rt0.c4))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c4;
SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c4;
SELECT rt0.c0, rt0.c1, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c3 HAVING (((CAST(0.7516911644870783 AS INTEGER)))>((COUNT(MIN(TOTAL(rt0.c0)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c3 HAVING (NOT ((((CAST(0.7516911644870783 AS INTEGER)))>((COUNT(MIN(TOTAL(rt0.c0)))))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c3 HAVING (((((CAST(0.7516911644870783 AS INTEGER)))>((COUNT(MIN(TOTAL(rt0.c0))))))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (CASE MAX(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)  WHEN (((v0.c0, v0.c0, v0.c0))>=((v0.c0, 0.05387170722421164, v0.c0))) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE (+ (v0.c0)) END) UNION ALL SELECT * FROM v0 WHERE ((NOT (CASE MAX(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)  WHEN (((v0.c0, v0.c0, v0.c0))>=((v0.c0, 0.05387170722421164, v0.c0))) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE (+ (v0.c0)) END))) UNION ALL SELECT ALL * FROM v0 WHERE (((CASE MAX(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)  WHEN (((v0.c0, v0.c0, v0.c0))>=((v0.c0, 0.05387170722421164, v0.c0))) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE (+ (v0.c0)) END) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM v0 NATURAL JOIN rt0 WHERE (CAST(((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)) AS REAL)) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN rt0 WHERE ((NOT (CAST(((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)) AS REAL)))) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN rt0 WHERE (((CAST(((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM v0 NATURAL JOIN rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 WHERE ((((rt0.c3, rt0.c0, rt0.c0)) NOT BETWEEN ((((rt0.c2)*(x'2cfc')), (rt0.c4 IN ()), ((x'e445')LIKE(rt0.c0)))) AND (((rt0.c3 IN ()), ((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)))AND(v0.c0)))OR(rt0.c1)), ((rt0.c2) IS FALSE))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT ((((rt0.c3, rt0.c0, rt0.c0)) NOT BETWEEN ((((rt0.c2)*(x'2cfc')), (rt0.c4 IN ()), ((x'e445')LIKE(rt0.c0)))) AND (((rt0.c3 IN ()), ((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)))AND(v0.c0)))OR(rt0.c1)), ((rt0.c2) IS FALSE))))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0, v0 WHERE ((((((rt0.c3, rt0.c0, rt0.c0)) NOT BETWEEN ((((rt0.c2)*(x'2cfc')), (rt0.c4 IN ()), ((x'e445')LIKE(rt0.c0)))) AND (((rt0.c3 IN ()), ((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)))AND(v0.c0)))OR(rt0.c1)), ((rt0.c2) IS FALSE))))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4;
SELECT rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4 HAVING MIN(MAX(rt0.c4)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4 HAVING (NOT (MIN(MAX(rt0.c4)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4 HAVING ((MIN(MAX(rt0.c4))) ISNULL);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON LIKELIHOOD(-1126890622, 0.5815215056720876);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON LIKELIHOOD(-1126890622, 0.5815215056720876) WHERE ((((rt0.c1, rt0.c3, rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE, (- (rt0.c2)), CASE WHEN rt0.c4 THEN rt0.c0 ELSE '1612525563' END)) AND ((CAST(rt0.c3 AS REAL), ((rt0.c3)*(v0.c0)), rt0.c1)))) UNION ALL SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON LIKELIHOOD(-1126890622, 0.5815215056720876) WHERE ((NOT ((((rt0.c1, rt0.c3, rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE, (- (rt0.c2)), CASE WHEN rt0.c4 THEN rt0.c0 ELSE '1612525563' END)) AND ((CAST(rt0.c3 AS REAL), ((rt0.c3)*(v0.c0)), rt0.c1)))))) UNION ALL SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON LIKELIHOOD(-1126890622, 0.5815215056720876) WHERE ((((((rt0.c1, rt0.c3, rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE, (- (rt0.c2)), CASE WHEN rt0.c4 THEN rt0.c0 ELSE '1612525563' END)) AND ((CAST(rt0.c3 AS REAL), ((rt0.c3)*(v0.c0)), rt0.c1)))) ISNULL));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON LIKELIHOOD(-1126890622, 0.5815215056720876);
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ('-1e500') UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ('-1e500'))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((('-1e500') ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3;
SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0, v0 WHERE (((((((rt0.c3)%(0.4701047440878158)))AND(x'')))AND(((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0))))) GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0, v0 WHERE ((NOT (((((((rt0.c3)%(0.4701047440878158)))AND(x'')))AND(((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0))))))) GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 UNION SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0, v0 WHERE (((((((((rt0.c3)%(0.4701047440878158)))AND(x'')))AND(((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c4, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY) NOT BETWEEN (((((v0.c0)AND(rt0.c2)))AND(rt0.c3))) AND ((((rt0.c4))==((v0.c0))))) GROUP BY rt0.c2, rt0.c4, rt0.c0;
SELECT rt0.c2, rt0.c4, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY) NOT BETWEEN (((((v0.c0)AND(rt0.c2)))AND(rt0.c3))) AND ((((rt0.c4))=((v0.c0))))) GROUP BY rt0.c2, rt0.c4, rt0.c0 HAVING ((((((((rt0.c3)AND(rt0.c2)))AND(MIN(rt0.c2))))OR(SUM(GROUP_CONCAT(v0.c0)))))OR(TOTAL(COUNT(rt0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY) NOT BETWEEN (((((v0.c0)AND(rt0.c2)))AND(rt0.c3))) AND ((((rt0.c4))==((v0.c0))))) GROUP BY rt0.c2, rt0.c4, rt0.c0 HAVING (NOT (((((((((rt0.c3)AND(rt0.c2)))AND(MIN(rt0.c2))))OR(SUM(GROUP_CONCAT(v0.c0)))))OR(TOTAL(COUNT(rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY) NOT BETWEEN (((((v0.c0)AND(rt0.c2)))AND(rt0.c3))) AND ((((rt0.c4))==((v0.c0))))) GROUP BY rt0.c2, rt0.c4, rt0.c0 HAVING ((((((((((rt0.c3)AND(rt0.c2)))AND(MIN(rt0.c2))))OR(SUM(GROUP_CONCAT(v0.c0)))))OR(TOTAL(COUNT(rt0.c0))))) ISNULL);
SELECT rt0.c1, rt0.c3, rt0.c0 FROM v0, rt0;
SELECT rt0.c1, rt0.c3, rt0.c0 FROM v0, rt0 WHERE (((CASE WHEN NULL THEN rt0.c3 ELSE rt0.c1 END) NOTNULL)) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c0 FROM v0, rt0 WHERE ((NOT (((CASE WHEN NULL THEN rt0.c3 ELSE rt0.c1 END) NOTNULL)))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c0 FROM v0, rt0 WHERE (((((CASE WHEN NULL THEN rt0.c3 ELSE rt0.c1 END) NOTNULL)) ISNULL));
SELECT rt0.c1, rt0.c3, rt0.c0 FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((((rt0.c2) NOT NULL)) NOTNULL)) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((((rt0.c2) NOT NULL)) NOTNULL)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((((rt0.c2) NOT NULL)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c3 FROM v0, rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM v0, rt0 WHERE ((- (rt0.c3)) COLLATE RTRIM) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM v0, rt0 WHERE ((NOT ((- (rt0.c3)) COLLATE RTRIM))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM v0, rt0 WHERE ((((- (rt0.c3)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM v0, rt0 GROUP BY rt0.c3;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT((MAX(v0.c0) IN ())) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT((MAX(v0.c0) IN ())))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT((MAX(v0.c0) IN ()))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT((MAX(v0.c0) IN ())) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT((MAX(v0.c0) IN ())))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT((MAX(v0.c0) IN ()))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CAST((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) AS TEXT)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) AS TEXT)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) AS TEXT)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT v0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0;
SELECT DISTINCT v0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0 WHERE (CASE WHEN (+ (0.8886359342647149)) THEN ((rt0.c4)==(rt0.c1)) ELSE CASE WHEN '1663753756' THEN rt0.c3 ELSE v0.c0 END END) UNION SELECT DISTINCT v0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0 WHERE ((NOT (CASE WHEN (+ (0.8886359342647149)) THEN ((rt0.c4)==(rt0.c1)) ELSE CASE WHEN '1663753756' THEN rt0.c3 ELSE v0.c0 END END))) UNION SELECT DISTINCT v0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0 WHERE (((CASE WHEN (+ (0.8886359342647149)) THEN ((rt0.c4)==(rt0.c1)) ELSE CASE WHEN '1663753756' THEN rt0.c3 ELSE v0.c0 END END) ISNULL));
SELECT DISTINCT v0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0;
SELECT rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0, v0 WHERE ((('1918269168')>(((rt0.c3)IS(rt0.c2))))) GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c3 UNION SELECT rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0, v0 WHERE ((NOT ((('1918269168')>(((rt0.c3)IS(rt0.c2))))))) GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c3 UNION SELECT rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0, v0 WHERE ((((('1918269168')>(((rt0.c3)IS(rt0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c3;
SELECT rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c3;
SELECT rt0.c3 FROM v0, rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM v0, rt0 GROUP BY rt0.c3 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c3 FROM v0, rt0 GROUP BY rt0.c3 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL rt0.c3 FROM v0, rt0 GROUP BY rt0.c3 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c3 FROM v0, rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM v0, rt0 GROUP BY rt0.c3 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c3 FROM v0, rt0 GROUP BY rt0.c3 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL rt0.c3 FROM v0, rt0 GROUP BY rt0.c3 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c3 FROM v0, rt0 GROUP BY rt0.c3;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CASE 0.9978385253522519  WHEN '450789988' THEN ((((0.09185382332506087)OR(v0.c0)))OR(v0.c0)) ELSE CAST(v0.c0 AS TEXT) END) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE 0.9978385253522519  WHEN '450789988' THEN ((((0.09185382332506087)OR(v0.c0)))OR(v0.c0)) ELSE CAST(v0.c0 AS TEXT) END))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CASE 0.9978385253522519  WHEN '450789988' THEN ((((0.09185382332506087)OR(v0.c0)))OR(v0.c0)) ELSE CAST(v0.c0 AS TEXT) END) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0, rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM v0, rt0;
SELECT DISTINCT v0.c0, rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM v0, rt0 WHERE (x'') UNION SELECT DISTINCT v0.c0, rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM v0, rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT v0.c0, rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM v0, rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT v0.c0, rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM v0, rt0;
SELECT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON '-1481686817' GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON '-1481686817' WHERE (CASE WHEN CASE rt0.c3  WHEN 0.7759750253015031 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END THEN ((rt0.c0)-(x'f4a8')) ELSE ((((v0.c0)AND(x'')))OR('dTB w')) END) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON '-1481686817' WHERE ((NOT (CASE WHEN CASE rt0.c3  WHEN 0.7759750253015031 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END THEN ((rt0.c0)-(x'f4a8')) ELSE ((((v0.c0)AND(x'')))OR('dTB w')) END))) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON '-1481686817' WHERE (((CASE WHEN CASE rt0.c3  WHEN 0.7759750253015031 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END THEN ((rt0.c0)-(x'f4a8')) ELSE ((((v0.c0)AND(x'')))OR('dTB w')) END) ISNULL)) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON '-1481686817' GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1;
SELECT v0.c0 FROM v0 INNER JOIN rt0 ON ((((NOT (rt0.c4))))!=((rt0.c1))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 INNER JOIN rt0 ON ((((NOT (rt0.c4))))!=((rt0.c1))) GROUP BY v0.c0 HAVING MIN(((((SUM(NULL))AND(AVG(MIN(rt0.c4)))))OR(COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0 NOT INDEXED INNER JOIN rt0 ON ((((NOT (rt0.c4))))!=((rt0.c1))) GROUP BY v0.c0 HAVING (NOT (MIN(((((SUM(NULL))AND(AVG(MIN(rt0.c4)))))OR(COUNT(*)))))) UNION ALL SELECT v0.c0 FROM v0 INNER JOIN rt0 ON ((((NOT (rt0.c4))))!=((rt0.c1))) GROUP BY v0.c0 HAVING ((MIN(((((SUM(NULL))AND(AVG(MIN(rt0.c4)))))OR(COUNT(*))))) ISNULL);
SELECT ALL rt0.c4 FROM rt0;
SELECT rt0.c4 FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3))) IS FALSE)) UNION ALL SELECT rt0.c4 FROM rt0 WHERE ((NOT (((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3))) IS FALSE)))) UNION ALL SELECT rt0.c4 FROM rt0 WHERE (((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3))) IS FALSE)) ISNULL));
SELECT ALL rt0.c4 FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (UNLIKELY(v0.c0)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (UNLIKELY(v0.c0)))) UNION SELECT DISTINCT * FROM v0 WHERE (((UNLIKELY(v0.c0)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON CAST(NULL AS BLOB) GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c1;
SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON CAST(NULL AS BLOB) WHERE ((((((0.5382983980209851))>((v0.c0))))AND((v0.c0 IN (rt0.c4))))) GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c1 UNION SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON CAST(NULL AS BLOB) WHERE ((NOT ((((((0.5382983980209851))>((v0.c0))))AND((v0.c0 IN (rt0.c4))))))) GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON CAST(NULL AS BLOB) WHERE ((((((((0.5382983980209851))>((v0.c0))))AND((v0.c0 IN (rt0.c4))))) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c1;
SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON CAST(NULL AS BLOB) GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c4, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, v0.c0, rt0.c1;
SELECT rt0.c3, rt0.c4, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, v0.c0, rt0.c1 HAVING IFNULL(DISTINCT SUM(rt0.c3), GROUP_CONCAT(MAX(SUM(SUM(rt0.c3))))) UNION ALL SELECT rt0.c3, rt0.c4, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, v0.c0, rt0.c1 HAVING (NOT (IFNULL(DISTINCT SUM(rt0.c3), GROUP_CONCAT(MAX(SUM(SUM(rt0.c3))))))) UNION ALL SELECT ALL rt0.c3, rt0.c4, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, v0.c0, rt0.c1 HAVING ((IFNULL(DISTINCT SUM(rt0.c3), GROUP_CONCAT(MAX(SUM(SUM(rt0.c3)))))) ISNULL);
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (CAST((('eH') BETWEEN (rt0.c0) AND (rt0.c3)) AS TEXT)) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (CAST((('eH') BETWEEN (rt0.c0) AND (rt0.c3)) AS TEXT)))) UNION ALL SELECT * FROM v0, rt0 WHERE (((CAST((('eH') BETWEEN (rt0.c0) AND (rt0.c3)) AS TEXT)) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (UPPER(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END)) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE ((NOT (UPPER(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((UPPER(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c2;
SELECT ALL rt0.c3, rt0.c2 FROM v0, rt0 WHERE (CASE CAST(rt0.c4 AS NUMERIC)  WHEN ((0.11877206709512322)+(v0.c0)) THEN json_extract(rt0.c1, rt0.c1) END) GROUP BY rt0.c3, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c2 FROM v0, rt0 WHERE ((NOT (CASE CAST(rt0.c4 AS NUMERIC)  WHEN ((0.11877206709512322)+(v0.c0)) THEN json_extract(rt0.c1, rt0.c1) END))) GROUP BY rt0.c3, rt0.c2 UNION SELECT rt0.c3, rt0.c2 FROM v0, rt0 WHERE (((CASE CAST(rt0.c4 AS NUMERIC)  WHEN ((0.11877206709512322)+(v0.c0)) THEN json_extract(rt0.c1, rt0.c1) END) ISNULL)) GROUP BY rt0.c3, rt0.c2;
SELECT ALL rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c2;
SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1 HAVING ((TOTAL(rt0.c0))|(MAX(COUNT(rt0.c4)))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1 HAVING (NOT (((TOTAL(rt0.c0))|(MAX(COUNT(rt0.c4)))))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1 HAVING ((((TOTAL(rt0.c0))|(MAX(COUNT(rt0.c4))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1 FROM v0 CROSS JOIN rt0 ON (CASE WHEN rt0.c2 THEN rt0.c0 END IN ());
SELECT rt0.c0, rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1 FROM v0 CROSS JOIN rt0 ON (CASE WHEN rt0.c2 THEN rt0.c0 END IN ()) WHERE ('1550367643') UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1 FROM v0 CROSS JOIN rt0 ON (CASE WHEN rt0.c2 THEN rt0.c0 END IN ()) WHERE ((NOT ('1550367643'))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1 FROM v0 CROSS JOIN rt0 ON (CASE WHEN rt0.c2 THEN rt0.c0 END IN ()) WHERE ((('1550367643') ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1 FROM v0 CROSS JOIN rt0 ON (CASE WHEN rt0.c2 THEN rt0.c0 END IN ());
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (x'' COLLATE RTRIM) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (x'' COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((x'' COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE (UNLIKELY(DISTINCT CAST(rt0.c2 AS INTEGER))) GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (UNLIKELY(DISTINCT CAST(rt0.c2 AS INTEGER))))) GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE (((UNLIKELY(DISTINCT CAST(rt0.c2 AS INTEGER))) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c4, v0.c0 FROM rt0 NOT INDEXED, v0 GROUP BY rt0.c3, rt0.c4, v0.c0;
SELECT rt0.c3, rt0.c4, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, v0.c0 HAVING rt0.c0 UNION ALL SELECT rt0.c3, rt0.c4, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, v0.c0 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL rt0.c3, rt0.c4, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, v0.c0 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c3, rt0.c4, v0.c0 FROM rt0 NOT INDEXED, v0 GROUP BY rt0.c3, rt0.c4, v0.c0;
SELECT rt0.c3, rt0.c4, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, v0.c0 HAVING rt0.c0 UNION ALL SELECT rt0.c3, rt0.c4, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, v0.c0 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL rt0.c3, rt0.c4, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, v0.c0 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c3, rt0.c4, v0.c0 FROM rt0 NOT INDEXED, v0 GROUP BY rt0.c3, rt0.c4, v0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ())) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (NULL))) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((v0.c0 IN ())) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (NULL))) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE ((((((v0.c0 IN ())) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (NULL))) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((CAST('0.8913379478517891' AS TEXT))||((~ (rt0.c1))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((CAST('0.8913379478517891' AS TEXT))||((~ (rt0.c1))))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((CAST('0.8913379478517891' AS TEXT))||((~ (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM v0 NATURAL JOIN rt0 WHERE (((rt0.c0) NOTNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM v0 NATURAL JOIN rt0 WHERE ((NOT (((rt0.c0) NOTNULL)))) GROUP BY rt0.c1, rt0.c2, rt0.c3 UNION SELECT rt0.c1, rt0.c2, rt0.c3 FROM v0 NATURAL JOIN rt0 WHERE (((((rt0.c0) NOTNULL)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE WHEN TOTAL(v0.c0) THEN TOTAL(v0.c0) WHEN TOTAL(v0.c0) THEN TOTAL(v0.c0) WHEN GROUP_CONCAT(GROUP_CONCAT(COUNT(*))) THEN TOTAL(v0.c0) END UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CASE WHEN TOTAL(v0.c0) THEN TOTAL(v0.c0) WHEN TOTAL(v0.c0) THEN TOTAL(v0.c0) WHEN GROUP_CONCAT(GROUP_CONCAT(COUNT(*))) THEN TOTAL(v0.c0) END)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE WHEN TOTAL(v0.c0) THEN TOTAL(v0.c0) WHEN TOTAL(v0.c0) THEN TOTAL(v0.c0) WHEN GROUP_CONCAT(GROUP_CONCAT(COUNT(*))) THEN TOTAL(v0.c0) END) ISNULL);
SELECT ALL v0.c0, rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM v0, rt0;
SELECT v0.c0, rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM v0, rt0 WHERE ((('256926196') BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))) AND ((- (rt0.c3))))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM v0, rt0 WHERE ((NOT ((('256926196') BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))) AND ((- (rt0.c3))))))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM v0, rt0 WHERE ((((('256926196') BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))) AND ((- (rt0.c3))))) ISNULL));
SELECT ALL v0.c0, rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM v0, rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (rt0.c4) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (rt0.c4))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((rt0.c4) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0)&(v0.c0)) IN (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)), v0.c0 COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)&(v0.c0)) IN (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)), v0.c0 COLLATE RTRIM))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0)&(v0.c0)) IN (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)), v0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX((((v0.c0, GROUP_CONCAT(AVG(AVG(v0.c0))), NULL, v0.c0, MIN(SUM(v0.c0)))) BETWEEN ((COUNT(v0.c0), v0.c0, SUM(v0.c0), COUNT(*), v0.c0)) AND ((GROUP_CONCAT(MIN(NULL)), SUM(COUNT(v0.c0)), '', COUNT(*), v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX((((v0.c0, GROUP_CONCAT(AVG(AVG(v0.c0))), NULL, v0.c0, MIN(SUM(v0.c0)))) BETWEEN ((COUNT(v0.c0), v0.c0, SUM(v0.c0), COUNT(*), v0.c0)) AND ((GROUP_CONCAT(MIN(NULL)), SUM(COUNT(v0.c0)), '', COUNT(*), v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX((((v0.c0, GROUP_CONCAT(AVG(AVG(v0.c0))), NULL, v0.c0, MIN(SUM(v0.c0)))) BETWEEN ((COUNT(v0.c0), v0.c0, SUM(v0.c0), COUNT(*), v0.c0)) AND ((GROUP_CONCAT(MIN(NULL)), SUM(COUNT(v0.c0)), '', COUNT(*), v0.c0))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ('-1070237313') UNION ALL SELECT * FROM rt0 WHERE ((NOT ('-1070237313'))) UNION ALL SELECT ALL * FROM rt0 WHERE ((('-1070237313') ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ('{') UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ('{'))) UNION SELECT DISTINCT * FROM v0 WHERE ((('{') ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c0, rt0.c3, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON (- ((((rt0.c0, NULL, rt0.c3))>((v0.c0, rt0.c2, rt0.c1))))) GROUP BY rt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c0, rt0.c3, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON (- ((((rt0.c0, NULL, rt0.c3))>((v0.c0, rt0.c2, rt0.c1))))) WHERE ((CAST(rt0.c2 AS INTEGER) IN (((((((((v0.c0)OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c3))))) GROUP BY rt0.c0, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON (- ((((rt0.c0, NULL, rt0.c3))>((v0.c0, rt0.c2, rt0.c1))))) WHERE ((NOT ((CAST(rt0.c2 AS INTEGER) IN (((((((((v0.c0)OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c3))))))) GROUP BY rt0.c0, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON (- ((((rt0.c0, NULL, rt0.c3))>((v0.c0, rt0.c2, rt0.c1))))) WHERE ((((CAST(rt0.c2 AS INTEGER) IN (((((((((v0.c0)OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c3))))) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c0, rt0.c3, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON (- ((((rt0.c0, NULL, rt0.c3))>((v0.c0, rt0.c2, rt0.c1))))) GROUP BY rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c0, rt0.c4, rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c3, v0.c0;
SELECT ALL rt0.c0, rt0.c4, rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c3, v0.c0 HAVING x'' UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c3, v0.c0 HAVING (NOT (x'')) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c3, v0.c0 FROM rt0, v0 NOT INDEXED GROUP BY rt0.c0, rt0.c4, rt0.c3, v0.c0 HAVING ((x'') ISNULL);
SELECT ALL rt0.c0, rt0.c4, rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c3, v0.c0;
SELECT ALL rt0.c0, rt0.c4, rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c3, v0.c0 HAVING x'' UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c3, v0.c0 HAVING (NOT (x'')) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c3, v0.c0 FROM rt0, v0 NOT INDEXED GROUP BY rt0.c0, rt0.c4, rt0.c3, v0.c0 HAVING ((x'') ISNULL);
SELECT ALL rt0.c0, rt0.c4, rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c3, v0.c0;
SELECT MAX((+ (((v0.c0)*(v0.c0))))) FROM v0 ORDER BY CASE ((v0.c0) NOT BETWEEN ('螙[S9gq') AND (v0.c0))  WHEN ((v0.c0)/(v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END WHEN v0.c0 THEN (- (v0.c0)) WHEN ((v0.c0) NOT NULL) THEN ((v0.c0) BETWEEN (v0.c0) AND ('0.9760205557732432')) ELSE v0.c0 COLLATE RTRIM END  NULLS FIRST, (((v0.c0)) BETWEEN (('L롞UoB')) AND ((CAST(v0.c0 AS TEXT))))  NULLS LAST;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((NOT ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((NOT ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c1)>=(998832694))) NOTNULL)) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c1)>=(998832694))) NOTNULL)))) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c1)>=(998832694))) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c1 FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (UNLIKELY(((v0.c0)/(0X4cbc1c22)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (UNLIKELY(((v0.c0)/(0x4cbc1c22)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((UNLIKELY(((v0.c0)/(0x4cbc1c22)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(((MIN(v0.c0))IS(COUNT(*)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(((MIN(v0.c0))IS(COUNT(*)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(((MIN(v0.c0))IS(COUNT(*))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((CAST(rt0.c3 AS NUMERIC))||(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((CAST(rt0.c3 AS NUMERIC))||(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c3 AS NUMERIC))||(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((v0.c0, rt0.c3, rt0.c1)) BETWEEN ((rt0.c4, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c4, rt0.c4))) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((v0.c0, rt0.c3, rt0.c1)) BETWEEN ((rt0.c4, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c4, rt0.c4))) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((v0.c0, rt0.c3, rt0.c1)) BETWEEN ((rt0.c4, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c4, rt0.c4))) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((~ (v0.c0)), CAST(v0.c0 AS REAL), CAST(v0.c0 AS REAL)))>((0.10254208586231728, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), v0.c0 COLLATE NOCASE)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((~ (v0.c0)), CAST(v0.c0 AS REAL), CAST(v0.c0 AS REAL)))>((0.10254208586231728, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), v0.c0 COLLATE NOCASE)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((~ (v0.c0)), CAST(v0.c0 AS REAL), CAST(v0.c0 AS REAL)))>((0.10254208586231728, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), v0.c0 COLLATE NOCASE)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(CASE v0.c0  WHEN COUNT(GROUP_CONCAT(v0.c0)) THEN MAX(SUM(GROUP_CONCAT(TOTAL(MIN(SUM(COUNT(MIN(v0.c0)))))))) END) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(CASE v0.c0  WHEN COUNT(GROUP_CONCAT(v0.c0)) THEN MAX(SUM(GROUP_CONCAT(TOTAL(MIN(SUM(COUNT(MIN(v0.c0)))))))) END))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(CASE v0.c0  WHEN COUNT(GROUP_CONCAT(v0.c0)) THEN MAX(SUM(GROUP_CONCAT(TOTAL(MIN(SUM(COUNT(MIN(v0.c0)))))))) END)) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (x'') UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (x''))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((x'') ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3, v0.c0 FROM rt0 INNER JOIN v0 ON CASE ((0xffffffff98a0ab2f)<=(v0.c0))  WHEN (-643332199 IN ()) THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END END;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3, v0.c0 FROM rt0 INNER JOIN v0 ON CASE ((0Xffffffff98a0ab2f)<=(v0.c0))  WHEN (-643332199 IN ()) THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END END WHERE ((((rt0.c3)/(rt0.c2)) IN ())) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3, v0.c0 FROM rt0 INNER JOIN v0 ON CASE ((0xffffffff98a0ab2f)<=(v0.c0))  WHEN (-643332199 IN ()) THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END END WHERE ((NOT ((((rt0.c3)/(rt0.c2)) IN ())))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3, v0.c0 FROM rt0 INNER JOIN v0 ON CASE ((0Xffffffff98a0ab2f)<=(v0.c0))  WHEN (-643332199 IN ()) THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END END WHERE ((((((rt0.c3)/(rt0.c2)) IN ())) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3, v0.c0 FROM rt0 INNER JOIN v0 ON CASE ((0xffffffff98a0ab2f)<=(v0.c0))  WHEN (-643332199 IN ()) THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END END;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE (((INSTR(rt0.c4, rt0.c0)) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((rt0.c4)>=(rt0.c0))))) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT (((INSTR(rt0.c4, rt0.c0)) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((rt0.c4)>=(rt0.c0))))))) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE (((((INSTR(rt0.c4, rt0.c0)) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((rt0.c4)>=(rt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0;
SELECT ALL rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1;
SELECT ALL rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 HAVING (MAX(NULL) IN (SUM(MIN(rt0.c3)), AVG(rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 HAVING (NOT ((MAX(NULL) IN (SUM(MIN(rt0.c3)), AVG(rt0.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 HAVING (((MAX(NULL) IN (SUM(MIN(rt0.c3)), AVG(rt0.c1)))) ISNULL);
SELECT ALL MIN(((((((rt0.c2)>=(v0.c0)))AND(((((rt0.c0)AND(rt0.c2)))AND(v0.c0)))))OR(((rt0.c4)=(rt0.c2))))) FROM rt0, v0 ORDER BY ((((rt0.c3) NOT NULL)) BETWEEN ((((rt0.c2))>=((rt0.c3)))) AND (CAST(rt0.c1 AS TEXT))) DESC  NULLS LAST;
SELECT rt0.c1, rt0.c3 FROM v0, rt0;
SELECT rt0.c1, rt0.c3 FROM v0, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (v0.c0)))AND(CAST(v0.c0 AS REAL)))) ORDER BY rt0.c0;
SELECT ALL rt0.c1, rt0.c3 FROM v0, rt0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c0) AND (v0.c0)))AND(CAST(v0.c0 AS REAL)))))) ORDER BY rt0.c0;
SELECT ALL rt0.c1, rt0.c3 FROM v0, rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c0) AND (v0.c0)))AND(CAST(v0.c0 AS REAL)))) ISNULL)) ORDER BY rt0.c0;
SELECT rt0.c1, rt0.c3 FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE (CASE WHEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END THEN ((rt0.c4) NOT NULL) ELSE json_patch(rt0.c2, rt0.c2) END) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (CASE WHEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END THEN ((rt0.c4) NOT NULL) ELSE json_patch(rt0.c2, rt0.c2) END))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE (((CASE WHEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END THEN ((rt0.c4) NOT NULL) ELSE json_patch(rt0.c2, rt0.c2) END) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0;
SELECT ALL rt0.c4 FROM rt0, v0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0, v0 WHERE ((x'80e97a31' IN ((+ (rt0.c1))))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM rt0, v0 WHERE ((NOT ((x'80e97a31' IN ((+ (rt0.c1))))))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM rt0, v0 WHERE ((((x'80e97a31' IN ((+ (rt0.c1))))) ISNULL)) GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0, v0 GROUP BY rt0.c4;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, v0.c0 FROM v0, rt0;
SELECT ALL rt0.c1, v0.c0 FROM v0, rt0 WHERE (CASE ((rt0.c0)>(v0.c0))  WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END THEN ((rt0.c4)LIKE(rt0.c4)) ELSE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) END) UNION ALL SELECT ALL rt0.c1, v0.c0 FROM v0, rt0 WHERE ((NOT (CASE ((rt0.c0)>(v0.c0))  WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END THEN ((rt0.c4)LIKE(rt0.c4)) ELSE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) END))) UNION ALL SELECT rt0.c1, v0.c0 FROM v0, rt0 WHERE (((CASE ((rt0.c0)>(v0.c0))  WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END THEN ((rt0.c4)LIKE(rt0.c4)) ELSE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) END) ISNULL));
SELECT ALL rt0.c1, v0.c0 FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((v0.c0) IS FALSE) COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((v0.c0) IS FALSE) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((v0.c0) IS FALSE) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4;
SELECT ALL rt0.c1, rt0.c4 FROM rt0 WHERE (CASE '1181322829' COLLATE RTRIM  WHEN (- (rt0.c1)) THEN CASE WHEN rt0.c3 THEN rt0.c2 END WHEN (((rt0.c2))<((rt0.c0))) THEN ((((((((rt0.c1)AND(rt0.c3)))OR('-1974342390')))OR(rt0.c2)))OR(rt0.c3)) WHEN CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END THEN ((rt0.c1) IS TRUE) END) GROUP BY rt0.c1, rt0.c4 UNION SELECT rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT (CASE '1181322829' COLLATE RTRIM  WHEN (- (rt0.c1)) THEN CASE WHEN rt0.c3 THEN rt0.c2 END WHEN (((rt0.c2))<((rt0.c0))) THEN ((((((((rt0.c1)AND(rt0.c3)))OR('-1974342390')))OR(rt0.c2)))OR(rt0.c3)) WHEN CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END THEN ((rt0.c1) IS TRUE) END))) GROUP BY rt0.c1, rt0.c4 UNION SELECT rt0.c1, rt0.c4 FROM rt0 WHERE (((CASE '1181322829' COLLATE RTRIM  WHEN (- (rt0.c1)) THEN CASE WHEN rt0.c3 THEN rt0.c2 END WHEN (((rt0.c2))<((rt0.c0))) THEN ((((((((rt0.c1)AND(rt0.c3)))OR('-1974342390')))OR(rt0.c2)))OR(rt0.c3)) WHEN CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END THEN ((rt0.c1) IS TRUE) END) ISNULL)) GROUP BY rt0.c1, rt0.c4;
SELECT ALL rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4;
SELECT rt0.c4, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1;
SELECT rt0.c4, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1 HAVING ((CAST(SUM(AVG(GROUP_CONCAT(rt0.c2))) AS INTEGER))<=(CASE WHEN v0.c0 THEN MIN(rt0.c0) WHEN 0.2688210496751392 THEN v0.c0 WHEN rt0.c2 THEN TOTAL(MAX(COUNT(*))) END)) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1 HAVING (NOT (((CAST(SUM(AVG(GROUP_CONCAT(rt0.c2))) AS INTEGER))<=(CASE WHEN v0.c0 THEN MIN(rt0.c0) WHEN 0.2688210496751392 THEN v0.c0 WHEN rt0.c2 THEN TOTAL(MAX(COUNT(*))) END)))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1 HAVING ((((CAST(SUM(AVG(GROUP_CONCAT(rt0.c2))) AS INTEGER))<=(CASE WHEN v0.c0 THEN MIN(rt0.c0) WHEN 0.2688210496751392 THEN v0.c0 WHEN rt0.c2 THEN TOTAL(MAX(COUNT(*))) END))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (x'7f91') UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (x'7f91'))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((x'7f91') ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE ((((SUBSTR(rt0.c4, rt0.c2)))>=((rt0.c0)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT ((((SUBSTR(rt0.c4, rt0.c2)))>=((rt0.c0)))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 NOT INDEXED WHERE ((((((SUBSTR(rt0.c4, rt0.c2)))>=((rt0.c0)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0;
SELECT ALL rt0.c0, v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4;
SELECT ALL rt0.c0, v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM v0, rt0 WHERE (CAST(CASE WHEN rt0.c3 THEN -1547348689 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c3 THEN v0.c0 ELSE rt0.c1 END AS REAL)) GROUP BY rt0.c0, v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 UNION SELECT rt0.c0, v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM v0, rt0 WHERE ((NOT (CAST(CASE WHEN rt0.c3 THEN -1547348689 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c3 THEN v0.c0 ELSE rt0.c1 END AS REAL)))) GROUP BY rt0.c0, v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 UNION SELECT rt0.c0, v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM v0, rt0 WHERE (((CAST(CASE WHEN rt0.c3 THEN -1547348689 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c3 THEN v0.c0 ELSE rt0.c1 END AS REAL)) ISNULL)) GROUP BY rt0.c0, v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4;
SELECT ALL rt0.c0, v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2 HAVING TOTAL(GROUP_CONCAT(COUNT(rt0.c0))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (TOTAL(GROUP_CONCAT(COUNT(rt0.c0))))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2 HAVING ((TOTAL(GROUP_CONCAT(COUNT(rt0.c0)))) ISNULL);
SELECT * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (CAST(((rt0.c2)||(v0.c0)) AS NUMERIC)) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (CAST(((rt0.c2)||(v0.c0)) AS NUMERIC)))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((CAST(((rt0.c2)||(v0.c0)) AS NUMERIC)) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT rt0.c3 FROM v0, rt0;
SELECT DISTINCT rt0.c3 FROM v0, rt0 WHERE (((((CAST(rt0.c4 AS NUMERIC))OR((+ (rt0.c4)))))OR(CASE WHEN v0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN 'Pn/*' END))) UNION SELECT DISTINCT rt0.c3 FROM v0, rt0 WHERE ((NOT (((((CAST(rt0.c4 AS NUMERIC))OR((+ (rt0.c4)))))OR(CASE WHEN v0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN 'Pn/*' END))))) UNION SELECT DISTINCT rt0.c3 FROM v0, rt0 WHERE (((((((CAST(rt0.c4 AS NUMERIC))OR((+ (rt0.c4)))))OR(CASE WHEN v0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN 'Pn/*' END))) ISNULL));
SELECT DISTINCT rt0.c3 FROM v0, rt0;
SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM v0, rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c3, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c2 FROM v0, rt0 WHERE ((((rt0.c0)) BETWEEN (((rt0.c1 IN ()))) AND ((rt0.c0 COLLATE BINARY)))) GROUP BY rt0.c0, rt0.c3, rt0.c2 UNION SELECT rt0.c0, rt0.c3, rt0.c2 FROM v0, rt0 WHERE ((NOT ((((rt0.c0)) BETWEEN (((rt0.c1 IN ()))) AND ((rt0.c0 COLLATE BINARY)))))) GROUP BY rt0.c0, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM v0, rt0 WHERE ((((((rt0.c0)) BETWEEN (((rt0.c1 IN ()))) AND ((rt0.c0 COLLATE BINARY)))) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM v0, rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c3, rt0.c2;
SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3 HAVING MAX(AVG(rt0.c0)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3 HAVING (NOT (MAX(AVG(rt0.c0)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3 HAVING ((MAX(AVG(rt0.c0))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((~ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((~ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((~ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c3, rt0.c0 FROM rt0 INNER JOIN v0 ON ((((rt0.c3)<<(rt0.c4)))OR((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4)))));
SELECT DISTINCT rt0.c3, rt0.c0 FROM rt0 INNER JOIN v0 ON ((((rt0.c3)<<(rt0.c4)))OR((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))))) WHERE (CAST((((v0.c0))<>((rt0.c3))) AS TEXT)) UNION SELECT DISTINCT rt0.c3, rt0.c0 FROM rt0 INNER JOIN v0 ON ((((rt0.c3)<<(rt0.c4)))OR((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))))) WHERE ((NOT (CAST((((v0.c0))<>((rt0.c3))) AS TEXT)))) UNION SELECT DISTINCT rt0.c3, rt0.c0 FROM rt0 INNER JOIN v0 ON ((((rt0.c3)<<(rt0.c4)))OR((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))))) WHERE (((CAST((((v0.c0))!=((rt0.c3))) AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0 FROM rt0 INNER JOIN v0 ON ((((rt0.c3)<<(rt0.c4)))OR((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4)))));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0) NOT NULL))) AND ((((v0.c0) IS TRUE))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((((v0.c0) NOT NULL))) AND ((((v0.c0) IS TRUE))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((v0.c0)) BETWEEN ((((v0.c0) NOT NULL))) AND ((((v0.c0) IS TRUE))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c0, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c0, v0.c0, rt0.c3;
SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c0, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c0, v0.c0, rt0.c3 HAVING TOTAL((((rt0.c1)) BETWEEN ((COUNT(MAX(rt0.c2)))) AND ((AVG(x''))))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c0, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c0, v0.c0, rt0.c3 HAVING (NOT (TOTAL((((rt0.c1)) BETWEEN ((COUNT(MAX(rt0.c2)))) AND ((AVG(x''))))))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c0, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c0, v0.c0, rt0.c3 HAVING ((TOTAL((((rt0.c1)) BETWEEN ((COUNT(MAX(rt0.c2)))) AND ((AVG(x'')))))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((- (v0.c0 COLLATE BINARY))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((- (v0.c0 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((- (v0.c0 COLLATE BINARY))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (highlight(CAST(v0.c0 AS INTEGER), ((v0.c0)&(v0.c0)), ((v0.c0) NOTNULL), TRIM(x''))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (highlight(CAST(v0.c0 AS INTEGER), ((v0.c0)&(v0.c0)), ((v0.c0) NOTNULL), TRIM(x''))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((highlight(CAST(v0.c0 AS INTEGER), ((v0.c0)&(v0.c0)), ((v0.c0) NOTNULL), TRIM(x''))) ISNULL));
SELECT ALL rt0.c1, v0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c4, rt0.c2, rt0.c3;
SELECT rt0.c1, v0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0, v0 WHERE (((CASE rt0.c0  WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)IS(((rt0.c0) NOT NULL)))) GROUP BY rt0.c1, v0.c0, rt0.c4, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c1, v0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0, v0 WHERE ((NOT (((CASE rt0.c0  WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)IS(((rt0.c0) NOT NULL)))))) GROUP BY rt0.c1, v0.c0, rt0.c4, rt0.c2, rt0.c3 UNION SELECT rt0.c1, v0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0, v0 WHERE (((((CASE rt0.c0  WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)IS(((rt0.c0) NOT NULL)))) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c4, rt0.c2, rt0.c3;
SELECT ALL rt0.c1, v0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c4, rt0.c2, rt0.c3;
SELECT ALL v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c2)) BETWEEN ((((rt0.c0) IS TRUE))) AND ((((v0.c0) NOT BETWEEN (rt0.c4) AND (v0.c0))))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c2)) BETWEEN ((((rt0.c0) IS TRUE))) AND ((((v0.c0) NOT BETWEEN (rt0.c4) AND (v0.c0))))) GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c2)) BETWEEN ((((rt0.c0) IS TRUE))) AND ((((v0.c0) NOT BETWEEN (rt0.c4) AND (v0.c0))))) GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c2)) BETWEEN ((((rt0.c0) IS TRUE))) AND ((((v0.c0) NOT BETWEEN (rt0.c4) AND (v0.c0))))) GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c2)) BETWEEN ((((rt0.c0) IS TRUE))) AND ((((v0.c0) NOT BETWEEN (rt0.c4) AND (v0.c0))))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c2)) BETWEEN ((((rt0.c0) IS TRUE))) AND ((((v0.c0) NOT BETWEEN (rt0.c4) AND (v0.c0))))) GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c2)) BETWEEN ((((rt0.c0) IS TRUE))) AND ((((v0.c0) NOT BETWEEN (rt0.c4) AND (v0.c0))))) GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c2)) BETWEEN ((((rt0.c0) IS TRUE))) AND ((((v0.c0) NOT BETWEEN (rt0.c4) AND (v0.c0))))) GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c2)) BETWEEN ((((rt0.c0) IS TRUE))) AND ((((v0.c0) NOT BETWEEN (rt0.c4) AND (v0.c0))))) GROUP BY v0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1))>=((rt0.c2))))==(((rt0.c1)>=(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((rt0.c1))>=((rt0.c2))))==(((rt0.c1)>=(rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((((rt0.c1))>=((rt0.c2))))==(((rt0.c1)>=(rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, v0.c0, rt0.c4, rt0.c3 FROM v0, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, v0.c0, rt0.c4, rt0.c3 FROM v0, rt0 WHERE (CASE 0.9745757750758142  WHEN CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN 'nE苦-h|~1]' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END THEN x'b7a4' ELSE (rt0.c3 IN ()) END) UNION SELECT DISTINCT rt0.c0, rt0.c1, v0.c0, rt0.c4, rt0.c3 FROM v0, rt0 WHERE ((NOT (CASE 0.9745757750758142  WHEN CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN 'nE苦-h|~1]' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END THEN x'b7a4' ELSE (rt0.c3 IN ()) END))) UNION SELECT DISTINCT rt0.c0, rt0.c1, v0.c0, rt0.c4, rt0.c3 FROM v0, rt0 WHERE (((CASE 0.9745757750758142  WHEN CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN 'nE苦-h|~1]' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END THEN x'b7a4' ELSE (rt0.c3 IN ()) END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, v0.c0, rt0.c4, rt0.c3 FROM v0, rt0;
SELECT ALL rt0.c3, rt0.c4, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, v0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c4, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE (((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 END) NOT BETWEEN ((((v0.c0))<=((rt0.c4)))) AND (CASE rt0.c4  WHEN rt0.c3 THEN rt0.c3 ELSE NULL END))) GROUP BY rt0.c3, rt0.c4, v0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c4, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((NOT (((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 END) NOT BETWEEN ((((v0.c0))<=((rt0.c4)))) AND (CASE rt0.c4  WHEN rt0.c3 THEN rt0.c3 ELSE NULL END))))) GROUP BY rt0.c3, rt0.c4, v0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c4, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE (((((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 END) NOT BETWEEN ((((v0.c0))<=((rt0.c4)))) AND (CASE rt0.c4  WHEN rt0.c3 THEN rt0.c3 ELSE NULL END))) ISNULL)) GROUP BY rt0.c3, rt0.c4, v0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c4, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, v0.c0, rt0.c2, rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(((((((((((((GROUP_CONCAT(0.29312573971234257))AND(v0.c0)))OR(MAX(GROUP_CONCAT(v0.c0)))))AND(COUNT(*))))OR(v0.c0)))OR(GROUP_CONCAT(v0.c0))))OR(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(((((((((((((GROUP_CONCAT(0.29312573971234257))AND(v0.c0)))OR(MAX(GROUP_CONCAT(v0.c0)))))AND(COUNT(*))))OR(v0.c0)))OR(GROUP_CONCAT(v0.c0))))OR(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(((((((((((((GROUP_CONCAT(0.29312573971234257))AND(v0.c0)))OR(MAX(GROUP_CONCAT(v0.c0)))))AND(COUNT(*))))OR(v0.c0)))OR(GROUP_CONCAT(v0.c0))))OR(v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CAST(v0.c0 COLLATE RTRIM AS TEXT)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(v0.c0 COLLATE RTRIM AS TEXT)))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CAST(v0.c0 COLLATE RTRIM AS TEXT)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt0.c1 FROM rt0, v0;
SELECT DISTINCT rt0.c1 FROM rt0, v0 WHERE (rt0.c1 COLLATE RTRIM) UNION SELECT DISTINCT rt0.c1 FROM rt0, v0 WHERE ((NOT (rt0.c1 COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c1 FROM rt0, v0 WHERE (((rt0.c1 COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0, v0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c4) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c4))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c4) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL v0.c0, rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c4, rt0.c2;
SELECT ALL v0.c0, rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c4, rt0.c2 HAVING (+ (CASE MIN(rt0.c1)  WHEN AVG(AVG(TOTAL(rt0.c4))) THEN '1111812125' WHEN x'' THEN rt0.c2 WHEN rt0.c3 THEN TOTAL(MIN(rt0.c2)) WHEN rt0.c1 THEN rt0.c1 WHEN TOTAL(rt0.c3) THEN AVG(rt0.c3) ELSE rt0.c3 END)) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c4, rt0.c2 HAVING (NOT ((+ (CASE MIN(rt0.c1)  WHEN AVG(AVG(TOTAL(rt0.c4))) THEN '1111812125' WHEN x'' THEN rt0.c2 WHEN rt0.c3 THEN TOTAL(MIN(rt0.c2)) WHEN rt0.c1 THEN rt0.c1 WHEN TOTAL(rt0.c3) THEN AVG(rt0.c3) ELSE rt0.c3 END)))) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c4, rt0.c2 HAVING (((+ (CASE MIN(rt0.c1)  WHEN AVG(AVG(TOTAL(rt0.c4))) THEN '1111812125' WHEN x'' THEN rt0.c2 WHEN rt0.c3 THEN TOTAL(MIN(rt0.c2)) WHEN rt0.c1 THEN rt0.c1 WHEN TOTAL(rt0.c3) THEN AVG(rt0.c3) ELSE rt0.c3 END))) ISNULL);
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (((UPPER(DISTINCT v0.c0)) BETWEEN (rt0.c1) AND ((v0.c0 IN (rt0.c1))))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (((UPPER(DISTINCT v0.c0)) BETWEEN (rt0.c1) AND ((v0.c0 IN (rt0.c1))))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((((UPPER(DISTINCT v0.c0)) BETWEEN (rt0.c1) AND ((v0.c0 IN (rt0.c1))))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE (((load_extension(rt0.c3))IS(LOWER(DISTINCT rt0.c1)))) GROUP BY rt0.c2, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (((load_extension(rt0.c3))IS(LOWER(DISTINCT rt0.c1)))))) GROUP BY rt0.c2, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE (((((load_extension(rt0.c3))IS(LOWER(DISTINCT rt0.c1)))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0;
SELECT rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0;
SELECT rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0;
SELECT ALL rt0.c1 FROM v0, rt0;
SELECT ALL rt0.c1 FROM v0, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0)))) NOT NULL)) UNION ALL SELECT ALL rt0.c1 FROM v0, rt0 WHERE ((NOT ((((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0)))) NOT NULL)))) UNION ALL SELECT rt0.c1 FROM v0, rt0 WHERE ((((((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0)))) NOT NULL)) ISNULL));
SELECT ALL rt0.c1 FROM v0, rt0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN v0 WHERE (((((rt0.c1) BETWEEN (x'') AND (v0.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN v0 WHERE ((NOT (((((rt0.c1) BETWEEN (x'') AND (v0.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN v0 WHERE (((((((rt0.c1) BETWEEN (x'') AND (v0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0 NATURAL JOIN v0;
SELECT ALL rt0.c4 FROM rt0, v0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0, v0 WHERE (rt0.c0) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM rt0, v0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM rt0, v0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0, v0 GROUP BY rt0.c4;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(COUNT(v0.c0))) NOT NULL) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((MIN(COUNT(v0.c0))) NOT NULL))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((MIN(COUNT(v0.c0))) NOT NULL)) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (((((((rt0.c2) NOTNULL))AND(((rt0.c2)<(rt0.c1)))))OR(((((v0.c0)AND(rt0.c4)))OR('馀<<.4.ᕒj'))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (((((((rt0.c2) NOTNULL))AND(((rt0.c2)<(rt0.c1)))))OR(((((v0.c0)AND(rt0.c4)))OR('馀<<.4.ᕒj'))))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((((((((rt0.c2) NOTNULL))AND(((rt0.c2)<(rt0.c1)))))OR(((((v0.c0)AND(rt0.c4)))OR('馀<<.4.ᕒj'))))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c4 AS NUMERIC)) BETWEEN ((rt0.c2 IN (rt0.c3, rt0.c2))) AND (((rt0.c3)OR(rt0.c1))))) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c4 AS NUMERIC)) BETWEEN ((rt0.c2 IN (rt0.c3, rt0.c2))) AND (((rt0.c3)OR(rt0.c1))))))) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c4 AS NUMERIC)) BETWEEN ((rt0.c2 IN (rt0.c3, rt0.c2))) AND (((rt0.c3)OR(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c2 FROM rt0;
SELECT v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4;
SELECT ALL v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM v0, rt0 WHERE ((TYPEOF(rt0.c4) IN (((((x'3b90')OR(v0.c0)))AND(NULL))))) GROUP BY v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 UNION SELECT ALL v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM v0, rt0 WHERE ((NOT ((TYPEOF(rt0.c4) IN (((((x'3b90')OR(v0.c0)))AND(NULL))))))) GROUP BY v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 UNION SELECT ALL v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM v0, rt0 WHERE ((((TYPEOF(rt0.c4) IN (((((x'3b90')OR(v0.c0)))AND(NULL))))) ISNULL)) GROUP BY v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4;
SELECT v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3, v0.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3, v0.c0 HAVING SUM(rtreenode(v0.c0, AVG(GROUP_CONCAT(GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3, v0.c0 HAVING (NOT (SUM(rtreenode(v0.c0, AVG(GROUP_CONCAT(GROUP_CONCAT(rt0.c2))))))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3, v0.c0 HAVING ((SUM(rtreenode(v0.c0, AVG(GROUP_CONCAT(GROUP_CONCAT(rt0.c2)))))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((NULL IN (((v0.c0) IS FALSE)))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((NULL IN (((v0.c0) IS FALSE)))))) UNION ALL SELECT * FROM v0 WHERE ((((NULL IN (((v0.c0) IS FALSE)))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c2, v0.c0, rt0.c1, rt0.c3, rt0.c4 FROM v0, rt0;
SELECT DISTINCT rt0.c2, v0.c0, rt0.c1, rt0.c3, rt0.c4 FROM v0, rt0 WHERE (((((((rt0.c3)OR(rt0.c1)))AND(rt0.c1)))<=((v0.c0 IN ())))) UNION SELECT DISTINCT rt0.c2, v0.c0, rt0.c1, rt0.c3, rt0.c4 FROM v0, rt0 WHERE ((NOT (((((((rt0.c3)OR(rt0.c1)))AND(rt0.c1)))<=((v0.c0 IN ())))))) UNION SELECT DISTINCT rt0.c2, v0.c0, rt0.c1, rt0.c3, rt0.c4 FROM v0, rt0 NOT INDEXED WHERE (((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c1)))<=((v0.c0 IN ())))) ISNULL));
SELECT DISTINCT rt0.c2, v0.c0, rt0.c1, rt0.c3, rt0.c4 FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN x'4f4d' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN ((((v0.c0))==((v0.c0)))) AND ((((v0.c0))>=((v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c0 WHEN x'4f4d' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN ((((v0.c0))=((v0.c0)))) AND ((((v0.c0))>=((v0.c0)))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 WHEN x'4f4d' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN ((((v0.c0))==((v0.c0)))) AND ((((v0.c0))>=((v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING rt0.c3 UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (rt0.c3)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((rt0.c3) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING rt0.c3 UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (rt0.c3)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((rt0.c3) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE BINARY) BETWEEN (((v0.c0) NOTNULL)) AND ((v0.c0 IN ())))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((v0.c0 COLLATE BINARY) BETWEEN (((v0.c0) NOTNULL)) AND ((v0.c0 IN ())))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((v0.c0 COLLATE BINARY) BETWEEN (((v0.c0) NOTNULL)) AND ((v0.c0 IN ())))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((~ (((v0.c0)IS NOT(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((~ (((v0.c0)IS NOT(v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((~ (((v0.c0)IS NOT(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((((v0.c0))=((v0.c0)))))>((LTRIM(v0.c0, v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0))==((v0.c0)))))>((LTRIM(v0.c0, v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((((v0.c0))=((v0.c0)))))>((LTRIM(v0.c0, v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4;
SELECT v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4;
SELECT v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE TYPEOF(DISTINCT v0.c0)  WHEN x'' COLLATE BINARY THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CASE TYPEOF(DISTINCT v0.c0)  WHEN x'' COLLATE BINARY THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CASE TYPEOF(DISTINCT v0.c0)  WHEN x'' COLLATE BINARY THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (CAST(CAST(rt0.c1 AS TEXT) AS BLOB)) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (CAST(CAST(rt0.c1 AS TEXT) AS BLOB)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((CAST(CAST(rt0.c1 AS TEXT) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0 WHERE ((+ (0.7516911644870783))) GROUP BY rt0.c2, rt0.c3 UNION SELECT rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT ((+ (0.7516911644870783))))) GROUP BY rt0.c2, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c3 FROM rt0 WHERE ((((+ (0.7516911644870783))) ISNULL)) GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, v0.c0, rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, v0.c0, rt0.c0, rt0.c4;
SELECT rt0.c1, rt0.c2, rt0.c3, v0.c0, rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, v0.c0, rt0.c0, rt0.c4 HAVING CAST(UNLIKELY(DISTINCT rt0.c4) AS BLOB) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3, v0.c0, rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, v0.c0, rt0.c0, rt0.c4 HAVING (NOT (CAST(UNLIKELY(DISTINCT rt0.c4) AS BLOB))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, v0.c0, rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, v0.c0, rt0.c0, rt0.c4 HAVING ((CAST(UNLIKELY(DISTINCT rt0.c4) AS BLOB)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c3, v0.c0, rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, v0.c0, rt0.c0, rt0.c4;
SELECT rt0.c1, rt0.c2, rt0.c3, v0.c0, rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, v0.c0, rt0.c0, rt0.c4 HAVING CAST(UNLIKELY(DISTINCT rt0.c4) AS BLOB) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3, v0.c0, rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, v0.c0, rt0.c0, rt0.c4 HAVING (NOT (CAST(UNLIKELY(DISTINCT rt0.c4) AS BLOB))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, v0.c0, rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, v0.c0, rt0.c0, rt0.c4 HAVING ((CAST(UNLIKELY(DISTINCT rt0.c4) AS BLOB)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c3, v0.c0, rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, v0.c0, rt0.c0, rt0.c4;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((((+ (v0.c0))) NOT NULL)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((((+ (v0.c0))) NOT NULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((+ (v0.c0))) NOT NULL)) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c2, rt0.c0, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 WHERE ((((((v0.c0)AND(v0.c0)))OR(rt0.c1)) IN ())) UNION SELECT DISTINCT rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 WHERE ((NOT ((((((v0.c0)AND(v0.c0)))OR(rt0.c1)) IN ())))) UNION SELECT DISTINCT rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 WHERE ((((((((v0.c0)AND(v0.c0)))OR(rt0.c1)) IN ())) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, v0.c0 FROM v0, rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(((rt0.c1)%(rt0.c2)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(((rt0.c1)%(rt0.c2)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((SQLITE_COMPILEOPTION_GET(((rt0.c1)%(rt0.c2)))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2 HAVING SUM(COUNT(*)) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((((((rt0.c1)>>(rt0.c0)))OR(((rt0.c3)IS NOT(rt0.c0)))))OR(CAST(rt0.c4 AS BLOB)))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (((((((rt0.c1)>>(rt0.c0)))OR(((rt0.c3)IS NOT(rt0.c0)))))OR(CAST(rt0.c4 AS BLOB)))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((((((((rt0.c1)>>(rt0.c0)))OR(((rt0.c3)IS NOT(rt0.c0)))))OR(CAST(rt0.c4 AS BLOB)))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c4 FROM v0, rt0;
SELECT DISTINCT rt0.c4 FROM v0, rt0 WHERE (((((((v0.c0)GLOB(rt0.c1)))OR((NOT (v0.c0)))))AND((((rt0.c2, v0.c0, rt0.c0)) NOT BETWEEN ((0.8128482835999956, rt0.c1, rt0.c2)) AND ((v0.c0, rt0.c1, rt0.c1)))))) UNION SELECT DISTINCT rt0.c4 FROM v0, rt0 WHERE ((NOT (((((((v0.c0)GLOB(rt0.c1)))OR((NOT (v0.c0)))))AND((((rt0.c2, v0.c0, rt0.c0)) NOT BETWEEN ((0.8128482835999956, rt0.c1, rt0.c2)) AND ((v0.c0, rt0.c1, rt0.c1)))))))) UNION SELECT DISTINCT rt0.c4 FROM v0, rt0 WHERE (((((((((v0.c0)GLOB(rt0.c1)))OR((NOT (v0.c0)))))AND((((rt0.c2, v0.c0, rt0.c0)) NOT BETWEEN ((0.8128482835999956, rt0.c1, rt0.c2)) AND ((v0.c0, rt0.c1, rt0.c1)))))) ISNULL));
SELECT DISTINCT rt0.c4 FROM v0, rt0;
SELECT ALL v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c2 FROM rt0, v0 WHERE ((((+ (rt0.c2))) BETWEEN (((((rt0.c1)OR(v0.c0)))AND(rt0.c2))) AND (rt0.c2))) GROUP BY v0.c0, rt0.c2 UNION SELECT ALL v0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT ((((+ (rt0.c2))) BETWEEN (((((rt0.c1)OR(v0.c0)))AND(rt0.c2))) AND (rt0.c2))))) GROUP BY v0.c0, rt0.c2 UNION SELECT ALL v0.c0, rt0.c2 FROM rt0, v0 WHERE ((((((+ (rt0.c2))) BETWEEN (((((rt0.c1)OR(v0.c0)))AND(rt0.c2))) AND (rt0.c2))) ISNULL)) GROUP BY v0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(MIN(COUNT(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(MIN(COUNT(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(MIN(COUNT(v0.c0)))) ISNULL);
SELECT ALL MIN(NULL) FROM v0, rt0 ORDER BY (((v0.c0)) BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((NULL))) ASC, ((((rt0.c0)+(rt0.c2))) BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND (CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 END));
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (((v0.c0)%(((rt0.c4)<(x''))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (((v0.c0)%(((rt0.c4)<(x''))))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((((v0.c0)%(((rt0.c4)<(x''))))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT rt0.c4, v0.c0, rt0.c2, rt0.c0, rt0.c3 FROM rt0, v0;
SELECT DISTINCT rt0.c4, v0.c0, rt0.c2, rt0.c0, rt0.c3 FROM rt0, v0 WHERE (CAST('' AS BLOB)) UNION SELECT DISTINCT rt0.c4, v0.c0, rt0.c2, rt0.c0, rt0.c3 FROM rt0, v0 WHERE ((NOT (CAST('' AS BLOB)))) UNION SELECT DISTINCT rt0.c4, v0.c0, rt0.c2, rt0.c0, rt0.c3 FROM rt0, v0 WHERE (((CAST('' AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c4, v0.c0, rt0.c2, rt0.c0, rt0.c3 FROM rt0, v0;
SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c3, rt0.c1, rt0.c2 FROM rt0, v0 WHERE (((((rt0.c0)<<(rt0.c3)))%(((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0))))) GROUP BY rt0.c3, rt0.c1, rt0.c2 UNION SELECT rt0.c3, rt0.c1, rt0.c2 FROM rt0, v0 WHERE ((NOT (((((rt0.c0)<<(rt0.c3)))%(((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0))))))) GROUP BY rt0.c3, rt0.c1, rt0.c2 UNION SELECT rt0.c3, rt0.c1, rt0.c2 FROM rt0, v0 WHERE (((((((rt0.c0)<<(rt0.c3)))%(((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0))))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1, rt0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE MAX(v0.c0)  WHEN ('hZ3[SPF^' IN (MIN(x''))) THEN COUNT(TOTAL(v0.c0)) END UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CASE MAX(v0.c0)  WHEN ('hZ3[SPF^' IN (MIN(x''))) THEN COUNT(TOTAL(v0.c0)) END)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE MAX(v0.c0)  WHEN ('hZ3[SPF^' IN (MIN(x''))) THEN COUNT(TOTAL(v0.c0)) END) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CASE WHEN (rt0.c2 IN (rt0.c0)) THEN (rt0.c2 IN (rt0.c0, rt0.c2)) ELSE (((rt0.c4)) BETWEEN ((rt0.c2)) AND ((0.5835320980329619))) END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE WHEN (rt0.c2 IN (rt0.c0)) THEN (rt0.c2 IN (rt0.c0, rt0.c2)) ELSE (((rt0.c4)) BETWEEN ((rt0.c2)) AND ((0.5835320980329619))) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN (rt0.c2 IN (rt0.c0)) THEN (rt0.c2 IN (rt0.c0, rt0.c2)) ELSE (((rt0.c4)) BETWEEN ((rt0.c2)) AND ((0.5835320980329619))) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((rt0.c0) NOT NULL)) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (NULL COLLATE BINARY))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0) NOT NULL)) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (NULL COLLATE BINARY))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((((rt0.c0) NOT NULL)) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (NULL COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c3, rt0.c2, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c2) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)))) GROUP BY rt0.c3, rt0.c2, rt0.c4;
SELECT rt0.c3, rt0.c2, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c2) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)))) WHERE ((((((((rt0.c3)) NOT BETWEEN ((1909229365)) AND ((rt0.c3))))AND(rt0.c3 COLLATE NOCASE)))OR(((((((((x'')OR(rt0.c4)))OR(rt0.c1)))AND(rt0.c3)))AND(v0.c0))))) GROUP BY rt0.c3, rt0.c2, rt0.c4 UNION SELECT rt0.c3, rt0.c2, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c2) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)))) WHERE ((NOT ((((((((rt0.c3)) NOT BETWEEN ((1909229365)) AND ((rt0.c3))))AND(rt0.c3 COLLATE NOCASE)))OR(((((((((x'')OR(rt0.c4)))OR(rt0.c1)))AND(rt0.c3)))AND(v0.c0))))))) GROUP BY rt0.c3, rt0.c2, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c2) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)))) WHERE ((((((((((rt0.c3)) NOT BETWEEN ((1909229365)) AND ((rt0.c3))))AND(rt0.c3 COLLATE NOCASE)))OR(((((((((x'')OR(rt0.c4)))OR(rt0.c1)))AND(rt0.c3)))AND(v0.c0))))) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c4;
SELECT rt0.c3, rt0.c2, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c2) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)))) GROUP BY rt0.c3, rt0.c2, rt0.c4;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((SUM(GROUP_CONCAT(MAX(COUNT(*))))) ISNULL)) BETWEEN (TOTAL(TOTAL(COUNT(*)))) AND (((COUNT(MAX(TOTAL(v0.c0))))>(MIN(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((SUM(GROUP_CONCAT(MAX(COUNT(*))))) ISNULL)) BETWEEN (TOTAL(TOTAL(COUNT(*)))) AND (((COUNT(MAX(TOTAL(v0.c0))))>(MIN(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((SUM(GROUP_CONCAT(MAX(COUNT(*))))) ISNULL)) BETWEEN (TOTAL(TOTAL(COUNT(*)))) AND (((COUNT(MAX(TOTAL(v0.c0))))>(MIN(v0.c0)))))) ISNULL);
SELECT v0.c0 FROM rt0, v0;
SELECT v0.c0 FROM rt0, v0 WHERE (((((((rt0.c1) ISNULL))AND((((rt0.c2, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c1, v0.c0, rt0.c1)) AND ((v0.c0, rt0.c3, NULL))))))OR(((((rt0.c3)AND(rt0.c2)))AND(rt0.c4))))) UNION ALL SELECT v0.c0 FROM rt0, v0 WHERE ((NOT (((((((rt0.c1) ISNULL))AND((((rt0.c2, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c1, v0.c0, rt0.c1)) AND ((v0.c0, rt0.c3, NULL))))))OR(((((rt0.c3)AND(rt0.c2)))AND(rt0.c4))))))) UNION ALL SELECT ALL v0.c0 FROM rt0, v0 WHERE (((((((((rt0.c1) ISNULL))AND((((rt0.c2, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c1, v0.c0, rt0.c1)) AND ((v0.c0, rt0.c3, NULL))))))OR(((((rt0.c3)AND(rt0.c2)))AND(rt0.c4))))) ISNULL));
SELECT v0.c0 FROM rt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ('FN') UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ('FN'))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((('FN') ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c1 FROM v0, rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))/(((rt0.c4)<>(rt0.c2))))) GROUP BY rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))/(((rt0.c4)<>(rt0.c2))))))) GROUP BY rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c1 FROM v0, rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))/(((rt0.c4)!=(rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 HAVING COUNT(COUNT(*)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT rt0.c3, rt0.c1 FROM rt0;
SELECT rt0.c3, rt0.c1 FROM rt0 WHERE (rt0.c3) UNION ALL SELECT ALL rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c3))) UNION ALL SELECT rt0.c3, rt0.c1 FROM rt0 WHERE (((rt0.c3) ISNULL));
SELECT rt0.c3, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((rt0.c4 COLLATE RTRIM)OR((((rt0.c0, rt0.c1, rt0.c3)) BETWEEN ((rt0.c4, rt0.c0, rt0.c0)) AND ((rt0.c4, rt0.c4, '1350761507'))))))OR(((rt0.c0)>=('0.5062982007741365'))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((rt0.c4 COLLATE RTRIM)OR((((rt0.c0, rt0.c1, rt0.c3)) BETWEEN ((rt0.c4, rt0.c0, rt0.c0)) AND ((rt0.c4, rt0.c4, '1350761507'))))))OR(((rt0.c0)>=('0.5062982007741365'))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((rt0.c4 COLLATE RTRIM)OR((((rt0.c0, rt0.c1, rt0.c3)) BETWEEN ((rt0.c4, rt0.c0, rt0.c0)) AND ((rt0.c4, rt0.c4, '1350761507'))))))OR(((rt0.c0)>=('0.5062982007741365'))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE (rt0.c0 COLLATE NOCASE) GROUP BY rt0.c0, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (rt0.c0 COLLATE NOCASE))) GROUP BY rt0.c0, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(((AVG(TOTAL(GROUP_CONCAT(MIN(SUM(SUM(COUNT(v0.c0)))))))) NOTNULL)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(((AVG(TOTAL(GROUP_CONCAT(MIN(SUM(SUM(COUNT(v0.c0)))))))) NOTNULL)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(((AVG(TOTAL(GROUP_CONCAT(MIN(SUM(SUM(COUNT(v0.c0)))))))) NOTNULL))) ISNULL);
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (((v0.c0 IN ()) IN ())) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (((v0.c0 IN ()) IN ())))) UNION ALL SELECT * FROM v0, rt0 WHERE (((((v0.c0 IN ()) IN ())) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0 IN (v0.c0))) IS TRUE)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 IN (v0.c0))) IS TRUE)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0 IN (v0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c3, rt0.c2, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON NULLIF(((((rt0.c0)AND(v0.c0)))AND(rt0.c3)), ((rt0.c2)-(rt0.c3))) GROUP BY rt0.c3, rt0.c2, v0.c0;
SELECT ALL rt0.c3, rt0.c2, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON NULLIF(((((rt0.c0)AND(v0.c0)))AND(rt0.c3)), ((rt0.c2)-(rt0.c3))) WHERE ((+ (TOTAL_CHANGES()))) GROUP BY rt0.c3, rt0.c2, v0.c0 UNION SELECT ALL rt0.c3, rt0.c2, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON NULLIF(((((rt0.c0)AND(v0.c0)))AND(rt0.c3)), ((rt0.c2)-(rt0.c3))) WHERE ((NOT ((+ (TOTAL_CHANGES()))))) GROUP BY rt0.c3, rt0.c2, v0.c0 UNION SELECT rt0.c3, rt0.c2, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON NULLIF(((((rt0.c0)AND(v0.c0)))AND(rt0.c3)), ((rt0.c2)-(rt0.c3))) WHERE ((((+ (TOTAL_CHANGES()))) ISNULL)) GROUP BY rt0.c3, rt0.c2, v0.c0;
SELECT rt0.c3, rt0.c2, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON NULLIF(((((rt0.c0)AND(v0.c0)))AND(rt0.c3)), ((rt0.c2)-(rt0.c3))) GROUP BY rt0.c3, rt0.c2, v0.c0;
SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (COUNT(TOTAL(AVG(MAX(AVG(MIN(NULL)))))) IN ()) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((COUNT(TOTAL(AVG(MAX(AVG(MIN(NULL)))))) IN ()))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((COUNT(TOTAL(AVG(MAX(AVG(MIN(NULL)))))) IN ())) ISNULL);
SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (COUNT(TOTAL(AVG(MAX(AVG(MIN(NULL)))))) IN ()) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((COUNT(TOTAL(AVG(MAX(AVG(MIN(NULL)))))) IN ()))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((COUNT(TOTAL(AVG(MAX(AVG(MIN(NULL)))))) IN ())) ISNULL);
SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT ALL rt0.c3, v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0;
SELECT rt0.c3, v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)))OR(((rt0.c0) IS FALSE))))OR(''))) UNION ALL SELECT rt0.c3, v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT (((((((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)))OR(((rt0.c0) IS FALSE))))OR(''))))) UNION ALL SELECT rt0.c3, v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (((((((((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)))OR(((rt0.c0) IS FALSE))))OR(''))) ISNULL));
SELECT ALL rt0.c3, v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0))=((v0.c0)))) NOT BETWEEN (((v0.c0)IS NOT(v0.c0))) AND (((v0.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((((v0.c0))==((v0.c0)))) NOT BETWEEN (((v0.c0)IS NOT(v0.c0))) AND (((v0.c0) NOTNULL)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((((v0.c0))==((v0.c0)))) NOT BETWEEN (((v0.c0)IS NOT(v0.c0))) AND (((v0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0 WHERE (((CASE rt0.c1  WHEN v0.c0 THEN rt0.c3 ELSE v0.c0 END) NOTNULL)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM v0, rt0 WHERE ((NOT (((CASE rt0.c1  WHEN v0.c0 THEN rt0.c3 ELSE v0.c0 END) NOTNULL)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM v0, rt0 WHERE (((((CASE rt0.c1  WHEN v0.c0 THEN rt0.c3 ELSE v0.c0 END) NOTNULL)) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON (0Xffffffff9f2aadd5 COLLATE BINARY IN ()) GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON (0Xffffffff9f2aadd5 COLLATE BINARY IN ()) GROUP BY rt0.c2, rt0.c3 HAVING (((v0.c0) NOT NULL) IN ()) UNION ALL SELECT rt0.c2, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON (0xffffffff9f2aadd5 COLLATE BINARY IN ()) GROUP BY rt0.c2, rt0.c3 HAVING (NOT ((((v0.c0) NOT NULL) IN ()))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON (0Xffffffff9f2aadd5 COLLATE BINARY IN ()) GROUP BY rt0.c2, rt0.c3 HAVING (((((v0.c0) NOT NULL) IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON (0Xffffffff9f2aadd5 COLLATE BINARY IN ()) GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON (0Xffffffff9f2aadd5 COLLATE BINARY IN ()) GROUP BY rt0.c2, rt0.c3 HAVING (((v0.c0) NOT NULL) IN ()) UNION ALL SELECT rt0.c2, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON (0xffffffff9f2aadd5 COLLATE BINARY IN ()) GROUP BY rt0.c2, rt0.c3 HAVING (NOT ((((v0.c0) NOT NULL) IN ()))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON (0Xffffffff9f2aadd5 COLLATE BINARY IN ()) GROUP BY rt0.c2, rt0.c3 HAVING (((((v0.c0) NOT NULL) IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON (0Xffffffff9f2aadd5 COLLATE BINARY IN ()) GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 END)<((rt0.c1 IN (rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN rt0.c1 END)<((rt0.c1 IN (rt0.c1))))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c1 END)<((rt0.c1 IN (rt0.c1))))) ISNULL));
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0)>>(v0.c0)))+((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)>>(v0.c0)))+((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0)>>(v0.c0)))+((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c2;
SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM rt0, v0 WHERE (((((((((((rt0.c3) IS TRUE))OR(((((((((rt0.c1)OR(v0.c0)))OR(rt0.c1)))AND(0.8720482950547648)))AND(rt0.c0)))))OR('0.8720482950547648')))AND(x'')))AND(0.708143712034349))) GROUP BY rt0.c3, rt0.c4, rt0.c2 UNION SELECT rt0.c3, rt0.c4, rt0.c2 FROM rt0, v0 WHERE ((NOT (((((((((((rt0.c3) IS TRUE))OR(((((((((rt0.c1)OR(v0.c0)))OR(rt0.c1)))AND(0.8720482950547648)))AND(rt0.c0)))))OR('0.8720482950547648')))AND(x'')))AND(0.708143712034349))))) GROUP BY rt0.c3, rt0.c4, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM rt0, v0 WHERE (((((((((((((rt0.c3) IS TRUE))OR(((((((((rt0.c1)OR(v0.c0)))OR(rt0.c1)))AND(0.8720482950547648)))AND(rt0.c0)))))OR('0.8720482950547648')))AND(x'')))AND(0.708143712034349))) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c2;
SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c2;
SELECT v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c0;
SELECT v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (v0.c0 COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (v0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((v0.c0 COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT rt0.c3, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c3, v0.c0 FROM v0, rt0 WHERE (((rt0.c4 COLLATE BINARY)|(((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1))))) UNION SELECT DISTINCT rt0.c3, v0.c0 FROM v0, rt0 WHERE ((NOT (((rt0.c4 COLLATE BINARY)|(((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1))))))) UNION SELECT DISTINCT rt0.c3, v0.c0 FROM v0, rt0 WHERE (((((rt0.c4 COLLATE BINARY)|(((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c3, v0.c0 FROM v0, rt0;
SELECT rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1;
SELECT ALL rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1, v0.c0;
SELECT rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1, v0.c0 HAVING MIN((((v0.c0, TOTAL(TOTAL(rt0.c1)), rt0.c0))>((GROUP_CONCAT(rt0.c2), COUNT(COUNT(COUNT(*))), rt0.c2)))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1, v0.c0 HAVING (NOT (MIN((((v0.c0, TOTAL(TOTAL(rt0.c1)), rt0.c0))>((GROUP_CONCAT(rt0.c2), COUNT(COUNT(COUNT(*))), rt0.c2)))))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1, v0.c0 HAVING ((MIN((((v0.c0, TOTAL(TOTAL(rt0.c1)), rt0.c0))>((GROUP_CONCAT(rt0.c2), COUNT(COUNT(COUNT(*))), rt0.c2))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c4) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c4))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c4) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT v0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0, v0;
SELECT DISTINCT v0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0, v0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4)))!=((rt0.c1 IN (rt0.c1))))) UNION SELECT DISTINCT v0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0, v0 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4)))<>((rt0.c1 IN (rt0.c1))))))) UNION SELECT DISTINCT v0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0, v0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4)))<>((rt0.c1 IN (rt0.c1))))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CASE WHEN v0.c0 THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (NULL)) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN v0.c0 THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (NULL)) END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (NULL)) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MAX((((SUM(COUNT(*)), rt0.c2, AVG(TOTAL(SUM(rt0.c1))))) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c0)) AND ((TOTAL(rt0.c4), rt0.c4, GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MAX((((SUM(COUNT(*)), rt0.c2, AVG(TOTAL(SUM(rt0.c1))))) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c0)) AND ((TOTAL(rt0.c4), rt0.c4, GROUP_CONCAT(COUNT(*)))))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MAX((((SUM(COUNT(*)), rt0.c2, AVG(TOTAL(SUM(rt0.c1))))) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c0)) AND ((TOTAL(rt0.c4), rt0.c4, GROUP_CONCAT(COUNT(*))))))) ISNULL);
SELECT rt0.c1, rt0.c3, v0.c0, rt0.c4, rt0.c0 FROM v0, rt0;
SELECT ALL rt0.c1, rt0.c3, v0.c0, rt0.c4, rt0.c0 FROM v0, rt0 WHERE (CASE WHEN NULLIF(DISTINCT rt0.c1, rt0.c0) THEN CAST(rt0.c2 AS NUMERIC) WHEN CAST(x'' AS INTEGER) THEN rt0.c2 COLLATE BINARY WHEN rt0.c4 COLLATE RTRIM THEN v0.c0 WHEN ((rt0.c4) NOTNULL) THEN 0.4562202031028094 WHEN ((v0.c0)IS NOT(rt0.c1)) THEN (NOT (rt0.c4)) WHEN (rt0.c0 IN (rt0.c1)) THEN (+ (rt0.c4)) WHEN CASE rt0.c4  WHEN v0.c0 THEN '998832694' WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN 0.870494861501529 ELSE rt0.c4 END THEN (rt0.c0 IN ()) END) UNION ALL SELECT ALL rt0.c1, rt0.c3, v0.c0, rt0.c4, rt0.c0 FROM v0, rt0 WHERE ((NOT (CASE WHEN NULLIF(DISTINCT rt0.c1, rt0.c0) THEN CAST(rt0.c2 AS NUMERIC) WHEN CAST(x'' AS INTEGER) THEN rt0.c2 COLLATE BINARY WHEN rt0.c4 COLLATE RTRIM THEN v0.c0 WHEN ((rt0.c4) NOTNULL) THEN 0.4562202031028094 WHEN ((v0.c0)IS NOT(rt0.c1)) THEN (NOT (rt0.c4)) WHEN (rt0.c0 IN (rt0.c1)) THEN (+ (rt0.c4)) WHEN CASE rt0.c4  WHEN v0.c0 THEN '998832694' WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN 0.870494861501529 ELSE rt0.c4 END THEN (rt0.c0 IN ()) END))) UNION ALL SELECT ALL rt0.c1, rt0.c3, v0.c0, rt0.c4, rt0.c0 FROM v0, rt0 WHERE (((CASE WHEN NULLIF(DISTINCT rt0.c1, rt0.c0) THEN CAST(rt0.c2 AS NUMERIC) WHEN CAST(x'' AS INTEGER) THEN rt0.c2 COLLATE BINARY WHEN rt0.c4 COLLATE RTRIM THEN v0.c0 WHEN ((rt0.c4) NOTNULL) THEN 0.4562202031028094 WHEN ((v0.c0)IS NOT(rt0.c1)) THEN (NOT (rt0.c4)) WHEN (rt0.c0 IN (rt0.c1)) THEN (+ (rt0.c4)) WHEN CASE rt0.c4  WHEN v0.c0 THEN '998832694' WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN 0.870494861501529 ELSE rt0.c4 END THEN (rt0.c0 IN ()) END) ISNULL));
SELECT rt0.c1, rt0.c3, v0.c0, rt0.c4, rt0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c4, rt0.c2, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c4, rt0.c2, v0.c0 FROM rt0, v0 WHERE (CAST(((((rt0.c3)OR(rt0.c1)))AND(rt0.c1)) AS TEXT)) UNION SELECT DISTINCT rt0.c4, rt0.c2, v0.c0 FROM rt0, v0 WHERE ((NOT (CAST(((((rt0.c3)OR(rt0.c1)))AND(rt0.c1)) AS TEXT)))) UNION SELECT DISTINCT rt0.c4, rt0.c2, v0.c0 FROM rt0, v0 WHERE (((CAST(((((rt0.c3)OR(rt0.c1)))AND(rt0.c1)) AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c2, v0.c0 FROM rt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CAST(((v0.c0) NOTNULL) AS TEXT)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 NOT INDEXED WHERE ((NOT (CAST(((v0.c0) NOTNULL) AS TEXT)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CAST(((v0.c0) NOTNULL) AS TEXT)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, rt0.c3, rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, rt0.c0, rt0.c4;
SELECT ALL v0.c0, rt0.c3, rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, rt0.c0, rt0.c4 HAVING 0xffffffff9491d064 UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, rt0.c0, rt0.c4 HAVING (NOT (0xffffffff9491d064)) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, rt0.c0, rt0.c4 HAVING ((0xffffffff9491d064) ISNULL);
SELECT ALL v0.c0, rt0.c3, rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, rt0.c0, rt0.c4;
SELECT ALL v0.c0, rt0.c3, rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, rt0.c0, rt0.c4 HAVING 0xffffffff9491d064 UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, rt0.c0, rt0.c4 HAVING (NOT (0xffffffff9491d064)) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, rt0.c0, rt0.c4 HAVING ((0xffffffff9491d064) ISNULL);
SELECT ALL v0.c0, rt0.c3, rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, rt0.c0, rt0.c4;
SELECT rt0.c4 FROM rt0;
SELECT rt0.c4 FROM rt0 WHERE (((((0Xfffffffffa645d73)==(rt0.c2)))||(rt0.c0))) UNION ALL SELECT ALL rt0.c4 FROM rt0 WHERE ((NOT (((((0Xfffffffffa645d73)==(rt0.c2)))||(rt0.c0))))) UNION ALL SELECT rt0.c4 FROM rt0 WHERE (((((((0xfffffffffa645d73)==(rt0.c2)))||(rt0.c0))) ISNULL));
SELECT rt0.c4 FROM rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c3 FROM v0, rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM v0, rt0 WHERE (0.627763684203563 COLLATE RTRIM) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM v0, rt0 WHERE ((NOT (0.627763684203563 COLLATE RTRIM))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM v0 NOT INDEXED, rt0 WHERE (((0.627763684203563 COLLATE RTRIM) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM v0, rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2, v0.c0;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2, v0.c0 HAVING rt0.c4 UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2, v0.c0 HAVING (NOT (rt0.c4)) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2, v0.c0 HAVING ((rt0.c4) ISNULL);
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2, v0.c0;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2, v0.c0 HAVING rt0.c4 UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2, v0.c0 HAVING (NOT (rt0.c4)) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2, v0.c0 HAVING ((rt0.c4) ISNULL);
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2, v0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE RTRIM)=(x'5f3d'))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((v0.c0 COLLATE RTRIM)==(x'5f3d'))))) UNION ALL SELECT * FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)=(x'5f3d'))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1)OR(rt0.c3)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1)OR(rt0.c3)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1)OR(rt0.c3)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c3 FROM rt0 NOT INDEXED, v0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 WHERE (((rt0.c3 COLLATE RTRIM)%(v0.c0))) GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c3 UNION SELECT rt0.c0, rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 WHERE ((NOT (((rt0.c3 COLLATE RTRIM)%(v0.c0))))) GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 WHERE (((((rt0.c3 COLLATE RTRIM)%(v0.c0))) ISNULL)) GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c3 FROM rt0 NOT INDEXED, v0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c3;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(GROUP_CONCAT(MAX(v0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(MAX(v0.c0)) COLLATE RTRIM))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(GROUP_CONCAT(MAX(v0.c0)) COLLATE RTRIM)) ISNULL);
SELECT ALL rt0.c4, rt0.c1, v0.c0, rt0.c3, rt0.c2 FROM rt0, v0;
SELECT ALL rt0.c4, rt0.c1, v0.c0, rt0.c3, rt0.c2 FROM rt0, v0 WHERE (((rt0.c1) BETWEEN (rt0.c4) AND (((rt0.c3) NOT BETWEEN (rt0.c1) AND (v0.c0))))) UNION ALL SELECT rt0.c4, rt0.c1, v0.c0, rt0.c3, rt0.c2 FROM rt0, v0 WHERE ((NOT (((rt0.c1) BETWEEN (rt0.c4) AND (((rt0.c3) NOT BETWEEN (rt0.c1) AND (v0.c0))))))) UNION ALL SELECT rt0.c4, rt0.c1, v0.c0, rt0.c3, rt0.c2 FROM rt0, v0 WHERE (((((rt0.c1) BETWEEN (rt0.c4) AND (((rt0.c3) NOT BETWEEN (rt0.c1) AND (v0.c0))))) ISNULL));
SELECT ALL rt0.c4, rt0.c1, v0.c0, rt0.c3, rt0.c2 FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (TRIM(DISTINCT ((rt0.c3) NOTNULL), CAST(rt0.c3 AS REAL))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (TRIM(DISTINCT ((rt0.c3) NOTNULL), CAST(rt0.c3 AS REAL))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((TRIM(DISTINCT ((rt0.c3) NOTNULL), CAST(rt0.c3 AS REAL))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c4;
SELECT rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 WHERE (x'1877c82d') GROUP BY rt0.c2, v0.c0, rt0.c4 UNION SELECT rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 WHERE ((NOT (x'1877c82d'))) GROUP BY rt0.c2, v0.c0, rt0.c4 UNION SELECT ALL rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 WHERE (((x'1877c82d') ISNULL)) GROUP BY rt0.c2, v0.c0, rt0.c4;
SELECT ALL rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c4;
SELECT rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c0 HAVING ((0.694176049215312) IS FALSE) UNION ALL SELECT rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c0 HAVING (NOT (((0.694176049215312) IS FALSE))) UNION ALL SELECT ALL rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c0 HAVING ((((0.694176049215312) IS FALSE)) ISNULL);
SELECT rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c0 HAVING ((0.694176049215312) IS FALSE) UNION ALL SELECT rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c0 HAVING (NOT (((0.694176049215312) IS FALSE))) UNION ALL SELECT ALL rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c0 HAVING ((((0.694176049215312) IS FALSE)) ISNULL);
SELECT rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c1, v0.c0 FROM rt0 NATURAL JOIN v0;
SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c1, v0.c0 FROM rt0 NATURAL JOIN v0 WHERE (((rt0.c1 COLLATE RTRIM) IS TRUE)) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1, v0.c0 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (((rt0.c1 COLLATE RTRIM) IS TRUE)))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c1, v0.c0 FROM rt0 NATURAL JOIN v0 WHERE (((((rt0.c1 COLLATE RTRIM) IS TRUE)) ISNULL));
SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c1, v0.c0 FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((((CASE 0.6644614334124679  WHEN rt0.c4 THEN rt0.c2 ELSE '' END))<>(((('631612936') BETWEEN (v0.c0) AND (v0.c0)))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((((CASE 0.6644614334124679  WHEN rt0.c4 THEN rt0.c2 ELSE '' END))<>(((('631612936') BETWEEN (v0.c0) AND (v0.c0)))))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((((CASE 0.6644614334124679  WHEN rt0.c4 THEN rt0.c2 ELSE '' END))!=(((('631612936') BETWEEN (v0.c0) AND (v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c3 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c3;
SELECT rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c3 FROM v0 NATURAL JOIN rt0 WHERE (CASE WHEN (((rt0.c1))<=((v0.c0))) THEN (~ (rt0.c2)) WHEN rt0.c1 THEN CASE WHEN rt0.c4 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c3 END WHEN rt0.c1 THEN (((rt0.c1, rt0.c1, rt0.c4, rt0.c0, rt0.c4))==((rt0.c2, rt0.c0, rt0.c1, rt0.c1, rt0.c1))) END) GROUP BY rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c3 UNION SELECT rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c3 FROM v0 NATURAL JOIN rt0 WHERE ((NOT (CASE WHEN (((rt0.c1))<=((v0.c0))) THEN (~ (rt0.c2)) WHEN rt0.c1 THEN CASE WHEN rt0.c4 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c3 END WHEN rt0.c1 THEN (((rt0.c1, rt0.c1, rt0.c4, rt0.c0, rt0.c4))=((rt0.c2, rt0.c0, rt0.c1, rt0.c1, rt0.c1))) END))) GROUP BY rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c3 UNION SELECT rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c3 FROM v0 NATURAL JOIN rt0 WHERE (((CASE WHEN (((rt0.c1))<=((v0.c0))) THEN (~ (rt0.c2)) WHEN rt0.c1 THEN CASE WHEN rt0.c4 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c3 END WHEN rt0.c1 THEN (((rt0.c1, rt0.c1, rt0.c4, rt0.c0, rt0.c4))=((rt0.c2, rt0.c0, rt0.c1, rt0.c1, rt0.c1))) END) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c3 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c4, rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c4, rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c2 HAVING ((((((AVG(MIN(MIN(COUNT(rt0.c4)))))) BETWEEN ((MIN(rt0.c2))) AND ((MAX(MIN(COUNT(rt0.c0)))))), '373588719', GROUP_CONCAT(MIN(rt0.c3))))<=((COUNT(*), (- (AVG(rt0.c4))), AVG(rt0.c3)))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c2 HAVING (NOT (((((((AVG(MIN(MIN(COUNT(rt0.c4)))))) BETWEEN ((MIN(rt0.c2))) AND ((MAX(MIN(COUNT(rt0.c0)))))), '373588719', GROUP_CONCAT(MIN(rt0.c3))))<=((COUNT(*), (- (AVG(rt0.c4))), AVG(rt0.c3)))))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c2 HAVING ((((((((AVG(MIN(MIN(COUNT(rt0.c4)))))) BETWEEN ((MIN(rt0.c2))) AND ((MAX(MIN(COUNT(rt0.c0)))))), '373588719', GROUP_CONCAT(MIN(rt0.c3))))<=((COUNT(*), (- (AVG(rt0.c4))), AVG(rt0.c3))))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CAST('7+b*fGfE9' AS INTEGER)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CAST('7+b*fGfE9' AS INTEGER)))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CAST('7+b*fGfE9' AS INTEGER)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt0.c0, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c4 FROM rt0 WHERE ((((((rt0.c2)*(rt0.c1))))<((CAST(rt0.c1 AS BLOB))))) UNION SELECT DISTINCT rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT ((((((rt0.c2)*(rt0.c1))))<((CAST(rt0.c1 AS BLOB))))))) UNION SELECT DISTINCT rt0.c0, rt0.c4 FROM rt0 WHERE ((((((((rt0.c2)*(rt0.c1))))<((CAST(rt0.c1 AS BLOB))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c4 FROM rt0;
SELECT rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1;
SELECT rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM v0, rt0 WHERE (CAST(IFNULL(v0.c0, rt0.c1) AS REAL)) GROUP BY rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1 UNION SELECT ALL rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM v0, rt0 WHERE ((NOT (CAST(IFNULL(v0.c0, rt0.c1) AS REAL)))) GROUP BY rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1 UNION SELECT ALL rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM v0, rt0 WHERE (((CAST(IFNULL(v0.c0, rt0.c1) AS REAL)) ISNULL)) GROUP BY rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1;
SELECT rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 HAVING MAX(AVG(MIN(rt0.c3))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 HAVING (NOT (MAX(AVG(MIN(rt0.c3))))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 HAVING ((MAX(AVG(MIN(rt0.c3)))) ISNULL);
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE ((rt0.c2 COLLATE NOCASE IN ())) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT ((rt0.c2 COLLATE NOCASE IN ())))) UNION ALL SELECT * FROM v0, rt0 WHERE ((((rt0.c2 COLLATE NOCASE IN ())) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (NULLIF(((((((((rt0.c3)AND(rt0.c2)))OR(v0.c0)))AND(rt0.c1)))AND(rt0.c2)), (((v0.c0))<=((v0.c0))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (NULLIF(((((((((rt0.c3)AND(rt0.c2)))OR(v0.c0)))AND(rt0.c1)))AND(rt0.c2)), (((v0.c0))<=((v0.c0))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((NULLIF(((((((((rt0.c3)AND(rt0.c2)))OR(v0.c0)))AND(rt0.c1)))AND(rt0.c2)), (((v0.c0))<=((v0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c2 FROM rt0 INNER JOIN v0 ON 0.5274407333656623 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 INNER JOIN v0 ON 0.5274407333656623 WHERE ((((rt0.c4)) BETWEEN ((((((v0.c0)OR(rt0.c1)))AND(rt0.c2)))) AND (((((rt0.c0))>((rt0.c3))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 INNER JOIN v0 ON 0.5274407333656623 WHERE ((NOT ((((rt0.c4)) BETWEEN ((((((v0.c0)OR(rt0.c1)))AND(rt0.c2)))) AND (((((rt0.c0))>((rt0.c3))))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 INNER JOIN v0 ON 0.5274407333656623 WHERE ((((((rt0.c4)) BETWEEN ((((((v0.c0)OR(rt0.c1)))AND(rt0.c2)))) AND (((((rt0.c0))>((rt0.c3))))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 INNER JOIN v0 ON 0.5274407333656623 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (('1550367643' COLLATE BINARY)<>(AVG(MIN(TOTAL(rt0.c0))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((('1550367643' COLLATE BINARY)<>(AVG(MIN(TOTAL(rt0.c0))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((('1550367643' COLLATE BINARY)<>(AVG(MIN(TOTAL(rt0.c0)))))) ISNULL);
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON ((((((((((((v0.c0)OR((+ (rt0.c1)))))AND((((v0.c0, rt0.c1, rt0.c2))=((rt0.c2, rt0.c2, NULL))))))AND(((0.014700379503144956) NOTNULL))))AND((rt0.c2 IN ()))))OR((+ (rt0.c3)))))AND(((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0))));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((((((((((((v0.c0)OR((+ (rt0.c1)))))AND((((v0.c0, rt0.c1, rt0.c2))=((rt0.c2, rt0.c2, NULL))))))AND(((0.014700379503144956) NOTNULL))))AND((rt0.c2 IN ()))))OR((+ (rt0.c3)))))AND(((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0)))) WHERE (rt0.c3) UNION ALL SELECT * FROM v0 LEFT OUTER JOIN rt0 ON ((((((((((((v0.c0)OR((+ (rt0.c1)))))AND((((v0.c0, rt0.c1, rt0.c2))=((rt0.c2, rt0.c2, NULL))))))AND(((0.014700379503144956) NOTNULL))))AND((rt0.c2 IN ()))))OR((+ (rt0.c3)))))AND(((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0)))) WHERE ((NOT (rt0.c3))) UNION ALL SELECT * FROM v0 LEFT OUTER JOIN rt0 ON ((((((((((((v0.c0)OR((+ (rt0.c1)))))AND((((v0.c0, rt0.c1, rt0.c2))=((rt0.c2, rt0.c2, NULL))))))AND(((0.014700379503144956) NOTNULL))))AND((rt0.c2 IN ()))))OR((+ (rt0.c3)))))AND(((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0)))) WHERE (((rt0.c3) ISNULL));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON ((((((((((((v0.c0)OR((+ (rt0.c1)))))AND((((v0.c0, rt0.c1, rt0.c2))=((rt0.c2, rt0.c2, NULL))))))AND(((0.014700379503144956) NOTNULL))))AND((rt0.c2 IN ()))))OR((+ (rt0.c3)))))AND(((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0))));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)IS NOT(v0.c0))) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 ELSE NULL END) AND (((NULL)<(NULL))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0)IS NOT(v0.c0))) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 ELSE NULL END) AND (((NULL)<(NULL))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0)IS NOT(v0.c0))) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 ELSE NULL END) AND (((NULL)<(NULL))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE NOCASE)OR(((v0.c0)IS(v0.c0)))))AND(((v0.c0) IS TRUE)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0 COLLATE NOCASE)OR(((v0.c0)IS(v0.c0)))))AND(((v0.c0) IS TRUE)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0 COLLATE NOCASE)OR(((v0.c0)IS(v0.c0)))))AND(((v0.c0) IS TRUE)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((TOTAL(MIN(v0.c0)) IN ())) IS FALSE) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((TOTAL(MIN(v0.c0)) IN ())) IS FALSE))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((TOTAL(MIN(v0.c0)) IN ())) IS FALSE)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((TOTAL(MIN(v0.c0)) IN ())) IS FALSE) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((TOTAL(MIN(v0.c0)) IN ())) IS FALSE))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((TOTAL(MIN(v0.c0)) IN ())) IS FALSE)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c1)/('1349267634'));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c1)/('1349267634')) WHERE (CASE '1848127294' COLLATE NOCASE  WHEN CASE rt0.c1  WHEN rt0.c4 THEN rt0.c1 END THEN '^' ELSE ((((((((rt0.c4)AND(v0.c0)))AND(rt0.c4)))AND(v0.c0)))AND(v0.c0)) END) UNION ALL SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c1)/('1349267634')) WHERE ((NOT (CASE '1848127294' COLLATE NOCASE  WHEN CASE rt0.c1  WHEN rt0.c4 THEN rt0.c1 END THEN '^' ELSE ((((((((rt0.c4)AND(v0.c0)))AND(rt0.c4)))AND(v0.c0)))AND(v0.c0)) END))) UNION ALL SELECT * FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c1)/('1349267634')) WHERE (((CASE '1848127294' COLLATE NOCASE  WHEN CASE rt0.c1  WHEN rt0.c4 THEN rt0.c1 END THEN '^' ELSE ((((((((rt0.c4)AND(v0.c0)))AND(rt0.c4)))AND(v0.c0)))AND(v0.c0)) END) ISNULL));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c1)/('1349267634'));
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((('<灋F7H\f')AND((rt0.c1 IN ())))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((('<灋F7H\f')AND((rt0.c1 IN ())))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((('<灋F7H\f')AND((rt0.c1 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c1, rt0.c3, v0.c0, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c3, v0.c0, rt0.c4, rt0.c0;
SELECT rt0.c1, rt0.c3, v0.c0, rt0.c4, rt0.c0 FROM v0, rt0 WHERE (v0.c0) GROUP BY rt0.c1, rt0.c3, v0.c0, rt0.c4, rt0.c0 UNION SELECT rt0.c1, rt0.c3, v0.c0, rt0.c4, rt0.c0 FROM v0, rt0 WHERE ((NOT (v0.c0))) GROUP BY rt0.c1, rt0.c3, v0.c0, rt0.c4, rt0.c0 UNION SELECT rt0.c1, rt0.c3, v0.c0, rt0.c4, rt0.c0 FROM v0, rt0 WHERE (((v0.c0) ISNULL)) GROUP BY rt0.c1, rt0.c3, v0.c0, rt0.c4, rt0.c0;
SELECT rt0.c1, rt0.c3, v0.c0, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c3, v0.c0, rt0.c4, rt0.c0;
SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING (((rt0.c4, GROUP_CONCAT(rt0.c3), rt0.c4)) BETWEEN ((CAST(AVG(rt0.c0) AS TEXT), COALESCE(v0.c0, rt0.c3, SUM(rt0.c3), COUNT(*)), (- (COUNT(NULL))))) AND ((SUM(rt0.c4), ((v0.c0) BETWEEN (MIN(SUM(TOTAL(rt0.c2)))) AND (AVG(NULL))), COUNT(*)))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT ((((rt0.c4, GROUP_CONCAT(rt0.c3), rt0.c4)) BETWEEN ((CAST(AVG(rt0.c0) AS TEXT), COALESCE(v0.c0, rt0.c3, SUM(rt0.c3), COUNT(*)), (- (COUNT(NULL))))) AND ((SUM(rt0.c4), ((v0.c0) BETWEEN (MIN(SUM(TOTAL(rt0.c2)))) AND (AVG(NULL))), COUNT(*)))))) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING (((((rt0.c4, GROUP_CONCAT(rt0.c3), rt0.c4)) BETWEEN ((CAST(AVG(rt0.c0) AS TEXT), COALESCE(v0.c0, rt0.c3, SUM(rt0.c3), COUNT(*)), (- (COUNT(NULL))))) AND ((SUM(rt0.c4), ((v0.c0) BETWEEN (MIN(SUM(TOTAL(rt0.c2)))) AND (AVG(NULL))), COUNT(*))))) ISNULL);
SELECT rt0.c4 FROM rt0, v0;
SELECT rt0.c4 FROM rt0, v0 WHERE ((((((((((((rt0.c2)AND(v0.c0)))OR(rt0.c3)))AND(NULL)))OR(rt0.c1))))>=((rt0.c3)))) UNION ALL SELECT rt0.c4 FROM rt0, v0 WHERE ((NOT ((((((((((((rt0.c2)AND(v0.c0)))OR(rt0.c3)))AND(NULL)))OR(rt0.c1))))>=((rt0.c3)))))) UNION ALL SELECT ALL rt0.c4 FROM rt0, v0 WHERE ((((((((((((((rt0.c2)AND(v0.c0)))OR(rt0.c3)))AND(NULL)))OR(rt0.c1))))>=((rt0.c3)))) ISNULL));
SELECT rt0.c4 FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((CAST(rt0.c2 AS TEXT)))<((rt0.c1)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((CAST(rt0.c2 AS TEXT)))<((rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((CAST(rt0.c2 AS TEXT)))<((rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((- (((((rt0.c0)AND(rt0.c2)))OR(rt0.c1))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((- (((((rt0.c0)AND(rt0.c2)))OR(rt0.c1))))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((- (((((rt0.c0)AND(rt0.c2)))OR(rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) BETWEEN (((((v0.c0)OR(v0.c0)))AND(v0.c0))) AND (v0.c0))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) BETWEEN (((((v0.c0)OR(v0.c0)))AND(v0.c0))) AND (v0.c0))))) UNION ALL SELECT * FROM v0 WHERE ((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) BETWEEN (((((v0.c0)OR(v0.c0)))AND(v0.c0))) AND (v0.c0))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END) IS FALSE)) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END) IS FALSE)))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0 WHERE (((((rt0.c3)=(rt0.c3)))-((x'9d9e' IN ())))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM rt0 WHERE ((NOT (((((rt0.c3)==(rt0.c3)))-((x'9d9e' IN ())))))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM rt0 WHERE (((((((rt0.c3)=(rt0.c3)))-((x'9d9e' IN ())))) ISNULL)) GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING ((x'') NOT NULL) UNION ALL SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING (NOT (((x'') NOT NULL))) UNION ALL SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING ((((x'') NOT NULL)) ISNULL);
SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING ((x'') NOT NULL) UNION ALL SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING (NOT (((x'') NOT NULL))) UNION ALL SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING ((((x'') NOT NULL)) ISNULL);
SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT ALL rt0.c0, rt0.c2, rt0.c4, v0.c0, rt0.c3 FROM v0, rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c4, v0.c0, rt0.c3 FROM v0, rt0 WHERE ((((rt0.c4)) BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((rt0.c2)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c4, v0.c0, rt0.c3 FROM v0, rt0 WHERE ((NOT ((((rt0.c4)) BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((rt0.c2)))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c4, v0.c0, rt0.c3 FROM v0, rt0 WHERE ((((((rt0.c4)) BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((rt0.c2)))) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c4, v0.c0, rt0.c3 FROM v0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST((rt0.c0 IN (rt0.c3, rt0.c3)) AS REAL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST((rt0.c0 IN (rt0.c3, rt0.c3)) AS REAL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST((rt0.c0 IN (rt0.c3, rt0.c3)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0, rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c4;
SELECT v0.c0, rt0.c0, rt0.c4 FROM rt0, v0 WHERE (0Xffffffffbd051381) GROUP BY v0.c0, rt0.c0, rt0.c4 UNION SELECT v0.c0, rt0.c0, rt0.c4 FROM rt0, v0 WHERE ((NOT (0Xffffffffbd051381))) GROUP BY v0.c0, rt0.c0, rt0.c4 UNION SELECT v0.c0, rt0.c0, rt0.c4 FROM rt0, v0 WHERE (((0Xffffffffbd051381) ISNULL)) GROUP BY v0.c0, rt0.c0, rt0.c4;
SELECT v0.c0, rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c4;
SELECT v0.c0, rt0.c2 FROM v0 NATURAL JOIN rt0 GROUP BY v0.c0, rt0.c2;
SELECT v0.c0, rt0.c2 FROM v0 NATURAL JOIN rt0 GROUP BY v0.c0, rt0.c2 HAVING CASE WHEN SUM(TOTAL(v0.c0)) THEN MAX(rt0.c0) ELSE ((GROUP_CONCAT(COUNT(rt0.c4))) BETWEEN (COUNT(rt0.c1)) AND (rt0.c1)) END UNION ALL SELECT v0.c0, rt0.c2 FROM v0 NATURAL JOIN rt0 GROUP BY v0.c0, rt0.c2 HAVING (NOT (CASE WHEN SUM(TOTAL(v0.c0)) THEN MAX(rt0.c0) ELSE ((GROUP_CONCAT(COUNT(rt0.c4))) BETWEEN (COUNT(rt0.c1)) AND (rt0.c1)) END)) UNION ALL SELECT v0.c0, rt0.c2 FROM v0 NATURAL JOIN rt0 GROUP BY v0.c0, rt0.c2 HAVING ((CASE WHEN SUM(TOTAL(v0.c0)) THEN MAX(rt0.c0) ELSE ((GROUP_CONCAT(COUNT(rt0.c4))) BETWEEN (COUNT(rt0.c1)) AND (rt0.c1)) END) ISNULL);
SELECT ALL * FROM v0 NATURAL JOIN rt0;
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (CASE WHEN ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c4)) THEN ((((rt0.c2)OR(rt0.c4)))AND(rt0.c3)) ELSE 0.8552757145252357 END) UNION ALL SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((NOT (CASE WHEN ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c4)) THEN ((((rt0.c2)OR(rt0.c4)))AND(rt0.c3)) ELSE 0.8552757145252357 END))) UNION ALL SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (((CASE WHEN ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c4)) THEN ((((rt0.c2)OR(rt0.c4)))AND(rt0.c3)) ELSE 0.8552757145252357 END) ISNULL));
SELECT ALL * FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (CAST(NULL AS BLOB)) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (CAST(NULL AS BLOB)))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((CAST(NULL AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((NULL IN ())) IS TRUE)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((NULL IN ())) IS TRUE)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((NULL IN ())) IS TRUE)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (- (NULLIF(SUM(v0.c0), COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((- (NULLIF(SUM(v0.c0), COUNT(*)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((- (NULLIF(SUM(v0.c0), COUNT(*))))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (- (NULLIF(SUM(v0.c0), COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((- (NULLIF(SUM(v0.c0), COUNT(*)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((- (NULLIF(SUM(v0.c0), COUNT(*))))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE ((NULL IN ())) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT ((NULL IN ())))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((((NULL IN ())) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((+ (rt0.c0))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((+ (rt0.c0))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((+ (rt0.c0))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 WHERE (UNLIKELY(DISTINCT CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 END)) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE ((NOT (UNLIKELY(DISTINCT CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 END)))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0 WHERE (((UNLIKELY(DISTINCT CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 END)) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0 FROM v0, rt0 NOT INDEXED GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0 FROM v0, rt0 NOT INDEXED GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT ALL SUM(IFNULL(rt0.c2, SQLITE_SOURCE_ID())) FROM v0, rt0 ORDER BY ((((v0.c0)IS NOT(x'')))=(TRIM(DISTINCT rt0.c1, rt0.c4))), ((((rt0.c2, rt0.c3, v0.c0, rt0.c3, 0.7263309108667488))<=((rt0.c2, rt0.c0, rt0.c3, x'dd8d', '-1910263862'))) IN (NULL)) DESC;
SELECT v0.c0 FROM rt0, v0;
SELECT v0.c0 FROM rt0, v0 WHERE ((- ('6rVF'))) UNION ALL SELECT v0.c0 FROM rt0, v0 WHERE ((NOT ((- ('6rVF'))))) UNION ALL SELECT v0.c0 FROM rt0, v0 WHERE ((((- ('6rVF'))) ISNULL));
SELECT v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0;
SELECT DISTINCT rt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0 WHERE (((((rt0.c2) IS TRUE)) NOT NULL)) UNION SELECT DISTINCT rt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0 WHERE ((NOT (((((rt0.c2) IS TRUE)) NOT NULL)))) UNION SELECT DISTINCT rt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0 WHERE (((((((rt0.c2) IS TRUE)) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0;
SELECT ALL v0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c4;
SELECT v0.c0, rt0.c4 FROM rt0, v0 WHERE (MAX(((((rt0.c4)OR(rt0.c2)))OR(rt0.c2)), ((NULL)>=(rt0.c0)))) GROUP BY v0.c0, rt0.c4 UNION SELECT ALL v0.c0, rt0.c4 FROM rt0, v0 WHERE ((NOT (MAX(((((rt0.c4)OR(rt0.c2)))OR(rt0.c2)), ((NULL)>=(rt0.c0)))))) GROUP BY v0.c0, rt0.c4 UNION SELECT v0.c0, rt0.c4 FROM rt0, v0 WHERE (((MAX(((((rt0.c4)OR(rt0.c2)))OR(rt0.c2)), ((NULL)>=(rt0.c0)))) ISNULL)) GROUP BY v0.c0, rt0.c4;
SELECT ALL v0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c4;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(((v0.c0)IS NOT(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(((v0.c0)IS NOT(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(((v0.c0)IS NOT(v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(((v0.c0)IS NOT(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(((v0.c0)IS NOT(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(((v0.c0)IS NOT(v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE ((CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN rt0.c2 THEN 0Xffffffffe6f491b3 ELSE rt0.c2 END IN ((rt0.c1 IN ())))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT ((CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN rt0.c2 THEN 0Xffffffffe6f491b3 ELSE rt0.c2 END IN ((rt0.c1 IN ())))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((((CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN rt0.c2 THEN 0Xffffffffe6f491b3 ELSE rt0.c2 END IN ((rt0.c1 IN ())))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0) IS TRUE)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0) IS TRUE)))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c4, v0.c0, rt0.c0, rt0.c3, rt0.c1 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c4, v0.c0, rt0.c0, rt0.c3, rt0.c1 FROM v0, rt0 WHERE (UPPER(DISTINCT rt0.c3)) GROUP BY rt0.c4, v0.c0, rt0.c0, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c4, v0.c0, rt0.c0, rt0.c3, rt0.c1 FROM v0, rt0 WHERE ((NOT (UPPER(DISTINCT rt0.c3)))) GROUP BY rt0.c4, v0.c0, rt0.c0, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c4, v0.c0, rt0.c0, rt0.c3, rt0.c1 FROM v0, rt0 WHERE (((UPPER(DISTINCT rt0.c3)) ISNULL)) GROUP BY rt0.c4, v0.c0, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c4, v0.c0, rt0.c0, rt0.c3, rt0.c1 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2, rt0.c4;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2, rt0.c4 HAVING SUM(COUNT(rt0.c3)) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2, rt0.c4 HAVING (NOT (SUM(COUNT(rt0.c3)))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2, rt0.c4 HAVING ((SUM(COUNT(rt0.c3))) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (COALESCE((rt0.c0 IN (rt0.c2)), (rt0.c1 IN ()))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (COALESCE((rt0.c0 IN (rt0.c2)), (rt0.c1 IN ()))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((COALESCE((rt0.c0 IN (rt0.c2)), (rt0.c1 IN ()))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c3 END) NOT NULL)) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((CASE WHEN rt0.c4 THEN rt0.c3 END) NOT NULL)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((CASE WHEN rt0.c4 THEN rt0.c3 END) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0 IN ()) IN (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, CASE WHEN v0.c0 THEN v0.c0 END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0 IN ()) IN (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, CASE WHEN v0.c0 THEN v0.c0 END))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0 IN ()) IN (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, CASE WHEN v0.c0 THEN v0.c0 END))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, rt0.c0;
SELECT ALL v0.c0, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, rt0.c0 HAVING AVG(((rt0.c3) BETWEEN (COUNT(*)) AND (MAX(rt0.c3)))) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, rt0.c0 HAVING (NOT (AVG(((rt0.c3) BETWEEN (COUNT(*)) AND (MAX(rt0.c3)))))) UNION ALL SELECT v0.c0, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, rt0.c0 HAVING ((AVG(((rt0.c3) BETWEEN (COUNT(*)) AND (MAX(rt0.c3))))) ISNULL);
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE ((('1854999622') NOT BETWEEN ((~ (rt0.c0))) AND (((v0.c0)>=(v0.c0))))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT ((('1854999622') NOT BETWEEN ((~ (rt0.c0))) AND (((v0.c0)>=(v0.c0))))))) UNION ALL SELECT * FROM v0, rt0 WHERE ((((('1854999622') NOT BETWEEN ((~ (rt0.c0))) AND (((v0.c0)>=(v0.c0))))) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE TRIM(rt0.c4)  WHEN x'' THEN rt0.c0 COLLATE NOCASE ELSE ((0.5691519080367392)IS NOT(rt0.c2)) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE TRIM(rt0.c4)  WHEN x'' THEN rt0.c0 COLLATE NOCASE ELSE ((0.5691519080367392)IS NOT(rt0.c2)) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE TRIM(rt0.c4)  WHEN x'' THEN rt0.c0 COLLATE NOCASE ELSE ((0.5691519080367392)IS NOT(rt0.c2)) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3;
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt0 WHERE ((- ((+ (rt0.c4))))) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT ((- ((+ (rt0.c4))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 UNION SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt0 WHERE ((((- ((+ (rt0.c4))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3;
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3;
SELECT ALL rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0;
SELECT ALL rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0 HAVING CASE (rt0.c0 IN ())  WHEN TOTAL(MIN(COUNT(MIN(rt0.c1)))) THEN ((((((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))AND(SUM(MAX(GROUP_CONCAT(rt0.c0))))))OR(COUNT(*))))OR(rt0.c3)))OR('1111812125')) END UNION ALL SELECT ALL rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0 HAVING (NOT (CASE (rt0.c0 IN ())  WHEN TOTAL(MIN(COUNT(MIN(rt0.c1)))) THEN ((((((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))AND(SUM(MAX(GROUP_CONCAT(rt0.c0))))))OR(COUNT(*))))OR(rt0.c3)))OR('1111812125')) END)) UNION ALL SELECT ALL rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0 HAVING ((CASE (rt0.c0 IN ())  WHEN TOTAL(MIN(COUNT(MIN(rt0.c1)))) THEN ((((((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))AND(SUM(MAX(GROUP_CONCAT(rt0.c0))))))OR(COUNT(*))))OR(rt0.c3)))OR('1111812125')) END) ISNULL);
SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0;
SELECT ALL rt0.c4, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE (rt0.c1) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (CASE ((0.5367460933858726) BETWEEN (rt0.c2) AND (rt0.c3))  WHEN ((v0.c0)>=(rt0.c1)) THEN 0.5062982007741365 WHEN (v0.c0 IN ()) THEN ((((rt0.c1)OR(rt0.c4)))OR(rt0.c3)) WHEN (- (rt0.c2)) THEN highlight(v0.c0, rt0.c1, rt0.c1, rt0.c0) END) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (CASE ((0.5367460933858726) BETWEEN (rt0.c2) AND (rt0.c3))  WHEN ((v0.c0)>=(rt0.c1)) THEN 0.5062982007741365 WHEN (v0.c0 IN ()) THEN ((((rt0.c1)OR(rt0.c4)))OR(rt0.c3)) WHEN (- (rt0.c2)) THEN highlight(v0.c0, rt0.c1, rt0.c1, rt0.c0) END))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((CASE ((0.5367460933858726) BETWEEN (rt0.c2) AND (rt0.c3))  WHEN ((v0.c0)>=(rt0.c1)) THEN 0.5062982007741365 WHEN (v0.c0 IN ()) THEN ((((rt0.c1)OR(rt0.c4)))OR(rt0.c3)) WHEN (- (rt0.c2)) THEN highlight(v0.c0, rt0.c1, rt0.c1, rt0.c0) END) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT v0.c0 FROM v0, rt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt0 WHERE (CAST(TRIM(DISTINCT v0.c0, v0.c0) AS REAL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, rt0 WHERE ((NOT (CAST(TRIM(DISTINCT v0.c0, v0.c0) AS REAL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, rt0 WHERE (((CAST(TRIM(DISTINCT v0.c0, v0.c0) AS REAL)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((COUNT(*), MAX(v0.c0), COALESCE(v0.c0, AVG(x''))))>((((v0.c0)-(COUNT(*))), (GROUP_CONCAT(v0.c0) IN ()), CASE WHEN TOTAL(TOTAL(COUNT(COUNT(v0.c0)))) THEN MIN(v0.c0) ELSE TOTAL(v0.c0) END))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((COUNT(*), MAX(v0.c0), COALESCE(v0.c0, AVG(x''))))>((((v0.c0)-(COUNT(*))), (GROUP_CONCAT(v0.c0) IN ()), CASE WHEN TOTAL(TOTAL(COUNT(COUNT(v0.c0)))) THEN MIN(v0.c0) ELSE TOTAL(v0.c0) END))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((COUNT(*), MAX(v0.c0), COALESCE(v0.c0, AVG(x''))))>((((v0.c0)-(COUNT(*))), (GROUP_CONCAT(v0.c0) IN ()), CASE WHEN TOTAL(TOTAL(COUNT(COUNT(v0.c0)))) THEN MIN(v0.c0) ELSE TOTAL(v0.c0) END)))) ISNULL);
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c3) BETWEEN (v0.c0) AND (rt0.c4)) COLLATE RTRIM) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (((rt0.c3) BETWEEN (v0.c0) AND (rt0.c4)) COLLATE RTRIM))) UNION ALL SELECT * FROM v0, rt0 WHERE (((((rt0.c3) BETWEEN (v0.c0) AND (rt0.c4)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1)>>(rt0.c3))))<(((((rt0.c4, rt0.c1, rt0.c2))==((rt0.c4, rt0.c2, rt0.c3))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c1)>>(rt0.c3))))<(((((rt0.c4, rt0.c1, rt0.c2))==((rt0.c4, rt0.c2, rt0.c3))))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c1)>>(rt0.c3))))<(((((rt0.c4, rt0.c1, rt0.c2))=((rt0.c4, rt0.c2, rt0.c3))))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c0, rt0.c1 FROM rt0 WHERE (((CASE WHEN '*p' THEN rt0.c4 ELSE rt0.c0 END)|(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0))))) GROUP BY rt0.c4, rt0.c0, rt0.c1 UNION SELECT rt0.c4, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((CASE WHEN '*p' THEN rt0.c4 ELSE rt0.c0 END)|(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0))))))) GROUP BY rt0.c4, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c0, rt0.c1 FROM rt0 WHERE (((((CASE WHEN '*p' THEN rt0.c4 ELSE rt0.c0 END)|(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c4, rt0.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c3, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON CASE (~ (rt0.c3))  WHEN (~ (rt0.c2)) THEN ((rt0.c0)<(rt0.c3)) END GROUP BY rt0.c1, rt0.c3, rt0.c4;
SELECT rt0.c1, rt0.c3, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON CASE (~ (rt0.c3))  WHEN (~ (rt0.c2)) THEN ((rt0.c0)<(rt0.c3)) END GROUP BY rt0.c1, rt0.c3, rt0.c4 HAVING COUNT(COUNT(TOTAL(rt0.c2))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON CASE (~ (rt0.c3))  WHEN (~ (rt0.c2)) THEN ((rt0.c0)<(rt0.c3)) END GROUP BY rt0.c1, rt0.c3, rt0.c4 HAVING (NOT (COUNT(COUNT(TOTAL(rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c4 FROM v0 NOT INDEXED FULL OUTER JOIN rt0 ON CASE (~ (rt0.c3))  WHEN (~ (rt0.c2)) THEN ((rt0.c0)<(rt0.c3)) END GROUP BY rt0.c1, rt0.c3, rt0.c4 HAVING ((COUNT(COUNT(TOTAL(rt0.c2)))) ISNULL);
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON ((((- (rt0.c0)), ((v0.c0)-(rt0.c2)), CASE v0.c0  WHEN rt0.c0 THEN rt0.c3 END))>=(((- (rt0.c1)), (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((((rt0.c0)AND(rt0.c0)))AND(v0.c0)))));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON ((((- (rt0.c0)), ((v0.c0)-(rt0.c2)), CASE v0.c0  WHEN rt0.c0 THEN rt0.c3 END))>=(((- (rt0.c1)), (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((((rt0.c0)AND(rt0.c0)))AND(v0.c0))))) WHERE (((((rt0.c1) NOT BETWEEN (rt0.c3) AND (v0.c0)))%(((rt0.c2)>(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON ((((- (rt0.c0)), ((v0.c0)-(rt0.c2)), CASE v0.c0  WHEN rt0.c0 THEN rt0.c3 END))>=(((- (rt0.c1)), (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((((rt0.c0)AND(rt0.c0)))AND(v0.c0))))) WHERE ((NOT (((((rt0.c1) NOT BETWEEN (rt0.c3) AND (v0.c0)))%(((rt0.c2)>(rt0.c2))))))) UNION ALL SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON ((((- (rt0.c0)), ((v0.c0)-(rt0.c2)), CASE v0.c0  WHEN rt0.c0 THEN rt0.c3 END))>=(((- (rt0.c1)), (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((((rt0.c0)AND(rt0.c0)))AND(v0.c0))))) WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c3) AND (v0.c0)))%(((rt0.c2)>(rt0.c2))))) ISNULL));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON ((((- (rt0.c0)), ((v0.c0)-(rt0.c2)), CASE v0.c0  WHEN rt0.c0 THEN rt0.c3 END))>=(((- (rt0.c1)), (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((((rt0.c0)AND(rt0.c0)))AND(v0.c0)))));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 END) NOTNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 END) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 END) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((- (CASE WHEN 0xffffffffa714b915 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((- (CASE WHEN 0Xffffffffa714b915 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((- (CASE WHEN 0Xffffffffa714b915 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((((CAST(v0.c0 AS TEXT)))==((CASE WHEN v0.c0 THEN v0.c0 END)))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((CAST(v0.c0 AS TEXT)))=((CASE WHEN v0.c0 THEN v0.c0 END)))))) UNION ALL SELECT * FROM v0 WHERE ((((((CAST(v0.c0 AS TEXT)))=((CASE WHEN v0.c0 THEN v0.c0 END)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 END)!=((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((NULL)))))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 END)!=((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((NULL)))))))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE (((((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 END)!=((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((NULL)))))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c0 FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((- (v0.c0))) BETWEEN ((v0.c0 IN (v0.c0))) AND (((v0.c0)IS NOT(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((- (v0.c0))) BETWEEN ((v0.c0 IN (v0.c0))) AND (((v0.c0)IS NOT(v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((- (v0.c0))) BETWEEN ((v0.c0 IN (v0.c0))) AND (((v0.c0)IS NOT(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2 HAVING x'' UNION ALL SELECT rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2 HAVING (NOT (x'')) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2 HAVING ((x'') ISNULL);
SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2 HAVING x'' UNION ALL SELECT rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2 HAVING (NOT (x'')) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2 HAVING ((x'') ISNULL);
SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c4) IS FALSE))GLOB((NOT (rt0.c3))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c4) IS FALSE))GLOB((NOT (rt0.c3))))))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c4) IS FALSE))GLOB((NOT (rt0.c3))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, v0.c0, rt0.c2, rt0.c4 FROM rt0 LEFT OUTER JOIN v0 ON (TYPEOF(DISTINCT rt0.c1) IN ());
SELECT DISTINCT rt0.c1, v0.c0, rt0.c2, rt0.c4 FROM rt0 LEFT OUTER JOIN v0 ON (TYPEOF(DISTINCT rt0.c1) IN ()) WHERE (((rt0.c4)IS NOT((rt0.c4 IN ())))) UNION SELECT DISTINCT rt0.c1, v0.c0, rt0.c2, rt0.c4 FROM rt0 LEFT OUTER JOIN v0 ON (TYPEOF(DISTINCT rt0.c1) IN ()) WHERE ((NOT (((rt0.c4)IS NOT((rt0.c4 IN ())))))) UNION SELECT DISTINCT rt0.c1, v0.c0, rt0.c2, rt0.c4 FROM rt0 LEFT OUTER JOIN v0 ON (TYPEOF(DISTINCT rt0.c1) IN ()) WHERE (((((rt0.c4)IS NOT((rt0.c4 IN ())))) ISNULL));
SELECT DISTINCT rt0.c1, v0.c0, rt0.c2, rt0.c4 FROM rt0 LEFT OUTER JOIN v0 ON (TYPEOF(DISTINCT rt0.c1) IN ());
SELECT ALL rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c2, v0.c0 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c2, v0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c2, v0.c0 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (0.26699956311635065))) GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c2, v0.c0 UNION SELECT rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c2, v0.c0 FROM rt0 NATURAL JOIN v0 WHERE ((NOT ((NOT (0.26699956311635065))))) GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c2, v0.c0 UNION SELECT rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c2, v0.c0 FROM rt0 NATURAL JOIN v0 WHERE ((((NOT (0.26699956311635065))) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c2, v0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c2, v0.c0 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c2, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(((AVG(AVG(v0.c0)))<<(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(((AVG(AVG(v0.c0)))<<(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(((AVG(AVG(v0.c0)))<<(v0.c0)))) ISNULL);
SELECT MIN(SQLITE_COMPILEOPTION_GET(((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))) FROM rt0, v0;
SELECT * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (((((CAST(rt0.c2 AS NUMERIC))AND(((0.27841718376605407)+(rt0.c1)))))OR((((rt0.c2))>=((rt0.c2)))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (((((CAST(rt0.c2 AS NUMERIC))AND(((0.27841718376605407)+(rt0.c1)))))OR((((rt0.c2))>=((rt0.c2)))))))) UNION ALL SELECT * FROM rt0, v0 WHERE (((((((CAST(rt0.c2 AS NUMERIC))AND(((0.27841718376605407)+(rt0.c1)))))OR((((rt0.c2))>=((rt0.c2)))))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((v0.c0 IN (v0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((v0.c0 IN (v0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0 WHERE ((((v0.c0 IN (v0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, rt0.c3;
SELECT ALL rt0.c1, rt0.c3 FROM v0, rt0 WHERE (CASE (v0.c0 IN ())  WHEN ((((rt0.c3)OR(rt0.c4)))OR(rt0.c3)) THEN 0.10254208586231728 END) GROUP BY rt0.c1, rt0.c3 UNION SELECT rt0.c1, rt0.c3 FROM v0, rt0 WHERE ((NOT (CASE (v0.c0 IN ())  WHEN ((((rt0.c3)OR(rt0.c4)))OR(rt0.c3)) THEN 0.10254208586231728 END))) GROUP BY rt0.c1, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c3 FROM v0, rt0 WHERE (((CASE (v0.c0 IN ())  WHEN ((((rt0.c3)OR(rt0.c4)))OR(rt0.c3)) THEN 0.10254208586231728 END) ISNULL)) GROUP BY rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, rt0.c3;
SELECT rt0.c3, v0.c0, rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c4, rt0.c1;
SELECT ALL rt0.c3, v0.c0, rt0.c4, rt0.c1 FROM rt0, v0 NOT INDEXED GROUP BY rt0.c3, v0.c0, rt0.c4, rt0.c1 HAVING SUM(COUNT(rt0.c4)) UNION ALL SELECT rt0.c3, v0.c0, rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c4, rt0.c1 HAVING (NOT (SUM(COUNT(rt0.c4)))) UNION ALL SELECT rt0.c3, v0.c0, rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c4, rt0.c1 HAVING ((SUM(COUNT(rt0.c4))) ISNULL);
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (((((highlight(rt0.c1, rt0.c1, v0.c0, rt0.c1))OR(((rt0.c2)+(rt0.c2)))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 ELSE v0.c0 END))) ORDER BY ((((((((CASE WHEN rt0.c4 THEN rt0.c0 END)AND(((rt0.c4)&(v0.c0)))))OR(((0.43561431814476415)>>(rt0.c2)))))OR(((((rt0.c2)AND(rt0.c4)))OR(rt0.c2)))))AND(((v0.c0)>(rt0.c4)))) DESC  NULLS FIRST;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, rt0.c4, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, rt0.c4, v0.c0 FROM v0, rt0 WHERE (((((rt0.c0)/(rt0.c3)))LIKE(((rt0.c4) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, rt0.c4, v0.c0 FROM v0, rt0 WHERE ((NOT (((((rt0.c0)/(rt0.c3)))LIKE(((rt0.c4) NOT BETWEEN (v0.c0) AND (v0.c0))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, rt0.c4, v0.c0 FROM v0, rt0 WHERE (((((((rt0.c0)/(rt0.c3)))LIKE(((rt0.c4) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, rt0.c4, v0.c0 FROM v0, rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4;
SELECT rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE (((NULL) NOT NULL)) GROUP BY rt0.c2, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT (((NULL) NOT NULL)))) GROUP BY rt0.c2, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE (((((NULL) NOT NULL)) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) NOT NULL) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((v0.c0) NOT NULL))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0) NOT NULL)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) NOT NULL) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((v0.c0) NOT NULL))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0) NOT NULL)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((((CAST('|+' AS INTEGER))AND(CAST(v0.c0 AS NUMERIC))))OR(v0.c0 COLLATE NOCASE))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((CAST('|+' AS INTEGER))AND(CAST(v0.c0 AS NUMERIC))))OR(v0.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((CAST('|+' AS INTEGER))AND(CAST(v0.c0 AS NUMERIC))))OR(v0.c0 COLLATE NOCASE))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c1, rt0.c3, v0.c0, rt0.c4, rt0.c2 FROM v0, rt0 NOT INDEXED;
SELECT DISTINCT rt0.c1, rt0.c3, v0.c0, rt0.c4, rt0.c2 FROM v0, rt0 WHERE ('2101809438') UNION SELECT DISTINCT rt0.c1, rt0.c3, v0.c0, rt0.c4, rt0.c2 FROM v0, rt0 WHERE ((NOT ('2101809438'))) UNION SELECT DISTINCT rt0.c1, rt0.c3, v0.c0, rt0.c4, rt0.c2 FROM v0, rt0 WHERE ((('2101809438') ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3, v0.c0, rt0.c4, rt0.c2 FROM v0, rt0 NOT INDEXED;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c3))))>=((((rt0.c4) ISNULL))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c3))))>=((((rt0.c4) ISNULL))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c3))))>=((((rt0.c4) ISNULL))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (~ ((~ (COUNT(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((~ ((~ (COUNT(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((~ ((~ (COUNT(v0.c0)))))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (~ ((~ (COUNT(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((~ ((~ (COUNT(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((~ ((~ (COUNT(v0.c0)))))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c0 FROM v0, rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c0 FROM v0, rt0 WHERE ((NOT (((((v0.c0)AND(rt0.c1)))OR(rt0.c4))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c0 FROM v0, rt0 WHERE ((NOT ((NOT (((((v0.c0)AND(rt0.c1)))OR(rt0.c4))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c0 FROM v0, rt0 WHERE ((((NOT (((((v0.c0)AND(rt0.c1)))OR(rt0.c4))))) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0;
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE (')f') UNION SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((NOT (')f'))) UNION SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE (((')f') ISNULL));
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((CAST(v0.c0 AS INTEGER) IN ())) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((CAST(v0.c0 AS INTEGER) IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((CAST(v0.c0 AS INTEGER) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING CASE WHEN x'' THEN ((((rt0.c1)AND(rt0.c4)))OR(MAX(MAX(MAX(rt0.c0))))) WHEN CAST(MAX(rt0.c2) AS NUMERIC) THEN (((COUNT(*), SUM(AVG(rt0.c4)), AVG(TOTAL(rt0.c3))))<>((MAX(MAX(rt0.c3)), v0.c0, rt0.c0))) WHEN AVG(MAX(GROUP_CONCAT(rt0.c0))) THEN COUNT(MAX(rt0.c4)) END UNION ALL SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING (NOT (CASE WHEN x'' THEN ((((rt0.c1)AND(rt0.c4)))OR(MAX(MAX(MAX(rt0.c0))))) WHEN CAST(MAX(rt0.c2) AS NUMERIC) THEN (((COUNT(*), SUM(AVG(rt0.c4)), AVG(TOTAL(rt0.c3))))<>((MAX(MAX(rt0.c3)), v0.c0, rt0.c0))) WHEN AVG(MAX(GROUP_CONCAT(rt0.c0))) THEN COUNT(MAX(rt0.c4)) END)) UNION ALL SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING ((CASE WHEN x'' THEN ((((rt0.c1)AND(rt0.c4)))OR(MAX(MAX(MAX(rt0.c0))))) WHEN CAST(MAX(rt0.c2) AS NUMERIC) THEN (((COUNT(*), SUM(AVG(rt0.c4)), AVG(TOTAL(rt0.c3))))<>((MAX(MAX(rt0.c3)), v0.c0, rt0.c0))) WHEN AVG(MAX(GROUP_CONCAT(rt0.c0))) THEN COUNT(MAX(rt0.c4)) END) ISNULL);
SELECT ALL rt0.c3, rt0.c4, v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0;
SELECT ALL rt0.c3, rt0.c4, v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 WHERE ((((rt0.c4 COLLATE NOCASE))<((TYPEOF(DISTINCT rt0.c0))))) UNION ALL SELECT rt0.c3, rt0.c4, v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 WHERE ((NOT ((((rt0.c4 COLLATE NOCASE))<((TYPEOF(DISTINCT rt0.c0))))))) UNION ALL SELECT rt0.c3, rt0.c4, v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 WHERE ((((((rt0.c4 COLLATE NOCASE))<((TYPEOF(DISTINCT rt0.c0))))) ISNULL));
SELECT ALL rt0.c3, rt0.c4, v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c3 FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c3 FROM v0, rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c2) AND (NULL)))AND(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)))AND(((rt0.c2) NOT BETWEEN (x'') AND (426674200))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c3 FROM v0, rt0 WHERE ((NOT (((((((rt0.c0) BETWEEN (rt0.c2) AND (NULL)))AND(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)))AND(((rt0.c2) NOT BETWEEN (x'') AND (426674200))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c3 FROM v0, rt0 WHERE (((((((((rt0.c0) BETWEEN (rt0.c2) AND (NULL)))AND(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)))AND(((rt0.c2) NOT BETWEEN (x'') AND (426674200))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c3 FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE WHEN (- (v0.c0)) THEN ABS(DISTINCT v0.c0) ELSE ((v0.c0)<=(v0.c0)) END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE WHEN (- (v0.c0)) THEN ABS(DISTINCT v0.c0) ELSE ((v0.c0)<=(v0.c0)) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN (- (v0.c0)) THEN ABS(DISTINCT v0.c0) ELSE ((v0.c0)<=(v0.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c1;
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c1 HAVING GROUP_CONCAT(COUNT(x'3725')) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(COUNT(x'3725')))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(COUNT(x'3725'))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((((((((((rt0.c4)AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c2)))AND((+ (rt0.c2)))))AND(0.8063371094859929))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((((((((((rt0.c4)AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c2)))AND((+ (rt0.c2)))))AND(0.8063371094859929))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((((((((rt0.c4)AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c2)))AND((+ (rt0.c2)))))AND(0.8063371094859929))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c4 FROM rt0 WHERE ((((~ (rt0.c1)))>(((rt0.c2)<(rt0.c2))))) UNION SELECT DISTINCT rt0.c4 FROM rt0 WHERE ((NOT ((((~ (rt0.c1)))>(((rt0.c2)<(rt0.c2))))))) UNION SELECT DISTINCT rt0.c4 FROM rt0 WHERE ((((((~ (rt0.c1)))>(((rt0.c2)<(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c4 FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) IS TRUE))|(((x'')<<(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) IS TRUE))|(((x'')<<(v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((v0.c0) IS TRUE))|(((x'')<<(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0 FROM rt0 CROSS JOIN v0 ON (- (CAST(rt0.c4 AS REAL))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0 FROM rt0 CROSS JOIN v0 ON (- (CAST(rt0.c4 AS REAL))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0 FROM rt0 CROSS JOIN v0 ON (- (CAST(rt0.c4 AS REAL))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0 FROM rt0 CROSS JOIN v0 ON (- (CAST(rt0.c4 AS REAL))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0 FROM rt0 CROSS JOIN v0 ON (- (CAST(rt0.c4 AS REAL))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0 FROM rt0 CROSS JOIN v0 ON (- (CAST(rt0.c4 AS REAL))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0 FROM rt0 CROSS JOIN v0 ON (- (CAST(rt0.c4 AS REAL))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0 FROM rt0 CROSS JOIN v0 ON (- (CAST(rt0.c4 AS REAL))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0 FROM rt0 CROSS JOIN v0 ON (- (CAST(rt0.c4 AS REAL))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0;
SELECT ALL rt0.c4, rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM v0, rt0;
SELECT ALL rt0.c4, rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM v0, rt0 WHERE (LIKELIHOOD(0.6066984660768, 0.5450653062314492) COLLATE NOCASE) UNION ALL SELECT rt0.c4, rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((NOT (LIKELIHOOD(0.6066984660768, 0.5450653062314492) COLLATE NOCASE))) UNION ALL SELECT rt0.c4, rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM v0, rt0 WHERE (((LIKELIHOOD(0.6066984660768, 0.5450653062314492) COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c4, rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM v0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CASE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))  WHEN (NOT (v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN -73956324 THEN v0.c0 END ELSE (('1969391562') BETWEEN (v0.c0) AND (v0.c0)) END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))  WHEN (NOT (v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN -73956324 THEN v0.c0 END ELSE (('1969391562') BETWEEN (v0.c0) AND (v0.c0)) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))  WHEN (NOT (v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN -73956324 THEN v0.c0 END ELSE (('1969391562') BETWEEN (v0.c0) AND (v0.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4 HAVING NULLIF(DISTINCT '1349267634', (rt0.c0 IN (v0.c0))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4 HAVING (NOT (NULLIF(DISTINCT '1349267634', (rt0.c0 IN (v0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4 HAVING ((NULLIF(DISTINCT '1349267634', (rt0.c0 IN (v0.c0)))) ISNULL);
SELECT ALL rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4 HAVING NULLIF(DISTINCT '1349267634', (rt0.c0 IN (v0.c0))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4 HAVING (NOT (NULLIF(DISTINCT '1349267634', (rt0.c0 IN (v0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4 HAVING ((NULLIF(DISTINCT '1349267634', (rt0.c0 IN (v0.c0)))) ISNULL);
SELECT ALL rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4;
SELECT ALL rt0.c4, rt0.c1 FROM rt0 INNER JOIN v0 ON CASE WHEN rt0.c3 THEN CAST(v0.c0 AS BLOB) ELSE ((NULL)IS NOT(rt0.c2)) END;
SELECT rt0.c4, rt0.c1 FROM rt0 INNER JOIN v0 ON CASE WHEN rt0.c3 THEN CAST(v0.c0 AS BLOB) ELSE ((NULL)IS NOT(rt0.c2)) END WHERE (((((rt0.c3) NOTNULL)) IS TRUE)) UNION ALL SELECT ALL rt0.c4, rt0.c1 FROM rt0 INNER JOIN v0 ON CASE WHEN rt0.c3 THEN CAST(v0.c0 AS BLOB) ELSE ((NULL)IS NOT(rt0.c2)) END WHERE ((NOT (((((rt0.c3) NOTNULL)) IS TRUE)))) UNION ALL SELECT rt0.c4, rt0.c1 FROM rt0 INNER JOIN v0 ON CASE WHEN rt0.c3 THEN CAST(v0.c0 AS BLOB) ELSE ((NULL)IS NOT(rt0.c2)) END WHERE (((((((rt0.c3) NOTNULL)) IS TRUE)) ISNULL));
SELECT ALL rt0.c4, rt0.c1 FROM rt0 INNER JOIN v0 ON CASE WHEN rt0.c3 THEN CAST(v0.c0 AS BLOB) ELSE ((NULL)IS NOT(rt0.c2)) END;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (rtreenode(CAST(v0.c0 AS TEXT), ((v0.c0)&(v0.c0)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (rtreenode(CAST(v0.c0 AS TEXT), ((v0.c0)&(v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((rtreenode(CAST(v0.c0 AS TEXT), ((v0.c0)&(v0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0, rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c0;
SELECT v0.c0, rt0.c4, rt0.c0 FROM rt0, v0 WHERE (CAST(((rt0.c0) NOTNULL) AS REAL)) GROUP BY v0.c0, rt0.c4, rt0.c0 UNION SELECT v0.c0, rt0.c4, rt0.c0 FROM rt0, v0 WHERE ((NOT (CAST(((rt0.c0) NOTNULL) AS REAL)))) GROUP BY v0.c0, rt0.c4, rt0.c0 UNION SELECT v0.c0, rt0.c4, rt0.c0 FROM rt0, v0 WHERE (((CAST(((rt0.c0) NOTNULL) AS REAL)) ISNULL)) GROUP BY v0.c0, rt0.c4, rt0.c0;
SELECT v0.c0, rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(SUM(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(SUM(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(SUM(v0.c0))) ISNULL);
SELECT ALL rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c3 FROM v0, rt0;
SELECT rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c3 FROM v0, rt0 WHERE ((((rt0.c3)) BETWEEN ((((0.03213283398011335)GLOB(v0.c0)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)))))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c3 FROM v0, rt0 WHERE ((NOT ((((rt0.c3)) BETWEEN ((((0.03213283398011335)GLOB(v0.c0)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)))))))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c3 FROM v0, rt0 WHERE ((((((rt0.c3)) BETWEEN ((((0.03213283398011335)GLOB(v0.c0)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)))))) ISNULL));
SELECT ALL rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c3 FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS TEXT))<<((NULL IN (v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS TEXT))<<((NULL IN (v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS TEXT))<<((NULL IN (v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c3, rt0.c2, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, rt0.c2, rt0.c4;
SELECT ALL rt0.c3, rt0.c2, rt0.c4 FROM rt0, v0 WHERE (SQLITE_SOURCE_ID()) GROUP BY rt0.c3, rt0.c2, rt0.c4 UNION SELECT rt0.c3, rt0.c2, rt0.c4 FROM rt0, v0 WHERE ((NOT (SQLITE_SOURCE_ID()))) GROUP BY rt0.c3, rt0.c2, rt0.c4 UNION SELECT rt0.c3, rt0.c2, rt0.c4 FROM rt0, v0 WHERE (((SQLITE_SOURCE_ID()) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c4;
SELECT rt0.c3, rt0.c2, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, rt0.c2, rt0.c4;
SELECT ALL rt0.c3, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0;
SELECT rt0.c3, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0 HAVING GROUP_CONCAT(rt0.c3) COLLATE BINARY UNION ALL SELECT rt0.c3, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT(rt0.c3) COLLATE BINARY)) UNION ALL SELECT rt0.c3, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(rt0.c3) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c3, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0;
SELECT rt0.c3, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0 HAVING GROUP_CONCAT(rt0.c3) COLLATE BINARY UNION ALL SELECT rt0.c3, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT(rt0.c3) COLLATE BINARY)) UNION ALL SELECT rt0.c3, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(rt0.c3) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c3, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN NULL END)GLOB(0.6306969966333988))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN NULL END)GLOB(0.6306969966333988))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((CASE WHEN v0.c0 THEN NULL END)GLOB(0.6306969966333988))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c4 FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c4 FROM v0 NATURAL JOIN rt0 WHERE ((~ (UNLIKELY(rt0.c1)))) UNION SELECT DISTINCT rt0.c4 FROM v0 NATURAL JOIN rt0 WHERE ((NOT ((~ (UNLIKELY(rt0.c1)))))) UNION SELECT DISTINCT rt0.c4 FROM v0 NATURAL JOIN rt0 WHERE ((((~ (UNLIKELY(rt0.c1)))) ISNULL));
SELECT DISTINCT rt0.c4 FROM v0 NATURAL JOIN rt0;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c4;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c4 FROM v0, rt0 WHERE (TRIM(((rt0.c1)>=(rt0.c0)))) GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c4 UNION SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c4 FROM v0, rt0 WHERE ((NOT (TRIM(((rt0.c1)>=(rt0.c0)))))) GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c4 UNION SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c4 FROM v0, rt0 WHERE (((TRIM(((rt0.c1)>=(rt0.c0)))) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c4;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c4;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(0.5585511236041921))) AS INTEGER) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(0.5585511236041921))) AS INTEGER))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(0.5585511236041921))) AS INTEGER)) ISNULL);
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE ((((((rt0.c4, rt0.c2, v0.c0))<((v0.c0, v0.c0, rt0.c1))))|(rt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT ((((((rt0.c4, rt0.c2, v0.c0))<((v0.c0, v0.c0, rt0.c1))))|(rt0.c0 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((((((((rt0.c4, rt0.c2, v0.c0))<((v0.c0, v0.c0, rt0.c1))))|(rt0.c0 COLLATE BINARY))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2 FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2 FROM rt0, v0 WHERE (CASE (+ (rt0.c3))  WHEN rt0.c0 COLLATE BINARY THEN CASE WHEN rt0.c0 THEN rt0.c3 END ELSE v0.c0 END) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2 FROM rt0, v0 WHERE ((NOT (CASE (+ (rt0.c3))  WHEN rt0.c0 COLLATE BINARY THEN CASE WHEN rt0.c0 THEN rt0.c3 END ELSE v0.c0 END))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2 FROM rt0, v0 WHERE (((CASE (+ (rt0.c3))  WHEN rt0.c0 COLLATE BINARY THEN CASE WHEN rt0.c0 THEN rt0.c3 END ELSE v0.c0 END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2 FROM rt0, v0;
SELECT rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c0 IN ())) NOT BETWEEN ((((rt0.c1))<((x'')))) AND ((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c3))))) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c0 IN ())) NOT BETWEEN ((((rt0.c1))<((x'')))) AND ((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c3))))) WHERE (((((rt0.c1 COLLATE BINARY)AND(rt0.c1)))AND(CASE WHEN rt0.c2 THEN rt0.c4 END))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c0 IN ())) NOT BETWEEN ((((rt0.c1))<((x'')))) AND ((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c3))))) WHERE ((NOT (((((rt0.c1 COLLATE BINARY)AND(rt0.c1)))AND(CASE WHEN rt0.c2 THEN rt0.c4 END))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c0 IN ())) NOT BETWEEN ((((rt0.c1))<((x'')))) AND ((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c3))))) WHERE (((((((rt0.c1 COLLATE BINARY)AND(rt0.c1)))AND(CASE WHEN rt0.c2 THEN rt0.c4 END))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c0 IN ())) NOT BETWEEN ((((rt0.c1))<((x'')))) AND ((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c3))))) GROUP BY rt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2;
SELECT rt0.c3, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2 HAVING ((((((MAX(MIN(GROUP_CONCAT(rt0.c3)))) NOT NULL))OR(rt0.c3)))AND(MIN(TOTAL(rt0.c0)))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2 HAVING (NOT (((((((MAX(MIN(GROUP_CONCAT(rt0.c3)))) NOT NULL))OR(rt0.c3)))AND(MIN(TOTAL(rt0.c0)))))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2 HAVING ((((((((MAX(MIN(GROUP_CONCAT(rt0.c3)))) NOT NULL))OR(rt0.c3)))AND(MIN(TOTAL(rt0.c0))))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) BETWEEN (IFNULL(v0.c0, v0.c0)) AND (v0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0) BETWEEN (IFNULL(v0.c0, v0.c0)) AND (v0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) BETWEEN (IFNULL(v0.c0, v0.c0)) AND (v0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM v0, rt0;
SELECT DISTINCT v0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM v0, rt0 WHERE (rt0.c1) UNION SELECT DISTINCT v0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM v0, rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT v0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM v0, rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT v0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM v0, rt0;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c4;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c4 FROM v0, rt0 WHERE ((rt0.c2 IN ())) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c4 FROM v0, rt0 WHERE ((NOT ((rt0.c2 IN ())))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c4 UNION SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c4 FROM v0, rt0 WHERE ((((rt0.c2 IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c4;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c4;
SELECT rt0.c1, rt0.c2, rt0.c0, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0, rt0.c4;
SELECT rt0.c1, rt0.c2, rt0.c0, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0, rt0.c4 HAVING GROUP_CONCAT(((AVG(MIN(rt0.c4))) ISNULL)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0, rt0.c4 HAVING (NOT (GROUP_CONCAT(((AVG(MIN(rt0.c4))) ISNULL)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0, rt0.c4 HAVING ((GROUP_CONCAT(((AVG(MIN(rt0.c4))) ISNULL))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c4 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c4 FROM rt0 WHERE (((CAST(rt0.c1 AS REAL))/((- (rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS REAL))/((- (rt0.c0))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c4 FROM rt0 WHERE (((((CAST(rt0.c1 AS REAL))/((- (rt0.c0))))) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0 WHERE (((((rt0.c1)OR(rt0.c3))) ISNULL)) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0 NOT INDEXED WHERE ((NOT (((((rt0.c1)OR(rt0.c3))) ISNULL)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0 NOT INDEXED WHERE (((((((rt0.c1)OR(rt0.c3))) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0 IN (x'')))<(v0.c0 COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 IN (x'')))<(v0.c0 COLLATE RTRIM))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0 IN (x'')))<(v0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING NULL COLLATE RTRIM COLLATE NOCASE UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (NULL COLLATE RTRIM COLLATE NOCASE)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((NULL COLLATE RTRIM COLLATE NOCASE) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING NULL COLLATE RTRIM COLLATE NOCASE UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (NULL COLLATE RTRIM COLLATE NOCASE)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((NULL COLLATE RTRIM COLLATE NOCASE) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c2 FROM v0 CROSS JOIN rt0 ON (+ ((- (rt0.c2))));
SELECT rt0.c2 FROM v0 CROSS JOIN rt0 ON (+ ((- (rt0.c2)))) WHERE (v0.c0 COLLATE NOCASE) UNION ALL SELECT rt0.c2 FROM v0 CROSS JOIN rt0 ON (+ ((- (rt0.c2)))) WHERE ((NOT (v0.c0 COLLATE NOCASE))) UNION ALL SELECT rt0.c2 FROM v0 CROSS JOIN rt0 ON (+ ((- (rt0.c2)))) WHERE (((v0.c0 COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c2 FROM v0 CROSS JOIN rt0 ON (+ ((- (rt0.c2))));
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 END)||(LENGTH(v0.c0)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c0 END)||(LENGTH(v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 END)||(LENGTH(v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(SUM(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(SUM(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(SUM(v0.c0)))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (LENGTH(((v0.c0) NOTNULL))) UNION ALL SELECT * FROM v0 WHERE ((NOT (LENGTH(((v0.c0) NOTNULL))))) UNION ALL SELECT * FROM v0 WHERE (((LENGTH(((v0.c0) NOTNULL))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ('-1636527587') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ('-1636527587'))) UNION SELECT DISTINCT * FROM rt0 WHERE ((('-1636527587') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0, rt0.c4, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c0;
SELECT v0.c0, rt0.c4, rt0.c1, rt0.c0 FROM rt0, v0 WHERE ((((rt0.c1, rt0.c3, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c3, v0.c0)) AND ((rt0.c4, rt0.c3, rt0.c0))) COLLATE RTRIM) GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c0 UNION SELECT ALL v0.c0, rt0.c4, rt0.c1, rt0.c0 FROM rt0, v0 WHERE ((NOT ((((rt0.c1, rt0.c3, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c3, v0.c0)) AND ((rt0.c4, rt0.c3, rt0.c0))) COLLATE RTRIM))) GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c0 UNION SELECT ALL v0.c0, rt0.c4, rt0.c1, rt0.c0 FROM rt0, v0 WHERE ((((((rt0.c1, rt0.c3, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c3, v0.c0)) AND ((rt0.c4, rt0.c3, rt0.c0))) COLLATE RTRIM) ISNULL)) GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c0;
SELECT ALL v0.c0, rt0.c4, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c0;
SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING CAST((((rt0.c2, SUM(GROUP_CONCAT(v0.c0)), AVG(rt0.c4))) BETWEEN ((MIN(COUNT(*)), rt0.c0, rt0.c3)) AND ((rt0.c4, rt0.c4, rt0.c1))) AS TEXT) UNION ALL SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING (NOT (CAST((((rt0.c2, SUM(GROUP_CONCAT(v0.c0)), AVG(rt0.c4))) BETWEEN ((MIN(COUNT(*)), rt0.c0, rt0.c3)) AND ((rt0.c4, rt0.c4, rt0.c1))) AS TEXT))) UNION ALL SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING ((CAST((((rt0.c2, SUM(GROUP_CONCAT(v0.c0)), AVG(rt0.c4))) BETWEEN ((MIN(COUNT(*)), rt0.c0, rt0.c3)) AND ((rt0.c4, rt0.c4, rt0.c1))) AS TEXT)) ISNULL);
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (rt0.c1) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE (CASE ((rt0.c2)<<(rt0.c2))  WHEN ((rt0.c0)=(rt0.c4)) THEN CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 END END) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CASE ((rt0.c2)<<(rt0.c2))  WHEN ((rt0.c0)=(rt0.c4)) THEN CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 END END))) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE ((rt0.c2)<<(rt0.c2))  WHEN ((rt0.c0)=(rt0.c4)) THEN CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 END END) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 WHERE (((((((rt0.c3, v0.c0, v0.c0)) NOT BETWEEN ((rt0.c0, 0.4762391124249006, rt0.c4)) AND ((v0.c0, rt0.c2, rt0.c4)))))!=((rt0.c0 COLLATE BINARY)))) GROUP BY rt0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT (((((((rt0.c3, v0.c0, v0.c0)) NOT BETWEEN ((rt0.c0, 0.4762391124249006, rt0.c4)) AND ((v0.c0, rt0.c2, rt0.c4)))))<>((rt0.c0 COLLATE BINARY)))))) GROUP BY rt0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 NOT INDEXED WHERE (((((((((rt0.c3, v0.c0, v0.c0)) NOT BETWEEN ((rt0.c0, 0.4762391124249006, rt0.c4)) AND ((v0.c0, rt0.c2, rt0.c4)))))!=((rt0.c0 COLLATE BINARY)))) ISNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c4, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2;
SELECT ALL rt0.c4, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2 HAVING (((COUNT(*)))<=((SUM(COUNT(*))))) UNION ALL SELECT rt0.c4, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2 HAVING (NOT ((((COUNT(*)))<=((SUM(COUNT(*))))))) UNION ALL SELECT ALL rt0.c4, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2 HAVING (((((COUNT(*)))<=((SUM(COUNT(*)))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c4 THEN NULL WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 END)IS NOT(((rt0.c2)-(rt0.c4))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c4 THEN NULL WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 END)IS NOT(((rt0.c2)-(rt0.c4))))))) UNION ALL SELECT * FROM rt0 WHERE (((((CASE WHEN rt0.c4 THEN NULL WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 END)IS NOT(((rt0.c2)-(rt0.c4))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((rt0.c0 IN (rt0.c3)) IN (CAST(rt0.c4 AS BLOB)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((rt0.c0 IN (rt0.c3)) IN (CAST(rt0.c4 AS BLOB)))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((rt0.c0 IN (rt0.c3)) IN (CAST(rt0.c4 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (LOWER(DISTINCT highlight(v0.c0, v0.c0, v0.c0, v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (LOWER(DISTINCT highlight(v0.c0, v0.c0, v0.c0, v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((LOWER(DISTINCT highlight(v0.c0, v0.c0, v0.c0, v0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(((v0.c0) NOTNULL)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(((v0.c0) NOTNULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(((v0.c0) NOTNULL))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(((v0.c0) NOTNULL)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(((v0.c0) NOTNULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(((v0.c0) NOTNULL))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (x'') UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (x''))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((x'') ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0, v0;
SELECT DISTINCT v0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0, v0 WHERE (((CASE rt0.c4  WHEN rt0.c4 THEN rt0.c0 END)&(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3))))) UNION SELECT DISTINCT v0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0, v0 WHERE ((NOT (((CASE rt0.c4  WHEN rt0.c4 THEN rt0.c0 END)&(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3))))))) UNION SELECT DISTINCT v0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0, v0 WHERE (((((CASE rt0.c4  WHEN rt0.c4 THEN rt0.c0 END)&(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3))))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 HAVING (NOT (rt0.c1)) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 HAVING (NOT (rt0.c1)) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((NOT (((7.17493586E8)<<(rt0.c3))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((NOT (((7.17493586E8)<<(rt0.c3))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((NOT (((7.17493586E8)<<(rt0.c3))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((+ (rt0.c1)))OR(((rt0.c3) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((+ (rt0.c1)))OR(((rt0.c3) NOTNULL)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((+ (rt0.c1)))OR(((rt0.c3) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CAST(v0.c0 COLLATE BINARY AS NUMERIC)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(v0.c0 COLLATE BINARY AS NUMERIC)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST(v0.c0 COLLATE BINARY AS NUMERIC)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c3 HAVING ((AVG(AVG(SUM(x'')))) IS FALSE) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c3 HAVING (NOT (((AVG(AVG(SUM(x'')))) IS FALSE))) UNION ALL SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c3 HAVING ((((AVG(AVG(SUM(x'')))) IS FALSE)) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, 0X281053c9, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))*(ABS(v0.c0)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, 0X281053c9, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))*(ABS(v0.c0)))))) UNION ALL SELECT * FROM v0 WHERE ((((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, 0X281053c9, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))*(ABS(v0.c0)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0) BETWEEN (x'') AND (NULL))) BETWEEN (v0.c0) AND (v0.c0 COLLATE BINARY))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (x'') AND (NULL))) BETWEEN (v0.c0) AND (v0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0) BETWEEN (x'') AND (NULL))) BETWEEN (v0.c0) AND (v0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ('mw?kx' COLLATE NOCASE) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ('mw?kx' COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((('mw?kx' COLLATE NOCASE) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (MIN(MAX(AVG(COUNT(*)))) IN ((- (v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((MIN(MAX(AVG(COUNT(*)))) IN ((- (v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((MIN(MAX(AVG(COUNT(*)))) IN ((- (v0.c0))))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (0xffffffffb7004808 COLLATE RTRIM) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (0xffffffffb7004808 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM v0 WHERE (((0Xffffffffb7004808 COLLATE RTRIM) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0 COLLATE NOCASE)%(LENGTH(v0.c0)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0 COLLATE NOCASE)%(LENGTH(v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0 COLLATE NOCASE)%(LENGTH(v0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS INTEGER))>(v0.c0 COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS INTEGER))>(v0.c0 COLLATE BINARY))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS INTEGER))>(v0.c0 COLLATE BINARY))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c4 FROM rt0, v0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0, v0 GROUP BY rt0.c4 HAVING ((((COUNT(*))OR(MAX(rt0.c2))))OR(MIN(rt0.c4))) UNION ALL SELECT rt0.c4 FROM rt0, v0 GROUP BY rt0.c4 HAVING (NOT (((((COUNT(*))OR(MAX(rt0.c2))))OR(MIN(rt0.c4))))) UNION ALL SELECT ALL rt0.c4 FROM rt0, v0 GROUP BY rt0.c4 HAVING ((((((COUNT(*))OR(MAX(rt0.c2))))OR(MIN(rt0.c4)))) ISNULL);
SELECT rt0.c4 FROM rt0, v0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0, v0 GROUP BY rt0.c4 HAVING ((((COUNT(*))OR(MAX(rt0.c2))))OR(MIN(rt0.c4))) UNION ALL SELECT rt0.c4 FROM rt0, v0 GROUP BY rt0.c4 HAVING (NOT (((((COUNT(*))OR(MAX(rt0.c2))))OR(MIN(rt0.c4))))) UNION ALL SELECT ALL rt0.c4 FROM rt0, v0 GROUP BY rt0.c4 HAVING ((((((COUNT(*))OR(MAX(rt0.c2))))OR(MIN(rt0.c4)))) ISNULL);
SELECT rt0.c4 FROM rt0, v0 GROUP BY rt0.c4;
SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0;
SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE ((((+ (rt0.c4))) NOTNULL)) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT ((((+ (rt0.c4))) NOTNULL)))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE ((((((+ (rt0.c4))) NOTNULL)) ISNULL));
SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE ((((rt0.c0)) BETWEEN (((NOT (rt0.c0)))) AND ((((rt0.c1) ISNULL))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c0)) BETWEEN (((NOT (rt0.c0)))) AND ((((rt0.c1) ISNULL))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE ((((((rt0.c0)) BETWEEN (((NOT (rt0.c0)))) AND ((((rt0.c1) ISNULL))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c3))<=((rt0.c1)))) ISNULL)) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c3))<=((rt0.c1)))) ISNULL)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((((((((rt0.c3))<=((rt0.c1)))) ISNULL)) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c4 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE (((CASE WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN '1996868288' WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)>(((rt0.c3)IS(rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT (((CASE WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN '1996868288' WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)>(((rt0.c3)IS(rt0.c0))))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE (((((CASE WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN '1996868288' WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)>(((rt0.c3)IS(rt0.c0))))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c4 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)))AND(rt0.c1)))OR(IFNULL(rt0.c1, rt0.c4)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)))AND(rt0.c1)))OR(IFNULL(rt0.c1, rt0.c4)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)))AND(rt0.c1)))OR(IFNULL(rt0.c1, rt0.c4)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 WHERE ((rt0.c3 IN ())) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0 WHERE ((NOT ((rt0.c3 IN ())))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0 WHERE ((((rt0.c3 IN ())) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3 HAVING ((GROUP_CONCAT(rt0.c4)) NOT BETWEEN (rt0.c2) AND (MIN(GROUP_CONCAT(0.9655489107339347)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3 HAVING (NOT (((GROUP_CONCAT(rt0.c4)) NOT BETWEEN (rt0.c2) AND (MIN(GROUP_CONCAT(0.9655489107339347)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3 HAVING ((((GROUP_CONCAT(rt0.c4)) NOT BETWEEN (rt0.c2) AND (MIN(GROUP_CONCAT(0.9655489107339347))))) ISNULL);
SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 WHERE (CASE (NOT (rt0.c3))  WHEN ((((rt0.c0)AND(rt0.c0)))AND(v0.c0)) THEN ((((rt0.c0)AND(rt0.c0)))OR(v0.c0)) END) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 WHERE ((NOT (CASE (NOT (rt0.c3))  WHEN ((((rt0.c0)AND(rt0.c0)))AND(v0.c0)) THEN ((((rt0.c0)AND(rt0.c0)))OR(v0.c0)) END))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 WHERE (((CASE (NOT (rt0.c3))  WHEN ((((rt0.c0)AND(rt0.c0)))AND(v0.c0)) THEN ((((rt0.c0)AND(rt0.c0)))OR(v0.c0)) END) ISNULL));
SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE ((v0.c0)-(v0.c0))  WHEN SQLITE_COMPILEOPTION_GET(x'') THEN ((v0.c0) IS TRUE) END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE ((v0.c0)-(v0.c0))  WHEN SQLITE_COMPILEOPTION_GET(x'') THEN ((v0.c0) IS TRUE) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE ((v0.c0)-(v0.c0))  WHEN SQLITE_COMPILEOPTION_GET(x'') THEN ((v0.c0) IS TRUE) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL((((x'fe426c42', SUM(MIN(COUNT(v0.c0))), v0.c0)) BETWEEN ((v0.c0, GROUP_CONCAT(COUNT(v0.c0)), v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL((((x'fe426c42', SUM(MIN(COUNT(v0.c0))), v0.c0)) BETWEEN ((v0.c0, GROUP_CONCAT(COUNT(v0.c0)), v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL((((x'fe426c42', SUM(MIN(COUNT(v0.c0))), v0.c0)) BETWEEN ((v0.c0, GROUP_CONCAT(COUNT(v0.c0)), v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((json_quote(v0.c0))||(v0.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((json_quote(v0.c0))||(v0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((json_quote(v0.c0))||(v0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT v0.c0 FROM v0 INNER JOIN rt0 ON (((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)) IN ((NOT (rt0.c4)), (rt0.c1 IN (rt0.c2, rt0.c0)))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 INNER JOIN rt0 ON (((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)) IN ((NOT (rt0.c4)), (rt0.c1 IN (rt0.c2, rt0.c0)))) WHERE ((((rt0.c4)) BETWEEN ((CASE '1342169390'  WHEN rt0.c3 THEN rt0.c4 WHEN v0.c0 THEN v0.c0 WHEN rt0.c3 THEN v0.c0 END)) AND ((COALESCE(rt0.c3, rt0.c3, rt0.c4, rt0.c4))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 INNER JOIN rt0 ON (((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)) IN ((NOT (rt0.c4)), (rt0.c1 IN (rt0.c2, rt0.c0)))) WHERE ((NOT ((((rt0.c4)) BETWEEN ((CASE '1342169390'  WHEN rt0.c3 THEN rt0.c4 WHEN v0.c0 THEN v0.c0 WHEN rt0.c3 THEN v0.c0 END)) AND ((COALESCE(rt0.c3, rt0.c3, rt0.c4, rt0.c4))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 INNER JOIN rt0 ON (((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)) IN ((NOT (rt0.c4)), (rt0.c1 IN (rt0.c2, rt0.c0)))) WHERE ((((((rt0.c4)) BETWEEN ((CASE '1342169390'  WHEN rt0.c3 THEN rt0.c4 WHEN v0.c0 THEN v0.c0 WHEN rt0.c3 THEN v0.c0 END)) AND ((COALESCE(rt0.c3, rt0.c3, rt0.c4, rt0.c4))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 INNER JOIN rt0 ON (((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)) IN ((NOT (rt0.c4)), (rt0.c1 IN (rt0.c2, rt0.c0)))) GROUP BY v0.c0;
SELECT rt0.c4, rt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c4, rt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3 HAVING MAX(CASE WHEN rt0.c3 THEN TOTAL(rt0.c4) ELSE AVG(rt0.c2) END) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3 HAVING (NOT (MAX(CASE WHEN rt0.c3 THEN TOTAL(rt0.c4) ELSE AVG(rt0.c2) END))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3 HAVING ((MAX(CASE WHEN rt0.c3 THEN TOTAL(rt0.c4) ELSE AVG(rt0.c2) END)) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (NULL)))LIKE(v0.c0))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (NULL)))LIKE(v0.c0))))) UNION ALL SELECT * FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (NULL)))LIKE(v0.c0))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0 NATURAL JOIN v0 WHERE (((((((rt0.c2)AND(rt0.c2)))AND(x'acf3'))) IS TRUE)) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (((((((rt0.c2)AND(rt0.c2)))AND(x'acf3'))) IS TRUE)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0 NATURAL JOIN v0 WHERE (((((((((rt0.c2)AND(rt0.c2)))AND(x'acf3'))) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0 NATURAL JOIN v0;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c4;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0 WHERE (((((rt0.c0)AND((((NULL))>=((rt0.c2))))))OR(UPPER(rt0.c0)))) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c4 UNION SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT (((((rt0.c0)AND((((NULL))>=((rt0.c2))))))OR(UPPER(rt0.c0)))))) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c4 UNION SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0 WHERE (((((((rt0.c0)AND((((NULL))>=((rt0.c2))))))OR(UPPER(rt0.c0)))) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c4;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c4;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING LTRIM(COUNT(MAX(v0.c0)), (MAX(COUNT(*)) IN ())) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (LTRIM(COUNT(MAX(v0.c0)), (MAX(COUNT(*)) IN ())))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((LTRIM(COUNT(MAX(v0.c0)), (MAX(COUNT(*)) IN ()))) ISNULL);
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE ((- (((0.6255329537399842)<<(v0.c0))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT ((- (((0.6255329537399842)<<(v0.c0))))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((((- (((0.6255329537399842)<<(v0.c0))))) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c0, NULL, v0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), '1887186424')) AND ((CAST(v0.c0 AS TEXT), (~ (v0.c0)), v0.c0 COLLATE BINARY)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c0, NULL, v0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), '1887186424')) AND ((CAST(v0.c0 AS TEXT), (~ (v0.c0)), v0.c0 COLLATE BINARY)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0, NULL, v0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), '1887186424')) AND ((CAST(v0.c0 AS TEXT), (~ (v0.c0)), v0.c0 COLLATE BINARY)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0, rt0.c3 FROM v0, rt0 WHERE (((((((((((((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END)OR((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))))))AND(rt0.c4)))OR(((((rt0.c1)AND(rt0.c4)))AND(rt0.c0)))))AND((- (rt0.c4)))))AND((((rt0.c0))<=((rt0.c3))))))AND(((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c3))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0, rt0.c3 UNION SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0, rt0.c3 FROM v0, rt0 WHERE ((NOT (((((((((((((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END)OR((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))))))AND(rt0.c4)))OR(((((rt0.c1)AND(rt0.c4)))AND(rt0.c0)))))AND((- (rt0.c4)))))AND((((rt0.c0))<=((rt0.c3))))))AND(((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c3))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0, rt0.c3 FROM v0, rt0 WHERE (((((((((((((((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END)OR((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))))))AND(rt0.c4)))OR(((((rt0.c1)AND(rt0.c4)))AND(rt0.c0)))))AND((- (rt0.c4)))))AND((((rt0.c0))<=((rt0.c3))))))AND(((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c3))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0, rt0.c3;
SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0, rt0.c3;
SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING COUNT(COUNT(rt0.c1)) UNION ALL SELECT rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING (NOT (COUNT(COUNT(rt0.c1)))) UNION ALL SELECT rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING ((COUNT(COUNT(rt0.c1))) ISNULL);
SELECT MAX(rt0.c4) FROM rt0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c1) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE WHEN CAST(0.15763082206188894 AS TEXT) THEN x'' WHEN (+ (v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN SQLITE_COMPILEOPTION_USED(v0.c0) THEN (NOT (v0.c0)) ELSE ((v0.c0)-(v0.c0)) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN CAST(0.15763082206188894 AS TEXT) THEN x'' WHEN (+ (v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN SQLITE_COMPILEOPTION_USED(v0.c0) THEN (NOT (v0.c0)) ELSE ((v0.c0)-(v0.c0)) END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE WHEN CAST(0.15763082206188894 AS TEXT) THEN x'' WHEN (+ (v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN SQLITE_COMPILEOPTION_USED(v0.c0) THEN (NOT (v0.c0)) ELSE ((v0.c0)-(v0.c0)) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0;
SELECT rt0.c1, v0.c0 FROM rt0, v0 WHERE (((((rt0.c2 COLLATE RTRIM)OR(SUBSTR(v0.c0, v0.c0))))AND(CASE WHEN rt0.c0 THEN rt0.c2 END))) GROUP BY rt0.c1, v0.c0 UNION SELECT ALL rt0.c1, v0.c0 FROM rt0, v0 WHERE ((NOT (((((rt0.c2 COLLATE RTRIM)OR(SUBSTR(v0.c0, v0.c0))))AND(CASE WHEN rt0.c0 THEN rt0.c2 END))))) GROUP BY rt0.c1, v0.c0 UNION SELECT rt0.c1, v0.c0 FROM rt0, v0 WHERE (((((((rt0.c2 COLLATE RTRIM)OR(SUBSTR(v0.c0, v0.c0))))AND(CASE WHEN rt0.c0 THEN rt0.c2 END))) ISNULL)) GROUP BY rt0.c1, v0.c0;
SELECT ALL rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4;
SELECT rt0.c3, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4 HAVING CAST(COUNT(*) AS INTEGER) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4 HAVING (NOT (CAST(COUNT(*) AS INTEGER))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4 HAVING ((CAST(COUNT(*) AS INTEGER)) ISNULL);
SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4;
SELECT rt0.c3, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4 HAVING CAST(COUNT(*) AS INTEGER) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4 HAVING (NOT (CAST(COUNT(*) AS INTEGER))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4 HAVING ((CAST(COUNT(*) AS INTEGER)) ISNULL);
SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4;
SELECT MIN(TRIM(x'', ((v0.c0)/(v0.c0)))) FROM v0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((CASE WHEN rt0.c4 THEN rt0.c4 END IN ())) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((CASE WHEN rt0.c4 THEN rt0.c4 END IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((CASE WHEN rt0.c4 THEN rt0.c4 END IN ())) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, rt0 WHERE ('z^9[3*Wy\') GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM v0, rt0 WHERE ((NOT ('z^9[3*Wy\'))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM v0, rt0 WHERE ((('z^9[3*Wy\') ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING COUNT(rt0.c4) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (COUNT(rt0.c4))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((COUNT(rt0.c4)) ISNULL);
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING COUNT(rt0.c4) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (COUNT(rt0.c4))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((COUNT(rt0.c4)) ISNULL);
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE ((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))  WHEN CAST(rt0.c4 AS TEXT) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))) ELSE rt0.c0 END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE ((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))  WHEN CAST(rt0.c4 AS TEXT) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))) ELSE rt0.c0 END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE ((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))  WHEN CAST(rt0.c4 AS TEXT) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))) ELSE rt0.c0 END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((v0.c0) ISNULL) IN ())) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((v0.c0) ISNULL) IN ())))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((v0.c0) ISNULL) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((CAST(rt0.c2 AS REAL)) NOT NULL)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS REAL)) NOT NULL)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c2 AS REAL)) NOT NULL)) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(MIN(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(MIN(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(MIN(v0.c0))) ISNULL);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON (CAST(rt0.c0 AS REAL) IN (CAST(rt0.c4 AS TEXT)));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON (CAST(rt0.c0 AS REAL) IN (CAST(rt0.c4 AS TEXT))) WHERE (((rt0.c0 COLLATE RTRIM)GLOB((- (rt0.c1))))) UNION ALL SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON (CAST(rt0.c0 AS REAL) IN (CAST(rt0.c4 AS TEXT))) WHERE ((NOT (((rt0.c0 COLLATE RTRIM)GLOB((- (rt0.c1))))))) UNION ALL SELECT * FROM v0 LEFT OUTER JOIN rt0 ON (CAST(rt0.c0 AS REAL) IN (CAST(rt0.c4 AS TEXT))) WHERE (((((rt0.c0 COLLATE RTRIM)GLOB((- (rt0.c1))))) ISNULL));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON (CAST(rt0.c0 AS REAL) IN (CAST(rt0.c4 AS TEXT)));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((((((CAST(v0.c0 AS NUMERIC))OR(((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(x'')))))AND(((v0.c0)==(v0.c0)))))AND((NOT (v0.c0)))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN '-602556094' THEN v0.c0 ELSE v0.c0 END)))AND(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))AND(NULL COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((((((((((CAST(v0.c0 AS NUMERIC))OR(((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(x'')))))AND(((v0.c0)=(v0.c0)))))AND((NOT (v0.c0)))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN '-602556094' THEN v0.c0 ELSE v0.c0 END)))AND(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))AND(NULL COLLATE NOCASE))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((((((((CAST(v0.c0 AS NUMERIC))OR(((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(x'')))))AND(((v0.c0)==(v0.c0)))))AND((NOT (v0.c0)))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN '-602556094' THEN v0.c0 ELSE v0.c0 END)))AND(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))AND(NULL COLLATE NOCASE))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CAST(((v0.c0) IS FALSE) AS TEXT)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c0) IS FALSE) AS TEXT)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CAST(((v0.c0) IS FALSE) AS TEXT)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0;
SELECT ALL rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0 HAVING (('-581101418') BETWEEN (SUM(rt0.c3)) AND (COUNT(*))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0 HAVING (NOT ((('-581101418') BETWEEN (SUM(rt0.c3)) AND (COUNT(*))))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0 HAVING (((('-581101418') BETWEEN (SUM(rt0.c3)) AND (COUNT(*)))) ISNULL);
SELECT rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0;
SELECT ALL rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0 HAVING (('-581101418') BETWEEN (SUM(rt0.c3)) AND (COUNT(*))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0 HAVING (NOT ((('-581101418') BETWEEN (SUM(rt0.c3)) AND (COUNT(*))))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0 HAVING (((('-581101418') BETWEEN (SUM(rt0.c3)) AND (COUNT(*)))) ISNULL);
SELECT rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0;
SELECT ALL MIN((~ ((~ (rt0.c1))))) FROM rt0;
SELECT rt0.c1 FROM rt0 CROSS JOIN v0 ON ((((((rt0.c2)AND(rt0.c4)))OR(rt0.c0)))!=(((((rt0.c3)AND(rt0.c3)))OR(rt0.c0))));
SELECT rt0.c1 FROM rt0 CROSS JOIN v0 ON ((((((rt0.c2)AND(rt0.c4)))OR(rt0.c0)))<>(((((rt0.c3)AND(rt0.c3)))OR(rt0.c0)))) WHERE ((((rt0.c2) NOTNULL) IN ())) UNION ALL SELECT rt0.c1 FROM rt0 CROSS JOIN v0 ON ((((((rt0.c2)AND(rt0.c4)))OR(rt0.c0)))!=(((((rt0.c3)AND(rt0.c3)))OR(rt0.c0)))) WHERE ((NOT ((((rt0.c2) NOTNULL) IN ())))) UNION ALL SELECT rt0.c1 FROM rt0 CROSS JOIN v0 ON ((((((rt0.c2)AND(rt0.c4)))OR(rt0.c0)))!=(((((rt0.c3)AND(rt0.c3)))OR(rt0.c0)))) WHERE ((((((rt0.c2) NOTNULL) IN ())) ISNULL));
SELECT rt0.c1 FROM rt0 CROSS JOIN v0 ON ((((((rt0.c2)AND(rt0.c4)))OR(rt0.c0)))!=(((((rt0.c3)AND(rt0.c3)))OR(rt0.c0))));
SELECT DISTINCT rt0.c4, rt0.c3, v0.c0, rt0.c2 FROM v0, rt0;
SELECT DISTINCT rt0.c4, rt0.c3, v0.c0, rt0.c2 FROM v0, rt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c4, rt0.c3, v0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c4, rt0.c3, v0.c0, rt0.c2 FROM v0, rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c3, v0.c0, rt0.c2 FROM v0, rt0;
SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND ('1550367643'))) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 UNION SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c0) AND ('1550367643'))) ISNULL)))) GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 UNION SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c0) AND ('1550367643'))) ISNULL)) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1 HAVING AVG((((v0.c0)) BETWEEN ((rt0.c4)) AND ((TOTAL(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1 HAVING (NOT (AVG((((v0.c0)) BETWEEN ((rt0.c4)) AND ((TOTAL(rt0.c1))))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1 HAVING ((AVG((((v0.c0)) BETWEEN ((rt0.c4)) AND ((TOTAL(rt0.c1)))))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((NOT (((v0.c0)>(v0.c0))))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((NOT (((v0.c0)>(v0.c0))))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((NOT (((v0.c0)>(v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0 FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0, rt0 WHERE (0.4541914090779692 COLLATE BINARY) UNION SELECT DISTINCT v0.c0 FROM v0, rt0 WHERE ((NOT (0.4541914090779692 COLLATE BINARY))) UNION SELECT DISTINCT v0.c0 FROM v0, rt0 WHERE (((0.4541914090779692 COLLATE BINARY) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((- (v0.c0)))<(CAST(v0.c0 AS INTEGER)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((- (v0.c0)))<(CAST(v0.c0 AS INTEGER)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((- (v0.c0)))<(CAST(v0.c0 AS INTEGER)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0;
SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0 HAVING ((-613553556)!=(MAX(rt0.c4))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0 HAVING (NOT (((-613553556)<>(MAX(rt0.c4))))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0 HAVING ((((-613553556)<>(MAX(rt0.c4)))) ISNULL);
SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0;
SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0 HAVING ((-613553556)!=(MAX(rt0.c4))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0 HAVING (NOT (((-613553556)<>(MAX(rt0.c4))))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0 HAVING ((((-613553556)<>(MAX(rt0.c4)))) ISNULL);
SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0;
SELECT rt0.c4, v0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c4))) BETWEEN (CASE rt0.c4  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END) AND (((rt0.c2)<=(' '))));
SELECT ALL rt0.c4, v0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c4))) BETWEEN (CASE rt0.c4  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END) AND (((rt0.c2)<=(' ')))) WHERE ((((rt0.c4)) NOT BETWEEN ((((NULL)|(rt0.c1)))) AND (('2009240508')))) UNION ALL SELECT rt0.c4, v0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c4))) BETWEEN (CASE rt0.c4  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END) AND (((rt0.c2)<=(' ')))) WHERE ((NOT ((((rt0.c4)) NOT BETWEEN ((((NULL)|(rt0.c1)))) AND (('2009240508')))))) UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c4))) BETWEEN (CASE rt0.c4  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END) AND (((rt0.c2)<=(' ')))) WHERE ((((((rt0.c4)) NOT BETWEEN ((((NULL)|(rt0.c1)))) AND (('2009240508')))) ISNULL));
SELECT rt0.c4, v0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c4))) BETWEEN (CASE rt0.c4  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END) AND (((rt0.c2)<=(' '))));
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0 WHERE (((rt0.c2)>(GLOB(rt0.c1, rt0.c1)))) UNION SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (((rt0.c2)>(GLOB(rt0.c1, rt0.c1)))))) UNION SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0 WHERE (((((rt0.c2)>(GLOB(rt0.c1, rt0.c1)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0;
SELECT v0.c0, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c0;
SELECT ALL v0.c0, rt0.c0 FROM v0, rt0 WHERE (((CASE WHEN rt0.c3 THEN v0.c0 END)<=((- (rt0.c4))))) GROUP BY v0.c0, rt0.c0 UNION SELECT ALL v0.c0, rt0.c0 FROM v0, rt0 WHERE ((NOT (((CASE WHEN rt0.c3 THEN v0.c0 END)<=((- (rt0.c4))))))) GROUP BY v0.c0, rt0.c0 UNION SELECT ALL v0.c0, rt0.c0 FROM v0, rt0 WHERE (((((CASE WHEN rt0.c3 THEN v0.c0 END)<=((- (rt0.c4))))) ISNULL)) GROUP BY v0.c0, rt0.c0;
SELECT v0.c0, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c0;
SELECT ALL v0.c0 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c0 HAVING MIN(MIN(GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL v0.c0 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c0 HAVING (NOT (MIN(MIN(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT ALL v0.c0 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c0 HAVING ((MIN(MIN(GROUP_CONCAT(COUNT(*))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CASE WHEN CHANGES() THEN ((rt0.c3) IS FALSE) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE WHEN CHANGES() THEN ((rt0.c3) IS FALSE) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN CHANGES() THEN ((rt0.c3) IS FALSE) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, v0.c0, rt0.c1, rt0.c4 FROM rt0, v0;
SELECT DISTINCT rt0.c2, v0.c0, rt0.c1, rt0.c4 FROM rt0, v0 WHERE ((- (((rt0.c2)=(rt0.c0))))) UNION SELECT DISTINCT rt0.c2, v0.c0, rt0.c1, rt0.c4 FROM rt0, v0 WHERE ((NOT ((- (((rt0.c2)=(rt0.c0))))))) UNION SELECT DISTINCT rt0.c2, v0.c0, rt0.c1, rt0.c4 FROM rt0, v0 WHERE ((((- (((rt0.c2)=(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, v0.c0, rt0.c1, rt0.c4 FROM rt0, v0;
SELECT rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE (CASE WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN (rt0.c0 IN ()) ELSE ((rt0.c3)>(rt0.c3)) END) GROUP BY rt0.c4, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN (rt0.c0 IN ()) ELSE ((rt0.c3)>(rt0.c3)) END))) GROUP BY rt0.c4, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE (((CASE WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN (rt0.c0 IN ()) ELSE ((rt0.c3)>(rt0.c3)) END) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(AVG(MIN(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(AVG(MIN(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING ((MAX(AVG(MIN(v0.c0)))) ISNULL);
SELECT rt0.c3, rt0.c2, rt0.c1 FROM v0, rt0;
SELECT rt0.c3, rt0.c2, rt0.c1 FROM v0, rt0 WHERE (CAST(x'' AS REAL)) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM v0, rt0 WHERE ((NOT (CAST(x'' AS REAL)))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM v0 NOT INDEXED, rt0 WHERE (((CAST(x'' AS REAL)) ISNULL));
SELECT rt0.c3, rt0.c2, rt0.c1 FROM v0, rt0;
SELECT DISTINCT * FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM v0 NATURAL JOIN rt0 WHERE (0Xa428160) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN rt0 WHERE ((NOT (0Xa428160))) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN rt0 WHERE (((0xa428160) ISNULL));
SELECT DISTINCT * FROM v0 NATURAL JOIN rt0;
SELECT rt0.c3 FROM v0, rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM v0, rt0 WHERE (((((CASE WHEN rt0.c0 THEN v0.c0 END)OR((rt0.c2 IN ()))))AND(QUOTE(rt0.c0)))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM v0, rt0 WHERE ((NOT (((((CASE WHEN rt0.c0 THEN v0.c0 END)OR((rt0.c2 IN ()))))AND(QUOTE(rt0.c0)))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM v0, rt0 WHERE (((((((CASE WHEN rt0.c0 THEN v0.c0 END)OR((rt0.c2 IN ()))))AND(QUOTE(rt0.c0)))) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM v0, rt0 GROUP BY rt0.c3;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(COUNT(COUNT(*))))IS(AVG(rt0.c0))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((COUNT(COUNT(COUNT(*))))IS(AVG(rt0.c0))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((COUNT(COUNT(COUNT(*))))IS(AVG(rt0.c0)))) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE ((((((rt0.c0 IN ()))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 END)))OR(ABS(DISTINCT rt0.c0)))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT ((((((rt0.c0 IN ()))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 END)))OR(ABS(DISTINCT rt0.c0)))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((((((((rt0.c0 IN ()))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 END)))OR(ABS(DISTINCT rt0.c0)))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((~ (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((~ (((((v0.c0)AND(v0.c0)))OR(v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((~ (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0)IS NOT(CAST(v0.c0 AS REAL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0)IS NOT(CAST(v0.c0 AS REAL)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0)IS NOT(CAST(v0.c0 AS REAL)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c4;
SELECT rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c4 HAVING (((MIN(COUNT(*)), COUNT(*), rt0.c3)) BETWEEN ((COUNT(GROUP_CONCAT(rt0.c4)), GROUP_CONCAT(SUM(COUNT(*))), ((((COUNT(*))OR(SUM(rt0.c1))))OR(v0.c0)))) AND (((~ (AVG(rt0.c2))), TOTAL(AVG(TOTAL(COUNT(*)))), SUM(rt0.c3)))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c4 HAVING (NOT ((((MIN(COUNT(*)), COUNT(*), rt0.c3)) BETWEEN ((COUNT(GROUP_CONCAT(rt0.c4)), GROUP_CONCAT(SUM(COUNT(*))), ((((COUNT(*))OR(SUM(rt0.c1))))OR(v0.c0)))) AND (((~ (AVG(rt0.c2))), TOTAL(AVG(TOTAL(COUNT(*)))), SUM(rt0.c3)))))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c4 HAVING (((((MIN(COUNT(*)), COUNT(*), rt0.c3)) BETWEEN ((COUNT(GROUP_CONCAT(rt0.c4)), GROUP_CONCAT(SUM(COUNT(*))), ((((COUNT(*))OR(SUM(rt0.c1))))OR(v0.c0)))) AND (((~ (AVG(rt0.c2))), TOTAL(AVG(TOTAL(COUNT(*)))), SUM(rt0.c3))))) ISNULL);
SELECT rt0.c0 FROM rt0 NATURAL JOIN v0;
SELECT ALL rt0.c0 FROM rt0 NATURAL JOIN v0 WHERE (CAST((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) AS TEXT)) UNION ALL SELECT ALL rt0.c0 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (CAST((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) AS TEXT)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 NATURAL JOIN v0 WHERE (((CAST((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) AS TEXT)) ISNULL));
SELECT rt0.c0 FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 NOT INDEXED WHERE (CASE x''  WHEN json_insert(v0.c0, v0.c0, '') THEN (((rt0.c0, NULL, v0.c0, v0.c0, rt0.c0)) BETWEEN ((rt0.c4, rt0.c3, rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c3, rt0.c3, '\rᄞ1\'))) END) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (CASE x''  WHEN json_insert(v0.c0, v0.c0, '') THEN (((rt0.c0, NULL, v0.c0, v0.c0, rt0.c0)) BETWEEN ((rt0.c4, rt0.c3, rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c3, rt0.c3, '\rᄞ1\'))) END))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((CASE x''  WHEN json_insert(v0.c0, v0.c0, '') THEN (((rt0.c0, NULL, v0.c0, v0.c0, rt0.c0)) BETWEEN ((rt0.c4, rt0.c3, rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c3, rt0.c3, '\rᄞ1\'))) END) ISNULL));
SELECT ALL rt0.c4, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c2, rt0.c1, v0.c0;
SELECT rt0.c4, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 WHERE ((+ (((((rt0.c0)AND(rt0.c0)))AND(v0.c0))))) GROUP BY rt0.c4, rt0.c2, rt0.c1, v0.c0 UNION SELECT rt0.c4, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 WHERE ((NOT ((+ (((((rt0.c0)AND(rt0.c0)))AND(v0.c0))))))) GROUP BY rt0.c4, rt0.c2, rt0.c1, v0.c0 UNION SELECT ALL rt0.c4, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 WHERE ((((+ (((((rt0.c0)AND(rt0.c0)))AND(v0.c0))))) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c1, v0.c0;
SELECT ALL rt0.c4, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c2, rt0.c1, v0.c0;
SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3;
SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 HAVING rt0.c2 UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 HAVING (NOT (rt0.c2)) UNION ALL SELECT v0.c0, rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 HAVING ((rt0.c2) ISNULL);
SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3;
SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 HAVING rt0.c2 UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 HAVING (NOT (rt0.c2)) UNION ALL SELECT v0.c0, rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 HAVING ((rt0.c2) ISNULL);
SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM v0 CROSS JOIN rt0 ON ((((rt0.c1) IS FALSE))!=(CASE WHEN rt0.c3 THEN rt0.c4 END));
SELECT rt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM v0 CROSS JOIN rt0 ON ((((rt0.c1) IS FALSE))<>(CASE WHEN rt0.c3 THEN rt0.c4 END)) WHERE (CAST(x'' COLLATE RTRIM AS TEXT)) UNION ALL SELECT rt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM v0 CROSS JOIN rt0 ON ((((rt0.c1) IS FALSE))<>(CASE WHEN rt0.c3 THEN rt0.c4 END)) WHERE ((NOT (CAST(x'' COLLATE RTRIM AS TEXT)))) UNION ALL SELECT rt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM v0 CROSS JOIN rt0 ON ((((rt0.c1) IS FALSE))<>(CASE WHEN rt0.c3 THEN rt0.c4 END)) WHERE (((CAST(x'' COLLATE RTRIM AS TEXT)) ISNULL));
SELECT ALL rt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM v0 CROSS JOIN rt0 ON ((((rt0.c1) IS FALSE))!=(CASE WHEN rt0.c3 THEN rt0.c4 END));
SELECT DISTINCT rt0.c2, rt0.c4 FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c4 FROM v0, rt0 WHERE (((((rt0.c2)IS(rt0.c1))) IS FALSE)) UNION SELECT DISTINCT rt0.c2, rt0.c4 FROM v0, rt0 WHERE ((NOT (((((rt0.c2)IS(rt0.c1))) IS FALSE)))) UNION SELECT DISTINCT rt0.c2, rt0.c4 FROM v0, rt0 WHERE (((((((rt0.c2)IS(rt0.c1))) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c4 FROM v0, rt0;
SELECT rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)))GLOB(TRIM(rt0.c1)))) GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c0 UNION SELECT rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)))GLOB(TRIM(rt0.c1)))))) GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)))GLOB(TRIM(rt0.c1)))) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c0;
SELECT rt0.c3, v0.c0, rt0.c0, rt0.c1, rt0.c4 FROM v0 CROSS JOIN rt0 ON ((((rt0.c2) IS FALSE))||(((v0.c0)>(rt0.c2)))) GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c1, rt0.c4;
SELECT rt0.c3, v0.c0, rt0.c0, rt0.c1, rt0.c4 FROM v0 CROSS JOIN rt0 ON ((((rt0.c2) IS FALSE))||(((v0.c0)>(rt0.c2)))) GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c1, rt0.c4 HAVING (COUNT(*) IN ()) UNION ALL SELECT rt0.c3, v0.c0, rt0.c0, rt0.c1, rt0.c4 FROM v0 CROSS JOIN rt0 ON ((((rt0.c2) IS FALSE))||(((v0.c0)>(rt0.c2)))) GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c1, rt0.c4 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL rt0.c3, v0.c0, rt0.c0, rt0.c1, rt0.c4 FROM v0 CROSS JOIN rt0 ON ((((rt0.c2) IS FALSE))||(((v0.c0)>(rt0.c2)))) GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c1, rt0.c4 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT rt0.c3, v0.c0, rt0.c0, rt0.c1, rt0.c4 FROM v0 CROSS JOIN rt0 ON ((((rt0.c2) IS FALSE))||(((v0.c0)>(rt0.c2)))) GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c1, rt0.c4;
SELECT rt0.c3, v0.c0, rt0.c0, rt0.c1, rt0.c4 FROM v0 CROSS JOIN rt0 ON ((((rt0.c2) IS FALSE))||(((v0.c0)>(rt0.c2)))) GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c1, rt0.c4 HAVING (COUNT(*) IN ()) UNION ALL SELECT rt0.c3, v0.c0, rt0.c0, rt0.c1, rt0.c4 FROM v0 CROSS JOIN rt0 ON ((((rt0.c2) IS FALSE))||(((v0.c0)>(rt0.c2)))) GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c1, rt0.c4 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL rt0.c3, v0.c0, rt0.c0, rt0.c1, rt0.c4 FROM v0 CROSS JOIN rt0 ON ((((rt0.c2) IS FALSE))||(((v0.c0)>(rt0.c2)))) GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c1, rt0.c4 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT rt0.c3, v0.c0, rt0.c0, rt0.c1, rt0.c4 FROM v0 CROSS JOIN rt0 ON ((((rt0.c2) IS FALSE))||(((v0.c0)>(rt0.c2)))) GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c1, rt0.c4;
SELECT rt0.c4, rt0.c3, v0.c0, rt0.c1 FROM v0, rt0;
SELECT ALL rt0.c4, rt0.c3, v0.c0, rt0.c1 FROM v0, rt0 WHERE (((((((((((rt0.c4)AND(rt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(rt0.c3))) BETWEEN ((NOT (rt0.c0))) AND (rt0.c4))) UNION ALL SELECT ALL rt0.c4, rt0.c3, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (((((((((((rt0.c4)AND(rt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(rt0.c3))) BETWEEN ((NOT (rt0.c0))) AND (rt0.c4))))) UNION ALL SELECT ALL rt0.c4, rt0.c3, v0.c0, rt0.c1 FROM v0, rt0 WHERE (((((((((((((rt0.c4)AND(rt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(rt0.c3))) BETWEEN ((NOT (rt0.c0))) AND (rt0.c4))) ISNULL));
SELECT rt0.c4, rt0.c3, v0.c0, rt0.c1 FROM v0, rt0;
SELECT DISTINCT v0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON ((CAST(rt0.c1 AS BLOB))<(((((((((rt0.c0)AND(rt0.c3)))OR(v0.c0)))OR(rt0.c1)))OR(rt0.c1))));
SELECT DISTINCT v0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON ((CAST(rt0.c1 AS BLOB))<(((((((((rt0.c0)AND(rt0.c3)))OR(v0.c0)))OR(rt0.c1)))OR(rt0.c1)))) WHERE (rt0.c3) UNION SELECT DISTINCT v0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON ((CAST(rt0.c1 AS BLOB))<(((((((((rt0.c0)AND(rt0.c3)))OR(v0.c0)))OR(rt0.c1)))OR(rt0.c1)))) WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT v0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON ((CAST(rt0.c1 AS BLOB))<(((((((((rt0.c0)AND(rt0.c3)))OR(v0.c0)))OR(rt0.c1)))OR(rt0.c1)))) WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT v0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON ((CAST(rt0.c1 AS BLOB))<(((((((((rt0.c0)AND(rt0.c3)))OR(v0.c0)))OR(rt0.c1)))OR(rt0.c1))));
SELECT rt0.c0, rt0.c2, rt0.c4 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c2, rt0.c4;
SELECT rt0.c0, rt0.c2, rt0.c4 FROM v0 NATURAL JOIN rt0 WHERE ((((NOT (v0.c0)))<>(rt0.c4))) GROUP BY rt0.c0, rt0.c2, rt0.c4 UNION SELECT rt0.c0, rt0.c2, rt0.c4 FROM v0 NATURAL JOIN rt0 WHERE ((NOT ((((NOT (v0.c0)))!=(rt0.c4))))) GROUP BY rt0.c0, rt0.c2, rt0.c4 UNION SELECT rt0.c0, rt0.c2, rt0.c4 FROM v0 NATURAL JOIN rt0 WHERE ((((((NOT (v0.c0)))<>(rt0.c4))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c4;
SELECT rt0.c0, rt0.c2, rt0.c4 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c2, rt0.c4;
SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, rt0.c2;
SELECT rt0.c3, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, rt0.c2 HAVING CASE WHEN CAST(rt0.c0 AS TEXT) THEN TOTAL(rt0.c3) END UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, rt0.c2 HAVING (NOT (CASE WHEN CAST(rt0.c0 AS TEXT) THEN TOTAL(rt0.c3) END)) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, rt0.c2 HAVING ((CASE WHEN CAST(rt0.c0 AS TEXT) THEN TOTAL(rt0.c3) END) ISNULL);
SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, rt0.c2;
SELECT rt0.c3, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, rt0.c2 HAVING CASE WHEN CAST(rt0.c0 AS TEXT) THEN TOTAL(rt0.c3) END UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, rt0.c2 HAVING (NOT (CASE WHEN CAST(rt0.c0 AS TEXT) THEN TOTAL(rt0.c3) END)) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, rt0.c2 HAVING ((CASE WHEN CAST(rt0.c0 AS TEXT) THEN TOTAL(rt0.c3) END) ISNULL);
SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, rt0.c2;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c1)) IN (rt0.c2, LIKELY(rt0.c4)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c1)) IN (rt0.c2, LIKELY(rt0.c4)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c1)) IN (rt0.c2, LIKELY(rt0.c4)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((LIKELIHOOD(rt0.c0, 0.01167004183909659)) IS FALSE)) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((LIKELIHOOD(rt0.c0, 0.01167004183909659)) IS FALSE)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((LIKELIHOOD(rt0.c0, 0.01167004183909659)) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c1, rt0.c4, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0, rt0.c0;
SELECT rt0.c1, rt0.c4, v0.c0, rt0.c0 FROM rt0, v0 WHERE ((('' COLLATE NOCASE) IS FALSE)) GROUP BY rt0.c1, rt0.c4, v0.c0, rt0.c0 UNION SELECT rt0.c1, rt0.c4, v0.c0, rt0.c0 FROM rt0, v0 WHERE ((NOT ((('' COLLATE NOCASE) IS FALSE)))) GROUP BY rt0.c1, rt0.c4, v0.c0, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c4, v0.c0, rt0.c0 FROM rt0, v0 WHERE ((((('' COLLATE NOCASE) IS FALSE)) ISNULL)) GROUP BY rt0.c1, rt0.c4, v0.c0, rt0.c0;
SELECT rt0.c1, rt0.c4, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0, rt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(MIN(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(MIN(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(MIN(v0.c0))) ISNULL);
SELECT ALL v0.c0, rt0.c3, rt0.c0, rt0.c4 FROM v0, rt0 NOT INDEXED;
SELECT v0.c0, rt0.c3, rt0.c0, rt0.c4 FROM v0, rt0 WHERE ((((~ (rt0.c2)))<<(CASE WHEN rt0.c3 THEN rt0.c0 ELSE x'' END))) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c0, rt0.c4 FROM v0, rt0 WHERE ((NOT ((((~ (rt0.c2)))<<(CASE WHEN rt0.c3 THEN rt0.c0 ELSE x'' END))))) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c0, rt0.c4 FROM v0 NOT INDEXED, rt0 WHERE ((((((~ (rt0.c2)))<<(CASE WHEN rt0.c3 THEN rt0.c0 ELSE x'' END))) ISNULL));
SELECT ALL v0.c0, rt0.c3, rt0.c0, rt0.c4 FROM v0, rt0 NOT INDEXED;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0, v0 WHERE (v0.c0) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0, v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0, v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0, v0;
SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0 WHERE (((((((v0.c0) NOT BETWEEN (x'ee70') AND (rt0.c2)))AND(((v0.c0) IS FALSE))))OR(0.890808240206681))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM v0, rt0 WHERE ((NOT (((((((v0.c0) NOT BETWEEN (x'ee70') AND (rt0.c2)))AND(((v0.c0) IS FALSE))))OR(0.890808240206681))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM v0, rt0 WHERE (((((((((v0.c0) NOT BETWEEN (x'ee70') AND (rt0.c2)))AND(((v0.c0) IS FALSE))))OR(0.890808240206681))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((((rt0.c0))>=((rt0.c2))) IN ()) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (((((rt0.c0))>=((rt0.c2))) IN ()))) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((((((rt0.c0))>=((rt0.c2))) IN ())) ISNULL);
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((((rt0.c0))>=((rt0.c2))) IN ()) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (((((rt0.c0))>=((rt0.c2))) IN ()))) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((((((rt0.c0))>=((rt0.c2))) IN ())) ISNULL);
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE ('\됆ダHqmd') UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT ('\됆ダHqmd'))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((('\됆ダHqmd') ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((rt0.c2)/(rt0.c0))))>((CAST(rt0.c0 AS NUMERIC))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c2)/(rt0.c0))))>((CAST(rt0.c0 AS NUMERIC))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((((rt0.c2)/(rt0.c0))))>((CAST(rt0.c0 AS NUMERIC))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c4 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4;
SELECT ALL rt0.c2, rt0.c4 FROM rt0, v0 WHERE ((((((((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c4)))AND('')))OR(rt0.c1)))AND(rt0.c3)) IN ())) GROUP BY rt0.c2, rt0.c4 UNION SELECT rt0.c2, rt0.c4 FROM rt0, v0 WHERE ((NOT ((((((((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c4)))AND('')))OR(rt0.c1)))AND(rt0.c3)) IN ())))) GROUP BY rt0.c2, rt0.c4 UNION SELECT rt0.c2, rt0.c4 FROM rt0, v0 WHERE ((((((((((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c4)))AND('')))OR(rt0.c1)))AND(rt0.c3)) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c4;
SELECT ALL rt0.c2, rt0.c4 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING LIKELIHOOD(MIN(v0.c0), 0.23129718058428117) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (LIKELIHOOD(MIN(v0.c0), 0.23129718058428117))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((LIKELIHOOD(MIN(v0.c0), 0.23129718058428117)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING LIKELIHOOD(MIN(v0.c0), 0.23129718058428117) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (LIKELIHOOD(MIN(v0.c0), 0.23129718058428117))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((LIKELIHOOD(MIN(v0.c0), 0.23129718058428117)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE ((((v0.c0)) BETWEEN ((CAST(rt0.c3 AS TEXT))) AND ((GLOB(rt0.c3, rt0.c4))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((CAST(rt0.c3 AS TEXT))) AND ((GLOB(rt0.c3, rt0.c4))))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((((((v0.c0)) BETWEEN ((CAST(rt0.c3 AS TEXT))) AND ((GLOB(rt0.c3, rt0.c4))))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE WHEN CASE x'1052'  WHEN v0.c0 THEN v0.c0 END THEN 0.4240705622460823 ELSE 'ŏF' COLLATE NOCASE END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN CASE x'1052'  WHEN v0.c0 THEN v0.c0 END THEN 0.4240705622460823 ELSE 'ŏF' COLLATE NOCASE END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE WHEN CASE x'1052'  WHEN v0.c0 THEN v0.c0 END THEN 0.4240705622460823 ELSE 'ŏF' COLLATE NOCASE END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 WHERE (CASE WHEN CAST(rt0.c3 AS NUMERIC) THEN ((rt0.c1)<(rt0.c0)) ELSE rt0.c1 COLLATE BINARY END) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM rt0 WHERE ((NOT (CASE WHEN CAST(rt0.c3 AS NUMERIC) THEN ((rt0.c1)<(rt0.c0)) ELSE rt0.c1 COLLATE BINARY END))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM rt0 WHERE (((CASE WHEN CAST(rt0.c3 AS NUMERIC) THEN ((rt0.c1)<(rt0.c0)) ELSE rt0.c1 COLLATE BINARY END) ISNULL)) GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((rt0.c3))<=((MAX(MIN(GROUP_CONCAT(rt0.c4))) COLLATE BINARY))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((((rt0.c3))<=((MAX(MIN(GROUP_CONCAT(rt0.c4))) COLLATE BINARY))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((((rt0.c3))<=((MAX(MIN(GROUP_CONCAT(rt0.c4))) COLLATE BINARY)))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((((v0.c0)*(x'3da6e323')))IS((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((0.5663661440729244)))))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((v0.c0)*(x'3da6e323')))IS((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((0.5663661440729244)))))))) UNION ALL SELECT * FROM v0 WHERE (((((((v0.c0)*(x'3da6e323')))IS((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((0.5663661440729244)))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((NOT (v0.c0)))%(((v0.c0) IS FALSE)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((NOT (v0.c0)))%(((v0.c0) IS FALSE)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((NOT (v0.c0)))%(((v0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c0;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c0 FROM rt0, v0 WHERE ((- ((+ (v0.c0))))) GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c0 UNION SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c0 FROM rt0, v0 WHERE ((NOT ((- ((+ (v0.c0))))))) GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c0 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c0 FROM rt0, v0 WHERE ((((- ((+ (v0.c0))))) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c0;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(v0.c0))<=(SUM(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((MAX(v0.c0))<=(SUM(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((MAX(v0.c0))<=(SUM(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(v0.c0))<=(SUM(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((MAX(v0.c0))<=(SUM(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((MAX(v0.c0))<=(SUM(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c1, v0.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0, v0;
SELECT rt0.c1, v0.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0, v0 WHERE (((x'7cbb') NOTNULL)) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0, v0 WHERE ((NOT (((x'7cbb') NOTNULL)))) UNION ALL SELECT rt0.c1, v0.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0, v0 WHERE (((((x'7cbb') NOTNULL)) ISNULL));
SELECT ALL rt0.c1, v0.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (json(((v0.c0)>=(v0.c0)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (json(((v0.c0)>=(v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((json(((v0.c0)>=(v0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT v0.c0, rt0.c1, rt0.c0 FROM rt0, v0 WHERE (((((((rt0.c0)%(rt0.c2)))AND(((x'')<>(rt0.c0)))))AND(CASE WHEN 0.24634047491951705 THEN rt0.c4 END))) GROUP BY v0.c0, rt0.c1, rt0.c0 UNION SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM rt0, v0 WHERE ((NOT (((((((rt0.c0)%(rt0.c2)))AND(((x'')<>(rt0.c0)))))AND(CASE WHEN 0.24634047491951705 THEN rt0.c4 END))))) GROUP BY v0.c0, rt0.c1, rt0.c0 UNION SELECT v0.c0, rt0.c1, rt0.c0 FROM rt0, v0 WHERE (((((((((rt0.c0)%(rt0.c2)))AND(((x'')<>(rt0.c0)))))AND(CASE WHEN 0.24634047491951705 THEN rt0.c4 END))) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT v0.c0, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0, rt0.c2;
SELECT rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0, rt0.c2;
SELECT rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c4 FROM v0, rt0;
SELECT rt0.c4 FROM v0, rt0 WHERE ((NOT (((v0.c0) NOTNULL)))) UNION ALL SELECT ALL rt0.c4 FROM v0, rt0 WHERE ((NOT ((NOT (((v0.c0) NOTNULL)))))) UNION ALL SELECT rt0.c4 FROM v0, rt0 WHERE ((((NOT (((v0.c0) NOTNULL)))) ISNULL));
SELECT ALL rt0.c4 FROM v0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((- (json_valid(0.5207808495950754)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((- (json_valid(0.5207808495950754)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((- (json_valid(0.5207808495950754)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0)||(v0.c0)) COLLATE NOCASE) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0)||(v0.c0)) COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((v0.c0)||(v0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c3, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON (('-1624592939') IS TRUE) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c3, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON (('-1624592939') IS TRUE) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c3, rt0.c0 HAVING (+ (MIN(x''))) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c3, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON (('-1624592939') IS TRUE) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c3, rt0.c0 HAVING (NOT ((+ (MIN(x''))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c3, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON (('-1624592939') IS TRUE) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c3, rt0.c0 HAVING (((+ (MIN(x'')))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c3, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON (('-1624592939') IS TRUE) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c3, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON (('-1624592939') IS TRUE) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c3, rt0.c0 HAVING (+ (MIN(x''))) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c3, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON (('-1624592939') IS TRUE) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c3, rt0.c0 HAVING (NOT ((+ (MIN(x''))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c3, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON (('-1624592939') IS TRUE) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c3, rt0.c0 HAVING (((+ (MIN(x'')))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c3, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON (('-1624592939') IS TRUE) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c3, rt0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c2) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((((((rt0.c4) NOT BETWEEN (rt0.c1) AND (v0.c0)), ((v0.c0)*(rt0.c0)), CASE WHEN NULL THEN rt0.c4 ELSE rt0.c0 END))=((((((((((((((v0.c0)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(x'')))OR(rt0.c0)), x'33d4', ((rt0.c4)==(v0.c0)))))) UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT ((((((rt0.c4) NOT BETWEEN (rt0.c1) AND (v0.c0)), ((v0.c0)*(rt0.c0)), CASE WHEN NULL THEN rt0.c4 ELSE rt0.c0 END))=((((((((((((((v0.c0)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(x'')))OR(rt0.c0)), x'33d4', ((rt0.c4)=(v0.c0)))))))) UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((((((((rt0.c4) NOT BETWEEN (rt0.c1) AND (v0.c0)), ((v0.c0)*(rt0.c0)), CASE WHEN NULL THEN rt0.c4 ELSE rt0.c0 END))=((((((((((((((v0.c0)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(x'')))OR(rt0.c0)), x'33d4', ((rt0.c4)==(v0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM v0, rt0;
SELECT ALL rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1;
SELECT ALL rt0.c3, rt0.c4, rt0.c1 FROM rt0 WHERE (MIN(((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)), x'')) GROUP BY rt0.c3, rt0.c4, rt0.c1 UNION SELECT rt0.c3, rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT (MIN(((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)), x'')))) GROUP BY rt0.c3, rt0.c4, rt0.c1 UNION SELECT rt0.c3, rt0.c4, rt0.c1 FROM rt0 WHERE (((MIN(((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)), x'')) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c1;
SELECT ALL rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1;
SELECT rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c2 HAVING MIN(GROUP_CONCAT(GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c2 HAVING (NOT (MIN(GROUP_CONCAT(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c2 HAVING ((MIN(GROUP_CONCAT(GROUP_CONCAT(COUNT(*))))) ISNULL);
SELECT * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (((LIKE(rt0.c3, rt0.c2, '%')) NOT NULL)) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (((LIKE(rt0.c3, rt0.c2, '%')) NOT NULL)))) UNION ALL SELECT ALL * FROM rt0 NOT INDEXED, v0 WHERE (((((LIKE(rt0.c3, rt0.c2, '%')) NOT NULL)) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CAST('1099044914' AS NUMERIC)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CAST('1099044914' AS NUMERIC)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST('1099044914' AS NUMERIC)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE ((+ ((((x'5c2d'))>((rt0.c1)))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT ((+ ((((x'5c2d'))>((rt0.c1)))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE ((((+ ((((x'5c2d'))>((rt0.c1)))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL TOTAL(rt0.c3) FROM v0, rt0;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((((NULL) IS TRUE) IN ())) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((NULL) IS TRUE) IN ())))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((NULL) IS TRUE) IN ())) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON ((((((v0.c0)IS(rt0.c0)))OR(CASE rt0.c1  WHEN rt0.c3 THEN x'' ELSE v0.c0 END)))OR((((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, x'e070', rt0.c4)) AND ((NULL, rt0.c2, NULL)))));
SELECT DISTINCT v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON ((((((v0.c0)IS(rt0.c0)))OR(CASE rt0.c1  WHEN rt0.c3 THEN x'' ELSE v0.c0 END)))OR((((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, x'e070', rt0.c4)) AND ((NULL, rt0.c2, NULL))))) WHERE (ROUND(rt0.c1 COLLATE NOCASE, ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)))) UNION SELECT DISTINCT v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON ((((((v0.c0)IS(rt0.c0)))OR(CASE rt0.c1  WHEN rt0.c3 THEN x'' ELSE v0.c0 END)))OR((((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, x'e070', rt0.c4)) AND ((NULL, rt0.c2, NULL))))) WHERE ((NOT (ROUND(rt0.c1 COLLATE NOCASE, ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)))))) UNION SELECT DISTINCT v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON ((((((v0.c0)IS(rt0.c0)))OR(CASE rt0.c1  WHEN rt0.c3 THEN x'' ELSE v0.c0 END)))OR((((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, x'e070', rt0.c4)) AND ((NULL, rt0.c2, NULL))))) WHERE (((ROUND(rt0.c1 COLLATE NOCASE, ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON ((((((v0.c0)IS(rt0.c0)))OR(CASE rt0.c1  WHEN rt0.c3 THEN x'' ELSE v0.c0 END)))OR((((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, x'e070', rt0.c4)) AND ((NULL, rt0.c2, NULL)))));
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0, v0 WHERE (CAST(((rt0.c2)!=(rt0.c1)) AS NUMERIC)) GROUP BY rt0.c2, rt0.c3, rt0.c1 UNION SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0, v0 WHERE ((NOT (CAST(((rt0.c2)!=(rt0.c1)) AS NUMERIC)))) GROUP BY rt0.c2, rt0.c3, rt0.c1 UNION SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0, v0 WHERE (((CAST(((rt0.c2)!=(rt0.c1)) AS NUMERIC)) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM v0, rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM v0, rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM v0, rt0;
SELECT rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 WHERE (((((x'51a8')LIKE('931264293'))) NOTNULL)) UNION ALL SELECT rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (((((x'51a8')LIKE('931264293'))) NOTNULL)))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 WHERE (((((((x'51a8')LIKE('931264293'))) NOTNULL)) ISNULL));
SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM v0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (UNLIKELY(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (UNLIKELY(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((UNLIKELY(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, v0 WHERE (CASE CASE rt0.c1  WHEN v0.c0 THEN rt0.c3 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 END  WHEN ((rt0.c0)IS(rt0.c0)) THEN ((v0.c0)>=(rt0.c3)) WHEN (rt0.c2 IN ()) THEN NULL WHEN ((rt0.c0)GLOB(rt0.c4)) THEN rt0.c3 COLLATE NOCASE ELSE rt0.c2 END) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, v0 WHERE ((NOT (CASE CASE rt0.c1  WHEN v0.c0 THEN rt0.c3 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 END  WHEN ((rt0.c0)IS(rt0.c0)) THEN ((v0.c0)>=(rt0.c3)) WHEN (rt0.c2 IN ()) THEN NULL WHEN ((rt0.c0)GLOB(rt0.c4)) THEN rt0.c3 COLLATE NOCASE ELSE rt0.c2 END))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, v0 WHERE (((CASE CASE rt0.c1  WHEN v0.c0 THEN rt0.c3 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 END  WHEN ((rt0.c0)IS(rt0.c0)) THEN ((v0.c0)>=(rt0.c3)) WHEN (rt0.c2 IN ()) THEN NULL WHEN ((rt0.c0)GLOB(rt0.c4)) THEN rt0.c3 COLLATE NOCASE ELSE rt0.c2 END) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT v0.c0, rt0.c4, rt0.c3, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c1;
SELECT ALL v0.c0, rt0.c4, rt0.c3, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c1 HAVING TOTAL(COUNT(v0.c0)) UNION ALL SELECT ALL v0.c0, rt0.c4, rt0.c3, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c1 HAVING (NOT (TOTAL(COUNT(v0.c0)))) UNION ALL SELECT ALL v0.c0, rt0.c4, rt0.c3, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c1 HAVING ((TOTAL(COUNT(v0.c0))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT rt0.c1)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (TRIM(DISTINCT rt0.c1)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((TRIM(DISTINCT rt0.c1)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON ((((((rt0.c2)GLOB(rt0.c0)))AND((NULL IN ()))))AND(((rt0.c3)>>(rt0.c1))));
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON ((((((rt0.c2)GLOB(rt0.c0)))AND((NULL IN ()))))AND(((rt0.c3)>>(rt0.c1)))) WHERE (((rt0.c4)==(rt0.c3)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON ((((((rt0.c2)GLOB(rt0.c0)))AND((NULL IN ()))))AND(((rt0.c3)>>(rt0.c1)))) WHERE ((NOT (((rt0.c4)=(rt0.c3)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON ((((((rt0.c2)GLOB(rt0.c0)))AND((NULL IN ()))))AND(((rt0.c3)>>(rt0.c1)))) WHERE (((((rt0.c4)=(rt0.c3)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON ((((((rt0.c2)GLOB(rt0.c0)))AND((NULL IN ()))))AND(((rt0.c3)>>(rt0.c1))));
SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE ((((NULL)) NOT BETWEEN (((rt0.c4 IN ()))) AND (((('-808588104')<<(rt0.c0)))))) GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT ((((NULL)) NOT BETWEEN (((rt0.c4 IN ()))) AND (((('-808588104')<<(rt0.c0)))))))) GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE ((((((NULL)) NOT BETWEEN (((rt0.c4 IN ()))) AND (((('-808588104')<<(rt0.c0)))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0, rt0.c1 HAVING COUNT(COUNT(v0.c0)) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0, rt0.c1 HAVING (NOT (COUNT(COUNT(v0.c0)))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0, rt0.c1 HAVING ((COUNT(COUNT(v0.c0))) ISNULL);
SELECT * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (((((~ (v0.c0)), ABS(NULL), ((((rt0.c3)AND('')))AND(rt0.c2))))==((HEX(DISTINCT rt0.c0), (rt0.c1 IN (rt0.c0)), SQLITE_COMPILEOPTION_GET(rt0.c0))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (((((~ (v0.c0)), ABS(NULL), ((((rt0.c3)AND('')))AND(rt0.c2))))==((HEX(DISTINCT rt0.c0), (rt0.c1 IN (rt0.c0)), SQLITE_COMPILEOPTION_GET(rt0.c0))))))) UNION ALL SELECT * FROM rt0, v0 WHERE (((((((~ (v0.c0)), ABS(NULL), ((((rt0.c3)AND('')))AND(rt0.c2))))==((HEX(DISTINCT rt0.c0), (rt0.c1 IN (rt0.c0)), SQLITE_COMPILEOPTION_GET(rt0.c0))))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT rt0.c3 FROM v0, rt0;
SELECT DISTINCT rt0.c3 FROM v0, rt0 WHERE (((((rt0.c3)OR(v0.c0))) ISNULL)) UNION SELECT DISTINCT rt0.c3 FROM v0, rt0 WHERE ((NOT (((((rt0.c3)OR(v0.c0))) ISNULL)))) UNION SELECT DISTINCT rt0.c3 FROM v0, rt0 WHERE (((((((rt0.c3)OR(v0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c3 FROM v0, rt0;
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, v0 WHERE (((NULL) BETWEEN (((v0.c0)*(rt0.c3))) AND (rt0.c0))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, v0 WHERE ((NOT (((NULL) BETWEEN (((v0.c0)*(rt0.c3))) AND (rt0.c0))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, v0 WHERE (((((NULL) BETWEEN (((v0.c0)*(rt0.c3))) AND (rt0.c0))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT((MAX(x'') IN ())) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT((MAX(x'') IN ())))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT((MAX(x'') IN ()))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT((MAX(x'') IN ())) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT((MAX(x'') IN ())))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT((MAX(x'') IN ()))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((((x'')AND(v0.c0)))AND(v0.c0)) COLLATE BINARY) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((x'')AND(v0.c0)))AND(v0.c0)) COLLATE BINARY))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((((x'')AND(v0.c0)))AND(v0.c0)) COLLATE BINARY) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0 IN (v0.c0, v0.c0)))<(((v0.c0)/(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 IN (v0.c0, v0.c0)))<(((v0.c0)/(v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0 IN (v0.c0, v0.c0)))<(((v0.c0)/(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0)+(v0.c0)) COLLATE RTRIM) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0)+(v0.c0)) COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0)+(v0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c4;
SELECT v0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c4 HAVING AVG((NOT (COUNT(COUNT(*))))) UNION ALL SELECT ALL v0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c4 HAVING (NOT (AVG((NOT (COUNT(COUNT(*))))))) UNION ALL SELECT v0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c4 HAVING ((AVG((NOT (COUNT(COUNT(*)))))) ISNULL);
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (((CASE rt0.c3  WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 END) BETWEEN (rt0.c3) AND ('飽|ly' COLLATE NOCASE))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (((CASE rt0.c3  WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 END) BETWEEN (rt0.c3) AND ('飽|ly' COLLATE NOCASE))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((((CASE rt0.c3  WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 END) BETWEEN (rt0.c3) AND ('飽|ly' COLLATE NOCASE))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3 FROM v0, rt0;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3 FROM v0 NOT INDEXED, rt0 WHERE (((rt0.c3)>>(rt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3 FROM v0, rt0 WHERE ((NOT (((rt0.c3)>>(rt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3 FROM v0, rt0 WHERE (((((rt0.c3)>>(rt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3 FROM v0, rt0;
SELECT ALL rt0.c2 FROM rt0 INNER JOIN v0 ON (((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 INNER JOIN v0 ON (((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) WHERE ((((v0.c0)>(rt0.c0)) IN ())) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 INNER JOIN v0 ON (((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) WHERE ((NOT ((((v0.c0)>(rt0.c0)) IN ())))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 INNER JOIN v0 ON (((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) WHERE ((((((v0.c0)>(rt0.c0)) IN ())) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 INNER JOIN v0 ON (((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) GROUP BY rt0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(GROUP_CONCAT(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(GROUP_CONCAT(v0.c0))) ISNULL);
SELECT ALL TOTAL(((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(((v0.c0)*(v0.c0)))))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) FROM v0;
SELECT ALL rt0.c3, rt0.c4, v0.c0, rt0.c2 FROM v0, rt0;
SELECT rt0.c3, rt0.c4, v0.c0, rt0.c2 FROM v0, rt0 WHERE (((rt0.c4 COLLATE BINARY) BETWEEN (((rt0.c3)IS('<駁\r'))) AND (((((((((rt0.c2)OR(rt0.c3)))AND(v0.c0)))OR(x'')))OR(rt0.c1))))) UNION ALL SELECT rt0.c3, rt0.c4, v0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT (((rt0.c4 COLLATE BINARY) BETWEEN (((rt0.c3)IS('<駁\r'))) AND (((((((((rt0.c2)OR(rt0.c3)))AND(v0.c0)))OR(x'')))OR(rt0.c1))))))) UNION ALL SELECT ALL rt0.c3, rt0.c4, v0.c0, rt0.c2 FROM v0, rt0 WHERE (((((rt0.c4 COLLATE BINARY) BETWEEN (((rt0.c3)IS('<駁\r'))) AND (((((((((rt0.c2)OR(rt0.c3)))AND(v0.c0)))OR(x'')))OR(rt0.c1))))) ISNULL));
SELECT ALL rt0.c3, rt0.c4, v0.c0, rt0.c2 FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c4 FROM rt0 WHERE (rt0.c3) UNION SELECT DISTINCT rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT rt0.c2, rt0.c4 FROM rt0 WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c4 FROM rt0;
SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1;
SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE ('1527841103') GROUP BY rt0.c4, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT ('1527841103'))) GROUP BY rt0.c4, rt0.c3, rt0.c1 UNION SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE ((('1527841103') ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c1;
SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c1 HAVING MAX(TRIM(DISTINCT COUNT(COUNT(*)), TOTAL(AVG(GROUP_CONCAT(SUM(SUM(rt0.c4))))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MAX(TRIM(DISTINCT COUNT(COUNT(*)), TOTAL(AVG(GROUP_CONCAT(SUM(SUM(rt0.c4))))))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((MAX(TRIM(DISTINCT COUNT(COUNT(*)), TOTAL(AVG(GROUP_CONCAT(SUM(SUM(rt0.c4)))))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((UPPER(DISTINCT v0.c0) IN ())) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((UPPER(DISTINCT v0.c0) IN ())))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((UPPER(DISTINCT v0.c0) IN ())) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN (v0.c0, (('萜P') NOT NULL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN (v0.c0, (('萜P') NOT NULL)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN (v0.c0, (('萜P') NOT NULL)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c3;
SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0, v0 WHERE (CASE WHEN ((rt0.c4) IS TRUE) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))) WHEN ((rt0.c0)>(rt0.c1)) THEN ((((rt0.c4)AND(rt0.c3)))AND(rt0.c1)) WHEN CAST(rt0.c3 AS INTEGER) THEN CAST(rt0.c2 AS BLOB) END) GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0, v0 WHERE ((NOT (CASE WHEN ((rt0.c4) IS TRUE) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))) WHEN ((rt0.c0)>(rt0.c1)) THEN ((((rt0.c4)AND(rt0.c3)))AND(rt0.c1)) WHEN CAST(rt0.c3 AS INTEGER) THEN CAST(rt0.c2 AS BLOB) END))) GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c3 UNION SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0, v0 WHERE (((CASE WHEN ((rt0.c4) IS TRUE) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))) WHEN ((rt0.c0)>(rt0.c1)) THEN ((((rt0.c4)AND(rt0.c3)))AND(rt0.c1)) WHEN CAST(rt0.c3 AS INTEGER) THEN CAST(rt0.c2 AS BLOB) END) ISNULL)) GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2;
SELECT ALL rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2 HAVING AVG(json_object(TOTAL(TOTAL(COUNT(*))), rt0.c3)) UNION ALL SELECT rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2 HAVING (NOT (AVG(json_object(TOTAL(TOTAL(COUNT(*))), rt0.c3)))) UNION ALL SELECT ALL rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2 HAVING ((AVG(json_object(TOTAL(TOTAL(COUNT(*))), rt0.c3))) ISNULL);
SELECT rt0.c0 FROM v0, rt0;
SELECT ALL rt0.c0 FROM v0, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c0 END)) AND ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)))))) UNION ALL SELECT rt0.c0 FROM v0, rt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c0 END)) AND ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)))))))) UNION ALL SELECT rt0.c0 FROM v0, rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c0 END)) AND ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)))))) ISNULL));
SELECT rt0.c0 FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((NOT (0.42824535693814636)) IN ())) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((NOT (0.42824535693814636)) IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((NOT (0.42824535693814636)) IN ())) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (TIME((+ (v0.c0)), ((v0.c0)|(v0.c0)), ((((v0.c0)OR(v0.c0)))OR(v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (TIME((+ (v0.c0)), ((v0.c0)|(v0.c0)), ((((v0.c0)OR(v0.c0)))OR(v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((TIME((+ (v0.c0)), ((v0.c0)|(v0.c0)), ((((v0.c0)OR(v0.c0)))OR(v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON (- ((NOT (rt0.c3)))) GROUP BY rt0.c3, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON (- ((NOT (rt0.c3)))) GROUP BY rt0.c3, rt0.c1, rt0.c4 HAVING ((GROUP_CONCAT(GROUP_CONCAT(TOTAL(AVG(rt0.c3))))) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (CASE rt0.c1  WHEN GROUP_CONCAT(rt0.c3) THEN AVG(COUNT(rt0.c4)) ELSE rt0.c0 END)) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON (- ((NOT (rt0.c3)))) GROUP BY rt0.c3, rt0.c1, rt0.c4 HAVING (NOT (((GROUP_CONCAT(GROUP_CONCAT(TOTAL(AVG(rt0.c3))))) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (CASE rt0.c1  WHEN GROUP_CONCAT(rt0.c3) THEN AVG(COUNT(rt0.c4)) ELSE rt0.c0 END)))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON (- ((NOT (rt0.c3)))) GROUP BY rt0.c3, rt0.c1, rt0.c4 HAVING ((((GROUP_CONCAT(GROUP_CONCAT(TOTAL(AVG(rt0.c3))))) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (CASE rt0.c1  WHEN GROUP_CONCAT(rt0.c3) THEN AVG(COUNT(rt0.c4)) ELSE rt0.c0 END))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((((v0.c0)OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((v0.c0)OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((v0.c0)OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CASE ((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(x'6d85b91f'))  WHEN ((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN NULLIF(x'9d80', v0.c0) WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE 'k4.u10' END THEN 1023765637 WHEN v0.c0 COLLATE BINARY THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END END) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CASE ((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(x'6d85b91f'))  WHEN ((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN NULLIF(x'9d80', v0.c0) WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE 'k4.u10' END THEN 1023765637 WHEN v0.c0 COLLATE BINARY THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END END))) UNION SELECT DISTINCT * FROM v0 WHERE (((CASE ((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(x'6d85b91f'))  WHEN ((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN NULLIF(x'9d80', v0.c0) WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE 'k4.u10' END THEN 1023765637 WHEN v0.c0 COLLATE BINARY THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END END) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c4, rt0.c3, v0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, v0.c0;
SELECT ALL rt0.c4, rt0.c3, v0.c0 FROM v0, rt0 WHERE (NULL) GROUP BY rt0.c4, rt0.c3, v0.c0 UNION SELECT ALL rt0.c4, rt0.c3, v0.c0 FROM v0, rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c4, rt0.c3, v0.c0 UNION SELECT rt0.c4, rt0.c3, v0.c0 FROM v0 NOT INDEXED, rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c4, rt0.c3, v0.c0;
SELECT ALL rt0.c4, rt0.c3, v0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(v0.c0) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(v0.c0)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(v0.c0) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(v0.c0)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL SUM(((((rt0.c0)&(rt0.c1)))<=(rt0.c1 COLLATE NOCASE))) FROM rt0;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((('(t' IN ()) IN ())) UNION ALL SELECT * FROM v0 WHERE ((NOT ((('(t' IN ()) IN ())))) UNION ALL SELECT ALL * FROM v0 WHERE ((((('(t' IN ()) IN ())) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c3, v0.c0, rt0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c3, v0.c0, rt0.c0 FROM rt0, v0 NOT INDEXED WHERE (((((((('0.4562202031028094')OR(v0.c0)))AND(rt0.c1)), ((rt0.c3) BETWEEN (NULL) AND (v0.c0)), (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))))<>(((rt0.c3 IN ()), (+ (v0.c0)), rt0.c2)))) UNION SELECT DISTINCT rt0.c3, v0.c0, rt0.c0 FROM rt0, v0 WHERE ((NOT (((((((('0.4562202031028094')OR(v0.c0)))AND(rt0.c1)), ((rt0.c3) BETWEEN (NULL) AND (v0.c0)), (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))))<>(((rt0.c3 IN ()), (+ (v0.c0)), rt0.c2)))))) UNION SELECT DISTINCT rt0.c3, v0.c0, rt0.c0 FROM rt0, v0 WHERE (((((((((('0.4562202031028094')OR(v0.c0)))AND(rt0.c1)), ((rt0.c3) BETWEEN (NULL) AND (v0.c0)), (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))))<>(((rt0.c3 IN ()), (+ (v0.c0)), rt0.c2)))) ISNULL));
SELECT DISTINCT rt0.c3, v0.c0, rt0.c0 FROM rt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0)+(v0.c0))) NOT NULL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)+(v0.c0))) NOT NULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)+(v0.c0))) NOT NULL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4 HAVING COUNT((MIN(rt0.c4) IN ())) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4 HAVING (NOT (COUNT((MIN(rt0.c4) IN ())))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4 HAVING ((COUNT((MIN(rt0.c4) IN ()))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4 HAVING COUNT((MIN(rt0.c4) IN ())) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4 HAVING (NOT (COUNT((MIN(rt0.c4) IN ())))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4 HAVING ((COUNT((MIN(rt0.c4) IN ()))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((x'' COLLATE RTRIM) NOT NULL)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((x'' COLLATE RTRIM) NOT NULL)))) UNION ALL SELECT ALL * FROM v0 WHERE (((((x'' COLLATE RTRIM) NOT NULL)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0 FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0, rt0 WHERE (((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c4)))IS(((((rt0.c3)OR(v0.c0)))OR(0.5491900955557565))))) UNION SELECT DISTINCT v0.c0 FROM v0, rt0 WHERE ((NOT (((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c4)))IS(((((rt0.c3)OR(v0.c0)))OR(0.5491900955557565))))))) UNION SELECT DISTINCT v0.c0 FROM v0, rt0 WHERE (((((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c4)))IS(((((rt0.c3)OR(v0.c0)))OR(0.5491900955557565))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((+ ((- (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((+ ((- (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((+ ((- (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(((v0.c0)!=(v0.c0)) AS INTEGER) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(((v0.c0)!=(v0.c0)) AS INTEGER))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(((v0.c0)!=(v0.c0)) AS INTEGER)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(((v0.c0)!=(v0.c0)) AS INTEGER) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(((v0.c0)!=(v0.c0)) AS INTEGER))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(((v0.c0)!=(v0.c0)) AS INTEGER)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c4) ISNULL) THEN rt0.c2 COLLATE NOCASE WHEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c4 END THEN rt0.c4 WHEN CAST(rt0.c3 AS BLOB) THEN ((rt0.c1)-(rt0.c4)) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c4) ISNULL) THEN rt0.c2 COLLATE NOCASE WHEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c4 END THEN rt0.c4 WHEN CAST(rt0.c3 AS BLOB) THEN ((rt0.c1)-(rt0.c4)) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN ((rt0.c4) ISNULL) THEN rt0.c2 COLLATE NOCASE WHEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c4 END THEN rt0.c4 WHEN CAST(rt0.c3 AS BLOB) THEN ((rt0.c1)-(rt0.c4)) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (MIN(NULL, CASE WHEN rt0.c1 THEN rt0.c0 END)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (MIN(NULL, CASE WHEN rt0.c1 THEN rt0.c0 END)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((MIN(NULL, CASE WHEN rt0.c1 THEN rt0.c0 END)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM rt0 WHERE (NULL) GROUP BY rt0.c2, rt0.c3 UNION SELECT rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c2, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c3 FROM rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING (((AVG(SUM(AVG(rt0.c1))), SUM(COUNT(*)), rt0.c4)) BETWEEN ((((rt0.c3) BETWEEN (AVG(rt0.c1)) AND (v0.c0)), UNLIKELY(COUNT(*)), (rt0.c1 IN ()))) AND (((rt0.c0 IN ()), COUNT(*), COUNT(*)))) UNION ALL SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING (NOT ((((AVG(SUM(AVG(rt0.c1))), SUM(COUNT(*)), rt0.c4)) BETWEEN ((((rt0.c3) BETWEEN (AVG(rt0.c1)) AND (v0.c0)), UNLIKELY(COUNT(*)), (rt0.c1 IN ()))) AND (((rt0.c0 IN ()), COUNT(*), COUNT(*)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING (((((AVG(SUM(AVG(rt0.c1))), SUM(COUNT(*)), rt0.c4)) BETWEEN ((((rt0.c3) BETWEEN (AVG(rt0.c1)) AND (v0.c0)), UNLIKELY(COUNT(*)), (rt0.c1 IN ()))) AND (((rt0.c0 IN ()), COUNT(*), COUNT(*))))) ISNULL);
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (((((rt0.c0)AND(v0.c0)))OR(v0.c0))) AND (LOWER(rt0.c4)))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (((((rt0.c0)AND(v0.c0)))OR(v0.c0))) AND (LOWER(rt0.c4)))))) UNION ALL SELECT * FROM rt0, v0 WHERE (((((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (((((rt0.c0)AND(v0.c0)))OR(v0.c0))) AND (LOWER(rt0.c4)))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c4 FROM rt0, v0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0, v0 WHERE (rt0.c4 COLLATE RTRIM COLLATE BINARY COLLATE BINARY) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM rt0, v0 WHERE ((NOT (rt0.c4 COLLATE RTRIM COLLATE BINARY COLLATE BINARY))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM rt0, v0 WHERE (((rt0.c4 COLLATE RTRIM COLLATE BINARY COLLATE BINARY) ISNULL)) GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0, v0 GROUP BY rt0.c4;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c0;
SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE (((((rt0.c4) IS TRUE))||((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c4) IS TRUE))||((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE (((((((rt0.c4) IS TRUE))||((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ISNULL));
SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c4, v0.c0, rt0.c1 FROM v0, rt0;
SELECT DISTINCT rt0.c4, v0.c0, rt0.c1 FROM v0, rt0 WHERE (((v0.c0 IN ()) IN ())) UNION SELECT DISTINCT rt0.c4, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (((v0.c0 IN ()) IN ())))) UNION SELECT DISTINCT rt0.c4, v0.c0, rt0.c1 FROM v0, rt0 WHERE (((((v0.c0 IN ()) IN ())) ISNULL));
SELECT DISTINCT rt0.c4, v0.c0, rt0.c1 FROM v0, rt0;
SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3;
SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0 WHERE (CAST(((((rt0.c4)AND(-1797470899)))AND(rt0.c1)) AS REAL)) GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3 UNION SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT (CAST(((((rt0.c4)AND(-1797470899)))AND(rt0.c1)) AS REAL)))) GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0 WHERE (((CAST(((((rt0.c4)AND(-1797470899)))AND(rt0.c1)) AS REAL)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3;
SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3;
SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(TYPEOF(MAX(rt0.c0))) UNION ALL SELECT v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(TYPEOF(MAX(rt0.c0))))) UNION ALL SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(TYPEOF(MAX(rt0.c0)))) ISNULL);
SELECT ALL v0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0, v0;
SELECT ALL v0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0, v0 WHERE (CASE ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))AND(v0.c0)))OR(rt0.c4))  WHEN '' THEN rt0.c1 COLLATE NOCASE ELSE (x'649e' IN (rt0.c0)) END) UNION ALL SELECT v0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0, v0 WHERE ((NOT (CASE ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))AND(v0.c0)))OR(rt0.c4))  WHEN '' THEN rt0.c1 COLLATE NOCASE ELSE (x'649e' IN (rt0.c0)) END))) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0, v0 WHERE (((CASE ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))AND(v0.c0)))OR(rt0.c4))  WHEN '' THEN rt0.c1 COLLATE NOCASE ELSE (x'649e' IN (rt0.c0)) END) ISNULL));
SELECT ALL v0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0, v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((rt0.c0) NOT BETWEEN (((rt0.c4)-(rt0.c4))) AND (((((((((((((v0.c0)AND(rt0.c4)))OR('b(#\n2')))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (((rt0.c4)-(rt0.c4))) AND (((((((((((((v0.c0)AND(rt0.c4)))OR('b(#\n2')))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2))))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((rt0.c0) NOT BETWEEN (((rt0.c4)-(rt0.c4))) AND (((((((((((((v0.c0)AND(rt0.c4)))OR('b(#\n2')))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c3, rt0.c4, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c4, rt0.c2, rt0.c1 FROM rt0 WHERE (((+ (rt0.c2)) IN ())) GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c1 UNION SELECT rt0.c3, rt0.c4, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((+ (rt0.c2)) IN ())))) GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c1 UNION SELECT rt0.c3, rt0.c4, rt0.c2, rt0.c1 FROM rt0 WHERE (((((+ (rt0.c2)) IN ())) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c4, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c0;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c0 HAVING ((AVG(v0.c0))/(COUNT(*))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c0 HAVING (NOT (((AVG(v0.c0))/(COUNT(*))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c0 HAVING ((((AVG(v0.c0))/(COUNT(*)))) ISNULL);
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c0;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c0 HAVING ((AVG(v0.c0))/(COUNT(*))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c0 HAVING (NOT (((AVG(v0.c0))/(COUNT(*))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c0 HAVING ((((AVG(v0.c0))/(COUNT(*)))) ISNULL);
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c0;
SELECT ALL rt0.c1 FROM v0, rt0;
SELECT rt0.c1 FROM v0, rt0 WHERE (((rt0.c1 COLLATE RTRIM) NOTNULL)) UNION ALL SELECT ALL rt0.c1 FROM v0, rt0 WHERE ((NOT (((rt0.c1 COLLATE RTRIM) NOTNULL)))) UNION ALL SELECT ALL rt0.c1 FROM v0, rt0 WHERE (((((rt0.c1 COLLATE RTRIM) NOTNULL)) ISNULL));
SELECT ALL rt0.c1 FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0 COLLATE NOCASE)/(v0.c0 COLLATE BINARY))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE NOCASE)/(v0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE NOCASE)/(v0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c3, rt0.c2, v0.c0, rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c4, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, v0.c0, rt0.c4, rt0.c0 FROM rt0, v0 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4)) AS BLOB)) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c4, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c2, v0.c0, rt0.c4, rt0.c0 FROM rt0, v0 WHERE ((NOT (CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4)) AS BLOB)))) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c4, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c2, v0.c0, rt0.c4, rt0.c0 FROM rt0, v0 WHERE (((CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4)) AS BLOB)) ISNULL)) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c4, rt0.c0;
SELECT rt0.c3, rt0.c2, v0.c0, rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c4, rt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE BINARY) IS TRUE)) UNION ALL SELECT * FROM v0 WHERE ((NOT (((v0.c0 COLLATE BINARY) IS TRUE)))) UNION ALL SELECT ALL * FROM v0 WHERE (((((v0.c0 COLLATE BINARY) IS TRUE)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c1 FROM rt0 WHERE (CAST(((rt0.c3)>>(rt0.c3)) AS NUMERIC)) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT (CAST(((rt0.c3)>>(rt0.c3)) AS NUMERIC)))) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c1 FROM rt0 WHERE (((CAST(((rt0.c3)>>(rt0.c3)) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c1 FROM rt0;
