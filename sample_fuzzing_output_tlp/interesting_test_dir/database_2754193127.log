-- Time: 2024/06/09 03:02:38
-- Database: database27
-- Database version: 3.40.0
-- seed value: 2754193127
PRAGMA cache_size = 50000; -- 10ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4); -- 1ms;
UPDATE OR IGNORE rt0 SET c0=x'' WHERE CASE WHEN (rt0.c3 IN ()) THEN (((rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c0))>((rt0.c0, rt0.c1, rt0.c1, rt0.c4, rt0.c2))) WHEN ((rt0.c0) IS FALSE) THEN ((((rt0.c3)AND(rt0.c1)))AND(rt0.c1)) WHEN rt0.c4 COLLATE NOCASE THEN (- (NULL)) END; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR FAIL rt0 SET c1=0.5873001221311548; -- 0ms;
PRAGMA foreign_keys; -- 0ms;
PRAGMA cache_spill = true; -- 0ms;
INSERT OR IGNORE INTO rt0(c4) VALUES ('-569815830'), (0.45515464726530197), (0.12648989907156594); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR ABORT rt0 SET (c3)=(-5.6981583E8); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c4, c3) VALUES ('-569815830', -5.6981583E8, -5.6981583E8); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c3, c1, c0, c2) VALUES (NULL, 0.2810809091849581, -5.6981583E8, 0.19140621941809766); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c3) VALUES ('3D'); -- 3ms;
INSERT OR IGNORE INTO rt0 VALUES ('-569815830', x'4e11', 92308915, '-569815830', 'x3KS1B*bZ'), (0xffffffffde094cea, 0.9247297758934221, CASE WHEN (x'' IN ()) THEN ((1834526888)/(0.4125073118704311)) ELSE CASE WHEN '+*5]' THEN 0.2965423883380669 END END, 0.31660458334400265, 1303590023), ('+*5]', 0.24129149175235431, '0.2810809091849581', x'c279', x''), (0.2965423883380669, x'', '1303590023', ' llk	', 0.3274495740491329), (0.6761821774743335, 0.7689642436467371, x'', 720743803, x'4822'); -- 6ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (x''); -- 0ms;
PRAGMA temp.wal_autocheckpoint; -- 1ms;
UPDATE rt0 SET c4=x''; -- 0ms;
UPDATE rt0 SET c0='与+?nz'; -- 0ms;
UPDATE rt0 SET (c4)=(x'') WHERE CASE ((rt0.c0)IS NOT(rt0.c0))  WHEN (((rt0.c2, x'', rt0.c4)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0))) THEN ((rt0.c4) NOTNULL) END; -- 0ms;
COMMIT; -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c4, c1, c0, c3) VALUES ('1164269565', 92308915, '', '1834526888', 'P[/+'), (1.834526888E9, '0.31660458334400265', '-874134104', 0.24638641828757835, NULL), (0.5043105618917828, '4on!', 0.4125073118704311, x'8f0f0e83', '-2103095794'); -- 0ms;
END; -- 0ms;
COMMIT; -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(NULL); -- 0ms;
PRAGMA default_cache_size = -33802696; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('0.5043105618917828', '1>Z', '1834526888', NULL, x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c1, c0) VALUES ('0.6761821774743335', x'', 0.9232515348124182); -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(-1031659349) WHERE '1834526888'; -- 1ms;
INSERT OR FAIL INTO rt0(c1) VALUES ('4/h'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c3, c2, c0) VALUES (1680131632, x'', '151057458'); -- 0ms;
INSERT OR FAIL INTO rt0(c1) VALUES ('꼀*QO?he烙3'), (NULL), ('0.2810809091849581'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 1ms;
UPDATE OR IGNORE rt0 SET (c2)=(NULL) WHERE CAST(((rt0.c4) NOT NULL) AS NUMERIC); -- 0ms;
PRAGMA secure_delete = true; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
REINDEX  rt0; -- 1ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (''); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2, c0, c3) VALUES (NULL, -438002718, 0.7301883319898134, '92946826'), (NULL, 0.03942591009167662, NULL, 473009239), (-4594672, x'4eb2', 0.24638641828757835, NULL); -- 0ms;
INSERT OR ABORT INTO rt0(c3, c2, c0) VALUES (NULL, '0.7301883319898134', '0.24638641828757835'); -- 0ms;
INSERT OR REPLACE INTO rt0(c3, c4, c1) VALUES (x'', 0.4016216052795043, NULL), (x'', 0.22766461561811424, 'd쪇ou'), (x'', 0.9793635775845351, 0.24638641828757835); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA cache_spill = 5861842880904393271; -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c2, c0, c3) VALUES (x'a50b', '1303590023', 0.24802867245790128, x''), (-1.945669415E9, x'e4b9', '-0.0', -1031659349), (x'', '-780636559', x'77dd4c16', -1836951930); -- 0ms;
COMMIT; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c3, c4) VALUES ('473009239', 0.31526094716202946, ')껅'), (NULL, 0.3839963872797635, '1281146881'), (NULL, NULL, x'3996'); -- 1ms;
INSERT OR FAIL INTO rt0(c0, c2, c1, c3) VALUES (NULL, NULL, 0.16399906515619034, 0.23418830368480315); -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO rt0(c3) VALUES (x''); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=('0.5043105618917828') WHERE ((rt0.c1)GLOB(rt0.c4)) COLLATE BINARY; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA temp.recursive_triggers; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA stats; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c1, c4) VALUES ('-438002718', 0.9900480853805288, '1395838651'); -- 0ms;
PRAGMA main.journal_mode = WAL; -- 0ms;
PRAGMA temp.recursive_triggers; -- 0ms;
UPDATE rt0 SET c4='1667757384' WHERE ((((rt0.c1)GLOB(rt0.c4))) NOT BETWEEN (rt0.c3) AND (LAST_INSERT_ROWID())); -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 REAL CHECK ( (+ (CASE WHEN c0 THEN c0 ELSE c0 END))) UNIQUE NOT NULL ON CONFLICT IGNORE ); -- 0ms;
INSERT OR ABORT INTO rt0(c4, c2) VALUES (0.15176008078780068, x''); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i93 ON t0(((((CASE c0  WHEN c0 THEN c0 ELSE c0 END)OR(((c0)>>(c0)))))AND(((c0)<=(c0)))) ASC); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL WHERE (~ (json_array(t0.c0, t0.c0))); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (0x17b7a6a5); -- 0ms;
PRAGMA main.locking_mode = EXCLUSIVE; -- 0ms;
REINDEX  rt0; -- 3ms;
INSERT OR IGNORE INTO rt0(c1) VALUES ('-756444820'); -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, '0.7301883319898134', 0x7cc91ba5, '1358999296', 0xffffffffcbe5c5a8); -- 0ms;
COMMIT; -- 0ms;
INSERT OR FAIL INTO rt0(c3) VALUES (0.9232515348124182); -- 0ms;
CREATE TEMP TRIGGER IF NOT EXISTS tr0 AFTER INSERT ON t0 BEGIN UPDATE rt0 SET (c2)=(x'') WHERE CASE LENGTH(rt0.c2)  WHEN rt0.c3 COLLATE RTRIM THEN ((((rt0.c4)AND(rt0.c2)))AND(rt0.c3)) WHEN ((((rt0.c0)AND(rt0.c4)))OR(NULL)) THEN ((rt0.c4) NOT NULL) WHEN rt0.c3 THEN (rt0.c2 IN ()) END;END; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
ANALYZE sqlite_master; -- 1ms;
INSERT OR IGNORE INTO rt0(c3, c4) VALUES ('', x'd760'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=(0.9900480853805288, 733496556); -- 0ms;
UPDATE t0 SET (c0)=(NULL) WHERE t0.c0; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
PRAGMA main.optimize; -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c3) VALUES ('-874134104', x''); -- 1ms;
INSERT OR IGNORE INTO t1 VALUES ('-533223141'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c2, c3) VALUES ('-569815830', x'b355', ''); -- 0ms;
INSERT OR FAIL INTO rt0(c3, c0, c2, c4, c1) VALUES ('GXDrQ', '', 'Mﭫ_', NULL, 'P[/+'); -- 0ms;
INSERT OR REPLACE INTO rt0(c4, c3) VALUES (1.281146881E9, ' llk	'), ('', 0.6797020119187003), (0.050589976394779246, -0.0); -- 0ms;
INSERT OR FAIL INTO t1(c0) VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO rt0(c1) VALUES ('-569815830'); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (0.942392034973288), (1672314901), ('Yx'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((970115380, ((rt0.c1)IS NOT(rt0.c0)), rt0.c4))<(((rt0.c1 IN ()), (~ (rt0.c1)), (~ (rt0.c1)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((970115380, ((rt0.c1)IS NOT(rt0.c0)), rt0.c4))<(((rt0.c1 IN ()), (~ (rt0.c1)), (~ (rt0.c1)))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((970115380, ((rt0.c1)IS NOT(rt0.c0)), rt0.c4))<(((rt0.c1 IN ()), (~ (rt0.c1)), (~ (rt0.c1)))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0, t1;
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0, t1 WHERE ((- (((((rt0.c4)AND(rt0.c1)))AND(rt0.c1))))) UNION SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0, t1 WHERE ((NOT ((- (((((rt0.c4)AND(rt0.c1)))AND(rt0.c1))))))) UNION SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0, t1 WHERE ((((- (((((rt0.c4)AND(rt0.c1)))AND(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0, t1;
SELECT ALL rt0.c4, t1.c0, rt0.c2, rt0.c3, rt0.c1 FROM t1, rt0 GROUP BY rt0.c4, t1.c0, rt0.c2, rt0.c3, rt0.c1;
SELECT ALL rt0.c4, t1.c0, rt0.c2, rt0.c3, rt0.c1 FROM t1, rt0 WHERE (('' IN ((('Pe')<=(t1.c0)), HEX(t1.c0)))) GROUP BY rt0.c4, t1.c0, rt0.c2, rt0.c3, rt0.c1 UNION SELECT rt0.c4, t1.c0, rt0.c2, rt0.c3, rt0.c1 FROM t1, rt0 WHERE ((NOT (('' IN ((('Pe')<=(t1.c0)), HEX(t1.c0)))))) GROUP BY rt0.c4, t1.c0, rt0.c2, rt0.c3, rt0.c1 UNION SELECT rt0.c4, t1.c0, rt0.c2, rt0.c3, rt0.c1 FROM t1, rt0 WHERE (((('' IN ((('Pe')<=(t1.c0)), HEX(t1.c0)))) ISNULL)) GROUP BY rt0.c4, t1.c0, rt0.c2, rt0.c3, rt0.c1;
SELECT ALL rt0.c4, t1.c0, rt0.c2, rt0.c3, rt0.c1 FROM t1, rt0 GROUP BY rt0.c4, t1.c0, rt0.c2, rt0.c3, rt0.c1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(AVG(0.29187357877679165))) IS FALSE) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((COUNT(AVG(0.29187357877679165))) IS FALSE))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((COUNT(AVG(0.29187357877679165))) IS FALSE)) ISNULL);
SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)OR((rt0.c4 IN ()))))AND(((rt0.c3) IS FALSE)))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)OR((rt0.c4 IN ()))))AND(((rt0.c3) IS FALSE)))))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)OR((rt0.c4 IN ()))))AND(((rt0.c3) IS FALSE)))) ISNULL));
SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c4, t1.c0, rt0.c1, rt0.c0, rt0.c3 FROM t1, rt0;
SELECT DISTINCT rt0.c2, rt0.c4, t1.c0, rt0.c1, rt0.c0, rt0.c3 FROM t1, rt0 WHERE ((((rt0.c4))!=(((((rt0.c0))==((t1.c0))))))) UNION SELECT DISTINCT rt0.c2, rt0.c4, t1.c0, rt0.c1, rt0.c0, rt0.c3 FROM t1, rt0 WHERE ((NOT ((((rt0.c4))!=(((((rt0.c0))==((t1.c0))))))))) UNION SELECT DISTINCT rt0.c2, rt0.c4, t1.c0, rt0.c1, rt0.c0, rt0.c3 FROM t1, rt0 WHERE ((((((rt0.c4))<>(((((rt0.c0))=((t1.c0))))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c4, t1.c0, rt0.c1, rt0.c0, rt0.c3 FROM t1, rt0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE ((((t1.c0)) BETWEEN ((CASE WHEN t1.c0 THEN t1.c0 END)) AND ((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((((t1.c0)) BETWEEN ((CASE WHEN t1.c0 THEN t1.c0 END)) AND ((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((((((t1.c0)) BETWEEN ((CASE WHEN t1.c0 THEN t1.c0 END)) AND ((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING CAST(((((((((MIN(rt0.c3))AND(MIN(rt0.c3))))OR(AVG('0.16399906515619034'))))AND(rt0.c4)))OR(TOTAL(rt0.c1))) AS REAL) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING (NOT (CAST(((((((((MIN(rt0.c3))AND(MIN(rt0.c3))))OR(AVG('0.16399906515619034'))))AND(rt0.c4)))OR(TOTAL(rt0.c1))) AS REAL))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING ((CAST(((((((((MIN(rt0.c3))AND(MIN(rt0.c3))))OR(AVG('0.16399906515619034'))))AND(rt0.c4)))OR(TOTAL(rt0.c1))) AS REAL)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING CAST(((((((((MIN(rt0.c3))AND(MIN(rt0.c3))))OR(AVG('0.16399906515619034'))))AND(rt0.c4)))OR(TOTAL(rt0.c1))) AS REAL) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING (NOT (CAST(((((((((MIN(rt0.c3))AND(MIN(rt0.c3))))OR(AVG('0.16399906515619034'))))AND(rt0.c4)))OR(TOTAL(rt0.c1))) AS REAL))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING ((CAST(((((((((MIN(rt0.c3))AND(MIN(rt0.c3))))OR(AVG('0.16399906515619034'))))AND(rt0.c4)))OR(TOTAL(rt0.c1))) AS REAL)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c4, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c4, rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((CHAR(rt0.c0, rt0.c4, rt0.c4))) AND ((rt0.c2)))) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((CHAR(rt0.c0, rt0.c4, rt0.c4))) AND ((rt0.c2)))))) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((CHAR(rt0.c0, rt0.c4, rt0.c4))) AND ((rt0.c2)))) ISNULL));
SELECT ALL rt0.c4, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, t1.c0 FROM t1, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, t1.c0 FROM t1, rt0 WHERE (rt0.c4) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, t1.c0 FROM t1, rt0 WHERE ((NOT (rt0.c4))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, t1.c0 FROM t1, rt0 WHERE (((rt0.c4) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, t1.c0 FROM t1, rt0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ((((t1.c0 IN (t1.c0)))AND(((t1.c0)*(t1.c0))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((((t1.c0 IN (t1.c0)))AND(((t1.c0)*(t1.c0))))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((((((t1.c0 IN (t1.c0)))AND(((t1.c0)*(t1.c0))))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING SUM(TOTAL(t1.c0)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (SUM(TOTAL(t1.c0)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((SUM(TOTAL(t1.c0))) ISNULL);
SELECT rt0.c2, rt0.c3 FROM t1, rt0;
SELECT rt0.c2, rt0.c3 FROM t1, rt0 WHERE ((CAST(rt0.c1 AS BLOB) IN ())) UNION ALL SELECT rt0.c2, rt0.c3 FROM t1, rt0 WHERE ((NOT ((CAST(rt0.c1 AS BLOB) IN ())))) UNION ALL SELECT rt0.c2, rt0.c3 FROM t1, rt0 WHERE ((((CAST(rt0.c1 AS BLOB) IN ())) ISNULL));
SELECT rt0.c2, rt0.c3 FROM t1, rt0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE ((((((1164269565))<=((t1.c0)))) BETWEEN (((((t1.c0)AND(0.7192077573712031)))AND(t1.c0))) AND (t1.c0))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT ((((((1164269565))<=((t1.c0)))) BETWEEN (((((t1.c0)AND(0.7192077573712031)))AND(t1.c0))) AND (t1.c0))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((((((((1164269565))<=((t1.c0)))) BETWEEN (((((t1.c0)AND(0.7192077573712031)))AND(t1.c0))) AND (t1.c0))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL rt0.c0, rt0.c3, t1.c0, rt0.c1 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3, t1.c0, rt0.c1;
SELECT rt0.c0, rt0.c3, t1.c0, rt0.c1 FROM t1, rt0 WHERE (NULL) GROUP BY rt0.c0, rt0.c3, t1.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c3, t1.c0, rt0.c1 FROM t1, rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c0, rt0.c3, t1.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c3, t1.c0, rt0.c1 FROM t1, rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c0, rt0.c3, t1.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c3, t1.c0, rt0.c1 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3, t1.c0, rt0.c1;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING COUNT(*) UNION ALL SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING COUNT(*) UNION ALL SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT rt0.c3 FROM rt0;
SELECT ALL rt0.c3 FROM rt0 WHERE (NULLIF(((rt0.c4) BETWEEN (rt0.c2) AND (-9.50306117E8)), (+ (0.6409467408636764)))) UNION ALL SELECT ALL rt0.c3 FROM rt0 WHERE ((NOT (NULLIF(((rt0.c4) BETWEEN (rt0.c2) AND (-9.50306117E8)), (+ (0.6409467408636764)))))) UNION ALL SELECT rt0.c3 FROM rt0 WHERE (((NULLIF(((rt0.c4) BETWEEN (rt0.c2) AND (-9.50306117E8)), (+ (0.6409467408636764)))) ISNULL));
SELECT rt0.c3 FROM rt0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (2085287005) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (2085287005))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((2085287005) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1, t1.c0 FROM rt0, t1 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1, t1.c0;
SELECT ALL rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1, t1.c0 FROM rt0, t1 WHERE ((((+ (rt0.c0))) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1, t1.c0 UNION SELECT ALL rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1, t1.c0 FROM rt0, t1 WHERE ((NOT ((((+ (rt0.c0))) ISNULL)))) GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1, t1.c0 UNION SELECT ALL rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1, t1.c0 FROM rt0, t1 WHERE ((((((+ (rt0.c0))) ISNULL)) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1, t1.c0;
SELECT ALL rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1, t1.c0 FROM rt0, t1 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1, t1.c0;
SELECT rt0.c1, rt0.c4 FROM rt0, t1 GROUP BY rt0.c1, rt0.c4;
SELECT ALL rt0.c1, rt0.c4 FROM rt0, t1 GROUP BY rt0.c1, rt0.c4 HAVING COUNT(MAX(rt0.c4)) UNION ALL SELECT rt0.c1, rt0.c4 FROM rt0, t1 GROUP BY rt0.c1, rt0.c4 HAVING (NOT (COUNT(MAX(rt0.c4)))) UNION ALL SELECT rt0.c1, rt0.c4 FROM rt0, t1 GROUP BY rt0.c1, rt0.c4 HAVING ((COUNT(MAX(rt0.c4))) ISNULL);
SELECT ALL TOTAL((((t1.c0))>=((CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)))) FROM t1 ORDER BY (((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0)) BETWEEN ((ROUND(t1.c0, t1.c0), t1.c0, x'', (((t1.c0))<((t1.c0))), t1.c0 COLLATE BINARY)) AND ((ABS(DISTINCT t1.c0), LIKE(t1.c0, t1.c0), (t1.c0 IN ()), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), NULL)))  NULLS LAST;
SELECT ALL t1.c0, rt0.c3 FROM t1, rt0;
SELECT ALL t1.c0, rt0.c3 FROM t1 NOT INDEXED, rt0 WHERE (((((rt0.c2)) BETWEEN (('	v')) AND ((rt0.c1))) IN ())) UNION ALL SELECT t1.c0, rt0.c3 FROM t1, rt0 WHERE ((NOT (((((rt0.c2)) BETWEEN (('	v')) AND ((rt0.c1))) IN ())))) UNION ALL SELECT ALL t1.c0, rt0.c3 FROM t1, rt0 WHERE (((((((rt0.c2)) BETWEEN (('	v')) AND ((rt0.c1))) IN ())) ISNULL));
SELECT ALL t1.c0, rt0.c3 FROM t1, rt0;
SELECT DISTINCT * FROM rt0 CROSS JOIN t1 ON (LIKELY(rt0.c2) IN (((rt0.c2)<(rt0.c0))));
SELECT DISTINCT * FROM rt0 CROSS JOIN t1 ON (LIKELY(rt0.c2) IN (((rt0.c2)<(rt0.c0)))) WHERE ((((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))) BETWEEN ((((rt0.c1, rt0.c0, t1.c0)) NOT BETWEEN ((NULL, rt0.c0, t1.c0)) AND ((rt0.c3, rt0.c1, rt0.c2)))) AND (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN t1 ON (LIKELY(rt0.c2) IN (((rt0.c2)<(rt0.c0)))) WHERE ((NOT ((((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))) BETWEEN ((((rt0.c1, rt0.c0, t1.c0)) NOT BETWEEN ((NULL, rt0.c0, t1.c0)) AND ((rt0.c3, rt0.c1, rt0.c2)))) AND (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN t1 ON (LIKELY(rt0.c2) IN (((rt0.c2)<(rt0.c0)))) WHERE ((((((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))) BETWEEN ((((rt0.c1, rt0.c0, t1.c0)) NOT BETWEEN ((NULL, rt0.c0, t1.c0)) AND ((rt0.c3, rt0.c1, rt0.c2)))) AND (rt0.c2))) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN t1 ON (LIKELY(rt0.c2) IN (((rt0.c2)<(rt0.c0))));
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (((((((t1.c0)OR(t1.c0)))OR(t1.c0))) IS TRUE)) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((((((t1.c0)OR(t1.c0)))OR(t1.c0))) IS TRUE)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((((((((t1.c0)OR(t1.c0)))OR(t1.c0))) IS TRUE)) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c3;
SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c3 HAVING SUM(GROUP_CONCAT(SUM(rt0.c3))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c3 HAVING (NOT (SUM(GROUP_CONCAT(SUM(rt0.c3))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c3 HAVING ((SUM(GROUP_CONCAT(SUM(rt0.c3)))) ISNULL);
SELECT ALL * FROM t1, rt0;
SELECT ALL * FROM t1, rt0 WHERE ((((((rt0.c0) NOT NULL)))<=(((rt0.c4 IN ()))))) UNION ALL SELECT ALL * FROM t1, rt0 WHERE ((NOT ((((((rt0.c0) NOT NULL)))<=(((rt0.c4 IN ()))))))) UNION ALL SELECT * FROM t1, rt0 WHERE ((((((((rt0.c0) NOT NULL)))<=(((rt0.c4 IN ()))))) ISNULL));
SELECT ALL * FROM t1, rt0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (t1.c0) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c3 FROM rt0 WHERE (((0.5382615989878311)|(((rt0.c0)IS NOT(rt0.c1))))) GROUP BY rt0.c1, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (((0.5382615989878311)|(((rt0.c0)IS NOT(rt0.c1))))))) GROUP BY rt0.c1, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c3 FROM rt0 WHERE (((((0.5382615989878311)|(((rt0.c0)IS NOT(rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT ALL rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3 HAVING ABS(((((GROUP_CONCAT(COUNT(rt0.c3)))AND(COUNT(rt0.c4))))AND(rt0.c1))) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3 HAVING (NOT (ABS(((((GROUP_CONCAT(COUNT(rt0.c3)))AND(COUNT(rt0.c4))))AND(rt0.c1))))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3 HAVING ((ABS(((((GROUP_CONCAT(COUNT(rt0.c3)))AND(COUNT(rt0.c4))))AND(rt0.c1)))) ISNULL);
SELECT rt0.c4, t1.c0, rt0.c1 FROM t1 CROSS JOIN rt0 ON ((((TYPEOF(rt0.c2))OR((~ (rt0.c4)))))OR((((rt0.c0))<=((t1.c0)))));
SELECT rt0.c4, t1.c0, rt0.c1 FROM t1 CROSS JOIN rt0 ON ((((TYPEOF(rt0.c2))OR((~ (rt0.c4)))))OR((((rt0.c0))<=((t1.c0))))) WHERE (((((rt0.c3) BETWEEN (rt0.c1) AND (t1.c0)))GLOB(((rt0.c1)OR('1053282205'))))) UNION ALL SELECT rt0.c4, t1.c0, rt0.c1 FROM t1 CROSS JOIN rt0 ON ((((TYPEOF(rt0.c2))OR((~ (rt0.c4)))))OR((((rt0.c0))<=((t1.c0))))) WHERE ((NOT (((((rt0.c3) BETWEEN (rt0.c1) AND (t1.c0)))GLOB(((rt0.c1)OR('1053282205'))))))) UNION ALL SELECT ALL rt0.c4, t1.c0, rt0.c1 FROM t1 CROSS JOIN rt0 ON ((((TYPEOF(rt0.c2))OR((~ (rt0.c4)))))OR((((rt0.c0))<=((t1.c0))))) WHERE (((((((rt0.c3) BETWEEN (rt0.c1) AND (t1.c0)))GLOB(((rt0.c1)OR('1053282205'))))) ISNULL));
SELECT rt0.c4, t1.c0, rt0.c1 FROM t1 CROSS JOIN rt0 ON ((((TYPEOF(rt0.c2))OR((~ (rt0.c4)))))OR((((rt0.c0))<=((t1.c0)))));
SELECT DISTINCT t1.c0, rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0, t1;
SELECT DISTINCT t1.c0, rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0, t1 WHERE (((((rt0.c4)<<(rt0.c2)))>(CASE t1.c0  WHEN 0X7239ccbd THEN 0.7866473459733442 WHEN rt0.c0 THEN 1e500 WHEN rt0.c4 THEN rt0.c2 END))) UNION SELECT DISTINCT t1.c0, rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0, t1 WHERE ((NOT (((((rt0.c4)<<(rt0.c2)))>(CASE t1.c0  WHEN 0X7239ccbd THEN 0.7866473459733442 WHEN rt0.c0 THEN 1e500 WHEN rt0.c4 THEN rt0.c2 END))))) UNION SELECT DISTINCT t1.c0, rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0, t1 WHERE (((((((rt0.c4)<<(rt0.c2)))>(CASE t1.c0  WHEN 0x7239ccbd THEN 0.7866473459733442 WHEN rt0.c0 THEN 1e500 WHEN rt0.c4 THEN rt0.c2 END))) ISNULL));
SELECT DISTINCT t1.c0, rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0, t1;
SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c3, t1.c0 FROM t1, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c3, t1.c0;
SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c3, t1.c0 FROM t1, rt0 WHERE ((((t1.c0))<((rt0.c0))) COLLATE NOCASE) GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c3, t1.c0 UNION SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c3, t1.c0 FROM t1, rt0 WHERE ((NOT ((((t1.c0))<((rt0.c0))) COLLATE NOCASE))) GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c3, t1.c0 UNION SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c3, t1.c0 FROM t1, rt0 WHERE ((((((t1.c0))<((rt0.c0))) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c3, t1.c0;
SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c3, t1.c0 FROM t1, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c3, t1.c0;
SELECT ALL t1.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY t1.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2;
SELECT ALL t1.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY t1.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 HAVING MIN(rt0.c3) UNION ALL SELECT ALL t1.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY t1.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 HAVING (NOT (MIN(rt0.c3))) UNION ALL SELECT t1.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY t1.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 HAVING ((MIN(rt0.c3)) ISNULL);
SELECT ALL t1.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY t1.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2;
SELECT ALL t1.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY t1.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 HAVING MIN(rt0.c3) UNION ALL SELECT ALL t1.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY t1.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 HAVING (NOT (MIN(rt0.c3))) UNION ALL SELECT t1.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY t1.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 HAVING ((MIN(rt0.c3)) ISNULL);
SELECT ALL t1.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY t1.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2;
SELECT MAX(((((rt0.c3)==(rt0.c1))) ISNULL)) FROM rt0, t1 ORDER BY json_extract((+ (t1.c0)), (NOT (rt0.c0)), (~ (t1.c0)), ((((((((t1.c0)OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c3)))OR(rt0.c1))) ASC;
SELECT * FROM t1 RIGHT OUTER JOIN rt0 ON (((((t1.c0) BETWEEN (rt0.c0) AND (rt0.c0))))<>((((rt0.c3) IS FALSE))));
SELECT * FROM t1 RIGHT OUTER JOIN rt0 ON (((((t1.c0) BETWEEN (rt0.c0) AND (rt0.c0))))<>((((rt0.c3) IS FALSE)))) WHERE (ABS(rt0.c0 COLLATE NOCASE)) UNION ALL SELECT ALL * FROM t1 RIGHT OUTER JOIN rt0 ON (((((t1.c0) BETWEEN (rt0.c0) AND (rt0.c0))))<>((((rt0.c3) IS FALSE)))) WHERE ((NOT (ABS(rt0.c0 COLLATE NOCASE)))) UNION ALL SELECT ALL * FROM t1 RIGHT OUTER JOIN rt0 ON (((((t1.c0) BETWEEN (rt0.c0) AND (rt0.c0))))<>((((rt0.c3) IS FALSE)))) WHERE (((ABS(rt0.c0 COLLATE NOCASE)) ISNULL));
SELECT * FROM t1 RIGHT OUTER JOIN rt0 ON (((((t1.c0) BETWEEN (rt0.c0) AND (rt0.c0))))<>((((rt0.c3) IS FALSE))));
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE (0.355579977762005) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT (0.355579977762005))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE (((0.355579977762005) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT ALL rt0.c0 FROM t1, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM t1, rt0 WHERE (CAST(((rt0.c3) IS FALSE) AS REAL)) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM t1, rt0 WHERE ((NOT (CAST(((rt0.c3) IS FALSE) AS REAL)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM t1 NOT INDEXED, rt0 WHERE (((CAST(((rt0.c3) IS FALSE) AS REAL)) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM t1, rt0 GROUP BY rt0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((SUM(t1.c0))==(GROUP_CONCAT(MIN(t1.c0)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((SUM(t1.c0))==(GROUP_CONCAT(MIN(t1.c0)))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((SUM(t1.c0))==(GROUP_CONCAT(MIN(t1.c0))))) ISNULL);
SELECT t1.c0, rt0.c2, rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0 INDEXED BY i93, t1;
SELECT DISTINCT t1.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 INNER JOIN t1 ON (((rt0.c3))>((CAST(rt0.c4 AS INTEGER))));
SELECT DISTINCT t1.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 INNER JOIN t1 ON (((rt0.c3))>((CAST(rt0.c4 AS INTEGER)))) WHERE (CASE ((rt0.c4)=(rt0.c0))  WHEN LOWER(rt0.c3) THEN ((((rt0.c2)OR(rt0.c3)))OR(rt0.c4)) END) UNION SELECT DISTINCT t1.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 INNER JOIN t1 ON (((rt0.c3))>((CAST(rt0.c4 AS INTEGER)))) WHERE ((NOT (CASE ((rt0.c4)==(rt0.c0))  WHEN LOWER(rt0.c3) THEN ((((rt0.c2)OR(rt0.c3)))OR(rt0.c4)) END))) UNION SELECT DISTINCT t1.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 INNER JOIN t1 ON (((rt0.c3))>((CAST(rt0.c4 AS INTEGER)))) WHERE (((CASE ((rt0.c4)==(rt0.c0))  WHEN LOWER(rt0.c3) THEN ((((rt0.c2)OR(rt0.c3)))OR(rt0.c4)) END) ISNULL));
SELECT DISTINCT t1.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 INNER JOIN t1 ON (((rt0.c3))>((CAST(rt0.c4 AS INTEGER))));
SELECT ALL rt0.c4, rt0.c2 FROM rt0, t1 GROUP BY rt0.c4, rt0.c2;
SELECT ALL rt0.c4, rt0.c2 FROM rt0, t1 WHERE ((((t1.c0, rt0.c0, rt0.c1))<((rt0.c1, rt0.c1, rt0.c2))) COLLATE NOCASE) GROUP BY rt0.c4, rt0.c2 UNION SELECT rt0.c4, rt0.c2 FROM rt0, t1 WHERE ((NOT ((((t1.c0, rt0.c0, rt0.c1))<((rt0.c1, rt0.c1, rt0.c2))) COLLATE NOCASE))) GROUP BY rt0.c4, rt0.c2 UNION SELECT rt0.c4, rt0.c2 FROM rt0, t1 WHERE ((((((t1.c0, rt0.c0, rt0.c1))<((rt0.c1, rt0.c1, rt0.c2))) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c4, rt0.c2;
SELECT ALL rt0.c4, rt0.c2 FROM rt0, t1 GROUP BY rt0.c4, rt0.c2;
SELECT rt0.c3 FROM rt0 NOT INDEXED GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING CAST(TOTAL(x'99814a81') AS BLOB) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (CAST(TOTAL(x'99814a81') AS BLOB))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((CAST(TOTAL(x'99814a81') AS BLOB)) ISNULL);
SELECT rt0.c3 FROM rt0 NOT INDEXED GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING CAST(TOTAL(x'99814a81') AS BLOB) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (CAST(TOTAL(x'99814a81') AS BLOB))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((CAST(TOTAL(x'99814a81') AS BLOB)) ISNULL);
SELECT rt0.c3 FROM rt0 NOT INDEXED GROUP BY rt0.c3;
SELECT ALL * FROM rt0, t1;
SELECT * FROM rt0, t1 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END AS TEXT)) UNION ALL SELECT * FROM rt0, t1 WHERE ((NOT (CAST(CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END AS TEXT)))) UNION ALL SELECT ALL * FROM rt0, t1 WHERE (((CAST(CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END AS TEXT)) ISNULL));
SELECT ALL * FROM rt0, t1;
SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0 WHERE (json(rt0.c1) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (json(rt0.c1) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0 WHERE (((json(rt0.c1) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (ROUND((((t1.c0))<=((0.6780887437199744))), '-626028035')) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (ROUND((((t1.c0))<=((0.6780887437199744))), '-626028035')))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((ROUND((((t1.c0))<=((0.6780887437199744))), '-626028035')) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL rt0.c2, rt0.c4, t1.c0, rt0.c0 FROM t1 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c4, t1.c0, rt0.c0;
SELECT rt0.c2, rt0.c4, t1.c0, rt0.c0 FROM t1 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c4, t1.c0, rt0.c0 HAVING MIN(COUNT(rt0.c0)) UNION ALL SELECT ALL rt0.c2, rt0.c4, t1.c0, rt0.c0 FROM t1 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c4, t1.c0, rt0.c0 HAVING (NOT (MIN(COUNT(rt0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c4, t1.c0, rt0.c0 FROM t1 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c4, t1.c0, rt0.c0 HAVING ((MIN(COUNT(rt0.c0))) ISNULL);
SELECT ALL rt0.c1, t1.c0, rt0.c0, rt0.c3, rt0.c4 FROM t1 CROSS JOIN rt0 ON CASE WHEN ((rt0.c3)AND(rt0.c1)) THEN ((((rt0.c4)AND(rt0.c3)))AND(t1.c0)) ELSE (t1.c0 IN ()) END;
SELECT rt0.c1, t1.c0, rt0.c0, rt0.c3, rt0.c4 FROM t1 CROSS JOIN rt0 ON CASE WHEN ((rt0.c3)AND(rt0.c1)) THEN ((((rt0.c4)AND(rt0.c3)))AND(t1.c0)) ELSE (t1.c0 IN ()) END WHERE (((((rt0.c3)>(rt0.c4)))<(((rt0.c1)*(rt0.c3))))) UNION ALL SELECT ALL rt0.c1, t1.c0, rt0.c0, rt0.c3, rt0.c4 FROM t1 CROSS JOIN rt0 ON CASE WHEN ((rt0.c3)AND(rt0.c1)) THEN ((((rt0.c4)AND(rt0.c3)))AND(t1.c0)) ELSE (t1.c0 IN ()) END WHERE ((NOT (((((rt0.c3)>(rt0.c4)))<(((rt0.c1)*(rt0.c3))))))) UNION ALL SELECT rt0.c1, t1.c0, rt0.c0, rt0.c3, rt0.c4 FROM t1 CROSS JOIN rt0 ON CASE WHEN ((rt0.c3)AND(rt0.c1)) THEN ((((rt0.c4)AND(rt0.c3)))AND(t1.c0)) ELSE (t1.c0 IN ()) END WHERE (((((((rt0.c3)>(rt0.c4)))<(((rt0.c1)*(rt0.c3))))) ISNULL));
SELECT ALL rt0.c1, t1.c0, rt0.c0, rt0.c3, rt0.c4 FROM t1 CROSS JOIN rt0 ON CASE WHEN ((rt0.c3)AND(rt0.c1)) THEN ((((rt0.c4)AND(rt0.c3)))AND(t1.c0)) ELSE (t1.c0 IN ()) END;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (NULL) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM t1 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL rt0.c2, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c2, rt0.c0, rt0.c4 UNION SELECT rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4;
SELECT ALL t1.c0 FROM t1 INDEXED BY i93 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 INDEXED BY i93 GROUP BY t1.c0 HAVING (((t1.c0)) BETWEEN ((COALESCE(DISTINCT GROUP_CONCAT(t1.c0), t1.c0, TOTAL(SUM(t1.c0)), t1.c0))) AND ((GROUP_CONCAT(t1.c0)))) UNION ALL SELECT t1.c0 FROM t1 INDEXED BY i93 GROUP BY t1.c0 HAVING (NOT ((((t1.c0)) BETWEEN ((COALESCE(DISTINCT GROUP_CONCAT(t1.c0), t1.c0, TOTAL(SUM(t1.c0)), t1.c0))) AND ((GROUP_CONCAT(t1.c0)))))) UNION ALL SELECT ALL t1.c0 FROM t1 INDEXED BY i93 GROUP BY t1.c0 HAVING (((((t1.c0)) BETWEEN ((COALESCE(DISTINCT GROUP_CONCAT(t1.c0), t1.c0, TOTAL(SUM(t1.c0)), t1.c0))) AND ((GROUP_CONCAT(t1.c0))))) ISNULL);
SELECT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (t1.c0) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT (t1.c0))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((t1.c0) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT t1.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0, t1;
SELECT DISTINCT t1.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0, t1 WHERE (((rt0.c2 COLLATE NOCASE) ISNULL)) UNION SELECT DISTINCT t1.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0, t1 WHERE ((NOT (((rt0.c2 COLLATE NOCASE) ISNULL)))) UNION SELECT DISTINCT t1.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0 NOT INDEXED, t1 WHERE (((((rt0.c2 COLLATE NOCASE) ISNULL)) ISNULL));
SELECT DISTINCT t1.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0, t1;
SELECT rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2;
SELECT rt0.c4, rt0.c2 FROM rt0 WHERE ((((~ (rt0.c0))) NOTNULL)) GROUP BY rt0.c4, rt0.c2 UNION SELECT rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT ((((~ (rt0.c0))) NOTNULL)))) GROUP BY rt0.c4, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c2 FROM rt0 WHERE ((((((~ (rt0.c0))) NOTNULL)) ISNULL)) GROUP BY rt0.c4, rt0.c2;
SELECT rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1;
SELECT rt0.c3, rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1 HAVING CASE WHEN MAX(rt0.c3) THEN MIN(rt0.c4) END UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1 HAVING (NOT (CASE WHEN MAX(rt0.c3) THEN MIN(rt0.c4) END)) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1 HAVING ((CASE WHEN MAX(rt0.c3) THEN MIN(rt0.c4) END) ISNULL);
SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1;
SELECT rt0.c3, rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1 HAVING CASE WHEN MAX(rt0.c3) THEN MIN(rt0.c4) END UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1 HAVING (NOT (CASE WHEN MAX(rt0.c3) THEN MIN(rt0.c4) END)) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1 HAVING ((CASE WHEN MAX(rt0.c3) THEN MIN(rt0.c4) END) ISNULL);
SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c1, t1.c0 FROM rt0, t1;
SELECT ALL rt0.c2, rt0.c1, t1.c0 FROM rt0, t1 WHERE (((rt0.c0)LIKE(rt0.c2)) COLLATE NOCASE) UNION ALL SELECT rt0.c2, rt0.c1, t1.c0 FROM rt0, t1 WHERE ((NOT (((rt0.c0)LIKE(rt0.c2)) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c2, rt0.c1, t1.c0 FROM rt0, t1 WHERE (((((rt0.c0)LIKE(rt0.c2)) COLLATE NOCASE) ISNULL));
SELECT rt0.c2, rt0.c1, t1.c0 FROM rt0, t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (TIME(t1.c0 COLLATE BINARY, CASE WHEN t1.c0 THEN t1.c0 END, ((t1.c0) NOT NULL))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (TIME(t1.c0 COLLATE BINARY, CASE WHEN t1.c0 THEN t1.c0 END, ((t1.c0) NOT NULL))))) UNION SELECT DISTINCT * FROM t1 WHERE (((TIME(t1.c0 COLLATE BINARY, CASE WHEN t1.c0 THEN t1.c0 END, ((t1.c0) NOT NULL))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL rt0.c2, rt0.c1 FROM t1, rt0 INDEXED BY i93 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM t1, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4;
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM t1, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 HAVING SUM(GROUP_CONCAT(MAX(rt0.c4))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM t1, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 HAVING (NOT (SUM(GROUP_CONCAT(MAX(rt0.c4))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM t1, rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 HAVING ((SUM(GROUP_CONCAT(MAX(rt0.c4)))) ISNULL);
SELECT t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE (CAST(t1.c0 COLLATE BINARY AS NUMERIC)) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (CAST(t1.c0 COLLATE BINARY AS NUMERIC)))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE (((CAST(t1.c0 COLLATE BINARY AS NUMERIC)) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ('-640891010') UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ('-640891010'))) UNION SELECT DISTINCT * FROM t1 WHERE ((('-640891010') ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL rt0.c4, t1.c0, rt0.c0 FROM rt0, t1 GROUP BY rt0.c4, t1.c0, rt0.c0;
SELECT rt0.c4, t1.c0, rt0.c0 FROM rt0, t1 WHERE (CAST(((rt0.c0) BETWEEN (t1.c0) AND (NULL)) AS TEXT)) GROUP BY rt0.c4, t1.c0, rt0.c0 UNION SELECT rt0.c4, t1.c0, rt0.c0 FROM rt0, t1 WHERE ((NOT (CAST(((rt0.c0) BETWEEN (t1.c0) AND (NULL)) AS TEXT)))) GROUP BY rt0.c4, t1.c0, rt0.c0 UNION SELECT rt0.c4, t1.c0, rt0.c0 FROM rt0, t1 WHERE (((CAST(((rt0.c0) BETWEEN (t1.c0) AND (NULL)) AS TEXT)) ISNULL)) GROUP BY rt0.c4, t1.c0, rt0.c0;
SELECT ALL rt0.c4, t1.c0, rt0.c0 FROM rt0, t1 GROUP BY rt0.c4, t1.c0, rt0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING AVG((((t1.c0, NULL, COUNT(t1.c0))) BETWEEN ((GROUP_CONCAT(AVG(t1.c0)), GROUP_CONCAT(t1.c0), t1.c0)) AND ((COUNT(AVG(t1.c0)), t1.c0, SUM(t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (AVG((((t1.c0, NULL, COUNT(t1.c0))) BETWEEN ((GROUP_CONCAT(AVG(t1.c0)), GROUP_CONCAT(t1.c0), t1.c0)) AND ((COUNT(AVG(t1.c0)), t1.c0, SUM(t1.c0))))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((AVG((((t1.c0, NULL, COUNT(t1.c0))) BETWEEN ((GROUP_CONCAT(AVG(t1.c0)), GROUP_CONCAT(t1.c0), t1.c0)) AND ((COUNT(AVG(t1.c0)), t1.c0, SUM(t1.c0)))))) ISNULL);
SELECT rt0.c2, t1.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM t1, rt0;
SELECT ALL rt0.c2, t1.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM t1, rt0 WHERE (rt0.c2) UNION ALL SELECT ALL rt0.c2, t1.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM t1, rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL rt0.c2, t1.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM t1, rt0 WHERE (((rt0.c2) ISNULL));
SELECT rt0.c2, t1.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM t1, rt0;
SELECT DISTINCT rt0.c4, rt0.c1 FROM t1, rt0;
SELECT DISTINCT rt0.c4, rt0.c1 FROM t1, rt0 WHERE ((- (('2085287005' IN (rt0.c4, rt0.c4))))) UNION SELECT DISTINCT rt0.c4, rt0.c1 FROM t1, rt0 WHERE ((NOT ((- (('2085287005' IN (rt0.c4, rt0.c4))))))) UNION SELECT DISTINCT rt0.c4, rt0.c1 FROM t1, rt0 WHERE ((((- (('2085287005' IN (rt0.c4, rt0.c4))))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c1 FROM t1, rt0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (CASE WHEN ((NULL)*(t1.c0)) THEN (t1.c0 IN ()) WHEN MIN(-1439530642, t1.c0) THEN ((((t1.c0)AND(t1.c0)))OR(t1.c0)) WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 END THEN NULL ELSE TRIM(DISTINCT t1.c0, t1.c0) END) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (CASE WHEN ((NULL)*(t1.c0)) THEN (t1.c0 IN ()) WHEN MIN(-1439530642, t1.c0) THEN ((((t1.c0)AND(t1.c0)))OR(t1.c0)) WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 END THEN NULL ELSE TRIM(DISTINCT t1.c0, t1.c0) END))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((CASE WHEN ((NULL)*(t1.c0)) THEN (t1.c0 IN ()) WHEN MIN(-1439530642, t1.c0) THEN ((((t1.c0)AND(t1.c0)))OR(t1.c0)) WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 END THEN NULL ELSE TRIM(DISTINCT t1.c0, t1.c0) END) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT rt0.c0, rt0.c1, rt0.c3, t1.c0, rt0.c4 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, rt0.c3, t1.c0, rt0.c4;
SELECT rt0.c0, rt0.c1, rt0.c3, t1.c0, rt0.c4 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, rt0.c3, t1.c0, rt0.c4 HAVING MAX(COUNT(*) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3, t1.c0, rt0.c4 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, rt0.c3, t1.c0, rt0.c4 HAVING (NOT (MAX(COUNT(*) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3, t1.c0, rt0.c4 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, rt0.c3, t1.c0, rt0.c4 HAVING ((MAX(COUNT(*) COLLATE RTRIM)) ISNULL);
SELECT ALL rt0.c3, rt0.c0, rt0.c1, t1.c0 FROM t1, rt0;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, t1.c0 FROM t1, rt0 WHERE ((((t1.c0)) BETWEEN ((CAST(rt0.c3 AS REAL))) AND (((rt0.c3 IN ()))))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, t1.c0 FROM t1, rt0 WHERE ((NOT ((((t1.c0)) BETWEEN ((CAST(rt0.c3 AS REAL))) AND (((rt0.c3 IN ()))))))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, t1.c0 FROM t1, rt0 WHERE ((((((t1.c0)) BETWEEN ((CAST(rt0.c3 AS REAL))) AND (((rt0.c3 IN ()))))) ISNULL));
SELECT ALL rt0.c3, rt0.c0, rt0.c1, t1.c0 FROM t1, rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)-(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 END))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE BINARY)-(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 END))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c0 COLLATE BINARY)-(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 END))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0 WHERE ((((('900281732')&(rt0.c3))) NOT NULL)) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4 UNION SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT ((((('900281732')&(rt0.c3))) NOT NULL)))) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0 WHERE ((((((('900281732')&(rt0.c3))) NOT NULL)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((t1.c0)!=(MIN(-1870952851))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((t1.c0)!=(MIN(-1870952851))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((t1.c0)<>(MIN(-1870952851)))) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((t1.c0)!=(MIN(-1870952851))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((t1.c0)!=(MIN(-1870952851))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((t1.c0)<>(MIN(-1870952851)))) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0 LEFT OUTER JOIN t1 ON (NOT (UNLIKELY(DISTINCT rt0.c4)));
SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0 LEFT OUTER JOIN t1 ON (NOT (UNLIKELY(DISTINCT rt0.c4))) WHERE ('-563689932') UNION ALL SELECT rt0.c0, rt0.c4, rt0.c2 FROM rt0 LEFT OUTER JOIN t1 ON (NOT (UNLIKELY(DISTINCT rt0.c4))) WHERE ((NOT ('-563689932'))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c2 FROM rt0 LEFT OUTER JOIN t1 ON (NOT (UNLIKELY(DISTINCT rt0.c4))) WHERE ((('-563689932') ISNULL));
SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0 LEFT OUTER JOIN t1 ON (NOT (UNLIKELY(DISTINCT rt0.c4)));
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE ((((- (t1.c0))) IS TRUE)) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT ((((- (t1.c0))) IS TRUE)))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((((((- (t1.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0, t1.c0, rt0.c3 FROM rt0, t1 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0, t1.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0, t1.c0, rt0.c3 FROM rt0, t1 WHERE ((~ (LIKELIHOOD(rt0.c2, 0.6804595041901267)))) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0, t1.c0, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0, t1.c0, rt0.c3 FROM rt0, t1 WHERE ((NOT ((~ (LIKELIHOOD(rt0.c2, 0.6804595041901267)))))) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0, t1.c0, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0, t1.c0, rt0.c3 FROM rt0, t1 WHERE ((((~ (LIKELIHOOD(rt0.c2, 0.6804595041901267)))) ISNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0, t1.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0, t1.c0, rt0.c3 FROM rt0, t1 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0, t1.c0, rt0.c3;
SELECT rt0.c3 FROM rt0, t1 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0, t1 GROUP BY rt0.c3 HAVING (COUNT(TOTAL(rt0.c4)) IN ()) UNION ALL SELECT ALL rt0.c3 FROM rt0, t1 GROUP BY rt0.c3 HAVING (NOT ((COUNT(TOTAL(rt0.c4)) IN ()))) UNION ALL SELECT rt0.c3 FROM rt0, t1 GROUP BY rt0.c3 HAVING (((COUNT(TOTAL(rt0.c4)) IN ())) ISNULL);
SELECT rt0.c3 FROM rt0, t1 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0, t1 GROUP BY rt0.c3 HAVING (COUNT(TOTAL(rt0.c4)) IN ()) UNION ALL SELECT ALL rt0.c3 FROM rt0, t1 GROUP BY rt0.c3 HAVING (NOT ((COUNT(TOTAL(rt0.c4)) IN ()))) UNION ALL SELECT rt0.c3 FROM rt0, t1 GROUP BY rt0.c3 HAVING (((COUNT(TOTAL(rt0.c4)) IN ())) ISNULL);
SELECT rt0.c3 FROM rt0, t1 GROUP BY rt0.c3;
SELECT ALL TOTAL(rt0.c4) FROM rt0, t1 ORDER BY (CAST('1484814411' AS TEXT) IN ((((rt0.c3, rt0.c2, t1.c0)) NOT BETWEEN ((rt0.c2, rt0.c4, t1.c0)) AND (('-563689932', rt0.c0, rt0.c2)))));
SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0;
SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE (0X27c0b40a) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (0X27c0b40a))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE (((0x27c0b40a) ISNULL));
SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE (((((rt0.c0) IS FALSE))/((NOT (rt0.c4))))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT (((((rt0.c0) IS FALSE))/((NOT (rt0.c4))))))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE (((((((rt0.c0) IS FALSE))/((NOT (rt0.c4))))) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT ALL rt0.c3, rt0.c4, rt0.c1, t1.c0, rt0.c2, rt0.c0 FROM rt0 NATURAL JOIN t1 GROUP BY rt0.c3, rt0.c4, rt0.c1, t1.c0, rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c4, rt0.c1, t1.c0, rt0.c2, rt0.c0 FROM rt0 NATURAL JOIN t1 WHERE (rt0.c1) GROUP BY rt0.c3, rt0.c4, rt0.c1, t1.c0, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c4, rt0.c1, t1.c0, rt0.c2, rt0.c0 FROM rt0 NATURAL JOIN t1 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c3, rt0.c4, rt0.c1, t1.c0, rt0.c2, rt0.c0 UNION SELECT rt0.c3, rt0.c4, rt0.c1, t1.c0, rt0.c2, rt0.c0 FROM rt0 NATURAL JOIN t1 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c1, t1.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c1, t1.c0, rt0.c2, rt0.c0 FROM rt0 NATURAL JOIN t1 GROUP BY rt0.c3, rt0.c4, rt0.c1, t1.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c3 FROM t1 NATURAL JOIN rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM t1 NATURAL JOIN rt0 GROUP BY rt0.c3 HAVING MIN(COUNT(rt0.c1)) UNION ALL SELECT rt0.c3 FROM t1 NATURAL JOIN rt0 GROUP BY rt0.c3 HAVING (NOT (MIN(COUNT(rt0.c1)))) UNION ALL SELECT rt0.c3 FROM t1 NATURAL JOIN rt0 GROUP BY rt0.c3 HAVING ((MIN(COUNT(rt0.c1))) ISNULL);
SELECT rt0.c0, t1.c0, rt0.c3 FROM t1, rt0;
SELECT rt0.c0, t1.c0, rt0.c3 FROM t1, rt0 WHERE ((((rt0.c1, rt0.c3, t1.c0)) BETWEEN ((rt0.c1 COLLATE RTRIM, ((((((((t1.c0)AND(0.9793635775845351)))AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)), rt0.c2 COLLATE BINARY)) AND ((CASE WHEN rt0.c0 THEN rt0.c1 END, (+ (rt0.c1)), CAST(rt0.c1 AS NUMERIC))))) UNION ALL SELECT ALL rt0.c0, t1.c0, rt0.c3 FROM t1, rt0 WHERE ((NOT ((((rt0.c1, rt0.c3, t1.c0)) BETWEEN ((rt0.c1 COLLATE RTRIM, ((((((((t1.c0)AND(0.9793635775845351)))AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)), rt0.c2 COLLATE BINARY)) AND ((CASE WHEN rt0.c0 THEN rt0.c1 END, (+ (rt0.c1)), CAST(rt0.c1 AS NUMERIC))))))) UNION ALL SELECT rt0.c0, t1.c0, rt0.c3 FROM t1, rt0 WHERE ((((((rt0.c1, rt0.c3, t1.c0)) BETWEEN ((rt0.c1 COLLATE RTRIM, ((((((((t1.c0)AND(0.9793635775845351)))AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)), rt0.c2 COLLATE BINARY)) AND ((CASE WHEN rt0.c0 THEN rt0.c1 END, (+ (rt0.c1)), CAST(rt0.c1 AS NUMERIC))))) ISNULL));
SELECT rt0.c0, t1.c0, rt0.c3 FROM t1, rt0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE ((((t1.c0 IN ()))IS(((t1.c0) IS FALSE)))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT ((((t1.c0 IN ()))IS(((t1.c0) IS FALSE)))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((((((t1.c0 IN ()))IS(((t1.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL t1.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, t1 GROUP BY t1.c0, rt0.c3, rt0.c4, rt0.c2;
SELECT ALL t1.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, t1 WHERE (((((rt0.c4 IN ())))>((rt0.c1)))) GROUP BY t1.c0, rt0.c3, rt0.c4, rt0.c2 UNION SELECT t1.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, t1 WHERE ((NOT (((((rt0.c4 IN ())))>((rt0.c1)))))) GROUP BY t1.c0, rt0.c3, rt0.c4, rt0.c2 UNION SELECT ALL t1.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, t1 WHERE (((((((rt0.c4 IN ())))>((rt0.c1)))) ISNULL)) GROUP BY t1.c0, rt0.c3, rt0.c4, rt0.c2;
SELECT ALL t1.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, t1 GROUP BY t1.c0, rt0.c3, rt0.c4, rt0.c2;
SELECT rt0.c2, t1.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM t1, rt0 GROUP BY rt0.c2, t1.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c4;
SELECT ALL rt0.c2, t1.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM t1, rt0 GROUP BY rt0.c2, t1.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c4 HAVING CASE ((((((((rt0.c4)AND(COUNT(*))))OR(rt0.c3)))OR(MIN(AVG('-756444820')))))OR(rt0.c2))  WHEN COUNT(COUNT(*)) THEN CAST(MIN(COUNT(*)) AS NUMERIC) ELSE TOTAL(rt0.c4) END UNION ALL SELECT ALL rt0.c2, t1.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM t1, rt0 GROUP BY rt0.c2, t1.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c4 HAVING (NOT (CASE ((((((((rt0.c4)AND(COUNT(*))))OR(rt0.c3)))OR(MIN(AVG('-756444820')))))OR(rt0.c2))  WHEN COUNT(COUNT(*)) THEN CAST(MIN(COUNT(*)) AS NUMERIC) ELSE TOTAL(rt0.c4) END)) UNION ALL SELECT ALL rt0.c2, t1.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM t1, rt0 GROUP BY rt0.c2, t1.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c4 HAVING ((CASE ((((((((rt0.c4)AND(COUNT(*))))OR(rt0.c3)))OR(MIN(AVG('-756444820')))))OR(rt0.c2))  WHEN COUNT(COUNT(*)) THEN CAST(MIN(COUNT(*)) AS NUMERIC) ELSE TOTAL(rt0.c4) END) ISNULL);
SELECT ALL * FROM t1;
SELECT ALL * FROM t1 WHERE ((t1.c0 COLLATE BINARY IN ())) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT ((t1.c0 COLLATE BINARY IN ())))) UNION ALL SELECT * FROM t1 WHERE ((((t1.c0 COLLATE BINARY IN ())) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT * FROM rt0, t1;
SELECT DISTINCT * FROM rt0, t1 WHERE (t1.c0) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT * FROM rt0, t1;
SELECT ALL rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1;
SELECT ALL rt0.c3, rt0.c4, rt0.c1 FROM rt0 NOT INDEXED WHERE ((- ((NOT (rt0.c1))))) GROUP BY rt0.c3, rt0.c4, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT ((- ((NOT (rt0.c1))))))) GROUP BY rt0.c3, rt0.c4, rt0.c1 UNION SELECT rt0.c3, rt0.c4, rt0.c1 FROM rt0 WHERE ((((- ((NOT (rt0.c1))))) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c1;
SELECT ALL rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1;
SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c2, t1.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c2, t1.c0, rt0.c3;
SELECT rt0.c4, rt0.c1, rt0.c0, rt0.c2, t1.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c2, t1.c0, rt0.c3 HAVING COUNT(TRIM(DISTINCT rt0.c1, t1.c0)) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c2, t1.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c2, t1.c0, rt0.c3 HAVING (NOT (COUNT(TRIM(DISTINCT rt0.c1, t1.c0)))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c2, t1.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c2, t1.c0, rt0.c3 HAVING ((COUNT(TRIM(DISTINCT rt0.c1, t1.c0))) ISNULL);
SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c2, t1.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c2, t1.c0, rt0.c3;
SELECT rt0.c4, rt0.c1, rt0.c0, rt0.c2, t1.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c2, t1.c0, rt0.c3 HAVING COUNT(TRIM(DISTINCT rt0.c1, t1.c0)) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c2, t1.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c2, t1.c0, rt0.c3 HAVING (NOT (COUNT(TRIM(DISTINCT rt0.c1, t1.c0)))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c2, t1.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c2, t1.c0, rt0.c3 HAVING ((COUNT(TRIM(DISTINCT rt0.c1, t1.c0))) ISNULL);
SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c2, t1.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c2, t1.c0, rt0.c3;
SELECT MIN(CASE WHEN (rt0.c3 IN ()) THEN ((rt0.c3) NOT BETWEEN ('yyrW>qj') AND (rt0.c2)) END) FROM rt0, t1 ORDER BY ((((rt0.c0)/(rt0.c1))) NOT NULL) ASC  NULLS FIRST, x'';
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 FULL OUTER JOIN t1 ON CASE CAST(rt0.c1 AS INTEGER)  WHEN ((rt0.c0)%(rt0.c4)) THEN ((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))OR(t1.c0)))OR(rt0.c3)))AND(t1.c0)))OR(NULL)) ELSE ((t1.c0) BETWEEN (rt0.c4) AND (rt0.c0)) END;
SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 FULL OUTER JOIN t1 ON CASE CAST(rt0.c1 AS INTEGER)  WHEN ((rt0.c0)%(rt0.c4)) THEN ((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))OR(t1.c0)))OR(rt0.c3)))AND(t1.c0)))OR(NULL)) ELSE ((t1.c0) BETWEEN (rt0.c4) AND (rt0.c0)) END WHERE (((- (rt0.c3)) IN ())) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 FULL OUTER JOIN t1 ON CASE CAST(rt0.c1 AS INTEGER)  WHEN ((rt0.c0)%(rt0.c4)) THEN ((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))OR(t1.c0)))OR(rt0.c3)))AND(t1.c0)))OR(NULL)) ELSE ((t1.c0) BETWEEN (rt0.c4) AND (rt0.c0)) END WHERE ((NOT (((- (rt0.c3)) IN ())))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 FULL OUTER JOIN t1 ON CASE CAST(rt0.c1 AS INTEGER)  WHEN ((rt0.c0)%(rt0.c4)) THEN ((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))OR(t1.c0)))OR(rt0.c3)))AND(t1.c0)))OR(NULL)) ELSE ((t1.c0) BETWEEN (rt0.c4) AND (rt0.c0)) END WHERE (((((- (rt0.c3)) IN ())) ISNULL));
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 FULL OUTER JOIN t1 ON CASE CAST(rt0.c1 AS INTEGER)  WHEN ((rt0.c0)%(rt0.c4)) THEN ((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))OR(t1.c0)))OR(rt0.c3)))AND(t1.c0)))OR(NULL)) ELSE ((t1.c0) BETWEEN (rt0.c4) AND (rt0.c0)) END;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, t1.c0 FROM t1 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, t1.c0 FROM t1 NATURAL JOIN rt0 WHERE (((rt0.c3) BETWEEN (x'') AND (((rt0.c1)>(rt0.c1))))) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, t1.c0 FROM t1 NATURAL JOIN rt0 WHERE ((NOT (((rt0.c3) BETWEEN (x'') AND (((rt0.c1)>(rt0.c1))))))) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, t1.c0 FROM t1 NATURAL JOIN rt0 WHERE (((((rt0.c3) BETWEEN (x'') AND (((rt0.c1)>(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, t1.c0 FROM t1 NATURAL JOIN rt0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c0))) IS FALSE)) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c0))) IS FALSE)))) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c0))) IS FALSE)) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2, t1.c0, rt0.c1, rt0.c4 FROM t1, rt0 GROUP BY rt0.c0, rt0.c2, t1.c0, rt0.c1, rt0.c4;
SELECT rt0.c0, rt0.c2, t1.c0, rt0.c1, rt0.c4 FROM t1, rt0 GROUP BY rt0.c0, rt0.c2, t1.c0, rt0.c1, rt0.c4 HAVING (((TOTAL(rt0.c1))) NOT BETWEEN (('')) AND ((COUNT(rt0.c3)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, t1.c0, rt0.c1, rt0.c4 FROM t1, rt0 GROUP BY rt0.c0, rt0.c2, t1.c0, rt0.c1, rt0.c4 HAVING (NOT ((((TOTAL(rt0.c1))) NOT BETWEEN (('')) AND ((COUNT(rt0.c3)))))) UNION ALL SELECT rt0.c0, rt0.c2, t1.c0, rt0.c1, rt0.c4 FROM t1, rt0 GROUP BY rt0.c0, rt0.c2, t1.c0, rt0.c1, rt0.c4 HAVING (((((TOTAL(rt0.c1))) NOT BETWEEN (('')) AND ((COUNT(rt0.c3))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, t1.c0, rt0.c1, rt0.c4 FROM t1, rt0 GROUP BY rt0.c0, rt0.c2, t1.c0, rt0.c1, rt0.c4;
SELECT rt0.c0, rt0.c2, t1.c0, rt0.c1, rt0.c4 FROM t1, rt0 GROUP BY rt0.c0, rt0.c2, t1.c0, rt0.c1, rt0.c4 HAVING (((TOTAL(rt0.c1))) NOT BETWEEN (('')) AND ((COUNT(rt0.c3)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, t1.c0, rt0.c1, rt0.c4 FROM t1, rt0 GROUP BY rt0.c0, rt0.c2, t1.c0, rt0.c1, rt0.c4 HAVING (NOT ((((TOTAL(rt0.c1))) NOT BETWEEN (('')) AND ((COUNT(rt0.c3)))))) UNION ALL SELECT rt0.c0, rt0.c2, t1.c0, rt0.c1, rt0.c4 FROM t1, rt0 GROUP BY rt0.c0, rt0.c2, t1.c0, rt0.c1, rt0.c4 HAVING (((((TOTAL(rt0.c1))) NOT BETWEEN (('')) AND ((COUNT(rt0.c3))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, t1.c0, rt0.c1, rt0.c4 FROM t1, rt0 GROUP BY rt0.c0, rt0.c2, t1.c0, rt0.c1, rt0.c4;
SELECT rt0.c4, rt0.c0, t1.c0 FROM rt0, t1;
SELECT ALL rt0.c4, rt0.c0, t1.c0 FROM rt0, t1 WHERE (CASE t1.c0  WHEN rt0.c1 THEN rt0.c3 END COLLATE BINARY COLLATE NOCASE) UNION ALL SELECT ALL rt0.c4, rt0.c0, t1.c0 FROM rt0, t1 WHERE ((NOT (CASE t1.c0  WHEN rt0.c1 THEN rt0.c3 END COLLATE BINARY COLLATE NOCASE))) UNION ALL SELECT rt0.c4, rt0.c0, t1.c0 FROM rt0, t1 WHERE (((CASE t1.c0  WHEN rt0.c1 THEN rt0.c3 END COLLATE BINARY COLLATE NOCASE) ISNULL));
SELECT rt0.c4, rt0.c0, t1.c0 FROM rt0, t1;
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c1 FROM t1, rt0;
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c1 FROM t1, rt0 WHERE (((rt0.c0)&(rt0.c4)) COLLATE BINARY) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c1 FROM t1, rt0 WHERE ((NOT (((rt0.c0)&(rt0.c4)) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c1 FROM t1, rt0 NOT INDEXED WHERE (((((rt0.c0)&(rt0.c4)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c1 FROM t1, rt0;
SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((0.28671320950951695 IN (rt0.c1, rt0.c4))) NOT BETWEEN (((rt0.c0) NOT NULL)) AND (UPPER(rt0.c3)))) GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((0.28671320950951695 IN (rt0.c1, rt0.c4))) NOT BETWEEN (((rt0.c0) NOT NULL)) AND (UPPER(rt0.c3)))))) GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((0.28671320950951695 IN (rt0.c1, rt0.c4))) NOT BETWEEN (((rt0.c0) NOT NULL)) AND (UPPER(rt0.c3)))) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT t1.c0, rt0.c3 FROM rt0, t1 GROUP BY t1.c0, rt0.c3;
SELECT ALL t1.c0, rt0.c3 FROM rt0, t1 GROUP BY t1.c0, rt0.c3 HAVING MIN(GROUP_CONCAT(AVG(MAX(rt0.c4)))) UNION ALL SELECT t1.c0, rt0.c3 FROM rt0, t1 GROUP BY t1.c0, rt0.c3 HAVING (NOT (MIN(GROUP_CONCAT(AVG(MAX(rt0.c4)))))) UNION ALL SELECT t1.c0, rt0.c3 FROM rt0, t1 GROUP BY t1.c0, rt0.c3 HAVING ((MIN(GROUP_CONCAT(AVG(MAX(rt0.c4))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c0)))/((~ (rt0.c4))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((~ (rt0.c0)))/((~ (rt0.c4))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((~ (rt0.c0)))/((~ (rt0.c4))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (rtreenode(t1.c0, t1.c0) COLLATE RTRIM) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (rtreenode(t1.c0, t1.c0) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t1 WHERE (((rtreenode(t1.c0, t1.c0) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT rt0.c4, rt0.c0 FROM t1, rt0 GROUP BY rt0.c4, rt0.c0;
SELECT rt0.c4, rt0.c0 FROM t1, rt0 WHERE (CAST((t1.c0 IN ()) AS NUMERIC)) GROUP BY rt0.c4, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c0 FROM t1, rt0 WHERE ((NOT (CAST((t1.c0 IN ()) AS NUMERIC)))) GROUP BY rt0.c4, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c0 FROM t1, rt0 WHERE (((CAST((t1.c0 IN ()) AS NUMERIC)) ISNULL)) GROUP BY rt0.c4, rt0.c0;
SELECT rt0.c4, rt0.c0 FROM t1, rt0 GROUP BY rt0.c4, rt0.c0;
SELECT rt0.c2 FROM rt0, t1 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, t1 GROUP BY rt0.c2 HAVING t1.c0 UNION ALL SELECT rt0.c2 FROM rt0, t1 GROUP BY rt0.c2 HAVING (NOT (t1.c0)) UNION ALL SELECT rt0.c2 FROM rt0, t1 GROUP BY rt0.c2 HAVING ((t1.c0) ISNULL);
SELECT rt0.c2 FROM rt0, t1 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, t1 GROUP BY rt0.c2 HAVING t1.c0 UNION ALL SELECT rt0.c2 FROM rt0, t1 GROUP BY rt0.c2 HAVING (NOT (t1.c0)) UNION ALL SELECT rt0.c2 FROM rt0, t1 GROUP BY rt0.c2 HAVING ((t1.c0) ISNULL);
SELECT rt0.c2 FROM rt0, t1 GROUP BY rt0.c2;
SELECT ALL t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (((CAST(t1.c0 AS INTEGER)) IS TRUE)) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT (((CAST(t1.c0 AS INTEGER)) IS TRUE)))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((((CAST(t1.c0 AS INTEGER)) IS TRUE)) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (t1.c0) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (t1.c0))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((t1.c0) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c0 FROM t1, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0;
SELECT rt0.c3, rt0.c4, rt0.c0 FROM t1, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0 HAVING MIN((rt0.c1 IN ())) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c0 FROM t1, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0 HAVING (NOT (MIN((rt0.c1 IN ())))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c0 FROM t1, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0 HAVING ((MIN((rt0.c1 IN ()))) ISNULL);
SELECT ALL rt0.c3, rt0.c4, rt0.c0 FROM t1, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0;
SELECT rt0.c3, rt0.c4, rt0.c0 FROM t1, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0 HAVING MIN((rt0.c1 IN ())) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c0 FROM t1, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0 HAVING (NOT (MIN((rt0.c1 IN ())))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c0 FROM t1, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0 HAVING ((MIN((rt0.c1 IN ()))) ISNULL);
SELECT ALL rt0.c3, rt0.c4, rt0.c0 FROM t1, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0;
SELECT t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE ((((((((t1.c0)AND(t1.c0)))AND(t1.c0)), CAST(t1.c0 AS INTEGER), (t1.c0 IN (t1.c0)), (t1.c0 IN (NULL)), (((t1.c0))<((t1.c0)))))>=((x'', LIKE(t1.c0, t1.c0), (~ (t1.c0)), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), CAST(t1.c0 AS INTEGER))))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((((((((t1.c0)AND(t1.c0)))AND(t1.c0)), CAST(t1.c0 AS INTEGER), (t1.c0 IN (t1.c0)), (t1.c0 IN (NULL)), (((t1.c0))<((t1.c0)))))>=((x'', LIKE(t1.c0, t1.c0), (~ (t1.c0)), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), CAST(t1.c0 AS INTEGER))))))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)), CAST(t1.c0 AS INTEGER), (t1.c0 IN (t1.c0)), (t1.c0 IN (NULL)), (((t1.c0))<((t1.c0)))))>=((x'', LIKE(t1.c0, t1.c0), (~ (t1.c0)), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), CAST(t1.c0 AS INTEGER))))) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE (((rt0.c2, rt0.c3, rt0.c1))==((rt0.c4, rt0.c4, rt0.c1)))  WHEN rt0.c2 THEN (NULL IN (rt0.c3)) WHEN (rt0.c1 IN ()) THEN ((((((((rt0.c3)OR(-9.50306117E8)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)) WHEN CAST(rt0.c1 AS REAL) THEN CAST(rt0.c2 AS REAL) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE (((rt0.c2, rt0.c3, rt0.c1))==((rt0.c4, rt0.c4, rt0.c1)))  WHEN rt0.c2 THEN (NULL IN (rt0.c3)) WHEN (rt0.c1 IN ()) THEN ((((((((rt0.c3)OR(-9.50306117E8)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)) WHEN CAST(rt0.c1 AS REAL) THEN CAST(rt0.c2 AS REAL) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE (((rt0.c2, rt0.c3, rt0.c1))=((rt0.c4, rt0.c4, rt0.c1)))  WHEN rt0.c2 THEN (NULL IN (rt0.c3)) WHEN (rt0.c1 IN ()) THEN ((((((((rt0.c3)OR(-9.50306117E8)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)) WHEN CAST(rt0.c1 AS REAL) THEN CAST(rt0.c2 AS REAL) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (CAST(rt0.c2 AS BLOB) COLLATE RTRIM) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (CAST(rt0.c2 AS BLOB) COLLATE RTRIM))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((CAST(rt0.c2 AS BLOB) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(MAX(SUM(t1.c0))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(MAX(SUM(t1.c0))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(MAX(SUM(t1.c0)))) ISNULL);
SELECT t1.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t1, rt0;
SELECT t1.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t1, rt0 WHERE (((((t1.c0)/(rt0.c4)))>(((rt0.c1)<(rt0.c2))))) UNION ALL SELECT ALL t1.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t1, rt0 WHERE ((NOT (((((t1.c0)/(rt0.c4)))>(((rt0.c1)<(rt0.c2))))))) UNION ALL SELECT t1.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t1, rt0 WHERE (((((((t1.c0)/(rt0.c4)))>(((rt0.c1)<(rt0.c2))))) ISNULL));
SELECT t1.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE ((~ (((rt0.c0)<<(rt0.c2))))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT ((~ (((rt0.c0)<<(rt0.c2))))))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((((~ (((rt0.c0)<<(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((((t1.c0) ISNULL)) NOT BETWEEN (ROUND(t1.c0, t1.c0)) AND (t1.c0 COLLATE RTRIM))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((((t1.c0) ISNULL)) NOT BETWEEN (ROUND(t1.c0, t1.c0)) AND (t1.c0 COLLATE RTRIM))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((((((t1.c0) ISNULL)) NOT BETWEEN (ROUND(t1.c0, t1.c0)) AND (t1.c0 COLLATE RTRIM))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING x'' UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (x'')) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((x'') ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING x'' UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (x'')) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((x'') ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL rt0.c0, rt0.c1 FROM t1 LEFT OUTER JOIN rt0 ON (((rt0.c1, rt0.c1, rt0.c2, t1.c0, '䓬C')) NOT BETWEEN (((((t1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))), (((rt0.c2, '-438002718', rt0.c1))>=((t1.c0, rt0.c4, rt0.c2))), (NOT (rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c3) AND ('')), ((rt0.c1)==(rt0.c2)))) AND ((((rt0.c0) NOT NULL), SUBSTR(rt0.c1, '0.7301883319898134'), (- (t1.c0)), (('')AND(rt0.c1)), ((rt0.c3)AND(t1.c0)))));
SELECT rt0.c0, rt0.c1 FROM t1 LEFT OUTER JOIN rt0 ON (((rt0.c1, rt0.c1, rt0.c2, t1.c0, '䓬C')) NOT BETWEEN (((((t1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))), (((rt0.c2, '-438002718', rt0.c1))>=((t1.c0, rt0.c4, rt0.c2))), (NOT (rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c3) AND ('')), ((rt0.c1)=(rt0.c2)))) AND ((((rt0.c0) NOT NULL), SUBSTR(rt0.c1, '0.7301883319898134'), (- (t1.c0)), (('')AND(rt0.c1)), ((rt0.c3)AND(t1.c0))))) WHERE (NULL) UNION ALL SELECT rt0.c0, rt0.c1 FROM t1 LEFT OUTER JOIN rt0 ON (((rt0.c1, rt0.c1, rt0.c2, t1.c0, '䓬C')) NOT BETWEEN (((((t1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))), (((rt0.c2, '-438002718', rt0.c1))>=((t1.c0, rt0.c4, rt0.c2))), (NOT (rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c3) AND ('')), ((rt0.c1)=(rt0.c2)))) AND ((((rt0.c0) NOT NULL), SUBSTR(rt0.c1, '0.7301883319898134'), (- (t1.c0)), (('')AND(rt0.c1)), ((rt0.c3)AND(t1.c0))))) WHERE ((NOT (NULL))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM t1 LEFT OUTER JOIN rt0 ON (((rt0.c1, rt0.c1, rt0.c2, t1.c0, '䓬C')) NOT BETWEEN (((((t1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))), (((rt0.c2, '-438002718', rt0.c1))>=((t1.c0, rt0.c4, rt0.c2))), (NOT (rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c3) AND ('')), ((rt0.c1)=(rt0.c2)))) AND ((((rt0.c0) NOT NULL), SUBSTR(rt0.c1, '0.7301883319898134'), (- (t1.c0)), (('')AND(rt0.c1)), ((rt0.c3)AND(t1.c0))))) WHERE (((NULL) ISNULL));
SELECT ALL rt0.c0, rt0.c1 FROM t1 LEFT OUTER JOIN rt0 ON (((rt0.c1, rt0.c1, rt0.c2, t1.c0, '䓬C')) NOT BETWEEN (((((t1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))), (((rt0.c2, '-438002718', rt0.c1))>=((t1.c0, rt0.c4, rt0.c2))), (NOT (rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c3) AND ('')), ((rt0.c1)==(rt0.c2)))) AND ((((rt0.c0) NOT NULL), SUBSTR(rt0.c1, '0.7301883319898134'), (- (t1.c0)), (('')AND(rt0.c1)), ((rt0.c3)AND(t1.c0)))));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (HEX(rt0.c4)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (HEX(rt0.c4)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((HEX(rt0.c4)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c0, t1.c0 FROM rt0 LEFT OUTER JOIN t1 ON ((1.484814411E9) IS TRUE) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c0, t1.c0;
SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c0, t1.c0 FROM rt0 LEFT OUTER JOIN t1 ON ((1.484814411E9) IS TRUE) WHERE ((('-1e500' COLLATE RTRIM) BETWEEN (((t1.c0)|(t1.c0))) AND ('+*5]'))) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c0, t1.c0 UNION SELECT ALL rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c0, t1.c0 FROM rt0 LEFT OUTER JOIN t1 ON ((1.484814411E9) IS TRUE) WHERE ((NOT ((('-1e500' COLLATE RTRIM) BETWEEN (((t1.c0)|(t1.c0))) AND ('+*5]'))))) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c0, t1.c0 UNION SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c0, t1.c0 FROM rt0 LEFT OUTER JOIN t1 ON ((1.484814411E9) IS TRUE) WHERE ((((('-1e500' COLLATE RTRIM) BETWEEN (((t1.c0)|(t1.c0))) AND ('+*5]'))) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c0, t1.c0;
SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c0, t1.c0 FROM rt0 LEFT OUTER JOIN t1 ON ((1.484814411E9) IS TRUE) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c0, t1.c0;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 HAVING AVG(((COUNT(*))<=(rt0.c4))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 HAVING (NOT (AVG(((COUNT(*))<=(rt0.c4))))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 HAVING ((AVG(((COUNT(*))<=(rt0.c4)))) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c3, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c0)!=(rt0.c4)))%(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 END))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0)!=(rt0.c4)))%(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 END))))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c0)!=(rt0.c4)))%(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 END))) ISNULL));
SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c3) BETWEEN ('-1524421996') AND (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((NOT (((rt0.c3) BETWEEN ('-1524421996') AND (rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((NOT (((rt0.c3) BETWEEN ('-1524421996') AND (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 NATURAL JOIN t1 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 NATURAL JOIN t1 WHERE (CASE LTRIM(rt0.c2, rt0.c2)  WHEN (rt0.c0 IN ()) THEN rt0.c4 ELSE ((rt0.c2)>(rt0.c1)) END) GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 NATURAL JOIN t1 WHERE ((NOT (CASE LTRIM(rt0.c2, rt0.c2)  WHEN (rt0.c0 IN ()) THEN rt0.c4 ELSE ((rt0.c2)>(rt0.c1)) END))) GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2 UNION SELECT rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 NATURAL JOIN t1 WHERE (((CASE LTRIM(rt0.c2, rt0.c2)  WHEN (rt0.c0 IN ()) THEN rt0.c4 ELSE ((rt0.c2)>(rt0.c1)) END) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 NATURAL JOIN t1 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT t1.c0, rt0.c1 FROM rt0 FULL OUTER JOIN t1 ON CASE ((rt0.c2) NOTNULL)  WHEN 'D\nAwb5[' THEN t1.c0 WHEN rt0.c1 THEN ((rt0.c2)>(t1.c0)) WHEN ((t1.c0) BETWEEN (rt0.c1) AND (rt0.c3)) THEN (('')|(NULL)) END GROUP BY t1.c0, rt0.c1;
SELECT ALL t1.c0, rt0.c1 FROM rt0 FULL OUTER JOIN t1 ON CASE ((rt0.c2) NOTNULL)  WHEN 'D\nAwb5[' THEN t1.c0 WHEN rt0.c1 THEN ((rt0.c2)>(t1.c0)) WHEN ((t1.c0) BETWEEN (rt0.c1) AND (rt0.c3)) THEN (('')|(NULL)) END GROUP BY t1.c0, rt0.c1 HAVING ((SUM(MIN(rt0.c1))) ISNULL) UNION ALL SELECT t1.c0, rt0.c1 FROM rt0 FULL OUTER JOIN t1 ON CASE ((rt0.c2) NOTNULL)  WHEN 'D\nAwb5[' THEN t1.c0 WHEN rt0.c1 THEN ((rt0.c2)>(t1.c0)) WHEN ((t1.c0) BETWEEN (rt0.c1) AND (rt0.c3)) THEN (('')|(NULL)) END GROUP BY t1.c0, rt0.c1 HAVING (NOT (((SUM(MIN(rt0.c1))) ISNULL))) UNION ALL SELECT ALL t1.c0, rt0.c1 FROM rt0 FULL OUTER JOIN t1 ON CASE ((rt0.c2) NOTNULL)  WHEN 'D\nAwb5[' THEN t1.c0 WHEN rt0.c1 THEN ((rt0.c2)>(t1.c0)) WHEN ((t1.c0) BETWEEN (rt0.c1) AND (rt0.c3)) THEN (('')|(NULL)) END GROUP BY t1.c0, rt0.c1 HAVING ((((SUM(MIN(rt0.c1))) ISNULL)) ISNULL);
SELECT ALL t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (x'') UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT (x''))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE (((x'') ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE ((+ (((rt0.c0)LIKE(rt0.c4))))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT ((+ (((rt0.c0)LIKE(rt0.c4))))))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE ((((+ (((rt0.c0)LIKE(rt0.c4))))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((CAST(t1.c0 AS TEXT)) BETWEEN (x'ae914bba') AND ((~ (t1.c0))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((CAST(t1.c0 AS TEXT)) BETWEEN (x'ae914bba') AND ((~ (t1.c0))))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((((CAST(t1.c0 AS TEXT)) BETWEEN (x'ae914bba') AND ((~ (t1.c0))))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL rt0.c2, t1.c0 FROM t1, rt0 GROUP BY rt0.c2, t1.c0;
SELECT ALL rt0.c2, t1.c0 FROM t1, rt0 GROUP BY rt0.c2, t1.c0 HAVING ((((COUNT(rt0.c1))AND(((((COUNT(*))AND(COUNT(*))))AND(AVG(t1.c0))))))AND(((((GROUP_CONCAT(TOTAL(x'')))OR(MAX(MIN(rt0.c3)))))OR(MAX(rt0.c4))))) UNION ALL SELECT ALL rt0.c2, t1.c0 FROM t1, rt0 GROUP BY rt0.c2, t1.c0 HAVING (NOT (((((COUNT(rt0.c1))AND(((((COUNT(*))AND(COUNT(*))))AND(AVG(t1.c0))))))AND(((((GROUP_CONCAT(TOTAL(x'')))OR(MAX(MIN(rt0.c3)))))OR(MAX(rt0.c4))))))) UNION ALL SELECT rt0.c2, t1.c0 FROM t1, rt0 GROUP BY rt0.c2, t1.c0 HAVING ((((((COUNT(rt0.c1))AND(((((COUNT(*))AND(COUNT(*))))AND(AVG(t1.c0))))))AND(((((GROUP_CONCAT(TOTAL(x'')))OR(MAX(MIN(rt0.c3)))))OR(MAX(rt0.c4)))))) ISNULL);
SELECT * FROM t1;
SELECT * FROM t1 WHERE (CASE (t1.c0 IN (t1.c0))  WHEN t1.c0 THEN t1.c0 ELSE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) END) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (CASE (t1.c0 IN (t1.c0))  WHEN t1.c0 THEN t1.c0 ELSE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) END))) UNION ALL SELECT * FROM t1 WHERE (((CASE (t1.c0 IN (t1.c0))  WHEN t1.c0 THEN t1.c0 ELSE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) END) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT rt0.c0 FROM rt0, t1;
SELECT DISTINCT rt0.c0 FROM rt0, t1 WHERE ((((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c4))))%((((rt0.c4))>=((rt0.c4)))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 NOT INDEXED, t1 WHERE ((NOT ((((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c4))))%((((rt0.c4))>=((rt0.c4)))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0, t1 WHERE ((((((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c4))))%((((rt0.c4))>=((rt0.c4)))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (LIKELIHOOD(CAST(t1.c0 AS REAL), 0.7716758800713227)) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (LIKELIHOOD(CAST(t1.c0 AS REAL), 0.7716758800713227)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((LIKELIHOOD(CAST(t1.c0 AS REAL), 0.7716758800713227)) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL rt0.c3, rt0.c4 FROM rt0, t1 GROUP BY rt0.c3, rt0.c4;
SELECT rt0.c3, rt0.c4 FROM rt0, t1 GROUP BY rt0.c3, rt0.c4 HAVING (MAX(rt0.c2) IN ()) UNION ALL SELECT rt0.c3, rt0.c4 FROM rt0, t1 GROUP BY rt0.c3, rt0.c4 HAVING (NOT ((MAX(rt0.c2) IN ()))) UNION ALL SELECT rt0.c3, rt0.c4 FROM rt0, t1 GROUP BY rt0.c3, rt0.c4 HAVING (((MAX(rt0.c2) IN ())) ISNULL);
SELECT ALL rt0.c3, rt0.c4 FROM rt0, t1 GROUP BY rt0.c3, rt0.c4;
SELECT rt0.c3, rt0.c4 FROM rt0, t1 GROUP BY rt0.c3, rt0.c4 HAVING (MAX(rt0.c2) IN ()) UNION ALL SELECT rt0.c3, rt0.c4 FROM rt0, t1 GROUP BY rt0.c3, rt0.c4 HAVING (NOT ((MAX(rt0.c2) IN ()))) UNION ALL SELECT rt0.c3, rt0.c4 FROM rt0, t1 GROUP BY rt0.c3, rt0.c4 HAVING (((MAX(rt0.c2) IN ())) ISNULL);
SELECT ALL rt0.c3, rt0.c4 FROM rt0, t1 GROUP BY rt0.c3, rt0.c4;
SELECT ALL * FROM t1;
SELECT ALL * FROM t1 WHERE (((0.3517413639275372) NOT BETWEEN (t1.c0) AND ((t1.c0 IN ())))) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (((0.3517413639275372) NOT BETWEEN (t1.c0) AND ((t1.c0 IN ())))))) UNION ALL SELECT ALL * FROM t1 WHERE (((((0.3517413639275372) NOT BETWEEN (t1.c0) AND ((t1.c0 IN ())))) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CASE (NOT (rt0.c1))  WHEN ((rt0.c0)+(rt0.c0)) THEN (('-52613315')>>(rt0.c3)) WHEN ((rt0.c2) NOT NULL) THEN ((((((((rt0.c1)OR(rt0.c4)))OR(0Xffffffffad947a79)))OR(rt0.c4)))OR(rt0.c0)) WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) THEN rt0.c0 COLLATE BINARY ELSE ((rt0.c3)IS(rt0.c3)) END) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CASE (NOT (rt0.c1))  WHEN ((rt0.c0)+(rt0.c0)) THEN (('-52613315')>>(rt0.c3)) WHEN ((rt0.c2) NOT NULL) THEN ((((((((rt0.c1)OR(rt0.c4)))OR(0Xffffffffad947a79)))OR(rt0.c4)))OR(rt0.c0)) WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) THEN rt0.c0 COLLATE BINARY ELSE ((rt0.c3)IS(rt0.c3)) END))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE (NOT (rt0.c1))  WHEN ((rt0.c0)+(rt0.c0)) THEN (('-52613315')>>(rt0.c3)) WHEN ((rt0.c2) NOT NULL) THEN ((((((((rt0.c1)OR(rt0.c4)))OR(0xffffffffad947a79)))OR(rt0.c4)))OR(rt0.c0)) WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) THEN rt0.c0 COLLATE BINARY ELSE ((rt0.c3)IS(rt0.c3)) END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, t1.c0, rt0.c2 FROM rt0, t1 GROUP BY rt0.c0, t1.c0, rt0.c2;
SELECT rt0.c0, t1.c0, rt0.c2 FROM rt0, t1 WHERE ((NOT (CAST(rt0.c1 AS INTEGER)))) GROUP BY rt0.c0, t1.c0, rt0.c2 UNION SELECT rt0.c0, t1.c0, rt0.c2 FROM rt0, t1 WHERE ((NOT ((NOT (CAST(rt0.c1 AS INTEGER)))))) GROUP BY rt0.c0, t1.c0, rt0.c2 UNION SELECT rt0.c0, t1.c0, rt0.c2 FROM rt0, t1 WHERE ((((NOT (CAST(rt0.c1 AS INTEGER)))) ISNULL)) GROUP BY rt0.c0, t1.c0, rt0.c2;
SELECT rt0.c0, t1.c0, rt0.c2 FROM rt0, t1 GROUP BY rt0.c0, t1.c0, rt0.c2;
SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING (((SUM(rt0.c3))) NOT BETWEEN ((rt0.c3 COLLATE BINARY)) AND ((((((rt0.c1)OR('yyrW>qj')))AND(MAX(MIN(SUM(rt0.c2)))))))) UNION ALL SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING (NOT ((((SUM(rt0.c3))) NOT BETWEEN ((rt0.c3 COLLATE BINARY)) AND ((((((rt0.c1)OR('yyrW>qj')))AND(MAX(MIN(SUM(rt0.c2)))))))))) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING (((((SUM(rt0.c3))) NOT BETWEEN ((rt0.c3 COLLATE BINARY)) AND ((((((rt0.c1)OR('yyrW>qj')))AND(MAX(MIN(SUM(rt0.c2))))))))) ISNULL);
SELECT ALL t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (((NULL) ISNULL)) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((NULL) ISNULL)))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((((NULL) ISNULL)) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE (CASE rt0.c3  WHEN rt0.c4 THEN rt0.c3 ELSE 'X⪔^<B' END COLLATE BINARY) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT (CASE rt0.c3  WHEN rt0.c4 THEN rt0.c3 ELSE 'X⪔^<B' END COLLATE BINARY))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE (((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c3 ELSE 'X⪔^<B' END COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ((((((((t1.c0))<=(('-1870952851'))))OR(x'b2f4')))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c0 END))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((((((((t1.c0))<=(('-1870952851'))))OR(x'b2f4')))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c0 END))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((((((((((t1.c0))<=(('-1870952851'))))OR(x'b2f4')))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c0 END))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING '1e500' UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ('1e500')) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (('1e500') ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING '1e500' UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ('1e500')) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (('1e500') ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM t1 INNER JOIN rt0 ON CASE WHEN CAST(rt0.c3 AS INTEGER) THEN CASE rt0.c2  WHEN rt0.c2 THEN t1.c0 END ELSE ((t1.c0) IS FALSE) END;
SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM t1 INNER JOIN rt0 ON CASE WHEN CAST(rt0.c3 AS INTEGER) THEN CASE rt0.c2  WHEN rt0.c2 THEN t1.c0 END ELSE ((t1.c0) IS FALSE) END WHERE (((rt0.c1 IN ()) IN ())) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM t1 INNER JOIN rt0 ON CASE WHEN CAST(rt0.c3 AS INTEGER) THEN CASE rt0.c2  WHEN rt0.c2 THEN t1.c0 END ELSE ((t1.c0) IS FALSE) END WHERE ((NOT (((rt0.c1 IN ()) IN ())))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM t1 INNER JOIN rt0 ON CASE WHEN CAST(rt0.c3 AS INTEGER) THEN CASE rt0.c2  WHEN rt0.c2 THEN t1.c0 END ELSE ((t1.c0) IS FALSE) END WHERE (((((rt0.c1 IN ()) IN ())) ISNULL));
SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM t1 INNER JOIN rt0 ON CASE WHEN CAST(rt0.c3 AS INTEGER) THEN CASE rt0.c2  WHEN rt0.c2 THEN t1.c0 END ELSE ((t1.c0) IS FALSE) END;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((CAST(t1.c0 AS REAL))IS NOT(((t1.c0)==(t1.c0))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((CAST(t1.c0 AS REAL))IS NOT(((t1.c0)==(t1.c0))))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((CAST(t1.c0 AS REAL))IS NOT(((t1.c0)==(t1.c0))))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (NULL) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (NULL))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((NULL) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL rt0.c2 FROM rt0 CROSS JOIN t1 ON ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN ((- (t1.c0))) AND (CASE NULL  WHEN t1.c0 THEN NULL ELSE rt0.c2 END)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 CROSS JOIN t1 ON ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN ((- (t1.c0))) AND (CASE NULL  WHEN t1.c0 THEN NULL ELSE rt0.c2 END)) GROUP BY rt0.c2 HAVING CAST(rt0.c4 AS BLOB) UNION ALL SELECT ALL rt0.c2 FROM rt0 CROSS JOIN t1 ON ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN ((- (t1.c0))) AND (CASE NULL  WHEN t1.c0 THEN NULL ELSE rt0.c2 END)) GROUP BY rt0.c2 HAVING (NOT (CAST(rt0.c4 AS BLOB))) UNION ALL SELECT ALL rt0.c2 FROM rt0 CROSS JOIN t1 ON ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN ((- (t1.c0))) AND (CASE NULL  WHEN t1.c0 THEN NULL ELSE rt0.c2 END)) GROUP BY rt0.c2 HAVING ((CAST(rt0.c4 AS BLOB)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 CROSS JOIN t1 ON ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN ((- (t1.c0))) AND (CASE NULL  WHEN t1.c0 THEN NULL ELSE rt0.c2 END)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 CROSS JOIN t1 ON ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN ((- (t1.c0))) AND (CASE NULL  WHEN t1.c0 THEN NULL ELSE rt0.c2 END)) GROUP BY rt0.c2 HAVING CAST(rt0.c4 AS BLOB) UNION ALL SELECT ALL rt0.c2 FROM rt0 CROSS JOIN t1 ON ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN ((- (t1.c0))) AND (CASE NULL  WHEN t1.c0 THEN NULL ELSE rt0.c2 END)) GROUP BY rt0.c2 HAVING (NOT (CAST(rt0.c4 AS BLOB))) UNION ALL SELECT ALL rt0.c2 FROM rt0 CROSS JOIN t1 ON ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN ((- (t1.c0))) AND (CASE NULL  WHEN t1.c0 THEN NULL ELSE rt0.c2 END)) GROUP BY rt0.c2 HAVING ((CAST(rt0.c4 AS BLOB)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 CROSS JOIN t1 ON ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN ((- (t1.c0))) AND (CASE NULL  WHEN t1.c0 THEN NULL ELSE rt0.c2 END)) GROUP BY rt0.c2;
SELECT ALL MAX(rt0.c2) FROM t1, rt0 ORDER BY CAST(((NULL) IS TRUE) AS BLOB)  NULLS LAST;
SELECT * FROM rt0, t1;
SELECT * FROM rt0, t1 WHERE ((~ (((rt0.c3) NOT BETWEEN (rt0.c3) AND (-1971933807))))) UNION ALL SELECT * FROM rt0, t1 WHERE ((NOT ((~ (((rt0.c3) NOT BETWEEN (rt0.c3) AND (-1971933807))))))) UNION ALL SELECT ALL * FROM rt0, t1 WHERE ((((~ (((rt0.c3) NOT BETWEEN (rt0.c3) AND (-1971933807))))) ISNULL));
SELECT * FROM rt0, t1;
SELECT DISTINCT * FROM rt0, t1;
SELECT DISTINCT * FROM rt0, t1 WHERE (CAST(((t1.c0)%(t1.c0)) AS BLOB)) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((NOT (CAST(((t1.c0)%(t1.c0)) AS BLOB)))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE (((CAST(((t1.c0)%(t1.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt0, t1;
SELECT rt0.c2 FROM rt0, t1 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, t1 WHERE (CASE 3.599441102696277E-4  WHEN ((((t1.c0)AND(rt0.c2)))OR(rt0.c3)) THEN CAST(rt0.c2 AS TEXT) WHEN rt0.c1 THEN (((rt0.c1))<=((rt0.c0))) WHEN ((rt0.c1) ISNULL) THEN (((rt0.c4)) NOT BETWEEN (('l䆊,HzV')) AND ((rt0.c4))) ELSE ((rt0.c0)>(t1.c0)) END) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, t1 WHERE ((NOT (CASE 3.599441102696277E-4  WHEN ((((t1.c0)AND(rt0.c2)))OR(rt0.c3)) THEN CAST(rt0.c2 AS TEXT) WHEN rt0.c1 THEN (((rt0.c1))<=((rt0.c0))) WHEN ((rt0.c1) ISNULL) THEN (((rt0.c4)) NOT BETWEEN (('l䆊,HzV')) AND ((rt0.c4))) ELSE ((rt0.c0)>(t1.c0)) END))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, t1 WHERE (((CASE 3.599441102696277E-4  WHEN ((((t1.c0)AND(rt0.c2)))OR(rt0.c3)) THEN CAST(rt0.c2 AS TEXT) WHEN rt0.c1 THEN (((rt0.c1))<=((rt0.c0))) WHEN ((rt0.c1) ISNULL) THEN (((rt0.c4)) NOT BETWEEN (('l䆊,HzV')) AND ((rt0.c4))) ELSE ((rt0.c0)>(t1.c0)) END) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, t1 GROUP BY rt0.c2;
SELECT ALL rt0.c0, t1.c0, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY rt0.c0, t1.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, t1.c0, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY rt0.c0, t1.c0, rt0.c1, rt0.c2 HAVING TOTAL(COUNT(NULL)) UNION ALL SELECT ALL rt0.c0, t1.c0, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY rt0.c0, t1.c0, rt0.c1, rt0.c2 HAVING (NOT (TOTAL(COUNT(NULL)))) UNION ALL SELECT rt0.c0, t1.c0, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY rt0.c0, t1.c0, rt0.c1, rt0.c2 HAVING ((TOTAL(COUNT(NULL))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c4)/(rt0.c4))) IS TRUE)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c4)/(rt0.c4))) IS TRUE)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c4)/(rt0.c4))) IS TRUE)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0 WHERE (CAST(CASE WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c1 END AS INTEGER)) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT (CAST(CASE WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c1 END AS INTEGER)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0 WHERE (((CAST(CASE WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c1 END AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0;
SELECT ALL rt0.c2, t1.c0 FROM t1, rt0 GROUP BY rt0.c2, t1.c0;
SELECT rt0.c2, t1.c0 FROM t1, rt0 WHERE (NULLIF(DISTINCT CASE WHEN rt0.c4 THEN rt0.c4 END, CAST(rt0.c3 AS REAL))) GROUP BY rt0.c2, t1.c0 UNION SELECT rt0.c2, t1.c0 FROM t1, rt0 WHERE ((NOT (NULLIF(DISTINCT CASE WHEN rt0.c4 THEN rt0.c4 END, CAST(rt0.c3 AS REAL))))) GROUP BY rt0.c2, t1.c0 UNION SELECT rt0.c2, t1.c0 FROM t1, rt0 WHERE (((NULLIF(DISTINCT CASE WHEN rt0.c4 THEN rt0.c4 END, CAST(rt0.c3 AS REAL))) ISNULL)) GROUP BY rt0.c2, t1.c0;
SELECT ALL rt0.c2, t1.c0 FROM t1, rt0 GROUP BY rt0.c2, t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING CAST((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) AS TEXT) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (CAST((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) AS TEXT))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((CAST((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) AS TEXT)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING CAST((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) AS TEXT) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (CAST((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) AS TEXT))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((CAST((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) AS TEXT)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0, rt0.c4 FROM t1, rt0;
SELECT t1.c0, rt0.c4 FROM t1, rt0 WHERE (0.7192077573712031) UNION ALL SELECT ALL t1.c0, rt0.c4 FROM t1, rt0 WHERE ((NOT (0.7192077573712031))) UNION ALL SELECT t1.c0, rt0.c4 FROM t1, rt0 WHERE (((0.7192077573712031) ISNULL));
SELECT ALL t1.c0, rt0.c4 FROM t1, rt0;
SELECT DISTINCT * FROM t1 NATURAL JOIN rt0;
SELECT DISTINCT * FROM t1 NATURAL JOIN rt0 WHERE (CASE WHEN ((rt0.c0) NOT NULL) THEN rt0.c1 ELSE CAST(rt0.c2 AS BLOB) END) UNION SELECT DISTINCT * FROM t1 NATURAL JOIN rt0 WHERE ((NOT (CASE WHEN ((rt0.c0) NOT NULL) THEN rt0.c1 ELSE CAST(rt0.c2 AS BLOB) END))) UNION SELECT DISTINCT * FROM t1 NATURAL JOIN rt0 WHERE (((CASE WHEN ((rt0.c0) NOT NULL) THEN rt0.c1 ELSE CAST(rt0.c2 AS BLOB) END) ISNULL));
SELECT DISTINCT * FROM t1 NATURAL JOIN rt0;
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0, t1.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0, t1.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0, t1.c0 FROM rt0, t1 WHERE ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)) IN (CAST(rt0.c3 AS NUMERIC)))) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0, t1.c0 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0, t1.c0 FROM rt0, t1 WHERE ((NOT ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)) IN (CAST(rt0.c3 AS NUMERIC)))))) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0, t1.c0 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0, t1.c0 FROM rt0 NOT INDEXED, t1 WHERE ((((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)) IN (CAST(rt0.c3 AS NUMERIC)))) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0, t1.c0;
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0, t1.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0, t1.c0;
SELECT rt0.c0, rt0.c3, rt0.c4, t1.c0, rt0.c1 FROM rt0 INNER JOIN t1 ON ((NULL)IS((- (rt0.c1)))) GROUP BY rt0.c0, rt0.c3, rt0.c4, t1.c0, rt0.c1;
SELECT rt0.c0, rt0.c3, rt0.c4, t1.c0, rt0.c1 FROM rt0 INNER JOIN t1 ON ((NULL)IS((- (rt0.c1)))) GROUP BY rt0.c0, rt0.c3, rt0.c4, t1.c0, rt0.c1 HAVING rt0.c4 UNION ALL SELECT rt0.c0, rt0.c3, rt0.c4, t1.c0, rt0.c1 FROM rt0 INNER JOIN t1 ON ((NULL)IS((- (rt0.c1)))) GROUP BY rt0.c0, rt0.c3, rt0.c4, t1.c0, rt0.c1 HAVING (NOT (rt0.c4)) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c4, t1.c0, rt0.c1 FROM rt0 INNER JOIN t1 ON ((NULL)IS((- (rt0.c1)))) GROUP BY rt0.c0, rt0.c3, rt0.c4, t1.c0, rt0.c1 HAVING ((rt0.c4) ISNULL);
SELECT rt0.c0, rt0.c3, rt0.c4, t1.c0, rt0.c1 FROM rt0 INNER JOIN t1 ON ((NULL)IS((- (rt0.c1)))) GROUP BY rt0.c0, rt0.c3, rt0.c4, t1.c0, rt0.c1;
SELECT rt0.c0, rt0.c3, rt0.c4, t1.c0, rt0.c1 FROM rt0 INNER JOIN t1 ON ((NULL)IS((- (rt0.c1)))) GROUP BY rt0.c0, rt0.c3, rt0.c4, t1.c0, rt0.c1 HAVING rt0.c4 UNION ALL SELECT rt0.c0, rt0.c3, rt0.c4, t1.c0, rt0.c1 FROM rt0 INNER JOIN t1 ON ((NULL)IS((- (rt0.c1)))) GROUP BY rt0.c0, rt0.c3, rt0.c4, t1.c0, rt0.c1 HAVING (NOT (rt0.c4)) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c4, t1.c0, rt0.c1 FROM rt0 INNER JOIN t1 ON ((NULL)IS((- (rt0.c1)))) GROUP BY rt0.c0, rt0.c3, rt0.c4, t1.c0, rt0.c1 HAVING ((rt0.c4) ISNULL);
SELECT rt0.c0, rt0.c3, rt0.c4, t1.c0, rt0.c1 FROM rt0 INNER JOIN t1 ON ((NULL)IS((- (rt0.c1)))) GROUP BY rt0.c0, rt0.c3, rt0.c4, t1.c0, rt0.c1;
SELECT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (((((((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))AND(((t1.c0) ISNULL))))OR((+ (t1.c0)))))AND((NOT (t1.c0)))))AND(((t1.c0)<<(t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT (((((((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))AND(((t1.c0) ISNULL))))OR((+ (t1.c0)))))AND((NOT (t1.c0)))))AND(((t1.c0)<<(t1.c0))))))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE (((((((((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))AND(((t1.c0) ISNULL))))OR((+ (t1.c0)))))AND((NOT (t1.c0)))))AND(((t1.c0)<<(t1.c0))))) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE (((((rt0.c1) NOTNULL))GLOB(((rt0.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT (((((rt0.c1) NOTNULL))GLOB(((rt0.c0) NOTNULL)))))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE (((((((rt0.c1) NOTNULL))GLOB(((rt0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) AND ((t1.c0)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((((t1.c0)) NOT BETWEEN ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) AND ((t1.c0)))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) AND ((t1.c0)))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, rt0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, rt0 GROUP BY t1.c0 HAVING (rt0.c3 COLLATE BINARY IN ((~ (rt0.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1, rt0 GROUP BY t1.c0 HAVING (NOT ((rt0.c3 COLLATE BINARY IN ((~ (rt0.c0)))))) UNION ALL SELECT t1.c0 FROM t1, rt0 GROUP BY t1.c0 HAVING (((rt0.c3 COLLATE BINARY IN ((~ (rt0.c0))))) ISNULL);
SELECT ALL t1.c0 FROM t1, rt0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, rt0 GROUP BY t1.c0 HAVING (rt0.c3 COLLATE BINARY IN ((~ (rt0.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1, rt0 GROUP BY t1.c0 HAVING (NOT ((rt0.c3 COLLATE BINARY IN ((~ (rt0.c0)))))) UNION ALL SELECT t1.c0 FROM t1, rt0 GROUP BY t1.c0 HAVING (((rt0.c3 COLLATE BINARY IN ((~ (rt0.c0))))) ISNULL);
SELECT ALL t1.c0 FROM t1, rt0 GROUP BY t1.c0;
SELECT rt0.c0 FROM rt0 NOT INDEXED NATURAL JOIN t1;
SELECT rt0.c0 FROM rt0 NATURAL JOIN t1 WHERE (CASE WHEN ((t1.c0)||(rt0.c0)) THEN ((NULL) NOTNULL) WHEN LTRIM(rt0.c1) THEN (('i<n\\z RY')<<(rt0.c2)) WHEN CHANGES() THEN json_extract(rt0.c0, rt0.c3, rt0.c1, NULL) END) UNION ALL SELECT rt0.c0 FROM rt0 NATURAL JOIN t1 WHERE ((NOT (CASE WHEN ((t1.c0)||(rt0.c0)) THEN ((NULL) NOTNULL) WHEN LTRIM(rt0.c1) THEN (('i<n\\z RY')<<(rt0.c2)) WHEN CHANGES() THEN json_extract(rt0.c0, rt0.c3, rt0.c1, NULL) END))) UNION ALL SELECT rt0.c0 FROM rt0 NATURAL JOIN t1 WHERE (((CASE WHEN ((t1.c0)||(rt0.c0)) THEN ((NULL) NOTNULL) WHEN LTRIM(rt0.c1) THEN (('i<n\\z RY')<<(rt0.c2)) WHEN CHANGES() THEN json_extract(rt0.c0, rt0.c3, rt0.c1, NULL) END) ISNULL));
SELECT rt0.c0 FROM rt0 NOT INDEXED NATURAL JOIN t1;
SELECT DISTINCT * FROM rt0, t1;
SELECT DISTINCT * FROM rt0, t1 WHERE ((rt0.c0 IN (rt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((NOT ((rt0.c0 IN (rt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((((rt0.c0 IN (rt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0, t1;
SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c0 FROM t1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c0 FROM t1, rt0 WHERE (CASE (('琘WF옴8') BETWEEN (-2139034716) AND (rt0.c1))  WHEN ((rt0.c0)||(0Xffffffffdaaf91fd)) THEN ((rt0.c2) NOT BETWEEN (0.23418830368480315) AND (rt0.c1)) END) GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c0 FROM t1, rt0 WHERE ((NOT (CASE (('琘WF옴8') BETWEEN (-2139034716) AND (rt0.c1))  WHEN ((rt0.c0)||(0Xffffffffdaaf91fd)) THEN ((rt0.c2) NOT BETWEEN (0.23418830368480315) AND (rt0.c1)) END))) GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c0 FROM t1, rt0 WHERE (((CASE (('琘WF옴8') BETWEEN (-2139034716) AND (rt0.c1))  WHEN ((rt0.c0)||(0xffffffffdaaf91fd)) THEN ((rt0.c2) NOT BETWEEN (0.23418830368480315) AND (rt0.c1)) END) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c0 FROM t1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0;
SELECT ALL rt0.c4, rt0.c1 FROM rt0 NATURAL JOIN t1 GROUP BY rt0.c4, rt0.c1;
SELECT ALL rt0.c4, rt0.c1 FROM rt0 NATURAL JOIN t1 GROUP BY rt0.c4, rt0.c1 HAVING ((((((MAX(SUM(rt0.c1)))OR(MIN(NULL))))AND(COUNT(AVG(rt0.c3))))) ISNULL) UNION ALL SELECT rt0.c4, rt0.c1 FROM rt0 NATURAL JOIN t1 GROUP BY rt0.c4, rt0.c1 HAVING (NOT (((((((MAX(SUM(rt0.c1)))OR(MIN(NULL))))AND(COUNT(AVG(rt0.c3))))) ISNULL))) UNION ALL SELECT rt0.c4, rt0.c1 FROM rt0 NATURAL JOIN t1 GROUP BY rt0.c4, rt0.c1 HAVING ((((((((MAX(SUM(rt0.c1)))OR(MIN(NULL))))AND(COUNT(AVG(rt0.c3))))) ISNULL)) ISNULL);
SELECT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (CAST(t1.c0 AS BLOB) COLLATE RTRIM) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (CAST(t1.c0 AS BLOB) COLLATE RTRIM))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((CAST(t1.c0 AS BLOB) COLLATE RTRIM) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT rt0.c2, rt0.c4, t1.c0, rt0.c3, rt0.c0, rt0.c1 FROM rt0, t1;
SELECT DISTINCT rt0.c2, rt0.c4, t1.c0, rt0.c3, rt0.c0, rt0.c1 FROM rt0, t1 WHERE ('1834526888') UNION SELECT DISTINCT rt0.c2, rt0.c4, t1.c0, rt0.c3, rt0.c0, rt0.c1 FROM rt0, t1 WHERE ((NOT ('1834526888'))) UNION SELECT DISTINCT rt0.c2, rt0.c4, t1.c0, rt0.c3, rt0.c0, rt0.c1 FROM rt0, t1 WHERE ((('1834526888') ISNULL));
SELECT DISTINCT rt0.c2, rt0.c4, t1.c0, rt0.c3, rt0.c0, rt0.c1 FROM rt0, t1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE ((((t1.c0)) BETWEEN ((CAST('1484814411' AS BLOB))) AND ((t1.c0)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((((t1.c0)) BETWEEN ((CAST('1484814411' AS BLOB))) AND ((t1.c0)))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((((((t1.c0)) BETWEEN ((CAST('1484814411' AS BLOB))) AND ((t1.c0)))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0, rt0.c2, rt0.c0 FROM t1, rt0 GROUP BY t1.c0, rt0.c2, rt0.c0;
SELECT t1.c0, rt0.c2, rt0.c0 FROM t1, rt0 GROUP BY t1.c0, rt0.c2, rt0.c0 HAVING CASE WHEN ((AVG(MIN(COUNT(t1.c0)))) NOT BETWEEN (rt0.c1) AND (MIN(t1.c0))) THEN AVG(COUNT(*)) ELSE AVG(rt0.c0) END UNION ALL SELECT ALL t1.c0, rt0.c2, rt0.c0 FROM t1, rt0 GROUP BY t1.c0, rt0.c2, rt0.c0 HAVING (NOT (CASE WHEN ((AVG(MIN(COUNT(t1.c0)))) NOT BETWEEN (rt0.c1) AND (MIN(t1.c0))) THEN AVG(COUNT(*)) ELSE AVG(rt0.c0) END)) UNION ALL SELECT ALL t1.c0, rt0.c2, rt0.c0 FROM t1, rt0 GROUP BY t1.c0, rt0.c2, rt0.c0 HAVING ((CASE WHEN ((AVG(MIN(COUNT(t1.c0)))) NOT BETWEEN (rt0.c1) AND (MIN(t1.c0))) THEN AVG(COUNT(*)) ELSE AVG(rt0.c0) END) ISNULL);
SELECT * FROM rt0, t1;
SELECT * FROM rt0, t1 NOT INDEXED WHERE (rt0.c1) UNION ALL SELECT * FROM rt0, t1 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM rt0, t1 WHERE (((rt0.c1) ISNULL));
SELECT * FROM rt0, t1;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM t1, rt0;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM t1, rt0 WHERE (((((((((t1.c0)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM t1, rt0 WHERE ((NOT (((((((((t1.c0)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM t1 NOT INDEXED, rt0 WHERE (((((((((((t1.c0)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM t1, rt0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((((t1.c0)<<(t1.c0))) NOTNULL)) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((((t1.c0)<<(t1.c0))) NOTNULL)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((((t1.c0)<<(t1.c0))) NOTNULL)) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c3;
SELECT ALL rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c3 HAVING (((COUNT(NULL))) BETWEEN (((+ (x'')))) AND ((TOTAL(COUNT(*))))) UNION ALL SELECT ALL rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c3 HAVING (NOT ((((COUNT(NULL))) BETWEEN (((+ (x'')))) AND ((TOTAL(COUNT(*))))))) UNION ALL SELECT ALL rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c3 HAVING (((((COUNT(NULL))) BETWEEN (((+ (x'')))) AND ((TOTAL(COUNT(*)))))) ISNULL);
SELECT ALL * FROM t1;
SELECT * FROM t1 WHERE (((t1.c0) IS TRUE) COLLATE BINARY) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (((t1.c0) IS TRUE) COLLATE BINARY))) UNION ALL SELECT ALL * FROM t1 WHERE (((((t1.c0) IS TRUE) COLLATE BINARY) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE ((((rt0.c4, rt0.c4, t1.c0)) BETWEEN ((NULL, CAST(t1.c0 AS TEXT), (rt0.c0 IN ()))) AND ((CAST(rt0.c4 AS INTEGER), IFNULL(rt0.c2, rt0.c4), (rt0.c3 IN ()))))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT ((((rt0.c4, rt0.c4, t1.c0)) BETWEEN ((NULL, CAST(t1.c0 AS TEXT), (rt0.c0 IN ()))) AND ((CAST(rt0.c4 AS INTEGER), IFNULL(rt0.c2, rt0.c4), (rt0.c3 IN ()))))))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((((((rt0.c4, rt0.c4, t1.c0)) BETWEEN ((NULL, CAST(t1.c0 AS TEXT), (rt0.c0 IN ()))) AND ((CAST(rt0.c4 AS INTEGER), IFNULL(rt0.c2, rt0.c4), (rt0.c3 IN ()))))) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ((((t1.c0 IN ())) IS FALSE)) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((((t1.c0 IN ())) IS FALSE)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((((((t1.c0 IN ())) IS FALSE)) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1 HAVING MAX(MAX(rt0.c4)) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1 HAVING (NOT (MAX(MAX(rt0.c4)))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1 HAVING ((MAX(MAX(rt0.c4))) ISNULL);
SELECT ALL rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0) IS TRUE)) NOT NULL)) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0) IS TRUE)) NOT NULL)))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c0) IS TRUE)) NOT NULL)) ISNULL));
SELECT ALL rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0 WHERE ((((((0.6554963616104539))<=((rt0.c2)))) NOTNULL)) UNION SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT ((((((0.6554963616104539))<=((rt0.c2)))) NOTNULL)))) UNION SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0 WHERE ((((((((0.6554963616104539))<=((rt0.c2)))) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM t1, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM t1, rt0 WHERE (((rt0.c2)>(((rt0.c3) BETWEEN (rt0.c2) AND (NULL))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM t1, rt0 WHERE ((NOT (((rt0.c2)>(((rt0.c3) BETWEEN (rt0.c2) AND (NULL))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM t1, rt0 WHERE (((((rt0.c2)>(((rt0.c3) BETWEEN (rt0.c2) AND (NULL))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM t1, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c4, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c4, rt0.c1 HAVING (((COUNT(AVG(SUM(rt0.c2))), COUNT(*), COUNT(rt0.c2), COUNT(*), TOTAL(rt0.c3), COUNT(*), rt0.c2)) BETWEEN ((COUNT(*), MIN(TOTAL(TOTAL(AVG(TOTAL(rt0.c4))))), CASE MIN(rt0.c4)  WHEN x'' THEN rt0.c0 WHEN '-274926542' THEN COUNT(*) WHEN rt0.c4 THEN AVG(x'') END, MAX(AVG(rt0.c1)), MAX(COUNT(*)), COUNT(*), NULL)) AND ((MIN(MAX(rt0.c3)), MIN(AVG(rt0.c0)), MIN(rt0.c3), COUNT(*), MAX(rt0.c0), SUM(rt0.c2), GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c4, rt0.c1 HAVING (NOT ((((COUNT(AVG(SUM(rt0.c2))), COUNT(*), COUNT(rt0.c2), COUNT(*), TOTAL(rt0.c3), COUNT(*), rt0.c2)) BETWEEN ((COUNT(*), MIN(TOTAL(TOTAL(AVG(TOTAL(rt0.c4))))), CASE MIN(rt0.c4)  WHEN x'' THEN rt0.c0 WHEN '-274926542' THEN COUNT(*) WHEN rt0.c4 THEN AVG(x'') END, MAX(AVG(rt0.c1)), MAX(COUNT(*)), COUNT(*), NULL)) AND ((MIN(MAX(rt0.c3)), MIN(AVG(rt0.c0)), MIN(rt0.c3), COUNT(*), MAX(rt0.c0), SUM(rt0.c2), GROUP_CONCAT(rt0.c0)))))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c4, rt0.c1 HAVING (((((COUNT(AVG(SUM(rt0.c2))), COUNT(*), COUNT(rt0.c2), COUNT(*), TOTAL(rt0.c3), COUNT(*), rt0.c2)) BETWEEN ((COUNT(*), MIN(TOTAL(TOTAL(AVG(TOTAL(rt0.c4))))), CASE MIN(rt0.c4)  WHEN x'' THEN rt0.c0 WHEN '-274926542' THEN COUNT(*) WHEN rt0.c4 THEN AVG(x'') END, MAX(AVG(rt0.c1)), MAX(COUNT(*)), COUNT(*), NULL)) AND ((MIN(MAX(rt0.c3)), MIN(AVG(rt0.c0)), MIN(rt0.c3), COUNT(*), MAX(rt0.c0), SUM(rt0.c2), GROUP_CONCAT(rt0.c0))))) ISNULL);
SELECT * FROM t1;
SELECT * FROM t1 WHERE ((((- (t1.c0))) ISNULL)) UNION ALL SELECT * FROM t1 WHERE ((NOT ((((- (t1.c0))) ISNULL)))) UNION ALL SELECT ALL * FROM t1 WHERE ((((((- (t1.c0))) ISNULL)) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND ('-221846296')))))OR((NOT (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND ('-221846296')))))OR((NOT (rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND ('-221846296')))))OR((NOT (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT t1.c0, rt0.c1, rt0.c2 FROM t1 INNER JOIN rt0 ON ((((t1.c0) NOT NULL))>=(rt0.c1)) GROUP BY t1.c0, rt0.c1, rt0.c2;
SELECT t1.c0, rt0.c1, rt0.c2 FROM t1 INNER JOIN rt0 ON ((((t1.c0) NOT NULL))>=(rt0.c1)) WHERE (UPPER(DISTINCT CAST(rt0.c4 AS INTEGER))) GROUP BY t1.c0, rt0.c1, rt0.c2 UNION SELECT t1.c0, rt0.c1, rt0.c2 FROM t1 INNER JOIN rt0 ON ((((t1.c0) NOT NULL))>=(rt0.c1)) WHERE ((NOT (UPPER(DISTINCT CAST(rt0.c4 AS INTEGER))))) GROUP BY t1.c0, rt0.c1, rt0.c2 UNION SELECT ALL t1.c0, rt0.c1, rt0.c2 FROM t1 INNER JOIN rt0 ON ((((t1.c0) NOT NULL))>=(rt0.c1)) WHERE (((UPPER(DISTINCT CAST(rt0.c4 AS INTEGER))) ISNULL)) GROUP BY t1.c0, rt0.c1, rt0.c2;
SELECT t1.c0, rt0.c1, rt0.c2 FROM t1 INNER JOIN rt0 ON ((((t1.c0) NOT NULL))>=(rt0.c1)) GROUP BY t1.c0, rt0.c1, rt0.c2;
SELECT ALL t1.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM t1, rt0 GROUP BY t1.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3;
SELECT t1.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM t1, rt0 GROUP BY t1.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 HAVING ((((((TOTAL(rt0.c1))|(rt0.c3)))AND(SUM(MIN(MIN(rt0.c3))))))AND(MAX(SUM(TOTAL(COUNT(*)))))) UNION ALL SELECT t1.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM t1, rt0 GROUP BY t1.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 HAVING (NOT (((((((TOTAL(rt0.c1))|(rt0.c3)))AND(SUM(MIN(MIN(rt0.c3))))))AND(MAX(SUM(TOTAL(COUNT(*)))))))) UNION ALL SELECT t1.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM t1, rt0 GROUP BY t1.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 HAVING ((((((((TOTAL(rt0.c1))|(rt0.c3)))AND(SUM(MIN(MIN(rt0.c3))))))AND(MAX(SUM(TOTAL(COUNT(*))))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((((rt0.c0))<=((rt0.c3))))%((rt0.c1 IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((((rt0.c0))<=((rt0.c3))))%((rt0.c1 IN ())))))) UNION ALL SELECT * FROM rt0 WHERE ((((((((rt0.c0))<=((rt0.c3))))%((rt0.c1 IN ())))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0, t1;
SELECT DISTINCT * FROM rt0, t1 WHERE (((rt0.c0 COLLATE RTRIM) ISNULL)) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((NOT (((rt0.c0 COLLATE RTRIM) ISNULL)))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE (((((rt0.c0 COLLATE RTRIM) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, t1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (CASE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c4 END  WHEN ((rt0.c0)IS NOT(rt0.c0)) THEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)) END) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (CASE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c4 END  WHEN ((rt0.c0)IS NOT(rt0.c0)) THEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)) END))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((CASE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c4 END  WHEN ((rt0.c0)IS NOT(rt0.c0)) THEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)) END) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c4, rt0.c1, t1.c0 FROM t1, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c4, rt0.c1, t1.c0;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c4, rt0.c1, t1.c0 FROM t1, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c4, rt0.c1, t1.c0 HAVING (NOT (CASE AVG(rt0.c4)  WHEN GROUP_CONCAT(AVG(rt0.c0)) THEN rt0.c2 END)) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c4, rt0.c1, t1.c0 FROM t1, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c4, rt0.c1, t1.c0 HAVING (NOT ((NOT (CASE AVG(rt0.c4)  WHEN GROUP_CONCAT(AVG(rt0.c0)) THEN rt0.c2 END)))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c4, rt0.c1, t1.c0 FROM t1, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c4, rt0.c1, t1.c0 HAVING (((NOT (CASE AVG(rt0.c4)  WHEN GROUP_CONCAT(AVG(rt0.c0)) THEN rt0.c2 END))) ISNULL);
SELECT t1.c0, rt0.c2, rt0.c3, rt0.c1 FROM t1, rt0;
SELECT t1.c0, rt0.c2, rt0.c3, rt0.c1 FROM t1, rt0 WHERE (CAST('' AS NUMERIC) COLLATE NOCASE) UNION ALL SELECT t1.c0, rt0.c2, rt0.c3, rt0.c1 FROM t1, rt0 WHERE ((NOT (CAST('' AS NUMERIC) COLLATE NOCASE))) UNION ALL SELECT ALL t1.c0, rt0.c2, rt0.c3, rt0.c1 FROM t1, rt0 WHERE (((CAST('' AS NUMERIC) COLLATE NOCASE) ISNULL));
SELECT t1.c0, rt0.c2, rt0.c3, rt0.c1 FROM t1, rt0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (CASE (NOT (t1.c0))  WHEN UPPER(NULL) THEN ((t1.c0)>=(t1.c0)) ELSE (NOT (t1.c0)) END) UNION SELECT DISTINCT t1.c0 FROM t1 NOT INDEXED WHERE ((NOT (CASE (NOT (t1.c0))  WHEN UPPER(NULL) THEN ((t1.c0)>=(t1.c0)) ELSE (NOT (t1.c0)) END))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((CASE (NOT (t1.c0))  WHEN UPPER(NULL) THEN ((t1.c0)>=(t1.c0)) ELSE (NOT (t1.c0)) END) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL rt0.c0, t1.c0 FROM rt0 INNER JOIN t1 ON ((((rt0.c3) IS TRUE))*(rt0.c3 COLLATE BINARY)) GROUP BY rt0.c0, t1.c0;
SELECT ALL rt0.c0, t1.c0 FROM rt0 INNER JOIN t1 ON ((((rt0.c3) IS TRUE))*(rt0.c3 COLLATE BINARY)) WHERE ((+ (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3))))) GROUP BY rt0.c0, t1.c0 UNION SELECT ALL rt0.c0, t1.c0 FROM rt0 INNER JOIN t1 ON ((((rt0.c3) IS TRUE))*(rt0.c3 COLLATE BINARY)) WHERE ((NOT ((+ (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3))))))) GROUP BY rt0.c0, t1.c0 UNION SELECT rt0.c0, t1.c0 FROM rt0 INNER JOIN t1 ON ((((rt0.c3) IS TRUE))*(rt0.c3 COLLATE BINARY)) WHERE ((((+ (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3))))) ISNULL)) GROUP BY rt0.c0, t1.c0;
SELECT ALL rt0.c0, t1.c0 FROM rt0 INNER JOIN t1 ON ((((rt0.c3) IS TRUE))*(rt0.c3 COLLATE BINARY)) GROUP BY rt0.c0, t1.c0;
SELECT rt0.c1, t1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0, t1 GROUP BY rt0.c1, t1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c4;
SELECT ALL rt0.c1, t1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0, t1 GROUP BY rt0.c1, t1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c4 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, t1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0, t1 GROUP BY rt0.c1, t1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, t1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0, t1 GROUP BY rt0.c1, t1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, t1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0, t1 GROUP BY rt0.c1, t1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c4;
SELECT ALL rt0.c1, t1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0, t1 GROUP BY rt0.c1, t1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c4 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, t1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0, t1 GROUP BY rt0.c1, t1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, t1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0, t1 GROUP BY rt0.c1, t1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, t1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0, t1 GROUP BY rt0.c1, t1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c4;
SELECT rt0.c3, t1.c0, rt0.c0, rt0.c1 FROM rt0, t1;
SELECT rt0.c3, t1.c0, rt0.c0, rt0.c1 FROM rt0, t1 WHERE (((((((((rt0.c4)OR(rt0.c0)))OR(rt0.c0)))AND(((rt0.c1) BETWEEN ('⋶IHm쑝s') AND (rt0.c0)))))AND(CAST(rt0.c1 AS BLOB)))) UNION ALL SELECT rt0.c3, t1.c0, rt0.c0, rt0.c1 FROM rt0, t1 WHERE ((NOT (((((((((rt0.c4)OR(rt0.c0)))OR(rt0.c0)))AND(((rt0.c1) BETWEEN ('⋶IHm쑝s') AND (rt0.c0)))))AND(CAST(rt0.c1 AS BLOB)))))) UNION ALL SELECT ALL rt0.c3, t1.c0, rt0.c0, rt0.c1 FROM rt0, t1 WHERE (((((((((((rt0.c4)OR(rt0.c0)))OR(rt0.c0)))AND(((rt0.c1) BETWEEN ('⋶IHm쑝s') AND (rt0.c0)))))AND(CAST(rt0.c1 AS BLOB)))) ISNULL));
SELECT rt0.c3, t1.c0, rt0.c0, rt0.c1 FROM rt0, t1;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM t1 INNER JOIN rt0 ON ((rt0.c4) NOTNULL);
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM t1 INNER JOIN rt0 ON ((rt0.c4) NOTNULL) WHERE (NULLIF(highlight(1.51057458E8, rt0.c3, rt0.c0, rt0.c4), (((t1.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c0)) AND ((rt0.c1, rt0.c0, ''))))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM t1 INNER JOIN rt0 ON ((rt0.c4) NOTNULL) WHERE ((NOT (NULLIF(highlight(1.51057458E8, rt0.c3, rt0.c0, rt0.c4), (((t1.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c0)) AND ((rt0.c1, rt0.c0, ''))))))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM t1 INNER JOIN rt0 ON ((rt0.c4) NOTNULL) WHERE (((NULLIF(highlight(1.51057458E8, rt0.c3, rt0.c0, rt0.c4), (((t1.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c0)) AND ((rt0.c1, rt0.c0, ''))))) ISNULL));
SELECT ALL rt0.c1, rt0.c4, rt0.c0, rt0.c3, t1.c0 FROM t1 RIGHT OUTER JOIN rt0 ON ((UNICODE(NULL)) IS FALSE) GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c3, t1.c0;
SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c3, t1.c0 FROM t1 RIGHT OUTER JOIN rt0 ON ((UNICODE(NULL)) IS FALSE) WHERE ((((+ (t1.c0)))>=((rt0.c2 IN ())))) GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c3, t1.c0 UNION SELECT ALL rt0.c1, rt0.c4, rt0.c0, rt0.c3, t1.c0 FROM t1 RIGHT OUTER JOIN rt0 ON ((UNICODE(NULL)) IS FALSE) WHERE ((NOT ((((+ (t1.c0)))>=((rt0.c2 IN ())))))) GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c3, t1.c0 UNION SELECT ALL rt0.c1, rt0.c4, rt0.c0, rt0.c3, t1.c0 FROM t1 RIGHT OUTER JOIN rt0 ON ((UNICODE(NULL)) IS FALSE) WHERE ((((((+ (t1.c0)))>=((rt0.c2 IN ())))) ISNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c3, t1.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c0, rt0.c3, t1.c0 FROM t1 RIGHT OUTER JOIN rt0 ON ((UNICODE(NULL)) IS FALSE) GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c3, t1.c0;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING CAST(rt0.c3 AS INTEGER) COLLATE NOCASE UNION ALL SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (NOT (CAST(rt0.c3 AS INTEGER) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING ((CAST(rt0.c3 AS INTEGER) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING CAST(rt0.c3 AS INTEGER) COLLATE NOCASE UNION ALL SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (NOT (CAST(rt0.c3 AS INTEGER) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING ((CAST(rt0.c3 AS INTEGER) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (0.8853052627017312) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (0.8853052627017312))) UNION ALL SELECT * FROM rt0 WHERE (((0.8853052627017312) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((CAST(t1.c0 AS REAL)) NOT BETWEEN (((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(0.17598618744197358))) AND ((t1.c0 IN ())))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((CAST(t1.c0 AS REAL)) NOT BETWEEN (((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(0.17598618744197358))) AND ((t1.c0 IN ())))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((CAST(t1.c0 AS REAL)) NOT BETWEEN (((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(0.17598618744197358))) AND ((t1.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE (CAST(rt0.c4 AS TEXT)) GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST(rt0.c4 AS TEXT)))) GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c4 AS TEXT)) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c2;
SELECT ALL rt0.c0, t1.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, t1 GROUP BY rt0.c0, t1.c0, rt0.c3, rt0.c4, rt0.c2;
SELECT rt0.c0, t1.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, t1 GROUP BY rt0.c0, t1.c0, rt0.c3, rt0.c4, rt0.c2 HAVING TOTAL(((COUNT(MAX(rt0.c1)))|(rt0.c3))) UNION ALL SELECT rt0.c0, t1.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, t1 GROUP BY rt0.c0, t1.c0, rt0.c3, rt0.c4, rt0.c2 HAVING (NOT (TOTAL(((COUNT(MAX(rt0.c1)))|(rt0.c3))))) UNION ALL SELECT ALL rt0.c0, t1.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, t1 GROUP BY rt0.c0, t1.c0, rt0.c3, rt0.c4, rt0.c2 HAVING ((TOTAL(((COUNT(MAX(rt0.c1)))|(rt0.c3)))) ISNULL);
SELECT rt0.c2, rt0.c3, t1.c0 FROM rt0, t1;
SELECT rt0.c2, rt0.c3, t1.c0 FROM rt0, t1 WHERE (t1.c0 COLLATE BINARY) UNION ALL SELECT rt0.c2, rt0.c3, t1.c0 FROM rt0, t1 WHERE ((NOT (t1.c0 COLLATE BINARY))) UNION ALL SELECT ALL rt0.c2, rt0.c3, t1.c0 FROM rt0, t1 WHERE (((t1.c0 COLLATE BINARY) ISNULL));
SELECT rt0.c2, rt0.c3, t1.c0 FROM rt0, t1;
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE (((((((((rt0.c2 COLLATE BINARY)OR((rt0.c3 IN ()))))OR(((rt0.c3) IS TRUE))))AND(((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c0)))))OR((rt0.c1 IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (((((((((rt0.c2 COLLATE BINARY)OR((rt0.c3 IN ()))))OR(((rt0.c3) IS TRUE))))AND(((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c0)))))OR((rt0.c1 IN ())))))) UNION SELECT DISTINCT rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE (((((((((((rt0.c2 COLLATE BINARY)OR((rt0.c3 IN ()))))OR(((rt0.c3) IS TRUE))))AND(((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c0)))))OR((rt0.c1 IN ())))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c4 FROM t1, rt0 GROUP BY rt0.c1, rt0.c4;
SELECT ALL rt0.c1, rt0.c4 FROM t1, rt0 WHERE (((ROUND(t1.c0, rt0.c4)) IS FALSE)) GROUP BY rt0.c1, rt0.c4 UNION SELECT rt0.c1, rt0.c4 FROM t1, rt0 WHERE ((NOT (((ROUND(t1.c0, rt0.c4)) IS FALSE)))) GROUP BY rt0.c1, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c4 FROM t1, rt0 WHERE (((((ROUND(t1.c0, rt0.c4)) IS FALSE)) ISNULL)) GROUP BY rt0.c1, rt0.c4;
SELECT ALL rt0.c1, rt0.c4 FROM t1, rt0 GROUP BY rt0.c1, rt0.c4;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t1 INDEXED BY i93 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t1 INDEXED BY i93 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING CASE MIN(rt0.c2)  WHEN x'' THEN SUM(rt0.c3) END UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t1 INDEXED BY i93 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING (NOT (CASE MIN(rt0.c2)  WHEN x'' THEN SUM(rt0.c3) END)) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t1 INDEXED BY i93 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING ((CASE MIN(rt0.c2)  WHEN x'' THEN SUM(rt0.c3) END) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t1 INDEXED BY i93 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t1 INDEXED BY i93 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING CASE MIN(rt0.c2)  WHEN x'' THEN SUM(rt0.c3) END UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t1 INDEXED BY i93 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING (NOT (CASE MIN(rt0.c2)  WHEN x'' THEN SUM(rt0.c3) END)) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t1 INDEXED BY i93 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING ((CASE MIN(rt0.c2)  WHEN x'' THEN SUM(rt0.c3) END) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t1 INDEXED BY i93 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL * FROM rt0, t1;
SELECT ALL * FROM rt0, t1 WHERE (((((((((t1.c0)AND(rt0.c1)))AND(rt0.c2)))AND(t1.c0)))OR((((rt0.c0, rt0.c0, rt0.c0))!=((NULL, NULL, rt0.c3)))))) UNION ALL SELECT * FROM rt0, t1 WHERE ((NOT (((((((((t1.c0)AND(rt0.c1)))AND(rt0.c2)))AND(t1.c0)))OR((((rt0.c0, rt0.c0, rt0.c0))!=((NULL, NULL, rt0.c3)))))))) UNION ALL SELECT ALL * FROM rt0, t1 WHERE (((((((((((t1.c0)AND(rt0.c1)))AND(rt0.c2)))AND(t1.c0)))OR((((rt0.c0, rt0.c0, rt0.c0))<>((NULL, NULL, rt0.c3)))))) ISNULL));
SELECT ALL * FROM rt0, t1;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c4)AND(rt0.c2)))OR(rt0.c1)) IN ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c4)AND(rt0.c2)))OR(rt0.c1)) IN ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c1)) IN ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE ((((((t1.c0)AND(t1.c0)))OR(t1.c0)) IN ())) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((((((t1.c0)AND(t1.c0)))OR(t1.c0)) IN ())))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((((((((t1.c0)AND(t1.c0)))OR(t1.c0)) IN ())) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, t1.c0, rt0.c4 FROM rt0, t1;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, t1.c0, rt0.c4 FROM rt0, t1 WHERE (CASE ((((rt0.c0)AND('0.2965423883380669')))AND(rt0.c1))  WHEN '0.9793635775845351' COLLATE NOCASE THEN CAST(rt0.c2 AS BLOB) ELSE (('6S')+(rt0.c4)) END) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, t1.c0, rt0.c4 FROM rt0, t1 WHERE ((NOT (CASE ((((rt0.c0)AND('0.2965423883380669')))AND(rt0.c1))  WHEN '0.9793635775845351' COLLATE NOCASE THEN CAST(rt0.c2 AS BLOB) ELSE (('6S')+(rt0.c4)) END))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3, t1.c0, rt0.c4 FROM rt0, t1 WHERE (((CASE ((((rt0.c0)AND('0.2965423883380669')))AND(rt0.c1))  WHEN '0.9793635775845351' COLLATE NOCASE THEN CAST(rt0.c2 AS BLOB) ELSE (('6S')+(rt0.c4)) END) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, t1.c0, rt0.c4 FROM rt0, t1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((CAST(rt0.c2 AS TEXT))OR(rt0.c3 COLLATE RTRIM)))AND(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c4 END)))OR(((x'') NOT NULL))))AND(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c4))))) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE ((NOT (((((((((CAST(rt0.c2 AS TEXT))OR(rt0.c3 COLLATE RTRIM)))AND(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c4 END)))OR(((x'') NOT NULL))))AND(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c4))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((CAST(rt0.c2 AS TEXT))OR(rt0.c3 COLLATE RTRIM)))AND(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c4 END)))OR(((x'') NOT NULL))))AND(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c4))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3 FROM t1 LEFT OUTER JOIN rt0 ON ((t1.c0)>((((NULL)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))))) GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3 FROM t1 LEFT OUTER JOIN rt0 ON ((t1.c0)>((((NULL)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))))) WHERE (CAST(((rt0.c4)-(rt0.c0)) AS TEXT)) GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3 UNION SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3 FROM t1 LEFT OUTER JOIN rt0 ON ((t1.c0)>((((NULL)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))))) WHERE ((NOT (CAST(((rt0.c4)-(rt0.c0)) AS TEXT)))) GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3 FROM t1 LEFT OUTER JOIN rt0 ON ((t1.c0)>((((NULL)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))))) WHERE (((CAST(((rt0.c4)-(rt0.c0)) AS TEXT)) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3 FROM t1 LEFT OUTER JOIN rt0 ON ((t1.c0)>((((NULL)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))))) GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3 HAVING CASE TOTAL(MAX(NULL))  WHEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)) THEN (+ (rt0.c2)) END UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3 HAVING (NOT (CASE TOTAL(MAX(NULL))  WHEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)) THEN (+ (rt0.c2)) END)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3 HAVING ((CASE TOTAL(MAX(NULL))  WHEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)) THEN (+ (rt0.c2)) END) ISNULL);
SELECT ALL rt0.c1, rt0.c4, rt0.c0, rt0.c2, t1.c0 FROM t1, rt0;
SELECT ALL rt0.c1, rt0.c4, rt0.c0, rt0.c2, t1.c0 FROM t1, rt0 WHERE (((((rt0.c1) NOT NULL)) NOT BETWEEN (((rt0.c4)>=(rt0.c3))) AND (x'' COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c0, rt0.c2, t1.c0 FROM t1, rt0 WHERE ((NOT (((((rt0.c1) NOT NULL)) NOT BETWEEN (((rt0.c4)>=(rt0.c3))) AND (x'' COLLATE RTRIM))))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c2, t1.c0 FROM t1, rt0 WHERE (((((((rt0.c1) NOT NULL)) NOT BETWEEN (((rt0.c4)>=(rt0.c3))) AND (x'' COLLATE RTRIM))) ISNULL));
SELECT ALL rt0.c1, rt0.c4, rt0.c0, rt0.c2, t1.c0 FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1 NOT INDEXED, rt0 WHERE (((rt0.c0 COLLATE NOCASE)-((('-261432984') ISNULL)))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT (((rt0.c0 COLLATE NOCASE)-((('-261432984') ISNULL)))))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE (((((rt0.c0 COLLATE NOCASE)-((('-261432984') ISNULL)))) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (CAST(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END AS TEXT)) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (CAST(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END AS TEXT)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((CAST(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END AS TEXT)) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY t1.c0, rt0.c1, rt0.c3;
SELECT t1.c0, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY t1.c0, rt0.c1, rt0.c3 HAVING CASE MAX(SUM(MIN(rt0.c2)))  WHEN SUM(SUM(rt0.c3)) THEN ((AVG(rt0.c3)) NOT BETWEEN (MIN(TOTAL(COUNT(COUNT(*))))) AND (rt0.c0)) ELSE ((rt0.c0)/(GROUP_CONCAT(rt0.c1))) END UNION ALL SELECT ALL t1.c0, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY t1.c0, rt0.c1, rt0.c3 HAVING (NOT (CASE MAX(SUM(MIN(rt0.c2)))  WHEN SUM(SUM(rt0.c3)) THEN ((AVG(rt0.c3)) NOT BETWEEN (MIN(TOTAL(COUNT(COUNT(*))))) AND (rt0.c0)) ELSE ((rt0.c0)/(GROUP_CONCAT(rt0.c1))) END)) UNION ALL SELECT ALL t1.c0, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY t1.c0, rt0.c1, rt0.c3 HAVING ((CASE MAX(SUM(MIN(rt0.c2)))  WHEN SUM(SUM(rt0.c3)) THEN ((AVG(rt0.c3)) NOT BETWEEN (MIN(TOTAL(COUNT(COUNT(*))))) AND (rt0.c0)) ELSE ((rt0.c0)/(GROUP_CONCAT(rt0.c1))) END) ISNULL);
SELECT ALL rt0.c4, rt0.c1 FROM rt0 INNER JOIN t1 ON rt0.c1;
SELECT rt0.c4, rt0.c1 FROM rt0 INNER JOIN t1 ON rt0.c1 WHERE (((((((rt0.c0) IS FALSE))AND(rt0.c1)))OR(((((rt0.c0)AND(x'')))OR('?]gN?ᫀ1-500000j'))))) UNION ALL SELECT ALL rt0.c4, rt0.c1 FROM rt0 INNER JOIN t1 ON rt0.c1 WHERE ((NOT (((((((rt0.c0) IS FALSE))AND(rt0.c1)))OR(((((rt0.c0)AND(x'')))OR('?]gN?ᫀ1-500000j'))))))) UNION ALL SELECT ALL rt0.c4, rt0.c1 FROM rt0 INNER JOIN t1 ON rt0.c1 WHERE (((((((((rt0.c0) IS FALSE))AND(rt0.c1)))OR(((((rt0.c0)AND(x'')))OR('?]gN?ᫀ1-500000j'))))) ISNULL));
SELECT ALL rt0.c4, rt0.c1 FROM rt0 INNER JOIN t1 ON rt0.c1;
SELECT DISTINCT rt0.c3, rt0.c4, t1.c0 FROM rt0, t1;
SELECT DISTINCT rt0.c3, rt0.c4, t1.c0 FROM rt0, t1 WHERE (((UNLIKELY(rt0.c3)) BETWEEN (rt0.c3 COLLATE RTRIM) AND (-756444820))) UNION SELECT DISTINCT rt0.c3, rt0.c4, t1.c0 FROM rt0, t1 WHERE ((NOT (((UNLIKELY(rt0.c3)) BETWEEN (rt0.c3 COLLATE RTRIM) AND (-756444820))))) UNION SELECT DISTINCT rt0.c3, rt0.c4, t1.c0 FROM rt0, t1 WHERE (((((UNLIKELY(rt0.c3)) BETWEEN (rt0.c3 COLLATE RTRIM) AND (-756444820))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c4, t1.c0 FROM rt0, t1;
SELECT rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4;
SELECT rt0.c3, rt0.c4 FROM rt0 WHERE (((rt0.c4 COLLATE BINARY)||((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0)))))) GROUP BY rt0.c3, rt0.c4 UNION SELECT rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (((rt0.c4 COLLATE BINARY)||((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0)))))))) GROUP BY rt0.c3, rt0.c4 UNION SELECT rt0.c3, rt0.c4 FROM rt0 WHERE (((((rt0.c4 COLLATE BINARY)||((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0)))))) ISNULL)) GROUP BY rt0.c3, rt0.c4;
SELECT rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4;
SELECT rt0.c0, rt0.c4, rt0.c2, t1.c0, rt0.c3, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c4, rt0.c2, t1.c0, rt0.c3, rt0.c1;
SELECT rt0.c0, rt0.c4, rt0.c2, t1.c0, rt0.c3, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c4, rt0.c2, t1.c0, rt0.c3, rt0.c1 HAVING ((SUM(COUNT(*))) BETWEEN (MIN(COUNT(TOTAL(rt0.c2)))) AND (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c2, t1.c0, rt0.c3, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c4, rt0.c2, t1.c0, rt0.c3, rt0.c1 HAVING (NOT (((SUM(COUNT(*))) BETWEEN (MIN(COUNT(TOTAL(rt0.c2)))) AND (COUNT(*))))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c2, t1.c0, rt0.c3, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c4, rt0.c2, t1.c0, rt0.c3, rt0.c1 HAVING ((((SUM(COUNT(*))) BETWEEN (MIN(COUNT(TOTAL(rt0.c2)))) AND (COUNT(*)))) ISNULL);
SELECT ALL * FROM t1;
SELECT * FROM t1 WHERE (t1.c0) UNION ALL SELECT * FROM t1 WHERE ((NOT (t1.c0))) UNION ALL SELECT ALL * FROM t1 WHERE (((t1.c0) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE ((((rt0.c4)OR(rt0.c1)))OR(rt0.c2))  WHEN ((rt0.c1)<<('z%')) THEN ((((rt0.c0)OR(rt0.c4)))OR(rt0.c1)) ELSE 1189404492 END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE ((((rt0.c4)OR(rt0.c1)))OR(rt0.c2))  WHEN ((rt0.c1)<<('z%')) THEN ((((rt0.c0)OR(rt0.c4)))OR(rt0.c1)) ELSE 1189404492 END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE ((((rt0.c4)OR(rt0.c1)))OR(rt0.c2))  WHEN ((rt0.c1)<<('z%')) THEN ((((rt0.c0)OR(rt0.c4)))OR(rt0.c1)) ELSE 1189404492 END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT t1.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY t1.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c0, rt0.c1;
SELECT t1.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM t1, rt0 WHERE ((((rt0.c0 IN ('\r,', rt0.c3)))<<(CAST(rt0.c0 AS NUMERIC)))) GROUP BY t1.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c0, rt0.c1 UNION SELECT ALL t1.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM t1, rt0 WHERE ((NOT ((((rt0.c0 IN ('\r,', rt0.c3)))<<(CAST(rt0.c0 AS NUMERIC)))))) GROUP BY t1.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c0, rt0.c1 UNION SELECT t1.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM t1, rt0 WHERE ((((((rt0.c0 IN ('\r,', rt0.c3)))<<(CAST(rt0.c0 AS NUMERIC)))) ISNULL)) GROUP BY t1.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c0, rt0.c1;
SELECT t1.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY t1.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c0, rt0.c1, t1.c0, rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY rt0.c4, rt0.c0, rt0.c1, t1.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c4, rt0.c0, rt0.c1, t1.c0, rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY rt0.c4, rt0.c0, rt0.c1, t1.c0, rt0.c2, rt0.c3 HAVING TOTAL(((rt0.c4)%(rt0.c4))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1, t1.c0, rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY rt0.c4, rt0.c0, rt0.c1, t1.c0, rt0.c2, rt0.c3 HAVING (NOT (TOTAL(((rt0.c4)%(rt0.c4))))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c1, t1.c0, rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY rt0.c4, rt0.c0, rt0.c1, t1.c0, rt0.c2, rt0.c3 HAVING ((TOTAL(((rt0.c4)%(rt0.c4)))) ISNULL);
SELECT ALL rt0.c4, rt0.c0, rt0.c1, t1.c0, rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY rt0.c4, rt0.c0, rt0.c1, t1.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c4, rt0.c0, rt0.c1, t1.c0, rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY rt0.c4, rt0.c0, rt0.c1, t1.c0, rt0.c2, rt0.c3 HAVING TOTAL(((rt0.c4)%(rt0.c4))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1, t1.c0, rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY rt0.c4, rt0.c0, rt0.c1, t1.c0, rt0.c2, rt0.c3 HAVING (NOT (TOTAL(((rt0.c4)%(rt0.c4))))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c1, t1.c0, rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY rt0.c4, rt0.c0, rt0.c1, t1.c0, rt0.c2, rt0.c3 HAVING ((TOTAL(((rt0.c4)%(rt0.c4)))) ISNULL);
SELECT ALL rt0.c4, rt0.c0, rt0.c1, t1.c0, rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY rt0.c4, rt0.c0, rt0.c1, t1.c0, rt0.c2, rt0.c3;
SELECT * FROM t1, rt0;
SELECT * FROM t1, rt0 WHERE (((((rt0.c1)GLOB(rt0.c3)))>>(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1))))) UNION ALL SELECT ALL * FROM t1, rt0 WHERE ((NOT (((((rt0.c1)GLOB(rt0.c3)))>>(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1))))))) UNION ALL SELECT ALL * FROM t1, rt0 WHERE (((((((rt0.c1)GLOB(rt0.c3)))>>(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1))))) ISNULL));
SELECT * FROM t1, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE (CASE WHEN (((rt0.c3))==((rt0.c2))) THEN CASE WHEN rt0.c0 THEN rt0.c4 END END) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN (((rt0.c3))=((rt0.c2))) THEN CASE WHEN rt0.c0 THEN rt0.c4 END END))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE (((CASE WHEN (((rt0.c3))=((rt0.c2))) THEN CASE WHEN rt0.c0 THEN rt0.c4 END END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0;
SELECT ALL rt0.c4 FROM rt0, t1 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0, t1 WHERE (((((rt0.c4)<>(rt0.c2)))>>((((rt0.c3)) BETWEEN ((')껅')) AND ((rt0.c3)))))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM rt0, t1 WHERE ((NOT (((((rt0.c4)!=(rt0.c2)))>>((((rt0.c3)) BETWEEN ((')껅')) AND ((rt0.c3)))))))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM rt0, t1 WHERE (((((((rt0.c4)<>(rt0.c2)))>>((((rt0.c3)) BETWEEN ((')껅')) AND ((rt0.c3)))))) ISNULL)) GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0, t1 GROUP BY rt0.c4;
SELECT ALL rt0.c3, rt0.c4, rt0.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c4, rt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c4, rt0.c0 HAVING COUNT(((rt0.c2)>>(t1.c0))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c4, rt0.c0 HAVING (NOT (COUNT(((rt0.c2)>>(t1.c0))))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c4, rt0.c0 HAVING ((COUNT(((rt0.c2)>>(t1.c0)))) ISNULL);
SELECT ALL rt0.c3, rt0.c4, rt0.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c4, rt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c4, rt0.c0 HAVING COUNT(((rt0.c2)>>(t1.c0))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c4, rt0.c0 HAVING (NOT (COUNT(((rt0.c2)>>(t1.c0))))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c4, rt0.c0 HAVING ((COUNT(((rt0.c2)>>(t1.c0)))) ISNULL);
SELECT ALL rt0.c3, rt0.c4, rt0.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c4, rt0.c0;
SELECT ALL rt0.c3, rt0.c2 FROM rt0;
SELECT ALL rt0.c3, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c3 AS TEXT))>=(((rt0.c1)GLOB(rt0.c3))))) UNION ALL SELECT rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c3 AS TEXT))>=(((rt0.c1)GLOB(rt0.c3))))))) UNION ALL SELECT rt0.c3, rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c3 AS TEXT))>=(((rt0.c1)GLOB(rt0.c3))))) ISNULL));
SELECT ALL rt0.c3, rt0.c2 FROM rt0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (json_array_length((('뎜}L') ISNULL))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (json_array_length((('뎜}L') ISNULL))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((json_array_length((('뎜}L') ISNULL))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT rt0.c3 FROM t1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS TEXT))GLOB(((t1.c0) IS TRUE))) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM t1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS TEXT))GLOB(((t1.c0) IS TRUE))) WHERE (CASE WHEN (+ (rt0.c3)) THEN ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)) WHEN ((rt0.c1) ISNULL) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))) WHEN rt0.c0 THEN ((t1.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)) ELSE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM t1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS TEXT))GLOB(((t1.c0) IS TRUE))) WHERE ((NOT (CASE WHEN (+ (rt0.c3)) THEN ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)) WHEN ((rt0.c1) ISNULL) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))) WHEN rt0.c0 THEN ((t1.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)) ELSE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM t1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS TEXT))GLOB(((t1.c0) IS TRUE))) WHERE (((CASE WHEN (+ (rt0.c3)) THEN ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)) WHEN ((rt0.c1) ISNULL) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))) WHEN rt0.c0 THEN ((t1.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)) ELSE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM t1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS TEXT))GLOB(((t1.c0) IS TRUE))) GROUP BY rt0.c3;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((x'' COLLATE RTRIM) BETWEEN ((+ (rt0.c2))) AND ((((rt0.c3))>((1577924063)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((x'' COLLATE RTRIM) BETWEEN ((+ (rt0.c2))) AND ((((rt0.c3))>((1577924063)))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((x'' COLLATE RTRIM) BETWEEN ((+ (rt0.c2))) AND ((((rt0.c3))>((1577924063)))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0 CROSS JOIN t1 ON (((t1.c0, rt0.c2, rt0.c4)) BETWEEN ((HEX(DISTINCT t1.c0), ' B|\n鰜쑝S', (rt0.c4 IN ()))) AND ((HEX(rt0.c3), ((x'ce9b') BETWEEN (rt0.c1) AND ('-1212089843')), TRIM(rt0.c0))));
SELECT DISTINCT * FROM rt0 CROSS JOIN t1 ON (((t1.c0, rt0.c2, rt0.c4)) BETWEEN ((HEX(DISTINCT t1.c0), ' B|\n鰜쑝S', (rt0.c4 IN ()))) AND ((HEX(rt0.c3), ((x'ce9b') BETWEEN (rt0.c1) AND ('-1212089843')), TRIM(rt0.c0)))) WHERE (json_patch(((((rt0.c1)OR(rt0.c1)))OR(t1.c0)), x'55e8')) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN t1 ON (((t1.c0, rt0.c2, rt0.c4)) BETWEEN ((HEX(DISTINCT t1.c0), ' B|\n鰜쑝S', (rt0.c4 IN ()))) AND ((HEX(rt0.c3), ((x'ce9b') BETWEEN (rt0.c1) AND ('-1212089843')), TRIM(rt0.c0)))) WHERE ((NOT (json_patch(((((rt0.c1)OR(rt0.c1)))OR(t1.c0)), x'55e8')))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN t1 ON (((t1.c0, rt0.c2, rt0.c4)) BETWEEN ((HEX(DISTINCT t1.c0), ' B|\n鰜쑝S', (rt0.c4 IN ()))) AND ((HEX(rt0.c3), ((x'ce9b') BETWEEN (rt0.c1) AND ('-1212089843')), TRIM(rt0.c0)))) WHERE (((json_patch(((((rt0.c1)OR(rt0.c1)))OR(t1.c0)), x'55e8')) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4;
SELECT rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE (x'') GROUP BY rt0.c2, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT (x''))) GROUP BY rt0.c2, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4;
SELECT rt0.c0, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1 HAVING MAX(((((rt0.c2)OR(t1.c0)))AND(0.5060147039772652))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MAX(((((rt0.c2)OR(t1.c0)))AND(0.5060147039772652))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1 HAVING ((MAX(((((rt0.c2)OR(t1.c0)))AND(0.5060147039772652)))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1 HAVING MAX(((((rt0.c2)OR(t1.c0)))AND(0.5060147039772652))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MAX(((((rt0.c2)OR(t1.c0)))AND(0.5060147039772652))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1 HAVING ((MAX(((((rt0.c2)OR(t1.c0)))AND(0.5060147039772652)))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, t1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0, t1 WHERE (((rt0.c1) BETWEEN (rt0.c2) AND (CAST(rt0.c4 AS BLOB)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, t1 NOT INDEXED WHERE ((NOT (((rt0.c1) BETWEEN (rt0.c2) AND (CAST(rt0.c4 AS BLOB)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0, t1 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (CAST(rt0.c4 AS BLOB)))) ISNULL));
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, t1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(CASE WHEN rt0.c3 THEN 0.4783392586360675 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END AS BLOB)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(CASE WHEN rt0.c3 THEN 0.4783392586360675 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END AS BLOB)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(CASE WHEN rt0.c3 THEN 0.4783392586360675 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE (CAST(rt0.c4 COLLATE RTRIM AS INTEGER)) GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT (CAST(rt0.c4 COLLATE RTRIM AS INTEGER)))) GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c0 UNION SELECT rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE (((CAST(rt0.c4 COLLATE RTRIM AS INTEGER)) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING MIN(NULL) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (MIN(NULL))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((MIN(NULL)) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING MIN(NULL) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (MIN(NULL))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((MIN(NULL)) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c4)))AND(rt0.c3))) IS TRUE)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((((rt0.c2)AND(rt0.c4)))AND(rt0.c3))) IS TRUE)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((rt0.c2)AND(rt0.c4)))AND(rt0.c3))) IS TRUE)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3 FROM rt0, t1;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3 FROM rt0, t1 WHERE (UPPER(DISTINCT ((rt0.c4)=(t1.c0)))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3 FROM rt0, t1 WHERE ((NOT (UPPER(DISTINCT ((rt0.c4)=(t1.c0)))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3 FROM rt0, t1 WHERE (((UPPER(DISTINCT ((rt0.c4)=(t1.c0)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3 FROM rt0, t1;
SELECT rt0.c0 FROM rt0 LEFT OUTER JOIN t1 ON LENGTH(rt0.c0) COLLATE BINARY GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 LEFT OUTER JOIN t1 ON LENGTH(rt0.c0) COLLATE BINARY WHERE (NULL) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 LEFT OUTER JOIN t1 ON LENGTH(rt0.c0) COLLATE BINARY WHERE ((NOT (NULL))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 LEFT OUTER JOIN t1 ON LENGTH(rt0.c0) COLLATE BINARY WHERE (((NULL) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 LEFT OUTER JOIN t1 ON LENGTH(rt0.c0) COLLATE BINARY GROUP BY rt0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING MIN(((t1.c0) IS TRUE)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (MIN(((t1.c0) IS TRUE)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((MIN(((t1.c0) IS TRUE))) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING MIN(((t1.c0) IS TRUE)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (MIN(((t1.c0) IS TRUE)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((MIN(((t1.c0) IS TRUE))) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0, rt0.c0, rt0.c4 FROM t1, rt0;
SELECT t1.c0, rt0.c0, rt0.c4 FROM t1, rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 END AS NUMERIC)) UNION ALL SELECT ALL t1.c0, rt0.c0, rt0.c4 FROM t1, rt0 WHERE ((NOT (CAST(CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 END AS NUMERIC)))) UNION ALL SELECT ALL t1.c0, rt0.c0, rt0.c4 FROM t1, rt0 WHERE (((CAST(CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 END AS NUMERIC)) ISNULL));
SELECT t1.c0, rt0.c0, rt0.c4 FROM t1, rt0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((NOT ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((NOT ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))))))) UNION SELECT DISTINCT * FROM t1 WHERE ((((NOT ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((t1.c0 COLLATE NOCASE)|(((((t1.c0)OR(t1.c0)))OR(t1.c0))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((t1.c0 COLLATE NOCASE)|(((((t1.c0)OR(t1.c0)))OR(t1.c0))))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((((t1.c0 COLLATE NOCASE)|(((((t1.c0)OR(t1.c0)))OR(t1.c0))))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING SUM(MIN(rt0.c4)) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING (NOT (SUM(MIN(rt0.c4)))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING ((SUM(MIN(rt0.c4))) ISNULL);
SELECT ALL rt0.c2, rt0.c3, t1.c0 FROM rt0, t1;
SELECT rt0.c2, rt0.c3, t1.c0 FROM rt0, t1 WHERE (CASE rt0.c0  WHEN CAST(rt0.c0 AS INTEGER) THEN rt0.c1 END) UNION ALL SELECT rt0.c2, rt0.c3, t1.c0 FROM rt0, t1 WHERE ((NOT (CASE rt0.c0  WHEN CAST(rt0.c0 AS INTEGER) THEN rt0.c1 END))) UNION ALL SELECT ALL rt0.c2, rt0.c3, t1.c0 FROM rt0, t1 WHERE (((CASE rt0.c0  WHEN CAST(rt0.c0 AS INTEGER) THEN rt0.c1 END) ISNULL));
SELECT ALL rt0.c2, rt0.c3, t1.c0 FROM rt0, t1;
SELECT DISTINCT rt0.c3 FROM rt0 RIGHT OUTER JOIN t1 ON ((-321016123) ISNULL);
SELECT DISTINCT rt0.c3 FROM rt0 RIGHT OUTER JOIN t1 ON ((-321016123) ISNULL) WHERE (CAST(((((rt0.c1)OR(rt0.c2)))AND(rt0.c3)) AS INTEGER)) UNION SELECT DISTINCT rt0.c3 FROM rt0 RIGHT OUTER JOIN t1 ON ((-321016123) ISNULL) WHERE ((NOT (CAST(((((rt0.c1)OR(rt0.c2)))AND(rt0.c3)) AS INTEGER)))) UNION SELECT DISTINCT rt0.c3 FROM rt0 RIGHT OUTER JOIN t1 ON ((-321016123) ISNULL) WHERE (((CAST(((((rt0.c1)OR(rt0.c2)))AND(rt0.c3)) AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c3 FROM rt0 RIGHT OUTER JOIN t1 ON ((-321016123) ISNULL);
SELECT ALL t1.c0, rt0.c3, rt0.c4 FROM t1, rt0 GROUP BY t1.c0, rt0.c3, rt0.c4;
SELECT t1.c0, rt0.c3, rt0.c4 FROM t1, rt0 WHERE (((((rt0.c4)%(rt0.c3))) NOT NULL)) GROUP BY t1.c0, rt0.c3, rt0.c4 UNION SELECT t1.c0, rt0.c3, rt0.c4 FROM t1, rt0 WHERE ((NOT (((((rt0.c4)%(rt0.c3))) NOT NULL)))) GROUP BY t1.c0, rt0.c3, rt0.c4 UNION SELECT t1.c0, rt0.c3, rt0.c4 FROM t1, rt0 WHERE (((((((rt0.c4)%(rt0.c3))) NOT NULL)) ISNULL)) GROUP BY t1.c0, rt0.c3, rt0.c4;
SELECT ALL t1.c0, rt0.c3, rt0.c4 FROM t1, rt0 GROUP BY t1.c0, rt0.c3, rt0.c4;
SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0 HAVING MAX(AVG(MIN(rt0.c3))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0 HAVING (NOT (MAX(AVG(MIN(rt0.c3))))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0 HAVING ((MAX(AVG(MIN(rt0.c3)))) ISNULL);
SELECT * FROM t1 INNER JOIN rt0 ON CAST(((rt0.c3)AND(t1.c0)) AS TEXT);
SELECT ALL * FROM t1 INNER JOIN rt0 ON CAST(((rt0.c3)AND(t1.c0)) AS TEXT) WHERE (CASE RTRIM(rt0.c3)  WHEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c1 END THEN ((rt0.c1)*(rt0.c0)) ELSE '-1212089843' END) UNION ALL SELECT ALL * FROM t1 INNER JOIN rt0 ON CAST(((rt0.c3)AND(t1.c0)) AS TEXT) WHERE ((NOT (CASE RTRIM(rt0.c3)  WHEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c1 END THEN ((rt0.c1)*(rt0.c0)) ELSE '-1212089843' END))) UNION ALL SELECT * FROM t1 INNER JOIN rt0 ON CAST(((rt0.c3)AND(t1.c0)) AS TEXT) WHERE (((CASE RTRIM(rt0.c3)  WHEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c1 END THEN ((rt0.c1)*(rt0.c0)) ELSE '-1212089843' END) ISNULL));
SELECT * FROM t1 INNER JOIN rt0 ON CAST(((rt0.c3)AND(t1.c0)) AS TEXT);
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE (CAST(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN t1.c0 END AS REAL)) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT (CAST(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN t1.c0 END AS REAL)))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE (((CAST(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN t1.c0 END AS REAL)) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0, t1.c0 FROM rt0, t1 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0, t1.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0, t1.c0 FROM rt0, t1 WHERE ((((rt0.c4 IN (rt0.c1)))<=(((rt0.c4)<<(rt0.c1))))) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0, t1.c0 UNION SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0, t1.c0 FROM rt0, t1 WHERE ((NOT ((((rt0.c4 IN (rt0.c1)))<=(((rt0.c4)<<(rt0.c1))))))) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0, t1.c0 UNION SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0, t1.c0 FROM rt0, t1 WHERE ((((((rt0.c4 IN (rt0.c1)))<=(((rt0.c4)<<(rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0, t1.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0, t1.c0 FROM rt0, t1 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0, t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING CASE WHEN MAX(SUM(t1.c0)) THEN TOTAL(t1.c0) WHEN ((MIN(t1.c0)) BETWEEN (COUNT(*)) AND (AVG(t1.c0))) THEN ((t1.c0) NOTNULL) WHEN CAST(AVG(t1.c0) AS INTEGER) THEN t1.c0 END UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (CASE WHEN MAX(SUM(t1.c0)) THEN TOTAL(t1.c0) WHEN ((MIN(t1.c0)) BETWEEN (COUNT(*)) AND (AVG(t1.c0))) THEN ((t1.c0) NOTNULL) WHEN CAST(AVG(t1.c0) AS INTEGER) THEN t1.c0 END)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((CASE WHEN MAX(SUM(t1.c0)) THEN TOTAL(t1.c0) WHEN ((MIN(t1.c0)) BETWEEN (COUNT(*)) AND (AVG(t1.c0))) THEN ((t1.c0) NOTNULL) WHEN CAST(AVG(t1.c0) AS INTEGER) THEN t1.c0 END) ISNULL);
SELECT ALL * FROM t1, rt0;
SELECT * FROM t1, rt0 WHERE (((((((x'')OR(rt0.c3)))OR(rt0.c0))) IS FALSE)) UNION ALL SELECT * FROM t1, rt0 WHERE ((NOT (((((((x'')OR(rt0.c3)))OR(rt0.c0))) IS FALSE)))) UNION ALL SELECT ALL * FROM t1, rt0 WHERE (((((((((x'')OR(rt0.c3)))OR(rt0.c0))) IS FALSE)) ISNULL));
SELECT ALL * FROM t1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (IFNULL(rt0.c3, CAST(rt0.c3 AS NUMERIC))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (IFNULL(rt0.c3, CAST(rt0.c3 AS NUMERIC))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((IFNULL(rt0.c3, CAST(rt0.c3 AS NUMERIC))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c3, t1.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c3, t1.c0;
SELECT ALL rt0.c2, rt0.c3, t1.c0 FROM rt0, t1 WHERE (LIKELY(DISTINCT (((x''))!=((rt0.c3))))) GROUP BY rt0.c2, rt0.c3, t1.c0 UNION SELECT rt0.c2, rt0.c3, t1.c0 FROM rt0, t1 WHERE ((NOT (LIKELY(DISTINCT (((x''))!=((rt0.c3))))))) GROUP BY rt0.c2, rt0.c3, t1.c0 UNION SELECT ALL rt0.c2, rt0.c3, t1.c0 FROM rt0, t1 WHERE (((LIKELY(DISTINCT (((x''))!=((rt0.c3))))) ISNULL)) GROUP BY rt0.c2, rt0.c3, t1.c0;
SELECT ALL rt0.c2, rt0.c3, t1.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c3, t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING MAX(MIN(COUNT(t1.c0))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (MAX(MIN(COUNT(t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((MAX(MIN(COUNT(t1.c0)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((~ (0.6828620021303454))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((~ (0.6828620021303454))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((~ (0.6828620021303454))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM t1 LEFT OUTER JOIN rt0 ON ((rt0.c4)>>(rt0.c4)) COLLATE RTRIM COLLATE BINARY;
SELECT DISTINCT * FROM t1 LEFT OUTER JOIN rt0 ON ((rt0.c4)>>(rt0.c4)) COLLATE RTRIM COLLATE BINARY WHERE (((((rt0.c0 COLLATE BINARY)AND((~ (rt0.c3)))))AND(((((t1.c0)AND(rt0.c2)))OR(rt0.c2))))) UNION SELECT DISTINCT * FROM t1 LEFT OUTER JOIN rt0 ON ((rt0.c4)>>(rt0.c4)) COLLATE RTRIM COLLATE BINARY WHERE ((NOT (((((rt0.c0 COLLATE BINARY)AND((~ (rt0.c3)))))AND(((((t1.c0)AND(rt0.c2)))OR(rt0.c2))))))) UNION SELECT DISTINCT * FROM t1 LEFT OUTER JOIN rt0 ON ((rt0.c4)>>(rt0.c4)) COLLATE RTRIM COLLATE BINARY WHERE (((((((rt0.c0 COLLATE BINARY)AND((~ (rt0.c3)))))AND(((((t1.c0)AND(rt0.c2)))OR(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM t1 LEFT OUTER JOIN rt0 ON ((rt0.c4)>>(rt0.c4)) COLLATE RTRIM COLLATE BINARY;
SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c4;
SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE (((rt0.c3 COLLATE RTRIM) IS FALSE)) GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (((rt0.c3 COLLATE RTRIM) IS FALSE)))) GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE (((((rt0.c3 COLLATE RTRIM) IS FALSE)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c4;
SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c4;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(MAX(MIN(t1.c0))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(MAX(MIN(t1.c0))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(MAX(MIN(t1.c0)))) ISNULL);
SELECT ALL TOTAL((((((rt0.c4)<<(rt0.c0))))>=(((~ (rt0.c4)))))) FROM t1, rt0 ORDER BY ((((rt0.c3)>>(t1.c0)))<(((rt0.c2) IS FALSE)));
SELECT ALL * FROM t1 NOT INDEXED LEFT OUTER JOIN rt0 ON CASE (~ (rt0.c2))  WHEN ((rt0.c0)||('0.7301883319898134')) THEN ((NULL)<(rt0.c0)) ELSE ((rt0.c0) IS FALSE) END;
SELECT * FROM t1 LEFT OUTER JOIN rt0 ON CASE (~ (rt0.c2))  WHEN ((rt0.c0)||('0.7301883319898134')) THEN ((NULL)<(rt0.c0)) ELSE ((rt0.c0) IS FALSE) END WHERE ((rt0.c1 IN (rt0.c4)) COLLATE BINARY) UNION ALL SELECT * FROM t1 LEFT OUTER JOIN rt0 ON CASE (~ (rt0.c2))  WHEN ((rt0.c0)||('0.7301883319898134')) THEN ((NULL)<(rt0.c0)) ELSE ((rt0.c0) IS FALSE) END WHERE ((NOT ((rt0.c1 IN (rt0.c4)) COLLATE BINARY))) UNION ALL SELECT * FROM t1 LEFT OUTER JOIN rt0 ON CASE (~ (rt0.c2))  WHEN ((rt0.c0)||('0.7301883319898134')) THEN ((NULL)<(rt0.c0)) ELSE ((rt0.c0) IS FALSE) END WHERE ((((rt0.c1 IN (rt0.c4)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM t1 NOT INDEXED LEFT OUTER JOIN rt0 ON CASE (~ (rt0.c2))  WHEN ((rt0.c0)||('0.7301883319898134')) THEN ((NULL)<(rt0.c0)) ELSE ((rt0.c0) IS FALSE) END;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT ((NOT (rt0.c1))))) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT ((NOT ((NOT (rt0.c1))))))) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM rt0 WHERE ((((NOT ((NOT (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM rt0, t1 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM rt0, t1 WHERE (CASE (('1492056504')||(rt0.c4))  WHEN ((rt0.c3)<<(rt0.c1)) THEN t1.c0 WHEN CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END THEN NULL WHEN ((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c0)) THEN (rt0.c4 IN ()) WHEN 106623314 THEN rt0.c3 COLLATE NOCASE WHEN '뎜}L' THEN 0.5869212681422378 ELSE ((rt0.c1) NOTNULL) END) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM rt0, t1 WHERE ((NOT (CASE (('1492056504')||(rt0.c4))  WHEN ((rt0.c3)<<(rt0.c1)) THEN t1.c0 WHEN CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END THEN NULL WHEN ((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c0)) THEN (rt0.c4 IN ()) WHEN 106623314 THEN rt0.c3 COLLATE NOCASE WHEN '뎜}L' THEN 0.5869212681422378 ELSE ((rt0.c1) NOTNULL) END))) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 UNION SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM rt0, t1 WHERE (((CASE (('1492056504')||(rt0.c4))  WHEN ((rt0.c3)<<(rt0.c1)) THEN t1.c0 WHEN CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END THEN NULL WHEN ((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c0)) THEN (rt0.c4 IN ()) WHEN 106623314 THEN rt0.c3 COLLATE NOCASE WHEN '뎜}L' THEN 0.5869212681422378 ELSE ((rt0.c1) NOTNULL) END) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM rt0, t1 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4;
SELECT rt0.c2, rt0.c0, rt0.c1, t1.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, t1.c0, rt0.c3;
SELECT rt0.c2, rt0.c0, rt0.c1, t1.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, t1.c0, rt0.c3 HAVING SQLITE_SOURCE_ID() UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, t1.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, t1.c0, rt0.c3 HAVING (NOT (SQLITE_SOURCE_ID())) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, t1.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, t1.c0, rt0.c3 HAVING ((SQLITE_SOURCE_ID()) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1, t1.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, t1.c0, rt0.c3;
SELECT rt0.c2, rt0.c0, rt0.c1, t1.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, t1.c0, rt0.c3 HAVING SQLITE_SOURCE_ID() UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, t1.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, t1.c0, rt0.c3 HAVING (NOT (SQLITE_SOURCE_ID())) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, t1.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, t1.c0, rt0.c3 HAVING ((SQLITE_SOURCE_ID()) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1, t1.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, t1.c0, rt0.c3;
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (((LOWER(rt0.c1))||(rt0.c3))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (((LOWER(rt0.c1))||(rt0.c3))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((((LOWER(rt0.c1))||(rt0.c3))) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c0 FROM rt0 WHERE (((((rt0.c4)<>(rt0.c2)))GLOB((NOT (rt0.c3))))) UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c4)!=(rt0.c2)))GLOB((NOT (rt0.c3))))))) UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c0 FROM rt0 WHERE (((((((rt0.c4)<>(rt0.c2)))GLOB((NOT (rt0.c3))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c0 FROM rt0;
SELECT t1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0, t1 GROUP BY t1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT t1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0, t1 WHERE (((CASE rt0.c1  WHEN t1.c0 THEN t1.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 END)IS(((t1.c0) IS TRUE)))) GROUP BY t1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1 UNION SELECT ALL t1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0, t1 WHERE ((NOT (((CASE rt0.c1  WHEN t1.c0 THEN t1.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 END)IS(((t1.c0) IS TRUE)))))) GROUP BY t1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1 UNION SELECT ALL t1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0, t1 WHERE (((((CASE rt0.c1  WHEN t1.c0 THEN t1.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 END)IS(((t1.c0) IS TRUE)))) ISNULL)) GROUP BY t1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT t1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0, t1 GROUP BY t1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(NULL) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(NULL))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(NULL)) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(NULL) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(NULL))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(NULL)) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT * FROM t1 LEFT OUTER JOIN rt0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)GLOB(((rt0.c0) BETWEEN (rt0.c4) AND (NULL))));
SELECT ALL * FROM t1 LEFT OUTER JOIN rt0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)GLOB(((rt0.c0) BETWEEN (rt0.c4) AND (NULL)))) WHERE (((((rt0.c3) IS FALSE))*(((rt0.c0)IS NOT(rt0.c3))))) UNION ALL SELECT * FROM t1 LEFT OUTER JOIN rt0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)GLOB(((rt0.c0) BETWEEN (rt0.c4) AND (NULL)))) WHERE ((NOT (((((rt0.c3) IS FALSE))*(((rt0.c0)IS NOT(rt0.c3))))))) UNION ALL SELECT * FROM t1 LEFT OUTER JOIN rt0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)GLOB(((rt0.c0) BETWEEN (rt0.c4) AND (NULL)))) WHERE (((((((rt0.c3) IS FALSE))*(((rt0.c0)IS NOT(rt0.c3))))) ISNULL));
SELECT * FROM t1 LEFT OUTER JOIN rt0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)GLOB(((rt0.c0) BETWEEN (rt0.c4) AND (NULL))));
SELECT DISTINCT * FROM rt0 NATURAL JOIN t1;
SELECT DISTINCT * FROM rt0 NATURAL JOIN t1 WHERE (CAST((((rt0.c4, rt0.c3, rt0.c4))<>((rt0.c4, t1.c0, rt0.c3))) AS REAL)) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN t1 WHERE ((NOT (CAST((((rt0.c4, rt0.c3, rt0.c4))<>((rt0.c4, t1.c0, rt0.c3))) AS REAL)))) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN t1 WHERE (((CAST((((rt0.c4, rt0.c3, rt0.c4))!=((rt0.c4, t1.c0, rt0.c3))) AS REAL)) ISNULL));
SELECT DISTINCT * FROM rt0 NATURAL JOIN t1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE ('QAfV-\rW') GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT ('QAfV-\rW'))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((('QAfV-\rW') ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3;
SELECT ALL * FROM t1, rt0;
SELECT ALL * FROM t1, rt0 WHERE ((NOT (TYPEOF(DISTINCT rt0.c3)))) UNION ALL SELECT ALL * FROM t1, rt0 WHERE ((NOT ((NOT (TYPEOF(DISTINCT rt0.c3)))))) UNION ALL SELECT ALL * FROM t1, rt0 WHERE ((((NOT (TYPEOF(DISTINCT rt0.c3)))) ISNULL));
SELECT ALL * FROM t1, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE (CAST(rt0.c4 AS INTEGER) COLLATE BINARY) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT (CAST(rt0.c4 AS INTEGER) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE (((CAST(rt0.c4 AS INTEGER) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4 FROM rt0;
SELECT t1.c0 FROM rt0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM rt0, t1 WHERE ((((t1.c0)) NOT BETWEEN ((rt0.c4 COLLATE NOCASE)) AND ((NULLIF(DISTINCT t1.c0, rt0.c4))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM rt0, t1 WHERE ((NOT ((((t1.c0)) NOT BETWEEN ((rt0.c4 COLLATE NOCASE)) AND ((NULLIF(DISTINCT t1.c0, rt0.c4))))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM rt0, t1 WHERE ((((((t1.c0)) NOT BETWEEN ((rt0.c4 COLLATE NOCASE)) AND ((NULLIF(DISTINCT t1.c0, rt0.c4))))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM rt0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0, t1;
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0, t1 WHERE (t1.c0) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0, t1 WHERE ((NOT (t1.c0))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0, t1 WHERE (((t1.c0) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0, t1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (NULL) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((((t1.c0)OR(((t1.c0)OR(t1.c0)))))OR(t1.c0))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((((t1.c0)OR(((t1.c0)OR(t1.c0)))))OR(t1.c0))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((((((t1.c0)OR(((t1.c0)OR(t1.c0)))))OR(t1.c0))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL rt0.c0, rt0.c4, rt0.c1, rt0.c3, t1.c0, rt0.c2 FROM rt0, t1 GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c3, t1.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c4, rt0.c1, rt0.c3, t1.c0, rt0.c2 FROM rt0, t1 GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c3, t1.c0, rt0.c2 HAVING MAX(AVG(rt0.c2)) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c3, t1.c0, rt0.c2 FROM rt0, t1 GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c3, t1.c0, rt0.c2 HAVING (NOT (MAX(AVG(rt0.c2)))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c1, rt0.c3, t1.c0, rt0.c2 FROM rt0, t1 GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c3, t1.c0, rt0.c2 HAVING ((MAX(AVG(rt0.c2))) ISNULL);
SELECT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (t1.c0) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT (t1.c0))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((t1.c0) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM t1, rt0;
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM t1, rt0 WHERE ((+ (ROUND(rt0.c1, rt0.c0)))) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM t1, rt0 WHERE ((NOT ((+ (ROUND(rt0.c1, rt0.c0)))))) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM t1, rt0 WHERE ((((+ (ROUND(rt0.c1, rt0.c0)))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM t1, rt0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ('-854420720') GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ('-854420720'))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((('-854420720') ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT rt0.c1, t1.c0, rt0.c2, rt0.c0 FROM t1, rt0 GROUP BY rt0.c1, t1.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, t1.c0, rt0.c2, rt0.c0 FROM t1, rt0 GROUP BY rt0.c1, t1.c0, rt0.c2, rt0.c0 HAVING (((TOTAL(t1.c0), MAX(rt0.c3), rt0.c1)) BETWEEN (((+ ('}2')), rt0.c2, (('')>=(rt0.c2)))) AND ((COUNT(*), MIN(t1.c0), (((rt0.c0))>=((rt0.c0)))))) UNION ALL SELECT rt0.c1, t1.c0, rt0.c2, rt0.c0 FROM t1, rt0 GROUP BY rt0.c1, t1.c0, rt0.c2, rt0.c0 HAVING (NOT ((((TOTAL(t1.c0), MAX(rt0.c3), rt0.c1)) BETWEEN (((+ ('}2')), rt0.c2, (('')>=(rt0.c2)))) AND ((COUNT(*), MIN(t1.c0), (((rt0.c0))>=((rt0.c0)))))))) UNION ALL SELECT rt0.c1, t1.c0, rt0.c2, rt0.c0 FROM t1, rt0 GROUP BY rt0.c1, t1.c0, rt0.c2, rt0.c0 HAVING (((((TOTAL(t1.c0), MAX(rt0.c3), rt0.c1)) BETWEEN (((+ ('}2')), rt0.c2, (('')>=(rt0.c2)))) AND ((COUNT(*), MIN(t1.c0), (((rt0.c0))>=((rt0.c0))))))) ISNULL);
SELECT rt0.c1, t1.c0, rt0.c2, rt0.c0 FROM t1, rt0 GROUP BY rt0.c1, t1.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, t1.c0, rt0.c2, rt0.c0 FROM t1, rt0 GROUP BY rt0.c1, t1.c0, rt0.c2, rt0.c0 HAVING (((TOTAL(t1.c0), MAX(rt0.c3), rt0.c1)) BETWEEN (((+ ('}2')), rt0.c2, (('')>=(rt0.c2)))) AND ((COUNT(*), MIN(t1.c0), (((rt0.c0))>=((rt0.c0)))))) UNION ALL SELECT rt0.c1, t1.c0, rt0.c2, rt0.c0 FROM t1, rt0 GROUP BY rt0.c1, t1.c0, rt0.c2, rt0.c0 HAVING (NOT ((((TOTAL(t1.c0), MAX(rt0.c3), rt0.c1)) BETWEEN (((+ ('}2')), rt0.c2, (('')>=(rt0.c2)))) AND ((COUNT(*), MIN(t1.c0), (((rt0.c0))>=((rt0.c0)))))))) UNION ALL SELECT rt0.c1, t1.c0, rt0.c2, rt0.c0 FROM t1, rt0 GROUP BY rt0.c1, t1.c0, rt0.c2, rt0.c0 HAVING (((((TOTAL(t1.c0), MAX(rt0.c3), rt0.c1)) BETWEEN (((+ ('}2')), rt0.c2, (('')>=(rt0.c2)))) AND ((COUNT(*), MIN(t1.c0), (((rt0.c0))>=((rt0.c0))))))) ISNULL);
SELECT rt0.c1, t1.c0, rt0.c2, rt0.c0 FROM t1, rt0 GROUP BY rt0.c1, t1.c0, rt0.c2, rt0.c0;
SELECT * FROM rt0, t1;
SELECT ALL * FROM rt0, t1 WHERE ((NULL IN ())) UNION ALL SELECT ALL * FROM rt0, t1 WHERE ((NOT ((NULL IN ())))) UNION ALL SELECT ALL * FROM rt0, t1 WHERE ((((NULL IN ())) ISNULL));
SELECT * FROM rt0, t1;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c0, t1.c0, rt0.c1, rt0.c3 FROM t1, rt0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c0, t1.c0, rt0.c1, rt0.c3 FROM t1, rt0 WHERE (CASE rt0.c4 COLLATE BINARY  WHEN LIKELY(DISTINCT t1.c0) THEN ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))AND(NULL)))AND(rt0.c1)) END) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c0, t1.c0, rt0.c1, rt0.c3 FROM t1, rt0 WHERE ((NOT (CASE rt0.c4 COLLATE BINARY  WHEN LIKELY(DISTINCT t1.c0) THEN ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))AND(NULL)))AND(rt0.c1)) END))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c0, t1.c0, rt0.c1, rt0.c3 FROM t1, rt0 WHERE (((CASE rt0.c4 COLLATE BINARY  WHEN LIKELY(DISTINCT t1.c0) THEN ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))AND(NULL)))AND(rt0.c1)) END) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c0, t1.c0, rt0.c1, rt0.c3 FROM t1, rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c2 IN ()))=(x''))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2 IN ()))=(x''))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c2 IN ()))==(x''))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4, t1.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4, t1.c0;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4, t1.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4, t1.c0 HAVING SQLITE_SOURCE_ID() UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4, t1.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4, t1.c0 HAVING (NOT (SQLITE_SOURCE_ID())) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4, t1.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4, t1.c0 HAVING ((SQLITE_SOURCE_ID()) ISNULL);
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4, t1.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4, t1.c0;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4, t1.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4, t1.c0 HAVING SQLITE_SOURCE_ID() UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4, t1.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4, t1.c0 HAVING (NOT (SQLITE_SOURCE_ID())) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4, t1.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4, t1.c0 HAVING ((SQLITE_SOURCE_ID()) ISNULL);
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4, t1.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4, t1.c0;
SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c0, t1.c0 FROM rt0, t1;
SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c0, t1.c0 FROM rt0, t1 WHERE (NULL) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c0, t1.c0 FROM rt0, t1 WHERE ((NOT (NULL))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c0, t1.c0 FROM rt0, t1 WHERE (((NULL) ISNULL));
SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c0, t1.c0 FROM rt0, t1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ('\r#BbZJ1zF') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ('\r#BbZJ1zF'))) UNION SELECT DISTINCT * FROM rt0 WHERE ((('\r#BbZJ1zF') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0, t1.c0 FROM rt0, t1 GROUP BY rt0.c1, rt0.c0, t1.c0;
SELECT rt0.c1, rt0.c0, t1.c0 FROM rt0, t1 WHERE ((((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN t1.c0 THEN NULL WHEN t1.c0 THEN 0.9793008611863083 END, (('')|(rt0.c4)), (- (rt0.c3))))>((CAST(rt0.c2 AS BLOB), ((rt0.c3) NOTNULL), ((rt0.c4)LIKE(rt0.c4)))))) GROUP BY rt0.c1, rt0.c0, t1.c0 UNION SELECT ALL rt0.c1, rt0.c0, t1.c0 FROM rt0, t1 WHERE ((NOT ((((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN t1.c0 THEN NULL WHEN t1.c0 THEN 0.9793008611863083 END, (('')|(rt0.c4)), (- (rt0.c3))))>((CAST(rt0.c2 AS BLOB), ((rt0.c3) NOTNULL), ((rt0.c4)LIKE(rt0.c4)))))))) GROUP BY rt0.c1, rt0.c0, t1.c0 UNION SELECT ALL rt0.c1, rt0.c0, t1.c0 FROM rt0, t1 WHERE ((((((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN t1.c0 THEN NULL WHEN t1.c0 THEN 0.9793008611863083 END, (('')|(rt0.c4)), (- (rt0.c3))))>((CAST(rt0.c2 AS BLOB), ((rt0.c3) NOTNULL), ((rt0.c4)LIKE(rt0.c4)))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, t1.c0;
SELECT rt0.c1, rt0.c0, t1.c0 FROM rt0, t1 GROUP BY rt0.c1, rt0.c0, t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (+ (MIN(t1.c0))) COLLATE BINARY UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((+ (MIN(t1.c0))) COLLATE BINARY)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((+ (MIN(t1.c0))) COLLATE BINARY) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (+ (MIN(t1.c0))) COLLATE BINARY UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((+ (MIN(t1.c0))) COLLATE BINARY)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((+ (MIN(t1.c0))) COLLATE BINARY) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL MIN(CAST((+ (rt0.c1)) AS BLOB)) FROM rt0;
SELECT * FROM rt0, t1;
SELECT * FROM rt0, t1 WHERE (CAST(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c1)) AS TEXT)) UNION ALL SELECT ALL * FROM rt0, t1 WHERE ((NOT (CAST(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c1)) AS TEXT)))) UNION ALL SELECT ALL * FROM rt0, t1 WHERE (((CAST(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c1)) AS TEXT)) ISNULL));
SELECT * FROM rt0, t1;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (NULL) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((NULL) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT rt0.c1, t1.c0 FROM rt0, t1 GROUP BY rt0.c1, t1.c0;
SELECT rt0.c1, t1.c0 FROM rt0, t1 WHERE (CAST(((((rt0.c3)AND(rt0.c1)))OR(rt0.c3)) AS BLOB)) GROUP BY rt0.c1, t1.c0 UNION SELECT rt0.c1, t1.c0 FROM rt0, t1 WHERE ((NOT (CAST(((((rt0.c3)AND(rt0.c1)))OR(rt0.c3)) AS BLOB)))) GROUP BY rt0.c1, t1.c0 UNION SELECT ALL rt0.c1, t1.c0 FROM rt0, t1 WHERE (((CAST(((((rt0.c3)AND(rt0.c1)))OR(rt0.c3)) AS BLOB)) ISNULL)) GROUP BY rt0.c1, t1.c0;
SELECT rt0.c1, t1.c0 FROM rt0, t1 GROUP BY rt0.c1, t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL * FROM t1;
SELECT ALL * FROM t1 WHERE (((t1.c0)&(t1.c0))) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (((t1.c0)&(t1.c0))))) UNION ALL SELECT ALL * FROM t1 WHERE (((((t1.c0)&(t1.c0))) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT rt0.c3, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c2 FROM rt0 WHERE (((((((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1))) BETWEEN (((rt0.c1)<>(rt0.c1))) AND (((((rt0.c0)OR(rt0.c3)))AND(rt0.c3))))) UNION SELECT DISTINCT rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (((((((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1))) BETWEEN (((rt0.c1)!=(rt0.c1))) AND (((((rt0.c0)OR(rt0.c3)))AND(rt0.c3))))))) UNION SELECT DISTINCT rt0.c3, rt0.c2 FROM rt0 WHERE (((((((((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1))) BETWEEN (((rt0.c1)<>(rt0.c1))) AND (((((rt0.c0)OR(rt0.c3)))AND(rt0.c3))))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2 FROM rt0;
SELECT rt0.c2, t1.c0 FROM t1, rt0 GROUP BY rt0.c2, t1.c0;
SELECT rt0.c2, t1.c0 FROM t1, rt0 WHERE (((CAST(t1.c0 AS REAL)) NOT NULL)) GROUP BY rt0.c2, t1.c0 UNION SELECT ALL rt0.c2, t1.c0 FROM t1, rt0 WHERE ((NOT (((CAST(t1.c0 AS REAL)) NOT NULL)))) GROUP BY rt0.c2, t1.c0 UNION SELECT ALL rt0.c2, t1.c0 FROM t1, rt0 WHERE (((((CAST(t1.c0 AS REAL)) NOT NULL)) ISNULL)) GROUP BY rt0.c2, t1.c0;
SELECT rt0.c2, t1.c0 FROM t1, rt0 GROUP BY rt0.c2, t1.c0;
SELECT rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4;
SELECT rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING SUM(COUNT(rt0.c1)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING (NOT (SUM(COUNT(rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING ((SUM(COUNT(rt0.c1))) ISNULL);
SELECT ALL t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE ((((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END))<=((CAST(0.7001295845107043 AS BLOB))))) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT ((((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END))<=((CAST(0.7001295845107043 AS BLOB))))))) UNION ALL SELECT t1.c0 FROM t1 WHERE ((((((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END))<=((CAST(0.7001295845107043 AS BLOB))))) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (NULLIF(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), COALESCE(t1.c0, t1.c0))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (NULLIF(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), COALESCE(t1.c0, t1.c0))))) UNION SELECT DISTINCT * FROM t1 WHERE (((NULLIF(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), COALESCE(t1.c0, t1.c0))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT rt0.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c3 FROM t1, rt0 WHERE ((((rt0.c3 IN (rt0.c4))) BETWEEN ((NOT (rt0.c4))) AND (((rt0.c1)%(rt0.c3))))) GROUP BY rt0.c0, rt0.c3 UNION SELECT rt0.c0, rt0.c3 FROM t1, rt0 WHERE ((NOT ((((rt0.c3 IN (rt0.c4))) BETWEEN ((NOT (rt0.c4))) AND (((rt0.c1)%(rt0.c3))))))) GROUP BY rt0.c0, rt0.c3 UNION SELECT rt0.c0, rt0.c3 FROM t1, rt0 WHERE ((((((rt0.c3 IN (rt0.c4))) BETWEEN ((NOT (rt0.c4))) AND (((rt0.c1)%(rt0.c3))))) ISNULL)) GROUP BY rt0.c0, rt0.c3;
SELECT rt0.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3;
SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2 HAVING x'' UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (x'')) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2 HAVING ((x'') ISNULL);
SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2 HAVING x'' UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (x'')) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2 HAVING ((x'') ISNULL);
SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE WHEN 0.12648989907156594 THEN DATETIME(rt0.c4, x'', 0.6930113317376457) ELSE CAST(rt0.c2 AS NUMERIC) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE WHEN 0.12648989907156594 THEN DATETIME(rt0.c4, x'', 0.6930113317376457) ELSE CAST(rt0.c2 AS NUMERIC) END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE WHEN 0.12648989907156594 THEN DATETIME(rt0.c4, x'', 0.6930113317376457) ELSE CAST(rt0.c2 AS NUMERIC) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((t1.c0) NOTNULL)) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((t1.c0) NOTNULL)))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((t1.c0) NOTNULL)) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c4;
SELECT ALL rt0.c0, rt0.c4 FROM rt0 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN rt0.c1 COLLATE BINARY ELSE rt0.c2 END) GROUP BY rt0.c0, rt0.c4 UNION SELECT rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN rt0.c1 COLLATE BINARY ELSE rt0.c2 END))) GROUP BY rt0.c0, rt0.c4 UNION SELECT ALL rt0.c0, rt0.c4 FROM rt0 WHERE (((CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN rt0.c1 COLLATE BINARY ELSE rt0.c2 END) ISNULL)) GROUP BY rt0.c0, rt0.c4;
SELECT ALL rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c4;
SELECT t1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY t1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c1;
SELECT ALL t1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c1 FROM rt0 NOT INDEXED, t1 GROUP BY t1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c1 HAVING MAX(GROUP_CONCAT(TOTAL(rt0.c0))) UNION ALL SELECT t1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY t1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c1 HAVING (NOT (MAX(GROUP_CONCAT(TOTAL(rt0.c0))))) UNION ALL SELECT t1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY t1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c1 HAVING ((MAX(GROUP_CONCAT(TOTAL(rt0.c0)))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM t1 LEFT OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE) BETWEEN (((t1.c0)==(rt0.c1))) AND (((x'a6a8') BETWEEN (rt0.c4) AND (rt0.c1))));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM t1 LEFT OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE) BETWEEN (((t1.c0)=(rt0.c1))) AND (((x'a6a8') BETWEEN (rt0.c4) AND (rt0.c1)))) WHERE (UNLIKELY(CAST(rt0.c3 AS BLOB))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM t1 LEFT OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE) BETWEEN (((t1.c0)==(rt0.c1))) AND (((x'a6a8') BETWEEN (rt0.c4) AND (rt0.c1)))) WHERE ((NOT (UNLIKELY(CAST(rt0.c3 AS BLOB))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM t1 LEFT OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE) BETWEEN (((t1.c0)=(rt0.c1))) AND (((x'a6a8') BETWEEN (rt0.c4) AND (rt0.c1)))) WHERE (((UNLIKELY(CAST(rt0.c3 AS BLOB))) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM t1 LEFT OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE) BETWEEN (((t1.c0)==(rt0.c1))) AND (((x'a6a8') BETWEEN (rt0.c4) AND (rt0.c1))));
SELECT DISTINCT * FROM rt0, t1;
SELECT DISTINCT * FROM rt0, t1 WHERE (((rt0.c0) NOT NULL) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((NOT (((rt0.c0) NOT NULL) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE (((((rt0.c0) NOT NULL) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0, t1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (CASE '1189404492'  WHEN ((((rt0.c2)AND(rt0.c0)))OR(x'df82')) THEN (rt0.c1 IN ()) END) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (CASE '1189404492'  WHEN ((((rt0.c2)AND(rt0.c0)))OR(x'df82')) THEN (rt0.c1 IN ()) END))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((CASE '1189404492'  WHEN ((((rt0.c2)AND(rt0.c0)))OR(x'df82')) THEN (rt0.c1 IN ()) END) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c3, t1.c0 FROM rt0 RIGHT OUTER JOIN t1 ON (rt0.c3 COLLATE NOCASE IN (ABS(DISTINCT rt0.c4))) GROUP BY rt0.c1, rt0.c3, t1.c0;
SELECT rt0.c1, rt0.c3, t1.c0 FROM rt0 RIGHT OUTER JOIN t1 ON (rt0.c3 COLLATE NOCASE IN (ABS(DISTINCT rt0.c4))) GROUP BY rt0.c1, rt0.c3, t1.c0 HAVING GROUP_CONCAT(CAST(t1.c0 AS REAL)) UNION ALL SELECT rt0.c1, rt0.c3, t1.c0 FROM rt0 RIGHT OUTER JOIN t1 ON (rt0.c3 COLLATE NOCASE IN (ABS(DISTINCT rt0.c4))) GROUP BY rt0.c1, rt0.c3, t1.c0 HAVING (NOT (GROUP_CONCAT(CAST(t1.c0 AS REAL)))) UNION ALL SELECT rt0.c1, rt0.c3, t1.c0 FROM rt0 RIGHT OUTER JOIN t1 ON (rt0.c3 COLLATE NOCASE IN (ABS(DISTINCT rt0.c4))) GROUP BY rt0.c1, rt0.c3, t1.c0 HAVING ((GROUP_CONCAT(CAST(t1.c0 AS REAL))) ISNULL);
SELECT ALL rt0.c1, rt0.c3, t1.c0 FROM rt0 RIGHT OUTER JOIN t1 ON (rt0.c3 COLLATE NOCASE IN (ABS(DISTINCT rt0.c4))) GROUP BY rt0.c1, rt0.c3, t1.c0;
SELECT rt0.c1, rt0.c3, t1.c0 FROM rt0 RIGHT OUTER JOIN t1 ON (rt0.c3 COLLATE NOCASE IN (ABS(DISTINCT rt0.c4))) GROUP BY rt0.c1, rt0.c3, t1.c0 HAVING GROUP_CONCAT(CAST(t1.c0 AS REAL)) UNION ALL SELECT rt0.c1, rt0.c3, t1.c0 FROM rt0 RIGHT OUTER JOIN t1 ON (rt0.c3 COLLATE NOCASE IN (ABS(DISTINCT rt0.c4))) GROUP BY rt0.c1, rt0.c3, t1.c0 HAVING (NOT (GROUP_CONCAT(CAST(t1.c0 AS REAL)))) UNION ALL SELECT rt0.c1, rt0.c3, t1.c0 FROM rt0 RIGHT OUTER JOIN t1 ON (rt0.c3 COLLATE NOCASE IN (ABS(DISTINCT rt0.c4))) GROUP BY rt0.c1, rt0.c3, t1.c0 HAVING ((GROUP_CONCAT(CAST(t1.c0 AS REAL))) ISNULL);
SELECT ALL rt0.c1, rt0.c3, t1.c0 FROM rt0 RIGHT OUTER JOIN t1 ON (rt0.c3 COLLATE NOCASE IN (ABS(DISTINCT rt0.c4))) GROUP BY rt0.c1, rt0.c3, t1.c0;
SELECT t1.c0 FROM t1, rt0;
SELECT ALL t1.c0 FROM t1, rt0 WHERE (((rt0.c2) BETWEEN (CAST(rt0.c4 AS TEXT)) AND ((((rt0.c4, t1.c0, rt0.c4))>=((t1.c0, t1.c0, rt0.c0)))))) UNION ALL SELECT t1.c0 FROM t1, rt0 WHERE ((NOT (((rt0.c2) BETWEEN (CAST(rt0.c4 AS TEXT)) AND ((((rt0.c4, t1.c0, rt0.c4))>=((t1.c0, t1.c0, rt0.c0)))))))) UNION ALL SELECT t1.c0 FROM t1, rt0 WHERE (((((rt0.c2) BETWEEN (CAST(rt0.c4 AS TEXT)) AND ((((rt0.c4, t1.c0, rt0.c4))>=((t1.c0, t1.c0, rt0.c0)))))) ISNULL));
SELECT t1.c0 FROM t1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c4) ISNULL)) NOT BETWEEN ((((rt0.c0))>((rt0.c2)))) AND (rt0.c4))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c4) ISNULL)) NOT BETWEEN ((((rt0.c0))>((rt0.c2)))) AND (rt0.c4))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c4) ISNULL)) NOT BETWEEN ((((rt0.c0))>((rt0.c2)))) AND (rt0.c4))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM t1, rt0 WHERE (rt0.c1) GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM t1, rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM t1, rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3, t1.c0, rt0.c0 FROM t1 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3, t1.c0, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3, t1.c0, rt0.c0 FROM t1 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3, t1.c0, rt0.c0 HAVING AVG((NOT (rt0.c4))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3, t1.c0, rt0.c0 FROM t1 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3, t1.c0, rt0.c0 HAVING (NOT (AVG((NOT (rt0.c4))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c3, t1.c0, rt0.c0 FROM t1 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3, t1.c0, rt0.c0 HAVING ((AVG((NOT (rt0.c4)))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3, t1.c0, rt0.c0 FROM t1 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3, t1.c0, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3, t1.c0, rt0.c0 FROM t1 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3, t1.c0, rt0.c0 HAVING AVG((NOT (rt0.c4))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3, t1.c0, rt0.c0 FROM t1 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3, t1.c0, rt0.c0 HAVING (NOT (AVG((NOT (rt0.c4))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c3, t1.c0, rt0.c0 FROM t1 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3, t1.c0, rt0.c0 HAVING ((AVG((NOT (rt0.c4)))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3, t1.c0, rt0.c0 FROM t1 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3, t1.c0, rt0.c0;
SELECT TOTAL(TRIM(0.948644673629386, (- (rt0.c1)))) FROM rt0, t1 ORDER BY (((rt0.c2)) BETWEEN ((((((rt0.c0)AND(rt0.c2)))AND(rt0.c3)))) AND ((CASE rt0.c3  WHEN t1.c0 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT ALL * FROM rt0, t1;
SELECT ALL * FROM rt0, t1 WHERE ((((rt0.c1 IN ())) NOTNULL)) UNION ALL SELECT ALL * FROM rt0, t1 WHERE ((NOT ((((rt0.c1 IN ())) NOTNULL)))) UNION ALL SELECT * FROM rt0, t1 WHERE ((((((rt0.c1 IN ())) NOTNULL)) ISNULL));
SELECT ALL * FROM rt0, t1;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0, t1.c0 FROM rt0, t1;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0, t1.c0 FROM rt0, t1 WHERE (CAST(CAST(rt0.c3 AS REAL) AS REAL)) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0, t1.c0 FROM rt0, t1 WHERE ((NOT (CAST(CAST(rt0.c3 AS REAL) AS REAL)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0, t1.c0 FROM rt0, t1 WHERE (((CAST(CAST(rt0.c3 AS REAL) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0, t1.c0 FROM rt0, t1;
SELECT rt0.c2, rt0.c1, rt0.c0, t1.c0, rt0.c4 FROM rt0, t1 GROUP BY rt0.c2, rt0.c1, rt0.c0, t1.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, t1.c0, rt0.c4 FROM rt0, t1 WHERE ((NOT (((((rt0.c2)AND(t1.c0)))AND(rt0.c2))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, t1.c0, rt0.c4 UNION SELECT rt0.c2, rt0.c1, rt0.c0, t1.c0, rt0.c4 FROM rt0, t1 WHERE ((NOT ((NOT (((((rt0.c2)AND(t1.c0)))AND(rt0.c2))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, t1.c0, rt0.c4 UNION SELECT rt0.c2, rt0.c1, rt0.c0, t1.c0, rt0.c4 FROM rt0, t1 WHERE ((((NOT (((((rt0.c2)AND(t1.c0)))AND(rt0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, t1.c0, rt0.c4;
SELECT rt0.c2, rt0.c1, rt0.c0, t1.c0, rt0.c4 FROM rt0, t1 GROUP BY rt0.c2, rt0.c1, rt0.c0, t1.c0, rt0.c4;
SELECT ALL rt0.c1, t1.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0 FULL OUTER JOIN t1 ON (~ ((((rt0.c3))<=((rt0.c1))))) GROUP BY rt0.c1, t1.c0, rt0.c3, rt0.c4, rt0.c2;
SELECT ALL rt0.c1, t1.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0 FULL OUTER JOIN t1 ON (~ ((((rt0.c3))<=((rt0.c1))))) GROUP BY rt0.c1, t1.c0, rt0.c3, rt0.c4, rt0.c2 HAVING COUNT(COUNT(rt0.c3)) UNION ALL SELECT rt0.c1, t1.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0 FULL OUTER JOIN t1 ON (~ ((((rt0.c3))<=((rt0.c1))))) GROUP BY rt0.c1, t1.c0, rt0.c3, rt0.c4, rt0.c2 HAVING (NOT (COUNT(COUNT(rt0.c3)))) UNION ALL SELECT rt0.c1, t1.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0 FULL OUTER JOIN t1 ON (~ ((((rt0.c3))<=((rt0.c1))))) GROUP BY rt0.c1, t1.c0, rt0.c3, rt0.c4, rt0.c2 HAVING ((COUNT(COUNT(rt0.c3))) ISNULL);
SELECT * FROM t1;
SELECT * FROM t1 WHERE (((((((((TIME(t1.c0, t1.c0, t1.c0, t1.c0, t1.c0))OR(((t1.c0)>>(t1.c0)))))OR((- (t1.c0)))))AND((- (t1.c0)))))AND(t1.c0))) UNION ALL SELECT * FROM t1 WHERE ((NOT (((((((((TIME(t1.c0, t1.c0, t1.c0, t1.c0, t1.c0))OR(((t1.c0)>>(t1.c0)))))OR((- (t1.c0)))))AND((- (t1.c0)))))AND(t1.c0))))) UNION ALL SELECT ALL * FROM t1 WHERE (((((((((((TIME(t1.c0, t1.c0, t1.c0, t1.c0, t1.c0))OR(((t1.c0)>>(t1.c0)))))OR((- (t1.c0)))))AND((- (t1.c0)))))AND(t1.c0))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT * FROM rt0 CROSS JOIN t1 ON CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS REAL);
SELECT DISTINCT * FROM rt0 CROSS JOIN t1 ON CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS REAL) WHERE (CASE WHEN (((rt0.c2))>=((t1.c0))) THEN rt0.c3 COLLATE NOCASE ELSE t1.c0 COLLATE BINARY END) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN t1 ON CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS REAL) WHERE ((NOT (CASE WHEN (((rt0.c2))>=((t1.c0))) THEN rt0.c3 COLLATE NOCASE ELSE t1.c0 COLLATE BINARY END))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN t1 ON CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS REAL) WHERE (((CASE WHEN (((rt0.c2))>=((t1.c0))) THEN rt0.c3 COLLATE NOCASE ELSE t1.c0 COLLATE BINARY END) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN t1 ON CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS REAL);
SELECT t1.c0, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY t1.c0, rt0.c1, rt0.c3;
SELECT ALL t1.c0, rt0.c1, rt0.c3 FROM t1, rt0 WHERE (((((rt0.c1) IS FALSE)) IS FALSE)) GROUP BY t1.c0, rt0.c1, rt0.c3 UNION SELECT ALL t1.c0, rt0.c1, rt0.c3 FROM t1, rt0 WHERE ((NOT (((((rt0.c1) IS FALSE)) IS FALSE)))) GROUP BY t1.c0, rt0.c1, rt0.c3 UNION SELECT ALL t1.c0, rt0.c1, rt0.c3 FROM t1, rt0 WHERE (((((((rt0.c1) IS FALSE)) IS FALSE)) ISNULL)) GROUP BY t1.c0, rt0.c1, rt0.c3;
SELECT t1.c0, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY t1.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c1, rt0.c0 FROM t1, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM t1, rt0 GROUP BY rt0.c1, rt0.c0 HAVING AVG(CASE WHEN t1.c0 THEN rt0.c0 WHEN TOTAL(TOTAL(GROUP_CONCAT(x''))) THEN t1.c0 WHEN MIN(rt0.c2) THEN rt0.c2 ELSE rt0.c2 END) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM t1, rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (AVG(CASE WHEN t1.c0 THEN rt0.c0 WHEN TOTAL(TOTAL(GROUP_CONCAT(x''))) THEN t1.c0 WHEN MIN(rt0.c2) THEN rt0.c2 ELSE rt0.c2 END))) UNION ALL SELECT rt0.c1, rt0.c0 FROM t1, rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((AVG(CASE WHEN t1.c0 THEN rt0.c0 WHEN TOTAL(TOTAL(GROUP_CONCAT(x''))) THEN t1.c0 WHEN MIN(rt0.c2) THEN rt0.c2 ELSE rt0.c2 END)) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE (CAST(((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)) AS TEXT)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT (CAST(((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)) AS TEXT)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE (((CAST(((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)) AS TEXT)) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0;
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE ((((((rt0.c2)/(NULL)), ((rt0.c1)>(rt0.c2)), ((rt0.c3) ISNULL), ((rt0.c3)>(rt0.c2)), rt0.c0 COLLATE RTRIM))<=(((~ (rt0.c1)), NULL COLLATE RTRIM, rt0.c0, ((rt0.c0)*(rt0.c0)), ((rt0.c1) NOT NULL))))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT ((((((rt0.c2)/(NULL)), ((rt0.c1)>(rt0.c2)), ((rt0.c3) ISNULL), ((rt0.c3)>(rt0.c2)), rt0.c0 COLLATE RTRIM))<=(((~ (rt0.c1)), NULL COLLATE RTRIM, rt0.c0, ((rt0.c0)*(rt0.c0)), ((rt0.c1) NOT NULL))))))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((((((((rt0.c2)/(NULL)), ((rt0.c1)>(rt0.c2)), ((rt0.c3) ISNULL), ((rt0.c3)>(rt0.c2)), rt0.c0 COLLATE RTRIM))<=(((~ (rt0.c1)), NULL COLLATE RTRIM, rt0.c0, ((rt0.c0)*(rt0.c0)), ((rt0.c1) NOT NULL))))) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT rt0.c0, rt0.c3, t1.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c3, t1.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c3, t1.c0, rt0.c2, rt0.c1 FROM rt0, t1 WHERE (((((((rt0.c4)AND(t1.c0)))AND(((rt0.c4) NOTNULL))))OR((~ (rt0.c3))))) GROUP BY rt0.c0, rt0.c3, t1.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c3, t1.c0, rt0.c2, rt0.c1 FROM rt0, t1 WHERE ((NOT (((((((rt0.c4)AND(t1.c0)))AND(((rt0.c4) NOTNULL))))OR((~ (rt0.c3))))))) GROUP BY rt0.c0, rt0.c3, t1.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c3, t1.c0, rt0.c2, rt0.c1 FROM rt0, t1 NOT INDEXED WHERE (((((((((rt0.c4)AND(t1.c0)))AND(((rt0.c4) NOTNULL))))OR((~ (rt0.c3))))) ISNULL)) GROUP BY rt0.c0, rt0.c3, t1.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c3, t1.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c3, t1.c0, rt0.c2, rt0.c1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((MIN(AVG(COUNT(*))))>=(GROUP_CONCAT(t1.c0))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((MIN(AVG(COUNT(*))))>=(GROUP_CONCAT(t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((MIN(AVG(COUNT(*))))>=(GROUP_CONCAT(t1.c0)))) ISNULL);
SELECT rt0.c4, rt0.c1 FROM rt0;
SELECT rt0.c4, rt0.c1 FROM rt0 WHERE (((UNLIKELY(rt0.c0))|(((rt0.c3) ISNULL)))) UNION ALL SELECT ALL rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT (((UNLIKELY(rt0.c0))|(((rt0.c3) ISNULL)))))) UNION ALL SELECT ALL rt0.c4, rt0.c1 FROM rt0 WHERE (((((UNLIKELY(rt0.c0))|(((rt0.c3) ISNULL)))) ISNULL));
SELECT rt0.c4, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE (x'1f293040') UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT (x'1f293040'))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE (((x'1f293040') ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((1.51057458E8 COLLATE BINARY) NOTNULL)) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((1.51057458E8 COLLATE BINARY) NOTNULL)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((((1.51057458E8 COLLATE BINARY) NOTNULL)) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING SUM(COUNT(*)) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) BETWEEN (((((rt0.c4)OR(rt0.c1)))OR(rt0.c0))) AND ((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c3)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE RTRIM) BETWEEN (((((rt0.c4)OR(rt0.c1)))OR(rt0.c0))) AND ((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c3)))))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0 WHERE (((((rt0.c1 COLLATE RTRIM) BETWEEN (((((rt0.c4)OR(rt0.c1)))OR(rt0.c0))) AND ((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c3)))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c1, t1.c0, rt0.c3 FROM t1, rt0;
SELECT DISTINCT rt0.c1, t1.c0, rt0.c3 FROM t1, rt0 WHERE (((((rt0.c0)<(rt0.c1))) IS FALSE)) UNION SELECT DISTINCT rt0.c1, t1.c0, rt0.c3 FROM t1, rt0 WHERE ((NOT (((((rt0.c0)<(rt0.c1))) IS FALSE)))) UNION SELECT DISTINCT rt0.c1, t1.c0, rt0.c3 FROM t1, rt0 WHERE (((((((rt0.c0)<(rt0.c1))) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c1, t1.c0, rt0.c3 FROM t1, rt0;
SELECT ALL rt0.c3, rt0.c2, t1.c0 FROM t1, rt0 GROUP BY rt0.c3, rt0.c2, t1.c0;
SELECT rt0.c3, rt0.c2, t1.c0 FROM t1, rt0 WHERE ((t1.c0 COLLATE BINARY IN (((rt0.c3) NOTNULL)))) GROUP BY rt0.c3, rt0.c2, t1.c0 UNION SELECT ALL rt0.c3, rt0.c2, t1.c0 FROM t1, rt0 WHERE ((NOT ((t1.c0 COLLATE BINARY IN (((rt0.c3) NOTNULL)))))) GROUP BY rt0.c3, rt0.c2, t1.c0 UNION SELECT ALL rt0.c3, rt0.c2, t1.c0 FROM t1, rt0 WHERE ((((t1.c0 COLLATE BINARY IN (((rt0.c3) NOTNULL)))) ISNULL)) GROUP BY rt0.c3, rt0.c2, t1.c0;
SELECT ALL rt0.c3, rt0.c2, t1.c0 FROM t1, rt0 GROUP BY rt0.c3, rt0.c2, t1.c0;
SELECT ALL rt0.c3, rt0.c0, t1.c0, rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN t1 GROUP BY rt0.c3, rt0.c0, t1.c0, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c0, t1.c0, rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN t1 GROUP BY rt0.c3, rt0.c0, t1.c0, rt0.c2, rt0.c1 HAVING MAX(CASE WHEN AVG(rt0.c4) THEN rt0.c3 END) UNION ALL SELECT rt0.c3, rt0.c0, t1.c0, rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN t1 GROUP BY rt0.c3, rt0.c0, t1.c0, rt0.c2, rt0.c1 HAVING (NOT (MAX(CASE WHEN AVG(rt0.c4) THEN rt0.c3 END))) UNION ALL SELECT rt0.c3, rt0.c0, t1.c0, rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN t1 GROUP BY rt0.c3, rt0.c0, t1.c0, rt0.c2, rt0.c1 HAVING ((MAX(CASE WHEN AVG(rt0.c4) THEN rt0.c3 END)) ISNULL);
SELECT * FROM t1;
SELECT * FROM t1 WHERE (CASE WHEN ((t1.c0)>=('^z볁n10q')) THEN t1.c0 COLLATE NOCASE WHEN ((((t1.c0)AND(t1.c0)))AND(t1.c0)) THEN CASE t1.c0  WHEN x'' THEN t1.c0 END WHEN CAST(t1.c0 AS REAL) THEN t1.c0 ELSE '0.28530681967869864' END) UNION ALL SELECT * FROM t1 WHERE ((NOT (CASE WHEN ((t1.c0)>=('^z볁n10q')) THEN t1.c0 COLLATE NOCASE WHEN ((((t1.c0)AND(t1.c0)))AND(t1.c0)) THEN CASE t1.c0  WHEN x'' THEN t1.c0 END WHEN CAST(t1.c0 AS REAL) THEN t1.c0 ELSE '0.28530681967869864' END))) UNION ALL SELECT * FROM t1 WHERE (((CASE WHEN ((t1.c0)>=('^z볁n10q')) THEN t1.c0 COLLATE NOCASE WHEN ((((t1.c0)AND(t1.c0)))AND(t1.c0)) THEN CASE t1.c0  WHEN x'' THEN t1.c0 END WHEN CAST(t1.c0 AS REAL) THEN t1.c0 ELSE '0.28530681967869864' END) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT * FROM rt0, t1;
SELECT DISTINCT * FROM rt0, t1 WHERE (((((((t1.c0)AND(rt0.c0)))AND(rt0.c2)))OR(((((rt0.c4)AND(rt0.c1)))OR(t1.c0))))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((NOT (((((((t1.c0)AND(rt0.c0)))AND(rt0.c2)))OR(((((rt0.c4)AND(rt0.c1)))OR(t1.c0))))))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE (((((((((t1.c0)AND(rt0.c0)))AND(rt0.c2)))OR(((((rt0.c4)AND(rt0.c1)))OR(t1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (CAST(CASE t1.c0  WHEN '1248059885' THEN t1.c0 ELSE '' END AS BLOB)) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (CAST(CASE t1.c0  WHEN '1248059885' THEN t1.c0 ELSE '' END AS BLOB)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((CAST(CASE t1.c0  WHEN '1248059885' THEN t1.c0 ELSE '' END AS BLOB)) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4;
SELECT ALL rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4 HAVING SUM(rt0.c2) UNION ALL SELECT ALL rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4 HAVING (NOT (SUM(rt0.c2))) UNION ALL SELECT rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4 HAVING ((SUM(rt0.c2)) ISNULL);
SELECT rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4;
SELECT ALL rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4 HAVING SUM(rt0.c2) UNION ALL SELECT ALL rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4 HAVING (NOT (SUM(rt0.c2))) UNION ALL SELECT rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4 HAVING ((SUM(rt0.c2)) ISNULL);
SELECT rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4;
SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0 WHERE ((((- (rt0.c2)))OR((rt0.c0 IN ())))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT ((((- (rt0.c2)))OR((rt0.c0 IN ())))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0 WHERE ((((((- (rt0.c2)))OR((rt0.c0 IN ())))) ISNULL));
SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c2 FROM rt0 WHERE ((((0xfffffffff0b367b2 IN ())) IS FALSE)) UNION SELECT DISTINCT rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT ((((0Xfffffffff0b367b2 IN ())) IS FALSE)))) UNION SELECT DISTINCT rt0.c3, rt0.c2 FROM rt0 WHERE ((((((0xfffffffff0b367b2 IN ())) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2 FROM rt0;
SELECT ALL rt0.c2, t1.c0, rt0.c3, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, t1.c0, rt0.c3, rt0.c0;
SELECT rt0.c2, t1.c0, rt0.c3, rt0.c0 FROM rt0, t1 WHERE (load_extension(((t1.c0)<(t1.c0)), (~ (rt0.c2)))) GROUP BY rt0.c2, t1.c0, rt0.c3, rt0.c0 UNION SELECT rt0.c2, t1.c0, rt0.c3, rt0.c0 FROM rt0, t1 WHERE ((NOT (load_extension(((t1.c0)<(t1.c0)), (~ (rt0.c2)))))) GROUP BY rt0.c2, t1.c0, rt0.c3, rt0.c0 UNION SELECT rt0.c2, t1.c0, rt0.c3, rt0.c0 FROM rt0, t1 WHERE (((load_extension(((t1.c0)<(t1.c0)), (~ (rt0.c2)))) ISNULL)) GROUP BY rt0.c2, t1.c0, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM t1 RIGHT OUTER JOIN rt0 ON '' GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM t1 RIGHT OUTER JOIN rt0 ON '' GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 HAVING CAST(AVG(x'3660') AS NUMERIC) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM t1 RIGHT OUTER JOIN rt0 ON '' GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 HAVING (NOT (CAST(AVG(x'3660') AS NUMERIC))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM t1 RIGHT OUTER JOIN rt0 ON '' GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 HAVING ((CAST(AVG(x'3660') AS NUMERIC)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM t1 RIGHT OUTER JOIN rt0 ON '' GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM t1 RIGHT OUTER JOIN rt0 ON '' GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 HAVING CAST(AVG(x'3660') AS NUMERIC) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM t1 RIGHT OUTER JOIN rt0 ON '' GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 HAVING (NOT (CAST(AVG(x'3660') AS NUMERIC))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM t1 RIGHT OUTER JOIN rt0 ON '' GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 HAVING ((CAST(AVG(x'3660') AS NUMERIC)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM t1 RIGHT OUTER JOIN rt0 ON '' GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4;
SELECT * FROM rt0 FULL OUTER JOIN t1 ON CAST(CASE rt0.c0  WHEN t1.c0 THEN rt0.c2 ELSE rt0.c4 END AS BLOB);
SELECT * FROM rt0 FULL OUTER JOIN t1 ON CAST(CASE rt0.c0  WHEN t1.c0 THEN rt0.c2 ELSE rt0.c4 END AS BLOB) WHERE (((CAST(rt0.c1 AS NUMERIC)) BETWEEN (rt0.c2) AND (x''))) UNION ALL SELECT ALL * FROM rt0 FULL OUTER JOIN t1 ON CAST(CASE rt0.c0  WHEN t1.c0 THEN rt0.c2 ELSE rt0.c4 END AS BLOB) WHERE ((NOT (((CAST(rt0.c1 AS NUMERIC)) BETWEEN (rt0.c2) AND (x''))))) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN t1 ON CAST(CASE rt0.c0  WHEN t1.c0 THEN rt0.c2 ELSE rt0.c4 END AS BLOB) WHERE (((((CAST(rt0.c1 AS NUMERIC)) BETWEEN (rt0.c2) AND (x''))) ISNULL));
SELECT * FROM rt0 FULL OUTER JOIN t1 ON CAST(CASE rt0.c0  WHEN t1.c0 THEN rt0.c2 ELSE rt0.c4 END AS BLOB);
SELECT DISTINCT rt0.c0, rt0.c2, t1.c0 FROM rt0, t1;
SELECT DISTINCT rt0.c0, rt0.c2, t1.c0 FROM rt0, t1 WHERE (((rt0.c0) IS TRUE)) UNION SELECT DISTINCT rt0.c0, rt0.c2, t1.c0 FROM rt0, t1 WHERE ((NOT (((rt0.c0) IS TRUE)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, t1.c0 FROM rt0, t1 WHERE (((((rt0.c0) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, t1.c0 FROM rt0, t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((NULL, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0)))))>=(((- (t1.c0)))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((NULL, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0)))))>=(((- (t1.c0)))))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((((((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((NULL, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0)))))>=(((- (t1.c0)))))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c2, t1.c0 FROM rt0 LEFT OUTER JOIN t1 ON ((((rt0.c4)) BETWEEN ((t1.c0)) AND (('P/['))) IN ()) GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c2, t1.c0;
SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c2, t1.c0 FROM rt0 LEFT OUTER JOIN t1 ON ((((rt0.c4)) BETWEEN ((t1.c0)) AND (('P/['))) IN ()) GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c2, t1.c0 HAVING AVG(GROUP_CONCAT(AVG(MIN(SUM(SUM(rt0.c1)))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c2, t1.c0 FROM rt0 LEFT OUTER JOIN t1 ON ((((rt0.c4)) BETWEEN ((t1.c0)) AND (('P/['))) IN ()) GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c2, t1.c0 HAVING (NOT (AVG(GROUP_CONCAT(AVG(MIN(SUM(SUM(rt0.c1)))))))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c2, t1.c0 FROM rt0 LEFT OUTER JOIN t1 ON ((((rt0.c4)) BETWEEN ((t1.c0)) AND (('P/['))) IN ()) GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c2, t1.c0 HAVING ((AVG(GROUP_CONCAT(AVG(MIN(SUM(SUM(rt0.c1))))))) ISNULL);
SELECT rt0.c4, rt0.c2, rt0.c1 FROM rt0 INNER JOIN t1 ON (((CAST(rt0.c0 AS BLOB), CAST(rt0.c0 AS NUMERIC), CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN t1.c0 WHEN rt0.c2 THEN rt0.c0 END))>((((rt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)), (NOT ('!~')), ((rt0.c3) IS FALSE))));
SELECT rt0.c4, rt0.c2, rt0.c1 FROM rt0 INNER JOIN t1 ON (((CAST(rt0.c0 AS BLOB), CAST(rt0.c0 AS NUMERIC), CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN t1.c0 WHEN rt0.c2 THEN rt0.c0 END))>((((rt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)), (NOT ('!~')), ((rt0.c3) IS FALSE)))) WHERE (PRINTF((rt0.c3 IN ()), CAST(t1.c0 AS NUMERIC), CAST(rt0.c1 AS REAL))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c1 FROM rt0 INNER JOIN t1 ON (((CAST(rt0.c0 AS BLOB), CAST(rt0.c0 AS NUMERIC), CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN t1.c0 WHEN rt0.c2 THEN rt0.c0 END))>((((rt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)), (NOT ('!~')), ((rt0.c3) IS FALSE)))) WHERE ((NOT (PRINTF((rt0.c3 IN ()), CAST(t1.c0 AS NUMERIC), CAST(rt0.c1 AS REAL))))) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c1 FROM rt0 INNER JOIN t1 ON (((CAST(rt0.c0 AS BLOB), CAST(rt0.c0 AS NUMERIC), CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN t1.c0 WHEN rt0.c2 THEN rt0.c0 END))>((((rt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)), (NOT ('!~')), ((rt0.c3) IS FALSE)))) WHERE (((PRINTF((rt0.c3 IN ()), CAST(t1.c0 AS NUMERIC), CAST(rt0.c1 AS REAL))) ISNULL));
SELECT rt0.c4, rt0.c2, rt0.c1 FROM rt0 INNER JOIN t1 ON (((CAST(rt0.c0 AS BLOB), CAST(rt0.c0 AS NUMERIC), CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN t1.c0 WHEN rt0.c2 THEN rt0.c0 END))>((((rt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)), (NOT ('!~')), ((rt0.c3) IS FALSE))));
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE ((CAST(t1.c0 AS REAL) IN ())) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT ((CAST(t1.c0 AS REAL) IN ())))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((((CAST(t1.c0 AS REAL) IN ())) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3;
SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE ((((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))<>(rt0.c2 COLLATE NOCASE))) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT ((((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))<>(rt0.c2 COLLATE NOCASE))))) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE ((((((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))<>(rt0.c2 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING t1.c0 UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (t1.c0)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((t1.c0) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING t1.c0 UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (t1.c0)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((t1.c0) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL rt0.c0, t1.c0, rt0.c3, rt0.c4 FROM t1 INNER JOIN rt0 ON ((((((((((rt0.c2)>=(rt0.c0)))OR(CAST(rt0.c3 AS NUMERIC))))AND((t1.c0 IN ()))))OR(((rt0.c2)IS NOT(rt0.c2)))))AND(CASE rt0.c1  WHEN rt0.c2 THEN t1.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN x'' END));
SELECT ALL rt0.c0, t1.c0, rt0.c3, rt0.c4 FROM t1 INNER JOIN rt0 ON ((((((((((rt0.c2)>=(rt0.c0)))OR(CAST(rt0.c3 AS NUMERIC))))AND((t1.c0 IN ()))))OR(((rt0.c2)IS NOT(rt0.c2)))))AND(CASE rt0.c1  WHEN rt0.c2 THEN t1.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN x'' END)) WHERE ((((rt0.c1)) BETWEEN ((((((((((rt0.c2)OR(rt0.c4)))AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c3)))) AND ((CAST(rt0.c4 AS REAL))))) UNION ALL SELECT ALL rt0.c0, t1.c0, rt0.c3, rt0.c4 FROM t1 INNER JOIN rt0 ON ((((((((((rt0.c2)>=(rt0.c0)))OR(CAST(rt0.c3 AS NUMERIC))))AND((t1.c0 IN ()))))OR(((rt0.c2)IS NOT(rt0.c2)))))AND(CASE rt0.c1  WHEN rt0.c2 THEN t1.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN x'' END)) WHERE ((NOT ((((rt0.c1)) BETWEEN ((((((((((rt0.c2)OR(rt0.c4)))AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c3)))) AND ((CAST(rt0.c4 AS REAL))))))) UNION ALL SELECT ALL rt0.c0, t1.c0, rt0.c3, rt0.c4 FROM t1 INNER JOIN rt0 ON ((((((((((rt0.c2)>=(rt0.c0)))OR(CAST(rt0.c3 AS NUMERIC))))AND((t1.c0 IN ()))))OR(((rt0.c2)IS NOT(rt0.c2)))))AND(CASE rt0.c1  WHEN rt0.c2 THEN t1.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN x'' END)) WHERE ((((((rt0.c1)) BETWEEN ((((((((((rt0.c2)OR(rt0.c4)))AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c3)))) AND ((CAST(rt0.c4 AS REAL))))) ISNULL));
SELECT ALL rt0.c0, t1.c0, rt0.c3, rt0.c4 FROM t1 INNER JOIN rt0 ON ((((((((((rt0.c2)>=(rt0.c0)))OR(CAST(rt0.c3 AS NUMERIC))))AND((t1.c0 IN ()))))OR(((rt0.c2)IS NOT(rt0.c2)))))AND(CASE rt0.c1  WHEN rt0.c2 THEN t1.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN x'' END));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0, t1;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0, t1 WHERE (((((((rt0.c2, rt0.c3, t1.c0))>=((rt0.c3, t1.c0, rt0.c1)))))>((((rt0.c4) ISNULL))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0, t1 WHERE ((NOT (((((((rt0.c2, rt0.c3, t1.c0))>=((rt0.c3, t1.c0, rt0.c1)))))>((((rt0.c4) ISNULL))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0, t1 WHERE (((((((((rt0.c2, rt0.c3, t1.c0))>=((rt0.c3, t1.c0, rt0.c1)))))>((((rt0.c4) ISNULL))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0, t1;
SELECT ALL rt0.c3, t1.c0, rt0.c0 FROM t1, rt0 GROUP BY rt0.c3, t1.c0, rt0.c0;
SELECT ALL rt0.c3, t1.c0, rt0.c0 FROM t1, rt0 WHERE (CAST(CAST(rt0.c3 AS INTEGER) AS TEXT)) GROUP BY rt0.c3, t1.c0, rt0.c0 UNION SELECT rt0.c3, t1.c0, rt0.c0 FROM t1, rt0 WHERE ((NOT (CAST(CAST(rt0.c3 AS INTEGER) AS TEXT)))) GROUP BY rt0.c3, t1.c0, rt0.c0 UNION SELECT ALL rt0.c3, t1.c0, rt0.c0 FROM t1, rt0 WHERE (((CAST(CAST(rt0.c3 AS INTEGER) AS TEXT)) ISNULL)) GROUP BY rt0.c3, t1.c0, rt0.c0;
SELECT ALL rt0.c3, t1.c0, rt0.c0 FROM t1, rt0 GROUP BY rt0.c3, t1.c0, rt0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING SUM(((t1.c0) BETWEEN (AVG(GROUP_CONCAT(MIN(t1.c0)))) AND (t1.c0))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (SUM(((t1.c0) BETWEEN (AVG(GROUP_CONCAT(MIN(t1.c0)))) AND (t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((SUM(((t1.c0) BETWEEN (AVG(GROUP_CONCAT(MIN(t1.c0)))) AND (t1.c0)))) ISNULL);
SELECT ALL * FROM rt0, t1;
SELECT ALL * FROM rt0, t1 WHERE ((x'' IN ((('-809537283')+(rt0.c3)), (((rt0.c3, rt0.c1, rt0.c2, rt0.c1, 'c'))!=((rt0.c3, rt0.c0, rt0.c1, 0.5437234087789998, rt0.c3)))))) UNION ALL SELECT ALL * FROM rt0, t1 WHERE ((NOT ((x'' IN ((('-809537283')+(rt0.c3)), (((rt0.c3, rt0.c1, rt0.c2, rt0.c1, 'c'))!=((rt0.c3, rt0.c0, rt0.c1, 0.5437234087789998, rt0.c3)))))))) UNION ALL SELECT ALL * FROM rt0, t1 WHERE ((((x'' IN ((('-809537283')+(rt0.c3)), (((rt0.c3, rt0.c1, rt0.c2, rt0.c1, 'c'))!=((rt0.c3, rt0.c0, rt0.c1, 0.5437234087789998, rt0.c3)))))) ISNULL));
SELECT ALL * FROM rt0, t1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END)AND(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(rt0.c4))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END)AND(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(rt0.c4))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END)AND(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(rt0.c4))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT t1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c1 FROM t1 CROSS JOIN rt0 ON ((rt0.c1) BETWEEN (x'') AND (rt0.c1)) COLLATE NOCASE GROUP BY t1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c1;
SELECT t1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c1 FROM t1 CROSS JOIN rt0 ON ((rt0.c1) BETWEEN (x'') AND (rt0.c1)) COLLATE NOCASE WHERE (0Xffffffffee020e62) GROUP BY t1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c1 UNION SELECT ALL t1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c1 FROM t1 CROSS JOIN rt0 ON ((rt0.c1) BETWEEN (x'') AND (rt0.c1)) COLLATE NOCASE WHERE ((NOT (0Xffffffffee020e62))) GROUP BY t1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c1 UNION SELECT t1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c1 FROM t1 CROSS JOIN rt0 ON ((rt0.c1) BETWEEN (x'') AND (rt0.c1)) COLLATE NOCASE WHERE (((0Xffffffffee020e62) ISNULL)) GROUP BY t1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c1;
SELECT t1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c1 FROM t1 CROSS JOIN rt0 ON ((rt0.c1) BETWEEN (x'') AND (rt0.c1)) COLLATE NOCASE GROUP BY t1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t1 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t1 GROUP BY rt0.c1 HAVING x'' UNION ALL SELECT rt0.c1 FROM rt0, t1 GROUP BY rt0.c1 HAVING (NOT (x'')) UNION ALL SELECT rt0.c1 FROM rt0, t1 GROUP BY rt0.c1 HAVING ((x'') ISNULL);
SELECT ALL rt0.c1 FROM rt0, t1 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t1 GROUP BY rt0.c1 HAVING x'' UNION ALL SELECT rt0.c1 FROM rt0, t1 GROUP BY rt0.c1 HAVING (NOT (x'')) UNION ALL SELECT rt0.c1 FROM rt0, t1 GROUP BY rt0.c1 HAVING ((x'') ISNULL);
SELECT ALL rt0.c1 FROM rt0, t1 GROUP BY rt0.c1;
SELECT TOTAL(((CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c4 END) NOT BETWEEN (TRIM(rt0.c2)) AND ((('673747419')=(rt0.c2))))) FROM t1, rt0;
SELECT rt0.c2, rt0.c4, t1.c0, rt0.c0 FROM t1, rt0;
SELECT ALL rt0.c2, rt0.c4, t1.c0, rt0.c0 FROM t1, rt0 WHERE (rt0.c4) UNION ALL SELECT rt0.c2, rt0.c4, t1.c0, rt0.c0 FROM t1, rt0 WHERE ((NOT (rt0.c4))) UNION ALL SELECT ALL rt0.c2, rt0.c4, t1.c0, rt0.c0 FROM t1, rt0 WHERE (((rt0.c4) ISNULL));
SELECT rt0.c2, rt0.c4, t1.c0, rt0.c0 FROM t1, rt0;
SELECT DISTINCT rt0.c4, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c2 FROM rt0 WHERE ('뵳_nsT|') UNION SELECT DISTINCT rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT ('뵳_nsT|'))) UNION SELECT DISTINCT rt0.c4, rt0.c2 FROM rt0 WHERE ((('뵳_nsT|') ISNULL));
SELECT DISTINCT rt0.c4, rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0, t1 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, t1 WHERE (CASE (+ (rt0.c0))  WHEN (+ (t1.c0)) THEN ((rt0.c3)>(rt0.c3)) WHEN ((rt0.c3) BETWEEN (rt0.c2) AND (t1.c0)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN (+ (rt0.c4)) THEN rtreenode('', rt0.c1) ELSE ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(x'cc80ae36')) END) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, t1 WHERE ((NOT (CASE (+ (rt0.c0))  WHEN (+ (t1.c0)) THEN ((rt0.c3)>(rt0.c3)) WHEN ((rt0.c3) BETWEEN (rt0.c2) AND (t1.c0)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN (+ (rt0.c4)) THEN rtreenode('', rt0.c1) ELSE ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(x'cc80ae36')) END))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, t1 WHERE (((CASE (+ (rt0.c0))  WHEN (+ (t1.c0)) THEN ((rt0.c3)>(rt0.c3)) WHEN ((rt0.c3) BETWEEN (rt0.c2) AND (t1.c0)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN (+ (rt0.c4)) THEN rtreenode('', rt0.c1) ELSE ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(x'cc80ae36')) END) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, t1 GROUP BY rt0.c2;
SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, t1.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, t1.c0;
SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, t1.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, t1.c0 HAVING SUM(CASE WHEN COUNT(MIN(rt0.c3)) THEN MAX(rt0.c0) WHEN MAX(SUM(rt0.c4)) THEN TOTAL(rt0.c2) WHEN rt0.c4 THEN MIN(rt0.c0) WHEN MAX(TOTAL(MAX(AVG(t1.c0)))) THEN rt0.c4 WHEN t1.c0 THEN AVG(TOTAL(rt0.c1)) ELSE TOTAL(TOTAL(GROUP_CONCAT(rt0.c0))) END) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, t1.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, t1.c0 HAVING (NOT (SUM(CASE WHEN COUNT(MIN(rt0.c3)) THEN MAX(rt0.c0) WHEN MAX(SUM(rt0.c4)) THEN TOTAL(rt0.c2) WHEN rt0.c4 THEN MIN(rt0.c0) WHEN MAX(TOTAL(MAX(AVG(t1.c0)))) THEN rt0.c4 WHEN t1.c0 THEN AVG(TOTAL(rt0.c1)) ELSE TOTAL(TOTAL(GROUP_CONCAT(rt0.c0))) END))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, t1.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, t1.c0 HAVING ((SUM(CASE WHEN COUNT(MIN(rt0.c3)) THEN MAX(rt0.c0) WHEN MAX(SUM(rt0.c4)) THEN TOTAL(rt0.c2) WHEN rt0.c4 THEN MIN(rt0.c0) WHEN MAX(TOTAL(MAX(AVG(t1.c0)))) THEN rt0.c4 WHEN t1.c0 THEN AVG(TOTAL(rt0.c1)) ELSE TOTAL(TOTAL(GROUP_CONCAT(rt0.c0))) END)) ISNULL);
SELECT ALL t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE ((((t1.c0)*(t1.c0)) IN ())) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT ((((t1.c0)*(t1.c0)) IN ())))) UNION ALL SELECT t1.c0 FROM t1 WHERE ((((((t1.c0)*(t1.c0)) IN ())) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE (CAST(CAST(rt0.c4 AS TEXT) AS REAL)) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c4 AS TEXT) AS REAL)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE (((CAST(CAST(rt0.c4 AS TEXT) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, rt0.c4, rt0.c1 FROM rt0 WHERE (0.664132932305288) GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c1 UNION SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT (0.664132932305288))) GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c1 UNION SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c1 FROM rt0 WHERE (((0.664132932305288) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c1;
SELECT ALL rt0.c1 FROM rt0 LEFT OUTER JOIN t1 ON NULL GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 LEFT OUTER JOIN t1 ON NULL GROUP BY rt0.c1 HAVING MIN((((rt0.c3, AVG(rt0.c4), TOTAL(rt0.c2))) BETWEEN ((t1.c0, rt0.c2, COUNT(*))) AND ((t1.c0, AVG(TOTAL(COUNT(*))), AVG(rt0.c4))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 LEFT OUTER JOIN t1 ON NULL GROUP BY rt0.c1 HAVING (NOT (MIN((((rt0.c3, AVG(rt0.c4), TOTAL(rt0.c2))) BETWEEN ((t1.c0, rt0.c2, COUNT(*))) AND ((t1.c0, AVG(TOTAL(COUNT(*))), AVG(rt0.c4))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 LEFT OUTER JOIN t1 ON NULL GROUP BY rt0.c1 HAVING ((MIN((((rt0.c3, AVG(rt0.c4), TOTAL(rt0.c2))) BETWEEN ((t1.c0, rt0.c2, COUNT(*))) AND ((t1.c0, AVG(TOTAL(COUNT(*))), AVG(rt0.c4)))))) ISNULL);
SELECT t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE (((TYPEOF(DISTINCT t1.c0))AND(CAST(t1.c0 AS REAL)))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((TYPEOF(DISTINCT t1.c0))AND(CAST(t1.c0 AS REAL)))))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE (((((TYPEOF(DISTINCT t1.c0))AND(CAST(t1.c0 AS REAL)))) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE ('-1132602051') UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0 NOT INDEXED WHERE ((NOT ('-1132602051'))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE ((('-1132602051') ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0;
SELECT ALL rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE ((((+ (rt0.c1))) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c4 END) AND (UPPER(DISTINCT rt0.c2)))) GROUP BY rt0.c4, rt0.c3, rt0.c2 UNION SELECT rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT ((((+ (rt0.c1))) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c4 END) AND (UPPER(DISTINCT rt0.c2)))))) GROUP BY rt0.c4, rt0.c3, rt0.c2 UNION SELECT rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE ((((((+ (rt0.c1))) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c4 END) AND (UPPER(DISTINCT rt0.c2)))) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c2;
SELECT ALL rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c1 FROM rt0, t1 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t1 GROUP BY rt0.c1 HAVING (+ (MIN(rt0.c4))) UNION ALL SELECT rt0.c1 FROM rt0, t1 GROUP BY rt0.c1 HAVING (NOT ((+ (MIN(rt0.c4))))) UNION ALL SELECT rt0.c1 FROM rt0, t1 GROUP BY rt0.c1 HAVING (((+ (MIN(rt0.c4)))) ISNULL);
SELECT rt0.c1 FROM rt0, t1 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t1 GROUP BY rt0.c1 HAVING (+ (MIN(rt0.c4))) UNION ALL SELECT rt0.c1 FROM rt0, t1 GROUP BY rt0.c1 HAVING (NOT ((+ (MIN(rt0.c4))))) UNION ALL SELECT rt0.c1 FROM rt0, t1 GROUP BY rt0.c1 HAVING (((+ (MIN(rt0.c4)))) ISNULL);
SELECT rt0.c1 FROM rt0, t1 GROUP BY rt0.c1;
SELECT * FROM t1;
SELECT ALL * FROM t1 WHERE (CASE WHEN ((t1.c0)%('-1699666842')) THEN CAST(t1.c0 AS INTEGER) END) UNION ALL SELECT * FROM t1 WHERE ((NOT (CASE WHEN ((t1.c0)%('-1699666842')) THEN CAST(t1.c0 AS INTEGER) END))) UNION ALL SELECT ALL * FROM t1 WHERE (((CASE WHEN ((t1.c0)%('-1699666842')) THEN CAST(t1.c0 AS INTEGER) END) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT * FROM rt0, t1;
SELECT DISTINCT * FROM rt0, t1 WHERE (TYPEOF(0x1165eed3)) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((NOT (TYPEOF(0x1165eed3)))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE (((TYPEOF(0X1165eed3)) ISNULL));
SELECT DISTINCT * FROM rt0, t1;
SELECT rt0.c1 FROM t1, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM t1, rt0 WHERE ((t1.c0 IN (((t1.c0) IS TRUE)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM t1, rt0 NOT INDEXED WHERE ((NOT ((t1.c0 IN (((t1.c0) IS TRUE)))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM t1, rt0 WHERE ((((t1.c0 IN (((t1.c0) IS TRUE)))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM t1, rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3;
SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3 HAVING AVG(CASE COUNT('?A*\r')  WHEN TOTAL(GROUP_CONCAT(MIN(rt0.c2))) THEN MIN(TOTAL(SUM(AVG(rt0.c3)))) ELSE MAX(GROUP_CONCAT(rt0.c4)) END) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3 HAVING (NOT (AVG(CASE COUNT('?A*\r')  WHEN TOTAL(GROUP_CONCAT(MIN(rt0.c2))) THEN MIN(TOTAL(SUM(AVG(rt0.c3)))) ELSE MAX(GROUP_CONCAT(rt0.c4)) END))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3 HAVING ((AVG(CASE COUNT('?A*\r')  WHEN TOTAL(GROUP_CONCAT(MIN(rt0.c2))) THEN MIN(TOTAL(SUM(AVG(rt0.c3)))) ELSE MAX(GROUP_CONCAT(rt0.c4)) END)) ISNULL);
SELECT * FROM t1, rt0;
SELECT * FROM t1, rt0 WHERE (rt0.c4) UNION ALL SELECT * FROM t1, rt0 WHERE ((NOT (rt0.c4))) UNION ALL SELECT ALL * FROM t1, rt0 WHERE (((rt0.c4) ISNULL));
SELECT * FROM t1, rt0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(CAST(t1.c0 AS NUMERIC))))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(CAST(t1.c0 AS NUMERIC))))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(CAST(t1.c0 AS NUMERIC))))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (((((122495616)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) IN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), (NOT (t1.c0))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((((122495616)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) IN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), (NOT (t1.c0))))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((((((122495616)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) IN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), (NOT (t1.c0))))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*))%(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((COUNT(*))%(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((COUNT(*))%(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*))%(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((COUNT(*))%(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((COUNT(*))%(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (0X6ebe647f) UNION ALL SELECT * FROM rt0 WHERE ((NOT (0x6ebe647f))) UNION ALL SELECT * FROM rt0 WHERE (((0x6ebe647f) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2 IN ()) IN (((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c2 IN ()) IN (((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2 IN ()) IN (((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM rt0 WHERE ((((rt0.c0 IN ())) NOT BETWEEN (((((((((rt0.c1)AND(rt0.c4)))AND(x'48aa')))OR(rt0.c0)))AND(rt0.c0))) AND (((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) GROUP BY rt0.c3, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT ((((rt0.c0 IN ())) NOT BETWEEN (((((((((rt0.c1)AND(rt0.c4)))AND(x'48aa')))OR(rt0.c0)))AND(rt0.c0))) AND (((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c2))))))) GROUP BY rt0.c3, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM rt0 WHERE ((((((rt0.c0 IN ())) NOT BETWEEN (((((((((rt0.c1)AND(rt0.c4)))AND(x'48aa')))OR(rt0.c0)))AND(rt0.c0))) AND (((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4;
SELECT ALL rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2;
SELECT rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2 HAVING ((((MAX(x'1873')) ISNULL)) NOT BETWEEN ((((rt0.c4)) NOT BETWEEN ((TOTAL(TOTAL(rt0.c2)))) AND ((rt0.c1)))) AND (TRIM(COUNT(MAX(rt0.c0)), SUM(MIN(GROUP_CONCAT(rt0.c3)))))) UNION ALL SELECT ALL rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2 HAVING (NOT (((((MAX(x'1873')) ISNULL)) NOT BETWEEN ((((rt0.c4)) NOT BETWEEN ((TOTAL(TOTAL(rt0.c2)))) AND ((rt0.c1)))) AND (TRIM(COUNT(MAX(rt0.c0)), SUM(MIN(GROUP_CONCAT(rt0.c3)))))))) UNION ALL SELECT rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2 HAVING ((((((MAX(x'1873')) ISNULL)) NOT BETWEEN ((((rt0.c4)) NOT BETWEEN ((TOTAL(TOTAL(rt0.c2)))) AND ((rt0.c1)))) AND (TRIM(COUNT(MAX(rt0.c0)), SUM(MIN(GROUP_CONCAT(rt0.c3))))))) ISNULL);
SELECT ALL rt0.c3, rt0.c0, rt0.c4 FROM rt0;
SELECT ALL rt0.c3, rt0.c0, rt0.c4 FROM rt0 WHERE (x'23cb') UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT (x'23cb'))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c4 FROM rt0 WHERE (((x'23cb') ISNULL));
SELECT ALL rt0.c3, rt0.c0, rt0.c4 FROM rt0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((t1.c0)<(t1.c0)) COLLATE RTRIM) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((t1.c0)<(t1.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((t1.c0)<(t1.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t1.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0, t1 GROUP BY t1.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4;
SELECT ALL t1.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0, t1 WHERE (((rt0.c4 IN (rt0.c4)) IN (((rt0.c2) BETWEEN (0.3810368938606177) AND (NULL)), rt0.c1 COLLATE BINARY))) GROUP BY t1.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4 UNION SELECT ALL t1.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0, t1 WHERE ((NOT (((rt0.c4 IN (rt0.c4)) IN (((rt0.c2) BETWEEN (0.3810368938606177) AND (NULL)), rt0.c1 COLLATE BINARY))))) GROUP BY t1.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4 UNION SELECT t1.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0, t1 WHERE (((((rt0.c4 IN (rt0.c4)) IN (((rt0.c2) BETWEEN (0.3810368938606177) AND (NULL)), rt0.c1 COLLATE BINARY))) ISNULL)) GROUP BY t1.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4;
SELECT t1.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0, t1 GROUP BY t1.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING CASE WHEN COUNT(*) THEN MIN(t1.c0) WHEN GROUP_CONCAT(COUNT(*)) THEN SUM(AVG(t1.c0)) WHEN MAX(COUNT(*)) THEN TOTAL(COUNT(TOTAL(MIN(MIN(MAX(COUNT(TOTAL(COUNT(*))))))))) END UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (CASE WHEN COUNT(*) THEN MIN(t1.c0) WHEN GROUP_CONCAT(COUNT(*)) THEN SUM(AVG(t1.c0)) WHEN MAX(COUNT(*)) THEN TOTAL(COUNT(TOTAL(MIN(MIN(MAX(COUNT(TOTAL(COUNT(*))))))))) END)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((CASE WHEN COUNT(*) THEN MIN(t1.c0) WHEN GROUP_CONCAT(COUNT(*)) THEN SUM(AVG(t1.c0)) WHEN MAX(COUNT(*)) THEN TOTAL(COUNT(TOTAL(MIN(MIN(MAX(COUNT(TOTAL(COUNT(*))))))))) END) ISNULL);
SELECT ALL rt0.c1, t1.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0, t1;
SELECT ALL rt0.c1, t1.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0, t1 WHERE ((((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1)))) NOT BETWEEN ((((rt0.c4, rt0.c1, rt0.c2))>((rt0.c4, rt0.c4, rt0.c0)))) AND ((+ (t1.c0))))) UNION ALL SELECT ALL rt0.c1, t1.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0, t1 WHERE ((NOT ((((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1)))) NOT BETWEEN ((((rt0.c4, rt0.c1, rt0.c2))>((rt0.c4, rt0.c4, rt0.c0)))) AND ((+ (t1.c0))))))) UNION ALL SELECT ALL rt0.c1, t1.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0, t1 WHERE ((((((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1)))) NOT BETWEEN ((((rt0.c4, rt0.c1, rt0.c2))>((rt0.c4, rt0.c4, rt0.c0)))) AND ((+ (t1.c0))))) ISNULL));
SELECT ALL rt0.c1, t1.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0, t1;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN t1 ON ((t1.c0)%(t1.c0 COLLATE NOCASE));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN t1 ON ((t1.c0)%(t1.c0 COLLATE NOCASE)) WHERE ((((t1.c0)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((CASE rt0.c3  WHEN 0.25871235079609634 THEN rt0.c4 ELSE '1717766683' END)))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN t1 ON ((t1.c0)%(t1.c0 COLLATE NOCASE)) WHERE ((NOT ((((t1.c0)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((CASE rt0.c3  WHEN 0.25871235079609634 THEN rt0.c4 ELSE '1717766683' END)))))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN t1 ON ((t1.c0)%(t1.c0 COLLATE NOCASE)) WHERE ((((((t1.c0)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((CASE rt0.c3  WHEN 0.25871235079609634 THEN rt0.c4 ELSE '1717766683' END)))) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN t1 ON ((t1.c0)%(t1.c0 COLLATE NOCASE));
SELECT rt0.c1, t1.c0, rt0.c2, rt0.c4 FROM rt0, t1 GROUP BY rt0.c1, t1.c0, rt0.c2, rt0.c4;
SELECT ALL rt0.c1, t1.c0, rt0.c2, rt0.c4 FROM rt0, t1 WHERE ((NOT (x''))) GROUP BY rt0.c1, t1.c0, rt0.c2, rt0.c4 UNION SELECT rt0.c1, t1.c0, rt0.c2, rt0.c4 FROM rt0, t1 WHERE ((NOT ((NOT (x''))))) GROUP BY rt0.c1, t1.c0, rt0.c2, rt0.c4 UNION SELECT ALL rt0.c1, t1.c0, rt0.c2, rt0.c4 FROM rt0, t1 WHERE ((((NOT (x''))) ISNULL)) GROUP BY rt0.c1, t1.c0, rt0.c2, rt0.c4;
SELECT rt0.c1, t1.c0, rt0.c2, rt0.c4 FROM rt0, t1 GROUP BY rt0.c1, t1.c0, rt0.c2, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, t1.c0, rt0.c3 FROM rt0, t1 GROUP BY rt0.c1, rt0.c2, t1.c0, rt0.c3;
SELECT rt0.c1, rt0.c2, t1.c0, rt0.c3 FROM rt0, t1 GROUP BY rt0.c1, rt0.c2, t1.c0, rt0.c3 HAVING (MAX(rt0.c2) IN ()) UNION ALL SELECT ALL rt0.c1, rt0.c2, t1.c0, rt0.c3 FROM rt0, t1 GROUP BY rt0.c1, rt0.c2, t1.c0, rt0.c3 HAVING (NOT ((MAX(rt0.c2) IN ()))) UNION ALL SELECT ALL rt0.c1, rt0.c2, t1.c0, rt0.c3 FROM rt0, t1 GROUP BY rt0.c1, rt0.c2, t1.c0, rt0.c3 HAVING (((MAX(rt0.c2) IN ())) ISNULL);
SELECT ALL rt0.c1, rt0.c2, t1.c0, rt0.c3 FROM rt0, t1 GROUP BY rt0.c1, rt0.c2, t1.c0, rt0.c3;
SELECT rt0.c1, rt0.c2, t1.c0, rt0.c3 FROM rt0, t1 GROUP BY rt0.c1, rt0.c2, t1.c0, rt0.c3 HAVING (MAX(rt0.c2) IN ()) UNION ALL SELECT ALL rt0.c1, rt0.c2, t1.c0, rt0.c3 FROM rt0, t1 GROUP BY rt0.c1, rt0.c2, t1.c0, rt0.c3 HAVING (NOT ((MAX(rt0.c2) IN ()))) UNION ALL SELECT ALL rt0.c1, rt0.c2, t1.c0, rt0.c3 FROM rt0, t1 GROUP BY rt0.c1, rt0.c2, t1.c0, rt0.c3 HAVING (((MAX(rt0.c2) IN ())) ISNULL);
SELECT ALL rt0.c1, rt0.c2, t1.c0, rt0.c3 FROM rt0, t1 GROUP BY rt0.c1, rt0.c2, t1.c0, rt0.c3;
SELECT ALL * FROM t1;
SELECT * FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)/(((t1.c0)<(t1.c0))))) UNION ALL SELECT * FROM t1 WHERE ((NOT (((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)/(((t1.c0)<(t1.c0))))))) UNION ALL SELECT * FROM t1 WHERE (((((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)/(((t1.c0)<(t1.c0))))) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT * FROM rt0, t1;
SELECT DISTINCT * FROM rt0, t1 WHERE (((x'') NOT BETWEEN ((((rt0.c0, t1.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, t1.c0, rt0.c0)) AND ((rt0.c3, rt0.c3, rt0.c2)))) AND ((rt0.c2 IN ())))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((NOT (((x'') NOT BETWEEN ((((rt0.c0, t1.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, t1.c0, rt0.c0)) AND ((rt0.c3, rt0.c3, rt0.c2)))) AND ((rt0.c2 IN ())))))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE (((((x'') NOT BETWEEN ((((rt0.c0, t1.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, t1.c0, rt0.c0)) AND ((rt0.c3, rt0.c3, rt0.c2)))) AND ((rt0.c2 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0, t1;
SELECT rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c3;
SELECT rt0.c4, rt0.c3 FROM rt0 WHERE ((- (((((rt0.c0)OR(x'')))AND(NULL))))) GROUP BY rt0.c4, rt0.c3 UNION SELECT rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT ((- (((((rt0.c0)OR(x'')))AND(NULL))))))) GROUP BY rt0.c4, rt0.c3 UNION SELECT rt0.c4, rt0.c3 FROM rt0 WHERE ((((- (((((rt0.c0)OR(x'')))AND(NULL))))) ISNULL)) GROUP BY rt0.c4, rt0.c3;
SELECT rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c3;
SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2, t1.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2, t1.c0;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2, t1.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2, t1.c0 HAVING (((COUNT(GROUP_CONCAT(SUM(rt0.c3))) IN ())) NOT BETWEEN (CASE WHEN MAX(GROUP_CONCAT(TOTAL(rt0.c3))) THEN 6.66940426E8 END) AND (((t1.c0)!=(rt0.c2)))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2, t1.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2, t1.c0 HAVING (NOT ((((COUNT(GROUP_CONCAT(SUM(rt0.c3))) IN ())) NOT BETWEEN (CASE WHEN MAX(GROUP_CONCAT(TOTAL(rt0.c3))) THEN 6.66940426E8 END) AND (((t1.c0)<>(rt0.c2)))))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2, t1.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2, t1.c0 HAVING (((((COUNT(GROUP_CONCAT(SUM(rt0.c3))) IN ())) NOT BETWEEN (CASE WHEN MAX(GROUP_CONCAT(TOTAL(rt0.c3))) THEN 6.66940426E8 END) AND (((t1.c0)!=(rt0.c2))))) ISNULL);
SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c4)-(rt0.c0)))>=(rt0.c4 COLLATE BINARY))) ORDER BY (((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))OR(CAST(rt0.c3 AS BLOB))))OR(((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c2)))OR(-1058833031)))AND(rt0.c4))));
SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c4)-(rt0.c0)))>=(rt0.c4 COLLATE BINARY))))) ORDER BY (((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))OR(CAST(rt0.c3 AS BLOB))))OR(((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c2)))OR(-1058833031)))AND(rt0.c4))));
SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c4)-(rt0.c0)))>=(rt0.c4 COLLATE BINARY))) ISNULL)) ORDER BY (((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))OR(CAST(rt0.c3 AS BLOB))))OR(((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c2)))OR(-1058833031)))AND(rt0.c4))));
SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c2) BETWEEN ((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND (rt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2) BETWEEN ((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND (rt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c2) BETWEEN ((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND (rt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, t1.c0, rt0.c1 FROM t1, rt0 GROUP BY rt0.c2, t1.c0, rt0.c1;
SELECT rt0.c2, t1.c0, rt0.c1 FROM t1, rt0 WHERE (((CAST('1834526888' AS TEXT)) IS FALSE)) GROUP BY rt0.c2, t1.c0, rt0.c1 UNION SELECT ALL rt0.c2, t1.c0, rt0.c1 FROM t1, rt0 WHERE ((NOT (((CAST('1834526888' AS TEXT)) IS FALSE)))) GROUP BY rt0.c2, t1.c0, rt0.c1 UNION SELECT ALL rt0.c2, t1.c0, rt0.c1 FROM t1, rt0 WHERE (((((CAST('1834526888' AS TEXT)) IS FALSE)) ISNULL)) GROUP BY rt0.c2, t1.c0, rt0.c1;
SELECT ALL rt0.c2, t1.c0, rt0.c1 FROM t1, rt0 GROUP BY rt0.c2, t1.c0, rt0.c1;
SELECT ALL t1.c0 FROM rt0 INNER JOIN t1 ON (((((rt0.c2, rt0.c1, rt0.c4))>=((t1.c0, rt0.c4, rt0.c3))))!=((+ (NULL)))) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM rt0 INNER JOIN t1 ON (((((rt0.c2, rt0.c1, rt0.c4))>=((t1.c0, rt0.c4, rt0.c3))))!=((+ (NULL)))) GROUP BY t1.c0 HAVING SUM(CAST(rt0.c1 AS BLOB)) UNION ALL SELECT ALL t1.c0 FROM rt0 INNER JOIN t1 ON (((((rt0.c2, rt0.c1, rt0.c4))>=((t1.c0, rt0.c4, rt0.c3))))!=((+ (NULL)))) GROUP BY t1.c0 HAVING (NOT (SUM(CAST(rt0.c1 AS BLOB)))) UNION ALL SELECT ALL t1.c0 FROM rt0 INNER JOIN t1 ON (((((rt0.c2, rt0.c1, rt0.c4))>=((t1.c0, rt0.c4, rt0.c3))))<>((+ (NULL)))) GROUP BY t1.c0 HAVING ((SUM(CAST(rt0.c1 AS BLOB))) ISNULL);
SELECT ALL t1.c0 FROM rt0 INNER JOIN t1 ON (((((rt0.c2, rt0.c1, rt0.c4))>=((t1.c0, rt0.c4, rt0.c3))))!=((+ (NULL)))) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM rt0 INNER JOIN t1 ON (((((rt0.c2, rt0.c1, rt0.c4))>=((t1.c0, rt0.c4, rt0.c3))))!=((+ (NULL)))) GROUP BY t1.c0 HAVING SUM(CAST(rt0.c1 AS BLOB)) UNION ALL SELECT ALL t1.c0 FROM rt0 INNER JOIN t1 ON (((((rt0.c2, rt0.c1, rt0.c4))>=((t1.c0, rt0.c4, rt0.c3))))!=((+ (NULL)))) GROUP BY t1.c0 HAVING (NOT (SUM(CAST(rt0.c1 AS BLOB)))) UNION ALL SELECT ALL t1.c0 FROM rt0 INNER JOIN t1 ON (((((rt0.c2, rt0.c1, rt0.c4))>=((t1.c0, rt0.c4, rt0.c3))))<>((+ (NULL)))) GROUP BY t1.c0 HAVING ((SUM(CAST(rt0.c1 AS BLOB))) ISNULL);
SELECT ALL t1.c0 FROM rt0 INNER JOIN t1 ON (((((rt0.c2, rt0.c1, rt0.c4))>=((t1.c0, rt0.c4, rt0.c3))))!=((+ (NULL)))) GROUP BY t1.c0;
SELECT * FROM rt0 NATURAL JOIN t1;
SELECT ALL * FROM rt0 NATURAL JOIN t1 WHERE ((+ ((NOT (rt0.c3))))) UNION ALL SELECT * FROM rt0 NATURAL JOIN t1 WHERE ((NOT ((+ ((NOT (rt0.c3))))))) UNION ALL SELECT ALL * FROM rt0 NATURAL JOIN t1 WHERE ((((+ ((NOT (rt0.c3))))) ISNULL));
SELECT * FROM rt0 NATURAL JOIN t1;
SELECT DISTINCT * FROM rt0 INNER JOIN t1 ON ((CAST(')1S' AS TEXT))*(((rt0.c0) IS TRUE)));
SELECT DISTINCT * FROM rt0 NOT INDEXED INNER JOIN t1 ON ((CAST(')1S' AS TEXT))*(((rt0.c0) IS TRUE))) WHERE (((((NULL)>>(rt0.c4)))&(LOWER(rt0.c3)))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN t1 ON ((CAST(')1S' AS TEXT))*(((rt0.c0) IS TRUE))) WHERE ((NOT (((((NULL)>>(rt0.c4)))&(LOWER(rt0.c3)))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN t1 ON ((CAST(')1S' AS TEXT))*(((rt0.c0) IS TRUE))) WHERE (((((((NULL)>>(rt0.c4)))&(LOWER(rt0.c3)))) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN t1 ON ((CAST(')1S' AS TEXT))*(((rt0.c0) IS TRUE)));
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ((~ (t1.c0)) COLLATE BINARY) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((~ (t1.c0)) COLLATE BINARY))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((((~ (t1.c0)) COLLATE BINARY) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT rt0.c0 FROM t1, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM t1, rt0 GROUP BY rt0.c0 HAVING AVG(COUNT(GROUP_CONCAT(MAX(TOTAL(MAX(COUNT(*))))))) UNION ALL SELECT rt0.c0 FROM t1, rt0 GROUP BY rt0.c0 HAVING (NOT (AVG(COUNT(GROUP_CONCAT(MAX(TOTAL(MAX(COUNT(*))))))))) UNION ALL SELECT ALL rt0.c0 FROM t1, rt0 GROUP BY rt0.c0 HAVING ((AVG(COUNT(GROUP_CONCAT(MAX(TOTAL(MAX(COUNT(*)))))))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE (x'') UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (x''))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE (((x'') ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, rt0.c1, t1.c0 FROM t1, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, rt0.c1, t1.c0 FROM t1, rt0 WHERE (COALESCE(((rt0.c1) NOT BETWEEN (rt0.c4) AND (NULL)), ((rt0.c0)AND(rt0.c0)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, rt0.c1, t1.c0 FROM t1, rt0 WHERE ((NOT (COALESCE(((rt0.c1) NOT BETWEEN (rt0.c4) AND (NULL)), ((rt0.c0)AND(rt0.c0)))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, rt0.c1, t1.c0 FROM t1, rt0 WHERE (((COALESCE(((rt0.c1) NOT BETWEEN (rt0.c4) AND (NULL)), ((rt0.c0)AND(rt0.c0)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, rt0.c1, t1.c0 FROM t1, rt0;
SELECT rt0.c0, rt0.c4, t1.c0 FROM rt0, t1 GROUP BY rt0.c0, rt0.c4, t1.c0;
SELECT rt0.c0, rt0.c4, t1.c0 FROM rt0, t1 WHERE (((((rt0.c0)>=(rt0.c0)))AND((rt0.c0 IN ())))) GROUP BY rt0.c0, rt0.c4, t1.c0 UNION SELECT rt0.c0, rt0.c4, t1.c0 FROM rt0, t1 WHERE ((NOT (((((rt0.c0)>=(rt0.c0)))AND((rt0.c0 IN ())))))) GROUP BY rt0.c0, rt0.c4, t1.c0 UNION SELECT ALL rt0.c0, rt0.c4, t1.c0 FROM rt0, t1 WHERE (((((((rt0.c0)>=(rt0.c0)))AND((rt0.c0 IN ())))) ISNULL)) GROUP BY rt0.c0, rt0.c4, t1.c0;
SELECT rt0.c0, rt0.c4, t1.c0 FROM rt0, t1 GROUP BY rt0.c0, rt0.c4, t1.c0;
SELECT ALL rt0.c0 FROM rt0, t1 INDEXED BY i93 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, t1 INDEXED BY i93 GROUP BY rt0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(AVG(COUNT(t1.c0)))) UNION ALL SELECT ALL rt0.c0 FROM rt0, t1 INDEXED BY i93 GROUP BY rt0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(AVG(COUNT(t1.c0)))))) UNION ALL SELECT rt0.c0 FROM rt0, t1 INDEXED BY i93 GROUP BY rt0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(AVG(COUNT(t1.c0))))) ISNULL);
SELECT rt0.c3, t1.c0 FROM rt0 NATURAL JOIN t1;
SELECT rt0.c3, t1.c0 FROM rt0 NATURAL JOIN t1 WHERE (((t1.c0) BETWEEN (rt0.c3) AND (rt0.c4)) COLLATE NOCASE) UNION ALL SELECT rt0.c3, t1.c0 FROM rt0 NATURAL JOIN t1 WHERE ((NOT (((t1.c0) BETWEEN (rt0.c3) AND (rt0.c4)) COLLATE NOCASE))) UNION ALL SELECT rt0.c3, t1.c0 FROM rt0 NATURAL JOIN t1 WHERE (((((t1.c0) BETWEEN (rt0.c3) AND (rt0.c4)) COLLATE NOCASE) ISNULL));
SELECT rt0.c3, t1.c0 FROM rt0 NATURAL JOIN t1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((+ ('慂\\C|m?b3'))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((+ ('慂\\C|m?b3'))))) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE ((((+ ('慂\\C|m?b3'))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3;
SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE ((~ (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1))))) GROUP BY rt0.c0, rt0.c4, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT ((~ (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1))))))) GROUP BY rt0.c0, rt0.c4, rt0.c3 UNION SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE ((((~ (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c3;
SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3;
SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, t1.c0 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, t1.c0;
SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, t1.c0 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, t1.c0 HAVING CAST(COUNT(rt0.c0) AS REAL) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, t1.c0 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, t1.c0 HAVING (NOT (CAST(COUNT(rt0.c0) AS REAL))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, t1.c0 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, t1.c0 HAVING ((CAST(COUNT(rt0.c0) AS REAL)) ISNULL);
SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, t1.c0 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, t1.c0;
SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, t1.c0 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, t1.c0 HAVING CAST(COUNT(rt0.c0) AS REAL) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, t1.c0 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, t1.c0 HAVING (NOT (CAST(COUNT(rt0.c0) AS REAL))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, t1.c0 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, t1.c0 HAVING ((CAST(COUNT(rt0.c0) AS REAL)) ISNULL);
SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, t1.c0 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, t1.c0;
SELECT ALL rt0.c2, t1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t1;
SELECT ALL rt0.c2, t1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t1 WHERE ((- (rt0.c1)) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c2, t1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t1 WHERE ((NOT ((- (rt0.c1)) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c2, t1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t1 WHERE ((((- (rt0.c1)) COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c2, t1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t1;
SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0 WHERE (CAST((((rt0.c4)) NOT BETWEEN ((NULL)) AND ((x'3cb9'))) AS REAL)) UNION SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (CAST((((rt0.c4)) NOT BETWEEN ((NULL)) AND ((x'3cb9'))) AS REAL)))) UNION SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0 WHERE (((CAST((((rt0.c4)) NOT BETWEEN ((NULL)) AND ((x'3cb9'))) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM t1, rt0 WHERE (QUOTE((((rt0.c1))>((rt0.c0))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM t1, rt0 WHERE ((NOT (QUOTE((((rt0.c1))>((rt0.c0))))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM t1, rt0 WHERE (((QUOTE((((rt0.c1))>((rt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c3, t1.c0, rt0.c0, rt0.c1, rt0.c4 FROM t1 INNER JOIN rt0 ON (((rt0.c1, rt0.c3, rt0.c3)) BETWEEN ((((t1.c0) IS FALSE), ((rt0.c2) IS FALSE), CAST(rt0.c3 AS NUMERIC))) AND (((~ (rt0.c4)), ((rt0.c1)<(rt0.c1)), rt0.c1))) GROUP BY rt0.c3, t1.c0, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, t1.c0, rt0.c0, rt0.c1, rt0.c4 FROM t1 INNER JOIN rt0 ON (((rt0.c1, rt0.c3, rt0.c3)) BETWEEN ((((t1.c0) IS FALSE), ((rt0.c2) IS FALSE), CAST(rt0.c3 AS NUMERIC))) AND (((~ (rt0.c4)), ((rt0.c1)<(rt0.c1)), rt0.c1))) GROUP BY rt0.c3, t1.c0, rt0.c0, rt0.c1, rt0.c4 HAVING ((COUNT(*))IS NOT((TOTAL(rt0.c0) IN ()))) UNION ALL SELECT rt0.c3, t1.c0, rt0.c0, rt0.c1, rt0.c4 FROM t1 INNER JOIN rt0 ON (((rt0.c1, rt0.c3, rt0.c3)) BETWEEN ((((t1.c0) IS FALSE), ((rt0.c2) IS FALSE), CAST(rt0.c3 AS NUMERIC))) AND (((~ (rt0.c4)), ((rt0.c1)<(rt0.c1)), rt0.c1))) GROUP BY rt0.c3, t1.c0, rt0.c0, rt0.c1, rt0.c4 HAVING (NOT (((COUNT(*))IS NOT((TOTAL(rt0.c0) IN ()))))) UNION ALL SELECT ALL rt0.c3, t1.c0, rt0.c0, rt0.c1, rt0.c4 FROM t1 INNER JOIN rt0 ON (((rt0.c1, rt0.c3, rt0.c3)) BETWEEN ((((t1.c0) IS FALSE), ((rt0.c2) IS FALSE), CAST(rt0.c3 AS NUMERIC))) AND (((~ (rt0.c4)), ((rt0.c1)<(rt0.c1)), rt0.c1))) GROUP BY rt0.c3, t1.c0, rt0.c0, rt0.c1, rt0.c4 HAVING ((((COUNT(*))IS NOT((TOTAL(rt0.c0) IN ())))) ISNULL);
SELECT rt0.c3, t1.c0, rt0.c0, rt0.c1, rt0.c4 FROM t1 INNER JOIN rt0 ON (((rt0.c1, rt0.c3, rt0.c3)) BETWEEN ((((t1.c0) IS FALSE), ((rt0.c2) IS FALSE), CAST(rt0.c3 AS NUMERIC))) AND (((~ (rt0.c4)), ((rt0.c1)<(rt0.c1)), rt0.c1))) GROUP BY rt0.c3, t1.c0, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, t1.c0, rt0.c0, rt0.c1, rt0.c4 FROM t1 INNER JOIN rt0 ON (((rt0.c1, rt0.c3, rt0.c3)) BETWEEN ((((t1.c0) IS FALSE), ((rt0.c2) IS FALSE), CAST(rt0.c3 AS NUMERIC))) AND (((~ (rt0.c4)), ((rt0.c1)<(rt0.c1)), rt0.c1))) GROUP BY rt0.c3, t1.c0, rt0.c0, rt0.c1, rt0.c4 HAVING ((COUNT(*))IS NOT((TOTAL(rt0.c0) IN ()))) UNION ALL SELECT rt0.c3, t1.c0, rt0.c0, rt0.c1, rt0.c4 FROM t1 INNER JOIN rt0 ON (((rt0.c1, rt0.c3, rt0.c3)) BETWEEN ((((t1.c0) IS FALSE), ((rt0.c2) IS FALSE), CAST(rt0.c3 AS NUMERIC))) AND (((~ (rt0.c4)), ((rt0.c1)<(rt0.c1)), rt0.c1))) GROUP BY rt0.c3, t1.c0, rt0.c0, rt0.c1, rt0.c4 HAVING (NOT (((COUNT(*))IS NOT((TOTAL(rt0.c0) IN ()))))) UNION ALL SELECT ALL rt0.c3, t1.c0, rt0.c0, rt0.c1, rt0.c4 FROM t1 INNER JOIN rt0 ON (((rt0.c1, rt0.c3, rt0.c3)) BETWEEN ((((t1.c0) IS FALSE), ((rt0.c2) IS FALSE), CAST(rt0.c3 AS NUMERIC))) AND (((~ (rt0.c4)), ((rt0.c1)<(rt0.c1)), rt0.c1))) GROUP BY rt0.c3, t1.c0, rt0.c0, rt0.c1, rt0.c4 HAVING ((((COUNT(*))IS NOT((TOTAL(rt0.c0) IN ())))) ISNULL);
SELECT rt0.c3, t1.c0, rt0.c0, rt0.c1, rt0.c4 FROM t1 INNER JOIN rt0 ON (((rt0.c1, rt0.c3, rt0.c3)) BETWEEN ((((t1.c0) IS FALSE), ((rt0.c2) IS FALSE), CAST(rt0.c3 AS NUMERIC))) AND (((~ (rt0.c4)), ((rt0.c1)<(rt0.c1)), rt0.c1))) GROUP BY rt0.c3, t1.c0, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (((((((t1.c0)OR(t1.c0)))OR(t1.c0))) NOT BETWEEN (((t1.c0)==(t1.c0))) AND (((((t1.c0)OR(t1.c0)))AND(t1.c0))))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((((((t1.c0)OR(t1.c0)))OR(t1.c0))) NOT BETWEEN (((t1.c0)=(t1.c0))) AND (((((t1.c0)OR(t1.c0)))AND(t1.c0))))))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE (((((((((t1.c0)OR(t1.c0)))OR(t1.c0))) NOT BETWEEN (((t1.c0)==(t1.c0))) AND (((((t1.c0)OR(t1.c0)))AND(t1.c0))))) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (t1.c0) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (0.08439776632669438) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (0.08439776632669438))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((0.08439776632669438) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0, rt0.c3, rt0.c4, rt0.c1 FROM t1, rt0 GROUP BY t1.c0, rt0.c3, rt0.c4, rt0.c1;
SELECT ALL t1.c0, rt0.c3, rt0.c4, rt0.c1 FROM t1, rt0 GROUP BY t1.c0, rt0.c3, rt0.c4, rt0.c1 HAVING CASE MIN(t1.c0)  WHEN GROUP_CONCAT(rt0.c0) THEN SUM(rt0.c2) COLLATE RTRIM ELSE (((rt0.c0, GROUP_CONCAT(rt0.c0), rt0.c4)) BETWEEN ((rt0.c3, rt0.c4, MAX(SUM(rt0.c1)))) AND ((AVG(COUNT(*)), TOTAL(rt0.c1), GROUP_CONCAT(AVG(SUM(MIN(GROUP_CONCAT(MAX(GROUP_CONCAT(TOTAL(rt0.c1))))))))))) END UNION ALL SELECT t1.c0, rt0.c3, rt0.c4, rt0.c1 FROM t1, rt0 GROUP BY t1.c0, rt0.c3, rt0.c4, rt0.c1 HAVING (NOT (CASE MIN(t1.c0)  WHEN GROUP_CONCAT(rt0.c0) THEN SUM(rt0.c2) COLLATE RTRIM ELSE (((rt0.c0, GROUP_CONCAT(rt0.c0), rt0.c4)) BETWEEN ((rt0.c3, rt0.c4, MAX(SUM(rt0.c1)))) AND ((AVG(COUNT(*)), TOTAL(rt0.c1), GROUP_CONCAT(AVG(SUM(MIN(GROUP_CONCAT(MAX(GROUP_CONCAT(TOTAL(rt0.c1))))))))))) END)) UNION ALL SELECT t1.c0, rt0.c3, rt0.c4, rt0.c1 FROM t1, rt0 GROUP BY t1.c0, rt0.c3, rt0.c4, rt0.c1 HAVING ((CASE MIN(t1.c0)  WHEN GROUP_CONCAT(rt0.c0) THEN SUM(rt0.c2) COLLATE RTRIM ELSE (((rt0.c0, GROUP_CONCAT(rt0.c0), rt0.c4)) BETWEEN ((rt0.c3, rt0.c4, MAX(SUM(rt0.c1)))) AND ((AVG(COUNT(*)), TOTAL(rt0.c1), GROUP_CONCAT(AVG(SUM(MIN(GROUP_CONCAT(MAX(GROUP_CONCAT(TOTAL(rt0.c1))))))))))) END) ISNULL);
SELECT TOTAL(CAST((((rt0.c0))<=((t1.c0))) AS TEXT)) FROM t1, rt0;
SELECT t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE (CAST(CAST(t1.c0 AS REAL) AS REAL)) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT (CAST(CAST(t1.c0 AS REAL) AS REAL)))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE (((CAST(CAST(t1.c0 AS REAL) AS REAL)) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT rt0.c2, t1.c0, rt0.c3, rt0.c1 FROM rt0, t1;
SELECT DISTINCT rt0.c2, t1.c0, rt0.c3, rt0.c1 FROM rt0, t1 WHERE (TIME((rt0.c3 IN ()), rt0.c2, t1.c0)) UNION SELECT DISTINCT rt0.c2, t1.c0, rt0.c3, rt0.c1 FROM rt0, t1 WHERE ((NOT (TIME((rt0.c3 IN ()), rt0.c2, t1.c0)))) UNION SELECT DISTINCT rt0.c2, t1.c0, rt0.c3, rt0.c1 FROM rt0, t1 WHERE (((TIME((rt0.c3 IN ()), rt0.c2, t1.c0)) ISNULL));
SELECT DISTINCT rt0.c2, t1.c0, rt0.c3, rt0.c1 FROM rt0, t1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)) THEN rt0.c3 COLLATE NOCASE WHEN rt0.c4 COLLATE BINARY THEN rt0.c1 WHEN LTRIM(rt0.c2) THEN rt0.c1 END) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)) THEN rt0.c3 COLLATE NOCASE WHEN rt0.c4 COLLATE BINARY THEN rt0.c1 WHEN LTRIM(rt0.c2) THEN rt0.c1 END))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)) THEN rt0.c3 COLLATE NOCASE WHEN rt0.c4 COLLATE BINARY THEN rt0.c1 WHEN LTRIM(rt0.c2) THEN rt0.c1 END) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING -1382778247 UNION ALL SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (NOT (-1382778247)) UNION ALL SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING ((-1382778247) ISNULL);
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING -1382778247 UNION ALL SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (NOT (-1382778247)) UNION ALL SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING ((-1382778247) ISNULL);
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT ALL SUM(((((NULL) NOT NULL)) BETWEEN (((NULL)<(rt0.c2))) AND ((((rt0.c0, rt0.c4, rt0.c2)) BETWEEN ((rt0.c0, rt0.c4, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1)))))) FROM rt0 ORDER BY (+ (CAST(rt0.c3 AS TEXT))) DESC  NULLS FIRST, (((rt0.c1)-(rt0.c1)) IN ()), (((((NULL IN ()))AND((((rt0.c3))!=((rt0.c4))))))OR(rt0.c3 COLLATE NOCASE))  NULLS LAST;
SELECT * FROM t1, rt0;
SELECT ALL * FROM t1, rt0 WHERE (json_quote(((t1.c0) NOTNULL))) UNION ALL SELECT ALL * FROM t1, rt0 WHERE ((NOT (json_quote(((t1.c0) NOTNULL))))) UNION ALL SELECT * FROM t1, rt0 WHERE (((json_quote(((t1.c0) NOTNULL))) ISNULL));
SELECT * FROM t1, rt0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((((((((t1.c0)OR((t1.c0 IN ()))))AND(((t1.c0) ISNULL))))OR((((t1.c0))>((t1.c0))))))AND(((0.7272079974079976)>=(t1.c0))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((((((((t1.c0)OR((t1.c0 IN ()))))AND(((t1.c0) ISNULL))))OR((((t1.c0))>((t1.c0))))))AND(((0.7272079974079976)>=(t1.c0))))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((((((((t1.c0)OR((t1.c0 IN ()))))AND(((t1.c0) ISNULL))))OR((((t1.c0))>((t1.c0))))))AND(((0.7272079974079976)>=(t1.c0))))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL rt0.c0, t1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 FROM rt0 INNER JOIN t1 ON (((0.13056542911599311 IN ())) IS FALSE) GROUP BY rt0.c0, t1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c0, t1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 FROM rt0 INNER JOIN t1 ON (((0.13056542911599311 IN ())) IS FALSE) WHERE (LIKELY((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))) GROUP BY rt0.c0, t1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, t1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 FROM rt0 INNER JOIN t1 ON (((0.13056542911599311 IN ())) IS FALSE) WHERE ((NOT (LIKELY((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))))) GROUP BY rt0.c0, t1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, t1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 FROM rt0 INNER JOIN t1 ON (((0.13056542911599311 IN ())) IS FALSE) WHERE (((LIKELY((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))) ISNULL)) GROUP BY rt0.c0, t1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, t1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 FROM rt0 INNER JOIN t1 ON (((0.13056542911599311 IN ())) IS FALSE) GROUP BY rt0.c0, t1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c0, t1.c0, rt0.c4 FROM t1, rt0 GROUP BY rt0.c2, rt0.c0, t1.c0, rt0.c4;
SELECT rt0.c2, rt0.c0, t1.c0, rt0.c4 FROM t1, rt0 GROUP BY rt0.c2, rt0.c0, t1.c0, rt0.c4 HAVING SUM(AVG(rt0.c0)) UNION ALL SELECT ALL rt0.c2, rt0.c0, t1.c0, rt0.c4 FROM t1, rt0 GROUP BY rt0.c2, rt0.c0, t1.c0, rt0.c4 HAVING (NOT (SUM(AVG(rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c0, t1.c0, rt0.c4 FROM t1, rt0 GROUP BY rt0.c2, rt0.c0, t1.c0, rt0.c4 HAVING ((SUM(AVG(rt0.c0))) ISNULL);
SELECT MAX(SQLITE_COMPILEOPTION_GET((rt0.c4 IN ()))) FROM rt0 ORDER BY (((rt0.c3) NOT BETWEEN (rt0.c1) AND ('-1877065145')) IN ()) DESC  NULLS LAST, (((((rt0.c2)<<(rt0.c2))))<=((((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c0))))) DESC  NULLS LAST;
SELECT * FROM rt0, t1;
SELECT ALL * FROM rt0, t1 WHERE (((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))AND(t1.c0)))OR((- (t1.c0)))))AND(''))) UNION ALL SELECT * FROM rt0, t1 WHERE ((NOT (((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))AND(t1.c0)))OR((- (t1.c0)))))AND(''))))) UNION ALL SELECT * FROM rt0, t1 WHERE (((((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))AND(t1.c0)))OR((- (t1.c0)))))AND(''))) ISNULL));
SELECT * FROM rt0, t1;
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0, rt0.c1 FROM rt0, t1;
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0, rt0.c1 FROM rt0, t1 WHERE ((((rt0.c1)) BETWEEN ((1.679364479E9)) AND ((rt0.c2))) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0, rt0.c1 FROM rt0, t1 NOT INDEXED WHERE ((NOT ((((rt0.c1)) BETWEEN ((1.679364479E9)) AND ((rt0.c2))) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0, rt0.c1 FROM rt0, t1 WHERE ((((((rt0.c1)) BETWEEN ((1.679364479E9)) AND ((rt0.c2))) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0, rt0.c1 FROM rt0, t1;
SELECT rt0.c4, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2;
SELECT ALL rt0.c4, rt0.c1, rt0.c2 FROM t1, rt0 WHERE ((((((rt0.c1))=((rt0.c2))))LIKE(((rt0.c4) NOT BETWEEN (-749194765) AND (rt0.c4))))) GROUP BY rt0.c4, rt0.c1, rt0.c2 UNION SELECT rt0.c4, rt0.c1, rt0.c2 FROM t1, rt0 WHERE ((NOT ((((((rt0.c1))=((rt0.c2))))LIKE(((rt0.c4) NOT BETWEEN (-749194765) AND (rt0.c4))))))) GROUP BY rt0.c4, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c1, rt0.c2 FROM t1, rt0 WHERE ((((((((rt0.c1))=((rt0.c2))))LIKE(((rt0.c4) NOT BETWEEN (-749194765) AND (rt0.c4))))) ISNULL)) GROUP BY rt0.c4, rt0.c1, rt0.c2;
SELECT rt0.c4, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING MAX(MAX(SUM(t1.c0))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (MAX(MAX(SUM(t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((MAX(MAX(SUM(t1.c0)))) ISNULL);
SELECT ALL * FROM rt0, t1;
SELECT ALL * FROM rt0, t1 WHERE (((((CASE rt0.c0  WHEN t1.c0 THEN rt0.c0 ELSE rt0.c0 END)AND(TYPEOF(rt0.c1))))OR((((x'b6c0', 0.6853835458626321, t1.c0)) BETWEEN ((NULL, rt0.c3, t1.c0)) AND ((rt0.c1, x'014e', t1.c0)))))) UNION ALL SELECT ALL * FROM rt0, t1 WHERE ((NOT (((((CASE rt0.c0  WHEN t1.c0 THEN rt0.c0 ELSE rt0.c0 END)AND(TYPEOF(rt0.c1))))OR((((x'b6c0', 0.6853835458626321, t1.c0)) BETWEEN ((NULL, rt0.c3, t1.c0)) AND ((rt0.c1, x'014e', t1.c0)))))))) UNION ALL SELECT ALL * FROM rt0, t1 WHERE (((((((CASE rt0.c0  WHEN t1.c0 THEN rt0.c0 ELSE rt0.c0 END)AND(TYPEOF(rt0.c1))))OR((((x'b6c0', 0.6853835458626321, t1.c0)) BETWEEN ((NULL, rt0.c3, t1.c0)) AND ((rt0.c1, x'014e', t1.c0)))))) ISNULL));
SELECT ALL * FROM rt0, t1;
SELECT DISTINCT rt0.c0, t1.c0, rt0.c2, rt0.c3, rt0.c4 FROM t1 CROSS JOIN rt0 ON ((((rt0.c4)OR(rt0.c2)))AND(rt0.c3)) COLLATE RTRIM;
SELECT DISTINCT rt0.c0, t1.c0, rt0.c2, rt0.c3, rt0.c4 FROM t1 CROSS JOIN rt0 ON ((((rt0.c4)OR(rt0.c2)))AND(rt0.c3)) COLLATE RTRIM WHERE (((rt0.c2)>(rt0.c3)) COLLATE BINARY) UNION SELECT DISTINCT rt0.c0, t1.c0, rt0.c2, rt0.c3, rt0.c4 FROM t1 CROSS JOIN rt0 ON ((((rt0.c4)OR(rt0.c2)))AND(rt0.c3)) COLLATE RTRIM WHERE ((NOT (((rt0.c2)>(rt0.c3)) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c0, t1.c0, rt0.c2, rt0.c3, rt0.c4 FROM t1 CROSS JOIN rt0 ON ((((rt0.c4)OR(rt0.c2)))AND(rt0.c3)) COLLATE RTRIM WHERE (((((rt0.c2)>(rt0.c3)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c0, t1.c0, rt0.c2, rt0.c3, rt0.c4 FROM t1 CROSS JOIN rt0 ON ((((rt0.c4)OR(rt0.c2)))AND(rt0.c3)) COLLATE RTRIM;
SELECT rt0.c0, t1.c0, rt0.c1, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, t1.c0, rt0.c1, rt0.c3;
SELECT rt0.c0, t1.c0, rt0.c1, rt0.c3 FROM rt0, t1 WHERE ((NOT (rt0.c4 COLLATE RTRIM))) GROUP BY rt0.c0, t1.c0, rt0.c1, rt0.c3 UNION SELECT rt0.c0, t1.c0, rt0.c1, rt0.c3 FROM rt0, t1 WHERE ((NOT ((NOT (rt0.c4 COLLATE RTRIM))))) GROUP BY rt0.c0, t1.c0, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c0, t1.c0, rt0.c1, rt0.c3 FROM rt0, t1 WHERE ((((NOT (rt0.c4 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c0, t1.c0, rt0.c1, rt0.c3;
SELECT rt0.c0, t1.c0, rt0.c1, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, t1.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c4, rt0.c1, rt0.c0, t1.c0, rt0.c2, rt0.c3 FROM t1, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0, t1.c0, rt0.c2, rt0.c3;
SELECT rt0.c4, rt0.c1, rt0.c0, t1.c0, rt0.c2, rt0.c3 FROM t1, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0, t1.c0, rt0.c2, rt0.c3 HAVING ((((COUNT(*))AND(COUNT(rt0.c0))))AND(CASE rt0.c4  WHEN rt0.c2 THEN AVG(t1.c0) WHEN TOTAL(rt0.c2) THEN rt0.c0 WHEN COUNT(COUNT(*)) THEN GROUP_CONCAT(rt0.c1) END)) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c0, t1.c0, rt0.c2, rt0.c3 FROM t1, rt0 NOT INDEXED GROUP BY rt0.c4, rt0.c1, rt0.c0, t1.c0, rt0.c2, rt0.c3 HAVING (NOT (((((COUNT(*))AND(COUNT(rt0.c0))))AND(CASE rt0.c4  WHEN rt0.c2 THEN AVG(t1.c0) WHEN TOTAL(rt0.c2) THEN rt0.c0 WHEN COUNT(COUNT(*)) THEN GROUP_CONCAT(rt0.c1) END)))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c0, t1.c0, rt0.c2, rt0.c3 FROM t1, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0, t1.c0, rt0.c2, rt0.c3 HAVING ((((((COUNT(*))AND(COUNT(rt0.c0))))AND(CASE rt0.c4  WHEN rt0.c2 THEN AVG(t1.c0) WHEN TOTAL(rt0.c2) THEN rt0.c0 WHEN COUNT(COUNT(*)) THEN GROUP_CONCAT(rt0.c1) END))) ISNULL);
SELECT t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE (((((t1.c0)<<(t1.c0))) IS FALSE)) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((((t1.c0)<<(t1.c0))) IS FALSE)))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE (((((((t1.c0)<<(t1.c0))) IS FALSE)) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT * FROM rt0, t1;
SELECT DISTINCT * FROM rt0, t1 WHERE ((((((((((((((rt0.c3 IN ()))OR((((('131766170')AND(rt0.c0)))OR(672127732)))))AND((+ (rt0.c2)))))OR(x'90b6')))AND((rt0.c0 IN ()))))AND(((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)))))AND((((rt0.c4))<((rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((NOT ((((((((((((((rt0.c3 IN ()))OR((((('131766170')AND(rt0.c0)))OR(672127732)))))AND((+ (rt0.c2)))))OR(x'90b6')))AND((rt0.c0 IN ()))))AND(((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)))))AND((((rt0.c4))<((rt0.c1)))))))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((((((((((((((((rt0.c3 IN ()))OR((((('131766170')AND(rt0.c0)))OR(672127732)))))AND((+ (rt0.c2)))))OR(x'90b6')))AND((rt0.c0 IN ()))))AND(((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)))))AND((((rt0.c4))<((rt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM rt0, t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (0.3000336217054448) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (0.3000336217054448))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((0.3000336217054448) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0, rt0.c4 FROM rt0 RIGHT OUTER JOIN t1 ON CAST(((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)) AS TEXT) GROUP BY t1.c0, rt0.c4;
SELECT ALL t1.c0, rt0.c4 FROM rt0 RIGHT OUTER JOIN t1 ON CAST(((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)) AS TEXT) GROUP BY t1.c0, rt0.c4 HAVING rt0.c1 UNION ALL SELECT ALL t1.c0, rt0.c4 FROM rt0 RIGHT OUTER JOIN t1 ON CAST(((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)) AS TEXT) GROUP BY t1.c0, rt0.c4 HAVING (NOT (rt0.c1)) UNION ALL SELECT t1.c0, rt0.c4 FROM rt0 RIGHT OUTER JOIN t1 ON CAST(((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)) AS TEXT) GROUP BY t1.c0, rt0.c4 HAVING ((rt0.c1) ISNULL);
SELECT ALL t1.c0, rt0.c4 FROM rt0 RIGHT OUTER JOIN t1 ON CAST(((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)) AS TEXT) GROUP BY t1.c0, rt0.c4;
SELECT ALL t1.c0, rt0.c4 FROM rt0 RIGHT OUTER JOIN t1 ON CAST(((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)) AS TEXT) GROUP BY t1.c0, rt0.c4 HAVING rt0.c1 UNION ALL SELECT ALL t1.c0, rt0.c4 FROM rt0 RIGHT OUTER JOIN t1 ON CAST(((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)) AS TEXT) GROUP BY t1.c0, rt0.c4 HAVING (NOT (rt0.c1)) UNION ALL SELECT t1.c0, rt0.c4 FROM rt0 RIGHT OUTER JOIN t1 ON CAST(((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)) AS TEXT) GROUP BY t1.c0, rt0.c4 HAVING ((rt0.c1) ISNULL);
SELECT ALL t1.c0, rt0.c4 FROM rt0 RIGHT OUTER JOIN t1 ON CAST(((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)) AS TEXT) GROUP BY t1.c0, rt0.c4;
SELECT ALL * FROM rt0, t1;
SELECT ALL * FROM rt0, t1 WHERE (rt0.c1) UNION ALL SELECT ALL * FROM rt0, t1 WHERE ((NOT (rt0.c1))) UNION ALL SELECT * FROM rt0, t1 WHERE (((rt0.c1) ISNULL));
SELECT ALL * FROM rt0, t1;
SELECT DISTINCT rt0.c3, t1.c0 FROM rt0 INNER JOIN t1 ON ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c4 COLLATE NOCASE));
SELECT DISTINCT rt0.c3, t1.c0 FROM rt0 INNER JOIN t1 ON ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c4 COLLATE NOCASE)) WHERE ('TRUE') UNION SELECT DISTINCT rt0.c3, t1.c0 FROM rt0 INNER JOIN t1 ON ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c4 COLLATE NOCASE)) WHERE ((NOT ('TRUE'))) UNION SELECT DISTINCT rt0.c3, t1.c0 FROM rt0 INNER JOIN t1 ON ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c4 COLLATE NOCASE)) WHERE ((('TRUE') ISNULL));
SELECT DISTINCT rt0.c3, t1.c0 FROM rt0 INNER JOIN t1 ON ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c4 COLLATE NOCASE));
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (0.74678895409186) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (0.74678895409186))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((0.74678895409186) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3 HAVING AVG(SUM(GROUP_CONCAT(MIN(SUM(SUM(TOTAL(rt0.c1))))))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3 HAVING (NOT (AVG(SUM(GROUP_CONCAT(MIN(SUM(SUM(TOTAL(rt0.c1))))))))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3 HAVING ((AVG(SUM(GROUP_CONCAT(MIN(SUM(SUM(TOTAL(rt0.c1)))))))) ISNULL);
SELECT * FROM rt0 NATURAL JOIN t1;
SELECT * FROM rt0 NATURAL JOIN t1 WHERE (((((rt0.c3)/('-1836951930')))<(((((((((((((rt0.c0)AND(NULL)))OR(rt0.c2)))AND(x'')))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c3))))) UNION ALL SELECT * FROM rt0 NATURAL JOIN t1 WHERE ((NOT (((((rt0.c3)/('-1836951930')))<(((((((((((((rt0.c0)AND(NULL)))OR(rt0.c2)))AND(x'')))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c3))))))) UNION ALL SELECT * FROM rt0 NATURAL JOIN t1 WHERE (((((((rt0.c3)/('-1836951930')))<(((((((((((((rt0.c0)AND(NULL)))OR(rt0.c2)))AND(x'')))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c3))))) ISNULL));
SELECT * FROM rt0 NATURAL JOIN t1;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (CASE WHEN t1.c0 THEN (t1.c0 IN ()) WHEN 0.4064371473656321 THEN x'' WHEN '0.6203218425985824' THEN ((t1.c0) BETWEEN (t1.c0) AND (0X1a4713d)) ELSE ')M漏%' COLLATE RTRIM END) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (CASE WHEN t1.c0 THEN (t1.c0 IN ()) WHEN 0.4064371473656321 THEN x'' WHEN '0.6203218425985824' THEN ((t1.c0) BETWEEN (t1.c0) AND (0X1a4713d)) ELSE ')M漏%' COLLATE RTRIM END))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((CASE WHEN t1.c0 THEN (t1.c0 IN ()) WHEN 0.4064371473656321 THEN x'' WHEN '0.6203218425985824' THEN ((t1.c0) BETWEEN (t1.c0) AND (0X1a4713d)) ELSE ')M漏%' COLLATE RTRIM END) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (((((((((HEX(DISTINCT t1.c0))OR(((((t1.c0)AND(t1.c0)))AND(t1.c0)))))AND((NOT (t1.c0)))))OR((((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0))=((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0))))))AND(((t1.c0) NOTNULL)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((((((((HEX(DISTINCT t1.c0))OR(((((t1.c0)AND(t1.c0)))AND(t1.c0)))))AND((NOT (t1.c0)))))OR((((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0))==((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0))))))AND(((t1.c0) NOTNULL)))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((((((((HEX(DISTINCT t1.c0))OR(((((t1.c0)AND(t1.c0)))AND(t1.c0)))))AND((NOT (t1.c0)))))OR((((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0))=((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0))))))AND(((t1.c0) NOTNULL)))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 HAVING SUM(COALESCE(0.7659656434052373, MAX(rt0.c2), rt0.c0, rt0.c1)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 HAVING (NOT (SUM(COALESCE(0.7659656434052373, MAX(rt0.c2), rt0.c0, rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 HAVING ((SUM(COALESCE(0.7659656434052373, MAX(rt0.c2), rt0.c0, rt0.c1))) ISNULL);
SELECT t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE ((t1.c0 COLLATE BINARY IN ())) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT ((t1.c0 COLLATE BINARY IN ())))) UNION ALL SELECT t1.c0 FROM t1 WHERE ((((t1.c0 COLLATE BINARY IN ())) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((COALESCE(DISTINCT rt0.c0, rt0.c2, rt0.c3, rt0.c3) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((COALESCE(DISTINCT rt0.c0, rt0.c2, rt0.c3, rt0.c3) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((COALESCE(DISTINCT rt0.c0, rt0.c2, rt0.c3, rt0.c3) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c3 FROM rt0, t1 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0, t1 WHERE (((x'5fbc') NOT BETWEEN ((+ (t1.c0))) AND (((rt0.c2)AND(rt0.c3))))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0, t1 WHERE ((NOT (((x'5fbc') NOT BETWEEN ((+ (t1.c0))) AND (((rt0.c2)AND(rt0.c3))))))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0, t1 WHERE (((((x'5fbc') NOT BETWEEN ((+ (t1.c0))) AND (((rt0.c2)AND(rt0.c3))))) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0, t1 GROUP BY rt0.c3;
SELECT rt0.c1, t1.c0 FROM t1, rt0 GROUP BY rt0.c1, t1.c0;
SELECT rt0.c1, t1.c0 FROM t1, rt0 GROUP BY rt0.c1, t1.c0 HAVING MIN(((0.12030048962622275) BETWEEN (TOTAL(TOTAL(rt0.c4))) AND (rt0.c4))) UNION ALL SELECT ALL rt0.c1, t1.c0 FROM t1, rt0 GROUP BY rt0.c1, t1.c0 HAVING (NOT (MIN(((0.12030048962622275) BETWEEN (TOTAL(TOTAL(rt0.c4))) AND (rt0.c4))))) UNION ALL SELECT rt0.c1, t1.c0 FROM t1, rt0 GROUP BY rt0.c1, t1.c0 HAVING ((MIN(((0.12030048962622275) BETWEEN (TOTAL(TOTAL(rt0.c4))) AND (rt0.c4)))) ISNULL);
SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3, t1.c0 FROM rt0 NOT INDEXED INNER JOIN t1 ON CAST(((t1.c0) ISNULL) AS TEXT);
SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3, t1.c0 FROM rt0 INNER JOIN t1 ON CAST(((t1.c0) ISNULL) AS TEXT) WHERE (((((((((((rt0.c0) IS TRUE))OR(0.24286621112475448)))AND((NOT ('Ok')))))OR(((rt0.c2) IS FALSE))))AND(((x'')<<(rt0.c3))))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3, t1.c0 FROM rt0 INNER JOIN t1 ON CAST(((t1.c0) ISNULL) AS TEXT) WHERE ((NOT (((((((((((rt0.c0) IS TRUE))OR(0.24286621112475448)))AND((NOT ('Ok')))))OR(((rt0.c2) IS FALSE))))AND(((x'')<<(rt0.c3))))))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3, t1.c0 FROM rt0 INNER JOIN t1 ON CAST(((t1.c0) ISNULL) AS TEXT) WHERE (((((((((((((rt0.c0) IS TRUE))OR(0.24286621112475448)))AND((NOT ('Ok')))))OR(((rt0.c2) IS FALSE))))AND(((x'')<<(rt0.c3))))) ISNULL));
SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3, t1.c0 FROM rt0 NOT INDEXED INNER JOIN t1 ON CAST(((t1.c0) ISNULL) AS TEXT);
SELECT DISTINCT rt0.c1, rt0.c2 FROM t1 LEFT OUTER JOIN rt0 ON (((NULL COLLATE BINARY, NULL, ((rt0.c4)!=(rt0.c0))))=((((((t1.c0)AND(t1.c0)))OR(rt0.c4)), (('|''o嬑%''0') BETWEEN (t1.c0) AND (rt0.c1)), (~ (rt0.c4)))));
SELECT DISTINCT rt0.c1, rt0.c2 FROM t1 LEFT OUTER JOIN rt0 ON (((NULL COLLATE BINARY, NULL, ((rt0.c4)<>(rt0.c0))))=((((((t1.c0)AND(t1.c0)))OR(rt0.c4)), (('|''o嬑%''0') BETWEEN (t1.c0) AND (rt0.c1)), (~ (rt0.c4))))) WHERE (((((((((rt0.c1)AND(rt0.c0 COLLATE RTRIM)))OR(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c4)))))AND(((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c0)))AND(t1.c0)))OR(rt0.c4)))))AND(((rt0.c2)%(rt0.c3))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM t1 LEFT OUTER JOIN rt0 ON (((NULL COLLATE BINARY, NULL, ((rt0.c4)!=(rt0.c0))))=((((((t1.c0)AND(t1.c0)))OR(rt0.c4)), (('|''o嬑%''0') BETWEEN (t1.c0) AND (rt0.c1)), (~ (rt0.c4))))) WHERE ((NOT (((((((((rt0.c1)AND(rt0.c0 COLLATE RTRIM)))OR(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c4)))))AND(((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c0)))AND(t1.c0)))OR(rt0.c4)))))AND(((rt0.c2)%(rt0.c3))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM t1 LEFT OUTER JOIN rt0 ON (((NULL COLLATE BINARY, NULL, ((rt0.c4)!=(rt0.c0))))=((((((t1.c0)AND(t1.c0)))OR(rt0.c4)), (('|''o嬑%''0') BETWEEN (t1.c0) AND (rt0.c1)), (~ (rt0.c4))))) WHERE (((((((((((rt0.c1)AND(rt0.c0 COLLATE RTRIM)))OR(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c4)))))AND(((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c0)))AND(t1.c0)))OR(rt0.c4)))))AND(((rt0.c2)%(rt0.c3))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM t1 LEFT OUTER JOIN rt0 ON (((NULL COLLATE BINARY, NULL, ((rt0.c4)!=(rt0.c0))))=((((((t1.c0)AND(t1.c0)))OR(rt0.c4)), (('|''o嬑%''0') BETWEEN (t1.c0) AND (rt0.c1)), (~ (rt0.c4)))));
SELECT rt0.c2, rt0.c4, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3;
SELECT ALL rt0.c2, rt0.c4, rt0.c3 FROM t1, rt0 WHERE (((((- (rt0.c2))))!=(('-2103095794')))) GROUP BY rt0.c2, rt0.c4, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c3 FROM t1, rt0 WHERE ((NOT (((((- (rt0.c2))))!=(('-2103095794')))))) GROUP BY rt0.c2, rt0.c4, rt0.c3 UNION SELECT rt0.c2, rt0.c4, rt0.c3 FROM t1, rt0 WHERE (((((((- (rt0.c2))))!=(('-2103095794')))) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c3;
SELECT rt0.c2, rt0.c4, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c4, t1.c0, rt0.c1 FROM rt0, t1 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c4, t1.c0, rt0.c1;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c4, t1.c0, rt0.c1 FROM rt0, t1 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c4, t1.c0, rt0.c1 HAVING MIN(MIN(rt0.c3)) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c4, t1.c0, rt0.c1 FROM rt0, t1 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c4, t1.c0, rt0.c1 HAVING (NOT (MIN(MIN(rt0.c3)))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c4, t1.c0, rt0.c1 FROM rt0, t1 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c4, t1.c0, rt0.c1 HAVING ((MIN(MIN(rt0.c3))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c1))<>((rt0.c1))))AND(NULLIF(DISTINCT rt0.c1, rt0.c1))))AND(CASE WHEN 0.8623351192114085 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((((rt0.c1))!=((rt0.c1))))AND(NULLIF(DISTINCT rt0.c1, rt0.c1))))AND(CASE WHEN 0.8623351192114085 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END))))) UNION ALL SELECT * FROM rt0 WHERE ((((((((((rt0.c1))!=((rt0.c1))))AND(NULLIF(DISTINCT rt0.c1, rt0.c1))))AND(CASE WHEN 0.8623351192114085 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((((0.5274369290925442)>(t1.c0))) IS TRUE)) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((((0.5274369290925442)>(t1.c0))) IS TRUE)))) UNION SELECT DISTINCT * FROM t1 WHERE (((((((0.5274369290925442)>(t1.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (0.2085988509681026) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (0.2085988509681026))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((0.2085988509681026) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING TOTAL(MIN(AVG(t1.c0))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (TOTAL(MIN(AVG(t1.c0))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((TOTAL(MIN(AVG(t1.c0)))) ISNULL);
SELECT * FROM rt0, t1;
SELECT * FROM rt0, t1 WHERE (CASE WHEN rt0.c4 COLLATE RTRIM THEN LIKELY(t1.c0) END) UNION ALL SELECT ALL * FROM rt0, t1 WHERE ((NOT (CASE WHEN rt0.c4 COLLATE RTRIM THEN LIKELY(t1.c0) END))) UNION ALL SELECT ALL * FROM rt0, t1 WHERE (((CASE WHEN rt0.c4 COLLATE RTRIM THEN LIKELY(t1.c0) END) ISNULL));
SELECT * FROM rt0, t1;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c4 FROM t1, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c4 FROM t1, rt0 WHERE (CAST(((((rt0.c3)OR(rt0.c0)))OR(t1.c0)) AS BLOB)) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c4 FROM t1, rt0 WHERE ((NOT (CAST(((((rt0.c3)OR(rt0.c0)))OR(t1.c0)) AS BLOB)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c4 FROM t1, rt0 WHERE (((CAST(((((rt0.c3)OR(rt0.c0)))OR(t1.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c4 FROM t1, rt0;
SELECT ALL rt0.c2, t1.c0, rt0.c4, rt0.c3, rt0.c0 FROM t1, rt0 GROUP BY rt0.c2, t1.c0, rt0.c4, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, t1.c0, rt0.c4, rt0.c3, rt0.c0 FROM t1, rt0 WHERE (((((rt0.c0)<>(rt0.c1))) NOT NULL)) GROUP BY rt0.c2, t1.c0, rt0.c4, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c2, t1.c0, rt0.c4, rt0.c3, rt0.c0 FROM t1, rt0 WHERE ((NOT (((((rt0.c0)!=(rt0.c1))) NOT NULL)))) GROUP BY rt0.c2, t1.c0, rt0.c4, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c2, t1.c0, rt0.c4, rt0.c3, rt0.c0 FROM t1, rt0 WHERE (((((((rt0.c0)!=(rt0.c1))) NOT NULL)) ISNULL)) GROUP BY rt0.c2, t1.c0, rt0.c4, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, t1.c0, rt0.c4, rt0.c3, rt0.c0 FROM t1, rt0 GROUP BY rt0.c2, t1.c0, rt0.c4, rt0.c3, rt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM t1, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM t1, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING SUM((((rt0.c3)) BETWEEN ((t1.c0)) AND ((rt0.c2)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM t1, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (SUM((((rt0.c3)) BETWEEN ((t1.c0)) AND ((rt0.c2)))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM t1, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((SUM((((rt0.c3)) BETWEEN ((t1.c0)) AND ((rt0.c2))))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM t1, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM t1, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING SUM((((rt0.c3)) BETWEEN ((t1.c0)) AND ((rt0.c2)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM t1, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (SUM((((rt0.c3)) BETWEEN ((t1.c0)) AND ((rt0.c2)))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM t1, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((SUM((((rt0.c3)) BETWEEN ((t1.c0)) AND ((rt0.c2))))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM t1, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((NOT ((((rt0.c1))<=((-1754859575)))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((NOT ((((rt0.c1))<=((-1754859575)))))))) UNION ALL SELECT * FROM rt0 WHERE ((((NOT ((((rt0.c1))<=((-1754859575)))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT t1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM t1 INNER JOIN rt0 ON ((rt0.c4)|(((t1.c0) BETWEEN (rt0.c1) AND (rt0.c0))));
SELECT DISTINCT t1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM t1 INNER JOIN rt0 ON ((rt0.c4)|(((t1.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) WHERE (CASE (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0)))  WHEN (rt0.c0 IN ()) THEN 0.13337848239683592 ELSE (((rt0.c3, t1.c0, rt0.c2))!=((rt0.c2, 0.1327215885489509, rt0.c2))) END) UNION SELECT DISTINCT t1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM t1 INNER JOIN rt0 ON ((rt0.c4)|(((t1.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) WHERE ((NOT (CASE (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0)))  WHEN (rt0.c0 IN ()) THEN 0.13337848239683592 ELSE (((rt0.c3, t1.c0, rt0.c2))!=((rt0.c2, 0.1327215885489509, rt0.c2))) END))) UNION SELECT DISTINCT t1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM t1 INNER JOIN rt0 ON ((rt0.c4)|(((t1.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) WHERE (((CASE (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0)))  WHEN (rt0.c0 IN ()) THEN 0.13337848239683592 ELSE (((rt0.c3, t1.c0, rt0.c2))<>((rt0.c2, 0.1327215885489509, rt0.c2))) END) ISNULL));
SELECT DISTINCT t1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM t1 INNER JOIN rt0 ON ((rt0.c4)|(((t1.c0) BETWEEN (rt0.c1) AND (rt0.c0))));
SELECT rt0.c1, rt0.c4, rt0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN rt0 ON (- ((((('(qh')AND(rt0.c4)))AND(0.992494519464118)))) GROUP BY rt0.c1, rt0.c4, rt0.c0, t1.c0;
SELECT rt0.c1, rt0.c4, rt0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN rt0 ON (- ((((('(qh')AND(rt0.c4)))AND(0.992494519464118)))) WHERE ((((+ (rt0.c0)))>(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 END))) GROUP BY rt0.c1, rt0.c4, rt0.c0, t1.c0 UNION SELECT ALL rt0.c1, rt0.c4, rt0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN rt0 ON (- ((((('(qh')AND(rt0.c4)))AND(0.992494519464118)))) WHERE ((NOT ((((+ (rt0.c0)))>(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 END))))) GROUP BY rt0.c1, rt0.c4, rt0.c0, t1.c0 UNION SELECT ALL rt0.c1, rt0.c4, rt0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN rt0 ON (- ((((('(qh')AND(rt0.c4)))AND(0.992494519464118)))) WHERE ((((((+ (rt0.c0)))>(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 END))) ISNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c0, t1.c0;
SELECT rt0.c1, rt0.c4, rt0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN rt0 ON (- ((((('(qh')AND(rt0.c4)))AND(0.992494519464118)))) GROUP BY rt0.c1, rt0.c4, rt0.c0, t1.c0;
SELECT ALL rt0.c4, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3;
SELECT ALL rt0.c4, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3 HAVING (((MAX(AVG(SUM(AVG(SUM(COUNT(rt0.c4))))))))<((((rt0.c0) IS FALSE)))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3 HAVING (NOT ((((MAX(AVG(SUM(AVG(SUM(COUNT(rt0.c4))))))))<((((rt0.c0) IS FALSE)))))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3 HAVING (((((MAX(AVG(SUM(AVG(SUM(COUNT(rt0.c4))))))))<((((rt0.c0) IS FALSE))))) ISNULL);
SELECT ALL rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((((DATE(rt0.c4, rt0.c3, rt0.c1))OR(CAST(rt0.c1 AS INTEGER))))AND(((rt0.c0)IS NOT(rt0.c3))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (((((DATE(rt0.c4, rt0.c3, rt0.c1))OR(CAST(rt0.c1 AS INTEGER))))AND(((rt0.c0)IS NOT(rt0.c3))))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((((((DATE(rt0.c4, rt0.c3, rt0.c1))OR(CAST(rt0.c1 AS INTEGER))))AND(((rt0.c0)IS NOT(rt0.c3))))) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0, t1;
SELECT DISTINCT * FROM rt0, t1 WHERE ((((((rt0.c0 IN ()))AND((rt0.c0 IN ()))))AND((NOT (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((NOT ((((((rt0.c0 IN ()))AND((rt0.c0 IN ()))))AND((NOT (rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((((((((rt0.c0 IN ()))AND((rt0.c0 IN ()))))AND((NOT (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, t1;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c0 END)&((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))) GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c0 END)&((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 UNION SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE (((((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c0 END)&((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3;
SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0 HAVING ((MIN(rt0.c3)) NOT BETWEEN (MAX(rt0.c3)) AND (AVG(COUNT(*)))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0 HAVING (NOT (((MIN(rt0.c3)) NOT BETWEEN (MAX(rt0.c3)) AND (AVG(COUNT(*)))))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0 HAVING ((((MIN(rt0.c3)) NOT BETWEEN (MAX(rt0.c3)) AND (AVG(COUNT(*))))) ISNULL);
SELECT * FROM t1;
SELECT * FROM t1 WHERE (CASE WHEN t1.c0 COLLATE BINARY THEN t1.c0 END) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (CASE WHEN t1.c0 COLLATE BINARY THEN t1.c0 END))) UNION ALL SELECT ALL * FROM t1 WHERE (((CASE WHEN t1.c0 COLLATE BINARY THEN t1.c0 END) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt0 WHERE (((((((((rt0.c1)AND('[')))AND(rt0.c2)))OR(((((rt0.c3)AND(rt0.c0)))AND(rt0.c2)))))AND((((rt0.c0, rt0.c3, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2)))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT (((((((((rt0.c1)AND('[')))AND(rt0.c2)))OR(((((rt0.c3)AND(rt0.c0)))AND(rt0.c2)))))AND((((rt0.c0, rt0.c3, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2)))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt0 WHERE (((((((((((rt0.c1)AND('[')))AND(rt0.c2)))OR(((((rt0.c3)AND(rt0.c0)))AND(rt0.c2)))))AND((((rt0.c0, rt0.c3, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2)))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (((((((t1.c0)AND(t1.c0)))AND(t1.c0))) BETWEEN ((((t1.c0))==((t1.c0)))) AND ('-581288713'))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((((((t1.c0)AND(t1.c0)))AND(t1.c0))) BETWEEN ((((t1.c0))==((t1.c0)))) AND ('-581288713'))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((((((t1.c0)AND(t1.c0)))AND(t1.c0))) BETWEEN ((((t1.c0))==((t1.c0)))) AND ('-581288713'))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL rt0.c4, t1.c0, rt0.c3, rt0.c0 FROM rt0, t1 GROUP BY rt0.c4, t1.c0, rt0.c3, rt0.c0;
SELECT ALL rt0.c4, t1.c0, rt0.c3, rt0.c0 FROM rt0, t1 GROUP BY rt0.c4, t1.c0, rt0.c3, rt0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT rt0.c4, t1.c0, rt0.c3, rt0.c0 FROM rt0, t1 GROUP BY rt0.c4, t1.c0, rt0.c3, rt0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL rt0.c4, t1.c0, rt0.c3, rt0.c0 FROM rt0, t1 GROUP BY rt0.c4, t1.c0, rt0.c3, rt0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL * FROM t1;
SELECT ALL * FROM t1 WHERE (CAST(t1.c0 COLLATE BINARY AS REAL)) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (CAST(t1.c0 COLLATE BINARY AS REAL)))) UNION ALL SELECT ALL * FROM t1 WHERE (((CAST(t1.c0 COLLATE BINARY AS REAL)) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1))) NOT NULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1))) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ((((NOT (t1.c0))) IS FALSE)) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT ((((NOT (t1.c0))) IS FALSE)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((((((NOT (t1.c0))) IS FALSE)) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((((((((((((((((rt0.c4)<>(rt0.c3)))OR((rt0.c4 IN ()))))OR(((((((((rt0.c2)AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c3)))AND(446421942)))))AND(CAST(rt0.c1 AS NUMERIC))))AND(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR((rt0.c3 IN (rt0.c0, rt0.c1)))))OR(((rt0.c3)*(rt0.c3)))))OR((+ (rt0.c0)))))OR(NULL))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((((((((((((((rt0.c4)<>(rt0.c3)))OR((rt0.c4 IN ()))))OR(((((((((rt0.c2)AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c3)))AND(446421942)))))AND(CAST(rt0.c1 AS NUMERIC))))AND(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR((rt0.c3 IN (rt0.c0, rt0.c1)))))OR(((rt0.c3)*(rt0.c3)))))OR((+ (rt0.c0)))))OR(NULL))))) UNION ALL SELECT * FROM rt0 WHERE (((((((((((((((((((((rt0.c4)!=(rt0.c3)))OR((rt0.c4 IN ()))))OR(((((((((rt0.c2)AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c3)))AND(446421942)))))AND(CAST(rt0.c1 AS NUMERIC))))AND(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR((rt0.c3 IN (rt0.c0, rt0.c1)))))OR(((rt0.c3)*(rt0.c3)))))OR((+ (rt0.c0)))))OR(NULL))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0, t1;
SELECT DISTINCT rt0.c2 FROM rt0, t1 WHERE (((((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c4)))AND(rt0.c2)))AND(((rt0.c3) IS FALSE))))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4))))) UNION SELECT DISTINCT rt0.c2 FROM rt0, t1 WHERE ((NOT (((((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c4)))AND(rt0.c2)))AND(((rt0.c3) IS FALSE))))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0, t1 WHERE (((((((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c4)))AND(rt0.c2)))AND(((rt0.c3) IS FALSE))))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0, t1;
SELECT t1.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM t1 CROSS JOIN rt0 ON ((((((((x'')AND(((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c0)OR(rt0.c3)))))OR(UNLIKELY(rt0.c2))))AND(rt0.c2 COLLATE NOCASE)) GROUP BY t1.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c2;
SELECT ALL t1.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM t1 CROSS JOIN rt0 ON ((((((((x'')AND(((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c0)OR(rt0.c3)))))OR(UNLIKELY(rt0.c2))))AND(rt0.c2 COLLATE NOCASE)) WHERE (TRIM(((t1.c0)>=(rt0.c4)))) GROUP BY t1.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c2 UNION SELECT ALL t1.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM t1 CROSS JOIN rt0 ON ((((((((x'')AND(((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c0)OR(rt0.c3)))))OR(UNLIKELY(rt0.c2))))AND(rt0.c2 COLLATE NOCASE)) WHERE ((NOT (TRIM(((t1.c0)>=(rt0.c4)))))) GROUP BY t1.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c2 UNION SELECT ALL t1.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM t1 CROSS JOIN rt0 ON ((((((((x'')AND(((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c0)OR(rt0.c3)))))OR(UNLIKELY(rt0.c2))))AND(rt0.c2 COLLATE NOCASE)) WHERE (((TRIM(((t1.c0)>=(rt0.c4)))) ISNULL)) GROUP BY t1.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c2;
SELECT t1.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM t1 CROSS JOIN rt0 ON ((((((((x'')AND(((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c0)OR(rt0.c3)))))OR(UNLIKELY(rt0.c2))))AND(rt0.c2 COLLATE NOCASE)) GROUP BY t1.c0, rt0.c3, rt0.c0, rt0.c4, rt0.c2;
SELECT ALL t1.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM t1 LEFT OUTER JOIN rt0 ON CAST((((rt0.c0))!=((rt0.c1))) AS INTEGER) GROUP BY t1.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2;
SELECT t1.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM t1 LEFT OUTER JOIN rt0 ON CAST((((rt0.c0))!=((rt0.c1))) AS INTEGER) GROUP BY t1.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2 HAVING TOTAL(MIN(AVG(AVG(SUM(rt0.c0))))) UNION ALL SELECT ALL t1.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM t1 LEFT OUTER JOIN rt0 ON CAST((((rt0.c0))<>((rt0.c1))) AS INTEGER) GROUP BY t1.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2 HAVING (NOT (TOTAL(MIN(AVG(AVG(SUM(rt0.c0))))))) UNION ALL SELECT ALL t1.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM t1 LEFT OUTER JOIN rt0 ON CAST((((rt0.c0))<>((rt0.c1))) AS INTEGER) GROUP BY t1.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2 HAVING ((TOTAL(MIN(AVG(AVG(SUM(rt0.c0)))))) ISNULL);
SELECT * FROM t1, rt0;
SELECT * FROM t1, rt0 WHERE (CASE LIKELY(rt0.c0)  WHEN ((((rt0.c4)AND(t1.c0)))AND(t1.c0)) THEN ((t1.c0) BETWEEN (rt0.c2) AND (rt0.c0)) ELSE (rt0.c4 IN ('-1074647119', rt0.c1, rt0.c2)) END) UNION ALL SELECT * FROM t1, rt0 WHERE ((NOT (CASE LIKELY(rt0.c0)  WHEN ((((rt0.c4)AND(t1.c0)))AND(t1.c0)) THEN ((t1.c0) BETWEEN (rt0.c2) AND (rt0.c0)) ELSE (rt0.c4 IN ('-1074647119', rt0.c1, rt0.c2)) END))) UNION ALL SELECT * FROM t1, rt0 WHERE (((CASE LIKELY(rt0.c0)  WHEN ((((rt0.c4)AND(t1.c0)))AND(t1.c0)) THEN ((t1.c0) BETWEEN (rt0.c2) AND (rt0.c0)) ELSE (rt0.c4 IN ('-1074647119', rt0.c1, rt0.c2)) END) ISNULL));
SELECT * FROM t1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN COALESCE(rt0.c1, rt0.c0, rt0.c2, rt0.c3) ELSE (((rt0.c1, rt0.c2, rt0.c4)) BETWEEN ((rt0.c1, rt0.c3, rt0.c0)) AND ((x'e888', rt0.c1, rt0.c4))) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN (rt0.c1 IN ()) THEN COALESCE(rt0.c1, rt0.c0, rt0.c2, rt0.c3) ELSE (((rt0.c1, rt0.c2, rt0.c4)) BETWEEN ((rt0.c1, rt0.c3, rt0.c0)) AND ((x'e888', rt0.c1, rt0.c4))) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN (rt0.c1 IN ()) THEN COALESCE(rt0.c1, rt0.c0, rt0.c2, rt0.c3) ELSE (((rt0.c1, rt0.c2, rt0.c4)) BETWEEN ((rt0.c1, rt0.c3, rt0.c0)) AND ((x'e888', rt0.c1, rt0.c4))) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ((((t1.c0)) BETWEEN ((((((((((t1.c0)AND(0Xffffffff907b866d)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))) AND ((((t1.c0) IS FALSE))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((((t1.c0)) BETWEEN ((((((((((t1.c0)AND(0xffffffff907b866d)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))) AND ((((t1.c0) IS FALSE))))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((((((t1.c0)) BETWEEN ((((((((((t1.c0)AND(0xffffffff907b866d)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))) AND ((((t1.c0) IS FALSE))))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, rt0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, rt0 GROUP BY t1.c0 HAVING (((('[4090354418824237702T4941330041904215934:-18702748014956128:578 -6383159454769363104 269 418:1563T3992863037653513752-cb隸')AND(rt0.c1 COLLATE RTRIM)))AND(((t1.c0)>>(rt0.c1)))) UNION ALL SELECT ALL t1.c0 FROM t1, rt0 GROUP BY t1.c0 HAVING (NOT ((((('[4090354418824237702T4941330041904215934:-18702748014956128:578 -6383159454769363104 269 418:1563T3992863037653513752-cb隸')AND(rt0.c1 COLLATE RTRIM)))AND(((t1.c0)>>(rt0.c1)))))) UNION ALL SELECT ALL t1.c0 FROM t1, rt0 GROUP BY t1.c0 HAVING (((((('[4090354418824237702T4941330041904215934:-18702748014956128:578 -6383159454769363104 269 418:1563T3992863037653513752-cb隸')AND(rt0.c1 COLLATE RTRIM)))AND(((t1.c0)>>(rt0.c1))))) ISNULL);
SELECT t1.c0 FROM t1, rt0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, rt0 GROUP BY t1.c0 HAVING (((('[4090354418824237702T4941330041904215934:-18702748014956128:578 -6383159454769363104 269 418:1563T3992863037653513752-cb隸')AND(rt0.c1 COLLATE RTRIM)))AND(((t1.c0)>>(rt0.c1)))) UNION ALL SELECT ALL t1.c0 FROM t1, rt0 GROUP BY t1.c0 HAVING (NOT ((((('[4090354418824237702T4941330041904215934:-18702748014956128:578 -6383159454769363104 269 418:1563T3992863037653513752-cb隸')AND(rt0.c1 COLLATE RTRIM)))AND(((t1.c0)>>(rt0.c1)))))) UNION ALL SELECT ALL t1.c0 FROM t1, rt0 GROUP BY t1.c0 HAVING (((((('[4090354418824237702T4941330041904215934:-18702748014956128:578 -6383159454769363104 269 418:1563T3992863037653513752-cb隸')AND(rt0.c1 COLLATE RTRIM)))AND(((t1.c0)>>(rt0.c1))))) ISNULL);
SELECT t1.c0 FROM t1, rt0 GROUP BY t1.c0;
SELECT MIN(((rt0.c4)*(((rt0.c3)|('1667757384'))))) FROM rt0, t1 ORDER BY ((rt0.c0)%(rt0.c3)) COLLATE BINARY  NULLS FIRST;
SELECT rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0 WHERE ((((0.815048881379816 IN ()))AND(((rt0.c3) ISNULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT ((((0.815048881379816 IN ()))AND(((rt0.c3) ISNULL)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0 WHERE ((((((0.815048881379816 IN ()))AND(((rt0.c3) ISNULL)))) ISNULL));
SELECT rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0, t1;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0, t1 WHERE (((0.8500361676028804)<=(((rt0.c0)IS(rt0.c0))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0, t1 WHERE ((NOT (((0.8500361676028804)<=(((rt0.c0)IS(rt0.c0))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0, t1 WHERE (((((0.8500361676028804)<=(((rt0.c0)IS(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0, t1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((((rt0.c3))==((rt0.c1))) IN (((rt0.c0)<<('-626028035')), json_extract(rt0.c3, NULL, rt0.c2, rt0.c4)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c3))=((rt0.c1))) IN (((rt0.c0)<<('-626028035')), json_extract(rt0.c3, NULL, rt0.c2, rt0.c4)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((((rt0.c3))=((rt0.c1))) IN (((rt0.c0)<<('-626028035')), json_extract(rt0.c3, NULL, rt0.c2, rt0.c4)))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING MIN(t1.c0) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (MIN(t1.c0))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((MIN(t1.c0)) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING MIN(t1.c0) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (MIN(t1.c0))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((MIN(t1.c0)) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT * FROM rt0, t1;
SELECT * FROM rt0, t1 WHERE (((((rt0.c3) ISNULL)) BETWEEN (((rt0.c2)OR(rt0.c3))) AND (rt0.c4 COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0, t1 WHERE ((NOT (((((rt0.c3) ISNULL)) BETWEEN (((rt0.c2)OR(rt0.c3))) AND (rt0.c4 COLLATE BINARY))))) UNION ALL SELECT * FROM rt0, t1 WHERE (((((((rt0.c3) ISNULL)) BETWEEN (((rt0.c2)OR(rt0.c3))) AND (rt0.c4 COLLATE BINARY))) ISNULL));
SELECT * FROM rt0, t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((((t1.c0)IS NOT(t1.c0)) IN ((t1.c0 IN ())))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((((t1.c0)IS NOT(t1.c0)) IN ((t1.c0 IN ())))))) UNION SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0)IS NOT(t1.c0)) IN ((t1.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL rt0.c2, t1.c0, rt0.c4, rt0.c3, rt0.c0 FROM t1 LEFT OUTER JOIN rt0 ON (rt0.c1 COLLATE NOCASE IN ()) GROUP BY rt0.c2, t1.c0, rt0.c4, rt0.c3, rt0.c0;
SELECT rt0.c2, t1.c0, rt0.c4, rt0.c3, rt0.c0 FROM t1 LEFT OUTER JOIN rt0 ON (rt0.c1 COLLATE NOCASE IN ()) WHERE (((rt0.c4 COLLATE BINARY)+(x''))) GROUP BY rt0.c2, t1.c0, rt0.c4, rt0.c3, rt0.c0 UNION SELECT rt0.c2, t1.c0, rt0.c4, rt0.c3, rt0.c0 FROM t1 LEFT OUTER JOIN rt0 ON (rt0.c1 COLLATE NOCASE IN ()) WHERE ((NOT (((rt0.c4 COLLATE BINARY)+(x''))))) GROUP BY rt0.c2, t1.c0, rt0.c4, rt0.c3, rt0.c0 UNION SELECT rt0.c2, t1.c0, rt0.c4, rt0.c3, rt0.c0 FROM t1 LEFT OUTER JOIN rt0 ON (rt0.c1 COLLATE NOCASE IN ()) WHERE (((((rt0.c4 COLLATE BINARY)+(x''))) ISNULL)) GROUP BY rt0.c2, t1.c0, rt0.c4, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, t1.c0, rt0.c4, rt0.c3, rt0.c0 FROM t1 LEFT OUTER JOIN rt0 ON (rt0.c1 COLLATE NOCASE IN ()) GROUP BY rt0.c2, t1.c0, rt0.c4, rt0.c3, rt0.c0;
SELECT t1.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN t1 ON MAX(CASE t1.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c2 END, rt0.c2 COLLATE BINARY) GROUP BY t1.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c2, rt0.c0;
SELECT t1.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN t1 ON MAX(CASE t1.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c2 END, rt0.c2 COLLATE BINARY) GROUP BY t1.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c2, rt0.c0 HAVING ((AVG(NULL))<=((((TOTAL(rt0.c1)))<>((COUNT(GROUP_CONCAT(-1092774831))))))) UNION ALL SELECT ALL t1.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN t1 ON MAX(CASE t1.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c2 END, rt0.c2 COLLATE BINARY) GROUP BY t1.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c2, rt0.c0 HAVING (NOT (((AVG(NULL))<=((((TOTAL(rt0.c1)))!=((COUNT(GROUP_CONCAT(-1092774831))))))))) UNION ALL SELECT t1.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN t1 ON MAX(CASE t1.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c2 END, rt0.c2 COLLATE BINARY) GROUP BY t1.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c2, rt0.c0 HAVING ((((AVG(NULL))<=((((TOTAL(rt0.c1)))!=((COUNT(GROUP_CONCAT(-1092774831)))))))) ISNULL);
SELECT ALL MIN((((((t1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))>(((t1.c0) BETWEEN (rt0.c2) AND (rt0.c4))))) FROM rt0, t1;
SELECT * FROM t1 LEFT OUTER JOIN rt0 ON (((NOT (rt0.c3)))!=(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE -1439530642 END));
SELECT * FROM t1 LEFT OUTER JOIN rt0 ON (((NOT (rt0.c3)))<>(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE -1439530642 END)) WHERE (((rt0.c3) NOT BETWEEN (CAST(rt0.c4 AS TEXT)) AND (0.8125464672295298))) UNION ALL SELECT * FROM t1 NOT INDEXED LEFT OUTER JOIN rt0 ON (((NOT (rt0.c3)))!=(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE -1439530642 END)) WHERE ((NOT (((rt0.c3) NOT BETWEEN (CAST(rt0.c4 AS TEXT)) AND (0.8125464672295298))))) UNION ALL SELECT ALL * FROM t1 LEFT OUTER JOIN rt0 ON (((NOT (rt0.c3)))<>(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE -1439530642 END)) WHERE (((((rt0.c3) NOT BETWEEN (CAST(rt0.c4 AS TEXT)) AND (0.8125464672295298))) ISNULL));
SELECT * FROM t1 LEFT OUTER JOIN rt0 ON (((NOT (rt0.c3)))!=(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE -1439530642 END));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c1)==(rt0.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(((rt0.c1)=(rt0.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(((rt0.c1)=(rt0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c3, t1.c0, rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY rt0.c3, t1.c0, rt0.c0, rt0.c1;
SELECT rt0.c3, t1.c0, rt0.c0, rt0.c1 FROM t1, rt0 WHERE ((rt0.c4 IN ((((t1.c0, rt0.c1, t1.c0))<>((rt0.c4, '-333682734', rt0.c0))), ((rt0.c0)*(rt0.c2))))) GROUP BY rt0.c3, t1.c0, rt0.c0, rt0.c1 UNION SELECT rt0.c3, t1.c0, rt0.c0, rt0.c1 FROM t1, rt0 WHERE ((NOT ((rt0.c4 IN ((((t1.c0, rt0.c1, t1.c0))!=((rt0.c4, '-333682734', rt0.c0))), ((rt0.c0)*(rt0.c2))))))) GROUP BY rt0.c3, t1.c0, rt0.c0, rt0.c1 UNION SELECT rt0.c3, t1.c0, rt0.c0, rt0.c1 FROM t1, rt0 WHERE ((((rt0.c4 IN ((((t1.c0, rt0.c1, t1.c0))!=((rt0.c4, '-333682734', rt0.c0))), ((rt0.c0)*(rt0.c2))))) ISNULL)) GROUP BY rt0.c3, t1.c0, rt0.c0, rt0.c1;
SELECT rt0.c3, t1.c0, rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY rt0.c3, t1.c0, rt0.c0, rt0.c1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING GROUP_CONCAT((+ (AVG(t1.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (GROUP_CONCAT((+ (AVG(t1.c0)))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((GROUP_CONCAT((+ (AVG(t1.c0))))) ISNULL);
SELECT TOTAL(((rt0.c4 COLLATE NOCASE) NOT BETWEEN (((((rt0.c2)OR(x'')))OR(rt0.c3))) AND ((- (rt0.c0))))) FROM t1, rt0;
SELECT * FROM t1, rt0;
SELECT ALL * FROM t1, rt0 WHERE (((((t1.c0)=(rt0.c0))) ISNULL)) UNION ALL SELECT * FROM t1, rt0 WHERE ((NOT (((((t1.c0)==(rt0.c0))) ISNULL)))) UNION ALL SELECT ALL * FROM t1, rt0 WHERE (((((((t1.c0)=(rt0.c0))) ISNULL)) ISNULL));
SELECT * FROM t1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c3, rt0.c0 FROM rt0, t1 GROUP BY rt0.c1, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c0 FROM rt0, t1 WHERE (((((rt0.c4 COLLATE NOCASE)OR((rt0.c4 IN (t1.c0)))))AND(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c3 END))) GROUP BY rt0.c1, rt0.c3, rt0.c0 UNION SELECT rt0.c1, rt0.c3, rt0.c0 FROM rt0, t1 WHERE ((NOT (((((rt0.c4 COLLATE NOCASE)OR((rt0.c4 IN (t1.c0)))))AND(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c3 END))))) GROUP BY rt0.c1, rt0.c3, rt0.c0 UNION SELECT rt0.c1, rt0.c3, rt0.c0 FROM rt0, t1 WHERE (((((((rt0.c4 COLLATE NOCASE)OR((rt0.c4 IN (t1.c0)))))AND(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c3 END))) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c0;
SELECT rt0.c1, rt0.c3, rt0.c0 FROM rt0, t1 GROUP BY rt0.c1, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0, t1.c0 FROM t1 CROSS JOIN rt0 ON (((((rt0.c2))<=((t1.c0)))) BETWEEN (((-2.103095794E9) NOT BETWEEN (rt0.c3) AND (rt0.c3))) AND ((rt0.c1 IN ()))) GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0, t1.c0;
SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0, t1.c0 FROM t1 CROSS JOIN rt0 ON (((((rt0.c2))<=((t1.c0)))) BETWEEN (((-2.103095794E9) NOT BETWEEN (rt0.c3) AND (rt0.c3))) AND ((rt0.c1 IN ()))) GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0, t1.c0 HAVING ((((rt0.c1)IS NOT(COUNT(MAX(rt0.c1))))) NOT NULL) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0, t1.c0 FROM t1 CROSS JOIN rt0 ON (((((rt0.c2))<=((t1.c0)))) BETWEEN (((-2.103095794E9) NOT BETWEEN (rt0.c3) AND (rt0.c3))) AND ((rt0.c1 IN ()))) GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0, t1.c0 HAVING (NOT (((((rt0.c1)IS NOT(COUNT(MAX(rt0.c1))))) NOT NULL))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0, t1.c0 FROM t1 CROSS JOIN rt0 ON (((((rt0.c2))<=((t1.c0)))) BETWEEN (((-2.103095794E9) NOT BETWEEN (rt0.c3) AND (rt0.c3))) AND ((rt0.c1 IN ()))) GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0, t1.c0 HAVING ((((((rt0.c1)IS NOT(COUNT(MAX(rt0.c1))))) NOT NULL)) ISNULL);
SELECT ALL * FROM t1;
SELECT * FROM t1 WHERE ((- (((t1.c0)>>(t1.c0))))) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT ((- (((t1.c0)>>(t1.c0))))))) UNION ALL SELECT ALL * FROM t1 WHERE ((((- (((t1.c0)>>(t1.c0))))) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))AND(((t1.c0)%(0X6d58a8a8)))))OR(((t1.c0) IS FALSE))))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c0) ISNULL)))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((((((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))AND(((t1.c0)%(0x6d58a8a8)))))OR(((t1.c0) IS FALSE))))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c0) ISNULL)))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((((((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))AND(((t1.c0)%(0x6d58a8a8)))))OR(((t1.c0) IS FALSE))))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c0) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3, t1.c0 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3, t1.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3, t1.c0 FROM rt0, t1 WHERE ((((rt0.c4 COLLATE BINARY, ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c0)), CAST(t1.c0 AS TEXT), NULL, ((rt0.c1)<>(t1.c0))))>=((MAX(rt0.c4, rt0.c1), rt0.c4, (rt0.c0 IN ()), COALESCE(rt0.c3, rt0.c1), 0.21734852020069872)))) GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3, t1.c0 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3, t1.c0 FROM rt0, t1 WHERE ((NOT ((((rt0.c4 COLLATE BINARY, ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c0)), CAST(t1.c0 AS TEXT), NULL, ((rt0.c1)!=(t1.c0))))>=((MAX(rt0.c4, rt0.c1), rt0.c4, (rt0.c0 IN ()), COALESCE(rt0.c3, rt0.c1), 0.21734852020069872)))))) GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3, t1.c0 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3, t1.c0 FROM rt0, t1 WHERE ((((((rt0.c4 COLLATE BINARY, ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c0)), CAST(t1.c0 AS TEXT), NULL, ((rt0.c1)!=(t1.c0))))>=((MAX(rt0.c4, rt0.c1), rt0.c4, (rt0.c0 IN ()), COALESCE(rt0.c3, rt0.c1), 0.21734852020069872)))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3, t1.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3, t1.c0 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3, t1.c0;
SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING MAX(MAX(SUM(rt0.c4))) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING (NOT (MAX(MAX(SUM(rt0.c4))))) UNION ALL SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING ((MAX(MAX(SUM(rt0.c4)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (0.24476301764157593) AND (rt0.c4))) BETWEEN ((rt0.c4 IN (rt0.c3))) AND (NULL))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (0.24476301764157593) AND (rt0.c4))) BETWEEN ((rt0.c4 IN (rt0.c3))) AND (NULL))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (0.24476301764157593) AND (rt0.c4))) BETWEEN ((rt0.c4 IN (rt0.c3))) AND (NULL))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((t1.c0 COLLATE NOCASE) IS TRUE)) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((t1.c0 COLLATE NOCASE) IS TRUE)))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((t1.c0 COLLATE NOCASE) IS TRUE)) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c4;
SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0 WHERE (0.9392293434423706) GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c4 UNION SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (0.9392293434423706))) GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0 WHERE (((0.9392293434423706) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c4;
SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c4;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING SUM(TOTAL(t1.c0)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (SUM(TOTAL(t1.c0)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((SUM(TOTAL(t1.c0))) ISNULL);
SELECT ALL * FROM t1, rt0;
SELECT * FROM t1, rt0 WHERE (CAST(((rt0.c0) NOTNULL) AS REAL)) UNION ALL SELECT * FROM t1, rt0 WHERE ((NOT (CAST(((rt0.c0) NOTNULL) AS REAL)))) UNION ALL SELECT * FROM t1, rt0 WHERE (((CAST(((rt0.c0) NOTNULL) AS REAL)) ISNULL));
SELECT ALL * FROM t1, rt0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((((((((LIKELY(DISTINCT t1.c0))AND(t1.c0 COLLATE RTRIM)))OR((NULL IN ()))))AND((t1.c0 IN (t1.c0)))))OR(((t1.c0)>>(t1.c0))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((((((((LIKELY(DISTINCT t1.c0))AND(t1.c0 COLLATE RTRIM)))OR((NULL IN ()))))AND((t1.c0 IN (t1.c0)))))OR(((t1.c0)>>(t1.c0))))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((((((((LIKELY(DISTINCT t1.c0))AND(t1.c0 COLLATE RTRIM)))OR((NULL IN ()))))AND((t1.c0 IN (t1.c0)))))OR(((t1.c0)>>(t1.c0))))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT rt0.c0, rt0.c4, rt0.c2, rt0.c3, t1.c0, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c3, t1.c0, rt0.c1;
SELECT rt0.c0, rt0.c4, rt0.c2, rt0.c3, t1.c0, rt0.c1 FROM rt0, t1 WHERE (CASE -1.699666842E9  WHEN (~ (t1.c0)) THEN (~ (t1.c0)) ELSE (((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((t1.c0, '', rt0.c1)) AND ((rt0.c3, rt0.c3, rt0.c4))) END) GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c3, t1.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c2, rt0.c3, t1.c0, rt0.c1 FROM rt0, t1 WHERE ((NOT (CASE -1.699666842E9  WHEN (~ (t1.c0)) THEN (~ (t1.c0)) ELSE (((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((t1.c0, '', rt0.c1)) AND ((rt0.c3, rt0.c3, rt0.c4))) END))) GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c3, t1.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c2, rt0.c3, t1.c0, rt0.c1 FROM rt0, t1 WHERE (((CASE -1.699666842E9  WHEN (~ (t1.c0)) THEN (~ (t1.c0)) ELSE (((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((t1.c0, '', rt0.c1)) AND ((rt0.c3, rt0.c3, rt0.c4))) END) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c3, t1.c0, rt0.c1;
SELECT rt0.c0, rt0.c4, rt0.c2, rt0.c3, t1.c0, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c3, t1.c0, rt0.c1;
SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, t1.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, t1.c0;
SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, t1.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, t1.c0 HAVING (+ (CASE rt0.c1  WHEN rt0.c2 THEN MAX(rt0.c4) END)) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, t1.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, t1.c0 HAVING (NOT ((+ (CASE rt0.c1  WHEN rt0.c2 THEN MAX(rt0.c4) END)))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, t1.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, t1.c0 HAVING (((+ (CASE rt0.c1  WHEN rt0.c2 THEN MAX(rt0.c4) END))) ISNULL);
SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, t1.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, t1.c0;
SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, t1.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, t1.c0 HAVING (+ (CASE rt0.c1  WHEN rt0.c2 THEN MAX(rt0.c4) END)) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, t1.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, t1.c0 HAVING (NOT ((+ (CASE rt0.c1  WHEN rt0.c2 THEN MAX(rt0.c4) END)))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, t1.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, t1.c0 HAVING (((+ (CASE rt0.c1  WHEN rt0.c2 THEN MAX(rt0.c4) END))) ISNULL);
SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, t1.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, t1.c0;
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt0 ON rt0.c0;
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt0 ON rt0.c0 WHERE (('' IN ())) UNION ALL SELECT ALL * FROM t1 RIGHT OUTER JOIN rt0 ON rt0.c0 WHERE ((NOT (('' IN ())))) UNION ALL SELECT * FROM t1 RIGHT OUTER JOIN rt0 ON rt0.c0 WHERE (((('' IN ())) ISNULL));
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt0 ON rt0.c0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ('') UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (''))) UNION SELECT DISTINCT * FROM t1 WHERE ((('') ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE (((RTRIM(rt0.c3))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 END))) GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c3, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (((RTRIM(rt0.c3))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 END))))) GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c3, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE (((((RTRIM(rt0.c3))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 END))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c3, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c3, rt0.c1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (NULL) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((NULL) ISNULL));
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, t1.c0 FROM rt0 INNER JOIN t1 ON NULL;
SELECT DISTINCT rt0.c1, rt0.c0, t1.c0 FROM rt0 INNER JOIN t1 ON NULL WHERE ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)) IN ())) UNION SELECT DISTINCT rt0.c1, rt0.c0, t1.c0 FROM rt0 INNER JOIN t1 ON NULL WHERE ((NOT ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)) IN ())))) UNION SELECT DISTINCT rt0.c1, rt0.c0, t1.c0 FROM rt0 INNER JOIN t1 ON NULL WHERE ((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)) IN ())) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, t1.c0 FROM rt0 INNER JOIN t1 ON NULL;
SELECT ALL t1.c0, rt0.c3, rt0.c2, rt0.c0 FROM t1, rt0 GROUP BY t1.c0, rt0.c3, rt0.c2, rt0.c0;
SELECT t1.c0, rt0.c3, rt0.c2, rt0.c0 FROM t1, rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT BETWEEN ('8838091') AND (CASE WHEN rt0.c4 THEN t1.c0 END))) GROUP BY t1.c0, rt0.c3, rt0.c2, rt0.c0 UNION SELECT t1.c0, rt0.c3, rt0.c2, rt0.c0 FROM t1, rt0 WHERE ((NOT (((rt0.c0 COLLATE NOCASE) NOT BETWEEN ('8838091') AND (CASE WHEN rt0.c4 THEN t1.c0 END))))) GROUP BY t1.c0, rt0.c3, rt0.c2, rt0.c0 UNION SELECT ALL t1.c0, rt0.c3, rt0.c2, rt0.c0 FROM t1, rt0 WHERE (((((rt0.c0 COLLATE NOCASE) NOT BETWEEN ('8838091') AND (CASE WHEN rt0.c4 THEN t1.c0 END))) ISNULL)) GROUP BY t1.c0, rt0.c3, rt0.c2, rt0.c0;
SELECT ALL t1.c0, rt0.c3, rt0.c2, rt0.c0 FROM t1, rt0 GROUP BY t1.c0, rt0.c3, rt0.c2, rt0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 NOT INDEXED GROUP BY t1.c0 HAVING SUM(t1.c0) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (SUM(t1.c0))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((SUM(t1.c0)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 NOT INDEXED GROUP BY t1.c0 HAVING SUM(t1.c0) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (SUM(t1.c0))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((SUM(t1.c0)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE (rt0.c4) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT (rt0.c4))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE (((rt0.c4) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, t1.c0, rt0.c3, rt0.c0, rt0.c4 FROM t1, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, t1.c0, rt0.c3, rt0.c0, rt0.c4 FROM t1, rt0 WHERE (((((((rt0.c4) IS FALSE))AND(TRIM(rt0.c1, rt0.c4))))AND(((NULL) BETWEEN (rt0.c1) AND (rt0.c3))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, t1.c0, rt0.c3, rt0.c0, rt0.c4 FROM t1, rt0 WHERE ((NOT (((((((rt0.c4) IS FALSE))AND(TRIM(rt0.c1, rt0.c4))))AND(((NULL) BETWEEN (rt0.c1) AND (rt0.c3))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, t1.c0, rt0.c3, rt0.c0, rt0.c4 FROM t1, rt0 WHERE (((((((((rt0.c4) IS FALSE))AND(TRIM(rt0.c1, rt0.c4))))AND(((NULL) BETWEEN (rt0.c1) AND (rt0.c3))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, t1.c0, rt0.c3, rt0.c0, rt0.c4 FROM t1, rt0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ((- (CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((- (CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((((- (CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM t1, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4, rt0.c2;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM t1, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4, rt0.c2 HAVING GROUP_CONCAT((((((((('1328022119')AND(COUNT(*))))OR(MAX(rt0.c3))))AND(MAX(rt0.c3))))OR(MAX(x'')))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM t1, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4, rt0.c2 HAVING (NOT (GROUP_CONCAT((((((((('1328022119')AND(COUNT(*))))OR(MAX(rt0.c3))))AND(MAX(rt0.c3))))OR(MAX(x'')))))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM t1, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4, rt0.c2 HAVING ((GROUP_CONCAT((((((((('1328022119')AND(COUNT(*))))OR(MAX(rt0.c3))))AND(MAX(rt0.c3))))OR(MAX(x''))))) ISNULL);
SELECT ALL TOTAL(rt0.c0) FROM rt0, t1;
SELECT rt0.c2 FROM t1, rt0;
SELECT ALL rt0.c2 FROM t1, rt0 WHERE ((((t1.c0 IN (rt0.c2, t1.c0)))&(NULL))) UNION ALL SELECT ALL rt0.c2 FROM t1, rt0 WHERE ((NOT ((((t1.c0 IN (rt0.c2, t1.c0)))&(NULL))))) UNION ALL SELECT rt0.c2 FROM t1, rt0 WHERE ((((((t1.c0 IN (rt0.c2, t1.c0)))&(NULL))) ISNULL));
SELECT rt0.c2 FROM t1, rt0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (t1.c0) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT * FROM t1 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT rt0.c0 FROM t1, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM t1, rt0 WHERE (((t1.c0) IS FALSE)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM t1, rt0 WHERE ((NOT (((t1.c0) IS FALSE)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM t1, rt0 WHERE (((((t1.c0) IS FALSE)) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM t1, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c4, rt0.c3, rt0.c2, t1.c0 FROM rt0, t1 GROUP BY rt0.c4, rt0.c3, rt0.c2, t1.c0;
SELECT ALL rt0.c4, rt0.c3, rt0.c2, t1.c0 FROM rt0, t1 GROUP BY rt0.c4, rt0.c3, rt0.c2, t1.c0 HAVING ((((SUM(rt0.c4))AND(AVG(MAX(rt0.c3)))))OR(AVG(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c2, t1.c0 FROM rt0, t1 GROUP BY rt0.c4, rt0.c3, rt0.c2, t1.c0 HAVING (NOT (((((SUM(rt0.c4))AND(AVG(MAX(rt0.c3)))))OR(AVG(GROUP_CONCAT(rt0.c0)))))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c2, t1.c0 FROM rt0, t1 GROUP BY rt0.c4, rt0.c3, rt0.c2, t1.c0 HAVING ((((((SUM(rt0.c4))AND(AVG(MAX(rt0.c3)))))OR(AVG(GROUP_CONCAT(rt0.c0))))) ISNULL);
SELECT t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE (((((t1.c0)LIKE(t1.c0))) IS FALSE)) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((((t1.c0)LIKE(t1.c0))) IS FALSE)))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE (((((((t1.c0)LIKE(t1.c0))) IS FALSE)) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0, t1;
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0, t1 WHERE (((rt0.c3 COLLATE BINARY)>=(NULL))) UNION SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0, t1 WHERE ((NOT (((rt0.c3 COLLATE BINARY)>=(NULL))))) UNION SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0, t1 WHERE (((((rt0.c3 COLLATE BINARY)>=(NULL))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0, t1;
SELECT rt0.c0, rt0.c4, rt0.c2, t1.c0 FROM t1, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2, t1.c0;
SELECT ALL rt0.c0, rt0.c4, rt0.c2, t1.c0 FROM t1, rt0 WHERE (CAST(ABS(rt0.c3) AS TEXT)) GROUP BY rt0.c0, rt0.c4, rt0.c2, t1.c0 UNION SELECT rt0.c0, rt0.c4, rt0.c2, t1.c0 FROM t1, rt0 WHERE ((NOT (CAST(ABS(rt0.c3) AS TEXT)))) GROUP BY rt0.c0, rt0.c4, rt0.c2, t1.c0 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c2, t1.c0 FROM t1, rt0 WHERE (((CAST(ABS(rt0.c3) AS TEXT)) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c2, t1.c0;
SELECT rt0.c0, rt0.c4, rt0.c2, t1.c0 FROM t1, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2, t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING SUM(SUM(x'7689')) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (SUM(SUM(x'7689')))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((SUM(SUM(x'7689'))) ISNULL);
SELECT ALL TOTAL(CAST((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c0))) AS NUMERIC)) FROM rt0, t1 ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN t1.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)OR(rt0.c1)))AND(((((rt0.c4)OR(rt0.c0)))AND(t1.c0)))) ASC  NULLS FIRST;
SELECT * FROM t1, rt0;
SELECT * FROM t1, rt0 WHERE (UPPER(DISTINCT ((rt0.c2) IS FALSE))) UNION ALL SELECT ALL * FROM t1, rt0 WHERE ((NOT (UPPER(DISTINCT ((rt0.c2) IS FALSE))))) UNION ALL SELECT * FROM t1, rt0 WHERE (((UPPER(DISTINCT ((rt0.c2) IS FALSE))) ISNULL));
SELECT * FROM t1, rt0;
SELECT DISTINCT rt0.c3, t1.c0, rt0.c0, rt0.c2 FROM t1 RIGHT OUTER JOIN rt0 ON ((t1.c0 COLLATE BINARY) BETWEEN (((1650688604) NOTNULL)) AND (((rt0.c1)>=(rt0.c3))));
SELECT DISTINCT rt0.c3, t1.c0, rt0.c0, rt0.c2 FROM t1 RIGHT OUTER JOIN rt0 ON ((t1.c0 COLLATE BINARY) BETWEEN (((1650688604) NOTNULL)) AND (((rt0.c1)>=(rt0.c3)))) WHERE (((rt0.c0 COLLATE BINARY)+(((rt0.c3)|(rt0.c3))))) UNION SELECT DISTINCT rt0.c3, t1.c0, rt0.c0, rt0.c2 FROM t1 RIGHT OUTER JOIN rt0 ON ((t1.c0 COLLATE BINARY) BETWEEN (((1650688604) NOTNULL)) AND (((rt0.c1)>=(rt0.c3)))) WHERE ((NOT (((rt0.c0 COLLATE BINARY)+(((rt0.c3)|(rt0.c3))))))) UNION SELECT DISTINCT rt0.c3, t1.c0, rt0.c0, rt0.c2 FROM t1 RIGHT OUTER JOIN rt0 ON ((t1.c0 COLLATE BINARY) BETWEEN (((1650688604) NOTNULL)) AND (((rt0.c1)>=(rt0.c3)))) WHERE (((((rt0.c0 COLLATE BINARY)+(((rt0.c3)|(rt0.c3))))) ISNULL));
SELECT DISTINCT rt0.c3, t1.c0, rt0.c0, rt0.c2 FROM t1 RIGHT OUTER JOIN rt0 ON ((t1.c0 COLLATE BINARY) BETWEEN (((1650688604) NOTNULL)) AND (((rt0.c1)>=(rt0.c3))));
SELECT rt0.c2, rt0.c4, t1.c0, rt0.c0, rt0.c3, rt0.c1 FROM t1, rt0 GROUP BY rt0.c2, rt0.c4, t1.c0, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c2, rt0.c4, t1.c0, rt0.c0, rt0.c3, rt0.c1 FROM t1, rt0 WHERE (CASE WHEN ((((((((rt0.c2)AND(t1.c0)))OR(t1.c0)))OR(rt0.c0)))AND(NULL)) THEN (rt0.c2 IN ()) WHEN ((rt0.c2)IS NOT(rt0.c3)) THEN ((((t1.c0)AND(t1.c0)))OR(rt0.c3)) WHEN ((t1.c0)%(NULL)) THEN (NOT (rt0.c0)) ELSE 'yx' END) GROUP BY rt0.c2, rt0.c4, t1.c0, rt0.c0, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c4, t1.c0, rt0.c0, rt0.c3, rt0.c1 FROM t1, rt0 WHERE ((NOT (CASE WHEN ((((((((rt0.c2)AND(t1.c0)))OR(t1.c0)))OR(rt0.c0)))AND(NULL)) THEN (rt0.c2 IN ()) WHEN ((rt0.c2)IS NOT(rt0.c3)) THEN ((((t1.c0)AND(t1.c0)))OR(rt0.c3)) WHEN ((t1.c0)%(NULL)) THEN (NOT (rt0.c0)) ELSE 'yx' END))) GROUP BY rt0.c2, rt0.c4, t1.c0, rt0.c0, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c4, t1.c0, rt0.c0, rt0.c3, rt0.c1 FROM t1, rt0 WHERE (((CASE WHEN ((((((((rt0.c2)AND(t1.c0)))OR(t1.c0)))OR(rt0.c0)))AND(NULL)) THEN (rt0.c2 IN ()) WHEN ((rt0.c2)IS NOT(rt0.c3)) THEN ((((t1.c0)AND(t1.c0)))OR(rt0.c3)) WHEN ((t1.c0)%(NULL)) THEN (NOT (rt0.c0)) ELSE 'yx' END) ISNULL)) GROUP BY rt0.c2, rt0.c4, t1.c0, rt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c4, t1.c0, rt0.c0, rt0.c3, rt0.c1 FROM t1, rt0 GROUP BY rt0.c2, rt0.c4, t1.c0, rt0.c0, rt0.c3, rt0.c1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING GROUP_CONCAT(MIN(t1.c0)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (GROUP_CONCAT(MIN(t1.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((GROUP_CONCAT(MIN(t1.c0))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CASE WHEN (rt0.c4 IN ()) THEN IFNULL(rt0.c0, rt0.c3) END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE WHEN (rt0.c4 IN ()) THEN IFNULL(rt0.c0, rt0.c3) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN (rt0.c4 IN ()) THEN IFNULL(rt0.c0, rt0.c3) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE ((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c4 END IN ())) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT ((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c4 END IN ())))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c4 END IN ())) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE ((LENGTH(t1.c0) IN ())) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((LENGTH(t1.c0) IN ())))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((((LENGTH(t1.c0) IN ())) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((((((COUNT(*))AND((((COUNT(t1.c0))) BETWEEN ((AVG(t1.c0))) AND ((t1.c0))))))AND(GROUP_CONCAT(t1.c0))))OR(SUM(t1.c0))))AND(TOTAL(MIN(MAX(t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((((((((COUNT(*))AND((((COUNT(t1.c0))) BETWEEN ((AVG(t1.c0))) AND ((t1.c0))))))AND(GROUP_CONCAT(t1.c0))))OR(SUM(t1.c0))))AND(TOTAL(MIN(MAX(t1.c0))))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((((((((COUNT(*))AND((((COUNT(t1.c0))) BETWEEN ((AVG(t1.c0))) AND ((t1.c0))))))AND(GROUP_CONCAT(t1.c0))))OR(SUM(t1.c0))))AND(TOTAL(MIN(MAX(t1.c0)))))) ISNULL);
SELECT SUM(CASE LIKELIHOOD(DISTINCT rt0.c0, 0.2821882652086103)  WHEN ((rt0.c1)GLOB(rt0.c1)) THEN rt0.c1 ELSE (('')IS NOT(rt0.c0)) END) FROM rt0 ORDER BY rt0.c1 DESC;
SELECT ALL rt0.c1, rt0.c2, t1.c0, rt0.c3, rt0.c4, rt0.c0 FROM rt0, t1;
SELECT ALL rt0.c1, rt0.c2, t1.c0, rt0.c3, rt0.c4, rt0.c0 FROM rt0, t1 WHERE ((((((rt0.c3) ISNULL)))<>(((((rt0.c4)) NOT BETWEEN ((t1.c0)) AND ((rt0.c0))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, t1.c0, rt0.c3, rt0.c4, rt0.c0 FROM rt0, t1 WHERE ((NOT ((((((rt0.c3) ISNULL)))!=(((((rt0.c4)) NOT BETWEEN ((t1.c0)) AND ((rt0.c0))))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, t1.c0, rt0.c3, rt0.c4, rt0.c0 FROM rt0, t1 WHERE ((((((((rt0.c3) ISNULL)))!=(((((rt0.c4)) NOT BETWEEN ((t1.c0)) AND ((rt0.c0))))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, t1.c0, rt0.c3, rt0.c4, rt0.c0 FROM rt0, t1;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (x'') UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (x''))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((x'') ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT rt0.c3 FROM rt0, t1 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0, t1 WHERE ((t1.c0 IN ()) COLLATE NOCASE) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0, t1 WHERE ((NOT ((t1.c0 IN ()) COLLATE NOCASE))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0, t1 WHERE ((((t1.c0 IN ()) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0, t1 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 NOT INDEXED GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING LIKELY(DISTINCT GROUP_CONCAT(AVG(COUNT(*)))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (LIKELY(DISTINCT GROUP_CONCAT(AVG(COUNT(*)))))) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((LIKELY(DISTINCT GROUP_CONCAT(AVG(COUNT(*))))) ISNULL);
SELECT * FROM t1, rt0;
SELECT * FROM t1, rt0 WHERE (((rt0.c4 IN ()) IN ())) UNION ALL SELECT * FROM t1, rt0 WHERE ((NOT (((rt0.c4 IN ()) IN ())))) UNION ALL SELECT ALL * FROM t1, rt0 WHERE (((((rt0.c4 IN ()) IN ())) ISNULL));
SELECT * FROM t1, rt0;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM t1 NOT INDEXED NATURAL JOIN rt0;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM t1 NATURAL JOIN rt0 WHERE ((((NOT (rt0.c0))) BETWEEN (((rt0.c1)<(rt0.c4))) AND (t1.c0 COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM t1 NATURAL JOIN rt0 WHERE ((NOT ((((NOT (rt0.c0))) BETWEEN (((rt0.c1)<(rt0.c4))) AND (t1.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM t1 NATURAL JOIN rt0 WHERE ((((((NOT (rt0.c0))) BETWEEN (((rt0.c1)<(rt0.c4))) AND (t1.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM t1 NOT INDEXED NATURAL JOIN rt0;
SELECT rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c4, rt0.c0 FROM rt0 WHERE (json_quote(((rt0.c2)%(rt0.c3)))) GROUP BY rt0.c4, rt0.c0 UNION SELECT rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT (json_quote(((rt0.c2)%(rt0.c3)))))) GROUP BY rt0.c4, rt0.c0 UNION SELECT rt0.c4, rt0.c0 FROM rt0 WHERE (((json_quote(((rt0.c2)%(rt0.c3)))) ISNULL)) GROUP BY rt0.c4, rt0.c0;
SELECT rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL t1.c0, rt0.c4, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY t1.c0, rt0.c4, rt0.c1, rt0.c2;
SELECT ALL t1.c0, rt0.c4, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY t1.c0, rt0.c4, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL t1.c0, rt0.c4, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY t1.c0, rt0.c4, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT t1.c0, rt0.c4, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY t1.c0, rt0.c4, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t1.c0, rt0.c4, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY t1.c0, rt0.c4, rt0.c1, rt0.c2;
SELECT ALL t1.c0, rt0.c4, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY t1.c0, rt0.c4, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL t1.c0, rt0.c4, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY t1.c0, rt0.c4, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT t1.c0, rt0.c4, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY t1.c0, rt0.c4, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t1.c0, rt0.c4, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY t1.c0, rt0.c4, rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0 WHERE (((((rt0.c3)GLOB(rt0.c2))) NOT NULL)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c3)GLOB(rt0.c2))) NOT NULL)))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0 WHERE (((((((rt0.c3)GLOB(rt0.c2))) NOT NULL)) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c2, t1.c0, rt0.c1 FROM t1, rt0;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c2, t1.c0, rt0.c1 FROM t1, rt0 WHERE (((t1.c0) NOT BETWEEN (rt0.c0) AND (t1.c0)) COLLATE BINARY) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c2, t1.c0, rt0.c1 FROM t1, rt0 WHERE ((NOT (((t1.c0) NOT BETWEEN (rt0.c0) AND (t1.c0)) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c2, t1.c0, rt0.c1 FROM t1, rt0 WHERE (((((t1.c0) NOT BETWEEN (rt0.c0) AND (t1.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c2, t1.c0, rt0.c1 FROM t1, rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, t1.c0, rt0.c3, rt0.c4 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, rt0.c2, t1.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, t1.c0, rt0.c3, rt0.c4 FROM rt0, t1 WHERE (((((((((((((((rt0.c1)OR(t1.c0)))OR(t1.c0)))OR(rt0.c4)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2))) NOT BETWEEN ((((rt0.c0))<=((rt0.c4)))) AND (((rt0.c0) NOT BETWEEN (rt0.c3) AND (t1.c0))))) GROUP BY rt0.c0, rt0.c1, rt0.c2, t1.c0, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2, t1.c0, rt0.c3, rt0.c4 FROM rt0, t1 WHERE ((NOT (((((((((((((((rt0.c1)OR(t1.c0)))OR(t1.c0)))OR(rt0.c4)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2))) NOT BETWEEN ((((rt0.c0))<=((rt0.c4)))) AND (((rt0.c0) NOT BETWEEN (rt0.c3) AND (t1.c0))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2, t1.c0, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2, t1.c0, rt0.c3, rt0.c4 FROM rt0, t1 WHERE (((((((((((((((((rt0.c1)OR(t1.c0)))OR(t1.c0)))OR(rt0.c4)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2))) NOT BETWEEN ((((rt0.c0))<=((rt0.c4)))) AND (((rt0.c0) NOT BETWEEN (rt0.c3) AND (t1.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2, t1.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, t1.c0, rt0.c3, rt0.c4 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, rt0.c2, t1.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 HAVING '92946826' UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 HAVING (NOT ('92946826')) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 HAVING (('92946826') ISNULL);
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 HAVING '92946826' UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 HAVING (NOT ('92946826')) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 HAVING (('92946826') ISNULL);
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE (CAST('q2~' AS INTEGER)) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST('q2~' AS INTEGER)))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST('q2~' AS INTEGER)) ISNULL));
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(NULL)))OR(t1.c0 COLLATE BINARY)))OR(((((t1.c0)OR(t1.c0)))AND(t1.c0))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(NULL)))OR(t1.c0 COLLATE BINARY)))OR(((((t1.c0)OR(t1.c0)))AND(t1.c0))))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(NULL)))OR(t1.c0 COLLATE BINARY)))OR(((((t1.c0)OR(t1.c0)))AND(t1.c0))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c0))>((rt0.c1)))) NOT BETWEEN (x'') AND (LIKELIHOOD(rt0.c2, 0.35997752171518993)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c0))>((rt0.c1)))) NOT BETWEEN (x'') AND (LIKELIHOOD(rt0.c2, 0.35997752171518993)))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((((((((rt0.c0))>((rt0.c1)))) NOT BETWEEN (x'') AND (LIKELIHOOD(rt0.c2, 0.35997752171518993)))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM t1, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2;
SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM t1, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c2 FROM t1, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM t1, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM t1, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2;
SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM t1, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c2 FROM t1, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM t1, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM t1, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((CASE NULL  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END)>=(rt0.c4 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((CASE NULL  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END)>=(rt0.c4 COLLATE NOCASE))))) UNION ALL SELECT * FROM rt0 WHERE (((((CASE NULL  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END)>=(rt0.c4 COLLATE NOCASE))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE (CASE rt0.c2  WHEN rt0.c0 THEN t1.c0 END COLLATE BINARY) UNION SELECT DISTINCT * FROM t1 NOT INDEXED, rt0 WHERE ((NOT (CASE rt0.c2  WHEN rt0.c0 THEN t1.c0 END COLLATE BINARY))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN t1.c0 END COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT rt0.c3, rt0.c1 FROM t1, rt0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM t1, rt0 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) IN ())) GROUP BY rt0.c3, rt0.c1 UNION SELECT rt0.c3, rt0.c1 FROM t1, rt0 WHERE ((NOT ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) IN ())))) GROUP BY rt0.c3, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c1 FROM t1, rt0 WHERE ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) IN ())) ISNULL)) GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM t1, rt0 GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c4 FROM t1, rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM t1, rt0 GROUP BY rt0.c4 HAVING SUM(TOTAL(GROUP_CONCAT(t1.c0))) UNION ALL SELECT ALL rt0.c4 FROM t1, rt0 GROUP BY rt0.c4 HAVING (NOT (SUM(TOTAL(GROUP_CONCAT(t1.c0))))) UNION ALL SELECT rt0.c4 FROM t1, rt0 GROUP BY rt0.c4 HAVING ((SUM(TOTAL(GROUP_CONCAT(t1.c0)))) ISNULL);
SELECT ALL * FROM rt0, t1;
SELECT * FROM rt0, t1 WHERE (((((rt0.c3) NOT NULL))OR(NULLIF(')V', rt0.c3)))) UNION ALL SELECT * FROM rt0, t1 WHERE ((NOT (((((rt0.c3) NOT NULL))OR(NULLIF(')V', rt0.c3)))))) UNION ALL SELECT * FROM rt0, t1 WHERE (((((((rt0.c3) NOT NULL))OR(NULLIF(')V', rt0.c3)))) ISNULL));
SELECT ALL * FROM rt0, t1;
SELECT DISTINCT * FROM t1 NATURAL JOIN rt0;
SELECT DISTINCT * FROM t1 NATURAL JOIN rt0 WHERE (CASE 1.851909573E9 COLLATE RTRIM  WHEN CAST(rt0.c4 AS BLOB) THEN rt0.c1 COLLATE RTRIM ELSE rt0.c0 END) UNION SELECT DISTINCT * FROM t1 NATURAL JOIN rt0 WHERE ((NOT (CASE 1.851909573E9 COLLATE RTRIM  WHEN CAST(rt0.c4 AS BLOB) THEN rt0.c1 COLLATE RTRIM ELSE rt0.c0 END))) UNION SELECT DISTINCT * FROM t1 NATURAL JOIN rt0 WHERE (((CASE 1.851909573E9 COLLATE RTRIM  WHEN CAST(rt0.c4 AS BLOB) THEN rt0.c1 COLLATE RTRIM ELSE rt0.c0 END) ISNULL));
SELECT DISTINCT * FROM t1 NATURAL JOIN rt0;
SELECT t1.c0, rt0.c2, rt0.c1 FROM t1, rt0 GROUP BY t1.c0, rt0.c2, rt0.c1;
SELECT t1.c0, rt0.c2, rt0.c1 FROM t1, rt0 WHERE (CAST(((rt0.c2) ISNULL) AS REAL)) GROUP BY t1.c0, rt0.c2, rt0.c1 UNION SELECT ALL t1.c0, rt0.c2, rt0.c1 FROM t1, rt0 WHERE ((NOT (CAST(((rt0.c2) ISNULL) AS REAL)))) GROUP BY t1.c0, rt0.c2, rt0.c1 UNION SELECT t1.c0, rt0.c2, rt0.c1 FROM t1, rt0 WHERE (((CAST(((rt0.c2) ISNULL) AS REAL)) ISNULL)) GROUP BY t1.c0, rt0.c2, rt0.c1;
SELECT t1.c0, rt0.c2, rt0.c1 FROM t1, rt0 GROUP BY t1.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2;
SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2 HAVING ((((((rt0.c2, TOTAL(COUNT(*)), rt0.c0))>=((GROUP_CONCAT(GROUP_CONCAT(MAX(rt0.c2))), rt0.c3, COUNT(GROUP_CONCAT(COUNT(*)))))), COUNT(rt0.c4), ((((COUNT(*))OR(GROUP_CONCAT(rt0.c0))))OR(TOTAL(COUNT(COUNT(*)))))))>=((((rt0.c0)%(rt0.c1)), rt0.c0 COLLATE BINARY, TOTAL(SUM(COUNT(*)))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2 HAVING (NOT (((((((rt0.c2, TOTAL(COUNT(*)), rt0.c0))>=((GROUP_CONCAT(GROUP_CONCAT(MAX(rt0.c2))), rt0.c3, COUNT(GROUP_CONCAT(COUNT(*)))))), COUNT(rt0.c4), ((((COUNT(*))OR(GROUP_CONCAT(rt0.c0))))OR(TOTAL(COUNT(COUNT(*)))))))>=((((rt0.c0)%(rt0.c1)), rt0.c0 COLLATE BINARY, TOTAL(SUM(COUNT(*)))))))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2 HAVING ((((((((rt0.c2, TOTAL(COUNT(*)), rt0.c0))>=((GROUP_CONCAT(GROUP_CONCAT(MAX(rt0.c2))), rt0.c3, COUNT(GROUP_CONCAT(COUNT(*)))))), COUNT(rt0.c4), ((((COUNT(*))OR(GROUP_CONCAT(rt0.c0))))OR(TOTAL(COUNT(COUNT(*)))))))>=((((rt0.c0)%(rt0.c1)), rt0.c0 COLLATE BINARY, TOTAL(SUM(COUNT(*))))))) ISNULL);
SELECT ALL * FROM t1, rt0;
SELECT ALL * FROM t1, rt0 WHERE (((HEX(rt0.c1))*(((rt0.c3)IS NOT(rt0.c0))))) UNION ALL SELECT ALL * FROM t1, rt0 WHERE ((NOT (((HEX(rt0.c1))*(((rt0.c3)IS NOT(rt0.c0))))))) UNION ALL SELECT ALL * FROM t1, rt0 WHERE (((((HEX(rt0.c1))*(((rt0.c3)IS NOT(rt0.c0))))) ISNULL));
SELECT ALL * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE (CASE ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3))  WHEN t1.c0 THEN CASE WHEN rt0.c2 THEN rt0.c4 ELSE t1.c0 END END) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT (CASE ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3))  WHEN t1.c0 THEN CASE WHEN rt0.c2 THEN rt0.c4 ELSE t1.c0 END END))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE (((CASE ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3))  WHEN t1.c0 THEN CASE WHEN rt0.c2 THEN rt0.c4 ELSE t1.c0 END END) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT ALL rt0.c2, t1.c0, rt0.c4, rt0.c3 FROM rt0, t1 GROUP BY rt0.c2, t1.c0, rt0.c4, rt0.c3;
SELECT ALL rt0.c2, t1.c0, rt0.c4, rt0.c3 FROM rt0, t1 WHERE ((+ ((NULL IN (t1.c0))))) GROUP BY rt0.c2, t1.c0, rt0.c4, rt0.c3 UNION SELECT ALL rt0.c2, t1.c0, rt0.c4, rt0.c3 FROM rt0, t1 WHERE ((NOT ((+ ((NULL IN (t1.c0))))))) GROUP BY rt0.c2, t1.c0, rt0.c4, rt0.c3 UNION SELECT ALL rt0.c2, t1.c0, rt0.c4, rt0.c3 FROM rt0, t1 WHERE ((((+ ((NULL IN (t1.c0))))) ISNULL)) GROUP BY rt0.c2, t1.c0, rt0.c4, rt0.c3;
SELECT ALL rt0.c2, t1.c0, rt0.c4, rt0.c3 FROM rt0, t1 GROUP BY rt0.c2, t1.c0, rt0.c4, rt0.c3;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(COUNT(*)))>=(AVG(MIN(NULL)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((COUNT(COUNT(*)))>=(AVG(MIN(NULL)))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((COUNT(COUNT(*)))>=(AVG(MIN(NULL))))) ISNULL);
SELECT * FROM t1, rt0;
SELECT * FROM t1, rt0 WHERE (((((((rt0.c2)&(rt0.c0)))AND((rt0.c4 IN (t1.c0, rt0.c0)))))OR(CAST(rt0.c0 AS REAL)))) UNION ALL SELECT * FROM t1, rt0 WHERE ((NOT (((((((rt0.c2)&(rt0.c0)))AND((rt0.c4 IN (t1.c0, rt0.c0)))))OR(CAST(rt0.c0 AS REAL)))))) UNION ALL SELECT * FROM t1, rt0 WHERE (((((((((rt0.c2)&(rt0.c0)))AND((rt0.c4 IN (t1.c0, rt0.c0)))))OR(CAST(rt0.c0 AS REAL)))) ISNULL));
SELECT * FROM t1, rt0;
SELECT DISTINCT * FROM rt0, t1;
SELECT DISTINCT * FROM rt0, t1 WHERE (((((((((((((x'b8b9')OR((rt0.c0 IN ()))))OR(CAST(t1.c0 AS NUMERIC))))AND((- (rt0.c2)))))OR(CAST(rt0.c3 AS TEXT))))AND((~ (rt0.c4)))))AND(CASE rt0.c3  WHEN t1.c0 THEN t1.c0 ELSE rt0.c2 END))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((NOT (((((((((((((x'b8b9')OR((rt0.c0 IN ()))))OR(CAST(t1.c0 AS NUMERIC))))AND((- (rt0.c2)))))OR(CAST(rt0.c3 AS TEXT))))AND((~ (rt0.c4)))))AND(CASE rt0.c3  WHEN t1.c0 THEN t1.c0 ELSE rt0.c2 END))))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE (((((((((((((((x'b8b9')OR((rt0.c0 IN ()))))OR(CAST(t1.c0 AS NUMERIC))))AND((- (rt0.c2)))))OR(CAST(rt0.c3 AS TEXT))))AND((~ (rt0.c4)))))AND(CASE rt0.c3  WHEN t1.c0 THEN t1.c0 ELSE rt0.c2 END))) ISNULL));
SELECT DISTINCT * FROM rt0, t1;
SELECT ALL rt0.c2 FROM rt0, t1 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, t1 WHERE (((((rt0.c3)AND(-7.5644482E8))) NOT BETWEEN (((rt0.c4)>>(t1.c0))) AND (((rt0.c2) ISNULL)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, t1 WHERE ((NOT (((((rt0.c3)AND(-7.5644482E8))) NOT BETWEEN (((rt0.c4)>>(t1.c0))) AND (((rt0.c2) ISNULL)))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, t1 WHERE (((((((rt0.c3)AND(-7.5644482E8))) NOT BETWEEN (((rt0.c4)>>(t1.c0))) AND (((rt0.c2) ISNULL)))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, t1 GROUP BY rt0.c2;
