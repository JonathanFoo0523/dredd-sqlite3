-- Time: 2024/06/09 20:45:19
-- Database: database44
-- Database version: 3.40.0
-- seed value: 3314760244
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE TABLE t0 (c0 INT ); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0, c1 UNINDEXED, order=DESC, matchinfo=fts3); -- 1ms;
INSERT OR REPLACE INTO t0(c0) VALUES (NULL); -- 0ms;
VACUUM; -- 0ms;
INSERT OR IGNORE INTO vt1(c0, c1) VALUES (NULL, 0.9360632590513193); -- 1ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (x''); -- 0ms;
ANALYZE; -- 0ms;
END; -- 0ms;
UPDATE t0 SET (c0, c0)=(x'', x''); -- 1ms;
INSERT OR IGNORE INTO vt1(c1) VALUES (x'c309'); -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('<Y>㵸RC敼'); -- 3ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i90 ON t0((CAST(c0 AS BLOB) IN ()) COLLATE NOCASE ASC) WHERE '901922168'; -- 0ms;
CREATE UNIQUE INDEX i53 ON t0((NOT (((c0) NOT NULL))) COLLATE RTRIM) WHERE (NOT ((- (c0)))); -- 0ms;
CREATE UNIQUE INDEX i26 ON t0(NULL) WHERE x''; -- 0ms;
UPDATE OR ABORT vt1 SET c1=x'e948' WHERE (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN 0.9360632590513193 THEN vt1.c1 ELSE vt1.c0 END IN ()); -- 0ms;
DROP TABLE IF EXISTS vt1; -- 0ms;
UPDATE OR IGNORE t0 SET c0='', c0=0.1439128740073462; -- 0ms;
ANALYZE t0; -- 0ms;
REINDEX; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (0.44390407243538843); -- 0ms;
UPDATE OR FAIL t0 SET (c0, c0)=(901922168, 0x5c83ddf0); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'5e35', c0='㵸' WHERE CASE (((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0)))  WHEN CAST(t0.c0 AS BLOB) THEN (((t0.c0))>(('901922168'))) END; -- 0ms;
END TRANSACTION; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
UPDATE t0 SET c0='' WHERE t0.c0; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=(NULL, NULL) WHERE t0.c0; -- 0ms;
UPDATE t0 SET c0=0x5a89b456 WHERE t0.c0; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
REINDEX NOCASE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('ZN)\rD,ko'), (x'65e7'), (x'54f63d36'), (0.9154370635251637), ('1 Awdvb6'); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES ('1712760160'), ('A!9 ]'), (0.6044445171449012); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0x5c83ddf0, c0='쬯GMjZzaA' WHERE ((IFNULL(t0.c0, t0.c0)) NOT BETWEEN ('-1344051844') AND (((t0.c0)<<(t0.c0)))); -- 0ms;
CREATE UNIQUE INDEX i99 ON t0((((c0, c0, c0)) NOT BETWEEN ((c0, ((c0) NOT NULL), ((c0) ISNULL))) AND (((c0 IN (c0)), ((c0) BETWEEN (c0) AND (NULL)), (((c0, c0, c0)) NOT BETWEEN ((c0, c0, c0)) AND ((c0, c0, c0)))))) COLLATE BINARY) WHERE 0.606912403931015; -- 1ms;
CREATE INDEX i36 ON t0((+ (((c0)<=(c0))))) WHERE CAST(((x'') NOT BETWEEN (c0) AND (c0)) AS REAL); -- 0ms;
CREATE INDEX IF NOT EXISTS i11 ON t0(TRIM(DISTINCT ((c0) IS TRUE), ((c0) ISNULL)) COLLATE NOCASE DESC); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR ABORT t0 SET (c0)=('901922168'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'8e22'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.9360632590513193); -- 1ms;
UPDATE OR IGNORE t0 SET (c0)=('0.6044445171449012') WHERE CAST((((((((('')OR(NULL)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) AS REAL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE TEMP TABLE t1 (c0 TEXT ); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (829371688), ('0.0'), (0.5893687381775085); -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=x''; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(''); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=(0.4838743971092848, '1552145904'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=(1518974038) WHERE (((((t1.c0 IN (t1.c0, t1.c0)))AND((((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0, '901922168', x'dec9')) AND ((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0))))))OR((('f盇4f') NOT BETWEEN (t1.c0) AND (t1.c0)))); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT t0.c0 FROM t1, t0;
SELECT t0.c0 FROM t1, t0 WHERE ((((t1.c0)) BETWEEN ((t0.c0)) AND ((t1.c0))) COLLATE RTRIM) UNION ALL SELECT ALL t0.c0 FROM t1, t0 WHERE ((NOT ((((t1.c0)) BETWEEN ((t0.c0)) AND ((t1.c0))) COLLATE RTRIM))) UNION ALL SELECT ALL t0.c0 FROM t1, t0 WHERE ((((((t1.c0)) BETWEEN ((t0.c0)) AND ((t1.c0))) COLLATE RTRIM) ISNULL));
SELECT t0.c0 FROM t1, t0;
SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0;
SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0 WHERE (((((t0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) IS TRUE)) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) IS TRUE)))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0 WHERE (((((((t0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0;
SELECT t0.c0, t1.c0 FROM t0 NATURAL JOIN t1 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0 NATURAL JOIN t1 WHERE (CASE WHEN ((t1.c0) NOT NULL) THEN (((NULL, t0.c0, t1.c0))=((t1.c0, t1.c0, ''))) END) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t0 NATURAL JOIN t1 WHERE ((NOT (CASE WHEN ((t1.c0) NOT NULL) THEN (((NULL, t0.c0, t1.c0))==((t1.c0, t1.c0, ''))) END))) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t0 NATURAL JOIN t1 WHERE (((CASE WHEN ((t1.c0) NOT NULL) THEN (((NULL, t0.c0, t1.c0))=((t1.c0, t1.c0, ''))) END) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0 NATURAL JOIN t1 GROUP BY t0.c0, t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING SUM(t1.c0) COLLATE NOCASE UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (SUM(t1.c0) COLLATE NOCASE)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((SUM(t1.c0) COLLATE NOCASE) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING SUM(t1.c0) COLLATE NOCASE UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (SUM(t1.c0) COLLATE NOCASE)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((SUM(t1.c0) COLLATE NOCASE) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (CAST(NULL AS TEXT)) UNION ALL SELECT * FROM t0 WHERE ((NOT (CAST(NULL AS TEXT)))) UNION ALL SELECT ALL * FROM t0 WHERE (((CAST(NULL AS TEXT)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t1.c0 FROM t1, t0;
SELECT DISTINCT t1.c0 FROM t1, t0 WHERE (((((t1.c0 IN (t0.c0, t1.c0))))!=((t0.c0)))) UNION SELECT DISTINCT t1.c0 FROM t1, t0 WHERE ((NOT (((((t1.c0 IN (t0.c0, t1.c0))))<>((t0.c0)))))) UNION SELECT DISTINCT t1.c0 FROM t1, t0 WHERE (((((((t1.c0 IN (t0.c0, t1.c0))))!=((t0.c0)))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CASE WHEN t0.c0 THEN NULL ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CASE WHEN t0.c0 THEN NULL ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CASE WHEN t0.c0 THEN NULL ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING MIN(SUM(t0.c0)) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING (NOT (MIN(SUM(t0.c0)))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING ((MIN(SUM(t0.c0))) ISNULL);
SELECT ALL SUM(t0.c0) FROM t0;
SELECT * FROM t1, t0;
SELECT ALL * FROM t1, t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)AND(((t1.c0) ISNULL))))AND(((((t0.c0)OR(0.1439128740073462)))AND(t1.c0))))) UNION ALL SELECT * FROM t1, t0 WHERE ((NOT (((((CASE t0.c0  WHEN t0.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)AND(((t1.c0) ISNULL))))AND(((((t0.c0)OR(0.1439128740073462)))AND(t1.c0))))))) UNION ALL SELECT ALL * FROM t1, t0 WHERE (((((((CASE t0.c0  WHEN t0.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)AND(((t1.c0) ISNULL))))AND(((((t0.c0)OR(0.1439128740073462)))AND(t1.c0))))) ISNULL));
SELECT * FROM t1, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((+ (t0.c0))) NOT BETWEEN ((+ (t0.c0))) AND ((+ (t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((+ (t0.c0))) NOT BETWEEN ((+ (t0.c0))) AND ((+ (t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((+ (t0.c0))) NOT BETWEEN ((+ (t0.c0))) AND ((+ (t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 WHERE ((((t1.c0) NOT NULL) IN ())) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, t1 WHERE ((NOT ((((t1.c0) NOT NULL) IN ())))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, t1 WHERE ((((((t1.c0) NOT NULL) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING AVG(NULL) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING (NOT (AVG(NULL))) UNION ALL SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING ((AVG(NULL)) ISNULL);
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING AVG(NULL) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING (NOT (AVG(NULL))) UNION ALL SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING ((AVG(NULL)) ISNULL);
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT ALL * FROM t1;
SELECT * FROM t1 WHERE (((((((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR((NULL IN ()))))OR(CAST(t1.c0 AS NUMERIC)))) UNION ALL SELECT * FROM t1 WHERE ((NOT (((((((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR((NULL IN ()))))OR(CAST(t1.c0 AS NUMERIC)))))) UNION ALL SELECT ALL * FROM t1 WHERE (((((((((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR((NULL IN ()))))OR(CAST(t1.c0 AS NUMERIC)))) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT t1.c0 FROM t1 NATURAL JOIN t0;
SELECT DISTINCT t1.c0 FROM t1 NATURAL JOIN t0 WHERE ((((t1.c0))<=((t0.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT t1.c0 FROM t1 NATURAL JOIN t0 WHERE ((NOT ((((t1.c0))<=((t0.c0 COLLATE RTRIM)))))) UNION SELECT DISTINCT t1.c0 FROM t1 NATURAL JOIN t0 WHERE ((((((t1.c0))<=((t0.c0 COLLATE RTRIM)))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1 NATURAL JOIN t0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ((((t1.c0) IS TRUE) IN ((t1.c0 IN ()), (t1.c0 IN ())))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT ((((t1.c0) IS TRUE) IN ((t1.c0 IN ()), (t1.c0 IN ())))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((((((t1.c0) IS TRUE) IN ((t1.c0 IN ()), (t1.c0 IN ())))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING ((NULL)LIKE(CAST(t0.c0 AS TEXT))) UNION ALL SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING (NOT (((NULL)LIKE(CAST(t0.c0 AS TEXT))))) UNION ALL SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING ((((NULL)LIKE(CAST(t0.c0 AS TEXT)))) ISNULL);
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING ((NULL)LIKE(CAST(t0.c0 AS TEXT))) UNION ALL SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING (NOT (((NULL)LIKE(CAST(t0.c0 AS TEXT))))) UNION ALL SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING ((((NULL)LIKE(CAST(t0.c0 AS TEXT)))) ISNULL);
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT * FROM t1 NATURAL JOIN t0;
SELECT ALL * FROM t1 NATURAL JOIN t0 WHERE (t0.c0) UNION ALL SELECT ALL * FROM t1 NATURAL JOIN t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL * FROM t1 NATURAL JOIN t0 WHERE (((t0.c0) ISNULL));
SELECT * FROM t1 NATURAL JOIN t0;
SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0;
SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0 WHERE ((((t1.c0) NOT NULL) IN (CAST(t0.c0 AS REAL), (t1.c0 IN ())))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0 WHERE ((NOT ((((t1.c0) NOT NULL) IN (CAST(t0.c0 AS REAL), (t1.c0 IN ())))))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0 WHERE ((((((t1.c0) NOT NULL) IN (CAST(t0.c0 AS REAL), (t1.c0 IN ())))) ISNULL));
SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0;
SELECT ALL t0.c0 FROM t0, t1 NOT INDEXED GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t1 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN ('') AND (((t0.c0)<=(t1.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, t1 WHERE ((NOT (((CASE t0.c0  WHEN t0.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN ('') AND (((t0.c0)<=(t1.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, t1 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN ('') AND (((t0.c0)<=(t1.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t1 NOT INDEXED GROUP BY t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING AVG((((MIN(GROUP_CONCAT(SUM(MIN(GROUP_CONCAT(t0.c0))))), COUNT(*), COUNT(COUNT(8.29371688E8))))<>((t1.c0, TOTAL(t1.c0), t0.c0)))) UNION ALL SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING (NOT (AVG((((MIN(GROUP_CONCAT(SUM(MIN(GROUP_CONCAT(t0.c0))))), COUNT(*), COUNT(COUNT(8.29371688E8))))<>((t1.c0, TOTAL(t1.c0), t0.c0)))))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING ((AVG((((MIN(GROUP_CONCAT(SUM(MIN(GROUP_CONCAT(t0.c0))))), COUNT(*), COUNT(COUNT(8.29371688E8))))<>((t1.c0, TOTAL(t1.c0), t0.c0))))) ISNULL);
SELECT MAX(((t1.c0)GLOB(t1.c0)) COLLATE BINARY) FROM t1, t0;
SELECT * FROM t1;
SELECT * FROM t1 WHERE ((('1985874089')%(((t1.c0)/(t1.c0))))) UNION ALL SELECT * FROM t1 WHERE ((NOT ((('1985874089')%(((t1.c0)/(t1.c0))))))) UNION ALL SELECT ALL * FROM t1 WHERE ((((('1985874089')%(((t1.c0)/(t1.c0))))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT * FROM t0 NATURAL JOIN t1;
SELECT DISTINCT * FROM t0 NATURAL JOIN t1 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN t1 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN t1 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0 NATURAL JOIN t1;
SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t1, t0 WHERE (((((((t1.c0)OR(NULL)))OR(t1.c0)))LIKE(((t1.c0) IS TRUE)))) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t1, t0 WHERE ((NOT (((((((t1.c0)OR(NULL)))OR(t1.c0)))LIKE(((t1.c0) IS TRUE)))))) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t1 NOT INDEXED, t0 WHERE (((((((((t1.c0)OR(NULL)))OR(t1.c0)))LIKE(((t1.c0) IS TRUE)))) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0 FROM t0 INNER JOIN t1 ON IFNULL(DISTINCT t0.c0, t1.c0) COLLATE BINARY GROUP BY t0.c0;
SELECT t0.c0 FROM t0 INNER JOIN t1 ON IFNULL(DISTINCT t0.c0, t1.c0) COLLATE BINARY GROUP BY t0.c0 HAVING ((((GROUP_CONCAT(t0.c0))||(AVG(t1.c0))))>>(GROUP_CONCAT(x''))) UNION ALL SELECT t0.c0 FROM t0 INNER JOIN t1 ON IFNULL(DISTINCT t0.c0, t1.c0) COLLATE BINARY GROUP BY t0.c0 HAVING (NOT (((((GROUP_CONCAT(t0.c0))||(AVG(t1.c0))))>>(GROUP_CONCAT(x''))))) UNION ALL SELECT ALL t0.c0 FROM t0 INNER JOIN t1 ON IFNULL(DISTINCT t0.c0, t1.c0) COLLATE BINARY GROUP BY t0.c0 HAVING ((((((GROUP_CONCAT(t0.c0))||(AVG(t1.c0))))>>(GROUP_CONCAT(x'')))) ISNULL);
SELECT ALL t0.c0 FROM t0 INNER JOIN t1 ON IFNULL(DISTINCT t0.c0, t1.c0) COLLATE BINARY GROUP BY t0.c0;
SELECT t0.c0 FROM t0 INNER JOIN t1 ON IFNULL(DISTINCT t0.c0, t1.c0) COLLATE BINARY GROUP BY t0.c0 HAVING ((((GROUP_CONCAT(t0.c0))||(AVG(t1.c0))))>>(GROUP_CONCAT(x''))) UNION ALL SELECT t0.c0 FROM t0 INNER JOIN t1 ON IFNULL(DISTINCT t0.c0, t1.c0) COLLATE BINARY GROUP BY t0.c0 HAVING (NOT (((((GROUP_CONCAT(t0.c0))||(AVG(t1.c0))))>>(GROUP_CONCAT(x''))))) UNION ALL SELECT ALL t0.c0 FROM t0 INNER JOIN t1 ON IFNULL(DISTINCT t0.c0, t1.c0) COLLATE BINARY GROUP BY t0.c0 HAVING ((((((GROUP_CONCAT(t0.c0))||(AVG(t1.c0))))>>(GROUP_CONCAT(x'')))) ISNULL);
SELECT ALL t0.c0 FROM t0 INNER JOIN t1 ON IFNULL(DISTINCT t0.c0, t1.c0) COLLATE BINARY GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((((CASE WHEN t0.c0 THEN t0.c0 END))>=((((('0.606912403931015', t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, '')) AND ((t0.c0, t0.c0, t0.c0))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((CASE WHEN t0.c0 THEN t0.c0 END))>=((((('0.606912403931015', t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, '')) AND ((t0.c0, t0.c0, t0.c0))))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((((CASE WHEN t0.c0 THEN t0.c0 END))>=((((('0.606912403931015', t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, '')) AND ((t0.c0, t0.c0, t0.c0))))))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END IN ())) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END IN ())))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END IN ())) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((((t1.c0)IS(t1.c0)))-(t1.c0 COLLATE BINARY))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((((t1.c0)IS(t1.c0)))-(t1.c0 COLLATE BINARY))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((((t1.c0)IS(t1.c0)))-(t1.c0 COLLATE BINARY))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING SUM(CASE t1.c0  WHEN MAX(TOTAL(MAX(t1.c0))) THEN t1.c0 ELSE t1.c0 END) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (SUM(CASE t1.c0  WHEN MAX(TOTAL(MAX(t1.c0))) THEN t1.c0 ELSE t1.c0 END))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((SUM(CASE t1.c0  WHEN MAX(TOTAL(MAX(t1.c0))) THEN t1.c0 ELSE t1.c0 END)) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (((t0.c0 COLLATE BINARY) NOT BETWEEN (((t0.c0) ISNULL)) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((t0.c0 COLLATE BINARY) NOT BETWEEN (((t0.c0) ISNULL)) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) UNION ALL SELECT * FROM t0 WHERE (((((t0.c0 COLLATE BINARY) NOT BETWEEN (((t0.c0) ISNULL)) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE (((t0.c0 COLLATE NOCASE) NOT BETWEEN ((- (t0.c0))) AND ((+ (t1.c0))))) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT (((t0.c0 COLLATE NOCASE) NOT BETWEEN ((- (t0.c0))) AND ((+ (t1.c0))))))) UNION SELECT DISTINCT * FROM t1, t0 WHERE (((((t0.c0 COLLATE NOCASE) NOT BETWEEN ((- (t0.c0))) AND ((+ (t1.c0))))) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0)AND(t0.c0)))AND(NULL)) IN ())) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0)AND(t0.c0)))AND(NULL)) IN ())))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((((t0.c0)AND(t0.c0)))AND(NULL)) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(CASE WHEN t0.c0 THEN t0.c0 END) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(CASE WHEN t0.c0 THEN t0.c0 END))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(CASE WHEN t0.c0 THEN t0.c0 END)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(CASE WHEN t0.c0 THEN t0.c0 END) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(CASE WHEN t0.c0 THEN t0.c0 END))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(CASE WHEN t0.c0 THEN t0.c0 END)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (CASE WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) END) UNION ALL SELECT * FROM t0 WHERE ((NOT (CASE WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) END))) UNION ALL SELECT ALL * FROM t0 WHERE (((CASE WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) END) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE ('-266307285') UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT ('-266307285'))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((('-266307285') ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ((-1837090709 IN ())) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT ((-1837090709 IN ())))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((((-1837090709 IN ())) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING '0.1439128740073462' UNION ALL SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (NOT ('0.1439128740073462')) UNION ALL SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (('0.1439128740073462') ISNULL);
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING '0.1439128740073462' UNION ALL SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (NOT ('0.1439128740073462')) UNION ALL SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (('0.1439128740073462') ISNULL);
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT MAX(((t1.c0)>>(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) FROM t1;
SELECT ALL t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE ((((((t1.c0 IN ()))AND(((t1.c0)GLOB(t1.c0)))))OR(((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c0))))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((((((t1.c0 IN ()))AND(((t1.c0)GLOB(t1.c0)))))OR(((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c0))))))) UNION ALL SELECT t1.c0 FROM t1 WHERE ((((((((t1.c0 IN ()))AND(((t1.c0)GLOB(t1.c0)))))OR(((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c0))))) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (TRIM(((t1.c0)==(t1.c0)))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (TRIM(((t1.c0)=(t1.c0)))))) UNION SELECT DISTINCT * FROM t1 WHERE (((TRIM(((t1.c0)=(t1.c0)))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (901922168) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (901922168))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((901922168) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((SUM(t0.c0)))>=((CAST(t0.c0 AS REAL)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((SUM(t0.c0)))>=((CAST(t0.c0 AS REAL)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((SUM(t0.c0)))>=((CAST(t0.c0 AS REAL))))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((SUM(t0.c0)))>=((CAST(t0.c0 AS REAL)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((SUM(t0.c0)))>=((CAST(t0.c0 AS REAL)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((SUM(t0.c0)))>=((CAST(t0.c0 AS REAL))))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (((((t1.c0)IS(t1.c0))) NOT BETWEEN (((((t1.c0)AND(t1.c0)))OR(t1.c0))) AND (NULL COLLATE RTRIM))) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT (((((t1.c0)IS(t1.c0))) NOT BETWEEN (((((t1.c0)AND(t1.c0)))OR(t1.c0))) AND (NULL COLLATE RTRIM))))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((((((t1.c0)IS(t1.c0))) NOT BETWEEN (((((t1.c0)AND(t1.c0)))OR(t1.c0))) AND (NULL COLLATE RTRIM))) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((CAST(t1.c0 AS INTEGER))-((NOT (t1.c0))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((CAST(t1.c0 AS INTEGER))-((NOT (t1.c0))))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((CAST(t1.c0 AS INTEGER))-((NOT (t1.c0))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE ((CAST(t1.c0 AS REAL) IN (t1.c0 COLLATE RTRIM))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT ((CAST(t1.c0 AS REAL) IN (t1.c0 COLLATE RTRIM))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((((CAST(t1.c0 AS REAL) IN (t1.c0 COLLATE RTRIM))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING ((AVG(SUM(MAX(COUNT(*)))))>=(MIN(t0.c0))) UNION ALL SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING (NOT (((AVG(SUM(MAX(COUNT(*)))))>=(MIN(t0.c0))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING ((((AVG(SUM(MAX(COUNT(*)))))>=(MIN(t0.c0)))) ISNULL);
SELECT ALL SUM(CAST(t1.c0 COLLATE NOCASE AS INTEGER)) FROM t1;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (json_array(t0.c0, ((t0.c0)IS NOT(t0.c0)), ((t0.c0) BETWEEN ('-1344051844') AND (t0.c0)), 0.5471774432537203, t0.c0, TYPEOF(t0.c0))) UNION ALL SELECT * FROM t0 WHERE ((NOT (json_array(t0.c0, ((t0.c0)IS NOT(t0.c0)), ((t0.c0) BETWEEN ('-1344051844') AND (t0.c0)), 0.5471774432537203, t0.c0, TYPEOF(t0.c0))))) UNION ALL SELECT * FROM t0 WHERE (((json_array(t0.c0, ((t0.c0)IS NOT(t0.c0)), ((t0.c0) BETWEEN ('-1344051844') AND (t0.c0)), 0.5471774432537203, t0.c0, TYPEOF(t0.c0))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t1.c0 FROM t0, t1;
SELECT DISTINCT t1.c0 FROM t0, t1 WHERE (CAST(((t1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS TEXT)) UNION SELECT DISTINCT t1.c0 FROM t0, t1 WHERE ((NOT (CAST(((t1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS TEXT)))) UNION SELECT DISTINCT t1.c0 FROM t0, t1 WHERE (((CAST(((t1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT t1.c0 FROM t0, t1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ((((((t1.c0)==(t1.c0)), ((t1.c0) ISNULL), ((t1.c0)<=(t1.c0))))=(((- (t1.c0)), ((t1.c0)/('')), NULL)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((((((t1.c0)==(t1.c0)), ((t1.c0) ISNULL), ((t1.c0)<=(t1.c0))))==(((- (t1.c0)), ((t1.c0)/('')), NULL)))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((((((((t1.c0)==(t1.c0)), ((t1.c0) ISNULL), ((t1.c0)<=(t1.c0))))==(((- (t1.c0)), ((t1.c0)/('')), NULL)))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING TOTAL(COUNT(t1.c0)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (TOTAL(COUNT(t1.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((TOTAL(COUNT(t1.c0))) ISNULL);
SELECT ALL * FROM t0 RIGHT OUTER JOIN t1 ON NULL;
SELECT * FROM t0 RIGHT OUTER JOIN t1 ON NULL WHERE ((- (CAST(t0.c0 AS TEXT)))) UNION ALL SELECT ALL * FROM t0 RIGHT OUTER JOIN t1 ON NULL WHERE ((NOT ((- (CAST(t0.c0 AS TEXT)))))) UNION ALL SELECT ALL * FROM t0 RIGHT OUTER JOIN t1 ON NULL WHERE ((((- (CAST(t0.c0 AS TEXT)))) ISNULL));
SELECT ALL * FROM t0 RIGHT OUTER JOIN t1 ON NULL;
SELECT DISTINCT t0.c0 FROM t0 NOT INDEXED;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (((t0.c0)||(t0.c0))) AND ((t0.c0 IN (t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (((t0.c0)||(t0.c0))) AND ((t0.c0 IN (t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (((t0.c0)||(t0.c0))) AND ((t0.c0 IN (t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0 NOT INDEXED;
SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t1, t0 WHERE (CAST(LIKELIHOOD(DISTINCT t1.c0, 0.603513334130484) AS NUMERIC)) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t1, t0 WHERE ((NOT (CAST(LIKELIHOOD(DISTINCT t1.c0, 0.603513334130484) AS NUMERIC)))) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t1, t0 WHERE (((CAST(LIKELIHOOD(DISTINCT t1.c0, 0.603513334130484) AS NUMERIC)) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(AVG(TOTAL(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(AVG(TOTAL(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(AVG(TOTAL(t0.c0)))) ISNULL);
SELECT ALL t1.c0 FROM t1, t0;
SELECT t1.c0 FROM t1, t0 WHERE ((~ (x'abb5'))) UNION ALL SELECT t1.c0 FROM t1, t0 WHERE ((NOT ((~ (x'abb5'))))) UNION ALL SELECT ALL t1.c0 FROM t1, t0 WHERE ((((~ (x'abb5'))) ISNULL));
SELECT ALL t1.c0 FROM t1, t0;
SELECT DISTINCT * FROM t0, t1;
SELECT DISTINCT * FROM t0, t1 WHERE (LOWER(MIN(t1.c0, t1.c0, t1.c0, t0.c0))) UNION SELECT DISTINCT * FROM t0, t1 WHERE ((NOT (LOWER(MIN(t1.c0, t1.c0, t1.c0, t0.c0))))) UNION SELECT DISTINCT * FROM t0, t1 WHERE (((LOWER(MIN(t1.c0, t1.c0, t1.c0, t0.c0))) ISNULL));
SELECT DISTINCT * FROM t0, t1;
SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1 WHERE ((+ (UPPER(x'')))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t0, t1 WHERE ((NOT ((+ (UPPER(x'')))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t0, t1 WHERE ((((+ (UPPER(x'')))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(NULL) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(NULL))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(NULL)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(NULL) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(NULL))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(NULL)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM t1, t0;
SELECT * FROM t1, t0 WHERE ((((((t0.c0, t1.c0, t0.c0)) NOT BETWEEN ((t1.c0, x'', t0.c0)) AND (('TRUE', t1.c0, t0.c0))))GLOB(x'e5e3'))) UNION ALL SELECT ALL * FROM t1, t0 WHERE ((NOT ((((((t0.c0, t1.c0, t0.c0)) NOT BETWEEN ((t1.c0, x'', t0.c0)) AND (('TRUE', t1.c0, t0.c0))))GLOB(x'e5e3'))))) UNION ALL SELECT * FROM t1, t0 WHERE ((((((((t0.c0, t1.c0, t0.c0)) NOT BETWEEN ((t1.c0, x'', t0.c0)) AND (('TRUE', t1.c0, t0.c0))))GLOB(x'e5e3'))) ISNULL));
SELECT ALL * FROM t1, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t0 WHERE ((((+ (t1.c0)))IS NOT((((t0.c0, t0.c0, 'FALSE')) NOT BETWEEN ((t0.c0, t1.c0, t0.c0)) AND ((t0.c0, t1.c0, t0.c0)))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1, t0 WHERE ((NOT ((((+ (t1.c0)))IS NOT((((t0.c0, t0.c0, 'FALSE')) NOT BETWEEN ((t0.c0, t1.c0, t0.c0)) AND ((t0.c0, t1.c0, t0.c0)))))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1, t0 WHERE ((((((+ (t1.c0)))IS NOT((((t0.c0, t0.c0, 'FALSE')) NOT BETWEEN ((t0.c0, t1.c0, t0.c0)) AND ((t0.c0, t1.c0, t0.c0)))))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT((- (MAX(t1.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT((- (MAX(t1.c0)))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT((- (MAX(t1.c0))))) ISNULL);
SELECT ALL t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE (((((((t1.c0)OR(t1.c0)))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR((((t1.c0))>=((t1.c0)))))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((((((t1.c0)OR(t1.c0)))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR((((t1.c0))>=((t1.c0)))))))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((((((((t1.c0)OR(t1.c0)))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR((((t1.c0))>=((t1.c0)))))) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((json_remove(t0.c0, t0.c0)) IS TRUE)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((json_remove(t0.c0, t0.c0)) IS TRUE)))) UNION SELECT DISTINCT * FROM t0 WHERE (((((json_remove(t0.c0, t0.c0)) IS TRUE)) ISNULL));
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((((t1.c0)|(t1.c0)))>(NULL))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((((t1.c0)|(t1.c0)))>(NULL))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((((t1.c0)|(t1.c0)))>(NULL))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(t0.c0)) BETWEEN (CAST(TOTAL(MIN(t0.c0)) AS REAL)) AND (((((GROUP_CONCAT(t0.c0))OR(SUM(AVG(COUNT(MIN(GROUP_CONCAT(MAX(t0.c0)))))))))AND(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((AVG(t0.c0)) BETWEEN (CAST(TOTAL(MIN(t0.c0)) AS REAL)) AND (((((GROUP_CONCAT(t0.c0))OR(SUM(AVG(COUNT(MIN(GROUP_CONCAT(MAX(t0.c0)))))))))AND(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((AVG(t0.c0)) BETWEEN (CAST(TOTAL(MIN(t0.c0)) AS REAL)) AND (((((GROUP_CONCAT(t0.c0))OR(SUM(AVG(COUNT(MIN(GROUP_CONCAT(MAX(t0.c0)))))))))AND(t0.c0))))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((NOT ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((NOT ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c0, t1.c0 FROM t0, t1;
SELECT DISTINCT t0.c0, t1.c0 FROM t0, t1 WHERE ((((((t1.c0) BETWEEN (t1.c0) AND (t0.c0)), CAST(t0.c0 AS INTEGER), CAST(t0.c0 AS INTEGER)))==((((t0.c0) ISNULL), t0.c0 COLLATE NOCASE, ((((t1.c0)OR(x'facc4f4fef1a')))OR(t1.c0)))))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t0, t1 WHERE ((NOT ((((((t1.c0) BETWEEN (t1.c0) AND (t0.c0)), CAST(t0.c0 AS INTEGER), CAST(t0.c0 AS INTEGER)))=((((t0.c0) ISNULL), t0.c0 COLLATE NOCASE, ((((t1.c0)OR(x'facc4f4fef1a')))OR(t1.c0)))))))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t0, t1 WHERE ((((((((t1.c0) BETWEEN (t1.c0) AND (t0.c0)), CAST(t0.c0 AS INTEGER), CAST(t0.c0 AS INTEGER)))=((((t0.c0) ISNULL), t0.c0 COLLATE NOCASE, ((((t1.c0)OR(x'facc4f4fef1a')))OR(t1.c0)))))) ISNULL));
SELECT DISTINCT t0.c0, t1.c0 FROM t0, t1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END)&(NULL))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((CASE WHEN t0.c0 THEN t0.c0 END)&(NULL))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 END)&(NULL))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((AVG(t1.c0)) NOTNULL) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((AVG(t1.c0)) NOTNULL))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((AVG(t1.c0)) NOTNULL)) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((AVG(t1.c0)) NOTNULL) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((AVG(t1.c0)) NOTNULL))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((AVG(t1.c0)) NOTNULL)) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0) IS TRUE) IN ())) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0) IS TRUE) IN ())))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0) IS TRUE) IN ())) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0;
SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0 WHERE (((NOT (t0.c0)) IN (LIKELIHOOD(t1.c0, 0.09065049396405012), CASE WHEN t0.c0 THEN t0.c0 END))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0 WHERE ((NOT (((NOT (t0.c0)) IN (LIKELIHOOD(t1.c0, 0.09065049396405012), CASE WHEN t0.c0 THEN t0.c0 END))))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0 WHERE (((((NOT (t0.c0)) IN (LIKELIHOOD(t1.c0, 0.09065049396405012), CASE WHEN t0.c0 THEN t0.c0 END))) ISNULL));
SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ((((t1.c0)!=(t1.c0)) IN ())) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT ((((t1.c0)<>(t1.c0)) IN ())))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((((((t1.c0)<>(t1.c0)) IN ())) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((COUNT(SUM(t1.c0)), ((t1.c0) NOT NULL), COUNT(SUM(MAX(t1.c0)))))==((((((TOTAL(t1.c0))OR(t1.c0)))OR(AVG(t1.c0))), ((MAX(t1.c0))-(GROUP_CONCAT(t1.c0))), (((t1.c0)) BETWEEN ((t1.c0)) AND ((TOTAL(TOTAL(MIN(AVG(AVG(COUNT(*)))))))))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((((COUNT(SUM(t1.c0)), ((t1.c0) NOT NULL), COUNT(SUM(MAX(t1.c0)))))==((((((TOTAL(t1.c0))OR(t1.c0)))OR(AVG(t1.c0))), ((MAX(t1.c0))-(GROUP_CONCAT(t1.c0))), (((t1.c0)) BETWEEN ((t1.c0)) AND ((TOTAL(TOTAL(MIN(AVG(AVG(COUNT(*)))))))))))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((((COUNT(SUM(t1.c0)), ((t1.c0) NOT NULL), COUNT(SUM(MAX(t1.c0)))))=((((((TOTAL(t1.c0))OR(t1.c0)))OR(AVG(t1.c0))), ((MAX(t1.c0))-(GROUP_CONCAT(t1.c0))), (((t1.c0)) BETWEEN ((t1.c0)) AND ((TOTAL(TOTAL(MIN(AVG(AVG(COUNT(*))))))))))))) ISNULL);
SELECT ALL * FROM t0, t1;
SELECT ALL * FROM t0, t1 WHERE (((((t1.c0) NOT BETWEEN (t0.c0) AND (NULL))) IS TRUE)) UNION ALL SELECT ALL * FROM t0, t1 WHERE ((NOT (((((t1.c0) NOT BETWEEN (t0.c0) AND (NULL))) IS TRUE)))) UNION ALL SELECT * FROM t0, t1 WHERE (((((((t1.c0) NOT BETWEEN (t0.c0) AND (NULL))) IS TRUE)) ISNULL));
SELECT ALL * FROM t0, t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) NOTNULL))>=(NULL))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((((t1.c0) NOTNULL))>=(NULL))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0) NOTNULL))>=(NULL))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (('-1519090770' IN ())) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (('-1519090770' IN ())))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((('-1519090770' IN ())) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0, t0.c0 FROM t1 NATURAL JOIN t0 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1 NATURAL JOIN t0 GROUP BY t1.c0, t0.c0 HAVING NULL UNION ALL SELECT t1.c0, t0.c0 FROM t1 NATURAL JOIN t0 GROUP BY t1.c0, t0.c0 HAVING (NOT (NULL)) UNION ALL SELECT t1.c0, t0.c0 FROM t1 NATURAL JOIN t0 GROUP BY t1.c0, t0.c0 HAVING ((NULL) ISNULL);
SELECT ALL t1.c0, t0.c0 FROM t1 NATURAL JOIN t0 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1 NATURAL JOIN t0 GROUP BY t1.c0, t0.c0 HAVING NULL UNION ALL SELECT t1.c0, t0.c0 FROM t1 NATURAL JOIN t0 GROUP BY t1.c0, t0.c0 HAVING (NOT (NULL)) UNION ALL SELECT t1.c0, t0.c0 FROM t1 NATURAL JOIN t0 GROUP BY t1.c0, t0.c0 HAVING ((NULL) ISNULL);
SELECT ALL t1.c0, t0.c0 FROM t1 NATURAL JOIN t0 GROUP BY t1.c0, t0.c0;
SELECT * FROM t1, t0;
SELECT ALL * FROM t1, t0 WHERE (t0.c0) UNION ALL SELECT * FROM t1, t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT * FROM t1, t0 WHERE (((t0.c0) ISNULL));
SELECT * FROM t1, t0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((((((t1.c0)AND(t1.c0)))AND(t1.c0))) IS FALSE)) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((((((t1.c0)AND(t1.c0)))AND(t1.c0))) IS FALSE)))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((((((t1.c0)AND(t1.c0)))AND(t1.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t1 WHERE (((((t1.c0)>=(t1.c0)))<(t0.c0 COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, t1 WHERE ((NOT (((((t1.c0)>=(t1.c0)))<(t0.c0 COLLATE RTRIM))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, t1 WHERE (((((((t1.c0)>=(t1.c0)))<(t0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(t0.c0) COLLATE BINARY UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(t0.c0) COLLATE BINARY)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(t0.c0) COLLATE BINARY) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(t0.c0) COLLATE BINARY UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(t0.c0) COLLATE BINARY)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(t0.c0) COLLATE BINARY) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM t0, t1;
SELECT * FROM t0, t1 WHERE (((CASE WHEN NULL THEN t0.c0 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t1.c0 END)<<(t1.c0))) UNION ALL SELECT * FROM t0, t1 WHERE ((NOT (((CASE WHEN NULL THEN t0.c0 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t1.c0 END)<<(t1.c0))))) UNION ALL SELECT ALL * FROM t0, t1 WHERE (((((CASE WHEN NULL THEN t0.c0 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t1.c0 END)<<(t1.c0))) ISNULL));
SELECT * FROM t0, t1;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE ((+ (((t1.c0) IS TRUE)))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT ((+ (((t1.c0) IS TRUE)))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((((+ (((t1.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (CASE (t1.c0 IN ())  WHEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) THEN IFNULL(DISTINCT t1.c0, t1.c0) ELSE ((t1.c0)GLOB(t1.c0)) END) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (CASE (t1.c0 IN ())  WHEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) THEN IFNULL(DISTINCT t1.c0, t1.c0) ELSE ((t1.c0)GLOB(t1.c0)) END))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((CASE (t1.c0 IN ())  WHEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) THEN IFNULL(DISTINCT t1.c0, t1.c0) ELSE ((t1.c0)GLOB(t1.c0)) END) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING 0.360917058650727 UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (0.360917058650727)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((0.360917058650727) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING 0.360917058650727 UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (0.360917058650727)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((0.360917058650727) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, t1.c0 FROM t0 NATURAL JOIN t1;
SELECT t0.c0, t1.c0 FROM t0 NATURAL JOIN t1 WHERE (t0.c0) UNION ALL SELECT t0.c0, t1.c0 FROM t0 NATURAL JOIN t1 WHERE ((NOT (t0.c0))) UNION ALL SELECT t0.c0, t1.c0 FROM t0 NATURAL JOIN t1 WHERE (((t0.c0) ISNULL));
SELECT t0.c0, t1.c0 FROM t0 NATURAL JOIN t1;
SELECT DISTINCT t1.c0, t0.c0 FROM t0, t1;
SELECT DISTINCT t1.c0, t0.c0 FROM t0, t1 WHERE ((((((t0.c0)!=(t1.c0))))>=(('8388066')))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t0, t1 WHERE ((NOT ((((((t0.c0)!=(t1.c0))))>=(('8388066')))))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t0, t1 WHERE ((((((((t0.c0)<>(t1.c0))))>=(('8388066')))) ISNULL));
SELECT DISTINCT t1.c0, t0.c0 FROM t0, t1;
SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t1, t0 WHERE (((((((((CAST(t0.c0 AS TEXT))OR((~ (t0.c0)))))AND(((t0.c0)*(t0.c0)))))OR(((t1.c0) NOT BETWEEN (t0.c0) AND (t1.c0)))))OR(load_extension(t1.c0)))) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t1, t0 WHERE ((NOT (((((((((CAST(t0.c0 AS TEXT))OR((~ (t0.c0)))))AND(((t0.c0)*(t0.c0)))))OR(((t1.c0) NOT BETWEEN (t0.c0) AND (t1.c0)))))OR(load_extension(t1.c0)))))) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t1, t0 WHERE (((((((((((CAST(t0.c0 AS TEXT))OR((~ (t0.c0)))))AND(((t0.c0)*(t0.c0)))))OR(((t1.c0) NOT BETWEEN (t0.c0) AND (t1.c0)))))OR(load_extension(t1.c0)))) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING GROUP_CONCAT(MIN(t1.c0) COLLATE BINARY) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (GROUP_CONCAT(MIN(t1.c0) COLLATE BINARY))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((GROUP_CONCAT(MIN(t1.c0) COLLATE BINARY)) ISNULL);
SELECT ALL * FROM t1, t0;
SELECT ALL * FROM t1, t0 WHERE ((((t1.c0) NOT BETWEEN (t1.c0) AND (t0.c0)) IN ())) UNION ALL SELECT ALL * FROM t1, t0 WHERE ((NOT ((((t1.c0) NOT BETWEEN (t1.c0) AND (t0.c0)) IN ())))) UNION ALL SELECT ALL * FROM t1, t0 WHERE ((((((t1.c0) NOT BETWEEN (t1.c0) AND (t0.c0)) IN ())) ISNULL));
SELECT ALL * FROM t1, t0;
SELECT DISTINCT t1.c0, t0.c0 FROM t1 CROSS JOIN t0 ON TRIM(DISTINCT 0.15466658282687828 COLLATE RTRIM, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)));
SELECT DISTINCT t1.c0, t0.c0 FROM t1 CROSS JOIN t0 ON TRIM(DISTINCT 0.15466658282687828 COLLATE RTRIM, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) WHERE ((((((t1.c0, t0.c0, t0.c0)) NOT BETWEEN ((NULL, t1.c0, t1.c0)) AND ((t0.c0, t0.c0, t1.c0))))%(t1.c0))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t1 CROSS JOIN t0 ON TRIM(DISTINCT 0.15466658282687828 COLLATE RTRIM, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) WHERE ((NOT ((((((t1.c0, t0.c0, t0.c0)) NOT BETWEEN ((NULL, t1.c0, t1.c0)) AND ((t0.c0, t0.c0, t1.c0))))%(t1.c0))))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t1 CROSS JOIN t0 ON TRIM(DISTINCT 0.15466658282687828 COLLATE RTRIM, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) WHERE ((((((((t1.c0, t0.c0, t0.c0)) NOT BETWEEN ((NULL, t1.c0, t1.c0)) AND ((t0.c0, t0.c0, t1.c0))))%(t1.c0))) ISNULL));
SELECT DISTINCT t1.c0, t0.c0 FROM t1 CROSS JOIN t0 ON TRIM(DISTINCT 0.15466658282687828 COLLATE RTRIM, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)));
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0 WHERE ((((NOT (t1.c0)))<>(((t0.c0)+(t0.c0))))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t1, t0 WHERE ((NOT ((((NOT (t1.c0)))<>(((t0.c0)+(t0.c0))))))) GROUP BY t1.c0, t0.c0 UNION SELECT ALL t1.c0, t0.c0 FROM t1, t0 WHERE ((((((NOT (t1.c0)))<>(((t0.c0)+(t0.c0))))) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING GROUP_CONCAT(t0.c0) COLLATE BINARY UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING (NOT (GROUP_CONCAT(t0.c0) COLLATE BINARY)) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING ((GROUP_CONCAT(t0.c0) COLLATE BINARY) ISNULL);
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING GROUP_CONCAT(t0.c0) COLLATE BINARY UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING (NOT (GROUP_CONCAT(t0.c0) COLLATE BINARY)) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING ((GROUP_CONCAT(t0.c0) COLLATE BINARY) ISNULL);
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT t0.c0 FROM t1, t0;
SELECT t0.c0 FROM t1, t0 NOT INDEXED WHERE (((((t1.c0)IS NOT(t1.c0)))*(t0.c0 COLLATE BINARY))) UNION ALL SELECT ALL t0.c0 FROM t1, t0 WHERE ((NOT (((((t1.c0)IS NOT(t1.c0)))*(t0.c0 COLLATE BINARY))))) UNION ALL SELECT t0.c0 FROM t1, t0 WHERE (((((((t1.c0)IS NOT(t1.c0)))*(t0.c0 COLLATE BINARY))) ISNULL));
SELECT t0.c0 FROM t1, t0;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN t1 ON UPPER(DISTINCT CASE x''  WHEN t0.c0 THEN t0.c0 END);
SELECT DISTINCT * FROM t0 FULL OUTER JOIN t1 ON UPPER(DISTINCT CASE x''  WHEN t0.c0 THEN t0.c0 END) WHERE (CAST(((((t1.c0)OR(t1.c0)))OR('843113730')) AS TEXT)) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN t1 ON UPPER(DISTINCT CASE x''  WHEN t0.c0 THEN t0.c0 END) WHERE ((NOT (CAST(((((t1.c0)OR(t1.c0)))OR('843113730')) AS TEXT)))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN t1 ON UPPER(DISTINCT CASE x''  WHEN t0.c0 THEN t0.c0 END) WHERE (((CAST(((((t1.c0)OR(t1.c0)))OR('843113730')) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN t1 ON UPPER(DISTINCT CASE x''  WHEN t0.c0 THEN t0.c0 END);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE ((~ (((t1.c0)<(t1.c0))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((~ (((t1.c0)<(t1.c0))))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((((~ (((t1.c0)<(t1.c0))))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING (((MIN(t1.c0)))=((MIN(MAX(t0.c0))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 NOT INDEXED GROUP BY t0.c0, t1.c0 HAVING (NOT ((((MIN(t1.c0)))=((MIN(MAX(t0.c0))))))) UNION ALL SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING (((((MIN(t1.c0)))=((MIN(MAX(t0.c0)))))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST(((((t0.c0)OR(t0.c0)))AND(t0.c0)) AS INTEGER)) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST(((((t0.c0)OR(t0.c0)))AND(t0.c0)) AS INTEGER)))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((CAST(((((t0.c0)OR(t0.c0)))AND(t0.c0)) AS INTEGER)) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t0 CROSS JOIN t1 ON ((((t1.c0)OR(((((t1.c0)OR(t0.c0)))OR(t0.c0)))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t1.c0)))AND(t0.c0))));
SELECT DISTINCT * FROM t0 CROSS JOIN t1 ON ((((t1.c0)OR(((((t1.c0)OR(t0.c0)))OR(t0.c0)))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t1.c0)))AND(t0.c0)))) WHERE ((LIKELIHOOD(t0.c0, 0.9555599700237092) IN ('613493940'))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN t1 ON ((((t1.c0)OR(((((t1.c0)OR(t0.c0)))OR(t0.c0)))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t1.c0)))AND(t0.c0)))) WHERE ((NOT ((LIKELIHOOD(t0.c0, 0.9555599700237092) IN ('613493940'))))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN t1 ON ((((t1.c0)OR(((((t1.c0)OR(t0.c0)))OR(t0.c0)))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t1.c0)))AND(t0.c0)))) WHERE ((((LIKELIHOOD(t0.c0, 0.9555599700237092) IN ('613493940'))) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN t1 ON ((((t1.c0)OR(((((t1.c0)OR(t0.c0)))OR(t0.c0)))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t1.c0)))AND(t0.c0))));
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 WHERE (CAST(((t1.c0)=(t1.c0)) AS REAL)) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t0, t1 WHERE ((NOT (CAST(((t1.c0)=(t1.c0)) AS REAL)))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t0, t1 WHERE (((CAST(((t1.c0)==(t1.c0)) AS REAL)) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0, t1.c0 FROM t0, t1 NOT INDEXED GROUP BY t0.c0, t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0, t1.c0 FROM t0, t1 NOT INDEXED GROUP BY t0.c0, t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT ALL * FROM t0, t1;
SELECT ALL * FROM t0, t1 WHERE (LIKELY(((t1.c0) NOT NULL))) UNION ALL SELECT * FROM t0, t1 WHERE ((NOT (LIKELY(((t1.c0) NOT NULL))))) UNION ALL SELECT * FROM t0, t1 WHERE (((LIKELY(((t1.c0) NOT NULL))) ISNULL));
SELECT ALL * FROM t0, t1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CAST(t0.c0 COLLATE NOCASE AS TEXT)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST(t0.c0 COLLATE NOCASE AS TEXT)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CAST(t0.c0 COLLATE NOCASE AS TEXT)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1 LEFT OUTER JOIN t0 ON CAST(((('K&')) BETWEEN ((t1.c0)) AND ((t0.c0))) AS REAL) GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1 LEFT OUTER JOIN t0 ON CAST(((('K&')) BETWEEN ((t1.c0)) AND ((t0.c0))) AS REAL) GROUP BY t1.c0, t0.c0 HAVING MIN(0Xffffffffce927fa1) UNION ALL SELECT t1.c0, t0.c0 FROM t1 LEFT OUTER JOIN t0 ON CAST(((('K&')) BETWEEN ((t1.c0)) AND ((t0.c0))) AS REAL) GROUP BY t1.c0, t0.c0 HAVING (NOT (MIN(0xffffffffce927fa1))) UNION ALL SELECT t1.c0, t0.c0 FROM t1 LEFT OUTER JOIN t0 ON CAST(((('K&')) BETWEEN ((t1.c0)) AND ((t0.c0))) AS REAL) GROUP BY t1.c0, t0.c0 HAVING ((MIN(0Xffffffffce927fa1)) ISNULL);
SELECT ALL t1.c0, t0.c0 FROM t1 LEFT OUTER JOIN t0 ON CAST(((('K&')) BETWEEN ((t1.c0)) AND ((t0.c0))) AS REAL) GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1 LEFT OUTER JOIN t0 ON CAST(((('K&')) BETWEEN ((t1.c0)) AND ((t0.c0))) AS REAL) GROUP BY t1.c0, t0.c0 HAVING MIN(0Xffffffffce927fa1) UNION ALL SELECT t1.c0, t0.c0 FROM t1 LEFT OUTER JOIN t0 ON CAST(((('K&')) BETWEEN ((t1.c0)) AND ((t0.c0))) AS REAL) GROUP BY t1.c0, t0.c0 HAVING (NOT (MIN(0xffffffffce927fa1))) UNION ALL SELECT t1.c0, t0.c0 FROM t1 LEFT OUTER JOIN t0 ON CAST(((('K&')) BETWEEN ((t1.c0)) AND ((t0.c0))) AS REAL) GROUP BY t1.c0, t0.c0 HAVING ((MIN(0Xffffffffce927fa1)) ISNULL);
SELECT ALL t1.c0, t0.c0 FROM t1 LEFT OUTER JOIN t0 ON CAST(((('K&')) BETWEEN ((t1.c0)) AND ((t0.c0))) AS REAL) GROUP BY t1.c0, t0.c0;
SELECT * FROM t0 CROSS JOIN t1 ON CASE t0.c0  WHEN t0.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM;
SELECT ALL * FROM t0 CROSS JOIN t1 ON CASE t0.c0  WHEN t0.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM WHERE (t0.c0) UNION ALL SELECT * FROM t0 CROSS JOIN t1 ON CASE t0.c0  WHEN t0.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM WHERE ((NOT (t0.c0))) UNION ALL SELECT * FROM t0 CROSS JOIN t1 ON CASE t0.c0  WHEN t0.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM WHERE (((t0.c0) ISNULL));
SELECT * FROM t0 CROSS JOIN t1 ON CASE t0.c0  WHEN t0.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM;
SELECT DISTINCT * FROM t1 FULL OUTER JOIN t0 ON t1.c0 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY;
SELECT DISTINCT * FROM t1 FULL OUTER JOIN t0 ON t1.c0 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY WHERE (COALESCE(DISTINCT rtreenode(t1.c0, t0.c0), ((t1.c0)=(t1.c0)))) UNION SELECT DISTINCT * FROM t1 FULL OUTER JOIN t0 ON t1.c0 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY WHERE ((NOT (COALESCE(DISTINCT rtreenode(t1.c0, t0.c0), ((t1.c0)=(t1.c0)))))) UNION SELECT DISTINCT * FROM t1 FULL OUTER JOIN t0 ON t1.c0 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY WHERE (((COALESCE(DISTINCT rtreenode(t1.c0, t0.c0), ((t1.c0)==(t1.c0)))) ISNULL));
SELECT DISTINCT * FROM t1 FULL OUTER JOIN t0 ON t1.c0 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY;
SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 NOT INDEXED WHERE (((0X3240e502 COLLATE RTRIM)/(t0.c0 COLLATE NOCASE))) GROUP BY t1.c0, t0.c0 UNION SELECT ALL t1.c0, t0.c0 FROM t0, t1 WHERE ((NOT (((0x3240e502 COLLATE RTRIM)/(t0.c0 COLLATE NOCASE))))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t0, t1 WHERE (((((0X3240e502 COLLATE RTRIM)/(t0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(COUNT(*))) IS FALSE) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((COUNT(COUNT(*))) IS FALSE))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((COUNT(COUNT(*))) IS FALSE)) ISNULL);
SELECT ALL * FROM t0, t1;
SELECT * FROM t0, t1 WHERE (((((((((((t0.c0)OR(t1.c0)))OR(t0.c0)))AND(t0.c0)))OR(t1.c0))) NOT BETWEEN ((t1.c0 IN ())) AND (CAST(t1.c0 AS REAL)))) UNION ALL SELECT * FROM t0, t1 WHERE ((NOT (((((((((((t0.c0)OR(t1.c0)))OR(t0.c0)))AND(t0.c0)))OR(t1.c0))) NOT BETWEEN ((t1.c0 IN ())) AND (CAST(t1.c0 AS REAL)))))) UNION ALL SELECT * FROM t0, t1 WHERE (((((((((((((t0.c0)OR(t1.c0)))OR(t0.c0)))AND(t0.c0)))OR(t1.c0))) NOT BETWEEN ((t1.c0 IN ())) AND (CAST(t1.c0 AS REAL)))) ISNULL));
SELECT ALL * FROM t0, t1;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE ((((CAST(t1.c0 AS NUMERIC)))!=((CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)))) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT ((((CAST(t1.c0 AS NUMERIC)))!=((CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)))))) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((((((CAST(t1.c0 AS NUMERIC)))<>((CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)))) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t0, t1 WHERE (TYPEOF(t0.c0)) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t0, t1 WHERE ((NOT (TYPEOF(t0.c0)))) GROUP BY t1.c0, t0.c0 UNION SELECT ALL t1.c0, t0.c0 FROM t0, t1 WHERE (((TYPEOF(t0.c0)) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0)GLOB(NULL)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((t0.c0)GLOB(NULL)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((t0.c0)GLOB(NULL))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0)GLOB(NULL)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((t0.c0)GLOB(NULL)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((t0.c0)GLOB(NULL))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (((((t1.c0) ISNULL)) BETWEEN (0.7773289096300867) AND (((t1.c0)-(t1.c0))))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((((t1.c0) ISNULL)) BETWEEN (0.7773289096300867) AND (((t1.c0)-(t1.c0))))))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((((((t1.c0) ISNULL)) BETWEEN (0.7773289096300867) AND (((t1.c0)-(t1.c0))))) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((+ ((- (t1.c0))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((+ ((- (t1.c0))))))) UNION SELECT DISTINCT * FROM t1 WHERE ((((+ ((- (t1.c0))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t0.c0, t1.c0 FROM t1 FULL OUTER JOIN t0 ON ((((t1.c0) IS TRUE))IS(CASE t0.c0  WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t0.c0 END)) GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t1 FULL OUTER JOIN t0 ON ((((t1.c0) IS TRUE))IS(CASE t0.c0  WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t0.c0 END)) WHERE (((t0.c0 COLLATE BINARY)>>(CASE t0.c0  WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 END))) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t1 FULL OUTER JOIN t0 ON ((((t1.c0) IS TRUE))IS(CASE t0.c0  WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t0.c0 END)) WHERE ((NOT (((t0.c0 COLLATE BINARY)>>(CASE t0.c0  WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 END))))) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t1 FULL OUTER JOIN t0 ON ((((t1.c0) IS TRUE))IS(CASE t0.c0  WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t0.c0 END)) WHERE (((((t0.c0 COLLATE BINARY)>>(CASE t0.c0  WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 END))) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t1 FULL OUTER JOIN t0 ON ((((t1.c0) IS TRUE))IS(CASE t0.c0  WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t0.c0 END)) GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CASE WHEN MIN(t0.c0) THEN SUM(t0.c0) END UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CASE WHEN MIN(t0.c0) THEN SUM(t0.c0) END)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CASE WHEN MIN(t0.c0) THEN SUM(t0.c0) END) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CASE WHEN MIN(t0.c0) THEN SUM(t0.c0) END UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CASE WHEN MIN(t0.c0) THEN SUM(t0.c0) END)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CASE WHEN MIN(t0.c0) THEN SUM(t0.c0) END) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM t1, t0;
SELECT ALL * FROM t1, t0 WHERE (t0.c0) UNION ALL SELECT * FROM t1, t0 NOT INDEXED WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL * FROM t1, t0 WHERE (((t0.c0) ISNULL));
SELECT ALL * FROM t1, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE (t0.c0 IN (t0.c0))  WHEN (t0.c0 IN ()) THEN ((t0.c0) ISNULL) END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE (t0.c0 IN (t0.c0))  WHEN (t0.c0 IN ()) THEN ((t0.c0) ISNULL) END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE (t0.c0 IN (t0.c0))  WHEN (t0.c0 IN ()) THEN ((t0.c0) ISNULL) END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t1, t0 WHERE (((((((x'daab') BETWEEN (t1.c0) AND (t1.c0)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND((- (t0.c0))))) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t1, t0 WHERE ((NOT (((((((x'daab') BETWEEN (t1.c0) AND (t1.c0)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND((- (t0.c0))))))) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t1, t0 WHERE (((((((((x'daab') BETWEEN (t1.c0) AND (t1.c0)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND((- (t0.c0))))) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING CASE (((MAX(t0.c0)))>((GROUP_CONCAT(GROUP_CONCAT(t0.c0)))))  WHEN SUM(x'') THEN SUM(MAX(COUNT(TOTAL(MAX(AVG(t0.c0)))))) ELSE MIN(TOTAL(MIN(t1.c0))) END UNION ALL SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING (NOT (CASE (((MAX(t0.c0)))>((GROUP_CONCAT(GROUP_CONCAT(t0.c0)))))  WHEN SUM(x'') THEN SUM(MAX(COUNT(TOTAL(MAX(AVG(t0.c0)))))) ELSE MIN(TOTAL(MIN(t1.c0))) END)) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING ((CASE (((MAX(t0.c0)))>((GROUP_CONCAT(GROUP_CONCAT(t0.c0)))))  WHEN SUM(x'') THEN SUM(MAX(COUNT(TOTAL(MAX(AVG(t0.c0)))))) ELSE MIN(TOTAL(MIN(t1.c0))) END) ISNULL);
SELECT * FROM t1 INDEXED BY i26, t0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((~ ((t1.c0 IN (NULL))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((~ ((t1.c0 IN (NULL))))))) UNION SELECT DISTINCT * FROM t1 WHERE ((((~ ((t1.c0 IN (NULL))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((CAST(t1.c0 AS TEXT))OR('H6' COLLATE NOCASE))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 NOT INDEXED WHERE ((NOT (((CAST(t1.c0 AS TEXT))OR('H6' COLLATE NOCASE))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((((CAST(t1.c0 AS TEXT))OR('H6' COLLATE NOCASE))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING ((AVG(COUNT(t0.c0)))||(CAST(t0.c0 AS BLOB))) UNION ALL SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (NOT (((AVG(COUNT(t0.c0)))||(CAST(t0.c0 AS BLOB))))) UNION ALL SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING ((((AVG(COUNT(t0.c0)))||(CAST(t0.c0 AS BLOB)))) ISNULL);
SELECT * FROM t1 LEFT OUTER JOIN t0 ON ((+ (t0.c0)) IN (CASE t1.c0  WHEN t0.c0 THEN t0.c0 ELSE t1.c0 END));
SELECT ALL * FROM t1 LEFT OUTER JOIN t0 ON ((+ (t0.c0)) IN (CASE t1.c0  WHEN t0.c0 THEN t0.c0 ELSE t1.c0 END)) WHERE (t0.c0) UNION ALL SELECT ALL * FROM t1 LEFT OUTER JOIN t0 ON ((+ (t0.c0)) IN (CASE t1.c0  WHEN t0.c0 THEN t0.c0 ELSE t1.c0 END)) WHERE ((NOT (t0.c0))) UNION ALL SELECT * FROM t1 LEFT OUTER JOIN t0 ON ((+ (t0.c0)) IN (CASE t1.c0  WHEN t0.c0 THEN t0.c0 ELSE t1.c0 END)) WHERE (((t0.c0) ISNULL));
SELECT * FROM t1 LEFT OUTER JOIN t0 ON ((+ (t0.c0)) IN (CASE t1.c0  WHEN t0.c0 THEN t0.c0 ELSE t1.c0 END));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST(t0.c0 COLLATE NOCASE AS TEXT)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(t0.c0 COLLATE NOCASE AS TEXT)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 COLLATE NOCASE AS TEXT)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (t1.c0) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (t1.c0))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((t1.c0) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(MAX(MAX(COUNT(*)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(MAX(MAX(COUNT(*)))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(MAX(MAX(COUNT(*))))) ISNULL);
SELECT SUM(((((t1.c0)>=(t1.c0))) BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) AND (t1.c0 COLLATE RTRIM))) FROM t1 ORDER BY (((('501399022')/(t1.c0)))%(((t1.c0)AND(t1.c0)))) ASC  NULLS LAST;
SELECT * FROM t1;
SELECT ALL * FROM t1 WHERE (((t1.c0 COLLATE NOCASE) BETWEEN (((t1.c0) IS FALSE)) AND (''))) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (((t1.c0 COLLATE NOCASE) BETWEEN (((t1.c0) IS FALSE)) AND (''))))) UNION ALL SELECT ALL * FROM t1 WHERE (((((t1.c0 COLLATE NOCASE) BETWEEN (((t1.c0) IS FALSE)) AND (''))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN t1 ON ((((t1.c0) ISNULL))<=('901922168' COLLATE BINARY));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN t1 ON ((((t1.c0) ISNULL))<=('901922168' COLLATE BINARY)) WHERE ('' COLLATE RTRIM) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN t1 ON ((((t1.c0) ISNULL))<=('901922168' COLLATE BINARY)) WHERE ((NOT ('' COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN t1 ON ((((t1.c0) ISNULL))<=('901922168' COLLATE BINARY)) WHERE ((('' COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN t1 ON ((((t1.c0) ISNULL))<=('901922168' COLLATE BINARY));
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t1, t0 WHERE (CAST((t0.c0 IN (t0.c0, t0.c0, t1.c0)) AS NUMERIC)) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t1, t0 WHERE ((NOT (CAST((t0.c0 IN (t0.c0, t0.c0, t1.c0)) AS NUMERIC)))) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t1, t0 WHERE (((CAST((t0.c0 IN (t0.c0, t0.c0, t1.c0)) AS NUMERIC)) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING COUNT(((t0.c0)<>(AVG(MAX(t0.c0))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING (NOT (COUNT(((t0.c0)!=(AVG(MAX(t0.c0))))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING ((COUNT(((t0.c0)<>(AVG(MAX(t0.c0)))))) ISNULL);
SELECT ALL t0.c0, t1.c0 FROM t1 NATURAL JOIN t0;
SELECT ALL t0.c0, t1.c0 FROM t1 NATURAL JOIN t0 WHERE ((t0.c0 COLLATE NOCASE IN (((t0.c0)&(t0.c0))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t1 NATURAL JOIN t0 WHERE ((NOT ((t0.c0 COLLATE NOCASE IN (((t0.c0)&(t0.c0))))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t1 NATURAL JOIN t0 WHERE ((((t0.c0 COLLATE NOCASE IN (((t0.c0)&(t0.c0))))) ISNULL));
SELECT ALL t0.c0, t1.c0 FROM t1 NATURAL JOIN t0;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE (t1.c0) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT * FROM t1, t0 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((((x'f90e')OR((('2081981610')+(t1.c0)))))OR(((t1.c0)>=(-2.66307285E8))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((((x'f90e')OR((('2081981610')+(t1.c0)))))OR(((t1.c0)>=(-2.66307285E8))))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((((((x'f90e')OR((('2081981610')+(t1.c0)))))OR(((t1.c0)>=(-2.66307285E8))))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(((((t0.c0)OR(t0.c0)))OR(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(((((t0.c0)OR(t0.c0)))OR(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(((((t0.c0)OR(t0.c0)))OR(t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(((((t0.c0)OR(t0.c0)))OR(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(((((t0.c0)OR(t0.c0)))OR(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(((((t0.c0)OR(t0.c0)))OR(t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE (((((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0))) NOTNULL)) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0))) NOTNULL)))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE (((((((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0))) NOTNULL)) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((NULL COLLATE RTRIM)=((('K&') ISNULL)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((NULL COLLATE RTRIM)==((('K&') ISNULL)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((NULL COLLATE RTRIM)=((('K&') ISNULL)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (CAST(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) AS INTEGER)) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (CAST(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) AS INTEGER)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((CAST(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) AS INTEGER)) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t0 NATURAL JOIN t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0 NATURAL JOIN t1 GROUP BY t1.c0 HAVING ((AVG(NULL))=(CASE t1.c0  WHEN t0.c0 THEN t0.c0 WHEN SUM(t1.c0) THEN TOTAL(t1.c0) WHEN t0.c0 THEN MAX(t1.c0) END)) UNION ALL SELECT t1.c0 FROM t0 NATURAL JOIN t1 GROUP BY t1.c0 HAVING (NOT (((AVG(NULL))==(CASE t1.c0  WHEN t0.c0 THEN t0.c0 WHEN SUM(t1.c0) THEN TOTAL(t1.c0) WHEN t0.c0 THEN MAX(t1.c0) END)))) UNION ALL SELECT ALL t1.c0 FROM t0 NATURAL JOIN t1 GROUP BY t1.c0 HAVING ((((AVG(NULL))=(CASE t1.c0  WHEN t0.c0 THEN t0.c0 WHEN SUM(t1.c0) THEN TOTAL(t1.c0) WHEN t0.c0 THEN MAX(t1.c0) END))) ISNULL);
SELECT t1.c0 FROM t0 NATURAL JOIN t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0 NATURAL JOIN t1 GROUP BY t1.c0 HAVING ((AVG(NULL))=(CASE t1.c0  WHEN t0.c0 THEN t0.c0 WHEN SUM(t1.c0) THEN TOTAL(t1.c0) WHEN t0.c0 THEN MAX(t1.c0) END)) UNION ALL SELECT t1.c0 FROM t0 NATURAL JOIN t1 GROUP BY t1.c0 HAVING (NOT (((AVG(NULL))==(CASE t1.c0  WHEN t0.c0 THEN t0.c0 WHEN SUM(t1.c0) THEN TOTAL(t1.c0) WHEN t0.c0 THEN MAX(t1.c0) END)))) UNION ALL SELECT ALL t1.c0 FROM t0 NATURAL JOIN t1 GROUP BY t1.c0 HAVING ((((AVG(NULL))=(CASE t1.c0  WHEN t0.c0 THEN t0.c0 WHEN SUM(t1.c0) THEN TOTAL(t1.c0) WHEN t0.c0 THEN MAX(t1.c0) END))) ISNULL);
SELECT t1.c0 FROM t0 NATURAL JOIN t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0;
SELECT t1.c0 FROM t1, t0 WHERE (((CAST(t1.c0 AS REAL)) IS TRUE)) UNION ALL SELECT t1.c0 FROM t1, t0 WHERE ((NOT (((CAST(t1.c0 AS REAL)) IS TRUE)))) UNION ALL SELECT t1.c0 FROM t1, t0 WHERE (((((CAST(t1.c0 AS REAL)) IS TRUE)) ISNULL));
SELECT ALL t1.c0 FROM t1, t0;
SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0;
SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0 WHERE (-2067528977) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0 WHERE ((NOT (-2067528977))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0 WHERE (((-2067528977) ISNULL));
SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (LIKELIHOOD(CASE WHEN x'' THEN t1.c0 ELSE t1.c0 END, 0.6943234024056976)) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (LIKELIHOOD(CASE WHEN x'' THEN t1.c0 ELSE t1.c0 END, 0.6943234024056976)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((LIKELIHOOD(CASE WHEN x'' THEN t1.c0 ELSE t1.c0 END, 0.6943234024056976)) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(LIKELY(t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(LIKELY(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(LIKELY(t0.c0))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(LIKELY(t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(LIKELY(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(LIKELY(t0.c0))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM t1, t0;
SELECT ALL * FROM t1, t0 WHERE (0Xfffffffff020792b) UNION ALL SELECT * FROM t1, t0 WHERE ((NOT (0Xfffffffff020792b))) UNION ALL SELECT ALL * FROM t1, t0 WHERE (((0xfffffffff020792b) ISNULL));
SELECT * FROM t1, t0;
SELECT DISTINCT t1.c0, t0.c0 FROM t0, t1;
SELECT DISTINCT t1.c0, t0.c0 FROM t0, t1 WHERE ((~ (TYPEOF(t1.c0)))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t0, t1 WHERE ((NOT ((~ (TYPEOF(t1.c0)))))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t0, t1 WHERE ((((~ (TYPEOF(t1.c0)))) ISNULL));
SELECT DISTINCT t1.c0, t0.c0 FROM t0, t1;
SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t1, t0 WHERE ((CAST(t1.c0 AS BLOB) IN ())) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t1, t0 WHERE ((NOT ((CAST(t1.c0 AS BLOB) IN ())))) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t1, t0 WHERE ((((CAST(t1.c0 AS BLOB) IN ())) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT t1.c0 FROM t1 INDEXED BY i26 GROUP BY t1.c0;
SELECT * FROM t0, t1;
SELECT ALL * FROM t0, t1 WHERE ((2.084323087E9 IN ((t0.c0 IN ()), CASE t1.c0  WHEN t0.c0 THEN t0.c0 END))) UNION ALL SELECT * FROM t0, t1 WHERE ((NOT ((2.084323087E9 IN ((t0.c0 IN ()), CASE t1.c0  WHEN t0.c0 THEN t0.c0 END))))) UNION ALL SELECT * FROM t0, t1 WHERE ((((2.084323087E9 IN ((t0.c0 IN ()), CASE t1.c0  WHEN t0.c0 THEN t0.c0 END))) ISNULL));
SELECT * FROM t0, t1;
SELECT DISTINCT * FROM t1 INNER JOIN t0 ON ((((t1.c0)<<(t1.c0)))|(((((((((t1.c0)OR(t0.c0)))AND(t1.c0)))OR(t0.c0)))OR(t1.c0))));
SELECT DISTINCT * FROM t1 INNER JOIN t0 ON ((((t1.c0)<<(t1.c0)))|(((((((((t1.c0)OR(t0.c0)))AND(t1.c0)))OR(t0.c0)))OR(t1.c0)))) WHERE ((+ (((t1.c0)OR(t1.c0))))) UNION SELECT DISTINCT * FROM t1 INNER JOIN t0 ON ((((t1.c0)<<(t1.c0)))|(((((((((t1.c0)OR(t0.c0)))AND(t1.c0)))OR(t0.c0)))OR(t1.c0)))) WHERE ((NOT ((+ (((t1.c0)OR(t1.c0))))))) UNION SELECT DISTINCT * FROM t1 INNER JOIN t0 ON ((((t1.c0)<<(t1.c0)))|(((((((((t1.c0)OR(t0.c0)))AND(t1.c0)))OR(t0.c0)))OR(t1.c0)))) WHERE ((((+ (((t1.c0)OR(t1.c0))))) ISNULL));
SELECT DISTINCT * FROM t1 INNER JOIN t0 ON ((((t1.c0)<<(t1.c0)))|(((((((((t1.c0)OR(t0.c0)))AND(t1.c0)))OR(t0.c0)))OR(t1.c0))));
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE ((NOT (CAST(t1.c0 AS TEXT)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT ((NOT (CAST(t1.c0 AS TEXT)))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((((NOT (CAST(t1.c0 AS TEXT)))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING SUM(SUM(SUM(t1.c0))) UNION ALL SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING (NOT (SUM(SUM(SUM(t1.c0))))) UNION ALL SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING ((SUM(SUM(SUM(t1.c0)))) ISNULL);
SELECT * FROM t1, t0;
SELECT ALL * FROM t1, t0 WHERE (((((((t1.c0)||('''x+盇')))AND(((t1.c0)==(t1.c0)))))OR(CASE t1.c0  WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 END))) UNION ALL SELECT ALL * FROM t1, t0 WHERE ((NOT (((((((t1.c0)||('''x+盇')))AND(((t1.c0)=(t1.c0)))))OR(CASE t1.c0  WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 END))))) UNION ALL SELECT * FROM t1, t0 WHERE (((((((((t1.c0)||('''x+盇')))AND(((t1.c0)==(t1.c0)))))OR(CASE t1.c0  WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 END))) ISNULL));
SELECT * FROM t1, t0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((t1.c0 COLLATE BINARY) NOT BETWEEN (CAST(t1.c0 AS TEXT)) AND (((t1.c0) BETWEEN (t1.c0) AND (NULL))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((t1.c0 COLLATE BINARY) NOT BETWEEN (CAST(t1.c0 AS TEXT)) AND (((t1.c0) BETWEEN (t1.c0) AND (NULL))))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((t1.c0 COLLATE BINARY) NOT BETWEEN (CAST(t1.c0 AS TEXT)) AND (((t1.c0) BETWEEN (t1.c0) AND (NULL))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (UPPER(DISTINCT IFNULL(x'', x''))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (UPPER(DISTINCT IFNULL(x'', x''))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((UPPER(DISTINCT IFNULL(x'', x''))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0, t0.c0 FROM t0 NATURAL JOIN t1 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t0 NATURAL JOIN t1 GROUP BY t1.c0, t0.c0 HAVING ((((MAX(t1.c0))OR(t1.c0)))<<(CASE MIN(COUNT(MIN(t0.c0)))  WHEN TOTAL(COUNT(*)) THEN t0.c0 END)) UNION ALL SELECT t1.c0, t0.c0 FROM t0 NATURAL JOIN t1 GROUP BY t1.c0, t0.c0 HAVING (NOT (((((MAX(t1.c0))OR(t1.c0)))<<(CASE MIN(COUNT(MIN(t0.c0)))  WHEN TOTAL(COUNT(*)) THEN t0.c0 END)))) UNION ALL SELECT t1.c0, t0.c0 FROM t0 NATURAL JOIN t1 GROUP BY t1.c0, t0.c0 HAVING ((((((MAX(t1.c0))OR(t1.c0)))<<(CASE MIN(COUNT(MIN(t0.c0)))  WHEN TOTAL(COUNT(*)) THEN t0.c0 END))) ISNULL);
SELECT * FROM t0, t1;
SELECT * FROM t0, t1 WHERE (((CAST(t1.c0 AS NUMERIC))IS NOT(CASE x''  WHEN t0.c0 THEN t0.c0 END))) UNION ALL SELECT ALL * FROM t0, t1 WHERE ((NOT (((CAST(t1.c0 AS NUMERIC))IS NOT(CASE x''  WHEN t0.c0 THEN t0.c0 END))))) UNION ALL SELECT ALL * FROM t0, t1 WHERE (((((CAST(t1.c0 AS NUMERIC))IS NOT(CASE x''  WHEN t0.c0 THEN t0.c0 END))) ISNULL));
SELECT * FROM t0, t1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CAST((x'' IN (t0.c0)) AS INTEGER)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CAST((x'' IN (t0.c0)) AS INTEGER)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CAST((x'' IN (t0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t1, t0 WHERE (((+ (t0.c0)) IN ((((t1.c0))<((t0.c0)))))) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t1, t0 WHERE ((NOT (((+ (t0.c0)) IN ((((t1.c0))<((t0.c0)))))))) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t1, t0 WHERE (((((+ (t0.c0)) IN ((((t1.c0))<((t0.c0)))))) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING ((COUNT(*))>>(((COUNT(*)) NOTNULL))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING (NOT (((COUNT(*))>>(((COUNT(*)) NOTNULL))))) UNION ALL SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING ((((COUNT(*))>>(((COUNT(*)) NOTNULL)))) ISNULL);
SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING ((COUNT(*))>>(((COUNT(*)) NOTNULL))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING (NOT (((COUNT(*))>>(((COUNT(*)) NOTNULL))))) UNION ALL SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING ((((COUNT(*))>>(((COUNT(*)) NOTNULL)))) ISNULL);
SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0 FROM t1, t0;
SELECT t0.c0 FROM t1, t0 WHERE (((((t0.c0)>=(t0.c0)))IS NOT(((((((((0.4711556608294126)AND(t0.c0)))AND(t1.c0)))OR(t1.c0)))AND(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t1, t0 WHERE ((NOT (((((t0.c0)>=(t0.c0)))IS NOT(((((((((0.4711556608294126)AND(t0.c0)))AND(t1.c0)))OR(t1.c0)))AND(t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t1, t0 WHERE (((((((t0.c0)>=(t0.c0)))IS NOT(((((((((0.4711556608294126)AND(t0.c0)))AND(t1.c0)))OR(t1.c0)))AND(t0.c0))))) ISNULL));
SELECT ALL t0.c0 FROM t1, t0;
SELECT DISTINCT t1.c0 FROM t1, t0;
SELECT DISTINCT t1.c0 FROM t1, t0 WHERE ((t1.c0 COLLATE RTRIM IN ())) UNION SELECT DISTINCT t1.c0 FROM t1, t0 WHERE ((NOT ((t1.c0 COLLATE RTRIM IN ())))) UNION SELECT DISTINCT t1.c0 FROM t1, t0 WHERE ((((t1.c0 COLLATE RTRIM IN ())) ISNULL));
SELECT DISTINCT t1.c0 FROM t1, t0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 WHERE (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM) GROUP BY t1.c0, t0.c0 UNION SELECT ALL t1.c0, t0.c0 FROM t0, t1 WHERE ((NOT (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM))) GROUP BY t1.c0, t0.c0 UNION SELECT ALL t1.c0, t0.c0 FROM t0, t1 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(AVG('+7S')) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(AVG('+7S')))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(AVG('+7S'))) ISNULL);
SELECT ALL * FROM t0, t1;
SELECT * FROM t0, t1 WHERE ((NOT (((t0.c0)<=(t1.c0))))) UNION ALL SELECT * FROM t0, t1 WHERE ((NOT ((NOT (((t0.c0)<=(t1.c0))))))) UNION ALL SELECT * FROM t0, t1 WHERE ((((NOT (((t0.c0)<=(t1.c0))))) ISNULL));
SELECT ALL * FROM t0, t1;
SELECT DISTINCT * FROM t1 CROSS JOIN t0 ON ((((t0.c0)>(t1.c0)))>(NULL COLLATE BINARY));
SELECT DISTINCT * FROM t1 CROSS JOIN t0 ON ((((t0.c0)>(t1.c0)))>(NULL COLLATE BINARY)) WHERE ((+ (t1.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t1 CROSS JOIN t0 ON ((((t0.c0)>(t1.c0)))>(NULL COLLATE BINARY)) WHERE ((NOT ((+ (t1.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM t1 CROSS JOIN t0 ON ((((t0.c0)>(t1.c0)))>(NULL COLLATE BINARY)) WHERE ((((+ (t1.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM t1 CROSS JOIN t0 ON ((((t0.c0)>(t1.c0)))>(NULL COLLATE BINARY));
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (CAST(((NULL) NOT BETWEEN (t1.c0) AND (t1.c0)) AS BLOB)) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (CAST(((NULL) NOT BETWEEN (t1.c0) AND (t1.c0)) AS BLOB)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((CAST(((NULL) NOT BETWEEN (t1.c0) AND (t1.c0)) AS BLOB)) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING MIN(MAX(t1.c0)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (MIN(MAX(t1.c0)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((MIN(MAX(t1.c0))) ISNULL);
SELECT ALL * FROM t1, t0;
SELECT * FROM t1, t0 WHERE (((((t0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) IS TRUE)) UNION ALL SELECT ALL * FROM t1, t0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) IS TRUE)))) UNION ALL SELECT * FROM t1, t0 WHERE (((((((t0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) IS TRUE)) ISNULL));
SELECT ALL * FROM t1, t0;
SELECT DISTINCT t1.c0 FROM t1, t0;
SELECT DISTINCT t1.c0 FROM t1, t0 WHERE ((((((t0.c0) IS TRUE)))==((((((t1.c0)AND(t0.c0)))OR(t1.c0)))))) UNION SELECT DISTINCT t1.c0 FROM t1, t0 WHERE ((NOT ((((((t0.c0) IS TRUE)))==((((((t1.c0)AND(t0.c0)))OR(t1.c0)))))))) UNION SELECT DISTINCT t1.c0 FROM t1, t0 WHERE ((((((((t0.c0) IS TRUE)))=((((((t1.c0)AND(t0.c0)))OR(t1.c0)))))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1, t0;
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t0 WHERE (t1.c0) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1, t0 WHERE ((NOT (t1.c0))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1, t0 WHERE (((t1.c0) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0 NOT INDEXED, t1 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING AVG((((MIN(MAX(t0.c0)), t1.c0, GROUP_CONCAT(t0.c0)))!=((COUNT(*), t0.c0, t0.c0)))) UNION ALL SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING (NOT (AVG((((MIN(MAX(t0.c0)), t1.c0, GROUP_CONCAT(t0.c0)))!=((COUNT(*), t0.c0, t0.c0)))))) UNION ALL SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING ((AVG((((MIN(MAX(t0.c0)), t1.c0, GROUP_CONCAT(t0.c0)))!=((COUNT(*), t0.c0, t0.c0))))) ISNULL);
SELECT ALL t1.c0 FROM t1 NOT INDEXED;
SELECT t1.c0 FROM t1 WHERE (LIKELY(DISTINCT ((t1.c0)>=(t1.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (LIKELY(DISTINCT ((t1.c0)>=(t1.c0)))))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((LIKELY(DISTINCT ((t1.c0)>=(t1.c0)))) ISNULL));
SELECT ALL t1.c0 FROM t1 NOT INDEXED;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((CAST(t1.c0 AS INTEGER))<=(((t1.c0)&(t1.c0))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((CAST(t1.c0 AS INTEGER))<=(((t1.c0)&(t1.c0))))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((CAST(t1.c0 AS INTEGER))<=(((t1.c0)&(t1.c0))))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ('-1569817908') GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ('-1569817908'))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((('-1569817908') ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING MAX(t0.c0) UNION ALL SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING (NOT (MAX(t0.c0))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING ((MAX(t0.c0)) ISNULL);
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING MAX(t0.c0) UNION ALL SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING (NOT (MAX(t0.c0))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING ((MAX(t0.c0)) ISNULL);
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL t0.c0, t1.c0 FROM t1 INNER JOIN t0 ON ((CAST(t1.c0 AS BLOB)) BETWEEN (CAST(t1.c0 AS REAL)) AND (t0.c0));
SELECT ALL t0.c0, t1.c0 FROM t1 INNER JOIN t0 ON ((CAST(t1.c0 AS BLOB)) BETWEEN (CAST(t1.c0 AS REAL)) AND (t0.c0)) WHERE (x'a9e98db4') UNION ALL SELECT ALL t0.c0, t1.c0 FROM t1 INNER JOIN t0 ON ((CAST(t1.c0 AS BLOB)) BETWEEN (CAST(t1.c0 AS REAL)) AND (t0.c0)) WHERE ((NOT (x'a9e98db4'))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t1 INNER JOIN t0 ON ((CAST(t1.c0 AS BLOB)) BETWEEN (CAST(t1.c0 AS REAL)) AND (t0.c0)) WHERE (((x'a9e98db4') ISNULL));
SELECT ALL t0.c0, t1.c0 FROM t1 INNER JOIN t0 ON ((CAST(t1.c0 AS BLOB)) BETWEEN (CAST(t1.c0 AS REAL)) AND (t0.c0));
SELECT DISTINCT t0.c0 FROM t0 INNER JOIN t1 ON t1.c0;
SELECT DISTINCT t0.c0 FROM t0 INNER JOIN t1 ON t1.c0 WHERE (((0.13705150672638666) ISNULL)) UNION SELECT DISTINCT t0.c0 FROM t0 INNER JOIN t1 ON t1.c0 WHERE ((NOT (((0.13705150672638666) ISNULL)))) UNION SELECT DISTINCT t0.c0 FROM t0 INNER JOIN t1 ON t1.c0 WHERE (((((0.13705150672638666) ISNULL)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0 INNER JOIN t1 ON t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t0 WHERE ((HEX(t1.c0) IN ())) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1, t0 WHERE ((NOT ((HEX(t1.c0) IN ())))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1, t0 WHERE ((((HEX(t1.c0) IN ())) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING (((LOWER(DISTINCT MAX(t1.c0))))<(((((AVG(MIN(MIN(COUNT(t1.c0)))))) NOT BETWEEN ((AVG(t1.c0))) AND ((t1.c0)))))) UNION ALL SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING (NOT ((((LOWER(DISTINCT MAX(t1.c0))))<(((((AVG(MIN(MIN(COUNT(t1.c0)))))) NOT BETWEEN ((AVG(t1.c0))) AND ((t1.c0)))))))) UNION ALL SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING (((((LOWER(DISTINCT MAX(t1.c0))))<(((((AVG(MIN(MIN(COUNT(t1.c0)))))) NOT BETWEEN ((AVG(t1.c0))) AND ((t1.c0))))))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0)AND(t0.c0)) IN ())) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)AND(t0.c0)) IN ())))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((((t0.c0)AND(t0.c0)) IN ())) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT t0.c0, t1.c0 FROM t0, t1 INDEXED BY i26;
SELECT t0.c0 FROM t0 RIGHT OUTER JOIN t1 ON (((t0.c0)IS(t0.c0)) IN ()) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN t1 ON (((t0.c0)IS(t0.c0)) IN ()) WHERE (CASE WHEN t1.c0 COLLATE BINARY THEN ((t0.c0)*(t0.c0)) WHEN ((((t1.c0)AND(t0.c0)))AND(t0.c0)) THEN ((t1.c0) BETWEEN (t0.c0) AND (t1.c0)) WHEN ((t1.c0)||(t0.c0)) THEN (((t0.c0))=((t0.c0))) WHEN t0.c0 THEN ((-1519090770) BETWEEN (t1.c0) AND (1013420911)) WHEN ((t1.c0)&(t1.c0)) THEN CASE WHEN 0.5557008201771635 THEN 0X17876718 ELSE t1.c0 END END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 RIGHT OUTER JOIN t1 ON (((t0.c0)IS(t0.c0)) IN ()) WHERE ((NOT (CASE WHEN t1.c0 COLLATE BINARY THEN ((t0.c0)*(t0.c0)) WHEN ((((t1.c0)AND(t0.c0)))AND(t0.c0)) THEN ((t1.c0) BETWEEN (t0.c0) AND (t1.c0)) WHEN ((t1.c0)||(t0.c0)) THEN (((t0.c0))==((t0.c0))) WHEN t0.c0 THEN ((-1519090770) BETWEEN (t1.c0) AND (1013420911)) WHEN ((t1.c0)&(t1.c0)) THEN CASE WHEN 0.5557008201771635 THEN 0X17876718 ELSE t1.c0 END END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN t1 ON (((t0.c0)IS(t0.c0)) IN ()) WHERE (((CASE WHEN t1.c0 COLLATE BINARY THEN ((t0.c0)*(t0.c0)) WHEN ((((t1.c0)AND(t0.c0)))AND(t0.c0)) THEN ((t1.c0) BETWEEN (t0.c0) AND (t1.c0)) WHEN ((t1.c0)||(t0.c0)) THEN (((t0.c0))=((t0.c0))) WHEN t0.c0 THEN ((-1519090770) BETWEEN (t1.c0) AND (1013420911)) WHEN ((t1.c0)&(t1.c0)) THEN CASE WHEN 0.5557008201771635 THEN 0X17876718 ELSE t1.c0 END END) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 RIGHT OUTER JOIN t1 ON (((t0.c0)IS(t0.c0)) IN ()) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX((((t0.c0)) BETWEEN ((AVG(MIN('	')))) AND ((MAX(GROUP_CONCAT(TOTAL(t0.c0))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX((((t0.c0)) BETWEEN ((AVG(MIN('	')))) AND ((MAX(GROUP_CONCAT(TOTAL(t0.c0))))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX((((t0.c0)) BETWEEN ((AVG(MIN('	')))) AND ((MAX(GROUP_CONCAT(TOTAL(t0.c0)))))))) ISNULL);
SELECT ALL t1.c0, t0.c0 FROM t1, t0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 WHERE (CASE t0.c0  WHEN (+ (t0.c0)) THEN t1.c0 ELSE ((t0.c0) ISNULL) END) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t0 WHERE ((NOT (CASE t0.c0  WHEN (+ (t0.c0)) THEN t1.c0 ELSE ((t0.c0) ISNULL) END))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t0 WHERE (((CASE t0.c0  WHEN (+ (t0.c0)) THEN t1.c0 ELSE ((t0.c0) ISNULL) END) ISNULL));
SELECT ALL t1.c0, t0.c0 FROM t1, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((t0.c0 COLLATE BINARY))!=(('ig딅D僈Ut]')))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0 COLLATE BINARY))<>(('ig딅D僈Ut]')))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0 COLLATE BINARY))!=(('ig딅D僈Ut]')))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t0 WHERE (CASE ((t0.c0)-(t0.c0))  WHEN (t0.c0 IN (t0.c0)) THEN ((t0.c0) NOT NULL) ELSE ((((t0.c0)OR(t1.c0)))AND(t0.c0)) END) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1, t0 WHERE ((NOT (CASE ((t0.c0)-(t0.c0))  WHEN (t0.c0 IN (t0.c0)) THEN ((t0.c0) NOT NULL) ELSE ((((t0.c0)OR(t1.c0)))AND(t0.c0)) END))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1, t0 WHERE (((CASE ((t0.c0)-(t0.c0))  WHEN (t0.c0 IN (t0.c0)) THEN ((t0.c0) NOT NULL) ELSE ((((t0.c0)OR(t1.c0)))AND(t0.c0)) END) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING TOTAL(AVG(COUNT(*))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (TOTAL(AVG(COUNT(*))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((TOTAL(AVG(COUNT(*)))) ISNULL);
SELECT ALL MIN((((('-1645541706' IN ())))<>((t0.c0 COLLATE NOCASE)))) FROM t0 ORDER BY ' *' ASC  NULLS LAST, ((((t0.c0) BETWEEN (t0.c0) AND (-1272867235))) IS FALSE) ASC  NULLS FIRST;
SELECT ALL t0.c0 FROM t0, t1;
SELECT ALL t0.c0 FROM t0, t1 WHERE (CAST(t1.c0 COLLATE BINARY AS INTEGER)) UNION ALL SELECT ALL t0.c0 FROM t0, t1 WHERE ((NOT (CAST(t1.c0 COLLATE BINARY AS INTEGER)))) UNION ALL SELECT t0.c0 FROM t0, t1 WHERE (((CAST(t1.c0 COLLATE BINARY AS INTEGER)) ISNULL));
SELECT ALL t0.c0 FROM t0, t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((LIKELY(t1.c0))/((- (t1.c0))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((LIKELY(t1.c0))/((- (t1.c0))))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((LIKELY(t1.c0))/((- (t1.c0))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t1, t0 WHERE (t1.c0) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t1, t0 WHERE ((NOT (t1.c0))) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t1, t0 WHERE (((t1.c0) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING (t0.c0 COLLATE RTRIM IN (SUM(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING (NOT ((t0.c0 COLLATE RTRIM IN (SUM(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING (((t0.c0 COLLATE RTRIM IN (SUM(t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING (t0.c0 COLLATE RTRIM IN (SUM(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING (NOT ((t0.c0 COLLATE RTRIM IN (SUM(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING (((t0.c0 COLLATE RTRIM IN (SUM(t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT ALL t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE ((((t1.c0 IN ())) BETWEEN (((t1.c0) NOT NULL)) AND (1.013420911E9))) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT ((((t1.c0 IN ())) BETWEEN (((t1.c0) NOT NULL)) AND (1.013420911E9))))) UNION ALL SELECT t1.c0 FROM t1 WHERE ((((((t1.c0 IN ())) BETWEEN (((t1.c0) NOT NULL)) AND (1.013420911E9))) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT * FROM t0 INNER JOIN t1 ON (~ ((((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((t0.c0)))));
SELECT DISTINCT * FROM t0 INNER JOIN t1 ON (~ ((((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((t0.c0))))) WHERE ((('1딅-n') IS TRUE)) UNION SELECT DISTINCT * FROM t0 INNER JOIN t1 ON (~ ((((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((t0.c0))))) WHERE ((NOT ((('1딅-n') IS TRUE)))) UNION SELECT DISTINCT * FROM t0 INNER JOIN t1 ON (~ ((((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((t0.c0))))) WHERE ((((('1딅-n') IS TRUE)) ISNULL));
SELECT DISTINCT * FROM t0 INNER JOIN t1 ON (~ ((((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((t0.c0)))));
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0)*(1404384024)))AND(((x'8963')LIKE(t0.c0)))))OR(t0.c0 COLLATE BINARY))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((((t0.c0)*(1404384024)))AND(((x'8963')LIKE(t0.c0)))))OR(t0.c0 COLLATE BINARY))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((((t0.c0)*(1404384024)))AND(((x'8963')LIKE(t0.c0)))))OR(t0.c0 COLLATE BINARY))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON ((((((t1.c0)AND(t1.c0)))OR(t1.c0))) NOT NULL) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON ((((((t1.c0)AND(t1.c0)))OR(t1.c0))) NOT NULL) GROUP BY t1.c0 HAVING MAX(CASE WHEN t0.c0 THEN t1.c0 ELSE MAX(TOTAL(t0.c0)) END) UNION ALL SELECT t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON ((((((t1.c0)AND(t1.c0)))OR(t1.c0))) NOT NULL) GROUP BY t1.c0 HAVING (NOT (MAX(CASE WHEN t0.c0 THEN t1.c0 ELSE MAX(TOTAL(t0.c0)) END))) UNION ALL SELECT ALL t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON ((((((t1.c0)AND(t1.c0)))OR(t1.c0))) NOT NULL) GROUP BY t1.c0 HAVING ((MAX(CASE WHEN t0.c0 THEN t1.c0 ELSE MAX(TOTAL(t0.c0)) END)) ISNULL);
SELECT * FROM t1;
SELECT * FROM t1 WHERE (CASE WHEN ((t1.c0)GLOB(t1.c0)) THEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END END) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (CASE WHEN ((t1.c0)GLOB(t1.c0)) THEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END END))) UNION ALL SELECT ALL * FROM t1 WHERE (((CASE WHEN ((t1.c0)GLOB(t1.c0)) THEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END END) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT ((NOT (t1.c0))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT ((NOT ((NOT (t1.c0))))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((((NOT ((NOT (t1.c0))))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0 NOT INDEXED, t1 WHERE ((NOT (NULL)) COLLATE RTRIM) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t0, t1 WHERE ((NOT ((NOT (NULL)) COLLATE RTRIM))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t0, t1 WHERE ((((NOT (NULL)) COLLATE RTRIM) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING MAX(MAX(MAX(GROUP_CONCAT(t1.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (MAX(MAX(MAX(GROUP_CONCAT(t1.c0)))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((MAX(MAX(MAX(GROUP_CONCAT(t1.c0))))) ISNULL);
SELECT ALL * FROM t1 CROSS JOIN t0 ON ((UNLIKELY(DISTINCT t0.c0))/(DATE(t0.c0, t1.c0, t1.c0)));
SELECT ALL * FROM t1 CROSS JOIN t0 ON ((UNLIKELY(DISTINCT t0.c0))/(DATE(t0.c0, t1.c0, t1.c0))) WHERE ('') UNION ALL SELECT ALL * FROM t1 CROSS JOIN t0 ON ((UNLIKELY(DISTINCT t0.c0))/(DATE(t0.c0, t1.c0, t1.c0))) WHERE ((NOT (''))) UNION ALL SELECT ALL * FROM t1 CROSS JOIN t0 ON ((UNLIKELY(DISTINCT t0.c0))/(DATE(t0.c0, t1.c0, t1.c0))) WHERE ((('') ISNULL));
SELECT ALL * FROM t1 CROSS JOIN t0 ON ((UNLIKELY(DISTINCT t0.c0))/(DATE(t0.c0, t1.c0, t1.c0)));
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((((t1.c0)<(t1.c0))) NOT BETWEEN ((NOT (t1.c0))) AND (CASE WHEN t1.c0 THEN t1.c0 END))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((((t1.c0)<(t1.c0))) NOT BETWEEN ((NOT (t1.c0))) AND (CASE WHEN t1.c0 THEN t1.c0 END))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((((t1.c0)<(t1.c0))) NOT BETWEEN ((NOT (t1.c0))) AND (CASE WHEN t1.c0 THEN t1.c0 END))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (TRIM(DISTINCT (- (t1.c0)), ((t1.c0)|(t1.c0)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (TRIM(DISTINCT (- (t1.c0)), ((t1.c0)|(t1.c0)))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((TRIM(DISTINCT (- (t1.c0)), ((t1.c0)|(t1.c0)))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING CASE WHEN COUNT(t1.c0) THEN GROUP_CONCAT(COUNT(t1.c0)) ELSE ((SUM(t1.c0))<(MIN(t1.c0))) END UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (CASE WHEN COUNT(t1.c0) THEN GROUP_CONCAT(COUNT(t1.c0)) ELSE ((SUM(t1.c0))<(MIN(t1.c0))) END)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((CASE WHEN COUNT(t1.c0) THEN GROUP_CONCAT(COUNT(t1.c0)) ELSE ((SUM(t1.c0))<(MIN(t1.c0))) END) ISNULL);
SELECT ALL * FROM t1;
SELECT * FROM t1 WHERE (CASE (~ (x''))  WHEN ((t1.c0) IS TRUE) THEN t1.c0 WHEN ((t1.c0) ISNULL) THEN t1.c0 WHEN t1.c0 THEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) END) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (CASE (~ (x''))  WHEN ((t1.c0) IS TRUE) THEN t1.c0 WHEN ((t1.c0) ISNULL) THEN t1.c0 WHEN t1.c0 THEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) END))) UNION ALL SELECT ALL * FROM t1 WHERE (((CASE (~ (x''))  WHEN ((t1.c0) IS TRUE) THEN t1.c0 WHEN ((t1.c0) ISNULL) THEN t1.c0 WHEN t1.c0 THEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) END) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (((t0.c0)+(t0.c0))) AND (CAST(t0.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (((t0.c0)+(t0.c0))) AND (CAST(t0.c0 AS BLOB)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (((t0.c0)+(t0.c0))) AND (CAST(t0.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ((((+ (t1.c0)))<((t1.c0 IN ())))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((((+ (t1.c0)))<((t1.c0 IN ())))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((((((+ (t1.c0)))<((t1.c0 IN ())))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING COUNT(MIN(t1.c0)) UNION ALL SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING (NOT (COUNT(MIN(t1.c0)))) UNION ALL SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING ((COUNT(MIN(t1.c0))) ISNULL);
SELECT t0.c0 FROM t1, t0;
SELECT ALL t0.c0 FROM t1, t0 WHERE (CASE 0.5135319546467484  WHEN (~ (t1.c0)) THEN CAST(t0.c0 AS REAL) WHEN CAST(t1.c0 AS TEXT) THEN TRIM(t1.c0) WHEN ((t1.c0)||(t0.c0)) THEN ((t1.c0)<>(t1.c0)) ELSE ((0.07542694900589264)OR(t0.c0)) END) UNION ALL SELECT t0.c0 FROM t1, t0 WHERE ((NOT (CASE 0.5135319546467484  WHEN (~ (t1.c0)) THEN CAST(t0.c0 AS REAL) WHEN CAST(t1.c0 AS TEXT) THEN TRIM(t1.c0) WHEN ((t1.c0)||(t0.c0)) THEN ((t1.c0)<>(t1.c0)) ELSE ((0.07542694900589264)OR(t0.c0)) END))) UNION ALL SELECT t0.c0 FROM t1, t0 WHERE (((CASE 0.5135319546467484  WHEN (~ (t1.c0)) THEN CAST(t0.c0 AS REAL) WHEN CAST(t1.c0 AS TEXT) THEN TRIM(t1.c0) WHEN ((t1.c0)||(t0.c0)) THEN ((t1.c0)<>(t1.c0)) ELSE ((0.07542694900589264)OR(t0.c0)) END) ISNULL));
SELECT t0.c0 FROM t1, t0;
SELECT DISTINCT * FROM t0, t1;
SELECT DISTINCT * FROM t0, t1 WHERE (((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND('')))OR(t0.c0))) IS FALSE)) UNION SELECT DISTINCT * FROM t0, t1 WHERE ((NOT (((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND('')))OR(t0.c0))) IS FALSE)))) UNION SELECT DISTINCT * FROM t0, t1 WHERE (((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND('')))OR(t0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t0, t1;
SELECT t1.c0 FROM t1 NOT INDEXED GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (t1.c0) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (t1.c0))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((t1.c0) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 NOT INDEXED GROUP BY t1.c0;
SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING CAST(COUNT(t0.c0) AS BLOB) UNION ALL SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING (NOT (CAST(COUNT(t0.c0) AS BLOB))) UNION ALL SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING ((CAST(COUNT(t0.c0) AS BLOB)) ISNULL);
SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING CAST(COUNT(t0.c0) AS BLOB) UNION ALL SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING (NOT (CAST(COUNT(t0.c0) AS BLOB))) UNION ALL SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING ((CAST(COUNT(t0.c0) AS BLOB)) ISNULL);
SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT ALL t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) IS TRUE)) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT ((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) IS TRUE)))) UNION ALL SELECT t1.c0 FROM t1 WHERE ((((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) IS TRUE)) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((((HEX(DISTINCT t0.c0))AND(((t0.c0)||(t0.c0)))))AND((t0.c0 IN ()))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(UPPER(t0.c0)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((((((HEX(DISTINCT t0.c0))AND(((t0.c0)||(t0.c0)))))AND((t0.c0 IN ()))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(UPPER(t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((((((HEX(DISTINCT t0.c0))AND(((t0.c0)||(t0.c0)))))AND((t0.c0 IN ()))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(UPPER(t0.c0)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c0)<(t0.c0)))) AND (((t0.c0 IN ()))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((((t0.c0)<(t0.c0)))) AND (((t0.c0 IN ()))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((((t0.c0)<(t0.c0)))) AND (((t0.c0 IN ()))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, t1.c0 FROM t1 LEFT OUTER JOIN t0 ON (- (t1.c0)) GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t1 LEFT OUTER JOIN t0 ON (- (t1.c0)) GROUP BY t0.c0, t1.c0 HAVING TOTAL('-1837090709') UNION ALL SELECT ALL t0.c0, t1.c0 FROM t1 LEFT OUTER JOIN t0 ON (- (t1.c0)) GROUP BY t0.c0, t1.c0 HAVING (NOT (TOTAL('-1837090709'))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t1 LEFT OUTER JOIN t0 ON (- (t1.c0)) GROUP BY t0.c0, t1.c0 HAVING ((TOTAL('-1837090709')) ISNULL);
SELECT ALL t0.c0, t1.c0 FROM t1 LEFT OUTER JOIN t0 ON (- (t1.c0)) GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t1 LEFT OUTER JOIN t0 ON (- (t1.c0)) GROUP BY t0.c0, t1.c0 HAVING TOTAL('-1837090709') UNION ALL SELECT ALL t0.c0, t1.c0 FROM t1 LEFT OUTER JOIN t0 ON (- (t1.c0)) GROUP BY t0.c0, t1.c0 HAVING (NOT (TOTAL('-1837090709'))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t1 LEFT OUTER JOIN t0 ON (- (t1.c0)) GROUP BY t0.c0, t1.c0 HAVING ((TOTAL('-1837090709')) ISNULL);
SELECT ALL t0.c0, t1.c0 FROM t1 LEFT OUTER JOIN t0 ON (- (t1.c0)) GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (CAST((- (t0.c0)) AS NUMERIC)) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (CAST((- (t0.c0)) AS NUMERIC)))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((CAST((- (t0.c0)) AS NUMERIC)) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((t0.c0)) BETWEEN (((t0.c0 IN (t0.c0)))) AND ((((((((((t0.c0)AND(NULL)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) BETWEEN (((t0.c0 IN (t0.c0)))) AND ((((((((((t0.c0)AND(NULL)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0)) BETWEEN (((t0.c0 IN (t0.c0)))) AND ((((((((((t0.c0)AND(NULL)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 WHERE (CASE t0.c0 COLLATE RTRIM  WHEN TYPEOF(t1.c0) THEN t1.c0 ELSE t0.c0 COLLATE NOCASE END) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t0, t1 WHERE ((NOT (CASE t0.c0 COLLATE RTRIM  WHEN TYPEOF(t1.c0) THEN t1.c0 ELSE t0.c0 COLLATE NOCASE END))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t0, t1 WHERE (((CASE t0.c0 COLLATE RTRIM  WHEN TYPEOF(t1.c0) THEN t1.c0 ELSE t0.c0 COLLATE NOCASE END) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING 0.8728938444404678 UNION ALL SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (NOT (0.8728938444404678)) UNION ALL SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING ((0.8728938444404678) ISNULL);
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING 0.8728938444404678 UNION ALL SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (NOT (0.8728938444404678)) UNION ALL SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING ((0.8728938444404678) ISNULL);
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT SUM(((t1.c0 COLLATE NOCASE)%(((t1.c0)>(t1.c0))))) FROM t1 ORDER BY (t1.c0 IN ()) COLLATE RTRIM;
SELECT t0.c0 FROM t1 CROSS JOIN t0 ON x'' COLLATE BINARY;
SELECT ALL t0.c0 FROM t1 CROSS JOIN t0 ON x'' COLLATE BINARY WHERE (t1.c0) UNION ALL SELECT ALL t0.c0 FROM t1 CROSS JOIN t0 ON x'' COLLATE BINARY WHERE ((NOT (t1.c0))) UNION ALL SELECT t0.c0 FROM t1 CROSS JOIN t0 ON x'' COLLATE BINARY WHERE (((t1.c0) ISNULL));
SELECT t0.c0 FROM t1 CROSS JOIN t0 ON x'' COLLATE BINARY;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (CHAR((NULL IN ()))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (CHAR((NULL IN ()))))) UNION SELECT DISTINCT * FROM t1 WHERE (((CHAR((NULL IN ()))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0 IN ())) BETWEEN (t0.c0 COLLATE NOCASE) AND (''))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0 IN ())) BETWEEN (t0.c0 COLLATE NOCASE) AND (''))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((t0.c0 IN ())) BETWEEN (t0.c0 COLLATE NOCASE) AND (''))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING COUNT(((GROUP_CONCAT(t0.c0)) BETWEEN (t0.c0) AND ('\H1'''))) UNION ALL SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING (NOT (COUNT(((GROUP_CONCAT(t0.c0)) BETWEEN (t0.c0) AND ('\H1'''))))) UNION ALL SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING ((COUNT(((GROUP_CONCAT(t0.c0)) BETWEEN (t0.c0) AND ('\H1''')))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (((((((t0.c0) ISNULL))OR(NULL)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) UNION ALL SELECT ALL * FROM t0 NOT INDEXED WHERE ((NOT (((((((t0.c0) ISNULL))OR(NULL)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((((t0.c0) ISNULL))OR(NULL)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN t1 ON CASE WHEN json_insert(t0.c0, t0.c0, t1.c0) THEN COALESCE(DISTINCT t1.c0, t0.c0) END;
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN t1 ON CASE WHEN json_insert(t0.c0, t0.c0, t1.c0) THEN COALESCE(DISTINCT t1.c0, t0.c0) END WHERE (TYPEOF(DISTINCT t1.c0 COLLATE NOCASE)) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN t1 ON CASE WHEN json_insert(t0.c0, t0.c0, t1.c0) THEN COALESCE(DISTINCT t1.c0, t0.c0) END WHERE ((NOT (TYPEOF(DISTINCT t1.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN t1 ON CASE WHEN json_insert(t0.c0, t0.c0, t1.c0) THEN COALESCE(DISTINCT t1.c0, t0.c0) END WHERE (((TYPEOF(DISTINCT t1.c0 COLLATE NOCASE)) ISNULL));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN t1 ON CASE WHEN json_insert(t0.c0, t0.c0, t1.c0) THEN COALESCE(DISTINCT t1.c0, t0.c0) END;
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1, t0 WHERE ((((t1.c0)) BETWEEN ((NULL)) AND ((((t1.c0)|(t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t1, t0 WHERE ((NOT ((((t1.c0)) BETWEEN ((NULL)) AND ((((t1.c0)|(t0.c0)))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t1, t0 WHERE ((((((t1.c0)) BETWEEN ((NULL)) AND ((((t1.c0)|(t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(GROUP_CONCAT(GROUP_CONCAT(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(GROUP_CONCAT(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(GROUP_CONCAT(GROUP_CONCAT(t0.c0)))) ISNULL);
SELECT * FROM t0, t1;
SELECT ALL * FROM t0, t1 WHERE (CAST(t1.c0 COLLATE RTRIM AS BLOB)) UNION ALL SELECT ALL * FROM t0, t1 WHERE ((NOT (CAST(t1.c0 COLLATE RTRIM AS BLOB)))) UNION ALL SELECT * FROM t0, t1 WHERE (((CAST(t1.c0 COLLATE RTRIM AS BLOB)) ISNULL));
SELECT * FROM t0, t1;
SELECT DISTINCT * FROM t0, t1;
SELECT DISTINCT * FROM t0, t1 WHERE (NULL) UNION SELECT DISTINCT * FROM t0, t1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM t0, t1 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM t0, t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ((t1.c0 IN ())) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((t1.c0 IN ())))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((((t1.c0 IN ())) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING ((COUNT(*))*(t0.c0)) UNION ALL SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (NOT (((COUNT(*))*(t0.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING ((((COUNT(*))*(t0.c0))) ISNULL);
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING ((COUNT(*))*(t0.c0)) UNION ALL SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (NOT (((COUNT(*))*(t0.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING ((((COUNT(*))*(t0.c0))) ISNULL);
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT t0.c0, t1.c0 FROM t0, t1;
SELECT t0.c0, t1.c0 FROM t0, t1 WHERE (CASE WHEN ((((t0.c0)AND(t0.c0)))AND(t1.c0)) THEN ((t1.c0) NOT NULL) END) UNION ALL SELECT t0.c0, t1.c0 FROM t0, t1 WHERE ((NOT (CASE WHEN ((((t0.c0)AND(t0.c0)))AND(t1.c0)) THEN ((t1.c0) NOT NULL) END))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 WHERE (((CASE WHEN ((((t0.c0)AND(t0.c0)))AND(t1.c0)) THEN ((t1.c0) NOT NULL) END) ISNULL));
SELECT t0.c0, t1.c0 FROM t0, t1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CASE WHEN NULL THEN t0.c0 COLLATE RTRIM ELSE t0.c0 END) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CASE WHEN NULL THEN t0.c0 COLLATE RTRIM ELSE t0.c0 END))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CASE WHEN NULL THEN t0.c0 COLLATE RTRIM ELSE t0.c0 END) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 WHERE ((((('')>=(t0.c0)))<=(((t0.c0) ISNULL)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1, t0 WHERE ((NOT ((((('')>=(t0.c0)))<=(((t0.c0) ISNULL)))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1, t0 WHERE ((((((('')>=(t0.c0)))<=(((t0.c0) ISNULL)))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((LIKELY(DISTINCT t1.c0)) NOT BETWEEN (TOTAL(t1.c0)) AND (((COUNT(t1.c0))%(AVG(t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((LIKELY(DISTINCT t1.c0)) NOT BETWEEN (TOTAL(t1.c0)) AND (((COUNT(t1.c0))%(AVG(t1.c0))))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((LIKELY(DISTINCT t1.c0)) NOT BETWEEN (TOTAL(t1.c0)) AND (((COUNT(t1.c0))%(AVG(t1.c0)))))) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((LIKELY(DISTINCT t1.c0)) NOT BETWEEN (TOTAL(t1.c0)) AND (((COUNT(t1.c0))%(AVG(t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((LIKELY(DISTINCT t1.c0)) NOT BETWEEN (TOTAL(t1.c0)) AND (((COUNT(t1.c0))%(AVG(t1.c0))))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((LIKELY(DISTINCT t1.c0)) NOT BETWEEN (TOTAL(t1.c0)) AND (((COUNT(t1.c0))%(AVG(t1.c0)))))) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (CASE WHEN ((t1.c0)*(x'')) THEN TRIM(t1.c0) WHEN 1.874718539E9 THEN (x'' IN (t1.c0, t1.c0)) WHEN t1.c0 THEN (t1.c0 IN (t1.c0)) END) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT (CASE WHEN ((t1.c0)*(x'')) THEN TRIM(t1.c0) WHEN 1.874718539E9 THEN (x'' IN (t1.c0, t1.c0)) WHEN t1.c0 THEN (t1.c0 IN (t1.c0)) END))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((CASE WHEN ((t1.c0)*(x'')) THEN TRIM(t1.c0) WHEN 1.874718539E9 THEN (x'' IN (t1.c0, t1.c0)) WHEN t1.c0 THEN (t1.c0 IN (t1.c0)) END) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1, t0;
SELECT DISTINCT t1.c0 FROM t1, t0 WHERE (CAST(((((((((t0.c0)OR(t1.c0)))AND(t0.c0)))AND(t1.c0)))OR(t1.c0)) AS NUMERIC)) UNION SELECT DISTINCT t1.c0 FROM t1, t0 WHERE ((NOT (CAST(((((((((t0.c0)OR(t1.c0)))AND(t0.c0)))AND(t1.c0)))OR(t1.c0)) AS NUMERIC)))) UNION SELECT DISTINCT t1.c0 FROM t1, t0 WHERE (((CAST(((((((((t0.c0)OR(t1.c0)))AND(t0.c0)))AND(t1.c0)))OR(t1.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT t1.c0 FROM t1, t0;
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 WHERE (((((t1.c0) NOTNULL))IS NOT((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t1, t0 WHERE ((NOT (((((t1.c0) NOTNULL))IS NOT((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t1, t0 WHERE (((((((t1.c0) NOTNULL))IS NOT((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING AVG(CASE WHEN SUM(t1.c0) THEN t0.c0 END) UNION ALL SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING (NOT (AVG(CASE WHEN SUM(t1.c0) THEN t0.c0 END))) UNION ALL SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING ((AVG(CASE WHEN SUM(t1.c0) THEN t0.c0 END)) ISNULL);
SELECT ALL t0.c0, t1.c0 FROM t1, t0;
SELECT ALL t0.c0, t1.c0 FROM t1, t0 WHERE ((((((((((t0.c0 IN (t0.c0, t0.c0)))OR(((t1.c0)>=(t0.c0)))))OR((((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((t0.c0))))))OR(((t0.c0)<>(t0.c0)))))AND(LIKELIHOOD(DISTINCT t1.c0, 0.10722603350785265)))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t1, t0 WHERE ((NOT ((((((((((t0.c0 IN (t0.c0, t0.c0)))OR(((t1.c0)>=(t0.c0)))))OR((((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((t0.c0))))))OR(((t0.c0)<>(t0.c0)))))AND(LIKELIHOOD(DISTINCT t1.c0, 0.10722603350785265)))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t1, t0 WHERE ((((((((((((t0.c0 IN (t0.c0, t0.c0)))OR(((t1.c0)>=(t0.c0)))))OR((((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((t0.c0))))))OR(((t0.c0)!=(t0.c0)))))AND(LIKELIHOOD(DISTINCT t1.c0, 0.10722603350785265)))) ISNULL));
SELECT ALL t0.c0, t1.c0 FROM t1, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (SQLITE_COMPILEOPTION_USED(((t0.c0)<<(t0.c0)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (SQLITE_COMPILEOPTION_USED(((t0.c0)<<(t0.c0)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((SQLITE_COMPILEOPTION_USED(((t0.c0)<<(t0.c0)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (0.13617695116912854) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (0.13617695116912854))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((0.13617695116912854) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING CASE WHEN SUM(t1.c0) THEN json_remove(MIN(t1.c0), COUNT(GROUP_CONCAT(GROUP_CONCAT(SUM(TOTAL(t1.c0))))), t1.c0, GROUP_CONCAT(t1.c0)) ELSE TOTAL(t1.c0) END UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (CASE WHEN SUM(t1.c0) THEN json_remove(MIN(t1.c0), COUNT(GROUP_CONCAT(GROUP_CONCAT(SUM(TOTAL(t1.c0))))), t1.c0, GROUP_CONCAT(t1.c0)) ELSE TOTAL(t1.c0) END)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((CASE WHEN SUM(t1.c0) THEN json_remove(MIN(t1.c0), COUNT(GROUP_CONCAT(GROUP_CONCAT(SUM(TOTAL(t1.c0))))), t1.c0, GROUP_CONCAT(t1.c0)) ELSE TOTAL(t1.c0) END) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (x'9cac') UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (x'9cac'))) UNION ALL SELECT * FROM t0 WHERE (((x'9cac') ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t1.c0 FROM t0, t1;
SELECT DISTINCT t1.c0 FROM t0, t1 WHERE (CAST((((t0.c0))>((t0.c0))) AS REAL)) UNION SELECT DISTINCT t1.c0 FROM t0, t1 WHERE ((NOT (CAST((((t0.c0))>((t0.c0))) AS REAL)))) UNION SELECT DISTINCT t1.c0 FROM t0, t1 WHERE (((CAST((((t0.c0))>((t0.c0))) AS REAL)) ISNULL));
SELECT DISTINCT t1.c0 FROM t0, t1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0 IN ())) NOT BETWEEN (((t0.c0)IS(t0.c0))) AND (t0.c0 COLLATE BINARY))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0 IN ())) NOT BETWEEN (((t0.c0)IS(t0.c0))) AND (t0.c0 COLLATE BINARY))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0 IN ())) NOT BETWEEN (((t0.c0)IS(t0.c0))) AND (t0.c0 COLLATE BINARY))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (GROUP_CONCAT(t1.c0) IN ()) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((GROUP_CONCAT(t1.c0) IN ()))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((GROUP_CONCAT(t1.c0) IN ())) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (GROUP_CONCAT(t1.c0) IN ()) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((GROUP_CONCAT(t1.c0) IN ()))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((GROUP_CONCAT(t1.c0) IN ())) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1;
SELECT t1.c0 FROM t0, t1 WHERE (((CASE WHEN t0.c0 THEN 0Xffffffff83e603d3 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)|(((((t1.c0)AND(t0.c0)))OR(t1.c0))))) UNION ALL SELECT ALL t1.c0 FROM t0, t1 WHERE ((NOT (((CASE WHEN t0.c0 THEN 0Xffffffff83e603d3 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)|(((((t1.c0)AND(t0.c0)))OR(t1.c0))))))) UNION ALL SELECT t1.c0 FROM t0, t1 WHERE (((((CASE WHEN t0.c0 THEN 0xffffffff83e603d3 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)|(((((t1.c0)AND(t0.c0)))OR(t1.c0))))) ISNULL));
SELECT ALL t1.c0 FROM t0, t1;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE ((- ((~ (t0.c0))))) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT ((- ((~ (t0.c0))))))) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((((- ((~ (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (CASE ((((t1.c0)OR(t1.c0)))OR(t1.c0))  WHEN t1.c0 THEN TRIM(t1.c0) ELSE (((t1.c0))>((t1.c0))) END) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (CASE ((((t1.c0)OR(t1.c0)))OR(t1.c0))  WHEN t1.c0 THEN TRIM(t1.c0) ELSE (((t1.c0))>((t1.c0))) END))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((CASE ((((t1.c0)OR(t1.c0)))OR(t1.c0))  WHEN t1.c0 THEN TRIM(t1.c0) ELSE (((t1.c0))>((t1.c0))) END) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING MIN(CAST(t1.c0 AS INTEGER)) UNION ALL SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING (NOT (MIN(CAST(t1.c0 AS INTEGER)))) UNION ALL SELECT t1.c0 FROM t0 NOT INDEXED, t1 GROUP BY t1.c0 HAVING ((MIN(CAST(t1.c0 AS INTEGER))) ISNULL);
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING MIN(CAST(t1.c0 AS INTEGER)) UNION ALL SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING (NOT (MIN(CAST(t1.c0 AS INTEGER)))) UNION ALL SELECT t1.c0 FROM t0 NOT INDEXED, t1 GROUP BY t1.c0 HAVING ((MIN(CAST(t1.c0 AS INTEGER))) ISNULL);
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT ALL * FROM t1 RIGHT OUTER JOIN t0 ON (((t0.c0 IN ())) IS FALSE);
SELECT ALL * FROM t1 RIGHT OUTER JOIN t0 ON (((t0.c0 IN ())) IS FALSE) WHERE (TRIM(CAST(t1.c0 AS REAL))) UNION ALL SELECT ALL * FROM t1 RIGHT OUTER JOIN t0 ON (((t0.c0 IN ())) IS FALSE) WHERE ((NOT (TRIM(CAST(t1.c0 AS REAL))))) UNION ALL SELECT ALL * FROM t1 RIGHT OUTER JOIN t0 ON (((t0.c0 IN ())) IS FALSE) WHERE (((TRIM(CAST(t1.c0 AS REAL))) ISNULL));
SELECT ALL * FROM t1 RIGHT OUTER JOIN t0 ON (((t0.c0 IN ())) IS FALSE);
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE ((((t0.c0 IN (t1.c0, t1.c0)))||(t0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT ((((t0.c0 IN (t1.c0, t1.c0)))||(t0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((((((t0.c0 IN (t1.c0, t1.c0)))||(t0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT t1.c0 FROM t0 CROSS JOIN t1 ON CASE WHEN ((t1.c0)=(t1.c0)) THEN json(t1.c0) ELSE ((t0.c0)*(t1.c0)) END GROUP BY t1.c0;
SELECT t1.c0 FROM t0 CROSS JOIN t1 ON CASE WHEN ((t1.c0)==(t1.c0)) THEN json(t1.c0) ELSE ((t0.c0)*(t1.c0)) END WHERE (-1279846395) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t0 CROSS JOIN t1 ON CASE WHEN ((t1.c0)=(t1.c0)) THEN json(t1.c0) ELSE ((t0.c0)*(t1.c0)) END WHERE ((NOT (-1279846395))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t0 CROSS JOIN t1 ON CASE WHEN ((t1.c0)==(t1.c0)) THEN json(t1.c0) ELSE ((t0.c0)*(t1.c0)) END WHERE (((-1279846395) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t0 CROSS JOIN t1 ON CASE WHEN ((t1.c0)=(t1.c0)) THEN json(t1.c0) ELSE ((t0.c0)*(t1.c0)) END GROUP BY t1.c0;
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING ((SUM(COUNT(*)))>(t0.c0)) COLLATE NOCASE UNION ALL SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING (NOT (((SUM(COUNT(*)))>(t0.c0)) COLLATE NOCASE)) UNION ALL SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING ((((SUM(COUNT(*)))>(t0.c0)) COLLATE NOCASE) ISNULL);
SELECT ALL MIN(((t0.c0 COLLATE NOCASE)|(((t0.c0)==(t1.c0))))) FROM t0, t1;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (LENGTH(((t0.c0)==(t0.c0)))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (LENGTH(((t0.c0)=(t0.c0)))))) UNION ALL SELECT * FROM t0 WHERE (((LENGTH(((t0.c0)==(t0.c0)))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0, t1;
SELECT DISTINCT * FROM t0, t1 WHERE (((t0.c0 COLLATE RTRIM) ISNULL)) UNION SELECT DISTINCT * FROM t0, t1 WHERE ((NOT (((t0.c0 COLLATE RTRIM) ISNULL)))) UNION SELECT DISTINCT * FROM t0, t1 WHERE (((((t0.c0 COLLATE RTRIM) ISNULL)) ISNULL));
SELECT DISTINCT * FROM t0, t1;
SELECT t0.c0, t1.c0 FROM t0 FULL OUTER JOIN t1 ON ((((t1.c0)/(t1.c0)))<((+ (t1.c0)))) GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0 FULL OUTER JOIN t1 ON ((((t1.c0)/(t1.c0)))<((+ (t1.c0)))) WHERE (((((t0.c0) IS TRUE))=(CAST(t1.c0 AS BLOB)))) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t0 FULL OUTER JOIN t1 ON ((((t1.c0)/(t1.c0)))<((+ (t1.c0)))) WHERE ((NOT (((((t0.c0) IS TRUE))==(CAST(t1.c0 AS BLOB)))))) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t0 FULL OUTER JOIN t1 ON ((((t1.c0)/(t1.c0)))<((+ (t1.c0)))) WHERE (((((((t0.c0) IS TRUE))=(CAST(t1.c0 AS BLOB)))) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0 FULL OUTER JOIN t1 ON ((((t1.c0)/(t1.c0)))<((+ (t1.c0)))) GROUP BY t0.c0, t1.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING TOTAL((((COUNT(t0.c0)))<((0.34458472970626597)))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING (NOT (TOTAL((((COUNT(t0.c0)))<((0.34458472970626597)))))) UNION ALL SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING ((TOTAL((((COUNT(t0.c0)))<((0.34458472970626597))))) ISNULL);
SELECT ALL * FROM t1;
SELECT ALL * FROM t1 WHERE (((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0))) NOT BETWEEN ((((t1.c0))>=((0.44390407243538843)))) AND (''))) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0))) NOT BETWEEN ((((t1.c0))>=((0.44390407243538843)))) AND (''))))) UNION ALL SELECT * FROM t1 WHERE (((((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0))) NOT BETWEEN ((((t1.c0))>=((0.44390407243538843)))) AND (''))) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1 WHERE (json_type(t1.c0)) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t0, t1 WHERE ((NOT (json_type(t1.c0)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t0, t1 WHERE (((json_type(t1.c0)) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING 0.3054099353376123 UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (0.3054099353376123)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((0.3054099353376123) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING 0.3054099353376123 UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (0.3054099353376123)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((0.3054099353376123) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM t1;
SELECT * FROM t1 WHERE (((0Xffffffffa670f4a6)-(t1.c0)) COLLATE NOCASE) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (((0Xffffffffa670f4a6)-(t1.c0)) COLLATE NOCASE))) UNION ALL SELECT * FROM t1 WHERE (((((0Xffffffffa670f4a6)-(t1.c0)) COLLATE NOCASE) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (((('335714356' IN ())) NOT BETWEEN (335714356) AND (((t1.c0) IS FALSE)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((('335714356' IN ())) NOT BETWEEN (335714356) AND (((t1.c0) IS FALSE)))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((((('335714356' IN ())) NOT BETWEEN (335714356) AND (((t1.c0) IS FALSE)))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING (((t1.c0, COUNT(t1.c0), AVG(t0.c0))) BETWEEN ((GROUP_CONCAT(t1.c0), ((TOTAL('ig딅D僈Ut]')) NOT BETWEEN (COUNT(*)) AND (COUNT(*))), (t0.c0 IN (SUM(TOTAL(COUNT(COUNT(t0.c0)))))))) AND ((CAST(t1.c0 AS BLOB), AVG(AVG(COUNT(*))), COUNT(COUNT(MAX(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING (NOT ((((t1.c0, COUNT(t1.c0), AVG(t0.c0))) BETWEEN ((GROUP_CONCAT(t1.c0), ((TOTAL('ig딅D僈Ut]')) NOT BETWEEN (COUNT(*)) AND (COUNT(*))), (t0.c0 IN (SUM(TOTAL(COUNT(COUNT(t0.c0)))))))) AND ((CAST(t1.c0 AS BLOB), AVG(AVG(COUNT(*))), COUNT(COUNT(MAX(t0.c0)))))))) UNION ALL SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING (((((t1.c0, COUNT(t1.c0), AVG(t0.c0))) BETWEEN ((GROUP_CONCAT(t1.c0), ((TOTAL('ig딅D僈Ut]')) NOT BETWEEN (COUNT(*)) AND (COUNT(*))), (t0.c0 IN (SUM(TOTAL(COUNT(COUNT(t0.c0)))))))) AND ((CAST(t1.c0 AS BLOB), AVG(AVG(COUNT(*))), COUNT(COUNT(MAX(t0.c0))))))) ISNULL);
SELECT ALL TOTAL(t0.c0) FROM t0 ORDER BY NULLIF(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)), t0.c0 COLLATE NOCASE)  NULLS FIRST;
SELECT t1.c0, t0.c0 FROM t1 NATURAL JOIN t0;
SELECT t1.c0, t0.c0 FROM t1 NATURAL JOIN t0 WHERE (((((CAST(x'' AS REAL))AND(((t1.c0)==(t1.c0)))))AND(x''))) UNION ALL SELECT t1.c0, t0.c0 FROM t1 NATURAL JOIN t0 WHERE ((NOT (((((CAST(x'' AS REAL))AND(((t1.c0)==(t1.c0)))))AND(x''))))) UNION ALL SELECT t1.c0, t0.c0 FROM t1 NATURAL JOIN t0 WHERE (((((((CAST(x'' AS REAL))AND(((t1.c0)==(t1.c0)))))AND(x''))) ISNULL));
SELECT t1.c0, t0.c0 FROM t1 NATURAL JOIN t0;
SELECT DISTINCT * FROM t0, t1;
SELECT DISTINCT * FROM t0, t1 WHERE (((((UNLIKELY(t1.c0))AND(t1.c0 COLLATE RTRIM)))OR(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) UNION SELECT DISTINCT * FROM t0, t1 WHERE ((NOT (((((UNLIKELY(t1.c0))AND(t1.c0 COLLATE RTRIM)))OR(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))))) UNION SELECT DISTINCT * FROM t0, t1 WHERE (((((((UNLIKELY(t1.c0))AND(t1.c0 COLLATE RTRIM)))OR(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, t1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0)IS(t0.c0)) IN ())) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)IS(t0.c0)) IN ())))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((t0.c0)IS(t0.c0)) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((((((('1429291702')AND(SUM(MAX(TOTAL(MIN(AVG(t1.c0))))))))AND(SUM(GROUP_CONCAT(GROUP_CONCAT(t1.c0))))))OR(TOTAL(SUM(AVG('3Z'))))))AND(AVG(AVG(COUNT(*))))) COLLATE BINARY UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((((((((('1429291702')AND(SUM(MAX(TOTAL(MIN(AVG(t1.c0))))))))AND(SUM(GROUP_CONCAT(GROUP_CONCAT(t1.c0))))))OR(TOTAL(SUM(AVG('3Z'))))))AND(AVG(AVG(COUNT(*))))) COLLATE BINARY)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((((((((('1429291702')AND(SUM(MAX(TOTAL(MIN(AVG(t1.c0))))))))AND(SUM(GROUP_CONCAT(GROUP_CONCAT(t1.c0))))))OR(TOTAL(SUM(AVG('3Z'))))))AND(AVG(AVG(COUNT(*))))) COLLATE BINARY) ISNULL);
SELECT MIN(((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(NULL))) FROM t0 ORDER BY CAST(CAST(t0.c0 AS INTEGER) AS REAL)  NULLS LAST;
SELECT * FROM t0, t1;
SELECT * FROM t0, t1 WHERE (0xffffffffa57483ae) UNION ALL SELECT ALL * FROM t0, t1 WHERE ((NOT (0Xffffffffa57483ae))) UNION ALL SELECT * FROM t0, t1 WHERE (((0Xffffffffa57483ae) ISNULL));
SELECT * FROM t0, t1;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE (CASE WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN (NOT (t0.c0)) WHEN 0.7647184575704727 THEN x'fa7c' WHEN t0.c0 COLLATE RTRIM THEN t0.c0 ELSE (t0.c0 IN ()) END) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT (CASE WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN (NOT (t0.c0)) WHEN 0.7647184575704727 THEN x'fa7c' WHEN t0.c0 COLLATE RTRIM THEN t0.c0 ELSE (t0.c0 IN ()) END))) UNION SELECT DISTINCT * FROM t1, t0 WHERE (((CASE WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN (NOT (t0.c0)) WHEN 0.7647184575704727 THEN x'fa7c' WHEN t0.c0 COLLATE RTRIM THEN t0.c0 ELSE (t0.c0 IN ()) END) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1 WHERE (NULLIF(t0.c0 COLLATE BINARY, CAST(t1.c0 AS BLOB))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t0, t1 WHERE ((NOT (NULLIF(t0.c0 COLLATE BINARY, CAST(t1.c0 AS BLOB))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t0, t1 WHERE (((NULLIF(t0.c0 COLLATE BINARY, CAST(t1.c0 AS BLOB))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING ((((((((((t1.c0) BETWEEN (SUM(t1.c0)) AND (t0.c0)))OR(MAX(MAX(COUNT(TOTAL(t0.c0)))))))OR(COUNT(*))))AND(CAST(t0.c0 AS BLOB))))AND(COUNT(*))) UNION ALL SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING (NOT (((((((((((t1.c0) BETWEEN (SUM(t1.c0)) AND (t0.c0)))OR(MAX(MAX(COUNT(TOTAL(t0.c0)))))))OR(COUNT(*))))AND(CAST(t0.c0 AS BLOB))))AND(COUNT(*))))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING ((((((((((((t1.c0) BETWEEN (SUM(t1.c0)) AND (t0.c0)))OR(MAX(MAX(COUNT(TOTAL(t0.c0)))))))OR(COUNT(*))))AND(CAST(t0.c0 AS BLOB))))AND(COUNT(*)))) ISNULL);
SELECT ALL * FROM t1;
SELECT ALL * FROM t1 WHERE (((((t1.c0) IS FALSE)) BETWEEN (NULL) AND (LIKELY(DISTINCT '-79418428')))) UNION ALL SELECT * FROM t1 WHERE ((NOT (((((t1.c0) IS FALSE)) BETWEEN (NULL) AND (LIKELY(DISTINCT '-79418428')))))) UNION ALL SELECT * FROM t1 WHERE (((((((t1.c0) IS FALSE)) BETWEEN (NULL) AND (LIKELY(DISTINCT '-79418428')))) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT t1.c0 FROM t0, t1;
SELECT DISTINCT t1.c0 FROM t0, t1 WHERE ((((t1.c0, t1.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN ()), x'8ed5', t0.c0)) AND (((+ (t1.c0)), 0.253159085942937, CASE t0.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 END)))) UNION SELECT DISTINCT t1.c0 FROM t0, t1 WHERE ((NOT ((((t1.c0, t1.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN ()), x'8ed5', t0.c0)) AND (((+ (t1.c0)), 0.253159085942937, CASE t0.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 END)))))) UNION SELECT DISTINCT t1.c0 FROM t0, t1 WHERE ((((((t1.c0, t1.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN ()), x'8ed5', t0.c0)) AND (((+ (t1.c0)), 0.253159085942937, CASE t0.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 END)))) ISNULL));
SELECT DISTINCT t1.c0 FROM t0, t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (((((t1.c0)*(t1.c0)))>(((t1.c0)&(t1.c0))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((((t1.c0)*(t1.c0)))>(((t1.c0)&(t1.c0))))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((((t1.c0)*(t1.c0)))>(((t1.c0)&(t1.c0))))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING AVG(TOTAL(t1.c0)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (AVG(TOTAL(t1.c0)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((AVG(TOTAL(t1.c0))) ISNULL);
SELECT t1.c0, t0.c0 FROM t1, t0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 WHERE ((NOT ((t0.c0 IN ())))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t0 WHERE ((NOT ((NOT ((t0.c0 IN ())))))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t0 WHERE ((((NOT ((t0.c0 IN ())))) ISNULL));
SELECT t1.c0, t0.c0 FROM t1, t0;
SELECT DISTINCT * FROM t0, t1;
SELECT DISTINCT * FROM t0, t1 WHERE ((((((t0.c0, t1.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t1.c0, t0.c0, t1.c0)))) NOT BETWEEN (((t1.c0)>=(t1.c0))) AND (((((t0.c0)AND(t1.c0)))AND(t1.c0))))) UNION SELECT DISTINCT * FROM t0, t1 WHERE ((NOT ((((((t0.c0, t1.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t1.c0, t0.c0, t1.c0)))) NOT BETWEEN (((t1.c0)>=(t1.c0))) AND (((((t0.c0)AND(t1.c0)))AND(t1.c0))))))) UNION SELECT DISTINCT * FROM t0, t1 WHERE ((((((((t0.c0, t1.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t1.c0, t0.c0, t1.c0)))) NOT BETWEEN (((t1.c0)>=(t1.c0))) AND (((((t0.c0)AND(t1.c0)))AND(t1.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, t1;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1 WHERE (IFNULL(t1.c0 COLLATE NOCASE, x'')) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t0, t1 WHERE ((NOT (IFNULL(t1.c0 COLLATE NOCASE, x'')))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t0, t1 WHERE (((IFNULL(t1.c0 COLLATE NOCASE, x'')) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING MAX((((GROUP_CONCAT(MIN(AVG(TOTAL(MIN(GROUP_CONCAT(t0.c0)))))), COUNT(*), t0.c0))<=((t1.c0, TOTAL(TOTAL(NULL)), x'')))) UNION ALL SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING (NOT (MAX((((GROUP_CONCAT(MIN(AVG(TOTAL(MIN(GROUP_CONCAT(t0.c0)))))), COUNT(*), t0.c0))<=((t1.c0, TOTAL(TOTAL(NULL)), x'')))))) UNION ALL SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING ((MAX((((GROUP_CONCAT(MIN(AVG(TOTAL(MIN(GROUP_CONCAT(t0.c0)))))), COUNT(*), t0.c0))<=((t1.c0, TOTAL(TOTAL(NULL)), x''))))) ISNULL);
SELECT ALL * FROM t0, t1;
SELECT ALL * FROM t0, t1 WHERE (CASE WHEN t0.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 ELSE t0.c0 END COLLATE NOCASE) UNION ALL SELECT ALL * FROM t0, t1 WHERE ((NOT (CASE WHEN t0.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 ELSE t0.c0 END COLLATE NOCASE))) UNION ALL SELECT * FROM t0, t1 WHERE (((CASE WHEN t0.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 ELSE t0.c0 END COLLATE NOCASE) ISNULL));
SELECT ALL * FROM t0, t1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0 COLLATE RTRIM)>>((t0.c0 IN ())))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c0 COLLATE RTRIM)>>((t0.c0 IN ())))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((t0.c0 COLLATE RTRIM)>>((t0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0)<(t0.c0)), (t0.c0 IN ()), ((t0.c0) IS TRUE)))=((x'', ((((t0.c0)OR(t0.c0)))OR(t0.c0)), ((t0.c0)LIKE(t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0)<(t0.c0)), (t0.c0 IN ()), ((t0.c0) IS TRUE)))=((x'', ((((t0.c0)OR(t0.c0)))OR(t0.c0)), ((t0.c0)LIKE(t0.c0)))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((((t0.c0)<(t0.c0)), (t0.c0 IN ()), ((t0.c0) IS TRUE)))=((x'', ((((t0.c0)OR(t0.c0)))OR(t0.c0)), ((t0.c0)LIKE(t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING GROUP_CONCAT((((((((('-1410222626')AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(GROUP_CONCAT(MIN(COUNT(t1.c0)))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (GROUP_CONCAT((((((((('-1410222626')AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(GROUP_CONCAT(MIN(COUNT(t1.c0)))))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((GROUP_CONCAT((((((((('-1410222626')AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(GROUP_CONCAT(MIN(COUNT(t1.c0))))))) ISNULL);
SELECT ALL MIN(((((CAST(t0.c0 AS NUMERIC))OR(((t0.c0)!=(t0.c0)))))OR(((t0.c0) NOTNULL)))) FROM t0;
SELECT ALL t1.c0 FROM t1 FULL OUTER JOIN t0 ON t1.c0;
SELECT t1.c0 FROM t1 FULL OUTER JOIN t0 ON t1.c0 WHERE ((t1.c0 COLLATE RTRIM IN ())) UNION ALL SELECT ALL t1.c0 FROM t1 FULL OUTER JOIN t0 ON t1.c0 WHERE ((NOT ((t1.c0 COLLATE RTRIM IN ())))) UNION ALL SELECT t1.c0 FROM t1 FULL OUTER JOIN t0 ON t1.c0 WHERE ((((t1.c0 COLLATE RTRIM IN ())) ISNULL));
SELECT ALL t1.c0 FROM t1 FULL OUTER JOIN t0 ON t1.c0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c0)<('U˯KW')))) AND ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((((t0.c0)<('U˯KW')))) AND ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((((t0.c0)<('U˯KW')))) AND ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0, t1.c0 FROM t0 CROSS JOIN t1 ON (((MIN(t1.c0, t1.c0, x'93f1', t0.c0)))>=(((t1.c0 IN ())))) GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0 CROSS JOIN t1 ON (((MIN(t1.c0, t1.c0, x'93f1', t0.c0)))>=(((t1.c0 IN ())))) WHERE (((CASE WHEN x'' THEN t0.c0 WHEN t1.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 END) BETWEEN (((t1.c0)IS(x''))) AND (((((t0.c0)OR(t1.c0)))OR(t0.c0))))) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t0 CROSS JOIN t1 ON (((MIN(t1.c0, t1.c0, x'93f1', t0.c0)))>=(((t1.c0 IN ())))) WHERE ((NOT (((CASE WHEN x'' THEN t0.c0 WHEN t1.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 END) BETWEEN (((t1.c0)IS(x''))) AND (((((t0.c0)OR(t1.c0)))OR(t0.c0))))))) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t0 CROSS JOIN t1 ON (((MIN(t1.c0, t1.c0, x'93f1', t0.c0)))>=(((t1.c0 IN ())))) WHERE (((((CASE WHEN x'' THEN t0.c0 WHEN t1.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 END) BETWEEN (((t1.c0)IS(x''))) AND (((((t0.c0)OR(t1.c0)))OR(t0.c0))))) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0 CROSS JOIN t1 ON (((MIN(t1.c0, t1.c0, x'93f1', t0.c0)))>=(((t1.c0 IN ())))) GROUP BY t0.c0, t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING SUM(GROUP_CONCAT(t1.c0)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (SUM(GROUP_CONCAT(t1.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((SUM(GROUP_CONCAT(t1.c0))) ISNULL);
SELECT ALL t1.c0 FROM t0, t1;
SELECT ALL t1.c0 FROM t0, t1 WHERE (IFNULL((t0.c0 IN (t0.c0)), (t0.c0 IN ()))) UNION ALL SELECT t1.c0 FROM t0, t1 WHERE ((NOT (IFNULL((t0.c0 IN (t0.c0)), (t0.c0 IN ()))))) UNION ALL SELECT ALL t1.c0 FROM t0, t1 WHERE (((IFNULL((t0.c0 IN (t0.c0)), (t0.c0 IN ()))) ISNULL));
SELECT ALL t1.c0 FROM t0, t1;
SELECT DISTINCT t0.c0, t1.c0 FROM t0, t1;
SELECT DISTINCT t0.c0, t1.c0 FROM t0, t1 WHERE (((((t1.c0)+(t0.c0)))OR(CASE t0.c0  WHEN t1.c0 THEN t0.c0 ELSE NULL END))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t0, t1 WHERE ((NOT (((((t1.c0)+(t0.c0)))OR(CASE t0.c0  WHEN t1.c0 THEN t0.c0 ELSE NULL END))))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t0, t1 WHERE (((((((t1.c0)+(t0.c0)))OR(CASE t0.c0  WHEN t1.c0 THEN t0.c0 ELSE NULL END))) ISNULL));
SELECT DISTINCT t0.c0, t1.c0 FROM t0, t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ((((((t1.c0 IN ()))OR(t1.c0 COLLATE BINARY)))OR(((t1.c0) NOTNULL)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((((((t1.c0 IN ()))OR(t1.c0 COLLATE BINARY)))OR(((t1.c0) NOTNULL)))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((((((((t1.c0 IN ()))OR(t1.c0 COLLATE BINARY)))OR(((t1.c0) NOTNULL)))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(COUNT(t0.c0) COLLATE NOCASE) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(COUNT(t0.c0) COLLATE NOCASE))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(COUNT(t0.c0) COLLATE NOCASE)) ISNULL);
SELECT ALL t1.c0 FROM t0, t1 NOT INDEXED;
SELECT ALL t1.c0 FROM t0, t1 WHERE (IFNULL(t0.c0, t1.c0) COLLATE NOCASE) UNION ALL SELECT t1.c0 FROM t0, t1 WHERE ((NOT (IFNULL(t0.c0, t1.c0) COLLATE NOCASE))) UNION ALL SELECT ALL t1.c0 FROM t0, t1 WHERE (((IFNULL(t0.c0, t1.c0) COLLATE NOCASE) ISNULL));
SELECT ALL t1.c0 FROM t0, t1 NOT INDEXED;
SELECT DISTINCT t0.c0 FROM t0, t1;
SELECT DISTINCT t0.c0 FROM t0, t1 WHERE ((((t1.c0, t1.c0, t0.c0, t1.c0, t1.c0)) NOT BETWEEN ((((t0.c0) BETWEEN (t1.c0) AND (t1.c0)), CASE t0.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, (t1.c0 IN ()), ((t0.c0)|(t1.c0)), CAST(t0.c0 AS NUMERIC))) AND ((t0.c0, INSTR(t1.c0, t1.c0), (~ (t1.c0)), CASE t1.c0  WHEN t0.c0 THEN t1.c0 END, '4q')))) UNION SELECT DISTINCT t0.c0 FROM t0, t1 WHERE ((NOT ((((t1.c0, t1.c0, t0.c0, t1.c0, t1.c0)) NOT BETWEEN ((((t0.c0) BETWEEN (t1.c0) AND (t1.c0)), CASE t0.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, (t1.c0 IN ()), ((t0.c0)|(t1.c0)), CAST(t0.c0 AS NUMERIC))) AND ((t0.c0, INSTR(t1.c0, t1.c0), (~ (t1.c0)), CASE t1.c0  WHEN t0.c0 THEN t1.c0 END, '4q')))))) UNION SELECT DISTINCT t0.c0 FROM t0, t1 WHERE ((((((t1.c0, t1.c0, t0.c0, t1.c0, t1.c0)) NOT BETWEEN ((((t0.c0) BETWEEN (t1.c0) AND (t1.c0)), CASE t0.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, (t1.c0 IN ()), ((t0.c0)|(t1.c0)), CAST(t0.c0 AS NUMERIC))) AND ((t0.c0, INSTR(t1.c0, t1.c0), (~ (t1.c0)), CASE t1.c0  WHEN t0.c0 THEN t1.c0 END, '4q')))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (((((((t1.c0)>=(t1.c0)))AND((NOT (t1.c0)))))AND(UNLIKELY(t1.c0)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((((((t1.c0)>=(t1.c0)))AND((NOT (t1.c0)))))AND(UNLIKELY(t1.c0)))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((((((t1.c0)>=(t1.c0)))AND((NOT (t1.c0)))))AND(UNLIKELY(t1.c0)))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING GROUP_CONCAT(CASE WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN AVG(t1.c0) WHEN t1.c0 THEN t1.c0 ELSE SUM(COUNT(*)) END) UNION ALL SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (NOT (GROUP_CONCAT(CASE WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN AVG(t1.c0) WHEN t1.c0 THEN t1.c0 ELSE SUM(COUNT(*)) END))) UNION ALL SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING ((GROUP_CONCAT(CASE WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN AVG(t1.c0) WHEN t1.c0 THEN t1.c0 ELSE SUM(COUNT(*)) END)) ISNULL);
SELECT * FROM t0 LEFT OUTER JOIN t1 ON CASE WHEN (~ ('S6kt<mX,a')) THEN t0.c0 ELSE ((((t0.c0)AND(t1.c0)))OR(t1.c0)) END;
SELECT * FROM t0 LEFT OUTER JOIN t1 ON CASE WHEN (~ ('S6kt<mX,a')) THEN t0.c0 ELSE ((((t0.c0)AND(t1.c0)))OR(t1.c0)) END WHERE (t1.c0) UNION ALL SELECT * FROM t0 LEFT OUTER JOIN t1 ON CASE WHEN (~ ('S6kt<mX,a')) THEN t0.c0 ELSE ((((t0.c0)AND(t1.c0)))OR(t1.c0)) END WHERE ((NOT (t1.c0))) UNION ALL SELECT ALL * FROM t0 LEFT OUTER JOIN t1 ON CASE WHEN (~ ('S6kt<mX,a')) THEN t0.c0 ELSE ((((t0.c0)AND(t1.c0)))OR(t1.c0)) END WHERE (((t1.c0) ISNULL));
SELECT * FROM t0 LEFT OUTER JOIN t1 ON CASE WHEN (~ ('S6kt<mX,a')) THEN t0.c0 ELSE ((((t0.c0)AND(t1.c0)))OR(t1.c0)) END;
SELECT DISTINCT t1.c0, t0.c0 FROM t0, t1;
SELECT DISTINCT t1.c0, t0.c0 FROM t0, t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))==(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t0, t1 WHERE ((NOT (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))=(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t0, t1 WHERE (((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))==(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) ISNULL));
SELECT DISTINCT t1.c0, t0.c0 FROM t0, t1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((t0.c0 COLLATE BINARY)*(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((t0.c0 COLLATE BINARY)*(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((t0.c0 COLLATE BINARY)*(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ('1528134634') UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ('1528134634'))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((('1528134634') ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0, t1;
SELECT DISTINCT t0.c0 FROM t0, t1 WHERE (((((((t0.c0)OR(t0.c0)))OR(t0.c0))) ISNULL)) UNION SELECT DISTINCT t0.c0 FROM t0, t1 WHERE ((NOT (((((((t0.c0)OR(t0.c0)))OR(t0.c0))) ISNULL)))) UNION SELECT DISTINCT t0.c0 FROM t0, t1 WHERE (((((((((t0.c0)OR(t0.c0)))OR(t0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((((((t1.c0)OR(t1.c0)))AND(t1.c0))) NOT NULL)) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((((((t1.c0)OR(t1.c0)))AND(t1.c0))) NOT NULL)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((((((t1.c0)OR(t1.c0)))AND(t1.c0))) NOT NULL)) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((SUM(GROUP_CONCAT(t1.c0))) NOT BETWEEN ((NOT (t1.c0))) AND (SUM(MIN(SUM(t1.c0))) COLLATE NOCASE)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((SUM(GROUP_CONCAT(t1.c0))) NOT BETWEEN ((NOT (t1.c0))) AND (SUM(MIN(SUM(t1.c0))) COLLATE NOCASE)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((SUM(GROUP_CONCAT(t1.c0))) NOT BETWEEN ((NOT (t1.c0))) AND (SUM(MIN(SUM(t1.c0))) COLLATE NOCASE))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (CAST(UNLIKELY(t0.c0) AS INTEGER)) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (CAST(UNLIKELY(t0.c0) AS INTEGER)))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((CAST(UNLIKELY(t0.c0) AS INTEGER)) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0)||(t0.c0)) IN ())) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((t0.c0)||(t0.c0)) IN ())))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0)||(t0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (0.17106880985397255) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (0.17106880985397255))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((0.17106880985397255) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t1.c0 FROM t0 RIGHT OUTER JOIN t1 ON ((((((t1.c0)AND(t0.c0)))AND(t0.c0)))GLOB(((t0.c0) IS TRUE))) GROUP BY t1.c0;
SELECT t1.c0 FROM t0 RIGHT OUTER JOIN t1 ON ((((((t1.c0)AND(t0.c0)))AND(t0.c0)))GLOB(((t0.c0) IS TRUE))) GROUP BY t1.c0 HAVING GROUP_CONCAT(((GROUP_CONCAT(MAX(t0.c0))) IS FALSE)) UNION ALL SELECT t1.c0 FROM t0 RIGHT OUTER JOIN t1 ON ((((((t1.c0)AND(t0.c0)))AND(t0.c0)))GLOB(((t0.c0) IS TRUE))) GROUP BY t1.c0 HAVING (NOT (GROUP_CONCAT(((GROUP_CONCAT(MAX(t0.c0))) IS FALSE)))) UNION ALL SELECT t1.c0 FROM t0 RIGHT OUTER JOIN t1 ON ((((((t1.c0)AND(t0.c0)))AND(t0.c0)))GLOB(((t0.c0) IS TRUE))) GROUP BY t1.c0 HAVING ((GROUP_CONCAT(((GROUP_CONCAT(MAX(t0.c0))) IS FALSE))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((t0.c0 IN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL END))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((t0.c0 IN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL END))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((t0.c0 IN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL END))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (ABS(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (ABS(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((ABS(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM((((AVG(t0.c0))) BETWEEN ((t0.c0)) AND ((t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM((((AVG(t0.c0))) BETWEEN ((t0.c0)) AND ((t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM((((AVG(t0.c0))) BETWEEN ((t0.c0)) AND ((t0.c0))))) ISNULL);
SELECT t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE (TYPEOF(x'')) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT (TYPEOF(x'')))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((TYPEOF(x'')) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((t1.c0 COLLATE NOCASE) IS TRUE)) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((t1.c0 COLLATE NOCASE) IS TRUE)))) UNION SELECT DISTINCT * FROM t1 WHERE (((((t1.c0 COLLATE NOCASE) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c0) NOTNULL))) AND ((t0.c0)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((((t0.c0) NOTNULL))) AND ((t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 NOT INDEXED WHERE ((((((t0.c0)) NOT BETWEEN ((((t0.c0) NOTNULL))) AND ((t0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING TOTAL(AVG(t1.c0)) UNION ALL SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING (NOT (TOTAL(AVG(t1.c0)))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING ((TOTAL(AVG(t1.c0))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))LIKE(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))LIKE(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))LIKE(t0.c0))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((t1.c0) NOT BETWEEN (t1.c0) AND ('.~|2 ')) COLLATE RTRIM) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((t1.c0) NOT BETWEEN (t1.c0) AND ('.~|2 ')) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND ('.~|2 ')) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON 0.6787007746862843 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON 0.6787007746862843 WHERE (((((t1.c0)<(t1.c0))) ISNULL)) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON 0.6787007746862843 WHERE ((NOT (((((t1.c0)<(t1.c0))) ISNULL)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON 0.6787007746862843 WHERE (((((((t1.c0)<(t1.c0))) ISNULL)) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON 0.6787007746862843 GROUP BY t1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((t0.c0)) BETWEEN ((SUM(t0.c0))) AND ((GROUP_CONCAT(AVG(MAX(GROUP_CONCAT(TOTAL('-839005112')))))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((t0.c0)) BETWEEN ((SUM(t0.c0))) AND ((GROUP_CONCAT(AVG(MAX(GROUP_CONCAT(TOTAL('-839005112')))))))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((t0.c0)) BETWEEN ((SUM(t0.c0))) AND ((GROUP_CONCAT(AVG(MAX(GROUP_CONCAT(TOTAL('-839005112'))))))))) ISNULL);
SELECT ALL t0.c0, t1.c0 FROM t1, t0;
SELECT ALL t0.c0, t1.c0 FROM t1, t0 WHERE (((5.01399022E8) NOT BETWEEN (t0.c0) AND ((- (t1.c0))))) UNION ALL SELECT t0.c0, t1.c0 FROM t1, t0 WHERE ((NOT (((5.01399022E8) NOT BETWEEN (t0.c0) AND ((- (t1.c0))))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t1, t0 WHERE (((((5.01399022E8) NOT BETWEEN (t0.c0) AND ((- (t1.c0))))) ISNULL));
SELECT ALL t0.c0, t1.c0 FROM t1, t0;
SELECT DISTINCT * FROM t1 NOT INDEXED;
SELECT DISTINCT * FROM t1 WHERE ((((- (t1.c0))) NOT BETWEEN (LOWER(t1.c0)) AND (((t1.c0)IS(t1.c0))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((((- (t1.c0))) NOT BETWEEN (LOWER(t1.c0)) AND (((t1.c0)IS(t1.c0))))))) UNION SELECT DISTINCT * FROM t1 WHERE ((((((- (t1.c0))) NOT BETWEEN (LOWER(t1.c0)) AND (((t1.c0)IS(t1.c0))))) ISNULL));
SELECT DISTINCT * FROM t1 NOT INDEXED;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 WHERE ((('Bᶇ') IS TRUE)) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t1 NOT INDEXED, t0 WHERE ((NOT ((('Bᶇ') IS TRUE)))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t1, t0 WHERE ((((('Bᶇ') IS TRUE)) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(((t0.c0)&(GROUP_CONCAT(SUM(COUNT(COUNT(*))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(((t0.c0)&(GROUP_CONCAT(SUM(COUNT(COUNT(*))))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(((t0.c0)&(GROUP_CONCAT(SUM(COUNT(COUNT(*)))))))) ISNULL);
SELECT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (((t1.c0)>>(t1.c0)) COLLATE RTRIM) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((t1.c0)>>(t1.c0)) COLLATE RTRIM))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((((t1.c0)>>(t1.c0)) COLLATE RTRIM) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT t0.c0 FROM t0, t1;
SELECT DISTINCT t0.c0 FROM t0, t1 WHERE (((CAST(t1.c0 AS BLOB))<<(t0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT t0.c0 FROM t0, t1 WHERE ((NOT (((CAST(t1.c0 AS BLOB))<<(t0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT t0.c0 FROM t0, t1 WHERE (((((CAST(t1.c0 AS BLOB))<<(t0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, t1;
SELECT t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON 98312739 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON 98312739 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t1.c0)))IS NOT(((((t0.c0)OR(t0.c0)))AND(t0.c0))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON 98312739 WHERE ((NOT (((((t0.c0) BETWEEN (t0.c0) AND (t1.c0)))IS NOT(((((t0.c0)OR(t0.c0)))AND(t0.c0))))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON 98312739 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t1.c0)))IS NOT(((((t0.c0)OR(t0.c0)))AND(t0.c0))))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON 98312739 GROUP BY t1.c0;
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING SUM(((t0.c0)<<(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING (NOT (SUM(((t0.c0)<<(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING ((SUM(((t0.c0)<<(t0.c0)))) ISNULL);
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING SUM(((t0.c0)<<(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING (NOT (SUM(((t0.c0)<<(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING ((SUM(((t0.c0)<<(t0.c0)))) ISNULL);
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((t0.c0 IN ()) IN ())) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((t0.c0 IN ()) IN ())))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((t0.c0 IN ()) IN ())) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT t1.c0 FROM t1 INDEXED BY i26, t0;
SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0, t1 WHERE (((((t0.c0)>>(t0.c0)))IS NOT(((t1.c0) BETWEEN (t0.c0) AND (t0.c0))))) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t0, t1 WHERE ((NOT (((((t0.c0)>>(t0.c0)))IS NOT(((t1.c0) BETWEEN (t0.c0) AND (t0.c0))))))) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t0, t1 WHERE (((((((t0.c0)>>(t0.c0)))IS NOT(((t1.c0) BETWEEN (t0.c0) AND (t0.c0))))) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(((t0.c0)-(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(((t0.c0)-(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(((t0.c0)-(t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(((t0.c0)-(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(((t0.c0)-(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(((t0.c0)-(t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL SUM(CAST(CAST(t1.c0 AS NUMERIC) AS INTEGER)) FROM t0, t1 ORDER BY (CASE t0.c0  WHEN t1.c0 THEN t0.c0 END IN ()) DESC;
SELECT ALL t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE (((((t1.c0)IS(t1.c0)))<=(t1.c0))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((((t1.c0)IS(t1.c0)))<=(t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((((((t1.c0)IS(t1.c0)))<=(t1.c0))) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((((LIKE(t1.c0, t1.c0))AND(x'21c3')))AND(t1.c0))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((((LIKE(t1.c0, t1.c0))AND(x'21c3')))AND(t1.c0))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((((LIKE(t1.c0, t1.c0))AND(x'21c3')))AND(t1.c0))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t1.c0, t0.c0 FROM t0 CROSS JOIN t1 ON (- (((t1.c0)GLOB(t0.c0)))) GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0 CROSS JOIN t1 ON (- (((t1.c0)GLOB(t0.c0)))) WHERE (CASE t0.c0  WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t0.c0 ELSE t1.c0 END COLLATE BINARY) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t0 CROSS JOIN t1 ON (- (((t1.c0)GLOB(t0.c0)))) WHERE ((NOT (CASE t0.c0  WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t0.c0 ELSE t1.c0 END COLLATE BINARY))) GROUP BY t1.c0, t0.c0 UNION SELECT ALL t1.c0, t0.c0 FROM t0 CROSS JOIN t1 ON (- (((t1.c0)GLOB(t0.c0)))) WHERE (((CASE t0.c0  WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t0.c0 ELSE t1.c0 END COLLATE BINARY) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0 CROSS JOIN t1 ON (- (((t1.c0)GLOB(t0.c0)))) GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING AVG(RTRIM(t1.c0)) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING (NOT (AVG(RTRIM(t1.c0)))) UNION ALL SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING ((AVG(RTRIM(t1.c0))) ISNULL);
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING AVG(RTRIM(t1.c0)) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING (NOT (AVG(RTRIM(t1.c0)))) UNION ALL SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING ((AVG(RTRIM(t1.c0))) ISNULL);
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT * FROM t1 FULL OUTER JOIN t0 ON CAST(0.8208756585501399 AS BLOB);
SELECT ALL * FROM t1 FULL OUTER JOIN t0 ON CAST(0.8208756585501399 AS BLOB) WHERE ((~ (CAST(t0.c0 AS BLOB)))) UNION ALL SELECT ALL * FROM t1 FULL OUTER JOIN t0 ON CAST(0.8208756585501399 AS BLOB) WHERE ((NOT ((~ (CAST(t0.c0 AS BLOB)))))) UNION ALL SELECT * FROM t1 FULL OUTER JOIN t0 ON CAST(0.8208756585501399 AS BLOB) WHERE ((((~ (CAST(t0.c0 AS BLOB)))) ISNULL));
SELECT * FROM t1 FULL OUTER JOIN t0 ON CAST(0.8208756585501399 AS BLOB);
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((CASE WHEN t1.c0 THEN t1.c0 END)))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((CASE WHEN t1.c0 THEN t1.c0 END)))))) UNION SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((CASE WHEN t1.c0 THEN t1.c0 END)))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1 WHERE ((+ (((0.3054099353376123) ISNULL)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t0, t1 WHERE ((NOT ((+ (((0.3054099353376123) ISNULL)))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t0, t1 WHERE ((((+ (((0.3054099353376123) ISNULL)))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING GROUP_CONCAT(SUM(MIN(MIN(t1.c0)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (GROUP_CONCAT(SUM(MIN(MIN(t1.c0)))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((GROUP_CONCAT(SUM(MIN(MIN(t1.c0))))) ISNULL);
SELECT ALL MIN((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) IN (SQLITE_COMPILEOPTION_GET(t1.c0)))) FROM t1;
SELECT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE ((((((((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))AND(-266307285)))OR(t1.c0 COLLATE BINARY)))AND(t1.c0)))AND(CAST(t1.c0 AS TEXT)))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((((((((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))AND(-266307285)))OR(t1.c0 COLLATE BINARY)))AND(t1.c0)))AND(CAST(t1.c0 AS TEXT)))))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((((((((((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))AND(-266307285)))OR(t1.c0 COLLATE BINARY)))AND(t1.c0)))AND(CAST(t1.c0 AS TEXT)))) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE (CASE t1.c0 COLLATE NOCASE  WHEN '370670925' THEN (+ ('7')) END) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT (CASE t1.c0 COLLATE NOCASE  WHEN '370670925' THEN (+ ('7')) END))) UNION SELECT DISTINCT * FROM t1, t0 WHERE (((CASE t1.c0 COLLATE NOCASE  WHEN '370670925' THEN (+ ('7')) END) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT t0.c0, t1.c0 FROM t0 NATURAL JOIN t1 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0 NATURAL JOIN t1 WHERE (CASE WHEN ']Ggl' THEN CASE t1.c0  WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 END END) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t0 NATURAL JOIN t1 WHERE ((NOT (CASE WHEN ']Ggl' THEN CASE t1.c0  WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 END END))) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t0 NATURAL JOIN t1 WHERE (((CASE WHEN ']Ggl' THEN CASE t1.c0  WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 END END) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0 NATURAL JOIN t1 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN t1 ON UPPER(DISTINCT SQLITE_VERSION()) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN t1 ON UPPER(DISTINCT SQLITE_VERSION()) GROUP BY t0.c0 HAVING MAX(((t1.c0) NOTNULL)) UNION ALL SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN t1 ON UPPER(DISTINCT SQLITE_VERSION()) GROUP BY t0.c0 HAVING (NOT (MAX(((t1.c0) NOTNULL)))) UNION ALL SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN t1 ON UPPER(DISTINCT SQLITE_VERSION()) GROUP BY t0.c0 HAVING ((MAX(((t1.c0) NOTNULL))) ISNULL);
SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN t1 ON UPPER(DISTINCT SQLITE_VERSION()) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN t1 ON UPPER(DISTINCT SQLITE_VERSION()) GROUP BY t0.c0 HAVING MAX(((t1.c0) NOTNULL)) UNION ALL SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN t1 ON UPPER(DISTINCT SQLITE_VERSION()) GROUP BY t0.c0 HAVING (NOT (MAX(((t1.c0) NOTNULL)))) UNION ALL SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN t1 ON UPPER(DISTINCT SQLITE_VERSION()) GROUP BY t0.c0 HAVING ((MAX(((t1.c0) NOTNULL))) ISNULL);
SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN t1 ON UPPER(DISTINCT SQLITE_VERSION()) GROUP BY t0.c0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((t0.c0)/(t0.c0)) COLLATE BINARY COLLATE NOCASE) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((t0.c0)/(t0.c0)) COLLATE BINARY COLLATE NOCASE))) UNION ALL SELECT * FROM t0 WHERE (((((t0.c0)/(t0.c0)) COLLATE BINARY COLLATE NOCASE) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((((t1.c0) NOTNULL)) NOTNULL)) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((((t1.c0) NOTNULL)) NOTNULL)))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((((t1.c0) NOTNULL)) NOTNULL)) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 NOT INDEXED WHERE ((((t1.c0 IN (t1.c0, t1.c0)))OR((((t1.c0, t1.c0, t1.c0, t1.c0, '-929735319')) NOT BETWEEN ((t1.c0, t1.c0, t1.c0, t1.c0, 0.02111282012946336)) AND ((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0)))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT ((((t1.c0 IN (t1.c0, t1.c0)))OR((((t1.c0, t1.c0, t1.c0, t1.c0, '-929735319')) NOT BETWEEN ((t1.c0, t1.c0, t1.c0, t1.c0, 0.02111282012946336)) AND ((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0)))))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((((((t1.c0 IN (t1.c0, t1.c0)))OR((((t1.c0, t1.c0, t1.c0, t1.c0, '-929735319')) NOT BETWEEN ((t1.c0, t1.c0, t1.c0, t1.c0, 0.02111282012946336)) AND ((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0)))))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING (NOT ((NOT (COUNT(*))))) UNION ALL SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING (((NOT (COUNT(*)))) ISNULL);
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING (NOT ((NOT (COUNT(*))))) UNION ALL SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING (((NOT (COUNT(*)))) ISNULL);
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT ALL TOTAL((((((((((((t1.c0, t0.c0, t1.c0)) NOT BETWEEN ((t0.c0, t0.c0, t1.c0)) AND ((t1.c0, t0.c0, t1.c0))))OR('LokV''lt隠R')))AND('')))AND((NOT ('1941468871')))))AND(CAST(NULL AS TEXT)))) FROM t0, t1 ORDER BY (((t1.c0)) BETWEEN ((CAST(t0.c0 AS BLOB))) AND (((+ (t1.c0))))) ASC;
SELECT ALL * FROM t1;
SELECT * FROM t1 WHERE ((NOT (((((t1.c0)OR(t1.c0)))OR(t1.c0))))) UNION ALL SELECT * FROM t1 WHERE ((NOT ((NOT (((((t1.c0)OR(t1.c0)))OR(t1.c0))))))) UNION ALL SELECT * FROM t1 WHERE ((((NOT (((((t1.c0)OR(t1.c0)))OR(t1.c0))))) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT * FROM t0 CROSS JOIN t1 ON (((t1.c0, t0.c0, t1.c0)) BETWEEN ((t1.c0 COLLATE RTRIM, t0.c0 COLLATE RTRIM, t1.c0)) AND ((LIKELY(DISTINCT t1.c0), ((((t1.c0)OR(t0.c0)))OR(t0.c0)), ((NULL)%(t0.c0)))));
SELECT DISTINCT * FROM t0 CROSS JOIN t1 ON (((t1.c0, t0.c0, t1.c0)) BETWEEN ((t1.c0 COLLATE RTRIM, t0.c0 COLLATE RTRIM, t1.c0)) AND ((LIKELY(DISTINCT t1.c0), ((((t1.c0)OR(t0.c0)))OR(t0.c0)), ((NULL)%(t0.c0))))) WHERE (((((((((((t1.c0)|(t0.c0)))AND(((t1.c0) IS FALSE))))OR(CAST(t1.c0 AS TEXT))))OR(((t0.c0)LIKE(t1.c0)))))OR((+ (t0.c0))))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN t1 ON (((t1.c0, t0.c0, t1.c0)) BETWEEN ((t1.c0 COLLATE RTRIM, t0.c0 COLLATE RTRIM, t1.c0)) AND ((LIKELY(DISTINCT t1.c0), ((((t1.c0)OR(t0.c0)))OR(t0.c0)), ((NULL)%(t0.c0))))) WHERE ((NOT (((((((((((t1.c0)|(t0.c0)))AND(((t1.c0) IS FALSE))))OR(CAST(t1.c0 AS TEXT))))OR(((t0.c0)LIKE(t1.c0)))))OR((+ (t0.c0))))))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN t1 ON (((t1.c0, t0.c0, t1.c0)) BETWEEN ((t1.c0 COLLATE RTRIM, t0.c0 COLLATE RTRIM, t1.c0)) AND ((LIKELY(DISTINCT t1.c0), ((((t1.c0)OR(t0.c0)))OR(t0.c0)), ((NULL)%(t0.c0))))) WHERE (((((((((((((t1.c0)|(t0.c0)))AND(((t1.c0) IS FALSE))))OR(CAST(t1.c0 AS TEXT))))OR(((t0.c0)LIKE(t1.c0)))))OR((+ (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN t1 ON (((t1.c0, t0.c0, t1.c0)) BETWEEN ((t1.c0 COLLATE RTRIM, t0.c0 COLLATE RTRIM, t1.c0)) AND ((LIKELY(DISTINCT t1.c0), ((((t1.c0)OR(t0.c0)))OR(t0.c0)), ((NULL)%(t0.c0)))));
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((t0.c0 IN ())) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((t0.c0 IN ())))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((t0.c0 IN ())) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING SUM(((t1.c0)&(t1.c0))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (SUM(((t1.c0)&(t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((SUM(((t1.c0)&(t1.c0)))) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING SUM(((t1.c0)&(t1.c0))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (SUM(((t1.c0)&(t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((SUM(((t1.c0)&(t1.c0)))) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL * FROM t0, t1;
SELECT ALL * FROM t0, t1 WHERE ((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))AND(((t1.c0)IS(t0.c0)))))AND(x''))) UNION ALL SELECT ALL * FROM t0, t1 WHERE ((NOT ((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))AND(((t1.c0)IS(t0.c0)))))AND(x''))))) UNION ALL SELECT * FROM t0, t1 WHERE ((((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))AND(((t1.c0)IS(t0.c0)))))AND(x''))) ISNULL));
SELECT ALL * FROM t0, t1;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE (((((((((((t0.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0))) IS FALSE)) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT (((((((((((t0.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0))) IS FALSE)))) UNION SELECT DISTINCT * FROM t1, t0 WHERE (((((((((((((t0.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT t1.c0 FROM t0 NOT INDEXED, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1 WHERE ((CAST(t0.c0 AS BLOB) IN ())) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t0, t1 WHERE ((NOT ((CAST(t0.c0 AS BLOB) IN ())))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t0, t1 WHERE ((((CAST(t0.c0 AS BLOB) IN ())) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t0 NOT INDEXED, t1 GROUP BY t1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CASE WHEN SUM(SUM(t0.c0)) THEN COUNT(t0.c0) WHEN TOTAL(COUNT(*)) THEN NULL WHEN 0.9360632590513193 THEN COUNT(TOTAL(t0.c0)) END)<(((((t0.c0)AND(TOTAL(t0.c0))))OR(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((CASE WHEN SUM(SUM(t0.c0)) THEN COUNT(t0.c0) WHEN TOTAL(COUNT(*)) THEN NULL WHEN 0.9360632590513193 THEN COUNT(TOTAL(t0.c0)) END)<(((((t0.c0)AND(TOTAL(t0.c0))))OR(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((CASE WHEN SUM(SUM(t0.c0)) THEN COUNT(t0.c0) WHEN TOTAL(COUNT(*)) THEN NULL WHEN 0.9360632590513193 THEN COUNT(TOTAL(t0.c0)) END)<(((((t0.c0)AND(TOTAL(t0.c0))))OR(t0.c0))))) ISNULL);
SELECT SUM((((((t0.c0) NOT NULL)))>((((((t0.c0)AND(t1.c0)))AND(t1.c0)))))) FROM t0, t1 ORDER BY ((((t1.c0)/(t1.c0)))OR((~ (t1.c0)))) DESC  NULLS LAST, CASE WHEN (NOT (NULL)) THEN ((t0.c0) NOT NULL) ELSE ((('787347904')) BETWEEN ((t1.c0)) AND ((t0.c0))) END  NULLS FIRST, (((t0.c0)) NOT BETWEEN ((((((t1.c0)AND(t1.c0)))AND(t0.c0)))) AND ((t1.c0))) ASC;
SELECT * FROM t1, t0;
SELECT * FROM t1, t0 WHERE (1829094188) UNION ALL SELECT * FROM t1, t0 WHERE ((NOT (1829094188))) UNION ALL SELECT ALL * FROM t1, t0 WHERE (((1829094188) ISNULL));
SELECT * FROM t1, t0;
SELECT DISTINCT t0.c0 FROM t0 RIGHT OUTER JOIN t1 ON CASE (~ (t1.c0))  WHEN t1.c0 THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END;
SELECT DISTINCT t0.c0 FROM t0 RIGHT OUTER JOIN t1 ON CASE (~ (t1.c0))  WHEN t1.c0 THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END WHERE (NULL) UNION SELECT DISTINCT t0.c0 FROM t0 RIGHT OUTER JOIN t1 ON CASE (~ (t1.c0))  WHEN t1.c0 THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END WHERE ((NOT (NULL))) UNION SELECT DISTINCT t0.c0 FROM t0 RIGHT OUTER JOIN t1 ON CASE (~ (t1.c0))  WHEN t1.c0 THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END WHERE (((NULL) ISNULL));
SELECT DISTINCT t0.c0 FROM t0 RIGHT OUTER JOIN t1 ON CASE (~ (t1.c0))  WHEN t1.c0 THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END;
SELECT t1.c0 FROM t1 INNER JOIN t0 ON (((((((((- (x'be3b')))OR('\')))AND((NOT (t0.c0)))))AND(((('', t0.c0, t1.c0))=((t1.c0, t1.c0, ''))))))AND((t1.c0 IN ()))) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 INNER JOIN t0 ON (((((((((- (x'be3b')))OR('\')))AND((NOT (t0.c0)))))AND(((('', t0.c0, t1.c0))==((t1.c0, t1.c0, ''))))))AND((t1.c0 IN ()))) WHERE (((((t0.c0)<(t0.c0)))|(((t1.c0)AND(t1.c0))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 INNER JOIN t0 ON (((((((((- (x'be3b')))OR('\')))AND((NOT (t0.c0)))))AND(((('', t0.c0, t1.c0))=((t1.c0, t1.c0, ''))))))AND((t1.c0 IN ()))) WHERE ((NOT (((((t0.c0)<(t0.c0)))|(((t1.c0)AND(t1.c0))))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 INNER JOIN t0 ON (((((((((- (x'be3b')))OR('\')))AND((NOT (t0.c0)))))AND(((('', t0.c0, t1.c0))=((t1.c0, t1.c0, ''))))))AND((t1.c0 IN ()))) WHERE (((((((t0.c0)<(t0.c0)))|(((t1.c0)AND(t1.c0))))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 INNER JOIN t0 ON (((((((((- (x'be3b')))OR('\')))AND((NOT (t0.c0)))))AND(((('', t0.c0, t1.c0))=((t1.c0, t1.c0, ''))))))AND((t1.c0 IN ()))) GROUP BY t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING MIN(AVG(t0.c0)) UNION ALL SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING (NOT (MIN(AVG(t0.c0)))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING ((MIN(AVG(t0.c0))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (LOWER(DISTINCT t0.c0 COLLATE NOCASE)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (LOWER(DISTINCT t0.c0 COLLATE NOCASE)))) UNION ALL SELECT ALL * FROM t0 WHERE (((LOWER(DISTINCT t0.c0 COLLATE NOCASE)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t1.c0 FROM t0, t1;
SELECT DISTINCT t1.c0 FROM t0, t1 WHERE (((((t0.c0)/(t1.c0))) ISNULL)) UNION SELECT DISTINCT t1.c0 FROM t0, t1 WHERE ((NOT (((((t0.c0)/(t1.c0))) ISNULL)))) UNION SELECT DISTINCT t1.c0 FROM t0, t1 WHERE (((((((t0.c0)/(t1.c0))) ISNULL)) ISNULL));
SELECT DISTINCT t1.c0 FROM t0, t1;
SELECT t1.c0, t0.c0 FROM t0 FULL OUTER JOIN t1 ON ('-829259871' IN ((('-832927443')>('-vL\r')))) GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t0 FULL OUTER JOIN t1 ON ('-829259871' IN ((('-832927443')>('-vL\r')))) WHERE ((((+ (t1.c0)))LIKE(((t1.c0)<>(t0.c0))))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t0 FULL OUTER JOIN t1 ON ('-829259871' IN ((('-832927443')>('-vL\r')))) WHERE ((NOT ((((+ (t1.c0)))LIKE(((t1.c0)!=(t0.c0))))))) GROUP BY t1.c0, t0.c0 UNION SELECT ALL t1.c0, t0.c0 FROM t0 FULL OUTER JOIN t1 ON ('-829259871' IN ((('-832927443')>('-vL\r')))) WHERE ((((((+ (t1.c0)))LIKE(((t1.c0)!=(t0.c0))))) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0 FULL OUTER JOIN t1 ON ('-829259871' IN ((('-832927443')>('-vL\r')))) GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING SUM(CASE AVG(t1.c0)  WHEN GROUP_CONCAT(COUNT(*)) THEN t0.c0 ELSE TOTAL(MAX(t1.c0)) END) UNION ALL SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING (NOT (SUM(CASE AVG(t1.c0)  WHEN GROUP_CONCAT(COUNT(*)) THEN t0.c0 ELSE TOTAL(MAX(t1.c0)) END))) UNION ALL SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING ((SUM(CASE AVG(t1.c0)  WHEN GROUP_CONCAT(COUNT(*)) THEN t0.c0 ELSE TOTAL(MAX(t1.c0)) END)) ISNULL);
SELECT ALL TOTAL(((((t1.c0) NOTNULL))/(TYPEOF(t1.c0)))) FROM t1 ORDER BY t1.c0;
SELECT ALL t0.c0 FROM t0, t1;
SELECT ALL t0.c0 FROM t0, t1 NOT INDEXED WHERE (CAST((- (t0.c0)) AS TEXT)) UNION ALL SELECT ALL t0.c0 FROM t0, t1 WHERE ((NOT (CAST((- (t0.c0)) AS TEXT)))) UNION ALL SELECT t0.c0 FROM t0, t1 WHERE (((CAST((- (t0.c0)) AS TEXT)) ISNULL));
SELECT ALL t0.c0 FROM t0, t1;
SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0;
SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0 WHERE ((t1.c0 IN ())) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0 WHERE ((NOT ((t1.c0 IN ())))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0 WHERE ((((t1.c0 IN ())) ISNULL));
SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE (TRIM(t1.c0)) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT (TRIM(t1.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE (((TRIM(t1.c0)) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (x'') UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (x''))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((x'') ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL t1.c0, t0.c0 FROM t1 NATURAL JOIN t0 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1 NATURAL JOIN t0 WHERE ('%W_6b8') GROUP BY t1.c0, t0.c0 UNION SELECT ALL t1.c0, t0.c0 FROM t1 NATURAL JOIN t0 WHERE ((NOT ('%W_6b8'))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t1 NATURAL JOIN t0 WHERE ((('%W_6b8') ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1 NATURAL JOIN t0 GROUP BY t1.c0, t0.c0;
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING AVG(COUNT(t1.c0)) UNION ALL SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING (NOT (AVG(COUNT(t1.c0)))) UNION ALL SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING ((AVG(COUNT(t1.c0))) ISNULL);
SELECT ALL * FROM t0 RIGHT OUTER JOIN t1 ON IFNULL(DISTINCT ((t0.c0) IS FALSE), ((t0.c0)|(0.8077734973056494)));
SELECT ALL * FROM t0 RIGHT OUTER JOIN t1 ON IFNULL(DISTINCT ((t0.c0) IS FALSE), ((t0.c0)|(0.8077734973056494))) WHERE (((CAST(t1.c0 AS BLOB)) NOT BETWEEN (((((((((((((t0.c0)OR(t1.c0)))OR(t0.c0)))AND(x'')))AND(t0.c0)))OR(t1.c0)))AND(t1.c0))) AND (((t1.c0)<=('0.47236662769071747'))))) UNION ALL SELECT ALL * FROM t0 RIGHT OUTER JOIN t1 ON IFNULL(DISTINCT ((t0.c0) IS FALSE), ((t0.c0)|(0.8077734973056494))) WHERE ((NOT (((CAST(t1.c0 AS BLOB)) NOT BETWEEN (((((((((((((t0.c0)OR(t1.c0)))OR(t0.c0)))AND(x'')))AND(t0.c0)))OR(t1.c0)))AND(t1.c0))) AND (((t1.c0)<=('0.47236662769071747'))))))) UNION ALL SELECT * FROM t0 RIGHT OUTER JOIN t1 ON IFNULL(DISTINCT ((t0.c0) IS FALSE), ((t0.c0)|(0.8077734973056494))) WHERE (((((CAST(t1.c0 AS BLOB)) NOT BETWEEN (((((((((((((t0.c0)OR(t1.c0)))OR(t0.c0)))AND(x'')))AND(t0.c0)))OR(t1.c0)))AND(t1.c0))) AND (((t1.c0)<=('0.47236662769071747'))))) ISNULL));
SELECT ALL * FROM t0 RIGHT OUTER JOIN t1 ON IFNULL(DISTINCT ((t0.c0) IS FALSE), ((t0.c0)|(0.8077734973056494)));
SELECT DISTINCT * FROM t1 NATURAL JOIN t0;
SELECT DISTINCT * FROM t1 NATURAL JOIN t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t1 NATURAL JOIN t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t1 NATURAL JOIN t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t1 NATURAL JOIN t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(UNICODE(t0.c0))))OR(json_object(t0.c0, t0.c0)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(UNICODE(t0.c0))))OR(json_object(t0.c0, t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(UNICODE(t0.c0))))OR(json_object(t0.c0, t0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING LIKELIHOOD(DISTINCT (((MIN(t0.c0)))!=((GROUP_CONCAT(MIN(GROUP_CONCAT(COUNT(*))))))), 0.6539105412077374) UNION ALL SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (NOT (LIKELIHOOD(DISTINCT (((MIN(t0.c0)))<>((GROUP_CONCAT(MIN(GROUP_CONCAT(COUNT(*))))))), 0.6539105412077374))) UNION ALL SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING ((LIKELIHOOD(DISTINCT (((MIN(t0.c0)))!=((GROUP_CONCAT(MIN(GROUP_CONCAT(COUNT(*))))))), 0.6539105412077374)) ISNULL);
SELECT t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE (((t1.c0 COLLATE BINARY) NOT NULL)) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT (((t1.c0 COLLATE BINARY) NOT NULL)))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((((t1.c0 COLLATE BINARY) NOT NULL)) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))/(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))/(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))/(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((CAST(0.6274137258719575 AS INTEGER))) AND ((t0.c0 COLLATE BINARY)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((CAST(0.6274137258719575 AS INTEGER))) AND ((t0.c0 COLLATE BINARY)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((CAST(0.6274137258719575 AS INTEGER))) AND ((t0.c0 COLLATE BINARY)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING SUM((COUNT(*) IN (COUNT(t1.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (SUM((COUNT(*) IN (COUNT(t1.c0)))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((SUM((COUNT(*) IN (COUNT(t1.c0))))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0 IN (t0.c0, t0.c0))))==(((((t0.c0))>=((t0.c0))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0 IN (t0.c0, t0.c0))))==(((((t0.c0))>=((t0.c0))))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0 IN (t0.c0, t0.c0))))==(((((t0.c0))>=((t0.c0))))))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (CAST(ROUND(t1.c0, t1.c0) AS TEXT)) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (CAST(ROUND(t1.c0, t1.c0) AS TEXT)))) UNION SELECT DISTINCT * FROM t1 WHERE (((CAST(ROUND(t1.c0, t1.c0) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 WHERE (((((((t0.c0) IS FALSE))OR(t1.c0)))OR(((t0.c0) NOTNULL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, t1 WHERE ((NOT (((((((t0.c0) IS FALSE))OR(t1.c0)))OR(((t0.c0) NOTNULL)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, t1 WHERE (((((((((t0.c0) IS FALSE))OR(t1.c0)))OR(((t0.c0) NOTNULL)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING MAX(0.0065893919841141235) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (MAX(0.0065893919841141235))) UNION ALL SELECT t1.c0 FROM t1 NOT INDEXED GROUP BY t1.c0 HAVING ((MAX(0.0065893919841141235)) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING MAX(0.0065893919841141235) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (MAX(0.0065893919841141235))) UNION ALL SELECT t1.c0 FROM t1 NOT INDEXED GROUP BY t1.c0 HAVING ((MAX(0.0065893919841141235)) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL * FROM t0, t1;
SELECT * FROM t0, t1 WHERE ((((((('B?3\J4Wc')AND(t0.c0)))OR(t0.c0))) NOTNULL)) UNION ALL SELECT ALL * FROM t0, t1 WHERE ((NOT ((((((('B?3\J4Wc')AND(t0.c0)))OR(t0.c0))) NOTNULL)))) UNION ALL SELECT ALL * FROM t0, t1 WHERE ((((((((('B?3\J4Wc')AND(t0.c0)))OR(t0.c0))) NOTNULL)) ISNULL));
SELECT ALL * FROM t0, t1;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND((+ (x'')))))OR((t0.c0 IN (t0.c0))))) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND((+ (x'')))))OR((t0.c0 IN (t0.c0))))))) UNION SELECT DISTINCT * FROM t1, t0 WHERE (((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND((+ (x'')))))OR((t0.c0 IN (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE ((+ ((((t1.c0))<((t1.c0)))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((+ ((((t1.c0))<((t1.c0)))))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((((+ ((((t1.c0))<((t1.c0)))))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0 CROSS JOIN t1 ON ((t1.c0)|(t1.c0)) COLLATE BINARY GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0 CROSS JOIN t1 ON ((t1.c0)|(t1.c0)) COLLATE BINARY GROUP BY t0.c0, t1.c0 HAVING TOTAL(COUNT(t0.c0)) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0 CROSS JOIN t1 ON ((t1.c0)|(t1.c0)) COLLATE BINARY GROUP BY t0.c0, t1.c0 HAVING (NOT (TOTAL(COUNT(t0.c0)))) UNION ALL SELECT t0.c0, t1.c0 FROM t0 CROSS JOIN t1 ON ((t1.c0)|(t1.c0)) COLLATE BINARY GROUP BY t0.c0, t1.c0 HAVING ((TOTAL(COUNT(t0.c0))) ISNULL);
SELECT ALL t0.c0 FROM t1, t0;
SELECT t0.c0 FROM t1, t0 WHERE (((((t1.c0)+(t1.c0))) NOT BETWEEN (CAST('459778637' AS TEXT)) AND ('0.9360632590513193'))) UNION ALL SELECT t0.c0 FROM t1, t0 WHERE ((NOT (((((t1.c0)+(t1.c0))) NOT BETWEEN (CAST('459778637' AS TEXT)) AND ('0.9360632590513193'))))) UNION ALL SELECT t0.c0 FROM t1, t0 WHERE (((((((t1.c0)+(t1.c0))) NOT BETWEEN (CAST('459778637' AS TEXT)) AND ('0.9360632590513193'))) ISNULL));
SELECT ALL t0.c0 FROM t1, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CASE CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END  WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN CAST(t0.c0 AS INTEGER) ELSE (+ (t0.c0)) END) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CASE CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END  WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN CAST(t0.c0 AS INTEGER) ELSE (+ (t0.c0)) END))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CASE CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END  WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN CAST(t0.c0 AS INTEGER) ELSE (+ (t0.c0)) END) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t1.c0 FROM t1 INNER JOIN t0 ON CAST((((t1.c0, t1.c0, t0.c0)) NOT BETWEEN ((t0.c0, t1.c0, t1.c0)) AND ((t1.c0, '0.15466658282687828', t0.c0))) AS NUMERIC) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 INNER JOIN t0 ON CAST((((t1.c0, t1.c0, t0.c0)) NOT BETWEEN ((t0.c0, t1.c0, t1.c0)) AND ((t1.c0, '0.15466658282687828', t0.c0))) AS NUMERIC) WHERE (((((((t0.c0)&(t0.c0)))OR(NULL)))AND(t1.c0 COLLATE RTRIM))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 INNER JOIN t0 ON CAST((((t1.c0, t1.c0, t0.c0)) NOT BETWEEN ((t0.c0, t1.c0, t1.c0)) AND ((t1.c0, '0.15466658282687828', t0.c0))) AS NUMERIC) WHERE ((NOT (((((((t0.c0)&(t0.c0)))OR(NULL)))AND(t1.c0 COLLATE RTRIM))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 INNER JOIN t0 ON CAST((((t1.c0, t1.c0, t0.c0)) NOT BETWEEN ((t0.c0, t1.c0, t1.c0)) AND ((t1.c0, '0.15466658282687828', t0.c0))) AS NUMERIC) WHERE (((((((((t0.c0)&(t0.c0)))OR(NULL)))AND(t1.c0 COLLATE RTRIM))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 INNER JOIN t0 ON CAST((((t1.c0, t1.c0, t0.c0)) NOT BETWEEN ((t0.c0, t1.c0, t1.c0)) AND ((t1.c0, '0.15466658282687828', t0.c0))) AS NUMERIC) GROUP BY t1.c0;
SELECT ALL t0.c0 FROM t0 INDEXED BY i26 GROUP BY t0.c0;
SELECT * FROM t1;
SELECT * FROM t1 WHERE (((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))OR(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))))AND(json_quote(t1.c0)))) UNION ALL SELECT * FROM t1 WHERE ((NOT (((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))OR(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))))AND(json_quote(t1.c0)))))) UNION ALL SELECT ALL * FROM t1 WHERE (((((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))OR(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))))AND(json_quote(t1.c0)))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT t1.c0 FROM t0, t1;
SELECT DISTINCT t1.c0 FROM t0, t1 WHERE ((+ (((0x1a64aecf)<=(t1.c0))))) UNION SELECT DISTINCT t1.c0 FROM t0, t1 WHERE ((NOT ((+ (((0X1a64aecf)<=(t1.c0))))))) UNION SELECT DISTINCT t1.c0 FROM t0, t1 WHERE ((((+ (((0X1a64aecf)<=(t1.c0))))) ISNULL));
SELECT DISTINCT t1.c0 FROM t0, t1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (LOWER(DISTINCT (t0.c0 IN (t0.c0)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (LOWER(DISTINCT (t0.c0 IN (t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((LOWER(DISTINCT (t0.c0 IN (t0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING SUM(MAX(t1.c0)) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING (NOT (SUM(MAX(t1.c0)))) UNION ALL SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING ((SUM(MAX(t1.c0))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN ())) BETWEEN (json_insert(t0.c0, t0.c0, t0.c0, NULL, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((- (t0.c0))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((t0.c0 IN ())) BETWEEN (json_insert(t0.c0, t0.c0, t0.c0, NULL, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((- (t0.c0))))))) UNION ALL SELECT * FROM t0 WHERE ((((((t0.c0 IN ())) BETWEEN (json_insert(t0.c0, t0.c0, t0.c0, NULL, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((- (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, t1;
SELECT DISTINCT * FROM t0, t1 WHERE ((((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))OR(t1.c0)))AND((((t0.c0))<=((t0.c0)))))) UNION SELECT DISTINCT * FROM t0, t1 WHERE ((NOT ((((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))OR(t1.c0)))AND((((t0.c0))<=((t0.c0)))))))) UNION SELECT DISTINCT * FROM t0, t1 WHERE ((((((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))OR(t1.c0)))AND((((t0.c0))<=((t0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0, t1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CASE ((t0.c0) NOT NULL)  WHEN TYPEOF(t0.c0) THEN ((t0.c0) BETWEEN (t0.c0) AND (NULL)) ELSE CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CASE ((t0.c0) NOT NULL)  WHEN TYPEOF(t0.c0) THEN ((t0.c0) BETWEEN (t0.c0) AND (NULL)) ELSE CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CASE ((t0.c0) NOT NULL)  WHEN TYPEOF(t0.c0) THEN ((t0.c0) BETWEEN (t0.c0) AND (NULL)) ELSE CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING TOTAL(((AVG(t0.c0))==(MAX(-1.502546778E9)))) UNION ALL SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING (NOT (TOTAL(((AVG(t0.c0))==(MAX(-1.502546778E9)))))) UNION ALL SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING ((TOTAL(((AVG(t0.c0))==(MAX(-1.502546778E9))))) ISNULL);
SELECT t0.c0 FROM t0 LEFT OUTER JOIN t1 ON (((((((t0.c0)OR(t1.c0)))OR(t0.c0))))==((t1.c0)));
SELECT t0.c0 FROM t0 LEFT OUTER JOIN t1 ON (((((((t0.c0)OR(t1.c0)))OR(t0.c0))))==((t1.c0))) WHERE (CASE CASE t0.c0  WHEN t1.c0 THEN NULL ELSE t0.c0 END  WHEN t1.c0 THEN (((t0.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) END) UNION ALL SELECT ALL t0.c0 FROM t0 LEFT OUTER JOIN t1 ON (((((((t0.c0)OR(t1.c0)))OR(t0.c0))))=((t1.c0))) WHERE ((NOT (CASE CASE t0.c0  WHEN t1.c0 THEN NULL ELSE t0.c0 END  WHEN t1.c0 THEN (((t0.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) END))) UNION ALL SELECT t0.c0 FROM t0 LEFT OUTER JOIN t1 ON (((((((t0.c0)OR(t1.c0)))OR(t0.c0))))==((t1.c0))) WHERE (((CASE CASE t0.c0  WHEN t1.c0 THEN NULL ELSE t0.c0 END  WHEN t1.c0 THEN (((t0.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) END) ISNULL));
SELECT t0.c0 FROM t0 LEFT OUTER JOIN t1 ON (((((((t0.c0)OR(t1.c0)))OR(t0.c0))))==((t1.c0)));
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (0.1974369347442737) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (0.1974369347442737))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((0.1974369347442737) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 WHERE (IFNULL(((((t0.c0)AND(t1.c0)))OR(t1.c0)), ((t1.c0)AND(t1.c0)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, t1 WHERE ((NOT (IFNULL(((((t0.c0)AND(t1.c0)))OR(t1.c0)), ((t1.c0)AND(t1.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, t1 WHERE (((IFNULL(((((t0.c0)AND(t1.c0)))OR(t1.c0)), ((t1.c0)AND(t1.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(t0.c0))/(AVG(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((GROUP_CONCAT(t0.c0))/(AVG(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((GROUP_CONCAT(t0.c0))/(AVG(t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(t0.c0))/(AVG(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((GROUP_CONCAT(t0.c0))/(AVG(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((GROUP_CONCAT(t0.c0))/(AVG(t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) UNION ALL SELECT * FROM t0 WHERE ((NOT (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0, t1;
SELECT DISTINCT * FROM t0, t1 WHERE (QUOTE(CAST(t1.c0 AS INTEGER))) UNION SELECT DISTINCT * FROM t0, t1 WHERE ((NOT (QUOTE(CAST(t1.c0 AS INTEGER))))) UNION SELECT DISTINCT * FROM t0, t1 WHERE (((QUOTE(CAST(t1.c0 AS INTEGER))) ISNULL));
SELECT DISTINCT * FROM t0, t1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST(t0.c0 AS BLOB)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CAST(t0.c0 AS BLOB)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS BLOB)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING TRIM(DISTINCT MAX(t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TRIM(DISTINCT MAX(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TRIM(DISTINCT MAX(t0.c0))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING TRIM(DISTINCT MAX(t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TRIM(DISTINCT MAX(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TRIM(DISTINCT MAX(t0.c0))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM t0, t1;
SELECT ALL * FROM t0, t1 WHERE (t1.c0) UNION ALL SELECT * FROM t0, t1 WHERE ((NOT (t1.c0))) UNION ALL SELECT * FROM t0, t1 WHERE (((t1.c0) ISNULL));
SELECT * FROM t0, t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0)OR(t1.c0)))OR(t1.c0))) ISNULL)) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((((((t1.c0)OR(t1.c0)))OR(t1.c0))) ISNULL)))) UNION SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c0)OR(t1.c0)))OR(t1.c0))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0, t1 WHERE (CASE WHEN t1.c0 THEN ((('f鹷{ÑU줱'))<((t1.c0))) END) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t0, t1 WHERE ((NOT (CASE WHEN t1.c0 THEN ((('f鹷{ÑU줱'))<((t1.c0))) END))) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t0, t1 WHERE (((CASE WHEN t1.c0 THEN ((('f鹷{ÑU줱'))<((t1.c0))) END) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING (+ (t1.c0)) UNION ALL SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING (NOT ((+ (t1.c0)))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING (((+ (t1.c0))) ISNULL);
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING (+ (t1.c0)) UNION ALL SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING (NOT ((+ (t1.c0)))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING (((+ (t1.c0))) ISNULL);
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT * FROM t1;
SELECT ALL * FROM t1 WHERE ((NOT (((t1.c0)IS(t1.c0))))) UNION ALL SELECT ALL * FROM t1 NOT INDEXED WHERE ((NOT ((NOT (((t1.c0)IS(t1.c0))))))) UNION ALL SELECT ALL * FROM t1 WHERE ((((NOT (((t1.c0)IS(t1.c0))))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1 NOT INDEXED, t0 WHERE (CASE WHEN UPPER(DISTINCT t1.c0) THEN ((t0.c0)<=(t0.c0)) WHEN ((((t1.c0)AND(t0.c0)))AND(t1.c0)) THEN (~ (t0.c0)) WHEN CAST(t1.c0 AS BLOB) THEN (t0.c0 IN ()) ELSE ((t0.c0) NOT NULL) END) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT (CASE WHEN UPPER(DISTINCT t1.c0) THEN ((t0.c0)<=(t0.c0)) WHEN ((((t1.c0)AND(t0.c0)))AND(t1.c0)) THEN (~ (t0.c0)) WHEN CAST(t1.c0 AS BLOB) THEN (t0.c0 IN ()) ELSE ((t0.c0) NOT NULL) END))) UNION SELECT DISTINCT * FROM t1, t0 WHERE (((CASE WHEN UPPER(DISTINCT t1.c0) THEN ((t0.c0)<=(t0.c0)) WHEN ((((t1.c0)AND(t0.c0)))AND(t1.c0)) THEN (~ (t0.c0)) WHEN CAST(t1.c0 AS BLOB) THEN (t0.c0 IN ()) ELSE ((t0.c0) NOT NULL) END) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t1 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 NOT INDEXED, t1 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, t1 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (MAX(MIN(t1.c0)) IN ()) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((MAX(MIN(t1.c0)) IN ()))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((MAX(MIN(t1.c0)) IN ())) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (MAX(MIN(t1.c0)) IN ()) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((MAX(MIN(t1.c0)) IN ()))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((MAX(MIN(t1.c0)) IN ())) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT * FROM t1, t0;
SELECT * FROM t1, t0 WHERE (((t0.c0) IS FALSE)) UNION ALL SELECT * FROM t1, t0 WHERE ((NOT (((t0.c0) IS FALSE)))) UNION ALL SELECT ALL * FROM t1, t0 WHERE (((((t0.c0) IS FALSE)) ISNULL));
SELECT * FROM t1, t0;
SELECT DISTINCT t0.c0 FROM t1, t0;
SELECT DISTINCT t0.c0 FROM t1, t0 WHERE (((((t0.c0)GLOB(t0.c0))) IS FALSE)) UNION SELECT DISTINCT t0.c0 FROM t1, t0 WHERE ((NOT (((((t0.c0)GLOB(t0.c0))) IS FALSE)))) UNION SELECT DISTINCT t0.c0 FROM t1, t0 WHERE (((((((t0.c0)GLOB(t0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT t0.c0 FROM t1, t0;
SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 WHERE ((NOT ((t0.c0 IN ())))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, t1 WHERE ((NOT ((NOT ((t0.c0 IN ())))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, t1 WHERE ((((NOT ((t0.c0 IN ())))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((MIN(t1.c0) COLLATE RTRIM)IS NOT((- (t1.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((MIN(t1.c0) COLLATE RTRIM)IS NOT((- (t1.c0)))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((MIN(t1.c0) COLLATE RTRIM)IS NOT((- (t1.c0))))) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((MIN(t1.c0) COLLATE RTRIM)IS NOT((- (t1.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((MIN(t1.c0) COLLATE RTRIM)IS NOT((- (t1.c0)))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((MIN(t1.c0) COLLATE RTRIM)IS NOT((- (t1.c0))))) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (CASE 0.964487582657379  WHEN '-1752294040' COLLATE BINARY THEN CAST(t0.c0 AS INTEGER) END) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CASE 0.964487582657379  WHEN '-1752294040' COLLATE BINARY THEN CAST(t0.c0 AS INTEGER) END))) UNION ALL SELECT ALL * FROM t0 WHERE (((CASE 0.964487582657379  WHEN '-1752294040' COLLATE BINARY THEN CAST(t0.c0 AS INTEGER) END) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c0 FROM t1 RIGHT OUTER JOIN t0 ON CASE WHEN ((t1.c0)AND(t1.c0)) THEN NULLIF(t0.c0, t1.c0) WHEN t0.c0 COLLATE NOCASE THEN ((((t1.c0)OR(t1.c0)))OR(t1.c0)) WHEN ((((((((t1.c0)AND(t1.c0)))AND(0X5b1bcdbf)))OR(t1.c0)))OR(t0.c0)) THEN NULL ELSE (t0.c0 IN (t0.c0, t0.c0)) END;
SELECT DISTINCT t0.c0 FROM t1 RIGHT OUTER JOIN t0 ON CASE WHEN ((t1.c0)AND(t1.c0)) THEN NULLIF(t0.c0, t1.c0) WHEN t0.c0 COLLATE NOCASE THEN ((((t1.c0)OR(t1.c0)))OR(t1.c0)) WHEN ((((((((t1.c0)AND(t1.c0)))AND(0x5b1bcdbf)))OR(t1.c0)))OR(t0.c0)) THEN NULL ELSE (t0.c0 IN (t0.c0, t0.c0)) END WHERE ((NOT (CAST(t1.c0 AS TEXT)))) UNION SELECT DISTINCT t0.c0 FROM t1 RIGHT OUTER JOIN t0 ON CASE WHEN ((t1.c0)AND(t1.c0)) THEN NULLIF(t0.c0, t1.c0) WHEN t0.c0 COLLATE NOCASE THEN ((((t1.c0)OR(t1.c0)))OR(t1.c0)) WHEN ((((((((t1.c0)AND(t1.c0)))AND(0X5b1bcdbf)))OR(t1.c0)))OR(t0.c0)) THEN NULL ELSE (t0.c0 IN (t0.c0, t0.c0)) END WHERE ((NOT ((NOT (CAST(t1.c0 AS TEXT)))))) UNION SELECT DISTINCT t0.c0 FROM t1 RIGHT OUTER JOIN t0 ON CASE WHEN ((t1.c0)AND(t1.c0)) THEN NULLIF(t0.c0, t1.c0) WHEN t0.c0 COLLATE NOCASE THEN ((((t1.c0)OR(t1.c0)))OR(t1.c0)) WHEN ((((((((t1.c0)AND(t1.c0)))AND(0X5b1bcdbf)))OR(t1.c0)))OR(t0.c0)) THEN NULL ELSE (t0.c0 IN (t0.c0, t0.c0)) END WHERE ((((NOT (CAST(t1.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t1 RIGHT OUTER JOIN t0 ON CASE WHEN ((t1.c0)AND(t1.c0)) THEN NULLIF(t0.c0, t1.c0) WHEN t0.c0 COLLATE NOCASE THEN ((((t1.c0)OR(t1.c0)))OR(t1.c0)) WHEN ((((((((t1.c0)AND(t1.c0)))AND(0X5b1bcdbf)))OR(t1.c0)))OR(t0.c0)) THEN NULL ELSE (t0.c0 IN (t0.c0, t0.c0)) END;
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0 WHERE (GLOB((t1.c0 IN ()), (~ (t0.c0)))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t1, t0 WHERE ((NOT (GLOB((t1.c0 IN ()), (~ (t0.c0)))))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t1, t0 WHERE (((GLOB((t1.c0 IN ()), (~ (t0.c0)))) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING MIN(((MAX(GROUP_CONCAT(t1.c0)))GLOB(TOTAL(t1.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (MIN(((MAX(GROUP_CONCAT(t1.c0)))GLOB(TOTAL(t1.c0)))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((MIN(((MAX(GROUP_CONCAT(t1.c0)))GLOB(TOTAL(t1.c0))))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN (t0.c0, t0.c0)))<=(t0.c0 COLLATE BINARY))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((t0.c0 IN (t0.c0, t0.c0)))<=(t0.c0 COLLATE BINARY))))) UNION ALL SELECT * FROM t0 WHERE ((((((t0.c0 IN (t0.c0, t0.c0)))<=(t0.c0 COLLATE BINARY))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(t0.c0 AS INTEGER)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((NOT (CAST(t0.c0 AS INTEGER)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((NOT (CAST(t0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t1, t0 NOT INDEXED WHERE (((((0.8607810151048667)IS NOT(t0.c0))) NOT BETWEEN (((t0.c0)AND(t0.c0))) AND (((t0.c0)IS(t1.c0))))) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t1, t0 WHERE ((NOT (((((0.8607810151048667)IS NOT(t0.c0))) NOT BETWEEN (((t0.c0)AND(t0.c0))) AND (((t0.c0)IS(t1.c0))))))) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t1, t0 WHERE (((((((0.8607810151048667)IS NOT(t0.c0))) NOT BETWEEN (((t0.c0)AND(t0.c0))) AND (((t0.c0)IS(t1.c0))))) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING SUM(((t1.c0) BETWEEN (SUM(GROUP_CONCAT(t1.c0))) AND (GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING (NOT (SUM(((t1.c0) BETWEEN (SUM(GROUP_CONCAT(t1.c0))) AND (GROUP_CONCAT(COUNT(*))))))) UNION ALL SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0 HAVING ((SUM(((t1.c0) BETWEEN (SUM(GROUP_CONCAT(t1.c0))) AND (GROUP_CONCAT(COUNT(*)))))) ISNULL);
SELECT ALL * FROM t0, t1;
SELECT ALL * FROM t0, t1 WHERE (NULLIF(((t1.c0)>>(t0.c0)), ((t1.c0)GLOB(t1.c0)))) UNION ALL SELECT * FROM t0, t1 WHERE ((NOT (NULLIF(((t1.c0)>>(t0.c0)), ((t1.c0)GLOB(t1.c0)))))) UNION ALL SELECT * FROM t0, t1 WHERE (((NULLIF(((t1.c0)>>(t0.c0)), ((t1.c0)GLOB(t1.c0)))) ISNULL));
SELECT ALL * FROM t0, t1;
SELECT DISTINCT * FROM t0, t1;
SELECT DISTINCT * FROM t0, t1 WHERE ((t1.c0 IN ((((t1.c0))==((t1.c0))), ((((((((t0.c0)OR(t0.c0)))OR(t1.c0)))AND(t1.c0)))AND(t0.c0))))) UNION SELECT DISTINCT * FROM t0, t1 WHERE ((NOT ((t1.c0 IN ((((t1.c0))==((t1.c0))), ((((((((t0.c0)OR(t0.c0)))OR(t1.c0)))AND(t1.c0)))AND(t0.c0))))))) UNION SELECT DISTINCT * FROM t0, t1 WHERE ((((t1.c0 IN ((((t1.c0))==((t1.c0))), ((((((((t0.c0)OR(t0.c0)))OR(t1.c0)))AND(t1.c0)))AND(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, t1;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t0 WHERE (((((t1.c0)<(t0.c0)))>=(CASE WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1, t0 WHERE ((NOT (((((t1.c0)<(t0.c0)))>=(CASE WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1, t0 WHERE (((((((t1.c0)<(t0.c0)))>=(CASE WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT MIN(NULL) FROM t0, t1 NOT INDEXED;
SELECT t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE (CAST(CAST(t1.c0 AS TEXT) AS REAL)) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT (CAST(CAST(t1.c0 AS TEXT) AS REAL)))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE (((CAST(CAST(t1.c0 AS TEXT) AS REAL)) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN t1 ON ((t1.c0)>=(t1.c0 COLLATE RTRIM));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN t1 ON ((t1.c0)>=(t1.c0 COLLATE RTRIM)) WHERE ((((((((((t1.c0 IN ()))AND((t1.c0 IN (t0.c0, t1.c0)))))OR(CAST(t1.c0 AS REAL))))AND(t0.c0 COLLATE NOCASE)))OR(((t1.c0) IS TRUE)))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN t1 ON ((t1.c0)>=(t1.c0 COLLATE RTRIM)) WHERE ((NOT ((((((((((t1.c0 IN ()))AND((t1.c0 IN (t0.c0, t1.c0)))))OR(CAST(t1.c0 AS REAL))))AND(t0.c0 COLLATE NOCASE)))OR(((t1.c0) IS TRUE)))))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN t1 ON ((t1.c0)>=(t1.c0 COLLATE RTRIM)) WHERE ((((((((((((t1.c0 IN ()))AND((t1.c0 IN (t0.c0, t1.c0)))))OR(CAST(t1.c0 AS REAL))))AND(t0.c0 COLLATE NOCASE)))OR(((t1.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN t1 ON ((t1.c0)>=(t1.c0 COLLATE RTRIM));
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (1.430893829E9) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (1.430893829E9))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((1.430893829E9) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING COUNT(LIKELY(COUNT(t1.c0))) UNION ALL SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING (NOT (COUNT(LIKELY(COUNT(t1.c0))))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING ((COUNT(LIKELY(COUNT(t1.c0)))) ISNULL);
SELECT * FROM t0 INNER JOIN t1 ON CAST(t1.c0 AS TEXT);
SELECT ALL * FROM t0 INNER JOIN t1 ON CAST(t1.c0 AS TEXT) WHERE (CASE WHEN NULL THEN 0X5aff7392 ELSE t0.c0 COLLATE RTRIM END) UNION ALL SELECT * FROM t0 INNER JOIN t1 ON CAST(t1.c0 AS TEXT) WHERE ((NOT (CASE WHEN NULL THEN 0X5aff7392 ELSE t0.c0 COLLATE RTRIM END))) UNION ALL SELECT * FROM t0 INNER JOIN t1 ON CAST(t1.c0 AS TEXT) WHERE (((CASE WHEN NULL THEN 0x5aff7392 ELSE t0.c0 COLLATE RTRIM END) ISNULL));
SELECT * FROM t0 INNER JOIN t1 ON CAST(t1.c0 AS TEXT);
SELECT DISTINCT t0.c0, t1.c0 FROM t0, t1;
SELECT DISTINCT t0.c0, t1.c0 FROM t0, t1 WHERE ((((t0.c0)) NOT BETWEEN ((((x'') NOT BETWEEN (t1.c0) AND (t0.c0)))) AND ((t0.c0)))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t0, t1 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((((x'') NOT BETWEEN (t1.c0) AND (t0.c0)))) AND ((t0.c0)))))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t0, t1 WHERE ((((((t0.c0)) NOT BETWEEN ((((x'') NOT BETWEEN (t1.c0) AND (t0.c0)))) AND ((t0.c0)))) ISNULL));
SELECT DISTINCT t0.c0, t1.c0 FROM t0, t1;
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 WHERE (t1.c0 COLLATE NOCASE) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, t1 WHERE ((NOT (t1.c0 COLLATE NOCASE))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, t1 WHERE (((t1.c0 COLLATE NOCASE) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING t0.c0 UNION ALL SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING t0.c0 UNION ALL SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT * FROM t1;
SELECT ALL * FROM t1 WHERE (ABS(t1.c0) COLLATE BINARY) UNION ALL SELECT * FROM t1 WHERE ((NOT (ABS(t1.c0) COLLATE BINARY))) UNION ALL SELECT * FROM t1 WHERE (((ABS(t1.c0) COLLATE BINARY) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (json_insert(-1236062890 COLLATE RTRIM, t0.c0, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (json_insert(-1236062890 COLLATE RTRIM, t0.c0, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))) UNION SELECT DISTINCT * FROM t0 WHERE (((json_insert(-1236062890 COLLATE RTRIM, t0.c0, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) ISNULL));
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1 WHERE ((- (((((0X72a3cab1)OR(t1.c0)))AND(t1.c0))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t0, t1 WHERE ((NOT ((- (((((0X72a3cab1)OR(t1.c0)))AND(t1.c0))))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t0, t1 WHERE ((((- (((((0x72a3cab1)OR(t1.c0)))AND(t1.c0))))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING HEX(AVG(SUM(MIN(t0.c0)))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING (NOT (HEX(AVG(SUM(MIN(t0.c0)))))) UNION ALL SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING ((HEX(AVG(SUM(MIN(t0.c0))))) ISNULL);
SELECT * FROM t1;
SELECT * FROM t1 WHERE (((((t1.c0) NOTNULL)) NOT BETWEEN (((t1.c0)*(t1.c0))) AND (((t1.c0)IS NOT(t1.c0))))) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (((((t1.c0) NOTNULL)) NOT BETWEEN (((t1.c0)*(t1.c0))) AND (((t1.c0)IS NOT(t1.c0))))))) UNION ALL SELECT ALL * FROM t1 NOT INDEXED WHERE (((((((t1.c0) NOTNULL)) NOT BETWEEN (((t1.c0)*(t1.c0))) AND (((t1.c0)IS NOT(t1.c0))))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((ABS(t1.c0))&((NOT (t1.c0))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((ABS(t1.c0))&((NOT (t1.c0))))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((ABS(t1.c0))&((NOT (t1.c0))))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL t0.c0 FROM t1 CROSS JOIN t0 ON ((json_array_length(t0.c0, t0.c0))==(CASE WHEN t0.c0 THEN t0.c0 END)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1 CROSS JOIN t0 ON ((json_array_length(t0.c0, t0.c0))=(CASE WHEN t0.c0 THEN t0.c0 END)) WHERE ((((t1.c0)) NOT BETWEEN (((- (t1.c0)))) AND ((NULLIF(t1.c0, NULL))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t1 CROSS JOIN t0 ON ((json_array_length(t0.c0, t0.c0))==(CASE WHEN t0.c0 THEN t0.c0 END)) WHERE ((NOT ((((t1.c0)) NOT BETWEEN (((- (t1.c0)))) AND ((NULLIF(t1.c0, NULL))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t1 CROSS JOIN t0 ON ((json_array_length(t0.c0, t0.c0))==(CASE WHEN t0.c0 THEN t0.c0 END)) WHERE ((((((t1.c0)) NOT BETWEEN (((- (t1.c0)))) AND ((NULLIF(t1.c0, NULL))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1 CROSS JOIN t0 ON ((json_array_length(t0.c0, t0.c0))==(CASE WHEN t0.c0 THEN t0.c0 END)) GROUP BY t0.c0;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING t0.c0 UNION ALL SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING ((t0.c0) ISNULL);
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING t0.c0 UNION ALL SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING ((t0.c0) ISNULL);
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (((((t1.c0)IS NOT(t1.c0))) BETWEEN (SQLITE_COMPILEOPTION_GET(t1.c0)) AND (((t1.c0) NOT BETWEEN (NULL) AND (t1.c0))))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((((t1.c0)IS NOT(t1.c0))) BETWEEN (SQLITE_COMPILEOPTION_GET(t1.c0)) AND (((t1.c0) NOT BETWEEN (NULL) AND (t1.c0))))))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE (((((((t1.c0)IS NOT(t1.c0))) BETWEEN (SQLITE_COMPILEOPTION_GET(t1.c0)) AND (((t1.c0) NOT BETWEEN (NULL) AND (t1.c0))))) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((NULL)) AND ((t1.c0)))) IS FALSE)) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((((((t1.c0)) NOT BETWEEN ((NULL)) AND ((t1.c0)))) IS FALSE)))) UNION SELECT DISTINCT * FROM t1 WHERE ((((((((t1.c0)) NOT BETWEEN ((NULL)) AND ((t1.c0)))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE ((t1.c0 IN ())) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT ((t1.c0 IN ())))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((((t1.c0 IN ())) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM(((COUNT(MAX(t0.c0))) IS TRUE)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM(((COUNT(MAX(t0.c0))) IS TRUE)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(((COUNT(MAX(t0.c0))) IS TRUE))) ISNULL);
SELECT ALL * FROM t1;
SELECT * FROM t1 WHERE ((+ (((t1.c0)IS(t1.c0))))) UNION ALL SELECT * FROM t1 WHERE ((NOT ((+ (((t1.c0)IS(t1.c0))))))) UNION ALL SELECT * FROM t1 WHERE ((((+ (((t1.c0)IS(t1.c0))))) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0 IN (t0.c0)) IN (t0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((t0.c0 IN (t0.c0)) IN (t0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT t0.c0 FROM t0 NOT INDEXED WHERE (((((t0.c0 IN (t0.c0)) IN (t0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (TRIM(DISTINCT CASE WHEN t0.c0 THEN t0.c0 END, ((x'581c') BETWEEN (t0.c0) AND (t0.c0)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (TRIM(DISTINCT CASE WHEN t0.c0 THEN t0.c0 END, ((x'581c') BETWEEN (t0.c0) AND (t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((TRIM(DISTINCT CASE WHEN t0.c0 THEN t0.c0 END, ((x'581c') BETWEEN (t0.c0) AND (t0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING MAX(MAX(t1.c0)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (MAX(MAX(t1.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((MAX(MAX(t1.c0))) ISNULL);
SELECT ALL * FROM t1;
SELECT ALL * FROM t1 WHERE (((t1.c0)<<(((t1.c0)+(t1.c0))))) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (((t1.c0)<<(((t1.c0)+(t1.c0))))))) UNION ALL SELECT ALL * FROM t1 WHERE (((((t1.c0)<<(((t1.c0)+(t1.c0))))) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN ()), t0.c0, (('uC')/('T*UQPF\rS')))) AND ((0.4685263794720511, (t0.c0 IN ()), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN ()), t0.c0, (('uC')/('T*UQPF\rS')))) AND ((0.4685263794720511, (t0.c0 IN ()), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN ()), t0.c0, (('uC')/('T*UQPF\rS')))) AND ((0.4685263794720511, (t0.c0 IN ()), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (((((t1.c0)/(t1.c0))) BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) AND (((t1.c0)+(t1.c0))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((((t1.c0)/(t1.c0))) BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) AND (((t1.c0)+(t1.c0))))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((((t1.c0)/(t1.c0))) BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) AND (((t1.c0)+(t1.c0))))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(TOTAL(AVG(COUNT(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(TOTAL(AVG(COUNT(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(TOTAL(AVG(COUNT(t0.c0))))) ISNULL);
SELECT ALL t0.c0 FROM t0, t1;
SELECT ALL t0.c0 FROM t0, t1 WHERE ((NOT (((t1.c0)<(1218781466))))) UNION ALL SELECT t0.c0 FROM t0, t1 WHERE ((NOT ((NOT (((t1.c0)<(1218781466))))))) UNION ALL SELECT t0.c0 FROM t0, t1 WHERE ((((NOT (((t1.c0)<(1218781466))))) ISNULL));
SELECT ALL t0.c0 FROM t0, t1;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((t1.c0)<<(t1.c0)) COLLATE NOCASE) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((t1.c0)<<(t1.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((t1.c0)<<(t1.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t1, t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END) BETWEEN (((t1.c0) ISNULL)) AND (((((t0.c0)AND(158206070)))OR(t0.c0))))) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t1, t0 WHERE ((NOT (((CASE WHEN t0.c0 THEN t0.c0 END) BETWEEN (((t1.c0) ISNULL)) AND (((((t0.c0)AND(158206070)))OR(t0.c0))))))) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t1, t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 END) BETWEEN (((t1.c0) ISNULL)) AND (((((t0.c0)AND(158206070)))OR(t0.c0))))) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT t1.c0 FROM t0 NATURAL JOIN t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t0 NATURAL JOIN t1 GROUP BY t1.c0 HAVING SUM((((t0.c0, GROUP_CONCAT(t1.c0), MAX(GROUP_CONCAT(GROUP_CONCAT(COUNT(t0.c0)))), t0.c0, SUM(COUNT(t0.c0))))>=((t0.c0, GROUP_CONCAT(t0.c0), t0.c0, COUNT(*), MIN(t1.c0))))) UNION ALL SELECT ALL t1.c0 FROM t0 NATURAL JOIN t1 GROUP BY t1.c0 HAVING (NOT (SUM((((t0.c0, GROUP_CONCAT(t1.c0), MAX(GROUP_CONCAT(GROUP_CONCAT(COUNT(t0.c0)))), t0.c0, SUM(COUNT(t0.c0))))>=((t0.c0, GROUP_CONCAT(t0.c0), t0.c0, COUNT(*), MIN(t1.c0))))))) UNION ALL SELECT ALL t1.c0 FROM t0 NATURAL JOIN t1 GROUP BY t1.c0 HAVING ((SUM((((t0.c0, GROUP_CONCAT(t1.c0), MAX(GROUP_CONCAT(GROUP_CONCAT(COUNT(t0.c0)))), t0.c0, SUM(COUNT(t0.c0))))>=((t0.c0, GROUP_CONCAT(t0.c0), t0.c0, COUNT(*), MIN(t1.c0)))))) ISNULL);
SELECT ALL t1.c0 FROM t1, t0;
SELECT t1.c0 FROM t1, t0 WHERE ((((t1.c0)|(t1.c0)) IN ())) UNION ALL SELECT t1.c0 FROM t1, t0 WHERE ((NOT ((((t1.c0)|(t1.c0)) IN ())))) UNION ALL SELECT ALL t1.c0 FROM t1, t0 WHERE ((((((t1.c0)|(t1.c0)) IN ())) ISNULL));
SELECT ALL t1.c0 FROM t1, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CAST((t0.c0 IN ('865224979')) AS INTEGER)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CAST((t0.c0 IN ('865224979')) AS INTEGER)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CAST((t0.c0 IN ('865224979')) AS INTEGER)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE ((((t1.c0 IN (t1.c0))) IS FALSE)) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT ((((t1.c0 IN (t1.c0))) IS FALSE)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((((((t1.c0 IN (t1.c0))) IS FALSE)) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING TOTAL(((GROUP_CONCAT(COUNT(t1.c0)))|(SUM(t0.c0)))) UNION ALL SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(((GROUP_CONCAT(COUNT(t1.c0)))|(SUM(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING ((TOTAL(((GROUP_CONCAT(COUNT(t1.c0)))|(SUM(t0.c0))))) ISNULL);
SELECT t0.c0, t1.c0 FROM t0, t1;
SELECT t0.c0, t1.c0 FROM t0, t1 WHERE (((((((t0.c0) NOTNULL))AND(((t1.c0)+(t0.c0)))))AND((((t0.c0, t0.c0, t1.c0)) BETWEEN ((t0.c0, t1.c0, t0.c0)) AND ((t0.c0, t0.c0, t1.c0)))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 WHERE ((NOT (((((((t0.c0) NOTNULL))AND(((t1.c0)+(t0.c0)))))AND((((t0.c0, t0.c0, t1.c0)) BETWEEN ((t0.c0, t1.c0, t0.c0)) AND ((t0.c0, t0.c0, t1.c0)))))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 WHERE (((((((((t0.c0) NOTNULL))AND(((t1.c0)+(t0.c0)))))AND((((t0.c0, t0.c0, t1.c0)) BETWEEN ((t0.c0, t1.c0, t0.c0)) AND ((t0.c0, t0.c0, t1.c0)))))) ISNULL));
SELECT t0.c0, t1.c0 FROM t0, t1;
SELECT DISTINCT t1.c0 FROM t0, t1;
SELECT DISTINCT t1.c0 FROM t0, t1 WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t1.c0))))+((t1.c0 IN ())))) UNION SELECT DISTINCT t1.c0 FROM t0, t1 WHERE ((NOT ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t1.c0))))+((t1.c0 IN ())))))) UNION SELECT DISTINCT t1.c0 FROM t0, t1 WHERE ((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t1.c0))))+((t1.c0 IN ())))) ISNULL));
SELECT DISTINCT t1.c0 FROM t0, t1;
SELECT ALL t0.c0 FROM t1 LEFT OUTER JOIN t0 ON CASE WHEN ((t1.c0)&(t0.c0)) THEN (~ (x'')) END GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1 LEFT OUTER JOIN t0 ON CASE WHEN ((t1.c0)&(t0.c0)) THEN (~ (x'')) END WHERE (CASE (t1.c0 IN ())  WHEN ((t1.c0)|(x'b1a8')) THEN t1.c0 ELSE (('1410045607') IS FALSE) END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t1 LEFT OUTER JOIN t0 ON CASE WHEN ((t1.c0)&(t0.c0)) THEN (~ (x'')) END WHERE ((NOT (CASE (t1.c0 IN ())  WHEN ((t1.c0)|(x'b1a8')) THEN t1.c0 ELSE (('1410045607') IS FALSE) END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t1 LEFT OUTER JOIN t0 ON CASE WHEN ((t1.c0)&(t0.c0)) THEN (~ (x'')) END WHERE (((CASE (t1.c0 IN ())  WHEN ((t1.c0)|(x'b1a8')) THEN t1.c0 ELSE (('1410045607') IS FALSE) END) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1 LEFT OUTER JOIN t0 ON CASE WHEN ((t1.c0)&(t0.c0)) THEN (~ (x'')) END GROUP BY t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING MAX(((t0.c0)<(t0.c0))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING (NOT (MAX(((t0.c0)<(t0.c0))))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING ((MAX(((t0.c0)<(t0.c0)))) ISNULL);
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING MAX(((t0.c0)<(t0.c0))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING (NOT (MAX(((t0.c0)<(t0.c0))))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING ((MAX(((t0.c0)<(t0.c0)))) ISNULL);
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL * FROM t1 INNER JOIN t0 ON (((t1.c0))<=((t0.c0))) COLLATE RTRIM;
SELECT * FROM t1 INNER JOIN t0 ON (((t1.c0))<=((t0.c0))) COLLATE RTRIM WHERE (((((t0.c0)<<(t0.c0)))<>(CASE t1.c0  WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t1.c0 END))) UNION ALL SELECT * FROM t1 INNER JOIN t0 ON (((t1.c0))<=((t0.c0))) COLLATE RTRIM WHERE ((NOT (((((t0.c0)<<(t0.c0)))!=(CASE t1.c0  WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t1.c0 END))))) UNION ALL SELECT ALL * FROM t1 INNER JOIN t0 ON (((t1.c0))<=((t0.c0))) COLLATE RTRIM WHERE (((((((t0.c0)<<(t0.c0)))!=(CASE t1.c0  WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t1.c0 END))) ISNULL));
SELECT ALL * FROM t1 INNER JOIN t0 ON (((t1.c0))<=((t0.c0))) COLLATE RTRIM;
SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0;
SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0 WHERE (-1.427405083E9) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0 WHERE ((NOT (-1.427405083E9))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0 WHERE (((-1.427405083E9) ISNULL));
SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0;
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1, t0 WHERE ((+ (t0.c0 COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t1, t0 WHERE ((NOT ((+ (t0.c0 COLLATE RTRIM))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t1, t0 WHERE ((((+ (t0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING MIN(SUBSTR(t0.c0, MIN(t0.c0))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING (NOT (MIN(SUBSTR(t0.c0, MIN(t0.c0))))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING ((MIN(SUBSTR(t0.c0, MIN(t0.c0)))) ISNULL);
SELECT ALL MIN(TRIM(HEX(t0.c0))) FROM t0 ORDER BY t0.c0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((((x'') ISNULL)) BETWEEN (((((t0.c0)AND(t0.c0)))AND(t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN 0.654466118950977 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((x'') ISNULL)) BETWEEN (((((t0.c0)AND(t0.c0)))AND(t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN 0.654466118950977 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) UNION ALL SELECT * FROM t0 WHERE (((((((x'') ISNULL)) BETWEEN (((((t0.c0)AND(t0.c0)))AND(t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN 0.654466118950977 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (CASE WHEN t1.c0 THEN (t1.c0 IN ()) END) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (CASE WHEN t1.c0 THEN (t1.c0 IN ()) END))) UNION SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN t1.c0 THEN (t1.c0 IN ()) END) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)), ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) AND ((t1.c0, CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END, 0.5754786791717977)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)), ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) AND ((t1.c0, CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END, 0.5754786791717977)))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)), ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) AND ((t1.c0, CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END, 0.5754786791717977)))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((MAX(GROUP_CONCAT(t1.c0)), TOTAL(t1.c0), COUNT(COUNT(t1.c0))))>((TOTAL(t1.c0), GROUP_CONCAT(AVG(t1.c0)), ((t1.c0)OR(TOTAL(SUM(0X67698f3))))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((((MAX(GROUP_CONCAT(t1.c0)), TOTAL(t1.c0), COUNT(COUNT(t1.c0))))>((TOTAL(t1.c0), GROUP_CONCAT(AVG(t1.c0)), ((t1.c0)OR(TOTAL(SUM(0x67698f3))))))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((((MAX(GROUP_CONCAT(t1.c0)), TOTAL(t1.c0), COUNT(COUNT(t1.c0))))>((TOTAL(t1.c0), GROUP_CONCAT(AVG(t1.c0)), ((t1.c0)OR(TOTAL(SUM(0x67698f3)))))))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((x'' IN ())) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((x'' IN ())))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((x'' IN ())) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (CASE WHEN ((t1.c0)%(t1.c0)) THEN HEX(DISTINCT t1.c0) ELSE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) END) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (CASE WHEN ((t1.c0)%(t1.c0)) THEN HEX(DISTINCT t1.c0) ELSE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) END))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((CASE WHEN ((t1.c0)%(t1.c0)) THEN HEX(DISTINCT t1.c0) ELSE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) END) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)LIKE(((t1.c0) NOT BETWEEN (NULL) AND (t1.c0))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)LIKE(((t1.c0) NOT BETWEEN (NULL) AND (t1.c0))))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)LIKE(((t1.c0) NOT BETWEEN (NULL) AND (t1.c0))))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING (((((((((((t1.c0, t0.c0, t0.c0))<((t1.c0, t1.c0, AVG(t0.c0)))))OR(((MIN(MAX(AVG(COUNT(*))))) ISNULL))))AND(SUM(t1.c0))))AND((((AVG(MAX(t1.c0)))) BETWEEN ((MAX(GROUP_CONCAT(t1.c0)))) AND ((t1.c0))))))OR((MIN(MIN(t0.c0)) IN ()))) UNION ALL SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING (NOT ((((((((((((t1.c0, t0.c0, t0.c0))<((t1.c0, t1.c0, AVG(t0.c0)))))OR(((MIN(MAX(AVG(COUNT(*))))) ISNULL))))AND(SUM(t1.c0))))AND((((AVG(MAX(t1.c0)))) BETWEEN ((MAX(GROUP_CONCAT(t1.c0)))) AND ((t1.c0))))))OR((MIN(MIN(t0.c0)) IN ()))))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING (((((((((((((t1.c0, t0.c0, t0.c0))<((t1.c0, t1.c0, AVG(t0.c0)))))OR(((MIN(MAX(AVG(COUNT(*))))) ISNULL))))AND(SUM(t1.c0))))AND((((AVG(MAX(t1.c0)))) BETWEEN ((MAX(GROUP_CONCAT(t1.c0)))) AND ((t1.c0))))))OR((MIN(MIN(t0.c0)) IN ())))) ISNULL);
SELECT ALL t0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM) NOT BETWEEN (((t1.c0)/(t0.c0))) AND (((t0.c0)>=(t1.c0))));
SELECT ALL t0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM) NOT BETWEEN (((t1.c0)/(t0.c0))) AND (((t0.c0)>=(t1.c0)))) WHERE (t0.c0) UNION ALL SELECT t0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM) NOT BETWEEN (((t1.c0)/(t0.c0))) AND (((t0.c0)>=(t1.c0)))) WHERE ((NOT (t0.c0))) UNION ALL SELECT t0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM) NOT BETWEEN (((t1.c0)/(t0.c0))) AND (((t0.c0)>=(t1.c0)))) WHERE (((t0.c0) ISNULL));
SELECT ALL t0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM) NOT BETWEEN (((t1.c0)/(t0.c0))) AND (((t0.c0)>=(t1.c0))));
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (NULL) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((NULL) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0, t1 WHERE (CAST(x'' AS INTEGER)) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t0, t1 WHERE ((NOT (CAST(x'' AS INTEGER)))) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t0, t1 WHERE (((CAST(x'' AS INTEGER)) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING ((((MAX(COUNT(SUM(t0.c0))))OR(((MAX(t0.c0)) IS TRUE))))AND(((t1.c0) NOT BETWEEN (COUNT(*)) AND (GROUP_CONCAT(MAX(t1.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING (NOT (((((MAX(COUNT(SUM(t0.c0))))OR(((MAX(t0.c0)) IS TRUE))))AND(((t1.c0) NOT BETWEEN (COUNT(*)) AND (GROUP_CONCAT(MAX(t1.c0)))))))) UNION ALL SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING ((((((MAX(COUNT(SUM(t0.c0))))OR(((MAX(t0.c0)) IS TRUE))))AND(((t1.c0) NOT BETWEEN (COUNT(*)) AND (GROUP_CONCAT(MAX(t1.c0))))))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (CAST(UPPER(t0.c0) AS INTEGER)) UNION ALL SELECT * FROM t0 WHERE ((NOT (CAST(UPPER(t0.c0) AS INTEGER)))) UNION ALL SELECT * FROM t0 WHERE (((CAST(UPPER(t0.c0) AS INTEGER)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t1 NOT INDEXED;
SELECT DISTINCT * FROM t1 WHERE (CAST(t1.c0 AS NUMERIC)) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (CAST(t1.c0 AS NUMERIC)))) UNION SELECT DISTINCT * FROM t1 WHERE (((CAST(t1.c0 AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM t1 NOT INDEXED;
SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t1 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, t1 WHERE ((NOT (((t0.c0) ISNULL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, t1 WHERE (((((t0.c0) ISNULL)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT t0.c0 FROM t1 NATURAL JOIN t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t1 NATURAL JOIN t0 GROUP BY t0.c0 HAVING t1.c0 UNION ALL SELECT ALL t0.c0 FROM t1 NATURAL JOIN t0 GROUP BY t0.c0 HAVING (NOT (t1.c0)) UNION ALL SELECT ALL t0.c0 FROM t1 NATURAL JOIN t0 GROUP BY t0.c0 HAVING ((t1.c0) ISNULL);
SELECT t0.c0 FROM t1 NATURAL JOIN t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t1 NATURAL JOIN t0 GROUP BY t0.c0 HAVING t1.c0 UNION ALL SELECT ALL t0.c0 FROM t1 NATURAL JOIN t0 GROUP BY t0.c0 HAVING (NOT (t1.c0)) UNION ALL SELECT ALL t0.c0 FROM t1 NATURAL JOIN t0 GROUP BY t0.c0 HAVING ((t1.c0) ISNULL);
SELECT t0.c0 FROM t1 NATURAL JOIN t0 GROUP BY t0.c0;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE ((((t0.c0)) BETWEEN ((('802651116' IN ()))) AND ((((t0.c0) IS TRUE))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((t0.c0)) BETWEEN ((('802651116' IN ()))) AND ((((t0.c0) IS TRUE))))))) UNION ALL SELECT * FROM t0 WHERE ((((((t0.c0)) BETWEEN ((('802651116' IN ()))) AND ((((t0.c0) IS TRUE))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((~ ((NOT (t1.c0))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((~ ((NOT (t1.c0))))))) UNION SELECT DISTINCT * FROM t1 WHERE ((((~ ((NOT (t1.c0))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((((t0.c0)<(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (+ (x''))))>=(((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, x'', t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), t0.c0 COLLATE BINARY, ((t0.c0)+(t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0)<(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (+ (x''))))>=(((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, x'', t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), t0.c0 COLLATE BINARY, ((t0.c0)+(t0.c0)))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((((t0.c0)<(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (+ (x''))))>=(((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, x'', t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), t0.c0 COLLATE BINARY, ((t0.c0)+(t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(GROUP_CONCAT(MAX(t1.c0))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(GROUP_CONCAT(MAX(t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(GROUP_CONCAT(MAX(t1.c0)))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (t0.c0) UNION ALL SELECT * FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0 COLLATE NOCASE)AND(CASE WHEN '' THEN t0.c0 ELSE t0.c0 END)))AND(NULL COLLATE RTRIM))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0 COLLATE NOCASE)AND(CASE WHEN '' THEN t0.c0 ELSE t0.c0 END)))AND(NULL COLLATE RTRIM))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0 COLLATE NOCASE)AND(CASE WHEN '' THEN t0.c0 ELSE t0.c0 END)))AND(NULL COLLATE RTRIM))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1 WHERE (((((t0.c0)-('')))<(t0.c0 COLLATE BINARY))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t0, t1 WHERE ((NOT (((((t0.c0)-('')))<(t0.c0 COLLATE BINARY))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t0, t1 WHERE (((((((t0.c0)-('')))<(t0.c0 COLLATE BINARY))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(TOTAL(MIN(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(TOTAL(MIN(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(TOTAL(MIN(t0.c0)))) ISNULL);
SELECT * FROM t0 CROSS JOIN t1 ON ((-2.082077741E9) NOT NULL);
SELECT ALL * FROM t0 CROSS JOIN t1 ON ((-2.082077741E9) NOT NULL) WHERE ('by50(') UNION ALL SELECT ALL * FROM t0 CROSS JOIN t1 ON ((-2.082077741E9) NOT NULL) WHERE ((NOT ('by50('))) UNION ALL SELECT * FROM t0 CROSS JOIN t1 ON ((-2.082077741E9) NOT NULL) WHERE ((('by50(') ISNULL));
SELECT * FROM t0 CROSS JOIN t1 ON ((-2.082077741E9) NOT NULL);
SELECT DISTINCT t0.c0 FROM t1, t0;
SELECT DISTINCT t0.c0 FROM t1, t0 WHERE (NULL) UNION SELECT DISTINCT t0.c0 FROM t1, t0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT t0.c0 FROM t1, t0 WHERE (((NULL) ISNULL));
SELECT DISTINCT t0.c0 FROM t1, t0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (CAST(CAST(t1.c0 AS REAL) AS NUMERIC)) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (CAST(CAST(t1.c0 AS REAL) AS NUMERIC)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((CAST(CAST(t1.c0 AS REAL) AS NUMERIC)) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING MAX(TOTAL(COUNT(t1.c0))) UNION ALL SELECT t1.c0 FROM t1 NOT INDEXED GROUP BY t1.c0 HAVING (NOT (MAX(TOTAL(COUNT(t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((MAX(TOTAL(COUNT(t1.c0)))) ISNULL);
SELECT * FROM t1, t0;
SELECT ALL * FROM t1, t0 WHERE (CASE (t1.c0 IN ())  WHEN MAX('793734069', t0.c0) THEN ((t0.c0)>=(t0.c0)) END) UNION ALL SELECT * FROM t1, t0 WHERE ((NOT (CASE (t1.c0 IN ())  WHEN MAX('793734069', t0.c0) THEN ((t0.c0)>=(t0.c0)) END))) UNION ALL SELECT ALL * FROM t1, t0 WHERE (((CASE (t1.c0 IN ())  WHEN MAX('793734069', t0.c0) THEN ((t0.c0)>=(t0.c0)) END) ISNULL));
SELECT * FROM t1, t0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((((t1.c0)/(t1.c0)) IN ())) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((((t1.c0)/(t1.c0)) IN ())))) UNION SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0)/(t1.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 WHERE (((t1.c0) IS FALSE) COLLATE RTRIM) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, t1 WHERE ((NOT (((t1.c0) IS FALSE) COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, t1 WHERE (((((t1.c0) IS FALSE) COLLATE RTRIM) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(((MAX(t0.c0))!=(COUNT(*)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(((MAX(t0.c0))<>(COUNT(*)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(((MAX(t0.c0))<>(COUNT(*))))) ISNULL);
SELECT MAX((((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS REAL))) AND ((((t0.c0) NOTNULL))))) FROM t0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (CAST(HEX(t0.c0) AS BLOB)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CAST(HEX(t0.c0) AS BLOB)))) UNION ALL SELECT * FROM t0 WHERE (((CAST(HEX(t0.c0) AS BLOB)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE RTRIM) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 WHERE ((NOT (CAST(t1.c0 AS BLOB)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1, t0 WHERE ((NOT ((NOT (CAST(t1.c0 AS BLOB)))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1, t0 WHERE ((((NOT (CAST(t1.c0 AS BLOB)))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON ((((t0.c0)&(t0.c0)))-(1500455277)) GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON ((((t0.c0)&(t0.c0)))-(1500455277)) GROUP BY t0.c0, t1.c0 HAVING (((CAST('-1519774679' AS INTEGER)))=((COUNT(GROUP_CONCAT(t0.c0)) COLLATE NOCASE))) UNION ALL SELECT t0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON ((((t0.c0)&(t0.c0)))-(1500455277)) GROUP BY t0.c0, t1.c0 HAVING (NOT ((((CAST('-1519774679' AS INTEGER)))=((COUNT(GROUP_CONCAT(t0.c0)) COLLATE NOCASE))))) UNION ALL SELECT t0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON ((((t0.c0)&(t0.c0)))-(1500455277)) GROUP BY t0.c0, t1.c0 HAVING (((((CAST('-1519774679' AS INTEGER)))=((COUNT(GROUP_CONCAT(t0.c0)) COLLATE NOCASE)))) ISNULL);
SELECT ALL SUM((+ (((((t0.c0)AND(t1.c0)))OR(t0.c0))))) FROM t1, t0;
SELECT ALL * FROM t0, t1;
SELECT ALL * FROM t0, t1 WHERE ((((((((((x'' IN ()))AND(COALESCE(DISTINCT t1.c0, t0.c0, t1.c0, t1.c0))))AND(((t1.c0) IS TRUE))))AND(((x'') ISNULL))))AND(((t1.c0)%(t0.c0))))) UNION ALL SELECT ALL * FROM t0, t1 WHERE ((NOT ((((((((((x'' IN ()))AND(COALESCE(DISTINCT t1.c0, t0.c0, t1.c0, t1.c0))))AND(((t1.c0) IS TRUE))))AND(((x'') ISNULL))))AND(((t1.c0)%(t0.c0))))))) UNION ALL SELECT * FROM t0, t1 WHERE ((((((((((((x'' IN ()))AND(COALESCE(DISTINCT t1.c0, t0.c0, t1.c0, t1.c0))))AND(((t1.c0) IS TRUE))))AND(((x'') ISNULL))))AND(((t1.c0)%(t0.c0))))) ISNULL));
SELECT ALL * FROM t0, t1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 WHERE ((~ (t0.c0))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1, t0 WHERE ((NOT ((~ (t0.c0))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1, t0 WHERE ((((~ (t0.c0))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG((+ (MIN(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG((+ (MIN(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG((+ (MIN(t0.c0))))) ISNULL);
SELECT ALL * FROM t1;
SELECT ALL * FROM t1 WHERE (((((~ (t1.c0))))==((TRIM(DISTINCT t1.c0, t1.c0))))) UNION ALL SELECT * FROM t1 WHERE ((NOT (((((~ (t1.c0))))=((TRIM(DISTINCT t1.c0, t1.c0))))))) UNION ALL SELECT ALL * FROM t1 WHERE (((((((~ (t1.c0))))=((TRIM(DISTINCT t1.c0, t1.c0))))) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (TRIM(((t0.c0)!=(NULL)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (TRIM(((t0.c0)!=(NULL)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((TRIM(((t0.c0)<>(NULL)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (NULL COLLATE RTRIM) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (NULL COLLATE RTRIM))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((NULL COLLATE RTRIM) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT TOTAL((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((((t1.c0)||(t1.c0)))))) FROM t1;
SELECT * FROM t1;
SELECT * FROM t1 WHERE (-1495139571) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (-1495139571))) UNION ALL SELECT * FROM t1 WHERE (((-1495139571) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0;
SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0 WHERE (((((x'0f0dd374') BETWEEN (t0.c0) AND (t1.c0)))GLOB(t0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0 WHERE ((NOT (((((x'0f0dd374') BETWEEN (t0.c0) AND (t1.c0)))GLOB(t0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0 WHERE (((((((x'0f0dd374') BETWEEN (t0.c0) AND (t1.c0)))GLOB(t0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0;
SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 WHERE ((((t1.c0)<=('-1452767969')) IN ())) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, t1 WHERE ((NOT ((((t1.c0)<=('-1452767969')) IN ())))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, t1 WHERE ((((((t1.c0)<=('-1452767969')) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING TOTAL(((((AVG(t1.c0))OR(t1.c0)))AND(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING (NOT (TOTAL(((((AVG(t1.c0))OR(t1.c0)))AND(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING ((TOTAL(((((AVG(t1.c0))OR(t1.c0)))AND(t0.c0)))) ISNULL);
SELECT t0.c0, t1.c0 FROM t0, t1;
SELECT ALL t0.c0, t1.c0 FROM t0, t1 WHERE (CAST(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t0.c0)))OR(t1.c0)) AS NUMERIC)) UNION ALL SELECT t0.c0, t1.c0 FROM t0, t1 WHERE ((NOT (CAST(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t0.c0)))OR(t1.c0)) AS NUMERIC)))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 WHERE (((CAST(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t0.c0)))OR(t1.c0)) AS NUMERIC)) ISNULL));
SELECT t0.c0, t1.c0 FROM t0, t1;
SELECT DISTINCT * FROM t0 INDEXED BY i26;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((((NULL)/(t1.c0)))<<((t1.c0 IN ())))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((((NULL)/(t1.c0)))<<((t1.c0 IN ())))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((((NULL)/(t1.c0)))<<((t1.c0 IN ())))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0 CROSS JOIN t1 ON (t0.c0 IN ()) COLLATE BINARY GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0 CROSS JOIN t1 ON (t0.c0 IN ()) COLLATE BINARY GROUP BY t1.c0 HAVING (CASE MIN(COUNT(*))  WHEN t1.c0 THEN t0.c0 END IN (t0.c0 COLLATE NOCASE)) UNION ALL SELECT ALL t1.c0 FROM t0 CROSS JOIN t1 ON (t0.c0 IN ()) COLLATE BINARY GROUP BY t1.c0 HAVING (NOT ((CASE MIN(COUNT(*))  WHEN t1.c0 THEN t0.c0 END IN (t0.c0 COLLATE NOCASE)))) UNION ALL SELECT t1.c0 FROM t0 CROSS JOIN t1 ON (t0.c0 IN ()) COLLATE BINARY GROUP BY t1.c0 HAVING (((CASE MIN(COUNT(*))  WHEN t1.c0 THEN t0.c0 END IN (t0.c0 COLLATE NOCASE))) ISNULL);
SELECT ALL * FROM t1 LEFT OUTER JOIN t0 ON (((((((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))OR((- (t0.c0)))))OR((((t1.c0)) NOT BETWEEN (('e32cY﷢[L')) AND ((t1.c0)))));
SELECT ALL * FROM t1 LEFT OUTER JOIN t0 ON (((((((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))OR((- (t0.c0)))))OR((((t1.c0)) NOT BETWEEN (('e32cY﷢[L')) AND ((t1.c0))))) WHERE (CASE (((t1.c0))>=((t0.c0)))  WHEN UNLIKELY(t0.c0) THEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 ELSE t0.c0 END WHEN ((t0.c0)>>(t0.c0)) THEN ((t0.c0) ISNULL) WHEN CAST(t0.c0 AS INTEGER) THEN -1070247093 END) UNION ALL SELECT * FROM t1 LEFT OUTER JOIN t0 ON (((((((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))OR((- (t0.c0)))))OR((((t1.c0)) NOT BETWEEN (('e32cY﷢[L')) AND ((t1.c0))))) WHERE ((NOT (CASE (((t1.c0))>=((t0.c0)))  WHEN UNLIKELY(t0.c0) THEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 ELSE t0.c0 END WHEN ((t0.c0)>>(t0.c0)) THEN ((t0.c0) ISNULL) WHEN CAST(t0.c0 AS INTEGER) THEN -1070247093 END))) UNION ALL SELECT * FROM t1 LEFT OUTER JOIN t0 ON (((((((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))OR((- (t0.c0)))))OR((((t1.c0)) NOT BETWEEN (('e32cY﷢[L')) AND ((t1.c0))))) WHERE (((CASE (((t1.c0))>=((t0.c0)))  WHEN UNLIKELY(t0.c0) THEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 ELSE t0.c0 END WHEN ((t0.c0)>>(t0.c0)) THEN ((t0.c0) ISNULL) WHEN CAST(t0.c0 AS INTEGER) THEN -1070247093 END) ISNULL));
SELECT ALL * FROM t1 LEFT OUTER JOIN t0 ON (((((((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))OR((- (t0.c0)))))OR((((t1.c0)) NOT BETWEEN (('e32cY﷢[L')) AND ((t1.c0)))));
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((+ (t1.c0)) IN ())) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((+ (t1.c0)) IN ())))) UNION SELECT DISTINCT * FROM t1 WHERE (((((+ (t1.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0 IN (t0.c0))) BETWEEN (((t0.c0)>=(t0.c0))) AND (((t0.c0)|(t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0 IN (t0.c0))) BETWEEN (((t0.c0)>=(t0.c0))) AND (((t0.c0)|(t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0 IN (t0.c0))) BETWEEN (((t0.c0)>=(t0.c0))) AND (((t0.c0)|(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING MIN(TOTAL(NULL)) COLLATE RTRIM UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (MIN(TOTAL(NULL)) COLLATE RTRIM)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((MIN(TOTAL(NULL)) COLLATE RTRIM) ISNULL);
SELECT ALL * FROM t1;
SELECT ALL * FROM t1 WHERE (LIKELY(DISTINCT ((t1.c0) NOTNULL))) UNION ALL SELECT * FROM t1 WHERE ((NOT (LIKELY(DISTINCT ((t1.c0) NOTNULL))))) UNION ALL SELECT * FROM t1 WHERE (((LIKELY(DISTINCT ((t1.c0) NOTNULL))) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) ISNULL)) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) ISNULL)))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) ISNULL)) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c0))) IS FALSE)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, t1 WHERE ((NOT (((((((t0.c0)OR(t0.c0)))AND(t0.c0))) IS FALSE)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, t1 WHERE (((((((((t0.c0)OR(t0.c0)))AND(t0.c0))) IS FALSE)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT t1.c0 FROM t0, t1 NOT INDEXED GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING AVG(TOTAL(t0.c0)) UNION ALL SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING (NOT (AVG(TOTAL(t0.c0)))) UNION ALL SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING ((AVG(TOTAL(t0.c0))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((((- (t0.c0)))*('1614764658'))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((- (t0.c0)))*('1614764658'))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((((- (t0.c0)))*('1614764658'))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((~ (t0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((~ (t0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((~ (t0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t0, t1 WHERE (((t1.c0 COLLATE BINARY)%(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t0, t1 WHERE ((NOT (((t1.c0 COLLATE BINARY)%(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))))) GROUP BY t1.c0, t0.c0 UNION SELECT ALL t1.c0, t0.c0 FROM t0, t1 WHERE (((((t1.c0 COLLATE BINARY)%(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING GROUP_CONCAT(MIN(COUNT(*))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (GROUP_CONCAT(MIN(COUNT(*))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((GROUP_CONCAT(MIN(COUNT(*)))) ISNULL);
SELECT t0.c0, t1.c0 FROM t0, t1;
SELECT t0.c0, t1.c0 FROM t0, t1 WHERE (CAST(((t1.c0) IS FALSE) AS INTEGER)) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 WHERE ((NOT (CAST(((t1.c0) IS FALSE) AS INTEGER)))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 WHERE (((CAST(((t1.c0) IS FALSE) AS INTEGER)) ISNULL));
SELECT t0.c0, t1.c0 FROM t0, t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))<<(((t1.c0)-(t1.c0))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))<<(((t1.c0)-(t1.c0))))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))<<(((t1.c0)-(t1.c0))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS BLOB)) IS FALSE)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((CAST(t0.c0 AS BLOB)) IS FALSE)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((CAST(t0.c0 AS BLOB)) IS FALSE)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM t1;
SELECT * FROM t1 WHERE ((((t1.c0, t1.c0, t1.c0)) BETWEEN ((((t1.c0)/(t1.c0)), ((((4.59778637E8)AND(t1.c0)))AND(t1.c0)), ((t1.c0)>=(1132561012)))) AND ((((((t1.c0)AND(t1.c0)))AND(t1.c0)), ((x'') BETWEEN (t1.c0) AND (t1.c0)), (((t1.c0))=((t1.c0))))))) UNION ALL SELECT * FROM t1 WHERE ((NOT ((((t1.c0, t1.c0, t1.c0)) BETWEEN ((((t1.c0)/(t1.c0)), ((((4.59778637E8)AND(t1.c0)))AND(t1.c0)), ((t1.c0)>=(1132561012)))) AND ((((((t1.c0)AND(t1.c0)))AND(t1.c0)), ((x'') BETWEEN (t1.c0) AND (t1.c0)), (((t1.c0))==((t1.c0))))))))) UNION ALL SELECT * FROM t1 WHERE ((((((t1.c0, t1.c0, t1.c0)) BETWEEN ((((t1.c0)/(t1.c0)), ((((4.59778637E8)AND(t1.c0)))AND(t1.c0)), ((t1.c0)>=(1132561012)))) AND ((((((t1.c0)AND(t1.c0)))AND(t1.c0)), ((x'') BETWEEN (t1.c0) AND (t1.c0)), (((t1.c0))=((t1.c0))))))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT t1.c0 FROM t0, t1;
SELECT DISTINCT t1.c0 FROM t0, t1 WHERE (((((t1.c0) NOT NULL))&(((t0.c0)<<(t0.c0))))) UNION SELECT DISTINCT t1.c0 FROM t0, t1 WHERE ((NOT (((((t1.c0) NOT NULL))&(((t0.c0)<<(t0.c0))))))) UNION SELECT DISTINCT t1.c0 FROM t0, t1 WHERE (((((((t1.c0) NOT NULL))&(((t0.c0)<<(t0.c0))))) ISNULL));
SELECT DISTINCT t1.c0 FROM t0, t1;
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0 WHERE ((((CAST(t0.c0 AS REAL)))>((((((t1.c0)AND(t1.c0)))OR(t0.c0)))))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t1, t0 WHERE ((NOT ((((CAST(t0.c0 AS REAL)))>((((((t1.c0)AND(t1.c0)))OR(t0.c0)))))))) GROUP BY t1.c0, t0.c0 UNION SELECT ALL t1.c0, t0.c0 FROM t1, t0 WHERE ((((((CAST(t0.c0 AS REAL)))>((((((t1.c0)AND(t1.c0)))OR(t0.c0)))))) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0 COLLATE NOCASE)*(SUM(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((t0.c0 COLLATE NOCASE)*(SUM(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((t0.c0 COLLATE NOCASE)*(SUM(t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0 COLLATE NOCASE)*(SUM(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((t0.c0 COLLATE NOCASE)*(SUM(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((t0.c0 COLLATE NOCASE)*(SUM(t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN NULL ELSE t1.c0 END IN ())) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN NULL ELSE t1.c0 END IN ())))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN NULL ELSE t1.c0 END IN ())) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0;
SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0 WHERE ((((((((((((x'5650')) BETWEEN ((t1.c0)) AND ((t0.c0))))OR((t1.c0 IN ()))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t0.c0)))))AND((((t1.c0, t0.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t0.c0)) AND ((t1.c0, t1.c0, t0.c0))))))AND((NOT (t1.c0))))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0 WHERE ((NOT ((((((((((((x'5650')) BETWEEN ((t1.c0)) AND ((t0.c0))))OR((t1.c0 IN ()))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t0.c0)))))AND((((t1.c0, t0.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t0.c0)) AND ((t1.c0, t1.c0, t0.c0))))))AND((NOT (t1.c0))))))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0 WHERE ((((((((((((((x'5650')) BETWEEN ((t1.c0)) AND ((t0.c0))))OR((t1.c0 IN ()))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t0.c0)))))AND((((t1.c0, t0.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t0.c0)) AND ((t1.c0, t1.c0, t0.c0))))))AND((NOT (t1.c0))))) ISNULL));
SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1 WHERE (((t0.c0)/(t0.c0)) COLLATE BINARY) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t0, t1 WHERE ((NOT (((t0.c0)/(t0.c0)) COLLATE BINARY))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t0, t1 WHERE (((((t0.c0)/(t0.c0)) COLLATE BINARY) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((GROUP_CONCAT(COUNT(*)))OR(MIN(AVG(t1.c0)) COLLATE NOCASE)))AND(GROUP_CONCAT(COUNT(t1.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((((GROUP_CONCAT(COUNT(*)))OR(MIN(AVG(t1.c0)) COLLATE NOCASE)))AND(GROUP_CONCAT(COUNT(t1.c0)))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((((GROUP_CONCAT(COUNT(*)))OR(MIN(AVG(t1.c0)) COLLATE NOCASE)))AND(GROUP_CONCAT(COUNT(t1.c0))))) ISNULL);
SELECT ALL * FROM t0, t1;
SELECT ALL * FROM t0, t1 WHERE (CASE WHEN (((1.528548799E9)) BETWEEN (('')) AND ((NULL))) THEN t1.c0 COLLATE BINARY END) UNION ALL SELECT ALL * FROM t0, t1 WHERE ((NOT (CASE WHEN (((1.528548799E9)) BETWEEN (('')) AND ((NULL))) THEN t1.c0 COLLATE BINARY END))) UNION ALL SELECT * FROM t0, t1 WHERE (((CASE WHEN (((1.528548799E9)) BETWEEN (('')) AND ((NULL))) THEN t1.c0 COLLATE BINARY END) ISNULL));
SELECT ALL * FROM t0, t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((~ (((NULL) NOT BETWEEN (t1.c0) AND (t1.c0))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((~ (((NULL) NOT BETWEEN (t1.c0) AND (t1.c0))))))) UNION SELECT DISTINCT * FROM t1 WHERE ((((~ (((NULL) NOT BETWEEN (t1.c0) AND (t1.c0))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0)) BETWEEN ((((t0.c0) IS TRUE))) AND ((((t0.c0)LIKE(t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) BETWEEN ((((t0.c0) IS TRUE))) AND ((((t0.c0)LIKE(t0.c0)))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0)) BETWEEN ((((t0.c0) IS TRUE))) AND ((((t0.c0)LIKE(t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING ((((MIN(t0.c0))/(t0.c0))) NOT BETWEEN (COUNT(*)) AND (x'')) UNION ALL SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING (NOT (((((MIN(t0.c0))/(t0.c0))) NOT BETWEEN (COUNT(*)) AND (x'')))) UNION ALL SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING ((((((MIN(t0.c0))/(t0.c0))) NOT BETWEEN (COUNT(*)) AND (x''))) ISNULL);
SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING ((((MIN(t0.c0))/(t0.c0))) NOT BETWEEN (COUNT(*)) AND (x'')) UNION ALL SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING (NOT (((((MIN(t0.c0))/(t0.c0))) NOT BETWEEN (COUNT(*)) AND (x'')))) UNION ALL SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING ((((((MIN(t0.c0))/(t0.c0))) NOT BETWEEN (COUNT(*)) AND (x''))) ISNULL);
SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))||(TRIM(DISTINCT t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))||(TRIM(DISTINCT t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))||(TRIM(DISTINCT t0.c0)))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t0 NATURAL JOIN t1;
SELECT DISTINCT * FROM t0 NATURAL JOIN t1 WHERE (CASE (((t1.c0))>=((t1.c0)))  WHEN (t0.c0 IN ()) THEN (~ (t1.c0)) WHEN CASE WHEN t0.c0 THEN t1.c0 END THEN t0.c0 COLLATE NOCASE WHEN t0.c0 COLLATE BINARY THEN '' ELSE (((t1.c0))<>((t1.c0))) END) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN t1 WHERE ((NOT (CASE (((t1.c0))>=((t1.c0)))  WHEN (t0.c0 IN ()) THEN (~ (t1.c0)) WHEN CASE WHEN t0.c0 THEN t1.c0 END THEN t0.c0 COLLATE NOCASE WHEN t0.c0 COLLATE BINARY THEN '' ELSE (((t1.c0))!=((t1.c0))) END))) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN t1 WHERE (((CASE (((t1.c0))>=((t1.c0)))  WHEN (t0.c0 IN ()) THEN (~ (t1.c0)) WHEN CASE WHEN t0.c0 THEN t1.c0 END THEN t0.c0 COLLATE NOCASE WHEN t0.c0 COLLATE BINARY THEN '' ELSE (((t1.c0))<>((t1.c0))) END) ISNULL));
SELECT DISTINCT * FROM t0 NATURAL JOIN t1;
SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1 WHERE (CAST(((t1.c0) IS TRUE) AS REAL)) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t0, t1 WHERE ((NOT (CAST(((t1.c0) IS TRUE) AS REAL)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t0, t1 WHERE (((CAST(((t1.c0) IS TRUE) AS REAL)) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(((AVG(t1.c0)) IS TRUE)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(((AVG(t1.c0)) IS TRUE)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(((AVG(t1.c0)) IS TRUE))) ISNULL);
SELECT ALL SUM(((((((((((t1.c0)OR(t0.c0)))AND(t1.c0)))OR(t0.c0)))AND(t0.c0)))<(((x'') NOT BETWEEN (t0.c0) AND (0.7293261711778437))))) FROM t1, t0 ORDER BY (((((((((t0.c0 IN ()))OR(CAST(t0.c0 AS NUMERIC))))AND(((((t0.c0)OR('1041245690')))AND(t0.c0)))))OR((('-585074035') BETWEEN (t0.c0) AND (t0.c0)))))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))  NULLS FIRST;
SELECT * FROM t1;
SELECT ALL * FROM t1 WHERE ((((NOT (t1.c0))) NOT BETWEEN (t1.c0) AND (CAST(t1.c0 AS REAL)))) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT ((((NOT (t1.c0))) NOT BETWEEN (t1.c0) AND (CAST(t1.c0 AS REAL)))))) UNION ALL SELECT ALL * FROM t1 WHERE ((((((NOT (t1.c0))) NOT BETWEEN (t1.c0) AND (CAST(t1.c0 AS REAL)))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((CAST(t0.c0 AS REAL) IN ())) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((CAST(t0.c0 AS REAL) IN ())))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((CAST(t0.c0 AS REAL) IN ())) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0)||(t0.c0)))>(LIKE(t0.c0, t0.c0)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)||(t0.c0)))>(LIKE(t0.c0, t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0)||(t0.c0)))>(LIKE(t0.c0, t0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(CAST(t0.c0 AS REAL)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(CAST(t0.c0 AS REAL)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(CAST(t0.c0 AS REAL))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(CAST(t0.c0 AS REAL)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(CAST(t0.c0 AS REAL)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(CAST(t0.c0 AS REAL))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((((((((((((((((t0.c0)AND('껏2')))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(((t0.c0) NOT NULL))))OR((NOT (t0.c0)))))AND(((t0.c0)LIKE(t0.c0)))))OR(json(t0.c0)))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((((((((((((((t0.c0)AND('껏2')))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(((t0.c0) NOT NULL))))OR((NOT (t0.c0)))))AND(((t0.c0)LIKE(t0.c0)))))OR(json(t0.c0)))))) UNION ALL SELECT * FROM t0 WHERE (((((((((((((((((((t0.c0)AND('껏2')))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(((t0.c0) NOT NULL))))OR((NOT (t0.c0)))))AND(((t0.c0)LIKE(t0.c0)))))OR(json(t0.c0)))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t1.c0 FROM t0, t1;
SELECT DISTINCT t1.c0 FROM t0, t1 WHERE (((CAST(t0.c0 AS BLOB))GLOB((+ (t1.c0))))) UNION SELECT DISTINCT t1.c0 FROM t0, t1 WHERE ((NOT (((CAST(t0.c0 AS BLOB))GLOB((+ (t1.c0))))))) UNION SELECT DISTINCT t1.c0 FROM t0, t1 WHERE (((((CAST(t0.c0 AS BLOB))GLOB((+ (t1.c0))))) ISNULL));
SELECT DISTINCT t1.c0 FROM t0, t1;
SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0, t1 WHERE (((TRIM(DISTINCT t0.c0))LIKE((t1.c0 IN (t0.c0))))) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t0, t1 WHERE ((NOT (((TRIM(DISTINCT t0.c0))LIKE((t1.c0 IN (t0.c0))))))) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t0, t1 WHERE (((((TRIM(DISTINCT t0.c0))LIKE((t1.c0 IN (t0.c0))))) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0 INNER JOIN t1 ON ((COALESCE(t1.c0, t1.c0)) NOTNULL) GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0 INNER JOIN t1 ON ((COALESCE(t1.c0, t1.c0)) NOTNULL) GROUP BY t0.c0, t1.c0 HAVING ((TOTAL(t1.c0)) NOT NULL) COLLATE RTRIM UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0 INNER JOIN t1 ON ((COALESCE(t1.c0, t1.c0)) NOTNULL) GROUP BY t0.c0, t1.c0 HAVING (NOT (((TOTAL(t1.c0)) NOT NULL) COLLATE RTRIM)) UNION ALL SELECT t0.c0, t1.c0 FROM t0 INNER JOIN t1 ON ((COALESCE(t1.c0, t1.c0)) NOTNULL) GROUP BY t0.c0, t1.c0 HAVING ((((TOTAL(t1.c0)) NOT NULL) COLLATE RTRIM) ISNULL);
SELECT ALL t0.c0, t1.c0 FROM t0 INNER JOIN t1 ON ((COALESCE(t1.c0, t1.c0)) NOTNULL) GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0 INNER JOIN t1 ON ((COALESCE(t1.c0, t1.c0)) NOTNULL) GROUP BY t0.c0, t1.c0 HAVING ((TOTAL(t1.c0)) NOT NULL) COLLATE RTRIM UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0 INNER JOIN t1 ON ((COALESCE(t1.c0, t1.c0)) NOTNULL) GROUP BY t0.c0, t1.c0 HAVING (NOT (((TOTAL(t1.c0)) NOT NULL) COLLATE RTRIM)) UNION ALL SELECT t0.c0, t1.c0 FROM t0 INNER JOIN t1 ON ((COALESCE(t1.c0, t1.c0)) NOTNULL) GROUP BY t0.c0, t1.c0 HAVING ((((TOTAL(t1.c0)) NOT NULL) COLLATE RTRIM) ISNULL);
SELECT ALL t0.c0, t1.c0 FROM t0 INNER JOIN t1 ON ((COALESCE(t1.c0, t1.c0)) NOTNULL) GROUP BY t0.c0, t1.c0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (CAST(NULL AS TEXT)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CAST(NULL AS TEXT)))) UNION ALL SELECT * FROM t0 WHERE (((CAST(NULL AS TEXT)) ISNULL));
SELECT * FROM t0;
