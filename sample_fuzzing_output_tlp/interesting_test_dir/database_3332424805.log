-- Time: 2024/06/12 06:08:28
-- Database: database5
-- Database version: 3.40.0
-- seed value: 3332424805
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE TEMP TABLE t0 (c0 TEXT NOT NULL ON CONFLICT IGNORE CHECK ( ((((COALESCE(DISTINCT c0, c0))AND(c0)))AND(((c0) NOTNULL)))) ); -- 1ms;
PRAGMA main.cache_spill; -- 0ms;
PRAGMA temp.soft_heap_limit; -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t1 (c0 INT , c1 INT , c2 TEXT ); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR REPLACE t1 SET (c1)=(NULL) WHERE ((CASE t1.c0  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN '~' WHEN t1.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c2 WHEN t1.c0 THEN t1.c1 END) NOT BETWEEN ((((t1.c0)) NOT BETWEEN ((t1.c2)) AND ((t1.c1)))) AND (((t1.c0)>(t1.c2)))); -- 0ms;
UPDATE t0 SET (c0, c0)=(NULL, 't'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA busy_timeout = 10000; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c54; -- 6ms;
UPDATE OR IGNORE t0 SET (c54, c54)=(x'b723', NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c54=NULL; -- 0ms;
PRAGMA temp.shrink_memory; -- 4ms;
INSERT OR ROLLBACK INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL), (x''), ('OWzVG\n*'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE t0 SET c0=NULL, c0='M9yP6jETA' WHERE CAST(NULL AS INTEGER); -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA main.journal_mode = DELETE; -- 0ms;
UPDATE t1 SET c2=NULL; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR ABORT INTO t1(c0) VALUES (0.7373583815749984), (NULL), (0.7373583815749984); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=('437866222', NULL); -- 0ms;
UPDATE OR ABORT t0 SET c0=0.0024958549019921117 WHERE (((((t0.c0))<((t0.c0))))*(x'')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((437866222)||(NULL))))>=((CASE 127303350  WHEN 'q#' THEN 0.6814369053194085 WHEN 905445203 THEN x'' WHEN '437866222' THEN x'' WHEN NULL THEN x'' WHEN NULL THEN 437866222 ELSE NULL END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('', '905445203', 0.7373583815749984)) NOT BETWEEN ((x'' COLLATE RTRIM, CAST('1668012616' AS BLOB), (('-692291865') BETWEEN (1.2730335E8) AND (NULL)))) AND (((('U(T盧E\V')IS NOT(x'c5889590')), (+ (NULL)), (('-362942127') NOT NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS TRUE))OR(('OWZVG\n*' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '682293962 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('vZt盧''}i\r0' COLLATE BINARY IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=127303350 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'2989'))>=(('-692291865'))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SUBSTR(0xffffffffd6ed052b, 0.060336488930378795))GLOB(((0.31329012753386687) BETWEEN (9.05445203E8) AND ('-689109717')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xffffffffcb6aa0bf COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '2 sz=-1452921367'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1310519607 sz=-991214759 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x1021defa) NOT BETWEEN (((('270655226')) BETWEEN ((-1417024552)) AND (('')))) AND (x'' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE(DISTINCT NULL, '%l', 0.4697584049700656, 1668012616, '-789439884', '-1452921367')) NOT BETWEEN (CASE ''  WHEN '0.7373583815749984' THEN x'' ELSE '-1452921367' END) AND (SQLITE_COMPILEOPTION_USED(-8.82204481E8))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-99315128 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1761332034 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1751942997 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-1346527310 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((785940267) IS TRUE)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '445396739 -1310519607 sz=376949547 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0.5424164908579209)||(0.5424164908579209)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1093301453 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=445396739 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '2 -406519963 sz=270655226 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (0x12b60527))) BETWEEN (((((((((0xffffffffa7525068)AND(x'9eb45d496250')))OR(-9.91214759E8)))OR(-46005582)))AND(0.0024958549019921117))) AND (((x'dda2') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')OR('785940267')))OR('-991214759')))*((((3.76949547E8))==(('E]'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1222540830 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.4697584049700656'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN (((('t') IS FALSE))) AND ((COALESCE(DISTINCT 0.6814369053194085, 0.4495818453748911)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1310519607') IS FALSE))OR((+ (0.8176468658187409)))))OR(TYPEOF(0X6fcf702f))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'c94f9a87')<(x'')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=156977339 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-878723542)GLOB('')))-(((('')) NOT BETWEEN ((NULL)) AND (('-880413655'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=607803537 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1844565462 sz=437866222 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_type(NULL COLLATE RTRIM); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)<('')) THEN ((NULL) BETWEEN (0.06832321345848003) AND (0.5390071168078255)) WHEN ((((0.10629974385769903)AND(x'')))OR('-1855347833')) THEN -118075014 COLLATE RTRIM WHEN ('9' IN ()) THEN (- (NULL)) ELSE ((x'')%(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TIME(CAST('-166760876' AS NUMERIC), CAST(x'' AS BLOB), x'' COLLATE RTRIM); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-2050228782 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-342949453 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'e635' COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN TRIM(DISTINCT '1215219276') THEN ((x'') BETWEEN ('738640558') AND (0.060336488930378795)) WHEN (((NULL)) NOT BETWEEN (('')) AND ((x'8329'))) THEN (- ('-53062221')) WHEN '-99315128' COLLATE NOCASE THEN ('	{	w%!{V' IN (x'', '0.6814369053194085')) ELSE ((x'1464')/(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '437866222 1222540830 sz=-1729757177 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'8225')%(x'1a95')) THEN CAST(x'' AS NUMERIC) ELSE ((-137985206) NOT BETWEEN (0.737638708953841) AND (x'9329')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-9223372036854775808'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'75e5'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-1089838368' COLLATE RTRIM AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=288162674'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ((0.9463183274448631) IS FALSE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-749519505 unordered noskipscan'); -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-692291865 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1432113345 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-874152931'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 804286399 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)AND(NULL)))OR(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 -406519963 sz=607803537 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-789439884'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=785940267'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=445396739 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=184399224'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0.058480727348246164))) NOT BETWEEN ((('裣_')IS(x'c6a5'))) AND ((((0x7eaa4bf6, 0xffffffffac43a04f, '101695320')) NOT BETWEEN (('!TfSL', 0Xffffffffd885a050, '')) AND ((NULL, '1e500', 0.10629974385769903))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=391382140'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((9.05445203E8))<=((-2092531776)))) NOT BETWEEN ((('')%(0.10629974385769903))) AND ((('') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((NOT ('.,')))OR(((x'ccb68e73') NOT BETWEEN (0.3301095705685477) AND ('1761958905')))))AND(UNLIKELY(DISTINCT NULL))))OR(((((x'')AND('-166760876')))AND(0.9737315259979178)))))AND(((0.06282045239182965) NOT BETWEEN (0Xffffffffa7525068) AND ('407808549')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=500897674'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.5424164908579209) NOT BETWEEN (x'ce93') AND (x'df09')))OR(CAST(0.40734736548855355 AS REAL))))OR((((x'92e4d01b', 'sj5Ắ', 0.20552122300070297, 1875865647, 0.5390071168078255))>=((0.8341187371529345, x'ca7e', NULL, 0.723028710414208, 785940267))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.6814369053194085' COLLATE BINARY) BETWEEN (((-1310519607) BETWEEN (NULL) AND (0.31329012753386687))) AND (((x'') BETWEEN (NULL) AND (0Xffffffffa372be32)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_patch(((x'38cc3fea')<(x'')), CAST(1284825812 AS TEXT)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=603836238'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '1751942997 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1120645367 sz=-99315128'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X3b3b64de) IS FALSE)) BETWEEN ((NOT (NULL))) AND ((NULL IN (0.3233320313950959, NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (COALESCE(NULL, '', 0.058480727348246164, ''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '^kC?{(.vร'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-472926150' AS INTEGER))IS NOT((('1743129426')-('445396739')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-2094437816') NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(NULL AS NUMERIC))AND((((x'', NULL, ''))>((NULL, 0Xa57ea52, 'j2'))))))AND(NULLIF(DISTINCT NULL, x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL COLLATE RTRIM  WHEN ((3.9138214E8) NOT BETWEEN (0.40915529685259355) AND ('0.8341187371529345')) THEN ('b!' IN (x'', '-937141233')) WHEN CAST(x'' AS REAL) THEN NULLIF(DISTINCT '1124763976', '-32069713') WHEN TYPEOF('\rj') THEN ((NULL)<(x'9c99')) ELSE LAST_INSERT_ROWID() END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1346527310 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)GLOB(NULL))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-2085213663 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '13488008 sz=703004539 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1506568465'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=2104952135'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'1a8c') NOT NULL))AND(CASE 0.40734736548855355  WHEN NULL THEN '-662331312' WHEN x'' THEN x'' WHEN 'KvB+' THEN '&1p''\)' WHEN 0xffffffff9d19e36e THEN 0.2818189081579686 WHEN x'' THEN x'' END)))AND('-2085213663' COLLATE BINARY)))OR(((('JI', x'', 0x23fdcf4e)) BETWEEN ((0.9801054730459579, -2.085213663E9, 0.4495818453748911)) AND ((NULL, x'90e7', '184399224'))))))OR((('-32069713')<=(0.9737315259979178)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((0X6c69d008)OR('-_')))AND(-1.452921367E9)))AND(x'')))AND(0.6872448810383389)))AND(NULLIF('0.6872448810383389', NULL))))AND((((NULL, x'', NULL)) NOT BETWEEN ((x'', '1222540830', 'PC.5')) AND (('-937141233', 'UXy9', 0.921067785911261))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((0.10946419279600761)AND(NULL)))OR(0.8176468658187409)))OR('TRUE')))OR('288162674')))AND(((((0.7243056342426811)AND(6.03836238E8)))OR(0.30026440955097455)))))OR((('%l') NOT BETWEEN (NULL) AND (0.9801054730459579)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1330037228'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>=(0.9737315259979178))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-967049518 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-374373338 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1675443748'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.4722168591468373, 'A\rD6Nd\n', NULL))>((665219694, 0.8648312428361212, '127303350'))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=156977339 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=281707961'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (0.9259928868542354) AND (NULL))) BETWEEN (((1980053176) NOTNULL)) AND (x'')); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-967049518 sz=1690483462 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) BETWEEN ((0.15761628051668186)) AND ((((0.6149362705201517) BETWEEN (x'') AND ('-662331312'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-994182289'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5226209534519297; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-67360957 sz=1730264033 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-2131530285 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-494122845'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '4 -882204481 sz=1305537121 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1725622660 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1855347833 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.04572079389151773))=((''))) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=31752813 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-245159347 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.6331887303371856) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1614900575 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1913665282 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 sz=-991214759'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x23ae7b7b COLLATE BINARY))<=((((x'46ed') BETWEEN ('JI') AND (-8.82204481E8))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.9310616156866162 THEN NULL WHEN 'v' THEN 't' WHEN 0.21947455018219686 THEN 0.30983102204064117 END)>(COALESCE(x'', 0.06319280404867789))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1082816781 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-789439884 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1549540289 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1093301453'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1025071793 sz=-450391499 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-291777076 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2045486953 sz=281707961 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((('313918759')) NOT BETWEEN (((((x''))>((1.730264033E9))))) AND ((((0.20548122526835177) NOT BETWEEN (NULL) AND ('MP薹骖sz'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0) NOT NULL) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'143c6ae3' COLLATE NOCASE)LIKE((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1957765731 sz=1410240854'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF((((0.4722168591468373, 0.9641117808652234, NULL)) NOT BETWEEN (('', x'', x'')) AND ((x'', '', NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 1788069901 0 sz=328129325'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (x'348a' COLLATE NOCASE IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'd3ab') NOT BETWEEN (NULL) AND (0.5960471794942855)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '621487118 0 sz=1442377523 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((LIKELY(x''))OR(NULLIF(DISTINCT NULL, x''))))OR(0.9310616156866162 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('-1180013657' AS BLOB) IN ()); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE (+ (0.6872448810383389))  WHEN CAST(NULL AS INTEGER) THEN (109882982 IN ()) WHEN -2.085213663E9 THEN ((((x'')OR(NULL)))OR(x'')) WHEN CAST('1545598260' AS REAL) THEN ((NULL)LIKE(0.737638708953841)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) ISNULL) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.7920555027067608))<((NULL))))<(CAST('0.9641117808652234' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT (- (NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 sz=-1506568465 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST('gdF''' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- ((+ (0.8015598112263247)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.8015598112263247) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(NULL AS INTEGER)))<=((((x'04f4') IS TRUE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=715227250 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'4214')AND(NULL)))OR(NULL)))>(((x'') BETWEEN (NULL) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1408182864'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(NULL, '0.8648312428361212')) NOT BETWEEN (((('1215219276', 0.6157720476686808, x'4e39'))<=((-1, 'v', x'')))) AND (((NULL) BETWEEN ('-2050228782') AND (NULL)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN (0xffffffffd5e4e9bb) AND (NULL)) COLLATE NOCASE COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-362942127 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1435188933'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-161520167 4 sz=1006000894 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-4.6005582E7) NOTNULL))OR((0.36073626615003074 IN ()))))OR(x'4b6d5f5e')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((0.529358689550583)OR(0.7710937831244733)))AND(x'')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')>=(0.5367077408718527)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1392544475'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 -1654007598 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-472926150 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (x'')))+((('1818873864')>=(1316949937)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-118075014 COLLATE BINARY)OR((((((((('j2')OR(x'')))AND(NULL)))AND(0.042061780618723676)))OR(NULL)))))OR(((0.3301095705685477)!=('IY拠n<')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0xffffffffe3bca72f THEN 0X2adb49d ELSE 0.710778505335564 END) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-144747481 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 0 sz=673876982 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1785513113'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0xffffffff8756ce7b)+('JMW')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((9.978992978499912E-4)IS NOT(-723850247)))OR(LIKELY(NULL))))AND(0X564705ae COLLATE BINARY)))OR((('') ISNULL))))AND((0.68115951457182 IN ()))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))==(('-1851887550'))))IS NOT(((NULL) BETWEEN ('[-X^ｻ|L') AND ('4宂')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-413641005 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-472926150 1794056875 sz=-176968780 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE JULIANDAY((('407808549') BETWEEN ('0.9737315259979178') AND (2038247851)), CAST(0.04530779804000751 AS BLOB), CASE 0.6363327319217941  WHEN '>뚖vVR^ 憐c' THEN 0.7920555027067608 END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (0.5972778313321401 COLLATE NOCASE IN (UNLIKELY(NULL), TRIM(DISTINCT '/CE㞭'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('-1981672329')<(0.5367077408718527)) THEN (((((((('L()-')OR(x'')))AND(NULL)))OR('')))OR(0xffffffffa844a57a)) ELSE ((NULL)IS NOT(0.5725967371647347)) END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-390849297'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=156977339 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1230476315'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1132148357 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((- (NULL)), CASE NULL  WHEN 0Xffffffffd6bc76e7 THEN 0.5367077408718527 WHEN 0.667522645959313 THEN NULL WHEN -2050228782 THEN '&1p''\)' ELSE '-1645605341' END, ((((x'')AND('-689109717')))OR(''))))<((((494182549) NOTNULL), 0.5216018291841209, NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('E]' IN (x''))) BETWEEN ((('^') IS TRUE)) AND ('6	vgT')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('YR') IS FALSE)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)<=('510670099')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1371339546'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1706950157 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-702233160 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '2103101557 sz=-1609102588'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('h')OR(x'f554')))AND(0.7373583815749984))))>((((x'') IS TRUE)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-991214759') ISNULL) IN ((('-994182289') NOT BETWEEN (0.5347821829167562) AND ('66694820')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'4a7e') NOTNULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6993260867670511) NOT BETWEEN ('!&oT') AND ('wwK3*1t<')))>>((('Xhm54q')==(-1.761332034E9)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') NOT BETWEEN ('xhm54q') AND (NULL)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1093301453 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=1832419950 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-46005582 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-879098322'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=376949547 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN '{}3' THEN '-32069713' END) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.7915977922164459)))GLOB(((('煭j')) BETWEEN ((x'ec40')) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-711208300 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1103088215 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.8341187371529345)>>('<	()')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST('1222540830' AS NUMERIC) THEN (('') BETWEEN (NULL) AND (9.978992978499912E-4)) ELSE ((x'4058c31f') BETWEEN (NULL) AND (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 0 sz=1222540830 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=-494122845'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=989108993 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=2139687556 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1215219276 sz=-1577353827 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.25450345092453597 IN ('yoy7ZO(t'))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('-118075014')>=(x'65ed')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1128014275'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL))) NOT BETWEEN (((NULL)GLOB(''))) AND (((0.8230853351049066)>>('[')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1452921367 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 0 sz=1679156134'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1505412143 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-170312410 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (('-1675443748' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=993748190 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((0.5390071168078255)) AND (((NULL IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS NUMERIC))|((((0.2880754618536612, NULL, ' A'))<=((',୒귚3>)nK ', x'8362', NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=534848906 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-406519963 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '153380737 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('-1490755925')))*(CASE WHEN -880413655 THEN '' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'2d33' AS INTEGER) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('')LIKE(6.03836238E8)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-729626267 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 0 sz=717636774 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL)LIKE(0.8409754553857421)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1056473321 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1855347833 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1614900575'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('' COLLATE NOCASE)OR((('93d')&(x'')))))AND(((x'a278')>=(0.263426680987323)))))OR(((x'')GLOB(x'')))))AND(0.1643180007818098)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '2 sz=852105342 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1487777688 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1503687489 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE 0xffffffffdd8881e8; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (0.8896902801249053)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.529358689550583'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-46005582 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=2109968035 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8720852970613784)) NOT BETWEEN (((~ (NULL)))) AND ((((1486395607) NOTNULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x'', '牮+A_', x'')) NOT BETWEEN ((NULL, '1191420460', -81343700)) AND ((x'', x'c16f', x'f979'))) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NOT (NULL))))!=((CASE WHEN '146076373' THEN x'' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-994182289 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x'8d4a' COLLATE RTRIM  WHEN ((((NULL)OR('*2')))AND(0.8559114767401593)) THEN ABS(1012570817) WHEN ((('0.8409754553857421'))<>((NULL))) THEN ((x'2b53')!=(x'')) WHEN 0.2424924466931654 THEN ((0.04130753366488238) NOT BETWEEN (NULL) AND ('-557131907')) ELSE CAST('0.5725967371647347' AS TEXT) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.0644759397492749 COLLATE BINARY IN ((((0.9772851188417738))!=(('1284825812'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=184399224'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('vzt盧''}i\r0')))<=((+ (1725622660)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-662331312'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=839089660'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.5120215550440219 IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-928204357'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-2050228782'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((LIKELY(NULL))OR(((((0X1728b28)AND(0.9316781887555954)))AND(NULL)))))AND((('181328557')<>(0.6641396554333457)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('m1໶~' COLLATE NOCASE) BETWEEN (CASE WHEN x'' THEN NULL ELSE 0.8648312428361212 END) AND (NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((1)) NOT BETWEEN ((0.4027211114832431)) AND (('0.723028710414208')))  WHEN '#Dga %' COLLATE NOCASE THEN (((0.8230853351049066, x'a4f0', '')) NOT BETWEEN ((NULL, 'l~', 'I%')) AND ((-2.092531776E9, -880413655, '-1723548812'))) WHEN ((0.5822230406994581)<=('-235530966')) THEN ((x'152e9b0d') NOT BETWEEN (NULL) AND (NULL)) WHEN JULIANDAY(x'', 'Rd', '雯A}*', 'CdO', NULL) THEN (- ('-1611327667')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x39a65202 COLLATE NOCASE)%(((-1.37985206E8)||('xwnJ{]')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1799703145 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=688254419 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1404854193 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((1093301453)AND('Y	')))AND(0.6819211039712029)))||(((0.5930435424102545)OR('1215219276')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 sz=993748190'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST('-1502096569' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1089838368 sz=-431210950 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL) BETWEEN (x'') AND (-962347096)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('[' COLLATE BINARY)GLOB((('') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, x'', 0.5226209534519297, x'', '-1843333195')) NOT BETWEEN ((NULL COLLATE BINARY, (('-654783253') IS FALSE), CASE WHEN 'mp薹骖sz' THEN '-1506568465' WHEN 0x52cf6ad6 THEN x'' WHEN '' THEN x'1037' END, ((x'') BETWEEN ('-1939774128') AND ('')), '-499068711' COLLATE BINARY)) AND ((((x'6941') NOTNULL), CAST('-1452921367' AS REAL), CASE NULL  WHEN 3.76949547E8 THEN -245159347 END, IFNULL(NULL, x''), CHAR('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=2061841497 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 sz=-1966936978 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1371457364'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '309434405 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1874911173 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x60fbf58; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-937225242 313918759 sz=1875865647 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'3bfa')-('30106155')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-415194170 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(-2112085352 AS INTEGER) IN (SQLITE_SOURCE_ID())); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '775205356 -1768510848 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.29715188211761756, NULL, '1743129426'))<=(('U(T盧E\V', NULL, x'')))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'0648')>=(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELY(DISTINCT '138690474')) NOT BETWEEN ((('Bk	4{)') ISNULL)) AND ((-2131530285 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-2050228782'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 0 sz=270655226 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('')|(0.8005088243210351)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'm)M>'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')>('')))*((((((((('6p')AND(993748190)))OR(x'')))OR(603836238)))AND(0.8963428190912972)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=905445203 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- ('')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('738640558')-(0.01968495718229546)))>(CAST(1e500 AS REAL))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'7e66')AND(x'')))OR(x'')))>>(CASE '5'  WHEN '-137985206' THEN '0.6363327319217941' WHEN NULL THEN '-582130339' WHEN 0.8237354152075343 THEN 0.8059335734656616 ELSE x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1716947131 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, x'', x'397b')) NOT BETWEEN (((+ (x'')), SUBSTR(NULL, '738640558'), CASE WHEN x'' THEN -749519505 WHEN NULL THEN x'' WHEN '1738059814' THEN 0.5873150651592707 END)) AND ((0.24645477094146562, (x'' IN ()), 0.6978443193116545))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 2084348884; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x40da19f8) NOT NULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) BETWEEN (NULL) AND (-2088416396)) IN (CAST(x'06e7' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('M}M>㙈6p翀')>>('0.6819211039712029')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1408835815'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-784020066 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('1124763976')OR(x'')))AND(NULL)))AND(x'')))AND(0xffffffff970434be)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1211263644'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.4162221625243544)AND('0.8230853351049066')))AND(x'0ec2')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT CAST(0.8759051623159395 AS BLOB), 0.6992350117872623); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-465640400'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-381030262 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-46005582 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1592853339 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 2 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.7418754751485087  WHEN 1999612480 THEN '2036694841' END) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN x'78e72ffc' THEN 0.18010778283531603 END THEN 0xffffffffc4eb4359 COLLATE RTRIM ELSE NULL COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=1743129426 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1930188073 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UNICODE(9.9374819E8)) BETWEEN (CASE '281707961'  WHEN 'R6' THEN 1651372060 END) AND (x'' COLLATE NOCASE)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x''))) BETWEEN ((('500897674') ISNULL)) AND (CAST(NULL AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((x'' COLLATE NOCASE)AND(LIKELY(DISTINCT x''))))OR((((0.7157670904779694))<=((x'c3801767'))))))OR((NOT (0xffffffffc8245c0f)))))OR('触' COLLATE BINARY)))AND(((x'') NOT BETWEEN (NULL) AND ('')))))AND(((x'')AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-878723542 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((((0x5e1dc6c)OR('993748190')))OR(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('By')/(x'')))%((NULL IN (x'', -1697845810)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS NUMERIC)) BETWEEN (CAST('-1552761294' AS INTEGER)) AND ((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('')IS(-1e500)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(-1505329914 AS NUMERIC))/(((('x0QI\'))>=(('156977339'))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-957176272 0 sz=982082079 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-2019435913 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.2564606857548756) BETWEEN (x'') AND (x''))  WHEN ((1222540830)/(x'04af')) THEN ((NULL)LIKE('')) WHEN LIKELY(x'') THEN ((x'')||('607803537')) WHEN ((((x'')AND('')))OR(x'7d7b')) THEN '' COLLATE NOCASE ELSE (+ (x'86de')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 -845522220 sz=-1284442079 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-426400415 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1205179672 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) NOT BETWEEN (('0.4027211114832431')) AND ((0X54288b17))))=(((x'b0653959')AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN '' THEN 'v.' END)IS NOT(((0.9537353581707538) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=804286399 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-759290523'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((+ (0.920637505033999))))>((json_array_length(x'', 0.49771211316844577)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.2023725037570443; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1.552761294E9)==(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1137667948 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UNLIKELY(x''))>=(((0.8615682353728963) NOT BETWEEN (x'f5bd') AND ('}5')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=437866222 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-342949453 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '905445203'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'4f482005' THEN 'A\rD6Nd\n' END) NOT BETWEEN ((('10361637') IS TRUE)) AND ((('-2050228782')IS('483609463')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)==(0.9539827323928363)) COLLATE RTRIM; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1768372150 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('-1750606669')))+(IFNULL(0.02703777195244117, 0.3979145731362581))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(CAST(NULL AS INTEGER)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('', NULL, NULL))>((NULL, 'EQ돈v6Z', 0.14769612626784367))))+(((0.8928696610088798) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('0.8648312428361212' AS BLOB))IS(x'1f47' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN '' END) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 0 sz=1432326049 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)OR(x'')))AND(-749519505)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ (x'')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1.432113345E9) BETWEEN (0.21947455018219686) AND (0.9259928868542354)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-410975365 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1432179022')<=((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1761958905 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST(NULL AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '905445203 sz=393305892 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1354850444'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-2026098070'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((SUBSTR(0.1106400853281152, 0.4027211114832431))AND(1479068744 COLLATE NOCASE)))OR((('-98757476') NOT BETWEEN (NULL) AND (NULL)))))AND(0X5c809f64)))AND(CASE WHEN '-2085213663' THEN 999886871 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1346527310'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('Ck') BETWEEN (NULL) AND (x'')))AND((('173533778')<(4.07808549E8)))))OR(CASE WHEN 0.2865811179527751 THEN 0.8870596403770837 END)))AND(CASE 0.6993260867670511  WHEN NULL THEN '376949547' WHEN 'Rd' THEN x'' WHEN NULL THEN NULL END)))AND('775716293' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1673489347 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(x'' AS TEXT))AND(('-967049518' IN (NULL)))))AND(rtreenode('0.7920555027067608', '666311903'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1310519607 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5512191538404695; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=1293193440 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1452921367', 0Xffffffff95525e00, NULL))<=((NULL, x'', x'59a5'))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((UPPER('1'))AND(CASE WHEN 0.8191221458293801 THEN 1946697662 ELSE x'' END)))OR(CASE x''  WHEN '1124763976' THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xffffffff89d2c89a; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('') NOT BETWEEN ('1305537121') AND ('')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.6940156562507298) BETWEEN ('B') AND (x'da49')))AND(x'')))OR(((x'')<(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'') BETWEEN (x'') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1791939638 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (-165599672 IN ())  WHEN CAST(x'' AS TEXT) THEN ((x'')==(NULL)) ELSE ('Z\{}' IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1885244834 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-171306095'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('OI') BETWEEN (1.2730335E8) AND (0.7865604146097687))))>=((CAST('' AS BLOB)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=878698389 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 2 sz=882875893'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((NULL)AND(0.620173389921495)))OR(x'7ab5')) THEN (('谢E') NOT BETWEEN (0x69055bf9) AND ('1284825812')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '2 -1833178950'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 0 -1695785650 sz=641090733 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1091750281 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '2V|W#'  WHEN NULL THEN '0.9316781887555954' ELSE -241506201 END COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-285895422'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('쉏*') NOT BETWEEN (1.690483462E9) AND (0.36536143075517513)) AS TEXT); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1252429664 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST('4''' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.921067785911261) ISNULL))AND(COALESCE(DISTINCT '376118958', NULL))))OR(((NULL) BETWEEN (0.8227574693645884) AND ('1432113345')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1376881429 sz=753166701 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xffffffffd4b346b3; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('' COLLATE RTRIM IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (1e500))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1089838368 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=531966373'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1981786326 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=184399224 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-532020735'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 sz=2069747278 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('K~)')) NOT BETWEEN ((((NULL)IS(6.82293962E8)))) AND ((('-53062221' IN ())))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_type(1.0169532E8))>(UPPER(0.08930627834670635))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-67360957 2 sz=1853792226'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- (0X505391a8)))AND((~ (NULL)))))AND(((-527884154) NOT BETWEEN (x'3213') AND ('-1932613573')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.0845921505547933 COLLATE BINARY) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.87779432260161) NOT BETWEEN (x'') AND (0x3ab72ee7))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 1818873864 sz=-1990325655 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1543083748 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 2 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 sz=738640558'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xfffffffff7c6834a) NOTNULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1675266666 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((NULL, -1834292025, x''))<=((x'', NULL, x''))) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-749519505 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=998650164'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_insert((((x''))>(('0.04022318991066354'))), (- (x'8384')), ((x'')>=(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-2085213663 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN 0.4250065199262498 THEN 0.6749945697767851 WHEN 0.7257611540736173 THEN x'' WHEN '' THEN 'q>' ELSE '633474600' END)AND(STRFTIME(x'', 0.5367077408718527, 0.9489344210553509, 0.8176468658187409, 0.6641396554333457, '-342949453', x'ca30'))))OR(((('-1443982464')) NOT BETWEEN ((0.5370478800680492)) AND (('*Y'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-53062221 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0xffffffffbf0a62e0))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 sz=939182935 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-882204481 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=682293962 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-374373338'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('\re' AS INTEGER) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS NUMERIC))GLOB(CASE WHEN 0.6707935262212678 THEN NULL WHEN 0.8141357373984602 THEN '-1148223442' WHEN 0.248640936815414 THEN '' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- (1.761958905E9)))AND(CAST(NULL AS BLOB))))OR(((((NULL)AND(x'')))OR('-1089838368')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1646682792 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((1314149321)>=(1475982749)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN x'92ae' THEN 0.040786778752166075 END IN (((0.35324698569960133)&(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '1120645367'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '184399224 sz=-1649774940 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-571846433 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-99315128')GLOB(0.6189100217336917)))*((('.w')<(0.8614268699875746)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x''  WHEN '603836238' THEN (((((((('MyT')AND(NULL)))AND(0.11941760360395093)))OR(x'')))OR(NULL)) ELSE NULL END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 1195673827 445396739 sz=437866222 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.38950662547462267)) NOT BETWEEN ((((x'')LIKE(0.7243056342426811)))) AND ((((0.38308288350502817) NOTNULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((+ (0.5734403503392559)))OR(('' IN ()))))OR(((NULL) NOT BETWEEN ('*2') AND (8.04286399E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '671676949 sz=-1264715564'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((NULL IN ()))OR(NULL)))AND(CASE WHEN x'' THEN x'01a2' END)))OR(((NULL) BETWEEN ('Fl') AND ('﬈~')))))AND((('[]')IS(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN '978142553' THEN 0.6644297924842317 ELSE NULL END AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '13488008 0 sz=-1346527310 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-184366648 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(NULL AS BLOB)))!=((((((NULL)AND('')))OR('/'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-166760876 sz=121359631'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-118818784 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1618170565'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-99315128 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.562633828020845)=((- (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(NULL AS TEXT))AND((((x'')) BETWEEN ((x'')) AND (('1668012616'))))))AND(((x'')&(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((TYPEOF(DISTINCT 0.7601447419622716)))>=((1281877142))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1432113345 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNICODE(CAST(0x12b60527 AS INTEGER)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-71655775 -1765964178 sz=-2139271891 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-994182289 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ (x'9a09')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((NULL)*(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1569160176'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=173533778'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=313918759'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=398407391 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-1.659247762E9)AND(x'3457')))OR(NULL))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(0.963298761280365 AS REAL) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-820500167'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=581380908'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1935737422'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '568967457 sz=1 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE RTRIM)IS NOT((- (0.13460232879108003)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-633909866'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-362942127 sz=1920856522 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1279688625 0 sz=-2094437816 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1844565462')*(NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '2 2 sz=603836238 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 0 sz=578840840 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-991214759 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1936600756 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1879642226 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('607803537' COLLATE NOCASE IN ((('-90890627') IS TRUE), ((0.47516954037398573) NOT BETWEEN ('-256112262') AND (760440284)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '391382140 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-65389748 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1330037228') NOT BETWEEN (x'3cee6feb') AND (0Xffffffff91c831eb))))>=((x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(CASE WHEN 1e500 THEN '0.06832321345848003' ELSE NULL END, STRFTIME('-494122845', NULL, '-278593752')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=765191916'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')*(CASE WHEN x'' THEN x'' WHEN 0.15761628051668186 THEN x'' WHEN x'' THEN x'' WHEN 0.4344365274566294 THEN 0.21376306136394385 WHEN 1.668012616E9 THEN x'fac3' ELSE 0.5424164908579209 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(NULL)))AND('hZ,F')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1668012616 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'')<=(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')+('-1724922257')))*((((('365835602')OR(0.7387840122711864)))OR(0.5960471794942855)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1868728957 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1337825953 sz=371738075'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('<')OR(-87493966)))AND(0xfffffffff28eae2f)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1884165159'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.26704807845866363; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 0 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1105156587 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) BETWEEN ((0Xffffffff85cbfdd2)) AND ((0.22360037103302133)))) BETWEEN (((x'e1ae')LIKE('1025758799'))) AND ((0x414276b0 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1413460644 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '|G_mwQ'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1768721918'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1707230859' COLLATE BINARY)!=(CHANGES())); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-576756963')IS(0.5682430334323598))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-245159347 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1190479610 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=720477050 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=979376637 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-311479220 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-2.45159347E8 COLLATE NOCASE)/(CAST(NULL AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')OR(CAST('U(T盧E\V' AS INTEGER))))AND((0.5927479198996154 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-157502077 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1.875865647E9) NOT BETWEEN (x'') AND (x'')))AND(x'')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT NULL, CASE WHEN NULL THEN '-2092531776' END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('0WM' IN ()) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE '1818873864'  WHEN NULL THEN x'' END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1044809278 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '381796054 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE x'0e83'  WHEN ((NULL) NOT BETWEEN (0.8005088243210351) AND ('-1487777688')) THEN ((0x12b60527) BETWEEN (x'') AND (590425703)) WHEN '0.29715188211761756' THEN x'' COLLATE BINARY WHEN (((NULL))<=((NULL))) THEN ((0.26874161331646773) BETWEEN (x'') AND (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1506568465'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((0.1980645280409684)OR(NULL)))AND(0.6980779013406606)))OR('WZQ<\ro')))AND(0X1d53f12b)))OR('/X')))OR(11909886))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1614900575'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '1906808734'  WHEN NULL THEN 0.02146576036318759 ELSE x'' END) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1432113345 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '500897674'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 sz=1571786945 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('3')*(x''))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1649330816 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1470974115 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((0.24033154855606054)AND(NULL)))AND(x'08dc')) THEN (('-1675443748')==(0x1040ec17)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-2085213663 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 2 sz=-241876857 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-780972428 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((((((0.28154544456968933)OR(-1.330037228E9)))OR(0.443280847413941)))OR(')䋷qaF8q')))AND(NULL)) THEN ((NULL) BETWEEN (NULL) AND (x'')) ELSE (((NULL)) BETWEEN (('0.04572079389151773')) AND ((0.29644519399236957))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(x'' AS BLOB) THEN (('-494122845') IS TRUE) ELSE CAST('/Q' AS INTEGER) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-494122845 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X63d5a570)<('-1610057758'))) BETWEEN (CASE WHEN 0.038975460556322394 THEN NULL WHEN 0.6053436787394143 THEN NULL WHEN NULL THEN 0.8409754553857421 ELSE NULL END) AND (((x'') NOT BETWEEN (x'') AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', NULL, '', x'99e5', x'e08f')) NOT BETWEEN ((((x'')GLOB('߆k')), (~ ('407808549')), CASE NULL  WHEN '' THEN 594447656 END, CAST(NULL AS INTEGER), IFNULL(DISTINCT 0.06282045239182965, x'98fb'))) AND ((CAST('r6' AS REAL), ((0.8508856202911766)AND(0.21972615051101707)), ((-1.452921367E9)+(x'')), '' COLLATE RTRIM, x'' COLLATE NOCASE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-811948413 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-324377478 sz=-1473024012 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.10249967262986615)||('458600998'))) BETWEEN (((1.093301453E9) NOTNULL)) AND (((x'dedcfc93')GLOB(0.13801447362851216)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((830785959) BETWEEN (0.013601282211859966) AND (x'181a'))) BETWEEN (((-1.66760876E8) NOT BETWEEN (x'5169') AND (0.828991260417206))) AND (((-807288399)<=(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN 0X2ea882b9 THEN '-908544508' ELSE NULL END  WHEN '㌘\rJ' THEN ((x'') ISNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 7ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((LIKELIHOOD(DISTINCT '1761958905', 0.49691804602104106))AND(((x'') BETWEEN (x'') AND (0.710778505335564)))))OR((('R玹z9|*K')GLOB(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-2094437816 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=2105820942 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-342949453 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE WHEN '425979786' THEN NULL WHEN -1694521342 THEN 0x6fcf702f WHEN 0X129a3b5f THEN 0.6529623515437274 ELSE '-1016719299' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('?Uu5rEK') BETWEEN ('993748190') AND (0.46193919519067195))) NOT BETWEEN ('I(wpUoF4*') AND ((- (1.818873864E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '1658447562 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-789439884 -932515406 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1846846502'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1330037228) ISNULL))*(('926583873' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1690483462 sz=-1069823486 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=138421955 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((NULL))=((2104952135))) THEN (0.0 IN ()) ELSE ((-1.66760876E8)-('-1675443748')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 1195673827 noskipscan'); -- 0ms;
PRAGMA automatic_index = true; -- 0ms;
UPDATE OR IGNORE t1 SET c1='31373890' WHERE CASE (- (t1.c0))  WHEN ((t1.c0) IS TRUE) THEN CASE t1.c1  WHEN t1.c0 THEN t1.c2 WHEN t1.c1 THEN t1.c2 WHEN t1.c2 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c2 END ELSE (+ (t1.c1)) END; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x'') WHERE (((t0.c0 IN (t0.c0, t0.c0))) NOT NULL); -- 0ms;
UPDATE t1 SET c2='-1089838368', c0=0.9431629135685673, c0='1761958905'; -- 0ms;
PRAGMA main.auto_vacuum = NONE; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.09166573393000543) WHERE (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((CASE WHEN t0.c0 THEN t0.c0 END, CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'8c75' WHEN t0.c0 THEN t0.c0 END, '603836238')) AND ((json(t0.c0), t0.c0, t0.c0 COLLATE RTRIM))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL) WHERE 0.3482864578786542; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE TEMP TRIGGER IF NOT EXISTS tr0 BEFORE UPDATE ON t0 FOR EACH ROW  BEGIN INSERT OR IGNORE INTO t0 VALUES (NULL), ('K襂s1崰龲'), ('&d'), ('}Q8D|Mm{^'), (x'');UPDATE OR IGNORE t0 SET (c0, c0)=(0X510eeea4, 1840202488);END; -- 0ms;
PRAGMA main.locking_mode; -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, order=DESC, matchinfo=fts3); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
DELETE FROM vt0 WHERE (((vt0.c0)) BETWEEN ((CAST(0.598887562947945 AS REAL))) AND ((x''))); -- 0ms;
REINDEX  vt0; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET c0='', c0=NULL; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0, c0)=(x'', NULL) WHERE TYPEOF(DISTINCT ((vt0.c0)<=(vt0.c0))); -- 0ms;
UPDATE OR IGNORE t0 SET c0='_}'; -- 0ms;
ANALYZE temp; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
ALTER TABLE t0 RENAME TO t2; -- 1ms;
REINDEX  vt0; -- 0ms;
PRAGMA soft_heap_limit = 2453179510823292921; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE CAST(vt0.c0 COLLATE BINARY AS INTEGER); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (x''); -- 0ms;
COMMIT; -- 1ms;
ALTER TABLE t1 ADD COLUMN c76 REAL; -- 0ms;
UPDATE OR ABORT vt0 SET (c0, c0, c0)=(-1239115659, '-1330037228', '905445203') WHERE '664003780'; -- 1ms;
UPDATE OR IGNORE t2 SET c0=NULL WHERE (~ ((((t2.c0))<((t2.c0))))); -- 0ms;
UPDATE t2 SET c0=NULL WHERE CASE WHEN t2.c0 THEN 0.6228081793349975 WHEN (t2.c0 IN (-4.06519963E8)) THEN ((((t2.c0)OR(t2.c0)))AND(t2.c0)) WHEN ((0xffffffffc4bdfb6f) NOT NULL) THEN (NOT (t2.c0)) ELSE t2.c0 END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE INDEX i20 ON t1((((+ (c1)))>=(((x'183e') NOT BETWEEN (c0) AND (c0)))),MIN(c2, c1) COLLATE BINARY COLLATE RTRIM,8.04286399E8 COLLATE BINARY,((((c76)%(c2))) IS FALSE) COLLATE NOCASE DESC) WHERE NULL; -- 0ms;
REINDEX NOCASE; -- 0ms;
PRAGMA reverse_unordered_selects = false; -- 0ms;
ALTER TABLE t1 ADD COLUMN c95 BLOB; -- 0ms;
UPDATE OR REPLACE t1 SET c2=0xffffffffc4eb4359 WHERE (((((((t1.c1))<((t1.c0))))AND((((t1.c2, NULL, t1.c95)) BETWEEN ((t1.c95, t1.c76, t1.c76)) AND ((x'da91', t1.c76, t1.c2))))))AND(((t1.c76)<(t1.c95)))); -- 0ms;
REINDEX BINARY; -- 0ms;
ANALYZE main; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c2)=(x'', 'Z-L<CT\n#?'); -- 0ms;
UPDATE OR IGNORE t2 SET c0='450350593', c0=-3.2069713E7, c0='!v' WHERE ((((t2.c0) NOT NULL))||(((t2.c0)GLOB('D3k?')))); -- 0ms;
PRAGMA main.application_id = 8013611043634613273; -- 0ms;
DROP TABLE t1; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='1377690547', c0=x'' WHERE load_extension((vt0.c0 IN ())); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.20552122300070297); -- 1ms;
PRAGMA temp.busy_timeout; -- 0ms;
UPDATE t2 SET c0=x'' WHERE CAST(((((t2.c0)OR(t2.c0)))AND(t2.c0)) AS INTEGER); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.application_id = -6615395357309672289; -- 0ms;
PRAGMA short_column_names; -- 0ms;
REINDEX; -- 1ms;
INSERT OR FAIL INTO vt0 VALUES (0.8669360441113235); -- 0ms;
UPDATE vt0 SET c0=0.8896902801249053; -- 0ms;
PRAGMA temp.soft_heap_limit = 4632753852652508596; -- 0ms;
UPDATE OR FAIL vt0 SET c0='-406519963', c0='0wm', c0='-874152931' WHERE LIKELY(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))); -- 0ms;
INSERT OR IGNORE INTO t2(c0) VALUES ('-1572073711'), (0.8241130086914352), (x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '45563'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 5); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR FAIL vt0 SET (c0)=(0.05379995337699439) WHERE CASE WHEN COALESCE(DISTINCT vt0.c0, vt0.c0, vt0.c0, '%O') THEN CAST(vt0.c0 AS BLOB) END; -- 0ms;
CREATE INDEX IF NOT EXISTS i3 ON t2(CAST(1513599338 AS INTEGER)) WHERE (((c0)) NOT BETWEEN (((((c0)) BETWEEN ((NULL)) AND ((c0))))) AND (((NOT (c0))))); -- 0ms;
INSERT OR IGNORE INTO t2 VALUES (NULL); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (NULL) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((NULL) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT t2.c0 FROM vt0 CROSS JOIN t2 ON (((vt0.c0 IN ())) NOT NULL);
SELECT DISTINCT t2.c0 FROM vt0 CROSS JOIN t2 ON (((vt0.c0 IN ())) NOT NULL) WHERE ((NOT (SQLITE_COMPILEOPTION_GET(t2.c0)))) UNION SELECT DISTINCT t2.c0 FROM vt0 CROSS JOIN t2 ON (((vt0.c0 IN ())) NOT NULL) WHERE ((NOT ((NOT (SQLITE_COMPILEOPTION_GET(t2.c0)))))) UNION SELECT DISTINCT t2.c0 FROM vt0 CROSS JOIN t2 ON (((vt0.c0 IN ())) NOT NULL) WHERE ((((NOT (SQLITE_COMPILEOPTION_GET(t2.c0)))) ISNULL));
SELECT DISTINCT t2.c0 FROM vt0 CROSS JOIN t2 ON (((vt0.c0 IN ())) NOT NULL);
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM t2, vt0 WHERE ((((t2.c0)) NOT BETWEEN ((((vt0.c0)|(t2.c0)))) AND ((((t2.c0)||('')))))) GROUP BY t2.c0, vt0.c0 UNION SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 WHERE ((NOT ((((t2.c0)) NOT BETWEEN ((((vt0.c0)|(t2.c0)))) AND ((((t2.c0)||('')))))))) GROUP BY t2.c0, vt0.c0 UNION SELECT t2.c0, vt0.c0 FROM t2, vt0 WHERE ((((((t2.c0)) NOT BETWEEN ((((vt0.c0)|(t2.c0)))) AND ((((t2.c0)||('')))))) ISNULL)) GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0;
SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING x'' UNION ALL SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING ((x'') ISNULL);
SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING x'' UNION ALL SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING ((x'') ISNULL);
SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT ALL * FROM t2;
SELECT ALL * FROM t2 WHERE (((CASE t2.c0  WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END)IS NOT((((t2.c0, t2.c0, t2.c0))<>((t2.c0, t2.c0, t2.c0)))))) UNION ALL SELECT * FROM t2 WHERE ((NOT (((CASE t2.c0  WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END)IS NOT((((t2.c0, t2.c0, t2.c0))<>((t2.c0, t2.c0, t2.c0)))))))) UNION ALL SELECT * FROM t2 WHERE (((((CASE t2.c0  WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END)IS NOT((((t2.c0, t2.c0, t2.c0))!=((t2.c0, t2.c0, t2.c0)))))) ISNULL));
SELECT ALL * FROM t2;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS BLOB)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0) NOTNULL) AS BLOB)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0) NOTNULL) AS BLOB)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM t2, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t2, vt0 WHERE ((((((- (t2.c0)))AND((+ (t2.c0)))))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t2, vt0 WHERE ((NOT ((((((- (t2.c0)))AND((+ (t2.c0)))))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t2, vt0 WHERE ((((((((- (t2.c0)))AND((+ (t2.c0)))))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t2, vt0 GROUP BY vt0.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((GROUP_CONCAT(t2.c0))+(COUNT(*))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (((GROUP_CONCAT(t2.c0))+(COUNT(*))))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((((GROUP_CONCAT(t2.c0))+(COUNT(*)))) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((GROUP_CONCAT(t2.c0))+(COUNT(*))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (((GROUP_CONCAT(t2.c0))+(COUNT(*))))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((((GROUP_CONCAT(t2.c0))+(COUNT(*)))) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL * FROM vt0, t2;
SELECT * FROM vt0, t2 WHERE ((((((vt0.c0))==((vt0.c0)))) BETWEEN (NULL) AND (CAST(-1642440494 AS TEXT)))) UNION ALL SELECT ALL * FROM vt0, t2 WHERE ((NOT ((((((vt0.c0))=((vt0.c0)))) BETWEEN (NULL) AND (CAST(-1642440494 AS TEXT)))))) UNION ALL SELECT * FROM vt0, t2 WHERE ((((((((vt0.c0))==((vt0.c0)))) BETWEEN (NULL) AND (CAST(-1642440494 AS TEXT)))) ISNULL));
SELECT ALL * FROM vt0, t2;
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE ((+ (((t2.c0)<(t2.c0))))) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT ((+ (((t2.c0)<(t2.c0))))))) UNION SELECT DISTINCT * FROM t2 WHERE ((((+ (((t2.c0)<(t2.c0))))) ISNULL));
SELECT DISTINCT * FROM t2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN (('')%(vt0.c0)) THEN json_array_length(vt0.c0) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN (('')%(vt0.c0)) THEN json_array_length(vt0.c0) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN (('')%(vt0.c0)) THEN json_array_length(vt0.c0) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t2.c0 FROM t2, vt0 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING TOTAL(COUNT(SUM(AVG(vt0.c0)))) UNION ALL SELECT ALL t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING (NOT (TOTAL(COUNT(SUM(AVG(vt0.c0)))))) UNION ALL SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING ((TOTAL(COUNT(SUM(AVG(vt0.c0))))) ISNULL);
SELECT * FROM vt0, t2;
SELECT ALL * FROM vt0, t2 WHERE (SQLITE_COMPILEOPTION_GET(((NULL) NOT BETWEEN (t2.c0) AND (vt0.c0)))) UNION ALL SELECT * FROM vt0, t2 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(((NULL) NOT BETWEEN (t2.c0) AND (vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0, t2 WHERE (((SQLITE_COMPILEOPTION_GET(((NULL) NOT BETWEEN (t2.c0) AND (vt0.c0)))) ISNULL));
SELECT * FROM vt0, t2;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL t2.c0 FROM vt0, t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM vt0, t2 WHERE (CAST(vt0.c0 AS INTEGER)) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM vt0, t2 WHERE ((NOT (CAST(vt0.c0 AS INTEGER)))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM vt0, t2 WHERE (((CAST(vt0.c0 AS INTEGER)) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM vt0, t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING MIN((~ (t2.c0))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (MIN((~ (t2.c0))))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((MIN((~ (t2.c0)))) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING MIN((~ (t2.c0))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (MIN((~ (t2.c0))))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((MIN((~ (t2.c0)))) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c0 COLLATE RTRIM COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0 COLLATE RTRIM COLLATE RTRIM))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM t2, vt0;
SELECT DISTINCT * FROM t2, vt0 WHERE (t2.c0) UNION SELECT DISTINCT * FROM t2, vt0 WHERE ((NOT (t2.c0))) UNION SELECT DISTINCT * FROM t2, vt0 WHERE (((t2.c0) ISNULL));
SELECT DISTINCT * FROM t2, vt0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE ((- (TYPEOF(DISTINCT t2.c0)))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 NOT INDEXED WHERE ((NOT ((- (TYPEOF(DISTINCT t2.c0)))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((((- (TYPEOF(DISTINCT t2.c0)))) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t2 ON (+ ((NOT (t2.c0)))) GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t2 ON (+ ((NOT (t2.c0)))) GROUP BY t2.c0, vt0.c0 HAVING t2.c0 UNION ALL SELECT t2.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t2 ON (+ ((NOT (t2.c0)))) GROUP BY t2.c0, vt0.c0 HAVING (NOT (t2.c0)) UNION ALL SELECT t2.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t2 ON (+ ((NOT (t2.c0)))) GROUP BY t2.c0, vt0.c0 HAVING ((t2.c0) ISNULL);
SELECT ALL t2.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t2 ON (+ ((NOT (t2.c0)))) GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t2 ON (+ ((NOT (t2.c0)))) GROUP BY t2.c0, vt0.c0 HAVING t2.c0 UNION ALL SELECT t2.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t2 ON (+ ((NOT (t2.c0)))) GROUP BY t2.c0, vt0.c0 HAVING (NOT (t2.c0)) UNION ALL SELECT t2.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t2 ON (+ ((NOT (t2.c0)))) GROUP BY t2.c0, vt0.c0 HAVING ((t2.c0) ISNULL);
SELECT ALL t2.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t2 ON (+ ((NOT (t2.c0)))) GROUP BY t2.c0, vt0.c0;
SELECT ALL TOTAL(t2.c0 COLLATE NOCASE) FROM t2;
SELECT ALL * FROM t2;
SELECT * FROM t2 WHERE (((('1818873864')) BETWEEN ((UPPER(DISTINCT t2.c0))) AND ((CAST(t2.c0 AS INTEGER))))) UNION ALL SELECT * FROM t2 WHERE ((NOT (((('1818873864')) BETWEEN ((UPPER(DISTINCT t2.c0))) AND ((CAST(t2.c0 AS INTEGER))))))) UNION ALL SELECT ALL * FROM t2 WHERE (((((('1818873864')) BETWEEN ((UPPER(DISTINCT t2.c0))) AND ((CAST(t2.c0 AS INTEGER))))) ISNULL));
SELECT ALL * FROM t2;
SELECT DISTINCT * FROM t2, vt0;
SELECT DISTINCT * FROM t2, vt0 WHERE (HEX(CASE t2.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t2.c0 END)) UNION SELECT DISTINCT * FROM t2, vt0 WHERE ((NOT (HEX(CASE t2.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t2.c0 END)))) UNION SELECT DISTINCT * FROM t2, vt0 WHERE (((HEX(CASE t2.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t2.c0 END)) ISNULL));
SELECT DISTINCT * FROM t2, vt0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 WHERE (((0X27a6726e) NOT BETWEEN (t2.c0) AND (t2.c0)) COLLATE RTRIM) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT (((0x27a6726e) NOT BETWEEN (t2.c0) AND (t2.c0)) COLLATE RTRIM))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE (((((0X27a6726e) NOT BETWEEN (t2.c0) AND (t2.c0)) COLLATE RTRIM) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING SUM((~ (COUNT(COUNT(*))))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (SUM((~ (COUNT(COUNT(*))))))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((SUM((~ (COUNT(COUNT(*)))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0Xffffffffb0a3976e WHEN vt0.c0 THEN vt0.c0 END IN (((vt0.c0)!=(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0xffffffffb0a3976e WHEN vt0.c0 THEN vt0.c0 END IN (((vt0.c0)!=(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0xffffffffb0a3976e WHEN vt0.c0 THEN vt0.c0 END IN (((vt0.c0)!=(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t2 NATURAL JOIN vt0;
SELECT DISTINCT * FROM t2 NATURAL JOIN vt0 WHERE (IFNULL(t2.c0, t2.c0) COLLATE RTRIM) UNION SELECT DISTINCT * FROM t2 NATURAL JOIN vt0 WHERE ((NOT (IFNULL(t2.c0, t2.c0) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t2 NATURAL JOIN vt0 WHERE (((IFNULL(t2.c0, t2.c0) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM t2 NATURAL JOIN vt0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE (CAST(((((((((((((0.5797074874016745)OR(t2.c0)))OR(t2.c0)))AND(t2.c0)))OR(t2.c0)))AND(t2.c0)))OR(t2.c0)) AS REAL)) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT (CAST(((((((((((((0.5797074874016745)OR(t2.c0)))OR(t2.c0)))AND(t2.c0)))OR(t2.c0)))AND(t2.c0)))OR(t2.c0)) AS REAL)))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE (((CAST(((((((((((((0.5797074874016745)OR(t2.c0)))OR(t2.c0)))AND(t2.c0)))OR(t2.c0)))AND(t2.c0)))OR(t2.c0)) AS REAL)) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING COUNT(((t2.c0)>(t2.c0))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (COUNT(((t2.c0)>(t2.c0))))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((COUNT(((t2.c0)>(t2.c0)))) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING COUNT(((t2.c0)>(t2.c0))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (COUNT(((t2.c0)>(t2.c0))))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((COUNT(((t2.c0)>(t2.c0)))) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2;
SELECT ALL t2.c0 FROM t2 WHERE (t2.c0) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE ((NOT (t2.c0))) UNION ALL SELECT t2.c0 FROM t2 WHERE (((t2.c0) ISNULL));
SELECT t2.c0 FROM t2;
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE ((((t2.c0)) NOT BETWEEN ((((t2.c0) NOT NULL))) AND ((0.8706139475179296)))) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT ((((t2.c0)) NOT BETWEEN ((((t2.c0) NOT NULL))) AND ((0.8706139475179296)))))) UNION SELECT DISTINCT * FROM t2 WHERE ((((((t2.c0)) NOT BETWEEN ((((t2.c0) NOT NULL))) AND ((0.8706139475179296)))) ISNULL));
SELECT DISTINCT * FROM t2;
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM t2, vt0 WHERE (((CASE WHEN t2.c0 THEN x'b2a4' ELSE t2.c0 END) IS FALSE)) GROUP BY t2.c0, vt0.c0 UNION SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 WHERE ((NOT (((CASE WHEN t2.c0 THEN x'b2a4' ELSE t2.c0 END) IS FALSE)))) GROUP BY t2.c0, vt0.c0 UNION SELECT t2.c0, vt0.c0 FROM t2, vt0 WHERE (((((CASE WHEN t2.c0 THEN x'b2a4' ELSE t2.c0 END) IS FALSE)) ISNULL)) GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING COUNT(MAX(t2.c0)) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (COUNT(MAX(t2.c0)))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((COUNT(MAX(t2.c0))) ISNULL);
SELECT ALL t2.c0 FROM t2;
SELECT ALL t2.c0 FROM t2 WHERE (((t2.c0)&(t2.c0))) UNION ALL SELECT t2.c0 FROM t2 WHERE ((NOT (((t2.c0)&(t2.c0))))) UNION ALL SELECT t2.c0 FROM t2 WHERE (((((t2.c0)&(t2.c0))) ISNULL));
SELECT ALL t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2 WHERE (((t2.c0)LIKE(0.2045297697155236)) COLLATE BINARY) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((NOT (((t2.c0)LIKE(0.2045297697155236)) COLLATE BINARY))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE (((((t2.c0)LIKE(0.2045297697155236)) COLLATE BINARY) ISNULL));
SELECT DISTINCT t2.c0 FROM t2;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 WHERE (CAST(CASE t2.c0  WHEN t2.c0 THEN t2.c0 END AS NUMERIC)) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT (CAST(CASE t2.c0  WHEN t2.c0 THEN t2.c0 END AS NUMERIC)))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE (((CAST(CASE t2.c0  WHEN t2.c0 THEN t2.c0 END AS NUMERIC)) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING AVG(MIN(GROUP_CONCAT(SUM(vt0.c0)))) UNION ALL SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING (NOT (AVG(MIN(GROUP_CONCAT(SUM(vt0.c0)))))) UNION ALL SELECT t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING ((AVG(MIN(GROUP_CONCAT(SUM(vt0.c0))))) ISNULL);
SELECT * FROM t2;
SELECT * FROM t2 WHERE (((((t2.c0) IS FALSE)) NOT BETWEEN (CAST(t2.c0 AS TEXT)) AND ((((t2.c0))!=((t2.c0)))))) UNION ALL SELECT ALL * FROM t2 WHERE ((NOT (((((t2.c0) IS FALSE)) NOT BETWEEN (CAST(t2.c0 AS TEXT)) AND ((((t2.c0))<>((t2.c0)))))))) UNION ALL SELECT * FROM t2 WHERE (((((((t2.c0) IS FALSE)) NOT BETWEEN (CAST(t2.c0 AS TEXT)) AND ((((t2.c0))!=((t2.c0)))))) ISNULL));
SELECT * FROM t2;
SELECT DISTINCT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2 WHERE ((((('Faj''x(' COLLATE NOCASE)AND((t2.c0 IN ()))))OR(t2.c0 COLLATE RTRIM))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((NOT ((((('Faj''x(' COLLATE NOCASE)AND((t2.c0 IN ()))))OR(t2.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((((((('Faj''x(' COLLATE NOCASE)AND((t2.c0 IN ()))))OR(t2.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT t2.c0 FROM t2;
SELECT vt0.c0, t2.c0 FROM t2 NATURAL JOIN vt0 GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM t2 NATURAL JOIN vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (t2.c0) AND (t2.c0)) AS NUMERIC)) GROUP BY vt0.c0, t2.c0 UNION SELECT vt0.c0, t2.c0 FROM t2 NATURAL JOIN vt0 WHERE ((NOT (CAST(((vt0.c0) NOT BETWEEN (t2.c0) AND (t2.c0)) AS NUMERIC)))) GROUP BY vt0.c0, t2.c0 UNION SELECT vt0.c0, t2.c0 FROM t2 NATURAL JOIN vt0 WHERE (((CAST(((vt0.c0) NOT BETWEEN (t2.c0) AND (t2.c0)) AS NUMERIC)) ISNULL)) GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM t2 NATURAL JOIN vt0 GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0 FROM t2, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t2, vt0 GROUP BY vt0.c0 HAVING (((GROUP_CONCAT(SUM(vt0.c0)), COUNT(SUM(TOTAL(vt0.c0))), TOTAL(MIN(TOTAL(t2.c0)))))>((GROUP_CONCAT(''), (NOT (vt0.c0)), COUNT(TOTAL(t2.c0))))) UNION ALL SELECT vt0.c0 FROM t2, vt0 GROUP BY vt0.c0 HAVING (NOT ((((GROUP_CONCAT(SUM(vt0.c0)), COUNT(SUM(TOTAL(vt0.c0))), TOTAL(MIN(TOTAL(t2.c0)))))>((GROUP_CONCAT(''), (NOT (vt0.c0)), COUNT(TOTAL(t2.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM t2, vt0 GROUP BY vt0.c0 HAVING (((((GROUP_CONCAT(SUM(vt0.c0)), COUNT(SUM(TOTAL(vt0.c0))), TOTAL(MIN(TOTAL(t2.c0)))))>((GROUP_CONCAT(''), (NOT (vt0.c0)), COUNT(TOTAL(t2.c0)))))) ISNULL);
SELECT t2.c0, vt0.c0 FROM t2, vt0;
SELECT t2.c0, vt0.c0 FROM t2, vt0 WHERE (((((0.7223694318481341)-(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t2.c0 END) AND (((((((((t2.c0)AND(t2.c0)))OR(vt0.c0)))OR(t2.c0)))OR(vt0.c0))))) UNION ALL SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 WHERE ((NOT (((((0.7223694318481341)-(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t2.c0 END) AND (((((((((t2.c0)AND(t2.c0)))OR(vt0.c0)))OR(t2.c0)))OR(vt0.c0))))))) UNION ALL SELECT t2.c0, vt0.c0 FROM t2, vt0 WHERE (((((((0.7223694318481341)-(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t2.c0 END) AND (((((((((t2.c0)AND(t2.c0)))OR(vt0.c0)))OR(t2.c0)))OR(vt0.c0))))) ISNULL));
SELECT t2.c0, vt0.c0 FROM t2, vt0;
SELECT DISTINCT * FROM t2, vt0;
SELECT DISTINCT * FROM t2, vt0 WHERE ('Cn') UNION SELECT DISTINCT * FROM t2, vt0 WHERE ((NOT ('Cn'))) UNION SELECT DISTINCT * FROM t2, vt0 WHERE ((('Cn') ISNULL));
SELECT DISTINCT * FROM t2, vt0;
SELECT ALL vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t2 WHERE (LOWER(DISTINCT '' COLLATE NOCASE)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t2 WHERE ((NOT (LOWER(DISTINCT '' COLLATE NOCASE)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t2 NOT INDEXED WHERE (((LOWER(DISTINCT '' COLLATE NOCASE)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((GROUP_CONCAT(COUNT(SUM(MAX(GROUP_CONCAT(t2.c0))))))GLOB(MAX(t2.c0))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (((GROUP_CONCAT(COUNT(SUM(MAX(GROUP_CONCAT(t2.c0))))))GLOB(MAX(t2.c0))))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((((GROUP_CONCAT(COUNT(SUM(MAX(GROUP_CONCAT(t2.c0))))))GLOB(MAX(t2.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0)))|(((vt0.c0)>>(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)>=(vt0.c0)))|(((vt0.c0)>>(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)>=(vt0.c0)))|(((vt0.c0)>>(vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2 WHERE (CASE '-937141233'  WHEN ((((t2.c0)OR(t2.c0)))AND(t2.c0)) THEN t2.c0 COLLATE BINARY END) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((NOT (CASE '-937141233'  WHEN ((((t2.c0)OR(t2.c0)))AND(t2.c0)) THEN t2.c0 COLLATE BINARY END))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE (((CASE '-937141233'  WHEN ((((t2.c0)OR(t2.c0)))AND(t2.c0)) THEN t2.c0 COLLATE BINARY END) ISNULL));
SELECT DISTINCT t2.c0 FROM t2;
SELECT ALL vt0.c0 FROM t2, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t2, vt0 WHERE (CASE (((t2.c0, t2.c0, t2.c0, t2.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, t2.c0, 0.42905591337414084, t2.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, t2.c0, t2.c0)))  WHEN t2.c0 THEN (+ (t2.c0)) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t2, vt0 WHERE ((NOT (CASE (((t2.c0, t2.c0, t2.c0, t2.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, t2.c0, 0.42905591337414084, t2.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, t2.c0, t2.c0)))  WHEN t2.c0 THEN (+ (t2.c0)) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t2, vt0 WHERE (((CASE (((t2.c0, t2.c0, t2.c0, t2.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, t2.c0, 0.42905591337414084, t2.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, t2.c0, t2.c0)))  WHEN t2.c0 THEN (+ (t2.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t2, vt0 GROUP BY vt0.c0;
SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING MIN(vt0.c0) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING (NOT (MIN(vt0.c0))) UNION ALL SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING ((MIN(vt0.c0)) ISNULL);
SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING MIN(vt0.c0) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING (NOT (MIN(vt0.c0))) UNION ALL SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING ((MIN(vt0.c0)) ISNULL);
SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT * FROM t2, vt0;
SELECT ALL * FROM t2, vt0 WHERE ((((t2.c0) NOTNULL) IN ())) UNION ALL SELECT * FROM t2, vt0 WHERE ((NOT ((((t2.c0) NOTNULL) IN ())))) UNION ALL SELECT * FROM t2, vt0 WHERE ((((((t2.c0) NOTNULL) IN ())) ISNULL));
SELECT * FROM t2, vt0;
SELECT DISTINCT t2.c0 FROM t2, vt0;
SELECT DISTINCT t2.c0 FROM t2, vt0 WHERE (((CHANGES())OR(CAST(t2.c0 AS INTEGER)))) UNION SELECT DISTINCT t2.c0 FROM t2, vt0 WHERE ((NOT (((CHANGES())OR(CAST(t2.c0 AS INTEGER)))))) UNION SELECT DISTINCT t2.c0 FROM t2, vt0 WHERE (((((CHANGES())OR(CAST(t2.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT t2.c0 FROM t2, vt0;
SELECT vt0.c0 FROM t2, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t2, vt0 WHERE (0.0825075874779364) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t2, vt0 WHERE ((NOT (0.0825075874779364))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t2, vt0 WHERE (((0.0825075874779364) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM t2, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t2.c0)) IN ()) UNION ALL SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING (NOT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t2.c0)) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t2.c0)) IN ())) ISNULL);
SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t2.c0)) IN ()) UNION ALL SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING (NOT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t2.c0)) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t2.c0)) IN ())) ISNULL);
SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT * FROM vt0, t2;
SELECT ALL * FROM vt0, t2 WHERE (((CAST(t2.c0 AS REAL))|(vt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0, t2 WHERE ((NOT (((CAST(t2.c0 AS REAL))|(vt0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL * FROM vt0, t2 WHERE (((((CAST(t2.c0 AS REAL))|(vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT * FROM vt0, t2;
SELECT DISTINCT vt0.c0 FROM vt0 INDEXED BY i3;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT ALL TOTAL(((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))||(((vt0.c0)IS NOT(vt0.c0))))) FROM vt0, t2 ORDER BY t2.c0  NULLS LAST;
SELECT * FROM t2;
SELECT * FROM t2 WHERE ('1725622660') UNION ALL SELECT ALL * FROM t2 WHERE ((NOT ('1725622660'))) UNION ALL SELECT ALL * FROM t2 WHERE ((('1725622660') ISNULL));
SELECT * FROM t2;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((+ (LIKE(vt0.c0, vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((+ (LIKE(vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((+ (LIKE(vt0.c0, vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t2 WHERE ((((+ (t2.c0))) BETWEEN ((((vt0.c0))>=((t2.c0)))) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t2 WHERE ((NOT ((((+ (t2.c0))) BETWEEN ((((vt0.c0))>=((t2.c0)))) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t2 WHERE ((((((+ (t2.c0))) BETWEEN ((((vt0.c0))>=((t2.c0)))) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING SUM(MIN(vt0.c0)) UNION ALL SELECT t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING (NOT (SUM(MIN(vt0.c0)))) UNION ALL SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING ((SUM(MIN(vt0.c0))) ISNULL);
SELECT * FROM vt0, t2;
SELECT * FROM vt0, t2 WHERE ((((t2.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((UNLIKELY(vt0.c0))))) UNION ALL SELECT * FROM vt0, t2 WHERE ((NOT ((((t2.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((UNLIKELY(vt0.c0))))))) UNION ALL SELECT * FROM vt0, t2 WHERE ((((((t2.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((UNLIKELY(vt0.c0))))) ISNULL));
SELECT * FROM vt0, t2;
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE ((((4.45396739E8)) NOT BETWEEN ((t2.c0)) AND (('1980053176')))) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT ((((4.45396739E8)) NOT BETWEEN ((t2.c0)) AND (('1980053176')))))) UNION SELECT DISTINCT * FROM t2 WHERE ((((((4.45396739E8)) NOT BETWEEN ((t2.c0)) AND (('1980053176')))) ISNULL));
SELECT DISTINCT * FROM t2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM vt0 NATURAL JOIN t2 GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM vt0 NATURAL JOIN t2 GROUP BY t2.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT t2.c0, vt0.c0 FROM vt0 NATURAL JOIN t2 GROUP BY t2.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t2.c0, vt0.c0 FROM vt0 NATURAL JOIN t2 GROUP BY t2.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t2.c0, vt0.c0 FROM vt0 NATURAL JOIN t2 GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM vt0 NATURAL JOIN t2 GROUP BY t2.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT t2.c0, vt0.c0 FROM vt0 NATURAL JOIN t2 GROUP BY t2.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t2.c0, vt0.c0 FROM vt0 NATURAL JOIN t2 GROUP BY t2.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t2.c0, vt0.c0 FROM vt0 NATURAL JOIN t2 GROUP BY t2.c0, vt0.c0;
SELECT ALL * FROM t2, vt0;
SELECT * FROM t2, vt0 WHERE (((((t2.c0)<<(vt0.c0))) ISNULL)) UNION ALL SELECT * FROM t2, vt0 WHERE ((NOT (((((t2.c0)<<(vt0.c0))) ISNULL)))) UNION ALL SELECT ALL * FROM t2, vt0 WHERE (((((((t2.c0)<<(vt0.c0))) ISNULL)) ISNULL));
SELECT ALL * FROM t2, vt0;
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE (-245159347) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT (-245159347))) UNION SELECT DISTINCT * FROM t2 WHERE (((-245159347) ISNULL));
SELECT DISTINCT * FROM t2;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE ('') GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((NOT (''))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((('') ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM vt0, t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING (+ (CAST(t2.c0 AS INTEGER))) UNION ALL SELECT ALL t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING (NOT ((+ (CAST(t2.c0 AS INTEGER))))) UNION ALL SELECT ALL t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING (((+ (CAST(t2.c0 AS INTEGER)))) ISNULL);
SELECT ALL t2.c0 FROM vt0, t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING (+ (CAST(t2.c0 AS INTEGER))) UNION ALL SELECT ALL t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING (NOT ((+ (CAST(t2.c0 AS INTEGER))))) UNION ALL SELECT ALL t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING (((+ (CAST(t2.c0 AS INTEGER)))) ISNULL);
SELECT ALL t2.c0 FROM vt0, t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2;
SELECT ALL t2.c0 FROM t2 WHERE ((((t2.c0, t2.c0, '-689109717')) BETWEEN ((((t2.c0)<=(t2.c0)), t2.c0 COLLATE BINARY, ((t2.c0)>>(t2.c0)))) AND ((t2.c0, (t2.c0 IN ()), t2.c0 COLLATE RTRIM)))) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE ((NOT ((((t2.c0, t2.c0, '-689109717')) BETWEEN ((((t2.c0)<=(t2.c0)), t2.c0 COLLATE BINARY, ((t2.c0)>>(t2.c0)))) AND ((t2.c0, (t2.c0 IN ()), t2.c0 COLLATE RTRIM)))))) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE ((((((t2.c0, t2.c0, '-689109717')) BETWEEN ((((t2.c0)<=(t2.c0)), t2.c0 COLLATE BINARY, ((t2.c0)>>(t2.c0)))) AND ((t2.c0, (t2.c0 IN ()), t2.c0 COLLATE RTRIM)))) ISNULL));
SELECT ALL t2.c0 FROM t2;
SELECT DISTINCT vt0.c0 FROM vt0, t2;
SELECT DISTINCT vt0.c0 FROM vt0, t2 WHERE (((((CAST(t2.c0 AS BLOB))OR(NULL)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t2 WHERE ((NOT (((((CAST(t2.c0 AS BLOB))OR(NULL)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t2 WHERE (((((((CAST(t2.c0 AS BLOB))OR(NULL)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, t2;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 WHERE ((((+ (t2.c0))) NOT BETWEEN ((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0)))) AND (-9.94182289E8))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT ((((+ (t2.c0))) NOT BETWEEN ((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0)))) AND (-9.94182289E8))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((((((+ (t2.c0))) NOT BETWEEN ((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0)))) AND (-9.94182289E8))) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING TOTAL(AVG(vt0.c0)) UNION ALL SELECT t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING (NOT (TOTAL(AVG(vt0.c0)))) UNION ALL SELECT t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING ((TOTAL(AVG(vt0.c0))) ISNULL);
SELECT * FROM vt0, t2;
SELECT * FROM vt0, t2 WHERE (CASE CAST(t2.c0 AS NUMERIC)  WHEN CASE t2.c0  WHEN t2.c0 THEN t2.c0 ELSE vt0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN CASE t2.c0  WHEN x'a228' THEN '0.68115951457182' WHEN vt0.c0 THEN t2.c0 WHEN '0' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t2.c0 END THEN (('')LIKE(vt0.c0)) WHEN CAST(t2.c0 AS BLOB) THEN CASE t2.c0  WHEN t2.c0 THEN vt0.c0 END ELSE '109004059' END) UNION ALL SELECT ALL * FROM vt0, t2 WHERE ((NOT (CASE CAST(t2.c0 AS NUMERIC)  WHEN CASE t2.c0  WHEN t2.c0 THEN t2.c0 ELSE vt0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN CASE t2.c0  WHEN x'a228' THEN '0.68115951457182' WHEN vt0.c0 THEN t2.c0 WHEN '0' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t2.c0 END THEN (('')LIKE(vt0.c0)) WHEN CAST(t2.c0 AS BLOB) THEN CASE t2.c0  WHEN t2.c0 THEN vt0.c0 END ELSE '109004059' END))) UNION ALL SELECT ALL * FROM vt0, t2 WHERE (((CASE CAST(t2.c0 AS NUMERIC)  WHEN CASE t2.c0  WHEN t2.c0 THEN t2.c0 ELSE vt0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN CASE t2.c0  WHEN x'a228' THEN '0.68115951457182' WHEN vt0.c0 THEN t2.c0 WHEN '0' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t2.c0 END THEN (('')LIKE(vt0.c0)) WHEN CAST(t2.c0 AS BLOB) THEN CASE t2.c0  WHEN t2.c0 THEN vt0.c0 END ELSE '109004059' END) ISNULL));
SELECT * FROM vt0, t2;
SELECT DISTINCT vt0.c0, t2.c0 FROM vt0 RIGHT OUTER JOIN t2 ON (((((t2.c0)) NOT BETWEEN ((vt0.c0)) AND ((t2.c0)))) NOT NULL);
SELECT DISTINCT vt0.c0, t2.c0 FROM vt0 RIGHT OUTER JOIN t2 ON (((((t2.c0)) NOT BETWEEN ((vt0.c0)) AND ((t2.c0)))) NOT NULL) WHERE (CAST(TYPEOF(vt0.c0) AS TEXT)) UNION SELECT DISTINCT vt0.c0, t2.c0 FROM vt0 RIGHT OUTER JOIN t2 ON (((((t2.c0)) NOT BETWEEN ((vt0.c0)) AND ((t2.c0)))) NOT NULL) WHERE ((NOT (CAST(TYPEOF(vt0.c0) AS TEXT)))) UNION SELECT DISTINCT vt0.c0, t2.c0 FROM vt0 RIGHT OUTER JOIN t2 ON (((((t2.c0)) NOT BETWEEN ((vt0.c0)) AND ((t2.c0)))) NOT NULL) WHERE (((CAST(TYPEOF(vt0.c0) AS TEXT)) ISNULL));
SELECT DISTINCT vt0.c0, t2.c0 FROM vt0 RIGHT OUTER JOIN t2 ON (((((t2.c0)) NOT BETWEEN ((vt0.c0)) AND ((t2.c0)))) NOT NULL);
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 WHERE (NULL) GROUP BY t2.c0, vt0.c0 UNION SELECT t2.c0, vt0.c0 FROM t2, vt0 WHERE ((NOT (NULL))) GROUP BY t2.c0, vt0.c0 UNION SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 WHERE (((NULL) ISNULL)) GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM vt0, t2 GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM vt0, t2 GROUP BY t2.c0, vt0.c0 HAVING ((CAST(TOTAL(AVG(COUNT(*))) AS INTEGER)) IS FALSE) UNION ALL SELECT ALL t2.c0, vt0.c0 FROM vt0, t2 GROUP BY t2.c0, vt0.c0 HAVING (NOT (((CAST(TOTAL(AVG(COUNT(*))) AS INTEGER)) IS FALSE))) UNION ALL SELECT ALL t2.c0, vt0.c0 FROM vt0, t2 GROUP BY t2.c0, vt0.c0 HAVING ((((CAST(TOTAL(AVG(COUNT(*))) AS INTEGER)) IS FALSE)) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (x'') UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (x''))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((x'') ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2 WHERE (((((((((t2.c0)AND(t2.c0)))OR(t2.c0)))OR(t2.c0 COLLATE NOCASE)))OR(PRINTF(t2.c0)))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((NOT (((((((((t2.c0)AND(t2.c0)))OR(t2.c0)))OR(t2.c0 COLLATE NOCASE)))OR(PRINTF(t2.c0)))))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE (((((((((((t2.c0)AND(t2.c0)))OR(t2.c0)))OR(t2.c0 COLLATE NOCASE)))OR(PRINTF(t2.c0)))) ISNULL));
SELECT DISTINCT t2.c0 FROM t2;
SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2, vt0 WHERE (CAST(((0.6157720476686808)>(vt0.c0)) AS BLOB)) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2, vt0 WHERE ((NOT (CAST(((0.6157720476686808)>(vt0.c0)) AS BLOB)))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2, vt0 WHERE (((CAST(((0.6157720476686808)>(vt0.c0)) AS BLOB)) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0;
SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING MAX(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING (NOT (MAX(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING ((MAX(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT t2.c0 FROM t2;
SELECT ALL t2.c0 FROM t2 WHERE (CAST(CAST(t2.c0 AS INTEGER) AS BLOB)) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE ((NOT (CAST(CAST(t2.c0 AS INTEGER) AS BLOB)))) UNION ALL SELECT t2.c0 FROM t2 WHERE (((CAST(CAST(t2.c0 AS INTEGER) AS BLOB)) ISNULL));
SELECT t2.c0 FROM t2;
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE (((t2.c0) NOTNULL) COLLATE RTRIM COLLATE BINARY) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT (((t2.c0) NOTNULL) COLLATE RTRIM COLLATE BINARY))) UNION SELECT DISTINCT * FROM t2 WHERE (((((t2.c0) NOTNULL) COLLATE RTRIM COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t2;
SELECT vt0.c0, t2.c0 FROM t2 NATURAL JOIN vt0 GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM t2 NATURAL JOIN vt0 WHERE (t2.c0) GROUP BY vt0.c0, t2.c0 UNION SELECT vt0.c0, t2.c0 FROM t2 NATURAL JOIN vt0 WHERE ((NOT (t2.c0))) GROUP BY vt0.c0, t2.c0 UNION SELECT vt0.c0, t2.c0 FROM t2 NATURAL JOIN vt0 WHERE (((t2.c0) ISNULL)) GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM t2 NATURAL JOIN vt0 GROUP BY vt0.c0, t2.c0;
SELECT ALL t2.c0 FROM t2 NOT INDEXED GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING MIN(t2.c0) COLLATE NOCASE UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (MIN(t2.c0) COLLATE NOCASE)) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((MIN(t2.c0) COLLATE NOCASE) ISNULL);
SELECT ALL t2.c0 FROM t2 NOT INDEXED GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING MIN(t2.c0) COLLATE NOCASE UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (MIN(t2.c0) COLLATE NOCASE)) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((MIN(t2.c0) COLLATE NOCASE) ISNULL);
SELECT ALL t2.c0 FROM t2 NOT INDEXED GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2;
SELECT ALL t2.c0 FROM t2 WHERE (UNLIKELY(DISTINCT t2.c0)) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE ((NOT (UNLIKELY(DISTINCT t2.c0)))) UNION ALL SELECT t2.c0 FROM t2 WHERE (((UNLIKELY(DISTINCT t2.c0)) ISNULL));
SELECT ALL t2.c0 FROM t2;
SELECT DISTINCT * FROM t2 NATURAL JOIN vt0;
SELECT DISTINCT * FROM t2 NATURAL JOIN vt0 WHERE (((json_array(vt0.c0, vt0.c0)) ISNULL)) UNION SELECT DISTINCT * FROM t2 NATURAL JOIN vt0 WHERE ((NOT (((json_array(vt0.c0, vt0.c0)) ISNULL)))) UNION SELECT DISTINCT * FROM t2 NATURAL JOIN vt0 WHERE (((((json_array(vt0.c0, vt0.c0)) ISNULL)) ISNULL));
SELECT DISTINCT * FROM t2 NATURAL JOIN vt0;
SELECT ALL vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t2 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t2.c0 END)&((- (t2.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t2 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t2.c0 END)&((- (t2.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t2 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t2.c0 END)&((- (t2.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING GROUP_CONCAT(MIN(t2.c0)) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (GROUP_CONCAT(MIN(t2.c0)))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((GROUP_CONCAT(MIN(t2.c0))) ISNULL);
SELECT ALL * FROM t2;
SELECT * FROM t2 WHERE (t2.c0) UNION ALL SELECT ALL * FROM t2 WHERE ((NOT (t2.c0))) UNION ALL SELECT * FROM t2 WHERE (((t2.c0) ISNULL));
SELECT ALL * FROM t2;
SELECT DISTINCT t2.c0, vt0.c0 FROM t2 LEFT OUTER JOIN vt0 ON TRIM((t2.c0 IN ()), x'');
SELECT DISTINCT t2.c0, vt0.c0 FROM t2 LEFT OUTER JOIN vt0 ON TRIM((t2.c0 IN ()), x'') WHERE (((t2.c0) BETWEEN (((vt0.c0)<=(t2.c0))) AND (((vt0.c0) NOT NULL)))) UNION SELECT DISTINCT t2.c0, vt0.c0 FROM t2 LEFT OUTER JOIN vt0 ON TRIM((t2.c0 IN ()), x'') WHERE ((NOT (((t2.c0) BETWEEN (((vt0.c0)<=(t2.c0))) AND (((vt0.c0) NOT NULL)))))) UNION SELECT DISTINCT t2.c0, vt0.c0 FROM t2 LEFT OUTER JOIN vt0 ON TRIM((t2.c0 IN ()), x'') WHERE (((((t2.c0) BETWEEN (((vt0.c0)<=(t2.c0))) AND (((vt0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT t2.c0, vt0.c0 FROM t2 LEFT OUTER JOIN vt0 ON TRIM((t2.c0 IN ()), x'');
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 WHERE ((CASE t2.c0  WHEN t2.c0 THEN t2.c0 END IN ())) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((NOT ((CASE t2.c0  WHEN t2.c0 THEN t2.c0 END IN ())))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((((CASE t2.c0  WHEN t2.c0 THEN t2.c0 END IN ())) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0, vt0.c0 FROM vt0, t2 GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM vt0, t2 GROUP BY t2.c0, vt0.c0 HAVING ((MIN(COUNT(GROUP_CONCAT(AVG(COUNT(*))))))|(((((t2.c0)AND(t2.c0)))AND(SUM(MIN(TOTAL(COUNT(MIN(TOTAL(SUM(t2.c0))))))))))) UNION ALL SELECT t2.c0, vt0.c0 FROM vt0, t2 GROUP BY t2.c0, vt0.c0 HAVING (NOT (((MIN(COUNT(GROUP_CONCAT(AVG(COUNT(*))))))|(((((t2.c0)AND(t2.c0)))AND(SUM(MIN(TOTAL(COUNT(MIN(TOTAL(SUM(t2.c0))))))))))))) UNION ALL SELECT ALL t2.c0, vt0.c0 FROM vt0, t2 GROUP BY t2.c0, vt0.c0 HAVING ((((MIN(COUNT(GROUP_CONCAT(AVG(COUNT(*))))))|(((((t2.c0)AND(t2.c0)))AND(SUM(MIN(TOTAL(COUNT(MIN(TOTAL(SUM(t2.c0)))))))))))) ISNULL);
SELECT ALL vt0.c0, t2.c0 FROM t2 NATURAL JOIN vt0;
SELECT ALL vt0.c0, t2.c0 FROM t2 NATURAL JOIN vt0 WHERE (CASE WHEN ((x'')&(vt0.c0)) THEN x'' ELSE vt0.c0 COLLATE NOCASE END) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM t2 NATURAL JOIN vt0 WHERE ((NOT (CASE WHEN ((x'')&(vt0.c0)) THEN x'' ELSE vt0.c0 COLLATE NOCASE END))) UNION ALL SELECT vt0.c0, t2.c0 FROM t2 NATURAL JOIN vt0 WHERE (((CASE WHEN ((x'')&(vt0.c0)) THEN x'' ELSE vt0.c0 COLLATE NOCASE END) ISNULL));
SELECT ALL vt0.c0, t2.c0 FROM t2 NATURAL JOIN vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS BLOB)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 COLLATE BINARY AS BLOB)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 COLLATE BINARY AS BLOB)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0))<((vt0.c0))) COLLATE NOCASE) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0))<((vt0.c0))) COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0))<((vt0.c0))) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING SUM((- (vt0.c0))) UNION ALL SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING (NOT (SUM((- (vt0.c0))))) UNION ALL SELECT t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING ((SUM((- (vt0.c0)))) ISNULL);
SELECT t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING SUM((- (vt0.c0))) UNION ALL SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING (NOT (SUM((- (vt0.c0))))) UNION ALL SELECT t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING ((SUM((- (vt0.c0)))) ISNULL);
SELECT t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)IS(vt0.c0)) ELSE (vt0.c0 IN ()) END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)IS(vt0.c0)) ELSE (vt0.c0 IN ()) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)IS(vt0.c0)) ELSE (vt0.c0 IN ()) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE (t2.c0) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((NOT (t2.c0))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE (((t2.c0) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0 HAVING ((MAX(COUNT(*))) IS FALSE) UNION ALL SELECT vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0 HAVING (NOT (((MAX(COUNT(*))) IS FALSE))) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0 HAVING ((((MAX(COUNT(*))) IS FALSE)) ISNULL);
SELECT * FROM t2;
SELECT * FROM t2 WHERE (CAST(t2.c0 AS NUMERIC) COLLATE RTRIM COLLATE RTRIM) UNION ALL SELECT ALL * FROM t2 WHERE ((NOT (CAST(t2.c0 AS NUMERIC) COLLATE RTRIM COLLATE RTRIM))) UNION ALL SELECT * FROM t2 WHERE (((CAST(t2.c0 AS NUMERIC) COLLATE RTRIM COLLATE RTRIM) ISNULL));
SELECT * FROM t2;
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE ((((((t2.c0) NOT NULL), '-wYyJ', (- ('607803537'))))==(((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))), CASE WHEN t2.c0 THEN t2.c0 END, t2.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT ((((((t2.c0) NOT NULL), '-wYyJ', (- ('607803537'))))==(((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))), CASE WHEN t2.c0 THEN t2.c0 END, t2.c0 COLLATE NOCASE)))))) UNION SELECT DISTINCT * FROM t2 WHERE ((((((((t2.c0) NOT NULL), '-wYyJ', (- ('607803537'))))=(((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))), CASE WHEN t2.c0 THEN t2.c0 END, t2.c0 COLLATE NOCASE)))) ISNULL));
SELECT DISTINCT * FROM t2;
SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM vt0, t2 WHERE (((NULL)!=(t2.c0)) COLLATE BINARY) GROUP BY vt0.c0, t2.c0 UNION SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 WHERE ((NOT (((NULL)!=(t2.c0)) COLLATE BINARY))) GROUP BY vt0.c0, t2.c0 UNION SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 WHERE (((((NULL)<>(t2.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT ALL t2.c0 FROM t2, vt0 GROUP BY t2.c0;
SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING (+ (AVG(SUM(t2.c0)))) UNION ALL SELECT ALL t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING (NOT ((+ (AVG(SUM(t2.c0)))))) UNION ALL SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING (((+ (AVG(SUM(t2.c0))))) ISNULL);
SELECT ALL t2.c0 FROM t2, vt0;
SELECT ALL t2.c0 FROM t2, vt0 WHERE (0.40865942491650853) UNION ALL SELECT ALL t2.c0 FROM t2, vt0 WHERE ((NOT (0.40865942491650853))) UNION ALL SELECT ALL t2.c0 FROM t2, vt0 WHERE (((0.40865942491650853) ISNULL));
SELECT ALL t2.c0 FROM t2, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT NULL))OR(SQLITE_VERSION())))AND(vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0) NOT NULL))OR(SQLITE_VERSION())))AND(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0) NOT NULL))OR(SQLITE_VERSION())))AND(vt0.c0))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 WHERE ((((((~ (t2.c0)))OR((((t2.c0, t2.c0, t2.c0, t2.c0, t2.c0, t2.c0, t2.c0)) NOT BETWEEN ((t2.c0, t2.c0, t2.c0, t2.c0, t2.c0, t2.c0, t2.c0)) AND ((t2.c0, t2.c0, t2.c0, t2.c0, t2.c0, 0.0, t2.c0))))))OR(t2.c0 COLLATE RTRIM))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((NOT ((((((~ (t2.c0)))OR((((t2.c0, t2.c0, t2.c0, t2.c0, t2.c0, t2.c0, t2.c0)) NOT BETWEEN ((t2.c0, t2.c0, t2.c0, t2.c0, t2.c0, t2.c0, t2.c0)) AND ((t2.c0, t2.c0, t2.c0, t2.c0, t2.c0, 0.0, t2.c0))))))OR(t2.c0 COLLATE RTRIM))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((((((((~ (t2.c0)))OR((((t2.c0, t2.c0, t2.c0, t2.c0, t2.c0, t2.c0, t2.c0)) NOT BETWEEN ((t2.c0, t2.c0, t2.c0, t2.c0, t2.c0, t2.c0, t2.c0)) AND ((t2.c0, t2.c0, t2.c0, t2.c0, t2.c0, 0.0, t2.c0))))))OR(t2.c0 COLLATE RTRIM))) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM t2 FULL OUTER JOIN vt0 ON ((((t2.c0 COLLATE RTRIM)AND((((vt0.c0, NULL, t2.c0))<=((vt0.c0, vt0.c0, t2.c0))))))AND(((t2.c0) BETWEEN (t2.c0) AND (t2.c0)))) GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM t2 FULL OUTER JOIN vt0 ON ((((t2.c0 COLLATE RTRIM)AND((((vt0.c0, NULL, t2.c0))<=((vt0.c0, vt0.c0, t2.c0))))))AND(((t2.c0) BETWEEN (t2.c0) AND (t2.c0)))) GROUP BY vt0.c0, t2.c0 HAVING SUM(((t2.c0)-(0.35780145826174037))) UNION ALL SELECT vt0.c0, t2.c0 FROM t2 FULL OUTER JOIN vt0 ON ((((t2.c0 COLLATE RTRIM)AND((((vt0.c0, NULL, t2.c0))<=((vt0.c0, vt0.c0, t2.c0))))))AND(((t2.c0) BETWEEN (t2.c0) AND (t2.c0)))) GROUP BY vt0.c0, t2.c0 HAVING (NOT (SUM(((t2.c0)-(0.35780145826174037))))) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM t2 FULL OUTER JOIN vt0 ON ((((t2.c0 COLLATE RTRIM)AND((((vt0.c0, NULL, t2.c0))<=((vt0.c0, vt0.c0, t2.c0))))))AND(((t2.c0) BETWEEN (t2.c0) AND (t2.c0)))) GROUP BY vt0.c0, t2.c0 HAVING ((SUM(((t2.c0)-(0.35780145826174037)))) ISNULL);
SELECT ALL vt0.c0, t2.c0 FROM t2 FULL OUTER JOIN vt0 ON ((((t2.c0 COLLATE RTRIM)AND((((vt0.c0, NULL, t2.c0))<=((vt0.c0, vt0.c0, t2.c0))))))AND(((t2.c0) BETWEEN (t2.c0) AND (t2.c0)))) GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM t2 FULL OUTER JOIN vt0 ON ((((t2.c0 COLLATE RTRIM)AND((((vt0.c0, NULL, t2.c0))<=((vt0.c0, vt0.c0, t2.c0))))))AND(((t2.c0) BETWEEN (t2.c0) AND (t2.c0)))) GROUP BY vt0.c0, t2.c0 HAVING SUM(((t2.c0)-(0.35780145826174037))) UNION ALL SELECT vt0.c0, t2.c0 FROM t2 FULL OUTER JOIN vt0 ON ((((t2.c0 COLLATE RTRIM)AND((((vt0.c0, NULL, t2.c0))<=((vt0.c0, vt0.c0, t2.c0))))))AND(((t2.c0) BETWEEN (t2.c0) AND (t2.c0)))) GROUP BY vt0.c0, t2.c0 HAVING (NOT (SUM(((t2.c0)-(0.35780145826174037))))) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM t2 FULL OUTER JOIN vt0 ON ((((t2.c0 COLLATE RTRIM)AND((((vt0.c0, NULL, t2.c0))<=((vt0.c0, vt0.c0, t2.c0))))))AND(((t2.c0) BETWEEN (t2.c0) AND (t2.c0)))) GROUP BY vt0.c0, t2.c0 HAVING ((SUM(((t2.c0)-(0.35780145826174037)))) ISNULL);
SELECT ALL vt0.c0, t2.c0 FROM t2 FULL OUTER JOIN vt0 ON ((((t2.c0 COLLATE RTRIM)AND((((vt0.c0, NULL, t2.c0))<=((vt0.c0, vt0.c0, t2.c0))))))AND(((t2.c0) BETWEEN (t2.c0) AND (t2.c0)))) GROUP BY vt0.c0, t2.c0;
SELECT * FROM vt0, t2;
SELECT ALL * FROM vt0, t2 WHERE (LIKELIHOOD((~ (0.2617490798574206)), 0.32189837408484356)) UNION ALL SELECT ALL * FROM vt0, t2 WHERE ((NOT (LIKELIHOOD((~ (0.2617490798574206)), 0.32189837408484356)))) UNION ALL SELECT * FROM vt0, t2 WHERE (((LIKELIHOOD((~ (0.2617490798574206)), 0.32189837408484356)) ISNULL));
SELECT * FROM vt0, t2;
SELECT DISTINCT * FROM vt0, t2;
SELECT DISTINCT * FROM vt0, t2 WHERE ((((((((((+ (t2.c0)))AND(((vt0.c0) BETWEEN (t2.c0) AND (vt0.c0)))))OR(x'')))AND(CASE WHEN t2.c0 THEN vt0.c0 END)))AND(CAST('' AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0, t2 WHERE ((NOT ((((((((((+ (t2.c0)))AND(((vt0.c0) BETWEEN (t2.c0) AND (vt0.c0)))))OR(x'')))AND(CASE WHEN t2.c0 THEN vt0.c0 END)))AND(CAST('' AS NUMERIC)))))) UNION SELECT DISTINCT * FROM vt0, t2 WHERE ((((((((((((+ (t2.c0)))AND(((vt0.c0) BETWEEN (t2.c0) AND (vt0.c0)))))OR(x'')))AND(CASE WHEN t2.c0 THEN vt0.c0 END)))AND(CAST('' AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM vt0, t2;
SELECT t2.c0, vt0.c0 FROM vt0 CROSS JOIN t2 ON ((MIN(vt0.c0, vt0.c0)) NOT BETWEEN (((t2.c0)OR(t2.c0))) AND (((vt0.c0)<<(vt0.c0)))) GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM vt0 CROSS JOIN t2 ON ((MIN(vt0.c0, vt0.c0)) NOT BETWEEN (((t2.c0)OR(t2.c0))) AND (((vt0.c0)<<(vt0.c0)))) WHERE (CASE WHEN ((t2.c0) NOT BETWEEN (vt0.c0) AND (t2.c0)) THEN UPPER(DISTINCT t2.c0) END) GROUP BY t2.c0, vt0.c0 UNION SELECT ALL t2.c0, vt0.c0 FROM vt0 CROSS JOIN t2 ON ((MIN(vt0.c0, vt0.c0)) NOT BETWEEN (((t2.c0)OR(t2.c0))) AND (((vt0.c0)<<(vt0.c0)))) WHERE ((NOT (CASE WHEN ((t2.c0) NOT BETWEEN (vt0.c0) AND (t2.c0)) THEN UPPER(DISTINCT t2.c0) END))) GROUP BY t2.c0, vt0.c0 UNION SELECT t2.c0, vt0.c0 FROM vt0 CROSS JOIN t2 ON ((MIN(vt0.c0, vt0.c0)) NOT BETWEEN (((t2.c0)OR(t2.c0))) AND (((vt0.c0)<<(vt0.c0)))) WHERE (((CASE WHEN ((t2.c0) NOT BETWEEN (vt0.c0) AND (t2.c0)) THEN UPPER(DISTINCT t2.c0) END) ISNULL)) GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM vt0 CROSS JOIN t2 ON ((MIN(vt0.c0, vt0.c0)) NOT BETWEEN (((t2.c0)OR(t2.c0))) AND (((vt0.c0)<<(vt0.c0)))) GROUP BY t2.c0, vt0.c0;
SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING SUM(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING (NOT (SUM(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING ((SUM(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)<(vt0.c0)))) AND (((vt0.c0 IN ()))))) UNION ALL SELECT vt0.c0 FROM vt0 NOT INDEXED WHERE ((NOT ((((vt0.c0)) BETWEEN ((((vt0.c0)<(vt0.c0)))) AND (((vt0.c0 IN ()))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((((vt0.c0)<(vt0.c0)))) AND (((vt0.c0 IN ()))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE (((((t2.c0))>=((t2.c0))) IN ())) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT (((((t2.c0))>=((t2.c0))) IN ())))) UNION SELECT DISTINCT * FROM t2 WHERE (((((((t2.c0))>=((t2.c0))) IN ())) ISNULL));
SELECT DISTINCT * FROM t2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)*(x''))) NOT NULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)*(x''))) NOT NULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)*(x''))) NOT NULL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING SUM(MIN(COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING (NOT (SUM(MIN(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING ((SUM(MIN(COUNT(*)))) ISNULL);
SELECT vt0.c0, t2.c0 FROM t2, vt0;
SELECT vt0.c0, t2.c0 FROM t2, vt0 WHERE (t2.c0) UNION ALL SELECT vt0.c0, t2.c0 FROM t2, vt0 WHERE ((NOT (t2.c0))) UNION ALL SELECT vt0.c0, t2.c0 FROM t2, vt0 WHERE (((t2.c0) ISNULL));
SELECT vt0.c0, t2.c0 FROM t2, vt0;
SELECT DISTINCT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2 WHERE (CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((NOT (CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE (((CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END) ISNULL));
SELECT DISTINCT t2.c0 FROM t2;
SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2, vt0 WHERE ('' COLLATE NOCASE) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2, vt0 WHERE ((NOT ('' COLLATE NOCASE))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2, vt0 WHERE ((('' COLLATE NOCASE) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((MAX(MIN(COUNT(*))))%(AVG(MAX(SUM(t2.c0))))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (((MAX(MIN(COUNT(*))))%(AVG(MAX(SUM(t2.c0))))))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((((MAX(MIN(COUNT(*))))%(AVG(MAX(SUM(t2.c0)))))) ISNULL);
SELECT * FROM t2;
SELECT * FROM t2 WHERE (((CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END) IS FALSE)) UNION ALL SELECT ALL * FROM t2 WHERE ((NOT (((CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END) IS FALSE)))) UNION ALL SELECT * FROM t2 WHERE (((((CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END) IS FALSE)) ISNULL));
SELECT * FROM t2;
SELECT DISTINCT vt0.c0, t2.c0 FROM t2 FULL OUTER JOIN vt0 ON (((t2.c0)) NOT BETWEEN ((((((t2.c0)OR(vt0.c0)))AND(vt0.c0)))) AND (((- (t2.c0)))));
SELECT DISTINCT vt0.c0, t2.c0 FROM t2 FULL OUTER JOIN vt0 ON (((t2.c0)) NOT BETWEEN ((((((t2.c0)OR(vt0.c0)))AND(vt0.c0)))) AND (((- (t2.c0))))) WHERE ((((vt0.c0 COLLATE BINARY))>=((((vt0.c0)*(vt0.c0)))))) UNION SELECT DISTINCT vt0.c0, t2.c0 FROM t2 FULL OUTER JOIN vt0 ON (((t2.c0)) NOT BETWEEN ((((((t2.c0)OR(vt0.c0)))AND(vt0.c0)))) AND (((- (t2.c0))))) WHERE ((NOT ((((vt0.c0 COLLATE BINARY))>=((((vt0.c0)*(vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0, t2.c0 FROM t2 FULL OUTER JOIN vt0 ON (((t2.c0)) NOT BETWEEN ((((((t2.c0)OR(vt0.c0)))AND(vt0.c0)))) AND (((- (t2.c0))))) WHERE ((((((vt0.c0 COLLATE BINARY))>=((((vt0.c0)*(vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0, t2.c0 FROM t2 FULL OUTER JOIN vt0 ON (((t2.c0)) NOT BETWEEN ((((((t2.c0)OR(vt0.c0)))AND(vt0.c0)))) AND (((- (t2.c0)))));
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 WHERE (CASE t2.c0  WHEN CAST('' AS REAL) THEN CAST(t2.c0 AS NUMERIC) ELSE (t2.c0 IN ()) END) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT (CASE t2.c0  WHEN CAST('' AS REAL) THEN CAST(t2.c0 AS NUMERIC) ELSE (t2.c0 IN ()) END))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE (((CASE t2.c0  WHEN CAST('' AS REAL) THEN CAST(t2.c0 AS NUMERIC) ELSE (t2.c0 IN ()) END) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING t2.c0 UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (t2.c0)) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((t2.c0) ISNULL);
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING t2.c0 UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (t2.c0)) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((t2.c0) ISNULL);
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL * FROM t2;
SELECT * FROM t2 WHERE ((((((t2.c0)=(t2.c0)), ((t2.c0)*(t2.c0)), ((((((((t2.c0)AND(t2.c0)))AND(t2.c0)))AND(t2.c0)))AND(t2.c0))))<((UNLIKELY(t2.c0), CASE WHEN 0.6923818719454748 THEN t2.c0 WHEN x'6b1f' THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END, t2.c0 COLLATE NOCASE)))) UNION ALL SELECT ALL * FROM t2 WHERE ((NOT ((((((t2.c0)=(t2.c0)), ((t2.c0)*(t2.c0)), ((((((((t2.c0)AND(t2.c0)))AND(t2.c0)))AND(t2.c0)))AND(t2.c0))))<((UNLIKELY(t2.c0), CASE WHEN 0.6923818719454748 THEN t2.c0 WHEN x'6b1f' THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END, t2.c0 COLLATE NOCASE)))))) UNION ALL SELECT * FROM t2 WHERE ((((((((t2.c0)==(t2.c0)), ((t2.c0)*(t2.c0)), ((((((((t2.c0)AND(t2.c0)))AND(t2.c0)))AND(t2.c0)))AND(t2.c0))))<((UNLIKELY(t2.c0), CASE WHEN 0.6923818719454748 THEN t2.c0 WHEN x'6b1f' THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END, t2.c0 COLLATE NOCASE)))) ISNULL));
SELECT ALL * FROM t2;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0;
SELECT t2.c0 FROM t2, vt0 WHERE (CAST(t2.c0 AS NUMERIC) COLLATE NOCASE) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2, vt0 WHERE ((NOT (CAST(t2.c0 AS NUMERIC) COLLATE NOCASE))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2, vt0 WHERE (((CAST(t2.c0 AS NUMERIC) COLLATE NOCASE) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(MIN(MIN(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(MIN(MIN(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(MIN(MIN(vt0.c0)))) ISNULL);
SELECT ALL MAX((- (((t2.c0)*(t2.c0))))) FROM t2 ORDER BY (CAST(t2.c0 AS BLOB) IN ())  NULLS LAST;
SELECT ALL * FROM vt0, t2;
SELECT * FROM vt0, t2 WHERE (t2.c0) UNION ALL SELECT ALL * FROM vt0, t2 WHERE ((NOT (t2.c0))) UNION ALL SELECT ALL * FROM vt0, t2 WHERE (((t2.c0) ISNULL));
SELECT ALL * FROM vt0, t2;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0)))<(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)LIKE(vt0.c0)))<(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)LIKE(vt0.c0)))<(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)==(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND ((vt0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)=(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND ((vt0.c0 IN ())))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)=(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND ((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, t2.c0 FROM vt0, t2;
SELECT vt0.c0, t2.c0 FROM vt0, t2 WHERE ((+ (vt0.c0)) COLLATE BINARY) UNION ALL SELECT vt0.c0, t2.c0 FROM vt0, t2 WHERE ((NOT ((+ (vt0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 WHERE ((((+ (vt0.c0)) COLLATE BINARY) ISNULL));
SELECT vt0.c0, t2.c0 FROM vt0, t2;
SELECT DISTINCT vt0.c0 FROM vt0 INDEXED BY i3;
SELECT t2.c0, vt0.c0 FROM vt0, t2 GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM vt0, t2 WHERE (RTRIM(t2.c0 COLLATE NOCASE)) GROUP BY t2.c0, vt0.c0 UNION SELECT t2.c0, vt0.c0 FROM vt0, t2 WHERE ((NOT (RTRIM(t2.c0 COLLATE NOCASE)))) GROUP BY t2.c0, vt0.c0 UNION SELECT t2.c0, vt0.c0 FROM vt0, t2 WHERE (((RTRIM(t2.c0 COLLATE NOCASE)) ISNULL)) GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM vt0, t2 GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM vt0 NATURAL JOIN t2 GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM vt0 NATURAL JOIN t2 GROUP BY t2.c0, vt0.c0 HAVING 0.1629652568397122 COLLATE NOCASE UNION ALL SELECT ALL t2.c0, vt0.c0 FROM vt0 NATURAL JOIN t2 GROUP BY t2.c0, vt0.c0 HAVING (NOT (0.1629652568397122 COLLATE NOCASE)) UNION ALL SELECT t2.c0, vt0.c0 FROM vt0 NATURAL JOIN t2 GROUP BY t2.c0, vt0.c0 HAVING ((0.1629652568397122 COLLATE NOCASE) ISNULL);
SELECT ALL t2.c0, vt0.c0 FROM vt0 NATURAL JOIN t2 GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM vt0 NATURAL JOIN t2 GROUP BY t2.c0, vt0.c0 HAVING 0.1629652568397122 COLLATE NOCASE UNION ALL SELECT ALL t2.c0, vt0.c0 FROM vt0 NATURAL JOIN t2 GROUP BY t2.c0, vt0.c0 HAVING (NOT (0.1629652568397122 COLLATE NOCASE)) UNION ALL SELECT t2.c0, vt0.c0 FROM vt0 NATURAL JOIN t2 GROUP BY t2.c0, vt0.c0 HAVING ((0.1629652568397122 COLLATE NOCASE) ISNULL);
SELECT ALL t2.c0, vt0.c0 FROM vt0 NATURAL JOIN t2 GROUP BY t2.c0, vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CAST(x'' AS INTEGER)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST(x'' AS INTEGER)))) UNION ALL SELECT * FROM vt0 WHERE (((CAST(x'' AS INTEGER)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE ((((t2.c0))=((t2.c0))) COLLATE BINARY) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT ((((t2.c0))==((t2.c0))) COLLATE BINARY))) UNION SELECT DISTINCT * FROM t2 WHERE ((((((t2.c0))==((t2.c0))) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)GLOB(HEX('m(C')))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM)GLOB(HEX('m(C')))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)GLOB(HEX('m(C')))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT((((vt0.c0))!=((vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT((((vt0.c0))!=((vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT((((vt0.c0))<>((vt0.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT((((vt0.c0))!=((vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT((((vt0.c0))!=((vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT((((vt0.c0))<>((vt0.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL TOTAL(CAST(CASE vt0.c0  WHEN vt0.c0 THEN t2.c0 ELSE vt0.c0 END AS TEXT)) FROM t2, vt0 ORDER BY CASE WHEN (t2.c0 IN ()) THEN (0.9261500946716386 IN ()) END  NULLS FIRST, (((vt0.c0)+(t2.c0)) IN ()) ASC;
SELECT t2.c0, vt0.c0 FROM t2, vt0;
SELECT t2.c0, vt0.c0 FROM t2, vt0 WHERE ('') UNION ALL SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 WHERE ((NOT (''))) UNION ALL SELECT t2.c0, vt0.c0 FROM t2, vt0 WHERE ((('') ISNULL));
SELECT t2.c0, vt0.c0 FROM t2, vt0;
SELECT DISTINCT vt0.c0, t2.c0 FROM vt0, t2;
SELECT DISTINCT vt0.c0, t2.c0 FROM vt0, t2 WHERE (((((vt0.c0)<(t2.c0)))&(CAST(t2.c0 AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0, t2.c0 FROM vt0, t2 WHERE ((NOT (((((vt0.c0)<(t2.c0)))&(CAST(t2.c0 AS NUMERIC)))))) UNION SELECT DISTINCT vt0.c0, t2.c0 FROM vt0, t2 WHERE (((((((vt0.c0)<(t2.c0)))&(CAST(t2.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT vt0.c0, t2.c0 FROM vt0, t2;
SELECT ALL vt0.c0 FROM t2 CROSS JOIN vt0 ON (((((vt0.c0))<=((t2.c0))))*(((vt0.c0)<(t2.c0)))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM t2 CROSS JOIN vt0 ON (((((vt0.c0))<=((t2.c0))))*(((vt0.c0)<(t2.c0)))) WHERE (((((((t2.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (-1.675443748E9) AND (SQLITE_SOURCE_ID()))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t2 CROSS JOIN vt0 ON (((((vt0.c0))<=((t2.c0))))*(((vt0.c0)<(t2.c0)))) WHERE ((NOT (((((((t2.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (-1.675443748E9) AND (SQLITE_SOURCE_ID()))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t2 CROSS JOIN vt0 ON (((((vt0.c0))<=((t2.c0))))*(((vt0.c0)<(t2.c0)))) WHERE (((((((((t2.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (-1.675443748E9) AND (SQLITE_SOURCE_ID()))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t2 CROSS JOIN vt0 ON (((((vt0.c0))<=((t2.c0))))*(((vt0.c0)<(t2.c0)))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(((AVG(GROUP_CONCAT(SUM(GROUP_CONCAT(vt0.c0)))))%(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(((AVG(GROUP_CONCAT(SUM(GROUP_CONCAT(vt0.c0)))))%(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(((AVG(GROUP_CONCAT(SUM(GROUP_CONCAT(vt0.c0)))))%(vt0.c0)))) ISNULL);
SELECT * FROM t2;
SELECT * FROM t2 WHERE (CASE WHEN t2.c0 COLLATE NOCASE THEN ((t2.c0)<=(t2.c0)) ELSE ((((((((t2.c0)AND(t2.c0)))AND(t2.c0)))OR(t2.c0)))AND(t2.c0)) END) UNION ALL SELECT ALL * FROM t2 WHERE ((NOT (CASE WHEN t2.c0 COLLATE NOCASE THEN ((t2.c0)<=(t2.c0)) ELSE ((((((((t2.c0)AND(t2.c0)))AND(t2.c0)))OR(t2.c0)))AND(t2.c0)) END))) UNION ALL SELECT ALL * FROM t2 WHERE (((CASE WHEN t2.c0 COLLATE NOCASE THEN ((t2.c0)<=(t2.c0)) ELSE ((((((((t2.c0)AND(t2.c0)))AND(t2.c0)))OR(t2.c0)))AND(t2.c0)) END) ISNULL));
SELECT * FROM t2;
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE (((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT (((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM t2 WHERE (((((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t2;
SELECT ALL vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t2 WHERE (((vt0.c0)LIKE(CASE WHEN vt0.c0 THEN t2.c0 END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t2 WHERE ((NOT (((vt0.c0)LIKE(CASE WHEN vt0.c0 THEN t2.c0 END))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t2 WHERE (((((vt0.c0)LIKE(CASE WHEN vt0.c0 THEN t2.c0 END))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (+ (((MIN(t2.c0)) IS TRUE))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT ((+ (((MIN(t2.c0)) IS TRUE))))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (((+ (((MIN(t2.c0)) IS TRUE)))) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (+ (((MIN(t2.c0)) IS TRUE))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT ((+ (((MIN(t2.c0)) IS TRUE))))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (((+ (((MIN(t2.c0)) IS TRUE)))) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN t2.c0 THEN vt0.c0 END AS TEXT);
SELECT ALL t2.c0 FROM t2 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN t2.c0 THEN vt0.c0 END AS TEXT) WHERE (LIKELIHOOD(vt0.c0, 0.24310110490798553) COLLATE BINARY COLLATE NOCASE) UNION ALL SELECT t2.c0 FROM t2 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN t2.c0 THEN vt0.c0 END AS TEXT) WHERE ((NOT (LIKELIHOOD(vt0.c0, 0.24310110490798553) COLLATE BINARY COLLATE NOCASE))) UNION ALL SELECT t2.c0 FROM t2 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN t2.c0 THEN vt0.c0 END AS TEXT) WHERE (((LIKELIHOOD(vt0.c0, 0.24310110490798553) COLLATE BINARY COLLATE NOCASE) ISNULL));
SELECT t2.c0 FROM t2 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN t2.c0 THEN vt0.c0 END AS TEXT);
SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED INNER JOIN t2 ON ((((t2.c0) ISNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN ())));
SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN t2 ON ((((t2.c0) ISNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN ()))) WHERE ((((-1.729757177E9 IN ())) ISNULL)) UNION SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN t2 ON ((((t2.c0) ISNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN ()))) WHERE ((NOT ((((-1.729757177E9 IN ())) ISNULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN t2 ON ((((t2.c0) ISNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN ()))) WHERE ((((((-1.729757177E9 IN ())) ISNULL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED INNER JOIN t2 ON ((((t2.c0) ISNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN ())));
SELECT vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN t2.c0 THEN vt0.c0 END)) AND ((t2.c0 COLLATE BINARY)))) GROUP BY vt0.c0, t2.c0 UNION SELECT vt0.c0, t2.c0 FROM t2, vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN t2.c0 THEN vt0.c0 END)) AND ((t2.c0 COLLATE BINARY)))))) GROUP BY vt0.c0, t2.c0 UNION SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN t2.c0 THEN vt0.c0 END)) AND ((t2.c0 COLLATE BINARY)))) ISNULL)) GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM t2, vt0 NOT INDEXED GROUP BY vt0.c0, t2.c0 HAVING CASE WHEN (((GROUP_CONCAT(TOTAL(t2.c0))))>((AVG(t2.c0)))) THEN LOWER(DISTINCT t2.c0) WHEN (((GROUP_CONCAT(MIN(MIN(MIN(vt0.c0))))))=((t2.c0))) THEN COUNT(GROUP_CONCAT(GROUP_CONCAT(COUNT(vt0.c0)))) WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(COUNT(t2.c0))))OR(0xffffffff9d19e36e)))AND(MAX(t2.c0))) THEN t2.c0 END UNION ALL SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0 HAVING (NOT (CASE WHEN (((GROUP_CONCAT(TOTAL(t2.c0))))>((AVG(t2.c0)))) THEN LOWER(DISTINCT t2.c0) WHEN (((GROUP_CONCAT(MIN(MIN(MIN(vt0.c0))))))==((t2.c0))) THEN COUNT(GROUP_CONCAT(GROUP_CONCAT(COUNT(vt0.c0)))) WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(COUNT(t2.c0))))OR(0Xffffffff9d19e36e)))AND(MAX(t2.c0))) THEN t2.c0 END)) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0 HAVING ((CASE WHEN (((GROUP_CONCAT(TOTAL(t2.c0))))>((AVG(t2.c0)))) THEN LOWER(DISTINCT t2.c0) WHEN (((GROUP_CONCAT(MIN(MIN(MIN(vt0.c0))))))==((t2.c0))) THEN COUNT(GROUP_CONCAT(GROUP_CONCAT(COUNT(vt0.c0)))) WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(COUNT(t2.c0))))OR(0xffffffff9d19e36e)))AND(MAX(t2.c0))) THEN t2.c0 END) ISNULL);
SELECT ALL * FROM t2, vt0;
SELECT ALL * FROM t2, vt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM t2, vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM t2, vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM t2, vt0;
SELECT DISTINCT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2 WHERE (t2.c0) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((NOT (t2.c0))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE (((t2.c0) ISNULL));
SELECT DISTINCT t2.c0 FROM t2;
SELECT t2.c0 FROM vt0 NATURAL JOIN t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM vt0 NATURAL JOIN t2 WHERE ('1776417144') GROUP BY t2.c0 UNION SELECT t2.c0 FROM vt0 NATURAL JOIN t2 WHERE ((NOT ('1776417144'))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM vt0 NATURAL JOIN t2 WHERE ((('1776417144') ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM vt0 NATURAL JOIN t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2, vt0 GROUP BY t2.c0;
SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING MAX(COUNT(t2.c0) COLLATE BINARY) UNION ALL SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING (NOT (MAX(COUNT(t2.c0) COLLATE BINARY))) UNION ALL SELECT ALL t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING ((MAX(COUNT(t2.c0) COLLATE BINARY)) ISNULL);
SELECT ALL t2.c0 FROM t2, vt0;
SELECT ALL t2.c0 FROM t2, vt0 WHERE (((((((vt0.c0)<(NULL)))OR((+ (t2.c0)))))AND(vt0.c0))) UNION ALL SELECT t2.c0 FROM t2, vt0 WHERE ((NOT (((((((vt0.c0)<(NULL)))OR((+ (t2.c0)))))AND(vt0.c0))))) UNION ALL SELECT t2.c0 FROM t2, vt0 WHERE (((((((((vt0.c0)<(NULL)))OR((+ (t2.c0)))))AND(vt0.c0))) ISNULL));
SELECT ALL t2.c0 FROM t2, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (0.5061006878134364) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (0.5061006878134364))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((0.5061006878134364) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM t2, vt0 WHERE ((NOT (x'67d0'))) GROUP BY t2.c0, vt0.c0 UNION SELECT t2.c0, vt0.c0 FROM t2, vt0 WHERE ((NOT ((NOT (x'67d0'))))) GROUP BY t2.c0, vt0.c0 UNION SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 WHERE ((((NOT (x'67d0'))) ISNULL)) GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(((GROUP_CONCAT(GROUP_CONCAT(SUM(MIN(SUM(vt0.c0))))))*(COUNT(vt0.c0))) AS REAL) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(((GROUP_CONCAT(GROUP_CONCAT(SUM(MIN(SUM(vt0.c0))))))*(COUNT(vt0.c0))) AS REAL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(((GROUP_CONCAT(GROUP_CONCAT(SUM(MIN(SUM(vt0.c0))))))*(COUNT(vt0.c0))) AS REAL)) ISNULL);
SELECT * FROM t2 LEFT OUTER JOIN vt0 ON ((((((((((t2.c0)%(t2.c0)))AND(LOWER(DISTINCT t2.c0))))OR('牮Ulmswn/|')))AND(((t2.c0)<<(vt0.c0)))))AND((t2.c0 IN (''))));
SELECT * FROM t2 LEFT OUTER JOIN vt0 ON ((((((((((t2.c0)%(t2.c0)))AND(LOWER(DISTINCT t2.c0))))OR('牮Ulmswn/|')))AND(((t2.c0)<<(vt0.c0)))))AND((t2.c0 IN ('')))) WHERE ((NOT (vt0.c0)) COLLATE NOCASE) UNION ALL SELECT ALL * FROM t2 LEFT OUTER JOIN vt0 ON ((((((((((t2.c0)%(t2.c0)))AND(LOWER(DISTINCT t2.c0))))OR('牮Ulmswn/|')))AND(((t2.c0)<<(vt0.c0)))))AND((t2.c0 IN ('')))) WHERE ((NOT ((NOT (vt0.c0)) COLLATE NOCASE))) UNION ALL SELECT * FROM t2 LEFT OUTER JOIN vt0 ON ((((((((((t2.c0)%(t2.c0)))AND(LOWER(DISTINCT t2.c0))))OR('牮Ulmswn/|')))AND(((t2.c0)<<(vt0.c0)))))AND((t2.c0 IN ('')))) WHERE ((((NOT (vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT * FROM t2 LEFT OUTER JOIN vt0 ON ((((((((((t2.c0)%(t2.c0)))AND(LOWER(DISTINCT t2.c0))))OR('牮Ulmswn/|')))AND(((t2.c0)<<(vt0.c0)))))AND((t2.c0 IN (''))));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((NOT (vt0.c0)))GLOB((vt0.c0 IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((NOT (vt0.c0)))GLOB((vt0.c0 IN ())))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((NOT (vt0.c0)))GLOB((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 INNER JOIN t2 ON ((((x'')=(t2.c0)))LIKE(t2.c0)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 INNER JOIN t2 ON ((((x'')=(t2.c0)))LIKE(t2.c0)) WHERE ((vt0.c0 COLLATE RTRIM IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 INNER JOIN t2 ON ((((x'')==(t2.c0)))LIKE(t2.c0)) WHERE ((NOT ((vt0.c0 COLLATE RTRIM IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 INNER JOIN t2 ON ((((x'')==(t2.c0)))LIKE(t2.c0)) WHERE ((((vt0.c0 COLLATE RTRIM IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 INNER JOIN t2 ON ((((x'')=(t2.c0)))LIKE(t2.c0)) GROUP BY vt0.c0;
SELECT vt0.c0, t2.c0 FROM vt0 INNER JOIN t2 ON t2.c0 COLLATE RTRIM COLLATE BINARY GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM vt0 INNER JOIN t2 ON t2.c0 COLLATE RTRIM COLLATE BINARY GROUP BY vt0.c0, t2.c0 HAVING TOTAL(MIN(t2.c0)) UNION ALL SELECT vt0.c0, t2.c0 FROM vt0 INNER JOIN t2 ON t2.c0 COLLATE RTRIM COLLATE BINARY GROUP BY vt0.c0, t2.c0 HAVING (NOT (TOTAL(MIN(t2.c0)))) UNION ALL SELECT vt0.c0, t2.c0 FROM vt0 INNER JOIN t2 ON t2.c0 COLLATE RTRIM COLLATE BINARY GROUP BY vt0.c0, t2.c0 HAVING ((TOTAL(MIN(t2.c0))) ISNULL);
SELECT ALL MIN(((((t2.c0) NOT NULL))<>(((((t2.c0)OR('-1417024552')))OR(x'7b3d4772'))))) FROM t2;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN '0.25450345092453597' THEN 0.4162221625243544 WHEN x'0d3e' THEN 0X56c62e93 ELSE vt0.c0 END)+(((vt0.c0)IS(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN '0.25450345092453597' THEN 0.4162221625243544 WHEN x'0d3e' THEN 0X56c62e93 ELSE vt0.c0 END)+(((vt0.c0)IS(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN '0.25450345092453597' THEN 0.4162221625243544 WHEN x'0d3e' THEN 0X56c62e93 ELSE vt0.c0 END)+(((vt0.c0)IS(vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, t2;
SELECT DISTINCT * FROM vt0, t2 WHERE (json_object((vt0.c0 IN ()), ((vt0.c0)+(vt0.c0)))) UNION SELECT DISTINCT * FROM vt0, t2 WHERE ((NOT (json_object((vt0.c0 IN ()), ((vt0.c0)+(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, t2 WHERE (((json_object((vt0.c0 IN ()), ((vt0.c0)+(vt0.c0)))) ISNULL));
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE ((((t2.c0)<>(t2.c0)) IN (CASE WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN NULL THEN t2.c0 END))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((NOT ((((t2.c0)<>(t2.c0)) IN (CASE WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN NULL THEN t2.c0 END))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 NOT INDEXED WHERE ((((((t2.c0)<>(t2.c0)) IN (CASE WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN NULL THEN t2.c0 END))) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING TOTAL(MAX(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING (NOT (TOTAL(MAX(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING ((TOTAL(MAX(vt0.c0))) ISNULL);
SELECT vt0.c0, t2.c0 FROM t2, vt0;
SELECT vt0.c0, t2.c0 FROM t2, vt0 WHERE (CAST(t2.c0 AS TEXT)) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 WHERE ((NOT (CAST(t2.c0 AS TEXT)))) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 WHERE (((CAST(t2.c0 AS TEXT)) ISNULL));
SELECT vt0.c0, t2.c0 FROM t2, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((~ (x'98542020')), ((vt0.c0)>>(vt0.c0)), ((vt0.c0)||(x'')))) AND (((((vt0.c0, vt0.c0, '-1682681896')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), (~ (vt0.c0)), UNLIKELY(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((~ (x'98542020')), ((vt0.c0)>>(vt0.c0)), ((vt0.c0)||(x'')))) AND (((((vt0.c0, vt0.c0, '-1682681896')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), (~ (vt0.c0)), UNLIKELY(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((~ (x'98542020')), ((vt0.c0)>>(vt0.c0)), ((vt0.c0)||(x'')))) AND (((((vt0.c0, vt0.c0, '-1682681896')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), (~ (vt0.c0)), UNLIKELY(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t2.c0, vt0.c0 FROM vt0, t2 GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM vt0, t2 WHERE (CASE t2.c0  WHEN t2.c0 THEN vt0.c0 END COLLATE RTRIM) GROUP BY t2.c0, vt0.c0 UNION SELECT t2.c0, vt0.c0 FROM vt0, t2 WHERE ((NOT (CASE t2.c0  WHEN t2.c0 THEN vt0.c0 END COLLATE RTRIM))) GROUP BY t2.c0, vt0.c0 UNION SELECT ALL t2.c0, vt0.c0 FROM vt0, t2 WHERE (((CASE t2.c0  WHEN t2.c0 THEN vt0.c0 END COLLATE RTRIM) ISNULL)) GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM vt0, t2 GROUP BY t2.c0, vt0.c0;
SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0;
SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING ((TOTAL(vt0.c0))>>(GROUP_CONCAT(vt0.c0))) UNION ALL SELECT ALL t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING (NOT (((TOTAL(vt0.c0))>>(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT ALL t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING ((((TOTAL(vt0.c0))>>(GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0;
SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING ((TOTAL(vt0.c0))>>(GROUP_CONCAT(vt0.c0))) UNION ALL SELECT ALL t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING (NOT (((TOTAL(vt0.c0))>>(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT ALL t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING ((((TOTAL(vt0.c0))>>(GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0;
SELECT t2.c0 FROM vt0, t2;
SELECT t2.c0 FROM vt0, t2 WHERE (vt0.c0) UNION ALL SELECT t2.c0 FROM vt0, t2 WHERE ((NOT (vt0.c0))) UNION ALL SELECT t2.c0 FROM vt0, t2 WHERE (((vt0.c0) ISNULL));
SELECT t2.c0 FROM vt0, t2;
SELECT DISTINCT * FROM t2, vt0;
SELECT DISTINCT * FROM t2, vt0 WHERE (((((vt0.c0)<(t2.c0)))LIKE(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t2.c0 WHEN NULL THEN t2.c0 ELSE vt0.c0 END))) UNION SELECT DISTINCT * FROM t2, vt0 WHERE ((NOT (((((vt0.c0)<(t2.c0)))LIKE(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t2.c0 WHEN NULL THEN t2.c0 ELSE vt0.c0 END))))) UNION SELECT DISTINCT * FROM t2, vt0 WHERE (((((((vt0.c0)<(t2.c0)))LIKE(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t2.c0 WHEN NULL THEN t2.c0 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM t2, vt0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 WHERE (((((((((((0.36073626615003074)AND(t2.c0)))AND(t2.c0)))AND(t2.c0)))AND(t2.c0))) BETWEEN ((((t2.c0, t2.c0, t2.c0))<=((t2.c0, t2.c0, t2.c0)))) AND (CAST(t2.c0 AS NUMERIC)))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((NOT (((((((((((0.36073626615003074)AND(t2.c0)))AND(t2.c0)))AND(t2.c0)))AND(t2.c0))) BETWEEN ((((t2.c0, t2.c0, t2.c0))<=((t2.c0, t2.c0, t2.c0)))) AND (CAST(t2.c0 AS NUMERIC)))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE (((((((((((((0.36073626615003074)AND(t2.c0)))AND(t2.c0)))AND(t2.c0)))AND(t2.c0))) BETWEEN ((((t2.c0, t2.c0, t2.c0))<=((t2.c0, t2.c0, t2.c0)))) AND (CAST(t2.c0 AS NUMERIC)))) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 NOT INDEXED GROUP BY vt0.c0, t2.c0 HAVING AVG(AVG(t2.c0)) UNION ALL SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING (NOT (AVG(AVG(t2.c0)))) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING ((AVG(AVG(t2.c0))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(UPPER(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(UPPER(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(UPPER(vt0.c0)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM t2, vt0;
SELECT DISTINCT vt0.c0 FROM t2, vt0 WHERE ((((0x166b1eae)) NOT BETWEEN ((((t2.c0) BETWEEN (NULL) AND (vt0.c0)))) AND ((((vt0.c0) BETWEEN (t2.c0) AND (t2.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM t2, vt0 WHERE ((NOT ((((0X166b1eae)) NOT BETWEEN ((((t2.c0) BETWEEN (NULL) AND (vt0.c0)))) AND ((((vt0.c0) BETWEEN (t2.c0) AND (t2.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM t2, vt0 WHERE ((((((0x166b1eae)) NOT BETWEEN ((((t2.c0) BETWEEN (NULL) AND (vt0.c0)))) AND ((((vt0.c0) BETWEEN (t2.c0) AND (t2.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM t2, vt0;
SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0;
SELECT t2.c0 FROM vt0, t2 WHERE (UPPER(DISTINCT (('#|') ISNULL))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM vt0, t2 WHERE ((NOT (UPPER(DISTINCT (('#|') ISNULL))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM vt0, t2 WHERE (((UPPER(DISTINCT (('#|') ISNULL))) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(COUNT(*) COLLATE RTRIM) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(COUNT(*) COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(COUNT(*) COLLATE RTRIM)) ISNULL);
SELECT ALL t2.c0 FROM t2;
SELECT ALL t2.c0 FROM t2 WHERE (json_array_length(((t2.c0)OR('XHM54Q')))) UNION ALL SELECT t2.c0 FROM t2 WHERE ((NOT (json_array_length(((t2.c0)OR('XHM54Q')))))) UNION ALL SELECT t2.c0 FROM t2 WHERE (((json_array_length(((t2.c0)OR('XHM54Q')))) ISNULL));
SELECT ALL t2.c0 FROM t2;
SELECT DISTINCT vt0.c0 FROM t2, vt0;
SELECT DISTINCT vt0.c0 FROM t2, vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY) UNION SELECT DISTINCT vt0.c0 FROM t2, vt0 WHERE ((NOT ((vt0.c0 IN ()) COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0 FROM t2, vt0 WHERE ((((vt0.c0 IN ()) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c0 FROM t2, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((CAST(vt0.c0 AS TEXT) IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((CAST(vt0.c0 AS TEXT) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL MIN((((((t2.c0)<<(t2.c0))))<((t2.c0)))) FROM vt0, t2;
SELECT * FROM vt0, t2;
SELECT * FROM vt0, t2 WHERE ((((0x2484e261)) BETWEEN ((((((406239285)AND(vt0.c0)))OR(t2.c0)))) AND ((((t2.c0) BETWEEN (t2.c0) AND (vt0.c0)))))) ORDER BY (((((t2.c0) NOT NULL), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((t2.c0)/(t2.c0))))<(((NOT (vt0.c0)), (vt0.c0 IN ()), CAST(vt0.c0 AS INTEGER)))) DESC  NULLS FIRST, '-1331839330'  NULLS FIRST, ((((0.5564513295049579)AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM vt0, t2 WHERE ((NOT ((((0X2484e261)) BETWEEN ((((((406239285)AND(vt0.c0)))OR(t2.c0)))) AND ((((t2.c0) BETWEEN (t2.c0) AND (vt0.c0)))))))) ORDER BY (((((t2.c0) NOT NULL), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((t2.c0)/(t2.c0))))<(((NOT (vt0.c0)), (vt0.c0 IN ()), CAST(vt0.c0 AS INTEGER)))) DESC  NULLS FIRST, '-1331839330'  NULLS FIRST, ((((0.5564513295049579)AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM vt0, t2 WHERE ((((((0X2484e261)) BETWEEN ((((((406239285)AND(vt0.c0)))OR(t2.c0)))) AND ((((t2.c0) BETWEEN (t2.c0) AND (vt0.c0)))))) ISNULL)) ORDER BY (((((t2.c0) NOT NULL), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((t2.c0)/(t2.c0))))<(((NOT (vt0.c0)), (vt0.c0 IN ()), CAST(vt0.c0 AS INTEGER)))) DESC  NULLS FIRST, '-1331839330'  NULLS FIRST, ((((0.5564513295049579)AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT * FROM vt0, t2;
SELECT DISTINCT * FROM vt0 CROSS JOIN t2 ON (((t2.c0)) NOT BETWEEN ((TRIM(DISTINCT vt0.c0, vt0.c0))) AND (((- (NULL)))));
SELECT DISTINCT * FROM vt0 CROSS JOIN t2 ON (((t2.c0)) NOT BETWEEN ((TRIM(DISTINCT vt0.c0, vt0.c0))) AND (((- (NULL))))) WHERE (CAST(((t2.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN t2 ON (((t2.c0)) NOT BETWEEN ((TRIM(DISTINCT vt0.c0, vt0.c0))) AND (((- (NULL))))) WHERE ((NOT (CAST(((t2.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN t2 ON (((t2.c0)) NOT BETWEEN ((TRIM(DISTINCT vt0.c0, vt0.c0))) AND (((- (NULL))))) WHERE (((CAST(((t2.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN t2 ON (((t2.c0)) NOT BETWEEN ((TRIM(DISTINCT vt0.c0, vt0.c0))) AND (((- (NULL)))));
SELECT vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 WHERE (CAST(((vt0.c0)/(t2.c0)) AS REAL)) GROUP BY vt0.c0, t2.c0 UNION SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 WHERE ((NOT (CAST(((vt0.c0)/(t2.c0)) AS REAL)))) GROUP BY vt0.c0, t2.c0 UNION SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 WHERE (((CAST(((vt0.c0)/(t2.c0)) AS REAL)) ISNULL)) GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0;
SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING 0.21762031902955215 UNION ALL SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING (NOT (0.21762031902955215)) UNION ALL SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING ((0.21762031902955215) ISNULL);
SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING 0.21762031902955215 UNION ALL SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING (NOT (0.21762031902955215)) UNION ALL SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING ((0.21762031902955215) ISNULL);
SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0;
SELECT * FROM vt0 LEFT OUTER JOIN t2 ON ((CASE vt0.c0  WHEN vt0.c0 THEN t2.c0 WHEN vt0.c0 THEN NULL WHEN t2.c0 THEN vt0.c0 END)=(((t2.c0) IS TRUE)));
SELECT * FROM vt0 LEFT OUTER JOIN t2 ON ((CASE vt0.c0  WHEN vt0.c0 THEN t2.c0 WHEN vt0.c0 THEN NULL WHEN t2.c0 THEN vt0.c0 END)=(((t2.c0) IS TRUE))) WHERE (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((0Xffffffff8a9f8f42) IS TRUE)))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN t2 ON ((CASE vt0.c0  WHEN vt0.c0 THEN t2.c0 WHEN vt0.c0 THEN NULL WHEN t2.c0 THEN vt0.c0 END)==(((t2.c0) IS TRUE))) WHERE ((NOT (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((0xffffffff8a9f8f42) IS TRUE)))))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN t2 ON ((CASE vt0.c0  WHEN vt0.c0 THEN t2.c0 WHEN vt0.c0 THEN NULL WHEN t2.c0 THEN vt0.c0 END)=(((t2.c0) IS TRUE))) WHERE (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((0Xffffffff8a9f8f42) IS TRUE)))) ISNULL));
SELECT * FROM vt0 LEFT OUTER JOIN t2 ON ((CASE vt0.c0  WHEN vt0.c0 THEN t2.c0 WHEN vt0.c0 THEN NULL WHEN t2.c0 THEN vt0.c0 END)=(((t2.c0) IS TRUE)));
SELECT DISTINCT * FROM t2, vt0;
SELECT DISTINCT * FROM t2, vt0 WHERE ((((((t2.c0, t2.c0, t2.c0))<((vt0.c0, x'', t2.c0))))==(-879311796))) UNION SELECT DISTINCT * FROM t2, vt0 WHERE ((NOT ((((((t2.c0, t2.c0, t2.c0))<((vt0.c0, x'', t2.c0))))=(-879311796))))) UNION SELECT DISTINCT * FROM t2, vt0 WHERE ((((((((t2.c0, t2.c0, t2.c0))<((vt0.c0, x'', t2.c0))))=(-879311796))) ISNULL));
SELECT DISTINCT * FROM t2, vt0;
SELECT ALL vt0.c0 FROM vt0 INDEXED BY i3 GROUP BY vt0.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING AVG(TOTAL(t2.c0)) COLLATE BINARY UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (AVG(TOTAL(t2.c0)) COLLATE BINARY)) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((AVG(TOTAL(t2.c0)) COLLATE BINARY) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (('-137985206' IN ())) AND (CASE vt0.c0  WHEN '-2092531776' THEN vt0.c0 ELSE vt0.c0 END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN ())) BETWEEN (('-137985206' IN ())) AND (CASE vt0.c0  WHEN '-2092531776' THEN vt0.c0 ELSE vt0.c0 END))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN ())) BETWEEN (('-137985206' IN ())) AND (CASE vt0.c0  WHEN '-2092531776' THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0)LIKE(vt0.c0)), vt0.c0)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (TRIM(DISTINCT ((vt0.c0)LIKE(vt0.c0)), vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((TRIM(DISTINCT ((vt0.c0)LIKE(vt0.c0)), vt0.c0)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE (CASE CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END  WHEN CAST(t2.c0 AS INTEGER) THEN ((t2.c0) NOT NULL) END) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((NOT (CASE CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END  WHEN CAST(t2.c0 AS INTEGER) THEN ((t2.c0) NOT NULL) END))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE (((CASE CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END  WHEN CAST(t2.c0 AS INTEGER) THEN ((t2.c0) NOT NULL) END) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(COUNT(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(COUNT(vt0.c0))) ISNULL);
SELECT MAX((((vt0.c0 COLLATE BINARY, '657018613', (((vt0.c0))<((t2.c0)))))==((((((t2.c0)OR(vt0.c0)))AND(vt0.c0)), (- (t2.c0)), CASE vt0.c0  WHEN vt0.c0 THEN t2.c0 END)))) FROM vt0, t2;
SELECT ALL * FROM t2;
SELECT * FROM t2 WHERE ((((t2.c0)*(t2.c0)) IN ())) UNION ALL SELECT ALL * FROM t2 WHERE ((NOT ((((t2.c0)*(t2.c0)) IN ())))) UNION ALL SELECT ALL * FROM t2 WHERE ((((((t2.c0)*(t2.c0)) IN ())) ISNULL));
SELECT ALL * FROM t2;
SELECT DISTINCT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2 WHERE ((((t2.c0)) BETWEEN ((((t2.c0)>=(t2.c0)))) AND ((((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)))))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((NOT ((((t2.c0)) BETWEEN ((((t2.c0)>=(t2.c0)))) AND ((((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)))))))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((((((t2.c0)) BETWEEN ((((t2.c0)>=(t2.c0)))) AND ((((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)))))) ISNULL));
SELECT DISTINCT t2.c0 FROM t2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((NULL)) BETWEEN (((~ (NULL)))) AND ((((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((NULL)) BETWEEN (((~ (NULL)))) AND ((((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((NULL)) BETWEEN (((~ (NULL)))) AND ((((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(MIN(MIN(MAX(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(MIN(MIN(MAX(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(MIN(MIN(MAX(vt0.c0))))) ISNULL);
SELECT * FROM t2 CROSS JOIN vt0 ON CASE WHEN ((t2.c0) ISNULL) THEN ((t2.c0)/(vt0.c0)) WHEN ((((vt0.c0)OR(t2.c0)))OR(0.3365767052671915)) THEN ((t2.c0)OR(0.5596000567584823)) WHEN ((vt0.c0) NOT BETWEEN (t2.c0) AND (t2.c0)) THEN vt0.c0 ELSE ((vt0.c0)|(t2.c0)) END;
SELECT ALL * FROM t2 CROSS JOIN vt0 ON CASE WHEN ((t2.c0) ISNULL) THEN ((t2.c0)/(vt0.c0)) WHEN ((((vt0.c0)OR(t2.c0)))OR(0.3365767052671915)) THEN ((t2.c0)OR(0.5596000567584823)) WHEN ((vt0.c0) NOT BETWEEN (t2.c0) AND (t2.c0)) THEN vt0.c0 ELSE ((vt0.c0)|(t2.c0)) END WHERE ((~ (vt0.c0))) UNION ALL SELECT * FROM t2 CROSS JOIN vt0 ON CASE WHEN ((t2.c0) ISNULL) THEN ((t2.c0)/(vt0.c0)) WHEN ((((vt0.c0)OR(t2.c0)))OR(0.3365767052671915)) THEN ((t2.c0)OR(0.5596000567584823)) WHEN ((vt0.c0) NOT BETWEEN (t2.c0) AND (t2.c0)) THEN vt0.c0 ELSE ((vt0.c0)|(t2.c0)) END WHERE ((NOT ((~ (vt0.c0))))) UNION ALL SELECT ALL * FROM t2 CROSS JOIN vt0 ON CASE WHEN ((t2.c0) ISNULL) THEN ((t2.c0)/(vt0.c0)) WHEN ((((vt0.c0)OR(t2.c0)))OR(0.3365767052671915)) THEN ((t2.c0)OR(0.5596000567584823)) WHEN ((vt0.c0) NOT BETWEEN (t2.c0) AND (t2.c0)) THEN vt0.c0 ELSE ((vt0.c0)|(t2.c0)) END WHERE ((((~ (vt0.c0))) ISNULL));
SELECT * FROM t2 CROSS JOIN vt0 ON CASE WHEN ((t2.c0) ISNULL) THEN ((t2.c0)/(vt0.c0)) WHEN ((((vt0.c0)OR(t2.c0)))OR(0.3365767052671915)) THEN ((t2.c0)OR(0.5596000567584823)) WHEN ((vt0.c0) NOT BETWEEN (t2.c0) AND (t2.c0)) THEN vt0.c0 ELSE ((vt0.c0)|(t2.c0)) END;
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE (((CAST(t2.c0 AS BLOB))IS(CASE WHEN t2.c0 THEN t2.c0 END))) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT (((CAST(t2.c0 AS BLOB))IS(CASE WHEN t2.c0 THEN t2.c0 END))))) UNION SELECT DISTINCT * FROM t2 WHERE (((((CAST(t2.c0 AS BLOB))IS(CASE WHEN t2.c0 THEN t2.c0 END))) ISNULL));
SELECT DISTINCT * FROM t2;
SELECT t2.c0, vt0.c0 FROM vt0, t2 GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM vt0, t2 WHERE (CASE ((NULL)IS(t2.c0))  WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN ()) END) GROUP BY t2.c0, vt0.c0 UNION SELECT t2.c0, vt0.c0 FROM vt0, t2 WHERE ((NOT (CASE ((NULL)IS(t2.c0))  WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN ()) END))) GROUP BY t2.c0, vt0.c0 UNION SELECT ALL t2.c0, vt0.c0 FROM vt0, t2 WHERE (((CASE ((NULL)IS(t2.c0))  WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN ()) END) ISNULL)) GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM vt0, t2 GROUP BY t2.c0, vt0.c0;
SELECT vt0.c0 FROM t2, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t2, vt0 GROUP BY vt0.c0 HAVING ((SUM(vt0.c0))>(MIN(x'bf0c'))) UNION ALL SELECT vt0.c0 FROM t2, vt0 GROUP BY vt0.c0 HAVING (NOT (((SUM(vt0.c0))>(MIN(x'bf0c'))))) UNION ALL SELECT ALL vt0.c0 FROM t2, vt0 GROUP BY vt0.c0 HAVING ((((SUM(vt0.c0))>(MIN(x'bf0c')))) ISNULL);
SELECT vt0.c0 FROM t2, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t2, vt0 GROUP BY vt0.c0 HAVING ((SUM(vt0.c0))>(MIN(x'bf0c'))) UNION ALL SELECT vt0.c0 FROM t2, vt0 GROUP BY vt0.c0 HAVING (NOT (((SUM(vt0.c0))>(MIN(x'bf0c'))))) UNION ALL SELECT ALL vt0.c0 FROM t2, vt0 GROUP BY vt0.c0 HAVING ((((SUM(vt0.c0))>(MIN(x'bf0c')))) ISNULL);
SELECT vt0.c0 FROM t2, vt0 GROUP BY vt0.c0;
SELECT ALL * FROM t2, vt0;
SELECT * FROM t2, vt0 WHERE (QUOTE(((vt0.c0) IS TRUE))) UNION ALL SELECT * FROM t2, vt0 WHERE ((NOT (QUOTE(((vt0.c0) IS TRUE))))) UNION ALL SELECT ALL * FROM t2, vt0 WHERE (((QUOTE(((vt0.c0) IS TRUE))) ISNULL));
SELECT ALL * FROM t2, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((NULLIF(vt0.c0, vt0.c0) IN ())) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((NULLIF(vt0.c0, vt0.c0) IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((NULLIF(vt0.c0, vt0.c0) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 WHERE ((+ (t2.c0)) COLLATE NOCASE) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT ((+ (t2.c0)) COLLATE NOCASE))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((((+ (t2.c0)) COLLATE NOCASE) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING MIN(((t2.c0)IS(TOTAL(vt0.c0)))) UNION ALL SELECT t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING (NOT (MIN(((t2.c0)IS(TOTAL(vt0.c0)))))) UNION ALL SELECT t2.c0, vt0.c0 FROM t2, vt0 NOT INDEXED GROUP BY t2.c0, vt0.c0 HAVING ((MIN(((t2.c0)IS(TOTAL(vt0.c0))))) ISNULL);
SELECT ALL * FROM t2;
SELECT * FROM t2 WHERE ((((t2.c0 IN (x'')))GLOB(CASE t2.c0  WHEN t2.c0 THEN t2.c0 END))) UNION ALL SELECT ALL * FROM t2 WHERE ((NOT ((((t2.c0 IN (x'')))GLOB(CASE t2.c0  WHEN t2.c0 THEN t2.c0 END))))) UNION ALL SELECT * FROM t2 WHERE ((((((t2.c0 IN (x'')))GLOB(CASE t2.c0  WHEN t2.c0 THEN t2.c0 END))) ISNULL));
SELECT ALL * FROM t2;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0))<=((vt0.c0)))) NOT BETWEEN ((- (vt0.c0))) AND (NULL))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0))<=((vt0.c0)))) NOT BETWEEN ((- (vt0.c0))) AND (NULL))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0))<=((vt0.c0)))) NOT BETWEEN ((- (vt0.c0))) AND (NULL))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE (CASE WHEN t2.c0 THEN ((((t2.c0)AND(t2.c0)))OR(t2.c0)) END) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((NOT (CASE WHEN t2.c0 THEN ((((t2.c0)AND(t2.c0)))OR(t2.c0)) END))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE (((CASE WHEN t2.c0 THEN ((((t2.c0)AND(t2.c0)))OR(t2.c0)) END) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((vt0.c0)<=(vt0.c0)))AND(MIN(vt0.c0))))OR(COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((((vt0.c0)<=(vt0.c0)))AND(MIN(vt0.c0))))OR(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((vt0.c0)<=(vt0.c0)))AND(MIN(vt0.c0))))OR(COUNT(*)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((vt0.c0)<=(vt0.c0)))AND(MIN(vt0.c0))))OR(COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((((vt0.c0)<=(vt0.c0)))AND(MIN(vt0.c0))))OR(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((vt0.c0)<=(vt0.c0)))AND(MIN(vt0.c0))))OR(COUNT(*)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 END IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((CASE WHEN vt0.c0 THEN vt0.c0 END IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 END IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST('Fl' AS REAL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST('Fl' AS REAL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST('Fl' AS REAL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING NULL UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING NULL UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t2.c0 FROM t2;
SELECT ALL t2.c0 FROM t2 WHERE ((+ (((t2.c0)<=(0.04572079389151773))))) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE ((NOT ((+ (((t2.c0)<=(0.04572079389151773))))))) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE ((((+ (((t2.c0)<=(0.04572079389151773))))) ISNULL));
SELECT ALL t2.c0 FROM t2;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)LIKE(vt0.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)LIKE(vt0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0))=((vt0.c0))) COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0))=((vt0.c0))) COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0))==((vt0.c0))) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING COUNT(CASE WHEN TOTAL(TOTAL(MIN(COUNT(t2.c0)))) THEN t2.c0 ELSE t2.c0 END) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (COUNT(CASE WHEN TOTAL(TOTAL(MIN(COUNT(t2.c0)))) THEN t2.c0 ELSE t2.c0 END))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((COUNT(CASE WHEN TOTAL(TOTAL(MIN(COUNT(t2.c0)))) THEN t2.c0 ELSE t2.c0 END)) ISNULL);
SELECT TOTAL(((566794618) NOT BETWEEN (vt0.c0) AND (((vt0.c0)IS(vt0.c0))))) FROM vt0 ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(0.5534237297617491)))OR(CAST(vt0.c0 AS TEXT)));
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (0.4126123855317081) AND (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (0.4126123855317081) AND (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (0.4126123855317081) AND (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE (CASE t2.c0 COLLATE RTRIM  WHEN ((x'775699c5')>=(t2.c0)) THEN CASE WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END WHEN CAST(t2.c0 AS BLOB) THEN t2.c0 WHEN CASE t2.c0  WHEN t2.c0 THEN t2.c0 END THEN t2.c0 ELSE (((t2.c0))<((t2.c0))) END) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT (CASE t2.c0 COLLATE RTRIM  WHEN ((x'775699c5')>=(t2.c0)) THEN CASE WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END WHEN CAST(t2.c0 AS BLOB) THEN t2.c0 WHEN CASE t2.c0  WHEN t2.c0 THEN t2.c0 END THEN t2.c0 ELSE (((t2.c0))<((t2.c0))) END))) UNION SELECT DISTINCT * FROM t2 WHERE (((CASE t2.c0 COLLATE RTRIM  WHEN ((x'775699c5')>=(t2.c0)) THEN CASE WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END WHEN CAST(t2.c0 AS BLOB) THEN t2.c0 WHEN CASE t2.c0  WHEN t2.c0 THEN t2.c0 END THEN t2.c0 ELSE (((t2.c0))<((t2.c0))) END) ISNULL));
SELECT DISTINCT * FROM t2;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 WHERE (CAST(((t2.c0) NOT NULL) AS REAL)) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT (CAST(((t2.c0) NOT NULL) AS REAL)))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE (((CAST(((t2.c0) NOT NULL) AS REAL)) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(SUM(GROUP_CONCAT(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(SUM(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(SUM(GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT ALL t2.c0 FROM t2;
SELECT ALL t2.c0 FROM t2 WHERE ((~ (CAST(t2.c0 AS TEXT)))) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE ((NOT ((~ (CAST(t2.c0 AS TEXT)))))) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE ((((~ (CAST(t2.c0 AS TEXT)))) ISNULL));
SELECT ALL t2.c0 FROM t2;
SELECT DISTINCT * FROM t2, vt0;
SELECT DISTINCT * FROM t2, vt0 WHERE (t2.c0) UNION SELECT DISTINCT * FROM t2, vt0 WHERE ((NOT (t2.c0))) UNION SELECT DISTINCT * FROM t2, vt0 WHERE (((t2.c0) ISNULL));
SELECT DISTINCT * FROM t2, vt0;
SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM vt0, t2 WHERE (((((((t2.c0))<=((vt0.c0))), CAST(vt0.c0 AS INTEGER), ((t2.c0) NOT BETWEEN (t2.c0) AND (vt0.c0)), ((((t2.c0)AND(vt0.c0)))OR(t2.c0)), ((t2.c0) ISNULL)))>((vt0.c0, '-2056428690', ((vt0.c0)*(NULL)), vt0.c0, CAST(t2.c0 AS NUMERIC))))) GROUP BY vt0.c0, t2.c0 UNION SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 WHERE ((NOT (((((((t2.c0))<=((vt0.c0))), CAST(vt0.c0 AS INTEGER), ((t2.c0) NOT BETWEEN (t2.c0) AND (vt0.c0)), ((((t2.c0)AND(vt0.c0)))OR(t2.c0)), ((t2.c0) ISNULL)))>((vt0.c0, '-2056428690', ((vt0.c0)*(NULL)), vt0.c0, CAST(t2.c0 AS NUMERIC))))))) GROUP BY vt0.c0, t2.c0 UNION SELECT vt0.c0, t2.c0 FROM vt0, t2 WHERE (((((((((t2.c0))<=((vt0.c0))), CAST(vt0.c0 AS INTEGER), ((t2.c0) NOT BETWEEN (t2.c0) AND (vt0.c0)), ((((t2.c0)AND(vt0.c0)))OR(t2.c0)), ((t2.c0) ISNULL)))>((vt0.c0, '-2056428690', ((vt0.c0)*(NULL)), vt0.c0, CAST(t2.c0 AS NUMERIC))))) ISNULL)) GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM t2 NATURAL JOIN vt0 GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM t2 NATURAL JOIN vt0 GROUP BY vt0.c0, t2.c0 HAVING (((AVG(TOTAL(SUM(t2.c0)))) NOT BETWEEN (COUNT(COUNT(SUM(TOTAL(t2.c0))))) AND (t2.c0)) IN (TOTAL(SUM(MIN(t2.c0))), COUNT(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM t2 NATURAL JOIN vt0 GROUP BY vt0.c0, t2.c0 HAVING (NOT ((((AVG(TOTAL(SUM(t2.c0)))) NOT BETWEEN (COUNT(COUNT(SUM(TOTAL(t2.c0))))) AND (t2.c0)) IN (TOTAL(SUM(MIN(t2.c0))), COUNT(COUNT(*)))))) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM t2 NATURAL JOIN vt0 GROUP BY vt0.c0, t2.c0 HAVING (((((AVG(TOTAL(SUM(t2.c0)))) NOT BETWEEN (COUNT(COUNT(SUM(TOTAL(t2.c0))))) AND (t2.c0)) IN (TOTAL(SUM(MIN(t2.c0))), COUNT(COUNT(*))))) ISNULL);
SELECT t2.c0 FROM t2;
SELECT ALL t2.c0 FROM t2 WHERE (((((t2.c0)<=(x''))) BETWEEN (((t2.c0)LIKE(t2.c0))) AND (((t2.c0) IS FALSE)))) UNION ALL SELECT t2.c0 FROM t2 WHERE ((NOT (((((t2.c0)<=(x''))) BETWEEN (((t2.c0)LIKE(t2.c0))) AND (((t2.c0) IS FALSE)))))) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE (((((((t2.c0)<=(x''))) BETWEEN (((t2.c0)LIKE(t2.c0))) AND (((t2.c0) IS FALSE)))) ISNULL));
SELECT t2.c0 FROM t2;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND('Pssl+5>F3')))AND(vt0.c0)))) AND ((vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND('Pssl+5>F3')))AND(vt0.c0)))) AND ((vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE ((((((vt0.c0)) BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND('Pssl+5>F3')))AND(vt0.c0)))) AND ((vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t2 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN ((t2.c0 IN (vt0.c0))) AND (CAST(vt0.c0 AS REAL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t2 WHERE ((NOT (((vt0.c0 COLLATE RTRIM) BETWEEN ((t2.c0 IN (vt0.c0))) AND (CAST(vt0.c0 AS REAL)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t2 WHERE (((((vt0.c0 COLLATE RTRIM) BETWEEN ((t2.c0 IN (vt0.c0))) AND (CAST(vt0.c0 AS REAL)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING TOTAL((NOT (t2.c0))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (TOTAL((NOT (t2.c0))))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((TOTAL((NOT (t2.c0)))) ISNULL);
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING TOTAL((NOT (t2.c0))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (TOTAL((NOT (t2.c0))))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((TOTAL((NOT (t2.c0)))) ISNULL);
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((IFNULL(vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (((vt0.c0)<=(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((IFNULL(vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (((vt0.c0)<=(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((IFNULL(vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (((vt0.c0)<=(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c0 THEN ((vt0.c0)<=(vt0.c0)) END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c0 THEN ((vt0.c0)<=(vt0.c0)) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c0 THEN ((vt0.c0)<=(vt0.c0)) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t2 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t2 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t2 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t2, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t2, vt0 GROUP BY vt0.c0 HAVING ((((COUNT(MAX(t2.c0)))OR(vt0.c0)))OR(0.6779634125294922)) UNION ALL SELECT vt0.c0 FROM t2, vt0 GROUP BY vt0.c0 HAVING (NOT (((((COUNT(MAX(t2.c0)))OR(vt0.c0)))OR(0.6779634125294922)))) UNION ALL SELECT ALL vt0.c0 FROM t2, vt0 GROUP BY vt0.c0 HAVING ((((((COUNT(MAX(t2.c0)))OR(vt0.c0)))OR(0.6779634125294922))) ISNULL);
SELECT * FROM t2;
SELECT * FROM t2 WHERE (((((((t2.c0)OR(t2.c0)))OR(CASE WHEN t2.c0 THEN 3.9138214E8 ELSE t2.c0 END)))AND(((t2.c0) IS TRUE)))) UNION ALL SELECT ALL * FROM t2 WHERE ((NOT (((((((t2.c0)OR(t2.c0)))OR(CASE WHEN t2.c0 THEN 3.9138214E8 ELSE t2.c0 END)))AND(((t2.c0) IS TRUE)))))) UNION ALL SELECT * FROM t2 WHERE (((((((((t2.c0)OR(t2.c0)))OR(CASE WHEN t2.c0 THEN 3.9138214E8 ELSE t2.c0 END)))AND(((t2.c0) IS TRUE)))) ISNULL));
SELECT * FROM t2;
SELECT DISTINCT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2 WHERE (((CAST(t2.c0 AS INTEGER)) IS TRUE)) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((NOT (((CAST(t2.c0 AS INTEGER)) IS TRUE)))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE (((((CAST(t2.c0 AS INTEGER)) IS TRUE)) ISNULL));
SELECT DISTINCT t2.c0 FROM t2;
SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t2 WHERE (CASE WHEN CASE vt0.c0  WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END THEN (((0.0622851524372543)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t2 WHERE ((NOT (CASE WHEN CASE vt0.c0  WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END THEN (((0.0622851524372543)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t2 WHERE (((CASE WHEN CASE vt0.c0  WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END THEN (((0.0622851524372543)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG((~ (COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG((~ (COUNT(*)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG((~ (COUNT(*))))) ISNULL);
SELECT MIN(((((vt0.c0) IS FALSE)) ISNULL)) FROM vt0, t2;
SELECT ALL * FROM t2;
SELECT * FROM t2 WHERE (CAST(((((t2.c0)OR(t2.c0)))OR(t2.c0)) AS NUMERIC)) UNION ALL SELECT * FROM t2 WHERE ((NOT (CAST(((((t2.c0)OR(t2.c0)))OR(t2.c0)) AS NUMERIC)))) UNION ALL SELECT * FROM t2 WHERE (((CAST(((((t2.c0)OR(t2.c0)))OR(t2.c0)) AS NUMERIC)) ISNULL));
SELECT ALL * FROM t2;
SELECT DISTINCT t2.c0 FROM t2 INNER JOIN vt0 ON CASE WHEN vt0.c0 THEN 0.020507470347255974 COLLATE NOCASE END;
SELECT DISTINCT t2.c0 FROM t2 INNER JOIN vt0 ON CASE WHEN vt0.c0 THEN 0.020507470347255974 COLLATE NOCASE END WHERE ((- (CASE WHEN t2.c0 THEN vt0.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE vt0.c0 END))) UNION SELECT DISTINCT t2.c0 FROM t2 INNER JOIN vt0 ON CASE WHEN vt0.c0 THEN 0.020507470347255974 COLLATE NOCASE END WHERE ((NOT ((- (CASE WHEN t2.c0 THEN vt0.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE vt0.c0 END))))) UNION SELECT DISTINCT t2.c0 FROM t2 INNER JOIN vt0 ON CASE WHEN vt0.c0 THEN 0.020507470347255974 COLLATE NOCASE END WHERE ((((- (CASE WHEN t2.c0 THEN vt0.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT t2.c0 FROM t2 INNER JOIN vt0 ON CASE WHEN vt0.c0 THEN 0.020507470347255974 COLLATE NOCASE END;
SELECT vt0.c0 FROM t2 RIGHT OUTER JOIN vt0 ON CAST((vt0.c0 IN (t2.c0, vt0.c0)) AS TEXT) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t2 RIGHT OUTER JOIN vt0 ON CAST((vt0.c0 IN (t2.c0, vt0.c0)) AS TEXT) WHERE (CAST(vt0.c0 AS INTEGER) COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t2 RIGHT OUTER JOIN vt0 ON CAST((vt0.c0 IN (t2.c0, vt0.c0)) AS TEXT) WHERE ((NOT (CAST(vt0.c0 AS INTEGER) COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t2 RIGHT OUTER JOIN vt0 ON CAST((vt0.c0 IN (t2.c0, vt0.c0)) AS TEXT) WHERE (((CAST(vt0.c0 AS INTEGER) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM t2 RIGHT OUTER JOIN vt0 ON CAST((vt0.c0 IN (t2.c0, vt0.c0)) AS TEXT) GROUP BY vt0.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING NULL UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (NULL)) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((NULL) ISNULL);
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING NULL UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (NULL)) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((NULL) ISNULL);
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT * FROM t2;
SELECT * FROM t2 WHERE (((NULL)||(((t2.c0) IS FALSE)))) UNION ALL SELECT ALL * FROM t2 WHERE ((NOT (((NULL)||(((t2.c0) IS FALSE)))))) UNION ALL SELECT ALL * FROM t2 WHERE (((((NULL)||(((t2.c0) IS FALSE)))) ISNULL));
SELECT * FROM t2;
SELECT DISTINCT t2.c0, vt0.c0 FROM vt0, t2;
SELECT DISTINCT t2.c0, vt0.c0 FROM vt0, t2 WHERE (((((x'')||(x''))) ISNULL)) UNION SELECT DISTINCT t2.c0, vt0.c0 FROM vt0, t2 WHERE ((NOT (((((x'')||(x''))) ISNULL)))) UNION SELECT DISTINCT t2.c0, vt0.c0 FROM vt0, t2 WHERE (((((((x'')||(x''))) ISNULL)) ISNULL));
SELECT DISTINCT t2.c0, vt0.c0 FROM vt0, t2;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 WHERE (((LAST_INSERT_ROWID()) IS TRUE)) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT (((LAST_INSERT_ROWID()) IS TRUE)))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE (((((LAST_INSERT_ROWID()) IS TRUE)) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING '-702294360' UNION ALL SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING (NOT ('-702294360')) UNION ALL SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING (('-702294360') ISNULL);
SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING '-702294360' UNION ALL SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING (NOT ('-702294360')) UNION ALL SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING (('-702294360') ISNULL);
SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT ALL * FROM vt0 CROSS JOIN t2 ON -374373338;
SELECT ALL * FROM vt0 CROSS JOIN t2 ON -374373338 WHERE ((NOT (((((vt0.c0)AND(t2.c0)))OR(t2.c0))))) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN t2 ON -374373338 WHERE ((NOT ((NOT (((((vt0.c0)AND(t2.c0)))OR(t2.c0))))))) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN t2 ON -374373338 WHERE ((((NOT (((((vt0.c0)AND(t2.c0)))OR(t2.c0))))) ISNULL));
SELECT ALL * FROM vt0 CROSS JOIN t2 ON -374373338;
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE ((((((t2.c0))>((x''))))&(((t2.c0) BETWEEN (t2.c0) AND (t2.c0))))) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT ((((((t2.c0))>((x''))))&(((t2.c0) BETWEEN (t2.c0) AND (t2.c0))))))) UNION SELECT DISTINCT * FROM t2 WHERE ((((((((t2.c0))>((x''))))&(((t2.c0) BETWEEN (t2.c0) AND (t2.c0))))) ISNULL));
SELECT DISTINCT * FROM t2;
SELECT vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 WHERE (CASE CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END  WHEN CAST(t2.c0 AS TEXT) THEN (((t2.c0, 0.9248561819286717, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, t2.c0)) AND (('Fl', vt0.c0, vt0.c0))) END) GROUP BY vt0.c0, t2.c0 UNION SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 WHERE ((NOT (CASE CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END  WHEN CAST(t2.c0 AS TEXT) THEN (((t2.c0, 0.9248561819286717, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, t2.c0)) AND (('Fl', vt0.c0, vt0.c0))) END))) GROUP BY vt0.c0, t2.c0 UNION SELECT vt0.c0, t2.c0 FROM t2, vt0 WHERE (((CASE CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END  WHEN CAST(t2.c0 AS TEXT) THEN (((t2.c0, 0.9248561819286717, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, t2.c0)) AND (('Fl', vt0.c0, vt0.c0))) END) ISNULL)) GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0;
SELECT t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING CAST((((vt0.c0)) NOT BETWEEN ((t2.c0)) AND ((vt0.c0))) AS REAL) UNION ALL SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING (NOT (CAST((((vt0.c0)) NOT BETWEEN ((t2.c0)) AND ((vt0.c0))) AS REAL))) UNION ALL SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING ((CAST((((vt0.c0)) NOT BETWEEN ((t2.c0)) AND ((vt0.c0))) AS REAL)) ISNULL);
SELECT t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING CAST((((vt0.c0)) NOT BETWEEN ((t2.c0)) AND ((vt0.c0))) AS REAL) UNION ALL SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING (NOT (CAST((((vt0.c0)) NOT BETWEEN ((t2.c0)) AND ((vt0.c0))) AS REAL))) UNION ALL SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING ((CAST((((vt0.c0)) NOT BETWEEN ((t2.c0)) AND ((vt0.c0))) AS REAL)) ISNULL);
SELECT t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0;
SELECT t2.c0 FROM t2 CROSS JOIN vt0 ON CAST(((vt0.c0)!=(t2.c0)) AS REAL);
SELECT t2.c0 FROM t2 CROSS JOIN vt0 ON CAST(((vt0.c0)!=(t2.c0)) AS REAL) WHERE (CAST(((vt0.c0)<>(t2.c0)) AS REAL)) UNION ALL SELECT ALL t2.c0 FROM t2 CROSS JOIN vt0 ON CAST(((vt0.c0)<>(t2.c0)) AS REAL) WHERE ((NOT (CAST(((vt0.c0)<>(t2.c0)) AS REAL)))) UNION ALL SELECT ALL t2.c0 FROM t2 CROSS JOIN vt0 ON CAST(((vt0.c0)!=(t2.c0)) AS REAL) WHERE (((CAST(((vt0.c0)<>(t2.c0)) AS REAL)) ISNULL));
SELECT t2.c0 FROM t2 CROSS JOIN vt0 ON CAST(((vt0.c0)!=(t2.c0)) AS REAL);
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0 COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ()))+(((vt0.c0) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN ()))+(((vt0.c0) NOTNULL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN ()))+(((vt0.c0) NOTNULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0 HAVING CASE WHEN GROUP_CONCAT(vt0.c0) THEN MIN(vt0.c0) ELSE AVG(vt0.c0) END UNION ALL SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0 HAVING (NOT (CASE WHEN GROUP_CONCAT(vt0.c0) THEN MIN(vt0.c0) ELSE AVG(vt0.c0) END)) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0 HAVING ((CASE WHEN GROUP_CONCAT(vt0.c0) THEN MIN(vt0.c0) ELSE AVG(vt0.c0) END) ISNULL);
SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0 HAVING CASE WHEN GROUP_CONCAT(vt0.c0) THEN MIN(vt0.c0) ELSE AVG(vt0.c0) END UNION ALL SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0 HAVING (NOT (CASE WHEN GROUP_CONCAT(vt0.c0) THEN MIN(vt0.c0) ELSE AVG(vt0.c0) END)) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0 HAVING ((CASE WHEN GROUP_CONCAT(vt0.c0) THEN MIN(vt0.c0) ELSE AVG(vt0.c0) END) ISNULL);
SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0;
SELECT t2.c0 FROM t2;
SELECT ALL t2.c0 FROM t2 WHERE (CAST(((((t2.c0)AND(t2.c0)))AND(t2.c0)) AS NUMERIC)) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE ((NOT (CAST(((((t2.c0)AND(t2.c0)))AND(t2.c0)) AS NUMERIC)))) UNION ALL SELECT t2.c0 FROM t2 WHERE (((CAST(((((t2.c0)AND(t2.c0)))AND(t2.c0)) AS NUMERIC)) ISNULL));
SELECT t2.c0 FROM t2;
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE (((((((((((((t2.c0)OR(1897383008)))AND(t2.c0)))OR(((t2.c0) ISNULL))))AND(TYPEOF(DISTINCT t2.c0))))AND(t2.c0)))OR(x''))) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT (((((((((((((t2.c0)OR(1897383008)))AND(t2.c0)))OR(((t2.c0) ISNULL))))AND(TYPEOF(DISTINCT t2.c0))))AND(t2.c0)))OR(x''))))) UNION SELECT DISTINCT * FROM t2 WHERE (((((((((((((((t2.c0)OR(1897383008)))AND(t2.c0)))OR(((t2.c0) ISNULL))))AND(TYPEOF(DISTINCT t2.c0))))AND(t2.c0)))OR(x''))) ISNULL));
SELECT DISTINCT * FROM t2;
SELECT t2.c0 FROM t2 NATURAL JOIN vt0 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 NATURAL JOIN vt0 WHERE (((((((((((t2.c0)AND(t2.c0)))AND(t2.c0)))OR(vt0.c0)))AND(t2.c0)))IS(((vt0.c0) NOTNULL)))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 NATURAL JOIN vt0 WHERE ((NOT (((((((((((t2.c0)AND(t2.c0)))AND(t2.c0)))OR(vt0.c0)))AND(t2.c0)))IS(((vt0.c0) NOTNULL)))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 NATURAL JOIN vt0 WHERE (((((((((((((t2.c0)AND(t2.c0)))AND(t2.c0)))OR(vt0.c0)))AND(t2.c0)))IS(((vt0.c0) NOTNULL)))) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 NATURAL JOIN vt0 GROUP BY t2.c0;
SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING MIN(TOTAL(t2.c0)) UNION ALL SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING (NOT (MIN(TOTAL(t2.c0)))) UNION ALL SELECT ALL t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING ((MIN(TOTAL(t2.c0))) ISNULL);
SELECT t2.c0 FROM vt0, t2;
SELECT ALL t2.c0 FROM vt0, t2 WHERE (CAST((~ (t2.c0)) AS NUMERIC)) UNION ALL SELECT ALL t2.c0 FROM vt0, t2 WHERE ((NOT (CAST((~ (t2.c0)) AS NUMERIC)))) UNION ALL SELECT ALL t2.c0 FROM vt0, t2 WHERE (((CAST((~ (t2.c0)) AS NUMERIC)) ISNULL));
SELECT t2.c0 FROM vt0, t2;
SELECT DISTINCT vt0.c0 FROM t2 LEFT OUTER JOIN vt0 ON '1503812784';
SELECT DISTINCT vt0.c0 FROM t2 LEFT OUTER JOIN vt0 ON '1503812784' WHERE (((NULL)>=((('-749519505')LIKE(t2.c0))))) UNION SELECT DISTINCT vt0.c0 FROM t2 LEFT OUTER JOIN vt0 ON '1503812784' WHERE ((NOT (((NULL)>=((('-749519505')LIKE(t2.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM t2 LEFT OUTER JOIN vt0 ON '1503812784' WHERE (((((NULL)>=((('-749519505')LIKE(t2.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM t2 LEFT OUTER JOIN vt0 ON '1503812784';
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 WHERE ((NOT ('445396739' COLLATE BINARY))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT ((NOT ('445396739' COLLATE BINARY))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((((NOT ('445396739' COLLATE BINARY))) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((((MIN(t2.c0))>=(t2.c0)))<=(COUNT(COUNT(*)))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (((((MIN(t2.c0))>=(t2.c0)))<=(COUNT(COUNT(*)))))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((((((MIN(t2.c0))>=(t2.c0)))<=(COUNT(COUNT(*))))) ISNULL);
SELECT SUM(LOWER(CAST(vt0.c0 AS REAL))) FROM vt0;
SELECT * FROM t2, vt0;
SELECT ALL * FROM t2, vt0 WHERE (0.5327752348604238) UNION ALL SELECT * FROM t2, vt0 WHERE ((NOT (0.5327752348604238))) UNION ALL SELECT ALL * FROM t2, vt0 WHERE (((0.5327752348604238) ISNULL));
SELECT * FROM t2, vt0;
SELECT DISTINCT vt0.c0, t2.c0 FROM t2, vt0;
SELECT DISTINCT vt0.c0, t2.c0 FROM t2, vt0 WHERE (LOWER((((vt0.c0)) BETWEEN (('V}⨡Q㵯>')) AND ((t2.c0))))) UNION SELECT DISTINCT vt0.c0, t2.c0 FROM t2, vt0 WHERE ((NOT (LOWER((((vt0.c0)) BETWEEN (('V}⨡Q㵯>')) AND ((t2.c0))))))) UNION SELECT DISTINCT vt0.c0, t2.c0 FROM t2, vt0 WHERE (((LOWER((((vt0.c0)) BETWEEN (('V}⨡Q㵯>')) AND ((t2.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, t2.c0 FROM t2, vt0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE ((((((((((t2.c0 IN (t2.c0, t2.c0, t2.c0)))OR((- (t2.c0)))))AND(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)))))OR(((t2.c0) IS FALSE))))AND(CAST(t2.c0 AS BLOB)))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((NOT ((((((((((t2.c0 IN (t2.c0, t2.c0, t2.c0)))OR((- (t2.c0)))))AND(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)))))OR(((t2.c0) IS FALSE))))AND(CAST(t2.c0 AS BLOB)))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((((((((((((t2.c0 IN (t2.c0, t2.c0, t2.c0)))OR((- (t2.c0)))))AND(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)))))OR(((t2.c0) IS FALSE))))AND(CAST(t2.c0 AS BLOB)))) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT vt0.c0, t2.c0 FROM t2 FULL OUTER JOIN vt0 ON CAST((- (vt0.c0)) AS INTEGER) GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM t2 FULL OUTER JOIN vt0 ON CAST((- (vt0.c0)) AS INTEGER) GROUP BY vt0.c0, t2.c0 HAVING ((TOTAL(TOTAL(t2.c0))) IS FALSE) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM t2 FULL OUTER JOIN vt0 ON CAST((- (vt0.c0)) AS INTEGER) GROUP BY vt0.c0, t2.c0 HAVING (NOT (((TOTAL(TOTAL(t2.c0))) IS FALSE))) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM t2 FULL OUTER JOIN vt0 ON CAST((- (vt0.c0)) AS INTEGER) GROUP BY vt0.c0, t2.c0 HAVING ((((TOTAL(TOTAL(t2.c0))) IS FALSE)) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 IN ()) COLLATE RTRIM))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ()) COLLATE RTRIM) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2 WHERE (LOWER(((t2.c0)==(t2.c0)))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((NOT (LOWER(((t2.c0)==(t2.c0)))))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE (((LOWER(((t2.c0)=(t2.c0)))) ISNULL));
SELECT DISTINCT t2.c0 FROM t2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND (((~ (vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND (((~ (vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND (((~ (vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING COUNT(*) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING COUNT(*) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL TOTAL(((((t2.c0) IS FALSE)) ISNULL)) FROM t2;
SELECT t2.c0 FROM t2;
SELECT t2.c0 FROM t2 WHERE (x'') UNION ALL SELECT t2.c0 FROM t2 WHERE ((NOT (x''))) UNION ALL SELECT t2.c0 FROM t2 WHERE (((x'') ISNULL));
SELECT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2 WHERE (((json_array_length(t2.c0, t2.c0)) NOTNULL)) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((NOT (((json_array_length(t2.c0, t2.c0)) NOTNULL)))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE (((((json_array_length(t2.c0, t2.c0)) NOTNULL)) ISNULL));
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE (t2.c0) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((NOT (t2.c0))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE (((t2.c0) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0, vt0.c0 FROM vt0, t2 GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM vt0, t2 GROUP BY t2.c0, vt0.c0 HAVING (TOTAL(AVG(MIN(t2.c0))) IN (((TOTAL(t2.c0))OR(COUNT(*))))) UNION ALL SELECT t2.c0, vt0.c0 FROM vt0, t2 GROUP BY t2.c0, vt0.c0 HAVING (NOT ((TOTAL(AVG(MIN(t2.c0))) IN (((TOTAL(t2.c0))OR(COUNT(*))))))) UNION ALL SELECT ALL t2.c0, vt0.c0 FROM vt0, t2 GROUP BY t2.c0, vt0.c0 HAVING (((TOTAL(AVG(MIN(t2.c0))) IN (((TOTAL(t2.c0))OR(COUNT(*)))))) ISNULL);
SELECT * FROM vt0, t2;
SELECT ALL * FROM vt0, t2 WHERE ((~ (t2.c0)) COLLATE RTRIM) UNION ALL SELECT * FROM vt0, t2 WHERE ((NOT ((~ (t2.c0)) COLLATE RTRIM))) UNION ALL SELECT * FROM vt0, t2 WHERE ((((~ (t2.c0)) COLLATE RTRIM) ISNULL));
SELECT * FROM vt0, t2;
SELECT DISTINCT vt0.c0 FROM vt0, t2;
SELECT DISTINCT vt0.c0 FROM vt0, t2 WHERE (t2.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0, t2 WHERE ((NOT (t2.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t2 WHERE (((t2.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, t2;
SELECT ALL vt0.c0 FROM t2, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t2, vt0 WHERE (CASE CASE WHEN t2.c0 THEN t2.c0 ELSE vt0.c0 END  WHEN ((t2.c0)!=(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t2.c0) AND ('')) ELSE (vt0.c0 IN ()) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t2, vt0 WHERE ((NOT (CASE CASE WHEN t2.c0 THEN t2.c0 ELSE vt0.c0 END  WHEN ((t2.c0)<>(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t2.c0) AND ('')) ELSE (vt0.c0 IN ()) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t2, vt0 WHERE (((CASE CASE WHEN t2.c0 THEN t2.c0 ELSE vt0.c0 END  WHEN ((t2.c0)!=(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t2.c0) AND ('')) ELSE (vt0.c0 IN ()) END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t2, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0 HAVING MIN(((((COUNT(vt0.c0))OR(vt0.c0)))AND(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0 HAVING (NOT (MIN(((((COUNT(vt0.c0))OR(vt0.c0)))AND(COUNT(*)))))) UNION ALL SELECT vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0 HAVING ((MIN(((((COUNT(vt0.c0))OR(vt0.c0)))AND(COUNT(*))))) ISNULL);
SELECT ALL MAX((((((((((vt0.c0)OR(vt0.c0)))AND(x'')))OR(vt0.c0)))OR(vt0.c0)) IN ())) FROM vt0 ORDER BY ((vt0.c0 IN ()) IN ())  NULLS LAST, ((CAST('-1614900575' AS INTEGER)) IS TRUE)  NULLS FIRST, ((NULL) NOT BETWEEN (vt0.c0) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) DESC;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))) AND ((vt0.c0 IN (vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))) AND ((vt0.c0 IN (vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))) AND ((vt0.c0 IN (vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT t2.c0, vt0.c0 FROM vt0, t2;
SELECT DISTINCT t2.c0, vt0.c0 FROM vt0, t2 WHERE (((t2.c0 COLLATE BINARY)=((t2.c0 IN (vt0.c0, vt0.c0))))) UNION SELECT DISTINCT t2.c0, vt0.c0 FROM vt0, t2 WHERE ((NOT (((t2.c0 COLLATE BINARY)==((t2.c0 IN (vt0.c0, vt0.c0))))))) UNION SELECT DISTINCT t2.c0, vt0.c0 FROM vt0, t2 WHERE (((((t2.c0 COLLATE BINARY)==((t2.c0 IN (vt0.c0, vt0.c0))))) ISNULL));
SELECT DISTINCT t2.c0, vt0.c0 FROM vt0, t2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((NULL IN (((vt0.c0) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((NULL IN (((vt0.c0) NOTNULL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((NULL IN (((vt0.c0) NOTNULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0;
SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING SUM(MAX(vt0.c0)) UNION ALL SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING (NOT (SUM(MAX(vt0.c0)))) UNION ALL SELECT ALL t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING ((SUM(MAX(vt0.c0))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CAST(NULL AS INTEGER)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST(NULL AS INTEGER)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(NULL AS INTEGER)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE ((- (CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END))) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT ((- (CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END))))) UNION SELECT DISTINCT * FROM t2 WHERE ((((- (CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END))) ISNULL));
SELECT DISTINCT * FROM t2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) NOT NULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((NOT (((vt0.c0) NOT NULL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((NOT (((vt0.c0) NOT NULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(vt0.c0))>>(MIN(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(vt0.c0))>>(MIN(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(vt0.c0))>>(MIN(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(vt0.c0))>>(MIN(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(vt0.c0))>>(MIN(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(vt0.c0))>>(MIN(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t2.c0 FROM t2;
SELECT t2.c0 FROM t2 WHERE (((x'') NOT BETWEEN (((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))) AND (CASE NULL  WHEN t2.c0 THEN t2.c0 END))) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE ((NOT (((x'') NOT BETWEEN (((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))) AND (CASE NULL  WHEN t2.c0 THEN t2.c0 END))))) UNION ALL SELECT t2.c0 FROM t2 WHERE (((((x'') NOT BETWEEN (((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))) AND (CASE NULL  WHEN t2.c0 THEN t2.c0 END))) ISNULL));
SELECT ALL t2.c0 FROM t2;
SELECT DISTINCT t2.c0, vt0.c0 FROM t2, vt0;
SELECT DISTINCT t2.c0, vt0.c0 FROM t2, vt0 WHERE ((+ (CASE WHEN t2.c0 THEN 0.5598731708809471 ELSE vt0.c0 END))) UNION SELECT DISTINCT t2.c0, vt0.c0 FROM t2, vt0 WHERE ((NOT ((+ (CASE WHEN t2.c0 THEN 0.5598731708809471 ELSE vt0.c0 END))))) UNION SELECT DISTINCT t2.c0, vt0.c0 FROM t2, vt0 WHERE ((((+ (CASE WHEN t2.c0 THEN 0.5598731708809471 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT t2.c0, vt0.c0 FROM t2, vt0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 WHERE (((t2.c0)>(t2.c0)) COLLATE BINARY) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((NOT (((t2.c0)>(t2.c0)) COLLATE BINARY))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE (((((t2.c0)>(t2.c0)) COLLATE BINARY) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT vt0.c0, t2.c0 FROM vt0 LEFT OUTER JOIN t2 ON CASE WHEN CASE WHEN t2.c0 THEN t2.c0 END THEN CAST(vt0.c0 AS NUMERIC) WHEN (vt0.c0 IN (vt0.c0)) THEN (~ (t2.c0)) WHEN CAST(t2.c0 AS BLOB) THEN (t2.c0 IN ()) END;
SELECT vt0.c0, t2.c0 FROM vt0 LEFT OUTER JOIN t2 ON CASE WHEN CASE WHEN t2.c0 THEN t2.c0 END THEN CAST(vt0.c0 AS NUMERIC) WHEN (vt0.c0 IN (vt0.c0)) THEN (~ (t2.c0)) WHEN CAST(t2.c0 AS BLOB) THEN (t2.c0 IN ()) END WHERE (((t2.c0) BETWEEN ((((t2.c0)) BETWEEN ((t2.c0)) AND ((t2.c0)))) AND (CASE vt0.c0  WHEN '-1434380388' THEN t2.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN t2.c0 ELSE vt0.c0 END))) UNION ALL SELECT vt0.c0, t2.c0 FROM vt0 LEFT OUTER JOIN t2 ON CASE WHEN CASE WHEN t2.c0 THEN t2.c0 END THEN CAST(vt0.c0 AS NUMERIC) WHEN (vt0.c0 IN (vt0.c0)) THEN (~ (t2.c0)) WHEN CAST(t2.c0 AS BLOB) THEN (t2.c0 IN ()) END WHERE ((NOT (((t2.c0) BETWEEN ((((t2.c0)) BETWEEN ((t2.c0)) AND ((t2.c0)))) AND (CASE vt0.c0  WHEN '-1434380388' THEN t2.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN t2.c0 ELSE vt0.c0 END))))) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM vt0 LEFT OUTER JOIN t2 ON CASE WHEN CASE WHEN t2.c0 THEN t2.c0 END THEN CAST(vt0.c0 AS NUMERIC) WHEN (vt0.c0 IN (vt0.c0)) THEN (~ (t2.c0)) WHEN CAST(t2.c0 AS BLOB) THEN (t2.c0 IN ()) END WHERE (((((t2.c0) BETWEEN ((((t2.c0)) BETWEEN ((t2.c0)) AND ((t2.c0)))) AND (CASE vt0.c0  WHEN '-1434380388' THEN t2.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN t2.c0 ELSE vt0.c0 END))) ISNULL));
SELECT vt0.c0, t2.c0 FROM vt0 LEFT OUTER JOIN t2 ON CASE WHEN CASE WHEN t2.c0 THEN t2.c0 END THEN CAST(vt0.c0 AS NUMERIC) WHEN (vt0.c0 IN (vt0.c0)) THEN (~ (t2.c0)) WHEN CAST(t2.c0 AS BLOB) THEN (t2.c0 IN ()) END;
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE (t2.c0) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT (t2.c0))) UNION SELECT DISTINCT * FROM t2 WHERE (((t2.c0) ISNULL));
SELECT DISTINCT * FROM t2;
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 WHERE ((((json_valid(t2.c0), t2.c0 COLLATE BINARY, NULL COLLATE NOCASE))<>((((t2.c0)=(vt0.c0)), ((t2.c0) NOT BETWEEN (t2.c0) AND (vt0.c0)), ((vt0.c0)||(x'')))))) GROUP BY t2.c0, vt0.c0 UNION SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 WHERE ((NOT ((((json_valid(t2.c0), t2.c0 COLLATE BINARY, NULL COLLATE NOCASE))!=((((t2.c0)==(vt0.c0)), ((t2.c0) NOT BETWEEN (t2.c0) AND (vt0.c0)), ((vt0.c0)||(x'')))))))) GROUP BY t2.c0, vt0.c0 UNION SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 WHERE ((((((json_valid(t2.c0), t2.c0 COLLATE BINARY, NULL COLLATE NOCASE))!=((((t2.c0)=(vt0.c0)), ((t2.c0) NOT BETWEEN (t2.c0) AND (vt0.c0)), ((vt0.c0)||(x'')))))) ISNULL)) GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM t2 INNER JOIN vt0 ON (((((vt0.c0, t2.c0, vt0.c0))<((t2.c0, 0.06033049050908257, vt0.c0)))) BETWEEN (json(t2.c0)) AND (((t2.c0)*(vt0.c0)))) GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM t2 INNER JOIN vt0 ON (((((vt0.c0, t2.c0, vt0.c0))<((t2.c0, 0.06033049050908257, vt0.c0)))) BETWEEN (json(t2.c0)) AND (((t2.c0)*(vt0.c0)))) GROUP BY t2.c0, vt0.c0 HAVING GROUP_CONCAT(((AVG(vt0.c0))!=(vt0.c0))) UNION ALL SELECT ALL t2.c0, vt0.c0 FROM t2 INNER JOIN vt0 ON (((((vt0.c0, t2.c0, vt0.c0))<((t2.c0, 0.06033049050908257, vt0.c0)))) BETWEEN (json(t2.c0)) AND (((t2.c0)*(vt0.c0)))) GROUP BY t2.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(((AVG(vt0.c0))<>(vt0.c0))))) UNION ALL SELECT ALL t2.c0, vt0.c0 FROM t2 INNER JOIN vt0 ON (((((vt0.c0, t2.c0, vt0.c0))<((t2.c0, 0.06033049050908257, vt0.c0)))) BETWEEN (json(t2.c0)) AND (((t2.c0)*(vt0.c0)))) GROUP BY t2.c0, vt0.c0 HAVING ((GROUP_CONCAT(((AVG(vt0.c0))<>(vt0.c0)))) ISNULL);
SELECT ALL t2.c0 FROM t2;
SELECT ALL t2.c0 FROM t2 WHERE (((((json_extract(t2.c0, t2.c0))AND(((t2.c0)OR(t2.c0)))))OR(((t2.c0) NOTNULL)))) UNION ALL SELECT t2.c0 FROM t2 WHERE ((NOT (((((json_extract(t2.c0, t2.c0))AND(((t2.c0)OR(t2.c0)))))OR(((t2.c0) NOTNULL)))))) UNION ALL SELECT t2.c0 FROM t2 WHERE (((((((json_extract(t2.c0, t2.c0))AND(((t2.c0)OR(t2.c0)))))OR(((t2.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, t2;
SELECT DISTINCT vt0.c0 FROM vt0, t2 WHERE (((((t2.c0) IS FALSE)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t2.c0) AND (t2.c0))) AND ((NOT (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t2 WHERE ((NOT (((((t2.c0) IS FALSE)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t2.c0) AND (t2.c0))) AND ((NOT (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t2 WHERE (((((((t2.c0) IS FALSE)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t2.c0) AND (t2.c0))) AND ((NOT (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, t2;
SELECT t2.c0, vt0.c0 FROM vt0, t2 GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM vt0, t2 WHERE (((((vt0.c0) NOT NULL))<(CAST(t2.c0 AS NUMERIC)))) GROUP BY t2.c0, vt0.c0 UNION SELECT ALL t2.c0, vt0.c0 FROM vt0, t2 WHERE ((NOT (((((vt0.c0) NOT NULL))<(CAST(t2.c0 AS NUMERIC)))))) GROUP BY t2.c0, vt0.c0 UNION SELECT t2.c0, vt0.c0 FROM vt0, t2 NOT INDEXED WHERE (((((((vt0.c0) NOT NULL))<(CAST(t2.c0 AS NUMERIC)))) ISNULL)) GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM vt0, t2 GROUP BY t2.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((GROUP_CONCAT(COUNT(MAX(0.7334097026486897))))AND(SUM(vt0.c0))))OR(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((GROUP_CONCAT(COUNT(MAX(0.7334097026486897))))AND(SUM(vt0.c0))))OR(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((GROUP_CONCAT(COUNT(MAX(0.7334097026486897))))AND(SUM(vt0.c0))))OR(vt0.c0))) ISNULL);
SELECT vt0.c0, t2.c0 FROM t2 INNER JOIN vt0 ON (+ (((t2.c0)IS NOT(vt0.c0))));
SELECT vt0.c0, t2.c0 FROM t2 INNER JOIN vt0 ON (+ (((t2.c0)IS NOT(vt0.c0)))) WHERE (LOWER((((t2.c0, vt0.c0, vt0.c0))<((vt0.c0, t2.c0, vt0.c0))))) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM t2 INNER JOIN vt0 ON (+ (((t2.c0)IS NOT(vt0.c0)))) WHERE ((NOT (LOWER((((t2.c0, vt0.c0, vt0.c0))<((vt0.c0, t2.c0, vt0.c0))))))) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM t2 INNER JOIN vt0 ON (+ (((t2.c0)IS NOT(vt0.c0)))) WHERE (((LOWER((((t2.c0, vt0.c0, vt0.c0))<((vt0.c0, t2.c0, vt0.c0))))) ISNULL));
SELECT vt0.c0, t2.c0 FROM t2 INNER JOIN vt0 ON (+ (((t2.c0)IS NOT(vt0.c0))));
SELECT DISTINCT * FROM vt0, t2;
SELECT DISTINCT * FROM vt0, t2 WHERE ((+ (((vt0.c0) BETWEEN (t2.c0) AND (t2.c0))))) UNION SELECT DISTINCT * FROM vt0, t2 WHERE ((NOT ((+ (((vt0.c0) BETWEEN (t2.c0) AND (t2.c0))))))) UNION SELECT DISTINCT * FROM vt0, t2 WHERE ((((+ (((vt0.c0) BETWEEN (t2.c0) AND (t2.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, t2;
SELECT ALL t2.c0 FROM t2, vt0 GROUP BY t2.c0;
SELECT t2.c0 FROM t2, vt0 WHERE ((+ ((+ (t2.c0))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2, vt0 WHERE ((NOT ((+ ((+ (t2.c0))))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2, vt0 WHERE ((((+ ((+ (t2.c0))))) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2, vt0 GROUP BY t2.c0;
SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT * FROM t2;
SELECT ALL * FROM t2 WHERE (((((t2.c0) NOT BETWEEN (0.7423608701537884) AND (t2.c0))) BETWEEN ((((t2.c0, 0.40915529685259355, t2.c0))>=((t2.c0, t2.c0, t2.c0)))) AND ((NOT (t2.c0))))) UNION ALL SELECT ALL * FROM t2 WHERE ((NOT (((((t2.c0) NOT BETWEEN (0.7423608701537884) AND (t2.c0))) BETWEEN ((((t2.c0, 0.40915529685259355, t2.c0))>=((t2.c0, t2.c0, t2.c0)))) AND ((NOT (t2.c0))))))) UNION ALL SELECT ALL * FROM t2 WHERE (((((((t2.c0) NOT BETWEEN (0.7423608701537884) AND (t2.c0))) BETWEEN ((((t2.c0, 0.40915529685259355, t2.c0))>=((t2.c0, t2.c0, t2.c0)))) AND ((NOT (t2.c0))))) ISNULL));
SELECT * FROM t2;
SELECT DISTINCT t2.c0, vt0.c0 FROM vt0, t2;
SELECT DISTINCT t2.c0, vt0.c0 FROM vt0, t2 WHERE (CAST(((((x'')AND(t2.c0)))AND(vt0.c0)) AS REAL)) UNION SELECT DISTINCT t2.c0, vt0.c0 FROM vt0, t2 WHERE ((NOT (CAST(((((x'')AND(t2.c0)))AND(vt0.c0)) AS REAL)))) UNION SELECT DISTINCT t2.c0, vt0.c0 FROM vt0, t2 WHERE (((CAST(((((x'')AND(t2.c0)))AND(vt0.c0)) AS REAL)) ISNULL));
SELECT DISTINCT t2.c0, vt0.c0 FROM vt0, t2;
SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN t2 ON ((vt0.c0)*(vt0.c0)) COLLATE BINARY GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 FULL OUTER JOIN t2 ON ((vt0.c0)*(vt0.c0)) COLLATE BINARY WHERE (LIKELIHOOD(NULL, 0.3486970186773207)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN t2 ON ((vt0.c0)*(vt0.c0)) COLLATE BINARY WHERE ((NOT (LIKELIHOOD(NULL, 0.3486970186773207)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN t2 ON ((vt0.c0)*(vt0.c0)) COLLATE BINARY WHERE (((LIKELIHOOD(NULL, 0.3486970186773207)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN t2 ON ((vt0.c0)*(vt0.c0)) COLLATE BINARY GROUP BY vt0.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING GROUP_CONCAT(((AVG(AVG(t2.c0))) IS FALSE)) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (GROUP_CONCAT(((AVG(AVG(t2.c0))) IS FALSE)))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((GROUP_CONCAT(((AVG(AVG(t2.c0))) IS FALSE))) ISNULL);
SELECT t2.c0 FROM t2;
SELECT ALL t2.c0 FROM t2 WHERE ((((t2.c0 IN ())) IS FALSE)) UNION ALL SELECT t2.c0 FROM t2 WHERE ((NOT ((((t2.c0 IN ())) IS FALSE)))) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE ((((((t2.c0 IN ())) IS FALSE)) ISNULL));
SELECT t2.c0 FROM t2;
SELECT DISTINCT vt0.c0 FROM vt0, t2;
SELECT DISTINCT vt0.c0 FROM vt0, t2 WHERE (CASE WHEN ((x'')<=(vt0.c0)) THEN (((x'')) BETWEEN ((0.5237900094882161)) AND ((vt0.c0))) END) UNION SELECT DISTINCT vt0.c0 FROM vt0, t2 WHERE ((NOT (CASE WHEN ((x'')<=(vt0.c0)) THEN (((x'')) BETWEEN ((0.5237900094882161)) AND ((vt0.c0))) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t2 WHERE (((CASE WHEN ((x'')<=(vt0.c0)) THEN (((x'')) BETWEEN ((0.5237900094882161)) AND ((vt0.c0))) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, t2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN ((NULL) IS FALSE) THEN CASE vt0.c0  WHEN NULL THEN vt0.c0 END WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN ((NULL) IS FALSE) THEN CASE vt0.c0  WHEN NULL THEN vt0.c0 END WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN ((NULL) IS FALSE) THEN CASE vt0.c0  WHEN NULL THEN vt0.c0 END WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 NOT INDEXED GROUP BY t2.c0 HAVING t2.c0 UNION ALL SELECT ALL t2.c0 FROM t2 NOT INDEXED GROUP BY t2.c0 HAVING (NOT (t2.c0)) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((t2.c0) ISNULL);
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 NOT INDEXED GROUP BY t2.c0 HAVING t2.c0 UNION ALL SELECT ALL t2.c0 FROM t2 NOT INDEXED GROUP BY t2.c0 HAVING (NOT (t2.c0)) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((t2.c0) ISNULL);
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, t2;
SELECT DISTINCT * FROM vt0, t2 WHERE (((((t2.c0) NOT BETWEEN (t2.c0) AND (vt0.c0)))OR(((t2.c0)<=(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, t2 WHERE ((NOT (((((t2.c0) NOT BETWEEN (t2.c0) AND (vt0.c0)))OR(((t2.c0)<=(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, t2 WHERE (((((((t2.c0) NOT BETWEEN (t2.c0) AND (vt0.c0)))OR(((t2.c0)<=(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, t2;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE (((((t2.c0)-(t2.c0)))=((NOT (t2.c0))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT (((((t2.c0)-(t2.c0)))==((NOT (t2.c0))))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE (((((((t2.c0)-(t2.c0)))==((NOT (t2.c0))))) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING COUNT(MAX(vt0.c0)) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING (NOT (COUNT(MAX(vt0.c0)))) UNION ALL SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING ((COUNT(MAX(vt0.c0))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0)))LIKE((vt0.c0 IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0)LIKE(vt0.c0)))LIKE((vt0.c0 IN ())))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0)LIKE(vt0.c0)))LIKE((vt0.c0 IN ())))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0, t2;
SELECT DISTINCT * FROM vt0, t2 WHERE (CASE WHEN (0.8322494522088721 IN ()) THEN CASE WHEN x'dd9f' THEN NULL ELSE vt0.c0 END WHEN 0.7977919141172738 THEN ((vt0.c0) BETWEEN (t2.c0) AND (vt0.c0)) WHEN ((vt0.c0) NOT NULL) THEN COALESCE(t2.c0, vt0.c0) END) UNION SELECT DISTINCT * FROM vt0, t2 WHERE ((NOT (CASE WHEN (0.8322494522088721 IN ()) THEN CASE WHEN x'dd9f' THEN NULL ELSE vt0.c0 END WHEN 0.7977919141172738 THEN ((vt0.c0) BETWEEN (t2.c0) AND (vt0.c0)) WHEN ((vt0.c0) NOT NULL) THEN COALESCE(t2.c0, vt0.c0) END))) UNION SELECT DISTINCT * FROM vt0, t2 WHERE (((CASE WHEN (0.8322494522088721 IN ()) THEN CASE WHEN x'dd9f' THEN NULL ELSE vt0.c0 END WHEN 0.7977919141172738 THEN ((vt0.c0) BETWEEN (t2.c0) AND (vt0.c0)) WHEN ((vt0.c0) NOT NULL) THEN COALESCE(t2.c0, vt0.c0) END) ISNULL));
SELECT DISTINCT * FROM vt0, t2;
SELECT t2.c0, vt0.c0 FROM t2 LEFT OUTER JOIN vt0 ON NULL GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM t2 LEFT OUTER JOIN vt0 ON NULL WHERE ((t2.c0 IN ()) COLLATE NOCASE) GROUP BY t2.c0, vt0.c0 UNION SELECT t2.c0, vt0.c0 FROM t2 LEFT OUTER JOIN vt0 ON NULL WHERE ((NOT ((t2.c0 IN ()) COLLATE NOCASE))) GROUP BY t2.c0, vt0.c0 UNION SELECT ALL t2.c0, vt0.c0 FROM t2 LEFT OUTER JOIN vt0 ON NULL WHERE ((((t2.c0 IN ()) COLLATE NOCASE) ISNULL)) GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM t2 LEFT OUTER JOIN vt0 ON NULL GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING COUNT(*) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING COUNT(*) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM t2, vt0;
SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 WHERE ((NOT ((((t2.c0))<((0.43599273621624823)))))) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 WHERE ((NOT ((NOT ((((t2.c0))<((0.43599273621624823)))))))) UNION ALL SELECT vt0.c0, t2.c0 FROM t2, vt0 WHERE ((((NOT ((((t2.c0))<((0.43599273621624823)))))) ISNULL));
SELECT ALL vt0.c0, t2.c0 FROM t2, vt0;
SELECT DISTINCT * FROM vt0, t2;
SELECT DISTINCT * FROM vt0, t2 WHERE (((TRIM(DISTINCT x'', vt0.c0))=(((vt0.c0) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0, t2 WHERE ((NOT (((TRIM(DISTINCT x'', vt0.c0))=(((vt0.c0) IS FALSE)))))) UNION SELECT DISTINCT * FROM vt0, t2 WHERE (((((TRIM(DISTINCT x'', vt0.c0))==(((vt0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM vt0, t2;
SELECT t2.c0, vt0.c0 FROM vt0, t2 GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM vt0, t2 WHERE ((~ (t2.c0 COLLATE NOCASE))) GROUP BY t2.c0, vt0.c0 UNION SELECT ALL t2.c0, vt0.c0 FROM vt0, t2 WHERE ((NOT ((~ (t2.c0 COLLATE NOCASE))))) GROUP BY t2.c0, vt0.c0 UNION SELECT t2.c0, vt0.c0 FROM vt0, t2 WHERE ((((~ (t2.c0 COLLATE NOCASE))) ISNULL)) GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM vt0, t2 GROUP BY t2.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(((MIN(vt0.c0)) ISNULL)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(((MIN(vt0.c0)) ISNULL)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(((MIN(vt0.c0)) ISNULL))) ISNULL);
SELECT t2.c0 FROM vt0, t2;
SELECT ALL t2.c0 FROM vt0, t2 WHERE (((((((t2.c0)<=(t2.c0)))OR(0.09318945376397636)))OR(((426381359)>(vt0.c0))))) UNION ALL SELECT t2.c0 FROM vt0, t2 WHERE ((NOT (((((((t2.c0)<=(t2.c0)))OR(0.09318945376397636)))OR(((426381359)>(vt0.c0))))))) UNION ALL SELECT ALL t2.c0 FROM vt0, t2 WHERE (((((((((t2.c0)<=(t2.c0)))OR(0.09318945376397636)))OR(((426381359)>(vt0.c0))))) ISNULL));
SELECT t2.c0 FROM vt0, t2;
SELECT DISTINCT t2.c0, vt0.c0 FROM t2, vt0;
SELECT DISTINCT t2.c0, vt0.c0 FROM t2, vt0 WHERE (CASE WHEN t2.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t2.c0 END COLLATE BINARY COLLATE RTRIM) UNION SELECT DISTINCT t2.c0, vt0.c0 FROM t2, vt0 WHERE ((NOT (CASE WHEN t2.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t2.c0 END COLLATE BINARY COLLATE RTRIM))) UNION SELECT DISTINCT t2.c0, vt0.c0 FROM t2, vt0 WHERE (((CASE WHEN t2.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t2.c0 END COLLATE BINARY COLLATE RTRIM) ISNULL));
SELECT DISTINCT t2.c0, vt0.c0 FROM t2, vt0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 WHERE (UPPER((t2.c0 IN (t2.c0)))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((NOT (UPPER((t2.c0 IN (t2.c0)))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE (((UPPER((t2.c0 IN (t2.c0)))) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT vt0.c0, t2.c0 FROM t2 NOT INDEXED RIGHT OUTER JOIN vt0 ON (((- (vt0.c0)))>(' g\lC\n')) GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM t2 RIGHT OUTER JOIN vt0 ON (((- (vt0.c0)))>(' g\lC\n')) GROUP BY vt0.c0, t2.c0 HAVING (NOT (t2.c0)) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM t2 RIGHT OUTER JOIN vt0 ON (((- (vt0.c0)))>(' g\lC\n')) GROUP BY vt0.c0, t2.c0 HAVING (NOT ((NOT (t2.c0)))) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM t2 RIGHT OUTER JOIN vt0 ON (((- (vt0.c0)))>(' g\lC\n')) GROUP BY vt0.c0, t2.c0 HAVING (((NOT (t2.c0))) ISNULL);
SELECT vt0.c0, t2.c0 FROM t2 NOT INDEXED RIGHT OUTER JOIN vt0 ON (((- (vt0.c0)))>(' g\lC\n')) GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM t2 RIGHT OUTER JOIN vt0 ON (((- (vt0.c0)))>(' g\lC\n')) GROUP BY vt0.c0, t2.c0 HAVING (NOT (t2.c0)) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM t2 RIGHT OUTER JOIN vt0 ON (((- (vt0.c0)))>(' g\lC\n')) GROUP BY vt0.c0, t2.c0 HAVING (NOT ((NOT (t2.c0)))) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM t2 RIGHT OUTER JOIN vt0 ON (((- (vt0.c0)))>(' g\lC\n')) GROUP BY vt0.c0, t2.c0 HAVING (((NOT (t2.c0))) ISNULL);
SELECT vt0.c0, t2.c0 FROM t2 NOT INDEXED RIGHT OUTER JOIN vt0 ON (((- (vt0.c0)))>(' g\lC\n')) GROUP BY vt0.c0, t2.c0;
SELECT ALL * FROM t2;
SELECT * FROM t2 WHERE (CASE WHEN ((((t2.c0)OR(t2.c0)))OR(1733595848)) THEN 0.07088510314101093 ELSE CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END END) UNION ALL SELECT * FROM t2 WHERE ((NOT (CASE WHEN ((((t2.c0)OR(t2.c0)))OR(1733595848)) THEN 0.07088510314101093 ELSE CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END END))) UNION ALL SELECT * FROM t2 WHERE (((CASE WHEN ((((t2.c0)OR(t2.c0)))OR(1733595848)) THEN 0.07088510314101093 ELSE CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END END) ISNULL));
SELECT ALL * FROM t2;
SELECT DISTINCT * FROM t2, vt0;
SELECT DISTINCT * FROM t2, vt0 WHERE ('﷒VGPAPmy') UNION SELECT DISTINCT * FROM t2, vt0 WHERE ((NOT ('﷒VGPAPmy'))) UNION SELECT DISTINCT * FROM t2, vt0 WHERE ((('﷒VGPAPmy') ISNULL));
SELECT DISTINCT * FROM t2, vt0;
SELECT ALL t2.c0, vt0.c0 FROM vt0, t2 NOT INDEXED GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM vt0, t2 WHERE ((((((t2.c0, t2.c0, t2.c0))>=((t2.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (vt0.c0) AND ((('-789439884')>=(vt0.c0))))) GROUP BY t2.c0, vt0.c0 UNION SELECT ALL t2.c0, vt0.c0 FROM vt0, t2 WHERE ((NOT ((((((t2.c0, t2.c0, t2.c0))>=((t2.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (vt0.c0) AND ((('-789439884')>=(vt0.c0))))))) GROUP BY t2.c0, vt0.c0 UNION SELECT t2.c0, vt0.c0 FROM vt0, t2 WHERE ((((((((t2.c0, t2.c0, t2.c0))>=((t2.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (vt0.c0) AND ((('-789439884')>=(vt0.c0))))) ISNULL)) GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM vt0, t2 NOT INDEXED GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING TOTAL(AVG(COUNT(t2.c0))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (TOTAL(AVG(COUNT(t2.c0))))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((TOTAL(AVG(COUNT(t2.c0)))) ISNULL);
SELECT ALL * FROM t2 RIGHT OUTER JOIN vt0 ON ((t2.c0 IN (t2.c0)) IN ());
SELECT * FROM t2 RIGHT OUTER JOIN vt0 ON ((t2.c0 IN (t2.c0)) IN ()) WHERE ((((vt0.c0, (t2.c0 IN ()), ((t2.c0)/(NULL)), t2.c0 COLLATE RTRIM, SUBSTR(vt0.c0, x'')))>((((((vt0.c0)AND(t2.c0)))OR(t2.c0)), '%', ((t2.c0) IS TRUE), load_extension(t2.c0, t2.c0), (((t2.c0))!=((vt0.c0))))))) UNION ALL SELECT ALL * FROM t2 RIGHT OUTER JOIN vt0 ON ((t2.c0 IN (t2.c0)) IN ()) WHERE ((NOT ((((vt0.c0, (t2.c0 IN ()), ((t2.c0)/(NULL)), t2.c0 COLLATE RTRIM, SUBSTR(vt0.c0, x'')))>((((((vt0.c0)AND(t2.c0)))OR(t2.c0)), '%', ((t2.c0) IS TRUE), load_extension(t2.c0, t2.c0), (((t2.c0))!=((vt0.c0))))))))) UNION ALL SELECT ALL * FROM t2 RIGHT OUTER JOIN vt0 ON ((t2.c0 IN (t2.c0)) IN ()) WHERE ((((((vt0.c0, (t2.c0 IN ()), ((t2.c0)/(NULL)), t2.c0 COLLATE RTRIM, SUBSTR(vt0.c0, x'')))>((((((vt0.c0)AND(t2.c0)))OR(t2.c0)), '%', ((t2.c0) IS TRUE), load_extension(t2.c0, t2.c0), (((t2.c0))!=((vt0.c0))))))) ISNULL));
SELECT ALL * FROM t2 RIGHT OUTER JOIN vt0 ON ((t2.c0 IN (t2.c0)) IN ());
SELECT DISTINCT vt0.c0 FROM vt0, t2;
SELECT DISTINCT vt0.c0 FROM vt0, t2 WHERE (((((((vt0.c0)OR(t2.c0)))AND(0.4329562402952897))) NOT NULL)) UNION SELECT DISTINCT vt0.c0 FROM vt0, t2 WHERE ((NOT (((((((vt0.c0)OR(t2.c0)))AND(0.4329562402952897))) NOT NULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t2 WHERE (((((((((vt0.c0)OR(t2.c0)))AND(0.4329562402952897))) NOT NULL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, t2;
SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 WHERE ((((((vt0.c0 IN ()))OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(t2.c0)))AND(vt0.c0)))))AND(((t2.c0) BETWEEN (t2.c0) AND (t2.c0))))) GROUP BY vt0.c0, t2.c0 UNION SELECT vt0.c0, t2.c0 FROM vt0, t2 WHERE ((NOT ((((((vt0.c0 IN ()))OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(t2.c0)))AND(vt0.c0)))))AND(((t2.c0) BETWEEN (t2.c0) AND (t2.c0))))))) GROUP BY vt0.c0, t2.c0 UNION SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 WHERE ((((((((vt0.c0 IN ()))OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(t2.c0)))AND(vt0.c0)))))AND(((t2.c0) BETWEEN (t2.c0) AND (t2.c0))))) ISNULL)) GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0 FROM t2, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t2, vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM t2, vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM t2, vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM t2, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t2, vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM t2, vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM t2, vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM t2, vt0 GROUP BY vt0.c0;
SELECT * FROM vt0, t2;
SELECT ALL * FROM vt0, t2 WHERE ((~ (t2.c0)) COLLATE BINARY COLLATE RTRIM) UNION ALL SELECT * FROM vt0, t2 WHERE ((NOT ((~ (t2.c0)) COLLATE BINARY COLLATE RTRIM))) UNION ALL SELECT * FROM vt0, t2 WHERE ((((~ (t2.c0)) COLLATE BINARY COLLATE RTRIM) ISNULL));
SELECT * FROM vt0, t2;
SELECT DISTINCT * FROM t2 NATURAL JOIN vt0;
SELECT DISTINCT * FROM t2 NATURAL JOIN vt0 WHERE (((CAST(t2.c0 AS NUMERIC))+((((t2.c0))<=(('-2094437816')))))) UNION SELECT DISTINCT * FROM t2 NATURAL JOIN vt0 WHERE ((NOT (((CAST(t2.c0 AS NUMERIC))+((((t2.c0))<=(('-2094437816')))))))) UNION SELECT DISTINCT * FROM t2 NATURAL JOIN vt0 WHERE (((((CAST(t2.c0 AS NUMERIC))+((((t2.c0))<=(('-2094437816')))))) ISNULL));
SELECT DISTINCT * FROM t2 NATURAL JOIN vt0;
SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM t2, vt0 WHERE ('437866222') GROUP BY vt0.c0, t2.c0 UNION SELECT vt0.c0, t2.c0 FROM t2, vt0 WHERE ((NOT ('437866222'))) GROUP BY vt0.c0, t2.c0 UNION SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 WHERE ((('437866222') ISNULL)) GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0;
SELECT ALL t2.c0 FROM t2, vt0 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING ((COUNT(*))OR(((GROUP_CONCAT(vt0.c0)) ISNULL))) UNION ALL SELECT ALL t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING (NOT (((COUNT(*))OR(((GROUP_CONCAT(vt0.c0)) ISNULL))))) UNION ALL SELECT ALL t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING ((((COUNT(*))OR(((GROUP_CONCAT(vt0.c0)) ISNULL)))) ISNULL);
SELECT ALL t2.c0 FROM t2, vt0 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING ((COUNT(*))OR(((GROUP_CONCAT(vt0.c0)) ISNULL))) UNION ALL SELECT ALL t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING (NOT (((COUNT(*))OR(((GROUP_CONCAT(vt0.c0)) ISNULL))))) UNION ALL SELECT ALL t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING ((((COUNT(*))OR(((GROUP_CONCAT(vt0.c0)) ISNULL)))) ISNULL);
SELECT ALL t2.c0 FROM t2, vt0 GROUP BY t2.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (UNLIKELY(DISTINCT (+ (vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (UNLIKELY(DISTINCT (+ (vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((UNLIKELY(DISTINCT (+ (vt0.c0)))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t2.c0, vt0.c0 FROM t2 CROSS JOIN vt0 ON ((((t2.c0) BETWEEN (vt0.c0) AND (t2.c0)))>=(t2.c0 COLLATE BINARY)) GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM t2 CROSS JOIN vt0 ON ((((t2.c0) BETWEEN (vt0.c0) AND (t2.c0)))>=(t2.c0 COLLATE BINARY)) WHERE ((- (-1968922067 COLLATE NOCASE))) GROUP BY t2.c0, vt0.c0 UNION SELECT ALL t2.c0, vt0.c0 FROM t2 CROSS JOIN vt0 ON ((((t2.c0) BETWEEN (vt0.c0) AND (t2.c0)))>=(t2.c0 COLLATE BINARY)) WHERE ((NOT ((- (-1968922067 COLLATE NOCASE))))) GROUP BY t2.c0, vt0.c0 UNION SELECT ALL t2.c0, vt0.c0 FROM t2 CROSS JOIN vt0 ON ((((t2.c0) BETWEEN (vt0.c0) AND (t2.c0)))>=(t2.c0 COLLATE BINARY)) WHERE ((((- (-1968922067 COLLATE NOCASE))) ISNULL)) GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM t2 CROSS JOIN vt0 ON ((((t2.c0) BETWEEN (vt0.c0) AND (t2.c0)))>=(t2.c0 COLLATE BINARY)) GROUP BY t2.c0, vt0.c0;
SELECT vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0;
SELECT * FROM vt0, t2;
SELECT * FROM vt0, t2 WHERE (((((vt0.c0 IN (vt0.c0))))<>((CASE vt0.c0  WHEN t2.c0 THEN vt0.c0 WHEN vt0.c0 THEN '1949172828' WHEN t2.c0 THEN vt0.c0 END)))) UNION ALL SELECT ALL * FROM vt0, t2 WHERE ((NOT (((((vt0.c0 IN (vt0.c0))))<>((CASE vt0.c0  WHEN t2.c0 THEN vt0.c0 WHEN vt0.c0 THEN '1949172828' WHEN t2.c0 THEN vt0.c0 END)))))) UNION ALL SELECT ALL * FROM vt0 NOT INDEXED, t2 WHERE (((((((vt0.c0 IN (vt0.c0))))<>((CASE vt0.c0  WHEN t2.c0 THEN vt0.c0 WHEN vt0.c0 THEN '1949172828' WHEN t2.c0 THEN vt0.c0 END)))) ISNULL));
SELECT * FROM vt0, t2;
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE (DATE(((t2.c0) BETWEEN (t2.c0) AND (t2.c0)), ABS(t2.c0), CASE t2.c0  WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 END)) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT (DATE(((t2.c0) BETWEEN (t2.c0) AND (t2.c0)), ABS(t2.c0), CASE t2.c0  WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 END)))) UNION SELECT DISTINCT * FROM t2 WHERE (((DATE(((t2.c0) BETWEEN (t2.c0) AND (t2.c0)), ABS(t2.c0), CASE t2.c0  WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 END)) ISNULL));
SELECT DISTINCT * FROM t2;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE (((0.07799594615096261 IN ()) IN (t2.c0))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((NOT (((0.07799594615096261 IN ()) IN (t2.c0))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE (((((0.07799594615096261 IN ()) IN (t2.c0))) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(((COUNT(*)) ISNULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(((COUNT(*)) ISNULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(((COUNT(*)) ISNULL))) ISNULL);
SELECT ALL vt0.c0, t2.c0 FROM t2, vt0;
SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 WHERE ((((vt0.c0) NOTNULL) IN ())) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 WHERE ((NOT ((((vt0.c0) NOTNULL) IN ())))) UNION ALL SELECT vt0.c0, t2.c0 FROM t2, vt0 WHERE ((((((vt0.c0) NOTNULL) IN ())) ISNULL));
SELECT ALL vt0.c0, t2.c0 FROM t2, vt0;
SELECT DISTINCT * FROM vt0, t2;
SELECT DISTINCT * FROM vt0, t2 WHERE (CASE ('' IN (vt0.c0, t2.c0))  WHEN CAST(vt0.c0 AS REAL) THEN ABS(t2.c0) END) UNION SELECT DISTINCT * FROM vt0, t2 WHERE ((NOT (CASE ('' IN (vt0.c0, t2.c0))  WHEN CAST(vt0.c0 AS REAL) THEN ABS(t2.c0) END))) UNION SELECT DISTINCT * FROM vt0, t2 WHERE (((CASE ('' IN (vt0.c0, t2.c0))  WHEN CAST(vt0.c0 AS REAL) THEN ABS(t2.c0) END) ISNULL));
SELECT DISTINCT * FROM vt0, t2;
SELECT ALL t2.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t2 ON ((vt0.c0) BETWEEN (t2.c0) AND (vt0.c0)) COLLATE BINARY GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t2 ON ((vt0.c0) BETWEEN (t2.c0) AND (vt0.c0)) COLLATE BINARY WHERE (json_extract(((t2.c0) NOTNULL), CAST(vt0.c0 AS INTEGER))) GROUP BY t2.c0, vt0.c0 UNION SELECT ALL t2.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t2 ON ((vt0.c0) BETWEEN (t2.c0) AND (vt0.c0)) COLLATE BINARY WHERE ((NOT (json_extract(((t2.c0) NOTNULL), CAST(vt0.c0 AS INTEGER))))) GROUP BY t2.c0, vt0.c0 UNION SELECT t2.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t2 ON ((vt0.c0) BETWEEN (t2.c0) AND (vt0.c0)) COLLATE BINARY WHERE (((json_extract(((t2.c0) NOTNULL), CAST(vt0.c0 AS INTEGER))) ISNULL)) GROUP BY t2.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING (+ (CASE MIN(t2.c0)  WHEN MIN(MAX(COUNT(*))) THEN COUNT(*) ELSE t2.c0 END)) UNION ALL SELECT ALL vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING (NOT ((+ (CASE MIN(t2.c0)  WHEN MIN(MAX(COUNT(*))) THEN COUNT(*) ELSE t2.c0 END)))) UNION ALL SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING (((+ (CASE MIN(t2.c0)  WHEN MIN(MAX(COUNT(*))) THEN COUNT(*) ELSE t2.c0 END))) ISNULL);
SELECT * FROM vt0, t2;
SELECT * FROM vt0, t2 WHERE ((((((+ (t2.c0)))OR(TRIM(0.9529495567390949))))OR(((t2.c0)&(t2.c0))))) UNION ALL SELECT * FROM vt0, t2 WHERE ((NOT ((((((+ (t2.c0)))OR(TRIM(0.9529495567390949))))OR(((t2.c0)&(t2.c0))))))) UNION ALL SELECT ALL * FROM vt0, t2 WHERE ((((((((+ (t2.c0)))OR(TRIM(0.9529495567390949))))OR(((t2.c0)&(t2.c0))))) ISNULL));
SELECT * FROM vt0, t2;
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE ((((((t2.c0 IN ()))AND(json_array_length(t2.c0))))OR(''))) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT ((((((t2.c0 IN ()))AND(json_array_length(t2.c0))))OR(''))))) UNION SELECT DISTINCT * FROM t2 WHERE ((((((((t2.c0 IN ()))AND(json_array_length(t2.c0))))OR(''))) ISNULL));
SELECT DISTINCT * FROM t2;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 WHERE (((((UPPER(NULL))AND(CAST(t2.c0 AS TEXT))))OR(NULLIF(DISTINCT t2.c0, t2.c0)))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((NOT (((((UPPER(NULL))AND(CAST(t2.c0 AS TEXT))))OR(NULLIF(DISTINCT t2.c0, t2.c0)))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE (((((((UPPER(NULL))AND(CAST(t2.c0 AS TEXT))))OR(NULLIF(DISTINCT t2.c0, t2.c0)))) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0;
SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING TOTAL(((((TOTAL(AVG(x'eadf')))OR(vt0.c0)))OR(vt0.c0))) UNION ALL SELECT ALL t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING (NOT (TOTAL(((((TOTAL(AVG(x'eadf')))OR(vt0.c0)))OR(vt0.c0))))) UNION ALL SELECT ALL t2.c0 FROM t2, vt0 GROUP BY t2.c0 HAVING ((TOTAL(((((TOTAL(AVG(x'eadf')))OR(vt0.c0)))OR(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((~ ((~ (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((~ ((~ (vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((~ ((~ (vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT t2.c0, vt0.c0 FROM vt0, t2;
SELECT DISTINCT t2.c0, vt0.c0 FROM vt0, t2 WHERE ((((((((((((vt0.c0)) BETWEEN (('-390767241')) AND ((t2.c0))))OR(((t2.c0)OR(t2.c0)))))AND(IFNULL(DISTINCT vt0.c0, vt0.c0))))OR(((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))OR((((vt0.c0))>((vt0.c0)))))) UNION SELECT DISTINCT t2.c0, vt0.c0 FROM vt0, t2 WHERE ((NOT ((((((((((((vt0.c0)) BETWEEN (('-390767241')) AND ((t2.c0))))OR(((t2.c0)OR(t2.c0)))))AND(IFNULL(DISTINCT vt0.c0, vt0.c0))))OR(((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))OR((((vt0.c0))>((vt0.c0)))))))) UNION SELECT DISTINCT t2.c0, vt0.c0 FROM vt0 NOT INDEXED, t2 WHERE ((((((((((((((vt0.c0)) BETWEEN (('-390767241')) AND ((t2.c0))))OR(((t2.c0)OR(t2.c0)))))AND(IFNULL(DISTINCT vt0.c0, vt0.c0))))OR(((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))OR((((vt0.c0))>((vt0.c0)))))) ISNULL));
SELECT DISTINCT t2.c0, vt0.c0 FROM vt0, t2;
SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 WHERE (CASE ((((t2.c0)AND(t2.c0)))OR(t2.c0))  WHEN ((t2.c0)+(t2.c0)) THEN (t2.c0 IN (vt0.c0)) WHEN t2.c0 THEN vt0.c0 WHEN ((t2.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) END) GROUP BY vt0.c0, t2.c0 UNION SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 WHERE ((NOT (CASE ((((t2.c0)AND(t2.c0)))OR(t2.c0))  WHEN ((t2.c0)+(t2.c0)) THEN (t2.c0 IN (vt0.c0)) WHEN t2.c0 THEN vt0.c0 WHEN ((t2.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) END))) GROUP BY vt0.c0, t2.c0 UNION SELECT vt0.c0, t2.c0 FROM vt0, t2 WHERE (((CASE ((((t2.c0)AND(t2.c0)))OR(t2.c0))  WHEN ((t2.c0)+(t2.c0)) THEN (t2.c0 IN (vt0.c0)) WHEN t2.c0 THEN vt0.c0 WHEN ((t2.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) END) ISNULL)) GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN t2 ON (- (0X66dae984 COLLATE BINARY)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN t2 ON (- (0x66dae984 COLLATE BINARY)) GROUP BY vt0.c0 HAVING -1552761294 UNION ALL SELECT ALL vt0.c0 FROM vt0 CROSS JOIN t2 ON (- (0x66dae984 COLLATE BINARY)) GROUP BY vt0.c0 HAVING (NOT (-1552761294)) UNION ALL SELECT ALL vt0.c0 FROM vt0 CROSS JOIN t2 ON (- (0x66dae984 COLLATE BINARY)) GROUP BY vt0.c0 HAVING ((-1552761294) ISNULL);
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN t2 ON (- (0X66dae984 COLLATE BINARY)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN t2 ON (- (0x66dae984 COLLATE BINARY)) GROUP BY vt0.c0 HAVING -1552761294 UNION ALL SELECT ALL vt0.c0 FROM vt0 CROSS JOIN t2 ON (- (0x66dae984 COLLATE BINARY)) GROUP BY vt0.c0 HAVING (NOT (-1552761294)) UNION ALL SELECT ALL vt0.c0 FROM vt0 CROSS JOIN t2 ON (- (0x66dae984 COLLATE BINARY)) GROUP BY vt0.c0 HAVING ((-1552761294) ISNULL);
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN t2 ON (- (0X66dae984 COLLATE BINARY)) GROUP BY vt0.c0;
SELECT TOTAL(LOWER(((vt0.c0)==(vt0.c0)))) FROM vt0, t2;
SELECT ALL * FROM t2, vt0;
SELECT * FROM t2, vt0 WHERE ((((((vt0.c0, t2.c0, t2.c0)) NOT BETWEEN ((vt0.c0, t2.c0, t2.c0)) AND ((t2.c0, t2.c0, t2.c0))))-((- (vt0.c0))))) UNION ALL SELECT * FROM t2, vt0 WHERE ((NOT ((((((vt0.c0, t2.c0, t2.c0)) NOT BETWEEN ((vt0.c0, t2.c0, t2.c0)) AND ((t2.c0, t2.c0, t2.c0))))-((- (vt0.c0))))))) UNION ALL SELECT * FROM t2, vt0 WHERE ((((((((vt0.c0, t2.c0, t2.c0)) NOT BETWEEN ((vt0.c0, t2.c0, t2.c0)) AND ((t2.c0, t2.c0, t2.c0))))-((- (vt0.c0))))) ISNULL));
SELECT ALL * FROM t2, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0) ISNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t2 WHERE (((((t2.c0) NOT NULL))>=(t2.c0 COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t2 WHERE ((NOT (((((t2.c0) NOT NULL))>=(t2.c0 COLLATE BINARY))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t2 WHERE (((((((t2.c0) NOT NULL))>=(t2.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING x'8d53' UNION ALL SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING (NOT (x'8d53')) UNION ALL SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING ((x'8d53') ISNULL);
SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING x'8d53' UNION ALL SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING (NOT (x'8d53')) UNION ALL SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING ((x'8d53') ISNULL);
SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0) IS FALSE) IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0) IS FALSE) IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0) IS FALSE) IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2, vt0 WHERE (HEX(DISTINCT ((vt0.c0)*(t2.c0)))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2, vt0 WHERE ((NOT (HEX(DISTINCT ((vt0.c0)*(t2.c0)))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2, vt0 WHERE (((HEX(DISTINCT ((vt0.c0)*(t2.c0)))) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((GROUP_CONCAT(MIN(vt0.c0))) NOT BETWEEN (vt0.c0) AND (x'')))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((NOT (((GROUP_CONCAT(MIN(vt0.c0))) NOT BETWEEN (vt0.c0) AND (x'')))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((NOT (((GROUP_CONCAT(MIN(vt0.c0))) NOT BETWEEN (vt0.c0) AND (x''))))) ISNULL);
SELECT t2.c0 FROM t2, vt0;
SELECT ALL t2.c0 FROM t2, vt0 WHERE ((((~ (vt0.c0)))OR(t2.c0))) UNION ALL SELECT t2.c0 FROM t2, vt0 WHERE ((NOT ((((~ (vt0.c0)))OR(t2.c0))))) UNION ALL SELECT ALL t2.c0 FROM t2, vt0 WHERE ((((((~ (vt0.c0)))OR(t2.c0))) ISNULL));
SELECT t2.c0 FROM t2, vt0;
SELECT DISTINCT * FROM t2 FULL OUTER JOIN vt0 ON t2.c0;
SELECT DISTINCT * FROM t2 FULL OUTER JOIN vt0 ON t2.c0 WHERE ((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((vt0.c0)))) UNION SELECT DISTINCT * FROM t2 FULL OUTER JOIN vt0 ON t2.c0 WHERE ((NOT ((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((vt0.c0)))))) UNION SELECT DISTINCT * FROM t2 FULL OUTER JOIN vt0 ON t2.c0 WHERE ((((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM t2 FULL OUTER JOIN vt0 ON t2.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE (((vt0.c0))>=((vt0.c0)))  WHEN CAST(vt0.c0 AS TEXT) THEN IFNULL(DISTINCT vt0.c0, vt0.c0) ELSE (vt0.c0 IN ()) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE (((vt0.c0))>=((vt0.c0)))  WHEN CAST(vt0.c0 AS TEXT) THEN IFNULL(DISTINCT vt0.c0, vt0.c0) ELSE (vt0.c0 IN ()) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE (((vt0.c0))>=((vt0.c0)))  WHEN CAST(vt0.c0 AS TEXT) THEN IFNULL(DISTINCT vt0.c0, vt0.c0) ELSE (vt0.c0 IN ()) END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(GROUP_CONCAT(MAX(0.5561864277914584)) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(GROUP_CONCAT(MAX(0.5561864277914584)) COLLATE RTRIM))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(GROUP_CONCAT(MAX(0.5561864277914584)) COLLATE RTRIM)) ISNULL);
SELECT vt0.c0, t2.c0 FROM vt0, t2;
SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 WHERE (CAST(((t2.c0)/('376118958')) AS INTEGER)) UNION ALL SELECT vt0.c0, t2.c0 FROM vt0, t2 WHERE ((NOT (CAST(((t2.c0)/('376118958')) AS INTEGER)))) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 WHERE (((CAST(((t2.c0)/('376118958')) AS INTEGER)) ISNULL));
SELECT vt0.c0, t2.c0 FROM vt0, t2;
SELECT DISTINCT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2 WHERE ((3.1752813E7 IN (NULLIF(DISTINCT t2.c0, t2.c0)))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((NOT ((3.1752813E7 IN (NULLIF(DISTINCT t2.c0, t2.c0)))))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((((3.1752813E7 IN (NULLIF(DISTINCT t2.c0, t2.c0)))) ISNULL));
SELECT DISTINCT t2.c0 FROM t2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0)==(vt0.c0)) AS INTEGER)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0)=(vt0.c0)) AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0)==(vt0.c0)) AS INTEGER)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING t2.c0 UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (t2.c0)) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((t2.c0) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING t2.c0 UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (t2.c0)) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((t2.c0) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT TOTAL(-245159347) FROM t2, vt0 ORDER BY ((0.6273739499108564) ISNULL) ASC  NULLS LAST;
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0;
SELECT t2.c0, vt0.c0 FROM t2, vt0 WHERE ((('1432557159') NOT BETWEEN ((vt0.c0 IN ())) AND ((((t2.c0)) BETWEEN ((x'')) AND ((vt0.c0)))))) UNION ALL SELECT t2.c0, vt0.c0 FROM t2, vt0 WHERE ((NOT ((('1432557159') NOT BETWEEN ((vt0.c0 IN ())) AND ((((t2.c0)) BETWEEN ((x'')) AND ((vt0.c0)))))))) UNION ALL SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 WHERE ((((('1432557159') NOT BETWEEN ((vt0.c0 IN ())) AND ((((t2.c0)) BETWEEN ((x'')) AND ((vt0.c0)))))) ISNULL));
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 WHERE ('') GROUP BY t2.c0, vt0.c0 UNION SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 WHERE ((NOT (''))) GROUP BY t2.c0, vt0.c0 UNION SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 WHERE ((('') ISNULL)) GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0;
SELECT vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0 HAVING MAX((SUM(COUNT(*)) IN (vt0.c0))) UNION ALL SELECT vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0 HAVING (NOT (MAX((SUM(COUNT(*)) IN (vt0.c0))))) UNION ALL SELECT vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0 HAVING ((MAX((SUM(COUNT(*)) IN (vt0.c0)))) ISNULL);
SELECT ALL * FROM t2;
SELECT * FROM t2 WHERE ((((0x3e9b6cc0 IN (t2.c0))) NOT BETWEEN (((t2.c0) IS TRUE)) AND (t2.c0))) UNION ALL SELECT * FROM t2 WHERE ((NOT ((((0x3e9b6cc0 IN (t2.c0))) NOT BETWEEN (((t2.c0) IS TRUE)) AND (t2.c0))))) UNION ALL SELECT * FROM t2 WHERE ((((((0x3e9b6cc0 IN (t2.c0))) NOT BETWEEN (((t2.c0) IS TRUE)) AND (t2.c0))) ISNULL));
SELECT ALL * FROM t2;
SELECT DISTINCT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2 WHERE (((((t2.c0) IS TRUE)) NOT BETWEEN (((t2.c0)%(t2.c0))) AND (((t2.c0)>=(t2.c0))))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((NOT (((((t2.c0) IS TRUE)) NOT BETWEEN (((t2.c0)%(t2.c0))) AND (((t2.c0)>=(t2.c0))))))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE (((((((t2.c0) IS TRUE)) NOT BETWEEN (((t2.c0)%(t2.c0))) AND (((t2.c0)>=(t2.c0))))) ISNULL));
SELECT DISTINCT t2.c0 FROM t2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((- (vt0.c0))) ISNULL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((- (vt0.c0))) ISNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((- (vt0.c0))) ISNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t2.c0 FROM vt0 NOT INDEXED, t2 GROUP BY t2.c0;
SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING LOWER(DISTINCT COUNT(*)) UNION ALL SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING (NOT (LOWER(DISTINCT COUNT(*)))) UNION ALL SELECT ALL t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING ((LOWER(DISTINCT COUNT(*))) ISNULL);
SELECT ALL t2.c0 FROM vt0 NOT INDEXED, t2 GROUP BY t2.c0;
SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING LOWER(DISTINCT COUNT(*)) UNION ALL SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING (NOT (LOWER(DISTINCT COUNT(*)))) UNION ALL SELECT ALL t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING ((LOWER(DISTINCT COUNT(*))) ISNULL);
SELECT ALL t2.c0 FROM vt0 NOT INDEXED, t2 GROUP BY t2.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 NOT INDEXED WHERE (CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0) NOTNULL) ELSE ((vt0.c0) BETWEEN ('0.06832321345848003') AND (vt0.c0)) END) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0) NOTNULL) ELSE ((vt0.c0) BETWEEN ('0.06832321345848003') AND (vt0.c0)) END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0) NOTNULL) ELSE ((vt0.c0) BETWEEN ('0.06832321345848003') AND (vt0.c0)) END) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, t2;
SELECT DISTINCT * FROM vt0, t2 WHERE ((((0X636bda48 IN ())) NOT NULL)) UNION SELECT DISTINCT * FROM vt0, t2 WHERE ((NOT ((((0X636bda48 IN ())) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0, t2 WHERE ((((((0X636bda48 IN ())) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt0, t2;
SELECT ALL t2.c0 FROM vt0 CROSS JOIN t2 ON ((((-619379189)AND(t2.c0)))AND(vt0.c0)) COLLATE RTRIM GROUP BY t2.c0;
SELECT ALL t2.c0 FROM vt0 CROSS JOIN t2 ON ((((-619379189)AND(t2.c0)))AND(vt0.c0)) COLLATE RTRIM WHERE ((((~ (t2.c0)))>>(x''))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM vt0 CROSS JOIN t2 ON ((((-619379189)AND(t2.c0)))AND(vt0.c0)) COLLATE RTRIM WHERE ((NOT ((((~ (t2.c0)))>>(x''))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM vt0 CROSS JOIN t2 ON ((((-619379189)AND(t2.c0)))AND(vt0.c0)) COLLATE RTRIM WHERE ((((((~ (t2.c0)))>>(x''))) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM vt0 CROSS JOIN t2 ON ((((-619379189)AND(t2.c0)))AND(vt0.c0)) COLLATE RTRIM GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (- (((COUNT(MAX(t2.c0))) NOT BETWEEN (t2.c0) AND (t2.c0)))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT ((- (((COUNT(MAX(t2.c0))) NOT BETWEEN (t2.c0) AND (t2.c0)))))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (((- (((COUNT(MAX(t2.c0))) NOT BETWEEN (t2.c0) AND (t2.c0))))) ISNULL);
SELECT ALL * FROM vt0, t2;
SELECT ALL * FROM vt0, t2 WHERE ((((((t2.c0))<=((vt0.c0))))==(CHANGES()))) UNION ALL SELECT * FROM vt0, t2 WHERE ((NOT ((((((t2.c0))<=((vt0.c0))))=(CHANGES()))))) UNION ALL SELECT ALL * FROM vt0, t2 WHERE ((((((((t2.c0))<=((vt0.c0))))=(CHANGES()))) ISNULL));
SELECT ALL * FROM vt0, t2;
SELECT DISTINCT t2.c0 FROM vt0, t2;
SELECT DISTINCT t2.c0 FROM vt0, t2 WHERE (((((((((((t2.c0)AND(t2.c0)))OR(vt0.c0)))AND(t2.c0)))AND(vt0.c0)))-((((t2.c0, -526525869, t2.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((t2.c0, t2.c0, vt0.c0)))))) UNION SELECT DISTINCT t2.c0 FROM vt0, t2 WHERE ((NOT (((((((((((t2.c0)AND(t2.c0)))OR(vt0.c0)))AND(t2.c0)))AND(vt0.c0)))-((((t2.c0, -526525869, t2.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((t2.c0, t2.c0, vt0.c0)))))))) UNION SELECT DISTINCT t2.c0 FROM vt0, t2 WHERE (((((((((((((t2.c0)AND(t2.c0)))OR(vt0.c0)))AND(t2.c0)))AND(vt0.c0)))-((((t2.c0, -526525869, t2.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((t2.c0, t2.c0, vt0.c0)))))) ISNULL));
SELECT DISTINCT t2.c0 FROM vt0, t2;
SELECT vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM t2, vt0 WHERE ((((t2.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0) ISNULL))))) GROUP BY vt0.c0, t2.c0 UNION SELECT vt0.c0, t2.c0 FROM t2, vt0 WHERE ((NOT ((((t2.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0) ISNULL))))))) GROUP BY vt0.c0, t2.c0 UNION SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 WHERE ((((((t2.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0) ISNULL))))) ISNULL)) GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (GROUP_CONCAT(TOTAL(COUNT(*))) IN (SUM(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((GROUP_CONCAT(TOTAL(COUNT(*))) IN (SUM(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((GROUP_CONCAT(TOTAL(COUNT(*))) IN (SUM(vt0.c0)))) ISNULL);
SELECT ALL * FROM t2;
SELECT * FROM t2 WHERE (-3.62942127E8) UNION ALL SELECT * FROM t2 WHERE ((NOT (-3.62942127E8))) UNION ALL SELECT * FROM t2 WHERE (((-3.62942127E8) ISNULL));
SELECT ALL * FROM t2;
SELECT DISTINCT * FROM vt0, t2;
SELECT DISTINCT * FROM vt0, t2 WHERE ((((vt0.c0)>=(vt0.c0)) IN (vt0.c0, (((t2.c0))==((vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, t2 WHERE ((NOT ((((vt0.c0)>=(vt0.c0)) IN (vt0.c0, (((t2.c0))==((vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0, t2 WHERE ((((((vt0.c0)>=(vt0.c0)) IN (vt0.c0, (((t2.c0))==((vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, t2;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 WHERE ((+ (''))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((NOT ((+ (''))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((((+ (''))) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING t2.c0 UNION ALL SELECT t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING (NOT (t2.c0)) UNION ALL SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING ((t2.c0) ISNULL);
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING t2.c0 UNION ALL SELECT t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING (NOT (t2.c0)) UNION ALL SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING ((t2.c0) ISNULL);
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0;
SELECT t2.c0, vt0.c0 FROM t2, vt0 WHERE (t2.c0) UNION ALL SELECT t2.c0, vt0.c0 FROM t2, vt0 WHERE ((NOT (t2.c0))) UNION ALL SELECT t2.c0, vt0.c0 FROM t2, vt0 WHERE (((t2.c0) ISNULL));
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t2 WHERE (((((vt0.c0 IN (t2.c0))))<=((0xffffffffe28c48a3)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t2 WHERE ((NOT (((((vt0.c0 IN (t2.c0))))<=((0xffffffffe28c48a3)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t2 WHERE (((((((vt0.c0 IN (t2.c0))))<=((0Xffffffffe28c48a3)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((COUNT(COUNT(*))))>((AVG(x'')))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((COUNT(COUNT(*))))>((AVG(x'')))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((COUNT(COUNT(*))))>((AVG(x''))))) ISNULL);
SELECT * FROM vt0, t2;
SELECT * FROM vt0, t2 WHERE (((((vt0.c0 COLLATE NOCASE)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(CASE WHEN 0.40915529685259355 THEN vt0.c0 END))) UNION ALL SELECT ALL * FROM vt0, t2 WHERE ((NOT (((((vt0.c0 COLLATE NOCASE)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(CASE WHEN 0.40915529685259355 THEN vt0.c0 END))))) UNION ALL SELECT ALL * FROM vt0, t2 NOT INDEXED WHERE (((((((vt0.c0 COLLATE NOCASE)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(CASE WHEN 0.40915529685259355 THEN vt0.c0 END))) ISNULL));
SELECT * FROM vt0, t2;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (-1.37985206E8) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (-1.37985206E8))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((-1.37985206E8) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))&((- (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS TEXT))&((- (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT))&((- (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c0)) NOT BETWEEN (('2068868989')) AND (((- (vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((vt0.c0)) NOT BETWEEN (('2068868989')) AND (((- (vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0)) NOT BETWEEN (('2068868989')) AND (((- (vt0.c0)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c0)) NOT BETWEEN (('2068868989')) AND (((- (vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((vt0.c0)) NOT BETWEEN (('2068868989')) AND (((- (vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0)) NOT BETWEEN (('2068868989')) AND (((- (vt0.c0)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM t2, vt0;
SELECT * FROM t2, vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM t2, vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM t2, vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM t2, vt0;
SELECT DISTINCT t2.c0, vt0.c0 FROM t2, vt0 INDEXED BY i3;
SELECT vt0.c0, t2.c0 FROM vt0 RIGHT OUTER JOIN t2 ON LIKE(((0.01624607375139664)<(t2.c0)), ((vt0.c0) BETWEEN (t2.c0) AND (0X52f9b5c5)), '\r') GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM vt0 RIGHT OUTER JOIN t2 ON LIKE(((0.01624607375139664)<(t2.c0)), ((vt0.c0) BETWEEN (t2.c0) AND (0x52f9b5c5)), '\r') WHERE ((CASE WHEN x'' THEN vt0.c0 ELSE vt0.c0 END IN ())) GROUP BY vt0.c0, t2.c0 UNION SELECT vt0.c0, t2.c0 FROM vt0 RIGHT OUTER JOIN t2 ON LIKE(((0.01624607375139664)<(t2.c0)), ((vt0.c0) BETWEEN (t2.c0) AND (0X52f9b5c5)), '\r') WHERE ((NOT ((CASE WHEN x'' THEN vt0.c0 ELSE vt0.c0 END IN ())))) GROUP BY vt0.c0, t2.c0 UNION SELECT vt0.c0, t2.c0 FROM vt0 RIGHT OUTER JOIN t2 ON LIKE(((0.01624607375139664)<(t2.c0)), ((vt0.c0) BETWEEN (t2.c0) AND (0x52f9b5c5)), '\r') WHERE ((((CASE WHEN x'' THEN vt0.c0 ELSE vt0.c0 END IN ())) ISNULL)) GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM vt0 RIGHT OUTER JOIN t2 ON LIKE(((0.01624607375139664)<(t2.c0)), ((vt0.c0) BETWEEN (t2.c0) AND (0X52f9b5c5)), '\r') GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(MIN(vt0.c0)) COLLATE BINARY UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(MIN(vt0.c0)) COLLATE BINARY)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(MIN(vt0.c0)) COLLATE BINARY) ISNULL);
SELECT TOTAL(CASE (t2.c0 IN ())  WHEN ((vt0.c0)LIKE(t2.c0)) THEN (((vt0.c0))!=((t2.c0))) ELSE LIKELIHOOD(0.09339082389405307, 0.566828623566456) END) FROM vt0, t2;
SELECT ALL * FROM t2;
SELECT ALL * FROM t2 WHERE (((((t2.c0 IN (x'')), CASE WHEN t2.c0 THEN t2.c0 END, ((t2.c0) IS TRUE)))>=((((t2.c0)%(t2.c0)), LIKELIHOOD(DISTINCT t2.c0, 0.913152456890676), (((t2.c0, t2.c0, 0.677782489803696))>((t2.c0, t2.c0, t2.c0))))))) UNION ALL SELECT * FROM t2 WHERE ((NOT (((((t2.c0 IN (x'')), CASE WHEN t2.c0 THEN t2.c0 END, ((t2.c0) IS TRUE)))>=((((t2.c0)%(t2.c0)), LIKELIHOOD(DISTINCT t2.c0, 0.913152456890676), (((t2.c0, t2.c0, 0.677782489803696))>((t2.c0, t2.c0, t2.c0))))))))) UNION ALL SELECT ALL * FROM t2 NOT INDEXED WHERE (((((((t2.c0 IN (x'')), CASE WHEN t2.c0 THEN t2.c0 END, ((t2.c0) IS TRUE)))>=((((t2.c0)%(t2.c0)), LIKELIHOOD(DISTINCT t2.c0, 0.913152456890676), (((t2.c0, t2.c0, 0.677782489803696))>((t2.c0, t2.c0, t2.c0))))))) ISNULL));
SELECT ALL * FROM t2;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t2 WHERE (CAST(((vt0.c0)-(t2.c0)) AS TEXT)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t2 WHERE ((NOT (CAST(((vt0.c0)-(t2.c0)) AS TEXT)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t2 WHERE (((CAST(((vt0.c0)-(t2.c0)) AS TEXT)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT ALL t2.c0 FROM t2 CROSS JOIN vt0 ON (((((t2.c0) BETWEEN ('') AND (t2.c0)), CASE WHEN 0.4722168591468373 THEN t2.c0 END, ((vt0.c0)<<(vt0.c0))))<((CAST(vt0.c0 AS INTEGER), t2.c0, CASE t2.c0  WHEN 0.9966689367633685 THEN t2.c0 ELSE vt0.c0 END))) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 CROSS JOIN vt0 ON (((((t2.c0) BETWEEN ('') AND (t2.c0)), CASE WHEN 0.4722168591468373 THEN t2.c0 END, ((vt0.c0)<<(vt0.c0))))<((CAST(vt0.c0 AS INTEGER), t2.c0, CASE t2.c0  WHEN 0.9966689367633685 THEN t2.c0 ELSE vt0.c0 END))) GROUP BY t2.c0 HAVING (MAX(t2.c0) IN ()) UNION ALL SELECT t2.c0 FROM t2 CROSS JOIN vt0 ON (((((t2.c0) BETWEEN ('') AND (t2.c0)), CASE WHEN 0.4722168591468373 THEN t2.c0 END, ((vt0.c0)<<(vt0.c0))))<((CAST(vt0.c0 AS INTEGER), t2.c0, CASE t2.c0  WHEN 0.9966689367633685 THEN t2.c0 ELSE vt0.c0 END))) GROUP BY t2.c0 HAVING (NOT ((MAX(t2.c0) IN ()))) UNION ALL SELECT t2.c0 FROM t2 CROSS JOIN vt0 ON (((((t2.c0) BETWEEN ('') AND (t2.c0)), CASE WHEN 0.4722168591468373 THEN t2.c0 END, ((vt0.c0)<<(vt0.c0))))<((CAST(vt0.c0 AS INTEGER), t2.c0, CASE t2.c0  WHEN 0.9966689367633685 THEN t2.c0 ELSE vt0.c0 END))) GROUP BY t2.c0 HAVING (((MAX(t2.c0) IN ())) ISNULL);
SELECT ALL t2.c0 FROM t2 CROSS JOIN vt0 ON (((((t2.c0) BETWEEN ('') AND (t2.c0)), CASE WHEN 0.4722168591468373 THEN t2.c0 END, ((vt0.c0)<<(vt0.c0))))<((CAST(vt0.c0 AS INTEGER), t2.c0, CASE t2.c0  WHEN 0.9966689367633685 THEN t2.c0 ELSE vt0.c0 END))) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 CROSS JOIN vt0 ON (((((t2.c0) BETWEEN ('') AND (t2.c0)), CASE WHEN 0.4722168591468373 THEN t2.c0 END, ((vt0.c0)<<(vt0.c0))))<((CAST(vt0.c0 AS INTEGER), t2.c0, CASE t2.c0  WHEN 0.9966689367633685 THEN t2.c0 ELSE vt0.c0 END))) GROUP BY t2.c0 HAVING (MAX(t2.c0) IN ()) UNION ALL SELECT t2.c0 FROM t2 CROSS JOIN vt0 ON (((((t2.c0) BETWEEN ('') AND (t2.c0)), CASE WHEN 0.4722168591468373 THEN t2.c0 END, ((vt0.c0)<<(vt0.c0))))<((CAST(vt0.c0 AS INTEGER), t2.c0, CASE t2.c0  WHEN 0.9966689367633685 THEN t2.c0 ELSE vt0.c0 END))) GROUP BY t2.c0 HAVING (NOT ((MAX(t2.c0) IN ()))) UNION ALL SELECT t2.c0 FROM t2 CROSS JOIN vt0 ON (((((t2.c0) BETWEEN ('') AND (t2.c0)), CASE WHEN 0.4722168591468373 THEN t2.c0 END, ((vt0.c0)<<(vt0.c0))))<((CAST(vt0.c0 AS INTEGER), t2.c0, CASE t2.c0  WHEN 0.9966689367633685 THEN t2.c0 ELSE vt0.c0 END))) GROUP BY t2.c0 HAVING (((MAX(t2.c0) IN ())) ISNULL);
SELECT ALL t2.c0 FROM t2 CROSS JOIN vt0 ON (((((t2.c0) BETWEEN ('') AND (t2.c0)), CASE WHEN 0.4722168591468373 THEN t2.c0 END, ((vt0.c0)<<(vt0.c0))))<((CAST(vt0.c0 AS INTEGER), t2.c0, CASE t2.c0  WHEN 0.9966689367633685 THEN t2.c0 ELSE vt0.c0 END))) GROUP BY t2.c0;
SELECT t2.c0, vt0.c0 FROM t2, vt0;
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 WHERE (((('X*')IS(vt0.c0)) IN ())) UNION ALL SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 WHERE ((NOT (((('X*')IS(vt0.c0)) IN ())))) UNION ALL SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 WHERE (((((('X*')IS(vt0.c0)) IN ())) ISNULL));
SELECT t2.c0, vt0.c0 FROM t2, vt0;
SELECT DISTINCT * FROM t2 INNER JOIN vt0 ON (((('671')AND(t2.c0)))AND(x'')) COLLATE RTRIM;
SELECT DISTINCT * FROM t2 INNER JOIN vt0 ON (((('671')AND(t2.c0)))AND(x'')) COLLATE RTRIM WHERE ((((((((t2.c0, vt0.c0, vt0.c0))<>((t2.c0, vt0.c0, t2.c0))))AND((+ (t2.c0)))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION SELECT DISTINCT * FROM t2 INNER JOIN vt0 ON (((('671')AND(t2.c0)))AND(x'')) COLLATE RTRIM WHERE ((NOT ((((((((t2.c0, vt0.c0, vt0.c0))<>((t2.c0, vt0.c0, t2.c0))))AND((+ (t2.c0)))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION SELECT DISTINCT * FROM t2 INNER JOIN vt0 ON (((('671')AND(t2.c0)))AND(x'')) COLLATE RTRIM WHERE ((((((((((t2.c0, vt0.c0, vt0.c0))!=((t2.c0, vt0.c0, t2.c0))))AND((+ (t2.c0)))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t2 INNER JOIN vt0 ON (((('671')AND(t2.c0)))AND(x'')) COLLATE RTRIM;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0, '529195481', vt0.c0)) NOT BETWEEN ((((x'')&(vt0.c0)), ((vt0.c0) NOTNULL), CAST(vt0.c0 AS TEXT))) AND ((((vt0.c0) IS FALSE), ((((x'')AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)*(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0, '529195481', vt0.c0)) NOT BETWEEN ((((x'')&(vt0.c0)), ((vt0.c0) NOTNULL), CAST(vt0.c0 AS TEXT))) AND ((((vt0.c0) IS FALSE), ((((x'')AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)*(vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0, '529195481', vt0.c0)) NOT BETWEEN ((((x'')&(vt0.c0)), ((vt0.c0) NOTNULL), CAST(vt0.c0 AS TEXT))) AND ((((vt0.c0) IS FALSE), ((((x'')AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)*(vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT((~ (SUM(COUNT(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT((~ (SUM(COUNT(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT((~ (SUM(COUNT(vt0.c0)))))) ISNULL);
SELECT * FROM vt0 NATURAL JOIN t2;
SELECT * FROM vt0 NATURAL JOIN t2 WHERE (TRIM(((((x'')AND(0Xffffffffcfdb279c)))OR(t2.c0)))) UNION ALL SELECT * FROM vt0 NATURAL JOIN t2 WHERE ((NOT (TRIM(((((x'')AND(0xffffffffcfdb279c)))OR(t2.c0)))))) UNION ALL SELECT * FROM vt0 NATURAL JOIN t2 WHERE (((TRIM(((((x'')AND(0Xffffffffcfdb279c)))OR(t2.c0)))) ISNULL));
SELECT * FROM vt0 NATURAL JOIN t2;
SELECT DISTINCT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2 WHERE (((((t2.c0) ISNULL)) NOTNULL)) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((NOT (((((t2.c0) ISNULL)) NOTNULL)))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE (((((((t2.c0) ISNULL)) NOTNULL)) ISNULL));
SELECT DISTINCT t2.c0 FROM t2;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE (CAST((('0.9641117808652234') NOT NULL) AS INTEGER)) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((NOT (CAST((('0.9641117808652234') NOT NULL) AS INTEGER)))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE (((CAST((('0.9641117808652234') NOT NULL) AS INTEGER)) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0, vt0.c0 FROM t2 NATURAL JOIN vt0 GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM t2 NATURAL JOIN vt0 GROUP BY t2.c0, vt0.c0 HAVING GROUP_CONCAT(TOTAL(t2.c0)) UNION ALL SELECT t2.c0, vt0.c0 FROM t2 NATURAL JOIN vt0 GROUP BY t2.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(t2.c0)))) UNION ALL SELECT t2.c0, vt0.c0 FROM t2 NATURAL JOIN vt0 GROUP BY t2.c0, vt0.c0 HAVING ((GROUP_CONCAT(TOTAL(t2.c0))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE vt0.c0  WHEN (+ (vt0.c0)) THEN ((vt0.c0)<<(x'')) ELSE vt0.c0 COLLATE NOCASE END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE vt0.c0  WHEN (+ (vt0.c0)) THEN ((vt0.c0)<<(x'')) ELSE vt0.c0 COLLATE NOCASE END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE vt0.c0  WHEN (+ (vt0.c0)) THEN ((vt0.c0)<<(x'')) ELSE vt0.c0 COLLATE NOCASE END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))OR(NULL)))AND(x'')))OR(('' IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))OR(NULL)))AND(x'')))OR(('' IN ())))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))OR(NULL)))AND(x'')))OR(('' IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT ALL t2.c0 FROM t2;
SELECT t2.c0 FROM t2 WHERE (CAST(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)) AS BLOB)) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE ((NOT (CAST(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)) AS BLOB)))) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE (((CAST(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)) AS BLOB)) ISNULL));
SELECT ALL t2.c0 FROM t2;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)OR(vt0.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE ((((CAST(t2.c0 AS TEXT)))<=((t2.c0)))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT ((((CAST(t2.c0 AS TEXT)))<=((t2.c0)))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((((((CAST(t2.c0 AS TEXT)))<=((t2.c0)))) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING MAX((NOT (t2.c0))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (MAX((NOT (t2.c0))))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((MAX((NOT (t2.c0)))) ISNULL);
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING MAX((NOT (t2.c0))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (MAX((NOT (t2.c0))))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((MAX((NOT (t2.c0)))) ISNULL);
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL * FROM t2, vt0;
SELECT ALL * FROM t2, vt0 WHERE (((((((t2.c0)AND(t2.c0)))OR(t2.c0)))|(((vt0.c0)>(t2.c0))))) UNION ALL SELECT * FROM t2, vt0 WHERE ((NOT (((((((t2.c0)AND(t2.c0)))OR(t2.c0)))|(((vt0.c0)>(t2.c0))))))) UNION ALL SELECT ALL * FROM t2, vt0 WHERE (((((((((t2.c0)AND(t2.c0)))OR(t2.c0)))|(((vt0.c0)>(t2.c0))))) ISNULL));
SELECT ALL * FROM t2, vt0;
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE (((((((t2.c0)AND(t2.c0)))OR(t2.c0)))/(((t2.c0)GLOB(t2.c0))))) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT (((((((t2.c0)AND(t2.c0)))OR(t2.c0)))/(((t2.c0)GLOB(t2.c0))))))) UNION SELECT DISTINCT * FROM t2 WHERE (((((((((t2.c0)AND(t2.c0)))OR(t2.c0)))/(((t2.c0)GLOB(t2.c0))))) ISNULL));
SELECT DISTINCT * FROM t2;
SELECT vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 WHERE ((t2.c0 IN ()) COLLATE NOCASE) GROUP BY vt0.c0, t2.c0 UNION SELECT vt0.c0, t2.c0 FROM t2, vt0 WHERE ((NOT ((t2.c0 IN ()) COLLATE NOCASE))) GROUP BY vt0.c0, t2.c0 UNION SELECT vt0.c0, t2.c0 FROM t2, vt0 WHERE ((((t2.c0 IN ()) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ABS(DISTINCT MAX(MAX(vt0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (ABS(DISTINCT MAX(MAX(vt0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((ABS(DISTINCT MAX(MAX(vt0.c0)) COLLATE RTRIM)) ISNULL);
SELECT ALL vt0.c0 FROM vt0, t2;
SELECT ALL vt0.c0 FROM vt0, t2 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(NULL)))AND('9zne')))AND(NULL)))>((((vt0.c0, vt0.c0, t2.c0, vt0.c0, 'g..2ytF]')) NOT BETWEEN ((t2.c0, t2.c0, t2.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, t2.c0, vt0.c0, t2.c0, t2.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0, t2 WHERE ((NOT (((((((((((vt0.c0)AND(vt0.c0)))OR(NULL)))AND('9zne')))AND(NULL)))>((((vt0.c0, vt0.c0, t2.c0, vt0.c0, 'g..2ytF]')) NOT BETWEEN ((t2.c0, t2.c0, t2.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, t2.c0, vt0.c0, t2.c0, t2.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t2 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))OR(NULL)))AND('9zne')))AND(NULL)))>((((vt0.c0, vt0.c0, t2.c0, vt0.c0, 'g..2ytF]')) NOT BETWEEN ((t2.c0, t2.c0, t2.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, t2.c0, vt0.c0, t2.c0, t2.c0)))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0, t2;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS BLOB)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS BLOB)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t2 WHERE (((vt0.c0 IN ()) IN (CAST(vt0.c0 AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t2 WHERE ((NOT (((vt0.c0 IN ()) IN (CAST(vt0.c0 AS NUMERIC)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t2 WHERE (((((vt0.c0 IN ()) IN (CAST(vt0.c0 AS NUMERIC)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT t2.c0, vt0.c0 FROM vt0, t2 GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM vt0, t2 GROUP BY t2.c0, vt0.c0 HAVING ((AVG(MIN(SUM(COUNT(vt0.c0)))))<<('HZ,F')) UNION ALL SELECT t2.c0, vt0.c0 FROM vt0, t2 GROUP BY t2.c0, vt0.c0 HAVING (NOT (((AVG(MIN(SUM(COUNT(vt0.c0)))))<<('HZ,F')))) UNION ALL SELECT ALL t2.c0, vt0.c0 FROM vt0, t2 GROUP BY t2.c0, vt0.c0 HAVING ((((AVG(MIN(SUM(COUNT(vt0.c0)))))<<('HZ,F'))) ISNULL);
SELECT ALL * FROM t2;
SELECT ALL * FROM t2 WHERE (((((t2.c0)<<(t2.c0))) NOT BETWEEN ((t2.c0 IN ())) AND (x'bf1c'))) UNION ALL SELECT * FROM t2 WHERE ((NOT (((((t2.c0)<<(t2.c0))) NOT BETWEEN ((t2.c0 IN ())) AND (x'bf1c'))))) UNION ALL SELECT ALL * FROM t2 WHERE (((((((t2.c0)<<(t2.c0))) NOT BETWEEN ((t2.c0 IN ())) AND (x'bf1c'))) ISNULL));
SELECT ALL * FROM t2;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (x'') UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((x'') ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0) IS TRUE))OR(((3.9138214E8) NOT NULL))))OR((~ (vt0.c0)))))OR(((vt0.c0) ISNULL))))AND(CAST(vt0.c0 AS REAL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((((vt0.c0) IS TRUE))OR(((3.9138214E8) NOT NULL))))OR((~ (vt0.c0)))))OR(((vt0.c0) ISNULL))))AND(CAST(vt0.c0 AS REAL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((((vt0.c0) IS TRUE))OR(((3.9138214E8) NOT NULL))))OR((~ (vt0.c0)))))OR(((vt0.c0) ISNULL))))AND(CAST(vt0.c0 AS REAL)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING COUNT(COUNT(*) COLLATE RTRIM) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (COUNT(COUNT(*) COLLATE RTRIM))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((COUNT(COUNT(*) COLLATE RTRIM)) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((vt0.c0)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0, t2;
SELECT DISTINCT vt0.c0 FROM vt0, t2 WHERE ((((CAST(t2.c0 AS REAL)))>=((((('w07\*M+P'''))<((vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t2 WHERE ((NOT ((((CAST(t2.c0 AS REAL)))>=((((('w07\*M+P'''))<((vt0.c0))))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t2 WHERE ((((((CAST(t2.c0 AS REAL)))>=((((('w07\*M+P'''))<((vt0.c0))))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, t2;
SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0;
SELECT t2.c0 FROM vt0, t2 WHERE (((((((t2.c0)OR(t2.c0)))OR(x'0385')))<(((vt0.c0)AND(t2.c0))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM vt0, t2 NOT INDEXED WHERE ((NOT (((((((t2.c0)OR(t2.c0)))OR(x'0385')))<(((vt0.c0)AND(t2.c0))))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM vt0, t2 WHERE (((((((((t2.c0)OR(t2.c0)))OR(x'0385')))<(((vt0.c0)AND(t2.c0))))) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0;
SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING ((TOTAL(COUNT(vt0.c0))) BETWEEN ((+ (TOTAL(vt0.c0)))) AND (COUNT(*))) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING (NOT (((TOTAL(COUNT(vt0.c0))) BETWEEN ((+ (TOTAL(vt0.c0)))) AND (COUNT(*))))) UNION ALL SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING ((((TOTAL(COUNT(vt0.c0))) BETWEEN ((+ (TOTAL(vt0.c0)))) AND (COUNT(*)))) ISNULL);
SELECT t2.c0 FROM vt0 INNER JOIN t2 ON LIKELIHOOD(DISTINCT t2.c0, 0.09524349333045534);
SELECT t2.c0 FROM vt0 INNER JOIN t2 ON LIKELIHOOD(DISTINCT t2.c0, 0.09524349333045534) WHERE (CASE WHEN '/km0' THEN ((t2.c0)-(t2.c0)) END) UNION ALL SELECT ALL t2.c0 FROM vt0 INNER JOIN t2 ON LIKELIHOOD(DISTINCT t2.c0, 0.09524349333045534) WHERE ((NOT (CASE WHEN '/km0' THEN ((t2.c0)-(t2.c0)) END))) UNION ALL SELECT ALL t2.c0 FROM vt0 INNER JOIN t2 ON LIKELIHOOD(DISTINCT t2.c0, 0.09524349333045534) WHERE (((CASE WHEN '/km0' THEN ((t2.c0)-(t2.c0)) END) ISNULL));
SELECT t2.c0 FROM vt0 INNER JOIN t2 ON LIKELIHOOD(DISTINCT t2.c0, 0.09524349333045534);
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE ((((((t2.c0)AND(t2.c0))))>=((CASE WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END)))) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT ((((((t2.c0)AND(t2.c0))))>=((CASE WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END)))))) UNION SELECT DISTINCT * FROM t2 WHERE ((((((((t2.c0)AND(t2.c0))))>=((CASE WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END)))) ISNULL));
SELECT DISTINCT * FROM t2;
SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 WHERE (((CASE WHEN t2.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t2.c0 THEN t2.c0 WHEN vt0.c0 THEN t2.c0 END)>>(((t2.c0)&(x''))))) GROUP BY vt0.c0, t2.c0 UNION SELECT vt0.c0, t2.c0 FROM vt0, t2 WHERE ((NOT (((CASE WHEN t2.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t2.c0 THEN t2.c0 WHEN vt0.c0 THEN t2.c0 END)>>(((t2.c0)&(x''))))))) GROUP BY vt0.c0, t2.c0 UNION SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 WHERE (((((CASE WHEN t2.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t2.c0 THEN t2.c0 WHEN vt0.c0 THEN t2.c0 END)>>(((t2.c0)&(x''))))) ISNULL)) GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING COUNT(SUM(COUNT('0.8237354152075343'))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (COUNT(SUM(COUNT('0.8237354152075343'))))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((COUNT(SUM(COUNT('0.8237354152075343')))) ISNULL);
SELECT * FROM t2, vt0;
SELECT ALL * FROM t2, vt0 WHERE (CAST((t2.c0 IN ()) AS REAL)) UNION ALL SELECT * FROM t2, vt0 WHERE ((NOT (CAST((t2.c0 IN ()) AS REAL)))) UNION ALL SELECT ALL * FROM t2, vt0 WHERE (((CAST((t2.c0 IN ()) AS REAL)) ISNULL));
SELECT * FROM t2, vt0;
SELECT DISTINCT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2 WHERE ((t2.c0 IN ())) UNION SELECT DISTINCT t2.c0 FROM t2 NOT INDEXED WHERE ((NOT ((t2.c0 IN ())))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((((t2.c0 IN ())) ISNULL));
SELECT DISTINCT t2.c0 FROM t2;
SELECT ALL vt0.c0 FROM t2, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t2, vt0 WHERE (NULL) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t2, vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t2, vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t2, vt0 GROUP BY vt0.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING GROUP_CONCAT(0X64aa0f41) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (GROUP_CONCAT(0x64aa0f41))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((GROUP_CONCAT(0x64aa0f41)) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING GROUP_CONCAT(0X64aa0f41) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (GROUP_CONCAT(0x64aa0f41))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((GROUP_CONCAT(0x64aa0f41)) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT * FROM t2 NOT INDEXED;
SELECT * FROM t2 WHERE ((CASE t2.c0  WHEN -1886605974 THEN x'' WHEN NULL THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 END IN ())) UNION ALL SELECT ALL * FROM t2 WHERE ((NOT ((CASE t2.c0  WHEN -1886605974 THEN x'' WHEN NULL THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 END IN ())))) UNION ALL SELECT * FROM t2 WHERE ((((CASE t2.c0  WHEN -1886605974 THEN x'' WHEN NULL THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 END IN ())) ISNULL));
SELECT * FROM t2 NOT INDEXED;
SELECT DISTINCT * FROM t2, vt0;
SELECT DISTINCT * FROM t2, vt0 WHERE (UPPER((vt0.c0 IN ()))) UNION SELECT DISTINCT * FROM t2, vt0 WHERE ((NOT (UPPER((vt0.c0 IN ()))))) UNION SELECT DISTINCT * FROM t2, vt0 WHERE (((UPPER((vt0.c0 IN ()))) ISNULL));
SELECT DISTINCT * FROM t2, vt0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE (((((CAST(t2.c0 AS NUMERIC))AND(t2.c0 COLLATE BINARY)))AND(t2.c0 COLLATE BINARY))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT (((((CAST(t2.c0 AS NUMERIC))AND(t2.c0 COLLATE BINARY)))AND(t2.c0 COLLATE BINARY))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE (((((((CAST(t2.c0 AS NUMERIC))AND(t2.c0 COLLATE BINARY)))AND(t2.c0 COLLATE BINARY))) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT vt0.c0 FROM t2 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t2 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c0 HAVING '*zBq' UNION ALL SELECT vt0.c0 FROM t2 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c0 HAVING (NOT ('*zBq')) UNION ALL SELECT ALL vt0.c0 FROM t2 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c0 HAVING (('*zBq') ISNULL);
SELECT vt0.c0 FROM t2 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t2 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c0 HAVING '*zBq' UNION ALL SELECT vt0.c0 FROM t2 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c0 HAVING (NOT ('*zBq')) UNION ALL SELECT ALL vt0.c0 FROM t2 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c0 HAVING (('*zBq') ISNULL);
SELECT vt0.c0 FROM t2 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c0;
SELECT ALL t2.c0 FROM t2;
SELECT t2.c0 FROM t2 WHERE (t2.c0) UNION ALL SELECT t2.c0 FROM t2 WHERE ((NOT (t2.c0))) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE (((t2.c0) ISNULL));
SELECT ALL t2.c0 FROM t2;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN '2TOZH' THEN (((-2.45159347E8)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN '2TOZH' THEN (((-2.45159347E8)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN '2TOZH' THEN (((-2.45159347E8)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0 COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((NOT (vt0.c0 COLLATE RTRIM))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((NOT (vt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN t2 ON '' GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN t2 ON '' GROUP BY vt0.c0 HAVING GROUP_CONCAT(((GROUP_CONCAT(GROUP_CONCAT(COUNT(MAX(vt0.c0)))))<=(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN t2 ON '' GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(((GROUP_CONCAT(GROUP_CONCAT(COUNT(MAX(vt0.c0)))))<=(COUNT(*)))))) UNION ALL SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN t2 ON '' GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(((GROUP_CONCAT(GROUP_CONCAT(COUNT(MAX(vt0.c0)))))<=(COUNT(*))))) ISNULL);
SELECT * FROM vt0, t2;
SELECT ALL * FROM vt0, t2 WHERE (CAST(CAST(t2.c0 AS TEXT) AS BLOB)) UNION ALL SELECT * FROM vt0, t2 WHERE ((NOT (CAST(CAST(t2.c0 AS TEXT) AS BLOB)))) UNION ALL SELECT ALL * FROM vt0, t2 WHERE (((CAST(CAST(t2.c0 AS TEXT) AS BLOB)) ISNULL));
SELECT * FROM vt0, t2;
SELECT DISTINCT t2.c0 FROM vt0 FULL OUTER JOIN t2 ON CAST(vt0.c0 AS REAL);
SELECT DISTINCT t2.c0 FROM vt0 FULL OUTER JOIN t2 ON CAST(vt0.c0 AS REAL) WHERE (((t2.c0 COLLATE BINARY) NOT NULL)) UNION SELECT DISTINCT t2.c0 FROM vt0 FULL OUTER JOIN t2 ON CAST(vt0.c0 AS REAL) WHERE ((NOT (((t2.c0 COLLATE BINARY) NOT NULL)))) UNION SELECT DISTINCT t2.c0 FROM vt0 FULL OUTER JOIN t2 ON CAST(vt0.c0 AS REAL) WHERE (((((t2.c0 COLLATE BINARY) NOT NULL)) ISNULL));
SELECT DISTINCT t2.c0 FROM vt0 FULL OUTER JOIN t2 ON CAST(vt0.c0 AS REAL);
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 WHERE ((((t2.c0 COLLATE RTRIM))<=((t2.c0)))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((NOT ((((t2.c0 COLLATE RTRIM))<=((t2.c0)))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((((((t2.c0 COLLATE RTRIM))<=((t2.c0)))) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT vt0.c0, t2.c0 FROM t2 FULL OUTER JOIN vt0 ON ((t2.c0) NOT BETWEEN (t2.c0) AND (vt0.c0)) COLLATE RTRIM GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM t2 FULL OUTER JOIN vt0 ON ((t2.c0) NOT BETWEEN (t2.c0) AND (vt0.c0)) COLLATE RTRIM GROUP BY vt0.c0, t2.c0 HAVING ((((COUNT(t2.c0))OR(TOTAL(GROUP_CONCAT(t2.c0)))))OR(x'75d0')) UNION ALL SELECT vt0.c0, t2.c0 FROM t2 FULL OUTER JOIN vt0 ON ((t2.c0) NOT BETWEEN (t2.c0) AND (vt0.c0)) COLLATE RTRIM GROUP BY vt0.c0, t2.c0 HAVING (NOT (((((COUNT(t2.c0))OR(TOTAL(GROUP_CONCAT(t2.c0)))))OR(x'75d0')))) UNION ALL SELECT vt0.c0, t2.c0 FROM t2 FULL OUTER JOIN vt0 ON ((t2.c0) NOT BETWEEN (t2.c0) AND (vt0.c0)) COLLATE RTRIM GROUP BY vt0.c0, t2.c0 HAVING ((((((COUNT(t2.c0))OR(TOTAL(GROUP_CONCAT(t2.c0)))))OR(x'75d0'))) ISNULL);
SELECT * FROM t2;
SELECT * FROM t2 WHERE (CAST(((t2.c0) NOT NULL) AS BLOB)) UNION ALL SELECT * FROM t2 WHERE ((NOT (CAST(((t2.c0) NOT NULL) AS BLOB)))) UNION ALL SELECT ALL * FROM t2 WHERE (((CAST(((t2.c0) NOT NULL) AS BLOB)) ISNULL));
SELECT * FROM t2;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))>(((vt0.c0) NOTNULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS INTEGER))>(((vt0.c0) NOTNULL)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))>(((vt0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 WHERE ((((t2.c0 IN ()))LIKE(((((t2.c0)OR(t2.c0)))AND(t2.c0))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT ((((t2.c0 IN ()))LIKE(((((t2.c0)OR(t2.c0)))AND(t2.c0))))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((((((t2.c0 IN ()))LIKE(((((t2.c0)OR(t2.c0)))AND(t2.c0))))) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING COUNT(((GROUP_CONCAT(SUM(vt0.c0)))&(AVG(0.8814046966158812)))) UNION ALL SELECT t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING (NOT (COUNT(((GROUP_CONCAT(SUM(vt0.c0)))&(AVG(0.8814046966158812)))))) UNION ALL SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0 HAVING ((COUNT(((GROUP_CONCAT(SUM(vt0.c0)))&(AVG(0.8814046966158812))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((NOT (vt0.c0)))<>((~ (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((NOT (vt0.c0)))<>((~ (vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((NOT (vt0.c0)))<>((~ (vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT t2.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t2 ON (- ((vt0.c0 IN ())));
SELECT DISTINCT t2.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t2 ON (- ((vt0.c0 IN ()))) WHERE (CAST('u' COLLATE BINARY AS TEXT)) UNION SELECT DISTINCT t2.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t2 ON (- ((vt0.c0 IN ()))) WHERE ((NOT (CAST('u' COLLATE BINARY AS TEXT)))) UNION SELECT DISTINCT t2.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t2 ON (- ((vt0.c0 IN ()))) WHERE (((CAST('u' COLLATE BINARY AS TEXT)) ISNULL));
SELECT DISTINCT t2.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t2 ON (- ((vt0.c0 IN ())));
SELECT vt0.c0 FROM t2 INNER JOIN vt0 ON vt0.c0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t2 INNER JOIN vt0 ON vt0.c0 WHERE (t2.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t2 INNER JOIN vt0 ON vt0.c0 WHERE ((NOT (t2.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t2 INNER JOIN vt0 ON vt0.c0 WHERE (((t2.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM t2 INNER JOIN vt0 ON vt0.c0 GROUP BY vt0.c0;
SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0;
SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING TOTAL(SUM('')) UNION ALL SELECT ALL t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING (NOT (TOTAL(SUM('')))) UNION ALL SELECT ALL t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING ((TOTAL(SUM(''))) ISNULL);
SELECT ALL t2.c0, vt0.c0 FROM t2 CROSS JOIN vt0 ON (((((((('-406519963')AND(vt0.c0)))AND(t2.c0)))AND(vt0.c0)))OR(((((((((t2.c0)AND(NULL)))AND(vt0.c0)))AND(vt0.c0)))AND(t2.c0))));
SELECT t2.c0, vt0.c0 FROM t2 CROSS JOIN vt0 ON (((((((('-406519963')AND(vt0.c0)))AND(t2.c0)))AND(vt0.c0)))OR(((((((((t2.c0)AND(NULL)))AND(vt0.c0)))AND(vt0.c0)))AND(t2.c0)))) WHERE ((((vt0.c0)) BETWEEN ((((t2.c0)IS(t2.c0)))) AND (((+ (vt0.c0)))))) UNION ALL SELECT t2.c0, vt0.c0 FROM t2 CROSS JOIN vt0 ON (((((((('-406519963')AND(vt0.c0)))AND(t2.c0)))AND(vt0.c0)))OR(((((((((t2.c0)AND(NULL)))AND(vt0.c0)))AND(vt0.c0)))AND(t2.c0)))) WHERE ((NOT ((((vt0.c0)) BETWEEN ((((t2.c0)IS(t2.c0)))) AND (((+ (vt0.c0)))))))) UNION ALL SELECT ALL t2.c0, vt0.c0 FROM t2 CROSS JOIN vt0 ON (((((((('-406519963')AND(vt0.c0)))AND(t2.c0)))AND(vt0.c0)))OR(((((((((t2.c0)AND(NULL)))AND(vt0.c0)))AND(vt0.c0)))AND(t2.c0)))) WHERE ((((((vt0.c0)) BETWEEN ((((t2.c0)IS(t2.c0)))) AND (((+ (vt0.c0)))))) ISNULL));
SELECT ALL t2.c0, vt0.c0 FROM t2 CROSS JOIN vt0 ON (((((((('-406519963')AND(vt0.c0)))AND(t2.c0)))AND(vt0.c0)))OR(((((((((t2.c0)AND(NULL)))AND(vt0.c0)))AND(vt0.c0)))AND(t2.c0))));
SELECT DISTINCT vt0.c0, t2.c0 FROM t2, vt0;
SELECT DISTINCT vt0.c0, t2.c0 FROM t2, vt0 WHERE (((t2.c0)IS((vt0.c0 IN ())))) UNION SELECT DISTINCT vt0.c0, t2.c0 FROM t2, vt0 WHERE ((NOT (((t2.c0)IS((vt0.c0 IN ())))))) UNION SELECT DISTINCT vt0.c0, t2.c0 FROM t2, vt0 WHERE (((((t2.c0)IS((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0, t2.c0 FROM t2, vt0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE (DATE((t2.c0 IN ()), ((t2.c0) NOT NULL), CAST(t2.c0 AS BLOB))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT (DATE((t2.c0 IN ()), ((t2.c0) NOT NULL), CAST(t2.c0 AS BLOB))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE (((DATE((t2.c0 IN ()), ((t2.c0) NOT NULL), CAST(t2.c0 AS BLOB))) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0;
SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING CASE MIN(AVG(COUNT(t2.c0)))  WHEN SUM(vt0.c0) THEN '<V' WHEN MAX(t2.c0) THEN x'' WHEN MIN(MAX(t2.c0)) THEN MAX(vt0.c0) WHEN ((GROUP_CONCAT(t2.c0)) NOTNULL) THEN (+ (MAX(MIN('-882204481')))) WHEN TOTAL(COUNT(*)) THEN COUNT(*) ELSE ((vt0.c0)>>(MAX(t2.c0))) END UNION ALL SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING (NOT (CASE MIN(AVG(COUNT(t2.c0)))  WHEN SUM(vt0.c0) THEN '<V' WHEN MAX(t2.c0) THEN x'' WHEN MIN(MAX(t2.c0)) THEN MAX(vt0.c0) WHEN ((GROUP_CONCAT(t2.c0)) NOTNULL) THEN (+ (MAX(MIN('-882204481')))) WHEN TOTAL(COUNT(*)) THEN COUNT(*) ELSE ((vt0.c0)>>(MAX(t2.c0))) END)) UNION ALL SELECT ALL t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING ((CASE MIN(AVG(COUNT(t2.c0)))  WHEN SUM(vt0.c0) THEN '<V' WHEN MAX(t2.c0) THEN x'' WHEN MIN(MAX(t2.c0)) THEN MAX(vt0.c0) WHEN ((GROUP_CONCAT(t2.c0)) NOTNULL) THEN (+ (MAX(MIN('-882204481')))) WHEN TOTAL(COUNT(*)) THEN COUNT(*) ELSE ((vt0.c0)>>(MAX(t2.c0))) END) ISNULL);
SELECT ALL * FROM t2, vt0;
SELECT ALL * FROM t2, vt0 WHERE (t2.c0) UNION ALL SELECT ALL * FROM t2, vt0 WHERE ((NOT (t2.c0))) UNION ALL SELECT * FROM t2 NOT INDEXED, vt0 WHERE (((t2.c0) ISNULL));
SELECT ALL * FROM t2, vt0;
SELECT DISTINCT t2.c0 FROM vt0 RIGHT OUTER JOIN t2 ON ((vt0.c0)/(json_type(vt0.c0)));
SELECT DISTINCT t2.c0 FROM vt0 RIGHT OUTER JOIN t2 ON ((vt0.c0)/(json_type(vt0.c0))) WHERE (t2.c0) UNION SELECT DISTINCT t2.c0 FROM vt0 RIGHT OUTER JOIN t2 ON ((vt0.c0)/(json_type(vt0.c0))) WHERE ((NOT (t2.c0))) UNION SELECT DISTINCT t2.c0 FROM vt0 RIGHT OUTER JOIN t2 ON ((vt0.c0)/(json_type(vt0.c0))) WHERE (((t2.c0) ISNULL));
SELECT DISTINCT t2.c0 FROM vt0 RIGHT OUTER JOIN t2 ON ((vt0.c0)/(json_type(vt0.c0)));
SELECT t2.c0 FROM t2 NOT INDEXED, vt0 GROUP BY t2.c0;
SELECT t2.c0 FROM t2, vt0 WHERE (CASE WHEN ((vt0.c0)IS NOT(t2.c0)) THEN vt0.c0 COLLATE BINARY ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(t2.c0)))AND(t2.c0)) END) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2, vt0 WHERE ((NOT (CASE WHEN ((vt0.c0)IS NOT(t2.c0)) THEN vt0.c0 COLLATE BINARY ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(t2.c0)))AND(t2.c0)) END))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2, vt0 WHERE (((CASE WHEN ((vt0.c0)IS NOT(t2.c0)) THEN vt0.c0 COLLATE BINARY ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(t2.c0)))AND(t2.c0)) END) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 NOT INDEXED, vt0 GROUP BY t2.c0;
SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT ALL MIN(CASE WHEN ((t2.c0)IS(t2.c0)) THEN ((((t2.c0)OR(t2.c0)))OR(t2.c0)) WHEN t2.c0 COLLATE RTRIM THEN t2.c0 WHEN t2.c0 COLLATE RTRIM THEN t2.c0 COLLATE BINARY END) FROM t2 ORDER BY (CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END IN ()) ASC;
SELECT ALL * FROM vt0, t2;
SELECT ALL * FROM vt0, t2 WHERE ((('\n1oG')<>(((((((((t2.c0)AND(vt0.c0)))AND(vt0.c0)))OR(NULL)))OR(t2.c0))))) UNION ALL SELECT ALL * FROM vt0, t2 WHERE ((NOT ((('\n1oG')!=(((((((((t2.c0)AND(vt0.c0)))AND(vt0.c0)))OR(NULL)))OR(t2.c0))))))) UNION ALL SELECT ALL * FROM vt0, t2 WHERE ((((('\n1oG')!=(((((((((t2.c0)AND(vt0.c0)))AND(vt0.c0)))OR(NULL)))OR(t2.c0))))) ISNULL));
SELECT ALL * FROM vt0, t2;
SELECT DISTINCT vt0.c0, t2.c0 FROM vt0, t2;
SELECT DISTINCT vt0.c0, t2.c0 FROM vt0, t2 WHERE (((CASE WHEN vt0.c0 THEN t2.c0 END)<=(((vt0.c0) ISNULL)))) UNION SELECT DISTINCT vt0.c0, t2.c0 FROM vt0, t2 WHERE ((NOT (((CASE WHEN vt0.c0 THEN t2.c0 END)<=(((vt0.c0) ISNULL)))))) UNION SELECT DISTINCT vt0.c0, t2.c0 FROM vt0, t2 WHERE (((((CASE WHEN vt0.c0 THEN t2.c0 END)<=(((vt0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT vt0.c0, t2.c0 FROM vt0, t2;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE ((((t2.c0 COLLATE NOCASE))>=((t2.c0 COLLATE BINARY)))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT ((((t2.c0 COLLATE NOCASE))>=((t2.c0 COLLATE BINARY)))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((((((t2.c0 COLLATE NOCASE))>=((t2.c0 COLLATE BINARY)))) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0 HAVING MAX(GROUP_CONCAT(SUM(t2.c0))) UNION ALL SELECT vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0 HAVING (NOT (MAX(GROUP_CONCAT(SUM(t2.c0))))) UNION ALL SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0 HAVING ((MAX(GROUP_CONCAT(SUM(t2.c0)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))<<(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS REAL))<<(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))<<(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM t2 INNER JOIN vt0 ON (~ ((t2.c0 IN ())));
SELECT DISTINCT * FROM t2 INNER JOIN vt0 ON (~ ((t2.c0 IN ()))) WHERE (CAST(((vt0.c0) BETWEEN (t2.c0) AND (t2.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM t2 INNER JOIN vt0 ON (~ ((t2.c0 IN ()))) WHERE ((NOT (CAST(((vt0.c0) BETWEEN (t2.c0) AND (t2.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM t2 INNER JOIN vt0 ON (~ ((t2.c0 IN ()))) WHERE (((CAST(((vt0.c0) BETWEEN (t2.c0) AND (t2.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM t2 INNER JOIN vt0 ON (~ ((t2.c0 IN ())));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS INTEGER)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST((vt0.c0 IN ()) AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST((vt0.c0 IN ()) AS INTEGER)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t2.c0 FROM t2 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t2.c0)))<=(((vt0.c0)AND(vt0.c0)))) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t2.c0)))<=(((vt0.c0)AND(vt0.c0)))) GROUP BY t2.c0 HAVING AVG(TOTAL(vt0.c0)) UNION ALL SELECT t2.c0 FROM t2 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t2.c0)))<=(((vt0.c0)AND(vt0.c0)))) GROUP BY t2.c0 HAVING (NOT (AVG(TOTAL(vt0.c0)))) UNION ALL SELECT ALL t2.c0 FROM t2 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t2.c0)))<=(((vt0.c0)AND(vt0.c0)))) GROUP BY t2.c0 HAVING ((AVG(TOTAL(vt0.c0))) ISNULL);
SELECT * FROM vt0 INNER JOIN t2 ON ((((((((((t2.c0)IS(vt0.c0)))OR(CASE vt0.c0  WHEN t2.c0 THEN vt0.c0 END)))AND(((vt0.c0)*(vt0.c0)))))AND(((t2.c0) NOT BETWEEN (vt0.c0) AND (t2.c0)))))OR((t2.c0 IN ())));
SELECT * FROM vt0 INNER JOIN t2 ON ((((((((((t2.c0)IS(vt0.c0)))OR(CASE vt0.c0  WHEN t2.c0 THEN vt0.c0 END)))AND(((vt0.c0)*(vt0.c0)))))AND(((t2.c0) NOT BETWEEN (vt0.c0) AND (t2.c0)))))OR((t2.c0 IN ()))) WHERE ((((- (vt0.c0)))AND(((vt0.c0) IS FALSE)))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN t2 ON ((((((((((t2.c0)IS(vt0.c0)))OR(CASE vt0.c0  WHEN t2.c0 THEN vt0.c0 END)))AND(((vt0.c0)*(vt0.c0)))))AND(((t2.c0) NOT BETWEEN (vt0.c0) AND (t2.c0)))))OR((t2.c0 IN ()))) WHERE ((NOT ((((- (vt0.c0)))AND(((vt0.c0) IS FALSE)))))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN t2 ON ((((((((((t2.c0)IS(vt0.c0)))OR(CASE vt0.c0  WHEN t2.c0 THEN vt0.c0 END)))AND(((vt0.c0)*(vt0.c0)))))AND(((t2.c0) NOT BETWEEN (vt0.c0) AND (t2.c0)))))OR((t2.c0 IN ()))) WHERE ((((((- (vt0.c0)))AND(((vt0.c0) IS FALSE)))) ISNULL));
SELECT * FROM vt0 INNER JOIN t2 ON ((((((((((t2.c0)IS(vt0.c0)))OR(CASE vt0.c0  WHEN t2.c0 THEN vt0.c0 END)))AND(((vt0.c0)*(vt0.c0)))))AND(((t2.c0) NOT BETWEEN (vt0.c0) AND (t2.c0)))))OR((t2.c0 IN ())));
SELECT DISTINCT t2.c0, vt0.c0 FROM t2 CROSS JOIN vt0 ON (+ (t2.c0)) COLLATE RTRIM;
SELECT DISTINCT t2.c0, vt0.c0 FROM t2 CROSS JOIN vt0 ON (+ (t2.c0)) COLLATE RTRIM WHERE (NULLIF(DISTINCT CAST(vt0.c0 AS NUMERIC), ((t2.c0)IS NOT(vt0.c0)))) UNION SELECT DISTINCT t2.c0, vt0.c0 FROM t2 CROSS JOIN vt0 ON (+ (t2.c0)) COLLATE RTRIM WHERE ((NOT (NULLIF(DISTINCT CAST(vt0.c0 AS NUMERIC), ((t2.c0)IS NOT(vt0.c0)))))) UNION SELECT DISTINCT t2.c0, vt0.c0 FROM t2 CROSS JOIN vt0 ON (+ (t2.c0)) COLLATE RTRIM WHERE (((NULLIF(DISTINCT CAST(vt0.c0 AS NUMERIC), ((t2.c0)IS NOT(vt0.c0)))) ISNULL));
SELECT DISTINCT t2.c0, vt0.c0 FROM t2 CROSS JOIN vt0 ON (+ (t2.c0)) COLLATE RTRIM;
SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM vt0, t2 WHERE (((((t2.c0) BETWEEN ('PA''v0y*v8') AND ('-494122845'))) NOT BETWEEN ('978389524') AND (t2.c0))) GROUP BY vt0.c0, t2.c0 UNION SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 WHERE ((NOT (((((t2.c0) BETWEEN ('PA''v0y*v8') AND ('-494122845'))) NOT BETWEEN ('978389524') AND (t2.c0))))) GROUP BY vt0.c0, t2.c0 UNION SELECT vt0.c0, t2.c0 FROM vt0, t2 WHERE (((((((t2.c0) BETWEEN ('PA''v0y*v8') AND ('-494122845'))) NOT BETWEEN ('978389524') AND (t2.c0))) ISNULL)) GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING AVG(SUM(GROUP_CONCAT(MAX(t2.c0)))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (AVG(SUM(GROUP_CONCAT(MAX(t2.c0)))))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((AVG(SUM(GROUP_CONCAT(MAX(t2.c0))))) ISNULL);
SELECT SUM(((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0)<=(vt0.c0)))))OR(NULL)))OR(((vt0.c0) ISNULL))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0 ORDER BY CASE ROUND(vt0.c0, vt0.c0)  WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)LIKE(vt0.c0)) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN UPPER(DISTINCT vt0.c0) WHEN ((vt0.c0)&(vt0.c0)) THEN ((('m*T{0e'))==((vt0.c0))) WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0) NOT NULL) ELSE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR('')) END ASC;
SELECT ALL * FROM t2;
SELECT * FROM t2 WHERE (((json(t2.c0)) ISNULL)) UNION ALL SELECT * FROM t2 WHERE ((NOT (((json(t2.c0)) ISNULL)))) UNION ALL SELECT * FROM t2 WHERE (((((json(t2.c0)) ISNULL)) ISNULL));
SELECT ALL * FROM t2;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN (NOT (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE vt0.c0 END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE (vt0.c0 IN ())  WHEN (NOT (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE vt0.c0 END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE (vt0.c0 IN ())  WHEN (NOT (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE vt0.c0 END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM vt0, t2 WHERE ((((''))>((CASE WHEN vt0.c0 THEN NULL END)))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM vt0, t2 WHERE ((NOT ((((''))>((CASE WHEN vt0.c0 THEN NULL END)))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM vt0, t2 WHERE ((((((''))>((CASE WHEN vt0.c0 THEN NULL END)))) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0, t2;
SELECT ALL * FROM vt0, t2 WHERE (((t2.c0)AND(t2.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM vt0, t2 WHERE ((NOT (((t2.c0)AND(t2.c0)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt0, t2 WHERE (((((t2.c0)AND(t2.c0)) COLLATE BINARY) ISNULL));
SELECT * FROM vt0, t2;
SELECT DISTINCT * FROM t2 NOT INDEXED;
SELECT DISTINCT * FROM t2 WHERE (NULL) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM t2 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM t2 NOT INDEXED;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) ISNULL))<(((NULL) BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) ISNULL))<(((NULL) BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) ISNULL))<(((NULL) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (~ (((((t2.c0)OR(COUNT(AVG(t2.c0)))))OR(COUNT(MIN('1115853106')))))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT ((~ (((((t2.c0)OR(COUNT(AVG(t2.c0)))))OR(COUNT(MIN('1115853106')))))))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (((~ (((((t2.c0)OR(COUNT(AVG(t2.c0)))))OR(COUNT(MIN('1115853106'))))))) ISNULL);
SELECT TOTAL((- (vt0.c0)) COLLATE BINARY) FROM vt0;
SELECT * FROM t2;
SELECT ALL * FROM t2 WHERE ((((t2.c0)) BETWEEN (((- (t2.c0)))) AND ((t2.c0 COLLATE BINARY)))) UNION ALL SELECT * FROM t2 WHERE ((NOT ((((t2.c0)) BETWEEN (((- (t2.c0)))) AND ((t2.c0 COLLATE BINARY)))))) UNION ALL SELECT * FROM t2 WHERE ((((((t2.c0)) BETWEEN (((- (t2.c0)))) AND ((t2.c0 COLLATE BINARY)))) ISNULL));
SELECT * FROM t2;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 WHERE (NULL) GROUP BY vt0.c0, t2.c0 UNION SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 WHERE ((NOT (NULL))) GROUP BY vt0.c0, t2.c0 UNION SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0 FROM t2, vt0 INDEXED BY i3 GROUP BY vt0.c0;
SELECT t2.c0 FROM t2;
SELECT t2.c0 FROM t2 WHERE (t2.c0) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE ((NOT (t2.c0))) UNION ALL SELECT t2.c0 FROM t2 WHERE (((t2.c0) ISNULL));
SELECT t2.c0 FROM t2;
SELECT DISTINCT * FROM vt0, t2;
SELECT DISTINCT * FROM vt0, t2 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE WHEN NULL THEN vt0.c0 END)) AND (((NOT (vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, t2 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((CASE WHEN NULL THEN vt0.c0 END)) AND (((NOT (vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0, t2 WHERE ((((((vt0.c0)) NOT BETWEEN ((CASE WHEN NULL THEN vt0.c0 END)) AND (((NOT (vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, t2;
SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 WHERE ((~ (((t2.c0) IS FALSE)))) GROUP BY vt0.c0, t2.c0 UNION SELECT vt0.c0, t2.c0 FROM vt0, t2 WHERE ((NOT ((~ (((t2.c0) IS FALSE)))))) GROUP BY vt0.c0, t2.c0 UNION SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 WHERE ((((~ (((t2.c0) IS FALSE)))) ISNULL)) GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM vt0, t2 GROUP BY vt0.c0, t2.c0;
SELECT ALL t2.c0 FROM vt0, t2 GROUP BY t2.c0;
SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING MAX(SUM(vt0.c0)) UNION ALL SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING (NOT (MAX(SUM(vt0.c0)))) UNION ALL SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING ((MAX(SUM(vt0.c0))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((x'')IS(vt0.c0)) COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((x'')IS(vt0.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((x'')IS(vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ('-1488149729' COLLATE BINARY) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ('-1488149729' COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((('-1488149729' COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 WHERE ((((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))))=(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((NOT ((((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))))==(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((((((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))))==(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))))) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM vt0, t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING GROUP_CONCAT(((COUNT(*))IS(vt0.c0))) UNION ALL SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING (NOT (GROUP_CONCAT(((COUNT(*))IS(vt0.c0))))) UNION ALL SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING ((GROUP_CONCAT(((COUNT(*))IS(vt0.c0)))) ISNULL);
SELECT ALL SUM(CAST(vt0.c0 AS NUMERIC) COLLATE BINARY) FROM vt0 ORDER BY (+ (vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT vt0.c0 FROM t2, vt0;
SELECT vt0.c0 FROM t2, vt0 WHERE ((((t2.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM) UNION ALL SELECT vt0.c0 FROM t2, vt0 WHERE ((NOT ((((t2.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0 FROM t2, vt0 WHERE ((((((t2.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM) ISNULL));
SELECT vt0.c0 FROM t2, vt0;
SELECT DISTINCT t2.c0 FROM t2, vt0;
SELECT DISTINCT t2.c0 FROM t2, vt0 WHERE ((NOT (t2.c0))) UNION SELECT DISTINCT t2.c0 FROM t2, vt0 WHERE ((NOT ((NOT (t2.c0))))) UNION SELECT DISTINCT t2.c0 FROM t2, vt0 WHERE ((((NOT (t2.c0))) ISNULL));
SELECT DISTINCT t2.c0 FROM t2, vt0;
SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0;
SELECT t2.c0 FROM t2, vt0 WHERE (CASE (NOT (vt0.c0))  WHEN ((t2.c0)>=(t2.c0)) THEN (t2.c0 IN ()) ELSE ((t2.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2, vt0 WHERE ((NOT (CASE (NOT (vt0.c0))  WHEN ((t2.c0)>=(t2.c0)) THEN (t2.c0 IN ()) ELSE ((t2.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2, vt0 WHERE (((CASE (NOT (vt0.c0))  WHEN ((t2.c0)>=(t2.c0)) THEN (t2.c0 IN ()) ELSE ((t2.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE WHEN AVG(SUM(MIN(vt0.c0))) THEN COUNT(vt0.c0) WHEN NULL THEN UNLIKELY(DISTINCT vt0.c0) WHEN vt0.c0 THEN ((TOTAL(vt0.c0))!=(vt0.c0)) ELSE GROUP_CONCAT(vt0.c0) END UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE WHEN AVG(SUM(MIN(vt0.c0))) THEN COUNT(vt0.c0) WHEN NULL THEN UNLIKELY(DISTINCT vt0.c0) WHEN vt0.c0 THEN ((TOTAL(vt0.c0))<>(vt0.c0)) ELSE GROUP_CONCAT(vt0.c0) END)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE WHEN AVG(SUM(MIN(vt0.c0))) THEN COUNT(vt0.c0) WHEN NULL THEN UNLIKELY(DISTINCT vt0.c0) WHEN vt0.c0 THEN ((TOTAL(vt0.c0))!=(vt0.c0)) ELSE GROUP_CONCAT(vt0.c0) END) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) ISNULL))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(IFNULL(vt0.c0, vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((vt0.c0) ISNULL))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(IFNULL(vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c0) ISNULL))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(IFNULL(vt0.c0, vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 WHERE (((((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)))IS NOT((((t2.c0, t2.c0, t2.c0))>=((t2.c0, t2.c0, t2.c0)))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT (((((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)))IS NOT((((t2.c0, t2.c0, t2.c0))>=((t2.c0, t2.c0, t2.c0)))))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE (((((((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)))IS NOT((((t2.c0, t2.c0, t2.c0))>=((t2.c0, t2.c0, t2.c0)))))) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(SUM(TOTAL(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(SUM(TOTAL(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(SUM(TOTAL(vt0.c0)))) ISNULL);
SELECT ALL t2.c0 FROM t2;
SELECT t2.c0 FROM t2 WHERE (((ABS(DISTINCT 0Xffffffffac119b5b)) NOT BETWEEN (((t2.c0) BETWEEN (t2.c0) AND (t2.c0))) AND (((t2.c0)>>(t2.c0))))) UNION ALL SELECT t2.c0 FROM t2 WHERE ((NOT (((ABS(DISTINCT 0Xffffffffac119b5b)) NOT BETWEEN (((t2.c0) BETWEEN (t2.c0) AND (t2.c0))) AND (((t2.c0)>>(t2.c0))))))) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE (((((ABS(DISTINCT 0Xffffffffac119b5b)) NOT BETWEEN (((t2.c0) BETWEEN (t2.c0) AND (t2.c0))) AND (((t2.c0)>>(t2.c0))))) ISNULL));
SELECT ALL t2.c0 FROM t2;
SELECT DISTINCT * FROM vt0, t2;
SELECT DISTINCT * FROM vt0, t2 WHERE (((((((((CAST(vt0.c0 AS BLOB))AND(json_patch(vt0.c0, vt0.c0))))AND(((vt0.c0)LIKE(t2.c0)))))OR(CASE t2.c0  WHEN t2.c0 THEN NULL END)))AND(vt0.c0))) UNION SELECT DISTINCT * FROM vt0, t2 WHERE ((NOT (((((((((CAST(vt0.c0 AS BLOB))AND(json_patch(vt0.c0, vt0.c0))))AND(((vt0.c0)LIKE(t2.c0)))))OR(CASE t2.c0  WHEN t2.c0 THEN NULL END)))AND(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, t2 WHERE (((((((((((CAST(vt0.c0 AS BLOB))AND(json_patch(vt0.c0, vt0.c0))))AND(((vt0.c0)LIKE(t2.c0)))))OR(CASE t2.c0  WHEN t2.c0 THEN NULL END)))AND(vt0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0, t2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0)%(vt0.c0)) IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)%(vt0.c0)) IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)%(vt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((((x'')AND(((COUNT(*))LIKE(COUNT(*))))))AND(TOTAL(COUNT(GROUP_CONCAT(AVG(TOTAL(t2.c0))))))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (((((x'')AND(((COUNT(*))LIKE(COUNT(*))))))AND(TOTAL(COUNT(GROUP_CONCAT(AVG(TOTAL(t2.c0))))))))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((((((x'')AND(((COUNT(*))LIKE(COUNT(*))))))AND(TOTAL(COUNT(GROUP_CONCAT(AVG(TOTAL(t2.c0)))))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((QUOTE(vt0.c0) IN ())) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((QUOTE(vt0.c0) IN ())))) UNION ALL SELECT * FROM vt0 WHERE ((((QUOTE(vt0.c0) IN ())) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0, t2.c0 FROM vt0, t2;
SELECT DISTINCT vt0.c0, t2.c0 FROM vt0, t2 WHERE (((((CAST(vt0.c0 AS INTEGER))AND(CAST(t2.c0 AS TEXT))))OR(vt0.c0))) UNION SELECT DISTINCT vt0.c0, t2.c0 FROM vt0, t2 WHERE ((NOT (((((CAST(vt0.c0 AS INTEGER))AND(CAST(t2.c0 AS TEXT))))OR(vt0.c0))))) UNION SELECT DISTINCT vt0.c0, t2.c0 FROM vt0, t2 WHERE (((((((CAST(vt0.c0 AS INTEGER))AND(CAST(t2.c0 AS TEXT))))OR(vt0.c0))) ISNULL));
SELECT DISTINCT vt0.c0, t2.c0 FROM vt0, t2;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 WHERE (((((((t2.c0) NOT NULL))OR(((((((((NULL)AND(t2.c0)))AND(t2.c0)))AND(t2.c0)))OR(t2.c0)))))OR(((t2.c0) ISNULL)))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((NOT (((((((t2.c0) NOT NULL))OR(((((((((NULL)AND(t2.c0)))AND(t2.c0)))AND(t2.c0)))OR(t2.c0)))))OR(((t2.c0) ISNULL)))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE (((((((((t2.c0) NOT NULL))OR(((((((((NULL)AND(t2.c0)))AND(t2.c0)))AND(t2.c0)))OR(t2.c0)))))OR(((t2.c0) ISNULL)))) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL vt0.c0 FROM t2, vt0;
SELECT vt0.c0 FROM t2, vt0 WHERE (CAST(CASE vt0.c0  WHEN t2.c0 THEN t2.c0 ELSE NULL END AS REAL)) UNION ALL SELECT vt0.c0 FROM t2, vt0 WHERE ((NOT (CAST(CASE vt0.c0  WHEN t2.c0 THEN t2.c0 ELSE NULL END AS REAL)))) UNION ALL SELECT vt0.c0 FROM t2, vt0 WHERE (((CAST(CASE vt0.c0  WHEN t2.c0 THEN t2.c0 ELSE NULL END AS REAL)) ISNULL));
SELECT ALL vt0.c0 FROM t2, vt0;
SELECT DISTINCT vt0.c0 FROM t2 NATURAL JOIN vt0;
SELECT DISTINCT vt0.c0 FROM t2 NATURAL JOIN vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (t2.c0) AND (((vt0.c0)<=(t2.c0))))) UNION SELECT DISTINCT vt0.c0 FROM t2 NATURAL JOIN vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY) BETWEEN (t2.c0) AND (((vt0.c0)<=(t2.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM t2 NATURAL JOIN vt0 WHERE (((((vt0.c0 COLLATE BINARY) BETWEEN (t2.c0) AND (((vt0.c0)<=(t2.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM t2 NATURAL JOIN vt0;
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 WHERE (((((((((CASE WHEN t2.c0 THEN vt0.c0 END)OR(((t2.c0)IS NOT(vt0.c0)))))AND(vt0.c0)))AND(((((t2.c0)OR(t2.c0)))AND(t2.c0)))))OR(CASE t2.c0  WHEN vt0.c0 THEN t2.c0 ELSE vt0.c0 END))) GROUP BY t2.c0, vt0.c0 UNION SELECT t2.c0, vt0.c0 FROM t2, vt0 WHERE ((NOT (((((((((CASE WHEN t2.c0 THEN vt0.c0 END)OR(((t2.c0)IS NOT(vt0.c0)))))AND(vt0.c0)))AND(((((t2.c0)OR(t2.c0)))AND(t2.c0)))))OR(CASE t2.c0  WHEN vt0.c0 THEN t2.c0 ELSE vt0.c0 END))))) GROUP BY t2.c0, vt0.c0 UNION SELECT t2.c0, vt0.c0 FROM t2, vt0 WHERE (((((((((((CASE WHEN t2.c0 THEN vt0.c0 END)OR(((t2.c0)IS NOT(vt0.c0)))))AND(vt0.c0)))AND(((((t2.c0)OR(t2.c0)))AND(t2.c0)))))OR(CASE t2.c0  WHEN vt0.c0 THEN t2.c0 ELSE vt0.c0 END))) ISNULL)) GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING CASE WHEN GROUP_CONCAT(0.14128002513134275) THEN t2.c0 END COLLATE RTRIM UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (CASE WHEN GROUP_CONCAT(0.14128002513134275) THEN t2.c0 END COLLATE RTRIM)) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((CASE WHEN GROUP_CONCAT(0.14128002513134275) THEN t2.c0 END COLLATE RTRIM) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING CASE WHEN GROUP_CONCAT(0.14128002513134275) THEN t2.c0 END COLLATE RTRIM UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (CASE WHEN GROUP_CONCAT(0.14128002513134275) THEN t2.c0 END COLLATE RTRIM)) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((CASE WHEN GROUP_CONCAT(0.14128002513134275) THEN t2.c0 END COLLATE RTRIM) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT * FROM t2, vt0;
SELECT * FROM t2, vt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM t2, vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM t2, vt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM t2, vt0;
SELECT DISTINCT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2 WHERE (CAST(CAST(t2.c0 AS BLOB) AS INTEGER)) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((NOT (CAST(CAST(t2.c0 AS BLOB) AS INTEGER)))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE (((CAST(CAST(t2.c0 AS BLOB) AS INTEGER)) ISNULL));
SELECT DISTINCT t2.c0 FROM t2;
SELECT t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0, vt0.c0 FROM t2, vt0 WHERE (((((t2.c0) IS TRUE)) NOTNULL)) GROUP BY t2.c0, vt0.c0 UNION SELECT t2.c0, vt0.c0 FROM t2, vt0 WHERE ((NOT (((((t2.c0) IS TRUE)) NOTNULL)))) GROUP BY t2.c0, vt0.c0 UNION SELECT t2.c0, vt0.c0 FROM t2, vt0 WHERE (((((((t2.c0) IS TRUE)) NOTNULL)) ISNULL)) GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM t2, vt0 GROUP BY t2.c0, vt0.c0;
SELECT ALL t2.c0 FROM vt0 CROSS JOIN t2 ON ((((t2.c0) BETWEEN (t2.c0) AND (vt0.c0))) IS TRUE) GROUP BY t2.c0;
SELECT t2.c0 FROM vt0 CROSS JOIN t2 ON ((((t2.c0) BETWEEN (t2.c0) AND (vt0.c0))) IS TRUE) GROUP BY t2.c0 HAVING CAST(SQLITE_COMPILEOPTION_GET(t2.c0) AS REAL) UNION ALL SELECT ALL t2.c0 FROM vt0 CROSS JOIN t2 ON ((((t2.c0) BETWEEN (t2.c0) AND (vt0.c0))) IS TRUE) GROUP BY t2.c0 HAVING (NOT (CAST(SQLITE_COMPILEOPTION_GET(t2.c0) AS REAL))) UNION ALL SELECT t2.c0 FROM vt0 CROSS JOIN t2 ON ((((t2.c0) BETWEEN (t2.c0) AND (vt0.c0))) IS TRUE) GROUP BY t2.c0 HAVING ((CAST(SQLITE_COMPILEOPTION_GET(t2.c0) AS REAL)) ISNULL);
SELECT ALL t2.c0 FROM vt0 CROSS JOIN t2 ON ((((t2.c0) BETWEEN (t2.c0) AND (vt0.c0))) IS TRUE) GROUP BY t2.c0;
SELECT t2.c0 FROM vt0 CROSS JOIN t2 ON ((((t2.c0) BETWEEN (t2.c0) AND (vt0.c0))) IS TRUE) GROUP BY t2.c0 HAVING CAST(SQLITE_COMPILEOPTION_GET(t2.c0) AS REAL) UNION ALL SELECT ALL t2.c0 FROM vt0 CROSS JOIN t2 ON ((((t2.c0) BETWEEN (t2.c0) AND (vt0.c0))) IS TRUE) GROUP BY t2.c0 HAVING (NOT (CAST(SQLITE_COMPILEOPTION_GET(t2.c0) AS REAL))) UNION ALL SELECT t2.c0 FROM vt0 CROSS JOIN t2 ON ((((t2.c0) BETWEEN (t2.c0) AND (vt0.c0))) IS TRUE) GROUP BY t2.c0 HAVING ((CAST(SQLITE_COMPILEOPTION_GET(t2.c0) AS REAL)) ISNULL);
SELECT ALL t2.c0 FROM vt0 CROSS JOIN t2 ON ((((t2.c0) BETWEEN (t2.c0) AND (vt0.c0))) IS TRUE) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM vt0, t2;
SELECT t2.c0 FROM vt0, t2 WHERE (((((t2.c0)|(vt0.c0)))<=((t2.c0 IN ())))) UNION ALL SELECT ALL t2.c0 FROM vt0, t2 WHERE ((NOT (((((t2.c0)|(vt0.c0)))<=((t2.c0 IN ())))))) UNION ALL SELECT t2.c0 FROM vt0, t2 WHERE (((((((t2.c0)|(vt0.c0)))<=((t2.c0 IN ())))) ISNULL));
SELECT ALL t2.c0 FROM vt0, t2;
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE ((~ (CAST(t2.c0 AS REAL)))) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT ((~ (CAST(t2.c0 AS REAL)))))) UNION SELECT DISTINCT * FROM t2 WHERE ((((~ (CAST(t2.c0 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM t2;
SELECT ALL t2.c0 FROM t2, vt0 GROUP BY t2.c0;
SELECT t2.c0 FROM t2, vt0 WHERE (LIKELIHOOD(DISTINCT t2.c0, 0.44887659907737765)) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2, vt0 WHERE ((NOT (LIKELIHOOD(DISTINCT t2.c0, 0.44887659907737765)))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2, vt0 WHERE (((LIKELIHOOD(DISTINCT t2.c0, 0.44887659907737765)) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2, vt0 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING MIN(MIN(SUM('nowWT'))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (MIN(MIN(SUM('nowWT'))))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((MIN(MIN(SUM('nowWT')))) ISNULL);
SELECT ALL MIN(json_array(COALESCE(DISTINCT vt0.c0, vt0.c0), CASE WHEN t2.c0 THEN vt0.c0 WHEN vt0.c0 THEN t2.c0 WHEN 'ti' THEN t2.c0 ELSE vt0.c0 END, CASE WHEN t2.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN t2.c0 THEN vt0.c0 ELSE t2.c0 END, (((vt0.c0))>((vt0.c0))))) FROM vt0, t2;
SELECT ALL * FROM t2 NOT INDEXED;
SELECT ALL * FROM t2 WHERE (((581775510) ISNULL)) UNION ALL SELECT * FROM t2 WHERE ((NOT (((581775510) ISNULL)))) UNION ALL SELECT * FROM t2 WHERE (((((581775510) ISNULL)) ISNULL));
SELECT ALL * FROM t2 NOT INDEXED;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN (((vt0.c0)>>(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0) NOT NULL) IN (((vt0.c0)>>(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0) NOT NULL) IN (((vt0.c0)>>(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ('682293962') GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ('682293962'))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((('682293962') ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t2, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t2, vt0 GROUP BY vt0.c0 HAVING CAST(AVG(MAX(t2.c0)) AS REAL) UNION ALL SELECT ALL vt0.c0 FROM t2, vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(AVG(MAX(t2.c0)) AS REAL))) UNION ALL SELECT vt0.c0 FROM t2, vt0 GROUP BY vt0.c0 HAVING ((CAST(AVG(MAX(t2.c0)) AS REAL)) ISNULL);
SELECT ALL MIN(((((1.875865647E9)!=(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0;
SELECT ALL * FROM t2;
SELECT * FROM t2 WHERE (((((((((((((t2.c0)AND(t2.c0)))AND(t2.c0)))OR(t2.c0)))AND(t2.c0)))OR(t2.c0 COLLATE NOCASE)))AND(ABS(t2.c0)))) UNION ALL SELECT ALL * FROM t2 WHERE ((NOT (((((((((((((t2.c0)AND(t2.c0)))AND(t2.c0)))OR(t2.c0)))AND(t2.c0)))OR(t2.c0 COLLATE NOCASE)))AND(ABS(t2.c0)))))) UNION ALL SELECT ALL * FROM t2 WHERE (((((((((((((((t2.c0)AND(t2.c0)))AND(t2.c0)))OR(t2.c0)))AND(t2.c0)))OR(t2.c0 COLLATE NOCASE)))AND(ABS(t2.c0)))) ISNULL));
SELECT ALL * FROM t2;
SELECT DISTINCT * FROM vt0, t2;
SELECT DISTINCT * FROM vt0, t2 WHERE ((CAST(t2.c0 AS REAL) IN ())) UNION SELECT DISTINCT * FROM vt0, t2 WHERE ((NOT ((CAST(t2.c0 AS REAL) IN ())))) UNION SELECT DISTINCT * FROM vt0, t2 WHERE ((((CAST(t2.c0 AS REAL) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, t2;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 WHERE (((((t2.c0)AND(t2.c0)))AND(((587407542) NOT BETWEEN (t2.c0) AND (t2.c0))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((NOT (((((t2.c0)AND(t2.c0)))AND(((587407542) NOT BETWEEN (t2.c0) AND (t2.c0))))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE (((((((t2.c0)AND(t2.c0)))AND(((587407542) NOT BETWEEN (t2.c0) AND (t2.c0))))) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING vt0.c0 UNION ALL SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING ((vt0.c0) ISNULL);
SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING vt0.c0 UNION ALL SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING ((vt0.c0) ISNULL);
SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c0)LIKE(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((NULL) NOT NULL), ((vt0.c0) NOT NULL), CAST(vt0.c0 AS REAL))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c0)LIKE(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((NULL) NOT NULL), ((vt0.c0) NOT NULL), CAST(vt0.c0 AS REAL))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c0)LIKE(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((NULL) NOT NULL), ((vt0.c0) NOT NULL), CAST(vt0.c0 AS REAL))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 LEFT OUTER JOIN t2 ON CASE WHEN (('')>>(t2.c0)) THEN ((t2.c0) IS TRUE) WHEN NULLIF('-1002850197', vt0.c0) THEN t2.c0 COLLATE RTRIM WHEN t2.c0 COLLATE NOCASE THEN LIKE(x'', t2.c0) ELSE (NOT (vt0.c0)) END;
SELECT DISTINCT vt0.c0 FROM vt0 LEFT OUTER JOIN t2 ON CASE WHEN (('')>>(t2.c0)) THEN ((t2.c0) IS TRUE) WHEN NULLIF('-1002850197', vt0.c0) THEN t2.c0 COLLATE RTRIM WHEN t2.c0 COLLATE NOCASE THEN LIKE(x'', t2.c0) ELSE (NOT (vt0.c0)) END WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 LEFT OUTER JOIN t2 ON CASE WHEN (('')>>(t2.c0)) THEN ((t2.c0) IS TRUE) WHEN NULLIF('-1002850197', vt0.c0) THEN t2.c0 COLLATE RTRIM WHEN t2.c0 COLLATE NOCASE THEN LIKE(x'', t2.c0) ELSE (NOT (vt0.c0)) END WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 LEFT OUTER JOIN t2 ON CASE WHEN (('')>>(t2.c0)) THEN ((t2.c0) IS TRUE) WHEN NULLIF('-1002850197', vt0.c0) THEN t2.c0 COLLATE RTRIM WHEN t2.c0 COLLATE NOCASE THEN LIKE(x'', t2.c0) ELSE (NOT (vt0.c0)) END WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 LEFT OUTER JOIN t2 ON CASE WHEN (('')>>(t2.c0)) THEN ((t2.c0) IS TRUE) WHEN NULLIF('-1002850197', vt0.c0) THEN t2.c0 COLLATE RTRIM WHEN t2.c0 COLLATE NOCASE THEN LIKE(x'', t2.c0) ELSE (NOT (vt0.c0)) END;
SELECT t2.c0, vt0.c0 FROM vt0, t2 GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM vt0, t2 WHERE (TRIM(DISTINCT ((t2.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ()))) GROUP BY t2.c0, vt0.c0 UNION SELECT ALL t2.c0, vt0.c0 FROM vt0, t2 WHERE ((NOT (TRIM(DISTINCT ((t2.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ()))))) GROUP BY t2.c0, vt0.c0 UNION SELECT t2.c0, vt0.c0 FROM vt0, t2 WHERE (((TRIM(DISTINCT ((t2.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ()))) ISNULL)) GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM vt0, t2 GROUP BY t2.c0, vt0.c0;
SELECT t2.c0 FROM t2 INDEXED BY i3 GROUP BY t2.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((((((0X35f7ff53)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) BETWEEN (vt0.c0) AND (CASE vt0.c0  WHEN 915386073 THEN vt0.c0 ELSE vt0.c0 END))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((((((0X35f7ff53)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) BETWEEN (vt0.c0) AND (CASE vt0.c0  WHEN 915386073 THEN vt0.c0 ELSE vt0.c0 END))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((((((0x35f7ff53)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) BETWEEN (vt0.c0) AND (CASE vt0.c0  WHEN 915386073 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (JULIANDAY((((vt0.c0))<((vt0.c0))), NULL, vt0.c0 COLLATE NOCASE)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (JULIANDAY((((vt0.c0))<((vt0.c0))), NULL, vt0.c0 COLLATE NOCASE)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((JULIANDAY((((vt0.c0))<((vt0.c0))), NULL, vt0.c0 COLLATE NOCASE)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING TOTAL(MAX(SUM(MAX(x'b7ef')))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (TOTAL(MAX(SUM(MAX(x'b7ef')))))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((TOTAL(MAX(SUM(MAX(x'b7ef'))))) ISNULL);
SELECT ALL * FROM t2;
SELECT * FROM t2 WHERE (((t2.c0 COLLATE RTRIM) BETWEEN ((~ (t2.c0))) AND (((t2.c0)IS(x''))))) UNION ALL SELECT * FROM t2 WHERE ((NOT (((t2.c0 COLLATE RTRIM) BETWEEN ((~ (t2.c0))) AND (((t2.c0)IS(x''))))))) UNION ALL SELECT * FROM t2 WHERE (((((t2.c0 COLLATE RTRIM) BETWEEN ((~ (t2.c0))) AND (((t2.c0)IS(x''))))) ISNULL));
SELECT ALL * FROM t2;
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE (((((t2.c0) ISNULL)) BETWEEN (((t2.c0)|(t2.c0))) AND ((((0.28635532544738074, t2.c0, -1.330037228E9))=((t2.c0, t2.c0, t2.c0)))))) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT (((((t2.c0) ISNULL)) BETWEEN (((t2.c0)|(t2.c0))) AND ((((0.28635532544738074, t2.c0, -1.330037228E9))==((t2.c0, t2.c0, t2.c0)))))))) UNION SELECT DISTINCT * FROM t2 WHERE (((((((t2.c0) ISNULL)) BETWEEN (((t2.c0)|(t2.c0))) AND ((((0.28635532544738074, t2.c0, -1.330037228E9))=((t2.c0, t2.c0, t2.c0)))))) ISNULL));
SELECT DISTINCT * FROM t2;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE (((((((t2.c0)|(x'155a')))OR(t2.c0 COLLATE BINARY)))AND(json_object('', t2.c0)))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT (((((((t2.c0)|(x'155a')))OR(t2.c0 COLLATE BINARY)))AND(json_object('', t2.c0)))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE (((((((((t2.c0)|(x'155a')))OR(t2.c0 COLLATE BINARY)))AND(json_object('', t2.c0)))) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING ((COUNT(*)) BETWEEN (SQLITE_SOURCE_ID()) AND (LIKELIHOOD(0.7110938977483817, 0.17133075084067306))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*)) BETWEEN (SQLITE_SOURCE_ID()) AND (LIKELIHOOD(0.7110938977483817, 0.17133075084067306))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING ((((COUNT(*)) BETWEEN (SQLITE_SOURCE_ID()) AND (LIKELIHOOD(0.7110938977483817, 0.17133075084067306)))) ISNULL);
SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING ((COUNT(*)) BETWEEN (SQLITE_SOURCE_ID()) AND (LIKELIHOOD(0.7110938977483817, 0.17133075084067306))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*)) BETWEEN (SQLITE_SOURCE_ID()) AND (LIKELIHOOD(0.7110938977483817, 0.17133075084067306))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING ((((COUNT(*)) BETWEEN (SQLITE_SOURCE_ID()) AND (LIKELIHOOD(0.7110938977483817, 0.17133075084067306)))) ISNULL);
SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT ALL * FROM t2;
SELECT ALL * FROM t2 WHERE (((CAST(t2.c0 AS TEXT))>>((((('R.8*-2Z')OR(t2.c0)))AND(t2.c0))))) UNION ALL SELECT ALL * FROM t2 WHERE ((NOT (((CAST(t2.c0 AS TEXT))>>((((('R.8*-2Z')OR(t2.c0)))AND(t2.c0))))))) UNION ALL SELECT ALL * FROM t2 WHERE (((((CAST(t2.c0 AS TEXT))>>((((('R.8*-2Z')OR(t2.c0)))AND(t2.c0))))) ISNULL));
SELECT ALL * FROM t2;
SELECT DISTINCT * FROM vt0, t2;
SELECT DISTINCT * FROM vt0, t2 WHERE (((((t2.c0)GLOB('F妰?4aDN㥖'))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((((((((('4T[5CE2jl')OR(vt0.c0)))OR(t2.c0)))AND(vt0.c0)))OR(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, t2 WHERE ((NOT (((((t2.c0)GLOB('F妰?4aDN㥖'))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((((((((('4T[5CE2jl')OR(vt0.c0)))OR(t2.c0)))AND(vt0.c0)))OR(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, t2 WHERE (((((((t2.c0)GLOB('F妰?4aDN㥖'))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((((((((('4T[5CE2jl')OR(vt0.c0)))OR(t2.c0)))AND(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, t2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((- ((vt0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((- ((vt0.c0 IN ())))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((- ((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING (+ (((((((((vt0.c0)OR(GROUP_CONCAT(MAX(TOTAL(vt0.c0))))))AND('V**H띇')))AND(MAX(TOTAL(vt0.c0)))))AND(COUNT(AVG(TOTAL(GROUP_CONCAT(vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING (NOT ((+ (((((((((vt0.c0)OR(GROUP_CONCAT(MAX(TOTAL(vt0.c0))))))AND('V**H띇')))AND(MAX(TOTAL(vt0.c0)))))AND(COUNT(AVG(TOTAL(GROUP_CONCAT(vt0.c0)))))))))) UNION ALL SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0 HAVING (((+ (((((((((vt0.c0)OR(GROUP_CONCAT(MAX(TOTAL(vt0.c0))))))AND('V**H띇')))AND(MAX(TOTAL(vt0.c0)))))AND(COUNT(AVG(TOTAL(GROUP_CONCAT(vt0.c0))))))))) ISNULL);
SELECT SUM(vt0.c0) FROM t2, vt0 NOT INDEXED;
SELECT ALL t2.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t2 ON UNLIKELY((vt0.c0 IN ()));
SELECT ALL t2.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t2 ON UNLIKELY((vt0.c0 IN ())) WHERE (CAST(vt0.c0 AS NUMERIC)) UNION ALL SELECT t2.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t2 ON UNLIKELY((vt0.c0 IN ())) WHERE ((NOT (CAST(vt0.c0 AS NUMERIC)))) UNION ALL SELECT ALL t2.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t2 ON UNLIKELY((vt0.c0 IN ())) WHERE (((CAST(vt0.c0 AS NUMERIC)) ISNULL));
SELECT ALL t2.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t2 ON UNLIKELY((vt0.c0 IN ()));
SELECT DISTINCT vt0.c0 FROM t2 CROSS JOIN vt0 ON UNLIKELY((NOT (t2.c0)));
SELECT DISTINCT vt0.c0 FROM t2 CROSS JOIN vt0 ON UNLIKELY((NOT (t2.c0))) WHERE (t2.c0) UNION SELECT DISTINCT vt0.c0 FROM t2 CROSS JOIN vt0 ON UNLIKELY((NOT (t2.c0))) WHERE ((NOT (t2.c0))) UNION SELECT DISTINCT vt0.c0 FROM t2 CROSS JOIN vt0 ON UNLIKELY((NOT (t2.c0))) WHERE (((t2.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM t2 CROSS JOIN vt0 ON UNLIKELY((NOT (t2.c0)));
SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0;
SELECT t2.c0 FROM vt0, t2 WHERE (t2.c0) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM vt0, t2 WHERE ((NOT (t2.c0))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM vt0, t2 WHERE (((t2.c0) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING TOTAL(MAX(GROUP_CONCAT(TOTAL(t2.c0)))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (TOTAL(MAX(GROUP_CONCAT(TOTAL(t2.c0)))))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((TOTAL(MAX(GROUP_CONCAT(TOTAL(t2.c0))))) ISNULL);
SELECT t2.c0 FROM t2;
SELECT t2.c0 FROM t2 WHERE ((('FALSE') NOT NULL)) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE ((NOT ((('FALSE') NOT NULL)))) UNION ALL SELECT t2.c0 FROM t2 WHERE ((((('FALSE') NOT NULL)) ISNULL));
SELECT t2.c0 FROM t2;
SELECT DISTINCT * FROM t2, vt0;
SELECT DISTINCT * FROM t2, vt0 WHERE (((vt0.c0) ISNULL)) UNION SELECT DISTINCT * FROM t2, vt0 WHERE ((NOT (((vt0.c0) ISNULL)))) UNION SELECT DISTINCT * FROM t2, vt0 WHERE (((((vt0.c0) ISNULL)) ISNULL));
SELECT DISTINCT * FROM t2, vt0;
SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM t2, vt0 WHERE (CAST(NULL AS NUMERIC)) GROUP BY vt0.c0, t2.c0 UNION SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 WHERE ((NOT (CAST(NULL AS NUMERIC)))) GROUP BY vt0.c0, t2.c0 UNION SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 WHERE (((CAST(NULL AS NUMERIC)) ISNULL)) GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(vt0.c0)) ISNULL) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((AVG(vt0.c0)) ISNULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((AVG(vt0.c0)) ISNULL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(vt0.c0)) ISNULL) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((AVG(vt0.c0)) ISNULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((AVG(vt0.c0)) ISNULL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0)))AND(((vt0.c0)%(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)>=(vt0.c0)))AND(((vt0.c0)%(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 NOT INDEXED WHERE (((((((vt0.c0)>=(vt0.c0)))AND(((vt0.c0)%(vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE ((((((t2.c0))!=((t2.c0))))GLOB(CASE t2.c0  WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END))) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT ((((((t2.c0))!=((t2.c0))))GLOB(CASE t2.c0  WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END))))) UNION SELECT DISTINCT * FROM t2 WHERE ((((((((t2.c0))<>((t2.c0))))GLOB(CASE t2.c0  WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END))) ISNULL));
SELECT DISTINCT * FROM t2;
SELECT vt0.c0, t2.c0 FROM t2 CROSS JOIN vt0 ON (((t2.c0))>=((t2.c0))) COLLATE BINARY GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM t2 CROSS JOIN vt0 ON (((t2.c0))>=((t2.c0))) COLLATE BINARY WHERE (CAST(t2.c0 AS NUMERIC) COLLATE RTRIM) GROUP BY vt0.c0, t2.c0 UNION SELECT vt0.c0, t2.c0 FROM t2 CROSS JOIN vt0 ON (((t2.c0))>=((t2.c0))) COLLATE BINARY WHERE ((NOT (CAST(t2.c0 AS NUMERIC) COLLATE RTRIM))) GROUP BY vt0.c0, t2.c0 UNION SELECT ALL vt0.c0, t2.c0 FROM t2 CROSS JOIN vt0 ON (((t2.c0))>=((t2.c0))) COLLATE BINARY WHERE (((CAST(t2.c0 AS NUMERIC) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM t2 CROSS JOIN vt0 ON (((t2.c0))>=((t2.c0))) COLLATE BINARY GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM((+ (MAX(0.060336488930378795)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM((+ (MAX(0.060336488930378795)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM((+ (MAX(0.060336488930378795))))) ISNULL);
SELECT t2.c0 FROM t2;
SELECT ALL t2.c0 FROM t2 WHERE (0.49272501585969897) UNION ALL SELECT t2.c0 FROM t2 WHERE ((NOT (0.49272501585969897))) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE (((0.49272501585969897) ISNULL));
SELECT t2.c0 FROM t2;
