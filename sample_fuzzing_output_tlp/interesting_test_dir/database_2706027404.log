-- Time: 2024/06/10 07:24:48
-- Database: database4
-- Database version: 3.40.0
-- seed value: 2706027404
PRAGMA cache_size = 50000; -- 11ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
PRAGMA auto_vacuum = FULL; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c2, c2)=(x'e345', 'lrޏk', x'4d35'); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(0.3406308867857174); -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 1ms;
REINDEX; -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR IGNORE rt0 SET (c0)=('144135198'); -- 0ms;
UPDATE OR IGNORE rt0 SET c0='\rK4M	/샪vi'; -- 1ms;
END; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c2=NULL, c0=x'3f19'; -- 0ms;
END; -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE main; -- 1ms;
UPDATE OR REPLACE rt0 SET (c2)=(NULL) WHERE CASE SQLITE_VERSION()  WHEN (~ (rt0.c0)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END END; -- 5ms;
UPDATE OR ABORT rt0 SET (c1)=(x'') WHERE (~ ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))); -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES (-1422646799, x'', x''); -- 1ms;
REINDEX BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 1.027737487E9 THEN 0.16941593502897268 END)|(((((NULL)OR(x'')))AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES ('-1005364202'), (NULL), (x''); -- 0ms;
REINDEX  rt0; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (NULL, NULL); -- 0ms;
UPDATE OR REPLACE rt0 SET c2=0.4516931674697455, c0=0.8171232769405057; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=NULL WHERE (CAST(NULL AS REAL) IN ()); -- 0ms;
REINDEX; -- 0ms;
UPDATE rt0 SET (c1, c1, c2)=('1027737487', NULL, 0.21466114119260726) WHERE (+ ((rt0.c0 IN (rt0.c2)))); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=1255959358 WHERE ((rt0.c1 COLLATE NOCASE)>(0xffffffffa488ee82)); -- 1ms;
COMMIT; -- 0ms;
PRAGMA short_column_names = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.cache_size = -7331240875125342965; -- 0ms;
END; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR ABORT rt0 SET (c0)=(0.8171232769405057) WHERE (('1255959358' COLLATE NOCASE) NOT BETWEEN (((0.6439976236115305)|(NULL))) AND (-1148637883)); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
END; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(x'6913'); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0.8871878803100534 WHERE (rt0.c0 COLLATE NOCASE IN ()); -- 1ms;
UPDATE rt0 SET (c2)=('ய(') WHERE (- (((rt0.c2)GLOB(rt0.c0)))); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=x''; -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=('a/Wߜ') WHERE CASE WHEN ((rt0.c2) ISNULL) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) WHEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)) THEN CAST(rt0.c0 AS TEXT) WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN LIKELIHOOD(rt0.c2, 0.49360994903967226) ELSE x'' END; -- 0ms;
UPDATE rt0 SET c2='a[', c1=x'fc60', c2=-587812.0 WHERE (((rt0.c1 COLLATE RTRIM))!=((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2))))); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 1ms;
PRAGMA main.stats; -- 0ms;
UPDATE rt0 SET c1=-1.148637883E9; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE main; -- 0ms;
END TRANSACTION; -- 0ms;
END; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c0) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (CAST(((rt0.c1)>>(rt0.c1)) AS BLOB)) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST(((rt0.c1)>>(rt0.c1)) AS BLOB)))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(((rt0.c1)>>(rt0.c1)) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE ((((NOT (rt0.c1)))>=(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((NOT (rt0.c1)))>=(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((((((NOT (rt0.c1)))>=(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (SUM(COUNT(AVG(rt0.c2))) IN ()) UNION ALL SELECT rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c2 HAVING (NOT ((SUM(COUNT(AVG(rt0.c2))) IN ()))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((SUM(COUNT(AVG(rt0.c2))) IN ())) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (SUM(COUNT(AVG(rt0.c2))) IN ()) UNION ALL SELECT rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c2 HAVING (NOT ((SUM(COUNT(AVG(rt0.c2))) IN ()))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((SUM(COUNT(AVG(rt0.c2))) IN ())) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ('') UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (''))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((('') ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c0) AND (((rt0.c2) ISNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (rt0.c0) AND (((rt0.c2) ISNULL)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (((rt0.c2) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END)%(((rt0.c1) ISNULL)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END)%(((rt0.c1) ISNULL)))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END)%(((rt0.c1) ISNULL)))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END IN ()) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END IN ()))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END IN ()) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END IN ()))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((+ (CASE WHEN rt0.c2 THEN rt0.c0 END))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((+ (CASE WHEN rt0.c2 THEN rt0.c0 END))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((((+ (CASE WHEN rt0.c2 THEN rt0.c0 END))) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM)IS NOT(CAST(rt0.c1 AS REAL)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE RTRIM)IS NOT(CAST(rt0.c1 AS REAL)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM)IS NOT(CAST(rt0.c1 AS REAL)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c0)IS(rt0.c1)))GLOB((+ (rt0.c2))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0)IS(rt0.c1)))GLOB((+ (rt0.c2))))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c0)IS(rt0.c1)))GLOB((+ (rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((((COUNT(*))) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))>(AVG(rt0.c2))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((((((COUNT(*))) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))>(AVG(rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((((((COUNT(*))) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))>(AVG(rt0.c2)))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((((COUNT(*))) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))>(AVG(rt0.c2))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((((((COUNT(*))) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))>(AVG(rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((((((COUNT(*))) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))>(AVG(rt0.c2)))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((- (CASE WHEN rt0.c1 THEN rt0.c1 END))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((- (CASE WHEN rt0.c1 THEN rt0.c1 END))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((- (CASE WHEN rt0.c1 THEN rt0.c1 END))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0) IS FALSE)) IS FALSE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0) IS FALSE)) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0) IS FALSE)) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((NULL) IS FALSE) IN ())) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((NULL) IS FALSE) IN ())))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((((((NULL) IS FALSE) IN ())) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((MIN(AVG(rt0.c0))) IS TRUE))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((NOT (((MIN(AVG(rt0.c0))) IS TRUE))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((NOT (((MIN(AVG(rt0.c0))) IS TRUE)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((1.44135198E8)IS(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((1.44135198E8)IS(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((1.44135198E8)IS(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (CAST(((rt0.c1)IS NOT(rt0.c2)) AS NUMERIC)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (CAST(((rt0.c1)IS NOT(rt0.c2)) AS NUMERIC)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((CAST(((rt0.c1)IS NOT(rt0.c2)) AS NUMERIC)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((AVG(rt0.c2)) BETWEEN (AVG(MIN(rt0.c2))) AND (MAX(rt0.c2))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (((AVG(rt0.c2)) BETWEEN (AVG(MIN(rt0.c2))) AND (MAX(rt0.c2))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((((AVG(rt0.c2)) BETWEEN (AVG(MIN(rt0.c2))) AND (MAX(rt0.c2)))) ISNULL);
SELECT ALL MIN((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END IN ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), (((rt0.c0))>=(('64600047'))), ((((rt0.c2)OR(x'f341')))OR(rt0.c1))))) FROM rt0 ORDER BY ((((rt0.c0) IS FALSE))-(LOWER(rt0.c2))) DESC  NULLS FIRST;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((rt0.c2 COLLATE RTRIM IN (rt0.c0, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((rt0.c2 COLLATE RTRIM IN (rt0.c0, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))))) UNION ALL SELECT * FROM rt0 WHERE ((((rt0.c2 COLLATE RTRIM IN (rt0.c0, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((~ (rt0.c0)))OR(((rt0.c0)*(rt0.c0)))))AND(rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((~ (rt0.c0)))OR(((rt0.c0)*(rt0.c0)))))AND(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((~ (rt0.c0)))OR(((rt0.c0)*(rt0.c0)))))AND(rt0.c1))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((CAST(rt0.c0 AS INTEGER) IN ((NOT (rt0.c2))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((CAST(rt0.c0 AS INTEGER) IN ((NOT (rt0.c2))))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((CAST(rt0.c0 AS INTEGER) IN ((NOT (rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((0.8871878803100534)) NOT BETWEEN ((rt0.c1 COLLATE BINARY)) AND (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((0.8871878803100534)) NOT BETWEEN ((rt0.c1 COLLATE BINARY)) AND (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((0.8871878803100534)) NOT BETWEEN ((rt0.c1 COLLATE BINARY)) AND (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (CAST(((rt0.c1)IS(rt0.c0)) AS NUMERIC)) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (CAST(((rt0.c1)IS(rt0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((CAST(((rt0.c1)IS(rt0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c1) IS FALSE)) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c1) IS FALSE)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c1) IS FALSE)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((rt0.c1)*(rt0.c2)))<=(((rt0.c1) BETWEEN (rt0.c2) AND (MIN(rt0.c0))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((((rt0.c1)*(rt0.c2)))<=(((rt0.c1) BETWEEN (rt0.c2) AND (MIN(rt0.c0))))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((((rt0.c1)*(rt0.c2)))<=(((rt0.c1) BETWEEN (rt0.c2) AND (MIN(rt0.c0)))))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((rt0.c1)*(rt0.c2)))<=(((rt0.c1) BETWEEN (rt0.c2) AND (MIN(rt0.c0))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((((rt0.c1)*(rt0.c2)))<=(((rt0.c1) BETWEEN (rt0.c2) AND (MIN(rt0.c0))))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((((rt0.c1)*(rt0.c2)))<=(((rt0.c1) BETWEEN (rt0.c2) AND (MIN(rt0.c0)))))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) BETWEEN (rt0.c1) AND (((rt0.c1)%(rt0.c2))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) BETWEEN (rt0.c1) AND (((rt0.c1)%(rt0.c2))))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) BETWEEN (rt0.c1) AND (((rt0.c1)%(rt0.c2))))) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((rt0.c0)<(rt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0)<(rt0.c2 COLLATE BINARY))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((rt0.c0)<(rt0.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (('-1421584545' IN ())) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (('-1421584545' IN ())))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((('-1421584545' IN ())) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((x'')-(rt0.c2)))OR(rt0.c2))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((x'')-(rt0.c2)))OR(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((x'')-(rt0.c2)))OR(rt0.c2))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((+ (((rt0.c1)AND(rt0.c0))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((+ (((rt0.c1)AND(rt0.c0))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((((+ (((rt0.c1)AND(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c1)=(x'')))<(rt0.c1 COLLATE RTRIM))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1)==(x'')))<(rt0.c1 COLLATE RTRIM))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c1)==(x'')))<(rt0.c1 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((MAX(rt0.c1) COLLATE RTRIM))>((AVG(SUM(TOTAL(rt0.c1)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT ((((MAX(rt0.c1) COLLATE RTRIM))>((AVG(SUM(TOTAL(rt0.c1)))))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((((MAX(rt0.c1) COLLATE RTRIM))>((AVG(SUM(TOTAL(rt0.c1))))))) ISNULL);
SELECT ALL rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (((NOT (rt0.c1)) IN ())) UNION ALL SELECT rt0.c2 FROM rt0 NOT INDEXED WHERE ((NOT (((NOT (rt0.c1)) IN ())))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((((NOT (rt0.c1)) IN ())) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (TRIM(((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (TRIM(((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((TRIM(((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((NULL)AND(((((((((rt0.c1)OR(rt0.c0)))AND('569495598')))AND(rt0.c0)))OR(rt0.c0)))))AND(rt0.c0))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((NULL)AND(((((((((rt0.c1)OR(rt0.c0)))AND('569495598')))AND(rt0.c0)))OR(rt0.c0)))))AND(rt0.c0))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((NULL)AND(((((((((rt0.c1)OR(rt0.c0)))AND('569495598')))AND(rt0.c0)))OR(rt0.c0)))))AND(rt0.c0))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((CAST(rt0.c0 AS TEXT))OR(CASE rt0.c0  WHEN MIN(rt0.c0) THEN COUNT(*) WHEN MAX(MAX(COUNT(TOTAL(TOTAL(COUNT(*)))))) THEN rt0.c2 WHEN GROUP_CONCAT(SUM(COUNT(*))) THEN rt0.c2 ELSE GROUP_CONCAT(COUNT(*)) END)))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (COUNT(*))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((((CAST(rt0.c0 AS TEXT))OR(CASE rt0.c0  WHEN MIN(rt0.c0) THEN COUNT(*) WHEN MAX(MAX(COUNT(TOTAL(TOTAL(COUNT(*)))))) THEN rt0.c2 WHEN GROUP_CONCAT(SUM(COUNT(*))) THEN rt0.c2 ELSE GROUP_CONCAT(COUNT(*)) END)))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (COUNT(*))))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((((CAST(rt0.c0 AS TEXT))OR(CASE rt0.c0  WHEN MIN(rt0.c0) THEN COUNT(*) WHEN MAX(MAX(COUNT(TOTAL(TOTAL(COUNT(*)))))) THEN rt0.c2 WHEN GROUP_CONCAT(SUM(COUNT(*))) THEN rt0.c2 ELSE GROUP_CONCAT(COUNT(*)) END)))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (COUNT(*)))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c2)<<(x'a040')) ELSE ((rt0.c2)>=(rt0.c1)) END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c2)<<(x'a040')) ELSE ((rt0.c2)>=(rt0.c1)) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c2)<<(x'a040')) ELSE ((rt0.c2)>=(rt0.c1)) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (CASE LIKELY(rt0.c0)  WHEN ((rt0.c1)|(rt0.c1)) THEN ((rt0.c0) ISNULL) ELSE rt0.c2 COLLATE RTRIM END) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CASE LIKELY(rt0.c0)  WHEN ((rt0.c1)|(rt0.c1)) THEN ((rt0.c0) ISNULL) ELSE rt0.c2 COLLATE RTRIM END))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((CASE LIKELY(rt0.c0)  WHEN ((rt0.c1)|(rt0.c1)) THEN ((rt0.c0) ISNULL) ELSE rt0.c2 COLLATE RTRIM END) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((~ (((rt0.c0) ISNULL)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((~ (((rt0.c0) ISNULL)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((~ (((rt0.c0) ISNULL)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((TOTAL(rt0.c0)) IS TRUE)) ISNULL) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((((TOTAL(rt0.c0)) IS TRUE)) ISNULL))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((((TOTAL(rt0.c0)) IS TRUE)) ISNULL)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((TOTAL(rt0.c0)) IS TRUE)) ISNULL) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((((TOTAL(rt0.c0)) IS TRUE)) ISNULL))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((((TOTAL(rt0.c0)) IS TRUE)) ISNULL)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT * FROM rt0 NOT INDEXED;
SELECT ALL * FROM rt0 WHERE (NULL) UNION ALL SELECT * FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT * FROM rt0 NOT INDEXED;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (HEX(DISTINCT NULL COLLATE NOCASE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (HEX(DISTINCT NULL COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((HEX(DISTINCT NULL COLLATE NOCASE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE ('703067973') GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ('703067973'))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((('703067973') ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING CASE GROUP_CONCAT(rt0.c0)  WHEN ((rt0.c0) NOT BETWEEN (SUM(COUNT(rt0.c1))) AND (COUNT(rt0.c1))) THEN ((rt0.c2)<=(rt0.c0)) END UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (CASE GROUP_CONCAT(rt0.c0)  WHEN ((rt0.c0) NOT BETWEEN (SUM(COUNT(rt0.c1))) AND (COUNT(rt0.c1))) THEN ((rt0.c2)<=(rt0.c0)) END)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((CASE GROUP_CONCAT(rt0.c0)  WHEN ((rt0.c0) NOT BETWEEN (SUM(COUNT(rt0.c1))) AND (COUNT(rt0.c1))) THEN ((rt0.c2)<=(rt0.c0)) END) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c1) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (UPPER(DISTINCT rt0.c0)) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (UPPER(DISTINCT rt0.c0)))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((UPPER(DISTINCT rt0.c0)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ((NOT ((((x'b971', rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c1, 0.8171232769405057)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((NOT ((((x'b971', rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c1, 0.8171232769405057)))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((NOT ((((x'b971', rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c1, 0.8171232769405057)))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING MIN(AVG(x'')) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (MIN(AVG(x'')))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((MIN(AVG(x''))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((rt0.c1 IN ())) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((rt0.c1 IN ())))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c1 IN ())) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (LIKELY(DISTINCT rt0.c2)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (LIKELY(DISTINCT rt0.c2)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((LIKELY(DISTINCT rt0.c2)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((rt0.c2 IN ())))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((NOT ((rt0.c2 IN ())))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((NOT ((rt0.c2 IN ())))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING CASE ((GROUP_CONCAT(rt0.c2)) IS TRUE)  WHEN x'' THEN SUM(rt0.c2) ELSE rt0.c2 END UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (CASE ((GROUP_CONCAT(rt0.c2)) IS TRUE)  WHEN x'' THEN SUM(rt0.c2) ELSE rt0.c2 END)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((CASE ((GROUP_CONCAT(rt0.c2)) IS TRUE)  WHEN x'' THEN SUM(rt0.c2) ELSE rt0.c2 END) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING CASE ((GROUP_CONCAT(rt0.c2)) IS TRUE)  WHEN x'' THEN SUM(rt0.c2) ELSE rt0.c2 END UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (CASE ((GROUP_CONCAT(rt0.c2)) IS TRUE)  WHEN x'' THEN SUM(rt0.c2) ELSE rt0.c2 END)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((CASE ((GROUP_CONCAT(rt0.c2)) IS TRUE)  WHEN x'' THEN SUM(rt0.c2) ELSE rt0.c2 END) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT MIN(CAST(rt0.c0 AS TEXT)) FROM rt0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c1) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (0X6fa98ea0 COLLATE BINARY) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (0x6fa98ea0 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((0x6fa98ea0 COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0)AND(rt0.c1)))OR(rt0.c2))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT ((NOT (((((rt0.c0)AND(rt0.c1)))OR(rt0.c2))))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((((NOT (((((rt0.c0)AND(rt0.c1)))OR(rt0.c2))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING CASE WHEN GROUP_CONCAT(MIN(rt0.c1)) THEN GROUP_CONCAT(rt0.c1) ELSE ((((COUNT(*))OR(SUM(rt0.c1))))OR(COUNT(TOTAL(rt0.c0)))) END UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (CASE WHEN GROUP_CONCAT(MIN(rt0.c1)) THEN GROUP_CONCAT(rt0.c1) ELSE ((((COUNT(*))OR(SUM(rt0.c1))))OR(COUNT(TOTAL(rt0.c0)))) END)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((CASE WHEN GROUP_CONCAT(MIN(rt0.c1)) THEN GROUP_CONCAT(rt0.c1) ELSE ((((COUNT(*))OR(SUM(rt0.c1))))OR(COUNT(TOTAL(rt0.c0)))) END) ISNULL);
SELECT TOTAL(1.44135198E8) FROM rt0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, (- (rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) AND ((((rt0.c2)+(rt0.c2)), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)), (((rt0.c0))!=((rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, (- (rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) AND ((((rt0.c2)+(rt0.c2)), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)), (((rt0.c0))!=((rt0.c2))))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, (- (rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) AND ((((rt0.c2)+(rt0.c2)), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)), (((rt0.c0))!=((rt0.c2))))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN 569495598 ELSE rt0.c0 END) BETWEEN (CAST(rt0.c2 AS REAL)) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN 569495598 ELSE rt0.c0 END) BETWEEN (CAST(rt0.c2 AS REAL)) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN 569495598 ELSE rt0.c0 END) BETWEEN (CAST(rt0.c2 AS REAL)) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((DATE(rt0.c1, rt0.c1, rt0.c1))>>(((rt0.c0)/(rt0.c0))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((DATE(rt0.c1, rt0.c1, rt0.c1))>>(((rt0.c0)/(rt0.c0))))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((((DATE(rt0.c1, rt0.c1, rt0.c1))>>(((rt0.c0)/(rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING HEX(DISTINCT rt0.c2) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (HEX(DISTINCT rt0.c2))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((HEX(DISTINCT rt0.c2)) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING HEX(DISTINCT rt0.c2) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (HEX(DISTINCT rt0.c2))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((HEX(DISTINCT rt0.c2)) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT TOTAL(((rt0.c1) IS TRUE)) FROM rt0 ORDER BY rt0.c0 ASC  NULLS FIRST, ((((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)OR(((rt0.c2)<(rt0.c2)))))OR((rt0.c2 IN ())));
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((NULLIF('|Nrk', rt0.c1)) BETWEEN (((rt0.c2)%(rt0.c0))) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((NULLIF('|Nrk', rt0.c1)) BETWEEN (((rt0.c2)%(rt0.c0))) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((NULLIF('|Nrk', rt0.c1)) BETWEEN (((rt0.c2)%(rt0.c0))) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (NULL) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((((((CAST(rt0.c1 AS REAL))AND(((rt0.c1)+(rt0.c2)))))OR(ABS(rt0.c2))))AND(((rt0.c2)IS NOT(rt0.c1)))))OR((((rt0.c1))>=((rt0.c2)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((((((CAST(rt0.c1 AS REAL))AND(((rt0.c1)+(rt0.c2)))))OR(ABS(rt0.c2))))AND(((rt0.c2)IS NOT(rt0.c1)))))OR((((rt0.c1))>=((rt0.c2)))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((((((((CAST(rt0.c1 AS REAL))AND(((rt0.c1)+(rt0.c2)))))OR(ABS(rt0.c2))))AND(((rt0.c2)IS NOT(rt0.c1)))))OR((((rt0.c1))>=((rt0.c2)))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (((((SUM(AVG(rt0.c2)))) NOT BETWEEN ((COUNT(*))) AND ((COUNT(MIN(rt0.c0)))))) NOT BETWEEN (json_array(MIN(TOTAL(rt0.c0)), MIN(MAX(COUNT(rt0.c1))))) AND (((rt0.c2) IS TRUE))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT ((((((SUM(AVG(rt0.c2)))) NOT BETWEEN ((COUNT(*))) AND ((COUNT(MIN(rt0.c0)))))) NOT BETWEEN (json_array(MIN(TOTAL(rt0.c0)), MIN(MAX(COUNT(rt0.c1))))) AND (((rt0.c2) IS TRUE))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c2 HAVING (((((((SUM(AVG(rt0.c2)))) NOT BETWEEN ((COUNT(*))) AND ((COUNT(MIN(rt0.c0)))))) NOT BETWEEN (json_array(MIN(TOTAL(rt0.c0)), MIN(MAX(COUNT(rt0.c1))))) AND (((rt0.c2) IS TRUE)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))==(((rt0.c0)IS(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))==(((rt0.c0)IS(rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))=(((rt0.c0)IS(rt0.c2))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((UPPER(rt0.c1)) NOTNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((UPPER(rt0.c1)) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((UPPER(rt0.c1)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c0 HAVING MIN('-1421584545') UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MIN('-1421584545'))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MIN('-1421584545')) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c0 HAVING MIN('-1421584545') UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MIN('-1421584545'))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MIN('-1421584545')) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((((rt0.c2)!=(rt0.c2)))&(((((rt0.c0)AND(rt0.c1)))OR(rt0.c0))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2)<>(rt0.c2)))&(((((rt0.c0)AND(rt0.c1)))OR(rt0.c0))))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((((((rt0.c2)!=(rt0.c2)))&(((((rt0.c0)AND(rt0.c1)))OR(rt0.c0))))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) IS FALSE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ('-1422646799') GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ('-1422646799'))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((('-1422646799') ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING AVG((((COUNT(*)))!=((rt0.c0)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (AVG((((COUNT(*)))!=((rt0.c0)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((AVG((((COUNT(*)))!=((rt0.c0))))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END IN ())) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END IN ())))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END IN ())) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((0x6432b22e)OR(((rt0.c0)+(rt0.c1)))))OR(((rt0.c0)==(x''))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((0x6432b22e)OR(((rt0.c0)+(rt0.c1)))))OR(((rt0.c0)==(x''))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((0x6432b22e)OR(((rt0.c0)+(rt0.c1)))))OR(((rt0.c0)=(x''))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) NOT BETWEEN (HEX(rt0.c2)) AND (((((rt0.c2)AND(rt0.c0)))AND(rt0.c0))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE NOCASE) NOT BETWEEN (HEX(rt0.c2)) AND (((((rt0.c2)AND(rt0.c0)))AND(rt0.c0))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c1 COLLATE NOCASE) NOT BETWEEN (HEX(rt0.c2)) AND (((((rt0.c2)AND(rt0.c0)))AND(rt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))||(CAST(rt0.c2 AS BLOB)))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))||(CAST(rt0.c2 AS BLOB)))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))||(CAST(rt0.c2 AS BLOB)))) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN ((rt0.c2)>>(rt0.c0)) THEN ((((rt0.c0)AND(x'')))AND(rt0.c1)) ELSE rt0.c2 COLLATE RTRIM END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c2)>>(rt0.c0)) THEN ((((rt0.c0)AND(x'')))AND(rt0.c1)) ELSE rt0.c2 COLLATE RTRIM END))) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE (((CASE WHEN ((rt0.c2)>>(rt0.c0)) THEN ((((rt0.c0)AND(x'')))AND(rt0.c1)) ELSE rt0.c2 COLLATE RTRIM END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((rt0.c2 IN ()) COLLATE BINARY))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c2 IN ()) COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING CASE WHEN COUNT(*) THEN x'' COLLATE RTRIM END UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (CASE WHEN COUNT(*) THEN x'' COLLATE RTRIM END)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((CASE WHEN COUNT(*) THEN x'' COLLATE RTRIM END) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING CASE WHEN COUNT(*) THEN x'' COLLATE RTRIM END UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (CASE WHEN COUNT(*) THEN x'' COLLATE RTRIM END)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((CASE WHEN COUNT(*) THEN x'' COLLATE RTRIM END) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((((((CAST(rt0.c1 AS TEXT))OR((- (rt0.c1)))))OR(NULL)))OR(((rt0.c2) IS TRUE))))OR((NOT (rt0.c2))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (((((((((CAST(rt0.c1 AS TEXT))OR((- (rt0.c1)))))OR(NULL)))OR(((rt0.c2) IS TRUE))))OR((NOT (rt0.c2))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((((((((((CAST(rt0.c1 AS TEXT))OR((- (rt0.c1)))))OR(NULL)))OR(((rt0.c2) IS TRUE))))OR((NOT (rt0.c2))))) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)>(rt0.c1))) ISNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c2)>(rt0.c1))) ISNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2)>(rt0.c1))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c1, rt0.c2, NULL)) NOT BETWEEN ((rt0.c2 COLLATE BINARY, INSTR(NULL, 0.06681990701623164), ((rt0.c2) IS FALSE))) AND (((('1e500')>=(rt0.c1)), CAST(rt0.c1 AS NUMERIC), (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1, rt0.c2, NULL)) NOT BETWEEN ((rt0.c2 COLLATE BINARY, INSTR(NULL, 0.06681990701623164), ((rt0.c2) IS FALSE))) AND (((('1e500')>=(rt0.c1)), CAST(rt0.c1 AS NUMERIC), (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c1, rt0.c2, NULL)) NOT BETWEEN ((rt0.c2 COLLATE BINARY, INSTR(NULL, 0.06681990701623164), ((rt0.c2) IS FALSE))) AND (((('1e500')>=(rt0.c1)), CAST(rt0.c1 AS NUMERIC), (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING GROUP_CONCAT(CASE TOTAL(GROUP_CONCAT(MIN(rt0.c0)))  WHEN rt0.c0 THEN SUM(rt0.c1) ELSE SUM(GROUP_CONCAT(MAX(TOTAL(MAX(MIN(rt0.c1)))))) END) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT(CASE TOTAL(GROUP_CONCAT(MIN(rt0.c0)))  WHEN rt0.c0 THEN SUM(rt0.c1) ELSE SUM(GROUP_CONCAT(MAX(TOTAL(MAX(MIN(rt0.c1)))))) END))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(CASE TOTAL(GROUP_CONCAT(MIN(rt0.c0)))  WHEN rt0.c0 THEN SUM(rt0.c1) ELSE SUM(GROUP_CONCAT(MAX(TOTAL(MAX(MIN(rt0.c1)))))) END)) ISNULL);
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE ((((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN (((rt0.c0 IN (rt0.c2, rt0.c1)), TRIM(DISTINCT rt0.c1), ((144135198) NOTNULL))) AND (((NOT (rt0.c1)), (0.23499144961867247 IN ()), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN (((rt0.c0 IN (rt0.c2, rt0.c1)), TRIM(DISTINCT rt0.c1), ((144135198) NOTNULL))) AND (((NOT (rt0.c1)), (0.23499144961867247 IN ()), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((((((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN (((rt0.c0 IN (rt0.c2, rt0.c1)), TRIM(DISTINCT rt0.c1), ((144135198) NOTNULL))) AND (((NOT (rt0.c1)), (0.23499144961867247 IN ()), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)))) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ('') UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (''))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((('') ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))))AND(COALESCE(rt0.c0, rt0.c2, rt0.c1, rt0.c0)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))))AND(COALESCE(rt0.c0, rt0.c2, rt0.c1, rt0.c0)))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))))AND(COALESCE(rt0.c0, rt0.c2, rt0.c1, rt0.c0)))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c1) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (x'') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING MIN(SUM(rt0.c2)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MIN(SUM(rt0.c2)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((MIN(SUM(rt0.c2))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c0) BETWEEN ((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c0, rt0.c2, rt0.c1)))) AND (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c0) BETWEEN ((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c0, rt0.c2, rt0.c1)))) AND (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c0) BETWEEN ((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c0, rt0.c2, rt0.c1)))) AND (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1))))) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c1 IN (rt0.c0, rt0.c0)))*(CASE WHEN rt0.c2 THEN rt0.c1 END))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1 IN (rt0.c0, rt0.c0)))*(CASE WHEN rt0.c2 THEN rt0.c1 END))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c1 IN (rt0.c0, rt0.c0)))*(CASE WHEN rt0.c2 THEN rt0.c1 END))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(*) COLLATE BINARY UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(*) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(*) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(*) COLLATE BINARY UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(*) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(*) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL * FROM rt0 NOT INDEXED;
SELECT * FROM rt0 WHERE (rt0.c2) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM rt0 NOT INDEXED;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((('1681044014')|((- (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((('1681044014')|((- (rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((('1681044014')|((- (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((0.35374074098158403, rt0.c1, NULL)) NOT BETWEEN (((x'4d4b' IN (rt0.c0)), ((0.4516931674697455)>=(rt0.c0)), rt0.c2 COLLATE NOCASE)) AND (((((rt0.c2, 0.5853292350967373, rt0.c0)) NOT BETWEEN ((NULL, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0))), 0.16941593502897268, rt0.c1 COLLATE NOCASE)))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((0.35374074098158403, rt0.c1, NULL)) NOT BETWEEN (((x'4d4b' IN (rt0.c0)), ((0.4516931674697455)>=(rt0.c0)), rt0.c2 COLLATE NOCASE)) AND (((((rt0.c2, 0.5853292350967373, rt0.c0)) NOT BETWEEN ((NULL, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0))), 0.16941593502897268, rt0.c1 COLLATE NOCASE)))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((0.35374074098158403, rt0.c1, NULL)) NOT BETWEEN (((x'4d4b' IN (rt0.c0)), ((0.4516931674697455)>=(rt0.c0)), rt0.c2 COLLATE NOCASE)) AND (((((rt0.c2, 0.5853292350967373, rt0.c0)) NOT BETWEEN ((NULL, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0))), 0.16941593502897268, rt0.c1 COLLATE NOCASE)))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(TOTAL(AVG(MIN(rt0.c2)))))GLOB(IFNULL(MAX(rt0.c0), MAX(MAX(COUNT(GROUP_CONCAT(GROUP_CONCAT(rt0.c2)))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((GROUP_CONCAT(TOTAL(AVG(MIN(rt0.c2)))))GLOB(IFNULL(MAX(rt0.c0), MAX(MAX(COUNT(GROUP_CONCAT(GROUP_CONCAT(rt0.c2)))))))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((GROUP_CONCAT(TOTAL(AVG(MIN(rt0.c2)))))GLOB(IFNULL(MAX(rt0.c0), MAX(MAX(COUNT(GROUP_CONCAT(GROUP_CONCAT(rt0.c2))))))))) ISNULL);
SELECT rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END COLLATE RTRIM) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END COLLATE RTRIM) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (IFNULL(DISTINCT ((rt0.c2) NOTNULL), (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (IFNULL(DISTINCT ((rt0.c2) NOTNULL), (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((IFNULL(DISTINCT ((rt0.c2) NOTNULL), (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((~ (rt0.c0 COLLATE BINARY))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((~ (rt0.c0 COLLATE BINARY))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((((~ (rt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MIN(CASE WHEN rt0.c2 THEN MAX(rt0.c1) WHEN AVG(TOTAL(GROUP_CONCAT(rt0.c0))) THEN COUNT(*) WHEN rt0.c2 THEN rt0.c2 ELSE SUM(COUNT(*)) END) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MIN(CASE WHEN rt0.c2 THEN MAX(rt0.c1) WHEN AVG(TOTAL(GROUP_CONCAT(rt0.c0))) THEN COUNT(*) WHEN rt0.c2 THEN rt0.c2 ELSE SUM(COUNT(*)) END))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MIN(CASE WHEN rt0.c2 THEN MAX(rt0.c1) WHEN AVG(TOTAL(GROUP_CONCAT(rt0.c0))) THEN COUNT(*) WHEN rt0.c2 THEN rt0.c2 ELSE SUM(COUNT(*)) END)) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((((- (rt0.c0)))%(((rt0.c0) NOTNULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((- (rt0.c0)))%(((rt0.c0) NOTNULL)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((((((- (rt0.c0)))%(((rt0.c0) NOTNULL)))) ISNULL));
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (HEX(CAST(rt0.c2 AS BLOB))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (HEX(CAST(rt0.c2 AS BLOB))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((HEX(CAST(rt0.c2 AS BLOB))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c0, 0.06681990701623164, rt0.c2))<=((rt0.c2, rt0.c1, rt0.c0)))) IS FALSE)) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c0, 0.06681990701623164, rt0.c2))<=((rt0.c2, rt0.c1, rt0.c0)))) IS FALSE)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((rt0.c0, 0.06681990701623164, rt0.c2))<=((rt0.c2, rt0.c1, rt0.c0)))) IS FALSE)) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((rt0.c2)) BETWEEN ((LENGTH(GROUP_CONCAT(AVG(rt0.c1))))) AND ((rt0.c1 COLLATE RTRIM))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((((rt0.c2)) BETWEEN ((LENGTH(GROUP_CONCAT(AVG(rt0.c1))))) AND ((rt0.c1 COLLATE RTRIM))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((((rt0.c2)) BETWEEN ((LENGTH(GROUP_CONCAT(AVG(rt0.c1))))) AND ((rt0.c1 COLLATE RTRIM)))) ISNULL);
SELECT ALL MIN(CASE (0.9194900692955176 IN (rt0.c2))  WHEN ABS(DISTINCT rt0.c0) THEN NULLIF(rt0.c0, rt0.c2) WHEN (rt0.c2 IN ()) THEN ((rt0.c1)>>(rt0.c2)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN CAST(rt0.c1 AS BLOB) END) FROM rt0 ORDER BY (((((rt0.c2, rt0.c0, rt0.c2))>=((rt0.c0, 0.23499144961867247, rt0.c1))))+(((rt0.c0)<(rt0.c2)))) ASC;
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) AND ((NOT (rt0.c2))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE RTRIM) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) AND ((NOT (rt0.c2))))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c1 COLLATE RTRIM) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) AND ((NOT (rt0.c2))))) ISNULL));
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (LIKELIHOOD(DISTINCT ((((rt0.c1)OR(0.3745151246598478)))AND(rt0.c2)), 0.3731480442014401)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (LIKELIHOOD(DISTINCT ((((rt0.c1)OR(0.3745151246598478)))AND(rt0.c2)), 0.3731480442014401)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((LIKELIHOOD(DISTINCT ((((rt0.c1)OR(0.3745151246598478)))AND(rt0.c2)), 0.3731480442014401)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((0.3498253327204346))))-(((rt0.c2) NOTNULL)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((0.3498253327204346))))-(((rt0.c2) NOTNULL)))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((0.3498253327204346))))-(((rt0.c2) NOTNULL)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING MAX(0.5132101400614387) COLLATE NOCASE UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (MAX(0.5132101400614387) COLLATE NOCASE)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((MAX(0.5132101400614387) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING MAX(0.5132101400614387) COLLATE NOCASE UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (MAX(0.5132101400614387) COLLATE NOCASE)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((MAX(0.5132101400614387) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((~ (CAST(0.9934825158290284 AS REAL)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((~ (CAST(0.9934825158290284 AS REAL)))))) UNION ALL SELECT * FROM rt0 WHERE ((((~ (CAST(0.9934825158290284 AS REAL)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((rt0.c0 IN ('')))|(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c0 IN ('')))|(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((((rt0.c0 IN ('')))|(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING SUM(LIKELIHOOD(rt0.c1, 0.6196566330639101)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (SUM(LIKELIHOOD(rt0.c1, 0.6196566330639101)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((SUM(LIKELIHOOD(rt0.c1, 0.6196566330639101))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING SUM(LIKELIHOOD(rt0.c1, 0.6196566330639101)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (SUM(LIKELIHOOD(rt0.c1, 0.6196566330639101)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((SUM(LIKELIHOOD(rt0.c1, 0.6196566330639101))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c0 THEN ((rt0.c2)!=(rt0.c2)) WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) THEN (rt0.c1 IN ()) WHEN ABS(DISTINCT rt0.c0) THEN CAST(rt0.c1 AS BLOB) WHEN rt0.c0 THEN ((rt0.c2)GLOB(rt0.c0)) WHEN (rt0.c0 IN (rt0.c1)) THEN (rt0.c1 IN ('703067973')) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE WHEN rt0.c0 THEN ((rt0.c2)<>(rt0.c2)) WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) THEN (rt0.c1 IN ()) WHEN ABS(DISTINCT rt0.c0) THEN CAST(rt0.c1 AS BLOB) WHEN rt0.c0 THEN ((rt0.c2)GLOB(rt0.c0)) WHEN (rt0.c0 IN (rt0.c1)) THEN (rt0.c1 IN ('703067973')) END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN ((rt0.c2)!=(rt0.c2)) WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) THEN (rt0.c1 IN ()) WHEN ABS(DISTINCT rt0.c0) THEN CAST(rt0.c1 AS BLOB) WHEN rt0.c0 THEN ((rt0.c2)GLOB(rt0.c0)) WHEN (rt0.c0 IN (rt0.c1)) THEN (rt0.c1 IN ('703067973')) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((x'')AND(rt0.c1)))GLOB(CAST(rt0.c0 AS INTEGER)))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((x'')AND(rt0.c1)))GLOB(CAST(rt0.c0 AS INTEGER)))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((x'')AND(rt0.c1)))GLOB(CAST(rt0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((((rt0.c1) IS TRUE))<<(IFNULL(rt0.c1, rt0.c1)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1) IS TRUE))<<(IFNULL(rt0.c1, rt0.c1)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((((((rt0.c1) IS TRUE))<<(IFNULL(rt0.c1, rt0.c1)))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(GROUP_CONCAT(AVG(MAX(rt0.c0)))) COLLATE RTRIM)/(GROUP_CONCAT(rt0.c2))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (((GROUP_CONCAT(GROUP_CONCAT(AVG(MAX(rt0.c0)))) COLLATE RTRIM)/(GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((GROUP_CONCAT(GROUP_CONCAT(AVG(MAX(rt0.c0)))) COLLATE RTRIM)/(GROUP_CONCAT(rt0.c2)))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c2 IN ())) BETWEEN (CAST(rt0.c1 AS REAL)) AND ((~ (rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2 IN ())) BETWEEN (CAST(rt0.c1 AS REAL)) AND ((~ (rt0.c0))))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c2 IN ())) BETWEEN (CAST(rt0.c1 AS REAL)) AND ((~ (rt0.c0))))) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((- (rt0.c0)) IN ((rt0.c2 IN (rt0.c2))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((- (rt0.c0)) IN ((rt0.c2 IN (rt0.c2))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((((- (rt0.c0)) IN ((rt0.c2 IN (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((rt0.c2 IN ()))*(x'a218'))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2 IN ()))*(x'a218'))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((((((rt0.c2 IN ()))*(x'a218'))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING MAX(TOTAL(MAX(rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (MAX(TOTAL(MAX(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((MAX(TOTAL(MAX(rt0.c1)))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((x'' IN ()))>=(((rt0.c2)GLOB(0.18004058886171848))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((x'' IN ()))>=(((rt0.c2)GLOB(0.18004058886171848))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((x'' IN ()))>=(((rt0.c2)GLOB(0.18004058886171848))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 END)+(((((rt0.c2)OR(rt0.c0)))AND(rt0.c0))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN rt0.c1 END)+(((((rt0.c2)OR(rt0.c0)))AND(rt0.c0))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c1 END)+(((((rt0.c2)OR(rt0.c0)))AND(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((+ (((rt0.c0)LIKE(rt0.c2))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((+ (((rt0.c0)LIKE(rt0.c2))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((+ (((rt0.c0)LIKE(rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING AVG(COUNT(rt0.c2)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (AVG(COUNT(rt0.c2)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((AVG(COUNT(rt0.c2))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((NOT (CASE WHEN rt0.c2 THEN rt0.c0 END))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((NOT (CASE WHEN rt0.c2 THEN rt0.c0 END))))) UNION ALL SELECT * FROM rt0 WHERE ((((NOT (CASE WHEN rt0.c2 THEN rt0.c0 END))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((((((rt0.c2)OR(((((x'9cc4')OR('[]')))AND(rt0.c2)))))OR(((NULL)==(rt0.c0)))))AND((~ (rt0.c0)))))AND((rt0.c0 IN (rt0.c2)))))AND(((rt0.c0)%(rt0.c0)))))AND(((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((((((((((rt0.c2)OR(((((x'9cc4')OR('[]')))AND(rt0.c2)))))OR(((NULL)==(rt0.c0)))))AND((~ (rt0.c0)))))AND((rt0.c0 IN (rt0.c2)))))AND(((rt0.c0)%(rt0.c0)))))AND(((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((((((((rt0.c2)OR(((((x'9cc4')OR('[]')))AND(rt0.c2)))))OR(((NULL)==(rt0.c0)))))AND((~ (rt0.c0)))))AND((rt0.c0 IN (rt0.c2)))))AND(((rt0.c0)%(rt0.c0)))))AND(((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING SUM(TOTAL(MAX(rt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (SUM(TOTAL(MAX(rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((SUM(TOTAL(MAX(rt0.c0)))) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((- (LIKELIHOOD(DISTINCT rt0.c2, 0.41270828825512906)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((- (LIKELIHOOD(DISTINCT rt0.c2, 0.41270828825512906)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((- (LIKELIHOOD(DISTINCT rt0.c2, 0.41270828825512906)))) ISNULL));
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((-1422646799) IS TRUE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((-1422646799) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((-1422646799) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (TRIM((rt0.c1 IN ()), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (TRIM((rt0.c1 IN ()), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((TRIM((rt0.c1 IN ()), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING LIKELY(SUM(COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (LIKELY(SUM(COUNT(*))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((LIKELY(SUM(COUNT(*)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT)) NOT BETWEEN ((+ (rt0.c0))) AND ((rt0.c0 IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS TEXT)) NOT BETWEEN ((+ (rt0.c0))) AND ((rt0.c0 IN ())))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c0 AS TEXT)) NOT BETWEEN ((+ (rt0.c0))) AND ((rt0.c0 IN ())))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c1 IN ()))<=((rt0.c1 IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1 IN ()))<=((rt0.c1 IN ())))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c1 IN ()))<=((rt0.c1 IN ())))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (CASE ((rt0.c1)>>(rt0.c1))  WHEN ((x'')>=(rt0.c1)) THEN CAST(rt0.c0 AS INTEGER) WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (0.9194900692955176)) THEN ((rt0.c2)<>(rt0.c0)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN ABS(DISTINCT rt0.c1) ELSE ((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)) END) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CASE ((rt0.c1)>>(rt0.c1))  WHEN ((x'')>=(rt0.c1)) THEN CAST(rt0.c0 AS INTEGER) WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (0.9194900692955176)) THEN ((rt0.c2)!=(rt0.c0)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN ABS(DISTINCT rt0.c1) ELSE ((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)) END))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE ((rt0.c1)>>(rt0.c1))  WHEN ((x'')>=(rt0.c1)) THEN CAST(rt0.c0 AS INTEGER) WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (0.9194900692955176)) THEN ((rt0.c2)!=(rt0.c0)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN ABS(DISTINCT rt0.c1) ELSE ((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)) END) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING SUM(MAX(SUM(MIN(GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (SUM(MAX(SUM(MIN(GROUP_CONCAT(rt0.c2))))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((SUM(MAX(SUM(MIN(GROUP_CONCAT(rt0.c2)))))) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c0) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((rt0.c1)!=(rt0.c0))) AND ((rt0.c0 IN ())))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((rt0.c1)!=(rt0.c0))) AND ((rt0.c0 IN ())))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((rt0.c1)<>(rt0.c0))) AND ((rt0.c0 IN ())))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING '-1589720476' UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ('-1589720476')) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (('-1589720476') ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING '-1589720476' UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ('-1589720476')) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (('-1589720476') ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) COLLATE NOCASE) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) COLLATE NOCASE) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(CAST(rt0.c2 AS TEXT) AS BLOB)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c2 AS TEXT) AS BLOB)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(CAST(rt0.c2 AS TEXT) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (x'') GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (x''))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MAX(CASE WHEN MIN(rt0.c1) THEN MIN(rt0.c1) WHEN TOTAL(rt0.c2) THEN x'4dd1' WHEN SUM(NULL) THEN COUNT(COUNT(*)) END) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MAX(CASE WHEN MIN(rt0.c1) THEN MIN(rt0.c1) WHEN TOTAL(rt0.c2) THEN x'4dd1' WHEN SUM(NULL) THEN COUNT(COUNT(*)) END))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MAX(CASE WHEN MIN(rt0.c1) THEN MIN(rt0.c1) WHEN TOTAL(rt0.c2) THEN x'4dd1' WHEN SUM(NULL) THEN COUNT(COUNT(*)) END)) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CASE WHEN (((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c0))) THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END WHEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)) WHEN ((rt0.c2)&(rt0.c1)) THEN (~ (rt0.c1)) ELSE ((rt0.c0)<>(rt0.c2)) END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE WHEN (((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c0))) THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END WHEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)) WHEN ((rt0.c2)&(rt0.c1)) THEN (~ (rt0.c1)) ELSE ((rt0.c0)!=(rt0.c2)) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN (((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c0))) THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END WHEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)) WHEN ((rt0.c2)&(rt0.c1)) THEN (~ (rt0.c1)) ELSE ((rt0.c0)!=(rt0.c2)) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))/(((rt0.c0)<<(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))/(((rt0.c0)<<(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))/(((rt0.c0)<<(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (x'6381') GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (x'6381'))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((x'6381') ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING COUNT(AVG('')) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (COUNT(AVG('')))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(AVG(''))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (CASE rt0.c2  WHEN (rt0.c1 IN ()) THEN (- (rt0.c2)) END) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CASE rt0.c2  WHEN (rt0.c1 IN ()) THEN (- (rt0.c2)) END))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE rt0.c2  WHEN (rt0.c1 IN ()) THEN (- (rt0.c2)) END) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c2)%(rt0.c1)))AND(((rt0.c0)*(rt0.c1)))))AND((rt0.c1 IN ())))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((((rt0.c2)%(rt0.c1)))AND(((rt0.c0)*(rt0.c1)))))AND((rt0.c1 IN ())))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((rt0.c2)%(rt0.c1)))AND(((rt0.c0)*(rt0.c1)))))AND((rt0.c1 IN ())))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ((((rt0.c2 IN (rt0.c0))) ISNULL)) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c2 IN (rt0.c0))) ISNULL)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c0))) ISNULL)) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING MIN(rt0.c1 COLLATE BINARY) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MIN(rt0.c1 COLLATE BINARY))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((MIN(rt0.c1 COLLATE BINARY)) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING MIN(rt0.c1 COLLATE BINARY) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MIN(rt0.c1 COLLATE BINARY))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((MIN(rt0.c1 COLLATE BINARY)) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))>=(((NULL)>>(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))>=(((NULL)>>(rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))>=(((NULL)>>(rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c0, NULL, rt0.c0))=((rt0.c0, rt0.c1, rt0.c0))))>=(((rt0.c2)||(rt0.c2))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c0, NULL, rt0.c0))=((rt0.c0, rt0.c1, rt0.c0))))>=(((rt0.c2)||(rt0.c2))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((((rt0.c0, NULL, rt0.c0))=((rt0.c0, rt0.c1, rt0.c0))))>=(((rt0.c2)||(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((TIME(rt0.c1, rt0.c1, rt0.c1, rt0.c1, rt0.c1)) NOT NULL)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((TIME(rt0.c1, rt0.c1, rt0.c1, rt0.c1, rt0.c1)) NOT NULL)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((TIME(rt0.c1, rt0.c1, rt0.c1, rt0.c1, rt0.c1)) NOT NULL)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MIN(GROUP_CONCAT(COUNT(rt0.c2))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MIN(GROUP_CONCAT(COUNT(rt0.c2))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MIN(GROUP_CONCAT(COUNT(rt0.c2)))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (0.8708808728923312) AND (rt0.c1))) NOTNULL)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (0.8708808728923312) AND (rt0.c1))) NOTNULL)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c1) NOT BETWEEN (0.8708808728923312) AND (rt0.c1))) NOTNULL)) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (CAST(x'' AS TEXT)) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (CAST(x'' AS TEXT)))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((CAST(x'' AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((AVG(rt0.c2)) IS TRUE) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((AVG(rt0.c2)) IS TRUE))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((AVG(rt0.c2)) IS TRUE)) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((AVG(rt0.c2)) IS TRUE) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((AVG(rt0.c2)) IS TRUE))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((AVG(rt0.c2)) IS TRUE)) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) IN ())) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) IN ())) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c2)/(rt0.c2))) BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((0.1735245911105051)=(rt0.c2))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2)/(rt0.c2))) BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((0.1735245911105051)=(rt0.c2))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c2)/(rt0.c2))) BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((0.1735245911105051)=(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((+ (rt0.c1)) IN ())) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((+ (rt0.c1)) IN ())))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((+ (rt0.c1)) IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (- (rt0.c0)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT ((- (rt0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (((- (rt0.c0))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (- (rt0.c0)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT ((- (rt0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (((- (rt0.c0))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((~ ((((rt0.c0, NULL, rt0.c0))>((rt0.c1, rt0.c0, rt0.c1)))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((~ ((((rt0.c0, NULL, rt0.c0))>((rt0.c1, rt0.c0, rt0.c1)))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((~ ((((rt0.c0, NULL, rt0.c0))>((rt0.c1, rt0.c0, rt0.c1)))))) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ('85121188') UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ('85121188'))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((('85121188') ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c0)GLOB(rt0.c2)))IS NOT(((rt0.c0) ISNULL)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0)GLOB(rt0.c2)))IS NOT(((rt0.c0) ISNULL)))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c0)GLOB(rt0.c2)))IS NOT(((rt0.c0) ISNULL)))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING TOTAL(MIN(TOTAL(rt0.c0), rt0.c2)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (TOTAL(MIN(TOTAL(rt0.c0), rt0.c2)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((TOTAL(MIN(TOTAL(rt0.c0), rt0.c2))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c1)>=(rt0.c0)) COLLATE NOCASE) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c1)>=(rt0.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c1)>=(rt0.c0)) COLLATE NOCASE) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c2)AND(rt0.c2)) AS INTEGER)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(((rt0.c2)AND(rt0.c2)) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(((rt0.c2)AND(rt0.c2)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))*((((rt0.c1, rt0.c2, rt0.c2, rt0.c0, rt0.c1))>=((rt0.c2, rt0.c0, rt0.c2, rt0.c2, rt0.c0)))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))*((((rt0.c1, rt0.c2, rt0.c2, rt0.c0, rt0.c1))>=((rt0.c2, rt0.c0, rt0.c2, rt0.c2, rt0.c0)))))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))*((((rt0.c1, rt0.c2, rt0.c2, rt0.c0, rt0.c1))>=((rt0.c2, rt0.c0, rt0.c2, rt0.c2, rt0.c0)))))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING MAX(GROUP_CONCAT(rt0.c1)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MAX(GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((MAX(GROUP_CONCAT(rt0.c1))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))OR('Z(')))) AND ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c2)) BETWEEN ((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))OR('Z(')))) AND ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))OR('Z(')))) AND ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c2)>=(NULL))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((NOT (((rt0.c2)>=(NULL))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((((NOT (((rt0.c2)>=(NULL))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2, rt0.c1)))AND(((rt0.c2)LIKE(rt0.c0))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1 IN (rt0.c2, rt0.c1)))AND(((rt0.c2)LIKE(rt0.c0))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c1 IN (rt0.c2, rt0.c1)))AND(((rt0.c2)LIKE(rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING COUNT(MIN(TOTAL(TOTAL(MIN(GROUP_CONCAT(NULL)))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (COUNT(MIN(TOTAL(TOTAL(MIN(GROUP_CONCAT(NULL)))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((COUNT(MIN(TOTAL(TOTAL(MIN(GROUP_CONCAT(NULL))))))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (rt0.c1) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((LIKELY(DISTINCT rt0.c1))<>(rt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((LIKELY(DISTINCT rt0.c1))!=(rt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((LIKELY(DISTINCT rt0.c1))!=(rt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (((CASE NULL  WHEN rt0.c0 THEN rt0.c2 END)<=(INSTR(rt0.c0, rt0.c1)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((CASE NULL  WHEN rt0.c0 THEN rt0.c2 END)<=(INSTR(rt0.c0, rt0.c1)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((CASE NULL  WHEN rt0.c0 THEN rt0.c2 END)<=(INSTR(rt0.c0, rt0.c1)))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING CAST((((rt0.c1)) NOT BETWEEN ((MIN(COUNT(*)))) AND ((AVG(AVG(rt0.c0))))) AS TEXT) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (CAST((((rt0.c1)) NOT BETWEEN ((MIN(COUNT(*)))) AND ((AVG(AVG(rt0.c0))))) AS TEXT))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((CAST((((rt0.c1)) NOT BETWEEN ((MIN(COUNT(*)))) AND ((AVG(AVG(rt0.c0))))) AS TEXT)) ISNULL);
SELECT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE ((((((((((rt0.c1)OR('-1005364202')))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)) IN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)), ((rt0.c1)%(rt0.c1))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((((((((rt0.c1)OR('-1005364202')))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)) IN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)), ((rt0.c1)%(rt0.c1))))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((((((((((((rt0.c1)OR('-1005364202')))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)) IN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)), ((rt0.c1)%(rt0.c1))))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((~ (rt0.c1))) NOT BETWEEN ((NOT (-983079328))) AND (((rt0.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((~ (rt0.c1))) NOT BETWEEN ((NOT (-983079328))) AND (((rt0.c0) NOT NULL)))))) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE ((((((~ (rt0.c1))) NOT BETWEEN ((NOT (-983079328))) AND (((rt0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (TRIM(DISTINCT rt0.c2)) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (TRIM(DISTINCT rt0.c2)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((TRIM(DISTINCT rt0.c2)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING rt0.c0 UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING rt0.c0 UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) AS INTEGER)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) AS INTEGER)))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) AS INTEGER)) ISNULL));
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CAST(x'' AS REAL))) AND ((TIME(rt0.c2, rt0.c2, rt0.c2))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((CAST(x'' AS REAL))) AND ((TIME(rt0.c2, rt0.c2, rt0.c2))))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((CAST(x'' AS REAL))) AND ((TIME(rt0.c2, rt0.c2, rt0.c2))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING SUM((~ ('1793749409'))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (SUM((~ ('1793749409'))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((SUM((~ ('1793749409')))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING SUM((~ ('1793749409'))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (SUM((~ ('1793749409'))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((SUM((~ ('1793749409')))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c1))) NOT NULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((~ (rt0.c1))) NOT NULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((~ (rt0.c1))) NOT NULL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN NULLIF(rt0.c0, rt0.c0) THEN (rt0.c2 IN ()) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN NULLIF(rt0.c0, rt0.c0) THEN (rt0.c2 IN ()) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN NULLIF(rt0.c0, rt0.c0) THEN (rt0.c2 IN ()) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((TRIM(DISTINCT rt0.c0, rt0.c1))) AND (((rt0.c1 IN (rt0.c2)))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((TRIM(DISTINCT rt0.c0, rt0.c1))) AND (((rt0.c1 IN (rt0.c2)))))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((TRIM(DISTINCT rt0.c0, rt0.c1))) AND (((rt0.c1 IN (rt0.c2)))))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((MAX(rt0.c1))|((((0.5853292350967373))<>((rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((MAX(rt0.c1))|((((0.5853292350967373))!=((rt0.c1))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((MAX(rt0.c1))|((((0.5853292350967373))!=((rt0.c1)))))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((MAX(rt0.c1))|((((0.5853292350967373))<>((rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((MAX(rt0.c1))|((((0.5853292350967373))!=((rt0.c1))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((MAX(rt0.c1))|((((0.5853292350967373))!=((rt0.c1)))))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c1 FROM rt0 NOT INDEXED;
SELECT rt0.c1 FROM rt0 WHERE (CASE (- (rt0.c2))  WHEN rt0.c2 COLLATE BINARY THEN TRIM(rt0.c0, rt0.c1) ELSE (+ (rt0.c2)) END) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CASE (- (rt0.c2))  WHEN rt0.c2 COLLATE BINARY THEN TRIM(rt0.c0, rt0.c1) ELSE (+ (rt0.c2)) END))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((CASE (- (rt0.c2))  WHEN rt0.c2 COLLATE BINARY THEN TRIM(rt0.c0, rt0.c1) ELSE (+ (rt0.c2)) END) ISNULL));
SELECT rt0.c1 FROM rt0 NOT INDEXED;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ('') UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (''))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((('') ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END) NOT NULL)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END) NOT NULL)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END) NOT NULL)) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING COUNT(MAX(MIN(TOTAL(MAX(rt0.c1)))) COLLATE NOCASE) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(MAX(MIN(TOTAL(MAX(rt0.c1)))) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(MAX(MIN(TOTAL(MAX(rt0.c1)))) COLLATE NOCASE)) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((+ ((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((+ ((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))))) UNION ALL SELECT * FROM rt0 WHERE ((((+ ((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END IN ())) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END IN ())))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING MIN(((MIN(rt0.c0)) BETWEEN (SUM(SUM(GROUP_CONCAT(x'5fe9')))) AND (rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (MIN(((MIN(rt0.c0)) BETWEEN (SUM(SUM(GROUP_CONCAT(x'5fe9')))) AND (rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((MIN(((MIN(rt0.c0)) BETWEEN (SUM(SUM(GROUP_CONCAT(x'5fe9')))) AND (rt0.c0)))) ISNULL);
SELECT MAX(SUBSTR(rt0.c2, NULL) COLLATE BINARY) FROM rt0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((rt0.c0) ISNULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rt0.c0) ISNULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rt0.c0) ISNULL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (0.20326912118613427) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (0.20326912118613427))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((0.20326912118613427) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE ((- ((rt0.c0 IN ())))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((- ((rt0.c0 IN ())))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((- ((rt0.c0 IN ())))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (((+ (rt0.c0)))<<(CAST(AVG(COUNT(*)) AS REAL))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT ((((+ (rt0.c0)))<<(CAST(AVG(COUNT(*)) AS REAL))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (((((+ (rt0.c0)))<<(CAST(AVG(COUNT(*)) AS REAL)))) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (rt0.c0) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE (((((rt0.c1)<=(rt0.c1))) NOT BETWEEN (((rt0.c0)*(rt0.c0))) AND (1655438785))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c1)<=(rt0.c1))) NOT BETWEEN (((rt0.c0)*(rt0.c0))) AND (1655438785))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1)<=(rt0.c1))) NOT BETWEEN (((rt0.c0)*(rt0.c0))) AND (1655438785))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))&((~ (rt0.c1))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))&((~ (rt0.c1))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))&((~ (rt0.c1))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((SUM(COUNT(*)))<>(GROUP_CONCAT(MIN(rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((SUM(COUNT(*)))<>(GROUP_CONCAT(MIN(rt0.c0)))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((SUM(COUNT(*)))<>(GROUP_CONCAT(MIN(rt0.c0))))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c0 IN ()))AND(TRIM(DISTINCT rt0.c1))))OR(((rt0.c2) NOTNULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c0 IN ()))AND(TRIM(DISTINCT rt0.c1))))OR(((rt0.c2) NOTNULL)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((((rt0.c0 IN ()))AND(TRIM(DISTINCT rt0.c1))))OR(((rt0.c2) NOTNULL)))) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((NOT (rt0.c1)))LIKE(CAST(rt0.c0 AS TEXT)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((NOT (rt0.c1)))LIKE(CAST(rt0.c0 AS TEXT)))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((NOT (rt0.c1)))LIKE(CAST(rt0.c0 AS TEXT)))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c2)<(rt0.c2)))+((- (rt0.c1))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c2)<(rt0.c2)))+((- (rt0.c1))))))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c2)<(rt0.c2)))+((- (rt0.c1))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((NULL)/(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((NULL)/(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((NULL)/(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CASE WHEN (((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c0))) THEN CAST(rt0.c0 AS REAL) WHEN '604028094' THEN ((rt0.c0)||(rt0.c1)) WHEN ((rt0.c0) IS FALSE) THEN ((((((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))AND(NULL)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)) END) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN (((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c0))) THEN CAST(rt0.c0 AS REAL) WHEN '604028094' THEN ((rt0.c0)||(rt0.c1)) WHEN ((rt0.c0) IS FALSE) THEN ((((((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))AND(NULL)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)) END))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE WHEN (((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c0))) THEN CAST(rt0.c0 AS REAL) WHEN '604028094' THEN ((rt0.c0)||(rt0.c1)) WHEN ((rt0.c0) IS FALSE) THEN ((((((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))AND(NULL)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)) END) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING UNLIKELY(COUNT(MAX(rt0.c0))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (UNLIKELY(COUNT(MAX(rt0.c0))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((UNLIKELY(COUNT(MAX(rt0.c0)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))AND(((rt0.c0) IS TRUE)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))AND(((rt0.c0) IS TRUE)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))AND(((rt0.c0) IS TRUE)))) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ('') UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (''))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((('') ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((((LOWER(rt0.c1))AND(rt0.c0)))OR(COALESCE(DISTINCT rt0.c1, rt0.c0)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((((LOWER(rt0.c1))AND(rt0.c0)))OR(COALESCE(DISTINCT rt0.c1, rt0.c0)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((((((LOWER(rt0.c1))AND(rt0.c0)))OR(COALESCE(DISTINCT rt0.c1, rt0.c0)))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING TOTAL(MAX(COUNT(rt0.c0))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (TOTAL(MAX(COUNT(rt0.c0))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((TOTAL(MAX(COUNT(rt0.c0)))) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (LOWER(((rt0.c2) IS TRUE))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (LOWER(((rt0.c2) IS TRUE))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((LOWER(((rt0.c2) IS TRUE))) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((- (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((- (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((- (rt0.c1))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (CASE WHEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c2)|(rt0.c0)) ELSE ((rt0.c1)*(0.9238864320632038)) END) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c2)|(rt0.c0)) ELSE ((rt0.c1)*(0.9238864320632038)) END))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((CASE WHEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c2)|(rt0.c0)) ELSE ((rt0.c1)*(0.9238864320632038)) END) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING TOTAL((COUNT(*) IN ())) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (TOTAL((COUNT(*) IN ())))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((TOTAL((COUNT(*) IN ()))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING TOTAL((COUNT(*) IN ())) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (TOTAL((COUNT(*) IN ())))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((TOTAL((COUNT(*) IN ()))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT SUM((((((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1))))>((((rt0.c1)>(rt0.c1)))))) FROM rt0 ORDER BY ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (0.3622620061857058) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (0.3622620061857058))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((0.3622620061857058) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((('9jZ+)ޏl.' IN (rt0.c2)))*((('')/(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((('9jZ+)ޏl.' IN (rt0.c2)))*((('')/(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((('9jZ+)ޏl.' IN (rt0.c2)))*((('')/(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0))) BETWEEN (rt0.c1) AND (((NULL) IS TRUE)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0))) BETWEEN (rt0.c1) AND (((NULL) IS TRUE)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0))) BETWEEN (rt0.c1) AND (((NULL) IS TRUE)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING AVG(COUNT(MIN(COUNT(rt0.c2)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (AVG(COUNT(MIN(COUNT(rt0.c2)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((AVG(COUNT(MIN(COUNT(rt0.c2))))) ISNULL);
SELECT ALL SUM((((rt0.c0)==(rt0.c0)) IN (((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)), QUOTE(rt0.c2)))) FROM rt0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ('1884742272') UNION ALL SELECT * FROM rt0 WHERE ((NOT ('1884742272'))) UNION ALL SELECT ALL * FROM rt0 WHERE ((('1884742272') ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((+ (((rt0.c1)||(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((+ (((rt0.c1)||(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((+ (((rt0.c1)||(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT))==(((rt0.c2) IS TRUE)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS TEXT))=(((rt0.c2) IS TRUE)))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((CAST(rt0.c2 AS TEXT))=(((rt0.c2) IS TRUE)))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT(rt0.c0) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(rt0.c0))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(rt0.c0)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT(rt0.c0) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(rt0.c0))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(rt0.c0)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT MAX((((((rt0.c2) ISNULL)))<((rt0.c0 COLLATE NOCASE)))) FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((x'') NOT BETWEEN ((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, -1.85817639E8)) AND ((rt0.c0, x'4443', rt0.c1)))) AND (rt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((x'') NOT BETWEEN ((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, -1.85817639E8)) AND ((rt0.c0, x'4443', rt0.c1)))) AND (rt0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((x'') NOT BETWEEN ((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, -1.85817639E8)) AND ((rt0.c0, x'4443', rt0.c1)))) AND (rt0.c0))) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (TRIM(DISTINCT UPPER(DISTINCT rt0.c2))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (TRIM(DISTINCT UPPER(DISTINCT rt0.c2))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((TRIM(DISTINCT UPPER(DISTINCT rt0.c2))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE)-(((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE NOCASE)-(((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c2 COLLATE NOCASE)-(((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING GROUP_CONCAT(TOTAL(COUNT(*))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(COUNT(*))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((GROUP_CONCAT(TOTAL(COUNT(*)))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (json_object(((0.840320011413804) NOT NULL), CASE rt0.c2  WHEN x'd897' THEN rt0.c0 ELSE rt0.c2 END, rt0.c0 COLLATE NOCASE, 1141520115)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (json_object(((0.840320011413804) NOT NULL), CASE rt0.c2  WHEN x'd897' THEN rt0.c0 ELSE rt0.c2 END, rt0.c0 COLLATE NOCASE, 1141520115)))) UNION ALL SELECT * FROM rt0 WHERE (((json_object(((0.840320011413804) NOT NULL), CASE rt0.c2  WHEN x'd897' THEN rt0.c0 ELSE rt0.c2 END, rt0.c0 COLLATE NOCASE, 1141520115)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (-937425855) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (-937425855))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((-937425855) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (0.18629441620939913) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (0.18629441620939913))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((0.18629441620939913) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING GROUP_CONCAT(CAST(rt0.c1 AS TEXT)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(CAST(rt0.c1 AS TEXT)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(CAST(rt0.c1 AS TEXT))) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING GROUP_CONCAT(CAST(rt0.c1 AS TEXT)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(CAST(rt0.c1 AS TEXT)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(CAST(rt0.c1 AS TEXT))) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (UNLIKELY(DISTINCT rt0.c0 COLLATE RTRIM)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (UNLIKELY(DISTINCT rt0.c0 COLLATE RTRIM)))) UNION ALL SELECT * FROM rt0 WHERE (((UNLIKELY(DISTINCT rt0.c0 COLLATE RTRIM)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (NULL) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING MAX(SUM(COUNT(rt0.c1))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MAX(SUM(COUNT(rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((MAX(SUM(COUNT(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((x'')GLOB(rt0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((x'')GLOB(rt0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((x'')GLOB(rt0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c1)!=(rt0.c2)) IN ())) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1)!=(rt0.c2)) IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c1)<>(rt0.c2)) IN ())) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c1) NOT NULL))AND(NULL))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1) NOT NULL))AND(NULL))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c1) NOT NULL))AND(NULL))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING TOTAL(GROUP_CONCAT(COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (TOTAL(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((TOTAL(GROUP_CONCAT(COUNT(*)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c0 COLLATE BINARY)OR((rt0.c2 IN ()))))AND((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))AND(((rt0.c2) IS FALSE))))OR(0.6388582652428298))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((((rt0.c0 COLLATE BINARY)OR((rt0.c2 IN ()))))AND((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))AND(((rt0.c2) IS FALSE))))OR(0.6388582652428298))))) UNION ALL SELECT * FROM rt0 WHERE (((((((((((rt0.c0 COLLATE BINARY)OR((rt0.c2 IN ()))))AND((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))AND(((rt0.c2) IS FALSE))))OR(0.6388582652428298))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c2)GLOB(rt0.c1)) IN ('2041974564'))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2)GLOB(rt0.c1)) IN ('2041974564'))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c2)GLOB(rt0.c1)) IN ('2041974564'))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c0 IN (rt0.c2)))IS NOT(NULL))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c0 IN (rt0.c2)))IS NOT(NULL))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c0 IN (rt0.c2)))IS NOT(NULL))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING SUM(MIN(MAX(AVG(MIN(MIN(AVG(rt0.c0))))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (SUM(MIN(MAX(AVG(MIN(MIN(AVG(rt0.c0))))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((SUM(MIN(MAX(AVG(MIN(MIN(AVG(rt0.c0)))))))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((json_insert(rt0.c2, rt0.c0, rt0.c1)) IS TRUE)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((json_insert(rt0.c2, rt0.c0, rt0.c1)) IS TRUE)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((json_insert(rt0.c2, rt0.c0, rt0.c1)) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((rt0.c2 IN (rt0.c1, rt0.c1)))IS NOT(rt0.c1 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2 IN (rt0.c1, rt0.c1)))IS NOT(rt0.c1 COLLATE BINARY))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c1, rt0.c1)))IS NOT(rt0.c1 COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))OR(x''))) NOT NULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c1)AND(rt0.c2)))OR(x''))) NOT NULL)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c2)))OR(x''))) NOT NULL)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((MAX(MIN(NULL))))<>((CAST(rt0.c2 AS INTEGER)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT ((((MAX(MIN(NULL))))<>((CAST(rt0.c2 AS INTEGER)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((((MAX(MIN(NULL))))!=((CAST(rt0.c2 AS INTEGER))))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (0xffffffffe918fb13 COLLATE NOCASE) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (0xffffffffe918fb13 COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((0xffffffffe918fb13 COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE rt0.c2  WHEN CAST(rt0.c2 AS REAL) THEN NULL END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE rt0.c2  WHEN CAST(rt0.c2 AS REAL) THEN NULL END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE rt0.c2  WHEN CAST(rt0.c2 AS REAL) THEN NULL END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)<<((+ (rt0.c2))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)<<((+ (rt0.c2))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)<<((+ (rt0.c2))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (COUNT(-1102876918) IN ()) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT ((COUNT(-1102876918) IN ()))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (((COUNT(-1102876918) IN ())) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (COUNT(-1102876918) IN ()) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT ((COUNT(-1102876918) IN ()))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (((COUNT(-1102876918) IN ())) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (SQLITE_COMPILEOPTION_USED(((rt0.c1) ISNULL))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (SQLITE_COMPILEOPTION_USED(((rt0.c1) ISNULL))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((SQLITE_COMPILEOPTION_USED(((rt0.c1) ISNULL))) ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT)) IS FALSE)) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS TEXT)) IS FALSE)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c1 AS TEXT)) IS FALSE)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING TOTAL(MAX(MIN(MAX(MIN(rt0.c2))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (TOTAL(MAX(MIN(MAX(MIN(rt0.c2))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((TOTAL(MAX(MIN(MAX(MIN(rt0.c2)))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((~ (((rt0.c0) IS FALSE)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((~ (((rt0.c0) IS FALSE)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((~ (((rt0.c0) IS FALSE)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((('0.8171232769405057') NOT NULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((('0.8171232769405057') NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((('0.8171232769405057') NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (ABS((((rt0.c0))=((rt0.c0))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (ABS((((rt0.c0))=((rt0.c0))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((ABS((((rt0.c0))==((rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING json_valid(SUM(GROUP_CONCAT(SUM(SUM(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (json_valid(SUM(GROUP_CONCAT(SUM(SUM(rt0.c1))))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((json_valid(SUM(GROUP_CONCAT(SUM(SUM(rt0.c1)))))) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c0)AND(rt0.c0 COLLATE RTRIM)))OR(((rt0.c1) IS FALSE)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0)AND(rt0.c0 COLLATE RTRIM)))OR(((rt0.c1) IS FALSE)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c0 COLLATE RTRIM)))OR(((rt0.c1) IS FALSE)))) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((rt0.c0 IN ())) NOT NULL)) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0 IN ())) NOT NULL)))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((rt0.c0 IN ())) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE ((((((rt0.c2, rt0.c2, rt0.c2))>(('-0.0', rt0.c1, rt0.c2))))<<(CAST(rt0.c2 AS INTEGER)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c2, rt0.c2, rt0.c2))>(('-0.0', rt0.c1, rt0.c2))))<<(CAST(rt0.c2 AS INTEGER)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((((((rt0.c2, rt0.c2, rt0.c2))>(('-0.0', rt0.c1, rt0.c2))))<<(CAST(rt0.c2 AS INTEGER)))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING AVG(SUM(rt0.c0)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (AVG(SUM(rt0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((AVG(SUM(rt0.c0))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 END) NOTNULL)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN rt0.c0 END) NOTNULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c0 END) NOTNULL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((rt0.c0 COLLATE NOCASE))<((((rt0.c2) ISNULL))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c0 COLLATE NOCASE))<((((rt0.c2) ISNULL))))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((((rt0.c0 COLLATE NOCASE))<((((rt0.c2) ISNULL))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((('-1164136756') IS TRUE)) BETWEEN (rt0.c2) AND (SQLITE_COMPILEOPTION_USED(rt0.c2)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((('-1164136756') IS TRUE)) BETWEEN (rt0.c2) AND (SQLITE_COMPILEOPTION_USED(rt0.c2)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((('-1164136756') IS TRUE)) BETWEEN (rt0.c2) AND (SQLITE_COMPILEOPTION_USED(rt0.c2)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING json_valid(rt0.c2) COLLATE NOCASE UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (json_valid(rt0.c2) COLLATE NOCASE)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((json_valid(rt0.c2) COLLATE NOCASE) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING json_valid(rt0.c2) COLLATE NOCASE UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (json_valid(rt0.c2) COLLATE NOCASE)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((json_valid(rt0.c2) COLLATE NOCASE) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (LIKELY((((rt0.c1))=((rt0.c2))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (LIKELY((((rt0.c1))==((rt0.c2))))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((LIKELY((((rt0.c1))=((rt0.c2))))) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((NOT (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((NOT (rt0.c0))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING SUM(((COUNT(rt0.c2)) NOT BETWEEN (rt0.c0) AND (rt0.c2))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (SUM(((COUNT(rt0.c2)) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((SUM(((COUNT(rt0.c2)) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c1) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (CAST(LOWER(DISTINCT rt0.c0) AS REAL)) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST(LOWER(DISTINCT rt0.c0) AS REAL)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(LOWER(DISTINCT rt0.c0) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (LIKELY((- (rt0.c1)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (LIKELY((- (rt0.c1)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((LIKELY((- (rt0.c1)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((MIN(rt0.c0)) NOT BETWEEN (rt0.c2) AND (rt0.c2)))==(GROUP_CONCAT(SUM(AVG(AVG(rt0.c2)))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((((MIN(rt0.c0)) NOT BETWEEN (rt0.c2) AND (rt0.c2)))=(GROUP_CONCAT(SUM(AVG(AVG(rt0.c2)))))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((((MIN(rt0.c0)) NOT BETWEEN (rt0.c2) AND (rt0.c2)))==(GROUP_CONCAT(SUM(AVG(AVG(rt0.c2))))))) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (UNLIKELY(((rt0.c0)-(rt0.c0)))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (UNLIKELY(((rt0.c0)-(rt0.c0)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((UNLIKELY(((rt0.c0)-(rt0.c0)))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c2) IS TRUE)) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2) IS TRUE)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c2) IS TRUE)) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((((((TOTAL(MAX(MAX(MAX(COUNT(*))))))OR(COUNT(*))))OR(GROUP_CONCAT(SUM(rt0.c1)))))OR(MAX(rt0.c1))))OR(NULL)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((((((((TOTAL(MAX(MAX(MAX(COUNT(*))))))OR(COUNT(*))))OR(GROUP_CONCAT(SUM(rt0.c1)))))OR(MAX(rt0.c1))))OR(NULL)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((((((((TOTAL(MAX(MAX(MAX(COUNT(*))))))OR(COUNT(*))))OR(GROUP_CONCAT(SUM(rt0.c1)))))OR(MAX(rt0.c1))))OR(NULL))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST(0.4351057391472799 AS TEXT)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(0.4351057391472799 AS TEXT)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(0.4351057391472799 AS TEXT)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((- (((rt0.c0)<<(rt0.c2))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((- (((rt0.c0)<<(rt0.c2))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((- (((rt0.c0)<<(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c1)%(rt0.c1)) IN (NULL, CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1)%(rt0.c1)) IN (NULL, CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c1)%(rt0.c1)) IN (NULL, CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (((('0.5233714776588403')|(GROUP_CONCAT(AVG(rt0.c0)))))GLOB(SUM(rt0.c1))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT ((((('0.5233714776588403')|(GROUP_CONCAT(AVG(rt0.c0)))))GLOB(SUM(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (((((('0.5233714776588403')|(GROUP_CONCAT(AVG(rt0.c0)))))GLOB(SUM(rt0.c1)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (0.0022592340138534173) UNION ALL SELECT * FROM rt0 WHERE ((NOT (0.0022592340138534173))) UNION ALL SELECT * FROM rt0 WHERE (((0.0022592340138534173) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((''))>((((x'')||(rt0.c2)))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((''))>((((x'')||(rt0.c2)))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((''))>((((x'')||(rt0.c2)))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c2)|(rt0.c0))) NOT NULL)) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2)|(rt0.c0))) NOT NULL)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c2)|(rt0.c0))) NOT NULL)) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((NULL, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, x'')) AND ((rt0.c1, rt0.c1, rt0.c2))))) AND ((rt0.c2)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN (((((NULL, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, x'')) AND ((rt0.c1, rt0.c1, rt0.c2))))) AND ((rt0.c2)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN (((((NULL, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, x'')) AND ((rt0.c1, rt0.c1, rt0.c2))))) AND ((rt0.c2)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))<(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))<(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))<(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE ((+ (((x'')+(rt0.c0))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((+ (((x'')+(rt0.c0))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((+ (((x'')+(rt0.c0))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING HEX(SUM(TOTAL(AVG(rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (HEX(SUM(TOTAL(AVG(rt0.c0)))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((HEX(SUM(TOTAL(AVG(rt0.c0))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c2) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (CAST(ROUND(rt0.c2, rt0.c1) AS NUMERIC)) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST(ROUND(rt0.c2, rt0.c1) AS NUMERIC)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(ROUND(rt0.c2, rt0.c1) AS NUMERIC)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING SUM(((rt0.c2)LIKE(rt0.c1))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (SUM(((rt0.c2)LIKE(rt0.c1))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((SUM(((rt0.c2)LIKE(rt0.c1)))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING SUM(((rt0.c2)LIKE(rt0.c1))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (SUM(((rt0.c2)LIKE(rt0.c1))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((SUM(((rt0.c2)LIKE(rt0.c1)))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 END)>=((((rt0.c1))!=((rt0.c1)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN rt0.c1 END)>=((((rt0.c1))!=((rt0.c1)))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c1 END)>=((((rt0.c1))<>((rt0.c1)))))) ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ('-1088889427') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ('-1088889427'))) UNION SELECT DISTINCT * FROM rt0 WHERE ((('-1088889427') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c1)|(rt0.c1)) COLLATE NOCASE) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c1)|(rt0.c1)) COLLATE NOCASE))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c1)|(rt0.c1)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING SUM(0.5233714776588403) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (SUM(0.5233714776588403))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((SUM(0.5233714776588403)) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING SUM(0.5233714776588403) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (SUM(0.5233714776588403))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((SUM(0.5233714776588403)) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (rt0.c1) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c1) NOT NULL)) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1) NOT NULL)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c1) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((~ (((rt0.c1)GLOB(rt0.c2))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((~ (((rt0.c1)GLOB(rt0.c2))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((((~ (((rt0.c1)GLOB(rt0.c2))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING MIN(TOTAL('OinD_t)%a')) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MIN(TOTAL('OinD_t)%a')))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((MIN(TOTAL('OinD_t)%a'))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((rt0.c0 IN (rt0.c0, rt0.c2)))) AND ((((rt0.c2)%(rt0.c1)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN (((rt0.c0 IN (rt0.c0, rt0.c2)))) AND ((((rt0.c2)%(rt0.c1)))))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN (((rt0.c0 IN (rt0.c0, rt0.c2)))) AND ((((rt0.c2)%(rt0.c1)))))) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((CAST(rt0.c0 AS NUMERIC) IN ())) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((CAST(rt0.c0 AS NUMERIC) IN ())))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((CAST(rt0.c0 AS NUMERIC) IN ())) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((json(rt0.c2)))==(((((rt0.c1, rt0.c1, rt0.c0))!=((rt0.c2, rt0.c0, rt0.c0))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((json(rt0.c2)))=(((((rt0.c1, rt0.c1, rt0.c0))<>((rt0.c2, rt0.c0, rt0.c0))))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((json(rt0.c2)))==(((((rt0.c1, rt0.c1, rt0.c0))!=((rt0.c2, rt0.c0, rt0.c0))))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING TOTAL(MIN(rt0.c1)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (TOTAL(MIN(rt0.c1)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((TOTAL(MIN(rt0.c1))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ('#\ndM	ߜ/') UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ('#\ndM	ߜ/'))) UNION ALL SELECT * FROM rt0 WHERE ((('#\ndM	ߜ/') ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST((rt0.c2 IN (rt0.c0, rt0.c2, rt0.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST((rt0.c2 IN (rt0.c0, rt0.c2, rt0.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST((rt0.c2 IN (rt0.c0, rt0.c2, rt0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((- (TYPEOF(rt0.c1)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((- (TYPEOF(rt0.c1)))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((((- (TYPEOF(rt0.c1)))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING AVG(((rt0.c0)/(MAX(rt0.c2)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (AVG(((rt0.c0)/(MAX(rt0.c2)))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((AVG(((rt0.c0)/(MAX(rt0.c2))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((((rt0.c1, 0.2625046928618753, rt0.c0))>((rt0.c1, x'811c', rt0.c2)))) NOT BETWEEN (x'74e8') AND (((rt0.c2)>=(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((rt0.c1, 0.2625046928618753, rt0.c0))>((rt0.c1, x'811c', rt0.c2)))) NOT BETWEEN (x'74e8') AND (((rt0.c2)>=(rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((((rt0.c1, 0.2625046928618753, rt0.c0))>((rt0.c1, x'811c', rt0.c2)))) NOT BETWEEN (x'74e8') AND (((rt0.c2)>=(rt0.c2))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (0.6448277871537963) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (0.6448277871537963))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((0.6448277871537963) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS BLOB)) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST((rt0.c0 IN ()) AS BLOB)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST((rt0.c0 IN ()) AS BLOB)) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(MIN(rt0.c1)))*(rt0.c1 COLLATE NOCASE)) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (((COUNT(MIN(rt0.c1)))*(rt0.c1 COLLATE NOCASE)))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((((COUNT(MIN(rt0.c1)))*(rt0.c1 COLLATE NOCASE))) ISNULL);
SELECT MIN(CASE WHEN (rt0.c2 IN ()) THEN rt0.c2 END) FROM rt0 NOT INDEXED;
SELECT ALL rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (TRIM(CASE WHEN rt0.c2 THEN rt0.c0 END, '-2021032246')) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (TRIM(CASE WHEN rt0.c2 THEN rt0.c0 END, '-2021032246')))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((TRIM(CASE WHEN rt0.c2 THEN rt0.c0 END, '-2021032246')) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (CASE WHEN NULL THEN rt0.c0 COLLATE RTRIM ELSE ((rt0.c1)<<(rt0.c2)) END) UNION SELECT DISTINCT rt0.c0 FROM rt0 NOT INDEXED WHERE ((NOT (CASE WHEN NULL THEN rt0.c0 COLLATE RTRIM ELSE ((rt0.c1)<<(rt0.c2)) END))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((CASE WHEN NULL THEN rt0.c0 COLLATE RTRIM ELSE ((rt0.c1)<<(rt0.c2)) END) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((((+ (rt0.c2))) IS FALSE)) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((((+ (rt0.c2))) IS FALSE)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((((+ (rt0.c2))) IS FALSE)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (((SUM(rt0.c2))) BETWEEN ((x'2dd2')) AND ((''))) COLLATE NOCASE UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT ((((SUM(rt0.c2))) BETWEEN ((x'2dd2')) AND ((''))) COLLATE NOCASE)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (((((SUM(rt0.c2))) BETWEEN ((x'2dd2')) AND ((''))) COLLATE NOCASE) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (((SUM(rt0.c2))) BETWEEN ((x'2dd2')) AND ((''))) COLLATE NOCASE UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT ((((SUM(rt0.c2))) BETWEEN ((x'2dd2')) AND ((''))) COLLATE NOCASE)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (((((SUM(rt0.c2))) BETWEEN ((x'2dd2')) AND ((''))) COLLATE NOCASE) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN 0.34159633816277346 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END)>((rt0.c2 IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN 0.34159633816277346 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END)>((rt0.c2 IN ())))))) UNION ALL SELECT * FROM rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN 0.34159633816277346 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END)>((rt0.c2 IN ())))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)/(((rt0.c2)<(rt0.c2))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE BINARY)/(((rt0.c2)<(rt0.c2))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY)/(((rt0.c2)<(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((((rt0.c0)OR('1858607445')))+(((rt0.c0) ISNULL)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0)OR('1858607445')))+(((rt0.c0) ISNULL)))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((((rt0.c0)OR('1858607445')))+(((rt0.c0) ISNULL)))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING MIN((AVG(rt0.c1) IN (rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MIN((AVG(rt0.c1) IN (rt0.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((MIN((AVG(rt0.c1) IN (rt0.c1)))) ISNULL);
SELECT ALL MIN((((rt0.c2)) BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((rt0.c2)))) FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ('1924041777') UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ('1924041777'))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((('1924041777') ISNULL));
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (x'') UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) ISNULL)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) ISNULL)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) ISNULL)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((rt0.c0)) BETWEEN ((COUNT(*))) AND ((LAST_INSERT_ROWID()))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT ((((rt0.c0)) BETWEEN ((COUNT(*))) AND ((LAST_INSERT_ROWID()))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((((rt0.c0)) BETWEEN ((COUNT(*))) AND ((LAST_INSERT_ROWID())))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((rt0.c0)) BETWEEN ((COUNT(*))) AND ((LAST_INSERT_ROWID()))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT ((((rt0.c0)) BETWEEN ((COUNT(*))) AND ((LAST_INSERT_ROWID()))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((((rt0.c0)) BETWEEN ((COUNT(*))) AND ((LAST_INSERT_ROWID())))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL SUM(rt0.c2) FROM rt0;
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND(NULL)))AND(rt0.c2)) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND(NULL)))AND(rt0.c2)) COLLATE NOCASE))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND(NULL)))AND(rt0.c2)) COLLATE NOCASE) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2) IS TRUE))==(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c2) IS TRUE))=(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2) IS TRUE))=(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (UPPER(DISTINCT LIKELIHOOD(DISTINCT rt0.c2, 0.2204667489238309))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (UPPER(DISTINCT LIKELIHOOD(DISTINCT rt0.c2, 0.2204667489238309))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((UPPER(DISTINCT LIKELIHOOD(DISTINCT rt0.c2, 0.2204667489238309))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING GROUP_CONCAT((NOT (GROUP_CONCAT(MAX(MIN(MIN(rt0.c0))))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (GROUP_CONCAT((NOT (GROUP_CONCAT(MAX(MIN(MIN(rt0.c0))))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((GROUP_CONCAT((NOT (GROUP_CONCAT(MAX(MIN(MIN(rt0.c0)))))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((((((rt0.c1))!=((rt0.c1))))OR((rt0.c1 IN ()))))OR((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND (('144135198')))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((((rt0.c1))<>((rt0.c1))))OR((rt0.c1 IN ()))))OR((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND (('144135198')))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((((((rt0.c1))!=((rt0.c1))))OR((rt0.c1 IN ()))))OR((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND (('144135198')))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c1))<=((rt0.c0)))))<=((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((((rt0.c1))<=((rt0.c0)))))<=((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((rt0.c1))<=((rt0.c0)))))<=((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((((((((AVG(rt0.c1))OR(SUM(SUM(AVG(rt0.c1))))))OR(CAST(rt0.c1 AS REAL))))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (MIN(rt0.c1))))))AND(('1618353173' IN (rt0.c2)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (((((((((AVG(rt0.c1))OR(SUM(SUM(AVG(rt0.c1))))))OR(CAST(rt0.c1 AS REAL))))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (MIN(rt0.c1))))))AND(('1618353173' IN (rt0.c2)))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((((((((((AVG(rt0.c1))OR(SUM(SUM(AVG(rt0.c1))))))OR(CAST(rt0.c1 AS REAL))))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (MIN(rt0.c1))))))AND(('1618353173' IN (rt0.c2))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c0 AS BLOB))AND((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0))))))AND((rt0.c1 IN (rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((CAST(rt0.c0 AS BLOB))AND((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0))))))AND((rt0.c1 IN (rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((CAST(rt0.c0 AS BLOB))AND((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0))))))AND((rt0.c1 IN (rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))) AND ((CASE 0.16353097042035103  WHEN rt0.c0 THEN rt0.c2 END)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))) AND ((CASE 0.16353097042035103  WHEN rt0.c0 THEN rt0.c2 END)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))) AND ((CASE 0.16353097042035103  WHEN rt0.c0 THEN rt0.c2 END)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((((rt0.c2) IS FALSE)) IS FALSE)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2) IS FALSE)) IS FALSE)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((((((rt0.c2) IS FALSE)) IS FALSE)) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING AVG(TOTAL(rt0.c2)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (AVG(TOTAL(rt0.c2)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((AVG(TOTAL(rt0.c2))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN ((rt0.c2 IN ())) AND (((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN ((rt0.c2 IN ())) AND (((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 NOT INDEXED WHERE (((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN ((rt0.c2 IN ())) AND (((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))))) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (CAST(((rt0.c1) NOTNULL) AS BLOB)) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST(((rt0.c1) NOTNULL) AS BLOB)))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST(((rt0.c1) NOTNULL) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS BLOB)) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CAST(rt0.c0 COLLATE BINARY AS BLOB)))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((CAST(rt0.c0 COLLATE BINARY AS BLOB)) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((0.3498253327204346) IS TRUE) COLLATE BINARY UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (((0.3498253327204346) IS TRUE) COLLATE BINARY)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((((0.3498253327204346) IS TRUE) COLLATE BINARY) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((0.3498253327204346) IS TRUE) COLLATE BINARY UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (((0.3498253327204346) IS TRUE) COLLATE BINARY)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((((0.3498253327204346) IS TRUE) COLLATE BINARY) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)>(rt0.c0)) IN (rt0.c0))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c1)>(rt0.c0)) IN (rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c1)>(rt0.c0)) IN (rt0.c0))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0)GLOB(rt0.c0)) IN ((- (rt0.c0)), rt0.c1 COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c0)GLOB(rt0.c0)) IN ((- (rt0.c0)), rt0.c1 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0)GLOB(rt0.c0)) IN ((- (rt0.c0)), rt0.c1 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c2)) COLLATE NOCASE COLLATE BINARY) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((NOT (rt0.c2)) COLLATE NOCASE COLLATE BINARY))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((NOT (rt0.c2)) COLLATE NOCASE COLLATE BINARY) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (+ (AVG(MIN(rt0.c0)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT ((+ (AVG(MIN(rt0.c0)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (((+ (AVG(MIN(rt0.c0))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (NULL) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM rt0 WHERE (((NULL) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1)-(rt0.c0)))AND((rt0.c1 IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c1)-(rt0.c0)))AND((rt0.c1 IN ())))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1)-(rt0.c0)))AND((rt0.c1 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c1)) BETWEEN (((rt0.c1 IN ()))) AND ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN (((rt0.c1 IN ()))) AND ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c1)) BETWEEN (((rt0.c1 IN ()))) AND ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING AVG(TOTAL(rt0.c0)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (AVG(TOTAL(rt0.c0)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((AVG(TOTAL(rt0.c0))) ISNULL);
SELECT rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((((x'')<(rt0.c2)), rt0.c0 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c1 END)) AND ((((((rt0.c0)AND(NULL)))AND(rt0.c2)), ((rt0.c2)<=(rt0.c1)), ((rt0.c2)||(rt0.c1)))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((((x'')<(rt0.c2)), rt0.c0 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c1 END)) AND ((((((rt0.c0)AND(NULL)))AND(rt0.c2)), ((rt0.c2)<=(rt0.c1)), ((rt0.c2)||(rt0.c1)))))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((((x'')<(rt0.c2)), rt0.c0 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c1 END)) AND ((((((rt0.c0)AND(NULL)))AND(rt0.c2)), ((rt0.c2)<=(rt0.c1)), ((rt0.c2)||(rt0.c1)))))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((0.9238864320632038)GLOB(rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((0.9238864320632038)GLOB(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((0.9238864320632038)GLOB(rt0.c1))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0)|(rt0.c1)))+(load_extension(rt0.c2, x'622b6277')))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0)|(rt0.c1)))+(load_extension(rt0.c2, x'622b6277')))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c0)|(rt0.c1)))+(load_extension(rt0.c2, x'622b6277')))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (- (COUNT(*))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((- (COUNT(*))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((- (COUNT(*)))) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (- (COUNT(*))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((- (COUNT(*))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((- (COUNT(*)))) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((0.18984256131358268) ISNULL)) NOT BETWEEN ('1663455783') AND (x''))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((0.18984256131358268) ISNULL)) NOT BETWEEN ('1663455783') AND (x''))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((0.18984256131358268) ISNULL)) NOT BETWEEN ('1663455783') AND (x''))) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((LIKELIHOOD(DISTINCT rt0.c0, 0.7427956776499685))OR(NULL)))OR((+ (rt0.c0)))))AND(CASE WHEN rt0.c2 THEN rt0.c1 END)))OR(((rt0.c1)==(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((LIKELIHOOD(DISTINCT rt0.c0, 0.7427956776499685))OR(NULL)))OR((+ (rt0.c0)))))AND(CASE WHEN rt0.c2 THEN rt0.c1 END)))OR(((rt0.c1)==(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((LIKELIHOOD(DISTINCT rt0.c0, 0.7427956776499685))OR(NULL)))OR((+ (rt0.c0)))))AND(CASE WHEN rt0.c2 THEN rt0.c1 END)))OR(((rt0.c1)==(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (x'') GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (x''))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((rt0.c1) ISNULL)) NOT NULL) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((((rt0.c1) ISNULL)) NOT NULL))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((((rt0.c1) ISNULL)) NOT NULL)) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((rt0.c1) ISNULL)) NOT NULL) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((((rt0.c1) ISNULL)) NOT NULL))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((((rt0.c1) ISNULL)) NOT NULL)) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c2 IN (rt0.c1))) NOT NULL)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c2 IN (rt0.c1))) NOT NULL)))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c1))) NOT NULL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)>=(rt0.c2))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE BINARY)>=(rt0.c2))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c2 COLLATE BINARY)>=(rt0.c2))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE COUNT(TOTAL(rt0.c1)) END) NOTNULL) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE COUNT(TOTAL(rt0.c1)) END) NOTNULL))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE COUNT(TOTAL(rt0.c1)) END) NOTNULL)) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((((rt0.c2, rt0.c2, rt0.c2))==((rt0.c0, rt0.c2, rt0.c2))))+(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((rt0.c2, rt0.c2, rt0.c2))=((rt0.c0, rt0.c2, rt0.c2))))+(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((((rt0.c2, rt0.c2, rt0.c2))=((rt0.c0, rt0.c2, rt0.c2))))+(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (json(rt0.c0)) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (json(rt0.c0)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((json(rt0.c0)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE NOCASE) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((rt0.c2 IN ()) COLLATE NOCASE))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c2 IN ()) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING CAST(CASE WHEN SUM(rt0.c1) THEN SUM(MIN(rt0.c1)) END AS INTEGER) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (CAST(CASE WHEN SUM(rt0.c1) THEN SUM(MIN(rt0.c1)) END AS INTEGER))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((CAST(CASE WHEN SUM(rt0.c1) THEN SUM(MIN(rt0.c1)) END AS INTEGER)) ISNULL);
SELECT MAX(x'') FROM rt0 ORDER BY ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))!=((+ (rt0.c2))))  NULLS FIRST;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c0)+(rt0.c0)))AND(((rt0.c2) IS TRUE)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0)+(rt0.c0)))AND(((rt0.c2) IS TRUE)))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c0)+(rt0.c0)))AND(((rt0.c2) IS TRUE)))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS INTEGER)) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST(rt0.c1 COLLATE NOCASE AS INTEGER)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(rt0.c1 COLLATE NOCASE AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c1) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c0)<>(rt0.c1))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c0)!=(rt0.c1))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c1) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c0)!=(rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING MIN(rt0.c2) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (MIN(rt0.c2))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((MIN(rt0.c2)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING MIN(rt0.c2) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (MIN(rt0.c2))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((MIN(rt0.c2)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT SUM(((rt0.c1) BETWEEN (((0.0022592340138534173)==(rt0.c2))) AND (((rt0.c2)||(rt0.c1))))) FROM rt0 ORDER BY ((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))==(((rt0.c0)-(rt0.c2)))) ASC  NULLS LAST;
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE ((+ (rt0.c0))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT ((+ (rt0.c0))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((((+ (rt0.c0))) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)%(rt0.c2 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE RTRIM)%(rt0.c2 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1 COLLATE RTRIM)%(rt0.c2 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END AS REAL)) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END AS REAL)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END AS REAL)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING MIN(TOTAL(rt0.c2)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MIN(TOTAL(rt0.c2)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MIN(TOTAL(rt0.c2))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c2) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE ((~ (CAST(rt0.c1 AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((~ (CAST(rt0.c1 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((~ (CAST(rt0.c1 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (json_array_length((((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c2))), CAST(rt0.c1 AS BLOB))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 NOT INDEXED WHERE ((NOT (json_array_length((((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c2))), CAST(rt0.c1 AS BLOB))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((json_array_length((((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c2))), CAST(rt0.c1 AS BLOB))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING '-1555853533' UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT ('-1555853533')) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (('-1555853533') ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING '-1555853533' UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT ('-1555853533')) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (('-1555853533') ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2))=((rt0.c1 COLLATE BINARY)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c2))=((rt0.c1 COLLATE BINARY)))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c2))=((rt0.c1 COLLATE BINARY)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (0xffffffffb05559e9) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (0xffffffffb05559e9))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((0xffffffffb05559e9) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (CASE (- (rt0.c1))  WHEN CAST(rt0.c0 AS INTEGER) THEN rt0.c2 COLLATE NOCASE WHEN (rt0.c0 IN ()) THEN '87534357' WHEN CAST(rt0.c1 AS REAL) THEN CAST(rt0.c2 AS NUMERIC) ELSE rt0.c2 COLLATE BINARY END) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE (- (rt0.c1))  WHEN CAST(rt0.c0 AS INTEGER) THEN rt0.c2 COLLATE NOCASE WHEN (rt0.c0 IN ()) THEN '87534357' WHEN CAST(rt0.c1 AS REAL) THEN CAST(rt0.c2 AS NUMERIC) ELSE rt0.c2 COLLATE BINARY END))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 NOT INDEXED WHERE (((CASE (- (rt0.c1))  WHEN CAST(rt0.c0 AS INTEGER) THEN rt0.c2 COLLATE NOCASE WHEN (rt0.c0 IN ()) THEN '87534357' WHEN CAST(rt0.c1 AS REAL) THEN CAST(rt0.c2 AS NUMERIC) ELSE rt0.c2 COLLATE BINARY END) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT MIN(((((((((rt0.c1)AND(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))))OR(UPPER(rt0.c0))))OR(((rt0.c1)<=(rt0.c2)))))AND(UPPER(DISTINCT rt0.c1)))) FROM rt0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((('-937425855') BETWEEN ((- (rt0.c1))) AND (((NULL) NOT NULL)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((('-937425855') BETWEEN ((- (rt0.c1))) AND (((NULL) NOT NULL)))))) UNION ALL SELECT * FROM rt0 WHERE ((((('-937425855') BETWEEN ((- (rt0.c1))) AND (((NULL) NOT NULL)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ('ya') GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ('ya'))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((('ya') ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING MAX(COUNT(MIN(rt0.c2))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (MAX(COUNT(MIN(rt0.c2))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((MAX(COUNT(MIN(rt0.c2)))) ISNULL);
SELECT rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((((rt0.c1 IN (x'')))AND(((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c1 IN (x'')))AND(((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((((((((rt0.c1 IN (x'')))AND(((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (CAST((NOT (rt0.c2)) AS BLOB)) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST((NOT (rt0.c2)) AS BLOB)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST((NOT (rt0.c2)) AS BLOB)) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING TYPEOF(((AVG(COUNT(*)))IS(rt0.c0))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (TYPEOF(((AVG(COUNT(*)))IS(rt0.c0))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((TYPEOF(((AVG(COUNT(*)))IS(rt0.c0)))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ('\n膃髱~ꆄOF)' COLLATE BINARY) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ('\n膃髱~ꆄOF)' COLLATE BINARY))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((('\n膃髱~ꆄOF)' COLLATE BINARY) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(TRIM(rt0.c2) AS INTEGER)) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE ((NOT (CAST(TRIM(rt0.c2) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(TRIM(rt0.c2) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE ((NOT ('1486288515'))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT ((NOT ('1486288515'))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((((NOT ('1486288515'))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING CASE WHEN AVG(rt0.c2) THEN MAX(rt0.c0) WHEN CAST(rt0.c1 AS REAL) THEN COUNT(rt0.c0) WHEN ((((((((COUNT(*))AND(SUM(TOTAL(SUM(COUNT(MIN(rt0.c2))))))))OR(TOTAL(rt0.c1))))AND(GROUP_CONCAT(rt0.c1))))OR(rt0.c1)) THEN ((GROUP_CONCAT(TOTAL(rt0.c2))) IS TRUE) END UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (CASE WHEN AVG(rt0.c2) THEN MAX(rt0.c0) WHEN CAST(rt0.c1 AS REAL) THEN COUNT(rt0.c0) WHEN ((((((((COUNT(*))AND(SUM(TOTAL(SUM(COUNT(MIN(rt0.c2))))))))OR(TOTAL(rt0.c1))))AND(GROUP_CONCAT(rt0.c1))))OR(rt0.c1)) THEN ((GROUP_CONCAT(TOTAL(rt0.c2))) IS TRUE) END)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((CASE WHEN AVG(rt0.c2) THEN MAX(rt0.c0) WHEN CAST(rt0.c1 AS REAL) THEN COUNT(rt0.c0) WHEN ((((((((COUNT(*))AND(SUM(TOTAL(SUM(COUNT(MIN(rt0.c2))))))))OR(TOTAL(rt0.c1))))AND(GROUP_CONCAT(rt0.c1))))OR(rt0.c1)) THEN ((GROUP_CONCAT(TOTAL(rt0.c2))) IS TRUE) END) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (((((((rt0.c1)/(rt0.c1)))OR(CASE WHEN rt0.c2 THEN rt0.c2 END)))OR(((rt0.c2)==(rt0.c1))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c1)/(rt0.c1)))OR(CASE WHEN rt0.c2 THEN rt0.c2 END)))OR(((rt0.c2)==(rt0.c1))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((((((((rt0.c1)/(rt0.c1)))OR(CASE WHEN rt0.c2 THEN rt0.c2 END)))OR(((rt0.c2)=(rt0.c1))))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1)AND(rt0.c2)))AND(NULL)) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c1)AND(rt0.c2)))AND(NULL)) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c1)AND(rt0.c2)))AND(NULL)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((((('-580133269' IN (rt0.c1)), (- (rt0.c0)), rt0.c1))<((CAST(rt0.c0 AS NUMERIC), (((rt0.c1))>=((rt0.c1))), ((rt0.c1)*(rt0.c2)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((((('-580133269' IN (rt0.c1)), (- (rt0.c0)), rt0.c1))<((CAST(rt0.c0 AS NUMERIC), (((rt0.c1))>=((rt0.c1))), ((rt0.c1)*(rt0.c2)))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((((('-580133269' IN (rt0.c1)), (- (rt0.c0)), rt0.c1))<((CAST(rt0.c0 AS NUMERIC), (((rt0.c1))>=((rt0.c1))), ((rt0.c1)*(rt0.c2)))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING COUNT(MIN(rt0.c1)) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (COUNT(MIN(rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((COUNT(MIN(rt0.c1))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c0 END COLLATE NOCASE) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c1 THEN rt0.c0 END COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END COLLATE NOCASE) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (json_array(0.10219495415496005, rt0.c1) COLLATE BINARY) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (json_array(0.10219495415496005, rt0.c1) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((json_array(0.10219495415496005, rt0.c1) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((~ (((((((((NULL)AND(NULL)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((~ (((((((((NULL)AND(NULL)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0))))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((~ (((((((((NULL)AND(NULL)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING GROUP_CONCAT(((rt0.c1) BETWEEN (AVG(rt0.c0)) AND (rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT(((rt0.c1) BETWEEN (AVG(rt0.c0)) AND (rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((GROUP_CONCAT(((rt0.c1) BETWEEN (AVG(rt0.c0)) AND (rt0.c1)))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((rt0.c0 IN ()) COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((rt0.c0 IN ()) COLLATE NOCASE))) UNION ALL SELECT * FROM rt0 WHERE ((((rt0.c0 IN ()) COLLATE NOCASE) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (CAST('800655500' AS REAL)) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST('800655500' AS REAL)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST('800655500' AS REAL)) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING GROUP_CONCAT(AVG(rt0.c0)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT(AVG(rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((GROUP_CONCAT(AVG(rt0.c0))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c1)IS(((0.14618553729628647) BETWEEN (rt0.c1) AND (rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c1)IS(((0.14618553729628647) BETWEEN (rt0.c1) AND (rt0.c0))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c1)IS(((0.14618553729628647) BETWEEN (rt0.c1) AND (rt0.c0))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))OR((- (rt0.c0)))))OR(((rt0.c2)IS(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))OR((- (rt0.c0)))))OR(((rt0.c2)IS(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))OR((- (rt0.c0)))))OR(((rt0.c2)IS(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ((- (rt0.c2))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((- (rt0.c2))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((- (rt0.c2))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((CAST(rt0.c2 AS BLOB))%(rt0.c2)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((CAST(rt0.c2 AS BLOB))%(rt0.c2)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((CAST(rt0.c2 AS BLOB))%(rt0.c2))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((CAST(rt0.c2 AS BLOB))%(rt0.c2)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((CAST(rt0.c2 AS BLOB))%(rt0.c2)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((CAST(rt0.c2 AS BLOB))%(rt0.c2))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ('-463185526') UNION ALL SELECT * FROM rt0 WHERE ((NOT ('-463185526'))) UNION ALL SELECT ALL * FROM rt0 WHERE ((('-463185526') ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (ABS('>znL')) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (ABS('>znL')))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((ABS('>znL')) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0)GLOB(rt0.c0))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((NOT (((rt0.c0)GLOB(rt0.c0))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((NOT (((rt0.c0)GLOB(rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING x'56c3' UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (x'56c3')) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((x'56c3') ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING x'56c3' UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (x'56c3')) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((x'56c3') ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((~ (0.29895808451792716))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((~ (0.29895808451792716))))) UNION ALL SELECT * FROM rt0 WHERE ((((~ (0.29895808451792716))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (QUOTE(((rt0.c1)>>(rt0.c0)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (QUOTE(((rt0.c1)>>(rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((QUOTE(((rt0.c1)>>(rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((CHAR(rt0.c0, rt0.c0, '-1320676348'))AND(IFNULL(rt0.c1, rt0.c2))))OR(((rt0.c0)<<(8.006555E8))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((CHAR(rt0.c0, rt0.c0, '-1320676348'))AND(IFNULL(rt0.c1, rt0.c2))))OR(((rt0.c0)<<(8.006555E8))))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((((CHAR(rt0.c0, rt0.c0, '-1320676348'))AND(IFNULL(rt0.c1, rt0.c2))))OR(((rt0.c0)<<(8.006555E8))))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (AVG(rt0.c1) IN (((rt0.c0)<<(rt0.c2)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((AVG(rt0.c1) IN (((rt0.c0)<<(rt0.c2)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((AVG(rt0.c1) IN (((rt0.c0)<<(rt0.c2))))) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (AVG(rt0.c1) IN (((rt0.c0)<<(rt0.c2)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((AVG(rt0.c1) IN (((rt0.c0)<<(rt0.c2)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((AVG(rt0.c1) IN (((rt0.c0)<<(rt0.c2))))) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1))>((rt0.c2)))) ISNULL)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((rt0.c1))>((rt0.c2)))) ISNULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((((rt0.c1))>((rt0.c2)))) ISNULL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (NULL) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((UNLIKELY(rt0.c1)))<>((TOTAL(rt0.c2)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((((UNLIKELY(rt0.c1)))!=((TOTAL(rt0.c2)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((((UNLIKELY(rt0.c1)))<>((TOTAL(rt0.c2))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((UNLIKELY(rt0.c1)))<>((TOTAL(rt0.c2)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((((UNLIKELY(rt0.c1)))!=((TOTAL(rt0.c2)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((((UNLIKELY(rt0.c1)))<>((TOTAL(rt0.c2))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (CAST(((rt0.c1)<(rt0.c2)) AS NUMERIC)) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (CAST(((rt0.c1)<(rt0.c2)) AS NUMERIC)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((CAST(((rt0.c1)<(rt0.c2)) AS NUMERIC)) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (CASE ((NULL)-(rt0.c2))  WHEN ((rt0.c2) ISNULL) THEN ((rt0.c0) IS FALSE) WHEN (rt0.c0 IN ()) THEN CASE WHEN rt0.c2 THEN 0.8428551556959105 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN 0X135ee383 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN CAST(rt0.c2 AS TEXT) END) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE ((NULL)-(rt0.c2))  WHEN ((rt0.c2) ISNULL) THEN ((rt0.c0) IS FALSE) WHEN (rt0.c0 IN ()) THEN CASE WHEN rt0.c2 THEN 0.8428551556959105 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN 0x135ee383 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN CAST(rt0.c2 AS TEXT) END))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE ((NULL)-(rt0.c2))  WHEN ((rt0.c2) ISNULL) THEN ((rt0.c0) IS FALSE) WHEN (rt0.c0 IN ()) THEN CASE WHEN rt0.c2 THEN 0.8428551556959105 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN 0x135ee383 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN CAST(rt0.c2 AS TEXT) END) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((x''))) IN (rt0.c1))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((x''))) IN (rt0.c1))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((x''))) IN (rt0.c1))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(RTRIM(rt0.c2)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(RTRIM(rt0.c2)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(RTRIM(rt0.c2))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(RTRIM(rt0.c2)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(RTRIM(rt0.c2)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(RTRIM(rt0.c2))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT * FROM rt0 NOT INDEXED;
SELECT ALL * FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)OR(((rt0.c0)-(rt0.c1)))))OR(ABS(DISTINCT rt0.c1)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)OR(((rt0.c0)-(rt0.c1)))))OR(ABS(DISTINCT rt0.c1)))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)OR(((rt0.c0)-(rt0.c1)))))OR(ABS(DISTINCT rt0.c1)))) ISNULL));
SELECT * FROM rt0 NOT INDEXED;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN NULL ELSE rt0.c1 END) BETWEEN (rt0.c1) AND (CASE rt0.c0  WHEN rt0.c2 THEN '쾉輣FcCV' ELSE rt0.c1 END))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c1 THEN NULL ELSE rt0.c1 END) BETWEEN (rt0.c1) AND (CASE rt0.c0  WHEN rt0.c2 THEN '쾉輣FcCV' ELSE rt0.c1 END))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c1 THEN NULL ELSE rt0.c1 END) BETWEEN (rt0.c1) AND (CASE rt0.c0  WHEN rt0.c2 THEN '쾉輣FcCV' ELSE rt0.c1 END))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(rt0.c2 COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(rt0.c2 COLLATE RTRIM))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(rt0.c2 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING '^/FJT<E' UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ('^/FJT<E')) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (('^/FJT<E') ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING '^/FJT<E' UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ('^/FJT<E')) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (('^/FJT<E') ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((((((((+ (rt0.c2)))AND((rt0.c0 IN (rt0.c2)))))OR(CAST(rt0.c0 AS REAL))))OR(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))))AND(ABS(0.8571797913287448)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((((((+ (rt0.c2)))AND((rt0.c0 IN (rt0.c2)))))OR(CAST(rt0.c0 AS REAL))))OR(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))))AND(ABS(0.8571797913287448)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((((((((+ (rt0.c2)))AND((rt0.c0 IN (rt0.c2)))))OR(CAST(rt0.c0 AS REAL))))OR(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))))AND(ABS(0.8571797913287448)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c1)IS(rt0.c2))) BETWEEN (rt0.c1) AND ((- (rt0.c2))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1)IS(rt0.c2))) BETWEEN (rt0.c1) AND ((- (rt0.c2))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c1)IS(rt0.c2))) BETWEEN (rt0.c1) AND ((- (rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING CAST(TOTAL(rt0.c2) AS INTEGER) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (CAST(TOTAL(rt0.c2) AS INTEGER))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((CAST(TOTAL(rt0.c2) AS INTEGER)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING CAST(TOTAL(rt0.c2) AS INTEGER) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (CAST(TOTAL(rt0.c2) AS INTEGER))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((CAST(TOTAL(rt0.c2) AS INTEGER)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c1) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE)+(((rt0.c2)&(rt0.c1))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE NOCASE)+(((rt0.c2)&(rt0.c1))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((((rt0.c0 COLLATE NOCASE)+(((rt0.c2)&(rt0.c1))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING NULLIF(((rt0.c2)<<(x'')), CASE WHEN COUNT(*) THEN MIN(rt0.c1) END) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (NULLIF(((rt0.c2)<<(x'')), CASE WHEN COUNT(*) THEN MIN(rt0.c1) END))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((NULLIF(((rt0.c2)<<(x'')), CASE WHEN COUNT(*) THEN MIN(rt0.c1) END)) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING NULLIF(((rt0.c2)<<(x'')), CASE WHEN COUNT(*) THEN MIN(rt0.c1) END) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (NULLIF(((rt0.c2)<<(x'')), CASE WHEN COUNT(*) THEN MIN(rt0.c1) END))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((NULLIF(((rt0.c2)<<(x'')), CASE WHEN COUNT(*) THEN MIN(rt0.c1) END)) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((+ (rt0.c2))))<=((0.8755592601000547)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((+ (rt0.c2))))<=((0.8755592601000547)))))) UNION ALL SELECT * FROM rt0 WHERE (((((((+ (rt0.c2))))<=((0.8755592601000547)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT)) IS TRUE)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS TEXT)) IS TRUE)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((((CAST(rt0.c1 AS TEXT)) IS TRUE)) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING COUNT(((((rt0.c1)OR(rt0.c2)))OR(COUNT(rt0.c2)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (COUNT(((((rt0.c1)OR(rt0.c2)))OR(COUNT(rt0.c2)))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((COUNT(((((rt0.c1)OR(rt0.c2)))OR(COUNT(rt0.c2))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((~ (rt0.c2 COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((~ (rt0.c2 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c2 COLLATE BINARY))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c0))==((rt0.c1))) COLLATE BINARY) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0))=((rt0.c1))) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c0))==((rt0.c1))) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((rt0.c0)==(((rt0.c0)=(rt0.c2))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c0)==(((rt0.c0)=(rt0.c2))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((rt0.c0)=(((rt0.c0)==(rt0.c2))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING AVG('118079722') UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (AVG('118079722'))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((AVG('118079722')) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING AVG('118079722') UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (AVG('118079722'))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((AVG('118079722')) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c0)))%(((rt0.c1)|(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((~ (rt0.c0)))%(((rt0.c1)|(rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((~ (rt0.c0)))%(((rt0.c1)|(rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((json_object('1139892200', rt0.c0))-(CAST('1949919765' AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((json_object('1139892200', rt0.c0))-(CAST('1949919765' AS NUMERIC)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((json_object('1139892200', rt0.c0))-(CAST('1949919765' AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ('R ') GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ('R '))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((('R ') ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING AVG(TOTAL(rt0.c1)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (AVG(TOTAL(rt0.c1)))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((AVG(TOTAL(rt0.c1))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (rt0.c1) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 NOT INDEXED WHERE (((rt0.c0) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (((rt0.c0)>>(rt0.c0))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c0) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (((rt0.c0)>>(rt0.c0))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((rt0.c0) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (((rt0.c0)>>(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c2)>=((~ (rt0.c2))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2)>=((~ (rt0.c2))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c2)>=((~ (rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MAX(((rt0.c0)&(GROUP_CONCAT(AVG(rt0.c2))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MAX(((rt0.c0)&(GROUP_CONCAT(AVG(rt0.c2))))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MAX(((rt0.c0)&(GROUP_CONCAT(AVG(rt0.c2)))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((- (NULLIF(DISTINCT rt0.c0, rt0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((- (NULLIF(DISTINCT rt0.c0, rt0.c0)))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((((- (NULLIF(DISTINCT rt0.c0, rt0.c0)))) ISNULL));
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((- (rt0.c2))) NOT NULL)) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT ((((- (rt0.c2))) NOT NULL)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((((- (rt0.c2))) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c2))>=((rt0.c1))) COLLATE NOCASE) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2))>=((rt0.c1))) COLLATE NOCASE))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c2))>=((rt0.c1))) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((((TRIM(DISTINCT MAX(MIN(rt0.c0))))AND(COUNT(rt0.c2))))AND(GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (((((TRIM(DISTINCT MAX(MIN(rt0.c0))))AND(COUNT(rt0.c2))))AND(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((((((TRIM(DISTINCT MAX(MIN(rt0.c0))))AND(COUNT(rt0.c2))))AND(GROUP_CONCAT(COUNT(*))))) ISNULL);
SELECT ALL MAX((rt0.c1 COLLATE RTRIM IN ())) FROM rt0 ORDER BY UNLIKELY((+ (rt0.c2))) ASC, ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END) AND ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) ASC  NULLS LAST;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) IS TRUE) IN ())) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c1) IS TRUE) IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c1) IS TRUE) IN ())) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((((rt0.c2)GLOB(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c0)OR(rt0.c2)))) AND ((NULL, (rt0.c2 IN ()), ((rt0.c0) NOT BETWEEN (rt0.c2) AND ('')))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((((rt0.c2)GLOB(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c0)OR(rt0.c2)))) AND ((NULL, (rt0.c2 IN ()), ((rt0.c0) NOT BETWEEN (rt0.c2) AND ('')))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((((rt0.c2)GLOB(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c0)OR(rt0.c2)))) AND ((NULL, (rt0.c2 IN ()), ((rt0.c0) NOT BETWEEN (rt0.c2) AND ('')))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC)) BETWEEN (((rt0.c1)IS(rt0.c2))) AND (0.677956507808416))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS NUMERIC)) BETWEEN (((rt0.c1)IS(rt0.c2))) AND (0.677956507808416))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((CAST(rt0.c0 AS NUMERIC)) BETWEEN (((rt0.c1)IS(rt0.c2))) AND (0.677956507808416))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MAX(NULL) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MAX(NULL))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MAX(NULL)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MAX(NULL) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MAX(NULL))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MAX(NULL)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL MAX(x'c18d') FROM rt0 ORDER BY CAST(((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)) AS INTEGER) DESC;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((+ (x''))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((+ (x''))))) UNION ALL SELECT * FROM rt0 WHERE ((((+ (x''))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c2) ISNULL)) NOTNULL)) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2) ISNULL)) NOTNULL)))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c2) ISNULL)) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c0)LIKE(rt0.c0)) COLLATE BINARY) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0)LIKE(rt0.c0)) COLLATE BINARY))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0)LIKE(rt0.c0)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING TOTAL(rt0.c1) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (TOTAL(rt0.c1))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((TOTAL(rt0.c1)) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING TOTAL(rt0.c1) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (TOTAL(rt0.c1))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((TOTAL(rt0.c1)) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (MIN(rt0.c0, rt0.c2) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (MIN(rt0.c0, rt0.c2) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((MIN(rt0.c0, rt0.c2) COLLATE RTRIM) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (CASE WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) ELSE ((rt0.c0)%(rt0.c2)) END) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) ELSE ((rt0.c0)%(rt0.c2)) END))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) ELSE ((rt0.c0)%(rt0.c2)) END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((NULL) NOT NULL)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (((NULL) NOT NULL)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((NULL) NOT NULL)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((UNLIKELY(DISTINCT rt0.c1))<<(GROUP_CONCAT(TOTAL(MAX(TOTAL(GROUP_CONCAT(TOTAL(rt0.c1)))))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((UNLIKELY(DISTINCT rt0.c1))<<(GROUP_CONCAT(TOTAL(MAX(TOTAL(GROUP_CONCAT(TOTAL(rt0.c1)))))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((UNLIKELY(DISTINCT rt0.c1))<<(GROUP_CONCAT(TOTAL(MAX(TOTAL(GROUP_CONCAT(TOTAL(rt0.c1))))))))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (CAST((rt0.c1 IN (rt0.c2)) AS REAL)) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (CAST((rt0.c1 IN (rt0.c2)) AS REAL)))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((CAST((rt0.c1 IN (rt0.c2)) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) NOT NULL)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE RTRIM) NOT NULL)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((rt0.c1 COLLATE RTRIM) NOT NULL)) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING CASE WHEN ((MAX(rt0.c2))IS NOT(rt0.c0)) THEN CASE WHEN MIN(AVG(rt0.c1)) THEN rt0.c2 END END UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (CASE WHEN ((MAX(rt0.c2))IS NOT(rt0.c0)) THEN CASE WHEN MIN(AVG(rt0.c1)) THEN rt0.c2 END END)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((CASE WHEN ((MAX(rt0.c2))IS NOT(rt0.c0)) THEN CASE WHEN MIN(AVG(rt0.c1)) THEN rt0.c2 END END) ISNULL);
SELECT TOTAL(rt0.c2) FROM rt0 ORDER BY ((rt0.c0)AND(rt0.c1)) COLLATE BINARY ASC  NULLS LAST, rt0.c2 ASC, ((CAST(rt0.c0 AS NUMERIC))=(((rt0.c0) ISNULL)))  NULLS LAST;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1)IS NOT(rt0.c2)) AS BLOB)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST(((rt0.c1)IS NOT(rt0.c2)) AS BLOB)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST(((rt0.c1)IS NOT(rt0.c2)) AS BLOB)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((rt0.c1 IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((rt0.c1 IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1 IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (CASE ((((rt0.c1)AND(rt0.c1)))OR(rt0.c1))  WHEN (- (rt0.c2)) THEN rt0.c0 ELSE ((rt0.c0) IS TRUE) END) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE ((((rt0.c1)AND(rt0.c1)))OR(rt0.c1))  WHEN (- (rt0.c2)) THEN rt0.c0 ELSE ((rt0.c0) IS TRUE) END))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE ((((rt0.c1)AND(rt0.c1)))OR(rt0.c1))  WHEN (- (rt0.c2)) THEN rt0.c0 ELSE ((rt0.c0) IS TRUE) END) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (LAST_INSERT_ROWID() IN ()) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT ((LAST_INSERT_ROWID() IN ()))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (((LAST_INSERT_ROWID() IN ())) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (LAST_INSERT_ROWID() IN ()) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT ((LAST_INSERT_ROWID() IN ()))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (((LAST_INSERT_ROWID() IN ())) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((rt0.c0)%(x'')) COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c0)%(x'')) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rt0.c0)%(x'')) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))-(((rt0.c0)&(rt0.c0))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))-(((rt0.c0)&(rt0.c0))))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))-(((rt0.c0)&(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c2 END IN ())) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((CASE WHEN rt0.c2 THEN rt0.c2 END IN ())))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c2 END IN ())) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((AVG(rt0.c1)) ISNULL) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((AVG(rt0.c1)) ISNULL))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((AVG(rt0.c1)) ISNULL)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((AVG(rt0.c1)) ISNULL) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((AVG(rt0.c1)) ISNULL))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((AVG(rt0.c1)) ISNULL)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((x'' COLLATE NOCASE)<=((rt0.c1 IN (rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((x'' COLLATE NOCASE)<=((rt0.c1 IN (rt0.c2))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((x'' COLLATE NOCASE)<=((rt0.c1 IN (rt0.c2))))) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0)<<(0.5788841764000375))) ISNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0)<<(0.5788841764000375))) ISNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0)<<(0.5788841764000375))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (CASE WHEN rt0.c2 COLLATE RTRIM THEN (- (rt0.c0)) END) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c2 COLLATE RTRIM THEN (- (rt0.c0)) END))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE WHEN rt0.c2 COLLATE RTRIM THEN (- (rt0.c0)) END) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING COUNT(SUM(rt0.c2)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (COUNT(SUM(rt0.c2)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(SUM(rt0.c2))) ISNULL);
SELECT ALL rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1)IS NOT(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1)IS NOT(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1)IS NOT(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((+ (rt0.c2)) IN (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN NULL WHEN 0xffffffffcc7268f5 THEN NULL ELSE rt0.c2 END, rt0.c1))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((+ (rt0.c2)) IN (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN NULL WHEN 0xffffffffcc7268f5 THEN NULL ELSE rt0.c2 END, rt0.c1))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((+ (rt0.c2)) IN (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN NULL WHEN 0Xffffffffcc7268f5 THEN NULL ELSE rt0.c2 END, rt0.c1))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING CASE ((rt0.c1)>=(AVG(rt0.c2)))  WHEN CAST(rt0.c1 AS TEXT) THEN MIN(MAX(x'')) END UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (CASE ((rt0.c1)>=(AVG(rt0.c2)))  WHEN CAST(rt0.c1 AS TEXT) THEN MIN(MAX(x'')) END)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((CASE ((rt0.c1)>=(AVG(rt0.c2)))  WHEN CAST(rt0.c1 AS TEXT) THEN MIN(MAX(x'')) END) ISNULL);
SELECT ALL rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (622905781) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (622905781))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((622905781) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (NULL) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (json_extract(CAST(x'' AS BLOB), (~ (rt0.c2)), 0.1735245911105051, rt0.c1 COLLATE RTRIM)) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (json_extract(CAST(x'' AS BLOB), (~ (rt0.c2)), 0.1735245911105051, rt0.c1 COLLATE RTRIM)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((json_extract(CAST(x'' AS BLOB), (~ (rt0.c2)), 0.1735245911105051, rt0.c1 COLLATE RTRIM)) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(TOTAL(COUNT(*))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(TOTAL(COUNT(*))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(TOTAL(COUNT(*)))) ISNULL);
SELECT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (NULL) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((NULL) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((- ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((0.31569346618513794)))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((- ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((0.31569346618513794)))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((- ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((0.31569346618513794)))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((NOT (0.3375929274461169)))%(((rt0.c1)+(rt0.c0))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((NOT (0.3375929274461169)))%(((rt0.c1)+(rt0.c0))))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((((NOT (0.3375929274461169)))%(((rt0.c1)+(rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING AVG(((MAX(rt0.c2))||(rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (AVG(((MAX(rt0.c2))||(rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((AVG(((MAX(rt0.c2))||(rt0.c2)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c2) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (CASE ((0X73fa57c4) ISNULL)  WHEN ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)) THEN rt0.c1 WHEN ((rt0.c1)IS(rt0.c1)) THEN x'0434' WHEN (rt0.c2 IN (rt0.c1)) THEN (rt0.c0 IN (rt0.c0)) END) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CASE ((0x73fa57c4) ISNULL)  WHEN ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)) THEN rt0.c1 WHEN ((rt0.c1)IS(rt0.c1)) THEN x'0434' WHEN (rt0.c2 IN (rt0.c1)) THEN (rt0.c0 IN (rt0.c0)) END))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE ((0x73fa57c4) ISNULL)  WHEN ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)) THEN rt0.c1 WHEN ((rt0.c1)IS(rt0.c1)) THEN x'0434' WHEN (rt0.c2 IN (rt0.c1)) THEN (rt0.c0 IN (rt0.c0)) END) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((-1955830793)IS NOT(NULL))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((-1955830793)IS NOT(NULL))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((-1955830793)IS NOT(NULL))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING MIN((((GROUP_CONCAT(AVG(rt0.c0))))>((rt0.c2)))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (MIN((((GROUP_CONCAT(AVG(rt0.c0))))>((rt0.c2)))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((MIN((((GROUP_CONCAT(AVG(rt0.c0))))>((rt0.c2))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (TYPEOF(DISTINCT (rt0.c0 IN ()))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (TYPEOF(DISTINCT (rt0.c0 IN ()))))) UNION ALL SELECT * FROM rt0 WHERE (((TYPEOF(DISTINCT (rt0.c0 IN ()))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0)OR(rt0.c0))) BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0)OR(rt0.c0))) BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c0))) BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((RTRIM(rt0.c0))<=(NULL))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (((RTRIM(rt0.c0))<=(NULL))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((RTRIM(rt0.c0))<=(NULL))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING SUM(GROUP_CONCAT(COUNT(AVG(rt0.c2)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (SUM(GROUP_CONCAT(COUNT(AVG(rt0.c2)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((SUM(GROUP_CONCAT(COUNT(AVG(rt0.c2))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1))<((NULL))) COLLATE RTRIM) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c1))<((NULL))) COLLATE RTRIM))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c1))<((NULL))) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (NULL) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c2 COLLATE RTRIM) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2 COLLATE RTRIM))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((- (rt0.c1)) COLLATE BINARY) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((- (rt0.c1)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((- (rt0.c1)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED WHERE (json_extract(CAST(rt0.c2 AS REAL), rt0.c2)) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (json_extract(CAST(rt0.c2 AS REAL), rt0.c2)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((json_extract(CAST(rt0.c2 AS REAL), rt0.c2)) ISNULL));
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c2 IN ())) NOT NULL)) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2 IN ())) NOT NULL)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c2 IN ())) NOT NULL)) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((MIN(GROUP_CONCAT(TOTAL(COUNT(*)))), MIN(SUM(rt0.c1)), '_')) BETWEEN ((((rt0.c2)!=(COUNT(COUNT(*)))), LIKELY(DISTINCT x'e8d0'), TOTAL(rt0.c2))) AND ((COUNT(*), TOTAL(rt0.c2), ((rt0.c1) NOTNULL)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((((MIN(GROUP_CONCAT(TOTAL(COUNT(*)))), MIN(SUM(rt0.c1)), '_')) BETWEEN ((((rt0.c2)<>(COUNT(COUNT(*)))), LIKELY(DISTINCT x'e8d0'), TOTAL(rt0.c2))) AND ((COUNT(*), TOTAL(rt0.c2), ((rt0.c1) NOTNULL)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((((MIN(GROUP_CONCAT(TOTAL(COUNT(*)))), MIN(SUM(rt0.c1)), '_')) BETWEEN ((((rt0.c2)!=(COUNT(COUNT(*)))), LIKELY(DISTINCT x'e8d0'), TOTAL(rt0.c2))) AND ((COUNT(*), TOTAL(rt0.c2), ((rt0.c1) NOTNULL))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)) AS INTEGER)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST(((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)) AS INTEGER)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST(((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)) AS INTEGER)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((CAST(rt0.c1 AS INTEGER) IN ())) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((CAST(rt0.c1 AS INTEGER) IN ())))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((CAST(rt0.c1 AS INTEGER) IN ())) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING SUM(rt0.c1) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (SUM(rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((SUM(rt0.c1)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING SUM(rt0.c1) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (SUM(rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((SUM(rt0.c1)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND (((+ (rt0.c0)))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND (((+ (rt0.c0)))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND (((+ (rt0.c0)))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((LOWER(rt0.c2)) IS FALSE)) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((LOWER(rt0.c2)) IS FALSE)))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((LOWER(rt0.c2)) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (LIKELIHOOD(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END, 0.3186977240447312)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (LIKELIHOOD(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END, 0.3186977240447312)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((LIKELIHOOD(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END, 0.3186977240447312)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((MIN(MIN(MAX(rt0.c1)))) BETWEEN (((((((((AVG(COUNT(rt0.c2)))AND(MAX(MIN(MIN(COUNT(rt0.c2)))))))OR(SUM(COUNT(*)))))OR(TOTAL(COUNT(rt0.c1)))))AND(MAX(COUNT('1924041777'))))) AND (0.779889636766091)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((MIN(MIN(MAX(rt0.c1)))) BETWEEN (((((((((AVG(COUNT(rt0.c2)))AND(MAX(MIN(MIN(COUNT(rt0.c2)))))))OR(SUM(COUNT(*)))))OR(TOTAL(COUNT(rt0.c1)))))AND(MAX(COUNT('1924041777'))))) AND (0.779889636766091)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((MIN(MIN(MAX(rt0.c1)))) BETWEEN (((((((((AVG(COUNT(rt0.c2)))AND(MAX(MIN(MIN(COUNT(rt0.c2)))))))OR(SUM(COUNT(*)))))OR(TOTAL(COUNT(rt0.c1)))))AND(MAX(COUNT('1924041777'))))) AND (0.779889636766091))) ISNULL);
SELECT ALL rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) NOT BETWEEN ((+ (rt0.c2))) AND ('718943361'))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE BINARY) NOT BETWEEN ((+ (rt0.c2))) AND ('718943361'))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY) NOT BETWEEN ((+ (rt0.c2))) AND ('718943361'))) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((('1893452860')<(((rt0.c2)/(rt0.c0))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((('1893452860')<(((rt0.c2)/(rt0.c0))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((((('1893452860')<(((rt0.c2)/(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((x'0163')OR(((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))))OR(CAST(rt0.c1 AS TEXT))))AND((rt0.c1 IN ()))))AND(x'' COLLATE BINARY))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((((((x'0163')OR(((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))))OR(CAST(rt0.c1 AS TEXT))))AND((rt0.c1 IN ()))))AND(x'' COLLATE BINARY))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((((x'0163')OR(((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))))OR(CAST(rt0.c1 AS TEXT))))AND((rt0.c1 IN ()))))AND(x'' COLLATE BINARY))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((SUM(1.149569967E9)) NOT BETWEEN (((rt0.c0)<<(rt0.c2))) AND ((~ (rt0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((SUM(1.149569967E9)) NOT BETWEEN (((rt0.c0)<<(rt0.c2))) AND ((~ (rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((SUM(1.149569967E9)) NOT BETWEEN (((rt0.c0)<<(rt0.c2))) AND ((~ (rt0.c0))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((SUM(1.149569967E9)) NOT BETWEEN (((rt0.c0)<<(rt0.c2))) AND ((~ (rt0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((SUM(1.149569967E9)) NOT BETWEEN (((rt0.c0)<<(rt0.c2))) AND ((~ (rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((SUM(1.149569967E9)) NOT BETWEEN (((rt0.c0)<<(rt0.c2))) AND ((~ (rt0.c0))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((NULL)<(NULL)))*(rt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((NULL)<(NULL)))*(rt0.c0 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((NULL)<(NULL)))*(rt0.c0 COLLATE BINARY))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((((((((rt0.c1)AND(rt0.c2)))OR(((rt0.c2) ISNULL))))OR((~ (rt0.c1)))))AND(((rt0.c1) BETWEEN ('') AND (rt0.c0)))))OR(((rt0.c1) IS TRUE)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (((((((((((rt0.c1)AND(rt0.c2)))OR(((rt0.c2) ISNULL))))OR((~ (rt0.c1)))))AND(((rt0.c1) BETWEEN ('') AND (rt0.c0)))))OR(((rt0.c1) IS TRUE)))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((((((((((rt0.c1)AND(rt0.c2)))OR(((rt0.c2) ISNULL))))OR((~ (rt0.c1)))))AND(((rt0.c1) BETWEEN ('') AND (rt0.c0)))))OR(((rt0.c1) IS TRUE)))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (-6.1916434E8) AND (''))) NOTNULL)) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (-6.1916434E8) AND (''))) NOTNULL)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (-6.1916434E8) AND (''))) NOTNULL)) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING AVG(CAST(SUM(COUNT(*)) AS BLOB)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (AVG(CAST(SUM(COUNT(*)) AS BLOB)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((AVG(CAST(SUM(COUNT(*)) AS BLOB))) ISNULL);
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))>((((rt0.c1) IS FALSE))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))>((((rt0.c1) IS FALSE))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))>((((rt0.c1) IS FALSE))))) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (x'ff70') UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (x'ff70'))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((x'ff70') ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1 COLLATE NOCASE, GROUP_CONCAT(TOTAL(SUM(rt0.c2))), AVG(x''))) AND ((MAX(GROUP_CONCAT(rt0.c0)), MIN(rt0.c1), MAX(rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT ((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1 COLLATE NOCASE, GROUP_CONCAT(TOTAL(SUM(rt0.c2))), AVG(x''))) AND ((MAX(GROUP_CONCAT(rt0.c0)), MIN(rt0.c1), MAX(rt0.c1)))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1 COLLATE NOCASE, GROUP_CONCAT(TOTAL(SUM(rt0.c2))), AVG(x''))) AND ((MAX(GROUP_CONCAT(rt0.c0)), MIN(rt0.c1), MAX(rt0.c1))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((('1663455783')>((NOT (rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((('1663455783')>((NOT (rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE ((((('1663455783')>((NOT (rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((+ (rt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT ((+ (rt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((+ (rt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (CASE WHEN ((rt0.c2)<>(rt0.c1)) THEN json_extract(rt0.c0, rt0.c1, rt0.c2, rt0.c2) ELSE ((rt0.c2) ISNULL) END) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c2)<>(rt0.c1)) THEN json_extract(rt0.c0, rt0.c1, rt0.c2, rt0.c2) ELSE ((rt0.c2) ISNULL) END))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((CASE WHEN ((rt0.c2)<>(rt0.c1)) THEN json_extract(rt0.c0, rt0.c1, rt0.c2, rt0.c2) ELSE ((rt0.c2) ISNULL) END) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING LIKE(rt0.c0, (('0.2086679653099377') ISNULL), '-') UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (LIKE(rt0.c0, (('0.2086679653099377') ISNULL), '-'))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((LIKE(rt0.c0, (('0.2086679653099377') ISNULL), '-')) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING LIKE(rt0.c0, (('0.2086679653099377') ISNULL), '-') UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (LIKE(rt0.c0, (('0.2086679653099377') ISNULL), '-'))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((LIKE(rt0.c0, (('0.2086679653099377') ISNULL), '-')) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) NOTNULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE BINARY) NOTNULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rt0.c0 COLLATE BINARY) NOTNULL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((((rt0.c0)OR(rt0.c2)))OR(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((((rt0.c0)OR(rt0.c2)))OR(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((((rt0.c0)OR(rt0.c2)))OR(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((x'79c5')GLOB(CAST(NULL AS INTEGER)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((x'79c5')GLOB(CAST(NULL AS INTEGER)))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((((x'79c5')GLOB(CAST(NULL AS INTEGER)))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING CASE WHEN COUNT(*) THEN COUNT(*) ELSE 0Xffffffffa31df048 END UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (CASE WHEN COUNT(*) THEN COUNT(*) ELSE 0Xffffffffa31df048 END)) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((CASE WHEN COUNT(*) THEN COUNT(*) ELSE 0Xffffffffa31df048 END) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING CASE WHEN COUNT(*) THEN COUNT(*) ELSE 0Xffffffffa31df048 END UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (CASE WHEN COUNT(*) THEN COUNT(*) ELSE 0Xffffffffa31df048 END)) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((CASE WHEN COUNT(*) THEN COUNT(*) ELSE 0Xffffffffa31df048 END) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN ((rt0.c2 IN (rt0.c1))) AND (CAST(rt0.c1 AS TEXT)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN ((rt0.c2 IN (rt0.c1))) AND (CAST(rt0.c1 AS TEXT)))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN ((rt0.c2 IN (rt0.c1))) AND (CAST(rt0.c1 AS TEXT)))) ISNULL));
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((((rt0.c2)*(rt0.c0)))AND(TRIM(0x7341be08))))AND(((NULL) BETWEEN (rt0.c2) AND (rt0.c2))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c2)*(rt0.c0)))AND(TRIM(0x7341be08))))AND(((NULL) BETWEEN (rt0.c2) AND (rt0.c2))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((((((rt0.c2)*(rt0.c0)))AND(TRIM(0x7341be08))))AND(((NULL) BETWEEN (rt0.c2) AND (rt0.c2))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MAX(MIN(AVG(SUM(rt0.c0)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MAX(MIN(AVG(SUM(rt0.c0)))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MAX(MIN(AVG(SUM(rt0.c0))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)AND(rt0.c2)) IN ())) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c0)AND(rt0.c2)) IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c0)AND(rt0.c2)) IN ())) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2)IS NOT(rt0.c2)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c2)IS NOT(rt0.c2)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)IS NOT(rt0.c2)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) THEN (NOT (rt0.c0)) END) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) THEN (NOT (rt0.c0)) END))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) THEN (NOT (rt0.c0)) END) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING '-P' UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ('-P')) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (('-P') ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING '-P' UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ('-P')) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (('-P') ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c1) NOT NULL)) ORDER BY rt0.c0 DESC  NULLS FIRST;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c1) NOT NULL)))) ORDER BY rt0.c0 DESC  NULLS FIRST;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c1) NOT NULL)) ISNULL)) ORDER BY rt0.c0 DESC  NULLS FIRST;
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (x'') UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING MIN(MAX(SUM(rt0.c0))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (MIN(MAX(SUM(rt0.c0))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((MIN(MAX(SUM(rt0.c0)))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ('-1859083900') UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ('-1859083900'))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((('-1859083900') ISNULL));
SELECT rt0.c2, rt0.c1 FROM rt0;
