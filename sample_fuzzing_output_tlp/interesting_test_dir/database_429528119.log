-- Time: 2024/06/11 15:10:05
-- Database: database19
-- Database version: 3.40.0
-- seed value: 429528119
PRAGMA cache_size = 50000; -- 4ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INTEGER , c1 REAL NOT NULL UNIQUE ON CONFLICT REPLACE , c2 REAL ); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('1791375552', 'y]', x'df1b9f7920b2'), ('', 'cWE/Y4Y|[', x'2fef'), (0.5517359201765953, 1791375552, 0x4146c5a); -- 1ms;
PRAGMA temp.automatic_index = true; -- 0ms;
UPDATE OR ROLLBACK t0 SET c2=0.7321011532371812; -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES ('68447322'), ('68447322'), (x''); -- 0ms;
INSERT OR IGNORE INTO t0(c1, c2, c0) VALUES (NULL, 0.7321011532371812, x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('jk') WHERE (((((x'2789')) BETWEEN ((t0.c2)) AND ((t0.c2)))) NOT BETWEEN (((t0.c2) IS TRUE)) AND (((t0.c1) BETWEEN (t0.c1) AND (t0.c2)))); -- 0ms;
PRAGMA wal_autocheckpoint; -- 0ms;
INSERT OR ROLLBACK INTO t0(c2, c0, c1) VALUES ('cWE/Y4Y|[', 6.8447322E7, '1791375552'); -- 0ms;
INSERT OR IGNORE INTO t0(c1, c2) VALUES (x'b034', x''); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'', c2=0.7321011532371812, c2=x'' WHERE (((1940683395)) BETWEEN ((CAST(t0.c0 AS INTEGER))) AND ((CAST(0.8411567213159639 AS BLOB)))); -- 0ms;
UPDATE OR REPLACE t0 SET c1=x'', c1=x'' WHERE t0.c0; -- 0ms;
END; -- 0ms;
INSERT OR REPLACE INTO t0(c0, c1) VALUES (NULL, NULL); -- 1ms;
INSERT OR ROLLBACK INTO t0(c0, c2, c1) VALUES ('-1568338935', NULL, 1.940683395E9); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES ('-1568338935'); -- 1ms;
INSERT OR IGNORE INTO t0(c1, c2, c0) VALUES (NULL, (((0.360753272637231 IN ('2080318938'))) IS TRUE), 0.4909806669273711); -- 1ms;
INSERT OR IGNORE INTO t0(c0, c1) VALUES ('0.4909806669273711', ''), (0xffffffffa2850c09, 0.5004865235158406), ('[>\r4S''j', NULL); -- 1ms;
CREATE INDEX IF NOT EXISTS i85 ON t0(((((((c1) BETWEEN (c2) AND (c2)))OR(CASE c2  WHEN c2 THEN c1 ELSE c2 END)))AND(((x'') IS TRUE))) ASC,((((c2) BETWEEN (c0) AND (c0))) NOT BETWEEN (((c1)IS NOT(c1))) AND ((c0 IN (0.9771683885505954)))),((((((((c1)AND((((c1, c0, c1)) NOT BETWEEN ((c1, c0, c1)) AND ((c1, c2, c1))))))AND(NULLIF(c0, NULL))))OR((NOT (c1)))))AND(c1 COLLATE BINARY)) COLLATE RTRIM DESC); -- 1ms;
INSERT OR IGNORE INTO t0(c1, c0) VALUES (0xfffffffff25c558d, NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('U'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.application_id; -- 0ms;
PRAGMA main.cache_size; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1)=('-803304195', '') WHERE (NOT (((t0.c2)+(t0.c2)))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t0(c1, c0) VALUES ('-1630483208', '-803304195'), ('-9223372036854775808', 0.8929649503121234), (0.8588896040637712, 0.4854159631806234); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.1334387105838064); -- 0ms;
INSERT OR ROLLBACK INTO t0(c1, c2) VALUES (1553156766, -2.28829811E8); -- 0ms;
CREATE UNIQUE INDEX i89 ON t0(((c2 COLLATE RTRIM) NOT BETWEEN (((c0)|(c2))) AND ((('1791375552') NOT NULL))) COLLATE RTRIM,((((c2) NOT BETWEEN (c0) AND (c1)))<((c2 IN (c1)))),(((((c2)OR(c2)))OR(c0)) IN ())) WHERE ((((c0 COLLATE BINARY)AND(c1 COLLATE NOCASE)))OR(TRIM(c2))); -- 3ms;
VACUUM; -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT NTILE((~ (((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2))))) OVER () FROM t0 NOT INDEXED WHERE (CAST(CASE -1.568338935E9  WHEN '2080318938' THEN '迪T䞭	U' WHEN NULL THEN '' WHEN 0.13813958760474276 THEN '' END AS TEXT)); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x'6369'); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES ('1940683395', NULL, 68447322); -- 0ms;
INSERT OR FAIL INTO t0(c2) VALUES (0xffffffffd01e8cfd); -- 0ms;
INSERT OR IGNORE INTO t0(c2, c0) VALUES (-803304195, x''), ('', x''), (-803304195, 0.7745469215983808); -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('654144567'), (0.06449936522535915), (x'bf56'); -- 0ms;
INSERT OR IGNORE INTO t0(c2) VALUES (NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('') WHERE t0.c0; -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.6781273161911446; -- 0ms;
PRAGMA temp.defer_foreign_keys; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('654484744'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ANALYZE v0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA defer_foreign_keys = false; -- 0ms;
INSERT OR FAIL INTO t0(c2, c0) VALUES (NULL, 0.2528568787402937); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES ('1940683395', '2015043347', 0X2702a508), (0.6360432486876484, 0X54dc1269, 1.791375552E9), (0.499981362644893, '웽G%*', 'k{'); -- 0ms;
INSERT OR ABORT INTO t0(c1) VALUES (x''), (0.22783338308155066), (((((('뎕*hlr')AND(0.7221113920416663)))OR(0.889742689412914)) IN ())); -- 0ms;
INSERT OR IGNORE INTO t0(c2, c0) VALUES (x'', x''); -- 0ms;
REINDEX; -- 0ms;
INSERT OR REPLACE INTO t0(c1, c0) VALUES ('cWE/Y4Y|[', x''); -- 0ms;
INSERT OR IGNORE INTO t0(c1, c0, c2) VALUES (NULL, x'', 'JA6jqC 湼'); -- 0ms;
UPDATE OR FAIL t0 SET (c0, c2, c2)=(x'', NULL, '-1630483208') WHERE NULLIF(DISTINCT (t0.c2 IN (t0.c2, t0.c1, t0.c0)), -1.630483208E9); -- 1ms;
UPDATE t0 SET c0='' WHERE (NOT (((t0.c2) BETWEEN (t0.c0) AND (t0.c1)))); -- 1ms;
INSERT OR ROLLBACK INTO t0(c1, c0) VALUES (0.34820284514206046, '[>\r4S''j'); -- 0ms;
PRAGMA integrity_check; -- 1ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c2)=(NULL, ''); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE t0 SET c1=0.8320451791790826 WHERE (((+ (t0.c1)))/(t0.c2)); -- 0ms;
INSERT OR IGNORE INTO t0(c2) VALUES (0.5649109944640295); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('1154969011'); -- 1ms;
UPDATE OR IGNORE t0 SET (c1)=(0.43281538667958586); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=870195193 unordered'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c0, c2) VALUES (0.9771683885505954, 0.25373223958557356); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 0ms;
UPDATE OR REPLACE t0 SET c2=669455945; -- 1ms;
PRAGMA temp.cache_spill; -- 0ms;
PRAGMA secure_delete; -- 0ms;
UPDATE OR REPLACE t0 SET c1=0xffffffff8f24826f, c2='26638203', c1='' WHERE ((t0.c1)GLOB(t0.c2)) COLLATE NOCASE; -- 0ms;
PRAGMA temp.soft_heap_limit = 0; -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (-46322518, 0X7576d09a, '-1630483208'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((((((((6.69455945E8)AND('')))OR(x'')))AND('')))AND(x'')))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE t0 SET (c2)=('-1893432721') WHERE ((x'') NOT BETWEEN ((~ (t0.c1))) AND ((((t0.c0))>=((t0.c1))))); -- 0ms;
INSERT OR IGNORE INTO t0(c0, c1) VALUES ('1117829580', 0.07855377774656536); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ANALYZE t0; -- 0ms;
UPDATE OR FAIL t0 SET c0=0.10565652128254077; -- 0ms;
UPDATE OR IGNORE t0 SET c2='0.8320451791790826', c1='-46322518', c1=x''; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i12 ON t0((((c2) IS TRUE) IN ()),CAST(c0 AS REAL) COLLATE RTRIM,((CASE c1  WHEN c2 THEN c2 WHEN c2 THEN c1 WHEN c1 THEN c1 ELSE c1 END) ISNULL) COLLATE BINARY ASC) WHERE (((c2)) NOT BETWEEN ((((c2) BETWEEN (c1) AND (c1)))) AND (((((c0))<((c1)))))); -- 4ms;
PRAGMA main.auto_vacuum = FULL; -- 0ms;
UPDATE OR ROLLBACK t0 SET c1='[>\r4S''j', c2=x'', c1=0x7576d09a WHERE CASE WHEN (((t0.c0, t0.c0, t0.c1, t0.c1, t0.c2)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c1)) AND (('-2056590896', t0.c0, t0.c2, t0.c1, t0.c1))) THEN ((t0.c2) NOT NULL) END; -- 0ms;
COMMIT; -- 0ms;
PRAGMA recursive_triggers = false; -- 0ms;
INSERT OR IGNORE INTO t0(c1, c2) VALUES (NULL, '-924558495'), ('-377859912', 'Hy<O_H汚'), (x'', '26638203'), ('-1544893192', x'4045'), ('\rk', ''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR IGNORE t0 SET c0=x'' WHERE LIKELIHOOD(DISTINCT TOTAL_CHANGES(), 0.29063797224048993); -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
INSERT OR ROLLBACK INTO t0(c1, c0) VALUES (x'', NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c1) VALUES (0.8411567213159639); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0, c2)=(NULL, 0.06824558436033412, 0.1334387105838064) WHERE ((CASE t0.c1  WHEN 0.6706988859963228 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c0 ELSE NULL END)>(((t0.c2)!=(t0.c0)))); -- 0ms;
ANALYZE; -- 1ms;
CREATE UNIQUE INDEX IF NOT EXISTS i52 ON t0(TRIM(DISTINCT c2 COLLATE RTRIM) COLLATE BINARY,CASE CAST(0.7745469215983808 AS REAL)  WHEN (c1 IN ()) THEN ((c0)IS NOT(c2)) END COLLATE RTRIM ASC,((c1)LIKE(x''))) WHERE ((((c2 COLLATE NOCASE)OR(CASE c2  WHEN c1 THEN '' END)))OR(CAST(c2 AS INTEGER))); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i13 ON t0((((((((((((c2, c0, c1))>=((c2, c2, c2))))OR(TRIM(c2, c0))))AND(LIKELY(DISTINCT c1))))OR(CASE WHEN c0 THEN c0 ELSE c0 END)))OR((((c0)) BETWEEN ((c0)) AND ((c0))))) COLLATE RTRIM,(((((((c1, c0, c1, c0, c0)) BETWEEN (('1154969011', x'', c0, c2, c2)) AND ((c1, c2, c0, c0, c0))))AND(((c1) NOT BETWEEN (c0) AND (c2)))))OR(NULL)) COLLATE RTRIM,c1 DESC) WHERE (LOWER(0.30579000127878464) IN ()); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA default_cache_size = 669455945; -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=2146988636 noskipscan'); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c2, c1)=(x'71c5', 0.27027070052541435, NULL); -- 0ms;
UPDATE OR REPLACE t0 SET (c0)=('k{'); -- 1ms;
INSERT OR IGNORE INTO t0(c1, c0) VALUES (0.10565652128254077, '0.25373223958557356'); -- 0ms;
UPDATE OR IGNORE t0 SET c0='1970720922'; -- 1ms;
ANALYZE; -- 1ms;
PRAGMA shrink_memory; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x'1987') WHERE ((((((t0.c1)!=(t0.c2)))AND(((t0.c1) NOT NULL))))OR((((t0.c2)) BETWEEN ((t0.c1)) AND ((0.352121409250701))))); -- 0ms;
PRAGMA main.incremental_vacuum; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c2, c0, c1) VALUES (NULL, 0.6757288113768989, NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA defer_foreign_keys; -- 0ms;
UPDATE OR ABORT t0 SET c0=NULL WHERE (+ (t0.c2 COLLATE NOCASE)); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ABORT t0 SET (c1)=(x'cb823245'); -- 1ms;
UPDATE t0 SET (c1)=(x'7d52'); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '0 sz=1553156766 unordered'); -- 0ms;
INSERT OR IGNORE INTO t0(c1, c0) VALUES (x'de7295e3', NULL), (443137426, NULL), ('1374165164', 0.6072114343475914), (x'', x''), (x'', ''); -- 1ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((((((t0.c0)&(t0.c1))))<>((NULL)))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((((t0.c0)&(t0.c1))))!=((NULL)))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((((t0.c0)&(t0.c1))))!=((NULL)))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c0, t0.c2, v0.c0 FROM v0, t0;
SELECT DISTINCT t0.c0, t0.c2, v0.c0 FROM v0, t0 WHERE (((t0.c2)IS NOT('-1893432721')) COLLATE NOCASE) UNION SELECT DISTINCT t0.c0, t0.c2, v0.c0 FROM v0, t0 WHERE ((NOT (((t0.c2)IS NOT('-1893432721')) COLLATE NOCASE))) UNION SELECT DISTINCT t0.c0, t0.c2, v0.c0 FROM v0, t0 WHERE (((((t0.c2)IS NOT('-1893432721')) COLLATE NOCASE) ISNULL));
SELECT DISTINCT t0.c0, t0.c2, v0.c0 FROM v0, t0;
SELECT t0.c2, t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM v0, t0 WHERE (((((t0.c1)GLOB(t0.c0)))*(((((v0.c0)AND(t0.c2)))AND(v0.c0))))) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT t0.c2, t0.c0, t0.c1 FROM v0, t0 WHERE ((NOT (((((t0.c1)GLOB(t0.c0)))*(((((v0.c0)AND(t0.c2)))AND(v0.c0))))))) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT ALL t0.c2, t0.c0, t0.c1 FROM v0, t0 WHERE (((((((t0.c1)GLOB(t0.c0)))*(((((v0.c0)AND(t0.c2)))AND(v0.c0))))) ISNULL)) GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c1, t0.c0, t0.c2, v0.c0 FROM t0 FULL OUTER JOIN v0 ON ((NULL) IS FALSE) GROUP BY t0.c1, t0.c0, t0.c2, v0.c0;
SELECT t0.c1, t0.c0, t0.c2, v0.c0 FROM t0 FULL OUTER JOIN v0 ON ((NULL) IS FALSE) GROUP BY t0.c1, t0.c0, t0.c2, v0.c0 HAVING AVG(MAX(t0.c1)) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2, v0.c0 FROM t0 FULL OUTER JOIN v0 ON ((NULL) IS FALSE) GROUP BY t0.c1, t0.c0, t0.c2, v0.c0 HAVING (NOT (AVG(MAX(t0.c1)))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2, v0.c0 FROM t0 FULL OUTER JOIN v0 ON ((NULL) IS FALSE) GROUP BY t0.c1, t0.c0, t0.c2, v0.c0 HAVING ((AVG(MAX(t0.c1))) ISNULL);
SELECT * FROM v0, t0;
SELECT * FROM v0, t0 WHERE (((((CASE t0.c2  WHEN -1501181105 THEN t0.c0 ELSE t0.c0 END)OR((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))))))OR(v0.c0 COLLATE RTRIM))) UNION ALL SELECT * FROM v0, t0 WHERE ((NOT (((((CASE t0.c2  WHEN -1501181105 THEN t0.c0 ELSE t0.c0 END)OR((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))))))OR(v0.c0 COLLATE RTRIM))))) UNION ALL SELECT * FROM v0, t0 WHERE (((((((CASE t0.c2  WHEN -1501181105 THEN t0.c0 ELSE t0.c0 END)OR((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))))))OR(v0.c0 COLLATE RTRIM))) ISNULL));
SELECT * FROM v0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN t0.c2 THEN t0.c0 END)<('z+'))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((CASE WHEN t0.c2 THEN t0.c0 END)<('z+'))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((CASE WHEN t0.c2 THEN t0.c0 END)<('z+'))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c2, v0.c0, t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1;
SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1 FROM t0, v0 WHERE (((t0.c2)IS NOT((+ (t0.c0))))) GROUP BY t0.c2, v0.c0, t0.c0, t0.c1 UNION SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1 FROM t0, v0 WHERE ((NOT (((t0.c2)IS NOT((+ (t0.c0))))))) GROUP BY t0.c2, v0.c0, t0.c0, t0.c1 UNION SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1 FROM t0, v0 WHERE (((((t0.c2)IS NOT((+ (t0.c0))))) ISNULL)) GROUP BY t0.c2, v0.c0, t0.c0, t0.c1;
SELECT t0.c2, v0.c0, t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1;
SELECT v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0;
SELECT ALL v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0 HAVING ((CASE WHEN v0.c0 THEN COUNT(*) END) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (COUNT(AVG(0xffffffffb8eb1fa0)))) UNION ALL SELECT v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0 HAVING (NOT (((CASE WHEN v0.c0 THEN COUNT(*) END) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (COUNT(AVG(0xffffffffb8eb1fa0)))))) UNION ALL SELECT ALL v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0 HAVING ((((CASE WHEN v0.c0 THEN COUNT(*) END) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (COUNT(AVG(0xffffffffb8eb1fa0))))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) NOT BETWEEN (NULL) AND (v0.c0)) COLLATE RTRIM) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0) NOT BETWEEN (NULL) AND (v0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) NOT BETWEEN (NULL) AND (v0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT t0.c1, v0.c0, t0.c2 FROM t0, v0;
SELECT DISTINCT t0.c1, v0.c0, t0.c2 FROM t0, v0 WHERE (((((((((((t0.c1)AND(v0.c0)))AND(t0.c1)))OR(v0.c0)))OR(t0.c0)))<(((((t0.c2)AND(t0.c1)))AND(t0.c1))))) UNION SELECT DISTINCT t0.c1, v0.c0, t0.c2 FROM t0, v0 WHERE ((NOT (((((((((((t0.c1)AND(v0.c0)))AND(t0.c1)))OR(v0.c0)))OR(t0.c0)))<(((((t0.c2)AND(t0.c1)))AND(t0.c1))))))) UNION SELECT DISTINCT t0.c1, v0.c0, t0.c2 FROM t0, v0 WHERE (((((((((((((t0.c1)AND(v0.c0)))AND(t0.c1)))OR(v0.c0)))OR(t0.c0)))<(((((t0.c2)AND(t0.c1)))AND(t0.c1))))) ISNULL));
SELECT DISTINCT t0.c1, v0.c0, t0.c2 FROM t0, v0;
SELECT ALL v0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c1;
SELECT ALL v0.c0, t0.c1 FROM v0, t0 WHERE (PRINTF(v0.c0, 0.5407075490872756, t0.c2) COLLATE RTRIM) GROUP BY v0.c0, t0.c1 UNION SELECT ALL v0.c0, t0.c1 FROM v0, t0 WHERE ((NOT (PRINTF(v0.c0, 0.5407075490872756, t0.c2) COLLATE RTRIM))) GROUP BY v0.c0, t0.c1 UNION SELECT v0.c0, t0.c1 FROM v0, t0 WHERE (((PRINTF(v0.c0, 0.5407075490872756, t0.c2) COLLATE RTRIM) ISNULL)) GROUP BY v0.c0, t0.c1;
SELECT ALL v0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(((COUNT(AVG(TOTAL(MAX(GROUP_CONCAT(v0.c0)))))) IS TRUE)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(((COUNT(AVG(TOTAL(MAX(GROUP_CONCAT(v0.c0)))))) IS TRUE)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(((COUNT(AVG(TOTAL(MAX(GROUP_CONCAT(v0.c0)))))) IS TRUE))) ISNULL);
SELECT * FROM v0, t0;
SELECT * FROM v0, t0 WHERE ((~ (((t0.c0)>(t0.c0))))) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((NOT ((~ (((t0.c0)>(t0.c0))))))) UNION ALL SELECT * FROM v0, t0 WHERE ((((~ (((t0.c0)>(t0.c0))))) ISNULL));
SELECT * FROM v0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (0X100a9890) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (0x100a9890))) UNION SELECT DISTINCT * FROM t0 WHERE (((0X100a9890) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 WHERE (CASE COALESCE(t0.c2, t0.c0)  WHEN ((0.02259034375232194)||(t0.c2)) THEN (((t0.c1))<((t0.c2))) END) GROUP BY t0.c0, t0.c1 UNION SELECT t0.c0, t0.c1 FROM t0 WHERE ((NOT (CASE COALESCE(t0.c2, t0.c0)  WHEN ((0.02259034375232194)||(t0.c2)) THEN (((t0.c1))<((t0.c2))) END))) GROUP BY t0.c0, t0.c1 UNION SELECT t0.c0, t0.c1 FROM t0 WHERE (((CASE COALESCE(t0.c2, t0.c0)  WHEN ((0.02259034375232194)||(t0.c2)) THEN (((t0.c1))<((t0.c2))) END) ISNULL)) GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING AVG(((((((((MIN(t0.c2))AND(COUNT(GROUP_CONCAT(t0.c0)))))OR(MIN(t0.c0))))OR(MIN(AVG(SUM(MIN(MAX(MAX(t0.c0)))))))))AND(t0.c1))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (AVG(((((((((MIN(t0.c2))AND(COUNT(GROUP_CONCAT(t0.c0)))))OR(MIN(t0.c0))))OR(MIN(AVG(SUM(MIN(MAX(MAX(t0.c0)))))))))AND(t0.c1))))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((AVG(((((((((MIN(t0.c2))AND(COUNT(GROUP_CONCAT(t0.c0)))))OR(MIN(t0.c0))))OR(MIN(AVG(SUM(MIN(MAX(MAX(t0.c0)))))))))AND(t0.c1)))) ISNULL);
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 WHERE (t0.c1) UNION ALL SELECT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((NOT (t0.c1))) UNION ALL SELECT t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((t0.c1) ISNULL));
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0;
SELECT DISTINCT t0.c2 FROM t0;
SELECT DISTINCT t0.c2 FROM t0 WHERE (0X6dab0784) UNION SELECT DISTINCT t0.c2 FROM t0 WHERE ((NOT (0x6dab0784))) UNION SELECT DISTINCT t0.c2 FROM t0 WHERE (((0X6dab0784) ISNULL));
SELECT DISTINCT t0.c2 FROM t0;
SELECT t0.c1, t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c1, t0.c0, v0.c0;
SELECT ALL t0.c1, t0.c0, v0.c0 FROM t0, v0 WHERE (NULL) GROUP BY t0.c1, t0.c0, v0.c0 UNION SELECT ALL t0.c1, t0.c0, v0.c0 FROM t0, v0 WHERE ((NOT (NULL))) GROUP BY t0.c1, t0.c0, v0.c0 UNION SELECT ALL t0.c1, t0.c0, v0.c0 FROM t0, v0 WHERE (((NULL) ISNULL)) GROUP BY t0.c1, t0.c0, v0.c0;
SELECT t0.c1, t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c1, t0.c0, v0.c0;
SELECT ALL t0.c2 FROM t0, v0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0, v0 GROUP BY t0.c2 HAVING ((((v0.c0)<(t0.c2))) NOT NULL) UNION ALL SELECT t0.c2 FROM t0, v0 GROUP BY t0.c2 HAVING (NOT (((((v0.c0)<(t0.c2))) NOT NULL))) UNION ALL SELECT t0.c2 FROM t0, v0 GROUP BY t0.c2 HAVING ((((((v0.c0)<(t0.c2))) NOT NULL)) ISNULL);
SELECT ALL t0.c2 FROM t0, v0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0, v0 GROUP BY t0.c2 HAVING ((((v0.c0)<(t0.c2))) NOT NULL) UNION ALL SELECT t0.c2 FROM t0, v0 GROUP BY t0.c2 HAVING (NOT (((((v0.c0)<(t0.c2))) NOT NULL))) UNION ALL SELECT t0.c2 FROM t0, v0 GROUP BY t0.c2 HAVING ((((((v0.c0)<(t0.c2))) NOT NULL)) ISNULL);
SELECT ALL t0.c2 FROM t0, v0 GROUP BY t0.c2;
SELECT ALL t0.c0, t0.c1 FROM t0;
SELECT ALL t0.c0, t0.c1 FROM t0 WHERE (((((((((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(((((((((t0.c2)OR(t0.c1)))AND(t0.c1)))OR(t0.c1)))AND(t0.c1)))))OR((- (t0.c2)))))OR((~ (t0.c1)))))OR(((t0.c2)==(t0.c0))))) UNION ALL SELECT t0.c0, t0.c1 FROM t0 WHERE ((NOT (((((((((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(((((((((t0.c2)OR(t0.c1)))AND(t0.c1)))OR(t0.c1)))AND(t0.c1)))))OR((- (t0.c2)))))OR((~ (t0.c1)))))OR(((t0.c2)=(t0.c0))))))) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 WHERE (((((((((((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(((((((((t0.c2)OR(t0.c1)))AND(t0.c1)))OR(t0.c1)))AND(t0.c1)))))OR((- (t0.c2)))))OR((~ (t0.c1)))))OR(((t0.c2)=(t0.c0))))) ISNULL));
SELECT ALL t0.c0, t0.c1 FROM t0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (LIKELY(DISTINCT CAST(v0.c0 AS INTEGER))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (LIKELY(DISTINCT CAST(v0.c0 AS INTEGER))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((LIKELY(DISTINCT CAST(v0.c0 AS INTEGER))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (1.154969011E9) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (1.154969011E9))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((1.154969011E9) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, t0.c2, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c1;
SELECT v0.c0, t0.c2, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c1 HAVING GROUP_CONCAT(GROUP_CONCAT(t0.c2)) UNION ALL SELECT ALL v0.c0, t0.c2, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c1 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(t0.c2)))) UNION ALL SELECT v0.c0, t0.c2, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c1 HAVING ((GROUP_CONCAT(GROUP_CONCAT(t0.c2))) ISNULL);
SELECT * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE ((((((((((((v0.c0)OR(v0.c0)))AND(t0.c2)))OR(x'4432')))OR(v0.c0))))<((((((v0.c0)AND(v0.c0)))OR(v0.c0)))))) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((NOT ((((((((((((v0.c0)OR(v0.c0)))AND(t0.c2)))OR(x'4432')))OR(v0.c0))))<((((((v0.c0)AND(v0.c0)))OR(v0.c0)))))))) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((((((((((((((v0.c0)OR(v0.c0)))AND(t0.c2)))OR(x'4432')))OR(v0.c0))))<((((((v0.c0)AND(v0.c0)))OR(v0.c0)))))) ISNULL));
SELECT * FROM v0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST(TYPEOF(DISTINCT t0.c2) AS INTEGER)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(TYPEOF(DISTINCT t0.c2) AS INTEGER)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(TYPEOF(DISTINCT t0.c2) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0 IN (v0.c0)))LIKE(CAST(v0.c0 AS REAL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 IN (v0.c0)))LIKE(CAST(v0.c0 AS REAL)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((v0.c0 IN (v0.c0)))LIKE(CAST(v0.c0 AS REAL)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c0 FROM t0, v0;
SELECT ALL t0.c0 FROM t0, v0 WHERE (((t0.c0 COLLATE NOCASE)>=(((t0.c0)+(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0, v0 WHERE ((NOT (((t0.c0 COLLATE NOCASE)>=(((t0.c0)+(t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0, v0 WHERE (((((t0.c0 COLLATE NOCASE)>=(((t0.c0)+(t0.c0))))) ISNULL));
SELECT t0.c0 FROM t0, v0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE ((((t0.c1) BETWEEN (t0.c2) AND (t0.c2)) IN ())) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT ((((t0.c1) BETWEEN (t0.c2) AND (t0.c2)) IN ())))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((((((t0.c1) BETWEEN (t0.c2) AND (t0.c2)) IN ())) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT t0.c1, t0.c0 FROM t0, v0 GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0, v0 WHERE ('-12719966') GROUP BY t0.c1, t0.c0 UNION SELECT t0.c1, t0.c0 FROM t0, v0 WHERE ((NOT ('-12719966'))) GROUP BY t0.c1, t0.c0 UNION SELECT ALL t0.c1, t0.c0 FROM t0, v0 WHERE ((('-12719966') ISNULL)) GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0, v0 GROUP BY t0.c1, t0.c0;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (((68447322)) NOT BETWEEN ((AVG(TOTAL(COUNT(*))))) AND ((CAST(MIN(t0.c1) AS NUMERIC)))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (NOT ((((68447322)) NOT BETWEEN ((AVG(TOTAL(COUNT(*))))) AND ((CAST(MIN(t0.c1) AS NUMERIC)))))) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (((((68447322)) NOT BETWEEN ((AVG(TOTAL(COUNT(*))))) AND ((CAST(MIN(t0.c1) AS NUMERIC))))) ISNULL);
SELECT * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE ((((((t0.c2 IN ()))AND(((v0.c0) NOT NULL))))AND(t0.c0 COLLATE RTRIM))) UNION ALL SELECT * FROM t0, v0 WHERE ((NOT ((((((t0.c2 IN ()))AND(((v0.c0) NOT NULL))))AND(t0.c0 COLLATE RTRIM))))) UNION ALL SELECT * FROM t0, v0 WHERE ((((((((t0.c2 IN ()))AND(((v0.c0) NOT NULL))))AND(t0.c0 COLLATE RTRIM))) ISNULL));
SELECT * FROM t0, v0;
SELECT DISTINCT t0.c0, t0.c1 FROM t0 NATURAL JOIN v0;
SELECT DISTINCT t0.c0, t0.c1 FROM t0 NATURAL JOIN v0 WHERE (CASE UNLIKELY(t0.c1)  WHEN ((v0.c0) NOT NULL) THEN ((t0.c2) BETWEEN (x'') AND ('厰m[MimQM!')) END) UNION SELECT DISTINCT t0.c0, t0.c1 FROM t0 NATURAL JOIN v0 WHERE ((NOT (CASE UNLIKELY(t0.c1)  WHEN ((v0.c0) NOT NULL) THEN ((t0.c2) BETWEEN (x'') AND ('厰m[MimQM!')) END))) UNION SELECT DISTINCT t0.c0, t0.c1 FROM t0 NATURAL JOIN v0 WHERE (((CASE UNLIKELY(t0.c1)  WHEN ((v0.c0) NOT NULL) THEN ((t0.c2) BETWEEN (x'') AND ('厰m[MimQM!')) END) ISNULL));
SELECT DISTINCT t0.c0, t0.c1 FROM t0 NATURAL JOIN v0;
SELECT t0.c2 FROM t0 FULL OUTER JOIN v0 ON (((((((v0.c0)OR(v0.c0)))OR(t0.c1))))==((v0.c0 COLLATE BINARY))) GROUP BY t0.c2;
SELECT t0.c2 FROM t0 FULL OUTER JOIN v0 ON (((((((v0.c0)OR(v0.c0)))OR(t0.c1))))=((v0.c0 COLLATE BINARY))) WHERE ((NOT (t0.c2))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 FULL OUTER JOIN v0 ON (((((((v0.c0)OR(v0.c0)))OR(t0.c1))))=((v0.c0 COLLATE BINARY))) WHERE ((NOT ((NOT (t0.c2))))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 FULL OUTER JOIN v0 ON (((((((v0.c0)OR(v0.c0)))OR(t0.c1))))==((v0.c0 COLLATE BINARY))) WHERE ((((NOT (t0.c2))) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM t0 FULL OUTER JOIN v0 ON (((((((v0.c0)OR(v0.c0)))OR(t0.c1))))==((v0.c0 COLLATE BINARY))) GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING MAX(t0.c2) COLLATE RTRIM UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (MAX(t0.c2) COLLATE RTRIM)) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((MAX(t0.c2) COLLATE RTRIM) ISNULL);
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING MAX(t0.c2) COLLATE RTRIM UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (MAX(t0.c2) COLLATE RTRIM)) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((MAX(t0.c2) COLLATE RTRIM) ISNULL);
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE NULL  WHEN ((v0.c0) IS FALSE) THEN v0.c0 COLLATE RTRIM WHEN ABS(v0.c0) THEN ((v0.c0)<<(v0.c0)) WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 ELSE ((v0.c0) NOT NULL) END) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE NULL  WHEN ((v0.c0) IS FALSE) THEN v0.c0 COLLATE RTRIM WHEN ABS(v0.c0) THEN ((v0.c0)<<(v0.c0)) WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 ELSE ((v0.c0) NOT NULL) END))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CASE NULL  WHEN ((v0.c0) IS FALSE) THEN v0.c0 COLLATE RTRIM WHEN ABS(v0.c0) THEN ((v0.c0)<<(v0.c0)) WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 ELSE ((v0.c0) NOT NULL) END) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (x'4daa') UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (x'4daa'))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((x'4daa') ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM v0, t0 WHERE (DATETIME((('6 c') ISNULL), (t0.c1 IN ()), CASE WHEN v0.c0 THEN 0.06824558436033412 END, ((((((((((((v0.c0)OR(t0.c1)))AND(t0.c2)))OR(0X1a69bd92)))OR(v0.c0)))AND(t0.c2)))OR(v0.c0)), (((v0.c0, t0.c1, v0.c0)) NOT BETWEEN ((t0.c1, 0.8654751419567968, t0.c1)) AND ((t0.c0, v0.c0, t0.c0))))) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT t0.c1, t0.c0, t0.c2 FROM v0, t0 WHERE ((NOT (DATETIME((('6 c') ISNULL), (t0.c1 IN ()), CASE WHEN v0.c0 THEN 0.06824558436033412 END, ((((((((((((v0.c0)OR(t0.c1)))AND(t0.c2)))OR(0X1a69bd92)))OR(v0.c0)))AND(t0.c2)))OR(v0.c0)), (((v0.c0, t0.c1, v0.c0)) NOT BETWEEN ((t0.c1, 0.8654751419567968, t0.c1)) AND ((t0.c0, v0.c0, t0.c0))))))) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT t0.c1, t0.c0, t0.c2 FROM v0, t0 WHERE (((DATETIME((('6 c') ISNULL), (t0.c1 IN ()), CASE WHEN v0.c0 THEN 0.06824558436033412 END, ((((((((((((v0.c0)OR(t0.c1)))AND(t0.c2)))OR(0x1a69bd92)))OR(v0.c0)))AND(t0.c2)))OR(v0.c0)), (((v0.c0, t0.c1, v0.c0)) NOT BETWEEN ((t0.c1, 0.8654751419567968, t0.c1)) AND ((t0.c0, v0.c0, t0.c0))))) ISNULL)) GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c1, t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c1, t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c1, t0.c0;
SELECT TOTAL(((((~ (t0.c1))))>((load_extension(NULL))))) FROM t0, v0 ORDER BY (((t0.c2 COLLATE BINARY))>=((((v0.c0)IS(t0.c2))))), (((v0.c0)) BETWEEN ((t0.c2)) AND (((+ (t0.c1))))) DESC;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((NULL)GLOB(v0.c0))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((NULL)GLOB(v0.c0))))) UNION ALL SELECT * FROM v0 WHERE (((((NULL)GLOB(v0.c0))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT t0.c2, t0.c0, t0.c1 FROM t0;
SELECT DISTINCT t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((((t0.c1)!=(t0.c1))) ISNULL)) UNION SELECT DISTINCT t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT (((((t0.c1)<>(t0.c1))) ISNULL)))) UNION SELECT DISTINCT t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((((((t0.c1)<>(t0.c1))) ISNULL)) ISNULL));
SELECT DISTINCT t0.c2, t0.c0, t0.c1 FROM t0;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0 WHERE (CAST(x'' AS NUMERIC)) GROUP BY t0.c0, t0.c2 UNION SELECT ALL t0.c0, t0.c2 FROM t0 WHERE ((NOT (CAST(x'' AS NUMERIC)))) GROUP BY t0.c0, t0.c2 UNION SELECT t0.c0, t0.c2 FROM t0 WHERE (((CAST(x'' AS NUMERIC)) ISNULL)) GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0;
SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 HAVING TIME(COUNT(t0.c2), SUM(AVG(SUM(TOTAL(NULL)))), (((t0.c0)) BETWEEN ((t0.c0)) AND ((MAX(COUNT(*)))))) UNION ALL SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 HAVING (NOT (TIME(COUNT(t0.c2), SUM(AVG(SUM(TOTAL(NULL)))), (((t0.c0)) BETWEEN ((t0.c0)) AND ((MAX(COUNT(*)))))))) UNION ALL SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 HAVING ((TIME(COUNT(t0.c2), SUM(AVG(SUM(TOTAL(NULL)))), (((t0.c0)) BETWEEN ((t0.c0)) AND ((MAX(COUNT(*))))))) ISNULL);
SELECT t0.c2 FROM v0, t0;
SELECT t0.c2 FROM v0, t0 WHERE (t0.c2) UNION ALL SELECT t0.c2 FROM v0, t0 WHERE ((NOT (t0.c2))) UNION ALL SELECT t0.c2 FROM v0, t0 WHERE (((t0.c2) ISNULL));
SELECT t0.c2 FROM v0, t0;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON ((((((t0.c1)!=(t0.c2)))AND(t0.c0 COLLATE RTRIM)))AND(t0.c0));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON ((((((t0.c1)!=(t0.c2)))AND(t0.c0 COLLATE RTRIM)))AND(t0.c0)) WHERE (((((x'')<(t0.c2))) NOTNULL)) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON ((((((t0.c1)<>(t0.c2)))AND(t0.c0 COLLATE RTRIM)))AND(t0.c0)) WHERE ((NOT (((((x'')<(t0.c2))) NOTNULL)))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON ((((((t0.c1)!=(t0.c2)))AND(t0.c0 COLLATE RTRIM)))AND(t0.c0)) WHERE (((((((x'')<(t0.c2))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON ((((((t0.c1)!=(t0.c2)))AND(t0.c0 COLLATE RTRIM)))AND(t0.c0));
SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0;
SELECT ALL v0.c0, t0.c0 FROM t0, v0 WHERE ((((- (v0.c0))) NOTNULL)) GROUP BY v0.c0, t0.c0 UNION SELECT v0.c0, t0.c0 FROM t0, v0 WHERE ((NOT ((((- (v0.c0))) NOTNULL)))) GROUP BY v0.c0, t0.c0 UNION SELECT v0.c0, t0.c0 FROM t0, v0 WHERE ((((((- (v0.c0))) NOTNULL)) ISNULL)) GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((AVG(TOTAL(AVG(v0.c0))))OR(SUM(v0.c0))))OR(CAST(v0.c0 AS TEXT))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((AVG(TOTAL(AVG(v0.c0))))OR(SUM(v0.c0))))OR(CAST(v0.c0 AS TEXT))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((AVG(TOTAL(AVG(v0.c0))))OR(SUM(v0.c0))))OR(CAST(v0.c0 AS TEXT)))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0 COLLATE RTRIM)LIKE('1117829580'))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE RTRIM)LIKE('1117829580'))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)LIKE('1117829580'))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE ((CAST(v0.c0 AS BLOB) IN ())) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT ((CAST(v0.c0 AS BLOB) IN ())))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((((CAST(v0.c0 AS BLOB) IN ())) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0 WHERE (((CASE WHEN t0.c1 THEN t0.c1 END)<=(((t0.c0)IS NOT(t0.c0))))) GROUP BY t0.c0, t0.c2 UNION SELECT t0.c0, t0.c2 FROM t0 WHERE ((NOT (((CASE WHEN t0.c1 THEN t0.c1 END)<=(((t0.c0)IS NOT(t0.c0))))))) GROUP BY t0.c0, t0.c2 UNION SELECT t0.c0, t0.c2 FROM t0 WHERE (((((CASE WHEN t0.c1 THEN t0.c1 END)<=(((t0.c0)IS NOT(t0.c0))))) ISNULL)) GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(MIN(SUM(v0.c0))))OR(SUM(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((SUM(MIN(SUM(v0.c0))))OR(SUM(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((SUM(MIN(SUM(v0.c0))))OR(SUM(v0.c0)))) ISNULL);
SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON (((x'490d', (((t0.c0, v0.c0, t0.c1)) NOT BETWEEN ((t0.c0, v0.c0, t0.c2)) AND ((0X51e818ac, t0.c2, v0.c0))), ((t0.c2)<(t0.c2))))<=((((t0.c0)%(v0.c0)), (NOT (t0.c0)), ((v0.c0) ISNULL))));
SELECT * FROM v0 LEFT OUTER JOIN t0 ON (((x'490d', (((t0.c0, v0.c0, t0.c1)) NOT BETWEEN ((t0.c0, v0.c0, t0.c2)) AND ((0X51e818ac, t0.c2, v0.c0))), ((t0.c2)<(t0.c2))))<=((((t0.c0)%(v0.c0)), (NOT (t0.c0)), ((v0.c0) ISNULL)))) WHERE ((((~ (v0.c0)))>(COALESCE(DISTINCT t0.c1, t0.c2)))) UNION ALL SELECT * FROM v0 LEFT OUTER JOIN t0 ON (((x'490d', (((t0.c0, v0.c0, t0.c1)) NOT BETWEEN ((t0.c0, v0.c0, t0.c2)) AND ((0x51e818ac, t0.c2, v0.c0))), ((t0.c2)<(t0.c2))))<=((((t0.c0)%(v0.c0)), (NOT (t0.c0)), ((v0.c0) ISNULL)))) WHERE ((NOT ((((~ (v0.c0)))>(COALESCE(DISTINCT t0.c1, t0.c2)))))) UNION ALL SELECT * FROM v0 LEFT OUTER JOIN t0 ON (((x'490d', (((t0.c0, v0.c0, t0.c1)) NOT BETWEEN ((t0.c0, v0.c0, t0.c2)) AND ((0x51e818ac, t0.c2, v0.c0))), ((t0.c2)<(t0.c2))))<=((((t0.c0)%(v0.c0)), (NOT (t0.c0)), ((v0.c0) ISNULL)))) WHERE ((((((~ (v0.c0)))>(COALESCE(DISTINCT t0.c1, t0.c2)))) ISNULL));
SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON (((x'490d', (((t0.c0, v0.c0, t0.c1)) NOT BETWEEN ((t0.c0, v0.c0, t0.c2)) AND ((0X51e818ac, t0.c2, v0.c0))), ((t0.c2)<(t0.c2))))<=((((t0.c0)%(v0.c0)), (NOT (t0.c0)), ((v0.c0) ISNULL))));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((+ ('-696864183'))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((+ ('-696864183'))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((+ ('-696864183'))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0;
SELECT ALL v0.c0, t0.c0 FROM v0, t0 WHERE (json_type(((t0.c0)*(t0.c0)))) GROUP BY v0.c0, t0.c0 UNION SELECT ALL v0.c0, t0.c0 FROM v0, t0 WHERE ((NOT (json_type(((t0.c0)*(t0.c0)))))) GROUP BY v0.c0, t0.c0 UNION SELECT v0.c0, t0.c0 FROM v0, t0 WHERE (((json_type(((t0.c0)*(t0.c0)))) ISNULL)) GROUP BY v0.c0, t0.c0;
SELECT ALL v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0;
SELECT t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2, t0.c0;
SELECT t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2, t0.c0 HAVING (((COUNT(*)))=((CAST(v0.c0 AS TEXT)))) UNION ALL SELECT ALL t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2, t0.c0 HAVING (NOT ((((COUNT(*)))==((CAST(v0.c0 AS TEXT)))))) UNION ALL SELECT ALL t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2, t0.c0 HAVING (((((COUNT(*)))==((CAST(v0.c0 AS TEXT))))) ISNULL);
SELECT t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2, t0.c0;
SELECT t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2, t0.c0 HAVING (((COUNT(*)))=((CAST(v0.c0 AS TEXT)))) UNION ALL SELECT ALL t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2, t0.c0 HAVING (NOT ((((COUNT(*)))==((CAST(v0.c0 AS TEXT)))))) UNION ALL SELECT ALL t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2, t0.c0 HAVING (((((COUNT(*)))==((CAST(v0.c0 AS TEXT))))) ISNULL);
SELECT t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2, t0.c0;
SELECT MAX(((((((((((((((t0.c0) IS FALSE))OR(v0.c0)))AND((((v0.c0, t0.c0, t0.c2)) BETWEEN ((t0.c2, '669455945', v0.c0)) AND ((t0.c2, t0.c0, t0.c1))))))OR(t0.c0)))OR(((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)))))AND((v0.c0 IN (t0.c1)))))OR(IFNULL(t0.c0, t0.c0)))) FROM t0, v0;
SELECT ALL v0.c0, t0.c1, t0.c0 FROM t0, v0;
SELECT v0.c0, t0.c1, t0.c0 FROM t0, v0 WHERE (CAST(CAST(v0.c0 AS REAL) AS BLOB)) UNION ALL SELECT ALL v0.c0, t0.c1, t0.c0 FROM t0, v0 WHERE ((NOT (CAST(CAST(v0.c0 AS REAL) AS BLOB)))) UNION ALL SELECT v0.c0, t0.c1, t0.c0 FROM t0, v0 WHERE (((CAST(CAST(v0.c0 AS REAL) AS BLOB)) ISNULL));
SELECT ALL v0.c0, t0.c1, t0.c0 FROM t0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((~ (((v0.c0) NOT BETWEEN (v0.c0) AND (1.11782958E9))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((~ (((v0.c0) NOT BETWEEN (v0.c0) AND (1.11782958E9))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((~ (((v0.c0) NOT BETWEEN (v0.c0) AND (1.11782958E9))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL t0.c0 FROM t0, v0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, v0 WHERE (((t0.c2 COLLATE BINARY)LIKE(CAST(t0.c2 AS NUMERIC)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, v0 WHERE ((NOT (((t0.c2 COLLATE BINARY)LIKE(CAST(t0.c2 AS NUMERIC)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, v0 WHERE (((((t0.c2 COLLATE BINARY)LIKE(CAST(t0.c2 AS NUMERIC)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, v0 GROUP BY t0.c0;
SELECT ALL v0.c0, t0.c2, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c1;
SELECT ALL v0.c0, t0.c2, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c1 HAVING SUM(GROUP_CONCAT(COUNT(*))) UNION ALL SELECT ALL v0.c0, t0.c2, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c1 HAVING (NOT (SUM(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT ALL v0.c0, t0.c2, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c1 HAVING ((SUM(GROUP_CONCAT(COUNT(*)))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (((((t0.c2) IS FALSE))OR(((t0.c0)OR(t0.c1))))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((t0.c2) IS FALSE))OR(((t0.c0)OR(t0.c1))))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((t0.c2) IS FALSE))OR(((t0.c0)OR(t0.c1))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((x'')&(CAST(v0.c0 AS BLOB)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((x'')&(CAST(v0.c0 AS BLOB)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((x'')&(CAST(v0.c0 AS BLOB)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, t0.c2, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c1;
SELECT v0.c0, t0.c2, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c1 HAVING MAX(COUNT(GROUP_CONCAT(t0.c2))) UNION ALL SELECT ALL v0.c0, t0.c2, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c1 HAVING (NOT (MAX(COUNT(GROUP_CONCAT(t0.c2))))) UNION ALL SELECT v0.c0, t0.c2, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c1 HAVING ((MAX(COUNT(GROUP_CONCAT(t0.c2)))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((((v0.c0)<<(v0.c0)))>(CASE WHEN '63156669' THEN v0.c0 ELSE v0.c0 END))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((v0.c0)<<(v0.c0)))>(CASE WHEN '63156669' THEN v0.c0 ELSE v0.c0 END))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((v0.c0)<<(v0.c0)))>(CASE WHEN '63156669' THEN v0.c0 ELSE v0.c0 END))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT t0.c2, t0.c1, t0.c0, v0.c0 FROM v0, t0;
SELECT DISTINCT t0.c2, t0.c1, t0.c0, v0.c0 FROM v0, t0 WHERE ('888497234' COLLATE NOCASE) UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0, v0.c0 FROM v0, t0 WHERE ((NOT ('888497234' COLLATE NOCASE))) UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0, v0.c0 FROM v0, t0 WHERE ((('888497234' COLLATE NOCASE) ISNULL));
SELECT DISTINCT t0.c2, t0.c1, t0.c0, v0.c0 FROM v0, t0;
SELECT t0.c1, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON LIKELIHOOD(DISTINCT (((t0.c1, t0.c1, t0.c2)) NOT BETWEEN ((t0.c2, t0.c0, '-1135346754')) AND ((NULL, t0.c2, t0.c2))), 0.1311377518984186) GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON LIKELIHOOD(DISTINCT (((t0.c1, t0.c1, t0.c2)) NOT BETWEEN ((t0.c2, t0.c0, '-1135346754')) AND ((NULL, t0.c2, t0.c2))), 0.1311377518984186) WHERE ((- (v0.c0)) COLLATE RTRIM) GROUP BY t0.c1, t0.c0 UNION SELECT t0.c1, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON LIKELIHOOD(DISTINCT (((t0.c1, t0.c1, t0.c2)) NOT BETWEEN ((t0.c2, t0.c0, '-1135346754')) AND ((NULL, t0.c2, t0.c2))), 0.1311377518984186) WHERE ((NOT ((- (v0.c0)) COLLATE RTRIM))) GROUP BY t0.c1, t0.c0 UNION SELECT t0.c1, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON LIKELIHOOD(DISTINCT (((t0.c1, t0.c1, t0.c2)) NOT BETWEEN ((t0.c2, t0.c0, '-1135346754')) AND ((NULL, t0.c2, t0.c2))), 0.1311377518984186) WHERE ((((- (v0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON LIKELIHOOD(DISTINCT (((t0.c1, t0.c1, t0.c2)) NOT BETWEEN ((t0.c2, t0.c0, '-1135346754')) AND ((NULL, t0.c2, t0.c2))), 0.1311377518984186) GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0, v0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0, v0 GROUP BY t0.c1, t0.c0 HAVING MAX(((v0.c0)-(SUM(v0.c0)))) UNION ALL SELECT t0.c1, t0.c0 FROM t0, v0 GROUP BY t0.c1, t0.c0 HAVING (NOT (MAX(((v0.c0)-(SUM(v0.c0)))))) UNION ALL SELECT t0.c1, t0.c0 FROM t0, v0 GROUP BY t0.c1, t0.c0 HAVING ((MAX(((v0.c0)-(SUM(v0.c0))))) ISNULL);
SELECT MIN(((CASE t0.c2  WHEN t0.c1 THEN 0.499981362644893 ELSE t0.c1 END) IS FALSE)) FROM t0, v0 ORDER BY ((((((t0.c1, t0.c0, t0.c0, t0.c1, t0.c2)) BETWEEN ((t0.c1, t0.c2, t0.c0, v0.c0, v0.c0)) AND ((t0.c1, v0.c0, v0.c0, t0.c1, v0.c0)))))>=(((t0.c0 IN ()))));
SELECT ALL t0.c1, t0.c2 FROM v0 FULL OUTER JOIN t0 ON (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c2 WHEN v0.c0 THEN v0.c0 ELSE t0.c1 END))>=((CAST(v0.c0 AS REAL))));
SELECT ALL t0.c1, t0.c2 FROM v0 FULL OUTER JOIN t0 ON (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c2 WHEN v0.c0 THEN v0.c0 ELSE t0.c1 END))>=((CAST(v0.c0 AS REAL)))) WHERE (UNLIKELY(v0.c0 COLLATE RTRIM)) UNION ALL SELECT ALL t0.c1, t0.c2 FROM v0 FULL OUTER JOIN t0 ON (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c2 WHEN v0.c0 THEN v0.c0 ELSE t0.c1 END))>=((CAST(v0.c0 AS REAL)))) WHERE ((NOT (UNLIKELY(v0.c0 COLLATE RTRIM)))) UNION ALL SELECT ALL t0.c1, t0.c2 FROM v0 FULL OUTER JOIN t0 ON (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c2 WHEN v0.c0 THEN v0.c0 ELSE t0.c1 END))>=((CAST(v0.c0 AS REAL)))) WHERE (((UNLIKELY(v0.c0 COLLATE RTRIM)) ISNULL));
SELECT ALL t0.c1, t0.c2 FROM v0 FULL OUTER JOIN t0 ON (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c2 WHEN v0.c0 THEN v0.c0 ELSE t0.c1 END))>=((CAST(v0.c0 AS REAL))));
SELECT DISTINCT t0.c2 FROM t0;
SELECT DISTINCT t0.c2 FROM t0 WHERE ((((t0.c1)) BETWEEN ((((t0.c2)<=(t0.c1)))) AND (((~ (t0.c0)))))) UNION SELECT DISTINCT t0.c2 FROM t0 WHERE ((NOT ((((t0.c1)) BETWEEN ((((t0.c2)<=(t0.c1)))) AND (((~ (t0.c0)))))))) UNION SELECT DISTINCT t0.c2 FROM t0 WHERE ((((((t0.c1)) BETWEEN ((((t0.c2)<=(t0.c1)))) AND (((~ (t0.c0)))))) ISNULL));
SELECT DISTINCT t0.c2 FROM t0;
SELECT ALL t0.c1 FROM v0, t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM v0, t0 WHERE (CASE (((('*r')OR('-730293852')))OR(t0.c2))  WHEN CASE v0.c0  WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END THEN '236361723' COLLATE RTRIM ELSE ((t0.c2)+(t0.c0)) END) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM v0, t0 WHERE ((NOT (CASE (((('*r')OR('-730293852')))OR(t0.c2))  WHEN CASE v0.c0  WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END THEN '236361723' COLLATE RTRIM ELSE ((t0.c2)+(t0.c0)) END))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM v0, t0 WHERE (((CASE (((('*r')OR('-730293852')))OR(t0.c2))  WHEN CASE v0.c0  WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END THEN '236361723' COLLATE RTRIM ELSE ((t0.c2)+(t0.c0)) END) ISNULL)) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM v0, t0 GROUP BY t0.c1;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING MAX((+ (t0.c1))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (MAX((+ (t0.c1))))) UNION ALL SELECT t0.c2 FROM t0 NOT INDEXED GROUP BY t0.c2 HAVING ((MAX((+ (t0.c1)))) ISNULL);
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING MAX((+ (t0.c1))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (MAX((+ (t0.c1))))) UNION ALL SELECT t0.c2 FROM t0 NOT INDEXED GROUP BY t0.c2 HAVING ((MAX((+ (t0.c1)))) ISNULL);
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0)-(v0.c0)), ((v0.c0)OR(v0.c0)), CAST(v0.c0 AS NUMERIC)))!=((((v0.c0) ISNULL), ((v0.c0)IS(0.8588896040637712)), (((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0)-(v0.c0)), ((v0.c0)OR(v0.c0)), CAST(v0.c0 AS NUMERIC)))!=((((v0.c0) ISNULL), ((v0.c0)IS(0.8588896040637712)), (((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((((v0.c0)-(v0.c0)), ((v0.c0)OR(v0.c0)), CAST(v0.c0 AS NUMERIC)))!=((((v0.c0) ISNULL), ((v0.c0)IS(0.8588896040637712)), (((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0 IN ())) NOTNULL)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 IN ())) NOTNULL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0 IN ())) NOTNULL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT t0.c1, t0.c2 FROM t0, v0 GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM t0, v0 WHERE (((((t0.c1)||(t0.c2)))LIKE((t0.c2 IN ())))) GROUP BY t0.c1, t0.c2 UNION SELECT t0.c1, t0.c2 FROM t0, v0 WHERE ((NOT (((((t0.c1)||(t0.c2)))LIKE((t0.c2 IN ())))))) GROUP BY t0.c1, t0.c2 UNION SELECT t0.c1, t0.c2 FROM t0, v0 WHERE (((((((t0.c1)||(t0.c2)))LIKE((t0.c2 IN ())))) ISNULL)) GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM t0, v0 GROUP BY t0.c1, t0.c2;
SELECT t0.c2, t0.c0, t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c0, t0.c1, v0.c0;
SELECT ALL t0.c2, t0.c0, t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c0, t0.c1, v0.c0 HAVING (~ (SUM(MIN(t0.c1)))) UNION ALL SELECT t0.c2, t0.c0, t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c0, t0.c1, v0.c0 HAVING (NOT ((~ (SUM(MIN(t0.c1)))))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c0, t0.c1, v0.c0 HAVING (((~ (SUM(MIN(t0.c1))))) ISNULL);
SELECT v0.c0 FROM v0, t0;
SELECT ALL v0.c0 FROM v0, t0 WHERE (t0.c1) UNION ALL SELECT v0.c0 FROM v0, t0 WHERE ((NOT (t0.c1))) UNION ALL SELECT ALL v0.c0 FROM v0, t0 WHERE (((t0.c1) ISNULL));
SELECT v0.c0 FROM v0, t0;
SELECT DISTINCT t0.c1, v0.c0 FROM v0, t0;
SELECT DISTINCT t0.c1, v0.c0 FROM v0, t0 WHERE (LIKELIHOOD(DISTINCT (~ (t0.c0)), 0.8005981863067095)) UNION SELECT DISTINCT t0.c1, v0.c0 FROM v0, t0 WHERE ((NOT (LIKELIHOOD(DISTINCT (~ (t0.c0)), 0.8005981863067095)))) UNION SELECT DISTINCT t0.c1, v0.c0 FROM v0, t0 WHERE (((LIKELIHOOD(DISTINCT (~ (t0.c0)), 0.8005981863067095)) ISNULL));
SELECT DISTINCT t0.c1, v0.c0 FROM v0, t0;
SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM t0 WHERE ('') GROUP BY t0.c2, t0.c1 UNION SELECT ALL t0.c2, t0.c1 FROM t0 WHERE ((NOT (''))) GROUP BY t0.c2, t0.c1 UNION SELECT ALL t0.c2, t0.c1 FROM t0 WHERE ((('') ISNULL)) GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING MIN(TOTAL(GROUP_CONCAT(TOTAL(AVG(MAX(GROUP_CONCAT(COUNT(*)))))))) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING (NOT (MIN(TOTAL(GROUP_CONCAT(TOTAL(AVG(MAX(GROUP_CONCAT(COUNT(*)))))))))) UNION ALL SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING ((MIN(TOTAL(GROUP_CONCAT(TOTAL(AVG(MAX(GROUP_CONCAT(COUNT(*))))))))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE ((((CAST(t0.c0 AS BLOB), (t0.c2 IN ()), ((t0.c2)>=(t0.c0))))>=((((t0.c2)AND(t0.c2)), CAST(t0.c2 AS REAL), ((t0.c1)>(t0.c0)))))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((CAST(t0.c0 AS BLOB), (t0.c2 IN ()), ((t0.c2)>=(t0.c0))))>=((((t0.c2)AND(t0.c2)), CAST(t0.c2 AS REAL), ((t0.c1)>(t0.c0)))))))) UNION ALL SELECT * FROM t0 WHERE ((((((CAST(t0.c0 AS BLOB), (t0.c2 IN ()), ((t0.c2)>=(t0.c0))))>=((((t0.c2)AND(t0.c2)), CAST(t0.c2 AS REAL), ((t0.c1)>(t0.c0)))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN t0.c1 THEN ABS(DISTINCT t0.c1) END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE WHEN t0.c1 THEN ABS(DISTINCT t0.c1) END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN t0.c1 THEN ABS(DISTINCT t0.c1) END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM v0, t0 WHERE (CAST(((t0.c2)>=(v0.c0)) AS NUMERIC)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM v0, t0 WHERE ((NOT (CAST(((t0.c2)>=(v0.c0)) AS NUMERIC)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM v0, t0 WHERE (((CAST(((t0.c2)>=(v0.c0)) AS NUMERIC)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0, t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c0, t0.c2, v0.c0;
SELECT t0.c0, t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c0, t0.c2, v0.c0 HAVING HEX(DISTINCT AVG(t0.c2)) UNION ALL SELECT t0.c0, t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c0, t0.c2, v0.c0 HAVING (NOT (HEX(DISTINCT AVG(t0.c2)))) UNION ALL SELECT ALL t0.c0, t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c0, t0.c2, v0.c0 HAVING ((HEX(DISTINCT AVG(t0.c2))) ISNULL);
SELECT ALL t0.c0, t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c0, t0.c2, v0.c0;
SELECT t0.c0, t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c0, t0.c2, v0.c0 HAVING HEX(DISTINCT AVG(t0.c2)) UNION ALL SELECT t0.c0, t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c0, t0.c2, v0.c0 HAVING (NOT (HEX(DISTINCT AVG(t0.c2)))) UNION ALL SELECT ALL t0.c0, t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c0, t0.c2, v0.c0 HAVING ((HEX(DISTINCT AVG(t0.c2))) ISNULL);
SELECT ALL t0.c0, t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c0, t0.c2, v0.c0;
SELECT ALL t0.c1 FROM t0, v0;
SELECT ALL t0.c1 FROM t0, v0 WHERE ((((t0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (t0.c2) AND (v0.c0)))) AND ((CAST(t0.c0 AS REAL))))) UNION ALL SELECT ALL t0.c1 FROM t0, v0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (t0.c2) AND (v0.c0)))) AND ((CAST(t0.c0 AS REAL))))))) UNION ALL SELECT t0.c1 FROM t0, v0 WHERE ((((((t0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (t0.c2) AND (v0.c0)))) AND ((CAST(t0.c0 AS REAL))))) ISNULL));
SELECT ALL t0.c1 FROM t0, v0;
SELECT DISTINCT t0.c2 FROM t0 NATURAL JOIN v0;
SELECT DISTINCT t0.c2 FROM t0 NATURAL JOIN v0 WHERE (((((t0.c2) NOTNULL))*(((t0.c1)||(v0.c0))))) UNION SELECT DISTINCT t0.c2 FROM t0 NATURAL JOIN v0 WHERE ((NOT (((((t0.c2) NOTNULL))*(((t0.c1)||(v0.c0))))))) UNION SELECT DISTINCT t0.c2 FROM t0 NATURAL JOIN v0 WHERE (((((((t0.c2) NOTNULL))*(((t0.c1)||(v0.c0))))) ISNULL));
SELECT DISTINCT t0.c2 FROM t0 NATURAL JOIN v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((NOT (v0.c0))) ISNULL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((NOT (v0.c0))) ISNULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((NOT (v0.c0))) ISNULL)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING MAX(CAST(t0.c2 AS BLOB)) UNION ALL SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (NOT (MAX(CAST(t0.c2 AS BLOB)))) UNION ALL SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING ((MAX(CAST(t0.c2 AS BLOB))) ISNULL);
SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING MAX(CAST(t0.c2 AS BLOB)) UNION ALL SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (NOT (MAX(CAST(t0.c2 AS BLOB)))) UNION ALL SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING ((MAX(CAST(t0.c2 AS BLOB))) ISNULL);
SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT t0.c0, t0.c1 FROM t0;
SELECT ALL t0.c0, t0.c1 FROM t0 WHERE (((((((t0.c2)||(t0.c0)))OR(CAST(t0.c2 AS NUMERIC))))OR(((t0.c1)/(t0.c1))))) UNION ALL SELECT t0.c0, t0.c1 FROM t0 WHERE ((NOT (((((((t0.c2)||(t0.c0)))OR(CAST(t0.c2 AS NUMERIC))))OR(((t0.c1)/(t0.c1))))))) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 WHERE (((((((((t0.c2)||(t0.c0)))OR(CAST(t0.c2 AS NUMERIC))))OR(((t0.c1)/(t0.c1))))) ISNULL));
SELECT t0.c0, t0.c1 FROM t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (LTRIM(v0.c0 COLLATE RTRIM)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (LTRIM(v0.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT * FROM v0 WHERE (((LTRIM(v0.c0 COLLATE RTRIM)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CAST((~ (v0.c0)) AS BLOB)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST((~ (v0.c0)) AS BLOB)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST((~ (v0.c0)) AS BLOB)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING COUNT(((TOTAL(SUM(t0.c2)))IS NOT(MAX(COUNT(*))))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (COUNT(((TOTAL(SUM(t0.c2)))IS NOT(MAX(COUNT(*))))))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((COUNT(((TOTAL(SUM(t0.c2)))IS NOT(MAX(COUNT(*)))))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE ((v0.c0)%(v0.c0))  WHEN (v0.c0 IN ()) THEN json_valid(v0.c0) WHEN (- (1363546323)) THEN ((v0.c0)>>(x'')) WHEN (- (v0.c0)) THEN '1154969011' END) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CASE ((v0.c0)%(v0.c0))  WHEN (v0.c0 IN ()) THEN json_valid(v0.c0) WHEN (- (1363546323)) THEN ((v0.c0)>>(x'')) WHEN (- (v0.c0)) THEN '1154969011' END))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CASE ((v0.c0)%(v0.c0))  WHEN (v0.c0 IN ()) THEN json_valid(v0.c0) WHEN (- (1363546323)) THEN ((v0.c0)>>(x'')) WHEN (- (v0.c0)) THEN '1154969011' END) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((((((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))|(((v0.c0) IS TRUE)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((((((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))|(((v0.c0) IS TRUE)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((((((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))|(((v0.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t0.c0, t0.c2 FROM v0 CROSS JOIN t0 ON ((CAST(t0.c0 AS BLOB)) NOT BETWEEN ((- (t0.c2))) AND (((t0.c1)*(t0.c0)))) GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM v0 CROSS JOIN t0 ON ((CAST(t0.c0 AS BLOB)) NOT BETWEEN ((- (t0.c2))) AND (((t0.c1)*(t0.c0)))) WHERE ((ABS(v0.c0) IN (v0.c0, (t0.c2 IN (NULL, t0.c1))))) GROUP BY t0.c0, t0.c2 UNION SELECT t0.c0, t0.c2 FROM v0 CROSS JOIN t0 ON ((CAST(t0.c0 AS BLOB)) NOT BETWEEN ((- (t0.c2))) AND (((t0.c1)*(t0.c0)))) WHERE ((NOT ((ABS(v0.c0) IN (v0.c0, (t0.c2 IN (NULL, t0.c1))))))) GROUP BY t0.c0, t0.c2 UNION SELECT t0.c0, t0.c2 FROM v0 CROSS JOIN t0 ON ((CAST(t0.c0 AS BLOB)) NOT BETWEEN ((- (t0.c2))) AND (((t0.c1)*(t0.c0)))) WHERE ((((ABS(v0.c0) IN (v0.c0, (t0.c2 IN (NULL, t0.c1))))) ISNULL)) GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM v0 CROSS JOIN t0 ON ((CAST(t0.c0 AS BLOB)) NOT BETWEEN ((- (t0.c2))) AND (((t0.c1)*(t0.c0)))) GROUP BY t0.c0, t0.c2;
SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1;
SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 HAVING COUNT(*) UNION ALL SELECT v0.c0, t0.c2, t0.c0, t0.c1 FROM t0 NOT INDEXED, v0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1;
SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 HAVING COUNT(*) UNION ALL SELECT v0.c0, t0.c2, t0.c0, t0.c1 FROM t0 NOT INDEXED, v0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1;
SELECT v0.c0, t0.c0, t0.c1 FROM t0, v0;
SELECT ALL v0.c0, t0.c0, t0.c1 FROM t0, v0 WHERE (((t0.c1)<=(t0.c1)) COLLATE RTRIM) UNION ALL SELECT v0.c0, t0.c0, t0.c1 FROM t0, v0 WHERE ((NOT (((t0.c1)<=(t0.c1)) COLLATE RTRIM))) UNION ALL SELECT ALL v0.c0, t0.c0, t0.c1 FROM t0, v0 WHERE (((((t0.c1)<=(t0.c1)) COLLATE RTRIM) ISNULL));
SELECT v0.c0, t0.c0, t0.c1 FROM t0, v0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (CASE WHEN (((t0.c0)) NOT BETWEEN ((v0.c0)) AND (('-1630483208'))) THEN (v0.c0 IN ()) ELSE v0.c0 END) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (CASE WHEN (((t0.c0)) NOT BETWEEN ((v0.c0)) AND (('-1630483208'))) THEN (v0.c0 IN ()) ELSE v0.c0 END))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((CASE WHEN (((t0.c0)) NOT BETWEEN ((v0.c0)) AND (('-1630483208'))) THEN (v0.c0 IN ()) ELSE v0.c0 END) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT ALL v0.c0 FROM t0 NOT INDEXED, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t0, v0 WHERE ((((t0.c2, t0.c1, v0.c0, t0.c1, t0.c2)) NOT BETWEEN ((CAST(t0.c1 AS NUMERIC), ((x'b0dd') BETWEEN (v0.c0) AND (t0.c1)), t0.c2 COLLATE BINARY, (((v0.c0, t0.c0, t0.c1))>((t0.c0, t0.c1, t0.c2))), (+ (t0.c2)))) AND (((((t0.c2)) BETWEEN ((v0.c0)) AND ((t0.c2))), ('M\n-4658659462245010930-719872534512313328:-7220506646262407184TL' IN (v0.c0)), CASE WHEN t0.c1 THEN v0.c0 END, ((t0.c2) NOT NULL), ((NULL) NOT BETWEEN (t0.c1) AND (t0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t0, v0 WHERE ((NOT ((((t0.c2, t0.c1, v0.c0, t0.c1, t0.c2)) NOT BETWEEN ((CAST(t0.c1 AS NUMERIC), ((x'b0dd') BETWEEN (v0.c0) AND (t0.c1)), t0.c2 COLLATE BINARY, (((v0.c0, t0.c0, t0.c1))>((t0.c0, t0.c1, t0.c2))), (+ (t0.c2)))) AND (((((t0.c2)) BETWEEN ((v0.c0)) AND ((t0.c2))), ('M\n-4658659462245010930-719872534512313328:-7220506646262407184TL' IN (v0.c0)), CASE WHEN t0.c1 THEN v0.c0 END, ((t0.c2) NOT NULL), ((NULL) NOT BETWEEN (t0.c1) AND (t0.c0)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t0, v0 WHERE ((((((t0.c2, t0.c1, v0.c0, t0.c1, t0.c2)) NOT BETWEEN ((CAST(t0.c1 AS NUMERIC), ((x'b0dd') BETWEEN (v0.c0) AND (t0.c1)), t0.c2 COLLATE BINARY, (((v0.c0, t0.c0, t0.c1))>((t0.c0, t0.c1, t0.c2))), (+ (t0.c2)))) AND (((((t0.c2)) BETWEEN ((v0.c0)) AND ((t0.c2))), ('M\n-4658659462245010930-719872534512313328:-7220506646262407184TL' IN (v0.c0)), CASE WHEN t0.c1 THEN v0.c0 END, ((t0.c2) NOT NULL), ((NULL) NOT BETWEEN (t0.c1) AND (t0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0 NOT INDEXED, v0 GROUP BY v0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM v0 INNER JOIN t0 ON COALESCE(DISTINCT 'JI', 1.7976931348623157E308) GROUP BY t0.c1, t0.c2, t0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM v0 INNER JOIN t0 ON COALESCE(DISTINCT 'JI', 1.7976931348623157E308) GROUP BY t0.c1, t0.c2, t0.c0 HAVING t0.c0 UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0 FROM v0 INNER JOIN t0 ON COALESCE(DISTINCT 'JI', 1.7976931348623157E308) GROUP BY t0.c1, t0.c2, t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM v0 INNER JOIN t0 ON COALESCE(DISTINCT 'JI', 1.7976931348623157E308) GROUP BY t0.c1, t0.c2, t0.c0 HAVING ((t0.c0) ISNULL);
SELECT t0.c1, t0.c2, t0.c0 FROM v0 INNER JOIN t0 ON COALESCE(DISTINCT 'JI', 1.7976931348623157E308) GROUP BY t0.c1, t0.c2, t0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM v0 INNER JOIN t0 ON COALESCE(DISTINCT 'JI', 1.7976931348623157E308) GROUP BY t0.c1, t0.c2, t0.c0 HAVING t0.c0 UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0 FROM v0 INNER JOIN t0 ON COALESCE(DISTINCT 'JI', 1.7976931348623157E308) GROUP BY t0.c1, t0.c2, t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM v0 INNER JOIN t0 ON COALESCE(DISTINCT 'JI', 1.7976931348623157E308) GROUP BY t0.c1, t0.c2, t0.c0 HAVING ((t0.c0) ISNULL);
SELECT t0.c1, t0.c2, t0.c0 FROM v0 INNER JOIN t0 ON COALESCE(DISTINCT 'JI', 1.7976931348623157E308) GROUP BY t0.c1, t0.c2, t0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) AS REAL)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) AS REAL)))) UNION ALL SELECT ALL * FROM v0 WHERE (((CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) AS REAL)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT t0.c2 FROM v0, t0;
SELECT DISTINCT t0.c2 FROM v0, t0 WHERE (0x708cbafb) UNION SELECT DISTINCT t0.c2 FROM v0, t0 WHERE ((NOT (0x708cbafb))) UNION SELECT DISTINCT t0.c2 FROM v0, t0 WHERE (((0x708cbafb) ISNULL));
SELECT DISTINCT t0.c2 FROM v0, t0;
SELECT ALL v0.c0 FROM v0, t0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t0 WHERE (((((MAX(t0.c1, t0.c0, t0.c1, v0.c0))OR(v0.c0)))OR('wkfl'))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, t0 WHERE ((NOT (((((MAX(t0.c1, t0.c0, t0.c1, v0.c0))OR(v0.c0)))OR('wkfl'))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, t0 WHERE (((((((MAX(t0.c1, t0.c0, t0.c1, v0.c0))OR(v0.c0)))OR('wkfl'))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t0 GROUP BY v0.c0;
SELECT t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c2, v0.c0;
SELECT ALL t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c2, v0.c0 HAVING ((GROUP_CONCAT(v0.c0)) NOT BETWEEN (((SUM(NULL)) NOT BETWEEN (AVG('443137426')) AND (SUM(v0.c0)))) AND (SUM(SUM(COUNT(*))))) UNION ALL SELECT t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c2, v0.c0 HAVING (NOT (((GROUP_CONCAT(v0.c0)) NOT BETWEEN (((SUM(NULL)) NOT BETWEEN (AVG('443137426')) AND (SUM(v0.c0)))) AND (SUM(SUM(COUNT(*))))))) UNION ALL SELECT ALL t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c2, v0.c0 HAVING ((((GROUP_CONCAT(v0.c0)) NOT BETWEEN (((SUM(NULL)) NOT BETWEEN (AVG('443137426')) AND (SUM(v0.c0)))) AND (SUM(SUM(COUNT(*)))))) ISNULL);
SELECT ALL v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (((highlight(x'', v0.c0, t0.c2, t0.c2)))=((((t0.c0) NOT BETWEEN ('541226724') AND (v0.c0)))));
SELECT v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (((highlight(x'', v0.c0, t0.c2, t0.c2)))==((((t0.c0) NOT BETWEEN ('541226724') AND (v0.c0))))) WHERE (-1049279593) UNION ALL SELECT ALL v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (((highlight(x'', v0.c0, t0.c2, t0.c2)))=((((t0.c0) NOT BETWEEN ('541226724') AND (v0.c0))))) WHERE ((NOT (-1049279593))) UNION ALL SELECT v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (((highlight(x'', v0.c0, t0.c2, t0.c2)))=((((t0.c0) NOT BETWEEN ('541226724') AND (v0.c0))))) WHERE (((-1049279593) ISNULL));
SELECT ALL v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (((highlight(x'', v0.c0, t0.c2, t0.c2)))=((((t0.c0) NOT BETWEEN ('541226724') AND (v0.c0)))));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON CASE WHEN ((t0.c2)IS NOT(t0.c2)) THEN '272389040' END;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON CASE WHEN ((t0.c2)IS NOT(t0.c2)) THEN '272389040' END WHERE (CASE (NOT (t0.c0))  WHEN t0.c0 THEN CAST(0X25bf8fea AS BLOB) END) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON CASE WHEN ((t0.c2)IS NOT(t0.c2)) THEN '272389040' END WHERE ((NOT (CASE (NOT (t0.c0))  WHEN t0.c0 THEN CAST(0X25bf8fea AS BLOB) END))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON CASE WHEN ((t0.c2)IS NOT(t0.c2)) THEN '272389040' END WHERE (((CASE (NOT (t0.c0))  WHEN t0.c0 THEN CAST(0x25bf8fea AS BLOB) END) ISNULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON CASE WHEN ((t0.c2)IS NOT(t0.c2)) THEN '272389040' END;
SELECT t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2, t0.c0;
SELECT ALL t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 WHERE ((((((t0.c1) ISNULL)))>((v0.c0)))) GROUP BY t0.c1, v0.c0, t0.c2, t0.c0 UNION SELECT ALL t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 WHERE ((NOT ((((((t0.c1) ISNULL)))>((v0.c0)))))) GROUP BY t0.c1, v0.c0, t0.c2, t0.c0 UNION SELECT ALL t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 WHERE ((((((((t0.c1) ISNULL)))>((v0.c0)))) ISNULL)) GROUP BY t0.c1, v0.c0, t0.c2, t0.c0;
SELECT t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2, t0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c2, t0.c1, t0.c0, v0.c0 FROM v0, t0;
SELECT t0.c2, t0.c1, t0.c0, v0.c0 FROM v0, t0 WHERE ((((t0.c2 IN ()))%('-125932423'))) UNION ALL SELECT t0.c2, t0.c1, t0.c0, v0.c0 FROM v0, t0 WHERE ((NOT ((((t0.c2 IN ()))%('-125932423'))))) UNION ALL SELECT t0.c2, t0.c1, t0.c0, v0.c0 FROM v0, t0 WHERE ((((((t0.c2 IN ()))%('-125932423'))) ISNULL));
SELECT t0.c2, t0.c1, t0.c0, v0.c0 FROM v0, t0;
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((~ (t0.c0))) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 NOT INDEXED WHERE ((NOT ((~ (t0.c0))))) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((((~ (t0.c0))) ISNULL));
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM v0, t0 WHERE ((x'5de3' IN ())) GROUP BY t0.c1, t0.c2, t0.c0 UNION SELECT t0.c1, t0.c2, t0.c0 FROM v0, t0 WHERE ((NOT ((x'5de3' IN ())))) GROUP BY t0.c1, t0.c2, t0.c0 UNION SELECT ALL t0.c1, t0.c2, t0.c0 FROM v0, t0 WHERE ((((x'5de3' IN ())) ISNULL)) GROUP BY t0.c1, t0.c2, t0.c0;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(v0.c0)) BETWEEN ((MIN(v0.c0) IN ())) AND (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((SUM(v0.c0)) BETWEEN ((MIN(v0.c0) IN ())) AND (v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((SUM(v0.c0)) BETWEEN ((MIN(v0.c0) IN ())) AND (v0.c0))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(v0.c0)) BETWEEN ((MIN(v0.c0) IN ())) AND (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((SUM(v0.c0)) BETWEEN ((MIN(v0.c0) IN ())) AND (v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((SUM(v0.c0)) BETWEEN ((MIN(v0.c0) IN ())) AND (v0.c0))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM t0, v0;
SELECT * FROM t0, v0 WHERE (rtreenode((((t0.c0, v0.c0, t0.c2)) BETWEEN ((t0.c2, v0.c0, t0.c1)) AND ((t0.c1, t0.c1, t0.c1))), t0.c2 COLLATE RTRIM)) UNION ALL SELECT * FROM t0, v0 WHERE ((NOT (rtreenode((((t0.c0, v0.c0, t0.c2)) BETWEEN ((t0.c2, v0.c0, t0.c1)) AND ((t0.c1, t0.c1, t0.c1))), t0.c2 COLLATE RTRIM)))) UNION ALL SELECT ALL * FROM t0, v0 WHERE (((rtreenode((((t0.c0, v0.c0, t0.c2)) BETWEEN ((t0.c2, v0.c0, t0.c1)) AND ((t0.c1, t0.c1, t0.c1))), t0.c2 COLLATE RTRIM)) ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT v0.c0, t0.c1, t0.c2 FROM t0, v0;
SELECT DISTINCT v0.c0, t0.c1, t0.c2 FROM t0, v0 WHERE (t0.c1) UNION SELECT DISTINCT v0.c0, t0.c1, t0.c2 FROM t0, v0 WHERE ((NOT (t0.c1))) UNION SELECT DISTINCT v0.c0, t0.c1, t0.c2 FROM t0, v0 WHERE (((t0.c1) ISNULL));
SELECT DISTINCT v0.c0, t0.c1, t0.c2 FROM t0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))OR(v0.c0))) NOT BETWEEN (((v0.c0)||(v0.c0))) AND (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0)OR(v0.c0)))OR(v0.c0))) NOT BETWEEN (((v0.c0)||(v0.c0))) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))OR(v0.c0))) NOT BETWEEN (((v0.c0)||(v0.c0))) AND (v0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c1;
SELECT ALL v0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c1 HAVING MAX(LOWER(SUM(t0.c0))) UNION ALL SELECT v0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c1 HAVING (NOT (MAX(LOWER(SUM(t0.c0))))) UNION ALL SELECT ALL v0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c1 HAVING ((MAX(LOWER(SUM(t0.c0)))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c0))) NOT BETWEEN (v0.c0) AND (((v0.c0)<(v0.c0))))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((((v0.c0)AND(v0.c0)))AND(v0.c0))) NOT BETWEEN (v0.c0) AND (((v0.c0)<(v0.c0))))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((((v0.c0)AND(v0.c0)))AND(v0.c0))) NOT BETWEEN (v0.c0) AND (((v0.c0)<(v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((- ('443137426'))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((- ('443137426'))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((- ('443137426'))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0 WHERE (CASE ((NULL)<(0xffffffffc8e45b61))  WHEN (+ (x'')) THEN (t0.c2 IN (t0.c0, t0.c1)) WHEN (~ (t0.c0)) THEN ((x'904f') NOTNULL) WHEN (t0.c1 IN (t0.c0)) THEN (~ (t0.c2)) END) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0 WHERE ((NOT (CASE ((NULL)<(0xffffffffc8e45b61))  WHEN (+ (x'')) THEN (t0.c2 IN (t0.c0, t0.c1)) WHEN (~ (t0.c0)) THEN ((x'904f') NOTNULL) WHEN (t0.c1 IN (t0.c0)) THEN (~ (t0.c2)) END))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0 WHERE (((CASE ((NULL)<(0xffffffffc8e45b61))  WHEN (+ (x'')) THEN (t0.c2 IN (t0.c0, t0.c1)) WHEN (~ (t0.c0)) THEN ((x'904f') NOTNULL) WHEN (t0.c1 IN (t0.c0)) THEN (~ (t0.c2)) END) ISNULL)) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT t0.c1, t0.c0 FROM v0, t0;
SELECT ALL t0.c1, t0.c0 FROM v0, t0 WHERE (((NULL)*(t0.c2)) COLLATE RTRIM) UNION ALL SELECT ALL t0.c1, t0.c0 FROM v0, t0 WHERE ((NOT (((NULL)*(t0.c2)) COLLATE RTRIM))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM v0, t0 WHERE (((((NULL)*(t0.c2)) COLLATE RTRIM) ISNULL));
SELECT t0.c1, t0.c0 FROM v0, t0;
SELECT DISTINCT t0.c1, t0.c0, v0.c0 FROM t0, v0;
SELECT DISTINCT t0.c1, t0.c0, v0.c0 FROM t0, v0 WHERE ((~ (((v0.c0) IS FALSE)))) UNION SELECT DISTINCT t0.c1, t0.c0, v0.c0 FROM t0, v0 WHERE ((NOT ((~ (((v0.c0) IS FALSE)))))) UNION SELECT DISTINCT t0.c1, t0.c0, v0.c0 FROM t0, v0 WHERE ((((~ (((v0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT t0.c1, t0.c0, v0.c0 FROM t0, v0;
SELECT ALL t0.c1, t0.c0 FROM t0, v0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0, v0 WHERE (LOWER(CASE v0.c0  WHEN t0.c1 THEN v0.c0 ELSE t0.c0 END)) GROUP BY t0.c1, t0.c0 UNION SELECT ALL t0.c1, t0.c0 FROM t0, v0 WHERE ((NOT (LOWER(CASE v0.c0  WHEN t0.c1 THEN v0.c0 ELSE t0.c0 END)))) GROUP BY t0.c1, t0.c0 UNION SELECT t0.c1, t0.c0 FROM t0, v0 WHERE (((LOWER(CASE v0.c0  WHEN t0.c1 THEN v0.c0 ELSE t0.c0 END)) ISNULL)) GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0, v0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING ((CAST(t0.c2 AS NUMERIC))<=(GROUP_CONCAT(MIN(t0.c1)))) UNION ALL SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING (NOT (((CAST(t0.c2 AS NUMERIC))<=(GROUP_CONCAT(MIN(t0.c1)))))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING ((((CAST(t0.c2 AS NUMERIC))<=(GROUP_CONCAT(MIN(t0.c1))))) ISNULL);
SELECT t0.c2, t0.c1 FROM t0;
SELECT t0.c2, t0.c1 FROM t0 WHERE (json_type(((t0.c1) ISNULL))) UNION ALL SELECT t0.c2, t0.c1 FROM t0 NOT INDEXED WHERE ((NOT (json_type(((t0.c1) ISNULL))))) UNION ALL SELECT ALL t0.c2, t0.c1 FROM t0 WHERE (((json_type(((t0.c1) ISNULL))) ISNULL));
SELECT t0.c2, t0.c1 FROM t0;
SELECT DISTINCT * FROM v0 INNER JOIN t0 ON CASE t0.c2  WHEN t0.c1 THEN t0.c0 WHEN v0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END COLLATE BINARY COLLATE NOCASE;
SELECT DISTINCT * FROM v0 INNER JOIN t0 ON CASE t0.c2  WHEN t0.c1 THEN t0.c0 WHEN v0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END COLLATE BINARY COLLATE NOCASE WHERE (x'') UNION SELECT DISTINCT * FROM v0 INNER JOIN t0 ON CASE t0.c2  WHEN t0.c1 THEN t0.c0 WHEN v0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END COLLATE BINARY COLLATE NOCASE WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM v0 INNER JOIN t0 ON CASE t0.c2  WHEN t0.c1 THEN t0.c0 WHEN v0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END COLLATE BINARY COLLATE NOCASE WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM v0 INNER JOIN t0 ON CASE t0.c2  WHEN t0.c1 THEN t0.c0 WHEN v0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END COLLATE BINARY COLLATE NOCASE;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((('-900207643') BETWEEN (TIME(v0.c0, v0.c0, v0.c0)) AND ((v0.c0 IN (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((('-900207643') BETWEEN (TIME(v0.c0, v0.c0, v0.c0)) AND ((v0.c0 IN (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((('-900207643') BETWEEN (TIME(v0.c0, v0.c0, v0.c0)) AND ((v0.c0 IN (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c1, t0.c2, v0.c0, t0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c2, v0.c0, t0.c0;
SELECT t0.c1, t0.c2, v0.c0, t0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c2, v0.c0, t0.c0 HAVING ((CASE WHEN MAX(v0.c0) THEN t0.c1 ELSE AVG(COUNT(SUM(COUNT(*)))) END) NOTNULL) UNION ALL SELECT t0.c1, t0.c2, v0.c0, t0.c0 FROM v0 NOT INDEXED, t0 GROUP BY t0.c1, t0.c2, v0.c0, t0.c0 HAVING (NOT (((CASE WHEN MAX(v0.c0) THEN t0.c1 ELSE AVG(COUNT(SUM(COUNT(*)))) END) NOTNULL))) UNION ALL SELECT ALL t0.c1, t0.c2, v0.c0, t0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c2, v0.c0, t0.c0 HAVING ((((CASE WHEN MAX(v0.c0) THEN t0.c1 ELSE AVG(COUNT(SUM(COUNT(*)))) END) NOTNULL)) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (CASE WHEN (~ (t0.c0)) THEN CAST(t0.c2 AS INTEGER) ELSE ((t0.c0)GLOB(t0.c0)) END) UNION ALL SELECT * FROM t0 WHERE ((NOT (CASE WHEN (~ (t0.c0)) THEN CAST(t0.c2 AS INTEGER) ELSE ((t0.c0)GLOB(t0.c0)) END))) UNION ALL SELECT * FROM t0 WHERE (((CASE WHEN (~ (t0.c0)) THEN CAST(t0.c2 AS INTEGER) ELSE ((t0.c0)GLOB(t0.c0)) END) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM v0, t0 INDEXED BY i85;
SELECT DISTINCT * FROM v0, t0 INDEXED BY i85 WHERE (CAST(((v0.c0)||(t0.c0)) AS BLOB)) UNION SELECT DISTINCT * FROM v0, t0 INDEXED BY i85 WHERE ((NOT (CAST(((v0.c0)||(t0.c0)) AS BLOB)))) UNION SELECT DISTINCT * FROM v0, t0 INDEXED BY i85 WHERE (((CAST(((v0.c0)||(t0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM v0, t0 INDEXED BY i85;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (LOWER(DISTINCT CAST(v0.c0 AS TEXT))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (LOWER(DISTINCT CAST(v0.c0 AS TEXT))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((LOWER(DISTINCT CAST(v0.c0 AS TEXT))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, t0.c1, t0.c2, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON t0.c1 GROUP BY v0.c0, t0.c1, t0.c2, t0.c0;
SELECT v0.c0, t0.c1, t0.c2, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON t0.c1 GROUP BY v0.c0, t0.c1, t0.c2, t0.c0 HAVING x'04fc' UNION ALL SELECT ALL v0.c0, t0.c1, t0.c2, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON t0.c1 GROUP BY v0.c0, t0.c1, t0.c2, t0.c0 HAVING (NOT (x'04fc')) UNION ALL SELECT v0.c0, t0.c1, t0.c2, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON t0.c1 GROUP BY v0.c0, t0.c1, t0.c2, t0.c0 HAVING ((x'04fc') ISNULL);
SELECT ALL v0.c0, t0.c1, t0.c2, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON t0.c1 GROUP BY v0.c0, t0.c1, t0.c2, t0.c0;
SELECT v0.c0, t0.c1, t0.c2, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON t0.c1 GROUP BY v0.c0, t0.c1, t0.c2, t0.c0 HAVING x'04fc' UNION ALL SELECT ALL v0.c0, t0.c1, t0.c2, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON t0.c1 GROUP BY v0.c0, t0.c1, t0.c2, t0.c0 HAVING (NOT (x'04fc')) UNION ALL SELECT v0.c0, t0.c1, t0.c2, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON t0.c1 GROUP BY v0.c0, t0.c1, t0.c2, t0.c0 HAVING ((x'04fc') ISNULL);
SELECT ALL v0.c0, t0.c1, t0.c2, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON t0.c1 GROUP BY v0.c0, t0.c1, t0.c2, t0.c0;
SELECT ALL v0.c0, t0.c1, t0.c2 FROM t0, v0;
SELECT ALL v0.c0, t0.c1, t0.c2 FROM t0, v0 WHERE (((CASE v0.c0  WHEN NULL THEN 0.6093980988954663 WHEN v0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END) NOT BETWEEN (((((t0.c0)AND(v0.c0)))OR(t0.c0))) AND (v0.c0))) UNION ALL SELECT ALL v0.c0, t0.c1, t0.c2 FROM t0, v0 WHERE ((NOT (((CASE v0.c0  WHEN NULL THEN 0.6093980988954663 WHEN v0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END) NOT BETWEEN (((((t0.c0)AND(v0.c0)))OR(t0.c0))) AND (v0.c0))))) UNION ALL SELECT v0.c0, t0.c1, t0.c2 FROM t0, v0 WHERE (((((CASE v0.c0  WHEN NULL THEN 0.6093980988954663 WHEN v0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END) NOT BETWEEN (((((t0.c0)AND(v0.c0)))OR(t0.c0))) AND (v0.c0))) ISNULL));
SELECT ALL v0.c0, t0.c1, t0.c2 FROM t0, v0;
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE (CAST(UNLIKELY(DISTINCT t0.c2) AS TEXT)) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((NOT (CAST(UNLIKELY(DISTINCT t0.c2) AS TEXT)))) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((CAST(UNLIKELY(DISTINCT t0.c2) AS TEXT)) ISNULL));
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM t0 WHERE (CASE WHEN ((t0.c2)<=(-1.501181105E9)) THEN (- (t0.c0)) END) GROUP BY t0.c2, t0.c1 UNION SELECT t0.c2, t0.c1 FROM t0 WHERE ((NOT (CASE WHEN ((t0.c2)<=(-1.501181105E9)) THEN (- (t0.c0)) END))) GROUP BY t0.c2, t0.c1 UNION SELECT ALL t0.c2, t0.c1 FROM t0 WHERE (((CASE WHEN ((t0.c2)<=(-1.501181105E9)) THEN (- (t0.c0)) END) ISNULL)) GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT t0.c0, t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c0, t0.c1, v0.c0;
SELECT ALL t0.c0, t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c0, t0.c1, v0.c0 HAVING (TOTAL(COUNT(v0.c0)) IN ()) UNION ALL SELECT t0.c0, t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c0, t0.c1, v0.c0 HAVING (NOT ((TOTAL(COUNT(v0.c0)) IN ()))) UNION ALL SELECT t0.c0, t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c0, t0.c1, v0.c0 HAVING (((TOTAL(COUNT(v0.c0)) IN ())) ISNULL);
SELECT t0.c0, t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c0, t0.c1, v0.c0;
SELECT ALL t0.c0, t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c0, t0.c1, v0.c0 HAVING (TOTAL(COUNT(v0.c0)) IN ()) UNION ALL SELECT t0.c0, t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c0, t0.c1, v0.c0 HAVING (NOT ((TOTAL(COUNT(v0.c0)) IN ()))) UNION ALL SELECT t0.c0, t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c0, t0.c1, v0.c0 HAVING (((TOTAL(COUNT(v0.c0)) IN ())) ISNULL);
SELECT t0.c0, t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c0, t0.c1, v0.c0;
SELECT ALL t0.c2, t0.c1 FROM t0;
SELECT t0.c2, t0.c1 FROM t0 WHERE (((((NULL) IS FALSE)) NOT BETWEEN (((t0.c0)||('2019373866'))) AND (((t0.c2) ISNULL)))) UNION ALL SELECT t0.c2, t0.c1 FROM t0 WHERE ((NOT (((((NULL) IS FALSE)) NOT BETWEEN (((t0.c0)||('2019373866'))) AND (((t0.c2) ISNULL)))))) UNION ALL SELECT t0.c2, t0.c1 FROM t0 WHERE (((((((NULL) IS FALSE)) NOT BETWEEN (((t0.c0)||('2019373866'))) AND (((t0.c2) ISNULL)))) ISNULL));
SELECT ALL t0.c2, t0.c1 FROM t0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (CAST(((t0.c1) IS TRUE) AS BLOB)) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (CAST(((t0.c1) IS TRUE) AS BLOB)))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((CAST(((t0.c1) IS TRUE) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT v0.c0 FROM t0 FULL OUTER JOIN v0 ON LOWER(CAST(t0.c2 AS BLOB)) GROUP BY v0.c0;
SELECT v0.c0 FROM t0 FULL OUTER JOIN v0 ON LOWER(CAST(t0.c2 AS BLOB)) WHERE (((((t0.c1) BETWEEN (t0.c2) AND (t0.c0)))IS(NULL))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t0 FULL OUTER JOIN v0 ON LOWER(CAST(t0.c2 AS BLOB)) WHERE ((NOT (((((t0.c1) BETWEEN (t0.c2) AND (t0.c0)))IS(NULL))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t0 FULL OUTER JOIN v0 ON LOWER(CAST(t0.c2 AS BLOB)) WHERE (((((((t0.c1) BETWEEN (t0.c2) AND (t0.c0)))IS(NULL))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM t0 FULL OUTER JOIN v0 ON LOWER(CAST(t0.c2 AS BLOB)) GROUP BY v0.c0;
SELECT ALL t0.c1 FROM t0, v0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0, v0 GROUP BY t0.c1 HAVING ((GROUP_CONCAT(x'')) NOT BETWEEN (TRIM(t0.c2)) AND (((SUM(v0.c0))IS(t0.c2)))) UNION ALL SELECT t0.c1 FROM t0, v0 GROUP BY t0.c1 HAVING (NOT (((GROUP_CONCAT(x'')) NOT BETWEEN (TRIM(t0.c2)) AND (((SUM(v0.c0))IS(t0.c2)))))) UNION ALL SELECT ALL t0.c1 FROM t0, v0 GROUP BY t0.c1 HAVING ((((GROUP_CONCAT(x'')) NOT BETWEEN (TRIM(t0.c2)) AND (((SUM(v0.c0))IS(t0.c2))))) ISNULL);
SELECT ALL t0.c1 FROM t0, v0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0, v0 GROUP BY t0.c1 HAVING ((GROUP_CONCAT(x'')) NOT BETWEEN (TRIM(t0.c2)) AND (((SUM(v0.c0))IS(t0.c2)))) UNION ALL SELECT t0.c1 FROM t0, v0 GROUP BY t0.c1 HAVING (NOT (((GROUP_CONCAT(x'')) NOT BETWEEN (TRIM(t0.c2)) AND (((SUM(v0.c0))IS(t0.c2)))))) UNION ALL SELECT ALL t0.c1 FROM t0, v0 GROUP BY t0.c1 HAVING ((((GROUP_CONCAT(x'')) NOT BETWEEN (TRIM(t0.c2)) AND (((SUM(v0.c0))IS(t0.c2))))) ISNULL);
SELECT ALL t0.c1 FROM t0, v0 GROUP BY t0.c1;
SELECT * FROM t0, v0;
SELECT * FROM t0, v0 WHERE (t0.c0) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT (t0.c0))) UNION ALL SELECT * FROM t0, v0 WHERE (((t0.c0) ISNULL));
SELECT * FROM t0, v0;
SELECT DISTINCT t0.c1, v0.c0, t0.c2 FROM t0, v0;
SELECT DISTINCT t0.c1, v0.c0, t0.c2 FROM t0, v0 WHERE (LOWER(((((((((t0.c0)AND(v0.c0)))OR(t0.c0)))AND(t0.c1)))AND(1.553156766E9)))) UNION SELECT DISTINCT t0.c1, v0.c0, t0.c2 FROM t0, v0 WHERE ((NOT (LOWER(((((((((t0.c0)AND(v0.c0)))OR(t0.c0)))AND(t0.c1)))AND(1.553156766E9)))))) UNION SELECT DISTINCT t0.c1, v0.c0, t0.c2 FROM t0, v0 WHERE (((LOWER(((((((((t0.c0)AND(v0.c0)))OR(t0.c0)))AND(t0.c1)))AND(1.553156766E9)))) ISNULL));
SELECT DISTINCT t0.c1, v0.c0, t0.c2 FROM t0, v0;
SELECT t0.c2, t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, v0.c0;
SELECT ALL t0.c2, t0.c1, v0.c0 FROM v0, t0 WHERE (v0.c0) GROUP BY t0.c2, t0.c1, v0.c0 UNION SELECT ALL t0.c2, t0.c1, v0.c0 FROM v0, t0 WHERE ((NOT (v0.c0))) GROUP BY t0.c2, t0.c1, v0.c0 UNION SELECT t0.c2, t0.c1, v0.c0 FROM v0, t0 WHERE (((v0.c0) ISNULL)) GROUP BY t0.c2, t0.c1, v0.c0;
SELECT t0.c2, t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, v0.c0;
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING (+ (((v0.c0)>=(TOTAL(TOTAL(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING (NOT ((+ (((v0.c0)>=(TOTAL(TOTAL(v0.c0)))))))) UNION ALL SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING (((+ (((v0.c0)>=(TOTAL(TOTAL(v0.c0))))))) ISNULL);
SELECT * FROM v0 CROSS JOIN t0 ON ((0x100a9890)+(t0.c1)) COLLATE NOCASE;
SELECT ALL * FROM v0 CROSS JOIN t0 ON ((0x100a9890)+(t0.c1)) COLLATE NOCASE WHERE (CASE (v0.c0 IN ())  WHEN (((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN ((t0.c1)<(x'9937')) ELSE json_object('0.8411567213159639', t0.c0, t0.c1, t0.c2) END) UNION ALL SELECT ALL * FROM v0 CROSS JOIN t0 ON ((0X100a9890)+(t0.c1)) COLLATE NOCASE WHERE ((NOT (CASE (v0.c0 IN ())  WHEN (((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN ((t0.c1)<(x'9937')) ELSE json_object('0.8411567213159639', t0.c0, t0.c1, t0.c2) END))) UNION ALL SELECT * FROM v0 CROSS JOIN t0 ON ((0x100a9890)+(t0.c1)) COLLATE NOCASE WHERE (((CASE (v0.c0 IN ())  WHEN (((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN ((t0.c1)<(x'9937')) ELSE json_object('0.8411567213159639', t0.c0, t0.c1, t0.c2) END) ISNULL));
SELECT * FROM v0 CROSS JOIN t0 ON ((0x100a9890)+(t0.c1)) COLLATE NOCASE;
SELECT DISTINCT t0.c0, t0.c1, v0.c0, t0.c2 FROM v0, t0;
SELECT DISTINCT t0.c0, t0.c1, v0.c0, t0.c2 FROM v0, t0 WHERE ((+ (((t0.c1)%(x'a0d3'))))) UNION SELECT DISTINCT t0.c0, t0.c1, v0.c0, t0.c2 FROM v0, t0 WHERE ((NOT ((+ (((t0.c1)%(x'a0d3'))))))) UNION SELECT DISTINCT t0.c0, t0.c1, v0.c0, t0.c2 FROM v0, t0 WHERE ((((+ (((t0.c1)%(x'a0d3'))))) ISNULL));
SELECT DISTINCT t0.c0, t0.c1, v0.c0, t0.c2 FROM v0, t0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((((NOT (v0.c0)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND ('669455945')))))OR('1676456853'))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((((NOT (v0.c0)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND ('669455945')))))OR('1676456853'))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((((NOT (v0.c0)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND ('669455945')))))OR('1676456853'))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (((MAX(SUM(t0.c2)) IN ()))|(CASE t0.c0  WHEN MAX(SUM(MAX(COUNT(0.8588896040637712)))) THEN AVG(AVG(t0.c0)) ELSE TOTAL(t0.c2) END)) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT ((((MAX(SUM(t0.c2)) IN ()))|(CASE t0.c0  WHEN MAX(SUM(MAX(COUNT(0.8588896040637712)))) THEN AVG(AVG(t0.c0)) ELSE TOTAL(t0.c2) END)))) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (((((MAX(SUM(t0.c2)) IN ()))|(CASE t0.c0  WHEN MAX(SUM(MAX(COUNT(0.8588896040637712)))) THEN AVG(AVG(t0.c0)) ELSE TOTAL(t0.c2) END))) ISNULL);
SELECT ALL MAX(CAST((- (v0.c0)) AS TEXT)) FROM t0, v0;
SELECT t0.c2, t0.c1, t0.c0 FROM v0, t0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM v0, t0 WHERE (CAST(((v0.c0) NOT NULL) AS TEXT)) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM v0, t0 WHERE ((NOT (CAST(((v0.c0) NOT NULL) AS TEXT)))) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM v0, t0 WHERE (((CAST(((v0.c0) NOT NULL) AS TEXT)) ISNULL));
SELECT t0.c2, t0.c1, t0.c0 FROM v0, t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((v0.c0 COLLATE BINARY IN ())) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((v0.c0 COLLATE BINARY IN ())))) UNION SELECT DISTINCT * FROM v0 WHERE ((((v0.c0 COLLATE BINARY IN ())) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t0.c1 FROM v0 RIGHT OUTER JOIN t0 ON ((CAST(t0.c0 AS TEXT)) ISNULL) GROUP BY t0.c1;
SELECT t0.c1 FROM v0 RIGHT OUTER JOIN t0 ON ((CAST(t0.c0 AS TEXT)) ISNULL) WHERE (((((t0.c0)>>(t0.c1))) IS TRUE)) GROUP BY t0.c1 UNION SELECT t0.c1 FROM v0 RIGHT OUTER JOIN t0 ON ((CAST(t0.c0 AS TEXT)) ISNULL) WHERE ((NOT (((((t0.c0)>>(t0.c1))) IS TRUE)))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM v0 RIGHT OUTER JOIN t0 ON ((CAST(t0.c0 AS TEXT)) ISNULL) WHERE (((((((t0.c0)>>(t0.c1))) IS TRUE)) ISNULL)) GROUP BY t0.c1;
SELECT t0.c1 FROM v0 RIGHT OUTER JOIN t0 ON ((CAST(t0.c0 AS TEXT)) ISNULL) GROUP BY t0.c1;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING GROUP_CONCAT(t0.c0) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (GROUP_CONCAT(t0.c0))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((GROUP_CONCAT(t0.c0)) ISNULL);
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING GROUP_CONCAT(t0.c0) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (GROUP_CONCAT(t0.c0))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((GROUP_CONCAT(t0.c0)) ISNULL);
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (0.2833639446400903) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (0.2833639446400903))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((0.2833639446400903) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE ((((- (t0.c2))) IS TRUE)) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT ((((- (t0.c2))) IS TRUE)))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((((((- (t0.c2))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT v0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c1;
SELECT v0.c0, t0.c1 FROM t0, v0 WHERE ((0x3c3b1bd IN ())) GROUP BY v0.c0, t0.c1 UNION SELECT ALL v0.c0, t0.c1 FROM t0, v0 WHERE ((NOT ((0X3c3b1bd IN ())))) GROUP BY v0.c0, t0.c1 UNION SELECT ALL v0.c0, t0.c1 FROM t0, v0 WHERE ((((0X3c3b1bd IN ())) ISNULL)) GROUP BY v0.c0, t0.c1;
SELECT v0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(((MIN(MIN(COUNT(*))))<>(GROUP_CONCAT(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(((MIN(MIN(COUNT(*))))<>(GROUP_CONCAT(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(((MIN(MIN(COUNT(*))))!=(GROUP_CONCAT(v0.c0))))) ISNULL);
SELECT * FROM v0, t0;
SELECT * FROM v0, t0 WHERE ((((t0.c2) BETWEEN (t0.c0) AND (t0.c2)) IN ((t0.c0 IN ()), ((t0.c2) NOT BETWEEN (t0.c1) AND (v0.c0))))) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((NOT ((((t0.c2) BETWEEN (t0.c0) AND (t0.c2)) IN ((t0.c0 IN ()), ((t0.c2) NOT BETWEEN (t0.c1) AND (v0.c0))))))) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((((((t0.c2) BETWEEN (t0.c0) AND (t0.c2)) IN ((t0.c0 IN ()), ((t0.c2) NOT BETWEEN (t0.c1) AND (v0.c0))))) ISNULL));
SELECT * FROM v0, t0;
SELECT DISTINCT t0.c2, t0.c1, t0.c0, v0.c0 FROM t0, v0;
SELECT DISTINCT t0.c2, t0.c1, t0.c0, v0.c0 FROM t0, v0 WHERE (NULL COLLATE BINARY) UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0, v0.c0 FROM t0, v0 WHERE ((NOT (NULL COLLATE BINARY))) UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0, v0.c0 FROM t0, v0 WHERE (((NULL COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c2, t0.c1, t0.c0, v0.c0 FROM t0, v0;
SELECT ALL v0.c0, t0.c2, t0.c1 FROM v0 CROSS JOIN t0 ON t0.c2 GROUP BY v0.c0, t0.c2, t0.c1;
SELECT ALL v0.c0, t0.c2, t0.c1 FROM v0 CROSS JOIN t0 ON t0.c2 WHERE (((t0.c2) ISNULL) COLLATE BINARY) GROUP BY v0.c0, t0.c2, t0.c1 UNION SELECT ALL v0.c0, t0.c2, t0.c1 FROM v0 CROSS JOIN t0 ON t0.c2 WHERE ((NOT (((t0.c2) ISNULL) COLLATE BINARY))) GROUP BY v0.c0, t0.c2, t0.c1 UNION SELECT v0.c0, t0.c2, t0.c1 FROM v0 CROSS JOIN t0 ON t0.c2 WHERE (((((t0.c2) ISNULL) COLLATE BINARY) ISNULL)) GROUP BY v0.c0, t0.c2, t0.c1;
SELECT ALL v0.c0, t0.c2, t0.c1 FROM v0 CROSS JOIN t0 ON t0.c2 GROUP BY v0.c0, t0.c2, t0.c1;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING MAX(MAX(t0.c1)) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING (NOT (MAX(MAX(t0.c1)))) UNION ALL SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING ((MAX(MAX(t0.c1))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((((v0.c0) ISNULL)) NOT NULL)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((v0.c0) ISNULL)) NOT NULL)))) UNION ALL SELECT * FROM v0 WHERE (((((((v0.c0) ISNULL)) NOT NULL)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN t0 ON CASE t0.c1 COLLATE BINARY  WHEN ((t0.c2)<=(v0.c0)) THEN t0.c0 END;
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN t0 ON CASE t0.c1 COLLATE BINARY  WHEN ((t0.c2)<=(v0.c0)) THEN t0.c0 END WHERE (((((((t0.c1) IS FALSE))AND(COALESCE(t0.c0, v0.c0))))OR(((((t0.c1)OR(t0.c1)))OR(t0.c1))))) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN t0 ON CASE t0.c1 COLLATE BINARY  WHEN ((t0.c2)<=(v0.c0)) THEN t0.c0 END WHERE ((NOT (((((((t0.c1) IS FALSE))AND(COALESCE(t0.c0, v0.c0))))OR(((((t0.c1)OR(t0.c1)))OR(t0.c1))))))) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN t0 ON CASE t0.c1 COLLATE BINARY  WHEN ((t0.c2)<=(v0.c0)) THEN t0.c0 END WHERE (((((((((t0.c1) IS FALSE))AND(COALESCE(t0.c0, v0.c0))))OR(((((t0.c1)OR(t0.c1)))OR(t0.c1))))) ISNULL));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN t0 ON CASE t0.c1 COLLATE BINARY  WHEN ((t0.c2)<=(v0.c0)) THEN t0.c0 END;
SELECT ALL t0.c0, t0.c1, v0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON ('-2056590896' IN ()) GROUP BY t0.c0, t0.c1, v0.c0, t0.c2;
SELECT t0.c0, t0.c1, v0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON ('-2056590896' IN ()) WHERE (CASE CASE t0.c2  WHEN '388138840' THEN v0.c0 WHEN '3(,)' THEN t0.c0 WHEN v0.c0 THEN t0.c2 END  WHEN '-227042823' THEN (t0.c1 IN (v0.c0)) ELSE ((t0.c1)==(t0.c0)) END) GROUP BY t0.c0, t0.c1, v0.c0, t0.c2 UNION SELECT t0.c0, t0.c1, v0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON ('-2056590896' IN ()) WHERE ((NOT (CASE CASE t0.c2  WHEN '388138840' THEN v0.c0 WHEN '3(,)' THEN t0.c0 WHEN v0.c0 THEN t0.c2 END  WHEN '-227042823' THEN (t0.c1 IN (v0.c0)) ELSE ((t0.c1)=(t0.c0)) END))) GROUP BY t0.c0, t0.c1, v0.c0, t0.c2 UNION SELECT ALL t0.c0, t0.c1, v0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON ('-2056590896' IN ()) WHERE (((CASE CASE t0.c2  WHEN '388138840' THEN v0.c0 WHEN '3(,)' THEN t0.c0 WHEN v0.c0 THEN t0.c2 END  WHEN '-227042823' THEN (t0.c1 IN (v0.c0)) ELSE ((t0.c1)==(t0.c0)) END) ISNULL)) GROUP BY t0.c0, t0.c1, v0.c0, t0.c2;
SELECT ALL t0.c0, t0.c1, v0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON ('-2056590896' IN ()) GROUP BY t0.c0, t0.c1, v0.c0, t0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL MIN((((t0.c1)|('_~')) IN ((t0.c1 IN ())))) FROM t0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((v0.c0 COLLATE RTRIM)GLOB(v0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((v0.c0 COLLATE RTRIM)GLOB(v0.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)GLOB(v0.c0 COLLATE NOCASE))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE WHEN v0.c0 THEN LOWER(v0.c0) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN v0.c0 THEN LOWER(v0.c0) END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 THEN LOWER(v0.c0) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL t0.c1 FROM t0, v0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0, v0 WHERE (((t0.c2) NOTNULL) COLLATE NOCASE) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t0, v0 WHERE ((NOT (((t0.c2) NOTNULL) COLLATE NOCASE))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t0, v0 WHERE (((((t0.c2) NOTNULL) COLLATE NOCASE) ISNULL)) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0, v0 GROUP BY t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 INNER JOIN v0 ON (((((t0.c2, v0.c0, v0.c0))<>((t0.c0, t0.c0, NULL)))) IS TRUE) GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 INNER JOIN v0 ON (((((t0.c2, v0.c0, v0.c0))!=((t0.c0, t0.c0, NULL)))) IS TRUE) GROUP BY t0.c2, t0.c0, t0.c1 HAVING (~ (CASE v0.c0  WHEN 1995298014 THEN t0.c0 ELSE t0.c0 END)) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 INNER JOIN v0 ON (((((t0.c2, v0.c0, v0.c0))!=((t0.c0, t0.c0, NULL)))) IS TRUE) GROUP BY t0.c2, t0.c0, t0.c1 HAVING (NOT ((~ (CASE v0.c0  WHEN 1995298014 THEN t0.c0 ELSE t0.c0 END)))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 INNER JOIN v0 ON (((((t0.c2, v0.c0, v0.c0))<>((t0.c0, t0.c0, NULL)))) IS TRUE) GROUP BY t0.c2, t0.c0, t0.c1 HAVING (((~ (CASE v0.c0  WHEN 1995298014 THEN t0.c0 ELSE t0.c0 END))) ISNULL);
SELECT t0.c2, t0.c0, t0.c1 FROM t0 INNER JOIN v0 ON (((((t0.c2, v0.c0, v0.c0))<>((t0.c0, t0.c0, NULL)))) IS TRUE) GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 INNER JOIN v0 ON (((((t0.c2, v0.c0, v0.c0))!=((t0.c0, t0.c0, NULL)))) IS TRUE) GROUP BY t0.c2, t0.c0, t0.c1 HAVING (~ (CASE v0.c0  WHEN 1995298014 THEN t0.c0 ELSE t0.c0 END)) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 INNER JOIN v0 ON (((((t0.c2, v0.c0, v0.c0))!=((t0.c0, t0.c0, NULL)))) IS TRUE) GROUP BY t0.c2, t0.c0, t0.c1 HAVING (NOT ((~ (CASE v0.c0  WHEN 1995298014 THEN t0.c0 ELSE t0.c0 END)))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 INNER JOIN v0 ON (((((t0.c2, v0.c0, v0.c0))<>((t0.c0, t0.c0, NULL)))) IS TRUE) GROUP BY t0.c2, t0.c0, t0.c1 HAVING (((~ (CASE v0.c0  WHEN 1995298014 THEN t0.c0 ELSE t0.c0 END))) ISNULL);
SELECT t0.c2, t0.c0, t0.c1 FROM t0 INNER JOIN v0 ON (((((t0.c2, v0.c0, v0.c0))<>((t0.c0, t0.c0, NULL)))) IS TRUE) GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN (((x'')+(v0.c0))) AND ((v0.c0 IN (v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN (((x'')+(v0.c0))) AND ((v0.c0 IN (v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN (((x'')+(v0.c0))) AND ((v0.c0 IN (v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0 IN ()))-(((v0.c0)!=(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 IN ()))-(((v0.c0)<>(v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((v0.c0 IN ()))-(((v0.c0)<>(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c1, t0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING CASE WHEN (MAX(t0.c1) IN (t0.c1)) THEN CASE v0.c0  WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c2 THEN AVG(GROUP_CONCAT(v0.c0)) ELSE SUM(MIN(MIN(GROUP_CONCAT(t0.c1)))) END END UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (NOT (CASE WHEN (MAX(t0.c1) IN (t0.c1)) THEN CASE v0.c0  WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c2 THEN AVG(GROUP_CONCAT(v0.c0)) ELSE SUM(MIN(MIN(GROUP_CONCAT(t0.c1)))) END END)) UNION ALL SELECT t0.c1, t0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING ((CASE WHEN (MAX(t0.c1) IN (t0.c1)) THEN CASE v0.c0  WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c2 THEN AVG(GROUP_CONCAT(v0.c0)) ELSE SUM(MIN(MIN(GROUP_CONCAT(t0.c1)))) END END) ISNULL);
SELECT ALL TOTAL(((t0.c0)AND(((t0.c1) BETWEEN (v0.c0) AND (t0.c1))))) FROM t0, v0;
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON ((((t0.c2)IS(t0.c2)))&(((t0.c0)IS(t0.c1))));
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON ((((t0.c2)IS(t0.c2)))&(((t0.c0)IS(t0.c1)))) WHERE ((('-900207643')LIKE(t0.c1))) UNION ALL SELECT * FROM v0 RIGHT OUTER JOIN t0 ON ((((t0.c2)IS(t0.c2)))&(((t0.c0)IS(t0.c1)))) WHERE ((NOT ((('-900207643')LIKE(t0.c1))))) UNION ALL SELECT * FROM v0 RIGHT OUTER JOIN t0 ON ((((t0.c2)IS(t0.c2)))&(((t0.c0)IS(t0.c1)))) WHERE ((((('-900207643')LIKE(t0.c1))) ISNULL));
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON ((((t0.c2)IS(t0.c2)))&(((t0.c0)IS(t0.c1))));
SELECT DISTINCT t0.c1, t0.c0, t0.c2, v0.c0 FROM t0 INNER JOIN v0 ON (NOT (((t0.c1)|(t0.c0))));
SELECT DISTINCT t0.c1, t0.c0, t0.c2, v0.c0 FROM t0 INNER JOIN v0 ON (NOT (((t0.c1)|(t0.c0)))) WHERE (TRIM(TYPEOF(x''))) UNION SELECT DISTINCT t0.c1, t0.c0, t0.c2, v0.c0 FROM t0 INNER JOIN v0 ON (NOT (((t0.c1)|(t0.c0)))) WHERE ((NOT (TRIM(TYPEOF(x''))))) UNION SELECT DISTINCT t0.c1, t0.c0, t0.c2, v0.c0 FROM t0 INNER JOIN v0 ON (NOT (((t0.c1)|(t0.c0)))) WHERE (((TRIM(TYPEOF(x''))) ISNULL));
SELECT DISTINCT t0.c1, t0.c0, t0.c2, v0.c0 FROM t0 INNER JOIN v0 ON (NOT (((t0.c1)|(t0.c0))));
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT t0.c0, t0.c1, t0.c2 FROM t0 WHERE (CASE (t0.c2 IN (t0.c2))  WHEN CAST(t0.c0 AS TEXT) THEN CAST(t0.c0 AS NUMERIC) WHEN ((NULL)<=(t0.c0)) THEN 0.04417843294069013 WHEN ((t0.c0)<<(x'')) THEN (((t0.c1))!=((0xffffffffad3e1244))) END) GROUP BY t0.c0, t0.c1, t0.c2 UNION SELECT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((NOT (CASE (t0.c2 IN (t0.c2))  WHEN CAST(t0.c0 AS TEXT) THEN CAST(t0.c0 AS NUMERIC) WHEN ((NULL)<=(t0.c0)) THEN 0.04417843294069013 WHEN ((t0.c0)<<(x'')) THEN (((t0.c1))<>((0xffffffffad3e1244))) END))) GROUP BY t0.c0, t0.c1, t0.c2 UNION SELECT t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((CASE (t0.c2 IN (t0.c2))  WHEN CAST(t0.c0 AS TEXT) THEN CAST(t0.c0 AS NUMERIC) WHEN ((NULL)<=(t0.c0)) THEN 0.04417843294069013 WHEN ((t0.c0)<<(x'')) THEN (((t0.c1))!=((0xffffffffad3e1244))) END) ISNULL)) GROUP BY t0.c0, t0.c1, t0.c2;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(((AVG(v0.c0)) NOT BETWEEN (AVG(SUM(COUNT(v0.c0)))) AND (x''))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(((AVG(v0.c0)) NOT BETWEEN (AVG(SUM(COUNT(v0.c0)))) AND (x''))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(((AVG(v0.c0)) NOT BETWEEN (AVG(SUM(COUNT(v0.c0)))) AND (x'')))) ISNULL);
SELECT ALL SUM(CASE WHEN ((t0.c0) NOT BETWEEN (0xffffffffcc88e129) AND (t0.c1)) THEN ((702208893) IS TRUE) ELSE (((-9223372036854775808, t0.c0, v0.c0)) BETWEEN ((t0.c2, 0Xffffffffce91c783, v0.c0)) AND ((t0.c1, v0.c0, t0.c2))) END) FROM v0, t0 ORDER BY ('I' COLLATE BINARY IN (((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c1))))  NULLS LAST, (((((t0.c2)OR(t0.c1)))AND(v0.c0)) IN ()) DESC, ((((t0.c0) NOT NULL)) ISNULL)  NULLS LAST;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((+ (((x'') NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 NOT INDEXED WHERE ((NOT ((+ (((x'') NOT BETWEEN (v0.c0) AND (v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((+ (((x'') NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT t0.c1, t0.c0 FROM t0, v0;
SELECT DISTINCT t0.c1, t0.c0 FROM t0, v0 WHERE (('' IN (CAST(t0.c2 AS REAL)))) UNION SELECT DISTINCT t0.c1, t0.c0 FROM t0, v0 WHERE ((NOT (('' IN (CAST(t0.c2 AS REAL)))))) UNION SELECT DISTINCT t0.c1, t0.c0 FROM t0, v0 WHERE (((('' IN (CAST(t0.c2 AS REAL)))) ISNULL));
SELECT DISTINCT t0.c1, t0.c0 FROM t0, v0;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0, v0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((((t0.c1)<(v0.c0)))))) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT t0.c1, t0.c0, t0.c2 FROM t0, v0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((((t0.c1)<(v0.c0)))))))) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT t0.c1, t0.c0, t0.c2 FROM t0, v0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((((t0.c1)<(v0.c0)))))) ISNULL)) GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c2 FROM v0, t0 GROUP BY t0.c2;
SELECT t0.c2 FROM v0, t0 GROUP BY t0.c2 HAVING MAX(t0.c2) COLLATE RTRIM UNION ALL SELECT t0.c2 FROM v0, t0 GROUP BY t0.c2 HAVING (NOT (MAX(t0.c2) COLLATE RTRIM)) UNION ALL SELECT t0.c2 FROM v0, t0 GROUP BY t0.c2 HAVING ((MAX(t0.c2) COLLATE RTRIM) ISNULL);
SELECT t0.c2 FROM v0, t0 GROUP BY t0.c2;
SELECT t0.c2 FROM v0, t0 GROUP BY t0.c2 HAVING MAX(t0.c2) COLLATE RTRIM UNION ALL SELECT t0.c2 FROM v0, t0 GROUP BY t0.c2 HAVING (NOT (MAX(t0.c2) COLLATE RTRIM)) UNION ALL SELECT t0.c2 FROM v0, t0 GROUP BY t0.c2 HAVING ((MAX(t0.c2) COLLATE RTRIM) ISNULL);
SELECT t0.c2 FROM v0, t0 GROUP BY t0.c2;
SELECT * FROM t0 FULL OUTER JOIN v0 ON CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c2)) AS REAL);
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c2)) AS REAL) WHERE (NULL) UNION ALL SELECT * FROM t0 FULL OUTER JOIN v0 ON CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c2)) AS REAL) WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c2)) AS REAL) WHERE (((NULL) ISNULL));
SELECT * FROM t0 FULL OUTER JOIN v0 ON CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c2)) AS REAL);
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0 IN ()) IN (0x78cf0299))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0 IN ()) IN (0X78cf0299))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0 IN ()) IN (0X78cf0299))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))>(('S6')))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))>(('S6')))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))>(('S6')))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, t0.c2, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c1;
SELECT v0.c0, t0.c2, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c1 HAVING ((((t0.c2)AND(v0.c0)))OR(COUNT(*))) COLLATE RTRIM UNION ALL SELECT ALL v0.c0, t0.c2, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c1 HAVING (NOT (((((t0.c2)AND(v0.c0)))OR(COUNT(*))) COLLATE RTRIM)) UNION ALL SELECT v0.c0, t0.c2, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c1 HAVING ((((((t0.c2)AND(v0.c0)))OR(COUNT(*))) COLLATE RTRIM) ISNULL);
SELECT v0.c0, t0.c2, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c1;
SELECT v0.c0, t0.c2, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c1 HAVING ((((t0.c2)AND(v0.c0)))OR(COUNT(*))) COLLATE RTRIM UNION ALL SELECT ALL v0.c0, t0.c2, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c1 HAVING (NOT (((((t0.c2)AND(v0.c0)))OR(COUNT(*))) COLLATE RTRIM)) UNION ALL SELECT v0.c0, t0.c2, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c1 HAVING ((((((t0.c2)AND(v0.c0)))OR(COUNT(*))) COLLATE RTRIM) ISNULL);
SELECT v0.c0, t0.c2, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c1;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (CASE CASE t0.c1  WHEN t0.c1 THEN t0.c1 WHEN 0xffffffffca74a721 THEN t0.c2 WHEN t0.c2 THEN '654144567' ELSE t0.c1 END  WHEN ROUND(t0.c0, t0.c1) THEN '-1526085568' COLLATE NOCASE WHEN NULL THEN (((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c1, t0.c1))) WHEN (t0.c0 IN ()) THEN ((t0.c2)<>(NULL)) ELSE ((t0.c1)&(t0.c1)) END) UNION ALL SELECT * FROM t0 WHERE ((NOT (CASE CASE t0.c1  WHEN t0.c1 THEN t0.c1 WHEN 0Xffffffffca74a721 THEN t0.c2 WHEN t0.c2 THEN '654144567' ELSE t0.c1 END  WHEN ROUND(t0.c0, t0.c1) THEN '-1526085568' COLLATE NOCASE WHEN NULL THEN (((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c1, t0.c1))) WHEN (t0.c0 IN ()) THEN ((t0.c2)!=(NULL)) ELSE ((t0.c1)&(t0.c1)) END))) UNION ALL SELECT * FROM t0 WHERE (((CASE CASE t0.c1  WHEN t0.c1 THEN t0.c1 WHEN 0xffffffffca74a721 THEN t0.c2 WHEN t0.c2 THEN '654144567' ELSE t0.c1 END  WHEN ROUND(t0.c0, t0.c1) THEN '-1526085568' COLLATE NOCASE WHEN NULL THEN (((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c1, t0.c1))) WHEN (t0.c0 IN ()) THEN ((t0.c2)!=(NULL)) ELSE ((t0.c1)&(t0.c1)) END) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (x'') UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM t0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0;
SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM t0, v0 WHERE ((((((t0.c0))>((t0.c2)))) NOT BETWEEN (CAST(t0.c1 AS TEXT)) AND (v0.c0))) GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 UNION SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM t0, v0 WHERE ((NOT ((((((t0.c0))>((t0.c2)))) NOT BETWEEN (CAST(t0.c1 AS TEXT)) AND (v0.c0))))) GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 UNION SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM t0, v0 WHERE ((((((((t0.c0))>((t0.c2)))) NOT BETWEEN (CAST(t0.c1 AS TEXT)) AND (v0.c0))) ISNULL)) GROUP BY t0.c2, t0.c1, v0.c0, t0.c0;
SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0;
SELECT ALL t0.c0, v0.c0, t0.c2, t0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c0, t0.c2, t0.c1;
SELECT ALL t0.c0, v0.c0, t0.c2, t0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c0, t0.c2, t0.c1 HAVING AVG(MIN(COUNT(t0.c2))) UNION ALL SELECT t0.c0, v0.c0, t0.c2, t0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c0, t0.c2, t0.c1 HAVING (NOT (AVG(MIN(COUNT(t0.c2))))) UNION ALL SELECT t0.c0, v0.c0, t0.c2, t0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c0, t0.c2, t0.c1 HAVING ((AVG(MIN(COUNT(t0.c2)))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)), (~ (v0.c0))))<>((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), (((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), CAST(x'0991' AS INTEGER))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)), (~ (v0.c0))))!=((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), (((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), CAST(x'0991' AS INTEGER))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)), (~ (v0.c0))))<>((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), (((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), CAST(x'0991' AS INTEGER))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0)+(v0.c0)) IN ())) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)+(v0.c0)) IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0)+(v0.c0)) IN ())) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ('*j_Ar/o') GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ('*j_Ar/o'))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((('*j_Ar/o') ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(MIN(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(MIN(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(MIN(v0.c0))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((~ (t0.c2)) IN ())) UNION ALL SELECT * FROM t0 WHERE ((NOT (((~ (t0.c2)) IN ())))) UNION ALL SELECT * FROM t0 WHERE (((((~ (t0.c2)) IN ())) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0)IS NOT(v0.c0)))AND(v0.c0)))OR(((v0.c0)-(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((((v0.c0)IS NOT(v0.c0)))AND(v0.c0)))OR(((v0.c0)-(v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((((v0.c0)IS NOT(v0.c0)))AND(v0.c0)))OR(((v0.c0)-(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0 WHERE ((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c2))) COLLATE BINARY) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM t0 WHERE ((NOT ((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c2))) COLLATE BINARY))) GROUP BY t0.c1, t0.c2 UNION SELECT t0.c1, t0.c2 FROM t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c2))) COLLATE BINARY) ISNULL)) GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c2, t0.c1, v0.c0 FROM t0 NOT INDEXED, v0 GROUP BY t0.c2, t0.c1, v0.c0;
SELECT ALL t0.c2, t0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c1, v0.c0 HAVING AVG(v0.c0) UNION ALL SELECT t0.c2, t0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c1, v0.c0 HAVING (NOT (AVG(v0.c0))) UNION ALL SELECT ALL t0.c2, t0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c1, v0.c0 HAVING ((AVG(v0.c0)) ISNULL);
SELECT ALL t0.c2, t0.c1, v0.c0 FROM t0 NOT INDEXED, v0 GROUP BY t0.c2, t0.c1, v0.c0;
SELECT ALL t0.c2, t0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c1, v0.c0 HAVING AVG(v0.c0) UNION ALL SELECT t0.c2, t0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c1, v0.c0 HAVING (NOT (AVG(v0.c0))) UNION ALL SELECT ALL t0.c2, t0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c1, v0.c0 HAVING ((AVG(v0.c0)) ISNULL);
SELECT ALL t0.c2, t0.c1, v0.c0 FROM t0 NOT INDEXED, v0 GROUP BY t0.c2, t0.c1, v0.c0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((((t0.c1)OR(t0.c1)))OR(t0.c2)) COLLATE NOCASE) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((t0.c1)OR(t0.c1)))OR(t0.c2)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((t0.c1)OR(t0.c1)))OR(t0.c2)) COLLATE NOCASE) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (HEX(DISTINCT CASE v0.c0  WHEN v0.c0 THEN t0.c0 WHEN 1363546323 THEN x'' WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END)) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (HEX(DISTINCT CASE v0.c0  WHEN v0.c0 THEN t0.c0 WHEN 1363546323 THEN x'' WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END)))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((HEX(DISTINCT CASE v0.c0  WHEN v0.c0 THEN t0.c0 WHEN 1363546323 THEN x'' WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END)) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT t0.c0, t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c0, t0.c2, v0.c0;
SELECT ALL t0.c0, t0.c2, v0.c0 FROM v0, t0 WHERE (NULL) GROUP BY t0.c0, t0.c2, v0.c0 UNION SELECT t0.c0, t0.c2, v0.c0 FROM v0, t0 WHERE ((NOT (NULL))) GROUP BY t0.c0, t0.c2, v0.c0 UNION SELECT ALL t0.c0, t0.c2, v0.c0 FROM v0, t0 WHERE (((NULL) ISNULL)) GROUP BY t0.c0, t0.c2, v0.c0;
SELECT t0.c0, t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c0, t0.c2, v0.c0;
SELECT t0.c2, t0.c1 FROM v0 INNER JOIN t0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR((~ (t0.c0)))) GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM v0 INNER JOIN t0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR((~ (t0.c0)))) GROUP BY t0.c2, t0.c1 HAVING (((GROUP_CONCAT(t0.c0) IN ())) BETWEEN (CAST(v0.c0 AS REAL)) AND (AVG(t0.c1))) UNION ALL SELECT t0.c2, t0.c1 FROM v0 INNER JOIN t0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR((~ (t0.c0)))) GROUP BY t0.c2, t0.c1 HAVING (NOT ((((GROUP_CONCAT(t0.c0) IN ())) BETWEEN (CAST(v0.c0 AS REAL)) AND (AVG(t0.c1))))) UNION ALL SELECT t0.c2, t0.c1 FROM v0 INNER JOIN t0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR((~ (t0.c0)))) GROUP BY t0.c2, t0.c1 HAVING (((((GROUP_CONCAT(t0.c0) IN ())) BETWEEN (CAST(v0.c0 AS REAL)) AND (AVG(t0.c1)))) ISNULL);
SELECT t0.c2, t0.c1 FROM v0 INNER JOIN t0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR((~ (t0.c0)))) GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM v0 INNER JOIN t0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR((~ (t0.c0)))) GROUP BY t0.c2, t0.c1 HAVING (((GROUP_CONCAT(t0.c0) IN ())) BETWEEN (CAST(v0.c0 AS REAL)) AND (AVG(t0.c1))) UNION ALL SELECT t0.c2, t0.c1 FROM v0 INNER JOIN t0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR((~ (t0.c0)))) GROUP BY t0.c2, t0.c1 HAVING (NOT ((((GROUP_CONCAT(t0.c0) IN ())) BETWEEN (CAST(v0.c0 AS REAL)) AND (AVG(t0.c1))))) UNION ALL SELECT t0.c2, t0.c1 FROM v0 INNER JOIN t0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR((~ (t0.c0)))) GROUP BY t0.c2, t0.c1 HAVING (((((GROUP_CONCAT(t0.c0) IN ())) BETWEEN (CAST(v0.c0 AS REAL)) AND (AVG(t0.c1)))) ISNULL);
SELECT t0.c2, t0.c1 FROM v0 INNER JOIN t0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR((~ (t0.c0)))) GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c1, t0.c0, t0.c2, v0.c0 FROM v0, t0;
SELECT t0.c1, t0.c0, t0.c2, v0.c0 FROM v0, t0 WHERE (NULL) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2, v0.c0 FROM v0, t0 WHERE ((NOT (NULL))) UNION ALL SELECT t0.c1, t0.c0, t0.c2, v0.c0 FROM v0, t0 WHERE (((NULL) ISNULL));
SELECT ALL t0.c1, t0.c0, t0.c2, v0.c0 FROM v0, t0;
SELECT DISTINCT t0.c1, t0.c0, t0.c2 FROM t0;
SELECT DISTINCT t0.c1, t0.c0, t0.c2 FROM t0 WHERE ((((t0.c1)&(t0.c2)) IN ())) UNION SELECT DISTINCT t0.c1, t0.c0, t0.c2 FROM t0 WHERE ((NOT ((((t0.c1)&(t0.c2)) IN ())))) UNION SELECT DISTINCT t0.c1, t0.c0, t0.c2 FROM t0 WHERE ((((((t0.c1)&(t0.c2)) IN ())) ISNULL));
SELECT DISTINCT t0.c1, t0.c0, t0.c2 FROM t0;
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, t0 WHERE (v0.c0) GROUP BY t0.c0 UNION SELECT t0.c0 FROM v0, t0 WHERE ((NOT (v0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM v0, t0 WHERE (((v0.c0) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(MAX(v0.c0) AS REAL) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(MAX(v0.c0) AS REAL))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(MAX(v0.c0) AS REAL)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(MAX(v0.c0) AS REAL) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(MAX(v0.c0) AS REAL))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(MAX(v0.c0) AS REAL)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((((load_extension(t0.c0))AND(t0.c0)))AND(t0.c1))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((load_extension(t0.c0))AND(t0.c0)))AND(t0.c1))))) UNION ALL SELECT * FROM t0 WHERE (((((((load_extension(t0.c0))AND(t0.c0)))AND(t0.c1))) ISNULL));
SELECT DISTINCT t0.c1 FROM v0, t0;
SELECT DISTINCT t0.c1 FROM v0 NOT INDEXED, t0 WHERE (CAST(CAST(t0.c0 AS REAL) AS NUMERIC)) UNION SELECT DISTINCT t0.c1 FROM v0, t0 WHERE ((NOT (CAST(CAST(t0.c0 AS REAL) AS NUMERIC)))) UNION SELECT DISTINCT t0.c1 FROM v0, t0 WHERE (((CAST(CAST(t0.c0 AS REAL) AS NUMERIC)) ISNULL));
SELECT DISTINCT t0.c1 FROM v0, t0;
SELECT ALL t0.c0, v0.c0, t0.c1, t0.c2 FROM v0, t0 GROUP BY t0.c0, v0.c0, t0.c1, t0.c2;
SELECT t0.c0, v0.c0, t0.c1, t0.c2 FROM v0, t0 WHERE (CASE t0.c1  WHEN t0.c1 THEN v0.c0 END COLLATE RTRIM) GROUP BY t0.c0, v0.c0, t0.c1, t0.c2 UNION SELECT t0.c0, v0.c0, t0.c1, t0.c2 FROM v0, t0 WHERE ((NOT (CASE t0.c1  WHEN t0.c1 THEN v0.c0 END COLLATE RTRIM))) GROUP BY t0.c0, v0.c0, t0.c1, t0.c2 UNION SELECT ALL t0.c0, v0.c0, t0.c1, t0.c2 FROM v0, t0 WHERE (((CASE t0.c1  WHEN t0.c1 THEN v0.c0 END COLLATE RTRIM) ISNULL)) GROUP BY t0.c0, v0.c0, t0.c1, t0.c2;
SELECT ALL t0.c0, v0.c0, t0.c1, t0.c2 FROM v0, t0 GROUP BY t0.c0, v0.c0, t0.c1, t0.c2;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON ((((t0.c1) IS TRUE)) IS TRUE) GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON ((((t0.c1) IS TRUE)) IS TRUE) GROUP BY t0.c2, t0.c1, t0.c0 HAVING MAX(0.34113850386500855) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON ((((t0.c1) IS TRUE)) IS TRUE) GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT (MAX(0.34113850386500855))) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON ((((t0.c1) IS TRUE)) IS TRUE) GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((MAX(0.34113850386500855)) ISNULL);
SELECT ALL t0.c2, t0.c1, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON ((((t0.c1) IS TRUE)) IS TRUE) GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON ((((t0.c1) IS TRUE)) IS TRUE) GROUP BY t0.c2, t0.c1, t0.c0 HAVING MAX(0.34113850386500855) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON ((((t0.c1) IS TRUE)) IS TRUE) GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT (MAX(0.34113850386500855))) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON ((((t0.c1) IS TRUE)) IS TRUE) GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((MAX(0.34113850386500855)) ISNULL);
SELECT ALL t0.c2, t0.c1, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON ((((t0.c1) IS TRUE)) IS TRUE) GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE ((v0.c0 IN ())) UNION ALL SELECT * FROM v0, t0 WHERE ((NOT ((v0.c0 IN ())))) UNION ALL SELECT ALL * FROM v0, t0 NOT INDEXED WHERE ((((v0.c0 IN ())) ISNULL));
SELECT ALL * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE ((~ (((t0.c1)<(v0.c0))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT ((~ (((t0.c1)<(v0.c0))))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((((~ (((t0.c1)<(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((CAST(v0.c0 AS BLOB) IN ((v0.c0 IN (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((CAST(v0.c0 AS BLOB) IN ((v0.c0 IN (v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((CAST(v0.c0 AS BLOB) IN ((v0.c0 IN (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0 HAVING AVG(GROUP_CONCAT(v0.c0) COLLATE RTRIM) UNION ALL SELECT t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0 HAVING (NOT (AVG(GROUP_CONCAT(v0.c0) COLLATE RTRIM))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0 HAVING ((AVG(GROUP_CONCAT(v0.c0) COLLATE RTRIM)) ISNULL);
SELECT ALL MAX(((((((((((t0.c0)OR('')))AND(v0.c0)))AND(t0.c0)))AND(v0.c0)))IS(UPPER(v0.c0)))) FROM v0, t0 ORDER BY ((((((((((t0.c1) BETWEEN (t0.c2) AND (t0.c2)))OR(((t0.c2)IS(t0.c1)))))OR(((t0.c1)LIKE(t0.c0)))))OR(t0.c2)))OR((NOT (t0.c2)))) DESC  NULLS LAST, (((NOT (NULL)))==(((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2)))) ASC  NULLS LAST, CASE ABS(t0.c2)  WHEN ABS(DISTINCT v0.c0) THEN (+ (v0.c0)) WHEN ((v0.c0)%(t0.c2)) THEN (t0.c0 IN ()) WHEN ((t0.c2)/(v0.c0)) THEN CAST(t0.c0 AS BLOB) END  NULLS LAST;
SELECT v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (((((t0.c1))>((v0.c0))))*(LIKE(t0.c0, t0.c0, 'g')));
SELECT ALL v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (((((t0.c1))>((v0.c0))))*(LIKE(t0.c0, t0.c0, 'g'))) WHERE (v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (((((t0.c1))>((v0.c0))))*(LIKE(t0.c0, t0.c0, 'g'))) WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (((((t0.c1))>((v0.c0))))*(LIKE(t0.c0, t0.c0, 'g'))) WHERE (((v0.c0) ISNULL));
SELECT v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (((((t0.c1))>((v0.c0))))*(LIKE(t0.c0, t0.c0, 'g')));
SELECT DISTINCT t0.c2 FROM v0, t0;
SELECT DISTINCT t0.c2 FROM v0, t0 WHERE (SUBSTR(((t0.c2) IS TRUE), ((t0.c2)<>(t0.c2)))) UNION SELECT DISTINCT t0.c2 FROM v0, t0 WHERE ((NOT (SUBSTR(((t0.c2) IS TRUE), ((t0.c2)<>(t0.c2)))))) UNION SELECT DISTINCT t0.c2 FROM v0, t0 WHERE (((SUBSTR(((t0.c2) IS TRUE), ((t0.c2)!=(t0.c2)))) ISNULL));
SELECT DISTINCT t0.c2 FROM v0, t0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (json(CASE v0.c0  WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (json(CASE v0.c0  WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((json(CASE v0.c0  WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, t0.c0, t0.c2 FROM v0 FULL OUTER JOIN t0 ON ((~ (t0.c0)) IN (t0.c0, CASE t0.c1  WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN -262762391 THEN t0.c1 WHEN v0.c0 THEN t0.c2 ELSE v0.c0 END)) GROUP BY v0.c0, t0.c0, t0.c2;
SELECT v0.c0, t0.c0, t0.c2 FROM v0 FULL OUTER JOIN t0 ON ((~ (t0.c0)) IN (t0.c0, CASE t0.c1  WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN -262762391 THEN t0.c1 WHEN v0.c0 THEN t0.c2 ELSE v0.c0 END)) GROUP BY v0.c0, t0.c0, t0.c2 HAVING t0.c0 UNION ALL SELECT v0.c0, t0.c0, t0.c2 FROM v0 FULL OUTER JOIN t0 ON ((~ (t0.c0)) IN (t0.c0, CASE t0.c1  WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN -262762391 THEN t0.c1 WHEN v0.c0 THEN t0.c2 ELSE v0.c0 END)) GROUP BY v0.c0, t0.c0, t0.c2 HAVING (NOT (t0.c0)) UNION ALL SELECT v0.c0, t0.c0, t0.c2 FROM v0 FULL OUTER JOIN t0 ON ((~ (t0.c0)) IN (t0.c0, CASE t0.c1  WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN -262762391 THEN t0.c1 WHEN v0.c0 THEN t0.c2 ELSE v0.c0 END)) GROUP BY v0.c0, t0.c0, t0.c2 HAVING ((t0.c0) ISNULL);
SELECT ALL v0.c0, t0.c0, t0.c2 FROM v0 FULL OUTER JOIN t0 ON ((~ (t0.c0)) IN (t0.c0, CASE t0.c1  WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN -262762391 THEN t0.c1 WHEN v0.c0 THEN t0.c2 ELSE v0.c0 END)) GROUP BY v0.c0, t0.c0, t0.c2;
SELECT v0.c0, t0.c0, t0.c2 FROM v0 FULL OUTER JOIN t0 ON ((~ (t0.c0)) IN (t0.c0, CASE t0.c1  WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN -262762391 THEN t0.c1 WHEN v0.c0 THEN t0.c2 ELSE v0.c0 END)) GROUP BY v0.c0, t0.c0, t0.c2 HAVING t0.c0 UNION ALL SELECT v0.c0, t0.c0, t0.c2 FROM v0 FULL OUTER JOIN t0 ON ((~ (t0.c0)) IN (t0.c0, CASE t0.c1  WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN -262762391 THEN t0.c1 WHEN v0.c0 THEN t0.c2 ELSE v0.c0 END)) GROUP BY v0.c0, t0.c0, t0.c2 HAVING (NOT (t0.c0)) UNION ALL SELECT v0.c0, t0.c0, t0.c2 FROM v0 FULL OUTER JOIN t0 ON ((~ (t0.c0)) IN (t0.c0, CASE t0.c1  WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN -262762391 THEN t0.c1 WHEN v0.c0 THEN t0.c2 ELSE v0.c0 END)) GROUP BY v0.c0, t0.c0, t0.c2 HAVING ((t0.c0) ISNULL);
SELECT ALL v0.c0, t0.c0, t0.c2 FROM v0 FULL OUTER JOIN t0 ON ((~ (t0.c0)) IN (t0.c0, CASE t0.c1  WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN -262762391 THEN t0.c1 WHEN v0.c0 THEN t0.c2 ELSE v0.c0 END)) GROUP BY v0.c0, t0.c0, t0.c2;
SELECT * FROM t0, v0;
SELECT * FROM t0, v0 WHERE (((((t0.c1)OR(t0.c1)))OR(t0.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT (((((t0.c1)OR(t0.c1)))OR(t0.c0)) COLLATE BINARY))) UNION ALL SELECT * FROM t0, v0 WHERE (((((((t0.c1)OR(t0.c1)))OR(t0.c0)) COLLATE BINARY) ISNULL));
SELECT * FROM t0, v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST(t0.c1 COLLATE BINARY AS INTEGER)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(t0.c1 COLLATE BINARY AS INTEGER)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c1 COLLATE BINARY AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 WHERE (t0.c0) GROUP BY t0.c0, t0.c1 UNION SELECT ALL t0.c0, t0.c1 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0, t0.c1 UNION SELECT ALL t0.c0, t0.c1 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM(t0.c1 COLLATE BINARY) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM(t0.c1 COLLATE BINARY))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(t0.c1 COLLATE BINARY)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM(t0.c1 COLLATE BINARY) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM(t0.c1 COLLATE BINARY))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(t0.c1 COLLATE BINARY)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (CAST(t0.c2 AS TEXT) COLLATE RTRIM) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST(t0.c2 AS TEXT) COLLATE RTRIM))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((CAST(t0.c2 AS TEXT) COLLATE RTRIM) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))OR((v0.c0 IN (v0.c0)))))OR(((('J#J1'))>=((v0.c0))))))AND(v0.c0 COLLATE BINARY)))AND(UNLIKELY(DISTINCT v0.c0)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((((((((v0.c0)OR(v0.c0)))OR((v0.c0 IN (v0.c0)))))OR(((('J#J1'))>=((v0.c0))))))AND(v0.c0 COLLATE BINARY)))AND(UNLIKELY(DISTINCT v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((((((v0.c0)OR(v0.c0)))OR((v0.c0 IN (v0.c0)))))OR(((('J#J1'))>=((v0.c0))))))AND(v0.c0 COLLATE BINARY)))AND(UNLIKELY(DISTINCT v0.c0)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT t0.c0, v0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c0, v0.c0, t0.c2;
SELECT ALL t0.c0, v0.c0, t0.c2 FROM t0, v0 WHERE ((((((t0.c2, t0.c0, v0.c0))>=((t0.c0, v0.c0, t0.c2))))IS NOT('y%'))) GROUP BY t0.c0, v0.c0, t0.c2 UNION SELECT t0.c0, v0.c0, t0.c2 FROM t0, v0 WHERE ((NOT ((((((t0.c2, t0.c0, v0.c0))>=((t0.c0, v0.c0, t0.c2))))IS NOT('y%'))))) GROUP BY t0.c0, v0.c0, t0.c2 UNION SELECT ALL t0.c0, v0.c0, t0.c2 FROM t0, v0 WHERE ((((((((t0.c2, t0.c0, v0.c0))>=((t0.c0, v0.c0, t0.c2))))IS NOT('y%'))) ISNULL)) GROUP BY t0.c0, v0.c0, t0.c2;
SELECT t0.c0, v0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c0, v0.c0, t0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX((((v0.c0))==((COUNT(*))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX((((v0.c0))=((COUNT(*))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX((((v0.c0))=((COUNT(*)))))) ISNULL);
SELECT ALL t0.c0, t0.c2 FROM t0;
SELECT ALL t0.c0, t0.c2 FROM t0 WHERE (0.374344515627946) UNION ALL SELECT t0.c0, t0.c2 FROM t0 WHERE ((NOT (0.374344515627946))) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 WHERE (((0.374344515627946) ISNULL));
SELECT ALL t0.c0, t0.c2 FROM t0;
SELECT DISTINCT * FROM t0, v0 INDEXED BY i85;
SELECT ALL v0.c0, t0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c1, t0.c0;
SELECT v0.c0, t0.c1, t0.c0 FROM v0, t0 WHERE (((QUOTE(t0.c1)) NOT BETWEEN ((t0.c0 IN ())) AND (CAST(t0.c0 AS NUMERIC)))) GROUP BY v0.c0, t0.c1, t0.c0 UNION SELECT ALL v0.c0, t0.c1, t0.c0 FROM v0, t0 WHERE ((NOT (((QUOTE(t0.c1)) NOT BETWEEN ((t0.c0 IN ())) AND (CAST(t0.c0 AS NUMERIC)))))) GROUP BY v0.c0, t0.c1, t0.c0 UNION SELECT ALL v0.c0, t0.c1, t0.c0 FROM v0, t0 WHERE (((((QUOTE(t0.c1)) NOT BETWEEN ((t0.c0 IN ())) AND (CAST(t0.c0 AS NUMERIC)))) ISNULL)) GROUP BY v0.c0, t0.c1, t0.c0;
SELECT ALL v0.c0, t0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c1, t0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(COUNT(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(COUNT(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(COUNT(v0.c0))) ISNULL);
SELECT ALL MIN(CASE ((t0.c2) ISNULL)  WHEN json_type(t0.c1) THEN ((NULL) NOT NULL) ELSE ((NULL)-(t0.c2)) END) FROM v0, t0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (NULL) UNION ALL SELECT * FROM v0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM v0 WHERE (((NULL) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE ((('')>=((NOT (v0.c0))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT ((('')>=((NOT (v0.c0))))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((((('')>=((NOT (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c1, t0.c0, t0.c2, v0.c0 FROM v0 INNER JOIN t0 ON ((((((((((t0.c2)OR(NULL)))OR(t0.c0)))OR(NULL)))OR(v0.c0))) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (0.3353186573927607)) GROUP BY t0.c1, t0.c0, t0.c2, v0.c0;
SELECT ALL t0.c1, t0.c0, t0.c2, v0.c0 FROM v0 INNER JOIN t0 ON ((((((((((t0.c2)OR(NULL)))OR(t0.c0)))OR(NULL)))OR(v0.c0))) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (0.3353186573927607)) GROUP BY t0.c1, t0.c0, t0.c2, v0.c0 HAVING SUM((COUNT(SUM(TOTAL(COUNT(*)))) IN ())) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2, v0.c0 FROM v0 INNER JOIN t0 ON ((((((((((t0.c2)OR(NULL)))OR(t0.c0)))OR(NULL)))OR(v0.c0))) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (0.3353186573927607)) GROUP BY t0.c1, t0.c0, t0.c2, v0.c0 HAVING (NOT (SUM((COUNT(SUM(TOTAL(COUNT(*)))) IN ())))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2, v0.c0 FROM v0 INNER JOIN t0 ON ((((((((((t0.c2)OR(NULL)))OR(t0.c0)))OR(NULL)))OR(v0.c0))) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (0.3353186573927607)) GROUP BY t0.c1, t0.c0, t0.c2, v0.c0 HAVING ((SUM((COUNT(SUM(TOTAL(COUNT(*)))) IN ()))) ISNULL);
SELECT ALL t0.c1, t0.c0, t0.c2, v0.c0 FROM v0 INNER JOIN t0 ON ((((((((((t0.c2)OR(NULL)))OR(t0.c0)))OR(NULL)))OR(v0.c0))) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (0.3353186573927607)) GROUP BY t0.c1, t0.c0, t0.c2, v0.c0;
SELECT ALL t0.c1, t0.c0, t0.c2, v0.c0 FROM v0 INNER JOIN t0 ON ((((((((((t0.c2)OR(NULL)))OR(t0.c0)))OR(NULL)))OR(v0.c0))) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (0.3353186573927607)) GROUP BY t0.c1, t0.c0, t0.c2, v0.c0 HAVING SUM((COUNT(SUM(TOTAL(COUNT(*)))) IN ())) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2, v0.c0 FROM v0 INNER JOIN t0 ON ((((((((((t0.c2)OR(NULL)))OR(t0.c0)))OR(NULL)))OR(v0.c0))) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (0.3353186573927607)) GROUP BY t0.c1, t0.c0, t0.c2, v0.c0 HAVING (NOT (SUM((COUNT(SUM(TOTAL(COUNT(*)))) IN ())))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2, v0.c0 FROM v0 INNER JOIN t0 ON ((((((((((t0.c2)OR(NULL)))OR(t0.c0)))OR(NULL)))OR(v0.c0))) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (0.3353186573927607)) GROUP BY t0.c1, t0.c0, t0.c2, v0.c0 HAVING ((SUM((COUNT(SUM(TOTAL(COUNT(*)))) IN ()))) ISNULL);
SELECT ALL t0.c1, t0.c0, t0.c2, v0.c0 FROM v0 INNER JOIN t0 ON ((((((((((t0.c2)OR(NULL)))OR(t0.c0)))OR(NULL)))OR(v0.c0))) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (0.3353186573927607)) GROUP BY t0.c1, t0.c0, t0.c2, v0.c0;
SELECT ALL * FROM v0, t0;
SELECT * FROM v0, t0 WHERE (v0.c0) UNION ALL SELECT * FROM v0, t0 NOT INDEXED WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL * FROM v0, t0 WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM v0, t0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (((((((((t0.c0 COLLATE NOCASE)AND(((v0.c0)%(t0.c1)))))OR(CASE WHEN v0.c0 THEN t0.c2 ELSE t0.c1 END)))OR(((t0.c2)+(t0.c1)))))OR(CASE WHEN t0.c0 THEN v0.c0 END))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (((((((((t0.c0 COLLATE NOCASE)AND(((v0.c0)%(t0.c1)))))OR(CASE WHEN v0.c0 THEN t0.c2 ELSE t0.c1 END)))OR(((t0.c2)+(t0.c1)))))OR(CASE WHEN t0.c0 THEN v0.c0 END))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((((((((((t0.c0 COLLATE NOCASE)AND(((v0.c0)%(t0.c1)))))OR(CASE WHEN v0.c0 THEN t0.c2 ELSE t0.c1 END)))OR(((t0.c2)+(t0.c1)))))OR(CASE WHEN t0.c0 THEN v0.c0 END))) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT v0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c2;
SELECT v0.c0, t0.c2 FROM v0, t0 WHERE (((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1))) IS FALSE)) GROUP BY v0.c0, t0.c2 UNION SELECT ALL v0.c0, t0.c2 FROM v0, t0 WHERE ((NOT (((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1))) IS FALSE)))) GROUP BY v0.c0, t0.c2 UNION SELECT v0.c0, t0.c2 FROM v0, t0 WHERE (((((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1))) IS FALSE)) ISNULL)) GROUP BY v0.c0, t0.c2;
SELECT v0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c2;
SELECT v0.c0, t0.c0, t0.c2, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c0, t0.c2, t0.c1;
SELECT ALL v0.c0, t0.c0, t0.c2, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c0, t0.c2, t0.c1 HAVING GROUP_CONCAT((((t0.c1, AVG(v0.c0), COUNT(MIN(SUM(t0.c2)))))!=((t0.c1, t0.c2, TOTAL(AVG(x'')))))) UNION ALL SELECT v0.c0, t0.c0, t0.c2, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c0, t0.c2, t0.c1 HAVING (NOT (GROUP_CONCAT((((t0.c1, AVG(v0.c0), COUNT(MIN(SUM(t0.c2)))))!=((t0.c1, t0.c2, TOTAL(AVG(x'')))))))) UNION ALL SELECT ALL v0.c0, t0.c0, t0.c2, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c0, t0.c2, t0.c1 HAVING ((GROUP_CONCAT((((t0.c1, AVG(v0.c0), COUNT(MIN(SUM(t0.c2)))))<>((t0.c1, t0.c2, TOTAL(AVG(x''))))))) ISNULL);
SELECT ALL t0.c2, t0.c0 FROM t0;
SELECT ALL t0.c2, t0.c0 FROM t0 WHERE (TRIM(t0.c0 COLLATE NOCASE, (((t0.c0, t0.c1, t0.c1))!=((t0.c1, t0.c1, t0.c1))))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 WHERE ((NOT (TRIM(t0.c0 COLLATE NOCASE, (((t0.c0, t0.c1, t0.c1))!=((t0.c1, t0.c1, t0.c1))))))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 WHERE (((TRIM(t0.c0 COLLATE NOCASE, (((t0.c0, t0.c1, t0.c1))!=((t0.c1, t0.c1, t0.c1))))) ISNULL));
SELECT ALL t0.c2, t0.c0 FROM t0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (CASE WHEN v0.c0 THEN t0.c2 WHEN v0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 END COLLATE BINARY) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (CASE WHEN v0.c0 THEN t0.c2 WHEN v0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 END COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((CASE WHEN v0.c0 THEN t0.c2 WHEN v0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 END COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT t0.c0, t0.c2 FROM t0 NATURAL JOIN v0 GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM t0 NATURAL JOIN v0 WHERE ((((t0.c0 IN ()))*(((t0.c2) ISNULL)))) GROUP BY t0.c0, t0.c2 UNION SELECT ALL t0.c0, t0.c2 FROM t0 NATURAL JOIN v0 WHERE ((NOT ((((t0.c0 IN ()))*(((t0.c2) ISNULL)))))) GROUP BY t0.c0, t0.c2 UNION SELECT t0.c0, t0.c2 FROM t0 NATURAL JOIN v0 WHERE ((((((t0.c0 IN ()))*(((t0.c2) ISNULL)))) ISNULL)) GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0 NATURAL JOIN v0 GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING GROUP_CONCAT(AVG(t0.c0)) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (GROUP_CONCAT(AVG(t0.c0)))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((GROUP_CONCAT(AVG(t0.c0))) ISNULL);
SELECT ALL * FROM t0 CROSS JOIN v0 ON (((v0.c0))>=((x'a012')));
SELECT ALL * FROM t0 CROSS JOIN v0 ON (((v0.c0))>=((x'a012'))) WHERE (CASE WHEN CAST('YI''' AS BLOB) THEN t0.c0 END) UNION ALL SELECT ALL * FROM t0 CROSS JOIN v0 ON (((v0.c0))>=((x'a012'))) WHERE ((NOT (CASE WHEN CAST('YI''' AS BLOB) THEN t0.c0 END))) UNION ALL SELECT ALL * FROM t0 CROSS JOIN v0 ON (((v0.c0))>=((x'a012'))) WHERE (((CASE WHEN CAST('YI''' AS BLOB) THEN t0.c0 END) ISNULL));
SELECT ALL * FROM t0 CROSS JOIN v0 ON (((v0.c0))>=((x'a012')));
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE ((((((((t0.c1)OR(t0.c1)))OR(v0.c0))))<((CASE WHEN v0.c0 THEN t0.c1 ELSE v0.c0 END)))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT ((((((((t0.c1)OR(t0.c1)))OR(v0.c0))))<((CASE WHEN v0.c0 THEN t0.c1 ELSE v0.c0 END)))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((((((((((t0.c1)OR(t0.c1)))OR(v0.c0))))<((CASE WHEN v0.c0 THEN t0.c1 ELSE v0.c0 END)))) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS TEXT)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS TEXT)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS TEXT)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c2, t0.c1 FROM v0 CROSS JOIN t0 ON ((0.16893726949832255)>=(t0.c2)) COLLATE NOCASE GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM v0 CROSS JOIN t0 ON ((0.16893726949832255)>=(t0.c2)) COLLATE NOCASE GROUP BY t0.c2, t0.c1 HAVING SUM(((AVG(MIN(t0.c1)))||(t0.c2))) UNION ALL SELECT ALL t0.c2, t0.c1 FROM v0 CROSS JOIN t0 ON ((0.16893726949832255)>=(t0.c2)) COLLATE NOCASE GROUP BY t0.c2, t0.c1 HAVING (NOT (SUM(((AVG(MIN(t0.c1)))||(t0.c2))))) UNION ALL SELECT ALL t0.c2, t0.c1 FROM v0 CROSS JOIN t0 ON ((0.16893726949832255)>=(t0.c2)) COLLATE NOCASE GROUP BY t0.c2, t0.c1 HAVING ((SUM(((AVG(MIN(t0.c1)))||(t0.c2)))) ISNULL);
SELECT t0.c1, t0.c2, t0.c0 FROM t0;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 WHERE (CAST(t0.c2 COLLATE BINARY AS INTEGER)) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((NOT (CAST(t0.c2 COLLATE BINARY AS INTEGER)))) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 WHERE (((CAST(t0.c2 COLLATE BINARY AS INTEGER)) ISNULL));
SELECT t0.c1, t0.c2, t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0, v0;
SELECT DISTINCT t0.c0 FROM t0, v0 WHERE ((CAST(v0.c0 AS BLOB) IN ())) UNION SELECT DISTINCT t0.c0 FROM t0, v0 WHERE ((NOT ((CAST(v0.c0 AS BLOB) IN ())))) UNION SELECT DISTINCT t0.c0 FROM t0, v0 WHERE ((((CAST(v0.c0 AS BLOB) IN ())) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, v0;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 WHERE (CAST(t0.c2 AS INTEGER)) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0 WHERE ((NOT (CAST(t0.c2 AS INTEGER)))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0 WHERE (((CAST(t0.c2 AS INTEGER)) ISNULL)) GROUP BY t0.c1;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING ((CASE WHEN t0.c0 THEN GROUP_CONCAT(t0.c0) END) ISNULL) UNION ALL SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING (NOT (((CASE WHEN t0.c0 THEN GROUP_CONCAT(t0.c0) END) ISNULL))) UNION ALL SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING ((((CASE WHEN t0.c0 THEN GROUP_CONCAT(t0.c0) END) ISNULL)) ISNULL);
SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING ((CASE WHEN t0.c0 THEN GROUP_CONCAT(t0.c0) END) ISNULL) UNION ALL SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING (NOT (((CASE WHEN t0.c0 THEN GROUP_CONCAT(t0.c0) END) ISNULL))) UNION ALL SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING ((((CASE WHEN t0.c0 THEN GROUP_CONCAT(t0.c0) END) ISNULL)) ISNULL);
SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM v0, t0;
SELECT ALL t0.c0 FROM v0, t0 WHERE ((((~ (t0.c0)))<=(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM v0, t0 WHERE ((NOT ((((~ (t0.c0)))<=(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0))))))) UNION ALL SELECT t0.c0 FROM v0, t0 WHERE ((((((~ (t0.c0)))<=(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0))))) ISNULL));
SELECT t0.c0 FROM v0, t0;
SELECT DISTINCT t0.c0 FROM v0, t0;
SELECT DISTINCT t0.c0 FROM v0, t0 WHERE ((((t0.c1)GLOB(v0.c0)) IN ())) UNION SELECT DISTINCT t0.c0 FROM v0, t0 WHERE ((NOT ((((t0.c1)GLOB(v0.c0)) IN ())))) UNION SELECT DISTINCT t0.c0 FROM v0, t0 WHERE ((((((t0.c1)GLOB(v0.c0)) IN ())) ISNULL));
SELECT DISTINCT t0.c0 FROM v0, t0;
SELECT t0.c2, t0.c1 FROM t0, v0 GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0, v0 WHERE (((((((t0.c1)<>(t0.c2)))OR(((((((((x'')AND(x'8250')))OR(v0.c0)))OR(0.6937933903975834)))OR(t0.c1)))))OR((('e}')+(t0.c1))))) GROUP BY t0.c2, t0.c1 UNION SELECT t0.c2, t0.c1 FROM t0, v0 WHERE ((NOT (((((((t0.c1)!=(t0.c2)))OR(((((((((x'')AND(x'8250')))OR(v0.c0)))OR(0.6937933903975834)))OR(t0.c1)))))OR((('e}')+(t0.c1))))))) GROUP BY t0.c2, t0.c1 UNION SELECT ALL t0.c2, t0.c1 FROM t0, v0 WHERE (((((((((t0.c1)!=(t0.c2)))OR(((((((((x'')AND(x'8250')))OR(v0.c0)))OR(0.6937933903975834)))OR(t0.c1)))))OR((('e}')+(t0.c1))))) ISNULL)) GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0, v0 GROUP BY t0.c2, t0.c1;
SELECT t0.c2, v0.c0, t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1;
SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1 HAVING GROUP_CONCAT(COUNT(v0.c0)) UNION ALL SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1 HAVING (NOT (GROUP_CONCAT(COUNT(v0.c0)))) UNION ALL SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1 HAVING ((GROUP_CONCAT(COUNT(v0.c0))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (t0.c0) UNION ALL SELECT * FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0)OR(v0.c0)))OR(v0.c0)) IN (((v0.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((((v0.c0)OR(v0.c0)))OR(v0.c0)) IN (((v0.c0) NOTNULL)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)) IN (((v0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0, t0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t0 WHERE ((((~ (t0.c0))) BETWEEN (NULL) AND (((((((((t0.c2)OR(t0.c2)))AND(t0.c0)))AND(v0.c0)))OR(t0.c1))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, t0 WHERE ((NOT ((((~ (t0.c0))) BETWEEN (NULL) AND (((((((((t0.c2)OR(t0.c2)))AND(t0.c0)))AND(v0.c0)))OR(t0.c1))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, t0 WHERE ((((((~ (t0.c0))) BETWEEN (NULL) AND (((((((((t0.c2)OR(t0.c2)))AND(t0.c0)))AND(v0.c0)))OR(t0.c1))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, t0 GROUP BY v0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((t0.c0)) NOT BETWEEN ((MAX(COUNT(t0.c2)))) AND ((MIN(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((t0.c0)) NOT BETWEEN ((MAX(COUNT(t0.c2)))) AND ((MIN(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((t0.c0)) NOT BETWEEN ((MAX(COUNT(t0.c2)))) AND ((MIN(t0.c0))))) ISNULL);
SELECT t0.c1, t0.c0, t0.c2 FROM t0;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 WHERE (CASE '>-B*{'  WHEN (t0.c0 IN ()) THEN CASE WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END ELSE (((t0.c1)) BETWEEN ((t0.c1)) AND ((t0.c1))) END) UNION ALL SELECT t0.c1, t0.c0, t0.c2 FROM t0 WHERE ((NOT (CASE '>-B*{'  WHEN (t0.c0 IN ()) THEN CASE WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END ELSE (((t0.c1)) BETWEEN ((t0.c1)) AND ((t0.c1))) END))) UNION ALL SELECT t0.c1, t0.c0, t0.c2 FROM t0 WHERE (((CASE '>-B*{'  WHEN (t0.c0 IN ()) THEN CASE WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END ELSE (((t0.c1)) BETWEEN ((t0.c1)) AND ((t0.c1))) END) ISNULL));
SELECT t0.c1, t0.c0, t0.c2 FROM t0;
SELECT DISTINCT t0.c1, v0.c0 FROM t0, v0;
SELECT DISTINCT t0.c1, v0.c0 FROM t0, v0 WHERE (((((x'2f70')OR(0.7811971231384431)))OR(((t0.c1) NOT NULL)))) UNION SELECT DISTINCT t0.c1, v0.c0 FROM t0, v0 WHERE ((NOT (((((x'2f70')OR(0.7811971231384431)))OR(((t0.c1) NOT NULL)))))) UNION SELECT DISTINCT t0.c1, v0.c0 FROM t0, v0 WHERE (((((((x'2f70')OR(0.7811971231384431)))OR(((t0.c1) NOT NULL)))) ISNULL));
SELECT DISTINCT t0.c1, v0.c0 FROM t0, v0;
SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, t0 WHERE ((((v0.c0) NOT NULL) IN ())) GROUP BY t0.c0 UNION SELECT t0.c0 FROM v0, t0 WHERE ((NOT ((((v0.c0) NOT NULL) IN ())))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM v0, t0 WHERE ((((((v0.c0) NOT NULL) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(COUNT(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(COUNT(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(COUNT(v0.c0))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((UNLIKELY(t0.c1)) IS FALSE)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((UNLIKELY(t0.c1)) IS FALSE)))) UNION SELECT DISTINCT * FROM t0 WHERE (((((UNLIKELY(t0.c1)) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c1, v0.c0 FROM t0 NATURAL JOIN v0 GROUP BY t0.c1, v0.c0;
SELECT ALL t0.c1, v0.c0 FROM t0 NATURAL JOIN v0 WHERE (CASE WHEN t0.c2 THEN t0.c1 END COLLATE RTRIM) GROUP BY t0.c1, v0.c0 UNION SELECT t0.c1, v0.c0 FROM t0 NATURAL JOIN v0 WHERE ((NOT (CASE WHEN t0.c2 THEN t0.c1 END COLLATE RTRIM))) GROUP BY t0.c1, v0.c0 UNION SELECT ALL t0.c1, v0.c0 FROM t0 NATURAL JOIN v0 WHERE (((CASE WHEN t0.c2 THEN t0.c1 END COLLATE RTRIM) ISNULL)) GROUP BY t0.c1, v0.c0;
SELECT ALL t0.c1, v0.c0 FROM t0 NATURAL JOIN v0 GROUP BY t0.c1, v0.c0;
SELECT v0.c0, t0.c2, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c1;
SELECT ALL v0.c0, t0.c2, t0.c1 FROM t0, v0 NOT INDEXED GROUP BY v0.c0, t0.c2, t0.c1 HAVING MIN(CASE WHEN t0.c0 THEN t0.c0 END) UNION ALL SELECT ALL v0.c0, t0.c2, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c1 HAVING (NOT (MIN(CASE WHEN t0.c0 THEN t0.c0 END))) UNION ALL SELECT v0.c0, t0.c2, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c1 HAVING ((MIN(CASE WHEN t0.c0 THEN t0.c0 END)) ISNULL);
SELECT v0.c0, t0.c2, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c1;
SELECT ALL v0.c0, t0.c2, t0.c1 FROM t0, v0 NOT INDEXED GROUP BY v0.c0, t0.c2, t0.c1 HAVING MIN(CASE WHEN t0.c0 THEN t0.c0 END) UNION ALL SELECT ALL v0.c0, t0.c2, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c1 HAVING (NOT (MIN(CASE WHEN t0.c0 THEN t0.c0 END))) UNION ALL SELECT v0.c0, t0.c2, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c1 HAVING ((MIN(CASE WHEN t0.c0 THEN t0.c0 END)) ISNULL);
SELECT v0.c0, t0.c2, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c1;
SELECT t0.c1, t0.c2 FROM t0;
SELECT ALL t0.c1, t0.c2 FROM t0 WHERE (((((((((t0.c2)AND(t0.c2)))AND(t0.c0)))AND(t0.c1 COLLATE RTRIM)))AND(((((t0.c0)AND(t0.c1)))OR(t0.c2))))) UNION ALL SELECT t0.c1, t0.c2 FROM t0 WHERE ((NOT (((((((((t0.c2)AND(t0.c2)))AND(t0.c0)))AND(t0.c1 COLLATE RTRIM)))AND(((((t0.c0)AND(t0.c1)))OR(t0.c2))))))) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0 WHERE (((((((((((t0.c2)AND(t0.c2)))AND(t0.c0)))AND(t0.c1 COLLATE RTRIM)))AND(((((t0.c0)AND(t0.c1)))OR(t0.c2))))) ISNULL));
SELECT t0.c1, t0.c2 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN (t0.c1 IN ()) THEN (((('0.9344831988890189')OR(t0.c1)))OR(t0.c2)) END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE WHEN (t0.c1 IN ()) THEN (((('0.9344831988890189')OR(t0.c1)))OR(t0.c2)) END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN (t0.c1 IN ()) THEN (((('0.9344831988890189')OR(t0.c1)))OR(t0.c2)) END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT v0.c0 FROM t0 INDEXED BY i89, v0 GROUP BY v0.c0;
SELECT t0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c0, t0.c2 HAVING (NOT (SUM(COUNT(TOTAL(v0.c0))))) UNION ALL SELECT t0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c0, t0.c2 HAVING (NOT ((NOT (SUM(COUNT(TOTAL(v0.c0))))))) UNION ALL SELECT t0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c0, t0.c2 HAVING (((NOT (SUM(COUNT(TOTAL(v0.c0)))))) ISNULL);
SELECT ALL v0.c0, t0.c0, t0.c2 FROM v0, t0;
SELECT v0.c0, t0.c0, t0.c2 FROM v0, t0 WHERE ((((((t0.c1))<((t0.c0))))/((((t0.c0))>((v0.c0)))))) UNION ALL SELECT ALL v0.c0, t0.c0, t0.c2 FROM v0, t0 WHERE ((NOT ((((((t0.c1))<((t0.c0))))/((((t0.c0))>((v0.c0)))))))) UNION ALL SELECT ALL v0.c0, t0.c0, t0.c2 FROM v0, t0 WHERE ((((((((t0.c1))<((t0.c0))))/((((t0.c0))>((v0.c0)))))) ISNULL));
SELECT ALL v0.c0, t0.c0, t0.c2 FROM v0, t0;
SELECT DISTINCT t0.c1, t0.c0, v0.c0, t0.c2 FROM t0, v0;
SELECT DISTINCT t0.c1, t0.c0, v0.c0, t0.c2 FROM t0, v0 WHERE (TYPEOF(CASE t0.c0  WHEN t0.c2 THEN t0.c2 END)) UNION SELECT DISTINCT t0.c1, t0.c0, v0.c0, t0.c2 FROM t0, v0 WHERE ((NOT (TYPEOF(CASE t0.c0  WHEN t0.c2 THEN t0.c2 END)))) UNION SELECT DISTINCT t0.c1, t0.c0, v0.c0, t0.c2 FROM t0, v0 WHERE (((TYPEOF(CASE t0.c0  WHEN t0.c2 THEN t0.c2 END)) ISNULL));
SELECT DISTINCT t0.c1, t0.c0, v0.c0, t0.c2 FROM t0, v0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0)AND(t0.c2))) IS TRUE)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)AND(t0.c2))) IS TRUE)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0)AND(t0.c2))) IS TRUE)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING (((t0.c0, MIN(t0.c2), t0.c1)) BETWEEN ((TOTAL(t0.c1), SUM(t0.c2), MIN(AVG(t0.c2)))) AND ((t0.c0 COLLATE RTRIM, SUM(t0.c2), MAX(t0.c1)))) UNION ALL SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT ((((t0.c0, MIN(t0.c2), t0.c1)) BETWEEN ((TOTAL(t0.c1), SUM(t0.c2), MIN(AVG(t0.c2)))) AND ((t0.c0 COLLATE RTRIM, SUM(t0.c2), MAX(t0.c1)))))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING (((((t0.c0, MIN(t0.c2), t0.c1)) BETWEEN ((TOTAL(t0.c1), SUM(t0.c2), MIN(AVG(t0.c2)))) AND ((t0.c0 COLLATE RTRIM, SUM(t0.c2), MAX(t0.c1))))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (CAST(0.6684522029250608 AS INTEGER)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CAST(0.6684522029250608 AS INTEGER)))) UNION ALL SELECT ALL * FROM t0 WHERE (((CAST(0.6684522029250608 AS INTEGER)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c0, t0.c2, t0.c1, v0.c0 FROM v0, t0;
SELECT DISTINCT t0.c0, t0.c2, t0.c1, v0.c0 FROM v0, t0 WHERE (((v0.c0) NOTNULL)) UNION SELECT DISTINCT t0.c0, t0.c2, t0.c1, v0.c0 FROM v0, t0 WHERE ((NOT (((v0.c0) NOTNULL)))) UNION SELECT DISTINCT t0.c0, t0.c2, t0.c1, v0.c0 FROM v0, t0 WHERE (((((v0.c0) NOTNULL)) ISNULL));
SELECT DISTINCT t0.c0, t0.c2, t0.c1, v0.c0 FROM v0, t0;
SELECT t0.c2 FROM t0 LEFT OUTER JOIN v0 ON (- (((v0.c0) IS FALSE))) GROUP BY t0.c2;
SELECT t0.c2 FROM t0 LEFT OUTER JOIN v0 ON (- (((v0.c0) IS FALSE))) WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((v0.c0)))) ISNULL)) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 LEFT OUTER JOIN v0 ON (- (((v0.c0) IS FALSE))) WHERE ((NOT ((((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((v0.c0)))) ISNULL)))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 LEFT OUTER JOIN v0 ON (- (((v0.c0) IS FALSE))) WHERE ((((((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((v0.c0)))) ISNULL)) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM t0 LEFT OUTER JOIN v0 ON (- (((v0.c0) IS FALSE))) GROUP BY t0.c2;
SELECT t0.c0, v0.c0 FROM t0 CROSS JOIN v0 ON (((t0.c0)<=(t0.c0)) IN ()) GROUP BY t0.c0, v0.c0;
SELECT ALL t0.c0, v0.c0 FROM t0 CROSS JOIN v0 ON (((t0.c0)<=(t0.c0)) IN ()) GROUP BY t0.c0, v0.c0 HAVING MAX(CASE t0.c2  WHEN t0.c0 THEN t0.c0 WHEN MIN(v0.c0) THEN NULL WHEN SUM(v0.c0) THEN COUNT(*) END) UNION ALL SELECT t0.c0, v0.c0 FROM t0 CROSS JOIN v0 ON (((t0.c0)<=(t0.c0)) IN ()) GROUP BY t0.c0, v0.c0 HAVING (NOT (MAX(CASE t0.c2  WHEN t0.c0 THEN t0.c0 WHEN MIN(v0.c0) THEN NULL WHEN SUM(v0.c0) THEN COUNT(*) END))) UNION ALL SELECT t0.c0, v0.c0 FROM t0 CROSS JOIN v0 ON (((t0.c0)<=(t0.c0)) IN ()) GROUP BY t0.c0, v0.c0 HAVING ((MAX(CASE t0.c2  WHEN t0.c0 THEN t0.c0 WHEN MIN(v0.c0) THEN NULL WHEN SUM(v0.c0) THEN COUNT(*) END)) ISNULL);
SELECT MAX(CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0)%(v0.c0)) END) FROM v0;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR((NOT (0x4002362d)))))AND((v0.c0 IN (v0.c0, v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR((NOT (0x4002362d)))))AND((v0.c0 IN (v0.c0, v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR((NOT (0x4002362d)))))AND((v0.c0 IN (v0.c0, v0.c0))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0 NOT INDEXED, t0 WHERE (((((((t0.c0)AND(t0.c1)))OR(v0.c0))) BETWEEN ((NOT (t0.c1))) AND ((~ (v0.c0))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (((((((t0.c0)AND(t0.c1)))OR(v0.c0))) BETWEEN ((NOT (t0.c1))) AND ((~ (v0.c0))))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((((((((t0.c0)AND(t0.c1)))OR(v0.c0))) BETWEEN ((NOT (t0.c1))) AND ((~ (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT t0.c0, t0.c1, t0.c2 FROM t0 WHERE (LOWER((t0.c0 IN ()))) GROUP BY t0.c0, t0.c1, t0.c2 UNION SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((NOT (LOWER((t0.c0 IN ()))))) GROUP BY t0.c0, t0.c1, t0.c2 UNION SELECT t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((LOWER((t0.c0 IN ()))) ISNULL)) GROUP BY t0.c0, t0.c1, t0.c2;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (((((MAX(MIN(COUNT(*))))OR('-803304195')))OR(SUM(SUM(SUM(t0.c1))))) IN ()) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (NOT ((((((MAX(MIN(COUNT(*))))OR('-803304195')))OR(SUM(SUM(SUM(t0.c1))))) IN ()))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (((((((MAX(MIN(COUNT(*))))OR('-803304195')))OR(SUM(SUM(SUM(t0.c1))))) IN ())) ISNULL);
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (((((MAX(MIN(COUNT(*))))OR('-803304195')))OR(SUM(SUM(SUM(t0.c1))))) IN ()) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (NOT ((((((MAX(MIN(COUNT(*))))OR('-803304195')))OR(SUM(SUM(SUM(t0.c1))))) IN ()))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (((((((MAX(MIN(COUNT(*))))OR('-803304195')))OR(SUM(SUM(SUM(t0.c1))))) IN ())) ISNULL);
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT t0.c1 FROM t0;
SELECT DISTINCT t0.c1 FROM t0 WHERE (CASE t0.c1  WHEN NULL THEN ((t0.c2) NOT NULL) END) UNION SELECT DISTINCT t0.c1 FROM t0 WHERE ((NOT (CASE t0.c1  WHEN NULL THEN ((t0.c2) NOT NULL) END))) UNION SELECT DISTINCT t0.c1 FROM t0 WHERE (((CASE t0.c1  WHEN NULL THEN ((t0.c2) NOT NULL) END) ISNULL));
SELECT DISTINCT t0.c1 FROM t0;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((((t0.c0)) BETWEEN ((CAST(t0.c1 AS TEXT))) AND (((t0.c2 IN ()))))) GROUP BY t0.c0, t0.c2, t0.c1 UNION SELECT t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((NOT ((((t0.c0)) BETWEEN ((CAST(t0.c1 AS TEXT))) AND (((t0.c2 IN ()))))))) GROUP BY t0.c0, t0.c2, t0.c1 UNION SELECT t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((((((t0.c0)) BETWEEN ((CAST(t0.c1 AS TEXT))) AND (((t0.c2 IN ()))))) ISNULL)) GROUP BY t0.c0, t0.c2, t0.c1;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT ALL t0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c0, t0.c2 HAVING TOTAL(MIN(MIN(v0.c0))) UNION ALL SELECT ALL t0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c0, t0.c2 HAVING (NOT (TOTAL(MIN(MIN(v0.c0))))) UNION ALL SELECT t0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c0, t0.c2 HAVING ((TOTAL(MIN(MIN(v0.c0)))) ISNULL);
SELECT ALL t0.c2, v0.c0, t0.c1, t0.c0 FROM t0, v0;
SELECT ALL t0.c2, v0.c0, t0.c1, t0.c0 FROM t0, v0 WHERE ((TRIM(DISTINCT t0.c0) IN ())) UNION ALL SELECT ALL t0.c2, v0.c0, t0.c1, t0.c0 FROM t0, v0 WHERE ((NOT ((TRIM(DISTINCT t0.c0) IN ())))) UNION ALL SELECT t0.c2, v0.c0, t0.c1, t0.c0 FROM t0, v0 WHERE ((((TRIM(DISTINCT t0.c0) IN ())) ISNULL));
SELECT ALL t0.c2, v0.c0, t0.c1, t0.c0 FROM t0, v0;
SELECT DISTINCT t0.c1 FROM v0, t0;
SELECT DISTINCT t0.c1 FROM v0, t0 WHERE (((0.5649109944640295) NOT BETWEEN (t0.c1) AND ((~ (v0.c0))))) UNION SELECT DISTINCT t0.c1 FROM v0, t0 WHERE ((NOT (((0.5649109944640295) NOT BETWEEN (t0.c1) AND ((~ (v0.c0))))))) UNION SELECT DISTINCT t0.c1 FROM v0, t0 WHERE (((((0.5649109944640295) NOT BETWEEN (t0.c1) AND ((~ (v0.c0))))) ISNULL));
SELECT DISTINCT t0.c1 FROM v0, t0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)||(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)||(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)||(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c2 FROM t0, v0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0, v0 GROUP BY t0.c2 HAVING MAX(COUNT(SUM(t0.c1))) UNION ALL SELECT ALL t0.c2 FROM t0, v0 GROUP BY t0.c2 HAVING (NOT (MAX(COUNT(SUM(t0.c1))))) UNION ALL SELECT ALL t0.c2 FROM t0, v0 GROUP BY t0.c2 HAVING ((MAX(COUNT(SUM(t0.c1)))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (HEX(((v0.c0)-(v0.c0)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (HEX(((v0.c0)-(v0.c0)))))) UNION ALL SELECT ALL * FROM v0 WHERE (((HEX(((v0.c0)-(v0.c0)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (t0.c1) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (t0.c1))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((t0.c1) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0;
SELECT ALL v0.c0, t0.c0 FROM t0, v0 WHERE ('BV\rR쿉C7') GROUP BY v0.c0, t0.c0 UNION SELECT v0.c0, t0.c0 FROM t0, v0 WHERE ((NOT ('BV\rR쿉C7'))) GROUP BY v0.c0, t0.c0 UNION SELECT ALL v0.c0, t0.c0 FROM t0, v0 WHERE ((('BV\rR쿉C7') ISNULL)) GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0;
SELECT ALL t0.c1 FROM t0 INNER JOIN v0 ON (t0.c0 IN ((t0.c1 IN ()))) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 INNER JOIN v0 ON (t0.c0 IN ((t0.c1 IN ()))) GROUP BY t0.c1 HAVING ((CASE WHEN x'd7c0' THEN t0.c2 ELSE COUNT(*) END) NOT BETWEEN (GROUP_CONCAT(COUNT(*))) AND (((t0.c0) BETWEEN (COUNT(t0.c2)) AND (t0.c2)))) UNION ALL SELECT t0.c1 FROM t0 INNER JOIN v0 ON (t0.c0 IN ((t0.c1 IN ()))) GROUP BY t0.c1 HAVING (NOT (((CASE WHEN x'd7c0' THEN t0.c2 ELSE COUNT(*) END) NOT BETWEEN (GROUP_CONCAT(COUNT(*))) AND (((t0.c0) BETWEEN (COUNT(t0.c2)) AND (t0.c2)))))) UNION ALL SELECT t0.c1 FROM t0 INNER JOIN v0 ON (t0.c0 IN ((t0.c1 IN ()))) GROUP BY t0.c1 HAVING ((((CASE WHEN x'd7c0' THEN t0.c2 ELSE COUNT(*) END) NOT BETWEEN (GROUP_CONCAT(COUNT(*))) AND (((t0.c0) BETWEEN (COUNT(t0.c2)) AND (t0.c2))))) ISNULL);
SELECT ALL t0.c2, t0.c0, t0.c1, v0.c0 FROM v0, t0;
SELECT ALL t0.c2, t0.c0, t0.c1, v0.c0 FROM v0, t0 WHERE (((((0x2702a508) NOT BETWEEN (v0.c0) AND (0.5350863598124986))) NOT BETWEEN (CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN v0.c0 END) AND (''))) UNION ALL SELECT t0.c2, t0.c0, t0.c1, v0.c0 FROM v0, t0 WHERE ((NOT (((((0X2702a508) NOT BETWEEN (v0.c0) AND (0.5350863598124986))) NOT BETWEEN (CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN v0.c0 END) AND (''))))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1, v0.c0 FROM v0, t0 WHERE (((((((0X2702a508) NOT BETWEEN (v0.c0) AND (0.5350863598124986))) NOT BETWEEN (CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN v0.c0 END) AND (''))) ISNULL));
SELECT ALL t0.c2, t0.c0, t0.c1, v0.c0 FROM v0, t0;
SELECT DISTINCT v0.c0 FROM t0, v0;
SELECT DISTINCT v0.c0 FROM t0, v0 WHERE ((+ (((v0.c0)<=(t0.c2))))) UNION SELECT DISTINCT v0.c0 FROM t0, v0 WHERE ((NOT ((+ (((v0.c0)<=(t0.c2))))))) UNION SELECT DISTINCT v0.c0 FROM t0, v0 WHERE ((((+ (((v0.c0)<=(t0.c2))))) ISNULL));
SELECT DISTINCT v0.c0 FROM t0, v0;
SELECT t0.c1, t0.c0 FROM t0 CROSS JOIN v0 ON LIKELY(CASE WHEN t0.c1 THEN t0.c2 END) GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0 CROSS JOIN v0 ON LIKELY(CASE WHEN t0.c1 THEN t0.c2 END) WHERE (v0.c0) GROUP BY t0.c1, t0.c0 UNION SELECT ALL t0.c1, t0.c0 FROM t0 CROSS JOIN v0 ON LIKELY(CASE WHEN t0.c1 THEN t0.c2 END) WHERE ((NOT (v0.c0))) GROUP BY t0.c1, t0.c0 UNION SELECT ALL t0.c1, t0.c0 FROM t0 CROSS JOIN v0 ON LIKELY(CASE WHEN t0.c1 THEN t0.c2 END) WHERE (((v0.c0) ISNULL)) GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0 CROSS JOIN v0 ON LIKELY(CASE WHEN t0.c1 THEN t0.c2 END) GROUP BY t0.c1, t0.c0;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING MIN(AVG(t0.c0)) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (NOT (MIN(AVG(t0.c0)))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING ((MIN(AVG(t0.c0))) ISNULL);
SELECT ALL * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE (((((~ (v0.c0))))<(((t0.c0 IN (NULL)))))) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((NOT (((((~ (v0.c0))))<(((t0.c0 IN (NULL)))))))) UNION ALL SELECT * FROM v0, t0 WHERE (((((((~ (v0.c0))))<(((t0.c0 IN (NULL)))))) ISNULL));
SELECT ALL * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE ((((~ (t0.c1)))>>(v0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT ((((~ (t0.c1)))>>(v0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((((((~ (t0.c1)))>>(v0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((CAST(t0.c2 AS INTEGER))>(((t0.c0) IS FALSE)))) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT (((CAST(t0.c2 AS INTEGER))>(((t0.c0) IS FALSE)))))) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((((CAST(t0.c2 AS INTEGER))>(((t0.c0) IS FALSE)))) ISNULL)) GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, t0.c0 FROM v0, t0;
SELECT ALL v0.c0, t0.c0 FROM v0, t0 WHERE (CAST(((v0.c0)<>(t0.c1)) AS REAL)) UNION ALL SELECT v0.c0, t0.c0 FROM v0, t0 WHERE ((NOT (CAST(((v0.c0)!=(t0.c1)) AS REAL)))) UNION ALL SELECT ALL v0.c0, t0.c0 FROM v0, t0 WHERE (((CAST(((v0.c0)<>(t0.c1)) AS REAL)) ISNULL));
SELECT v0.c0, t0.c0 FROM v0, t0;
SELECT DISTINCT t0.c2, t0.c0 FROM t0;
SELECT DISTINCT t0.c2, t0.c0 FROM t0 WHERE (IFNULL(NULLIF(t0.c1, t0.c0), CASE t0.c1  WHEN t0.c0 THEN t0.c2 ELSE NULL END)) UNION SELECT DISTINCT t0.c2, t0.c0 FROM t0 WHERE ((NOT (IFNULL(NULLIF(t0.c1, t0.c0), CASE t0.c1  WHEN t0.c0 THEN t0.c2 ELSE NULL END)))) UNION SELECT DISTINCT t0.c2, t0.c0 FROM t0 WHERE (((IFNULL(NULLIF(t0.c1, t0.c0), CASE t0.c1  WHEN t0.c0 THEN t0.c2 ELSE NULL END)) ISNULL));
SELECT DISTINCT t0.c2, t0.c0 FROM t0;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN t0.c0 ELSE 'uV䎮SH*d' END)>>(((((t0.c0)OR(v0.c0)))OR(t0.c1)))) GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN t0.c0 ELSE 'uV䎮SH*d' END)>>(((((t0.c0)OR(v0.c0)))OR(t0.c1)))) WHERE ((((v0.c0 IN ()))<<(((t0.c1) IS FALSE)))) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN t0.c0 ELSE 'uV䎮SH*d' END)>>(((((t0.c0)OR(v0.c0)))OR(t0.c1)))) WHERE ((NOT ((((v0.c0 IN ()))<<(((t0.c1) IS FALSE)))))) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT t0.c1, t0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN t0.c0 ELSE 'uV䎮SH*d' END)>>(((((t0.c0)OR(v0.c0)))OR(t0.c1)))) WHERE ((((((v0.c0 IN ()))<<(((t0.c1) IS FALSE)))) ISNULL)) GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN t0.c0 ELSE 'uV䎮SH*d' END)>>(((((t0.c0)OR(v0.c0)))OR(t0.c1)))) GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c0, v0.c0;
SELECT t0.c1, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c0, v0.c0 HAVING GROUP_CONCAT((~ (MAX(t0.c1)))) UNION ALL SELECT t0.c1, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c0, v0.c0 HAVING (NOT (GROUP_CONCAT((~ (MAX(t0.c1)))))) UNION ALL SELECT ALL t0.c1, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c0, v0.c0 HAVING ((GROUP_CONCAT((~ (MAX(t0.c1))))) ISNULL);
SELECT t0.c2, t0.c0, t0.c1 FROM t0;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((((t0.c1)AND(NULL))) BETWEEN ((('0.889742689412914')*(x''))) AND (CASE t0.c2  WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c1 END))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT (((((t0.c1)AND(NULL))) BETWEEN ((('0.889742689412914')*(x''))) AND (CASE t0.c2  WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c1 END))))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((((((t0.c1)AND(NULL))) BETWEEN ((('0.889742689412914')*(x''))) AND (CASE t0.c2  WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c1 END))) ISNULL));
SELECT t0.c2, t0.c0, t0.c1 FROM t0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (x'') UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT t0.c1, v0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c1, v0.c0, t0.c2;
SELECT t0.c1, v0.c0, t0.c2 FROM v0, t0 WHERE ((((v0.c0)) BETWEEN (((NOT (t0.c0)))) AND (((NOT (t0.c2)))))) GROUP BY t0.c1, v0.c0, t0.c2 UNION SELECT ALL t0.c1, v0.c0, t0.c2 FROM v0, t0 WHERE ((NOT ((((v0.c0)) BETWEEN (((NOT (t0.c0)))) AND (((NOT (t0.c2)))))))) GROUP BY t0.c1, v0.c0, t0.c2 UNION SELECT ALL t0.c1, v0.c0, t0.c2 FROM v0, t0 WHERE ((((((v0.c0)) BETWEEN (((NOT (t0.c0)))) AND (((NOT (t0.c2)))))) ISNULL)) GROUP BY t0.c1, v0.c0, t0.c2;
SELECT t0.c1, v0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c1, v0.c0, t0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(MAX(TOTAL(GROUP_CONCAT(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(MAX(TOTAL(GROUP_CONCAT(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(MAX(TOTAL(GROUP_CONCAT(v0.c0))))) ISNULL);
SELECT ALL MAX((((((t0.c1)>=(t0.c0)), (v0.c0 IN (t0.c0)), v0.c0, (v0.c0 IN ()), ((t0.c0) BETWEEN (t0.c1) AND (t0.c1))))<((UPPER(t0.c0), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END, ((t0.c0)IS(t0.c0)), t0.c0 COLLATE BINARY, CAST(v0.c0 AS REAL))))) FROM v0, t0 ORDER BY ((((t0.c1)||(t0.c0)))*(v0.c0 COLLATE RTRIM))  NULLS LAST, TRIM(DISTINCT ((((((((((((t0.c1)AND(t0.c2)))OR(t0.c0)))OR(t0.c1)))AND(-7.12621138E8)))OR(t0.c0)))AND(v0.c0)))  NULLS FIRST;
SELECT ALL * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE ('-2044374394') UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT ('-2044374394'))) UNION ALL SELECT * FROM t0, v0 WHERE ((('-2044374394') ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((NULL) NOT BETWEEN ((((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (CAST(v0.c0 AS TEXT)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((NULL) NOT BETWEEN ((((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (CAST(v0.c0 AS TEXT)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((NULL) NOT BETWEEN ((((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (CAST(v0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(TRIM(v0.c0) AS REAL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CAST(TRIM(v0.c0) AS REAL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST(TRIM(v0.c0) AS REAL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING ((((((t0.c2) BETWEEN (SUM(t0.c2)) AND (t0.c2)))OR((('S1')AND(COUNT(COUNT(AVG(t0.c1))))))))OR(t0.c1 COLLATE RTRIM)) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING (NOT (((((((t0.c2) BETWEEN (SUM(t0.c2)) AND (t0.c2)))OR((('S1')AND(COUNT(COUNT(AVG(t0.c1))))))))OR(t0.c1 COLLATE RTRIM)))) UNION ALL SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING ((((((((t0.c2) BETWEEN (SUM(t0.c2)) AND (t0.c2)))OR((('S1')AND(COUNT(COUNT(AVG(t0.c1))))))))OR(t0.c1 COLLATE RTRIM))) ISNULL);
SELECT v0.c0, t0.c1, t0.c2 FROM v0 FULL OUTER JOIN t0 ON (~ (CASE t0.c1  WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c1 ELSE 0x3e49f3b END));
SELECT v0.c0, t0.c1, t0.c2 FROM v0 FULL OUTER JOIN t0 ON (~ (CASE t0.c1  WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c1 ELSE 0x3e49f3b END)) WHERE ((((v0.c0 IN (t0.c0)))IS(NULL))) UNION ALL SELECT ALL v0.c0, t0.c1, t0.c2 FROM v0 FULL OUTER JOIN t0 ON (~ (CASE t0.c1  WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c1 ELSE 0x3e49f3b END)) WHERE ((NOT ((((v0.c0 IN (t0.c0)))IS(NULL))))) UNION ALL SELECT ALL v0.c0, t0.c1, t0.c2 FROM v0 FULL OUTER JOIN t0 ON (~ (CASE t0.c1  WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c1 ELSE 0X3e49f3b END)) WHERE ((((((v0.c0 IN (t0.c0)))IS(NULL))) ISNULL));
SELECT v0.c0, t0.c1, t0.c2 FROM v0 FULL OUTER JOIN t0 ON (~ (CASE t0.c1  WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c1 ELSE 0x3e49f3b END));
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (((t0.c0)/(t0.c1)) COLLATE BINARY COLLATE BINARY) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (((t0.c0)/(t0.c1)) COLLATE BINARY COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((((t0.c0)/(t0.c1)) COLLATE BINARY COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT ALL t0.c1, t0.c2 FROM t0, v0 GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0, v0 WHERE ((CAST(v0.c0 AS INTEGER) IN ())) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM t0, v0 WHERE ((NOT ((CAST(v0.c0 AS INTEGER) IN ())))) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM t0, v0 WHERE ((((CAST(v0.c0 AS INTEGER) IN ())) ISNULL)) GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0, v0 GROUP BY t0.c1, t0.c2;
SELECT v0.c0, t0.c2 FROM t0 FULL OUTER JOIN v0 ON (~ ((~ (t0.c0)))) GROUP BY v0.c0, t0.c2;
SELECT v0.c0, t0.c2 FROM t0 FULL OUTER JOIN v0 ON (~ ((~ (t0.c0)))) GROUP BY v0.c0, t0.c2 HAVING ((x'') BETWEEN (((COUNT(MAX(MAX(t0.c1)))) IS TRUE)) AND ((t0.c2 IN (COUNT(t0.c0))))) UNION ALL SELECT ALL v0.c0, t0.c2 FROM t0 FULL OUTER JOIN v0 ON (~ ((~ (t0.c0)))) GROUP BY v0.c0, t0.c2 HAVING (NOT (((x'') BETWEEN (((COUNT(MAX(MAX(t0.c1)))) IS TRUE)) AND ((t0.c2 IN (COUNT(t0.c0))))))) UNION ALL SELECT ALL v0.c0, t0.c2 FROM t0 FULL OUTER JOIN v0 ON (~ ((~ (t0.c0)))) GROUP BY v0.c0, t0.c2 HAVING ((((x'') BETWEEN (((COUNT(MAX(MAX(t0.c1)))) IS TRUE)) AND ((t0.c2 IN (COUNT(t0.c0)))))) ISNULL);
SELECT MAX(t0.c1) FROM t0;
SELECT t0.c2, t0.c0, t0.c1 FROM t0, v0;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0, v0 WHERE (((v0.c0 COLLATE RTRIM) IS FALSE)) UNION ALL SELECT t0.c2, t0.c0, t0.c1 FROM t0, v0 WHERE ((NOT (((v0.c0 COLLATE RTRIM) IS FALSE)))) UNION ALL SELECT t0.c2, t0.c0, t0.c1 FROM t0, v0 WHERE (((((v0.c0 COLLATE RTRIM) IS FALSE)) ISNULL));
SELECT t0.c2, t0.c0, t0.c1 FROM t0, v0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (CAST((((t0.c0, v0.c0, t0.c1))<=((NULL, t0.c2, x''))) AS BLOB)) UNION SELECT DISTINCT * FROM v0 NOT INDEXED, t0 WHERE ((NOT (CAST((((t0.c0, v0.c0, t0.c1))<=((NULL, t0.c2, x''))) AS BLOB)))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((CAST((((t0.c0, v0.c0, t0.c1))<=((NULL, t0.c2, x''))) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(t0.c1)))||(CAST(x'690f' AS INTEGER)))) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM t0 WHERE ((NOT (((((((t0.c0)AND(t0.c0)))AND(t0.c1)))||(CAST(x'690f' AS INTEGER)))))) GROUP BY t0.c2, t0.c0 UNION SELECT ALL t0.c2, t0.c0 FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))AND(t0.c1)))||(CAST(x'690f' AS INTEGER)))) ISNULL)) GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING (SUM(t0.c2) IN ()) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING (NOT ((SUM(t0.c2) IN ()))) UNION ALL SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING (((SUM(t0.c2) IN ())) ISNULL);
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING (SUM(t0.c2) IN ()) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING (NOT ((SUM(t0.c2) IN ()))) UNION ALL SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING (((SUM(t0.c2) IN ())) ISNULL);
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0)AND(v0.c0)) AS BLOB)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (CAST(((v0.c0)AND(v0.c0)) AS BLOB)))) UNION ALL SELECT ALL * FROM v0 WHERE (((CAST(((v0.c0)AND(v0.c0)) AS BLOB)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON ((((v0.c0)|(NULL))) NOT NULL);
SELECT DISTINCT t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON ((((v0.c0)|(NULL))) NOT NULL) WHERE (((json_array_length(t0.c2, v0.c0))&('2080318938'))) UNION SELECT DISTINCT t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON ((((v0.c0)|(NULL))) NOT NULL) WHERE ((NOT (((json_array_length(t0.c2, v0.c0))&('2080318938'))))) UNION SELECT DISTINCT t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON ((((v0.c0)|(NULL))) NOT NULL) WHERE (((((json_array_length(t0.c2, v0.c0))&('2080318938'))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON ((((v0.c0)|(NULL))) NOT NULL);
SELECT ALL t0.c0 FROM v0 CROSS JOIN t0 ON TRIM(t0.c1 COLLATE BINARY, (0xffffffffd39d28d6 IN (t0.c1))) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0 CROSS JOIN t0 ON TRIM(t0.c1 COLLATE BINARY, (0xffffffffd39d28d6 IN (t0.c1))) WHERE (CAST(t0.c0 AS TEXT)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM v0 CROSS JOIN t0 ON TRIM(t0.c1 COLLATE BINARY, (0xffffffffd39d28d6 IN (t0.c1))) WHERE ((NOT (CAST(t0.c0 AS TEXT)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM v0 CROSS JOIN t0 ON TRIM(t0.c1 COLLATE BINARY, (0xffffffffd39d28d6 IN (t0.c1))) WHERE (((CAST(t0.c0 AS TEXT)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0 CROSS JOIN t0 ON TRIM(t0.c1 COLLATE BINARY, (0xffffffffd39d28d6 IN (t0.c1))) GROUP BY t0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(SUM(SUM(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(SUM(SUM(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(SUM(SUM(v0.c0)))) ISNULL);
SELECT ALL * FROM v0 CROSS JOIN t0 ON t0.c1;
SELECT * FROM v0 CROSS JOIN t0 ON t0.c1 WHERE ((- (v0.c0))) UNION ALL SELECT * FROM v0 CROSS JOIN t0 ON t0.c1 WHERE ((NOT ((- (v0.c0))))) UNION ALL SELECT * FROM v0 CROSS JOIN t0 ON t0.c1 WHERE ((((- (v0.c0))) ISNULL));
SELECT ALL * FROM v0 CROSS JOIN t0 ON t0.c1;
SELECT DISTINCT v0.c0 FROM t0, v0;
SELECT DISTINCT v0.c0 FROM t0, v0 WHERE (((((t0.c0)<(v0.c0))) IS TRUE)) UNION SELECT DISTINCT v0.c0 FROM t0, v0 WHERE ((NOT (((((t0.c0)<(v0.c0))) IS TRUE)))) UNION SELECT DISTINCT v0.c0 FROM t0, v0 WHERE (((((((t0.c0)<(v0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT v0.c0 FROM t0, v0;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 WHERE ((((((((((t0.c2)OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))AND(t0.c2)) IN ((((t0.c0, t0.c0, t0.c1)) NOT BETWEEN ((t0.c1, t0.c1, t0.c2)) AND ((t0.c2, t0.c0, t0.c0)))))) GROUP BY t0.c0, t0.c1 UNION SELECT ALL t0.c0, t0.c1 FROM t0 WHERE ((NOT ((((((((((t0.c2)OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))AND(t0.c2)) IN ((((t0.c0, t0.c0, t0.c1)) NOT BETWEEN ((t0.c1, t0.c1, t0.c2)) AND ((t0.c2, t0.c0, t0.c0)))))))) GROUP BY t0.c0, t0.c1 UNION SELECT ALL t0.c0, t0.c1 FROM t0 WHERE ((((((((((((t0.c2)OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))AND(t0.c2)) IN ((((t0.c0, t0.c0, t0.c1)) NOT BETWEEN ((t0.c1, t0.c1, t0.c2)) AND ((t0.c2, t0.c0, t0.c0)))))) ISNULL)) GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c2, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c0 HAVING CASE TOTAL(SUM(SUM(SUM(MAX(COUNT(MAX(COUNT(*))))))))  WHEN MAX(t0.c2) THEN TOTAL(SUM(SUM(t0.c1))) END UNION ALL SELECT t0.c2, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c0 HAVING (NOT (CASE TOTAL(SUM(SUM(SUM(MAX(COUNT(MAX(COUNT(*))))))))  WHEN MAX(t0.c2) THEN TOTAL(SUM(SUM(t0.c1))) END)) UNION ALL SELECT t0.c2, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c0 HAVING ((CASE TOTAL(SUM(SUM(SUM(MAX(COUNT(MAX(COUNT(*))))))))  WHEN MAX(t0.c2) THEN TOTAL(SUM(SUM(t0.c1))) END) ISNULL);
SELECT * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE ((+ (((t0.c1)%(t0.c0))))) UNION ALL SELECT * FROM v0, t0 WHERE ((NOT ((+ (((t0.c1)%(t0.c0))))))) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((((+ (((t0.c1)%(t0.c0))))) ISNULL));
SELECT * FROM v0, t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (NULL) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM v0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0;
SELECT ALL v0.c0, t0.c2, t0.c0 FROM t0, v0 WHERE (((((((((((t0.c1) NOTNULL))AND(((t0.c2)!=(t0.c0)))))AND((((t0.c2, t0.c0, t0.c1))!=((x'439c', t0.c2, t0.c0))))))AND(CAST(t0.c1 AS BLOB))))OR(((((v0.c0)AND(t0.c2)))OR(t0.c0))))) GROUP BY v0.c0, t0.c2, t0.c0 UNION SELECT ALL v0.c0, t0.c2, t0.c0 FROM t0, v0 WHERE ((NOT (((((((((((t0.c1) NOTNULL))AND(((t0.c2)<>(t0.c0)))))AND((((t0.c2, t0.c0, t0.c1))!=((x'439c', t0.c2, t0.c0))))))AND(CAST(t0.c1 AS BLOB))))OR(((((v0.c0)AND(t0.c2)))OR(t0.c0))))))) GROUP BY v0.c0, t0.c2, t0.c0 UNION SELECT v0.c0, t0.c2, t0.c0 FROM t0, v0 WHERE (((((((((((((t0.c1) NOTNULL))AND(((t0.c2)<>(t0.c0)))))AND((((t0.c2, t0.c0, t0.c1))!=((x'439c', t0.c2, t0.c0))))))AND(CAST(t0.c1 AS BLOB))))OR(((((v0.c0)AND(t0.c2)))OR(t0.c0))))) ISNULL)) GROUP BY v0.c0, t0.c2, t0.c0;
SELECT ALL v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0;
SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2 HAVING COUNT(MAX(t0.c2)) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2 HAVING (NOT (COUNT(MAX(t0.c2)))) UNION ALL SELECT t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2 HAVING ((COUNT(MAX(t0.c2))) ISNULL);
SELECT MIN((((((0Xffffffff8f24826f) NOT NULL)))<=((((t0.c0)!=(t0.c0)))))) FROM t0 ORDER BY (+ (CAST(t0.c1 AS BLOB)))  NULLS FIRST;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 WHERE (63156669) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((NOT (63156669))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE (((63156669) ISNULL));
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0;
SELECT DISTINCT t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0;
SELECT DISTINCT t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 WHERE (t0.c0) UNION SELECT DISTINCT t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0;
SELECT t0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0, v0 WHERE (((v0.c0)<<(t0.c2)) COLLATE NOCASE) GROUP BY t0.c0, t0.c2 UNION SELECT ALL t0.c0, t0.c2 FROM t0, v0 WHERE ((NOT (((v0.c0)<<(t0.c2)) COLLATE NOCASE))) GROUP BY t0.c0, t0.c2 UNION SELECT t0.c0, t0.c2 FROM t0, v0 WHERE (((((v0.c0)<<(t0.c2)) COLLATE NOCASE) ISNULL)) GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c0, t0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((v0.c0)OR(AVG(v0.c0))))AND(v0.c0))) IS TRUE) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((((v0.c0)OR(AVG(v0.c0))))AND(v0.c0))) IS TRUE))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((v0.c0)OR(AVG(v0.c0))))AND(v0.c0))) IS TRUE)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((v0.c0)OR(AVG(v0.c0))))AND(v0.c0))) IS TRUE) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((((v0.c0)OR(AVG(v0.c0))))AND(v0.c0))) IS TRUE))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((v0.c0)OR(AVG(v0.c0))))AND(v0.c0))) IS TRUE)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c2, t0.c0, t0.c1 FROM t0;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((- (((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))))) UNION ALL SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT ((- (((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))))))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((((- (((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))))) ISNULL));
SELECT t0.c2, t0.c0, t0.c1 FROM t0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE CAST(v0.c0 AS TEXT)  WHEN ((v0.c0) IS FALSE) THEN (((((((((((('-1526085568')OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE CAST(v0.c0 AS TEXT)  WHEN ((v0.c0) IS FALSE) THEN (((((((((((('-1526085568')OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE CAST(v0.c0 AS TEXT)  WHEN ((v0.c0) IS FALSE) THEN (((((((((((('-1526085568')OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 WHERE (json_quote(t0.c0) COLLATE RTRIM COLLATE BINARY) GROUP BY t0.c2, t0.c1, t0.c0 UNION SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((NOT (json_quote(t0.c0) COLLATE RTRIM COLLATE BINARY))) GROUP BY t0.c2, t0.c1, t0.c0 UNION SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 WHERE (((json_quote(t0.c0) COLLATE RTRIM COLLATE BINARY) ISNULL)) GROUP BY t0.c2, t0.c1, t0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (- (SUM(MIN(COUNT(*))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((- (SUM(MIN(COUNT(*))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((- (SUM(MIN(COUNT(*)))))) ISNULL);
SELECT t0.c2 FROM t0;
SELECT t0.c2 FROM t0 WHERE (CAST(TRIM(DISTINCT t0.c1, t0.c1) AS TEXT)) UNION ALL SELECT t0.c2 FROM t0 WHERE ((NOT (CAST(TRIM(DISTINCT t0.c1, t0.c1) AS TEXT)))) UNION ALL SELECT t0.c2 FROM t0 WHERE (((CAST(TRIM(DISTINCT t0.c1, t0.c1) AS TEXT)) ISNULL));
SELECT t0.c2 FROM t0;
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0;
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE (CASE WHEN t0.c2 THEN t0.c0 END COLLATE NOCASE) UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((NOT (CASE WHEN t0.c2 THEN t0.c0 END COLLATE NOCASE))) UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE (((CASE WHEN t0.c2 THEN t0.c0 END COLLATE NOCASE) ISNULL));
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c2, v0.c0 FROM t0, v0 INDEXED BY i13 GROUP BY t0.c2, v0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((NULLIF(0.6847051914248415, v0.c0))LIKE(CAST(v0.c0 AS BLOB)))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((NULLIF(0.6847051914248415, v0.c0))LIKE(CAST(v0.c0 AS BLOB)))))) UNION ALL SELECT * FROM v0 WHERE (((((NULLIF(0.6847051914248415, v0.c0))LIKE(CAST(v0.c0 AS BLOB)))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT t0.c2, t0.c0, v0.c0 FROM v0 INDEXED BY i13 RIGHT OUTER JOIN t0 ON (v0.c0 IN ()) COLLATE BINARY;
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM t0 WHERE ((- (((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2))))) GROUP BY t0.c0, t0.c2 UNION SELECT ALL t0.c0, t0.c2 FROM t0 WHERE ((NOT ((- (((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2))))))) GROUP BY t0.c0, t0.c2 UNION SELECT ALL t0.c0, t0.c2 FROM t0 WHERE ((((- (((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2))))) ISNULL)) GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT t0.c2, v0.c0, t0.c1 FROM t0 LEFT OUTER JOIN v0 ON CASE WHEN ((t0.c2) BETWEEN (t0.c1) AND (v0.c0)) THEN CAST(v0.c0 AS NUMERIC) END GROUP BY t0.c2, v0.c0, t0.c1;
SELECT ALL t0.c2, v0.c0, t0.c1 FROM t0 LEFT OUTER JOIN v0 ON CASE WHEN ((t0.c2) BETWEEN (t0.c1) AND (v0.c0)) THEN CAST(v0.c0 AS NUMERIC) END GROUP BY t0.c2, v0.c0, t0.c1 HAVING ((MAX(COUNT(MAX(GROUP_CONCAT(COUNT(*))))))/(((v0.c0)IS NOT(COUNT(*))))) UNION ALL SELECT t0.c2, v0.c0, t0.c1 FROM t0 LEFT OUTER JOIN v0 ON CASE WHEN ((t0.c2) BETWEEN (t0.c1) AND (v0.c0)) THEN CAST(v0.c0 AS NUMERIC) END GROUP BY t0.c2, v0.c0, t0.c1 HAVING (NOT (((MAX(COUNT(MAX(GROUP_CONCAT(COUNT(*))))))/(((v0.c0)IS NOT(COUNT(*))))))) UNION ALL SELECT t0.c2, v0.c0, t0.c1 FROM t0 LEFT OUTER JOIN v0 ON CASE WHEN ((t0.c2) BETWEEN (t0.c1) AND (v0.c0)) THEN CAST(v0.c0 AS NUMERIC) END GROUP BY t0.c2, v0.c0, t0.c1 HAVING ((((MAX(COUNT(MAX(GROUP_CONCAT(COUNT(*))))))/(((v0.c0)IS NOT(COUNT(*)))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((v0.c0 IN ((6.3701385E8 IN ())))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((v0.c0 IN ((6.3701385E8 IN ())))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0 IN ((6.3701385E8 IN ())))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT v0.c0, t0.c0, t0.c1 FROM v0, t0;
SELECT DISTINCT v0.c0, t0.c0, t0.c1 FROM v0, t0 WHERE ('%R') UNION SELECT DISTINCT v0.c0, t0.c0, t0.c1 FROM v0, t0 WHERE ((NOT ('%R'))) UNION SELECT DISTINCT v0.c0, t0.c0, t0.c1 FROM v0, t0 WHERE ((('%R') ISNULL));
SELECT DISTINCT v0.c0, t0.c0, t0.c1 FROM v0, t0;
SELECT ALL t0.c2, t0.c0, t0.c1, v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (('388138840')>((t0.c2 IN ()))) GROUP BY t0.c2, t0.c0, t0.c1, v0.c0;
SELECT ALL t0.c2, t0.c0, t0.c1, v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (('388138840')>((t0.c2 IN ()))) WHERE (0.352121409250701) GROUP BY t0.c2, t0.c0, t0.c1, v0.c0 UNION SELECT ALL t0.c2, t0.c0, t0.c1, v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (('388138840')>((t0.c2 IN ()))) WHERE ((NOT (0.352121409250701))) GROUP BY t0.c2, t0.c0, t0.c1, v0.c0 UNION SELECT ALL t0.c2, t0.c0, t0.c1, v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (('388138840')>((t0.c2 IN ()))) WHERE (((0.352121409250701) ISNULL)) GROUP BY t0.c2, t0.c0, t0.c1, v0.c0;
SELECT ALL t0.c2, t0.c0, t0.c1, v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (('388138840')>((t0.c2 IN ()))) GROUP BY t0.c2, t0.c0, t0.c1, v0.c0;
SELECT t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0 HAVING TOTAL(((SUM(MIN(COUNT(*))))%(TOTAL(t0.c2)))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0 HAVING (NOT (TOTAL(((SUM(MIN(COUNT(*))))%(TOTAL(t0.c2)))))) UNION ALL SELECT t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0 HAVING ((TOTAL(((SUM(MIN(COUNT(*))))%(TOTAL(t0.c2))))) ISNULL);
SELECT ALL t0.c2, t0.c1 FROM t0, v0;
SELECT t0.c2, t0.c1 FROM t0, v0 WHERE ((+ (GLOB(2080318938, t0.c0)))) UNION ALL SELECT t0.c2, t0.c1 FROM t0, v0 WHERE ((NOT ((+ (GLOB(2080318938, t0.c0)))))) UNION ALL SELECT t0.c2, t0.c1 FROM t0, v0 WHERE ((((+ (GLOB(2080318938, t0.c0)))) ISNULL));
SELECT ALL t0.c2, t0.c1 FROM t0, v0;
SELECT DISTINCT t0.c0, t0.c1 FROM t0, v0;
SELECT DISTINCT t0.c0, t0.c1 FROM t0, v0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(v0.c0)))AND(LOWER(t0.c0)))) UNION SELECT DISTINCT t0.c0, t0.c1 FROM t0, v0 WHERE ((NOT (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(v0.c0)))AND(LOWER(t0.c0)))))) UNION SELECT DISTINCT t0.c0, t0.c1 FROM t0, v0 WHERE (((((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(v0.c0)))AND(LOWER(t0.c0)))) ISNULL));
SELECT DISTINCT t0.c0, t0.c1 FROM t0, v0;
SELECT ALL v0.c0 FROM v0, t0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t0 WHERE (ABS(((v0.c0)OR(t0.c1)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, t0 WHERE ((NOT (ABS(((v0.c0)OR(t0.c1)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, t0 WHERE (((ABS(((v0.c0)OR(t0.c1)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t0 GROUP BY v0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM v0 FULL OUTER JOIN t0 ON t0.c0;
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON t0.c0 WHERE (CASE WHEN ((t0.c1)<(v0.c0)) THEN ((v0.c0) NOT NULL) ELSE (~ (t0.c1)) END) UNION ALL SELECT * FROM v0 FULL OUTER JOIN t0 ON t0.c0 WHERE ((NOT (CASE WHEN ((t0.c1)<(v0.c0)) THEN ((v0.c0) NOT NULL) ELSE (~ (t0.c1)) END))) UNION ALL SELECT * FROM v0 FULL OUTER JOIN t0 ON t0.c0 WHERE (((CASE WHEN ((t0.c1)<(v0.c0)) THEN ((v0.c0) NOT NULL) ELSE (~ (t0.c1)) END) ISNULL));
SELECT * FROM v0 FULL OUTER JOIN t0 ON t0.c0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0 WHERE ((('	X') NOTNULL)) GROUP BY t0.c0, t0.c2 UNION SELECT t0.c0, t0.c2 FROM t0 WHERE ((NOT ((('	X') NOTNULL)))) GROUP BY t0.c0, t0.c2 UNION SELECT ALL t0.c0, t0.c2 FROM t0 WHERE ((((('	X') NOTNULL)) ISNULL)) GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING TOTAL((+ (COUNT(COUNT(COUNT(*)))))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING (NOT (TOTAL((+ (COUNT(COUNT(COUNT(*)))))))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING ((TOTAL((+ (COUNT(COUNT(COUNT(*))))))) ISNULL);
SELECT * FROM v0, t0;
SELECT * FROM v0, t0 WHERE (0.8456885133204293) UNION ALL SELECT * FROM v0, t0 WHERE ((NOT (0.8456885133204293))) UNION ALL SELECT * FROM v0, t0 WHERE (((0.8456885133204293) ISNULL));
SELECT * FROM v0, t0;
SELECT DISTINCT t0.c0, t0.c2 FROM t0, v0;
SELECT DISTINCT t0.c0, t0.c2 FROM t0, v0 WHERE ((+ ((((v0.c0, t0.c2, v0.c0)) NOT BETWEEN ((NULL, t0.c0, t0.c0)) AND ((v0.c0, v0.c0, t0.c2)))))) UNION SELECT DISTINCT t0.c0, t0.c2 FROM t0, v0 WHERE ((NOT ((+ ((((v0.c0, t0.c2, v0.c0)) NOT BETWEEN ((NULL, t0.c0, t0.c0)) AND ((v0.c0, v0.c0, t0.c2)))))))) UNION SELECT DISTINCT t0.c0, t0.c2 FROM t0, v0 WHERE ((((+ ((((v0.c0, t0.c2, v0.c0)) NOT BETWEEN ((NULL, t0.c0, t0.c0)) AND ((v0.c0, v0.c0, t0.c2)))))) ISNULL));
SELECT DISTINCT t0.c0, t0.c2 FROM t0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0 COLLATE BINARY)>=(CAST(v0.c0 AS TEXT)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE BINARY)>=(CAST(v0.c0 AS TEXT)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE BINARY)>=(CAST(v0.c0 AS TEXT)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(v0.c0))) ISNULL);
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((((((t0.c0) ISNULL)))=((rtreenode(t0.c2, t0.c1))))) UNION ALL SELECT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((NOT ((((((t0.c0) ISNULL)))=((rtreenode(t0.c2, t0.c1))))))) UNION ALL SELECT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((((((((t0.c0) ISNULL)))=((rtreenode(t0.c2, t0.c1))))) ISNULL));
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON (~ (((t0.c2) NOTNULL)));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON (~ (((t0.c2) NOTNULL))) WHERE (t0.c1) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON (~ (((t0.c2) NOTNULL))) WHERE ((NOT (t0.c1))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON (~ (((t0.c2) NOTNULL))) WHERE (((t0.c1) ISNULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON (~ (((t0.c2) NOTNULL)));
SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM t0 WHERE ((((t0.c1)) BETWEEN ((CAST(t0.c1 AS INTEGER))) AND ((((t0.c0)>=(t0.c1)))))) GROUP BY t0.c2, t0.c1 UNION SELECT ALL t0.c2, t0.c1 FROM t0 WHERE ((NOT ((((t0.c1)) BETWEEN ((CAST(t0.c1 AS INTEGER))) AND ((((t0.c0)>=(t0.c1)))))))) GROUP BY t0.c2, t0.c1 UNION SELECT ALL t0.c2, t0.c1 FROM t0 WHERE ((((((t0.c1)) BETWEEN ((CAST(t0.c1 AS INTEGER))) AND ((((t0.c0)>=(t0.c1)))))) ISNULL)) GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT t0.c2, v0.c0, t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1;
SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1 HAVING AVG(NULL) UNION ALL SELECT t0.c2, v0.c0, t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1 HAVING (NOT (AVG(NULL))) UNION ALL SELECT t0.c2, v0.c0, t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1 HAVING ((AVG(NULL)) ISNULL);
SELECT t0.c2, v0.c0, t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1;
SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1 HAVING AVG(NULL) UNION ALL SELECT t0.c2, v0.c0, t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1 HAVING (NOT (AVG(NULL))) UNION ALL SELECT t0.c2, v0.c0, t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1 HAVING ((AVG(NULL)) ISNULL);
SELECT t0.c2, v0.c0, t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0, v0;
SELECT t0.c0, t0.c1 FROM t0, v0 WHERE ((((t0.c1 IN ())) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (0.3353186573927607 COLLATE NOCASE))) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0, v0 WHERE ((NOT ((((t0.c1 IN ())) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (0.3353186573927607 COLLATE NOCASE))))) UNION ALL SELECT t0.c0, t0.c1 FROM t0, v0 WHERE ((((((t0.c1 IN ())) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (0.3353186573927607 COLLATE NOCASE))) ISNULL));
SELECT t0.c0, t0.c1 FROM t0, v0;
SELECT DISTINCT t0.c1, v0.c0, t0.c2 FROM t0, v0;
SELECT DISTINCT t0.c1, v0.c0, t0.c2 FROM t0, v0 WHERE (((-1449522661) NOT BETWEEN (CAST(t0.c0 AS REAL)) AND (((t0.c0)<<(v0.c0))))) UNION SELECT DISTINCT t0.c1, v0.c0, t0.c2 FROM t0, v0 WHERE ((NOT (((-1449522661) NOT BETWEEN (CAST(t0.c0 AS REAL)) AND (((t0.c0)<<(v0.c0))))))) UNION SELECT DISTINCT t0.c1, v0.c0, t0.c2 FROM t0, v0 WHERE (((((-1449522661) NOT BETWEEN (CAST(t0.c0 AS REAL)) AND (((t0.c0)<<(v0.c0))))) ISNULL));
SELECT DISTINCT t0.c1, v0.c0, t0.c2 FROM t0, v0;
SELECT v0.c0 FROM v0, t0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t0 WHERE (t0.c2) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, t0 WHERE ((NOT (t0.c2))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, t0 WHERE (((t0.c2) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, t0 GROUP BY v0.c0;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (NOT (GROUP_CONCAT(SUM(t0.c1)))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (NOT ((NOT (GROUP_CONCAT(SUM(t0.c1)))))) UNION ALL SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (((NOT (GROUP_CONCAT(SUM(t0.c1))))) ISNULL);
SELECT * FROM t0, v0;
SELECT * FROM t0, v0 WHERE ((NOT ((+ (v0.c0))))) ORDER BY (((t0.c0))=((t0.c1))) COLLATE BINARY, ((CASE v0.c0  WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END) NOTNULL) ASC  NULLS FIRST;
SELECT ALL * FROM t0, v0 WHERE ((NOT ((NOT ((+ (v0.c0))))))) ORDER BY (((t0.c0))==((t0.c1))) COLLATE BINARY, ((CASE v0.c0  WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END) NOTNULL) ASC  NULLS FIRST;
SELECT * FROM t0, v0 WHERE ((((NOT ((+ (v0.c0))))) ISNULL)) ORDER BY (((t0.c0))=((t0.c1))) COLLATE BINARY, ((CASE v0.c0  WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END) NOTNULL) ASC  NULLS FIRST;
SELECT * FROM t0, v0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE ((((CAST(t0.c2 AS REAL)))>=((((v0.c0) NOTNULL))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT ((((CAST(t0.c2 AS REAL)))>=((((v0.c0) NOTNULL))))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((((((CAST(t0.c2 AS REAL)))>=((((v0.c0) NOTNULL))))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT ALL t0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM v0, t0 WHERE (((CAST(t0.c0 AS INTEGER))*(((t0.c2)<>(v0.c0))))) GROUP BY t0.c0, t0.c2 UNION SELECT t0.c0, t0.c2 FROM v0, t0 WHERE ((NOT (((CAST(t0.c0 AS INTEGER))*(((t0.c2)<>(v0.c0))))))) GROUP BY t0.c0, t0.c2 UNION SELECT t0.c0, t0.c2 FROM v0, t0 WHERE (((((CAST(t0.c0 AS INTEGER))*(((t0.c2)!=(v0.c0))))) ISNULL)) GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c1 FROM t0 INNER JOIN v0 ON CASE WHEN CASE v0.c0  WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END THEN ((t0.c0)*(t0.c0)) WHEN ((((((((((((t0.c1)OR(t0.c0)))OR(v0.c0)))OR(v0.c0)))AND(t0.c1)))OR(t0.c0)))OR(t0.c0)) THEN (- (v0.c0)) WHEN ((t0.c1) ISNULL) THEN ((t0.c0)IS NOT(v0.c0)) ELSE ((t0.c1) NOT NULL) END GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 INNER JOIN v0 ON CASE WHEN CASE v0.c0  WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END THEN ((t0.c0)*(t0.c0)) WHEN ((((((((((((t0.c1)OR(t0.c0)))OR(v0.c0)))OR(v0.c0)))AND(t0.c1)))OR(t0.c0)))OR(t0.c0)) THEN (- (v0.c0)) WHEN ((t0.c1) ISNULL) THEN ((t0.c0)IS NOT(v0.c0)) ELSE ((t0.c1) NOT NULL) END GROUP BY t0.c1 HAVING t0.c1 UNION ALL SELECT ALL t0.c1 FROM t0 INNER JOIN v0 ON CASE WHEN CASE v0.c0  WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END THEN ((t0.c0)*(t0.c0)) WHEN ((((((((((((t0.c1)OR(t0.c0)))OR(v0.c0)))OR(v0.c0)))AND(t0.c1)))OR(t0.c0)))OR(t0.c0)) THEN (- (v0.c0)) WHEN ((t0.c1) ISNULL) THEN ((t0.c0)IS NOT(v0.c0)) ELSE ((t0.c1) NOT NULL) END GROUP BY t0.c1 HAVING (NOT (t0.c1)) UNION ALL SELECT t0.c1 FROM t0 INNER JOIN v0 ON CASE WHEN CASE v0.c0  WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END THEN ((t0.c0)*(t0.c0)) WHEN ((((((((((((t0.c1)OR(t0.c0)))OR(v0.c0)))OR(v0.c0)))AND(t0.c1)))OR(t0.c0)))OR(t0.c0)) THEN (- (v0.c0)) WHEN ((t0.c1) ISNULL) THEN ((t0.c0)IS NOT(v0.c0)) ELSE ((t0.c1) NOT NULL) END GROUP BY t0.c1 HAVING ((t0.c1) ISNULL);
SELECT ALL t0.c1 FROM t0 INNER JOIN v0 ON CASE WHEN CASE v0.c0  WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END THEN ((t0.c0)*(t0.c0)) WHEN ((((((((((((t0.c1)OR(t0.c0)))OR(v0.c0)))OR(v0.c0)))AND(t0.c1)))OR(t0.c0)))OR(t0.c0)) THEN (- (v0.c0)) WHEN ((t0.c1) ISNULL) THEN ((t0.c0)IS NOT(v0.c0)) ELSE ((t0.c1) NOT NULL) END GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 INNER JOIN v0 ON CASE WHEN CASE v0.c0  WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END THEN ((t0.c0)*(t0.c0)) WHEN ((((((((((((t0.c1)OR(t0.c0)))OR(v0.c0)))OR(v0.c0)))AND(t0.c1)))OR(t0.c0)))OR(t0.c0)) THEN (- (v0.c0)) WHEN ((t0.c1) ISNULL) THEN ((t0.c0)IS NOT(v0.c0)) ELSE ((t0.c1) NOT NULL) END GROUP BY t0.c1 HAVING t0.c1 UNION ALL SELECT ALL t0.c1 FROM t0 INNER JOIN v0 ON CASE WHEN CASE v0.c0  WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END THEN ((t0.c0)*(t0.c0)) WHEN ((((((((((((t0.c1)OR(t0.c0)))OR(v0.c0)))OR(v0.c0)))AND(t0.c1)))OR(t0.c0)))OR(t0.c0)) THEN (- (v0.c0)) WHEN ((t0.c1) ISNULL) THEN ((t0.c0)IS NOT(v0.c0)) ELSE ((t0.c1) NOT NULL) END GROUP BY t0.c1 HAVING (NOT (t0.c1)) UNION ALL SELECT t0.c1 FROM t0 INNER JOIN v0 ON CASE WHEN CASE v0.c0  WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END THEN ((t0.c0)*(t0.c0)) WHEN ((((((((((((t0.c1)OR(t0.c0)))OR(v0.c0)))OR(v0.c0)))AND(t0.c1)))OR(t0.c0)))OR(t0.c0)) THEN (- (v0.c0)) WHEN ((t0.c1) ISNULL) THEN ((t0.c0)IS NOT(v0.c0)) ELSE ((t0.c1) NOT NULL) END GROUP BY t0.c1 HAVING ((t0.c1) ISNULL);
SELECT ALL t0.c1 FROM t0 INNER JOIN v0 ON CASE WHEN CASE v0.c0  WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END THEN ((t0.c0)*(t0.c0)) WHEN ((((((((((((t0.c1)OR(t0.c0)))OR(v0.c0)))OR(v0.c0)))AND(t0.c1)))OR(t0.c0)))OR(t0.c0)) THEN (- (v0.c0)) WHEN ((t0.c1) ISNULL) THEN ((t0.c0)IS NOT(v0.c0)) ELSE ((t0.c1) NOT NULL) END GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0;
SELECT t0.c1 FROM t0 WHERE ((NOT (CASE t0.c2  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c1 END))) UNION ALL SELECT t0.c1 FROM t0 WHERE ((NOT ((NOT (CASE t0.c2  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c1 END))))) UNION ALL SELECT t0.c1 FROM t0 WHERE ((((NOT (CASE t0.c2  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c1 END))) ISNULL));
SELECT ALL t0.c1 FROM t0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (CASE ((t0.c0) NOTNULL)  WHEN (v0.c0 IN ()) THEN LIKELY(DISTINCT t0.c1) END) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (CASE ((t0.c0) NOTNULL)  WHEN (v0.c0 IN ()) THEN LIKELY(DISTINCT t0.c1) END))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((CASE ((t0.c0) NOTNULL)  WHEN (v0.c0 IN ()) THEN LIKELY(DISTINCT t0.c1) END) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT ALL v0.c0, t0.c1, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c1, t0.c2;
SELECT v0.c0, t0.c1, t0.c2 FROM v0, t0 WHERE (((((((((((v0.c0)<<(v0.c0)))OR(((t0.c2) NOTNULL))))OR(((((t0.c2)OR(t0.c1)))OR(t0.c2)))))AND(((t0.c2) IS TRUE))))AND(TRIM(t0.c1)))) GROUP BY v0.c0, t0.c1, t0.c2 UNION SELECT v0.c0, t0.c1, t0.c2 FROM v0, t0 WHERE ((NOT (((((((((((v0.c0)<<(v0.c0)))OR(((t0.c2) NOTNULL))))OR(((((t0.c2)OR(t0.c1)))OR(t0.c2)))))AND(((t0.c2) IS TRUE))))AND(TRIM(t0.c1)))))) GROUP BY v0.c0, t0.c1, t0.c2 UNION SELECT ALL v0.c0, t0.c1, t0.c2 FROM v0, t0 WHERE (((((((((((((v0.c0)<<(v0.c0)))OR(((t0.c2) NOTNULL))))OR(((((t0.c2)OR(t0.c1)))OR(t0.c2)))))AND(((t0.c2) IS TRUE))))AND(TRIM(t0.c1)))) ISNULL)) GROUP BY v0.c0, t0.c1, t0.c2;
SELECT ALL v0.c0, t0.c1, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c1, t0.c2;
SELECT ALL v0.c0, t0.c1, t0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c1, t0.c2, t0.c0;
SELECT ALL v0.c0, t0.c1, t0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c1, t0.c2, t0.c0 HAVING t0.c0 UNION ALL SELECT v0.c0, t0.c1, t0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c1, t0.c2, t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT v0.c0, t0.c1, t0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c1, t0.c2, t0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL v0.c0, t0.c1, t0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c1, t0.c2, t0.c0;
SELECT ALL v0.c0, t0.c1, t0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c1, t0.c2, t0.c0 HAVING t0.c0 UNION ALL SELECT v0.c0, t0.c1, t0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c1, t0.c2, t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT v0.c0, t0.c1, t0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c1, t0.c2, t0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL v0.c0, t0.c1, t0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c1, t0.c2, t0.c0;
SELECT t0.c1, t0.c0, t0.c2, v0.c0 FROM v0 INNER JOIN t0 ON ((CASE v0.c0  WHEN t0.c0 THEN t0.c0 ELSE 0.23274781223996854 END)*(CASE WHEN t0.c0 THEN 0.9344831988890189 END));
SELECT t0.c1, t0.c0, t0.c2, v0.c0 FROM v0 INNER JOIN t0 ON ((CASE v0.c0  WHEN t0.c0 THEN t0.c0 ELSE 0.23274781223996854 END)*(CASE WHEN t0.c0 THEN 0.9344831988890189 END)) WHERE (((((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c2)))==(0.889742689412914))) UNION ALL SELECT t0.c1, t0.c0, t0.c2, v0.c0 FROM v0 INNER JOIN t0 ON ((CASE v0.c0  WHEN t0.c0 THEN t0.c0 ELSE 0.23274781223996854 END)*(CASE WHEN t0.c0 THEN 0.9344831988890189 END)) WHERE ((NOT (((((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c2)))=(0.889742689412914))))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2, v0.c0 FROM v0 INNER JOIN t0 ON ((CASE v0.c0  WHEN t0.c0 THEN t0.c0 ELSE 0.23274781223996854 END)*(CASE WHEN t0.c0 THEN 0.9344831988890189 END)) WHERE (((((((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c2)))==(0.889742689412914))) ISNULL));
SELECT t0.c1, t0.c0, t0.c2, v0.c0 FROM v0 INNER JOIN t0 ON ((CASE v0.c0  WHEN t0.c0 THEN t0.c0 ELSE 0.23274781223996854 END)*(CASE WHEN t0.c0 THEN 0.9344831988890189 END));
SELECT DISTINCT t0.c0 FROM t0, v0;
SELECT DISTINCT t0.c0 FROM t0, v0 WHERE (x'') UNION SELECT DISTINCT t0.c0 FROM t0, v0 WHERE ((NOT (x''))) UNION SELECT DISTINCT t0.c0 FROM t0, v0 WHERE (((x'') ISNULL));
SELECT DISTINCT t0.c0 FROM t0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (9223372036854775807) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (9223372036854775807))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((9223372036854775807) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c2, t0.c0, v0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c2, t0.c0, v0.c0, t0.c1;
SELECT t0.c2, t0.c0, v0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c2, t0.c0, v0.c0, t0.c1 HAVING SUM(AVG(COUNT(*))) UNION ALL SELECT ALL t0.c2, t0.c0, v0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c2, t0.c0, v0.c0, t0.c1 HAVING (NOT (SUM(AVG(COUNT(*))))) UNION ALL SELECT ALL t0.c2, t0.c0, v0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c2, t0.c0, v0.c0, t0.c1 HAVING ((SUM(AVG(COUNT(*)))) ISNULL);
SELECT ALL t0.c0, t0.c1, v0.c0, t0.c2 FROM v0, t0;
SELECT t0.c0, t0.c1, v0.c0, t0.c2 FROM v0, t0 WHERE (t0.c1) UNION ALL SELECT ALL t0.c0, t0.c1, v0.c0, t0.c2 FROM v0, t0 WHERE ((NOT (t0.c1))) UNION ALL SELECT t0.c0, t0.c1, v0.c0, t0.c2 FROM v0, t0 WHERE (((t0.c1) ISNULL));
SELECT ALL t0.c0, t0.c1, v0.c0, t0.c2 FROM v0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (TIME((NOT (t0.c2)), LIKELIHOOD(t0.c2, 0.9455363694670311), ((t0.c1)IS NOT(t0.c1)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (TIME((NOT (t0.c2)), LIKELIHOOD(t0.c2, 0.9455363694670311), ((t0.c1)IS NOT(t0.c1)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((TIME((NOT (t0.c2)), LIKELIHOOD(t0.c2, 0.9455363694670311), ((t0.c1)IS NOT(t0.c1)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 WHERE ((((- (t0.c2))) ISNULL)) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t0 WHERE ((NOT ((((- (t0.c2))) ISNULL)))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0 WHERE ((((((- (t0.c2))) ISNULL)) ISNULL)) GROUP BY t0.c1;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1, t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c1, t0.c0, v0.c0;
SELECT ALL t0.c1, t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c1, t0.c0, v0.c0 HAVING CASE SUM(v0.c0)  WHEN ((v0.c0) IS FALSE) THEN MIN(MAX(t0.c0)) ELSE CAST(MIN(COUNT(*)) AS REAL) END UNION ALL SELECT ALL t0.c1, t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c1, t0.c0, v0.c0 HAVING (NOT (CASE SUM(v0.c0)  WHEN ((v0.c0) IS FALSE) THEN MIN(MAX(t0.c0)) ELSE CAST(MIN(COUNT(*)) AS REAL) END)) UNION ALL SELECT ALL t0.c1, t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c1, t0.c0, v0.c0 HAVING ((CASE SUM(v0.c0)  WHEN ((v0.c0) IS FALSE) THEN MIN(MAX(t0.c0)) ELSE CAST(MIN(COUNT(*)) AS REAL) END) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((NOT (((((v0.c0)OR(v0.c0)))OR(v0.c0))))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((NOT (((((v0.c0)OR(v0.c0)))OR(v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE ((((NOT (((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CAST(((v0.c0)<=(v0.c0)) AS NUMERIC)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c0)<=(v0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST(((v0.c0)<=(v0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (SUBSTR(0.6937933903975834, ((((v0.c0)OR(v0.c0)))OR(x'3080')))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (SUBSTR(0.6937933903975834, ((((v0.c0)OR(v0.c0)))OR(x'3080')))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((SUBSTR(0.6937933903975834, ((((v0.c0)OR(v0.c0)))OR(x'3080')))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(((GROUP_CONCAT(v0.c0)) NOT NULL)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(((GROUP_CONCAT(v0.c0)) NOT NULL)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(((GROUP_CONCAT(v0.c0)) NOT NULL))) ISNULL);
SELECT ALL t0.c2, t0.c0 FROM t0, v0;
SELECT ALL t0.c2, t0.c0 FROM t0, v0 WHERE (CASE WHEN ((t0.c1)<=(v0.c0)) THEN ((t0.c0)+(v0.c0)) ELSE (((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c1))) END) UNION ALL SELECT t0.c2, t0.c0 FROM t0, v0 WHERE ((NOT (CASE WHEN ((t0.c1)<=(v0.c0)) THEN ((t0.c0)+(v0.c0)) ELSE (((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c1))) END))) UNION ALL SELECT t0.c2, t0.c0 FROM t0, v0 WHERE (((CASE WHEN ((t0.c1)<=(v0.c0)) THEN ((t0.c0)+(v0.c0)) ELSE (((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c1))) END) ISNULL));
SELECT ALL t0.c2, t0.c0 FROM t0, v0;
SELECT DISTINCT t0.c2, t0.c1, t0.c0, v0.c0 FROM t0, v0;
SELECT DISTINCT t0.c2, t0.c1, t0.c0, v0.c0 FROM t0, v0 WHERE ((((((t0.c0))<=((0.4798937404679736)))) ISNULL)) UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0, v0.c0 FROM t0, v0 WHERE ((NOT ((((((t0.c0))<=((0.4798937404679736)))) ISNULL)))) UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0, v0.c0 FROM t0, v0 WHERE ((((((((t0.c0))<=((0.4798937404679736)))) ISNULL)) ISNULL));
SELECT DISTINCT t0.c2, t0.c1, t0.c0, v0.c0 FROM t0, v0;
SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN t0 ON (((x''))>((CASE t0.c2  WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN v0.c0 ELSE '' END))) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 FULL OUTER JOIN t0 ON (((x''))>((CASE t0.c2  WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN v0.c0 ELSE '' END))) WHERE ((((t0.c1)) BETWEEN (((t0.c0 IN ()))) AND ((CASE t0.c2  WHEN t0.c1 THEN v0.c0 ELSE t0.c0 END)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN t0 ON (((x''))>((CASE t0.c2  WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN v0.c0 ELSE '' END))) WHERE ((NOT ((((t0.c1)) BETWEEN (((t0.c0 IN ()))) AND ((CASE t0.c2  WHEN t0.c1 THEN v0.c0 ELSE t0.c0 END)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 FULL OUTER JOIN t0 ON (((x''))>((CASE t0.c2  WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN v0.c0 ELSE '' END))) WHERE ((((((t0.c1)) BETWEEN (((t0.c0 IN ()))) AND ((CASE t0.c2  WHEN t0.c1 THEN v0.c0 ELSE t0.c0 END)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN t0 ON (((x''))>((CASE t0.c2  WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN v0.c0 ELSE '' END))) GROUP BY v0.c0;
SELECT t0.c1, v0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c1, v0.c0, t0.c2;
SELECT t0.c1, v0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c1, v0.c0, t0.c2 HAVING CASE ((((MIN(AVG(SUM(MAX(t0.c1)))))AND(t0.c0)))AND(TOTAL(t0.c0)))  WHEN (NOT (v0.c0)) THEN IFNULL(DISTINCT t0.c1, v0.c0) ELSE MIN(t0.c2) END UNION ALL SELECT ALL t0.c1, v0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c1, v0.c0, t0.c2 HAVING (NOT (CASE ((((MIN(AVG(SUM(MAX(t0.c1)))))AND(t0.c0)))AND(TOTAL(t0.c0)))  WHEN (NOT (v0.c0)) THEN IFNULL(DISTINCT t0.c1, v0.c0) ELSE MIN(t0.c2) END)) UNION ALL SELECT t0.c1, v0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c1, v0.c0, t0.c2 HAVING ((CASE ((((MIN(AVG(SUM(MAX(t0.c1)))))AND(t0.c0)))AND(TOTAL(t0.c0)))  WHEN (NOT (v0.c0)) THEN IFNULL(DISTINCT t0.c1, v0.c0) ELSE MIN(t0.c2) END) ISNULL);
SELECT ALL t0.c2, t0.c1 FROM v0 NOT INDEXED NATURAL JOIN t0;
SELECT ALL t0.c2, t0.c1 FROM v0 NATURAL JOIN t0 WHERE (((((t0.c2)>(v0.c0))) IS FALSE)) UNION ALL SELECT ALL t0.c2, t0.c1 FROM v0 NATURAL JOIN t0 WHERE ((NOT (((((t0.c2)>(v0.c0))) IS FALSE)))) UNION ALL SELECT t0.c2, t0.c1 FROM v0 NATURAL JOIN t0 WHERE (((((((t0.c2)>(v0.c0))) IS FALSE)) ISNULL));
SELECT ALL t0.c2, t0.c1 FROM v0 NOT INDEXED NATURAL JOIN t0;
SELECT DISTINCT t0.c2, t0.c0, v0.c0 FROM v0, t0;
SELECT DISTINCT t0.c2, t0.c0, v0.c0 FROM v0, t0 WHERE ((((((((((t0.c1)OR(t0.c0)))OR(v0.c0)))AND(v0.c0)))OR(t0.c2)) IN ())) UNION SELECT DISTINCT t0.c2, t0.c0, v0.c0 FROM v0, t0 WHERE ((NOT ((((((((((t0.c1)OR(t0.c0)))OR(v0.c0)))AND(v0.c0)))OR(t0.c2)) IN ())))) UNION SELECT DISTINCT t0.c2, t0.c0, v0.c0 FROM v0, t0 WHERE ((((((((((((t0.c1)OR(t0.c0)))OR(v0.c0)))AND(v0.c0)))OR(t0.c2)) IN ())) ISNULL));
SELECT DISTINCT t0.c2, t0.c0, v0.c0 FROM v0, t0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (0xffffffffc0c45858) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (0xffffffffc0c45858))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((0Xffffffffc0c45858) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c2, v0.c0, t0.c1, t0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c2, v0.c0, t0.c1, t0.c0;
SELECT t0.c2, v0.c0, t0.c1, t0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c2, v0.c0, t0.c1, t0.c0 HAVING MIN(MIN(t0.c0)) UNION ALL SELECT t0.c2, v0.c0, t0.c1, t0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c2, v0.c0, t0.c1, t0.c0 HAVING (NOT (MIN(MIN(t0.c0)))) UNION ALL SELECT ALL t0.c2, v0.c0, t0.c1, t0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c2, v0.c0, t0.c1, t0.c0 HAVING ((MIN(MIN(t0.c0))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 NOT INDEXED WHERE (NULL) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((NULL) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM t0 INDEXED BY i89, v0;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 INDEXED BY i12 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT t0.c1, t0.c0, v0.c0, t0.c2 FROM t0 LEFT OUTER JOIN v0 ON CAST(((v0.c0)*(t0.c0)) AS INTEGER) GROUP BY t0.c1, t0.c0, v0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, v0.c0, t0.c2 FROM t0 LEFT OUTER JOIN v0 ON CAST(((v0.c0)*(t0.c0)) AS INTEGER) GROUP BY t0.c1, t0.c0, v0.c0, t0.c2 HAVING ((((MIN(AVG(t0.c1)) IN ()), GROUP_CONCAT(TOTAL(GROUP_CONCAT(COUNT(*)))), TOTAL(v0.c0)))==((((((AVG(0.0011389313834400117))AND(v0.c0)))AND(TOTAL(v0.c0))), MIN(t0.c0), TOTAL(t0.c0)))) UNION ALL SELECT ALL t0.c1, t0.c0, v0.c0, t0.c2 FROM t0 LEFT OUTER JOIN v0 ON CAST(((v0.c0)*(t0.c0)) AS INTEGER) GROUP BY t0.c1, t0.c0, v0.c0, t0.c2 HAVING (NOT (((((MIN(AVG(t0.c1)) IN ()), GROUP_CONCAT(TOTAL(GROUP_CONCAT(COUNT(*)))), TOTAL(v0.c0)))==((((((AVG(0.0011389313834400117))AND(v0.c0)))AND(TOTAL(v0.c0))), MIN(t0.c0), TOTAL(t0.c0)))))) UNION ALL SELECT ALL t0.c1, t0.c0, v0.c0, t0.c2 FROM t0 LEFT OUTER JOIN v0 ON CAST(((v0.c0)*(t0.c0)) AS INTEGER) GROUP BY t0.c1, t0.c0, v0.c0, t0.c2 HAVING ((((((MIN(AVG(t0.c1)) IN ()), GROUP_CONCAT(TOTAL(GROUP_CONCAT(COUNT(*)))), TOTAL(v0.c0)))=((((((AVG(0.0011389313834400117))AND(v0.c0)))AND(TOTAL(v0.c0))), MIN(t0.c0), TOTAL(t0.c0))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM t0, v0 INDEXED BY i85;
SELECT ALL v0.c0, t0.c0, t0.c2, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c0, t0.c2, t0.c1;
SELECT v0.c0, t0.c0, t0.c2, t0.c1 FROM t0, v0 WHERE (TRIM(DISTINCT ((v0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)), ((((t0.c0)AND(v0.c0)))AND(t0.c2)))) GROUP BY v0.c0, t0.c0, t0.c2, t0.c1 UNION SELECT v0.c0, t0.c0, t0.c2, t0.c1 FROM t0, v0 WHERE ((NOT (TRIM(DISTINCT ((v0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)), ((((t0.c0)AND(v0.c0)))AND(t0.c2)))))) GROUP BY v0.c0, t0.c0, t0.c2, t0.c1 UNION SELECT ALL v0.c0, t0.c0, t0.c2, t0.c1 FROM t0, v0 WHERE (((TRIM(DISTINCT ((v0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)), ((((t0.c0)AND(v0.c0)))AND(t0.c2)))) ISNULL)) GROUP BY v0.c0, t0.c0, t0.c2, t0.c1;
SELECT ALL v0.c0, t0.c0, t0.c2, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c0, t0.c2, t0.c1;
SELECT ALL v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0 HAVING TRIM(MIN(TOTAL(MIN(AVG(GROUP_CONCAT(AVG(GROUP_CONCAT(GROUP_CONCAT(MIN(t0.c0))))))))), GROUP_CONCAT(TOTAL(t0.c2))) UNION ALL SELECT ALL v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0 HAVING (NOT (TRIM(MIN(TOTAL(MIN(AVG(GROUP_CONCAT(AVG(GROUP_CONCAT(GROUP_CONCAT(MIN(t0.c0))))))))), GROUP_CONCAT(TOTAL(t0.c2))))) UNION ALL SELECT ALL v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0 HAVING ((TRIM(MIN(TOTAL(MIN(AVG(GROUP_CONCAT(AVG(GROUP_CONCAT(GROUP_CONCAT(MIN(t0.c0))))))))), GROUP_CONCAT(TOTAL(t0.c2)))) ISNULL);
SELECT ALL t0.c0, t0.c2 FROM t0;
SELECT ALL t0.c0, t0.c2 FROM t0 WHERE (CAST(SQLITE_SOURCE_ID() AS TEXT)) UNION ALL SELECT t0.c0, t0.c2 FROM t0 WHERE ((NOT (CAST(SQLITE_SOURCE_ID() AS TEXT)))) UNION ALL SELECT t0.c0, t0.c2 FROM t0 WHERE (((CAST(SQLITE_SOURCE_ID() AS TEXT)) ISNULL));
SELECT ALL t0.c0, t0.c2 FROM t0;
SELECT DISTINCT t0.c0, t0.c2 FROM t0;
SELECT DISTINCT t0.c0, t0.c2 FROM t0 NOT INDEXED WHERE (((t0.c1 IN ()) IN (((t0.c1) IS TRUE), ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c1))))) UNION SELECT DISTINCT t0.c0, t0.c2 FROM t0 WHERE ((NOT (((t0.c1 IN ()) IN (((t0.c1) IS TRUE), ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c1))))))) UNION SELECT DISTINCT t0.c0, t0.c2 FROM t0 WHERE (((((t0.c1 IN ()) IN (((t0.c1) IS TRUE), ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c1))))) ISNULL));
SELECT DISTINCT t0.c0, t0.c2 FROM t0;
SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM t0 WHERE (t0.c0) GROUP BY t0.c2, t0.c1 UNION SELECT t0.c2, t0.c1 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c2, t0.c1 UNION SELECT ALL t0.c2, t0.c1 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE WHEN MAX(v0.c0) THEN COUNT(*) END UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CASE WHEN MAX(v0.c0) THEN COUNT(*) END)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE WHEN MAX(v0.c0) THEN COUNT(*) END) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE WHEN MAX(v0.c0) THEN COUNT(*) END UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CASE WHEN MAX(v0.c0) THEN COUNT(*) END)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE WHEN MAX(v0.c0) THEN COUNT(*) END) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0 IN (v0.c0)))>(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 IN (v0.c0)))>(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((((v0.c0 IN (v0.c0)))>(v0.c0))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (((TRIM(DISTINCT t0.c1, t0.c0))GLOB(((v0.c0) NOT BETWEEN (t0.c1) AND (t0.c1))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (((TRIM(DISTINCT t0.c1, t0.c0))GLOB(((v0.c0) NOT BETWEEN (t0.c1) AND (t0.c1))))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((((TRIM(DISTINCT t0.c1, t0.c0))GLOB(((v0.c0) NOT BETWEEN (t0.c1) AND (t0.c1))))) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT t0.c0, v0.c0, t0.c1, t0.c2 FROM v0, t0 GROUP BY t0.c0, v0.c0, t0.c1, t0.c2;
SELECT t0.c0, v0.c0, t0.c1, t0.c2 FROM v0, t0 WHERE ((((+ (t0.c0))) BETWEEN (CASE t0.c1  WHEN v0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN 0.3290385354209384 END) AND (CAST('' AS NUMERIC)))) GROUP BY t0.c0, v0.c0, t0.c1, t0.c2 UNION SELECT ALL t0.c0, v0.c0, t0.c1, t0.c2 FROM v0, t0 WHERE ((NOT ((((+ (t0.c0))) BETWEEN (CASE t0.c1  WHEN v0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN 0.3290385354209384 END) AND (CAST('' AS NUMERIC)))))) GROUP BY t0.c0, v0.c0, t0.c1, t0.c2 UNION SELECT t0.c0, v0.c0, t0.c1, t0.c2 FROM v0, t0 WHERE ((((((+ (t0.c0))) BETWEEN (CASE t0.c1  WHEN v0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN 0.3290385354209384 END) AND (CAST('' AS NUMERIC)))) ISNULL)) GROUP BY t0.c0, v0.c0, t0.c1, t0.c2;
SELECT t0.c0, v0.c0, t0.c1, t0.c2 FROM v0, t0 GROUP BY t0.c0, v0.c0, t0.c1, t0.c2;
SELECT ALL t0.c2 FROM v0, t0 GROUP BY t0.c2;
SELECT t0.c2 FROM v0, t0 GROUP BY t0.c2 HAVING COUNT(*) UNION ALL SELECT ALL t0.c2 FROM v0, t0 GROUP BY t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2 FROM v0, t0 GROUP BY t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c2 FROM v0, t0 GROUP BY t0.c2;
SELECT t0.c2 FROM v0, t0 GROUP BY t0.c2 HAVING COUNT(*) UNION ALL SELECT ALL t0.c2 FROM v0, t0 GROUP BY t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2 FROM v0, t0 GROUP BY t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c2 FROM v0, t0 GROUP BY t0.c2;
SELECT t0.c1, t0.c2 FROM v0, t0;
SELECT ALL t0.c1, t0.c2 FROM v0, t0 WHERE ((((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (((t0.c1)<<(t0.c2))))) UNION ALL SELECT ALL t0.c1, t0.c2 FROM v0, t0 WHERE ((NOT ((((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (((t0.c1)<<(t0.c2))))))) UNION ALL SELECT ALL t0.c1, t0.c2 FROM v0, t0 WHERE ((((((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (((t0.c1)<<(t0.c2))))) ISNULL));
SELECT t0.c1, t0.c2 FROM v0, t0;
SELECT DISTINCT t0.c1, v0.c0, t0.c2, t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON ((((- (t0.c1)), (t0.c2 IN ()), NULL))==(('2080318938', '', ((((v0.c0)OR(t0.c0)))OR(v0.c0)))));
SELECT DISTINCT t0.c1, v0.c0, t0.c2, t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON ((((- (t0.c1)), (t0.c2 IN ()), NULL))==(('2080318938', '', ((((v0.c0)OR(t0.c0)))OR(v0.c0))))) WHERE ((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE NOCASE) UNION SELECT DISTINCT t0.c1, v0.c0, t0.c2, t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON ((((- (t0.c1)), (t0.c2 IN ()), NULL))==(('2080318938', '', ((((v0.c0)OR(t0.c0)))OR(v0.c0))))) WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE NOCASE))) UNION SELECT DISTINCT t0.c1, v0.c0, t0.c2, t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON ((((- (t0.c1)), (t0.c2 IN ()), NULL))=(('2080318938', '', ((((v0.c0)OR(t0.c0)))OR(v0.c0))))) WHERE ((((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE NOCASE) ISNULL));
SELECT DISTINCT t0.c1, v0.c0, t0.c2, t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON ((((- (t0.c1)), (t0.c2 IN ()), NULL))==(('2080318938', '', ((((v0.c0)OR(t0.c0)))OR(v0.c0)))));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (('TRLEG' IN ())) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (('TRLEG' IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((('TRLEG' IN ())) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(v0.c0 AS INTEGER)) ISNULL) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((CAST(v0.c0 AS INTEGER)) ISNULL))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((CAST(v0.c0 AS INTEGER)) ISNULL)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(v0.c0 AS INTEGER)) ISNULL) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((CAST(v0.c0 AS INTEGER)) ISNULL))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((CAST(v0.c0 AS INTEGER)) ISNULL)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, t0.c0, t0.c2 FROM t0 FULL OUTER JOIN v0 ON (((t0.c1) NOTNULL) IN (CAST(t0.c2 AS INTEGER), (- (t0.c1)), t0.c0));
SELECT v0.c0, t0.c0, t0.c2 FROM t0 FULL OUTER JOIN v0 ON (((t0.c1) NOTNULL) IN (CAST(t0.c2 AS INTEGER), (- (t0.c1)), t0.c0)) WHERE (((v0.c0)/(t0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL v0.c0, t0.c0, t0.c2 FROM t0 FULL OUTER JOIN v0 ON (((t0.c1) NOTNULL) IN (CAST(t0.c2 AS INTEGER), (- (t0.c1)), t0.c0)) WHERE ((NOT (((v0.c0)/(t0.c0)) COLLATE RTRIM))) UNION ALL SELECT v0.c0, t0.c0, t0.c2 FROM t0 FULL OUTER JOIN v0 ON (((t0.c1) NOTNULL) IN (CAST(t0.c2 AS INTEGER), (- (t0.c1)), t0.c0)) WHERE (((((v0.c0)/(t0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL v0.c0, t0.c0, t0.c2 FROM t0 FULL OUTER JOIN v0 ON (((t0.c1) NOTNULL) IN (CAST(t0.c2 AS INTEGER), (- (t0.c1)), t0.c0));
SELECT DISTINCT t0.c1, t0.c0 FROM t0;
SELECT DISTINCT t0.c1, t0.c0 FROM t0 WHERE (t0.c1) UNION SELECT DISTINCT t0.c1, t0.c0 FROM t0 WHERE ((NOT (t0.c1))) UNION SELECT DISTINCT t0.c1, t0.c0 FROM t0 WHERE (((t0.c1) ISNULL));
SELECT DISTINCT t0.c1, t0.c0 FROM t0;
SELECT ALL t0.c2 FROM t0 CROSS JOIN v0 ON (((((t0.c1)OR(t0.c0)))AND(t0.c0)) IN (((v0.c0)-(t0.c2)), ((t0.c2) NOT NULL))) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 CROSS JOIN v0 ON (((((t0.c1)OR(t0.c0)))AND(t0.c0)) IN (((v0.c0)-(t0.c2)), ((t0.c2) NOT NULL))) WHERE (NULL) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 CROSS JOIN v0 ON (((((t0.c1)OR(t0.c0)))AND(t0.c0)) IN (((v0.c0)-(t0.c2)), ((t0.c2) NOT NULL))) WHERE ((NOT (NULL))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 CROSS JOIN v0 ON (((((t0.c1)OR(t0.c0)))AND(t0.c0)) IN (((v0.c0)-(t0.c2)), ((t0.c2) NOT NULL))) WHERE (((NULL) ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 CROSS JOIN v0 ON (((((t0.c1)OR(t0.c0)))AND(t0.c0)) IN (((v0.c0)-(t0.c2)), ((t0.c2) NOT NULL))) GROUP BY t0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(SUM(v0.c0))) IS TRUE) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((TOTAL(SUM(v0.c0))) IS TRUE))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((TOTAL(SUM(v0.c0))) IS TRUE)) ISNULL);
SELECT ALL t0.c0, t0.c1, t0.c2, v0.c0 FROM t0 CROSS JOIN v0 ON LIKELY(DISTINCT t0.c1);
SELECT ALL t0.c0, t0.c1, t0.c2, v0.c0 FROM t0 CROSS JOIN v0 ON LIKELY(DISTINCT t0.c1) WHERE ((((+ (v0.c0)))&(((t0.c1)<(v0.c0))))) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2, v0.c0 FROM t0 CROSS JOIN v0 ON LIKELY(DISTINCT t0.c1) WHERE ((NOT ((((+ (v0.c0)))&(((t0.c1)<(v0.c0))))))) UNION ALL SELECT t0.c0, t0.c1, t0.c2, v0.c0 FROM t0 CROSS JOIN v0 ON LIKELY(DISTINCT t0.c1) WHERE ((((((+ (v0.c0)))&(((t0.c1)<(v0.c0))))) ISNULL));
SELECT ALL t0.c0, t0.c1, t0.c2, v0.c0 FROM t0 CROSS JOIN v0 ON LIKELY(DISTINCT t0.c1);
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((t0.c0) NOT NULL) IN ())) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0) NOT NULL) IN ())))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0) NOT NULL) IN ())) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL v0.c0, t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON t0.c0 COLLATE RTRIM GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON t0.c0 COLLATE RTRIM WHERE ((((v0.c0, v0.c0, t0.c0)) NOT BETWEEN ((t0.c2, t0.c2, t0.c1)) AND (('M\n-4658659462245010930-719872534512313328:-7220506646262407184TL', t0.c2, t0.c1))) COLLATE RTRIM) GROUP BY v0.c0, t0.c0 UNION SELECT v0.c0, t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON t0.c0 COLLATE RTRIM WHERE ((NOT ((((v0.c0, v0.c0, t0.c0)) NOT BETWEEN ((t0.c2, t0.c2, t0.c1)) AND (('M\n-4658659462245010930-719872534512313328:-7220506646262407184TL', t0.c2, t0.c1))) COLLATE RTRIM))) GROUP BY v0.c0, t0.c0 UNION SELECT v0.c0, t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON t0.c0 COLLATE RTRIM WHERE ((((((v0.c0, v0.c0, t0.c0)) NOT BETWEEN ((t0.c2, t0.c2, t0.c1)) AND (('M\n-4658659462245010930-719872534512313328:-7220506646262407184TL', t0.c2, t0.c1))) COLLATE RTRIM) ISNULL)) GROUP BY v0.c0, t0.c0;
SELECT ALL v0.c0, t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON t0.c0 COLLATE RTRIM GROUP BY v0.c0, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c2, t0.c0 HAVING CASE GROUP_CONCAT(t0.c1)  WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN AVG(t0.c2) WHEN COUNT(SUM(t0.c2)) THEN t0.c0 END COLLATE BINARY UNION ALL SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING (NOT (CASE GROUP_CONCAT(t0.c1)  WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN AVG(t0.c2) WHEN COUNT(SUM(t0.c2)) THEN t0.c0 END COLLATE BINARY)) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING ((CASE GROUP_CONCAT(t0.c1)  WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN AVG(t0.c2) WHEN COUNT(SUM(t0.c2)) THEN t0.c0 END COLLATE BINARY) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0))<((v0.c0))))||((((v0.c0, v0.c0, v0.c0))>=((v0.c0, '9tv蹷u!', 0.06312480330291759)))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0))<((v0.c0))))||((((v0.c0, v0.c0, v0.c0))>=((v0.c0, '9tv蹷u!', 0.06312480330291759)))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((((((v0.c0))<((v0.c0))))||((((v0.c0, v0.c0, v0.c0))>=((v0.c0, '9tv蹷u!', 0.06312480330291759)))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0)GLOB(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((NOT (((v0.c0)GLOB(v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((NOT (((v0.c0)GLOB(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (NULLIF(DISTINCT v0.c0 COLLATE RTRIM, (((v0.c0))>(('*g'))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (NULLIF(DISTINCT v0.c0 COLLATE RTRIM, (((v0.c0))>(('*g'))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((NULLIF(DISTINCT v0.c0 COLLATE RTRIM, (((v0.c0))>(('*g'))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(((SUM(v0.c0))>>(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(((SUM(v0.c0))>>(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(((SUM(v0.c0))>>(v0.c0)))) ISNULL);
SELECT ALL * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE (((((v0.c0)|(v0.c0)))GLOB(CAST(t0.c1 AS NUMERIC)))) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((NOT (((((v0.c0)|(v0.c0)))GLOB(CAST(t0.c1 AS NUMERIC)))))) UNION ALL SELECT ALL * FROM v0, t0 WHERE (((((((v0.c0)|(v0.c0)))GLOB(CAST(t0.c1 AS NUMERIC)))) ISNULL));
SELECT ALL * FROM v0, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c2 COLLATE NOCASE) IS TRUE)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((t0.c2 COLLATE NOCASE) IS TRUE)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c2 COLLATE NOCASE) IS TRUE)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2, t0.c0;
SELECT t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 WHERE (CAST(t0.c0 AS INTEGER)) GROUP BY t0.c1, v0.c0, t0.c2, t0.c0 UNION SELECT t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 WHERE ((NOT (CAST(t0.c0 AS INTEGER)))) GROUP BY t0.c1, v0.c0, t0.c2, t0.c0 UNION SELECT t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 WHERE (((CAST(t0.c0 AS INTEGER)) ISNULL)) GROUP BY t0.c1, v0.c0, t0.c2, t0.c0;
SELECT t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2, t0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(MIN(TOTAL(COUNT(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(MIN(TOTAL(COUNT(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(MIN(TOTAL(COUNT(v0.c0))))) ISNULL);
SELECT t0.c2, t0.c1 FROM t0, v0;
SELECT t0.c2, t0.c1 FROM t0, v0 WHERE ((NOT (CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END))) UNION ALL SELECT ALL t0.c2, t0.c1 FROM t0, v0 WHERE ((NOT ((NOT (CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END))))) UNION ALL SELECT ALL t0.c2, t0.c1 FROM t0, v0 WHERE ((((NOT (CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END))) ISNULL));
SELECT t0.c2, t0.c1 FROM t0, v0;
SELECT DISTINCT v0.c0 FROM v0, t0;
SELECT DISTINCT v0.c0 FROM v0, t0 WHERE (((((t0.c1)<(t0.c2)))%(t0.c1))) UNION SELECT DISTINCT v0.c0 FROM v0, t0 WHERE ((NOT (((((t0.c1)<(t0.c2)))%(t0.c1))))) UNION SELECT DISTINCT v0.c0 FROM v0, t0 WHERE (((((((t0.c1)<(t0.c2)))%(t0.c1))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, t0;
SELECT t0.c2, v0.c0, t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1;
SELECT t0.c2, v0.c0, t0.c0, t0.c1 FROM t0, v0 WHERE (t0.c0) GROUP BY t0.c2, v0.c0, t0.c0, t0.c1 UNION SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1 FROM t0, v0 WHERE ((NOT (t0.c0))) GROUP BY t0.c2, v0.c0, t0.c0, t0.c1 UNION SELECT t0.c2, v0.c0, t0.c0, t0.c1 FROM t0, v0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c2, v0.c0, t0.c0, t0.c1;
SELECT t0.c2, v0.c0, t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1;
SELECT ALL t0.c1 FROM t0 INNER JOIN v0 ON CAST(((t0.c1)*(v0.c0)) AS TEXT) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 INNER JOIN v0 ON CAST(((t0.c1)*(v0.c0)) AS TEXT) GROUP BY t0.c1 HAVING SUM(CASE t0.c1  WHEN COUNT(*) THEN SUM(SUM(t0.c0)) ELSE COUNT(t0.c0) END) UNION ALL SELECT ALL t0.c1 FROM t0 INNER JOIN v0 ON CAST(((t0.c1)*(v0.c0)) AS TEXT) GROUP BY t0.c1 HAVING (NOT (SUM(CASE t0.c1  WHEN COUNT(*) THEN SUM(SUM(t0.c0)) ELSE COUNT(t0.c0) END))) UNION ALL SELECT ALL t0.c1 FROM t0 INNER JOIN v0 ON CAST(((t0.c1)*(v0.c0)) AS TEXT) GROUP BY t0.c1 HAVING ((SUM(CASE t0.c1  WHEN COUNT(*) THEN SUM(SUM(t0.c0)) ELSE COUNT(t0.c0) END)) ISNULL);
SELECT ALL t0.c0, t0.c2 FROM t0;
SELECT ALL t0.c0, t0.c2 FROM t0 WHERE (CASE t0.c0  WHEN CAST(t0.c1 AS REAL) THEN ((t0.c0) NOT NULL) END) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 WHERE ((NOT (CASE t0.c0  WHEN CAST(t0.c1 AS REAL) THEN ((t0.c0) NOT NULL) END))) UNION ALL SELECT t0.c0, t0.c2 FROM t0 WHERE (((CASE t0.c0  WHEN CAST(t0.c1 AS REAL) THEN ((t0.c0) NOT NULL) END) ISNULL));
SELECT ALL t0.c0, t0.c2 FROM t0;
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0;
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((t0.c1 COLLATE BINARY IN ())) UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((NOT ((t0.c1 COLLATE BINARY IN ())))) UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((((t0.c1 COLLATE BINARY IN ())) ISNULL));
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0;
SELECT t0.c0, t0.c1, v0.c0 FROM t0 FULL OUTER JOIN v0 ON ((((t0.c2) NOTNULL)) ISNULL) GROUP BY t0.c0, t0.c1, v0.c0;
SELECT ALL t0.c0, t0.c1, v0.c0 FROM t0 FULL OUTER JOIN v0 ON ((((t0.c2) NOTNULL)) ISNULL) WHERE (CASE '0孡kk[Z(W'  WHEN ((t0.c1)OR(v0.c0)) THEN ((v0.c0) BETWEEN (t0.c2) AND (t0.c2)) END) GROUP BY t0.c0, t0.c1, v0.c0 UNION SELECT ALL t0.c0, t0.c1, v0.c0 FROM t0 FULL OUTER JOIN v0 ON ((((t0.c2) NOTNULL)) ISNULL) WHERE ((NOT (CASE '0孡kk[Z(W'  WHEN ((t0.c1)OR(v0.c0)) THEN ((v0.c0) BETWEEN (t0.c2) AND (t0.c2)) END))) GROUP BY t0.c0, t0.c1, v0.c0 UNION SELECT t0.c0, t0.c1, v0.c0 FROM t0 FULL OUTER JOIN v0 ON ((((t0.c2) NOTNULL)) ISNULL) WHERE (((CASE '0孡kk[Z(W'  WHEN ((t0.c1)OR(v0.c0)) THEN ((v0.c0) BETWEEN (t0.c2) AND (t0.c2)) END) ISNULL)) GROUP BY t0.c0, t0.c1, v0.c0;
SELECT t0.c0, t0.c1, v0.c0 FROM t0 FULL OUTER JOIN v0 ON ((((t0.c2) NOTNULL)) ISNULL) GROUP BY t0.c0, t0.c1, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(v0.c0)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(v0.c0)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE ((((('-1027365149')&(v0.c0)))IS NOT((- (NULL))))) UNION ALL SELECT * FROM t0, v0 WHERE ((NOT ((((('-1027365149')&(v0.c0)))IS NOT((- (NULL))))))) UNION ALL SELECT * FROM t0, v0 WHERE ((((((('-1027365149')&(v0.c0)))IS NOT((- (NULL))))) ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((NULL)AND(v0.c0)))OR(((v0.c0) IS FALSE)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((NULL)AND(v0.c0)))OR(((v0.c0) IS FALSE)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((NULL)AND(v0.c0)))OR(((v0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL t0.c1, t0.c0, v0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c1, t0.c0, v0.c0, t0.c2;
SELECT t0.c1, t0.c0, v0.c0, t0.c2 FROM t0, v0 WHERE (json_extract(((t0.c2)<<(v0.c0)), CAST(v0.c0 AS BLOB))) GROUP BY t0.c1, t0.c0, v0.c0, t0.c2 UNION SELECT t0.c1, t0.c0, v0.c0, t0.c2 FROM t0, v0 WHERE ((NOT (json_extract(((t0.c2)<<(v0.c0)), CAST(v0.c0 AS BLOB))))) GROUP BY t0.c1, t0.c0, v0.c0, t0.c2 UNION SELECT ALL t0.c1, t0.c0, v0.c0, t0.c2 FROM t0, v0 WHERE (((json_extract(((t0.c2)<<(v0.c0)), CAST(v0.c0 AS BLOB))) ISNULL)) GROUP BY t0.c1, t0.c0, v0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, v0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c1, t0.c0, v0.c0, t0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((v0.c0)OR(NULL)))AND(v0.c0)))<=(TOTAL(COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((((v0.c0)OR(NULL)))AND(v0.c0)))<=(TOTAL(COUNT(*)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((v0.c0)OR(NULL)))AND(v0.c0)))<=(TOTAL(COUNT(*))))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)OR((- (v0.c0)))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)OR((- (v0.c0)))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE (((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)OR((- (v0.c0)))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (0.21686039783291844) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (0.21686039783291844))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((0.21686039783291844) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT NULL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT NULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT NULL)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((((GROUP_CONCAT(SUM(MIN(SUM(TOTAL(TOTAL(MIN(t0.c1))))))))AND((NOT (t0.c2)))))OR(((((((((((((t0.c2)OR(t0.c0)))OR(AVG(COUNT(*)))))AND(SUM(t0.c0))))OR(AVG(t0.c0))))AND(TOTAL(t0.c1))))AND(t0.c2)))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (((((GROUP_CONCAT(SUM(MIN(SUM(TOTAL(TOTAL(MIN(t0.c1))))))))AND((NOT (t0.c2)))))OR(((((((((((((t0.c2)OR(t0.c0)))OR(AVG(COUNT(*)))))AND(SUM(t0.c0))))OR(AVG(t0.c0))))AND(TOTAL(t0.c1))))AND(t0.c2)))))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((((((GROUP_CONCAT(SUM(MIN(SUM(TOTAL(TOTAL(MIN(t0.c1))))))))AND((NOT (t0.c2)))))OR(((((((((((((t0.c2)OR(t0.c0)))OR(AVG(COUNT(*)))))AND(SUM(t0.c0))))OR(AVG(t0.c0))))AND(TOTAL(t0.c1))))AND(t0.c2))))) ISNULL);
SELECT ALL MIN(v0.c0) FROM v0;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE (CAST((t0.c2 IN (t0.c2)) AS NUMERIC)) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((NOT (CAST((t0.c2 IN (t0.c2)) AS NUMERIC)))) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0 WHERE (((CAST((t0.c2 IN (t0.c2)) AS NUMERIC)) ISNULL));
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0;
SELECT DISTINCT v0.c0, t0.c1 FROM t0, v0;
SELECT DISTINCT v0.c0, t0.c1 FROM t0, v0 WHERE (CAST((v0.c0 IN ()) AS BLOB)) UNION SELECT DISTINCT v0.c0, t0.c1 FROM t0, v0 WHERE ((NOT (CAST((v0.c0 IN ()) AS BLOB)))) UNION SELECT DISTINCT v0.c0, t0.c1 FROM t0, v0 WHERE (((CAST((v0.c0 IN ()) AS BLOB)) ISNULL));
SELECT DISTINCT v0.c0, t0.c1 FROM t0, v0;
SELECT ALL v0.c0, t0.c0, t0.c1, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, t0.c1, t0.c2;
SELECT v0.c0, t0.c0, t0.c1, t0.c2 FROM v0, t0 WHERE (t0.c1) GROUP BY v0.c0, t0.c0, t0.c1, t0.c2 UNION SELECT ALL v0.c0, t0.c0, t0.c1, t0.c2 FROM v0, t0 WHERE ((NOT (t0.c1))) GROUP BY v0.c0, t0.c0, t0.c1, t0.c2 UNION SELECT ALL v0.c0, t0.c0, t0.c1, t0.c2 FROM v0, t0 WHERE (((t0.c1) ISNULL)) GROUP BY v0.c0, t0.c0, t0.c1, t0.c2;
SELECT ALL v0.c0, t0.c0, t0.c1, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, t0.c1, t0.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((t0.c2)&(t0.c1)))>(COUNT(SUM(t0.c1)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((t0.c2)&(t0.c1)))>(COUNT(SUM(t0.c1)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((t0.c2)&(t0.c1)))>(COUNT(SUM(t0.c1))))) ISNULL);
SELECT t0.c0 FROM v0, t0;
SELECT t0.c0 FROM v0, t0 WHERE (t0.c1) UNION ALL SELECT ALL t0.c0 FROM v0, t0 WHERE ((NOT (t0.c1))) UNION ALL SELECT t0.c0 FROM v0, t0 WHERE (((t0.c1) ISNULL));
SELECT t0.c0 FROM v0, t0;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN v0 ON (((t0.c0)*(v0.c0)) IN ());
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN v0 ON (((t0.c0)*(v0.c0)) IN ()) WHERE ((((t0.c1, v0.c0, v0.c0)) NOT BETWEEN ((((((t0.c0)OR('\rh')))AND(t0.c2)), (t0.c1 IN (v0.c0, t0.c0)), ((t0.c0)=(t0.c1)))) AND ((((0Xffffffffd53b49c6)/(t0.c2)), CASE t0.c2  WHEN v0.c0 THEN t0.c1 WHEN v0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 END, ((t0.c0) NOTNULL))))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN v0 ON (((t0.c0)*(v0.c0)) IN ()) WHERE ((NOT ((((t0.c1, v0.c0, v0.c0)) NOT BETWEEN ((((((t0.c0)OR('\rh')))AND(t0.c2)), (t0.c1 IN (v0.c0, t0.c0)), ((t0.c0)=(t0.c1)))) AND ((((0Xffffffffd53b49c6)/(t0.c2)), CASE t0.c2  WHEN v0.c0 THEN t0.c1 WHEN v0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 END, ((t0.c0) NOTNULL))))))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN v0 ON (((t0.c0)*(v0.c0)) IN ()) WHERE ((((((t0.c1, v0.c0, v0.c0)) NOT BETWEEN ((((((t0.c0)OR('\rh')))AND(t0.c2)), (t0.c1 IN (v0.c0, t0.c0)), ((t0.c0)=(t0.c1)))) AND ((((0xffffffffd53b49c6)/(t0.c2)), CASE t0.c2  WHEN v0.c0 THEN t0.c1 WHEN v0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 END, ((t0.c0) NOTNULL))))) ISNULL));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN v0 ON (((t0.c0)*(v0.c0)) IN ());
SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0 WHERE (t0.c2) GROUP BY t0.c1, t0.c2 UNION SELECT t0.c1, t0.c2 FROM t0 WHERE ((NOT (t0.c2))) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM t0 WHERE (((t0.c2) ISNULL)) GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT ALL v0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c2;
SELECT v0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c2 HAVING TRIM(DISTINCT TOTAL(t0.c1), NULLIF(DISTINCT MAX(t0.c0), GROUP_CONCAT(GROUP_CONCAT(v0.c0)))) UNION ALL SELECT ALL v0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c2 HAVING (NOT (TRIM(DISTINCT TOTAL(t0.c1), NULLIF(DISTINCT MAX(t0.c0), GROUP_CONCAT(GROUP_CONCAT(v0.c0)))))) UNION ALL SELECT v0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c2 HAVING ((TRIM(DISTINCT TOTAL(t0.c1), NULLIF(DISTINCT MAX(t0.c0), GROUP_CONCAT(GROUP_CONCAT(v0.c0))))) ISNULL);
SELECT t0.c2, t0.c0, t0.c1 FROM t0;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE (CAST((t0.c2 IN (t0.c1)) AS BLOB)) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT (CAST((t0.c2 IN (t0.c1)) AS BLOB)))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((CAST((t0.c2 IN (t0.c1)) AS BLOB)) ISNULL));
SELECT t0.c2, t0.c0, t0.c1 FROM t0;
SELECT DISTINCT t0.c0, v0.c0 FROM v0, t0;
SELECT DISTINCT t0.c0, v0.c0 FROM v0, t0 WHERE ((((((((t0.c0))<>((t0.c2))))AND(((((((((t0.c1)AND(t0.c0)))AND(t0.c0)))OR(t0.c1)))OR('617741290')))))OR(4.43137426E8 COLLATE NOCASE))) UNION SELECT DISTINCT t0.c0, v0.c0 FROM v0, t0 WHERE ((NOT ((((((((t0.c0))!=((t0.c2))))AND(((((((((t0.c1)AND(t0.c0)))AND(t0.c0)))OR(t0.c1)))OR('617741290')))))OR(4.43137426E8 COLLATE NOCASE))))) UNION SELECT DISTINCT t0.c0, v0.c0 FROM v0, t0 WHERE ((((((((((t0.c0))!=((t0.c2))))AND(((((((((t0.c1)AND(t0.c0)))AND(t0.c0)))OR(t0.c1)))OR('617741290')))))OR(4.43137426E8 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT t0.c0, v0.c0 FROM v0, t0;
SELECT t0.c0, t0.c2, t0.c1 FROM v0, t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM v0, t0 WHERE (SQLITE_SOURCE_ID()) GROUP BY t0.c0, t0.c2, t0.c1 UNION SELECT ALL t0.c0, t0.c2, t0.c1 FROM v0, t0 WHERE ((NOT (SQLITE_SOURCE_ID()))) GROUP BY t0.c0, t0.c2, t0.c1 UNION SELECT t0.c0, t0.c2, t0.c1 FROM v0, t0 WHERE (((SQLITE_SOURCE_ID()) ISNULL)) GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM v0, t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE WHEN ((GROUP_CONCAT(AVG(v0.c0))) IS TRUE) THEN COUNT(*) END UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CASE WHEN ((GROUP_CONCAT(AVG(v0.c0))) IS TRUE) THEN COUNT(*) END)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE WHEN ((GROUP_CONCAT(AVG(v0.c0))) IS TRUE) THEN COUNT(*) END) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 NOT INDEXED WHERE ((- ((v0.c0 IN (v0.c0, v0.c0))))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((- ((v0.c0 IN (v0.c0, v0.c0))))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((- ((v0.c0 IN (v0.c0, v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (CAST(v0.c0 AS INTEGER)) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (CAST(v0.c0 AS INTEGER)))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((CAST(v0.c0 AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT t0.c1, v0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c1, v0.c0, t0.c2;
SELECT ALL t0.c1, v0.c0, t0.c2 FROM v0, t0 WHERE (CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END COLLATE RTRIM) GROUP BY t0.c1, v0.c0, t0.c2 UNION SELECT ALL t0.c1, v0.c0, t0.c2 FROM v0, t0 WHERE ((NOT (CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END COLLATE RTRIM))) GROUP BY t0.c1, v0.c0, t0.c2 UNION SELECT ALL t0.c1, v0.c0, t0.c2 FROM v0, t0 WHERE (((CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END COLLATE RTRIM) ISNULL)) GROUP BY t0.c1, v0.c0, t0.c2;
SELECT t0.c1, v0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c1, v0.c0, t0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) IS TRUE) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((COUNT(*)) IS TRUE))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((COUNT(*)) IS TRUE)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) IS TRUE) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((COUNT(*)) IS TRUE))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((COUNT(*)) IS TRUE)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c0, v0.c0, t0.c1, t0.c2 FROM t0, v0;
SELECT t0.c0, v0.c0, t0.c1, t0.c2 FROM t0, v0 WHERE (json_array_length(CASE t0.c1  WHEN t0.c1 THEN NULL ELSE t0.c1 END)) UNION ALL SELECT t0.c0, v0.c0, t0.c1, t0.c2 FROM t0, v0 WHERE ((NOT (json_array_length(CASE t0.c1  WHEN t0.c1 THEN NULL ELSE t0.c1 END)))) UNION ALL SELECT ALL t0.c0, v0.c0, t0.c1, t0.c2 FROM t0, v0 WHERE (((json_array_length(CASE t0.c1  WHEN t0.c1 THEN NULL ELSE t0.c1 END)) ISNULL));
SELECT t0.c0, v0.c0, t0.c1, t0.c2 FROM t0, v0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (t0.c1) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (t0.c1))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((t0.c1) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT ALL t0.c1, v0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON ((((t0.c0)%(t0.c2))) IS TRUE) GROUP BY t0.c1, v0.c0, t0.c2;
SELECT t0.c1, v0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON ((((t0.c0)%(t0.c2))) IS TRUE) WHERE (x'f690') GROUP BY t0.c1, v0.c0, t0.c2 UNION SELECT ALL t0.c1, v0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON ((((t0.c0)%(t0.c2))) IS TRUE) WHERE ((NOT (x'f690'))) GROUP BY t0.c1, v0.c0, t0.c2 UNION SELECT ALL t0.c1, v0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON ((((t0.c0)%(t0.c2))) IS TRUE) WHERE (((x'f690') ISNULL)) GROUP BY t0.c1, v0.c0, t0.c2;
SELECT ALL t0.c1, v0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON ((((t0.c0)%(t0.c2))) IS TRUE) GROUP BY t0.c1, v0.c0, t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING CASE WHEN CASE t0.c2  WHEN MIN(SUM(t0.c2)) THEN AVG(t0.c1) ELSE t0.c0 END THEN ((((t0.c1)OR(t0.c2)))OR(COUNT(*))) ELSE CAST(t0.c0 AS REAL) END UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (CASE WHEN CASE t0.c2  WHEN MIN(SUM(t0.c2)) THEN AVG(t0.c1) ELSE t0.c0 END THEN ((((t0.c1)OR(t0.c2)))OR(COUNT(*))) ELSE CAST(t0.c0 AS REAL) END)) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((CASE WHEN CASE t0.c2  WHEN MIN(SUM(t0.c2)) THEN AVG(t0.c1) ELSE t0.c0 END THEN ((((t0.c1)OR(t0.c2)))OR(COUNT(*))) ELSE CAST(t0.c0 AS REAL) END) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (STRFTIME(t0.c0, t0.c0, t0.c2) COLLATE BINARY) UNION ALL SELECT * FROM t0 WHERE ((NOT (STRFTIME(t0.c0, t0.c0, t0.c2) COLLATE BINARY))) UNION ALL SELECT ALL * FROM t0 WHERE (((STRFTIME(t0.c0, t0.c0, t0.c2) COLLATE BINARY) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c1, v0.c0, t0.c0 FROM v0, t0;
SELECT DISTINCT t0.c1, v0.c0, t0.c0 FROM v0, t0 WHERE ((- (LENGTH(t0.c2)))) UNION SELECT DISTINCT t0.c1, v0.c0, t0.c0 FROM v0, t0 WHERE ((NOT ((- (LENGTH(t0.c2)))))) UNION SELECT DISTINCT t0.c1, v0.c0, t0.c0 FROM v0, t0 WHERE ((((- (LENGTH(t0.c2)))) ISNULL));
SELECT DISTINCT t0.c1, v0.c0, t0.c0 FROM v0, t0;
SELECT t0.c1 FROM t0 CROSS JOIN v0 ON PRINTF(((t0.c0) NOTNULL)) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 CROSS JOIN v0 ON PRINTF(((t0.c0) NOTNULL)) WHERE (t0.c1) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t0 CROSS JOIN v0 ON PRINTF(((t0.c0) NOTNULL)) WHERE ((NOT (t0.c1))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0 CROSS JOIN v0 ON PRINTF(((t0.c0) NOTNULL)) WHERE (((t0.c1) ISNULL)) GROUP BY t0.c1;
SELECT t0.c1 FROM t0 CROSS JOIN v0 ON PRINTF(((t0.c0) NOTNULL)) GROUP BY t0.c1;
SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM t0 RIGHT OUTER JOIN v0 ON 0Xffffffffe18eda64 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1;
SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM t0 RIGHT OUTER JOIN v0 ON 0xffffffffe18eda64 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 HAVING MIN(TOTAL(AVG(v0.c0))) UNION ALL SELECT v0.c0, t0.c2, t0.c0, t0.c1 FROM t0 RIGHT OUTER JOIN v0 ON 0xffffffffe18eda64 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 HAVING (NOT (MIN(TOTAL(AVG(v0.c0))))) UNION ALL SELECT v0.c0, t0.c2, t0.c0, t0.c1 FROM t0 RIGHT OUTER JOIN v0 ON 0Xffffffffe18eda64 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 HAVING ((MIN(TOTAL(AVG(v0.c0)))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((((v0.c0 IN (v0.c0, NULL))) NOTNULL)) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((v0.c0 IN (v0.c0, NULL))) NOTNULL)))) UNION ALL SELECT ALL * FROM v0 WHERE ((((((v0.c0 IN (v0.c0, NULL))) NOTNULL)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (((((v0.c0) BETWEEN (t0.c0) AND (t0.c1)))GLOB((t0.c1 IN (t0.c2, t0.c1, v0.c0))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (((((v0.c0) BETWEEN (t0.c0) AND (t0.c1)))GLOB((t0.c1 IN (t0.c2, t0.c1, v0.c0))))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((((((v0.c0) BETWEEN (t0.c0) AND (t0.c1)))GLOB((t0.c1 IN (t0.c2, t0.c1, v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0)=(v0.c0)))-(((v0.c0)*(NULL))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)=(v0.c0)))-(((v0.c0)*(NULL))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)=(v0.c0)))-(((v0.c0)*(NULL))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t0 CROSS JOIN v0 ON ((((NULL) NOT BETWEEN (t0.c2) AND (t0.c0))) IS TRUE) GROUP BY v0.c0;
SELECT v0.c0 FROM t0 CROSS JOIN v0 ON ((((NULL) NOT BETWEEN (t0.c2) AND (t0.c0))) IS TRUE) GROUP BY v0.c0 HAVING ((GROUP_CONCAT(t0.c1) COLLATE BINARY)==(GROUP_CONCAT(MIN(AVG(t0.c0))))) UNION ALL SELECT v0.c0 FROM t0 CROSS JOIN v0 ON ((((NULL) NOT BETWEEN (t0.c2) AND (t0.c0))) IS TRUE) GROUP BY v0.c0 HAVING (NOT (((GROUP_CONCAT(t0.c1) COLLATE BINARY)=(GROUP_CONCAT(MIN(AVG(t0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM t0 CROSS JOIN v0 ON ((((NULL) NOT BETWEEN (t0.c2) AND (t0.c0))) IS TRUE) GROUP BY v0.c0 HAVING ((((GROUP_CONCAT(t0.c1) COLLATE BINARY)=(GROUP_CONCAT(MIN(AVG(t0.c0)))))) ISNULL);
SELECT * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE ((+ (((t0.c2)>=(t0.c1))))) UNION ALL SELECT * FROM v0, t0 WHERE ((NOT ((+ (((t0.c2)>=(t0.c1))))))) UNION ALL SELECT * FROM v0, t0 WHERE ((((+ (((t0.c2)>=(t0.c1))))) ISNULL));
SELECT * FROM v0, t0;
SELECT DISTINCT t0.c1 FROM t0;
SELECT DISTINCT t0.c1 FROM t0 WHERE (0xffffffffae8baeee) UNION SELECT DISTINCT t0.c1 FROM t0 NOT INDEXED WHERE ((NOT (0Xffffffffae8baeee))) UNION SELECT DISTINCT t0.c1 FROM t0 WHERE (((0xffffffffae8baeee) ISNULL));
SELECT DISTINCT t0.c1 FROM t0;
SELECT ALL t0.c1, v0.c0 FROM v0 FULL OUTER JOIN t0 ON (((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)) IN ()) GROUP BY t0.c1, v0.c0;
SELECT t0.c1, v0.c0 FROM v0 FULL OUTER JOIN t0 ON (((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)) IN ()) WHERE (((NULL) BETWEEN ((((((((('0.0450105379398853')OR(t0.c2)))AND(t0.c2)))OR(v0.c0)))AND('-278470804'))) AND ((+ (x''))))) GROUP BY t0.c1, v0.c0 UNION SELECT t0.c1, v0.c0 FROM v0 FULL OUTER JOIN t0 ON (((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)) IN ()) WHERE ((NOT (((NULL) BETWEEN ((((((((('0.0450105379398853')OR(t0.c2)))AND(t0.c2)))OR(v0.c0)))AND('-278470804'))) AND ((+ (x''))))))) GROUP BY t0.c1, v0.c0 UNION SELECT t0.c1, v0.c0 FROM v0 FULL OUTER JOIN t0 ON (((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)) IN ()) WHERE (((((NULL) BETWEEN ((((((((('0.0450105379398853')OR(t0.c2)))AND(t0.c2)))OR(v0.c0)))AND('-278470804'))) AND ((+ (x''))))) ISNULL)) GROUP BY t0.c1, v0.c0;
SELECT ALL t0.c1, v0.c0 FROM v0 FULL OUTER JOIN t0 ON (((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)) IN ()) GROUP BY t0.c1, v0.c0;
SELECT v0.c0, t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1;
SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 HAVING CASE WHEN TOTAL(t0.c2) THEN t0.c2 END COLLATE NOCASE UNION ALL SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 HAVING (NOT (CASE WHEN TOTAL(t0.c2) THEN t0.c2 END COLLATE NOCASE)) UNION ALL SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 HAVING ((CASE WHEN TOTAL(t0.c2) THEN t0.c2 END COLLATE NOCASE) ISNULL);
SELECT v0.c0, t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1;
SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 HAVING CASE WHEN TOTAL(t0.c2) THEN t0.c2 END COLLATE NOCASE UNION ALL SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 HAVING (NOT (CASE WHEN TOTAL(t0.c2) THEN t0.c2 END COLLATE NOCASE)) UNION ALL SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 HAVING ((CASE WHEN TOTAL(t0.c2) THEN t0.c2 END COLLATE NOCASE) ISNULL);
SELECT v0.c0, t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1;
SELECT t0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON (((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) IN ());
SELECT ALL t0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON (((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) IN ()) WHERE ((((((((v0.c0)) BETWEEN ((t0.c1)) AND ((v0.c0))))AND(((t0.c0)>(NULL)))))AND(ABS(DISTINCT v0.c0)))) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON (((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) IN ()) WHERE ((NOT ((((((((v0.c0)) BETWEEN ((t0.c1)) AND ((v0.c0))))AND(((t0.c0)>(NULL)))))AND(ABS(DISTINCT v0.c0)))))) UNION ALL SELECT t0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON (((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) IN ()) WHERE ((((((((((v0.c0)) BETWEEN ((t0.c1)) AND ((v0.c0))))AND(((t0.c0)>(NULL)))))AND(ABS(DISTINCT v0.c0)))) ISNULL));
SELECT t0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON (((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) IN ());
SELECT DISTINCT t0.c0, t0.c2 FROM t0, v0;
SELECT DISTINCT t0.c0, t0.c2 FROM t0, v0 WHERE ((((((0.9688456203781803)) BETWEEN ((t0.c0)) AND ((t0.c1))))LIKE(CASE x''  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c1 END))) UNION SELECT DISTINCT t0.c0, t0.c2 FROM t0, v0 WHERE ((NOT ((((((0.9688456203781803)) BETWEEN ((t0.c0)) AND ((t0.c1))))LIKE(CASE x''  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c1 END))))) UNION SELECT DISTINCT t0.c0, t0.c2 FROM t0, v0 WHERE ((((((((0.9688456203781803)) BETWEEN ((t0.c0)) AND ((t0.c1))))LIKE(CASE x''  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c1 END))) ISNULL));
SELECT DISTINCT t0.c0, t0.c2 FROM t0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0 IN ())))>((((v0.c0)<<(v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0 IN ())))>((((v0.c0)<<(v0.c0)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0 IN ())))>((((v0.c0)<<(v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (2026832537) UNION ALL SELECT * FROM v0 WHERE ((NOT (2026832537))) UNION ALL SELECT * FROM v0 WHERE (((2026832537) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((~ (((v0.c0)>(x''))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((~ (((v0.c0)>(x''))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((~ (((v0.c0)>(x''))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0)>(t0.c0)))||((((t0.c0, t0.c1, t0.c2))<((t0.c1, t0.c1, t0.c1)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)>(t0.c0)))||((((t0.c0, t0.c1, t0.c2))<((t0.c1, t0.c1, t0.c1)))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((t0.c0)>(t0.c0)))||((((t0.c0, t0.c1, t0.c2))<((t0.c1, t0.c1, t0.c1)))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(v0.c0) COLLATE BINARY)>(GROUP_CONCAT(GROUP_CONCAT(AVG(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((MIN(v0.c0) COLLATE BINARY)>(GROUP_CONCAT(GROUP_CONCAT(AVG(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((MIN(v0.c0) COLLATE BINARY)>(GROUP_CONCAT(GROUP_CONCAT(AVG(v0.c0)))))) ISNULL);
SELECT ALL MAX(CASE WHEN (t0.c1 IN ()) THEN ((t0.c1)GLOB(t0.c1)) END) FROM v0, t0;
SELECT ALL v0.c0, t0.c2 FROM t0, v0;
SELECT v0.c0, t0.c2 FROM t0, v0 WHERE ((NOT (t0.c1)) COLLATE NOCASE) UNION ALL SELECT ALL v0.c0, t0.c2 FROM t0, v0 WHERE ((NOT ((NOT (t0.c1)) COLLATE NOCASE))) UNION ALL SELECT v0.c0, t0.c2 FROM t0, v0 WHERE ((((NOT (t0.c1)) COLLATE NOCASE) ISNULL));
SELECT ALL v0.c0, t0.c2 FROM t0, v0;
SELECT DISTINCT v0.c0 FROM v0 CROSS JOIN t0 ON 0.9745832402074673;
SELECT DISTINCT v0.c0 FROM v0 CROSS JOIN t0 ON 0.9745832402074673 WHERE (((SQLITE_SOURCE_ID())<>(t0.c2 COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0 FROM v0 CROSS JOIN t0 ON 0.9745832402074673 WHERE ((NOT (((SQLITE_SOURCE_ID())!=(t0.c2 COLLATE NOCASE))))) UNION SELECT DISTINCT v0.c0 FROM v0 CROSS JOIN t0 ON 0.9745832402074673 WHERE (((((SQLITE_SOURCE_ID())<>(t0.c2 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0 CROSS JOIN t0 ON 0.9745832402074673;
SELECT t0.c1, t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c1, t0.c0, v0.c0;
SELECT ALL t0.c1, t0.c0, v0.c0 FROM t0, v0 WHERE (((('%''Al1g', t0.c0, t0.c1)) BETWEEN ((((((v0.c0)AND(v0.c0)))AND(t0.c0)), ((v0.c0) IS FALSE), ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1)))) AND ((t0.c1 COLLATE RTRIM, ((t0.c1)IS(t0.c0)), TYPEOF(t0.c1))))) GROUP BY t0.c1, t0.c0, v0.c0 UNION SELECT t0.c1, t0.c0, v0.c0 FROM t0, v0 WHERE ((NOT (((('%''Al1g', t0.c0, t0.c1)) BETWEEN ((((((v0.c0)AND(v0.c0)))AND(t0.c0)), ((v0.c0) IS FALSE), ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1)))) AND ((t0.c1 COLLATE RTRIM, ((t0.c1)IS(t0.c0)), TYPEOF(t0.c1))))))) GROUP BY t0.c1, t0.c0, v0.c0 UNION SELECT ALL t0.c1, t0.c0, v0.c0 FROM t0, v0 WHERE (((((('%''Al1g', t0.c0, t0.c1)) BETWEEN ((((((v0.c0)AND(v0.c0)))AND(t0.c0)), ((v0.c0) IS FALSE), ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1)))) AND ((t0.c1 COLLATE RTRIM, ((t0.c1)IS(t0.c0)), TYPEOF(t0.c1))))) ISNULL)) GROUP BY t0.c1, t0.c0, v0.c0;
SELECT t0.c1, t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c1, t0.c0, v0.c0;
SELECT ALL v0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON -1084259571 GROUP BY v0.c0, t0.c2;
SELECT ALL v0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON -1084259571 GROUP BY v0.c0, t0.c2 HAVING COUNT(MIN(v0.c0)) UNION ALL SELECT ALL v0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON -1084259571 GROUP BY v0.c0, t0.c2 HAVING (NOT (COUNT(MIN(v0.c0)))) UNION ALL SELECT v0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON -1084259571 GROUP BY v0.c0, t0.c2 HAVING ((COUNT(MIN(v0.c0))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((((((0.6182727941321747, t0.c2, t0.c0)) BETWEEN ((t0.c1, NULL, t0.c2)) AND ((t0.c2, t0.c1, t0.c0)))) NOT BETWEEN (CASE WHEN t0.c1 THEN '-607544514' ELSE t0.c2 END) AND (((t0.c2) NOTNULL)))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((((0.6182727941321747, t0.c2, t0.c0)) BETWEEN ((t0.c1, NULL, t0.c2)) AND ((t0.c2, t0.c1, t0.c0)))) NOT BETWEEN (CASE WHEN t0.c1 THEN '-607544514' ELSE t0.c2 END) AND (((t0.c2) NOTNULL)))))) UNION ALL SELECT * FROM t0 WHERE ((((((((0.6182727941321747, t0.c2, t0.c0)) BETWEEN ((t0.c1, NULL, t0.c2)) AND ((t0.c2, t0.c1, t0.c0)))) NOT BETWEEN (CASE WHEN t0.c1 THEN '-607544514' ELSE t0.c2 END) AND (((t0.c2) NOTNULL)))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c2, t0.c1 FROM t0;
SELECT DISTINCT t0.c2, t0.c1 FROM t0 WHERE (t0.c2) UNION SELECT DISTINCT t0.c2, t0.c1 FROM t0 WHERE ((NOT (t0.c2))) UNION SELECT DISTINCT t0.c2, t0.c1 FROM t0 WHERE (((t0.c2) ISNULL));
SELECT DISTINCT t0.c2, t0.c1 FROM t0;
SELECT ALL t0.c1, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM v0, t0 WHERE (t0.c0) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM v0, t0 NOT INDEXED WHERE ((NOT (t0.c0))) GROUP BY t0.c1, t0.c2 UNION SELECT t0.c1, t0.c2 FROM v0, t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (v0.c0 IN ()) COLLATE RTRIM UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((v0.c0 IN ()) COLLATE RTRIM)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((v0.c0 IN ()) COLLATE RTRIM) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (v0.c0 IN ()) COLLATE RTRIM UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((v0.c0 IN ()) COLLATE RTRIM)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((v0.c0 IN ()) COLLATE RTRIM) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT SUM(SQLITE_SOURCE_ID()) FROM t0;
SELECT t0.c1, v0.c0 FROM t0, v0;
SELECT ALL t0.c1, v0.c0 FROM t0, v0 WHERE ((((t0.c0 IN ())) NOT BETWEEN (x'') AND (CASE t0.c0  WHEN t0.c1 THEN v0.c0 END))) UNION ALL SELECT t0.c1, v0.c0 FROM t0, v0 NOT INDEXED WHERE ((NOT ((((t0.c0 IN ())) NOT BETWEEN (x'') AND (CASE t0.c0  WHEN t0.c1 THEN v0.c0 END))))) UNION ALL SELECT ALL t0.c1, v0.c0 FROM t0, v0 WHERE ((((((t0.c0 IN ())) NOT BETWEEN (x'') AND (CASE t0.c0  WHEN t0.c1 THEN v0.c0 END))) ISNULL));
SELECT t0.c1, v0.c0 FROM t0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (TRIM(DISTINCT v0.c0 COLLATE BINARY, ((v0.c0)>=(v0.c0)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (TRIM(DISTINCT v0.c0 COLLATE BINARY, ((v0.c0)>=(v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((TRIM(DISTINCT v0.c0 COLLATE BINARY, ((v0.c0)>=(v0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t0.c1, v0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2;
SELECT ALL t0.c1, v0.c0, t0.c2 FROM t0, v0 WHERE (0.4643945731251161) GROUP BY t0.c1, v0.c0, t0.c2 UNION SELECT t0.c1, v0.c0, t0.c2 FROM t0, v0 WHERE ((NOT (0.4643945731251161))) GROUP BY t0.c1, v0.c0, t0.c2 UNION SELECT t0.c1, v0.c0, t0.c2 FROM t0, v0 WHERE (((0.4643945731251161) ISNULL)) GROUP BY t0.c1, v0.c0, t0.c2;
SELECT t0.c1, v0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING MAX((((t0.c0))<=((SUM(COUNT(t0.c1)))))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (MAX((((t0.c0))<=((SUM(COUNT(t0.c1)))))))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((MAX((((t0.c0))<=((SUM(COUNT(t0.c1))))))) ISNULL);
SELECT t0.c1 FROM v0 INNER JOIN t0 ON ((HEX(t0.c1)) BETWEEN (((((((((t0.c1)OR(v0.c0)))OR(t0.c2)))OR(t0.c1)))AND(1.676456853E9))) AND (v0.c0));
SELECT t0.c1 FROM v0 INNER JOIN t0 ON ((HEX(t0.c1)) BETWEEN (((((((((t0.c1)OR(v0.c0)))OR(t0.c2)))OR(t0.c1)))AND(1.676456853E9))) AND (v0.c0)) WHERE (load_extension(((t0.c1)=(2.080318938E9)), CASE v0.c0  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN -12719966 WHEN v0.c0 THEN t0.c2 END)) UNION ALL SELECT t0.c1 FROM v0 INNER JOIN t0 ON ((HEX(t0.c1)) BETWEEN (((((((((t0.c1)OR(v0.c0)))OR(t0.c2)))OR(t0.c1)))AND(1.676456853E9))) AND (v0.c0)) WHERE ((NOT (load_extension(((t0.c1)=(2.080318938E9)), CASE v0.c0  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN -12719966 WHEN v0.c0 THEN t0.c2 END)))) UNION ALL SELECT ALL t0.c1 FROM v0 INNER JOIN t0 ON ((HEX(t0.c1)) BETWEEN (((((((((t0.c1)OR(v0.c0)))OR(t0.c2)))OR(t0.c1)))AND(1.676456853E9))) AND (v0.c0)) WHERE (((load_extension(((t0.c1)=(2.080318938E9)), CASE v0.c0  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN -12719966 WHEN v0.c0 THEN t0.c2 END)) ISNULL));
SELECT t0.c1 FROM v0 INNER JOIN t0 ON ((HEX(t0.c1)) BETWEEN (((((((((t0.c1)OR(v0.c0)))OR(t0.c2)))OR(t0.c1)))AND(1.676456853E9))) AND (v0.c0));
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (0.2528568787402937) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (0.2528568787402937))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((0.2528568787402937) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c1;
SELECT v0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c1 HAVING SUM(0.22783338308155066) UNION ALL SELECT ALL v0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c1 HAVING (NOT (SUM(0.22783338308155066))) UNION ALL SELECT ALL v0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c1 HAVING ((SUM(0.22783338308155066)) ISNULL);
SELECT v0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c1;
SELECT v0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c1 HAVING SUM(0.22783338308155066) UNION ALL SELECT ALL v0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c1 HAVING (NOT (SUM(0.22783338308155066))) UNION ALL SELECT ALL v0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c1 HAVING ((SUM(0.22783338308155066)) ISNULL);
SELECT v0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c1;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (SQLITE_COMPILEOPTION_GET(v0.c0 COLLATE BINARY)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(v0.c0 COLLATE BINARY)))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((SQLITE_COMPILEOPTION_GET(v0.c0 COLLATE BINARY)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0, t0.c0, t0.c2 FROM v0, t0;
SELECT DISTINCT v0.c0, t0.c0, t0.c2 FROM v0, t0 WHERE (-216606981) UNION SELECT DISTINCT v0.c0, t0.c0, t0.c2 FROM v0, t0 WHERE ((NOT (-216606981))) UNION SELECT DISTINCT v0.c0, t0.c0, t0.c2 FROM v0, t0 WHERE (((-216606981) ISNULL));
SELECT DISTINCT v0.c0, t0.c0, t0.c2 FROM v0, t0;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 WHERE ((((((((NULL)AND(t0.c2)))OR(t0.c1)), ((((t0.c2)OR(t0.c0)))AND(0.5908221941575648)), LENGTH(t0.c2)))>((SQLITE_SOURCE_ID(), (- (t0.c1)), ((t0.c2)*(t0.c2)))))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0 WHERE ((NOT ((((((((NULL)AND(t0.c2)))OR(t0.c1)), ((((t0.c2)OR(t0.c0)))AND(0.5908221941575648)), LENGTH(t0.c2)))>((SQLITE_SOURCE_ID(), (- (t0.c1)), ((t0.c2)*(t0.c2)))))))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0 WHERE ((((((((((NULL)AND(t0.c2)))OR(t0.c1)), ((((t0.c2)OR(t0.c0)))AND(0.5908221941575648)), LENGTH(t0.c2)))>((SQLITE_SOURCE_ID(), (- (t0.c1)), ((t0.c2)*(t0.c2)))))) ISNULL)) GROUP BY t0.c1;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0, v0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0, v0 GROUP BY t0.c1 HAVING CASE CAST(0.6684522029250608 AS INTEGER)  WHEN MAX(SUM(t0.c2)) THEN CASE WHEN v0.c0 THEN MIN(NULL) WHEN v0.c0 THEN t0.c2 WHEN AVG(t0.c1) THEN t0.c2 END WHEN COUNT(*) THEN SUM(SUM(t0.c2)) WHEN ((t0.c0) BETWEEN (t0.c1) AND (MAX(t0.c1))) THEN GROUP_CONCAT(t0.c0) COLLATE RTRIM END UNION ALL SELECT ALL t0.c1 FROM t0, v0 GROUP BY t0.c1 HAVING (NOT (CASE CAST(0.6684522029250608 AS INTEGER)  WHEN MAX(SUM(t0.c2)) THEN CASE WHEN v0.c0 THEN MIN(NULL) WHEN v0.c0 THEN t0.c2 WHEN AVG(t0.c1) THEN t0.c2 END WHEN COUNT(*) THEN SUM(SUM(t0.c2)) WHEN ((t0.c0) BETWEEN (t0.c1) AND (MAX(t0.c1))) THEN GROUP_CONCAT(t0.c0) COLLATE RTRIM END)) UNION ALL SELECT t0.c1 FROM t0, v0 GROUP BY t0.c1 HAVING ((CASE CAST(0.6684522029250608 AS INTEGER)  WHEN MAX(SUM(t0.c2)) THEN CASE WHEN v0.c0 THEN MIN(NULL) WHEN v0.c0 THEN t0.c2 WHEN AVG(t0.c1) THEN t0.c2 END WHEN COUNT(*) THEN SUM(SUM(t0.c2)) WHEN ((t0.c0) BETWEEN (t0.c1) AND (MAX(t0.c1))) THEN GROUP_CONCAT(t0.c0) COLLATE RTRIM END) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (NULL) UNION ALL SELECT * FROM t0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM t0 WHERE (((NULL) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (0.38914491736932444) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (0.38914491736932444))) UNION SELECT DISTINCT * FROM t0 WHERE (((0.38914491736932444) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM t0 WHERE ((t0.c2 IN ()) COLLATE NOCASE) GROUP BY t0.c1, t0.c2 UNION SELECT t0.c1, t0.c2 FROM t0 WHERE ((NOT ((t0.c2 IN ()) COLLATE NOCASE))) GROUP BY t0.c1, t0.c2 UNION SELECT t0.c1, t0.c2 FROM t0 WHERE ((((t0.c2 IN ()) COLLATE NOCASE) ISNULL)) GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT t0.c2 FROM v0, t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM v0, t0 GROUP BY t0.c2 HAVING GROUP_CONCAT((+ ('4'))) UNION ALL SELECT t0.c2 FROM v0, t0 GROUP BY t0.c2 HAVING (NOT (GROUP_CONCAT((+ ('4'))))) UNION ALL SELECT ALL t0.c2 FROM v0, t0 GROUP BY t0.c2 HAVING ((GROUP_CONCAT((+ ('4')))) ISNULL);
SELECT t0.c2 FROM v0, t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM v0, t0 GROUP BY t0.c2 HAVING GROUP_CONCAT((+ ('4'))) UNION ALL SELECT t0.c2 FROM v0, t0 GROUP BY t0.c2 HAVING (NOT (GROUP_CONCAT((+ ('4'))))) UNION ALL SELECT ALL t0.c2 FROM v0, t0 GROUP BY t0.c2 HAVING ((GROUP_CONCAT((+ ('4')))) ISNULL);
SELECT t0.c2 FROM v0, t0 GROUP BY t0.c2;
SELECT * FROM v0, t0;
SELECT * FROM v0, t0 WHERE ((v0.c0 IN ())) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((NOT ((v0.c0 IN ())))) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((((v0.c0 IN ())) ISNULL));
SELECT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (CASE ((t0.c1) IS FALSE)  WHEN ((t0.c0) NOT NULL) THEN (((t0.c0))<=((t0.c2))) WHEN '-1289511552' THEN CASE WHEN t0.c2 THEN v0.c0 ELSE t0.c1 END WHEN (((t0.c0, t0.c1, v0.c0))<((t0.c1, v0.c0, v0.c0))) THEN ((t0.c2)>>(t0.c2)) END) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (CASE ((t0.c1) IS FALSE)  WHEN ((t0.c0) NOT NULL) THEN (((t0.c0))<=((t0.c2))) WHEN '-1289511552' THEN CASE WHEN t0.c2 THEN v0.c0 ELSE t0.c1 END WHEN (((t0.c0, t0.c1, v0.c0))<((t0.c1, v0.c0, v0.c0))) THEN ((t0.c2)>>(t0.c2)) END))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((CASE ((t0.c1) IS FALSE)  WHEN ((t0.c0) NOT NULL) THEN (((t0.c0))<=((t0.c2))) WHEN '-1289511552' THEN CASE WHEN t0.c2 THEN v0.c0 ELSE t0.c1 END WHEN (((t0.c0, t0.c1, v0.c0))<((t0.c1, v0.c0, v0.c0))) THEN ((t0.c2)>>(t0.c2)) END) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 WHERE ((((((((((((t0.c1, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c1))))OR(LIKELIHOOD(DISTINCT t0.c0, 0.5151454387963653))))AND(t0.c1 COLLATE BINARY)))OR((x'' IN (t0.c2, t0.c2)))))OR(NULL))) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT t0.c1, t0.c0, t0.c2 FROM t0 WHERE ((NOT ((((((((((((t0.c1, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c1))))OR(LIKELIHOOD(DISTINCT t0.c0, 0.5151454387963653))))AND(t0.c1 COLLATE BINARY)))OR((x'' IN (t0.c2, t0.c2)))))OR(NULL))))) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 WHERE ((((((((((((((t0.c1, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c1))))OR(LIKELIHOOD(DISTINCT t0.c0, 0.5151454387963653))))AND(t0.c1 COLLATE BINARY)))OR((x'' IN (t0.c2, t0.c2)))))OR(NULL))) ISNULL)) GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING COUNT(MIN(t0.c0)) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (NOT (COUNT(MIN(t0.c0)))) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING ((COUNT(MIN(t0.c0))) ISNULL);
SELECT ALL * FROM t0, v0;
SELECT * FROM t0, v0 WHERE (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE) UNION ALL SELECT * FROM t0, v0 WHERE ((NOT (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM t0, v0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((CASE t0.c2  WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))>=(((NOT (t0.c2)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((CASE t0.c2  WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))>=(((NOT (t0.c2)))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((CASE t0.c2  WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))>=(((NOT (t0.c2)))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING ((COUNT(t0.c2))-(((SUM(t0.c2))&(MIN(t0.c0))))) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING (NOT (((COUNT(t0.c2))-(((SUM(t0.c2))&(MIN(t0.c0))))))) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING ((((COUNT(t0.c2))-(((SUM(t0.c2))&(MIN(t0.c0)))))) ISNULL);
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING ((COUNT(t0.c2))-(((SUM(t0.c2))&(MIN(t0.c0))))) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING (NOT (((COUNT(t0.c2))-(((SUM(t0.c2))&(MIN(t0.c0))))))) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING ((((COUNT(t0.c2))-(((SUM(t0.c2))&(MIN(t0.c0)))))) ISNULL);
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((((v0.c0)OR(v0.c0)))AND(v0.c0)) COLLATE BINARY) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((v0.c0)OR(v0.c0)))AND(v0.c0)) COLLATE BINARY))) UNION ALL SELECT * FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(v0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((LIKELIHOOD(DISTINCT v0.c0, 0.5624340028380567) IN ())) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((LIKELIHOOD(DISTINCT v0.c0, 0.5624340028380567) IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((LIKELIHOOD(DISTINCT v0.c0, 0.5624340028380567) IN ())) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((+ ((v0.c0 IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((+ ((v0.c0 IN ())))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((+ ((v0.c0 IN ())))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE ((+ (((((t0.c2)AND(t0.c0)))AND(v0.c0))))) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((NOT ((+ (((((t0.c2)AND(t0.c0)))AND(v0.c0))))))) UNION ALL SELECT * FROM v0, t0 WHERE ((((+ (((((t0.c2)AND(t0.c0)))AND(v0.c0))))) ISNULL));
SELECT ALL * FROM v0, t0;
SELECT DISTINCT v0.c0, t0.c0, t0.c1 FROM t0, v0;
SELECT DISTINCT v0.c0, t0.c0, t0.c1 FROM t0, v0 WHERE (((((t0.c2) BETWEEN (t0.c0) AND (t0.c2))) NOT BETWEEN (CAST(t0.c1 AS TEXT)) AND (((t0.c1) BETWEEN (t0.c1) AND (t0.c2))))) UNION SELECT DISTINCT v0.c0, t0.c0, t0.c1 FROM t0, v0 WHERE ((NOT (((((t0.c2) BETWEEN (t0.c0) AND (t0.c2))) NOT BETWEEN (CAST(t0.c1 AS TEXT)) AND (((t0.c1) BETWEEN (t0.c1) AND (t0.c2))))))) UNION SELECT DISTINCT v0.c0, t0.c0, t0.c1 FROM t0, v0 WHERE (((((((t0.c2) BETWEEN (t0.c0) AND (t0.c2))) NOT BETWEEN (CAST(t0.c1 AS TEXT)) AND (((t0.c1) BETWEEN (t0.c1) AND (t0.c2))))) ISNULL));
SELECT DISTINCT v0.c0, t0.c0, t0.c1 FROM t0, v0;
SELECT t0.c1, v0.c0, t0.c0 FROM v0, t0 GROUP BY t0.c1, v0.c0, t0.c0;
SELECT t0.c1, v0.c0, t0.c0 FROM v0, t0 WHERE (((((- (v0.c0)), (('/<6C10S') NOTNULL), t0.c2 COLLATE RTRIM, NULLIF(v0.c0, t0.c0), COALESCE(t0.c0, t0.c2, t0.c1, t0.c0)))<=((((((((((t0.c2)OR(0.4790756364746064)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)), 0.9138629322542183, t0.c2, NULL, CASE '702208893'  WHEN t0.c1 THEN NULL ELSE t0.c1 END)))) GROUP BY t0.c1, v0.c0, t0.c0 UNION SELECT ALL t0.c1, v0.c0, t0.c0 FROM v0, t0 WHERE ((NOT (((((- (v0.c0)), (('/<6C10S') NOTNULL), t0.c2 COLLATE RTRIM, NULLIF(v0.c0, t0.c0), COALESCE(t0.c0, t0.c2, t0.c1, t0.c0)))<=((((((((((t0.c2)OR(0.4790756364746064)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)), 0.9138629322542183, t0.c2, NULL, CASE '702208893'  WHEN t0.c1 THEN NULL ELSE t0.c1 END)))))) GROUP BY t0.c1, v0.c0, t0.c0 UNION SELECT ALL t0.c1, v0.c0, t0.c0 FROM v0, t0 WHERE (((((((- (v0.c0)), (('/<6C10S') NOTNULL), t0.c2 COLLATE RTRIM, NULLIF(v0.c0, t0.c0), COALESCE(t0.c0, t0.c2, t0.c1, t0.c0)))<=((((((((((t0.c2)OR(0.4790756364746064)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)), 0.9138629322542183, t0.c2, NULL, CASE '702208893'  WHEN t0.c1 THEN NULL ELSE t0.c1 END)))) ISNULL)) GROUP BY t0.c1, v0.c0, t0.c0;
SELECT t0.c1, v0.c0, t0.c0 FROM v0, t0 GROUP BY t0.c1, v0.c0, t0.c0;
SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON ((LOWER(t0.c2)) NOT BETWEEN (((t0.c1)>(v0.c0))) AND (((v0.c0) BETWEEN (t0.c2) AND (x'')))) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON ((LOWER(t0.c2)) NOT BETWEEN (((t0.c1)>(v0.c0))) AND (((v0.c0) BETWEEN (t0.c2) AND (x'')))) GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON ((LOWER(t0.c2)) NOT BETWEEN (((t0.c1)>(v0.c0))) AND (((v0.c0) BETWEEN (t0.c2) AND (x'')))) GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON ((LOWER(t0.c2)) NOT BETWEEN (((t0.c1)>(v0.c0))) AND (((v0.c0) BETWEEN (t0.c2) AND (x'')))) GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON ((LOWER(t0.c2)) NOT BETWEEN (((t0.c1)>(v0.c0))) AND (((v0.c0) BETWEEN (t0.c2) AND (x'')))) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON ((LOWER(t0.c2)) NOT BETWEEN (((t0.c1)>(v0.c0))) AND (((v0.c0) BETWEEN (t0.c2) AND (x'')))) GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON ((LOWER(t0.c2)) NOT BETWEEN (((t0.c1)>(v0.c0))) AND (((v0.c0) BETWEEN (t0.c2) AND (x'')))) GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON ((LOWER(t0.c2)) NOT BETWEEN (((t0.c1)>(v0.c0))) AND (((v0.c0) BETWEEN (t0.c2) AND (x'')))) GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON ((LOWER(t0.c2)) NOT BETWEEN (((t0.c1)>(v0.c0))) AND (((v0.c0) BETWEEN (t0.c2) AND (x'')))) GROUP BY t0.c0;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 WHERE (CASE CAST(t0.c1 AS BLOB)  WHEN ((((0X3d6b8e44)AND(t0.c2)))OR(t0.c0)) THEN CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END ELSE ((((((((t0.c2)AND(t0.c1)))OR(t0.c2)))OR(t0.c2)))AND(t0.c2)) END) UNION ALL SELECT t0.c1, t0.c0, t0.c2 FROM t0 WHERE ((NOT (CASE CAST(t0.c1 AS BLOB)  WHEN ((((0x3d6b8e44)AND(t0.c2)))OR(t0.c0)) THEN CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END ELSE ((((((((t0.c2)AND(t0.c1)))OR(t0.c2)))OR(t0.c2)))AND(t0.c2)) END))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 WHERE (((CASE CAST(t0.c1 AS BLOB)  WHEN ((((0X3d6b8e44)AND(t0.c2)))OR(t0.c0)) THEN CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END ELSE ((((((((t0.c2)AND(t0.c1)))OR(t0.c2)))OR(t0.c2)))AND(t0.c2)) END) ISNULL));
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (((((((t0.c1)AND(t0.c1)))OR(v0.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (((((((t0.c1)AND(t0.c1)))OR(v0.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((((((((t0.c1)AND(t0.c1)))OR(v0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT ALL t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c1)AND(t0.c0)))OR(t0.c2)) IN ())) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((((t0.c1)AND(t0.c0)))OR(t0.c2)) IN ())))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((((t0.c1)AND(t0.c0)))OR(t0.c2)) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0;
SELECT ALL t0.c0, v0.c0, t0.c2 FROM t0 NATURAL JOIN v0 GROUP BY t0.c0, v0.c0, t0.c2;
SELECT t0.c0, v0.c0, t0.c2 FROM t0 NATURAL JOIN v0 GROUP BY t0.c0, v0.c0, t0.c2 HAVING AVG(MAX(TOTAL(MIN(t0.c2)))) UNION ALL SELECT t0.c0, v0.c0, t0.c2 FROM t0 NATURAL JOIN v0 GROUP BY t0.c0, v0.c0, t0.c2 HAVING (NOT (AVG(MAX(TOTAL(MIN(t0.c2)))))) UNION ALL SELECT ALL t0.c0, v0.c0, t0.c2 FROM t0 NATURAL JOIN v0 GROUP BY t0.c0, v0.c0, t0.c2 HAVING ((AVG(MAX(TOTAL(MIN(t0.c2))))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0 IN (v0.c0, '诃(3q')) IN (HEX(DISTINCT v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0 IN (v0.c0, '诃(3q')) IN (HEX(DISTINCT v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((v0.c0 IN (v0.c0, '诃(3q')) IN (HEX(DISTINCT v0.c0)))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 NOT INDEXED WHERE (CASE WHEN t0.c2 THEN ((t0.c0)+(t0.c0)) WHEN ((t0.c2)|(t0.c0)) THEN t0.c1 WHEN ((t0.c0)LIKE(t0.c0)) THEN (+ (x'')) ELSE t0.c1 COLLATE RTRIM END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE WHEN t0.c2 THEN ((t0.c0)+(t0.c0)) WHEN ((t0.c2)|(t0.c0)) THEN t0.c1 WHEN ((t0.c0)LIKE(t0.c0)) THEN (+ (x'')) ELSE t0.c1 COLLATE RTRIM END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN t0.c2 THEN ((t0.c0)+(t0.c0)) WHEN ((t0.c2)|(t0.c0)) THEN t0.c1 WHEN ((t0.c0)LIKE(t0.c0)) THEN (+ (x'')) ELSE t0.c1 COLLATE RTRIM END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c2, t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, v0.c0;
SELECT t0.c2, t0.c1, v0.c0 FROM v0, t0 WHERE (v0.c0 COLLATE RTRIM) GROUP BY t0.c2, t0.c1, v0.c0 UNION SELECT ALL t0.c2, t0.c1, v0.c0 FROM v0, t0 WHERE ((NOT (v0.c0 COLLATE RTRIM))) GROUP BY t0.c2, t0.c1, v0.c0 UNION SELECT t0.c2, t0.c1, v0.c0 FROM v0, t0 WHERE (((v0.c0 COLLATE RTRIM) ISNULL)) GROUP BY t0.c2, t0.c1, v0.c0;
SELECT t0.c2, t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(v0.c0)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(v0.c0)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT TOTAL((((((v0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0)))) NOTNULL)) FROM v0, t0;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((- (((((v0.c0)AND(0xffffffffce1bc35f)))AND(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((- (((((v0.c0)AND(0Xffffffffce1bc35f)))AND(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((- (((((v0.c0)AND(0Xffffffffce1bc35f)))AND(v0.c0))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE v0.c0  WHEN '-811068032' THEN v0.c0 WHEN x'0268' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 END) IS FALSE)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((CASE v0.c0  WHEN '-811068032' THEN v0.c0 WHEN x'0268' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 END) IS FALSE)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((CASE v0.c0  WHEN '-811068032' THEN v0.c0 WHEN x'0268' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 END) IS FALSE)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0, t0.c0, t0.c2 FROM t0, v0 GROUP BY v0.c0, t0.c0, t0.c2;
SELECT v0.c0, t0.c0, t0.c2 FROM t0, v0 WHERE (((CASE WHEN v0.c0 THEN t0.c1 END)+(((t0.c1)>=(t0.c0))))) GROUP BY v0.c0, t0.c0, t0.c2 UNION SELECT v0.c0, t0.c0, t0.c2 FROM t0, v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN t0.c1 END)+(((t0.c1)>=(t0.c0))))))) GROUP BY v0.c0, t0.c0, t0.c2 UNION SELECT v0.c0, t0.c0, t0.c2 FROM t0, v0 WHERE (((((CASE WHEN v0.c0 THEN t0.c1 END)+(((t0.c1)>=(t0.c0))))) ISNULL)) GROUP BY v0.c0, t0.c0, t0.c2;
SELECT ALL v0.c0, t0.c0, t0.c2 FROM t0, v0 GROUP BY v0.c0, t0.c0, t0.c2;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING ((((((TOTAL(MAX(MIN(t0.c1))))IS NOT(TOTAL(MAX(t0.c2)))))OR(((x'') BETWEEN (MIN(COUNT(*))) AND (AVG(MAX(TOTAL(TOTAL(t0.c1)))))))))AND((NOT (t0.c0)))) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING (NOT (((((((TOTAL(MAX(MIN(t0.c1))))IS NOT(TOTAL(MAX(t0.c2)))))OR(((x'') BETWEEN (MIN(COUNT(*))) AND (AVG(MAX(TOTAL(TOTAL(t0.c1)))))))))AND((NOT (t0.c0)))))) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING ((((((((TOTAL(MAX(MIN(t0.c1))))IS NOT(TOTAL(MAX(t0.c2)))))OR(((x'') BETWEEN (MIN(COUNT(*))) AND (AVG(MAX(TOTAL(TOTAL(t0.c1)))))))))AND((NOT (t0.c0))))) ISNULL);
SELECT v0.c0 FROM t0, v0;
SELECT ALL v0.c0 FROM t0, v0 WHERE ((((t0.c1, t0.c2, '1658075558')) BETWEEN ((t0.c0, v0.c0, v0.c0)) AND ((t0.c1, t0.c0, t0.c0))) COLLATE BINARY COLLATE NOCASE) UNION ALL SELECT v0.c0 FROM t0, v0 WHERE ((NOT ((((t0.c1, t0.c2, '1658075558')) BETWEEN ((t0.c0, v0.c0, v0.c0)) AND ((t0.c1, t0.c0, t0.c0))) COLLATE BINARY COLLATE NOCASE))) UNION ALL SELECT v0.c0 FROM t0, v0 WHERE ((((((t0.c1, t0.c2, '1658075558')) BETWEEN ((t0.c0, v0.c0, v0.c0)) AND ((t0.c1, t0.c0, t0.c0))) COLLATE BINARY COLLATE NOCASE) ISNULL));
SELECT v0.c0 FROM t0, v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE ((NULL) NOT NULL)  WHEN ((((t0.c1)AND(t0.c0)))OR(t0.c1)) THEN (t0.c2 IN ()) END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE ((NULL) NOT NULL)  WHEN ((((t0.c1)AND(t0.c0)))OR(t0.c1)) THEN (t0.c2 IN ()) END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE ((NULL) NOT NULL)  WHEN ((((t0.c1)AND(t0.c0)))OR(t0.c1)) THEN (t0.c2 IN ()) END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1;
SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM v0, t0 WHERE (CASE ((t0.c1) BETWEEN (t0.c0) AND (v0.c0))  WHEN LIKELY(t0.c1) THEN ((t0.c1) IS TRUE) WHEN CAST(t0.c1 AS NUMERIC) THEN ((v0.c0) NOT NULL) WHEN ((v0.c0)<(x'')) THEN CASE v0.c0  WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END END) GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 UNION SELECT v0.c0, t0.c2, t0.c0, t0.c1 FROM v0, t0 WHERE ((NOT (CASE ((t0.c1) BETWEEN (t0.c0) AND (v0.c0))  WHEN LIKELY(t0.c1) THEN ((t0.c1) IS TRUE) WHEN CAST(t0.c1 AS NUMERIC) THEN ((v0.c0) NOT NULL) WHEN ((v0.c0)<(x'')) THEN CASE v0.c0  WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END END))) GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 UNION SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM v0, t0 WHERE (((CASE ((t0.c1) BETWEEN (t0.c0) AND (v0.c0))  WHEN LIKELY(t0.c1) THEN ((t0.c1) IS TRUE) WHEN CAST(t0.c1 AS NUMERIC) THEN ((v0.c0) NOT NULL) WHEN ((v0.c0)<(x'')) THEN CASE v0.c0  WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END END) ISNULL)) GROUP BY v0.c0, t0.c2, t0.c0, t0.c1;
SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1;
SELECT ALL v0.c0, t0.c1, t0.c0, t0.c2 FROM t0, v0 GROUP BY v0.c0, t0.c1, t0.c0, t0.c2;
SELECT ALL v0.c0, t0.c1, t0.c0, t0.c2 FROM t0, v0 GROUP BY v0.c0, t0.c1, t0.c0, t0.c2 HAVING (((t0.c2)) NOT BETWEEN (((((t0.c0, GROUP_CONCAT(t0.c0), t0.c0)) NOT BETWEEN ((MAX(AVG(MIN(t0.c1))), GROUP_CONCAT(v0.c0), t0.c0)) AND ((t0.c0, AVG(t0.c0), COUNT(*)))))) AND ((SUM(t0.c1)))) UNION ALL SELECT ALL v0.c0, t0.c1, t0.c0, t0.c2 FROM t0, v0 GROUP BY v0.c0, t0.c1, t0.c0, t0.c2 HAVING (NOT ((((t0.c2)) NOT BETWEEN (((((t0.c0, GROUP_CONCAT(t0.c0), t0.c0)) NOT BETWEEN ((MAX(AVG(MIN(t0.c1))), GROUP_CONCAT(v0.c0), t0.c0)) AND ((t0.c0, AVG(t0.c0), COUNT(*)))))) AND ((SUM(t0.c1)))))) UNION ALL SELECT v0.c0, t0.c1, t0.c0, t0.c2 FROM t0, v0 GROUP BY v0.c0, t0.c1, t0.c0, t0.c2 HAVING (((((t0.c2)) NOT BETWEEN (((((t0.c0, GROUP_CONCAT(t0.c0), t0.c0)) NOT BETWEEN ((MAX(AVG(MIN(t0.c1))), GROUP_CONCAT(v0.c0), t0.c0)) AND ((t0.c0, AVG(t0.c0), COUNT(*)))))) AND ((SUM(t0.c1))))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (((((t0.c2)<<(t0.c2))) NOT BETWEEN (t0.c1) AND (t0.c2 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((t0.c2)<<(t0.c2))) NOT BETWEEN (t0.c1) AND (t0.c2 COLLATE NOCASE))))) UNION ALL SELECT * FROM t0 WHERE (((((((t0.c2)<<(t0.c2))) NOT BETWEEN (t0.c1) AND (t0.c2 COLLATE NOCASE))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT v0.c0, t0.c1, t0.c2, t0.c0 FROM t0 INNER JOIN v0 ON ((t0.c1 COLLATE BINARY)<(CAST(t0.c2 AS INTEGER)));
SELECT DISTINCT v0.c0, t0.c1, t0.c2, t0.c0 FROM t0 INNER JOIN v0 ON ((t0.c1 COLLATE BINARY)<(CAST(t0.c2 AS INTEGER))) WHERE ((CAST(t0.c1 AS INTEGER) IN (((t0.c1) NOT BETWEEN (t0.c1) AND (x''))))) UNION SELECT DISTINCT v0.c0, t0.c1, t0.c2, t0.c0 FROM t0 INNER JOIN v0 ON ((t0.c1 COLLATE BINARY)<(CAST(t0.c2 AS INTEGER))) WHERE ((NOT ((CAST(t0.c1 AS INTEGER) IN (((t0.c1) NOT BETWEEN (t0.c1) AND (x''))))))) UNION SELECT DISTINCT v0.c0, t0.c1, t0.c2, t0.c0 FROM t0 INNER JOIN v0 ON ((t0.c1 COLLATE BINARY)<(CAST(t0.c2 AS INTEGER))) WHERE ((((CAST(t0.c1 AS INTEGER) IN (((t0.c1) NOT BETWEEN (t0.c1) AND (x''))))) ISNULL));
SELECT DISTINCT v0.c0, t0.c1, t0.c2, t0.c0 FROM t0 INNER JOIN v0 ON ((t0.c1 COLLATE BINARY)<(CAST(t0.c2 AS INTEGER)));
SELECT ALL t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CASE WHEN ((NULL) BETWEEN (t0.c0) AND (t0.c0)) THEN (((t0.c1))<=((t0.c1))) WHEN ((t0.c0)OR(NULL)) THEN ((t0.c2)>>(t0.c1)) WHEN ((((((((t0.c0)AND(t0.c1)))AND(t0.c0)))OR(t0.c0)))AND(t0.c2)) THEN '-1010997155' END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CASE WHEN ((NULL) BETWEEN (t0.c0) AND (t0.c0)) THEN (((t0.c1))<=((t0.c1))) WHEN ((t0.c0)OR(NULL)) THEN ((t0.c2)>>(t0.c1)) WHEN ((((((((t0.c0)AND(t0.c1)))AND(t0.c0)))OR(t0.c0)))AND(t0.c2)) THEN '-1010997155' END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CASE WHEN ((NULL) BETWEEN (t0.c0) AND (t0.c0)) THEN (((t0.c1))<=((t0.c1))) WHEN ((t0.c0)OR(NULL)) THEN ((t0.c2)>>(t0.c1)) WHEN ((((((((t0.c0)AND(t0.c1)))AND(t0.c0)))OR(t0.c0)))AND(t0.c2)) THEN '-1010997155' END) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0;
SELECT ALL t0.c2, t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0, v0.c0;
SELECT t0.c2, t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0, v0.c0 HAVING '9K' UNION ALL SELECT t0.c2, t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0, v0.c0 HAVING (NOT ('9K')) UNION ALL SELECT t0.c2, t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0, v0.c0 HAVING (('9K') ISNULL);
SELECT ALL t0.c2, t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0, v0.c0;
SELECT t0.c2, t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0, v0.c0 HAVING '9K' UNION ALL SELECT t0.c2, t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0, v0.c0 HAVING (NOT ('9K')) UNION ALL SELECT t0.c2, t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0, v0.c0 HAVING (('9K') ISNULL);
SELECT ALL t0.c2, t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0, v0.c0;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((((((t0.c1))>=((t0.c2)))) IS TRUE)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((((t0.c1))>=((t0.c2)))) IS TRUE)))) UNION ALL SELECT * FROM t0 WHERE ((((((((t0.c1))>=((t0.c2)))) IS TRUE)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0 COLLATE BINARY)+(CAST(v0.c0 AS TEXT)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0 COLLATE BINARY)+(CAST(v0.c0 AS TEXT)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0 COLLATE BINARY)+(CAST(v0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) IS TRUE)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM v0, t0 WHERE ((NOT (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) IS TRUE)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM v0, t0 NOT INDEXED WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) IS TRUE)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING CAST(((v0.c0) NOTNULL) AS BLOB) UNION ALL SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING (NOT (CAST(((v0.c0) NOTNULL) AS BLOB))) UNION ALL SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING ((CAST(((v0.c0) NOTNULL) AS BLOB)) ISNULL);
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING CAST(((v0.c0) NOTNULL) AS BLOB) UNION ALL SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING (NOT (CAST(((v0.c0) NOTNULL) AS BLOB))) UNION ALL SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING ((CAST(((v0.c0) NOTNULL) AS BLOB)) ISNULL);
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((0.43347028627230344) NOT BETWEEN (((v0.c0) IS FALSE)) AND ((- (x''))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((0.43347028627230344) NOT BETWEEN (((v0.c0) IS FALSE)) AND ((- (x''))))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((0.43347028627230344) NOT BETWEEN (((v0.c0) IS FALSE)) AND ((- (x''))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 NOT INDEXED WHERE ((- (CAST(t0.c0 AS REAL)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((- (CAST(t0.c0 AS REAL)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((- (CAST(t0.c0 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)*('㣀rO,#HTC')))AND(((v0.c0)IS NOT(x'a272')))))AND((NOT (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0)*('㣀rO,#HTC')))AND(((v0.c0)IS NOT(x'a272')))))AND((NOT (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((((v0.c0)*('㣀rO,#HTC')))AND(((v0.c0)IS NOT(x'a272')))))AND((NOT (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c0, t0.c1 FROM t0 CROSS JOIN v0 ON ((((t0.c1 COLLATE NOCASE)AND((~ (t0.c0)))))AND(CASE WHEN t0.c2 THEN v0.c0 ELSE t0.c0 END)) GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 CROSS JOIN v0 ON ((((t0.c1 COLLATE NOCASE)AND((~ (t0.c0)))))AND(CASE WHEN t0.c2 THEN v0.c0 ELSE t0.c0 END)) GROUP BY t0.c0, t0.c1 HAVING GROUP_CONCAT((~ (t0.c0))) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 CROSS JOIN v0 ON ((((t0.c1 COLLATE NOCASE)AND((~ (t0.c0)))))AND(CASE WHEN t0.c2 THEN v0.c0 ELSE t0.c0 END)) GROUP BY t0.c0, t0.c1 HAVING (NOT (GROUP_CONCAT((~ (t0.c0))))) UNION ALL SELECT t0.c0, t0.c1 FROM t0 CROSS JOIN v0 ON ((((t0.c1 COLLATE NOCASE)AND((~ (t0.c0)))))AND(CASE WHEN t0.c2 THEN v0.c0 ELSE t0.c0 END)) GROUP BY t0.c0, t0.c1 HAVING ((GROUP_CONCAT((~ (t0.c0)))) ISNULL);
SELECT t0.c0, t0.c1 FROM t0 CROSS JOIN v0 ON ((((t0.c1 COLLATE NOCASE)AND((~ (t0.c0)))))AND(CASE WHEN t0.c2 THEN v0.c0 ELSE t0.c0 END)) GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 CROSS JOIN v0 ON ((((t0.c1 COLLATE NOCASE)AND((~ (t0.c0)))))AND(CASE WHEN t0.c2 THEN v0.c0 ELSE t0.c0 END)) GROUP BY t0.c0, t0.c1 HAVING GROUP_CONCAT((~ (t0.c0))) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 CROSS JOIN v0 ON ((((t0.c1 COLLATE NOCASE)AND((~ (t0.c0)))))AND(CASE WHEN t0.c2 THEN v0.c0 ELSE t0.c0 END)) GROUP BY t0.c0, t0.c1 HAVING (NOT (GROUP_CONCAT((~ (t0.c0))))) UNION ALL SELECT t0.c0, t0.c1 FROM t0 CROSS JOIN v0 ON ((((t0.c1 COLLATE NOCASE)AND((~ (t0.c0)))))AND(CASE WHEN t0.c2 THEN v0.c0 ELSE t0.c0 END)) GROUP BY t0.c0, t0.c1 HAVING ((GROUP_CONCAT((~ (t0.c0)))) ISNULL);
SELECT t0.c0, t0.c1 FROM t0 CROSS JOIN v0 ON ((((t0.c1 COLLATE NOCASE)AND((~ (t0.c0)))))AND(CASE WHEN t0.c2 THEN v0.c0 ELSE t0.c0 END)) GROUP BY t0.c0, t0.c1;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (CAST(((v0.c0) BETWEEN (NULL) AND (v0.c0)) AS TEXT)) UNION ALL SELECT * FROM v0 WHERE ((NOT (CAST(((v0.c0) BETWEEN (NULL) AND (v0.c0)) AS TEXT)))) UNION ALL SELECT ALL * FROM v0 WHERE (((CAST(((v0.c0) BETWEEN (NULL) AND (v0.c0)) AS TEXT)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE ((((t0.c2)) BETWEEN ((((t0.c1)||(v0.c0)))) AND ((((t0.c2) BETWEEN (t0.c1) AND (v0.c0)))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT ((((t0.c2)) BETWEEN ((((t0.c1)||(v0.c0)))) AND ((((t0.c2) BETWEEN (t0.c1) AND (v0.c0)))))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((((((t0.c2)) BETWEEN ((((t0.c1)||(v0.c0)))) AND ((((t0.c2) BETWEEN (t0.c1) AND (v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT ALL t0.c0, t0.c2, v0.c0 FROM t0, v0 GROUP BY t0.c0, t0.c2, v0.c0;
SELECT ALL t0.c0, t0.c2, v0.c0 FROM t0, v0 WHERE (json_object(v0.c0, (~ (t0.c1)))) GROUP BY t0.c0, t0.c2, v0.c0 UNION SELECT t0.c0, t0.c2, v0.c0 FROM t0, v0 WHERE ((NOT (json_object(v0.c0, (~ (t0.c1)))))) GROUP BY t0.c0, t0.c2, v0.c0 UNION SELECT ALL t0.c0, t0.c2, v0.c0 FROM t0, v0 WHERE (((json_object(v0.c0, (~ (t0.c1)))) ISNULL)) GROUP BY t0.c0, t0.c2, v0.c0;
SELECT ALL t0.c0, t0.c2, v0.c0 FROM t0, v0 GROUP BY t0.c0, t0.c2, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (NULL) UNION ALL SELECT * FROM v0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM v0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0, t0.c0, t0.c1, t0.c2 FROM v0, t0;
SELECT DISTINCT v0.c0, t0.c0, t0.c1, t0.c2 FROM v0, t0 WHERE (CAST(((t0.c2)!=(0.17016933752003238)) AS INTEGER)) UNION SELECT DISTINCT v0.c0, t0.c0, t0.c1, t0.c2 FROM v0 NOT INDEXED, t0 WHERE ((NOT (CAST(((t0.c2)!=(0.17016933752003238)) AS INTEGER)))) UNION SELECT DISTINCT v0.c0, t0.c0, t0.c1, t0.c2 FROM v0, t0 WHERE (((CAST(((t0.c2)!=(0.17016933752003238)) AS INTEGER)) ISNULL));
SELECT DISTINCT v0.c0, t0.c0, t0.c1, t0.c2 FROM v0, t0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0 IN ()), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE 'e}' END, v0.c0))!=((TRIM(DISTINCT 0xffffffffc1754397), NULL COLLATE NOCASE, ((v0.c0)|(v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0 IN ()), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE 'e}' END, v0.c0))<>((TRIM(DISTINCT 0Xffffffffc1754397), NULL COLLATE NOCASE, ((v0.c0)|(v0.c0)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0 IN ()), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE 'e}' END, v0.c0))<>((TRIM(DISTINCT 0Xffffffffc1754397), NULL COLLATE NOCASE, ((v0.c0)|(v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c1, t0.c0, v0.c0, t0.c2 FROM t0 CROSS JOIN v0 ON ((NULLIF(DISTINCT v0.c0, t0.c1)) NOTNULL) GROUP BY t0.c1, t0.c0, v0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, v0.c0, t0.c2 FROM t0 CROSS JOIN v0 ON ((NULLIF(DISTINCT v0.c0, t0.c1)) NOTNULL) GROUP BY t0.c1, t0.c0, v0.c0, t0.c2 HAVING MIN((- (SUM(AVG(t0.c2))))) UNION ALL SELECT ALL t0.c1, t0.c0, v0.c0, t0.c2 FROM t0 CROSS JOIN v0 ON ((NULLIF(DISTINCT v0.c0, t0.c1)) NOTNULL) GROUP BY t0.c1, t0.c0, v0.c0, t0.c2 HAVING (NOT (MIN((- (SUM(AVG(t0.c2))))))) UNION ALL SELECT t0.c1, t0.c0, v0.c0, t0.c2 FROM t0 CROSS JOIN v0 ON ((NULLIF(DISTINCT v0.c0, t0.c1)) NOTNULL) GROUP BY t0.c1, t0.c0, v0.c0, t0.c2 HAVING ((MIN((- (SUM(AVG(t0.c2)))))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE ((NOT (CASE t0.c0  WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((NOT (CASE t0.c0  WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((NOT (CASE t0.c0  WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c2, v0.c0, t0.c0 FROM t0, v0;
SELECT DISTINCT t0.c2, v0.c0, t0.c0 FROM t0, v0 WHERE (((v0.c0)IS NOT(v0.c0)) COLLATE NOCASE COLLATE BINARY) UNION SELECT DISTINCT t0.c2, v0.c0, t0.c0 FROM t0, v0 WHERE ((NOT (((v0.c0)IS NOT(v0.c0)) COLLATE NOCASE COLLATE BINARY))) UNION SELECT DISTINCT t0.c2, v0.c0, t0.c0 FROM t0, v0 WHERE (((((v0.c0)IS NOT(v0.c0)) COLLATE NOCASE COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c2, v0.c0, t0.c0 FROM t0, v0;
SELECT ALL v0.c0 FROM v0, t0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t0 WHERE ((NOT (((v0.c0)AND(t0.c1))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, t0 WHERE ((NOT ((NOT (((v0.c0)AND(t0.c1))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, t0 WHERE ((((NOT (((v0.c0)AND(t0.c1))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t0 GROUP BY v0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING UPPER(DISTINCT MIN(COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (UPPER(DISTINCT MIN(COUNT(*))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((UPPER(DISTINCT MIN(COUNT(*)))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (COALESCE((~ (t0.c0)), '1646T-5292767224388043929 1645:796914317728037996-1834T1018-2297678254194579429 355T')) UNION ALL SELECT * FROM t0 WHERE ((NOT (COALESCE((~ (t0.c0)), '1646T-5292767224388043929 1645:796914317728037996-1834T1018-2297678254194579429 355T')))) UNION ALL SELECT * FROM t0 WHERE (((COALESCE((~ (t0.c0)), '1646T-5292767224388043929 1645:796914317728037996-1834T1018-2297678254194579429 355T')) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM v0 INDEXED BY i13;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0)>=(v0.c0)))+((((v0.c0))==((NULL)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)>=(v0.c0)))+((((v0.c0))=((NULL)))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)>=(v0.c0)))+((((v0.c0))=((NULL)))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((((v0.c0)<=(v0.c0)))IS NOT((v0.c0 IN (v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((v0.c0)<=(v0.c0)))IS NOT((v0.c0 IN (v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE (((((((v0.c0)<=(v0.c0)))IS NOT((v0.c0 IN (v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON NULL;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON NULL WHERE (t0.c1) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON NULL WHERE ((NOT (t0.c1))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON NULL WHERE (((t0.c1) ISNULL));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON NULL;
SELECT t0.c2, t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0, v0.c0;
SELECT t0.c2, t0.c0, v0.c0 FROM t0, v0 WHERE (4.43137426E8) GROUP BY t0.c2, t0.c0, v0.c0 UNION SELECT ALL t0.c2, t0.c0, v0.c0 FROM t0, v0 WHERE ((NOT (4.43137426E8))) GROUP BY t0.c2, t0.c0, v0.c0 UNION SELECT t0.c2, t0.c0, v0.c0 FROM t0, v0 WHERE (((4.43137426E8) ISNULL)) GROUP BY t0.c2, t0.c0, v0.c0;
SELECT t0.c2, t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0, v0.c0;
SELECT ALL t0.c2, t0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c1, v0.c0;
SELECT t0.c2, t0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c1, v0.c0 HAVING (((SUM(MAX(t0.c0)) IN ()))IS(COUNT(AVG(TOTAL(v0.c0))))) UNION ALL SELECT t0.c2, t0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c1, v0.c0 HAVING (NOT ((((SUM(MAX(t0.c0)) IN ()))IS(COUNT(AVG(TOTAL(v0.c0))))))) UNION ALL SELECT ALL t0.c2, t0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c1, v0.c0 HAVING (((((SUM(MAX(t0.c0)) IN ()))IS(COUNT(AVG(TOTAL(v0.c0)))))) ISNULL);
SELECT ALL v0.c0, t0.c1, t0.c0 FROM t0, v0;
SELECT ALL v0.c0, t0.c1, t0.c0 FROM t0, v0 WHERE (((((CAST(t0.c0 AS TEXT))AND((NULL IN (v0.c0)))))AND((- (t0.c2))))) UNION ALL SELECT ALL v0.c0, t0.c1, t0.c0 FROM t0, v0 WHERE ((NOT (((((CAST(t0.c0 AS TEXT))AND((NULL IN (v0.c0)))))AND((- (t0.c2))))))) UNION ALL SELECT ALL v0.c0, t0.c1, t0.c0 FROM t0, v0 WHERE (((((((CAST(t0.c0 AS TEXT))AND((NULL IN (v0.c0)))))AND((- (t0.c2))))) ISNULL));
SELECT ALL v0.c0, t0.c1, t0.c0 FROM t0, v0;
SELECT DISTINCT v0.c0 FROM t0 FULL OUTER JOIN v0 ON '-1049279593';
SELECT DISTINCT v0.c0 FROM t0 FULL OUTER JOIN v0 ON '-1049279593' WHERE ((((t0.c0)) NOT BETWEEN ((x'acaf')) AND (((~ (t0.c2)))))) UNION SELECT DISTINCT v0.c0 FROM t0 FULL OUTER JOIN v0 ON '-1049279593' WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((x'acaf')) AND (((~ (t0.c2)))))))) UNION SELECT DISTINCT v0.c0 FROM t0 FULL OUTER JOIN v0 ON '-1049279593' WHERE ((((((t0.c0)) NOT BETWEEN ((x'acaf')) AND (((~ (t0.c2)))))) ISNULL));
SELECT DISTINCT v0.c0 FROM t0 FULL OUTER JOIN v0 ON '-1049279593';
