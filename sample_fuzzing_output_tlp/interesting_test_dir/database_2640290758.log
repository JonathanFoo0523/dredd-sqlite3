-- Time: 2024/06/09 14:48:37
-- Database: database58
-- Database version: 3.40.0
-- seed value: 2640290758
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, tokenize=porter); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.reverse_unordered_selects = true; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0='ࢦm}ꌨuv2!'; -- 0ms;
ANALYZE; -- 0ms;
ANALYZE; -- 5ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '44310'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '12629'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=44501158,11');\n; -- 0ms;
PRAGMA main.mmap_size; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-1528126680'); -- 0ms;
ANALYZE temp; -- 0ms;
PRAGMA main.threads = 3171427636029779967; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
PRAGMA wal_autocheckpoint = 5178564922750647456; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x''); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=44501158,2');\n; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'4fac', c0=0.7612074340341214 WHERE CAST((~ (vt0.c0)) AS BLOB); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1613608702,2');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.6262605975733537) WHERE ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(0X60a3ab17)))<>(((vt0.c0) NOTNULL))); -- 1ms;
INSERT OR ABORT INTO vt0 VALUES ('2033345992'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL), ('-2036268475'), (1621338903), (0.15585088744185793), ('0.6262605975733537'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=NULL WHERE (((NOT (vt0.c0))) BETWEEN ((vt0.c0 IN (vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('-1349291892', vt0.c0, vt0.c0)) AND ((vt0.c0, x'', vt0.c0))))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ANALYZE; -- 0ms;
CREATE VIEW v0(c0, c1, c2) AS SELECT DISTINCT ((vt0.c0 COLLATE RTRIM) ISNULL), CASE NULL  WHEN 0Xffffffffb7e3770c COLLATE NOCASE THEN CASE x''  WHEN vt0.c0 THEN '3nowFv4[C' END WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN GROUP_CONCAT(vt0.c0) WHEN COUNT(vt0.c0) THEN CHAR(vt0.c0) WHEN ((vt0.c0)%(0xffffffff902ec9d0)) THEN '-1349291892' WHEN (((('-1537054259')OR(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN vt0.c0 THEN (vt0.c0 IN ()) WHEN ((vt0.c0)&(vt0.c0)) THEN 0.5605766736636796 COLLATE NOCASE ELSE ((vt0.c0)%(NULL)) END, (vt0.c0 IN (x'', vt0.c0)) COLLATE RTRIM FROM vt0 WHERE ((NOT ((NOT (x''))))); -- 0ms;
PRAGMA main.auto_vacuum; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL), (1249826371), (x'db53'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0, c0, c0)=(x'', x'', 'h5'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR ABORT vt0 SET c0=NULL WHERE '_['; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA stats; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('O\r?vɅ5lL{'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1155564586); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(x'7e7a', 0.057514207182696175) WHERE ((vt0.c0) BETWEEN (((vt0.c0) ISNULL)) AND (((((((((((((((((vt0.c0)AND(NULL)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))); -- 0ms;
DELETE FROM vt0; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('63379193'); -- 0ms;
PRAGMA main.wal_autocheckpoint = 353981627866312885; -- 0ms;
PRAGMA default_cache_size = -9223372036854775808; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (-1.20982962E9); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0='', c0=1062380545, c0=0.31716058073347453; -- 0ms;
UPDATE OR FAIL vt0 SET (c0, c0)=('1224822176', NULL) WHERE ((((((((((vt0.c0) IS TRUE))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)>=(vt0.c0)))))OR(vt0.c0)); -- 0ms;
UPDATE vt0 SET c0=-1.165909276E9, c0='R䶠K噸6e' WHERE ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0)>=(vt0.c0)))))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(NULL)))OR(vt0.c0)))))AND(vt0.c0)); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (NULL), (NULL), (0.1503642604176736); -- 4ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 578846803);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '14819'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 757314409); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1846907169,2');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA temp.short_column_names; -- 0ms;
UPDATE OR REPLACE vt0 SET c0=NULL WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)&((((vt0.c0, '2033345992', vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, ''))))); -- 4ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (NULL), (x'6299a4a8'), (x'6497'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-705658580,5');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA foreign_keys; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0Xfffffffffb4a8a79); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1313921754 1796193294 sz=-862690449 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1076340367 unordered'); -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4); -- 0ms;
PRAGMA temp.secure_delete = FAST; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0, c0)=('', 0x283d54c6, x'9855'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''), (NULL), (x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 7ms;
UPDATE OR IGNORE vt0 SET c0=NULL WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) BETWEEN (0Xffffffffbfd85971) AND (CAST(vt0.c0 AS INTEGER))); -- 1ms;
INSERT OR ABORT INTO vt0 VALUES (x'948d'); -- 8ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=12'); -- 1ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES ('-2036268475'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=('-11159764') WHERE CAST(((rt0.c4) NOT NULL) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (506025592), (''), ('-1846907169'); -- 0ms;
INSERT OR REPLACE INTO rt0(c4, c3, c0, c2, c1) VALUES (0.9977244896968165, 'R䶠KJ6e', '3NOWFV4[C', '-724294673', 0.6456972374693616), (CASE WHEN ((0.030310270437227005) ISNULL) THEN LAST_INSERT_ROWID() END, 0.18673944608579474, NULL, NULL, 0.6456972374693616), (-7.0565858E8, 0.35017036101210197, '', '1087270313', x'a6a9'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0.17701303316145545); -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c3) VALUES ('', '1796193294'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.27673718655321267); -- 0ms;
COMMIT; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c0, c2, c3)=(x'', '1621338903', 0X3bca5e4d); -- 0ms;
PRAGMA stats; -- 0ms;
PRAGMA cache_spill; -- 0ms;
UPDATE OR REPLACE vt0 SET (c0)=('') WHERE CAST(((vt0.c0)|(vt0.c0)) AS NUMERIC); -- 0ms;
UPDATE OR ROLLBACK rt0 SET c1='1782595962', c0='g*￿甗7U7'; -- 0ms;
PRAGMA main.default_cache_size; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''); -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
PRAGMA main.locking_mode; -- 0ms;
INSERT OR FAIL INTO rt0 VALUES ('NCBF', 0x7c0b9454, 0Xffffffff9b64d8c5, x'', 0.46192513741533825), (NULL, 0.38946335335866833, '0.31716058073347453', '', 0x68f54eaa), ('奱蹼 ', '0.7612074340341214', 'h5', x'e0e0cb5b', '675108038'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('ࡒn	RkM'); -- 0ms;
CREATE TEMP TABLE t0 (c0 INTEGER ); -- 0ms;
REINDEX RTRIM; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1530510894); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1611623547);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA defer_foreign_keys = true; -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES ('pt龭\rX%'), (x''), (1.003118157E9); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('63379193'); -- 2ms;
UPDATE OR IGNORE t0 SET (c0)=('h5'); -- 0ms;
INSERT OR ABORT INTO rt0(c4, c2, c0) VALUES (0.46192513741533825, NULL, x''); -- 1ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL rt0.c2, v0.c2, t0.c0, v0.c0, rt0.c4, v0.c1, rt0.c1, vt0.c0 FROM v0, vt0, rt0, t0;
SELECT ALL rt0.c2, v0.c2, t0.c0, v0.c0, rt0.c4, v0.c1, rt0.c1, vt0.c0 FROM v0, vt0, rt0, t0 WHERE ((((NULL IN (',&')))*(0.9977244896968165 COLLATE NOCASE))) UNION ALL SELECT rt0.c2, v0.c2, t0.c0, v0.c0, rt0.c4, v0.c1, rt0.c1, vt0.c0 FROM v0, vt0, rt0, t0 WHERE ((NOT ((((NULL IN (',&')))*(0.9977244896968165 COLLATE NOCASE))))) UNION ALL SELECT ALL rt0.c2, v0.c2, t0.c0, v0.c0, rt0.c4, v0.c1, rt0.c1, vt0.c0 FROM v0, vt0, rt0, t0 WHERE ((((((NULL IN (',&')))*(0.9977244896968165 COLLATE NOCASE))) ISNULL));
SELECT ALL rt0.c2, v0.c2, t0.c0, v0.c0, rt0.c4, v0.c1, rt0.c1, vt0.c0 FROM v0, vt0, rt0, t0;
SELECT DISTINCT * FROM rt0, v0, vt0;
SELECT DISTINCT * FROM rt0, v0, vt0 WHERE ((((CASE WHEN rt0.c1 THEN v0.c1 WHEN rt0.c0 THEN rt0.c4 WHEN 0x50ce7517 THEN v0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN v0.c1 END))>(((rt0.c1 IN ()))))) UNION SELECT DISTINCT * FROM rt0, v0, vt0 WHERE ((NOT ((((CASE WHEN rt0.c1 THEN v0.c1 WHEN rt0.c0 THEN rt0.c4 WHEN 0X50ce7517 THEN v0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN v0.c1 END))>(((rt0.c1 IN ()))))))) UNION SELECT DISTINCT * FROM rt0, v0, vt0 WHERE ((((((CASE WHEN rt0.c1 THEN v0.c1 WHEN rt0.c0 THEN rt0.c4 WHEN 0x50ce7517 THEN v0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN v0.c1 END))>(((rt0.c1 IN ()))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((0.16831986767431462)!=(vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((0.16831986767431462)<>(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((0.16831986767431462)<>(vt0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c1, rt0.c4 FROM vt0 NOT INDEXED, v0 FULL OUTER JOIN rt0 ON ((((v0.c2) NOTNULL)) NOT BETWEEN (v0.c2 COLLATE NOCASE) AND (CAST(rt0.c0 AS NUMERIC))) GROUP BY v0.c1, rt0.c4;
SELECT ALL v0.c1, rt0.c4 FROM vt0, v0 FULL OUTER JOIN rt0 ON ((((v0.c2) NOTNULL)) NOT BETWEEN (v0.c2 COLLATE NOCASE) AND (CAST(rt0.c0 AS NUMERIC))) GROUP BY v0.c1, rt0.c4 HAVING ((((v0.c2)||(AVG(COUNT(*))))) NOT BETWEEN (MIN(TOTAL(MIN(COUNT(rt0.c2))))) AND (TRIM(AVG(AVG(rt0.c2))))) UNION ALL SELECT ALL v0.c1, rt0.c4 FROM vt0, v0 FULL OUTER JOIN rt0 ON ((((v0.c2) NOTNULL)) NOT BETWEEN (v0.c2 COLLATE NOCASE) AND (CAST(rt0.c0 AS NUMERIC))) GROUP BY v0.c1, rt0.c4 HAVING (NOT (((((v0.c2)||(AVG(COUNT(*))))) NOT BETWEEN (MIN(TOTAL(MIN(COUNT(rt0.c2))))) AND (TRIM(AVG(AVG(rt0.c2))))))) UNION ALL SELECT v0.c1, rt0.c4 FROM vt0, v0 FULL OUTER JOIN rt0 ON ((((v0.c2) NOTNULL)) NOT BETWEEN (v0.c2 COLLATE NOCASE) AND (CAST(rt0.c0 AS NUMERIC))) GROUP BY v0.c1, rt0.c4 HAVING ((((((v0.c2)||(AVG(COUNT(*))))) NOT BETWEEN (MIN(TOTAL(MIN(COUNT(rt0.c2))))) AND (TRIM(AVG(AVG(rt0.c2)))))) ISNULL);
SELECT t0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c0 IN (vt0.c0, t0.c0)))==((NOT (vt0.c0))));
SELECT t0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c0 IN (vt0.c0, t0.c0)))==((NOT (vt0.c0)))) WHERE ((~ (((vt0.c0)<>(t0.c0))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c0 IN (vt0.c0, t0.c0)))==((NOT (vt0.c0)))) WHERE ((NOT ((~ (((vt0.c0)<>(t0.c0))))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c0 IN (vt0.c0, t0.c0)))=((NOT (vt0.c0)))) WHERE ((((~ (((vt0.c0)<>(t0.c0))))) ISNULL));
SELECT t0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c0 IN (vt0.c0, t0.c0)))==((NOT (vt0.c0))));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ('1003118157' COLLATE NOCASE) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ('1003118157' COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((('1003118157' COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((((NOT (vt0.c0)))AND(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(((((((((x'2a90')OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((((((NOT (vt0.c0)))AND(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(((((((((x'2a90')OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((((((NOT (vt0.c0)))AND(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(((((((((x'2a90')OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0 FROM t0, rt0, v0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM t0, rt0, v0, vt0 GROUP BY rt0.c0 HAVING (((TOTAL(AVG(x'')), rt0.c2, MIN(GROUP_CONCAT('506025592')), GROUP_CONCAT(t0.c0), t0.c0)) NOT BETWEEN (((t0.c0 IN (COUNT(*))), MAX(SUM(v0.c1)), GROUP_CONCAT(COUNT(*)), COUNT(AVG(rt0.c4)), COUNT(COUNT(*)))) AND ((CASE WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN MIN(AVG(v0.c1)) THEN MAX(rt0.c0) END, MIN(rt0.c4), CASE MIN(MIN(rt0.c0))  WHEN rt0.c4 THEN -1214132137 ELSE rt0.c0 END, (~ (COUNT(MAX(AVG(MIN(GROUP_CONCAT(NULL))))))), MIN(v0.c2)))) UNION ALL SELECT rt0.c0 FROM t0, rt0, v0, vt0 GROUP BY rt0.c0 HAVING (NOT ((((TOTAL(AVG(x'')), rt0.c2, MIN(GROUP_CONCAT('506025592')), GROUP_CONCAT(t0.c0), t0.c0)) NOT BETWEEN (((t0.c0 IN (COUNT(*))), MAX(SUM(v0.c1)), GROUP_CONCAT(COUNT(*)), COUNT(AVG(rt0.c4)), COUNT(COUNT(*)))) AND ((CASE WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN MIN(AVG(v0.c1)) THEN MAX(rt0.c0) END, MIN(rt0.c4), CASE MIN(MIN(rt0.c0))  WHEN rt0.c4 THEN -1214132137 ELSE rt0.c0 END, (~ (COUNT(MAX(AVG(MIN(GROUP_CONCAT(NULL))))))), MIN(v0.c2)))))) UNION ALL SELECT ALL rt0.c0 FROM t0, rt0, v0, vt0 GROUP BY rt0.c0 HAVING (((((TOTAL(AVG(x'')), rt0.c2, MIN(GROUP_CONCAT('506025592')), GROUP_CONCAT(t0.c0), t0.c0)) NOT BETWEEN (((t0.c0 IN (COUNT(*))), MAX(SUM(v0.c1)), GROUP_CONCAT(COUNT(*)), COUNT(AVG(rt0.c4)), COUNT(COUNT(*)))) AND ((CASE WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN MIN(AVG(v0.c1)) THEN MAX(rt0.c0) END, MIN(rt0.c4), CASE MIN(MIN(rt0.c0))  WHEN rt0.c4 THEN -1214132137 ELSE rt0.c0 END, (~ (COUNT(MAX(AVG(MIN(GROUP_CONCAT(NULL))))))), MIN(v0.c2))))) ISNULL);
SELECT * FROM t0, v0, rt0, vt0;
SELECT ALL * FROM t0, v0, rt0, vt0 WHERE ((((v0.c0)<=(rt0.c1)) IN ())) UNION ALL SELECT ALL * FROM t0, v0, rt0 NOT INDEXED, vt0 WHERE ((NOT ((((v0.c0)<=(rt0.c1)) IN ())))) UNION ALL SELECT * FROM t0, v0, rt0, vt0 WHERE ((((((v0.c0)<=(rt0.c1)) IN ())) ISNULL));
SELECT * FROM t0, v0, rt0, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c1, v0.c2, v0.c1, v0.c2, v0.c2)) NOT BETWEEN (((((v0.c2))>=((v0.c0))), CAST(v0.c0 AS BLOB), ((v0.c0) NOTNULL), v0.c1, '*RQ*#l')) AND ((LENGTH(x''), v0.c0 COLLATE NOCASE, (NOT (v0.c1)), ((1.621338903E9) IS TRUE), (+ (v0.c2)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c1, v0.c2, v0.c1, v0.c2, v0.c2)) NOT BETWEEN (((((v0.c2))>=((v0.c0))), CAST(v0.c0 AS BLOB), ((v0.c0) NOTNULL), v0.c1, '*RQ*#l')) AND ((LENGTH(x''), v0.c0 COLLATE NOCASE, (NOT (v0.c1)), ((1.621338903E9) IS TRUE), (+ (v0.c2)))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c1, v0.c2, v0.c1, v0.c2, v0.c2)) NOT BETWEEN (((((v0.c2))>=((v0.c0))), CAST(v0.c0 AS BLOB), ((v0.c0) NOTNULL), v0.c1, '*RQ*#l')) AND ((LENGTH(x''), v0.c0 COLLATE NOCASE, (NOT (v0.c1)), ((1.621338903E9) IS TRUE), (+ (v0.c2)))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt0.c0 FROM t0, rt0, vt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt0.c0;
SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt0.c0 FROM t0, rt0, vt0 WHERE (((((((((rt0.c4)AND(rt0.c3)))OR(NULL)))AND(rt0.c1)))OR(t0.c0)) COLLATE NOCASE) GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt0.c0 UNION SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt0.c0 FROM t0, rt0, vt0 WHERE ((NOT (((((((((rt0.c4)AND(rt0.c3)))OR(NULL)))AND(rt0.c1)))OR(t0.c0)) COLLATE NOCASE))) GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt0.c0 UNION SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt0.c0 FROM t0, rt0, vt0 WHERE (((((((((((rt0.c4)AND(rt0.c3)))OR(NULL)))AND(rt0.c1)))OR(t0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt0.c0;
SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt0.c0 FROM t0, rt0, vt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt0.c0;
SELECT ALL rt0.c1, v0.c0, vt0.c0 FROM v0, vt0 INNER JOIN rt0 ON (NOT (((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)))) RIGHT OUTER JOIN t0 ON (~ (((vt0.c0)<<(rt0.c3)))) GROUP BY rt0.c1, v0.c0, vt0.c0;
SELECT rt0.c1, v0.c0, vt0.c0 FROM v0, vt0 INNER JOIN rt0 ON (NOT (((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)))) RIGHT OUTER JOIN t0 ON (~ (((vt0.c0)<<(rt0.c3)))) GROUP BY rt0.c1, v0.c0, vt0.c0 HAVING COUNT((- (MIN(rt0.c4)))) UNION ALL SELECT rt0.c1, v0.c0, vt0.c0 FROM v0, vt0 INNER JOIN rt0 ON (NOT (((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)))) RIGHT OUTER JOIN t0 ON (~ (((vt0.c0)<<(rt0.c3)))) GROUP BY rt0.c1, v0.c0, vt0.c0 HAVING (NOT (COUNT((- (MIN(rt0.c4)))))) UNION ALL SELECT rt0.c1, v0.c0, vt0.c0 FROM v0, vt0 INNER JOIN rt0 ON (NOT (((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)))) RIGHT OUTER JOIN t0 ON (~ (((vt0.c0)<<(rt0.c3)))) GROUP BY rt0.c1, v0.c0, vt0.c0 HAVING ((COUNT((- (MIN(rt0.c4))))) ISNULL);
SELECT * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE (((t0.c0)|((NOT (t0.c0))))) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT (((t0.c0)|((NOT (t0.c0))))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((((t0.c0)|((NOT (t0.c0))))) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT * FROM t0, v0 FULL OUTER JOIN vt0 ON (NOT (TRIM(DISTINCT vt0.c0)));
SELECT DISTINCT * FROM t0, v0 FULL OUTER JOIN vt0 ON (NOT (TRIM(DISTINCT vt0.c0))) WHERE ((NOT (''))) UNION SELECT DISTINCT * FROM t0, v0 FULL OUTER JOIN vt0 ON (NOT (TRIM(DISTINCT vt0.c0))) WHERE ((NOT ((NOT (''))))) UNION SELECT DISTINCT * FROM t0, v0 FULL OUTER JOIN vt0 ON (NOT (TRIM(DISTINCT vt0.c0))) WHERE ((((NOT (''))) ISNULL));
SELECT DISTINCT * FROM t0, v0 FULL OUTER JOIN vt0 ON (NOT (TRIM(DISTINCT vt0.c0)));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (('o*!z' IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (('o*!z' IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 NOT INDEXED WHERE (((('o*!z' IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c3, v0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, v0.c1, rt0.c4;
SELECT ALL rt0.c3, v0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, v0.c1, rt0.c4 HAVING TOTAL(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END) UNION ALL SELECT ALL rt0.c3, v0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, v0.c1, rt0.c4 HAVING (NOT (TOTAL(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) UNION ALL SELECT rt0.c3, v0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, v0.c1, rt0.c4 HAVING ((TOTAL(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)) ISNULL);
SELECT rt0.c3, v0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, v0.c1, rt0.c4;
SELECT ALL rt0.c3, v0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, v0.c1, rt0.c4 HAVING TOTAL(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END) UNION ALL SELECT ALL rt0.c3, v0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, v0.c1, rt0.c4 HAVING (NOT (TOTAL(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) UNION ALL SELECT rt0.c3, v0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, v0.c1, rt0.c4 HAVING ((TOTAL(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)) ISNULL);
SELECT rt0.c3, v0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, v0.c1, rt0.c4;
SELECT ALL MIN('>AjL''bR9i') FROM t0, v0, rt0, vt0 ORDER BY ((v0.c0 COLLATE NOCASE) BETWEEN (rt0.c3 COLLATE BINARY) AND (((rt0.c4)>>(rt0.c1))));
SELECT ALL rt0.c1, rt0.c0, t0.c0, rt0.c4 FROM t0, rt0, v0, vt0;
SELECT rt0.c1, rt0.c0, t0.c0, rt0.c4 FROM t0, rt0, v0, vt0 WHERE (CAST((((t0.c0, v0.c1, v0.c1))<>((rt0.c0, x'861d', rt0.c3))) AS INTEGER)) UNION ALL SELECT ALL rt0.c1, rt0.c0, t0.c0, rt0.c4 FROM t0, rt0, v0, vt0 WHERE ((NOT (CAST((((t0.c0, v0.c1, v0.c1))!=((rt0.c0, x'861d', rt0.c3))) AS INTEGER)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, t0.c0, rt0.c4 FROM t0, rt0, v0, vt0 WHERE (((CAST((((t0.c0, v0.c1, v0.c1))<>((rt0.c0, x'861d', rt0.c3))) AS INTEGER)) ISNULL));
SELECT ALL rt0.c1, rt0.c0, t0.c0, rt0.c4 FROM t0, rt0, v0, vt0;
SELECT DISTINCT rt0.c1, v0.c0, vt0.c0, rt0.c0, v0.c1, rt0.c3, rt0.c2, rt0.c4, t0.c0, v0.c2 FROM rt0, v0, t0, vt0;
SELECT DISTINCT rt0.c1, v0.c0, vt0.c0, rt0.c0, v0.c1, rt0.c3, rt0.c2, rt0.c4, t0.c0, v0.c2 FROM rt0, v0, t0, vt0 WHERE (((((v0.c0) NOT NULL)) NOT BETWEEN (0.048233010284912115) AND (v0.c2))) UNION SELECT DISTINCT rt0.c1, v0.c0, vt0.c0, rt0.c0, v0.c1, rt0.c3, rt0.c2, rt0.c4, t0.c0, v0.c2 FROM rt0, v0, t0, vt0 WHERE ((NOT (((((v0.c0) NOT NULL)) NOT BETWEEN (0.048233010284912115) AND (v0.c2))))) UNION SELECT DISTINCT rt0.c1, v0.c0, vt0.c0, rt0.c0, v0.c1, rt0.c3, rt0.c2, rt0.c4, t0.c0, v0.c2 FROM rt0, v0, t0, vt0 WHERE (((((((v0.c0) NOT NULL)) NOT BETWEEN (0.048233010284912115) AND (v0.c2))) ISNULL));
SELECT DISTINCT rt0.c1, v0.c0, vt0.c0, rt0.c0, v0.c1, rt0.c3, rt0.c2, rt0.c4, t0.c0, v0.c2 FROM rt0, v0, t0, vt0;
SELECT rt0.c4, rt0.c1, rt0.c3, v0.c2, vt0.c0, t0.c0, v0.c0 FROM t0, vt0, rt0 CROSS JOIN v0 ON CASE WHEN rt0.c0 THEN HEX(vt0.c0) ELSE (((t0.c0, vt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, t0.c0, v0.c0)) AND ((rt0.c4, 'k槍x\r', x''))) END GROUP BY rt0.c4, rt0.c1, rt0.c3, v0.c2, vt0.c0, t0.c0, v0.c0;
SELECT rt0.c4, rt0.c1, rt0.c3, v0.c2, vt0.c0, t0.c0, v0.c0 FROM t0, vt0, rt0 CROSS JOIN v0 ON CASE WHEN rt0.c0 THEN HEX(vt0.c0) ELSE (((t0.c0, vt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, t0.c0, v0.c0)) AND ((rt0.c4, 'k槍x\r', x''))) END WHERE (((INSTR(v0.c0, rt0.c2))>>((~ ('-1611623547'))))) GROUP BY rt0.c4, rt0.c1, rt0.c3, v0.c2, vt0.c0, t0.c0, v0.c0 UNION SELECT rt0.c4, rt0.c1, rt0.c3, v0.c2, vt0.c0, t0.c0, v0.c0 FROM t0, vt0, rt0 CROSS JOIN v0 ON CASE WHEN rt0.c0 THEN HEX(vt0.c0) ELSE (((t0.c0, vt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, t0.c0, v0.c0)) AND ((rt0.c4, 'k槍x\r', x''))) END WHERE ((NOT (((INSTR(v0.c0, rt0.c2))>>((~ ('-1611623547'))))))) GROUP BY rt0.c4, rt0.c1, rt0.c3, v0.c2, vt0.c0, t0.c0, v0.c0 UNION SELECT rt0.c4, rt0.c1, rt0.c3, v0.c2, vt0.c0, t0.c0, v0.c0 FROM t0, vt0, rt0 CROSS JOIN v0 ON CASE WHEN rt0.c0 THEN HEX(vt0.c0) ELSE (((t0.c0, vt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, t0.c0, v0.c0)) AND ((rt0.c4, 'k槍x\r', x''))) END WHERE (((((INSTR(v0.c0, rt0.c2))>>((~ ('-1611623547'))))) ISNULL)) GROUP BY rt0.c4, rt0.c1, rt0.c3, v0.c2, vt0.c0, t0.c0, v0.c0;
SELECT rt0.c4, rt0.c1, rt0.c3, v0.c2, vt0.c0, t0.c0, v0.c0 FROM t0, vt0, rt0 CROSS JOIN v0 ON CASE WHEN rt0.c0 THEN HEX(vt0.c0) ELSE (((t0.c0, vt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, t0.c0, v0.c0)) AND ((rt0.c4, 'k槍x\r', x''))) END GROUP BY rt0.c4, rt0.c1, rt0.c3, v0.c2, vt0.c0, t0.c0, v0.c0;
SELECT t0.c0, rt0.c0, rt0.c2 FROM vt0, rt0, t0 GROUP BY t0.c0, rt0.c0, rt0.c2;
SELECT ALL t0.c0, rt0.c0, rt0.c2 FROM vt0, rt0, t0 GROUP BY t0.c0, rt0.c0, rt0.c2 HAVING (- (MAX(t0.c0))) UNION ALL SELECT t0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 NOT INDEXED, t0 GROUP BY t0.c0, rt0.c0, rt0.c2 HAVING (NOT ((- (MAX(t0.c0))))) UNION ALL SELECT ALL t0.c0, rt0.c0, rt0.c2 FROM vt0, rt0, t0 GROUP BY t0.c0, rt0.c0, rt0.c2 HAVING (((- (MAX(t0.c0)))) ISNULL);
SELECT t0.c0, rt0.c0, rt0.c2 FROM vt0, rt0, t0 GROUP BY t0.c0, rt0.c0, rt0.c2;
SELECT ALL t0.c0, rt0.c0, rt0.c2 FROM vt0, rt0, t0 GROUP BY t0.c0, rt0.c0, rt0.c2 HAVING (- (MAX(t0.c0))) UNION ALL SELECT t0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 NOT INDEXED, t0 GROUP BY t0.c0, rt0.c0, rt0.c2 HAVING (NOT ((- (MAX(t0.c0))))) UNION ALL SELECT ALL t0.c0, rt0.c0, rt0.c2 FROM vt0, rt0, t0 GROUP BY t0.c0, rt0.c0, rt0.c2 HAVING (((- (MAX(t0.c0)))) ISNULL);
SELECT t0.c0, rt0.c0, rt0.c2 FROM vt0, rt0, t0 GROUP BY t0.c0, rt0.c0, rt0.c2;
SELECT v0.c2, v0.c1, vt0.c0, t0.c0 FROM v0, t0, vt0;
SELECT ALL v0.c2, v0.c1, vt0.c0, t0.c0 FROM v0, t0, vt0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN ((((v0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c0)))) AND (((t0.c0) BETWEEN (v0.c2) AND (t0.c0))))) UNION ALL SELECT v0.c2, v0.c1, vt0.c0, t0.c0 FROM v0, t0, vt0 NOT INDEXED WHERE ((NOT (((CAST(vt0.c0 AS BLOB)) BETWEEN ((((v0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c0)))) AND (((t0.c0) BETWEEN (v0.c2) AND (t0.c0))))))) UNION ALL SELECT ALL v0.c2, v0.c1, vt0.c0, t0.c0 FROM v0, t0, vt0 WHERE (((((CAST(vt0.c0 AS BLOB)) BETWEEN ((((v0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c0)))) AND (((t0.c0) BETWEEN (v0.c2) AND (t0.c0))))) ISNULL));
SELECT v0.c2, v0.c1, vt0.c0, t0.c0 FROM v0, t0, vt0;
SELECT DISTINCT v0.c0, t0.c0, v0.c1 FROM v0 LEFT OUTER JOIN t0 ON ((t0.c0 COLLATE BINARY) BETWEEN ((v0.c2 IN ())) AND (RTRIM(t0.c0)));
SELECT DISTINCT v0.c0, t0.c0, v0.c1 FROM v0 LEFT OUTER JOIN t0 ON ((t0.c0 COLLATE BINARY) BETWEEN ((v0.c2 IN ())) AND (RTRIM(t0.c0))) WHERE (((((t0.c0)OR(t0.c0)))&(((v0.c1) ISNULL)))) UNION SELECT DISTINCT v0.c0, t0.c0, v0.c1 FROM v0 LEFT OUTER JOIN t0 ON ((t0.c0 COLLATE BINARY) BETWEEN ((v0.c2 IN ())) AND (RTRIM(t0.c0))) WHERE ((NOT (((((t0.c0)OR(t0.c0)))&(((v0.c1) ISNULL)))))) UNION SELECT DISTINCT v0.c0, t0.c0, v0.c1 FROM v0 LEFT OUTER JOIN t0 ON ((t0.c0 COLLATE BINARY) BETWEEN ((v0.c2 IN ())) AND (RTRIM(t0.c0))) WHERE (((((((t0.c0)OR(t0.c0)))&(((v0.c1) ISNULL)))) ISNULL));
SELECT DISTINCT v0.c0, t0.c0, v0.c1 FROM v0 LEFT OUTER JOIN t0 ON ((t0.c0 COLLATE BINARY) BETWEEN ((v0.c2 IN ())) AND (RTRIM(t0.c0)));
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((0x2b1e623f) NOT NULL)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((0x2b1e623f) NOT NULL)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((0x2b1e623f) NOT NULL)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c1, t0.c0, v0.c2, vt0.c0, rt0.c4 FROM v0, rt0, vt0, t0 GROUP BY rt0.c1, t0.c0, v0.c2, vt0.c0, rt0.c4;
SELECT rt0.c1, t0.c0, v0.c2, vt0.c0, rt0.c4 FROM v0, rt0, vt0, t0 GROUP BY rt0.c1, t0.c0, v0.c2, vt0.c0, rt0.c4 HAVING (((SUM(MIN(v0.c0))))=(((((COUNT(*)))=((COUNT(*))))))) UNION ALL SELECT rt0.c1, t0.c0, v0.c2, vt0.c0, rt0.c4 FROM v0, rt0, vt0, t0 GROUP BY rt0.c1, t0.c0, v0.c2, vt0.c0, rt0.c4 HAVING (NOT ((((SUM(MIN(v0.c0))))=(((((COUNT(*)))==((COUNT(*))))))))) UNION ALL SELECT ALL rt0.c1, t0.c0, v0.c2, vt0.c0, rt0.c4 FROM v0, rt0, vt0, t0 GROUP BY rt0.c1, t0.c0, v0.c2, vt0.c0, rt0.c4 HAVING (((((SUM(MIN(v0.c0))))=(((((COUNT(*)))==((COUNT(*)))))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, t0, v0;
SELECT ALL vt0.c0 FROM vt0, t0, v0 WHERE (((((((((CASE v0.c1  WHEN v0.c1 THEN v0.c2 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END)AND(((vt0.c0)=(v0.c0)))))OR(v0.c2)))OR(v0.c2 COLLATE NOCASE)))AND(v0.c2 COLLATE NOCASE))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0, v0 WHERE ((NOT (((((((((CASE v0.c1  WHEN v0.c1 THEN v0.c2 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END)AND(((vt0.c0)=(v0.c0)))))OR(v0.c2)))OR(v0.c2 COLLATE NOCASE)))AND(v0.c2 COLLATE NOCASE))))) UNION ALL SELECT vt0.c0 FROM vt0, t0, v0 WHERE (((((((((((CASE v0.c1  WHEN v0.c1 THEN v0.c2 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END)AND(((vt0.c0)==(v0.c0)))))OR(v0.c2)))OR(v0.c2 COLLATE NOCASE)))AND(v0.c2 COLLATE NOCASE))) ISNULL));
SELECT ALL vt0.c0 FROM vt0, t0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c3 COLLATE NOCASE) NOT NULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c3 COLLATE NOCASE) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c3 COLLATE NOCASE) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c1, rt0.c3, v0.c2, rt0.c2, v0.c1, vt0.c0 FROM vt0, t0, v0, rt0 GROUP BY rt0.c1, rt0.c3, v0.c2, rt0.c2, v0.c1, vt0.c0;
SELECT ALL rt0.c1, rt0.c3, v0.c2, rt0.c2, v0.c1, vt0.c0 FROM vt0, t0, v0, rt0 GROUP BY rt0.c1, rt0.c3, v0.c2, rt0.c2, v0.c1, vt0.c0 HAVING MIN(MAX(vt0.c0)) UNION ALL SELECT ALL rt0.c1, rt0.c3, v0.c2, rt0.c2, v0.c1, vt0.c0 FROM vt0, t0, v0, rt0 GROUP BY rt0.c1, rt0.c3, v0.c2, rt0.c2, v0.c1, vt0.c0 HAVING (NOT (MIN(MAX(vt0.c0)))) UNION ALL SELECT ALL rt0.c1, rt0.c3, v0.c2, rt0.c2, v0.c1, vt0.c0 FROM vt0, t0, v0, rt0 GROUP BY rt0.c1, rt0.c3, v0.c2, rt0.c2, v0.c1, vt0.c0 HAVING ((MIN(MAX(vt0.c0))) ISNULL);
SELECT ALL rt0.c3, rt0.c0, rt0.c4, v0.c0, t0.c0 FROM t0, v0, rt0;
SELECT rt0.c3, rt0.c0, rt0.c4, v0.c0, t0.c0 FROM t0, v0, rt0 WHERE (v0.c1) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c4, v0.c0, t0.c0 FROM t0, v0, rt0 WHERE ((NOT (v0.c1))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c4, v0.c0, t0.c0 FROM t0, v0, rt0 WHERE (((v0.c1) ISNULL));
SELECT ALL rt0.c3, rt0.c0, rt0.c4, v0.c0, t0.c0 FROM t0, v0, rt0;
SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON ((v0.c0 COLLATE RTRIM)&(CAST(v0.c1 AS BLOB)));
SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON ((v0.c0 COLLATE RTRIM)&(CAST(v0.c1 AS BLOB))) WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON ((v0.c0 COLLATE RTRIM)&(CAST(v0.c1 AS BLOB))) WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON ((v0.c0 COLLATE RTRIM)&(CAST(v0.c1 AS BLOB))) WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON ((v0.c0 COLLATE RTRIM)&(CAST(v0.c1 AS BLOB)));
SELECT ALL rt0.c4, rt0.c1, rt0.c2, v0.c2, rt0.c3, v0.c0, t0.c0 FROM rt0, t0, v0 GROUP BY rt0.c4, rt0.c1, rt0.c2, v0.c2, rt0.c3, v0.c0, t0.c0;
SELECT rt0.c4, rt0.c1, rt0.c2, v0.c2, rt0.c3, v0.c0, t0.c0 FROM rt0, t0, v0 WHERE (v0.c1) GROUP BY rt0.c4, rt0.c1, rt0.c2, v0.c2, rt0.c3, v0.c0, t0.c0 UNION SELECT rt0.c4, rt0.c1, rt0.c2, v0.c2, rt0.c3, v0.c0, t0.c0 FROM rt0, t0, v0 WHERE ((NOT (v0.c1))) GROUP BY rt0.c4, rt0.c1, rt0.c2, v0.c2, rt0.c3, v0.c0, t0.c0 UNION SELECT ALL rt0.c4, rt0.c1, rt0.c2, v0.c2, rt0.c3, v0.c0, t0.c0 FROM rt0, t0, v0 WHERE (((v0.c1) ISNULL)) GROUP BY rt0.c4, rt0.c1, rt0.c2, v0.c2, rt0.c3, v0.c0, t0.c0;
SELECT ALL rt0.c4, rt0.c1, rt0.c2, v0.c2, rt0.c3, v0.c0, t0.c0 FROM rt0, t0, v0 GROUP BY rt0.c4, rt0.c1, rt0.c2, v0.c2, rt0.c3, v0.c0, t0.c0;
SELECT ALL rt0.c3, rt0.c0, vt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c0, vt0.c0, rt0.c1, rt0.c4, rt0.c2;
SELECT rt0.c3, rt0.c0, vt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c0, vt0.c0, rt0.c1, rt0.c4, rt0.c2 HAVING ((MAX(MAX(vt0.c0))) BETWEEN (CASE WHEN GROUP_CONCAT(rt0.c1) THEN rt0.c1 END) AND (MAX(rt0.c1))) UNION ALL SELECT ALL rt0.c3, rt0.c0, vt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c0, vt0.c0, rt0.c1, rt0.c4, rt0.c2 HAVING (NOT (((MAX(MAX(vt0.c0))) BETWEEN (CASE WHEN GROUP_CONCAT(rt0.c1) THEN rt0.c1 END) AND (MAX(rt0.c1))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, vt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c0, vt0.c0, rt0.c1, rt0.c4, rt0.c2 HAVING ((((MAX(MAX(vt0.c0))) BETWEEN (CASE WHEN GROUP_CONCAT(rt0.c1) THEN rt0.c1 END) AND (MAX(rt0.c1)))) ISNULL);
SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE (NULL COLLATE NOCASE) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (NULL COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE (((NULL COLLATE NOCASE) ISNULL));
SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0, vt0, t0, v0;
SELECT DISTINCT * FROM rt0, vt0, t0, v0 WHERE ((+ (((rt0.c3) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0, vt0, t0, v0 WHERE ((NOT ((+ (((rt0.c3) NOT NULL)))))) UNION SELECT DISTINCT * FROM rt0, vt0, t0, v0 WHERE ((((+ (((rt0.c3) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, t0, v0;
SELECT ALL rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM vt0 NOT INDEXED, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (x'') GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT (x''))) GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM vt0 NOT INDEXED, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c1;
SELECT t0.c0, rt0.c4 FROM rt0, t0 GROUP BY t0.c0, rt0.c4;
SELECT ALL t0.c0, rt0.c4 FROM rt0, t0 GROUP BY t0.c0, rt0.c4 HAVING COUNT(((AVG(GROUP_CONCAT(MAX(rt0.c2))))==(rt0.c2))) UNION ALL SELECT ALL t0.c0, rt0.c4 FROM rt0, t0 GROUP BY t0.c0, rt0.c4 HAVING (NOT (COUNT(((AVG(GROUP_CONCAT(MAX(rt0.c2))))==(rt0.c2))))) UNION ALL SELECT t0.c0, rt0.c4 FROM rt0, t0 GROUP BY t0.c0, rt0.c4 HAVING ((COUNT(((AVG(GROUP_CONCAT(MAX(rt0.c2))))=(rt0.c2)))) ISNULL);
SELECT ALL * FROM t0, v0;
SELECT * FROM t0, v0 WHERE (t0.c0) UNION ALL SELECT * FROM t0, v0 WHERE ((NOT (t0.c0))) UNION ALL SELECT * FROM t0, v0 WHERE (((t0.c0) ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0, rt0.c2, t0.c0 FROM rt0, t0 FULL OUTER JOIN vt0 ON vt0.c0;
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0, rt0.c2, t0.c0 FROM rt0, t0 FULL OUTER JOIN vt0 ON vt0.c0 WHERE (LTRIM(rt0.c0) COLLATE BINARY) UNION SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0, rt0.c2, t0.c0 FROM rt0, t0 FULL OUTER JOIN vt0 ON vt0.c0 WHERE ((NOT (LTRIM(rt0.c0) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0, rt0.c2, t0.c0 FROM rt0, t0 FULL OUTER JOIN vt0 ON vt0.c0 WHERE (((LTRIM(rt0.c0) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0, rt0.c2, t0.c0 FROM rt0, t0 FULL OUTER JOIN vt0 ON vt0.c0;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 WHERE ((((~ (v0.c1)))-(0.001926452856019889))) GROUP BY v0.c2, v0.c0, v0.c1 UNION SELECT v0.c2, v0.c0, v0.c1 FROM v0 WHERE ((NOT ((((~ (v0.c1)))-(0.001926452856019889))))) GROUP BY v0.c2, v0.c0, v0.c1 UNION SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 WHERE ((((((~ (v0.c1)))-(0.001926452856019889))) ISNULL)) GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((((((((((((((COUNT(*))AND(t0.c0)))OR(TOTAL(COUNT(*)))))OR(MAX(SUM(vt0.c0)))))AND(AVG(COUNT(COUNT(MAX(AVG(t0.c0))))))))OR(SUM(t0.c0))))AND(AVG(t0.c0))))>=(vt0.c0)) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (((((((((((((((COUNT(*))AND(t0.c0)))OR(TOTAL(COUNT(*)))))OR(MAX(SUM(vt0.c0)))))AND(AVG(COUNT(COUNT(MAX(AVG(t0.c0))))))))OR(SUM(t0.c0))))AND(AVG(t0.c0))))>=(vt0.c0)))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((((((((((((((((COUNT(*))AND(t0.c0)))OR(TOTAL(COUNT(*)))))OR(MAX(SUM(vt0.c0)))))AND(AVG(COUNT(COUNT(MAX(AVG(t0.c0))))))))OR(SUM(t0.c0))))AND(AVG(t0.c0))))>=(vt0.c0))) ISNULL);
SELECT MAX(((((((v0.c1) NOT BETWEEN (rt0.c0) AND (v0.c2)))AND(rt0.c2 COLLATE RTRIM)))AND(((t0.c0) ISNULL)))) FROM t0, vt0, rt0, v0 ORDER BY ((((rt0.c1)!=(rt0.c1))) NOT NULL) DESC, CAST(v0.c2 COLLATE RTRIM AS REAL)  NULLS LAST;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (x'37503362') AND (vt0.c0))) IS FALSE)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (x'37503362') AND (vt0.c0))) IS FALSE)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (x'37503362') AND (vt0.c0))) IS FALSE)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((t0.c0) ISNULL) IN (LIKELY('')))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0) ISNULL) IN (LIKELY('')))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0) ISNULL) IN (LIKELY('')))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL v0.c2, v0.c0, rt0.c3, rt0.c0, v0.c1, rt0.c1, rt0.c2, rt0.c4 FROM vt0, rt0, v0 GROUP BY v0.c2, v0.c0, rt0.c3, rt0.c0, v0.c1, rt0.c1, rt0.c2, rt0.c4;
SELECT ALL v0.c2, v0.c0, rt0.c3, rt0.c0, v0.c1, rt0.c1, rt0.c2, rt0.c4 FROM vt0, rt0, v0 WHERE ((((((v0.c1, rt0.c3, rt0.c4))==((v0.c2, x'257b', rt0.c1))))+((rt0.c3 IN (x'', v0.c1))))) GROUP BY v0.c2, v0.c0, rt0.c3, rt0.c0, v0.c1, rt0.c1, rt0.c2, rt0.c4 UNION SELECT ALL v0.c2, v0.c0, rt0.c3, rt0.c0, v0.c1, rt0.c1, rt0.c2, rt0.c4 FROM vt0, rt0, v0 WHERE ((NOT ((((((v0.c1, rt0.c3, rt0.c4))==((v0.c2, x'257b', rt0.c1))))+((rt0.c3 IN (x'', v0.c1))))))) GROUP BY v0.c2, v0.c0, rt0.c3, rt0.c0, v0.c1, rt0.c1, rt0.c2, rt0.c4 UNION SELECT ALL v0.c2, v0.c0, rt0.c3, rt0.c0, v0.c1, rt0.c1, rt0.c2, rt0.c4 FROM vt0, rt0, v0 WHERE ((((((((v0.c1, rt0.c3, rt0.c4))=((v0.c2, x'257b', rt0.c1))))+((rt0.c3 IN (x'', v0.c1))))) ISNULL)) GROUP BY v0.c2, v0.c0, rt0.c3, rt0.c0, v0.c1, rt0.c1, rt0.c2, rt0.c4;
SELECT ALL v0.c2, v0.c0, rt0.c3, rt0.c0, v0.c1, rt0.c1, rt0.c2, rt0.c4 FROM vt0, rt0, v0 GROUP BY v0.c2, v0.c0, rt0.c3, rt0.c0, v0.c1, rt0.c1, rt0.c2, rt0.c4;
SELECT t0.c0, vt0.c0, v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c2 FROM rt0, vt0, v0, t0 GROUP BY t0.c0, vt0.c0, v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c2;
SELECT ALL t0.c0, vt0.c0, v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c2 FROM rt0, vt0, v0, t0 GROUP BY t0.c0, vt0.c0, v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c2 HAVING TOTAL(CAST(GROUP_CONCAT(rt0.c4) AS INTEGER)) UNION ALL SELECT t0.c0, vt0.c0, v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c2 FROM rt0, vt0, v0, t0 GROUP BY t0.c0, vt0.c0, v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c2 HAVING (NOT (TOTAL(CAST(GROUP_CONCAT(rt0.c4) AS INTEGER)))) UNION ALL SELECT t0.c0, vt0.c0, v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c2 FROM rt0, vt0, v0, t0 GROUP BY t0.c0, vt0.c0, v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c2 HAVING ((TOTAL(CAST(GROUP_CONCAT(rt0.c4) AS INTEGER))) ISNULL);
SELECT ALL * FROM rt0, t0, v0 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)||(v0.c2)))OR(((((((((rt0.c1)AND(rt0.c3)))OR('y|NnowN')))AND(rt0.c3)))OR(v0.c1)))))AND(json('2013572315')));
SELECT * FROM rt0, t0, v0 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)||(v0.c2)))OR(((((((((rt0.c1)AND(rt0.c3)))OR('y|NnowN')))AND(rt0.c3)))OR(v0.c1)))))AND(json('2013572315'))) WHERE (CAST(((rt0.c1)>>(rt0.c2)) AS TEXT)) UNION ALL SELECT * FROM rt0, t0, v0 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)||(v0.c2)))OR(((((((((rt0.c1)AND(rt0.c3)))OR('y|NnowN')))AND(rt0.c3)))OR(v0.c1)))))AND(json('2013572315'))) WHERE ((NOT (CAST(((rt0.c1)>>(rt0.c2)) AS TEXT)))) UNION ALL SELECT * FROM rt0, t0, v0 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)||(v0.c2)))OR(((((((((rt0.c1)AND(rt0.c3)))OR('y|NnowN')))AND(rt0.c3)))OR(v0.c1)))))AND(json('2013572315'))) WHERE (((CAST(((rt0.c1)>>(rt0.c2)) AS TEXT)) ISNULL));
SELECT ALL * FROM rt0, t0, v0 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)||(v0.c2)))OR(((((((((rt0.c1)AND(rt0.c3)))OR('y|NnowN')))AND(rt0.c3)))OR(v0.c1)))))AND(json('2013572315')));
SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0 NOT INDEXED;
SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)) COLLATE RTRIM) UNION SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0 WHERE ((NOT (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)) COLLATE RTRIM))) UNION SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0 NOT INDEXED;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN vt0.c0 THEN (vt0.c0 IN ()) ELSE ((vt0.c0)AND(vt0.c0)) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN (vt0.c0 IN ()) ELSE ((vt0.c0)AND(vt0.c0)) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN (vt0.c0 IN ()) ELSE ((vt0.c0)AND(vt0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING AVG(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING (NOT (AVG(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING ((AVG(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE ((((((v0.c1)) BETWEEN ((rt0.c0)) AND ((v0.c0)))) BETWEEN (((((rt0.c0)AND(rt0.c1)))AND(rt0.c1))) AND (((rt0.c4) NOT BETWEEN (v0.c2) AND (rt0.c2))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT ((((((v0.c1)) BETWEEN ((rt0.c0)) AND ((v0.c0)))) BETWEEN (((((rt0.c0)AND(rt0.c1)))AND(rt0.c1))) AND (((rt0.c4) NOT BETWEEN (v0.c2) AND (rt0.c2))))))) UNION ALL SELECT * FROM v0, rt0 WHERE ((((((((v0.c1)) BETWEEN ((rt0.c0)) AND ((v0.c0)))) BETWEEN (((((rt0.c0)AND(rt0.c1)))AND(rt0.c1))) AND (((rt0.c4) NOT BETWEEN (v0.c2) AND (rt0.c2))))) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 WHERE ((((rt0.c4))<((((rt0.c1) IS TRUE))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT ((((rt0.c4))<((((rt0.c1) IS TRUE))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 WHERE ((((((rt0.c4))<((((rt0.c1) IS TRUE))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0;
SELECT t0.c0, v0.c1, v0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0, vt0, v0, t0 GROUP BY t0.c0, v0.c1, v0.c2, rt0.c4, rt0.c1, rt0.c3;
SELECT t0.c0, v0.c1, v0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0, vt0, v0, t0 WHERE (COALESCE(DISTINCT (((rt0.c4))!=((rt0.c3))), ((t0.c0) NOT BETWEEN (rt0.c1) AND (v0.c2)), ((((rt0.c0)AND(rt0.c3)))OR(v0.c2)), ((rt0.c3) IS FALSE))) GROUP BY t0.c0, v0.c1, v0.c2, rt0.c4, rt0.c1, rt0.c3 UNION SELECT t0.c0, v0.c1, v0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0, vt0, v0, t0 WHERE ((NOT (COALESCE(DISTINCT (((rt0.c4))!=((rt0.c3))), ((t0.c0) NOT BETWEEN (rt0.c1) AND (v0.c2)), ((((rt0.c0)AND(rt0.c3)))OR(v0.c2)), ((rt0.c3) IS FALSE))))) GROUP BY t0.c0, v0.c1, v0.c2, rt0.c4, rt0.c1, rt0.c3 UNION SELECT ALL t0.c0, v0.c1, v0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0, vt0, v0, t0 WHERE (((COALESCE(DISTINCT (((rt0.c4))<>((rt0.c3))), ((t0.c0) NOT BETWEEN (rt0.c1) AND (v0.c2)), ((((rt0.c0)AND(rt0.c3)))OR(v0.c2)), ((rt0.c3) IS FALSE))) ISNULL)) GROUP BY t0.c0, v0.c1, v0.c2, rt0.c4, rt0.c1, rt0.c3;
SELECT t0.c0, v0.c1, v0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0, vt0, v0, t0 GROUP BY t0.c0, v0.c1, v0.c2, rt0.c4, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4;
SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING ((((((((COUNT(rt0.c4))AND(((rt0.c4)IS(COUNT(*))))))AND(((COUNT(AVG(MAX(rt0.c4))))IS NOT(MIN(rt0.c4))))))OR(SUM(rt0.c0))))AND(MIN(TOTAL(TOTAL(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING (NOT (((((((((COUNT(rt0.c4))AND(((rt0.c4)IS(COUNT(*))))))AND(((COUNT(AVG(MAX(rt0.c4))))IS NOT(MIN(rt0.c4))))))OR(SUM(rt0.c0))))AND(MIN(TOTAL(TOTAL(rt0.c0))))))) UNION ALL SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING ((((((((((COUNT(rt0.c4))AND(((rt0.c4)IS(COUNT(*))))))AND(((COUNT(AVG(MAX(rt0.c4))))IS NOT(MIN(rt0.c4))))))OR(SUM(rt0.c0))))AND(MIN(TOTAL(TOTAL(rt0.c0)))))) ISNULL);
SELECT rt0.c4 FROM rt0;
SELECT ALL rt0.c4 FROM rt0 WHERE (((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c1)))*(((((rt0.c1)OR(rt0.c3)))AND(rt0.c3))))) UNION ALL SELECT ALL rt0.c4 FROM rt0 WHERE ((NOT (((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c1)))*(((((rt0.c1)OR(rt0.c3)))AND(rt0.c3))))))) UNION ALL SELECT rt0.c4 FROM rt0 WHERE (((((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c1)))*(((((rt0.c1)OR(rt0.c3)))AND(rt0.c3))))) ISNULL));
SELECT rt0.c4 FROM rt0;
SELECT DISTINCT * FROM vt0 INNER JOIN t0 ON LIKELY(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)));
SELECT DISTINCT * FROM vt0 INNER JOIN t0 ON LIKELY(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) WHERE (CASE ((t0.c0)<=(t0.c0))  WHEN (('_j')/(vt0.c0)) THEN ((vt0.c0)IS(t0.c0)) END) UNION SELECT DISTINCT * FROM vt0 INNER JOIN t0 ON LIKELY(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) WHERE ((NOT (CASE ((t0.c0)<=(t0.c0))  WHEN (('_j')/(vt0.c0)) THEN ((vt0.c0)IS(t0.c0)) END))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN t0 ON LIKELY(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) WHERE (((CASE ((t0.c0)<=(t0.c0))  WHEN (('_j')/(vt0.c0)) THEN ((vt0.c0)IS(t0.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN t0 ON LIKELY(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)));
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)))OR(CASE WHEN rt0.c0 THEN rt0.c4 END)))AND(((((((((rt0.c4)OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c1)))))OR((- (rt0.c0)))))AND((rt0.c2 IN (x'', rt0.c3))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((((((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)))OR(CASE WHEN rt0.c0 THEN rt0.c4 END)))AND(((((((((rt0.c4)OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c1)))))OR((- (rt0.c0)))))AND((rt0.c2 IN (x'', rt0.c3))))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 NOT INDEXED WHERE (((((((((((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)))OR(CASE WHEN rt0.c0 THEN rt0.c4 END)))AND(((((((((rt0.c4)OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c1)))))OR((- (rt0.c0)))))AND((rt0.c2 IN (x'', rt0.c3))))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT v0.c1, vt0.c0, v0.c0, v0.c2 FROM vt0, v0 NOT INDEXED GROUP BY v0.c1, vt0.c0, v0.c0, v0.c2;
SELECT ALL v0.c1, vt0.c0, v0.c0, v0.c2 FROM vt0, v0 GROUP BY v0.c1, vt0.c0, v0.c0, v0.c2 HAVING COUNT(((COUNT(vt0.c0))<=(v0.c2))) UNION ALL SELECT ALL v0.c1, vt0.c0, v0.c0, v0.c2 FROM vt0, v0 GROUP BY v0.c1, vt0.c0, v0.c0, v0.c2 HAVING (NOT (COUNT(((COUNT(vt0.c0))<=(v0.c2))))) UNION ALL SELECT ALL v0.c1, vt0.c0, v0.c0, v0.c2 FROM vt0, v0 GROUP BY v0.c1, vt0.c0, v0.c0, v0.c2 HAVING ((COUNT(((COUNT(vt0.c0))<=(v0.c2)))) ISNULL);
SELECT TOTAL((((rt0.c4 IN (v0.c0, v0.c0))) NOT NULL)) FROM rt0, v0, vt0, t0;
SELECT ALL v0.c2 FROM v0;
SELECT v0.c2 FROM v0 WHERE (((x'')<>(((v0.c2) IS FALSE)))) UNION ALL SELECT v0.c2 FROM v0 WHERE ((NOT (((x'')<>(((v0.c2) IS FALSE)))))) UNION ALL SELECT v0.c2 FROM v0 WHERE (((((x'')<>(((v0.c2) IS FALSE)))) ISNULL));
SELECT ALL v0.c2 FROM v0;
SELECT DISTINCT v0.c1, rt0.c0, t0.c0, v0.c0, rt0.c2, rt0.c4 FROM v0, t0 NATURAL JOIN rt0;
SELECT DISTINCT v0.c1, rt0.c0, t0.c0, v0.c0, rt0.c2, rt0.c4 FROM v0, t0 NATURAL JOIN rt0 WHERE (CASE WHEN NULL COLLATE BINARY THEN CASE v0.c1  WHEN v0.c2 THEN rt0.c1 END ELSE RTRIM(t0.c0) END) UNION SELECT DISTINCT v0.c1, rt0.c0, t0.c0, v0.c0, rt0.c2, rt0.c4 FROM v0, t0 NATURAL JOIN rt0 WHERE ((NOT (CASE WHEN NULL COLLATE BINARY THEN CASE v0.c1  WHEN v0.c2 THEN rt0.c1 END ELSE RTRIM(t0.c0) END))) UNION SELECT DISTINCT v0.c1, rt0.c0, t0.c0, v0.c0, rt0.c2, rt0.c4 FROM v0, t0 NATURAL JOIN rt0 WHERE (((CASE WHEN NULL COLLATE BINARY THEN CASE v0.c1  WHEN v0.c2 THEN rt0.c1 END ELSE RTRIM(t0.c0) END) ISNULL));
SELECT DISTINCT v0.c1, rt0.c0, t0.c0, v0.c0, rt0.c2, rt0.c4 FROM v0, t0 NATURAL JOIN rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((((((((((v0.c0)) BETWEEN ((0.6651050602723848)) AND ((v0.c0))))OR((v0.c0 IN ()))))AND(UPPER(v0.c1))))OR(((v0.c0) IS TRUE))))OR(NULL))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((((((((((v0.c0)) BETWEEN ((0.6651050602723848)) AND ((v0.c0))))OR((v0.c0 IN ()))))AND(UPPER(v0.c1))))OR(((v0.c0) IS TRUE))))OR(NULL))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((((((((((v0.c0)) BETWEEN ((0.6651050602723848)) AND ((v0.c0))))OR((v0.c0 IN ()))))AND(UPPER(v0.c1))))OR(((v0.c0) IS TRUE))))OR(NULL))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c2 FROM t0, v0, vt0 GROUP BY v0.c2;
SELECT v0.c2 FROM t0, v0, vt0 GROUP BY v0.c2 HAVING TOTAL(MIN(MIN(v0.c1))) UNION ALL SELECT v0.c2 FROM t0, v0, vt0 GROUP BY v0.c2 HAVING (NOT (TOTAL(MIN(MIN(v0.c1))))) UNION ALL SELECT v0.c2 FROM t0, v0, vt0 GROUP BY v0.c2 HAVING ((TOTAL(MIN(MIN(v0.c1)))) ISNULL);
SELECT ALL * FROM t0, v0, vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0) IS FALSE))AND((+ (x''))));
SELECT * FROM t0, v0, vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0) IS FALSE))AND((+ (x'')))) WHERE (((((v0.c2)<(vt0.c0)))-(((v0.c2)<=(''))))) UNION ALL SELECT * FROM t0, v0, vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0) IS FALSE))AND((+ (x'')))) WHERE ((NOT (((((v0.c2)<(vt0.c0)))-(((v0.c2)<=(''))))))) UNION ALL SELECT ALL * FROM t0, v0, vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0) IS FALSE))AND((+ (x'')))) WHERE (((((((v0.c2)<(vt0.c0)))-(((v0.c2)<=(''))))) ISNULL));
SELECT ALL * FROM t0, v0, vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0) IS FALSE))AND((+ (x''))));
SELECT DISTINCT v0.c0, rt0.c0, rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON (NOT (((((rt0.c2)AND(v0.c0)))AND(v0.c1)))) LEFT OUTER JOIN t0 ON ((((v0.c1) BETWEEN (rt0.c3) AND (rt0.c1))) IS FALSE) LEFT OUTER JOIN vt0 ON CAST(rt0.c1 AS BLOB);
SELECT DISTINCT v0.c0, rt0.c0, rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON (NOT (((((rt0.c2)AND(v0.c0)))AND(v0.c1)))) LEFT OUTER JOIN t0 ON ((((v0.c1) BETWEEN (rt0.c3) AND (rt0.c1))) IS FALSE) LEFT OUTER JOIN vt0 ON CAST(rt0.c1 AS BLOB) WHERE (LAST_INSERT_ROWID()) UNION SELECT DISTINCT v0.c0, rt0.c0, rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON (NOT (((((rt0.c2)AND(v0.c0)))AND(v0.c1)))) LEFT OUTER JOIN t0 ON ((((v0.c1) BETWEEN (rt0.c3) AND (rt0.c1))) IS FALSE) LEFT OUTER JOIN vt0 ON CAST(rt0.c1 AS BLOB) WHERE ((NOT (LAST_INSERT_ROWID()))) UNION SELECT DISTINCT v0.c0, rt0.c0, rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON (NOT (((((rt0.c2)AND(v0.c0)))AND(v0.c1)))) LEFT OUTER JOIN t0 ON ((((v0.c1) BETWEEN (rt0.c3) AND (rt0.c1))) IS FALSE) LEFT OUTER JOIN vt0 ON CAST(rt0.c1 AS BLOB) WHERE (((LAST_INSERT_ROWID()) ISNULL));
SELECT DISTINCT v0.c0, rt0.c0, rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON (NOT (((((rt0.c2)AND(v0.c0)))AND(v0.c1)))) LEFT OUTER JOIN t0 ON ((((v0.c1) BETWEEN (rt0.c3) AND (rt0.c1))) IS FALSE) LEFT OUTER JOIN vt0 ON CAST(rt0.c1 AS BLOB);
SELECT ALL rt0.c1, rt0.c0, v0.c0, rt0.c3, rt0.c4, v0.c2, vt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c3, rt0.c4, v0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, v0.c0, rt0.c3, rt0.c4, v0.c2, vt0.c0 FROM vt0, rt0, v0 WHERE (((rt0.c3)<>(CASE WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN 0X2015c564 THEN v0.c1 WHEN v0.c1 THEN v0.c1 ELSE rt0.c1 END))) GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c3, rt0.c4, v0.c2, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c0, v0.c0, rt0.c3, rt0.c4, v0.c2, vt0.c0 FROM vt0, rt0, v0 WHERE ((NOT (((rt0.c3)<>(CASE WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN 0X2015c564 THEN v0.c1 WHEN v0.c1 THEN v0.c1 ELSE rt0.c1 END))))) GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c3, rt0.c4, v0.c2, vt0.c0 UNION SELECT rt0.c1, rt0.c0, v0.c0, rt0.c3, rt0.c4, v0.c2, vt0.c0 FROM vt0, rt0, v0 WHERE (((((rt0.c3)<>(CASE WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN 0X2015c564 THEN v0.c1 WHEN v0.c1 THEN v0.c1 ELSE rt0.c1 END))) ISNULL)) GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c3, rt0.c4, v0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, v0.c0, rt0.c3, rt0.c4, v0.c2, vt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c3, rt0.c4, v0.c2, vt0.c0;
SELECT ALL v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c4, rt0.c0, rt0.c2 FROM vt0, rt0, v0 RIGHT OUTER JOIN t0 ON ((CAST(rt0.c1 AS INTEGER)) BETWEEN (((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)))AND(1.003118157E9)))OR(x''))) AND (CASE 0.6262605975733537  WHEN v0.c0 THEN v0.c0 WHEN -2095948494 THEN rt0.c3 WHEN v0.c2 THEN 0.09704325446486028 ELSE NULL END)) GROUP BY v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c4, rt0.c0, rt0.c2;
SELECT ALL v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c4, rt0.c0, rt0.c2 FROM vt0, rt0, v0 RIGHT OUTER JOIN t0 ON ((CAST(rt0.c1 AS INTEGER)) BETWEEN (((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)))AND(1.003118157E9)))OR(x''))) AND (CASE 0.6262605975733537  WHEN v0.c0 THEN v0.c0 WHEN -2095948494 THEN rt0.c3 WHEN v0.c2 THEN 0.09704325446486028 ELSE NULL END)) GROUP BY v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c4, rt0.c0, rt0.c2 HAVING 0xffffffffd6a4809f UNION ALL SELECT ALL v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c4, rt0.c0, rt0.c2 FROM vt0, rt0, v0 RIGHT OUTER JOIN t0 ON ((CAST(rt0.c1 AS INTEGER)) BETWEEN (((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)))AND(1.003118157E9)))OR(x''))) AND (CASE 0.6262605975733537  WHEN v0.c0 THEN v0.c0 WHEN -2095948494 THEN rt0.c3 WHEN v0.c2 THEN 0.09704325446486028 ELSE NULL END)) GROUP BY v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c4, rt0.c0, rt0.c2 HAVING (NOT (0Xffffffffd6a4809f)) UNION ALL SELECT ALL v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c4, rt0.c0, rt0.c2 FROM vt0, rt0, v0 RIGHT OUTER JOIN t0 ON ((CAST(rt0.c1 AS INTEGER)) BETWEEN (((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)))AND(1.003118157E9)))OR(x''))) AND (CASE 0.6262605975733537  WHEN v0.c0 THEN v0.c0 WHEN -2095948494 THEN rt0.c3 WHEN v0.c2 THEN 0.09704325446486028 ELSE NULL END)) GROUP BY v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c4, rt0.c0, rt0.c2 HAVING ((0xffffffffd6a4809f) ISNULL);
SELECT ALL v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c4, rt0.c0, rt0.c2 FROM vt0, rt0, v0 RIGHT OUTER JOIN t0 ON ((CAST(rt0.c1 AS INTEGER)) BETWEEN (((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)))AND(1.003118157E9)))OR(x''))) AND (CASE 0.6262605975733537  WHEN v0.c0 THEN v0.c0 WHEN -2095948494 THEN rt0.c3 WHEN v0.c2 THEN 0.09704325446486028 ELSE NULL END)) GROUP BY v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c4, rt0.c0, rt0.c2;
SELECT ALL v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c4, rt0.c0, rt0.c2 FROM vt0, rt0, v0 RIGHT OUTER JOIN t0 ON ((CAST(rt0.c1 AS INTEGER)) BETWEEN (((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)))AND(1.003118157E9)))OR(x''))) AND (CASE 0.6262605975733537  WHEN v0.c0 THEN v0.c0 WHEN -2095948494 THEN rt0.c3 WHEN v0.c2 THEN 0.09704325446486028 ELSE NULL END)) GROUP BY v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c4, rt0.c0, rt0.c2 HAVING 0xffffffffd6a4809f UNION ALL SELECT ALL v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c4, rt0.c0, rt0.c2 FROM vt0, rt0, v0 RIGHT OUTER JOIN t0 ON ((CAST(rt0.c1 AS INTEGER)) BETWEEN (((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)))AND(1.003118157E9)))OR(x''))) AND (CASE 0.6262605975733537  WHEN v0.c0 THEN v0.c0 WHEN -2095948494 THEN rt0.c3 WHEN v0.c2 THEN 0.09704325446486028 ELSE NULL END)) GROUP BY v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c4, rt0.c0, rt0.c2 HAVING (NOT (0Xffffffffd6a4809f)) UNION ALL SELECT ALL v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c4, rt0.c0, rt0.c2 FROM vt0, rt0, v0 RIGHT OUTER JOIN t0 ON ((CAST(rt0.c1 AS INTEGER)) BETWEEN (((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)))AND(1.003118157E9)))OR(x''))) AND (CASE 0.6262605975733537  WHEN v0.c0 THEN v0.c0 WHEN -2095948494 THEN rt0.c3 WHEN v0.c2 THEN 0.09704325446486028 ELSE NULL END)) GROUP BY v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c4, rt0.c0, rt0.c2 HAVING ((0xffffffffd6a4809f) ISNULL);
SELECT ALL v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c4, rt0.c0, rt0.c2 FROM vt0, rt0, v0 RIGHT OUTER JOIN t0 ON ((CAST(rt0.c1 AS INTEGER)) BETWEEN (((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)))AND(1.003118157E9)))OR(x''))) AND (CASE 0.6262605975733537  WHEN v0.c0 THEN v0.c0 WHEN -2095948494 THEN rt0.c3 WHEN v0.c2 THEN 0.09704325446486028 ELSE NULL END)) GROUP BY v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c4, rt0.c0, rt0.c2;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (UPPER(DISTINCT (rt0.c2 IN (rt0.c1, rt0.c2)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (UPPER(DISTINCT (rt0.c2 IN (rt0.c1, rt0.c2)))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((UPPER(DISTINCT (rt0.c2 IN (rt0.c1, rt0.c2)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN v0 ON LOWER(((rt0.c4)+(rt0.c2))) CROSS JOIN rt0 ON (('<.L<!(')<=(rt0.c3 COLLATE RTRIM));
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0) ISNULL)) IS TRUE)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) ISNULL)) IS TRUE)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((t0.c0) ISNULL)) IS TRUE)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c4, rt0.c2, v0.c2, v0.c1, rt0.c0, vt0.c0, t0.c0 FROM rt0, t0, vt0, v0 GROUP BY rt0.c4, rt0.c2, v0.c2, v0.c1, rt0.c0, vt0.c0, t0.c0;
SELECT ALL rt0.c4, rt0.c2, v0.c2, v0.c1, rt0.c0, vt0.c0, t0.c0 FROM rt0, t0, vt0, v0 GROUP BY rt0.c4, rt0.c2, v0.c2, v0.c1, rt0.c0, vt0.c0, t0.c0 HAVING NULL UNION ALL SELECT rt0.c4, rt0.c2, v0.c2, v0.c1, rt0.c0, vt0.c0, t0.c0 FROM rt0, t0, vt0, v0 GROUP BY rt0.c4, rt0.c2, v0.c2, v0.c1, rt0.c0, vt0.c0, t0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c4, rt0.c2, v0.c2, v0.c1, rt0.c0, vt0.c0, t0.c0 FROM rt0, t0 NOT INDEXED, vt0, v0 GROUP BY rt0.c4, rt0.c2, v0.c2, v0.c1, rt0.c0, vt0.c0, t0.c0 HAVING ((NULL) ISNULL);
SELECT rt0.c4, rt0.c2, v0.c2, v0.c1, rt0.c0, vt0.c0, t0.c0 FROM rt0, t0, vt0, v0 GROUP BY rt0.c4, rt0.c2, v0.c2, v0.c1, rt0.c0, vt0.c0, t0.c0;
SELECT ALL rt0.c4, rt0.c2, v0.c2, v0.c1, rt0.c0, vt0.c0, t0.c0 FROM rt0, t0, vt0, v0 GROUP BY rt0.c4, rt0.c2, v0.c2, v0.c1, rt0.c0, vt0.c0, t0.c0 HAVING NULL UNION ALL SELECT rt0.c4, rt0.c2, v0.c2, v0.c1, rt0.c0, vt0.c0, t0.c0 FROM rt0, t0, vt0, v0 GROUP BY rt0.c4, rt0.c2, v0.c2, v0.c1, rt0.c0, vt0.c0, t0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c4, rt0.c2, v0.c2, v0.c1, rt0.c0, vt0.c0, t0.c0 FROM rt0, t0 NOT INDEXED, vt0, v0 GROUP BY rt0.c4, rt0.c2, v0.c2, v0.c1, rt0.c0, vt0.c0, t0.c0 HAVING ((NULL) ISNULL);
SELECT rt0.c4, rt0.c2, v0.c2, v0.c1, rt0.c0, vt0.c0, t0.c0 FROM rt0, t0, vt0, v0 GROUP BY rt0.c4, rt0.c2, v0.c2, v0.c1, rt0.c0, vt0.c0, t0.c0;
SELECT ALL * FROM vt0, t0, v0, rt0;
SELECT ALL * FROM vt0, t0, v0, rt0 WHERE (CASE ((rt0.c1) ISNULL)  WHEN ((rt0.c2)<<(v0.c0)) THEN ((((rt0.c1)AND(rt0.c1)))AND(x'')) END) UNION ALL SELECT ALL * FROM vt0, t0, v0, rt0 WHERE ((NOT (CASE ((rt0.c1) ISNULL)  WHEN ((rt0.c2)<<(v0.c0)) THEN ((((rt0.c1)AND(rt0.c1)))AND(x'')) END))) UNION ALL SELECT ALL * FROM vt0, t0, v0, rt0 WHERE (((CASE ((rt0.c1) ISNULL)  WHEN ((rt0.c2)<<(v0.c0)) THEN ((((rt0.c1)AND(rt0.c1)))AND(x'')) END) ISNULL));
SELECT ALL * FROM vt0, t0, v0, rt0;
SELECT DISTINCT * FROM v0, t0, rt0, vt0;
SELECT DISTINCT * FROM v0, t0, rt0, vt0 WHERE (CAST(highlight(rt0.c4, t0.c0, rt0.c4, rt0.c4) AS TEXT)) UNION SELECT DISTINCT * FROM v0, t0, rt0, vt0 WHERE ((NOT (CAST(highlight(rt0.c4, t0.c0, rt0.c4, rt0.c4) AS TEXT)))) UNION SELECT DISTINCT * FROM v0, t0, rt0, vt0 WHERE (((CAST(highlight(rt0.c4, t0.c0, rt0.c4, rt0.c4) AS TEXT)) ISNULL));
SELECT rt0.c1, t0.c0, rt0.c3, v0.c2, rt0.c4 FROM vt0, v0, t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c3, v0.c2, rt0.c4;
SELECT rt0.c1, t0.c0, rt0.c3, v0.c2, rt0.c4 FROM vt0, v0, t0, rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0)) AS REAL)) GROUP BY rt0.c1, t0.c0, rt0.c3, v0.c2, rt0.c4 UNION SELECT rt0.c1, t0.c0, rt0.c3, v0.c2, rt0.c4 FROM vt0, v0, t0, rt0 WHERE ((NOT (CAST(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0)) AS REAL)))) GROUP BY rt0.c1, t0.c0, rt0.c3, v0.c2, rt0.c4 UNION SELECT ALL rt0.c1, t0.c0, rt0.c3, v0.c2, rt0.c4 FROM vt0, v0, t0, rt0 WHERE (((CAST(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0)) AS REAL)) ISNULL)) GROUP BY rt0.c1, t0.c0, rt0.c3, v0.c2, rt0.c4;
SELECT rt0.c1, t0.c0, rt0.c3, v0.c2, rt0.c4 FROM vt0, v0, t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c3, v0.c2, rt0.c4;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT * FROM t0, rt0, vt0, v0;
SELECT ALL * FROM t0, rt0, vt0, v0 WHERE ((+ (v0.c2)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM t0, rt0, vt0, v0 WHERE ((NOT ((+ (v0.c2)) COLLATE RTRIM))) UNION ALL SELECT * FROM t0, rt0, vt0, v0 WHERE ((((+ (v0.c2)) COLLATE RTRIM) ISNULL));
SELECT * FROM t0, rt0, vt0, v0;
SELECT DISTINCT v0.c1, t0.c0, v0.c2, vt0.c0, v0.c0 FROM v0, vt0, t0;
SELECT DISTINCT v0.c1, t0.c0, v0.c2, vt0.c0, v0.c0 FROM v0, vt0, t0 WHERE ((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((v0.c2))) COLLATE NOCASE) UNION SELECT DISTINCT v0.c1, t0.c0, v0.c2, vt0.c0, v0.c0 FROM v0, vt0, t0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((v0.c2))) COLLATE NOCASE))) UNION SELECT DISTINCT v0.c1, t0.c0, v0.c2, vt0.c0, v0.c0 FROM v0, vt0, t0 WHERE ((((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((v0.c2))) COLLATE NOCASE) ISNULL));
SELECT DISTINCT v0.c1, t0.c0, v0.c2, vt0.c0, v0.c0 FROM v0, vt0, t0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT v0.c2, v0.c1, v0.c0 FROM v0 WHERE (((((CAST(NULL AS INTEGER))AND(v0.c1)))AND('Iq'))) GROUP BY v0.c2, v0.c1, v0.c0 UNION SELECT v0.c2, v0.c1, v0.c0 FROM v0 WHERE ((NOT (((((CAST(NULL AS INTEGER))AND(v0.c1)))AND('Iq'))))) GROUP BY v0.c2, v0.c1, v0.c0 UNION SELECT v0.c2, v0.c1, v0.c0 FROM v0 WHERE (((((((CAST(NULL AS INTEGER))AND(v0.c1)))AND('Iq'))) ISNULL)) GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL t0.c0, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c0;
SELECT t0.c0, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c0 HAVING MAX(rt0.c2) UNION ALL SELECT t0.c0, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c0 HAVING (NOT (MAX(rt0.c2))) UNION ALL SELECT ALL t0.c0, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c0 HAVING ((MAX(rt0.c2)) ISNULL);
SELECT ALL t0.c0, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c0;
SELECT t0.c0, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c0 HAVING MAX(rt0.c2) UNION ALL SELECT t0.c0, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c0 HAVING (NOT (MAX(rt0.c2))) UNION ALL SELECT ALL t0.c0, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c0 HAVING ((MAX(rt0.c2)) ISNULL);
SELECT ALL t0.c0, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c0;
SELECT rt0.c0, v0.c1, rt0.c4, vt0.c0, rt0.c3 FROM rt0, vt0, v0, t0;
SELECT rt0.c0, v0.c1, rt0.c4, vt0.c0, rt0.c3 FROM rt0, vt0, v0, t0 WHERE ((~ (((rt0.c3)-(v0.c1))))) UNION ALL SELECT rt0.c0, v0.c1, rt0.c4, vt0.c0, rt0.c3 FROM rt0, vt0, v0, t0 WHERE ((NOT ((~ (((rt0.c3)-(v0.c1))))))) UNION ALL SELECT ALL rt0.c0, v0.c1, rt0.c4, vt0.c0, rt0.c3 FROM rt0, vt0, v0, t0 WHERE ((((~ (((rt0.c3)-(v0.c1))))) ISNULL));
SELECT rt0.c0, v0.c1, rt0.c4, vt0.c0, rt0.c3 FROM rt0, vt0, v0, t0;
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3, v0.c1, vt0.c0 FROM vt0, v0, t0, rt0;
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3, v0.c1, vt0.c0 FROM vt0, v0, t0, rt0 WHERE (((((rt0.c4)*(x'')))<=(rt0.c0))) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3, v0.c1, vt0.c0 FROM vt0, v0, t0, rt0 WHERE ((NOT (((((rt0.c4)*(x'')))<=(rt0.c0))))) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3, v0.c1, vt0.c0 FROM vt0, v0, t0 NOT INDEXED, rt0 WHERE (((((((rt0.c4)*(x'')))<=(rt0.c0))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3, v0.c1, vt0.c0 FROM vt0, v0, t0, rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c1, v0.c2, rt0.c2 FROM v0, t0, rt0, vt0 GROUP BY v0.c1, v0.c2, rt0.c2;
SELECT ALL v0.c1, v0.c2, rt0.c2 FROM v0, t0, rt0, vt0 GROUP BY v0.c1, v0.c2, rt0.c2 HAVING (((((((rt0.c4)OR(rt0.c3)))OR(vt0.c0))))==((COUNT(MIN(TOTAL(COUNT(AVG(MAX(v0.c1))))))))) UNION ALL SELECT v0.c1, v0.c2, rt0.c2 FROM v0, t0, rt0, vt0 GROUP BY v0.c1, v0.c2, rt0.c2 HAVING (NOT ((((((((rt0.c4)OR(rt0.c3)))OR(vt0.c0))))==((COUNT(MIN(TOTAL(COUNT(AVG(MAX(v0.c1))))))))))) UNION ALL SELECT v0.c1, v0.c2, rt0.c2 FROM v0, t0, rt0, vt0 GROUP BY v0.c1, v0.c2, rt0.c2 HAVING (((((((((rt0.c4)OR(rt0.c3)))OR(vt0.c0))))==((COUNT(MIN(TOTAL(COUNT(AVG(MAX(v0.c1)))))))))) ISNULL);
SELECT * FROM rt0, v0, t0, vt0;
SELECT * FROM rt0, v0, t0, vt0 WHERE ((~ (load_extension(rt0.c0, rt0.c4)))) UNION ALL SELECT * FROM rt0, v0, t0, vt0 WHERE ((NOT ((~ (load_extension(rt0.c0, rt0.c4)))))) UNION ALL SELECT ALL * FROM rt0, v0, t0, vt0 WHERE ((((~ (load_extension(rt0.c0, rt0.c4)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ((((t0.c0, '-1531838179', t0.c0)) NOT BETWEEN ((ROUND(vt0.c0, t0.c0), ((',*oF')>(t0.c0)), CASE t0.c0  WHEN NULL THEN t0.c0 END)) AND ((vt0.c0, 5.78846803E8, UPPER(DISTINCT 0.23678523721333433))))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ((NOT ((((t0.c0, '-1531838179', t0.c0)) NOT BETWEEN ((ROUND(vt0.c0, t0.c0), ((',*oF')>(t0.c0)), CASE t0.c0  WHEN NULL THEN t0.c0 END)) AND ((vt0.c0, 5.78846803E8, UPPER(DISTINCT 0.23678523721333433))))))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ((((((t0.c0, '-1531838179', t0.c0)) NOT BETWEEN ((ROUND(vt0.c0, t0.c0), ((',*oF')>(t0.c0)), CASE t0.c0  WHEN NULL THEN t0.c0 END)) AND ((vt0.c0, 5.78846803E8, UPPER(DISTINCT 0.23678523721333433))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT rt0.c3, rt0.c0, v0.c2, rt0.c2, vt0.c0, rt0.c1, rt0.c4, v0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c3, rt0.c0, v0.c2, rt0.c2, vt0.c0, rt0.c1, rt0.c4, v0.c0;
SELECT rt0.c3, rt0.c0, v0.c2, rt0.c2, vt0.c0, rt0.c1, rt0.c4, v0.c0 FROM vt0, rt0, v0 WHERE ((((~ (vt0.c0))) ISNULL)) GROUP BY rt0.c3, rt0.c0, v0.c2, rt0.c2, vt0.c0, rt0.c1, rt0.c4, v0.c0 UNION SELECT rt0.c3, rt0.c0, v0.c2, rt0.c2, vt0.c0, rt0.c1, rt0.c4, v0.c0 FROM vt0, rt0, v0 WHERE ((NOT ((((~ (vt0.c0))) ISNULL)))) GROUP BY rt0.c3, rt0.c0, v0.c2, rt0.c2, vt0.c0, rt0.c1, rt0.c4, v0.c0 UNION SELECT ALL rt0.c3, rt0.c0, v0.c2, rt0.c2, vt0.c0, rt0.c1, rt0.c4, v0.c0 FROM vt0, rt0, v0 WHERE ((((((~ (vt0.c0))) ISNULL)) ISNULL)) GROUP BY rt0.c3, rt0.c0, v0.c2, rt0.c2, vt0.c0, rt0.c1, rt0.c4, v0.c0;
SELECT rt0.c3, rt0.c0, v0.c2, rt0.c2, vt0.c0, rt0.c1, rt0.c4, v0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c3, rt0.c0, v0.c2, rt0.c2, vt0.c0, rt0.c1, rt0.c4, v0.c0;
SELECT vt0.c0, rt0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c2, rt0.c3, v0.c1 FROM vt0, v0, rt0, t0 GROUP BY vt0.c0, rt0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c2, rt0.c3, v0.c1;
SELECT ALL vt0.c0, rt0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c2, rt0.c3, v0.c1 FROM vt0, v0, rt0, t0 GROUP BY vt0.c0, rt0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c2, rt0.c3, v0.c1 HAVING CAST(((vt0.c0)+(rt0.c1)) AS REAL) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c2, rt0.c3, v0.c1 FROM vt0, v0, rt0, t0 GROUP BY vt0.c0, rt0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c2, rt0.c3, v0.c1 HAVING (NOT (CAST(((vt0.c0)+(rt0.c1)) AS REAL))) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c2, rt0.c3, v0.c1 FROM vt0, v0, rt0, t0 GROUP BY vt0.c0, rt0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c2, rt0.c3, v0.c1 HAVING ((CAST(((vt0.c0)+(rt0.c1)) AS REAL)) ISNULL);
SELECT vt0.c0, rt0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c2, rt0.c3, v0.c1 FROM vt0, v0, rt0, t0 GROUP BY vt0.c0, rt0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c2, rt0.c3, v0.c1;
SELECT ALL vt0.c0, rt0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c2, rt0.c3, v0.c1 FROM vt0, v0, rt0, t0 GROUP BY vt0.c0, rt0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c2, rt0.c3, v0.c1 HAVING CAST(((vt0.c0)+(rt0.c1)) AS REAL) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c2, rt0.c3, v0.c1 FROM vt0, v0, rt0, t0 GROUP BY vt0.c0, rt0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c2, rt0.c3, v0.c1 HAVING (NOT (CAST(((vt0.c0)+(rt0.c1)) AS REAL))) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c2, rt0.c3, v0.c1 FROM vt0, v0, rt0, t0 GROUP BY vt0.c0, rt0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c2, rt0.c3, v0.c1 HAVING ((CAST(((vt0.c0)+(rt0.c1)) AS REAL)) ISNULL);
SELECT vt0.c0, rt0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c2, rt0.c3, v0.c1 FROM vt0, v0, rt0, t0 GROUP BY vt0.c0, rt0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c2, rt0.c3, v0.c1;
SELECT ALL MIN(CAST(((v0.c2)==(v0.c0)) AS BLOB)) FROM v0, vt0 ORDER BY ((((((vt0.c0)GLOB(v0.c2)))OR((+ (v0.c1)))))AND(v0.c1 COLLATE NOCASE));
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (x'5881' COLLATE BINARY) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (x'5881' COLLATE BINARY))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((x'5881' COLLATE BINARY) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)) AS NUMERIC)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c4 FROM rt0, vt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0, vt0 WHERE (((((rt0.c1)<(rt0.c4))) IS TRUE)) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM rt0, vt0 WHERE ((NOT (((((rt0.c1)<(rt0.c4))) IS TRUE)))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM rt0, vt0 WHERE (((((((rt0.c1)<(rt0.c4))) IS TRUE)) ISNULL)) GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0, vt0 GROUP BY rt0.c4;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(((TOTAL(vt0.c0))<(MIN(COUNT(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING (NOT (SUM(((TOTAL(vt0.c0))<(MIN(COUNT(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(((TOTAL(vt0.c0))<(MIN(COUNT(vt0.c0)))))) ISNULL);
SELECT rt0.c4, rt0.c3, v0.c2, rt0.c0, rt0.c2, t0.c0 FROM v0, vt0, rt0, t0;
SELECT ALL rt0.c4, rt0.c3, v0.c2, rt0.c0, rt0.c2, t0.c0 FROM v0, vt0, rt0, t0 WHERE (((((rt0.c1)OR(rt0.c3)))AND(rt0.c1)) COLLATE BINARY) UNION ALL SELECT ALL rt0.c4, rt0.c3, v0.c2, rt0.c0, rt0.c2, t0.c0 FROM v0, vt0, rt0, t0 WHERE ((NOT (((((rt0.c1)OR(rt0.c3)))AND(rt0.c1)) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c4, rt0.c3, v0.c2, rt0.c0, rt0.c2, t0.c0 FROM v0, vt0, rt0, t0 WHERE (((((((rt0.c1)OR(rt0.c3)))AND(rt0.c1)) COLLATE BINARY) ISNULL));
SELECT rt0.c4, rt0.c3, v0.c2, rt0.c0, rt0.c2, t0.c0 FROM v0, vt0, rt0, t0;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3 FROM rt0 WHERE (((((((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)OR(LIKELIHOOD(DISTINCT rt0.c1, 0.7195527864570379))))OR(x'')))OR(((rt0.c4) IS FALSE))))AND(rt0.c2 COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT (((((((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)OR(LIKELIHOOD(DISTINCT rt0.c1, 0.7195527864570379))))OR(x'')))OR(((rt0.c4) IS FALSE))))AND(rt0.c2 COLLATE NOCASE))))) UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3 FROM rt0 WHERE (((((((((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)OR(LIKELIHOOD(DISTINCT rt0.c1, 0.7195527864570379))))OR(x'')))OR(((rt0.c4) IS FALSE))))AND(rt0.c2 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3 FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0 IN ()) IN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), '72309500'))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 IN ()) IN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), '72309500'))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0 IN ()) IN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), '72309500'))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING CAST(v0.c1 AS BLOB) UNION ALL SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (NOT (CAST(v0.c1 AS BLOB))) UNION ALL SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING ((CAST(v0.c1 AS BLOB)) ISNULL);
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING CAST(v0.c1 AS BLOB) UNION ALL SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (NOT (CAST(v0.c1 AS BLOB))) UNION ALL SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING ((CAST(v0.c1 AS BLOB)) ISNULL);
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL * FROM t0, v0, vt0;
SELECT * FROM t0, v0, vt0 WHERE ((NOT ((+ (v0.c2))))) UNION ALL SELECT * FROM t0, v0, vt0 WHERE ((NOT ((NOT ((+ (v0.c2))))))) UNION ALL SELECT ALL * FROM t0, v0, vt0 WHERE ((((NOT ((+ (v0.c2))))) ISNULL));
SELECT ALL * FROM t0, v0, vt0;
SELECT DISTINCT v0.c1, rt0.c3, rt0.c0, vt0.c0, t0.c0, v0.c0, v0.c2, rt0.c1, rt0.c2, rt0.c4 FROM vt0, v0, t0, rt0;
SELECT DISTINCT v0.c1, rt0.c3, rt0.c0, vt0.c0, t0.c0, v0.c0, v0.c2, rt0.c1, rt0.c2, rt0.c4 FROM vt0, v0, t0, rt0 WHERE ((((CASE WHEN v0.c1 THEN v0.c2 ELSE vt0.c0 END, rt0.c0 COLLATE BINARY, ((rt0.c4) NOTNULL)))>=((((rt0.c2)LIKE(rt0.c2)), ((rt0.c4)<(NULL)), ((rt0.c1)LIKE(rt0.c0)))))) UNION SELECT DISTINCT v0.c1, rt0.c3, rt0.c0, vt0.c0, t0.c0, v0.c0, v0.c2, rt0.c1, rt0.c2, rt0.c4 FROM vt0, v0, t0, rt0 WHERE ((NOT ((((CASE WHEN v0.c1 THEN v0.c2 ELSE vt0.c0 END, rt0.c0 COLLATE BINARY, ((rt0.c4) NOTNULL)))>=((((rt0.c2)LIKE(rt0.c2)), ((rt0.c4)<(NULL)), ((rt0.c1)LIKE(rt0.c0)))))))) UNION SELECT DISTINCT v0.c1, rt0.c3, rt0.c0, vt0.c0, t0.c0, v0.c0, v0.c2, rt0.c1, rt0.c2, rt0.c4 FROM vt0, v0, t0, rt0 WHERE ((((((CASE WHEN v0.c1 THEN v0.c2 ELSE vt0.c0 END, rt0.c0 COLLATE BINARY, ((rt0.c4) NOTNULL)))>=((((rt0.c2)LIKE(rt0.c2)), ((rt0.c4)<(NULL)), ((rt0.c1)LIKE(rt0.c0)))))) ISNULL));
SELECT DISTINCT v0.c1, rt0.c3, rt0.c0, vt0.c0, t0.c0, v0.c0, v0.c2, rt0.c1, rt0.c2, rt0.c4 FROM vt0, v0, t0, rt0;
SELECT rt0.c2, rt0.c3 FROM rt0 INNER JOIN v0 ON LIKELIHOOD(((v0.c2) IS FALSE), 0.896269765319154) GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0 INNER JOIN v0 ON LIKELIHOOD(((v0.c2) IS FALSE), 0.896269765319154) WHERE ((json_valid(v0.c2) IN ((rt0.c0 IN ())))) GROUP BY rt0.c2, rt0.c3 UNION SELECT rt0.c2, rt0.c3 FROM rt0 INNER JOIN v0 ON LIKELIHOOD(((v0.c2) IS FALSE), 0.896269765319154) WHERE ((NOT ((json_valid(v0.c2) IN ((rt0.c0 IN ())))))) GROUP BY rt0.c2, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c3 FROM rt0 INNER JOIN v0 ON LIKELIHOOD(((v0.c2) IS FALSE), 0.896269765319154) WHERE ((((json_valid(v0.c2) IN ((rt0.c0 IN ())))) ISNULL)) GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0 INNER JOIN v0 ON LIKELIHOOD(((v0.c2) IS FALSE), 0.896269765319154) GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING GROUP_CONCAT(MIN(rt0.c1)) UNION ALL SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (NOT (GROUP_CONCAT(MIN(rt0.c1)))) UNION ALL SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING ((GROUP_CONCAT(MIN(rt0.c1))) ISNULL);
SELECT SUM(v0.c2) FROM vt0, t0, v0;
SELECT ALL v0.c1, v0.c0 FROM t0, v0, vt0;
SELECT v0.c1, v0.c0 FROM t0, v0, vt0 WHERE (CAST(x'' AS REAL)) UNION ALL SELECT v0.c1, v0.c0 FROM t0, v0, vt0 WHERE ((NOT (CAST(x'' AS REAL)))) UNION ALL SELECT ALL v0.c1, v0.c0 FROM t0, v0, vt0 WHERE (((CAST(x'' AS REAL)) ISNULL));
SELECT ALL v0.c1, v0.c0 FROM t0, v0, vt0;
SELECT DISTINCT v0.c0, rt0.c2, rt0.c4, v0.c2 FROM t0 FULL OUTER JOIN rt0 ON (rt0.c4 IN ()) COLLATE NOCASE INNER JOIN v0 ON v0.c2;
SELECT DISTINCT v0.c0, rt0.c2, rt0.c4, v0.c2 FROM t0 FULL OUTER JOIN rt0 ON (rt0.c4 IN ()) COLLATE NOCASE INNER JOIN v0 ON v0.c2 WHERE ((- (-1611623547))) UNION SELECT DISTINCT v0.c0, rt0.c2, rt0.c4, v0.c2 FROM t0 FULL OUTER JOIN rt0 ON (rt0.c4 IN ()) COLLATE NOCASE INNER JOIN v0 ON v0.c2 WHERE ((NOT ((- (-1611623547))))) UNION SELECT DISTINCT v0.c0, rt0.c2, rt0.c4, v0.c2 FROM t0 FULL OUTER JOIN rt0 ON (rt0.c4 IN ()) COLLATE NOCASE INNER JOIN v0 ON v0.c2 WHERE ((((- (-1611623547))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c2, rt0.c4, v0.c2 FROM t0 FULL OUTER JOIN rt0 ON (rt0.c4 IN ()) COLLATE NOCASE INNER JOIN v0 ON v0.c2;
SELECT rt0.c1, v0.c0, rt0.c0, v0.c1, v0.c2, rt0.c2, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (LOWER(DISTINCT rt0.c0) IN ()) FULL OUTER JOIN v0 ON (((0.8132822860982661)) NOT BETWEEN ((((((v0.c0)AND(rt0.c0)))OR(rt0.c0)))) AND ((UNLIKELY(rt0.c2)))) INNER JOIN t0 ON ((((v0.c1) BETWEEN (rt0.c1) AND (v0.c2))) BETWEEN (CASE rt0.c3  WHEN 0X2f56f144 THEN vt0.c0 END) AND (((t0.c0) IS TRUE))) GROUP BY rt0.c1, v0.c0, rt0.c0, v0.c1, v0.c2, rt0.c2, vt0.c0;
SELECT rt0.c1, v0.c0, rt0.c0, v0.c1, v0.c2, rt0.c2, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (LOWER(DISTINCT rt0.c0) IN ()) FULL OUTER JOIN v0 ON (((0.8132822860982661)) NOT BETWEEN ((((((v0.c0)AND(rt0.c0)))OR(rt0.c0)))) AND ((UNLIKELY(rt0.c2)))) INNER JOIN t0 ON ((((v0.c1) BETWEEN (rt0.c1) AND (v0.c2))) BETWEEN (CASE rt0.c3  WHEN 0x2f56f144 THEN vt0.c0 END) AND (((t0.c0) IS TRUE))) WHERE ((v0.c2 COLLATE BINARY IN ())) GROUP BY rt0.c1, v0.c0, rt0.c0, v0.c1, v0.c2, rt0.c2, vt0.c0 UNION SELECT ALL rt0.c1, v0.c0, rt0.c0, v0.c1, v0.c2, rt0.c2, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (LOWER(DISTINCT rt0.c0) IN ()) FULL OUTER JOIN v0 ON (((0.8132822860982661)) NOT BETWEEN ((((((v0.c0)AND(rt0.c0)))OR(rt0.c0)))) AND ((UNLIKELY(rt0.c2)))) INNER JOIN t0 ON ((((v0.c1) BETWEEN (rt0.c1) AND (v0.c2))) BETWEEN (CASE rt0.c3  WHEN 0X2f56f144 THEN vt0.c0 END) AND (((t0.c0) IS TRUE))) WHERE ((NOT ((v0.c2 COLLATE BINARY IN ())))) GROUP BY rt0.c1, v0.c0, rt0.c0, v0.c1, v0.c2, rt0.c2, vt0.c0 UNION SELECT rt0.c1, v0.c0, rt0.c0, v0.c1, v0.c2, rt0.c2, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (LOWER(DISTINCT rt0.c0) IN ()) FULL OUTER JOIN v0 ON (((0.8132822860982661)) NOT BETWEEN ((((((v0.c0)AND(rt0.c0)))OR(rt0.c0)))) AND ((UNLIKELY(rt0.c2)))) INNER JOIN t0 ON ((((v0.c1) BETWEEN (rt0.c1) AND (v0.c2))) BETWEEN (CASE rt0.c3  WHEN 0X2f56f144 THEN vt0.c0 END) AND (((t0.c0) IS TRUE))) WHERE ((((v0.c2 COLLATE BINARY IN ())) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c0, v0.c1, v0.c2, rt0.c2, vt0.c0;
SELECT rt0.c1, v0.c0, rt0.c0, v0.c1, v0.c2, rt0.c2, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (LOWER(DISTINCT rt0.c0) IN ()) FULL OUTER JOIN v0 ON (((0.8132822860982661)) NOT BETWEEN ((((((v0.c0)AND(rt0.c0)))OR(rt0.c0)))) AND ((UNLIKELY(rt0.c2)))) INNER JOIN t0 ON ((((v0.c1) BETWEEN (rt0.c1) AND (v0.c2))) BETWEEN (CASE rt0.c3  WHEN 0X2f56f144 THEN vt0.c0 END) AND (((t0.c0) IS TRUE))) GROUP BY rt0.c1, v0.c0, rt0.c0, v0.c1, v0.c2, rt0.c2, vt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN AVG(COUNT(COUNT(AVG(t0.c0)))) ELSE MAX(COUNT(COUNT(*))) END) NOTNULL) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN AVG(COUNT(COUNT(AVG(t0.c0)))) ELSE MAX(COUNT(COUNT(*))) END) NOTNULL))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN AVG(COUNT(COUNT(AVG(t0.c0)))) ELSE MAX(COUNT(COUNT(*))) END) NOTNULL)) ISNULL);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON ((((rt0.c3) NOTNULL))|(v0.c1 COLLATE NOCASE)) CROSS JOIN v0 ON ((rt0.c0)IS(t0.c0)) COLLATE BINARY COLLATE RTRIM;
SELECT DISTINCT t0.c0, vt0.c0 FROM t0, vt0;
SELECT DISTINCT t0.c0, vt0.c0 FROM t0, vt0 WHERE (((((((t0.c0)OR(t0.c0)))OR(vt0.c0)))GLOB(((t0.c0)%(vt0.c0))))) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM t0, vt0 WHERE ((NOT (((((((t0.c0)OR(t0.c0)))OR(vt0.c0)))GLOB(((t0.c0)%(vt0.c0))))))) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM t0, vt0 WHERE (((((((((t0.c0)OR(t0.c0)))OR(vt0.c0)))GLOB(((t0.c0)%(vt0.c0))))) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0 FROM t0, vt0;
SELECT ALL v0.c1, v0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c4, rt0.c1, v0.c2 FROM t0, rt0, v0 GROUP BY v0.c1, v0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c4, rt0.c1, v0.c2;
SELECT v0.c1, v0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c4, rt0.c1, v0.c2 FROM t0, rt0, v0 WHERE (('' COLLATE NOCASE IN ())) GROUP BY v0.c1, v0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c4, rt0.c1, v0.c2 UNION SELECT v0.c1, v0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c4, rt0.c1, v0.c2 FROM t0, rt0, v0 WHERE ((NOT (('' COLLATE NOCASE IN ())))) GROUP BY v0.c1, v0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c4, rt0.c1, v0.c2 UNION SELECT v0.c1, v0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c4, rt0.c1, v0.c2 FROM t0, rt0, v0 WHERE (((('' COLLATE NOCASE IN ())) ISNULL)) GROUP BY v0.c1, v0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c4, rt0.c1, v0.c2;
SELECT ALL v0.c1, v0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c4, rt0.c1, v0.c2 FROM t0, rt0, v0 GROUP BY v0.c1, v0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c4, rt0.c1, v0.c2;
SELECT vt0.c0, v0.c0, t0.c0, v0.c1, v0.c2 FROM v0, t0, vt0 GROUP BY vt0.c0, v0.c0, t0.c0, v0.c1, v0.c2;
SELECT vt0.c0, v0.c0, t0.c0, v0.c1, v0.c2 FROM v0, t0, vt0 GROUP BY vt0.c0, v0.c0, t0.c0, v0.c1, v0.c2 HAVING (CASE WHEN SUM(v0.c1) THEN v0.c0 WHEN SUM(v0.c0) THEN vt0.c0 WHEN v0.c1 THEN GROUP_CONCAT(vt0.c0) ELSE MAX(TOTAL(MIN(t0.c0))) END IN ()) UNION ALL SELECT vt0.c0, v0.c0, t0.c0, v0.c1, v0.c2 FROM v0, t0, vt0 GROUP BY vt0.c0, v0.c0, t0.c0, v0.c1, v0.c2 HAVING (NOT ((CASE WHEN SUM(v0.c1) THEN v0.c0 WHEN SUM(v0.c0) THEN vt0.c0 WHEN v0.c1 THEN GROUP_CONCAT(vt0.c0) ELSE MAX(TOTAL(MIN(t0.c0))) END IN ()))) UNION ALL SELECT ALL vt0.c0, v0.c0, t0.c0, v0.c1, v0.c2 FROM v0, t0, vt0 GROUP BY vt0.c0, v0.c0, t0.c0, v0.c1, v0.c2 HAVING (((CASE WHEN SUM(v0.c1) THEN v0.c0 WHEN SUM(v0.c0) THEN vt0.c0 WHEN v0.c1 THEN GROUP_CONCAT(vt0.c0) ELSE MAX(TOTAL(MIN(t0.c0))) END IN ())) ISNULL);
SELECT vt0.c0, v0.c0, t0.c0, v0.c1, v0.c2 FROM v0, t0, vt0 GROUP BY vt0.c0, v0.c0, t0.c0, v0.c1, v0.c2;
SELECT vt0.c0, v0.c0, t0.c0, v0.c1, v0.c2 FROM v0, t0, vt0 GROUP BY vt0.c0, v0.c0, t0.c0, v0.c1, v0.c2 HAVING (CASE WHEN SUM(v0.c1) THEN v0.c0 WHEN SUM(v0.c0) THEN vt0.c0 WHEN v0.c1 THEN GROUP_CONCAT(vt0.c0) ELSE MAX(TOTAL(MIN(t0.c0))) END IN ()) UNION ALL SELECT vt0.c0, v0.c0, t0.c0, v0.c1, v0.c2 FROM v0, t0, vt0 GROUP BY vt0.c0, v0.c0, t0.c0, v0.c1, v0.c2 HAVING (NOT ((CASE WHEN SUM(v0.c1) THEN v0.c0 WHEN SUM(v0.c0) THEN vt0.c0 WHEN v0.c1 THEN GROUP_CONCAT(vt0.c0) ELSE MAX(TOTAL(MIN(t0.c0))) END IN ()))) UNION ALL SELECT ALL vt0.c0, v0.c0, t0.c0, v0.c1, v0.c2 FROM v0, t0, vt0 GROUP BY vt0.c0, v0.c0, t0.c0, v0.c1, v0.c2 HAVING (((CASE WHEN SUM(v0.c1) THEN v0.c0 WHEN SUM(v0.c0) THEN vt0.c0 WHEN v0.c1 THEN GROUP_CONCAT(vt0.c0) ELSE MAX(TOTAL(MIN(t0.c0))) END IN ())) ISNULL);
SELECT vt0.c0, v0.c0, t0.c0, v0.c1, v0.c2 FROM v0, t0, vt0 GROUP BY vt0.c0, v0.c0, t0.c0, v0.c1, v0.c2;
SELECT v0.c2, v0.c0, v0.c1 FROM v0;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 WHERE (CAST((NOT (v0.c2)) AS BLOB)) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 WHERE ((NOT (CAST((NOT (v0.c2)) AS BLOB)))) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 WHERE (((CAST((NOT (v0.c2)) AS BLOB)) ISNULL));
SELECT v0.c2, v0.c0, v0.c1 FROM v0;
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((NULL)<=(vt0.c0)) COLLATE RTRIM RIGHT OUTER JOIN v0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN v0.c2 END) NOT NULL);
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((NULL)<=(vt0.c0)) COLLATE RTRIM RIGHT OUTER JOIN v0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN v0.c2 END) NOT NULL) WHERE ((((rt0.c4)) BETWEEN (((((v0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))) AND ((((rt0.c2) ISNULL))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((NULL)<=(vt0.c0)) COLLATE RTRIM RIGHT OUTER JOIN v0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN v0.c2 END) NOT NULL) WHERE ((NOT ((((rt0.c4)) BETWEEN (((((v0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))) AND ((((rt0.c2) ISNULL))))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((NULL)<=(vt0.c0)) COLLATE RTRIM RIGHT OUTER JOIN v0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN v0.c2 END) NOT NULL) WHERE ((((((rt0.c4)) BETWEEN (((((v0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))) AND ((((rt0.c2) ISNULL))))) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((NULL)<=(vt0.c0)) COLLATE RTRIM RIGHT OUTER JOIN v0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN v0.c2 END) NOT NULL);
SELECT ALL rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4;
SELECT ALL rt0.c1, rt0.c4 FROM rt0 WHERE (((+ (rt0.c4)) IN (((((((((((((((((rt0.c0)OR(2081133652)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1))))) GROUP BY rt0.c1, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT (((+ (rt0.c4)) IN (((((((((((((((((rt0.c0)OR(2081133652)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1))))))) GROUP BY rt0.c1, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c4 FROM rt0 WHERE (((((+ (rt0.c4)) IN (((((((((((((((((rt0.c0)OR(2081133652)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c4;
SELECT ALL rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4;
SELECT ALL rt0.c0, rt0.c3 FROM rt0, t0, v0 GROUP BY rt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c3 FROM rt0, t0, v0 GROUP BY rt0.c0, rt0.c3 HAVING CASE TOTAL(rt0.c3)  WHEN TOTAL(COUNT(*)) THEN MAX(rt0.c3) WHEN MIN(rt0.c3) THEN GROUP_CONCAT(COUNT(*)) WHEN (GROUP_CONCAT(rt0.c4) IN ()) THEN COUNT(*) ELSE MIN(rt0.c4) END UNION ALL SELECT ALL rt0.c0, rt0.c3 FROM rt0, t0, v0 GROUP BY rt0.c0, rt0.c3 HAVING (NOT (CASE TOTAL(rt0.c3)  WHEN TOTAL(COUNT(*)) THEN MAX(rt0.c3) WHEN MIN(rt0.c3) THEN GROUP_CONCAT(COUNT(*)) WHEN (GROUP_CONCAT(rt0.c4) IN ()) THEN COUNT(*) ELSE MIN(rt0.c4) END)) UNION ALL SELECT rt0.c0, rt0.c3 FROM rt0, t0, v0 GROUP BY rt0.c0, rt0.c3 HAVING ((CASE TOTAL(rt0.c3)  WHEN TOTAL(COUNT(*)) THEN MAX(rt0.c3) WHEN MIN(rt0.c3) THEN GROUP_CONCAT(COUNT(*)) WHEN (GROUP_CONCAT(rt0.c4) IN ()) THEN COUNT(*) ELSE MIN(rt0.c4) END) ISNULL);
SELECT SUM((((((vt0.c0, t0.c0, t0.c0, x'', vt0.c0))<=((vt0.c0, t0.c0, t0.c0, vt0.c0, t0.c0)))) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(t0.c0))) AND (CAST(vt0.c0 AS TEXT)))) FROM t0, vt0 ORDER BY ((t0.c0 COLLATE RTRIM)<<(((t0.c0)GLOB(vt0.c0))));
SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c0, rt0.c2, v0.c2, v0.c1 FROM rt0 NATURAL JOIN v0;
SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c0, rt0.c2, v0.c2, v0.c1 FROM rt0 NOT INDEXED NATURAL JOIN v0 WHERE ((((('1877047581')AND(rt0.c4)))OR(v0.c2)) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c0, rt0.c2, v0.c2, v0.c1 FROM rt0 NATURAL JOIN v0 WHERE ((NOT ((((('1877047581')AND(rt0.c4)))OR(v0.c2)) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c0, rt0.c2, v0.c2, v0.c1 FROM rt0 NATURAL JOIN v0 WHERE ((((((('1877047581')AND(rt0.c4)))OR(v0.c2)) COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c0, rt0.c2, v0.c2, v0.c1 FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2, rt0.c3, vt0.c0 FROM vt0, rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c4 COLLATE BINARY)AND(rt0.c1 COLLATE NOCASE)))OR(CAST(rt0.c2 AS REAL)));
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2, rt0.c3, vt0.c0 FROM vt0, rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c4 COLLATE BINARY)AND(rt0.c1 COLLATE NOCASE)))OR(CAST(rt0.c2 AS REAL))) WHERE ((((- (rt0.c3))) NOT NULL)) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2, rt0.c3, vt0.c0 FROM vt0, rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c4 COLLATE BINARY)AND(rt0.c1 COLLATE NOCASE)))OR(CAST(rt0.c2 AS REAL))) WHERE ((NOT ((((- (rt0.c3))) NOT NULL)))) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2, rt0.c3, vt0.c0 FROM vt0, rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c4 COLLATE BINARY)AND(rt0.c1 COLLATE NOCASE)))OR(CAST(rt0.c2 AS REAL))) WHERE ((((((- (rt0.c3))) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2, rt0.c3, vt0.c0 FROM vt0, rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c4 COLLATE BINARY)AND(rt0.c1 COLLATE NOCASE)))OR(CAST(rt0.c2 AS REAL)));
SELECT ALL v0.c1 FROM rt0, t0, vt0, v0 GROUP BY v0.c1;
SELECT v0.c1 FROM rt0, t0, vt0, v0 WHERE (((((v0.c1)AND(v0.c1)))OR(0x50c6f62f)) COLLATE BINARY) GROUP BY v0.c1 UNION SELECT ALL v0.c1 FROM rt0, t0, vt0, v0 WHERE ((NOT (((((v0.c1)AND(v0.c1)))OR(0X50c6f62f)) COLLATE BINARY))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM rt0, t0, vt0, v0 WHERE (((((((v0.c1)AND(v0.c1)))OR(0x50c6f62f)) COLLATE BINARY) ISNULL)) GROUP BY v0.c1;
SELECT ALL v0.c1 FROM rt0, t0, vt0, v0 GROUP BY v0.c1;
SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM v0 LEFT OUTER JOIN t0 ON (((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) COLLATE BINARY LEFT OUTER JOIN rt0 ON (((NOT (v0.c0)))*(((x'')*(v0.c1)))) LEFT OUTER JOIN vt0 ON CAST(CAST(rt0.c4 AS INTEGER) AS REAL) GROUP BY rt0.c2, v0.c0, rt0.c1;
SELECT * FROM t0, rt0, v0, vt0;
SELECT ALL * FROM t0, rt0, v0, vt0 WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((((x'64a3')OR(NULL)))AND(v0.c2))))) UNION ALL SELECT * FROM t0, rt0, v0, vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((((x'64a3')OR(NULL)))AND(v0.c2))))))) UNION ALL SELECT * FROM t0, rt0, v0, vt0 WHERE (((((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((((x'64a3')OR(NULL)))AND(v0.c2))))) ISNULL));
SELECT * FROM t0, rt0, v0, vt0;
SELECT DISTINCT v0.c0, v0.c1 FROM v0, rt0, t0, vt0;
SELECT DISTINCT v0.c0, v0.c1 FROM v0, rt0, t0, vt0 WHERE (CASE WHEN ((rt0.c1)+(rt0.c3)) THEN ((((rt0.c1)AND(rt0.c3)))AND(rt0.c4)) END) UNION SELECT DISTINCT v0.c0, v0.c1 FROM v0, rt0, t0, vt0 WHERE ((NOT (CASE WHEN ((rt0.c1)+(rt0.c3)) THEN ((((rt0.c1)AND(rt0.c3)))AND(rt0.c4)) END))) UNION SELECT DISTINCT v0.c0, v0.c1 FROM v0, rt0, t0, vt0 WHERE (((CASE WHEN ((rt0.c1)+(rt0.c3)) THEN ((((rt0.c1)AND(rt0.c3)))AND(rt0.c4)) END) ISNULL));
SELECT DISTINCT v0.c0, v0.c1 FROM v0, rt0, t0, vt0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 NOT INDEXED WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT rt0.c1, rt0.c4 FROM rt0, t0, vt0, v0 GROUP BY rt0.c1, rt0.c4;
SELECT rt0.c1, rt0.c4 FROM rt0, t0, vt0, v0 GROUP BY rt0.c1, rt0.c4 HAVING TOTAL(((NULL)!=(rt0.c2))) UNION ALL SELECT rt0.c1, rt0.c4 FROM rt0, t0, vt0, v0 GROUP BY rt0.c1, rt0.c4 HAVING (NOT (TOTAL(((NULL)!=(rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c4 FROM rt0, t0, vt0, v0 GROUP BY rt0.c1, rt0.c4 HAVING ((TOTAL(((NULL)!=(rt0.c2)))) ISNULL);
SELECT rt0.c1, rt0.c4 FROM rt0, t0, vt0, v0 GROUP BY rt0.c1, rt0.c4;
SELECT rt0.c1, rt0.c4 FROM rt0, t0, vt0, v0 GROUP BY rt0.c1, rt0.c4 HAVING TOTAL(((NULL)!=(rt0.c2))) UNION ALL SELECT rt0.c1, rt0.c4 FROM rt0, t0, vt0, v0 GROUP BY rt0.c1, rt0.c4 HAVING (NOT (TOTAL(((NULL)!=(rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c4 FROM rt0, t0, vt0, v0 GROUP BY rt0.c1, rt0.c4 HAVING ((TOTAL(((NULL)!=(rt0.c2)))) ISNULL);
SELECT rt0.c1, rt0.c4 FROM rt0, t0, vt0, v0 GROUP BY rt0.c1, rt0.c4;
SELECT v0.c2, v0.c1 FROM v0;
SELECT v0.c2, v0.c1 FROM v0 WHERE ((((((-1517785427 IN (v0.c0)))AND(0.9646013217339298 COLLATE NOCASE)))AND(0.048233010284912115))) UNION ALL SELECT v0.c2, v0.c1 FROM v0 WHERE ((NOT ((((((-1517785427 IN (v0.c0)))AND(0.9646013217339298 COLLATE NOCASE)))AND(0.048233010284912115))))) UNION ALL SELECT v0.c2, v0.c1 FROM v0 WHERE ((((((((-1517785427 IN (v0.c0)))AND(0.9646013217339298 COLLATE NOCASE)))AND(0.048233010284912115))) ISNULL));
SELECT v0.c2, v0.c1 FROM v0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (LENGTH(t0.c0 COLLATE NOCASE)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (LENGTH(t0.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((LENGTH(t0.c0 COLLATE NOCASE)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0, rt0.c0, rt0.c4, v0.c0, vt0.c0, v0.c1, rt0.c1, rt0.c2 FROM rt0, v0, vt0, t0 GROUP BY t0.c0, rt0.c0, rt0.c4, v0.c0, vt0.c0, v0.c1, rt0.c1, rt0.c2;
SELECT ALL t0.c0, rt0.c0, rt0.c4, v0.c0, vt0.c0, v0.c1, rt0.c1, rt0.c2 FROM rt0, v0, vt0, t0 WHERE (((CAST(x'48e5' AS REAL))/(rt0.c4 COLLATE RTRIM))) GROUP BY t0.c0, rt0.c0, rt0.c4, v0.c0, vt0.c0, v0.c1, rt0.c1, rt0.c2 UNION SELECT t0.c0, rt0.c0, rt0.c4, v0.c0, vt0.c0, v0.c1, rt0.c1, rt0.c2 FROM rt0, v0, vt0, t0 WHERE ((NOT (((CAST(x'48e5' AS REAL))/(rt0.c4 COLLATE RTRIM))))) GROUP BY t0.c0, rt0.c0, rt0.c4, v0.c0, vt0.c0, v0.c1, rt0.c1, rt0.c2 UNION SELECT ALL t0.c0, rt0.c0, rt0.c4, v0.c0, vt0.c0, v0.c1, rt0.c1, rt0.c2 FROM rt0, v0, vt0 NOT INDEXED, t0 WHERE (((((CAST(x'48e5' AS REAL))/(rt0.c4 COLLATE RTRIM))) ISNULL)) GROUP BY t0.c0, rt0.c0, rt0.c4, v0.c0, vt0.c0, v0.c1, rt0.c1, rt0.c2;
SELECT ALL t0.c0, rt0.c0, rt0.c4, v0.c0, vt0.c0, v0.c1, rt0.c1, rt0.c2 FROM rt0, v0, vt0, t0 GROUP BY t0.c0, rt0.c0, rt0.c4, v0.c0, vt0.c0, v0.c1, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, v0.c2, vt0.c0, rt0.c1, rt0.c2, v0.c1, rt0.c4, rt0.c3, v0.c0 FROM t0, rt0, vt0, v0 GROUP BY rt0.c0, v0.c2, vt0.c0, rt0.c1, rt0.c2, v0.c1, rt0.c4, rt0.c3, v0.c0;
SELECT ALL rt0.c0, v0.c2, vt0.c0, rt0.c1, rt0.c2, v0.c1, rt0.c4, rt0.c3, v0.c0 FROM t0, rt0, vt0, v0 GROUP BY rt0.c0, v0.c2, vt0.c0, rt0.c1, rt0.c2, v0.c1, rt0.c4, rt0.c3, v0.c0 HAVING MIN(TOTAL(0.22129726101755443)) UNION ALL SELECT ALL rt0.c0, v0.c2, vt0.c0, rt0.c1, rt0.c2, v0.c1, rt0.c4, rt0.c3, v0.c0 FROM t0, rt0, vt0, v0 GROUP BY rt0.c0, v0.c2, vt0.c0, rt0.c1, rt0.c2, v0.c1, rt0.c4, rt0.c3, v0.c0 HAVING (NOT (MIN(TOTAL(0.22129726101755443)))) UNION ALL SELECT rt0.c0, v0.c2, vt0.c0, rt0.c1, rt0.c2, v0.c1, rt0.c4, rt0.c3, v0.c0 FROM t0, rt0, vt0, v0 GROUP BY rt0.c0, v0.c2, vt0.c0, rt0.c1, rt0.c2, v0.c1, rt0.c4, rt0.c3, v0.c0 HAVING ((MIN(TOTAL(0.22129726101755443))) ISNULL);
SELECT ALL rt0.c0, v0.c2, vt0.c0, rt0.c2, rt0.c1, rt0.c3, t0.c0, rt0.c4 FROM vt0 INNER JOIN v0 ON ((v0.c0) ISNULL) COLLATE RTRIM INNER JOIN t0 ON (CASE WHEN rt0.c2 THEN v0.c1 WHEN v0.c1 THEN rt0.c1 WHEN rt0.c4 THEN v0.c2 END IN ()) LEFT OUTER JOIN rt0 ON ((NOT (rt0.c4)) IN ());
SELECT ALL rt0.c0, v0.c2, vt0.c0, rt0.c2, rt0.c1, rt0.c3, t0.c0, rt0.c4 FROM vt0 INNER JOIN v0 ON ((v0.c0) ISNULL) COLLATE RTRIM INNER JOIN t0 ON (CASE WHEN rt0.c2 THEN v0.c1 WHEN v0.c1 THEN rt0.c1 WHEN rt0.c4 THEN v0.c2 END IN ()) LEFT OUTER JOIN rt0 ON ((NOT (rt0.c4)) IN ()) WHERE (((('0.15585088744185793')-(x'')) IN (((t0.c0) NOT BETWEEN (NULL) AND (rt0.c1))))) UNION ALL SELECT rt0.c0, v0.c2, vt0.c0, rt0.c2, rt0.c1, rt0.c3, t0.c0, rt0.c4 FROM vt0 INNER JOIN v0 ON ((v0.c0) ISNULL) COLLATE RTRIM INNER JOIN t0 ON (CASE WHEN rt0.c2 THEN v0.c1 WHEN v0.c1 THEN rt0.c1 WHEN rt0.c4 THEN v0.c2 END IN ()) LEFT OUTER JOIN rt0 ON ((NOT (rt0.c4)) IN ()) WHERE ((NOT (((('0.15585088744185793')-(x'')) IN (((t0.c0) NOT BETWEEN (NULL) AND (rt0.c1))))))) UNION ALL SELECT ALL rt0.c0, v0.c2, vt0.c0, rt0.c2, rt0.c1, rt0.c3, t0.c0, rt0.c4 FROM vt0 INNER JOIN v0 ON ((v0.c0) ISNULL) COLLATE RTRIM INNER JOIN t0 ON (CASE WHEN rt0.c2 THEN v0.c1 WHEN v0.c1 THEN rt0.c1 WHEN rt0.c4 THEN v0.c2 END IN ()) LEFT OUTER JOIN rt0 ON ((NOT (rt0.c4)) IN ()) WHERE (((((('0.15585088744185793')-(x'')) IN (((t0.c0) NOT BETWEEN (NULL) AND (rt0.c1))))) ISNULL));
SELECT ALL rt0.c0, v0.c2, vt0.c0, rt0.c2, rt0.c1, rt0.c3, t0.c0, rt0.c4 FROM vt0 INNER JOIN v0 ON ((v0.c0) ISNULL) COLLATE RTRIM INNER JOIN t0 ON (CASE WHEN rt0.c2 THEN v0.c1 WHEN v0.c1 THEN rt0.c1 WHEN rt0.c4 THEN v0.c2 END IN ()) LEFT OUTER JOIN rt0 ON ((NOT (rt0.c4)) IN ());
SELECT DISTINCT * FROM t0, vt0, rt0, v0;
SELECT DISTINCT * FROM t0, vt0, rt0, v0 WHERE ((NOT (((rt0.c3) NOT BETWEEN (v0.c2) AND (v0.c2))))) UNION SELECT DISTINCT * FROM t0, vt0, rt0, v0 WHERE ((NOT ((NOT (((rt0.c3) NOT BETWEEN (v0.c2) AND (v0.c2))))))) UNION SELECT DISTINCT * FROM t0, vt0, rt0, v0 WHERE ((((NOT (((rt0.c3) NOT BETWEEN (v0.c2) AND (v0.c2))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0, rt0, v0;
SELECT ALL rt0.c4, rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c4, rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT rt0.c4, rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, t0 WHERE (((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c1)))AND(rt0.c4))) NOTNULL)) GROUP BY rt0.c4, rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, t0 WHERE ((NOT (((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c1)))AND(rt0.c4))) NOTNULL)))) GROUP BY rt0.c4, rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, t0 WHERE (((((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c1)))AND(rt0.c4))) NOTNULL)) ISNULL)) GROUP BY rt0.c4, rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c4, rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c4, rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c4, t0.c0, rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM t0, rt0, vt0 GROUP BY rt0.c3, rt0.c4, t0.c0, rt0.c0, rt0.c2, vt0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c4, t0.c0, rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM t0, rt0, vt0 GROUP BY rt0.c3, rt0.c4, t0.c0, rt0.c0, rt0.c2, vt0.c0, rt0.c1 HAVING ((((MIN(MAX(MAX(SUM(GROUP_CONCAT(rt0.c0))))))AND(COUNT(rt0.c4))))AND(COUNT(*))) UNION ALL SELECT ALL rt0.c3, rt0.c4, t0.c0, rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM t0, rt0 NOT INDEXED, vt0 GROUP BY rt0.c3, rt0.c4, t0.c0, rt0.c0, rt0.c2, vt0.c0, rt0.c1 HAVING (NOT (((((MIN(MAX(MAX(SUM(GROUP_CONCAT(rt0.c0))))))AND(COUNT(rt0.c4))))AND(COUNT(*))))) UNION ALL SELECT ALL rt0.c3, rt0.c4, t0.c0, rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM t0, rt0, vt0 GROUP BY rt0.c3, rt0.c4, t0.c0, rt0.c0, rt0.c2, vt0.c0, rt0.c1 HAVING ((((((MIN(MAX(MAX(SUM(GROUP_CONCAT(rt0.c0))))))AND(COUNT(rt0.c4))))AND(COUNT(*)))) ISNULL);
SELECT ALL * FROM vt0, rt0, t0, v0;
SELECT ALL * FROM vt0, rt0, t0, v0 WHERE ((((rt0.c4 IN ())) IS TRUE)) UNION ALL SELECT * FROM vt0, rt0, t0, v0 WHERE ((NOT ((((rt0.c4 IN ())) IS TRUE)))) UNION ALL SELECT * FROM vt0, rt0, t0, v0 WHERE ((((((rt0.c4 IN ())) IS TRUE)) ISNULL));
SELECT ALL * FROM vt0, rt0, t0, v0;
SELECT DISTINCT v0.c2, rt0.c3, rt0.c2, vt0.c0, t0.c0, v0.c0, rt0.c0, rt0.c1 FROM t0, rt0, v0, vt0;
SELECT DISTINCT v0.c2, rt0.c3, rt0.c2, vt0.c0, t0.c0, v0.c0, rt0.c0, rt0.c1 FROM t0, rt0, v0, vt0 WHERE ((NOT (((rt0.c2)||(rt0.c1))))) UNION SELECT DISTINCT v0.c2, rt0.c3, rt0.c2, vt0.c0, t0.c0, v0.c0, rt0.c0, rt0.c1 FROM t0, rt0, v0, vt0 WHERE ((NOT ((NOT (((rt0.c2)||(rt0.c1))))))) UNION SELECT DISTINCT v0.c2, rt0.c3, rt0.c2, vt0.c0, t0.c0, v0.c0, rt0.c0, rt0.c1 FROM t0, rt0 NOT INDEXED, v0, vt0 WHERE ((((NOT (((rt0.c2)||(rt0.c1))))) ISNULL));
SELECT DISTINCT v0.c2, rt0.c3, rt0.c2, vt0.c0, t0.c0, v0.c0, rt0.c0, rt0.c1 FROM t0, rt0, v0, vt0;
SELECT ALL rt0.c4, t0.c0 FROM t0, rt0, v0 GROUP BY rt0.c4, t0.c0;
SELECT rt0.c4, t0.c0 FROM t0, rt0, v0 WHERE (((((v0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0)))IS NOT(((((rt0.c1)AND(v0.c0)))OR(v0.c1))))) GROUP BY rt0.c4, t0.c0 UNION SELECT rt0.c4, t0.c0 FROM t0, rt0, v0 WHERE ((NOT (((((v0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0)))IS NOT(((((rt0.c1)AND(v0.c0)))OR(v0.c1))))))) GROUP BY rt0.c4, t0.c0 UNION SELECT rt0.c4, t0.c0 FROM t0, rt0, v0 WHERE (((((((v0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0)))IS NOT(((((rt0.c1)AND(v0.c0)))OR(v0.c1))))) ISNULL)) GROUP BY rt0.c4, t0.c0;
SELECT ALL rt0.c4, t0.c0 FROM t0, rt0, v0 GROUP BY rt0.c4, t0.c0;
SELECT rt0.c4 FROM rt0, v0, vt0, t0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0, v0, vt0, t0 GROUP BY rt0.c4 HAVING (((json_insert(GROUP_CONCAT(rt0.c3), GROUP_CONCAT(COUNT(SUM(MAX(v0.c2)))), COUNT(*))))=((((COUNT(SUM(v0.c1))) NOT NULL)))) UNION ALL SELECT rt0.c4 FROM rt0, v0, vt0, t0 GROUP BY rt0.c4 HAVING (NOT ((((json_insert(GROUP_CONCAT(rt0.c3), GROUP_CONCAT(COUNT(SUM(MAX(v0.c2)))), COUNT(*))))==((((COUNT(SUM(v0.c1))) NOT NULL)))))) UNION ALL SELECT ALL rt0.c4 FROM rt0, v0, vt0, t0 GROUP BY rt0.c4 HAVING (((((json_insert(GROUP_CONCAT(rt0.c3), GROUP_CONCAT(COUNT(SUM(MAX(v0.c2)))), COUNT(*))))==((((COUNT(SUM(v0.c1))) NOT NULL))))) ISNULL);
SELECT ALL * FROM v0, rt0, vt0 CROSS JOIN t0 ON (((vt0.c0)) BETWEEN ((CASE t0.c0  WHEN rt0.c2 THEN vt0.c0 END)) AND ((((t0.c0)IS(rt0.c3)))));
SELECT ALL * FROM v0, rt0, vt0 CROSS JOIN t0 ON (((vt0.c0)) BETWEEN ((CASE t0.c0  WHEN rt0.c2 THEN vt0.c0 END)) AND ((((t0.c0)IS(rt0.c3))))) WHERE ((((rt0.c2 IN (0.6332075618049776, rt0.c0))) ISNULL)) UNION ALL SELECT * FROM v0, rt0, vt0 CROSS JOIN t0 ON (((vt0.c0)) BETWEEN ((CASE t0.c0  WHEN rt0.c2 THEN vt0.c0 END)) AND ((((t0.c0)IS(rt0.c3))))) WHERE ((NOT ((((rt0.c2 IN (0.6332075618049776, rt0.c0))) ISNULL)))) UNION ALL SELECT * FROM v0, rt0, vt0 NOT INDEXED CROSS JOIN t0 ON (((vt0.c0)) BETWEEN ((CASE t0.c0  WHEN rt0.c2 THEN vt0.c0 END)) AND ((((t0.c0)IS(rt0.c3))))) WHERE ((((((rt0.c2 IN (0.6332075618049776, rt0.c0))) ISNULL)) ISNULL));
SELECT ALL * FROM v0, rt0, vt0 CROSS JOIN t0 ON (((vt0.c0)) BETWEEN ((CASE t0.c0  WHEN rt0.c2 THEN vt0.c0 END)) AND ((((t0.c0)IS(rt0.c3)))));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t0, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t0, rt0 WHERE (NULL) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t0, rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t0, rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t0, rt0;
SELECT ALL rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c3;
SELECT ALL rt0.c4, rt0.c3 FROM rt0 WHERE (((CAST(rt0.c2 AS INTEGER)) ISNULL)) GROUP BY rt0.c4, rt0.c3 UNION SELECT rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS INTEGER)) ISNULL)))) GROUP BY rt0.c4, rt0.c3 UNION SELECT rt0.c4, rt0.c3 FROM rt0 WHERE (((((CAST(rt0.c2 AS INTEGER)) ISNULL)) ISNULL)) GROUP BY rt0.c4, rt0.c3;
SELECT ALL rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c3;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING MIN(COUNT(*) COLLATE BINARY) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (NOT (MIN(COUNT(*) COLLATE BINARY))) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING ((MIN(COUNT(*) COLLATE BINARY)) ISNULL);
SELECT ALL v0.c1, rt0.c1, rt0.c3 FROM rt0, v0;
SELECT ALL v0.c1, rt0.c1, rt0.c3 FROM rt0, v0 WHERE (CAST(CASE WHEN v0.c1 THEN v0.c1 END AS REAL)) UNION ALL SELECT ALL v0.c1, rt0.c1, rt0.c3 FROM rt0, v0 WHERE ((NOT (CAST(CASE WHEN v0.c1 THEN v0.c1 END AS REAL)))) UNION ALL SELECT ALL v0.c1, rt0.c1, rt0.c3 FROM rt0, v0 WHERE (((CAST(CASE WHEN v0.c1 THEN v0.c1 END AS REAL)) ISNULL));
SELECT ALL v0.c1, rt0.c1, rt0.c3 FROM rt0, v0;
SELECT DISTINCT * FROM vt0, v0, t0, rt0;
SELECT DISTINCT * FROM vt0, v0, t0, rt0 WHERE (CASE CASE rt0.c4  WHEN 723411519 THEN rt0.c2 END  WHEN ((v0.c0)>(rt0.c2)) THEN rt0.c4 COLLATE BINARY ELSE ((rt0.c4) IS FALSE) END) UNION SELECT DISTINCT * FROM vt0, v0, t0, rt0 WHERE ((NOT (CASE CASE rt0.c4  WHEN 723411519 THEN rt0.c2 END  WHEN ((v0.c0)>(rt0.c2)) THEN rt0.c4 COLLATE BINARY ELSE ((rt0.c4) IS FALSE) END))) UNION SELECT DISTINCT * FROM vt0, v0, t0, rt0 WHERE (((CASE CASE rt0.c4  WHEN 723411519 THEN rt0.c2 END  WHEN ((v0.c0)>(rt0.c2)) THEN rt0.c4 COLLATE BINARY ELSE ((rt0.c4) IS FALSE) END) ISNULL));
SELECT DISTINCT * FROM vt0, v0, t0, rt0;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT v0.c1 FROM v0 WHERE (((v0.c1 COLLATE NOCASE) IS FALSE)) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0 WHERE ((NOT (((v0.c1 COLLATE NOCASE) IS FALSE)))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0 WHERE (((((v0.c1 COLLATE NOCASE) IS FALSE)) ISNULL)) GROUP BY v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT v0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0, t0.c0 FROM t0, vt0, v0, rt0 GROUP BY v0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0, t0.c0;
SELECT v0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0, t0.c0 FROM t0, vt0, v0, rt0 GROUP BY v0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0, t0.c0 HAVING CASE TOTAL(rt0.c3)  WHEN CAST(v0.c2 AS REAL) THEN LIKELY(COUNT(*)) END UNION ALL SELECT v0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0, t0.c0 FROM t0, vt0, v0, rt0 GROUP BY v0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0, t0.c0 HAVING (NOT (CASE TOTAL(rt0.c3)  WHEN CAST(v0.c2 AS REAL) THEN LIKELY(COUNT(*)) END)) UNION ALL SELECT v0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0, t0.c0 FROM t0, vt0, v0, rt0 GROUP BY v0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0, t0.c0 HAVING ((CASE TOTAL(rt0.c3)  WHEN CAST(v0.c2 AS REAL) THEN LIKELY(COUNT(*)) END) ISNULL);
SELECT v0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0, t0.c0 FROM t0, vt0, v0, rt0 GROUP BY v0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0, t0.c0;
SELECT v0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0, t0.c0 FROM t0, vt0, v0, rt0 GROUP BY v0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0, t0.c0 HAVING CASE TOTAL(rt0.c3)  WHEN CAST(v0.c2 AS REAL) THEN LIKELY(COUNT(*)) END UNION ALL SELECT v0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0, t0.c0 FROM t0, vt0, v0, rt0 GROUP BY v0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0, t0.c0 HAVING (NOT (CASE TOTAL(rt0.c3)  WHEN CAST(v0.c2 AS REAL) THEN LIKELY(COUNT(*)) END)) UNION ALL SELECT v0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0, t0.c0 FROM t0, vt0, v0, rt0 GROUP BY v0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0, t0.c0 HAVING ((CASE TOTAL(rt0.c3)  WHEN CAST(v0.c2 AS REAL) THEN LIKELY(COUNT(*)) END) ISNULL);
SELECT v0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0, t0.c0 FROM t0, vt0, v0, rt0 GROUP BY v0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0, t0.c0;
SELECT * FROM vt0 CROSS JOIN v0 ON LIKE(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, ((((((((((((v0.c0)AND(v0.c1)))AND(vt0.c0)))OR(v0.c2)))AND(v0.c1)))OR(v0.c0)))AND(vt0.c0)), '팔');
SELECT * FROM vt0 CROSS JOIN v0 ON LIKE(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, ((((((((((((v0.c0)AND(v0.c1)))AND(vt0.c0)))OR(v0.c2)))AND(v0.c1)))OR(v0.c0)))AND(vt0.c0)), '팔') WHERE (7.23095E7) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN v0 ON LIKE(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, ((((((((((((v0.c0)AND(v0.c1)))AND(vt0.c0)))OR(v0.c2)))AND(v0.c1)))OR(v0.c0)))AND(vt0.c0)), '팔') WHERE ((NOT (7.23095E7))) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN v0 ON LIKE(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, ((((((((((((v0.c0)AND(v0.c1)))AND(vt0.c0)))OR(v0.c2)))AND(v0.c1)))OR(v0.c0)))AND(vt0.c0)), '팔') WHERE (((7.23095E7) ISNULL));
SELECT * FROM vt0 CROSS JOIN v0 ON LIKE(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, ((((((((((((v0.c0)AND(v0.c1)))AND(vt0.c0)))OR(v0.c2)))AND(v0.c1)))OR(v0.c0)))AND(vt0.c0)), '팔');
SELECT DISTINCT v0.c0, v0.c2, v0.c1 FROM v0;
SELECT DISTINCT v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((((NOT (v0.c0))) BETWEEN (((v0.c0)<=(v0.c1))) AND ((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2)))))) UNION SELECT DISTINCT v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((NOT ((((NOT (v0.c0))) BETWEEN (((v0.c0)<=(v0.c1))) AND ((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2)))))))) UNION SELECT DISTINCT v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((((((NOT (v0.c0))) BETWEEN (((v0.c0)<=(v0.c1))) AND ((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2)))))) ISNULL));
SELECT DISTINCT v0.c0, v0.c2, v0.c1 FROM v0;
SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))>>(NULLIF(vt0.c0, vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))>>(NULLIF(vt0.c0, vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))>>(NULLIF(vt0.c0, vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT ALL rt0.c0, rt0.c4, rt0.c3, t0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3, t0.c0, rt0.c2;
SELECT rt0.c0, rt0.c4, rt0.c3, t0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3, t0.c0, rt0.c2 HAVING ((((COUNT(TOTAL(COUNT(COUNT(GROUP_CONCAT(GROUP_CONCAT(rt0.c1))))))))>((TOTAL(AVG(0.31716058073347453))))) IN (TOTAL_CHANGES())) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c3, t0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3, t0.c0, rt0.c2 HAVING (NOT (((((COUNT(TOTAL(COUNT(COUNT(GROUP_CONCAT(GROUP_CONCAT(rt0.c1))))))))>((TOTAL(AVG(0.31716058073347453))))) IN (TOTAL_CHANGES())))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c3, t0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3, t0.c0, rt0.c2 HAVING ((((((COUNT(TOTAL(COUNT(COUNT(GROUP_CONCAT(GROUP_CONCAT(rt0.c1))))))))>((TOTAL(AVG(0.31716058073347453))))) IN (TOTAL_CHANGES()))) ISNULL);
SELECT SUM(((((vt0.c0)<=(rt0.c3)))<=(rt0.c0))) FROM rt0, v0, vt0, t0;
SELECT v0.c2 FROM v0;
SELECT v0.c2 FROM v0 WHERE (((((((((((v0.c2)|(v0.c2)))AND((+ (NULL)))))OR(((v0.c0)<<(v0.c1)))))AND(CAST(v0.c2 AS REAL))))AND(json_remove(v0.c0, v0.c0, v0.c0, v0.c2)))) UNION ALL SELECT v0.c2 FROM v0 WHERE ((NOT (((((((((((v0.c2)|(v0.c2)))AND((+ (NULL)))))OR(((v0.c0)<<(v0.c1)))))AND(CAST(v0.c2 AS REAL))))AND(json_remove(v0.c0, v0.c0, v0.c0, v0.c2)))))) UNION ALL SELECT ALL v0.c2 FROM v0 WHERE (((((((((((((v0.c2)|(v0.c2)))AND((+ (NULL)))))OR(((v0.c0)<<(v0.c1)))))AND(CAST(v0.c2 AS REAL))))AND(json_remove(v0.c0, v0.c0, v0.c0, v0.c2)))) ISNULL));
SELECT DISTINCT t0.c0, v0.c2, v0.c0 FROM vt0 CROSS JOIN v0 ON v0.c2 RIGHT OUTER JOIN t0 ON (('') IS TRUE);
SELECT DISTINCT t0.c0, v0.c2, v0.c0 FROM vt0 CROSS JOIN v0 ON v0.c2 RIGHT OUTER JOIN t0 ON (('') IS TRUE) WHERE (vt0.c0) UNION SELECT DISTINCT t0.c0, v0.c2, v0.c0 FROM vt0 CROSS JOIN v0 ON v0.c2 RIGHT OUTER JOIN t0 ON (('') IS TRUE) WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT t0.c0, v0.c2, v0.c0 FROM vt0 CROSS JOIN v0 ON v0.c2 RIGHT OUTER JOIN t0 ON (('') IS TRUE) WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT t0.c0, v0.c2, v0.c0 FROM vt0 CROSS JOIN v0 ON v0.c2 RIGHT OUTER JOIN t0 ON (('') IS TRUE);
SELECT ALL v0.c1 FROM rt0, v0, t0 GROUP BY v0.c1;
SELECT v0.c1 FROM rt0, v0, t0 WHERE (v0.c0) GROUP BY v0.c1 UNION SELECT ALL v0.c1 FROM rt0, v0, t0 WHERE ((NOT (v0.c0))) GROUP BY v0.c1 UNION SELECT ALL v0.c1 FROM rt0, v0, t0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c1;
SELECT ALL v0.c1 FROM rt0, v0, t0 GROUP BY v0.c1;
SELECT ALL rt0.c4, v0.c0, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, vt0.c0, v0.c2, rt0.c2 FROM vt0, rt0, t0, v0 GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, vt0.c0, v0.c2, rt0.c2;
SELECT rt0.c4, v0.c0, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, vt0.c0, v0.c2, rt0.c2 FROM vt0, rt0, t0, v0 GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, vt0.c0, v0.c2, rt0.c2 HAVING (~ (COUNT('[]'))) UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, vt0.c0, v0.c2, rt0.c2 FROM vt0, rt0, t0, v0 GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, vt0.c0, v0.c2, rt0.c2 HAVING (NOT ((~ (COUNT('[]'))))) UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, vt0.c0, v0.c2, rt0.c2 FROM vt0, rt0, t0, v0 GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, vt0.c0, v0.c2, rt0.c2 HAVING (((~ (COUNT('[]')))) ISNULL);
SELECT ALL rt0.c4, v0.c0, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, vt0.c0, v0.c2, rt0.c2 FROM vt0, rt0, t0, v0 GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, vt0.c0, v0.c2, rt0.c2;
SELECT rt0.c4, v0.c0, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, vt0.c0, v0.c2, rt0.c2 FROM vt0, rt0, t0, v0 GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, vt0.c0, v0.c2, rt0.c2 HAVING (~ (COUNT('[]'))) UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, vt0.c0, v0.c2, rt0.c2 FROM vt0, rt0, t0, v0 GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, vt0.c0, v0.c2, rt0.c2 HAVING (NOT ((~ (COUNT('[]'))))) UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, vt0.c0, v0.c2, rt0.c2 FROM vt0, rt0, t0, v0 GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, vt0.c0, v0.c2, rt0.c2 HAVING (((~ (COUNT('[]')))) ISNULL);
SELECT ALL rt0.c4, v0.c0, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, vt0.c0, v0.c2, rt0.c2 FROM vt0, rt0, t0, v0 GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, vt0.c0, v0.c2, rt0.c2;
SELECT ALL * FROM t0, vt0 CROSS JOIN v0 ON (((v0.c0 COLLATE RTRIM))<=((NULL COLLATE BINARY)));
SELECT * FROM t0, vt0 CROSS JOIN v0 ON (((v0.c0 COLLATE RTRIM))<=((NULL COLLATE BINARY))) WHERE (((v0.c1)==(v0.c2)) COLLATE BINARY) UNION ALL SELECT ALL * FROM t0, vt0 CROSS JOIN v0 ON (((v0.c0 COLLATE RTRIM))<=((NULL COLLATE BINARY))) WHERE ((NOT (((v0.c1)=(v0.c2)) COLLATE BINARY))) UNION ALL SELECT * FROM t0 NOT INDEXED, vt0 CROSS JOIN v0 ON (((v0.c0 COLLATE RTRIM))<=((NULL COLLATE BINARY))) WHERE (((((v0.c1)=(v0.c2)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM t0, vt0 CROSS JOIN v0 ON (((v0.c0 COLLATE RTRIM))<=((NULL COLLATE BINARY)));
SELECT DISTINCT v0.c1, v0.c2 FROM v0, t0, vt0;
SELECT DISTINCT v0.c1, v0.c2 FROM v0, t0, vt0 NOT INDEXED WHERE ((((('O\r?vɅ5lL{') ISNULL)) NOTNULL)) UNION SELECT DISTINCT v0.c1, v0.c2 FROM v0, t0, vt0 NOT INDEXED WHERE ((NOT ((((('O\r?vɅ5lL{') ISNULL)) NOTNULL)))) UNION SELECT DISTINCT v0.c1, v0.c2 FROM v0, t0, vt0 WHERE ((((((('O\r?vɅ5lL{') ISNULL)) NOTNULL)) ISNULL));
SELECT DISTINCT v0.c1, v0.c2 FROM v0, t0, vt0;
SELECT ALL rt0.c0 FROM v0, vt0 RIGHT OUTER JOIN rt0 ON TIME(rt0.c0, v0.c2, v0.c1, x'07c2', v0.c2) COLLATE BINARY FULL OUTER JOIN t0 ON v0.c1 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, vt0 RIGHT OUTER JOIN rt0 ON TIME(rt0.c0, v0.c2, v0.c1, x'07c2', v0.c2) COLLATE BINARY FULL OUTER JOIN t0 ON v0.c1 WHERE ((+ (t0.c0 COLLATE RTRIM))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM v0, vt0 RIGHT OUTER JOIN rt0 ON TIME(rt0.c0, v0.c2, v0.c1, x'07c2', v0.c2) COLLATE BINARY FULL OUTER JOIN t0 ON v0.c1 WHERE ((NOT ((+ (t0.c0 COLLATE RTRIM))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM v0, vt0 RIGHT OUTER JOIN rt0 ON TIME(rt0.c0, v0.c2, v0.c1, x'07c2', v0.c2) COLLATE BINARY FULL OUTER JOIN t0 ON v0.c1 WHERE ((((+ (t0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, vt0 RIGHT OUTER JOIN rt0 ON TIME(rt0.c0, v0.c2, v0.c1, x'07c2', v0.c2) COLLATE BINARY FULL OUTER JOIN t0 ON v0.c1 GROUP BY rt0.c0;
SELECT rt0.c4, rt0.c3, v0.c1, t0.c0, v0.c0, rt0.c0, rt0.c1 FROM vt0, t0, rt0, v0 GROUP BY rt0.c4, rt0.c3, v0.c1, t0.c0, v0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c3, v0.c1, t0.c0, v0.c0, rt0.c0, rt0.c1 FROM vt0, t0, rt0, v0 GROUP BY rt0.c4, rt0.c3, v0.c1, t0.c0, v0.c0, rt0.c0, rt0.c1 HAVING GROUP_CONCAT(v0.c1 COLLATE RTRIM) UNION ALL SELECT rt0.c4, rt0.c3, v0.c1, t0.c0, v0.c0, rt0.c0, rt0.c1 FROM vt0, t0, rt0, v0 GROUP BY rt0.c4, rt0.c3, v0.c1, t0.c0, v0.c0, rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(v0.c1 COLLATE RTRIM))) UNION ALL SELECT rt0.c4, rt0.c3, v0.c1, t0.c0, v0.c0, rt0.c0, rt0.c1 FROM vt0, t0, rt0, v0 GROUP BY rt0.c4, rt0.c3, v0.c1, t0.c0, v0.c0, rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(v0.c1 COLLATE RTRIM)) ISNULL);
SELECT rt0.c4, rt0.c3, v0.c1, t0.c0, v0.c0, rt0.c0, rt0.c1 FROM vt0, t0, rt0, v0 GROUP BY rt0.c4, rt0.c3, v0.c1, t0.c0, v0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c3, v0.c1, t0.c0, v0.c0, rt0.c0, rt0.c1 FROM vt0, t0, rt0, v0 GROUP BY rt0.c4, rt0.c3, v0.c1, t0.c0, v0.c0, rt0.c0, rt0.c1 HAVING GROUP_CONCAT(v0.c1 COLLATE RTRIM) UNION ALL SELECT rt0.c4, rt0.c3, v0.c1, t0.c0, v0.c0, rt0.c0, rt0.c1 FROM vt0, t0, rt0, v0 GROUP BY rt0.c4, rt0.c3, v0.c1, t0.c0, v0.c0, rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(v0.c1 COLLATE RTRIM))) UNION ALL SELECT rt0.c4, rt0.c3, v0.c1, t0.c0, v0.c0, rt0.c0, rt0.c1 FROM vt0, t0, rt0, v0 GROUP BY rt0.c4, rt0.c3, v0.c1, t0.c0, v0.c0, rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(v0.c1 COLLATE RTRIM)) ISNULL);
SELECT rt0.c4, rt0.c3, v0.c1, t0.c0, v0.c0, rt0.c0, rt0.c1 FROM vt0, t0, rt0, v0 GROUP BY rt0.c4, rt0.c3, v0.c1, t0.c0, v0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0, vt0;
SELECT rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0, vt0 WHERE (ABS(rt0.c4)) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0, vt0 WHERE ((NOT (ABS(rt0.c4)))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0, vt0 WHERE (((ABS(rt0.c4)) ISNULL));
SELECT ALL rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST((((-296634074))!=((vt0.c0))) AS REAL)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST((((-296634074))<>((vt0.c0))) AS REAL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST((((-296634074))!=((vt0.c0))) AS REAL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c3, rt0.c1, t0.c0, v0.c1 FROM t0 INNER JOIN rt0 ON (- (((v0.c2)/(rt0.c2)))) LEFT OUTER JOIN v0 ON (+ (((((v0.c0)AND('0.6378366225671154')))OR(v0.c0)))) GROUP BY rt0.c3, rt0.c1, t0.c0, v0.c1;
SELECT rt0.c3, rt0.c1, t0.c0, v0.c1 FROM t0 INNER JOIN rt0 ON (- (((v0.c2)/(rt0.c2)))) LEFT OUTER JOIN v0 ON (+ (((((v0.c0)AND('0.6378366225671154')))OR(v0.c0)))) WHERE (((CASE WHEN v0.c0 THEN rt0.c0 WHEN v0.c1 THEN v0.c1 WHEN t0.c0 THEN NULL ELSE rt0.c2 END)+(rt0.c4 COLLATE RTRIM))) GROUP BY rt0.c3, rt0.c1, t0.c0, v0.c1 UNION SELECT rt0.c3, rt0.c1, t0.c0, v0.c1 FROM t0 INNER JOIN rt0 ON (- (((v0.c2)/(rt0.c2)))) LEFT OUTER JOIN v0 ON (+ (((((v0.c0)AND('0.6378366225671154')))OR(v0.c0)))) WHERE ((NOT (((CASE WHEN v0.c0 THEN rt0.c0 WHEN v0.c1 THEN v0.c1 WHEN t0.c0 THEN NULL ELSE rt0.c2 END)+(rt0.c4 COLLATE RTRIM))))) GROUP BY rt0.c3, rt0.c1, t0.c0, v0.c1 UNION SELECT rt0.c3, rt0.c1, t0.c0, v0.c1 FROM t0 INNER JOIN rt0 ON (- (((v0.c2)/(rt0.c2)))) LEFT OUTER JOIN v0 ON (+ (((((v0.c0)AND('0.6378366225671154')))OR(v0.c0)))) WHERE (((((CASE WHEN v0.c0 THEN rt0.c0 WHEN v0.c1 THEN v0.c1 WHEN t0.c0 THEN NULL ELSE rt0.c2 END)+(rt0.c4 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c3, rt0.c1, t0.c0, v0.c1;
SELECT rt0.c3, rt0.c1, t0.c0, v0.c1 FROM t0 INNER JOIN rt0 ON (- (((v0.c2)/(rt0.c2)))) LEFT OUTER JOIN v0 ON (+ (((((v0.c0)AND('0.6378366225671154')))OR(v0.c0)))) GROUP BY rt0.c3, rt0.c1, t0.c0, v0.c1;
SELECT vt0.c0, v0.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c2, t0.c0, v0.c0, rt0.c4, v0.c2 FROM v0, rt0, vt0, t0 GROUP BY vt0.c0, v0.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c2, t0.c0, v0.c0, rt0.c4, v0.c2;
SELECT vt0.c0, v0.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c2, t0.c0, v0.c0, rt0.c4, v0.c2 FROM v0, rt0, vt0, t0 NOT INDEXED GROUP BY vt0.c0, v0.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c2, t0.c0, v0.c0, rt0.c4, v0.c2 HAVING SUM(((COUNT(TOTAL(vt0.c0)))*(rt0.c4))) UNION ALL SELECT ALL vt0.c0, v0.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c2, t0.c0, v0.c0, rt0.c4, v0.c2 FROM v0, rt0, vt0, t0 GROUP BY vt0.c0, v0.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c2, t0.c0, v0.c0, rt0.c4, v0.c2 HAVING (NOT (SUM(((COUNT(TOTAL(vt0.c0)))*(rt0.c4))))) UNION ALL SELECT ALL vt0.c0, v0.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c2, t0.c0, v0.c0, rt0.c4, v0.c2 FROM v0, rt0, vt0, t0 GROUP BY vt0.c0, v0.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c2, t0.c0, v0.c0, rt0.c4, v0.c2 HAVING ((SUM(((COUNT(TOTAL(vt0.c0)))*(rt0.c4)))) ISNULL);
SELECT * FROM v0, vt0, t0 NATURAL JOIN rt0;
SELECT * FROM v0, vt0, t0 NATURAL JOIN rt0 WHERE (((((vt0.c0)+(t0.c0)))<>(rt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM v0, vt0, t0 NATURAL JOIN rt0 WHERE ((NOT (((((vt0.c0)+(t0.c0)))<>(rt0.c0 COLLATE NOCASE))))) UNION ALL SELECT * FROM v0, vt0, t0 NATURAL JOIN rt0 WHERE (((((((vt0.c0)+(t0.c0)))!=(rt0.c0 COLLATE NOCASE))) ISNULL));
SELECT * FROM v0, vt0, t0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (NULLIF((- (vt0.c0)), (NOT (vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (NULLIF((- (vt0.c0)), (NOT (vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((NULLIF((- (vt0.c0)), (NOT (vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE (CASE ((v0.c2)OR(v0.c1))  WHEN '578846803' THEN ((v0.c2)/(v0.c2)) ELSE (((v0.c1))<>(('0.3313788608724034'))) END) GROUP BY v0.c0, v0.c2, v0.c1 UNION SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((NOT (CASE ((v0.c2)OR(v0.c1))  WHEN '578846803' THEN ((v0.c2)/(v0.c2)) ELSE (((v0.c1))<>(('0.3313788608724034'))) END))) GROUP BY v0.c0, v0.c2, v0.c1 UNION SELECT v0.c0, v0.c2, v0.c1 FROM v0 WHERE (((CASE ((v0.c2)OR(v0.c1))  WHEN '578846803' THEN ((v0.c2)/(v0.c2)) ELSE (((v0.c1))!=(('0.3313788608724034'))) END) ISNULL)) GROUP BY v0.c0, v0.c2, v0.c1;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT vt0.c0, v0.c1, v0.c2 FROM v0, vt0, t0 GROUP BY vt0.c0, v0.c1, v0.c2;
SELECT ALL vt0.c0, v0.c1, v0.c2 FROM v0, vt0, t0 GROUP BY vt0.c0, v0.c1, v0.c2 HAVING GROUP_CONCAT(MIN(AVG(v0.c1))) UNION ALL SELECT vt0.c0, v0.c1, v0.c2 FROM v0, vt0, t0 GROUP BY vt0.c0, v0.c1, v0.c2 HAVING (NOT (GROUP_CONCAT(MIN(AVG(v0.c1))))) UNION ALL SELECT vt0.c0, v0.c1, v0.c2 FROM v0, vt0, t0 NOT INDEXED GROUP BY vt0.c0, v0.c1, v0.c2 HAVING ((GROUP_CONCAT(MIN(AVG(v0.c1)))) ISNULL);
SELECT ALL MIN('Ar]g0w') FROM t0, rt0 ORDER BY NULL ASC;
SELECT ALL rt0.c2, rt0.c4, rt0.c3, v0.c1 FROM v0, vt0, t0, rt0;
SELECT ALL rt0.c2, rt0.c4, rt0.c3, v0.c1 FROM v0, vt0, t0, rt0 WHERE (CASE WHEN ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4)) THEN ((v0.c2)IS NOT(rt0.c3)) ELSE (v0.c1 IN ()) END) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c3, v0.c1 FROM v0, vt0, t0, rt0 WHERE ((NOT (CASE WHEN ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4)) THEN ((v0.c2)IS NOT(rt0.c3)) ELSE (v0.c1 IN ()) END))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c3, v0.c1 FROM v0, vt0, t0, rt0 WHERE (((CASE WHEN ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4)) THEN ((v0.c2)IS NOT(rt0.c3)) ELSE (v0.c1 IN ()) END) ISNULL));
SELECT ALL rt0.c2, rt0.c4, rt0.c3, v0.c1 FROM v0, vt0, t0, rt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0 COLLATE RTRIM) IS TRUE)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((t0.c0 COLLATE RTRIM) IS TRUE)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0 COLLATE RTRIM) IS TRUE)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 WHERE ((NOT ('-296634074'))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE ((NOT ((NOT ('-296634074'))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE ((((NOT ('-296634074'))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c2, v0.c0, t0.c0 FROM t0, v0, vt0 GROUP BY v0.c2, v0.c0, t0.c0;
SELECT ALL v0.c2, v0.c0, t0.c0 FROM t0, v0, vt0 GROUP BY v0.c2, v0.c0, t0.c0 HAVING COUNT(CAST(vt0.c0 AS INTEGER)) UNION ALL SELECT v0.c2, v0.c0, t0.c0 FROM t0, v0, vt0 GROUP BY v0.c2, v0.c0, t0.c0 HAVING (NOT (COUNT(CAST(vt0.c0 AS INTEGER)))) UNION ALL SELECT v0.c2, v0.c0, t0.c0 FROM t0, v0, vt0 GROUP BY v0.c2, v0.c0, t0.c0 HAVING ((COUNT(CAST(vt0.c0 AS INTEGER))) ISNULL);
SELECT v0.c2, v0.c0, t0.c0 FROM t0, v0, vt0 GROUP BY v0.c2, v0.c0, t0.c0;
SELECT ALL v0.c2, v0.c0, t0.c0 FROM t0, v0, vt0 GROUP BY v0.c2, v0.c0, t0.c0 HAVING COUNT(CAST(vt0.c0 AS INTEGER)) UNION ALL SELECT v0.c2, v0.c0, t0.c0 FROM t0, v0, vt0 GROUP BY v0.c2, v0.c0, t0.c0 HAVING (NOT (COUNT(CAST(vt0.c0 AS INTEGER)))) UNION ALL SELECT v0.c2, v0.c0, t0.c0 FROM t0, v0, vt0 GROUP BY v0.c2, v0.c0, t0.c0 HAVING ((COUNT(CAST(vt0.c0 AS INTEGER))) ISNULL);
SELECT v0.c2, v0.c0, t0.c0 FROM t0, v0, vt0 GROUP BY v0.c2, v0.c0, t0.c0;
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (((((((x'cb96')OR(rt0.c0)))OR(rt0.c0)))==(-1e500))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((((((x'cb96')OR(rt0.c0)))OR(rt0.c0)))=(-1e500))))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((((((((x'cb96')OR(rt0.c0)))OR(rt0.c0)))=(-1e500))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (NOT (((((v0.c1)OR(rt0.c2)))AND(rt0.c1)))) CROSS JOIN vt0 ON (+ ((v0.c1 IN ()))) CROSS JOIN t0 ON ((((v0.c2)IS(rt0.c1))) NOT BETWEEN (((v0.c1) NOT BETWEEN (v0.c2) AND (t0.c0))) AND (((rt0.c1)>=(rt0.c4))));
SELECT DISTINCT vt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (NOT (((((v0.c1)OR(rt0.c2)))AND(rt0.c1)))) CROSS JOIN vt0 ON (+ ((v0.c1 IN ()))) CROSS JOIN t0 ON ((((v0.c2)IS(rt0.c1))) NOT BETWEEN (((v0.c1) NOT BETWEEN (v0.c2) AND (t0.c0))) AND (((rt0.c1)>=(rt0.c4)))) WHERE (CASE rt0.c0 COLLATE NOCASE  WHEN rt0.c1 THEN (((rt0.c1))>((v0.c1))) WHEN NULL THEN t0.c0 WHEN CAST(vt0.c0 AS BLOB) THEN CASE WHEN rt0.c0 THEN rt0.c3 ELSE v0.c0 END ELSE vt0.c0 COLLATE NOCASE END) UNION SELECT DISTINCT vt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (NOT (((((v0.c1)OR(rt0.c2)))AND(rt0.c1)))) CROSS JOIN vt0 ON (+ ((v0.c1 IN ()))) CROSS JOIN t0 ON ((((v0.c2)IS(rt0.c1))) NOT BETWEEN (((v0.c1) NOT BETWEEN (v0.c2) AND (t0.c0))) AND (((rt0.c1)>=(rt0.c4)))) WHERE ((NOT (CASE rt0.c0 COLLATE NOCASE  WHEN rt0.c1 THEN (((rt0.c1))>((v0.c1))) WHEN NULL THEN t0.c0 WHEN CAST(vt0.c0 AS BLOB) THEN CASE WHEN rt0.c0 THEN rt0.c3 ELSE v0.c0 END ELSE vt0.c0 COLLATE NOCASE END))) UNION SELECT DISTINCT vt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (NOT (((((v0.c1)OR(rt0.c2)))AND(rt0.c1)))) CROSS JOIN vt0 ON (+ ((v0.c1 IN ()))) CROSS JOIN t0 ON ((((v0.c2)IS(rt0.c1))) NOT BETWEEN (((v0.c1) NOT BETWEEN (v0.c2) AND (t0.c0))) AND (((rt0.c1)>=(rt0.c4)))) WHERE (((CASE rt0.c0 COLLATE NOCASE  WHEN rt0.c1 THEN (((rt0.c1))>((v0.c1))) WHEN NULL THEN t0.c0 WHEN CAST(vt0.c0 AS BLOB) THEN CASE WHEN rt0.c0 THEN rt0.c3 ELSE v0.c0 END ELSE vt0.c0 COLLATE NOCASE END) ISNULL));
SELECT DISTINCT vt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (NOT (((((v0.c1)OR(rt0.c2)))AND(rt0.c1)))) CROSS JOIN vt0 ON (+ ((v0.c1 IN ()))) CROSS JOIN t0 ON ((((v0.c2)IS(rt0.c1))) NOT BETWEEN (((v0.c1) NOT BETWEEN (v0.c2) AND (t0.c0))) AND (((rt0.c1)>=(rt0.c4))));
SELECT v0.c2 FROM v0, vt0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0, vt0 WHERE ('741006194') GROUP BY v0.c2 UNION SELECT v0.c2 FROM v0, vt0 WHERE ((NOT ('741006194'))) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM v0, vt0 WHERE ((('741006194') ISNULL)) GROUP BY v0.c2;
SELECT v0.c2 FROM v0, vt0 GROUP BY v0.c2;
SELECT rt0.c4, v0.c0, rt0.c3 FROM rt0, t0, v0, vt0 GROUP BY rt0.c4, v0.c0, rt0.c3;
SELECT rt0.c4, v0.c0, rt0.c3 FROM rt0, t0, v0, vt0 GROUP BY rt0.c4, v0.c0, rt0.c3 HAVING MIN(MAX(MIN(AVG(AVG(AVG(AVG(rt0.c0))))))) UNION ALL SELECT rt0.c4, v0.c0, rt0.c3 FROM rt0, t0, v0, vt0 GROUP BY rt0.c4, v0.c0, rt0.c3 HAVING (NOT (MIN(MAX(MIN(AVG(AVG(AVG(AVG(rt0.c0))))))))) UNION ALL SELECT rt0.c4, v0.c0, rt0.c3 FROM rt0, t0, v0, vt0 GROUP BY rt0.c4, v0.c0, rt0.c3 HAVING ((MIN(MAX(MIN(AVG(AVG(AVG(AVG(rt0.c0)))))))) ISNULL);
SELECT ALL SUM(((((((((((((2045945504)AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c4)))OR(NULL COLLATE BINARY)))OR(((rt0.c1)<(x''))))) FROM rt0 ORDER BY (~ (((rt0.c3) IS FALSE))) DESC  NULLS FIRST;
SELECT ALL rt0.c1, rt0.c0, t0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0, t0;
SELECT ALL rt0.c1, rt0.c0, t0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0, t0 WHERE (CASE WHEN ((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c1)))AND(rt0.c4)))AND(rt0.c0)) THEN json_array(rt0.c2, rt0.c0) ELSE (rt0.c2 IN (x'')) END) UNION ALL SELECT ALL rt0.c1, rt0.c0, t0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0, t0 WHERE ((NOT (CASE WHEN ((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c1)))AND(rt0.c4)))AND(rt0.c0)) THEN json_array(rt0.c2, rt0.c0) ELSE (rt0.c2 IN (x'')) END))) UNION ALL SELECT rt0.c1, rt0.c0, t0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0, t0 WHERE (((CASE WHEN ((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c1)))AND(rt0.c4)))AND(rt0.c0)) THEN json_array(rt0.c2, rt0.c0) ELSE (rt0.c2 IN (x'')) END) ISNULL));
SELECT ALL rt0.c1, rt0.c0, t0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0, t0;
SELECT DISTINCT v0.c0, rt0.c0, rt0.c4, rt0.c3, v0.c1, rt0.c1, v0.c2, t0.c0, rt0.c2, vt0.c0 FROM rt0, t0, vt0, v0;
SELECT DISTINCT v0.c0, rt0.c0, rt0.c4, rt0.c3, v0.c1, rt0.c1, v0.c2, t0.c0, rt0.c2, vt0.c0 FROM rt0, t0, vt0, v0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))/(NULL))) UNION SELECT DISTINCT v0.c0, rt0.c0, rt0.c4, rt0.c3, v0.c1, rt0.c1, v0.c2, t0.c0, rt0.c2, vt0.c0 FROM rt0, t0, vt0, v0 WHERE ((NOT ((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))/(NULL))))) UNION SELECT DISTINCT v0.c0, rt0.c0, rt0.c4, rt0.c3, v0.c1, rt0.c1, v0.c2, t0.c0, rt0.c2, vt0.c0 FROM rt0, t0, vt0, v0 WHERE ((((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))/(NULL))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c0, rt0.c4, rt0.c3, v0.c1, rt0.c1, v0.c2, t0.c0, rt0.c2, vt0.c0 FROM rt0, t0, vt0, v0;
SELECT ALL v0.c0 FROM rt0, v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM rt0, v0, vt0 WHERE (SQLITE_SOURCE_ID()) GROUP BY v0.c0 UNION SELECT v0.c0 FROM rt0, v0, vt0 WHERE ((NOT (SQLITE_SOURCE_ID()))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM rt0, v0, vt0 WHERE (((SQLITE_SOURCE_ID()) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0, v0, vt0 GROUP BY v0.c0;
SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING 'db?.B]3_~' UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING (NOT ('db?.B]3_~')) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING (('db?.B]3_~') ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING 'db?.B]3_~' UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING (NOT ('db?.B]3_~')) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING (('db?.B]3_~') ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c0, t0.c0, v0.c0, v0.c2, rt0.c4, v0.c1, rt0.c2 FROM v0, t0, rt0;
SELECT rt0.c0, t0.c0, v0.c0, v0.c2, rt0.c4, v0.c1, rt0.c2 FROM v0, t0, rt0 WHERE (CAST(CASE WHEN NULL THEN v0.c1 ELSE rt0.c1 END AS REAL)) UNION ALL SELECT rt0.c0, t0.c0, v0.c0, v0.c2, rt0.c4, v0.c1, rt0.c2 FROM v0, t0, rt0 WHERE ((NOT (CAST(CASE WHEN NULL THEN v0.c1 ELSE rt0.c1 END AS REAL)))) UNION ALL SELECT ALL rt0.c0, t0.c0, v0.c0, v0.c2, rt0.c4, v0.c1, rt0.c2 FROM v0, t0, rt0 WHERE (((CAST(CASE WHEN NULL THEN v0.c1 ELSE rt0.c1 END AS REAL)) ISNULL));
SELECT ALL rt0.c0, t0.c0, v0.c0, v0.c2, rt0.c4, v0.c1, rt0.c2 FROM v0, t0, rt0;
SELECT DISTINCT rt0.c3 FROM t0, rt0;
SELECT DISTINCT rt0.c3 FROM t0, rt0 WHERE (((rt0.c0)<<(CAST(rt0.c0 AS REAL)))) UNION SELECT DISTINCT rt0.c3 FROM t0, rt0 WHERE ((NOT (((rt0.c0)<<(CAST(rt0.c0 AS REAL)))))) UNION SELECT DISTINCT rt0.c3 FROM t0, rt0 WHERE (((((rt0.c0)<<(CAST(rt0.c0 AS REAL)))) ISNULL));
SELECT DISTINCT rt0.c3 FROM t0, rt0;
SELECT rt0.c0, rt0.c4, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, rt0.c4, t0.c0;
SELECT ALL rt0.c0, rt0.c4, t0.c0 FROM t0, rt0 WHERE ((((rt0.c0 IN ())) NOT BETWEEN ((((t0.c0, rt0.c0, rt0.c4)) BETWEEN ((rt0.c0, rt0.c2, t0.c0)) AND ((t0.c0, rt0.c0, rt0.c3)))) AND (rt0.c0 COLLATE BINARY))) GROUP BY rt0.c0, rt0.c4, t0.c0 UNION SELECT rt0.c0, rt0.c4, t0.c0 FROM t0, rt0 WHERE ((NOT ((((rt0.c0 IN ())) NOT BETWEEN ((((t0.c0, rt0.c0, rt0.c4)) BETWEEN ((rt0.c0, rt0.c2, t0.c0)) AND ((t0.c0, rt0.c0, rt0.c3)))) AND (rt0.c0 COLLATE BINARY))))) GROUP BY rt0.c0, rt0.c4, t0.c0 UNION SELECT ALL rt0.c0, rt0.c4, t0.c0 FROM t0, rt0 WHERE ((((((rt0.c0 IN ())) NOT BETWEEN ((((t0.c0, rt0.c0, rt0.c4)) BETWEEN ((rt0.c0, rt0.c2, t0.c0)) AND ((t0.c0, rt0.c0, rt0.c3)))) AND (rt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c0, rt0.c4, t0.c0;
SELECT rt0.c0, rt0.c4, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, rt0.c4, t0.c0;
SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1;
SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING GROUP_CONCAT(((AVG(v0.c0)) IS FALSE)) UNION ALL SELECT v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING (NOT (GROUP_CONCAT(((AVG(v0.c0)) IS FALSE)))) UNION ALL SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING ((GROUP_CONCAT(((AVG(v0.c0)) IS FALSE))) ISNULL);
SELECT ALL t0.c0, v0.c1, vt0.c0, v0.c2, v0.c0 FROM v0, vt0 INNER JOIN t0 ON ((v0.c1 COLLATE BINARY) NOTNULL);
SELECT t0.c0, v0.c1, vt0.c0, v0.c2, v0.c0 FROM v0, vt0 INNER JOIN t0 ON ((v0.c1 COLLATE BINARY) NOTNULL) WHERE ((- (((v0.c1)<>(v0.c1))))) UNION ALL SELECT ALL t0.c0, v0.c1, vt0.c0, v0.c2, v0.c0 FROM v0, vt0 INNER JOIN t0 ON ((v0.c1 COLLATE BINARY) NOTNULL) WHERE ((NOT ((- (((v0.c1)!=(v0.c1))))))) UNION ALL SELECT t0.c0, v0.c1, vt0.c0, v0.c2, v0.c0 FROM v0, vt0 INNER JOIN t0 ON ((v0.c1 COLLATE BINARY) NOTNULL) WHERE ((((- (((v0.c1)<>(v0.c1))))) ISNULL));
SELECT ALL t0.c0, v0.c1, vt0.c0, v0.c2, v0.c0 FROM v0, vt0 INNER JOIN t0 ON ((v0.c1 COLLATE BINARY) NOTNULL);
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON 0Xffffffffba733766 FULL OUTER JOIN rt0 ON (t0.c0 IN (rt0.c3 COLLATE NOCASE)) RIGHT OUTER JOIN t0 ON ((((t0.c0)IS NOT(rt0.c3))) NOT BETWEEN (v0.c1) AND (CAST(vt0.c0 AS INTEGER)));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0)) COLLATE NOCASE) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((NOT (vt0.c0)) COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((NOT (vt0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c2 FROM t0, v0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2;
SELECT ALL rt0.c1, rt0.c4, rt0.c2 FROM t0, v0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2 HAVING TOTAL(TOTAL(TOTAL(GROUP_CONCAT(MAX(GROUP_CONCAT(MIN(v0.c1))))))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c2 FROM t0, v0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2 HAVING (NOT (TOTAL(TOTAL(TOTAL(GROUP_CONCAT(MAX(GROUP_CONCAT(MIN(v0.c1))))))))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c2 FROM t0, v0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2 HAVING ((TOTAL(TOTAL(TOTAL(GROUP_CONCAT(MAX(GROUP_CONCAT(MIN(v0.c1)))))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)!=(vt0.c0)))AND('723411519'))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)!=(vt0.c0)))AND('723411519'))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)<>(vt0.c0)))AND('723411519'))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT v0.c1, rt0.c4, v0.c2, rt0.c1, t0.c0 FROM rt0, t0, v0;
SELECT DISTINCT v0.c1, rt0.c4, v0.c2, rt0.c1, t0.c0 FROM rt0, t0, v0 WHERE ((~ (CASE WHEN rt0.c1 THEN rt0.c1 ELSE '-1750275298' END))) UNION SELECT DISTINCT v0.c1, rt0.c4, v0.c2, rt0.c1, t0.c0 FROM rt0, t0, v0 WHERE ((NOT ((~ (CASE WHEN rt0.c1 THEN rt0.c1 ELSE '-1750275298' END))))) UNION SELECT DISTINCT v0.c1, rt0.c4, v0.c2, rt0.c1, t0.c0 FROM rt0, t0, v0 WHERE ((((~ (CASE WHEN rt0.c1 THEN rt0.c1 ELSE '-1750275298' END))) ISNULL));
SELECT DISTINCT v0.c1, rt0.c4, v0.c2, rt0.c1, t0.c0 FROM rt0, t0, v0;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE (SQLITE_SOURCE_ID()) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((NOT (SQLITE_SOURCE_ID()))) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE (((SQLITE_SOURCE_ID()) ISNULL)) GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT v0.c1, vt0.c0, rt0.c4, rt0.c2, t0.c0, v0.c0, rt0.c0 FROM rt0, vt0, v0, t0 GROUP BY v0.c1, vt0.c0, rt0.c4, rt0.c2, t0.c0, v0.c0, rt0.c0;
SELECT ALL v0.c1, vt0.c0, rt0.c4, rt0.c2, t0.c0, v0.c0, rt0.c0 FROM rt0, vt0, v0, t0 GROUP BY v0.c1, vt0.c0, rt0.c4, rt0.c2, t0.c0, v0.c0, rt0.c0 HAVING COUNT(COUNT(*)) COLLATE BINARY UNION ALL SELECT v0.c1, vt0.c0, rt0.c4, rt0.c2, t0.c0, v0.c0, rt0.c0 FROM rt0, vt0, v0, t0 GROUP BY v0.c1, vt0.c0, rt0.c4, rt0.c2, t0.c0, v0.c0, rt0.c0 HAVING (NOT (COUNT(COUNT(*)) COLLATE BINARY)) UNION ALL SELECT ALL v0.c1, vt0.c0, rt0.c4, rt0.c2, t0.c0, v0.c0, rt0.c0 FROM rt0, vt0, v0, t0 GROUP BY v0.c1, vt0.c0, rt0.c4, rt0.c2, t0.c0, v0.c0, rt0.c0 HAVING ((COUNT(COUNT(*)) COLLATE BINARY) ISNULL);
SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0, v0, vt0;
SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0, v0, vt0 WHERE ((((rt0.c4 IN (rt0.c3)))==(((rt0.c3) IS TRUE)))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0, v0, vt0 WHERE ((NOT ((((rt0.c4 IN (rt0.c3)))=(((rt0.c3) IS TRUE)))))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0, v0, vt0 WHERE ((((((rt0.c4 IN (rt0.c3)))=(((rt0.c3) IS TRUE)))) ISNULL));
SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0, v0, vt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((0.051010366703347354 IN (NULL, (((rt0.c2, rt0.c3, rt0.c3))<>((v0.c1, -1757448321, v0.c2)))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((0.051010366703347354 IN (NULL, (((rt0.c2, rt0.c3, rt0.c3))!=((v0.c1, -1757448321, v0.c2)))))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((0.051010366703347354 IN (NULL, (((rt0.c2, rt0.c3, rt0.c3))<>((v0.c1, -1757448321, v0.c2)))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM t0, v0, rt0, vt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM t0, v0, rt0, vt0 WHERE ((((((rt0.c2, v0.c1, vt0.c0, rt0.c4, rt0.c1))>=((vt0.c0, rt0.c1, rt0.c1, v0.c0, rt0.c1))))&((~ (v0.c1))))) GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4 UNION SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM t0, v0, rt0, vt0 WHERE ((NOT ((((((rt0.c2, v0.c1, vt0.c0, rt0.c4, rt0.c1))>=((vt0.c0, rt0.c1, rt0.c1, v0.c0, rt0.c1))))&((~ (v0.c1))))))) GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM t0, v0, rt0, vt0 WHERE ((((((((rt0.c2, v0.c1, vt0.c0, rt0.c4, rt0.c1))>=((vt0.c0, rt0.c1, rt0.c1, v0.c0, rt0.c1))))&((~ (v0.c1))))) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4;
SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM t0, v0, rt0, vt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, rt0.c4, rt0.c1, vt0.c0, rt0.c0, t0.c0, v0.c1 FROM rt0 LEFT OUTER JOIN t0 ON x'' FULL OUTER JOIN v0 ON ((0.8493276819176835) BETWEEN (((((v0.c2)OR(rt0.c1)))AND(rt0.c4))) AND (IFNULL(DISTINCT rt0.c0, v0.c0))) LEFT OUTER JOIN vt0 ON (((rt0.c1))=((rt0.c2))) COLLATE BINARY GROUP BY rt0.c3, rt0.c4, rt0.c1, vt0.c0, rt0.c0, t0.c0, v0.c1;
SELECT rt0.c3, rt0.c4, rt0.c1, vt0.c0, rt0.c0, t0.c0, v0.c1 FROM rt0 LEFT OUTER JOIN t0 ON x'' FULL OUTER JOIN v0 ON ((0.8493276819176835) BETWEEN (((((v0.c2)OR(rt0.c1)))AND(rt0.c4))) AND (IFNULL(DISTINCT rt0.c0, v0.c0))) LEFT OUTER JOIN vt0 ON (((rt0.c1))==((rt0.c2))) COLLATE BINARY GROUP BY rt0.c3, rt0.c4, rt0.c1, vt0.c0, rt0.c0, t0.c0, v0.c1 HAVING TOTAL(MIN(0.045856164360874696) COLLATE BINARY) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c1, vt0.c0, rt0.c0, t0.c0, v0.c1 FROM rt0 LEFT OUTER JOIN t0 ON x'' FULL OUTER JOIN v0 ON ((0.8493276819176835) BETWEEN (((((v0.c2)OR(rt0.c1)))AND(rt0.c4))) AND (IFNULL(DISTINCT rt0.c0, v0.c0))) LEFT OUTER JOIN vt0 ON (((rt0.c1))==((rt0.c2))) COLLATE BINARY GROUP BY rt0.c3, rt0.c4, rt0.c1, vt0.c0, rt0.c0, t0.c0, v0.c1 HAVING (NOT (TOTAL(MIN(0.045856164360874696) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c1, vt0.c0, rt0.c0, t0.c0, v0.c1 FROM rt0 LEFT OUTER JOIN t0 ON x'' FULL OUTER JOIN v0 ON ((0.8493276819176835) BETWEEN (((((v0.c2)OR(rt0.c1)))AND(rt0.c4))) AND (IFNULL(DISTINCT rt0.c0, v0.c0))) LEFT OUTER JOIN vt0 ON (((rt0.c1))=((rt0.c2))) COLLATE BINARY GROUP BY rt0.c3, rt0.c4, rt0.c1, vt0.c0, rt0.c0, t0.c0, v0.c1 HAVING ((TOTAL(MIN(0.045856164360874696) COLLATE BINARY)) ISNULL);
SELECT ALL rt0.c2, t0.c0, rt0.c0, rt0.c4, rt0.c3 FROM rt0, t0;
SELECT ALL rt0.c2, t0.c0, rt0.c0, rt0.c4, rt0.c3 FROM rt0, t0 WHERE (CAST((t0.c0 IN (rt0.c3, rt0.c1)) AS TEXT)) UNION ALL SELECT ALL rt0.c2, t0.c0, rt0.c0, rt0.c4, rt0.c3 FROM rt0, t0 WHERE ((NOT (CAST((t0.c0 IN (rt0.c3, rt0.c1)) AS TEXT)))) UNION ALL SELECT ALL rt0.c2, t0.c0, rt0.c0, rt0.c4, rt0.c3 FROM rt0, t0 WHERE (((CAST((t0.c0 IN (rt0.c3, rt0.c1)) AS TEXT)) ISNULL));
SELECT ALL rt0.c2, t0.c0, rt0.c0, rt0.c4, rt0.c3 FROM rt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0 COLLATE BINARY)>(((t0.c0)<>(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c0 COLLATE BINARY)>(((t0.c0)<>(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((t0.c0 COLLATE BINARY)>(((t0.c0)!=(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c2, rt0.c0, v0.c1, v0.c2, rt0.c4, vt0.c0, v0.c0, t0.c0 FROM vt0, rt0, t0, v0 GROUP BY rt0.c2, rt0.c0, v0.c1, v0.c2, rt0.c4, vt0.c0, v0.c0, t0.c0;
SELECT ALL rt0.c2, rt0.c0, v0.c1, v0.c2, rt0.c4, vt0.c0, v0.c0, t0.c0 FROM vt0, rt0, t0, v0 WHERE ((~ (((rt0.c1) IS TRUE)))) GROUP BY rt0.c2, rt0.c0, v0.c1, v0.c2, rt0.c4, vt0.c0, v0.c0, t0.c0 UNION SELECT ALL rt0.c2, rt0.c0, v0.c1, v0.c2, rt0.c4, vt0.c0, v0.c0, t0.c0 FROM vt0, rt0, t0, v0 WHERE ((NOT ((~ (((rt0.c1) IS TRUE)))))) GROUP BY rt0.c2, rt0.c0, v0.c1, v0.c2, rt0.c4, vt0.c0, v0.c0, t0.c0 UNION SELECT rt0.c2, rt0.c0, v0.c1, v0.c2, rt0.c4, vt0.c0, v0.c0, t0.c0 FROM vt0, rt0, t0, v0 WHERE ((((~ (((rt0.c1) IS TRUE)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, v0.c1, v0.c2, rt0.c4, vt0.c0, v0.c0, t0.c0;
SELECT rt0.c2, rt0.c0, v0.c1, v0.c2, rt0.c4, vt0.c0, v0.c0, t0.c0 FROM vt0, rt0, t0, v0 GROUP BY rt0.c2, rt0.c0, v0.c1, v0.c2, rt0.c4, vt0.c0, v0.c0, t0.c0;
SELECT v0.c0, v0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3, v0.c2 FROM rt0, v0 GROUP BY v0.c0, v0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3, v0.c2;
SELECT ALL v0.c0, v0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3, v0.c2 FROM rt0, v0 GROUP BY v0.c0, v0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3, v0.c2 HAVING MIN(COUNT(*)) UNION ALL SELECT v0.c0, v0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3, v0.c2 FROM rt0, v0 NOT INDEXED GROUP BY v0.c0, v0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3, v0.c2 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL v0.c0, v0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3, v0.c2 FROM rt0, v0 GROUP BY v0.c0, v0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3, v0.c2 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT * FROM rt0, v0, vt0, t0;
SELECT * FROM rt0, v0, vt0, t0 WHERE ((~ (((rt0.c1)IS(x''))))) UNION ALL SELECT * FROM rt0, v0, vt0, t0 WHERE ((NOT ((~ (((rt0.c1)IS(x''))))))) UNION ALL SELECT ALL * FROM rt0 NOT INDEXED, v0, vt0, t0 WHERE ((((~ (((rt0.c1)IS(x''))))) ISNULL));
SELECT * FROM rt0, v0, vt0, t0;
SELECT DISTINCT v0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c2, v0.c1, t0.c0 FROM t0, vt0, v0 INNER JOIN rt0 ON CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS REAL);
SELECT DISTINCT v0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c2, v0.c1, t0.c0 FROM t0, vt0, v0 INNER JOIN rt0 ON CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS REAL) WHERE (DATETIME(CASE WHEN 'db?.B]3_~' THEN rt0.c1 END, json_remove(rt0.c3, vt0.c0, rt0.c0, rt0.c4), CASE v0.c0  WHEN rt0.c3 THEN rt0.c4 ELSE t0.c0 END, ((rt0.c4)<<(v0.c2)), LTRIM(t0.c0, rt0.c1))) UNION SELECT DISTINCT v0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c2, v0.c1, t0.c0 FROM t0, vt0, v0 INNER JOIN rt0 ON CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS REAL) WHERE ((NOT (DATETIME(CASE WHEN 'db?.B]3_~' THEN rt0.c1 END, json_remove(rt0.c3, vt0.c0, rt0.c0, rt0.c4), CASE v0.c0  WHEN rt0.c3 THEN rt0.c4 ELSE t0.c0 END, ((rt0.c4)<<(v0.c2)), LTRIM(t0.c0, rt0.c1))))) UNION SELECT DISTINCT v0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c2, v0.c1, t0.c0 FROM t0, vt0, v0 INNER JOIN rt0 ON CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS REAL) WHERE (((DATETIME(CASE WHEN 'db?.B]3_~' THEN rt0.c1 END, json_remove(rt0.c3, vt0.c0, rt0.c0, rt0.c4), CASE v0.c0  WHEN rt0.c3 THEN rt0.c4 ELSE t0.c0 END, ((rt0.c4)<<(v0.c2)), LTRIM(t0.c0, rt0.c1))) ISNULL));
SELECT DISTINCT v0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c2, v0.c1, t0.c0 FROM t0, vt0, v0 INNER JOIN rt0 ON CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS REAL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((((NOT (vt0.c0)))AND(vt0.c0)))AND(vt0.c0 COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((NOT (vt0.c0)))AND(vt0.c0)))AND(vt0.c0 COLLATE RTRIM))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((((NOT (vt0.c0)))AND(vt0.c0)))AND(vt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING TOTAL((((v0.c0, v0.c1, v0.c1)) BETWEEN ((v0.c0, v0.c0, v0.c1)) AND ((MIN(SUM(v0.c0)), v0.c0, NULL)))) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (NOT (TOTAL((((v0.c0, v0.c1, v0.c1)) BETWEEN ((v0.c0, v0.c0, v0.c1)) AND ((MIN(SUM(v0.c0)), v0.c0, NULL)))))) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING ((TOTAL((((v0.c0, v0.c1, v0.c1)) BETWEEN ((v0.c0, v0.c0, v0.c1)) AND ((MIN(SUM(v0.c0)), v0.c0, NULL))))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((((v0.c0)AND(v0.c2 COLLATE RTRIM)))OR(v0.c2 COLLATE RTRIM))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((v0.c0)AND(v0.c2 COLLATE RTRIM)))OR(v0.c2 COLLATE RTRIM))))) UNION ALL SELECT * FROM v0 WHERE (((((((v0.c0)AND(v0.c2 COLLATE RTRIM)))OR(v0.c2 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt0, t0, v0, vt0;
SELECT DISTINCT * FROM rt0, t0, v0, vt0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM rt0, t0, v0, vt0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM rt0, t0, v0, vt0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM rt0, t0, v0, vt0;
SELECT ALL v0.c1, v0.c0, rt0.c4 FROM v0, rt0, t0 GROUP BY v0.c1, v0.c0, rt0.c4;
SELECT ALL v0.c1, v0.c0, rt0.c4 FROM v0, rt0, t0 WHERE (UPPER(rt0.c3) COLLATE NOCASE) GROUP BY v0.c1, v0.c0, rt0.c4 UNION SELECT ALL v0.c1, v0.c0, rt0.c4 FROM v0, rt0, t0 WHERE ((NOT (UPPER(rt0.c3) COLLATE NOCASE))) GROUP BY v0.c1, v0.c0, rt0.c4 UNION SELECT v0.c1, v0.c0, rt0.c4 FROM v0, rt0, t0 WHERE (((UPPER(rt0.c3) COLLATE NOCASE) ISNULL)) GROUP BY v0.c1, v0.c0, rt0.c4;
SELECT ALL v0.c1, v0.c0, rt0.c4 FROM v0, rt0, t0 GROUP BY v0.c1, v0.c0, rt0.c4;
SELECT rt0.c0, v0.c1, t0.c0 FROM v0, t0, rt0, vt0 GROUP BY rt0.c0, v0.c1, t0.c0;
SELECT ALL rt0.c0, v0.c1, t0.c0 FROM v0, t0, rt0, vt0 GROUP BY rt0.c0, v0.c1, t0.c0 HAVING TOTAL(AVG(MIN(rt0.c4))) COLLATE BINARY UNION ALL SELECT rt0.c0, v0.c1, t0.c0 FROM v0, t0, rt0, vt0 GROUP BY rt0.c0, v0.c1, t0.c0 HAVING (NOT (TOTAL(AVG(MIN(rt0.c4))) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c0, v0.c1, t0.c0 FROM v0, t0, rt0, vt0 GROUP BY rt0.c0, v0.c1, t0.c0 HAVING ((TOTAL(AVG(MIN(rt0.c4))) COLLATE BINARY) ISNULL);
SELECT rt0.c1 FROM rt0, v0, t0;
SELECT rt0.c1 FROM rt0, v0, t0 WHERE ('-705658580') UNION ALL SELECT ALL rt0.c1 FROM rt0, v0, t0 WHERE ((NOT ('-705658580'))) UNION ALL SELECT ALL rt0.c1 FROM rt0, v0, t0 WHERE ((('-705658580') ISNULL));
SELECT rt0.c1 FROM rt0, v0, t0;
SELECT DISTINCT v0.c1, rt0.c4, rt0.c3, v0.c0, v0.c2, vt0.c0 FROM vt0, v0, t0, rt0;
SELECT DISTINCT v0.c1, rt0.c4, rt0.c3, v0.c0, v0.c2, vt0.c0 FROM vt0, v0, t0, rt0 WHERE ((- ((- (rt0.c3))))) UNION SELECT DISTINCT v0.c1, rt0.c4, rt0.c3, v0.c0, v0.c2, vt0.c0 FROM vt0, v0, t0, rt0 WHERE ((NOT ((- ((- (rt0.c3))))))) UNION SELECT DISTINCT v0.c1, rt0.c4, rt0.c3, v0.c0, v0.c2, vt0.c0 FROM vt0, v0, t0, rt0 WHERE ((((- ((- (rt0.c3))))) ISNULL));
SELECT DISTINCT v0.c1, rt0.c4, rt0.c3, v0.c0, v0.c2, vt0.c0 FROM vt0, v0, t0, rt0;
SELECT ALL rt0.c0, v0.c1, v0.c2, rt0.c3, t0.c0 FROM rt0, vt0, v0, t0 GROUP BY rt0.c0, v0.c1, v0.c2, rt0.c3, t0.c0;
SELECT rt0.c0, v0.c1, v0.c2, rt0.c3, t0.c0 FROM rt0, vt0, v0, t0 WHERE (MIN(((((v0.c1)AND(rt0.c1)))AND(vt0.c0)), ((t0.c0) NOT BETWEEN (rt0.c3) AND (t0.c0)))) GROUP BY rt0.c0, v0.c1, v0.c2, rt0.c3, t0.c0 UNION SELECT rt0.c0, v0.c1, v0.c2, rt0.c3, t0.c0 FROM rt0, vt0, v0, t0 WHERE ((NOT (MIN(((((v0.c1)AND(rt0.c1)))AND(vt0.c0)), ((t0.c0) NOT BETWEEN (rt0.c3) AND (t0.c0)))))) GROUP BY rt0.c0, v0.c1, v0.c2, rt0.c3, t0.c0 UNION SELECT rt0.c0, v0.c1, v0.c2, rt0.c3, t0.c0 FROM rt0, vt0, v0, t0 WHERE (((MIN(((((v0.c1)AND(rt0.c1)))AND(vt0.c0)), ((t0.c0) NOT BETWEEN (rt0.c3) AND (t0.c0)))) ISNULL)) GROUP BY rt0.c0, v0.c1, v0.c2, rt0.c3, t0.c0;
SELECT ALL rt0.c0, v0.c1, v0.c2, rt0.c3, t0.c0 FROM rt0, vt0, v0, t0 GROUP BY rt0.c0, v0.c1, v0.c2, rt0.c3, t0.c0;
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c4, v0.c1, v0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4, v0.c1, v0.c2, v0.c0;
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c4, v0.c1, v0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4, v0.c1, v0.c2, v0.c0 HAVING AVG((GROUP_CONCAT(rt0.c2) IN ())) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c4, v0.c1, v0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4, v0.c1, v0.c2, v0.c0 HAVING (NOT (AVG((GROUP_CONCAT(rt0.c2) IN ())))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c4, v0.c1, v0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4, v0.c1, v0.c2, v0.c0 HAVING ((AVG((GROUP_CONCAT(rt0.c2) IN ()))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c4, v0.c1, v0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4, v0.c1, v0.c2, v0.c0;
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c4, v0.c1, v0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4, v0.c1, v0.c2, v0.c0 HAVING AVG((GROUP_CONCAT(rt0.c2) IN ())) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c4, v0.c1, v0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4, v0.c1, v0.c2, v0.c0 HAVING (NOT (AVG((GROUP_CONCAT(rt0.c2) IN ())))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c4, v0.c1, v0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4, v0.c1, v0.c2, v0.c0 HAVING ((AVG((GROUP_CONCAT(rt0.c2) IN ()))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c4, v0.c1, v0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4, v0.c1, v0.c2, v0.c0;
SELECT * FROM rt0, vt0, v0;
SELECT * FROM rt0, vt0, v0 WHERE (((((v0.c2) BETWEEN (v0.c0) AND (v0.c2)))OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c3))))) UNION ALL SELECT ALL * FROM rt0, vt0, v0 WHERE ((NOT (((((v0.c2) BETWEEN (v0.c0) AND (v0.c2)))OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c3))))))) UNION ALL SELECT * FROM rt0, vt0, v0 WHERE (((((((v0.c2) BETWEEN (v0.c0) AND (v0.c2)))OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c3))))) ISNULL));
SELECT * FROM rt0, vt0, v0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (CAST(vt0.c0 AS TEXT)) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (CAST(vt0.c0 AS TEXT)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL v0.c2, vt0.c0, rt0.c0, t0.c0, rt0.c4 FROM vt0, v0, t0, rt0 GROUP BY v0.c2, vt0.c0, rt0.c0, t0.c0, rt0.c4;
SELECT v0.c2, vt0.c0, rt0.c0, t0.c0, rt0.c4 FROM vt0, v0, t0, rt0 WHERE (v0.c1) GROUP BY v0.c2, vt0.c0, rt0.c0, t0.c0, rt0.c4 UNION SELECT ALL v0.c2, vt0.c0, rt0.c0, t0.c0, rt0.c4 FROM vt0, v0, t0, rt0 WHERE ((NOT (v0.c1))) GROUP BY v0.c2, vt0.c0, rt0.c0, t0.c0, rt0.c4 UNION SELECT ALL v0.c2, vt0.c0, rt0.c0, t0.c0, rt0.c4 FROM vt0, v0, t0, rt0 WHERE (((v0.c1) ISNULL)) GROUP BY v0.c2, vt0.c0, rt0.c0, t0.c0, rt0.c4;
SELECT ALL v0.c2, vt0.c0, rt0.c0, t0.c0, rt0.c4 FROM vt0, v0, t0, rt0 GROUP BY v0.c2, vt0.c0, rt0.c0, t0.c0, rt0.c4;
SELECT ALL v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON ((((v0.c0)!=(v0.c2)))<=(((v0.c2)/(vt0.c0)))) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON ((((v0.c0)<>(v0.c2)))<=(((v0.c2)/(vt0.c0)))) GROUP BY v0.c0, vt0.c0 HAVING ((AVG(v0.c2)) BETWEEN (((v0.c2)*(v0.c0))) AND (AVG(AVG(SUM(GROUP_CONCAT(SUM(GROUP_CONCAT(MIN(v0.c2))))))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON ((((v0.c0)!=(v0.c2)))<=(((v0.c2)/(vt0.c0)))) GROUP BY v0.c0, vt0.c0 HAVING (NOT (((AVG(v0.c2)) BETWEEN (((v0.c2)*(v0.c0))) AND (AVG(AVG(SUM(GROUP_CONCAT(SUM(GROUP_CONCAT(MIN(v0.c2))))))))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON ((((v0.c0)<>(v0.c2)))<=(((v0.c2)/(vt0.c0)))) GROUP BY v0.c0, vt0.c0 HAVING ((((AVG(v0.c2)) BETWEEN (((v0.c2)*(v0.c0))) AND (AVG(AVG(SUM(GROUP_CONCAT(SUM(GROUP_CONCAT(MIN(v0.c2)))))))))) ISNULL);
SELECT ALL v0.c0, rt0.c3 FROM t0, rt0 FULL OUTER JOIN v0 ON CAST((rt0.c4 IN ()) AS REAL) CROSS JOIN vt0 ON CASE WHEN 0.5791239247804553 THEN v0.c1 WHEN '' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 END COLLATE RTRIM;
SELECT v0.c0, rt0.c3 FROM t0 NOT INDEXED, rt0 FULL OUTER JOIN v0 ON CAST((rt0.c4 IN ()) AS REAL) CROSS JOIN vt0 ON CASE WHEN 0.5791239247804553 THEN v0.c1 WHEN '' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 END COLLATE RTRIM WHERE (((((t0.c0) BETWEEN (v0.c1) AND (t0.c0)))GLOB((((v0.c1)) BETWEEN ((rt0.c2)) AND ((v0.c0)))))) UNION ALL SELECT ALL v0.c0, rt0.c3 FROM t0, rt0 FULL OUTER JOIN v0 ON CAST((rt0.c4 IN ()) AS REAL) CROSS JOIN vt0 ON CASE WHEN 0.5791239247804553 THEN v0.c1 WHEN '' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 END COLLATE RTRIM WHERE ((NOT (((((t0.c0) BETWEEN (v0.c1) AND (t0.c0)))GLOB((((v0.c1)) BETWEEN ((rt0.c2)) AND ((v0.c0)))))))) UNION ALL SELECT ALL v0.c0, rt0.c3 FROM t0, rt0 FULL OUTER JOIN v0 ON CAST((rt0.c4 IN ()) AS REAL) CROSS JOIN vt0 ON CASE WHEN 0.5791239247804553 THEN v0.c1 WHEN '' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 END COLLATE RTRIM WHERE (((((((t0.c0) BETWEEN (v0.c1) AND (t0.c0)))GLOB((((v0.c1)) BETWEEN ((rt0.c2)) AND ((v0.c0)))))) ISNULL));
SELECT ALL v0.c0, rt0.c3 FROM t0, rt0 FULL OUTER JOIN v0 ON CAST((rt0.c4 IN ()) AS REAL) CROSS JOIN vt0 ON CASE WHEN 0.5791239247804553 THEN v0.c1 WHEN '' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 END COLLATE RTRIM;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE ((((((v0.c2)|(vt0.c0)), v0.c0 COLLATE BINARY, NULL, ((vt0.c0)|(v0.c0)), ((NULL) IS FALSE)))<((CAST(vt0.c0 AS BLOB), (NOT (v0.c0)), ((vt0.c0)GLOB(vt0.c0)), ((v0.c2)>(x'')), ((((v0.c0)OR(v0.c2)))AND(v0.c2)))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT ((((((v0.c2)|(vt0.c0)), v0.c0 COLLATE BINARY, NULL, ((vt0.c0)|(v0.c0)), ((NULL) IS FALSE)))<((CAST(vt0.c0 AS BLOB), (NOT (v0.c0)), ((vt0.c0)GLOB(vt0.c0)), ((v0.c2)>(x'')), ((((v0.c0)OR(v0.c2)))AND(v0.c2)))))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((((((((v0.c2)|(vt0.c0)), v0.c0 COLLATE BINARY, NULL, ((vt0.c0)|(v0.c0)), ((NULL) IS FALSE)))<((CAST(vt0.c0 AS BLOB), (NOT (v0.c0)), ((vt0.c0)GLOB(vt0.c0)), ((v0.c2)>(x'')), ((((v0.c0)OR(v0.c2)))AND(v0.c2)))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT rt0.c3, rt0.c0 FROM t0, rt0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM t0, rt0 WHERE (((SQLITE_VERSION()) ISNULL)) GROUP BY rt0.c3, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c0 FROM t0, rt0 WHERE ((NOT (((SQLITE_VERSION()) ISNULL)))) GROUP BY rt0.c3, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c0 FROM t0, rt0 WHERE (((((SQLITE_VERSION()) ISNULL)) ISNULL)) GROUP BY rt0.c3, rt0.c0;
SELECT rt0.c3, rt0.c0 FROM t0, rt0 GROUP BY rt0.c3, rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(COUNT(vt0.c0)) COLLATE NOCASE UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(COUNT(vt0.c0)) COLLATE NOCASE)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(COUNT(vt0.c0)) COLLATE NOCASE) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS REAL)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST(CAST(vt0.c0 AS BLOB) AS REAL)))) UNION ALL SELECT * FROM vt0 WHERE (((CAST(CAST(vt0.c0 AS BLOB) AS REAL)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (((((v0.c2) NOT BETWEEN (t0.c0) AND (v0.c2)))|(((v0.c0)AND(t0.c0))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (((((v0.c2) NOT BETWEEN (t0.c0) AND (v0.c2)))|(((v0.c0)AND(t0.c0))))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((((((v0.c2) NOT BETWEEN (t0.c0) AND (v0.c2)))|(((v0.c0)AND(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT rt0.c3, vt0.c0, v0.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c4, v0.c2, v0.c0 FROM rt0, vt0 INNER JOIN v0 ON CASE ((rt0.c0)|(rt0.c0))  WHEN rt0.c4 THEN ((rt0.c3)IS(rt0.c0)) WHEN ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)) THEN (rt0.c1 IN ()) WHEN CAST(rt0.c3 AS BLOB) THEN (NOT (vt0.c0)) ELSE (((v0.c2, v0.c2, '<XslLJ6\r')) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c3)) AND ((v0.c1, v0.c2, rt0.c2))) END GROUP BY rt0.c3, vt0.c0, v0.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c4, v0.c2, v0.c0;
SELECT ALL rt0.c3, vt0.c0, v0.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c4, v0.c2, v0.c0 FROM rt0, vt0 INNER JOIN v0 ON CASE ((rt0.c0)|(rt0.c0))  WHEN rt0.c4 THEN ((rt0.c3)IS(rt0.c0)) WHEN ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)) THEN (rt0.c1 IN ()) WHEN CAST(rt0.c3 AS BLOB) THEN (NOT (vt0.c0)) ELSE (((v0.c2, v0.c2, '<XslLJ6\r')) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c3)) AND ((v0.c1, v0.c2, rt0.c2))) END WHERE (CASE (+ (rt0.c0))  WHEN '' THEN (((rt0.c2)) BETWEEN ((v0.c1)) AND ((rt0.c1))) ELSE x'' END) GROUP BY rt0.c3, vt0.c0, v0.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c4, v0.c2, v0.c0 UNION SELECT ALL rt0.c3, vt0.c0, v0.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c4, v0.c2, v0.c0 FROM rt0, vt0 INNER JOIN v0 ON CASE ((rt0.c0)|(rt0.c0))  WHEN rt0.c4 THEN ((rt0.c3)IS(rt0.c0)) WHEN ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)) THEN (rt0.c1 IN ()) WHEN CAST(rt0.c3 AS BLOB) THEN (NOT (vt0.c0)) ELSE (((v0.c2, v0.c2, '<XslLJ6\r')) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c3)) AND ((v0.c1, v0.c2, rt0.c2))) END WHERE ((NOT (CASE (+ (rt0.c0))  WHEN '' THEN (((rt0.c2)) BETWEEN ((v0.c1)) AND ((rt0.c1))) ELSE x'' END))) GROUP BY rt0.c3, vt0.c0, v0.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c4, v0.c2, v0.c0 UNION SELECT ALL rt0.c3, vt0.c0, v0.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c4, v0.c2, v0.c0 FROM rt0, vt0 INNER JOIN v0 ON CASE ((rt0.c0)|(rt0.c0))  WHEN rt0.c4 THEN ((rt0.c3)IS(rt0.c0)) WHEN ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)) THEN (rt0.c1 IN ()) WHEN CAST(rt0.c3 AS BLOB) THEN (NOT (vt0.c0)) ELSE (((v0.c2, v0.c2, '<XslLJ6\r')) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c3)) AND ((v0.c1, v0.c2, rt0.c2))) END WHERE (((CASE (+ (rt0.c0))  WHEN '' THEN (((rt0.c2)) BETWEEN ((v0.c1)) AND ((rt0.c1))) ELSE x'' END) ISNULL)) GROUP BY rt0.c3, vt0.c0, v0.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c4, v0.c2, v0.c0;
SELECT rt0.c3, vt0.c0, v0.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c4, v0.c2, v0.c0 FROM rt0, vt0 INNER JOIN v0 ON CASE ((rt0.c0)|(rt0.c0))  WHEN rt0.c4 THEN ((rt0.c3)IS(rt0.c0)) WHEN ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)) THEN (rt0.c1 IN ()) WHEN CAST(rt0.c3 AS BLOB) THEN (NOT (vt0.c0)) ELSE (((v0.c2, v0.c2, '<XslLJ6\r')) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c3)) AND ((v0.c1, v0.c2, rt0.c2))) END GROUP BY rt0.c3, vt0.c0, v0.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c4, v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING ((COUNT(*)) IS TRUE) UNION ALL SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (NOT (((COUNT(*)) IS TRUE))) UNION ALL SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING ((((COUNT(*)) IS TRUE)) ISNULL);
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING ((COUNT(*)) IS TRUE) UNION ALL SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (NOT (((COUNT(*)) IS TRUE))) UNION ALL SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING ((((COUNT(*)) IS TRUE)) ISNULL);
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT * FROM vt0 CROSS JOIN v0 ON CASE CASE rt0.c2  WHEN rt0.c1 THEN t0.c0 ELSE rt0.c0 END  WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c4))) THEN ((t0.c0)GLOB(v0.c2)) END RIGHT OUTER JOIN t0 ON x'' INNER JOIN rt0 ON ((rt0.c1) ISNULL) COLLATE NOCASE;
SELECT DISTINCT rt0.c0, v0.c1, v0.c2, rt0.c3, v0.c0, rt0.c1 FROM rt0, v0;
SELECT DISTINCT rt0.c0, v0.c1, v0.c2, rt0.c3, v0.c0, rt0.c1 FROM rt0, v0 WHERE (HEX(DISTINCT CASE WHEN v0.c1 THEN rt0.c1 WHEN rt0.c2 THEN NULL WHEN rt0.c3 THEN rt0.c4 END)) UNION SELECT DISTINCT rt0.c0, v0.c1, v0.c2, rt0.c3, v0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (HEX(DISTINCT CASE WHEN v0.c1 THEN rt0.c1 WHEN rt0.c2 THEN NULL WHEN rt0.c3 THEN rt0.c4 END)))) UNION SELECT DISTINCT rt0.c0, v0.c1, v0.c2, rt0.c3, v0.c0, rt0.c1 FROM rt0, v0 WHERE (((HEX(DISTINCT CASE WHEN v0.c1 THEN rt0.c1 WHEN rt0.c2 THEN NULL WHEN rt0.c3 THEN rt0.c4 END)) ISNULL));
SELECT DISTINCT rt0.c0, v0.c1, v0.c2, rt0.c3, v0.c0, rt0.c1 FROM rt0, v0;
SELECT v0.c1, v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c1, v0.c0, vt0.c0;
SELECT v0.c1, v0.c0, vt0.c0 FROM v0, vt0 WHERE (v0.c0) GROUP BY v0.c1, v0.c0, vt0.c0 UNION SELECT v0.c1, v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (v0.c0))) GROUP BY v0.c1, v0.c0, vt0.c0 UNION SELECT v0.c1, v0.c0, vt0.c0 FROM v0, vt0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c1, v0.c0, vt0.c0;
SELECT v0.c1, v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c1, v0.c0, vt0.c0;
SELECT vt0.c0, v0.c1, rt0.c4, rt0.c0 FROM v0, vt0, rt0 GROUP BY vt0.c0, v0.c1, rt0.c4, rt0.c0;
SELECT ALL vt0.c0, v0.c1, rt0.c4, rt0.c0 FROM v0, vt0, rt0 GROUP BY vt0.c0, v0.c1, rt0.c4, rt0.c0 HAVING (((((((TOTAL(MIN(MAX(SUM(GROUP_CONCAT(SUM(COUNT(*))))))))AND(MAX(AVG(vt0.c0)))))AND(COUNT(*)))))!=((GROUP_CONCAT(SUM(AVG(MAX(rt0.c2))))))) UNION ALL SELECT ALL vt0.c0, v0.c1, rt0.c4, rt0.c0 FROM v0, vt0, rt0 GROUP BY vt0.c0, v0.c1, rt0.c4, rt0.c0 HAVING (NOT ((((((((TOTAL(MIN(MAX(SUM(GROUP_CONCAT(SUM(COUNT(*))))))))AND(MAX(AVG(vt0.c0)))))AND(COUNT(*)))))<>((GROUP_CONCAT(SUM(AVG(MAX(rt0.c2))))))))) UNION ALL SELECT vt0.c0, v0.c1, rt0.c4, rt0.c0 FROM v0, vt0, rt0 GROUP BY vt0.c0, v0.c1, rt0.c4, rt0.c0 HAVING (((((((((TOTAL(MIN(MAX(SUM(GROUP_CONCAT(SUM(COUNT(*))))))))AND(MAX(AVG(vt0.c0)))))AND(COUNT(*)))))!=((GROUP_CONCAT(SUM(AVG(MAX(rt0.c2)))))))) ISNULL);
SELECT rt0.c4, rt0.c3, rt0.c0 FROM rt0, t0;
SELECT rt0.c4, rt0.c3, rt0.c0 FROM rt0, t0 WHERE (((CAST(rt0.c1 AS TEXT))<=((- (rt0.c2))))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c0 FROM rt0, t0 WHERE ((NOT (((CAST(rt0.c1 AS TEXT))<=((- (rt0.c2))))))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c0 FROM rt0, t0 WHERE (((((CAST(rt0.c1 AS TEXT))<=((- (rt0.c2))))) ISNULL));
SELECT rt0.c4, rt0.c3, rt0.c0 FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0, v0;
SELECT DISTINCT * FROM rt0, t0, v0 WHERE ((((IFNULL(rt0.c1, v0.c2), CASE rt0.c3  WHEN 0.9971093669132405 THEN rt0.c3 END, (rt0.c1 IN ())))>((((((v0.c1)AND(rt0.c1)))AND(t0.c0)), CAST(t0.c0 AS BLOB), ((rt0.c1)AND(0.4547128964389555)))))) UNION SELECT DISTINCT * FROM rt0, t0, v0 WHERE ((NOT ((((IFNULL(rt0.c1, v0.c2), CASE rt0.c3  WHEN 0.9971093669132405 THEN rt0.c3 END, (rt0.c1 IN ())))>((((((v0.c1)AND(rt0.c1)))AND(t0.c0)), CAST(t0.c0 AS BLOB), ((rt0.c1)AND(0.4547128964389555)))))))) UNION SELECT DISTINCT * FROM rt0, t0, v0 WHERE ((((((IFNULL(rt0.c1, v0.c2), CASE rt0.c3  WHEN 0.9971093669132405 THEN rt0.c3 END, (rt0.c1 IN ())))>((((((v0.c1)AND(rt0.c1)))AND(t0.c0)), CAST(t0.c0 AS BLOB), ((rt0.c1)AND(0.4547128964389555)))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0, v0;
SELECT rt0.c4, v0.c1 FROM v0, t0 CROSS JOIN rt0 ON ((((rt0.c1)||(v0.c0))) NOT BETWEEN (((rt0.c4) NOT NULL)) AND (TYPEOF(DISTINCT rt0.c2))) GROUP BY rt0.c4, v0.c1;
SELECT rt0.c4, v0.c1 FROM v0, t0 CROSS JOIN rt0 ON ((((rt0.c1)||(v0.c0))) NOT BETWEEN (((rt0.c4) NOT NULL)) AND (TYPEOF(DISTINCT rt0.c2))) WHERE (((CASE WHEN rt0.c2 THEN v0.c0 ELSE rt0.c1 END) BETWEEN (((v0.c2)<=(rt0.c2))) AND (((t0.c0) NOT NULL)))) GROUP BY rt0.c4, v0.c1 UNION SELECT ALL rt0.c4, v0.c1 FROM v0, t0 CROSS JOIN rt0 ON ((((rt0.c1)||(v0.c0))) NOT BETWEEN (((rt0.c4) NOT NULL)) AND (TYPEOF(DISTINCT rt0.c2))) WHERE ((NOT (((CASE WHEN rt0.c2 THEN v0.c0 ELSE rt0.c1 END) BETWEEN (((v0.c2)<=(rt0.c2))) AND (((t0.c0) NOT NULL)))))) GROUP BY rt0.c4, v0.c1 UNION SELECT ALL rt0.c4, v0.c1 FROM v0, t0 CROSS JOIN rt0 ON ((((rt0.c1)||(v0.c0))) NOT BETWEEN (((rt0.c4) NOT NULL)) AND (TYPEOF(DISTINCT rt0.c2))) WHERE (((((CASE WHEN rt0.c2 THEN v0.c0 ELSE rt0.c1 END) BETWEEN (((v0.c2)<=(rt0.c2))) AND (((t0.c0) NOT NULL)))) ISNULL)) GROUP BY rt0.c4, v0.c1;
SELECT rt0.c4, v0.c1 FROM v0, t0 CROSS JOIN rt0 ON ((((rt0.c1)||(v0.c0))) NOT BETWEEN (((rt0.c4) NOT NULL)) AND (TYPEOF(DISTINCT rt0.c2))) GROUP BY rt0.c4, v0.c1;
SELECT v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1;
SELECT v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING SUM(COUNT(1.691459296E9)) UNION ALL SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING (NOT (SUM(COUNT(1.691459296E9)))) UNION ALL SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING ((SUM(COUNT(1.691459296E9))) ISNULL);
SELECT v0.c0 FROM v0 INNER JOIN vt0 ON ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ());
SELECT v0.c0 FROM v0 INNER JOIN vt0 ON ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) WHERE (((CAST(NULL AS NUMERIC)) NOT NULL)) UNION ALL SELECT v0.c0 FROM v0 INNER JOIN vt0 ON ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) WHERE ((NOT (((CAST(NULL AS NUMERIC)) NOT NULL)))) UNION ALL SELECT v0.c0 FROM v0 INNER JOIN vt0 ON ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) WHERE (((((CAST(NULL AS NUMERIC)) NOT NULL)) ISNULL));
SELECT v0.c0 FROM v0 INNER JOIN vt0 ON ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ());
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c0, rt0.c4, rt0.c1, rt0.c0, v0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c0, v0.c1;
SELECT v0.c0, rt0.c4, rt0.c1, rt0.c0, v0.c1 FROM rt0, v0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4)) COLLATE RTRIM) GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c0, v0.c1 UNION SELECT v0.c0, rt0.c4, rt0.c1, rt0.c0, v0.c1 FROM rt0, v0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4)) COLLATE RTRIM))) GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c0, v0.c1 UNION SELECT ALL v0.c0, rt0.c4, rt0.c1, rt0.c0, v0.c1 FROM rt0, v0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4)) COLLATE RTRIM) ISNULL)) GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c0, v0.c1;
SELECT ALL v0.c0, rt0.c4, rt0.c1, rt0.c0, v0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c0, v0.c1;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING GLOB(x'', MAX(COUNT(TOTAL(rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (GLOB(x'', MAX(COUNT(TOTAL(rt0.c0)))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((GLOB(x'', MAX(COUNT(TOTAL(rt0.c0))))) ISNULL);
SELECT rt0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c2 FROM vt0, rt0;
SELECT rt0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c2 FROM vt0, rt0 WHERE ((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) COLLATE RTRIM) UNION ALL SELECT rt0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) COLLATE RTRIM))) UNION ALL SELECT rt0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c2 FROM vt0, rt0 WHERE ((((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) COLLATE RTRIM) ISNULL));
SELECT rt0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END AS TEXT)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END AS TEXT)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END AS TEXT)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT rt0.c4, v0.c2 FROM rt0, v0, vt0, t0 GROUP BY rt0.c4, v0.c2;
SELECT rt0.c4, v0.c2 FROM rt0, v0, vt0, t0 WHERE (((0.5202017327274706 COLLATE NOCASE)||((((-8.82602372E8)) NOT BETWEEN ((rt0.c0)) AND ((v0.c1)))))) GROUP BY rt0.c4, v0.c2 UNION SELECT rt0.c4, v0.c2 FROM rt0, v0, vt0, t0 WHERE ((NOT (((0.5202017327274706 COLLATE NOCASE)||((((-8.82602372E8)) NOT BETWEEN ((rt0.c0)) AND ((v0.c1)))))))) GROUP BY rt0.c4, v0.c2 UNION SELECT rt0.c4, v0.c2 FROM rt0, v0, vt0, t0 WHERE (((((0.5202017327274706 COLLATE NOCASE)||((((-8.82602372E8)) NOT BETWEEN ((rt0.c0)) AND ((v0.c1)))))) ISNULL)) GROUP BY rt0.c4, v0.c2;
SELECT rt0.c4, v0.c2 FROM rt0, v0, vt0, t0 GROUP BY rt0.c4, v0.c2;
SELECT rt0.c0, v0.c0, v0.c1 FROM t0, vt0, v0 NOT INDEXED, rt0 GROUP BY rt0.c0, v0.c0, v0.c1;
SELECT rt0.c0, v0.c0, v0.c1 FROM t0, vt0, v0, rt0 GROUP BY rt0.c0, v0.c0, v0.c1 HAVING MAX(MIN(v0.c1)) UNION ALL SELECT rt0.c0, v0.c0, v0.c1 FROM t0, vt0, v0, rt0 GROUP BY rt0.c0, v0.c0, v0.c1 HAVING (NOT (MAX(MIN(v0.c1)))) UNION ALL SELECT ALL rt0.c0, v0.c0, v0.c1 FROM t0, vt0, v0, rt0 GROUP BY rt0.c0, v0.c0, v0.c1 HAVING ((MAX(MIN(v0.c1))) ISNULL);
SELECT ALL * FROM t0, v0, rt0;
SELECT ALL * FROM t0, v0, rt0 WHERE ((((((((('lR.N!thr')AND(v0.c0)))AND(rt0.c4)))OR(v0.c2)))AND(v0.c0)) COLLATE RTRIM) UNION ALL SELECT * FROM t0, v0, rt0 WHERE ((NOT ((((((((('lR.N!thr')AND(v0.c0)))AND(rt0.c4)))OR(v0.c2)))AND(v0.c0)) COLLATE RTRIM))) UNION ALL SELECT * FROM t0, v0, rt0 WHERE ((((((((((('lR.N!thr')AND(v0.c0)))AND(rt0.c4)))OR(v0.c2)))AND(v0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM t0, v0, rt0;
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT DISTINCT * FROM v0, vt0, rt0 WHERE (((0x65e3c17e)<=(CASE WHEN NULL THEN rt0.c1 WHEN v0.c1 THEN v0.c2 WHEN vt0.c0 THEN vt0.c0 END))) UNION SELECT DISTINCT * FROM v0, vt0, rt0 WHERE ((NOT (((0X65e3c17e)<=(CASE WHEN NULL THEN rt0.c1 WHEN v0.c1 THEN v0.c2 WHEN vt0.c0 THEN vt0.c0 END))))) UNION SELECT DISTINCT * FROM v0, vt0, rt0 WHERE (((((0X65e3c17e)<=(CASE WHEN NULL THEN rt0.c1 WHEN v0.c1 THEN v0.c2 WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT ALL v0.c1, v0.c0, vt0.c0, v0.c2 FROM vt0, t0, v0 GROUP BY v0.c1, v0.c0, vt0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, vt0.c0, v0.c2 FROM vt0, t0, v0 WHERE ((NOT (CASE v0.c1  WHEN vt0.c0 THEN v0.c2 END))) GROUP BY v0.c1, v0.c0, vt0.c0, v0.c2 UNION SELECT ALL v0.c1, v0.c0, vt0.c0, v0.c2 FROM vt0, t0, v0 WHERE ((NOT ((NOT (CASE v0.c1  WHEN vt0.c0 THEN v0.c2 END))))) GROUP BY v0.c1, v0.c0, vt0.c0, v0.c2 UNION SELECT v0.c1, v0.c0, vt0.c0, v0.c2 FROM vt0, t0, v0 WHERE ((((NOT (CASE v0.c1  WHEN vt0.c0 THEN v0.c2 END))) ISNULL)) GROUP BY v0.c1, v0.c0, vt0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, vt0.c0, v0.c2 FROM vt0, t0, v0 GROUP BY v0.c1, v0.c0, vt0.c0, v0.c2;
SELECT ALL rt0.c3, rt0.c0, v0.c0, rt0.c4, t0.c0, v0.c2, vt0.c0, v0.c1, rt0.c1 FROM t0, rt0, vt0, v0 GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c4, t0.c0, v0.c2, vt0.c0, v0.c1, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, v0.c0, rt0.c4, t0.c0, v0.c2, vt0.c0, v0.c1, rt0.c1 FROM t0, rt0, vt0, v0 GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c4, t0.c0, v0.c2, vt0.c0, v0.c1, rt0.c1 HAVING (((((rt0.c0)AND(MAX(v0.c1))))AND(vt0.c0)) IN ()) UNION ALL SELECT ALL rt0.c3, rt0.c0, v0.c0, rt0.c4, t0.c0, v0.c2, vt0.c0, v0.c1, rt0.c1 FROM t0, rt0, vt0, v0 GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c4, t0.c0, v0.c2, vt0.c0, v0.c1, rt0.c1 HAVING (NOT ((((((rt0.c0)AND(MAX(v0.c1))))AND(vt0.c0)) IN ()))) UNION ALL SELECT rt0.c3, rt0.c0, v0.c0, rt0.c4, t0.c0, v0.c2, vt0.c0, v0.c1, rt0.c1 FROM t0, rt0, vt0, v0 GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c4, t0.c0, v0.c2, vt0.c0, v0.c1, rt0.c1 HAVING (((((((rt0.c0)AND(MAX(v0.c1))))AND(vt0.c0)) IN ())) ISNULL);
SELECT ALL rt0.c3, rt0.c0, v0.c0, rt0.c4, t0.c0, v0.c2, vt0.c0, v0.c1, rt0.c1 FROM t0, rt0, vt0, v0 GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c4, t0.c0, v0.c2, vt0.c0, v0.c1, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, v0.c0, rt0.c4, t0.c0, v0.c2, vt0.c0, v0.c1, rt0.c1 FROM t0, rt0, vt0, v0 GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c4, t0.c0, v0.c2, vt0.c0, v0.c1, rt0.c1 HAVING (((((rt0.c0)AND(MAX(v0.c1))))AND(vt0.c0)) IN ()) UNION ALL SELECT ALL rt0.c3, rt0.c0, v0.c0, rt0.c4, t0.c0, v0.c2, vt0.c0, v0.c1, rt0.c1 FROM t0, rt0, vt0, v0 GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c4, t0.c0, v0.c2, vt0.c0, v0.c1, rt0.c1 HAVING (NOT ((((((rt0.c0)AND(MAX(v0.c1))))AND(vt0.c0)) IN ()))) UNION ALL SELECT rt0.c3, rt0.c0, v0.c0, rt0.c4, t0.c0, v0.c2, vt0.c0, v0.c1, rt0.c1 FROM t0, rt0, vt0, v0 GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c4, t0.c0, v0.c2, vt0.c0, v0.c1, rt0.c1 HAVING (((((((rt0.c0)AND(MAX(v0.c1))))AND(vt0.c0)) IN ())) ISNULL);
SELECT ALL rt0.c3, rt0.c0, v0.c0, rt0.c4, t0.c0, v0.c2, vt0.c0, v0.c1, rt0.c1 FROM t0, rt0, vt0, v0 GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c4, t0.c0, v0.c2, vt0.c0, v0.c1, rt0.c1;
SELECT v0.c2 FROM v0 INNER JOIN vt0 ON DATE(((vt0.c0)IS(v0.c1)), (((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c2))), (((v0.c0, v0.c1, v0.c0, v0.c2, vt0.c0, vt0.c0, v0.c2))=(('', vt0.c0, v0.c2, v0.c1, v0.c0, v0.c2, vt0.c0))), (((v0.c1))<((v0.c1))), SQLITE_VERSION());
SELECT ALL v0.c2 FROM v0 INNER JOIN vt0 ON DATE(((vt0.c0)IS(v0.c1)), (((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c2))), (((v0.c0, v0.c1, v0.c0, v0.c2, vt0.c0, vt0.c0, v0.c2))==(('', vt0.c0, v0.c2, v0.c1, v0.c0, v0.c2, vt0.c0))), (((v0.c1))<((v0.c1))), SQLITE_VERSION()) WHERE (vt0.c0) UNION ALL SELECT v0.c2 FROM v0 INNER JOIN vt0 ON DATE(((vt0.c0)IS(v0.c1)), (((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c2))), (((v0.c0, v0.c1, v0.c0, v0.c2, vt0.c0, vt0.c0, v0.c2))=(('', vt0.c0, v0.c2, v0.c1, v0.c0, v0.c2, vt0.c0))), (((v0.c1))<((v0.c1))), SQLITE_VERSION()) WHERE ((NOT (vt0.c0))) UNION ALL SELECT v0.c2 FROM v0 INNER JOIN vt0 ON DATE(((vt0.c0)IS(v0.c1)), (((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c2))), (((v0.c0, v0.c1, v0.c0, v0.c2, vt0.c0, vt0.c0, v0.c2))==(('', vt0.c0, v0.c2, v0.c1, v0.c0, v0.c2, vt0.c0))), (((v0.c1))<((v0.c1))), SQLITE_VERSION()) WHERE (((vt0.c0) ISNULL));
SELECT v0.c2 FROM v0 INNER JOIN vt0 ON DATE(((vt0.c0)IS(v0.c1)), (((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c2))), (((v0.c0, v0.c1, v0.c0, v0.c2, vt0.c0, vt0.c0, v0.c2))=(('', vt0.c0, v0.c2, v0.c1, v0.c0, v0.c2, vt0.c0))), (((v0.c1))<((v0.c1))), SQLITE_VERSION());
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c0 IN (vt0.c0)))IS NOT(rt0.c4 COLLATE RTRIM)) CROSS JOIN vt0 ON 'k槍x\r' COLLATE NOCASE;
SELECT ALL rt0.c2, v0.c0, vt0.c0, rt0.c0, t0.c0, v0.c1, rt0.c4 FROM v0, t0, vt0, rt0 GROUP BY rt0.c2, v0.c0, vt0.c0, rt0.c0, t0.c0, v0.c1, rt0.c4;
SELECT ALL rt0.c2, v0.c0, vt0.c0, rt0.c0, t0.c0, v0.c1, rt0.c4 FROM v0, t0, vt0, rt0 WHERE (((0.3386377216539327)%(rt0.c0))) GROUP BY rt0.c2, v0.c0, vt0.c0, rt0.c0, t0.c0, v0.c1, rt0.c4 UNION SELECT ALL rt0.c2, v0.c0, vt0.c0, rt0.c0, t0.c0, v0.c1, rt0.c4 FROM v0, t0, vt0, rt0 WHERE ((NOT (((0.3386377216539327)%(rt0.c0))))) GROUP BY rt0.c2, v0.c0, vt0.c0, rt0.c0, t0.c0, v0.c1, rt0.c4 UNION SELECT rt0.c2, v0.c0, vt0.c0, rt0.c0, t0.c0, v0.c1, rt0.c4 FROM v0, t0, vt0, rt0 WHERE (((((0.3386377216539327)%(rt0.c0))) ISNULL)) GROUP BY rt0.c2, v0.c0, vt0.c0, rt0.c0, t0.c0, v0.c1, rt0.c4;
SELECT ALL rt0.c2, v0.c0, vt0.c0, rt0.c0, t0.c0, v0.c1, rt0.c4 FROM v0, t0, vt0, rt0 GROUP BY rt0.c2, v0.c0, vt0.c0, rt0.c0, t0.c0, v0.c1, rt0.c4;
SELECT rt0.c1, v0.c0 FROM rt0, v0, t0 NATURAL JOIN vt0 GROUP BY rt0.c1, v0.c0;
SELECT ALL rt0.c1, v0.c0 FROM rt0, v0, t0 NATURAL JOIN vt0 GROUP BY rt0.c1, v0.c0 HAVING TOTAL(CAST(0.29105505836531764 AS NUMERIC)) UNION ALL SELECT rt0.c1, v0.c0 FROM rt0, v0, t0 NATURAL JOIN vt0 GROUP BY rt0.c1, v0.c0 HAVING (NOT (TOTAL(CAST(0.29105505836531764 AS NUMERIC)))) UNION ALL SELECT rt0.c1, v0.c0 FROM rt0, v0, t0 NATURAL JOIN vt0 GROUP BY rt0.c1, v0.c0 HAVING ((TOTAL(CAST(0.29105505836531764 AS NUMERIC))) ISNULL);
SELECT rt0.c1, v0.c0 FROM rt0, v0, t0 NATURAL JOIN vt0 GROUP BY rt0.c1, v0.c0;
SELECT ALL rt0.c1, v0.c0 FROM rt0, v0, t0 NATURAL JOIN vt0 GROUP BY rt0.c1, v0.c0 HAVING TOTAL(CAST(0.29105505836531764 AS NUMERIC)) UNION ALL SELECT rt0.c1, v0.c0 FROM rt0, v0, t0 NATURAL JOIN vt0 GROUP BY rt0.c1, v0.c0 HAVING (NOT (TOTAL(CAST(0.29105505836531764 AS NUMERIC)))) UNION ALL SELECT rt0.c1, v0.c0 FROM rt0, v0, t0 NATURAL JOIN vt0 GROUP BY rt0.c1, v0.c0 HAVING ((TOTAL(CAST(0.29105505836531764 AS NUMERIC))) ISNULL);
SELECT rt0.c1, v0.c0 FROM rt0, v0, t0 NATURAL JOIN vt0 GROUP BY rt0.c1, v0.c0;
SELECT ALL rt0.c4, rt0.c3, rt0.c0, rt0.c1, v0.c0, v0.c2, v0.c1, rt0.c2 FROM rt0, v0;
SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c1, v0.c0, v0.c2, v0.c1, rt0.c2 FROM rt0, v0 WHERE (((((rt0.c4) ISNULL)) NOT BETWEEN (((rt0.c4) ISNULL)) AND ((rt0.c3 IN ())))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c1, v0.c0, v0.c2, v0.c1, rt0.c2 FROM rt0, v0 WHERE ((NOT (((((rt0.c4) ISNULL)) NOT BETWEEN (((rt0.c4) ISNULL)) AND ((rt0.c3 IN ())))))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c1, v0.c0, v0.c2, v0.c1, rt0.c2 FROM rt0, v0 WHERE (((((((rt0.c4) ISNULL)) NOT BETWEEN (((rt0.c4) ISNULL)) AND ((rt0.c3 IN ())))) ISNULL));
SELECT ALL rt0.c4, rt0.c3, rt0.c0, rt0.c1, v0.c0, v0.c2, v0.c1, rt0.c2 FROM rt0, v0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE ((((- (v0.c1))) NOT NULL)) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT ((((- (v0.c1))) NOT NULL)))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((((((- (v0.c1))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT rt0.c0, v0.c1, t0.c0, rt0.c3, vt0.c0, rt0.c4 FROM vt0, rt0 NOT INDEXED, t0, v0 GROUP BY rt0.c0, v0.c1, t0.c0, rt0.c3, vt0.c0, rt0.c4;
SELECT ALL rt0.c0, v0.c1, t0.c0, rt0.c3, vt0.c0, rt0.c4 FROM vt0, rt0, t0, v0 WHERE ((((rt0.c3)%(rt0.c1)) IN (1083644685))) GROUP BY rt0.c0, v0.c1, t0.c0, rt0.c3, vt0.c0, rt0.c4 UNION SELECT ALL rt0.c0, v0.c1, t0.c0, rt0.c3, vt0.c0, rt0.c4 FROM vt0, rt0, t0, v0 WHERE ((NOT ((((rt0.c3)%(rt0.c1)) IN (1083644685))))) GROUP BY rt0.c0, v0.c1, t0.c0, rt0.c3, vt0.c0, rt0.c4 UNION SELECT ALL rt0.c0, v0.c1, t0.c0, rt0.c3, vt0.c0, rt0.c4 FROM vt0, rt0, t0, v0 WHERE ((((((rt0.c3)%(rt0.c1)) IN (1083644685))) ISNULL)) GROUP BY rt0.c0, v0.c1, t0.c0, rt0.c3, vt0.c0, rt0.c4;
SELECT rt0.c0, v0.c1, t0.c0, rt0.c3, vt0.c0, rt0.c4 FROM vt0, rt0 NOT INDEXED, t0, v0 GROUP BY rt0.c0, v0.c1, t0.c0, rt0.c3, vt0.c0, rt0.c4;
SELECT rt0.c3, rt0.c4, t0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((x'') NOT NULL) THEN CAST(rt0.c4 AS INTEGER) ELSE TYPEOF(rt0.c0) END FULL OUTER JOIN t0 ON (((((t0.c0 IN ()))AND(((rt0.c2)IS(t0.c0)))))OR(((((((((rt0.c0)OR(rt0.c2)))OR(vt0.c0)))AND('')))OR(vt0.c0)))) GROUP BY rt0.c3, rt0.c4, t0.c0;
SELECT rt0.c3, rt0.c4, t0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((x'') NOT NULL) THEN CAST(rt0.c4 AS INTEGER) ELSE TYPEOF(rt0.c0) END FULL OUTER JOIN t0 ON (((((t0.c0 IN ()))AND(((rt0.c2)IS(t0.c0)))))OR(((((((((rt0.c0)OR(rt0.c2)))OR(vt0.c0)))AND('')))OR(vt0.c0)))) GROUP BY rt0.c3, rt0.c4, t0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c3, rt0.c4, t0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((x'') NOT NULL) THEN CAST(rt0.c4 AS INTEGER) ELSE TYPEOF(rt0.c0) END FULL OUTER JOIN t0 ON (((((t0.c0 IN ()))AND(((rt0.c2)IS(t0.c0)))))OR(((((((((rt0.c0)OR(rt0.c2)))OR(vt0.c0)))AND('')))OR(vt0.c0)))) GROUP BY rt0.c3, rt0.c4, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, rt0.c4, t0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((x'') NOT NULL) THEN CAST(rt0.c4 AS INTEGER) ELSE TYPEOF(rt0.c0) END FULL OUTER JOIN t0 ON (((((t0.c0 IN ()))AND(((rt0.c2)IS(t0.c0)))))OR(((((((((rt0.c0)OR(rt0.c2)))OR(vt0.c0)))AND('')))OR(vt0.c0)))) GROUP BY rt0.c3, rt0.c4, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c3, rt0.c4, t0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((x'') NOT NULL) THEN CAST(rt0.c4 AS INTEGER) ELSE TYPEOF(rt0.c0) END FULL OUTER JOIN t0 ON (((((t0.c0 IN ()))AND(((rt0.c2)IS(t0.c0)))))OR(((((((((rt0.c0)OR(rt0.c2)))OR(vt0.c0)))AND('')))OR(vt0.c0)))) GROUP BY rt0.c3, rt0.c4, t0.c0;
SELECT rt0.c3, rt0.c4, t0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((x'') NOT NULL) THEN CAST(rt0.c4 AS INTEGER) ELSE TYPEOF(rt0.c0) END FULL OUTER JOIN t0 ON (((((t0.c0 IN ()))AND(((rt0.c2)IS(t0.c0)))))OR(((((((((rt0.c0)OR(rt0.c2)))OR(vt0.c0)))AND('')))OR(vt0.c0)))) GROUP BY rt0.c3, rt0.c4, t0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c3, rt0.c4, t0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((x'') NOT NULL) THEN CAST(rt0.c4 AS INTEGER) ELSE TYPEOF(rt0.c0) END FULL OUTER JOIN t0 ON (((((t0.c0 IN ()))AND(((rt0.c2)IS(t0.c0)))))OR(((((((((rt0.c0)OR(rt0.c2)))OR(vt0.c0)))AND('')))OR(vt0.c0)))) GROUP BY rt0.c3, rt0.c4, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, rt0.c4, t0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((x'') NOT NULL) THEN CAST(rt0.c4 AS INTEGER) ELSE TYPEOF(rt0.c0) END FULL OUTER JOIN t0 ON (((((t0.c0 IN ()))AND(((rt0.c2)IS(t0.c0)))))OR(((((((((rt0.c0)OR(rt0.c2)))OR(vt0.c0)))AND('')))OR(vt0.c0)))) GROUP BY rt0.c3, rt0.c4, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c3, rt0.c4, t0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((x'') NOT NULL) THEN CAST(rt0.c4 AS INTEGER) ELSE TYPEOF(rt0.c0) END FULL OUTER JOIN t0 ON (((((t0.c0 IN ()))AND(((rt0.c2)IS(t0.c0)))))OR(((((((((rt0.c0)OR(rt0.c2)))OR(vt0.c0)))AND('')))OR(vt0.c0)))) GROUP BY rt0.c3, rt0.c4, t0.c0;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((((v0.c1, v0.c0, v0.c2)) NOT BETWEEN ((((v0.c1)|(0.9004128238051785)), json_array_length(v0.c2), (~ (v0.c0)))) AND ((UNLIKELY(v0.c0), ABS(v0.c1), (v0.c2 IN ()))))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((v0.c1, v0.c0, v0.c2)) NOT BETWEEN ((((v0.c1)|(0.9004128238051785)), json_array_length(v0.c2), (~ (v0.c0)))) AND ((UNLIKELY(v0.c0), ABS(v0.c1), (v0.c2 IN ()))))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((((v0.c1, v0.c0, v0.c2)) NOT BETWEEN ((((v0.c1)|(0.9004128238051785)), json_array_length(v0.c2), (~ (v0.c0)))) AND ((UNLIKELY(v0.c0), ABS(v0.c1), (v0.c2 IN ()))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM t0, vt0, rt0;
SELECT DISTINCT * FROM t0, vt0, rt0 WHERE (((((((((t0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(((((((((vt0.c0)AND(rt0.c3)))AND(t0.c0)))AND(rt0.c2)))AND(rt0.c4)))))OR(((vt0.c0)+(t0.c0))))) UNION SELECT DISTINCT * FROM t0, vt0, rt0 WHERE ((NOT (((((((((t0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(((((((((vt0.c0)AND(rt0.c3)))AND(t0.c0)))AND(rt0.c2)))AND(rt0.c4)))))OR(((vt0.c0)+(t0.c0))))))) UNION SELECT DISTINCT * FROM t0, vt0, rt0 WHERE (((((((((((t0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(((((((((vt0.c0)AND(rt0.c3)))AND(t0.c0)))AND(rt0.c2)))AND(rt0.c4)))))OR(((vt0.c0)+(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0, rt0;
SELECT ALL v0.c1, t0.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c0, v0.c0, rt0.c3 FROM v0, t0 RIGHT OUTER JOIN rt0 ON ((((NULL)>=(v0.c0)))%(0.29327395542059453)) CROSS JOIN vt0 ON 1691459296 GROUP BY v0.c1, t0.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c0, v0.c0, rt0.c3;
SELECT ALL v0.c1, t0.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c0, v0.c0, rt0.c3 FROM v0, t0 RIGHT OUTER JOIN rt0 ON ((((NULL)>=(v0.c0)))%(0.29327395542059453)) CROSS JOIN vt0 ON 1691459296 WHERE ((((rt0.c4 IN ())) BETWEEN (x'') AND ((((NULL, rt0.c2, rt0.c0))<=((t0.c0, v0.c0, v0.c2)))))) GROUP BY v0.c1, t0.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c0, v0.c0, rt0.c3 UNION SELECT v0.c1, t0.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c0, v0.c0, rt0.c3 FROM v0, t0 RIGHT OUTER JOIN rt0 ON ((((NULL)>=(v0.c0)))%(0.29327395542059453)) CROSS JOIN vt0 ON 1691459296 WHERE ((NOT ((((rt0.c4 IN ())) BETWEEN (x'') AND ((((NULL, rt0.c2, rt0.c0))<=((t0.c0, v0.c0, v0.c2)))))))) GROUP BY v0.c1, t0.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c0, v0.c0, rt0.c3 UNION SELECT v0.c1, t0.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c0, v0.c0, rt0.c3 FROM v0, t0 RIGHT OUTER JOIN rt0 ON ((((NULL)>=(v0.c0)))%(0.29327395542059453)) CROSS JOIN vt0 ON 1691459296 WHERE ((((((rt0.c4 IN ())) BETWEEN (x'') AND ((((NULL, rt0.c2, rt0.c0))<=((t0.c0, v0.c0, v0.c2)))))) ISNULL)) GROUP BY v0.c1, t0.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c0, v0.c0, rt0.c3;
SELECT ALL v0.c1, t0.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c0, v0.c0, rt0.c3 FROM v0, t0 RIGHT OUTER JOIN rt0 ON ((((NULL)>=(v0.c0)))%(0.29327395542059453)) CROSS JOIN vt0 ON 1691459296 GROUP BY v0.c1, t0.c0, rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c0, v0.c0, rt0.c3;
SELECT rt0.c4 FROM rt0 LEFT OUTER JOIN t0 ON ((((0.05664331238406117) BETWEEN (x'') AND (-1.488704341E9)))<=((+ (t0.c0)))) GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0 LEFT OUTER JOIN t0 ON ((((0.05664331238406117) BETWEEN (x'') AND (-1.488704341E9)))<=((+ (t0.c0)))) GROUP BY rt0.c4 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c4 FROM rt0 LEFT OUTER JOIN t0 ON ((((0.05664331238406117) BETWEEN (x'') AND (-1.488704341E9)))<=((+ (t0.c0)))) GROUP BY rt0.c4 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c4 FROM rt0 LEFT OUTER JOIN t0 ON ((((0.05664331238406117) BETWEEN (x'') AND (-1.488704341E9)))<=((+ (t0.c0)))) GROUP BY rt0.c4 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c4 FROM rt0 LEFT OUTER JOIN t0 ON ((((0.05664331238406117) BETWEEN (x'') AND (-1.488704341E9)))<=((+ (t0.c0)))) GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0 LEFT OUTER JOIN t0 ON ((((0.05664331238406117) BETWEEN (x'') AND (-1.488704341E9)))<=((+ (t0.c0)))) GROUP BY rt0.c4 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c4 FROM rt0 LEFT OUTER JOIN t0 ON ((((0.05664331238406117) BETWEEN (x'') AND (-1.488704341E9)))<=((+ (t0.c0)))) GROUP BY rt0.c4 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c4 FROM rt0 LEFT OUTER JOIN t0 ON ((((0.05664331238406117) BETWEEN (x'') AND (-1.488704341E9)))<=((+ (t0.c0)))) GROUP BY rt0.c4 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c4 FROM rt0 LEFT OUTER JOIN t0 ON ((((0.05664331238406117) BETWEEN (x'') AND (-1.488704341E9)))<=((+ (t0.c0)))) GROUP BY rt0.c4;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE ((((+ (v0.c1)))IS NOT(vt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0, v0 NOT INDEXED WHERE ((NOT ((((+ (v0.c1)))IS NOT(vt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((((((+ (v0.c1)))IS NOT(vt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT rt0.c3, rt0.c1 FROM vt0, v0, rt0 LEFT OUTER JOIN t0 ON t0.c0 GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM vt0, v0, rt0 LEFT OUTER JOIN t0 ON t0.c0 WHERE (LOWER(((v0.c0) ISNULL))) GROUP BY rt0.c3, rt0.c1 UNION SELECT rt0.c3, rt0.c1 FROM vt0, v0, rt0 LEFT OUTER JOIN t0 ON t0.c0 WHERE ((NOT (LOWER(((v0.c0) ISNULL))))) GROUP BY rt0.c3, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c1 FROM vt0, v0, rt0 LEFT OUTER JOIN t0 ON t0.c0 WHERE (((LOWER(((v0.c0) ISNULL))) ISNULL)) GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM vt0, v0, rt0 LEFT OUTER JOIN t0 ON t0.c0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING CASE COUNT(*)  WHEN (((rt0.c0))=((rt0.c4))) THEN rt0.c1 ELSE MAX(rt0.c0) END UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (CASE COUNT(*)  WHEN (((rt0.c0))==((rt0.c4))) THEN rt0.c1 ELSE MAX(rt0.c0) END)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((CASE COUNT(*)  WHEN (((rt0.c0))==((rt0.c4))) THEN rt0.c1 ELSE MAX(rt0.c0) END) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING CASE COUNT(*)  WHEN (((rt0.c0))=((rt0.c4))) THEN rt0.c1 ELSE MAX(rt0.c0) END UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (CASE COUNT(*)  WHEN (((rt0.c0))==((rt0.c4))) THEN rt0.c1 ELSE MAX(rt0.c0) END)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((CASE COUNT(*)  WHEN (((rt0.c0))==((rt0.c4))) THEN rt0.c1 ELSE MAX(rt0.c0) END) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT * FROM v0 INNER JOIN vt0 ON ((json_array_length(vt0.c0, v0.c2))+(((vt0.c0)*(v0.c1))));
SELECT ALL * FROM v0 INNER JOIN vt0 ON ((json_array_length(vt0.c0, v0.c2))+(((vt0.c0)*(v0.c1)))) WHERE ((((v0.c1)) BETWEEN ((json(NULL))) AND ((((vt0.c0) IS FALSE))))) UNION ALL SELECT * FROM v0 INNER JOIN vt0 ON ((json_array_length(vt0.c0, v0.c2))+(((vt0.c0)*(v0.c1)))) WHERE ((NOT ((((v0.c1)) BETWEEN ((json(NULL))) AND ((((vt0.c0) IS FALSE))))))) UNION ALL SELECT * FROM v0 INNER JOIN vt0 ON ((json_array_length(vt0.c0, v0.c2))+(((vt0.c0)*(v0.c1)))) WHERE ((((((v0.c1)) BETWEEN ((json(NULL))) AND ((((vt0.c0) IS FALSE))))) ISNULL));
SELECT * FROM v0 INNER JOIN vt0 ON ((json_array_length(vt0.c0, v0.c2))+(((vt0.c0)*(v0.c1))));
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((((((rt0.c3 IN ()))AND((vt0.c0 IN (rt0.c2)))))AND(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN NULL THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 END))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((((((rt0.c3 IN ()))AND((vt0.c0 IN (rt0.c2)))))AND(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN NULL THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 END))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((((((rt0.c3 IN ()))AND((vt0.c0 IN (rt0.c2)))))AND(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN NULL THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3 HAVING TOTAL(COUNT(SUM(rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3 HAVING (NOT (TOTAL(COUNT(SUM(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3 HAVING ((TOTAL(COUNT(SUM(rt0.c1)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0)LIKE(0Xffffffffb8259fad)) IN ((vt0.c0 IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)LIKE(0xffffffffb8259fad)) IN ((vt0.c0 IN ())))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)LIKE(0xffffffffb8259fad)) IN ((vt0.c0 IN ())))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c4, v0.c0, rt0.c1, t0.c0, rt0.c2, rt0.c3, v0.c2, v0.c1 FROM vt0, rt0, t0 LEFT OUTER JOIN v0 ON ((((((rt0.c2)<(rt0.c4)))AND(((rt0.c3)IS NOT(rt0.c2)))))AND(CAST(v0.c1 AS REAL)));
SELECT DISTINCT rt0.c4, v0.c0, rt0.c1, t0.c0, rt0.c2, rt0.c3, v0.c2, v0.c1 FROM vt0, rt0, t0 LEFT OUTER JOIN v0 ON ((((((rt0.c2)<(rt0.c4)))AND(((rt0.c3)IS NOT(rt0.c2)))))AND(CAST(v0.c1 AS REAL))) WHERE ('^狺' COLLATE NOCASE) UNION SELECT DISTINCT rt0.c4, v0.c0, rt0.c1, t0.c0, rt0.c2, rt0.c3, v0.c2, v0.c1 FROM vt0, rt0, t0 LEFT OUTER JOIN v0 ON ((((((rt0.c2)<(rt0.c4)))AND(((rt0.c3)IS NOT(rt0.c2)))))AND(CAST(v0.c1 AS REAL))) WHERE ((NOT ('^狺' COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c4, v0.c0, rt0.c1, t0.c0, rt0.c2, rt0.c3, v0.c2, v0.c1 FROM vt0, rt0, t0 LEFT OUTER JOIN v0 ON ((((((rt0.c2)<(rt0.c4)))AND(((rt0.c3)IS NOT(rt0.c2)))))AND(CAST(v0.c1 AS REAL))) WHERE ((('^狺' COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c4, v0.c0, rt0.c1, t0.c0, rt0.c2, rt0.c3, v0.c2, v0.c1 FROM vt0, rt0, t0 LEFT OUTER JOIN v0 ON ((((((rt0.c2)<(rt0.c4)))AND(((rt0.c3)IS NOT(rt0.c2)))))AND(CAST(v0.c1 AS REAL)));
SELECT ALL rt0.c4, rt0.c2, v0.c2, v0.c1 FROM v0, vt0, t0, rt0 GROUP BY rt0.c4, rt0.c2, v0.c2, v0.c1;
SELECT ALL rt0.c4, rt0.c2, v0.c2, v0.c1 FROM v0, vt0, t0, rt0 WHERE ((+ (((t0.c0) BETWEEN ('1680790001') AND (rt0.c1))))) GROUP BY rt0.c4, rt0.c2, v0.c2, v0.c1 UNION SELECT rt0.c4, rt0.c2, v0.c2, v0.c1 FROM v0, vt0, t0, rt0 WHERE ((NOT ((+ (((t0.c0) BETWEEN ('1680790001') AND (rt0.c1))))))) GROUP BY rt0.c4, rt0.c2, v0.c2, v0.c1 UNION SELECT ALL rt0.c4, rt0.c2, v0.c2, v0.c1 FROM v0, vt0, t0, rt0 WHERE ((((+ (((t0.c0) BETWEEN ('1680790001') AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c4, rt0.c2, v0.c2, v0.c1;
SELECT ALL rt0.c4, rt0.c2, v0.c2, v0.c1 FROM v0, vt0, t0, rt0 GROUP BY rt0.c4, rt0.c2, v0.c2, v0.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(((SUM(TOTAL(COUNT('q/'))))||(COUNT(COUNT(*))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(((SUM(TOTAL(COUNT('q/'))))||(COUNT(COUNT(*))))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(((SUM(TOTAL(COUNT('q/'))))||(COUNT(COUNT(*)))))) ISNULL);
SELECT ALL v0.c1, vt0.c0, v0.c0, t0.c0, rt0.c4, rt0.c1 FROM v0, rt0, vt0, t0;
SELECT v0.c1, vt0.c0, v0.c0, t0.c0, rt0.c4, rt0.c1 FROM v0, rt0, vt0, t0 WHERE (((((((((((0.505971677369388) ISNULL))OR(((v0.c2)<<(v0.c2)))))OR(((rt0.c4) NOT NULL))))OR((~ (0.7140364359024514)))))AND(NULL))) UNION ALL SELECT v0.c1, vt0.c0, v0.c0, t0.c0, rt0.c4, rt0.c1 FROM v0, rt0, vt0, t0 WHERE ((NOT (((((((((((0.505971677369388) ISNULL))OR(((v0.c2)<<(v0.c2)))))OR(((rt0.c4) NOT NULL))))OR((~ (0.7140364359024514)))))AND(NULL))))) UNION ALL SELECT ALL v0.c1, vt0.c0, v0.c0, t0.c0, rt0.c4, rt0.c1 FROM v0, rt0, vt0, t0 WHERE (((((((((((((0.505971677369388) ISNULL))OR(((v0.c2)<<(v0.c2)))))OR(((rt0.c4) NOT NULL))))OR((~ (0.7140364359024514)))))AND(NULL))) ISNULL));
SELECT ALL v0.c1, vt0.c0, v0.c0, t0.c0, rt0.c4, rt0.c1 FROM v0, rt0, vt0, t0;
SELECT DISTINCT * FROM t0, rt0, vt0, v0;
SELECT DISTINCT * FROM t0, rt0, vt0, v0 WHERE (((((((((rt0.c4)OR(rt0.c3)))OR(rt0.c4)))OR(rt0.c3)))OR(rt0.c4)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM t0, rt0, vt0, v0 WHERE ((NOT (((((((((rt0.c4)OR(rt0.c3)))OR(rt0.c4)))OR(rt0.c3)))OR(rt0.c4)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0, rt0, vt0, v0 WHERE (((((((((((rt0.c4)OR(rt0.c3)))OR(rt0.c4)))OR(rt0.c3)))OR(rt0.c4)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t0, rt0, vt0, v0;
SELECT ALL v0.c1, rt0.c3, rt0.c1, rt0.c4, v0.c2, v0.c0, t0.c0, rt0.c0 FROM rt0, v0 RIGHT OUTER JOIN t0 ON (((v0.c1 IN ())) NOTNULL) GROUP BY v0.c1, rt0.c3, rt0.c1, rt0.c4, v0.c2, v0.c0, t0.c0, rt0.c0;
SELECT ALL v0.c1, rt0.c3, rt0.c1, rt0.c4, v0.c2, v0.c0, t0.c0, rt0.c0 FROM rt0, v0 RIGHT OUTER JOIN t0 ON (((v0.c1 IN ())) NOTNULL) WHERE (((((CAST('-1532622861' AS REAL))AND(((((rt0.c4)OR(rt0.c4)))OR(rt0.c3)))))AND(rt0.c3))) GROUP BY v0.c1, rt0.c3, rt0.c1, rt0.c4, v0.c2, v0.c0, t0.c0, rt0.c0 UNION SELECT ALL v0.c1, rt0.c3, rt0.c1, rt0.c4, v0.c2, v0.c0, t0.c0, rt0.c0 FROM rt0, v0 RIGHT OUTER JOIN t0 ON (((v0.c1 IN ())) NOTNULL) WHERE ((NOT (((((CAST('-1532622861' AS REAL))AND(((((rt0.c4)OR(rt0.c4)))OR(rt0.c3)))))AND(rt0.c3))))) GROUP BY v0.c1, rt0.c3, rt0.c1, rt0.c4, v0.c2, v0.c0, t0.c0, rt0.c0 UNION SELECT v0.c1, rt0.c3, rt0.c1, rt0.c4, v0.c2, v0.c0, t0.c0, rt0.c0 FROM rt0, v0 RIGHT OUTER JOIN t0 ON (((v0.c1 IN ())) NOTNULL) WHERE (((((((CAST('-1532622861' AS REAL))AND(((((rt0.c4)OR(rt0.c4)))OR(rt0.c3)))))AND(rt0.c3))) ISNULL)) GROUP BY v0.c1, rt0.c3, rt0.c1, rt0.c4, v0.c2, v0.c0, t0.c0, rt0.c0;
SELECT ALL v0.c1, rt0.c3, rt0.c1, rt0.c4, v0.c2, v0.c0, t0.c0, rt0.c0 FROM rt0, v0 RIGHT OUTER JOIN t0 ON (((v0.c1 IN ())) NOTNULL) GROUP BY v0.c1, rt0.c3, rt0.c1, rt0.c4, v0.c2, v0.c0, t0.c0, rt0.c0;
SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2;
SELECT * FROM rt0, t0 FULL OUTER JOIN v0 ON (NOT (((v0.c2)=(rt0.c0))));
SELECT * FROM rt0, t0 FULL OUTER JOIN v0 ON (NOT (((v0.c2)==(rt0.c0)))) WHERE ((- (((((v0.c0)AND(t0.c0)))OR(''))))) UNION ALL SELECT ALL * FROM rt0, t0 FULL OUTER JOIN v0 ON (NOT (((v0.c2)==(rt0.c0)))) WHERE ((NOT ((- (((((v0.c0)AND(t0.c0)))OR(''))))))) UNION ALL SELECT ALL * FROM rt0, t0 FULL OUTER JOIN v0 ON (NOT (((v0.c2)==(rt0.c0)))) WHERE ((((- (((((v0.c0)AND(t0.c0)))OR(''))))) ISNULL));
SELECT * FROM rt0, t0 FULL OUTER JOIN v0 ON (NOT (((v0.c2)=(rt0.c0))));
SELECT DISTINCT rt0.c1, v0.c0, rt0.c0, t0.c0, rt0.c2, rt0.c4 FROM rt0, v0, vt0, t0;
SELECT DISTINCT rt0.c1, v0.c0, rt0.c0, t0.c0, rt0.c2, rt0.c4 FROM rt0, v0, vt0, t0 WHERE (CAST(rt0.c4 AS REAL)) UNION SELECT DISTINCT rt0.c1, v0.c0, rt0.c0, t0.c0, rt0.c2, rt0.c4 FROM rt0, v0, vt0, t0 WHERE ((NOT (CAST(rt0.c4 AS REAL)))) UNION SELECT DISTINCT rt0.c1, v0.c0, rt0.c0, t0.c0, rt0.c2, rt0.c4 FROM rt0, v0, vt0, t0 WHERE (((CAST(rt0.c4 AS REAL)) ISNULL));
SELECT DISTINCT rt0.c1, v0.c0, rt0.c0, t0.c0, rt0.c2, rt0.c4 FROM rt0, v0, vt0, t0;
SELECT ALL v0.c1, t0.c0 FROM vt0, v0 LEFT OUTER JOIN t0 ON ((((t0.c0)LIKE(t0.c0)))*(LOWER(DISTINCT v0.c1))) GROUP BY v0.c1, t0.c0;
SELECT v0.c1, t0.c0 FROM vt0, v0 LEFT OUTER JOIN t0 ON ((((t0.c0)LIKE(t0.c0)))*(LOWER(DISTINCT v0.c1))) WHERE (((t0.c0)IS(v0.c2)) COLLATE BINARY COLLATE BINARY) GROUP BY v0.c1, t0.c0 UNION SELECT ALL v0.c1, t0.c0 FROM vt0, v0 LEFT OUTER JOIN t0 ON ((((t0.c0)LIKE(t0.c0)))*(LOWER(DISTINCT v0.c1))) WHERE ((NOT (((t0.c0)IS(v0.c2)) COLLATE BINARY COLLATE BINARY))) GROUP BY v0.c1, t0.c0 UNION SELECT ALL v0.c1, t0.c0 FROM vt0, v0 LEFT OUTER JOIN t0 ON ((((t0.c0)LIKE(t0.c0)))*(LOWER(DISTINCT v0.c1))) WHERE (((((t0.c0)IS(v0.c2)) COLLATE BINARY COLLATE BINARY) ISNULL)) GROUP BY v0.c1, t0.c0;
SELECT ALL v0.c1, t0.c0 FROM vt0, v0 LEFT OUTER JOIN t0 ON ((((t0.c0)LIKE(t0.c0)))*(LOWER(DISTINCT v0.c1))) GROUP BY v0.c1, t0.c0;
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING SUM(MIN(TOTAL(v0.c1))) UNION ALL SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (NOT (SUM(MIN(TOTAL(v0.c1))))) UNION ALL SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING ((SUM(MIN(TOTAL(v0.c1)))) ISNULL);
SELECT ALL * FROM vt0, v0, rt0, t0;
SELECT * FROM vt0, v0, rt0, t0 WHERE (t0.c0) UNION ALL SELECT * FROM vt0, v0, rt0, t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL * FROM vt0, v0, rt0, t0 WHERE (((t0.c0) ISNULL));
SELECT ALL * FROM vt0, v0, rt0, t0;
SELECT DISTINCT vt0.c0, v0.c1, t0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON CASE ((((((((((((v0.c2)OR(v0.c0)))OR(0.06264936034599511)))AND(v0.c2)))OR(vt0.c0)))AND(v0.c1)))OR(v0.c0))  WHEN TOTAL_CHANGES() THEN (NOT (v0.c1)) END INNER JOIN t0 ON 0.30373482042829003;
SELECT DISTINCT vt0.c0, v0.c1, t0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON CASE ((((((((((((v0.c2)OR(v0.c0)))OR(0.06264936034599511)))AND(v0.c2)))OR(vt0.c0)))AND(v0.c1)))OR(v0.c0))  WHEN TOTAL_CHANGES() THEN (NOT (v0.c1)) END INNER JOIN t0 ON 0.30373482042829003 WHERE (((t0.c0 COLLATE RTRIM)*(t0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0, v0.c1, t0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON CASE ((((((((((((v0.c2)OR(v0.c0)))OR(0.06264936034599511)))AND(v0.c2)))OR(vt0.c0)))AND(v0.c1)))OR(v0.c0))  WHEN TOTAL_CHANGES() THEN (NOT (v0.c1)) END INNER JOIN t0 ON 0.30373482042829003 WHERE ((NOT (((t0.c0 COLLATE RTRIM)*(t0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT vt0.c0, v0.c1, t0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON CASE ((((((((((((v0.c2)OR(v0.c0)))OR(0.06264936034599511)))AND(v0.c2)))OR(vt0.c0)))AND(v0.c1)))OR(v0.c0))  WHEN TOTAL_CHANGES() THEN (NOT (v0.c1)) END INNER JOIN t0 ON 0.30373482042829003 WHERE (((((t0.c0 COLLATE RTRIM)*(t0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c1, t0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON CASE ((((((((((((v0.c2)OR(v0.c0)))OR(0.06264936034599511)))AND(v0.c2)))OR(vt0.c0)))AND(v0.c1)))OR(v0.c0))  WHEN TOTAL_CHANGES() THEN (NOT (v0.c1)) END INNER JOIN t0 ON 0.30373482042829003;
SELECT vt0.c0, rt0.c1, rt0.c4, v0.c0, v0.c2 FROM v0 FULL OUTER JOIN rt0 ON (((((((((('794227012')OR(v0.c1)))AND(vt0.c0)))OR(v0.c0)))OR(v0.c2)))+((NOT ('x\n')))) RIGHT OUTER JOIN vt0 ON (((((NOT (rt0.c0)))AND(v0.c1)))OR(rt0.c4 COLLATE RTRIM)) GROUP BY vt0.c0, rt0.c1, rt0.c4, v0.c0, v0.c2;
SELECT ALL rt0.c4, v0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c4, v0.c1;
SELECT ALL rt0.c4, v0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c4, v0.c1 HAVING AVG(AVG(v0.c1)) UNION ALL SELECT rt0.c4, v0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c4, v0.c1 HAVING (NOT (AVG(AVG(v0.c1)))) UNION ALL SELECT rt0.c4, v0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c4, v0.c1 HAVING ((AVG(AVG(v0.c1))) ISNULL);
SELECT rt0.c4, rt0.c1, vt0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c4, rt0.c1, vt0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE (((rt0.c2) NOTNULL) COLLATE BINARY) UNION ALL SELECT ALL rt0.c4, rt0.c1, vt0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ((NOT (((rt0.c2) NOTNULL) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c4, rt0.c1, vt0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE (((((rt0.c2) NOTNULL) COLLATE BINARY) ISNULL));
SELECT rt0.c4, rt0.c1, vt0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c2, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ('') UNION SELECT DISTINCT rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((NOT (''))) UNION SELECT DISTINCT rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((('') ISNULL));
SELECT DISTINCT rt0.c2, vt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c0, v0.c1, vt0.c0, v0.c2, rt0.c4 FROM rt0 LEFT OUTER JOIN t0 ON NULL FULL OUTER JOIN v0 ON (((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))OR(json_patch(t0.c0, t0.c0))) LEFT OUTER JOIN vt0 ON (((rt0.c2)GLOB(rt0.c3)) IN (rt0.c3 COLLATE RTRIM)) GROUP BY rt0.c0, v0.c1, vt0.c0, v0.c2, rt0.c4;
SELECT rt0.c0, v0.c1, vt0.c0, v0.c2, rt0.c4 FROM rt0 LEFT OUTER JOIN t0 ON NULL FULL OUTER JOIN v0 ON (((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))OR(json_patch(t0.c0, t0.c0))) LEFT OUTER JOIN vt0 ON (((rt0.c2)GLOB(rt0.c3)) IN (rt0.c3 COLLATE RTRIM)) WHERE (UPPER(((rt0.c2)%(rt0.c2)))) GROUP BY rt0.c0, v0.c1, vt0.c0, v0.c2, rt0.c4 UNION SELECT rt0.c0, v0.c1, vt0.c0, v0.c2, rt0.c4 FROM rt0 LEFT OUTER JOIN t0 ON NULL FULL OUTER JOIN v0 ON (((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))OR(json_patch(t0.c0, t0.c0))) LEFT OUTER JOIN vt0 ON (((rt0.c2)GLOB(rt0.c3)) IN (rt0.c3 COLLATE RTRIM)) WHERE ((NOT (UPPER(((rt0.c2)%(rt0.c2)))))) GROUP BY rt0.c0, v0.c1, vt0.c0, v0.c2, rt0.c4 UNION SELECT rt0.c0, v0.c1, vt0.c0, v0.c2, rt0.c4 FROM rt0 LEFT OUTER JOIN t0 ON NULL FULL OUTER JOIN v0 ON (((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))OR(json_patch(t0.c0, t0.c0))) LEFT OUTER JOIN vt0 ON (((rt0.c2)GLOB(rt0.c3)) IN (rt0.c3 COLLATE RTRIM)) WHERE (((UPPER(((rt0.c2)%(rt0.c2)))) ISNULL)) GROUP BY rt0.c0, v0.c1, vt0.c0, v0.c2, rt0.c4;
SELECT ALL rt0.c0, v0.c1, vt0.c0, v0.c2, rt0.c4 FROM rt0 LEFT OUTER JOIN t0 ON NULL FULL OUTER JOIN v0 ON (((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))OR(json_patch(t0.c0, t0.c0))) LEFT OUTER JOIN vt0 ON (((rt0.c2)GLOB(rt0.c3)) IN (rt0.c3 COLLATE RTRIM)) GROUP BY rt0.c0, v0.c1, vt0.c0, v0.c2, rt0.c4;
SELECT v0.c0, rt0.c4, v0.c1 FROM t0, v0, vt0, rt0 GROUP BY v0.c0, rt0.c4, v0.c1;
SELECT ALL v0.c0, rt0.c4, v0.c1 FROM t0, v0, vt0, rt0 GROUP BY v0.c0, rt0.c4, v0.c1 HAVING ((((AVG(COUNT(COUNT(rt0.c4))))AND(AVG(MIN(rt0.c1)))))OR(TOTAL(COUNT(*)))) UNION ALL SELECT v0.c0, rt0.c4, v0.c1 FROM t0, v0, vt0, rt0 GROUP BY v0.c0, rt0.c4, v0.c1 HAVING (NOT (((((AVG(COUNT(COUNT(rt0.c4))))AND(AVG(MIN(rt0.c1)))))OR(TOTAL(COUNT(*)))))) UNION ALL SELECT v0.c0, rt0.c4, v0.c1 FROM t0, v0, vt0, rt0 GROUP BY v0.c0, rt0.c4, v0.c1 HAVING ((((((AVG(COUNT(COUNT(rt0.c4))))AND(AVG(MIN(rt0.c1)))))OR(TOTAL(COUNT(*))))) ISNULL);
SELECT ALL v0.c0, t0.c0 FROM vt0, v0, t0;
SELECT ALL v0.c0, t0.c0 FROM vt0, v0, t0 WHERE (((((((t0.c0)=(vt0.c0)))AND(CAST('' AS TEXT))))OR((v0.c1 IN ())))) UNION ALL SELECT v0.c0, t0.c0 FROM vt0 NOT INDEXED, v0, t0 WHERE ((NOT (((((((t0.c0)==(vt0.c0)))AND(CAST('' AS TEXT))))OR((v0.c1 IN ())))))) UNION ALL SELECT v0.c0, t0.c0 FROM vt0, v0, t0 WHERE (((((((((t0.c0)==(vt0.c0)))AND(CAST('' AS TEXT))))OR((v0.c1 IN ())))) ISNULL));
SELECT ALL v0.c0, t0.c0 FROM vt0, v0, t0;
SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON ((((((((((((vt0.c0 COLLATE BINARY)AND(((((((((((((t0.c0)AND(rt0.c0)))OR(v0.c1)))OR(v0.c0)))AND(rt0.c2)))OR(rt0.c4)))AND(v0.c0)))))OR(CASE WHEN 0.4884358785405766 THEN t0.c0 END)))OR(((rt0.c1) NOT NULL))))OR(t0.c0)))OR(UPPER(v0.c0))))OR(((vt0.c0) NOT NULL))) LEFT OUTER JOIN t0 ON CAST(TYPEOF(rt0.c3) AS BLOB) FULL OUTER JOIN vt0 ON CASE v0.c2  WHEN ((((rt0.c2)OR(v0.c1)))AND(rt0.c0)) THEN UNICODE(t0.c0) WHEN (+ (vt0.c0)) THEN ((0X68f54eaa)-(t0.c0)) WHEN ((rt0.c1)IS(vt0.c0)) THEN rt0.c3 ELSE ((rt0.c4)=(rt0.c0)) END;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 WHERE (((((t0.c0)LIKE(t0.c0)))IS NOT(((vt0.c0)LIKE(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t0, vt0 WHERE ((NOT (((((t0.c0)LIKE(t0.c0)))IS NOT(((vt0.c0)LIKE(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt0 WHERE (((((((t0.c0)LIKE(t0.c0)))IS NOT(((vt0.c0)LIKE(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT v0.c0, t0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (NOT (((v0.c0) IS TRUE))) RIGHT OUTER JOIN t0 ON (((t0.c0 COLLATE RTRIM))<>(((((v0.c2))<>((vt0.c0)))))) GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (NOT (((v0.c0) IS TRUE))) RIGHT OUTER JOIN t0 ON (((t0.c0 COLLATE RTRIM))!=(((((v0.c2))<>((vt0.c0)))))) GROUP BY v0.c0, t0.c0 HAVING COUNT(COUNT(MAX(t0.c0))) UNION ALL SELECT v0.c0, t0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (NOT (((v0.c0) IS TRUE))) RIGHT OUTER JOIN t0 ON (((t0.c0 COLLATE RTRIM))<>(((((v0.c2))<>((vt0.c0)))))) GROUP BY v0.c0, t0.c0 HAVING (NOT (COUNT(COUNT(MAX(t0.c0))))) UNION ALL SELECT ALL v0.c0, t0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (NOT (((v0.c0) IS TRUE))) RIGHT OUTER JOIN t0 ON (((t0.c0 COLLATE RTRIM))<>(((((v0.c2))!=((vt0.c0)))))) GROUP BY v0.c0, t0.c0 HAVING ((COUNT(COUNT(MAX(t0.c0)))) ISNULL);
SELECT * FROM rt0 CROSS JOIN v0 ON (rt0.c4 IN ()) COLLATE BINARY RIGHT OUTER JOIN vt0 ON CASE WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN v0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END COLLATE NOCASE LEFT OUTER JOIN t0 ON ((((rt0.c4)<>(v0.c1)))|((((rt0.c3))>=((t0.c0)))));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, (0Xffffffffa7442cab IN ())))>((((vt0.c0) IS FALSE), vt0.c0, (((vt0.c0))>((vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 COLLATE NOCASE, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, (0Xffffffffa7442cab IN ())))>((((vt0.c0) IS FALSE), vt0.c0, (((vt0.c0))>((vt0.c0))))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0 COLLATE NOCASE, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, (0xffffffffa7442cab IN ())))>((((vt0.c0) IS FALSE), vt0.c0, (((vt0.c0))>((vt0.c0))))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM vt0, rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM vt0, rt0, v0 WHERE (((0.09332116309366378)>(vt0.c0 COLLATE BINARY))) GROUP BY rt0.c0, v0.c0, rt0.c1 UNION SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM vt0, rt0, v0 WHERE ((NOT (((0.09332116309366378)>(vt0.c0 COLLATE BINARY))))) GROUP BY rt0.c0, v0.c0, rt0.c1 UNION SELECT rt0.c0, v0.c0, rt0.c1 FROM vt0, rt0, v0 WHERE (((((0.09332116309366378)>(vt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM vt0, rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT rt0.c2, vt0.c0, rt0.c3, rt0.c4, rt0.c0 FROM vt0 CROSS JOIN rt0 ON CAST(x'' AS TEXT) GROUP BY rt0.c2, vt0.c0, rt0.c3, rt0.c4, rt0.c0;
SELECT rt0.c2, vt0.c0, rt0.c3, rt0.c4, rt0.c0 FROM vt0 CROSS JOIN rt0 ON CAST(x'' AS TEXT) GROUP BY rt0.c2, vt0.c0, rt0.c3, rt0.c4, rt0.c0 HAVING ((TOTAL(0x3c716f9))IS NOT(CAST(COUNT(*) AS BLOB))) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c3, rt0.c4, rt0.c0 FROM vt0 CROSS JOIN rt0 ON CAST(x'' AS TEXT) GROUP BY rt0.c2, vt0.c0, rt0.c3, rt0.c4, rt0.c0 HAVING (NOT (((TOTAL(0X3c716f9))IS NOT(CAST(COUNT(*) AS BLOB))))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c3, rt0.c4, rt0.c0 FROM vt0 CROSS JOIN rt0 ON CAST(x'' AS TEXT) GROUP BY rt0.c2, vt0.c0, rt0.c3, rt0.c4, rt0.c0 HAVING ((((TOTAL(0X3c716f9))IS NOT(CAST(COUNT(*) AS BLOB)))) ISNULL);
SELECT rt0.c2, vt0.c0, rt0.c3, rt0.c4, rt0.c0 FROM vt0 CROSS JOIN rt0 ON CAST(x'' AS TEXT) GROUP BY rt0.c2, vt0.c0, rt0.c3, rt0.c4, rt0.c0;
SELECT rt0.c2, vt0.c0, rt0.c3, rt0.c4, rt0.c0 FROM vt0 CROSS JOIN rt0 ON CAST(x'' AS TEXT) GROUP BY rt0.c2, vt0.c0, rt0.c3, rt0.c4, rt0.c0 HAVING ((TOTAL(0x3c716f9))IS NOT(CAST(COUNT(*) AS BLOB))) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c3, rt0.c4, rt0.c0 FROM vt0 CROSS JOIN rt0 ON CAST(x'' AS TEXT) GROUP BY rt0.c2, vt0.c0, rt0.c3, rt0.c4, rt0.c0 HAVING (NOT (((TOTAL(0X3c716f9))IS NOT(CAST(COUNT(*) AS BLOB))))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c3, rt0.c4, rt0.c0 FROM vt0 CROSS JOIN rt0 ON CAST(x'' AS TEXT) GROUP BY rt0.c2, vt0.c0, rt0.c3, rt0.c4, rt0.c0 HAVING ((((TOTAL(0X3c716f9))IS NOT(CAST(COUNT(*) AS BLOB)))) ISNULL);
SELECT rt0.c2, vt0.c0, rt0.c3, rt0.c4, rt0.c0 FROM vt0 CROSS JOIN rt0 ON CAST(x'' AS TEXT) GROUP BY rt0.c2, vt0.c0, rt0.c3, rt0.c4, rt0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((NULL) NOT NULL)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((NULL) NOT NULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((NULL) NOT NULL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3, vt0.c0 FROM vt0, rt0 WHERE (((((((rt0.c1)<=(rt0.c4)))OR(((((vt0.c0)OR(rt0.c2)))OR(rt0.c4)))))OR(LIKE('635076207', vt0.c0)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((((((rt0.c1)<=(rt0.c4)))OR(((((vt0.c0)OR(rt0.c2)))OR(rt0.c4)))))OR(LIKE('635076207', vt0.c0)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3, vt0.c0 FROM vt0, rt0 WHERE (((((((((rt0.c1)<=(rt0.c4)))OR(((((vt0.c0)OR(rt0.c2)))OR(rt0.c4)))))OR(LIKE('635076207', vt0.c0)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3, vt0.c0 FROM vt0, rt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS INTEGER)) NOTNULL)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((CAST(t0.c0 AS INTEGER)) NOTNULL)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((CAST(t0.c0 AS INTEGER)) NOTNULL)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c3, t0.c0, rt0.c1, v0.c2, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c1))=((t0.c0))) IN (CASE vt0.c0  WHEN v0.c1 THEN t0.c0 END)) CROSS JOIN rt0 ON ((((rt0.c4)>=(v0.c2)))-(rt0.c2)) LEFT OUTER JOIN t0 ON LIKELIHOOD(CAST(rt0.c2 AS NUMERIC), 0.9710857506605606) GROUP BY rt0.c3, t0.c0, rt0.c1, v0.c2, v0.c0;
SELECT ALL * FROM rt0, vt0, t0;
SELECT ALL * FROM rt0, vt0, t0 NOT INDEXED WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((9.2535682E8)))) UNION ALL SELECT ALL * FROM rt0, vt0, t0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((9.2535682E8)))))) UNION ALL SELECT ALL * FROM rt0, vt0, t0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((9.2535682E8)))) ISNULL));
SELECT ALL * FROM rt0, vt0, t0;
SELECT DISTINCT v0.c2, t0.c0, v0.c0 FROM v0, t0;
SELECT DISTINCT v0.c2, t0.c0, v0.c0 FROM v0, t0 WHERE (CASE WHEN v0.c1 THEN v0.c1 ELSE -1517785427 END COLLATE NOCASE COLLATE NOCASE) UNION SELECT DISTINCT v0.c2, t0.c0, v0.c0 FROM v0, t0 WHERE ((NOT (CASE WHEN v0.c1 THEN v0.c1 ELSE -1517785427 END COLLATE NOCASE COLLATE NOCASE))) UNION SELECT DISTINCT v0.c2, t0.c0, v0.c0 FROM v0, t0 WHERE (((CASE WHEN v0.c1 THEN v0.c1 ELSE -1517785427 END COLLATE NOCASE COLLATE NOCASE) ISNULL));
SELECT DISTINCT v0.c2, t0.c0, v0.c0 FROM v0, t0;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, v0.c2, rt0.c1, rt0.c4, v0.c0, v0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, v0.c2, rt0.c1, rt0.c4, v0.c0, v0.c1;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, v0.c2, rt0.c1, rt0.c4, v0.c0, v0.c1 FROM v0, rt0 WHERE ((((v0.c2, rt0.c4, rt0.c2)) BETWEEN (((~ (rt0.c0)), (((rt0.c2))>((v0.c1))), ((v0.c0)||(v0.c2)))) AND ((((rt0.c3)>(rt0.c1)), ((rt0.c2) IS TRUE), v0.c2 COLLATE NOCASE)))) GROUP BY rt0.c0, rt0.c3, rt0.c2, v0.c2, rt0.c1, rt0.c4, v0.c0, v0.c1 UNION SELECT rt0.c0, rt0.c3, rt0.c2, v0.c2, rt0.c1, rt0.c4, v0.c0, v0.c1 FROM v0, rt0 WHERE ((NOT ((((v0.c2, rt0.c4, rt0.c2)) BETWEEN (((~ (rt0.c0)), (((rt0.c2))>((v0.c1))), ((v0.c0)||(v0.c2)))) AND ((((rt0.c3)>(rt0.c1)), ((rt0.c2) IS TRUE), v0.c2 COLLATE NOCASE)))))) GROUP BY rt0.c0, rt0.c3, rt0.c2, v0.c2, rt0.c1, rt0.c4, v0.c0, v0.c1 UNION SELECT rt0.c0, rt0.c3, rt0.c2, v0.c2, rt0.c1, rt0.c4, v0.c0, v0.c1 FROM v0, rt0 WHERE ((((((v0.c2, rt0.c4, rt0.c2)) BETWEEN (((~ (rt0.c0)), (((rt0.c2))>((v0.c1))), ((v0.c0)||(v0.c2)))) AND ((((rt0.c3)>(rt0.c1)), ((rt0.c2) IS TRUE), v0.c2 COLLATE NOCASE)))) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c2, v0.c2, rt0.c1, rt0.c4, v0.c0, v0.c1;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, v0.c2, rt0.c1, rt0.c4, v0.c0, v0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, v0.c2, rt0.c1, rt0.c4, v0.c0, v0.c1;
SELECT v0.c0 FROM v0, vt0, t0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0, t0 GROUP BY v0.c0 HAVING MIN(AVG(GROUP_CONCAT(GROUP_CONCAT(v0.c2)))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0, t0 GROUP BY v0.c0 HAVING (NOT (MIN(AVG(GROUP_CONCAT(GROUP_CONCAT(v0.c2)))))) UNION ALL SELECT v0.c0 FROM v0, vt0, t0 GROUP BY v0.c0 HAVING ((MIN(AVG(GROUP_CONCAT(GROUP_CONCAT(v0.c2))))) ISNULL);
SELECT ALL rt0.c0, vt0.c0, v0.c2 FROM v0 CROSS JOIN vt0 ON (((((~ (rt0.c3)))OR(vt0.c0)))AND(((rt0.c3)=(v0.c0)))) RIGHT OUTER JOIN rt0 ON rt0.c0 RIGHT OUTER JOIN t0 ON CAST(((rt0.c3) IS FALSE) AS TEXT);
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON (NOT (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c0 THEN 0.4547128964389555 WHEN vt0.c0 THEN vt0.c0 END));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON (NOT (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c0 THEN 0.4547128964389555 WHEN vt0.c0 THEN vt0.c0 END)) WHERE ((((((((rt0.c0, rt0.c3, rt0.c3))<>((NULL, rt0.c4, vt0.c0))))OR(CAST(vt0.c0 AS NUMERIC))))OR(LIKELIHOOD(DISTINCT rt0.c2, 0.8962870017971791)))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON (NOT (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c0 THEN 0.4547128964389555 WHEN vt0.c0 THEN vt0.c0 END)) WHERE ((NOT ((((((((rt0.c0, rt0.c3, rt0.c3))<>((NULL, rt0.c4, vt0.c0))))OR(CAST(vt0.c0 AS NUMERIC))))OR(LIKELIHOOD(DISTINCT rt0.c2, 0.8962870017971791)))))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON (NOT (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c0 THEN 0.4547128964389555 WHEN vt0.c0 THEN vt0.c0 END)) WHERE ((((((((((rt0.c0, rt0.c3, rt0.c3))<>((NULL, rt0.c4, vt0.c0))))OR(CAST(vt0.c0 AS NUMERIC))))OR(LIKELIHOOD(DISTINCT rt0.c2, 0.8962870017971791)))) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON (NOT (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c0 THEN 0.4547128964389555 WHEN vt0.c0 THEN vt0.c0 END));
SELECT ALL rt0.c0 FROM rt0, vt0 INNER JOIN t0 ON json_remove(DATETIME(vt0.c0, rt0.c2, rt0.c3, vt0.c0, vt0.c0), ((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 INNER JOIN t0 ON json_remove(DATETIME(vt0.c0, rt0.c2, rt0.c3, vt0.c0, vt0.c0), ((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) WHERE ((((rt0.c2 COLLATE BINARY))<((NULL)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 NOT INDEXED, vt0 INNER JOIN t0 ON json_remove(DATETIME(vt0.c0, rt0.c2, rt0.c3, vt0.c0, vt0.c0), ((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) WHERE ((NOT ((((rt0.c2 COLLATE BINARY))<((NULL)))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt0 INNER JOIN t0 ON json_remove(DATETIME(vt0.c0, rt0.c2, rt0.c3, vt0.c0, vt0.c0), ((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) WHERE ((((((rt0.c2 COLLATE BINARY))<((NULL)))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 INNER JOIN t0 ON json_remove(DATETIME(vt0.c0, rt0.c2, rt0.c3, vt0.c0, vt0.c0), ((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) GROUP BY rt0.c0;
SELECT ALL t0.c0, v0.c2, rt0.c4, rt0.c0, vt0.c0, v0.c1, rt0.c1, v0.c0 FROM t0, vt0, v0, rt0 GROUP BY t0.c0, v0.c2, rt0.c4, rt0.c0, vt0.c0, v0.c1, rt0.c1, v0.c0;
SELECT t0.c0, v0.c2, rt0.c4, rt0.c0, vt0.c0, v0.c1, rt0.c1, v0.c0 FROM t0, vt0, v0, rt0 GROUP BY t0.c0, v0.c2, rt0.c4, rt0.c0, vt0.c0, v0.c1, rt0.c1, v0.c0 HAVING MIN(SUM(rt0.c3)) UNION ALL SELECT ALL t0.c0, v0.c2, rt0.c4, rt0.c0, vt0.c0, v0.c1, rt0.c1, v0.c0 FROM t0, vt0, v0, rt0 NOT INDEXED GROUP BY t0.c0, v0.c2, rt0.c4, rt0.c0, vt0.c0, v0.c1, rt0.c1, v0.c0 HAVING (NOT (MIN(SUM(rt0.c3)))) UNION ALL SELECT t0.c0, v0.c2, rt0.c4, rt0.c0, vt0.c0, v0.c1, rt0.c1, v0.c0 FROM t0, vt0, v0, rt0 GROUP BY t0.c0, v0.c2, rt0.c4, rt0.c0, vt0.c0, v0.c1, rt0.c1, v0.c0 HAVING ((MIN(SUM(rt0.c3))) ISNULL);
SELECT ALL v0.c2 FROM v0;
SELECT v0.c2 FROM v0 WHERE ((((((v0.c1))<=((v0.c2))))*(CAST(v0.c1 AS INTEGER)))) UNION ALL SELECT v0.c2 FROM v0 WHERE ((NOT ((((((v0.c1))<=((v0.c2))))*(CAST(v0.c1 AS INTEGER)))))) UNION ALL SELECT v0.c2 FROM v0 WHERE ((((((((v0.c1))<=((v0.c2))))*(CAST(v0.c1 AS INTEGER)))) ISNULL));
SELECT ALL v0.c2 FROM v0;
SELECT DISTINCT t0.c0, vt0.c0, v0.c1, v0.c2 FROM t0, vt0, v0;
SELECT DISTINCT t0.c0, vt0.c0, v0.c1, v0.c2 FROM t0, vt0, v0 WHERE ((((v0.c2)) BETWEEN ((((v0.c0)||(v0.c0)))) AND ((t0.c0)))) UNION SELECT DISTINCT t0.c0, vt0.c0, v0.c1, v0.c2 FROM t0, vt0, v0 WHERE ((NOT ((((v0.c2)) BETWEEN ((((v0.c0)||(v0.c0)))) AND ((t0.c0)))))) UNION SELECT DISTINCT t0.c0, vt0.c0, v0.c1, v0.c2 FROM t0, vt0, v0 WHERE ((((((v0.c2)) BETWEEN ((((v0.c0)||(v0.c0)))) AND ((t0.c0)))) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0, v0.c1, v0.c2 FROM t0, vt0, v0;
SELECT vt0.c0, t0.c0, rt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c2, v0.c1, rt0.c1 FROM vt0, t0, rt0, v0 GROUP BY vt0.c0, t0.c0, rt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c2, v0.c1, rt0.c1;
SELECT ALL vt0.c0, t0.c0, rt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c2, v0.c1, rt0.c1 FROM vt0, t0, rt0, v0 WHERE (rt0.c1) GROUP BY vt0.c0, t0.c0, rt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c2, v0.c1, rt0.c1 UNION SELECT ALL vt0.c0, t0.c0, rt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c2, v0.c1, rt0.c1 FROM vt0, t0, rt0, v0 WHERE ((NOT (rt0.c1))) GROUP BY vt0.c0, t0.c0, rt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c2, v0.c1, rt0.c1 UNION SELECT vt0.c0, t0.c0, rt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c2, v0.c1, rt0.c1 FROM vt0, t0, rt0, v0 WHERE (((rt0.c1) ISNULL)) GROUP BY vt0.c0, t0.c0, rt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c2, v0.c1, rt0.c1;
SELECT vt0.c0, t0.c0, rt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c2, v0.c1, rt0.c1 FROM vt0, t0, rt0, v0 GROUP BY vt0.c0, t0.c0, rt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c2, v0.c1, rt0.c1;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING SUM(((MAX(rt0.c4))+(AVG(rt0.c4)))) UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (NOT (SUM(((MAX(rt0.c4))+(AVG(rt0.c4)))))) UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING ((SUM(((MAX(rt0.c4))+(AVG(rt0.c4))))) ISNULL);
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON LTRIM((- (v0.c0)), NULL) LEFT OUTER JOIN rt0 ON 4.4501158E7 CROSS JOIN vt0 ON '0.27673718655321267';
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON LTRIM((- (v0.c0)), NULL) LEFT OUTER JOIN rt0 ON 4.4501158E7 CROSS JOIN vt0 ON '0.27673718655321267' WHERE (CASE (v0.c0 IN ())  WHEN CASE WHEN t0.c0 THEN v0.c1 ELSE rt0.c1 END THEN CASE rt0.c1  WHEN v0.c0 THEN vt0.c0 ELSE 0.661418708366504 END END) UNION ALL SELECT * FROM v0 RIGHT OUTER JOIN t0 ON LTRIM((- (v0.c0)), NULL) LEFT OUTER JOIN rt0 ON 4.4501158E7 CROSS JOIN vt0 ON '0.27673718655321267' WHERE ((NOT (CASE (v0.c0 IN ())  WHEN CASE WHEN t0.c0 THEN v0.c1 ELSE rt0.c1 END THEN CASE rt0.c1  WHEN v0.c0 THEN vt0.c0 ELSE 0.661418708366504 END END))) UNION ALL SELECT ALL * FROM v0 RIGHT OUTER JOIN t0 ON LTRIM((- (v0.c0)), NULL) LEFT OUTER JOIN rt0 ON 4.4501158E7 CROSS JOIN vt0 ON '0.27673718655321267' WHERE (((CASE (v0.c0 IN ())  WHEN CASE WHEN t0.c0 THEN v0.c1 ELSE rt0.c1 END THEN CASE rt0.c1  WHEN v0.c0 THEN vt0.c0 ELSE 0.661418708366504 END END) ISNULL));
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON LTRIM((- (v0.c0)), NULL) LEFT OUTER JOIN rt0 ON 4.4501158E7 CROSS JOIN vt0 ON '0.27673718655321267';
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c3, v0.c1, v0.c2, t0.c0 FROM v0, rt0, t0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c3, v0.c1, v0.c2, t0.c0 FROM v0, rt0, t0 WHERE (IFNULL(((rt0.c2) IS FALSE), ((v0.c0)OR(rt0.c0)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c3, v0.c1, v0.c2, t0.c0 FROM v0, rt0, t0 WHERE ((NOT (IFNULL(((rt0.c2) IS FALSE), ((v0.c0)OR(rt0.c0)))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c3, v0.c1, v0.c2, t0.c0 FROM v0, rt0, t0 WHERE (((IFNULL(((rt0.c2) IS FALSE), ((v0.c0)OR(rt0.c0)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c3, v0.c1, v0.c2, t0.c0 FROM v0, rt0, t0;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, vt0.c0, rt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON CASE CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END  WHEN CAST(rt0.c0 AS NUMERIC) THEN (+ (rt0.c3)) ELSE rt0.c0 COLLATE BINARY END GROUP BY rt0.c1, rt0.c4, rt0.c3, vt0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, vt0.c0, rt0.c0, rt0.c2 FROM vt0 NOT INDEXED RIGHT OUTER JOIN rt0 ON CASE CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END  WHEN CAST(rt0.c0 AS NUMERIC) THEN (+ (rt0.c3)) ELSE rt0.c0 COLLATE BINARY END WHERE ((((rt0.c0, rt0.c3, vt0.c0)) BETWEEN ((rt0.c3 COLLATE BINARY, LIKELY(DISTINCT rt0.c2), (+ (rt0.c0)))) AND ((rt0.c3 COLLATE BINARY, ((rt0.c1) ISNULL), TYPEOF(DISTINCT vt0.c0))))) GROUP BY rt0.c1, rt0.c4, rt0.c3, vt0.c0, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c4, rt0.c3, vt0.c0, rt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON CASE CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END  WHEN CAST(rt0.c0 AS NUMERIC) THEN (+ (rt0.c3)) ELSE rt0.c0 COLLATE BINARY END WHERE ((NOT ((((rt0.c0, rt0.c3, vt0.c0)) BETWEEN ((rt0.c3 COLLATE BINARY, LIKELY(DISTINCT rt0.c2), (+ (rt0.c0)))) AND ((rt0.c3 COLLATE BINARY, ((rt0.c1) ISNULL), TYPEOF(DISTINCT vt0.c0))))))) GROUP BY rt0.c1, rt0.c4, rt0.c3, vt0.c0, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c4, rt0.c3, vt0.c0, rt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON CASE CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END  WHEN CAST(rt0.c0 AS NUMERIC) THEN (+ (rt0.c3)) ELSE rt0.c0 COLLATE BINARY END WHERE ((((((rt0.c0, rt0.c3, vt0.c0)) BETWEEN ((rt0.c3 COLLATE BINARY, LIKELY(DISTINCT rt0.c2), (+ (rt0.c0)))) AND ((rt0.c3 COLLATE BINARY, ((rt0.c1) ISNULL), TYPEOF(DISTINCT vt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c3, vt0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, vt0.c0, rt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON CASE CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END  WHEN CAST(rt0.c0 AS NUMERIC) THEN (+ (rt0.c3)) ELSE rt0.c0 COLLATE BINARY END GROUP BY rt0.c1, rt0.c4, rt0.c3, vt0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4;
SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING ((COUNT(*)) NOT NULL) UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING (NOT (((COUNT(*)) NOT NULL))) UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING ((((COUNT(*)) NOT NULL)) ISNULL);
SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4;
SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING ((COUNT(*)) NOT NULL) UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING (NOT (((COUNT(*)) NOT NULL))) UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING ((((COUNT(*)) NOT NULL)) ISNULL);
SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (RTRIM(((vt0.c0)-(vt0.c0)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (RTRIM(((vt0.c0)-(vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE (((RTRIM(((vt0.c0)-(vt0.c0)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c2 FROM rt0, vt0, t0;
SELECT DISTINCT rt0.c2 FROM rt0, vt0, t0 WHERE (vt0.c0) UNION SELECT DISTINCT rt0.c2 FROM rt0, vt0, t0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT rt0.c2 FROM rt0, vt0, t0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0, vt0, t0;
SELECT vt0.c0, rt0.c4 FROM v0, rt0, vt0, t0 GROUP BY vt0.c0, rt0.c4;
SELECT vt0.c0, rt0.c4 FROM v0, rt0, vt0, t0 WHERE (((load_extension(x'', t0.c0)) NOTNULL)) GROUP BY vt0.c0, rt0.c4 UNION SELECT vt0.c0, rt0.c4 FROM v0, rt0, vt0, t0 WHERE ((NOT (((load_extension(x'', t0.c0)) NOTNULL)))) GROUP BY vt0.c0, rt0.c4 UNION SELECT vt0.c0, rt0.c4 FROM v0, rt0, vt0, t0 WHERE (((((load_extension(x'', t0.c0)) NOTNULL)) ISNULL)) GROUP BY vt0.c0, rt0.c4;
SELECT ALL vt0.c0, rt0.c4, v0.c0 FROM vt0, t0, rt0, v0 GROUP BY vt0.c0, rt0.c4, v0.c0;
SELECT vt0.c0, rt0.c4, v0.c0 FROM vt0, t0, rt0, v0 GROUP BY vt0.c0, rt0.c4, v0.c0 HAVING ((((rt0.c4) BETWEEN (SUM(v0.c0)) AND (v0.c0)))IS NOT(((rt0.c1)+(GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT ALL vt0.c0, rt0.c4, v0.c0 FROM vt0, t0, rt0, v0 GROUP BY vt0.c0, rt0.c4, v0.c0 HAVING (NOT (((((rt0.c4) BETWEEN (SUM(v0.c0)) AND (v0.c0)))IS NOT(((rt0.c1)+(GROUP_CONCAT(rt0.c2))))))) UNION ALL SELECT vt0.c0, rt0.c4, v0.c0 FROM vt0, t0, rt0, v0 GROUP BY vt0.c0, rt0.c4, v0.c0 HAVING ((((((rt0.c4) BETWEEN (SUM(v0.c0)) AND (v0.c0)))IS NOT(((rt0.c1)+(GROUP_CONCAT(rt0.c2)))))) ISNULL);
SELECT ALL vt0.c0, rt0.c4, v0.c0 FROM vt0, t0, rt0, v0 GROUP BY vt0.c0, rt0.c4, v0.c0;
SELECT vt0.c0, rt0.c4, v0.c0 FROM vt0, t0, rt0, v0 GROUP BY vt0.c0, rt0.c4, v0.c0 HAVING ((((rt0.c4) BETWEEN (SUM(v0.c0)) AND (v0.c0)))IS NOT(((rt0.c1)+(GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT ALL vt0.c0, rt0.c4, v0.c0 FROM vt0, t0, rt0, v0 GROUP BY vt0.c0, rt0.c4, v0.c0 HAVING (NOT (((((rt0.c4) BETWEEN (SUM(v0.c0)) AND (v0.c0)))IS NOT(((rt0.c1)+(GROUP_CONCAT(rt0.c2))))))) UNION ALL SELECT vt0.c0, rt0.c4, v0.c0 FROM vt0, t0, rt0, v0 GROUP BY vt0.c0, rt0.c4, v0.c0 HAVING ((((((rt0.c4) BETWEEN (SUM(v0.c0)) AND (v0.c0)))IS NOT(((rt0.c1)+(GROUP_CONCAT(rt0.c2)))))) ISNULL);
SELECT ALL vt0.c0, rt0.c4, v0.c0 FROM vt0, t0, rt0, v0 GROUP BY vt0.c0, rt0.c4, v0.c0;
SELECT ALL SUM(((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(LTRIM(vt0.c0, vt0.c0))))OR(vt0.c0))) FROM vt0;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON '<]>!<).a';
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON '<]>!<).a' WHERE (((((t0.c0) NOT BETWEEN (rt0.c1) AND (-754788881)))-(((rt0.c3) IS FALSE)))) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON '<]>!<).a' WHERE ((NOT (((((t0.c0) NOT BETWEEN (rt0.c1) AND (-754788881)))-(((rt0.c3) IS FALSE)))))) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON '<]>!<).a' WHERE (((((((t0.c0) NOT BETWEEN (rt0.c1) AND (-754788881)))-(((rt0.c3) IS FALSE)))) ISNULL));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON '<]>!<).a';
SELECT DISTINCT t0.c0, vt0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0, t0;
SELECT DISTINCT t0.c0, vt0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0, t0 WHERE ((t0.c0 COLLATE RTRIM IN ())) UNION SELECT DISTINCT t0.c0, vt0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0, t0 WHERE ((NOT ((t0.c0 COLLATE RTRIM IN ())))) UNION SELECT DISTINCT t0.c0, vt0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0, t0 WHERE ((((t0.c0 COLLATE RTRIM IN ())) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CASE ((t0.c0)IS(t0.c0))  WHEN (((t0.c0))<=((t0.c0))) THEN (NOT (t0.c0)) END) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CASE ((t0.c0)IS(t0.c0))  WHEN (((t0.c0))<=((t0.c0))) THEN (NOT (t0.c0)) END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CASE ((t0.c0)IS(t0.c0))  WHEN (((t0.c0))<=((t0.c0))) THEN (NOT (t0.c0)) END) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2, rt0.c4;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2, rt0.c4 HAVING GROUP_CONCAT(MAX(rt0.c3)) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2, rt0.c4 HAVING (NOT (GROUP_CONCAT(MAX(rt0.c3)))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2, rt0.c4 HAVING ((GROUP_CONCAT(MAX(rt0.c3))) ISNULL);
SELECT ALL * FROM t0, v0, rt0, vt0;
SELECT ALL * FROM t0, v0, rt0, vt0 WHERE ((((rt0.c4 IN ())) NOTNULL)) UNION ALL SELECT * FROM t0, v0, rt0, vt0 WHERE ((NOT ((((rt0.c4 IN ())) NOTNULL)))) UNION ALL SELECT * FROM t0, v0, rt0, vt0 WHERE ((((((rt0.c4 IN ())) NOTNULL)) ISNULL));
SELECT ALL * FROM t0, v0, rt0, vt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT v0.c0, v0.c2, t0.c0 FROM vt0, rt0, t0 FULL OUTER JOIN v0 ON CASE (((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))  WHEN '1355216431' THEN CAST(v0.c0 AS TEXT) WHEN NULL THEN x'' COLLATE RTRIM WHEN CAST(x'f7309ff2' AS TEXT) THEN rt0.c2 END GROUP BY v0.c0, v0.c2, t0.c0;
SELECT ALL v0.c0, v0.c2, t0.c0 FROM vt0, rt0, t0 FULL OUTER JOIN v0 ON CASE (((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))  WHEN '1355216431' THEN CAST(v0.c0 AS TEXT) WHEN NULL THEN x'' COLLATE RTRIM WHEN CAST(x'f7309ff2' AS TEXT) THEN rt0.c2 END WHERE (((('-1598966236' IN ()))LIKE(x'f8cd1322'))) GROUP BY v0.c0, v0.c2, t0.c0 UNION SELECT ALL v0.c0, v0.c2, t0.c0 FROM vt0, rt0, t0 FULL OUTER JOIN v0 ON CASE (((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))  WHEN '1355216431' THEN CAST(v0.c0 AS TEXT) WHEN NULL THEN x'' COLLATE RTRIM WHEN CAST(x'f7309ff2' AS TEXT) THEN rt0.c2 END WHERE ((NOT (((('-1598966236' IN ()))LIKE(x'f8cd1322'))))) GROUP BY v0.c0, v0.c2, t0.c0 UNION SELECT v0.c0, v0.c2, t0.c0 FROM vt0, rt0, t0 FULL OUTER JOIN v0 ON CASE (((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))  WHEN '1355216431' THEN CAST(v0.c0 AS TEXT) WHEN NULL THEN x'' COLLATE RTRIM WHEN CAST(x'f7309ff2' AS TEXT) THEN rt0.c2 END WHERE (((((('-1598966236' IN ()))LIKE(x'f8cd1322'))) ISNULL)) GROUP BY v0.c0, v0.c2, t0.c0;
SELECT v0.c0, v0.c2, t0.c0 FROM vt0, rt0, t0 FULL OUTER JOIN v0 ON CASE (((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))  WHEN '1355216431' THEN CAST(v0.c0 AS TEXT) WHEN NULL THEN x'' COLLATE RTRIM WHEN CAST(x'f7309ff2' AS TEXT) THEN rt0.c2 END GROUP BY v0.c0, v0.c2, t0.c0;
SELECT rt0.c1, rt0.c4, v0.c1, vt0.c0, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c4, v0.c1, vt0.c0, v0.c0;
SELECT ALL rt0.c1, rt0.c4, v0.c1, vt0.c0, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c4, v0.c1, vt0.c0, v0.c0 HAVING v0.c2 UNION ALL SELECT rt0.c1, rt0.c4, v0.c1, vt0.c0, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c4, v0.c1, vt0.c0, v0.c0 HAVING (NOT (v0.c2)) UNION ALL SELECT ALL rt0.c1, rt0.c4, v0.c1, vt0.c0, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c4, v0.c1, vt0.c0, v0.c0 HAVING ((v0.c2) ISNULL);
SELECT rt0.c1, rt0.c4, v0.c1, vt0.c0, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c4, v0.c1, vt0.c0, v0.c0;
SELECT ALL rt0.c1, rt0.c4, v0.c1, vt0.c0, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c4, v0.c1, vt0.c0, v0.c0 HAVING v0.c2 UNION ALL SELECT rt0.c1, rt0.c4, v0.c1, vt0.c0, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c4, v0.c1, vt0.c0, v0.c0 HAVING (NOT (v0.c2)) UNION ALL SELECT ALL rt0.c1, rt0.c4, v0.c1, vt0.c0, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c4, v0.c1, vt0.c0, v0.c0 HAVING ((v0.c2) ISNULL);
SELECT rt0.c1, rt0.c4, v0.c1, vt0.c0, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c4, v0.c1, vt0.c0, v0.c0;
SELECT * FROM v0, rt0, vt0;
SELECT * FROM v0, rt0, vt0 WHERE (((vt0.c0)GLOB(((v0.c2) ISNULL)))) UNION ALL SELECT ALL * FROM v0, rt0, vt0 WHERE ((NOT (((vt0.c0)GLOB(((v0.c2) ISNULL)))))) UNION ALL SELECT ALL * FROM v0, rt0, vt0 WHERE (((((vt0.c0)GLOB(((v0.c2) ISNULL)))) ISNULL));
SELECT * FROM v0, rt0, vt0;
SELECT DISTINCT * FROM vt0, t0, v0;
SELECT DISTINCT * FROM vt0, t0, v0 WHERE (v0.c1) UNION SELECT DISTINCT * FROM vt0, t0, v0 WHERE ((NOT (v0.c1))) UNION SELECT DISTINCT * FROM vt0, t0, v0 WHERE (((v0.c1) ISNULL));
SELECT DISTINCT * FROM vt0, t0, v0;
SELECT ALL vt0.c0, v0.c2, v0.c0, rt0.c2, rt0.c3, t0.c0, rt0.c0, v0.c1 FROM rt0, t0, v0 RIGHT OUTER JOIN vt0 ON CAST('DJmSx{]}z' AS NUMERIC) GROUP BY vt0.c0, v0.c2, v0.c0, rt0.c2, rt0.c3, t0.c0, rt0.c0, v0.c1;
SELECT vt0.c0, v0.c2, v0.c0, rt0.c2, rt0.c3, t0.c0, rt0.c0, v0.c1 FROM rt0, t0, v0 RIGHT OUTER JOIN vt0 ON CAST('DJmSx{]}z' AS NUMERIC) WHERE (CASE WHEN NULL COLLATE RTRIM THEN ((x'') NOT BETWEEN (v0.c0) AND (rt0.c1)) WHEN ((v0.c0) IS TRUE) THEN x'0d80' WHEN ((v0.c2) IS TRUE) THEN v0.c2 ELSE (+ (rt0.c1)) END) GROUP BY vt0.c0, v0.c2, v0.c0, rt0.c2, rt0.c3, t0.c0, rt0.c0, v0.c1 UNION SELECT vt0.c0, v0.c2, v0.c0, rt0.c2, rt0.c3, t0.c0, rt0.c0, v0.c1 FROM rt0, t0, v0 RIGHT OUTER JOIN vt0 ON CAST('DJmSx{]}z' AS NUMERIC) WHERE ((NOT (CASE WHEN NULL COLLATE RTRIM THEN ((x'') NOT BETWEEN (v0.c0) AND (rt0.c1)) WHEN ((v0.c0) IS TRUE) THEN x'0d80' WHEN ((v0.c2) IS TRUE) THEN v0.c2 ELSE (+ (rt0.c1)) END))) GROUP BY vt0.c0, v0.c2, v0.c0, rt0.c2, rt0.c3, t0.c0, rt0.c0, v0.c1 UNION SELECT ALL vt0.c0, v0.c2, v0.c0, rt0.c2, rt0.c3, t0.c0, rt0.c0, v0.c1 FROM rt0, t0, v0 RIGHT OUTER JOIN vt0 ON CAST('DJmSx{]}z' AS NUMERIC) WHERE (((CASE WHEN NULL COLLATE RTRIM THEN ((x'') NOT BETWEEN (v0.c0) AND (rt0.c1)) WHEN ((v0.c0) IS TRUE) THEN x'0d80' WHEN ((v0.c2) IS TRUE) THEN v0.c2 ELSE (+ (rt0.c1)) END) ISNULL)) GROUP BY vt0.c0, v0.c2, v0.c0, rt0.c2, rt0.c3, t0.c0, rt0.c0, v0.c1;
SELECT ALL vt0.c0, v0.c2, v0.c0, rt0.c2, rt0.c3, t0.c0, rt0.c0, v0.c1 FROM rt0, t0, v0 RIGHT OUTER JOIN vt0 ON CAST('DJmSx{]}z' AS NUMERIC) GROUP BY vt0.c0, v0.c2, v0.c0, rt0.c2, rt0.c3, t0.c0, rt0.c0, v0.c1;
SELECT ALL rt0.c3, vt0.c0, t0.c0, rt0.c1 FROM t0, vt0, rt0 GROUP BY rt0.c3, vt0.c0, t0.c0, rt0.c1;
SELECT rt0.c3, vt0.c0, t0.c0, rt0.c1 FROM t0, vt0, rt0 GROUP BY rt0.c3, vt0.c0, t0.c0, rt0.c1 HAVING MAX(LIKELY(DISTINCT COUNT(*))) UNION ALL SELECT rt0.c3, vt0.c0, t0.c0, rt0.c1 FROM t0, vt0, rt0 GROUP BY rt0.c3, vt0.c0, t0.c0, rt0.c1 HAVING (NOT (MAX(LIKELY(DISTINCT COUNT(*))))) UNION ALL SELECT rt0.c3, vt0.c0, t0.c0, rt0.c1 FROM t0, vt0, rt0 GROUP BY rt0.c3, vt0.c0, t0.c0, rt0.c1 HAVING ((MAX(LIKELY(DISTINCT COUNT(*)))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0 NOT INDEXED, vt0 WHERE (((LAST_INSERT_ROWID()) BETWEEN (((0.6461670002792298) NOT BETWEEN (rt0.c4) AND (rt0.c4))) AND ((NOT (vt0.c0))))) UNION ALL SELECT * FROM rt0 NOT INDEXED, vt0 WHERE ((NOT (((LAST_INSERT_ROWID()) BETWEEN (((0.6461670002792298) NOT BETWEEN (rt0.c4) AND (rt0.c4))) AND ((NOT (vt0.c0))))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((((LAST_INSERT_ROWID()) BETWEEN (((0.6461670002792298) NOT BETWEEN (rt0.c4) AND (rt0.c4))) AND ((NOT (vt0.c0))))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((NULL IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((NULL IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((NULL IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((+ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((+ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((+ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING CASE WHEN GROUP_CONCAT(MIN(v0.c2)) THEN ((v0.c1)%(v0.c0)) WHEN (((x'58d9', GROUP_CONCAT(v0.c0), COUNT(*), MAX(v0.c1), v0.c0))<>((v0.c0, v0.c2, v0.c2, TOTAL(COUNT(MAX(v0.c1))), v0.c2))) THEN GROUP_CONCAT(v0.c0) WHEN (v0.c1 IN ()) THEN '' ELSE COUNT(*) END UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (NOT (CASE WHEN GROUP_CONCAT(MIN(v0.c2)) THEN ((v0.c1)%(v0.c0)) WHEN (((x'58d9', GROUP_CONCAT(v0.c0), COUNT(*), MAX(v0.c1), v0.c0))!=((v0.c0, v0.c2, v0.c2, TOTAL(COUNT(MAX(v0.c1))), v0.c2))) THEN GROUP_CONCAT(v0.c0) WHEN (v0.c1 IN ()) THEN '' ELSE COUNT(*) END)) UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING ((CASE WHEN GROUP_CONCAT(MIN(v0.c2)) THEN ((v0.c1)%(v0.c0)) WHEN (((x'58d9', GROUP_CONCAT(v0.c0), COUNT(*), MAX(v0.c1), v0.c0))!=((v0.c0, v0.c2, v0.c2, TOTAL(COUNT(MAX(v0.c1))), v0.c2))) THEN GROUP_CONCAT(v0.c0) WHEN (v0.c1 IN ()) THEN '' ELSE COUNT(*) END) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ())) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((vt0.c0 COLLATE BINARY IN ())))) UNION ALL SELECT * FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY IN ())) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT v0.c2, rt0.c3, rt0.c0 FROM rt0, v0, t0;
SELECT DISTINCT v0.c2, rt0.c3, rt0.c0 FROM rt0, v0, t0 WHERE (((((v0.c1)) BETWEEN (('')) AND ((rt0.c0))) IN ())) UNION SELECT DISTINCT v0.c2, rt0.c3, rt0.c0 FROM rt0, v0, t0 WHERE ((NOT (((((v0.c1)) BETWEEN (('')) AND ((rt0.c0))) IN ())))) UNION SELECT DISTINCT v0.c2, rt0.c3, rt0.c0 FROM rt0, v0, t0 WHERE (((((((v0.c1)) BETWEEN (('')) AND ((rt0.c0))) IN ())) ISNULL));
SELECT DISTINCT v0.c2, rt0.c3, rt0.c0 FROM rt0, v0, t0;
SELECT ALL rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (x'') GROUP BY rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c1 UNION SELECT rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((NOT (x''))) GROUP BY rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c1;
SELECT ALL t0.c0, v0.c2, v0.c1, rt0.c3, rt0.c0 FROM t0, v0, rt0 GROUP BY t0.c0, v0.c2, v0.c1, rt0.c3, rt0.c0;
SELECT ALL t0.c0, v0.c2, v0.c1, rt0.c3, rt0.c0 FROM t0 NOT INDEXED, v0, rt0 GROUP BY t0.c0, v0.c2, v0.c1, rt0.c3, rt0.c0 HAVING TOTAL(TOTAL(GROUP_CONCAT(rt0.c1))) UNION ALL SELECT ALL t0.c0, v0.c2, v0.c1, rt0.c3, rt0.c0 FROM t0, v0, rt0 GROUP BY t0.c0, v0.c2, v0.c1, rt0.c3, rt0.c0 HAVING (NOT (TOTAL(TOTAL(GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT t0.c0, v0.c2, v0.c1, rt0.c3, rt0.c0 FROM t0, v0, rt0 GROUP BY t0.c0, v0.c2, v0.c1, rt0.c3, rt0.c0 HAVING ((TOTAL(TOTAL(GROUP_CONCAT(rt0.c1)))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END) NOTNULL)) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END) NOTNULL)))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END) NOTNULL)) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c0)-(t0.c0)))&(((x'086a') NOT NULL)));
SELECT DISTINCT t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c0)-(t0.c0)))&(((x'086a') NOT NULL))) WHERE ((((((((vt0.c0))<=((vt0.c0))))OR(((t0.c0)<(vt0.c0)))))AND((+ (t0.c0))))) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c0)-(t0.c0)))&(((x'086a') NOT NULL))) WHERE ((NOT ((((((((vt0.c0))<=((vt0.c0))))OR(((t0.c0)<(vt0.c0)))))AND((+ (t0.c0))))))) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c0)-(t0.c0)))&(((x'086a') NOT NULL))) WHERE ((((((((((vt0.c0))<=((vt0.c0))))OR(((t0.c0)<(vt0.c0)))))AND((+ (t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c0)-(t0.c0)))&(((x'086a') NOT NULL)));
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) NOTNULL)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((t0.c0) NOTNULL)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((t0.c0) NOTNULL)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON '' CROSS JOIN vt0 ON (((+ (rt0.c3)))==(((v0.c0) IS TRUE))) LEFT OUTER JOIN v0 ON ((((v0.c1)OR(rt0.c2)))AND(rt0.c2)) COLLATE RTRIM GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON '' CROSS JOIN vt0 ON (((+ (rt0.c3)))==(((v0.c0) IS TRUE))) LEFT OUTER JOIN v0 ON ((((v0.c1)OR(rt0.c2)))AND(rt0.c2)) COLLATE RTRIM GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0 HAVING SUM((rt0.c1 IN (MAX(GROUP_CONCAT(AVG(AVG(TOTAL(rt0.c2)))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON '' CROSS JOIN vt0 ON (((+ (rt0.c3)))=(((v0.c0) IS TRUE))) LEFT OUTER JOIN v0 ON ((((v0.c1)OR(rt0.c2)))AND(rt0.c2)) COLLATE RTRIM GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0 HAVING (NOT (SUM((rt0.c1 IN (MAX(GROUP_CONCAT(AVG(AVG(TOTAL(rt0.c2)))))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON '' CROSS JOIN vt0 ON (((+ (rt0.c3)))=(((v0.c0) IS TRUE))) LEFT OUTER JOIN v0 ON ((((v0.c1)OR(rt0.c2)))AND(rt0.c2)) COLLATE RTRIM GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c0 HAVING ((SUM((rt0.c1 IN (MAX(GROUP_CONCAT(AVG(AVG(TOTAL(rt0.c2))))))))) ISNULL);
SELECT ALL * FROM v0, vt0, rt0, t0;
SELECT ALL * FROM v0, vt0, rt0, t0 WHERE ((((v0.c2 IN (''))) IS FALSE)) UNION ALL SELECT ALL * FROM v0, vt0, rt0, t0 WHERE ((NOT ((((v0.c2 IN (''))) IS FALSE)))) UNION ALL SELECT ALL * FROM v0, vt0, rt0, t0 WHERE ((((((v0.c2 IN (''))) IS FALSE)) ISNULL));
SELECT ALL * FROM v0, vt0, rt0, t0;
SELECT DISTINCT t0.c0, v0.c2, rt0.c3, v0.c1, rt0.c2, v0.c0, rt0.c0 FROM vt0, t0 RIGHT OUTER JOIN v0 ON CAST(CAST(vt0.c0 AS INTEGER) AS REAL) RIGHT OUTER JOIN rt0 ON (((t0.c0 COLLATE BINARY))<((((v0.c1)LIKE(rt0.c4)))));
SELECT DISTINCT t0.c0, v0.c2, rt0.c3, v0.c1, rt0.c2, v0.c0, rt0.c0 FROM vt0, t0 RIGHT OUTER JOIN v0 ON CAST(CAST(vt0.c0 AS INTEGER) AS REAL) RIGHT OUTER JOIN rt0 ON (((t0.c0 COLLATE BINARY))<((((v0.c1)LIKE(rt0.c4))))) WHERE ((x'7d34' COLLATE RTRIM IN ())) UNION SELECT DISTINCT t0.c0, v0.c2, rt0.c3, v0.c1, rt0.c2, v0.c0, rt0.c0 FROM vt0, t0 RIGHT OUTER JOIN v0 ON CAST(CAST(vt0.c0 AS INTEGER) AS REAL) RIGHT OUTER JOIN rt0 ON (((t0.c0 COLLATE BINARY))<((((v0.c1)LIKE(rt0.c4))))) WHERE ((NOT ((x'7d34' COLLATE RTRIM IN ())))) UNION SELECT DISTINCT t0.c0, v0.c2, rt0.c3, v0.c1, rt0.c2, v0.c0, rt0.c0 FROM vt0, t0 RIGHT OUTER JOIN v0 ON CAST(CAST(vt0.c0 AS INTEGER) AS REAL) RIGHT OUTER JOIN rt0 ON (((t0.c0 COLLATE BINARY))<((((v0.c1)LIKE(rt0.c4))))) WHERE ((((x'7d34' COLLATE RTRIM IN ())) ISNULL));
SELECT DISTINCT t0.c0, v0.c2, rt0.c3, v0.c1, rt0.c2, v0.c0, rt0.c0 FROM vt0, t0 RIGHT OUTER JOIN v0 ON CAST(CAST(vt0.c0 AS INTEGER) AS REAL) RIGHT OUTER JOIN rt0 ON (((t0.c0 COLLATE BINARY))<((((v0.c1)LIKE(rt0.c4)))));
SELECT rt0.c0, rt0.c4, vt0.c0, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c4, vt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c4, vt0.c0, rt0.c3 FROM vt0, rt0 WHERE (x'' COLLATE RTRIM) GROUP BY rt0.c0, rt0.c4, vt0.c0, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c4, vt0.c0, rt0.c3 FROM vt0, rt0 WHERE ((NOT (x'' COLLATE RTRIM))) GROUP BY rt0.c0, rt0.c4, vt0.c0, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c4, vt0.c0, rt0.c3 FROM vt0, rt0 WHERE (((x'' COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0, rt0.c4, vt0.c0, rt0.c3;
SELECT rt0.c0, rt0.c4, vt0.c0, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c4, vt0.c0, rt0.c3;
SELECT rt0.c4, t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, v0.c1 FROM rt0, v0, vt0, t0 GROUP BY rt0.c4, t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, v0.c1;
SELECT ALL rt0.c4, t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, v0.c1 FROM rt0, v0, vt0, t0 GROUP BY rt0.c4, t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, v0.c1 HAVING v0.c1 UNION ALL SELECT rt0.c4, t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, v0.c1 FROM rt0, v0, vt0, t0 GROUP BY rt0.c4, t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, v0.c1 HAVING (NOT (v0.c1)) UNION ALL SELECT rt0.c4, t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, v0.c1 FROM rt0, v0, vt0, t0 GROUP BY rt0.c4, t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, v0.c1 HAVING ((v0.c1) ISNULL);
SELECT rt0.c4, t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, v0.c1 FROM rt0, v0, vt0, t0 GROUP BY rt0.c4, t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, v0.c1;
SELECT ALL rt0.c4, t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, v0.c1 FROM rt0, v0, vt0, t0 GROUP BY rt0.c4, t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, v0.c1 HAVING v0.c1 UNION ALL SELECT rt0.c4, t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, v0.c1 FROM rt0, v0, vt0, t0 GROUP BY rt0.c4, t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, v0.c1 HAVING (NOT (v0.c1)) UNION ALL SELECT rt0.c4, t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, v0.c1 FROM rt0, v0, vt0, t0 GROUP BY rt0.c4, t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, v0.c1 HAVING ((v0.c1) ISNULL);
SELECT rt0.c4, t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, v0.c1 FROM rt0, v0, vt0, t0 GROUP BY rt0.c4, t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, v0.c1;
SELECT v0.c0, vt0.c0, t0.c0, v0.c2, v0.c1 FROM v0, vt0, t0;
SELECT v0.c0, vt0.c0, t0.c0, v0.c2, v0.c1 FROM v0, vt0, t0 WHERE (((CAST(t0.c0 AS INTEGER))GLOB(((v0.c1)>(v0.c1))))) UNION ALL SELECT ALL v0.c0, vt0.c0, t0.c0, v0.c2, v0.c1 FROM v0, vt0, t0 WHERE ((NOT (((CAST(t0.c0 AS INTEGER))GLOB(((v0.c1)>(v0.c1))))))) UNION ALL SELECT v0.c0, vt0.c0, t0.c0, v0.c2, v0.c1 FROM v0, vt0, t0 WHERE (((((CAST(t0.c0 AS INTEGER))GLOB(((v0.c1)>(v0.c1))))) ISNULL));
SELECT v0.c0, vt0.c0, t0.c0, v0.c2, v0.c1 FROM v0, vt0, t0;
SELECT DISTINCT vt0.c0, v0.c1, rt0.c4, v0.c2, t0.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 INNER JOIN t0 ON x'' COLLATE NOCASE FULL OUTER JOIN vt0 ON CAST(((v0.c2) BETWEEN (rt0.c4) AND (rt0.c2)) AS TEXT);
SELECT DISTINCT vt0.c0, v0.c1, rt0.c4, v0.c2, t0.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 INNER JOIN t0 ON x'' COLLATE NOCASE FULL OUTER JOIN vt0 ON CAST(((v0.c2) BETWEEN (rt0.c4) AND (rt0.c2)) AS TEXT) WHERE (((CASE v0.c2  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END) BETWEEN ((((rt0.c4, vt0.c0, vt0.c0)) BETWEEN ((t0.c0, NULL, rt0.c3)) AND ((rt0.c3, rt0.c2, vt0.c0)))) AND (rt0.c2 COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0, v0.c1, rt0.c4, v0.c2, t0.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 INNER JOIN t0 ON x'' COLLATE NOCASE FULL OUTER JOIN vt0 ON CAST(((v0.c2) BETWEEN (rt0.c4) AND (rt0.c2)) AS TEXT) WHERE ((NOT (((CASE v0.c2  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END) BETWEEN ((((rt0.c4, vt0.c0, vt0.c0)) BETWEEN ((t0.c0, NULL, rt0.c3)) AND ((rt0.c3, rt0.c2, vt0.c0)))) AND (rt0.c2 COLLATE NOCASE))))) UNION SELECT DISTINCT vt0.c0, v0.c1, rt0.c4, v0.c2, t0.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 INNER JOIN t0 ON x'' COLLATE NOCASE FULL OUTER JOIN vt0 ON CAST(((v0.c2) BETWEEN (rt0.c4) AND (rt0.c2)) AS TEXT) WHERE (((((CASE v0.c2  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END) BETWEEN ((((rt0.c4, vt0.c0, vt0.c0)) BETWEEN ((t0.c0, NULL, rt0.c3)) AND ((rt0.c3, rt0.c2, vt0.c0)))) AND (rt0.c2 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c1, rt0.c4, v0.c2, t0.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 INNER JOIN t0 ON x'' COLLATE NOCASE FULL OUTER JOIN vt0 ON CAST(((v0.c2) BETWEEN (rt0.c4) AND (rt0.c2)) AS TEXT);
SELECT rt0.c0, vt0.c0 FROM vt0, rt0, t0 GROUP BY rt0.c0, vt0.c0;
SELECT ALL rt0.c0, vt0.c0 FROM vt0, rt0, t0 WHERE (((((rt0.c4)LIKE(t0.c0))) NOT BETWEEN (((0.8491027752556878) NOT BETWEEN (vt0.c0) AND (rt0.c2))) AND ((rt0.c3 IN (t0.c0))))) GROUP BY rt0.c0, vt0.c0 UNION SELECT rt0.c0, vt0.c0 FROM vt0, rt0, t0 WHERE ((NOT (((((rt0.c4)LIKE(t0.c0))) NOT BETWEEN (((0.8491027752556878) NOT BETWEEN (vt0.c0) AND (rt0.c2))) AND ((rt0.c3 IN (t0.c0))))))) GROUP BY rt0.c0, vt0.c0 UNION SELECT rt0.c0, vt0.c0 FROM vt0 NOT INDEXED, rt0, t0 WHERE (((((((rt0.c4)LIKE(t0.c0))) NOT BETWEEN (((0.8491027752556878) NOT BETWEEN (vt0.c0) AND (rt0.c2))) AND ((rt0.c3 IN (t0.c0))))) ISNULL)) GROUP BY rt0.c0, vt0.c0;
SELECT rt0.c0, vt0.c0 FROM vt0, rt0, t0 GROUP BY rt0.c0, vt0.c0;
SELECT ALL rt0.c3, rt0.c0, vt0.c0, rt0.c2, v0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c3, rt0.c0, vt0.c0, rt0.c2, v0.c0;
SELECT rt0.c3, rt0.c0, vt0.c0, rt0.c2, v0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c3, rt0.c0, vt0.c0, rt0.c2, v0.c0 HAVING TOTAL(TOTAL(SUM(SUM(rt0.c1)))) UNION ALL SELECT rt0.c3, rt0.c0, vt0.c0, rt0.c2, v0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c3, rt0.c0, vt0.c0, rt0.c2, v0.c0 HAVING (NOT (TOTAL(TOTAL(SUM(SUM(rt0.c1)))))) UNION ALL SELECT rt0.c3, rt0.c0, vt0.c0, rt0.c2, v0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c3, rt0.c0, vt0.c0, rt0.c2, v0.c0 HAVING ((TOTAL(TOTAL(SUM(SUM(rt0.c1))))) ISNULL);
SELECT rt0.c0, v0.c1, rt0.c4, v0.c0, v0.c2, rt0.c2 FROM t0, v0, vt0, rt0;
SELECT ALL rt0.c0, v0.c1, rt0.c4, v0.c0, v0.c2, rt0.c2 FROM t0, v0, vt0, rt0 WHERE (x'1fae') UNION ALL SELECT rt0.c0, v0.c1, rt0.c4, v0.c0, v0.c2, rt0.c2 FROM t0, v0, vt0, rt0 WHERE ((NOT (x'1fae'))) UNION ALL SELECT rt0.c0, v0.c1, rt0.c4, v0.c0, v0.c2, rt0.c2 FROM t0, v0, vt0, rt0 WHERE (((x'1fae') ISNULL));
SELECT rt0.c0, v0.c1, rt0.c4, v0.c0, v0.c2, rt0.c2 FROM t0, v0, vt0, rt0;
SELECT DISTINCT v0.c0, v0.c2 FROM v0;
SELECT DISTINCT v0.c0, v0.c2 FROM v0 WHERE (json_quote(TIME('-882602372', v0.c0, v0.c1))) UNION SELECT DISTINCT v0.c0, v0.c2 FROM v0 WHERE ((NOT (json_quote(TIME('-882602372', v0.c0, v0.c1))))) UNION SELECT DISTINCT v0.c0, v0.c2 FROM v0 WHERE (((json_quote(TIME('-882602372', v0.c0, v0.c1))) ISNULL));
SELECT DISTINCT v0.c0, v0.c2 FROM v0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0 IN ())) BETWEEN ('303467888') AND (((t0.c0) NOTNULL)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0 IN ())) BETWEEN ('303467888') AND (((t0.c0) NOTNULL)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((t0.c0 IN ())) BETWEEN ('303467888') AND (((t0.c0) NOTNULL)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM t0, vt0, rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM t0, vt0, rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c2 HAVING ((COUNT(COUNT(*))) IS TRUE) COLLATE BINARY UNION ALL SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM t0, vt0, rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c2 HAVING (NOT (((COUNT(COUNT(*))) IS TRUE) COLLATE BINARY)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM t0, vt0, rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c2 HAVING ((((COUNT(COUNT(*))) IS TRUE) COLLATE BINARY) ISNULL);
SELECT ALL * FROM vt0, t0, rt0;
SELECT ALL * FROM vt0, t0, rt0 WHERE (((CAST(rt0.c3 AS NUMERIC))IS(((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0))))) UNION ALL SELECT * FROM vt0, t0, rt0 WHERE ((NOT (((CAST(rt0.c3 AS NUMERIC))IS(((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0))))))) UNION ALL SELECT * FROM vt0, t0, rt0 WHERE (((((CAST(rt0.c3 AS NUMERIC))IS(((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0))))) ISNULL));
SELECT ALL * FROM vt0, t0, rt0;
SELECT DISTINCT * FROM rt0, t0, v0, vt0;
SELECT DISTINCT * FROM rt0, t0, v0, vt0 WHERE (v0.c1) UNION SELECT DISTINCT * FROM rt0, t0, v0, vt0 WHERE ((NOT (v0.c1))) UNION SELECT DISTINCT * FROM rt0, t0, v0, vt0 WHERE (((v0.c1) ISNULL));
SELECT DISTINCT * FROM rt0, t0, v0, vt0;
SELECT ALL t0.c0, rt0.c0, v0.c2, rt0.c2 FROM vt0, rt0, t0 RIGHT OUTER JOIN v0 ON ((~ (vt0.c0)) IN ((((rt0.c4, rt0.c3, vt0.c0)) BETWEEN ((rt0.c2, v0.c2, vt0.c0)) AND ((vt0.c0, rt0.c1, v0.c1))), rt0.c2 COLLATE RTRIM)) GROUP BY t0.c0, rt0.c0, v0.c2, rt0.c2;
SELECT t0.c0, rt0.c0, v0.c2, rt0.c2 FROM vt0, rt0, t0 RIGHT OUTER JOIN v0 ON ((~ (vt0.c0)) IN ((((rt0.c4, rt0.c3, vt0.c0)) BETWEEN ((rt0.c2, v0.c2, vt0.c0)) AND ((vt0.c0, rt0.c1, v0.c1))), rt0.c2 COLLATE RTRIM)) WHERE (v0.c0) GROUP BY t0.c0, rt0.c0, v0.c2, rt0.c2 UNION SELECT ALL t0.c0, rt0.c0, v0.c2, rt0.c2 FROM vt0, rt0, t0 RIGHT OUTER JOIN v0 ON ((~ (vt0.c0)) IN ((((rt0.c4, rt0.c3, vt0.c0)) BETWEEN ((rt0.c2, v0.c2, vt0.c0)) AND ((vt0.c0, rt0.c1, v0.c1))), rt0.c2 COLLATE RTRIM)) WHERE ((NOT (v0.c0))) GROUP BY t0.c0, rt0.c0, v0.c2, rt0.c2 UNION SELECT t0.c0, rt0.c0, v0.c2, rt0.c2 FROM vt0, rt0, t0 RIGHT OUTER JOIN v0 ON ((~ (vt0.c0)) IN ((((rt0.c4, rt0.c3, vt0.c0)) BETWEEN ((rt0.c2, v0.c2, vt0.c0)) AND ((vt0.c0, rt0.c1, v0.c1))), rt0.c2 COLLATE RTRIM)) WHERE (((v0.c0) ISNULL)) GROUP BY t0.c0, rt0.c0, v0.c2, rt0.c2;
SELECT ALL t0.c0, rt0.c0, v0.c2, rt0.c2 FROM vt0, rt0, t0 RIGHT OUTER JOIN v0 ON ((~ (vt0.c0)) IN ((((rt0.c4, rt0.c3, vt0.c0)) BETWEEN ((rt0.c2, v0.c2, vt0.c0)) AND ((vt0.c0, rt0.c1, v0.c1))), rt0.c2 COLLATE RTRIM)) GROUP BY t0.c0, rt0.c0, v0.c2, rt0.c2;
SELECT ALL rt0.c4, v0.c0, vt0.c0, rt0.c2, v0.c2, rt0.c3, t0.c0 FROM rt0, vt0, v0, t0 GROUP BY rt0.c4, v0.c0, vt0.c0, rt0.c2, v0.c2, rt0.c3, t0.c0;
SELECT ALL rt0.c4, v0.c0, vt0.c0, rt0.c2, v0.c2, rt0.c3, t0.c0 FROM rt0, vt0, v0, t0 GROUP BY rt0.c4, v0.c0, vt0.c0, rt0.c2, v0.c2, rt0.c3, t0.c0 HAVING MIN(CAST(TOTAL(COUNT(vt0.c0)) AS BLOB)) UNION ALL SELECT rt0.c4, v0.c0, vt0.c0, rt0.c2, v0.c2, rt0.c3, t0.c0 FROM rt0, vt0, v0, t0 GROUP BY rt0.c4, v0.c0, vt0.c0, rt0.c2, v0.c2, rt0.c3, t0.c0 HAVING (NOT (MIN(CAST(TOTAL(COUNT(vt0.c0)) AS BLOB)))) UNION ALL SELECT ALL rt0.c4, v0.c0, vt0.c0, rt0.c2, v0.c2, rt0.c3, t0.c0 FROM rt0, vt0, v0, t0 GROUP BY rt0.c4, v0.c0, vt0.c0, rt0.c2, v0.c2, rt0.c3, t0.c0 HAVING ((MIN(CAST(TOTAL(COUNT(vt0.c0)) AS BLOB))) ISNULL);
SELECT ALL vt0.c0, rt0.c3, v0.c1, rt0.c2, rt0.c0, v0.c2, v0.c0 FROM vt0 INNER JOIN v0 ON ((rt0.c3)GLOB((rt0.c3 IN (rt0.c0)))) LEFT OUTER JOIN rt0 ON CASE (- (v0.c2))  WHEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (vt0.c0)) THEN ((rt0.c4)GLOB(rt0.c1)) ELSE (vt0.c0 IN (rt0.c3, 0xffffffff91010e6e)) END;
SELECT vt0.c0, rt0.c3, v0.c1, rt0.c2, rt0.c0, v0.c2, v0.c0 FROM vt0 INNER JOIN v0 ON ((rt0.c3)GLOB((rt0.c3 IN (rt0.c0)))) LEFT OUTER JOIN rt0 ON CASE (- (v0.c2))  WHEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (vt0.c0)) THEN ((rt0.c4)GLOB(rt0.c1)) ELSE (vt0.c0 IN (rt0.c3, 0Xffffffff91010e6e)) END WHERE (((((((v0.c2)||(v0.c0)))OR(CAST(0x2b530fe1 AS REAL))))AND((+ (rt0.c4))))) UNION ALL SELECT ALL vt0.c0, rt0.c3, v0.c1, rt0.c2, rt0.c0, v0.c2, v0.c0 FROM vt0 INNER JOIN v0 ON ((rt0.c3)GLOB((rt0.c3 IN (rt0.c0)))) LEFT OUTER JOIN rt0 ON CASE (- (v0.c2))  WHEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (vt0.c0)) THEN ((rt0.c4)GLOB(rt0.c1)) ELSE (vt0.c0 IN (rt0.c3, 0Xffffffff91010e6e)) END WHERE ((NOT (((((((v0.c2)||(v0.c0)))OR(CAST(0x2b530fe1 AS REAL))))AND((+ (rt0.c4))))))) UNION ALL SELECT vt0.c0, rt0.c3, v0.c1, rt0.c2, rt0.c0, v0.c2, v0.c0 FROM vt0 INNER JOIN v0 ON ((rt0.c3)GLOB((rt0.c3 IN (rt0.c0)))) LEFT OUTER JOIN rt0 ON CASE (- (v0.c2))  WHEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (vt0.c0)) THEN ((rt0.c4)GLOB(rt0.c1)) ELSE (vt0.c0 IN (rt0.c3, 0Xffffffff91010e6e)) END WHERE (((((((((v0.c2)||(v0.c0)))OR(CAST(0x2b530fe1 AS REAL))))AND((+ (rt0.c4))))) ISNULL));
SELECT ALL vt0.c0, rt0.c3, v0.c1, rt0.c2, rt0.c0, v0.c2, v0.c0 FROM vt0 INNER JOIN v0 ON ((rt0.c3)GLOB((rt0.c3 IN (rt0.c0)))) LEFT OUTER JOIN rt0 ON CASE (- (v0.c2))  WHEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (vt0.c0)) THEN ((rt0.c4)GLOB(rt0.c1)) ELSE (vt0.c0 IN (rt0.c3, 0xffffffff91010e6e)) END;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((((rt0.c4)OR(rt0.c4)))OR(t0.c0))) IS TRUE) LEFT OUTER JOIN v0 ON ((v0.c0)IS(x'')) COLLATE NOCASE LEFT OUTER JOIN t0 ON CAST('' AS NUMERIC);
SELECT v0.c1, v0.c0, t0.c0, vt0.c0 FROM rt0, vt0, v0 RIGHT OUTER JOIN t0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))||(UNLIKELY(DISTINCT rt0.c0))) GROUP BY v0.c1, v0.c0, t0.c0, vt0.c0;
SELECT ALL v0.c1, v0.c0, t0.c0, vt0.c0 FROM rt0, vt0, v0 RIGHT OUTER JOIN t0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))||(UNLIKELY(DISTINCT rt0.c0))) WHERE (CAST(((t0.c0)<(rt0.c3)) AS BLOB)) GROUP BY v0.c1, v0.c0, t0.c0, vt0.c0 UNION SELECT ALL v0.c1, v0.c0, t0.c0, vt0.c0 FROM rt0, vt0, v0 RIGHT OUTER JOIN t0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))||(UNLIKELY(DISTINCT rt0.c0))) WHERE ((NOT (CAST(((t0.c0)<(rt0.c3)) AS BLOB)))) GROUP BY v0.c1, v0.c0, t0.c0, vt0.c0 UNION SELECT ALL v0.c1, v0.c0, t0.c0, vt0.c0 FROM rt0, vt0, v0 RIGHT OUTER JOIN t0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))||(UNLIKELY(DISTINCT rt0.c0))) WHERE (((CAST(((t0.c0)<(rt0.c3)) AS BLOB)) ISNULL)) GROUP BY v0.c1, v0.c0, t0.c0, vt0.c0;
SELECT v0.c1, v0.c0, t0.c0, vt0.c0 FROM rt0, vt0, v0 RIGHT OUTER JOIN t0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))||(UNLIKELY(DISTINCT rt0.c0))) GROUP BY v0.c1, v0.c0, t0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MAX(vt0.c0))AND(COUNT(*))))AND(AVG(SUM(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((MAX(vt0.c0))AND(COUNT(*))))AND(AVG(SUM(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((MAX(vt0.c0))AND(COUNT(*))))AND(AVG(SUM(vt0.c0))))) ISNULL);
SELECT ALL MAX(((((((v0.c1)OR(v0.c2)))AND(x'')))AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((v0.c2)))))) FROM vt0, rt0, v0;
SELECT * FROM t0, rt0, v0;
SELECT ALL * FROM t0, rt0, v0 WHERE (((((((((((((rt0.c3)AND(v0.c1)))AND(t0.c0)))OR(v0.c1)))OR(t0.c0)))OR(LOWER(rt0.c2))))OR((+ (rt0.c4))))) UNION ALL SELECT * FROM t0, rt0, v0 WHERE ((NOT (((((((((((((rt0.c3)AND(v0.c1)))AND(t0.c0)))OR(v0.c1)))OR(t0.c0)))OR(LOWER(rt0.c2))))OR((+ (rt0.c4))))))) UNION ALL SELECT * FROM t0, rt0, v0 WHERE (((((((((((((((rt0.c3)AND(v0.c1)))AND(t0.c0)))OR(v0.c1)))OR(t0.c0)))OR(LOWER(rt0.c2))))OR((+ (rt0.c4))))) ISNULL));
SELECT * FROM t0, rt0, v0;
SELECT DISTINCT vt0.c0, v0.c2, rt0.c2, t0.c0, rt0.c0 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((rt0.c0)+(x'')) THEN ((v0.c0)AND(rt0.c4)) WHEN rt0.c3 THEN (((rt0.c1, v0.c1, t0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((v0.c1, v0.c2, vt0.c0))) WHEN (rt0.c1 IN (rt0.c0, v0.c1)) THEN ((((vt0.c0)OR(rt0.c3)))OR(rt0.c0)) ELSE (((v0.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c2))) END INNER JOIN t0 ON ((((rt0.c4)IS NOT(v0.c1))) BETWEEN ((((rt0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2)))) AND (rt0.c1 COLLATE BINARY));
SELECT t0.c0 FROM v0, t0 CROSS JOIN vt0 ON (((v0.c1)) BETWEEN ((((v0.c1) BETWEEN (NULL) AND (v0.c1)))) AND (((v0.c0 IN (v0.c1))))) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, t0 CROSS JOIN vt0 ON (((v0.c1)) BETWEEN ((((v0.c1) BETWEEN (NULL) AND (v0.c1)))) AND (((v0.c0 IN (v0.c1))))) WHERE ((((t0.c0 IN (x''))) BETWEEN (CAST(v0.c0 AS REAL)) AND (x'' COLLATE BINARY))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM v0, t0 CROSS JOIN vt0 ON (((v0.c1)) BETWEEN ((((v0.c1) BETWEEN (NULL) AND (v0.c1)))) AND (((v0.c0 IN (v0.c1))))) WHERE ((NOT ((((t0.c0 IN (x''))) BETWEEN (CAST(v0.c0 AS REAL)) AND (x'' COLLATE BINARY))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM v0, t0 CROSS JOIN vt0 ON (((v0.c1)) BETWEEN ((((v0.c1) BETWEEN (NULL) AND (v0.c1)))) AND (((v0.c0 IN (v0.c1))))) WHERE ((((((t0.c0 IN (x''))) BETWEEN (CAST(v0.c0 AS REAL)) AND (x'' COLLATE BINARY))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM v0, t0 CROSS JOIN vt0 ON (((v0.c1)) BETWEEN ((((v0.c1) BETWEEN (NULL) AND (v0.c1)))) AND (((v0.c0 IN (v0.c1))))) GROUP BY t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING GROUP_CONCAT((~ (t0.c0))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (GROUP_CONCAT((~ (t0.c0))))) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING ((GROUP_CONCAT((~ (t0.c0)))) ISNULL);
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING GROUP_CONCAT((~ (t0.c0))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (GROUP_CONCAT((~ (t0.c0))))) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING ((GROUP_CONCAT((~ (t0.c0)))) ISNULL);
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL TOTAL((NOT (CAST(rt0.c1 AS BLOB)))) FROM rt0, vt0 ORDER BY CAST(((((((((rt0.c4)AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)) AS INTEGER) ASC;
SELECT vt0.c0, t0.c0 FROM t0, vt0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE (((HEX(vt0.c0)) BETWEEN (((vt0.c0)+(t0.c0))) AND (((vt0.c0) NOTNULL)))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT (((HEX(vt0.c0)) BETWEEN (((vt0.c0)+(t0.c0))) AND (((vt0.c0) NOTNULL)))))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE (((((HEX(vt0.c0)) BETWEEN (((vt0.c0)+(t0.c0))) AND (((vt0.c0) NOTNULL)))) ISNULL));
SELECT vt0.c0, t0.c0 FROM t0, vt0;
SELECT DISTINCT rt0.c2, rt0.c4, rt0.c3 FROM rt0 CROSS JOIN v0 ON (CASE WHEN v0.c2 THEN v0.c1 ELSE rt0.c2 END IN ());
SELECT DISTINCT rt0.c2, rt0.c4, rt0.c3 FROM rt0 CROSS JOIN v0 ON (CASE WHEN v0.c2 THEN v0.c1 ELSE rt0.c2 END IN ()) WHERE ((~ (CAST(rt0.c3 AS TEXT)))) UNION SELECT DISTINCT rt0.c2, rt0.c4, rt0.c3 FROM rt0 CROSS JOIN v0 ON (CASE WHEN v0.c2 THEN v0.c1 ELSE rt0.c2 END IN ()) WHERE ((NOT ((~ (CAST(rt0.c3 AS TEXT)))))) UNION SELECT DISTINCT rt0.c2, rt0.c4, rt0.c3 FROM rt0 CROSS JOIN v0 ON (CASE WHEN v0.c2 THEN v0.c1 ELSE rt0.c2 END IN ()) WHERE ((((~ (CAST(rt0.c3 AS TEXT)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c4, rt0.c3 FROM rt0 CROSS JOIN v0 ON (CASE WHEN v0.c2 THEN v0.c1 ELSE rt0.c2 END IN ());
SELECT ALL rt0.c0, rt0.c3, rt0.c2, vt0.c0, rt0.c4, v0.c1, rt0.c1 FROM v0, t0, vt0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, vt0.c0, rt0.c4, v0.c1, rt0.c1;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, vt0.c0, rt0.c4, v0.c1, rt0.c1 FROM v0, t0, vt0, rt0 WHERE (((rt0.c4)*(v0.c1)) COLLATE NOCASE) GROUP BY rt0.c0, rt0.c3, rt0.c2, vt0.c0, rt0.c4, v0.c1, rt0.c1 UNION SELECT rt0.c0, rt0.c3, rt0.c2, vt0.c0, rt0.c4, v0.c1, rt0.c1 FROM v0, t0, vt0, rt0 WHERE ((NOT (((rt0.c4)*(v0.c1)) COLLATE NOCASE))) GROUP BY rt0.c0, rt0.c3, rt0.c2, vt0.c0, rt0.c4, v0.c1, rt0.c1 UNION SELECT rt0.c0, rt0.c3, rt0.c2, vt0.c0, rt0.c4, v0.c1, rt0.c1 FROM v0, t0, vt0, rt0 WHERE (((((rt0.c4)*(v0.c1)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c2, vt0.c0, rt0.c4, v0.c1, rt0.c1;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, vt0.c0, rt0.c4, v0.c1, rt0.c1 FROM v0, t0, vt0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, vt0.c0, rt0.c4, v0.c1, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM t0 FULL OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN ' |WL佌g&Gx' THEN rt0.c3 ELSE rt0.c0 END)LIKE(json_array_length(rt0.c0, 0.46192513741533825))) GROUP BY rt0.c3, rt0.c0, rt0.c2;
SELECT * FROM vt0, rt0, v0 RIGHT OUTER JOIN t0 ON v0.c1;
SELECT * FROM vt0, rt0, v0 RIGHT OUTER JOIN t0 ON v0.c1 WHERE (((((((rt0.c3)IS(v0.c0)))AND(CAST(v0.c2 AS NUMERIC))))AND(((((t0.c0)OR(0xffffffffd50d14cc)))OR(v0.c0))))) UNION ALL SELECT * FROM vt0, rt0, v0 RIGHT OUTER JOIN t0 ON v0.c1 WHERE ((NOT (((((((rt0.c3)IS(v0.c0)))AND(CAST(v0.c2 AS NUMERIC))))AND(((((t0.c0)OR(0Xffffffffd50d14cc)))OR(v0.c0))))))) UNION ALL SELECT ALL * FROM vt0, rt0, v0 RIGHT OUTER JOIN t0 ON v0.c1 WHERE (((((((((rt0.c3)IS(v0.c0)))AND(CAST(v0.c2 AS NUMERIC))))AND(((((t0.c0)OR(0xffffffffd50d14cc)))OR(v0.c0))))) ISNULL));
SELECT * FROM vt0, rt0, v0 RIGHT OUTER JOIN t0 ON v0.c1;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2 FROM rt0, vt0, v0, t0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2 FROM rt0, vt0, v0, t0 WHERE (CASE WHEN rt0.c0 COLLATE BINARY THEN CAST(v0.c1 AS INTEGER) END) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2 FROM rt0, vt0, v0, t0 WHERE ((NOT (CASE WHEN rt0.c0 COLLATE BINARY THEN CAST(v0.c1 AS INTEGER) END))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2 FROM rt0, vt0, v0, t0 WHERE (((CASE WHEN rt0.c0 COLLATE BINARY THEN CAST(v0.c1 AS INTEGER) END) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2 FROM rt0, vt0, v0, t0;
SELECT ALL v0.c0, v0.c1, vt0.c0, v0.c2 FROM v0, vt0 GROUP BY v0.c0, v0.c1, vt0.c0, v0.c2;
SELECT v0.c0, v0.c1, vt0.c0, v0.c2 FROM v0, vt0 WHERE ((~ (v0.c0))) GROUP BY v0.c0, v0.c1, vt0.c0, v0.c2 UNION SELECT ALL v0.c0, v0.c1, vt0.c0, v0.c2 FROM v0, vt0 WHERE ((NOT ((~ (v0.c0))))) GROUP BY v0.c0, v0.c1, vt0.c0, v0.c2 UNION SELECT v0.c0, v0.c1, vt0.c0, v0.c2 FROM v0, vt0 WHERE ((((~ (v0.c0))) ISNULL)) GROUP BY v0.c0, v0.c1, vt0.c0, v0.c2;
SELECT ALL v0.c0, v0.c1, vt0.c0, v0.c2 FROM v0, vt0 GROUP BY v0.c0, v0.c1, vt0.c0, v0.c2;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING COUNT(GROUP_CONCAT('-561705508')) UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING (NOT (COUNT(GROUP_CONCAT('-561705508')))) UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING ((COUNT(GROUP_CONCAT('-561705508'))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE ((((HEX(DISTINCT rt0.c4)))>((rt0.c2 COLLATE BINARY)))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT ((((HEX(DISTINCT rt0.c4)))>((rt0.c2 COLLATE BINARY)))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((((((HEX(DISTINCT rt0.c4)))>((rt0.c2 COLLATE BINARY)))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOTNULL)) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE ((NOT (((((vt0.c0) NOT NULL)) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) NOT NULL)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c2, t0.c0, rt0.c3, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c0, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, t0.c0, rt0.c3, rt0.c0 FROM rt0, t0 WHERE (t0.c0) GROUP BY rt0.c2, t0.c0, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c2, t0.c0, rt0.c3, rt0.c0 FROM rt0, t0 WHERE ((NOT (t0.c0))) GROUP BY rt0.c2, t0.c0, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c2, t0.c0, rt0.c3, rt0.c0 FROM rt0, t0 WHERE (((t0.c0) ISNULL)) GROUP BY rt0.c2, t0.c0, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, t0.c0, rt0.c3, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c0, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, v0.c1, rt0.c4, v0.c0, t0.c0, vt0.c0, rt0.c0, rt0.c3 FROM v0, t0 INNER JOIN vt0 ON CAST(rt0.c1 AS REAL) RIGHT OUTER JOIN rt0 ON load_extension(v0.c2 COLLATE NOCASE) GROUP BY rt0.c1, v0.c1, rt0.c4, v0.c0, t0.c0, vt0.c0, rt0.c0, rt0.c3;
SELECT * FROM v0, vt0, rt0, t0;
SELECT * FROM v0, vt0, rt0, t0 WHERE (0.17985300007112826) UNION ALL SELECT ALL * FROM v0, vt0, rt0, t0 WHERE ((NOT (0.17985300007112826))) UNION ALL SELECT ALL * FROM v0, vt0, rt0, t0 WHERE (((0.17985300007112826) ISNULL));
SELECT * FROM v0, vt0, rt0, t0;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN t0 ON t0.c0 COLLATE RTRIM COLLATE BINARY COLLATE NOCASE;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN t0 ON t0.c0 COLLATE RTRIM COLLATE BINARY COLLATE NOCASE WHERE ((((vt0.c0 IN ())) BETWEEN (((t0.c0) NOT BETWEEN (876402821) AND (vt0.c0))) AND ((NULL IN ())))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN t0 ON t0.c0 COLLATE RTRIM COLLATE BINARY COLLATE NOCASE WHERE ((NOT ((((vt0.c0 IN ())) BETWEEN (((t0.c0) NOT BETWEEN (876402821) AND (vt0.c0))) AND ((NULL IN ())))))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN t0 ON t0.c0 COLLATE RTRIM COLLATE BINARY COLLATE NOCASE WHERE ((((((vt0.c0 IN ())) BETWEEN (((t0.c0) NOT BETWEEN (876402821) AND (vt0.c0))) AND ((NULL IN ())))) ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN t0 ON t0.c0 COLLATE RTRIM COLLATE BINARY COLLATE NOCASE;
SELECT ALL v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1;
SELECT v0.c0, v0.c1 FROM v0 WHERE ((((CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c2 END))>=((v0.c2)))) GROUP BY v0.c0, v0.c1 UNION SELECT ALL v0.c0, v0.c1 FROM v0 WHERE ((NOT ((((CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c2 END))>=((v0.c2)))))) GROUP BY v0.c0, v0.c1 UNION SELECT ALL v0.c0, v0.c1 FROM v0 WHERE ((((((CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c2 END))>=((v0.c2)))) ISNULL)) GROUP BY v0.c0, v0.c1;
SELECT ALL v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1;
SELECT ALL v0.c0, rt0.c2 FROM vt0, t0, rt0, v0 GROUP BY v0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c2 FROM vt0 NOT INDEXED, t0, rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING TOTAL(COUNT(*)) UNION ALL SELECT ALL v0.c0, rt0.c2 FROM vt0, t0, rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL v0.c0, rt0.c2 FROM vt0, t0, rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT vt0.c0, v0.c0, v0.c2, v0.c1 FROM v0 FULL OUTER JOIN vt0 ON ((((((v0.c1)OR(v0.c0)))OR(v0.c2)))<>(CASE v0.c2  WHEN v0.c2 THEN 0.19713751443495808 ELSE v0.c2 END));
SELECT ALL vt0.c0, v0.c0, v0.c2, v0.c1 FROM v0 FULL OUTER JOIN vt0 ON ((((((v0.c1)OR(v0.c0)))OR(v0.c2)))<>(CASE v0.c2  WHEN v0.c2 THEN 0.19713751443495808 ELSE v0.c2 END)) WHERE (CAST(CASE v0.c2  WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c0 ELSE vt0.c0 END AS NUMERIC)) UNION ALL SELECT vt0.c0, v0.c0, v0.c2, v0.c1 FROM v0 FULL OUTER JOIN vt0 ON ((((((v0.c1)OR(v0.c0)))OR(v0.c2)))!=(CASE v0.c2  WHEN v0.c2 THEN 0.19713751443495808 ELSE v0.c2 END)) WHERE ((NOT (CAST(CASE v0.c2  WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c0 ELSE vt0.c0 END AS NUMERIC)))) UNION ALL SELECT vt0.c0, v0.c0, v0.c2, v0.c1 FROM v0 FULL OUTER JOIN vt0 ON ((((((v0.c1)OR(v0.c0)))OR(v0.c2)))!=(CASE v0.c2  WHEN v0.c2 THEN 0.19713751443495808 ELSE v0.c2 END)) WHERE (((CAST(CASE v0.c2  WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c0 ELSE vt0.c0 END AS NUMERIC)) ISNULL));
SELECT vt0.c0, v0.c0, v0.c2, v0.c1 FROM v0 FULL OUTER JOIN vt0 ON ((((((v0.c1)OR(v0.c0)))OR(v0.c2)))<>(CASE v0.c2  WHEN v0.c2 THEN 0.19713751443495808 ELSE v0.c2 END));
SELECT DISTINCT rt0.c1, rt0.c2, v0.c0, v0.c1, rt0.c4, rt0.c0, v0.c2, rt0.c3 FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, v0.c0, v0.c1, rt0.c4, rt0.c0, v0.c2, rt0.c3 FROM v0, rt0 WHERE ((~ ((v0.c0 IN (rt0.c2, v0.c0))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, v0.c0, v0.c1, rt0.c4, rt0.c0, v0.c2, rt0.c3 FROM v0, rt0 WHERE ((NOT ((~ ((v0.c0 IN (rt0.c2, v0.c0))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, v0.c0, v0.c1, rt0.c4, rt0.c0, v0.c2, rt0.c3 FROM v0, rt0 WHERE ((((~ ((v0.c0 IN (rt0.c2, v0.c0))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, v0.c0, v0.c1, rt0.c4, rt0.c0, v0.c2, rt0.c3 FROM v0, rt0;
SELECT ALL rt0.c1, rt0.c2, vt0.c0, t0.c0, rt0.c3, rt0.c0, v0.c0, rt0.c4 FROM t0, v0, rt0, vt0 GROUP BY rt0.c1, rt0.c2, vt0.c0, t0.c0, rt0.c3, rt0.c0, v0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, vt0.c0, t0.c0, rt0.c3, rt0.c0, v0.c0, rt0.c4 FROM t0, v0, rt0, vt0 WHERE (((ABS(DISTINCT rt0.c3))GLOB((- (rt0.c3))))) GROUP BY rt0.c1, rt0.c2, vt0.c0, t0.c0, rt0.c3, rt0.c0, v0.c0, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c2, vt0.c0, t0.c0, rt0.c3, rt0.c0, v0.c0, rt0.c4 FROM t0, v0, rt0, vt0 WHERE ((NOT (((ABS(DISTINCT rt0.c3))GLOB((- (rt0.c3))))))) GROUP BY rt0.c1, rt0.c2, vt0.c0, t0.c0, rt0.c3, rt0.c0, v0.c0, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c2, vt0.c0, t0.c0, rt0.c3, rt0.c0, v0.c0, rt0.c4 FROM t0 NOT INDEXED, v0, rt0, vt0 WHERE (((((ABS(DISTINCT rt0.c3))GLOB((- (rt0.c3))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, vt0.c0, t0.c0, rt0.c3, rt0.c0, v0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, vt0.c0, t0.c0, rt0.c3, rt0.c0, v0.c0, rt0.c4 FROM t0, v0, rt0, vt0 GROUP BY rt0.c1, rt0.c2, vt0.c0, t0.c0, rt0.c3, rt0.c0, v0.c0, rt0.c4;
SELECT vt0.c0 FROM rt0, t0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, t0, vt0 GROUP BY vt0.c0 HAVING SUM(MIN(rt0.c0)) UNION ALL SELECT vt0.c0 FROM rt0, t0, vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(MIN(rt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM rt0, t0, vt0 GROUP BY vt0.c0 HAVING ((SUM(MIN(rt0.c0))) ISNULL);
SELECT ALL * FROM v0, rt0 CROSS JOIN t0 ON LIKELIHOOD(DISTINCT (v0.c1 IN ()), 0.6993417022594657);
SELECT * FROM v0, rt0 CROSS JOIN t0 ON LIKELIHOOD(DISTINCT (v0.c1 IN ()), 0.6993417022594657) WHERE (((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c4)))AND(rt0.c1 COLLATE RTRIM)))OR(COALESCE(DISTINCT rt0.c0, rt0.c1))))OR((rt0.c3 IN ()))))OR((((rt0.c2)) BETWEEN ((0.692034018672453)) AND ((v0.c0)))))) UNION ALL SELECT * FROM v0, rt0 CROSS JOIN t0 ON LIKELIHOOD(DISTINCT (v0.c1 IN ()), 0.6993417022594657) WHERE ((NOT (((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c4)))AND(rt0.c1 COLLATE RTRIM)))OR(COALESCE(DISTINCT rt0.c0, rt0.c1))))OR((rt0.c3 IN ()))))OR((((rt0.c2)) BETWEEN ((0.692034018672453)) AND ((v0.c0)))))))) UNION ALL SELECT * FROM v0, rt0 CROSS JOIN t0 ON LIKELIHOOD(DISTINCT (v0.c1 IN ()), 0.6993417022594657) WHERE (((((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c4)))AND(rt0.c1 COLLATE RTRIM)))OR(COALESCE(DISTINCT rt0.c0, rt0.c1))))OR((rt0.c3 IN ()))))OR((((rt0.c2)) BETWEEN ((0.692034018672453)) AND ((v0.c0)))))) ISNULL));
SELECT ALL * FROM v0, rt0 CROSS JOIN t0 ON LIKELIHOOD(DISTINCT (v0.c1 IN ()), 0.6993417022594657);
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0))<((t0.c0))))<(json_array_length(0.21943160032348885)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0))<((t0.c0))))<(json_array_length(0.21943160032348885)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((((t0.c0))<((t0.c0))))<(json_array_length(0.21943160032348885)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT v0.c0, vt0.c0, v0.c1, t0.c0, v0.c2 FROM t0, vt0, v0 GROUP BY v0.c0, vt0.c0, v0.c1, t0.c0, v0.c2;
SELECT v0.c0, vt0.c0, v0.c1, t0.c0, v0.c2 FROM t0, vt0, v0 WHERE (((((t0.c0)+(v0.c2)))<<(UNLIKELY(DISTINCT v0.c2)))) GROUP BY v0.c0, vt0.c0, v0.c1, t0.c0, v0.c2 UNION SELECT v0.c0, vt0.c0, v0.c1, t0.c0, v0.c2 FROM t0, vt0, v0 WHERE ((NOT (((((t0.c0)+(v0.c2)))<<(UNLIKELY(DISTINCT v0.c2)))))) GROUP BY v0.c0, vt0.c0, v0.c1, t0.c0, v0.c2 UNION SELECT v0.c0, vt0.c0, v0.c1, t0.c0, v0.c2 FROM t0, vt0, v0 WHERE (((((((t0.c0)+(v0.c2)))<<(UNLIKELY(DISTINCT v0.c2)))) ISNULL)) GROUP BY v0.c0, vt0.c0, v0.c1, t0.c0, v0.c2;
SELECT v0.c0, vt0.c0, v0.c1, t0.c0, v0.c2 FROM t0, vt0, v0 GROUP BY v0.c0, vt0.c0, v0.c1, t0.c0, v0.c2;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (((SUM(x'')))<((COUNT(*)))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (NOT ((((SUM(x'')))<((COUNT(*)))))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (((((SUM(x'')))<((COUNT(*))))) ISNULL);
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (((SUM(x'')))<((COUNT(*)))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (NOT ((((SUM(x'')))<((COUNT(*)))))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (((((SUM(x'')))<((COUNT(*))))) ISNULL);
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT * FROM rt0, vt0 LEFT OUTER JOIN t0 ON CASE WHEN v0.c0 THEN t0.c0 ELSE rt0.c0 END COLLATE RTRIM LEFT OUTER JOIN v0 ON (~ (CASE 'y*dv	TH'  WHEN t0.c0 THEN v0.c2 ELSE v0.c0 END));
SELECT DISTINCT vt0.c0, v0.c0, v0.c1 FROM v0, vt0;
SELECT DISTINCT vt0.c0, v0.c0, v0.c1 FROM v0, vt0 WHERE ((((((v0.c2)AND(v0.c0)))OR(v0.c2)) IN ())) UNION SELECT DISTINCT vt0.c0, v0.c0, v0.c1 FROM v0, vt0 WHERE ((NOT ((((((v0.c2)AND(v0.c0)))OR(v0.c2)) IN ())))) UNION SELECT DISTINCT vt0.c0, v0.c0, v0.c1 FROM v0, vt0 WHERE ((((((((v0.c2)AND(v0.c0)))OR(v0.c2)) IN ())) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0, v0.c1 FROM v0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0)<<(vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0)<<(vt0.c0))) AND (vt0.c0 COLLATE NOCASE))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0)<<(vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0, rt0.c0 FROM rt0, t0, v0, vt0 GROUP BY t0.c0, rt0.c0;
SELECT ALL t0.c0, rt0.c0 FROM rt0, t0, v0, vt0 GROUP BY t0.c0, rt0.c0 HAVING SUM(AVG(v0.c1)) UNION ALL SELECT t0.c0, rt0.c0 FROM rt0, t0, v0, vt0 GROUP BY t0.c0, rt0.c0 HAVING (NOT (SUM(AVG(v0.c1)))) UNION ALL SELECT t0.c0, rt0.c0 FROM rt0, t0, v0, vt0 GROUP BY t0.c0, rt0.c0 HAVING ((SUM(AVG(v0.c1))) ISNULL);
SELECT v0.c1, rt0.c2, v0.c2, rt0.c0 FROM v0, rt0;
SELECT v0.c1, rt0.c2, v0.c2, rt0.c0 FROM v0, rt0 WHERE (CASE WHEN (v0.c0 IN ()) THEN ((rt0.c3)<(rt0.c1)) ELSE ((v0.c1) NOT NULL) END) UNION ALL SELECT ALL v0.c1, rt0.c2, v0.c2, rt0.c0 FROM v0, rt0 WHERE ((NOT (CASE WHEN (v0.c0 IN ()) THEN ((rt0.c3)<(rt0.c1)) ELSE ((v0.c1) NOT NULL) END))) UNION ALL SELECT ALL v0.c1, rt0.c2, v0.c2, rt0.c0 FROM v0, rt0 WHERE (((CASE WHEN (v0.c0 IN ()) THEN ((rt0.c3)<(rt0.c1)) ELSE ((v0.c1) NOT NULL) END) ISNULL));
SELECT v0.c1, rt0.c2, v0.c2, rt0.c0 FROM v0, rt0;
SELECT DISTINCT v0.c2, vt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM vt0, v0, rt0, t0;
SELECT DISTINCT v0.c2, vt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM vt0, v0, rt0, t0 WHERE ((((((v0.c2 IN (NULL)))OR(CASE WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 END)))AND(((((t0.c0)OR(rt0.c1)))OR(vt0.c0))))) UNION SELECT DISTINCT v0.c2, vt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM vt0, v0, rt0, t0 WHERE ((NOT ((((((v0.c2 IN (NULL)))OR(CASE WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 END)))AND(((((t0.c0)OR(rt0.c1)))OR(vt0.c0))))))) UNION SELECT DISTINCT v0.c2, vt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM vt0, v0, rt0, t0 WHERE ((((((((v0.c2 IN (NULL)))OR(CASE WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 END)))AND(((((t0.c0)OR(rt0.c1)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT v0.c2, vt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM vt0, v0, rt0, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((- (t0.c0 COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((- (t0.c0 COLLATE RTRIM))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((- (t0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0, vt0, v0, t0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0, vt0, v0, t0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0, vt0, v0 NOT INDEXED, t0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0, vt0, v0, t0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0, vt0, v0, t0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0, vt0, v0, t0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0, vt0, v0 NOT INDEXED, t0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0, vt0, v0, t0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0, vt0, v0, t0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL vt0.c0, t0.c0 FROM t0 FULL OUTER JOIN vt0 ON CASE (vt0.c0 IN ())  WHEN (vt0.c0 IN ()) THEN t0.c0 COLLATE NOCASE WHEN ((((t0.c0)AND(t0.c0)))AND(vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((((((((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) THEN vt0.c0 END;
SELECT vt0.c0, t0.c0 FROM t0 FULL OUTER JOIN vt0 ON CASE (vt0.c0 IN ())  WHEN (vt0.c0 IN ()) THEN t0.c0 COLLATE NOCASE WHEN ((((t0.c0)AND(t0.c0)))AND(vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((((((((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) THEN vt0.c0 END WHERE (0Xffffffffb2b1b012) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0 FULL OUTER JOIN vt0 ON CASE (vt0.c0 IN ())  WHEN (vt0.c0 IN ()) THEN t0.c0 COLLATE NOCASE WHEN ((((t0.c0)AND(t0.c0)))AND(vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((((((((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) THEN vt0.c0 END WHERE ((NOT (0xffffffffb2b1b012))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0 FULL OUTER JOIN vt0 ON CASE (vt0.c0 IN ())  WHEN (vt0.c0 IN ()) THEN t0.c0 COLLATE NOCASE WHEN ((((t0.c0)AND(t0.c0)))AND(vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((((((((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) THEN vt0.c0 END WHERE (((0Xffffffffb2b1b012) ISNULL));
SELECT ALL vt0.c0, t0.c0 FROM t0 FULL OUTER JOIN vt0 ON CASE (vt0.c0 IN ())  WHEN (vt0.c0 IN ()) THEN t0.c0 COLLATE NOCASE WHEN ((((t0.c0)AND(t0.c0)))AND(vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((((((((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) THEN vt0.c0 END;
SELECT DISTINCT v0.c1, v0.c2, v0.c0 FROM v0;
SELECT DISTINCT v0.c1, v0.c2, v0.c0 FROM v0 WHERE (((((v0.c0)AND(CAST(v0.c2 AS REAL))))OR(v0.c0))) UNION SELECT DISTINCT v0.c1, v0.c2, v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)AND(CAST(v0.c2 AS REAL))))OR(v0.c0))))) UNION SELECT DISTINCT v0.c1, v0.c2, v0.c0 FROM v0 WHERE (((((((v0.c0)AND(CAST(v0.c2 AS REAL))))OR(v0.c0))) ISNULL));
SELECT DISTINCT v0.c1, v0.c2, v0.c0 FROM v0;
SELECT ALL t0.c0, rt0.c2, rt0.c3, v0.c1, v0.c0, rt0.c4, rt0.c0, v0.c2, rt0.c1 FROM t0, rt0, v0 GROUP BY t0.c0, rt0.c2, rt0.c3, v0.c1, v0.c0, rt0.c4, rt0.c0, v0.c2, rt0.c1;
SELECT ALL t0.c0, rt0.c2, rt0.c3, v0.c1, v0.c0, rt0.c4, rt0.c0, v0.c2, rt0.c1 FROM t0 NOT INDEXED, rt0, v0 WHERE (CASE WHEN ((rt0.c3) ISNULL) THEN (+ (rt0.c3)) WHEN CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 END THEN CASE v0.c1  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 ELSE x'' END WHEN t0.c0 THEN ((NULL) BETWEEN (rt0.c2) AND (rt0.c3)) ELSE ((rt0.c2)>=(v0.c1)) END) GROUP BY t0.c0, rt0.c2, rt0.c3, v0.c1, v0.c0, rt0.c4, rt0.c0, v0.c2, rt0.c1 UNION SELECT ALL t0.c0, rt0.c2, rt0.c3, v0.c1, v0.c0, rt0.c4, rt0.c0, v0.c2, rt0.c1 FROM t0, rt0, v0 WHERE ((NOT (CASE WHEN ((rt0.c3) ISNULL) THEN (+ (rt0.c3)) WHEN CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 END THEN CASE v0.c1  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 ELSE x'' END WHEN t0.c0 THEN ((NULL) BETWEEN (rt0.c2) AND (rt0.c3)) ELSE ((rt0.c2)>=(v0.c1)) END))) GROUP BY t0.c0, rt0.c2, rt0.c3, v0.c1, v0.c0, rt0.c4, rt0.c0, v0.c2, rt0.c1 UNION SELECT t0.c0, rt0.c2, rt0.c3, v0.c1, v0.c0, rt0.c4, rt0.c0, v0.c2, rt0.c1 FROM t0, rt0, v0 WHERE (((CASE WHEN ((rt0.c3) ISNULL) THEN (+ (rt0.c3)) WHEN CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 END THEN CASE v0.c1  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 ELSE x'' END WHEN t0.c0 THEN ((NULL) BETWEEN (rt0.c2) AND (rt0.c3)) ELSE ((rt0.c2)>=(v0.c1)) END) ISNULL)) GROUP BY t0.c0, rt0.c2, rt0.c3, v0.c1, v0.c0, rt0.c4, rt0.c0, v0.c2, rt0.c1;
SELECT ALL t0.c0, rt0.c2, rt0.c3, v0.c1, v0.c0, rt0.c4, rt0.c0, v0.c2, rt0.c1 FROM t0, rt0, v0 GROUP BY t0.c0, rt0.c2, rt0.c3, v0.c1, v0.c0, rt0.c4, rt0.c0, v0.c2, rt0.c1;
SELECT ALL v0.c2 FROM vt0, t0, v0 GROUP BY v0.c2;
SELECT v0.c2 FROM vt0, t0, v0 GROUP BY v0.c2 HAVING MAX(TOTAL(v0.c0)) UNION ALL SELECT v0.c2 FROM vt0, t0, v0 GROUP BY v0.c2 HAVING (NOT (MAX(TOTAL(v0.c0)))) UNION ALL SELECT ALL v0.c2 FROM vt0, t0, v0 GROUP BY v0.c2 HAVING ((MAX(TOTAL(v0.c0))) ISNULL);
SELECT ALL * FROM rt0, vt0, t0;
SELECT * FROM rt0, vt0, t0 WHERE (CASE WHEN 0Xffffffffd3e41ca9 THEN rt0.c4 ELSE vt0.c0 END COLLATE RTRIM) UNION ALL SELECT * FROM rt0, vt0, t0 WHERE ((NOT (CASE WHEN 0xffffffffd3e41ca9 THEN rt0.c4 ELSE vt0.c0 END COLLATE RTRIM))) UNION ALL SELECT * FROM rt0, vt0, t0 WHERE (((CASE WHEN 0xffffffffd3e41ca9 THEN rt0.c4 ELSE vt0.c0 END COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt0, vt0, t0;
SELECT DISTINCT * FROM vt0, v0 CROSS JOIN t0 ON ((LIKELIHOOD(-799916003, 0.6099910364497241))&(((vt0.c0)|(rt0.c3)))) CROSS JOIN rt0 ON (((+ (rt0.c0))) BETWEEN ((v0.c0 IN ())) AND (vt0.c0 COLLATE BINARY));
SELECT DISTINCT * FROM vt0, v0 CROSS JOIN t0 ON ((LIKELIHOOD(-799916003, 0.6099910364497241))&(((vt0.c0)|(rt0.c3)))) CROSS JOIN rt0 ON (((+ (rt0.c0))) BETWEEN ((v0.c0 IN ())) AND (vt0.c0 COLLATE BINARY)) WHERE (((((((x'398a')OR(rt0.c3)))AND(t0.c0))) NOT BETWEEN ((((t0.c0))!=((rt0.c3)))) AND ((((rt0.c4))<((724884818)))))) UNION SELECT DISTINCT * FROM vt0, v0 CROSS JOIN t0 ON ((LIKELIHOOD(-799916003, 0.6099910364497241))&(((vt0.c0)|(rt0.c3)))) CROSS JOIN rt0 ON (((+ (rt0.c0))) BETWEEN ((v0.c0 IN ())) AND (vt0.c0 COLLATE BINARY)) WHERE ((NOT (((((((x'398a')OR(rt0.c3)))AND(t0.c0))) NOT BETWEEN ((((t0.c0))!=((rt0.c3)))) AND ((((rt0.c4))<((724884818)))))))) UNION SELECT DISTINCT * FROM vt0, v0 CROSS JOIN t0 ON ((LIKELIHOOD(-799916003, 0.6099910364497241))&(((vt0.c0)|(rt0.c3)))) CROSS JOIN rt0 ON (((+ (rt0.c0))) BETWEEN ((v0.c0 IN ())) AND (vt0.c0 COLLATE BINARY)) WHERE (((((((((x'398a')OR(rt0.c3)))AND(t0.c0))) NOT BETWEEN ((((t0.c0))<>((rt0.c3)))) AND ((((rt0.c4))<((724884818)))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0 CROSS JOIN t0 ON ((LIKELIHOOD(-799916003, 0.6099910364497241))&(((vt0.c0)|(rt0.c3)))) CROSS JOIN rt0 ON (((+ (rt0.c0))) BETWEEN ((v0.c0 IN ())) AND (vt0.c0 COLLATE BINARY));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN TRIM(vt0.c0, vt0.c0) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0) ISNULL) THEN TRIM(vt0.c0, vt0.c0) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN ((vt0.c0) ISNULL) THEN TRIM(vt0.c0, vt0.c0) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c4, v0.c2, vt0.c0, rt0.c0, rt0.c1, rt0.c3 FROM t0, vt0, v0, rt0 GROUP BY rt0.c4, v0.c2, vt0.c0, rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c4, v0.c2, vt0.c0, rt0.c0, rt0.c1, rt0.c3 FROM t0, vt0, v0, rt0 GROUP BY rt0.c4, v0.c2, vt0.c0, rt0.c0, rt0.c1, rt0.c3 HAVING NULL UNION ALL SELECT rt0.c4, v0.c2, vt0.c0, rt0.c0, rt0.c1, rt0.c3 FROM t0, vt0 NOT INDEXED, v0, rt0 GROUP BY rt0.c4, v0.c2, vt0.c0, rt0.c0, rt0.c1, rt0.c3 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c4, v0.c2, vt0.c0, rt0.c0, rt0.c1, rt0.c3 FROM t0, vt0, v0, rt0 GROUP BY rt0.c4, v0.c2, vt0.c0, rt0.c0, rt0.c1, rt0.c3 HAVING ((NULL) ISNULL);
SELECT rt0.c4, v0.c2, vt0.c0, rt0.c0, rt0.c1, rt0.c3 FROM t0, vt0, v0, rt0 GROUP BY rt0.c4, v0.c2, vt0.c0, rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c4, v0.c2, vt0.c0, rt0.c0, rt0.c1, rt0.c3 FROM t0, vt0, v0, rt0 GROUP BY rt0.c4, v0.c2, vt0.c0, rt0.c0, rt0.c1, rt0.c3 HAVING NULL UNION ALL SELECT rt0.c4, v0.c2, vt0.c0, rt0.c0, rt0.c1, rt0.c3 FROM t0, vt0 NOT INDEXED, v0, rt0 GROUP BY rt0.c4, v0.c2, vt0.c0, rt0.c0, rt0.c1, rt0.c3 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c4, v0.c2, vt0.c0, rt0.c0, rt0.c1, rt0.c3 FROM t0, vt0, v0, rt0 GROUP BY rt0.c4, v0.c2, vt0.c0, rt0.c0, rt0.c1, rt0.c3 HAVING ((NULL) ISNULL);
SELECT rt0.c4, v0.c2, vt0.c0, rt0.c0, rt0.c1, rt0.c3 FROM t0, vt0, v0, rt0 GROUP BY rt0.c4, v0.c2, vt0.c0, rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE ((((rt0.c3, (((0.9646013217339298))<((rt0.c0))), rt0.c1))>((CASE rt0.c3  WHEN rt0.c1 THEN NULL END, NULL, ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c3, (((0.9646013217339298))<((rt0.c0))), rt0.c1))>((CASE rt0.c3  WHEN rt0.c1 THEN NULL END, NULL, ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE ((((((rt0.c3, (((0.9646013217339298))<((rt0.c0))), rt0.c1))>((CASE rt0.c3  WHEN rt0.c1 THEN NULL END, NULL, ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))) ISNULL));
SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM t0, v0, rt0, vt0;
SELECT DISTINCT * FROM t0, v0, rt0, vt0 WHERE ((((rt0.c2))!=((rt0.c2))) COLLATE BINARY) UNION SELECT DISTINCT * FROM t0, v0, rt0, vt0 WHERE ((NOT ((((rt0.c2))!=((rt0.c2))) COLLATE BINARY))) UNION SELECT DISTINCT * FROM t0, v0, rt0, vt0 WHERE ((((((rt0.c2))!=((rt0.c2))) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t0, v0, rt0, vt0;
SELECT ALL v0.c1, t0.c0, v0.c0 FROM t0, v0 GROUP BY v0.c1, t0.c0, v0.c0;
SELECT v0.c1, t0.c0, v0.c0 FROM t0, v0 WHERE (0.9048958344742823) GROUP BY v0.c1, t0.c0, v0.c0 UNION SELECT v0.c1, t0.c0, v0.c0 FROM t0, v0 WHERE ((NOT (0.9048958344742823))) GROUP BY v0.c1, t0.c0, v0.c0 UNION SELECT v0.c1, t0.c0, v0.c0 FROM t0, v0 WHERE (((0.9048958344742823) ISNULL)) GROUP BY v0.c1, t0.c0, v0.c0;
SELECT ALL v0.c1, t0.c0, v0.c0 FROM t0, v0 GROUP BY v0.c1, t0.c0, v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING LOWER(vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (LOWER(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((LOWER(vt0.c0)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING LOWER(vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (LOWER(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((LOWER(vt0.c0)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT SUM(v0.c0) FROM v0 ORDER BY 0.8512907537455928;
SELECT ALL rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE (((x'1e28' IN (rt0.c3)) IN (rt0.c2))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((x'1e28' IN (rt0.c3)) IN (rt0.c2))))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE (((((x'1e28' IN (rt0.c3)) IN (rt0.c2))) ISNULL));
SELECT ALL rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt0, t0, v0, rt0;
SELECT DISTINCT * FROM vt0, t0, v0, rt0 NOT INDEXED WHERE (((((rt0.c2)GLOB(v0.c2)))||(((rt0.c1) BETWEEN (rt0.c0) AND (t0.c0))))) UNION SELECT DISTINCT * FROM vt0, t0, v0, rt0 WHERE ((NOT (((((rt0.c2)GLOB(v0.c2)))||(((rt0.c1) BETWEEN (rt0.c0) AND (t0.c0))))))) UNION SELECT DISTINCT * FROM vt0, t0, v0, rt0 WHERE (((((((rt0.c2)GLOB(v0.c2)))||(((rt0.c1) BETWEEN (rt0.c0) AND (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0, v0, rt0;
SELECT t0.c0, rt0.c2 FROM v0, t0, vt0, rt0 GROUP BY t0.c0, rt0.c2;
SELECT ALL t0.c0, rt0.c2 FROM v0, t0, vt0, rt0 WHERE (((((((((((v0.c1) NOTNULL))AND(((x'') BETWEEN (rt0.c3) AND (rt0.c2)))))OR(((t0.c0)+(t0.c0)))))OR(rt0.c0 COLLATE RTRIM)))OR(((rt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))))) GROUP BY t0.c0, rt0.c2 UNION SELECT ALL t0.c0, rt0.c2 FROM v0 NOT INDEXED, t0, vt0, rt0 WHERE ((NOT (((((((((((v0.c1) NOTNULL))AND(((x'') BETWEEN (rt0.c3) AND (rt0.c2)))))OR(((t0.c0)+(t0.c0)))))OR(rt0.c0 COLLATE RTRIM)))OR(((rt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))))))) GROUP BY t0.c0, rt0.c2 UNION SELECT ALL t0.c0, rt0.c2 FROM v0, t0, vt0, rt0 WHERE (((((((((((((v0.c1) NOTNULL))AND(((x'') BETWEEN (rt0.c3) AND (rt0.c2)))))OR(((t0.c0)+(t0.c0)))))OR(rt0.c0 COLLATE RTRIM)))OR(((rt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))))) ISNULL)) GROUP BY t0.c0, rt0.c2;
SELECT t0.c0, rt0.c2 FROM v0, t0, vt0, rt0 GROUP BY t0.c0, rt0.c2;
SELECT rt0.c4, rt0.c1, v0.c1, rt0.c0, vt0.c0 FROM vt0, v0, rt0, t0 GROUP BY rt0.c4, rt0.c1, v0.c1, rt0.c0, vt0.c0;
SELECT rt0.c4, rt0.c1, v0.c1, rt0.c0, vt0.c0 FROM vt0, v0, rt0, t0 GROUP BY rt0.c4, rt0.c1, v0.c1, rt0.c0, vt0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT rt0.c4, rt0.c1, v0.c1, rt0.c0, vt0.c0 FROM vt0, v0, rt0, t0 GROUP BY rt0.c4, rt0.c1, v0.c1, rt0.c0, vt0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL rt0.c4, rt0.c1, v0.c1, rt0.c0, vt0.c0 FROM vt0, v0, rt0, t0 GROUP BY rt0.c4, rt0.c1, v0.c1, rt0.c0, vt0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0, t0, vt0, rt0;
SELECT ALL vt0.c0, v0.c0 FROM v0, t0, vt0, rt0 WHERE (((((((((v0.c0 COLLATE BINARY)OR((~ (vt0.c0)))))OR(-311959202)))OR(((rt0.c0) NOTNULL))))OR(CASE WHEN t0.c0 THEN '' ELSE rt0.c0 END))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, t0, vt0, rt0 WHERE ((NOT (((((((((v0.c0 COLLATE BINARY)OR((~ (vt0.c0)))))OR(-311959202)))OR(((rt0.c0) NOTNULL))))OR(CASE WHEN t0.c0 THEN '' ELSE rt0.c0 END))))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, t0, vt0, rt0 WHERE (((((((((((v0.c0 COLLATE BINARY)OR((~ (vt0.c0)))))OR(-311959202)))OR(((rt0.c0) NOTNULL))))OR(CASE WHEN t0.c0 THEN '' ELSE rt0.c0 END))) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM v0, t0, vt0, rt0;
SELECT DISTINCT * FROM vt0, v0, rt0 INNER JOIN t0 ON CAST(((vt0.c0)<>(vt0.c0)) AS INTEGER);
SELECT DISTINCT * FROM vt0, v0, rt0 INNER JOIN t0 ON CAST(((vt0.c0)<>(vt0.c0)) AS INTEGER) WHERE (((((vt0.c0) ISNULL))GLOB(v0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 INNER JOIN t0 ON CAST(((vt0.c0)<>(vt0.c0)) AS INTEGER) WHERE ((NOT (((((vt0.c0) ISNULL))GLOB(v0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 INNER JOIN t0 ON CAST(((vt0.c0)<>(vt0.c0)) AS INTEGER) WHERE (((((((vt0.c0) ISNULL))GLOB(v0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, rt0 INNER JOIN t0 ON CAST(((vt0.c0)<>(vt0.c0)) AS INTEGER);
SELECT ALL vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (('-1349291892' COLLATE NOCASE)*(((((vt0.c0)AND(vt0.c0)))AND(t0.c0)))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (('-1349291892' COLLATE NOCASE)*(((((vt0.c0)AND(vt0.c0)))AND(t0.c0)))) WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))) NOT BETWEEN (LIKE(vt0.c0, vt0.c0, '8')) AND (CAST(t0.c0 AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (('-1349291892' COLLATE NOCASE)*(((((vt0.c0)AND(vt0.c0)))AND(t0.c0)))) WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))) NOT BETWEEN (LIKE(vt0.c0, vt0.c0, '8')) AND (CAST(t0.c0 AS NUMERIC)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (('-1349291892' COLLATE NOCASE)*(((((vt0.c0)AND(vt0.c0)))AND(t0.c0)))) WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))) NOT BETWEEN (LIKE(vt0.c0, vt0.c0, '8')) AND (CAST(t0.c0 AS NUMERIC)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (('-1349291892' COLLATE NOCASE)*(((((vt0.c0)AND(vt0.c0)))AND(t0.c0)))) GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((((v0.c2) NOT BETWEEN (v0.c1) AND (vt0.c0)))AND(((v0.c0) IS TRUE))))OR(((((v0.c0)OR(v0.c0)))OR(v0.c2)))) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((((v0.c2) NOT BETWEEN (v0.c1) AND (vt0.c0)))AND(((v0.c0) IS TRUE))))OR(((((v0.c0)OR(v0.c0)))OR(v0.c2)))) GROUP BY vt0.c0, v0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((((v0.c2) NOT BETWEEN (v0.c1) AND (vt0.c0)))AND(((v0.c0) IS TRUE))))OR(((((v0.c0)OR(v0.c0)))OR(v0.c2)))) GROUP BY vt0.c0, v0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((((v0.c2) NOT BETWEEN (v0.c1) AND (vt0.c0)))AND(((v0.c0) IS TRUE))))OR(((((v0.c0)OR(v0.c0)))OR(v0.c2)))) GROUP BY vt0.c0, v0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), '' COLLATE NOCASE, ((vt0.c0) IS TRUE)))==((vt0.c0 COLLATE BINARY, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), '' COLLATE NOCASE, ((vt0.c0) IS TRUE)))=((vt0.c0 COLLATE BINARY, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), '' COLLATE NOCASE, ((vt0.c0) IS TRUE)))==((vt0.c0 COLLATE BINARY, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t0, v0, vt0;
SELECT DISTINCT * FROM t0, v0, vt0 WHERE ((((+ (vt0.c0)))OR(CAST(v0.c0 AS TEXT)))) UNION SELECT DISTINCT * FROM t0, v0, vt0 WHERE ((NOT ((((+ (vt0.c0)))OR(CAST(v0.c0 AS TEXT)))))) UNION SELECT DISTINCT * FROM t0, v0, vt0 WHERE ((((((+ (vt0.c0)))OR(CAST(v0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM t0, v0, vt0;
SELECT rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0, v0.c2 FROM t0, vt0, v0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0, v0.c2;
SELECT rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0, v0.c2 FROM t0, vt0, v0, rt0 WHERE ((((+ (v0.c1)))OR(1.083644685E9))) GROUP BY rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0, v0.c2 UNION SELECT rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0, v0.c2 FROM t0, vt0, v0, rt0 WHERE ((NOT ((((+ (v0.c1)))OR(1.083644685E9))))) GROUP BY rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0, v0.c2 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0, v0.c2 FROM t0, vt0, v0, rt0 WHERE ((((((+ (v0.c1)))OR(1.083644685E9))) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0, v0.c2;
SELECT rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0, v0.c2 FROM t0, vt0, v0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0, v0.c2;
SELECT ALL rt0.c4, rt0.c1, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c4, rt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c4, rt0.c1, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c4, rt0.c1, vt0.c0, rt0.c2 HAVING ((((((((((((MIN(rt0.c3))OR(TOTAL(MIN(x'5557')))))OR(GROUP_CONCAT(v0.c2))))AND(COUNT(*))))AND(COUNT(*))))AND(((GROUP_CONCAT(MAX(COUNT(*))))%(rt0.c3)))))AND((SUM(rt0.c0) IN ()))) UNION ALL SELECT rt0.c4, rt0.c1, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c4, rt0.c1, vt0.c0, rt0.c2 HAVING (NOT (((((((((((((MIN(rt0.c3))OR(TOTAL(MIN(x'5557')))))OR(GROUP_CONCAT(v0.c2))))AND(COUNT(*))))AND(COUNT(*))))AND(((GROUP_CONCAT(MAX(COUNT(*))))%(rt0.c3)))))AND((SUM(rt0.c0) IN ()))))) UNION ALL SELECT ALL rt0.c4, rt0.c1, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c4, rt0.c1, vt0.c0, rt0.c2 HAVING ((((((((((((((MIN(rt0.c3))OR(TOTAL(MIN(x'5557')))))OR(GROUP_CONCAT(v0.c2))))AND(COUNT(*))))AND(COUNT(*))))AND(((GROUP_CONCAT(MAX(COUNT(*))))%(rt0.c3)))))AND((SUM(rt0.c0) IN ())))) ISNULL);
SELECT ALL rt0.c4, rt0.c1, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c4, rt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c4, rt0.c1, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c4, rt0.c1, vt0.c0, rt0.c2 HAVING ((((((((((((MIN(rt0.c3))OR(TOTAL(MIN(x'5557')))))OR(GROUP_CONCAT(v0.c2))))AND(COUNT(*))))AND(COUNT(*))))AND(((GROUP_CONCAT(MAX(COUNT(*))))%(rt0.c3)))))AND((SUM(rt0.c0) IN ()))) UNION ALL SELECT rt0.c4, rt0.c1, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c4, rt0.c1, vt0.c0, rt0.c2 HAVING (NOT (((((((((((((MIN(rt0.c3))OR(TOTAL(MIN(x'5557')))))OR(GROUP_CONCAT(v0.c2))))AND(COUNT(*))))AND(COUNT(*))))AND(((GROUP_CONCAT(MAX(COUNT(*))))%(rt0.c3)))))AND((SUM(rt0.c0) IN ()))))) UNION ALL SELECT ALL rt0.c4, rt0.c1, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c4, rt0.c1, vt0.c0, rt0.c2 HAVING ((((((((((((((MIN(rt0.c3))OR(TOTAL(MIN(x'5557')))))OR(GROUP_CONCAT(v0.c2))))AND(COUNT(*))))AND(COUNT(*))))AND(((GROUP_CONCAT(MAX(COUNT(*))))%(rt0.c3)))))AND((SUM(rt0.c0) IN ())))) ISNULL);
SELECT ALL rt0.c4, rt0.c1, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c4, rt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM rt0;
SELECT rt0.c3, rt0.c4, rt0.c2 FROM rt0 WHERE ((0.059866010032953554 IN ())) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT ((0.059866010032953554 IN ())))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c2 FROM rt0 WHERE ((((0.059866010032953554 IN ())) ISNULL));
SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM rt0;
SELECT DISTINCT t0.c0, v0.c1 FROM v0, t0 LEFT OUTER JOIN vt0 ON (- (json_array(vt0.c0, t0.c0)));
SELECT DISTINCT t0.c0, v0.c1 FROM v0, t0 LEFT OUTER JOIN vt0 ON (- (json_array(vt0.c0, t0.c0))) WHERE (((((t0.c0)&(v0.c0)))-(((t0.c0) BETWEEN (v0.c0) AND (v0.c0))))) UNION SELECT DISTINCT t0.c0, v0.c1 FROM v0, t0 LEFT OUTER JOIN vt0 ON (- (json_array(vt0.c0, t0.c0))) WHERE ((NOT (((((t0.c0)&(v0.c0)))-(((t0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) UNION SELECT DISTINCT t0.c0, v0.c1 FROM v0, t0 LEFT OUTER JOIN vt0 ON (- (json_array(vt0.c0, t0.c0))) WHERE (((((((t0.c0)&(v0.c0)))-(((t0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT DISTINCT t0.c0, v0.c1 FROM v0, t0 LEFT OUTER JOIN vt0 ON (- (json_array(vt0.c0, t0.c0)));
SELECT v0.c0, rt0.c0, rt0.c3, v0.c1, rt0.c4, vt0.c0, rt0.c2, v0.c2, rt0.c1 FROM rt0, vt0, v0, t0 NOT INDEXED GROUP BY v0.c0, rt0.c0, rt0.c3, v0.c1, rt0.c4, vt0.c0, rt0.c2, v0.c2, rt0.c1;
SELECT ALL v0.c0, rt0.c0, rt0.c3, v0.c1, rt0.c4, vt0.c0, rt0.c2, v0.c2, rt0.c1 FROM rt0, vt0, v0, t0 WHERE (((CASE WHEN t0.c0 THEN rt0.c4 ELSE v0.c1 END) BETWEEN (((rt0.c3)GLOB(rt0.c4))) AND ((rt0.c0 IN ())))) GROUP BY v0.c0, rt0.c0, rt0.c3, v0.c1, rt0.c4, vt0.c0, rt0.c2, v0.c2, rt0.c1 UNION SELECT ALL v0.c0, rt0.c0, rt0.c3, v0.c1, rt0.c4, vt0.c0, rt0.c2, v0.c2, rt0.c1 FROM rt0, vt0, v0, t0 WHERE ((NOT (((CASE WHEN t0.c0 THEN rt0.c4 ELSE v0.c1 END) BETWEEN (((rt0.c3)GLOB(rt0.c4))) AND ((rt0.c0 IN ())))))) GROUP BY v0.c0, rt0.c0, rt0.c3, v0.c1, rt0.c4, vt0.c0, rt0.c2, v0.c2, rt0.c1 UNION SELECT ALL v0.c0, rt0.c0, rt0.c3, v0.c1, rt0.c4, vt0.c0, rt0.c2, v0.c2, rt0.c1 FROM rt0, vt0, v0, t0 WHERE (((((CASE WHEN t0.c0 THEN rt0.c4 ELSE v0.c1 END) BETWEEN (((rt0.c3)GLOB(rt0.c4))) AND ((rt0.c0 IN ())))) ISNULL)) GROUP BY v0.c0, rt0.c0, rt0.c3, v0.c1, rt0.c4, vt0.c0, rt0.c2, v0.c2, rt0.c1;
SELECT v0.c0, rt0.c0, rt0.c3, v0.c1, rt0.c4, vt0.c0, rt0.c2, v0.c2, rt0.c1 FROM rt0, vt0, v0, t0 NOT INDEXED GROUP BY v0.c0, rt0.c0, rt0.c3, v0.c1, rt0.c4, vt0.c0, rt0.c2, v0.c2, rt0.c1;
SELECT vt0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0 HAVING MAX(((((v0.c0)OR(t0.c0)))AND(SUM(SUM(v0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(((((v0.c0)OR(t0.c0)))AND(SUM(SUM(v0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0 HAVING ((MAX(((((v0.c0)OR(t0.c0)))AND(SUM(SUM(v0.c0)))))) ISNULL);
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (- ((((v0.c2, v0.c0, v0.c2)) BETWEEN ((v0.c0, rt0.c3, v0.c1)) AND ((rt0.c4, rt0.c3, rt0.c4))))) LEFT OUTER JOIN v0 ON ((((((rt0.c1)AND(v0.c0)))AND(rt0.c1)))>(v0.c1 COLLATE BINARY));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((NULL IN (0.757074618916825))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((NULL IN (0.757074618916825))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((NULL IN (0.757074618916825))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c2))) BETWEEN ((~ (v0.c0))) AND ((v0.c0 IN ())))) GROUP BY v0.c2 UNION SELECT v0.c2 FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (v0.c2))) BETWEEN ((~ (v0.c0))) AND ((v0.c0 IN ())))))) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c2))) BETWEEN ((~ (v0.c0))) AND ((v0.c0 IN ())))) ISNULL)) GROUP BY v0.c2;
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL t0.c0, v0.c0, vt0.c0, rt0.c2, rt0.c4, rt0.c0, rt0.c3, rt0.c1, v0.c2 FROM v0, rt0, vt0, t0 GROUP BY t0.c0, v0.c0, vt0.c0, rt0.c2, rt0.c4, rt0.c0, rt0.c3, rt0.c1, v0.c2;
SELECT t0.c0, v0.c0, vt0.c0, rt0.c2, rt0.c4, rt0.c0, rt0.c3, rt0.c1, v0.c2 FROM v0, rt0, vt0, t0 GROUP BY t0.c0, v0.c0, vt0.c0, rt0.c2, rt0.c4, rt0.c0, rt0.c3, rt0.c1, v0.c2 HAVING AVG(COUNT(*)) UNION ALL SELECT t0.c0, v0.c0, vt0.c0, rt0.c2, rt0.c4, rt0.c0, rt0.c3, rt0.c1, v0.c2 FROM v0, rt0, vt0, t0 GROUP BY t0.c0, v0.c0, vt0.c0, rt0.c2, rt0.c4, rt0.c0, rt0.c3, rt0.c1, v0.c2 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL t0.c0, v0.c0, vt0.c0, rt0.c2, rt0.c4, rt0.c0, rt0.c3, rt0.c1, v0.c2 FROM v0, rt0, vt0, t0 GROUP BY t0.c0, v0.c0, vt0.c0, rt0.c2, rt0.c4, rt0.c0, rt0.c3, rt0.c1, v0.c2 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS INTEGER)) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT (CAST(CAST(vt0.c0 AS TEXT) AS INTEGER)))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE (((CAST(CAST(vt0.c0 AS TEXT) AS INTEGER)) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT * FROM v0, rt0, vt0;
SELECT DISTINCT * FROM v0, rt0, vt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))%('V'))) UNION SELECT DISTINCT * FROM v0, rt0, vt0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))%('V'))))) UNION SELECT DISTINCT * FROM v0, rt0, vt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))%('V'))) ISNULL));
SELECT DISTINCT * FROM v0, rt0, vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING IFNULL(DISTINCT MAX(v0.c1), CASE WHEN NULL THEN COUNT(v0.c0) WHEN v0.c1 THEN 0X28c823f3 WHEN v0.c2 THEN v0.c1 END) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (IFNULL(DISTINCT MAX(v0.c1), CASE WHEN NULL THEN COUNT(v0.c0) WHEN v0.c1 THEN 0x28c823f3 WHEN v0.c2 THEN v0.c1 END))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((IFNULL(DISTINCT MAX(v0.c1), CASE WHEN NULL THEN COUNT(v0.c0) WHEN v0.c1 THEN 0x28c823f3 WHEN v0.c2 THEN v0.c1 END)) ISNULL);
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING IFNULL(DISTINCT MAX(v0.c1), CASE WHEN NULL THEN COUNT(v0.c0) WHEN v0.c1 THEN 0X28c823f3 WHEN v0.c2 THEN v0.c1 END) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (IFNULL(DISTINCT MAX(v0.c1), CASE WHEN NULL THEN COUNT(v0.c0) WHEN v0.c1 THEN 0x28c823f3 WHEN v0.c2 THEN v0.c1 END))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((IFNULL(DISTINCT MAX(v0.c1), CASE WHEN NULL THEN COUNT(v0.c0) WHEN v0.c1 THEN 0x28c823f3 WHEN v0.c2 THEN v0.c1 END)) ISNULL);
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0) IS TRUE))>(((t0.c0)|(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) IS TRUE))>(((t0.c0)|(t0.c0))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((((t0.c0) IS TRUE))>(((t0.c0)|(t0.c0))))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((- (((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c3))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((- (((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c3))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((- (((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (load_extension((~ (t0.c0)), ((((t0.c0)AND(t0.c0)))AND(t0.c0)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (load_extension((~ (t0.c0)), ((((t0.c0)AND(t0.c0)))AND(t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((load_extension((~ (t0.c0)), ((((t0.c0)AND(t0.c0)))AND(t0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL vt0.c0, v0.c2, v0.c1 FROM vt0, t0, v0 GROUP BY vt0.c0, v0.c2, v0.c1;
SELECT ALL vt0.c0, v0.c2, v0.c1 FROM vt0, t0, v0 GROUP BY vt0.c0, v0.c2, v0.c1 HAVING MAX(TOTAL(vt0.c0)) UNION ALL SELECT ALL vt0.c0, v0.c2, v0.c1 FROM vt0, t0, v0 GROUP BY vt0.c0, v0.c2, v0.c1 HAVING (NOT (MAX(TOTAL(vt0.c0)))) UNION ALL SELECT vt0.c0, v0.c2, v0.c1 FROM vt0, t0, v0 GROUP BY vt0.c0, v0.c2, v0.c1 HAVING ((MAX(TOTAL(vt0.c0))) ISNULL);
SELECT v0.c2 FROM v0;
SELECT v0.c2 FROM v0 WHERE (((((v0.c0)AND(v0.c1)))OR(v0.c2)) COLLATE NOCASE) UNION ALL SELECT ALL v0.c2 FROM v0 WHERE ((NOT (((((v0.c0)AND(v0.c1)))OR(v0.c2)) COLLATE NOCASE))) UNION ALL SELECT v0.c2 FROM v0 WHERE (((((((v0.c0)AND(v0.c1)))OR(v0.c2)) COLLATE NOCASE) ISNULL));
SELECT v0.c2 FROM v0;
SELECT DISTINCT t0.c0 FROM v0 FULL OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM)IS NOT(x''));
SELECT DISTINCT t0.c0 FROM v0 FULL OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM)IS NOT(x'')) WHERE ((((((((((((('iq')AND(v0.c0)))OR(v0.c0)))OR(UPPER(NULL))))AND(v0.c1 COLLATE RTRIM)))OR('z(')))AND(((((v0.c2)AND(v0.c2)))AND(t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM v0 FULL OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM)IS NOT(x'')) WHERE ((NOT ((((((((((((('iq')AND(v0.c0)))OR(v0.c0)))OR(UPPER(NULL))))AND(v0.c1 COLLATE RTRIM)))OR('z(')))AND(((((v0.c2)AND(v0.c2)))AND(t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM v0 FULL OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM)IS NOT(x'')) WHERE ((((((((((((((('iq')AND(v0.c0)))OR(v0.c0)))OR(UPPER(NULL))))AND(v0.c1 COLLATE RTRIM)))OR('z(')))AND(((((v0.c2)AND(v0.c2)))AND(t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM v0 FULL OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM)IS NOT(x''));
SELECT rt0.c3, rt0.c2, v0.c2, rt0.c4, rt0.c1, vt0.c0, v0.c0, v0.c1 FROM vt0, rt0, v0 GROUP BY rt0.c3, rt0.c2, v0.c2, rt0.c4, rt0.c1, vt0.c0, v0.c0, v0.c1;
SELECT ALL rt0.c3, rt0.c2, v0.c2, rt0.c4, rt0.c1, vt0.c0, v0.c0, v0.c1 FROM vt0, rt0, v0 WHERE ((((+ (rt0.c4)))IS(((NULL) IS TRUE)))) GROUP BY rt0.c3, rt0.c2, v0.c2, rt0.c4, rt0.c1, vt0.c0, v0.c0, v0.c1 UNION SELECT ALL rt0.c3, rt0.c2, v0.c2, rt0.c4, rt0.c1, vt0.c0, v0.c0, v0.c1 FROM vt0, rt0, v0 WHERE ((NOT ((((+ (rt0.c4)))IS(((NULL) IS TRUE)))))) GROUP BY rt0.c3, rt0.c2, v0.c2, rt0.c4, rt0.c1, vt0.c0, v0.c0, v0.c1 UNION SELECT ALL rt0.c3, rt0.c2, v0.c2, rt0.c4, rt0.c1, vt0.c0, v0.c0, v0.c1 FROM vt0, rt0, v0 WHERE ((((((+ (rt0.c4)))IS(((NULL) IS TRUE)))) ISNULL)) GROUP BY rt0.c3, rt0.c2, v0.c2, rt0.c4, rt0.c1, vt0.c0, v0.c0, v0.c1;
SELECT rt0.c3, rt0.c2, v0.c2, rt0.c4, rt0.c1, vt0.c0, v0.c0, v0.c1 FROM vt0, rt0, v0 GROUP BY rt0.c3, rt0.c2, v0.c2, rt0.c4, rt0.c1, vt0.c0, v0.c0, v0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE WHEN COUNT(*) THEN SUM(vt0.c0) END)==(0.6364808999093228)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((CASE WHEN COUNT(*) THEN SUM(vt0.c0) END)==(0.6364808999093228)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((CASE WHEN COUNT(*) THEN SUM(vt0.c0) END)=(0.6364808999093228))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE WHEN COUNT(*) THEN SUM(vt0.c0) END)==(0.6364808999093228)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((CASE WHEN COUNT(*) THEN SUM(vt0.c0) END)==(0.6364808999093228)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((CASE WHEN COUNT(*) THEN SUM(vt0.c0) END)=(0.6364808999093228))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0, v0.c2, rt0.c1, v0.c0, rt0.c3, vt0.c0, rt0.c0, rt0.c2, rt0.c4 FROM t0, v0, vt0 NATURAL JOIN rt0;
SELECT ALL t0.c0, v0.c2, rt0.c1, v0.c0, rt0.c3, vt0.c0, rt0.c0, rt0.c2, rt0.c4 FROM t0, v0, vt0 NATURAL JOIN rt0 WHERE (CAST('63379193' AS NUMERIC)) UNION ALL SELECT ALL t0.c0, v0.c2, rt0.c1, v0.c0, rt0.c3, vt0.c0, rt0.c0, rt0.c2, rt0.c4 FROM t0, v0, vt0 NATURAL JOIN rt0 WHERE ((NOT (CAST('63379193' AS NUMERIC)))) UNION ALL SELECT t0.c0, v0.c2, rt0.c1, v0.c0, rt0.c3, vt0.c0, rt0.c0, rt0.c2, rt0.c4 FROM t0, v0, vt0 NATURAL JOIN rt0 WHERE (((CAST('63379193' AS NUMERIC)) ISNULL));
SELECT ALL t0.c0, v0.c2, rt0.c1, v0.c0, rt0.c3, vt0.c0, rt0.c0, rt0.c2, rt0.c4 FROM t0, v0, vt0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c1, t0.c0, rt0.c3, rt0.c2, v0.c1 FROM v0 CROSS JOIN t0 ON (((((rt0.c0)) BETWEEN ((0.9977244896968165)) AND (('?sBl7Uj#q'))))|(0X3f5fac9d)) LEFT OUTER JOIN rt0 ON (NOT (((v0.c2) ISNULL))) LEFT OUTER JOIN vt0 ON ((((((((CASE 0.5338404113507221  WHEN v0.c2 THEN rt0.c2 ELSE rt0.c1 END)OR(((v0.c1)<=(rt0.c1)))))OR(((vt0.c0)>(v0.c0)))))AND((rt0.c1 IN (v0.c1)))))OR(((rt0.c1) IS FALSE)));
SELECT DISTINCT rt0.c1, t0.c0, rt0.c3, rt0.c2, v0.c1 FROM v0 CROSS JOIN t0 ON (((((rt0.c0)) BETWEEN ((0.9977244896968165)) AND (('?sBl7Uj#q'))))|(0X3f5fac9d)) LEFT OUTER JOIN rt0 ON (NOT (((v0.c2) ISNULL))) LEFT OUTER JOIN vt0 ON ((((((((CASE 0.5338404113507221  WHEN v0.c2 THEN rt0.c2 ELSE rt0.c1 END)OR(((v0.c1)<=(rt0.c1)))))OR(((vt0.c0)>(v0.c0)))))AND((rt0.c1 IN (v0.c1)))))OR(((rt0.c1) IS FALSE))) WHERE ((((((- (vt0.c0)))AND('1782595962')))AND(rt0.c3))) UNION SELECT DISTINCT rt0.c1, t0.c0, rt0.c3, rt0.c2, v0.c1 FROM v0 CROSS JOIN t0 ON (((((rt0.c0)) BETWEEN ((0.9977244896968165)) AND (('?sBl7Uj#q'))))|(0x3f5fac9d)) LEFT OUTER JOIN rt0 ON (NOT (((v0.c2) ISNULL))) LEFT OUTER JOIN vt0 ON ((((((((CASE 0.5338404113507221  WHEN v0.c2 THEN rt0.c2 ELSE rt0.c1 END)OR(((v0.c1)<=(rt0.c1)))))OR(((vt0.c0)>(v0.c0)))))AND((rt0.c1 IN (v0.c1)))))OR(((rt0.c1) IS FALSE))) WHERE ((NOT ((((((- (vt0.c0)))AND('1782595962')))AND(rt0.c3))))) UNION SELECT DISTINCT rt0.c1, t0.c0, rt0.c3, rt0.c2, v0.c1 FROM v0 CROSS JOIN t0 ON (((((rt0.c0)) BETWEEN ((0.9977244896968165)) AND (('?sBl7Uj#q'))))|(0x3f5fac9d)) LEFT OUTER JOIN rt0 ON (NOT (((v0.c2) ISNULL))) LEFT OUTER JOIN vt0 ON ((((((((CASE 0.5338404113507221  WHEN v0.c2 THEN rt0.c2 ELSE rt0.c1 END)OR(((v0.c1)<=(rt0.c1)))))OR(((vt0.c0)>(v0.c0)))))AND((rt0.c1 IN (v0.c1)))))OR(((rt0.c1) IS FALSE))) WHERE ((((((((- (vt0.c0)))AND('1782595962')))AND(rt0.c3))) ISNULL));
SELECT DISTINCT rt0.c1, t0.c0, rt0.c3, rt0.c2, v0.c1 FROM v0 CROSS JOIN t0 ON (((((rt0.c0)) BETWEEN ((0.9977244896968165)) AND (('?sBl7Uj#q'))))|(0X3f5fac9d)) LEFT OUTER JOIN rt0 ON (NOT (((v0.c2) ISNULL))) LEFT OUTER JOIN vt0 ON ((((((((CASE 0.5338404113507221  WHEN v0.c2 THEN rt0.c2 ELSE rt0.c1 END)OR(((v0.c1)<=(rt0.c1)))))OR(((vt0.c0)>(v0.c0)))))AND((rt0.c1 IN (v0.c1)))))OR(((rt0.c1) IS FALSE)));
SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c3;
SELECT rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0 WHERE ((~ ((~ (rt0.c2))))) GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT ((~ ((~ (rt0.c2))))))) GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0 WHERE ((((~ ((~ (rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c3;
SELECT ALL t0.c0, rt0.c1, rt0.c4, v0.c2, rt0.c0, vt0.c0, rt0.c2, v0.c1, rt0.c3, v0.c0 FROM vt0, rt0, v0, t0 GROUP BY t0.c0, rt0.c1, rt0.c4, v0.c2, rt0.c0, vt0.c0, rt0.c2, v0.c1, rt0.c3, v0.c0;
SELECT t0.c0, rt0.c1, rt0.c4, v0.c2, rt0.c0, vt0.c0, rt0.c2, v0.c1, rt0.c3, v0.c0 FROM vt0, rt0, v0, t0 GROUP BY t0.c0, rt0.c1, rt0.c4, v0.c2, rt0.c0, vt0.c0, rt0.c2, v0.c1, rt0.c3, v0.c0 HAVING MAX(MAX(COUNT(0x33d3777d))) UNION ALL SELECT ALL t0.c0, rt0.c1, rt0.c4, v0.c2, rt0.c0, vt0.c0, rt0.c2, v0.c1, rt0.c3, v0.c0 FROM vt0, rt0, v0, t0 GROUP BY t0.c0, rt0.c1, rt0.c4, v0.c2, rt0.c0, vt0.c0, rt0.c2, v0.c1, rt0.c3, v0.c0 HAVING (NOT (MAX(MAX(COUNT(0x33d3777d))))) UNION ALL SELECT t0.c0, rt0.c1, rt0.c4, v0.c2, rt0.c0, vt0.c0, rt0.c2, v0.c1, rt0.c3, v0.c0 FROM vt0, rt0, v0, t0 GROUP BY t0.c0, rt0.c1, rt0.c4, v0.c2, rt0.c0, vt0.c0, rt0.c2, v0.c1, rt0.c3, v0.c0 HAVING ((MAX(MAX(COUNT(0x33d3777d)))) ISNULL);
SELECT * FROM t0, rt0, vt0, v0;
SELECT * FROM t0, rt0, vt0, v0 WHERE ((('\r7xVc ag' COLLATE RTRIM)<(608391786))) ORDER BY json(vt0.c0 COLLATE RTRIM)  NULLS LAST, ((vt0.c0)>>((((('1003118157')OR(rt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM t0, rt0, vt0, v0 WHERE ((NOT ((('\r7xVc ag' COLLATE RTRIM)<(608391786))))) ORDER BY json(vt0.c0 COLLATE RTRIM)  NULLS LAST, ((vt0.c0)>>((((('1003118157')OR(rt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM t0, rt0, vt0, v0 WHERE ((((('\r7xVc ag' COLLATE RTRIM)<(608391786))) ISNULL)) ORDER BY json(vt0.c0 COLLATE RTRIM)  NULLS LAST, ((vt0.c0)>>((((('1003118157')OR(rt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST;
SELECT * FROM t0, rt0, vt0, v0;
SELECT DISTINCT * FROM t0, vt0, v0, rt0;
SELECT DISTINCT * FROM t0, vt0, v0, rt0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM t0, vt0, v0, rt0 NOT INDEXED WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM t0, vt0, v0, rt0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM t0, vt0, v0, rt0;
SELECT rt0.c1, v0.c2, rt0.c3, v0.c0 FROM rt0, vt0, v0 CROSS JOIN t0 ON CASE (NOT (v0.c2))  WHEN ((rt0.c0) ISNULL) THEN ((t0.c0) NOT NULL) WHEN ((t0.c0) BETWEEN (vt0.c0) AND (v0.c0)) THEN '幍eQD' WHEN ((rt0.c4)GLOB(vt0.c0)) THEN ((v0.c0)LIKE(v0.c1)) ELSE IFNULL(rt0.c4, v0.c0) END GROUP BY rt0.c1, v0.c2, rt0.c3, v0.c0;
SELECT ALL rt0.c1, v0.c2, rt0.c3, v0.c0 FROM rt0, vt0, v0 CROSS JOIN t0 ON CASE (NOT (v0.c2))  WHEN ((rt0.c0) ISNULL) THEN ((t0.c0) NOT NULL) WHEN ((t0.c0) BETWEEN (vt0.c0) AND (v0.c0)) THEN '幍eQD' WHEN ((rt0.c4)GLOB(vt0.c0)) THEN ((v0.c0)LIKE(v0.c1)) ELSE IFNULL(rt0.c4, v0.c0) END WHERE (rt0.c1) GROUP BY rt0.c1, v0.c2, rt0.c3, v0.c0 UNION SELECT ALL rt0.c1, v0.c2, rt0.c3, v0.c0 FROM rt0, vt0, v0 CROSS JOIN t0 ON CASE (NOT (v0.c2))  WHEN ((rt0.c0) ISNULL) THEN ((t0.c0) NOT NULL) WHEN ((t0.c0) BETWEEN (vt0.c0) AND (v0.c0)) THEN '幍eQD' WHEN ((rt0.c4)GLOB(vt0.c0)) THEN ((v0.c0)LIKE(v0.c1)) ELSE IFNULL(rt0.c4, v0.c0) END WHERE ((NOT (rt0.c1))) GROUP BY rt0.c1, v0.c2, rt0.c3, v0.c0 UNION SELECT ALL rt0.c1, v0.c2, rt0.c3, v0.c0 FROM rt0, vt0, v0 CROSS JOIN t0 ON CASE (NOT (v0.c2))  WHEN ((rt0.c0) ISNULL) THEN ((t0.c0) NOT NULL) WHEN ((t0.c0) BETWEEN (vt0.c0) AND (v0.c0)) THEN '幍eQD' WHEN ((rt0.c4)GLOB(vt0.c0)) THEN ((v0.c0)LIKE(v0.c1)) ELSE IFNULL(rt0.c4, v0.c0) END WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c1, v0.c2, rt0.c3, v0.c0;
SELECT rt0.c1, v0.c2, rt0.c3, v0.c0 FROM rt0, vt0, v0 CROSS JOIN t0 ON CASE (NOT (v0.c2))  WHEN ((rt0.c0) ISNULL) THEN ((t0.c0) NOT NULL) WHEN ((t0.c0) BETWEEN (vt0.c0) AND (v0.c0)) THEN '幍eQD' WHEN ((rt0.c4)GLOB(vt0.c0)) THEN ((v0.c0)LIKE(v0.c1)) ELSE IFNULL(rt0.c4, v0.c0) END GROUP BY rt0.c1, v0.c2, rt0.c3, v0.c0;
SELECT ALL rt0.c1, rt0.c2, v0.c0, v0.c1, v0.c2, t0.c0 FROM rt0, t0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, v0.c1, v0.c2, t0.c0;
SELECT rt0.c1, rt0.c2, v0.c0, v0.c1, v0.c2, t0.c0 FROM rt0, t0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, v0.c1, v0.c2, t0.c0 HAVING ((json_valid(AVG(MIN(GROUP_CONCAT(t0.c0)))))>>(MIN(rt0.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0, v0.c1, v0.c2, t0.c0 FROM rt0, t0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, v0.c1, v0.c2, t0.c0 HAVING (NOT (((json_valid(AVG(MIN(GROUP_CONCAT(t0.c0)))))>>(MIN(rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c2, v0.c0, v0.c1, v0.c2, t0.c0 FROM rt0, t0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, v0.c1, v0.c2, t0.c0 HAVING ((((json_valid(AVG(MIN(GROUP_CONCAT(t0.c0)))))>>(MIN(rt0.c0)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0xffffffff902ec9d0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0xffffffff902ec9d0))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0Xffffffff902ec9d0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, rt0, t0, v0 NOT INDEXED;
SELECT DISTINCT * FROM vt0, rt0, t0, v0 WHERE (((vt0.c0)OR(rt0.c2)) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0, rt0, t0, v0 WHERE ((NOT (((vt0.c0)OR(rt0.c2)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0, rt0, t0, v0 WHERE (((((vt0.c0)OR(rt0.c2)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, t0, v0 NOT INDEXED;
SELECT ALL rt0.c3 FROM t0 CROSS JOIN vt0 ON ((CASE vt0.c0  WHEN NULL THEN rt0.c3 ELSE rt0.c4 END)<<(vt0.c0 COLLATE BINARY)) RIGHT OUTER JOIN rt0 ON (~ ((((rt0.c1, vt0.c0, rt0.c4)) NOT BETWEEN ((t0.c0, rt0.c2, rt0.c4)) AND ((rt0.c2, t0.c0, rt0.c2))))) GROUP BY rt0.c3;
SELECT ALL vt0.c0, v0.c0, v0.c2 FROM vt0, t0, v0 GROUP BY vt0.c0, v0.c0, v0.c2;
SELECT vt0.c0, v0.c0, v0.c2 FROM vt0, t0, v0 GROUP BY vt0.c0, v0.c0, v0.c2 HAVING v0.c1 UNION ALL SELECT vt0.c0, v0.c0, v0.c2 FROM vt0, t0, v0 GROUP BY vt0.c0, v0.c0, v0.c2 HAVING (NOT (v0.c1)) UNION ALL SELECT vt0.c0, v0.c0, v0.c2 FROM vt0, t0, v0 GROUP BY vt0.c0, v0.c0, v0.c2 HAVING ((v0.c1) ISNULL);
SELECT ALL vt0.c0, v0.c0, v0.c2 FROM vt0, t0, v0 GROUP BY vt0.c0, v0.c0, v0.c2;
SELECT vt0.c0, v0.c0, v0.c2 FROM vt0, t0, v0 GROUP BY vt0.c0, v0.c0, v0.c2 HAVING v0.c1 UNION ALL SELECT vt0.c0, v0.c0, v0.c2 FROM vt0, t0, v0 GROUP BY vt0.c0, v0.c0, v0.c2 HAVING (NOT (v0.c1)) UNION ALL SELECT vt0.c0, v0.c0, v0.c2 FROM vt0, t0, v0 GROUP BY vt0.c0, v0.c0, v0.c2 HAVING ((v0.c1) ISNULL);
SELECT ALL vt0.c0, v0.c0, v0.c2 FROM vt0, t0, v0 GROUP BY vt0.c0, v0.c0, v0.c2;
SELECT v0.c2, v0.c0, v0.c1 FROM v0;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 WHERE (((v0.c0 COLLATE RTRIM)<=(((v0.c0)IS NOT(v0.c2))))) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 WHERE ((NOT (((v0.c0 COLLATE RTRIM)<=(((v0.c0)IS NOT(v0.c2))))))) UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)<=(((v0.c0)IS NOT(v0.c2))))) ISNULL));
SELECT v0.c2, v0.c0, v0.c1 FROM v0;
SELECT DISTINCT * FROM vt0, rt0, v0, t0;
SELECT DISTINCT * FROM vt0, rt0, v0, t0 WHERE ((((v0.c1, v0.c1, v0.c1)) NOT BETWEEN ((TRIM(rt0.c2), CAST(rt0.c4 AS NUMERIC), ((t0.c0) ISNULL))) AND (((rt0.c4 IN (rt0.c2)), ((t0.c0)AND(v0.c1)), 0.3165463487022371)))) UNION SELECT DISTINCT * FROM vt0, rt0, v0, t0 WHERE ((NOT ((((v0.c1, v0.c1, v0.c1)) NOT BETWEEN ((TRIM(rt0.c2), CAST(rt0.c4 AS NUMERIC), ((t0.c0) ISNULL))) AND (((rt0.c4 IN (rt0.c2)), ((t0.c0)AND(v0.c1)), 0.3165463487022371)))))) UNION SELECT DISTINCT * FROM vt0, rt0, v0, t0 WHERE ((((((v0.c1, v0.c1, v0.c1)) NOT BETWEEN ((TRIM(rt0.c2), CAST(rt0.c4 AS NUMERIC), ((t0.c0) ISNULL))) AND (((rt0.c4 IN (rt0.c2)), ((t0.c0)AND(v0.c1)), 0.3165463487022371)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, v0, t0;
SELECT ALL v0.c0, rt0.c0, rt0.c1, v0.c1, rt0.c4, rt0.c3 FROM v0, vt0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c1, v0.c1, rt0.c4, rt0.c3;
SELECT v0.c0, rt0.c0, rt0.c1, v0.c1, rt0.c4, rt0.c3 FROM v0, vt0, rt0 WHERE (((CAST(rt0.c4 AS REAL)) IS TRUE)) GROUP BY v0.c0, rt0.c0, rt0.c1, v0.c1, rt0.c4, rt0.c3 UNION SELECT v0.c0, rt0.c0, rt0.c1, v0.c1, rt0.c4, rt0.c3 FROM v0, vt0, rt0 WHERE ((NOT (((CAST(rt0.c4 AS REAL)) IS TRUE)))) GROUP BY v0.c0, rt0.c0, rt0.c1, v0.c1, rt0.c4, rt0.c3 UNION SELECT v0.c0, rt0.c0, rt0.c1, v0.c1, rt0.c4, rt0.c3 FROM v0, vt0, rt0 WHERE (((((CAST(rt0.c4 AS REAL)) IS TRUE)) ISNULL)) GROUP BY v0.c0, rt0.c0, rt0.c1, v0.c1, rt0.c4, rt0.c3;
SELECT ALL v0.c0, rt0.c0, rt0.c1, v0.c1, rt0.c4, rt0.c3 FROM v0, vt0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c1, v0.c1, rt0.c4, rt0.c3;
SELECT rt0.c3, rt0.c2, vt0.c0, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c2, vt0.c0, rt0.c4;
SELECT rt0.c3, rt0.c2, vt0.c0, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c2, vt0.c0, rt0.c4 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL rt0.c3, rt0.c2, vt0.c0, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c2, vt0.c0, rt0.c4 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL rt0.c3, rt0.c2, vt0.c0, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c2, vt0.c0, rt0.c4 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT * FROM vt0 CROSS JOIN v0 ON rt0.c2 LEFT OUTER JOIN rt0 ON HEX(DISTINCT (rt0.c2 IN (v0.c2)));
SELECT * FROM vt0 CROSS JOIN v0 ON rt0.c2 LEFT OUTER JOIN rt0 ON HEX(DISTINCT (rt0.c2 IN (v0.c2))) WHERE (((((rt0.c3)+(vt0.c0)))>>(((((vt0.c0)OR(rt0.c0)))AND(v0.c1))))) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN v0 ON rt0.c2 LEFT OUTER JOIN rt0 ON HEX(DISTINCT (rt0.c2 IN (v0.c2))) WHERE ((NOT (((((rt0.c3)+(vt0.c0)))>>(((((vt0.c0)OR(rt0.c0)))AND(v0.c1))))))) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN v0 ON rt0.c2 LEFT OUTER JOIN rt0 ON HEX(DISTINCT (rt0.c2 IN (v0.c2))) WHERE (((((((rt0.c3)+(vt0.c0)))>>(((((vt0.c0)OR(rt0.c0)))AND(v0.c1))))) ISNULL));
SELECT * FROM vt0 CROSS JOIN v0 ON rt0.c2 LEFT OUTER JOIN rt0 ON HEX(DISTINCT (rt0.c2 IN (v0.c2)));
SELECT DISTINCT rt0.c4, v0.c0, t0.c0 FROM t0, v0 FULL OUTER JOIN rt0 ON '-345981215';
SELECT DISTINCT rt0.c4, v0.c0, t0.c0 FROM t0, v0 FULL OUTER JOIN rt0 ON '-345981215' WHERE (((((t0.c0) IS TRUE)) NOT BETWEEN (((v0.c1) IS TRUE)) AND (CAST(rt0.c3 AS NUMERIC)))) UNION SELECT DISTINCT rt0.c4, v0.c0, t0.c0 FROM t0, v0 FULL OUTER JOIN rt0 ON '-345981215' WHERE ((NOT (((((t0.c0) IS TRUE)) NOT BETWEEN (((v0.c1) IS TRUE)) AND (CAST(rt0.c3 AS NUMERIC)))))) UNION SELECT DISTINCT rt0.c4, v0.c0, t0.c0 FROM t0, v0 FULL OUTER JOIN rt0 ON '-345981215' WHERE (((((((t0.c0) IS TRUE)) NOT BETWEEN (((v0.c1) IS TRUE)) AND (CAST(rt0.c3 AS NUMERIC)))) ISNULL));
SELECT DISTINCT rt0.c4, v0.c0, t0.c0 FROM t0, v0 FULL OUTER JOIN rt0 ON '-345981215';
SELECT ALL t0.c0 FROM t0, rt0, v0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, rt0, v0 WHERE (((((((((((((v0.c0 COLLATE NOCASE)AND(((v0.c2) NOTNULL))))AND(((rt0.c1)|(t0.c0)))))AND(((((t0.c0)AND(rt0.c1)))AND('r')))))OR(((t0.c0)LIKE(rt0.c3)))))OR((('-9223372036854775808') BETWEEN (rt0.c1) AND (rt0.c2)))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((v0.c1)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, rt0, v0 WHERE ((NOT (((((((((((((v0.c0 COLLATE NOCASE)AND(((v0.c2) NOTNULL))))AND(((rt0.c1)|(t0.c0)))))AND(((((t0.c0)AND(rt0.c1)))AND('r')))))OR(((t0.c0)LIKE(rt0.c3)))))OR((('-9223372036854775808') BETWEEN (rt0.c1) AND (rt0.c2)))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((v0.c1)))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, rt0, v0 WHERE (((((((((((((((v0.c0 COLLATE NOCASE)AND(((v0.c2) NOTNULL))))AND(((rt0.c1)|(t0.c0)))))AND(((((t0.c0)AND(rt0.c1)))AND('r')))))OR(((t0.c0)LIKE(rt0.c3)))))OR((('-9223372036854775808') BETWEEN (rt0.c1) AND (rt0.c2)))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((v0.c1)))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, rt0, v0 GROUP BY t0.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 HAVING AVG(COUNT(MAX(AVG(rt0.c2)))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 HAVING (NOT (AVG(COUNT(MAX(AVG(rt0.c2)))))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 HAVING ((AVG(COUNT(MAX(AVG(rt0.c2))))) ISNULL);
SELECT ALL * FROM v0, t0 CROSS JOIN vt0 ON ((x'') ISNULL) COLLATE RTRIM;
SELECT ALL * FROM v0, t0 CROSS JOIN vt0 ON ((x'') ISNULL) COLLATE RTRIM WHERE (0x3727d314) UNION ALL SELECT ALL * FROM v0, t0 CROSS JOIN vt0 ON ((x'') ISNULL) COLLATE RTRIM WHERE ((NOT (0X3727d314))) UNION ALL SELECT * FROM v0, t0 CROSS JOIN vt0 ON ((x'') ISNULL) COLLATE RTRIM WHERE (((0X3727d314) ISNULL));
SELECT ALL * FROM v0, t0 CROSS JOIN vt0 ON ((x'') ISNULL) COLLATE RTRIM;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0) NOT NULL))OR((((t0.c0, t0.c0, '30129357', t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))))AND((((0.9170448460166621, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((((t0.c0) NOT NULL))OR((((t0.c0, t0.c0, '30129357', t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))))AND((((0.9170448460166621, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0)))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((((t0.c0) NOT NULL))OR((((t0.c0, t0.c0, '30129357', t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))))AND((((0.9170448460166621, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0)))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 WHERE (((((HEX(rt0.c1))AND(rt0.c2)))OR(((((rt0.c4)OR(rt0.c0)))OR(rt0.c3))))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM rt0 WHERE ((NOT (((((HEX(rt0.c1))AND(rt0.c2)))OR(((((rt0.c4)OR(rt0.c0)))OR(rt0.c3))))))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM rt0 WHERE (((((((HEX(rt0.c1))AND(rt0.c2)))OR(((((rt0.c4)OR(rt0.c0)))OR(rt0.c3))))) ISNULL)) GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT vt0.c0, rt0.c4, rt0.c0, v0.c2, v0.c0, rt0.c3 FROM v0, vt0 FULL OUTER JOIN rt0 ON (((rt0.c1, ((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)), ((v0.c0)-(v0.c2))))>((((-1.846907169E9)AND(rt0.c4)), (vt0.c0 IN ()), (rt0.c3 IN (rt0.c4))))) GROUP BY vt0.c0, rt0.c4, rt0.c0, v0.c2, v0.c0, rt0.c3;
SELECT vt0.c0, rt0.c4, rt0.c0, v0.c2, v0.c0, rt0.c3 FROM v0, vt0 FULL OUTER JOIN rt0 ON (((rt0.c1, ((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)), ((v0.c0)-(v0.c2))))>((((-1.846907169E9)AND(rt0.c4)), (vt0.c0 IN ()), (rt0.c3 IN (rt0.c4))))) GROUP BY vt0.c0, rt0.c4, rt0.c0, v0.c2, v0.c0, rt0.c3 HAVING rtreenode(((('i?|}᝚w')) NOT BETWEEN ((MIN(TOTAL(rt0.c4)))) AND ((rt0.c1))), MAX(TOTAL(GROUP_CONCAT(AVG(rt0.c1)))) COLLATE RTRIM) UNION ALL SELECT vt0.c0, rt0.c4, rt0.c0, v0.c2, v0.c0, rt0.c3 FROM v0, vt0 FULL OUTER JOIN rt0 ON (((rt0.c1, ((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)), ((v0.c0)-(v0.c2))))>((((-1.846907169E9)AND(rt0.c4)), (vt0.c0 IN ()), (rt0.c3 IN (rt0.c4))))) GROUP BY vt0.c0, rt0.c4, rt0.c0, v0.c2, v0.c0, rt0.c3 HAVING (NOT (rtreenode(((('i?|}᝚w')) NOT BETWEEN ((MIN(TOTAL(rt0.c4)))) AND ((rt0.c1))), MAX(TOTAL(GROUP_CONCAT(AVG(rt0.c1)))) COLLATE RTRIM))) UNION ALL SELECT vt0.c0, rt0.c4, rt0.c0, v0.c2, v0.c0, rt0.c3 FROM v0, vt0 FULL OUTER JOIN rt0 ON (((rt0.c1, ((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)), ((v0.c0)-(v0.c2))))>((((-1.846907169E9)AND(rt0.c4)), (vt0.c0 IN ()), (rt0.c3 IN (rt0.c4))))) GROUP BY vt0.c0, rt0.c4, rt0.c0, v0.c2, v0.c0, rt0.c3 HAVING ((rtreenode(((('i?|}᝚w')) NOT BETWEEN ((MIN(TOTAL(rt0.c4)))) AND ((rt0.c1))), MAX(TOTAL(GROUP_CONCAT(AVG(rt0.c1)))) COLLATE RTRIM)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM vt0, rt0;
SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM vt0, rt0 WHERE ((((NULL)||(rt0.c4)) IN ())) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM vt0, rt0 WHERE ((NOT ((((NULL)||(rt0.c4)) IN ())))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM vt0, rt0 WHERE ((((((NULL)||(rt0.c4)) IN ())) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM vt0, rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) BETWEEN (NULL) AND (t0.c0))) ISNULL)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0) BETWEEN (NULL) AND (t0.c0))) ISNULL)))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0) BETWEEN (NULL) AND (t0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0, v0.c1, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, v0.c1, vt0.c0;
SELECT ALL t0.c0, v0.c1, vt0.c0 FROM vt0, v0, t0 WHERE ((((((((((vt0.c0 IN ()))AND((((v0.c0)) NOT BETWEEN ((t0.c0)) AND (('1411452407'))))))OR(((((v0.c1)AND(v0.c1)))OR(vt0.c0)))))AND(((v0.c2)>>(v0.c0)))))OR(((v0.c2)>>(vt0.c0))))) GROUP BY t0.c0, v0.c1, vt0.c0 UNION SELECT ALL t0.c0, v0.c1, vt0.c0 FROM vt0, v0, t0 WHERE ((NOT ((((((((((vt0.c0 IN ()))AND((((v0.c0)) NOT BETWEEN ((t0.c0)) AND (('1411452407'))))))OR(((((v0.c1)AND(v0.c1)))OR(vt0.c0)))))AND(((v0.c2)>>(v0.c0)))))OR(((v0.c2)>>(vt0.c0))))))) GROUP BY t0.c0, v0.c1, vt0.c0 UNION SELECT ALL t0.c0, v0.c1, vt0.c0 FROM vt0, v0, t0 WHERE ((((((((((((vt0.c0 IN ()))AND((((v0.c0)) NOT BETWEEN ((t0.c0)) AND (('1411452407'))))))OR(((((v0.c1)AND(v0.c1)))OR(vt0.c0)))))AND(((v0.c2)>>(v0.c0)))))OR(((v0.c2)>>(vt0.c0))))) ISNULL)) GROUP BY t0.c0, v0.c1, vt0.c0;
SELECT t0.c0, v0.c1, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, v0.c1, vt0.c0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING SUM((((AVG(GROUP_CONCAT(vt0.c0)), t0.c0, MIN(vt0.c0)))<=((t0.c0, x'', vt0.c0)))) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING (NOT (SUM((((AVG(GROUP_CONCAT(vt0.c0)), t0.c0, MIN(vt0.c0)))<=((t0.c0, x'', vt0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING ((SUM((((AVG(GROUP_CONCAT(vt0.c0)), t0.c0, MIN(vt0.c0)))<=((t0.c0, x'', vt0.c0))))) ISNULL);
SELECT rt0.c0, vt0.c0, rt0.c3, rt0.c4 FROM vt0, rt0;
SELECT rt0.c0, vt0.c0, rt0.c3, rt0.c4 FROM vt0, rt0 WHERE (rt0.c4) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c3, rt0.c4 FROM vt0, rt0 WHERE ((NOT (rt0.c4))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c3, rt0.c4 FROM vt0, rt0 WHERE (((rt0.c4) ISNULL));
SELECT rt0.c0, vt0.c0, rt0.c3, rt0.c4 FROM vt0, rt0;
SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0;
SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0 WHERE (((NULL)>(NULL))) UNION SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0 WHERE ((NOT (((NULL)>(NULL))))) UNION SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0 WHERE (((((NULL)>(NULL))) ISNULL));
SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0;
SELECT t0.c0 FROM vt0 CROSS JOIN t0 ON (((vt0.c0)) NOT BETWEEN ((UNLIKELY(t0.c0))) AND ((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END))) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0 CROSS JOIN t0 ON (((vt0.c0)) NOT BETWEEN ((UNLIKELY(t0.c0))) AND ((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END))) WHERE ((((t0.c0 IN ())) BETWEEN (CAST(-1.018155113E9 AS TEXT)) AND (CAST(vt0.c0 AS BLOB)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0 CROSS JOIN t0 ON (((vt0.c0)) NOT BETWEEN ((UNLIKELY(t0.c0))) AND ((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END))) WHERE ((NOT ((((t0.c0 IN ())) BETWEEN (CAST(-1.018155113E9 AS TEXT)) AND (CAST(vt0.c0 AS BLOB)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0 CROSS JOIN t0 ON (((vt0.c0)) NOT BETWEEN ((UNLIKELY(t0.c0))) AND ((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END))) WHERE ((((((t0.c0 IN ())) BETWEEN (CAST(-1.018155113E9 AS TEXT)) AND (CAST(vt0.c0 AS BLOB)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0 CROSS JOIN t0 ON (((vt0.c0)) NOT BETWEEN ((UNLIKELY(t0.c0))) AND ((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END))) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((t0.c0 COLLATE BINARY)AND(t0.c0 COLLATE NOCASE)))OR(((t0.c0)<=(GROUP_CONCAT(AVG(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((t0.c0 COLLATE BINARY)AND(t0.c0 COLLATE NOCASE)))OR(((t0.c0)<=(GROUP_CONCAT(AVG(t0.c0)))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((t0.c0 COLLATE BINARY)AND(t0.c0 COLLATE NOCASE)))OR(((t0.c0)<=(GROUP_CONCAT(AVG(t0.c0))))))) ISNULL);
SELECT v0.c0, v0.c2, v0.c1 FROM v0, t0, rt0;
SELECT v0.c0, v0.c2, v0.c1 FROM v0, t0, rt0 WHERE (v0.c0) UNION ALL SELECT v0.c0, v0.c2, v0.c1 FROM v0, t0, rt0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0, t0, rt0 WHERE (((v0.c0) ISNULL));
SELECT v0.c0, v0.c2, v0.c1 FROM v0, t0, rt0;
SELECT DISTINCT t0.c0 FROM t0, v0, vt0;
SELECT DISTINCT t0.c0 FROM t0, v0, vt0 WHERE (((((((((((v0.c1)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(v0.c1)))LIKE(((vt0.c0) ISNULL)))) UNION SELECT DISTINCT t0.c0 FROM t0, v0, vt0 WHERE ((NOT (((((((((((v0.c1)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(v0.c1)))LIKE(((vt0.c0) ISNULL)))))) UNION SELECT DISTINCT t0.c0 FROM t0, v0, vt0 WHERE (((((((((((((v0.c1)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(v0.c1)))LIKE(((vt0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, v0, vt0;
SELECT rt0.c1, rt0.c4, rt0.c3, v0.c2, vt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, v0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, v0.c2, vt0.c0 FROM rt0, v0, vt0 WHERE (((NULLIF(v0.c1, rt0.c4))==((v0.c2 IN ())))) GROUP BY rt0.c1, rt0.c4, rt0.c3, v0.c2, vt0.c0 UNION SELECT rt0.c1, rt0.c4, rt0.c3, v0.c2, vt0.c0 FROM rt0, v0, vt0 WHERE ((NOT (((NULLIF(v0.c1, rt0.c4))=((v0.c2 IN ())))))) GROUP BY rt0.c1, rt0.c4, rt0.c3, v0.c2, vt0.c0 UNION SELECT rt0.c1, rt0.c4, rt0.c3, v0.c2, vt0.c0 FROM rt0, v0, vt0 WHERE (((((NULLIF(v0.c1, rt0.c4))=((v0.c2 IN ())))) ISNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c3, v0.c2, vt0.c0;
SELECT rt0.c1, rt0.c4, rt0.c3, v0.c2, vt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, v0.c2, vt0.c0;
SELECT v0.c2, v0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c2, v0.c1, vt0.c0;
SELECT ALL v0.c2, v0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c2, v0.c1, vt0.c0 HAVING MIN(x'1a1c') UNION ALL SELECT v0.c2, v0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c2, v0.c1, vt0.c0 HAVING (NOT (MIN(x'1a1c'))) UNION ALL SELECT ALL v0.c2, v0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c2, v0.c1, vt0.c0 HAVING ((MIN(x'1a1c')) ISNULL);
SELECT v0.c2, v0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c2, v0.c1, vt0.c0;
SELECT ALL v0.c2, v0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c2, v0.c1, vt0.c0 HAVING MIN(x'1a1c') UNION ALL SELECT v0.c2, v0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c2, v0.c1, vt0.c0 HAVING (NOT (MIN(x'1a1c'))) UNION ALL SELECT ALL v0.c2, v0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c2, v0.c1, vt0.c0 HAVING ((MIN(x'1a1c')) ISNULL);
SELECT v0.c2, v0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c2, v0.c1, vt0.c0;
SELECT ALL SUM((((((t0.c0)) NOT BETWEEN ((v0.c1)) AND ((t0.c0)))) BETWEEN ((NOT (v0.c0))) AND ((- (v0.c0))))) FROM v0, t0, vt0 ORDER BY (((((vt0.c0)) BETWEEN ((-1672150680)) AND ((v0.c1))))IS NOT(((v0.c0)LIKE(v0.c0)))) ASC  NULLS LAST;
SELECT v0.c0 FROM v0, vt0, t0;
SELECT v0.c0 FROM v0, vt0, t0 WHERE (NULLIF(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)), t0.c0)) UNION ALL SELECT v0.c0 FROM v0, vt0, t0 WHERE ((NOT (NULLIF(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)), t0.c0)))) UNION ALL SELECT v0.c0 FROM v0, vt0 NOT INDEXED, t0 WHERE (((NULLIF(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)), t0.c0)) ISNULL));
SELECT v0.c0 FROM v0, vt0, t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, NULL, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, NULL, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, NULL, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0, v0.c1, v0.c2 FROM vt0, rt0, t0, v0 GROUP BY t0.c0, v0.c1, v0.c2;
SELECT t0.c0, v0.c1, v0.c2 FROM vt0, rt0, t0, v0 WHERE ((((('-1528126680')+(vt0.c0)))<>((- (t0.c0))))) GROUP BY t0.c0, v0.c1, v0.c2 UNION SELECT t0.c0, v0.c1, v0.c2 FROM vt0, rt0, t0, v0 WHERE ((NOT ((((('-1528126680')+(vt0.c0)))!=((- (t0.c0))))))) GROUP BY t0.c0, v0.c1, v0.c2 UNION SELECT t0.c0, v0.c1, v0.c2 FROM vt0, rt0, t0, v0 WHERE ((((((('-1528126680')+(vt0.c0)))<>((- (t0.c0))))) ISNULL)) GROUP BY t0.c0, v0.c1, v0.c2;
SELECT t0.c0, v0.c1, v0.c2 FROM vt0, rt0, t0, v0 GROUP BY t0.c0, v0.c1, v0.c2;
SELECT ALL v0.c2, vt0.c0, v0.c0, v0.c1 FROM v0, vt0 GROUP BY v0.c2, vt0.c0, v0.c0, v0.c1;
SELECT v0.c2, vt0.c0, v0.c0, v0.c1 FROM v0, vt0 GROUP BY v0.c2, vt0.c0, v0.c0, v0.c1 HAVING TOTAL(SUM(COUNT(*))) UNION ALL SELECT v0.c2, vt0.c0, v0.c0, v0.c1 FROM v0, vt0 GROUP BY v0.c2, vt0.c0, v0.c0, v0.c1 HAVING (NOT (TOTAL(SUM(COUNT(*))))) UNION ALL SELECT v0.c2, vt0.c0, v0.c0, v0.c1 FROM v0, vt0 GROUP BY v0.c2, vt0.c0, v0.c0, v0.c1 HAVING ((TOTAL(SUM(COUNT(*)))) ISNULL);
SELECT ALL v0.c2 FROM v0, t0;
SELECT v0.c2 FROM v0, t0 WHERE (((v0.c2 COLLATE BINARY)<<(((t0.c0) BETWEEN (t0.c0) AND (0x355477bb))))) UNION ALL SELECT ALL v0.c2 FROM v0, t0 WHERE ((NOT (((v0.c2 COLLATE BINARY)<<(((t0.c0) BETWEEN (t0.c0) AND (0X355477bb))))))) UNION ALL SELECT v0.c2 FROM v0, t0 WHERE (((((v0.c2 COLLATE BINARY)<<(((t0.c0) BETWEEN (t0.c0) AND (0x355477bb))))) ISNULL));
SELECT ALL v0.c2 FROM v0, t0;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 LEFT OUTER JOIN v0 ON NULL;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 LEFT OUTER JOIN v0 ON NULL WHERE (NULL) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 LEFT OUTER JOIN v0 ON NULL WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 LEFT OUTER JOIN v0 ON NULL WHERE (((NULL) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 LEFT OUTER JOIN v0 ON NULL;
SELECT v0.c1 FROM vt0, v0, rt0, t0 GROUP BY v0.c1;
SELECT v0.c1 FROM vt0, v0, rt0, t0 WHERE ((((rt0.c4)) BETWEEN ((vt0.c0)) AND ((t0.c0))) COLLATE NOCASE) GROUP BY v0.c1 UNION SELECT v0.c1 FROM vt0, v0, rt0, t0 WHERE ((NOT ((((rt0.c4)) BETWEEN ((vt0.c0)) AND ((t0.c0))) COLLATE NOCASE))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM vt0, v0, rt0, t0 WHERE ((((((rt0.c4)) BETWEEN ((vt0.c0)) AND ((t0.c0))) COLLATE NOCASE) ISNULL)) GROUP BY v0.c1;
SELECT v0.c1 FROM vt0, v0, rt0, t0 GROUP BY v0.c1;
SELECT ALL v0.c2, rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1, t0.c0, v0.c1, v0.c0 FROM vt0, t0, v0, rt0 GROUP BY v0.c2, rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1, t0.c0, v0.c1, v0.c0;
SELECT ALL v0.c2, rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1, t0.c0, v0.c1, v0.c0 FROM vt0, t0, v0, rt0 GROUP BY v0.c2, rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1, t0.c0, v0.c1, v0.c0 HAVING COUNT(GROUP_CONCAT(COUNT(vt0.c0))) UNION ALL SELECT v0.c2, rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1, t0.c0, v0.c1, v0.c0 FROM vt0, t0, v0, rt0 NOT INDEXED GROUP BY v0.c2, rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1, t0.c0, v0.c1, v0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(COUNT(vt0.c0))))) UNION ALL SELECT ALL v0.c2, rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1, t0.c0, v0.c1, v0.c0 FROM vt0, t0, v0, rt0 GROUP BY v0.c2, rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1, t0.c0, v0.c1, v0.c0 HAVING ((COUNT(GROUP_CONCAT(COUNT(vt0.c0)))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN NULL THEN '' WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) AND ((UNLIKELY(DISTINCT vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN NULL THEN '' WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) AND ((UNLIKELY(DISTINCT vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN NULL THEN '' WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) AND ((UNLIKELY(DISTINCT vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT v0.c1, rt0.c1, rt0.c2 FROM v0 INNER JOIN rt0 ON HEX(DATE(rt0.c2, '-945298576', rt0.c4));
SELECT DISTINCT v0.c1, rt0.c1, rt0.c2 FROM v0 INNER JOIN rt0 ON HEX(DATE(rt0.c2, '-945298576', rt0.c4)) WHERE (((((((((((((0.35043348926331075)AND(CASE v0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END)))AND(LIKELIHOOD(DISTINCT NULL, 0.8817130941892378))))OR(TRIM(rt0.c1))))AND(((v0.c2)IS NOT(rt0.c1)))))OR(v0.c2)))OR(((((rt0.c0)AND(v0.c1)))OR(rt0.c4))))) UNION SELECT DISTINCT v0.c1, rt0.c1, rt0.c2 FROM v0 INNER JOIN rt0 ON HEX(DATE(rt0.c2, '-945298576', rt0.c4)) WHERE ((NOT (((((((((((((0.35043348926331075)AND(CASE v0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END)))AND(LIKELIHOOD(DISTINCT NULL, 0.8817130941892378))))OR(TRIM(rt0.c1))))AND(((v0.c2)IS NOT(rt0.c1)))))OR(v0.c2)))OR(((((rt0.c0)AND(v0.c1)))OR(rt0.c4))))))) UNION SELECT DISTINCT v0.c1, rt0.c1, rt0.c2 FROM v0 INNER JOIN rt0 ON HEX(DATE(rt0.c2, '-945298576', rt0.c4)) WHERE (((((((((((((((0.35043348926331075)AND(CASE v0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END)))AND(LIKELIHOOD(DISTINCT NULL, 0.8817130941892378))))OR(TRIM(rt0.c1))))AND(((v0.c2)IS NOT(rt0.c1)))))OR(v0.c2)))OR(((((rt0.c0)AND(v0.c1)))OR(rt0.c4))))) ISNULL));
SELECT DISTINCT v0.c1, rt0.c1, rt0.c2 FROM v0 INNER JOIN rt0 ON HEX(DATE(rt0.c2, '-945298576', rt0.c4));
SELECT ALL v0.c2, v0.c1 FROM v0, rt0 GROUP BY v0.c2, v0.c1;
SELECT ALL v0.c2, v0.c1 FROM v0, rt0 WHERE (((UPPER(DISTINCT v0.c1)) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN 0X5446052d WHEN v0.c1 THEN rt0.c0 ELSE rt0.c1 END) AND (((rt0.c2)IS NOT(rt0.c2))))) GROUP BY v0.c2, v0.c1 UNION SELECT ALL v0.c2, v0.c1 FROM v0, rt0 WHERE ((NOT (((UPPER(DISTINCT v0.c1)) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN 0X5446052d WHEN v0.c1 THEN rt0.c0 ELSE rt0.c1 END) AND (((rt0.c2)IS NOT(rt0.c2))))))) GROUP BY v0.c2, v0.c1 UNION SELECT ALL v0.c2, v0.c1 FROM v0, rt0 WHERE (((((UPPER(DISTINCT v0.c1)) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN 0X5446052d WHEN v0.c1 THEN rt0.c0 ELSE rt0.c1 END) AND (((rt0.c2)IS NOT(rt0.c2))))) ISNULL)) GROUP BY v0.c2, v0.c1;
SELECT ALL v0.c2, v0.c1 FROM v0, rt0 GROUP BY v0.c2, v0.c1;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (((SUM(COUNT(*)), COUNT(*), TOTAL(rt0.c1)))<>((((SUM(rt0.c0))|(rt0.c3)), ((MIN(rt0.c0)) NOT NULL), ((((MIN(MAX(GROUP_CONCAT('-807269227'))))OR(rt0.c1)))OR(rt0.c0))))) UNION ALL SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (NOT ((((SUM(COUNT(*)), COUNT(*), TOTAL(rt0.c1)))!=((((SUM(rt0.c0))|(rt0.c3)), ((MIN(rt0.c0)) NOT NULL), ((((MIN(MAX(GROUP_CONCAT('-807269227'))))OR(rt0.c1)))OR(rt0.c0))))))) UNION ALL SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (((((SUM(COUNT(*)), COUNT(*), TOTAL(rt0.c1)))!=((((SUM(rt0.c0))|(rt0.c3)), ((MIN(rt0.c0)) NOT NULL), ((((MIN(MAX(GROUP_CONCAT('-807269227'))))OR(rt0.c1)))OR(rt0.c0)))))) ISNULL);
SELECT v0.c0, rt0.c4, v0.c2, rt0.c2, rt0.c3, rt0.c1, v0.c1 FROM v0, rt0;
SELECT ALL v0.c0, rt0.c4, v0.c2, rt0.c2, rt0.c3, rt0.c1, v0.c1 FROM v0, rt0 WHERE (x'') UNION ALL SELECT v0.c0, rt0.c4, v0.c2, rt0.c2, rt0.c3, rt0.c1, v0.c1 FROM v0, rt0 WHERE ((NOT (x''))) UNION ALL SELECT v0.c0, rt0.c4, v0.c2, rt0.c2, rt0.c3, rt0.c1, v0.c1 FROM v0, rt0 WHERE (((x'') ISNULL));
SELECT v0.c0, rt0.c4, v0.c2, rt0.c2, rt0.c3, rt0.c1, v0.c1 FROM v0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE (t0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, t0;
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 WHERE ((((((((((+ (rt0.c0)))OR(((rt0.c3)<(rt0.c1)))))AND(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)))))AND(CAST(rt0.c0 AS REAL))))OR((rt0.c0 IN ())))) GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT ((((((((((+ (rt0.c0)))OR(((rt0.c3)<(rt0.c1)))))AND(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)))))AND(CAST(rt0.c0 AS REAL))))OR((rt0.c0 IN ())))))) GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 WHERE ((((((((((((+ (rt0.c0)))OR(((rt0.c3)<(rt0.c1)))))AND(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)))))AND(CAST(rt0.c0 AS REAL))))OR((rt0.c0 IN ())))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3;
SELECT rt0.c2, vt0.c0, rt0.c4, v0.c2, rt0.c0, v0.c1, rt0.c1, t0.c0, v0.c0, rt0.c3 FROM t0, vt0 NOT INDEXED, rt0, v0 GROUP BY rt0.c2, vt0.c0, rt0.c4, v0.c2, rt0.c0, v0.c1, rt0.c1, t0.c0, v0.c0, rt0.c3;
SELECT rt0.c2, vt0.c0, rt0.c4, v0.c2, rt0.c0, v0.c1, rt0.c1, t0.c0, v0.c0, rt0.c3 FROM t0, vt0, rt0, v0 GROUP BY rt0.c2, vt0.c0, rt0.c4, v0.c2, rt0.c0, v0.c1, rt0.c1, t0.c0, v0.c0, rt0.c3 HAVING SUM(GROUP_CONCAT(1083644685)) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c4, v0.c2, rt0.c0, v0.c1, rt0.c1, t0.c0, v0.c0, rt0.c3 FROM t0, vt0, rt0, v0 GROUP BY rt0.c2, vt0.c0, rt0.c4, v0.c2, rt0.c0, v0.c1, rt0.c1, t0.c0, v0.c0, rt0.c3 HAVING (NOT (SUM(GROUP_CONCAT(1083644685)))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c4, v0.c2, rt0.c0, v0.c1, rt0.c1, t0.c0, v0.c0, rt0.c3 FROM t0, vt0, rt0, v0 GROUP BY rt0.c2, vt0.c0, rt0.c4, v0.c2, rt0.c0, v0.c1, rt0.c1, t0.c0, v0.c0, rt0.c3 HAVING ((SUM(GROUP_CONCAT(1083644685))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((CAST(x'' AS NUMERIC) IN ())) UNION ALL SELECT * FROM v0 WHERE ((NOT ((CAST(x'' AS NUMERIC) IN ())))) UNION ALL SELECT ALL * FROM v0 WHERE ((((CAST(x'' AS NUMERIC) IN ())) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0, rt0.c0, rt0.c3, vt0.c0, rt0.c4, rt0.c2 FROM vt0, v0 NOT INDEXED, rt0;
SELECT DISTINCT v0.c0, rt0.c0, rt0.c3, vt0.c0, rt0.c4, rt0.c2 FROM vt0, v0, rt0 WHERE (x'') UNION SELECT DISTINCT v0.c0, rt0.c0, rt0.c3, vt0.c0, rt0.c4, rt0.c2 FROM vt0, v0, rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT v0.c0, rt0.c0, rt0.c3, vt0.c0, rt0.c4, rt0.c2 FROM vt0, v0, rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT v0.c0, rt0.c0, rt0.c3, vt0.c0, rt0.c4, rt0.c2 FROM vt0, v0 NOT INDEXED, rt0;
SELECT ALL v0.c0, v0.c1, vt0.c0 FROM v0 LEFT OUTER JOIN t0 ON CAST(ABS(t0.c0) AS INTEGER) LEFT OUTER JOIN vt0 ON ((CASE t0.c0  WHEN vt0.c0 THEN v0.c2 ELSE v0.c1 END)<<(CASE v0.c1  WHEN t0.c0 THEN vt0.c0 ELSE 7.94227012E8 END)) GROUP BY v0.c0, v0.c1, vt0.c0;
SELECT v0.c0, v0.c1, vt0.c0 FROM v0 LEFT OUTER JOIN t0 ON CAST(ABS(t0.c0) AS INTEGER) LEFT OUTER JOIN vt0 ON ((CASE t0.c0  WHEN vt0.c0 THEN v0.c2 ELSE v0.c1 END)<<(CASE v0.c1  WHEN t0.c0 THEN vt0.c0 ELSE 7.94227012E8 END)) WHERE ((((t0.c0)) NOT BETWEEN ((((v0.c1)%(v0.c2)))) AND ((NULL)))) GROUP BY v0.c0, v0.c1, vt0.c0 UNION SELECT v0.c0, v0.c1, vt0.c0 FROM v0 LEFT OUTER JOIN t0 ON CAST(ABS(t0.c0) AS INTEGER) LEFT OUTER JOIN vt0 ON ((CASE t0.c0  WHEN vt0.c0 THEN v0.c2 ELSE v0.c1 END)<<(CASE v0.c1  WHEN t0.c0 THEN vt0.c0 ELSE 7.94227012E8 END)) WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((((v0.c1)%(v0.c2)))) AND ((NULL)))))) GROUP BY v0.c0, v0.c1, vt0.c0 UNION SELECT ALL v0.c0, v0.c1, vt0.c0 FROM v0 LEFT OUTER JOIN t0 ON CAST(ABS(t0.c0) AS INTEGER) LEFT OUTER JOIN vt0 ON ((CASE t0.c0  WHEN vt0.c0 THEN v0.c2 ELSE v0.c1 END)<<(CASE v0.c1  WHEN t0.c0 THEN vt0.c0 ELSE 7.94227012E8 END)) WHERE ((((((t0.c0)) NOT BETWEEN ((((v0.c1)%(v0.c2)))) AND ((NULL)))) ISNULL)) GROUP BY v0.c0, v0.c1, vt0.c0;
SELECT ALL v0.c0, v0.c1, vt0.c0 FROM v0 LEFT OUTER JOIN t0 ON CAST(ABS(t0.c0) AS INTEGER) LEFT OUTER JOIN vt0 ON ((CASE t0.c0  WHEN vt0.c0 THEN v0.c2 ELSE v0.c1 END)<<(CASE v0.c1  WHEN t0.c0 THEN vt0.c0 ELSE 7.94227012E8 END)) GROUP BY v0.c0, v0.c1, vt0.c0;
SELECT ALL v0.c1, rt0.c1, v0.c0, rt0.c2, rt0.c4, v0.c2, rt0.c0, vt0.c0, t0.c0, rt0.c3 FROM t0, v0, vt0, rt0 GROUP BY v0.c1, rt0.c1, v0.c0, rt0.c2, rt0.c4, v0.c2, rt0.c0, vt0.c0, t0.c0, rt0.c3;
SELECT ALL v0.c1, rt0.c1, v0.c0, rt0.c2, rt0.c4, v0.c2, rt0.c0, vt0.c0, t0.c0, rt0.c3 FROM t0, v0, vt0, rt0 GROUP BY v0.c1, rt0.c1, v0.c0, rt0.c2, rt0.c4, v0.c2, rt0.c0, vt0.c0, t0.c0, rt0.c3 HAVING MIN(TOTAL(rt0.c2)) UNION ALL SELECT ALL v0.c1, rt0.c1, v0.c0, rt0.c2, rt0.c4, v0.c2, rt0.c0, vt0.c0, t0.c0, rt0.c3 FROM t0, v0, vt0, rt0 GROUP BY v0.c1, rt0.c1, v0.c0, rt0.c2, rt0.c4, v0.c2, rt0.c0, vt0.c0, t0.c0, rt0.c3 HAVING (NOT (MIN(TOTAL(rt0.c2)))) UNION ALL SELECT ALL v0.c1, rt0.c1, v0.c0, rt0.c2, rt0.c4, v0.c2, rt0.c0, vt0.c0, t0.c0, rt0.c3 FROM t0, v0, vt0, rt0 GROUP BY v0.c1, rt0.c1, v0.c0, rt0.c2, rt0.c4, v0.c2, rt0.c0, vt0.c0, t0.c0, rt0.c3 HAVING ((MIN(TOTAL(rt0.c2))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (t0.c0 COLLATE BINARY) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (t0.c0 COLLATE BINARY))) UNION ALL SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE BINARY) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0)LIKE('0.9004128238051785'))))<((v0.c1 COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((((v0.c0)LIKE('0.9004128238051785'))))<((v0.c1 COLLATE NOCASE)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((((v0.c0)LIKE('0.9004128238051785'))))<((v0.c1 COLLATE NOCASE)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c4, v0.c2 FROM v0, rt0, t0 GROUP BY rt0.c4, v0.c2;
SELECT rt0.c4, v0.c2 FROM v0, rt0, t0 WHERE (CHAR(((NULL)>(v0.c0)), v0.c1 COLLATE RTRIM, CASE WHEN rt0.c1 THEN t0.c0 ELSE t0.c0 END)) GROUP BY rt0.c4, v0.c2 UNION SELECT ALL rt0.c4, v0.c2 FROM v0, rt0, t0 WHERE ((NOT (CHAR(((NULL)>(v0.c0)), v0.c1 COLLATE RTRIM, CASE WHEN rt0.c1 THEN t0.c0 ELSE t0.c0 END)))) GROUP BY rt0.c4, v0.c2 UNION SELECT rt0.c4, v0.c2 FROM v0, rt0, t0 WHERE (((CHAR(((NULL)>(v0.c0)), v0.c1 COLLATE RTRIM, CASE WHEN rt0.c1 THEN t0.c0 ELSE t0.c0 END)) ISNULL)) GROUP BY rt0.c4, v0.c2;
SELECT rt0.c4, v0.c2 FROM v0, rt0, t0 GROUP BY rt0.c4, v0.c2;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT * FROM t0;
SELECT ALL * FROM t0 NOT INDEXED WHERE ((- (((t0.c0)OR(t0.c0))))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((- (((t0.c0)OR(t0.c0))))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((- (((t0.c0)OR(t0.c0))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((+ ('-1780084063' COLLATE BINARY))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((+ ('-1780084063' COLLATE BINARY))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((+ ('-1780084063' COLLATE BINARY))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c2, rt0.c1, v0.c2, v0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c4 FROM v0 CROSS JOIN rt0 ON ((((rt0.c4)AND(v0.c2)))==(rt0.c1 COLLATE NOCASE)) GROUP BY rt0.c2, rt0.c1, v0.c2, v0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, v0.c2, v0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c4 FROM v0 CROSS JOIN rt0 ON ((((rt0.c4)AND(v0.c2)))==(rt0.c1 COLLATE NOCASE)) GROUP BY rt0.c2, rt0.c1, v0.c2, v0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c4 HAVING MIN(TOTAL(v0.c2)) UNION ALL SELECT ALL rt0.c2, rt0.c1, v0.c2, v0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c4 FROM v0 CROSS JOIN rt0 ON ((((rt0.c4)AND(v0.c2)))=(rt0.c1 COLLATE NOCASE)) GROUP BY rt0.c2, rt0.c1, v0.c2, v0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c4 HAVING (NOT (MIN(TOTAL(v0.c2)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, v0.c2, v0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c4 FROM v0 CROSS JOIN rt0 ON ((((rt0.c4)AND(v0.c2)))==(rt0.c1 COLLATE NOCASE)) GROUP BY rt0.c2, rt0.c1, v0.c2, v0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c4 HAVING ((MIN(TOTAL(v0.c2))) ISNULL);
SELECT ALL * FROM rt0, v0, t0, vt0;
SELECT * FROM rt0, v0, t0, vt0 WHERE (rt0.c4) UNION ALL SELECT * FROM rt0, v0, t0, vt0 WHERE ((NOT (rt0.c4))) UNION ALL SELECT ALL * FROM rt0, v0, t0, vt0 WHERE (((rt0.c4) ISNULL));
SELECT ALL * FROM rt0, v0, t0, vt0;
SELECT DISTINCT rt0.c3 FROM t0, vt0, rt0 FULL OUTER JOIN v0 ON vt0.c0;
SELECT DISTINCT rt0.c3 FROM t0, vt0, rt0 FULL OUTER JOIN v0 ON vt0.c0 WHERE (((rt0.c2 IN (rt0.c0, 0X2f56f144)) IN (((rt0.c4) IS FALSE)))) UNION SELECT DISTINCT rt0.c3 FROM t0, vt0, rt0 NOT INDEXED FULL OUTER JOIN v0 ON vt0.c0 WHERE ((NOT (((rt0.c2 IN (rt0.c0, 0X2f56f144)) IN (((rt0.c4) IS FALSE)))))) UNION SELECT DISTINCT rt0.c3 FROM t0, vt0, rt0 FULL OUTER JOIN v0 ON vt0.c0 WHERE (((((rt0.c2 IN (rt0.c0, 0x2f56f144)) IN (((rt0.c4) IS FALSE)))) ISNULL));
SELECT DISTINCT rt0.c3 FROM t0, vt0, rt0 FULL OUTER JOIN v0 ON vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE ((vt0.c0)<>(vt0.c0))  WHEN (((vt0.c0))<((vt0.c0))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)<=(vt0.c0)) THEN ((vt0.c0)<<(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)AND(vt0.c0)) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE ((vt0.c0)<>(vt0.c0))  WHEN (((vt0.c0))<((vt0.c0))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)<=(vt0.c0)) THEN ((vt0.c0)<<(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)AND(vt0.c0)) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE ((vt0.c0)!=(vt0.c0))  WHEN (((vt0.c0))<((vt0.c0))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)<=(vt0.c0)) THEN ((vt0.c0)<<(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)AND(vt0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c2, rt0.c1, rt0.c0 FROM rt0, t0, vt0, v0 GROUP BY v0.c2, rt0.c1, rt0.c0;
SELECT ALL v0.c2, rt0.c1, rt0.c0 FROM rt0, t0, vt0, v0 GROUP BY v0.c2, rt0.c1, rt0.c0 HAVING ((AVG(-1283688932))*(GROUP_CONCAT(TOTAL(SUM(0.47230416977320666))))) UNION ALL SELECT v0.c2, rt0.c1, rt0.c0 FROM rt0, t0, vt0, v0 GROUP BY v0.c2, rt0.c1, rt0.c0 HAVING (NOT (((AVG(-1283688932))*(GROUP_CONCAT(TOTAL(SUM(0.47230416977320666))))))) UNION ALL SELECT v0.c2, rt0.c1, rt0.c0 FROM rt0, t0, vt0, v0 GROUP BY v0.c2, rt0.c1, rt0.c0 HAVING ((((AVG(-1283688932))*(GROUP_CONCAT(TOTAL(SUM(0.47230416977320666)))))) ISNULL);
SELECT * FROM vt0, rt0, v0, t0;
SELECT ALL * FROM vt0, rt0, v0, t0 WHERE (v0.c2) UNION ALL SELECT ALL * FROM vt0, rt0, v0, t0 WHERE ((NOT (v0.c2))) UNION ALL SELECT * FROM vt0, rt0, v0, t0 WHERE (((v0.c2) ISNULL));
SELECT * FROM vt0, rt0, v0, t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN (SQLITE_COMPILEOPTION_GET(vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN (SQLITE_COMPILEOPTION_GET(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN (SQLITE_COMPILEOPTION_GET(vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST('ᥨqga' AS NUMERIC)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST('ᥨqga' AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST('ᥨqga' AS NUMERIC)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING SUM(((((v0.c0)AND(v0.c0)))OR(v0.c1))) UNION ALL SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING (NOT (SUM(((((v0.c0)AND(v0.c0)))OR(v0.c1))))) UNION ALL SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING ((SUM(((((v0.c0)AND(v0.c0)))OR(v0.c1)))) ISNULL);
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING SUM(((((v0.c0)AND(v0.c0)))OR(v0.c1))) UNION ALL SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING (NOT (SUM(((((v0.c0)AND(v0.c0)))OR(v0.c1))))) UNION ALL SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING ((SUM(((((v0.c0)AND(v0.c0)))OR(v0.c1)))) ISNULL);
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT * FROM v0 INNER JOIN rt0 ON rt0.c0 INNER JOIN t0 ON (+ (TRIM(rt0.c3))) LEFT OUTER JOIN vt0 ON (((((((((((((((rt0.c3))<>((rt0.c3))))AND(((rt0.c3) NOT BETWEEN (v0.c1) AND (rt0.c4)))))OR(((((rt0.c4)OR(v0.c0)))OR(rt0.c1)))))OR(((rt0.c3) ISNULL))))AND(v0.c1)))OR(((rt0.c3) BETWEEN ('1680790001') AND (rt0.c2)))))AND(((v0.c0) NOT BETWEEN (v0.c1) AND (rt0.c4))));
SELECT ALL * FROM v0 INNER JOIN rt0 ON rt0.c0 INNER JOIN t0 ON (+ (TRIM(rt0.c3))) LEFT OUTER JOIN vt0 ON (((((((((((((((rt0.c3))!=((rt0.c3))))AND(((rt0.c3) NOT BETWEEN (v0.c1) AND (rt0.c4)))))OR(((((rt0.c4)OR(v0.c0)))OR(rt0.c1)))))OR(((rt0.c3) ISNULL))))AND(v0.c1)))OR(((rt0.c3) BETWEEN ('1680790001') AND (rt0.c2)))))AND(((v0.c0) NOT BETWEEN (v0.c1) AND (rt0.c4)))) WHERE ((v0.c1 COLLATE RTRIM IN ())) UNION ALL SELECT ALL * FROM v0 INNER JOIN rt0 ON rt0.c0 INNER JOIN t0 ON (+ (TRIM(rt0.c3))) LEFT OUTER JOIN vt0 ON (((((((((((((((rt0.c3))!=((rt0.c3))))AND(((rt0.c3) NOT BETWEEN (v0.c1) AND (rt0.c4)))))OR(((((rt0.c4)OR(v0.c0)))OR(rt0.c1)))))OR(((rt0.c3) ISNULL))))AND(v0.c1)))OR(((rt0.c3) BETWEEN ('1680790001') AND (rt0.c2)))))AND(((v0.c0) NOT BETWEEN (v0.c1) AND (rt0.c4)))) WHERE ((NOT ((v0.c1 COLLATE RTRIM IN ())))) UNION ALL SELECT ALL * FROM v0 INNER JOIN rt0 ON rt0.c0 INNER JOIN t0 ON (+ (TRIM(rt0.c3))) LEFT OUTER JOIN vt0 ON (((((((((((((((rt0.c3))<>((rt0.c3))))AND(((rt0.c3) NOT BETWEEN (v0.c1) AND (rt0.c4)))))OR(((((rt0.c4)OR(v0.c0)))OR(rt0.c1)))))OR(((rt0.c3) ISNULL))))AND(v0.c1)))OR(((rt0.c3) BETWEEN ('1680790001') AND (rt0.c2)))))AND(((v0.c0) NOT BETWEEN (v0.c1) AND (rt0.c4)))) WHERE ((((v0.c1 COLLATE RTRIM IN ())) ISNULL));
SELECT * FROM v0 INNER JOIN rt0 ON rt0.c0 INNER JOIN t0 ON (+ (TRIM(rt0.c3))) LEFT OUTER JOIN vt0 ON (((((((((((((((rt0.c3))<>((rt0.c3))))AND(((rt0.c3) NOT BETWEEN (v0.c1) AND (rt0.c4)))))OR(((((rt0.c4)OR(v0.c0)))OR(rt0.c1)))))OR(((rt0.c3) ISNULL))))AND(v0.c1)))OR(((rt0.c3) BETWEEN ('1680790001') AND (rt0.c2)))))AND(((v0.c0) NOT BETWEEN (v0.c1) AND (rt0.c4))));
SELECT DISTINCT * FROM vt0, t0, rt0;
SELECT DISTINCT * FROM vt0, t0, rt0 WHERE ((((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0))))<>((((rt0.c0)<>('*OᓌY')))))) UNION SELECT DISTINCT * FROM vt0, t0, rt0 WHERE ((NOT ((((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0))))!=((((rt0.c0)!=('*OᓌY')))))))) UNION SELECT DISTINCT * FROM vt0, t0, rt0 WHERE ((((((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0))))<>((((rt0.c0)<>('*OᓌY')))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0, rt0;
SELECT rt0.c3, v0.c0, rt0.c4, rt0.c0 FROM v0, rt0, vt0, t0 GROUP BY rt0.c3, v0.c0, rt0.c4, rt0.c0;
SELECT ALL rt0.c3, v0.c0, rt0.c4, rt0.c0 FROM v0, rt0, vt0, t0 WHERE (rt0.c2) GROUP BY rt0.c3, v0.c0, rt0.c4, rt0.c0 UNION SELECT ALL rt0.c3, v0.c0, rt0.c4, rt0.c0 FROM v0, rt0, vt0, t0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c3, v0.c0, rt0.c4, rt0.c0 UNION SELECT rt0.c3, v0.c0, rt0.c4, rt0.c0 FROM v0, rt0, vt0, t0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c3, v0.c0, rt0.c4, rt0.c0;
SELECT rt0.c3, v0.c0, rt0.c4, rt0.c0 FROM v0, rt0, vt0, t0 GROUP BY rt0.c3, v0.c0, rt0.c4, rt0.c0;
SELECT ALL v0.c1, vt0.c0 FROM v0, vt0 GROUP BY v0.c1, vt0.c0;
SELECT v0.c1, vt0.c0 FROM v0, vt0 GROUP BY v0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c1, vt0.c0 FROM v0, vt0 GROUP BY v0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c1, vt0.c0 FROM v0, vt0 GROUP BY v0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c1, vt0.c0 FROM v0, vt0 GROUP BY v0.c1, vt0.c0;
SELECT v0.c1, vt0.c0 FROM v0, vt0 GROUP BY v0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c1, vt0.c0 FROM v0, vt0 GROUP BY v0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c1, vt0.c0 FROM v0, vt0 GROUP BY v0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c1, vt0.c0 FROM v0, vt0 GROUP BY v0.c1, vt0.c0;
SELECT rt0.c4, rt0.c1, rt0.c3, vt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON CAST(JULIANDAY(rt0.c2, x'', rt0.c1) AS TEXT) CROSS JOIN vt0 ON (((x''))>=((t0.c0)));
SELECT ALL rt0.c4, rt0.c1, rt0.c3, vt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON CAST(JULIANDAY(rt0.c2, x'', rt0.c1) AS TEXT) CROSS JOIN vt0 ON (((x''))>=((t0.c0))) WHERE (((rt0.c4)OR(rt0.c3)) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c3, vt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON CAST(JULIANDAY(rt0.c2, x'', rt0.c1) AS TEXT) CROSS JOIN vt0 ON (((x''))>=((t0.c0))) WHERE ((NOT (((rt0.c4)OR(rt0.c3)) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c3, vt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON CAST(JULIANDAY(rt0.c2, x'', rt0.c1) AS TEXT) CROSS JOIN vt0 ON (((x''))>=((t0.c0))) WHERE (((((rt0.c4)OR(rt0.c3)) COLLATE NOCASE) ISNULL));
SELECT rt0.c4, rt0.c1, rt0.c3, vt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON CAST(JULIANDAY(rt0.c2, x'', rt0.c1) AS TEXT) CROSS JOIN vt0 ON (((x''))>=((t0.c0)));
SELECT DISTINCT v0.c2 FROM v0, t0;
SELECT DISTINCT v0.c2 FROM v0, t0 WHERE ((((t0.c0) NOT BETWEEN ('-2095948494') AND (v0.c2)) IN (((v0.c2)!=(t0.c0)), NULL COLLATE BINARY))) UNION SELECT DISTINCT v0.c2 FROM v0, t0 WHERE ((NOT ((((t0.c0) NOT BETWEEN ('-2095948494') AND (v0.c2)) IN (((v0.c2)!=(t0.c0)), NULL COLLATE BINARY))))) UNION SELECT DISTINCT v0.c2 FROM v0, t0 WHERE ((((((t0.c0) NOT BETWEEN ('-2095948494') AND (v0.c2)) IN (((v0.c2)!=(t0.c0)), NULL COLLATE BINARY))) ISNULL));
SELECT DISTINCT v0.c2 FROM v0, t0;
SELECT ALL rt0.c4, rt0.c0, v0.c2, v0.c1, vt0.c0, t0.c0, rt0.c3, rt0.c2 FROM rt0, v0, vt0 CROSS JOIN t0 ON (((vt0.c0, ((vt0.c0)OR(rt0.c3)), ((v0.c2)>=(rt0.c0)), (rt0.c3 IN ('HrW	4(')), CAST(vt0.c0 AS NUMERIC)))>=((((((((((rt0.c3)OR(rt0.c4)))AND(t0.c0)))AND(rt0.c2)))AND(v0.c1)), CASE WHEN rt0.c2 THEN v0.c1 WHEN vt0.c0 THEN v0.c0 WHEN rt0.c3 THEN rt0.c1 END, ((rt0.c1)>=('FALSE')), '-1862201746', x''))) GROUP BY rt0.c4, rt0.c0, v0.c2, v0.c1, vt0.c0, t0.c0, rt0.c3, rt0.c2;
SELECT rt0.c4, rt0.c0, v0.c2, v0.c1, vt0.c0, t0.c0, rt0.c3, rt0.c2 FROM rt0, v0, vt0 CROSS JOIN t0 ON (((vt0.c0, ((vt0.c0)OR(rt0.c3)), ((v0.c2)>=(rt0.c0)), (rt0.c3 IN ('HrW	4(')), CAST(vt0.c0 AS NUMERIC)))>=((((((((((rt0.c3)OR(rt0.c4)))AND(t0.c0)))AND(rt0.c2)))AND(v0.c1)), CASE WHEN rt0.c2 THEN v0.c1 WHEN vt0.c0 THEN v0.c0 WHEN rt0.c3 THEN rt0.c1 END, ((rt0.c1)>=('FALSE')), '-1862201746', x''))) WHERE (((((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 END)OR(CASE WHEN rt0.c3 THEN v0.c0 WHEN rt0.c3 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((rt0.c1) NOT BETWEEN ('팔-zRE4') AND (rt0.c1))))) GROUP BY rt0.c4, rt0.c0, v0.c2, v0.c1, vt0.c0, t0.c0, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c0, v0.c2, v0.c1, vt0.c0, t0.c0, rt0.c3, rt0.c2 FROM rt0, v0, vt0 CROSS JOIN t0 ON (((vt0.c0, ((vt0.c0)OR(rt0.c3)), ((v0.c2)>=(rt0.c0)), (rt0.c3 IN ('HrW	4(')), CAST(vt0.c0 AS NUMERIC)))>=((((((((((rt0.c3)OR(rt0.c4)))AND(t0.c0)))AND(rt0.c2)))AND(v0.c1)), CASE WHEN rt0.c2 THEN v0.c1 WHEN vt0.c0 THEN v0.c0 WHEN rt0.c3 THEN rt0.c1 END, ((rt0.c1)>=('FALSE')), '-1862201746', x''))) WHERE ((NOT (((((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 END)OR(CASE WHEN rt0.c3 THEN v0.c0 WHEN rt0.c3 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((rt0.c1) NOT BETWEEN ('팔-zRE4') AND (rt0.c1))))))) GROUP BY rt0.c4, rt0.c0, v0.c2, v0.c1, vt0.c0, t0.c0, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c0, v0.c2, v0.c1, vt0.c0, t0.c0, rt0.c3, rt0.c2 FROM rt0, v0, vt0 CROSS JOIN t0 ON (((vt0.c0, ((vt0.c0)OR(rt0.c3)), ((v0.c2)>=(rt0.c0)), (rt0.c3 IN ('HrW	4(')), CAST(vt0.c0 AS NUMERIC)))>=((((((((((rt0.c3)OR(rt0.c4)))AND(t0.c0)))AND(rt0.c2)))AND(v0.c1)), CASE WHEN rt0.c2 THEN v0.c1 WHEN vt0.c0 THEN v0.c0 WHEN rt0.c3 THEN rt0.c1 END, ((rt0.c1)>=('FALSE')), '-1862201746', x''))) WHERE (((((((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 END)OR(CASE WHEN rt0.c3 THEN v0.c0 WHEN rt0.c3 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((rt0.c1) NOT BETWEEN ('팔-zRE4') AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c4, rt0.c0, v0.c2, v0.c1, vt0.c0, t0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c4, rt0.c0, v0.c2, v0.c1, vt0.c0, t0.c0, rt0.c3, rt0.c2 FROM rt0, v0, vt0 CROSS JOIN t0 ON (((vt0.c0, ((vt0.c0)OR(rt0.c3)), ((v0.c2)>=(rt0.c0)), (rt0.c3 IN ('HrW	4(')), CAST(vt0.c0 AS NUMERIC)))>=((((((((((rt0.c3)OR(rt0.c4)))AND(t0.c0)))AND(rt0.c2)))AND(v0.c1)), CASE WHEN rt0.c2 THEN v0.c1 WHEN vt0.c0 THEN v0.c0 WHEN rt0.c3 THEN rt0.c1 END, ((rt0.c1)>=('FALSE')), '-1862201746', x''))) GROUP BY rt0.c4, rt0.c0, v0.c2, v0.c1, vt0.c0, t0.c0, rt0.c3, rt0.c2;
SELECT rt0.c0 FROM v0, t0, rt0 NOT INDEXED GROUP BY rt0.c0;
SELECT rt0.c0 FROM v0, t0, rt0 GROUP BY rt0.c0 HAVING 1.877047581E9 UNION ALL SELECT rt0.c0 FROM v0, t0, rt0 GROUP BY rt0.c0 HAVING (NOT (1.877047581E9)) UNION ALL SELECT ALL rt0.c0 FROM v0 NOT INDEXED, t0, rt0 GROUP BY rt0.c0 HAVING ((1.877047581E9) ISNULL);
SELECT rt0.c0 FROM v0, t0, rt0 NOT INDEXED GROUP BY rt0.c0;
SELECT rt0.c0 FROM v0, t0, rt0 GROUP BY rt0.c0 HAVING 1.877047581E9 UNION ALL SELECT rt0.c0 FROM v0, t0, rt0 GROUP BY rt0.c0 HAVING (NOT (1.877047581E9)) UNION ALL SELECT ALL rt0.c0 FROM v0 NOT INDEXED, t0, rt0 GROUP BY rt0.c0 HAVING ((1.877047581E9) ISNULL);
SELECT rt0.c0 FROM v0, t0, rt0 NOT INDEXED GROUP BY rt0.c0;
SELECT ALL v0.c2, v0.c0, vt0.c0, v0.c1 FROM vt0, v0;
SELECT v0.c2, v0.c0, vt0.c0, v0.c1 FROM vt0, v0 WHERE ((((v0.c1, vt0.c0, v0.c1, v0.c0, vt0.c0, vt0.c0, v0.c2)) BETWEEN ((((v0.c0) BETWEEN (v0.c2) AND (v0.c0)), ((v0.c0)<(vt0.c0)), v0.c0, (+ (0.46371136338494034)), CAST(v0.c2 AS INTEGER), (('1087270313')<<(v0.c2)), (v0.c0 IN ()))) AND (((v0.c1 IN (v0.c2)), vt0.c0 COLLATE RTRIM, v0.c0 COLLATE NOCASE, x'' COLLATE BINARY, v0.c2, 0.268268839804257 COLLATE BINARY, v0.c1 COLLATE RTRIM)))) UNION ALL SELECT v0.c2, v0.c0, vt0.c0, v0.c1 FROM vt0, v0 WHERE ((NOT ((((v0.c1, vt0.c0, v0.c1, v0.c0, vt0.c0, vt0.c0, v0.c2)) BETWEEN ((((v0.c0) BETWEEN (v0.c2) AND (v0.c0)), ((v0.c0)<(vt0.c0)), v0.c0, (+ (0.46371136338494034)), CAST(v0.c2 AS INTEGER), (('1087270313')<<(v0.c2)), (v0.c0 IN ()))) AND (((v0.c1 IN (v0.c2)), vt0.c0 COLLATE RTRIM, v0.c0 COLLATE NOCASE, x'' COLLATE BINARY, v0.c2, 0.268268839804257 COLLATE BINARY, v0.c1 COLLATE RTRIM)))))) UNION ALL SELECT ALL v0.c2, v0.c0, vt0.c0, v0.c1 FROM vt0, v0 WHERE ((((((v0.c1, vt0.c0, v0.c1, v0.c0, vt0.c0, vt0.c0, v0.c2)) BETWEEN ((((v0.c0) BETWEEN (v0.c2) AND (v0.c0)), ((v0.c0)<(vt0.c0)), v0.c0, (+ (0.46371136338494034)), CAST(v0.c2 AS INTEGER), (('1087270313')<<(v0.c2)), (v0.c0 IN ()))) AND (((v0.c1 IN (v0.c2)), vt0.c0 COLLATE RTRIM, v0.c0 COLLATE NOCASE, x'' COLLATE BINARY, v0.c2, 0.268268839804257 COLLATE BINARY, v0.c1 COLLATE RTRIM)))) ISNULL));
SELECT ALL v0.c2, v0.c0, vt0.c0, v0.c1 FROM vt0, v0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (UNLIKELY(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (UNLIKELY(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((UNLIKELY(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT rt0.c1, v0.c2, t0.c0, rt0.c0, v0.c1, rt0.c4 FROM v0, t0 NOT INDEXED INNER JOIN rt0 ON NULLIF((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((v0.c0))), ((((rt0.c3)AND(t0.c0)))OR(rt0.c4))) RIGHT OUTER JOIN vt0 ON (((('')<(NULL))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (((((t0.c0)AND(v0.c1)))OR(v0.c2)))) GROUP BY rt0.c1, v0.c2, t0.c0, rt0.c0, v0.c1, rt0.c4;
SELECT rt0.c1, v0.c2, t0.c0, rt0.c0, v0.c1, rt0.c4 FROM v0, t0 INNER JOIN rt0 ON NULLIF((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((v0.c0))), ((((rt0.c3)AND(t0.c0)))OR(rt0.c4))) RIGHT OUTER JOIN vt0 ON (((('')<(NULL))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (((((t0.c0)AND(v0.c1)))OR(v0.c2)))) WHERE (CASE WHEN ((rt0.c0)<(x'')) THEN (NOT (v0.c0)) ELSE ((v0.c0) IS FALSE) END) GROUP BY rt0.c1, v0.c2, t0.c0, rt0.c0, v0.c1, rt0.c4 UNION SELECT rt0.c1, v0.c2, t0.c0, rt0.c0, v0.c1, rt0.c4 FROM v0, t0 INNER JOIN rt0 ON NULLIF((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((v0.c0))), ((((rt0.c3)AND(t0.c0)))OR(rt0.c4))) RIGHT OUTER JOIN vt0 ON (((('')<(NULL))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (((((t0.c0)AND(v0.c1)))OR(v0.c2)))) WHERE ((NOT (CASE WHEN ((rt0.c0)<(x'')) THEN (NOT (v0.c0)) ELSE ((v0.c0) IS FALSE) END))) GROUP BY rt0.c1, v0.c2, t0.c0, rt0.c0, v0.c1, rt0.c4 UNION SELECT rt0.c1, v0.c2, t0.c0, rt0.c0, v0.c1, rt0.c4 FROM v0, t0 INNER JOIN rt0 ON NULLIF((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((v0.c0))), ((((rt0.c3)AND(t0.c0)))OR(rt0.c4))) RIGHT OUTER JOIN vt0 ON (((('')<(NULL))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (((((t0.c0)AND(v0.c1)))OR(v0.c2)))) WHERE (((CASE WHEN ((rt0.c0)<(x'')) THEN (NOT (v0.c0)) ELSE ((v0.c0) IS FALSE) END) ISNULL)) GROUP BY rt0.c1, v0.c2, t0.c0, rt0.c0, v0.c1, rt0.c4;
SELECT rt0.c1, v0.c2, t0.c0, rt0.c0, v0.c1, rt0.c4 FROM v0, t0 NOT INDEXED INNER JOIN rt0 ON NULLIF((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((v0.c0))), ((((rt0.c3)AND(t0.c0)))OR(rt0.c4))) RIGHT OUTER JOIN vt0 ON (((('')<(NULL))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (((((t0.c0)AND(v0.c1)))OR(v0.c2)))) GROUP BY rt0.c1, v0.c2, t0.c0, rt0.c0, v0.c1, rt0.c4;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING json_insert((MAX(t0.c0) IN (t0.c0)), COUNT(t0.c0), CAST(COUNT(*) AS NUMERIC), SUM(t0.c0), COUNT(*), SUM(t0.c0), MAX(t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (json_insert((MAX(t0.c0) IN (t0.c0)), COUNT(t0.c0), CAST(COUNT(*) AS NUMERIC), SUM(t0.c0), COUNT(*), SUM(t0.c0), MAX(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((json_insert((MAX(t0.c0) IN (t0.c0)), COUNT(t0.c0), CAST(COUNT(*) AS NUMERIC), SUM(t0.c0), COUNT(*), SUM(t0.c0), MAX(t0.c0))) ISNULL);
SELECT vt0.c0, rt0.c3, rt0.c0, v0.c0 FROM v0, rt0, vt0;
SELECT ALL vt0.c0, rt0.c3, rt0.c0, v0.c0 FROM v0, rt0, vt0 WHERE (((CASE v0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)<=(((((v0.c1)OR(rt0.c2)))OR(rt0.c3))))) UNION ALL SELECT ALL vt0.c0, rt0.c3, rt0.c0, v0.c0 FROM v0, rt0, vt0 WHERE ((NOT (((CASE v0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)<=(((((v0.c1)OR(rt0.c2)))OR(rt0.c3))))))) UNION ALL SELECT ALL vt0.c0, rt0.c3, rt0.c0, v0.c0 FROM v0, rt0 NOT INDEXED, vt0 WHERE (((((CASE v0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)<=(((((v0.c1)OR(rt0.c2)))OR(rt0.c3))))) ISNULL));
SELECT vt0.c0, rt0.c3, rt0.c0, v0.c0 FROM v0, rt0, vt0;
SELECT DISTINCT * FROM vt0, t0, v0, rt0;
SELECT DISTINCT * FROM vt0, t0, v0, rt0 WHERE (CASE (((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c4)))  WHEN LOWER(DISTINCT rt0.c3) THEN ((rt0.c0)OR(t0.c0)) ELSE ((v0.c2)-(rt0.c4)) END) UNION SELECT DISTINCT * FROM vt0, t0, v0, rt0 WHERE ((NOT (CASE (((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c4)))  WHEN LOWER(DISTINCT rt0.c3) THEN ((rt0.c0)OR(t0.c0)) ELSE ((v0.c2)-(rt0.c4)) END))) UNION SELECT DISTINCT * FROM vt0, t0, v0, rt0 WHERE (((CASE (((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c4)))  WHEN LOWER(DISTINCT rt0.c3) THEN ((rt0.c0)OR(t0.c0)) ELSE ((v0.c2)-(rt0.c4)) END) ISNULL));
SELECT DISTINCT * FROM vt0, t0, v0, rt0;
SELECT ALL t0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c4, vt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE rt0.c4  WHEN rt0.c0 THEN t0.c0 END) ISNULL) INNER JOIN t0 ON rt0.c2 GROUP BY t0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c4, vt0.c0, rt0.c2;
SELECT v0.c1 FROM vt0, v0 GROUP BY v0.c1;
SELECT v0.c1 FROM vt0, v0 GROUP BY v0.c1 HAVING TOTAL(GROUP_CONCAT(v0.c2)) UNION ALL SELECT v0.c1 FROM vt0, v0 GROUP BY v0.c1 HAVING (NOT (TOTAL(GROUP_CONCAT(v0.c2)))) UNION ALL SELECT ALL v0.c1 FROM vt0, v0 GROUP BY v0.c1 HAVING ((TOTAL(GROUP_CONCAT(v0.c2))) ISNULL);
SELECT * FROM t0, vt0, v0, rt0;
SELECT * FROM t0, vt0, v0, rt0 WHERE ((NOT (CASE WHEN v0.c0 THEN rt0.c1 WHEN rt0.c4 THEN t0.c0 WHEN rt0.c2 THEN rt0.c1 END))) UNION ALL SELECT ALL * FROM t0, vt0, v0, rt0 WHERE ((NOT ((NOT (CASE WHEN v0.c0 THEN rt0.c1 WHEN rt0.c4 THEN t0.c0 WHEN rt0.c2 THEN rt0.c1 END))))) UNION ALL SELECT ALL * FROM t0, vt0, v0, rt0 WHERE ((((NOT (CASE WHEN v0.c0 THEN rt0.c1 WHEN rt0.c4 THEN t0.c0 WHEN rt0.c2 THEN rt0.c1 END))) ISNULL));
SELECT * FROM t0, vt0, v0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0)<>(vt0.c0)))*((~ ('-1509315064'))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)<>(vt0.c0)))*((~ ('-1509315064'))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)!=(vt0.c0)))*((~ ('-1509315064'))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 WHERE (((566986662)<>(v0.c1))) GROUP BY v0.c1 UNION SELECT ALL v0.c1 FROM v0 WHERE ((NOT (((566986662)!=(v0.c1))))) GROUP BY v0.c1 UNION SELECT ALL v0.c1 FROM v0 WHERE (((((566986662)<>(v0.c1))) ISNULL)) GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 HAVING (((TOTAL(rt0.c4)))==((rt0.c0))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 HAVING (NOT ((((TOTAL(rt0.c4)))=((rt0.c0))))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 HAVING (((((TOTAL(rt0.c4)))==((rt0.c0)))) ISNULL);
SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 HAVING (((TOTAL(rt0.c4)))==((rt0.c0))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 HAVING (NOT ((((TOTAL(rt0.c4)))=((rt0.c0))))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 HAVING (((((TOTAL(rt0.c4)))==((rt0.c0)))) ISNULL);
SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((((v0.c1 IN (v0.c2))))=(((v0.c1 IN ()))))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((v0.c1 IN (v0.c2))))==(((v0.c1 IN ()))))))) UNION ALL SELECT * FROM v0 WHERE (((((((v0.c1 IN (v0.c2))))=(((v0.c1 IN ()))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM t0, vt0, v0, rt0;
SELECT DISTINCT * FROM t0, vt0, v0, rt0 WHERE (CAST(x'e31f' AS BLOB)) UNION SELECT DISTINCT * FROM t0, vt0, v0, rt0 WHERE ((NOT (CAST(x'e31f' AS BLOB)))) UNION SELECT DISTINCT * FROM t0, vt0, v0, rt0 WHERE (((CAST(x'e31f' AS BLOB)) ISNULL));
SELECT DISTINCT * FROM t0, vt0, v0, rt0;
SELECT ALL rt0.c3, rt0.c1, t0.c0, rt0.c4, rt0.c2, v0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON ((INSTR(rt0.c2, rt0.c0))%((('L\U7Z Py?')>>(rt0.c4)))) LEFT OUTER JOIN t0 ON ((vt0.c0) NOT BETWEEN (v0.c1 COLLATE NOCASE) AND (COALESCE(DISTINCT v0.c2, rt0.c3))) RIGHT OUTER JOIN vt0 ON (vt0.c0 IN ()) COLLATE BINARY GROUP BY rt0.c3, rt0.c1, t0.c0, rt0.c4, rt0.c2, v0.c2;
SELECT ALL v0.c1, vt0.c0, rt0.c0, t0.c0, v0.c2, rt0.c1, rt0.c2 FROM vt0, t0, v0, rt0 GROUP BY v0.c1, vt0.c0, rt0.c0, t0.c0, v0.c2, rt0.c1, rt0.c2;
SELECT v0.c1, vt0.c0, rt0.c0, t0.c0, v0.c2, rt0.c1, rt0.c2 FROM vt0, t0, v0, rt0 GROUP BY v0.c1, vt0.c0, rt0.c0, t0.c0, v0.c2, rt0.c1, rt0.c2 HAVING (~ (MIN(MAX(rt0.c0)))) UNION ALL SELECT v0.c1, vt0.c0, rt0.c0, t0.c0, v0.c2, rt0.c1, rt0.c2 FROM vt0, t0, v0, rt0 GROUP BY v0.c1, vt0.c0, rt0.c0, t0.c0, v0.c2, rt0.c1, rt0.c2 HAVING (NOT ((~ (MIN(MAX(rt0.c0)))))) UNION ALL SELECT ALL v0.c1, vt0.c0, rt0.c0, t0.c0, v0.c2, rt0.c1, rt0.c2 FROM vt0, t0, v0, rt0 GROUP BY v0.c1, vt0.c0, rt0.c0, t0.c0, v0.c2, rt0.c1, rt0.c2 HAVING (((~ (MIN(MAX(rt0.c0))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(0X63a65e64 AS TEXT)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST(0x63a65e64 AS TEXT)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST(0x63a65e64 AS TEXT)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT v0.c2, v0.c1 FROM v0;
SELECT DISTINCT v0.c2, v0.c1 FROM v0 WHERE (IFNULL(ABS(v0.c2), ((v0.c2)+(v0.c2)))) UNION SELECT DISTINCT v0.c2, v0.c1 FROM v0 WHERE ((NOT (IFNULL(ABS(v0.c2), ((v0.c2)+(v0.c2)))))) UNION SELECT DISTINCT v0.c2, v0.c1 FROM v0 WHERE (((IFNULL(ABS(v0.c2), ((v0.c2)+(v0.c2)))) ISNULL));
SELECT DISTINCT v0.c2, v0.c1 FROM v0;
SELECT ALL t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0 NATURAL JOIN t0 WHERE (CAST(json_extract(vt0.c0, t0.c0) AS NUMERIC)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt0 NATURAL JOIN t0 WHERE ((NOT (CAST(json_extract(vt0.c0, t0.c0) AS NUMERIC)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0 NATURAL JOIN t0 WHERE (((CAST(json_extract(vt0.c0, t0.c0) AS NUMERIC)) ISNULL)) GROUP BY t0.c0;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING LIKE(SUM(AVG(TOTAL(v0.c0))), NULL, 'd') UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (NOT (LIKE(SUM(AVG(TOTAL(v0.c0))), NULL, 'd'))) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING ((LIKE(SUM(AVG(TOTAL(v0.c0))), NULL, 'd')) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (CAST(((t0.c0) IS FALSE) AS BLOB)) UNION ALL SELECT * FROM t0 WHERE ((NOT (CAST(((t0.c0) IS FALSE) AS BLOB)))) UNION ALL SELECT * FROM t0 WHERE (((CAST(((t0.c0) IS FALSE) AS BLOB)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT v0.c2 FROM v0;
SELECT DISTINCT v0.c2 FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END IN (((v0.c1)%(v0.c1))))) UNION SELECT DISTINCT v0.c2 FROM v0 WHERE ((NOT ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END IN (((v0.c1)%(v0.c1))))))) UNION SELECT DISTINCT v0.c2 FROM v0 WHERE ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END IN (((v0.c1)%(v0.c1))))) ISNULL));
SELECT DISTINCT v0.c2 FROM v0;
SELECT rt0.c3, rt0.c1, v0.c2, v0.c0, t0.c0 FROM v0, vt0, t0, rt0 GROUP BY rt0.c3, rt0.c1, v0.c2, v0.c0, t0.c0;
SELECT rt0.c3, rt0.c1, v0.c2, v0.c0, t0.c0 FROM v0, vt0, t0, rt0 WHERE ('-1124256553') GROUP BY rt0.c3, rt0.c1, v0.c2, v0.c0, t0.c0 UNION SELECT rt0.c3, rt0.c1, v0.c2, v0.c0, t0.c0 FROM v0, vt0, t0, rt0 WHERE ((NOT ('-1124256553'))) GROUP BY rt0.c3, rt0.c1, v0.c2, v0.c0, t0.c0 UNION SELECT ALL rt0.c3, rt0.c1, v0.c2, v0.c0, t0.c0 FROM v0, vt0, t0, rt0 WHERE ((('-1124256553') ISNULL)) GROUP BY rt0.c3, rt0.c1, v0.c2, v0.c0, t0.c0;
SELECT rt0.c3, rt0.c1, v0.c2, v0.c0, t0.c0 FROM v0, vt0, t0, rt0 GROUP BY rt0.c3, rt0.c1, v0.c2, v0.c0, t0.c0;
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END)=(CAST(t0.c0 AS BLOB)))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((CASE WHEN t0.c0 THEN t0.c0 END)=(CAST(t0.c0 AS BLOB)))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 END)==(CAST(t0.c0 AS BLOB)))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c4) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c4))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c4) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c0, rt0.c1, rt0.c4, t0.c0, v0.c1, rt0.c3, rt0.c0, v0.c0, v0.c2 FROM vt0, rt0, v0, t0 GROUP BY vt0.c0, rt0.c1, rt0.c4, t0.c0, v0.c1, rt0.c3, rt0.c0, v0.c0, v0.c2;
SELECT ALL vt0.c0, rt0.c1, rt0.c4, t0.c0, v0.c1, rt0.c3, rt0.c0, v0.c0, v0.c2 FROM vt0, rt0, v0, t0 WHERE (CAST((('9^n')AND(rt0.c3)) AS NUMERIC)) GROUP BY vt0.c0, rt0.c1, rt0.c4, t0.c0, v0.c1, rt0.c3, rt0.c0, v0.c0, v0.c2 UNION SELECT ALL vt0.c0, rt0.c1, rt0.c4, t0.c0, v0.c1, rt0.c3, rt0.c0, v0.c0, v0.c2 FROM vt0, rt0, v0, t0 WHERE ((NOT (CAST((('9^n')AND(rt0.c3)) AS NUMERIC)))) GROUP BY vt0.c0, rt0.c1, rt0.c4, t0.c0, v0.c1, rt0.c3, rt0.c0, v0.c0, v0.c2 UNION SELECT vt0.c0, rt0.c1, rt0.c4, t0.c0, v0.c1, rt0.c3, rt0.c0, v0.c0, v0.c2 FROM vt0, rt0, v0, t0 WHERE (((CAST((('9^n')AND(rt0.c3)) AS NUMERIC)) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c4, t0.c0, v0.c1, rt0.c3, rt0.c0, v0.c0, v0.c2;
SELECT ALL vt0.c0, rt0.c1, rt0.c4, t0.c0, v0.c1, rt0.c3, rt0.c0, v0.c0, v0.c2 FROM vt0, rt0, v0, t0 GROUP BY vt0.c0, rt0.c1, rt0.c4, t0.c0, v0.c1, rt0.c3, rt0.c0, v0.c0, v0.c2;
SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c0, rt0.c2 HAVING CASE x'1b5d'  WHEN (rt0.c2 IN (MIN(rt0.c0), rt0.c1)) THEN (((rt0.c4, COUNT(*), MAX(SUM(MIN(COUNT(*))))))<>((SUM(COUNT(TOTAL(rt0.c2))), AVG(COUNT(*)), rt0.c3))) WHEN rt0.c3 THEN UPPER(DISTINCT rt0.c0) WHEN GROUP_CONCAT(GROUP_CONCAT(rt0.c0)) THEN COUNT(AVG(x'')) COLLATE NOCASE ELSE (((MAX(rt0.c3), rt0.c0, rt0.c2))<>((COUNT(rt0.c0), MAX(rt0.c3), rt0.c2))) END UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c0, rt0.c2 HAVING (NOT (CASE x'1b5d'  WHEN (rt0.c2 IN (MIN(rt0.c0), rt0.c1)) THEN (((rt0.c4, COUNT(*), MAX(SUM(MIN(COUNT(*))))))!=((SUM(COUNT(TOTAL(rt0.c2))), AVG(COUNT(*)), rt0.c3))) WHEN rt0.c3 THEN UPPER(DISTINCT rt0.c0) WHEN GROUP_CONCAT(GROUP_CONCAT(rt0.c0)) THEN COUNT(AVG(x'')) COLLATE NOCASE ELSE (((MAX(rt0.c3), rt0.c0, rt0.c2))<>((COUNT(rt0.c0), MAX(rt0.c3), rt0.c2))) END)) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c0, rt0.c2 HAVING ((CASE x'1b5d'  WHEN (rt0.c2 IN (MIN(rt0.c0), rt0.c1)) THEN (((rt0.c4, COUNT(*), MAX(SUM(MIN(COUNT(*))))))<>((SUM(COUNT(TOTAL(rt0.c2))), AVG(COUNT(*)), rt0.c3))) WHEN rt0.c3 THEN UPPER(DISTINCT rt0.c0) WHEN GROUP_CONCAT(GROUP_CONCAT(rt0.c0)) THEN COUNT(AVG(x'')) COLLATE NOCASE ELSE (((MAX(rt0.c3), rt0.c0, rt0.c2))!=((COUNT(rt0.c0), MAX(rt0.c3), rt0.c2))) END) ISNULL);
SELECT * FROM rt0, vt0, t0, v0;
SELECT * FROM rt0, vt0, t0, v0 WHERE (((CASE rt0.c4  WHEN rt0.c4 THEN x'' END) NOT NULL)) UNION ALL SELECT ALL * FROM rt0, vt0, t0, v0 WHERE ((NOT (((CASE rt0.c4  WHEN rt0.c4 THEN x'' END) NOT NULL)))) UNION ALL SELECT ALL * FROM rt0, vt0, t0, v0 WHERE (((((CASE rt0.c4  WHEN rt0.c4 THEN x'' END) NOT NULL)) ISNULL));
SELECT * FROM rt0, vt0, t0, v0;
SELECT DISTINCT * FROM rt0, vt0, t0;
SELECT DISTINCT * FROM rt0, vt0, t0 WHERE (SQLITE_COMPILEOPTION_USED(((((rt0.c1)AND(rt0.c4)))OR(rt0.c3)))) UNION SELECT DISTINCT * FROM rt0, vt0, t0 WHERE ((NOT (SQLITE_COMPILEOPTION_USED(((((rt0.c1)AND(rt0.c4)))OR(rt0.c3)))))) UNION SELECT DISTINCT * FROM rt0, vt0, t0 WHERE (((SQLITE_COMPILEOPTION_USED(((((rt0.c1)AND(rt0.c4)))OR(rt0.c3)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, t0;
SELECT rt0.c4, v0.c2, rt0.c2, rt0.c0, vt0.c0, t0.c0 FROM t0, vt0, rt0 LEFT OUTER JOIN v0 ON ((rt0.c3 COLLATE NOCASE) BETWEEN (v0.c1) AND ((((vt0.c0)) BETWEEN ((0x6456bf61)) AND ((t0.c0))))) GROUP BY rt0.c4, v0.c2, rt0.c2, rt0.c0, vt0.c0, t0.c0;
SELECT ALL rt0.c4, v0.c2, rt0.c2, rt0.c0, vt0.c0, t0.c0 FROM t0, vt0, rt0 LEFT OUTER JOIN v0 ON ((rt0.c3 COLLATE NOCASE) BETWEEN (v0.c1) AND ((((vt0.c0)) BETWEEN ((0X6456bf61)) AND ((t0.c0))))) WHERE (CASE WHEN CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 END THEN v0.c2 ELSE CAST(rt0.c4 AS BLOB) END) GROUP BY rt0.c4, v0.c2, rt0.c2, rt0.c0, vt0.c0, t0.c0 UNION SELECT rt0.c4, v0.c2, rt0.c2, rt0.c0, vt0.c0, t0.c0 FROM t0, vt0, rt0 LEFT OUTER JOIN v0 ON ((rt0.c3 COLLATE NOCASE) BETWEEN (v0.c1) AND ((((vt0.c0)) BETWEEN ((0X6456bf61)) AND ((t0.c0))))) WHERE ((NOT (CASE WHEN CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 END THEN v0.c2 ELSE CAST(rt0.c4 AS BLOB) END))) GROUP BY rt0.c4, v0.c2, rt0.c2, rt0.c0, vt0.c0, t0.c0 UNION SELECT rt0.c4, v0.c2, rt0.c2, rt0.c0, vt0.c0, t0.c0 FROM t0, vt0, rt0 LEFT OUTER JOIN v0 ON ((rt0.c3 COLLATE NOCASE) BETWEEN (v0.c1) AND ((((vt0.c0)) BETWEEN ((0x6456bf61)) AND ((t0.c0))))) WHERE (((CASE WHEN CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 END THEN v0.c2 ELSE CAST(rt0.c4 AS BLOB) END) ISNULL)) GROUP BY rt0.c4, v0.c2, rt0.c2, rt0.c0, vt0.c0, t0.c0;
SELECT rt0.c4, v0.c2, rt0.c2, rt0.c0, vt0.c0, t0.c0 FROM t0, vt0, rt0 LEFT OUTER JOIN v0 ON ((rt0.c3 COLLATE NOCASE) BETWEEN (v0.c1) AND ((((vt0.c0)) BETWEEN ((0x6456bf61)) AND ((t0.c0))))) GROUP BY rt0.c4, v0.c2, rt0.c2, rt0.c0, vt0.c0, t0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0, vt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0, vt0.c0, rt0.c4;
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0, vt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0, vt0.c0, rt0.c4 HAVING COUNT(((COUNT(rt0.c1)) ISNULL)) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0, vt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0, vt0.c0, rt0.c4 HAVING (NOT (COUNT(((COUNT(rt0.c1)) ISNULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0, vt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0, vt0.c0, rt0.c4 HAVING ((COUNT(((COUNT(rt0.c1)) ISNULL))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((t0.c0) NOT NULL)) ORDER BY json_type((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, 0Xfffffffff5caa640, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) DESC  NULLS FIRST;
SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((t0.c0) NOT NULL)))) ORDER BY json_type((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, 0Xfffffffff5caa640, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) DESC  NULLS FIRST;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0) NOT NULL)) ISNULL)) ORDER BY json_type((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, 0xfffffffff5caa640, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) DESC  NULLS FIRST;
SELECT t0.c0 FROM t0;
SELECT DISTINCT rt0.c3, t0.c0, v0.c0, v0.c2, v0.c1, rt0.c4, rt0.c2, rt0.c1 FROM rt0, t0, vt0, v0;
SELECT DISTINCT rt0.c3, t0.c0, v0.c0, v0.c2, v0.c1, rt0.c4, rt0.c2, rt0.c1 FROM rt0, t0, vt0, v0 WHERE (((CAST(rt0.c4 AS INTEGER))/(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) UNION SELECT DISTINCT rt0.c3, t0.c0, v0.c0, v0.c2, v0.c1, rt0.c4, rt0.c2, rt0.c1 FROM rt0, t0, vt0, v0 WHERE ((NOT (((CAST(rt0.c4 AS INTEGER))/(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))))))) UNION SELECT DISTINCT rt0.c3, t0.c0, v0.c0, v0.c2, v0.c1, rt0.c4, rt0.c2, rt0.c1 FROM rt0, t0, vt0, v0 WHERE (((((CAST(rt0.c4 AS INTEGER))/(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c3, t0.c0, v0.c0, v0.c2, v0.c1, rt0.c4, rt0.c2, rt0.c1 FROM rt0, t0, vt0, v0;
SELECT ALL v0.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 FULL OUTER JOIN v0 ON CASE ((rt0.c3)IS(rt0.c4))  WHEN rt0.c2 THEN LAST_INSERT_ROWID() WHEN CASE vt0.c0  WHEN v0.c2 THEN rt0.c0 ELSE v0.c2 END THEN ((((vt0.c0)OR(0.8137193815411359)))OR(rt0.c2)) WHEN v0.c0 THEN ((-1.537054259E9) ISNULL) ELSE (+ (v0.c2)) END FULL OUTER JOIN t0 ON ((CAST(v0.c0 AS BLOB))LIKE(CAST(rt0.c1 AS TEXT))) GROUP BY v0.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1;
SELECT v0.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 FULL OUTER JOIN v0 ON CASE ((rt0.c3)IS(rt0.c4))  WHEN rt0.c2 THEN LAST_INSERT_ROWID() WHEN CASE vt0.c0  WHEN v0.c2 THEN rt0.c0 ELSE v0.c2 END THEN ((((vt0.c0)OR(0.8137193815411359)))OR(rt0.c2)) WHEN v0.c0 THEN ((-1.537054259E9) ISNULL) ELSE (+ (v0.c2)) END FULL OUTER JOIN t0 ON ((CAST(v0.c0 AS BLOB))LIKE(CAST(rt0.c1 AS TEXT))) WHERE ((((x'' IN ()))>=(rt0.c1))) GROUP BY v0.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1 UNION SELECT v0.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 FULL OUTER JOIN v0 ON CASE ((rt0.c3)IS(rt0.c4))  WHEN rt0.c2 THEN LAST_INSERT_ROWID() WHEN CASE vt0.c0  WHEN v0.c2 THEN rt0.c0 ELSE v0.c2 END THEN ((((vt0.c0)OR(0.8137193815411359)))OR(rt0.c2)) WHEN v0.c0 THEN ((-1.537054259E9) ISNULL) ELSE (+ (v0.c2)) END FULL OUTER JOIN t0 ON ((CAST(v0.c0 AS BLOB))LIKE(CAST(rt0.c1 AS TEXT))) WHERE ((NOT ((((x'' IN ()))>=(rt0.c1))))) GROUP BY v0.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1 UNION SELECT ALL v0.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 FULL OUTER JOIN v0 ON CASE ((rt0.c3)IS(rt0.c4))  WHEN rt0.c2 THEN LAST_INSERT_ROWID() WHEN CASE vt0.c0  WHEN v0.c2 THEN rt0.c0 ELSE v0.c2 END THEN ((((vt0.c0)OR(0.8137193815411359)))OR(rt0.c2)) WHEN v0.c0 THEN ((-1.537054259E9) ISNULL) ELSE (+ (v0.c2)) END FULL OUTER JOIN t0 ON ((CAST(v0.c0 AS BLOB))LIKE(CAST(rt0.c1 AS TEXT))) WHERE ((((((x'' IN ()))>=(rt0.c1))) ISNULL)) GROUP BY v0.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL v0.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 FULL OUTER JOIN v0 ON CASE ((rt0.c3)IS(rt0.c4))  WHEN rt0.c2 THEN LAST_INSERT_ROWID() WHEN CASE vt0.c0  WHEN v0.c2 THEN rt0.c0 ELSE v0.c2 END THEN ((((vt0.c0)OR(0.8137193815411359)))OR(rt0.c2)) WHEN v0.c0 THEN ((-1.537054259E9) ISNULL) ELSE (+ (v0.c2)) END FULL OUTER JOIN t0 ON ((CAST(v0.c0 AS BLOB))LIKE(CAST(rt0.c1 AS TEXT))) GROUP BY v0.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c0, vt0.c0, v0.c1, v0.c0, v0.c2, t0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0, v0, vt0, t0 GROUP BY rt0.c0, vt0.c0, v0.c1, v0.c0, v0.c2, t0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT rt0.c0, vt0.c0, v0.c1, v0.c0, v0.c2, t0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0, v0, vt0, t0 GROUP BY rt0.c0, vt0.c0, v0.c1, v0.c0, v0.c2, t0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING GROUP_CONCAT(TOTAL(COUNT(0Xffffffffa1faee36))) UNION ALL SELECT rt0.c0, vt0.c0, v0.c1, v0.c0, v0.c2, t0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0, v0 NOT INDEXED, vt0, t0 GROUP BY rt0.c0, vt0.c0, v0.c1, v0.c0, v0.c2, t0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING (NOT (GROUP_CONCAT(TOTAL(COUNT(0Xffffffffa1faee36))))) UNION ALL SELECT rt0.c0, vt0.c0, v0.c1, v0.c0, v0.c2, t0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0, v0, vt0, t0 GROUP BY rt0.c0, vt0.c0, v0.c1, v0.c0, v0.c2, t0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING ((GROUP_CONCAT(TOTAL(COUNT(0xffffffffa1faee36)))) ISNULL);
SELECT ALL rt0.c1, v0.c1, vt0.c0, rt0.c4, t0.c0, v0.c0 FROM rt0, t0, v0, vt0;
SELECT ALL rt0.c1, v0.c1, vt0.c0, rt0.c4, t0.c0, v0.c0 FROM rt0, t0, v0, vt0 WHERE (CAST((NOT (v0.c0)) AS NUMERIC)) UNION ALL SELECT ALL rt0.c1, v0.c1, vt0.c0, rt0.c4, t0.c0, v0.c0 FROM rt0, t0, v0, vt0 WHERE ((NOT (CAST((NOT (v0.c0)) AS NUMERIC)))) UNION ALL SELECT ALL rt0.c1, v0.c1, vt0.c0, rt0.c4, t0.c0, v0.c0 FROM rt0, t0, v0, vt0 WHERE (((CAST((NOT (v0.c0)) AS NUMERIC)) ISNULL));
SELECT ALL rt0.c1, v0.c1, vt0.c0, rt0.c4, t0.c0, v0.c0 FROM rt0, t0, v0, vt0;
SELECT DISTINCT t0.c0 FROM t0, vt0;
SELECT DISTINCT t0.c0 FROM t0, vt0 WHERE (((((t0.c0) ISNULL)) NOTNULL)) UNION SELECT DISTINCT t0.c0 FROM t0, vt0 WHERE ((NOT (((((t0.c0) ISNULL)) NOTNULL)))) UNION SELECT DISTINCT t0.c0 FROM t0, vt0 WHERE (((((((t0.c0) ISNULL)) NOTNULL)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, vt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((~ (t0.c0)) IN (x'' COLLATE NOCASE))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((~ (t0.c0)) IN (x'' COLLATE NOCASE))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((~ (t0.c0)) IN (x'' COLLATE NOCASE))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, t0.c0, v0.c1, v0.c2, v0.c0 FROM v0, rt0 CROSS JOIN t0 ON CASE WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END COLLATE RTRIM GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, t0.c0, v0.c1, v0.c2, v0.c0;
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, t0.c0, v0.c1, v0.c2, v0.c0 FROM v0, rt0 CROSS JOIN t0 ON CASE WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END COLLATE RTRIM GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, t0.c0, v0.c1, v0.c2, v0.c0 HAVING COUNT(GROUP_CONCAT(MIN(TOTAL(rt0.c4)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0, t0.c0, v0.c1, v0.c2, v0.c0 FROM v0, rt0 CROSS JOIN t0 ON CASE WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END COLLATE RTRIM GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, t0.c0, v0.c1, v0.c2, v0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(MIN(TOTAL(rt0.c4)))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, t0.c0, v0.c1, v0.c2, v0.c0 FROM v0, rt0 CROSS JOIN t0 ON CASE WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END COLLATE RTRIM GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, t0.c0, v0.c1, v0.c2, v0.c0 HAVING ((COUNT(GROUP_CONCAT(MIN(TOTAL(rt0.c4))))) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c4, rt0.c1, t0.c0, rt0.c0 FROM rt0, t0, vt0;
SELECT ALL rt0.c2, rt0.c3, rt0.c4, rt0.c1, t0.c0, rt0.c0 FROM rt0, t0, vt0 WHERE ('zA') UNION ALL SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c1, t0.c0, rt0.c0 FROM rt0, t0, vt0 WHERE ((NOT ('zA'))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c1, t0.c0, rt0.c0 FROM rt0, t0, vt0 WHERE ((('zA') ISNULL));
SELECT ALL rt0.c2, rt0.c3, rt0.c4, rt0.c1, t0.c0, rt0.c0 FROM rt0, t0, vt0;
SELECT DISTINCT * FROM t0, v0, vt0, rt0;
SELECT DISTINCT * FROM t0, v0, vt0, rt0 WHERE (CAST(0.5588568265328832 AS REAL)) UNION SELECT DISTINCT * FROM t0, v0, vt0, rt0 WHERE ((NOT (CAST(0.5588568265328832 AS REAL)))) UNION SELECT DISTINCT * FROM t0, v0, vt0, rt0 WHERE (((CAST(0.5588568265328832 AS REAL)) ISNULL));
SELECT DISTINCT * FROM t0, v0, vt0, rt0;
SELECT rt0.c4, vt0.c0, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt0 ON x'' GROUP BY rt0.c4, vt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c4, vt0.c0, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt0 ON x'' WHERE (((CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c4 END)>((rt0.c3 IN (vt0.c0))))) GROUP BY rt0.c4, vt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c4, vt0.c0, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt0 ON x'' WHERE ((NOT (((CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c4 END)>((rt0.c3 IN (vt0.c0))))))) GROUP BY rt0.c4, vt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c4, vt0.c0, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt0 ON x'' WHERE (((((CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c4 END)>((rt0.c3 IN (vt0.c0))))) ISNULL)) GROUP BY rt0.c4, vt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c4, vt0.c0, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt0 ON x'' GROUP BY rt0.c4, vt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON ((CASE ')gvj8FWaX'  WHEN rt0.c2 THEN v0.c0 ELSE '-1656888581' END) IS TRUE) GROUP BY rt0.c2, rt0.c4;
SELECT rt0.c2, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON ((CASE ')gvj8FWaX'  WHEN rt0.c2 THEN v0.c0 ELSE '-1656888581' END) IS TRUE) GROUP BY rt0.c2, rt0.c4 HAVING SQLITE_COMPILEOPTION_GET(CASE MIN(COUNT(*))  WHEN TOTAL(v0.c2) THEN rt0.c4 WHEN MIN(TOTAL(rt0.c3)) THEN rt0.c2 WHEN MAX(SUM(GROUP_CONCAT(rt0.c3))) THEN SUM(rt0.c3) ELSE MAX(MAX(COUNT(*))) END) UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON ((CASE ')gvj8FWaX'  WHEN rt0.c2 THEN v0.c0 ELSE '-1656888581' END) IS TRUE) GROUP BY rt0.c2, rt0.c4 HAVING (NOT (SQLITE_COMPILEOPTION_GET(CASE MIN(COUNT(*))  WHEN TOTAL(v0.c2) THEN rt0.c4 WHEN MIN(TOTAL(rt0.c3)) THEN rt0.c2 WHEN MAX(SUM(GROUP_CONCAT(rt0.c3))) THEN SUM(rt0.c3) ELSE MAX(MAX(COUNT(*))) END))) UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON ((CASE ')gvj8FWaX'  WHEN rt0.c2 THEN v0.c0 ELSE '-1656888581' END) IS TRUE) GROUP BY rt0.c2, rt0.c4 HAVING ((SQLITE_COMPILEOPTION_GET(CASE MIN(COUNT(*))  WHEN TOTAL(v0.c2) THEN rt0.c4 WHEN MIN(TOTAL(rt0.c3)) THEN rt0.c2 WHEN MAX(SUM(GROUP_CONCAT(rt0.c3))) THEN SUM(rt0.c3) ELSE MAX(MAX(COUNT(*))) END)) ISNULL);
SELECT ALL * FROM t0, v0, vt0;
SELECT * FROM t0, v0, vt0 WHERE ((NOT (CASE WHEN v0.c1 THEN '817496903' WHEN v0.c0 THEN vt0.c0 WHEN v0.c2 THEN vt0.c0 END))) UNION ALL SELECT * FROM t0, v0, vt0 WHERE ((NOT ((NOT (CASE WHEN v0.c1 THEN '817496903' WHEN v0.c0 THEN vt0.c0 WHEN v0.c2 THEN vt0.c0 END))))) UNION ALL SELECT * FROM t0, v0, vt0 WHERE ((((NOT (CASE WHEN v0.c1 THEN '817496903' WHEN v0.c0 THEN vt0.c0 WHEN v0.c2 THEN vt0.c0 END))) ISNULL));
SELECT ALL * FROM t0, v0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2))!=((rt0.c0))) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE ((NOT ((((rt0.c2))<>((rt0.c0))) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2))<>((rt0.c0))) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c2, v0.c1, rt0.c2 FROM rt0, v0 GROUP BY v0.c2, v0.c1, rt0.c2;
SELECT ALL v0.c2, v0.c1, rt0.c2 FROM rt0, v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0)!=('?YἍU')))) AND (((((v0.c1))>((v0.c2))))))) GROUP BY v0.c2, v0.c1, rt0.c2 UNION SELECT ALL v0.c2, v0.c1, rt0.c2 FROM rt0, v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((((v0.c0)!=('?YἍU')))) AND (((((v0.c1))>((v0.c2))))))))) GROUP BY v0.c2, v0.c1, rt0.c2 UNION SELECT ALL v0.c2, v0.c1, rt0.c2 FROM rt0, v0 WHERE ((((((v0.c0)) BETWEEN ((((v0.c0)!=('?YἍU')))) AND (((((v0.c1))>((v0.c2))))))) ISNULL)) GROUP BY v0.c2, v0.c1, rt0.c2;
SELECT v0.c2, v0.c1, rt0.c2 FROM rt0, v0 GROUP BY v0.c2, v0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c3, t0.c0 FROM rt0, vt0, t0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c3, t0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c3, t0.c0 FROM rt0, vt0, t0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c3, t0.c0 HAVING ((rt0.c0 COLLATE RTRIM) ISNULL) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c3, t0.c0 FROM rt0, vt0, t0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c3, t0.c0 HAVING (NOT (((rt0.c0 COLLATE RTRIM) ISNULL))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c3, t0.c0 FROM rt0, vt0, t0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c3, t0.c0 HAVING ((((rt0.c0 COLLATE RTRIM) ISNULL)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c3, t0.c0 FROM rt0, vt0, t0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c3, t0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c3, t0.c0 FROM rt0, vt0, t0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c3, t0.c0 HAVING ((rt0.c0 COLLATE RTRIM) ISNULL) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c3, t0.c0 FROM rt0, vt0, t0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c3, t0.c0 HAVING (NOT (((rt0.c0 COLLATE RTRIM) ISNULL))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c3, t0.c0 FROM rt0, vt0, t0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c3, t0.c0 HAVING ((((rt0.c0 COLLATE RTRIM) ISNULL)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c3, t0.c0 FROM rt0, vt0, t0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c3, t0.c0;
SELECT ALL * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE (((((((((((v0.c0)>(x'1f9d')))OR(CAST(t0.c0 AS BLOB))))AND((v0.c1 IN ()))))AND(('UBI\r	g|k' IN ()))))OR(t0.c0 COLLATE RTRIM))) UNION ALL SELECT * FROM t0, v0 WHERE ((NOT (((((((((((v0.c0)>(x'1f9d')))OR(CAST(t0.c0 AS BLOB))))AND((v0.c1 IN ()))))AND(('UBI\r	g|k' IN ()))))OR(t0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL * FROM t0, v0 WHERE (((((((((((((v0.c0)>(x'1f9d')))OR(CAST(t0.c0 AS BLOB))))AND((v0.c1 IN ()))))AND(('UBI\r	g|k' IN ()))))OR(t0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))+(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))+(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))+(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c2, rt0.c3, v0.c1, rt0.c1, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((NOT (rt0.c4)))<(((rt0.c1)<>(v0.c0)))) INNER JOIN t0 ON (TRIM(DISTINCT vt0.c0) IN ()) LEFT OUTER JOIN rt0 ON (((rt0.c1) BETWEEN (t0.c0) AND (rt0.c3)) IN (((rt0.c1) IS FALSE))) GROUP BY rt0.c2, rt0.c3, v0.c1, rt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c3, v0.c1, rt0.c1, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((NOT (rt0.c4)))<(((rt0.c1)<>(v0.c0)))) INNER JOIN t0 ON (TRIM(DISTINCT vt0.c0) IN ()) LEFT OUTER JOIN rt0 ON (((rt0.c1) BETWEEN (t0.c0) AND (rt0.c3)) IN (((rt0.c1) IS FALSE))) GROUP BY rt0.c2, rt0.c3, v0.c1, rt0.c1, vt0.c0 HAVING MAX(MIN(v0.c2)) UNION ALL SELECT rt0.c2, rt0.c3, v0.c1, rt0.c1, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((NOT (rt0.c4)))<(((rt0.c1)!=(v0.c0)))) INNER JOIN t0 ON (TRIM(DISTINCT vt0.c0) IN ()) LEFT OUTER JOIN rt0 ON (((rt0.c1) BETWEEN (t0.c0) AND (rt0.c3)) IN (((rt0.c1) IS FALSE))) GROUP BY rt0.c2, rt0.c3, v0.c1, rt0.c1, vt0.c0 HAVING (NOT (MAX(MIN(v0.c2)))) UNION ALL SELECT rt0.c2, rt0.c3, v0.c1, rt0.c1, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((NOT (rt0.c4)))<(((rt0.c1)<>(v0.c0)))) INNER JOIN t0 ON (TRIM(DISTINCT vt0.c0) IN ()) LEFT OUTER JOIN rt0 ON (((rt0.c1) BETWEEN (t0.c0) AND (rt0.c3)) IN (((rt0.c1) IS FALSE))) GROUP BY rt0.c2, rt0.c3, v0.c1, rt0.c1, vt0.c0 HAVING ((MAX(MIN(v0.c2))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (NULL) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (NULL))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((NULL) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 INNER JOIN vt0 ON CASE WHEN CAST(vt0.c0 AS BLOB) THEN (x'' IN ()) END GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 INNER JOIN vt0 ON CASE WHEN CAST(vt0.c0 AS BLOB) THEN (x'' IN ()) END WHERE (CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) IS TRUE) WHEN ((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(t0.c0)) THEN (((t0.c0, t0.c0, t0.c0))=((t0.c0, 0.7559059455548188, 'DZF9'))) WHEN (NOT (vt0.c0)) THEN (('0.4884358785405766')!=(t0.c0)) END) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 INNER JOIN vt0 ON CASE WHEN CAST(vt0.c0 AS BLOB) THEN (x'' IN ()) END WHERE ((NOT (CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) IS TRUE) WHEN ((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(t0.c0)) THEN (((t0.c0, t0.c0, t0.c0))==((t0.c0, 0.7559059455548188, 'DZF9'))) WHEN (NOT (vt0.c0)) THEN (('0.4884358785405766')<>(t0.c0)) END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 INNER JOIN vt0 ON CASE WHEN CAST(vt0.c0 AS BLOB) THEN (x'' IN ()) END WHERE (((CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) IS TRUE) WHEN ((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(t0.c0)) THEN (((t0.c0, t0.c0, t0.c0))==((t0.c0, 0.7559059455548188, 'DZF9'))) WHEN (NOT (vt0.c0)) THEN (('0.4884358785405766')<>(t0.c0)) END) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 INNER JOIN vt0 ON CASE WHEN CAST(vt0.c0 AS BLOB) THEN (x'' IN ()) END GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COALESCE(TOTAL(t0.c0), MIN(t0.c0), MIN(t0.c0), t0.c0 COLLATE BINARY) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COALESCE(TOTAL(t0.c0), MIN(t0.c0), MIN(t0.c0), t0.c0 COLLATE BINARY))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COALESCE(TOTAL(t0.c0), MIN(t0.c0), MIN(t0.c0), t0.c0 COLLATE BINARY)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COALESCE(TOTAL(t0.c0), MIN(t0.c0), MIN(t0.c0), t0.c0 COLLATE BINARY) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COALESCE(TOTAL(t0.c0), MIN(t0.c0), MIN(t0.c0), t0.c0 COLLATE BINARY))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COALESCE(TOTAL(t0.c0), MIN(t0.c0), MIN(t0.c0), t0.c0 COLLATE BINARY)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM vt0, v0, t0;
SELECT ALL * FROM vt0, v0, t0 WHERE (v0.c1) UNION ALL SELECT * FROM vt0, v0, t0 WHERE ((NOT (v0.c1))) UNION ALL SELECT * FROM vt0, v0, t0 WHERE (((v0.c1) ISNULL));
SELECT ALL * FROM vt0, v0, t0;
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE (((((((vt0.c0)+('-1757448321')))AND((NULL IN ()))))OR(((vt0.c0)-(t0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ((NOT (((((((vt0.c0)+('-1757448321')))AND((NULL IN ()))))OR(((vt0.c0)-(t0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE (((((((((vt0.c0)+('-1757448321')))AND((NULL IN ()))))OR(((vt0.c0)-(t0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT v0.c2, v0.c0, rt0.c4, v0.c1, rt0.c0 FROM v0, t0, vt0 LEFT OUTER JOIN rt0 ON (((((((v0.c0))<=((rt0.c4))))AND((((rt0.c0, v0.c0, v0.c1)) NOT BETWEEN ((t0.c0, rt0.c0, v0.c2)) AND ((v0.c0, vt0.c0, rt0.c4))))))AND(v0.c2 COLLATE RTRIM)) GROUP BY v0.c2, v0.c0, rt0.c4, v0.c1, rt0.c0;
SELECT ALL v0.c2, v0.c0, rt0.c4, v0.c1, rt0.c0 FROM v0, t0, vt0 LEFT OUTER JOIN rt0 ON (((((((v0.c0))<=((rt0.c4))))AND((((rt0.c0, v0.c0, v0.c1)) NOT BETWEEN ((t0.c0, rt0.c0, v0.c2)) AND ((v0.c0, vt0.c0, rt0.c4))))))AND(v0.c2 COLLATE RTRIM)) WHERE (CAST((((v0.c0, v0.c0, rt0.c1))<=((v0.c1, rt0.c2, rt0.c1))) AS REAL)) GROUP BY v0.c2, v0.c0, rt0.c4, v0.c1, rt0.c0 UNION SELECT v0.c2, v0.c0, rt0.c4, v0.c1, rt0.c0 FROM v0, t0, vt0 LEFT OUTER JOIN rt0 ON (((((((v0.c0))<=((rt0.c4))))AND((((rt0.c0, v0.c0, v0.c1)) NOT BETWEEN ((t0.c0, rt0.c0, v0.c2)) AND ((v0.c0, vt0.c0, rt0.c4))))))AND(v0.c2 COLLATE RTRIM)) WHERE ((NOT (CAST((((v0.c0, v0.c0, rt0.c1))<=((v0.c1, rt0.c2, rt0.c1))) AS REAL)))) GROUP BY v0.c2, v0.c0, rt0.c4, v0.c1, rt0.c0 UNION SELECT v0.c2, v0.c0, rt0.c4, v0.c1, rt0.c0 FROM v0, t0, vt0 LEFT OUTER JOIN rt0 ON (((((((v0.c0))<=((rt0.c4))))AND((((rt0.c0, v0.c0, v0.c1)) NOT BETWEEN ((t0.c0, rt0.c0, v0.c2)) AND ((v0.c0, vt0.c0, rt0.c4))))))AND(v0.c2 COLLATE RTRIM)) WHERE (((CAST((((v0.c0, v0.c0, rt0.c1))<=((v0.c1, rt0.c2, rt0.c1))) AS REAL)) ISNULL)) GROUP BY v0.c2, v0.c0, rt0.c4, v0.c1, rt0.c0;
SELECT v0.c2, v0.c0, rt0.c4, v0.c1, rt0.c0 FROM v0, t0, vt0 LEFT OUTER JOIN rt0 ON (((((((v0.c0))<=((rt0.c4))))AND((((rt0.c0, v0.c0, v0.c1)) NOT BETWEEN ((t0.c0, rt0.c0, v0.c2)) AND ((v0.c0, vt0.c0, rt0.c4))))))AND(v0.c2 COLLATE RTRIM)) GROUP BY v0.c2, v0.c0, rt0.c4, v0.c1, rt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE COUNT(*) END)AND(MIN(vt0.c0))))AND(MIN(SUM(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE COUNT(*) END)AND(MIN(vt0.c0))))AND(MIN(SUM(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE COUNT(*) END)AND(MIN(vt0.c0))))AND(MIN(SUM(vt0.c0))))) ISNULL);
SELECT ALL vt0.c0, v0.c0, rt0.c4, rt0.c0, rt0.c2, v0.c1 FROM v0, vt0, rt0, t0;
SELECT ALL vt0.c0, v0.c0, rt0.c4, rt0.c0, rt0.c2, v0.c1 FROM v0, vt0, rt0, t0 WHERE (((((json_type(0.9405124727257717))OR(((v0.c1)IS NOT(rt0.c2)))))AND(((rt0.c4)*(rt0.c4))))) UNION ALL SELECT ALL vt0.c0, v0.c0, rt0.c4, rt0.c0, rt0.c2, v0.c1 FROM v0, vt0, rt0, t0 NOT INDEXED WHERE ((NOT (((((json_type(0.9405124727257717))OR(((v0.c1)IS NOT(rt0.c2)))))AND(((rt0.c4)*(rt0.c4))))))) UNION ALL SELECT vt0.c0, v0.c0, rt0.c4, rt0.c0, rt0.c2, v0.c1 FROM v0, vt0, rt0, t0 WHERE (((((((json_type(0.9405124727257717))OR(((v0.c1)IS NOT(rt0.c2)))))AND(((rt0.c4)*(rt0.c4))))) ISNULL));
SELECT ALL vt0.c0, v0.c0, rt0.c4, rt0.c0, rt0.c2, v0.c1 FROM v0, vt0, rt0, t0;
SELECT DISTINCT rt0.c4, rt0.c2, v0.c1, rt0.c0, rt0.c3, v0.c2, vt0.c0 FROM t0, rt0, v0, vt0;
SELECT DISTINCT rt0.c4, rt0.c2, v0.c1, rt0.c0, rt0.c3, v0.c2, vt0.c0 FROM t0, rt0, v0, vt0 WHERE ('{]⒟q}\' COLLATE BINARY) UNION SELECT DISTINCT rt0.c4, rt0.c2, v0.c1, rt0.c0, rt0.c3, v0.c2, vt0.c0 FROM t0, rt0, v0, vt0 WHERE ((NOT ('{]⒟q}\' COLLATE BINARY))) UNION SELECT DISTINCT rt0.c4, rt0.c2, v0.c1, rt0.c0, rt0.c3, v0.c2, vt0.c0 FROM t0, rt0, v0, vt0 WHERE ((('{]⒟q}\' COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c2, v0.c1, rt0.c0, rt0.c3, v0.c2, vt0.c0 FROM t0, rt0, v0, vt0;
SELECT ALL rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0;
SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0, t0 WHERE (((((rt0.c4) IS TRUE)) NOT NULL)) GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0 UNION SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0, t0 WHERE ((NOT (((((rt0.c4) IS TRUE)) NOT NULL)))) GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0 UNION SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0, t0 WHERE (((((((rt0.c4) IS TRUE)) NOT NULL)) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0;
SELECT rt0.c2, rt0.c4, t0.c0, rt0.c3, vt0.c0, rt0.c1 FROM vt0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c3) NOT NULL) THEN NULL WHEN ((rt0.c1) NOT NULL) THEN LOWER(rt0.c4) WHEN (rt0.c1 IN (rt0.c4)) THEN (((rt0.c3))>((rt0.c3))) ELSE '-1018155113' END INNER JOIN t0 ON (+ (TRIM(DISTINCT rt0.c3, rt0.c0))) GROUP BY rt0.c2, rt0.c4, t0.c0, rt0.c3, vt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c4, t0.c0, rt0.c3, vt0.c0, rt0.c1 FROM vt0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c3) NOT NULL) THEN NULL WHEN ((rt0.c1) NOT NULL) THEN LOWER(rt0.c4) WHEN (rt0.c1 IN (rt0.c4)) THEN (((rt0.c3))>((rt0.c3))) ELSE '-1018155113' END INNER JOIN t0 ON (+ (TRIM(DISTINCT rt0.c3, rt0.c0))) GROUP BY rt0.c2, rt0.c4, t0.c0, rt0.c3, vt0.c0, rt0.c1 HAVING (+ (((GROUP_CONCAT(MAX(NULL)))<<(GROUP_CONCAT(rt0.c3))))) UNION ALL SELECT rt0.c2, rt0.c4, t0.c0, rt0.c3, vt0.c0, rt0.c1 FROM vt0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c3) NOT NULL) THEN NULL WHEN ((rt0.c1) NOT NULL) THEN LOWER(rt0.c4) WHEN (rt0.c1 IN (rt0.c4)) THEN (((rt0.c3))>((rt0.c3))) ELSE '-1018155113' END INNER JOIN t0 ON (+ (TRIM(DISTINCT rt0.c3, rt0.c0))) GROUP BY rt0.c2, rt0.c4, t0.c0, rt0.c3, vt0.c0, rt0.c1 HAVING (NOT ((+ (((GROUP_CONCAT(MAX(NULL)))<<(GROUP_CONCAT(rt0.c3))))))) UNION ALL SELECT ALL rt0.c2, rt0.c4, t0.c0, rt0.c3, vt0.c0, rt0.c1 FROM vt0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c3) NOT NULL) THEN NULL WHEN ((rt0.c1) NOT NULL) THEN LOWER(rt0.c4) WHEN (rt0.c1 IN (rt0.c4)) THEN (((rt0.c3))>((rt0.c3))) ELSE '-1018155113' END INNER JOIN t0 ON (+ (TRIM(DISTINCT rt0.c3, rt0.c0))) GROUP BY rt0.c2, rt0.c4, t0.c0, rt0.c3, vt0.c0, rt0.c1 HAVING (((+ (((GROUP_CONCAT(MAX(NULL)))<<(GROUP_CONCAT(rt0.c3)))))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ('') UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (''))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((('') ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0, vt0 WHERE ((((0.541986350107302))>=((((((((((((((vt0.c0)OR(v0.c2)))OR(v0.c0)))AND(vt0.c0)))AND(v0.c1)))AND(v0.c0)))AND(v0.c0)))))) UNION SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0, vt0 WHERE ((NOT ((((0.541986350107302))>=((((((((((((((vt0.c0)OR(v0.c2)))OR(v0.c0)))AND(vt0.c0)))AND(v0.c1)))AND(v0.c0)))AND(v0.c0)))))))) UNION SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0, vt0 WHERE ((((((0.541986350107302))>=((((((((((((((vt0.c0)OR(v0.c2)))OR(v0.c0)))AND(vt0.c0)))AND(v0.c1)))AND(v0.c0)))AND(v0.c0)))))) ISNULL));
SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0, vt0;
SELECT v0.c0, rt0.c0, v0.c1, rt0.c2, t0.c0 FROM rt0, v0 RIGHT OUTER JOIN t0 ON CASE WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY GROUP BY v0.c0, rt0.c0, v0.c1, rt0.c2, t0.c0;
SELECT v0.c0, rt0.c0, v0.c1, rt0.c2, t0.c0 FROM rt0, v0 RIGHT OUTER JOIN t0 ON CASE WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY WHERE ((((t0.c0 IN ())) BETWEEN (((rt0.c2) BETWEEN (rt0.c4) AND (v0.c2))) AND ((rt0.c1 IN (t0.c0))))) GROUP BY v0.c0, rt0.c0, v0.c1, rt0.c2, t0.c0 UNION SELECT v0.c0, rt0.c0, v0.c1, rt0.c2, t0.c0 FROM rt0, v0 RIGHT OUTER JOIN t0 ON CASE WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY WHERE ((NOT ((((t0.c0 IN ())) BETWEEN (((rt0.c2) BETWEEN (rt0.c4) AND (v0.c2))) AND ((rt0.c1 IN (t0.c0))))))) GROUP BY v0.c0, rt0.c0, v0.c1, rt0.c2, t0.c0 UNION SELECT v0.c0, rt0.c0, v0.c1, rt0.c2, t0.c0 FROM rt0, v0 RIGHT OUTER JOIN t0 ON CASE WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY WHERE ((((((t0.c0 IN ())) BETWEEN (((rt0.c2) BETWEEN (rt0.c4) AND (v0.c2))) AND ((rt0.c1 IN (t0.c0))))) ISNULL)) GROUP BY v0.c0, rt0.c0, v0.c1, rt0.c2, t0.c0;
SELECT v0.c0, rt0.c0, v0.c1, rt0.c2, t0.c0 FROM rt0, v0 RIGHT OUTER JOIN t0 ON CASE WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY GROUP BY v0.c0, rt0.c0, v0.c1, rt0.c2, t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON CASE CAST(rt0.c1 AS REAL)  WHEN ((((((((rt0.c2)OR(v0.c0)))AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c4)) THEN ((rt0.c1)||(rt0.c1)) ELSE ((v0.c0) IS FALSE) END CROSS JOIN t0 ON CAST((+ ('Do*3')) AS TEXT) FULL OUTER JOIN v0 ON ((((vt0.c0) BETWEEN (v0.c1) AND ('-1349291892')))GLOB((v0.c1 IN (rt0.c3))));
SELECT DISTINCT v0.c1, v0.c2, rt0.c0, v0.c0, t0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM v0, rt0, t0;
SELECT DISTINCT v0.c1, v0.c2, rt0.c0, v0.c0, t0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM v0, rt0, t0 WHERE ('741006194') UNION SELECT DISTINCT v0.c1, v0.c2, rt0.c0, v0.c0, t0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM v0, rt0, t0 WHERE ((NOT ('741006194'))) UNION SELECT DISTINCT v0.c1, v0.c2, rt0.c0, v0.c0, t0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM v0, rt0, t0 WHERE ((('741006194') ISNULL));
SELECT DISTINCT v0.c1, v0.c2, rt0.c0, v0.c0, t0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM v0, rt0, t0;
SELECT ALL rt0.c3, v0.c0, rt0.c1, rt0.c2, t0.c0 FROM t0 FULL OUTER JOIN v0 ON ((NOT (t0.c0)) IN ()) INNER JOIN rt0 ON ((((rt0.c4)!=(v0.c2)))>=((('홃CvZ.^HK') BETWEEN (t0.c0) AND (rt0.c3)))) FULL OUTER JOIN vt0 ON rt0.c3 GROUP BY rt0.c3, v0.c0, rt0.c1, rt0.c2, t0.c0;
SELECT rt0.c3, v0.c0, rt0.c1, rt0.c2, t0.c0 FROM t0 FULL OUTER JOIN v0 ON ((NOT (t0.c0)) IN ()) INNER JOIN rt0 ON ((((rt0.c4)<>(v0.c2)))>=((('홃CvZ.^HK') BETWEEN (t0.c0) AND (rt0.c3)))) FULL OUTER JOIN vt0 ON rt0.c3 WHERE ((((((((((v0.c2 IN ()))OR(CASE WHEN v0.c0 THEN 0.7309826169071668 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)))OR(((rt0.c2)<=(rt0.c0)))))AND(((((((((vt0.c0)OR(t0.c0)))OR(v0.c1)))OR(rt0.c2)))AND(rt0.c2)))))OR(((((rt0.c2)OR(t0.c0)))AND(t0.c0))))) GROUP BY rt0.c3, v0.c0, rt0.c1, rt0.c2, t0.c0 UNION SELECT ALL rt0.c3, v0.c0, rt0.c1, rt0.c2, t0.c0 FROM t0 FULL OUTER JOIN v0 ON ((NOT (t0.c0)) IN ()) INNER JOIN rt0 ON ((((rt0.c4)!=(v0.c2)))>=((('홃CvZ.^HK') BETWEEN (t0.c0) AND (rt0.c3)))) FULL OUTER JOIN vt0 ON rt0.c3 WHERE ((NOT ((((((((((v0.c2 IN ()))OR(CASE WHEN v0.c0 THEN 0.7309826169071668 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)))OR(((rt0.c2)<=(rt0.c0)))))AND(((((((((vt0.c0)OR(t0.c0)))OR(v0.c1)))OR(rt0.c2)))AND(rt0.c2)))))OR(((((rt0.c2)OR(t0.c0)))AND(t0.c0))))))) GROUP BY rt0.c3, v0.c0, rt0.c1, rt0.c2, t0.c0 UNION SELECT ALL rt0.c3, v0.c0, rt0.c1, rt0.c2, t0.c0 FROM t0 FULL OUTER JOIN v0 ON ((NOT (t0.c0)) IN ()) INNER JOIN rt0 ON ((((rt0.c4)!=(v0.c2)))>=((('홃CvZ.^HK') BETWEEN (t0.c0) AND (rt0.c3)))) FULL OUTER JOIN vt0 ON rt0.c3 WHERE ((((((((((((v0.c2 IN ()))OR(CASE WHEN v0.c0 THEN 0.7309826169071668 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)))OR(((rt0.c2)<=(rt0.c0)))))AND(((((((((vt0.c0)OR(t0.c0)))OR(v0.c1)))OR(rt0.c2)))AND(rt0.c2)))))OR(((((rt0.c2)OR(t0.c0)))AND(t0.c0))))) ISNULL)) GROUP BY rt0.c3, v0.c0, rt0.c1, rt0.c2, t0.c0;
SELECT ALL rt0.c3, v0.c0, rt0.c1, rt0.c2, t0.c0 FROM t0 FULL OUTER JOIN v0 ON ((NOT (t0.c0)) IN ()) INNER JOIN rt0 ON ((((rt0.c4)!=(v0.c2)))>=((('홃CvZ.^HK') BETWEEN (t0.c0) AND (rt0.c3)))) FULL OUTER JOIN vt0 ON rt0.c3 GROUP BY rt0.c3, v0.c0, rt0.c1, rt0.c2, t0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0 HAVING GROUP_CONCAT(SQLITE_VERSION()) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0 HAVING (NOT (GROUP_CONCAT(SQLITE_VERSION()))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0 HAVING ((GROUP_CONCAT(SQLITE_VERSION())) ISNULL);
SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0 HAVING GROUP_CONCAT(SQLITE_VERSION()) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0 HAVING (NOT (GROUP_CONCAT(SQLITE_VERSION()))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0 HAVING ((GROUP_CONCAT(SQLITE_VERSION())) ISNULL);
SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((vt0.c0 IN ()) COLLATE NOCASE))) UNION ALL SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()) COLLATE NOCASE) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT v0.c1, v0.c2, rt0.c3, v0.c0, rt0.c2, t0.c0 FROM t0 NOT INDEXED, rt0, v0;
SELECT DISTINCT v0.c1, v0.c2, rt0.c3, v0.c0, rt0.c2, t0.c0 FROM t0, rt0, v0 WHERE (CASE WHEN (((rt0.c3))<=((v0.c1))) THEN COALESCE(DISTINCT 0.0695032937258282, rt0.c1) END) UNION SELECT DISTINCT v0.c1, v0.c2, rt0.c3, v0.c0, rt0.c2, t0.c0 FROM t0, rt0, v0 WHERE ((NOT (CASE WHEN (((rt0.c3))<=((v0.c1))) THEN COALESCE(DISTINCT 0.0695032937258282, rt0.c1) END))) UNION SELECT DISTINCT v0.c1, v0.c2, rt0.c3, v0.c0, rt0.c2, t0.c0 FROM t0, rt0, v0 WHERE (((CASE WHEN (((rt0.c3))<=((v0.c1))) THEN COALESCE(DISTINCT 0.0695032937258282, rt0.c1) END) ISNULL));
SELECT DISTINCT v0.c1, v0.c2, rt0.c3, v0.c0, rt0.c2, t0.c0 FROM t0 NOT INDEXED, rt0, v0;
SELECT ALL vt0.c0, rt0.c3, v0.c2, rt0.c0, rt0.c2, rt0.c1, v0.c0, v0.c1 FROM vt0, rt0 CROSS JOIN t0 ON NULLIF(DISTINCT NULL, ((rt0.c0)>(rt0.c2))) INNER JOIN v0 ON ((TRIM(v0.c1, v0.c0)) ISNULL) GROUP BY vt0.c0, rt0.c3, v0.c2, rt0.c0, rt0.c2, rt0.c1, v0.c0, v0.c1;
SELECT vt0.c0, rt0.c3, v0.c2, rt0.c0, rt0.c2, rt0.c1, v0.c0, v0.c1 FROM vt0, rt0 CROSS JOIN t0 ON NULLIF(DISTINCT NULL, ((rt0.c0)>(rt0.c2))) INNER JOIN v0 ON ((TRIM(v0.c1, v0.c0)) ISNULL) WHERE (0Xffffffffe10855e8) GROUP BY vt0.c0, rt0.c3, v0.c2, rt0.c0, rt0.c2, rt0.c1, v0.c0, v0.c1 UNION SELECT ALL vt0.c0, rt0.c3, v0.c2, rt0.c0, rt0.c2, rt0.c1, v0.c0, v0.c1 FROM vt0, rt0 CROSS JOIN t0 ON NULLIF(DISTINCT NULL, ((rt0.c0)>(rt0.c2))) INNER JOIN v0 ON ((TRIM(v0.c1, v0.c0)) ISNULL) WHERE ((NOT (0Xffffffffe10855e8))) GROUP BY vt0.c0, rt0.c3, v0.c2, rt0.c0, rt0.c2, rt0.c1, v0.c0, v0.c1 UNION SELECT ALL vt0.c0, rt0.c3, v0.c2, rt0.c0, rt0.c2, rt0.c1, v0.c0, v0.c1 FROM vt0, rt0 CROSS JOIN t0 ON NULLIF(DISTINCT NULL, ((rt0.c0)>(rt0.c2))) INNER JOIN v0 ON ((TRIM(v0.c1, v0.c0)) ISNULL) WHERE (((0Xffffffffe10855e8) ISNULL)) GROUP BY vt0.c0, rt0.c3, v0.c2, rt0.c0, rt0.c2, rt0.c1, v0.c0, v0.c1;
SELECT ALL vt0.c0, rt0.c3, v0.c2, rt0.c0, rt0.c2, rt0.c1, v0.c0, v0.c1 FROM vt0, rt0 CROSS JOIN t0 ON NULLIF(DISTINCT NULL, ((rt0.c0)>(rt0.c2))) INNER JOIN v0 ON ((TRIM(v0.c1, v0.c0)) ISNULL) GROUP BY vt0.c0, rt0.c3, v0.c2, rt0.c0, rt0.c2, rt0.c1, v0.c0, v0.c1;
SELECT ALL rt0.c2, v0.c0, rt0.c1, rt0.c3, vt0.c0, rt0.c4, rt0.c0, v0.c2, v0.c1, t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON (((rt0.c2, vt0.c0, rt0.c4))!=((rt0.c0, v0.c1, rt0.c2))) COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((((((('728589676')) NOT BETWEEN ((rt0.c3)) AND ((v0.c1))))AND(((((vt0.c0)OR(v0.c1)))AND(rt0.c1)))))OR(((vt0.c0) IS TRUE))) FULL OUTER JOIN rt0 ON (('nk510' COLLATE RTRIM)GLOB(((v0.c1)|(vt0.c0)))) GROUP BY rt0.c2, v0.c0, rt0.c1, rt0.c3, vt0.c0, rt0.c4, rt0.c0, v0.c2, v0.c1, t0.c0;
SELECT rt0.c2, rt0.c4 FROM rt0;
SELECT rt0.c2, rt0.c4 FROM rt0 WHERE (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END) UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END))) UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END) ISNULL));
SELECT rt0.c2, rt0.c4 FROM rt0;
SELECT DISTINCT * FROM rt0, t0, vt0, v0;
SELECT DISTINCT * FROM rt0, t0, vt0, v0 WHERE ((CASE WHEN rt0.c3 THEN v0.c2 END IN (x'7564'))) UNION SELECT DISTINCT * FROM rt0, t0, vt0, v0 WHERE ((NOT ((CASE WHEN rt0.c3 THEN v0.c2 END IN (x'7564'))))) UNION SELECT DISTINCT * FROM rt0, t0, vt0, v0 WHERE ((((CASE WHEN rt0.c3 THEN v0.c2 END IN (x'7564'))) ISNULL));
SELECT DISTINCT * FROM rt0, t0, vt0, v0;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT v0.c1 FROM v0 WHERE (((UPPER(v0.c2)) NOT NULL)) GROUP BY v0.c1 UNION SELECT ALL v0.c1 FROM v0 WHERE ((NOT (((UPPER(v0.c2)) NOT NULL)))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0 WHERE (((((UPPER(v0.c2)) NOT NULL)) ISNULL)) GROUP BY v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c2, rt0.c2, v0.c0, rt0.c1, v0.c1, vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((v0.c1)>=(rt0.c0)) COLLATE BINARY RIGHT OUTER JOIN rt0 ON ((((x'')OR(CAST(rt0.c0 AS TEXT))))OR(((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c4)))) LEFT OUTER JOIN t0 ON TRIM(DISTINCT ((t0.c0) BETWEEN (v0.c2) AND (rt0.c2))) GROUP BY v0.c2, rt0.c2, v0.c0, rt0.c1, v0.c1, vt0.c0;
SELECT ALL v0.c0, rt0.c0, rt0.c3, t0.c0, rt0.c1, rt0.c4, v0.c2, vt0.c0 FROM rt0, t0, v0 LEFT OUTER JOIN vt0 ON CASE WHEN CASE v0.c2  WHEN vt0.c0 THEN t0.c0 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c4 THEN rt0.c4 END THEN ((((vt0.c0)AND(v0.c2)))AND(rt0.c3)) ELSE CASE -1.594540545E9  WHEN t0.c0 THEN v0.c2 WHEN 0X566dd352 THEN v0.c1 WHEN v0.c2 THEN rt0.c4 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 END END;
SELECT ALL v0.c0, rt0.c0, rt0.c3, t0.c0, rt0.c1, rt0.c4, v0.c2, vt0.c0 FROM rt0, t0, v0 LEFT OUTER JOIN vt0 ON CASE WHEN CASE v0.c2  WHEN vt0.c0 THEN t0.c0 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c4 THEN rt0.c4 END THEN ((((vt0.c0)AND(v0.c2)))AND(rt0.c3)) ELSE CASE -1.594540545E9  WHEN t0.c0 THEN v0.c2 WHEN 0X566dd352 THEN v0.c1 WHEN v0.c2 THEN rt0.c4 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 END END WHERE (CAST(CAST('294725465' AS INTEGER) AS NUMERIC)) UNION ALL SELECT v0.c0, rt0.c0, rt0.c3, t0.c0, rt0.c1, rt0.c4, v0.c2, vt0.c0 FROM rt0, t0, v0 LEFT OUTER JOIN vt0 ON CASE WHEN CASE v0.c2  WHEN vt0.c0 THEN t0.c0 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c4 THEN rt0.c4 END THEN ((((vt0.c0)AND(v0.c2)))AND(rt0.c3)) ELSE CASE -1.594540545E9  WHEN t0.c0 THEN v0.c2 WHEN 0x566dd352 THEN v0.c1 WHEN v0.c2 THEN rt0.c4 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 END END WHERE ((NOT (CAST(CAST('294725465' AS INTEGER) AS NUMERIC)))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c3, t0.c0, rt0.c1, rt0.c4, v0.c2, vt0.c0 FROM rt0, t0, v0 LEFT OUTER JOIN vt0 ON CASE WHEN CASE v0.c2  WHEN vt0.c0 THEN t0.c0 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c4 THEN rt0.c4 END THEN ((((vt0.c0)AND(v0.c2)))AND(rt0.c3)) ELSE CASE -1.594540545E9  WHEN t0.c0 THEN v0.c2 WHEN 0X566dd352 THEN v0.c1 WHEN v0.c2 THEN rt0.c4 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 END END WHERE (((CAST(CAST('294725465' AS INTEGER) AS NUMERIC)) ISNULL));
SELECT ALL v0.c0, rt0.c0, rt0.c3, t0.c0, rt0.c1, rt0.c4, v0.c2, vt0.c0 FROM rt0, t0, v0 LEFT OUTER JOIN vt0 ON CASE WHEN CASE v0.c2  WHEN vt0.c0 THEN t0.c0 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c4 THEN rt0.c4 END THEN ((((vt0.c0)AND(v0.c2)))AND(rt0.c3)) ELSE CASE -1.594540545E9  WHEN t0.c0 THEN v0.c2 WHEN 0X566dd352 THEN v0.c1 WHEN v0.c2 THEN rt0.c4 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 END END;
SELECT DISTINCT v0.c1, v0.c0, v0.c2 FROM v0, vt0;
SELECT DISTINCT v0.c1, v0.c0, v0.c2 FROM v0, vt0 WHERE (((v0.c1)*(CASE v0.c0  WHEN v0.c2 THEN vt0.c0 END))) UNION SELECT DISTINCT v0.c1, v0.c0, v0.c2 FROM v0, vt0 WHERE ((NOT (((v0.c1)*(CASE v0.c0  WHEN v0.c2 THEN vt0.c0 END))))) UNION SELECT DISTINCT v0.c1, v0.c0, v0.c2 FROM v0, vt0 WHERE (((((v0.c1)*(CASE v0.c0  WHEN v0.c2 THEN vt0.c0 END))) ISNULL));
SELECT DISTINCT v0.c1, v0.c0, v0.c2 FROM v0, vt0;
SELECT rt0.c2, v0.c1, v0.c0, v0.c2, rt0.c0 FROM t0, vt0, v0, rt0 GROUP BY rt0.c2, v0.c1, v0.c0, v0.c2, rt0.c0;
SELECT rt0.c2, v0.c1, v0.c0, v0.c2, rt0.c0 FROM t0, vt0, v0, rt0 WHERE (rt0.c4) GROUP BY rt0.c2, v0.c1, v0.c0, v0.c2, rt0.c0 UNION SELECT ALL rt0.c2, v0.c1, v0.c0, v0.c2, rt0.c0 FROM t0, vt0, v0, rt0 WHERE ((NOT (rt0.c4))) GROUP BY rt0.c2, v0.c1, v0.c0, v0.c2, rt0.c0 UNION SELECT ALL rt0.c2, v0.c1, v0.c0, v0.c2, rt0.c0 FROM t0, vt0, v0, rt0 WHERE (((rt0.c4) ISNULL)) GROUP BY rt0.c2, v0.c1, v0.c0, v0.c2, rt0.c0;
SELECT rt0.c2, v0.c1, v0.c0, v0.c2, rt0.c0 FROM t0, vt0, v0, rt0 GROUP BY rt0.c2, v0.c1, v0.c0, v0.c2, rt0.c0;
SELECT ALL v0.c1, v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c1, v0.c0, vt0.c0;
SELECT v0.c1, v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c1, v0.c0, vt0.c0 HAVING (- (((v0.c1) BETWEEN (COUNT(COUNT(*))) AND (GROUP_CONCAT(v0.c1))))) UNION ALL SELECT v0.c1, v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c1, v0.c0, vt0.c0 HAVING (NOT ((- (((v0.c1) BETWEEN (COUNT(COUNT(*))) AND (GROUP_CONCAT(v0.c1))))))) UNION ALL SELECT v0.c1, v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c1, v0.c0, vt0.c0 HAVING (((- (((v0.c1) BETWEEN (COUNT(COUNT(*))) AND (GROUP_CONCAT(v0.c1)))))) ISNULL);
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON CASE WHEN rt0.c3 COLLATE RTRIM THEN v0.c0 ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (v0.c2)) END LEFT OUTER JOIN rt0 ON (((((- (v0.c1)))AND(((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt0.c0)))))AND(((rt0.c3)>(rt0.c0)))) RIGHT OUTER JOIN t0 ON (CASE WHEN '0.008294009237434175' THEN rt0.c2 ELSE v0.c2 END IN (((vt0.c0)||(rt0.c0))));
SELECT DISTINCT * FROM vt0, t0, rt0, v0;
SELECT DISTINCT * FROM vt0, t0, rt0, v0 WHERE (((CAST(v0.c0 AS BLOB))||(((rt0.c1)IS NOT(v0.c1))))) UNION SELECT DISTINCT * FROM vt0, t0, rt0, v0 WHERE ((NOT (((CAST(v0.c0 AS BLOB))||(((rt0.c1)IS NOT(v0.c1))))))) UNION SELECT DISTINCT * FROM vt0, t0, rt0, v0 WHERE (((((CAST(v0.c0 AS BLOB))||(((rt0.c1)IS NOT(v0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0, rt0, v0;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT v0.c2, v0.c0 FROM v0 WHERE (CASE ((v0.c2)AND(v0.c0))  WHEN v0.c2 COLLATE BINARY THEN ((v0.c1)<(v0.c2)) ELSE ((v0.c1) BETWEEN (v0.c2) AND (v0.c1)) END) GROUP BY v0.c2, v0.c0 UNION SELECT ALL v0.c2, v0.c0 FROM v0 WHERE ((NOT (CASE ((v0.c2)AND(v0.c0))  WHEN v0.c2 COLLATE BINARY THEN ((v0.c1)<(v0.c2)) ELSE ((v0.c1) BETWEEN (v0.c2) AND (v0.c1)) END))) GROUP BY v0.c2, v0.c0 UNION SELECT ALL v0.c2, v0.c0 FROM v0 WHERE (((CASE ((v0.c2)AND(v0.c0))  WHEN v0.c2 COLLATE BINARY THEN ((v0.c1)<(v0.c2)) ELSE ((v0.c1) BETWEEN (v0.c2) AND (v0.c1)) END) ISNULL)) GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT rt0.c3 FROM rt0, t0, vt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0, t0, vt0 GROUP BY rt0.c3 HAVING MAX(MAX(vt0.c0)) UNION ALL SELECT ALL rt0.c3 FROM rt0, t0, vt0 GROUP BY rt0.c3 HAVING (NOT (MAX(MAX(vt0.c0)))) UNION ALL SELECT ALL rt0.c3 FROM rt0, t0, vt0 GROUP BY rt0.c3 HAVING ((MAX(MAX(vt0.c0))) ISNULL);
SELECT ALL rt0.c3, v0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0, t0, v0;
SELECT rt0.c3, v0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0, t0, v0 WHERE (CASE NULL  WHEN 0x6ca81f75 THEN ((x'')|(v0.c2)) ELSE ((rt0.c1)||(v0.c0)) END) UNION ALL SELECT ALL rt0.c3, v0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0, t0, v0 WHERE ((NOT (CASE NULL  WHEN 0x6ca81f75 THEN ((x'')|(v0.c2)) ELSE ((rt0.c1)||(v0.c0)) END))) UNION ALL SELECT ALL rt0.c3, v0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0, t0, v0 WHERE (((CASE NULL  WHEN 0X6ca81f75 THEN ((x'')|(v0.c2)) ELSE ((rt0.c1)||(v0.c0)) END) ISNULL));
SELECT ALL rt0.c3, v0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0, t0, v0;
SELECT DISTINCT v0.c2, v0.c0 FROM v0;
SELECT DISTINCT v0.c2, v0.c0 FROM v0 WHERE (CASE CASE v0.c1  WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END  WHEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) THEN (v0.c2 IN ()) END) UNION SELECT DISTINCT v0.c2, v0.c0 FROM v0 WHERE ((NOT (CASE CASE v0.c1  WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END  WHEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) THEN (v0.c2 IN ()) END))) UNION SELECT DISTINCT v0.c2, v0.c0 FROM v0 WHERE (((CASE CASE v0.c1  WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END  WHEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) THEN (v0.c2 IN ()) END) ISNULL));
SELECT DISTINCT v0.c2, v0.c0 FROM v0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((x'3777')) NOT BETWEEN ((((-2104517746) NOT BETWEEN (NULL) AND (t0.c0)))) AND ((((((x'')OR(t0.c0)))AND(t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((x'3777')) NOT BETWEEN ((((-2104517746) NOT BETWEEN (NULL) AND (t0.c0)))) AND ((((((x'')OR(t0.c0)))AND(t0.c0)))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((x'3777')) NOT BETWEEN ((((-2104517746) NOT BETWEEN (NULL) AND (t0.c0)))) AND ((((((x'')OR(t0.c0)))AND(t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c1, t0.c0, rt0.c0, rt0.c4, v0.c0, rt0.c3, rt0.c2, vt0.c0 FROM v0, rt0, vt0, t0 GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c4, v0.c0, rt0.c3, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, t0.c0, rt0.c0, rt0.c4, v0.c0, rt0.c3, rt0.c2, vt0.c0 FROM v0, rt0, vt0, t0 GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c4, v0.c0, rt0.c3, rt0.c2, vt0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL rt0.c1, t0.c0, rt0.c0, rt0.c4, v0.c0, rt0.c3, rt0.c2, vt0.c0 FROM v0, rt0, vt0, t0 GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c4, v0.c0, rt0.c3, rt0.c2, vt0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT rt0.c1, t0.c0, rt0.c0, rt0.c4, v0.c0, rt0.c3, rt0.c2, vt0.c0 FROM v0, rt0, vt0, t0 GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c4, v0.c0, rt0.c3, rt0.c2, vt0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT t0.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0 INNER JOIN vt0 ON rt0.c2 RIGHT OUTER JOIN t0 ON CASE WHEN (((rt0.c4, rt0.c4, rt0.c2))<=((rt0.c1, rt0.c3, rt0.c3))) THEN ((((rt0.c4)AND(vt0.c0)))OR(t0.c0)) END;
SELECT t0.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0 INNER JOIN vt0 ON rt0.c2 RIGHT OUTER JOIN t0 ON CASE WHEN (((rt0.c4, rt0.c4, rt0.c2))<=((rt0.c1, rt0.c3, rt0.c3))) THEN ((((rt0.c4)AND(vt0.c0)))OR(t0.c0)) END WHERE (vt0.c0) UNION ALL SELECT t0.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0 INNER JOIN vt0 ON rt0.c2 RIGHT OUTER JOIN t0 ON CASE WHEN (((rt0.c4, rt0.c4, rt0.c2))<=((rt0.c1, rt0.c3, rt0.c3))) THEN ((((rt0.c4)AND(vt0.c0)))OR(t0.c0)) END WHERE ((NOT (vt0.c0))) UNION ALL SELECT t0.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0 INNER JOIN vt0 ON rt0.c2 RIGHT OUTER JOIN t0 ON CASE WHEN (((rt0.c4, rt0.c4, rt0.c2))<=((rt0.c1, rt0.c3, rt0.c3))) THEN ((((rt0.c4)AND(vt0.c0)))OR(t0.c0)) END WHERE (((vt0.c0) ISNULL));
SELECT t0.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0 INNER JOIN vt0 ON rt0.c2 RIGHT OUTER JOIN t0 ON CASE WHEN (((rt0.c4, rt0.c4, rt0.c2))<=((rt0.c1, rt0.c3, rt0.c3))) THEN ((((rt0.c4)AND(vt0.c0)))OR(t0.c0)) END;
SELECT DISTINCT v0.c2, t0.c0, rt0.c0, vt0.c0, rt0.c1 FROM v0 CROSS JOIN vt0 ON (((rt0.c0)&(NULL)) IN (rt0.c1)) FULL OUTER JOIN rt0 ON ((((rt0.c3) IS FALSE))AND(((((((((((((0.5614692117882484)OR(v0.c2)))OR(v0.c0)))AND(rt0.c1)))OR(-738766697)))OR(rt0.c2)))OR(rt0.c4)))) INNER JOIN t0 ON CAST('p5' AS REAL);
SELECT v0.c0, rt0.c1, v0.c1, vt0.c0, v0.c2, t0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, v0, t0, vt0 GROUP BY v0.c0, rt0.c1, v0.c1, vt0.c0, v0.c2, t0.c0, rt0.c3, rt0.c4, rt0.c2;
SELECT v0.c0, rt0.c1, v0.c1, vt0.c0, v0.c2, t0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, v0, t0, vt0 WHERE (((CAST(v0.c0 AS TEXT)) NOT BETWEEN (CAST(v0.c1 AS NUMERIC)) AND (v0.c1))) GROUP BY v0.c0, rt0.c1, v0.c1, vt0.c0, v0.c2, t0.c0, rt0.c3, rt0.c4, rt0.c2 UNION SELECT ALL v0.c0, rt0.c1, v0.c1, vt0.c0, v0.c2, t0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, v0, t0, vt0 WHERE ((NOT (((CAST(v0.c0 AS TEXT)) NOT BETWEEN (CAST(v0.c1 AS NUMERIC)) AND (v0.c1))))) GROUP BY v0.c0, rt0.c1, v0.c1, vt0.c0, v0.c2, t0.c0, rt0.c3, rt0.c4, rt0.c2 UNION SELECT ALL v0.c0, rt0.c1, v0.c1, vt0.c0, v0.c2, t0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, v0, t0, vt0 WHERE (((((CAST(v0.c0 AS TEXT)) NOT BETWEEN (CAST(v0.c1 AS NUMERIC)) AND (v0.c1))) ISNULL)) GROUP BY v0.c0, rt0.c1, v0.c1, vt0.c0, v0.c2, t0.c0, rt0.c3, rt0.c4, rt0.c2;
SELECT v0.c0, rt0.c1, v0.c1, vt0.c0, v0.c2, t0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, v0, t0, vt0 GROUP BY v0.c0, rt0.c1, v0.c1, vt0.c0, v0.c2, t0.c0, rt0.c3, rt0.c4, rt0.c2;
SELECT ALL rt0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c2, rt0.c3, t0.c0, rt0.c0, v0.c1, v0.c2 FROM t0 RIGHT OUTER JOIN rt0 ON ((NULL) NOT BETWEEN (((v0.c2) IS TRUE)) AND (CASE WHEN '-1704732499' THEN v0.c2 END)) CROSS JOIN v0 ON (((((v0.c0 IN ()))OR(((rt0.c3)IS(v0.c1)))))OR(((rt0.c3) NOT BETWEEN (rt0.c2) AND (vt0.c0)))) INNER JOIN vt0 ON ((((((((((((((v0.c0)&(rt0.c1)))AND((((v0.c2, rt0.c1, rt0.c2))>=((rt0.c3, rt0.c4, vt0.c0))))))AND(((0X47ccda56)/(vt0.c0)))))AND(((rt0.c4)!=(t0.c0)))))OR(((((t0.c0)AND(t0.c0)))AND(vt0.c0)))))AND((((rt0.c2))<=((vt0.c0))))))OR((- (rt0.c4)))) GROUP BY rt0.c1, rt0.c4, vt0.c0, v0.c0, rt0.c2, rt0.c3, t0.c0, rt0.c0, v0.c1, v0.c2;
SELECT ALL * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE (LOWER(((t0.c0) BETWEEN (rt0.c4) AND (rt0.c3)))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT (LOWER(((t0.c0) BETWEEN (rt0.c4) AND (rt0.c3)))))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE (((LOWER(((t0.c0) BETWEEN (rt0.c4) AND (rt0.c3)))) ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((((vt0.c0 IN ()))<<(TRIM(DISTINCT rt0.c3)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((((vt0.c0 IN ()))<<(TRIM(DISTINCT rt0.c3)))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((vt0.c0 IN ()))<<(TRIM(DISTINCT rt0.c3)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL v0.c2 FROM v0, t0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0, t0 WHERE (x'') GROUP BY v0.c2 UNION SELECT v0.c2 FROM v0, t0 WHERE ((NOT (x''))) GROUP BY v0.c2 UNION SELECT v0.c2 FROM v0, t0 WHERE (((x'') ISNULL)) GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0, t0 GROUP BY v0.c2;
SELECT rt0.c2, rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c1, v0.c0, t0.c0, v0.c2 FROM t0, v0, rt0, vt0 GROUP BY rt0.c2, rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c1, v0.c0, t0.c0, v0.c2;
SELECT rt0.c2, rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c1, v0.c0, t0.c0, v0.c2 FROM t0, v0, rt0, vt0 NOT INDEXED GROUP BY rt0.c2, rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c1, v0.c0, t0.c0, v0.c2 HAVING MAX((MAX(TOTAL(COUNT(*))) IN ())) UNION ALL SELECT ALL rt0.c2, rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c1, v0.c0, t0.c0, v0.c2 FROM t0, v0, rt0, vt0 GROUP BY rt0.c2, rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c1, v0.c0, t0.c0, v0.c2 HAVING (NOT (MAX((MAX(TOTAL(COUNT(*))) IN ())))) UNION ALL SELECT ALL rt0.c2, rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c1, v0.c0, t0.c0, v0.c2 FROM t0, v0, rt0, vt0 GROUP BY rt0.c2, rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c1, v0.c0, t0.c0, v0.c2 HAVING ((MAX((MAX(TOTAL(COUNT(*))) IN ()))) ISNULL);
SELECT rt0.c2, rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c1, v0.c0, t0.c0, v0.c2 FROM t0, v0, rt0, vt0 GROUP BY rt0.c2, rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c1, v0.c0, t0.c0, v0.c2;
SELECT rt0.c2, rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c1, v0.c0, t0.c0, v0.c2 FROM t0, v0, rt0, vt0 NOT INDEXED GROUP BY rt0.c2, rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c1, v0.c0, t0.c0, v0.c2 HAVING MAX((MAX(TOTAL(COUNT(*))) IN ())) UNION ALL SELECT ALL rt0.c2, rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c1, v0.c0, t0.c0, v0.c2 FROM t0, v0, rt0, vt0 GROUP BY rt0.c2, rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c1, v0.c0, t0.c0, v0.c2 HAVING (NOT (MAX((MAX(TOTAL(COUNT(*))) IN ())))) UNION ALL SELECT ALL rt0.c2, rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c1, v0.c0, t0.c0, v0.c2 FROM t0, v0, rt0, vt0 GROUP BY rt0.c2, rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c1, v0.c0, t0.c0, v0.c2 HAVING ((MAX((MAX(TOTAL(COUNT(*))) IN ()))) ISNULL);
SELECT rt0.c2, rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c1, v0.c0, t0.c0, v0.c2 FROM t0, v0, rt0, vt0 GROUP BY rt0.c2, rt0.c3, vt0.c0, rt0.c0, rt0.c4, rt0.c1, v0.c0, t0.c0, v0.c2;
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((v0.c1))) COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((v0.c1))) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((v0.c1))) COLLATE NOCASE) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT * FROM t0, v0, rt0, vt0;
SELECT DISTINCT * FROM t0, v0, rt0, vt0 WHERE (((((v0.c0)OR(((v0.c2)-(v0.c2)))))AND(rt0.c1 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t0, v0, rt0, vt0 WHERE ((NOT (((((v0.c0)OR(((v0.c2)-(v0.c2)))))AND(rt0.c1 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM t0, v0, rt0, vt0 WHERE (((((((v0.c0)OR(((v0.c2)-(v0.c2)))))AND(rt0.c1 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM t0, v0, rt0, vt0;
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0 WHERE (HEX(CASE WHEN rt0.c4 THEN rt0.c0 ELSE vt0.c0 END)) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt0, rt0 WHERE ((NOT (HEX(CASE WHEN rt0.c4 THEN rt0.c0 ELSE vt0.c0 END)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt0, rt0 WHERE (((HEX(CASE WHEN rt0.c4 THEN rt0.c0 ELSE vt0.c0 END)) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT v0.c0 FROM t0, vt0, rt0 RIGHT OUTER JOIN v0 ON v0.c2 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0, vt0, rt0 RIGHT OUTER JOIN v0 ON v0.c2 GROUP BY v0.c0 HAVING CAST((- (rt0.c0)) AS REAL) UNION ALL SELECT v0.c0 FROM t0, vt0, rt0 RIGHT OUTER JOIN v0 ON v0.c2 GROUP BY v0.c0 HAVING (NOT (CAST((- (rt0.c0)) AS REAL))) UNION ALL SELECT v0.c0 FROM t0, vt0, rt0 RIGHT OUTER JOIN v0 ON v0.c2 GROUP BY v0.c0 HAVING ((CAST((- (rt0.c0)) AS REAL)) ISNULL);
SELECT v0.c0 FROM t0, vt0, rt0 RIGHT OUTER JOIN v0 ON v0.c2 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0, vt0, rt0 RIGHT OUTER JOIN v0 ON v0.c2 GROUP BY v0.c0 HAVING CAST((- (rt0.c0)) AS REAL) UNION ALL SELECT v0.c0 FROM t0, vt0, rt0 RIGHT OUTER JOIN v0 ON v0.c2 GROUP BY v0.c0 HAVING (NOT (CAST((- (rt0.c0)) AS REAL))) UNION ALL SELECT v0.c0 FROM t0, vt0, rt0 RIGHT OUTER JOIN v0 ON v0.c2 GROUP BY v0.c0 HAVING ((CAST((- (rt0.c0)) AS REAL)) ISNULL);
SELECT v0.c0 FROM t0, vt0, rt0 RIGHT OUTER JOIN v0 ON v0.c2 GROUP BY v0.c0;
SELECT ALL v0.c0, v0.c2, t0.c0, vt0.c0, v0.c1 FROM vt0 RIGHT OUTER JOIN t0 ON CASE CASE WHEN v0.c0 THEN NULL WHEN vt0.c0 THEN v0.c1 WHEN t0.c0 THEN v0.c2 ELSE v0.c2 END  WHEN CAST(t0.c0 AS BLOB) THEN CASE 'N)*b'  WHEN vt0.c0 THEN t0.c0 END END INNER JOIN v0 ON (~ ((((v0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))));
SELECT DISTINCT t0.c0, v0.c1, vt0.c0, rt0.c3, rt0.c1, v0.c0, rt0.c0, rt0.c4, v0.c2, rt0.c2 FROM t0, v0 RIGHT OUTER JOIN vt0 ON v0.c0 LEFT OUTER JOIN rt0 ON '';
SELECT DISTINCT t0.c0, v0.c1, vt0.c0, rt0.c3, rt0.c1, v0.c0, rt0.c0, rt0.c4, v0.c2, rt0.c2 FROM t0, v0 RIGHT OUTER JOIN vt0 ON v0.c0 LEFT OUTER JOIN rt0 ON '' WHERE (((((((((rt0.c4 COLLATE NOCASE)AND(rt0.c4 COLLATE RTRIM)))AND(((v0.c2)/(v0.c0)))))AND(vt0.c0 COLLATE RTRIM)))AND((((('1852507390')AND(rt0.c4)))OR(v0.c2))))) UNION SELECT DISTINCT t0.c0, v0.c1, vt0.c0, rt0.c3, rt0.c1, v0.c0, rt0.c0, rt0.c4, v0.c2, rt0.c2 FROM t0, v0 RIGHT OUTER JOIN vt0 ON v0.c0 LEFT OUTER JOIN rt0 ON '' WHERE ((NOT (((((((((rt0.c4 COLLATE NOCASE)AND(rt0.c4 COLLATE RTRIM)))AND(((v0.c2)/(v0.c0)))))AND(vt0.c0 COLLATE RTRIM)))AND((((('1852507390')AND(rt0.c4)))OR(v0.c2))))))) UNION SELECT DISTINCT t0.c0, v0.c1, vt0.c0, rt0.c3, rt0.c1, v0.c0, rt0.c0, rt0.c4, v0.c2, rt0.c2 FROM t0, v0 RIGHT OUTER JOIN vt0 ON v0.c0 LEFT OUTER JOIN rt0 ON '' WHERE (((((((((((rt0.c4 COLLATE NOCASE)AND(rt0.c4 COLLATE RTRIM)))AND(((v0.c2)/(v0.c0)))))AND(vt0.c0 COLLATE RTRIM)))AND((((('1852507390')AND(rt0.c4)))OR(v0.c2))))) ISNULL));
SELECT DISTINCT t0.c0, v0.c1, vt0.c0, rt0.c3, rt0.c1, v0.c0, rt0.c0, rt0.c4, v0.c2, rt0.c2 FROM t0, v0 RIGHT OUTER JOIN vt0 ON v0.c0 LEFT OUTER JOIN rt0 ON '';
SELECT vt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)AND(0.9698526308386823)))+((((v0.c0))<((rt0.c3))))) CROSS JOIN t0 ON -1.7976931348623157E308 LEFT OUTER JOIN v0 ON CAST(vt0.c0 AS BLOB) GROUP BY vt0.c0, rt0.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((TOTAL(vt0.c0), MAX(MIN(vt0.c0)), SUM(vt0.c0))) AND ((CASE COUNT(vt0.c0)  WHEN GROUP_CONCAT(vt0.c0) THEN GROUP_CONCAT(vt0.c0) END, ((vt0.c0)LIKE(MAX(AVG(COUNT(MAX(SUM(vt0.c0))))))), json_array_length(vt0.c0, TOTAL(COUNT(*)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((TOTAL(vt0.c0), MAX(MIN(vt0.c0)), SUM(vt0.c0))) AND ((CASE COUNT(vt0.c0)  WHEN GROUP_CONCAT(vt0.c0) THEN GROUP_CONCAT(vt0.c0) END, ((vt0.c0)LIKE(MAX(AVG(COUNT(MAX(SUM(vt0.c0))))))), json_array_length(vt0.c0, TOTAL(COUNT(*)))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((TOTAL(vt0.c0), MAX(MIN(vt0.c0)), SUM(vt0.c0))) AND ((CASE COUNT(vt0.c0)  WHEN GROUP_CONCAT(vt0.c0) THEN GROUP_CONCAT(vt0.c0) END, ((vt0.c0)LIKE(MAX(AVG(COUNT(MAX(SUM(vt0.c0))))))), json_array_length(vt0.c0, TOTAL(COUNT(*))))))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((((((((('')AND((((t0.c0, t0.c0, t0.c0, t0.c0, 0.7049888731025262)) BETWEEN ((t0.c0, t0.c0, t0.c0, NULL, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))))AND(((t0.c0) BETWEEN ('0.5202017327274706') AND (t0.c0)))))AND(((t0.c0) NOT NULL))))AND('0.1314736027221437'))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((((((('')AND((((t0.c0, t0.c0, t0.c0, t0.c0, 0.7049888731025262)) BETWEEN ((t0.c0, t0.c0, t0.c0, NULL, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))))AND(((t0.c0) BETWEEN ('0.5202017327274706') AND (t0.c0)))))AND(((t0.c0) NOT NULL))))AND('0.1314736027221437'))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((((((((('')AND((((t0.c0, t0.c0, t0.c0, t0.c0, 0.7049888731025262)) BETWEEN ((t0.c0, t0.c0, t0.c0, NULL, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))))AND(((t0.c0) BETWEEN ('0.5202017327274706') AND (t0.c0)))))AND(((t0.c0) NOT NULL))))AND('0.1314736027221437'))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE ((((((v0.c1) NOT BETWEEN (v0.c0) AND (0.957756203245166))))>=((v0.c1)))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT ((((((v0.c1) NOT BETWEEN (v0.c0) AND (0.957756203245166))))>=((v0.c1)))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((((((((v0.c1) NOT BETWEEN (v0.c0) AND (0.957756203245166))))>=((v0.c1)))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
