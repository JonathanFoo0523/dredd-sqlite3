-- Time: 2024/06/09 09:34:24
-- Database: database99
-- Database version: 3.40.0
-- seed value: 3429355499
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 REAL ); -- 1ms;
ANALYZE; -- 0ms;
PRAGMA temp.checkpoint_fullfsync; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(x''); -- 0ms;
UPDATE rt0 SET c3=NULL; -- 0ms;
UPDATE OR IGNORE rt0 SET c3=x''; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=NULL, c3=NULL; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=0Xffffffffc69ec538 WHERE (((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1))) COLLATE NOCASE; -- 0ms;
REINDEX; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 TEXT , c1 TEXT , c2 REAL ); -- 1ms;
CREATE INDEX IF NOT EXISTS i67 ON t0(((CASE c0  WHEN c0 THEN 0.7114044659983558 ELSE c1 END)OR(CASE WHEN c2 THEN c2 WHEN c1 THEN c0 WHEN c1 THEN c1 END)) COLLATE NOCASE,((((((((((((((c1)<<(NULL)))AND(CAST(c0 AS NUMERIC))))AND(CASE WHEN c2 THEN c2 ELSE c2 END)))AND((~ (c1)))))OR(UNLIKELY(c1))))AND(CAST(c2 AS NUMERIC))))AND(c2 COLLATE RTRIM)) ASC,((((c1) IS TRUE)) NOT BETWEEN (CAST(NULL AS REAL)) AND (((c2) NOT BETWEEN (c1) AND (c0)))) ASC) WHERE ((c1) NOTNULL); -- 1ms;
REINDEX  t0; -- 1ms;
UPDATE OR IGNORE t0 SET c1=0.7114044659983558 WHERE t0.c1; -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO t0(c2, c1) VALUES (0Xffffffffd63489bd, '詍HT}iveV'), (NULL, 0.7114044659983558), (x'', '0.7114044659983558'); -- 0ms;
PRAGMA locking_mode; -- 0ms;
VACUUM; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL WHERE ((t0.c2)>>(((t0.c0) BETWEEN (t0.c1) AND (t0.c0)))); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (-962673352, NULL, x'', 'f\n'); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
REINDEX BINARY; -- 0ms;
CREATE INDEX IF NOT EXISTS i69 ON t0(((UNICODE(c2))=((c0 IN (c2)))) COLLATE NOCASE,((((c2)OR(c2)))OR(c2)) COLLATE NOCASE ASC,0.5160043858458653 COLLATE NOCASE); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.7114044659983558 WHERE (((((x'3b06') BETWEEN (0.7550980935241358) AND (3.88598349E8))))>(((- (t0.c0))))); -- 0ms;
UPDATE OR ABORT rt0 SET (c0, c2)=(3.88598349E8, 3.88598349E8); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c2 TO c3; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i81 ON t0(c1 COLLATE NOCASE,c0 COLLATE RTRIM COLLATE NOCASE DESC,0.9310506441666577 COLLATE BINARY); -- 0ms;
END; -- 0ms;
UPDATE OR FAIL rt0 SET c3=NULL, c2=0.4053318286574722; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (''), (''), ('_oV䰘R''{d*'); -- 0ms;
DROP TABLE IF EXISTS rt0; -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL WHERE t0.c0; -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c2) VALUES (x''); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1); -- 1ms;
UPDATE OR IGNORE t0 SET c0=0.4053318286574722; -- 1ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.15303658970813772); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE -93697000; -- 0ms;
INSERT OR REPLACE INTO vt0(c1) VALUES ('-1757380914'); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES ('', x''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') IS FALSE) AS INTEGER); -- 0ms;
UPDATE OR FAIL t0 SET c0='0'; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.7714794629909876 WHERE t0.c0; -- 0ms;
UPDATE vt0 SET c1=NULL, c0=NULL; -- 0ms;
PRAGMA cache_spill; -- 0ms;
UPDATE vt0 SET c0='-962673352'; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
DROP INDEX "i67"; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE vt0 SET (c0, c0)=(x'df7b', x'') WHERE (- (NULL)) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c1)=('-93697000', NULL); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
UPDATE OR IGNORE rt0 SET (c1)=(x'') WHERE ((rt0.c2) IS TRUE) COLLATE NOCASE; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA main.ignore_check_constraints; -- 0ms;
REINDEX BINARY; -- 3ms;
PRAGMA temp.threads; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0) AS SELECT ((t0.c1 COLLATE RTRIM) NOT BETWEEN ((((vt0.c1))<>((t0.c2)))) AND (((((vt0.c0)AND(t0.c0)))AND(t0.c0)))) FROM vt0, t0 WHERE (((CAST(x'' AS INTEGER))>(NULL))) LIMIT -1580649145; -- 2ms;
UPDATE vt0 SET (c0, c1)=(388598349, x''); -- 1ms;
UPDATE OR IGNORE vt0 SET c1=0.47504232336165464, c0=3.88598349E8, c0='2121371518'; -- 0ms;
UPDATE t0 SET c0=0Xffffffffe00fe1f5 WHERE CAST((((t0.c1))>((''))) AS NUMERIC); -- 0ms;
CREATE UNIQUE INDEX i87 ON t0(CAST(((('-1633119710'))<=((0xffffffffc69ec538))) AS NUMERIC) COLLATE BINARY,(((((c1, c2, c2))<=((c2, c0, c2)))) NOT BETWEEN (TRIM(DISTINCT c1)) AND (c0)) ASC,(PRINTF(c2) IN ()) DESC) WHERE ((DATETIME(c2, NULL, c1))<=(((((c0)OR(c0)))AND(c0)))); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE t0 SET c2=x'c7eb' WHERE (((((- (t0.c0)))AND((t0.c1 IN ()))))OR((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))); -- 0ms;
PRAGMA cache_spill; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((((t0.c1)) NOT BETWEEN ((0xffffffff97407ece)) AND (((((t0.c1, t0.c2, 'StghY '))<>((t0.c1, t0.c1, t0.c1))))))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((t0.c1)) NOT BETWEEN ((0xffffffff97407ece)) AND (((((t0.c1, t0.c2, 'StghY '))!=((t0.c1, t0.c1, t0.c1))))))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((t0.c1)) NOT BETWEEN ((0Xffffffff97407ece)) AND (((((t0.c1, t0.c2, 'StghY '))!=((t0.c1, t0.c1, t0.c1))))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0 INDEXED BY i87, v0;
SELECT t0.c2, t0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY t0.c2, t0.c0, v0.c0;
SELECT ALL t0.c2, t0.c0, v0.c0 FROM v0, vt0, t0 WHERE (CASE vt0.c1  WHEN vt0.c0 THEN '-1580649145' END COLLATE RTRIM) GROUP BY t0.c2, t0.c0, v0.c0 UNION SELECT ALL t0.c2, t0.c0, v0.c0 FROM v0, vt0, t0 WHERE ((NOT (CASE vt0.c1  WHEN vt0.c0 THEN '-1580649145' END COLLATE RTRIM))) GROUP BY t0.c2, t0.c0, v0.c0 UNION SELECT ALL t0.c2, t0.c0, v0.c0 FROM v0, vt0, t0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN '-1580649145' END COLLATE RTRIM) ISNULL)) GROUP BY t0.c2, t0.c0, v0.c0;
SELECT t0.c2, t0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY t0.c2, t0.c0, v0.c0;
SELECT ALL vt0.c0 FROM t0, v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, v0, vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(MAX(TOTAL(MIN(t0.c2)))) UNION ALL SELECT vt0.c0 FROM t0, v0, vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(MAX(TOTAL(MIN(t0.c2)))))) UNION ALL SELECT vt0.c0 FROM t0, v0, vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(MAX(TOTAL(MIN(t0.c2))))) ISNULL);
SELECT v0.c0 FROM vt0, v0, t0;
SELECT ALL v0.c0 FROM vt0, v0, t0 WHERE (CAST(CAST(v0.c0 AS INTEGER) AS TEXT)) UNION ALL SELECT ALL v0.c0 FROM vt0, v0, t0 WHERE ((NOT (CAST(CAST(v0.c0 AS INTEGER) AS TEXT)))) UNION ALL SELECT v0.c0 FROM vt0, v0, t0 WHERE (((CAST(CAST(v0.c0 AS INTEGER) AS TEXT)) ISNULL));
SELECT v0.c0 FROM vt0, v0, t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 END)/(vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c1 END)/(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c1 END)/(vt0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0)>=(v0.c0)) IN ())) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)>=(v0.c0)) IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0)>=(v0.c0)) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL t0.c0, v0.c0, t0.c1, vt0.c0 FROM vt0, t0, v0;
SELECT ALL t0.c0, v0.c0, t0.c1, vt0.c0 FROM vt0, t0, v0 WHERE (CASE WHEN CAST(vt0.c0 AS REAL) THEN vt0.c1 COLLATE RTRIM WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN t0.c1 THEN x'cdd0' WHEN t0.c0 THEN t0.c0 END THEN ((((((((0.9310506441666577)OR(v0.c0)))OR(vt0.c0)))OR(t0.c1)))OR(t0.c1)) WHEN ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c1)) THEN ((((v0.c0)AND(vt0.c1)))OR(t0.c2)) WHEN ((0.5947289273065262) NOTNULL) THEN vt0.c1 WHEN (vt0.c1 IN (vt0.c0)) THEN CAST(t0.c2 AS REAL) END) UNION ALL SELECT ALL t0.c0, v0.c0, t0.c1, vt0.c0 FROM vt0, t0, v0 WHERE ((NOT (CASE WHEN CAST(vt0.c0 AS REAL) THEN vt0.c1 COLLATE RTRIM WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN t0.c1 THEN x'cdd0' WHEN t0.c0 THEN t0.c0 END THEN ((((((((0.9310506441666577)OR(v0.c0)))OR(vt0.c0)))OR(t0.c1)))OR(t0.c1)) WHEN ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c1)) THEN ((((v0.c0)AND(vt0.c1)))OR(t0.c2)) WHEN ((0.5947289273065262) NOTNULL) THEN vt0.c1 WHEN (vt0.c1 IN (vt0.c0)) THEN CAST(t0.c2 AS REAL) END))) UNION ALL SELECT t0.c0, v0.c0, t0.c1, vt0.c0 FROM vt0, t0, v0 WHERE (((CASE WHEN CAST(vt0.c0 AS REAL) THEN vt0.c1 COLLATE RTRIM WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN t0.c1 THEN x'cdd0' WHEN t0.c0 THEN t0.c0 END THEN ((((((((0.9310506441666577)OR(v0.c0)))OR(vt0.c0)))OR(t0.c1)))OR(t0.c1)) WHEN ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c1)) THEN ((((v0.c0)AND(vt0.c1)))OR(t0.c2)) WHEN ((0.5947289273065262) NOTNULL) THEN vt0.c1 WHEN (vt0.c1 IN (vt0.c0)) THEN CAST(t0.c2 AS REAL) END) ISNULL));
SELECT ALL t0.c0, v0.c0, t0.c1, vt0.c0 FROM vt0, t0, v0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (vt0.c1 COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((NOT (vt0.c1 COLLATE RTRIM))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((((NOT (vt0.c1 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c1 FROM t0, v0, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM t0, v0, vt0 WHERE (t0.c0) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM t0, v0, vt0 WHERE ((NOT (t0.c0))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM t0, v0, vt0 WHERE (((t0.c0) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM t0, v0, vt0 GROUP BY vt0.c1;
SELECT vt0.c1, t0.c0, t0.c2 FROM vt0, t0 GROUP BY vt0.c1, t0.c0, t0.c2;
SELECT ALL vt0.c1, t0.c0, t0.c2 FROM vt0, t0 GROUP BY vt0.c1, t0.c0, t0.c2 HAVING (+ (t0.c0)) UNION ALL SELECT vt0.c1, t0.c0, t0.c2 FROM vt0, t0 GROUP BY vt0.c1, t0.c0, t0.c2 HAVING (NOT ((+ (t0.c0)))) UNION ALL SELECT vt0.c1, t0.c0, t0.c2 FROM vt0, t0 GROUP BY vt0.c1, t0.c0, t0.c2 HAVING (((+ (t0.c0))) ISNULL);
SELECT vt0.c1, t0.c0, t0.c2 FROM vt0, t0 GROUP BY vt0.c1, t0.c0, t0.c2;
SELECT ALL vt0.c1, t0.c0, t0.c2 FROM vt0, t0 GROUP BY vt0.c1, t0.c0, t0.c2 HAVING (+ (t0.c0)) UNION ALL SELECT vt0.c1, t0.c0, t0.c2 FROM vt0, t0 GROUP BY vt0.c1, t0.c0, t0.c2 HAVING (NOT ((+ (t0.c0)))) UNION ALL SELECT vt0.c1, t0.c0, t0.c2 FROM vt0, t0 GROUP BY vt0.c1, t0.c0, t0.c2 HAVING (((+ (t0.c0))) ISNULL);
SELECT vt0.c1, t0.c0, t0.c2 FROM vt0, t0 GROUP BY vt0.c1, t0.c0, t0.c2;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT t0.c2, t0.c1, vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0;
SELECT DISTINCT t0.c2, t0.c1, vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 WHERE (t0.c0) UNION SELECT DISTINCT t0.c2, t0.c1, vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c2, t0.c1, vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c2, t0.c1, vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0;
SELECT t0.c0, t0.c2, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, t0.c2, vt0.c1, vt0.c0;
SELECT t0.c0, t0.c2, vt0.c1, vt0.c0 FROM vt0, t0 WHERE (TRIM(DISTINCT LENGTH(vt0.c1))) GROUP BY t0.c0, t0.c2, vt0.c1, vt0.c0 UNION SELECT ALL t0.c0, t0.c2, vt0.c1, vt0.c0 FROM vt0, t0 WHERE ((NOT (TRIM(DISTINCT LENGTH(vt0.c1))))) GROUP BY t0.c0, t0.c2, vt0.c1, vt0.c0 UNION SELECT t0.c0, t0.c2, vt0.c1, vt0.c0 FROM vt0, t0 WHERE (((TRIM(DISTINCT LENGTH(vt0.c1))) ISNULL)) GROUP BY t0.c0, t0.c2, vt0.c1, vt0.c0;
SELECT t0.c0, t0.c2, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, t0.c2, vt0.c1, vt0.c0;
SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING (((TOTAL(COUNT(vt0.c0)))-(vt0.c1)) IN ()) UNION ALL SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING (NOT ((((TOTAL(COUNT(vt0.c0)))-(vt0.c1)) IN ()))) UNION ALL SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING (((((TOTAL(COUNT(vt0.c0)))-(vt0.c1)) IN ())) ISNULL);
SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING (((TOTAL(COUNT(vt0.c0)))-(vt0.c1)) IN ()) UNION ALL SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING (NOT ((((TOTAL(COUNT(vt0.c0)))-(vt0.c1)) IN ()))) UNION ALL SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING (((((TOTAL(COUNT(vt0.c0)))-(vt0.c1)) IN ())) ISNULL);
SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT ALL SUM((((t0.c0, t0.c2 COLLATE BINARY, (NOT (vt0.c0))))!=((t0.c0, CAST(t0.c1 AS INTEGER), (~ (vt0.c1)))))) FROM vt0, t0;
SELECT ALL t0.c0, vt0.c0, t0.c2, vt0.c1, t0.c1 FROM t0, vt0;
SELECT t0.c0, vt0.c0, t0.c2, vt0.c1, t0.c1 FROM t0, vt0 WHERE (CAST((vt0.c1 IN ()) AS INTEGER)) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c2, vt0.c1, t0.c1 FROM t0, vt0 WHERE ((NOT (CAST((vt0.c1 IN ()) AS INTEGER)))) UNION ALL SELECT t0.c0, vt0.c0, t0.c2, vt0.c1, t0.c1 FROM t0, vt0 WHERE (((CAST((vt0.c1 IN ()) AS INTEGER)) ISNULL));
SELECT ALL t0.c0, vt0.c0, t0.c2, vt0.c1, t0.c1 FROM t0, vt0;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN v0 ON vt0.c1 RIGHT OUTER JOIN vt0 ON vt0.c0;
SELECT ALL t0.c0, t0.c1, t0.c2, v0.c0 FROM t0, v0 GROUP BY t0.c0, t0.c1, t0.c2, v0.c0;
SELECT ALL t0.c0, t0.c1, t0.c2, v0.c0 FROM t0, v0 WHERE ((((((t0.c2, t0.c0, t0.c1))<((t0.c2, t0.c0, t0.c1))))%((t0.c1 IN ())))) GROUP BY t0.c0, t0.c1, t0.c2, v0.c0 UNION SELECT t0.c0, t0.c1, t0.c2, v0.c0 FROM t0, v0 WHERE ((NOT ((((((t0.c2, t0.c0, t0.c1))<((t0.c2, t0.c0, t0.c1))))%((t0.c1 IN ())))))) GROUP BY t0.c0, t0.c1, t0.c2, v0.c0 UNION SELECT t0.c0, t0.c1, t0.c2, v0.c0 FROM t0, v0 WHERE ((((((((t0.c2, t0.c0, t0.c1))<((t0.c2, t0.c0, t0.c1))))%((t0.c1 IN ())))) ISNULL)) GROUP BY t0.c0, t0.c1, t0.c2, v0.c0;
SELECT ALL t0.c0, t0.c1, t0.c2, v0.c0 FROM t0, v0 GROUP BY t0.c0, t0.c1, t0.c2, v0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (LOWER(DISTINCT GROUP_CONCAT(AVG(t0.c2))))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 NOT INDEXED GROUP BY t0.c0, vt0.c0 HAVING (NOT ((NOT (LOWER(DISTINCT GROUP_CONCAT(AVG(t0.c2))))))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (((NOT (LOWER(DISTINCT GROUP_CONCAT(AVG(t0.c2)))))) ISNULL);
SELECT ALL t0.c1 FROM vt0, t0;
SELECT ALL t0.c1 FROM vt0, t0 WHERE (LOWER(CASE WHEN vt0.c0 THEN vt0.c1 END)) UNION ALL SELECT ALL t0.c1 FROM vt0, t0 WHERE ((NOT (LOWER(CASE WHEN vt0.c0 THEN vt0.c1 END)))) UNION ALL SELECT ALL t0.c1 FROM vt0, t0 WHERE (((LOWER(CASE WHEN vt0.c0 THEN vt0.c1 END)) ISNULL));
SELECT ALL t0.c1 FROM vt0, t0;
SELECT DISTINCT t0.c0 FROM t0 CROSS JOIN v0 ON (CAST(t0.c1 AS NUMERIC) IN (((v0.c0) NOT BETWEEN (t0.c2) AND (v0.c0)), 0.4361831593174893 COLLATE RTRIM));
SELECT DISTINCT t0.c0 FROM t0 CROSS JOIN v0 ON (CAST(t0.c1 AS NUMERIC) IN (((v0.c0) NOT BETWEEN (t0.c2) AND (v0.c0)), 0.4361831593174893 COLLATE RTRIM)) WHERE (0.620755785164364) UNION SELECT DISTINCT t0.c0 FROM t0 CROSS JOIN v0 ON (CAST(t0.c1 AS NUMERIC) IN (((v0.c0) NOT BETWEEN (t0.c2) AND (v0.c0)), 0.4361831593174893 COLLATE RTRIM)) WHERE ((NOT (0.620755785164364))) UNION SELECT DISTINCT t0.c0 FROM t0 CROSS JOIN v0 ON (CAST(t0.c1 AS NUMERIC) IN (((v0.c0) NOT BETWEEN (t0.c2) AND (v0.c0)), 0.4361831593174893 COLLATE RTRIM)) WHERE (((0.620755785164364) ISNULL));
SELECT DISTINCT t0.c0 FROM t0 CROSS JOIN v0 ON (CAST(t0.c1 AS NUMERIC) IN (((v0.c0) NOT BETWEEN (t0.c2) AND (v0.c0)), 0.4361831593174893 COLLATE RTRIM));
SELECT vt0.c0, t0.c1 FROM v0 INNER JOIN vt0 ON (((((t0.c0, vt0.c0, t0.c1))=((t0.c0, vt0.c0, v0.c0)))) BETWEEN (CAST(t0.c0 AS BLOB)) AND ((~ (t0.c2)))) CROSS JOIN t0 ON (NOT (CASE v0.c0  WHEN 0x49d91eed THEN vt0.c1 ELSE vt0.c1 END)) GROUP BY vt0.c0, t0.c1;
SELECT ALL vt0.c0, t0.c1 FROM v0 INNER JOIN vt0 ON (((((t0.c0, vt0.c0, t0.c1))=((t0.c0, vt0.c0, v0.c0)))) BETWEEN (CAST(t0.c0 AS BLOB)) AND ((~ (t0.c2)))) CROSS JOIN t0 ON (NOT (CASE v0.c0  WHEN 0x49d91eed THEN vt0.c1 ELSE vt0.c1 END)) WHERE (CAST(CASE t0.c0  WHEN t0.c0 THEN v0.c0 WHEN t0.c2 THEN vt0.c1 WHEN v0.c0 THEN v0.c0 ELSE t0.c1 END AS REAL)) GROUP BY vt0.c0, t0.c1 UNION SELECT ALL vt0.c0, t0.c1 FROM v0 INNER JOIN vt0 ON (((((t0.c0, vt0.c0, t0.c1))=((t0.c0, vt0.c0, v0.c0)))) BETWEEN (CAST(t0.c0 AS BLOB)) AND ((~ (t0.c2)))) CROSS JOIN t0 ON (NOT (CASE v0.c0  WHEN 0x49d91eed THEN vt0.c1 ELSE vt0.c1 END)) WHERE ((NOT (CAST(CASE t0.c0  WHEN t0.c0 THEN v0.c0 WHEN t0.c2 THEN vt0.c1 WHEN v0.c0 THEN v0.c0 ELSE t0.c1 END AS REAL)))) GROUP BY vt0.c0, t0.c1 UNION SELECT ALL vt0.c0, t0.c1 FROM v0 INNER JOIN vt0 ON (((((t0.c0, vt0.c0, t0.c1))=((t0.c0, vt0.c0, v0.c0)))) BETWEEN (CAST(t0.c0 AS BLOB)) AND ((~ (t0.c2)))) CROSS JOIN t0 ON (NOT (CASE v0.c0  WHEN 0X49d91eed THEN vt0.c1 ELSE vt0.c1 END)) WHERE (((CAST(CASE t0.c0  WHEN t0.c0 THEN v0.c0 WHEN t0.c2 THEN vt0.c1 WHEN v0.c0 THEN v0.c0 ELSE t0.c1 END AS REAL)) ISNULL)) GROUP BY vt0.c0, t0.c1;
SELECT vt0.c0, t0.c1 FROM v0 INNER JOIN vt0 ON (((((t0.c0, vt0.c0, t0.c1))=((t0.c0, vt0.c0, v0.c0)))) BETWEEN (CAST(t0.c0 AS BLOB)) AND ((~ (t0.c2)))) CROSS JOIN t0 ON (NOT (CASE v0.c0  WHEN 0x49d91eed THEN vt0.c1 ELSE vt0.c1 END)) GROUP BY vt0.c0, t0.c1;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT v0.c0, t0.c2 FROM vt0 LEFT OUTER JOIN v0 ON (~ ((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c2))))) RIGHT OUTER JOIN t0 ON CAST((((t0.c1)) BETWEEN ((t0.c2)) AND ((vt0.c1))) AS BLOB);
SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM t0, vt0 WHERE (((~ (vt0.c1)) IN ())) UNION SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT (((~ (vt0.c1)) IN ())))) UNION SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM t0, vt0 WHERE (((((~ (vt0.c1)) IN ())) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM t0, vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) AS REAL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) AS REAL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) AS REAL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2 HAVING SUM(((MIN(t0.c0)) NOTNULL)) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2 HAVING (NOT (SUM(((MIN(t0.c0)) NOTNULL)))) UNION ALL SELECT t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2 HAVING ((SUM(((MIN(t0.c0)) NOTNULL))) ISNULL);
SELECT ALL t0.c1, t0.c2 FROM t0;
SELECT ALL t0.c1, t0.c2 FROM t0 WHERE (((((((t0.c2)OR(0xffffffff9fb79dad)))OR(t0.c0)))/(((((((((t0.c0)OR(t0.c1)))OR(t0.c1)))AND(t0.c0)))OR(t0.c1))))) UNION ALL SELECT t0.c1, t0.c2 FROM t0 WHERE ((NOT (((((((t0.c2)OR(0Xffffffff9fb79dad)))OR(t0.c0)))/(((((((((t0.c0)OR(t0.c1)))OR(t0.c1)))AND(t0.c0)))OR(t0.c1))))))) UNION ALL SELECT t0.c1, t0.c2 FROM t0 WHERE (((((((((t0.c2)OR(0Xffffffff9fb79dad)))OR(t0.c0)))/(((((((((t0.c0)OR(t0.c1)))OR(t0.c1)))AND(t0.c0)))OR(t0.c1))))) ISNULL));
SELECT ALL t0.c1, t0.c2 FROM t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c1) IS TRUE) IN ())) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c1) IS TRUE) IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1) IS TRUE) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, t0.c1 FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((t0.c1)) AND ((vt0.c1))))) AND ((((vt0.c1) IS FALSE)))) GROUP BY vt0.c0, t0.c1;
SELECT vt0.c0, t0.c1 FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((t0.c1)) AND ((vt0.c1))))) AND ((((vt0.c1) IS FALSE)))) WHERE (((t0.c0) BETWEEN (((t0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1))) AND ('-1615356499'))) GROUP BY vt0.c0, t0.c1 UNION SELECT vt0.c0, t0.c1 FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((t0.c1)) AND ((vt0.c1))))) AND ((((vt0.c1) IS FALSE)))) WHERE ((NOT (((t0.c0) BETWEEN (((t0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1))) AND ('-1615356499'))))) GROUP BY vt0.c0, t0.c1 UNION SELECT vt0.c0, t0.c1 FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((t0.c1)) AND ((vt0.c1))))) AND ((((vt0.c1) IS FALSE)))) WHERE (((((t0.c0) BETWEEN (((t0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1))) AND ('-1615356499'))) ISNULL)) GROUP BY vt0.c0, t0.c1;
SELECT ALL vt0.c0, t0.c1 FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((t0.c1)) AND ((vt0.c1))))) AND ((((vt0.c1) IS FALSE)))) GROUP BY vt0.c0, t0.c1;
SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, v0.c0, vt0.c1;
SELECT vt0.c0, v0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, v0.c0, vt0.c1 HAVING CAST(NULL AS TEXT) UNION ALL SELECT vt0.c0, v0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, v0.c0, vt0.c1 HAVING (NOT (CAST(NULL AS TEXT))) UNION ALL SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, v0.c0, vt0.c1 HAVING ((CAST(NULL AS TEXT)) ISNULL);
SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, v0.c0, vt0.c1;
SELECT vt0.c0, v0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, v0.c0, vt0.c1 HAVING CAST(NULL AS TEXT) UNION ALL SELECT vt0.c0, v0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, v0.c0, vt0.c1 HAVING (NOT (CAST(NULL AS TEXT))) UNION ALL SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, v0.c0, vt0.c1 HAVING ((CAST(NULL AS TEXT)) ISNULL);
SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, v0.c0, vt0.c1;
SELECT vt0.c1 FROM v0, vt0;
SELECT ALL vt0.c1 FROM v0, vt0 WHERE ((~ (((((v0.c0)AND(vt0.c0)))AND(0xffffffff97407ece))))) UNION ALL SELECT vt0.c1 FROM v0, vt0 NOT INDEXED WHERE ((NOT ((~ (((((v0.c0)AND(vt0.c0)))AND(0xffffffff97407ece))))))) UNION ALL SELECT ALL vt0.c1 FROM v0, vt0 WHERE ((((~ (((((v0.c0)AND(vt0.c0)))AND(0Xffffffff97407ece))))) ISNULL));
SELECT vt0.c1 FROM v0, vt0;
SELECT DISTINCT t0.c2, t0.c1, v0.c0 FROM t0, v0;
SELECT DISTINCT t0.c2, t0.c1, v0.c0 FROM t0, v0 WHERE (((CAST(v0.c0 AS INTEGER))&(CAST(t0.c0 AS INTEGER)))) UNION SELECT DISTINCT t0.c2, t0.c1, v0.c0 FROM t0, v0 WHERE ((NOT (((CAST(v0.c0 AS INTEGER))&(CAST(t0.c0 AS INTEGER)))))) UNION SELECT DISTINCT t0.c2, t0.c1, v0.c0 FROM t0, v0 WHERE (((((CAST(v0.c0 AS INTEGER))&(CAST(t0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT t0.c2, t0.c1, v0.c0 FROM t0, v0;
SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t0, v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t0, v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t0, v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((SUM(SUM(v0.c0)), v0.c0, v0.c0)) NOT BETWEEN ((COUNT(v0.c0), COUNT(*), AVG(COUNT(*)))) AND ((((v0.c0)%(AVG(GROUP_CONCAT(v0.c0)))), (v0.c0 IN ()), ((MIN(v0.c0)) NOT BETWEEN (v0.c0) AND (MIN(MAX(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((SUM(SUM(v0.c0)), v0.c0, v0.c0)) NOT BETWEEN ((COUNT(v0.c0), COUNT(*), AVG(COUNT(*)))) AND ((((v0.c0)%(AVG(GROUP_CONCAT(v0.c0)))), (v0.c0 IN ()), ((MIN(v0.c0)) NOT BETWEEN (v0.c0) AND (MIN(MAX(v0.c0))))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((SUM(SUM(v0.c0)), v0.c0, v0.c0)) NOT BETWEEN ((COUNT(v0.c0), COUNT(*), AVG(COUNT(*)))) AND ((((v0.c0)%(AVG(GROUP_CONCAT(v0.c0)))), (v0.c0 IN ()), ((MIN(v0.c0)) NOT BETWEEN (v0.c0) AND (MIN(MAX(v0.c0)))))))) ISNULL);
SELECT ALL t0.c1, v0.c0 FROM vt0, t0, v0;
SELECT t0.c1, v0.c0 FROM vt0, t0, v0 WHERE (((CASE t0.c2  WHEN vt0.c1 THEN t0.c1 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN '' END) IS FALSE)) UNION ALL SELECT t0.c1, v0.c0 FROM vt0, t0, v0 WHERE ((NOT (((CASE t0.c2  WHEN vt0.c1 THEN t0.c1 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN '' END) IS FALSE)))) UNION ALL SELECT ALL t0.c1, v0.c0 FROM vt0, t0, v0 WHERE (((((CASE t0.c2  WHEN vt0.c1 THEN t0.c1 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN '' END) IS FALSE)) ISNULL));
SELECT ALL t0.c1, v0.c0 FROM vt0, t0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (v0.c0 COLLATE RTRIM) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0 COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (- (((vt0.c1) NOT BETWEEN ('tc') AND (vt0.c1)))) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (- (((vt0.c1) NOT BETWEEN ('tc') AND (vt0.c1)))) GROUP BY v0.c0 HAVING 0.15437386363723804 UNION ALL SELECT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (- (((vt0.c1) NOT BETWEEN ('tc') AND (vt0.c1)))) GROUP BY v0.c0 HAVING (NOT (0.15437386363723804)) UNION ALL SELECT ALL v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (- (((vt0.c1) NOT BETWEEN ('tc') AND (vt0.c1)))) GROUP BY v0.c0 HAVING ((0.15437386363723804) ISNULL);
SELECT ALL v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (- (((vt0.c1) NOT BETWEEN ('tc') AND (vt0.c1)))) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (- (((vt0.c1) NOT BETWEEN ('tc') AND (vt0.c1)))) GROUP BY v0.c0 HAVING 0.15437386363723804 UNION ALL SELECT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (- (((vt0.c1) NOT BETWEEN ('tc') AND (vt0.c1)))) GROUP BY v0.c0 HAVING (NOT (0.15437386363723804)) UNION ALL SELECT ALL v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (- (((vt0.c1) NOT BETWEEN ('tc') AND (vt0.c1)))) GROUP BY v0.c0 HAVING ((0.15437386363723804) ISNULL);
SELECT ALL v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (- (((vt0.c1) NOT BETWEEN ('tc') AND (vt0.c1)))) GROUP BY v0.c0;
SELECT * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (((((-1633119710)*(vt0.c0))) BETWEEN (((vt0.c1)>=(v0.c0))) AND (((((vt0.c1)OR(NULL)))OR(0.7570323635740835))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT (((((-1633119710)*(vt0.c0))) BETWEEN (((vt0.c1)>=(v0.c0))) AND (((((vt0.c1)OR(NULL)))OR(0.7570323635740835))))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((((((-1633119710)*(vt0.c0))) BETWEEN (((vt0.c1)>=(v0.c0))) AND (((((vt0.c1)OR(NULL)))OR(0.7570323635740835))))) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE (TRIM(DISTINCT LIKELIHOOD(DISTINCT vt0.c0, 0.332750246042801))) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE ((NOT (TRIM(DISTINCT LIKELIHOOD(DISTINCT vt0.c0, 0.332750246042801))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE (((TRIM(DISTINCT LIKELIHOOD(DISTINCT vt0.c0, 0.332750246042801))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))%((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, '')))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))%((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, '')))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))%((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, '')))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING ((((GROUP_CONCAT(v0.c0))AND(((t0.c0)=(t0.c1)))))AND(AVG(t0.c1))) UNION ALL SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING (NOT (((((GROUP_CONCAT(v0.c0))AND(((t0.c0)=(t0.c1)))))AND(AVG(t0.c1))))) UNION ALL SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING ((((((GROUP_CONCAT(v0.c0))AND(((t0.c0)==(t0.c1)))))AND(AVG(t0.c1)))) ISNULL);
SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING ((((GROUP_CONCAT(v0.c0))AND(((t0.c0)=(t0.c1)))))AND(AVG(t0.c1))) UNION ALL SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING (NOT (((((GROUP_CONCAT(v0.c0))AND(((t0.c0)=(t0.c1)))))AND(AVG(t0.c1))))) UNION ALL SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING ((((((GROUP_CONCAT(v0.c0))AND(((t0.c0)==(t0.c1)))))AND(AVG(t0.c1)))) ISNULL);
SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((CAST(v0.c0 AS NUMERIC))IS NOT(((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(x'')))OR(v0.c0))));
SELECT ALL vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((CAST(v0.c0 AS NUMERIC))IS NOT(((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(x'')))OR(v0.c0)))) WHERE (1.270335357E9) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((CAST(v0.c0 AS NUMERIC))IS NOT(((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(x'')))OR(v0.c0)))) WHERE ((NOT (1.270335357E9))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((CAST(v0.c0 AS NUMERIC))IS NOT(((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(x'')))OR(v0.c0)))) WHERE (((1.270335357E9) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((CAST(v0.c0 AS NUMERIC))IS NOT(((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(x'')))OR(v0.c0))));
SELECT DISTINCT t0.c0, t0.c1 FROM t0;
SELECT DISTINCT t0.c0, t0.c1 FROM t0 WHERE (((((t0.c2) NOT NULL))AND((((t0.c2, t0.c0, t0.c1)) NOT BETWEEN ((t0.c2, t0.c2, t0.c1)) AND ((t0.c2, NULL, t0.c0)))))) UNION SELECT DISTINCT t0.c0, t0.c1 FROM t0 WHERE ((NOT (((((t0.c2) NOT NULL))AND((((t0.c2, t0.c0, t0.c1)) NOT BETWEEN ((t0.c2, t0.c2, t0.c1)) AND ((t0.c2, NULL, t0.c0)))))))) UNION SELECT DISTINCT t0.c0, t0.c1 FROM t0 WHERE (((((((t0.c2) NOT NULL))AND((((t0.c2, t0.c0, t0.c1)) NOT BETWEEN ((t0.c2, t0.c2, t0.c1)) AND ((t0.c2, NULL, t0.c0)))))) ISNULL));
SELECT DISTINCT t0.c0, t0.c1 FROM t0;
SELECT t0.c0, t0.c1, t0.c2, v0.c0 FROM t0, v0 GROUP BY t0.c0, t0.c1, t0.c2, v0.c0;
SELECT t0.c0, t0.c1, t0.c2, v0.c0 FROM t0, v0 WHERE (CAST(QUOTE(t0.c1) AS REAL)) GROUP BY t0.c0, t0.c1, t0.c2, v0.c0 UNION SELECT t0.c0, t0.c1, t0.c2, v0.c0 FROM t0, v0 WHERE ((NOT (CAST(QUOTE(t0.c1) AS REAL)))) GROUP BY t0.c0, t0.c1, t0.c2, v0.c0 UNION SELECT ALL t0.c0, t0.c1, t0.c2, v0.c0 FROM t0, v0 WHERE (((CAST(QUOTE(t0.c1) AS REAL)) ISNULL)) GROUP BY t0.c0, t0.c1, t0.c2, v0.c0;
SELECT t0.c0, t0.c1, t0.c2, v0.c0 FROM t0, v0 GROUP BY t0.c0, t0.c1, t0.c2, v0.c0;
SELECT ALL t0.c2, t0.c0 FROM vt0, t0, v0 GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM vt0, t0, v0 GROUP BY t0.c2, t0.c0 HAVING COUNT(TOTAL(COUNT(*))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM vt0, t0, v0 GROUP BY t0.c2, t0.c0 HAVING (NOT (COUNT(TOTAL(COUNT(*))))) UNION ALL SELECT t0.c2, t0.c0 FROM vt0, t0, v0 GROUP BY t0.c2, t0.c0 HAVING ((COUNT(TOTAL(COUNT(*)))) ISNULL);
SELECT * FROM v0, t0 LEFT OUTER JOIN vt0 ON CAST(t0.c0 AS NUMERIC);
SELECT ALL * FROM v0, t0 LEFT OUTER JOIN vt0 ON CAST(t0.c0 AS NUMERIC) WHERE (((- (vt0.c1)) IN ())) UNION ALL SELECT * FROM v0, t0 LEFT OUTER JOIN vt0 ON CAST(t0.c0 AS NUMERIC) WHERE ((NOT (((- (vt0.c1)) IN ())))) UNION ALL SELECT ALL * FROM v0, t0 LEFT OUTER JOIN vt0 ON CAST(t0.c0 AS NUMERIC) WHERE (((((- (vt0.c1)) IN ())) ISNULL));
SELECT * FROM v0, t0 LEFT OUTER JOIN vt0 ON CAST(t0.c0 AS NUMERIC);
SELECT DISTINCT v0.c0 FROM vt0 INNER JOIN v0 ON ((CHAR(vt0.c1, 0.32102038912369135, x'')) NOTNULL) INNER JOIN t0 ON ((((CAST(v0.c0 AS REAL))AND((((vt0.c1))<((vt0.c0))))))OR(CASE WHEN t0.c0 THEN v0.c0 END));
SELECT DISTINCT v0.c0 FROM vt0 INNER JOIN v0 ON ((CHAR(vt0.c1, 0.32102038912369135, x'')) NOTNULL) INNER JOIN t0 ON ((((CAST(v0.c0 AS REAL))AND((((vt0.c1))<((vt0.c0))))))OR(CASE WHEN t0.c0 THEN v0.c0 END)) WHERE (vt0.c1) UNION SELECT DISTINCT v0.c0 FROM vt0 INNER JOIN v0 ON ((CHAR(vt0.c1, 0.32102038912369135, x'')) NOTNULL) INNER JOIN t0 ON ((((CAST(v0.c0 AS REAL))AND((((vt0.c1))<((vt0.c0))))))OR(CASE WHEN t0.c0 THEN v0.c0 END)) WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT v0.c0 FROM vt0 INNER JOIN v0 ON ((CHAR(vt0.c1, 0.32102038912369135, x'')) NOTNULL) INNER JOIN t0 ON ((((CAST(v0.c0 AS REAL))AND((((vt0.c1))<((vt0.c0))))))OR(CASE WHEN t0.c0 THEN v0.c0 END)) WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0 INNER JOIN v0 ON ((CHAR(vt0.c1, 0.32102038912369135, x'')) NOTNULL) INNER JOIN t0 ON ((((CAST(v0.c0 AS REAL))AND((((vt0.c1))<((vt0.c0))))))OR(CASE WHEN t0.c0 THEN v0.c0 END));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((NOT (0.3056978631454532))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((NOT (0.3056978631454532))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((NOT (0.3056978631454532))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING ((((GROUP_CONCAT(t0.c2)) ISNULL))<=(NULL)) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (NOT (((((GROUP_CONCAT(t0.c2)) ISNULL))<=(NULL)))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING ((((((GROUP_CONCAT(t0.c2)) ISNULL))<=(NULL))) ISNULL);
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING ((((GROUP_CONCAT(t0.c2)) ISNULL))<=(NULL)) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (NOT (((((GROUP_CONCAT(t0.c2)) ISNULL))<=(NULL)))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING ((((((GROUP_CONCAT(t0.c2)) ISNULL))<=(NULL))) ISNULL);
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT vt0.c0, t0.c1 FROM t0, v0, vt0;
SELECT vt0.c0, t0.c1 FROM t0, v0, vt0 WHERE (json_extract(CAST(v0.c0 AS NUMERIC), ((((t0.c2)AND(vt0.c1)))OR(vt0.c1)))) UNION ALL SELECT ALL vt0.c0, t0.c1 FROM t0, v0, vt0 WHERE ((NOT (json_extract(CAST(v0.c0 AS NUMERIC), ((((t0.c2)AND(vt0.c1)))OR(vt0.c1)))))) UNION ALL SELECT vt0.c0, t0.c1 FROM t0, v0, vt0 WHERE (((json_extract(CAST(v0.c0 AS NUMERIC), ((((t0.c2)AND(vt0.c1)))OR(vt0.c1)))) ISNULL));
SELECT vt0.c0, t0.c1 FROM t0, v0, vt0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (CAST(((v0.c0)>>(t0.c0)) AS BLOB)) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (CAST(((v0.c0)>>(t0.c0)) AS BLOB)))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((CAST(((v0.c0)>>(t0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT t0.c0, v0.c0, t0.c2, t0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c0, t0.c2, t0.c1;
SELECT ALL t0.c0, v0.c0, t0.c2, t0.c1 FROM t0, v0 WHERE ((((+ (t0.c2)))!=(json(v0.c0)))) GROUP BY t0.c0, v0.c0, t0.c2, t0.c1 UNION SELECT ALL t0.c0, v0.c0, t0.c2, t0.c1 FROM t0, v0 NOT INDEXED WHERE ((NOT ((((+ (t0.c2)))!=(json(v0.c0)))))) GROUP BY t0.c0, v0.c0, t0.c2, t0.c1 UNION SELECT ALL t0.c0, v0.c0, t0.c2, t0.c1 FROM t0, v0 WHERE ((((((+ (t0.c2)))<>(json(v0.c0)))) ISNULL)) GROUP BY t0.c0, v0.c0, t0.c2, t0.c1;
SELECT t0.c0, v0.c0, t0.c2, t0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c0, t0.c2, t0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING vt0.c1 UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (vt0.c1)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((vt0.c1) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING vt0.c1 UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (vt0.c1)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((vt0.c1) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((0.46270811836847947 COLLATE RTRIM) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((v0.c0)>(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 NOT INDEXED WHERE ((NOT (((0.46270811836847947 COLLATE RTRIM) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((v0.c0)>(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((0.46270811836847947 COLLATE RTRIM) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((v0.c0)>(v0.c0))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt0 ON (- (highlight(t0.c0, vt0.c1, t0.c1, vt0.c0)));
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0, t0 WHERE (((((NULL)OR((t0.c2 IN ()))))OR((((t0.c0))<=((t0.c1)))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0, t0 WHERE ((NOT (((((NULL)OR((t0.c2 IN ()))))OR((((t0.c0))<=((t0.c1)))))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0, t0 WHERE (((((((NULL)OR((t0.c2 IN ()))))OR((((t0.c0))<=((t0.c1)))))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY vt0.c0, v0.c0;
SELECT ALL t0.c2, t0.c0 FROM v0, t0, vt0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM v0, t0, vt0 GROUP BY t0.c2, t0.c0 HAVING AVG(MAX(vt0.c0)) UNION ALL SELECT t0.c2, t0.c0 FROM v0, t0, vt0 GROUP BY t0.c2, t0.c0 HAVING (NOT (AVG(MAX(vt0.c0)))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM v0, t0, vt0 GROUP BY t0.c2, t0.c0 HAVING ((AVG(MAX(vt0.c0))) ISNULL);
SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM v0, vt0;
SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM v0, vt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE) UNION ALL SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE))) UNION ALL SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM v0, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE) ISNULL));
SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0;
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE (LAST_INSERT_ROWID()) UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((NOT (LAST_INSERT_ROWID()))) UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE (((LAST_INSERT_ROWID()) ISNULL));
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0;
SELECT ALL t0.c0, t0.c1 FROM t0 RIGHT OUTER JOIN v0 ON 'MT(WGl.' GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 RIGHT OUTER JOIN v0 ON 'MT(WGl.' WHERE (v0.c0) GROUP BY t0.c0, t0.c1 UNION SELECT ALL t0.c0, t0.c1 FROM t0 RIGHT OUTER JOIN v0 ON 'MT(WGl.' WHERE ((NOT (v0.c0))) GROUP BY t0.c0, t0.c1 UNION SELECT t0.c0, t0.c1 FROM t0 RIGHT OUTER JOIN v0 ON 'MT(WGl.' WHERE (((v0.c0) ISNULL)) GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM t0 RIGHT OUTER JOIN v0 ON 'MT(WGl.' GROUP BY t0.c0, t0.c1;
SELECT t0.c2, t0.c1, vt0.c0, t0.c0 FROM v0, vt0 CROSS JOIN t0 ON t0.c0 GROUP BY t0.c2, t0.c1, vt0.c0, t0.c0;
SELECT ALL t0.c2, t0.c1, vt0.c0, t0.c0 FROM v0, vt0 CROSS JOIN t0 ON t0.c0 GROUP BY t0.c2, t0.c1, vt0.c0, t0.c0 HAVING MAX(HEX(v0.c0)) UNION ALL SELECT t0.c2, t0.c1, vt0.c0, t0.c0 FROM v0, vt0 CROSS JOIN t0 ON t0.c0 GROUP BY t0.c2, t0.c1, vt0.c0, t0.c0 HAVING (NOT (MAX(HEX(v0.c0)))) UNION ALL SELECT ALL t0.c2, t0.c1, vt0.c0, t0.c0 FROM v0, vt0 CROSS JOIN t0 ON t0.c0 GROUP BY t0.c2, t0.c1, vt0.c0, t0.c0 HAVING ((MAX(HEX(v0.c0))) ISNULL);
SELECT t0.c2, t0.c1, vt0.c0, t0.c0 FROM v0, vt0 CROSS JOIN t0 ON t0.c0 GROUP BY t0.c2, t0.c1, vt0.c0, t0.c0;
SELECT ALL t0.c2, t0.c1, vt0.c0, t0.c0 FROM v0, vt0 CROSS JOIN t0 ON t0.c0 GROUP BY t0.c2, t0.c1, vt0.c0, t0.c0 HAVING MAX(HEX(v0.c0)) UNION ALL SELECT t0.c2, t0.c1, vt0.c0, t0.c0 FROM v0, vt0 CROSS JOIN t0 ON t0.c0 GROUP BY t0.c2, t0.c1, vt0.c0, t0.c0 HAVING (NOT (MAX(HEX(v0.c0)))) UNION ALL SELECT ALL t0.c2, t0.c1, vt0.c0, t0.c0 FROM v0, vt0 CROSS JOIN t0 ON t0.c0 GROUP BY t0.c2, t0.c1, vt0.c0, t0.c0 HAVING ((MAX(HEX(v0.c0))) ISNULL);
SELECT t0.c2, t0.c1, vt0.c0, t0.c0 FROM v0, vt0 CROSS JOIN t0 ON t0.c0 GROUP BY t0.c2, t0.c1, vt0.c0, t0.c0;
SELECT v0.c0, vt0.c1 FROM vt0, v0;
SELECT ALL v0.c0, vt0.c1 FROM vt0, v0 WHERE (NULLIF(DISTINCT ((((vt0.c0)OR(vt0.c1)))AND(v0.c0)), (NOT (vt0.c1)))) UNION ALL SELECT ALL v0.c0, vt0.c1 FROM vt0, v0 WHERE ((NOT (NULLIF(DISTINCT ((((vt0.c0)OR(vt0.c1)))AND(v0.c0)), (NOT (vt0.c1)))))) UNION ALL SELECT v0.c0, vt0.c1 FROM vt0, v0 WHERE (((NULLIF(DISTINCT ((((vt0.c0)OR(vt0.c1)))AND(v0.c0)), (NOT (vt0.c1)))) ISNULL));
SELECT v0.c0, vt0.c1 FROM vt0, v0;
SELECT DISTINCT * FROM vt0, t0, v0;
SELECT DISTINCT * FROM vt0, t0, v0 WHERE ((NOT (((t0.c2) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0, t0, v0 WHERE ((NOT ((NOT (((t0.c2) IS TRUE)))))) UNION SELECT DISTINCT * FROM vt0, t0, v0 WHERE ((((NOT (((t0.c2) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM vt0, t0, v0;
SELECT ALL v0.c0, t0.c1 FROM v0 INNER JOIN t0 ON CAST(t0.c0 COLLATE RTRIM AS TEXT) GROUP BY v0.c0, t0.c1;
SELECT v0.c0, t0.c1 FROM v0 INNER JOIN t0 ON CAST(t0.c0 COLLATE RTRIM AS TEXT) WHERE (((((t0.c2)%(v0.c0))) BETWEEN (CASE WHEN NULL THEN t0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN 'H' END) AND (json_array_length(t0.c2)))) GROUP BY v0.c0, t0.c1 UNION SELECT v0.c0, t0.c1 FROM v0 INNER JOIN t0 ON CAST(t0.c0 COLLATE RTRIM AS TEXT) WHERE ((NOT (((((t0.c2)%(v0.c0))) BETWEEN (CASE WHEN NULL THEN t0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN 'H' END) AND (json_array_length(t0.c2)))))) GROUP BY v0.c0, t0.c1 UNION SELECT ALL v0.c0, t0.c1 FROM v0 INNER JOIN t0 ON CAST(t0.c0 COLLATE RTRIM AS TEXT) WHERE (((((((t0.c2)%(v0.c0))) BETWEEN (CASE WHEN NULL THEN t0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN 'H' END) AND (json_array_length(t0.c2)))) ISNULL)) GROUP BY v0.c0, t0.c1;
SELECT ALL v0.c0, t0.c1 FROM v0 INNER JOIN t0 ON CAST(t0.c0 COLLATE RTRIM AS TEXT) GROUP BY v0.c0, t0.c1;
SELECT ALL t0.c2, vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN v0 ON 0.520996076851983 GROUP BY t0.c2, vt0.c0;
SELECT t0.c2, vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN v0 ON 0.520996076851983 GROUP BY t0.c2, vt0.c0 HAVING 0x24724e17 UNION ALL SELECT t0.c2, vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN v0 ON 0.520996076851983 GROUP BY t0.c2, vt0.c0 HAVING (NOT (0X24724e17)) UNION ALL SELECT t0.c2, vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN v0 ON 0.520996076851983 GROUP BY t0.c2, vt0.c0 HAVING ((0x24724e17) ISNULL);
SELECT ALL t0.c2, vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN v0 ON 0.520996076851983 GROUP BY t0.c2, vt0.c0;
SELECT t0.c2, vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN v0 ON 0.520996076851983 GROUP BY t0.c2, vt0.c0 HAVING 0x24724e17 UNION ALL SELECT t0.c2, vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN v0 ON 0.520996076851983 GROUP BY t0.c2, vt0.c0 HAVING (NOT (0X24724e17)) UNION ALL SELECT t0.c2, vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN v0 ON 0.520996076851983 GROUP BY t0.c2, vt0.c0 HAVING ((0x24724e17) ISNULL);
SELECT ALL t0.c2, vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN v0 ON 0.520996076851983 GROUP BY t0.c2, vt0.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (CAST(((((v0.c0)OR(v0.c0)))OR(v0.c0)) AS REAL)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (CAST(((((v0.c0)OR(v0.c0)))OR(v0.c0)) AS REAL)))) UNION ALL SELECT ALL * FROM v0 WHERE (((CAST(((((v0.c0)OR(v0.c0)))OR(v0.c0)) AS REAL)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC)) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((CASE 0.3056978631454532  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)+(((v0.c0)>(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((CASE 0.3056978631454532  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)+(((v0.c0)>(v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((CASE 0.3056978631454532  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)+(((v0.c0)>(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0, v0 NATURAL JOIN t0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 NATURAL JOIN t0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0, v0 NATURAL JOIN t0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 NATURAL JOIN t0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0, v0 NATURAL JOIN t0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 NATURAL JOIN t0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0, v0 NATURAL JOIN t0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 NATURAL JOIN t0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0, v0 NATURAL JOIN t0 GROUP BY vt0.c0;
SELECT MAX((v0.c0 IN ())) FROM v0;
SELECT ALL vt0.c0, t0.c1, t0.c2, v0.c0, t0.c0, vt0.c1 FROM t0, vt0, v0;
SELECT vt0.c0, t0.c1, t0.c2, v0.c0, t0.c0, vt0.c1 FROM t0, vt0, v0 WHERE (((((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))) NOT BETWEEN (((((t0.c0)OR(vt0.c1)))AND(t0.c2))) AND ((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c0)))))) UNION ALL SELECT vt0.c0, t0.c1, t0.c2, v0.c0, t0.c0, vt0.c1 FROM t0, vt0, v0 WHERE ((NOT (((((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))) NOT BETWEEN (((((t0.c0)OR(vt0.c1)))AND(t0.c2))) AND ((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c0)))))))) UNION ALL SELECT vt0.c0, t0.c1, t0.c2, v0.c0, t0.c0, vt0.c1 FROM t0, vt0, v0 WHERE (((((((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))) NOT BETWEEN (((((t0.c0)OR(vt0.c1)))AND(t0.c2))) AND ((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c0)))))) ISNULL));
SELECT ALL vt0.c0, t0.c1, t0.c2, v0.c0, t0.c0, vt0.c1 FROM t0, vt0, v0;
SELECT DISTINCT vt0.c0 FROM t0, vt0 NOT INDEXED;
SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE (CASE WHEN vt0.c1 COLLATE BINARY THEN CAST(t0.c0 AS REAL) WHEN UNLIKELY(vt0.c1) THEN '-1633119710' WHEN ((x'')%(vt0.c0)) THEN ((((t0.c2)AND(NULL)))AND(t0.c2)) ELSE (NOT (t0.c0)) END) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ((NOT (CASE WHEN vt0.c1 COLLATE BINARY THEN CAST(t0.c0 AS REAL) WHEN UNLIKELY(vt0.c1) THEN '-1633119710' WHEN ((x'')%(vt0.c0)) THEN ((((t0.c2)AND(NULL)))AND(t0.c2)) ELSE (NOT (t0.c0)) END))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE (((CASE WHEN vt0.c1 COLLATE BINARY THEN CAST(t0.c0 AS REAL) WHEN UNLIKELY(vt0.c1) THEN '-1633119710' WHEN ((x'')%(vt0.c0)) THEN ((((t0.c2)AND(NULL)))AND(t0.c2)) ELSE (NOT (t0.c0)) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0, vt0 NOT INDEXED;
SELECT vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON vt0.c1 LEFT OUTER JOIN t0 ON (((vt0.c1))!=((NULL))) COLLATE RTRIM GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON vt0.c1 LEFT OUTER JOIN t0 ON (((vt0.c1))!=((NULL))) COLLATE RTRIM WHERE ((((~ (t0.c0)))OR(CAST(t0.c0 AS REAL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON vt0.c1 LEFT OUTER JOIN t0 ON (((vt0.c1))<>((NULL))) COLLATE RTRIM WHERE ((NOT ((((~ (t0.c0)))OR(CAST(t0.c0 AS REAL)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON vt0.c1 LEFT OUTER JOIN t0 ON (((vt0.c1))!=((NULL))) COLLATE RTRIM WHERE ((((((~ (t0.c0)))OR(CAST(t0.c0 AS REAL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON vt0.c1 LEFT OUTER JOIN t0 ON (((vt0.c1))!=((NULL))) COLLATE RTRIM GROUP BY vt0.c0;
SELECT t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c1, vt0.c0;
SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c1, vt0.c0 HAVING AVG(AVG(t0.c2)) UNION ALL SELECT t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c1, vt0.c0 HAVING (NOT (AVG(AVG(t0.c2)))) UNION ALL SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c1, vt0.c0 HAVING ((AVG(AVG(t0.c2))) ISNULL);
SELECT t0.c1, t0.c2, vt0.c0 FROM t0, vt0;
SELECT ALL t0.c1, t0.c2, vt0.c0 FROM t0, vt0 WHERE (CAST(((vt0.c1) IS TRUE) AS BLOB)) UNION ALL SELECT t0.c1, t0.c2, vt0.c0 FROM t0, vt0 WHERE ((NOT (CAST(((vt0.c1) IS TRUE) AS BLOB)))) UNION ALL SELECT t0.c1, t0.c2, vt0.c0 FROM t0, vt0 WHERE (((CAST(((vt0.c1) IS TRUE) AS BLOB)) ISNULL));
SELECT t0.c1, t0.c2, vt0.c0 FROM t0, vt0;
SELECT DISTINCT v0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE (((TOTAL_CHANGES())+(((v0.c0) NOT NULL)))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((NOT (((TOTAL_CHANGES())+(((v0.c0) NOT NULL)))))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE (((((TOTAL_CHANGES())+(((v0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0, v0;
SELECT ALL v0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c2;
SELECT v0.c0, t0.c2 FROM v0, t0 WHERE ((- (((t0.c0) NOT BETWEEN (NULL) AND (v0.c0))))) GROUP BY v0.c0, t0.c2 UNION SELECT ALL v0.c0, t0.c2 FROM v0, t0 WHERE ((NOT ((- (((t0.c0) NOT BETWEEN (NULL) AND (v0.c0))))))) GROUP BY v0.c0, t0.c2 UNION SELECT ALL v0.c0, t0.c2 FROM v0, t0 WHERE ((((- (((t0.c0) NOT BETWEEN (NULL) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0, t0.c2;
SELECT ALL v0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c2;
SELECT ALL vt0.c0, t0.c0, vt0.c1, t0.c2, t0.c1 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, vt0.c1, t0.c2, t0.c1;
SELECT ALL vt0.c0, t0.c0, vt0.c1, t0.c2, t0.c1 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, vt0.c1, t0.c2, t0.c1 HAVING COUNT(2.121371518E9) UNION ALL SELECT vt0.c0, t0.c0, vt0.c1, t0.c2, t0.c1 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, vt0.c1, t0.c2, t0.c1 HAVING (NOT (COUNT(2.121371518E9))) UNION ALL SELECT ALL vt0.c0, t0.c0, vt0.c1, t0.c2, t0.c1 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, vt0.c1, t0.c2, t0.c1 HAVING ((COUNT(2.121371518E9)) ISNULL);
SELECT ALL vt0.c0, t0.c0, vt0.c1, t0.c2, t0.c1 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, vt0.c1, t0.c2, t0.c1;
SELECT ALL vt0.c0, t0.c0, vt0.c1, t0.c2, t0.c1 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, vt0.c1, t0.c2, t0.c1 HAVING COUNT(2.121371518E9) UNION ALL SELECT vt0.c0, t0.c0, vt0.c1, t0.c2, t0.c1 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, vt0.c1, t0.c2, t0.c1 HAVING (NOT (COUNT(2.121371518E9))) UNION ALL SELECT ALL vt0.c0, t0.c0, vt0.c1, t0.c2, t0.c1 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, vt0.c1, t0.c2, t0.c1 HAVING ((COUNT(2.121371518E9)) ISNULL);
SELECT ALL vt0.c0, t0.c0, vt0.c1, t0.c2, t0.c1 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, vt0.c1, t0.c2, t0.c1;
SELECT ALL * FROM v0, t0, vt0;
SELECT * FROM v0, t0, vt0 WHERE (((t0.c0) IS FALSE)) UNION ALL SELECT * FROM v0, t0, vt0 WHERE ((NOT (((t0.c0) IS FALSE)))) UNION ALL SELECT * FROM v0, t0, vt0 WHERE (((((t0.c0) IS FALSE)) ISNULL));
SELECT ALL * FROM v0, t0, vt0;
SELECT DISTINCT * FROM v0, t0, vt0;
SELECT DISTINCT * FROM v0, t0, vt0 WHERE (502619858) UNION SELECT DISTINCT * FROM v0, t0, vt0 WHERE ((NOT (502619858))) UNION SELECT DISTINCT * FROM v0, t0, vt0 WHERE (((502619858) ISNULL));
SELECT DISTINCT * FROM v0, t0, vt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE ((+ (CAST(NULL AS NUMERIC)))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT ((+ (CAST(NULL AS NUMERIC)))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((((+ (CAST(NULL AS NUMERIC)))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL v0.c0 FROM v0, vt0, t0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0, t0 GROUP BY v0.c0 HAVING ((((COUNT(COUNT(TOTAL(t0.c0))))<<(vt0.c0))) NOT BETWEEN (SUM(GROUP_CONCAT(TOTAL(t0.c2)))) AND (CAST(MIN(vt0.c0) AS INTEGER))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0, t0 GROUP BY v0.c0 HAVING (NOT (((((COUNT(COUNT(TOTAL(t0.c0))))<<(vt0.c0))) NOT BETWEEN (SUM(GROUP_CONCAT(TOTAL(t0.c2)))) AND (CAST(MIN(vt0.c0) AS INTEGER))))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0, t0 GROUP BY v0.c0 HAVING ((((((COUNT(COUNT(TOTAL(t0.c0))))<<(vt0.c0))) NOT BETWEEN (SUM(GROUP_CONCAT(TOTAL(t0.c2)))) AND (CAST(MIN(vt0.c0) AS INTEGER)))) ISNULL);
SELECT ALL t0.c2, vt0.c1, t0.c0 FROM vt0, t0;
SELECT ALL t0.c2, vt0.c1, t0.c0 FROM vt0, t0 WHERE (((((((t0.c2)AND(t0.c1)))AND(t0.c0)))IS((NOT (t0.c0))))) UNION ALL SELECT t0.c2, vt0.c1, t0.c0 FROM vt0, t0 WHERE ((NOT (((((((t0.c2)AND(t0.c1)))AND(t0.c0)))IS((NOT (t0.c0))))))) UNION ALL SELECT ALL t0.c2, vt0.c1, t0.c0 FROM vt0, t0 WHERE (((((((((t0.c2)AND(t0.c1)))AND(t0.c0)))IS((NOT (t0.c0))))) ISNULL));
SELECT ALL t0.c2, vt0.c1, t0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c1, v0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c1, v0.c0 FROM v0, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c1, v0.c0 FROM v0, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c1, v0.c0 FROM v0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c1, v0.c0 FROM v0, vt0;
SELECT v0.c0 FROM t0, v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM t0, v0, vt0 WHERE (CAST((v0.c0 IN ()) AS REAL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t0, v0, vt0 WHERE ((NOT (CAST((v0.c0 IN ()) AS REAL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t0, v0, vt0 WHERE (((CAST((v0.c0 IN ()) AS REAL)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM t0, v0, vt0 GROUP BY v0.c0;
SELECT t0.c1, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, vt0.c1, vt0.c0;
SELECT ALL t0.c1, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, vt0.c1, vt0.c0 HAVING TOTAL(t0.c1) COLLATE BINARY COLLATE BINARY UNION ALL SELECT ALL t0.c1, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, vt0.c1, vt0.c0 HAVING (NOT (TOTAL(t0.c1) COLLATE BINARY COLLATE BINARY)) UNION ALL SELECT t0.c1, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, vt0.c1, vt0.c0 HAVING ((TOTAL(t0.c1) COLLATE BINARY COLLATE BINARY) ISNULL);
SELECT t0.c1, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, vt0.c1, vt0.c0;
SELECT ALL t0.c1, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, vt0.c1, vt0.c0 HAVING TOTAL(t0.c1) COLLATE BINARY COLLATE BINARY UNION ALL SELECT ALL t0.c1, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, vt0.c1, vt0.c0 HAVING (NOT (TOTAL(t0.c1) COLLATE BINARY COLLATE BINARY)) UNION ALL SELECT t0.c1, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, vt0.c1, vt0.c0 HAVING ((TOTAL(t0.c1) COLLATE BINARY COLLATE BINARY) ISNULL);
SELECT t0.c1, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, vt0.c1, vt0.c0;
SELECT ALL t0.c1, t0.c2 FROM vt0, t0, v0;
SELECT ALL t0.c1, t0.c2 FROM vt0, t0, v0 WHERE ((~ (((vt0.c0) IS TRUE)))) UNION ALL SELECT ALL t0.c1, t0.c2 FROM vt0, t0, v0 WHERE ((NOT ((~ (((vt0.c0) IS TRUE)))))) UNION ALL SELECT t0.c1, t0.c2 FROM vt0, t0, v0 WHERE ((((~ (((vt0.c0) IS TRUE)))) ISNULL));
SELECT ALL t0.c1, t0.c2 FROM vt0, t0, v0;
SELECT DISTINCT * FROM vt0 CROSS JOIN t0 ON (((vt0.c1, t0.c0, x'88d21c84')) NOT BETWEEN ((LOWER(t0.c2), vt0.c0, ((t0.c1)IS NOT(vt0.c1)))) AND ((LOWER(DISTINCT vt0.c0), ((t0.c1) IS TRUE), (+ (t0.c2)))));
SELECT DISTINCT * FROM vt0 CROSS JOIN t0 ON (((vt0.c1, t0.c0, x'88d21c84')) NOT BETWEEN ((LOWER(t0.c2), vt0.c0, ((t0.c1)IS NOT(vt0.c1)))) AND ((LOWER(DISTINCT vt0.c0), ((t0.c1) IS TRUE), (+ (t0.c2))))) WHERE ((t0.c0 IN (vt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN t0 ON (((vt0.c1, t0.c0, x'88d21c84')) NOT BETWEEN ((LOWER(t0.c2), vt0.c0, ((t0.c1)IS NOT(vt0.c1)))) AND ((LOWER(DISTINCT vt0.c0), ((t0.c1) IS TRUE), (+ (t0.c2))))) WHERE ((NOT ((t0.c0 IN (vt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN t0 ON (((vt0.c1, t0.c0, x'88d21c84')) NOT BETWEEN ((LOWER(t0.c2), vt0.c0, ((t0.c1)IS NOT(vt0.c1)))) AND ((LOWER(DISTINCT vt0.c0), ((t0.c1) IS TRUE), (+ (t0.c2))))) WHERE ((((t0.c0 IN (vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN t0 ON (((vt0.c1, t0.c0, x'88d21c84')) NOT BETWEEN ((LOWER(t0.c2), vt0.c0, ((t0.c1)IS NOT(vt0.c1)))) AND ((LOWER(DISTINCT vt0.c0), ((t0.c1) IS TRUE), (+ (t0.c2)))));
SELECT ALL t0.c2, t0.c0, vt0.c1, vt0.c0 FROM v0, t0, vt0 GROUP BY t0.c2, t0.c0, vt0.c1, vt0.c0;
SELECT ALL t0.c2, t0.c0, vt0.c1, vt0.c0 FROM v0, t0, vt0 WHERE ('1e500') GROUP BY t0.c2, t0.c0, vt0.c1, vt0.c0 UNION SELECT t0.c2, t0.c0, vt0.c1, vt0.c0 FROM v0, t0, vt0 WHERE ((NOT ('1e500'))) GROUP BY t0.c2, t0.c0, vt0.c1, vt0.c0 UNION SELECT ALL t0.c2, t0.c0, vt0.c1, vt0.c0 FROM v0, t0, vt0 WHERE ((('1e500') ISNULL)) GROUP BY t0.c2, t0.c0, vt0.c1, vt0.c0;
SELECT ALL t0.c2, t0.c0, vt0.c1, vt0.c0 FROM v0, t0, vt0 GROUP BY t0.c2, t0.c0, vt0.c1, vt0.c0;
SELECT t0.c0, v0.c0 FROM t0, vt0 CROSS JOIN v0 ON ((((t0.c0) BETWEEN (t0.c1) AND (t0.c1))) BETWEEN (t0.c2) AND (vt0.c0 COLLATE RTRIM)) GROUP BY t0.c0, v0.c0;
SELECT t0.c0, v0.c0 FROM t0, vt0 CROSS JOIN v0 ON ((((t0.c0) BETWEEN (t0.c1) AND (t0.c1))) BETWEEN (t0.c2) AND (vt0.c0 COLLATE RTRIM)) GROUP BY t0.c0, v0.c0 HAVING CAST(0.0575406447435276 AS NUMERIC) UNION ALL SELECT t0.c0, v0.c0 FROM t0, vt0 CROSS JOIN v0 ON ((((t0.c0) BETWEEN (t0.c1) AND (t0.c1))) BETWEEN (t0.c2) AND (vt0.c0 COLLATE RTRIM)) GROUP BY t0.c0, v0.c0 HAVING (NOT (CAST(0.0575406447435276 AS NUMERIC))) UNION ALL SELECT ALL t0.c0, v0.c0 FROM t0, vt0 CROSS JOIN v0 ON ((((t0.c0) BETWEEN (t0.c1) AND (t0.c1))) BETWEEN (t0.c2) AND (vt0.c0 COLLATE RTRIM)) GROUP BY t0.c0, v0.c0 HAVING ((CAST(0.0575406447435276 AS NUMERIC)) ISNULL);
SELECT t0.c0, v0.c0 FROM t0, vt0 CROSS JOIN v0 ON ((((t0.c0) BETWEEN (t0.c1) AND (t0.c1))) BETWEEN (t0.c2) AND (vt0.c0 COLLATE RTRIM)) GROUP BY t0.c0, v0.c0;
SELECT t0.c0, v0.c0 FROM t0, vt0 CROSS JOIN v0 ON ((((t0.c0) BETWEEN (t0.c1) AND (t0.c1))) BETWEEN (t0.c2) AND (vt0.c0 COLLATE RTRIM)) GROUP BY t0.c0, v0.c0 HAVING CAST(0.0575406447435276 AS NUMERIC) UNION ALL SELECT t0.c0, v0.c0 FROM t0, vt0 CROSS JOIN v0 ON ((((t0.c0) BETWEEN (t0.c1) AND (t0.c1))) BETWEEN (t0.c2) AND (vt0.c0 COLLATE RTRIM)) GROUP BY t0.c0, v0.c0 HAVING (NOT (CAST(0.0575406447435276 AS NUMERIC))) UNION ALL SELECT ALL t0.c0, v0.c0 FROM t0, vt0 CROSS JOIN v0 ON ((((t0.c0) BETWEEN (t0.c1) AND (t0.c1))) BETWEEN (t0.c2) AND (vt0.c0 COLLATE RTRIM)) GROUP BY t0.c0, v0.c0 HAVING ((CAST(0.0575406447435276 AS NUMERIC)) ISNULL);
SELECT t0.c0, v0.c0 FROM t0, vt0 CROSS JOIN v0 ON ((((t0.c0) BETWEEN (t0.c1) AND (t0.c1))) BETWEEN (t0.c2) AND (vt0.c0 COLLATE RTRIM)) GROUP BY t0.c0, v0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN '-1757380914' END)||(CAST(vt0.c0 AS INTEGER)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((CASE vt0.c1  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN '-1757380914' END)||(CAST(vt0.c0 AS INTEGER)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((CASE vt0.c1  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN '-1757380914' END)||(CAST(vt0.c0 AS INTEGER)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM t0, v0, vt0;
SELECT DISTINCT * FROM t0, v0, vt0 WHERE ((- (((vt0.c1) NOT BETWEEN (t0.c2) AND (v0.c0))))) UNION SELECT DISTINCT * FROM t0, v0, vt0 WHERE ((NOT ((- (((vt0.c1) NOT BETWEEN (t0.c2) AND (v0.c0))))))) UNION SELECT DISTINCT * FROM t0, v0, vt0 WHERE ((((- (((vt0.c1) NOT BETWEEN (t0.c2) AND (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, v0, vt0;
SELECT vt0.c1, t0.c2, vt0.c0, t0.c1, v0.c0 FROM v0, vt0, t0 GROUP BY vt0.c1, t0.c2, vt0.c0, t0.c1, v0.c0;
SELECT ALL vt0.c1, t0.c2, vt0.c0, t0.c1, v0.c0 FROM v0, vt0, t0 WHERE (CASE CASE WHEN t0.c1 THEN '' END  WHEN t0.c1 THEN (t0.c1 IN (NULL)) END) GROUP BY vt0.c1, t0.c2, vt0.c0, t0.c1, v0.c0 UNION SELECT vt0.c1, t0.c2, vt0.c0, t0.c1, v0.c0 FROM v0, vt0, t0 WHERE ((NOT (CASE CASE WHEN t0.c1 THEN '' END  WHEN t0.c1 THEN (t0.c1 IN (NULL)) END))) GROUP BY vt0.c1, t0.c2, vt0.c0, t0.c1, v0.c0 UNION SELECT vt0.c1, t0.c2, vt0.c0, t0.c1, v0.c0 FROM v0, vt0, t0 WHERE (((CASE CASE WHEN t0.c1 THEN '' END  WHEN t0.c1 THEN (t0.c1 IN (NULL)) END) ISNULL)) GROUP BY vt0.c1, t0.c2, vt0.c0, t0.c1, v0.c0;
SELECT vt0.c1, t0.c2, vt0.c0, t0.c1, v0.c0 FROM v0, vt0, t0 GROUP BY vt0.c1, t0.c2, vt0.c0, t0.c1, v0.c0;
SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1, vt0.c0 FROM v0, vt0 NATURAL JOIN t0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1, vt0.c0;
SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1, vt0.c0 FROM v0, vt0 NATURAL JOIN t0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1, vt0.c0 HAVING (((((((((t0.c1 IN ()))AND(MAX(t0.c0))))OR((GROUP_CONCAT(t0.c0) IN ()))))OR(((((t0.c2)AND(v0.c0)))OR(t0.c1)))))OR(TOTAL(t0.c0))) UNION ALL SELECT t0.c2, v0.c0, t0.c0, t0.c1, vt0.c0 FROM v0, vt0 NATURAL JOIN t0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1, vt0.c0 HAVING (NOT ((((((((((t0.c1 IN ()))AND(MAX(t0.c0))))OR((GROUP_CONCAT(t0.c0) IN ()))))OR(((((t0.c2)AND(v0.c0)))OR(t0.c1)))))OR(TOTAL(t0.c0))))) UNION ALL SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1, vt0.c0 FROM v0, vt0 NATURAL JOIN t0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1, vt0.c0 HAVING (((((((((((t0.c1 IN ()))AND(MAX(t0.c0))))OR((GROUP_CONCAT(t0.c0) IN ()))))OR(((((t0.c2)AND(v0.c0)))OR(t0.c1)))))OR(TOTAL(t0.c0)))) ISNULL);
SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1, vt0.c0 FROM v0, vt0 NATURAL JOIN t0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1, vt0.c0;
SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1, vt0.c0 FROM v0, vt0 NATURAL JOIN t0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1, vt0.c0 HAVING (((((((((t0.c1 IN ()))AND(MAX(t0.c0))))OR((GROUP_CONCAT(t0.c0) IN ()))))OR(((((t0.c2)AND(v0.c0)))OR(t0.c1)))))OR(TOTAL(t0.c0))) UNION ALL SELECT t0.c2, v0.c0, t0.c0, t0.c1, vt0.c0 FROM v0, vt0 NATURAL JOIN t0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1, vt0.c0 HAVING (NOT ((((((((((t0.c1 IN ()))AND(MAX(t0.c0))))OR((GROUP_CONCAT(t0.c0) IN ()))))OR(((((t0.c2)AND(v0.c0)))OR(t0.c1)))))OR(TOTAL(t0.c0))))) UNION ALL SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1, vt0.c0 FROM v0, vt0 NATURAL JOIN t0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1, vt0.c0 HAVING (((((((((((t0.c1 IN ()))AND(MAX(t0.c0))))OR((GROUP_CONCAT(t0.c0) IN ()))))OR(((((t0.c2)AND(v0.c0)))OR(t0.c1)))))OR(TOTAL(t0.c0)))) ISNULL);
SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1, vt0.c0 FROM v0, vt0 NATURAL JOIN t0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1, vt0.c0;
SELECT * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (((TRIM(DISTINCT vt0.c1, v0.c0)) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c0))) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (((TRIM(DISTINCT vt0.c1, v0.c0)) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c0))) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((((TRIM(DISTINCT vt0.c1, v0.c0)) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c0))) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0, t0;
SELECT DISTINCT v0.c0 FROM v0, t0 WHERE (((CAST(v0.c0 AS NUMERIC))=(((v0.c0) NOT BETWEEN ('801174430') AND (t0.c2))))) UNION SELECT DISTINCT v0.c0 FROM v0, t0 WHERE ((NOT (((CAST(v0.c0 AS NUMERIC))==(((v0.c0) NOT BETWEEN ('801174430') AND (t0.c2))))))) UNION SELECT DISTINCT v0.c0 FROM v0, t0 WHERE (((((CAST(v0.c0 AS NUMERIC))==(((v0.c0) NOT BETWEEN ('801174430') AND (t0.c2))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, t0;
SELECT t0.c2, t0.c1, t0.c0 FROM vt0, t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM vt0, t0 WHERE (t0.c1) GROUP BY t0.c2, t0.c1, t0.c0 UNION SELECT ALL t0.c2, t0.c1, t0.c0 FROM vt0, t0 WHERE ((NOT (t0.c1))) GROUP BY t0.c2, t0.c1, t0.c0 UNION SELECT t0.c2, t0.c1, t0.c0 FROM vt0, t0 WHERE (((t0.c1) ISNULL)) GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM vt0, t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) NOTNULL) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((COUNT(*)) NOTNULL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((COUNT(*)) NOTNULL)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) NOTNULL) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((COUNT(*)) NOTNULL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((COUNT(*)) NOTNULL)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 WHERE (t0.c2) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((NOT (t0.c2))) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0 WHERE (((t0.c2) ISNULL));
SELECT t0.c1, t0.c2, t0.c0 FROM t0;
SELECT DISTINCT vt0.c1, vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 WHERE (((CAST(x'' AS NUMERIC))AND(((388598349) BETWEEN (vt0.c0) AND (vt0.c1))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (((CAST(x'' AS NUMERIC))AND(((388598349) BETWEEN (vt0.c0) AND (vt0.c1))))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((CAST(x'' AS NUMERIC))AND(((388598349) BETWEEN (vt0.c0) AND (vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, v0.c0 FROM vt0, v0;
SELECT t0.c2 FROM t0 NATURAL JOIN v0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 NATURAL JOIN v0 WHERE (v0.c0) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 NATURAL JOIN v0 WHERE ((NOT (v0.c0))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 NATURAL JOIN v0 WHERE (((v0.c0) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM t0 NATURAL JOIN v0 GROUP BY t0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(CASE AVG(MIN(0.7954877724068153))  WHEN TOTAL(COUNT(*)) THEN TOTAL(SUM(v0.c0)) END) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(CASE AVG(MIN(0.7954877724068153))  WHEN TOTAL(COUNT(*)) THEN TOTAL(SUM(v0.c0)) END))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(CASE AVG(MIN(0.7954877724068153))  WHEN TOTAL(COUNT(*)) THEN TOTAL(SUM(v0.c0)) END)) ISNULL);
SELECT ALL t0.c1 FROM t0;
SELECT t0.c1 FROM t0 WHERE (((((((t0.c1)OR(t0.c0)))OR(-1633119710))) NOTNULL)) UNION ALL SELECT t0.c1 FROM t0 WHERE ((NOT (((((((t0.c1)OR(t0.c0)))OR(-1633119710))) NOTNULL)))) UNION ALL SELECT ALL t0.c1 FROM t0 WHERE (((((((((t0.c1)OR(t0.c0)))OR(-1633119710))) NOTNULL)) ISNULL));
SELECT ALL t0.c1 FROM t0;
SELECT DISTINCT vt0.c0, v0.c0, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON ABS((v0.c0 IN (vt0.c1, v0.c0)));
SELECT DISTINCT vt0.c0, v0.c0, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON ABS((v0.c0 IN (vt0.c1, v0.c0))) WHERE ((CASE WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ())) UNION SELECT DISTINCT vt0.c0, v0.c0, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON ABS((v0.c0 IN (vt0.c1, v0.c0))) WHERE ((NOT ((CASE WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ())))) UNION SELECT DISTINCT vt0.c0, v0.c0, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON ABS((v0.c0 IN (vt0.c1, v0.c0))) WHERE ((((CASE WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ())) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON ABS((v0.c0 IN (vt0.c1, v0.c0)));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (0.12395435426463464) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (0.12395435426463464))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((0.12395435426463464) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c0, t0.c1, v0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c0, t0.c1, v0.c0, t0.c2;
SELECT ALL t0.c0, t0.c1, v0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c0, t0.c1, v0.c0, t0.c2 HAVING CAST(((COUNT(*)) BETWEEN (AVG(TOTAL(t0.c2))) AND (t0.c2)) AS BLOB) UNION ALL SELECT ALL t0.c0, t0.c1, v0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c0, t0.c1, v0.c0, t0.c2 HAVING (NOT (CAST(((COUNT(*)) BETWEEN (AVG(TOTAL(t0.c2))) AND (t0.c2)) AS BLOB))) UNION ALL SELECT t0.c0, t0.c1, v0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c0, t0.c1, v0.c0, t0.c2 HAVING ((CAST(((COUNT(*)) BETWEEN (AVG(TOTAL(t0.c2))) AND (t0.c2)) AS BLOB)) ISNULL);
SELECT ALL MIN(((CAST(t0.c0 AS REAL))%(((t0.c1) BETWEEN (v0.c0) AND (v0.c0))))) FROM vt0, v0, t0;
SELECT ALL v0.c0, t0.c0 FROM t0, v0;
SELECT ALL v0.c0, t0.c0 FROM t0, v0 WHERE ((((0.3056978631454532, t0.c2, t0.c0)) BETWEEN ((NULL COLLATE RTRIM, t0.c0, CASE t0.c0  WHEN v0.c0 THEN t0.c1 END)) AND ((TRIM(DISTINCT t0.c0, NULL), ((t0.c0)/(t0.c2)), CAST(t0.c2 AS REAL))))) ORDER BY ((((((((((((((v0.c0)AND(t0.c2)))AND(v0.c0)))AND(t0.c0)))AND(v0.c0)))OR(t0.c0)))OR(t0.c0)))>=(t0.c1 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL v0.c0, t0.c0 FROM t0, v0 WHERE ((NOT ((((0.3056978631454532, t0.c2, t0.c0)) BETWEEN ((NULL COLLATE RTRIM, t0.c0, CASE t0.c0  WHEN v0.c0 THEN t0.c1 END)) AND ((TRIM(DISTINCT t0.c0, NULL), ((t0.c0)/(t0.c2)), CAST(t0.c2 AS REAL))))))) ORDER BY ((((((((((((((v0.c0)AND(t0.c2)))AND(v0.c0)))AND(t0.c0)))AND(v0.c0)))OR(t0.c0)))OR(t0.c0)))>=(t0.c1 COLLATE RTRIM))  NULLS FIRST;
SELECT v0.c0, t0.c0 FROM t0, v0 WHERE ((((((0.3056978631454532, t0.c2, t0.c0)) BETWEEN ((NULL COLLATE RTRIM, t0.c0, CASE t0.c0  WHEN v0.c0 THEN t0.c1 END)) AND ((TRIM(DISTINCT t0.c0, NULL), ((t0.c0)/(t0.c2)), CAST(t0.c2 AS REAL))))) ISNULL)) ORDER BY ((((((((((((((v0.c0)AND(t0.c2)))AND(v0.c0)))AND(t0.c0)))AND(v0.c0)))OR(t0.c0)))OR(t0.c0)))>=(t0.c1 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL v0.c0, t0.c0 FROM t0, v0;
SELECT DISTINCT * FROM v0 CROSS JOIN t0 ON (((t0.c0 IN (t0.c0, t0.c2)))/(v0.c0)) RIGHT OUTER JOIN vt0 ON RTRIM(UPPER(t0.c2));
SELECT DISTINCT * FROM v0 CROSS JOIN t0 ON (((t0.c0 IN (t0.c0, t0.c2)))/(v0.c0)) RIGHT OUTER JOIN vt0 ON RTRIM(UPPER(t0.c2)) WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 CROSS JOIN t0 ON (((t0.c0 IN (t0.c0, t0.c2)))/(v0.c0)) RIGHT OUTER JOIN vt0 ON RTRIM(UPPER(t0.c2)) WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN t0 ON (((t0.c0 IN (t0.c0, t0.c2)))/(v0.c0)) RIGHT OUTER JOIN vt0 ON RTRIM(UPPER(t0.c2)) WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0 CROSS JOIN t0 ON (((t0.c0 IN (t0.c0, t0.c2)))/(v0.c0)) RIGHT OUTER JOIN vt0 ON RTRIM(UPPER(t0.c2));
SELECT ALL vt0.c1, t0.c1, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY vt0.c1, t0.c1, t0.c0, v0.c0;
SELECT ALL vt0.c1, t0.c1, t0.c0, v0.c0 FROM vt0, v0, t0 WHERE ((((((v0.c0, vt0.c0, x'', t0.c1, t0.c2))<=((v0.c0, vt0.c0, t0.c0, t0.c1, t0.c1))))>>(TRIM(DISTINCT vt0.c0)))) GROUP BY vt0.c1, t0.c1, t0.c0, v0.c0 UNION SELECT ALL vt0.c1, t0.c1, t0.c0, v0.c0 FROM vt0, v0, t0 WHERE ((NOT ((((((v0.c0, vt0.c0, x'', t0.c1, t0.c2))<=((v0.c0, vt0.c0, t0.c0, t0.c1, t0.c1))))>>(TRIM(DISTINCT vt0.c0)))))) GROUP BY vt0.c1, t0.c1, t0.c0, v0.c0 UNION SELECT vt0.c1, t0.c1, t0.c0, v0.c0 FROM vt0, v0, t0 WHERE ((((((((v0.c0, vt0.c0, x'', t0.c1, t0.c2))<=((v0.c0, vt0.c0, t0.c0, t0.c1, t0.c1))))>>(TRIM(DISTINCT vt0.c0)))) ISNULL)) GROUP BY vt0.c1, t0.c1, t0.c0, v0.c0;
SELECT ALL vt0.c1, t0.c1, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY vt0.c1, t0.c1, t0.c0, v0.c0;
SELECT t0.c1, vt0.c0, vt0.c1, t0.c0, t0.c2, v0.c0 FROM v0, t0 RIGHT OUTER JOIN vt0 ON ((((t0.c1)==(t0.c0))) ISNULL) GROUP BY t0.c1, vt0.c0, vt0.c1, t0.c0, t0.c2, v0.c0;
SELECT ALL t0.c1, vt0.c0, vt0.c1, t0.c0, t0.c2, v0.c0 FROM v0, t0 RIGHT OUTER JOIN vt0 ON ((((t0.c1)=(t0.c0))) ISNULL) GROUP BY t0.c1, vt0.c0, vt0.c1, t0.c0, t0.c2, v0.c0 HAVING SUM(((COUNT(MIN(v0.c0)))GLOB(t0.c0))) UNION ALL SELECT ALL t0.c1, vt0.c0, vt0.c1, t0.c0, t0.c2, v0.c0 FROM v0, t0 RIGHT OUTER JOIN vt0 ON ((((t0.c1)=(t0.c0))) ISNULL) GROUP BY t0.c1, vt0.c0, vt0.c1, t0.c0, t0.c2, v0.c0 HAVING (NOT (SUM(((COUNT(MIN(v0.c0)))GLOB(t0.c0))))) UNION ALL SELECT ALL t0.c1, vt0.c0, vt0.c1, t0.c0, t0.c2, v0.c0 FROM v0, t0 RIGHT OUTER JOIN vt0 ON ((((t0.c1)=(t0.c0))) ISNULL) GROUP BY t0.c1, vt0.c0, vt0.c1, t0.c0, t0.c2, v0.c0 HAVING ((SUM(((COUNT(MIN(v0.c0)))GLOB(t0.c0)))) ISNULL);
SELECT * FROM t0, vt0, v0;
SELECT ALL * FROM t0, vt0, v0 WHERE (PRINTF(json_array_length(vt0.c0))) UNION ALL SELECT ALL * FROM t0, vt0, v0 WHERE ((NOT (PRINTF(json_array_length(vt0.c0))))) UNION ALL SELECT * FROM t0, vt0, v0 WHERE (((PRINTF(json_array_length(vt0.c0))) ISNULL));
SELECT * FROM t0, vt0, v0;
SELECT DISTINCT t0.c2, v0.c0, vt0.c0, vt0.c1 FROM t0, v0, vt0;
SELECT DISTINCT t0.c2, v0.c0, vt0.c0, vt0.c1 FROM t0, v0, vt0 WHERE ((NOT (((v0.c0) NOTNULL)))) UNION SELECT DISTINCT t0.c2, v0.c0, vt0.c0, vt0.c1 FROM t0, v0, vt0 WHERE ((NOT ((NOT (((v0.c0) NOTNULL)))))) UNION SELECT DISTINCT t0.c2, v0.c0, vt0.c0, vt0.c1 FROM t0, v0, vt0 WHERE ((((NOT (((v0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT t0.c2, v0.c0, vt0.c0, vt0.c1 FROM t0, v0, vt0;
SELECT v0.c0 FROM v0 INDEXED BY i81, t0 INNER JOIN vt0 ON ((CASE WHEN vt0.c1 THEN t0.c2 END) BETWEEN (((vt0.c1) NOT BETWEEN (t0.c0) AND (v0.c0))) AND (((v0.c0)<(t0.c1)))) GROUP BY v0.c0;
SELECT ALL t0.c1, t0.c0 FROM vt0, t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM vt0, t0 GROUP BY t0.c1, t0.c0 HAVING ((NULL)%(t0.c2)) COLLATE BINARY UNION ALL SELECT ALL t0.c1, t0.c0 FROM vt0, t0 GROUP BY t0.c1, t0.c0 HAVING (NOT (((NULL)%(t0.c2)) COLLATE BINARY)) UNION ALL SELECT t0.c1, t0.c0 FROM vt0, t0 GROUP BY t0.c1, t0.c0 HAVING ((((NULL)%(t0.c2)) COLLATE BINARY) ISNULL);
SELECT ALL t0.c1, t0.c0 FROM vt0, t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM vt0, t0 GROUP BY t0.c1, t0.c0 HAVING ((NULL)%(t0.c2)) COLLATE BINARY UNION ALL SELECT ALL t0.c1, t0.c0 FROM vt0, t0 GROUP BY t0.c1, t0.c0 HAVING (NOT (((NULL)%(t0.c2)) COLLATE BINARY)) UNION ALL SELECT t0.c1, t0.c0 FROM vt0, t0 GROUP BY t0.c1, t0.c0 HAVING ((((NULL)%(t0.c2)) COLLATE BINARY) ISNULL);
SELECT ALL t0.c1, t0.c0 FROM vt0, t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1 FROM v0, t0;
SELECT t0.c1 FROM v0, t0 WHERE (CASE ((t0.c2) IS TRUE)  WHEN SQLITE_COMPILEOPTION_GET(t0.c2) THEN ((v0.c0) BETWEEN (v0.c0) AND (NULL)) ELSE ((t0.c0)IS(t0.c0)) END) ORDER BY CAST(LTRIM(t0.c0, t0.c2) AS BLOB)  NULLS LAST;
SELECT t0.c1 FROM v0, t0 WHERE ((NOT (CASE ((t0.c2) IS TRUE)  WHEN SQLITE_COMPILEOPTION_GET(t0.c2) THEN ((v0.c0) BETWEEN (v0.c0) AND (NULL)) ELSE ((t0.c0)IS(t0.c0)) END))) ORDER BY CAST(LTRIM(t0.c0, t0.c2) AS BLOB)  NULLS LAST;
SELECT t0.c1 FROM v0, t0 WHERE (((CASE ((t0.c2) IS TRUE)  WHEN SQLITE_COMPILEOPTION_GET(t0.c2) THEN ((v0.c0) BETWEEN (v0.c0) AND (NULL)) ELSE ((t0.c0)IS(t0.c0)) END) ISNULL)) ORDER BY CAST(LTRIM(t0.c0, t0.c2) AS BLOB)  NULLS LAST;
SELECT ALL t0.c1 FROM v0, t0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((('4⭍Z]g') NOTNULL)) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((('4⭍Z]g') NOTNULL)))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((((('4⭍Z]g') NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT t0.c1, v0.c0, t0.c0, t0.c2 FROM v0 CROSS JOIN t0 ON json_quote(v0.c0 COLLATE NOCASE) GROUP BY t0.c1, v0.c0, t0.c0, t0.c2;
SELECT ALL t0.c1, v0.c0, t0.c0, t0.c2 FROM v0 CROSS JOIN t0 ON json_quote(v0.c0 COLLATE NOCASE) WHERE (((CAST(t0.c1 AS TEXT)) BETWEEN ((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (t0.c2))) GROUP BY t0.c1, v0.c0, t0.c0, t0.c2 UNION SELECT ALL t0.c1, v0.c0, t0.c0, t0.c2 FROM v0 CROSS JOIN t0 ON json_quote(v0.c0 COLLATE NOCASE) WHERE ((NOT (((CAST(t0.c1 AS TEXT)) BETWEEN ((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (t0.c2))))) GROUP BY t0.c1, v0.c0, t0.c0, t0.c2 UNION SELECT t0.c1, v0.c0, t0.c0, t0.c2 FROM v0 CROSS JOIN t0 ON json_quote(v0.c0 COLLATE NOCASE) WHERE (((((CAST(t0.c1 AS TEXT)) BETWEEN ((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (t0.c2))) ISNULL)) GROUP BY t0.c1, v0.c0, t0.c0, t0.c2;
SELECT t0.c1, v0.c0, t0.c0, t0.c2 FROM v0 CROSS JOIN t0 ON json_quote(v0.c0 COLLATE NOCASE) GROUP BY t0.c1, v0.c0, t0.c0, t0.c2;
SELECT t0.c1 FROM vt0, t0 GROUP BY t0.c1;
SELECT t0.c1 FROM vt0, t0 GROUP BY t0.c1 HAVING ((t0.c2)>>(t0.c1 COLLATE NOCASE)) UNION ALL SELECT ALL t0.c1 FROM vt0, t0 GROUP BY t0.c1 HAVING (NOT (((t0.c2)>>(t0.c1 COLLATE NOCASE)))) UNION ALL SELECT t0.c1 FROM vt0, t0 GROUP BY t0.c1 HAVING ((((t0.c2)>>(t0.c1 COLLATE NOCASE))) ISNULL);
SELECT t0.c1 FROM vt0, t0 GROUP BY t0.c1;
SELECT t0.c1 FROM vt0, t0 GROUP BY t0.c1 HAVING ((t0.c2)>>(t0.c1 COLLATE NOCASE)) UNION ALL SELECT ALL t0.c1 FROM vt0, t0 GROUP BY t0.c1 HAVING (NOT (((t0.c2)>>(t0.c1 COLLATE NOCASE)))) UNION ALL SELECT t0.c1 FROM vt0, t0 GROUP BY t0.c1 HAVING ((((t0.c2)>>(t0.c1 COLLATE NOCASE))) ISNULL);
SELECT t0.c1 FROM vt0, t0 GROUP BY t0.c1;
SELECT MAX((+ (((x'') BETWEEN (t0.c1) AND (t0.c0))))) FROM t0 ORDER BY LIKELY(DISTINCT ((x'a0f9') NOT BETWEEN (t0.c1) AND (t0.c1)))  NULLS LAST, CAST(((t0.c0)!=(t0.c2)) AS NUMERIC)  NULLS LAST;
SELECT t0.c1, v0.c0, vt0.c1, vt0.c0, t0.c2 FROM v0, vt0 FULL OUTER JOIN t0 ON t0.c0;
SELECT t0.c1, v0.c0, vt0.c1, vt0.c0, t0.c2 FROM v0, vt0 FULL OUTER JOIN t0 ON t0.c0 WHERE ((((vt0.c0) BETWEEN (x'') AND (vt0.c0)) IN (((((t0.c0)AND(vt0.c0)))OR(t0.c0)), (- (vt0.c0))))) UNION ALL SELECT t0.c1, v0.c0, vt0.c1, vt0.c0, t0.c2 FROM v0, vt0 FULL OUTER JOIN t0 ON t0.c0 WHERE ((NOT ((((vt0.c0) BETWEEN (x'') AND (vt0.c0)) IN (((((t0.c0)AND(vt0.c0)))OR(t0.c0)), (- (vt0.c0))))))) UNION ALL SELECT ALL t0.c1, v0.c0, vt0.c1, vt0.c0, t0.c2 FROM v0, vt0 FULL OUTER JOIN t0 ON t0.c0 WHERE ((((((vt0.c0) BETWEEN (x'') AND (vt0.c0)) IN (((((t0.c0)AND(vt0.c0)))OR(t0.c0)), (- (vt0.c0))))) ISNULL));
SELECT t0.c1, v0.c0, vt0.c1, vt0.c0, t0.c2 FROM v0, vt0 FULL OUTER JOIN t0 ON t0.c0;
SELECT DISTINCT t0.c1 FROM t0;
SELECT DISTINCT t0.c1 FROM t0 WHERE (CASE CAST(t0.c1 AS REAL)  WHEN ((((((((t0.c2)AND(t0.c0)))AND(t0.c1)))AND(t0.c0)))OR(t0.c1)) THEN ((((t0.c2)AND(t0.c1)))OR(t0.c1)) WHEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) THEN 0.15303658970813772 WHEN CAST(t0.c1 AS INTEGER) THEN x'' END) UNION SELECT DISTINCT t0.c1 FROM t0 WHERE ((NOT (CASE CAST(t0.c1 AS REAL)  WHEN ((((((((t0.c2)AND(t0.c0)))AND(t0.c1)))AND(t0.c0)))OR(t0.c1)) THEN ((((t0.c2)AND(t0.c1)))OR(t0.c1)) WHEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) THEN 0.15303658970813772 WHEN CAST(t0.c1 AS INTEGER) THEN x'' END))) UNION SELECT DISTINCT t0.c1 FROM t0 WHERE (((CASE CAST(t0.c1 AS REAL)  WHEN ((((((((t0.c2)AND(t0.c0)))AND(t0.c1)))AND(t0.c0)))OR(t0.c1)) THEN ((((t0.c2)AND(t0.c1)))OR(t0.c1)) WHEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) THEN 0.15303658970813772 WHEN CAST(t0.c1 AS INTEGER) THEN x'' END) ISNULL));
SELECT DISTINCT t0.c1 FROM t0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0))<=((v0.c0))) COLLATE RTRIM) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0))<=((v0.c0))) COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((v0.c0))<=((v0.c0))) COLLATE RTRIM) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(((COUNT(*)) NOT BETWEEN (COUNT(*)) AND (v0.c0)), COUNT(TOTAL(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(((COUNT(*)) NOT BETWEEN (COUNT(*)) AND (v0.c0)), COUNT(TOTAL(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING ((MAX(((COUNT(*)) NOT BETWEEN (COUNT(*)) AND (v0.c0)), COUNT(TOTAL(v0.c0)))) ISNULL);
SELECT TOTAL(((((((t0.c0)AND(0.9976440614694362)))AND(vt0.c1))) NOTNULL)) FROM vt0 NOT INDEXED, t0 ORDER BY CASE vt0.c1 COLLATE NOCASE  WHEN ((t0.c2)AND(t0.c2)) THEN vt0.c0 COLLATE BINARY WHEN ((t0.c0) BETWEEN (0.5623210874671297) AND (t0.c1)) THEN ((((((((t0.c0)OR(t0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(t0.c1)) WHEN MIN(t0.c0, t0.c2) THEN ((t0.c0) IS TRUE) END DESC;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (CAST(((((t0.c0)AND(0xffffffff8c8f4b22)))OR(t0.c1)) AS TEXT)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CAST(((((t0.c0)AND(0Xffffffff8c8f4b22)))OR(t0.c1)) AS TEXT)))) UNION ALL SELECT * FROM t0 WHERE (((CAST(((((t0.c0)AND(0xffffffff8c8f4b22)))OR(t0.c1)) AS TEXT)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((vt0.c1 COLLATE BINARY) ISNULL)) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((vt0.c1 COLLATE BINARY) ISNULL)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((vt0.c1 COLLATE BINARY) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT t0.c1, v0.c0, t0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c0;
SELECT ALL t0.c1, v0.c0, t0.c0 FROM t0, v0 WHERE (CASE WHEN ((((t0.c1)AND(v0.c0)))AND(1522081950)) THEN '502619858' WHEN (- (0.7989723853830423)) THEN ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c0)) WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN ((t0.c1) NOT NULL) WHEN CAST(t0.c2 AS TEXT) THEN ((((((((((((t0.c1)AND('-665630048')))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(v0.c0)) WHEN IFNULL(DISTINCT x'', t0.c0) THEN ((((((((t0.c0)AND(v0.c0)))OR(t0.c0)))OR(v0.c0)))AND(0.46194473889053556)) END) GROUP BY t0.c1, v0.c0, t0.c0 UNION SELECT ALL t0.c1, v0.c0, t0.c0 FROM t0, v0 WHERE ((NOT (CASE WHEN ((((t0.c1)AND(v0.c0)))AND(1522081950)) THEN '502619858' WHEN (- (0.7989723853830423)) THEN ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c0)) WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN ((t0.c1) NOT NULL) WHEN CAST(t0.c2 AS TEXT) THEN ((((((((((((t0.c1)AND('-665630048')))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(v0.c0)) WHEN IFNULL(DISTINCT x'', t0.c0) THEN ((((((((t0.c0)AND(v0.c0)))OR(t0.c0)))OR(v0.c0)))AND(0.46194473889053556)) END))) GROUP BY t0.c1, v0.c0, t0.c0 UNION SELECT t0.c1, v0.c0, t0.c0 FROM t0, v0 WHERE (((CASE WHEN ((((t0.c1)AND(v0.c0)))AND(1522081950)) THEN '502619858' WHEN (- (0.7989723853830423)) THEN ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c0)) WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN ((t0.c1) NOT NULL) WHEN CAST(t0.c2 AS TEXT) THEN ((((((((((((t0.c1)AND('-665630048')))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(v0.c0)) WHEN IFNULL(DISTINCT x'', t0.c0) THEN ((((((((t0.c0)AND(v0.c0)))OR(t0.c0)))OR(v0.c0)))AND(0.46194473889053556)) END) ISNULL)) GROUP BY t0.c1, v0.c0, t0.c0;
SELECT t0.c1, v0.c0, t0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c0;
SELECT vt0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN vt0 ON ((((NULL, vt0.c1, v0.c0))!=((t0.c2, vt0.c0, t0.c2))) IN ((~ (v0.c0)))) RIGHT OUTER JOIN v0 ON ((((t0.c2)OR(v0.c0)))OR(t0.c1)) COLLATE NOCASE GROUP BY vt0.c0, t0.c2;
SELECT MIN((- ((+ (v0.c0))))) FROM v0, vt0;
SELECT ALL t0.c0, t0.c1, vt0.c0, vt0.c1 FROM t0, vt0 FULL OUTER JOIN v0 ON (CAST(x'' AS TEXT) IN (((t0.c2) ISNULL)));
SELECT t0.c0, t0.c1, vt0.c0, vt0.c1 FROM t0, vt0 FULL OUTER JOIN v0 ON (CAST(x'' AS TEXT) IN (((t0.c2) ISNULL))) WHERE (CASE ((vt0.c0)AND(t0.c0))  WHEN json_extract(v0.c0, vt0.c1) THEN ((v0.c0) BETWEEN (t0.c2) AND (t0.c1)) END) UNION ALL SELECT t0.c0, t0.c1, vt0.c0, vt0.c1 FROM t0, vt0 FULL OUTER JOIN v0 ON (CAST(x'' AS TEXT) IN (((t0.c2) ISNULL))) WHERE ((NOT (CASE ((vt0.c0)AND(t0.c0))  WHEN json_extract(v0.c0, vt0.c1) THEN ((v0.c0) BETWEEN (t0.c2) AND (t0.c1)) END))) UNION ALL SELECT ALL t0.c0, t0.c1, vt0.c0, vt0.c1 FROM t0, vt0 FULL OUTER JOIN v0 ON (CAST(x'' AS TEXT) IN (((t0.c2) ISNULL))) WHERE (((CASE ((vt0.c0)AND(t0.c0))  WHEN json_extract(v0.c0, vt0.c1) THEN ((v0.c0) BETWEEN (t0.c2) AND (t0.c1)) END) ISNULL));
SELECT ALL t0.c0, t0.c1, vt0.c0, vt0.c1 FROM t0, vt0 FULL OUTER JOIN v0 ON (CAST(x'' AS TEXT) IN (((t0.c2) ISNULL)));
SELECT DISTINCT * FROM vt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM vt0 NATURAL JOIN v0 WHERE (((((vt0.c0) ISNULL)) ISNULL)) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN v0 WHERE ((NOT (((((vt0.c0) ISNULL)) ISNULL)))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN v0 WHERE (((((((vt0.c0) ISNULL)) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0 NATURAL JOIN v0;
SELECT t0.c1, t0.c0, v0.c0, vt0.c0, vt0.c1 FROM vt0, v0, t0 GROUP BY t0.c1, t0.c0, v0.c0, vt0.c0, vt0.c1;
SELECT ALL t0.c1, t0.c0, v0.c0, vt0.c0, vt0.c1 FROM vt0, v0, t0 WHERE ((+ ('Gm.Bw<,'))) GROUP BY t0.c1, t0.c0, v0.c0, vt0.c0, vt0.c1 UNION SELECT ALL t0.c1, t0.c0, v0.c0, vt0.c0, vt0.c1 FROM vt0, v0, t0 WHERE ((NOT ((+ ('Gm.Bw<,'))))) GROUP BY t0.c1, t0.c0, v0.c0, vt0.c0, vt0.c1 UNION SELECT t0.c1, t0.c0, v0.c0, vt0.c0, vt0.c1 FROM vt0, v0, t0 WHERE ((((+ ('Gm.Bw<,'))) ISNULL)) GROUP BY t0.c1, t0.c0, v0.c0, vt0.c0, vt0.c1;
SELECT t0.c1, t0.c0, v0.c0, vt0.c0, vt0.c1 FROM vt0, v0, t0 GROUP BY t0.c1, t0.c0, v0.c0, vt0.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT v0.c0, vt0.c1, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING SUM(((TOTAL(v0.c0)) NOT BETWEEN (vt0.c1) AND (AVG(GROUP_CONCAT(AVG(x'')))))) UNION ALL SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING (NOT (SUM(((TOTAL(v0.c0)) NOT BETWEEN (vt0.c1) AND (AVG(GROUP_CONCAT(AVG(x'')))))))) UNION ALL SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING ((SUM(((TOTAL(v0.c0)) NOT BETWEEN (vt0.c1) AND (AVG(GROUP_CONCAT(AVG(x''))))))) ISNULL);
SELECT * FROM v0, vt0, t0;
SELECT * FROM v0, vt0, t0 WHERE (UNLIKELY(DISTINCT (-6.65630048E8 IN (NULL)))) UNION ALL SELECT * FROM v0, vt0 NOT INDEXED, t0 WHERE ((NOT (UNLIKELY(DISTINCT (-6.65630048E8 IN (NULL)))))) UNION ALL SELECT ALL * FROM v0, vt0, t0 WHERE (((UNLIKELY(DISTINCT (-6.65630048E8 IN (NULL)))) ISNULL));
SELECT * FROM v0, vt0, t0;
SELECT DISTINCT vt0.c0, t0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((((x'0cd2d9e2')) BETWEEN ((t0.c1 COLLATE BINARY)) AND ((HEX(vt0.c0))))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT ((((x'0cd2d9e2')) BETWEEN ((t0.c1 COLLATE BINARY)) AND ((HEX(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((((((x'0cd2d9e2')) BETWEEN ((t0.c1 COLLATE BINARY)) AND ((HEX(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0 FROM t0, vt0;
SELECT ALL v0.c0, vt0.c1, t0.c2, t0.c0, vt0.c0, t0.c1 FROM v0, vt0, t0 GROUP BY v0.c0, vt0.c1, t0.c2, t0.c0, vt0.c0, t0.c1;
SELECT v0.c0, vt0.c1, t0.c2, t0.c0, vt0.c0, t0.c1 FROM v0, vt0, t0 WHERE ((((((0.8853599658288583)AND(NULL)))AND(t0.c1)) IN ())) GROUP BY v0.c0, vt0.c1, t0.c2, t0.c0, vt0.c0, t0.c1 UNION SELECT v0.c0, vt0.c1, t0.c2, t0.c0, vt0.c0, t0.c1 FROM v0, vt0, t0 WHERE ((NOT ((((((0.8853599658288583)AND(NULL)))AND(t0.c1)) IN ())))) GROUP BY v0.c0, vt0.c1, t0.c2, t0.c0, vt0.c0, t0.c1 UNION SELECT v0.c0, vt0.c1, t0.c2, t0.c0, vt0.c0, t0.c1 FROM v0, vt0, t0 WHERE ((((((((0.8853599658288583)AND(NULL)))AND(t0.c1)) IN ())) ISNULL)) GROUP BY v0.c0, vt0.c1, t0.c2, t0.c0, vt0.c0, t0.c1;
SELECT ALL v0.c0, vt0.c1, t0.c2, t0.c0, vt0.c0, t0.c1 FROM v0, vt0, t0 GROUP BY v0.c0, vt0.c1, t0.c2, t0.c0, vt0.c0, t0.c1;
SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM v0, vt0 GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM v0, vt0 GROUP BY v0.c0, vt0.c0, vt0.c1 HAVING ((UPPER(MAX(TOTAL(vt0.c0)))) IS TRUE) UNION ALL SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM v0, vt0 GROUP BY v0.c0, vt0.c0, vt0.c1 HAVING (NOT (((UPPER(MAX(TOTAL(vt0.c0)))) IS TRUE))) UNION ALL SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM v0, vt0 GROUP BY v0.c0, vt0.c0, vt0.c1 HAVING ((((UPPER(MAX(TOTAL(vt0.c0)))) IS TRUE)) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (x'') UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (x''))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((x'') ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT t0.c0 FROM v0 NATURAL JOIN t0;
SELECT DISTINCT t0.c0 FROM v0 NATURAL JOIN t0 WHERE (((((t0.c1)!=(t0.c0)))==(((t0.c1) BETWEEN (v0.c0) AND (t0.c1))))) UNION SELECT DISTINCT t0.c0 FROM v0 NATURAL JOIN t0 WHERE ((NOT (((((t0.c1)<>(t0.c0)))=(((t0.c1) BETWEEN (v0.c0) AND (t0.c1))))))) UNION SELECT DISTINCT t0.c0 FROM v0 NATURAL JOIN t0 WHERE (((((((t0.c1)!=(t0.c0)))==(((t0.c1) BETWEEN (v0.c0) AND (t0.c1))))) ISNULL));
SELECT DISTINCT t0.c0 FROM v0 NATURAL JOIN t0;
SELECT v0.c0 FROM vt0 INNER JOIN v0 ON (vt0.c0 COLLATE NOCASE IN ()) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0 INNER JOIN v0 ON (vt0.c0 COLLATE NOCASE IN ()) WHERE (CASE (NOT (v0.c0))  WHEN vt0.c1 COLLATE BINARY THEN (v0.c0 IN ()) ELSE ((((vt0.c1)AND(v0.c0)))OR(v0.c0)) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0 INNER JOIN v0 ON (vt0.c0 COLLATE NOCASE IN ()) WHERE ((NOT (CASE (NOT (v0.c0))  WHEN vt0.c1 COLLATE BINARY THEN (v0.c0 IN ()) ELSE ((((vt0.c1)AND(v0.c0)))OR(v0.c0)) END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0 INNER JOIN v0 ON (vt0.c0 COLLATE NOCASE IN ()) WHERE (((CASE (NOT (v0.c0))  WHEN vt0.c1 COLLATE BINARY THEN (v0.c0 IN ()) ELSE ((((vt0.c1)AND(v0.c0)))OR(v0.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 INNER JOIN v0 ON (vt0.c0 COLLATE NOCASE IN ()) GROUP BY v0.c0;
SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c0, vt0.c1;
SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c0, vt0.c1 HAVING CASE ((AVG(vt0.c0))-(v0.c0))  WHEN COUNT(*) THEN SUM(vt0.c1) END UNION ALL SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c0, vt0.c1 HAVING (NOT (CASE ((AVG(vt0.c0))-(v0.c0))  WHEN COUNT(*) THEN SUM(vt0.c1) END)) UNION ALL SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c0, vt0.c1 HAVING ((CASE ((AVG(vt0.c0))-(v0.c0))  WHEN COUNT(*) THEN SUM(vt0.c1) END) ISNULL);
SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c0, vt0.c1;
SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c0, vt0.c1 HAVING CASE ((AVG(vt0.c0))-(v0.c0))  WHEN COUNT(*) THEN SUM(vt0.c1) END UNION ALL SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c0, vt0.c1 HAVING (NOT (CASE ((AVG(vt0.c0))-(v0.c0))  WHEN COUNT(*) THEN SUM(vt0.c1) END)) UNION ALL SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c0, vt0.c1 HAVING ((CASE ((AVG(vt0.c0))-(v0.c0))  WHEN COUNT(*) THEN SUM(vt0.c1) END) ISNULL);
SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c0, vt0.c1;
SELECT * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (CAST((~ (v0.c0)) AS REAL)) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (CAST((~ (v0.c0)) AS REAL)))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((CAST((~ (v0.c0)) AS REAL)) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c0, v0.c0, t0.c2, t0.c0, vt0.c1, t0.c1 FROM v0, vt0 INNER JOIN t0 ON CAST(((((v0.c0)OR(vt0.c0)))AND(vt0.c0)) AS INTEGER) GROUP BY vt0.c0, v0.c0, t0.c2, t0.c0, vt0.c1, t0.c1;
SELECT ALL vt0.c0, v0.c0, t0.c2, t0.c0, vt0.c1, t0.c1 FROM v0, vt0 INNER JOIN t0 ON CAST(((((v0.c0)OR(vt0.c0)))AND(vt0.c0)) AS INTEGER) WHERE (((~ (v0.c0)) IN ())) GROUP BY vt0.c0, v0.c0, t0.c2, t0.c0, vt0.c1, t0.c1 UNION SELECT ALL vt0.c0, v0.c0, t0.c2, t0.c0, vt0.c1, t0.c1 FROM v0, vt0 INNER JOIN t0 ON CAST(((((v0.c0)OR(vt0.c0)))AND(vt0.c0)) AS INTEGER) WHERE ((NOT (((~ (v0.c0)) IN ())))) GROUP BY vt0.c0, v0.c0, t0.c2, t0.c0, vt0.c1, t0.c1 UNION SELECT vt0.c0, v0.c0, t0.c2, t0.c0, vt0.c1, t0.c1 FROM v0, vt0 INNER JOIN t0 ON CAST(((((v0.c0)OR(vt0.c0)))AND(vt0.c0)) AS INTEGER) WHERE (((((~ (v0.c0)) IN ())) ISNULL)) GROUP BY vt0.c0, v0.c0, t0.c2, t0.c0, vt0.c1, t0.c1;
SELECT vt0.c0, v0.c0, t0.c2, t0.c0, vt0.c1, t0.c1 FROM v0, vt0 INNER JOIN t0 ON CAST(((((v0.c0)OR(vt0.c0)))AND(vt0.c0)) AS INTEGER) GROUP BY vt0.c0, v0.c0, t0.c2, t0.c0, vt0.c1, t0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((((v0.c0)&(COUNT(NULL))))AND(NULL)))OR(TOTAL(v0.c0))))AND(GROUP_CONCAT(MIN(v0.c0)))))OR(COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((((((((v0.c0)&(COUNT(NULL))))AND(NULL)))OR(TOTAL(v0.c0))))AND(GROUP_CONCAT(MIN(v0.c0)))))OR(COUNT(*))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((((((v0.c0)&(COUNT(NULL))))AND(NULL)))OR(TOTAL(v0.c0))))AND(GROUP_CONCAT(MIN(v0.c0)))))OR(COUNT(*)))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))IS NOT(((((t0.c2)OR(t0.c2)))AND(t0.c1))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))IS NOT(((((t0.c2)OR(t0.c2)))AND(t0.c1))))))) UNION ALL SELECT * FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))IS NOT(((((t0.c2)OR(t0.c2)))AND(t0.c1))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0, v0.c0, CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))<((v0.c0, ((v0.c0) NOT NULL), (((v0.c0))>((v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))<((v0.c0, ((v0.c0) NOT NULL), (((v0.c0))>((v0.c0))))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0, v0.c0, CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))<((v0.c0, ((v0.c0) NOT NULL), (((v0.c0))>((v0.c0))))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((+ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((+ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((+ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c0, v0.c0, vt0.c1, t0.c2 FROM v0, vt0, t0 GROUP BY t0.c0, v0.c0, vt0.c1, t0.c2;
SELECT t0.c0, v0.c0, vt0.c1, t0.c2 FROM v0, vt0, t0 GROUP BY t0.c0, v0.c0, vt0.c1, t0.c2 HAVING COUNT(*) UNION ALL SELECT t0.c0, v0.c0, vt0.c1, t0.c2 FROM v0, vt0, t0 GROUP BY t0.c0, v0.c0, vt0.c1, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, v0.c0, vt0.c1, t0.c2 FROM v0, vt0, t0 GROUP BY t0.c0, v0.c0, vt0.c1, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, v0.c0, vt0.c1, t0.c2 FROM v0, vt0, t0 GROUP BY t0.c0, v0.c0, vt0.c1, t0.c2;
SELECT t0.c0, v0.c0, vt0.c1, t0.c2 FROM v0, vt0, t0 GROUP BY t0.c0, v0.c0, vt0.c1, t0.c2 HAVING COUNT(*) UNION ALL SELECT t0.c0, v0.c0, vt0.c1, t0.c2 FROM v0, vt0, t0 GROUP BY t0.c0, v0.c0, vt0.c1, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, v0.c0, vt0.c1, t0.c2 FROM v0, vt0, t0 GROUP BY t0.c0, v0.c0, vt0.c1, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, v0.c0, vt0.c1, t0.c2 FROM v0, vt0, t0 GROUP BY t0.c0, v0.c0, vt0.c1, t0.c2;
SELECT t0.c0, t0.c2, v0.c0, t0.c1 FROM t0, v0;
SELECT t0.c0, t0.c2, v0.c0, t0.c1 FROM t0, v0 WHERE (CASE CASE t0.c2  WHEN -1.153683107E9 THEN v0.c0 END  WHEN CASE WHEN t0.c0 THEN t0.c1 END THEN ((t0.c2) NOTNULL) ELSE ((((((((t0.c1)AND(t0.c2)))AND(t0.c2)))AND(t0.c1)))AND(t0.c0)) END) UNION ALL SELECT t0.c0, t0.c2, v0.c0, t0.c1 FROM t0, v0 WHERE ((NOT (CASE CASE t0.c2  WHEN -1.153683107E9 THEN v0.c0 END  WHEN CASE WHEN t0.c0 THEN t0.c1 END THEN ((t0.c2) NOTNULL) ELSE ((((((((t0.c1)AND(t0.c2)))AND(t0.c2)))AND(t0.c1)))AND(t0.c0)) END))) UNION ALL SELECT t0.c0, t0.c2, v0.c0, t0.c1 FROM t0, v0 WHERE (((CASE CASE t0.c2  WHEN -1.153683107E9 THEN v0.c0 END  WHEN CASE WHEN t0.c0 THEN t0.c1 END THEN ((t0.c2) NOTNULL) ELSE ((((((((t0.c1)AND(t0.c2)))AND(t0.c2)))AND(t0.c1)))AND(t0.c0)) END) ISNULL));
SELECT t0.c0, t0.c2, v0.c0, t0.c1 FROM t0, v0;
SELECT DISTINCT * FROM vt0, t0 NOT INDEXED, v0;
SELECT DISTINCT * FROM vt0, t0, v0 WHERE ((NOT (t0.c2)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0, t0, v0 WHERE ((NOT ((NOT (t0.c2)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, t0, v0 WHERE ((((NOT (t0.c2)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0, t0 NOT INDEXED, v0;
SELECT ALL vt0.c0, t0.c2, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c2, t0.c0;
SELECT vt0.c0, t0.c2, t0.c0 FROM t0, vt0 WHERE (((((vt0.c1)OR(t0.c0)))OR('S1')) COLLATE NOCASE) GROUP BY vt0.c0, t0.c2, t0.c0 UNION SELECT ALL vt0.c0, t0.c2, t0.c0 FROM t0, vt0 WHERE ((NOT (((((vt0.c1)OR(t0.c0)))OR('S1')) COLLATE NOCASE))) GROUP BY vt0.c0, t0.c2, t0.c0 UNION SELECT ALL vt0.c0, t0.c2, t0.c0 FROM t0, vt0 WHERE (((((((vt0.c1)OR(t0.c0)))OR('S1')) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0, t0.c2, t0.c0;
SELECT ALL vt0.c0, t0.c2, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c2, t0.c0;
SELECT ALL t0.c0 FROM t0 LEFT OUTER JOIN v0 ON (NOT (t0.c2)) COLLATE BINARY RIGHT OUTER JOIN vt0 ON CASE x'b6d4'  WHEN CAST(v0.c0 AS TEXT) THEN '-668017720' END GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 LEFT OUTER JOIN v0 ON (NOT (t0.c2)) COLLATE BINARY RIGHT OUTER JOIN vt0 ON CASE x'b6d4'  WHEN CAST(v0.c0 AS TEXT) THEN '-668017720' END GROUP BY t0.c0 HAVING (((AVG(MAX(MAX(TOTAL(MIN(v0.c0))))) IN ())) IS TRUE) UNION ALL SELECT t0.c0 FROM t0 LEFT OUTER JOIN v0 ON (NOT (t0.c2)) COLLATE BINARY RIGHT OUTER JOIN vt0 ON CASE x'b6d4'  WHEN CAST(v0.c0 AS TEXT) THEN '-668017720' END GROUP BY t0.c0 HAVING (NOT ((((AVG(MAX(MAX(TOTAL(MIN(v0.c0))))) IN ())) IS TRUE))) UNION ALL SELECT ALL t0.c0 FROM t0 NOT INDEXED LEFT OUTER JOIN v0 ON (NOT (t0.c2)) COLLATE BINARY RIGHT OUTER JOIN vt0 ON CASE x'b6d4'  WHEN CAST(v0.c0 AS TEXT) THEN '-668017720' END GROUP BY t0.c0 HAVING (((((AVG(MAX(MAX(TOTAL(MIN(v0.c0))))) IN ())) IS TRUE)) ISNULL);
SELECT ALL t0.c0 FROM t0 LEFT OUTER JOIN v0 ON (NOT (t0.c2)) COLLATE BINARY RIGHT OUTER JOIN vt0 ON CASE x'b6d4'  WHEN CAST(v0.c0 AS TEXT) THEN '-668017720' END GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 LEFT OUTER JOIN v0 ON (NOT (t0.c2)) COLLATE BINARY RIGHT OUTER JOIN vt0 ON CASE x'b6d4'  WHEN CAST(v0.c0 AS TEXT) THEN '-668017720' END GROUP BY t0.c0 HAVING (((AVG(MAX(MAX(TOTAL(MIN(v0.c0))))) IN ())) IS TRUE) UNION ALL SELECT t0.c0 FROM t0 LEFT OUTER JOIN v0 ON (NOT (t0.c2)) COLLATE BINARY RIGHT OUTER JOIN vt0 ON CASE x'b6d4'  WHEN CAST(v0.c0 AS TEXT) THEN '-668017720' END GROUP BY t0.c0 HAVING (NOT ((((AVG(MAX(MAX(TOTAL(MIN(v0.c0))))) IN ())) IS TRUE))) UNION ALL SELECT ALL t0.c0 FROM t0 NOT INDEXED LEFT OUTER JOIN v0 ON (NOT (t0.c2)) COLLATE BINARY RIGHT OUTER JOIN vt0 ON CASE x'b6d4'  WHEN CAST(v0.c0 AS TEXT) THEN '-668017720' END GROUP BY t0.c0 HAVING (((((AVG(MAX(MAX(TOTAL(MIN(v0.c0))))) IN ())) IS TRUE)) ISNULL);
SELECT ALL t0.c0 FROM t0 LEFT OUTER JOIN v0 ON (NOT (t0.c2)) COLLATE BINARY RIGHT OUTER JOIN vt0 ON CASE x'b6d4'  WHEN CAST(v0.c0 AS TEXT) THEN '-668017720' END GROUP BY t0.c0;
SELECT ALL * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE (ABS(((t0.c2) IS FALSE))) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((NOT (ABS(((t0.c2) IS FALSE))))) UNION ALL SELECT ALL * FROM v0, t0 WHERE (((ABS(((t0.c2) IS FALSE))) ISNULL));
SELECT ALL * FROM v0, t0;
SELECT DISTINCT t0.c1, t0.c0, t0.c2 FROM vt0 NOT INDEXED, v0, t0;
SELECT DISTINCT t0.c1, t0.c0, t0.c2 FROM vt0, v0, t0 WHERE (((((vt0.c0)IS(0.23424132342946558)))-('-2066609141'))) UNION SELECT DISTINCT t0.c1, t0.c0, t0.c2 FROM vt0, v0, t0 WHERE ((NOT (((((vt0.c0)IS(0.23424132342946558)))-('-2066609141'))))) UNION SELECT DISTINCT t0.c1, t0.c0, t0.c2 FROM vt0, v0, t0 WHERE (((((((vt0.c0)IS(0.23424132342946558)))-('-2066609141'))) ISNULL));
SELECT DISTINCT t0.c1, t0.c0, t0.c2 FROM vt0 NOT INDEXED, v0, t0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (((0.9316133393903598, (t0.c1 IN ()), t0.c1 COLLATE RTRIM))<((json_type(vt0.c0), ((t0.c1) BETWEEN (vt0.c1) AND (t0.c2)), t0.c0))) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (((0.9316133393903598, (t0.c1 IN ()), t0.c1 COLLATE RTRIM))<((json_type(vt0.c0), ((t0.c1) BETWEEN (vt0.c1) AND (t0.c2)), t0.c0))) GROUP BY t0.c0 HAVING (((t0.c1)) NOT BETWEEN ((AVG(vt0.c1))) AND ((COUNT(vt0.c1)))) UNION ALL SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (((0.9316133393903598, (t0.c1 IN ()), t0.c1 COLLATE RTRIM))<((json_type(vt0.c0), ((t0.c1) BETWEEN (vt0.c1) AND (t0.c2)), t0.c0))) GROUP BY t0.c0 HAVING (NOT ((((t0.c1)) NOT BETWEEN ((AVG(vt0.c1))) AND ((COUNT(vt0.c1)))))) UNION ALL SELECT t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (((0.9316133393903598, (t0.c1 IN ()), t0.c1 COLLATE RTRIM))<((json_type(vt0.c0), ((t0.c1) BETWEEN (vt0.c1) AND (t0.c2)), t0.c0))) GROUP BY t0.c0 HAVING (((((t0.c1)) NOT BETWEEN ((AVG(vt0.c1))) AND ((COUNT(vt0.c1))))) ISNULL);
SELECT t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (((0.9316133393903598, (t0.c1 IN ()), t0.c1 COLLATE RTRIM))<((json_type(vt0.c0), ((t0.c1) BETWEEN (vt0.c1) AND (t0.c2)), t0.c0))) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (((0.9316133393903598, (t0.c1 IN ()), t0.c1 COLLATE RTRIM))<((json_type(vt0.c0), ((t0.c1) BETWEEN (vt0.c1) AND (t0.c2)), t0.c0))) GROUP BY t0.c0 HAVING (((t0.c1)) NOT BETWEEN ((AVG(vt0.c1))) AND ((COUNT(vt0.c1)))) UNION ALL SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (((0.9316133393903598, (t0.c1 IN ()), t0.c1 COLLATE RTRIM))<((json_type(vt0.c0), ((t0.c1) BETWEEN (vt0.c1) AND (t0.c2)), t0.c0))) GROUP BY t0.c0 HAVING (NOT ((((t0.c1)) NOT BETWEEN ((AVG(vt0.c1))) AND ((COUNT(vt0.c1)))))) UNION ALL SELECT t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (((0.9316133393903598, (t0.c1 IN ()), t0.c1 COLLATE RTRIM))<((json_type(vt0.c0), ((t0.c1) BETWEEN (vt0.c1) AND (t0.c2)), t0.c0))) GROUP BY t0.c0 HAVING (((((t0.c1)) NOT BETWEEN ((AVG(vt0.c1))) AND ((COUNT(vt0.c1))))) ISNULL);
SELECT t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (((0.9316133393903598, (t0.c1 IN ()), t0.c1 COLLATE RTRIM))<((json_type(vt0.c0), ((t0.c1) BETWEEN (vt0.c1) AND (t0.c2)), t0.c0))) GROUP BY t0.c0;
SELECT * FROM t0, v0, vt0;
SELECT * FROM t0, v0, vt0 WHERE (((t0.c2)<<(((t0.c2) BETWEEN (t0.c0) AND (v0.c0))))) UNION ALL SELECT * FROM t0, v0, vt0 WHERE ((NOT (((t0.c2)<<(((t0.c2) BETWEEN (t0.c0) AND (v0.c0))))))) UNION ALL SELECT ALL * FROM t0, v0, vt0 WHERE (((((t0.c2)<<(((t0.c2) BETWEEN (t0.c0) AND (v0.c0))))) ISNULL));
SELECT * FROM t0, v0, vt0;
SELECT DISTINCT t0.c1, t0.c0, vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 NOT INDEXED, t0;
SELECT DISTINCT t0.c1, t0.c0, vt0.c1, vt0.c0, v0.c0 FROM vt0, v0, t0 WHERE ((NOT (((t0.c0)*(t0.c1))))) UNION SELECT DISTINCT t0.c1, t0.c0, vt0.c1, vt0.c0, v0.c0 FROM vt0, v0, t0 WHERE ((NOT ((NOT (((t0.c0)*(t0.c1))))))) UNION SELECT DISTINCT t0.c1, t0.c0, vt0.c1, vt0.c0, v0.c0 FROM vt0, v0, t0 WHERE ((((NOT (((t0.c0)*(t0.c1))))) ISNULL));
SELECT DISTINCT t0.c1, t0.c0, vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 NOT INDEXED, t0;
SELECT v0.c0, t0.c2 FROM t0, v0, vt0 GROUP BY v0.c0, t0.c2;
SELECT v0.c0, t0.c2 FROM t0, v0, vt0 WHERE (t0.c1) GROUP BY v0.c0, t0.c2 UNION SELECT ALL v0.c0, t0.c2 FROM t0, v0, vt0 WHERE ((NOT (t0.c1))) GROUP BY v0.c0, t0.c2 UNION SELECT v0.c0, t0.c2 FROM t0, v0 NOT INDEXED, vt0 WHERE (((t0.c1) ISNULL)) GROUP BY v0.c0, t0.c2;
SELECT v0.c0, t0.c2 FROM t0, v0, vt0 GROUP BY v0.c0, t0.c2;
SELECT t0.c2 FROM vt0 CROSS JOIN t0 ON LOWER(((((vt0.c0)AND(v0.c0)))OR(t0.c1))) RIGHT OUTER JOIN v0 ON CASE (NOT (t0.c0))  WHEN (- (v0.c0)) THEN (t0.c0 IN ()) WHEN CASE vt0.c0  WHEN t0.c1 THEN t0.c2 ELSE NULL END THEN ((0.5523023182848433) BETWEEN (v0.c0) AND (vt0.c0)) WHEN ((((((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(v0.c0)) THEN (~ (vt0.c1)) END GROUP BY t0.c2;
SELECT ALL * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c2) ISNULL)) NOT BETWEEN (((t0.c1) ISNULL)) AND (LIKELY(t0.c1)))) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT (((((t0.c2) ISNULL)) NOT BETWEEN (((t0.c1) ISNULL)) AND (LIKELY(t0.c1)))))) UNION ALL SELECT * FROM t0, vt0 WHERE (((((((t0.c2) ISNULL)) NOT BETWEEN (((t0.c1) ISNULL)) AND (LIKELY(t0.c1)))) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((- (x'' COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((- (x'' COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((- (x'' COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0))) NOT NULL)) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)AND(vt0.c0))) NOT NULL)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0))) NOT NULL)) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT t0.c1, t0.c2, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c2, t0.c0, v0.c0;
SELECT ALL t0.c1, t0.c2, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c2, t0.c0, v0.c0 HAVING (NOT (((((v0.c0)AND(t0.c1)))OR(MAX(v0.c0))))) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c2, t0.c0, v0.c0 HAVING (NOT ((NOT (((((v0.c0)AND(t0.c1)))OR(MAX(v0.c0))))))) UNION ALL SELECT t0.c1, t0.c2, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c2, t0.c0, v0.c0 HAVING (((NOT (((((v0.c0)AND(t0.c1)))OR(MAX(v0.c0)))))) ISNULL);
SELECT t0.c1, t0.c2, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c2, t0.c0, v0.c0;
SELECT ALL t0.c1, t0.c2, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c2, t0.c0, v0.c0 HAVING (NOT (((((v0.c0)AND(t0.c1)))OR(MAX(v0.c0))))) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c2, t0.c0, v0.c0 HAVING (NOT ((NOT (((((v0.c0)AND(t0.c1)))OR(MAX(v0.c0))))))) UNION ALL SELECT t0.c1, t0.c2, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c2, t0.c0, v0.c0 HAVING (((NOT (((((v0.c0)AND(t0.c1)))OR(MAX(v0.c0)))))) ISNULL);
SELECT t0.c1, t0.c2, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c2, t0.c0, v0.c0;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((((NULL, v0.c0, 0.37669050675721005)) NOT BETWEEN (((v0.c0 IN ()), (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) AND ((((((v0.c0)OR(v0.c0)))OR(v0.c0)), v0.c0, ((v0.c0)!=(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((((NULL, v0.c0, 0.37669050675721005)) NOT BETWEEN (((v0.c0 IN ()), (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) AND ((((((v0.c0)OR(v0.c0)))OR(v0.c0)), v0.c0, ((v0.c0)<>(v0.c0)))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((NULL, v0.c0, 0.37669050675721005)) NOT BETWEEN (((v0.c0 IN ()), (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) AND ((((((v0.c0)OR(v0.c0)))OR(v0.c0)), v0.c0, ((v0.c0)<>(v0.c0)))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((+ (v0.c0))))<((v0.c0)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((+ (v0.c0))))<((v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((+ (v0.c0))))<((v0.c0)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (NULL) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (NULL))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((NULL) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c1, vt0.c1, t0.c2, t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, vt0.c1, t0.c2, t0.c0, vt0.c0;
SELECT ALL t0.c1, vt0.c1, t0.c2, t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, vt0.c1, t0.c2, t0.c0, vt0.c0 HAVING SUM(SUM(t0.c0)) UNION ALL SELECT t0.c1, vt0.c1, t0.c2, t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, vt0.c1, t0.c2, t0.c0, vt0.c0 HAVING (NOT (SUM(SUM(t0.c0)))) UNION ALL SELECT ALL t0.c1, vt0.c1, t0.c2, t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, vt0.c1, t0.c2, t0.c0, vt0.c0 HAVING ((SUM(SUM(t0.c0))) ISNULL);
SELECT vt0.c1, t0.c0 FROM t0, vt0, v0;
SELECT vt0.c1, t0.c0 FROM t0, vt0, v0 WHERE (NULLIF(CAST(t0.c2 AS TEXT), (t0.c0 IN (v0.c0, t0.c1)))) UNION ALL SELECT ALL vt0.c1, t0.c0 FROM t0, vt0, v0 WHERE ((NOT (NULLIF(CAST(t0.c2 AS TEXT), (t0.c0 IN (v0.c0, t0.c1)))))) UNION ALL SELECT ALL vt0.c1, t0.c0 FROM t0, vt0, v0 WHERE (((NULLIF(CAST(t0.c2 AS TEXT), (t0.c0 IN (v0.c0, t0.c1)))) ISNULL));
SELECT vt0.c1, t0.c0 FROM t0, vt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0)AND(v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0)AND(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)AND(v0.c0))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t0.c1, t0.c0 FROM v0 CROSS JOIN t0 ON HEX(((v0.c0) BETWEEN (t0.c2) AND ('925530249'))) GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM v0 CROSS JOIN t0 ON HEX(((v0.c0) BETWEEN (t0.c2) AND ('925530249'))) WHERE (CAST(((((v0.c0)OR(t0.c2)))OR(v0.c0)) AS NUMERIC)) GROUP BY t0.c1, t0.c0 UNION SELECT t0.c1, t0.c0 FROM v0 CROSS JOIN t0 ON HEX(((v0.c0) BETWEEN (t0.c2) AND ('925530249'))) WHERE ((NOT (CAST(((((v0.c0)OR(t0.c2)))OR(v0.c0)) AS NUMERIC)))) GROUP BY t0.c1, t0.c0 UNION SELECT ALL t0.c1, t0.c0 FROM v0 CROSS JOIN t0 ON HEX(((v0.c0) BETWEEN (t0.c2) AND ('925530249'))) WHERE (((CAST(((((v0.c0)OR(t0.c2)))OR(v0.c0)) AS NUMERIC)) ISNULL)) GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM v0 CROSS JOIN t0 ON HEX(((v0.c0) BETWEEN (t0.c2) AND ('925530249'))) GROUP BY t0.c1, t0.c0;
SELECT t0.c0, t0.c1, vt0.c1, v0.c0, vt0.c0, t0.c2 FROM v0, vt0, t0 GROUP BY t0.c0, t0.c1, vt0.c1, v0.c0, vt0.c0, t0.c2;
SELECT ALL t0.c0, t0.c1, vt0.c1, v0.c0, vt0.c0, t0.c2 FROM v0, vt0, t0 GROUP BY t0.c0, t0.c1, vt0.c1, v0.c0, vt0.c0, t0.c2 HAVING v0.c0 UNION ALL SELECT ALL t0.c0, t0.c1, vt0.c1, v0.c0, vt0.c0, t0.c2 FROM v0, vt0, t0 GROUP BY t0.c0, t0.c1, vt0.c1, v0.c0, vt0.c0, t0.c2 HAVING (NOT (v0.c0)) UNION ALL SELECT t0.c0, t0.c1, vt0.c1, v0.c0, vt0.c0, t0.c2 FROM v0, vt0, t0 GROUP BY t0.c0, t0.c1, vt0.c1, v0.c0, vt0.c0, t0.c2 HAVING ((v0.c0) ISNULL);
SELECT t0.c0, t0.c1, vt0.c1, v0.c0, vt0.c0, t0.c2 FROM v0, vt0, t0 GROUP BY t0.c0, t0.c1, vt0.c1, v0.c0, vt0.c0, t0.c2;
SELECT ALL t0.c0, t0.c1, vt0.c1, v0.c0, vt0.c0, t0.c2 FROM v0, vt0, t0 GROUP BY t0.c0, t0.c1, vt0.c1, v0.c0, vt0.c0, t0.c2 HAVING v0.c0 UNION ALL SELECT ALL t0.c0, t0.c1, vt0.c1, v0.c0, vt0.c0, t0.c2 FROM v0, vt0, t0 GROUP BY t0.c0, t0.c1, vt0.c1, v0.c0, vt0.c0, t0.c2 HAVING (NOT (v0.c0)) UNION ALL SELECT t0.c0, t0.c1, vt0.c1, v0.c0, vt0.c0, t0.c2 FROM v0, vt0, t0 GROUP BY t0.c0, t0.c1, vt0.c1, v0.c0, vt0.c0, t0.c2 HAVING ((v0.c0) ISNULL);
SELECT t0.c0, t0.c1, vt0.c1, v0.c0, vt0.c0, t0.c2 FROM v0, vt0, t0 GROUP BY t0.c0, t0.c1, vt0.c1, v0.c0, vt0.c0, t0.c2;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.c1) UNION ALL SELECT * FROM vt0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT ALL * FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT t0.c1, t0.c0, t0.c2, vt0.c1, vt0.c0 FROM v0, t0, vt0;
SELECT DISTINCT t0.c1, t0.c0, t0.c2, vt0.c1, vt0.c0 FROM v0, t0, vt0 WHERE ((((t0.c2) ISNULL) IN ())) UNION SELECT DISTINCT t0.c1, t0.c0, t0.c2, vt0.c1, vt0.c0 FROM v0, t0, vt0 WHERE ((NOT ((((t0.c2) ISNULL) IN ())))) UNION SELECT DISTINCT t0.c1, t0.c0, t0.c2, vt0.c1, vt0.c0 FROM v0, t0, vt0 WHERE ((((((t0.c2) ISNULL) IN ())) ISNULL));
SELECT DISTINCT t0.c1, t0.c0, t0.c2, vt0.c1, vt0.c0 FROM v0, t0, vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE ABS(v0.c0)  WHEN ((((((((0.10011458381017391)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)) THEN ((v0.c0) IS FALSE) ELSE json_extract(v0.c0, x'', v0.c0, v0.c0) END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE ABS(v0.c0)  WHEN ((((((((0.10011458381017391)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)) THEN ((v0.c0) IS FALSE) ELSE json_extract(v0.c0, x'', v0.c0, v0.c0) END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CASE ABS(v0.c0)  WHEN ((((((((0.10011458381017391)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)) THEN ((v0.c0) IS FALSE) ELSE json_extract(v0.c0, x'', v0.c0, v0.c0) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c1 FROM t0 FULL OUTER JOIN v0 ON 0.5209717533588913 LEFT OUTER JOIN vt0 ON ((t0.c2) NOTNULL) GROUP BY vt0.c1;
SELECT vt0.c1 FROM t0 FULL OUTER JOIN v0 ON 0.5209717533588913 LEFT OUTER JOIN vt0 ON ((t0.c2) NOTNULL) GROUP BY vt0.c1 HAVING COUNT(COUNT(vt0.c0)) UNION ALL SELECT ALL vt0.c1 FROM t0 FULL OUTER JOIN v0 ON 0.5209717533588913 LEFT OUTER JOIN vt0 ON ((t0.c2) NOTNULL) GROUP BY vt0.c1 HAVING (NOT (COUNT(COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c1 FROM t0 FULL OUTER JOIN v0 ON 0.5209717533588913 LEFT OUTER JOIN vt0 ON ((t0.c2) NOTNULL) GROUP BY vt0.c1 HAVING ((COUNT(COUNT(vt0.c0))) ISNULL);
SELECT vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 WHERE ((((vt0.c1) IS TRUE) IN ())) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c1) IS TRUE) IN ())))) UNION ALL SELECT vt0.c1 FROM vt0 NOT INDEXED WHERE ((((((vt0.c1) IS TRUE) IN ())) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT * FROM t0, vt0, v0;
SELECT DISTINCT * FROM t0, vt0, v0 WHERE (CAST(vt0.c1 AS REAL)) UNION SELECT DISTINCT * FROM t0, vt0, v0 WHERE ((NOT (CAST(vt0.c1 AS REAL)))) UNION SELECT DISTINCT * FROM t0, vt0, v0 WHERE (((CAST(vt0.c1 AS REAL)) ISNULL));
SELECT DISTINCT * FROM t0, vt0, v0;
SELECT v0.c0, vt0.c0, t0.c2, t0.c1, vt0.c1, t0.c0 FROM t0, v0, vt0 GROUP BY v0.c0, vt0.c0, t0.c2, t0.c1, vt0.c1, t0.c0;
SELECT ALL v0.c0, vt0.c0, t0.c2, t0.c1, vt0.c1, t0.c0 FROM t0, v0, vt0 WHERE (((CASE WHEN t0.c2 THEN vt0.c0 WHEN v0.c0 THEN NULL WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN '-1877484186' WHEN t0.c1 THEN t0.c2 ELSE vt0.c0 END)LIKE(((v0.c0) BETWEEN (t0.c1) AND (t0.c0))))) GROUP BY v0.c0, vt0.c0, t0.c2, t0.c1, vt0.c1, t0.c0 UNION SELECT ALL v0.c0, vt0.c0, t0.c2, t0.c1, vt0.c1, t0.c0 FROM t0, v0, vt0 WHERE ((NOT (((CASE WHEN t0.c2 THEN vt0.c0 WHEN v0.c0 THEN NULL WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN '-1877484186' WHEN t0.c1 THEN t0.c2 ELSE vt0.c0 END)LIKE(((v0.c0) BETWEEN (t0.c1) AND (t0.c0))))))) GROUP BY v0.c0, vt0.c0, t0.c2, t0.c1, vt0.c1, t0.c0 UNION SELECT ALL v0.c0, vt0.c0, t0.c2, t0.c1, vt0.c1, t0.c0 FROM t0, v0, vt0 WHERE (((((CASE WHEN t0.c2 THEN vt0.c0 WHEN v0.c0 THEN NULL WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN '-1877484186' WHEN t0.c1 THEN t0.c2 ELSE vt0.c0 END)LIKE(((v0.c0) BETWEEN (t0.c1) AND (t0.c0))))) ISNULL)) GROUP BY v0.c0, vt0.c0, t0.c2, t0.c1, vt0.c1, t0.c0;
SELECT v0.c0, vt0.c0, t0.c2, t0.c1, vt0.c1, t0.c0 FROM t0, v0, vt0 GROUP BY v0.c0, vt0.c0, t0.c2, t0.c1, vt0.c1, t0.c0;
SELECT ALL vt0.c0, t0.c0, v0.c0, t0.c2 FROM t0, vt0 INNER JOIN v0 ON CAST(x'' AS TEXT) GROUP BY vt0.c0, t0.c0, v0.c0, t0.c2;
SELECT vt0.c0, t0.c0, v0.c0, t0.c2 FROM t0, vt0 INNER JOIN v0 ON CAST(x'' AS TEXT) GROUP BY vt0.c0, t0.c0, v0.c0, t0.c2 HAVING MAX((((0.8670169438217457, GROUP_CONCAT(TOTAL(t0.c1)), t0.c1)) BETWEEN ((SUM(SUM(t0.c0)), t0.c1, t0.c1)) AND ((vt0.c0, vt0.c0, t0.c1)))) UNION ALL SELECT ALL vt0.c0, t0.c0, v0.c0, t0.c2 FROM t0, vt0 INNER JOIN v0 ON CAST(x'' AS TEXT) GROUP BY vt0.c0, t0.c0, v0.c0, t0.c2 HAVING (NOT (MAX((((0.8670169438217457, GROUP_CONCAT(TOTAL(t0.c1)), t0.c1)) BETWEEN ((SUM(SUM(t0.c0)), t0.c1, t0.c1)) AND ((vt0.c0, vt0.c0, t0.c1)))))) UNION ALL SELECT ALL vt0.c0, t0.c0, v0.c0, t0.c2 FROM t0, vt0 INNER JOIN v0 ON CAST(x'' AS TEXT) GROUP BY vt0.c0, t0.c0, v0.c0, t0.c2 HAVING ((MAX((((0.8670169438217457, GROUP_CONCAT(TOTAL(t0.c1)), t0.c1)) BETWEEN ((SUM(SUM(t0.c0)), t0.c1, t0.c1)) AND ((vt0.c0, vt0.c0, t0.c1))))) ISNULL);
SELECT vt0.c1 FROM vt0, t0, v0;
SELECT ALL vt0.c1 FROM vt0, t0, v0 WHERE (LIKE(t0.c0 COLLATE BINARY, ((v0.c0)AND(t0.c1)))) UNION ALL SELECT vt0.c1 FROM vt0, t0, v0 WHERE ((NOT (LIKE(t0.c0 COLLATE BINARY, ((v0.c0)AND(t0.c1)))))) UNION ALL SELECT ALL vt0.c1 FROM vt0, t0, v0 WHERE (((LIKE(t0.c0 COLLATE BINARY, ((v0.c0)AND(t0.c1)))) ISNULL));
SELECT vt0.c1 FROM vt0, t0, v0;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON NULL;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON NULL WHERE ((CAST(vt0.c1 AS REAL) IN ())) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON NULL WHERE ((NOT ((CAST(vt0.c1 AS REAL) IN ())))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON NULL WHERE ((((CAST(vt0.c1 AS REAL) IN ())) ISNULL));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON NULL;
SELECT vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c0, vt0.c1;
SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 WHERE (((((vt0.c0)<=(vt0.c1)))!=(LIKELIHOOD(v0.c0, 0.7963269476991055)))) GROUP BY vt0.c0, v0.c0, vt0.c1 UNION SELECT vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 WHERE ((NOT (((((vt0.c0)<=(vt0.c1)))<>(LIKELIHOOD(v0.c0, 0.7963269476991055)))))) GROUP BY vt0.c0, v0.c0, vt0.c1 UNION SELECT vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 WHERE (((((((vt0.c0)<=(vt0.c1)))!=(LIKELIHOOD(v0.c0, 0.7963269476991055)))) ISNULL)) GROUP BY vt0.c0, v0.c0, vt0.c1;
SELECT vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c0, vt0.c1;
SELECT ALL v0.c0, t0.c2 FROM t0, v0 GROUP BY v0.c0, t0.c2;
SELECT ALL v0.c0, t0.c2 FROM t0, v0 GROUP BY v0.c0, t0.c2 HAVING t0.c1 UNION ALL SELECT v0.c0, t0.c2 FROM t0, v0 GROUP BY v0.c0, t0.c2 HAVING (NOT (t0.c1)) UNION ALL SELECT v0.c0, t0.c2 FROM t0, v0 GROUP BY v0.c0, t0.c2 HAVING ((t0.c1) ISNULL);
SELECT ALL v0.c0, t0.c2 FROM t0, v0 GROUP BY v0.c0, t0.c2;
SELECT ALL v0.c0, t0.c2 FROM t0, v0 GROUP BY v0.c0, t0.c2 HAVING t0.c1 UNION ALL SELECT v0.c0, t0.c2 FROM t0, v0 GROUP BY v0.c0, t0.c2 HAVING (NOT (t0.c1)) UNION ALL SELECT v0.c0, t0.c2 FROM t0, v0 GROUP BY v0.c0, t0.c2 HAVING ((t0.c1) ISNULL);
SELECT ALL v0.c0, t0.c2 FROM t0, v0 GROUP BY v0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM t0;
SELECT t0.c0, t0.c2 FROM t0 WHERE (((((t0.c2) BETWEEN (t0.c0) AND (t0.c0)))LIKE(((t0.c1) IS TRUE)))) UNION ALL SELECT t0.c0, t0.c2 FROM t0 WHERE ((NOT (((((t0.c2) BETWEEN (t0.c0) AND (t0.c0)))LIKE(((t0.c1) IS TRUE)))))) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 WHERE (((((((t0.c2) BETWEEN (t0.c0) AND (t0.c0)))LIKE(((t0.c1) IS TRUE)))) ISNULL));
SELECT ALL t0.c0, t0.c2 FROM t0;
SELECT DISTINCT t0.c1, t0.c0, t0.c2 FROM t0;
SELECT DISTINCT t0.c1, t0.c0, t0.c2 FROM t0 WHERE (CASE WHEN ((((NULL)OR(t0.c2)))OR(t0.c1)) THEN (+ (t0.c0)) END) UNION SELECT DISTINCT t0.c1, t0.c0, t0.c2 FROM t0 WHERE ((NOT (CASE WHEN ((((NULL)OR(t0.c2)))OR(t0.c1)) THEN (+ (t0.c0)) END))) UNION SELECT DISTINCT t0.c1, t0.c0, t0.c2 FROM t0 WHERE (((CASE WHEN ((((NULL)OR(t0.c2)))OR(t0.c1)) THEN (+ (t0.c0)) END) ISNULL));
SELECT DISTINCT t0.c1, t0.c0, t0.c2 FROM t0;
SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 WHERE (COALESCE((- (t0.c1)), (NOT (t0.c2)))) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM t0 WHERE ((NOT (COALESCE((- (t0.c1)), (NOT (t0.c2)))))) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM t0 WHERE (((COALESCE((- (t0.c1)), (NOT (t0.c2)))) ISNULL)) GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c1 FROM vt0, v0, t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM vt0, v0, t0 GROUP BY t0.c1 HAVING MAX(((t0.c0) BETWEEN (vt0.c1) AND (t0.c0))) UNION ALL SELECT ALL t0.c1 FROM vt0, v0, t0 GROUP BY t0.c1 HAVING (NOT (MAX(((t0.c0) BETWEEN (vt0.c1) AND (t0.c0))))) UNION ALL SELECT ALL t0.c1 FROM vt0, v0, t0 GROUP BY t0.c1 HAVING ((MAX(((t0.c0) BETWEEN (vt0.c1) AND (t0.c0)))) ISNULL);
SELECT ALL t0.c1 FROM vt0, v0, t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM vt0, v0, t0 GROUP BY t0.c1 HAVING MAX(((t0.c0) BETWEEN (vt0.c1) AND (t0.c0))) UNION ALL SELECT ALL t0.c1 FROM vt0, v0, t0 GROUP BY t0.c1 HAVING (NOT (MAX(((t0.c0) BETWEEN (vt0.c1) AND (t0.c0))))) UNION ALL SELECT ALL t0.c1 FROM vt0, v0, t0 GROUP BY t0.c1 HAVING ((MAX(((t0.c0) BETWEEN (vt0.c1) AND (t0.c0)))) ISNULL);
SELECT ALL t0.c1 FROM vt0, v0, t0 GROUP BY t0.c1;
SELECT t0.c0 FROM v0, t0;
SELECT t0.c0 FROM v0, t0 WHERE (t0.c2) UNION ALL SELECT t0.c0 FROM v0, t0 WHERE ((NOT (t0.c2))) UNION ALL SELECT ALL t0.c0 FROM v0, t0 WHERE (((t0.c2) ISNULL));
SELECT t0.c0 FROM v0, t0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM v0, vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM v0, vt0 WHERE ((~ (((((vt0.c1)AND(v0.c0)))OR(v0.c0))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM v0, vt0 WHERE ((NOT ((~ (((((vt0.c1)AND(v0.c0)))OR(v0.c0))))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM v0, vt0 WHERE ((((~ (((((vt0.c1)AND(v0.c0)))OR(v0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM v0, vt0;
SELECT v0.c0, vt0.c0, vt0.c1 FROM v0, vt0 GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT v0.c0, vt0.c0, vt0.c1 FROM v0, vt0 WHERE (-1296939706) GROUP BY v0.c0, vt0.c0, vt0.c1 UNION SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM v0, vt0 WHERE ((NOT (-1296939706))) GROUP BY v0.c0, vt0.c0, vt0.c1 UNION SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM v0, vt0 WHERE (((-1296939706) ISNULL)) GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT v0.c0, vt0.c0, vt0.c1 FROM v0, vt0 GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT t0.c1 FROM v0 LEFT OUTER JOIN t0 ON ((CAST(v0.c0 AS NUMERIC))/('-1184938004')) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM v0 LEFT OUTER JOIN t0 ON ((CAST(v0.c0 AS NUMERIC))/('-1184938004')) GROUP BY t0.c1 HAVING MIN(((((((((v0.c0)AND(AVG(TOTAL(COUNT(*))))))OR(AVG(GROUP_CONCAT(TOTAL(SUM(AVG(SUM(SUM(GROUP_CONCAT(SUM(TOTAL(COUNT(*))))))))))))))AND(t0.c2)))AND(MIN(t0.c2)))) UNION ALL SELECT ALL t0.c1 FROM v0 LEFT OUTER JOIN t0 ON ((CAST(v0.c0 AS NUMERIC))/('-1184938004')) GROUP BY t0.c1 HAVING (NOT (MIN(((((((((v0.c0)AND(AVG(TOTAL(COUNT(*))))))OR(AVG(GROUP_CONCAT(TOTAL(SUM(AVG(SUM(SUM(GROUP_CONCAT(SUM(TOTAL(COUNT(*))))))))))))))AND(t0.c2)))AND(MIN(t0.c2)))))) UNION ALL SELECT t0.c1 FROM v0 LEFT OUTER JOIN t0 ON ((CAST(v0.c0 AS NUMERIC))/('-1184938004')) GROUP BY t0.c1 HAVING ((MIN(((((((((v0.c0)AND(AVG(TOTAL(COUNT(*))))))OR(AVG(GROUP_CONCAT(TOTAL(SUM(AVG(SUM(SUM(GROUP_CONCAT(SUM(TOTAL(COUNT(*))))))))))))))AND(t0.c2)))AND(MIN(t0.c2))))) ISNULL);
SELECT ALL * FROM v0, vt0, t0;
SELECT ALL * FROM v0, vt0, t0 WHERE (CASE ''  WHEN TOTAL_CHANGES() THEN CAST(t0.c1 AS NUMERIC) ELSE json_remove(vt0.c0, t0.c1, vt0.c1, v0.c0) END) UNION ALL SELECT * FROM v0, vt0, t0 WHERE ((NOT (CASE ''  WHEN TOTAL_CHANGES() THEN CAST(t0.c1 AS NUMERIC) ELSE json_remove(vt0.c0, t0.c1, vt0.c1, v0.c0) END))) UNION ALL SELECT ALL * FROM v0, vt0, t0 WHERE (((CASE ''  WHEN TOTAL_CHANGES() THEN CAST(t0.c1 AS NUMERIC) ELSE json_remove(vt0.c0, t0.c1, vt0.c1, v0.c0) END) ISNULL));
SELECT ALL * FROM v0, vt0, t0;
SELECT DISTINCT * FROM vt0, v0 INDEXED BY i81;
SELECT ALL t0.c1, vt0.c0, t0.c2 FROM t0 INNER JOIN vt0 ON t0.c1 FULL OUTER JOIN v0 ON ((((NULLIF(vt0.c0, t0.c1))OR(('-1633119710' IN (v0.c0, t0.c1)))))AND(RTRIM(t0.c0))) GROUP BY t0.c1, vt0.c0, t0.c2;
SELECT t0.c1, vt0.c0, t0.c2 FROM t0 INNER JOIN vt0 ON t0.c1 FULL OUTER JOIN v0 ON ((((NULLIF(vt0.c0, t0.c1))OR(('-1633119710' IN (v0.c0, t0.c1)))))AND(RTRIM(t0.c0))) WHERE (((((((t0.c1)AND(vt0.c0)))AND(t0.c0))) BETWEEN (((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2))) AND (vt0.c1))) GROUP BY t0.c1, vt0.c0, t0.c2 UNION SELECT ALL t0.c1, vt0.c0, t0.c2 FROM t0 INNER JOIN vt0 ON t0.c1 FULL OUTER JOIN v0 ON ((((NULLIF(vt0.c0, t0.c1))OR(('-1633119710' IN (v0.c0, t0.c1)))))AND(RTRIM(t0.c0))) WHERE ((NOT (((((((t0.c1)AND(vt0.c0)))AND(t0.c0))) BETWEEN (((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2))) AND (vt0.c1))))) GROUP BY t0.c1, vt0.c0, t0.c2 UNION SELECT ALL t0.c1, vt0.c0, t0.c2 FROM t0 INNER JOIN vt0 ON t0.c1 FULL OUTER JOIN v0 ON ((((NULLIF(vt0.c0, t0.c1))OR(('-1633119710' IN (v0.c0, t0.c1)))))AND(RTRIM(t0.c0))) WHERE (((((((((t0.c1)AND(vt0.c0)))AND(t0.c0))) BETWEEN (((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2))) AND (vt0.c1))) ISNULL)) GROUP BY t0.c1, vt0.c0, t0.c2;
SELECT ALL t0.c1, vt0.c0, t0.c2 FROM t0 INNER JOIN vt0 ON t0.c1 FULL OUTER JOIN v0 ON ((((NULLIF(vt0.c0, t0.c1))OR(('-1633119710' IN (v0.c0, t0.c1)))))AND(RTRIM(t0.c0))) GROUP BY t0.c1, vt0.c0, t0.c2;
SELECT t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2 HAVING AVG(((AVG(t0.c1))>>(SUM(COUNT(*))))) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2 HAVING (NOT (AVG(((AVG(t0.c1))>>(SUM(COUNT(*))))))) UNION ALL SELECT t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2 HAVING ((AVG(((AVG(t0.c1))>>(SUM(COUNT(*)))))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (((((x'')OR(t0.c2)))OR(t0.c2))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((x'')OR(t0.c2)))OR(t0.c2))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((x'')OR(t0.c2)))OR(t0.c2))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c1, vt0.c0 FROM t0, vt0, v0;
SELECT DISTINCT t0.c1, vt0.c0 FROM t0, vt0, v0 WHERE (((((((t0.c2) NOT NULL))AND(((t0.c1)+(0x6db1e157)))))OR((((t0.c0, t0.c2, vt0.c1))!=((vt0.c0, t0.c1, v0.c0)))))) UNION SELECT DISTINCT t0.c1, vt0.c0 FROM t0, vt0, v0 WHERE ((NOT (((((((t0.c2) NOT NULL))AND(((t0.c1)+(0X6db1e157)))))OR((((t0.c0, t0.c2, vt0.c1))<>((vt0.c0, t0.c1, v0.c0)))))))) UNION SELECT DISTINCT t0.c1, vt0.c0 FROM t0, vt0, v0 WHERE (((((((((t0.c2) NOT NULL))AND(((t0.c1)+(0x6db1e157)))))OR((((t0.c0, t0.c2, vt0.c1))!=((vt0.c0, t0.c1, v0.c0)))))) ISNULL));
SELECT DISTINCT t0.c1, vt0.c0 FROM t0, vt0, v0;
SELECT ALL v0.c0, t0.c2, t0.c1, vt0.c1, t0.c0 FROM vt0 INDEXED BY i67, t0, v0 GROUP BY v0.c0, t0.c2, t0.c1, vt0.c1, t0.c0;
SELECT t0.c2, vt0.c1, vt0.c0, t0.c1, t0.c0 FROM v0, vt0, t0 GROUP BY t0.c2, vt0.c1, vt0.c0, t0.c1, t0.c0;
SELECT t0.c2, vt0.c1, vt0.c0, t0.c1, t0.c0 FROM v0, vt0, t0 GROUP BY t0.c2, vt0.c1, vt0.c0, t0.c1, t0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT t0.c2, vt0.c1, vt0.c0, t0.c1, t0.c0 FROM v0, vt0, t0 GROUP BY t0.c2, vt0.c1, vt0.c0, t0.c1, t0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT t0.c2, vt0.c1, vt0.c0, t0.c1, t0.c0 FROM v0, vt0, t0 NOT INDEXED GROUP BY t0.c2, vt0.c1, vt0.c0, t0.c1, t0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) BETWEEN ((NULL IN (v0.c0))) AND ((~ (x'812eb80f'))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS BLOB)) BETWEEN ((NULL IN (v0.c0))) AND ((~ (x'812eb80f'))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS BLOB)) BETWEEN ((NULL IN (v0.c0))) AND ((~ (x'812eb80f'))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST((~ (v0.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST((~ (v0.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST((~ (v0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL t0.c1, t0.c0, t0.c2, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c1, t0.c0, t0.c2, vt0.c1, vt0.c0;
SELECT t0.c1, t0.c0, t0.c2, vt0.c1, vt0.c0 FROM vt0, t0 WHERE (((t0.c1)GLOB(t0.c0)) COLLATE NOCASE) GROUP BY t0.c1, t0.c0, t0.c2, vt0.c1, vt0.c0 UNION SELECT ALL t0.c1, t0.c0, t0.c2, vt0.c1, vt0.c0 FROM vt0, t0 WHERE ((NOT (((t0.c1)GLOB(t0.c0)) COLLATE NOCASE))) GROUP BY t0.c1, t0.c0, t0.c2, vt0.c1, vt0.c0 UNION SELECT ALL t0.c1, t0.c0, t0.c2, vt0.c1, vt0.c0 FROM vt0, t0 WHERE (((((t0.c1)GLOB(t0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY t0.c1, t0.c0, t0.c2, vt0.c1, vt0.c0;
SELECT ALL t0.c1, t0.c0, t0.c2, vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY t0.c1, t0.c0, t0.c2, vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (AVG(AVG(vt0.c0)) IN ()) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT ((AVG(AVG(vt0.c0)) IN ()))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((AVG(AVG(vt0.c0)) IN ())) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (AVG(AVG(vt0.c0)) IN ()) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT ((AVG(AVG(vt0.c0)) IN ()))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((AVG(AVG(vt0.c0)) IN ())) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT * FROM v0, t0 NATURAL JOIN vt0;
SELECT ALL * FROM v0, t0 NOT INDEXED NATURAL JOIN vt0 WHERE ((((- (t0.c2))) BETWEEN (((((((((((((v0.c0)AND(t0.c2)))AND(t0.c0)))AND(vt0.c1)))AND(t0.c0)))AND(' |b?HGimG')))AND(t0.c1))) AND (SQLITE_SOURCE_ID()))) UNION ALL SELECT ALL * FROM v0, t0 NATURAL JOIN vt0 WHERE ((NOT ((((- (t0.c2))) BETWEEN (((((((((((((v0.c0)AND(t0.c2)))AND(t0.c0)))AND(vt0.c1)))AND(t0.c0)))AND(' |b?HGimG')))AND(t0.c1))) AND (SQLITE_SOURCE_ID()))))) UNION ALL SELECT * FROM v0, t0 NATURAL JOIN vt0 WHERE ((((((- (t0.c2))) BETWEEN (((((((((((((v0.c0)AND(t0.c2)))AND(t0.c0)))AND(vt0.c1)))AND(t0.c0)))AND(' |b?HGimG')))AND(t0.c1))) AND (SQLITE_SOURCE_ID()))) ISNULL));
SELECT * FROM v0, t0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM v0, vt0, t0;
SELECT DISTINCT * FROM v0, vt0, t0 WHERE (((((v0.c0)-(v0.c0)))AND(CASE t0.c0  WHEN NULL THEN v0.c0 END))) UNION SELECT DISTINCT * FROM v0, vt0, t0 WHERE ((NOT (((((v0.c0)-(v0.c0)))AND(CASE t0.c0  WHEN NULL THEN v0.c0 END))))) UNION SELECT DISTINCT * FROM v0, vt0, t0 WHERE (((((((v0.c0)-(v0.c0)))AND(CASE t0.c0  WHEN NULL THEN v0.c0 END))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, t0;
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 WHERE (((CASE WHEN t0.c2 THEN t0.c2 END) NOTNULL)) GROUP BY t0.c0, t0.c1 UNION SELECT ALL t0.c0, t0.c1 FROM t0 WHERE ((NOT (((CASE WHEN t0.c2 THEN t0.c2 END) NOTNULL)))) GROUP BY t0.c0, t0.c1 UNION SELECT ALL t0.c0, t0.c1 FROM t0 WHERE (((((CASE WHEN t0.c2 THEN t0.c2 END) NOTNULL)) ISNULL)) GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT ALL vt0.c0, v0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((((t0.c1) NOT NULL)) IS FALSE) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (((((t0.c1) NOT NULL)) IS FALSE))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((((((t0.c1) NOT NULL)) IS FALSE)) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((((t0.c1) NOT NULL)) IS FALSE) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (((((t0.c1) NOT NULL)) IS FALSE))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((((((t0.c1) NOT NULL)) IS FALSE)) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0, t0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((NULL)*((((vt0.c1))>=((vt0.c1)))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((NULL)*((((vt0.c1))>=((vt0.c1)))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((NULL)*((((vt0.c1))>=((vt0.c1)))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM t0, vt0 FULL OUTER JOIN v0 ON (((vt0.c0)&(vt0.c0)) IN ());
SELECT DISTINCT * FROM t0, vt0 FULL OUTER JOIN v0 ON (((vt0.c0)&(vt0.c0)) IN ()) WHERE ((~ (((vt0.c1)*(t0.c2))))) UNION SELECT DISTINCT * FROM t0, vt0 FULL OUTER JOIN v0 ON (((vt0.c0)&(vt0.c0)) IN ()) WHERE ((NOT ((~ (((vt0.c1)*(t0.c2))))))) UNION SELECT DISTINCT * FROM t0, vt0 FULL OUTER JOIN v0 ON (((vt0.c0)&(vt0.c0)) IN ()) WHERE ((((~ (((vt0.c1)*(t0.c2))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0 FULL OUTER JOIN v0 ON (((vt0.c0)&(vt0.c0)) IN ());
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (CASE (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((x'', vt0.c1, vt0.c1)))  WHEN rtreenode(vt0.c0, '-773444787') THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) END) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (CASE (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((x'', vt0.c1, vt0.c1)))  WHEN rtreenode(vt0.c0, '-773444787') THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) END))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((CASE (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((x'', vt0.c1, vt0.c1)))  WHEN rtreenode(vt0.c0, '-773444787') THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) END) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL t0.c2, vt0.c0, vt0.c1, t0.c0, v0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()) LEFT OUTER JOIN v0 ON NULL GROUP BY t0.c2, vt0.c0, vt0.c1, t0.c0, v0.c0;
SELECT t0.c2, vt0.c0, vt0.c1, t0.c0, v0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()) LEFT OUTER JOIN v0 ON NULL GROUP BY t0.c2, vt0.c0, vt0.c1, t0.c0, v0.c0 HAVING CAST(TOTAL(t0.c1) AS REAL) UNION ALL SELECT t0.c2, vt0.c0, vt0.c1, t0.c0, v0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()) LEFT OUTER JOIN v0 ON NULL GROUP BY t0.c2, vt0.c0, vt0.c1, t0.c0, v0.c0 HAVING (NOT (CAST(TOTAL(t0.c1) AS REAL))) UNION ALL SELECT ALL t0.c2, vt0.c0, vt0.c1, t0.c0, v0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()) LEFT OUTER JOIN v0 ON NULL GROUP BY t0.c2, vt0.c0, vt0.c1, t0.c0, v0.c0 HAVING ((CAST(TOTAL(t0.c1) AS REAL)) ISNULL);
SELECT ALL t0.c2, vt0.c0, vt0.c1, t0.c0, v0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()) LEFT OUTER JOIN v0 ON NULL GROUP BY t0.c2, vt0.c0, vt0.c1, t0.c0, v0.c0;
SELECT t0.c2, vt0.c0, vt0.c1, t0.c0, v0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()) LEFT OUTER JOIN v0 ON NULL GROUP BY t0.c2, vt0.c0, vt0.c1, t0.c0, v0.c0 HAVING CAST(TOTAL(t0.c1) AS REAL) UNION ALL SELECT t0.c2, vt0.c0, vt0.c1, t0.c0, v0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()) LEFT OUTER JOIN v0 ON NULL GROUP BY t0.c2, vt0.c0, vt0.c1, t0.c0, v0.c0 HAVING (NOT (CAST(TOTAL(t0.c1) AS REAL))) UNION ALL SELECT ALL t0.c2, vt0.c0, vt0.c1, t0.c0, v0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()) LEFT OUTER JOIN v0 ON NULL GROUP BY t0.c2, vt0.c0, vt0.c1, t0.c0, v0.c0 HAVING ((CAST(TOTAL(t0.c1) AS REAL)) ISNULL);
SELECT ALL t0.c2, vt0.c0, vt0.c1, t0.c0, v0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()) LEFT OUTER JOIN v0 ON NULL GROUP BY t0.c2, vt0.c0, vt0.c1, t0.c0, v0.c0;
SELECT vt0.c0, t0.c2 FROM v0, vt0, t0;
SELECT vt0.c0, t0.c2 FROM v0, vt0, t0 WHERE (v0.c0) UNION ALL SELECT ALL vt0.c0, t0.c2 FROM v0, vt0, t0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL vt0.c0, t0.c2 FROM v0, vt0, t0 WHERE (((v0.c0) ISNULL));
SELECT vt0.c0, t0.c2 FROM v0, vt0, t0;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON CAST((-1184938004 IN ()) AS TEXT);
SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON CAST((-1184938004 IN ()) AS TEXT) WHERE (0Xfffffffff0dca40a) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON CAST((-1184938004 IN ()) AS TEXT) WHERE ((NOT (0Xfffffffff0dca40a))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON CAST((-1184938004 IN ()) AS TEXT) WHERE (((0Xfffffffff0dca40a) ISNULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON CAST((-1184938004 IN ()) AS TEXT);
SELECT ALL vt0.c0, t0.c0, vt0.c1, t0.c2 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, vt0.c1, t0.c2;
SELECT vt0.c0, t0.c0, vt0.c1, t0.c2 FROM vt0, t0 WHERE ((((vt0.c1)) BETWEEN ((LOWER(t0.c1))) AND ((((((((((t0.c0)OR(t0.c2)))AND('id')))AND(NULL)))OR(vt0.c0)))))) GROUP BY vt0.c0, t0.c0, vt0.c1, t0.c2 UNION SELECT ALL vt0.c0, t0.c0, vt0.c1, t0.c2 FROM vt0, t0 WHERE ((NOT ((((vt0.c1)) BETWEEN ((LOWER(t0.c1))) AND ((((((((((t0.c0)OR(t0.c2)))AND('id')))AND(NULL)))OR(vt0.c0)))))))) GROUP BY vt0.c0, t0.c0, vt0.c1, t0.c2 UNION SELECT ALL vt0.c0, t0.c0, vt0.c1, t0.c2 FROM vt0, t0 WHERE ((((((vt0.c1)) BETWEEN ((LOWER(t0.c1))) AND ((((((((((t0.c0)OR(t0.c2)))AND('id')))AND(NULL)))OR(vt0.c0)))))) ISNULL)) GROUP BY vt0.c0, t0.c0, vt0.c1, t0.c2;
SELECT ALL vt0.c0, t0.c0, vt0.c1, t0.c2 FROM vt0, t0 GROUP BY vt0.c0, t0.c0, vt0.c1, t0.c2;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1 HAVING ((CAST(v0.c0 AS NUMERIC))|(((AVG(COUNT(*)))IS NOT(GROUP_CONCAT(vt0.c1))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((CAST(v0.c0 AS NUMERIC))|(((AVG(COUNT(*)))IS NOT(GROUP_CONCAT(vt0.c1))))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1 HAVING ((((CAST(v0.c0 AS NUMERIC))|(((AVG(COUNT(*)))IS NOT(GROUP_CONCAT(vt0.c1)))))) ISNULL);
SELECT ALL vt0.c0, t0.c1 FROM vt0 INDEXED BY i67, v0, t0;
SELECT DISTINCT t0.c2, t0.c0 FROM t0;
SELECT DISTINCT t0.c2, t0.c0 FROM t0 WHERE ((+ (t0.c0))) UNION SELECT DISTINCT t0.c2, t0.c0 FROM t0 WHERE ((NOT ((+ (t0.c0))))) UNION SELECT DISTINCT t0.c2, t0.c0 FROM t0 WHERE ((((+ (t0.c0))) ISNULL));
SELECT DISTINCT t0.c2, t0.c0 FROM t0;
SELECT v0.c0, vt0.c0, vt0.c1 FROM v0 RIGHT OUTER JOIN vt0 ON (('nowCV')&((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.6021428573022037))))) GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT v0.c0, vt0.c0, vt0.c1 FROM v0 RIGHT OUTER JOIN vt0 ON (('nowCV')&((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.6021428573022037))))) WHERE ((+ ((vt0.c1 IN ())))) GROUP BY v0.c0, vt0.c0, vt0.c1 UNION SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM v0 RIGHT OUTER JOIN vt0 ON (('nowCV')&((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.6021428573022037))))) WHERE ((NOT ((+ ((vt0.c1 IN ())))))) GROUP BY v0.c0, vt0.c0, vt0.c1 UNION SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM v0 RIGHT OUTER JOIN vt0 ON (('nowCV')&((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.6021428573022037))))) WHERE ((((+ ((vt0.c1 IN ())))) ISNULL)) GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT v0.c0, vt0.c0, vt0.c1 FROM v0 RIGHT OUTER JOIN vt0 ON (('nowCV')&((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.6021428573022037))))) GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING UPPER(COUNT(*)) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (UPPER(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((UPPER(COUNT(*))) ISNULL);
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING UPPER(COUNT(*)) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (UPPER(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((UPPER(COUNT(*))) ISNULL);
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (t0.c1) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (t0.c1))) UNION ALL SELECT ALL * FROM t0 WHERE (((t0.c1) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c2)/(t0.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c2)/(t0.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c2)/(t0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 WHERE (t0.c1) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM t0 WHERE ((NOT (t0.c1))) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM t0 WHERE (((t0.c1) ISNULL)) GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((CAST(vt0.c1 AS TEXT)) ISNULL) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((CAST(vt0.c1 AS TEXT)) ISNULL) GROUP BY vt0.c0 HAVING SUM(AVG(GROUP_CONCAT(v0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((CAST(vt0.c1 AS TEXT)) ISNULL) GROUP BY vt0.c0 HAVING (NOT (SUM(AVG(GROUP_CONCAT(v0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((CAST(vt0.c1 AS TEXT)) ISNULL) GROUP BY vt0.c0 HAVING ((SUM(AVG(GROUP_CONCAT(v0.c0)))) ISNULL);
SELECT ALL t0.c0, t0.c1, vt0.c0 FROM t0, vt0;
SELECT ALL t0.c0, t0.c1, vt0.c0 FROM t0, vt0 WHERE (t0.c1) UNION ALL SELECT ALL t0.c0, t0.c1, vt0.c0 FROM t0, vt0 WHERE ((NOT (t0.c1))) UNION ALL SELECT ALL t0.c0, t0.c1, vt0.c0 FROM t0, vt0 WHERE (((t0.c1) ISNULL));
SELECT ALL t0.c0, t0.c1, vt0.c0 FROM t0, vt0;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN v0 ON (((((t0.c0)OR(t0.c2)))AND(v0.c0)) IN ((- (v0.c0)), CAST(t0.c0 AS INTEGER))) LEFT OUTER JOIN vt0 ON ((vt0.c0)||(v0.c0)) COLLATE RTRIM;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN v0 ON (((((t0.c0)OR(t0.c2)))AND(v0.c0)) IN ((- (v0.c0)), CAST(t0.c0 AS INTEGER))) LEFT OUTER JOIN vt0 ON ((vt0.c0)||(v0.c0)) COLLATE RTRIM WHERE ((((- (t0.c2))) IS FALSE)) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN v0 ON (((((t0.c0)OR(t0.c2)))AND(v0.c0)) IN ((- (v0.c0)), CAST(t0.c0 AS INTEGER))) LEFT OUTER JOIN vt0 ON ((vt0.c0)||(v0.c0)) COLLATE RTRIM WHERE ((NOT ((((- (t0.c2))) IS FALSE)))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN v0 ON (((((t0.c0)OR(t0.c2)))AND(v0.c0)) IN ((- (v0.c0)), CAST(t0.c0 AS INTEGER))) LEFT OUTER JOIN vt0 ON ((vt0.c0)||(v0.c0)) COLLATE RTRIM WHERE ((((((- (t0.c2))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN v0 ON (((((t0.c0)OR(t0.c2)))AND(v0.c0)) IN ((- (v0.c0)), CAST(t0.c0 AS INTEGER))) LEFT OUTER JOIN vt0 ON ((vt0.c0)||(v0.c0)) COLLATE RTRIM;
SELECT ALL t0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, v0, t0 WHERE (CAST(((vt0.c0)<=(t0.c2)) AS BLOB)) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM vt0, v0, t0 WHERE ((NOT (CAST(((vt0.c0)<=(t0.c2)) AS BLOB)))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM vt0, v0, t0 WHERE (((CAST(((vt0.c0)<=(t0.c2)) AS BLOB)) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, vt0.c0;
SELECT v0.c0, vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT v0.c0, vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c0, vt0.c1 HAVING SUM(((TOTAL(vt0.c0)) BETWEEN (v0.c0) AND (v0.c0))) UNION ALL SELECT v0.c0, vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c0, vt0.c1 HAVING (NOT (SUM(((TOTAL(vt0.c0)) BETWEEN (v0.c0) AND (v0.c0))))) UNION ALL SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c0, vt0.c1 HAVING ((SUM(((TOTAL(vt0.c0)) BETWEEN (v0.c0) AND (v0.c0)))) ISNULL);
SELECT * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE ('覽㚀%b~̐j뱜') UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT ('覽㚀%b~̐j뱜'))) UNION ALL SELECT * FROM vt0, t0 WHERE ((('覽㚀%b~̐j뱜') ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT t0.c1, v0.c0 FROM t0, v0, vt0;
SELECT DISTINCT t0.c1, v0.c0 FROM t0, v0, vt0 WHERE (json_array_length(((0.29635049021705595)>>(t0.c1)), (((vt0.c0, vt0.c1, t0.c2))=((vt0.c0, vt0.c1, 0.520996076851983))))) UNION SELECT DISTINCT t0.c1, v0.c0 FROM t0, v0, vt0 WHERE ((NOT (json_array_length(((0.29635049021705595)>>(t0.c1)), (((vt0.c0, vt0.c1, t0.c2))==((vt0.c0, vt0.c1, 0.520996076851983))))))) UNION SELECT DISTINCT t0.c1, v0.c0 FROM t0, v0, vt0 WHERE (((json_array_length(((0.29635049021705595)>>(t0.c1)), (((vt0.c0, vt0.c1, t0.c2))=((vt0.c0, vt0.c1, 0.520996076851983))))) ISNULL));
SELECT DISTINCT t0.c1, v0.c0 FROM t0, v0, vt0;
SELECT t0.c1, v0.c0, vt0.c0 FROM t0, v0, vt0 GROUP BY t0.c1, v0.c0, vt0.c0;
SELECT t0.c1, v0.c0, vt0.c0 FROM t0, v0, vt0 WHERE (CAST(CASE WHEN vt0.c1 THEN v0.c0 END AS NUMERIC)) GROUP BY t0.c1, v0.c0, vt0.c0 UNION SELECT ALL t0.c1, v0.c0, vt0.c0 FROM t0, v0, vt0 WHERE ((NOT (CAST(CASE WHEN vt0.c1 THEN v0.c0 END AS NUMERIC)))) GROUP BY t0.c1, v0.c0, vt0.c0 UNION SELECT ALL t0.c1, v0.c0, vt0.c0 FROM t0, v0, vt0 WHERE (((CAST(CASE WHEN vt0.c1 THEN v0.c0 END AS NUMERIC)) ISNULL)) GROUP BY t0.c1, v0.c0, vt0.c0;
SELECT t0.c1, v0.c0, vt0.c0 FROM t0, v0, vt0 GROUP BY t0.c1, v0.c0, vt0.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING COUNT((NOT (COUNT(*)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT((NOT (COUNT(*)))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT((NOT (COUNT(*))))) ISNULL);
SELECT * FROM v0 INNER JOIN t0 ON CAST((NOT (0.6626529487635309)) AS REAL);
SELECT ALL * FROM v0 INNER JOIN t0 ON CAST((NOT (0.6626529487635309)) AS REAL) WHERE (t0.c1) UNION ALL SELECT * FROM v0 INNER JOIN t0 ON CAST((NOT (0.6626529487635309)) AS REAL) WHERE ((NOT (t0.c1))) UNION ALL SELECT ALL * FROM v0 INNER JOIN t0 ON CAST((NOT (0.6626529487635309)) AS REAL) WHERE (((t0.c1) ISNULL));
SELECT * FROM v0 INNER JOIN t0 ON CAST((NOT (0.6626529487635309)) AS REAL);
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((x'')/(((x'') ISNULL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((x'')/(((x'') ISNULL)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((x'')/(((x'') ISNULL)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM t0 WHERE (((t0.c0 COLLATE BINARY)/(t0.c1))) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM t0 WHERE ((NOT (((t0.c0 COLLATE BINARY)/(t0.c1))))) GROUP BY t0.c1, t0.c2 UNION SELECT t0.c1, t0.c2 FROM t0 WHERE (((((t0.c0 COLLATE BINARY)/(t0.c1))) ISNULL)) GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING vt0.c0 UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING vt0.c0 UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL t0.c2, vt0.c0, t0.c0 FROM vt0, v0, t0;
SELECT ALL t0.c2, vt0.c0, t0.c0 FROM vt0, v0, t0 WHERE ('^t') UNION ALL SELECT t0.c2, vt0.c0, t0.c0 FROM vt0, v0, t0 WHERE ((NOT ('^t'))) UNION ALL SELECT ALL t0.c2, vt0.c0, t0.c0 FROM vt0, v0, t0 WHERE ((('^t') ISNULL));
SELECT ALL t0.c2, vt0.c0, t0.c0 FROM vt0, v0, t0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c1)<(vt0.c0)))))AND(vt0.c1))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c1)<(vt0.c0)))))AND(vt0.c1))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c1)<(vt0.c0)))))AND(vt0.c1))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 END, (('0.8163959902487126') IS TRUE), (v0.c0 IN ()), CASE 0x7e718f7e  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((((v0.c0)*(v0.c0)), load_extension(v0.c0, v0.c0), (((v0.c0))==((v0.c0))), ((v0.c0) IS TRUE), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 END, (('0.8163959902487126') IS TRUE), (v0.c0 IN ()), CASE 0x7e718f7e  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((((v0.c0)*(v0.c0)), load_extension(v0.c0, v0.c0), (((v0.c0))==((v0.c0))), ((v0.c0) IS TRUE), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 END, (('0.8163959902487126') IS TRUE), (v0.c0 IN ()), CASE 0X7e718f7e  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((((v0.c0)*(v0.c0)), load_extension(v0.c0, v0.c0), (((v0.c0))==((v0.c0))), ((v0.c0) IS TRUE), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c2 FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c0) NOT BETWEEN ((NOT (t0.c1))) AND (t0.c1)) GROUP BY t0.c2;
SELECT t0.c2 FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c0) NOT BETWEEN ((NOT (t0.c1))) AND (t0.c1)) GROUP BY t0.c2 HAVING SUM(UNLIKELY(t0.c0)) UNION ALL SELECT t0.c2 FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c0) NOT BETWEEN ((NOT (t0.c1))) AND (t0.c1)) GROUP BY t0.c2 HAVING (NOT (SUM(UNLIKELY(t0.c0)))) UNION ALL SELECT ALL t0.c2 FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c0) NOT BETWEEN ((NOT (t0.c1))) AND (t0.c1)) GROUP BY t0.c2 HAVING ((SUM(UNLIKELY(t0.c0))) ISNULL);
SELECT t0.c2 FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c0) NOT BETWEEN ((NOT (t0.c1))) AND (t0.c1)) GROUP BY t0.c2;
SELECT t0.c2 FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c0) NOT BETWEEN ((NOT (t0.c1))) AND (t0.c1)) GROUP BY t0.c2 HAVING SUM(UNLIKELY(t0.c0)) UNION ALL SELECT t0.c2 FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c0) NOT BETWEEN ((NOT (t0.c1))) AND (t0.c1)) GROUP BY t0.c2 HAVING (NOT (SUM(UNLIKELY(t0.c0)))) UNION ALL SELECT ALL t0.c2 FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c0) NOT BETWEEN ((NOT (t0.c1))) AND (t0.c1)) GROUP BY t0.c2 HAVING ((SUM(UNLIKELY(t0.c0))) ISNULL);
SELECT t0.c2 FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c0) NOT BETWEEN ((NOT (t0.c1))) AND (t0.c1)) GROUP BY t0.c2;
SELECT vt0.c1, v0.c0 FROM vt0, v0;
SELECT vt0.c1, v0.c0 FROM vt0, v0 WHERE (((((v0.c0) NOT NULL)) NOTNULL)) UNION ALL SELECT ALL vt0.c1, v0.c0 FROM vt0 NOT INDEXED, v0 WHERE ((NOT (((((v0.c0) NOT NULL)) NOTNULL)))) UNION ALL SELECT vt0.c1, v0.c0 FROM vt0, v0 WHERE (((((((v0.c0) NOT NULL)) NOTNULL)) ISNULL));
SELECT vt0.c1, v0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c1, vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c1, vt0.c0, v0.c0 FROM v0, vt0 WHERE ((((((+ (v0.c0)))OR(x'045f')))OR(LIKE(v0.c0, vt0.c0, 'r')))) UNION SELECT DISTINCT vt0.c1, vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT ((((((+ (v0.c0)))OR(x'045f')))OR(LIKE(v0.c0, vt0.c0, 'r')))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, v0.c0 FROM v0, vt0 WHERE ((((((((+ (v0.c0)))OR(x'045f')))OR(LIKE(v0.c0, vt0.c0, 'r')))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, v0.c0 FROM v0, vt0;
SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 WHERE (CAST(0.30494064372735785 AS BLOB)) GROUP BY v0.c0, vt0.c1, vt0.c0 UNION SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 WHERE ((NOT (CAST(0.30494064372735785 AS BLOB)))) GROUP BY v0.c0, vt0.c1, vt0.c0 UNION SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 WHERE (((CAST(0.30494064372735785 AS BLOB)) ISNULL)) GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT ALL t0.c0, vt0.c1, t0.c2, v0.c0 FROM t0, vt0, v0 GROUP BY t0.c0, vt0.c1, t0.c2, v0.c0;
SELECT ALL t0.c0, vt0.c1, t0.c2, v0.c0 FROM t0, vt0, v0 GROUP BY t0.c0, vt0.c1, t0.c2, v0.c0 HAVING ((LIKELY(NULL))<=((((SUM(t0.c2), MIN(COUNT(AVG(t0.c2))), t0.c0))>=((MIN(vt0.c0), TOTAL(v0.c0), MIN(MAX(TOTAL(MAX(0.5056128742478037))))))))) UNION ALL SELECT t0.c0, vt0.c1, t0.c2, v0.c0 FROM t0, vt0, v0 GROUP BY t0.c0, vt0.c1, t0.c2, v0.c0 HAVING (NOT (((LIKELY(NULL))<=((((SUM(t0.c2), MIN(COUNT(AVG(t0.c2))), t0.c0))>=((MIN(vt0.c0), TOTAL(v0.c0), MIN(MAX(TOTAL(MAX(0.5056128742478037))))))))))) UNION ALL SELECT t0.c0, vt0.c1, t0.c2, v0.c0 FROM t0, vt0, v0 GROUP BY t0.c0, vt0.c1, t0.c2, v0.c0 HAVING ((((LIKELY(NULL))<=((((SUM(t0.c2), MIN(COUNT(AVG(t0.c2))), t0.c0))>=((MIN(vt0.c0), TOTAL(v0.c0), MIN(MAX(TOTAL(MAX(0.5056128742478037)))))))))) ISNULL);
SELECT MIN(((t0.c0)=((((t0.c1)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) FROM v0, t0, vt0 ORDER BY x'' DESC, (vt0.c0 IN (t0.c1)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((t0.c0 IN ()) IN ())) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((t0.c0 IN ()) IN ())))) UNION ALL SELECT * FROM t0 WHERE (((((t0.c0 IN ()) IN ())) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN (((vt0.c0)&(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN (((vt0.c0)&(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN (((vt0.c0)&(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0 WHERE (LAST_INSERT_ROWID()) GROUP BY t0.c2, t0.c1 UNION SELECT t0.c2, t0.c1 FROM t0 WHERE ((NOT (LAST_INSERT_ROWID()))) GROUP BY t0.c2, t0.c1 UNION SELECT ALL t0.c2, t0.c1 FROM t0 WHERE (((LAST_INSERT_ROWID()) ISNULL)) GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON (NOT (((vt0.c0)|(vt0.c1)))) GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON (NOT (((vt0.c0)|(vt0.c1)))) GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON (NOT (((vt0.c0)|(vt0.c1)))) GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON (NOT (((vt0.c0)|(vt0.c1)))) GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))OR(CASE WHEN vt0.c1 THEN vt0.c1 END)))OR((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((CAST(vt0.c0 AS NUMERIC))OR(CASE WHEN vt0.c1 THEN vt0.c1 END)))OR((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((CAST(vt0.c0 AS NUMERIC))OR(CASE WHEN vt0.c1 THEN vt0.c1 END)))OR((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((+ (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((+ (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((+ (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t0.c0, v0.c0, t0.c1, vt0.c1, t0.c2, vt0.c0 FROM vt0, t0, v0 GROUP BY t0.c0, v0.c0, t0.c1, vt0.c1, t0.c2, vt0.c0;
SELECT ALL t0.c0, v0.c0, t0.c1, vt0.c1, t0.c2, vt0.c0 FROM vt0, t0, v0 WHERE (LOWER(((t0.c2) IS TRUE))) GROUP BY t0.c0, v0.c0, t0.c1, vt0.c1, t0.c2, vt0.c0 UNION SELECT t0.c0, v0.c0, t0.c1, vt0.c1, t0.c2, vt0.c0 FROM vt0, t0, v0 WHERE ((NOT (LOWER(((t0.c2) IS TRUE))))) GROUP BY t0.c0, v0.c0, t0.c1, vt0.c1, t0.c2, vt0.c0 UNION SELECT t0.c0, v0.c0, t0.c1, vt0.c1, t0.c2, vt0.c0 FROM vt0, t0, v0 WHERE (((LOWER(((t0.c2) IS TRUE))) ISNULL)) GROUP BY t0.c0, v0.c0, t0.c1, vt0.c1, t0.c2, vt0.c0;
SELECT t0.c0, v0.c0, t0.c1, vt0.c1, t0.c2, vt0.c0 FROM vt0, t0, v0 GROUP BY t0.c0, v0.c0, t0.c1, vt0.c1, t0.c2, vt0.c0;
SELECT v0.c0, t0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, t0.c2;
SELECT ALL v0.c0, t0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, t0.c2 HAVING COUNT(*) UNION ALL SELECT v0.c0, t0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, t0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0, t0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, t0.c2;
SELECT ALL v0.c0, t0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, t0.c2 HAVING COUNT(*) UNION ALL SELECT v0.c0, t0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, t0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0, t0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, t0.c2;
SELECT ALL v0.c0, t0.c1, t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 NATURAL JOIN v0;
SELECT v0.c0, t0.c1, t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 NATURAL JOIN v0 WHERE (SUBSTR(CAST(t0.c0 AS NUMERIC), CAST(t0.c0 AS INTEGER))) UNION ALL SELECT ALL v0.c0, t0.c1, t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 NATURAL JOIN v0 WHERE ((NOT (SUBSTR(CAST(t0.c0 AS NUMERIC), CAST(t0.c0 AS INTEGER))))) UNION ALL SELECT ALL v0.c0, t0.c1, t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 NATURAL JOIN v0 WHERE (((SUBSTR(CAST(t0.c0 AS NUMERIC), CAST(t0.c0 AS INTEGER))) ISNULL));
SELECT ALL v0.c0, t0.c1, t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 NATURAL JOIN v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((('') NOT BETWEEN (v0.c0) AND (v0.c0)))<=(v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((('') NOT BETWEEN (v0.c0) AND (v0.c0)))<=(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((('') NOT BETWEEN (v0.c0) AND (v0.c0)))<=(v0.c0))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL t0.c1 FROM vt0, v0, t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM vt0, v0 NOT INDEXED, t0 WHERE (NULL) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM vt0, v0, t0 WHERE ((NOT (NULL))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM vt0, v0, t0 WHERE (((NULL) ISNULL)) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM vt0, v0, t0 GROUP BY t0.c1;
SELECT ALL v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL t0.c1, v0.c0 FROM t0, v0, vt0;
SELECT ALL t0.c1, v0.c0 FROM t0, v0, vt0 WHERE (CAST(((('-1290804675'))<>((x''))) AS INTEGER)) UNION ALL SELECT ALL t0.c1, v0.c0 FROM t0, v0, vt0 WHERE ((NOT (CAST(((('-1290804675'))!=((x''))) AS INTEGER)))) UNION ALL SELECT t0.c1, v0.c0 FROM t0, v0, vt0 WHERE (((CAST(((('-1290804675'))<>((x''))) AS INTEGER)) ISNULL));
SELECT ALL t0.c1, v0.c0 FROM t0, v0, vt0;
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN v0 ON (+ (t0.c2));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN v0 ON (+ (t0.c2)) WHERE (LIKELY('') COLLATE RTRIM) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN v0 ON (+ (t0.c2)) WHERE ((NOT (LIKELY('') COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN v0 ON (+ (t0.c2)) WHERE (((LIKELY('') COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN v0 ON (+ (t0.c2));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0))>=((((v0.c0)*(v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0))>=((((v0.c0)*(v0.c0)))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((v0.c0))>=((((v0.c0)*(v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, vt0.c1, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1, v0.c0;
SELECT ALL vt0.c0, vt0.c1, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1, v0.c0 HAVING AVG(AVG(COUNT(*))) UNION ALL SELECT ALL vt0.c0, vt0.c1, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1, v0.c0 HAVING (NOT (AVG(AVG(COUNT(*))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1, v0.c0 HAVING ((AVG(AVG(COUNT(*)))) ISNULL);
SELECT MAX((((((v0.c0))==((v0.c0))))&(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) FROM v0 ORDER BY (- ((+ (v0.c0)))) ASC;
SELECT t0.c0, t0.c1, t0.c2 FROM vt0, t0, v0;
SELECT t0.c0, t0.c1, t0.c2 FROM vt0, t0, v0 WHERE ((((+ ('1863596019')))GLOB(CASE t0.c1  WHEN vt0.c0 THEN t0.c2 END))) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2 FROM vt0, t0, v0 WHERE ((NOT ((((+ ('1863596019')))GLOB(CASE t0.c1  WHEN vt0.c0 THEN t0.c2 END))))) UNION ALL SELECT t0.c0, t0.c1, t0.c2 FROM vt0, t0, v0 WHERE ((((((+ ('1863596019')))GLOB(CASE t0.c1  WHEN vt0.c0 THEN t0.c2 END))) ISNULL));
SELECT t0.c0, t0.c1, t0.c2 FROM vt0, t0, v0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c0 IN ()) IN ())))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((vt0.c0 IN ()) IN ())) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT vt0.c1, v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c1, v0.c0, vt0.c0;
SELECT ALL vt0.c1, v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((((((vt0.c1))=((vt0.c0)))) NOTNULL)) GROUP BY vt0.c1, v0.c0, vt0.c0 UNION SELECT ALL vt0.c1, v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((NOT ((((((vt0.c1))=((vt0.c0)))) NOTNULL)))) GROUP BY vt0.c1, v0.c0, vt0.c0 UNION SELECT vt0.c1, v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((((((((vt0.c1))=((vt0.c0)))) NOTNULL)) ISNULL)) GROUP BY vt0.c1, v0.c0, vt0.c0;
SELECT vt0.c1, v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c1, v0.c0, vt0.c0;
SELECT v0.c0 FROM t0, v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0, v0, vt0 GROUP BY v0.c0 HAVING ((NOT (0.4724173860509401)) IN ()) UNION ALL SELECT ALL v0.c0 FROM t0, v0, vt0 GROUP BY v0.c0 HAVING (NOT (((NOT (0.4724173860509401)) IN ()))) UNION ALL SELECT ALL v0.c0 FROM t0, v0, vt0 GROUP BY v0.c0 HAVING ((((NOT (0.4724173860509401)) IN ())) ISNULL);
SELECT v0.c0 FROM t0, v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0, v0, vt0 GROUP BY v0.c0 HAVING ((NOT (0.4724173860509401)) IN ()) UNION ALL SELECT ALL v0.c0 FROM t0, v0, vt0 GROUP BY v0.c0 HAVING (NOT (((NOT (0.4724173860509401)) IN ()))) UNION ALL SELECT ALL v0.c0 FROM t0, v0, vt0 GROUP BY v0.c0 HAVING ((((NOT (0.4724173860509401)) IN ())) ISNULL);
SELECT v0.c0 FROM t0, v0, vt0 GROUP BY v0.c0;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (json(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE -7.5838748E7 END)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (json(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE -7.5838748E7 END)))) UNION ALL SELECT ALL * FROM v0 WHERE (((json(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE -7.5838748E7 END)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM v0, vt0 WHERE ('|3{\l%t') UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM v0, vt0 WHERE ((NOT ('|3{\l%t'))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM v0, vt0 WHERE ((('|3{\l%t') ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM v0, vt0;
SELECT ALL t0.c1 FROM t0, vt0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0, vt0 WHERE ((NOT (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(t0.c2)))OR(t0.c1))))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t0, vt0 WHERE ((NOT ((NOT (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(t0.c2)))OR(t0.c1))))))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t0, vt0 WHERE ((((NOT (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(t0.c2)))OR(t0.c1))))) ISNULL)) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0, vt0 GROUP BY t0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(((v0.c0)OR(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(((v0.c0)OR(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(((v0.c0)OR(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(((v0.c0)OR(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(((v0.c0)OR(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(((v0.c0)OR(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0, vt0, t0;
SELECT * FROM v0, vt0, t0 WHERE (((((t0.c0)%(t0.c2))) BETWEEN (((((((((((((t0.c2)AND(v0.c0)))AND(vt0.c0)))AND(x'')))OR(t0.c2)))AND(0.4053318286574722)))OR(vt0.c1))) AND (((-134615003) NOTNULL)))) UNION ALL SELECT * FROM v0, vt0, t0 WHERE ((NOT (((((t0.c0)%(t0.c2))) BETWEEN (((((((((((((t0.c2)AND(v0.c0)))AND(vt0.c0)))AND(x'')))OR(t0.c2)))AND(0.4053318286574722)))OR(vt0.c1))) AND (((-134615003) NOTNULL)))))) UNION ALL SELECT * FROM v0, vt0, t0 WHERE (((((((t0.c0)%(t0.c2))) BETWEEN (((((((((((((t0.c2)AND(v0.c0)))AND(vt0.c0)))AND(x'')))OR(t0.c2)))AND(0.4053318286574722)))OR(vt0.c1))) AND (((-134615003) NOTNULL)))) ISNULL));
SELECT * FROM v0, vt0, t0;
SELECT DISTINCT * FROM v0, vt0, t0;
SELECT DISTINCT * FROM v0, vt0, t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM v0, vt0, t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM v0, vt0, t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM v0, vt0, t0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 WHERE (vt0.c1) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((NOT (vt0.c1))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE (((vt0.c1) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT vt0.c1, vt0.c0, t0.c1 FROM t0, vt0, v0 GROUP BY vt0.c1, vt0.c0, t0.c1;
SELECT ALL vt0.c1, vt0.c0, t0.c1 FROM t0, vt0, v0 GROUP BY vt0.c1, vt0.c0, t0.c1 HAVING COUNT(*) COLLATE RTRIM UNION ALL SELECT ALL vt0.c1, vt0.c0, t0.c1 FROM t0, vt0, v0 GROUP BY vt0.c1, vt0.c0, t0.c1 HAVING (NOT (COUNT(*) COLLATE RTRIM)) UNION ALL SELECT vt0.c1, vt0.c0, t0.c1 FROM t0, vt0, v0 GROUP BY vt0.c1, vt0.c0, t0.c1 HAVING ((COUNT(*) COLLATE RTRIM) ISNULL);
SELECT vt0.c1, vt0.c0, t0.c1 FROM t0, vt0, v0 GROUP BY vt0.c1, vt0.c0, t0.c1;
SELECT ALL vt0.c1, vt0.c0, t0.c1 FROM t0, vt0, v0 GROUP BY vt0.c1, vt0.c0, t0.c1 HAVING COUNT(*) COLLATE RTRIM UNION ALL SELECT ALL vt0.c1, vt0.c0, t0.c1 FROM t0, vt0, v0 GROUP BY vt0.c1, vt0.c0, t0.c1 HAVING (NOT (COUNT(*) COLLATE RTRIM)) UNION ALL SELECT vt0.c1, vt0.c0, t0.c1 FROM t0, vt0, v0 GROUP BY vt0.c1, vt0.c0, t0.c1 HAVING ((COUNT(*) COLLATE RTRIM) ISNULL);
SELECT vt0.c1, vt0.c0, t0.c1 FROM t0, vt0, v0 GROUP BY vt0.c1, vt0.c0, t0.c1;
SELECT ALL SUM(((IFNULL(DISTINCT t0.c1, t0.c1)) NOT BETWEEN (((t0.c2) ISNULL)) AND (((v0.c0) NOT BETWEEN (t0.c0) AND ('ea'))))) FROM v0, t0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((((((~ (vt0.c1)))AND((((vt0.c1))<=((''))))))OR(((('')) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((((~ (vt0.c1)))AND((((vt0.c1))<=((''))))))OR(((('')) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((((~ (vt0.c1)))AND((((vt0.c1))<=((''))))))OR(((('')) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM v0 INNER JOIN t0 ON 0.9094330867529041;
SELECT DISTINCT * FROM v0 INNER JOIN t0 ON 0.9094330867529041 WHERE (((t0.c0) NOT BETWEEN (t0.c2 COLLATE RTRIM) AND (x''))) UNION SELECT DISTINCT * FROM v0 INNER JOIN t0 ON 0.9094330867529041 WHERE ((NOT (((t0.c0) NOT BETWEEN (t0.c2 COLLATE RTRIM) AND (x''))))) UNION SELECT DISTINCT * FROM v0 INNER JOIN t0 ON 0.9094330867529041 WHERE (((((t0.c0) NOT BETWEEN (t0.c2 COLLATE RTRIM) AND (x''))) ISNULL));
SELECT DISTINCT * FROM v0 INNER JOIN t0 ON 0.9094330867529041;
SELECT t0.c0, t0.c1, t0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, t0.c1, t0.c2, vt0.c0;
SELECT t0.c0, t0.c1, t0.c2, vt0.c0 FROM t0, vt0 WHERE (((CAST(vt0.c1 AS INTEGER)) BETWEEN (((vt0.c0) BETWEEN (t0.c1) AND (vt0.c1))) AND ((~ (t0.c1))))) GROUP BY t0.c0, t0.c1, t0.c2, vt0.c0 UNION SELECT ALL t0.c0, t0.c1, t0.c2, vt0.c0 FROM t0, vt0 WHERE ((NOT (((CAST(vt0.c1 AS INTEGER)) BETWEEN (((vt0.c0) BETWEEN (t0.c1) AND (vt0.c1))) AND ((~ (t0.c1))))))) GROUP BY t0.c0, t0.c1, t0.c2, vt0.c0 UNION SELECT t0.c0, t0.c1, t0.c2, vt0.c0 FROM t0, vt0 WHERE (((((CAST(vt0.c1 AS INTEGER)) BETWEEN (((vt0.c0) BETWEEN (t0.c1) AND (vt0.c1))) AND ((~ (t0.c1))))) ISNULL)) GROUP BY t0.c0, t0.c1, t0.c2, vt0.c0;
SELECT t0.c0, t0.c1, t0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, t0.c1, t0.c2, vt0.c0;
SELECT ALL t0.c1, t0.c0, t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c0, t0.c2, v0.c0;
SELECT t0.c1, t0.c0, t0.c2, v0.c0 FROM v0, t0 NOT INDEXED GROUP BY t0.c1, t0.c0, t0.c2, v0.c0 HAVING GROUP_CONCAT(MAX(t0.c2)) UNION ALL SELECT t0.c1, t0.c0, t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c0, t0.c2, v0.c0 HAVING (NOT (GROUP_CONCAT(MAX(t0.c2)))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c0, t0.c2, v0.c0 HAVING ((GROUP_CONCAT(MAX(t0.c2))) ISNULL);
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE (CASE WHEN ((t0.c2) NOT NULL) THEN LIKELY('-259167061') ELSE CAST(NULL AS NUMERIC) END) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT (CASE WHEN ((t0.c2) NOT NULL) THEN LIKELY('-259167061') ELSE CAST(NULL AS NUMERIC) END))) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE (((CASE WHEN ((t0.c2) NOT NULL) THEN LIKELY('-259167061') ELSE CAST(NULL AS NUMERIC) END) ISNULL));
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (LIKELIHOOD(DISTINCT ((v0.c0)==(v0.c0)), 0.19100144348980364)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (LIKELIHOOD(DISTINCT ((v0.c0)=(v0.c0)), 0.19100144348980364)))) UNION SELECT DISTINCT * FROM v0 WHERE (((LIKELIHOOD(DISTINCT ((v0.c0)=(v0.c0)), 0.19100144348980364)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t0.c2 FROM t0 LEFT OUTER JOIN v0 ON t0.c1 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 LEFT OUTER JOIN v0 ON t0.c1 WHERE (((((((((t0.c2 COLLATE NOCASE)OR(((v0.c0) NOT BETWEEN (t0.c0) AND (NULL)))))AND((v0.c0 IN ()))))OR(((t0.c0)-('-1353030641')))))AND(t0.c2 COLLATE BINARY))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 LEFT OUTER JOIN v0 ON t0.c1 WHERE ((NOT (((((((((t0.c2 COLLATE NOCASE)OR(((v0.c0) NOT BETWEEN (t0.c0) AND (NULL)))))AND((v0.c0 IN ()))))OR(((t0.c0)-('-1353030641')))))AND(t0.c2 COLLATE BINARY))))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 LEFT OUTER JOIN v0 ON t0.c1 WHERE (((((((((((t0.c2 COLLATE NOCASE)OR(((v0.c0) NOT BETWEEN (t0.c0) AND (NULL)))))AND((v0.c0 IN ()))))OR(((t0.c0)-('-1353030641')))))AND(t0.c2 COLLATE BINARY))) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM t0 LEFT OUTER JOIN v0 ON t0.c1 GROUP BY t0.c2;
SELECT t0.c1, vt0.c1, t0.c2, t0.c0, vt0.c0 FROM t0, vt0 INNER JOIN v0 ON (+ (t0.c1)) GROUP BY t0.c1, vt0.c1, t0.c2, t0.c0, vt0.c0;
SELECT t0.c1, vt0.c1, t0.c2, t0.c0, vt0.c0 FROM t0, vt0 INNER JOIN v0 ON (+ (t0.c1)) GROUP BY t0.c1, vt0.c1, t0.c2, t0.c0, vt0.c0 HAVING MAX(CHANGES()) UNION ALL SELECT t0.c1, vt0.c1, t0.c2, t0.c0, vt0.c0 FROM t0, vt0 INNER JOIN v0 ON (+ (t0.c1)) GROUP BY t0.c1, vt0.c1, t0.c2, t0.c0, vt0.c0 HAVING (NOT (MAX(CHANGES()))) UNION ALL SELECT t0.c1, vt0.c1, t0.c2, t0.c0, vt0.c0 FROM t0, vt0 INNER JOIN v0 ON (+ (t0.c1)) GROUP BY t0.c1, vt0.c1, t0.c2, t0.c0, vt0.c0 HAVING ((MAX(CHANGES())) ISNULL);
SELECT t0.c1, vt0.c1, t0.c2, t0.c0, vt0.c0 FROM t0, vt0 INNER JOIN v0 ON (+ (t0.c1)) GROUP BY t0.c1, vt0.c1, t0.c2, t0.c0, vt0.c0;
SELECT t0.c1, vt0.c1, t0.c2, t0.c0, vt0.c0 FROM t0, vt0 INNER JOIN v0 ON (+ (t0.c1)) GROUP BY t0.c1, vt0.c1, t0.c2, t0.c0, vt0.c0 HAVING MAX(CHANGES()) UNION ALL SELECT t0.c1, vt0.c1, t0.c2, t0.c0, vt0.c0 FROM t0, vt0 INNER JOIN v0 ON (+ (t0.c1)) GROUP BY t0.c1, vt0.c1, t0.c2, t0.c0, vt0.c0 HAVING (NOT (MAX(CHANGES()))) UNION ALL SELECT t0.c1, vt0.c1, t0.c2, t0.c0, vt0.c0 FROM t0, vt0 INNER JOIN v0 ON (+ (t0.c1)) GROUP BY t0.c1, vt0.c1, t0.c2, t0.c0, vt0.c0 HAVING ((MAX(CHANGES())) ISNULL);
SELECT t0.c1, vt0.c1, t0.c2, t0.c0, vt0.c0 FROM t0, vt0 INNER JOIN v0 ON (+ (t0.c1)) GROUP BY t0.c1, vt0.c1, t0.c2, t0.c0, vt0.c0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (((t0.c1)>=(x'b219')) COLLATE BINARY) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((t0.c1)>=(x'b219')) COLLATE BINARY))) UNION ALL SELECT * FROM t0 WHERE (((((t0.c1)>=(x'b219')) COLLATE BINARY) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((- ((((v0.c0))<((v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((- ((((v0.c0))<((v0.c0)))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((- ((((v0.c0))<((v0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0;
SELECT v0.c0, t0.c2, t0.c0 FROM t0, v0 WHERE (CASE t0.c2 COLLATE RTRIM  WHEN ((((((((t0.c0)OR(t0.c2)))OR(4.0724044E8)))AND(t0.c0)))OR(v0.c0)) THEN 0Xffffffffd82edbc8 ELSE ((v0.c0)+(t0.c2)) END) GROUP BY v0.c0, t0.c2, t0.c0 UNION SELECT ALL v0.c0, t0.c2, t0.c0 FROM t0, v0 WHERE ((NOT (CASE t0.c2 COLLATE RTRIM  WHEN ((((((((t0.c0)OR(t0.c2)))OR(4.0724044E8)))AND(t0.c0)))OR(v0.c0)) THEN 0xffffffffd82edbc8 ELSE ((v0.c0)+(t0.c2)) END))) GROUP BY v0.c0, t0.c2, t0.c0 UNION SELECT v0.c0, t0.c2, t0.c0 FROM t0, v0 WHERE (((CASE t0.c2 COLLATE RTRIM  WHEN ((((((((t0.c0)OR(t0.c2)))OR(4.0724044E8)))AND(t0.c0)))OR(v0.c0)) THEN 0Xffffffffd82edbc8 ELSE ((v0.c0)+(t0.c2)) END) ISNULL)) GROUP BY v0.c0, t0.c2, t0.c0;
SELECT v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0;
SELECT ALL t0.c1 FROM t0 INDEXED BY i87 GROUP BY t0.c1;
SELECT ALL * FROM vt0, v0, t0;
SELECT * FROM vt0, v0, t0 WHERE (vt0.c1) UNION ALL SELECT * FROM vt0, v0, t0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT * FROM vt0, v0, t0 WHERE (((vt0.c1) ISNULL));
SELECT ALL * FROM vt0, v0, t0;
SELECT DISTINCT * FROM vt0, v0, t0;
SELECT DISTINCT * FROM vt0, v0 NOT INDEXED, t0 WHERE (0.33662555106222547) UNION SELECT DISTINCT * FROM vt0, v0, t0 WHERE ((NOT (0.33662555106222547))) UNION SELECT DISTINCT * FROM vt0, v0, t0 WHERE (((0.33662555106222547) ISNULL));
SELECT DISTINCT * FROM vt0, v0, t0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0) NOT BETWEEN (v0.c0) AND ('&T'))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((NOT (((v0.c0) NOT BETWEEN (v0.c0) AND ('&T'))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((NOT (((v0.c0) NOT BETWEEN (v0.c0) AND ('&T'))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (~ (((COUNT(*))<(vt0.c1)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT ((~ (((COUNT(*))<(vt0.c1)))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (((~ (((COUNT(*))<(vt0.c1))))) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (~ (((COUNT(*))<(vt0.c1)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT ((~ (((COUNT(*))<(vt0.c1)))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (((~ (((COUNT(*))<(vt0.c1))))) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL * FROM t0, v0, vt0;
SELECT * FROM t0, v0, vt0 NOT INDEXED WHERE (CASE WHEN CAST(t0.c0 AS INTEGER) THEN vt0.c0 WHEN ((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c1)) THEN (t0.c0 IN (vt0.c0)) WHEN ((((((((t0.c2)OR(t0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(t0.c0)) THEN ((vt0.c0)AND(NULL)) END) UNION ALL SELECT * FROM t0, v0, vt0 WHERE ((NOT (CASE WHEN CAST(t0.c0 AS INTEGER) THEN vt0.c0 WHEN ((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c1)) THEN (t0.c0 IN (vt0.c0)) WHEN ((((((((t0.c2)OR(t0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(t0.c0)) THEN ((vt0.c0)AND(NULL)) END))) UNION ALL SELECT ALL * FROM t0, v0, vt0 WHERE (((CASE WHEN CAST(t0.c0 AS INTEGER) THEN vt0.c0 WHEN ((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c1)) THEN (t0.c0 IN (vt0.c0)) WHEN ((((((((t0.c2)OR(t0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(t0.c0)) THEN ((vt0.c0)AND(NULL)) END) ISNULL));
SELECT ALL * FROM t0, v0, vt0;
SELECT DISTINCT t0.c2, vt0.c1, v0.c0 FROM v0, t0, vt0;
SELECT DISTINCT t0.c2, vt0.c1, v0.c0 FROM v0, t0, vt0 WHERE (LOWER(DISTINCT (t0.c2 IN ()))) UNION SELECT DISTINCT t0.c2, vt0.c1, v0.c0 FROM v0, t0, vt0 WHERE ((NOT (LOWER(DISTINCT (t0.c2 IN ()))))) UNION SELECT DISTINCT t0.c2, vt0.c1, v0.c0 FROM v0, t0, vt0 WHERE (((LOWER(DISTINCT (t0.c2 IN ()))) ISNULL));
SELECT DISTINCT t0.c2, vt0.c1, v0.c0 FROM v0, t0, vt0;
SELECT t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM v0, t0 WHERE ((+ (CAST(t0.c1 AS NUMERIC)))) GROUP BY t0.c0, t0.c1 UNION SELECT t0.c0, t0.c1 FROM v0, t0 WHERE ((NOT ((+ (CAST(t0.c1 AS NUMERIC)))))) GROUP BY t0.c0, t0.c1 UNION SELECT ALL t0.c0, t0.c1 FROM v0, t0 WHERE ((((+ (CAST(t0.c1 AS NUMERIC)))) ISNULL)) GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c0, t0.c1;
SELECT vt0.c1, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((NOT (vt0.c0))) NOTNULL) GROUP BY vt0.c1, v0.c0;
SELECT vt0.c1, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((NOT (vt0.c0))) NOTNULL) GROUP BY vt0.c1, v0.c0 HAVING MIN(((((vt0.c1)OR(TOTAL(vt0.c0))))OR(v0.c0)), ((vt0.c0)>>(AVG(COUNT(*)))), v0.c0, GROUP_CONCAT(MIN(GROUP_CONCAT(v0.c0)))) UNION ALL SELECT vt0.c1, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((NOT (vt0.c0))) NOTNULL) GROUP BY vt0.c1, v0.c0 HAVING (NOT (MIN(((((vt0.c1)OR(TOTAL(vt0.c0))))OR(v0.c0)), ((vt0.c0)>>(AVG(COUNT(*)))), v0.c0, GROUP_CONCAT(MIN(GROUP_CONCAT(v0.c0)))))) UNION ALL SELECT vt0.c1, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((NOT (vt0.c0))) NOTNULL) GROUP BY vt0.c1, v0.c0 HAVING ((MIN(((((vt0.c1)OR(TOTAL(vt0.c0))))OR(v0.c0)), ((vt0.c0)>>(AVG(COUNT(*)))), v0.c0, GROUP_CONCAT(MIN(GROUP_CONCAT(v0.c0))))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((((NOT (v0.c0)))!=(((v0.c0)<>(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((NOT (v0.c0)))<>(((v0.c0)<>(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((((NOT (v0.c0)))!=(((v0.c0)<>(v0.c0))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CAST(((t0.c2) IS FALSE) AS INTEGER)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CAST(((t0.c2) IS FALSE) AS INTEGER)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CAST(((t0.c2) IS FALSE) AS INTEGER)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c1, t0.c0 UNION SELECT ALL t0.c1, t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c1, t0.c0 UNION SELECT t0.c1, t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT ALL vt0.c0, t0.c2, vt0.c1, t0.c1 FROM t0, v0, vt0 GROUP BY vt0.c0, t0.c2, vt0.c1, t0.c1;
SELECT ALL vt0.c0, t0.c2, vt0.c1, t0.c1 FROM t0, v0, vt0 GROUP BY vt0.c0, t0.c2, vt0.c1, t0.c1 HAVING AVG(GROUP_CONCAT(MAX(vt0.c1))) UNION ALL SELECT vt0.c0, t0.c2, vt0.c1, t0.c1 FROM t0, v0, vt0 GROUP BY vt0.c0, t0.c2, vt0.c1, t0.c1 HAVING (NOT (AVG(GROUP_CONCAT(MAX(vt0.c1))))) UNION ALL SELECT vt0.c0, t0.c2, vt0.c1, t0.c1 FROM t0, v0, vt0 GROUP BY vt0.c0, t0.c2, vt0.c1, t0.c1 HAVING ((AVG(GROUP_CONCAT(MAX(vt0.c1)))) ISNULL);
SELECT ALL SUM(vt0.c1) FROM vt0, v0 ORDER BY (((v0.c0 COLLATE BINARY, ((((x'')OR(vt0.c1)))OR(vt0.c0)), (+ (vt0.c0))))>((v0.c0, CAST(v0.c0 AS BLOB), (- ('0.46270811836847947')))));
SELECT ALL v0.c0, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON ((((t0.c1 COLLATE BINARY)OR(((t0.c1)-(t0.c1)))))OR((NOT (t0.c0))));
SELECT v0.c0, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON ((((t0.c1 COLLATE BINARY)OR(((t0.c1)-(t0.c1)))))OR((NOT (t0.c0)))) WHERE (t0.c1) UNION ALL SELECT v0.c0, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON ((((t0.c1 COLLATE BINARY)OR(((t0.c1)-(t0.c1)))))OR((NOT (t0.c0)))) WHERE ((NOT (t0.c1))) UNION ALL SELECT ALL v0.c0, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON ((((t0.c1 COLLATE BINARY)OR(((t0.c1)-(t0.c1)))))OR((NOT (t0.c0)))) WHERE (((t0.c1) ISNULL));
SELECT ALL v0.c0, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON ((((t0.c1 COLLATE BINARY)OR(((t0.c1)-(t0.c1)))))OR((NOT (t0.c0))));
SELECT DISTINCT vt0.c0, t0.c2 FROM vt0, v0, t0;
SELECT DISTINCT vt0.c0, t0.c2 FROM vt0, v0, t0 WHERE (((((((((((v0.c0)OR(vt0.c0)))AND(t0.c0)))OR(t0.c0)))AND(0.46093844438882825)))<(json_extract(t0.c2, t0.c2)))) UNION SELECT DISTINCT vt0.c0, t0.c2 FROM vt0, v0, t0 WHERE ((NOT (((((((((((v0.c0)OR(vt0.c0)))AND(t0.c0)))OR(t0.c0)))AND(0.46093844438882825)))<(json_extract(t0.c2, t0.c2)))))) UNION SELECT DISTINCT vt0.c0, t0.c2 FROM vt0, v0, t0 WHERE (((((((((((((v0.c0)OR(vt0.c0)))AND(t0.c0)))OR(t0.c0)))AND(0.46093844438882825)))<(json_extract(t0.c2, t0.c2)))) ISNULL));
SELECT DISTINCT vt0.c0, t0.c2 FROM vt0, v0, t0;
SELECT ALL t0.c2, vt0.c1, vt0.c0, t0.c1 FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c1)LIKE(t0.c2)) IN ()) GROUP BY t0.c2, vt0.c1, vt0.c0, t0.c1;
SELECT ALL t0.c2, vt0.c1, vt0.c0, t0.c1 FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c1)LIKE(t0.c2)) IN ()) WHERE ((((((t0.c2 IN (vt0.c1)))OR(CASE WHEN x'' THEN t0.c0 ELSE vt0.c1 END)))AND((((x'ebc1', t0.c2, vt0.c1))>=((vt0.c0, vt0.c0, vt0.c0)))))) GROUP BY t0.c2, vt0.c1, vt0.c0, t0.c1 UNION SELECT ALL t0.c2, vt0.c1, vt0.c0, t0.c1 FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c1)LIKE(t0.c2)) IN ()) WHERE ((NOT ((((((t0.c2 IN (vt0.c1)))OR(CASE WHEN x'' THEN t0.c0 ELSE vt0.c1 END)))AND((((x'ebc1', t0.c2, vt0.c1))>=((vt0.c0, vt0.c0, vt0.c0)))))))) GROUP BY t0.c2, vt0.c1, vt0.c0, t0.c1 UNION SELECT ALL t0.c2, vt0.c1, vt0.c0, t0.c1 FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c1)LIKE(t0.c2)) IN ()) WHERE ((((((((t0.c2 IN (vt0.c1)))OR(CASE WHEN x'' THEN t0.c0 ELSE vt0.c1 END)))AND((((x'ebc1', t0.c2, vt0.c1))>=((vt0.c0, vt0.c0, vt0.c0)))))) ISNULL)) GROUP BY t0.c2, vt0.c1, vt0.c0, t0.c1;
SELECT ALL t0.c2, vt0.c1, vt0.c0, t0.c1 FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c1)LIKE(t0.c2)) IN ()) GROUP BY t0.c2, vt0.c1, vt0.c0, t0.c1;
SELECT t0.c1, vt0.c1, t0.c0, t0.c2, vt0.c0, v0.c0 FROM vt0, t0, v0 GROUP BY t0.c1, vt0.c1, t0.c0, t0.c2, vt0.c0, v0.c0;
SELECT t0.c1, vt0.c1, t0.c0, t0.c2, vt0.c0, v0.c0 FROM vt0, t0, v0 GROUP BY t0.c1, vt0.c1, t0.c0, t0.c2, vt0.c0, v0.c0 HAVING NULL UNION ALL SELECT ALL t0.c1, vt0.c1, t0.c0, t0.c2, vt0.c0, v0.c0 FROM vt0, t0, v0 GROUP BY t0.c1, vt0.c1, t0.c0, t0.c2, vt0.c0, v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT t0.c1, vt0.c1, t0.c0, t0.c2, vt0.c0, v0.c0 FROM vt0, t0, v0 GROUP BY t0.c1, vt0.c1, t0.c0, t0.c2, vt0.c0, v0.c0 HAVING ((NULL) ISNULL);
SELECT t0.c1, vt0.c1, t0.c0, t0.c2, vt0.c0, v0.c0 FROM vt0, t0, v0 GROUP BY t0.c1, vt0.c1, t0.c0, t0.c2, vt0.c0, v0.c0;
SELECT t0.c1, vt0.c1, t0.c0, t0.c2, vt0.c0, v0.c0 FROM vt0, t0, v0 GROUP BY t0.c1, vt0.c1, t0.c0, t0.c2, vt0.c0, v0.c0 HAVING NULL UNION ALL SELECT ALL t0.c1, vt0.c1, t0.c0, t0.c2, vt0.c0, v0.c0 FROM vt0, t0, v0 GROUP BY t0.c1, vt0.c1, t0.c0, t0.c2, vt0.c0, v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT t0.c1, vt0.c1, t0.c0, t0.c2, vt0.c0, v0.c0 FROM vt0, t0, v0 GROUP BY t0.c1, vt0.c1, t0.c0, t0.c2, vt0.c0, v0.c0 HAVING ((NULL) ISNULL);
SELECT t0.c1, vt0.c1, t0.c0, t0.c2, vt0.c0, v0.c0 FROM vt0, t0, v0 GROUP BY t0.c1, vt0.c1, t0.c0, t0.c2, vt0.c0, v0.c0;
SELECT * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE (NULL) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((NULL) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT * FROM t0, vt0, v0;
SELECT DISTINCT * FROM t0, vt0, v0 WHERE ('-2055387457') UNION SELECT DISTINCT * FROM t0, vt0, v0 WHERE ((NOT ('-2055387457'))) UNION SELECT DISTINCT * FROM t0, vt0, v0 WHERE ((('-2055387457') ISNULL));
SELECT DISTINCT * FROM t0, vt0, v0;
SELECT ALL t0.c2, vt0.c0, t0.c0 FROM vt0, t0 GROUP BY t0.c2, vt0.c0, t0.c0;
SELECT ALL t0.c2, vt0.c0, t0.c0 FROM vt0, t0 WHERE (CAST(-2.45268958E8 AS BLOB)) GROUP BY t0.c2, vt0.c0, t0.c0 UNION SELECT ALL t0.c2, vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT (CAST(-2.45268958E8 AS BLOB)))) GROUP BY t0.c2, vt0.c0, t0.c0 UNION SELECT ALL t0.c2, vt0.c0, t0.c0 FROM vt0, t0 WHERE (((CAST(-2.45268958E8 AS BLOB)) ISNULL)) GROUP BY t0.c2, vt0.c0, t0.c0;
SELECT ALL t0.c2, vt0.c0, t0.c0 FROM vt0, t0 GROUP BY t0.c2, vt0.c0, t0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(MAX(COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(MAX(COUNT(*))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(MAX(COUNT(*)))) ISNULL);
SELECT vt0.c0, t0.c2, t0.c1, vt0.c1 FROM vt0, t0;
SELECT vt0.c0, t0.c2, t0.c1, vt0.c1 FROM vt0, t0 WHERE ((((NOT (t0.c2)))==((t0.c0 IN ())))) UNION ALL SELECT vt0.c0, t0.c2, t0.c1, vt0.c1 FROM vt0, t0 WHERE ((NOT ((((NOT (t0.c2)))=((t0.c0 IN ())))))) UNION ALL SELECT vt0.c0, t0.c2, t0.c1, vt0.c1 FROM vt0, t0 WHERE ((((((NOT (t0.c2)))=((t0.c0 IN ())))) ISNULL));
SELECT vt0.c0, t0.c2, t0.c1, vt0.c1 FROM vt0, t0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (0.16108070517164197) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (0.16108070517164197))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((0.16108070517164197) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL vt0.c1, t0.c1, t0.c0, v0.c0, t0.c2 FROM t0, vt0, v0 GROUP BY vt0.c1, t0.c1, t0.c0, v0.c0, t0.c2;
SELECT vt0.c1, t0.c1, t0.c0, v0.c0, t0.c2 FROM t0, vt0, v0 WHERE (vt0.c0 COLLATE BINARY) GROUP BY vt0.c1, t0.c1, t0.c0, v0.c0, t0.c2 UNION SELECT ALL vt0.c1, t0.c1, t0.c0, v0.c0, t0.c2 FROM t0, vt0, v0 WHERE ((NOT (vt0.c0 COLLATE BINARY))) GROUP BY vt0.c1, t0.c1, t0.c0, v0.c0, t0.c2 UNION SELECT ALL vt0.c1, t0.c1, t0.c0, v0.c0, t0.c2 FROM t0, vt0, v0 WHERE (((vt0.c0 COLLATE BINARY) ISNULL)) GROUP BY vt0.c1, t0.c1, t0.c0, v0.c0, t0.c2;
SELECT ALL vt0.c1, t0.c1, t0.c0, v0.c0, t0.c2 FROM t0, vt0, v0 GROUP BY vt0.c1, t0.c1, t0.c0, v0.c0, t0.c2;
SELECT ALL vt0.c0, t0.c0, t0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, t0.c1;
SELECT vt0.c0, t0.c0, t0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, t0.c1 HAVING SUM(MAX(MAX(t0.c1))) UNION ALL SELECT vt0.c0, t0.c0, t0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, t0.c1 HAVING (NOT (SUM(MAX(MAX(t0.c1))))) UNION ALL SELECT ALL vt0.c0, t0.c0, t0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, t0.c1 HAVING ((SUM(MAX(MAX(t0.c1)))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST((v0.c0 IN (v0.c0)) AS TEXT)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST((v0.c0 IN (v0.c0)) AS TEXT)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CAST((v0.c0 IN (v0.c0)) AS TEXT)) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0))>((NULL))) IN (t0.c1))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0))>((NULL))) IN (t0.c1))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0))>((NULL))) IN (t0.c1))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON (NOT ((vt0.c0 IN ()))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON (NOT ((vt0.c0 IN ()))) WHERE (((((((((vt0.c0)OR(vt0.c1 COLLATE BINARY)))AND(LIKELIHOOD(vt0.c1, 0.40199331469437316))))OR(((vt0.c1)IS NOT(v0.c0)))))AND(((((vt0.c1)AND(v0.c0)))OR(v0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON (NOT ((vt0.c0 IN ()))) WHERE ((NOT (((((((((vt0.c0)OR(vt0.c1 COLLATE BINARY)))AND(LIKELIHOOD(vt0.c1, 0.40199331469437316))))OR(((vt0.c1)IS NOT(v0.c0)))))AND(((((vt0.c1)AND(v0.c0)))OR(v0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON (NOT ((vt0.c0 IN ()))) WHERE (((((((((((vt0.c0)OR(vt0.c1 COLLATE BINARY)))AND(LIKELIHOOD(vt0.c1, 0.40199331469437316))))OR(((vt0.c1)IS NOT(v0.c0)))))AND(((((vt0.c1)AND(v0.c0)))OR(v0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON (NOT ((vt0.c0 IN ()))) GROUP BY vt0.c0;
SELECT t0.c0 FROM t0, vt0, v0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0, v0 GROUP BY t0.c0 HAVING ((t0.c2)GLOB(COUNT(vt0.c1))) COLLATE NOCASE UNION ALL SELECT ALL t0.c0 FROM t0, vt0, v0 GROUP BY t0.c0 HAVING (NOT (((t0.c2)GLOB(COUNT(vt0.c1))) COLLATE NOCASE)) UNION ALL SELECT ALL t0.c0 FROM t0, vt0, v0 GROUP BY t0.c0 HAVING ((((t0.c2)GLOB(COUNT(vt0.c1))) COLLATE NOCASE) ISNULL);
SELECT t0.c0 FROM t0, vt0, v0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0, v0 GROUP BY t0.c0 HAVING ((t0.c2)GLOB(COUNT(vt0.c1))) COLLATE NOCASE UNION ALL SELECT ALL t0.c0 FROM t0, vt0, v0 GROUP BY t0.c0 HAVING (NOT (((t0.c2)GLOB(COUNT(vt0.c1))) COLLATE NOCASE)) UNION ALL SELECT ALL t0.c0 FROM t0, vt0, v0 GROUP BY t0.c0 HAVING ((((t0.c2)GLOB(COUNT(vt0.c1))) COLLATE NOCASE) ISNULL);
SELECT t0.c0 FROM t0, vt0, v0 GROUP BY t0.c0;
SELECT ALL * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE ((NOT (vt0.c1)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT ((NOT (vt0.c1)) COLLATE RTRIM))) UNION ALL SELECT * FROM vt0, v0 WHERE ((((NOT (vt0.c1)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT vt0.c0, vt0.c1, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((+ (v0.c0)))GLOB((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL)))));
SELECT DISTINCT vt0.c0, vt0.c1, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((+ (v0.c0)))GLOB((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))))) WHERE (vt0.c1) UNION SELECT DISTINCT vt0.c0, vt0.c1, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((+ (v0.c0)))GLOB((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))))) WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT vt0.c0, vt0.c1, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((+ (v0.c0)))GLOB((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))))) WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((+ (v0.c0)))GLOB((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL)))));
SELECT ALL t0.c2 FROM vt0 LEFT OUTER JOIN t0 ON PRINTF(CASE t0.c0  WHEN NULL THEN vt0.c1 WHEN t0.c0 THEN t0.c2 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) GROUP BY t0.c2;
SELECT t0.c2 FROM vt0 LEFT OUTER JOIN t0 ON PRINTF(CASE t0.c0  WHEN NULL THEN vt0.c1 WHEN t0.c0 THEN t0.c2 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) WHERE ((((CAST(t0.c2 AS REAL)))<(((vt0.c0 IN ()))))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM vt0 LEFT OUTER JOIN t0 ON PRINTF(CASE t0.c0  WHEN NULL THEN vt0.c1 WHEN t0.c0 THEN t0.c2 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) WHERE ((NOT ((((CAST(t0.c2 AS REAL)))<(((vt0.c0 IN ()))))))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM vt0 LEFT OUTER JOIN t0 ON PRINTF(CASE t0.c0  WHEN NULL THEN vt0.c1 WHEN t0.c0 THEN t0.c2 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) WHERE ((((((CAST(t0.c2 AS REAL)))<(((vt0.c0 IN ()))))) ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM vt0 LEFT OUTER JOIN t0 ON PRINTF(CASE t0.c0  WHEN NULL THEN vt0.c1 WHEN t0.c0 THEN t0.c2 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) GROUP BY t0.c2;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COALESCE(vt0.c1, MIN(vt0.c0)))%(TOTAL(vt0.c0))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((COALESCE(vt0.c1, MIN(vt0.c0)))%(TOTAL(vt0.c0))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((COALESCE(vt0.c1, MIN(vt0.c0)))%(TOTAL(vt0.c0)))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COALESCE(vt0.c1, MIN(vt0.c0)))%(TOTAL(vt0.c0))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((COALESCE(vt0.c1, MIN(vt0.c0)))%(TOTAL(vt0.c0))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((COALESCE(vt0.c1, MIN(vt0.c0)))%(TOTAL(vt0.c0)))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c0, t0.c0, t0.c1, v0.c0, t0.c2, vt0.c1 FROM vt0, t0, v0;
SELECT vt0.c0, t0.c0, t0.c1, v0.c0, t0.c2, vt0.c1 FROM vt0, t0 NOT INDEXED, v0 WHERE ((- (NULL))) UNION ALL SELECT vt0.c0, t0.c0, t0.c1, v0.c0, t0.c2, vt0.c1 FROM vt0, t0, v0 WHERE ((NOT ((- (NULL))))) UNION ALL SELECT ALL vt0.c0, t0.c0, t0.c1, v0.c0, t0.c2, vt0.c1 FROM vt0, t0, v0 WHERE ((((- (NULL))) ISNULL));
SELECT ALL vt0.c0, t0.c0, t0.c1, v0.c0, t0.c2, vt0.c1 FROM vt0, t0, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(((vt0.c1)GLOB(vt0.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(((vt0.c1)GLOB(vt0.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(((vt0.c1)GLOB(vt0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0, vt0.c1, vt0.c0 FROM v0 CROSS JOIN vt0 ON (('1143644620')&((- (v0.c0)))) GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM v0 CROSS JOIN vt0 ON (('1143644620')&((- (v0.c0)))) WHERE (((((((((((v0.c0)/(vt0.c1)))AND((- (vt0.c0)))))OR(CASE WHEN '1124616272' THEN vt0.c1 ELSE vt0.c0 END)))AND(((x'a7d2')/(v0.c0)))))OR(CAST(vt0.c0 AS REAL)))) GROUP BY v0.c0, vt0.c1, vt0.c0 UNION SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM v0 CROSS JOIN vt0 ON (('1143644620')&((- (v0.c0)))) WHERE ((NOT (((((((((((v0.c0)/(vt0.c1)))AND((- (vt0.c0)))))OR(CASE WHEN '1124616272' THEN vt0.c1 ELSE vt0.c0 END)))AND(((x'a7d2')/(v0.c0)))))OR(CAST(vt0.c0 AS REAL)))))) GROUP BY v0.c0, vt0.c1, vt0.c0 UNION SELECT v0.c0, vt0.c1, vt0.c0 FROM v0 CROSS JOIN vt0 ON (('1143644620')&((- (v0.c0)))) WHERE (((((((((((((v0.c0)/(vt0.c1)))AND((- (vt0.c0)))))OR(CASE WHEN '1124616272' THEN vt0.c1 ELSE vt0.c0 END)))AND(((x'a7d2')/(v0.c0)))))OR(CAST(vt0.c0 AS REAL)))) ISNULL)) GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT v0.c0, vt0.c1, vt0.c0 FROM v0 CROSS JOIN vt0 ON (('1143644620')&((- (v0.c0)))) GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT ALL t0.c2, t0.c0, v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c2, t0.c0, v0.c0;
SELECT t0.c2, t0.c0, v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c2, t0.c0, v0.c0 HAVING AVG((((v0.c0))<=((v0.c0)))) UNION ALL SELECT ALL t0.c2, t0.c0, v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c2, t0.c0, v0.c0 HAVING (NOT (AVG((((v0.c0))<=((v0.c0)))))) UNION ALL SELECT ALL t0.c2, t0.c0, v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c2, t0.c0, v0.c0 HAVING ((AVG((((v0.c0))<=((v0.c0))))) ISNULL);
SELECT ALL t0.c2, t0.c0, v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c2, t0.c0, v0.c0;
SELECT t0.c2, t0.c0, v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c2, t0.c0, v0.c0 HAVING AVG((((v0.c0))<=((v0.c0)))) UNION ALL SELECT ALL t0.c2, t0.c0, v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c2, t0.c0, v0.c0 HAVING (NOT (AVG((((v0.c0))<=((v0.c0)))))) UNION ALL SELECT ALL t0.c2, t0.c0, v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c2, t0.c0, v0.c0 HAVING ((AVG((((v0.c0))<=((v0.c0))))) ISNULL);
SELECT ALL t0.c2, t0.c0, v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c2, t0.c0, v0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 IN ()) IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0 IN ()) IN ())) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT t0.c2, v0.c0 FROM v0 FULL OUTER JOIN t0 ON COALESCE(((((t0.c1)OR('-668017720')))OR(t0.c2)), ((t0.c0) IS TRUE));
SELECT DISTINCT t0.c2, v0.c0 FROM v0 FULL OUTER JOIN t0 ON COALESCE(((((t0.c1)OR('-668017720')))OR(t0.c2)), ((t0.c0) IS TRUE)) WHERE ((((((t0.c2) NOT BETWEEN (1.546805646E9) AND (t0.c2))))<((x'46a4')))) UNION SELECT DISTINCT t0.c2, v0.c0 FROM v0 FULL OUTER JOIN t0 ON COALESCE(((((t0.c1)OR('-668017720')))OR(t0.c2)), ((t0.c0) IS TRUE)) WHERE ((NOT ((((((t0.c2) NOT BETWEEN (1.546805646E9) AND (t0.c2))))<((x'46a4')))))) UNION SELECT DISTINCT t0.c2, v0.c0 FROM v0 FULL OUTER JOIN t0 ON COALESCE(((((t0.c1)OR('-668017720')))OR(t0.c2)), ((t0.c0) IS TRUE)) WHERE ((((((((t0.c2) NOT BETWEEN (1.546805646E9) AND (t0.c2))))<((x'46a4')))) ISNULL));
SELECT DISTINCT t0.c2, v0.c0 FROM v0 FULL OUTER JOIN t0 ON COALESCE(((((t0.c1)OR('-668017720')))OR(t0.c2)), ((t0.c0) IS TRUE));
SELECT t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM vt0, t0 WHERE (CASE WHEN (vt0.c0 IN (t0.c1)) THEN t0.c2 END) GROUP BY t0.c1, t0.c2 UNION SELECT t0.c1, t0.c2 FROM vt0, t0 WHERE ((NOT (CASE WHEN (vt0.c0 IN (t0.c1)) THEN t0.c2 END))) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM vt0, t0 WHERE (((CASE WHEN (vt0.c0 IN (t0.c1)) THEN t0.c2 END) ISNULL)) GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c1, t0.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((((v0.c0)AND(v0.c0)))AND(v0.c0))))>=(((v0.c0 IN ()))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((((((((v0.c0)AND(v0.c0)))AND(v0.c0))))>=(((v0.c0 IN ()))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0))))>=(((v0.c0 IN ()))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT t0.c0, v0.c0, t0.c1, t0.c2 FROM t0, v0;
SELECT DISTINCT t0.c0, v0.c0, t0.c1, t0.c2 FROM t0, v0 WHERE (CASE CAST(t0.c0 AS INTEGER)  WHEN (('sr昑\n') IS FALSE) THEN (t0.c0 IN ()) END) UNION SELECT DISTINCT t0.c0, v0.c0, t0.c1, t0.c2 FROM t0, v0 WHERE ((NOT (CASE CAST(t0.c0 AS INTEGER)  WHEN (('sr昑\n') IS FALSE) THEN (t0.c0 IN ()) END))) UNION SELECT DISTINCT t0.c0, v0.c0, t0.c1, t0.c2 FROM t0, v0 WHERE (((CASE CAST(t0.c0 AS INTEGER)  WHEN (('sr昑\n') IS FALSE) THEN (t0.c0 IN ()) END) ISNULL));
SELECT DISTINCT t0.c0, v0.c0, t0.c1, t0.c2 FROM t0, v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE ((vt0.c0)>=(vt0.c0))  WHEN LIKELY(DISTINCT vt0.c0) THEN vt0.c0 END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE ((vt0.c0)>=(vt0.c0))  WHEN LIKELY(DISTINCT vt0.c0) THEN vt0.c0 END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE ((vt0.c0)>=(vt0.c0))  WHEN LIKELY(DISTINCT vt0.c0) THEN vt0.c0 END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0, vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT v0.c0, vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c0, vt0.c1 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT v0.c0, vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT v0.c0, vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL v0.c0 FROM vt0, v0;
SELECT ALL v0.c0 FROM vt0, v0 WHERE (CAST((- (vt0.c0)) AS NUMERIC)) UNION ALL SELECT v0.c0 FROM vt0, v0 WHERE ((NOT (CAST((- (vt0.c0)) AS NUMERIC)))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 WHERE (((CAST((- (vt0.c0)) AS NUMERIC)) ISNULL));
SELECT ALL v0.c0 FROM vt0, v0;
SELECT DISTINCT t0.c0 FROM v0, t0;
SELECT DISTINCT t0.c0 FROM v0, t0 WHERE (t0.c2) UNION SELECT DISTINCT t0.c0 FROM v0, t0 WHERE ((NOT (t0.c2))) UNION SELECT DISTINCT t0.c0 FROM v0, t0 WHERE (((t0.c2) ISNULL));
SELECT DISTINCT t0.c0 FROM v0, t0;
SELECT ALL v0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c1;
SELECT ALL v0.c0, t0.c1 FROM t0, v0 WHERE (((((((((RTRIM(v0.c0))AND(CAST(t0.c1 AS TEXT))))OR(CASE t0.c2  WHEN t0.c1 THEN t0.c0 END)))AND(((t0.c2)%(NULL)))))OR(v0.c0))) GROUP BY v0.c0, t0.c1 UNION SELECT v0.c0, t0.c1 FROM t0, v0 WHERE ((NOT (((((((((RTRIM(v0.c0))AND(CAST(t0.c1 AS TEXT))))OR(CASE t0.c2  WHEN t0.c1 THEN t0.c0 END)))AND(((t0.c2)%(NULL)))))OR(v0.c0))))) GROUP BY v0.c0, t0.c1 UNION SELECT v0.c0, t0.c1 FROM t0, v0 WHERE (((((((((((RTRIM(v0.c0))AND(CAST(t0.c1 AS TEXT))))OR(CASE t0.c2  WHEN t0.c1 THEN t0.c0 END)))AND(((t0.c2)%(NULL)))))OR(v0.c0))) ISNULL)) GROUP BY v0.c0, t0.c1;
SELECT ALL v0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c1;
SELECT t0.c2, v0.c0, vt0.c0 FROM t0, vt0, v0 GROUP BY t0.c2, v0.c0, vt0.c0;
SELECT ALL t0.c2, v0.c0, vt0.c0 FROM t0, vt0, v0 GROUP BY t0.c2, v0.c0, vt0.c0 HAVING v0.c0 UNION ALL SELECT ALL t0.c2, v0.c0, vt0.c0 FROM t0, vt0, v0 GROUP BY t0.c2, v0.c0, vt0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT t0.c2, v0.c0, vt0.c0 FROM t0, vt0, v0 GROUP BY t0.c2, v0.c0, vt0.c0 HAVING ((v0.c0) ISNULL);
SELECT t0.c2, v0.c0, vt0.c0 FROM t0, vt0, v0 GROUP BY t0.c2, v0.c0, vt0.c0;
SELECT ALL t0.c2, v0.c0, vt0.c0 FROM t0, vt0, v0 GROUP BY t0.c2, v0.c0, vt0.c0 HAVING v0.c0 UNION ALL SELECT ALL t0.c2, v0.c0, vt0.c0 FROM t0, vt0, v0 GROUP BY t0.c2, v0.c0, vt0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT t0.c2, v0.c0, vt0.c0 FROM t0, vt0, v0 GROUP BY t0.c2, v0.c0, vt0.c0 HAVING ((v0.c0) ISNULL);
SELECT t0.c2, v0.c0, vt0.c0 FROM t0, vt0, v0 GROUP BY t0.c2, v0.c0, vt0.c0;
SELECT ALL vt0.c1, v0.c0, t0.c2, t0.c1, vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON HEX(((vt0.c0) IS FALSE)) LEFT OUTER JOIN v0 ON ((CASE WHEN vt0.c0 THEN v0.c0 END)IS((NULL IN (vt0.c1))));
SELECT ALL vt0.c1, v0.c0, t0.c2, t0.c1, vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON HEX(((vt0.c0) IS FALSE)) LEFT OUTER JOIN v0 ON ((CASE WHEN vt0.c0 THEN v0.c0 END)IS((NULL IN (vt0.c1)))) WHERE ((((CAST(v0.c0 AS INTEGER)))<((HEX(DISTINCT vt0.c1))))) UNION ALL SELECT ALL vt0.c1, v0.c0, t0.c2, t0.c1, vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON HEX(((vt0.c0) IS FALSE)) LEFT OUTER JOIN v0 ON ((CASE WHEN vt0.c0 THEN v0.c0 END)IS((NULL IN (vt0.c1)))) WHERE ((NOT ((((CAST(v0.c0 AS INTEGER)))<((HEX(DISTINCT vt0.c1))))))) UNION ALL SELECT vt0.c1, v0.c0, t0.c2, t0.c1, vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON HEX(((vt0.c0) IS FALSE)) LEFT OUTER JOIN v0 ON ((CASE WHEN vt0.c0 THEN v0.c0 END)IS((NULL IN (vt0.c1)))) WHERE ((((((CAST(v0.c0 AS INTEGER)))<((HEX(DISTINCT vt0.c1))))) ISNULL));
SELECT ALL vt0.c1, v0.c0, t0.c2, t0.c1, vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON HEX(((vt0.c0) IS FALSE)) LEFT OUTER JOIN v0 ON ((CASE WHEN vt0.c0 THEN v0.c0 END)IS((NULL IN (vt0.c1))));
SELECT DISTINCT t0.c1 FROM v0, t0;
SELECT DISTINCT t0.c1 FROM v0, t0 WHERE (x'828c') UNION SELECT DISTINCT t0.c1 FROM v0, t0 WHERE ((NOT (x'828c'))) UNION SELECT DISTINCT t0.c1 FROM v0, t0 WHERE (((x'828c') ISNULL));
SELECT DISTINCT t0.c1 FROM v0, t0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((~ (((v0.c0) ISNULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((~ (((v0.c0) ISNULL)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((~ (((v0.c0) ISNULL)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c2, vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY t0.c2, vt0.c0, t0.c0;
SELECT ALL t0.c2, vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY t0.c2, vt0.c0, t0.c0 HAVING ((MAX(vt0.c0))==(((((vt0.c0)AND(vt0.c0)))AND(MAX(vt0.c1))))) UNION ALL SELECT ALL t0.c2, vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY t0.c2, vt0.c0, t0.c0 HAVING (NOT (((MAX(vt0.c0))==(((((vt0.c0)AND(vt0.c0)))AND(MAX(vt0.c1))))))) UNION ALL SELECT t0.c2, vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY t0.c2, vt0.c0, t0.c0 HAVING ((((MAX(vt0.c0))=(((((vt0.c0)AND(vt0.c0)))AND(MAX(vt0.c1)))))) ISNULL);
SELECT t0.c2, vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY t0.c2, vt0.c0, t0.c0;
SELECT ALL t0.c2, vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY t0.c2, vt0.c0, t0.c0 HAVING ((MAX(vt0.c0))==(((((vt0.c0)AND(vt0.c0)))AND(MAX(vt0.c1))))) UNION ALL SELECT ALL t0.c2, vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY t0.c2, vt0.c0, t0.c0 HAVING (NOT (((MAX(vt0.c0))==(((((vt0.c0)AND(vt0.c0)))AND(MAX(vt0.c1))))))) UNION ALL SELECT t0.c2, vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY t0.c2, vt0.c0, t0.c0 HAVING ((((MAX(vt0.c0))=(((((vt0.c0)AND(vt0.c0)))AND(MAX(vt0.c1)))))) ISNULL);
SELECT t0.c2, vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY t0.c2, vt0.c0, t0.c0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((((t0.c2) NOTNULL)) BETWEEN ((t0.c0 IN ())) AND (((((((((t0.c1)AND(t0.c0)))AND(t0.c2)))AND(t0.c0)))OR(t0.c0))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((t0.c2) NOTNULL)) BETWEEN ((t0.c0 IN ())) AND (((((((((t0.c1)AND(t0.c0)))AND(t0.c2)))AND(t0.c0)))OR(t0.c0))))))) UNION ALL SELECT * FROM t0 WHERE (((((((t0.c2) NOTNULL)) BETWEEN ((t0.c0 IN ())) AND (((((((((t0.c1)AND(t0.c0)))AND(t0.c2)))AND(t0.c0)))OR(t0.c0))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST(((v0.c0)%(v0.c0)) AS NUMERIC)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST(((v0.c0)%(v0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST(((v0.c0)%(v0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c1, v0.c0, vt0.c0 FROM v0, vt0 GROUP BY vt0.c1, v0.c0, vt0.c0;
SELECT vt0.c1, v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((((vt0.c1, vt0.c0, v0.c0))=((vt0.c0, vt0.c1, vt0.c0))))IS(((((vt0.c0)AND(v0.c0)))AND(vt0.c0))))) GROUP BY vt0.c1, v0.c0, vt0.c0 UNION SELECT ALL vt0.c1, v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT ((((((vt0.c1, vt0.c0, v0.c0))==((vt0.c0, vt0.c1, vt0.c0))))IS(((((vt0.c0)AND(v0.c0)))AND(vt0.c0))))))) GROUP BY vt0.c1, v0.c0, vt0.c0 UNION SELECT ALL vt0.c1, v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((((((vt0.c1, vt0.c0, v0.c0))=((vt0.c0, vt0.c1, vt0.c0))))IS(((((vt0.c0)AND(v0.c0)))AND(vt0.c0))))) ISNULL)) GROUP BY vt0.c1, v0.c0, vt0.c0;
SELECT ALL vt0.c1, v0.c0, vt0.c0 FROM v0, vt0 GROUP BY vt0.c1, v0.c0, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0 HAVING ((((((v0.c0)AND(SUM(MIN(SUM(COUNT(vt0.c1)))))))AND(COUNT(*)))) IS FALSE) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((((((v0.c0)AND(SUM(MIN(SUM(COUNT(vt0.c1)))))))AND(COUNT(*)))) IS FALSE))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0 HAVING ((((((((v0.c0)AND(SUM(MIN(SUM(COUNT(vt0.c1)))))))AND(COUNT(*)))) IS FALSE)) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((((((((((((((vt0.c0)OR(HEX(DISTINCT vt0.c0))))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(CAST(vt0.c0 AS INTEGER))))OR((((vt0.c1, vt0.c1, vt0.c1))<=((vt0.c1, vt0.c0, vt0.c1))))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))))OR(((vt0.c0)+(vt0.c0)))))AND(vt0.c0)))AND(CAST(vt0.c1 AS NUMERIC)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((((((((((((((vt0.c0)OR(HEX(DISTINCT vt0.c0))))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(CAST(vt0.c0 AS INTEGER))))OR((((vt0.c1, vt0.c1, vt0.c1))<=((vt0.c1, vt0.c0, vt0.c1))))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))))OR(((vt0.c0)+(vt0.c0)))))AND(vt0.c0)))AND(CAST(vt0.c1 AS NUMERIC)))))) UNION ALL SELECT * FROM vt0 WHERE (((((((((((((((((((vt0.c0)OR(HEX(DISTINCT vt0.c0))))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(CAST(vt0.c0 AS INTEGER))))OR((((vt0.c1, vt0.c1, vt0.c1))<=((vt0.c1, vt0.c0, vt0.c1))))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))))OR(((vt0.c0)+(vt0.c0)))))AND(vt0.c0)))AND(CAST(vt0.c1 AS NUMERIC)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM t0, vt0, v0;
SELECT DISTINCT * FROM t0, vt0, v0 WHERE (((NULL)||(((t0.c2) IS TRUE)))) UNION SELECT DISTINCT * FROM t0, vt0, v0 WHERE ((NOT (((NULL)||(((t0.c2) IS TRUE)))))) UNION SELECT DISTINCT * FROM t0, vt0, v0 WHERE (((((NULL)||(((t0.c2) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM t0, vt0, v0;
SELECT vt0.c0, v0.c0, t0.c0, t0.c1, vt0.c1, t0.c2 FROM v0, t0 INNER JOIN vt0 ON (((v0.c0, vt0.c0, vt0.c1)) BETWEEN ((CAST(t0.c0 AS INTEGER), CAST(v0.c0 AS BLOB), CAST(v0.c0 AS INTEGER))) AND (((vt0.c0 IN (vt0.c1)), ((t0.c1)>=(vt0.c0)), ((t0.c0)<=(vt0.c1))))) GROUP BY vt0.c0, v0.c0, t0.c0, t0.c1, vt0.c1, t0.c2;
SELECT ALL vt0.c0, v0.c0, t0.c0, t0.c1, vt0.c1, t0.c2 FROM v0, t0 INNER JOIN vt0 ON (((v0.c0, vt0.c0, vt0.c1)) BETWEEN ((CAST(t0.c0 AS INTEGER), CAST(v0.c0 AS BLOB), CAST(v0.c0 AS INTEGER))) AND (((vt0.c0 IN (vt0.c1)), ((t0.c1)>=(vt0.c0)), ((t0.c0)<=(vt0.c1))))) WHERE (CAST(vt0.c1 AS REAL) COLLATE RTRIM) GROUP BY vt0.c0, v0.c0, t0.c0, t0.c1, vt0.c1, t0.c2 UNION SELECT vt0.c0, v0.c0, t0.c0, t0.c1, vt0.c1, t0.c2 FROM v0, t0 INNER JOIN vt0 ON (((v0.c0, vt0.c0, vt0.c1)) BETWEEN ((CAST(t0.c0 AS INTEGER), CAST(v0.c0 AS BLOB), CAST(v0.c0 AS INTEGER))) AND (((vt0.c0 IN (vt0.c1)), ((t0.c1)>=(vt0.c0)), ((t0.c0)<=(vt0.c1))))) WHERE ((NOT (CAST(vt0.c1 AS REAL) COLLATE RTRIM))) GROUP BY vt0.c0, v0.c0, t0.c0, t0.c1, vt0.c1, t0.c2 UNION SELECT vt0.c0, v0.c0, t0.c0, t0.c1, vt0.c1, t0.c2 FROM v0, t0 NOT INDEXED INNER JOIN vt0 ON (((v0.c0, vt0.c0, vt0.c1)) BETWEEN ((CAST(t0.c0 AS INTEGER), CAST(v0.c0 AS BLOB), CAST(v0.c0 AS INTEGER))) AND (((vt0.c0 IN (vt0.c1)), ((t0.c1)>=(vt0.c0)), ((t0.c0)<=(vt0.c1))))) WHERE (((CAST(vt0.c1 AS REAL) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0, v0.c0, t0.c0, t0.c1, vt0.c1, t0.c2;
SELECT vt0.c0, v0.c0, t0.c0, t0.c1, vt0.c1, t0.c2 FROM v0, t0 INNER JOIN vt0 ON (((v0.c0, vt0.c0, vt0.c1)) BETWEEN ((CAST(t0.c0 AS INTEGER), CAST(v0.c0 AS BLOB), CAST(v0.c0 AS INTEGER))) AND (((vt0.c0 IN (vt0.c1)), ((t0.c1)>=(vt0.c0)), ((t0.c0)<=(vt0.c1))))) GROUP BY vt0.c0, v0.c0, t0.c0, t0.c1, vt0.c1, t0.c2;
SELECT ALL vt0.c1, v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON (NOT (((vt0.c1) NOTNULL))) GROUP BY vt0.c1, v0.c0, vt0.c0;
SELECT vt0.c1, v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON (NOT (((vt0.c1) NOTNULL))) GROUP BY vt0.c1, v0.c0, vt0.c0 HAVING COUNT(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT vt0.c1, v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON (NOT (((vt0.c1) NOTNULL))) GROUP BY vt0.c1, v0.c0, vt0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT ALL vt0.c1, v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON (NOT (((vt0.c1) NOTNULL))) GROUP BY vt0.c1, v0.c0, vt0.c0 HAVING ((COUNT(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ('1545256983' COLLATE BINARY) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ('1545256983' COLLATE BINARY))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((('1545256983' COLLATE BINARY) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((json_valid(v0.c0))!=(((v0.c0)OR(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((json_valid(v0.c0))<>(((v0.c0)OR(v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((json_valid(v0.c0))!=(((v0.c0)OR(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CAST(v0.c0 AS INTEGER) COLLATE NOCASE) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(v0.c0 AS INTEGER) COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS INTEGER) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2, t0.c0;
SELECT t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2, t0.c0 HAVING ((((MAX(v0.c0)) IS TRUE)) ISNULL) UNION ALL SELECT t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2, t0.c0 HAVING (NOT (((((MAX(v0.c0)) IS TRUE)) ISNULL))) UNION ALL SELECT t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2, t0.c0 HAVING ((((((MAX(v0.c0)) IS TRUE)) ISNULL)) ISNULL);
SELECT ALL t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2, t0.c0;
SELECT t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2, t0.c0 HAVING ((((MAX(v0.c0)) IS TRUE)) ISNULL) UNION ALL SELECT t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2, t0.c0 HAVING (NOT (((((MAX(v0.c0)) IS TRUE)) ISNULL))) UNION ALL SELECT t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2, t0.c0 HAVING ((((((MAX(v0.c0)) IS TRUE)) ISNULL)) ISNULL);
SELECT ALL t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2, t0.c0;
SELECT ALL * FROM v0, t0;
SELECT * FROM v0, t0 WHERE (((t0.c2)==(t0.c2)) COLLATE NOCASE) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((NOT (((t0.c2)=(t0.c2)) COLLATE NOCASE))) UNION ALL SELECT * FROM v0, t0 WHERE (((((t0.c2)=(t0.c2)) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM v0, t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CAST(NULL AS REAL))AND(((vt0.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CAST(NULL AS REAL))AND(((vt0.c0) NOTNULL)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CAST(NULL AS REAL))AND(((vt0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0, vt0.c1, t0.c1, t0.c2 FROM t0, vt0 GROUP BY t0.c0, vt0.c1, t0.c1, t0.c2;
SELECT t0.c0, vt0.c1, t0.c1, t0.c2 FROM t0, vt0 WHERE (vt0.c1) GROUP BY t0.c0, vt0.c1, t0.c1, t0.c2 UNION SELECT t0.c0, vt0.c1, t0.c1, t0.c2 FROM t0, vt0 WHERE ((NOT (vt0.c1))) GROUP BY t0.c0, vt0.c1, t0.c1, t0.c2 UNION SELECT ALL t0.c0, vt0.c1, t0.c1, t0.c2 FROM t0, vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY t0.c0, vt0.c1, t0.c1, t0.c2;
SELECT t0.c0, vt0.c1, t0.c1, t0.c2 FROM t0, vt0 GROUP BY t0.c0, vt0.c1, t0.c1, t0.c2;
SELECT v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0 HAVING ((vt0.c1)|(TOTAL(SUM(v0.c0)))) COLLATE RTRIM UNION ALL SELECT v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0 HAVING (NOT (((vt0.c1)|(TOTAL(SUM(v0.c0)))) COLLATE RTRIM)) UNION ALL SELECT v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0 HAVING ((((vt0.c1)|(TOTAL(SUM(v0.c0)))) COLLATE RTRIM) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (CASE WHEN ((v0.c0) NOTNULL) THEN v0.c0 END) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (CASE WHEN ((v0.c0) NOTNULL) THEN v0.c0 END))) UNION ALL SELECT * FROM v0 WHERE (((CASE WHEN ((v0.c0) NOTNULL) THEN v0.c0 END) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT t0.c0, t0.c2, v0.c0, t0.c1 FROM t0, v0;
SELECT DISTINCT t0.c0, t0.c2, v0.c0, t0.c1 FROM t0, v0 WHERE (((((((t0.c2)AND(t0.c0)))AND(NULL))) ISNULL)) UNION SELECT DISTINCT t0.c0, t0.c2, v0.c0, t0.c1 FROM t0, v0 WHERE ((NOT (((((((t0.c2)AND(t0.c0)))AND(NULL))) ISNULL)))) UNION SELECT DISTINCT t0.c0, t0.c2, v0.c0, t0.c1 FROM t0, v0 WHERE (((((((((t0.c2)AND(t0.c0)))AND(NULL))) ISNULL)) ISNULL));
SELECT DISTINCT t0.c0, t0.c2, v0.c0, t0.c1 FROM t0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0)OR(v0.c0)))OR(CAST(v0.c0 AS INTEGER)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)OR(v0.c0)))OR(CAST(v0.c0 AS INTEGER)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))OR(CAST(v0.c0 AS INTEGER)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c0, t0.c2, vt0.c0, t0.c1, vt0.c1, v0.c0 FROM v0 INNER JOIN vt0 ON CAST(0.9918618062786305 AS REAL) CROSS JOIN t0 ON (((vt0.c0, ((t0.c2) BETWEEN (0.4852610248080874) AND (t0.c2)), CAST(t0.c2 AS BLOB)))<>((CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 ELSE t0.c1 END, (((v0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))), (((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c1)))))) GROUP BY t0.c0, t0.c2, vt0.c0, t0.c1, vt0.c1, v0.c0;
SELECT ALL t0.c0, t0.c2, vt0.c0, t0.c1, vt0.c1, v0.c0 FROM v0 INNER JOIN vt0 ON CAST(0.9918618062786305 AS REAL) CROSS JOIN t0 ON (((vt0.c0, ((t0.c2) BETWEEN (0.4852610248080874) AND (t0.c2)), CAST(t0.c2 AS BLOB)))!=((CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 ELSE t0.c1 END, (((v0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))), (((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c1)))))) GROUP BY t0.c0, t0.c2, vt0.c0, t0.c1, vt0.c1, v0.c0 HAVING SUM(GROUP_CONCAT(t0.c2)) UNION ALL SELECT t0.c0, t0.c2, vt0.c0, t0.c1, vt0.c1, v0.c0 FROM v0 INNER JOIN vt0 ON CAST(0.9918618062786305 AS REAL) CROSS JOIN t0 ON (((vt0.c0, ((t0.c2) BETWEEN (0.4852610248080874) AND (t0.c2)), CAST(t0.c2 AS BLOB)))<>((CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 ELSE t0.c1 END, (((v0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))), (((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c1)))))) GROUP BY t0.c0, t0.c2, vt0.c0, t0.c1, vt0.c1, v0.c0 HAVING (NOT (SUM(GROUP_CONCAT(t0.c2)))) UNION ALL SELECT ALL t0.c0, t0.c2, vt0.c0, t0.c1, vt0.c1, v0.c0 FROM v0 INNER JOIN vt0 ON CAST(0.9918618062786305 AS REAL) CROSS JOIN t0 ON (((vt0.c0, ((t0.c2) BETWEEN (0.4852610248080874) AND (t0.c2)), CAST(t0.c2 AS BLOB)))<>((CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 ELSE t0.c1 END, (((v0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))), (((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c1)))))) GROUP BY t0.c0, t0.c2, vt0.c0, t0.c1, vt0.c1, v0.c0 HAVING ((SUM(GROUP_CONCAT(t0.c2))) ISNULL);
SELECT t0.c2, v0.c0, t0.c0, t0.c1 FROM t0, v0;
SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1 FROM t0, v0 WHERE (CAST(((v0.c0)/(t0.c0)) AS TEXT)) UNION ALL SELECT t0.c2, v0.c0, t0.c0, t0.c1 FROM t0, v0 WHERE ((NOT (CAST(((v0.c0)/(t0.c0)) AS TEXT)))) UNION ALL SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1 FROM t0, v0 WHERE (((CAST(((v0.c0)/(t0.c0)) AS TEXT)) ISNULL));
SELECT t0.c2, v0.c0, t0.c0, t0.c1 FROM t0, v0;
SELECT DISTINCT vt0.c0, vt0.c1, v0.c0, t0.c0, t0.c1 FROM t0, v0, vt0;
SELECT DISTINCT vt0.c0, vt0.c1, v0.c0, t0.c0, t0.c1 FROM t0, v0, vt0 WHERE (GLOB(((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)), CASE t0.c0  WHEN vt0.c1 THEN t0.c1 WHEN v0.c0 THEN 0.875943711633686 WHEN v0.c0 THEN vt0.c1 END)) UNION SELECT DISTINCT vt0.c0, vt0.c1, v0.c0, t0.c0, t0.c1 FROM t0, v0, vt0 WHERE ((NOT (GLOB(((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)), CASE t0.c0  WHEN vt0.c1 THEN t0.c1 WHEN v0.c0 THEN 0.875943711633686 WHEN v0.c0 THEN vt0.c1 END)))) UNION SELECT DISTINCT vt0.c0, vt0.c1, v0.c0, t0.c0, t0.c1 FROM t0, v0, vt0 WHERE (((GLOB(((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)), CASE t0.c0  WHEN vt0.c1 THEN t0.c1 WHEN v0.c0 THEN 0.875943711633686 WHEN v0.c0 THEN vt0.c1 END)) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, v0.c0, t0.c0, t0.c1 FROM t0, v0, vt0;
SELECT t0.c1, vt0.c0, vt0.c1, v0.c0 FROM t0, vt0 RIGHT OUTER JOIN v0 ON CAST(MAX(t0.c1, v0.c0, vt0.c0, t0.c0) AS INTEGER) GROUP BY t0.c1, vt0.c0, vt0.c1, v0.c0;
SELECT ALL t0.c1, vt0.c0, vt0.c1, v0.c0 FROM t0, vt0 RIGHT OUTER JOIN v0 ON CAST(MAX(t0.c1, v0.c0, vt0.c0, t0.c0) AS INTEGER) WHERE (0.8380034509043582) GROUP BY t0.c1, vt0.c0, vt0.c1, v0.c0 UNION SELECT ALL t0.c1, vt0.c0, vt0.c1, v0.c0 FROM t0, vt0 RIGHT OUTER JOIN v0 ON CAST(MAX(t0.c1, v0.c0, vt0.c0, t0.c0) AS INTEGER) WHERE ((NOT (0.8380034509043582))) GROUP BY t0.c1, vt0.c0, vt0.c1, v0.c0 UNION SELECT ALL t0.c1, vt0.c0, vt0.c1, v0.c0 FROM t0, vt0 RIGHT OUTER JOIN v0 ON CAST(MAX(t0.c1, v0.c0, vt0.c0, t0.c0) AS INTEGER) WHERE (((0.8380034509043582) ISNULL)) GROUP BY t0.c1, vt0.c0, vt0.c1, v0.c0;
SELECT t0.c1, vt0.c0, vt0.c1, v0.c0 FROM t0, vt0 RIGHT OUTER JOIN v0 ON CAST(MAX(t0.c1, v0.c0, vt0.c0, t0.c0) AS INTEGER) GROUP BY t0.c1, vt0.c0, vt0.c1, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(TOTAL(MAX(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(TOTAL(MAX(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(TOTAL(MAX(v0.c0)))) ISNULL);
SELECT ALL t0.c2 FROM v0 CROSS JOIN t0 ON ((t0.c2 COLLATE BINARY)*(((((((((v0.c0)AND(v0.c0)))OR(t0.c0)))OR(v0.c0)))AND(t0.c2))));
SELECT ALL t0.c2 FROM v0 CROSS JOIN t0 ON ((t0.c2 COLLATE BINARY)*(((((((((v0.c0)AND(v0.c0)))OR(t0.c0)))OR(v0.c0)))AND(t0.c2)))) WHERE (((CAST(v0.c0 AS TEXT))==(((t0.c1)>(t0.c0))))) UNION ALL SELECT ALL t0.c2 FROM v0 CROSS JOIN t0 ON ((t0.c2 COLLATE BINARY)*(((((((((v0.c0)AND(v0.c0)))OR(t0.c0)))OR(v0.c0)))AND(t0.c2)))) WHERE ((NOT (((CAST(v0.c0 AS TEXT))=(((t0.c1)>(t0.c0))))))) UNION ALL SELECT ALL t0.c2 FROM v0 CROSS JOIN t0 ON ((t0.c2 COLLATE BINARY)*(((((((((v0.c0)AND(v0.c0)))OR(t0.c0)))OR(v0.c0)))AND(t0.c2)))) WHERE (((((CAST(v0.c0 AS TEXT))==(((t0.c1)>(t0.c0))))) ISNULL));
SELECT ALL t0.c2 FROM v0 CROSS JOIN t0 ON ((t0.c2 COLLATE BINARY)*(((((((((v0.c0)AND(v0.c0)))OR(t0.c0)))OR(v0.c0)))AND(t0.c2))));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((~ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((~ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((~ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL t0.c2, vt0.c0, vt0.c1, t0.c0, v0.c0 FROM t0, vt0, v0 GROUP BY t0.c2, vt0.c0, vt0.c1, t0.c0, v0.c0;
SELECT ALL t0.c2, vt0.c0, vt0.c1, t0.c0, v0.c0 FROM t0, vt0, v0 WHERE ((((((v0.c0))>=((t0.c2))))>(CASE WHEN vt0.c1 THEN t0.c2 END))) GROUP BY t0.c2, vt0.c0, vt0.c1, t0.c0, v0.c0 UNION SELECT ALL t0.c2, vt0.c0, vt0.c1, t0.c0, v0.c0 FROM t0, vt0, v0 WHERE ((NOT ((((((v0.c0))>=((t0.c2))))>(CASE WHEN vt0.c1 THEN t0.c2 END))))) GROUP BY t0.c2, vt0.c0, vt0.c1, t0.c0, v0.c0 UNION SELECT ALL t0.c2, vt0.c0, vt0.c1, t0.c0, v0.c0 FROM t0, vt0, v0 WHERE ((((((((v0.c0))>=((t0.c2))))>(CASE WHEN vt0.c1 THEN t0.c2 END))) ISNULL)) GROUP BY t0.c2, vt0.c0, vt0.c1, t0.c0, v0.c0;
SELECT ALL t0.c2, vt0.c0, vt0.c1, t0.c0, v0.c0 FROM t0, vt0, v0 GROUP BY t0.c2, vt0.c0, vt0.c1, t0.c0, v0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING TYPEOF((AVG(TOTAL(vt0.c0)) IN (vt0.c1, vt0.c0))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (TYPEOF((AVG(TOTAL(vt0.c0)) IN (vt0.c1, vt0.c0))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((TYPEOF((AVG(TOTAL(vt0.c0)) IN (vt0.c1, vt0.c0)))) ISNULL);
SELECT * FROM vt0 INDEXED BY i81 NATURAL JOIN v0;
SELECT DISTINCT vt0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE (((((v0.c0)=(vt0.c0)))==(((((vt0.c0)AND(v0.c0)))OR(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE ((NOT (((((v0.c0)==(vt0.c0)))==(((((vt0.c0)AND(v0.c0)))OR(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0 NOT INDEXED WHERE (((((((v0.c0)==(vt0.c0)))=(((((vt0.c0)AND(v0.c0)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, v0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c1, vt0.c0, 1545256983)) BETWEEN ((0Xffffffffc482b12c, vt0.c0 COLLATE BINARY, ((vt0.c1)OR(vt0.c0)), x'', x'')) AND ((((vt0.c1) NOT BETWEEN (x'') AND (vt0.c1)), (vt0.c0 IN ()), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, (- (vt0.c0)), (vt0.c0 IN (vt0.c0, vt0.c0)))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c1, vt0.c1, vt0.c0, 1545256983)) BETWEEN ((0xffffffffc482b12c, vt0.c0 COLLATE BINARY, ((vt0.c1)OR(vt0.c0)), x'', x'')) AND ((((vt0.c1) NOT BETWEEN (x'') AND (vt0.c1)), (vt0.c0 IN ()), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, (- (vt0.c0)), (vt0.c0 IN (vt0.c0, vt0.c0)))))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c1, vt0.c0, 1545256983)) BETWEEN ((0xffffffffc482b12c, vt0.c0 COLLATE BINARY, ((vt0.c1)OR(vt0.c0)), x'', x'')) AND ((((vt0.c1) NOT BETWEEN (x'') AND (vt0.c1)), (vt0.c0 IN ()), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, (- (vt0.c0)), (vt0.c0 IN (vt0.c0, vt0.c0)))))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING GROUP_CONCAT(MIN(MIN(AVG(vt0.c1)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (GROUP_CONCAT(MIN(MIN(AVG(vt0.c1)))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((GROUP_CONCAT(MIN(MIN(AVG(vt0.c1))))) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0, v0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE (('' IN (((v0.c0)<(v0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (('' IN (((v0.c0)<(v0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE (((('' IN (((v0.c0)<(v0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON (((CAST('碉oF-' AS NUMERIC)))>=((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON (((CAST('碉oF-' AS NUMERIC)))>=((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON (((CAST('碉oF-' AS NUMERIC)))>=((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON (((CAST('碉oF-' AS NUMERIC)))>=((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON (((CAST('碉oF-' AS NUMERIC)))>=((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL t0.c2, v0.c0, t0.c0, vt0.c1 FROM v0, t0, vt0 GROUP BY t0.c2, v0.c0, t0.c0, vt0.c1;
SELECT ALL t0.c2, v0.c0, t0.c0, vt0.c1 FROM v0, t0, vt0 WHERE (((((CAST(vt0.c0 AS REAL))AND(((0.29821326793754843)<=(vt0.c0)))))AND(((0xffffffffcf961bd5) IS TRUE)))) GROUP BY t0.c2, v0.c0, t0.c0, vt0.c1 UNION SELECT ALL t0.c2, v0.c0, t0.c0, vt0.c1 FROM v0, t0, vt0 WHERE ((NOT (((((CAST(vt0.c0 AS REAL))AND(((0.29821326793754843)<=(vt0.c0)))))AND(((0xffffffffcf961bd5) IS TRUE)))))) GROUP BY t0.c2, v0.c0, t0.c0, vt0.c1 UNION SELECT t0.c2, v0.c0, t0.c0, vt0.c1 FROM v0, t0, vt0 WHERE (((((((CAST(vt0.c0 AS REAL))AND(((0.29821326793754843)<=(vt0.c0)))))AND(((0Xffffffffcf961bd5) IS TRUE)))) ISNULL)) GROUP BY t0.c2, v0.c0, t0.c0, vt0.c1;
SELECT ALL t0.c2, v0.c0, t0.c0, vt0.c1 FROM v0, t0, vt0 GROUP BY t0.c2, v0.c0, t0.c0, vt0.c1;
SELECT ALL t0.c2, t0.c1, vt0.c1, vt0.c0, t0.c0 FROM v0, t0, vt0 GROUP BY t0.c2, t0.c1, vt0.c1, vt0.c0, t0.c0;
SELECT ALL t0.c2, t0.c1, vt0.c1, vt0.c0, t0.c0 FROM v0, t0, vt0 GROUP BY t0.c2, t0.c1, vt0.c1, vt0.c0, t0.c0 HAVING SUM(NULL) UNION ALL SELECT ALL t0.c2, t0.c1, vt0.c1, vt0.c0, t0.c0 FROM v0, t0, vt0 GROUP BY t0.c2, t0.c1, vt0.c1, vt0.c0, t0.c0 HAVING (NOT (SUM(NULL))) UNION ALL SELECT t0.c2, t0.c1, vt0.c1, vt0.c0, t0.c0 FROM v0, t0, vt0 GROUP BY t0.c2, t0.c1, vt0.c1, vt0.c0, t0.c0 HAVING ((SUM(NULL)) ISNULL);
SELECT ALL t0.c2, t0.c1, vt0.c1, vt0.c0, t0.c0 FROM v0, t0, vt0 GROUP BY t0.c2, t0.c1, vt0.c1, vt0.c0, t0.c0;
SELECT ALL t0.c2, t0.c1, vt0.c1, vt0.c0, t0.c0 FROM v0, t0, vt0 GROUP BY t0.c2, t0.c1, vt0.c1, vt0.c0, t0.c0 HAVING SUM(NULL) UNION ALL SELECT ALL t0.c2, t0.c1, vt0.c1, vt0.c0, t0.c0 FROM v0, t0, vt0 GROUP BY t0.c2, t0.c1, vt0.c1, vt0.c0, t0.c0 HAVING (NOT (SUM(NULL))) UNION ALL SELECT t0.c2, t0.c1, vt0.c1, vt0.c0, t0.c0 FROM v0, t0, vt0 GROUP BY t0.c2, t0.c1, vt0.c1, vt0.c0, t0.c0 HAVING ((SUM(NULL)) ISNULL);
SELECT ALL t0.c2, t0.c1, vt0.c1, vt0.c0, t0.c0 FROM v0, t0, vt0 GROUP BY t0.c2, t0.c1, vt0.c1, vt0.c0, t0.c0;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((((t0.c1))<=((t0.c2))) COLLATE NOCASE) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((t0.c1))<=((t0.c2))) COLLATE NOCASE))) UNION ALL SELECT * FROM t0 WHERE ((((((t0.c1))<=((t0.c2))) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0, v0, vt0;
SELECT DISTINCT * FROM t0, v0, vt0 WHERE (CASE WHEN ((vt0.c1)GLOB(t0.c1)) THEN t0.c1 WHEN (t0.c1 IN ()) THEN CAST(t0.c1 AS TEXT) WHEN (((vt0.c1))=((x''))) THEN (+ (t0.c2)) ELSE vt0.c1 COLLATE BINARY END) UNION SELECT DISTINCT * FROM t0, v0, vt0 WHERE ((NOT (CASE WHEN ((vt0.c1)GLOB(t0.c1)) THEN t0.c1 WHEN (t0.c1 IN ()) THEN CAST(t0.c1 AS TEXT) WHEN (((vt0.c1))=((x''))) THEN (+ (t0.c2)) ELSE vt0.c1 COLLATE BINARY END))) UNION SELECT DISTINCT * FROM t0, v0, vt0 WHERE (((CASE WHEN ((vt0.c1)GLOB(t0.c1)) THEN t0.c1 WHEN (t0.c1 IN ()) THEN CAST(t0.c1 AS TEXT) WHEN (((vt0.c1))==((x''))) THEN (+ (t0.c2)) ELSE vt0.c1 COLLATE BINARY END) ISNULL));
SELECT DISTINCT * FROM t0, v0, vt0;
SELECT t0.c1, vt0.c1, t0.c0 FROM t0, v0, vt0 GROUP BY t0.c1, vt0.c1, t0.c0;
SELECT ALL t0.c1, vt0.c1, t0.c0 FROM t0, v0, vt0 WHERE (CASE ((t0.c0)>>(v0.c0))  WHEN ((v0.c0) BETWEEN (v0.c0) AND (t0.c2)) THEN CAST(vt0.c0 AS REAL) END) GROUP BY t0.c1, vt0.c1, t0.c0 UNION SELECT ALL t0.c1, vt0.c1, t0.c0 FROM t0, v0, vt0 WHERE ((NOT (CASE ((t0.c0)>>(v0.c0))  WHEN ((v0.c0) BETWEEN (v0.c0) AND (t0.c2)) THEN CAST(vt0.c0 AS REAL) END))) GROUP BY t0.c1, vt0.c1, t0.c0 UNION SELECT ALL t0.c1, vt0.c1, t0.c0 FROM t0, v0, vt0 WHERE (((CASE ((t0.c0)>>(v0.c0))  WHEN ((v0.c0) BETWEEN (v0.c0) AND (t0.c2)) THEN CAST(vt0.c0 AS REAL) END) ISNULL)) GROUP BY t0.c1, vt0.c1, t0.c0;
SELECT t0.c1, vt0.c1, t0.c0 FROM t0, v0, vt0 GROUP BY t0.c1, vt0.c1, t0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(COUNT(COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(COUNT(*))))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(COUNT(COUNT(*)))) ISNULL);
SELECT vt0.c1, vt0.c0, t0.c1 FROM vt0 NOT INDEXED, t0;
SELECT vt0.c1, vt0.c0, t0.c1 FROM vt0, t0 WHERE (((((((((((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)))OR(CASE vt0.c1  WHEN vt0.c0 THEN t0.c1 END)))AND(((((((((-6.65630048E8)OR(vt0.c1)))OR(t0.c0)))AND(vt0.c1)))OR(t0.c1)))))AND(t0.c2 COLLATE RTRIM)))OR((vt0.c1 IN ())))) UNION ALL SELECT vt0.c1, vt0.c0, t0.c1 FROM vt0, t0 WHERE ((NOT (((((((((((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)))OR(CASE vt0.c1  WHEN vt0.c0 THEN t0.c1 END)))AND(((((((((-6.65630048E8)OR(vt0.c1)))OR(t0.c0)))AND(vt0.c1)))OR(t0.c1)))))AND(t0.c2 COLLATE RTRIM)))OR((vt0.c1 IN ())))))) UNION ALL SELECT vt0.c1, vt0.c0, t0.c1 FROM vt0, t0 WHERE (((((((((((((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)))OR(CASE vt0.c1  WHEN vt0.c0 THEN t0.c1 END)))AND(((((((((-6.65630048E8)OR(vt0.c1)))OR(t0.c0)))AND(vt0.c1)))OR(t0.c1)))))AND(t0.c2 COLLATE RTRIM)))OR((vt0.c1 IN ())))) ISNULL));
SELECT vt0.c1, vt0.c0, t0.c1 FROM vt0 NOT INDEXED, t0;
SELECT DISTINCT t0.c1 FROM t0;
SELECT DISTINCT t0.c1 FROM t0 WHERE ((((((t0.c1 IN (t0.c1)))AND(((t0.c2)>(t0.c0)))))OR(((((t0.c0)AND(t0.c2)))AND(t0.c0))))) UNION SELECT DISTINCT t0.c1 FROM t0 WHERE ((NOT ((((((t0.c1 IN (t0.c1)))AND(((t0.c2)>(t0.c0)))))OR(((((t0.c0)AND(t0.c2)))AND(t0.c0))))))) UNION SELECT DISTINCT t0.c1 FROM t0 WHERE ((((((((t0.c1 IN (t0.c1)))AND(((t0.c2)>(t0.c0)))))OR(((((t0.c0)AND(t0.c2)))AND(t0.c0))))) ISNULL));
SELECT DISTINCT t0.c1 FROM t0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (NULL) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (NULL))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((NULL) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c0, t0.c1, t0.c2, v0.c0 FROM v0 CROSS JOIN t0 ON ((0.46093844438882825) IS FALSE) COLLATE NOCASE GROUP BY t0.c0, t0.c1, t0.c2, v0.c0;
SELECT t0.c0, t0.c1, t0.c2, v0.c0 FROM v0 CROSS JOIN t0 ON ((0.46093844438882825) IS FALSE) COLLATE NOCASE GROUP BY t0.c0, t0.c1, t0.c2, v0.c0 HAVING MAX(MIN(t0.c2)) UNION ALL SELECT t0.c0, t0.c1, t0.c2, v0.c0 FROM v0 CROSS JOIN t0 ON ((0.46093844438882825) IS FALSE) COLLATE NOCASE GROUP BY t0.c0, t0.c1, t0.c2, v0.c0 HAVING (NOT (MAX(MIN(t0.c2)))) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2, v0.c0 FROM v0 CROSS JOIN t0 ON ((0.46093844438882825) IS FALSE) COLLATE NOCASE GROUP BY t0.c0, t0.c1, t0.c2, v0.c0 HAVING ((MAX(MIN(t0.c2))) ISNULL);
SELECT t0.c2, v0.c0, t0.c0, t0.c1 FROM t0, v0;
SELECT t0.c2, v0.c0, t0.c0, t0.c1 FROM t0, v0 WHERE ((((('Mr') ISNULL))||(TYPEOF(DISTINCT t0.c1)))) UNION ALL SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1 FROM t0, v0 WHERE ((NOT ((((('Mr') ISNULL))||(TYPEOF(DISTINCT t0.c1)))))) UNION ALL SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1 FROM t0, v0 WHERE ((((((('Mr') ISNULL))||(TYPEOF(DISTINCT t0.c1)))) ISNULL));
SELECT t0.c2, v0.c0, t0.c0, t0.c1 FROM t0, v0;
SELECT DISTINCT * FROM v0, vt0, t0;
SELECT DISTINCT * FROM v0, vt0, t0 WHERE ((vt0.c1 COLLATE BINARY IN ())) UNION SELECT DISTINCT * FROM v0, vt0, t0 WHERE ((NOT ((vt0.c1 COLLATE BINARY IN ())))) UNION SELECT DISTINCT * FROM v0, vt0, t0 WHERE ((((vt0.c1 COLLATE BINARY IN ())) ISNULL));
SELECT DISTINCT * FROM v0, vt0, t0;
SELECT ALL v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)) COLLATE NOCASE GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)) COLLATE NOCASE WHERE (ABS((vt0.c0 IN (vt0.c0)))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)) COLLATE NOCASE WHERE ((NOT (ABS((vt0.c0 IN (vt0.c0)))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)) COLLATE NOCASE WHERE (((ABS((vt0.c0 IN (vt0.c0)))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)) COLLATE NOCASE GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((((vt0.c1)*(MIN(MIN(MIN(v0.c0))))))>=(((AVG(MAX(MAX(TOTAL(MAX(vt0.c0)))))) ISNULL))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (((((vt0.c1)*(MIN(MIN(MIN(v0.c0))))))>=(((AVG(MAX(MAX(TOTAL(MAX(vt0.c0)))))) ISNULL))))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((((((vt0.c1)*(MIN(MIN(MIN(v0.c0))))))>=(((AVG(MAX(MAX(TOTAL(MAX(vt0.c0)))))) ISNULL)))) ISNULL);
SELECT MIN('-1795089299') FROM vt0, v0, t0 ORDER BY ((vt0.c1 COLLATE RTRIM) IS TRUE)  NULLS LAST;
SELECT * FROM vt0, t0 INNER JOIN v0 ON load_extension(CAST(v0.c0 AS BLOB), ((vt0.c0) IS FALSE));
SELECT * FROM vt0, t0 INNER JOIN v0 ON load_extension(CAST(v0.c0 AS BLOB), ((vt0.c0) IS FALSE)) WHERE ((((((((((((((vt0.c0)OR(vt0.c1)))OR(t0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(t0.c1)))OR(0xfffffffffbf3607f)) IN (t0.c0))) UNION ALL SELECT * FROM vt0, t0 INNER JOIN v0 ON load_extension(CAST(v0.c0 AS BLOB), ((vt0.c0) IS FALSE)) WHERE ((NOT ((((((((((((((vt0.c0)OR(vt0.c1)))OR(t0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(t0.c1)))OR(0Xfffffffffbf3607f)) IN (t0.c0))))) UNION ALL SELECT ALL * FROM vt0, t0 INNER JOIN v0 ON load_extension(CAST(v0.c0 AS BLOB), ((vt0.c0) IS FALSE)) WHERE ((((((((((((((((vt0.c0)OR(vt0.c1)))OR(t0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(t0.c1)))OR(0xfffffffffbf3607f)) IN (t0.c0))) ISNULL));
SELECT * FROM vt0, t0 INNER JOIN v0 ON load_extension(CAST(v0.c0 AS BLOB), ((vt0.c0) IS FALSE));
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((((v0.c0) NOT NULL))=(LOWER(vt0.c1)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((((v0.c0) NOT NULL))=(LOWER(vt0.c1)))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((((v0.c0) NOT NULL))==(LOWER(vt0.c1)))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL v0.c0, vt0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c1 FROM vt0, v0 WHERE (CASE WHEN 0.620755785164364 THEN (~ (x'2ecc')) END) GROUP BY v0.c0, vt0.c1 UNION SELECT v0.c0, vt0.c1 FROM vt0, v0 WHERE ((NOT (CASE WHEN 0.620755785164364 THEN (~ (x'2ecc')) END))) GROUP BY v0.c0, vt0.c1 UNION SELECT ALL v0.c0, vt0.c1 FROM vt0, v0 WHERE (((CASE WHEN 0.620755785164364 THEN (~ (x'2ecc')) END) ISNULL)) GROUP BY v0.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING COUNT(*) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING COUNT(*) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (LIKELY(DISTINCT CAST(vt0.c1 AS NUMERIC))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (LIKELY(DISTINCT CAST(vt0.c1 AS NUMERIC))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((LIKELY(DISTINCT CAST(vt0.c1 AS NUMERIC))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c2)|(t0.c1)), (- (t0.c0)), t0.c1 COLLATE RTRIM, ((t0.c2) BETWEEN (t0.c2) AND (t0.c1)), ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1))))!=((((((t0.c1)OR(t0.c2)))OR(t0.c2)), 0.8251147515176446, LIKELIHOOD(t0.c1, 0.7305299041854102), CAST(t0.c0 AS NUMERIC), t0.c0)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((((t0.c2)|(t0.c1)), (- (t0.c0)), t0.c1 COLLATE RTRIM, ((t0.c2) BETWEEN (t0.c2) AND (t0.c1)), ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1))))<>((((((t0.c1)OR(t0.c2)))OR(t0.c2)), 0.8251147515176446, LIKELIHOOD(t0.c1, 0.7305299041854102), CAST(t0.c0 AS NUMERIC), t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((((t0.c2)|(t0.c1)), (- (t0.c0)), t0.c1 COLLATE RTRIM, ((t0.c2) BETWEEN (t0.c2) AND (t0.c1)), ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1))))<>((((((t0.c1)OR(t0.c2)))OR(t0.c2)), 0.8251147515176446, LIKELIHOOD(t0.c1, 0.7305299041854102), CAST(t0.c0 AS NUMERIC), t0.c0)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT v0.c0 FROM vt0, v0, t0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0, t0 WHERE ('0.5721516986679022') GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0, t0 WHERE ((NOT ('0.5721516986679022'))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0, t0 WHERE ((('0.5721516986679022') ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0, t0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TRIM(MIN(GROUP_CONCAT(TOTAL(GROUP_CONCAT(vt0.c1)))), (+ (MIN(COUNT(*))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TRIM(MIN(GROUP_CONCAT(TOTAL(GROUP_CONCAT(vt0.c1)))), (+ (MIN(COUNT(*))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TRIM(MIN(GROUP_CONCAT(TOTAL(GROUP_CONCAT(vt0.c1)))), (+ (MIN(COUNT(*)))))) ISNULL);
SELECT ALL t0.c2, vt0.c1 FROM vt0 CROSS JOIN t0 ON vt0.c0;
SELECT t0.c2, vt0.c1 FROM vt0 CROSS JOIN t0 ON vt0.c0 WHERE (((((((vt0.c1)GLOB(0.21837917646757465)))AND((((vt0.c1))<((NULL))))))OR((~ (vt0.c1))))) UNION ALL SELECT t0.c2, vt0.c1 FROM vt0 CROSS JOIN t0 ON vt0.c0 WHERE ((NOT (((((((vt0.c1)GLOB(0.21837917646757465)))AND((((vt0.c1))<((NULL))))))OR((~ (vt0.c1))))))) UNION ALL SELECT ALL t0.c2, vt0.c1 FROM vt0 NOT INDEXED CROSS JOIN t0 ON vt0.c0 WHERE (((((((((vt0.c1)GLOB(0.21837917646757465)))AND((((vt0.c1))<((NULL))))))OR((~ (vt0.c1))))) ISNULL));
SELECT ALL t0.c2, vt0.c1 FROM vt0 CROSS JOIN t0 ON vt0.c0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (((((((t0.c0))=((vt0.c1)))))>((vt0.c1 COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (((((((t0.c0))=((vt0.c1)))))>((vt0.c1 COLLATE NOCASE)))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((((((((t0.c0))==((vt0.c1)))))>((vt0.c1 COLLATE NOCASE)))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL t0.c1, v0.c0, t0.c2, t0.c0 FROM vt0, v0 RIGHT OUTER JOIN t0 ON CAST((vt0.c0 IN ()) AS INTEGER) GROUP BY t0.c1, v0.c0, t0.c2, t0.c0;
SELECT ALL t0.c1, v0.c0, t0.c2, t0.c0 FROM vt0, v0 RIGHT OUTER JOIN t0 ON CAST((vt0.c0 IN ()) AS INTEGER) WHERE ((((+ (t0.c1))) IS TRUE)) GROUP BY t0.c1, v0.c0, t0.c2, t0.c0 UNION SELECT t0.c1, v0.c0, t0.c2, t0.c0 FROM vt0, v0 RIGHT OUTER JOIN t0 ON CAST((vt0.c0 IN ()) AS INTEGER) WHERE ((NOT ((((+ (t0.c1))) IS TRUE)))) GROUP BY t0.c1, v0.c0, t0.c2, t0.c0 UNION SELECT ALL t0.c1, v0.c0, t0.c2, t0.c0 FROM vt0, v0 RIGHT OUTER JOIN t0 ON CAST((vt0.c0 IN ()) AS INTEGER) WHERE ((((((+ (t0.c1))) IS TRUE)) ISNULL)) GROUP BY t0.c1, v0.c0, t0.c2, t0.c0;
SELECT ALL t0.c1, v0.c0, t0.c2, t0.c0 FROM vt0, v0 RIGHT OUTER JOIN t0 ON CAST((vt0.c0 IN ()) AS INTEGER) GROUP BY t0.c1, v0.c0, t0.c2, t0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(TOTAL(MAX(COUNT(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(TOTAL(MAX(COUNT(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(TOTAL(MAX(COUNT(v0.c0))))) ISNULL);
SELECT ALL v0.c0, t0.c1, t0.c0, t0.c2 FROM t0, v0;
SELECT v0.c0, t0.c1, t0.c0, t0.c2 FROM t0, v0 WHERE (((RTRIM(''))*((t0.c2 IN ())))) UNION ALL SELECT v0.c0, t0.c1, t0.c0, t0.c2 FROM t0, v0 WHERE ((NOT (((RTRIM(''))*((t0.c2 IN ())))))) UNION ALL SELECT ALL v0.c0, t0.c1, t0.c0, t0.c2 FROM t0, v0 WHERE (((((RTRIM(''))*((t0.c2 IN ())))) ISNULL));
SELECT ALL v0.c0, t0.c1, t0.c0, t0.c2 FROM t0, v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)GLOB(0.5114902036889811)))OR(t0.c0 COLLATE RTRIM)))AND(t0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((((t0.c0)GLOB(0.5114902036889811)))OR(t0.c0 COLLATE RTRIM)))AND(t0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((((t0.c0)GLOB(0.5114902036889811)))OR(t0.c0 COLLATE RTRIM)))AND(t0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM t0 WHERE ((((t0.c2, t0.c1, t0.c0)) BETWEEN ((t0.c0, t0.c1, t0.c2)) AND ((t0.c0, t0.c1, t0.c1))) COLLATE RTRIM COLLATE RTRIM) GROUP BY t0.c0, t0.c1 UNION SELECT t0.c0, t0.c1 FROM t0 WHERE ((NOT ((((t0.c2, t0.c1, t0.c0)) BETWEEN ((t0.c0, t0.c1, t0.c2)) AND ((t0.c0, t0.c1, t0.c1))) COLLATE RTRIM COLLATE RTRIM))) GROUP BY t0.c0, t0.c1 UNION SELECT t0.c0, t0.c1 FROM t0 WHERE ((((((t0.c2, t0.c1, t0.c0)) BETWEEN ((t0.c0, t0.c1, t0.c2)) AND ((t0.c0, t0.c1, t0.c1))) COLLATE RTRIM COLLATE RTRIM) ISNULL)) GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT vt0.c0 FROM t0, vt0 INNER JOIN v0 ON 0.16948603365224113 COLLATE NOCASE GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0 INNER JOIN v0 ON 0.16948603365224113 COLLATE NOCASE GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(t0.c1))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 INNER JOIN v0 ON 0.16948603365224113 COLLATE NOCASE GROUP BY vt0.c0 HAVING (NOT ((NOT (GROUP_CONCAT(t0.c1))))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 INNER JOIN v0 ON 0.16948603365224113 COLLATE NOCASE GROUP BY vt0.c0 HAVING (((NOT (GROUP_CONCAT(t0.c1)))) ISNULL);
SELECT vt0.c0 FROM t0, vt0 INNER JOIN v0 ON 0.16948603365224113 COLLATE NOCASE GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0 INNER JOIN v0 ON 0.16948603365224113 COLLATE NOCASE GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(t0.c1))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 INNER JOIN v0 ON 0.16948603365224113 COLLATE NOCASE GROUP BY vt0.c0 HAVING (NOT ((NOT (GROUP_CONCAT(t0.c1))))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 INNER JOIN v0 ON 0.16948603365224113 COLLATE NOCASE GROUP BY vt0.c0 HAVING (((NOT (GROUP_CONCAT(t0.c1)))) ISNULL);
SELECT vt0.c0 FROM t0, vt0 INNER JOIN v0 ON 0.16948603365224113 COLLATE NOCASE GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND ('\n2{')))AND(((vt0.c1)LIKE(vt0.c1)))))OR((vt0.c0 IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND ('\n2{')))AND(((vt0.c1)LIKE(vt0.c1)))))OR((vt0.c0 IN ())))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0) NOT BETWEEN (vt0.c1) AND ('\n2{')))AND(((vt0.c1)LIKE(vt0.c1)))))OR((vt0.c0 IN ())))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT v0.c0, t0.c1, t0.c0, t0.c2 FROM t0, v0 INDEXED BY i87;
SELECT ALL t0.c1 FROM v0, vt0 LEFT OUTER JOIN t0 ON ((+ (v0.c0)) IN ()) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM v0, vt0 LEFT OUTER JOIN t0 ON ((+ (v0.c0)) IN ()) WHERE (CASE WHEN ((t0.c2) NOT NULL) THEN '-2101004805' ELSE (((t0.c2)) NOT BETWEEN (('-701199939')) AND ((t0.c1))) END) GROUP BY t0.c1 UNION SELECT t0.c1 FROM v0, vt0 LEFT OUTER JOIN t0 ON ((+ (v0.c0)) IN ()) WHERE ((NOT (CASE WHEN ((t0.c2) NOT NULL) THEN '-2101004805' ELSE (((t0.c2)) NOT BETWEEN (('-701199939')) AND ((t0.c1))) END))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM v0, vt0 LEFT OUTER JOIN t0 ON ((+ (v0.c0)) IN ()) WHERE (((CASE WHEN ((t0.c2) NOT NULL) THEN '-2101004805' ELSE (((t0.c2)) NOT BETWEEN (('-701199939')) AND ((t0.c1))) END) ISNULL)) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM v0, vt0 LEFT OUTER JOIN t0 ON ((+ (v0.c0)) IN ()) GROUP BY t0.c1;
SELECT t0.c2 FROM v0, t0, vt0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM v0, t0, vt0 GROUP BY t0.c2 HAVING t0.c2 COLLATE BINARY UNION ALL SELECT t0.c2 FROM v0, t0, vt0 GROUP BY t0.c2 HAVING (NOT (t0.c2 COLLATE BINARY)) UNION ALL SELECT ALL t0.c2 FROM v0, t0, vt0 GROUP BY t0.c2 HAVING ((t0.c2 COLLATE BINARY) ISNULL);
SELECT t0.c2 FROM v0, t0, vt0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM v0, t0, vt0 GROUP BY t0.c2 HAVING t0.c2 COLLATE BINARY UNION ALL SELECT t0.c2 FROM v0, t0, vt0 GROUP BY t0.c2 HAVING (NOT (t0.c2 COLLATE BINARY)) UNION ALL SELECT ALL t0.c2 FROM v0, t0, vt0 GROUP BY t0.c2 HAVING ((t0.c2 COLLATE BINARY) ISNULL);
SELECT t0.c2 FROM v0, t0, vt0 GROUP BY t0.c2;
SELECT t0.c2, t0.c0, t0.c1, vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN t0 ON ((0X485c2f65)>>(((vt0.c1)IS(t0.c0))));
SELECT ALL t0.c2, t0.c0, t0.c1, vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN t0 ON ((0X485c2f65)>>(((vt0.c1)IS(t0.c0)))) WHERE (CAST(((((((((vt0.c0)OR(NULL)))AND(t0.c1)))AND(t0.c2)))AND(vt0.c1)) AS BLOB)) UNION ALL SELECT t0.c2, t0.c0, t0.c1, vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN t0 ON ((0x485c2f65)>>(((vt0.c1)IS(t0.c0)))) WHERE ((NOT (CAST(((((((((vt0.c0)OR(NULL)))AND(t0.c1)))AND(t0.c2)))AND(vt0.c1)) AS BLOB)))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1, vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN t0 ON ((0X485c2f65)>>(((vt0.c1)IS(t0.c0)))) WHERE (((CAST(((((((((vt0.c0)OR(NULL)))AND(t0.c1)))AND(t0.c2)))AND(vt0.c1)) AS BLOB)) ISNULL));
SELECT t0.c2, t0.c0, t0.c1, vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN t0 ON ((0X485c2f65)>>(((vt0.c1)IS(t0.c0))));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((((- (vt0.c1)))OR(vt0.c1))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((- (vt0.c1)))OR(vt0.c1))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((- (vt0.c1)))OR(vt0.c1))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((NOT (v0.c0)))=((+ (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((NOT (v0.c0)))=((+ (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((NOT (v0.c0)))==((+ (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(v0.c0)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(v0.c0)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c0, vt0.c1 FROM vt0, t0;
SELECT t0.c0, vt0.c1 FROM vt0, t0 WHERE ((((t0.c1 IN ())) ISNULL)) UNION ALL SELECT ALL t0.c0, vt0.c1 FROM vt0, t0 WHERE ((NOT ((((t0.c1 IN ())) ISNULL)))) UNION ALL SELECT t0.c0, vt0.c1 FROM vt0, t0 WHERE ((((((t0.c1 IN ())) ISNULL)) ISNULL));
SELECT t0.c0, vt0.c1 FROM vt0, t0;
SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON ((((vt0.c0) BETWEEN (t0.c2) AND (vt0.c0)))%(((t0.c0) BETWEEN (t0.c0) AND (v0.c0)))) LEFT OUTER JOIN t0 ON ((CAST(t0.c0 AS INTEGER))|(load_extension(t0.c0)));
SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON ((((vt0.c0) BETWEEN (t0.c2) AND (vt0.c0)))%(((t0.c0) BETWEEN (t0.c0) AND (v0.c0)))) LEFT OUTER JOIN t0 ON ((CAST(t0.c0 AS INTEGER))|(load_extension(t0.c0))) WHERE (CASE ((vt0.c1)||(x''))  WHEN ((t0.c2)>=(t0.c1)) THEN CASE WHEN vt0.c1 THEN t0.c2 ELSE vt0.c0 END WHEN LIKE(t0.c0, t0.c2, '-') THEN (t0.c2 IN ()) WHEN ((v0.c0)>(0.9476791367446973)) THEN ((vt0.c1)GLOB(vt0.c1)) END) UNION SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON ((((vt0.c0) BETWEEN (t0.c2) AND (vt0.c0)))%(((t0.c0) BETWEEN (t0.c0) AND (v0.c0)))) LEFT OUTER JOIN t0 ON ((CAST(t0.c0 AS INTEGER))|(load_extension(t0.c0))) WHERE ((NOT (CASE ((vt0.c1)||(x''))  WHEN ((t0.c2)>=(t0.c1)) THEN CASE WHEN vt0.c1 THEN t0.c2 ELSE vt0.c0 END WHEN LIKE(t0.c0, t0.c2, '-') THEN (t0.c2 IN ()) WHEN ((v0.c0)>(0.9476791367446973)) THEN ((vt0.c1)GLOB(vt0.c1)) END))) UNION SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON ((((vt0.c0) BETWEEN (t0.c2) AND (vt0.c0)))%(((t0.c0) BETWEEN (t0.c0) AND (v0.c0)))) LEFT OUTER JOIN t0 ON ((CAST(t0.c0 AS INTEGER))|(load_extension(t0.c0))) WHERE (((CASE ((vt0.c1)||(x''))  WHEN ((t0.c2)>=(t0.c1)) THEN CASE WHEN vt0.c1 THEN t0.c2 ELSE vt0.c0 END WHEN LIKE(t0.c0, t0.c2, '-') THEN (t0.c2 IN ()) WHEN ((v0.c0)>(0.9476791367446973)) THEN ((vt0.c1)GLOB(vt0.c1)) END) ISNULL));
SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON ((((vt0.c0) BETWEEN (t0.c2) AND (vt0.c0)))%(((t0.c0) BETWEEN (t0.c0) AND (v0.c0)))) LEFT OUTER JOIN t0 ON ((CAST(t0.c0 AS INTEGER))|(load_extension(t0.c0)));
SELECT ALL vt0.c1, t0.c0, vt0.c0, t0.c1, v0.c0, t0.c2 FROM vt0, v0 FULL OUTER JOIN t0 ON NULL GROUP BY vt0.c1, t0.c0, vt0.c0, t0.c1, v0.c0, t0.c2;
SELECT vt0.c1, t0.c0, vt0.c0, t0.c1, v0.c0, t0.c2 FROM vt0, v0 FULL OUTER JOIN t0 ON NULL WHERE (((((vt0.c0) BETWEEN (t0.c2) AND (vt0.c1)))%(((x'') BETWEEN (vt0.c1) AND (NULL))))) GROUP BY vt0.c1, t0.c0, vt0.c0, t0.c1, v0.c0, t0.c2 UNION SELECT vt0.c1, t0.c0, vt0.c0, t0.c1, v0.c0, t0.c2 FROM vt0, v0 FULL OUTER JOIN t0 ON NULL WHERE ((NOT (((((vt0.c0) BETWEEN (t0.c2) AND (vt0.c1)))%(((x'') BETWEEN (vt0.c1) AND (NULL))))))) GROUP BY vt0.c1, t0.c0, vt0.c0, t0.c1, v0.c0, t0.c2 UNION SELECT vt0.c1, t0.c0, vt0.c0, t0.c1, v0.c0, t0.c2 FROM vt0, v0 FULL OUTER JOIN t0 ON NULL WHERE (((((((vt0.c0) BETWEEN (t0.c2) AND (vt0.c1)))%(((x'') BETWEEN (vt0.c1) AND (NULL))))) ISNULL)) GROUP BY vt0.c1, t0.c0, vt0.c0, t0.c1, v0.c0, t0.c2;
SELECT ALL vt0.c1, t0.c0, vt0.c0, t0.c1, v0.c0, t0.c2 FROM vt0, v0 FULL OUTER JOIN t0 ON NULL GROUP BY vt0.c1, t0.c0, vt0.c0, t0.c1, v0.c0, t0.c2;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(((v0.c0) BETWEEN (AVG(v0.c0)) AND (vt0.c1))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(((v0.c0) BETWEEN (AVG(v0.c0)) AND (vt0.c1))))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(((v0.c0) BETWEEN (AVG(v0.c0)) AND (vt0.c1)))) ISNULL);
SELECT ALL TOTAL((((CASE v0.c0  WHEN t0.c0 THEN 0.7377521223523342 ELSE t0.c2 END, t0.c2 COLLATE RTRIM, CAST(NULL AS BLOB)))<(((((t0.c0, t0.c2, t0.c0)) BETWEEN ((t0.c0, t0.c2, t0.c2)) AND ((v0.c0, t0.c2, t0.c0))), ((v0.c0) NOT NULL), t0.c2)))) FROM v0, t0 ORDER BY t0.c0 DESC;
SELECT vt0.c1, vt0.c0, t0.c0, v0.c0 FROM t0, v0 INNER JOIN vt0 ON CAST(vt0.c0 AS TEXT) COLLATE BINARY;
SELECT vt0.c1, vt0.c0, t0.c0, v0.c0 FROM t0, v0 INNER JOIN vt0 ON CAST(vt0.c0 AS TEXT) COLLATE BINARY WHERE (((((vt0.c0) NOTNULL))IS(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, t0.c0, v0.c0 FROM t0, v0 INNER JOIN vt0 ON CAST(vt0.c0 AS TEXT) COLLATE BINARY WHERE ((NOT (((((vt0.c0) NOTNULL))IS(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, t0.c0, v0.c0 FROM t0, v0 INNER JOIN vt0 ON CAST(vt0.c0 AS TEXT) COLLATE BINARY WHERE (((((((vt0.c0) NOTNULL))IS(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1))))) ISNULL));
SELECT vt0.c1, vt0.c0, t0.c0, v0.c0 FROM t0, v0 INNER JOIN vt0 ON CAST(vt0.c0 AS TEXT) COLLATE BINARY;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((((((t0.c1)OR('-1359706880')))AND(t0.c2)))OR(NULL)))OR(CASE WHEN 0.8032104188843101 THEN t0.c2 END))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((((((t0.c1)OR('-1359706880')))AND(t0.c2)))OR(NULL)))OR(CASE WHEN 0.8032104188843101 THEN t0.c2 END))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((((((t0.c1)OR('-1359706880')))AND(t0.c2)))OR(NULL)))OR(CASE WHEN 0.8032104188843101 THEN t0.c2 END))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON (+ (CAST(vt0.c0 AS INTEGER))) GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON (+ (CAST(vt0.c0 AS INTEGER))) WHERE (IFNULL(DISTINCT ((0.13601724583641184) BETWEEN (vt0.c1) AND (vt0.c1)), IFNULL(vt0.c1, v0.c0))) GROUP BY v0.c0, vt0.c1, vt0.c0 UNION SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON (+ (CAST(vt0.c0 AS INTEGER))) WHERE ((NOT (IFNULL(DISTINCT ((0.13601724583641184) BETWEEN (vt0.c1) AND (vt0.c1)), IFNULL(vt0.c1, v0.c0))))) GROUP BY v0.c0, vt0.c1, vt0.c0 UNION SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON (+ (CAST(vt0.c0 AS INTEGER))) WHERE (((IFNULL(DISTINCT ((0.13601724583641184) BETWEEN (vt0.c1) AND (vt0.c1)), IFNULL(vt0.c1, v0.c0))) ISNULL)) GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON (+ (CAST(vt0.c0 AS INTEGER))) GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT ALL t0.c2, v0.c0 FROM t0, v0 GROUP BY t0.c2, v0.c0;
SELECT ALL t0.c2, v0.c0 FROM t0, v0 GROUP BY t0.c2, v0.c0 HAVING UPPER(MIN(t0.c1)) UNION ALL SELECT t0.c2, v0.c0 FROM t0, v0 GROUP BY t0.c2, v0.c0 HAVING (NOT (UPPER(MIN(t0.c1)))) UNION ALL SELECT ALL t0.c2, v0.c0 FROM t0, v0 GROUP BY t0.c2, v0.c0 HAVING ((UPPER(MIN(t0.c1))) ISNULL);
SELECT ALL t0.c2, v0.c0 FROM t0, v0 GROUP BY t0.c2, v0.c0;
SELECT ALL t0.c2, v0.c0 FROM t0, v0 GROUP BY t0.c2, v0.c0 HAVING UPPER(MIN(t0.c1)) UNION ALL SELECT t0.c2, v0.c0 FROM t0, v0 GROUP BY t0.c2, v0.c0 HAVING (NOT (UPPER(MIN(t0.c1)))) UNION ALL SELECT ALL t0.c2, v0.c0 FROM t0, v0 GROUP BY t0.c2, v0.c0 HAVING ((UPPER(MIN(t0.c1))) ISNULL);
SELECT ALL t0.c2, v0.c0 FROM t0, v0 GROUP BY t0.c2, v0.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(v0.c0))) NOT NULL)) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((((v0.c0)OR(v0.c0)))AND(v0.c0))) NOT NULL)))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))AND(v0.c0))) NOT NULL)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT vt0.c0 FROM v0, vt0 RIGHT OUTER JOIN t0 ON CAST(((t0.c0)*(t0.c2)) AS TEXT);
SELECT DISTINCT vt0.c0 FROM v0, vt0 RIGHT OUTER JOIN t0 ON CAST(((t0.c0)*(t0.c2)) AS TEXT) WHERE ((((v0.c0, '-535830027', vt0.c0)) NOT BETWEEN ((((vt0.c1) BETWEEN (t0.c1) AND (v0.c0)), (NOT (t0.c1)), HEX(DISTINCT vt0.c0))) AND ((((vt0.c0)OR(t0.c2)), ((((((((vt0.c1)AND(t0.c1)))AND(t0.c2)))AND(vt0.c1)))OR(v0.c0)), (vt0.c0 IN ()))))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 RIGHT OUTER JOIN t0 ON CAST(((t0.c0)*(t0.c2)) AS TEXT) WHERE ((NOT ((((v0.c0, '-535830027', vt0.c0)) NOT BETWEEN ((((vt0.c1) BETWEEN (t0.c1) AND (v0.c0)), (NOT (t0.c1)), HEX(DISTINCT vt0.c0))) AND ((((vt0.c0)OR(t0.c2)), ((((((((vt0.c1)AND(t0.c1)))AND(t0.c2)))AND(vt0.c1)))OR(v0.c0)), (vt0.c0 IN ()))))))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 NOT INDEXED RIGHT OUTER JOIN t0 ON CAST(((t0.c0)*(t0.c2)) AS TEXT) WHERE ((((((v0.c0, '-535830027', vt0.c0)) NOT BETWEEN ((((vt0.c1) BETWEEN (t0.c1) AND (v0.c0)), (NOT (t0.c1)), HEX(DISTINCT vt0.c0))) AND ((((vt0.c0)OR(t0.c2)), ((((((((vt0.c1)AND(t0.c1)))AND(t0.c2)))AND(vt0.c1)))OR(v0.c0)), (vt0.c0 IN ()))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, vt0 RIGHT OUTER JOIN t0 ON CAST(((t0.c0)*(t0.c2)) AS TEXT);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CAST((- (v0.c0)) AS INTEGER)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST((- (v0.c0)) AS INTEGER)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CAST((- (v0.c0)) AS INTEGER)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(NULL) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(NULL))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(NULL)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(NULL) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(NULL))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(NULL)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM vt0, v0, t0;
SELECT * FROM vt0, v0, t0 WHERE ((v0.c0 IN (t0.c2, t0.c1)) COLLATE BINARY) UNION ALL SELECT ALL * FROM vt0, v0, t0 WHERE ((NOT ((v0.c0 IN (t0.c2, t0.c1)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt0, v0, t0 WHERE ((((v0.c0 IN (t0.c2, t0.c1)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt0, v0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c1)) NOT BETWEEN (('-123378768')) AND (((((t0.c1, t0.c0, t0.c1, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, 0.9843710154433103, t0.c1, NULL)) AND ((t0.c2, t0.c2, t0.c0, t0.c1, ''))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((t0.c1)) NOT BETWEEN (('-123378768')) AND (((((t0.c1, t0.c0, t0.c1, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, 0.9843710154433103, t0.c1, NULL)) AND ((t0.c2, t0.c2, t0.c0, t0.c1, ''))))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((t0.c1)) NOT BETWEEN (('-123378768')) AND (((((t0.c1, t0.c0, t0.c1, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, 0.9843710154433103, t0.c1, NULL)) AND ((t0.c2, t0.c2, t0.c0, t0.c1, ''))))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((((v0.c0)>(v0.c0)), ((v0.c0)<(x'ef55')), (v0.c0 IN (NULL))))!=((((v0.c0)|(NULL)), ((v0.c0) IS TRUE), ((((v0.c0)OR(v0.c0)))OR(v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0)>(v0.c0)), ((v0.c0)<(x'ef55')), (v0.c0 IN (NULL))))!=((((v0.c0)|(NULL)), ((v0.c0) IS TRUE), ((((v0.c0)OR(v0.c0)))OR(v0.c0)))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((((v0.c0)>(v0.c0)), ((v0.c0)<(x'ef55')), (v0.c0 IN (NULL))))!=((((v0.c0)|(NULL)), ((v0.c0) IS TRUE), ((((v0.c0)OR(v0.c0)))OR(v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((((AVG(t0.c1))/(COUNT(AVG(SUM(AVG(t0.c1)))))))OR(GROUP_CONCAT(COUNT(t0.c1)))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (((((AVG(t0.c1))/(COUNT(AVG(SUM(AVG(t0.c1)))))))OR(GROUP_CONCAT(COUNT(t0.c1)))))) UNION ALL SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((((((AVG(t0.c1))/(COUNT(AVG(SUM(AVG(t0.c1)))))))OR(GROUP_CONCAT(COUNT(t0.c1))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (NULL) UNION ALL SELECT * FROM vt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM vt0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT t0.c0, t0.c2 FROM t0;
SELECT DISTINCT t0.c0, t0.c2 FROM t0 WHERE ((- (t0.c2)) COLLATE RTRIM COLLATE NOCASE) UNION SELECT DISTINCT t0.c0, t0.c2 FROM t0 WHERE ((NOT ((- (t0.c2)) COLLATE RTRIM COLLATE NOCASE))) UNION SELECT DISTINCT t0.c0, t0.c2 FROM t0 WHERE ((((- (t0.c2)) COLLATE RTRIM COLLATE NOCASE) ISNULL));
SELECT DISTINCT t0.c0, t0.c2 FROM t0;
SELECT ALL t0.c2 FROM t0 FULL OUTER JOIN v0 ON ((((v0.c0, t0.c2, v0.c0)) NOT BETWEEN ((t0.c1, v0.c0, t0.c2)) AND ((t0.c2, t0.c1, v0.c0))) IN ()) GROUP BY t0.c2;
SELECT t0.c2 FROM t0 FULL OUTER JOIN v0 ON ((((v0.c0, t0.c2, v0.c0)) NOT BETWEEN ((t0.c1, v0.c0, t0.c2)) AND ((t0.c2, t0.c1, v0.c0))) IN ()) WHERE (CASE (t0.c2 IN ())  WHEN (~ (t0.c2)) THEN CAST(t0.c2 AS NUMERIC) WHEN ((t0.c0)>=(t0.c1)) THEN v0.c0 COLLATE BINARY WHEN ((t0.c2) BETWEEN (v0.c0) AND (v0.c0)) THEN t0.c1 END) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 FULL OUTER JOIN v0 ON ((((v0.c0, t0.c2, v0.c0)) NOT BETWEEN ((t0.c1, v0.c0, t0.c2)) AND ((t0.c2, t0.c1, v0.c0))) IN ()) WHERE ((NOT (CASE (t0.c2 IN ())  WHEN (~ (t0.c2)) THEN CAST(t0.c2 AS NUMERIC) WHEN ((t0.c0)>=(t0.c1)) THEN v0.c0 COLLATE BINARY WHEN ((t0.c2) BETWEEN (v0.c0) AND (v0.c0)) THEN t0.c1 END))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 FULL OUTER JOIN v0 ON ((((v0.c0, t0.c2, v0.c0)) NOT BETWEEN ((t0.c1, v0.c0, t0.c2)) AND ((t0.c2, t0.c1, v0.c0))) IN ()) WHERE (((CASE (t0.c2 IN ())  WHEN (~ (t0.c2)) THEN CAST(t0.c2 AS NUMERIC) WHEN ((t0.c0)>=(t0.c1)) THEN v0.c0 COLLATE BINARY WHEN ((t0.c2) BETWEEN (v0.c0) AND (v0.c0)) THEN t0.c1 END) ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 FULL OUTER JOIN v0 ON ((((v0.c0, t0.c2, v0.c0)) NOT BETWEEN ((t0.c1, v0.c0, t0.c2)) AND ((t0.c2, t0.c1, v0.c0))) IN ()) GROUP BY t0.c2;
SELECT t0.c0 FROM v0, t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM v0, t0, vt0 GROUP BY t0.c0 HAVING AVG((((AVG(vt0.c0)))>((v0.c0)))) UNION ALL SELECT t0.c0 FROM v0, t0, vt0 GROUP BY t0.c0 HAVING (NOT (AVG((((AVG(vt0.c0)))>((v0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM v0, t0, vt0 GROUP BY t0.c0 HAVING ((AVG((((AVG(vt0.c0)))>((v0.c0))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (0.811685834714094) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (0.811685834714094))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((0.811685834714094) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((NULL) NOT NULL))|(ABS(DISTINCT v0.c0)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((NULL) NOT NULL))|(ABS(DISTINCT v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((NULL) NOT NULL))|(ABS(DISTINCT v0.c0)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL t0.c2 FROM v0 CROSS JOIN t0 ON (((((((((t0.c1)AND(v0.c0)))AND(t0.c0)))AND(t0.c2)))OR(t0.c2)) IN ()) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM v0 CROSS JOIN t0 ON (((((((((t0.c1)AND(v0.c0)))AND(t0.c0)))AND(t0.c2)))OR(t0.c2)) IN ()) WHERE (((v0.c0 COLLATE NOCASE) BETWEEN (((t0.c1) BETWEEN (v0.c0) AND (t0.c0))) AND ((v0.c0 IN ())))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM v0 CROSS JOIN t0 ON (((((((((t0.c1)AND(v0.c0)))AND(t0.c0)))AND(t0.c2)))OR(t0.c2)) IN ()) WHERE ((NOT (((v0.c0 COLLATE NOCASE) BETWEEN (((t0.c1) BETWEEN (v0.c0) AND (t0.c0))) AND ((v0.c0 IN ())))))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM v0 CROSS JOIN t0 ON (((((((((t0.c1)AND(v0.c0)))AND(t0.c0)))AND(t0.c2)))OR(t0.c2)) IN ()) WHERE (((((v0.c0 COLLATE NOCASE) BETWEEN (((t0.c1) BETWEEN (v0.c0) AND (t0.c0))) AND ((v0.c0 IN ())))) ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM v0 CROSS JOIN t0 ON (((((((((t0.c1)AND(v0.c0)))AND(t0.c0)))AND(t0.c2)))OR(t0.c2)) IN ()) GROUP BY t0.c2;
SELECT v0.c0, vt0.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)|((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0))))) GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)|((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0))))) GROUP BY v0.c0, vt0.c0, vt0.c1 HAVING COUNT(SUM(vt0.c1)) UNION ALL SELECT v0.c0, vt0.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)|((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0))))) GROUP BY v0.c0, vt0.c0, vt0.c1 HAVING (NOT (COUNT(SUM(vt0.c1)))) UNION ALL SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)|((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0))))) GROUP BY v0.c0, vt0.c0, vt0.c1 HAVING ((COUNT(SUM(vt0.c1))) ISNULL);
SELECT ALL SUM((((t0.c2) ISNULL) IN (((t0.c1)<>(vt0.c0))))) FROM v0, t0, vt0;
SELECT ALL v0.c0, vt0.c0, t0.c1 FROM v0, vt0, t0;
SELECT v0.c0, vt0.c0, t0.c1 FROM v0, vt0, t0 WHERE ((((((('-191184107')AND(vt0.c1)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN v0.c0 WHEN t0.c1 THEN NULL END)))OR(((0.3197169732734868) ISNULL)))) UNION ALL SELECT ALL v0.c0, vt0.c0, t0.c1 FROM v0, vt0, t0 WHERE ((NOT ((((((('-191184107')AND(vt0.c1)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN v0.c0 WHEN t0.c1 THEN NULL END)))OR(((0.3197169732734868) ISNULL)))))) UNION ALL SELECT ALL v0.c0, vt0.c0, t0.c1 FROM v0, vt0, t0 WHERE ((((((((('-191184107')AND(vt0.c1)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN v0.c0 WHEN t0.c1 THEN NULL END)))OR(((0.3197169732734868) ISNULL)))) ISNULL));
SELECT ALL v0.c0, vt0.c0, t0.c1 FROM v0, vt0, t0;
SELECT DISTINCT * FROM vt0, v0, t0;
SELECT DISTINCT * FROM vt0, v0, t0 WHERE (((t0.c0 IN ()) IN (((0.0575406447435276)IS(v0.c0))))) UNION SELECT DISTINCT * FROM vt0, v0, t0 WHERE ((NOT (((t0.c0 IN ()) IN (((0.0575406447435276)IS(v0.c0))))))) UNION SELECT DISTINCT * FROM vt0, v0, t0 WHERE (((((t0.c0 IN ()) IN (((0.0575406447435276)IS(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, t0;
SELECT t0.c0, t0.c2 FROM v0 INNER JOIN t0 ON CASE WHEN (((t0.c2, t0.c2, v0.c0, t0.c0, t0.c2)) BETWEEN ((t0.c1, t0.c1, t0.c1, t0.c1, t0.c1)) AND ((t0.c1, t0.c1, v0.c0, x'', t0.c2))) THEN (+ (v0.c0)) ELSE (((t0.c1)) BETWEEN ((t0.c0)) AND ((v0.c0))) END GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM v0 INNER JOIN t0 ON CASE WHEN (((t0.c2, t0.c2, v0.c0, t0.c0, t0.c2)) BETWEEN ((t0.c1, t0.c1, t0.c1, t0.c1, t0.c1)) AND ((t0.c1, t0.c1, v0.c0, x'', t0.c2))) THEN (+ (v0.c0)) ELSE (((t0.c1)) BETWEEN ((t0.c0)) AND ((v0.c0))) END WHERE ((((0.7818525054751221, ((t0.c1) NOTNULL), 0.5561224045577939 COLLATE BINARY))<((((((v0.c0)AND(t0.c1)))OR(t0.c0)), (('-1623219179')IS NOT(t0.c1)), t0.c1)))) GROUP BY t0.c0, t0.c2 UNION SELECT ALL t0.c0, t0.c2 FROM v0 INNER JOIN t0 ON CASE WHEN (((t0.c2, t0.c2, v0.c0, t0.c0, t0.c2)) BETWEEN ((t0.c1, t0.c1, t0.c1, t0.c1, t0.c1)) AND ((t0.c1, t0.c1, v0.c0, x'', t0.c2))) THEN (+ (v0.c0)) ELSE (((t0.c1)) BETWEEN ((t0.c0)) AND ((v0.c0))) END WHERE ((NOT ((((0.7818525054751221, ((t0.c1) NOTNULL), 0.5561224045577939 COLLATE BINARY))<((((((v0.c0)AND(t0.c1)))OR(t0.c0)), (('-1623219179')IS NOT(t0.c1)), t0.c1)))))) GROUP BY t0.c0, t0.c2 UNION SELECT t0.c0, t0.c2 FROM v0 INNER JOIN t0 ON CASE WHEN (((t0.c2, t0.c2, v0.c0, t0.c0, t0.c2)) BETWEEN ((t0.c1, t0.c1, t0.c1, t0.c1, t0.c1)) AND ((t0.c1, t0.c1, v0.c0, x'', t0.c2))) THEN (+ (v0.c0)) ELSE (((t0.c1)) BETWEEN ((t0.c0)) AND ((v0.c0))) END WHERE ((((((0.7818525054751221, ((t0.c1) NOTNULL), 0.5561224045577939 COLLATE BINARY))<((((((v0.c0)AND(t0.c1)))OR(t0.c0)), (('-1623219179')IS NOT(t0.c1)), t0.c1)))) ISNULL)) GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM v0 INNER JOIN t0 ON CASE WHEN (((t0.c2, t0.c2, v0.c0, t0.c0, t0.c2)) BETWEEN ((t0.c1, t0.c1, t0.c1, t0.c1, t0.c1)) AND ((t0.c1, t0.c1, v0.c0, x'', t0.c2))) THEN (+ (v0.c0)) ELSE (((t0.c1)) BETWEEN ((t0.c0)) AND ((v0.c0))) END GROUP BY t0.c0, t0.c2;
SELECT t0.c1, vt0.c1 FROM t0, vt0, v0 GROUP BY t0.c1, vt0.c1;
SELECT t0.c1, vt0.c1 FROM t0, vt0, v0 GROUP BY t0.c1, vt0.c1 HAVING TOTAL(TOTAL(AVG(t0.c1))) UNION ALL SELECT t0.c1, vt0.c1 FROM t0, vt0, v0 GROUP BY t0.c1, vt0.c1 HAVING (NOT (TOTAL(TOTAL(AVG(t0.c1))))) UNION ALL SELECT t0.c1, vt0.c1 FROM t0 NOT INDEXED, vt0, v0 GROUP BY t0.c1, vt0.c1 HAVING ((TOTAL(TOTAL(AVG(t0.c1)))) ISNULL);
SELECT ALL * FROM t0, v0;
SELECT * FROM t0, v0 WHERE ('?/') UNION ALL SELECT * FROM t0, v0 WHERE ((NOT ('?/'))) UNION ALL SELECT * FROM t0, v0 WHERE ((('?/') ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT * FROM t0, vt0, v0;
SELECT DISTINCT * FROM t0, vt0, v0 WHERE (json_type(0.9311722531707826)) UNION SELECT DISTINCT * FROM t0, vt0, v0 WHERE ((NOT (json_type(0.9311722531707826)))) UNION SELECT DISTINCT * FROM t0, vt0, v0 WHERE (((json_type(0.9311722531707826)) ISNULL));
SELECT DISTINCT * FROM t0, vt0, v0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0 WHERE ('vಪ') GROUP BY t0.c2, t0.c0 UNION SELECT ALL t0.c2, t0.c0 FROM t0 WHERE ((NOT ('vಪ'))) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM t0 WHERE ((('vಪ') ISNULL)) GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (- (vt0.c1 COLLATE RTRIM)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((- (vt0.c1 COLLATE RTRIM)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((- (vt0.c1 COLLATE RTRIM))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (- (vt0.c1 COLLATE RTRIM)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((- (vt0.c1 COLLATE RTRIM)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((- (vt0.c1 COLLATE RTRIM))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL t0.c2, t0.c1 FROM t0;
SELECT t0.c2, t0.c1 FROM t0 WHERE (CASE WHEN ((((t0.c0)AND(NULL)))OR(t0.c2)) THEN NULL COLLATE NOCASE ELSE ((((t0.c1)AND(t0.c2)))OR(t0.c2)) END) UNION ALL SELECT ALL t0.c2, t0.c1 FROM t0 WHERE ((NOT (CASE WHEN ((((t0.c0)AND(NULL)))OR(t0.c2)) THEN NULL COLLATE NOCASE ELSE ((((t0.c1)AND(t0.c2)))OR(t0.c2)) END))) UNION ALL SELECT t0.c2, t0.c1 FROM t0 WHERE (((CASE WHEN ((((t0.c0)AND(NULL)))OR(t0.c2)) THEN NULL COLLATE NOCASE ELSE ((((t0.c1)AND(t0.c2)))OR(t0.c2)) END) ISNULL));
SELECT ALL t0.c2, t0.c1 FROM t0;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON ABS(DISTINCT (((('0.32102038912369135')AND(vt0.c1)))OR(vt0.c0)));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON ABS(DISTINCT (((('0.32102038912369135')AND(vt0.c1)))OR(vt0.c0))) WHERE (((v0.c0 IN ()) IN ())) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON ABS(DISTINCT (((('0.32102038912369135')AND(vt0.c1)))OR(vt0.c0))) WHERE ((NOT (((v0.c0 IN ()) IN ())))) UNION SELECT DISTINCT * FROM v0 NOT INDEXED RIGHT OUTER JOIN vt0 ON ABS(DISTINCT (((('0.32102038912369135')AND(vt0.c1)))OR(vt0.c0))) WHERE (((((v0.c0 IN ()) IN ())) ISNULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON ABS(DISTINCT (((('0.32102038912369135')AND(vt0.c1)))OR(vt0.c0)));
SELECT vt0.c1, t0.c2 FROM t0, vt0 GROUP BY vt0.c1, t0.c2;
SELECT ALL vt0.c1, t0.c2 FROM t0, vt0 WHERE (((CASE WHEN ']8Cx[' THEN t0.c1 END) NOT NULL)) GROUP BY vt0.c1, t0.c2 UNION SELECT ALL vt0.c1, t0.c2 FROM t0, vt0 WHERE ((NOT (((CASE WHEN ']8Cx[' THEN t0.c1 END) NOT NULL)))) GROUP BY vt0.c1, t0.c2 UNION SELECT vt0.c1, t0.c2 FROM t0, vt0 WHERE (((((CASE WHEN ']8Cx[' THEN t0.c1 END) NOT NULL)) ISNULL)) GROUP BY vt0.c1, t0.c2;
SELECT vt0.c1, t0.c2 FROM t0, vt0 GROUP BY vt0.c1, t0.c2;
SELECT t0.c1, t0.c0 FROM vt0, v0, t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM vt0, v0, t0 GROUP BY t0.c1, t0.c0 HAVING GROUP_CONCAT(MIN(t0.c0)) UNION ALL SELECT ALL t0.c1, t0.c0 FROM vt0, v0, t0 GROUP BY t0.c1, t0.c0 HAVING (NOT (GROUP_CONCAT(MIN(t0.c0)))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM vt0, v0, t0 GROUP BY t0.c1, t0.c0 HAVING ((GROUP_CONCAT(MIN(t0.c0))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (CASE WHEN v0.c0 THEN x'' ELSE v0.c0 END) AND ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (CASE WHEN v0.c0 THEN x'' ELSE v0.c0 END) AND ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC  NULLS LAST;
SELECT * FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL)) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (CASE WHEN v0.c0 THEN x'' ELSE v0.c0 END) AND ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC  NULLS LAST;
SELECT * FROM v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((NOT (0.7735639799114242)))<<((NOT (t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((NOT (0.7735639799114242)))<<((NOT (t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((NOT (0.7735639799114242)))<<((NOT (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c2 FROM t0 LEFT OUTER JOIN vt0 ON CASE vt0.c0  WHEN CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN x'' THEN t0.c1 END THEN CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END ELSE (vt0.c1 IN (vt0.c0)) END GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 LEFT OUTER JOIN vt0 ON CASE vt0.c0  WHEN CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN x'' THEN t0.c1 END THEN CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END ELSE (vt0.c1 IN (vt0.c0)) END WHERE (CAST(t0.c0 COLLATE NOCASE AS BLOB)) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 LEFT OUTER JOIN vt0 ON CASE vt0.c0  WHEN CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN x'' THEN t0.c1 END THEN CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END ELSE (vt0.c1 IN (vt0.c0)) END WHERE ((NOT (CAST(t0.c0 COLLATE NOCASE AS BLOB)))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 LEFT OUTER JOIN vt0 ON CASE vt0.c0  WHEN CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN x'' THEN t0.c1 END THEN CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END ELSE (vt0.c1 IN (vt0.c0)) END WHERE (((CAST(t0.c0 COLLATE NOCASE AS BLOB)) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM t0 LEFT OUTER JOIN vt0 ON CASE vt0.c0  WHEN CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN x'' THEN t0.c1 END THEN CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END ELSE (vt0.c1 IN (vt0.c0)) END GROUP BY t0.c2;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING GROUP_CONCAT(LIKELIHOOD(COUNT(*), 0.5949015711387481)) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (GROUP_CONCAT(LIKELIHOOD(COUNT(*), 0.5949015711387481)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((GROUP_CONCAT(LIKELIHOOD(COUNT(*), 0.5949015711387481))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((((vt0.c1)-(vt0.c1)))) AND ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c1)) BETWEEN ((((vt0.c1)-(vt0.c1)))) AND ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((((vt0.c1)-(vt0.c1)))) AND ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c1) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0))))=(((vt0.c1 IN ()))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 WHERE ((NOT ((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0))))=(((vt0.c1 IN ()))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 WHERE ((((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0))))==(((vt0.c1 IN ()))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c1 FROM v0 CROSS JOIN t0 ON (CASE vt0.c0  WHEN v0.c0 THEN vt0.c1 WHEN '' THEN NULL WHEN vt0.c0 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN t0.c2 THEN v0.c0 END IN (vt0.c0 COLLATE NOCASE, x'', (((t0.c1)) BETWEEN ((vt0.c0)) AND ((t0.c1))), (NOT (t0.c2)))) INNER JOIN vt0 ON CASE WHEN (t0.c0 IN ()) THEN HEX(v0.c0) ELSE (((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END GROUP BY vt0.c1;
SELECT vt0.c1 FROM v0 CROSS JOIN t0 ON (CASE vt0.c0  WHEN v0.c0 THEN vt0.c1 WHEN '' THEN NULL WHEN vt0.c0 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN t0.c2 THEN v0.c0 END IN (vt0.c0 COLLATE NOCASE, x'', (((t0.c1)) BETWEEN ((vt0.c0)) AND ((t0.c1))), (NOT (t0.c2)))) INNER JOIN vt0 ON CASE WHEN (t0.c0 IN ()) THEN HEX(v0.c0) ELSE (((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END GROUP BY vt0.c1 HAVING (NOT (MIN(COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c1 FROM v0 CROSS JOIN t0 ON (CASE vt0.c0  WHEN v0.c0 THEN vt0.c1 WHEN '' THEN NULL WHEN vt0.c0 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN t0.c2 THEN v0.c0 END IN (vt0.c0 COLLATE NOCASE, x'', (((t0.c1)) BETWEEN ((vt0.c0)) AND ((t0.c1))), (NOT (t0.c2)))) INNER JOIN vt0 ON CASE WHEN (t0.c0 IN ()) THEN HEX(v0.c0) ELSE (((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END GROUP BY vt0.c1 HAVING (NOT ((NOT (MIN(COUNT(vt0.c0)))))) UNION ALL SELECT ALL vt0.c1 FROM v0 CROSS JOIN t0 ON (CASE vt0.c0  WHEN v0.c0 THEN vt0.c1 WHEN '' THEN NULL WHEN vt0.c0 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN t0.c2 THEN v0.c0 END IN (vt0.c0 COLLATE NOCASE, x'', (((t0.c1)) BETWEEN ((vt0.c0)) AND ((t0.c1))), (NOT (t0.c2)))) INNER JOIN vt0 ON CASE WHEN (t0.c0 IN ()) THEN HEX(v0.c0) ELSE (((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END GROUP BY vt0.c1 HAVING (((NOT (MIN(COUNT(vt0.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0, v0;
SELECT vt0.c0 FROM vt0, v0 WHERE ((- (v0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((NOT ((- (v0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0, v0 WHERE ((((- (v0.c0))) ISNULL));
SELECT vt0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0) BETWEEN ((v0.c0 IN ())) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0) BETWEEN ((v0.c0 IN ())) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) BETWEEN ((v0.c0 IN ())) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 WHERE (((t0.c2 COLLATE NOCASE) BETWEEN ((NOT (t0.c0))) AND (((vt0.c0)!=(vt0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 WHERE ((NOT (((t0.c2 COLLATE NOCASE) BETWEEN ((NOT (t0.c0))) AND (((vt0.c0)!=(vt0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 WHERE (((((t0.c2 COLLATE NOCASE) BETWEEN ((NOT (t0.c0))) AND (((vt0.c0)<>(vt0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT v0.c0, vt0.c0, t0.c2, vt0.c1, t0.c0, t0.c1 FROM t0, v0, vt0 GROUP BY v0.c0, vt0.c0, t0.c2, vt0.c1, t0.c0, t0.c1;
SELECT v0.c0, vt0.c0, t0.c2, vt0.c1, t0.c0, t0.c1 FROM t0, v0, vt0 GROUP BY v0.c0, vt0.c0, t0.c2, vt0.c1, t0.c0, t0.c1 HAVING TOTAL(COUNT(*)) UNION ALL SELECT v0.c0, vt0.c0, t0.c2, vt0.c1, t0.c0, t0.c1 FROM t0, v0, vt0 GROUP BY v0.c0, vt0.c0, t0.c2, vt0.c1, t0.c0, t0.c1 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL v0.c0, vt0.c0, t0.c2, vt0.c1, t0.c0, t0.c1 FROM t0, v0, vt0 GROUP BY v0.c0, vt0.c0, t0.c2, vt0.c1, t0.c0, t0.c1 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL SUM(CASE '>B|F)Z*C'  WHEN vt0.c1 COLLATE NOCASE THEN CASE WHEN v0.c0 THEN vt0.c1 END END) FROM vt0, v0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (ABS(vt0.c1)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (ABS(vt0.c1)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((ABS(vt0.c1)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)AND(TYPEOF(v0.c0))))AND(CAST(v0.c0 AS INTEGER)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)AND(TYPEOF(v0.c0))))AND(CAST(v0.c0 AS INTEGER)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)AND(TYPEOF(v0.c0))))AND(CAST(v0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL t0.c0, vt0.c0, vt0.c1, t0.c1, v0.c0, t0.c2 FROM t0, v0, vt0 GROUP BY t0.c0, vt0.c0, vt0.c1, t0.c1, v0.c0, t0.c2;
SELECT ALL t0.c0, vt0.c0, vt0.c1, t0.c1, v0.c0, t0.c2 FROM t0 NOT INDEXED, v0, vt0 WHERE (CASE WHEN IFNULL(DISTINCT t0.c2, t0.c1) THEN ((vt0.c0) BETWEEN (t0.c2) AND (vt0.c1)) WHEN CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN 0Xfffffffffd5ed064 WHEN vt0.c0 THEN v0.c0 END THEN ((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c1)) WHEN (~ (vt0.c1)) THEN ((((vt0.c1)OR(t0.c0)))AND(vt0.c0)) ELSE (+ (t0.c2)) END) GROUP BY t0.c0, vt0.c0, vt0.c1, t0.c1, v0.c0, t0.c2 UNION SELECT t0.c0, vt0.c0, vt0.c1, t0.c1, v0.c0, t0.c2 FROM t0, v0, vt0 WHERE ((NOT (CASE WHEN IFNULL(DISTINCT t0.c2, t0.c1) THEN ((vt0.c0) BETWEEN (t0.c2) AND (vt0.c1)) WHEN CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN 0xfffffffffd5ed064 WHEN vt0.c0 THEN v0.c0 END THEN ((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c1)) WHEN (~ (vt0.c1)) THEN ((((vt0.c1)OR(t0.c0)))AND(vt0.c0)) ELSE (+ (t0.c2)) END))) GROUP BY t0.c0, vt0.c0, vt0.c1, t0.c1, v0.c0, t0.c2 UNION SELECT ALL t0.c0, vt0.c0, vt0.c1, t0.c1, v0.c0, t0.c2 FROM t0, v0, vt0 WHERE (((CASE WHEN IFNULL(DISTINCT t0.c2, t0.c1) THEN ((vt0.c0) BETWEEN (t0.c2) AND (vt0.c1)) WHEN CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN 0xfffffffffd5ed064 WHEN vt0.c0 THEN v0.c0 END THEN ((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c1)) WHEN (~ (vt0.c1)) THEN ((((vt0.c1)OR(t0.c0)))AND(vt0.c0)) ELSE (+ (t0.c2)) END) ISNULL)) GROUP BY t0.c0, vt0.c0, vt0.c1, t0.c1, v0.c0, t0.c2;
SELECT ALL t0.c0, vt0.c0, vt0.c1, t0.c1, v0.c0, t0.c2 FROM t0, v0, vt0 GROUP BY t0.c0, vt0.c0, vt0.c1, t0.c1, v0.c0, t0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((v0.c0)) NOT BETWEEN ((MAX(TOTAL(v0.c0)))) AND ((AVG(v0.c0))))) NOTNULL) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((((v0.c0)) NOT BETWEEN ((MAX(TOTAL(v0.c0)))) AND ((AVG(v0.c0))))) NOTNULL))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((((v0.c0)) NOT BETWEEN ((MAX(TOTAL(v0.c0)))) AND ((AVG(v0.c0))))) NOTNULL)) ISNULL);
SELECT * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c2 IN ()))OR(CASE WHEN t0.c1 THEN t0.c2 END)))AND(((t0.c0)<=(t0.c0))))) UNION ALL SELECT * FROM vt0, t0 NOT INDEXED WHERE ((NOT ((((((t0.c2 IN ()))OR(CASE WHEN t0.c1 THEN t0.c2 END)))AND(((t0.c0)<=(t0.c0))))))) UNION ALL SELECT * FROM vt0, t0 WHERE ((((((((t0.c2 IN ()))OR(CASE WHEN t0.c1 THEN t0.c2 END)))AND(((t0.c0)<=(t0.c0))))) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (0.06108130069989304) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (0.06108130069989304))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((0.06108130069989304) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 WHERE (((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c1))) IN ())) GROUP BY t0.c2, t0.c1, t0.c0 UNION SELECT t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c1))) IN ())))) GROUP BY t0.c2, t0.c1, t0.c0 UNION SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 WHERE (((((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c1))) IN ())) ISNULL)) GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT v0.c0, t0.c1 FROM vt0, v0, t0 GROUP BY v0.c0, t0.c1;
SELECT v0.c0, t0.c1 FROM vt0, v0, t0 GROUP BY v0.c0, t0.c1 HAVING ((SUM(SUM(t0.c2))) NOTNULL) UNION ALL SELECT v0.c0, t0.c1 FROM vt0, v0, t0 GROUP BY v0.c0, t0.c1 HAVING (NOT (((SUM(SUM(t0.c2))) NOTNULL))) UNION ALL SELECT ALL v0.c0, t0.c1 FROM vt0, v0, t0 GROUP BY v0.c0, t0.c1 HAVING ((((SUM(SUM(t0.c2))) NOTNULL)) ISNULL);
SELECT * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE ((((vt0.c1)GLOB(t0.c2)) IN ())) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT ((((vt0.c1)GLOB(t0.c2)) IN ())))) UNION ALL SELECT * FROM t0, vt0 WHERE ((((((vt0.c1)GLOB(t0.c2)) IN ())) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON (((('1678787716') IS FALSE))<=(NULL));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON (((('1678787716') IS FALSE))<=(NULL)) WHERE (((NULL) IS TRUE)) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON (((('1678787716') IS FALSE))<=(NULL)) WHERE ((NOT (((NULL) IS TRUE)))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON (((('1678787716') IS FALSE))<=(NULL)) WHERE (((((NULL) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON (((('1678787716') IS FALSE))<=(NULL));
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 WHERE (CAST(t0.c0 COLLATE NOCASE AS INTEGER)) GROUP BY t0.c2, t0.c1, t0.c0 UNION SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((NOT (CAST(t0.c0 COLLATE NOCASE AS INTEGER)))) GROUP BY t0.c2, t0.c1, t0.c0 UNION SELECT t0.c2, t0.c1, t0.c0 FROM t0 WHERE (((CAST(t0.c0 COLLATE NOCASE AS INTEGER)) ISNULL)) GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT v0.c0, t0.c2, t0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c1, t0.c0;
SELECT v0.c0, t0.c2, t0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c1, t0.c0 HAVING GROUP_CONCAT(AVG(MAX(SUM(COUNT(t0.c1)))) COLLATE NOCASE) UNION ALL SELECT v0.c0, t0.c2, t0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c1, t0.c0 HAVING (NOT (GROUP_CONCAT(AVG(MAX(SUM(COUNT(t0.c1)))) COLLATE NOCASE))) UNION ALL SELECT ALL v0.c0, t0.c2, t0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c1, t0.c0 HAVING ((GROUP_CONCAT(AVG(MAX(SUM(COUNT(t0.c1)))) COLLATE NOCASE)) ISNULL);
SELECT ALL t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON CASE WHEN vt0.c0 COLLATE BINARY THEN '-1084234120' WHEN (vt0.c1 IN ()) THEN t0.c0 WHEN (((t0.c2))>=((vt0.c1))) THEN ((t0.c0) IS TRUE) WHEN (((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))) THEN CASE WHEN t0.c2 THEN v0.c0 WHEN t0.c1 THEN t0.c2 WHEN v0.c0 THEN vt0.c0 END WHEN STRFTIME(t0.c2, vt0.c1, t0.c0) THEN (((t0.c1, t0.c0, 0.47504232336165464)) NOT BETWEEN ((t0.c1, vt0.c1, t0.c2)) AND ((v0.c0, vt0.c1, t0.c1))) ELSE ((t0.c0)>>(x'ec2b')) END CROSS JOIN vt0 ON -1389432115;
SELECT DISTINCT t0.c1, t0.c0, t0.c2 FROM t0, vt0;
SELECT DISTINCT t0.c1, t0.c0, t0.c2 FROM t0, vt0 WHERE ((((~ (t0.c0))) ISNULL)) UNION SELECT DISTINCT t0.c1, t0.c0, t0.c2 FROM t0, vt0 WHERE ((NOT ((((~ (t0.c0))) ISNULL)))) UNION SELECT DISTINCT t0.c1, t0.c0, t0.c2 FROM t0, vt0 WHERE ((((((~ (t0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT t0.c1, t0.c0, t0.c2 FROM t0, vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 NOT INDEXED GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c1)LIKE(vt0.c0))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((NOT (((vt0.c1)LIKE(vt0.c0))))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((NOT (((vt0.c1)LIKE(vt0.c0))))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 NOT INDEXED GROUP BY vt0.c0, vt0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING CAST(MAX(t0.c1) AS BLOB) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (NOT (CAST(MAX(t0.c1) AS BLOB))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING ((CAST(MAX(t0.c1) AS BLOB)) ISNULL);
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING CAST(MAX(t0.c1) AS BLOB) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (NOT (CAST(MAX(t0.c1) AS BLOB))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING ((CAST(MAX(t0.c1) AS BLOB)) ISNULL);
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT ALL MAX(NULL) FROM t0;
SELECT ALL * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE ((vt0.c1 COLLATE BINARY IN (0.5160043858458653, vt0.c0))) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT ((vt0.c1 COLLATE BINARY IN (0.5160043858458653, vt0.c0))))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((((vt0.c1 COLLATE BINARY IN (0.5160043858458653, vt0.c0))) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0)GLOB(v0.c0)), (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), v0.c0))>=((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(v0.c0 AS REAL), (NOT (v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0)GLOB(v0.c0)), (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), v0.c0))>=((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(v0.c0 AS REAL), (NOT (v0.c0)))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((((v0.c0)GLOB(v0.c0)), (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), v0.c0))>=((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(v0.c0 AS REAL), (NOT (v0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c1) ISNULL))<=(((vt0.c0)&(vt0.c1))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c1) ISNULL))<=(((vt0.c0)&(vt0.c1))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c1) ISNULL))<=(((vt0.c0)&(vt0.c1))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c2, vt0.c1, t0.c0, vt0.c0 FROM v0, vt0, t0 GROUP BY t0.c2, vt0.c1, t0.c0, vt0.c0;
SELECT t0.c2, vt0.c1, t0.c0, vt0.c0 FROM v0, vt0, t0 GROUP BY t0.c2, vt0.c1, t0.c0, vt0.c0 HAVING (- (((t0.c1) IS TRUE))) UNION ALL SELECT t0.c2, vt0.c1, t0.c0, vt0.c0 FROM v0, vt0, t0 GROUP BY t0.c2, vt0.c1, t0.c0, vt0.c0 HAVING (NOT ((- (((t0.c1) IS TRUE))))) UNION ALL SELECT t0.c2, vt0.c1, t0.c0, vt0.c0 FROM v0, vt0, t0 GROUP BY t0.c2, vt0.c1, t0.c0, vt0.c0 HAVING (((- (((t0.c1) IS TRUE)))) ISNULL);
SELECT ALL t0.c2, vt0.c1, t0.c0, vt0.c0 FROM v0, vt0, t0 GROUP BY t0.c2, vt0.c1, t0.c0, vt0.c0;
SELECT t0.c2, vt0.c1, t0.c0, vt0.c0 FROM v0, vt0, t0 GROUP BY t0.c2, vt0.c1, t0.c0, vt0.c0 HAVING (- (((t0.c1) IS TRUE))) UNION ALL SELECT t0.c2, vt0.c1, t0.c0, vt0.c0 FROM v0, vt0, t0 GROUP BY t0.c2, vt0.c1, t0.c0, vt0.c0 HAVING (NOT ((- (((t0.c1) IS TRUE))))) UNION ALL SELECT t0.c2, vt0.c1, t0.c0, vt0.c0 FROM v0, vt0, t0 GROUP BY t0.c2, vt0.c1, t0.c0, vt0.c0 HAVING (((- (((t0.c1) IS TRUE)))) ISNULL);
SELECT ALL t0.c2, vt0.c1, t0.c0, vt0.c0 FROM v0, vt0, t0 GROUP BY t0.c2, vt0.c1, t0.c0, vt0.c0;
SELECT * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (((((v0.c0)GLOB(v0.c0))) BETWEEN ((0.87703629630499 IN (vt0.c1, vt0.c0))) AND (NULL))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT (((((v0.c0)GLOB(v0.c0))) BETWEEN ((0.87703629630499 IN (vt0.c1, vt0.c0))) AND (NULL))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c0)GLOB(v0.c0))) BETWEEN ((0.87703629630499 IN (vt0.c1, vt0.c0))) AND (NULL))) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (t0.c1 COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT ((NOT (t0.c1 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((((NOT (t0.c1 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT ALL t0.c0 FROM vt0, t0 NATURAL JOIN v0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 NATURAL JOIN v0 WHERE (vt0.c0) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 NATURAL JOIN v0 WHERE ((NOT (vt0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 NATURAL JOIN v0 WHERE (((vt0.c0) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 NATURAL JOIN v0 GROUP BY t0.c0;
SELECT vt0.c1, t0.c0, t0.c1 FROM vt0, v0, t0 GROUP BY vt0.c1, t0.c0, t0.c1;
SELECT vt0.c1, t0.c0, t0.c1 FROM vt0, v0, t0 GROUP BY vt0.c1, t0.c0, t0.c1 HAVING CAST(MAX(AVG('')) AS TEXT) UNION ALL SELECT vt0.c1, t0.c0, t0.c1 FROM vt0, v0, t0 GROUP BY vt0.c1, t0.c0, t0.c1 HAVING (NOT (CAST(MAX(AVG('')) AS TEXT))) UNION ALL SELECT ALL vt0.c1, t0.c0, t0.c1 FROM vt0, v0, t0 GROUP BY vt0.c1, t0.c0, t0.c1 HAVING ((CAST(MAX(AVG('')) AS TEXT)) ISNULL);
SELECT ALL t0.c2, t0.c1 FROM t0;
SELECT t0.c2, t0.c1 FROM t0 WHERE (((((((((t0.c2)OR(t0.c1)))AND(t0.c1)))OR(t0.c0)))OR(t0.c0)) COLLATE BINARY) UNION ALL SELECT t0.c2, t0.c1 FROM t0 WHERE ((NOT (((((((((t0.c2)OR(t0.c1)))AND(t0.c1)))OR(t0.c0)))OR(t0.c0)) COLLATE BINARY))) UNION ALL SELECT t0.c2, t0.c1 FROM t0 WHERE (((((((((((t0.c2)OR(t0.c1)))AND(t0.c1)))OR(t0.c0)))OR(t0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL t0.c2, t0.c1 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ('X5Ax') UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ('X5Ax'))) UNION SELECT DISTINCT * FROM t0 WHERE ((('X5Ax') ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT v0.c0, vt0.c0, vt0.c1 FROM vt0, v0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c1 END IN ())) GROUP BY v0.c0, vt0.c0, vt0.c1 UNION SELECT v0.c0, vt0.c0, vt0.c1 FROM vt0, v0 WHERE ((NOT ((CASE WHEN vt0.c0 THEN vt0.c1 END IN ())))) GROUP BY v0.c0, vt0.c0, vt0.c1 UNION SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM vt0, v0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c1 END IN ())) ISNULL)) GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT t0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY t0.c0, v0.c0;
SELECT ALL t0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY t0.c0, v0.c0 HAVING CASE WHEN -611607334 THEN vt0.c0 END UNION ALL SELECT ALL t0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY t0.c0, v0.c0 HAVING (NOT (CASE WHEN -611607334 THEN vt0.c0 END)) UNION ALL SELECT t0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY t0.c0, v0.c0 HAVING ((CASE WHEN -611607334 THEN vt0.c0 END) ISNULL);
SELECT t0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY t0.c0, v0.c0;
SELECT ALL t0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY t0.c0, v0.c0 HAVING CASE WHEN -611607334 THEN vt0.c0 END UNION ALL SELECT ALL t0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY t0.c0, v0.c0 HAVING (NOT (CASE WHEN -611607334 THEN vt0.c0 END)) UNION ALL SELECT t0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY t0.c0, v0.c0 HAVING ((CASE WHEN -611607334 THEN vt0.c0 END) ISNULL);
SELECT t0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY t0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM vt0, v0;
SELECT vt0.c0, v0.c0, vt0.c1 FROM vt0, v0 WHERE (((((vt0.c0)<(v0.c0)))>(vt0.c0 COLLATE BINARY))) UNION ALL SELECT vt0.c0, v0.c0, vt0.c1 FROM vt0, v0 WHERE ((NOT (((((vt0.c0)<(v0.c0)))>(vt0.c0 COLLATE BINARY))))) UNION ALL SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM vt0, v0 WHERE (((((((vt0.c0)<(v0.c0)))>(vt0.c0 COLLATE BINARY))) ISNULL));
SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM vt0, v0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))OR(load_extension(vt0.c1, vt0.c1)))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))OR(load_extension(vt0.c1, vt0.c1)))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))OR(load_extension(vt0.c1, vt0.c1)))) ISNULL));
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 WHERE (CASE ((t0.c2) ISNULL)  WHEN TOTAL_CHANGES() THEN t0.c2 COLLATE RTRIM ELSE ((t0.c2)AND(t0.c1)) END) GROUP BY t0.c2, t0.c1, t0.c0 UNION SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((NOT (CASE ((t0.c2) ISNULL)  WHEN TOTAL_CHANGES() THEN t0.c2 COLLATE RTRIM ELSE ((t0.c2)AND(t0.c1)) END))) GROUP BY t0.c2, t0.c1, t0.c0 UNION SELECT t0.c2, t0.c1, t0.c0 FROM t0 WHERE (((CASE ((t0.c2) ISNULL)  WHEN TOTAL_CHANGES() THEN t0.c2 COLLATE RTRIM ELSE ((t0.c2)AND(t0.c1)) END) ISNULL)) GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0;
SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 HAVING ((((((COUNT(COUNT(TOTAL(t0.c2))))OR(t0.c0)))OR(-1778670933)))+(COUNT(t0.c0))) UNION ALL SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 HAVING (NOT (((((((COUNT(COUNT(TOTAL(t0.c2))))OR(t0.c0)))OR(-1778670933)))+(COUNT(t0.c0))))) UNION ALL SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 HAVING ((((((((COUNT(COUNT(TOTAL(t0.c2))))OR(t0.c0)))OR(-1778670933)))+(COUNT(t0.c0)))) ISNULL);
SELECT t0.c2, t0.c1, v0.c0 FROM v0, t0, vt0;
SELECT ALL t0.c2, t0.c1, v0.c0 FROM v0, t0, vt0 WHERE ((- ((- (vt0.c0))))) UNION ALL SELECT ALL t0.c2, t0.c1, v0.c0 FROM v0, t0, vt0 WHERE ((NOT ((- ((- (vt0.c0))))))) UNION ALL SELECT t0.c2, t0.c1, v0.c0 FROM v0, t0, vt0 WHERE ((((- ((- (vt0.c0))))) ISNULL));
SELECT t0.c2, t0.c1, v0.c0 FROM v0, t0, vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (CAST((((vt0.c1))!=((vt0.c0))) AS INTEGER)) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CAST((((vt0.c1))<>((vt0.c0))) AS INTEGER)))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((CAST((((vt0.c1))!=((vt0.c0))) AS INTEGER)) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0 WHERE (CASE 0.8651826881676029  WHEN (~ (x'')) THEN (+ (t0.c1)) WHEN (t0.c1 IN ()) THEN x'9c82' WHEN ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c2 END WHEN (((t0.c0, t0.c2, t0.c1)) BETWEEN ((t0.c1, t0.c1, t0.c1)) AND ((t0.c1, t0.c1, NULL))) THEN CAST(t0.c2 AS BLOB) WHEN ((t0.c1)AND(t0.c1)) THEN ((t0.c0)<=(t0.c2)) ELSE ((t0.c0)||(t0.c0)) END) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t0 WHERE ((NOT (CASE 0.8651826881676029  WHEN (~ (x'')) THEN (+ (t0.c1)) WHEN (t0.c1 IN ()) THEN x'9c82' WHEN ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c2 END WHEN (((t0.c0, t0.c2, t0.c1)) BETWEEN ((t0.c1, t0.c1, t0.c1)) AND ((t0.c1, t0.c1, NULL))) THEN CAST(t0.c2 AS BLOB) WHEN ((t0.c1)AND(t0.c1)) THEN ((t0.c0)<=(t0.c2)) ELSE ((t0.c0)||(t0.c0)) END))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t0 WHERE (((CASE 0.8651826881676029  WHEN (~ (x'')) THEN (+ (t0.c1)) WHEN (t0.c1 IN ()) THEN x'9c82' WHEN ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c2 END WHEN (((t0.c0, t0.c2, t0.c1)) BETWEEN ((t0.c1, t0.c1, t0.c1)) AND ((t0.c1, t0.c1, NULL))) THEN CAST(t0.c2 AS BLOB) WHEN ((t0.c1)AND(t0.c1)) THEN ((t0.c0)<=(t0.c2)) ELSE ((t0.c0)||(t0.c0)) END) ISNULL)) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT vt0.c1, vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c1, vt0.c0, t0.c0;
SELECT ALL vt0.c1, vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c1, vt0.c0, t0.c0 HAVING AVG(MAX(t0.c0)) UNION ALL SELECT vt0.c1, vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c1, vt0.c0, t0.c0 HAVING (NOT (AVG(MAX(t0.c0)))) UNION ALL SELECT ALL vt0.c1, vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c1, vt0.c0, t0.c0 HAVING ((AVG(MAX(t0.c0))) ISNULL);
SELECT vt0.c1 FROM v0, vt0;
SELECT vt0.c1 FROM v0, vt0 NOT INDEXED WHERE ((+ (((vt0.c0) NOTNULL)))) UNION ALL SELECT ALL vt0.c1 FROM v0, vt0 WHERE ((NOT ((+ (((vt0.c0) NOTNULL)))))) UNION ALL SELECT ALL vt0.c1 FROM v0, vt0 WHERE ((((+ (((vt0.c0) NOTNULL)))) ISNULL));
SELECT vt0.c1 FROM v0, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST(v0.c0 AS NUMERIC) COLLATE RTRIM) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST(v0.c0 AS NUMERIC) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c1, t0.c1, t0.c2 FROM t0 NOT INDEXED, vt0, v0 GROUP BY vt0.c1, t0.c1, t0.c2;
SELECT ALL vt0.c1, t0.c1, t0.c2 FROM t0, vt0, v0 WHERE (((TRIM(0.15437386363723804))||(CASE WHEN vt0.c1 THEN t0.c1 END))) GROUP BY vt0.c1, t0.c1, t0.c2 UNION SELECT ALL vt0.c1, t0.c1, t0.c2 FROM t0, vt0, v0 WHERE ((NOT (((TRIM(0.15437386363723804))||(CASE WHEN vt0.c1 THEN t0.c1 END))))) GROUP BY vt0.c1, t0.c1, t0.c2 UNION SELECT vt0.c1, t0.c1, t0.c2 FROM t0, vt0, v0 WHERE (((((TRIM(0.15437386363723804))||(CASE WHEN vt0.c1 THEN t0.c1 END))) ISNULL)) GROUP BY vt0.c1, t0.c1, t0.c2;
SELECT vt0.c1, t0.c1, t0.c2 FROM t0 NOT INDEXED, vt0, v0 GROUP BY vt0.c1, t0.c1, t0.c2;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0 HAVING CAST(TOTAL(vt0.c1) AS INTEGER) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (CAST(TOTAL(vt0.c1) AS INTEGER))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0 HAVING ((CAST(TOTAL(vt0.c1) AS INTEGER)) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0 HAVING CAST(TOTAL(vt0.c1) AS INTEGER) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (CAST(TOTAL(vt0.c1) AS INTEGER))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0 HAVING ((CAST(TOTAL(vt0.c1) AS INTEGER)) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 WHERE (((NOT (t0.c0)) IN (x''))) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((NOT (((NOT (t0.c0)) IN (x''))))) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 WHERE (((((NOT (t0.c0)) IN (x''))) ISNULL));
SELECT t0.c2, t0.c1, t0.c0 FROM t0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0)%(v0.c0)))%(((v0.c0)/(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)%(v0.c0)))%(((v0.c0)/(v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0)%(v0.c0)))%(((v0.c0)/(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT t0.c2, v0.c0, vt0.c0, vt0.c1 FROM vt0 RIGHT OUTER JOIN t0 ON (((((t0.c2))=((v0.c0)))) NOT BETWEEN ((- (v0.c0))) AND (CAST(t0.c2 AS BLOB))) RIGHT OUTER JOIN v0 ON (((t0.c1)) BETWEEN (((((t0.c2, v0.c0, vt0.c0)) BETWEEN ((508318140, t0.c0, t0.c0)) AND ((t0.c0, vt0.c1, vt0.c1))))) AND ((((t0.c1)%('1115492059'))))) GROUP BY t0.c2, v0.c0, vt0.c0, vt0.c1;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING SUM((vt0.c1 IN ())) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (SUM((vt0.c1 IN ())))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((SUM((vt0.c1 IN ()))) ISNULL);
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING SUM((vt0.c1 IN ())) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (SUM((vt0.c1 IN ())))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((SUM((vt0.c1 IN ()))) ISNULL);
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN v0 ON ((((((((t0.c1)AND(vt0.c1)))OR(t0.c2)))OR(((t0.c0) IS FALSE))))AND(((t0.c0) IS TRUE)));
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN v0 ON ((((((((t0.c1)AND(vt0.c1)))OR(t0.c2)))OR(((t0.c0) IS FALSE))))AND(((t0.c0) IS TRUE))) WHERE (CASE SQLITE_COMPILEOPTION_GET(t0.c1)  WHEN ((((NULL)AND(t0.c0)))AND(vt0.c0)) THEN ((vt0.c1) IS FALSE) ELSE t0.c2 END) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN v0 ON ((((((((t0.c1)AND(vt0.c1)))OR(t0.c2)))OR(((t0.c0) IS FALSE))))AND(((t0.c0) IS TRUE))) WHERE ((NOT (CASE SQLITE_COMPILEOPTION_GET(t0.c1)  WHEN ((((NULL)AND(t0.c0)))AND(vt0.c0)) THEN ((vt0.c1) IS FALSE) ELSE t0.c2 END))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN v0 ON ((((((((t0.c1)AND(vt0.c1)))OR(t0.c2)))OR(((t0.c0) IS FALSE))))AND(((t0.c0) IS TRUE))) WHERE (((CASE SQLITE_COMPILEOPTION_GET(t0.c1)  WHEN ((((NULL)AND(t0.c0)))AND(vt0.c0)) THEN ((vt0.c1) IS FALSE) ELSE t0.c2 END) ISNULL));
SELECT t0.c0, vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN v0 ON ((((((((t0.c1)AND(vt0.c1)))OR(t0.c2)))OR(((t0.c0) IS FALSE))))AND(((t0.c0) IS TRUE)));
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE ((((((((v0.c0, vt0.c0, v0.c0))<((v0.c0, vt0.c1, vt0.c1))))AND(CAST(vt0.c1 AS NUMERIC))))OR(CAST(v0.c0 AS REAL)))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT ((((((((v0.c0, vt0.c0, v0.c0))<((v0.c0, vt0.c1, vt0.c1))))AND(CAST(vt0.c1 AS NUMERIC))))OR(CAST(v0.c0 AS REAL)))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((((((((((v0.c0, vt0.c0, v0.c0))<((v0.c0, vt0.c1, vt0.c1))))AND(CAST(vt0.c1 AS NUMERIC))))OR(CAST(v0.c0 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c1 IN ())) BETWEEN (8.0117443E8) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c1 IN ())) BETWEEN (8.0117443E8) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c1 IN ())) BETWEEN (8.0117443E8) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY vt0.c0, v0.c0 HAVING ((('-93697000')) NOT BETWEEN ((AVG(vt0.c0))) AND ((SUM(MIN(COUNT(*))) COLLATE RTRIM))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (((('-93697000')) NOT BETWEEN ((AVG(vt0.c0))) AND ((SUM(MIN(COUNT(*))) COLLATE RTRIM))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY vt0.c0, v0.c0 HAVING ((((('-93697000')) NOT BETWEEN ((AVG(vt0.c0))) AND ((SUM(MIN(COUNT(*))) COLLATE RTRIM)))) ISNULL);
SELECT ALL * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE ('') UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT (''))) UNION ALL SELECT * FROM t0, vt0 WHERE ((('') ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0, v0;
SELECT DISTINCT * FROM t0, vt0, v0 WHERE ((((t0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) IN ())) UNION SELECT DISTINCT * FROM t0, vt0, v0 WHERE ((NOT ((((t0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) IN ())))) UNION SELECT DISTINCT * FROM t0, vt0, v0 WHERE ((((((t0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) IN ())) ISNULL));
SELECT DISTINCT * FROM t0, vt0, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))) IS TRUE)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))) IS TRUE)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))) IS TRUE)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c1, t0.c0, vt0.c0, v0.c0, t0.c1, t0.c2 FROM v0 CROSS JOIN vt0 ON TRIM(DISTINCT CAST(vt0.c1 AS TEXT)) FULL OUTER JOIN t0 ON LIKELY(DISTINCT t0.c1 COLLATE RTRIM) GROUP BY vt0.c1, t0.c0, vt0.c0, v0.c0, t0.c1, t0.c2;
SELECT vt0.c1, t0.c0, vt0.c0, v0.c0, t0.c1, t0.c2 FROM v0 CROSS JOIN vt0 ON TRIM(DISTINCT CAST(vt0.c1 AS TEXT)) FULL OUTER JOIN t0 ON LIKELY(DISTINCT t0.c1 COLLATE RTRIM) GROUP BY vt0.c1, t0.c0, vt0.c0, v0.c0, t0.c1, t0.c2 HAVING (- (AVG(v0.c0))) UNION ALL SELECT vt0.c1, t0.c0, vt0.c0, v0.c0, t0.c1, t0.c2 FROM v0 CROSS JOIN vt0 ON TRIM(DISTINCT CAST(vt0.c1 AS TEXT)) FULL OUTER JOIN t0 ON LIKELY(DISTINCT t0.c1 COLLATE RTRIM) GROUP BY vt0.c1, t0.c0, vt0.c0, v0.c0, t0.c1, t0.c2 HAVING (NOT ((- (AVG(v0.c0))))) UNION ALL SELECT ALL vt0.c1, t0.c0, vt0.c0, v0.c0, t0.c1, t0.c2 FROM v0 CROSS JOIN vt0 ON TRIM(DISTINCT CAST(vt0.c1 AS TEXT)) FULL OUTER JOIN t0 ON LIKELY(DISTINCT t0.c1 COLLATE RTRIM) GROUP BY vt0.c1, t0.c0, vt0.c0, v0.c0, t0.c1, t0.c2 HAVING (((- (AVG(v0.c0)))) ISNULL);
SELECT vt0.c1, t0.c0, vt0.c0, v0.c0, t0.c1, t0.c2 FROM v0 CROSS JOIN vt0 ON TRIM(DISTINCT CAST(vt0.c1 AS TEXT)) FULL OUTER JOIN t0 ON LIKELY(DISTINCT t0.c1 COLLATE RTRIM) GROUP BY vt0.c1, t0.c0, vt0.c0, v0.c0, t0.c1, t0.c2;
SELECT vt0.c1, t0.c0, vt0.c0, v0.c0, t0.c1, t0.c2 FROM v0 CROSS JOIN vt0 ON TRIM(DISTINCT CAST(vt0.c1 AS TEXT)) FULL OUTER JOIN t0 ON LIKELY(DISTINCT t0.c1 COLLATE RTRIM) GROUP BY vt0.c1, t0.c0, vt0.c0, v0.c0, t0.c1, t0.c2 HAVING (- (AVG(v0.c0))) UNION ALL SELECT vt0.c1, t0.c0, vt0.c0, v0.c0, t0.c1, t0.c2 FROM v0 CROSS JOIN vt0 ON TRIM(DISTINCT CAST(vt0.c1 AS TEXT)) FULL OUTER JOIN t0 ON LIKELY(DISTINCT t0.c1 COLLATE RTRIM) GROUP BY vt0.c1, t0.c0, vt0.c0, v0.c0, t0.c1, t0.c2 HAVING (NOT ((- (AVG(v0.c0))))) UNION ALL SELECT ALL vt0.c1, t0.c0, vt0.c0, v0.c0, t0.c1, t0.c2 FROM v0 CROSS JOIN vt0 ON TRIM(DISTINCT CAST(vt0.c1 AS TEXT)) FULL OUTER JOIN t0 ON LIKELY(DISTINCT t0.c1 COLLATE RTRIM) GROUP BY vt0.c1, t0.c0, vt0.c0, v0.c0, t0.c1, t0.c2 HAVING (((- (AVG(v0.c0)))) ISNULL);
SELECT vt0.c1, t0.c0, vt0.c0, v0.c0, t0.c1, t0.c2 FROM v0 CROSS JOIN vt0 ON TRIM(DISTINCT CAST(vt0.c1 AS TEXT)) FULL OUTER JOIN t0 ON LIKELY(DISTINCT t0.c1 COLLATE RTRIM) GROUP BY vt0.c1, t0.c0, vt0.c0, v0.c0, t0.c1, t0.c2;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((((v0.c0) NOT NULL)) NOTNULL)) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((v0.c0) NOT NULL)) NOTNULL)))) UNION ALL SELECT * FROM v0 WHERE (((((((v0.c0) NOT NULL)) NOTNULL)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0) IS TRUE) IN (((v0.c0) NOT BETWEEN (v0.c0) AND (0.9316133393903598))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0) IS TRUE) IN (((v0.c0) NOT BETWEEN (v0.c0) AND (0.9316133393903598))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0) IS TRUE) IN (((v0.c0) NOT BETWEEN (v0.c0) AND (0.9316133393903598))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c1, v0.c0 FROM v0, vt0 GROUP BY vt0.c1, v0.c0;
SELECT ALL vt0.c1, v0.c0 FROM v0, vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, v0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))) COLLATE BINARY) GROUP BY vt0.c1, v0.c0 UNION SELECT ALL vt0.c1, v0.c0 FROM v0, vt0 WHERE ((NOT ((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, v0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))) COLLATE BINARY))) GROUP BY vt0.c1, v0.c0 UNION SELECT vt0.c1, v0.c0 FROM v0, vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, v0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))) COLLATE BINARY) ISNULL)) GROUP BY vt0.c1, v0.c0;
SELECT ALL vt0.c1, v0.c0 FROM v0, vt0 GROUP BY vt0.c1, v0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING vt0.c1 UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (vt0.c1)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((vt0.c1) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING vt0.c1 UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (vt0.c1)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((vt0.c1) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT * FROM t0 RIGHT OUTER JOIN v0 ON MIN((t0.c0 IN (v0.c0)), (+ (vt0.c0))) INNER JOIN vt0 ON ((((((((CASE WHEN t0.c1 THEN t0.c0 END)AND((((t0.c2, vt0.c0, vt0.c1)) BETWEEN ((v0.c0, t0.c2, vt0.c0)) AND ((vt0.c1, v0.c0, t0.c1))))))AND((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c1))))))AND((v0.c0 IN (v0.c0, vt0.c1)))))AND(((v0.c0)LIKE(v0.c0))));
SELECT DISTINCT vt0.c1 FROM vt0 NATURAL JOIN v0;
SELECT DISTINCT vt0.c1 FROM vt0 NATURAL JOIN v0 WHERE ((vt0.c1 IN ())) UNION SELECT DISTINCT vt0.c1 FROM vt0 NATURAL JOIN v0 WHERE ((NOT ((vt0.c1 IN ())))) UNION SELECT DISTINCT vt0.c1 FROM vt0 NATURAL JOIN v0 WHERE ((((vt0.c1 IN ())) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0 NATURAL JOIN v0;
SELECT t0.c1, v0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2;
SELECT t0.c1, v0.c0, t0.c2 FROM t0, v0 WHERE (((v0.c0)GLOB(t0.c1)) COLLATE NOCASE) GROUP BY t0.c1, v0.c0, t0.c2 UNION SELECT ALL t0.c1, v0.c0, t0.c2 FROM t0, v0 WHERE ((NOT (((v0.c0)GLOB(t0.c1)) COLLATE NOCASE))) GROUP BY t0.c1, v0.c0, t0.c2 UNION SELECT t0.c1, v0.c0, t0.c2 FROM t0, v0 WHERE (((((v0.c0)GLOB(t0.c1)) COLLATE NOCASE) ISNULL)) GROUP BY t0.c1, v0.c0, t0.c2;
SELECT t0.c1, v0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2;
SELECT t0.c1 FROM vt0, t0 GROUP BY t0.c1;
SELECT t0.c1 FROM vt0, t0 GROUP BY t0.c1 HAVING MAX(MIN(t0.c0)) UNION ALL SELECT ALL t0.c1 FROM vt0, t0 GROUP BY t0.c1 HAVING (NOT (MAX(MIN(t0.c0)))) UNION ALL SELECT ALL t0.c1 FROM vt0, t0 GROUP BY t0.c1 HAVING ((MAX(MIN(t0.c0))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((+ ((((vt0.c0))<>((vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((+ ((((vt0.c0))!=((vt0.c0)))))))) UNION ALL SELECT * FROM vt0 WHERE ((((+ ((((vt0.c0))<>((vt0.c0)))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT v0.c0 FROM v0 INDEXED BY i67;
SELECT vt0.c1 FROM vt0, v0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, v0 WHERE (((v0.c0 COLLATE RTRIM)||(0.9412249139944284))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, v0 WHERE ((NOT (((v0.c0 COLLATE RTRIM)||(0.9412249139944284))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, v0 WHERE (((((v0.c0 COLLATE RTRIM)||(0.9412249139944284))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, v0 GROUP BY vt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((v0.c0))!=((v0.c0)))) BETWEEN (SUM(TOTAL(v0.c0))) AND (((TOTAL(AVG(v0.c0)))/(COUNT(*))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((((v0.c0))<>((v0.c0)))) BETWEEN (SUM(TOTAL(v0.c0))) AND (((TOTAL(AVG(v0.c0)))/(COUNT(*))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((((v0.c0))<>((v0.c0)))) BETWEEN (SUM(TOTAL(v0.c0))) AND (((TOTAL(AVG(v0.c0)))/(COUNT(*)))))) ISNULL);
SELECT t0.c2, vt0.c0, vt0.c1, t0.c1 FROM v0, t0, vt0;
SELECT ALL t0.c2, vt0.c0, vt0.c1, t0.c1 FROM v0, t0, vt0 WHERE (CASE WHEN LAST_INSERT_ROWID() THEN ((0.04210071515105496)>=(vt0.c1)) WHEN CAST(v0.c0 AS NUMERIC) THEN (0.7664795882073008 IN ()) WHEN ((vt0.c0) NOTNULL) THEN (NOT (t0.c0)) END) UNION ALL SELECT t0.c2, vt0.c0, vt0.c1, t0.c1 FROM v0, t0, vt0 WHERE ((NOT (CASE WHEN LAST_INSERT_ROWID() THEN ((0.04210071515105496)>=(vt0.c1)) WHEN CAST(v0.c0 AS NUMERIC) THEN (0.7664795882073008 IN ()) WHEN ((vt0.c0) NOTNULL) THEN (NOT (t0.c0)) END))) UNION ALL SELECT t0.c2, vt0.c0, vt0.c1, t0.c1 FROM v0, t0, vt0 WHERE (((CASE WHEN LAST_INSERT_ROWID() THEN ((0.04210071515105496)>=(vt0.c1)) WHEN CAST(v0.c0 AS NUMERIC) THEN (0.7664795882073008 IN ()) WHEN ((vt0.c0) NOTNULL) THEN (NOT (t0.c0)) END) ISNULL));
SELECT t0.c2, vt0.c0, vt0.c1, t0.c1 FROM v0, t0, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((((NULL)OR(v0.c0)))AND(v0.c0))) IS TRUE)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((((NULL)OR(v0.c0)))AND(v0.c0))) IS TRUE)))) UNION SELECT DISTINCT * FROM v0 NOT INDEXED WHERE (((((((((NULL)OR(v0.c0)))AND(v0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t0.c1, t0.c2, vt0.c1, v0.c0 FROM t0 CROSS JOIN v0 ON ((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)))GLOB(t0.c2 COLLATE NOCASE)) LEFT OUTER JOIN vt0 ON v0.c0 GROUP BY t0.c1, t0.c2, vt0.c1, v0.c0;
SELECT ALL t0.c1, t0.c2, vt0.c1, v0.c0 FROM t0 CROSS JOIN v0 ON ((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)))GLOB(t0.c2 COLLATE NOCASE)) LEFT OUTER JOIN vt0 ON v0.c0 WHERE ((((((t0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))))>=((((t0.c2)||(0.5161649257055556)))))) GROUP BY t0.c1, t0.c2, vt0.c1, v0.c0 UNION SELECT t0.c1, t0.c2, vt0.c1, v0.c0 FROM t0 CROSS JOIN v0 ON ((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)))GLOB(t0.c2 COLLATE NOCASE)) LEFT OUTER JOIN vt0 ON v0.c0 WHERE ((NOT ((((((t0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))))>=((((t0.c2)||(0.5161649257055556)))))))) GROUP BY t0.c1, t0.c2, vt0.c1, v0.c0 UNION SELECT t0.c1, t0.c2, vt0.c1, v0.c0 FROM t0 CROSS JOIN v0 ON ((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)))GLOB(t0.c2 COLLATE NOCASE)) LEFT OUTER JOIN vt0 ON v0.c0 WHERE ((((((((t0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))))>=((((t0.c2)||(0.5161649257055556)))))) ISNULL)) GROUP BY t0.c1, t0.c2, vt0.c1, v0.c0;
SELECT t0.c1, t0.c2, vt0.c1, v0.c0 FROM t0 CROSS JOIN v0 ON ((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)))GLOB(t0.c2 COLLATE NOCASE)) LEFT OUTER JOIN vt0 ON v0.c0 GROUP BY t0.c1, t0.c2, vt0.c1, v0.c0;
SELECT vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c0, vt0.c1;
SELECT vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c0, vt0.c1 HAVING AVG(v0.c0) COLLATE BINARY UNION ALL SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c0, vt0.c1 HAVING (NOT (AVG(v0.c0) COLLATE BINARY)) UNION ALL SELECT vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c0, vt0.c1 HAVING ((AVG(v0.c0) COLLATE BINARY) ISNULL);
SELECT vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c0, vt0.c1;
SELECT vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c0, vt0.c1 HAVING AVG(v0.c0) COLLATE BINARY UNION ALL SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c0, vt0.c1 HAVING (NOT (AVG(v0.c0) COLLATE BINARY)) UNION ALL SELECT vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c0, vt0.c1 HAVING ((AVG(v0.c0) COLLATE BINARY) ISNULL);
SELECT vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c0, vt0.c1;
SELECT * FROM v0 CROSS JOIN vt0 ON (rtreenode(v0.c0, t0.c1) IN ()) RIGHT OUTER JOIN t0 ON -259167061;
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (rtreenode(v0.c0, t0.c1) IN ()) RIGHT OUTER JOIN t0 ON -259167061 WHERE (vt0.c1) UNION ALL SELECT ALL * FROM v0 CROSS JOIN vt0 ON (rtreenode(v0.c0, t0.c1) IN ()) RIGHT OUTER JOIN t0 ON -259167061 WHERE ((NOT (vt0.c1))) UNION ALL SELECT ALL * FROM v0 CROSS JOIN vt0 ON (rtreenode(v0.c0, t0.c1) IN ()) RIGHT OUTER JOIN t0 ON -259167061 WHERE (((vt0.c1) ISNULL));
SELECT * FROM v0 CROSS JOIN vt0 ON (rtreenode(v0.c0, t0.c1) IN ()) RIGHT OUTER JOIN t0 ON -259167061;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (TRIM(((v0.c0)IS(v0.c0)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (TRIM(((v0.c0)IS(v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((TRIM(((v0.c0)IS(v0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c1)|(vt0.c0))) BETWEEN (vt0.c1) AND (((vt0.c1)<=(vt0.c1))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c1)|(vt0.c0))) BETWEEN (vt0.c1) AND (((vt0.c1)<=(vt0.c1))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.c1)|(vt0.c0))) BETWEEN (vt0.c1) AND (((vt0.c1)<=(vt0.c1))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM vt0, t0, v0;
SELECT ALL * FROM vt0, t0, v0 WHERE (UPPER(t0.c0 COLLATE BINARY)) UNION ALL SELECT ALL * FROM vt0, t0, v0 WHERE ((NOT (UPPER(t0.c0 COLLATE BINARY)))) UNION ALL SELECT ALL * FROM vt0, t0, v0 WHERE (((UPPER(t0.c0 COLLATE BINARY)) ISNULL));
SELECT ALL * FROM vt0, t0, v0;
SELECT DISTINCT * FROM t0, v0 RIGHT OUTER JOIN vt0 ON (+ (((vt0.c0)IS(NULL))));
SELECT DISTINCT * FROM t0, v0 RIGHT OUTER JOIN vt0 ON (+ (((vt0.c0)IS(NULL)))) WHERE (((CASE t0.c1  WHEN vt0.c0 THEN v0.c0 END) NOT BETWEEN (vt0.c0) AND ((((((((('')OR('Xa#s')))AND(t0.c2)))AND(vt0.c0)))OR(t0.c1))))) UNION SELECT DISTINCT * FROM t0, v0 RIGHT OUTER JOIN vt0 ON (+ (((vt0.c0)IS(NULL)))) WHERE ((NOT (((CASE t0.c1  WHEN vt0.c0 THEN v0.c0 END) NOT BETWEEN (vt0.c0) AND ((((((((('')OR('Xa#s')))AND(t0.c2)))AND(vt0.c0)))OR(t0.c1))))))) UNION SELECT DISTINCT * FROM t0, v0 RIGHT OUTER JOIN vt0 ON (+ (((vt0.c0)IS(NULL)))) WHERE (((((CASE t0.c1  WHEN vt0.c0 THEN v0.c0 END) NOT BETWEEN (vt0.c0) AND ((((((((('')OR('Xa#s')))AND(t0.c2)))AND(vt0.c0)))OR(t0.c1))))) ISNULL));
SELECT DISTINCT * FROM t0, v0 RIGHT OUTER JOIN vt0 ON (+ (((vt0.c0)IS(NULL))));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE vt0.c1  WHEN (vt0.c1 IN ()) THEN (((vt0.c1))>((vt0.c1))) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE vt0.c1  WHEN (vt0.c1 IN ()) THEN (((vt0.c1))>((vt0.c1))) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE vt0.c1  WHEN (vt0.c1 IN ()) THEN (((vt0.c1))>((vt0.c1))) END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, v0.c0, vt0.c1 FROM v0 INNER JOIN vt0 ON ((x'') NOT BETWEEN ((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))) AND (NULL)) GROUP BY vt0.c0, v0.c0, vt0.c1;
SELECT vt0.c0, v0.c0, vt0.c1 FROM v0 INNER JOIN vt0 ON ((x'') NOT BETWEEN ((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))) AND (NULL)) GROUP BY vt0.c0, v0.c0, vt0.c1 HAVING ((COUNT(*)) NOT NULL) UNION ALL SELECT vt0.c0, v0.c0, vt0.c1 FROM v0 INNER JOIN vt0 ON ((x'') NOT BETWEEN ((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))) AND (NULL)) GROUP BY vt0.c0, v0.c0, vt0.c1 HAVING (NOT (((COUNT(*)) NOT NULL))) UNION ALL SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM v0 INNER JOIN vt0 ON ((x'') NOT BETWEEN ((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))) AND (NULL)) GROUP BY vt0.c0, v0.c0, vt0.c1 HAVING ((((COUNT(*)) NOT NULL)) ISNULL);
SELECT vt0.c0, v0.c0, vt0.c1 FROM v0 INNER JOIN vt0 ON ((x'') NOT BETWEEN ((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))) AND (NULL)) GROUP BY vt0.c0, v0.c0, vt0.c1;
SELECT vt0.c0, v0.c0, vt0.c1 FROM v0 INNER JOIN vt0 ON ((x'') NOT BETWEEN ((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))) AND (NULL)) GROUP BY vt0.c0, v0.c0, vt0.c1 HAVING ((COUNT(*)) NOT NULL) UNION ALL SELECT vt0.c0, v0.c0, vt0.c1 FROM v0 INNER JOIN vt0 ON ((x'') NOT BETWEEN ((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))) AND (NULL)) GROUP BY vt0.c0, v0.c0, vt0.c1 HAVING (NOT (((COUNT(*)) NOT NULL))) UNION ALL SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM v0 INNER JOIN vt0 ON ((x'') NOT BETWEEN ((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))) AND (NULL)) GROUP BY vt0.c0, v0.c0, vt0.c1 HAVING ((((COUNT(*)) NOT NULL)) ISNULL);
SELECT vt0.c0, v0.c0, vt0.c1 FROM v0 INNER JOIN vt0 ON ((x'') NOT BETWEEN ((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))) AND (NULL)) GROUP BY vt0.c0, v0.c0, vt0.c1;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (UNLIKELY(DISTINCT x'')) UNION ALL SELECT * FROM v0 WHERE ((NOT (UNLIKELY(DISTINCT x'')))) UNION ALL SELECT * FROM v0 WHERE (((UNLIKELY(DISTINCT x'')) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT vt0.c0 FROM v0, t0, vt0;
SELECT DISTINCT vt0.c0 FROM v0, t0, vt0 WHERE (((t0.c2 COLLATE BINARY)>=((x'' IN ())))) UNION SELECT DISTINCT vt0.c0 FROM v0, t0, vt0 WHERE ((NOT (((t0.c2 COLLATE BINARY)>=((x'' IN ())))))) UNION SELECT DISTINCT vt0.c0 FROM v0, t0, vt0 WHERE (((((t0.c2 COLLATE BINARY)>=((x'' IN ())))) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, t0, vt0;
SELECT ALL v0.c0, vt0.c1, t0.c2, t0.c1, vt0.c0, t0.c0 FROM v0, t0, vt0 GROUP BY v0.c0, vt0.c1, t0.c2, t0.c1, vt0.c0, t0.c0;
SELECT v0.c0, vt0.c1, t0.c2, t0.c1, vt0.c0, t0.c0 FROM v0, t0, vt0 WHERE ((~ (v0.c0 COLLATE RTRIM))) GROUP BY v0.c0, vt0.c1, t0.c2, t0.c1, vt0.c0, t0.c0 UNION SELECT v0.c0, vt0.c1, t0.c2, t0.c1, vt0.c0, t0.c0 FROM v0, t0, vt0 WHERE ((NOT ((~ (v0.c0 COLLATE RTRIM))))) GROUP BY v0.c0, vt0.c1, t0.c2, t0.c1, vt0.c0, t0.c0 UNION SELECT v0.c0, vt0.c1, t0.c2, t0.c1, vt0.c0, t0.c0 FROM v0, t0, vt0 WHERE ((((~ (v0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY v0.c0, vt0.c1, t0.c2, t0.c1, vt0.c0, t0.c0;
SELECT ALL v0.c0, vt0.c1, t0.c2, t0.c1, vt0.c0, t0.c0 FROM v0, t0, vt0 GROUP BY v0.c0, vt0.c1, t0.c2, t0.c1, vt0.c0, t0.c0;
SELECT ALL t0.c1 FROM v0, t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM v0, t0 GROUP BY t0.c1 HAVING (((t0.c2)AND(t0.c2)) IN ()) UNION ALL SELECT ALL t0.c1 FROM v0, t0 GROUP BY t0.c1 HAVING (NOT ((((t0.c2)AND(t0.c2)) IN ()))) UNION ALL SELECT t0.c1 FROM v0, t0 GROUP BY t0.c1 HAVING (((((t0.c2)AND(t0.c2)) IN ())) ISNULL);
SELECT ALL t0.c1 FROM v0, t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM v0, t0 GROUP BY t0.c1 HAVING (((t0.c2)AND(t0.c2)) IN ()) UNION ALL SELECT ALL t0.c1 FROM v0, t0 GROUP BY t0.c1 HAVING (NOT ((((t0.c2)AND(t0.c2)) IN ()))) UNION ALL SELECT t0.c1 FROM v0, t0 GROUP BY t0.c1 HAVING (((((t0.c2)AND(t0.c2)) IN ())) ISNULL);
SELECT ALL t0.c1 FROM v0, t0 GROUP BY t0.c1;
SELECT vt0.c1 FROM vt0, v0;
SELECT ALL vt0.c1 FROM vt0, v0 WHERE ((((((vt0.c1))>((vt0.c1))))||(CASE NULL  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END))) UNION ALL SELECT vt0.c1 FROM vt0, v0 WHERE ((NOT ((((((vt0.c1))>((vt0.c1))))||(CASE NULL  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END))))) UNION ALL SELECT ALL vt0.c1 FROM vt0, v0 WHERE ((((((((vt0.c1))>((vt0.c1))))||(CASE NULL  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END))) ISNULL));
SELECT vt0.c1 FROM vt0, v0;
SELECT DISTINCT * FROM t0, v0, vt0;
SELECT DISTINCT * FROM t0, v0, vt0 WHERE (LIKELY(CASE WHEN vt0.c0 THEN t0.c2 END)) UNION SELECT DISTINCT * FROM t0, v0, vt0 WHERE ((NOT (LIKELY(CASE WHEN vt0.c0 THEN t0.c2 END)))) UNION SELECT DISTINCT * FROM t0, v0, vt0 WHERE (((LIKELY(CASE WHEN vt0.c0 THEN t0.c2 END)) ISNULL));
SELECT DISTINCT * FROM t0, v0, vt0;
SELECT vt0.c1, vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT vt0.c1, vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE v0.c0 END))>=((NULL)))) GROUP BY vt0.c1, vt0.c0, v0.c0 UNION SELECT vt0.c1, vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((NOT ((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE v0.c0 END))>=((NULL)))))) GROUP BY vt0.c1, vt0.c0, v0.c0 UNION SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE v0.c0 END))>=((NULL)))) ISNULL)) GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT vt0.c1, vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT ALL t0.c0, t0.c1 FROM v0, vt0, t0 GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM v0, vt0, t0 GROUP BY t0.c0, t0.c1 HAVING COUNT(x'' COLLATE NOCASE) UNION ALL SELECT ALL t0.c0, t0.c1 FROM v0, vt0, t0 GROUP BY t0.c0, t0.c1 HAVING (NOT (COUNT(x'' COLLATE NOCASE))) UNION ALL SELECT t0.c0, t0.c1 FROM v0, vt0, t0 GROUP BY t0.c0, t0.c1 HAVING ((COUNT(x'' COLLATE NOCASE)) ISNULL);
SELECT ALL t0.c0, t0.c1 FROM v0, vt0, t0 GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM v0, vt0, t0 GROUP BY t0.c0, t0.c1 HAVING COUNT(x'' COLLATE NOCASE) UNION ALL SELECT ALL t0.c0, t0.c1 FROM v0, vt0, t0 GROUP BY t0.c0, t0.c1 HAVING (NOT (COUNT(x'' COLLATE NOCASE))) UNION ALL SELECT t0.c0, t0.c1 FROM v0, vt0, t0 GROUP BY t0.c0, t0.c1 HAVING ((COUNT(x'' COLLATE NOCASE)) ISNULL);
SELECT ALL t0.c0, t0.c1 FROM v0, vt0, t0 GROUP BY t0.c0, t0.c1;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((((NOT (v0.c0)))<=((v0.c0 IN ())))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((NOT (v0.c0)))<=((v0.c0 IN ())))))) UNION ALL SELECT * FROM v0 WHERE ((((((NOT (v0.c0)))<=((v0.c0 IN ())))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0;
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE (t0.c1) UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((NOT (t0.c1))) UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE (((t0.c1) ISNULL));
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0;
SELECT ALL vt0.c1, t0.c2 FROM vt0 LEFT OUTER JOIN t0 ON (- ((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((vt0.c1))))) RIGHT OUTER JOIN v0 ON (((((t0.c2)AND(vt0.c0)))OR(vt0.c1)) IN (x'')) GROUP BY vt0.c1, t0.c2;
SELECT ALL vt0.c1, t0.c2 FROM vt0 LEFT OUTER JOIN t0 ON (- ((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((vt0.c1))))) RIGHT OUTER JOIN v0 ON (((((t0.c2)AND(vt0.c0)))OR(vt0.c1)) IN (x'')) WHERE (((t0.c1) NOT NULL)) GROUP BY vt0.c1, t0.c2 UNION SELECT ALL vt0.c1, t0.c2 FROM vt0 LEFT OUTER JOIN t0 ON (- ((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((vt0.c1))))) RIGHT OUTER JOIN v0 ON (((((t0.c2)AND(vt0.c0)))OR(vt0.c1)) IN (x'')) WHERE ((NOT (((t0.c1) NOT NULL)))) GROUP BY vt0.c1, t0.c2 UNION SELECT vt0.c1, t0.c2 FROM vt0 LEFT OUTER JOIN t0 ON (- ((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((vt0.c1))))) RIGHT OUTER JOIN v0 ON (((((t0.c2)AND(vt0.c0)))OR(vt0.c1)) IN (x'')) WHERE (((((t0.c1) NOT NULL)) ISNULL)) GROUP BY vt0.c1, t0.c2;
SELECT ALL vt0.c1, t0.c2 FROM vt0 LEFT OUTER JOIN t0 ON (- ((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((vt0.c1))))) RIGHT OUTER JOIN v0 ON (((((t0.c2)AND(vt0.c0)))OR(vt0.c1)) IN (x'')) GROUP BY vt0.c1, t0.c2;
SELECT v0.c0, t0.c0, vt0.c0, vt0.c1, t0.c2 FROM t0, vt0, v0 GROUP BY v0.c0, t0.c0, vt0.c0, vt0.c1, t0.c2;
SELECT v0.c0, t0.c0, vt0.c0, vt0.c1, t0.c2 FROM t0, vt0, v0 GROUP BY v0.c0, t0.c0, vt0.c0, vt0.c1, t0.c2 HAVING (((TOTAL(vt0.c0), vt0.c0, GROUP_CONCAT(t0.c0))) NOT BETWEEN ((((MAX(MIN(t0.c2))) NOT BETWEEN (vt0.c1) AND (MIN(vt0.c0))), (GROUP_CONCAT(t0.c0) IN ()), ((((t0.c0)OR(vt0.c0)))OR(MAX(TOTAL(vt0.c1)))))) AND ((CASE MIN(TOTAL(COUNT(t0.c0)))  WHEN t0.c1 THEN GROUP_CONCAT(AVG(MAX(t0.c2))) WHEN AVG(COUNT(*)) THEN t0.c1 WHEN SUM(vt0.c0) THEN v0.c0 ELSE GROUP_CONCAT(t0.c1) END, GROUP_CONCAT(TOTAL(SUM(COUNT(*)))), ((COUNT(*)) BETWEEN (0.7164788255698806) AND (MAX(v0.c0)))))) UNION ALL SELECT ALL v0.c0, t0.c0, vt0.c0, vt0.c1, t0.c2 FROM t0, vt0, v0 GROUP BY v0.c0, t0.c0, vt0.c0, vt0.c1, t0.c2 HAVING (NOT ((((TOTAL(vt0.c0), vt0.c0, GROUP_CONCAT(t0.c0))) NOT BETWEEN ((((MAX(MIN(t0.c2))) NOT BETWEEN (vt0.c1) AND (MIN(vt0.c0))), (GROUP_CONCAT(t0.c0) IN ()), ((((t0.c0)OR(vt0.c0)))OR(MAX(TOTAL(vt0.c1)))))) AND ((CASE MIN(TOTAL(COUNT(t0.c0)))  WHEN t0.c1 THEN GROUP_CONCAT(AVG(MAX(t0.c2))) WHEN AVG(COUNT(*)) THEN t0.c1 WHEN SUM(vt0.c0) THEN v0.c0 ELSE GROUP_CONCAT(t0.c1) END, GROUP_CONCAT(TOTAL(SUM(COUNT(*)))), ((COUNT(*)) BETWEEN (0.7164788255698806) AND (MAX(v0.c0)))))))) UNION ALL SELECT v0.c0, t0.c0, vt0.c0, vt0.c1, t0.c2 FROM t0, vt0, v0 GROUP BY v0.c0, t0.c0, vt0.c0, vt0.c1, t0.c2 HAVING (((((TOTAL(vt0.c0), vt0.c0, GROUP_CONCAT(t0.c0))) NOT BETWEEN ((((MAX(MIN(t0.c2))) NOT BETWEEN (vt0.c1) AND (MIN(vt0.c0))), (GROUP_CONCAT(t0.c0) IN ()), ((((t0.c0)OR(vt0.c0)))OR(MAX(TOTAL(vt0.c1)))))) AND ((CASE MIN(TOTAL(COUNT(t0.c0)))  WHEN t0.c1 THEN GROUP_CONCAT(AVG(MAX(t0.c2))) WHEN AVG(COUNT(*)) THEN t0.c1 WHEN SUM(vt0.c0) THEN v0.c0 ELSE GROUP_CONCAT(t0.c1) END, GROUP_CONCAT(TOTAL(SUM(COUNT(*)))), ((COUNT(*)) BETWEEN (0.7164788255698806) AND (MAX(v0.c0))))))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((CASE t0.c1  WHEN t0.c0 THEN t0.c1 END)GLOB(CASE t0.c2  WHEN t0.c1 THEN t0.c1 END))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((CASE t0.c1  WHEN t0.c0 THEN t0.c1 END)GLOB(CASE t0.c2  WHEN t0.c1 THEN t0.c1 END))))) UNION ALL SELECT * FROM t0 WHERE (((((CASE t0.c1  WHEN t0.c0 THEN t0.c1 END)GLOB(CASE t0.c2  WHEN t0.c1 THEN t0.c1 END))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE ((- (t0.c1))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT ((- (t0.c1))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((((- (t0.c1))) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT vt0.c1, t0.c2, vt0.c0, t0.c1, v0.c0, t0.c0 FROM v0, t0, vt0 GROUP BY vt0.c1, t0.c2, vt0.c0, t0.c1, v0.c0, t0.c0;
SELECT vt0.c1, t0.c2, vt0.c0, t0.c1, v0.c0, t0.c0 FROM v0, t0, vt0 WHERE ('aMNY') GROUP BY vt0.c1, t0.c2, vt0.c0, t0.c1, v0.c0, t0.c0 UNION SELECT ALL vt0.c1, t0.c2, vt0.c0, t0.c1, v0.c0, t0.c0 FROM v0, t0, vt0 WHERE ((NOT ('aMNY'))) GROUP BY vt0.c1, t0.c2, vt0.c0, t0.c1, v0.c0, t0.c0 UNION SELECT ALL vt0.c1, t0.c2, vt0.c0, t0.c1, v0.c0, t0.c0 FROM v0, t0, vt0 WHERE ((('aMNY') ISNULL)) GROUP BY vt0.c1, t0.c2, vt0.c0, t0.c1, v0.c0, t0.c0;
SELECT vt0.c1, t0.c2, vt0.c0, t0.c1, v0.c0, t0.c0 FROM v0, t0, vt0 GROUP BY vt0.c1, t0.c2, vt0.c0, t0.c1, v0.c0, t0.c0;
SELECT ALL vt0.c1, t0.c2, t0.c1, vt0.c0, t0.c0, v0.c0 FROM vt0, v0 LEFT OUTER JOIN t0 ON CAST(((t0.c0) IS TRUE) AS BLOB) GROUP BY vt0.c1, t0.c2, t0.c1, vt0.c0, t0.c0, v0.c0;
SELECT vt0.c1, t0.c2, t0.c1, vt0.c0, t0.c0, v0.c0 FROM vt0, v0 LEFT OUTER JOIN t0 ON CAST(((t0.c0) IS TRUE) AS BLOB) GROUP BY vt0.c1, t0.c2, t0.c1, vt0.c0, t0.c0, v0.c0 HAVING SUM(((t0.c1)GLOB(t0.c1))) UNION ALL SELECT vt0.c1, t0.c2, t0.c1, vt0.c0, t0.c0, v0.c0 FROM vt0, v0 LEFT OUTER JOIN t0 ON CAST(((t0.c0) IS TRUE) AS BLOB) GROUP BY vt0.c1, t0.c2, t0.c1, vt0.c0, t0.c0, v0.c0 HAVING (NOT (SUM(((t0.c1)GLOB(t0.c1))))) UNION ALL SELECT ALL vt0.c1, t0.c2, t0.c1, vt0.c0, t0.c0, v0.c0 FROM vt0, v0 LEFT OUTER JOIN t0 ON CAST(((t0.c0) IS TRUE) AS BLOB) GROUP BY vt0.c1, t0.c2, t0.c1, vt0.c0, t0.c0, v0.c0 HAVING ((SUM(((t0.c1)GLOB(t0.c1)))) ISNULL);
SELECT ALL vt0.c1, t0.c2, t0.c1, vt0.c0, t0.c0, v0.c0 FROM vt0, v0 LEFT OUTER JOIN t0 ON CAST(((t0.c0) IS TRUE) AS BLOB) GROUP BY vt0.c1, t0.c2, t0.c1, vt0.c0, t0.c0, v0.c0;
SELECT vt0.c1, t0.c2, t0.c1, vt0.c0, t0.c0, v0.c0 FROM vt0, v0 LEFT OUTER JOIN t0 ON CAST(((t0.c0) IS TRUE) AS BLOB) GROUP BY vt0.c1, t0.c2, t0.c1, vt0.c0, t0.c0, v0.c0 HAVING SUM(((t0.c1)GLOB(t0.c1))) UNION ALL SELECT vt0.c1, t0.c2, t0.c1, vt0.c0, t0.c0, v0.c0 FROM vt0, v0 LEFT OUTER JOIN t0 ON CAST(((t0.c0) IS TRUE) AS BLOB) GROUP BY vt0.c1, t0.c2, t0.c1, vt0.c0, t0.c0, v0.c0 HAVING (NOT (SUM(((t0.c1)GLOB(t0.c1))))) UNION ALL SELECT ALL vt0.c1, t0.c2, t0.c1, vt0.c0, t0.c0, v0.c0 FROM vt0, v0 LEFT OUTER JOIN t0 ON CAST(((t0.c0) IS TRUE) AS BLOB) GROUP BY vt0.c1, t0.c2, t0.c1, vt0.c0, t0.c0, v0.c0 HAVING ((SUM(((t0.c1)GLOB(t0.c1)))) ISNULL);
SELECT ALL vt0.c1, t0.c2, t0.c1, vt0.c0, t0.c0, v0.c0 FROM vt0, v0 LEFT OUTER JOIN t0 ON CAST(((t0.c0) IS TRUE) AS BLOB) GROUP BY vt0.c1, t0.c2, t0.c1, vt0.c0, t0.c0, v0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (LENGTH(vt0.c1)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (LENGTH(vt0.c1)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((LENGTH(vt0.c1)) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((LIKELIHOOD(DISTINCT v0.c0, 0.6743505391868729))<((((v0.c0))!=((vt0.c1)))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((LIKELIHOOD(DISTINCT v0.c0, 0.6743505391868729))<((((v0.c0))<>((vt0.c1)))))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((LIKELIHOOD(DISTINCT v0.c0, 0.6743505391868729))<((((v0.c0))!=((vt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT t0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY t0.c0, v0.c0;
SELECT ALL t0.c0, v0.c0 FROM v0, vt0, t0 WHERE (((NOT (vt0.c1)) IN ())) GROUP BY t0.c0, v0.c0 UNION SELECT t0.c0, v0.c0 FROM v0, vt0, t0 WHERE ((NOT (((NOT (vt0.c1)) IN ())))) GROUP BY t0.c0, v0.c0 UNION SELECT ALL t0.c0, v0.c0 FROM v0, vt0, t0 WHERE (((((NOT (vt0.c1)) IN ())) ISNULL)) GROUP BY t0.c0, v0.c0;
SELECT t0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY t0.c0, v0.c0;
SELECT t0.c0 FROM t0, v0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, v0 GROUP BY t0.c0 HAVING COUNT(v0.c0) UNION ALL SELECT ALL t0.c0 FROM t0, v0 GROUP BY t0.c0 HAVING (NOT (COUNT(v0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0, v0 GROUP BY t0.c0 HAVING ((COUNT(v0.c0)) ISNULL);
SELECT t0.c0 FROM t0, v0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, v0 GROUP BY t0.c0 HAVING COUNT(v0.c0) UNION ALL SELECT ALL t0.c0 FROM t0, v0 GROUP BY t0.c0 HAVING (NOT (COUNT(v0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0, v0 GROUP BY t0.c0 HAVING ((COUNT(v0.c0)) ISNULL);
SELECT t0.c0 FROM t0, v0 GROUP BY t0.c0;
SELECT vt0.c1, vt0.c0, t0.c1, v0.c0, t0.c0, t0.c2 FROM t0, v0, vt0;
SELECT vt0.c1, vt0.c0, t0.c1, v0.c0, t0.c0, t0.c2 FROM t0, v0, vt0 WHERE (CAST((((t0.c1, vt0.c1, v0.c0)) BETWEEN ((vt0.c1, v0.c0, vt0.c0)) AND ((t0.c0, t0.c1, t0.c2))) AS NUMERIC)) UNION ALL SELECT vt0.c1, vt0.c0, t0.c1, v0.c0, t0.c0, t0.c2 FROM t0, v0, vt0 WHERE ((NOT (CAST((((t0.c1, vt0.c1, v0.c0)) BETWEEN ((vt0.c1, v0.c0, vt0.c0)) AND ((t0.c0, t0.c1, t0.c2))) AS NUMERIC)))) UNION ALL SELECT vt0.c1, vt0.c0, t0.c1, v0.c0, t0.c0, t0.c2 FROM t0, v0, vt0 WHERE (((CAST((((t0.c1, vt0.c1, v0.c0)) BETWEEN ((vt0.c1, v0.c0, vt0.c0)) AND ((t0.c0, t0.c1, t0.c2))) AS NUMERIC)) ISNULL));
SELECT vt0.c1, vt0.c0, t0.c1, v0.c0, t0.c0, t0.c2 FROM t0, v0, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c2))==((t0.c0))))AND(((t0.c2)+(t0.c2))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((((t0.c2))=((t0.c0))))AND(((t0.c2)+(t0.c2))))))) UNION SELECT DISTINCT * FROM t0 NOT INDEXED WHERE ((((((((t0.c2))==((t0.c0))))AND(((t0.c2)+(t0.c2))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0;
SELECT t0.c1, v0.c0 FROM t0, v0 WHERE (((0.0) BETWEEN (((v0.c0) NOT NULL)) AND (((((((((v0.c0)OR(t0.c1)))OR(t0.c2)))OR(t0.c0)))OR(t0.c0))))) GROUP BY t0.c1, v0.c0 UNION SELECT ALL t0.c1, v0.c0 FROM t0, v0 WHERE ((NOT (((0.0) BETWEEN (((v0.c0) NOT NULL)) AND (((((((((v0.c0)OR(t0.c1)))OR(t0.c2)))OR(t0.c0)))OR(t0.c0))))))) GROUP BY t0.c1, v0.c0 UNION SELECT ALL t0.c1, v0.c0 FROM t0, v0 WHERE (((((0.0) BETWEEN (((v0.c0) NOT NULL)) AND (((((((((v0.c0)OR(t0.c1)))OR(t0.c2)))OR(t0.c0)))OR(t0.c0))))) ISNULL)) GROUP BY t0.c1, v0.c0;
SELECT t0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM t0 NATURAL JOIN v0;
SELECT * FROM t0 NATURAL JOIN v0 WHERE (CASE CAST(t0.c0 AS NUMERIC)  WHEN (t0.c2 IN ()) THEN (((t0.c2, t0.c0, v0.c0))!=((-1233170488, t0.c1, t0.c2))) WHEN ((t0.c2)>=(t0.c2)) THEN ((v0.c0)*(v0.c0)) WHEN CAST(v0.c0 AS INTEGER) THEN ((t0.c0)*(v0.c0)) ELSE t0.c1 END) UNION ALL SELECT * FROM t0 NATURAL JOIN v0 WHERE ((NOT (CASE CAST(t0.c0 AS NUMERIC)  WHEN (t0.c2 IN ()) THEN (((t0.c2, t0.c0, v0.c0))<>((-1233170488, t0.c1, t0.c2))) WHEN ((t0.c2)>=(t0.c2)) THEN ((v0.c0)*(v0.c0)) WHEN CAST(v0.c0 AS INTEGER) THEN ((t0.c0)*(v0.c0)) ELSE t0.c1 END))) UNION ALL SELECT ALL * FROM t0 NATURAL JOIN v0 WHERE (((CASE CAST(t0.c0 AS NUMERIC)  WHEN (t0.c2 IN ()) THEN (((t0.c2, t0.c0, v0.c0))!=((-1233170488, t0.c1, t0.c2))) WHEN ((t0.c2)>=(t0.c2)) THEN ((v0.c0)*(v0.c0)) WHEN CAST(v0.c0 AS INTEGER) THEN ((t0.c0)*(v0.c0)) ELSE t0.c1 END) ISNULL));
SELECT * FROM t0 NATURAL JOIN v0;
SELECT DISTINCT * FROM vt0, v0, t0;
SELECT DISTINCT * FROM vt0, v0, t0 WHERE ((((v0.c0 IN ()))>=(((vt0.c0)&(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, v0, t0 WHERE ((NOT ((((v0.c0 IN ()))>=(((vt0.c0)&(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, v0, t0 WHERE ((((((v0.c0 IN ()))>=(((vt0.c0)&(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, t0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((NULLIF(v0.c0, '⹯(\Pu%'))AND(v0.c0 COLLATE RTRIM)))AND(-1573631956))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((NULLIF(v0.c0, '⹯(\Pu%'))AND(v0.c0 COLLATE RTRIM)))AND(-1573631956))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((NULLIF(v0.c0, '⹯(\Pu%'))AND(v0.c0 COLLATE RTRIM)))AND(-1573631956))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c0, t0.c1 HAVING SUM(TOTAL(SUM(SUM(MIN(COUNT(*)))))) UNION ALL SELECT t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c0, t0.c1 HAVING (NOT (SUM(TOTAL(SUM(SUM(MIN(COUNT(*)))))))) UNION ALL SELECT ALL t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c0, t0.c1 HAVING ((SUM(TOTAL(SUM(SUM(MIN(COUNT(*))))))) ISNULL);
SELECT ALL t0.c2 FROM t0;
SELECT ALL t0.c2 FROM t0 WHERE ((((('-1115610657') NOTNULL)) IS FALSE)) UNION ALL SELECT t0.c2 FROM t0 WHERE ((NOT ((((('-1115610657') NOTNULL)) IS FALSE)))) UNION ALL SELECT t0.c2 FROM t0 WHERE ((((((('-1115610657') NOTNULL)) IS FALSE)) ISNULL));
SELECT ALL t0.c2 FROM t0;
SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN v0 ON (HEX(t0.c1) IN ());
SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN v0 ON (HEX(t0.c1) IN ()) WHERE (((((((t0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))OR(((vt0.c0) NOTNULL))))OR(((t0.c0) NOT BETWEEN (t0.c2) AND (vt0.c1))))) UNION SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN v0 ON (HEX(t0.c1) IN ()) WHERE ((NOT (((((((t0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))OR(((vt0.c0) NOTNULL))))OR(((t0.c0) NOT BETWEEN (t0.c2) AND (vt0.c1))))))) UNION SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN v0 ON (HEX(t0.c1) IN ()) WHERE (((((((((t0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))OR(((vt0.c0) NOTNULL))))OR(((t0.c0) NOT BETWEEN (t0.c2) AND (vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN v0 ON (HEX(t0.c1) IN ());
SELECT vt0.c1, v0.c0, vt0.c0, t0.c1, t0.c0 FROM vt0, t0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0, t0.c1, t0.c0;
SELECT vt0.c1, v0.c0, vt0.c0, t0.c1, t0.c0 FROM vt0, t0, v0 WHERE (UNLIKELY((- (t0.c2)))) GROUP BY vt0.c1, v0.c0, vt0.c0, t0.c1, t0.c0 UNION SELECT vt0.c1, v0.c0, vt0.c0, t0.c1, t0.c0 FROM vt0, t0, v0 WHERE ((NOT (UNLIKELY((- (t0.c2)))))) GROUP BY vt0.c1, v0.c0, vt0.c0, t0.c1, t0.c0 UNION SELECT ALL vt0.c1, v0.c0, vt0.c0, t0.c1, t0.c0 FROM vt0, t0, v0 WHERE (((UNLIKELY((- (t0.c2)))) ISNULL)) GROUP BY vt0.c1, v0.c0, vt0.c0, t0.c1, t0.c0;
SELECT vt0.c1, v0.c0, vt0.c0, t0.c1, t0.c0 FROM vt0, t0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0, t0.c1, t0.c0;
SELECT ALL v0.c0 FROM v0, t0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t0 GROUP BY v0.c0 HAVING (((t0.c2)) BETWEEN ((MIN(GROUP_CONCAT(GROUP_CONCAT(t0.c2))))) AND ((AVG(TOTAL(SUM(COUNT(AVG(v0.c0)))))))) COLLATE BINARY UNION ALL SELECT ALL v0.c0 FROM v0, t0 GROUP BY v0.c0 HAVING (NOT ((((t0.c2)) BETWEEN ((MIN(GROUP_CONCAT(GROUP_CONCAT(t0.c2))))) AND ((AVG(TOTAL(SUM(COUNT(AVG(v0.c0)))))))) COLLATE BINARY)) UNION ALL SELECT ALL v0.c0 FROM v0, t0 GROUP BY v0.c0 HAVING (((((t0.c2)) BETWEEN ((MIN(GROUP_CONCAT(GROUP_CONCAT(t0.c2))))) AND ((AVG(TOTAL(SUM(COUNT(AVG(v0.c0)))))))) COLLATE BINARY) ISNULL);
SELECT * FROM v0, t0, vt0;
SELECT ALL * FROM v0, t0, vt0 WHERE (((((((t0.c0)OR(v0.c0)))OR(t0.c0))) BETWEEN (((vt0.c1)<>('qY\rroE)'))) AND (CASE v0.c0  WHEN t0.c2 THEN vt0.c1 WHEN 0.4253166616260273 THEN t0.c1 WHEN vt0.c1 THEN '+m*?' ELSE vt0.c0 END))) UNION ALL SELECT * FROM v0, t0, vt0 WHERE ((NOT (((((((t0.c0)OR(v0.c0)))OR(t0.c0))) BETWEEN (((vt0.c1)!=('qY\rroE)'))) AND (CASE v0.c0  WHEN t0.c2 THEN vt0.c1 WHEN 0.4253166616260273 THEN t0.c1 WHEN vt0.c1 THEN '+m*?' ELSE vt0.c0 END))))) UNION ALL SELECT ALL * FROM v0, t0, vt0 WHERE (((((((((t0.c0)OR(v0.c0)))OR(t0.c0))) BETWEEN (((vt0.c1)!=('qY\rroE)'))) AND (CASE v0.c0  WHEN t0.c2 THEN vt0.c1 WHEN 0.4253166616260273 THEN t0.c1 WHEN vt0.c1 THEN '+m*?' ELSE vt0.c0 END))) ISNULL));
SELECT * FROM v0, t0, vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 NOT INDEXED;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (CAST((((vt0.c0))>((vt0.c1))) AS BLOB)) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CAST((((vt0.c0))>((vt0.c1))) AS BLOB)))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((CAST((((vt0.c0))>((vt0.c1))) AS BLOB)) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 NOT INDEXED;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((CAST(vt0.c1 AS BLOB))<<(((vt0.c1)GLOB(vt0.c0))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c1 AS BLOB))<<(((vt0.c1)GLOB(vt0.c0))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c1 AS BLOB))<<(((vt0.c1)GLOB(vt0.c0))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(MAX(COUNT(COUNT(*)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(MAX(COUNT(COUNT(*)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(MAX(COUNT(COUNT(*))))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (LIKELIHOOD(DISTINCT (- (v0.c0)), 0.5088125920395996)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (LIKELIHOOD(DISTINCT (- (v0.c0)), 0.5088125920395996)))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((LIKELIHOOD(DISTINCT (- (v0.c0)), 0.5088125920395996)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM v0, vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM v0, vt0 WHERE (json((vt0.c0 IN (NULL)))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM v0, vt0 WHERE ((NOT (json((vt0.c0 IN (NULL)))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM v0, vt0 WHERE (((json((vt0.c0 IN (NULL)))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM v0, vt0;
SELECT ALL vt0.c1, v0.c0, t0.c2, t0.c1, t0.c0 FROM t0, v0, vt0 GROUP BY vt0.c1, v0.c0, t0.c2, t0.c1, t0.c0;
SELECT ALL vt0.c1, v0.c0, t0.c2, t0.c1, t0.c0 FROM t0, v0, vt0 WHERE (t0.c0) GROUP BY vt0.c1, v0.c0, t0.c2, t0.c1, t0.c0 UNION SELECT ALL vt0.c1, v0.c0, t0.c2, t0.c1, t0.c0 FROM t0, v0, vt0 WHERE ((NOT (t0.c0))) GROUP BY vt0.c1, v0.c0, t0.c2, t0.c1, t0.c0 UNION SELECT ALL vt0.c1, v0.c0, t0.c2, t0.c1, t0.c0 FROM t0, v0, vt0 WHERE (((t0.c0) ISNULL)) GROUP BY vt0.c1, v0.c0, t0.c2, t0.c1, t0.c0;
SELECT ALL vt0.c1, v0.c0, t0.c2, t0.c1, t0.c0 FROM t0, v0, vt0 GROUP BY vt0.c1, v0.c0, t0.c2, t0.c1, t0.c0;
SELECT ALL v0.c0 FROM v0 INNER JOIN vt0 ON vt0.c1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 INNER JOIN vt0 ON vt0.c1 GROUP BY v0.c0 HAVING ((AVG(TOTAL('姯m䑁(a殐2')))IS(((COUNT(*)) BETWEEN (x'123c') AND (vt0.c1)))) UNION ALL SELECT ALL v0.c0 FROM v0 INNER JOIN vt0 ON vt0.c1 GROUP BY v0.c0 HAVING (NOT (((AVG(TOTAL('姯m䑁(a殐2')))IS(((COUNT(*)) BETWEEN (x'123c') AND (vt0.c1)))))) UNION ALL SELECT v0.c0 FROM v0 INNER JOIN vt0 ON vt0.c1 GROUP BY v0.c0 HAVING ((((AVG(TOTAL('姯m䑁(a殐2')))IS(((COUNT(*)) BETWEEN (x'123c') AND (vt0.c1))))) ISNULL);
SELECT ALL t0.c2, t0.c1 FROM v0, t0;
SELECT ALL t0.c2, t0.c1 FROM v0, t0 WHERE (((((((((((t0.c0)AND(t0.c1)))AND(0.23907511937935966)))OR(t0.c1)))OR(t0.c1)))OR(CASE t0.c1  WHEN t0.c2 THEN '-75838748' WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END))) UNION ALL SELECT t0.c2, t0.c1 FROM v0, t0 WHERE ((NOT (((((((((((t0.c0)AND(t0.c1)))AND(0.23907511937935966)))OR(t0.c1)))OR(t0.c1)))OR(CASE t0.c1  WHEN t0.c2 THEN '-75838748' WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END))))) UNION ALL SELECT t0.c2, t0.c1 FROM v0, t0 WHERE (((((((((((((t0.c0)AND(t0.c1)))AND(0.23907511937935966)))OR(t0.c1)))OR(t0.c1)))OR(CASE t0.c1  WHEN t0.c2 THEN '-75838748' WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END))) ISNULL));
SELECT ALL t0.c2, t0.c1 FROM v0, t0;
SELECT DISTINCT * FROM t0, v0, vt0;
SELECT DISTINCT * FROM t0, v0, vt0 WHERE (('-1046773018' IN (v0.c0, t0.c1 COLLATE BINARY))) UNION SELECT DISTINCT * FROM t0, v0, vt0 WHERE ((NOT (('-1046773018' IN (v0.c0, t0.c1 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM t0, v0, vt0 WHERE (((('-1046773018' IN (v0.c0, t0.c1 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM t0, v0, vt0;
