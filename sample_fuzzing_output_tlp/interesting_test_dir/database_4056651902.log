-- Time: 2024/06/09 16:14:19
-- Database: database2
-- Database version: 3.40.0
-- seed value: 4056651902
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
SELECT rtreecheck('rt0'); -- 0ms;
PRAGMA temp.cache_spill; -- 0ms;
PRAGMA cache_size; -- 0ms;
COMMIT; -- 0ms;
ANALYZE rt0; -- 0ms;
PRAGMA ignore_check_constraints; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
PRAGMA main.journal_mode = DELETE; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (NULL); -- 0ms;
INSERT OR ABORT INTO rt0 VALUES (((-923983767 COLLATE NOCASE) BETWEEN (((0Xffffffffc8ed2069) BETWEEN (-923983767) AND ('⁩O]9گwꩇw덳'))) AND ((('-323840753')AND(x'1215')))), 0.29207337624710283, 'W'); -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c1, c2) VALUES (0X37275654, x'', NULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1047115714 unordered noskipscan'); -- 0ms;
UPDATE OR ABORT rt0 SET c0=-1.047115714E9 WHERE ((CAST(rt0.c0 AS NUMERIC))>>(QUOTE(-3.23840753E8))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '226765942 unordered noskipscan'); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=x'', c1=0.011671940835775607, c1=NULL WHERE ((((((rt0.c0)OR(NULL)))AND(rt0.c0))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c1) VALUES (0Xffffffffb368b373, -3.23840753E8, 0.9140967597733844); -- 1ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (NULL, NULL); -- 0ms;
PRAGMA mmap_size = 4258356705468861719; -- 0ms;
PRAGMA temp.incremental_vacuum; -- 0ms;
DELETE FROM rt0 WHERE ((LIKELY(DISTINCT rt0.c1))LIKE(((rt0.c1)-(rt0.c0)))); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2, c0) VALUES (0.449605188363432, '925324884', -1284983949), (NULL, '-1284983949', '-1284983949'), (0.7252117620022452, x'', 0.6194034678578604); -- 1ms;
PRAGMA defer_foreign_keys = false; -- 0ms;
PRAGMA main.legacy_file_format = false; -- 4ms;
PRAGMA main.checkpoint_fullfsync; -- 0ms;
INSERT OR FAIL INTO rt0 VALUES (0.9823086931274578, NULL, 0.17718554381657203); -- 0ms;
REINDEX; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=126581476 noskipscan'); -- 0ms;
REINDEX NOCASE; -- 1ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
ANALYZE rt0; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(NULL) WHERE STRFTIME(rt0.c0, rt0.c2, rt0.c2) COLLATE BINARY; -- 0ms;
PRAGMA temp.application_id; -- 0ms;
UPDATE OR IGNORE rt0 SET c0='W', c2='-1675092034'; -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 0ms;
UPDATE OR REPLACE rt0 SET (c2)=(x'') WHERE ((rt0.c1) IS TRUE); -- 1ms;
UPDATE OR REPLACE rt0 SET c2='-%?12j{'; -- 1ms;
UPDATE OR REPLACE rt0 SET c0=NULL, c1=x''; -- 1ms;
INSERT OR FAIL INTO rt0 VALUES (407073023, NULL, '-1e500'); -- 0ms;
INSERT OR REPLACE INTO rt1(c2) VALUES (''); -- 0ms;
PRAGMA main.stats; -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
PRAGMA integrity_check; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE rt1 SET (c0)=(''); -- 0ms;
PRAGMA temp.incremental_vacuum; -- 0ms;
INSERT OR FAIL INTO rt0(c2) VALUES (0xffffffffb647b6d6); -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES ('7r', 0.28902005278078213, NULL); -- 0ms;
PRAGMA incremental_vacuum(439808612); -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c0) VALUES (2071795540, '-1615015522'), (x'', '959848123'), (NULL, 0.35386985096914114); -- 0ms;
UPDATE OR REPLACE rt0 SET c2=x''; -- 0ms;
UPDATE rt0 SET (c1)=(0.9094369626575682) WHERE (((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))))!=((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END))); -- 0ms;
UPDATE rt0 SET (c0, c2)=(x'', '-263364707'); -- 0ms;
UPDATE OR IGNORE rt1 SET (c0, c2)=(x'', x'') WHERE ((((rt1.c0) NOT NULL)) IS FALSE); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1) VALUES (x'', 0.6767977992617755); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c1) VALUES (NULL), (0x63b8a333), ('W'); -- 1ms;
INSERT OR ABORT INTO rt1 VALUES (0.7946312452892368, x'', 385999562); -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES (NULL, '226765942', '-214051373'), (0.05276457847703575, 0.251010528093067, x''), (0.14870302507313904, x'', '0.6194034678578604'); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1) VALUES (x'', NULL), (0.05276457847703575, 0.17718554381657203), ('-323840753', 0X1a36f264); -- 0ms;
PRAGMA mmap_size; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE rt1 SET (c1, c0)=(x'', 0X6adfab3f) WHERE ((rt1.c0 COLLATE RTRIM)-(rt1.c1 COLLATE NOCASE)); -- 0ms;
PRAGMA temp.journal_mode = WAL; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM rt1, rt0;
SELECT ALL * FROM rt1, rt0 WHERE (((((x'')AND(((((rt0.c2)OR('')))OR(rt0.c0)))))OR((((rt1.c0))=((rt1.c2)))))) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE ((NOT (((((x'')AND(((((rt0.c2)OR('')))OR(rt0.c0)))))OR((((rt1.c0))==((rt1.c2)))))))) UNION ALL SELECT * FROM rt1, rt0 WHERE (((((((x'')AND(((((rt0.c2)OR('')))OR(rt0.c0)))))OR((((rt1.c0))==((rt1.c2)))))) ISNULL));
SELECT * FROM rt1, rt0;
SELECT DISTINCT rt0.c2, rt1.c0, rt1.c2, rt0.c1, rt0.c0, rt1.c1 FROM rt0 NATURAL JOIN rt1;
SELECT DISTINCT rt0.c2, rt1.c0, rt1.c2, rt0.c1, rt0.c0, rt1.c1 FROM rt0 NATURAL JOIN rt1 WHERE (0.057969035209941566 COLLATE NOCASE) UNION SELECT DISTINCT rt0.c2, rt1.c0, rt1.c2, rt0.c1, rt0.c0, rt1.c1 FROM rt0 NATURAL JOIN rt1 WHERE ((NOT (0.057969035209941566 COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c2, rt1.c0, rt1.c2, rt0.c1, rt0.c0, rt1.c1 FROM rt0 NATURAL JOIN rt1 WHERE (((0.057969035209941566 COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c2, rt1.c0, rt1.c2, rt0.c1, rt0.c0, rt1.c1 FROM rt0 NATURAL JOIN rt1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 WHERE (((((((rt1.c1)IS(rt1.c0)))AND((((rt1.c0, rt1.c0, rt1.c1))<((rt1.c0, rt1.c0, rt1.c0))))))AND(rt1.c1))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE ((NOT (((((((rt1.c1)IS(rt1.c0)))AND((((rt1.c0, rt1.c0, rt1.c1))<((rt1.c0, rt1.c0, rt1.c0))))))AND(rt1.c1))))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE (((((((((rt1.c1)IS(rt1.c0)))AND((((rt1.c0, rt1.c0, rt1.c1))<((rt1.c0, rt1.c0, rt1.c0))))))AND(rt1.c1))) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt0.c1, rt1.c2, rt0.c2, rt1.c1, rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c1, rt1.c2, rt0.c2, rt1.c1, rt0.c0, rt1.c0;
SELECT ALL rt0.c1, rt1.c2, rt0.c2, rt1.c1, rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c1, rt1.c2, rt0.c2, rt1.c1, rt0.c0, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt1.c2, rt0.c2, rt1.c1, rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c1, rt1.c2, rt0.c2, rt1.c1, rt0.c0, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt1.c2, rt0.c2, rt1.c1, rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c1, rt1.c2, rt0.c2, rt1.c1, rt0.c0, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt1.c2, rt0.c2, rt1.c1, rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c1, rt1.c2, rt0.c2, rt1.c1, rt0.c0, rt1.c0;
SELECT ALL rt0.c1, rt1.c2, rt0.c2, rt1.c1, rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c1, rt1.c2, rt0.c2, rt1.c1, rt0.c0, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt1.c2, rt0.c2, rt1.c1, rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c1, rt1.c2, rt0.c2, rt1.c1, rt0.c0, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt1.c2, rt0.c2, rt1.c1, rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c1, rt1.c2, rt0.c2, rt1.c1, rt0.c0, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt1.c2, rt0.c2, rt1.c1, rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c1, rt1.c2, rt0.c2, rt1.c1, rt0.c0, rt1.c0;
SELECT * FROM rt0, rt1;
SELECT ALL * FROM rt0, rt1 WHERE (CAST(((rt0.c2)%(rt0.c1)) AS REAL)) UNION ALL SELECT * FROM rt0, rt1 WHERE ((NOT (CAST(((rt0.c2)%(rt0.c1)) AS REAL)))) UNION ALL SELECT * FROM rt0, rt1 WHERE (((CAST(((rt0.c2)%(rt0.c1)) AS REAL)) ISNULL));
SELECT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE ((- (((rt0.c1)<(rt1.c0))))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT ((- (((rt0.c1)<(rt1.c0))))))) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED, rt1 WHERE ((((- (((rt0.c1)<(rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 END) IS TRUE)) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 END) IS TRUE)))) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (((((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 END) IS TRUE)) ISNULL)) GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING COUNT(SUM('0}6\')) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (COUNT(SUM('0}6\')))) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((COUNT(SUM('0}6\'))) ISNULL);
SELECT ALL MIN(((((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c1))) NOT BETWEEN (rt1.c1 COLLATE RTRIM) AND (0.1307266706217064))) FROM rt0, rt1 ORDER BY rt0.c1;
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE ((((((((rt1.c1)) BETWEEN ((x'c33e')) AND ((rt1.c1))))AND(rt1.c1 COLLATE RTRIM)))AND(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END))) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((((((((rt1.c1)) BETWEEN ((x'c33e')) AND ((rt1.c1))))AND(rt1.c1 COLLATE RTRIM)))AND(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((((((((((rt1.c1)) BETWEEN ((x'c33e')) AND ((rt1.c1))))AND(rt1.c1 COLLATE RTRIM)))AND(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((((NULL)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2))) IS TRUE)) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((((((((NULL)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2))) IS TRUE)))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((((((NULL)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2))) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt1.c1, rt1.c2, rt1.c0, rt0.c2, rt0.c1 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c1, rt1.c2, rt1.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt1.c1, rt1.c2, rt1.c0, rt0.c2, rt0.c1 FROM rt1, rt0 WHERE (rt0.c2) GROUP BY rt0.c0, rt1.c1, rt1.c2, rt1.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt1.c1, rt1.c2, rt1.c0, rt0.c2, rt0.c1 FROM rt1, rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c0, rt1.c1, rt1.c2, rt1.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt1.c1, rt1.c2, rt1.c0, rt0.c2, rt0.c1 FROM rt1, rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c0, rt1.c1, rt1.c2, rt1.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt1.c1, rt1.c2, rt1.c0, rt0.c2, rt0.c1 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c1, rt1.c2, rt1.c0, rt0.c2, rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((TOTAL(x'572cc0c4'))) BETWEEN ((COUNT(*))) AND (((rt0.c0 IN ())))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((((TOTAL(x'572cc0c4'))) BETWEEN ((COUNT(*))) AND (((rt0.c0 IN ())))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((((TOTAL(x'572cc0c4'))) BETWEEN ((COUNT(*))) AND (((rt0.c0 IN ()))))) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((TOTAL(x'572cc0c4'))) BETWEEN ((COUNT(*))) AND (((rt0.c0 IN ())))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((((TOTAL(x'572cc0c4'))) BETWEEN ((COUNT(*))) AND (((rt0.c0 IN ())))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((((TOTAL(x'572cc0c4'))) BETWEEN ((COUNT(*))) AND (((rt0.c0 IN ()))))) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL * FROM rt0, rt1;
SELECT * FROM rt0, rt1 WHERE (((((rt1.c2)||(rt0.c2))) IS TRUE)) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE ((NOT (((((rt1.c2)||(rt0.c2))) IS TRUE)))) UNION ALL SELECT * FROM rt0, rt1 WHERE (((((((rt1.c2)||(rt0.c2))) IS TRUE)) ISNULL));
SELECT ALL * FROM rt0, rt1;
SELECT DISTINCT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0 WHERE (((((-1.047115714E9)+(rt1.c2))) IS FALSE)) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((NOT (((((-1.047115714E9)+(rt1.c2))) IS FALSE)))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE (((((((-1.047115714E9)+(rt1.c2))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt1, rt0;
SELECT ALL rt1.c0, rt0.c0, rt0.c1, rt0.c2, rt1.c1, rt1.c2 FROM rt1, rt0 GROUP BY rt1.c0, rt0.c0, rt0.c1, rt0.c2, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt0.c0, rt0.c1, rt0.c2, rt1.c1, rt1.c2 FROM rt1, rt0 WHERE ((- (rt1.c1))) GROUP BY rt1.c0, rt0.c0, rt0.c1, rt0.c2, rt1.c1, rt1.c2 UNION SELECT rt1.c0, rt0.c0, rt0.c1, rt0.c2, rt1.c1, rt1.c2 FROM rt1, rt0 WHERE ((NOT ((- (rt1.c1))))) GROUP BY rt1.c0, rt0.c0, rt0.c1, rt0.c2, rt1.c1, rt1.c2 UNION SELECT rt1.c0, rt0.c0, rt0.c1, rt0.c2, rt1.c1, rt1.c2 FROM rt1, rt0 WHERE ((((- (rt1.c1))) ISNULL)) GROUP BY rt1.c0, rt0.c0, rt0.c1, rt0.c2, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt0.c0, rt0.c1, rt0.c2, rt1.c1, rt1.c2 FROM rt1, rt0 GROUP BY rt1.c0, rt0.c0, rt0.c1, rt0.c2, rt1.c1, rt1.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING rt0.c1 UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING rt0.c1 UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((rt0.c1) NOT BETWEEN (((x'')<>(rt0.c2))) AND (x''))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (((x'')<>(rt0.c2))) AND (x''))))) UNION ALL SELECT * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (((x'')<>(rt0.c2))) AND (x''))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt1 CROSS JOIN rt0 ON ((((((rt1.c2)>=(0.6333034051231914)))OR((- ('-1284983949')))))AND((NOT (rt0.c0))));
SELECT DISTINCT rt0.c2 FROM rt1 CROSS JOIN rt0 ON ((((((rt1.c2)>=(0.6333034051231914)))OR((- ('-1284983949')))))AND((NOT (rt0.c0)))) WHERE ((((rt0.c0 IN ())) ISNULL)) UNION SELECT DISTINCT rt0.c2 FROM rt1 CROSS JOIN rt0 ON ((((((rt1.c2)>=(0.6333034051231914)))OR((- ('-1284983949')))))AND((NOT (rt0.c0)))) WHERE ((NOT ((((rt0.c0 IN ())) ISNULL)))) UNION SELECT DISTINCT rt0.c2 FROM rt1 CROSS JOIN rt0 ON ((((((rt1.c2)>=(0.6333034051231914)))OR((- ('-1284983949')))))AND((NOT (rt0.c0)))) WHERE ((((((rt0.c0 IN ())) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt1 CROSS JOIN rt0 ON ((((((rt1.c2)>=(0.6333034051231914)))OR((- ('-1284983949')))))AND((NOT (rt0.c0))));
SELECT ALL rt1.c0, rt0.c2, rt0.c0, rt1.c1, rt1.c2, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c2, rt0.c0, rt1.c1, rt1.c2, rt0.c1;
SELECT ALL rt1.c0, rt0.c2, rt0.c0, rt1.c1, rt1.c2, rt0.c1 FROM rt0, rt1 WHERE (CAST(x'adbb' AS REAL)) GROUP BY rt1.c0, rt0.c2, rt0.c0, rt1.c1, rt1.c2, rt0.c1 UNION SELECT ALL rt1.c0, rt0.c2, rt0.c0, rt1.c1, rt1.c2, rt0.c1 FROM rt0, rt1 WHERE ((NOT (CAST(x'adbb' AS REAL)))) GROUP BY rt1.c0, rt0.c2, rt0.c0, rt1.c1, rt1.c2, rt0.c1 UNION SELECT rt1.c0, rt0.c2, rt0.c0, rt1.c1, rt1.c2, rt0.c1 FROM rt0, rt1 WHERE (((CAST(x'adbb' AS REAL)) ISNULL)) GROUP BY rt1.c0, rt0.c2, rt0.c0, rt1.c1, rt1.c2, rt0.c1;
SELECT ALL rt1.c0, rt0.c2, rt0.c0, rt1.c1, rt1.c2, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c2, rt0.c0, rt1.c1, rt1.c2, rt0.c1;
SELECT ALL rt0.c0 FROM rt0, rt1 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, rt1 GROUP BY rt0.c0 HAVING CAST(COUNT(*) AS NUMERIC) UNION ALL SELECT rt0.c0 FROM rt0, rt1 GROUP BY rt0.c0 HAVING (NOT (CAST(COUNT(*) AS NUMERIC))) UNION ALL SELECT rt0.c0 FROM rt0, rt1 GROUP BY rt0.c0 HAVING ((CAST(COUNT(*) AS NUMERIC)) ISNULL);
SELECT ALL rt0.c0 FROM rt0, rt1 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, rt1 GROUP BY rt0.c0 HAVING CAST(COUNT(*) AS NUMERIC) UNION ALL SELECT rt0.c0 FROM rt0, rt1 GROUP BY rt0.c0 HAVING (NOT (CAST(COUNT(*) AS NUMERIC))) UNION ALL SELECT rt0.c0 FROM rt0, rt1 GROUP BY rt0.c0 HAVING ((CAST(COUNT(*) AS NUMERIC)) ISNULL);
SELECT ALL rt0.c0 FROM rt0, rt1 GROUP BY rt0.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((rt0.c2 IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((rt0.c2 IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c2 IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END))) ISNULL));
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CAST(HEX(DISTINCT rt1.c0) AS NUMERIC)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CAST(HEX(DISTINCT rt1.c0) AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CAST(HEX(DISTINCT rt1.c0) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt0.c0 FROM rt1, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt1, rt0 WHERE (rt1.c0) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt1, rt0 WHERE ((NOT (rt1.c0))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt1, rt0 WHERE (((rt1.c0) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt1, rt0 GROUP BY rt0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(rt0.c1))OR(MAX(TOTAL(rt0.c0)))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (((COUNT(rt0.c1))OR(MAX(TOTAL(rt0.c0)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((((COUNT(rt0.c1))OR(MAX(TOTAL(rt0.c0))))) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c0 COLLATE BINARY)OR(0.44246563243737136)))OR(((rt0.c0)>>(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0 COLLATE BINARY)OR(0.44246563243737136)))OR(((rt0.c0)>>(rt0.c1))))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c0 COLLATE BINARY)OR(0.44246563243737136)))OR(((rt0.c0)>>(rt0.c1))))) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((CASE WHEN '735535331' THEN 'W' ELSE rt1.c0 END)AND(((((rt1.c1)AND(rt1.c0)))OR(rt1.c0))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((CASE WHEN '735535331' THEN 'W' ELSE rt1.c0 END)AND(((((rt1.c1)AND(rt1.c0)))OR(rt1.c0))))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((CASE WHEN '735535331' THEN 'W' ELSE rt1.c0 END)AND(((((rt1.c1)AND(rt1.c0)))OR(rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (CAST((NULL IN ()) AS TEXT)) GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (CAST((NULL IN ()) AS TEXT)))) GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (((CAST((NULL IN ()) AS TEXT)) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (~ (CASE rt1.c0  WHEN TOTAL(rt1.c0) THEN rt1.c2 ELSE rt1.c0 END)) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT ((~ (CASE rt1.c0  WHEN TOTAL(rt1.c0) THEN rt1.c2 ELSE rt1.c0 END)))) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (((~ (CASE rt1.c0  WHEN TOTAL(rt1.c0) THEN rt1.c2 ELSE rt1.c0 END))) ISNULL);
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (~ (CASE rt1.c0  WHEN TOTAL(rt1.c0) THEN rt1.c2 ELSE rt1.c0 END)) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT ((~ (CASE rt1.c0  WHEN TOTAL(rt1.c0) THEN rt1.c2 ELSE rt1.c0 END)))) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (((~ (CASE rt1.c0  WHEN TOTAL(rt1.c0) THEN rt1.c2 ELSE rt1.c0 END))) ISNULL);
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt0.c2, rt0.c1, rt1.c2, rt0.c0, rt1.c0, rt1.c1 FROM rt1, rt0;
SELECT rt0.c2, rt0.c1, rt1.c2, rt0.c0, rt1.c0, rt1.c1 FROM rt1, rt0 WHERE (((((((((((rt1.c0)AND(0.7218165195523644)))OR(rt0.c2)))OR(rt1.c1)))OR(rt0.c2)))-(rt1.c1 COLLATE BINARY))) UNION ALL SELECT rt0.c2, rt0.c1, rt1.c2, rt0.c0, rt1.c0, rt1.c1 FROM rt1, rt0 WHERE ((NOT (((((((((((rt1.c0)AND(0.7218165195523644)))OR(rt0.c2)))OR(rt1.c1)))OR(rt0.c2)))-(rt1.c1 COLLATE BINARY))))) UNION ALL SELECT rt0.c2, rt0.c1, rt1.c2, rt0.c0, rt1.c0, rt1.c1 FROM rt1, rt0 WHERE (((((((((((((rt1.c0)AND(0.7218165195523644)))OR(rt0.c2)))OR(rt1.c1)))OR(rt0.c2)))-(rt1.c1 COLLATE BINARY))) ISNULL));
SELECT rt0.c2, rt0.c1, rt1.c2, rt0.c0, rt1.c0, rt1.c1 FROM rt1, rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 NOT INDEXED WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt1.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c1, rt0.c0;
SELECT rt1.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c1, rt0.c0 HAVING CASE AVG(rt1.c1)  WHEN rt1.c2 THEN COUNT(rt1.c1) ELSE rt0.c2 END COLLATE NOCASE UNION ALL SELECT rt1.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c1, rt0.c0 HAVING (NOT (CASE AVG(rt1.c1)  WHEN rt1.c2 THEN COUNT(rt1.c1) ELSE rt0.c2 END COLLATE NOCASE)) UNION ALL SELECT rt1.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c1, rt0.c0 HAVING ((CASE AVG(rt1.c1)  WHEN rt1.c2 THEN COUNT(rt1.c1) ELSE rt0.c2 END COLLATE NOCASE) ISNULL);
SELECT rt1.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c1, rt0.c0;
SELECT rt1.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c1, rt0.c0 HAVING CASE AVG(rt1.c1)  WHEN rt1.c2 THEN COUNT(rt1.c1) ELSE rt0.c2 END COLLATE NOCASE UNION ALL SELECT rt1.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c1, rt0.c0 HAVING (NOT (CASE AVG(rt1.c1)  WHEN rt1.c2 THEN COUNT(rt1.c1) ELSE rt0.c2 END COLLATE NOCASE)) UNION ALL SELECT rt1.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c1, rt0.c0 HAVING ((CASE AVG(rt1.c1)  WHEN rt1.c2 THEN COUNT(rt1.c1) ELSE rt0.c2 END COLLATE NOCASE) ISNULL);
SELECT rt1.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c1, rt0.c0;
SELECT ALL * FROM rt1, rt0;
SELECT * FROM rt1, rt0 WHERE ((((rt0.c2)) BETWEEN (('')) AND (((~ (rt1.c0)))))) UNION ALL SELECT * FROM rt1, rt0 WHERE ((NOT ((((rt0.c2)) BETWEEN (('')) AND (((~ (rt1.c0)))))))) UNION ALL SELECT * FROM rt1, rt0 WHERE ((((((rt0.c2)) BETWEEN (('')) AND (((~ (rt1.c0)))))) ISNULL));
SELECT ALL * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (rt1.c0) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (rt1.c0))) UNION SELECT DISTINCT * FROM rt1 WHERE (((rt1.c0) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING CAST(COUNT(*) AS BLOB) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (CAST(COUNT(*) AS BLOB))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((CAST(COUNT(*) AS BLOB)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING CAST(COUNT(*) AS BLOB) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (CAST(COUNT(*) AS BLOB))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((CAST(COUNT(*) AS BLOB)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((((0.6371977358726348))<((CASE NULL  WHEN rt1.c1 THEN rt1.c1 END)))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT ((((0.6371977358726348))<((CASE NULL  WHEN rt1.c1 THEN rt1.c1 END)))))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((((((0.6371977358726348))<((CASE NULL  WHEN rt1.c1 THEN rt1.c1 END)))) ISNULL));
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT * FROM rt0 NOT INDEXED, rt1;
SELECT DISTINCT * FROM rt0, rt1 NOT INDEXED WHERE (((((((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c1)))AND((NOT (rt1.c0)))))AND(((rt0.c2) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT (((((((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c1)))AND((NOT (rt1.c0)))))AND(((rt0.c2) NOT NULL)))))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE (((((((((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c1)))AND((NOT (rt1.c0)))))AND(((rt0.c2) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM rt0 NOT INDEXED, rt1;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 WHERE ((((rt1.c1 IN ()))>((((0.017654426176345384, rt1.c0, rt1.c1))<>((rt1.c0, rt1.c0, rt1.c0)))))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 WHERE ((NOT ((((rt1.c1 IN ()))>((((0.017654426176345384, rt1.c0, rt1.c1))<>((rt1.c0, rt1.c0, rt1.c0)))))))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1 WHERE ((((((rt1.c1 IN ()))>((((0.017654426176345384, rt1.c0, rt1.c1))!=((rt1.c0, rt1.c0, rt1.c0)))))) ISNULL)) GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt0.c2 FROM rt0, rt1 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, rt1 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(rt0.c2)) NOT BETWEEN (AVG(MIN(COUNT(*)))) AND (COUNT(*))) UNION ALL SELECT ALL rt0.c2 FROM rt0, rt1 GROUP BY rt0.c2 HAVING (NOT (((GROUP_CONCAT(rt0.c2)) NOT BETWEEN (AVG(MIN(COUNT(*)))) AND (COUNT(*))))) UNION ALL SELECT ALL rt0.c2 FROM rt0, rt1 GROUP BY rt0.c2 HAVING ((((GROUP_CONCAT(rt0.c2)) NOT BETWEEN (AVG(MIN(COUNT(*)))) AND (COUNT(*)))) ISNULL);
SELECT * FROM rt1, rt0;
SELECT * FROM rt1, rt0 WHERE (((((((rt0.c0)OR(rt1.c0)))AND(rt1.c2))) NOT BETWEEN (UPPER(rt1.c0)) AND ((rt1.c1 IN ())))) UNION ALL SELECT * FROM rt1, rt0 WHERE ((NOT (((((((rt0.c0)OR(rt1.c0)))AND(rt1.c2))) NOT BETWEEN (UPPER(rt1.c0)) AND ((rt1.c1 IN ())))))) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE (((((((((rt0.c0)OR(rt1.c0)))AND(rt1.c2))) NOT BETWEEN (UPPER(rt1.c0)) AND ((rt1.c1 IN ())))) ISNULL));
SELECT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT (0.7704705225077402))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT ((NOT (0.7704705225077402))))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((((NOT (0.7704705225077402))) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT ALL rt0.c0, rt0.c2, rt1.c0, rt0.c1, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c0, rt0.c2, rt1.c0, rt0.c1, rt1.c1;
SELECT rt0.c0, rt0.c2, rt1.c0, rt0.c1, rt1.c1 FROM rt1, rt0 WHERE (((((((rt0.c1)AND(rt1.c0)))OR(rt1.c2)))IS NOT(rt1.c2 COLLATE NOCASE))) GROUP BY rt0.c0, rt0.c2, rt1.c0, rt0.c1, rt1.c1 UNION SELECT rt0.c0, rt0.c2, rt1.c0, rt0.c1, rt1.c1 FROM rt1, rt0 WHERE ((NOT (((((((rt0.c1)AND(rt1.c0)))OR(rt1.c2)))IS NOT(rt1.c2 COLLATE NOCASE))))) GROUP BY rt0.c0, rt0.c2, rt1.c0, rt0.c1, rt1.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt1.c0, rt0.c1, rt1.c1 FROM rt1, rt0 WHERE (((((((((rt0.c1)AND(rt1.c0)))OR(rt1.c2)))IS NOT(rt1.c2 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt1.c0, rt0.c1, rt1.c1;
SELECT ALL rt0.c0, rt0.c2, rt1.c0, rt0.c1, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c0, rt0.c2, rt1.c0, rt0.c1, rt1.c1;
SELECT ALL rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1 HAVING 'Or*_O氒' UNION ALL SELECT ALL rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1 HAVING (NOT ('Or*_O氒')) UNION ALL SELECT ALL rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1 HAVING (('Or*_O氒') ISNULL);
SELECT ALL rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1 HAVING 'Or*_O氒' UNION ALL SELECT ALL rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1 HAVING (NOT ('Or*_O氒')) UNION ALL SELECT ALL rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1 HAVING (('Or*_O氒') ISNULL);
SELECT ALL rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1;
SELECT ALL * FROM rt0, rt1;
SELECT ALL * FROM rt0, rt1 WHERE (SUBSTR(0.7211894210294141 COLLATE BINARY, (((rt0.c1))>=((rt1.c0))))) UNION ALL SELECT * FROM rt0, rt1 WHERE ((NOT (SUBSTR(0.7211894210294141 COLLATE BINARY, (((rt0.c1))>=((rt1.c0))))))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE (((SUBSTR(0.7211894210294141 COLLATE BINARY, (((rt0.c1))>=((rt1.c0))))) ISNULL));
SELECT ALL * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ('Jo䚒e') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ('Jo䚒e'))) UNION SELECT DISTINCT * FROM rt0 WHERE ((('Jo䚒e') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt1.c1, rt0.c0, rt0.c1, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c2, rt1.c1, rt0.c0, rt0.c1, rt1.c0;
SELECT rt0.c2, rt1.c1, rt0.c0, rt0.c1, rt1.c0 FROM rt1, rt0 WHERE (CASE CAST(rt1.c1 AS INTEGER)  WHEN ((((((((rt0.c2)OR(rt0.c1)))AND(rt1.c1)))AND(rt1.c1)))AND(0.28902005278078213)) THEN rt0.c0 COLLATE RTRIM WHEN (rt1.c0 IN ()) THEN ((rt0.c1)OR('0.17718554381657203')) WHEN rt0.c0 THEN ((((rt1.c1)OR(rt1.c1)))OR(rt1.c1)) END) GROUP BY rt0.c2, rt1.c1, rt0.c0, rt0.c1, rt1.c0 UNION SELECT rt0.c2, rt1.c1, rt0.c0, rt0.c1, rt1.c0 FROM rt1, rt0 WHERE ((NOT (CASE CAST(rt1.c1 AS INTEGER)  WHEN ((((((((rt0.c2)OR(rt0.c1)))AND(rt1.c1)))AND(rt1.c1)))AND(0.28902005278078213)) THEN rt0.c0 COLLATE RTRIM WHEN (rt1.c0 IN ()) THEN ((rt0.c1)OR('0.17718554381657203')) WHEN rt0.c0 THEN ((((rt1.c1)OR(rt1.c1)))OR(rt1.c1)) END))) GROUP BY rt0.c2, rt1.c1, rt0.c0, rt0.c1, rt1.c0 UNION SELECT ALL rt0.c2, rt1.c1, rt0.c0, rt0.c1, rt1.c0 FROM rt1, rt0 WHERE (((CASE CAST(rt1.c1 AS INTEGER)  WHEN ((((((((rt0.c2)OR(rt0.c1)))AND(rt1.c1)))AND(rt1.c1)))AND(0.28902005278078213)) THEN rt0.c0 COLLATE RTRIM WHEN (rt1.c0 IN ()) THEN ((rt0.c1)OR('0.17718554381657203')) WHEN rt0.c0 THEN ((((rt1.c1)OR(rt1.c1)))OR(rt1.c1)) END) ISNULL)) GROUP BY rt0.c2, rt1.c1, rt0.c0, rt0.c1, rt1.c0;
SELECT ALL rt0.c2, rt1.c1, rt0.c0, rt0.c1, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c2, rt1.c1, rt0.c0, rt0.c1, rt1.c0;
SELECT ALL rt1.c0, rt0.c0, rt1.c2, rt0.c1, rt1.c1 FROM rt0 RIGHT OUTER JOIN rt1 ON (((('-554702147') BETWEEN (x'82fb') AND (rt1.c2))) ISNULL) GROUP BY rt1.c0, rt0.c0, rt1.c2, rt0.c1, rt1.c1;
SELECT rt1.c0, rt0.c0, rt1.c2, rt0.c1, rt1.c1 FROM rt0 RIGHT OUTER JOIN rt1 ON (((('-554702147') BETWEEN (x'82fb') AND (rt1.c2))) ISNULL) GROUP BY rt1.c0, rt0.c0, rt1.c2, rt0.c1, rt1.c1 HAVING SUM(TOTAL(rt1.c1)) UNION ALL SELECT rt1.c0, rt0.c0, rt1.c2, rt0.c1, rt1.c1 FROM rt0 RIGHT OUTER JOIN rt1 ON (((('-554702147') BETWEEN (x'82fb') AND (rt1.c2))) ISNULL) GROUP BY rt1.c0, rt0.c0, rt1.c2, rt0.c1, rt1.c1 HAVING (NOT (SUM(TOTAL(rt1.c1)))) UNION ALL SELECT rt1.c0, rt0.c0, rt1.c2, rt0.c1, rt1.c1 FROM rt0 RIGHT OUTER JOIN rt1 ON (((('-554702147') BETWEEN (x'82fb') AND (rt1.c2))) ISNULL) GROUP BY rt1.c0, rt0.c0, rt1.c2, rt0.c1, rt1.c1 HAVING ((SUM(TOTAL(rt1.c1))) ISNULL);
SELECT ALL * FROM rt0, rt1;
SELECT ALL * FROM rt0, rt1 WHERE (((rt0.c0 COLLATE BINARY) BETWEEN ((NOT (rt1.c2))) AND (rt1.c0))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE ((NOT (((rt0.c0 COLLATE BINARY) BETWEEN ((NOT (rt1.c2))) AND (rt1.c0))))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE (((((rt0.c0 COLLATE BINARY) BETWEEN ((NOT (rt1.c2))) AND (rt1.c0))) ISNULL));
SELECT ALL * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt1.c1, rt0.c0, rt0.c1, rt1.c0, rt1.c2 FROM rt1, rt0 GROUP BY rt1.c1, rt0.c0, rt0.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt0.c0, rt0.c1, rt1.c0, rt1.c2 FROM rt1, rt0 WHERE ((((((rt0.c2 IN ()))AND(((NULL) BETWEEN (x'') AND (rt1.c1)))))OR(rt0.c2 COLLATE RTRIM))) GROUP BY rt1.c1, rt0.c0, rt0.c1, rt1.c0, rt1.c2 UNION SELECT ALL rt1.c1, rt0.c0, rt0.c1, rt1.c0, rt1.c2 FROM rt1, rt0 WHERE ((NOT ((((((rt0.c2 IN ()))AND(((NULL) BETWEEN (x'') AND (rt1.c1)))))OR(rt0.c2 COLLATE RTRIM))))) GROUP BY rt1.c1, rt0.c0, rt0.c1, rt1.c0, rt1.c2 UNION SELECT ALL rt1.c1, rt0.c0, rt0.c1, rt1.c0, rt1.c2 FROM rt1, rt0 WHERE ((((((((rt0.c2 IN ()))AND(((NULL) BETWEEN (x'') AND (rt1.c1)))))OR(rt0.c2 COLLATE RTRIM))) ISNULL)) GROUP BY rt1.c1, rt0.c0, rt0.c1, rt1.c0, rt1.c2;
SELECT rt1.c1, rt0.c0, rt0.c1, rt1.c0, rt1.c2 FROM rt1, rt0 GROUP BY rt1.c1, rt0.c0, rt0.c1, rt1.c0, rt1.c2;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((MAX(rt0.c2))%((rt0.c1 IN (COUNT(*), MIN('0.9094369626575682'), '0.449605188363432')))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (((MAX(rt0.c2))%((rt0.c1 IN (COUNT(*), MIN('0.9094369626575682'), '0.449605188363432')))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((MAX(rt0.c2))%((rt0.c1 IN (COUNT(*), MIN('0.9094369626575682'), '0.449605188363432'))))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((MAX(rt0.c2))%((rt0.c1 IN (COUNT(*), MIN('0.9094369626575682'), '0.449605188363432')))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (((MAX(rt0.c2))%((rt0.c1 IN (COUNT(*), MIN('0.9094369626575682'), '0.449605188363432')))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((MAX(rt0.c2))%((rt0.c1 IN (COUNT(*), MIN('0.9094369626575682'), '0.449605188363432'))))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt1.c0, rt1.c1, rt1.c2, rt0.c1, rt0.c2 FROM rt0, rt1;
SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt0.c1, rt0.c2 FROM rt0, rt1 WHERE (((((((((((((((rt1.c0) IS TRUE))AND(NULL)))OR(((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt1.c1)))))AND(((0.8725321517775212) NOTNULL))))AND(rt0.c2 COLLATE BINARY)))AND((((rt1.c2))!=((rt0.c0))))))OR(UPPER(rt1.c0)))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt0.c1, rt0.c2 FROM rt0, rt1 WHERE ((NOT (((((((((((((((rt1.c0) IS TRUE))AND(NULL)))OR(((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt1.c1)))))AND(((0.8725321517775212) NOTNULL))))AND(rt0.c2 COLLATE BINARY)))AND((((rt1.c2))!=((rt0.c0))))))OR(UPPER(rt1.c0)))))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt0.c1, rt0.c2 FROM rt0, rt1 WHERE (((((((((((((((((rt1.c0) IS TRUE))AND(NULL)))OR(((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt1.c1)))))AND(((0.8725321517775212) NOTNULL))))AND(rt0.c2 COLLATE BINARY)))AND((((rt1.c2))!=((rt0.c0))))))OR(UPPER(rt1.c0)))) ISNULL));
SELECT rt1.c0, rt1.c1, rt1.c2, rt0.c1, rt0.c2 FROM rt0, rt1;
SELECT DISTINCT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0 WHERE ((rt0.c0 IN ()) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((NOT ((rt0.c0 IN ()) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((((rt0.c0 IN ()) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt1, rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((~ (((rt0.c1)-(rt0.c0))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((~ (((rt0.c1)-(rt0.c0))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((~ (((rt0.c1)-(rt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (~ (((rt0.c1)IS NOT(rt0.c2)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((~ (((rt0.c1)IS NOT(rt0.c2)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((~ (((rt0.c1)IS NOT(rt0.c2))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (~ (((rt0.c1)IS NOT(rt0.c2)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((~ (((rt0.c1)IS NOT(rt0.c2)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((~ (((rt0.c1)IS NOT(rt0.c2))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE ((UNLIKELY(DISTINCT rt1.c0) IN ())) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((UNLIKELY(DISTINCT rt1.c0) IN ())))) UNION ALL SELECT ALL * FROM rt1 WHERE ((((UNLIKELY(DISTINCT rt1.c0) IN ())) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN rt0 ON 735535331;
SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN rt0 ON 735535331 WHERE (((((((((((0.6371977358726348)OR(rt0.c0)))OR(rt1.c2)))AND(rt0.c1)))AND(rt0.c1)))OR('959848123'))) UNION SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN rt0 ON 735535331 WHERE ((NOT (((((((((((0.6371977358726348)OR(rt0.c0)))OR(rt1.c2)))AND(rt0.c1)))AND(rt0.c1)))OR('959848123'))))) UNION SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN rt0 ON 735535331 WHERE (((((((((((((0.6371977358726348)OR(rt0.c0)))OR(rt1.c2)))AND(rt0.c1)))AND(rt0.c1)))OR('959848123'))) ISNULL));
SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN rt0 ON 735535331;
SELECT ALL rt1.c2, rt0.c0, rt1.c0, rt0.c1, rt0.c2 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c0, rt1.c0, rt0.c1, rt0.c2;
SELECT ALL rt1.c2, rt0.c0, rt1.c0, rt0.c1, rt0.c2 FROM rt0, rt1 WHERE ((((rt1.c1)) BETWEEN (((+ (rt1.c0)))) AND ((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 END)))) GROUP BY rt1.c2, rt0.c0, rt1.c0, rt0.c1, rt0.c2 UNION SELECT rt1.c2, rt0.c0, rt1.c0, rt0.c1, rt0.c2 FROM rt0, rt1 WHERE ((NOT ((((rt1.c1)) BETWEEN (((+ (rt1.c0)))) AND ((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 END)))))) GROUP BY rt1.c2, rt0.c0, rt1.c0, rt0.c1, rt0.c2 UNION SELECT rt1.c2, rt0.c0, rt1.c0, rt0.c1, rt0.c2 FROM rt0, rt1 WHERE ((((((rt1.c1)) BETWEEN (((+ (rt1.c0)))) AND ((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 END)))) ISNULL)) GROUP BY rt1.c2, rt0.c0, rt1.c0, rt0.c1, rt0.c2;
SELECT ALL rt1.c2, rt0.c0, rt1.c0, rt0.c1, rt0.c2 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c0, rt1.c0, rt0.c1, rt0.c2;
SELECT rt0.c1, rt1.c2, rt0.c2, rt0.c0, rt1.c0, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c2, rt0.c2, rt0.c0, rt1.c0, rt1.c1;
SELECT rt0.c1, rt1.c2, rt0.c2, rt0.c0, rt1.c0, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c2, rt0.c2, rt0.c0, rt1.c0, rt1.c1 HAVING IFNULL(((COUNT(*)) NOT BETWEEN (rt1.c2) AND (GROUP_CONCAT(COUNT(MIN(rt1.c0))))), ((rt0.c1)/(rt1.c0))) UNION ALL SELECT ALL rt0.c1, rt1.c2, rt0.c2, rt0.c0, rt1.c0, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c2, rt0.c2, rt0.c0, rt1.c0, rt1.c1 HAVING (NOT (IFNULL(((COUNT(*)) NOT BETWEEN (rt1.c2) AND (GROUP_CONCAT(COUNT(MIN(rt1.c0))))), ((rt0.c1)/(rt1.c0))))) UNION ALL SELECT ALL rt0.c1, rt1.c2, rt0.c2, rt0.c0, rt1.c0, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c2, rt0.c2, rt0.c0, rt1.c0, rt1.c1 HAVING ((IFNULL(((COUNT(*)) NOT BETWEEN (rt1.c2) AND (GROUP_CONCAT(COUNT(MIN(rt1.c0))))), ((rt0.c1)/(rt1.c0)))) ISNULL);
SELECT ALL * FROM rt1, rt0;
SELECT ALL * FROM rt1, rt0 WHERE (rt0.c1) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL * FROM rt1, rt0;
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE (7.39568416E8) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT (7.39568416E8))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE (((7.39568416E8) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT rt0.c0, rt1.c0, rt0.c2, rt1.c2, rt1.c1, rt0.c1 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c0, rt0.c2, rt1.c2, rt1.c1, rt0.c1;
SELECT rt0.c0, rt1.c0, rt0.c2, rt1.c2, rt1.c1, rt0.c1 FROM rt0, rt1 WHERE ((((- (rt1.c1)))>=((NULL IN ())))) GROUP BY rt0.c0, rt1.c0, rt0.c2, rt1.c2, rt1.c1, rt0.c1 UNION SELECT rt0.c0, rt1.c0, rt0.c2, rt1.c2, rt1.c1, rt0.c1 FROM rt0, rt1 WHERE ((NOT ((((- (rt1.c1)))>=((NULL IN ())))))) GROUP BY rt0.c0, rt1.c0, rt0.c2, rt1.c2, rt1.c1, rt0.c1 UNION SELECT rt0.c0, rt1.c0, rt0.c2, rt1.c2, rt1.c1, rt0.c1 FROM rt0, rt1 WHERE ((((((- (rt1.c1)))>=((NULL IN ())))) ISNULL)) GROUP BY rt0.c0, rt1.c0, rt0.c2, rt1.c2, rt1.c1, rt0.c1;
SELECT rt0.c0, rt1.c0, rt0.c2, rt1.c2, rt1.c1, rt0.c1 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c0, rt0.c2, rt1.c2, rt1.c1, rt0.c1;
SELECT rt1.c0, rt1.c1, rt0.c1, rt1.c2, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c1, rt0.c1, rt1.c2, rt0.c0;
SELECT rt1.c0, rt1.c1, rt0.c1, rt1.c2, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c1, rt0.c1, rt1.c2, rt0.c0 HAVING COUNT(GROUP_CONCAT(rt1.c0)) UNION ALL SELECT rt1.c0, rt1.c1, rt0.c1, rt1.c2, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c1, rt0.c1, rt1.c2, rt0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(rt1.c0)))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt0.c1, rt1.c2, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c1, rt0.c1, rt1.c2, rt0.c0 HAVING ((COUNT(GROUP_CONCAT(rt1.c0))) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN rt1 ON (((((rt1.c0))<((rt1.c2))))||(rt1.c1));
SELECT rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN rt1 ON (((((rt1.c0))<((rt1.c2))))||(rt1.c1)) WHERE (MAX(HEX(rt1.c0), ((rt0.c0)<(rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN rt1 ON (((((rt1.c0))<((rt1.c2))))||(rt1.c1)) WHERE ((NOT (MAX(HEX(rt1.c0), ((rt0.c0)<(rt0.c1)))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN rt1 ON (((((rt1.c0))<((rt1.c2))))||(rt1.c1)) WHERE (((MAX(HEX(rt1.c0), ((rt0.c0)<(rt0.c1)))) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN rt1 ON (((((rt1.c0))<((rt1.c2))))||(rt1.c1));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (CASE (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))  WHEN (((rt0.c2, rt0.c1, x''))=((rt0.c1, rt0.c2, 'C '))) THEN (~ (rt0.c2)) END) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))  WHEN (((rt0.c2, rt0.c1, x''))=((rt0.c1, rt0.c2, 'C '))) THEN (~ (rt0.c2)) END))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))  WHEN (((rt0.c2, rt0.c1, x''))=((rt0.c1, rt0.c2, 'C '))) THEN (~ (rt0.c2)) END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt1.c1, rt0.c1, rt1.c0 FROM rt1, rt0 GROUP BY rt1.c1, rt0.c1, rt1.c0;
SELECT rt1.c1, rt0.c1, rt1.c0 FROM rt1, rt0 WHERE (TRIM(DISTINCT rt1.c0, rt0.c2) COLLATE RTRIM) GROUP BY rt1.c1, rt0.c1, rt1.c0 UNION SELECT rt1.c1, rt0.c1, rt1.c0 FROM rt1, rt0 WHERE ((NOT (TRIM(DISTINCT rt1.c0, rt0.c2) COLLATE RTRIM))) GROUP BY rt1.c1, rt0.c1, rt1.c0 UNION SELECT ALL rt1.c1, rt0.c1, rt1.c0 FROM rt1, rt0 WHERE (((TRIM(DISTINCT rt1.c0, rt0.c2) COLLATE RTRIM) ISNULL)) GROUP BY rt1.c1, rt0.c1, rt1.c0;
SELECT ALL rt1.c1, rt0.c1, rt1.c0 FROM rt1, rt0 GROUP BY rt1.c1, rt0.c1, rt1.c0;
SELECT rt0.c0, rt1.c0, rt0.c1, rt1.c2 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c0, rt0.c1, rt1.c2;
SELECT ALL rt0.c0, rt1.c0, rt0.c1, rt1.c2 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c0, rt0.c1, rt1.c2 HAVING rt0.c1 COLLATE BINARY UNION ALL SELECT ALL rt0.c0, rt1.c0, rt0.c1, rt1.c2 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c0, rt0.c1, rt1.c2 HAVING (NOT (rt0.c1 COLLATE BINARY)) UNION ALL SELECT rt0.c0, rt1.c0, rt0.c1, rt1.c2 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c0, rt0.c1, rt1.c2 HAVING ((rt0.c1 COLLATE BINARY) ISNULL);
SELECT rt0.c0, rt1.c0, rt0.c1, rt1.c2 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c0, rt0.c1, rt1.c2;
SELECT ALL rt0.c0, rt1.c0, rt0.c1, rt1.c2 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c0, rt0.c1, rt1.c2 HAVING rt0.c1 COLLATE BINARY UNION ALL SELECT ALL rt0.c0, rt1.c0, rt0.c1, rt1.c2 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c0, rt0.c1, rt1.c2 HAVING (NOT (rt0.c1 COLLATE BINARY)) UNION ALL SELECT rt0.c0, rt1.c0, rt0.c1, rt1.c2 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c0, rt0.c1, rt1.c2 HAVING ((rt0.c1 COLLATE BINARY) ISNULL);
SELECT rt0.c0, rt1.c0, rt0.c1, rt1.c2 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c0, rt0.c1, rt1.c2;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (JULIANDAY((((rt0.c2))<>((rt0.c0))), TYPEOF(rt0.c2), rt0.c1)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (JULIANDAY((((rt0.c2))<>((rt0.c0))), TYPEOF(rt0.c2), rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((JULIANDAY((((rt0.c2))!=((rt0.c0))), TYPEOF(rt0.c2), rt0.c1)) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c2 FROM rt1 WHERE (((((rt1.c2 IN ())))<((((rt1.c2) IS FALSE))))) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE ((NOT (((((rt1.c2 IN ())))<((((rt1.c2) IS FALSE))))))) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE (((((((rt1.c2 IN ())))<((((rt1.c2) IS FALSE))))) ISNULL));
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM)IS NOT((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE RTRIM)IS NOT((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c2 COLLATE RTRIM)IS NOT((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt1.c2, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c2;
SELECT ALL rt1.c2, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c2 HAVING ((CASE WHEN COUNT(COUNT(*)) THEN rt1.c1 ELSE AVG(MIN(GROUP_CONCAT(MIN(SUM(TOTAL(rt1.c2)))))) END)-(0xffffffffbf446c49)) UNION ALL SELECT rt1.c2, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c2 HAVING (NOT (((CASE WHEN COUNT(COUNT(*)) THEN rt1.c1 ELSE AVG(MIN(GROUP_CONCAT(MIN(SUM(TOTAL(rt1.c2)))))) END)-(0xffffffffbf446c49)))) UNION ALL SELECT ALL rt1.c2, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c2 HAVING ((((CASE WHEN COUNT(COUNT(*)) THEN rt1.c1 ELSE AVG(MIN(GROUP_CONCAT(MIN(SUM(TOTAL(rt1.c2)))))) END)-(0xffffffffbf446c49))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (x'') UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM rt0 WHERE (((x'') ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((CASE NULL  WHEN rt1.c1 THEN rt1.c1 END)IS NOT(rt1.c1 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((CASE NULL  WHEN rt1.c1 THEN rt1.c1 END)IS NOT(rt1.c1 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((CASE NULL  WHEN rt1.c1 THEN rt1.c1 END)IS NOT(rt1.c1 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt0.c2 FROM rt1, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt1, rt0 WHERE (NULL COLLATE RTRIM) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt1, rt0 WHERE ((NOT (NULL COLLATE RTRIM))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt1, rt0 WHERE (((NULL COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt1, rt0 GROUP BY rt0.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING ((((((((TOTAL(rt1.c1))AND(AVG(COUNT(AVG('1793043263'))))))OR(COUNT(*))))AND((((rt1.c0)) NOT BETWEEN ((MAX(MAX(SUM(COUNT(TOTAL(GROUP_CONCAT(rt1.c0)))))))) AND ((rt1.c1))))))AND(((COUNT(*)) BETWEEN (rt1.c2) AND (TOTAL(rt1.c2))))) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING (NOT (((((((((TOTAL(rt1.c1))AND(AVG(COUNT(AVG('1793043263'))))))OR(COUNT(*))))AND((((rt1.c0)) NOT BETWEEN ((MAX(MAX(SUM(COUNT(TOTAL(GROUP_CONCAT(rt1.c0)))))))) AND ((rt1.c1))))))AND(((COUNT(*)) BETWEEN (rt1.c2) AND (TOTAL(rt1.c2))))))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING ((((((((((TOTAL(rt1.c1))AND(AVG(COUNT(AVG('1793043263'))))))OR(COUNT(*))))AND((((rt1.c0)) NOT BETWEEN ((MAX(MAX(SUM(COUNT(TOTAL(GROUP_CONCAT(rt1.c0)))))))) AND ((rt1.c1))))))AND(((COUNT(*)) BETWEEN (rt1.c2) AND (TOTAL(rt1.c2)))))) ISNULL);
SELECT ALL * FROM rt1, rt0;
SELECT * FROM rt1, rt0 WHERE ((+ (''))) UNION ALL SELECT * FROM rt1, rt0 NOT INDEXED WHERE ((NOT ((+ (''))))) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE ((((+ (''))) ISNULL));
SELECT ALL * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c0)*(rt1.c1)) IN ())) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((rt1.c0)*(rt1.c1)) IN ())))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c0)*(rt1.c1)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c1 END)OR(LOWER(DISTINCT rt0.c2))))OR(rt0.c2 COLLATE RTRIM))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((CASE WHEN rt0.c2 THEN rt0.c1 END)OR(LOWER(DISTINCT rt0.c2))))OR(rt0.c2 COLLATE RTRIM))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((((CASE WHEN rt0.c2 THEN rt0.c1 END)OR(LOWER(DISTINCT rt0.c2))))OR(rt0.c2 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING COUNT(*) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING COUNT(*) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE ((- ((((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c0, rt0.c0, rt0.c0)))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT ((- ((((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c0, rt0.c0, rt0.c0)))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((((- ((((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c0, rt0.c0, rt0.c0)))))) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c2 FROM rt1 WHERE (CAST((rt1.c0 IN ()) AS NUMERIC)) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE ((NOT (CAST((rt1.c0 IN ()) AS NUMERIC)))) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE (((CAST((rt1.c0 IN ()) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((UPPER(rt0.c0)) NOT NULL)) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((UPPER(rt0.c0)) NOT NULL)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((UPPER(rt0.c0)) NOT NULL)) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING COUNT(COUNT(COUNT(TOTAL(rt1.c0)))) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING (NOT (COUNT(COUNT(COUNT(TOTAL(rt1.c0)))))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING ((COUNT(COUNT(COUNT(TOTAL(rt1.c0))))) ISNULL);
SELECT rt1.c1, rt0.c0, rt1.c0 FROM rt1, rt0;
SELECT ALL rt1.c1, rt0.c0, rt1.c0 FROM rt1, rt0 WHERE (CAST(CASE rt0.c0  WHEN rt1.c0 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c0 ELSE rt1.c0 END AS REAL)) UNION ALL SELECT ALL rt1.c1, rt0.c0, rt1.c0 FROM rt1, rt0 WHERE ((NOT (CAST(CASE rt0.c0  WHEN rt1.c0 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c0 ELSE rt1.c0 END AS REAL)))) UNION ALL SELECT rt1.c1, rt0.c0, rt1.c0 FROM rt1, rt0 WHERE (((CAST(CASE rt0.c0  WHEN rt1.c0 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c0 ELSE rt1.c0 END AS REAL)) ISNULL));
SELECT rt1.c1, rt0.c0, rt1.c0 FROM rt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt1, rt0 WHERE (((((rt0.c0)OR(CAST(rt0.c2 AS BLOB))))AND(CAST(rt1.c2 AS INTEGER)))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt1, rt0 WHERE ((NOT (((((rt0.c0)OR(CAST(rt0.c2 AS BLOB))))AND(CAST(rt1.c2 AS INTEGER)))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt1, rt0 WHERE (((((((rt0.c0)OR(CAST(rt0.c2 AS BLOB))))AND(CAST(rt1.c2 AS INTEGER)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt1, rt0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 WHERE (CASE (('/T<MJFa9')IS(rt1.c1))  WHEN CAST(rt1.c2 AS TEXT) THEN ((rt1.c2)>=(rt1.c2)) ELSE ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)) END) GROUP BY rt1.c1, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (CASE (('/T<MJFa9')IS(rt1.c1))  WHEN CAST(rt1.c2 AS TEXT) THEN ((rt1.c2)>=(rt1.c2)) ELSE ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)) END))) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM rt1 WHERE (((CASE (('/T<MJFa9')IS(rt1.c1))  WHEN CAST(rt1.c2 AS TEXT) THEN ((rt1.c2)>=(rt1.c2)) ELSE ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)) END) ISNULL)) GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt0.c2 FROM rt0, rt1 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, rt1 GROUP BY rt0.c2 HAVING GROUP_CONCAT(SUM(COUNT(*))) UNION ALL SELECT ALL rt0.c2 FROM rt0, rt1 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(SUM(COUNT(*))))) UNION ALL SELECT rt0.c2 FROM rt0, rt1 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(SUM(COUNT(*)))) ISNULL);
SELECT rt0.c0, rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt1.c1 FROM rt0, rt1;
SELECT ALL rt0.c0, rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt1.c1 FROM rt0, rt1 WHERE (((((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c1))) BETWEEN (rt0.c0) AND (CAST(rt0.c2 AS REAL)))) UNION ALL SELECT rt0.c0, rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt1.c1 FROM rt0, rt1 WHERE ((NOT (((((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c1))) BETWEEN (rt0.c0) AND (CAST(rt0.c2 AS REAL)))))) UNION ALL SELECT rt0.c0, rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt1.c1 FROM rt0, rt1 WHERE (((((((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c1))) BETWEEN (rt0.c0) AND (CAST(rt0.c2 AS REAL)))) ISNULL));
SELECT rt0.c0, rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt1.c1 FROM rt0, rt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END) BETWEEN (((rt0.c2) IS TRUE)) AND (((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END) BETWEEN (((rt0.c2) IS TRUE)) AND (((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE (((((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END) BETWEEN (((rt0.c2) IS TRUE)) AND (((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END) ISNULL)) GROUP BY rt1.c1, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END) ISNULL)))) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM rt1 WHERE (((((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END) ISNULL)) ISNULL)) GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING CAST(GROUP_CONCAT(COUNT(*)) AS INTEGER) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (CAST(GROUP_CONCAT(COUNT(*)) AS INTEGER))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((CAST(GROUP_CONCAT(COUNT(*)) AS INTEGER)) ISNULL);
SELECT ALL rt0.c1 FROM rt1 FULL OUTER JOIN rt0 ON (NOT (((rt1.c0) BETWEEN (rt1.c2) AND (rt0.c1))));
SELECT rt0.c1 FROM rt1 FULL OUTER JOIN rt0 ON (NOT (((rt1.c0) BETWEEN (rt1.c2) AND (rt0.c1)))) WHERE (load_extension(rt0.c0) COLLATE RTRIM) UNION ALL SELECT rt0.c1 FROM rt1 FULL OUTER JOIN rt0 ON (NOT (((rt1.c0) BETWEEN (rt1.c2) AND (rt0.c1)))) WHERE ((NOT (load_extension(rt0.c0) COLLATE RTRIM))) UNION ALL SELECT rt0.c1 FROM rt1 FULL OUTER JOIN rt0 ON (NOT (((rt1.c0) BETWEEN (rt1.c2) AND (rt0.c1)))) WHERE (((load_extension(rt0.c0) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (CAST(((rt1.c1) ISNULL) AS BLOB)) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (CAST(((rt1.c1) ISNULL) AS BLOB)))) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (((CAST(((rt1.c1) ISNULL) AS BLOB)) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT rt0.c2, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c0;
SELECT rt0.c2, rt1.c0 FROM rt0, rt1 WHERE (((rt0.c0 COLLATE NOCASE) NOT BETWEEN (CAST(NULL AS INTEGER)) AND (rt1.c2))) GROUP BY rt0.c2, rt1.c0 UNION SELECT rt0.c2, rt1.c0 FROM rt0, rt1 WHERE ((NOT (((rt0.c0 COLLATE NOCASE) NOT BETWEEN (CAST(NULL AS INTEGER)) AND (rt1.c2))))) GROUP BY rt0.c2, rt1.c0 UNION SELECT rt0.c2, rt1.c0 FROM rt0, rt1 WHERE (((((rt0.c0 COLLATE NOCASE) NOT BETWEEN (CAST(NULL AS INTEGER)) AND (rt1.c2))) ISNULL)) GROUP BY rt0.c2, rt1.c0;
SELECT rt0.c2, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c0;
SELECT ALL rt1.c2 FROM rt0 CROSS JOIN rt1 ON ((((rt0.c1)-(rt0.c1)))>(CASE WHEN rt0.c2 THEN rt1.c0 END)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt0 CROSS JOIN rt1 ON ((((rt0.c1)-(rt0.c1)))>(CASE WHEN rt0.c2 THEN rt1.c0 END)) GROUP BY rt1.c2 HAVING rt0.c1 UNION ALL SELECT ALL rt1.c2 FROM rt0 CROSS JOIN rt1 ON ((((rt0.c1)-(rt0.c1)))>(CASE WHEN rt0.c2 THEN rt1.c0 END)) GROUP BY rt1.c2 HAVING (NOT (rt0.c1)) UNION ALL SELECT rt1.c2 FROM rt0 CROSS JOIN rt1 ON ((((rt0.c1)-(rt0.c1)))>(CASE WHEN rt0.c2 THEN rt1.c0 END)) GROUP BY rt1.c2 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt1.c2 FROM rt0 CROSS JOIN rt1 ON ((((rt0.c1)-(rt0.c1)))>(CASE WHEN rt0.c2 THEN rt1.c0 END)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt0 CROSS JOIN rt1 ON ((((rt0.c1)-(rt0.c1)))>(CASE WHEN rt0.c2 THEN rt1.c0 END)) GROUP BY rt1.c2 HAVING rt0.c1 UNION ALL SELECT ALL rt1.c2 FROM rt0 CROSS JOIN rt1 ON ((((rt0.c1)-(rt0.c1)))>(CASE WHEN rt0.c2 THEN rt1.c0 END)) GROUP BY rt1.c2 HAVING (NOT (rt0.c1)) UNION ALL SELECT rt1.c2 FROM rt0 CROSS JOIN rt1 ON ((((rt0.c1)-(rt0.c1)))>(CASE WHEN rt0.c2 THEN rt1.c0 END)) GROUP BY rt1.c2 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt1.c2 FROM rt0 CROSS JOIN rt1 ON ((((rt0.c1)-(rt0.c1)))>(CASE WHEN rt0.c2 THEN rt1.c0 END)) GROUP BY rt1.c2;
SELECT rt0.c0 FROM rt1, rt0;
SELECT rt0.c0 FROM rt1, rt0 WHERE (((((rt1.c1)<<(rt1.c2)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c1 END))) UNION ALL SELECT rt0.c0 FROM rt1, rt0 WHERE ((NOT (((((rt1.c1)<<(rt1.c2)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c1 END))))) UNION ALL SELECT ALL rt0.c0 FROM rt1, rt0 WHERE (((((((rt1.c1)<<(rt1.c2)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c1 END))) ISNULL));
SELECT rt0.c0 FROM rt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE (CASE rt1.c1 COLLATE BINARY  WHEN ((((rt1.c1)OR(rt1.c2)))OR(rt1.c1)) THEN ((-1.973686509E9) NOT BETWEEN (rt1.c1) AND (rt1.c1)) ELSE LTRIM(rt1.c0, rt1.c2) END) GROUP BY rt1.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (CASE rt1.c1 COLLATE BINARY  WHEN ((((rt1.c1)OR(rt1.c2)))OR(rt1.c1)) THEN ((-1.973686509E9) NOT BETWEEN (rt1.c1) AND (rt1.c1)) ELSE LTRIM(rt1.c0, rt1.c2) END))) GROUP BY rt1.c2, rt1.c1 UNION SELECT rt1.c2, rt1.c1 FROM rt1 WHERE (((CASE rt1.c1 COLLATE BINARY  WHEN ((((rt1.c1)OR(rt1.c2)))OR(rt1.c1)) THEN ((-1.973686509E9) NOT BETWEEN (rt1.c1) AND (rt1.c1)) ELSE LTRIM(rt1.c0, rt1.c2) END) ISNULL)) GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c0 FROM rt1 RIGHT OUTER JOIN rt0 ON (((((((rt0.c0)AND(rt1.c2)))OR(rt0.c1))))!=(((((rt0.c0))>=((rt1.c1)))))) GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 RIGHT OUTER JOIN rt0 ON (((((((rt0.c0)AND(rt1.c2)))OR(rt0.c1))))!=(((((rt0.c0))>=((rt1.c1)))))) GROUP BY rt1.c0 HAVING CAST(((((GROUP_CONCAT(rt0.c1))OR(TOTAL(rt0.c0))))AND(AVG(MAX(SUM(rt0.c1))))) AS INTEGER) UNION ALL SELECT ALL rt1.c0 FROM rt1 RIGHT OUTER JOIN rt0 ON (((((((rt0.c0)AND(rt1.c2)))OR(rt0.c1))))!=(((((rt0.c0))>=((rt1.c1)))))) GROUP BY rt1.c0 HAVING (NOT (CAST(((((GROUP_CONCAT(rt0.c1))OR(TOTAL(rt0.c0))))AND(AVG(MAX(SUM(rt0.c1))))) AS INTEGER))) UNION ALL SELECT ALL rt1.c0 FROM rt1 RIGHT OUTER JOIN rt0 ON (((((((rt0.c0)AND(rt1.c2)))OR(rt0.c1))))<>(((((rt0.c0))>=((rt1.c1)))))) GROUP BY rt1.c0 HAVING ((CAST(((((GROUP_CONCAT(rt0.c1))OR(TOTAL(rt0.c0))))AND(AVG(MAX(SUM(rt0.c1))))) AS INTEGER)) ISNULL);
SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON rt0.c2 COLLATE RTRIM;
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON rt0.c2 COLLATE RTRIM WHERE (((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c1)))AND(rt1.c1))) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c2 END) AND (((rt1.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) UNION ALL SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON rt0.c2 COLLATE RTRIM WHERE ((NOT (((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c1)))AND(rt1.c1))) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c2 END) AND (((rt1.c0) BETWEEN (rt0.c1) AND (rt0.c2))))))) UNION ALL SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON rt0.c2 COLLATE RTRIM WHERE (((((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c1)))AND(rt1.c1))) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c2 END) AND (((rt1.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL));
SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON rt0.c2 COLLATE RTRIM;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN rt1 ON ((((UNLIKELY(rt0.c1))OR(rt0.c0)))OR((NOT (rt1.c0))));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN rt1 ON ((((UNLIKELY(rt0.c1))OR(rt0.c0)))OR((NOT (rt1.c0)))) WHERE (145636004) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN rt1 ON ((((UNLIKELY(rt0.c1))OR(rt0.c0)))OR((NOT (rt1.c0)))) WHERE ((NOT (145636004))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN rt1 ON ((((UNLIKELY(rt0.c1))OR(rt0.c0)))OR((NOT (rt1.c0)))) WHERE (((145636004) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN rt1 ON ((((UNLIKELY(rt0.c1))OR(rt0.c0)))OR((NOT (rt1.c0))));
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (CASE ((rt1.c2) IS TRUE)  WHEN UPPER(DISTINCT rt1.c0) THEN ((rt1.c1)-(NULL)) ELSE ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)) END) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (CASE ((rt1.c2) IS TRUE)  WHEN UPPER(DISTINCT rt1.c0) THEN ((rt1.c1)-(NULL)) ELSE ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)) END))) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (((CASE ((rt1.c2) IS TRUE)  WHEN UPPER(DISTINCT rt1.c0) THEN ((rt1.c1)-(NULL)) ELSE ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)) END) ISNULL)) GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(rt0.c1))GLOB((AVG(rt0.c0) IN ()))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((COUNT(rt0.c1))GLOB((AVG(rt0.c0) IN ()))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((COUNT(rt0.c1))GLOB((AVG(rt0.c0) IN ())))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(rt0.c1))GLOB((AVG(rt0.c0) IN ()))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((COUNT(rt0.c1))GLOB((AVG(rt0.c0) IN ()))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((COUNT(rt0.c1))GLOB((AVG(rt0.c0) IN ())))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1;
SELECT rt1.c1, rt1.c2 FROM rt1 WHERE (rt1.c2) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (rt1.c2))) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 WHERE (((rt1.c2) ISNULL));
SELECT ALL rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c1 FROM rt1 WHERE (COALESCE(rt1.c2 COLLATE NOCASE, 0.5090596889997294 COLLATE RTRIM)) UNION SELECT DISTINCT rt1.c1 FROM rt1 WHERE ((NOT (COALESCE(rt1.c2 COLLATE NOCASE, 0.5090596889997294 COLLATE RTRIM)))) UNION SELECT DISTINCT rt1.c1 FROM rt1 WHERE (((COALESCE(rt1.c2 COLLATE NOCASE, 0.5090596889997294 COLLATE RTRIM)) ISNULL));
SELECT DISTINCT rt1.c1 FROM rt1;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE (((CAST(x'' AS BLOB))<<((((rt1.c0, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c1)) AND ((rt1.c0, rt1.c2, rt1.c2)))))) GROUP BY rt1.c1, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (((CAST(x'' AS BLOB))<<((((rt1.c0, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c1)) AND ((rt1.c0, rt1.c2, rt1.c2)))))))) GROUP BY rt1.c1, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE (((((CAST(x'' AS BLOB))<<((((rt1.c0, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c1)) AND ((rt1.c0, rt1.c2, rt1.c2)))))) ISNULL)) GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING rt0.c0 UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING rt0.c0 UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt1.c2, rt1.c1, rt1.c0, rt0.c0 FROM rt1, rt0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0, rt0.c0 FROM rt1, rt0 WHERE (0X198b4692) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0, rt0.c0 FROM rt1, rt0 WHERE ((NOT (0X198b4692))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0, rt0.c0 FROM rt1, rt0 WHERE (((0X198b4692) ISNULL));
SELECT rt1.c2, rt1.c1, rt1.c0, rt0.c0 FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0 WHERE (((CASE WHEN rt0.c2 THEN '0.9625597331526281' ELSE rt1.c2 END)>=(rt1.c2 COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((NOT (((CASE WHEN rt0.c2 THEN '0.9625597331526281' ELSE rt1.c2 END)>=(rt1.c2 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE (((((CASE WHEN rt0.c2 THEN '0.9625597331526281' ELSE rt1.c2 END)>=(rt1.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM rt1, rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c1, x'', 0X119e70b4))<=((rt0.c0, rt0.c2, rt0.c0))) IN ())) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c1, x'', 0X119e70b4))<=((rt0.c0, rt0.c2, rt0.c0))) IN ())))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c1, x'', 0x119e70b4))<=((rt0.c0, rt0.c2, rt0.c0))) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt1.c1, rt1.c0, rt0.c2, rt1.c2, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c1, rt1.c0, rt0.c2, rt1.c2, rt0.c1;
SELECT ALL rt1.c1, rt1.c0, rt0.c2, rt1.c2, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c1, rt1.c0, rt0.c2, rt1.c2, rt0.c1 HAVING GROUP_CONCAT('2071795540') UNION ALL SELECT ALL rt1.c1, rt1.c0, rt0.c2, rt1.c2, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c1, rt1.c0, rt0.c2, rt1.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT('2071795540'))) UNION ALL SELECT rt1.c1, rt1.c0, rt0.c2, rt1.c2, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c1, rt1.c0, rt0.c2, rt1.c2, rt0.c1 HAVING ((GROUP_CONCAT('2071795540')) ISNULL);
SELECT ALL rt1.c1, rt1.c0, rt0.c2, rt1.c2, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c1, rt1.c0, rt0.c2, rt1.c2, rt0.c1;
SELECT ALL rt1.c1, rt1.c0, rt0.c2, rt1.c2, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c1, rt1.c0, rt0.c2, rt1.c2, rt0.c1 HAVING GROUP_CONCAT('2071795540') UNION ALL SELECT ALL rt1.c1, rt1.c0, rt0.c2, rt1.c2, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c1, rt1.c0, rt0.c2, rt1.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT('2071795540'))) UNION ALL SELECT rt1.c1, rt1.c0, rt0.c2, rt1.c2, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c1, rt1.c0, rt0.c2, rt1.c2, rt0.c1 HAVING ((GROUP_CONCAT('2071795540')) ISNULL);
SELECT ALL rt1.c1, rt1.c0, rt0.c2, rt1.c2, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c1, rt1.c0, rt0.c2, rt1.c2, rt0.c1;
SELECT ALL * FROM rt0, rt1;
SELECT ALL * FROM rt0, rt1 WHERE (((TOTAL_CHANGES()) NOT NULL)) UNION ALL SELECT * FROM rt0, rt1 WHERE ((NOT (((TOTAL_CHANGES()) NOT NULL)))) UNION ALL SELECT * FROM rt0, rt1 WHERE (((((TOTAL_CHANGES()) NOT NULL)) ISNULL));
SELECT ALL * FROM rt0, rt1;
SELECT DISTINCT rt0.c2, rt0.c0, rt1.c0 FROM rt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt1.c0 FROM rt1, rt0 WHERE (((((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))OR((0.8340913888151771 IN ()))))OR('-1327168700'))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt1.c0 FROM rt1, rt0 WHERE ((NOT (((((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))OR((0.8340913888151771 IN ()))))OR('-1327168700'))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt1.c0 FROM rt1, rt0 WHERE (((((((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))OR((0.8340913888151771 IN ()))))OR('-1327168700'))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt1.c0 FROM rt1, rt0;
SELECT ALL rt1.c1, rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c1, rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0;
SELECT ALL rt1.c1, rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0 FROM rt0, rt1 WHERE (rt0.c0) GROUP BY rt1.c1, rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0 UNION SELECT rt1.c1, rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0 FROM rt0, rt1 WHERE ((NOT (rt0.c0))) GROUP BY rt1.c1, rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0 FROM rt0, rt1 WHERE (((rt0.c0) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0;
SELECT ALL rt1.c1, rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c1, rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt1, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING MIN(rt0.c1) COLLATE NOCASE UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MIN(rt0.c1) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MIN(rt0.c1) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt1, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING MIN(rt0.c1) COLLATE NOCASE UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MIN(rt0.c1) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MIN(rt0.c1) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt1, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c2))<((rt0.c0))))<(0.3885044805249773))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c2))<((rt0.c0))))<(0.3885044805249773))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((((rt0.c2))<((rt0.c0))))<(0.3885044805249773))) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1 WHERE ((((((rt1.c0)OR(x'')))OR(rt1.c0)) IN ())) UNION SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT ((((((rt1.c0)OR(x'')))OR(rt1.c0)) IN ())))) UNION SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1 WHERE ((((((((rt1.c0)OR(x'')))OR(rt1.c0)) IN ())) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (NULLIF(DISTINCT rt0.c2, rt0.c1) COLLATE BINARY) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (NULLIF(DISTINCT rt0.c2, rt0.c1) COLLATE BINARY))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((NULLIF(DISTINCT rt0.c2, rt0.c1) COLLATE BINARY) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1 FROM rt1, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt1, rt0 GROUP BY rt0.c1 HAVING AVG(SUM(SUM(rt1.c2))) UNION ALL SELECT rt0.c1 FROM rt1, rt0 GROUP BY rt0.c1 HAVING (NOT (AVG(SUM(SUM(rt1.c2))))) UNION ALL SELECT ALL rt0.c1 FROM rt1, rt0 GROUP BY rt0.c1 HAVING ((AVG(SUM(SUM(rt1.c2)))) ISNULL);
SELECT rt1.c0, rt1.c1, rt1.c2, rt0.c1 FROM rt1 NATURAL JOIN rt0;
SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt0.c1 FROM rt1 NATURAL JOIN rt0 WHERE (((('FALSE'))<((CASE WHEN rt0.c0 THEN rt0.c0 END)))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt0.c1 FROM rt1 NATURAL JOIN rt0 WHERE ((NOT (((('FALSE'))<((CASE WHEN rt0.c0 THEN rt0.c0 END)))))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt0.c1 FROM rt1 NATURAL JOIN rt0 WHERE (((((('FALSE'))<((CASE WHEN rt0.c0 THEN rt0.c0 END)))) ISNULL));
SELECT rt1.c0, rt1.c1, rt1.c2, rt0.c1 FROM rt1 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c2)||(((rt0.c0)*(rt0.c1))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2)||(((rt0.c0)*(rt0.c1))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c2)||(((rt0.c0)*(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)!=(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE BINARY)!=(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c0 COLLATE BINARY)!=(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c2 HAVING GROUP_CONCAT(((AVG(rt1.c0))|(rt0.c1))) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c2 HAVING (NOT (GROUP_CONCAT(((AVG(rt1.c0))|(rt0.c1))))) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c2 HAVING ((GROUP_CONCAT(((AVG(rt1.c0))|(rt0.c1)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) AS NUMERIC)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) AS NUMERIC)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) AS NUMERIC)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE ((((('({[/NA')AND('!')))OR((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))))) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT ((((('({[/NA')AND('!')))OR((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))))))) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE ((((((('({[/NA')AND('!')))OR((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1;
SELECT ALL rt1.c0, rt1.c1 FROM rt0 INNER JOIN rt1 ON (((+ (rt0.c0)))&(CASE WHEN rt1.c2 THEN 0.3000543771416988 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c0 END)) GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt0 INNER JOIN rt1 ON (((+ (rt0.c0)))&(CASE WHEN rt1.c2 THEN 0.3000543771416988 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c0 END)) WHERE (((rt0.c1) NOTNULL) COLLATE NOCASE) GROUP BY rt1.c0, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c1 FROM rt0 INNER JOIN rt1 ON (((+ (rt0.c0)))&(CASE WHEN rt1.c2 THEN 0.3000543771416988 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c0 END)) WHERE ((NOT (((rt0.c1) NOTNULL) COLLATE NOCASE))) GROUP BY rt1.c0, rt1.c1 UNION SELECT rt1.c0, rt1.c1 FROM rt0 INNER JOIN rt1 ON (((+ (rt0.c0)))&(CASE WHEN rt1.c2 THEN 0.3000543771416988 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c0 END)) WHERE (((((rt0.c1) NOTNULL) COLLATE NOCASE) ISNULL)) GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM rt0 INNER JOIN rt1 ON (((+ (rt0.c0)))&(CASE WHEN rt1.c2 THEN 0.3000543771416988 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c0 END)) GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING UNICODE(GROUP_CONCAT(MAX(rt0.c1))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (UNICODE(GROUP_CONCAT(MAX(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((UNICODE(GROUP_CONCAT(MAX(rt0.c1)))) ISNULL);
SELECT ALL * FROM rt1, rt0;
SELECT * FROM rt1, rt0 WHERE (CASE x'748553a6'  WHEN (rt0.c0 IN ()) THEN 0.8935050845078866 END) UNION ALL SELECT * FROM rt1, rt0 WHERE ((NOT (CASE x'748553a6'  WHEN (rt0.c0 IN ()) THEN 0.8935050845078866 END))) UNION ALL SELECT * FROM rt1, rt0 WHERE (((CASE x'748553a6'  WHEN (rt0.c0 IN ()) THEN 0.8935050845078866 END) ISNULL));
SELECT ALL * FROM rt1, rt0;
SELECT DISTINCT rt0.c0, rt1.c0, rt0.c2, rt1.c1, rt0.c1 FROM rt1 FULL OUTER JOIN rt0 ON (((((0x48b9308 IN ()))AND(CAST(rt1.c0 AS REAL))))OR(rt1.c1 COLLATE BINARY));
SELECT DISTINCT rt0.c0, rt1.c0, rt0.c2, rt1.c1, rt0.c1 FROM rt1 FULL OUTER JOIN rt0 ON (((((0x48b9308 IN ()))AND(CAST(rt1.c0 AS REAL))))OR(rt1.c1 COLLATE BINARY)) WHERE (((rt1.c2) IS FALSE) COLLATE BINARY) UNION SELECT DISTINCT rt0.c0, rt1.c0, rt0.c2, rt1.c1, rt0.c1 FROM rt1 FULL OUTER JOIN rt0 ON (((((0x48b9308 IN ()))AND(CAST(rt1.c0 AS REAL))))OR(rt1.c1 COLLATE BINARY)) WHERE ((NOT (((rt1.c2) IS FALSE) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c0, rt1.c0, rt0.c2, rt1.c1, rt0.c1 FROM rt1 FULL OUTER JOIN rt0 ON (((((0X48b9308 IN ()))AND(CAST(rt1.c0 AS REAL))))OR(rt1.c1 COLLATE BINARY)) WHERE (((((rt1.c2) IS FALSE) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c0, rt1.c0, rt0.c2, rt1.c1, rt0.c1 FROM rt1 FULL OUTER JOIN rt0 ON (((((0x48b9308 IN ()))AND(CAST(rt1.c0 AS REAL))))OR(rt1.c1 COLLATE BINARY));
SELECT rt1.c2, rt0.c1, rt1.c0, rt1.c1, rt0.c0, rt0.c2 FROM rt1 FULL OUTER JOIN rt0 ON ((((rt1.c0)<<(rt0.c2))) NOTNULL) GROUP BY rt1.c2, rt0.c1, rt1.c0, rt1.c1, rt0.c0, rt0.c2;
SELECT ALL rt1.c2, rt0.c1, rt1.c0, rt1.c1, rt0.c0, rt0.c2 FROM rt1 FULL OUTER JOIN rt0 ON ((((rt1.c0)<<(rt0.c2))) NOTNULL) WHERE ((((rt1.c2)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((rt0.c1)IS(rt1.c1)))))) GROUP BY rt1.c2, rt0.c1, rt1.c0, rt1.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt1.c2, rt0.c1, rt1.c0, rt1.c1, rt0.c0, rt0.c2 FROM rt1 FULL OUTER JOIN rt0 ON ((((rt1.c0)<<(rt0.c2))) NOTNULL) WHERE ((NOT ((((rt1.c2)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((rt0.c1)IS(rt1.c1)))))))) GROUP BY rt1.c2, rt0.c1, rt1.c0, rt1.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt1.c2, rt0.c1, rt1.c0, rt1.c1, rt0.c0, rt0.c2 FROM rt1 FULL OUTER JOIN rt0 ON ((((rt1.c0)<<(rt0.c2))) NOTNULL) WHERE ((((((rt1.c2)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((rt0.c1)IS(rt1.c1)))))) ISNULL)) GROUP BY rt1.c2, rt0.c1, rt1.c0, rt1.c1, rt0.c0, rt0.c2;
SELECT rt1.c2, rt0.c1, rt1.c0, rt1.c1, rt0.c0, rt0.c2 FROM rt1 FULL OUTER JOIN rt0 ON ((((rt1.c0)<<(rt0.c2))) NOTNULL) GROUP BY rt1.c2, rt0.c1, rt1.c0, rt1.c1, rt0.c0, rt0.c2;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((rt1.c2)||('5{> \ri8闬')) UNION ALL SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (((rt1.c2)||('5{> \ri8闬')))) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((((rt1.c2)||('5{> \ri8闬'))) ISNULL);
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((rt1.c2)||('5{> \ri8闬')) UNION ALL SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (((rt1.c2)||('5{> \ri8闬')))) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((((rt1.c2)||('5{> \ri8闬'))) ISNULL);
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT TOTAL(((rt1.c1 COLLATE BINARY)<(((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1))))) FROM rt0, rt1 ORDER BY (((rt0.c2)) BETWEEN (((~ (rt0.c1)))) AND (((rt1.c1 IN ())))) DESC, (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))))<((NULL)))  NULLS LAST;
SELECT ALL * FROM rt1 NOT INDEXED;
SELECT * FROM rt1 WHERE (CASE (rt1.c0 IN ())  WHEN ((925324884) NOTNULL) THEN ((rt1.c2)!=(rt1.c0)) WHEN CAST(rt1.c1 AS NUMERIC) THEN ((rt1.c2) NOTNULL) WHEN rt1.c2 COLLATE RTRIM THEN rt1.c0 COLLATE RTRIM ELSE (rt1.c2 IN ()) END) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (CASE (rt1.c0 IN ())  WHEN ((925324884) NOTNULL) THEN ((rt1.c2)!=(rt1.c0)) WHEN CAST(rt1.c1 AS NUMERIC) THEN ((rt1.c2) NOTNULL) WHEN rt1.c2 COLLATE RTRIM THEN rt1.c0 COLLATE RTRIM ELSE (rt1.c2 IN ()) END))) UNION ALL SELECT ALL * FROM rt1 WHERE (((CASE (rt1.c0 IN ())  WHEN ((925324884) NOTNULL) THEN ((rt1.c2)!=(rt1.c0)) WHEN CAST(rt1.c1 AS NUMERIC) THEN ((rt1.c2) NOTNULL) WHEN rt1.c2 COLLATE RTRIM THEN rt1.c0 COLLATE RTRIM ELSE (rt1.c2 IN ()) END) ISNULL));
SELECT ALL * FROM rt1 NOT INDEXED;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN rt1 ON (((rt0.c1))<=((((rt0.c0) NOT NULL))));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN rt1 ON (((rt0.c1))<=((((rt0.c0) NOT NULL)))) WHERE (rt1.c0 COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN rt1 ON (((rt0.c1))<=((((rt0.c0) NOT NULL)))) WHERE ((NOT (rt1.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN rt1 ON (((rt0.c1))<=((((rt0.c0) NOT NULL)))) WHERE (((rt1.c0 COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN rt1 ON (((rt0.c1))<=((((rt0.c0) NOT NULL))));
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (ABS(DISTINCT ((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (ABS(DISTINCT ((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((ABS(DISTINCT ((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING load_extension((NOT (GROUP_CONCAT(COUNT(MIN(rt1.c1))))), MAX(TOTAL('黒eI>J0''#!'))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (NOT (load_extension((NOT (GROUP_CONCAT(COUNT(MIN(rt1.c1))))), MAX(TOTAL('黒eI>J0''#!'))))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING ((load_extension((NOT (GROUP_CONCAT(COUNT(MIN(rt1.c1))))), MAX(TOTAL('黒eI>J0''#!')))) ISNULL);
SELECT ALL * FROM rt1, rt0;
SELECT * FROM rt1, rt0 WHERE (((((rt0.c2, x'', rt0.c2))==((rt0.c1, rt0.c0, rt0.c2))) IN ())) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE ((NOT (((((rt0.c2, x'', rt0.c2))=((rt0.c1, rt0.c0, rt0.c2))) IN ())))) UNION ALL SELECT * FROM rt1, rt0 WHERE (((((((rt0.c2, x'', rt0.c2))=((rt0.c1, rt0.c0, rt0.c2))) IN ())) ISNULL));
SELECT ALL * FROM rt1, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (ABS(rt0.c0)) AND ((rt0.c2 IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (ABS(rt0.c0)) AND ((rt0.c2 IN ())))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (ABS(rt0.c0)) AND ((rt0.c2 IN ())))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((((((rt1.c2)*(rt1.c0))))=((NULL)))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT ((((((rt1.c2)*(rt1.c0))))==((NULL)))))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((((((((rt1.c2)*(rt1.c0))))=((NULL)))) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c1;
SELECT ALL rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c1 HAVING AVG(AVG(GROUP_CONCAT(AVG(GROUP_CONCAT(COUNT(rt1.c1)))))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c1 HAVING (NOT (AVG(AVG(GROUP_CONCAT(AVG(GROUP_CONCAT(COUNT(rt1.c1)))))))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c1 HAVING ((AVG(AVG(GROUP_CONCAT(AVG(GROUP_CONCAT(COUNT(rt1.c1))))))) ISNULL);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON '?cj廋J%J*n';
SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON '?cj廋J%J*n' WHERE (CASE (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((x'')))  WHEN 0.9823086931274578 COLLATE RTRIM THEN rt1.c2 COLLATE BINARY WHEN (- (rt1.c2)) THEN (NOT (rt1.c2)) WHEN (((rt0.c2))<>((rt1.c0))) THEN rt0.c1 COLLATE RTRIM ELSE ((rt1.c0)<(rt0.c2)) END) UNION ALL SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON '?cj廋J%J*n' WHERE ((NOT (CASE (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((x'')))  WHEN 0.9823086931274578 COLLATE RTRIM THEN rt1.c2 COLLATE BINARY WHEN (- (rt1.c2)) THEN (NOT (rt1.c2)) WHEN (((rt0.c2))<>((rt1.c0))) THEN rt0.c1 COLLATE RTRIM ELSE ((rt1.c0)<(rt0.c2)) END))) UNION ALL SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON '?cj廋J%J*n' WHERE (((CASE (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((x'')))  WHEN 0.9823086931274578 COLLATE RTRIM THEN rt1.c2 COLLATE BINARY WHEN (- (rt1.c2)) THEN (NOT (rt1.c2)) WHEN (((rt0.c2))<>((rt1.c0))) THEN rt0.c1 COLLATE RTRIM ELSE ((rt1.c0)<(rt0.c2)) END) ISNULL));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON '?cj廋J%J*n';
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt1.c0 FROM rt1 CROSS JOIN rt0 ON CASE WHEN ((rt0.c0)LIKE(rt0.c2)) THEN CASE rt0.c0  WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c0 END WHEN ((rt0.c2)IS NOT(rt0.c1)) THEN ((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((rt1.c0) IS TRUE) THEN x'' COLLATE BINARY ELSE LIKELY(rt0.c2) END GROUP BY rt0.c1, rt0.c0, rt0.c2, rt1.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, rt1.c0 FROM rt1 CROSS JOIN rt0 ON CASE WHEN ((rt0.c0)LIKE(rt0.c2)) THEN CASE rt0.c0  WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c0 END WHEN ((rt0.c2)IS NOT(rt0.c1)) THEN ((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((rt1.c0) IS TRUE) THEN x'' COLLATE BINARY ELSE LIKELY(rt0.c2) END WHERE (rt0.c2) GROUP BY rt0.c1, rt0.c0, rt0.c2, rt1.c0 UNION SELECT rt0.c1, rt0.c0, rt0.c2, rt1.c0 FROM rt1 CROSS JOIN rt0 ON CASE WHEN ((rt0.c0)LIKE(rt0.c2)) THEN CASE rt0.c0  WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c0 END WHEN ((rt0.c2)IS NOT(rt0.c1)) THEN ((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((rt1.c0) IS TRUE) THEN x'' COLLATE BINARY ELSE LIKELY(rt0.c2) END WHERE ((NOT (rt0.c2))) GROUP BY rt0.c1, rt0.c0, rt0.c2, rt1.c0 UNION SELECT rt0.c1, rt0.c0, rt0.c2, rt1.c0 FROM rt1 CROSS JOIN rt0 ON CASE WHEN ((rt0.c0)LIKE(rt0.c2)) THEN CASE rt0.c0  WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c0 END WHEN ((rt0.c2)IS NOT(rt0.c1)) THEN ((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((rt1.c0) IS TRUE) THEN x'' COLLATE BINARY ELSE LIKELY(rt0.c2) END WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, rt1.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt1.c0 FROM rt1 CROSS JOIN rt0 ON CASE WHEN ((rt0.c0)LIKE(rt0.c2)) THEN CASE rt0.c0  WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c0 END WHEN ((rt0.c2)IS NOT(rt0.c1)) THEN ((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((rt1.c0) IS TRUE) THEN x'' COLLATE BINARY ELSE LIKELY(rt0.c2) END GROUP BY rt0.c1, rt0.c0, rt0.c2, rt1.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING GROUP_CONCAT(((rt0.c1)IS(GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(((rt0.c1)IS(GROUP_CONCAT(rt0.c2)))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(((rt0.c1)IS(GROUP_CONCAT(rt0.c2))))) ISNULL);
SELECT ALL rt1.c2, rt0.c0, rt1.c1, rt0.c2, rt1.c0, rt0.c1 FROM rt0, rt1;
SELECT rt1.c2, rt0.c0, rt1.c1, rt0.c2, rt1.c0, rt0.c1 FROM rt0, rt1 WHERE (rt1.c0) UNION ALL SELECT rt1.c2, rt0.c0, rt1.c1, rt0.c2, rt1.c0, rt0.c1 FROM rt0, rt1 WHERE ((NOT (rt1.c0))) UNION ALL SELECT ALL rt1.c2, rt0.c0, rt1.c1, rt0.c2, rt1.c0, rt0.c1 FROM rt0, rt1 WHERE (((rt1.c0) ISNULL));
SELECT ALL rt1.c2, rt0.c0, rt1.c1, rt0.c2, rt1.c0, rt0.c1 FROM rt0, rt1;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN (((((rt1.c1))!=((rt0.c1))))) AND (((NOT (rt1.c0)))));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN (((((rt1.c1))!=((rt0.c1))))) AND (((NOT (rt1.c0))))) WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN (((((rt1.c1))!=((rt0.c1))))) AND (((NOT (rt1.c0))))) WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN (((((rt1.c1))!=((rt0.c1))))) AND (((NOT (rt1.c0))))) WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN (((((rt1.c1))!=((rt0.c1))))) AND (((NOT (rt1.c0)))));
SELECT rt1.c2, rt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c0 FROM rt0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c0;
SELECT rt1.c2, rt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c0 FROM rt0 NATURAL JOIN rt1 WHERE (0.9502307986014356) GROUP BY rt1.c2, rt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c0 UNION SELECT ALL rt1.c2, rt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c0 FROM rt0 NATURAL JOIN rt1 WHERE ((NOT (0.9502307986014356))) GROUP BY rt1.c2, rt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c0 UNION SELECT rt1.c2, rt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c0 FROM rt0 NATURAL JOIN rt1 WHERE (((0.9502307986014356) ISNULL)) GROUP BY rt1.c2, rt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c0;
SELECT rt1.c2, rt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c0 FROM rt0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((COUNT(*)) BETWEEN (AVG(MIN(rt1.c0))) AND (SUM(MIN(rt1.c0)))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (((COUNT(*)) BETWEEN (AVG(MIN(rt1.c0))) AND (SUM(MIN(rt1.c0)))))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((((COUNT(*)) BETWEEN (AVG(MIN(rt1.c0))) AND (SUM(MIN(rt1.c0))))) ISNULL);
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2))) IS TRUE)) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2))) IS TRUE)))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2))) IS TRUE)) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt0.c2, rt0.c1, rt1.c1, rt1.c2, rt0.c0 FROM rt0, rt1;
SELECT DISTINCT rt0.c2, rt0.c1, rt1.c1, rt1.c2, rt0.c0 FROM rt0, rt1 WHERE (CAST('0.6905242561281046' AS NUMERIC) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt1.c1, rt1.c2, rt0.c0 FROM rt0, rt1 WHERE ((NOT (CAST('0.6905242561281046' AS NUMERIC) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt1.c1, rt1.c2, rt0.c0 FROM rt0, rt1 WHERE (((CAST('0.6905242561281046' AS NUMERIC) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt1.c1, rt1.c2, rt0.c0 FROM rt0, rt1;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (CAST(rt0.c2 COLLATE BINARY AS REAL)) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST(rt0.c2 COLLATE BINARY AS REAL)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(rt0.c2 COLLATE BINARY AS REAL)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt1.c0, rt0.c2, rt1.c1 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c2, rt1.c1;
SELECT ALL rt1.c0, rt0.c2, rt1.c1 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c2, rt1.c1 HAVING ((COUNT(GROUP_CONCAT(MAX(MAX(COUNT(rt0.c2))))))%(MIN(COUNT(*)))) UNION ALL SELECT ALL rt1.c0, rt0.c2, rt1.c1 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c2, rt1.c1 HAVING (NOT (((COUNT(GROUP_CONCAT(MAX(MAX(COUNT(rt0.c2))))))%(MIN(COUNT(*)))))) UNION ALL SELECT ALL rt1.c0, rt0.c2, rt1.c1 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c2, rt1.c1 HAVING ((((COUNT(GROUP_CONCAT(MAX(MAX(COUNT(rt0.c2))))))%(MIN(COUNT(*))))) ISNULL);
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (((((((rt1.c1)AND(rt1.c1)))OR(rt1.c1))) IS TRUE)) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (((((((rt1.c1)AND(rt1.c1)))OR(rt1.c1))) IS TRUE)))) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c1))) IS TRUE)) ISNULL));
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT rt0.c0, rt1.c2, rt1.c0, rt0.c1, rt1.c1, rt0.c2 FROM rt0, rt1;
SELECT DISTINCT rt0.c0, rt1.c2, rt1.c0, rt0.c1, rt1.c1, rt0.c2 FROM rt0, rt1 WHERE (CASE CASE rt0.c1  WHEN NULL THEN '0.6194034678578604' END  WHEN ((rt0.c2)/(rt0.c0)) THEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt0.c2 END ELSE rt0.c2 END) UNION SELECT DISTINCT rt0.c0, rt1.c2, rt1.c0, rt0.c1, rt1.c1, rt0.c2 FROM rt0, rt1 WHERE ((NOT (CASE CASE rt0.c1  WHEN NULL THEN '0.6194034678578604' END  WHEN ((rt0.c2)/(rt0.c0)) THEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt0.c2 END ELSE rt0.c2 END))) UNION SELECT DISTINCT rt0.c0, rt1.c2, rt1.c0, rt0.c1, rt1.c1, rt0.c2 FROM rt0, rt1 WHERE (((CASE CASE rt0.c1  WHEN NULL THEN '0.6194034678578604' END  WHEN ((rt0.c2)/(rt0.c0)) THEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt0.c2 END ELSE rt0.c2 END) ISNULL));
SELECT DISTINCT rt0.c0, rt1.c2, rt1.c0, rt0.c1, rt1.c1, rt0.c2 FROM rt0, rt1;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (-2131051776) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (-2131051776))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((-2131051776) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING TRIM(DISTINCT ((AVG(rt0.c2)) NOTNULL), AVG(x'')) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (TRIM(DISTINCT ((AVG(rt0.c2)) NOTNULL), AVG(x'')))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((TRIM(DISTINCT ((AVG(rt0.c2)) NOTNULL), AVG(x''))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING TRIM(DISTINCT ((AVG(rt0.c2)) NOTNULL), AVG(x'')) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (TRIM(DISTINCT ((AVG(rt0.c2)) NOTNULL), AVG(x'')))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((TRIM(DISTINCT ((AVG(rt0.c2)) NOTNULL), AVG(x''))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT * FROM rt0 NATURAL JOIN rt1;
SELECT ALL * FROM rt0 NATURAL JOIN rt1 WHERE (((((((rt0.c1)OR(x'')))OR(rt1.c1)))AND(((rt1.c1) NOT NULL)))) UNION ALL SELECT ALL * FROM rt0 NATURAL JOIN rt1 WHERE ((NOT (((((((rt0.c1)OR(x'')))OR(rt1.c1)))AND(((rt1.c1) NOT NULL)))))) UNION ALL SELECT ALL * FROM rt0 NATURAL JOIN rt1 WHERE (((((((((rt0.c1)OR(x'')))OR(rt1.c1)))AND(((rt1.c1) NOT NULL)))) ISNULL));
SELECT * FROM rt0 NATURAL JOIN rt1;
SELECT DISTINCT rt0.c0, rt1.c1, rt0.c1, rt1.c0, rt0.c2 FROM rt0 NOT INDEXED, rt1;
SELECT DISTINCT rt0.c0, rt1.c1, rt0.c1, rt1.c0, rt0.c2 FROM rt0, rt1 WHERE (((rt0.c0 COLLATE BINARY) ISNULL)) UNION SELECT DISTINCT rt0.c0, rt1.c1, rt0.c1, rt1.c0, rt0.c2 FROM rt0, rt1 WHERE ((NOT (((rt0.c0 COLLATE BINARY) ISNULL)))) UNION SELECT DISTINCT rt0.c0, rt1.c1, rt0.c1, rt1.c0, rt0.c2 FROM rt0, rt1 WHERE (((((rt0.c0 COLLATE BINARY) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c0, rt1.c1, rt0.c1, rt1.c0, rt0.c2 FROM rt0 NOT INDEXED, rt1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1 WHERE (((((rt1.c1)||(rt1.c2))) BETWEEN (((rt1.c1)>(rt1.c0))) AND (((rt1.c2)>=(rt1.c0))))) GROUP BY rt1.c0, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (((((rt1.c1)||(rt1.c2))) BETWEEN (((rt1.c1)>(rt1.c0))) AND (((rt1.c2)>=(rt1.c0))))))) GROUP BY rt1.c0, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE (((((((rt1.c1)||(rt1.c2))) BETWEEN (((rt1.c1)>(rt1.c0))) AND (((rt1.c2)>=(rt1.c0))))) ISNULL)) GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c1, rt1.c0, rt0.c2, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0, rt0.c2, rt0.c1;
SELECT ALL rt1.c2, rt1.c1, rt1.c0, rt0.c2, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0, rt0.c2, rt0.c1 HAVING (((MAX(rt0.c2))) BETWEEN ((COUNT(COUNT(*)))) AND ((SUM(rt1.c2)))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0, rt0.c2, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0, rt0.c2, rt0.c1 HAVING (NOT ((((MAX(rt0.c2))) BETWEEN ((COUNT(COUNT(*)))) AND ((SUM(rt1.c2)))))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0, rt0.c2, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0, rt0.c2, rt0.c1 HAVING (((((MAX(rt0.c2))) BETWEEN ((COUNT(COUNT(*)))) AND ((SUM(rt1.c2))))) ISNULL);
SELECT TOTAL(((((rt1.c0)-(rt1.c1))) ISNULL)) FROM rt1;
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE ((((CAST(rt1.c1 AS TEXT)))=((((rt1.c2)OR(rt1.c1)))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT ((((CAST(rt1.c1 AS TEXT)))==((((rt1.c2)OR(rt1.c1)))))))) UNION ALL SELECT * FROM rt1 WHERE ((((((CAST(rt1.c1 AS TEXT)))=((((rt1.c2)OR(rt1.c1)))))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt0.c1, rt0.c0, rt1.c2, rt0.c2, rt1.c0 FROM rt0, rt1;
SELECT DISTINCT rt0.c1, rt0.c0, rt1.c2, rt0.c2, rt1.c0 FROM rt0, rt1 WHERE (CAST(rt1.c1 COLLATE RTRIM AS NUMERIC)) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt1.c2, rt0.c2, rt1.c0 FROM rt0, rt1 WHERE ((NOT (CAST(rt1.c1 COLLATE RTRIM AS NUMERIC)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt1.c2, rt0.c2, rt1.c0 FROM rt0, rt1 WHERE (((CAST(rt1.c1 COLLATE RTRIM AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt1.c2, rt0.c2, rt1.c0 FROM rt0, rt1;
SELECT rt0.c0, rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c0, rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt1.c1;
SELECT rt0.c0, rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt1.c1 FROM rt1, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2))) NOTNULL)) GROUP BY rt0.c0, rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt1.c1 UNION SELECT rt0.c0, rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt1.c1 FROM rt1, rt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2))) NOTNULL)))) GROUP BY rt0.c0, rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt1.c1 UNION SELECT rt0.c0, rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt1.c1 FROM rt1, rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2))) NOTNULL)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt1.c1;
SELECT rt0.c0, rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c0, rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt1.c1;
SELECT ALL rt0.c1, rt1.c1, rt0.c2, rt1.c2 FROM rt0 LEFT OUTER JOIN rt1 ON (SQLITE_COMPILEOPTION_USED(rt1.c0) IN ()) GROUP BY rt0.c1, rt1.c1, rt0.c2, rt1.c2;
SELECT ALL rt0.c1, rt1.c1, rt0.c2, rt1.c2 FROM rt0 LEFT OUTER JOIN rt1 ON (SQLITE_COMPILEOPTION_USED(rt1.c0) IN ()) GROUP BY rt0.c1, rt1.c1, rt0.c2, rt1.c2 HAVING (((rt0.c1))<=(((- (MIN(TOTAL(rt0.c0))))))) UNION ALL SELECT ALL rt0.c1, rt1.c1, rt0.c2, rt1.c2 FROM rt0 LEFT OUTER JOIN rt1 ON (SQLITE_COMPILEOPTION_USED(rt1.c0) IN ()) GROUP BY rt0.c1, rt1.c1, rt0.c2, rt1.c2 HAVING (NOT ((((rt0.c1))<=(((- (MIN(TOTAL(rt0.c0))))))))) UNION ALL SELECT rt0.c1, rt1.c1, rt0.c2, rt1.c2 FROM rt0 LEFT OUTER JOIN rt1 ON (SQLITE_COMPILEOPTION_USED(rt1.c0) IN ()) GROUP BY rt0.c1, rt1.c1, rt0.c2, rt1.c2 HAVING (((((rt0.c1))<=(((- (MIN(TOTAL(rt0.c0)))))))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt1, rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt1, rt0 WHERE ((NOT (((((((((rt0.c1)AND(rt1.c2)))AND(rt1.c0)))OR(rt0.c0)))OR(rt1.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt1, rt0 WHERE ((NOT ((NOT (((((((((rt0.c1)AND(rt1.c2)))AND(rt1.c0)))OR(rt0.c0)))OR(rt1.c0))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt1, rt0 WHERE ((((NOT (((((((((rt0.c1)AND(rt1.c2)))AND(rt1.c0)))OR(rt0.c0)))OR(rt1.c0))))) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((- (NULL))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((- (NULL))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((- (NULL))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM rt1 WHERE (((((rt1.c0)IS(rt1.c1)))IS(-1.208590645E9))) GROUP BY rt1.c1, rt1.c2 UNION SELECT rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (((((rt1.c0)IS(rt1.c1)))IS(-1.208590645E9))))) GROUP BY rt1.c1, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE (((((((rt1.c0)IS(rt1.c1)))IS(-1.208590645E9))) ISNULL)) GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING ((AVG(COUNT(x''))) NOT BETWEEN (MAX(rt1.c0)) AND (((rt1.c1)>=(MIN(rt1.c2))))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING (NOT (((AVG(COUNT(x''))) NOT BETWEEN (MAX(rt1.c0)) AND (((rt1.c1)>=(MIN(rt1.c2))))))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING ((((AVG(COUNT(x''))) NOT BETWEEN (MAX(rt1.c0)) AND (((rt1.c1)>=(MIN(rt1.c2)))))) ISNULL);
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE (((NULL) NOT NULL)) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((NULL) NOT NULL)))) UNION ALL SELECT * FROM rt1 WHERE (((((NULL) NOT NULL)) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1, rt0;
SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1, rt0 WHERE ((((((+ (rt1.c1)))OR(rt0.c0)))OR(CAST(rt1.c0 AS INTEGER)))) UNION SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1, rt0 WHERE ((NOT ((((((+ (rt1.c1)))OR(rt0.c0)))OR(CAST(rt1.c0 AS INTEGER)))))) UNION SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1, rt0 WHERE ((((((((+ (rt1.c1)))OR(rt0.c0)))OR(CAST(rt1.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1, rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (CASE WHEN x'' THEN rt0.c1 COLLATE NOCASE END) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN x'' THEN rt0.c1 COLLATE NOCASE END))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE WHEN x'' THEN rt0.c1 COLLATE NOCASE END) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c1, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c0, rt0.c1, rt1.c0;
SELECT ALL rt0.c0, rt0.c1, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c0, rt0.c1, rt1.c0 HAVING (((((((rt1.c1)) BETWEEN ((MIN(rt1.c1))) AND ((GROUP_CONCAT(rt0.c0)))))AND(CAST(rt1.c1 AS INTEGER))))AND((((rt0.c0)) NOT BETWEEN ((MAX(SUM(SUM(COUNT(*)))))) AND ((COUNT(rt0.c0)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c0, rt0.c1, rt1.c0 HAVING (NOT ((((((((rt1.c1)) BETWEEN ((MIN(rt1.c1))) AND ((GROUP_CONCAT(rt0.c0)))))AND(CAST(rt1.c1 AS INTEGER))))AND((((rt0.c0)) NOT BETWEEN ((MAX(SUM(SUM(COUNT(*)))))) AND ((COUNT(rt0.c0)))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c0, rt0.c1, rt1.c0 HAVING (((((((((rt1.c1)) BETWEEN ((MIN(rt1.c1))) AND ((GROUP_CONCAT(rt0.c0)))))AND(CAST(rt1.c1 AS INTEGER))))AND((((rt0.c0)) NOT BETWEEN ((MAX(SUM(SUM(COUNT(*)))))) AND ((COUNT(rt0.c0))))))) ISNULL);
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((((NULL)) BETWEEN ((CAST(rt1.c1 AS NUMERIC))) AND ((((rt1.c1)>(rt1.c2)))))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT ((((NULL)) BETWEEN ((CAST(rt1.c1 AS NUMERIC))) AND ((((rt1.c1)>(rt1.c2)))))))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((((((NULL)) BETWEEN ((CAST(rt1.c1 AS NUMERIC))) AND ((((rt1.c1)>(rt1.c2)))))) ISNULL));
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT * FROM rt1 NATURAL JOIN rt0;
SELECT DISTINCT * FROM rt1 NATURAL JOIN rt0 WHERE (x'c7c3') UNION SELECT DISTINCT * FROM rt1 NATURAL JOIN rt0 WHERE ((NOT (x'c7c3'))) UNION SELECT DISTINCT * FROM rt1 NATURAL JOIN rt0 WHERE (((x'c7c3') ISNULL));
SELECT DISTINCT * FROM rt1 NATURAL JOIN rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((NULL) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (rt0.c1))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((NULL) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (rt0.c1))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((NULL) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (rt0.c1))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((COUNT(MAX(NULL)))|(TOTAL(rt1.c0))) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING (NOT (((COUNT(MAX(NULL)))|(TOTAL(rt1.c0))))) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((((COUNT(MAX(NULL)))|(TOTAL(rt1.c0)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (COALESCE(DISTINCT ((rt0.c0)&(rt0.c1)), '735535331')) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (COALESCE(DISTINCT ((rt0.c0)&(rt0.c1)), '735535331')))) UNION ALL SELECT * FROM rt0 WHERE (((COALESCE(DISTINCT ((rt0.c0)&(rt0.c1)), '735535331')) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt1.c2, rt1.c0, rt1.c1 FROM rt0, rt1;
SELECT DISTINCT rt0.c2, rt1.c2, rt1.c0, rt1.c1 FROM rt0, rt1 WHERE (0.6077818283491392) UNION SELECT DISTINCT rt0.c2, rt1.c2, rt1.c0, rt1.c1 FROM rt0, rt1 WHERE ((NOT (0.6077818283491392))) UNION SELECT DISTINCT rt0.c2, rt1.c2, rt1.c0, rt1.c1 FROM rt0, rt1 WHERE (((0.6077818283491392) ISNULL));
SELECT DISTINCT rt0.c2, rt1.c2, rt1.c0, rt1.c1 FROM rt0, rt1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((- (rt0.c2))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((- (rt0.c2))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((- (rt0.c2))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING (+ (((MAX(rt1.c1)) NOT NULL))) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING (NOT ((+ (((MAX(rt1.c1)) NOT NULL))))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING (((+ (((MAX(rt1.c1)) NOT NULL)))) ISNULL);
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING (+ (((MAX(rt1.c1)) NOT NULL))) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING (NOT ((+ (((MAX(rt1.c1)) NOT NULL))))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING (((+ (((MAX(rt1.c1)) NOT NULL)))) ISNULL);
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE ((~ (rt1.c2)) COLLATE NOCASE) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((~ (rt1.c2)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt1 WHERE ((((~ (rt1.c2)) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (CAST(CASE NULL  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END AS BLOB)) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST(CASE NULL  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END AS BLOB)))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST(CASE NULL  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt1 CROSS JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((COALESCE(DISTINCT rt1.c1, rt0.c2))) AND (((((rt0.c2, rt0.c2, rt1.c0))<>((rt1.c2, 'I^E2﵎巑9Ks', rt0.c0)))))) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt1 CROSS JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((COALESCE(DISTINCT rt1.c1, rt0.c2))) AND (((((rt0.c2, rt0.c2, rt1.c0))<>((rt1.c2, 'I^E2﵎巑9Ks', rt0.c0)))))) WHERE (CASE 0X6adfab3f  WHEN 0.6759649702931718 THEN ((rt1.c2) IS FALSE) END) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt1 CROSS JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((COALESCE(DISTINCT rt1.c1, rt0.c2))) AND (((((rt0.c2, rt0.c2, rt1.c0))<>((rt1.c2, 'I^E2﵎巑9Ks', rt0.c0)))))) WHERE ((NOT (CASE 0X6adfab3f  WHEN 0.6759649702931718 THEN ((rt1.c2) IS FALSE) END))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt1 CROSS JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((COALESCE(DISTINCT rt1.c1, rt0.c2))) AND (((((rt0.c2, rt0.c2, rt1.c0))!=((rt1.c2, 'I^E2﵎巑9Ks', rt0.c0)))))) WHERE (((CASE 0x6adfab3f  WHEN 0.6759649702931718 THEN ((rt1.c2) IS FALSE) END) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt1 CROSS JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((COALESCE(DISTINCT rt1.c1, rt0.c2))) AND (((((rt0.c2, rt0.c2, rt1.c0))<>((rt1.c2, 'I^E2﵎巑9Ks', rt0.c0)))))) GROUP BY rt0.c1;
SELECT rt1.c0, rt1.c2, rt0.c2, rt0.c1, rt1.c1 FROM rt0, rt1 GROUP BY rt1.c0, rt1.c2, rt0.c2, rt0.c1, rt1.c1;
SELECT rt1.c0, rt1.c2, rt0.c2, rt0.c1, rt1.c1 FROM rt0, rt1 GROUP BY rt1.c0, rt1.c2, rt0.c2, rt0.c1, rt1.c1 HAVING CASE ((((((((rt0.c0)AND(COUNT(rt0.c2))))AND(rt0.c1)))OR(-1625405811)))AND('\n\nG-7\84|'))  WHEN GROUP_CONCAT(SUM(rt0.c1)) THEN SUM(rt0.c1) END UNION ALL SELECT rt1.c0, rt1.c2, rt0.c2, rt0.c1, rt1.c1 FROM rt0 NOT INDEXED, rt1 GROUP BY rt1.c0, rt1.c2, rt0.c2, rt0.c1, rt1.c1 HAVING (NOT (CASE ((((((((rt0.c0)AND(COUNT(rt0.c2))))AND(rt0.c1)))OR(-1625405811)))AND('\n\nG-7\84|'))  WHEN GROUP_CONCAT(SUM(rt0.c1)) THEN SUM(rt0.c1) END)) UNION ALL SELECT rt1.c0, rt1.c2, rt0.c2, rt0.c1, rt1.c1 FROM rt0, rt1 GROUP BY rt1.c0, rt1.c2, rt0.c2, rt0.c1, rt1.c1 HAVING ((CASE ((((((((rt0.c0)AND(COUNT(rt0.c2))))AND(rt0.c1)))OR(-1625405811)))AND('\n\nG-7\84|'))  WHEN GROUP_CONCAT(SUM(rt0.c1)) THEN SUM(rt0.c1) END) ISNULL);
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (((rt1.c0) NOTNULL)) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((rt1.c0) NOTNULL)))) UNION ALL SELECT * FROM rt1 WHERE (((((rt1.c0) NOTNULL)) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt0.c0, rt0.c1, rt1.c0, rt0.c2 FROM rt1, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt1.c0, rt0.c2 FROM rt1, rt0 WHERE ((- (((NULL)&(rt0.c2))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt1.c0, rt0.c2 FROM rt1, rt0 WHERE ((NOT ((- (((NULL)&(rt0.c2))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt1.c0, rt0.c2 FROM rt1, rt0 WHERE ((((- (((NULL)&(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt1.c0, rt0.c2 FROM rt1, rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (json_remove(((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)), ((rt0.c2)GLOB(rt0.c0)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (json_remove(((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)), ((rt0.c2)GLOB(rt0.c0)))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((json_remove(((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)), ((rt0.c2)GLOB(rt0.c0)))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((rt0.c0)) BETWEEN ((CASE AVG(rt0.c0)  WHEN TOTAL(rt0.c0) THEN GROUP_CONCAT(MIN(AVG(AVG(SUM('MW'))))) END)) AND ((MAX(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((((rt0.c0)) BETWEEN ((CASE AVG(rt0.c0)  WHEN TOTAL(rt0.c0) THEN GROUP_CONCAT(MIN(AVG(AVG(SUM('MW'))))) END)) AND ((MAX(rt0.c0)))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((((rt0.c0)) BETWEEN ((CASE AVG(rt0.c0)  WHEN TOTAL(rt0.c0) THEN GROUP_CONCAT(MIN(AVG(AVG(SUM('MW'))))) END)) AND ((MAX(rt0.c0))))) ISNULL);
SELECT rt1.c0, rt1.c2, rt0.c2 FROM rt1, rt0;
SELECT rt1.c0, rt1.c2, rt0.c2 FROM rt1, rt0 WHERE (((rt0.c2 COLLATE BINARY)>=((- (rt0.c1))))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt0.c2 FROM rt1, rt0 WHERE ((NOT (((rt0.c2 COLLATE BINARY)>=((- (rt0.c1))))))) UNION ALL SELECT rt1.c0, rt1.c2, rt0.c2 FROM rt1, rt0 WHERE (((((rt0.c2 COLLATE BINARY)>=((- (rt0.c1))))) ISNULL));
SELECT rt1.c0, rt1.c2, rt0.c2 FROM rt1, rt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (rt1.c2) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (rt1.c2))) UNION SELECT DISTINCT * FROM rt1 WHERE (((rt1.c2) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt0.c2, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c2, rt1.c0;
SELECT rt0.c2, rt1.c0 FROM rt1, rt0 WHERE (SQLITE_SOURCE_ID() COLLATE NOCASE) GROUP BY rt0.c2, rt1.c0 UNION SELECT ALL rt0.c2, rt1.c0 FROM rt1, rt0 WHERE ((NOT (SQLITE_SOURCE_ID() COLLATE NOCASE))) GROUP BY rt0.c2, rt1.c0 UNION SELECT ALL rt0.c2, rt1.c0 FROM rt1, rt0 WHERE (((SQLITE_SOURCE_ID() COLLATE NOCASE) ISNULL)) GROUP BY rt0.c2, rt1.c0;
SELECT rt0.c2, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c2, rt1.c0;
SELECT rt0.c2, rt1.c2, rt0.c1, rt1.c1, rt0.c0, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c2, rt0.c1, rt1.c1, rt0.c0, rt1.c0;
SELECT ALL rt0.c2, rt1.c2, rt0.c1, rt1.c1, rt0.c0, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c2, rt0.c1, rt1.c1, rt0.c0, rt1.c0 HAVING (+ (((rt1.c1)%(MIN(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt1.c2, rt0.c1, rt1.c1, rt0.c0, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c2, rt0.c1, rt1.c1, rt0.c0, rt1.c0 HAVING (NOT ((+ (((rt1.c1)%(MIN(rt0.c1))))))) UNION ALL SELECT rt0.c2, rt1.c2, rt0.c1, rt1.c1, rt0.c0, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c2, rt0.c1, rt1.c1, rt0.c0, rt1.c0 HAVING (((+ (((rt1.c1)%(MIN(rt0.c1)))))) ISNULL);
SELECT rt0.c2, rt1.c2, rt0.c1, rt1.c1, rt0.c0, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c2, rt0.c1, rt1.c1, rt0.c0, rt1.c0;
SELECT ALL rt0.c2, rt1.c2, rt0.c1, rt1.c1, rt0.c0, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c2, rt0.c1, rt1.c1, rt0.c0, rt1.c0 HAVING (+ (((rt1.c1)%(MIN(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt1.c2, rt0.c1, rt1.c1, rt0.c0, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c2, rt0.c1, rt1.c1, rt0.c0, rt1.c0 HAVING (NOT ((+ (((rt1.c1)%(MIN(rt0.c1))))))) UNION ALL SELECT rt0.c2, rt1.c2, rt0.c1, rt1.c1, rt0.c0, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c2, rt0.c1, rt1.c1, rt0.c0, rt1.c0 HAVING (((+ (((rt1.c1)%(MIN(rt0.c1)))))) ISNULL);
SELECT rt0.c2, rt1.c2, rt0.c1, rt1.c1, rt0.c0, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c2, rt0.c1, rt1.c1, rt0.c0, rt1.c0;
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE (((((((((MAX(rt1.c1, rt1.c1))AND(((1.181568263E9) NOT BETWEEN (-1589883265) AND (rt1.c2)))))AND(UPPER(rt1.c1))))AND('-288262946')))OR(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (((((((((MAX(rt1.c1, rt1.c1))AND(((1.181568263E9) NOT BETWEEN (-1589883265) AND (rt1.c2)))))AND(UPPER(rt1.c1))))AND('-288262946')))OR(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((((((((MAX(rt1.c1, rt1.c1))AND(((1.181568263E9) NOT BETWEEN (-1589883265) AND (rt1.c2)))))AND(UPPER(rt1.c1))))AND('-288262946')))OR(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c1)>(rt1.c1)))AND(rt1.c0)))AND(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((((((rt1.c1)>(rt1.c1)))AND(rt1.c0)))AND(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1))))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((((rt1.c1)>(rt1.c1)))AND(rt1.c0)))AND(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((rt0.c0)LIKE(x''))) IS FALSE)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0)LIKE(x''))) IS FALSE)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((((rt0.c0)LIKE(x''))) IS FALSE)) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING TOTAL(CAST(SUM(rt1.c1) AS INTEGER)) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (TOTAL(CAST(SUM(rt1.c1) AS INTEGER)))) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((TOTAL(CAST(SUM(rt1.c1) AS INTEGER))) ISNULL);
SELECT rt1.c0, rt1.c1, rt0.c1, rt0.c0, rt1.c2 FROM rt0, rt1;
SELECT rt1.c0, rt1.c1, rt0.c1, rt0.c0, rt1.c2 FROM rt0, rt1 WHERE (CASE ((rt0.c0) ISNULL)  WHEN CASE rt1.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c1 END THEN rt0.c1 COLLATE NOCASE WHEN (((rt1.c2, rt1.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, rt1.c0, rt0.c0)) AND ((rt0.c2, rt1.c2, rt0.c0))) THEN CASE rt0.c2  WHEN rt1.c1 THEN rt1.c2 END WHEN ((rt1.c2) NOT NULL) THEN rt0.c0 WHEN rt0.c2 COLLATE NOCASE THEN (- ('ꭥ.n')) WHEN rt1.c2 THEN ((31065085)IS NOT(rt1.c1)) END) UNION ALL SELECT rt1.c0, rt1.c1, rt0.c1, rt0.c0, rt1.c2 FROM rt0, rt1 WHERE ((NOT (CASE ((rt0.c0) ISNULL)  WHEN CASE rt1.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c1 END THEN rt0.c1 COLLATE NOCASE WHEN (((rt1.c2, rt1.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, rt1.c0, rt0.c0)) AND ((rt0.c2, rt1.c2, rt0.c0))) THEN CASE rt0.c2  WHEN rt1.c1 THEN rt1.c2 END WHEN ((rt1.c2) NOT NULL) THEN rt0.c0 WHEN rt0.c2 COLLATE NOCASE THEN (- ('ꭥ.n')) WHEN rt1.c2 THEN ((31065085)IS NOT(rt1.c1)) END))) UNION ALL SELECT rt1.c0, rt1.c1, rt0.c1, rt0.c0, rt1.c2 FROM rt0, rt1 WHERE (((CASE ((rt0.c0) ISNULL)  WHEN CASE rt1.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c1 END THEN rt0.c1 COLLATE NOCASE WHEN (((rt1.c2, rt1.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, rt1.c0, rt0.c0)) AND ((rt0.c2, rt1.c2, rt0.c0))) THEN CASE rt0.c2  WHEN rt1.c1 THEN rt1.c2 END WHEN ((rt1.c2) NOT NULL) THEN rt0.c0 WHEN rt0.c2 COLLATE NOCASE THEN (- ('ꭥ.n')) WHEN rt1.c2 THEN ((31065085)IS NOT(rt1.c1)) END) ISNULL));
SELECT rt1.c0, rt1.c1, rt0.c1, rt0.c0, rt1.c2 FROM rt0, rt1;
SELECT DISTINCT rt0.c1 FROM rt1 FULL OUTER JOIN rt0 ON ('#zw' IN (rt0.c1, CASE rt1.c0  WHEN rt0.c2 THEN NULL WHEN rt0.c1 THEN rt1.c1 WHEN rt0.c1 THEN rt1.c2 ELSE NULL END));
SELECT DISTINCT rt0.c1 FROM rt1 FULL OUTER JOIN rt0 ON ('#zw' IN (rt0.c1, CASE rt1.c0  WHEN rt0.c2 THEN NULL WHEN rt0.c1 THEN rt1.c1 WHEN rt0.c1 THEN rt1.c2 ELSE NULL END)) WHERE (CAST(TRIM(rt1.c1) AS BLOB)) UNION SELECT DISTINCT rt0.c1 FROM rt1 FULL OUTER JOIN rt0 ON ('#zw' IN (rt0.c1, CASE rt1.c0  WHEN rt0.c2 THEN NULL WHEN rt0.c1 THEN rt1.c1 WHEN rt0.c1 THEN rt1.c2 ELSE NULL END)) WHERE ((NOT (CAST(TRIM(rt1.c1) AS BLOB)))) UNION SELECT DISTINCT rt0.c1 FROM rt1 FULL OUTER JOIN rt0 ON ('#zw' IN (rt0.c1, CASE rt1.c0  WHEN rt0.c2 THEN NULL WHEN rt0.c1 THEN rt1.c1 WHEN rt0.c1 THEN rt1.c2 ELSE NULL END)) WHERE (((CAST(TRIM(rt1.c1) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt1 FULL OUTER JOIN rt0 ON ('#zw' IN (rt0.c1, CASE rt1.c0  WHEN rt0.c2 THEN NULL WHEN rt0.c1 THEN rt1.c1 WHEN rt0.c1 THEN rt1.c2 ELSE NULL END));
SELECT rt1.c0, rt0.c2, rt0.c1, rt0.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt1.c0, rt0.c2, rt0.c1, rt0.c0, rt1.c1;
SELECT ALL rt1.c0, rt0.c2, rt0.c1, rt0.c0, rt1.c1 FROM rt1, rt0 WHERE (((((rt0.c0) NOT NULL)) NOTNULL)) GROUP BY rt1.c0, rt0.c2, rt0.c1, rt0.c0, rt1.c1 UNION SELECT ALL rt1.c0, rt0.c2, rt0.c1, rt0.c0, rt1.c1 FROM rt1, rt0 WHERE ((NOT (((((rt0.c0) NOT NULL)) NOTNULL)))) GROUP BY rt1.c0, rt0.c2, rt0.c1, rt0.c0, rt1.c1 UNION SELECT ALL rt1.c0, rt0.c2, rt0.c1, rt0.c0, rt1.c1 FROM rt1, rt0 WHERE (((((((rt0.c0) NOT NULL)) NOTNULL)) ISNULL)) GROUP BY rt1.c0, rt0.c2, rt0.c1, rt0.c0, rt1.c1;
SELECT rt1.c0, rt0.c2, rt0.c1, rt0.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt1.c0, rt0.c2, rt0.c1, rt0.c0, rt1.c1;
SELECT ALL rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2 HAVING ((MIN(rt1.c2)) IS TRUE) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2 HAVING (NOT (((MIN(rt1.c2)) IS TRUE))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2 HAVING ((((MIN(rt1.c2)) IS TRUE)) ISNULL);
SELECT ALL rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2 HAVING ((MIN(rt1.c2)) IS TRUE) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2 HAVING (NOT (((MIN(rt1.c2)) IS TRUE))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2 HAVING ((((MIN(rt1.c2)) IS TRUE)) ISNULL);
SELECT ALL rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2;
SELECT rt1.c0 FROM rt1;
SELECT ALL rt1.c0 FROM rt1 WHERE (IFNULL(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)), MAX(rt1.c0, rt1.c2, rt1.c2, rt1.c0))) UNION ALL SELECT rt1.c0 FROM rt1 WHERE ((NOT (IFNULL(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)), MAX(rt1.c0, rt1.c2, rt1.c2, rt1.c0))))) UNION ALL SELECT rt1.c0 FROM rt1 WHERE (((IFNULL(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)), MAX(rt1.c0, rt1.c2, rt1.c2, rt1.c0))) ISNULL));
SELECT rt1.c0 FROM rt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c1;
SELECT ALL rt0.c1, rt1.c1 FROM rt0, rt1 WHERE (CASE WHEN ABS(rt0.c0) THEN CAST(rt0.c0 AS REAL) END) GROUP BY rt0.c1, rt1.c1 UNION SELECT rt0.c1, rt1.c1 FROM rt0, rt1 WHERE ((NOT (CASE WHEN ABS(rt0.c0) THEN CAST(rt0.c0 AS REAL) END))) GROUP BY rt0.c1, rt1.c1 UNION SELECT ALL rt0.c1, rt1.c1 FROM rt0, rt1 WHERE (((CASE WHEN ABS(rt0.c0) THEN CAST(rt0.c0 AS REAL) END) ISNULL)) GROUP BY rt0.c1, rt1.c1;
SELECT ALL rt0.c1, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c1;
SELECT rt0.c1, rt1.c0, rt0.c0, rt0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON CAST(((rt0.c2)GLOB(rt0.c1)) AS INTEGER) GROUP BY rt0.c1, rt1.c0, rt0.c0, rt0.c2;
SELECT rt0.c1, rt1.c0, rt0.c0, rt0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON CAST(((rt0.c2)GLOB(rt0.c1)) AS INTEGER) GROUP BY rt0.c1, rt1.c0, rt0.c0, rt0.c2 HAVING SUM(GROUP_CONCAT(COUNT(rt1.c1))) UNION ALL SELECT ALL rt0.c1, rt1.c0, rt0.c0, rt0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON CAST(((rt0.c2)GLOB(rt0.c1)) AS INTEGER) GROUP BY rt0.c1, rt1.c0, rt0.c0, rt0.c2 HAVING (NOT (SUM(GROUP_CONCAT(COUNT(rt1.c1))))) UNION ALL SELECT rt0.c1, rt1.c0, rt0.c0, rt0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON CAST(((rt0.c2)GLOB(rt0.c1)) AS INTEGER) GROUP BY rt0.c1, rt1.c0, rt0.c0, rt0.c2 HAVING ((SUM(GROUP_CONCAT(COUNT(rt1.c1)))) ISNULL);
SELECT ALL SUM((((((rt0.c0, rt0.c0, rt0.c0))>=((rt0.c0, rt0.c0, rt0.c1))))=(rt0.c2))) FROM rt0 ORDER BY (((rt0.c0)-(rt0.c1)) IN ())  NULLS LAST;
SELECT * FROM rt1, rt0;
SELECT * FROM rt1, rt0 WHERE ((((((rt1.c0))<((rt0.c2))))IS((rt1.c2 IN (rt1.c0, rt0.c0))))) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE ((NOT ((((((rt1.c0))<((rt0.c2))))IS((rt1.c2 IN (rt1.c0, rt0.c0))))))) UNION ALL SELECT * FROM rt1, rt0 WHERE ((((((((rt1.c0))<((rt0.c2))))IS((rt1.c2 IN (rt1.c0, rt0.c0))))) ISNULL));
SELECT * FROM rt1, rt0;
SELECT DISTINCT rt0.c0, rt1.c2, rt1.c0, rt0.c1, rt1.c1, rt0.c2 FROM rt1, rt0;
SELECT DISTINCT rt0.c0, rt1.c2, rt1.c0, rt0.c1, rt1.c1, rt0.c2 FROM rt1, rt0 WHERE (CASE CASE WHEN rt1.c0 THEN rt1.c1 END  WHEN (NOT (rt0.c1)) THEN ((rt0.c2) BETWEEN (rt1.c2) AND (rt0.c1)) ELSE TRIM(DISTINCT rt1.c1) END) UNION SELECT DISTINCT rt0.c0, rt1.c2, rt1.c0, rt0.c1, rt1.c1, rt0.c2 FROM rt1, rt0 WHERE ((NOT (CASE CASE WHEN rt1.c0 THEN rt1.c1 END  WHEN (NOT (rt0.c1)) THEN ((rt0.c2) BETWEEN (rt1.c2) AND (rt0.c1)) ELSE TRIM(DISTINCT rt1.c1) END))) UNION SELECT DISTINCT rt0.c0, rt1.c2, rt1.c0, rt0.c1, rt1.c1, rt0.c2 FROM rt1, rt0 WHERE (((CASE CASE WHEN rt1.c0 THEN rt1.c1 END  WHEN (NOT (rt0.c1)) THEN ((rt0.c2) BETWEEN (rt1.c2) AND (rt0.c1)) ELSE TRIM(DISTINCT rt1.c1) END) ISNULL));
SELECT DISTINCT rt0.c0, rt1.c2, rt1.c0, rt0.c1, rt1.c1, rt0.c2 FROM rt1, rt0;
SELECT rt1.c0, rt0.c2, rt0.c1, rt0.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN rt0 ON CAST('-1934528488' AS BLOB) GROUP BY rt1.c0, rt0.c2, rt0.c1, rt0.c0, rt1.c1;
SELECT ALL rt1.c0, rt0.c2, rt0.c1, rt0.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN rt0 ON CAST('-1934528488' AS BLOB) WHERE (rt1.c0) GROUP BY rt1.c0, rt0.c2, rt0.c1, rt0.c0, rt1.c1 UNION SELECT ALL rt1.c0, rt0.c2, rt0.c1, rt0.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN rt0 ON CAST('-1934528488' AS BLOB) WHERE ((NOT (rt1.c0))) GROUP BY rt1.c0, rt0.c2, rt0.c1, rt0.c0, rt1.c1 UNION SELECT rt1.c0, rt0.c2, rt0.c1, rt0.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN rt0 ON CAST('-1934528488' AS BLOB) WHERE (((rt1.c0) ISNULL)) GROUP BY rt1.c0, rt0.c2, rt0.c1, rt0.c0, rt1.c1;
SELECT rt1.c0, rt0.c2, rt0.c1, rt0.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN rt0 ON CAST('-1934528488' AS BLOB) GROUP BY rt1.c0, rt0.c2, rt0.c1, rt0.c0, rt1.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING GROUP_CONCAT(NULL) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT(NULL))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((GROUP_CONCAT(NULL)) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING GROUP_CONCAT(NULL) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT(NULL))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((GROUP_CONCAT(NULL)) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((- ((+ (-1.3271687E9))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((- ((+ (-1.3271687E9))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((- ((+ (-1.3271687E9))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0 INNER JOIN rt1 ON (NOT ((NOT (rt1.c2))));
SELECT DISTINCT * FROM rt0 INNER JOIN rt1 ON (NOT ((NOT (rt1.c2)))) WHERE ((rt0.c2 IN ((((rt0.c1))>=((rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN rt1 ON (NOT ((NOT (rt1.c2)))) WHERE ((NOT ((rt0.c2 IN ((((rt0.c1))>=((rt0.c0)))))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN rt1 ON (NOT ((NOT (rt1.c2)))) WHERE ((((rt0.c2 IN ((((rt0.c1))>=((rt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN rt1 ON (NOT ((NOT (rt1.c2))));
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE BINARY) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS INTEGER) COLLATE BINARY))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER) COLLATE BINARY) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING MIN(GROUP_CONCAT(rt0.c2)) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MIN(GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MIN(GROUP_CONCAT(rt0.c2))) ISNULL);
SELECT rt1.c2 FROM rt1;
SELECT ALL rt1.c2 FROM rt1 WHERE (((rt1.c0 COLLATE NOCASE) BETWEEN ((((('')OR(rt1.c0)))OR(rt1.c2))) AND (0xffffffffde728303))) UNION ALL SELECT rt1.c2 FROM rt1 WHERE ((NOT (((rt1.c0 COLLATE NOCASE) BETWEEN ((((('')OR(rt1.c0)))OR(rt1.c2))) AND (0xffffffffde728303))))) UNION ALL SELECT ALL rt1.c2 FROM rt1 WHERE (((((rt1.c0 COLLATE NOCASE) BETWEEN ((((('')OR(rt1.c0)))OR(rt1.c2))) AND (0xffffffffde728303))) ISNULL));
SELECT rt1.c2 FROM rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c2)OR(rt1.c2)), rt1.c0 COLLATE RTRIM, rt1.c1 COLLATE BINARY))<(((((rt1.c1))<=((rt1.c1))), ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c0)/(NULL)))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((((rt1.c2)OR(rt1.c2)), rt1.c0 COLLATE RTRIM, rt1.c1 COLLATE BINARY))<(((((rt1.c1))<=((rt1.c1))), ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c0)/(NULL)))))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((((rt1.c2)OR(rt1.c2)), rt1.c0 COLLATE RTRIM, rt1.c1 COLLATE BINARY))<(((((rt1.c1))<=((rt1.c1))), ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c0)/(NULL)))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING AVG((- (rt0.c2))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (AVG((- (rt0.c2))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((AVG((- (rt0.c2)))) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING AVG((- (rt0.c2))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (AVG((- (rt0.c2))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((AVG((- (rt0.c2)))) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((((-1.047115714E9) NOT BETWEEN (rt0.c2) AND (rt0.c1))))>=(((('OV1zid♹M') BETWEEN (rt0.c1) AND ('ruU*#}')))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((((-1.047115714E9) NOT BETWEEN (rt0.c2) AND (rt0.c1))))>=(((('OV1zid♹M') BETWEEN (rt0.c1) AND ('ruU*#}')))))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((((((-1.047115714E9) NOT BETWEEN (rt0.c2) AND (rt0.c1))))>=(((('OV1zid♹M') BETWEEN (rt0.c1) AND ('ruU*#}')))))) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0 WHERE (((((rt0.c1) NOT NULL)) BETWEEN ((((rt1.c2))>=((rt0.c0)))) AND (rt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((NOT (((((rt0.c1) NOT NULL)) BETWEEN ((((rt1.c2))>=((rt0.c0)))) AND (rt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE (((((((rt0.c1) NOT NULL)) BETWEEN ((((rt1.c2))>=((rt0.c0)))) AND (rt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM rt1, rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c1)LIKE(rt0.c1)))OR((~ (rt0.c0)))))AND(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((((rt0.c1)LIKE(rt0.c1)))OR((~ (rt0.c0)))))AND(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((rt0.c1)LIKE(rt0.c1)))OR((~ (rt0.c0)))))AND(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING GROUP_CONCAT(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN MIN(COUNT(*)) WHEN rt0.c0 THEN AVG(SUM(SUM(COUNT(rt0.c0)))) END) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN MIN(COUNT(*)) WHEN rt0.c0 THEN AVG(SUM(SUM(COUNT(rt0.c0)))) END))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN MIN(COUNT(*)) WHEN rt0.c0 THEN AVG(SUM(SUM(COUNT(rt0.c0)))) END)) ISNULL);
SELECT ALL * FROM rt1 LEFT OUTER JOIN rt0 ON CAST((NOT (rt0.c1)) AS BLOB);
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON CAST((NOT (rt0.c1)) AS BLOB) WHERE (CAST(rt1.c1 AS REAL) COLLATE BINARY) UNION ALL SELECT ALL * FROM rt1 LEFT OUTER JOIN rt0 ON CAST((NOT (rt0.c1)) AS BLOB) WHERE ((NOT (CAST(rt1.c1 AS REAL) COLLATE BINARY))) UNION ALL SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON CAST((NOT (rt0.c1)) AS BLOB) WHERE (((CAST(rt1.c1 AS REAL) COLLATE BINARY) ISNULL));
SELECT ALL * FROM rt1 LEFT OUTER JOIN rt0 ON CAST((NOT (rt0.c1)) AS BLOB);
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) ISNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) ISNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c2)))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 WHEN 0.272283112317556 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c2)))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 WHEN 0.272283112317556 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 NOT INDEXED WHERE ((((((((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c2)))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 WHEN 0.272283112317556 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING TOTAL(SUM(COUNT(SUM(AVG(rt1.c2))))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING (NOT (TOTAL(SUM(COUNT(SUM(AVG(rt1.c2))))))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING ((TOTAL(SUM(COUNT(SUM(AVG(rt1.c2)))))) ISNULL);
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE ((+ (((rt1.c2)||(rt1.c1))))) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((+ (((rt1.c2)||(rt1.c1))))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((((+ (((rt1.c2)||(rt1.c1))))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0, rt1;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0, rt1 WHERE ((((rt0.c1)<<(rt1.c0)) IN ())) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0, rt1 WHERE ((NOT ((((rt0.c1)<<(rt1.c0)) IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0, rt1 WHERE ((((((rt0.c1)<<(rt1.c0)) IN ())) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0, rt1;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE (((((rt1.c2)<=(x'')))<>(((rt1.c2) IS FALSE)))) GROUP BY rt1.c0, rt1.c1, rt1.c2 UNION SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (((((rt1.c2)<=(x'')))<>(((rt1.c2) IS FALSE)))))) GROUP BY rt1.c0, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE (((((((rt1.c2)<=(x'')))<>(((rt1.c2) IS FALSE)))) ISNULL)) GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ABS((((('e^~ι)GaL')OR(rt1.c0)))OR(MAX('_F톒惣')))) UNION ALL SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (NOT (ABS((((('e^~ι)GaL')OR(rt1.c0)))OR(MAX('_F톒惣')))))) UNION ALL SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((ABS((((('e^~ι)GaL')OR(rt1.c0)))OR(MAX('_F톒惣'))))) ISNULL);
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ABS((((('e^~ι)GaL')OR(rt1.c0)))OR(MAX('_F톒惣')))) UNION ALL SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (NOT (ABS((((('e^~ι)GaL')OR(rt1.c0)))OR(MAX('_F톒惣')))))) UNION ALL SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((ABS((((('e^~ι)GaL')OR(rt1.c0)))OR(MAX('_F톒惣'))))) ISNULL);
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c1, rt0.c0 FROM rt1 INNER JOIN rt0 ON IFNULL(DISTINCT ((rt1.c1)<(rt0.c1)), ((rt1.c2)||(rt0.c1)));
SELECT ALL rt1.c1, rt0.c0 FROM rt1 INNER JOIN rt0 ON IFNULL(DISTINCT ((rt1.c1)<(rt0.c1)), ((rt1.c2)||(rt0.c1))) WHERE ((NOT (((0.5982257419901277)+(0.9823086931274578))))) UNION ALL SELECT rt1.c1, rt0.c0 FROM rt1 INNER JOIN rt0 ON IFNULL(DISTINCT ((rt1.c1)<(rt0.c1)), ((rt1.c2)||(rt0.c1))) WHERE ((NOT ((NOT (((0.5982257419901277)+(0.9823086931274578))))))) UNION ALL SELECT ALL rt1.c1, rt0.c0 FROM rt1 INNER JOIN rt0 ON IFNULL(DISTINCT ((rt1.c1)<(rt0.c1)), ((rt1.c2)||(rt0.c1))) WHERE ((((NOT (((0.5982257419901277)+(0.9823086931274578))))) ISNULL));
SELECT ALL rt1.c1, rt0.c0 FROM rt1 INNER JOIN rt0 ON IFNULL(DISTINCT ((rt1.c1)<(rt0.c1)), ((rt1.c2)||(rt0.c1)));
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ('0.5982257419901277') UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ('0.5982257419901277'))) UNION SELECT DISTINCT * FROM rt1 WHERE ((('0.5982257419901277') ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE (CASE (~ (rt1.c1))  WHEN rt1.c1 COLLATE RTRIM THEN (rt1.c0 IN ()) WHEN ((rt1.c1)-(rt1.c1)) THEN (((rt1.c0, 0x70ee2346, rt1.c0)) BETWEEN ((rt1.c0, rt1.c1, rt1.c1)) AND ((rt1.c2, rt1.c2, 0.3759972077444028))) WHEN ((rt1.c1)OR(rt1.c1)) THEN (rt1.c2 IN ()) ELSE (((rt1.c1, rt1.c2, rt1.c1, rt1.c2, rt1.c1))=((rt1.c1, rt1.c0, rt1.c2, rt1.c1, rt1.c1))) END) GROUP BY rt1.c0, rt1.c2 UNION SELECT rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (CASE (~ (rt1.c1))  WHEN rt1.c1 COLLATE RTRIM THEN (rt1.c0 IN ()) WHEN ((rt1.c1)-(rt1.c1)) THEN (((rt1.c0, 0x70ee2346, rt1.c0)) BETWEEN ((rt1.c0, rt1.c1, rt1.c1)) AND ((rt1.c2, rt1.c2, 0.3759972077444028))) WHEN ((rt1.c1)OR(rt1.c1)) THEN (rt1.c2 IN ()) ELSE (((rt1.c1, rt1.c2, rt1.c1, rt1.c2, rt1.c1))==((rt1.c1, rt1.c0, rt1.c2, rt1.c1, rt1.c1))) END))) GROUP BY rt1.c0, rt1.c2 UNION SELECT rt1.c0, rt1.c2 FROM rt1 WHERE (((CASE (~ (rt1.c1))  WHEN rt1.c1 COLLATE RTRIM THEN (rt1.c0 IN ()) WHEN ((rt1.c1)-(rt1.c1)) THEN (((rt1.c0, 0X70ee2346, rt1.c0)) BETWEEN ((rt1.c0, rt1.c1, rt1.c1)) AND ((rt1.c2, rt1.c2, 0.3759972077444028))) WHEN ((rt1.c1)OR(rt1.c1)) THEN (rt1.c2 IN ()) ELSE (((rt1.c1, rt1.c2, rt1.c1, rt1.c2, rt1.c1))==((rt1.c1, rt1.c0, rt1.c2, rt1.c1, rt1.c1))) END) ISNULL)) GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING ((MIN(rt1.c0))>(NULL)) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING (NOT (((MIN(rt1.c0))>(NULL)))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING ((((MIN(rt1.c0))>(NULL))) ISNULL);
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING ((MIN(rt1.c0))>(NULL)) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING (NOT (((MIN(rt1.c0))>(NULL)))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING ((((MIN(rt1.c0))>(NULL))) ISNULL);
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (x'82ff') UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (x'82ff'))) UNION ALL SELECT ALL * FROM rt1 WHERE (((x'82ff') ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((rt1.c0) IS FALSE) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((rt1.c0) IS FALSE) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c0) IS FALSE) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING AVG(((rt1.c2) BETWEEN (rt1.c2) AND (TOTAL(MAX(MAX(COUNT(COUNT(*)))))))) UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (AVG(((rt1.c2) BETWEEN (rt1.c2) AND (TOTAL(MAX(MAX(COUNT(COUNT(*)))))))))) UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((AVG(((rt1.c2) BETWEEN (rt1.c2) AND (TOTAL(MAX(MAX(COUNT(COUNT(*))))))))) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((((x'a698') NOT BETWEEN (rt0.c2) AND (rt0.c1)))AND((('')<<(rt0.c2)))))OR(CAST(rt0.c0 AS INTEGER))))OR((((rt0.c0, rt0.c2, NULL))<=((rt0.c1, rt0.c2, rt0.c0))))))AND((((rt0.c1))=(('-1236814122')))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((((((((x'a698') NOT BETWEEN (rt0.c2) AND (rt0.c1)))AND((('')<<(rt0.c2)))))OR(CAST(rt0.c0 AS INTEGER))))OR((((rt0.c0, rt0.c2, NULL))<=((rt0.c1, rt0.c2, rt0.c0))))))AND((((rt0.c1))=(('-1236814122')))))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((((((x'a698') NOT BETWEEN (rt0.c2) AND (rt0.c1)))AND((('')<<(rt0.c2)))))OR(CAST(rt0.c0 AS INTEGER))))OR((((rt0.c0, rt0.c2, NULL))<=((rt0.c1, rt0.c2, rt0.c0))))))AND((((rt0.c1))=(('-1236814122')))))) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CAST(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)) AS REAL)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CAST(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)) AS REAL)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CAST(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((json_array_length(rt0.c2))<=(CAST(rt0.c1 AS REAL)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((json_array_length(rt0.c2))<=(CAST(rt0.c1 AS REAL)))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((((json_array_length(rt0.c2))<=(CAST(rt0.c1 AS REAL)))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt1.c2, rt1.c1, rt0.c0 FROM rt1 FULL OUTER JOIN rt0 ON NULL GROUP BY rt0.c1, rt1.c2, rt1.c1, rt0.c0;
SELECT rt0.c1, rt1.c2, rt1.c1, rt0.c0 FROM rt1 FULL OUTER JOIN rt0 ON NULL GROUP BY rt0.c1, rt1.c2, rt1.c1, rt0.c0 HAVING LAST_INSERT_ROWID() UNION ALL SELECT ALL rt0.c1, rt1.c2, rt1.c1, rt0.c0 FROM rt1 FULL OUTER JOIN rt0 ON NULL GROUP BY rt0.c1, rt1.c2, rt1.c1, rt0.c0 HAVING (NOT (LAST_INSERT_ROWID())) UNION ALL SELECT ALL rt0.c1, rt1.c2, rt1.c1, rt0.c0 FROM rt1 FULL OUTER JOIN rt0 ON NULL GROUP BY rt0.c1, rt1.c2, rt1.c1, rt0.c0 HAVING ((LAST_INSERT_ROWID()) ISNULL);
SELECT rt0.c1, rt1.c2, rt1.c1, rt0.c0 FROM rt1 FULL OUTER JOIN rt0 ON NULL GROUP BY rt0.c1, rt1.c2, rt1.c1, rt0.c0;
SELECT rt0.c1, rt1.c2, rt1.c1, rt0.c0 FROM rt1 FULL OUTER JOIN rt0 ON NULL GROUP BY rt0.c1, rt1.c2, rt1.c1, rt0.c0 HAVING LAST_INSERT_ROWID() UNION ALL SELECT ALL rt0.c1, rt1.c2, rt1.c1, rt0.c0 FROM rt1 FULL OUTER JOIN rt0 ON NULL GROUP BY rt0.c1, rt1.c2, rt1.c1, rt0.c0 HAVING (NOT (LAST_INSERT_ROWID())) UNION ALL SELECT ALL rt0.c1, rt1.c2, rt1.c1, rt0.c0 FROM rt1 FULL OUTER JOIN rt0 ON NULL GROUP BY rt0.c1, rt1.c2, rt1.c1, rt0.c0 HAVING ((LAST_INSERT_ROWID()) ISNULL);
SELECT rt0.c1, rt1.c2, rt1.c1, rt0.c0 FROM rt1 FULL OUTER JOIN rt0 ON NULL GROUP BY rt0.c1, rt1.c2, rt1.c1, rt0.c0;
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE ((+ (load_extension(rt1.c2)))) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((+ (load_extension(rt1.c2)))))) UNION ALL SELECT * FROM rt1 WHERE ((((+ (load_extension(rt1.c2)))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE (((rt1.c2)GLOB(rt1.c2)) COLLATE BINARY) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (((rt1.c2)GLOB(rt1.c2)) COLLATE BINARY))) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE (((((rt1.c2)GLOB(rt1.c2)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1;
SELECT rt0.c1, rt1.c2, rt1.c0, rt1.c1, rt0.c0 FROM rt1, rt0 GROUP BY rt0.c1, rt1.c2, rt1.c0, rt1.c1, rt0.c0;
SELECT rt0.c1, rt1.c2, rt1.c0, rt1.c1, rt0.c0 FROM rt1, rt0 WHERE (load_extension(((rt0.c2) IS TRUE))) GROUP BY rt0.c1, rt1.c2, rt1.c0, rt1.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt1.c2, rt1.c0, rt1.c1, rt0.c0 FROM rt1, rt0 WHERE ((NOT (load_extension(((rt0.c2) IS TRUE))))) GROUP BY rt0.c1, rt1.c2, rt1.c0, rt1.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt1.c2, rt1.c0, rt1.c1, rt0.c0 FROM rt1, rt0 WHERE (((load_extension(((rt0.c2) IS TRUE))) ISNULL)) GROUP BY rt0.c1, rt1.c2, rt1.c0, rt1.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt1.c1, rt1.c0 FROM rt0 FULL OUTER JOIN rt1 ON (((rt0.c0 IN ()))IS((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt1.c1, rt1.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt1.c1, rt1.c0 FROM rt0 FULL OUTER JOIN rt1 ON (((rt0.c0 IN ()))IS((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt1.c1, rt1.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, rt1.c1, rt1.c0 FROM rt0 FULL OUTER JOIN rt1 ON (((rt0.c0 IN ()))IS((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt1.c1, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, rt1.c1, rt1.c0 FROM rt0 FULL OUTER JOIN rt1 ON (((rt0.c0 IN ()))IS((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt1.c1, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt1.c1, rt1.c0 FROM rt0 FULL OUTER JOIN rt1 ON (((rt0.c0 IN ()))IS((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt1.c1, rt1.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt1.c1, rt1.c0 FROM rt0 FULL OUTER JOIN rt1 ON (((rt0.c0 IN ()))IS((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt1.c1, rt1.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, rt1.c1, rt1.c0 FROM rt0 FULL OUTER JOIN rt1 ON (((rt0.c0 IN ()))IS((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt1.c1, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, rt1.c1, rt1.c0 FROM rt0 FULL OUTER JOIN rt1 ON (((rt0.c0 IN ()))IS((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt1.c1, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt1.c1, rt1.c0 FROM rt0 FULL OUTER JOIN rt1 ON (((rt0.c0 IN ()))IS((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c2 FROM rt1;
SELECT rt1.c1, rt1.c2 FROM rt1 WHERE (((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)) COLLATE RTRIM) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE (((((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)) COLLATE RTRIM) ISNULL));
SELECT rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c0 FROM rt0, rt1;
SELECT DISTINCT rt1.c0 FROM rt0, rt1 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt1.c0 END)>(CAST(rt1.c0 AS BLOB)))) UNION SELECT DISTINCT rt1.c0 FROM rt0, rt1 WHERE ((NOT (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt1.c0 END)>(CAST(rt1.c0 AS BLOB)))))) UNION SELECT DISTINCT rt1.c0 FROM rt0, rt1 WHERE (((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt1.c0 END)>(CAST(rt1.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT rt1.c0 FROM rt0, rt1;
SELECT rt0.c0, rt1.c1, rt0.c2 FROM rt1 FULL OUTER JOIN rt0 ON '925324884' GROUP BY rt0.c0, rt1.c1, rt0.c2;
SELECT rt0.c0, rt1.c1, rt0.c2 FROM rt1 FULL OUTER JOIN rt0 ON '925324884' WHERE ((((('c4')<(rt0.c2))) BETWEEN (NULL) AND (((rt1.c2) BETWEEN (rt0.c0) AND (rt0.c1))))) GROUP BY rt0.c0, rt1.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt1.c1, rt0.c2 FROM rt1 FULL OUTER JOIN rt0 ON '925324884' WHERE ((NOT ((((('c4')<(rt0.c2))) BETWEEN (NULL) AND (((rt1.c2) BETWEEN (rt0.c0) AND (rt0.c1))))))) GROUP BY rt0.c0, rt1.c1, rt0.c2 UNION SELECT rt0.c0, rt1.c1, rt0.c2 FROM rt1 FULL OUTER JOIN rt0 ON '925324884' WHERE ((((((('c4')<(rt0.c2))) BETWEEN (NULL) AND (((rt1.c2) BETWEEN (rt0.c0) AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt1.c1, rt0.c2;
SELECT rt0.c0, rt1.c1, rt0.c2 FROM rt1 FULL OUTER JOIN rt0 ON '925324884' GROUP BY rt0.c0, rt1.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING MAX(MAX(MIN(rt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MAX(MAX(MIN(rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((MAX(MAX(MIN(rt0.c0)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c0) NOTNULL))) AND ((CAST(rt0.c1 AS TEXT))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((((rt0.c0) NOTNULL))) AND ((CAST(rt0.c1 AS TEXT))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((((rt0.c0) NOTNULL))) AND ((CAST(rt0.c1 AS TEXT))))) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (CASE WHEN (((rt0.c1, 0.17059174259413845, NULL))>((rt0.c0, x'', rt0.c2))) THEN COALESCE(rt0.c2, rt0.c0) END) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN (((rt0.c1, 0.17059174259413845, NULL))>((rt0.c0, x'', rt0.c2))) THEN COALESCE(rt0.c2, rt0.c0) END))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE WHEN (((rt0.c1, 0.17059174259413845, NULL))>((rt0.c0, x'', rt0.c2))) THEN COALESCE(rt0.c2, rt0.c0) END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((CASE rt0.c1  WHEN rt0.c1 THEN '0.17059174259413845' ELSE rt0.c2 END IN ())) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((CASE rt0.c1  WHEN rt0.c1 THEN '0.17059174259413845' ELSE rt0.c2 END IN ())))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((((CASE rt0.c1  WHEN rt0.c1 THEN '0.17059174259413845' ELSE rt0.c2 END IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt1.c2, rt0.c2, rt0.c0, rt0.c1, rt1.c1 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c2, rt0.c0, rt0.c1, rt1.c1;
SELECT ALL rt1.c2, rt0.c2, rt0.c0, rt0.c1, rt1.c1 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c2, rt0.c0, rt0.c1, rt1.c1 HAVING rt1.c0 UNION ALL SELECT rt1.c2, rt0.c2, rt0.c0, rt0.c1, rt1.c1 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c2, rt0.c0, rt0.c1, rt1.c1 HAVING (NOT (rt1.c0)) UNION ALL SELECT rt1.c2, rt0.c2, rt0.c0, rt0.c1, rt1.c1 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c2, rt0.c0, rt0.c1, rt1.c1 HAVING ((rt1.c0) ISNULL);
SELECT rt1.c2, rt0.c2, rt0.c0, rt0.c1, rt1.c1 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c2, rt0.c0, rt0.c1, rt1.c1;
SELECT ALL rt1.c2, rt0.c2, rt0.c0, rt0.c1, rt1.c1 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c2, rt0.c0, rt0.c1, rt1.c1 HAVING rt1.c0 UNION ALL SELECT rt1.c2, rt0.c2, rt0.c0, rt0.c1, rt1.c1 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c2, rt0.c0, rt0.c1, rt1.c1 HAVING (NOT (rt1.c0)) UNION ALL SELECT rt1.c2, rt0.c2, rt0.c0, rt0.c1, rt1.c1 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c2, rt0.c0, rt0.c1, rt1.c1 HAVING ((rt1.c0) ISNULL);
SELECT rt1.c2, rt0.c2, rt0.c0, rt0.c1, rt1.c1 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c2, rt0.c0, rt0.c1, rt1.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c1) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS INTEGER)) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (CAST(rt0.c0 COLLATE BINARY AS INTEGER)))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((CAST(rt0.c0 COLLATE BINARY AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 WHERE (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)) COLLATE RTRIM) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)) COLLATE RTRIM))) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM rt1 WHERE (((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)) COLLATE RTRIM) ISNULL)) GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1 HAVING SUM(MIN(GROUP_CONCAT(-1429288372))) UNION ALL SELECT ALL rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1 HAVING (NOT (SUM(MIN(GROUP_CONCAT(-1429288372))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1 HAVING ((SUM(MIN(GROUP_CONCAT(-1429288372)))) ISNULL);
SELECT rt1.c0 FROM rt1;
SELECT rt1.c0 FROM rt1 WHERE (CAST(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END AS TEXT)) UNION ALL SELECT ALL rt1.c0 FROM rt1 WHERE ((NOT (CAST(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END AS TEXT)))) UNION ALL SELECT rt1.c0 FROM rt1 WHERE (((CAST(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END AS TEXT)) ISNULL));
SELECT rt1.c0 FROM rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c0, rt1.c0, rt1.c1))=((0.3114533810376673, rt1.c1, rt1.c1))))<=(((rt1.c1) NOT NULL)))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((((rt1.c0, rt1.c0, rt1.c1))=((0.3114533810376673, rt1.c1, rt1.c1))))<=(((rt1.c1) NOT NULL)))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((((rt1.c0, rt1.c0, rt1.c1))=((0.3114533810376673, rt1.c1, rt1.c1))))<=(((rt1.c1) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c2, rt1.c0, rt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN rt1 ON rt1.c1 GROUP BY rt1.c2, rt1.c0, rt0.c1, rt0.c2;
SELECT ALL rt1.c2, rt1.c0, rt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN rt1 ON rt1.c1 WHERE (HEX((~ (0.5475653679842656)))) GROUP BY rt1.c2, rt1.c0, rt0.c1, rt0.c2 UNION SELECT rt1.c2, rt1.c0, rt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN rt1 ON rt1.c1 WHERE ((NOT (HEX((~ (0.5475653679842656)))))) GROUP BY rt1.c2, rt1.c0, rt0.c1, rt0.c2 UNION SELECT rt1.c2, rt1.c0, rt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN rt1 ON rt1.c1 WHERE (((HEX((~ (0.5475653679842656)))) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt0.c1, rt0.c2;
SELECT rt1.c2, rt1.c0, rt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN rt1 ON rt1.c1 GROUP BY rt1.c2, rt1.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c2;
SELECT rt0.c0, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c2 HAVING (((- (rt1.c0)))&((rt1.c0 IN (rt0.c2)))) UNION ALL SELECT ALL rt0.c0, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c2 HAVING (NOT ((((- (rt1.c0)))&((rt1.c0 IN (rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c2 HAVING (((((- (rt1.c0)))&((rt1.c0 IN (rt0.c2))))) ISNULL);
SELECT ALL rt0.c0, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c2;
SELECT rt0.c0, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c2 HAVING (((- (rt1.c0)))&((rt1.c0 IN (rt0.c2)))) UNION ALL SELECT ALL rt0.c0, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c2 HAVING (NOT ((((- (rt1.c0)))&((rt1.c0 IN (rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c2 HAVING (((((- (rt1.c0)))&((rt1.c0 IN (rt0.c2))))) ISNULL);
SELECT ALL rt0.c0, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c2;
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE ((((rt1.c2 IN ())) NOT BETWEEN (rt1.c1 COLLATE BINARY) AND (((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c0)))OR(rt1.c2))))) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((((rt1.c2 IN ())) NOT BETWEEN (rt1.c1 COLLATE BINARY) AND (((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c0)))OR(rt1.c2))))))) UNION ALL SELECT * FROM rt1 WHERE ((((((rt1.c2 IN ())) NOT BETWEEN (rt1.c1 COLLATE BINARY) AND (((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c0)))OR(rt1.c2))))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt1.c0, rt0.c2, rt1.c1, rt0.c1, rt0.c0 FROM rt0, rt1;
SELECT DISTINCT rt1.c0, rt0.c2, rt1.c1, rt0.c1, rt0.c0 FROM rt0, rt1 WHERE (((((((((rt0.c1)AND(UNLIKELY(rt0.c1))))AND(((rt0.c1)&(rt1.c2)))))OR((rt0.c1 IN (rt0.c1, rt1.c1)))))AND(''))) UNION SELECT DISTINCT rt1.c0, rt0.c2, rt1.c1, rt0.c1, rt0.c0 FROM rt0, rt1 WHERE ((NOT (((((((((rt0.c1)AND(UNLIKELY(rt0.c1))))AND(((rt0.c1)&(rt1.c2)))))OR((rt0.c1 IN (rt0.c1, rt1.c1)))))AND(''))))) UNION SELECT DISTINCT rt1.c0, rt0.c2, rt1.c1, rt0.c1, rt0.c0 FROM rt0, rt1 WHERE (((((((((((rt0.c1)AND(UNLIKELY(rt0.c1))))AND(((rt0.c1)&(rt1.c2)))))OR((rt0.c1 IN (rt0.c1, rt1.c1)))))AND(''))) ISNULL));
SELECT DISTINCT rt1.c0, rt0.c2, rt1.c1, rt0.c1, rt0.c0 FROM rt0, rt1;
SELECT ALL rt1.c0, rt1.c1, rt0.c0, rt0.c2, rt1.c2, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c1, rt0.c0, rt0.c2, rt1.c2, rt0.c1;
SELECT rt1.c0, rt1.c1, rt0.c0, rt0.c2, rt1.c2, rt0.c1 FROM rt1 NOT INDEXED, rt0 WHERE (CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC)) GROUP BY rt1.c0, rt1.c1, rt0.c0, rt0.c2, rt1.c2, rt0.c1 UNION SELECT rt1.c0, rt1.c1, rt0.c0, rt0.c2, rt1.c2, rt0.c1 FROM rt1, rt0 WHERE ((NOT (CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC)))) GROUP BY rt1.c0, rt1.c1, rt0.c0, rt0.c2, rt1.c2, rt0.c1 UNION SELECT ALL rt1.c0, rt1.c1, rt0.c0, rt0.c2, rt1.c2, rt0.c1 FROM rt1, rt0 WHERE (((CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC)) ISNULL)) GROUP BY rt1.c0, rt1.c1, rt0.c0, rt0.c2, rt1.c2, rt0.c1;
SELECT ALL rt1.c0, rt1.c1, rt0.c0, rt0.c2, rt1.c2, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c1, rt0.c0, rt0.c2, rt1.c2, rt0.c1;
SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING TOTAL(rt1.c1) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING (NOT (TOTAL(rt1.c1))) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING ((TOTAL(rt1.c1)) ISNULL);
SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING TOTAL(rt1.c1) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING (NOT (TOTAL(rt1.c1))) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING ((TOTAL(rt1.c1)) ISNULL);
SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON (- (CAST(rt1.c1 AS BLOB)));
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON (- (CAST(rt1.c1 AS BLOB))) WHERE (((((rt0.c0)||(rt0.c2)))AND((rt1.c0 IN (rt0.c0))))) UNION ALL SELECT * FROM rt1 FULL OUTER JOIN rt0 ON (- (CAST(rt1.c1 AS BLOB))) WHERE ((NOT (((((rt0.c0)||(rt0.c2)))AND((rt1.c0 IN (rt0.c0))))))) UNION ALL SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON (- (CAST(rt1.c1 AS BLOB))) WHERE (((((((rt0.c0)||(rt0.c2)))AND((rt1.c0 IN (rt0.c0))))) ISNULL));
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON (- (CAST(rt1.c1 AS BLOB)));
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE ((((('1871656565')IS NOT(rt0.c1))) IS FALSE)) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT ((((('1871656565')IS NOT(rt0.c1))) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((((((('1871656565')IS NOT(rt0.c1))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 WHERE (CAST(rt1.c2 AS BLOB) COLLATE RTRIM) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE ((NOT (CAST(rt1.c2 AS BLOB) COLLATE RTRIM))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE (((CAST(rt1.c2 AS BLOB) COLLATE RTRIM) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c2, rt0.c0, rt1.c1, rt0.c2, rt1.c0 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c0, rt1.c1, rt0.c2, rt1.c0;
SELECT rt1.c2, rt0.c0, rt1.c1, rt0.c2, rt1.c0 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c0, rt1.c1, rt0.c2, rt1.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c2, rt0.c0, rt1.c1, rt0.c2, rt1.c0 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c0, rt1.c1, rt0.c2, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c2, rt0.c0, rt1.c1, rt0.c2, rt1.c0 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c0, rt1.c1, rt0.c2, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2, rt0.c0, rt1.c1, rt0.c2, rt1.c0 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c0, rt1.c1, rt0.c2, rt1.c0;
SELECT rt1.c2, rt0.c0, rt1.c1, rt0.c2, rt1.c0 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c0, rt1.c1, rt0.c2, rt1.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c2, rt0.c0, rt1.c1, rt0.c2, rt1.c0 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c0, rt1.c1, rt0.c2, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c2, rt0.c0, rt1.c1, rt0.c2, rt1.c0 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c0, rt1.c1, rt0.c2, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2, rt0.c0, rt1.c1, rt0.c2, rt1.c0 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c0, rt1.c1, rt0.c2, rt1.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((('0C')IS((rt0.c1 IN ())))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((('0C')IS((rt0.c1 IN ())))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((('0C')IS((rt0.c1 IN ())))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((- ((~ (rt1.c1))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((- ((~ (rt1.c1))))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((- ((~ (rt1.c1))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE ((((rt1.c1 IN ())) BETWEEN (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END) AND (((rt1.c2) NOTNULL)))) GROUP BY rt1.c2, rt1.c1 UNION SELECT rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT ((((rt1.c1 IN ())) BETWEEN (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END) AND (((rt1.c2) NOTNULL)))))) GROUP BY rt1.c2, rt1.c1 UNION SELECT rt1.c2, rt1.c1 FROM rt1 WHERE ((((((rt1.c1 IN ())) BETWEEN (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END) AND (((rt1.c2) NOTNULL)))) ISNULL)) GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((json_object(MAX(rt1.c1), GROUP_CONCAT(rt1.c1), rt1.c1, MIN(rt1.c2)))==(rt1.c2)) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (((json_object(MAX(rt1.c1), GROUP_CONCAT(rt1.c1), rt1.c1, MIN(rt1.c2)))==(rt1.c2)))) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((((json_object(MAX(rt1.c1), GROUP_CONCAT(rt1.c1), rt1.c1, MIN(rt1.c2)))=(rt1.c2))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) ISNULL)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE RTRIM) ISNULL)))) UNION ALL SELECT * FROM rt0 WHERE (((((rt0.c1 COLLATE RTRIM) ISNULL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt1.c1, rt0.c0, rt1.c0, rt1.c2, rt0.c2 FROM rt0 NATURAL JOIN rt1;
SELECT DISTINCT rt0.c1, rt1.c1, rt0.c0, rt1.c0, rt1.c2, rt0.c2 FROM rt0 NATURAL JOIN rt1 WHERE ((rt1.c2 IN ())) UNION SELECT DISTINCT rt0.c1, rt1.c1, rt0.c0, rt1.c0, rt1.c2, rt0.c2 FROM rt0 NATURAL JOIN rt1 WHERE ((NOT ((rt1.c2 IN ())))) UNION SELECT DISTINCT rt0.c1, rt1.c1, rt0.c0, rt1.c0, rt1.c2, rt0.c2 FROM rt0 NATURAL JOIN rt1 WHERE ((((rt1.c2 IN ())) ISNULL));
SELECT DISTINCT rt0.c1, rt1.c1, rt0.c0, rt1.c0, rt1.c2, rt0.c2 FROM rt0 NATURAL JOIN rt1;
SELECT rt0.c2, rt1.c2, rt0.c0, rt0.c1, rt1.c0, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c2, rt0.c0, rt0.c1, rt1.c0, rt1.c1;
SELECT rt0.c2, rt1.c2, rt0.c0, rt0.c1, rt1.c0, rt1.c1 FROM rt0, rt1 WHERE (rt0.c0) GROUP BY rt0.c2, rt1.c2, rt0.c0, rt0.c1, rt1.c0, rt1.c1 UNION SELECT ALL rt0.c2, rt1.c2, rt0.c0, rt0.c1, rt1.c0, rt1.c1 FROM rt0, rt1 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c2, rt1.c2, rt0.c0, rt0.c1, rt1.c0, rt1.c1 UNION SELECT rt0.c2, rt1.c2, rt0.c0, rt0.c1, rt1.c0, rt1.c1 FROM rt0, rt1 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c2, rt1.c2, rt0.c0, rt0.c1, rt1.c0, rt1.c1;
SELECT rt0.c2, rt1.c2, rt0.c0, rt0.c1, rt1.c0, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c2, rt0.c0, rt0.c1, rt1.c0, rt1.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c1 HAVING ((MIN(rt0.c2))<(((TOTAL(COUNT(MIN(rt0.c1)))) NOT NULL))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (((MIN(rt0.c2))<(((TOTAL(COUNT(MIN(rt0.c1)))) NOT NULL))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((((MIN(rt0.c2))<(((TOTAL(COUNT(MIN(rt0.c1)))) NOT NULL)))) ISNULL);
SELECT ALL * FROM rt0, rt1;
SELECT ALL * FROM rt0, rt1 WHERE ((~ (rt1.c1 COLLATE NOCASE))) UNION ALL SELECT * FROM rt0, rt1 WHERE ((NOT ((~ (rt1.c1 COLLATE NOCASE))))) UNION ALL SELECT * FROM rt0, rt1 WHERE ((((~ (rt1.c1 COLLATE NOCASE))) ISNULL));
SELECT ALL * FROM rt0, rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (x'8177') UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (x'8177'))) UNION SELECT DISTINCT * FROM rt1 WHERE (((x'8177') ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c0)<(rt0.c1)), (NOT (rt0.c2)), (+ (rt0.c0))))<=((rt0.c2, ((rt0.c0)>(rt0.c1)), COALESCE(DISTINCT rt0.c2, x''))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c0)<(rt0.c1)), (NOT (rt0.c2)), (+ (rt0.c0))))<=((rt0.c2, ((rt0.c0)>(rt0.c1)), COALESCE(DISTINCT rt0.c2, x''))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((((rt0.c0)<(rt0.c1)), (NOT (rt0.c2)), (+ (rt0.c0))))<=((rt0.c2, ((rt0.c0)>(rt0.c1)), COALESCE(DISTINCT rt0.c2, x''))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c1, rt1.c1, rt0.c0 FROM rt1, rt0 GROUP BY rt0.c1, rt1.c1, rt0.c0;
SELECT rt0.c1, rt1.c1, rt0.c0 FROM rt1, rt0 GROUP BY rt0.c1, rt1.c1, rt0.c0 HAVING MAX(AVG(rt0.c2)) COLLATE NOCASE UNION ALL SELECT ALL rt0.c1, rt1.c1, rt0.c0 FROM rt1, rt0 GROUP BY rt0.c1, rt1.c1, rt0.c0 HAVING (NOT (MAX(AVG(rt0.c2)) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c1, rt1.c1, rt0.c0 FROM rt1, rt0 GROUP BY rt0.c1, rt1.c1, rt0.c0 HAVING ((MAX(AVG(rt0.c2)) COLLATE NOCASE) ISNULL);
SELECT MIN(0.31159214353748477) FROM rt0, rt1 ORDER BY ((((((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt0.c1)))))>=((x''))), CASE WHEN rt1.c0 COLLATE BINARY THEN LOWER(DISTINCT NULL) END, ((((((((rt0.c0)AND(rt0.c1 COLLATE NOCASE)))AND(CAST(rt1.c2 AS NUMERIC))))AND(CAST(rt0.c0 AS REAL))))OR(CASE rt1.c2  WHEN rt0.c0 THEN rt1.c2 END)) ASC, NULL  NULLS FIRST;
SELECT * FROM rt0, rt1;
SELECT * FROM rt0, rt1 WHERE ((CAST(rt0.c0 AS NUMERIC) IN ())) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE ((NOT ((CAST(rt0.c0 AS NUMERIC) IN ())))) UNION ALL SELECT * FROM rt0, rt1 WHERE ((((CAST(rt0.c0 AS NUMERIC) IN ())) ISNULL));
SELECT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB)) ISNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS BLOB)) ISNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CAST(rt0.c1 AS BLOB)) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt1.c0, rt1.c1, rt0.c0, rt1.c2 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c1, rt0.c0, rt1.c2;
SELECT rt1.c0, rt1.c1, rt0.c0, rt1.c2 FROM rt1, rt0 WHERE (((rt0.c1) NOT BETWEEN ((~ (rt0.c1))) AND (((rt1.c0) NOTNULL)))) GROUP BY rt1.c0, rt1.c1, rt0.c0, rt1.c2 UNION SELECT rt1.c0, rt1.c1, rt0.c0, rt1.c2 FROM rt1, rt0 WHERE ((NOT (((rt0.c1) NOT BETWEEN ((~ (rt0.c1))) AND (((rt1.c0) NOTNULL)))))) GROUP BY rt1.c0, rt1.c1, rt0.c0, rt1.c2 UNION SELECT rt1.c0, rt1.c1, rt0.c0, rt1.c2 FROM rt1, rt0 WHERE (((((rt0.c1) NOT BETWEEN ((~ (rt0.c1))) AND (((rt1.c0) NOTNULL)))) ISNULL)) GROUP BY rt1.c0, rt1.c1, rt0.c0, rt1.c2;
SELECT rt1.c0, rt1.c1, rt0.c0, rt1.c2 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c1, rt0.c0, rt1.c2;
SELECT ALL rt1.c1 FROM rt1 INNER JOIN rt0 ON (((((rt1.c1))<>((NULL))))<=(rt1.c0)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 INNER JOIN rt0 ON (((((rt1.c1))<>((NULL))))<=(rt1.c0)) GROUP BY rt1.c1 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL rt1.c1 FROM rt1 INNER JOIN rt0 ON (((((rt1.c1))!=((NULL))))<=(rt1.c0)) GROUP BY rt1.c1 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL rt1.c1 FROM rt1 INNER JOIN rt0 ON (((((rt1.c1))!=((NULL))))<=(rt1.c0)) GROUP BY rt1.c1 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL * FROM rt0, rt1;
SELECT ALL * FROM rt0, rt1 WHERE (TIME((((rt1.c1, rt1.c2, rt0.c2)) BETWEEN ((rt0.c0, rt1.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, rt1.c0))), (((rt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), CAST(rt1.c1 AS TEXT))) UNION ALL SELECT * FROM rt0, rt1 WHERE ((NOT (TIME((((rt1.c1, rt1.c2, rt0.c2)) BETWEEN ((rt0.c0, rt1.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, rt1.c0))), (((rt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), CAST(rt1.c1 AS TEXT))))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE (((TIME((((rt1.c1, rt1.c2, rt0.c2)) BETWEEN ((rt0.c0, rt1.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, rt1.c0))), (((rt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), CAST(rt1.c1 AS TEXT))) ISNULL));
SELECT ALL * FROM rt0, rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (LIKE(((rt1.c2) NOT BETWEEN (rt1.c1) AND (NULL)), 0.9679671495092752)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (LIKE(((rt1.c2) NOT BETWEEN (rt1.c1) AND (NULL)), 0.9679671495092752)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((LIKE(((rt1.c2) NOT BETWEEN (rt1.c1) AND (NULL)), 0.9679671495092752)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((rt0.c0 IN ()) COLLATE BINARY) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((rt0.c0 IN ()) COLLATE BINARY))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c0 IN ()) COLLATE BINARY) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(rt0.c0))<(((((COUNT(GROUP_CONCAT(rt0.c2)))AND(TOTAL(rt0.c2))))OR(AVG(GROUP_CONCAT(COUNT(*))))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((COUNT(rt0.c0))<(((((COUNT(GROUP_CONCAT(rt0.c2)))AND(TOTAL(rt0.c2))))OR(AVG(GROUP_CONCAT(COUNT(*))))))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((COUNT(rt0.c0))<(((((COUNT(GROUP_CONCAT(rt0.c2)))AND(TOTAL(rt0.c2))))OR(AVG(GROUP_CONCAT(COUNT(*)))))))) ISNULL);
SELECT * FROM rt1 INNER JOIN rt0 ON (((((((((~ (rt0.c0)))AND(CASE WHEN rt0.c0 THEN rt1.c0 WHEN '' THEN rt1.c2 WHEN rt0.c0 THEN rt0.c0 END)))OR((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))AND((- (rt0.c0)))))AND(CAST(rt1.c0 AS NUMERIC)));
SELECT * FROM rt1 INNER JOIN rt0 ON (((((((((~ (rt0.c0)))AND(CASE WHEN rt0.c0 THEN rt1.c0 WHEN '' THEN rt1.c2 WHEN rt0.c0 THEN rt0.c0 END)))OR((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))AND((- (rt0.c0)))))AND(CAST(rt1.c0 AS NUMERIC))) WHERE ((((((((((((rt1.c2)AND(rt1.c0)))AND(rt0.c0)))AND(x'')))OR(rt0.c0)), rt0.c1 COLLATE NOCASE, rt0.c2 COLLATE RTRIM))<=((((rt1.c1)&(rt1.c0)), (((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt0.c0))), rt1.c2 COLLATE BINARY)))) UNION ALL SELECT * FROM rt1 INNER JOIN rt0 ON (((((((((~ (rt0.c0)))AND(CASE WHEN rt0.c0 THEN rt1.c0 WHEN '' THEN rt1.c2 WHEN rt0.c0 THEN rt0.c0 END)))OR((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))AND((- (rt0.c0)))))AND(CAST(rt1.c0 AS NUMERIC))) WHERE ((NOT ((((((((((((rt1.c2)AND(rt1.c0)))AND(rt0.c0)))AND(x'')))OR(rt0.c0)), rt0.c1 COLLATE NOCASE, rt0.c2 COLLATE RTRIM))<=((((rt1.c1)&(rt1.c0)), (((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt0.c0))), rt1.c2 COLLATE BINARY)))))) UNION ALL SELECT * FROM rt1 INNER JOIN rt0 ON (((((((((~ (rt0.c0)))AND(CASE WHEN rt0.c0 THEN rt1.c0 WHEN '' THEN rt1.c2 WHEN rt0.c0 THEN rt0.c0 END)))OR((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))AND((- (rt0.c0)))))AND(CAST(rt1.c0 AS NUMERIC))) WHERE ((((((((((((((rt1.c2)AND(rt1.c0)))AND(rt0.c0)))AND(x'')))OR(rt0.c0)), rt0.c1 COLLATE NOCASE, rt0.c2 COLLATE RTRIM))<=((((rt1.c1)&(rt1.c0)), (((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt0.c0))), rt1.c2 COLLATE BINARY)))) ISNULL));
SELECT * FROM rt1 INNER JOIN rt0 ON (((((((((~ (rt0.c0)))AND(CASE WHEN rt0.c0 THEN rt1.c0 WHEN '' THEN rt1.c2 WHEN rt0.c0 THEN rt0.c0 END)))OR((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))AND((- (rt0.c0)))))AND(CAST(rt1.c0 AS NUMERIC)));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ('-388968046') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ('-388968046'))) UNION SELECT DISTINCT * FROM rt0 WHERE ((('-388968046') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 WHERE ((~ (rt1.c2 COLLATE BINARY))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1 WHERE ((NOT ((~ (rt1.c2 COLLATE BINARY))))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1 WHERE ((((~ (rt1.c2 COLLATE BINARY))) ISNULL)) GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING (((+ (rt1.c1)))>=(rt1.c1)) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING (NOT ((((+ (rt1.c1)))>=(rt1.c1)))) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING (((((+ (rt1.c1)))>=(rt1.c1))) ISNULL);
SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING (((+ (rt1.c1)))>=(rt1.c1)) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING (NOT ((((+ (rt1.c1)))>=(rt1.c1)))) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING (((((+ (rt1.c1)))>=(rt1.c1))) ISNULL);
SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c2, rt0.c2 FROM rt0, rt1;
SELECT ALL rt1.c0, rt1.c2, rt0.c2 FROM rt0, rt1 WHERE ((- (((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c1))))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt0.c2 FROM rt0, rt1 WHERE ((NOT ((- (((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c1))))))) UNION ALL SELECT rt1.c0, rt1.c2, rt0.c2 FROM rt0, rt1 WHERE ((((- (((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c1))))) ISNULL));
SELECT ALL rt1.c0, rt1.c2, rt0.c2 FROM rt0, rt1;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((CAST(rt0.c0 AS REAL), (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))AND(NULL))))<=((((rt0.c1)&(rt0.c0)), rt0.c2 COLLATE BINARY, (((rt0.c0))=((rt0.c1))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((((CAST(rt0.c0 AS REAL), (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))AND(NULL))))<=((((rt0.c1)&(rt0.c0)), rt0.c2 COLLATE BINARY, (((rt0.c0))=((rt0.c1))))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((((CAST(rt0.c0 AS REAL), (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))AND(NULL))))<=((((rt0.c1)&(rt0.c0)), rt0.c2 COLLATE BINARY, (((rt0.c0))==((rt0.c1))))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt1.c2, rt0.c1, rt1.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c1, rt1.c1, rt0.c0;
SELECT rt1.c2, rt0.c1, rt1.c1, rt0.c0 FROM rt0, rt1 WHERE (highlight(((rt0.c1) BETWEEN (rt0.c1) AND (rt1.c0)), ((rt0.c1)GLOB(rt1.c1)), ((rt0.c2) NOT NULL), rt1.c2 COLLATE BINARY)) GROUP BY rt1.c2, rt0.c1, rt1.c1, rt0.c0 UNION SELECT rt1.c2, rt0.c1, rt1.c1, rt0.c0 FROM rt0, rt1 WHERE ((NOT (highlight(((rt0.c1) BETWEEN (rt0.c1) AND (rt1.c0)), ((rt0.c1)GLOB(rt1.c1)), ((rt0.c2) NOT NULL), rt1.c2 COLLATE BINARY)))) GROUP BY rt1.c2, rt0.c1, rt1.c1, rt0.c0 UNION SELECT rt1.c2, rt0.c1, rt1.c1, rt0.c0 FROM rt0, rt1 WHERE (((highlight(((rt0.c1) BETWEEN (rt0.c1) AND (rt1.c0)), ((rt0.c1)GLOB(rt1.c1)), ((rt0.c2) NOT NULL), rt1.c2 COLLATE BINARY)) ISNULL)) GROUP BY rt1.c2, rt0.c1, rt1.c1, rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING json_valid(TOTAL(AVG(AVG(TOTAL(SUM(COUNT(*))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (json_valid(TOTAL(AVG(AVG(TOTAL(SUM(COUNT(*))))))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((json_valid(TOTAL(AVG(AVG(TOTAL(SUM(COUNT(*)))))))) ISNULL);
SELECT ALL * FROM rt0, rt1;
SELECT * FROM rt0, rt1 WHERE ((~ (((rt0.c0)<>(rt0.c0))))) UNION ALL SELECT * FROM rt0, rt1 WHERE ((NOT ((~ (((rt0.c0)!=(rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE ((((~ (((rt0.c0)!=(rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0, rt1;
SELECT DISTINCT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0 WHERE (((rt1.c1 COLLATE RTRIM) BETWEEN (rt1.c2 COLLATE NOCASE) AND (CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN '412382158' WHEN rt0.c0 THEN rt1.c1 ELSE rt0.c1 END))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((NOT (((rt1.c1 COLLATE RTRIM) BETWEEN (rt1.c2 COLLATE NOCASE) AND (CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN '412382158' WHEN rt0.c0 THEN rt1.c1 ELSE rt0.c1 END))))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE (((((rt1.c1 COLLATE RTRIM) BETWEEN (rt1.c2 COLLATE NOCASE) AND (CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN '412382158' WHEN rt0.c0 THEN rt1.c1 ELSE rt0.c1 END))) ISNULL));
SELECT DISTINCT * FROM rt1, rt0;
SELECT ALL rt1.c0, rt1.c2, rt1.c1, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c2, rt1.c1, rt0.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1, rt0.c1 FROM rt1, rt0 WHERE (((((rt1.c0)OR(rt1.c1)))OR(rt1.c2)) COLLATE BINARY) GROUP BY rt1.c0, rt1.c2, rt1.c1, rt0.c1 UNION SELECT rt1.c0, rt1.c2, rt1.c1, rt0.c1 FROM rt1, rt0 WHERE ((NOT (((((rt1.c0)OR(rt1.c1)))OR(rt1.c2)) COLLATE BINARY))) GROUP BY rt1.c0, rt1.c2, rt1.c1, rt0.c1 UNION SELECT ALL rt1.c0, rt1.c2, rt1.c1, rt0.c1 FROM rt1, rt0 WHERE (((((((rt1.c0)OR(rt1.c1)))OR(rt1.c2)) COLLATE BINARY) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt1.c1, rt0.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c2, rt1.c1, rt0.c1;
SELECT rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1 HAVING (((GROUP_CONCAT(MAX(rt1.c2))) IS FALSE) IN ()) UNION ALL SELECT ALL rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1 HAVING (NOT ((((GROUP_CONCAT(MAX(rt1.c2))) IS FALSE) IN ()))) UNION ALL SELECT rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1 HAVING (((((GROUP_CONCAT(MAX(rt1.c2))) IS FALSE) IN ())) ISNULL);
SELECT rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1 HAVING (((GROUP_CONCAT(MAX(rt1.c2))) IS FALSE) IN ()) UNION ALL SELECT ALL rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1 HAVING (NOT ((((GROUP_CONCAT(MAX(rt1.c2))) IS FALSE) IN ()))) UNION ALL SELECT rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1 HAVING (((((GROUP_CONCAT(MAX(rt1.c2))) IS FALSE) IN ())) ISNULL);
SELECT rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1;
SELECT TOTAL(CAST((NOT (NULL)) AS TEXT)) FROM rt0, rt1 ORDER BY ((((rt1.c2) IS TRUE))*((rt1.c2 IN ()))) ASC;
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (((((((rt1.c0))<((rt1.c0))))AND(0.2049285076485019)))AND(((0x15a4c74d)>>(NULL))));
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (((((((rt1.c0))<((rt1.c0))))AND(0.2049285076485019)))AND(((0x15a4c74d)>>(NULL)))) WHERE ((((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN 0.6876036851953995 WHEN rt0.c0 THEN rt0.c2 END))>=((((rt0.c0) ISNULL))))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON (((((((rt1.c0))<((rt1.c0))))AND(0.2049285076485019)))AND(((0x15a4c74d)>>(NULL)))) WHERE ((NOT ((((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN 0.6876036851953995 WHEN rt0.c0 THEN rt0.c2 END))>=((((rt0.c0) ISNULL))))))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON (((((((rt1.c0))<((rt1.c0))))AND(0.2049285076485019)))AND(((0x15a4c74d)>>(NULL)))) WHERE ((((((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN 0.6876036851953995 WHEN rt0.c0 THEN rt0.c2 END))>=((((rt0.c0) ISNULL))))) ISNULL));
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (((((((rt1.c0))<((rt1.c0))))AND(0.2049285076485019)))AND(((0x15a4c74d)>>(NULL))));
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (UNLIKELY(0.7510865762879486)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (UNLIKELY(0.7510865762879486)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((UNLIKELY(0.7510865762879486)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((- (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((- (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((- (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING MAX(((((MAX(rt1.c0))AND(TOTAL(rt1.c2))))OR(rt1.c1))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING (NOT (MAX(((((MAX(rt1.c0))AND(TOTAL(rt1.c2))))OR(rt1.c1))))) UNION ALL SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING ((MAX(((((MAX(rt1.c0))AND(TOTAL(rt1.c2))))OR(rt1.c1)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ('sBG' COLLATE RTRIM COLLATE NOCASE) UNION ALL SELECT * FROM rt0 WHERE ((NOT ('sBG' COLLATE RTRIM COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0 WHERE ((('sBG' COLLATE RTRIM COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (CASE ((rt1.c2) IS FALSE)  WHEN rt1.c1 THEN ((rt1.c1)LIKE(rt1.c2)) ELSE ((rt1.c0)<>(rt1.c2)) END) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (CASE ((rt1.c2) IS FALSE)  WHEN rt1.c1 THEN ((rt1.c1)LIKE(rt1.c2)) ELSE ((rt1.c0)!=(rt1.c2)) END))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (((CASE ((rt1.c2) IS FALSE)  WHEN rt1.c1 THEN ((rt1.c1)LIKE(rt1.c2)) ELSE ((rt1.c0)!=(rt1.c2)) END) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT ALL rt1.c2, rt0.c0, rt0.c2, rt1.c1 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c0, rt0.c2, rt1.c1;
SELECT ALL rt1.c2, rt0.c0, rt0.c2, rt1.c1 FROM rt0, rt1 WHERE (0.6988154759641161 COLLATE NOCASE) GROUP BY rt1.c2, rt0.c0, rt0.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt0.c0, rt0.c2, rt1.c1 FROM rt0, rt1 WHERE ((NOT (0.6988154759641161 COLLATE NOCASE))) GROUP BY rt1.c2, rt0.c0, rt0.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt0.c0, rt0.c2, rt1.c1 FROM rt0, rt1 WHERE (((0.6988154759641161 COLLATE NOCASE) ISNULL)) GROUP BY rt1.c2, rt0.c0, rt0.c2, rt1.c1;
SELECT ALL rt1.c2, rt0.c0, rt0.c2, rt1.c1 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c0, rt0.c2, rt1.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING CAST(rt0.c0 COLLATE RTRIM AS TEXT) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (CAST(rt0.c0 COLLATE RTRIM AS TEXT))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((CAST(rt0.c0 COLLATE RTRIM AS TEXT)) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING CAST(rt0.c0 COLLATE RTRIM AS TEXT) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (CAST(rt0.c0 COLLATE RTRIM AS TEXT))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((CAST(rt0.c0 COLLATE RTRIM AS TEXT)) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1, rt1.c0, rt0.c0, rt1.c1, rt0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON ((((((((UNLIKELY(DISTINCT rt0.c0))OR(((rt1.c0) NOT BETWEEN (-9.26249606E8) AND (rt1.c2)))))AND(CASE WHEN 0.19588143964788862 THEN rt1.c1 ELSE rt1.c2 END)))OR(((rt0.c1)>>(rt0.c1)))))AND(rt0.c2 COLLATE RTRIM));
SELECT ALL rt0.c1, rt1.c0, rt0.c0, rt1.c1, rt0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON ((((((((UNLIKELY(DISTINCT rt0.c0))OR(((rt1.c0) NOT BETWEEN (-9.26249606E8) AND (rt1.c2)))))AND(CASE WHEN 0.19588143964788862 THEN rt1.c1 ELSE rt1.c2 END)))OR(((rt0.c1)>>(rt0.c1)))))AND(rt0.c2 COLLATE RTRIM)) WHERE (((COALESCE(rt0.c1, rt1.c1))LIKE((((rt1.c1, rt0.c0, rt1.c2))!=((NULL, rt0.c2, rt1.c2)))))) UNION ALL SELECT ALL rt0.c1, rt1.c0, rt0.c0, rt1.c1, rt0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON ((((((((UNLIKELY(DISTINCT rt0.c0))OR(((rt1.c0) NOT BETWEEN (-9.26249606E8) AND (rt1.c2)))))AND(CASE WHEN 0.19588143964788862 THEN rt1.c1 ELSE rt1.c2 END)))OR(((rt0.c1)>>(rt0.c1)))))AND(rt0.c2 COLLATE RTRIM)) WHERE ((NOT (((COALESCE(rt0.c1, rt1.c1))LIKE((((rt1.c1, rt0.c0, rt1.c2))!=((NULL, rt0.c2, rt1.c2)))))))) UNION ALL SELECT ALL rt0.c1, rt1.c0, rt0.c0, rt1.c1, rt0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON ((((((((UNLIKELY(DISTINCT rt0.c0))OR(((rt1.c0) NOT BETWEEN (-9.26249606E8) AND (rt1.c2)))))AND(CASE WHEN 0.19588143964788862 THEN rt1.c1 ELSE rt1.c2 END)))OR(((rt0.c1)>>(rt0.c1)))))AND(rt0.c2 COLLATE RTRIM)) WHERE (((((COALESCE(rt0.c1, rt1.c1))LIKE((((rt1.c1, rt0.c0, rt1.c2))<>((NULL, rt0.c2, rt1.c2)))))) ISNULL));
SELECT ALL rt0.c1, rt1.c0, rt0.c0, rt1.c1, rt0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON ((((((((UNLIKELY(DISTINCT rt0.c0))OR(((rt1.c0) NOT BETWEEN (-9.26249606E8) AND (rt1.c2)))))AND(CASE WHEN 0.19588143964788862 THEN rt1.c1 ELSE rt1.c2 END)))OR(((rt0.c1)>>(rt0.c1)))))AND(rt0.c2 COLLATE RTRIM));
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1 WHERE (UNLIKELY(DISTINCT '-907305193')) UNION SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (UNLIKELY(DISTINCT '-907305193')))) UNION SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1 WHERE (((UNLIKELY(DISTINCT '-907305193')) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1;
SELECT rt0.c2, rt1.c0, rt1.c1, rt1.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON LAST_INSERT_ROWID() GROUP BY rt0.c2, rt1.c0, rt1.c1, rt1.c2;
SELECT rt0.c2, rt1.c0, rt1.c1, rt1.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON LAST_INSERT_ROWID() WHERE (rt0.c0) GROUP BY rt0.c2, rt1.c0, rt1.c1, rt1.c2 UNION SELECT ALL rt0.c2, rt1.c0, rt1.c1, rt1.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON LAST_INSERT_ROWID() WHERE ((NOT (rt0.c0))) GROUP BY rt0.c2, rt1.c0, rt1.c1, rt1.c2 UNION SELECT rt0.c2, rt1.c0, rt1.c1, rt1.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON LAST_INSERT_ROWID() WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c2, rt1.c0, rt1.c1, rt1.c2;
SELECT rt0.c2, rt1.c0, rt1.c1, rt1.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON LAST_INSERT_ROWID() GROUP BY rt0.c2, rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (((rt0.c2)) BETWEEN ((MAX(MIN(MAX(rt0.c2))))) AND ((rtreenode(MAX(rt0.c0), MAX(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT ((((rt0.c2)) BETWEEN ((MAX(MIN(MAX(rt0.c2))))) AND ((rtreenode(MAX(rt0.c0), MAX(rt0.c1))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (((((rt0.c2)) BETWEEN ((MAX(MIN(MAX(rt0.c2))))) AND ((rtreenode(MAX(rt0.c0), MAX(rt0.c1)))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) IN ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) IN ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) IN ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (TIME(HEX(rt1.c1), (NOT (rt1.c1)), (rt1.c1 IN ()), rt1.c0 COLLATE NOCASE, (rt1.c1 IN ()))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (TIME(HEX(rt1.c1), (NOT (rt1.c1)), (rt1.c1 IN ()), rt1.c0 COLLATE NOCASE, (rt1.c1 IN ()))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((TIME(HEX(rt1.c1), (NOT (rt1.c1)), (rt1.c1 IN ()), rt1.c0 COLLATE NOCASE, (rt1.c1 IN ()))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (CHANGES()) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (CHANGES()))) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (((CHANGES()) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt0.c0, rt1.c1, rt1.c0, rt0.c1, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c0, rt1.c1, rt1.c0, rt0.c1, rt0.c2;
SELECT rt1.c2, rt0.c0, rt1.c1, rt1.c0, rt0.c1, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c0, rt1.c1, rt1.c0, rt0.c1, rt0.c2 HAVING COUNT(COUNT(AVG(COUNT(*)))) UNION ALL SELECT ALL rt1.c2, rt0.c0, rt1.c1, rt1.c0, rt0.c1, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c0, rt1.c1, rt1.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(COUNT(AVG(COUNT(*)))))) UNION ALL SELECT ALL rt1.c2, rt0.c0, rt1.c1, rt1.c0, rt0.c1, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c0, rt1.c1, rt1.c0, rt0.c1, rt0.c2 HAVING ((COUNT(COUNT(AVG(COUNT(*))))) ISNULL);
SELECT TOTAL((0.9984144201420897 IN ()) COLLATE NOCASE) FROM rt0;
SELECT * FROM rt1, rt0;
SELECT ALL * FROM rt1, rt0 WHERE (rt0.c2) UNION ALL SELECT * FROM rt1, rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT * FROM rt1, rt0 WHERE (((rt0.c2) ISNULL));
SELECT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (NULL) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt1.c0, rt0.c0 FROM rt1, rt0 GROUP BY rt0.c1, rt0.c2, rt1.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt1.c0, rt0.c0 FROM rt1, rt0 WHERE ('l㡎') GROUP BY rt0.c1, rt0.c2, rt1.c0, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt1.c0, rt0.c0 FROM rt1, rt0 WHERE ((NOT ('l㡎'))) GROUP BY rt0.c1, rt0.c2, rt1.c0, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt1.c0, rt0.c0 FROM rt1, rt0 WHERE ((('l㡎') ISNULL)) GROUP BY rt0.c1, rt0.c2, rt1.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt1.c0, rt0.c0 FROM rt1, rt0 GROUP BY rt0.c1, rt0.c2, rt1.c0, rt0.c0;
SELECT rt1.c1, rt0.c2 FROM rt1 NATURAL JOIN rt0 GROUP BY rt1.c1, rt0.c2;
SELECT ALL rt1.c1, rt0.c2 FROM rt1 NATURAL JOIN rt0 GROUP BY rt1.c1, rt0.c2 HAVING rt1.c0 UNION ALL SELECT rt1.c1, rt0.c2 FROM rt1 NATURAL JOIN rt0 GROUP BY rt1.c1, rt0.c2 HAVING (NOT (rt1.c0)) UNION ALL SELECT rt1.c1, rt0.c2 FROM rt1 NATURAL JOIN rt0 GROUP BY rt1.c1, rt0.c2 HAVING ((rt1.c0) ISNULL);
SELECT rt1.c1, rt0.c2 FROM rt1 NATURAL JOIN rt0 GROUP BY rt1.c1, rt0.c2;
SELECT ALL rt1.c1, rt0.c2 FROM rt1 NATURAL JOIN rt0 GROUP BY rt1.c1, rt0.c2 HAVING rt1.c0 UNION ALL SELECT rt1.c1, rt0.c2 FROM rt1 NATURAL JOIN rt0 GROUP BY rt1.c1, rt0.c2 HAVING (NOT (rt1.c0)) UNION ALL SELECT rt1.c1, rt0.c2 FROM rt1 NATURAL JOIN rt0 GROUP BY rt1.c1, rt0.c2 HAVING ((rt1.c0) ISNULL);
SELECT rt1.c1, rt0.c2 FROM rt1 NATURAL JOIN rt0 GROUP BY rt1.c1, rt0.c2;
SELECT ALL rt1.c0 FROM rt1;
SELECT ALL rt1.c0 FROM rt1 WHERE ((NOT (LIKELY(DISTINCT rt1.c2)))) UNION ALL SELECT rt1.c0 FROM rt1 WHERE ((NOT ((NOT (LIKELY(DISTINCT rt1.c2)))))) UNION ALL SELECT ALL rt1.c0 FROM rt1 WHERE ((((NOT (LIKELY(DISTINCT rt1.c2)))) ISNULL));
SELECT ALL rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c1 FROM rt0 FULL OUTER JOIN rt1 ON ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) ISNULL);
SELECT DISTINCT rt1.c2, rt1.c1 FROM rt0 FULL OUTER JOIN rt1 ON ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) ISNULL) WHERE (((rt1.c1)IS(x'9ef1'))) UNION SELECT DISTINCT rt1.c2, rt1.c1 FROM rt0 FULL OUTER JOIN rt1 ON ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) ISNULL) WHERE ((NOT (((rt1.c1)IS(x'9ef1'))))) UNION SELECT DISTINCT rt1.c2, rt1.c1 FROM rt0 FULL OUTER JOIN rt1 ON ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) ISNULL) WHERE (((((rt1.c1)IS(x'9ef1'))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1 FROM rt0 FULL OUTER JOIN rt1 ON ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) ISNULL);
SELECT rt0.c2, rt0.c1, rt1.c2, rt0.c0, rt1.c1 FROM rt0 FULL OUTER JOIN rt1 ON ((((rt1.c2) IS FALSE))>(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)) GROUP BY rt0.c2, rt0.c1, rt1.c2, rt0.c0, rt1.c1;
SELECT rt0.c2, rt0.c1, rt1.c2, rt0.c0, rt1.c1 FROM rt0 FULL OUTER JOIN rt1 ON ((((rt1.c2) IS FALSE))>(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)) WHERE ((LIKELY(DISTINCT rt1.c1) IN ())) GROUP BY rt0.c2, rt0.c1, rt1.c2, rt0.c0, rt1.c1 UNION SELECT rt0.c2, rt0.c1, rt1.c2, rt0.c0, rt1.c1 FROM rt0 FULL OUTER JOIN rt1 ON ((((rt1.c2) IS FALSE))>(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)) WHERE ((NOT ((LIKELY(DISTINCT rt1.c1) IN ())))) GROUP BY rt0.c2, rt0.c1, rt1.c2, rt0.c0, rt1.c1 UNION SELECT ALL rt0.c2, rt0.c1, rt1.c2, rt0.c0, rt1.c1 FROM rt0 FULL OUTER JOIN rt1 ON ((((rt1.c2) IS FALSE))>(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)) WHERE ((((LIKELY(DISTINCT rt1.c1) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt1.c2, rt0.c0, rt1.c1;
SELECT rt0.c2, rt0.c1, rt1.c2, rt0.c0, rt1.c1 FROM rt0 FULL OUTER JOIN rt1 ON ((((rt1.c2) IS FALSE))>(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)) GROUP BY rt0.c2, rt0.c1, rt1.c2, rt0.c0, rt1.c1;
SELECT ALL rt1.c1, rt1.c2, rt1.c0, rt0.c2 FROM rt0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, rt0.c2;
SELECT ALL rt1.c1, rt1.c2, rt1.c0, rt0.c2 FROM rt0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, rt0.c2 HAVING SUM(GROUP_CONCAT(rt0.c2)) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0, rt0.c2 FROM rt0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, rt0.c2 HAVING (NOT (SUM(GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0, rt0.c2 FROM rt0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, rt0.c2 HAVING ((SUM(GROUP_CONCAT(rt0.c2))) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE ((('' COLLATE NOCASE)IS NOT(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT ((('' COLLATE NOCASE)IS NOT(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((((('' COLLATE NOCASE)IS NOT(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT rt1.c1, rt0.c1, rt0.c2 FROM rt0, rt1;
SELECT DISTINCT rt1.c1, rt0.c1, rt0.c2 FROM rt0, rt1 WHERE ((0xffffffffb8a1818d IN ())) UNION SELECT DISTINCT rt1.c1, rt0.c1, rt0.c2 FROM rt0, rt1 WHERE ((NOT ((0xffffffffb8a1818d IN ())))) UNION SELECT DISTINCT rt1.c1, rt0.c1, rt0.c2 FROM rt0, rt1 WHERE ((((0xffffffffb8a1818d IN ())) ISNULL));
SELECT DISTINCT rt1.c1, rt0.c1, rt0.c2 FROM rt0, rt1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (CAST((NOT (rt0.c1)) AS BLOB)) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST((NOT (rt0.c1)) AS BLOB)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST((NOT (rt0.c1)) AS BLOB)) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt1.c0, rt1.c2 FROM rt0 FULL OUTER JOIN rt1 ON ((((rt0.c2))>((rt0.c2))) IN ()) GROUP BY rt0.c2, rt1.c0, rt1.c2;
SELECT rt0.c2, rt1.c0, rt1.c2 FROM rt0 FULL OUTER JOIN rt1 ON ((((rt0.c2))>((rt0.c2))) IN ()) GROUP BY rt0.c2, rt1.c0, rt1.c2 HAVING (~ ('둚86_n')) UNION ALL SELECT ALL rt0.c2, rt1.c0, rt1.c2 FROM rt0 FULL OUTER JOIN rt1 ON ((((rt0.c2))>((rt0.c2))) IN ()) GROUP BY rt0.c2, rt1.c0, rt1.c2 HAVING (NOT ((~ ('둚86_n')))) UNION ALL SELECT ALL rt0.c2, rt1.c0, rt1.c2 FROM rt0 FULL OUTER JOIN rt1 ON ((((rt0.c2))>((rt0.c2))) IN ()) GROUP BY rt0.c2, rt1.c0, rt1.c2 HAVING (((~ ('둚86_n'))) ISNULL);
SELECT rt0.c2, rt1.c0, rt1.c2 FROM rt0 FULL OUTER JOIN rt1 ON ((((rt0.c2))>((rt0.c2))) IN ()) GROUP BY rt0.c2, rt1.c0, rt1.c2;
SELECT rt0.c2, rt1.c0, rt1.c2 FROM rt0 FULL OUTER JOIN rt1 ON ((((rt0.c2))>((rt0.c2))) IN ()) GROUP BY rt0.c2, rt1.c0, rt1.c2 HAVING (~ ('둚86_n')) UNION ALL SELECT ALL rt0.c2, rt1.c0, rt1.c2 FROM rt0 FULL OUTER JOIN rt1 ON ((((rt0.c2))>((rt0.c2))) IN ()) GROUP BY rt0.c2, rt1.c0, rt1.c2 HAVING (NOT ((~ ('둚86_n')))) UNION ALL SELECT ALL rt0.c2, rt1.c0, rt1.c2 FROM rt0 FULL OUTER JOIN rt1 ON ((((rt0.c2))>((rt0.c2))) IN ()) GROUP BY rt0.c2, rt1.c0, rt1.c2 HAVING (((~ ('둚86_n'))) ISNULL);
SELECT rt0.c2, rt1.c0, rt1.c2 FROM rt0 FULL OUTER JOIN rt1 ON ((((rt0.c2))>((rt0.c2))) IN ()) GROUP BY rt0.c2, rt1.c0, rt1.c2;
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE ((((((+ (rt1.c1)))OR(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END)))AND(UPPER(DISTINCT rt1.c1)))) ORDER BY 'tp(oF*])䊑/'  NULLS FIRST, (((rt1.c2 IN ())) ISNULL) ASC, rt1.c1;
SELECT * FROM rt1 WHERE ((NOT ((((((+ (rt1.c1)))OR(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END)))AND(UPPER(DISTINCT rt1.c1)))))) ORDER BY 'tp(oF*])䊑/'  NULLS FIRST, (((rt1.c2 IN ())) ISNULL) ASC, rt1.c1;
SELECT ALL * FROM rt1 WHERE ((((((((+ (rt1.c1)))OR(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END)))AND(UPPER(DISTINCT rt1.c1)))) ISNULL)) ORDER BY 'tp(oF*])䊑/'  NULLS FIRST, (((rt1.c2 IN ())) ISNULL) ASC, rt1.c1;
SELECT * FROM rt1;
SELECT DISTINCT rt0.c2, rt1.c1, rt0.c0 FROM rt0, rt1;
SELECT DISTINCT rt0.c2, rt1.c1, rt0.c0 FROM rt0, rt1 WHERE ((- ((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) UNION SELECT DISTINCT rt0.c2, rt1.c1, rt0.c0 FROM rt0 NOT INDEXED, rt1 WHERE ((NOT ((- ((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))))) UNION SELECT DISTINCT rt0.c2, rt1.c1, rt0.c0 FROM rt0, rt1 WHERE ((((- ((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) ISNULL));
SELECT DISTINCT rt0.c2, rt1.c1, rt0.c0 FROM rt0, rt1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 WHERE ((((((NULL))>((rt1.c0)))) ISNULL)) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE ((NOT ((((((NULL))>((rt1.c0)))) ISNULL)))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE ((((((((NULL))>((rt1.c0)))) ISNULL)) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING MIN(((AVG(GROUP_CONCAT(rt1.c0))) NOT BETWEEN (rt1.c1) AND (AVG(MIN(COUNT(COUNT(AVG(COUNT(*))))))))) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (MIN(((AVG(GROUP_CONCAT(rt1.c0))) NOT BETWEEN (rt1.c1) AND (AVG(MIN(COUNT(COUNT(AVG(COUNT(*))))))))))) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((MIN(((AVG(GROUP_CONCAT(rt1.c0))) NOT BETWEEN (rt1.c1) AND (AVG(MIN(COUNT(COUNT(AVG(COUNT(*)))))))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((x'')OR('-933347080'))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((x'')OR('-933347080'))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((x'')OR('-933347080'))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (CAST(((rt0.c2)||(rt0.c0)) AS TEXT)) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST(((rt0.c2)||(rt0.c0)) AS TEXT)))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(((rt0.c2)||(rt0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT rt1.c1, rt1.c2 FROM rt0, rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt0, rt1 WHERE ((((rt1.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE, ((rt1.c0) NOT BETWEEN (0.9094369626575682) AND (rt0.c1)), ((rt1.c0)>>(rt1.c0)))) AND ((rt0.c0 COLLATE NOCASE, CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END, (((rt1.c2, rt0.c1, rt1.c0, '', rt1.c2))>((rt0.c0, rt1.c1, rt0.c0, rt0.c1, rt0.c2))))))) GROUP BY rt1.c1, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c2 FROM rt0, rt1 WHERE ((NOT ((((rt1.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE, ((rt1.c0) NOT BETWEEN (0.9094369626575682) AND (rt0.c1)), ((rt1.c0)>>(rt1.c0)))) AND ((rt0.c0 COLLATE NOCASE, CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END, (((rt1.c2, rt0.c1, rt1.c0, '', rt1.c2))>((rt0.c0, rt1.c1, rt0.c0, rt0.c1, rt0.c2))))))))) GROUP BY rt1.c1, rt1.c2 UNION SELECT rt1.c1, rt1.c2 FROM rt0, rt1 WHERE ((((((rt1.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE, ((rt1.c0) NOT BETWEEN (0.9094369626575682) AND (rt0.c1)), ((rt1.c0)>>(rt1.c0)))) AND ((rt0.c0 COLLATE NOCASE, CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END, (((rt1.c2, rt0.c1, rt1.c0, '', rt1.c2))>((rt0.c0, rt1.c1, rt0.c0, rt0.c1, rt0.c2))))))) ISNULL)) GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM rt0, rt1 GROUP BY rt1.c1, rt1.c2;
SELECT rt0.c2, rt0.c1 FROM rt1, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt1, rt0 GROUP BY rt0.c2, rt0.c1 HAVING COUNT(((((COUNT(rt1.c2))AND(rt0.c0)))AND(rt0.c2))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt1, rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (COUNT(((((COUNT(rt1.c2))AND(rt0.c0)))AND(rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt1, rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(((((COUNT(rt1.c2))AND(rt0.c0)))AND(rt0.c2)))) ISNULL);
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (TIME(rt1.c0 COLLATE NOCASE, CAST(rt1.c1 AS REAL), (((0x5dd895e2, rt1.c2, '-907305193')) NOT BETWEEN ((rt1.c1, rt1.c0, rt1.c0)) AND ((rt1.c0, rt1.c0, rt1.c0))))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (TIME(rt1.c0 COLLATE NOCASE, CAST(rt1.c1 AS REAL), (((0X5dd895e2, rt1.c2, '-907305193')) NOT BETWEEN ((rt1.c1, rt1.c0, rt1.c0)) AND ((rt1.c0, rt1.c0, rt1.c0))))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((TIME(rt1.c0 COLLATE NOCASE, CAST(rt1.c1 AS REAL), (((0X5dd895e2, rt1.c2, '-907305193')) NOT BETWEEN ((rt1.c1, rt1.c0, rt1.c0)) AND ((rt1.c0, rt1.c0, rt1.c0))))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt1.c0, rt0.c1, rt1.c2, rt1.c1 FROM rt0, rt1;
SELECT DISTINCT rt1.c0, rt0.c1, rt1.c2, rt1.c1 FROM rt0, rt1 WHERE ((((rt0.c2)AND(rt0.c0)) IN ((rt1.c0 IN (rt0.c0, rt1.c2))))) UNION SELECT DISTINCT rt1.c0, rt0.c1, rt1.c2, rt1.c1 FROM rt0, rt1 WHERE ((NOT ((((rt0.c2)AND(rt0.c0)) IN ((rt1.c0 IN (rt0.c0, rt1.c2))))))) UNION SELECT DISTINCT rt1.c0, rt0.c1, rt1.c2, rt1.c1 FROM rt0, rt1 WHERE ((((((rt0.c2)AND(rt0.c0)) IN ((rt1.c0 IN (rt0.c0, rt1.c2))))) ISNULL));
SELECT DISTINCT rt1.c0, rt0.c1, rt1.c2, rt1.c1 FROM rt0, rt1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE (rt1.c0) GROUP BY rt1.c0, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (rt1.c0))) GROUP BY rt1.c0, rt1.c1 UNION SELECT rt1.c0, rt1.c1 FROM rt1 WHERE (((rt1.c0) ISNULL)) GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt0.c0, rt0.c2, rt0.c1, rt1.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt1.c0, rt1.c1;
SELECT rt0.c0, rt0.c2, rt0.c1, rt1.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt1.c0, rt1.c1 HAVING TOTAL((GROUP_CONCAT(rt0.c1) IN (SUM(rt0.c0)))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, rt1.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt1.c0, rt1.c1 HAVING (NOT (TOTAL((GROUP_CONCAT(rt0.c1) IN (SUM(rt0.c0)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt1.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt1.c0, rt1.c1 HAVING ((TOTAL((GROUP_CONCAT(rt0.c1) IN (SUM(rt0.c0))))) ISNULL);
SELECT ALL rt1.c1, rt1.c2 FROM rt1;
SELECT rt1.c1, rt1.c2 FROM rt1 WHERE (((((rt1.c0)AND(rt1.c2))) IS FALSE)) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (((((rt1.c0)AND(rt1.c2))) IS FALSE)))) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 WHERE (((((((rt1.c0)AND(rt1.c2))) IS FALSE)) ISNULL));
SELECT ALL rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c2 FROM rt1, rt0;
SELECT DISTINCT rt1.c2 FROM rt1, rt0 WHERE (CAST(rt0.c0 AS BLOB)) UNION SELECT DISTINCT rt1.c2 FROM rt1, rt0 WHERE ((NOT (CAST(rt0.c0 AS BLOB)))) UNION SELECT DISTINCT rt1.c2 FROM rt1, rt0 WHERE (((CAST(rt0.c0 AS BLOB)) ISNULL));
SELECT DISTINCT rt1.c2 FROM rt1, rt0;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 WHERE (NULL) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE ((NOT (NULL))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE (((NULL) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING COUNT(MIN(rt1.c1)) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (COUNT(MIN(rt1.c1)))) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((COUNT(MIN(rt1.c1))) ISNULL);
SELECT rt1.c0 FROM rt1;
SELECT rt1.c0 FROM rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 END) NOT BETWEEN (rt1.c1) AND (((rt1.c0) IS FALSE)))) UNION ALL SELECT ALL rt1.c0 FROM rt1 WHERE ((NOT (((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 END) NOT BETWEEN (rt1.c1) AND (((rt1.c0) IS FALSE)))))) UNION ALL SELECT ALL rt1.c0 FROM rt1 WHERE (((((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 END) NOT BETWEEN (rt1.c1) AND (((rt1.c0) IS FALSE)))) ISNULL));
SELECT rt1.c0 FROM rt1;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (CAST((((rt0.c0, rt0.c1, rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, rt0.c2, 561719232, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c2))) AS INTEGER)) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST((((rt0.c0, rt0.c1, rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, rt0.c2, 561719232, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c2))) AS INTEGER)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST((((rt0.c0, rt0.c1, rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, rt0.c2, 561719232, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c2))) AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt1.c1, rt0.c1, rt0.c0, rt1.c0, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c1, rt0.c1, rt0.c0, rt1.c0, rt0.c2;
SELECT ALL rt1.c1, rt0.c1, rt0.c0, rt1.c0, rt0.c2 FROM rt1, rt0 WHERE (((((rt0.c2) NOTNULL))*(((rt1.c0)AND(rt0.c1))))) GROUP BY rt1.c1, rt0.c1, rt0.c0, rt1.c0, rt0.c2 UNION SELECT rt1.c1, rt0.c1, rt0.c0, rt1.c0, rt0.c2 FROM rt1, rt0 WHERE ((NOT (((((rt0.c2) NOTNULL))*(((rt1.c0)AND(rt0.c1))))))) GROUP BY rt1.c1, rt0.c1, rt0.c0, rt1.c0, rt0.c2 UNION SELECT ALL rt1.c1, rt0.c1, rt0.c0, rt1.c0, rt0.c2 FROM rt1, rt0 WHERE (((((((rt0.c2) NOTNULL))*(((rt1.c0)AND(rt0.c1))))) ISNULL)) GROUP BY rt1.c1, rt0.c1, rt0.c0, rt1.c0, rt0.c2;
SELECT rt1.c1, rt0.c1, rt0.c0, rt1.c0, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c1, rt0.c1, rt0.c0, rt1.c0, rt0.c2;
SELECT rt0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON (((rt0.c2 IN ())) NOT NULL) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON (((rt0.c2 IN ())) NOT NULL) GROUP BY rt0.c0 HAVING HEX(AVG(rt1.c2)) UNION ALL SELECT rt0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON (((rt0.c2 IN ())) NOT NULL) GROUP BY rt0.c0 HAVING (NOT (HEX(AVG(rt1.c2)))) UNION ALL SELECT ALL rt0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON (((rt0.c2 IN ())) NOT NULL) GROUP BY rt0.c0 HAVING ((HEX(AVG(rt1.c2))) ISNULL);
SELECT rt0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON (((rt0.c2 IN ())) NOT NULL) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON (((rt0.c2 IN ())) NOT NULL) GROUP BY rt0.c0 HAVING HEX(AVG(rt1.c2)) UNION ALL SELECT rt0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON (((rt0.c2 IN ())) NOT NULL) GROUP BY rt0.c0 HAVING (NOT (HEX(AVG(rt1.c2)))) UNION ALL SELECT ALL rt0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON (((rt0.c2 IN ())) NOT NULL) GROUP BY rt0.c0 HAVING ((HEX(AVG(rt1.c2))) ISNULL);
SELECT rt0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON (((rt0.c2 IN ())) NOT NULL) GROUP BY rt0.c0;
SELECT ALL MIN(SQLITE_COMPILEOPTION_GET(json_array(rt1.c2, rt1.c0))) FROM rt1;
SELECT ALL * FROM rt0, rt1;
SELECT * FROM rt0, rt1 WHERE (rt1.c2) UNION ALL SELECT * FROM rt0, rt1 WHERE ((NOT (rt1.c2))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE (((rt1.c2) ISNULL));
SELECT ALL * FROM rt0, rt1;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (CASE WHEN CASE rt0.c1  WHEN '31065085' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END THEN ((rt0.c1) NOT NULL) WHEN ((rt0.c2) NOT NULL) THEN rt0.c2 COLLATE BINARY WHEN ((0.7778996748565797)|(rt0.c1)) THEN rt0.c0 COLLATE NOCASE WHEN ((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)) THEN json_array_length(rt0.c2, rt0.c0) WHEN (rt0.c1 IN ()) THEN ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)) END) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN CASE rt0.c1  WHEN '31065085' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END THEN ((rt0.c1) NOT NULL) WHEN ((rt0.c2) NOT NULL) THEN rt0.c2 COLLATE BINARY WHEN ((0.7778996748565797)|(rt0.c1)) THEN rt0.c0 COLLATE NOCASE WHEN ((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)) THEN json_array_length(rt0.c2, rt0.c0) WHEN (rt0.c1 IN ()) THEN ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)) END))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE WHEN CASE rt0.c1  WHEN '31065085' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END THEN ((rt0.c1) NOT NULL) WHEN ((rt0.c2) NOT NULL) THEN rt0.c2 COLLATE BINARY WHEN ((0.7778996748565797)|(rt0.c1)) THEN rt0.c0 COLLATE NOCASE WHEN ((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)) THEN json_array_length(rt0.c2, rt0.c0) WHEN (rt0.c1 IN ()) THEN ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)) END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c0 GROUP BY rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c0 WHERE (CASE WHEN ((((((((rt0.c2)OR(rt1.c1)))OR(rt0.c2)))OR(rt1.c1)))AND(rt1.c0)) THEN rt1.c0 ELSE ((rt0.c0)IS(rt0.c2)) END) GROUP BY rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c0 WHERE ((NOT (CASE WHEN ((((((((rt0.c2)OR(rt1.c1)))OR(rt0.c2)))OR(rt1.c1)))AND(rt1.c0)) THEN rt1.c0 ELSE ((rt0.c0)IS(rt0.c2)) END))) GROUP BY rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c0 WHERE (((CASE WHEN ((((((((rt0.c2)OR(rt1.c1)))OR(rt0.c2)))OR(rt1.c1)))AND(rt1.c0)) THEN rt1.c0 ELSE ((rt0.c0)IS(rt0.c2)) END) ISNULL)) GROUP BY rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c0 GROUP BY rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt1.c2 FROM rt1, rt0 GROUP BY rt0.c2, rt1.c2;
SELECT ALL rt0.c2, rt1.c2 FROM rt1, rt0 GROUP BY rt0.c2, rt1.c2 HAVING 0.8142846452240499 UNION ALL SELECT rt0.c2, rt1.c2 FROM rt1, rt0 GROUP BY rt0.c2, rt1.c2 HAVING (NOT (0.8142846452240499)) UNION ALL SELECT ALL rt0.c2, rt1.c2 FROM rt1, rt0 GROUP BY rt0.c2, rt1.c2 HAVING ((0.8142846452240499) ISNULL);
SELECT ALL rt0.c2, rt1.c2 FROM rt1, rt0 GROUP BY rt0.c2, rt1.c2;
SELECT ALL rt0.c2, rt1.c2 FROM rt1, rt0 GROUP BY rt0.c2, rt1.c2 HAVING 0.8142846452240499 UNION ALL SELECT rt0.c2, rt1.c2 FROM rt1, rt0 GROUP BY rt0.c2, rt1.c2 HAVING (NOT (0.8142846452240499)) UNION ALL SELECT ALL rt0.c2, rt1.c2 FROM rt1, rt0 GROUP BY rt0.c2, rt1.c2 HAVING ((0.8142846452240499) ISNULL);
SELECT ALL rt0.c2, rt1.c2 FROM rt1, rt0 GROUP BY rt0.c2, rt1.c2;
SELECT rt1.c1 FROM rt1 FULL OUTER JOIN rt0 ON rt0.c0;
SELECT rt1.c1 FROM rt1 FULL OUTER JOIN rt0 ON rt0.c0 WHERE (NULL) UNION ALL SELECT ALL rt1.c1 FROM rt1 FULL OUTER JOIN rt0 ON rt0.c0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL rt1.c1 FROM rt1 FULL OUTER JOIN rt0 ON rt0.c0 WHERE (((NULL) ISNULL));
SELECT rt1.c1 FROM rt1 FULL OUTER JOIN rt0 ON rt0.c0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c0)!=(rt0.c2)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN '' THEN rt0.c2 WHEN rt0.c2 THEN x'ea11' ELSE rt0.c1 END THEN 'j읍葯' WHEN (NOT (rt0.c1)) THEN UPPER(DISTINCT rt0.c0) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c0)<>(rt0.c2)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN '' THEN rt0.c2 WHEN rt0.c2 THEN x'ea11' ELSE rt0.c1 END THEN 'j읍葯' WHEN (NOT (rt0.c1)) THEN UPPER(DISTINCT rt0.c0) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c0)!=(rt0.c2)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN '' THEN rt0.c2 WHEN rt0.c2 THEN x'ea11' ELSE rt0.c1 END THEN 'j읍葯' WHEN (NOT (rt0.c1)) THEN UPPER(DISTINCT rt0.c0) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 WHERE (((((CAST(rt1.c0 AS INTEGER))OR(((rt1.c1)>>(rt1.c1)))))OR((~ (rt1.c1))))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE ((NOT (((((CAST(rt1.c0 AS INTEGER))OR(((rt1.c1)>>(rt1.c1)))))OR((~ (rt1.c1))))))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE (((((((CAST(rt1.c0 AS INTEGER))OR(((rt1.c1)>>(rt1.c1)))))OR((~ (rt1.c1))))) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING GROUP_CONCAT(MIN(NULL)) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING (NOT (GROUP_CONCAT(MIN(NULL)))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING ((GROUP_CONCAT(MIN(NULL))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((COALESCE(-1.3271687E9, rt0.c1)) IS TRUE)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((COALESCE(-1.3271687E9, rt0.c1)) IS TRUE)))) UNION ALL SELECT * FROM rt0 WHERE (((((COALESCE(-1.3271687E9, rt0.c1)) IS TRUE)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE (rtreenode(((rt1.c1)<=(rt1.c2)), CAST(rt1.c0 AS TEXT))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT (rtreenode(((rt1.c1)<=(rt1.c2)), CAST(rt1.c0 AS TEXT))))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE (((rtreenode(((rt1.c1)<=(rt1.c2)), CAST(rt1.c0 AS TEXT))) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (CAST((((rt0.c2))>((rt0.c1))) AS NUMERIC)) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (CAST((((rt0.c2))>((rt0.c1))) AS NUMERIC)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((CAST((((rt0.c2))>((rt0.c1))) AS NUMERIC)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2, rt1.c1, rt1.c0 FROM rt0 CROSS JOIN rt1 ON CAST(((rt0.c2)+(rt1.c1)) AS TEXT) GROUP BY rt0.c2, rt1.c1, rt1.c0;
SELECT ALL rt0.c2, rt1.c1, rt1.c0 FROM rt0 CROSS JOIN rt1 ON CAST(((rt0.c2)+(rt1.c1)) AS TEXT) GROUP BY rt0.c2, rt1.c1, rt1.c0 HAVING 0.7667874230801476 UNION ALL SELECT rt0.c2, rt1.c1, rt1.c0 FROM rt0 CROSS JOIN rt1 ON CAST(((rt0.c2)+(rt1.c1)) AS TEXT) GROUP BY rt0.c2, rt1.c1, rt1.c0 HAVING (NOT (0.7667874230801476)) UNION ALL SELECT ALL rt0.c2, rt1.c1, rt1.c0 FROM rt0 CROSS JOIN rt1 ON CAST(((rt0.c2)+(rt1.c1)) AS TEXT) GROUP BY rt0.c2, rt1.c1, rt1.c0 HAVING ((0.7667874230801476) ISNULL);
SELECT ALL rt0.c2, rt1.c1, rt1.c0 FROM rt0 CROSS JOIN rt1 ON CAST(((rt0.c2)+(rt1.c1)) AS TEXT) GROUP BY rt0.c2, rt1.c1, rt1.c0;
SELECT ALL rt0.c2, rt1.c1, rt1.c0 FROM rt0 CROSS JOIN rt1 ON CAST(((rt0.c2)+(rt1.c1)) AS TEXT) GROUP BY rt0.c2, rt1.c1, rt1.c0 HAVING 0.7667874230801476 UNION ALL SELECT rt0.c2, rt1.c1, rt1.c0 FROM rt0 CROSS JOIN rt1 ON CAST(((rt0.c2)+(rt1.c1)) AS TEXT) GROUP BY rt0.c2, rt1.c1, rt1.c0 HAVING (NOT (0.7667874230801476)) UNION ALL SELECT ALL rt0.c2, rt1.c1, rt1.c0 FROM rt0 CROSS JOIN rt1 ON CAST(((rt0.c2)+(rt1.c1)) AS TEXT) GROUP BY rt0.c2, rt1.c1, rt1.c0 HAVING ((0.7667874230801476) ISNULL);
SELECT ALL rt0.c2, rt1.c1, rt1.c0 FROM rt0 CROSS JOIN rt1 ON CAST(((rt0.c2)+(rt1.c1)) AS TEXT) GROUP BY rt0.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (((((NULL)AND(CAST(rt1.c1 AS NUMERIC))))OR(CAST(rt1.c0 AS BLOB)))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (((((NULL)AND(CAST(rt1.c1 AS NUMERIC))))OR(CAST(rt1.c0 AS BLOB)))))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (((((((NULL)AND(CAST(rt1.c1 AS NUMERIC))))OR(CAST(rt1.c0 AS BLOB)))) ISNULL));
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c1, rt0.c2, rt0.c1 FROM rt1, rt0;
SELECT DISTINCT rt1.c1, rt0.c2, rt0.c1 FROM rt1, rt0 WHERE ((((((rt1.c2)AND(rt1.c0)))AND(rt0.c1)) IN ())) UNION SELECT DISTINCT rt1.c1, rt0.c2, rt0.c1 FROM rt1, rt0 WHERE ((NOT ((((((rt1.c2)AND(rt1.c0)))AND(rt0.c1)) IN ())))) UNION SELECT DISTINCT rt1.c1, rt0.c2, rt0.c1 FROM rt1, rt0 WHERE ((((((((rt1.c2)AND(rt1.c0)))AND(rt0.c1)) IN ())) ISNULL));
SELECT DISTINCT rt1.c1, rt0.c2, rt0.c1 FROM rt1, rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE NOCASE) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE NOCASE))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1 HAVING GROUP_CONCAT(COUNT(rt0.c0)) UNION ALL SELECT ALL rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(COUNT(rt0.c0)))) UNION ALL SELECT rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(COUNT(rt0.c0))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) IS TRUE) IN (((rt0.c2) NOT NULL), rt0.c0 COLLATE BINARY))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c1) IS TRUE) IN (((rt0.c2) NOT NULL), rt0.c0 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c1) IS TRUE) IN (((rt0.c2) NOT NULL), rt0.c0 COLLATE BINARY))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2, rt0.c2, rt0.c0 FROM rt1, rt0;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2, rt0.c2, rt0.c0 FROM rt1, rt0 WHERE (0.8935050845078866 COLLATE NOCASE) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2, rt0.c2, rt0.c0 FROM rt1, rt0 WHERE ((NOT (0.8935050845078866 COLLATE NOCASE))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2, rt0.c2, rt0.c0 FROM rt1, rt0 WHERE (((0.8935050845078866 COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2, rt0.c2, rt0.c0 FROM rt1, rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (CASE WHEN NULL THEN rt0.c2 COLLATE RTRIM END) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN NULL THEN rt0.c2 COLLATE RTRIM END))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((CASE WHEN NULL THEN rt0.c2 COLLATE RTRIM END) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING MAX((((rt0.c1))<>((rt0.c2)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MAX((((rt0.c1))!=((rt0.c2)))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((MAX((((rt0.c1))<>((rt0.c2))))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING MAX((((rt0.c1))<>((rt0.c2)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MAX((((rt0.c1))!=((rt0.c2)))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((MAX((((rt0.c1))<>((rt0.c2))))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c2) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt1.c2, rt0.c0, rt1.c1, rt1.c0, rt0.c2 FROM rt0, rt1;
SELECT DISTINCT rt1.c2, rt0.c0, rt1.c1, rt1.c0, rt0.c2 FROM rt0, rt1 WHERE (CAST(((rt1.c2) NOT BETWEEN ('-1869589549') AND (rt0.c2)) AS NUMERIC)) UNION SELECT DISTINCT rt1.c2, rt0.c0, rt1.c1, rt1.c0, rt0.c2 FROM rt0, rt1 WHERE ((NOT (CAST(((rt1.c2) NOT BETWEEN ('-1869589549') AND (rt0.c2)) AS NUMERIC)))) UNION SELECT DISTINCT rt1.c2, rt0.c0, rt1.c1, rt1.c0, rt0.c2 FROM rt0, rt1 WHERE (((CAST(((rt1.c2) NOT BETWEEN ('-1869589549') AND (rt0.c2)) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt1.c2, rt0.c0, rt1.c1, rt1.c0, rt0.c2 FROM rt0, rt1;
SELECT rt1.c0, rt1.c1, rt1.c2, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt0.c0;
SELECT rt1.c0, rt1.c1, rt1.c2, rt0.c0 FROM rt0, rt1 WHERE (CAST(CASE 0Xffffffff8826edc4  WHEN rt1.c0 THEN rt1.c1 END AS BLOB)) GROUP BY rt1.c0, rt1.c1, rt1.c2, rt0.c0 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt0.c0 FROM rt0, rt1 WHERE ((NOT (CAST(CASE 0xffffffff8826edc4  WHEN rt1.c0 THEN rt1.c1 END AS BLOB)))) GROUP BY rt1.c0, rt1.c1, rt1.c2, rt0.c0 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt0.c0 FROM rt0, rt1 WHERE (((CAST(CASE 0Xffffffff8826edc4  WHEN rt1.c0 THEN rt1.c1 END AS BLOB)) ISNULL)) GROUP BY rt1.c0, rt1.c1, rt1.c2, rt0.c0;
SELECT rt1.c0, rt1.c1, rt1.c2, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((((((MAX(COUNT(rt0.c1))) IS TRUE))AND(GROUP_CONCAT('4P'))))AND(AVG(SUM(MIN(GROUP_CONCAT(rt0.c1)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (((((((MAX(COUNT(rt0.c1))) IS TRUE))AND(GROUP_CONCAT('4P'))))AND(AVG(SUM(MIN(GROUP_CONCAT(rt0.c1)))))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((((((((MAX(COUNT(rt0.c1))) IS TRUE))AND(GROUP_CONCAT('4P'))))AND(AVG(SUM(MIN(GROUP_CONCAT(rt0.c1))))))) ISNULL);
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE (((rt1.c0)=(rt1.c2)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((rt1.c0)==(rt1.c2)) COLLATE RTRIM))) UNION ALL SELECT * FROM rt1 WHERE (((((rt1.c0)==(rt1.c2)) COLLATE RTRIM) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt0.c0, rt1.c0, rt0.c2, rt1.c2, rt0.c1, rt1.c1 FROM rt1, rt0;
SELECT DISTINCT rt0.c0, rt1.c0, rt0.c2, rt1.c2, rt0.c1, rt1.c1 FROM rt1, rt0 WHERE ((((((rt1.c0) NOT BETWEEN (x'') AND (rt0.c1)), '-997974134' COLLATE BINARY, ((rt0.c0)<=(rt0.c0))))<((((rt0.c2)-(rt0.c1)), ((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c1)), ((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt0.c0)))))) UNION SELECT DISTINCT rt0.c0, rt1.c0, rt0.c2, rt1.c2, rt0.c1, rt1.c1 FROM rt1, rt0 WHERE ((NOT ((((((rt1.c0) NOT BETWEEN (x'') AND (rt0.c1)), '-997974134' COLLATE BINARY, ((rt0.c0)<=(rt0.c0))))<((((rt0.c2)-(rt0.c1)), ((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c1)), ((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt0.c0)))))))) UNION SELECT DISTINCT rt0.c0, rt1.c0, rt0.c2, rt1.c2, rt0.c1, rt1.c1 FROM rt1, rt0 WHERE ((((((((rt1.c0) NOT BETWEEN (x'') AND (rt0.c1)), '-997974134' COLLATE BINARY, ((rt0.c0)<=(rt0.c0))))<((((rt0.c2)-(rt0.c1)), ((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c1)), ((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c0, rt1.c0, rt0.c2, rt1.c2, rt0.c1, rt1.c1 FROM rt1, rt0;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2))) NOTNULL)) GROUP BY rt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2))) NOTNULL)))) GROUP BY rt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE (((((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2))) NOTNULL)) ISNULL)) GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt0.c1, rt1.c0 FROM rt0, rt1 NOT INDEXED GROUP BY rt0.c1, rt1.c0;
SELECT rt0.c1, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c0 HAVING SUM(((COUNT(*)) NOT BETWEEN (AVG(rt0.c2)) AND (rt1.c0))) UNION ALL SELECT ALL rt0.c1, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c0 HAVING (NOT (SUM(((COUNT(*)) NOT BETWEEN (AVG(rt0.c2)) AND (rt1.c0))))) UNION ALL SELECT rt0.c1, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c0 HAVING ((SUM(((COUNT(*)) NOT BETWEEN (AVG(rt0.c2)) AND (rt1.c0)))) ISNULL);
SELECT ALL rt1.c2, rt0.c0, rt0.c1, rt1.c1, rt1.c0 FROM rt1, rt0;
SELECT ALL rt1.c2, rt0.c0, rt0.c1, rt1.c1, rt1.c0 FROM rt1 NOT INDEXED, rt0 WHERE (CASE WHEN rt0.c0 COLLATE NOCASE THEN ((((rt1.c0)OR(rt1.c2)))OR(NULL)) WHEN (((rt0.c0, rt1.c1, rt1.c2)) BETWEEN ((rt1.c0, '黒+g0W', rt1.c0)) AND ((rt0.c2, rt1.c2, rt1.c0))) THEN ((rt0.c1) ISNULL) WHEN ((rt1.c0)LIKE(rt1.c2)) THEN rt0.c0 COLLATE NOCASE ELSE TIME(rt0.c0, rt1.c2, rt0.c0) END) UNION ALL SELECT rt1.c2, rt0.c0, rt0.c1, rt1.c1, rt1.c0 FROM rt1, rt0 WHERE ((NOT (CASE WHEN rt0.c0 COLLATE NOCASE THEN ((((rt1.c0)OR(rt1.c2)))OR(NULL)) WHEN (((rt0.c0, rt1.c1, rt1.c2)) BETWEEN ((rt1.c0, '黒+g0W', rt1.c0)) AND ((rt0.c2, rt1.c2, rt1.c0))) THEN ((rt0.c1) ISNULL) WHEN ((rt1.c0)LIKE(rt1.c2)) THEN rt0.c0 COLLATE NOCASE ELSE TIME(rt0.c0, rt1.c2, rt0.c0) END))) UNION ALL SELECT ALL rt1.c2, rt0.c0, rt0.c1, rt1.c1, rt1.c0 FROM rt1, rt0 WHERE (((CASE WHEN rt0.c0 COLLATE NOCASE THEN ((((rt1.c0)OR(rt1.c2)))OR(NULL)) WHEN (((rt0.c0, rt1.c1, rt1.c2)) BETWEEN ((rt1.c0, '黒+g0W', rt1.c0)) AND ((rt0.c2, rt1.c2, rt1.c0))) THEN ((rt0.c1) ISNULL) WHEN ((rt1.c0)LIKE(rt1.c2)) THEN rt0.c0 COLLATE NOCASE ELSE TIME(rt0.c0, rt1.c2, rt0.c0) END) ISNULL));
SELECT ALL rt1.c2, rt0.c0, rt0.c1, rt1.c1, rt1.c0 FROM rt1, rt0;
SELECT DISTINCT rt1.c2, rt0.c1 FROM rt0, rt1;
SELECT DISTINCT rt1.c2, rt0.c1 FROM rt0, rt1 WHERE (rt0.c0) UNION SELECT DISTINCT rt1.c2, rt0.c1 FROM rt0, rt1 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt1.c2, rt0.c1 FROM rt0, rt1 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt1.c2, rt0.c1 FROM rt0, rt1;
SELECT rt0.c0, rt1.c2, rt1.c0, rt1.c1, rt0.c1 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c2, rt1.c0, rt1.c1, rt0.c1;
SELECT rt0.c0, rt1.c2, rt1.c0, rt1.c1, rt0.c1 FROM rt0, rt1 WHERE ((((rt1.c2)) NOT BETWEEN (((~ (rt0.c1)))) AND (((rt0.c2 IN ()))))) GROUP BY rt0.c0, rt1.c2, rt1.c0, rt1.c1, rt0.c1 UNION SELECT rt0.c0, rt1.c2, rt1.c0, rt1.c1, rt0.c1 FROM rt0, rt1 WHERE ((NOT ((((rt1.c2)) NOT BETWEEN (((~ (rt0.c1)))) AND (((rt0.c2 IN ()))))))) GROUP BY rt0.c0, rt1.c2, rt1.c0, rt1.c1, rt0.c1 UNION SELECT rt0.c0, rt1.c2, rt1.c0, rt1.c1, rt0.c1 FROM rt0, rt1 WHERE ((((((rt1.c2)) NOT BETWEEN (((~ (rt0.c1)))) AND (((rt0.c2 IN ()))))) ISNULL)) GROUP BY rt0.c0, rt1.c2, rt1.c0, rt1.c1, rt0.c1;
SELECT rt0.c0, rt1.c2, rt1.c0, rt1.c1, rt0.c1 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c2, rt1.c0, rt1.c1, rt0.c1;
SELECT ALL rt0.c2, rt1.c0, rt0.c1, rt1.c2, rt1.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c0, rt0.c1, rt1.c2, rt1.c1, rt0.c0;
SELECT rt0.c2, rt1.c0, rt0.c1, rt1.c2, rt1.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c0, rt0.c1, rt1.c2, rt1.c1, rt0.c0 HAVING ((AVG(MIN(rt0.c1)))&(((((GROUP_CONCAT(rt0.c0))AND(rt1.c1)))AND(MIN(rt0.c1))))) UNION ALL SELECT rt0.c2, rt1.c0, rt0.c1, rt1.c2, rt1.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c0, rt0.c1, rt1.c2, rt1.c1, rt0.c0 HAVING (NOT (((AVG(MIN(rt0.c1)))&(((((GROUP_CONCAT(rt0.c0))AND(rt1.c1)))AND(MIN(rt0.c1))))))) UNION ALL SELECT rt0.c2, rt1.c0, rt0.c1, rt1.c2, rt1.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c0, rt0.c1, rt1.c2, rt1.c1, rt0.c0 HAVING ((((AVG(MIN(rt0.c1)))&(((((GROUP_CONCAT(rt0.c0))AND(rt1.c1)))AND(MIN(rt0.c1)))))) ISNULL);
SELECT MIN((((rt0.c0)>(rt0.c1)) IN ())) FROM rt1, rt0 ORDER BY ((((rt0.c2)%(rt0.c1))) NOT BETWEEN (((rt0.c2)AND(rt0.c0))) AND (rt1.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT rt1.c0, rt1.c1 FROM rt1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE (((((rt1.c1 COLLATE NOCASE)OR((rt1.c2 IN ()))))OR(LIKELIHOOD(x'1a14', 0.9187777799354845)))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (((((rt1.c1 COLLATE NOCASE)OR((rt1.c2 IN ()))))OR(LIKELIHOOD(x'1a14', 0.9187777799354845)))))) UNION ALL SELECT rt1.c0, rt1.c1 FROM rt1 WHERE (((((((rt1.c1 COLLATE NOCASE)OR((rt1.c2 IN ()))))OR(LIKELIHOOD(x'1a14', 0.9187777799354845)))) ISNULL));
SELECT rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0 WHERE ((((~ (rt1.c1))) IS FALSE)) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((NOT ((((~ (rt1.c1))) IS FALSE)))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((((((~ (rt1.c1))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt1, rt0;
SELECT ALL rt1.c1 FROM rt1 FULL OUTER JOIN rt0 ON (~ ((rt0.c1 IN ()))) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 FULL OUTER JOIN rt0 ON (~ ((rt0.c1 IN ()))) WHERE ((CASE WHEN 'y,' THEN rt1.c0 ELSE rt1.c0 END IN ())) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 FULL OUTER JOIN rt0 ON (~ ((rt0.c1 IN ()))) WHERE ((NOT ((CASE WHEN 'y,' THEN rt1.c0 ELSE rt1.c0 END IN ())))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 FULL OUTER JOIN rt0 ON (~ ((rt0.c1 IN ()))) WHERE ((((CASE WHEN 'y,' THEN rt1.c0 ELSE rt1.c0 END IN ())) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 FULL OUTER JOIN rt0 ON (~ ((rt0.c1 IN ()))) GROUP BY rt1.c1;
SELECT rt1.c0 FROM rt0, rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt0, rt1 GROUP BY rt1.c0 HAVING ((((LIKELIHOOD(rt0.c2, 0.9261563965437415))AND(MIN(TOTAL(COUNT(*))))))AND((((SUM(TOTAL(SUM(MAX(GROUP_CONCAT(AVG(SUM(MAX(NULL)))))))), TOTAL(MIN(AVG(COUNT(*)))), COUNT(COUNT('#	/r')), rt0.c0, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c1, rt1.c1, rt1.c2)) AND ((rt0.c2, rt1.c1, GROUP_CONCAT(GROUP_CONCAT(SUM(COUNT(rt1.c0)))), MIN(COUNT(COUNT(*))), NULL))))) UNION ALL SELECT rt1.c0 FROM rt0, rt1 GROUP BY rt1.c0 HAVING (NOT (((((LIKELIHOOD(rt0.c2, 0.9261563965437415))AND(MIN(TOTAL(COUNT(*))))))AND((((SUM(TOTAL(SUM(MAX(GROUP_CONCAT(AVG(SUM(MAX(NULL)))))))), TOTAL(MIN(AVG(COUNT(*)))), COUNT(COUNT('#	/r')), rt0.c0, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c1, rt1.c1, rt1.c2)) AND ((rt0.c2, rt1.c1, GROUP_CONCAT(GROUP_CONCAT(SUM(COUNT(rt1.c0)))), MIN(COUNT(COUNT(*))), NULL))))))) UNION ALL SELECT ALL rt1.c0 FROM rt0, rt1 GROUP BY rt1.c0 HAVING ((((((LIKELIHOOD(rt0.c2, 0.9261563965437415))AND(MIN(TOTAL(COUNT(*))))))AND((((SUM(TOTAL(SUM(MAX(GROUP_CONCAT(AVG(SUM(MAX(NULL)))))))), TOTAL(MIN(AVG(COUNT(*)))), COUNT(COUNT('#	/r')), rt0.c0, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c1, rt1.c1, rt1.c2)) AND ((rt0.c2, rt1.c1, GROUP_CONCAT(GROUP_CONCAT(SUM(COUNT(rt1.c0)))), MIN(COUNT(COUNT(*))), NULL)))))) ISNULL);
SELECT ALL * FROM rt0, rt1;
SELECT ALL * FROM rt0, rt1 WHERE (((((rt1.c2) ISNULL))=(CASE WHEN rt1.c0 THEN rt1.c2 END))) UNION ALL SELECT * FROM rt0, rt1 WHERE ((NOT (((((rt1.c2) ISNULL))=(CASE WHEN rt1.c0 THEN rt1.c2 END))))) UNION ALL SELECT * FROM rt0, rt1 WHERE (((((((rt1.c2) ISNULL))==(CASE WHEN rt1.c0 THEN rt1.c2 END))) ISNULL));
SELECT ALL * FROM rt0, rt1;
SELECT DISTINCT rt1.c1, rt0.c2, rt1.c0 FROM rt1, rt0;
SELECT DISTINCT rt1.c1, rt0.c2, rt1.c0 FROM rt1, rt0 WHERE (0.5125947532355619) UNION SELECT DISTINCT rt1.c1, rt0.c2, rt1.c0 FROM rt1, rt0 WHERE ((NOT (0.5125947532355619))) UNION SELECT DISTINCT rt1.c1, rt0.c2, rt1.c0 FROM rt1, rt0 WHERE (((0.5125947532355619) ISNULL));
SELECT DISTINCT rt1.c1, rt0.c2, rt1.c0 FROM rt1, rt0;
SELECT ALL rt0.c0, rt1.c1, rt0.c2, rt1.c2, rt0.c1 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c1, rt0.c2, rt1.c2, rt0.c1;
SELECT ALL rt0.c0, rt1.c1, rt0.c2, rt1.c2, rt0.c1 FROM rt0, rt1 WHERE ((((+ (rt0.c2))) NOTNULL)) GROUP BY rt0.c0, rt1.c1, rt0.c2, rt1.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt1.c1, rt0.c2, rt1.c2, rt0.c1 FROM rt0, rt1 WHERE ((NOT ((((+ (rt0.c2))) NOTNULL)))) GROUP BY rt0.c0, rt1.c1, rt0.c2, rt1.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt1.c1, rt0.c2, rt1.c2, rt0.c1 FROM rt0, rt1 WHERE ((((((+ (rt0.c2))) NOTNULL)) ISNULL)) GROUP BY rt0.c0, rt1.c1, rt0.c2, rt1.c2, rt0.c1;
SELECT ALL rt0.c0, rt1.c1, rt0.c2, rt1.c2, rt0.c1 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c1, rt0.c2, rt1.c2, rt0.c1;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c1 FROM rt1;
SELECT rt1.c1 FROM rt1 WHERE ((-1.131252418E9 IN (rt1.c0)) COLLATE BINARY) UNION ALL SELECT ALL rt1.c1 FROM rt1 WHERE ((NOT ((-1.131252418E9 IN (rt1.c0)) COLLATE BINARY))) UNION ALL SELECT rt1.c1 FROM rt1 WHERE ((((-1.131252418E9 IN (rt1.c0)) COLLATE BINARY) ISNULL));
SELECT rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (CASE rt1.c2  WHEN rt1.c0 THEN NULL ELSE '1793043263' END COLLATE RTRIM) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (CASE rt1.c2  WHEN rt1.c0 THEN NULL ELSE '1793043263' END COLLATE RTRIM))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (((CASE rt1.c2  WHEN rt1.c0 THEN NULL ELSE '1793043263' END COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT ALL rt1.c2, rt0.c1, rt0.c0 FROM rt1 RIGHT OUTER JOIN rt0 ON COALESCE(DISTINCT ((NULL) BETWEEN (rt0.c2) AND (rt0.c2)), CAST(rt0.c2 AS INTEGER)) GROUP BY rt1.c2, rt0.c1, rt0.c0;
SELECT ALL rt1.c2, rt0.c1, rt0.c0 FROM rt1 RIGHT OUTER JOIN rt0 ON COALESCE(DISTINCT ((NULL) BETWEEN (rt0.c2) AND (rt0.c2)), CAST(rt0.c2 AS INTEGER)) WHERE ((((rt1.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c0))) COLLATE NOCASE) GROUP BY rt1.c2, rt0.c1, rt0.c0 UNION SELECT rt1.c2, rt0.c1, rt0.c0 FROM rt1 RIGHT OUTER JOIN rt0 ON COALESCE(DISTINCT ((NULL) BETWEEN (rt0.c2) AND (rt0.c2)), CAST(rt0.c2 AS INTEGER)) WHERE ((NOT ((((rt1.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c0))) COLLATE NOCASE))) GROUP BY rt1.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt1.c2, rt0.c1, rt0.c0 FROM rt1 RIGHT OUTER JOIN rt0 ON COALESCE(DISTINCT ((NULL) BETWEEN (rt0.c2) AND (rt0.c2)), CAST(rt0.c2 AS INTEGER)) WHERE ((((((rt1.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c0))) COLLATE NOCASE) ISNULL)) GROUP BY rt1.c2, rt0.c1, rt0.c0;
SELECT ALL rt1.c2, rt0.c1, rt0.c0 FROM rt1 RIGHT OUTER JOIN rt0 ON COALESCE(DISTINCT ((NULL) BETWEEN (rt0.c2) AND (rt0.c2)), CAST(rt0.c2 AS INTEGER)) GROUP BY rt1.c2, rt0.c1, rt0.c0;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING AVG(((rt1.c1)IS NOT(COUNT(*)))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING (NOT (AVG(((rt1.c1)IS NOT(COUNT(*)))))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING ((AVG(((rt1.c1)IS NOT(COUNT(*))))) ISNULL);
SELECT rt1.c1, rt1.c0 FROM rt1;
SELECT rt1.c1, rt1.c0 FROM rt1 WHERE (((CAST(rt1.c2 AS REAL)) BETWEEN (((((rt1.c0)AND(rt1.c1)))OR(rt1.c2))) AND (LOWER(rt1.c1)))) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (((CAST(rt1.c2 AS REAL)) BETWEEN (((((rt1.c0)AND(rt1.c1)))OR(rt1.c2))) AND (LOWER(rt1.c1)))))) UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1 WHERE (((((CAST(rt1.c2 AS REAL)) BETWEEN (((((rt1.c0)AND(rt1.c1)))OR(rt1.c2))) AND (LOWER(rt1.c1)))) ISNULL));
SELECT rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((CAST(rt0.c2 AS NUMERIC)) NOT NULL)) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS NUMERIC)) NOT NULL)))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((CAST(rt0.c2 AS NUMERIC)) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt1, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt1, rt0 WHERE (CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c1)%(rt0.c2)) END) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt1, rt0 WHERE ((NOT (CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c1)%(rt0.c2)) END))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt1, rt0 WHERE (((CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c1)%(rt0.c2)) END) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt1, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING COUNT(COUNT(TOTAL(0.08588320490141166))) UNION ALL SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING (NOT (COUNT(COUNT(TOTAL(0.08588320490141166))))) UNION ALL SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING ((COUNT(COUNT(TOTAL(0.08588320490141166)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND ('彌⑲S5fx'))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END) AND (rt0.c2))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c1) AND ('彌⑲S5fx'))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END) AND (rt0.c2))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND ('彌⑲S5fx'))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END) AND (rt0.c2))) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((~ (rt0.c2))) IS TRUE)) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((~ (rt0.c2))) IS TRUE)))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((~ (rt0.c2))) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 WHERE (((CASE WHEN '-1195580290' THEN rt1.c2 END) BETWEEN ((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((NULL)))) AND ((rt1.c2 IN (rt1.c1))))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE ((NOT (((CASE WHEN '-1195580290' THEN rt1.c2 END) BETWEEN ((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((NULL)))) AND ((rt1.c2 IN (rt1.c1))))))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE (((((CASE WHEN '-1195580290' THEN rt1.c2 END) BETWEEN ((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((NULL)))) AND ((rt1.c2 IN (rt1.c1))))) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c0;
SELECT rt1.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c0 HAVING MAX(((rt1.c0) IS TRUE)) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c0 HAVING (NOT (MAX(((rt1.c0) IS TRUE)))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c0 HAVING ((MAX(((rt1.c0) IS TRUE))) ISNULL);
SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c0;
SELECT rt1.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c0 HAVING MAX(((rt1.c0) IS TRUE)) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c0 HAVING (NOT (MAX(((rt1.c0) IS TRUE)))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c0 HAVING ((MAX(((rt1.c0) IS TRUE))) ISNULL);
SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c0;
SELECT * FROM rt0, rt1;
SELECT ALL * FROM rt0, rt1 WHERE (((((0.5945293257579481) NOTNULL)) IS FALSE)) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE ((NOT (((((0.5945293257579481) NOTNULL)) IS FALSE)))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE (((((((0.5945293257579481) NOTNULL)) IS FALSE)) ISNULL));
SELECT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE (((((rt0.c2)OR(rt0.c1)))==((((rt0.c1, rt1.c1, rt0.c0, rt1.c0, rt1.c1))>((rt1.c2, rt1.c2, rt1.c1, rt0.c0, rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT (((((rt0.c2)OR(rt0.c1)))==((((rt0.c1, rt1.c1, rt0.c0, rt1.c0, rt1.c1))>((rt1.c2, rt1.c2, rt1.c1, rt0.c0, rt0.c1)))))))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE (((((((rt0.c2)OR(rt0.c1)))=((((rt0.c1, rt1.c1, rt0.c0, rt1.c0, rt1.c1))>((rt1.c2, rt1.c2, rt1.c1, rt0.c0, rt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT rt1.c2, rt0.c1, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c1, rt0.c2;
SELECT ALL rt1.c2, rt0.c1, rt0.c2 FROM rt1, rt0 WHERE (ROUND(((((rt0.c2)OR(rt1.c0)))AND(rt1.c1)), CAST(rt0.c2 AS REAL))) GROUP BY rt1.c2, rt0.c1, rt0.c2 UNION SELECT rt1.c2, rt0.c1, rt0.c2 FROM rt1, rt0 WHERE ((NOT (ROUND(((((rt0.c2)OR(rt1.c0)))AND(rt1.c1)), CAST(rt0.c2 AS REAL))))) GROUP BY rt1.c2, rt0.c1, rt0.c2 UNION SELECT rt1.c2, rt0.c1, rt0.c2 FROM rt1, rt0 WHERE (((ROUND(((((rt0.c2)OR(rt1.c0)))AND(rt1.c1)), CAST(rt0.c2 AS REAL))) ISNULL)) GROUP BY rt1.c2, rt0.c1, rt0.c2;
SELECT rt1.c2, rt0.c1, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c1, rt0.c2;
SELECT ALL rt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt1 INNER JOIN rt0 ON LIKELIHOOD(DISTINCT (((rt1.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))), 0.8685288638399534) GROUP BY rt1.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt1 INNER JOIN rt0 ON LIKELIHOOD(DISTINCT (((rt1.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))), 0.8685288638399534) GROUP BY rt1.c0, rt0.c0, rt0.c2, rt0.c1 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL rt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt1 INNER JOIN rt0 ON LIKELIHOOD(DISTINCT (((rt1.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))), 0.8685288638399534) GROUP BY rt1.c0, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT rt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt1 INNER JOIN rt0 ON LIKELIHOOD(DISTINCT (((rt1.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))), 0.8685288638399534) GROUP BY rt1.c0, rt0.c0, rt0.c2, rt0.c1 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (((CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt0.c1 END))<((((rt1.c0) IS TRUE))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON (((CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt0.c1 END))<((((rt1.c0) IS TRUE)))) WHERE ((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((0xe7b7c01))))&((('428557970') BETWEEN (rt0.c1) AND (rt1.c0))))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON (((CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt0.c1 END))<((((rt1.c0) IS TRUE)))) WHERE ((NOT ((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((0Xe7b7c01))))&((('428557970') BETWEEN (rt0.c1) AND (rt1.c0))))))) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (((CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt0.c1 END))<((((rt1.c0) IS TRUE)))) WHERE ((((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((0Xe7b7c01))))&((('428557970') BETWEEN (rt0.c1) AND (rt1.c0))))) ISNULL));
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (((CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt0.c1 END))<((((rt1.c0) IS TRUE))));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((((0.5982257419901277)OR(rt0.c0)))OR(rt0.c1))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c1)>=(rt0.c1))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((((((0.5982257419901277)OR(rt0.c0)))OR(rt0.c1))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c1)>=(rt0.c1))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((((((0.5982257419901277)OR(rt0.c0)))OR(rt0.c1))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c1)>=(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt1.c0, rt0.c1, rt0.c2 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt1.c0, rt0.c1, rt0.c2 FROM rt0, rt1 WHERE (json((NOT (rt1.c2)))) GROUP BY rt0.c0, rt1.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt1.c0, rt0.c1, rt0.c2 FROM rt0, rt1 WHERE ((NOT (json((NOT (rt1.c2)))))) GROUP BY rt0.c0, rt1.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt1.c0, rt0.c1, rt0.c2 FROM rt0, rt1 WHERE (((json((NOT (rt1.c2)))) ISNULL)) GROUP BY rt0.c0, rt1.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt1.c0, rt0.c1, rt0.c2 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c0, rt0.c1, rt0.c2;
SELECT rt0.c2, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt0.c0;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE (UNLIKELY(((rt1.c2) NOT BETWEEN (x'') AND (rt1.c2)))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (UNLIKELY(((rt1.c2) NOT BETWEEN (x'') AND (rt1.c2)))))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE (((UNLIKELY(((rt1.c2) NOT BETWEEN (x'') AND (rt1.c2)))) ISNULL));
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT * FROM rt1 INNER JOIN rt0 ON rt0.c1;
SELECT DISTINCT * FROM rt1 INNER JOIN rt0 ON rt0.c1 WHERE ((((rt1.c2)IS NOT('')) IN ())) UNION SELECT DISTINCT * FROM rt1 INNER JOIN rt0 ON rt0.c1 WHERE ((NOT ((((rt1.c2)IS NOT('')) IN ())))) UNION SELECT DISTINCT * FROM rt1 INNER JOIN rt0 ON rt0.c1 WHERE ((((((rt1.c2)IS NOT('')) IN ())) ISNULL));
SELECT DISTINCT * FROM rt1 INNER JOIN rt0 ON rt0.c1;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (((((((((rt1.c1)OR('''.R*fb')))OR(json_array(rt1.c0, rt1.c0, rt1.c0, rt1.c0))))AND(rt1.c2 COLLATE RTRIM)))OR((rt1.c2 IN ())))) GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (((((((((rt1.c1)OR('''.R*fb')))OR(json_array(rt1.c0, rt1.c0, rt1.c0, rt1.c0))))AND(rt1.c2 COLLATE RTRIM)))OR((rt1.c2 IN ())))))) GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (((((((((((rt1.c1)OR('''.R*fb')))OR(json_array(rt1.c0, rt1.c0, rt1.c0, rt1.c0))))AND(rt1.c2 COLLATE RTRIM)))OR((rt1.c2 IN ())))) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING CAST((rt0.c0 IN ()) AS REAL) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (CAST((rt0.c0 IN ()) AS REAL))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((CAST((rt0.c0 IN ()) AS REAL)) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING CAST((rt0.c0 IN ()) AS REAL) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (CAST((rt0.c0 IN ()) AS REAL))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((CAST((rt0.c0 IN ()) AS REAL)) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (LIKELIHOOD((NULL IN ()), 0.21220558966887348)) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (LIKELIHOOD((NULL IN ()), 0.21220558966887348)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((LIKELIHOOD((NULL IN ()), 0.21220558966887348)) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (rt1.c0) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (rt1.c0))) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (((rt1.c0) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 WHERE (CASE WHEN CAST(rt1.c0 AS NUMERIC) THEN SQLITE_VERSION() END) GROUP BY rt1.c0, rt1.c2 UNION SELECT rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (CASE WHEN CAST(rt1.c0 AS NUMERIC) THEN SQLITE_VERSION() END))) GROUP BY rt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE (((CASE WHEN CAST(rt1.c0 AS NUMERIC) THEN SQLITE_VERSION() END) ISNULL)) GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING TOTAL(COUNT(rt0.c1)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (TOTAL(COUNT(rt0.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((TOTAL(COUNT(rt0.c1))) ISNULL);
SELECT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE ((rt0.c1 COLLATE RTRIM IN (CAST(rt0.c0 AS BLOB)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((rt0.c1 COLLATE RTRIM IN (CAST(rt0.c0 AS BLOB)))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((((rt0.c1 COLLATE RTRIM IN (CAST(rt0.c0 AS BLOB)))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CAST((rt1.c1 IN ()) AS REAL)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CAST((rt1.c1 IN ()) AS REAL)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CAST((rt1.c1 IN ()) AS REAL)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((~ (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((~ (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((((~ (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, rt1 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, rt1 GROUP BY rt0.c1, rt0.c2 HAVING ((COUNT(*))+((+ (rt1.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0, rt1 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (((COUNT(*))+((+ (rt1.c1)))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0, rt1 GROUP BY rt0.c1, rt0.c2 HAVING ((((COUNT(*))+((+ (rt1.c1))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0, rt1 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, rt1 GROUP BY rt0.c1, rt0.c2 HAVING ((COUNT(*))+((+ (rt1.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0, rt1 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (((COUNT(*))+((+ (rt1.c1)))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0, rt1 GROUP BY rt0.c1, rt0.c2 HAVING ((((COUNT(*))+((+ (rt1.c1))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0, rt1 GROUP BY rt0.c1, rt0.c2;
SELECT rt1.c1 FROM rt1;
SELECT rt1.c1 FROM rt1 WHERE ((('') IS FALSE)) UNION ALL SELECT ALL rt1.c1 FROM rt1 WHERE ((NOT ((('') IS FALSE)))) UNION ALL SELECT rt1.c1 FROM rt1 WHERE ((((('') IS FALSE)) ISNULL));
SELECT rt1.c1 FROM rt1;
SELECT DISTINCT * FROM rt1 FULL OUTER JOIN rt0 ON CAST((0.9140967597733844 IN (rt1.c0)) AS TEXT);
SELECT DISTINCT * FROM rt1 FULL OUTER JOIN rt0 ON CAST((0.9140967597733844 IN (rt1.c0)) AS TEXT) WHERE (((((rt1.c2)%(rt1.c0)))*(((rt0.c2)||(0.30204427085034524))))) UNION SELECT DISTINCT * FROM rt1 FULL OUTER JOIN rt0 ON CAST((0.9140967597733844 IN (rt1.c0)) AS TEXT) WHERE ((NOT (((((rt1.c2)%(rt1.c0)))*(((rt0.c2)||(0.30204427085034524))))))) UNION SELECT DISTINCT * FROM rt1 FULL OUTER JOIN rt0 ON CAST((0.9140967597733844 IN (rt1.c0)) AS TEXT) WHERE (((((((rt1.c2)%(rt1.c0)))*(((rt0.c2)||(0.30204427085034524))))) ISNULL));
SELECT DISTINCT * FROM rt1 FULL OUTER JOIN rt0 ON CAST((0.9140967597733844 IN (rt1.c0)) AS TEXT);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0))) NOTNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0))) NOTNULL)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0))) NOTNULL)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt0.c0 HAVING GROUP_CONCAT(CASE GROUP_CONCAT(COUNT(NULL))  WHEN rt1.c1 THEN rt0.c0 END) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT(CASE GROUP_CONCAT(COUNT(NULL))  WHEN rt1.c1 THEN rt0.c0 END))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(CASE GROUP_CONCAT(COUNT(NULL))  WHEN rt1.c1 THEN rt0.c0 END)) ISNULL);
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (CASE CAST(NULL AS NUMERIC)  WHEN (+ (rt1.c1)) THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) ELSE ((rt1.c2)|(rt1.c2)) END) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (CASE CAST(NULL AS NUMERIC)  WHEN (+ (rt1.c1)) THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) ELSE ((rt1.c2)|(rt1.c2)) END))) UNION ALL SELECT * FROM rt1 WHERE (((CASE CAST(NULL AS NUMERIC)  WHEN (+ (rt1.c1)) THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) ELSE ((rt1.c2)|(rt1.c2)) END) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0 WHERE (LIKE(('-1197192820' IN ()), (((rt0.c2, 0.5611986864662537, rt0.c1))>((rt1.c2, rt0.c1, 0.30042809794339487))))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((NOT (LIKE(('-1197192820' IN ()), (((rt0.c2, 0.5611986864662537, rt0.c1))>((rt1.c2, rt0.c1, 0.30042809794339487))))))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE (((LIKE(('-1197192820' IN ()), (((rt0.c2, 0.5611986864662537, rt0.c1))>((rt1.c2, rt0.c1, 0.30042809794339487))))) ISNULL));
SELECT DISTINCT * FROM rt1, rt0;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE (((json_patch(0.44154331466024954, rt1.c2))|(((rt1.c1)OR(rt1.c2))))) GROUP BY rt1.c0, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (((json_patch(0.44154331466024954, rt1.c2))|(((rt1.c1)OR(rt1.c2))))))) GROUP BY rt1.c0, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE (((((json_patch(0.44154331466024954, rt1.c2))|(((rt1.c1)OR(rt1.c2))))) ISNULL)) GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c2, rt0.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c1, rt0.c0;
SELECT rt1.c2, rt0.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c1, rt0.c0 HAVING AVG(SUM(COUNT(rt0.c1))) UNION ALL SELECT rt1.c2, rt0.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c1, rt0.c0 HAVING (NOT (AVG(SUM(COUNT(rt0.c1))))) UNION ALL SELECT ALL rt1.c2, rt0.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c1, rt0.c0 HAVING ((AVG(SUM(COUNT(rt0.c1)))) ISNULL);
SELECT ALL * FROM rt0, rt1;
SELECT * FROM rt0, rt1 WHERE (rt0.c2) UNION ALL SELECT * FROM rt0, rt1 WHERE ((NOT (rt0.c2))) UNION ALL SELECT * FROM rt0, rt1 WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM rt0, rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (NULL) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt0.c2, rt0.c1, rt1.c2, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c2, rt0.c1, rt1.c2, rt1.c1;
SELECT ALL rt0.c2, rt0.c1, rt1.c2, rt1.c1 FROM rt1, rt0 WHERE (x'') GROUP BY rt0.c2, rt0.c1, rt1.c2, rt1.c1 UNION SELECT rt0.c2, rt0.c1, rt1.c2, rt1.c1 FROM rt1, rt0 WHERE ((NOT (x''))) GROUP BY rt0.c2, rt0.c1, rt1.c2, rt1.c1 UNION SELECT rt0.c2, rt0.c1, rt1.c2, rt1.c1 FROM rt1, rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c2, rt0.c1, rt1.c2, rt1.c1;
SELECT rt0.c2, rt0.c1, rt1.c2, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c2, rt0.c1, rt1.c2, rt1.c1;
SELECT rt1.c0, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c0, rt0.c0;
SELECT rt1.c0, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c0, rt0.c0 HAVING ((AVG(rt0.c2))GLOB(((TOTAL(AVG(AVG(rt1.c1))))+('0.2470031312912021')))) UNION ALL SELECT ALL rt1.c0, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c0, rt0.c0 HAVING (NOT (((AVG(rt0.c2))GLOB(((TOTAL(AVG(AVG(rt1.c1))))+('0.2470031312912021')))))) UNION ALL SELECT rt1.c0, rt0.c0 FROM rt1, rt0 GROUP BY rt1.c0, rt0.c0 HAVING ((((AVG(rt0.c2))GLOB(((TOTAL(AVG(AVG(rt1.c1))))+('0.2470031312912021'))))) ISNULL);
SELECT ALL * FROM rt1, rt0;
SELECT ALL * FROM rt1, rt0 WHERE (LIKELIHOOD(((rt1.c2)OR(rt1.c1)), 0.8117749940883024)) UNION ALL SELECT * FROM rt1, rt0 WHERE ((NOT (LIKELIHOOD(((rt1.c2)OR(rt1.c1)), 0.8117749940883024)))) UNION ALL SELECT * FROM rt1, rt0 WHERE (((LIKELIHOOD(((rt1.c2)OR(rt1.c1)), 0.8117749940883024)) ISNULL));
SELECT ALL * FROM rt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c1) IS TRUE) IN ())) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1) IS TRUE) IN ())))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c1) IS TRUE) IN ())) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT rt1.c1, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c1, rt0.c1;
SELECT rt1.c1, rt0.c1 FROM rt1, rt0 WHERE (TRIM(CAST(rt0.c2 AS INTEGER), ((rt1.c1)IS(rt1.c0)))) GROUP BY rt1.c1, rt0.c1 UNION SELECT ALL rt1.c1, rt0.c1 FROM rt1, rt0 WHERE ((NOT (TRIM(CAST(rt0.c2 AS INTEGER), ((rt1.c1)IS(rt1.c0)))))) GROUP BY rt1.c1, rt0.c1 UNION SELECT ALL rt1.c1, rt0.c1 FROM rt1, rt0 WHERE (((TRIM(CAST(rt0.c2 AS INTEGER), ((rt1.c1)IS(rt1.c0)))) ISNULL)) GROUP BY rt1.c1, rt0.c1;
SELECT rt1.c1, rt0.c1 FROM rt1, rt0 GROUP BY rt1.c1, rt0.c1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING AVG(MAX(SUM(GROUP_CONCAT(COUNT(COUNT(rt0.c1)))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (AVG(MAX(SUM(GROUP_CONCAT(COUNT(COUNT(rt0.c1)))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((AVG(MAX(SUM(GROUP_CONCAT(COUNT(COUNT(rt0.c1))))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((rt0.c0 IN ()) COLLATE BINARY) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((rt0.c0 IN ()) COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ()) COLLATE BINARY) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (((725204014)-(CAST(rt1.c2 AS INTEGER)))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (((725204014)-(CAST(rt1.c2 AS INTEGER)))))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (((((725204014)-(CAST(rt1.c2 AS INTEGER)))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT rt1.c2, rt1.c0, rt0.c2, rt0.c1, rt1.c1 FROM rt1, rt0 GROUP BY rt1.c2, rt1.c0, rt0.c2, rt0.c1, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt0.c2, rt0.c1, rt1.c1 FROM rt1, rt0 WHERE ((CAST(rt0.c1 AS NUMERIC) IN ())) GROUP BY rt1.c2, rt1.c0, rt0.c2, rt0.c1, rt1.c1 UNION SELECT rt1.c2, rt1.c0, rt0.c2, rt0.c1, rt1.c1 FROM rt1, rt0 WHERE ((NOT ((CAST(rt0.c1 AS NUMERIC) IN ())))) GROUP BY rt1.c2, rt1.c0, rt0.c2, rt0.c1, rt1.c1 UNION SELECT rt1.c2, rt1.c0, rt0.c2, rt0.c1, rt1.c1 FROM rt1, rt0 WHERE ((((CAST(rt0.c1 AS NUMERIC) IN ())) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt0.c2, rt0.c1, rt1.c1;
SELECT rt1.c2, rt1.c0, rt0.c2, rt0.c1, rt1.c1 FROM rt1, rt0 GROUP BY rt1.c2, rt1.c0, rt0.c2, rt0.c1, rt1.c1;
SELECT ALL rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2 HAVING CASE MAX(rt0.c2)  WHEN SUM(AVG(rt0.c2)) THEN ((AVG(rt1.c2))&(TOTAL(rt1.c1))) END UNION ALL SELECT ALL rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2 HAVING (NOT (CASE MAX(rt0.c2)  WHEN SUM(AVG(rt0.c2)) THEN ((AVG(rt1.c2))&(TOTAL(rt1.c1))) END)) UNION ALL SELECT rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2 HAVING ((CASE MAX(rt0.c2)  WHEN SUM(AVG(rt0.c2)) THEN ((AVG(rt1.c2))&(TOTAL(rt1.c1))) END) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((rt0.c2) BETWEEN (0.8613041911702248) AND (rt0.c1)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c2) BETWEEN (0.8613041911702248) AND (rt0.c1)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rt0.c2) BETWEEN (0.8613041911702248) AND (rt0.c1)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE (NULL COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT (NULL COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE (((NULL COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT rt1.c0 FROM rt1, rt0 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, rt0 WHERE (((json('-1311212456'))>>(rt1.c2))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1, rt0 WHERE ((NOT (((json('-1311212456'))>>(rt1.c2))))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1, rt0 WHERE (((((json('-1311212456'))>>(rt1.c2))) ISNULL)) GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1, rt0 GROUP BY rt1.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (((('173472646')IS(MIN(SUM(SUM(rt0.c2)))))) NOT NULL) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT ((((('173472646')IS(MIN(SUM(SUM(rt0.c2)))))) NOT NULL))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (((((('173472646')IS(MIN(SUM(SUM(rt0.c2)))))) NOT NULL)) ISNULL);
SELECT * FROM rt1, rt0;
SELECT * FROM rt1, rt0 WHERE (((CASE WHEN rt1.c0 THEN rt0.c1 END) NOT NULL)) UNION ALL SELECT * FROM rt1, rt0 WHERE ((NOT (((CASE WHEN rt1.c0 THEN rt0.c1 END) NOT NULL)))) UNION ALL SELECT * FROM rt1, rt0 WHERE (((((CASE WHEN rt1.c0 THEN rt0.c1 END) NOT NULL)) ISNULL));
SELECT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST((~ (rt0.c0)) AS REAL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST((~ (rt0.c0)) AS REAL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST((~ (rt0.c0)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (''))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((NOT (''))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((NOT (''))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c0;
SELECT rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c0 HAVING (+ (COUNT(*))) UNION ALL SELECT rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c0 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c0 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT ALL rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c0;
SELECT rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c0 HAVING (+ (COUNT(*))) UNION ALL SELECT rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c0 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c0 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT ALL rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c0;
SELECT ALL rt1.c0, rt1.c2 FROM rt1;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)))<((- (rt1.c1))))) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)))<((- (rt1.c1))))))) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE (((((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)))<((- (rt1.c1))))) ISNULL));
SELECT ALL rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c2 COLLATE BINARY) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt1.c1, rt1.c0, rt0.c0, rt0.c1, rt0.c2, rt1.c2 FROM rt0, rt1 GROUP BY rt1.c1, rt1.c0, rt0.c0, rt0.c1, rt0.c2, rt1.c2;
SELECT rt1.c1, rt1.c0, rt0.c0, rt0.c1, rt0.c2, rt1.c2 FROM rt0, rt1 WHERE ((rt1.c2 IN ((((rt0.c1, rt0.c2, rt1.c1)) BETWEEN (('2024878964', rt0.c2, rt1.c0)) AND ((NULL, rt1.c1, rt0.c2)))))) GROUP BY rt1.c1, rt1.c0, rt0.c0, rt0.c1, rt0.c2, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c0, rt0.c0, rt0.c1, rt0.c2, rt1.c2 FROM rt0 NOT INDEXED, rt1 WHERE ((NOT ((rt1.c2 IN ((((rt0.c1, rt0.c2, rt1.c1)) BETWEEN (('2024878964', rt0.c2, rt1.c0)) AND ((NULL, rt1.c1, rt0.c2)))))))) GROUP BY rt1.c1, rt1.c0, rt0.c0, rt0.c1, rt0.c2, rt1.c2 UNION SELECT rt1.c1, rt1.c0, rt0.c0, rt0.c1, rt0.c2, rt1.c2 FROM rt0, rt1 WHERE ((((rt1.c2 IN ((((rt0.c1, rt0.c2, rt1.c1)) BETWEEN (('2024878964', rt0.c2, rt1.c0)) AND ((NULL, rt1.c1, rt0.c2)))))) ISNULL)) GROUP BY rt1.c1, rt1.c0, rt0.c0, rt0.c1, rt0.c2, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt0.c0, rt0.c1, rt0.c2, rt1.c2 FROM rt0, rt1 GROUP BY rt1.c1, rt1.c0, rt0.c0, rt0.c1, rt0.c2, rt1.c2;
SELECT rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2 HAVING MAX(rt0.c2) COLLATE NOCASE UNION ALL SELECT ALL rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2 HAVING (NOT (MAX(rt0.c2) COLLATE NOCASE)) UNION ALL SELECT rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2 HAVING ((MAX(rt0.c2) COLLATE NOCASE) ISNULL);
SELECT rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2 HAVING MAX(rt0.c2) COLLATE NOCASE UNION ALL SELECT ALL rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2 HAVING (NOT (MAX(rt0.c2) COLLATE NOCASE)) UNION ALL SELECT rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2 HAVING ((MAX(rt0.c2) COLLATE NOCASE) ISNULL);
SELECT rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2;
SELECT ALL * FROM rt0, rt1;
SELECT * FROM rt0, rt1 WHERE (rt1.c2) UNION ALL SELECT * FROM rt0, rt1 WHERE ((NOT (rt1.c2))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE (((rt1.c2) ISNULL));
SELECT ALL * FROM rt0, rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((rt1.c0 COLLATE NOCASE)<(((NULL)OR(rt1.c2))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((rt1.c0 COLLATE NOCASE)<(((NULL)OR(rt1.c2))))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c0 COLLATE NOCASE)<(((NULL)OR(rt1.c2))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c1, rt0.c0, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt1.c2)&(rt0.c1)) IN ()) GROUP BY rt1.c1, rt0.c0, rt0.c2;
SELECT ALL rt1.c1, rt0.c0, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt1.c2)&(rt0.c1)) IN ()) WHERE (TRIM(DISTINCT ((x'') BETWEEN (rt0.c1) AND (rt0.c2)), x'')) GROUP BY rt1.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt1.c1, rt0.c0, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt1.c2)&(rt0.c1)) IN ()) WHERE ((NOT (TRIM(DISTINCT ((x'') BETWEEN (rt0.c1) AND (rt0.c2)), x'')))) GROUP BY rt1.c1, rt0.c0, rt0.c2 UNION SELECT rt1.c1, rt0.c0, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt1.c2)&(rt0.c1)) IN ()) WHERE (((TRIM(DISTINCT ((x'') BETWEEN (rt0.c1) AND (rt0.c2)), x'')) ISNULL)) GROUP BY rt1.c1, rt0.c0, rt0.c2;
SELECT ALL rt1.c1, rt0.c0, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt1.c2)&(rt0.c1)) IN ()) GROUP BY rt1.c1, rt0.c0, rt0.c2;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING MAX(((GROUP_CONCAT(TOTAL(rt1.c0)))LIKE(rt1.c2))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (MAX(((GROUP_CONCAT(TOTAL(rt1.c0)))LIKE(rt1.c2))))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((MAX(((GROUP_CONCAT(TOTAL(rt1.c0)))LIKE(rt1.c2)))) ISNULL);
SELECT rt0.c0 FROM rt0 INNER JOIN rt1 ON LOWER((+ (rt1.c1)));
SELECT rt0.c0 FROM rt0 INNER JOIN rt1 ON LOWER((+ (rt1.c1))) WHERE (((('')) BETWEEN ((((rt0.c1) IS FALSE))) AND ((IFNULL(rt0.c2, rt1.c1))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 INNER JOIN rt1 ON LOWER((+ (rt1.c1))) WHERE ((NOT (((('')) BETWEEN ((((rt0.c1) IS FALSE))) AND ((IFNULL(rt0.c2, rt1.c1))))))) UNION ALL SELECT rt0.c0 FROM rt0 INNER JOIN rt1 ON LOWER((+ (rt1.c1))) WHERE (((((('')) BETWEEN ((((rt0.c1) IS FALSE))) AND ((IFNULL(rt0.c2, rt1.c1))))) ISNULL));
SELECT rt0.c0 FROM rt0 INNER JOIN rt1 ON LOWER((+ (rt1.c1)));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (json_array_length(((rt0.c2) NOT BETWEEN (0.44246563243737136) AND (rt0.c0)), (rt0.c0 IN (rt0.c0, rt0.c2)))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (json_array_length(((rt0.c2) NOT BETWEEN (0.44246563243737136) AND (rt0.c0)), (rt0.c0 IN (rt0.c0, rt0.c2)))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((json_array_length(((rt0.c2) NOT BETWEEN (0.44246563243737136) AND (rt0.c0)), (rt0.c0 IN (rt0.c0, rt0.c2)))) ISNULL));
SELECT ALL rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, rt1 WHERE ((((rt1.c2)) BETWEEN ((((rt0.c0)IS NOT(rt1.c1)))) AND (((rt1.c0 IN (rt0.c1)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, rt1 WHERE ((NOT ((((rt1.c2)) BETWEEN ((((rt0.c0)IS NOT(rt1.c1)))) AND (((rt1.c0 IN (rt0.c1)))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, rt1 WHERE ((((((rt1.c2)) BETWEEN ((((rt0.c0)IS NOT(rt1.c1)))) AND (((rt1.c0 IN (rt0.c1)))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, rt1 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((NOT (COUNT(*))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((NOT (COUNT(*)))) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((NOT (COUNT(*))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((NOT (COUNT(*)))) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL * FROM rt1, rt0;
SELECT * FROM rt1, rt0 WHERE ((~ ((('-1877647243') BETWEEN (rt0.c1) AND (rt0.c1))))) UNION ALL SELECT * FROM rt1, rt0 WHERE ((NOT ((~ ((('-1877647243') BETWEEN (rt0.c1) AND (rt0.c1))))))) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE ((((~ ((('-1877647243') BETWEEN (rt0.c1) AND (rt0.c1))))) ISNULL));
SELECT ALL * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0 WHERE (((rt1.c1 COLLATE BINARY) IS FALSE)) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((NOT (((rt1.c1 COLLATE BINARY) IS FALSE)))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE (((((rt1.c1 COLLATE BINARY) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt1, rt0;
SELECT rt0.c2 FROM rt0, rt1 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, rt1 WHERE ((((rt0.c2)IS(NULL)) IN ())) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, rt1 WHERE ((NOT ((((rt0.c2)IS(NULL)) IN ())))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, rt1 WHERE ((((((rt0.c2)IS(NULL)) IN ())) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, rt1 GROUP BY rt0.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING MAX(TOTAL(rt1.c1)) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING (NOT (MAX(TOTAL(rt1.c1)))) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((MAX(TOTAL(rt1.c1))) ISNULL);
SELECT ALL * FROM rt0, rt1;
SELECT ALL * FROM rt0, rt1 WHERE (((((rt1.c2 COLLATE BINARY)OR(rt1.c0)))OR(((rt1.c0) BETWEEN (rt1.c2) AND ('1894654790'))))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE ((NOT (((((rt1.c2 COLLATE BINARY)OR(rt1.c0)))OR(((rt1.c0) BETWEEN (rt1.c2) AND ('1894654790'))))))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE (((((((rt1.c2 COLLATE BINARY)OR(rt1.c0)))OR(((rt1.c0) BETWEEN (rt1.c2) AND ('1894654790'))))) ISNULL));
SELECT ALL * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE (NULL) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((0Xffffffff9c277593)=(LIKE('-1923568795', x'')))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((0xffffffff9c277593)=(LIKE('-1923568795', x'')))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((0xffffffff9c277593)=(LIKE('-1923568795', x'')))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((MAX(MIN(COUNT(rt0.c2)))) ISNULL) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((MAX(MIN(COUNT(rt0.c2)))) ISNULL))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((MAX(MIN(COUNT(rt0.c2)))) ISNULL)) ISNULL);
SELECT * FROM rt0, rt1;
SELECT * FROM rt0, rt1 WHERE ((((+ (rt1.c1)))<(CAST(rt0.c0 AS TEXT)))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE ((NOT ((((+ (rt1.c1)))<(CAST(rt0.c0 AS TEXT)))))) UNION ALL SELECT * FROM rt0, rt1 WHERE ((((((+ (rt1.c1)))<(CAST(rt0.c0 AS TEXT)))) ISNULL));
SELECT * FROM rt0, rt1;
SELECT DISTINCT rt0.c0 FROM rt0, rt1;
SELECT DISTINCT rt0.c0 FROM rt0, rt1 WHERE ((- (((rt0.c2) NOT NULL)))) UNION SELECT DISTINCT rt0.c0 FROM rt0, rt1 WHERE ((NOT ((- (((rt0.c2) NOT NULL)))))) UNION SELECT DISTINCT rt0.c0 FROM rt0, rt1 WHERE ((((- (((rt0.c2) NOT NULL)))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, rt1;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c0)*(rt0.c2)) COLLATE NOCASE COLLATE RTRIM) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c0)*(rt0.c2)) COLLATE NOCASE COLLATE RTRIM))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c0)*(rt0.c2)) COLLATE NOCASE COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING TOTAL(((MIN(rt0.c0)) NOT BETWEEN (TOTAL(rt0.c2)) AND (rt0.c0))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (TOTAL(((MIN(rt0.c0)) NOT BETWEEN (TOTAL(rt0.c2)) AND (rt0.c0))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((TOTAL(((MIN(rt0.c0)) NOT BETWEEN (TOTAL(rt0.c2)) AND (rt0.c0)))) ISNULL);
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))<>(rt1.c0 COLLATE NOCASE))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))<>(rt1.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))!=(rt1.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)))|(((NULL)<<(rt1.c0))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)))|(((NULL)<<(rt1.c0))))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)))|(((NULL)<<(rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt0.c0, rt1.c1, rt0.c2 FROM rt1 CROSS JOIN rt0 ON (((rt1.c2)) BETWEEN (((~ (rt0.c2)))) AND ((0xffffffffb0e50344))) GROUP BY rt0.c0, rt1.c1, rt0.c2;
SELECT rt0.c0, rt1.c1, rt0.c2 FROM rt1 CROSS JOIN rt0 ON (((rt1.c2)) BETWEEN (((~ (rt0.c2)))) AND ((0Xffffffffb0e50344))) WHERE (CAST(((rt1.c2) BETWEEN (rt0.c1) AND (rt0.c2)) AS NUMERIC)) GROUP BY rt0.c0, rt1.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt1.c1, rt0.c2 FROM rt1 CROSS JOIN rt0 ON (((rt1.c2)) BETWEEN (((~ (rt0.c2)))) AND ((0Xffffffffb0e50344))) WHERE ((NOT (CAST(((rt1.c2) BETWEEN (rt0.c1) AND (rt0.c2)) AS NUMERIC)))) GROUP BY rt0.c0, rt1.c1, rt0.c2 UNION SELECT rt0.c0, rt1.c1, rt0.c2 FROM rt1 CROSS JOIN rt0 ON (((rt1.c2)) BETWEEN (((~ (rt0.c2)))) AND ((0Xffffffffb0e50344))) WHERE (((CAST(((rt1.c2) BETWEEN (rt0.c1) AND (rt0.c2)) AS NUMERIC)) ISNULL)) GROUP BY rt0.c0, rt1.c1, rt0.c2;
SELECT ALL rt0.c0, rt1.c1, rt0.c2 FROM rt1 CROSS JOIN rt0 ON (((rt1.c2)) BETWEEN (((~ (rt0.c2)))) AND ((0xffffffffb0e50344))) GROUP BY rt0.c0, rt1.c1, rt0.c2;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((((((LIKE(TOTAL(COUNT(*)), rt0.c2))OR(AVG(SUM(rt0.c2)))))AND(((rt0.c0)==(rt0.c2)))))OR((((AVG(rt0.c2))) NOT BETWEEN ((AVG(21512096))) AND ((COUNT(*)))))))AND('IB')) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((((((((LIKE(TOTAL(COUNT(*)), rt0.c2))OR(AVG(SUM(rt0.c2)))))AND(((rt0.c0)=(rt0.c2)))))OR((((AVG(rt0.c2))) NOT BETWEEN ((AVG(21512096))) AND ((COUNT(*)))))))AND('IB')))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((((((((LIKE(TOTAL(COUNT(*)), rt0.c2))OR(AVG(SUM(rt0.c2)))))AND(((rt0.c0)=(rt0.c2)))))OR((((AVG(rt0.c2))) NOT BETWEEN ((AVG(21512096))) AND ((COUNT(*)))))))AND('IB'))) ISNULL);
SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c1, rt0.c0 FROM rt1, rt0;
SELECT rt1.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c1, rt0.c0 FROM rt1, rt0 WHERE ((((~ (0X5745871e)))GLOB(CAST(rt0.c2 AS REAL)))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c1, rt0.c0 FROM rt1, rt0 WHERE ((NOT ((((~ (0X5745871e)))GLOB(CAST(rt0.c2 AS REAL)))))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c1, rt0.c0 FROM rt1, rt0 WHERE ((((((~ (0X5745871e)))GLOB(CAST(rt0.c2 AS REAL)))) ISNULL));
SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c1, rt0.c0 FROM rt1, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt1.c2, rt0.c2 FROM rt1, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt1.c2, rt0.c2 FROM rt1, rt0 WHERE (((((rt1.c2)IS NOT(rt0.c2)))<(x'9b59'))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt1.c2, rt0.c2 FROM rt1, rt0 WHERE ((NOT (((((rt1.c2)IS NOT(rt0.c2)))<(x'9b59'))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt1.c2, rt0.c2 FROM rt1, rt0 WHERE (((((((rt1.c2)IS NOT(rt0.c2)))<(x'9b59'))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt1.c2, rt0.c2 FROM rt1, rt0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 WHERE ((((((0.32447116248284436) BETWEEN (rt1.c1) AND (rt1.c0))))>(((((NULL))==((rt1.c0))))))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 WHERE ((NOT ((((((0.32447116248284436) BETWEEN (rt1.c1) AND (rt1.c0))))>(((((NULL))=((rt1.c0))))))))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 WHERE ((((((((0.32447116248284436) BETWEEN (rt1.c1) AND (rt1.c0))))>(((((NULL))=((rt1.c0))))))) ISNULL)) GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((COUNT(COUNT(*)))&(SUM(rt1.c0))) UNION ALL SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (NOT (((COUNT(COUNT(*)))&(SUM(rt1.c0))))) UNION ALL SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((((COUNT(COUNT(*)))&(SUM(rt1.c0)))) ISNULL);
SELECT rt1.c1, rt0.c0, rt1.c0, rt0.c2 FROM rt1, rt0;
SELECT ALL rt1.c1, rt0.c0, rt1.c0, rt0.c2 FROM rt1, rt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN ((rt1.c1) NOT NULL) ELSE ((rt1.c0)>(rt1.c2)) END) UNION ALL SELECT rt1.c1, rt0.c0, rt1.c0, rt0.c2 FROM rt1, rt0 WHERE ((NOT (CASE WHEN (rt0.c0 IN ()) THEN ((rt1.c1) NOT NULL) ELSE ((rt1.c0)>(rt1.c2)) END))) UNION ALL SELECT ALL rt1.c1, rt0.c0, rt1.c0, rt0.c2 FROM rt1, rt0 WHERE (((CASE WHEN (rt0.c0 IN ()) THEN ((rt1.c1) NOT NULL) ELSE ((rt1.c0)>(rt1.c2)) END) ISNULL));
SELECT rt1.c1, rt0.c0, rt1.c0, rt0.c2 FROM rt1, rt0;
SELECT DISTINCT rt0.c1, rt1.c1 FROM rt0, rt1;
SELECT DISTINCT rt0.c1, rt1.c1 FROM rt0, rt1 WHERE ((- (CASE WHEN rt0.c0 THEN rt0.c2 ELSE NULL END))) UNION SELECT DISTINCT rt0.c1, rt1.c1 FROM rt0, rt1 WHERE ((NOT ((- (CASE WHEN rt0.c0 THEN rt0.c2 ELSE NULL END))))) UNION SELECT DISTINCT rt0.c1, rt1.c1 FROM rt0, rt1 WHERE ((((- (CASE WHEN rt0.c0 THEN rt0.c2 ELSE NULL END))) ISNULL));
SELECT DISTINCT rt0.c1, rt1.c1 FROM rt0, rt1;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((((rt1.c0 IN ())) NOT NULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT ((((rt1.c0 IN ())) NOT NULL)))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((((((rt1.c0 IN ())) NOT NULL)) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c0, rt1.c2, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c0, rt1.c2, rt0.c1;
SELECT rt1.c0, rt1.c2, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c0, rt1.c2, rt0.c1 HAVING (- ((((COUNT(COUNT(*))))=((rt1.c2))))) UNION ALL SELECT rt1.c0, rt1.c2, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c0, rt1.c2, rt0.c1 HAVING (NOT ((- ((((COUNT(COUNT(*))))==((rt1.c2))))))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c0, rt1.c2, rt0.c1 HAVING (((- ((((COUNT(COUNT(*))))=((rt1.c2)))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END) AND (CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END) AND (CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END))))) UNION ALL SELECT * FROM rt0 WHERE (((((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END) AND (CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((~ (0.40531123554060544))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((~ (0.40531123554060544))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((~ (0.40531123554060544))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 WHERE ((((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((NULL))))OR(((0.11033199174828223) NOTNULL)))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1 WHERE ((NOT ((((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((NULL))))OR(((0.11033199174828223) NOTNULL)))))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1 WHERE ((((((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((NULL))))OR(((0.11033199174828223) NOTNULL)))) ISNULL)) GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt0.c2 FROM rt1, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt1, rt0 GROUP BY rt0.c2 HAVING CASE WHEN COUNT(COUNT(*)) THEN COUNT(SUM(rt0.c2)) END UNION ALL SELECT rt0.c2 FROM rt1, rt0 GROUP BY rt0.c2 HAVING (NOT (CASE WHEN COUNT(COUNT(*)) THEN COUNT(SUM(rt0.c2)) END)) UNION ALL SELECT ALL rt0.c2 FROM rt1, rt0 GROUP BY rt0.c2 HAVING ((CASE WHEN COUNT(COUNT(*)) THEN COUNT(SUM(rt0.c2)) END) ISNULL);
SELECT ALL rt1.c1, rt0.c1, rt1.c0 FROM rt0, rt1;
SELECT ALL rt1.c1, rt0.c1, rt1.c0 FROM rt0, rt1 WHERE (((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c0 ELSE rt0.c2 END) BETWEEN (((rt1.c2)AND(rt0.c1))) AND (((rt0.c1)<>(rt0.c2))))) UNION ALL SELECT rt1.c1, rt0.c1, rt1.c0 FROM rt0, rt1 WHERE ((NOT (((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c0 ELSE rt0.c2 END) BETWEEN (((rt1.c2)AND(rt0.c1))) AND (((rt0.c1)<>(rt0.c2))))))) UNION ALL SELECT rt1.c1, rt0.c1, rt1.c0 FROM rt0, rt1 WHERE (((((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c0 ELSE rt0.c2 END) BETWEEN (((rt1.c2)AND(rt0.c1))) AND (((rt0.c1)<>(rt0.c2))))) ISNULL));
SELECT ALL rt1.c1, rt0.c1, rt1.c0 FROM rt0, rt1;
SELECT DISTINCT rt0.c1, rt1.c0, rt1.c1, rt1.c2 FROM rt0, rt1;
SELECT DISTINCT rt0.c1, rt1.c0, rt1.c1, rt1.c2 FROM rt0, rt1 WHERE (rt1.c1) UNION SELECT DISTINCT rt0.c1, rt1.c0, rt1.c1, rt1.c2 FROM rt0, rt1 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT rt0.c1, rt1.c0, rt1.c1, rt1.c2 FROM rt0, rt1 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT rt0.c1, rt1.c0, rt1.c1, rt1.c2 FROM rt0, rt1;
SELECT rt1.c0, rt0.c0, rt0.c1, rt1.c1, rt1.c2 FROM rt1, rt0 GROUP BY rt1.c0, rt0.c0, rt0.c1, rt1.c1, rt1.c2;
SELECT rt1.c0, rt0.c0, rt0.c1, rt1.c1, rt1.c2 FROM rt1, rt0 WHERE (CAST(rt1.c1 AS NUMERIC)) GROUP BY rt1.c0, rt0.c0, rt0.c1, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c0, rt0.c0, rt0.c1, rt1.c1, rt1.c2 FROM rt1, rt0 WHERE ((NOT (CAST(rt1.c1 AS NUMERIC)))) GROUP BY rt1.c0, rt0.c0, rt0.c1, rt1.c1, rt1.c2 UNION SELECT rt1.c0, rt0.c0, rt0.c1, rt1.c1, rt1.c2 FROM rt1, rt0 WHERE (((CAST(rt1.c1 AS NUMERIC)) ISNULL)) GROUP BY rt1.c0, rt0.c0, rt0.c1, rt1.c1, rt1.c2;
SELECT rt1.c0, rt0.c0, rt0.c1, rt1.c1, rt1.c2 FROM rt1, rt0 GROUP BY rt1.c0, rt0.c0, rt0.c1, rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt0.c1, rt0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON (((~ (rt1.c0)))GLOB(rt0.c2)) GROUP BY rt1.c1, rt0.c1, rt0.c0;
SELECT rt1.c1, rt0.c1, rt0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON (((~ (rt1.c0)))GLOB(rt0.c2)) GROUP BY rt1.c1, rt0.c1, rt0.c0 HAVING (- (((rt1.c1) NOTNULL))) UNION ALL SELECT ALL rt1.c1, rt0.c1, rt0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON (((~ (rt1.c0)))GLOB(rt0.c2)) GROUP BY rt1.c1, rt0.c1, rt0.c0 HAVING (NOT ((- (((rt1.c1) NOTNULL))))) UNION ALL SELECT rt1.c1, rt0.c1, rt0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON (((~ (rt1.c0)))GLOB(rt0.c2)) GROUP BY rt1.c1, rt0.c1, rt0.c0 HAVING (((- (((rt1.c1) NOTNULL)))) ISNULL);
SELECT ALL rt1.c1, rt0.c1, rt0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON (((~ (rt1.c0)))GLOB(rt0.c2)) GROUP BY rt1.c1, rt0.c1, rt0.c0;
SELECT rt1.c1, rt0.c1, rt0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON (((~ (rt1.c0)))GLOB(rt0.c2)) GROUP BY rt1.c1, rt0.c1, rt0.c0 HAVING (- (((rt1.c1) NOTNULL))) UNION ALL SELECT ALL rt1.c1, rt0.c1, rt0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON (((~ (rt1.c0)))GLOB(rt0.c2)) GROUP BY rt1.c1, rt0.c1, rt0.c0 HAVING (NOT ((- (((rt1.c1) NOTNULL))))) UNION ALL SELECT rt1.c1, rt0.c1, rt0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON (((~ (rt1.c0)))GLOB(rt0.c2)) GROUP BY rt1.c1, rt0.c1, rt0.c0 HAVING (((- (((rt1.c1) NOTNULL)))) ISNULL);
SELECT ALL rt1.c1, rt0.c1, rt0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON (((~ (rt1.c0)))GLOB(rt0.c2)) GROUP BY rt1.c1, rt0.c1, rt0.c0;
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON CAST(((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c0)) AS REAL);
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON CAST(((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c0)) AS REAL) WHERE (CASE (- (x''))  WHEN rt0.c0 THEN rt0.c0 COLLATE RTRIM WHEN (((rt1.c0))=((rt0.c0))) THEN ((((rt1.c0)AND(rt1.c1)))OR(rt1.c0)) WHEN UNLIKELY(rt0.c2) THEN rt1.c2 COLLATE BINARY END) UNION ALL SELECT * FROM rt0 NOT INDEXED FULL OUTER JOIN rt1 ON CAST(((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c0)) AS REAL) WHERE ((NOT (CASE (- (x''))  WHEN rt0.c0 THEN rt0.c0 COLLATE RTRIM WHEN (((rt1.c0))=((rt0.c0))) THEN ((((rt1.c0)AND(rt1.c1)))OR(rt1.c0)) WHEN UNLIKELY(rt0.c2) THEN rt1.c2 COLLATE BINARY END))) UNION ALL SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON CAST(((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c0)) AS REAL) WHERE (((CASE (- (x''))  WHEN rt0.c0 THEN rt0.c0 COLLATE RTRIM WHEN (((rt1.c0))=((rt0.c0))) THEN ((((rt1.c0)AND(rt1.c1)))OR(rt1.c0)) WHEN UNLIKELY(rt0.c2) THEN rt1.c2 COLLATE BINARY END) ISNULL));
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON CAST(((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c0)) AS REAL);
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END) BETWEEN (((((rt0.c0)OR('')))AND(rt0.c2))) AND ((- (rt0.c1))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END) BETWEEN (((((rt0.c0)OR('')))AND(rt0.c2))) AND ((- (rt0.c1))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END) BETWEEN (((((rt0.c0)OR('')))AND(rt0.c2))) AND ((- (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1 FROM rt1, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt1, rt0 WHERE ((((rt1.c1))<((CASE rt1.c1  WHEN rt0.c2 THEN rt1.c0 ELSE rt0.c0 END)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt1, rt0 WHERE ((NOT ((((rt1.c1))<((CASE rt1.c1  WHEN rt0.c2 THEN rt1.c0 ELSE rt0.c0 END)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt1, rt0 WHERE ((((((rt1.c1))<((CASE rt1.c1  WHEN rt0.c2 THEN rt1.c0 ELSE rt0.c0 END)))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt1, rt0 GROUP BY rt0.c1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING SUM(NULLIF(rt1.c1, SUM(rt1.c1))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING (NOT (SUM(NULLIF(rt1.c1, SUM(rt1.c1))))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING ((SUM(NULLIF(rt1.c1, SUM(rt1.c1)))) ISNULL);
SELECT * FROM rt1, rt0;
SELECT * FROM rt1, rt0 WHERE (((CAST(rt1.c2 AS BLOB))IS NOT(''))) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE ((NOT (((CAST(rt1.c2 AS BLOB))IS NOT(''))))) UNION ALL SELECT * FROM rt1, rt0 WHERE (((((CAST(rt1.c2 AS BLOB))IS NOT(''))) ISNULL));
SELECT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE (((((rt1.c1)LIKE(rt1.c0)))IS(DATETIME(0.011671940835775607, rt0.c0, rt1.c2)))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT (((((rt1.c1)LIKE(rt1.c0)))IS(DATETIME(0.011671940835775607, rt0.c0, rt1.c2)))))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE (((((((rt1.c1)LIKE(rt1.c0)))IS(DATETIME(0.011671940835775607, rt0.c0, rt1.c2)))) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT ALL rt1.c1, rt0.c1, rt0.c0, rt1.c2 FROM rt0, rt1 GROUP BY rt1.c1, rt0.c1, rt0.c0, rt1.c2;
SELECT ALL rt1.c1, rt0.c1, rt0.c0, rt1.c2 FROM rt0, rt1 WHERE (CAST(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt0.c1)) AS BLOB)) GROUP BY rt1.c1, rt0.c1, rt0.c0, rt1.c2 UNION SELECT rt1.c1, rt0.c1, rt0.c0, rt1.c2 FROM rt0, rt1 WHERE ((NOT (CAST(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt0.c1)) AS BLOB)))) GROUP BY rt1.c1, rt0.c1, rt0.c0, rt1.c2 UNION SELECT rt1.c1, rt0.c1, rt0.c0, rt1.c2 FROM rt0, rt1 WHERE (((CAST(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt0.c1)) AS BLOB)) ISNULL)) GROUP BY rt1.c1, rt0.c1, rt0.c0, rt1.c2;
SELECT ALL rt1.c1, rt0.c1, rt0.c0, rt1.c2 FROM rt0, rt1 GROUP BY rt1.c1, rt0.c1, rt0.c0, rt1.c2;
SELECT ALL rt1.c2, rt1.c0 FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt1.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((((rt1.c2)=(rt0.c0)), (- (rt1.c1)), ((rt1.c2) NOTNULL))) AND ((((rt0.c2)>=(rt1.c2)), ((((((((rt0.c2)AND(rt1.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(rt1.c0)), ((((rt0.c0)AND(0.3793490504186673)))OR(rt0.c0))))) GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c0 FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt1.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((((rt1.c2)=(rt0.c0)), (- (rt1.c1)), ((rt1.c2) NOTNULL))) AND ((((rt0.c2)>=(rt1.c2)), ((((((((rt0.c2)AND(rt1.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(rt1.c0)), ((((rt0.c0)AND(0.3793490504186673)))OR(rt0.c0))))) GROUP BY rt1.c2, rt1.c0 HAVING (((MAX(TOTAL(GROUP_CONCAT(2042339256))))) NOT BETWEEN ((MAX(rt1.c0))) AND ((((SUM(COUNT(rt1.c2)))IS NOT(rt0.c0))))) UNION ALL SELECT rt1.c2, rt1.c0 FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt1.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((((rt1.c2)==(rt0.c0)), (- (rt1.c1)), ((rt1.c2) NOTNULL))) AND ((((rt0.c2)>=(rt1.c2)), ((((((((rt0.c2)AND(rt1.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(rt1.c0)), ((((rt0.c0)AND(0.3793490504186673)))OR(rt0.c0))))) GROUP BY rt1.c2, rt1.c0 HAVING (NOT ((((MAX(TOTAL(GROUP_CONCAT(2042339256))))) NOT BETWEEN ((MAX(rt1.c0))) AND ((((SUM(COUNT(rt1.c2)))IS NOT(rt0.c0))))))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt1.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((((rt1.c2)=(rt0.c0)), (- (rt1.c1)), ((rt1.c2) NOTNULL))) AND ((((rt0.c2)>=(rt1.c2)), ((((((((rt0.c2)AND(rt1.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(rt1.c0)), ((((rt0.c0)AND(0.3793490504186673)))OR(rt0.c0))))) GROUP BY rt1.c2, rt1.c0 HAVING (((((MAX(TOTAL(GROUP_CONCAT(2042339256))))) NOT BETWEEN ((MAX(rt1.c0))) AND ((((SUM(COUNT(rt1.c2)))IS NOT(rt0.c0)))))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (CAST(x'' AS INTEGER)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST(x'' AS INTEGER)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(x'' AS INTEGER)) ISNULL));
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN rt0.c0 COLLATE RTRIM WHEN 0.48116804428736415 COLLATE BINARY THEN (rt0.c1 IN ()) WHEN ((rt0.c0)IS NOT(rt0.c0)) THEN rt0.c2 END) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN rt0.c0 COLLATE RTRIM WHEN 0.48116804428736415 COLLATE BINARY THEN (rt0.c1 IN ()) WHEN ((rt0.c0)IS NOT(rt0.c0)) THEN rt0.c2 END))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN rt0.c0 COLLATE RTRIM WHEN 0.48116804428736415 COLLATE BINARY THEN (rt0.c1 IN ()) WHEN ((rt0.c0)IS NOT(rt0.c0)) THEN rt0.c2 END) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE ((rt1.c0 COLLATE BINARY IN ())) GROUP BY rt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT ((rt1.c0 COLLATE BINARY IN ())))) GROUP BY rt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE ((((rt1.c0 COLLATE BINARY IN ())) ISNULL)) GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 NOT INDEXED GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING NULLIF(DISTINCT MIN(MIN(COUNT(*))), COUNT(MIN(COUNT(rt1.c2)))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (NULLIF(DISTINCT MIN(MIN(COUNT(*))), COUNT(MIN(COUNT(rt1.c2)))))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((NULLIF(DISTINCT MIN(MIN(COUNT(*))), COUNT(MIN(COUNT(rt1.c2))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((NULL)!=(rt0.c2)) IN ())) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((NULL)!=(rt0.c2)) IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((NULL)<>(rt0.c2)) IN ())) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt1.c1, rt1.c0, rt0.c0, rt1.c2, rt0.c2 FROM rt1 CROSS JOIN rt0 ON ((((rt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) IN (((rt0.c2)/(rt1.c2))));
SELECT DISTINCT rt1.c1, rt1.c0, rt0.c0, rt1.c2, rt0.c2 FROM rt1 CROSS JOIN rt0 ON ((((rt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) IN (((rt0.c2)/(rt1.c2)))) WHERE (((((((rt1.c2)AND(rt0.c1)))AND(((rt0.c2)IS(rt1.c2)))))AND(CAST(rt1.c1 AS BLOB)))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt0.c0, rt1.c2, rt0.c2 FROM rt1 CROSS JOIN rt0 ON ((((rt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) IN (((rt0.c2)/(rt1.c2)))) WHERE ((NOT (((((((rt1.c2)AND(rt0.c1)))AND(((rt0.c2)IS(rt1.c2)))))AND(CAST(rt1.c1 AS BLOB)))))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt0.c0, rt1.c2, rt0.c2 FROM rt1 CROSS JOIN rt0 ON ((((rt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) IN (((rt0.c2)/(rt1.c2)))) WHERE (((((((((rt1.c2)AND(rt0.c1)))AND(((rt0.c2)IS(rt1.c2)))))AND(CAST(rt1.c1 AS BLOB)))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, rt0.c0, rt1.c2, rt0.c2 FROM rt1 CROSS JOIN rt0 ON ((((rt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) IN (((rt0.c2)/(rt1.c2))));
SELECT ALL rt1.c0, rt0.c0, rt1.c2, rt1.c1 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt0.c0, rt1.c2, rt1.c1 FROM rt0, rt1 WHERE (rt1.c1) GROUP BY rt1.c0, rt0.c0, rt1.c2, rt1.c1 UNION SELECT ALL rt1.c0, rt0.c0, rt1.c2, rt1.c1 FROM rt0, rt1 WHERE ((NOT (rt1.c1))) GROUP BY rt1.c0, rt0.c0, rt1.c2, rt1.c1 UNION SELECT rt1.c0, rt0.c0, rt1.c2, rt1.c1 FROM rt0, rt1 WHERE (((rt1.c1) ISNULL)) GROUP BY rt1.c0, rt0.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt0.c0, rt1.c2, rt1.c1 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c0, rt1.c2, rt1.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((((rt0.c0) NOTNULL))AND(MIN(TOTAL(COUNT(rt0.c2))))))AND(((MIN(rt0.c0))=(rt0.c1)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((((((rt0.c0) NOTNULL))AND(MIN(TOTAL(COUNT(rt0.c2))))))AND(((MIN(rt0.c0))=(rt0.c1)))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((((((rt0.c0) NOTNULL))AND(MIN(TOTAL(COUNT(rt0.c2))))))AND(((MIN(rt0.c0))==(rt0.c1))))) ISNULL);
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON (+ ((rt0.c1 IN ())));
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON (+ ((rt0.c1 IN ()))) WHERE (CAST(((rt1.c1) BETWEEN (rt0.c0) AND (rt1.c0)) AS NUMERIC)) UNION ALL SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON (+ ((rt0.c1 IN ()))) WHERE ((NOT (CAST(((rt1.c1) BETWEEN (rt0.c0) AND (rt1.c0)) AS NUMERIC)))) UNION ALL SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON (+ ((rt0.c1 IN ()))) WHERE (((CAST(((rt1.c1) BETWEEN (rt0.c0) AND (rt1.c0)) AS NUMERIC)) ISNULL));
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON (+ ((rt0.c1 IN ())));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0)<=(rt0.c0)))IS(LIKELIHOOD(371513241, 0.8457712105118704)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0)<=(rt0.c0)))IS(LIKELIHOOD(371513241, 0.8457712105118704)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0)<=(rt0.c0)))IS(LIKELIHOOD(371513241, 0.8457712105118704)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((0.9457787706031562) BETWEEN (rt0.c2) AND (rt0.c1)))IS(x'e752'))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((0.9457787706031562) BETWEEN (rt0.c2) AND (rt0.c1)))IS(x'e752'))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((((((0.9457787706031562) BETWEEN (rt0.c2) AND (rt0.c1)))IS(x'e752'))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING rt1.c1 UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (rt1.c1)) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((rt1.c1) ISNULL);
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING rt1.c1 UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (rt1.c1)) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((rt1.c1) ISNULL);
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT * FROM rt1, rt0;
SELECT ALL * FROM rt1, rt0 WHERE (((((rt0.c1)&(rt1.c1)))=(rt1.c0 COLLATE RTRIM))) UNION ALL SELECT * FROM rt1, rt0 WHERE ((NOT (((((rt0.c1)&(rt1.c1)))==(rt1.c0 COLLATE RTRIM))))) UNION ALL SELECT * FROM rt1, rt0 WHERE (((((((rt0.c1)&(rt1.c1)))==(rt1.c0 COLLATE RTRIM))) ISNULL));
SELECT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE (CASE WHEN (+ (rt0.c2)) THEN CASE WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c0 WHEN '' THEN rt1.c1 END END) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT (CASE WHEN (+ (rt0.c2)) THEN CASE WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c0 WHEN '' THEN rt1.c1 END END))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE (((CASE WHEN (+ (rt0.c2)) THEN CASE WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c0 WHEN '' THEN rt1.c1 END END) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c0)OR(rt0.c1))) BETWEEN (rt0.c0) AND (((((rt0.c2)OR(0.9954031589271014)))OR(rt0.c1))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0)OR(rt0.c1))) BETWEEN (rt0.c0) AND (((((rt0.c2)OR(0.9954031589271014)))OR(rt0.c1))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c1))) BETWEEN (rt0.c0) AND (((((rt0.c2)OR(0.9954031589271014)))OR(rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING x'' UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (x'')) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((x'') ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING x'' UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (x'')) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((x'') ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT * FROM rt0, rt1;
SELECT ALL * FROM rt0, rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((((((rt1.c2)OR(rt0.c2)))AND(rt1.c0)))) AND ((CAST(rt1.c0 AS TEXT))))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE ((NOT ((((rt1.c0)) NOT BETWEEN ((((((rt1.c2)OR(rt0.c2)))AND(rt1.c0)))) AND ((CAST(rt1.c0 AS TEXT))))))) UNION ALL SELECT * FROM rt0, rt1 WHERE ((((((rt1.c0)) NOT BETWEEN ((((((rt1.c2)OR(rt0.c2)))AND(rt1.c0)))) AND ((CAST(rt1.c0 AS TEXT))))) ISNULL));
SELECT * FROM rt0, rt1;
SELECT DISTINCT rt1.c2, rt1.c0, rt0.c0, rt0.c1, rt1.c1, rt0.c2 FROM rt1, rt0;
SELECT DISTINCT rt1.c2, rt1.c0, rt0.c0, rt0.c1, rt1.c1, rt0.c2 FROM rt1, rt0 WHERE (((((((((((rt0.c2) IS FALSE))OR(json_array(rt0.c1, rt1.c1))))AND(CASE WHEN rt1.c1 THEN rt1.c0 WHEN x'' THEN rt0.c1 WHEN NULL THEN rt1.c2 END)))AND(CAST(rt0.c0 AS REAL))))OR(LIKE(rt1.c1, rt0.c0)))) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt0.c0, rt0.c1, rt1.c1, rt0.c2 FROM rt1, rt0 WHERE ((NOT (((((((((((rt0.c2) IS FALSE))OR(json_array(rt0.c1, rt1.c1))))AND(CASE WHEN rt1.c1 THEN rt1.c0 WHEN x'' THEN rt0.c1 WHEN NULL THEN rt1.c2 END)))AND(CAST(rt0.c0 AS REAL))))OR(LIKE(rt1.c1, rt0.c0)))))) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt0.c0, rt0.c1, rt1.c1, rt0.c2 FROM rt1, rt0 WHERE (((((((((((((rt0.c2) IS FALSE))OR(json_array(rt0.c1, rt1.c1))))AND(CASE WHEN rt1.c1 THEN rt1.c0 WHEN x'' THEN rt0.c1 WHEN NULL THEN rt1.c2 END)))AND(CAST(rt0.c0 AS REAL))))OR(LIKE(rt1.c1, rt0.c0)))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0, rt0.c0, rt0.c1, rt1.c1, rt0.c2 FROM rt1, rt0;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1) IS FALSE)) NOTNULL) GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1) IS FALSE)) NOTNULL) WHERE (((((rt1.c0) ISNULL)) BETWEEN ((((rt0.c2))<=((rt1.c1)))) AND (((rt1.c2) ISNULL)))) GROUP BY rt1.c2, rt1.c1 UNION SELECT rt1.c2, rt1.c1 FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1) IS FALSE)) NOTNULL) WHERE ((NOT (((((rt1.c0) ISNULL)) BETWEEN ((((rt0.c2))<=((rt1.c1)))) AND (((rt1.c2) ISNULL)))))) GROUP BY rt1.c2, rt1.c1 UNION SELECT rt1.c2, rt1.c1 FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1) IS FALSE)) NOTNULL) WHERE (((((((rt1.c0) ISNULL)) BETWEEN ((((rt0.c2))<=((rt1.c1)))) AND (((rt1.c2) ISNULL)))) ISNULL)) GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1) IS FALSE)) NOTNULL) GROUP BY rt1.c2, rt1.c1;
SELECT rt0.c1, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c0;
SELECT ALL rt0.c1, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c0 HAVING (+ ((((rt0.c1))<((COUNT(*)))))) UNION ALL SELECT ALL rt0.c1, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c0 HAVING (NOT ((+ ((((rt0.c1))<((COUNT(*)))))))) UNION ALL SELECT ALL rt0.c1, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c0 HAVING (((+ ((((rt0.c1))<((COUNT(*))))))) ISNULL);
SELECT rt0.c1, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c0;
SELECT ALL rt0.c1, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c0 HAVING (+ ((((rt0.c1))<((COUNT(*)))))) UNION ALL SELECT ALL rt0.c1, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c0 HAVING (NOT ((+ ((((rt0.c1))<((COUNT(*)))))))) UNION ALL SELECT ALL rt0.c1, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c0 HAVING (((+ ((((rt0.c1))<((COUNT(*))))))) ISNULL);
SELECT rt0.c1, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c1 COLLATE RTRIM THEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) ELSE (((rt0.c1, rt0.c2, rt0.c1))<=((rt0.c0, rt0.c0, rt0.c0))) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE WHEN rt0.c1 COLLATE RTRIM THEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) ELSE (((rt0.c1, rt0.c2, rt0.c1))<=((rt0.c0, rt0.c0, rt0.c0))) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 COLLATE RTRIM THEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) ELSE (((rt0.c1, rt0.c2, rt0.c1))<=((rt0.c0, rt0.c0, rt0.c0))) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt1.c1, rt1.c0, rt0.c0, rt0.c2 FROM rt1, rt0;
SELECT DISTINCT rt0.c1, rt1.c1, rt1.c0, rt0.c0, rt0.c2 FROM rt1, rt0 WHERE (((rt1.c0)>>(rt1.c2)) COLLATE BINARY) UNION SELECT DISTINCT rt0.c1, rt1.c1, rt1.c0, rt0.c0, rt0.c2 FROM rt1, rt0 WHERE ((NOT (((rt1.c0)>>(rt1.c2)) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c1, rt1.c1, rt1.c0, rt0.c0, rt0.c2 FROM rt1, rt0 WHERE (((((rt1.c0)>>(rt1.c2)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c1, rt1.c1, rt1.c0, rt0.c0, rt0.c2 FROM rt1, rt0;
SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE (((PRINTF('-355389720')) IS TRUE)) GROUP BY rt1.c1, rt1.c2 UNION SELECT rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (((PRINTF('-355389720')) IS TRUE)))) GROUP BY rt1.c1, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE (((((PRINTF('-355389720')) IS TRUE)) ISNULL)) GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING GROUP_CONCAT(SUM(rt0.c0)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT(SUM(rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((GROUP_CONCAT(SUM(rt0.c0))) ISNULL);
SELECT ALL MAX(((((-729724086)-(rt0.c0)))IS(((rt0.c2)<>(rt0.c2))))) FROM rt0 ORDER BY (((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) IN ())  NULLS LAST;
SELECT * FROM rt1, rt0;
SELECT * FROM rt1, rt0 WHERE (((((rt1.c2) ISNULL)) BETWEEN (rt1.c2 COLLATE RTRIM) AND (((('-263364707', rt0.c2, rt1.c1, rt1.c0, rt0.c1))<((rt0.c0, rt0.c2, rt0.c2, rt0.c2, rt0.c2)))))) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE ((NOT (((((rt1.c2) ISNULL)) BETWEEN (rt1.c2 COLLATE RTRIM) AND (((('-263364707', rt0.c2, rt1.c1, rt1.c0, rt0.c1))<((rt0.c0, rt0.c2, rt0.c2, rt0.c2, rt0.c2)))))))) UNION ALL SELECT * FROM rt1, rt0 WHERE (((((((rt1.c2) ISNULL)) BETWEEN (rt1.c2 COLLATE RTRIM) AND (((('-263364707', rt0.c2, rt1.c1, rt1.c0, rt0.c1))<((rt0.c0, rt0.c2, rt0.c2, rt0.c2, rt0.c2)))))) ISNULL));
SELECT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE (CASE WHEN CASE WHEN rt0.c0 THEN rt1.c2 END THEN x'' ELSE ((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c1)) END) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT (CASE WHEN CASE WHEN rt0.c0 THEN rt1.c2 END THEN x'' ELSE ((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c1)) END))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE (((CASE WHEN CASE WHEN rt0.c0 THEN rt1.c2 END THEN x'' ELSE ((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c1)) END) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT ALL rt0.c2, rt1.c0, rt0.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c2, rt1.c0, rt0.c0, rt1.c1;
SELECT rt0.c2, rt1.c0, rt0.c0, rt1.c1 FROM rt1, rt0 WHERE (NULL) GROUP BY rt0.c2, rt1.c0, rt0.c0, rt1.c1 UNION SELECT rt0.c2, rt1.c0, rt0.c0, rt1.c1 FROM rt1, rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c2, rt1.c0, rt0.c0, rt1.c1 UNION SELECT rt0.c2, rt1.c0, rt0.c0, rt1.c1 FROM rt1, rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c2, rt1.c0, rt0.c0, rt1.c1;
SELECT ALL rt0.c2, rt1.c0, rt0.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c2, rt1.c0, rt0.c0, rt1.c1;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING COUNT(*) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING COUNT(*) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT * FROM rt1, rt0;
SELECT ALL * FROM rt1, rt0 WHERE (IFNULL(DISTINCT UNLIKELY(DISTINCT rt0.c0), rt1.c1)) UNION ALL SELECT * FROM rt1, rt0 WHERE ((NOT (IFNULL(DISTINCT UNLIKELY(DISTINCT rt0.c0), rt1.c1)))) UNION ALL SELECT * FROM rt1, rt0 WHERE (((IFNULL(DISTINCT UNLIKELY(DISTINCT rt0.c0), rt1.c1)) ISNULL));
SELECT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0 WHERE ((((rt1.c1)) BETWEEN ((ABS(DISTINCT '2U28#d~'))) AND ((CAST(rt0.c0 AS REAL))))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((NOT ((((rt1.c1)) BETWEEN ((ABS(DISTINCT '2U28#d~'))) AND ((CAST(rt0.c0 AS REAL))))))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((((((rt1.c1)) BETWEEN ((ABS(DISTINCT '2U28#d~'))) AND ((CAST(rt0.c0 AS REAL))))) ISNULL));
SELECT DISTINCT * FROM rt1, rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((+ (TRIM(rt0.c0, rt0.c0)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((+ (TRIM(rt0.c0, rt0.c0)))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((+ (TRIM(rt0.c0, rt0.c0)))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING GROUP_CONCAT((((rt0.c1)) BETWEEN ((GROUP_CONCAT(MAX(TOTAL(rt0.c2))))) AND ((TOTAL(rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT((((rt0.c1)) BETWEEN ((GROUP_CONCAT(MAX(TOTAL(rt0.c2))))) AND ((TOTAL(rt0.c0))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((GROUP_CONCAT((((rt0.c1)) BETWEEN ((GROUP_CONCAT(MAX(TOTAL(rt0.c2))))) AND ((TOTAL(rt0.c0)))))) ISNULL);
SELECT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE ((((((((rt0.c2)) NOT BETWEEN ((x'')) AND ((''))))AND((('-1045256838') NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((450016186)GLOB(rt0.c1))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT ((((((((rt0.c2)) NOT BETWEEN ((x'')) AND ((''))))AND((('-1045256838') NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((450016186)GLOB(rt0.c1))))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((((((((((rt0.c2)) NOT BETWEEN ((x'')) AND ((''))))AND((('-1045256838') NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((450016186)GLOB(rt0.c1))))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt1.c0 FROM rt1 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c1, rt1.c0 FROM rt1 NATURAL JOIN rt0 WHERE ((((rt1.c0 IN (rt0.c0)))/(CAST(NULL AS INTEGER)))) UNION SELECT DISTINCT rt0.c1, rt1.c0 FROM rt1 NATURAL JOIN rt0 WHERE ((NOT ((((rt1.c0 IN (rt0.c0)))/(CAST(NULL AS INTEGER)))))) UNION SELECT DISTINCT rt0.c1, rt1.c0 FROM rt1 NATURAL JOIN rt0 WHERE ((((((rt1.c0 IN (rt0.c0)))/(CAST(NULL AS INTEGER)))) ISNULL));
SELECT DISTINCT rt0.c1, rt1.c0 FROM rt1 NATURAL JOIN rt0;
SELECT ALL rt0.c2, rt1.c1, rt1.c2 FROM rt1, rt0 GROUP BY rt0.c2, rt1.c1, rt1.c2;
SELECT ALL rt0.c2, rt1.c1, rt1.c2 FROM rt1, rt0 WHERE (((((rt1.c2, rt0.c0, rt1.c2, rt0.c0, rt1.c2, rt0.c2, rt1.c1))<((rt1.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c0, 0.2285202232678175, rt0.c0))) IN ())) GROUP BY rt0.c2, rt1.c1, rt1.c2 UNION SELECT rt0.c2, rt1.c1, rt1.c2 FROM rt1, rt0 WHERE ((NOT (((((rt1.c2, rt0.c0, rt1.c2, rt0.c0, rt1.c2, rt0.c2, rt1.c1))<((rt1.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c0, 0.2285202232678175, rt0.c0))) IN ())))) GROUP BY rt0.c2, rt1.c1, rt1.c2 UNION SELECT rt0.c2, rt1.c1, rt1.c2 FROM rt1, rt0 WHERE (((((((rt1.c2, rt0.c0, rt1.c2, rt0.c0, rt1.c2, rt0.c2, rt1.c1))<((rt1.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c0, 0.2285202232678175, rt0.c0))) IN ())) ISNULL)) GROUP BY rt0.c2, rt1.c1, rt1.c2;
SELECT ALL rt0.c2, rt1.c1, rt1.c2 FROM rt1, rt0 GROUP BY rt0.c2, rt1.c1, rt1.c2;
SELECT ALL rt0.c1, rt0.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c1, rt0.c0, rt1.c1;
SELECT rt0.c1, rt0.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c1, rt0.c0, rt1.c1 HAVING -0.0 UNION ALL SELECT rt0.c1, rt0.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c1, rt0.c0, rt1.c1 HAVING (NOT (-0.0)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c1, rt0.c0, rt1.c1 HAVING ((-0.0) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c1, rt0.c0, rt1.c1;
SELECT rt0.c1, rt0.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c1, rt0.c0, rt1.c1 HAVING -0.0 UNION ALL SELECT rt0.c1, rt0.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c1, rt0.c0, rt1.c1 HAVING (NOT (-0.0)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c1, rt0.c0, rt1.c1 HAVING ((-0.0) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c1, rt0.c0, rt1.c1;
SELECT MIN('') FROM rt0;
SELECT ALL * FROM rt1, rt0;
SELECT ALL * FROM rt1, rt0 WHERE (CAST(rt1.c1 COLLATE NOCASE AS INTEGER)) UNION ALL SELECT * FROM rt1, rt0 WHERE ((NOT (CAST(rt1.c1 COLLATE NOCASE AS INTEGER)))) UNION ALL SELECT * FROM rt1, rt0 WHERE (((CAST(rt1.c1 COLLATE NOCASE AS INTEGER)) ISNULL));
SELECT ALL * FROM rt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))LIKE(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))LIKE(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))LIKE(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt1.c2, rt1.c0, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt1.c2, rt1.c0, rt1.c1;
SELECT rt0.c0, rt0.c2, rt0.c1, rt1.c2, rt1.c0, rt1.c1 FROM rt0, rt1 WHERE (IFNULL(TIME(x'5c07', 724785897, rt0.c0), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt1.c2, rt1.c0, rt1.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1, rt1.c2, rt1.c0, rt1.c1 FROM rt0, rt1 WHERE ((NOT (IFNULL(TIME(x'5c07', 724785897, rt0.c0), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))))) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt1.c2, rt1.c0, rt1.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1, rt1.c2, rt1.c0, rt1.c1 FROM rt0, rt1 WHERE (((IFNULL(TIME(x'5c07', 724785897, rt0.c0), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt1.c2, rt1.c0, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c0, rt0.c2, rt1.c2, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c2, rt1.c2, rt0.c1;
SELECT rt1.c0, rt0.c2, rt1.c2, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c2, rt1.c2, rt0.c1 HAVING ((MIN(GROUP_CONCAT(rt1.c1)) COLLATE BINARY)>=(MAX(rt1.c1))) UNION ALL SELECT ALL rt1.c0, rt0.c2, rt1.c2, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c2, rt1.c2, rt0.c1 HAVING (NOT (((MIN(GROUP_CONCAT(rt1.c1)) COLLATE BINARY)>=(MAX(rt1.c1))))) UNION ALL SELECT rt1.c0, rt0.c2, rt1.c2, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c2, rt1.c2, rt0.c1 HAVING ((((MIN(GROUP_CONCAT(rt1.c1)) COLLATE BINARY)>=(MAX(rt1.c1)))) ISNULL);
SELECT TOTAL(((((TRIM(rt1.c2, '-1886473925'))AND(((rt1.c0) ISNULL))))OR(rt1.c1))) FROM rt1;
SELECT ALL * FROM rt1, rt0;
SELECT ALL * FROM rt1, rt0 WHERE (rt0.c0) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE (((rt0.c0) ISNULL));
SELECT ALL * FROM rt1, rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c1)))OR(0.27328568484626037)))%(rt0.c0))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c2)AND(rt0.c1)))OR(0.27328568484626037)))%(rt0.c0))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((((((rt0.c2)AND(rt0.c1)))OR(0.27328568484626037)))%(rt0.c0))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1 WHERE ((((((rt1.c2, 1.871656565E9, NULL))==((rt1.c2, rt1.c2, rt1.c0))))==('-1184064047'))) GROUP BY rt1.c0, rt1.c1 UNION SELECT rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT ((((((rt1.c2, 1.871656565E9, NULL))=((rt1.c2, rt1.c2, rt1.c0))))==('-1184064047'))))) GROUP BY rt1.c0, rt1.c1 UNION SELECT rt1.c0, rt1.c1 FROM rt1 WHERE ((((((((rt1.c2, 1.871656565E9, NULL))=((rt1.c2, rt1.c2, rt1.c0))))=('-1184064047'))) ISNULL)) GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt0.c2, rt1.c0, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c0, rt1.c1;
SELECT ALL rt0.c2, rt1.c0, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c0, rt1.c1 HAVING GROUP_CONCAT(MAX(MIN(GROUP_CONCAT(SUM(COUNT(rt1.c1)))))) UNION ALL SELECT rt0.c2, rt1.c0, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c0, rt1.c1 HAVING (NOT (GROUP_CONCAT(MAX(MIN(GROUP_CONCAT(SUM(COUNT(rt1.c1)))))))) UNION ALL SELECT ALL rt0.c2, rt1.c0, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c0, rt1.c1 HAVING ((GROUP_CONCAT(MAX(MIN(GROUP_CONCAT(SUM(COUNT(rt1.c1))))))) ISNULL);
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE (rt1.c0) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (rt1.c0))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 NOT INDEXED WHERE (((rt1.c0) ISNULL));
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((((((rt1.c2)*(rt1.c2)), ((((((((rt1.c2)OR(rt1.c2)))OR(rt1.c1)))AND(rt1.c2)))OR(rt1.c1)), (((rt1.c1)) NOT BETWEEN ((0Xffffffffc8ed2069)) AND ((rt1.c2)))))>((CAST(rt1.c1 AS INTEGER), CAST(rt1.c0 AS BLOB), (('')LIKE(rt1.c0)))))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT ((((((rt1.c2)*(rt1.c2)), ((((((((rt1.c2)OR(rt1.c2)))OR(rt1.c1)))AND(rt1.c2)))OR(rt1.c1)), (((rt1.c1)) NOT BETWEEN ((0xffffffffc8ed2069)) AND ((rt1.c2)))))>((CAST(rt1.c1 AS INTEGER), CAST(rt1.c0 AS BLOB), (('')LIKE(rt1.c0)))))))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((((((((rt1.c2)*(rt1.c2)), ((((((((rt1.c2)OR(rt1.c2)))OR(rt1.c1)))AND(rt1.c2)))OR(rt1.c1)), (((rt1.c1)) NOT BETWEEN ((0Xffffffffc8ed2069)) AND ((rt1.c2)))))>((CAST(rt1.c1 AS INTEGER), CAST(rt1.c0 AS BLOB), (('')LIKE(rt1.c0)))))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 WHERE (rt1.c1) GROUP BY rt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (rt1.c1))) GROUP BY rt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE (((rt1.c1) ISNULL)) GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING NULL UNION ALL SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (NOT (NULL)) UNION ALL SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((NULL) ISNULL);
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING NULL UNION ALL SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (NOT (NULL)) UNION ALL SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((NULL) ISNULL);
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((('959848123')*(rt0.c2))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((('959848123')*(rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE ((((('959848123')*(rt0.c2))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt1, rt0 NOT INDEXED;
SELECT DISTINCT * FROM rt1, rt0 WHERE ((~ (CASE rt1.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c2 END))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((NOT ((~ (CASE rt1.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c2 END))))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((((~ (CASE rt1.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c2 END))) ISNULL));
SELECT DISTINCT * FROM rt1, rt0 NOT INDEXED;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (x'') GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (x''))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt1.c1 FROM rt0, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt0, rt1 GROUP BY rt1.c1 HAVING SUM(((rt1.c0) NOTNULL)) UNION ALL SELECT rt1.c1 FROM rt0, rt1 GROUP BY rt1.c1 HAVING (NOT (SUM(((rt1.c0) NOTNULL)))) UNION ALL SELECT rt1.c1 FROM rt0, rt1 GROUP BY rt1.c1 HAVING ((SUM(((rt1.c0) NOTNULL))) ISNULL);
SELECT rt1.c1 FROM rt0, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt0, rt1 GROUP BY rt1.c1 HAVING SUM(((rt1.c0) NOTNULL)) UNION ALL SELECT rt1.c1 FROM rt0, rt1 GROUP BY rt1.c1 HAVING (NOT (SUM(((rt1.c0) NOTNULL)))) UNION ALL SELECT rt1.c1 FROM rt0, rt1 GROUP BY rt1.c1 HAVING ((SUM(((rt1.c0) NOTNULL))) ISNULL);
SELECT rt1.c1 FROM rt0, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1, rt1.c2 FROM rt1;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE (((((rt1.c1)OR(rt1.c0)))OR(rt1.c1)) COLLATE RTRIM COLLATE NOCASE) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (((((rt1.c1)OR(rt1.c0)))OR(rt1.c1)) COLLATE RTRIM COLLATE NOCASE))) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 WHERE (((((((rt1.c1)OR(rt1.c0)))OR(rt1.c1)) COLLATE RTRIM COLLATE NOCASE) ISNULL));
SELECT ALL rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c0 FROM rt1 WHERE ((((((rt1.c2, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c1, rt1.c2, rt1.c2)) AND ((rt1.c1, rt1.c1, rt1.c1))))=((NOT (rt1.c1))))) UNION SELECT DISTINCT rt1.c0 FROM rt1 WHERE ((NOT ((((((rt1.c2, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c1, rt1.c2, rt1.c2)) AND ((rt1.c1, rt1.c1, rt1.c1))))==((NOT (rt1.c1))))))) UNION SELECT DISTINCT rt1.c0 FROM rt1 WHERE ((((((((rt1.c2, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c1, rt1.c2, rt1.c2)) AND ((rt1.c1, rt1.c1, rt1.c1))))=((NOT (rt1.c1))))) ISNULL));
SELECT DISTINCT rt1.c0 FROM rt1;
SELECT ALL rt0.c2, rt0.c1, rt1.c2, rt1.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt0.c1, rt1.c2, rt1.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt1.c2, rt1.c1, rt0.c0 FROM rt0, rt1 WHERE (x'47e9') GROUP BY rt0.c2, rt0.c1, rt1.c2, rt1.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt1.c2, rt1.c1, rt0.c0 FROM rt0, rt1 WHERE ((NOT (x'47e9'))) GROUP BY rt0.c2, rt0.c1, rt1.c2, rt1.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt1.c2, rt1.c1, rt0.c0 FROM rt0, rt1 WHERE (((x'47e9') ISNULL)) GROUP BY rt0.c2, rt0.c1, rt1.c2, rt1.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt1.c2, rt1.c1, rt0.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt0.c1, rt1.c2, rt1.c1, rt0.c0;
SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT rt0.c0, rt0.c2, rt1.c2, rt1.c0, rt0.c1 FROM rt0 NATURAL JOIN rt1;
SELECT ALL rt0.c0, rt0.c2, rt1.c2, rt1.c0, rt0.c1 FROM rt0 NATURAL JOIN rt1 WHERE (CASE ((((0.9858966981269883)AND(rt1.c2)))OR(rt1.c0))  WHEN ((rt0.c1)*(rt0.c1)) THEN (((rt0.c1))=((rt0.c0))) WHEN -161752761 THEN ((rt0.c2) NOT NULL) WHEN ((rt1.c0) NOT NULL) THEN (+ (rt1.c1)) END) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt1.c2, rt1.c0, rt0.c1 FROM rt0 NATURAL JOIN rt1 WHERE ((NOT (CASE ((((0.9858966981269883)AND(rt1.c2)))OR(rt1.c0))  WHEN ((rt0.c1)*(rt0.c1)) THEN (((rt0.c1))=((rt0.c0))) WHEN -161752761 THEN ((rt0.c2) NOT NULL) WHEN ((rt1.c0) NOT NULL) THEN (+ (rt1.c1)) END))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt1.c2, rt1.c0, rt0.c1 FROM rt0 NATURAL JOIN rt1 WHERE (((CASE ((((0.9858966981269883)AND(rt1.c2)))OR(rt1.c0))  WHEN ((rt0.c1)*(rt0.c1)) THEN (((rt0.c1))=((rt0.c0))) WHEN -161752761 THEN ((rt0.c2) NOT NULL) WHEN ((rt1.c0) NOT NULL) THEN (+ (rt1.c1)) END) ISNULL));
SELECT rt0.c0, rt0.c2, rt1.c2, rt1.c0, rt0.c1 FROM rt0 NATURAL JOIN rt1;
SELECT DISTINCT rt1.c2, rt1.c1, rt0.c2, rt0.c0, rt1.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN rt1 ON 0.17059174259413845;
SELECT DISTINCT rt1.c2, rt1.c1, rt0.c2, rt0.c0, rt1.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN rt1 ON 0.17059174259413845 WHERE ((((((rt1.c0)OR(rt0.c0)))OR(rt1.c1)) IN ())) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt0.c2, rt0.c0, rt1.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN rt1 ON 0.17059174259413845 WHERE ((NOT ((((((rt1.c0)OR(rt0.c0)))OR(rt1.c1)) IN ())))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt0.c2, rt0.c0, rt1.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN rt1 ON 0.17059174259413845 WHERE ((((((((rt1.c0)OR(rt0.c0)))OR(rt1.c1)) IN ())) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1, rt0.c2, rt0.c0, rt1.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN rt1 ON 0.17059174259413845;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) NOT NULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) NOT NULL)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) NOT NULL)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c1, rt1.c0, rt0.c0, rt1.c2 FROM rt1 INNER JOIN rt0 ON (((rt0.c0 IN ()))IS(((rt1.c1)/(rt1.c2)))) GROUP BY rt0.c2, rt0.c1, rt1.c0, rt0.c0, rt1.c2;
SELECT rt0.c2, rt0.c1, rt1.c0, rt0.c0, rt1.c2 FROM rt1 INNER JOIN rt0 ON (((rt0.c0 IN ()))IS(((rt1.c1)/(rt1.c2)))) GROUP BY rt0.c2, rt0.c1, rt1.c0, rt0.c0, rt1.c2 HAVING MAX(COUNT(*)) UNION ALL SELECT rt0.c2, rt0.c1, rt1.c0, rt0.c0, rt1.c2 FROM rt1 INNER JOIN rt0 ON (((rt0.c0 IN ()))IS(((rt1.c1)/(rt1.c2)))) GROUP BY rt0.c2, rt0.c1, rt1.c0, rt0.c0, rt1.c2 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT rt0.c2, rt0.c1, rt1.c0, rt0.c0, rt1.c2 FROM rt1 INNER JOIN rt0 ON (((rt0.c0 IN ()))IS(((rt1.c1)/(rt1.c2)))) GROUP BY rt0.c2, rt0.c1, rt1.c0, rt0.c0, rt1.c2 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT MIN(x'') FROM rt0;
SELECT rt1.c0, rt0.c2, rt1.c2, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN rt1 ON (((rt1.c0)) NOT BETWEEN ((((rt0.c2)<=(rt0.c2)))) AND ((rt1.c0)));
SELECT rt1.c0, rt0.c2, rt1.c2, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN rt1 ON (((rt1.c0)) NOT BETWEEN ((((rt0.c2)<=(rt0.c2)))) AND ((rt1.c0))) WHERE (LIKELY(DISTINCT (~ (rt0.c0)))) UNION ALL SELECT rt1.c0, rt0.c2, rt1.c2, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN rt1 ON (((rt1.c0)) NOT BETWEEN ((((rt0.c2)<=(rt0.c2)))) AND ((rt1.c0))) WHERE ((NOT (LIKELY(DISTINCT (~ (rt0.c0)))))) UNION ALL SELECT rt1.c0, rt0.c2, rt1.c2, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN rt1 ON (((rt1.c0)) NOT BETWEEN ((((rt0.c2)<=(rt0.c2)))) AND ((rt1.c0))) WHERE (((LIKELY(DISTINCT (~ (rt0.c0)))) ISNULL));
SELECT rt1.c0, rt0.c2, rt1.c2, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN rt1 ON (((rt1.c0)) NOT BETWEEN ((((rt0.c2)<=(rt0.c2)))) AND ((rt1.c0)));
SELECT DISTINCT rt0.c1, rt1.c2 FROM rt1 NOT INDEXED, rt0;
SELECT DISTINCT rt0.c1, rt1.c2 FROM rt1, rt0 WHERE (((rt0.c2 COLLATE BINARY) NOT BETWEEN (x'') AND (((((rt1.c0)AND(rt1.c0)))OR(rt1.c2))))) UNION SELECT DISTINCT rt0.c1, rt1.c2 FROM rt1, rt0 WHERE ((NOT (((rt0.c2 COLLATE BINARY) NOT BETWEEN (x'') AND (((((rt1.c0)AND(rt1.c0)))OR(rt1.c2))))))) UNION SELECT DISTINCT rt0.c1, rt1.c2 FROM rt1, rt0 WHERE (((((rt0.c2 COLLATE BINARY) NOT BETWEEN (x'') AND (((((rt1.c0)AND(rt1.c0)))OR(rt1.c2))))) ISNULL));
SELECT DISTINCT rt0.c1, rt1.c2 FROM rt1 NOT INDEXED, rt0;
SELECT rt0.c2, rt0.c1, rt1.c2, rt1.c0, rt1.c1, rt0.c0 FROM rt1, rt0 GROUP BY rt0.c2, rt0.c1, rt1.c2, rt1.c0, rt1.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt1.c2, rt1.c0, rt1.c1, rt0.c0 FROM rt1, rt0 WHERE (((((rt1.c2) IS TRUE)) NOT BETWEEN ((((rt1.c1)) NOT BETWEEN (('\r7/s4t')) AND ((rt1.c2)))) AND (((rt0.c1) NOT NULL)))) GROUP BY rt0.c2, rt0.c1, rt1.c2, rt1.c0, rt1.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt1.c2, rt1.c0, rt1.c1, rt0.c0 FROM rt1, rt0 WHERE ((NOT (((((rt1.c2) IS TRUE)) NOT BETWEEN ((((rt1.c1)) NOT BETWEEN (('\r7/s4t')) AND ((rt1.c2)))) AND (((rt0.c1) NOT NULL)))))) GROUP BY rt0.c2, rt0.c1, rt1.c2, rt1.c0, rt1.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt1.c2, rt1.c0, rt1.c1, rt0.c0 FROM rt1, rt0 WHERE (((((((rt1.c2) IS TRUE)) NOT BETWEEN ((((rt1.c1)) NOT BETWEEN (('\r7/s4t')) AND ((rt1.c2)))) AND (((rt0.c1) NOT NULL)))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt1.c2, rt1.c0, rt1.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt1.c2, rt1.c0, rt1.c1, rt0.c0 FROM rt1, rt0 GROUP BY rt0.c2, rt0.c1, rt1.c2, rt1.c0, rt1.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((MAX(TOTAL(TOTAL(TOTAL(MAX(GROUP_CONCAT(rt0.c1)))))))AND(SUM(MIN(rt0.c1)))))OR(AVG(COUNT(*)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (((((MAX(TOTAL(TOTAL(TOTAL(MAX(GROUP_CONCAT(rt0.c1)))))))AND(SUM(MIN(rt0.c1)))))OR(AVG(COUNT(*)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((((MAX(TOTAL(TOTAL(TOTAL(MAX(GROUP_CONCAT(rt0.c1)))))))AND(SUM(MIN(rt0.c1)))))OR(AVG(COUNT(*))))) ISNULL);
SELECT ALL MIN(((((((rt0.c1) ISNULL))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(CAST(rt0.c0 AS TEXT)))) FROM rt0 NOT INDEXED ORDER BY ((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)) COLLATE NOCASE ASC;
SELECT ALL rt1.c2 FROM rt1;
SELECT ALL rt1.c2 FROM rt1 WHERE (rt1.c1) UNION ALL SELECT ALL rt1.c2 FROM rt1 WHERE ((NOT (rt1.c1))) UNION ALL SELECT ALL rt1.c2 FROM rt1 WHERE (((rt1.c1) ISNULL));
SELECT ALL rt1.c2 FROM rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (load_extension(rt1.c0) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (load_extension(rt1.c0) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt1 WHERE (((load_extension(rt1.c0) COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c2, rt1.c0, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c0, rt1.c2;
SELECT ALL rt0.c2, rt1.c0, rt1.c2 FROM rt0, rt1 WHERE (((((((rt0.c2, rt1.c2, rt1.c0))<>((rt1.c1, rt1.c0, rt0.c0))), rt0.c0, CASE rt1.c1  WHEN rt1.c0 THEN rt0.c2 WHEN -1.3271687E9 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 END, (+ (rt0.c1)), ((rt0.c0)|(rt1.c2))))>=((((rt1.c0)IS(rt0.c2)), ((((rt0.c2)OR(rt0.c0)))OR(rt1.c2)), 'aI', (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((rt0.c2)OR(rt0.c0)))))) GROUP BY rt0.c2, rt1.c0, rt1.c2 UNION SELECT rt0.c2, rt1.c0, rt1.c2 FROM rt0, rt1 WHERE ((NOT (((((((rt0.c2, rt1.c2, rt1.c0))!=((rt1.c1, rt1.c0, rt0.c0))), rt0.c0, CASE rt1.c1  WHEN rt1.c0 THEN rt0.c2 WHEN -1.3271687E9 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 END, (+ (rt0.c1)), ((rt0.c0)|(rt1.c2))))>=((((rt1.c0)IS(rt0.c2)), ((((rt0.c2)OR(rt0.c0)))OR(rt1.c2)), 'aI', (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((rt0.c2)OR(rt0.c0)))))))) GROUP BY rt0.c2, rt1.c0, rt1.c2 UNION SELECT ALL rt0.c2, rt1.c0, rt1.c2 FROM rt0, rt1 NOT INDEXED WHERE (((((((((rt0.c2, rt1.c2, rt1.c0))!=((rt1.c1, rt1.c0, rt0.c0))), rt0.c0, CASE rt1.c1  WHEN rt1.c0 THEN rt0.c2 WHEN -1.3271687E9 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 END, (+ (rt0.c1)), ((rt0.c0)|(rt1.c2))))>=((((rt1.c0)IS(rt0.c2)), ((((rt0.c2)OR(rt0.c0)))OR(rt1.c2)), 'aI', (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((rt0.c2)OR(rt0.c0)))))) ISNULL)) GROUP BY rt0.c2, rt1.c0, rt1.c2;
SELECT ALL rt0.c2, rt1.c0, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c0, rt1.c2;
SELECT rt1.c1 FROM rt0, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt0, rt1 GROUP BY rt1.c1 HAVING CASE DATE(TOTAL(COUNT(*)), GROUP_CONCAT(rt1.c0), rt1.c1, rt1.c2, rt0.c2)  WHEN COUNT(rt1.c0) THEN ((((GROUP_CONCAT(SUM(TOTAL(rt1.c1))))OR(COUNT(*))))OR(rt0.c1)) ELSE SUM(rt1.c2) END UNION ALL SELECT ALL rt1.c1 FROM rt0, rt1 GROUP BY rt1.c1 HAVING (NOT (CASE DATE(TOTAL(COUNT(*)), GROUP_CONCAT(rt1.c0), rt1.c1, rt1.c2, rt0.c2)  WHEN COUNT(rt1.c0) THEN ((((GROUP_CONCAT(SUM(TOTAL(rt1.c1))))OR(COUNT(*))))OR(rt0.c1)) ELSE SUM(rt1.c2) END)) UNION ALL SELECT ALL rt1.c1 FROM rt0, rt1 GROUP BY rt1.c1 HAVING ((CASE DATE(TOTAL(COUNT(*)), GROUP_CONCAT(rt1.c0), rt1.c1, rt1.c2, rt0.c2)  WHEN COUNT(rt1.c0) THEN ((((GROUP_CONCAT(SUM(TOTAL(rt1.c1))))OR(COUNT(*))))OR(rt0.c1)) ELSE SUM(rt1.c2) END) ISNULL);
SELECT ALL * FROM rt0, rt1;
SELECT * FROM rt0, rt1 WHERE (CAST(((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)) AS NUMERIC)) UNION ALL SELECT * FROM rt0, rt1 WHERE ((NOT (CAST(((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)) AS NUMERIC)))) UNION ALL SELECT * FROM rt0, rt1 WHERE (((CAST(((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)) AS NUMERIC)) ISNULL));
SELECT ALL * FROM rt0, rt1;
SELECT DISTINCT rt1.c2, rt0.c1, rt0.c0, rt1.c1 FROM rt1, rt0;
SELECT DISTINCT rt1.c2, rt0.c1, rt0.c0, rt1.c1 FROM rt1, rt0 WHERE (CAST(rt1.c1 AS INTEGER)) UNION SELECT DISTINCT rt1.c2, rt0.c1, rt0.c0, rt1.c1 FROM rt1, rt0 WHERE ((NOT (CAST(rt1.c1 AS INTEGER)))) UNION SELECT DISTINCT rt1.c2, rt0.c1, rt0.c0, rt1.c1 FROM rt1, rt0 WHERE (((CAST(rt1.c1 AS INTEGER)) ISNULL));
SELECT DISTINCT rt1.c2, rt0.c1, rt0.c0, rt1.c1 FROM rt1, rt0;
SELECT ALL rt1.c2, rt0.c0, rt1.c1 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c0, rt1.c1;
SELECT ALL rt1.c2, rt0.c0, rt1.c1 FROM rt0, rt1 WHERE (((-4.70461554E8)IS(830402693 COLLATE BINARY))) GROUP BY rt1.c2, rt0.c0, rt1.c1 UNION SELECT ALL rt1.c2, rt0.c0, rt1.c1 FROM rt0, rt1 WHERE ((NOT (((-4.70461554E8)IS(830402693 COLLATE BINARY))))) GROUP BY rt1.c2, rt0.c0, rt1.c1 UNION SELECT rt1.c2, rt0.c0, rt1.c1 FROM rt0, rt1 WHERE (((((-4.70461554E8)IS(830402693 COLLATE BINARY))) ISNULL)) GROUP BY rt1.c2, rt0.c0, rt1.c1;
SELECT ALL rt1.c2, rt0.c0, rt1.c1 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c0, rt1.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(((rt0.c0)%(rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(((rt0.c0)%(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(((rt0.c0)%(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(((rt0.c0)%(rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(((rt0.c0)%(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(((rt0.c0)%(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((~ (rt0.c2 COLLATE BINARY))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((~ (rt0.c2 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c2 COLLATE BINARY))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c2)||(rt1.c0)))LIKE((rt1.c1 IN ())))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((((rt1.c2)||(rt1.c0)))LIKE((rt1.c1 IN ())))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c2)||(rt1.c0)))LIKE((rt1.c1 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt0.c2, rt1.c1, rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c2, rt1.c1, rt0.c0, rt1.c0;
SELECT rt0.c2, rt1.c1, rt0.c0, rt1.c0 FROM rt1, rt0 WHERE (CASE (+ (0.29207337624710283))  WHEN (+ (rt1.c0)) THEN CAST(rt1.c1 AS NUMERIC) WHEN rt1.c0 THEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)) WHEN CAST(rt1.c1 AS INTEGER) THEN UNLIKELY(DISTINCT rt1.c2) ELSE rt1.c0 END) GROUP BY rt0.c2, rt1.c1, rt0.c0, rt1.c0 UNION SELECT rt0.c2, rt1.c1, rt0.c0, rt1.c0 FROM rt1, rt0 WHERE ((NOT (CASE (+ (0.29207337624710283))  WHEN (+ (rt1.c0)) THEN CAST(rt1.c1 AS NUMERIC) WHEN rt1.c0 THEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)) WHEN CAST(rt1.c1 AS INTEGER) THEN UNLIKELY(DISTINCT rt1.c2) ELSE rt1.c0 END))) GROUP BY rt0.c2, rt1.c1, rt0.c0, rt1.c0 UNION SELECT ALL rt0.c2, rt1.c1, rt0.c0, rt1.c0 FROM rt1, rt0 WHERE (((CASE (+ (0.29207337624710283))  WHEN (+ (rt1.c0)) THEN CAST(rt1.c1 AS NUMERIC) WHEN rt1.c0 THEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)) WHEN CAST(rt1.c1 AS INTEGER) THEN UNLIKELY(DISTINCT rt1.c2) ELSE rt1.c0 END) ISNULL)) GROUP BY rt0.c2, rt1.c1, rt0.c0, rt1.c0;
SELECT ALL rt0.c2, rt1.c1, rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c2, rt1.c1, rt0.c0, rt1.c0;
SELECT rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2 HAVING COUNT(MAX(COUNT(*))) UNION ALL SELECT ALL rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2 HAVING (NOT (COUNT(MAX(COUNT(*))))) UNION ALL SELECT ALL rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2 HAVING ((COUNT(MAX(COUNT(*)))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt1.c0, rt1.c1 FROM rt0 RIGHT OUTER JOIN rt1 ON TRIM(rt0.c0 COLLATE RTRIM, ((((rt1.c2)AND(rt1.c0)))AND(rt0.c0)));
SELECT rt0.c0, rt0.c1, rt0.c2, rt1.c0, rt1.c1 FROM rt0 RIGHT OUTER JOIN rt1 ON TRIM(rt0.c0 COLLATE RTRIM, ((((rt1.c2)AND(rt1.c0)))AND(rt0.c0))) WHERE (((CAST(0x5440d069 AS INTEGER)) BETWEEN ((((rt1.c1, rt1.c1, rt0.c0))>=((rt0.c1, rt0.c1, rt1.c2)))) AND (INSTR(rt1.c0, rt1.c2)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, rt1.c0, rt1.c1 FROM rt0 RIGHT OUTER JOIN rt1 ON TRIM(rt0.c0 COLLATE RTRIM, ((((rt1.c2)AND(rt1.c0)))AND(rt0.c0))) WHERE ((NOT (((CAST(0X5440d069 AS INTEGER)) BETWEEN ((((rt1.c1, rt1.c1, rt0.c0))>=((rt0.c1, rt0.c1, rt1.c2)))) AND (INSTR(rt1.c0, rt1.c2)))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, rt1.c0, rt1.c1 FROM rt0 RIGHT OUTER JOIN rt1 ON TRIM(rt0.c0 COLLATE RTRIM, ((((rt1.c2)AND(rt1.c0)))AND(rt0.c0))) WHERE (((((CAST(0x5440d069 AS INTEGER)) BETWEEN ((((rt1.c1, rt1.c1, rt0.c0))>=((rt0.c1, rt0.c1, rt1.c2)))) AND (INSTR(rt1.c0, rt1.c2)))) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt1.c0, rt1.c1 FROM rt0 RIGHT OUTER JOIN rt1 ON TRIM(rt0.c0 COLLATE RTRIM, ((((rt1.c2)AND(rt1.c0)))AND(rt0.c0)));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
