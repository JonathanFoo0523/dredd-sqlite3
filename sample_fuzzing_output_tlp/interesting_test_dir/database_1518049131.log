-- Time: 2024/06/10 02:26:29
-- Database: database31
-- Database version: 3.40.0
-- seed value: 1518049131
PRAGMA cache_size = 50000; -- 13ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE TEMPORARY TABLE t0 (c0 INT  CHECK ( ((c0) ISNULL) COLLATE RTRIM)); -- 0ms;
ANALYZE sqlite_master; -- 1ms;
PRAGMA journal_mode = TRUNCATE; -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0)=('xid') WHERE (((~ (t0.c0)))+(((((t0.c0)OR(t0.c0)))OR(t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x''); -- 0ms;
PRAGMA journal_mode = PERSIST; -- 0ms;
UPDATE t0 SET c0='2048168568'; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (NULL), (x'180d'), (x'38b6'), ((((((NOT (NULL)))AND(LIKELY(DISTINCT x''))))OR(CAST('(	A3''y' AS INTEGER)))), (NULL), (NULL), ('-2100883786'); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES ('2048168568'); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (x'52204b84'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.7905246698406437); -- 0ms;
INSERT OR ABORT INTO t0 VALUES ('-2100883786'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0x77502f80); -- 0ms;
VACUUM temp; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 2ms;
UPDATE OR IGNORE t0 SET (c0)=('2001743744') WHERE (((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(NULL)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) IN ()); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0xffffffffdaeb3f6d), ('0.7905246698406437'), ('(s_5%JT'); -- 0ms;
PRAGMA optimize; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE t0 SET (c0)=(x'') WHERE ((((t0.c0)<(t0.c0)))IS(t0.c0)); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR REPLACE t0 SET (c0, c0)=(0.9491439118897447, x'125b'); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 INTEGER ); -- 1ms;
UPDATE OR ABORT t0 SET (c0)=('(	A3''y') WHERE '-2100883786'; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c3, c0) VALUES (0.36262128995773735, NULL, '-622117011'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (x''), (NULL), (NULL), (x''), ('Y17⽍cຶfI'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('-2100883786'); -- 0ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
UPDATE rt0 SET c2='', c3=NULL, c2=x'' WHERE ((((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END)OR((rt0.c0 IN (rt0.c2)))))AND((NOT (rt0.c2)))); -- 0ms;
CREATE TEMP TABLE t1 (c0 INT ); -- 0ms;
UPDATE OR ABORT rt0 SET c3=x'' WHERE ((LIKELIHOOD(rt0.c0, 0.7550326648785338))%(rt0.c1)); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE t1 SET (c0)=(0.9945069961167486) WHERE LOWER(t1.c0) COLLATE BINARY; -- 0ms;
REINDEX  rt0; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c0)=(x'b3a3') WHERE ((((t1.c0) NOTNULL))AND(((((t1.c0)AND(t1.c0)))AND(t1.c0)))); -- 0ms;
UPDATE OR IGNORE rt0 SET (c3, c0)=('Zh￿*-}1', x''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (732411008); -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c2, c0) VALUES ('xid', 0x476ebecd, '2048168568'); -- 0ms;
PRAGMA temp.cache_size; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=732411008 WHERE (((rt0.c2) NOTNULL) IN ()); -- 1ms;
UPDATE OR IGNORE t0 SET (c0)=(x'') WHERE ((t0.c0) BETWEEN (NULL) AND (t0.c0)) COLLATE RTRIM; -- 1ms;
INSERT OR REPLACE INTO t1 VALUES (x''); -- 0ms;
UPDATE OR ABORT t0 SET c0=NULL WHERE ((((DATETIME(2.001743744E9, t0.c0, t0.c0))AND(((t0.c0) NOTNULL))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)); -- 0ms;
END; -- 0ms;
PRAGMA recursive_triggers = true; -- 0ms;
PRAGMA recursive_triggers = false; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0, c3, c1) VALUES ('8<t뒀NG', x'', '190081637', 0.20674472575273695); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL), (NULL), (NULL), (0.9491439118897447), (x''); -- 0ms;
CREATE UNIQUE INDEX i57 ON t1(((c0 IN ()) IN ()) COLLATE RTRIM ASC) WHERE c0; -- 0ms;
VACUUM temp; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (0.8210889810587407 IN ())  WHEN ((0.7408709444144604)&(NULL)) THEN (('(s_5%JT') IS TRUE) ELSE json_array_length(NULL, NULL) END; -- 1ms;
PRAGMA main.wal_autocheckpoint; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (-1390547252), (0.7905246698406437), (0xffffffffcf5fd26c); -- 0ms;
INSERT OR FAIL INTO rt0(c3, c0) VALUES ('2048168568', '2048168568'); -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''), (0Xffffffffb58aa4c2), (0.6220878841749155), ('852131320'), ('0.9491439118897447'); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR IGNORE INTO rt0(c3) VALUES (-2013232699); -- 0ms;
PRAGMA stats; -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (NULL), (''), (-6.22117011E8), (0.18532035492578014), (-1419140253); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (''); -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c2) VALUES (x'', 'rg淙)L鐀}'), (NULL, '-135729573'), (0X2e46e597, -1693966928); -- 0ms;
INSERT OR ABORT INTO t1(c0) VALUES (0.20674472575273695); -- 0ms;
PRAGMA application_id; -- 1ms;
UPDATE t1 SET (c0)=(''); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=('l4') WHERE (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN x'' THEN rt0.c2 ELSE -1302416986 END IN ()); -- 0ms;
UPDATE t0 SET (c0)=('1941934327'); -- 1ms;
UPDATE rt0 SET c1=NULL; -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (0x3f12ce28); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (0.8827551026562355); -- 0ms;
INSERT OR IGNORE INTO rt0(c3) VALUES ('1198440141'); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.40745251166568264; -- 0ms;
ANALYZE rt0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x'') WHERE t0.c0; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=0x3f12ce28, c2=-1.35729573E8; -- 0ms;
UPDATE OR IGNORE t1 SET c0='2003860980', c0=0.8115529429046101, c0=0Xffffffffbb0179ca; -- 0ms;
PRAGMA temp.reverse_unordered_selects = false; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c0='190081637' WHERE ((((((((((NULL)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))) BETWEEN ((t0.c0 IN (t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)); -- 1ms;
END; -- 0ms;
PRAGMA mmap_size = -1994997525004680870; -- 0ms;
CREATE INDEX IF NOT EXISTS i42 ON t1((((((c0 IN ()))AND('-1157531190')))AND(((c0)IS NOT(c0)))) ASC) WHERE CAST((c0 IN (c0)) AS TEXT); -- 0ms;
PRAGMA soft_heap_limit; -- 0ms;
PRAGMA temp.recursive_triggers; -- 0ms;
UPDATE OR ABORT rt0 SET (c1, c1)=('', NULL); -- 1ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.9624905404109604, c0=NULL, c0=NULL WHERE CASE NULL  WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0) ISNULL) WHEN ((t0.c0)LIKE(t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN (((t0.c0))>((t0.c0))) THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) END; -- 0ms;
CREATE UNIQUE INDEX i89 ON t0(((NULLIF(DISTINCT c0, c0))|(((((c0)AND(x'198d')))AND(c0)))) COLLATE BINARY DESC); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA cache_spill; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(x''); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT rt0.c1, rt0.c0, rt0.c3 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE NULL END IN (LIKELY(DISTINCT rt0.c1)))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE NULL END IN (LIKELY(DISTINCT rt0.c1)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE NULL END IN (LIKELY(DISTINCT rt0.c1)))) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c3 FROM rt0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE ('-1693966928') UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT ('-1693966928'))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((('-1693966928') ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (TRIM(CASE t1.c0  WHEN t1.c0 THEN t1.c0 END, (t1.c0 IN ()))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (TRIM(CASE t1.c0  WHEN t1.c0 THEN t1.c0 END, (t1.c0 IN ()))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((TRIM(CASE t1.c0  WHEN t1.c0 THEN t1.c0 END, (t1.c0 IN ()))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON (- (((rt0.c0)OR('(s_5%jt')))) GROUP BY rt0.c3, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON (- (((rt0.c0)OR('(s_5%jt')))) GROUP BY rt0.c3, rt0.c0, rt0.c1 HAVING ((((SUM(rt0.c2))OR(MAX(MIN(TOTAL(rt0.c3))))))OR(rt0.c2)) COLLATE NOCASE UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON (- (((rt0.c0)OR('(s_5%jt')))) GROUP BY rt0.c3, rt0.c0, rt0.c1 HAVING (NOT (((((SUM(rt0.c2))OR(MAX(MIN(TOTAL(rt0.c3))))))OR(rt0.c2)) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON (- (((rt0.c0)OR('(s_5%jt')))) GROUP BY rt0.c3, rt0.c0, rt0.c1 HAVING ((((((SUM(rt0.c2))OR(MAX(MIN(TOTAL(rt0.c3))))))OR(rt0.c2)) COLLATE NOCASE) ISNULL);
SELECT SUM(t0.c0) FROM t0, t1;
SELECT * FROM t1, rt0;
SELECT ALL * FROM t1, rt0 WHERE (t1.c0 COLLATE RTRIM) UNION ALL SELECT * FROM t1, rt0 WHERE ((NOT (t1.c0 COLLATE RTRIM))) UNION ALL SELECT * FROM t1, rt0 WHERE (((t1.c0 COLLATE RTRIM) ISNULL));
SELECT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0, t0;
SELECT DISTINCT * FROM t1, rt0, t0 WHERE (((((((t1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))AND(((t1.c0) BETWEEN (rt0.c0) AND (t0.c0)))))AND(((rt0.c2) NOTNULL)))) UNION SELECT DISTINCT * FROM t1, rt0, t0 WHERE ((NOT (((((((t1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))AND(((t1.c0) BETWEEN (rt0.c0) AND (t0.c0)))))AND(((rt0.c2) NOTNULL)))))) UNION SELECT DISTINCT * FROM t1, rt0, t0 WHERE (((((((((t1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))AND(((t1.c0) BETWEEN (rt0.c0) AND (t0.c0)))))AND(((rt0.c2) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM t1, rt0, t0;
SELECT rt0.c0, t1.c0 FROM t0, t1 FULL OUTER JOIN rt0 ON ((('776398231')LIKE(t0.c0)) IN ()) GROUP BY rt0.c0, t1.c0;
SELECT rt0.c0, t1.c0 FROM t0, t1 FULL OUTER JOIN rt0 ON ((('776398231')LIKE(t0.c0)) IN ()) WHERE ((- (((rt0.c3)LIKE(t1.c0))))) GROUP BY rt0.c0, t1.c0 UNION SELECT ALL rt0.c0, t1.c0 FROM t0, t1 FULL OUTER JOIN rt0 ON ((('776398231')LIKE(t0.c0)) IN ()) WHERE ((NOT ((- (((rt0.c3)LIKE(t1.c0))))))) GROUP BY rt0.c0, t1.c0 UNION SELECT rt0.c0, t1.c0 FROM t0, t1 FULL OUTER JOIN rt0 ON ((('776398231')LIKE(t0.c0)) IN ()) WHERE ((((- (((rt0.c3)LIKE(t1.c0))))) ISNULL)) GROUP BY rt0.c0, t1.c0;
SELECT rt0.c0, t1.c0 FROM t0, t1 FULL OUTER JOIN rt0 ON ((('776398231')LIKE(t0.c0)) IN ()) GROUP BY rt0.c0, t1.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3;
SELECT ALL t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE ((((t1.c0, 0x1291df01, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))) COLLATE RTRIM) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT ((((t1.c0, 0X1291df01, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))) COLLATE RTRIM))) UNION ALL SELECT t1.c0 FROM t1 NOT INDEXED WHERE ((((((t1.c0, 0x1291df01, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))) COLLATE RTRIM) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((((((((((NULL)OR(((t0.c0)<=(t0.c0)))))OR(LIKELIHOOD(DISTINCT t0.c0, 0.649537908517321))))OR((NOT (x'')))))OR(UNLIKELY(t0.c0))))AND(t0.c0)))AND((+ (t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((((((((((NULL)OR(((t0.c0)<=(t0.c0)))))OR(LIKELIHOOD(DISTINCT t0.c0, 0.649537908517321))))OR((NOT (x'')))))OR(UNLIKELY(t0.c0))))AND(t0.c0)))AND((+ (t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((((((((((NULL)OR(((t0.c0)<=(t0.c0)))))OR(LIKELIHOOD(DISTINCT t0.c0, 0.649537908517321))))OR((NOT (x'')))))OR(UNLIKELY(t0.c0))))AND(t0.c0)))AND((+ (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 WHERE (CAST(rt0.c3 AS BLOB) COLLATE NOCASE) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE ((NOT (CAST(rt0.c3 AS BLOB) COLLATE NOCASE))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE (((CAST(rt0.c3 AS BLOB) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING CASE '-1302416986'  WHEN SUM(t1.c0) THEN TOTAL(NULL) END UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (CASE '-1302416986'  WHEN SUM(t1.c0) THEN TOTAL(NULL) END)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((CASE '-1302416986'  WHEN SUM(t1.c0) THEN TOTAL(NULL) END) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING CASE '-1302416986'  WHEN SUM(t1.c0) THEN TOTAL(NULL) END UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (CASE '-1302416986'  WHEN SUM(t1.c0) THEN TOTAL(NULL) END)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((CASE '-1302416986'  WHEN SUM(t1.c0) THEN TOTAL(NULL) END) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT TOTAL(t1.c0) FROM t0, t1;
SELECT t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE (NULL) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (NULL))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((NULL) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT * FROM t1, t0, rt0;
SELECT DISTINCT * FROM t1, t0, rt0 WHERE (0.258564315620028) UNION SELECT DISTINCT * FROM t1, t0, rt0 WHERE ((NOT (0.258564315620028))) UNION SELECT DISTINCT * FROM t1, t0, rt0 WHERE (((0.258564315620028) ISNULL));
SELECT DISTINCT * FROM t1, t0, rt0;
SELECT ALL t0.c0, rt0.c3, t1.c0 FROM t1, t0, rt0 GROUP BY t0.c0, rt0.c3, t1.c0;
SELECT ALL t0.c0, rt0.c3, t1.c0 FROM t1, t0, rt0 WHERE (((((rt0.c0) NOT NULL)) BETWEEN (CAST(t1.c0 AS REAL)) AND (((NULL)/(rt0.c0))))) GROUP BY t0.c0, rt0.c3, t1.c0 UNION SELECT ALL t0.c0, rt0.c3, t1.c0 FROM t1, t0, rt0 WHERE ((NOT (((((rt0.c0) NOT NULL)) BETWEEN (CAST(t1.c0 AS REAL)) AND (((NULL)/(rt0.c0))))))) GROUP BY t0.c0, rt0.c3, t1.c0 UNION SELECT ALL t0.c0, rt0.c3, t1.c0 FROM t1, t0, rt0 WHERE (((((((rt0.c0) NOT NULL)) BETWEEN (CAST(t1.c0 AS REAL)) AND (((NULL)/(rt0.c0))))) ISNULL)) GROUP BY t0.c0, rt0.c3, t1.c0;
SELECT ALL t0.c0, rt0.c3, t1.c0 FROM t1, t0, rt0 GROUP BY t0.c0, rt0.c3, t1.c0;
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL t1.c0, t0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM t1 FULL OUTER JOIN t0 ON CAST(t0.c0 AS NUMERIC) CROSS JOIN rt0 ON (((rt0.c1)*(t1.c0)) IN ());
SELECT ALL t1.c0, t0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM t1 FULL OUTER JOIN t0 ON CAST(t0.c0 AS NUMERIC) CROSS JOIN rt0 ON (((rt0.c1)*(t1.c0)) IN ()) WHERE (((rt0.c2 COLLATE BINARY)+(((rt0.c0)=(rt0.c2))))) UNION ALL SELECT ALL t1.c0, t0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM t1 FULL OUTER JOIN t0 ON CAST(t0.c0 AS NUMERIC) CROSS JOIN rt0 ON (((rt0.c1)*(t1.c0)) IN ()) WHERE ((NOT (((rt0.c2 COLLATE BINARY)+(((rt0.c0)=(rt0.c2))))))) UNION ALL SELECT t1.c0, t0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM t1 FULL OUTER JOIN t0 ON CAST(t0.c0 AS NUMERIC) CROSS JOIN rt0 ON (((rt0.c1)*(t1.c0)) IN ()) WHERE (((((rt0.c2 COLLATE BINARY)+(((rt0.c0)==(rt0.c2))))) ISNULL));
SELECT ALL t1.c0, t0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM t1 FULL OUTER JOIN t0 ON CAST(t0.c0 AS NUMERIC) CROSS JOIN rt0 ON (((rt0.c1)*(t1.c0)) IN ());
SELECT DISTINCT rt0.c0 FROM t0, t1, rt0;
SELECT DISTINCT rt0.c0 FROM t0, t1, rt0 WHERE (JULIANDAY(UPPER(DISTINCT t1.c0), CAST(rt0.c2 AS NUMERIC), json_array_length(t1.c0, rt0.c0))) UNION SELECT DISTINCT rt0.c0 FROM t0, t1, rt0 WHERE ((NOT (JULIANDAY(UPPER(DISTINCT t1.c0), CAST(rt0.c2 AS NUMERIC), json_array_length(t1.c0, rt0.c0))))) UNION SELECT DISTINCT rt0.c0 FROM t0, t1, rt0 WHERE (((JULIANDAY(UPPER(DISTINCT t1.c0), CAST(rt0.c2 AS NUMERIC), json_array_length(t1.c0, rt0.c0))) ISNULL));
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0)AND(0xffffffffe75b5f58)))OR(t0.c0 COLLATE NOCASE))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)AND(0xffffffffe75b5f58)))OR(t0.c0 COLLATE NOCASE))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0)AND(0xffffffffe75b5f58)))OR(t0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c1, t1.c0 FROM rt0, t1, t0 GROUP BY rt0.c1, t1.c0;
SELECT rt0.c1, t1.c0 FROM rt0, t1, t0 GROUP BY rt0.c1, t1.c0 HAVING ((TOTAL(AVG(rt0.c1)))GLOB(GROUP_CONCAT(COUNT(rt0.c1)))) UNION ALL SELECT ALL rt0.c1, t1.c0 FROM rt0, t1, t0 GROUP BY rt0.c1, t1.c0 HAVING (NOT (((TOTAL(AVG(rt0.c1)))GLOB(GROUP_CONCAT(COUNT(rt0.c1)))))) UNION ALL SELECT ALL rt0.c1, t1.c0 FROM rt0, t1, t0 GROUP BY rt0.c1, t1.c0 HAVING ((((TOTAL(AVG(rt0.c1)))GLOB(GROUP_CONCAT(COUNT(rt0.c1))))) ISNULL);
SELECT ALL TOTAL(((x'01b9')%((t0.c0 IN ())))) FROM t0, t1 ORDER BY t0.c0 ASC  NULLS LAST;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (CAST((+ (NULL)) AS INTEGER)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CAST((+ (NULL)) AS INTEGER)))) UNION ALL SELECT * FROM t0 WHERE (((CAST((+ (NULL)) AS INTEGER)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t1.c0, rt0.c0 FROM t0, t1 CROSS JOIN rt0 ON ((((rt0.c2) IS FALSE)) IS FALSE);
SELECT DISTINCT t1.c0, rt0.c0 FROM t0, t1 CROSS JOIN rt0 ON ((((rt0.c2) IS FALSE)) IS FALSE) WHERE ((((((rt0.c2))==((rt0.c0))))|(CASE rt0.c3  WHEN rt0.c3 THEN t0.c0 ELSE rt0.c3 END))) UNION SELECT DISTINCT t1.c0, rt0.c0 FROM t0, t1 CROSS JOIN rt0 ON ((((rt0.c2) IS FALSE)) IS FALSE) WHERE ((NOT ((((((rt0.c2))=((rt0.c0))))|(CASE rt0.c3  WHEN rt0.c3 THEN t0.c0 ELSE rt0.c3 END))))) UNION SELECT DISTINCT t1.c0, rt0.c0 FROM t0, t1 CROSS JOIN rt0 ON ((((rt0.c2) IS FALSE)) IS FALSE) WHERE ((((((((rt0.c2))==((rt0.c0))))|(CASE rt0.c3  WHEN rt0.c3 THEN t0.c0 ELSE rt0.c3 END))) ISNULL));
SELECT DISTINCT t1.c0, rt0.c0 FROM t0, t1 CROSS JOIN rt0 ON ((((rt0.c2) IS FALSE)) IS FALSE);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c3)==(rt0.c1))))!=(((((rt0.c0))>=((rt0.c2))))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c3)=(rt0.c1))))<>(((((rt0.c0))>=((rt0.c2))))))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((((((((rt0.c3)==(rt0.c1))))!=(((((rt0.c0))>=((rt0.c2))))))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, t1;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, t1 WHERE ((((t1.c0)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, t1 WHERE ((NOT ((((t1.c0)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, t1 WHERE ((((((t1.c0)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))))) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, t1;
SELECT DISTINCT t0.c0 FROM t1 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c0 THEN t1.c0 END COLLATE NOCASE;
SELECT DISTINCT t0.c0 FROM t1 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c0 THEN t1.c0 END COLLATE NOCASE WHERE (CASE WHEN (+ (t0.c0)) THEN ((t0.c0)GLOB(t1.c0)) END) UNION SELECT DISTINCT t0.c0 FROM t1 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c0 THEN t1.c0 END COLLATE NOCASE WHERE ((NOT (CASE WHEN (+ (t0.c0)) THEN ((t0.c0)GLOB(t1.c0)) END))) UNION SELECT DISTINCT t0.c0 FROM t1 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c0 THEN t1.c0 END COLLATE NOCASE WHERE (((CASE WHEN (+ (t0.c0)) THEN ((t0.c0)GLOB(t1.c0)) END) ISNULL));
SELECT DISTINCT t0.c0 FROM t1 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c0 THEN t1.c0 END COLLATE NOCASE;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((LOWER(NULL))||(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((LOWER(NULL))||(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((LOWER(NULL))||(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c2 FROM t1, t0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM t1, t0, rt0 GROUP BY rt0.c2 HAVING (((((COUNT(COUNT(*))))==((COUNT(rt0.c2))))) BETWEEN (MAX(GROUP_CONCAT(TOTAL(SUM(GROUP_CONCAT(rt0.c3)))))) AND ((+ (rt0.c0)))) UNION ALL SELECT ALL rt0.c2 FROM t1, t0, rt0 GROUP BY rt0.c2 HAVING (NOT ((((((COUNT(COUNT(*))))=((COUNT(rt0.c2))))) BETWEEN (MAX(GROUP_CONCAT(TOTAL(SUM(GROUP_CONCAT(rt0.c3)))))) AND ((+ (rt0.c0)))))) UNION ALL SELECT rt0.c2 FROM t1 NOT INDEXED, t0, rt0 GROUP BY rt0.c2 HAVING (((((((COUNT(COUNT(*))))==((COUNT(rt0.c2))))) BETWEEN (MAX(GROUP_CONCAT(TOTAL(SUM(GROUP_CONCAT(rt0.c3)))))) AND ((+ (rt0.c0))))) ISNULL);
SELECT ALL * FROM t0, rt0, t1;
SELECT * FROM t0, rt0, t1 WHERE (UNICODE(x'')) UNION ALL SELECT * FROM t0, rt0, t1 WHERE ((NOT (UNICODE(x'')))) UNION ALL SELECT * FROM t0, rt0, t1 WHERE (((UNICODE(x'')) ISNULL));
SELECT ALL * FROM t0, rt0, t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((- (((((t1.c0)AND(t1.c0)))OR(t1.c0))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((- (((((t1.c0)AND(t1.c0)))OR(t1.c0))))))) UNION SELECT DISTINCT * FROM t1 WHERE ((((- (((((t1.c0)AND(t1.c0)))OR(t1.c0))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (((((rt0.c2 COLLATE NOCASE)AND(((rt0.c0)*(rt0.c2)))))AND(((((((((NULL)AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2 COLLATE NOCASE)AND(((rt0.c0)*(rt0.c2)))))AND(((((((((NULL)AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((((rt0.c2 COLLATE NOCASE)AND(((rt0.c0)*(rt0.c2)))))AND(((((((((NULL)AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL rt0.c2 FROM t0, rt0 RIGHT OUTER JOIN t1 ON ((0.7898361067402512)-(t0.c0)) COLLATE NOCASE;
SELECT rt0.c2 FROM t0, rt0 RIGHT OUTER JOIN t1 ON ((0.7898361067402512)-(t0.c0)) COLLATE NOCASE WHERE (((((((((t1.c0)OR(((rt0.c2)=(rt0.c1)))))AND(CASE t0.c0  WHEN rt0.c3 THEN t1.c0 ELSE t1.c0 END)))OR(CASE WHEN t1.c0 THEN rt0.c3 ELSE rt0.c3 END)))AND(t1.c0))) UNION ALL SELECT rt0.c2 FROM t0, rt0 RIGHT OUTER JOIN t1 ON ((0.7898361067402512)-(t0.c0)) COLLATE NOCASE WHERE ((NOT (((((((((t1.c0)OR(((rt0.c2)==(rt0.c1)))))AND(CASE t0.c0  WHEN rt0.c3 THEN t1.c0 ELSE t1.c0 END)))OR(CASE WHEN t1.c0 THEN rt0.c3 ELSE rt0.c3 END)))AND(t1.c0))))) UNION ALL SELECT ALL rt0.c2 FROM t0, rt0 RIGHT OUTER JOIN t1 ON ((0.7898361067402512)-(t0.c0)) COLLATE NOCASE WHERE (((((((((((t1.c0)OR(((rt0.c2)==(rt0.c1)))))AND(CASE t0.c0  WHEN rt0.c3 THEN t1.c0 ELSE t1.c0 END)))OR(CASE WHEN t1.c0 THEN rt0.c3 ELSE rt0.c3 END)))AND(t1.c0))) ISNULL));
SELECT ALL rt0.c2 FROM t0, rt0 RIGHT OUTER JOIN t1 ON ((0.7898361067402512)-(t0.c0)) COLLATE NOCASE;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3, rt0.c0, t1.c0 FROM rt0, t1, t0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3, rt0.c0, t1.c0 FROM rt0, t1, t0 WHERE (((((rt0.c0)<(rt0.c2))) IS TRUE)) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3, rt0.c0, t1.c0 FROM rt0, t1, t0 WHERE ((NOT (((((rt0.c0)<(rt0.c2))) IS TRUE)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3, rt0.c0, t1.c0 FROM rt0, t1, t0 WHERE (((((((rt0.c0)<(rt0.c2))) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3, rt0.c0, t1.c0 FROM rt0, t1, t0;
SELECT rt0.c1 FROM t1, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM t1, rt0 WHERE (0.07031710822935) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM t1, rt0 WHERE ((NOT (0.07031710822935))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM t1, rt0 WHERE (((0.07031710822935) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM t1, rt0 GROUP BY rt0.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(NULL) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(NULL))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(NULL)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(NULL) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(NULL))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(NULL)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER)) UNION ALL SELECT * FROM t0 WHERE ((NOT (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER)))) UNION ALL SELECT ALL * FROM t0 WHERE (((CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0))))=((CAST(t1.c0 AS NUMERIC))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0))))==((CAST(t1.c0 AS NUMERIC))))))) UNION SELECT DISTINCT * FROM t1 WHERE ((((((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0))))=((CAST(t1.c0 AS NUMERIC))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, t0.c0 FROM rt0, t0 GROUP BY rt0.c3, rt0.c2, rt0.c1, t0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, t0.c0 FROM rt0, t0 WHERE ((- (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) GROUP BY rt0.c3, rt0.c2, rt0.c1, t0.c0 UNION SELECT rt0.c3, rt0.c2, rt0.c1, t0.c0 FROM rt0, t0 WHERE ((NOT ((- (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0))))))) GROUP BY rt0.c3, rt0.c2, rt0.c1, t0.c0 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c1, t0.c0 FROM rt0, t0 WHERE ((((- (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c1, t0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, t0.c0 FROM rt0, t0 GROUP BY rt0.c3, rt0.c2, rt0.c1, t0.c0;
SELECT ALL t0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c3, rt0.c2, rt0.c0;
SELECT t0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c3, rt0.c2, rt0.c0 HAVING rt0.c1 UNION ALL SELECT ALL t0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c3, rt0.c2, rt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL t0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c3, rt0.c2, rt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT ALL t0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c3, rt0.c2, rt0.c0;
SELECT t0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c3, rt0.c2, rt0.c0 HAVING rt0.c1 UNION ALL SELECT ALL t0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c3, rt0.c2, rt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL t0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c3, rt0.c2, rt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT ALL t0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c3, rt0.c2, rt0.c0;
SELECT ALL rt0.c0, rt0.c3 FROM rt0, t1;
SELECT ALL rt0.c0, rt0.c3 FROM rt0, t1 WHERE (((((((rt0.c3)OR(t1.c0)))OR(rt0.c3)))>>(((rt0.c0) NOTNULL)))) UNION ALL SELECT rt0.c0, rt0.c3 FROM rt0, t1 WHERE ((NOT (((((((rt0.c3)OR(t1.c0)))OR(rt0.c3)))>>(((rt0.c0) NOTNULL)))))) UNION ALL SELECT rt0.c0, rt0.c3 FROM rt0, t1 WHERE (((((((((rt0.c3)OR(t1.c0)))OR(rt0.c3)))>>(((rt0.c0) NOTNULL)))) ISNULL));
SELECT ALL rt0.c0, rt0.c3 FROM rt0, t1;
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN rt0 ON 0.7857632706885945 FULL OUTER JOIN t1 ON (rt0.c3 IN (rt0.c1)) COLLATE RTRIM;
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN rt0 ON 0.7857632706885945 FULL OUTER JOIN t1 ON (rt0.c3 IN (rt0.c1)) COLLATE RTRIM WHERE (x'') UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN rt0 ON 0.7857632706885945 FULL OUTER JOIN t1 ON (rt0.c3 IN (rt0.c1)) COLLATE RTRIM WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN rt0 ON 0.7857632706885945 FULL OUTER JOIN t1 ON (rt0.c3 IN (rt0.c1)) COLLATE RTRIM WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN rt0 ON 0.7857632706885945 FULL OUTER JOIN t1 ON (rt0.c3 IN (rt0.c1)) COLLATE RTRIM;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ((t0.c0 IN ()), t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ((t0.c0 IN ()), t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ((t0.c0 IN ()), t0.c0))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING COUNT(MIN(rt0.c2)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (COUNT(MIN(rt0.c2)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(MIN(rt0.c2))) ISNULL);
SELECT * FROM rt0, t1, t0;
SELECT ALL * FROM rt0, t1, t0 WHERE (TRIM(DISTINCT CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)) UNION ALL SELECT ALL * FROM rt0, t1, t0 WHERE ((NOT (TRIM(DISTINCT CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)))) UNION ALL SELECT * FROM rt0, t1, t0 WHERE (((TRIM(DISTINCT CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)) ISNULL));
SELECT * FROM rt0, t1, t0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (CASE ((NULL)LIKE(t1.c0))  WHEN (~ (t1.c0)) THEN ((t1.c0) ISNULL) WHEN '1780125171' THEN ((t1.c0) IS FALSE) WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN 0.7953764081263514 ELSE t1.c0 COLLATE BINARY END) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (CASE ((NULL)LIKE(t1.c0))  WHEN (~ (t1.c0)) THEN ((t1.c0) ISNULL) WHEN '1780125171' THEN ((t1.c0) IS FALSE) WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN 0.7953764081263514 ELSE t1.c0 COLLATE BINARY END))) UNION SELECT DISTINCT * FROM t1 WHERE (((CASE ((NULL)LIKE(t1.c0))  WHEN (~ (t1.c0)) THEN ((t1.c0) ISNULL) WHEN '1780125171' THEN ((t1.c0) IS FALSE) WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN 0.7953764081263514 ELSE t1.c0 COLLATE BINARY END) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT rt0.c0, rt0.c3, rt0.c2, t1.c0, rt0.c1 FROM t1, t0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, t1.c0, rt0.c1;
SELECT rt0.c0, rt0.c3, rt0.c2, t1.c0, rt0.c1 FROM t1, t0, rt0 WHERE (IFNULL(TYPEOF(rt0.c1), ((((((((t1.c0)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c0)))) GROUP BY rt0.c0, rt0.c3, rt0.c2, t1.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c2, t1.c0, rt0.c1 FROM t1, t0, rt0 WHERE ((NOT (IFNULL(TYPEOF(rt0.c1), ((((((((t1.c0)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c0)))))) GROUP BY rt0.c0, rt0.c3, rt0.c2, t1.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c3, rt0.c2, t1.c0, rt0.c1 FROM t1, t0, rt0 WHERE (((IFNULL(TYPEOF(rt0.c1), ((((((((t1.c0)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c0)))) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c2, t1.c0, rt0.c1;
SELECT rt0.c0, rt0.c3, rt0.c2, t1.c0, rt0.c1 FROM t1, t0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, t1.c0, rt0.c1;
SELECT ALL rt0.c0, t0.c0, t1.c0, rt0.c2, rt0.c1, rt0.c3 FROM t0, rt0, t1 GROUP BY rt0.c0, t0.c0, t1.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, t0.c0, t1.c0, rt0.c2, rt0.c1, rt0.c3 FROM t0, rt0, t1 GROUP BY rt0.c0, t0.c0, t1.c0, rt0.c2, rt0.c1, rt0.c3 HAVING MAX(COUNT(GROUP_CONCAT(rt0.c2))) UNION ALL SELECT rt0.c0, t0.c0, t1.c0, rt0.c2, rt0.c1, rt0.c3 FROM t0, rt0, t1 GROUP BY rt0.c0, t0.c0, t1.c0, rt0.c2, rt0.c1, rt0.c3 HAVING (NOT (MAX(COUNT(GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT ALL rt0.c0, t0.c0, t1.c0, rt0.c2, rt0.c1, rt0.c3 FROM t0, rt0, t1 GROUP BY rt0.c0, t0.c0, t1.c0, rt0.c2, rt0.c1, rt0.c3 HAVING ((MAX(COUNT(GROUP_CONCAT(rt0.c2)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (UPPER(rt0.c2) COLLATE NOCASE) UNION ALL SELECT * FROM rt0 NOT INDEXED WHERE ((NOT (UPPER(rt0.c2) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0 WHERE (((UPPER(rt0.c2) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT t1.c0 FROM t1, rt0;
SELECT DISTINCT t1.c0 FROM t1, rt0 WHERE (MIN((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)))) UNION SELECT DISTINCT t1.c0 FROM t1, rt0 WHERE ((NOT (MIN((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)))))) UNION SELECT DISTINCT t1.c0 FROM t1, rt0 WHERE (((MIN((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1, rt0;
SELECT t1.c0, t0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM t1 FULL OUTER JOIN t0 ON ((((rt0.c2)<<(rt0.c0)))GLOB(x'')) LEFT OUTER JOIN rt0 ON ((((rt0.c3) ISNULL)) NOT NULL) GROUP BY t1.c0, t0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2;
SELECT rt0.c2, t0.c0, rt0.c3, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c0, rt0.c3, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, t0.c0, rt0.c3, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c0, rt0.c3, rt0.c0, rt0.c1 HAVING CASE WHEN COUNT(rt0.c1) THEN GROUP_CONCAT(SUM(t0.c0)) WHEN (~ (rt0.c3)) THEN GROUP_CONCAT(MAX(GROUP_CONCAT(COUNT(*)))) WHEN (((AVG(COUNT(*)))) NOT BETWEEN ((MIN(rt0.c1))) AND ((t0.c0))) THEN (((TOTAL(rt0.c2), rt0.c1, t0.c0)) BETWEEN ((t0.c0, TOTAL(rt0.c2), rt0.c3)) AND ((COUNT(*), rt0.c0, MIN(COUNT(*))))) ELSE TOTAL(t0.c0) END UNION ALL SELECT ALL rt0.c2, t0.c0, rt0.c3, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c0, rt0.c3, rt0.c0, rt0.c1 HAVING (NOT (CASE WHEN COUNT(rt0.c1) THEN GROUP_CONCAT(SUM(t0.c0)) WHEN (~ (rt0.c3)) THEN GROUP_CONCAT(MAX(GROUP_CONCAT(COUNT(*)))) WHEN (((AVG(COUNT(*)))) NOT BETWEEN ((MIN(rt0.c1))) AND ((t0.c0))) THEN (((TOTAL(rt0.c2), rt0.c1, t0.c0)) BETWEEN ((t0.c0, TOTAL(rt0.c2), rt0.c3)) AND ((COUNT(*), rt0.c0, MIN(COUNT(*))))) ELSE TOTAL(t0.c0) END)) UNION ALL SELECT ALL rt0.c2, t0.c0, rt0.c3, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c0, rt0.c3, rt0.c0, rt0.c1 HAVING ((CASE WHEN COUNT(rt0.c1) THEN GROUP_CONCAT(SUM(t0.c0)) WHEN (~ (rt0.c3)) THEN GROUP_CONCAT(MAX(GROUP_CONCAT(COUNT(*)))) WHEN (((AVG(COUNT(*)))) NOT BETWEEN ((MIN(rt0.c1))) AND ((t0.c0))) THEN (((TOTAL(rt0.c2), rt0.c1, t0.c0)) BETWEEN ((t0.c0, TOTAL(rt0.c2), rt0.c3)) AND ((COUNT(*), rt0.c0, MIN(COUNT(*))))) ELSE TOTAL(t0.c0) END) ISNULL);
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON (((((((((((((rt0.c0)AND(rt0.c3)))OR(t0.c0)))OR(x'')))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) IN ()) CROSS JOIN t1 ON ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN ((NOT (rt0.c0))) AND (((rt0.c0)=(rt0.c3))));
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON (((((((((((((rt0.c0)AND(rt0.c3)))OR(t0.c0)))OR(x'')))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) IN ()) CROSS JOIN t1 ON ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN ((NOT (rt0.c0))) AND (((rt0.c0)==(rt0.c3)))) WHERE (CAST((((rt0.c1)) NOT BETWEEN ((t1.c0)) AND ((rt0.c3))) AS BLOB)) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON (((((((((((((rt0.c0)AND(rt0.c3)))OR(t0.c0)))OR(x'')))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) IN ()) CROSS JOIN t1 ON ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN ((NOT (rt0.c0))) AND (((rt0.c0)=(rt0.c3)))) WHERE ((NOT (CAST((((rt0.c1)) NOT BETWEEN ((t1.c0)) AND ((rt0.c3))) AS BLOB)))) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON (((((((((((((rt0.c0)AND(rt0.c3)))OR(t0.c0)))OR(x'')))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) IN ()) CROSS JOIN t1 ON ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN ((NOT (rt0.c0))) AND (((rt0.c0)=(rt0.c3)))) WHERE (((CAST((((rt0.c1)) NOT BETWEEN ((t1.c0)) AND ((rt0.c3))) AS BLOB)) ISNULL));
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON (((((((((((((rt0.c0)AND(rt0.c3)))OR(t0.c0)))OR(x'')))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) IN ()) CROSS JOIN t1 ON ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN ((NOT (rt0.c0))) AND (((rt0.c0)=(rt0.c3))));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE (((rt0.c0)>>((((rt0.c2, rt0.c1, rt0.c0))<=((rt0.c0, rt0.c0, rt0.c3)))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (((rt0.c0)>>((((rt0.c2, rt0.c1, rt0.c0))<=((rt0.c0, rt0.c0, rt0.c3)))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE (((((rt0.c0)>>((((rt0.c2, rt0.c1, rt0.c0))<=((rt0.c0, rt0.c0, rt0.c3)))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3 FROM rt0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((CASE t1.c0  WHEN 0.8115529429046101 THEN 'ialc' WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)IS NOT(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((CASE t1.c0  WHEN 0.8115529429046101 THEN 'ialc' WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)IS NOT(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((((CASE t1.c0  WHEN 0.8115529429046101 THEN 'ialc' WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)IS NOT(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING TOTAL(GROUP_CONCAT(rt0.c1)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (TOTAL(GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((TOTAL(GROUP_CONCAT(rt0.c1))) ISNULL);
SELECT ALL * FROM rt0 CROSS JOIN t0 ON CASE WHEN CASE t0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE '1419902256' END THEN ((t0.c0)AND(rt0.c0)) ELSE NULLIF(DISTINCT NULL, rt0.c2) END;
SELECT * FROM rt0 CROSS JOIN t0 ON CASE WHEN CASE t0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE '1419902256' END THEN ((t0.c0)AND(rt0.c0)) ELSE NULLIF(DISTINCT NULL, rt0.c2) END WHERE (((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c3)))AND(t0.c0)))AND('-1721722603'))) NOT BETWEEN (rt0.c2) AND (CASE rt0.c3  WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN t0.c0 ELSE t0.c0 END))) UNION ALL SELECT * FROM rt0 CROSS JOIN t0 ON CASE WHEN CASE t0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE '1419902256' END THEN ((t0.c0)AND(rt0.c0)) ELSE NULLIF(DISTINCT NULL, rt0.c2) END WHERE ((NOT (((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c3)))AND(t0.c0)))AND('-1721722603'))) NOT BETWEEN (rt0.c2) AND (CASE rt0.c3  WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN t0.c0 ELSE t0.c0 END))))) UNION ALL SELECT * FROM rt0 CROSS JOIN t0 ON CASE WHEN CASE t0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE '1419902256' END THEN ((t0.c0)AND(rt0.c0)) ELSE NULLIF(DISTINCT NULL, rt0.c2) END WHERE (((((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c3)))AND(t0.c0)))AND('-1721722603'))) NOT BETWEEN (rt0.c2) AND (CASE rt0.c3  WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN t0.c0 ELSE t0.c0 END))) ISNULL));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON CASE WHEN CASE t0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE '1419902256' END THEN ((t0.c0)AND(rt0.c0)) ELSE NULLIF(DISTINCT NULL, rt0.c2) END;
SELECT DISTINCT * FROM t0, t1 INDEXED BY i42;
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0 WHERE (CAST(t0.c0 AS NUMERIC)) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t1, t0 WHERE ((NOT (CAST(t0.c0 AS NUMERIC)))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t1, t0 WHERE (((CAST(t0.c0 AS NUMERIC)) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(MAX(MAX(rt0.c0))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(MAX(MAX(rt0.c0))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(MAX(MAX(rt0.c0)))) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END COLLATE NOCASE) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END COLLATE NOCASE) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c3, t1.c0, t0.c0 FROM t0, rt0, t1;
SELECT DISTINCT rt0.c3, t1.c0, t0.c0 FROM t0, rt0, t1 WHERE (((((t1.c0)<<(rt0.c0))) IS FALSE)) UNION SELECT DISTINCT rt0.c3, t1.c0, t0.c0 FROM t0, rt0, t1 WHERE ((NOT (((((t1.c0)<<(rt0.c0))) IS FALSE)))) UNION SELECT DISTINCT rt0.c3, t1.c0, t0.c0 FROM t0, rt0, t1 WHERE (((((((t1.c0)<<(rt0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c3, t1.c0, t0.c0 FROM t0, rt0, t1;
SELECT rt0.c3, rt0.c1 FROM t1, rt0 GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM t1, rt0 WHERE (CASE rt0.c0  WHEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)) THEN ((rt0.c1) BETWEEN (NULL) AND (rt0.c3)) END) GROUP BY rt0.c3, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c1 FROM t1, rt0 WHERE ((NOT (CASE rt0.c0  WHEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)) THEN ((rt0.c1) BETWEEN (NULL) AND (rt0.c3)) END))) GROUP BY rt0.c3, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c1 FROM t1, rt0 WHERE (((CASE rt0.c0  WHEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)) THEN ((rt0.c1) BETWEEN (NULL) AND (rt0.c3)) END) ISNULL)) GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM t1, rt0 GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c0, rt0.c3, t0.c0, rt0.c2, t1.c0, rt0.c1 FROM t1 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c0))) BETWEEN ((~ (NULL))) AND (((t1.c0)>>(t0.c0)))) CROSS JOIN t0 ON ((((((rt0.c0) IS TRUE))AND(((t0.c0)&(rt0.c2)))))AND(((t0.c0) IS TRUE))) GROUP BY rt0.c0, rt0.c3, t0.c0, rt0.c2, t1.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c3, t0.c0, rt0.c2, t1.c0, rt0.c1 FROM t1 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c0))) BETWEEN ((~ (NULL))) AND (((t1.c0)>>(t0.c0)))) CROSS JOIN t0 ON ((((((rt0.c0) IS TRUE))AND(((t0.c0)&(rt0.c2)))))AND(((t0.c0) IS TRUE))) GROUP BY rt0.c0, rt0.c3, t0.c0, rt0.c2, t1.c0, rt0.c1 HAVING MAX(SUM(rt0.c0)) COLLATE NOCASE UNION ALL SELECT rt0.c0, rt0.c3, t0.c0, rt0.c2, t1.c0, rt0.c1 FROM t1 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c0))) BETWEEN ((~ (NULL))) AND (((t1.c0)>>(t0.c0)))) CROSS JOIN t0 ON ((((((rt0.c0) IS TRUE))AND(((t0.c0)&(rt0.c2)))))AND(((t0.c0) IS TRUE))) GROUP BY rt0.c0, rt0.c3, t0.c0, rt0.c2, t1.c0, rt0.c1 HAVING (NOT (MAX(SUM(rt0.c0)) COLLATE NOCASE)) UNION ALL SELECT rt0.c0, rt0.c3, t0.c0, rt0.c2, t1.c0, rt0.c1 FROM t1 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c0))) BETWEEN ((~ (NULL))) AND (((t1.c0)>>(t0.c0)))) CROSS JOIN t0 ON ((((((rt0.c0) IS TRUE))AND(((t0.c0)&(rt0.c2)))))AND(((t0.c0) IS TRUE))) GROUP BY rt0.c0, rt0.c3, t0.c0, rt0.c2, t1.c0, rt0.c1 HAVING ((MAX(SUM(rt0.c0)) COLLATE NOCASE) ISNULL);
SELECT MIN(CAST(rt0.c3 COLLATE BINARY AS TEXT)) FROM t1, rt0;
SELECT ALL * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE (CASE WHEN ((t0.c0)>>(rt0.c2)) THEN ((t0.c0)&(rt0.c2)) WHEN ((rt0.c1)!=('')) THEN ((rt0.c3)<=(rt0.c1)) WHEN ((rt0.c1)=(rt0.c1)) THEN (((rt0.c0))<>((rt0.c2))) WHEN ((rt0.c0)|(rt0.c2)) THEN ((t0.c0) BETWEEN (rt0.c1) AND (t0.c0)) WHEN (+ (t0.c0)) THEN (- (t0.c0)) END) UNION ALL SELECT * FROM t0, rt0 WHERE ((NOT (CASE WHEN ((t0.c0)>>(rt0.c2)) THEN ((t0.c0)&(rt0.c2)) WHEN ((rt0.c1)<>('')) THEN ((rt0.c3)<=(rt0.c1)) WHEN ((rt0.c1)==(rt0.c1)) THEN (((rt0.c0))<>((rt0.c2))) WHEN ((rt0.c0)|(rt0.c2)) THEN ((t0.c0) BETWEEN (rt0.c1) AND (t0.c0)) WHEN (+ (t0.c0)) THEN (- (t0.c0)) END))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE (((CASE WHEN ((t0.c0)>>(rt0.c2)) THEN ((t0.c0)&(rt0.c2)) WHEN ((rt0.c1)<>('')) THEN ((rt0.c3)<=(rt0.c1)) WHEN ((rt0.c1)==(rt0.c1)) THEN (((rt0.c0))<>((rt0.c2))) WHEN ((rt0.c0)|(rt0.c2)) THEN ((t0.c0) BETWEEN (rt0.c1) AND (t0.c0)) WHEN (+ (t0.c0)) THEN (- (t0.c0)) END) ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT t1.c0, rt0.c1, rt0.c2 FROM t1 INNER JOIN rt0 ON CAST(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)) AS REAL);
SELECT DISTINCT t1.c0, rt0.c1, rt0.c2 FROM t1 INNER JOIN rt0 ON CAST(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)) AS REAL) WHERE ((((0.43953651370590896))>=((t1.c0))) COLLATE RTRIM) UNION SELECT DISTINCT t1.c0, rt0.c1, rt0.c2 FROM t1 INNER JOIN rt0 ON CAST(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)) AS REAL) WHERE ((NOT ((((0.43953651370590896))>=((t1.c0))) COLLATE RTRIM))) UNION SELECT DISTINCT t1.c0, rt0.c1, rt0.c2 FROM t1 INNER JOIN rt0 ON CAST(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)) AS REAL) WHERE ((((((0.43953651370590896))>=((t1.c0))) COLLATE RTRIM) ISNULL));
SELECT DISTINCT t1.c0, rt0.c1, rt0.c2 FROM t1 INNER JOIN rt0 ON CAST(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)) AS REAL);
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0 WHERE ((~ (CASE WHEN NULL THEN t0.c0 END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t1, t0 WHERE ((NOT ((~ (CASE WHEN NULL THEN t0.c0 END))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t1, t0 WHERE ((((~ (CASE WHEN NULL THEN t0.c0 END))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 HAVING ((((((((((rt0.c3)AND(COUNT(*))))OR(rt0.c3)))OR(MIN(COUNT(TOTAL(COUNT(MIN(MIN(rt0.c2)))))))))AND(rt0.c1)))<>((MIN(rt0.c1) IN (rt0.c1, rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 HAVING (NOT (((((((((((rt0.c3)AND(COUNT(*))))OR(rt0.c3)))OR(MIN(COUNT(TOTAL(COUNT(MIN(MIN(rt0.c2)))))))))AND(rt0.c1)))!=((MIN(rt0.c1) IN (rt0.c1, rt0.c1)))))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 HAVING ((((((((((((rt0.c3)AND(COUNT(*))))OR(rt0.c3)))OR(MIN(COUNT(TOTAL(COUNT(MIN(MIN(rt0.c2)))))))))AND(rt0.c1)))!=((MIN(rt0.c1) IN (rt0.c1, rt0.c1))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (HEX((- (rt0.c1)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (HEX((- (rt0.c1)))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((HEX((- (rt0.c1)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM t0, rt0 INNER JOIN t1 ON (((t1.c0 IN ())) IS FALSE);
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM t0, rt0 INNER JOIN t1 ON (((t1.c0 IN ())) IS FALSE) WHERE (CAST(rt0.c1 COLLATE BINARY AS INTEGER)) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM t0, rt0 INNER JOIN t1 ON (((t1.c0 IN ())) IS FALSE) WHERE ((NOT (CAST(rt0.c1 COLLATE BINARY AS INTEGER)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM t0, rt0 INNER JOIN t1 ON (((t1.c0 IN ())) IS FALSE) WHERE (((CAST(rt0.c1 COLLATE BINARY AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM t0, rt0 INNER JOIN t1 ON (((t1.c0 IN ())) IS FALSE);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (PRINTF(((t1.c0)OR(t1.c0)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (PRINTF(((t1.c0)OR(t1.c0)))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((PRINTF(((t1.c0)OR(t1.c0)))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM t1, rt0 GROUP BY t1.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL t1.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM t1, rt0 GROUP BY t1.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1 HAVING rt0.c2 UNION ALL SELECT ALL t1.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM t1, rt0 GROUP BY t1.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1 HAVING (NOT (rt0.c2)) UNION ALL SELECT t1.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM t1, rt0 GROUP BY t1.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1 HAVING ((rt0.c2) ISNULL);
SELECT ALL t1.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM t1, rt0 GROUP BY t1.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL t1.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM t1, rt0 GROUP BY t1.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1 HAVING rt0.c2 UNION ALL SELECT ALL t1.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM t1, rt0 GROUP BY t1.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1 HAVING (NOT (rt0.c2)) UNION ALL SELECT t1.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM t1, rt0 GROUP BY t1.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1 HAVING ((rt0.c2) ISNULL);
SELECT ALL t1.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM t1, rt0 GROUP BY t1.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1;
SELECT MIN(((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))&(CAST(rt0.c2 AS BLOB)))) FROM rt0, t1 ORDER BY ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))<=(((rt0.c3) NOTNULL)));
SELECT t0.c0, rt0.c1 FROM t0, rt0;
SELECT t0.c0, rt0.c1 FROM t0, rt0 WHERE ((((((rt0.c3)||(t0.c0)), t0.c0, ((((1130961531)AND(rt0.c1)))OR(NULL))))=(((~ (rt0.c3)), (rt0.c1 IN ()), CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)))) UNION ALL SELECT t0.c0, rt0.c1 FROM t0, rt0 WHERE ((NOT ((((((rt0.c3)||(t0.c0)), t0.c0, ((((1130961531)AND(rt0.c1)))OR(NULL))))=(((~ (rt0.c3)), (rt0.c1 IN ()), CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)))))) UNION ALL SELECT t0.c0, rt0.c1 FROM t0, rt0 WHERE ((((((((rt0.c3)||(t0.c0)), t0.c0, ((((1130961531)AND(rt0.c1)))OR(NULL))))=(((~ (rt0.c3)), (rt0.c1 IN ()), CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)))) ISNULL));
SELECT t0.c0, rt0.c1 FROM t0, rt0;
SELECT DISTINCT * FROM rt0, t1 RIGHT OUTER JOIN t0 ON ((rt0.c2 COLLATE RTRIM) NOT NULL);
SELECT DISTINCT * FROM rt0, t1 RIGHT OUTER JOIN t0 ON ((rt0.c2 COLLATE RTRIM) NOT NULL) WHERE ((rt0.c1 COLLATE RTRIM IN ())) UNION SELECT DISTINCT * FROM rt0, t1 RIGHT OUTER JOIN t0 ON ((rt0.c2 COLLATE RTRIM) NOT NULL) WHERE ((NOT ((rt0.c1 COLLATE RTRIM IN ())))) UNION SELECT DISTINCT * FROM rt0, t1 RIGHT OUTER JOIN t0 ON ((rt0.c2 COLLATE RTRIM) NOT NULL) WHERE ((((rt0.c1 COLLATE RTRIM IN ())) ISNULL));
SELECT DISTINCT * FROM rt0, t1 RIGHT OUTER JOIN t0 ON ((rt0.c2 COLLATE RTRIM) NOT NULL);
SELECT ALL t0.c0 FROM t0 INDEXED BY i57 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((((UPPER(DISTINCT t0.c0)))<=(((t0.c0 IN ()))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((UPPER(DISTINCT t0.c0)))<=(((t0.c0 IN ()))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((((UPPER(DISTINCT t0.c0)))<=(((t0.c0 IN ()))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN t1 ON 0.23229702300652677;
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN t1 ON 0.23229702300652677 WHERE (x'') UNION SELECT DISTINCT * FROM t0 NOT INDEXED RIGHT OUTER JOIN t1 ON 0.23229702300652677 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN t1 ON 0.23229702300652677 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN t1 ON 0.23229702300652677;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0))=((((t0.c0) ISNULL))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0))=((((t0.c0) ISNULL))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0))=((((t0.c0) ISNULL))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(((((TOTAL(t0.c0))AND(t0.c0)))OR(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(((((TOTAL(t0.c0))AND(t0.c0)))OR(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(((((TOTAL(t0.c0))AND(t0.c0)))OR(t0.c0)))) ISNULL);
SELECT ALL rt0.c3, t0.c0, rt0.c2 FROM t0, t1, rt0 NOT INDEXED;
SELECT rt0.c3, t0.c0, rt0.c2 FROM t0, t1, rt0 WHERE ((((-1.419140253E9 IN ())) ISNULL)) UNION ALL SELECT ALL rt0.c3, t0.c0, rt0.c2 FROM t0, t1, rt0 WHERE ((NOT ((((-1.419140253E9 IN ())) ISNULL)))) UNION ALL SELECT ALL rt0.c3, t0.c0, rt0.c2 FROM t0, t1, rt0 WHERE ((((((-1.419140253E9 IN ())) ISNULL)) ISNULL));
SELECT ALL rt0.c3, t0.c0, rt0.c2 FROM t0, t1, rt0 NOT INDEXED;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((rt0.c3 IN ()) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((rt0.c3 IN ()) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((rt0.c3 IN ()) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL t1.c0 FROM rt0, t0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM rt0, t0, t1 WHERE (SUBSTR(((rt0.c0)||(t0.c0)), CASE rt0.c0  WHEN t1.c0 THEN rt0.c1 ELSE '.BK.[7*Q' END)) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM rt0, t0, t1 WHERE ((NOT (SUBSTR(((rt0.c0)||(t0.c0)), CASE rt0.c0  WHEN t1.c0 THEN rt0.c1 ELSE '.BK.[7*Q' END)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM rt0, t0, t1 WHERE (((SUBSTR(((rt0.c0)||(t0.c0)), CASE rt0.c0  WHEN t1.c0 THEN rt0.c1 ELSE '.BK.[7*Q' END)) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM rt0, t0, t1 GROUP BY t1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(MAX(t0.c0))) NOTNULL) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((TOTAL(MAX(t0.c0))) NOTNULL))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((TOTAL(MAX(t0.c0))) NOTNULL)) ISNULL);
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt0 ON (NOT (((rt0.c2)&(rt0.c1)))) INNER JOIN t0 ON ((((rt0.c2) NOTNULL)) ISNULL);
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt0 ON (NOT (((rt0.c2)&(rt0.c1)))) INNER JOIN t0 ON ((((rt0.c2) NOTNULL)) ISNULL) WHERE (((rt0.c0 COLLATE NOCASE) IS TRUE)) UNION ALL SELECT * FROM t1 RIGHT OUTER JOIN rt0 ON (NOT (((rt0.c2)&(rt0.c1)))) INNER JOIN t0 ON ((((rt0.c2) NOTNULL)) ISNULL) WHERE ((NOT (((rt0.c0 COLLATE NOCASE) IS TRUE)))) UNION ALL SELECT ALL * FROM t1 RIGHT OUTER JOIN rt0 ON (NOT (((rt0.c2)&(rt0.c1)))) INNER JOIN t0 ON ((((rt0.c2) NOTNULL)) ISNULL) WHERE (((((rt0.c0 COLLATE NOCASE) IS TRUE)) ISNULL));
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt0 ON (NOT (((rt0.c2)&(rt0.c1)))) INNER JOIN t0 ON ((((rt0.c2) NOTNULL)) ISNULL);
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((((((((rt0.c0)OR(rt0.c1)))AND((((rt0.c3))<>((rt0.c0))))))AND((((((((('-2100883786')AND(rt0.c0)))OR(x'4a9e')))AND(rt0.c0)))OR(rt0.c2)))))AND(x'869b')))AND(x'')))OR(rt0.c1)))OR('-1e500'))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((((((((((rt0.c0)OR(rt0.c1)))AND((((rt0.c3))<>((rt0.c0))))))AND((((((((('-2100883786')AND(rt0.c0)))OR(x'4a9e')))AND(rt0.c0)))OR(rt0.c2)))))AND(x'869b')))AND(x'')))OR(rt0.c1)))OR('-1e500'))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((((((((((rt0.c0)OR(rt0.c1)))AND((((rt0.c3))!=((rt0.c0))))))AND((((((((('-2100883786')AND(rt0.c0)))OR(x'4a9e')))AND(rt0.c0)))OR(rt0.c2)))))AND(x'869b')))AND(x'')))OR(rt0.c1)))OR('-1e500'))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ((CAST(t1.c0 AS NUMERIC) IN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((CAST(t1.c0 AS NUMERIC) IN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((((CAST(t1.c0 AS NUMERIC) IN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING SUM(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING (NOT (SUM(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING ((SUM(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING SUM(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING (NOT (SUM(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING ((SUM(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c2, t1.c0, rt0.c0, rt0.c3 FROM rt0 INNER JOIN t1 ON (- (0.3153686980141065 COLLATE NOCASE));
SELECT ALL rt0.c2, t1.c0, rt0.c0, rt0.c3 FROM rt0 INNER JOIN t1 ON (- (0.3153686980141065 COLLATE NOCASE)) WHERE ((NOT (CAST(rt0.c1 AS TEXT)))) UNION ALL SELECT ALL rt0.c2, t1.c0, rt0.c0, rt0.c3 FROM rt0 INNER JOIN t1 ON (- (0.3153686980141065 COLLATE NOCASE)) WHERE ((NOT ((NOT (CAST(rt0.c1 AS TEXT)))))) UNION ALL SELECT rt0.c2, t1.c0, rt0.c0, rt0.c3 FROM rt0 INNER JOIN t1 ON (- (0.3153686980141065 COLLATE NOCASE)) WHERE ((((NOT (CAST(rt0.c1 AS TEXT)))) ISNULL));
SELECT ALL rt0.c2, t1.c0, rt0.c0, rt0.c3 FROM rt0 INNER JOIN t1 ON (- (0.3153686980141065 COLLATE NOCASE));
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((NOT (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((NOT (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL rt0.c0 FROM rt0 LEFT OUTER JOIN t1 ON TRIM(DISTINCT (t0.c0 IN ()), ((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c3))) FULL OUTER JOIN t0 ON CASE (((-2.100883786E9, t0.c0, 0.8380419027880601))>((rt0.c0, rt0.c2, rt0.c0)))  WHEN CAST(rt0.c1 AS BLOB) THEN rt0.c3 END GROUP BY rt0.c0;
SELECT ALL rt0.c1, t0.c0, t1.c0 FROM t1, t0, rt0 GROUP BY rt0.c1, t0.c0, t1.c0;
SELECT ALL rt0.c1, t0.c0, t1.c0 FROM t1, t0, rt0 GROUP BY rt0.c1, t0.c0, t1.c0 HAVING CASE rt0.c3 COLLATE RTRIM  WHEN 1.058197032E9 THEN ((MIN(rt0.c3))IS(MIN(GROUP_CONCAT(rt0.c2)))) ELSE rt0.c3 END UNION ALL SELECT ALL rt0.c1, t0.c0, t1.c0 FROM t1, t0, rt0 GROUP BY rt0.c1, t0.c0, t1.c0 HAVING (NOT (CASE rt0.c3 COLLATE RTRIM  WHEN 1.058197032E9 THEN ((MIN(rt0.c3))IS(MIN(GROUP_CONCAT(rt0.c2)))) ELSE rt0.c3 END)) UNION ALL SELECT rt0.c1, t0.c0, t1.c0 FROM t1, t0, rt0 GROUP BY rt0.c1, t0.c0, t1.c0 HAVING ((CASE rt0.c3 COLLATE RTRIM  WHEN 1.058197032E9 THEN ((MIN(rt0.c3))IS(MIN(GROUP_CONCAT(rt0.c2)))) ELSE rt0.c3 END) ISNULL);
SELECT ALL * FROM t0, t1;
SELECT * FROM t0, t1 WHERE (CAST('nC' AS NUMERIC)) UNION ALL SELECT * FROM t0, t1 WHERE ((NOT (CAST('nC' AS NUMERIC)))) UNION ALL SELECT * FROM t0, t1 WHERE (((CAST('nC' AS NUMERIC)) ISNULL));
SELECT ALL * FROM t0, t1;
SELECT DISTINCT * FROM t1 CROSS JOIN t0 ON ((((rt0.c2)IS(rt0.c3)))<=(((rt0.c3)GLOB(t1.c0)))) CROSS JOIN rt0 ON (UNLIKELY(rt0.c3) IN ());
SELECT DISTINCT * FROM t1 CROSS JOIN t0 ON ((((rt0.c2)IS(rt0.c3)))<=(((rt0.c3)GLOB(t1.c0)))) CROSS JOIN rt0 ON (UNLIKELY(rt0.c3) IN ()) WHERE (x'') UNION SELECT DISTINCT * FROM t1 CROSS JOIN t0 ON ((((rt0.c2)IS(rt0.c3)))<=(((rt0.c3)GLOB(t1.c0)))) CROSS JOIN rt0 ON (UNLIKELY(rt0.c3) IN ()) WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM t1 CROSS JOIN t0 ON ((((rt0.c2)IS(rt0.c3)))<=(((rt0.c3)GLOB(t1.c0)))) CROSS JOIN rt0 ON (UNLIKELY(rt0.c3) IN ()) WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM t1 CROSS JOIN t0 ON ((((rt0.c2)IS(rt0.c3)))<=(((rt0.c3)GLOB(t1.c0)))) CROSS JOIN rt0 ON (UNLIKELY(rt0.c3) IN ());
SELECT ALL rt0.c1, rt0.c2, t0.c0, rt0.c3, rt0.c0, t1.c0 FROM t0, t1, rt0 GROUP BY rt0.c1, rt0.c2, t0.c0, rt0.c3, rt0.c0, t1.c0;
SELECT rt0.c1, rt0.c2, t0.c0, rt0.c3, rt0.c0, t1.c0 FROM t0, t1, rt0 WHERE (CAST(CASE WHEN t1.c0 THEN 0.20217134058235675 END AS NUMERIC)) GROUP BY rt0.c1, rt0.c2, t0.c0, rt0.c3, rt0.c0, t1.c0 UNION SELECT rt0.c1, rt0.c2, t0.c0, rt0.c3, rt0.c0, t1.c0 FROM t0, t1, rt0 WHERE ((NOT (CAST(CASE WHEN t1.c0 THEN 0.20217134058235675 END AS NUMERIC)))) GROUP BY rt0.c1, rt0.c2, t0.c0, rt0.c3, rt0.c0, t1.c0 UNION SELECT rt0.c1, rt0.c2, t0.c0, rt0.c3, rt0.c0, t1.c0 FROM t0, t1, rt0 WHERE (((CAST(CASE WHEN t1.c0 THEN 0.20217134058235675 END AS NUMERIC)) ISNULL)) GROUP BY rt0.c1, rt0.c2, t0.c0, rt0.c3, rt0.c0, t1.c0;
SELECT ALL rt0.c1, rt0.c2, t0.c0, rt0.c3, rt0.c0, t1.c0 FROM t0, t1, rt0 GROUP BY rt0.c1, rt0.c2, t0.c0, rt0.c3, rt0.c0, t1.c0;
SELECT ALL rt0.c3, t0.c0, t1.c0 FROM rt0, t0, t1 GROUP BY rt0.c3, t0.c0, t1.c0;
SELECT rt0.c3, t0.c0, t1.c0 FROM rt0, t0, t1 GROUP BY rt0.c3, t0.c0, t1.c0 HAVING SUM(TOTAL(MIN(SUM(GROUP_CONCAT(GROUP_CONCAT(rt0.c3)))))) UNION ALL SELECT ALL rt0.c3, t0.c0, t1.c0 FROM rt0, t0, t1 GROUP BY rt0.c3, t0.c0, t1.c0 HAVING (NOT (SUM(TOTAL(MIN(SUM(GROUP_CONCAT(GROUP_CONCAT(rt0.c3)))))))) UNION ALL SELECT ALL rt0.c3, t0.c0, t1.c0 FROM rt0, t0, t1 GROUP BY rt0.c3, t0.c0, t1.c0 HAVING ((SUM(TOTAL(MIN(SUM(GROUP_CONCAT(GROUP_CONCAT(rt0.c3))))))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (CAST(rt0.c2 AS REAL)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST(rt0.c2 AS REAL)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(rt0.c2 AS REAL)) ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0;
SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0 WHERE ((((((t1.c0)>>(t0.c0)), (((t0.c0, t1.c0, t1.c0, 0.36098708576000293, t0.c0)) BETWEEN ((t0.c0, t1.c0, t0.c0, t1.c0, t1.c0)) AND ((t1.c0, t0.c0, t1.c0, t1.c0, t0.c0))), (NOT (t0.c0))))>((LTRIM(t0.c0, t0.c0), ((t0.c0) IS FALSE), (((t1.c0, 0.8115529429046101, t1.c0))>((t0.c0, t1.c0, t1.c0))))))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0 WHERE ((NOT ((((((t1.c0)>>(t0.c0)), (((t0.c0, t1.c0, t1.c0, 0.36098708576000293, t0.c0)) BETWEEN ((t0.c0, t1.c0, t0.c0, t1.c0, t1.c0)) AND ((t1.c0, t0.c0, t1.c0, t1.c0, t0.c0))), (NOT (t0.c0))))>((LTRIM(t0.c0, t0.c0), ((t0.c0) IS FALSE), (((t1.c0, 0.8115529429046101, t1.c0))>((t0.c0, t1.c0, t1.c0))))))))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0 WHERE ((((((((t1.c0)>>(t0.c0)), (((t0.c0, t1.c0, t1.c0, 0.36098708576000293, t0.c0)) BETWEEN ((t0.c0, t1.c0, t0.c0, t1.c0, t1.c0)) AND ((t1.c0, t0.c0, t1.c0, t1.c0, t0.c0))), (NOT (t0.c0))))>((LTRIM(t0.c0, t0.c0), ((t0.c0) IS FALSE), (((t1.c0, 0.8115529429046101, t1.c0))>((t0.c0, t1.c0, t1.c0))))))) ISNULL));
SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0;
SELECT t1.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0, t1 GROUP BY t1.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT ALL t1.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0, t1 NOT INDEXED WHERE (ROUND(((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)), TYPEOF(rt0.c3))) GROUP BY t1.c0, rt0.c3, rt0.c1, rt0.c2 UNION SELECT t1.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0, t1 WHERE ((NOT (ROUND(((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)), TYPEOF(rt0.c3))))) GROUP BY t1.c0, rt0.c3, rt0.c1, rt0.c2 UNION SELECT t1.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0, t1 WHERE (((ROUND(((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)), TYPEOF(rt0.c3))) ISNULL)) GROUP BY t1.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT t1.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0, t1 GROUP BY t1.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT t1.c0, rt0.c2, rt0.c3, rt0.c1 FROM t1 INNER JOIN t0 ON (t0.c0 COLLATE RTRIM IN ()) INNER JOIN rt0 ON CASE CAST(rt0.c2 AS INTEGER)  WHEN rt0.c2 THEN '-1390547252' END GROUP BY t1.c0, rt0.c2, rt0.c3, rt0.c1;
SELECT t1.c0, rt0.c2, rt0.c3, rt0.c1 FROM t1 INNER JOIN t0 ON (t0.c0 COLLATE RTRIM IN ()) INNER JOIN rt0 ON CASE CAST(rt0.c2 AS INTEGER)  WHEN rt0.c2 THEN '-1390547252' END GROUP BY t1.c0, rt0.c2, rt0.c3, rt0.c1 HAVING MAX(((rt0.c3) ISNULL)) UNION ALL SELECT t1.c0, rt0.c2, rt0.c3, rt0.c1 FROM t1 INNER JOIN t0 ON (t0.c0 COLLATE RTRIM IN ()) INNER JOIN rt0 ON CASE CAST(rt0.c2 AS INTEGER)  WHEN rt0.c2 THEN '-1390547252' END GROUP BY t1.c0, rt0.c2, rt0.c3, rt0.c1 HAVING (NOT (MAX(((rt0.c3) ISNULL)))) UNION ALL SELECT t1.c0, rt0.c2, rt0.c3, rt0.c1 FROM t1 INNER JOIN t0 ON (t0.c0 COLLATE RTRIM IN ()) INNER JOIN rt0 ON CASE CAST(rt0.c2 AS INTEGER)  WHEN rt0.c2 THEN '-1390547252' END GROUP BY t1.c0, rt0.c2, rt0.c3, rt0.c1 HAVING ((MAX(((rt0.c3) ISNULL))) ISNULL);
SELECT t1.c0, rt0.c2, rt0.c3, rt0.c1 FROM t1 INNER JOIN t0 ON (t0.c0 COLLATE RTRIM IN ()) INNER JOIN rt0 ON CASE CAST(rt0.c2 AS INTEGER)  WHEN rt0.c2 THEN '-1390547252' END GROUP BY t1.c0, rt0.c2, rt0.c3, rt0.c1;
SELECT t1.c0, rt0.c2, rt0.c3, rt0.c1 FROM t1 INNER JOIN t0 ON (t0.c0 COLLATE RTRIM IN ()) INNER JOIN rt0 ON CASE CAST(rt0.c2 AS INTEGER)  WHEN rt0.c2 THEN '-1390547252' END GROUP BY t1.c0, rt0.c2, rt0.c3, rt0.c1 HAVING MAX(((rt0.c3) ISNULL)) UNION ALL SELECT t1.c0, rt0.c2, rt0.c3, rt0.c1 FROM t1 INNER JOIN t0 ON (t0.c0 COLLATE RTRIM IN ()) INNER JOIN rt0 ON CASE CAST(rt0.c2 AS INTEGER)  WHEN rt0.c2 THEN '-1390547252' END GROUP BY t1.c0, rt0.c2, rt0.c3, rt0.c1 HAVING (NOT (MAX(((rt0.c3) ISNULL)))) UNION ALL SELECT t1.c0, rt0.c2, rt0.c3, rt0.c1 FROM t1 INNER JOIN t0 ON (t0.c0 COLLATE RTRIM IN ()) INNER JOIN rt0 ON CASE CAST(rt0.c2 AS INTEGER)  WHEN rt0.c2 THEN '-1390547252' END GROUP BY t1.c0, rt0.c2, rt0.c3, rt0.c1 HAVING ((MAX(((rt0.c3) ISNULL))) ISNULL);
SELECT t1.c0, rt0.c2, rt0.c3, rt0.c1 FROM t1 INNER JOIN t0 ON (t0.c0 COLLATE RTRIM IN ()) INNER JOIN rt0 ON CASE CAST(rt0.c2 AS INTEGER)  WHEN rt0.c2 THEN '-1390547252' END GROUP BY t1.c0, rt0.c2, rt0.c3, rt0.c1;
SELECT MIN('JHomy乞[-V') FROM rt0, t0 ORDER BY LIKELY(DISTINCT 0.5752601500070565) COLLATE RTRIM  NULLS LAST;
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((~ (CAST(0.7799720612213217 AS REAL)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((~ (CAST(0.7799720612213217 AS REAL)))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((((~ (CAST(0.7799720612213217 AS REAL)))) ISNULL));
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2 FROM t1, t0, rt0;
SELECT DISTINCT rt0.c2 FROM t1, t0, rt0 WHERE (CAST(((rt0.c0)>=(x'4fa7')) AS TEXT)) UNION SELECT DISTINCT rt0.c2 FROM t1, t0, rt0 WHERE ((NOT (CAST(((rt0.c0)>=(x'4fa7')) AS TEXT)))) UNION SELECT DISTINCT rt0.c2 FROM t1, t0, rt0 WHERE (((CAST(((rt0.c0)>=(x'4fa7')) AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c2 FROM t1, t0, rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c3 END AS NUMERIC)) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3 UNION SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (CAST(CASE WHEN rt0.c0 THEN rt0.c3 END AS NUMERIC)))) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE (((CAST(CASE WHEN rt0.c0 THEN rt0.c3 END AS NUMERIC)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c3 FROM rt0, t1, t0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0, t1, t0 GROUP BY rt0.c3 HAVING TOTAL(MIN(AVG('-307288205'))) UNION ALL SELECT rt0.c3 FROM rt0, t1, t0 GROUP BY rt0.c3 HAVING (NOT (TOTAL(MIN(AVG('-307288205'))))) UNION ALL SELECT ALL rt0.c3 FROM rt0, t1, t0 GROUP BY rt0.c3 HAVING ((TOTAL(MIN(AVG('-307288205')))) ISNULL);
SELECT rt0.c0, t0.c0, rt0.c2, rt0.c1, t1.c0, rt0.c3 FROM t1, t0, rt0;
SELECT ALL rt0.c0, t0.c0, rt0.c2, rt0.c1, t1.c0, rt0.c3 FROM t1, t0, rt0 WHERE ((((rt0.c3 IN ())) NOT NULL)) UNION ALL SELECT ALL rt0.c0, t0.c0, rt0.c2, rt0.c1, t1.c0, rt0.c3 FROM t1, t0, rt0 WHERE ((NOT ((((rt0.c3 IN ())) NOT NULL)))) UNION ALL SELECT ALL rt0.c0, t0.c0, rt0.c2, rt0.c1, t1.c0, rt0.c3 FROM t1, t0, rt0 WHERE ((((((rt0.c3 IN ())) NOT NULL)) ISNULL));
SELECT rt0.c0, t0.c0, rt0.c2, rt0.c1, t1.c0, rt0.c3 FROM t1, t0, rt0;
SELECT DISTINCT * FROM t1, rt0, t0;
SELECT DISTINCT * FROM t1, rt0, t0 WHERE ((- (((((rt0.c2)OR(t1.c0)))OR(rt0.c1))))) UNION SELECT DISTINCT * FROM t1, rt0, t0 WHERE ((NOT ((- (((((rt0.c2)OR(t1.c0)))OR(rt0.c1))))))) UNION SELECT DISTINCT * FROM t1, rt0, t0 WHERE ((((- (((((rt0.c2)OR(t1.c0)))OR(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM t1, rt0, t0;
SELECT ALL rt0.c1 FROM t1, rt0, t0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM t1, rt0, t0 WHERE (CAST(((((t0.c0)AND(rt0.c1)))OR(rt0.c1)) AS NUMERIC)) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM t1, rt0, t0 WHERE ((NOT (CAST(((((t0.c0)AND(rt0.c1)))OR(rt0.c1)) AS NUMERIC)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM t1, rt0, t0 WHERE (((CAST(((((t0.c0)AND(rt0.c1)))OR(rt0.c1)) AS NUMERIC)) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM t1, rt0, t0 GROUP BY rt0.c1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL * FROM t1, t0;
SELECT * FROM t1, t0 WHERE (x'') UNION ALL SELECT ALL * FROM t1, t0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM t1, t0 WHERE (((x'') ISNULL));
SELECT ALL * FROM t1, t0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN t1;
SELECT DISTINCT * FROM rt0 NATURAL JOIN t1 WHERE ('0.23229702300652677' COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN t1 WHERE ((NOT ('0.23229702300652677' COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN t1 WHERE ((('0.23229702300652677' COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0 NATURAL JOIN t1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ((((NOT (t1.c0)))>(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((((NOT (t1.c0)))>(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((((((NOT (t1.c0)))>(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL rt0.c0, rt0.c1, t1.c0 FROM t0, rt0, t1 GROUP BY rt0.c0, rt0.c1, t1.c0;
SELECT ALL rt0.c0, rt0.c1, t1.c0 FROM t0, rt0, t1 GROUP BY rt0.c0, rt0.c1, t1.c0 HAVING CAST(rt0.c3 AS REAL) UNION ALL SELECT ALL rt0.c0, rt0.c1, t1.c0 FROM t0, rt0, t1 GROUP BY rt0.c0, rt0.c1, t1.c0 HAVING (NOT (CAST(rt0.c3 AS REAL))) UNION ALL SELECT ALL rt0.c0, rt0.c1, t1.c0 FROM t0, rt0, t1 GROUP BY rt0.c0, rt0.c1, t1.c0 HAVING ((CAST(rt0.c3 AS REAL)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, t1.c0 FROM t0, rt0, t1 GROUP BY rt0.c0, rt0.c1, t1.c0;
SELECT ALL rt0.c0, rt0.c1, t1.c0 FROM t0, rt0, t1 GROUP BY rt0.c0, rt0.c1, t1.c0 HAVING CAST(rt0.c3 AS REAL) UNION ALL SELECT ALL rt0.c0, rt0.c1, t1.c0 FROM t0, rt0, t1 GROUP BY rt0.c0, rt0.c1, t1.c0 HAVING (NOT (CAST(rt0.c3 AS REAL))) UNION ALL SELECT ALL rt0.c0, rt0.c1, t1.c0 FROM t0, rt0, t1 GROUP BY rt0.c0, rt0.c1, t1.c0 HAVING ((CAST(rt0.c3 AS REAL)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, t1.c0 FROM t0, rt0, t1 GROUP BY rt0.c0, rt0.c1, t1.c0;
SELECT ALL t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (x'7099662d') UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (x'7099662d'))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((x'7099662d') ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT rt0.c3 FROM rt0 NATURAL JOIN t1;
SELECT DISTINCT rt0.c3 FROM rt0 NATURAL JOIN t1 WHERE ((((rt0.c1 IN ()))-(CASE rt0.c3  WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END))) UNION SELECT DISTINCT rt0.c3 FROM rt0 NATURAL JOIN t1 WHERE ((NOT ((((rt0.c1 IN ()))-(CASE rt0.c3  WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END))))) UNION SELECT DISTINCT rt0.c3 FROM rt0 NATURAL JOIN t1 WHERE ((((((rt0.c1 IN ()))-(CASE rt0.c3  WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END))) ISNULL));
SELECT DISTINCT rt0.c3 FROM rt0 NATURAL JOIN t1;
SELECT ALL t1.c0, rt0.c0, rt0.c1, t0.c0, rt0.c3 FROM t0, t1, rt0 NOT INDEXED GROUP BY t1.c0, rt0.c0, rt0.c1, t0.c0, rt0.c3;
SELECT t1.c0, rt0.c0, rt0.c1, t0.c0, rt0.c3 FROM t0, t1, rt0 WHERE ((rt0.c2 IN ())) GROUP BY t1.c0, rt0.c0, rt0.c1, t0.c0, rt0.c3 UNION SELECT t1.c0, rt0.c0, rt0.c1, t0.c0, rt0.c3 FROM t0, t1, rt0 WHERE ((NOT ((rt0.c2 IN ())))) GROUP BY t1.c0, rt0.c0, rt0.c1, t0.c0, rt0.c3 UNION SELECT ALL t1.c0, rt0.c0, rt0.c1, t0.c0, rt0.c3 FROM t0, t1, rt0 WHERE ((((rt0.c2 IN ())) ISNULL)) GROUP BY t1.c0, rt0.c0, rt0.c1, t0.c0, rt0.c3;
SELECT ALL t1.c0, rt0.c0, rt0.c1, t0.c0, rt0.c3 FROM t0, t1, rt0 NOT INDEXED GROUP BY t1.c0, rt0.c0, rt0.c1, t0.c0, rt0.c3;
SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING AVG(((((COUNT(*))OR(COUNT(*))))OR(t0.c0))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING (NOT (AVG(((((COUNT(*))OR(COUNT(*))))OR(t0.c0))))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING ((AVG(((((COUNT(*))OR(COUNT(*))))OR(t0.c0)))) ISNULL);
SELECT * FROM rt0, t1;
SELECT * FROM rt0, t1 WHERE ((((NOT (rt0.c3)))<=((rt0.c0 IN ())))) UNION ALL SELECT * FROM rt0, t1 WHERE ((NOT ((((NOT (rt0.c3)))<=((rt0.c0 IN ())))))) UNION ALL SELECT ALL * FROM rt0, t1 WHERE ((((((NOT (rt0.c3)))<=((rt0.c0 IN ())))) ISNULL));
SELECT * FROM rt0, t1;
SELECT DISTINCT t0.c0, rt0.c1 FROM t0 CROSS JOIN rt0 ON ((t0.c0) NOT BETWEEN (((rt0.c0) BETWEEN (t1.c0) AND (rt0.c0))) AND (CAST(t1.c0 AS INTEGER))) INNER JOIN t1 ON ((((rt0.c2)IS(rt0.c1))) NOTNULL);
SELECT DISTINCT t0.c0, rt0.c1 FROM t0 CROSS JOIN rt0 ON ((t0.c0) NOT BETWEEN (((rt0.c0) BETWEEN (t1.c0) AND (rt0.c0))) AND (CAST(t1.c0 AS INTEGER))) INNER JOIN t1 ON ((((rt0.c2)IS(rt0.c1))) NOTNULL) WHERE (((((CASE WHEN t1.c0 THEN rt0.c1 END)OR(rt0.c0 COLLATE BINARY)))OR(NULL))) UNION SELECT DISTINCT t0.c0, rt0.c1 FROM t0 CROSS JOIN rt0 ON ((t0.c0) NOT BETWEEN (((rt0.c0) BETWEEN (t1.c0) AND (rt0.c0))) AND (CAST(t1.c0 AS INTEGER))) INNER JOIN t1 ON ((((rt0.c2)IS(rt0.c1))) NOTNULL) WHERE ((NOT (((((CASE WHEN t1.c0 THEN rt0.c1 END)OR(rt0.c0 COLLATE BINARY)))OR(NULL))))) UNION SELECT DISTINCT t0.c0, rt0.c1 FROM t0 CROSS JOIN rt0 ON ((t0.c0) NOT BETWEEN (((rt0.c0) BETWEEN (t1.c0) AND (rt0.c0))) AND (CAST(t1.c0 AS INTEGER))) INNER JOIN t1 ON ((((rt0.c2)IS(rt0.c1))) NOTNULL) WHERE (((((((CASE WHEN t1.c0 THEN rt0.c1 END)OR(rt0.c0 COLLATE BINARY)))OR(NULL))) ISNULL));
SELECT DISTINCT t0.c0, rt0.c1 FROM t0 CROSS JOIN rt0 ON ((t0.c0) NOT BETWEEN (((rt0.c0) BETWEEN (t1.c0) AND (rt0.c0))) AND (CAST(t1.c0 AS INTEGER))) INNER JOIN t1 ON ((((rt0.c2)IS(rt0.c1))) NOTNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (NULL) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL t1.c0, rt0.c2, rt0.c1 FROM t1 NATURAL JOIN rt0 GROUP BY t1.c0, rt0.c2, rt0.c1;
SELECT t1.c0, rt0.c2, rt0.c1 FROM t1 NATURAL JOIN rt0 GROUP BY t1.c0, rt0.c2, rt0.c1 HAVING NULL UNION ALL SELECT t1.c0, rt0.c2, rt0.c1 FROM t1 NATURAL JOIN rt0 GROUP BY t1.c0, rt0.c2, rt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT t1.c0, rt0.c2, rt0.c1 FROM t1 NATURAL JOIN rt0 GROUP BY t1.c0, rt0.c2, rt0.c1 HAVING ((NULL) ISNULL);
SELECT ALL t1.c0, rt0.c2, rt0.c1 FROM t1 NATURAL JOIN rt0 GROUP BY t1.c0, rt0.c2, rt0.c1;
SELECT t1.c0, rt0.c2, rt0.c1 FROM t1 NATURAL JOIN rt0 GROUP BY t1.c0, rt0.c2, rt0.c1 HAVING NULL UNION ALL SELECT t1.c0, rt0.c2, rt0.c1 FROM t1 NATURAL JOIN rt0 GROUP BY t1.c0, rt0.c2, rt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT t1.c0, rt0.c2, rt0.c1 FROM t1 NATURAL JOIN rt0 GROUP BY t1.c0, rt0.c2, rt0.c1 HAVING ((NULL) ISNULL);
SELECT ALL t1.c0, rt0.c2, rt0.c1 FROM t1 NATURAL JOIN rt0 GROUP BY t1.c0, rt0.c2, rt0.c1;
SELECT ALL * FROM t1, rt0 INNER JOIN t0 ON CASE WHEN ((((((((rt0.c2)AND(rt0.c0)))OR(t1.c0)))AND(rt0.c2)))OR(rt0.c0)) THEN (rt0.c1 IN ()) WHEN t1.c0 THEN rt0.c2 WHEN rt0.c3 THEN (('1133660422')IS(rt0.c3)) ELSE ((rt0.c3)GLOB(rt0.c0)) END;
SELECT ALL * FROM t1, rt0 INNER JOIN t0 ON CASE WHEN ((((((((rt0.c2)AND(rt0.c0)))OR(t1.c0)))AND(rt0.c2)))OR(rt0.c0)) THEN (rt0.c1 IN ()) WHEN t1.c0 THEN rt0.c2 WHEN rt0.c3 THEN (('1133660422')IS(rt0.c3)) ELSE ((rt0.c3)GLOB(rt0.c0)) END WHERE (((((t1.c0) IS FALSE)) IS FALSE)) UNION ALL SELECT * FROM t1, rt0 INNER JOIN t0 ON CASE WHEN ((((((((rt0.c2)AND(rt0.c0)))OR(t1.c0)))AND(rt0.c2)))OR(rt0.c0)) THEN (rt0.c1 IN ()) WHEN t1.c0 THEN rt0.c2 WHEN rt0.c3 THEN (('1133660422')IS(rt0.c3)) ELSE ((rt0.c3)GLOB(rt0.c0)) END WHERE ((NOT (((((t1.c0) IS FALSE)) IS FALSE)))) UNION ALL SELECT ALL * FROM t1, rt0 INNER JOIN t0 ON CASE WHEN ((((((((rt0.c2)AND(rt0.c0)))OR(t1.c0)))AND(rt0.c2)))OR(rt0.c0)) THEN (rt0.c1 IN ()) WHEN t1.c0 THEN rt0.c2 WHEN rt0.c3 THEN (('1133660422')IS(rt0.c3)) ELSE ((rt0.c3)GLOB(rt0.c0)) END WHERE (((((((t1.c0) IS FALSE)) IS FALSE)) ISNULL));
SELECT ALL * FROM t1, rt0 INNER JOIN t0 ON CASE WHEN ((((((((rt0.c2)AND(rt0.c0)))OR(t1.c0)))AND(rt0.c2)))OR(rt0.c0)) THEN (rt0.c1 IN ()) WHEN t1.c0 THEN rt0.c2 WHEN rt0.c3 THEN (('1133660422')IS(rt0.c3)) ELSE ((rt0.c3)GLOB(rt0.c0)) END;
SELECT DISTINCT * FROM t0, t1, rt0;
SELECT DISTINCT * FROM t0, t1, rt0 WHERE (SUBSTR((~ (rt0.c2)), ((rt0.c0)OR(rt0.c0)))) UNION SELECT DISTINCT * FROM t0, t1, rt0 WHERE ((NOT (SUBSTR((~ (rt0.c2)), ((rt0.c0)OR(rt0.c0)))))) UNION SELECT DISTINCT * FROM t0, t1, rt0 WHERE (((SUBSTR((~ (rt0.c2)), ((rt0.c0)OR(rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM t0, t1, rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE (((((NULL)AND(CASE rt0.c3  WHEN rt0.c1 THEN NULL END)))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3 UNION SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (((((NULL)AND(CASE rt0.c3  WHEN rt0.c1 THEN NULL END)))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3 UNION SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE (((((((NULL)AND(CASE rt0.c3  WHEN rt0.c1 THEN NULL END)))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1 FROM t1 NOT INDEXED, rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1 FROM t1 NOT INDEXED, rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL * FROM rt0, t1;
SELECT ALL * FROM rt0, t1 WHERE (UPPER('-1667384888' COLLATE NOCASE)) UNION ALL SELECT * FROM rt0, t1 WHERE ((NOT (UPPER('-1667384888' COLLATE NOCASE)))) UNION ALL SELECT ALL * FROM rt0, t1 WHERE (((UPPER('-1667384888' COLLATE NOCASE)) ISNULL));
SELECT ALL * FROM rt0, t1;
SELECT DISTINCT t1.c0, rt0.c3, rt0.c0 FROM t0 NOT INDEXED, t1 RIGHT OUTER JOIN rt0 ON ((rt0.c1 COLLATE BINARY) NOT BETWEEN ((((t1.c0)) BETWEEN ((t0.c0)) AND ((NULL)))) AND (load_extension(rt0.c2)));
SELECT ALL t0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL t0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 WHERE (rt0.c3) GROUP BY t0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL t0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 WHERE ((NOT (rt0.c3))) GROUP BY t0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL t0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 WHERE (((rt0.c3) ISNULL)) GROUP BY t0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL t0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c3, t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON load_extension(x'', CAST(t0.c0 AS INTEGER)) RIGHT OUTER JOIN t1 ON CASE CAST(rt0.c2 AS BLOB)  WHEN ((t1.c0)LIKE(rt0.c2)) THEN (rt0.c3 IN (rt0.c2)) WHEN (((t0.c0)) BETWEEN ((t1.c0)) AND ((rt0.c2))) THEN '0M' WHEN ((rt0.c1) BETWEEN (t1.c0) AND (t0.c0)) THEN UNLIKELY(t0.c0) ELSE UPPER(rt0.c3) END GROUP BY rt0.c3, t0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT MAX(rt0.c0) FROM rt0;
SELECT ALL rt0.c1, t0.c0, t1.c0, rt0.c3, rt0.c2 FROM t0, t1 LEFT OUTER JOIN rt0 ON CASE (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))  WHEN ((((((((rt0.c1)AND(t1.c0)))OR(t0.c0)))AND(rt0.c0)))AND(t0.c0)) THEN TRIM(DISTINCT rt0.c3, t0.c0) WHEN (((rt0.c0, rt0.c2, t1.c0)) BETWEEN ((rt0.c1, rt0.c1, t0.c0)) AND ((rt0.c2, rt0.c3, t1.c0))) THEN CASE WHEN rt0.c0 THEN rt0.c2 END WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN CAST(rt0.c3 AS INTEGER) ELSE ((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)) END;
SELECT ALL rt0.c1, t0.c0, t1.c0, rt0.c3, rt0.c2 FROM t0, t1 LEFT OUTER JOIN rt0 ON CASE (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))  WHEN ((((((((rt0.c1)AND(t1.c0)))OR(t0.c0)))AND(rt0.c0)))AND(t0.c0)) THEN TRIM(DISTINCT rt0.c3, t0.c0) WHEN (((rt0.c0, rt0.c2, t1.c0)) BETWEEN ((rt0.c1, rt0.c1, t0.c0)) AND ((rt0.c2, rt0.c3, t1.c0))) THEN CASE WHEN rt0.c0 THEN rt0.c2 END WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN CAST(rt0.c3 AS INTEGER) ELSE ((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)) END WHERE (((((rt0.c0)%(rt0.c2)))OR(highlight(rt0.c1, t1.c0, t0.c0, rt0.c0)))) UNION ALL SELECT rt0.c1, t0.c0, t1.c0, rt0.c3, rt0.c2 FROM t0, t1 LEFT OUTER JOIN rt0 ON CASE (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))  WHEN ((((((((rt0.c1)AND(t1.c0)))OR(t0.c0)))AND(rt0.c0)))AND(t0.c0)) THEN TRIM(DISTINCT rt0.c3, t0.c0) WHEN (((rt0.c0, rt0.c2, t1.c0)) BETWEEN ((rt0.c1, rt0.c1, t0.c0)) AND ((rt0.c2, rt0.c3, t1.c0))) THEN CASE WHEN rt0.c0 THEN rt0.c2 END WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN CAST(rt0.c3 AS INTEGER) ELSE ((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)) END WHERE ((NOT (((((rt0.c0)%(rt0.c2)))OR(highlight(rt0.c1, t1.c0, t0.c0, rt0.c0)))))) UNION ALL SELECT rt0.c1, t0.c0, t1.c0, rt0.c3, rt0.c2 FROM t0, t1 LEFT OUTER JOIN rt0 ON CASE (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))  WHEN ((((((((rt0.c1)AND(t1.c0)))OR(t0.c0)))AND(rt0.c0)))AND(t0.c0)) THEN TRIM(DISTINCT rt0.c3, t0.c0) WHEN (((rt0.c0, rt0.c2, t1.c0)) BETWEEN ((rt0.c1, rt0.c1, t0.c0)) AND ((rt0.c2, rt0.c3, t1.c0))) THEN CASE WHEN rt0.c0 THEN rt0.c2 END WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN CAST(rt0.c3 AS INTEGER) ELSE ((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)) END WHERE (((((((rt0.c0)%(rt0.c2)))OR(highlight(rt0.c1, t1.c0, t0.c0, rt0.c0)))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE ((((t1.c0) IS TRUE) IN ())) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT ((((t1.c0) IS TRUE) IN ())))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((((((t1.c0) IS TRUE) IN ())) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((rt0.c2) ISNULL)) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2) ISNULL)) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((((rt0.c2) ISNULL)) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c3, t1.c0, t0.c0 FROM t0, rt0, t1 GROUP BY rt0.c1, rt0.c3, t1.c0, t0.c0;
SELECT ALL rt0.c1, rt0.c3, t1.c0, t0.c0 FROM t0, rt0, t1 GROUP BY rt0.c1, rt0.c3, t1.c0, t0.c0 HAVING NULLIF(((AVG(GROUP_CONCAT(t1.c0)))*(SUM(rt0.c3))), (- (x''))) UNION ALL SELECT rt0.c1, rt0.c3, t1.c0, t0.c0 FROM t0, rt0, t1 GROUP BY rt0.c1, rt0.c3, t1.c0, t0.c0 HAVING (NOT (NULLIF(((AVG(GROUP_CONCAT(t1.c0)))*(SUM(rt0.c3))), (- (x''))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, t1.c0, t0.c0 FROM t0, rt0, t1 GROUP BY rt0.c1, rt0.c3, t1.c0, t0.c0 HAVING ((NULLIF(((AVG(GROUP_CONCAT(t1.c0)))*(SUM(rt0.c3))), (- (x'')))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CASE WHEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) THEN CASE WHEN rt0.c1 THEN rt0.c3 END ELSE rt0.c1 END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE WHEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) THEN CASE WHEN rt0.c1 THEN rt0.c3 END ELSE rt0.c1 END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) THEN CASE WHEN rt0.c1 THEN rt0.c3 END ELSE rt0.c1 END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c3 END) ISNULL)) UNION SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN rt0.c3 END) ISNULL)))) UNION SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c3 END) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ((((x'71fa', t1.c0, t1.c0)) NOT BETWEEN ((((((NULL)AND(t1.c0)))OR(t1.c0)), CAST(NULL AS TEXT), t1.c0 COLLATE NOCASE)) AND ((((t1.c0)|(t1.c0)), ((t1.c0) BETWEEN (NULL) AND (t1.c0)), LIKELY(t1.c0))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT ((((x'71fa', t1.c0, t1.c0)) NOT BETWEEN ((((((NULL)AND(t1.c0)))OR(t1.c0)), CAST(NULL AS TEXT), t1.c0 COLLATE NOCASE)) AND ((((t1.c0)|(t1.c0)), ((t1.c0) BETWEEN (NULL) AND (t1.c0)), LIKELY(t1.c0))))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((((((x'71fa', t1.c0, t1.c0)) NOT BETWEEN ((((((NULL)AND(t1.c0)))OR(t1.c0)), CAST(NULL AS TEXT), t1.c0 COLLATE NOCASE)) AND ((((t1.c0)|(t1.c0)), ((t1.c0) BETWEEN (NULL) AND (t1.c0)), LIKELY(t1.c0))))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0, rt0.c2, rt0.c1, t0.c0, rt0.c3 FROM t0, rt0, t1 GROUP BY t1.c0, rt0.c2, rt0.c1, t0.c0, rt0.c3;
SELECT t1.c0, rt0.c2, rt0.c1, t0.c0, rt0.c3 FROM t0, rt0, t1 GROUP BY t1.c0, rt0.c2, rt0.c1, t0.c0, rt0.c3 HAVING MIN(AVG(COUNT(AVG(7.76398231E8)))) UNION ALL SELECT t1.c0, rt0.c2, rt0.c1, t0.c0, rt0.c3 FROM t0, rt0, t1 GROUP BY t1.c0, rt0.c2, rt0.c1, t0.c0, rt0.c3 HAVING (NOT (MIN(AVG(COUNT(AVG(7.76398231E8)))))) UNION ALL SELECT ALL t1.c0, rt0.c2, rt0.c1, t0.c0, rt0.c3 FROM t0, rt0, t1 GROUP BY t1.c0, rt0.c2, rt0.c1, t0.c0, rt0.c3 HAVING ((MIN(AVG(COUNT(AVG(7.76398231E8))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(0x6a1a8df3 AS TEXT)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(0x6a1a8df3 AS TEXT)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(0X6a1a8df3 AS TEXT)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM t1 NOT INDEXED;
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), (- (0.3062482373319858)), ''))=(((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))), ((t1.c0)<=(t1.c0)), ((t1.c0)<(t1.c0)))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), (- (0.3062482373319858)), ''))=(((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))), ((t1.c0)<=(t1.c0)), ((t1.c0)<(t1.c0)))))))) UNION SELECT DISTINCT * FROM t1 WHERE ((((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), (- (0.3062482373319858)), ''))==(((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))), ((t1.c0)<=(t1.c0)), ((t1.c0)<(t1.c0)))))) ISNULL));
SELECT DISTINCT * FROM t1 NOT INDEXED;
SELECT ALL t0.c0, t1.c0 FROM t0, t1 INDEXED BY i89 GROUP BY t0.c0, t1.c0;
SELECT ALL t1.c0 FROM rt0 LEFT OUTER JOIN t1 ON 0.20674472575273695 FULL OUTER JOIN t0 ON ABS(DISTINCT UPPER(DISTINCT t1.c0)) GROUP BY t1.c0;
SELECT t1.c0 FROM rt0 LEFT OUTER JOIN t1 ON 0.20674472575273695 FULL OUTER JOIN t0 ON ABS(DISTINCT UPPER(DISTINCT t1.c0)) GROUP BY t1.c0 HAVING TOTAL(GROUP_CONCAT(AVG(TOTAL(MAX(COUNT(rt0.c0)))))) UNION ALL SELECT t1.c0 FROM rt0 LEFT OUTER JOIN t1 ON 0.20674472575273695 FULL OUTER JOIN t0 ON ABS(DISTINCT UPPER(DISTINCT t1.c0)) GROUP BY t1.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(AVG(TOTAL(MAX(COUNT(rt0.c0)))))))) UNION ALL SELECT ALL t1.c0 FROM rt0 LEFT OUTER JOIN t1 ON 0.20674472575273695 FULL OUTER JOIN t0 ON ABS(DISTINCT UPPER(DISTINCT t1.c0)) GROUP BY t1.c0 HAVING ((TOTAL(GROUP_CONCAT(AVG(TOTAL(MAX(COUNT(rt0.c0))))))) ISNULL);
SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0, t0.c0 FROM rt0, t0;
SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0, t0.c0 FROM rt0, t0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE RTRIM) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0, t0.c0 FROM rt0, t0 NOT INDEXED WHERE ((NOT ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE RTRIM))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0, t0.c0 FROM rt0, t0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0, t0.c0 FROM rt0, t0;
SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0 WHERE (((((rt0.c2) NOT NULL)) ISNULL)) UNION SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (((((rt0.c2) NOT NULL)) ISNULL)))) UNION SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0 WHERE (((((((rt0.c2) NOT NULL)) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0;
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 WHERE (((((t1.c0) NOT NULL)) ISNULL)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, t1 WHERE ((NOT (((((t1.c0) NOT NULL)) ISNULL)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, t1 WHERE (((((((t1.c0) NOT NULL)) ISNULL)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM t0, t1, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, t0.c0;
SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM t0, t1, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, t0.c0 HAVING MIN(GROUP_CONCAT(MAX(rt0.c3))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM t0, t1, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, t0.c0 HAVING (NOT (MIN(GROUP_CONCAT(MAX(rt0.c3))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM t0, t1, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, t0.c0 HAVING ((MIN(GROUP_CONCAT(MAX(rt0.c3)))) ISNULL);
SELECT ALL * FROM t1, t0 LEFT OUTER JOIN rt0 ON ((((t0.c0)LIKE(rt0.c3))) NOT NULL);
SELECT * FROM t1, t0 LEFT OUTER JOIN rt0 ON ((((t0.c0)LIKE(rt0.c3))) NOT NULL) WHERE (((((rt0.c1)*(rt0.c3))) NOTNULL)) UNION ALL SELECT ALL * FROM t1, t0 LEFT OUTER JOIN rt0 ON ((((t0.c0)LIKE(rt0.c3))) NOT NULL) WHERE ((NOT (((((rt0.c1)*(rt0.c3))) NOTNULL)))) UNION ALL SELECT * FROM t1, t0 LEFT OUTER JOIN rt0 ON ((((t0.c0)LIKE(rt0.c3))) NOT NULL) WHERE (((((((rt0.c1)*(rt0.c3))) NOTNULL)) ISNULL));
SELECT ALL * FROM t1, t0 LEFT OUTER JOIN rt0 ON ((((t0.c0)LIKE(rt0.c3))) NOT NULL);
SELECT DISTINCT rt0.c3, t0.c0, rt0.c0, rt0.c1, t1.c0, rt0.c2 FROM t1, rt0, t0;
SELECT DISTINCT rt0.c3, t0.c0, rt0.c0, rt0.c1, t1.c0, rt0.c2 FROM t1, rt0, t0 WHERE (((((((((((rt0.c0)OR(rt0.c0)))OR(NULL)))OR(rt0.c0)))OR(rt0.c2)))LIKE(CASE WHEN t1.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) UNION SELECT DISTINCT rt0.c3, t0.c0, rt0.c0, rt0.c1, t1.c0, rt0.c2 FROM t1, rt0, t0 WHERE ((NOT (((((((((((rt0.c0)OR(rt0.c0)))OR(NULL)))OR(rt0.c0)))OR(rt0.c2)))LIKE(CASE WHEN t1.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))))) UNION SELECT DISTINCT rt0.c3, t0.c0, rt0.c0, rt0.c1, t1.c0, rt0.c2 FROM t1, rt0, t0 WHERE (((((((((((((rt0.c0)OR(rt0.c0)))OR(NULL)))OR(rt0.c0)))OR(rt0.c2)))LIKE(CASE WHEN t1.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) ISNULL));
SELECT DISTINCT rt0.c3, t0.c0, rt0.c0, rt0.c1, t1.c0, rt0.c2 FROM t1, rt0, t0;
SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM t0, rt0 WHERE (((rt0.c0 COLLATE NOCASE)|(UNICODE(t0.c0)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM t0, rt0 WHERE ((NOT (((rt0.c0 COLLATE NOCASE)|(UNICODE(t0.c0)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM t0, rt0 WHERE (((((rt0.c0 COLLATE NOCASE)|(UNICODE(t0.c0)))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1 HAVING COUNT((((MAX(MAX(COUNT(*))))) NOT BETWEEN ((AVG(COUNT(*)))) AND ((rt0.c3)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT((((MAX(MAX(COUNT(*))))) NOT BETWEEN ((AVG(COUNT(*)))) AND ((rt0.c3)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT((((MAX(MAX(COUNT(*))))) NOT BETWEEN ((AVG(COUNT(*)))) AND ((rt0.c3))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c3, rt0.c2, '-1721722603')) BETWEEN (((NOT (rt0.c0)), ((rt0.c3)GLOB(rt0.c2)), ((((rt0.c2)AND(rt0.c3)))OR(rt0.c1)))) AND ((rt0.c2 COLLATE BINARY, (rt0.c0 IN ()), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c3, rt0.c2, '-1721722603')) BETWEEN (((NOT (rt0.c0)), ((rt0.c3)GLOB(rt0.c2)), ((((rt0.c2)AND(rt0.c3)))OR(rt0.c1)))) AND ((rt0.c2 COLLATE BINARY, (rt0.c0 IN ()), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c3, rt0.c2, '-1721722603')) BETWEEN (((NOT (rt0.c0)), ((rt0.c3)GLOB(rt0.c2)), ((((rt0.c2)AND(rt0.c3)))OR(rt0.c1)))) AND ((rt0.c2 COLLATE BINARY, (rt0.c0 IN ()), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0, t1;
SELECT DISTINCT * FROM rt0, t1 WHERE ((((+ (rt0.c2))) BETWEEN (CAST(rt0.c3 AS INTEGER)) AND (CAST(rt0.c2 AS REAL)))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((NOT ((((+ (rt0.c2))) BETWEEN (CAST(rt0.c3 AS INTEGER)) AND (CAST(rt0.c2 AS REAL)))))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((((((+ (rt0.c2))) BETWEEN (CAST(rt0.c3 AS INTEGER)) AND (CAST(rt0.c2 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM rt0, t1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((x'') BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((x'') BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((x'') BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY t1.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT t1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY t1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (- (rt0.c1 COLLATE BINARY)) UNION ALL SELECT t1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY t1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT ((- (rt0.c1 COLLATE BINARY)))) UNION ALL SELECT ALL t1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY t1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (((- (rt0.c1 COLLATE BINARY))) ISNULL);
SELECT ALL t1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY t1.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT t1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY t1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (- (rt0.c1 COLLATE BINARY)) UNION ALL SELECT t1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY t1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT ((- (rt0.c1 COLLATE BINARY)))) UNION ALL SELECT ALL t1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY t1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (((- (rt0.c1 COLLATE BINARY))) ISNULL);
SELECT ALL t1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY t1.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, t1.c0, rt0.c0 FROM rt0, t1 NOT INDEXED FULL OUTER JOIN t0 ON (((rt0.c0)) NOT BETWEEN ((((t0.c0) BETWEEN ('_&,') AND (t0.c0)))) AND (((- (t1.c0)))));
SELECT ALL rt0.c3, rt0.c2, t1.c0, rt0.c0 FROM rt0, t1 FULL OUTER JOIN t0 ON (((rt0.c0)) NOT BETWEEN ((((t0.c0) BETWEEN ('_&,') AND (t0.c0)))) AND (((- (t1.c0))))) WHERE (rt0.c2) UNION ALL SELECT ALL rt0.c3, rt0.c2, t1.c0, rt0.c0 FROM rt0, t1 FULL OUTER JOIN t0 ON (((rt0.c0)) NOT BETWEEN ((((t0.c0) BETWEEN ('_&,') AND (t0.c0)))) AND (((- (t1.c0))))) WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL rt0.c3, rt0.c2, t1.c0, rt0.c0 FROM rt0, t1 FULL OUTER JOIN t0 ON (((rt0.c0)) NOT BETWEEN ((((t0.c0) BETWEEN ('_&,') AND (t0.c0)))) AND (((- (t1.c0))))) WHERE (((rt0.c2) ISNULL));
SELECT ALL rt0.c3, rt0.c2, t1.c0, rt0.c0 FROM rt0, t1 NOT INDEXED FULL OUTER JOIN t0 ON (((rt0.c0)) NOT BETWEEN ((((t0.c0) BETWEEN ('_&,') AND (t0.c0)))) AND (((- (t1.c0)))));
SELECT DISTINCT t0.c0, rt0.c3 FROM t1, rt0, t0;
SELECT DISTINCT t0.c0, rt0.c3 FROM t1, rt0, t0 WHERE ((((-1419140253))<=((((rt0.c3)GLOB(rt0.c0)))))) UNION SELECT DISTINCT t0.c0, rt0.c3 FROM t1, rt0, t0 WHERE ((NOT ((((-1419140253))<=((((rt0.c3)GLOB(rt0.c0)))))))) UNION SELECT DISTINCT t0.c0, rt0.c3 FROM t1, rt0, t0 WHERE ((((((-1419140253))<=((((rt0.c3)GLOB(rt0.c0)))))) ISNULL));
SELECT DISTINCT t0.c0, rt0.c3 FROM t1, rt0, t0;
SELECT ALL t1.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM t1, t0, rt0 GROUP BY t1.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT t1.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM t1, t0, rt0 WHERE ((NULL IN ())) GROUP BY t1.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c2 UNION SELECT ALL t1.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM t1, t0, rt0 WHERE ((NOT ((NULL IN ())))) GROUP BY t1.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c2 UNION SELECT t1.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM t1, t0, rt0 WHERE ((((NULL IN ())) ISNULL)) GROUP BY t1.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT ALL t1.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM t1, t0, rt0 GROUP BY t1.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT t0.c0, rt0.c0, rt0.c3, rt0.c2 FROM t0, rt0, t1 GROUP BY t0.c0, rt0.c0, rt0.c3, rt0.c2;
SELECT t0.c0, rt0.c0, rt0.c3, rt0.c2 FROM t0, rt0, t1 GROUP BY t0.c0, rt0.c0, rt0.c3, rt0.c2 HAVING GROUP_CONCAT(CAST(t1.c0 AS TEXT)) UNION ALL SELECT ALL t0.c0, rt0.c0, rt0.c3, rt0.c2 FROM t0, rt0, t1 NOT INDEXED GROUP BY t0.c0, rt0.c0, rt0.c3, rt0.c2 HAVING (NOT (GROUP_CONCAT(CAST(t1.c0 AS TEXT)))) UNION ALL SELECT t0.c0, rt0.c0, rt0.c3, rt0.c2 FROM t0, rt0, t1 GROUP BY t0.c0, rt0.c0, rt0.c3, rt0.c2 HAVING ((GROUP_CONCAT(CAST(t1.c0 AS TEXT))) ISNULL);
SELECT t0.c0, rt0.c0, rt0.c3, rt0.c2 FROM t0, rt0, t1 GROUP BY t0.c0, rt0.c0, rt0.c3, rt0.c2;
SELECT t0.c0, rt0.c0, rt0.c3, rt0.c2 FROM t0, rt0, t1 GROUP BY t0.c0, rt0.c0, rt0.c3, rt0.c2 HAVING GROUP_CONCAT(CAST(t1.c0 AS TEXT)) UNION ALL SELECT ALL t0.c0, rt0.c0, rt0.c3, rt0.c2 FROM t0, rt0, t1 NOT INDEXED GROUP BY t0.c0, rt0.c0, rt0.c3, rt0.c2 HAVING (NOT (GROUP_CONCAT(CAST(t1.c0 AS TEXT)))) UNION ALL SELECT t0.c0, rt0.c0, rt0.c3, rt0.c2 FROM t0, rt0, t1 GROUP BY t0.c0, rt0.c0, rt0.c3, rt0.c2 HAVING ((GROUP_CONCAT(CAST(t1.c0 AS TEXT))) ISNULL);
SELECT t0.c0, rt0.c0, rt0.c3, rt0.c2 FROM t0, rt0, t1 GROUP BY t0.c0, rt0.c0, rt0.c3, rt0.c2;
SELECT ALL * FROM t1;
SELECT * FROM t1 WHERE (TYPEOF(((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (TYPEOF(((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))))) UNION ALL SELECT ALL * FROM t1 WHERE (((TYPEOF(((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT * FROM rt0, t1;
SELECT DISTINCT * FROM rt0, t1 WHERE ((((t1.c0 IN ())) NOT BETWEEN ('1347781814') AND (CAST(rt0.c3 AS BLOB)))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((NOT ((((t1.c0 IN ())) NOT BETWEEN ('1347781814') AND (CAST(rt0.c3 AS BLOB)))))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((((((t1.c0 IN ())) NOT BETWEEN ('1347781814') AND (CAST(rt0.c3 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM rt0, t1;
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 NOT INDEXED, t0 WHERE (IFNULL(DISTINCT (rt0.c0 IN (rt0.c0)), QUOTE(rt0.c0))) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0, t0 WHERE ((NOT (IFNULL(DISTINCT (rt0.c0 IN (rt0.c0)), QUOTE(rt0.c0))))) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0, t0 WHERE (((IFNULL(DISTINCT (rt0.c0 IN (rt0.c0)), QUOTE(rt0.c0))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, rt0.c3 FROM t1 CROSS JOIN rt0 ON ((((rt0.c1) IS TRUE)) ISNULL) CROSS JOIN t0 ON (((((((((rt0.c0)AND(t1.c0)))AND(rt0.c3)))AND(rt0.c2)))AND(x'')) IN ()) GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM t1 CROSS JOIN rt0 ON ((((rt0.c1) IS TRUE)) ISNULL) CROSS JOIN t0 ON (((((((((rt0.c0)AND(t1.c0)))AND(rt0.c3)))AND(rt0.c2)))AND(x'')) IN ()) GROUP BY rt0.c2, rt0.c3 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM t1 CROSS JOIN rt0 ON ((((rt0.c1) IS TRUE)) ISNULL) CROSS JOIN t0 ON (((((((((rt0.c0)AND(t1.c0)))AND(rt0.c3)))AND(rt0.c2)))AND(x'')) IN ()) GROUP BY rt0.c2, rt0.c3 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT rt0.c2, rt0.c3 FROM t1 CROSS JOIN rt0 ON ((((rt0.c1) IS TRUE)) ISNULL) CROSS JOIN t0 ON (((((((((rt0.c0)AND(t1.c0)))AND(rt0.c3)))AND(rt0.c2)))AND(x'')) IN ()) GROUP BY rt0.c2, rt0.c3 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL MAX((((((rt0.c1)+(t1.c0))))=((529446807)))) FROM t1, rt0, t0;
SELECT * FROM t1;
SELECT * FROM t1 WHERE ((((t1.c0)) BETWEEN ((t1.c0 COLLATE BINARY)) AND ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))) UNION ALL SELECT * FROM t1 WHERE ((NOT ((((t1.c0)) BETWEEN ((t1.c0 COLLATE BINARY)) AND ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))))) UNION ALL SELECT ALL * FROM t1 WHERE ((((((t1.c0)) BETWEEN ((t1.c0 COLLATE BINARY)) AND ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE (((((json_valid(t1.c0))OR(json_type(t0.c0))))AND(CAST(t1.c0 AS INTEGER)))) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT (((((json_valid(t1.c0))OR(json_type(t0.c0))))AND(CAST(t1.c0 AS INTEGER)))))) UNION SELECT DISTINCT * FROM t1, t0 WHERE (((((((json_valid(t1.c0))OR(json_type(t0.c0))))AND(CAST(t1.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((t1.c0)IS NOT(((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c0))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((t1.c0)IS NOT(((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c0))))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((t1.c0)IS NOT(((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c0))))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((COUNT(*))) BETWEEN ((((TOTAL(AVG(MIN(COUNT(*)))))/(SUM(COUNT(*)))))) AND ((TOTAL(SUM(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((COUNT(*))) BETWEEN ((((TOTAL(AVG(MIN(COUNT(*)))))/(SUM(COUNT(*)))))) AND ((TOTAL(SUM(t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((COUNT(*))) BETWEEN ((((TOTAL(AVG(MIN(COUNT(*)))))/(SUM(COUNT(*)))))) AND ((TOTAL(SUM(t0.c0)))))) ISNULL);
SELECT rt0.c2, rt0.c0, t0.c0, rt0.c1, rt0.c3 FROM t0, rt0;
SELECT rt0.c2, rt0.c0, t0.c0, rt0.c1, rt0.c3 FROM t0, rt0 WHERE ((((rt0.c3)) BETWEEN ((((((((((rt0.c0)AND(1058197032)))AND(rt0.c0)))OR(rt0.c1)))AND(0.8827551026562355)))) AND ((((t0.c0) ISNULL))))) UNION ALL SELECT rt0.c2, rt0.c0, t0.c0, rt0.c1, rt0.c3 FROM t0, rt0 WHERE ((NOT ((((rt0.c3)) BETWEEN ((((((((((rt0.c0)AND(1058197032)))AND(rt0.c0)))OR(rt0.c1)))AND(0.8827551026562355)))) AND ((((t0.c0) ISNULL))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, t0.c0, rt0.c1, rt0.c3 FROM t0, rt0 WHERE ((((((rt0.c3)) BETWEEN ((((((((((rt0.c0)AND(1058197032)))AND(rt0.c0)))OR(rt0.c1)))AND(0.8827551026562355)))) AND ((((t0.c0) ISNULL))))) ISNULL));
SELECT rt0.c2, rt0.c0, t0.c0, rt0.c1, rt0.c3 FROM t0, rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((NULL) ISNULL)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((NULL) ISNULL)))) UNION SELECT DISTINCT * FROM t0 WHERE (((((NULL) ISNULL)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 WHERE (((t1.c0) BETWEEN ((((t0.c0))<((t1.c0)))) AND ('1780125171'))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1, t0 WHERE ((NOT (((t1.c0) BETWEEN ((((t0.c0))<((t1.c0)))) AND ('1780125171'))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1, t0 WHERE (((((t1.c0) BETWEEN ((((t0.c0))<((t1.c0)))) AND ('1780125171'))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT rt0.c0 FROM rt0 LEFT OUTER JOIN t1 ON (((+ (0.12035283611053349)))IS NOT(((rt0.c1) IS FALSE))) CROSS JOIN t0 ON (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOT BETWEEN (((rt0.c2) BETWEEN ('') AND (t0.c0))) AND (((rt0.c3)==(rt0.c3)))) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 LEFT OUTER JOIN t1 ON (((+ (0.12035283611053349)))IS NOT(((rt0.c1) IS FALSE))) CROSS JOIN t0 ON (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOT BETWEEN (((rt0.c2) BETWEEN ('') AND (t0.c0))) AND (((rt0.c3)==(rt0.c3)))) GROUP BY rt0.c0 HAVING SUM(TYPEOF(rt0.c3)) UNION ALL SELECT rt0.c0 FROM rt0 LEFT OUTER JOIN t1 ON (((+ (0.12035283611053349)))IS NOT(((rt0.c1) IS FALSE))) CROSS JOIN t0 ON (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOT BETWEEN (((rt0.c2) BETWEEN ('') AND (t0.c0))) AND (((rt0.c3)==(rt0.c3)))) GROUP BY rt0.c0 HAVING (NOT (SUM(TYPEOF(rt0.c3)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 LEFT OUTER JOIN t1 ON (((+ (0.12035283611053349)))IS NOT(((rt0.c1) IS FALSE))) CROSS JOIN t0 ON (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOT BETWEEN (((rt0.c2) BETWEEN ('') AND (t0.c0))) AND (((rt0.c3)==(rt0.c3)))) GROUP BY rt0.c0 HAVING ((SUM(TYPEOF(rt0.c3))) ISNULL);
SELECT rt0.c0 FROM rt0 LEFT OUTER JOIN t1 ON (((+ (0.12035283611053349)))IS NOT(((rt0.c1) IS FALSE))) CROSS JOIN t0 ON (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOT BETWEEN (((rt0.c2) BETWEEN ('') AND (t0.c0))) AND (((rt0.c3)==(rt0.c3)))) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 LEFT OUTER JOIN t1 ON (((+ (0.12035283611053349)))IS NOT(((rt0.c1) IS FALSE))) CROSS JOIN t0 ON (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOT BETWEEN (((rt0.c2) BETWEEN ('') AND (t0.c0))) AND (((rt0.c3)==(rt0.c3)))) GROUP BY rt0.c0 HAVING SUM(TYPEOF(rt0.c3)) UNION ALL SELECT rt0.c0 FROM rt0 LEFT OUTER JOIN t1 ON (((+ (0.12035283611053349)))IS NOT(((rt0.c1) IS FALSE))) CROSS JOIN t0 ON (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOT BETWEEN (((rt0.c2) BETWEEN ('') AND (t0.c0))) AND (((rt0.c3)==(rt0.c3)))) GROUP BY rt0.c0 HAVING (NOT (SUM(TYPEOF(rt0.c3)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 LEFT OUTER JOIN t1 ON (((+ (0.12035283611053349)))IS NOT(((rt0.c1) IS FALSE))) CROSS JOIN t0 ON (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOT BETWEEN (((rt0.c2) BETWEEN ('') AND (t0.c0))) AND (((rt0.c3)==(rt0.c3)))) GROUP BY rt0.c0 HAVING ((SUM(TYPEOF(rt0.c3))) ISNULL);
SELECT rt0.c0 FROM rt0 LEFT OUTER JOIN t1 ON (((+ (0.12035283611053349)))IS NOT(((rt0.c1) IS FALSE))) CROSS JOIN t0 ON (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOT BETWEEN (((rt0.c2) BETWEEN ('') AND (t0.c0))) AND (((rt0.c3)==(rt0.c3)))) GROUP BY rt0.c0;
SELECT ALL t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE (t1.c0) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (t1.c0))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((t1.c0) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE (0.32943334852066153) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT (0.32943334852066153))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE (((0.32943334852066153) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT t0.c0 FROM t0 INDEXED BY i42, t1 GROUP BY t0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c3, rt0.c1, t0.c0, t1.c0 FROM t0, rt0, t1 GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1, t0.c0, t1.c0;
SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c1, t0.c0, t1.c0 FROM t0, rt0, t1 GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1, t0.c0, t1.c0 HAVING COUNT(((rt0.c0) BETWEEN (MAX(TOTAL(0Xffffffffbbf97426))) AND (rt0.c3))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c1, t0.c0, t1.c0 FROM t0, rt0, t1 GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1, t0.c0, t1.c0 HAVING (NOT (COUNT(((rt0.c0) BETWEEN (MAX(TOTAL(0xffffffffbbf97426))) AND (rt0.c3))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c3, rt0.c1, t0.c0, t1.c0 FROM t0, rt0, t1 GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1, t0.c0, t1.c0 HAVING ((COUNT(((rt0.c0) BETWEEN (MAX(TOTAL(0Xffffffffbbf97426))) AND (rt0.c3)))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((t0.c0) IS TRUE)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((t0.c0) IS TRUE)))) UNION ALL SELECT ALL * FROM t0 WHERE (((((t0.c0) IS TRUE)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (t1.c0) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT * FROM t1 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t1.c0 FROM t0, t1, rt0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1, rt0 WHERE (rt0.c0) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t0 NOT INDEXED, t1, rt0 WHERE ((NOT (rt0.c0))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t0, t1, rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1, rt0 GROUP BY t1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM(MIN(t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM(MIN(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(MIN(t0.c0))) ISNULL);
SELECT * FROM t1;
SELECT ALL * FROM t1 WHERE (t1.c0) UNION ALL SELECT * FROM t1 WHERE ((NOT (t1.c0))) UNION ALL SELECT ALL * FROM t1 WHERE (((t1.c0) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))OR((+ (t0.c0)))))AND(CAST(t0.c0 AS NUMERIC)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))OR((+ (t0.c0)))))AND(CAST(t0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))OR((+ (t0.c0)))))AND(CAST(t0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM rt0 WHERE ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), (rt0.c2 IN ()), (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))))==((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)), (NOT (rt0.c0)), rt0.c0)))) GROUP BY rt0.c3, rt0.c0 UNION SELECT rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), (rt0.c2 IN ()), (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))))=((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)), (NOT (rt0.c0)), rt0.c0)))))) GROUP BY rt0.c3, rt0.c0 UNION SELECT rt0.c3, rt0.c0 FROM rt0 WHERE ((((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), (rt0.c2 IN ()), (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))))=((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)), (NOT (rt0.c0)), rt0.c0)))) ISNULL)) GROUP BY rt0.c3, rt0.c0;
SELECT rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((AVG(AVG(t1.c0)))>>(((t1.c0)|(SUM(t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((AVG(AVG(t1.c0)))>>(((t1.c0)|(SUM(t1.c0))))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((AVG(AVG(t1.c0)))>>(((t1.c0)|(SUM(t1.c0)))))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((NOT (t0.c0)) COLLATE NOCASE) UNION ALL SELECT * FROM t0 WHERE ((NOT ((NOT (t0.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM t0 WHERE ((((NOT (t0.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t1, t0 INNER JOIN rt0 ON (((((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))!=((TRIM(rt0.c1))));
SELECT DISTINCT * FROM t1, t0 INNER JOIN rt0 ON (((((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))!=((TRIM(rt0.c1)))) WHERE (((((NULL)AND(((rt0.c1) NOT BETWEEN (t1.c0) AND (rt0.c1)))))OR((((x'', rt0.c0, rt0.c3))<((rt0.c1, rt0.c0, rt0.c2)))))) UNION SELECT DISTINCT * FROM t1, t0 INNER JOIN rt0 ON (((((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))<>((TRIM(rt0.c1)))) WHERE ((NOT (((((NULL)AND(((rt0.c1) NOT BETWEEN (t1.c0) AND (rt0.c1)))))OR((((x'', rt0.c0, rt0.c3))<((rt0.c1, rt0.c0, rt0.c2)))))))) UNION SELECT DISTINCT * FROM t1, t0 INNER JOIN rt0 ON (((((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))<>((TRIM(rt0.c1)))) WHERE (((((((NULL)AND(((rt0.c1) NOT BETWEEN (t1.c0) AND (rt0.c1)))))OR((((x'', rt0.c0, rt0.c3))<((rt0.c1, rt0.c0, rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM t1, t0 INNER JOIN rt0 ON (((((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))!=((TRIM(rt0.c1))));
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CASE WHEN ((t0.c0)&(t0.c0)) THEN (((x'')) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) END) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CASE WHEN ((t0.c0)&(t0.c0)) THEN (((x'')) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CASE WHEN ((t0.c0)&(t0.c0)) THEN (((x'')) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) END) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING TOTAL(MAX(rt0.c0)) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (TOTAL(MAX(rt0.c0)))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING ((TOTAL(MAX(rt0.c0))) ISNULL);
SELECT ALL * FROM t1, t0, rt0;
SELECT ALL * FROM t1, t0, rt0 WHERE ((((PRINTF(t1.c0)))!=((((t0.c0) NOTNULL))))) UNION ALL SELECT ALL * FROM t1, t0, rt0 WHERE ((NOT ((((PRINTF(t1.c0)))!=((((t0.c0) NOTNULL))))))) UNION ALL SELECT * FROM t1, t0, rt0 WHERE ((((((PRINTF(t1.c0)))!=((((t0.c0) NOTNULL))))) ISNULL));
SELECT ALL * FROM t1, t0, rt0;
SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0;
SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0 WHERE (ROUND(((t1.c0)>=(t0.c0)), (NULL IN (t0.c0)))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0 WHERE ((NOT (ROUND(((t1.c0)>=(t0.c0)), (NULL IN (t0.c0)))))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0 WHERE (((ROUND(((t1.c0)>=(t0.c0)), (NULL IN (t0.c0)))) ISNULL));
SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0;
SELECT rt0.c0, rt0.c2 FROM rt0 NOT INDEXED, t1 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0, t1 WHERE (((((rt0.c2) BETWEEN (1.90081637E8) AND (rt0.c2))) BETWEEN (((t1.c0)>>(rt0.c1))) AND (rt0.c0))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0, t1 WHERE ((NOT (((((rt0.c2) BETWEEN (1.90081637E8) AND (rt0.c2))) BETWEEN (((t1.c0)>>(rt0.c1))) AND (rt0.c0))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0, t1 WHERE (((((((rt0.c2) BETWEEN (1.90081637E8) AND (rt0.c2))) BETWEEN (((t1.c0)>>(rt0.c1))) AND (rt0.c0))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 NOT INDEXED, t1 GROUP BY rt0.c0, rt0.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM(MIN(GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM(MIN(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(MIN(GROUP_CONCAT(COUNT(*))))) ISNULL);
SELECT * FROM t1, t0, rt0;
SELECT * FROM t1, t0, rt0 WHERE (rt0.c3) UNION ALL SELECT * FROM t1, t0, rt0 WHERE ((NOT (rt0.c3))) UNION ALL SELECT * FROM t1, t0, rt0 WHERE (((rt0.c3) ISNULL));
SELECT * FROM t1, t0, rt0;
SELECT DISTINCT rt0.c0, rt0.c3, t1.c0, rt0.c1 FROM rt0, t1;
SELECT DISTINCT rt0.c0, rt0.c3, t1.c0, rt0.c1 FROM rt0, t1 WHERE ((((((((((('-1302416986')IS NOT(rt0.c3)))AND(CASE WHEN rt0.c0 THEN rt0.c2 ELSE '험fo' END)))AND(((((((((rt0.c0)AND(rt0.c0)))AND(t1.c0)))OR(rt0.c2)))OR(rt0.c3)))))AND((((t1.c0))<((rt0.c2))))))AND(rt0.c3))) UNION SELECT DISTINCT rt0.c0, rt0.c3, t1.c0, rt0.c1 FROM rt0, t1 WHERE ((NOT ((((((((((('-1302416986')IS NOT(rt0.c3)))AND(CASE WHEN rt0.c0 THEN rt0.c2 ELSE '험fo' END)))AND(((((((((rt0.c0)AND(rt0.c0)))AND(t1.c0)))OR(rt0.c2)))OR(rt0.c3)))))AND((((t1.c0))<((rt0.c2))))))AND(rt0.c3))))) UNION SELECT DISTINCT rt0.c0, rt0.c3, t1.c0, rt0.c1 FROM rt0, t1 WHERE ((((((((((((('-1302416986')IS NOT(rt0.c3)))AND(CASE WHEN rt0.c0 THEN rt0.c2 ELSE '험fo' END)))AND(((((((((rt0.c0)AND(rt0.c0)))AND(t1.c0)))OR(rt0.c2)))OR(rt0.c3)))))AND((((t1.c0))<((rt0.c2))))))AND(rt0.c3))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, t1.c0, rt0.c1 FROM rt0, t1;
SELECT ALL rt0.c0, t0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0, t1, t0 GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c0, t0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0, t1, t0 WHERE (((((((((((rt0.c3)*(rt0.c2)))AND((NOT (t0.c0)))))AND(0.9945069961167486)))AND(((t1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))OR(MAX(rt0.c1, t0.c0, rt0.c3, rt0.c0, t0.c0, rt0.c0)))) GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c1, rt0.c2 UNION SELECT rt0.c0, t0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0, t1, t0 WHERE ((NOT (((((((((((rt0.c3)*(rt0.c2)))AND((NOT (t0.c0)))))AND(0.9945069961167486)))AND(((t1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))OR(MAX(rt0.c1, t0.c0, rt0.c3, rt0.c0, t0.c0, rt0.c0)))))) GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, t0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0, t1, t0 WHERE (((((((((((((rt0.c3)*(rt0.c2)))AND((NOT (t0.c0)))))AND(0.9945069961167486)))AND(((t1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))OR(MAX(rt0.c1, t0.c0, rt0.c3, rt0.c0, t0.c0, rt0.c0)))) ISNULL)) GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, t0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0, t1, t0 GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING CASE ((((t1.c0)AND(t1.c0)))OR(MIN(t1.c0)))  WHEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) THEN ((t1.c0)+(COUNT(*))) END UNION ALL SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING (NOT (CASE ((((t1.c0)AND(t1.c0)))OR(MIN(t1.c0)))  WHEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) THEN ((t1.c0)+(COUNT(*))) END)) UNION ALL SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING ((CASE ((((t1.c0)AND(t1.c0)))OR(MIN(t1.c0)))  WHEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) THEN ((t1.c0)+(COUNT(*))) END) ISNULL);
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING CASE ((((t1.c0)AND(t1.c0)))OR(MIN(t1.c0)))  WHEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) THEN ((t1.c0)+(COUNT(*))) END UNION ALL SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING (NOT (CASE ((((t1.c0)AND(t1.c0)))OR(MIN(t1.c0)))  WHEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) THEN ((t1.c0)+(COUNT(*))) END)) UNION ALL SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING ((CASE ((((t1.c0)AND(t1.c0)))OR(MIN(t1.c0)))  WHEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) THEN ((t1.c0)+(COUNT(*))) END) ISNULL);
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT * FROM rt0, t1, t0;
SELECT * FROM rt0, t1, t0 WHERE ((((((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND (('7c77le+'))))AND((t1.c0 IN ()))))AND(((t0.c0)<=(t0.c0))))) UNION ALL SELECT * FROM rt0, t1, t0 WHERE ((NOT ((((((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND (('7c77le+'))))AND((t1.c0 IN ()))))AND(((t0.c0)<=(t0.c0))))))) UNION ALL SELECT ALL * FROM rt0, t1, t0 WHERE ((((((((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND (('7c77le+'))))AND((t1.c0 IN ()))))AND(((t0.c0)<=(t0.c0))))) ISNULL));
SELECT * FROM rt0, t1, t0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c1)>=(t0.c0))) BETWEEN (((rt0.c3)||(rt0.c1))) AND ((~ (x'')))) CROSS JOIN t1 ON (rt0.c3 IN (CAST(rt0.c1 AS BLOB), (t1.c0 IN ())));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c1)>=(t0.c0))) BETWEEN (((rt0.c3)||(rt0.c1))) AND ((~ (x'')))) CROSS JOIN t1 ON (rt0.c3 IN (CAST(rt0.c1 AS BLOB), (t1.c0 IN ()))) WHERE (UNLIKELY(DISTINCT CASE WHEN rt0.c1 THEN rt0.c1 WHEN NULL THEN rt0.c3 WHEN rt0.c2 THEN '1432966306' END)) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c1)>=(t0.c0))) BETWEEN (((rt0.c3)||(rt0.c1))) AND ((~ (x'')))) CROSS JOIN t1 ON (rt0.c3 IN (CAST(rt0.c1 AS BLOB), (t1.c0 IN ()))) WHERE ((NOT (UNLIKELY(DISTINCT CASE WHEN rt0.c1 THEN rt0.c1 WHEN NULL THEN rt0.c3 WHEN rt0.c2 THEN '1432966306' END)))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c1)>=(t0.c0))) BETWEEN (((rt0.c3)||(rt0.c1))) AND ((~ (x'')))) CROSS JOIN t1 ON (rt0.c3 IN (CAST(rt0.c1 AS BLOB), (t1.c0 IN ()))) WHERE (((UNLIKELY(DISTINCT CASE WHEN rt0.c1 THEN rt0.c1 WHEN NULL THEN rt0.c3 WHEN rt0.c2 THEN '1432966306' END)) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c1)>=(t0.c0))) BETWEEN (((rt0.c3)||(rt0.c1))) AND ((~ (x'')))) CROSS JOIN t1 ON (rt0.c3 IN (CAST(rt0.c1 AS BLOB), (t1.c0 IN ())));
SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE (CASE WHEN (+ (rt0.c2)) THEN (rt0.c3 IN ()) END) GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN (+ (rt0.c2)) THEN (rt0.c3 IN ()) END))) GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE WHEN (+ (rt0.c2)) THEN (rt0.c3 IN ()) END) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING CAST(CAST(MIN(t1.c0) AS REAL) AS NUMERIC) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (CAST(CAST(MIN(t1.c0) AS REAL) AS NUMERIC))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((CAST(CAST(MIN(t1.c0) AS REAL) AS NUMERIC)) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING CAST(CAST(MIN(t1.c0) AS REAL) AS NUMERIC) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (CAST(CAST(MIN(t1.c0) AS REAL) AS NUMERIC))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((CAST(CAST(MIN(t1.c0) AS REAL) AS NUMERIC)) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1;
SELECT t1.c0 FROM t0, t1 WHERE (t0.c0) UNION ALL SELECT t1.c0 FROM t0, t1 WHERE ((NOT (t0.c0))) UNION ALL SELECT t1.c0 FROM t0, t1 WHERE (((t0.c0) ISNULL));
SELECT ALL t1.c0 FROM t0, t1;
SELECT DISTINCT t1.c0, rt0.c1, rt0.c0, t0.c0 FROM rt0, t0, t1;
SELECT DISTINCT t1.c0, rt0.c1, rt0.c0, t0.c0 FROM rt0, t0, t1 WHERE ((~ (CASE WHEN t0.c0 THEN t1.c0 END))) UNION SELECT DISTINCT t1.c0, rt0.c1, rt0.c0, t0.c0 FROM rt0, t0, t1 WHERE ((NOT ((~ (CASE WHEN t0.c0 THEN t1.c0 END))))) UNION SELECT DISTINCT t1.c0, rt0.c1, rt0.c0, t0.c0 FROM rt0, t0, t1 WHERE ((((~ (CASE WHEN t0.c0 THEN t1.c0 END))) ISNULL));
SELECT DISTINCT t1.c0, rt0.c1, rt0.c0, t0.c0 FROM rt0, t0, t1;
SELECT ALL t1.c0, rt0.c0, rt0.c2 FROM t1, rt0 GROUP BY t1.c0, rt0.c0, rt0.c2;
SELECT t1.c0, rt0.c0, rt0.c2 FROM t1, rt0 WHERE (CAST((('1198440141')<=(rt0.c1)) AS BLOB)) GROUP BY t1.c0, rt0.c0, rt0.c2 UNION SELECT t1.c0, rt0.c0, rt0.c2 FROM t1, rt0 WHERE ((NOT (CAST((('1198440141')<=(rt0.c1)) AS BLOB)))) GROUP BY t1.c0, rt0.c0, rt0.c2 UNION SELECT t1.c0, rt0.c0, rt0.c2 FROM t1, rt0 WHERE (((CAST((('1198440141')<=(rt0.c1)) AS BLOB)) ISNULL)) GROUP BY t1.c0, rt0.c0, rt0.c2;
SELECT ALL t1.c0, rt0.c0, rt0.c2 FROM t1, rt0 GROUP BY t1.c0, rt0.c0, rt0.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(NULL) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(NULL))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(NULL)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(NULL) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(NULL))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(NULL)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM t1, rt0 NOT INDEXED, t0;
SELECT ALL t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM t1, rt0, t0 WHERE (rt0.c0) UNION ALL SELECT ALL t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM t1, rt0, t0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM t1, rt0, t0 WHERE (((rt0.c0) ISNULL));
SELECT t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM t1, rt0 NOT INDEXED, t0;
SELECT DISTINCT * FROM t1 INNER JOIN t0 ON (NULL IN (((t1.c0) NOTNULL), rt0.c3 COLLATE NOCASE)) RIGHT OUTER JOIN rt0 ON ((((t1.c0)AND(rt0.c3)))AND(rt0.c3)) COLLATE NOCASE;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((IFNULL(t0.c0, t0.c0)) IS TRUE)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((IFNULL(t0.c0, t0.c0)) IS TRUE)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((IFNULL(t0.c0, t0.c0)) IS TRUE)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN((t0.c0 IN (TOTAL(t0.c0), COUNT(*)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN((t0.c0 IN (TOTAL(t0.c0), COUNT(*)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN((t0.c0 IN (TOTAL(t0.c0), COUNT(*))))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((t0.c0)<<(t0.c0)) COLLATE NOCASE) UNION ALL SELECT * FROM t0 WHERE ((NOT (((t0.c0)<<(t0.c0)) COLLATE NOCASE))) UNION ALL SELECT * FROM t0 WHERE (((((t0.c0)<<(t0.c0)) COLLATE NOCASE) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT rt0.c1, t1.c0, rt0.c3 FROM rt0 RIGHT OUTER JOIN t1 ON (((((rt0.c1) ISNULL), rt0.c3 COLLATE RTRIM, UPPER(rt0.c0)))>(((t0.c0 IN (rt0.c1)), ((t1.c0) ISNULL), CAST(rt0.c1 AS TEXT)))) LEFT OUTER JOIN t0 ON '-1316633921';
SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c2, t1.c0 FROM rt0, t1 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2, t1.c0;
SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c2, t1.c0 FROM rt0, t1 WHERE (((((NULL) ISNULL)) BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 END) AND (((rt0.c2) NOTNULL)))) GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2, t1.c0 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2, t1.c0 FROM rt0, t1 WHERE ((NOT (((((NULL) ISNULL)) BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 END) AND (((rt0.c2) NOTNULL)))))) GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2, t1.c0 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2, t1.c0 FROM rt0, t1 WHERE (((((((NULL) ISNULL)) BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 END) AND (((rt0.c2) NOTNULL)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2, t1.c0;
SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c2, t1.c0 FROM rt0, t1 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2, t1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL((((t0.c0, TOTAL(SUM(MIN(AVG(COUNT(SUM(SUM(SUM(t0.c0)))))))), MAX(TOTAL(t0.c0)), MAX(t0.c0), t0.c0))<((TOTAL(t0.c0), t0.c0, COUNT(t0.c0), COUNT(*), COUNT(MIN(AVG(COUNT(MIN(MIN(COUNT(t0.c0))))))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL((((t0.c0, TOTAL(SUM(MIN(AVG(COUNT(SUM(SUM(SUM(t0.c0)))))))), MAX(TOTAL(t0.c0)), MAX(t0.c0), t0.c0))<((TOTAL(t0.c0), t0.c0, COUNT(t0.c0), COUNT(*), COUNT(MIN(AVG(COUNT(MIN(MIN(COUNT(t0.c0))))))))))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL((((t0.c0, TOTAL(SUM(MIN(AVG(COUNT(SUM(SUM(SUM(t0.c0)))))))), MAX(TOTAL(t0.c0)), MAX(t0.c0), t0.c0))<((TOTAL(t0.c0), t0.c0, COUNT(t0.c0), COUNT(*), COUNT(MIN(AVG(COUNT(MIN(MIN(COUNT(t0.c0)))))))))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, t0.c0 FROM t0 LEFT OUTER JOIN rt0 ON CAST(NULL AS BLOB);
SELECT ALL rt0.c0, rt0.c2, t0.c0 FROM t0 LEFT OUTER JOIN rt0 ON CAST(NULL AS BLOB) WHERE (-1666492688) UNION ALL SELECT rt0.c0, rt0.c2, t0.c0 FROM t0 LEFT OUTER JOIN rt0 ON CAST(NULL AS BLOB) WHERE ((NOT (-1666492688))) UNION ALL SELECT ALL rt0.c0, rt0.c2, t0.c0 FROM t0 LEFT OUTER JOIN rt0 ON CAST(NULL AS BLOB) WHERE (((-1666492688) ISNULL));
SELECT ALL rt0.c0, rt0.c2, t0.c0 FROM t0 LEFT OUTER JOIN rt0 ON CAST(NULL AS BLOB);
SELECT DISTINCT * FROM t0 INNER JOIN t1 ON ((rt0.c3 COLLATE BINARY)+((((rt0.c0))!=((rt0.c0))))) FULL OUTER JOIN rt0 ON rt0.c2;
SELECT ALL t0.c0, t1.c0 FROM rt0, t0, t1 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM rt0, t0, t1 WHERE (t0.c0) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM rt0, t0, t1 WHERE ((NOT (t0.c0))) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM rt0, t0, t1 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM rt0, t0, t1 GROUP BY t0.c0, t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING STRFTIME(((t1.c0)AND(TOTAL(MIN(t1.c0)))), MAX(''), COUNT(*), AVG(COUNT(t1.c0)), COUNT(*)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (STRFTIME(((t1.c0)AND(TOTAL(MIN(t1.c0)))), MAX(''), COUNT(*), AVG(COUNT(t1.c0)), COUNT(*)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((STRFTIME(((t1.c0)AND(TOTAL(MIN(t1.c0)))), MAX(''), COUNT(*), AVG(COUNT(t1.c0)), COUNT(*))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (UNLIKELY(LIKELY(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (UNLIKELY(LIKELY(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((UNLIKELY(LIKELY(t0.c0))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (0.379927115945089) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (0.379927115945089))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((0.379927115945089) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1, t1.c0 FROM t1, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, t1.c0;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1, t1.c0 FROM t1, rt0 WHERE (CASE '1749571267'  WHEN rt0.c3 COLLATE RTRIM THEN CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN 1.520735232E9 WHEN rt0.c0 THEN t1.c0 WHEN 0.6349147516490505 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END ELSE ((t1.c0)/(rt0.c2)) END) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, t1.c0 UNION SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1, t1.c0 FROM t1, rt0 WHERE ((NOT (CASE '1749571267'  WHEN rt0.c3 COLLATE RTRIM THEN CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN 1.520735232E9 WHEN rt0.c0 THEN t1.c0 WHEN 0.6349147516490505 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END ELSE ((t1.c0)/(rt0.c2)) END))) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, t1.c0 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1, t1.c0 FROM t1, rt0 WHERE (((CASE '1749571267'  WHEN rt0.c3 COLLATE RTRIM THEN CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN 1.520735232E9 WHEN rt0.c0 THEN t1.c0 WHEN 0.6349147516490505 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END ELSE ((t1.c0)/(rt0.c2)) END) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, t1.c0;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1, t1.c0 FROM t1, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING COUNT(CASE AVG(t0.c0)  WHEN t0.c0 THEN AVG(SUM(TOTAL(COUNT(*)))) WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 ELSE t0.c0 END) UNION ALL SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (NOT (COUNT(CASE AVG(t0.c0)  WHEN t0.c0 THEN AVG(SUM(TOTAL(COUNT(*)))) WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 ELSE t0.c0 END))) UNION ALL SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING ((COUNT(CASE AVG(t0.c0)  WHEN t0.c0 THEN AVG(SUM(TOTAL(COUNT(*)))) WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 ELSE t0.c0 END)) ISNULL);
SELECT * FROM t1, t0;
SELECT ALL * FROM t1, t0 WHERE (((CAST(t1.c0 AS TEXT)) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (x'ba2b'))) AND (((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0))))) UNION ALL SELECT ALL * FROM t1, t0 WHERE ((NOT (((CAST(t1.c0 AS TEXT)) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (x'ba2b'))) AND (((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0))))))) UNION ALL SELECT ALL * FROM t1, t0 WHERE (((((CAST(t1.c0 AS TEXT)) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (x'ba2b'))) AND (((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0))))) ISNULL));
SELECT * FROM t1, t0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0) IS FALSE))AND(CAST(t1.c0 AS REAL))))OR(CAST(t1.c0 AS TEXT)))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((((((t1.c0) IS FALSE))AND(CAST(t1.c0 AS REAL))))OR(CAST(t1.c0 AS TEXT)))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c0) IS FALSE))AND(CAST(t1.c0 AS REAL))))OR(CAST(t1.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT rt0.c0, t0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c0, t0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t0, rt0 WHERE (rt0.c1) GROUP BY rt0.c0, t0.c0, rt0.c2, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c0, t0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t0, rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c0, t0.c0, rt0.c2, rt0.c1, rt0.c3 UNION SELECT rt0.c0, t0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t0, rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c0, t0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c0, t0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING MAX(COUNT(AVG(GROUP_CONCAT(TOTAL(GROUP_CONCAT(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING (NOT (MAX(COUNT(AVG(GROUP_CONCAT(TOTAL(GROUP_CONCAT(t0.c0)))))))) UNION ALL SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING ((MAX(COUNT(AVG(GROUP_CONCAT(TOTAL(GROUP_CONCAT(t0.c0))))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c0 ELSE rt0.c0 END) IS FALSE)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c0 ELSE rt0.c0 END) IS FALSE)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c0 ELSE rt0.c0 END) IS FALSE)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (((rt0.c2) NOTNULL)))) GROUP BY rt0.c2, rt0.c3 UNION SELECT rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT ((NOT (((rt0.c2) NOTNULL)))))) GROUP BY rt0.c2, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c3 FROM rt0 WHERE ((((NOT (((rt0.c2) NOTNULL)))) ISNULL)) GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c0, t0.c0, rt0.c3 FROM rt0, t1, t0 GROUP BY rt0.c0, t0.c0, rt0.c3;
SELECT ALL rt0.c0, t0.c0, rt0.c3 FROM rt0, t1, t0 GROUP BY rt0.c0, t0.c0, rt0.c3 HAVING AVG(GROUP_CONCAT(COUNT(*))) UNION ALL SELECT ALL rt0.c0, t0.c0, rt0.c3 FROM rt0, t1, t0 GROUP BY rt0.c0, t0.c0, rt0.c3 HAVING (NOT (AVG(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT rt0.c0, t0.c0, rt0.c3 FROM rt0, t1, t0 GROUP BY rt0.c0, t0.c0, rt0.c3 HAVING ((AVG(GROUP_CONCAT(COUNT(*)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, t0.c0, rt0.c3 FROM t0, rt0;
SELECT rt0.c2, rt0.c1, t0.c0, rt0.c3 FROM t0, rt0 WHERE ((((rt0.c0 IN ()))/(((rt0.c1)>>(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c1, t0.c0, rt0.c3 FROM t0, rt0 WHERE ((NOT ((((rt0.c0 IN ()))/(((rt0.c1)>>(rt0.c0))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, t0.c0, rt0.c3 FROM t0, rt0 WHERE ((((((rt0.c0 IN ()))/(((rt0.c1)>>(rt0.c0))))) ISNULL));
SELECT ALL rt0.c2, rt0.c1, t0.c0, rt0.c3 FROM t0, rt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (TYPEOF(DISTINCT '')) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (TYPEOF(DISTINCT '')))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((TYPEOF(DISTINCT '')) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT rt0.c1, t0.c0, rt0.c3, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c3, rt0.c0;
SELECT rt0.c1, t0.c0, rt0.c3, rt0.c0 FROM t0, rt0 WHERE (rt0.c0) GROUP BY rt0.c1, t0.c0, rt0.c3, rt0.c0 UNION SELECT rt0.c1, t0.c0, rt0.c3, rt0.c0 FROM t0, rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c1, t0.c0, rt0.c3, rt0.c0 UNION SELECT rt0.c1, t0.c0, rt0.c3, rt0.c0 FROM t0, rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c1, t0.c0, rt0.c3, rt0.c0;
SELECT rt0.c1, t0.c0, rt0.c3, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c3, rt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING NULL UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((NULL) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING NULL UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((NULL) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, t1;
SELECT rt0.c1, rt0.c0 FROM rt0, t1 WHERE (CAST(0.22319082254872047 AS REAL)) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0, t1 WHERE ((NOT (CAST(0.22319082254872047 AS REAL)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0, t1 WHERE (((CAST(0.22319082254872047 AS REAL)) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0, t1;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE (x'3184') UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (x'3184'))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE (((x'3184') ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL t0.c0, t1.c0, rt0.c0, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON json_remove(json_type(rt0.c3), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) FULL OUTER JOIN t1 ON load_extension((t1.c0 IN ()), ((rt0.c1)<=(t1.c0))) GROUP BY t0.c0, t1.c0, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING (((rt0.c2)AND(SUM(rt0.c1))) IN (GROUP_CONCAT(TOTAL(MAX(TOTAL(SUM(rt0.c2))))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT ((((rt0.c2)AND(SUM(rt0.c1))) IN (GROUP_CONCAT(TOTAL(MAX(TOTAL(SUM(rt0.c2))))))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING (((((rt0.c2)AND(SUM(rt0.c1))) IN (GROUP_CONCAT(TOTAL(MAX(TOTAL(SUM(rt0.c2)))))))) ISNULL);
SELECT * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE (((((((((rt0.c1)OR(((rt0.c3) NOT BETWEEN (rt0.c2) AND (t0.c0)))))AND(CAST(rt0.c1 AS REAL))))OR(0.2610611768976854)))AND((((rt0.c0, rt0.c2, rt0.c3))>=((x'0ef2', t0.c0, rt0.c1)))))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((NOT (((((((((rt0.c1)OR(((rt0.c3) NOT BETWEEN (rt0.c2) AND (t0.c0)))))AND(CAST(rt0.c1 AS REAL))))OR(0.2610611768976854)))AND((((rt0.c0, rt0.c2, rt0.c3))>=((x'0ef2', t0.c0, rt0.c1)))))))) UNION ALL SELECT * FROM rt0, t0 WHERE (((((((((((rt0.c1)OR(((rt0.c3) NOT BETWEEN (rt0.c2) AND (t0.c0)))))AND(CAST(rt0.c1 AS REAL))))OR(0.2610611768976854)))AND((((rt0.c0, rt0.c2, rt0.c3))>=((x'0ef2', t0.c0, rt0.c1)))))) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((((((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))AND(TOTAL_CHANGES())))OR(((((t1.c0)OR(t1.c0)))AND(t1.c0)))))AND('*y')))OR(((((t1.c0)OR(t1.c0)))OR(t1.c0))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((((((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))AND(TOTAL_CHANGES())))OR(((((t1.c0)OR(t1.c0)))AND(t1.c0)))))AND('*y')))OR(((((t1.c0)OR(t1.c0)))OR(t1.c0))))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((((((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))AND(TOTAL_CHANGES())))OR(((((t1.c0)OR(t1.c0)))AND(t1.c0)))))AND('*y')))OR(((((t1.c0)OR(t1.c0)))OR(t1.c0))))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t1.c0, rt0.c2, rt0.c1, t0.c0 FROM t0, t1, rt0 GROUP BY t1.c0, rt0.c2, rt0.c1, t0.c0;
SELECT ALL t1.c0, rt0.c2, rt0.c1, t0.c0 FROM t0, t1, rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND (((rt0.c0 IN ()))))) GROUP BY t1.c0, rt0.c2, rt0.c1, t0.c0 UNION SELECT ALL t1.c0, rt0.c2, rt0.c1, t0.c0 FROM t0, t1, rt0 WHERE ((NOT ((((rt0.c3)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND (((rt0.c0 IN ()))))))) GROUP BY t1.c0, rt0.c2, rt0.c1, t0.c0 UNION SELECT t1.c0, rt0.c2, rt0.c1, t0.c0 FROM t0, t1, rt0 WHERE ((((((rt0.c3)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND (((rt0.c0 IN ()))))) ISNULL)) GROUP BY t1.c0, rt0.c2, rt0.c1, t0.c0;
SELECT t1.c0, rt0.c2, rt0.c1, t0.c0 FROM t0, t1, rt0 GROUP BY t1.c0, rt0.c2, rt0.c1, t0.c0;
SELECT rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c3;
SELECT rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c3 HAVING ((TOTAL(rt0.c0) COLLATE BINARY)&(MIN(rt0.c2))) UNION ALL SELECT ALL rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c3 HAVING (NOT (((TOTAL(rt0.c0) COLLATE BINARY)&(MIN(rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c3 HAVING ((((TOTAL(rt0.c0) COLLATE BINARY)&(MIN(rt0.c2)))) ISNULL);
SELECT rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c3;
SELECT rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c3 HAVING ((TOTAL(rt0.c0) COLLATE BINARY)&(MIN(rt0.c2))) UNION ALL SELECT ALL rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c3 HAVING (NOT (((TOTAL(rt0.c0) COLLATE BINARY)&(MIN(rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c3 HAVING ((((TOTAL(rt0.c0) COLLATE BINARY)&(MIN(rt0.c2)))) ISNULL);
SELECT rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c3;
SELECT ALL * FROM t1, t0 NOT INDEXED, rt0;
SELECT * FROM t1 NOT INDEXED, t0, rt0 WHERE ((~ (((t0.c0) BETWEEN (rt0.c0) AND (t1.c0))))) UNION ALL SELECT ALL * FROM t1, t0, rt0 WHERE ((NOT ((~ (((t0.c0) BETWEEN (rt0.c0) AND (t1.c0))))))) UNION ALL SELECT * FROM t1, t0, rt0 WHERE ((((~ (((t0.c0) BETWEEN (rt0.c0) AND (t1.c0))))) ISNULL));
SELECT ALL * FROM t1, t0 NOT INDEXED, rt0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN t0 ON ((NULL)GLOB(0.13904250994143963));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN t0 ON ((NULL)GLOB(0.13904250994143963)) WHERE (CASE ('5L8	5' IN (rt0.c3, rt0.c1))  WHEN rt0.c1 COLLATE BINARY THEN json(rt0.c1) WHEN ((rt0.c2)GLOB(rt0.c2)) THEN (NOT (rt0.c2)) WHEN x'1ab0' THEN (- (rt0.c2)) END) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN t0 ON ((NULL)GLOB(0.13904250994143963)) WHERE ((NOT (CASE ('5L8	5' IN (rt0.c3, rt0.c1))  WHEN rt0.c1 COLLATE BINARY THEN json(rt0.c1) WHEN ((rt0.c2)GLOB(rt0.c2)) THEN (NOT (rt0.c2)) WHEN x'1ab0' THEN (- (rt0.c2)) END))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN t0 ON ((NULL)GLOB(0.13904250994143963)) WHERE (((CASE ('5L8	5' IN (rt0.c3, rt0.c1))  WHEN rt0.c1 COLLATE BINARY THEN json(rt0.c1) WHEN ((rt0.c2)GLOB(rt0.c2)) THEN (NOT (rt0.c2)) WHEN x'1ab0' THEN (- (rt0.c2)) END) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN t0 ON ((NULL)GLOB(0.13904250994143963));
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t1, t0 WHERE ((~ (t0.c0))) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t1, t0 WHERE ((NOT ((~ (t0.c0))))) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t1, t0 WHERE ((((~ (t0.c0))) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING ((HEX(DISTINCT NULL)) IS TRUE) UNION ALL SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING (NOT (((HEX(DISTINCT NULL)) IS TRUE))) UNION ALL SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING ((((HEX(DISTINCT NULL)) IS TRUE)) ISNULL);
SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING ((HEX(DISTINCT NULL)) IS TRUE) UNION ALL SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING (NOT (((HEX(DISTINCT NULL)) IS TRUE))) UNION ALL SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING ((((HEX(DISTINCT NULL)) IS TRUE)) ISNULL);
SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT SUM(((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(((rt0.c3) ISNULL)))) FROM t1, rt0 ORDER BY (NOT ((((rt0.c1, rt0.c1, rt0.c3)) BETWEEN ((NULL, rt0.c2, rt0.c3)) AND ((rt0.c0, rt0.c2, t1.c0))))) ASC;
SELECT ALL * FROM t1, t0;
SELECT ALL * FROM t1, t0 WHERE (x'a9c3') UNION ALL SELECT * FROM t1, t0 WHERE ((NOT (x'a9c3'))) UNION ALL SELECT ALL * FROM t1, t0 WHERE (((x'a9c3') ISNULL));
SELECT ALL * FROM t1, t0;
SELECT DISTINCT * FROM t0, rt0, t1;
SELECT DISTINCT * FROM t0, rt0, t1 WHERE (((CAST(t1.c0 AS INTEGER))||(CAST(rt0.c1 AS NUMERIC)))) UNION SELECT DISTINCT * FROM t0, rt0, t1 WHERE ((NOT (((CAST(t1.c0 AS INTEGER))||(CAST(rt0.c1 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM t0, rt0, t1 WHERE (((((CAST(t1.c0 AS INTEGER))||(CAST(rt0.c1 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM t0, rt0, t1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((((((((- (t0.c0)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))))OR(((t0.c0) NOTNULL))))AND(((t0.c0) IS FALSE)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((((((((- (t0.c0)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))))OR(((t0.c0) NOTNULL))))AND(((t0.c0) IS FALSE)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((((((((- (t0.c0)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))))OR(((t0.c0) NOTNULL))))AND(((t0.c0) IS FALSE)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c3 FROM t1, t0, rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM t1, t0, rt0 GROUP BY rt0.c3 HAVING COUNT(SUM(rt0.c0)) UNION ALL SELECT ALL rt0.c3 FROM t1, t0, rt0 GROUP BY rt0.c3 HAVING (NOT (COUNT(SUM(rt0.c0)))) UNION ALL SELECT ALL rt0.c3 FROM t1, t0, rt0 GROUP BY rt0.c3 HAVING ((COUNT(SUM(rt0.c0))) ISNULL);
SELECT * FROM t0 NOT INDEXED, rt0 RIGHT OUTER JOIN t1 ON rt0.c0;
SELECT ALL * FROM t0, rt0 RIGHT OUTER JOIN t1 ON rt0.c0 WHERE (CASE WHEN CAST(rt0.c3 AS INTEGER) THEN CASE t1.c0  WHEN rt0.c3 THEN '' WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN t0.c0 THEN rt0.c0 WHEN rt0.c3 THEN t0.c0 END ELSE LIKE(rt0.c1, rt0.c0, 'h') END) UNION ALL SELECT * FROM t0, rt0 RIGHT OUTER JOIN t1 ON rt0.c0 WHERE ((NOT (CASE WHEN CAST(rt0.c3 AS INTEGER) THEN CASE t1.c0  WHEN rt0.c3 THEN '' WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN t0.c0 THEN rt0.c0 WHEN rt0.c3 THEN t0.c0 END ELSE LIKE(rt0.c1, rt0.c0, 'h') END))) UNION ALL SELECT ALL * FROM t0, rt0 RIGHT OUTER JOIN t1 ON rt0.c0 WHERE (((CASE WHEN CAST(rt0.c3 AS INTEGER) THEN CASE t1.c0  WHEN rt0.c3 THEN '' WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN t0.c0 THEN rt0.c0 WHEN rt0.c3 THEN t0.c0 END ELSE LIKE(rt0.c1, rt0.c0, 'h') END) ISNULL));
SELECT * FROM t0 NOT INDEXED, rt0 RIGHT OUTER JOIN t1 ON rt0.c0;
SELECT DISTINCT t0.c0, t1.c0 FROM t0 LEFT OUTER JOIN t1 ON CASE WHEN ((t0.c0) NOT NULL) THEN ((t0.c0)*(t1.c0)) END;
SELECT DISTINCT t0.c0, t1.c0 FROM t0 LEFT OUTER JOIN t1 ON CASE WHEN ((t0.c0) NOT NULL) THEN ((t0.c0)*(t1.c0)) END WHERE (TIME((x'0bdd' IN (0.7105645943977295)), ((t0.c0)<(t1.c0)), ((t0.c0)>=(t1.c0)))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t0 LEFT OUTER JOIN t1 ON CASE WHEN ((t0.c0) NOT NULL) THEN ((t0.c0)*(t1.c0)) END WHERE ((NOT (TIME((x'0bdd' IN (0.7105645943977295)), ((t0.c0)<(t1.c0)), ((t0.c0)>=(t1.c0)))))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t0 LEFT OUTER JOIN t1 ON CASE WHEN ((t0.c0) NOT NULL) THEN ((t0.c0)*(t1.c0)) END WHERE (((TIME((x'0bdd' IN (0.7105645943977295)), ((t0.c0)<(t1.c0)), ((t0.c0)>=(t1.c0)))) ISNULL));
SELECT DISTINCT t0.c0, t1.c0 FROM t0 LEFT OUTER JOIN t1 ON CASE WHEN ((t0.c0) NOT NULL) THEN ((t0.c0)*(t1.c0)) END;
SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t0, t1 WHERE (((CASE t1.c0  WHEN t1.c0 THEN t0.c0 END) NOT BETWEEN (t0.c0) AND (CAST('-558105752' AS INTEGER)))) GROUP BY t1.c0, t0.c0 UNION SELECT ALL t1.c0, t0.c0 FROM t0, t1 WHERE ((NOT (((CASE t1.c0  WHEN t1.c0 THEN t0.c0 END) NOT BETWEEN (t0.c0) AND (CAST('-558105752' AS INTEGER)))))) GROUP BY t1.c0, t0.c0 UNION SELECT ALL t1.c0, t0.c0 FROM t0, t1 WHERE (((((CASE t1.c0  WHEN t1.c0 THEN t0.c0 END) NOT BETWEEN (t0.c0) AND (CAST('-558105752' AS INTEGER)))) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT rt0.c3, rt0.c2, rt0.c1, t0.c0 FROM t0 INNER JOIN rt0 ON json_type((rt0.c2 IN (rt0.c0))) GROUP BY rt0.c3, rt0.c2, rt0.c1, t0.c0;
SELECT rt0.c3, rt0.c2, rt0.c1, t0.c0 FROM t0 NOT INDEXED INNER JOIN rt0 ON json_type((rt0.c2 IN (rt0.c0))) GROUP BY rt0.c3, rt0.c2, rt0.c1, t0.c0 HAVING ((COUNT(rt0.c3)) NOT NULL) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1, t0.c0 FROM t0 INNER JOIN rt0 ON json_type((rt0.c2 IN (rt0.c0))) GROUP BY rt0.c3, rt0.c2, rt0.c1, t0.c0 HAVING (NOT (((COUNT(rt0.c3)) NOT NULL))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1, t0.c0 FROM t0 INNER JOIN rt0 ON json_type((rt0.c2 IN (rt0.c0))) GROUP BY rt0.c3, rt0.c2, rt0.c1, t0.c0 HAVING ((((COUNT(rt0.c3)) NOT NULL)) ISNULL);
SELECT rt0.c3, rt0.c2, rt0.c1, t0.c0 FROM t0 INNER JOIN rt0 ON json_type((rt0.c2 IN (rt0.c0))) GROUP BY rt0.c3, rt0.c2, rt0.c1, t0.c0;
SELECT rt0.c3, rt0.c2, rt0.c1, t0.c0 FROM t0 NOT INDEXED INNER JOIN rt0 ON json_type((rt0.c2 IN (rt0.c0))) GROUP BY rt0.c3, rt0.c2, rt0.c1, t0.c0 HAVING ((COUNT(rt0.c3)) NOT NULL) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1, t0.c0 FROM t0 INNER JOIN rt0 ON json_type((rt0.c2 IN (rt0.c0))) GROUP BY rt0.c3, rt0.c2, rt0.c1, t0.c0 HAVING (NOT (((COUNT(rt0.c3)) NOT NULL))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1, t0.c0 FROM t0 INNER JOIN rt0 ON json_type((rt0.c2 IN (rt0.c0))) GROUP BY rt0.c3, rt0.c2, rt0.c1, t0.c0 HAVING ((((COUNT(rt0.c3)) NOT NULL)) ISNULL);
SELECT rt0.c3, rt0.c2, rt0.c1, t0.c0 FROM t0 INNER JOIN rt0 ON json_type((rt0.c2 IN (rt0.c0))) GROUP BY rt0.c3, rt0.c2, rt0.c1, t0.c0;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((NULL COLLATE RTRIM) BETWEEN (0.6563907000007655 COLLATE RTRIM) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((NULL COLLATE RTRIM) BETWEEN (0.6563907000007655 COLLATE RTRIM) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((((NULL COLLATE RTRIM) BETWEEN (0.6563907000007655 COLLATE RTRIM) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM rt0, t0, t1;
SELECT DISTINCT * FROM rt0, t0, t1 WHERE (((((((((((((((rt0.c2) ISNULL))AND((~ (rt0.c3)))))OR(CASE t1.c0  WHEN t1.c0 THEN rt0.c3 WHEN rt0.c3 THEN t0.c0 WHEN rt0.c2 THEN '(	a3''y' END)))AND(((t0.c0)IS(rt0.c0)))))OR(x'')))AND(rt0.c1)))AND(((rt0.c3) ISNULL)))) UNION SELECT DISTINCT * FROM rt0, t0, t1 WHERE ((NOT (((((((((((((((rt0.c2) ISNULL))AND((~ (rt0.c3)))))OR(CASE t1.c0  WHEN t1.c0 THEN rt0.c3 WHEN rt0.c3 THEN t0.c0 WHEN rt0.c2 THEN '(	a3''y' END)))AND(((t0.c0)IS(rt0.c0)))))OR(x'')))AND(rt0.c1)))AND(((rt0.c3) ISNULL)))))) UNION SELECT DISTINCT * FROM rt0, t0, t1 WHERE (((((((((((((((((rt0.c2) ISNULL))AND((~ (rt0.c3)))))OR(CASE t1.c0  WHEN t1.c0 THEN rt0.c3 WHEN rt0.c3 THEN t0.c0 WHEN rt0.c2 THEN '(	a3''y' END)))AND(((t0.c0)IS(rt0.c0)))))OR(x'')))AND(rt0.c1)))AND(((rt0.c3) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM rt0, t0, t1;
SELECT ALL rt0.c0 FROM rt0, t1, t0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, t1, t0 WHERE ((t1.c0 COLLATE NOCASE IN (CASE t1.c0  WHEN rt0.c3 THEN t1.c0 END))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, t1, t0 WHERE ((NOT ((t1.c0 COLLATE NOCASE IN (CASE t1.c0  WHEN rt0.c3 THEN t1.c0 END))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, t1, t0 WHERE ((((t1.c0 COLLATE NOCASE IN (CASE t1.c0  WHEN rt0.c3 THEN t1.c0 END))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, t1, t0 GROUP BY rt0.c0;
SELECT ALL t0.c0 FROM t0, rt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, rt0 GROUP BY t0.c0 HAVING ((TOTAL(COUNT(MAX(rt0.c2)))) NOT BETWEEN (GROUP_CONCAT(rt0.c1)) AND (GROUP_CONCAT(COUNT(rt0.c3)))) UNION ALL SELECT ALL t0.c0 FROM t0, rt0 GROUP BY t0.c0 HAVING (NOT (((TOTAL(COUNT(MAX(rt0.c2)))) NOT BETWEEN (GROUP_CONCAT(rt0.c1)) AND (GROUP_CONCAT(COUNT(rt0.c3)))))) UNION ALL SELECT ALL t0.c0 FROM t0, rt0 GROUP BY t0.c0 HAVING ((((TOTAL(COUNT(MAX(rt0.c2)))) NOT BETWEEN (GROUP_CONCAT(rt0.c1)) AND (GROUP_CONCAT(COUNT(rt0.c3))))) ISNULL);
SELECT * FROM rt0, t1;
SELECT ALL * FROM rt0, t1 WHERE (rt0.c1) UNION ALL SELECT ALL * FROM rt0, t1 WHERE ((NOT (rt0.c1))) UNION ALL SELECT * FROM rt0, t1 WHERE (((rt0.c1) ISNULL));
SELECT * FROM rt0, t1;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t0 WHERE (CASE ((t1.c0) IS FALSE)  WHEN (- (t1.c0)) THEN (((t1.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t1.c0)) AND ((t1.c0, t0.c0, t0.c0))) ELSE (((t0.c0, t0.c0, t1.c0))=((t0.c0, t1.c0, t0.c0))) END) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1, t0 WHERE ((NOT (CASE ((t1.c0) IS FALSE)  WHEN (- (t1.c0)) THEN (((t1.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t1.c0)) AND ((t1.c0, t0.c0, t0.c0))) ELSE (((t0.c0, t0.c0, t1.c0))=((t0.c0, t1.c0, t0.c0))) END))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1, t0 WHERE (((CASE ((t1.c0) IS FALSE)  WHEN (- (t1.c0)) THEN (((t1.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t1.c0)) AND ((t1.c0, t0.c0, t0.c0))) ELSE (((t0.c0, t0.c0, t1.c0))=((t0.c0, t1.c0, t0.c0))) END) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (- (LOWER(DISTINCT GROUP_CONCAT(t1.c0)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((- (LOWER(DISTINCT GROUP_CONCAT(t1.c0)))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((- (LOWER(DISTINCT GROUP_CONCAT(t1.c0))))) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (- (LOWER(DISTINCT GROUP_CONCAT(t1.c0)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((- (LOWER(DISTINCT GROUP_CONCAT(t1.c0)))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((- (LOWER(DISTINCT GROUP_CONCAT(t1.c0))))) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL SUM((('M') ISNULL)) FROM t1, rt0, t0 ORDER BY ((((((t0.c0)AND(t0.c0)))AND(rt0.c2))) NOT BETWEEN ((rt0.c2 IN (t1.c0))) AND (((0.09444784110037185) BETWEEN (rt0.c1) AND (NULL)))), CASE ((rt0.c1)AND(t1.c0))  WHEN CASE WHEN t1.c0 THEN t0.c0 ELSE t0.c0 END THEN ((rt0.c1) BETWEEN (t1.c0) AND (t1.c0)) ELSE ((rt0.c1) NOT BETWEEN (rt0.c1) AND ('e')) END, (((rt0.c2, 0.15682293010953618, rt0.c3)) NOT BETWEEN ((((t0.c0)==(rt0.c1)), (('-1361052779')GLOB(rt0.c2)), ((t1.c0)<<(t0.c0)))) AND (((('F<1BN')/(t0.c0)), ((((((((rt0.c1)OR(t0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)), ((rt0.c1)<>(rt0.c2)))))  NULLS LAST;
SELECT rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((rt0.c1)%(rt0.c0)) IN ())) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1)%(rt0.c0)) IN ())))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((((((rt0.c1)%(rt0.c0)) IN ())) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, t0.c0, rt0.c2, t1.c0 FROM t0, t1, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, t0.c0, rt0.c2, t1.c0 FROM t0, t1, rt0 WHERE (NULL) UNION SELECT DISTINCT rt0.c0, rt0.c1, t0.c0, rt0.c2, t1.c0 FROM t0, t1, rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c0, rt0.c1, t0.c0, rt0.c2, t1.c0 FROM t0, t1, rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, t0.c0, rt0.c2, t1.c0 FROM t0, t1, rt0;
SELECT ALL rt0.c3, rt0.c0 FROM rt0, t0 GROUP BY rt0.c3, rt0.c0;
SELECT rt0.c3, rt0.c0 FROM rt0, t0 WHERE ((((t0.c0)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c1) AND (t0.c0)))) AND ((LOWER(DISTINCT rt0.c3))))) GROUP BY rt0.c3, rt0.c0 UNION SELECT rt0.c3, rt0.c0 FROM rt0, t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c1) AND (t0.c0)))) AND ((LOWER(DISTINCT rt0.c3))))))) GROUP BY rt0.c3, rt0.c0 UNION SELECT rt0.c3, rt0.c0 FROM rt0, t0 WHERE ((((((t0.c0)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c1) AND (t0.c0)))) AND ((LOWER(DISTINCT rt0.c3))))) ISNULL)) GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM rt0, t0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c0 FROM t1, t0 FULL OUTER JOIN rt0 ON (((rt0.c1 IN ())) NOT NULL) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM t1, t0 FULL OUTER JOIN rt0 ON (((rt0.c1 IN ())) NOT NULL) GROUP BY rt0.c0 HAVING TOTAL(TOTAL(MIN(rt0.c0))) UNION ALL SELECT ALL rt0.c0 FROM t1, t0 FULL OUTER JOIN rt0 ON (((rt0.c1 IN ())) NOT NULL) GROUP BY rt0.c0 HAVING (NOT (TOTAL(TOTAL(MIN(rt0.c0))))) UNION ALL SELECT ALL rt0.c0 FROM t1, t0 FULL OUTER JOIN rt0 ON (((rt0.c1 IN ())) NOT NULL) GROUP BY rt0.c0 HAVING ((TOTAL(TOTAL(MIN(rt0.c0)))) ISNULL);
SELECT ALL rt0.c2 FROM t1, rt0;
SELECT rt0.c2 FROM t1, rt0 WHERE ((~ (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))) UNION ALL SELECT ALL rt0.c2 FROM t1, rt0 WHERE ((NOT ((~ (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))))) UNION ALL SELECT rt0.c2 FROM t1, rt0 WHERE ((((~ (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))) ISNULL));
SELECT ALL rt0.c2 FROM t1, rt0;
SELECT DISTINCT * FROM t0, rt0 RIGHT OUTER JOIN t1 ON ((CASE WHEN rt0.c2 THEN '2064073878' WHEN t1.c0 THEN t1.c0 WHEN rt0.c1 THEN rt0.c2 END)>=(COALESCE(t1.c0, rt0.c3, rt0.c2, t1.c0)));
SELECT DISTINCT * FROM t0, rt0 RIGHT OUTER JOIN t1 ON ((CASE WHEN rt0.c2 THEN '2064073878' WHEN t1.c0 THEN t1.c0 WHEN rt0.c1 THEN rt0.c2 END)>=(COALESCE(t1.c0, rt0.c3, rt0.c2, t1.c0))) WHERE (CAST((- (t1.c0)) AS REAL)) UNION SELECT DISTINCT * FROM t0, rt0 RIGHT OUTER JOIN t1 ON ((CASE WHEN rt0.c2 THEN '2064073878' WHEN t1.c0 THEN t1.c0 WHEN rt0.c1 THEN rt0.c2 END)>=(COALESCE(t1.c0, rt0.c3, rt0.c2, t1.c0))) WHERE ((NOT (CAST((- (t1.c0)) AS REAL)))) UNION SELECT DISTINCT * FROM t0, rt0 RIGHT OUTER JOIN t1 ON ((CASE WHEN rt0.c2 THEN '2064073878' WHEN t1.c0 THEN t1.c0 WHEN rt0.c1 THEN rt0.c2 END)>=(COALESCE(t1.c0, rt0.c3, rt0.c2, t1.c0))) WHERE (((CAST((- (t1.c0)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM t0, rt0 RIGHT OUTER JOIN t1 ON ((CASE WHEN rt0.c2 THEN '2064073878' WHEN t1.c0 THEN t1.c0 WHEN rt0.c1 THEN rt0.c2 END)>=(COALESCE(t1.c0, rt0.c3, rt0.c2, t1.c0)));
SELECT ALL t1.c0 FROM t1 INDEXED BY i57 GROUP BY t1.c0;
SELECT rt0.c2, rt0.c3 FROM t0, t1, rt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM t0, t1, rt0 GROUP BY rt0.c2, rt0.c3 HAVING COUNT(COUNT(TOTAL(rt0.c1))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM t0, t1, rt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT (COUNT(COUNT(TOTAL(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM t0, t1, rt0 GROUP BY rt0.c2, rt0.c3 HAVING ((COUNT(COUNT(TOTAL(rt0.c1)))) ISNULL);
SELECT SUM(CASE WHEN (((rt0.c3))>=((rt0.c0))) THEN rt0.c2 WHEN ((rt0.c3) BETWEEN (rt0.c0) AND ('890582969')) THEN '0B' WHEN ((rt0.c0)/(rt0.c2)) THEN 0.5518897483423838 END) FROM rt0 ORDER BY ((rt0.c2)<=(rt0.c1)) COLLATE RTRIM ASC;
SELECT * FROM t1, t0, rt0;
SELECT * FROM t1, t0, rt0 WHERE (CASE (rt0.c3 IN (rt0.c2, rt0.c2))  WHEN ((t1.c0)<=(rt0.c1)) THEN ((x'')<<(-445533062)) END) UNION ALL SELECT ALL * FROM t1, t0, rt0 WHERE ((NOT (CASE (rt0.c3 IN (rt0.c2, rt0.c2))  WHEN ((t1.c0)<=(rt0.c1)) THEN ((x'')<<(-445533062)) END))) UNION ALL SELECT * FROM t1, t0, rt0 WHERE (((CASE (rt0.c3 IN (rt0.c2, rt0.c2))  WHEN ((t1.c0)<=(rt0.c1)) THEN ((x'')<<(-445533062)) END) ISNULL));
SELECT * FROM t1, t0, rt0;
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE (((0.723636436256311 COLLATE RTRIM)+(CASE WHEN rt0.c3 THEN rt0.c1 END))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT (((0.723636436256311 COLLATE RTRIM)+(CASE WHEN rt0.c3 THEN rt0.c1 END))))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE (((((0.723636436256311 COLLATE RTRIM)+(CASE WHEN rt0.c3 THEN rt0.c1 END))) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c0, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c0, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3;
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, t1.c0 FROM t0, t1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, t1.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0, t1.c0 FROM t0 NOT INDEXED, t1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, t1.c0 HAVING AVG(GROUP_CONCAT(t0.c0)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, t1.c0 FROM t0, t1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, t1.c0 HAVING (NOT (AVG(GROUP_CONCAT(t0.c0)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, t1.c0 FROM t0, t1, rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, t1.c0 HAVING ((AVG(GROUP_CONCAT(t0.c0))) ISNULL);
SELECT * FROM t1 FULL OUTER JOIN t0 ON (((('N9ju%') BETWEEN (t0.c0) AND (t1.c0)))GLOB(((((t1.c0)AND(t1.c0)))OR(t1.c0))));
SELECT * FROM t1 FULL OUTER JOIN t0 ON (((('N9ju%') BETWEEN (t0.c0) AND (t1.c0)))GLOB(((((t1.c0)AND(t1.c0)))OR(t1.c0)))) WHERE (CAST(((t0.c0) IS FALSE) AS TEXT)) UNION ALL SELECT ALL * FROM t1 FULL OUTER JOIN t0 ON (((('N9ju%') BETWEEN (t0.c0) AND (t1.c0)))GLOB(((((t1.c0)AND(t1.c0)))OR(t1.c0)))) WHERE ((NOT (CAST(((t0.c0) IS FALSE) AS TEXT)))) UNION ALL SELECT * FROM t1 FULL OUTER JOIN t0 ON (((('N9ju%') BETWEEN (t0.c0) AND (t1.c0)))GLOB(((((t1.c0)AND(t1.c0)))OR(t1.c0)))) WHERE (((CAST(((t0.c0) IS FALSE) AS TEXT)) ISNULL));
SELECT * FROM t1 FULL OUTER JOIN t0 ON (((('N9ju%') BETWEEN (t0.c0) AND (t1.c0)))GLOB(((((t1.c0)AND(t1.c0)))OR(t1.c0))));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST((('-2013232699')OR(rt0.c1)) AS NUMERIC)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST((('-2013232699')OR(rt0.c1)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST((('-2013232699')OR(rt0.c1)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 NATURAL JOIN t1 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 NATURAL JOIN t1 WHERE ((((rt0.c1)IS(rt0.c0)) IN ())) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM t0, rt0 NATURAL JOIN t1 WHERE ((NOT ((((rt0.c1)IS(rt0.c0)) IN ())))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 NATURAL JOIN t1 WHERE ((((((rt0.c1)IS(rt0.c0)) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 NATURAL JOIN t1 GROUP BY rt0.c2, rt0.c1;
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING AVG(GROUP_CONCAT(MAX(MIN(MAX(COUNT(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING (NOT (AVG(GROUP_CONCAT(MAX(MIN(MAX(COUNT(t0.c0)))))))) UNION ALL SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING ((AVG(GROUP_CONCAT(MAX(MIN(MAX(COUNT(t0.c0))))))) ISNULL);
SELECT ALL * FROM t1, rt0, t0;
SELECT * FROM t1, rt0, t0 WHERE (CHAR(((rt0.c0)&(rt0.c0)))) UNION ALL SELECT ALL * FROM t1, rt0, t0 WHERE ((NOT (CHAR(((rt0.c0)&(rt0.c0)))))) UNION ALL SELECT * FROM t1, rt0, t0 WHERE (((CHAR(((rt0.c0)&(rt0.c0)))) ISNULL));
SELECT ALL * FROM t1, rt0, t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (x'') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT t0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c3, rt0.c1;
SELECT t0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0, t0 WHERE (((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2))) NOT BETWEEN (HEX(-1.241159694E9)) AND ((+ (t0.c0))))) GROUP BY t0.c0, rt0.c2, rt0.c3, rt0.c1 UNION SELECT t0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0, t0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2))) NOT BETWEEN (HEX(-1.241159694E9)) AND ((+ (t0.c0))))))) GROUP BY t0.c0, rt0.c2, rt0.c3, rt0.c1 UNION SELECT ALL t0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0, t0 WHERE (((((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2))) NOT BETWEEN (HEX(-1.241159694E9)) AND ((+ (t0.c0))))) ISNULL)) GROUP BY t0.c0, rt0.c2, rt0.c3, rt0.c1;
SELECT t0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c3, rt0.c1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((GROUP_CONCAT(TOTAL(COUNT(*))))>=(COUNT(MAX(COUNT(*))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((GROUP_CONCAT(TOTAL(COUNT(*))))>=(COUNT(MAX(COUNT(*))))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((GROUP_CONCAT(TOTAL(COUNT(*))))>=(COUNT(MAX(COUNT(*)))))) ISNULL);
SELECT t0.c0, t1.c0 FROM t1, t0;
SELECT ALL t0.c0, t1.c0 FROM t1, t0 WHERE ((~ (NULLIF(t1.c0, t1.c0)))) ORDER BY x'a19fd481'  NULLS FIRST;
SELECT t0.c0, t1.c0 FROM t1, t0 WHERE ((NOT ((~ (NULLIF(t1.c0, t1.c0)))))) ORDER BY x'a19fd481'  NULLS FIRST;
SELECT t0.c0, t1.c0 FROM t1, t0 WHERE ((((~ (NULLIF(t1.c0, t1.c0)))) ISNULL)) ORDER BY x'a19fd481'  NULLS FIRST;
SELECT t0.c0, t1.c0 FROM t1, t0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((((t1.c0, '', t1.c0)) NOT BETWEEN ((((t1.c0)LIKE(t1.c0)), CASE WHEN '' THEN t1.c0 END, json_extract(t1.c0, t1.c0))) AND ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), (('-445533062')>(t1.c0)), t1.c0)))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((((t1.c0, '', t1.c0)) NOT BETWEEN ((((t1.c0)LIKE(t1.c0)), CASE WHEN '' THEN t1.c0 END, json_extract(t1.c0, t1.c0))) AND ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), (('-445533062')>(t1.c0)), t1.c0)))))) UNION SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0, '', t1.c0)) NOT BETWEEN ((((t1.c0)LIKE(t1.c0)), CASE WHEN '' THEN t1.c0 END, json_extract(t1.c0, t1.c0))) AND ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), (('-445533062')>(t1.c0)), t1.c0)))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE ((((t1.c0 IN ()))<((t1.c0 IN ())))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT ((((t1.c0 IN ()))<((t1.c0 IN ())))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((((((t1.c0 IN ()))<((t1.c0 IN ())))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0, t1 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0, t1 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING MIN(MAX(t0.c0)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0, t1 NOT INDEXED GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (MIN(MAX(t0.c0)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0, t1 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((MIN(MAX(t0.c0))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c3)))OR(rt0.c1))) NOT BETWEEN ((rt0.c3 IN ())) AND (CASE WHEN rt0.c1 THEN rt0.c1 END))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((rt0.c2)AND(rt0.c3)))OR(rt0.c1))) NOT BETWEEN ((rt0.c3 IN ())) AND (CASE WHEN rt0.c1 THEN rt0.c1 END))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((rt0.c2)AND(rt0.c3)))OR(rt0.c1))) NOT BETWEEN ((rt0.c3 IN ())) AND (CASE WHEN rt0.c1 THEN rt0.c1 END))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1 FROM t1 FULL OUTER JOIN rt0 ON (((((((rt0.c2, rt0.c1, t1.c0))<=((rt0.c3, rt0.c0, rt0.c2))))AND(rt0.c3)))OR(((rt0.c3)GLOB(rt0.c1))));
SELECT DISTINCT rt0.c1 FROM t1 FULL OUTER JOIN rt0 ON (((((((rt0.c2, rt0.c1, t1.c0))<=((rt0.c3, rt0.c0, rt0.c2))))AND(rt0.c3)))OR(((rt0.c3)GLOB(rt0.c1)))) WHERE (((((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c0))) BETWEEN (CAST(rt0.c3 AS REAL)) AND (((rt0.c2)%(rt0.c2))))) UNION SELECT DISTINCT rt0.c1 FROM t1 FULL OUTER JOIN rt0 ON (((((((rt0.c2, rt0.c1, t1.c0))<=((rt0.c3, rt0.c0, rt0.c2))))AND(rt0.c3)))OR(((rt0.c3)GLOB(rt0.c1)))) WHERE ((NOT (((((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c0))) BETWEEN (CAST(rt0.c3 AS REAL)) AND (((rt0.c2)%(rt0.c2))))))) UNION SELECT DISTINCT rt0.c1 FROM t1 FULL OUTER JOIN rt0 ON (((((((rt0.c2, rt0.c1, t1.c0))<=((rt0.c3, rt0.c0, rt0.c2))))AND(rt0.c3)))OR(((rt0.c3)GLOB(rt0.c1)))) WHERE (((((((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c0))) BETWEEN (CAST(rt0.c3 AS REAL)) AND (((rt0.c2)%(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM t1 FULL OUTER JOIN rt0 ON (((((((rt0.c2, rt0.c1, t1.c0))<=((rt0.c3, rt0.c0, rt0.c2))))AND(rt0.c3)))OR(((rt0.c3)GLOB(rt0.c1))));
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (CAST(((rt0.c2) IS FALSE) AS REAL)) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST(((rt0.c2) IS FALSE) AS REAL)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(((rt0.c2) IS FALSE) AS REAL)) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c0, t1.c0, t0.c0 FROM t0 NOT INDEXED, t1, rt0 GROUP BY rt0.c3, rt0.c0, t1.c0, t0.c0;
SELECT rt0.c3, rt0.c0, t1.c0, t0.c0 FROM t0, t1, rt0 GROUP BY rt0.c3, rt0.c0, t1.c0, t0.c0 HAVING (((((NOT (rt0.c3)))OR(MIN(GROUP_CONCAT(GROUP_CONCAT(rt0.c3))))))OR(GROUP_CONCAT(GROUP_CONCAT(rt0.c3)))) UNION ALL SELECT ALL rt0.c3, rt0.c0, t1.c0, t0.c0 FROM t0, t1, rt0 GROUP BY rt0.c3, rt0.c0, t1.c0, t0.c0 HAVING (NOT ((((((NOT (rt0.c3)))OR(MIN(GROUP_CONCAT(GROUP_CONCAT(rt0.c3))))))OR(GROUP_CONCAT(GROUP_CONCAT(rt0.c3)))))) UNION ALL SELECT rt0.c3, rt0.c0, t1.c0, t0.c0 FROM t0, t1, rt0 GROUP BY rt0.c3, rt0.c0, t1.c0, t0.c0 HAVING (((((((NOT (rt0.c3)))OR(MIN(GROUP_CONCAT(GROUP_CONCAT(rt0.c3))))))OR(GROUP_CONCAT(GROUP_CONCAT(rt0.c3))))) ISNULL);
SELECT MAX(((rt0.c1 IN ()) IN ())) FROM rt0, t1;
SELECT * FROM t0, t1 NATURAL JOIN rt0;
SELECT * FROM t0, t1 NATURAL JOIN rt0 WHERE ((((rt0.c2)>>(t1.c0)) IN ())) UNION ALL SELECT ALL * FROM t0, t1 NATURAL JOIN rt0 WHERE ((NOT ((((rt0.c2)>>(t1.c0)) IN ())))) UNION ALL SELECT * FROM t0, t1 NATURAL JOIN rt0 WHERE ((((((rt0.c2)>>(t1.c0)) IN ())) ISNULL));
SELECT * FROM t0, t1 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c0 FROM rt0, t0;
SELECT DISTINCT rt0.c0 FROM rt0, t0 WHERE (((rt0.c1) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END) AND (LIKE('', '549908061')))) UNION SELECT DISTINCT rt0.c0 FROM rt0, t0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END) AND (LIKE('', '549908061')))))) UNION SELECT DISTINCT rt0.c0 FROM rt0, t0 WHERE (((((rt0.c1) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END) AND (LIKE('', '549908061')))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, t0;
SELECT rt0.c2, t0.c0, rt0.c3 FROM t1, rt0, t0 GROUP BY rt0.c2, t0.c0, rt0.c3;
SELECT ALL rt0.c2, t0.c0, rt0.c3 FROM t1, rt0, t0 WHERE (((((NULL)IS(t1.c0))) BETWEEN (rt0.c2) AND (t1.c0 COLLATE RTRIM))) GROUP BY rt0.c2, t0.c0, rt0.c3 UNION SELECT ALL rt0.c2, t0.c0, rt0.c3 FROM t1, rt0, t0 WHERE ((NOT (((((NULL)IS(t1.c0))) BETWEEN (rt0.c2) AND (t1.c0 COLLATE RTRIM))))) GROUP BY rt0.c2, t0.c0, rt0.c3 UNION SELECT ALL rt0.c2, t0.c0, rt0.c3 FROM t1, rt0, t0 WHERE (((((((NULL)IS(t1.c0))) BETWEEN (rt0.c2) AND (t1.c0 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c2, t0.c0, rt0.c3;
SELECT rt0.c2, t0.c0, rt0.c3 FROM t1, rt0, t0 GROUP BY rt0.c2, t0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0 FROM rt0, t0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0;
SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0 FROM rt0, t0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0 FROM rt0, t0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0 FROM rt0, t0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0 FROM rt0, t0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0;
SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0 FROM rt0, t0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0 FROM rt0, t0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0 FROM rt0, t0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0 FROM rt0, t0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE ((((t0.c0 COLLATE NOCASE, t0.c0 COLLATE NOCASE, ((t0.c0)+(t0.c0))))>(((((t0.c0))!=((t0.c0))), (NOT ('-918959736')), t0.c0 COLLATE BINARY)))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((t0.c0 COLLATE NOCASE, t0.c0 COLLATE NOCASE, ((t0.c0)+(t0.c0))))>(((((t0.c0))<>((t0.c0))), (NOT ('-918959736')), t0.c0 COLLATE BINARY)))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((t0.c0 COLLATE NOCASE, t0.c0 COLLATE NOCASE, ((t0.c0)+(t0.c0))))>(((((t0.c0))!=((t0.c0))), (NOT ('-918959736')), t0.c0 COLLATE BINARY)))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM rt0, t1 CROSS JOIN t0 ON CASE ((rt0.c2)+(t1.c0))  WHEN t1.c0 COLLATE RTRIM THEN t1.c0 END;
SELECT DISTINCT * FROM rt0, t1 CROSS JOIN t0 ON CASE ((rt0.c2)+(t1.c0))  WHEN t1.c0 COLLATE RTRIM THEN t1.c0 END WHERE (TYPEOF((t1.c0 IN (t1.c0)))) UNION SELECT DISTINCT * FROM rt0, t1 CROSS JOIN t0 ON CASE ((rt0.c2)+(t1.c0))  WHEN t1.c0 COLLATE RTRIM THEN t1.c0 END WHERE ((NOT (TYPEOF((t1.c0 IN (t1.c0)))))) UNION SELECT DISTINCT * FROM rt0, t1 CROSS JOIN t0 ON CASE ((rt0.c2)+(t1.c0))  WHEN t1.c0 COLLATE RTRIM THEN t1.c0 END WHERE (((TYPEOF((t1.c0 IN (t1.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0, t1 CROSS JOIN t0 ON CASE ((rt0.c2)+(t1.c0))  WHEN t1.c0 COLLATE RTRIM THEN t1.c0 END;
SELECT ALL t0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0, t1 GROUP BY t0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT t0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0, t1 WHERE (CAST((+ (rt0.c3)) AS NUMERIC)) GROUP BY t0.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT t0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0, t1 WHERE ((NOT (CAST((+ (rt0.c3)) AS NUMERIC)))) GROUP BY t0.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL t0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0, t1 WHERE (((CAST((+ (rt0.c3)) AS NUMERIC)) ISNULL)) GROUP BY t0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL t0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0, t1 GROUP BY t0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, rt0.c1 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1 HAVING MAX(('戞z' IN (rt0.c3, rt0.c1))) UNION ALL SELECT rt0.c3, rt0.c1 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1 HAVING (NOT (MAX(('戞z' IN (rt0.c3, rt0.c1))))) UNION ALL SELECT ALL rt0.c3, rt0.c1 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1 HAVING ((MAX(('戞z' IN (rt0.c3, rt0.c1)))) ISNULL);
SELECT ALL rt0.c3, rt0.c1 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1 HAVING MAX(('戞z' IN (rt0.c3, rt0.c1))) UNION ALL SELECT rt0.c3, rt0.c1 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1 HAVING (NOT (MAX(('戞z' IN (rt0.c3, rt0.c1))))) UNION ALL SELECT ALL rt0.c3, rt0.c1 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1 HAVING ((MAX(('戞z' IN (rt0.c3, rt0.c1)))) ISNULL);
SELECT ALL rt0.c3, rt0.c1 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1;
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt0 ON ((rt0.c1)&(NULL)) COLLATE BINARY RIGHT OUTER JOIN t0 ON ((rt0.c3 COLLATE RTRIM) NOT NULL);
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt0 ON ((rt0.c1)&(NULL)) COLLATE BINARY RIGHT OUTER JOIN t0 ON ((rt0.c3 COLLATE RTRIM) NOT NULL) WHERE (((((NULL) NOTNULL)) IS FALSE)) UNION ALL SELECT * FROM t1 RIGHT OUTER JOIN rt0 ON ((rt0.c1)&(NULL)) COLLATE BINARY RIGHT OUTER JOIN t0 ON ((rt0.c3 COLLATE RTRIM) NOT NULL) WHERE ((NOT (((((NULL) NOTNULL)) IS FALSE)))) UNION ALL SELECT ALL * FROM t1 RIGHT OUTER JOIN rt0 ON ((rt0.c1)&(NULL)) COLLATE BINARY RIGHT OUTER JOIN t0 ON ((rt0.c3 COLLATE RTRIM) NOT NULL) WHERE (((((((NULL) NOTNULL)) IS FALSE)) ISNULL));
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt0 ON ((rt0.c1)&(NULL)) COLLATE BINARY RIGHT OUTER JOIN t0 ON ((rt0.c3 COLLATE RTRIM) NOT NULL);
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (IFNULL(DISTINCT NULL, NULLIF(DISTINCT t0.c0, rt0.c3))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (IFNULL(DISTINCT NULL, NULLIF(DISTINCT t0.c0, rt0.c3))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((IFNULL(DISTINCT NULL, NULLIF(DISTINCT t0.c0, rt0.c3))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL t0.c0, rt0.c2 FROM t1, t0, rt0 GROUP BY t0.c0, rt0.c2;
SELECT ALL t0.c0, rt0.c2 FROM t1, t0, rt0 WHERE ((rt0.c1 IN (t1.c0)) COLLATE BINARY) GROUP BY t0.c0, rt0.c2 UNION SELECT t0.c0, rt0.c2 FROM t1, t0, rt0 WHERE ((NOT ((rt0.c1 IN (t1.c0)) COLLATE BINARY))) GROUP BY t0.c0, rt0.c2 UNION SELECT ALL t0.c0, rt0.c2 FROM t1, t0, rt0 WHERE ((((rt0.c1 IN (t1.c0)) COLLATE BINARY) ISNULL)) GROUP BY t0.c0, rt0.c2;
SELECT ALL t0.c0, rt0.c2 FROM t1, t0, rt0 GROUP BY t0.c0, rt0.c2;
SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING AVG(((((((((GROUP_CONCAT(MAX(GROUP_CONCAT(t1.c0))))AND(GROUP_CONCAT(t0.c0))))AND(MIN(t1.c0))))AND(t1.c0)))OR(COUNT(t0.c0)))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING (NOT (AVG(((((((((GROUP_CONCAT(MAX(GROUP_CONCAT(t1.c0))))AND(GROUP_CONCAT(t0.c0))))AND(MIN(t1.c0))))AND(t1.c0)))OR(COUNT(t0.c0)))))) UNION ALL SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING ((AVG(((((((((GROUP_CONCAT(MAX(GROUP_CONCAT(t1.c0))))AND(GROUP_CONCAT(t0.c0))))AND(MIN(t1.c0))))AND(t1.c0)))OR(COUNT(t0.c0))))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST((t0.c0 IN ()) AS BLOB)) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST((t0.c0 IN ()) AS BLOB)))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((CAST((t0.c0 IN ()) AS BLOB)) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM rt0, t1 FULL OUTER JOIN t0 ON (rt0.c1 COLLATE BINARY IN ((0.41428959593568515 IN ())));
SELECT DISTINCT * FROM rt0, t1 FULL OUTER JOIN t0 ON (rt0.c1 COLLATE BINARY IN ((0.41428959593568515 IN ()))) WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0, t1 FULL OUTER JOIN t0 ON (rt0.c1 COLLATE BINARY IN ((0.41428959593568515 IN ()))) WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0, t1 FULL OUTER JOIN t0 ON (rt0.c1 COLLATE BINARY IN ((0.41428959593568515 IN ()))) WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0, t1 FULL OUTER JOIN t0 ON (rt0.c1 COLLATE BINARY IN ((0.41428959593568515 IN ())));
SELECT rt0.c3, t0.c0, rt0.c2, rt0.c0, t1.c0, rt0.c1 FROM t1, t0, rt0 GROUP BY rt0.c3, t0.c0, rt0.c2, rt0.c0, t1.c0, rt0.c1;
SELECT rt0.c3, t0.c0, rt0.c2, rt0.c0, t1.c0, rt0.c1 FROM t1, t0, rt0 WHERE (((x'73d6')<<(((t1.c0)>(rt0.c1))))) GROUP BY rt0.c3, t0.c0, rt0.c2, rt0.c0, t1.c0, rt0.c1 UNION SELECT rt0.c3, t0.c0, rt0.c2, rt0.c0, t1.c0, rt0.c1 FROM t1, t0, rt0 WHERE ((NOT (((x'73d6')<<(((t1.c0)>(rt0.c1))))))) GROUP BY rt0.c3, t0.c0, rt0.c2, rt0.c0, t1.c0, rt0.c1 UNION SELECT rt0.c3, t0.c0, rt0.c2, rt0.c0, t1.c0, rt0.c1 FROM t1, t0, rt0 WHERE (((((x'73d6')<<(((t1.c0)>(rt0.c1))))) ISNULL)) GROUP BY rt0.c3, t0.c0, rt0.c2, rt0.c0, t1.c0, rt0.c1;
SELECT rt0.c3, t0.c0, rt0.c2, rt0.c0, t1.c0, rt0.c1 FROM t1, t0, rt0 GROUP BY rt0.c3, t0.c0, rt0.c2, rt0.c0, t1.c0, rt0.c1;
SELECT ALL t0.c0 FROM t1 INNER JOIN t0 ON ((CAST(t0.c0 AS REAL)) IS FALSE) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1 INNER JOIN t0 ON ((CAST(t0.c0 AS REAL)) IS FALSE) GROUP BY t0.c0 HAVING SUM((SUM(t0.c0) IN ())) UNION ALL SELECT t0.c0 FROM t1 INNER JOIN t0 ON ((CAST(t0.c0 AS REAL)) IS FALSE) GROUP BY t0.c0 HAVING (NOT (SUM((SUM(t0.c0) IN ())))) UNION ALL SELECT t0.c0 FROM t1 INNER JOIN t0 ON ((CAST(t0.c0 AS REAL)) IS FALSE) GROUP BY t0.c0 HAVING ((SUM((SUM(t0.c0) IN ()))) ISNULL);
SELECT ALL t0.c0 FROM t1 INNER JOIN t0 ON ((CAST(t0.c0 AS REAL)) IS FALSE) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1 INNER JOIN t0 ON ((CAST(t0.c0 AS REAL)) IS FALSE) GROUP BY t0.c0 HAVING SUM((SUM(t0.c0) IN ())) UNION ALL SELECT t0.c0 FROM t1 INNER JOIN t0 ON ((CAST(t0.c0 AS REAL)) IS FALSE) GROUP BY t0.c0 HAVING (NOT (SUM((SUM(t0.c0) IN ())))) UNION ALL SELECT t0.c0 FROM t1 INNER JOIN t0 ON ((CAST(t0.c0 AS REAL)) IS FALSE) GROUP BY t0.c0 HAVING ((SUM((SUM(t0.c0) IN ()))) ISNULL);
SELECT ALL t0.c0 FROM t1 INNER JOIN t0 ON ((CAST(t0.c0 AS REAL)) IS FALSE) GROUP BY t0.c0;
SELECT t0.c0, t1.c0 FROM t1, t0;
SELECT t0.c0, t1.c0 FROM t1, t0 WHERE ((((t1.c0, t0.c0, t0.c0)) NOT BETWEEN ((t1.c0 COLLATE RTRIM, LTRIM(t1.c0, t1.c0), t0.c0 COLLATE RTRIM)) AND ((LOWER(t1.c0), (~ (t0.c0)), (+ ('-1814390051')))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t1, t0 WHERE ((NOT ((((t1.c0, t0.c0, t0.c0)) NOT BETWEEN ((t1.c0 COLLATE RTRIM, LTRIM(t1.c0, t1.c0), t0.c0 COLLATE RTRIM)) AND ((LOWER(t1.c0), (~ (t0.c0)), (+ ('-1814390051')))))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t1, t0 WHERE ((((((t1.c0, t0.c0, t0.c0)) NOT BETWEEN ((t1.c0 COLLATE RTRIM, LTRIM(t1.c0, t1.c0), t0.c0 COLLATE RTRIM)) AND ((LOWER(t1.c0), (~ (t0.c0)), (+ ('-1814390051')))))) ISNULL));
SELECT t0.c0, t1.c0 FROM t1, t0;
SELECT DISTINCT rt0.c3, rt0.c0 FROM t0, t1, rt0;
SELECT DISTINCT rt0.c3, rt0.c0 FROM t0, t1, rt0 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c3)) THEN CAST(rt0.c0 AS REAL) WHEN rt0.c0 THEN ('<섨faV3b' IN ()) WHEN CAST(rt0.c0 AS TEXT) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) END) UNION SELECT DISTINCT rt0.c3, rt0.c0 FROM t0, t1, rt0 WHERE ((NOT (CASE WHEN ((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c3)) THEN CAST(rt0.c0 AS REAL) WHEN rt0.c0 THEN ('<섨faV3b' IN ()) WHEN CAST(rt0.c0 AS TEXT) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) END))) UNION SELECT DISTINCT rt0.c3, rt0.c0 FROM t0, t1, rt0 WHERE (((CASE WHEN ((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c3)) THEN CAST(rt0.c0 AS REAL) WHEN rt0.c0 THEN ('<섨faV3b' IN ()) WHEN CAST(rt0.c0 AS TEXT) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) END) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0 FROM t0, t1, rt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING GROUP_CONCAT(MAX(GROUP_CONCAT(MAX(AVG(MIN(t1.c0)))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (GROUP_CONCAT(MAX(GROUP_CONCAT(MAX(AVG(MIN(t1.c0)))))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((GROUP_CONCAT(MAX(GROUP_CONCAT(MAX(AVG(MIN(t1.c0))))))) ISNULL);
SELECT ALL * FROM rt0, t1, t0;
SELECT * FROM rt0, t1, t0 WHERE (((((CAST(t1.c0 AS REAL))AND(((rt0.c0)!=(t0.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c1 END))) UNION ALL SELECT ALL * FROM rt0 NOT INDEXED, t1, t0 WHERE ((NOT (((((CAST(t1.c0 AS REAL))AND(((rt0.c0)!=(t0.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c1 END))))) UNION ALL SELECT ALL * FROM rt0, t1, t0 WHERE (((((((CAST(t1.c0 AS REAL))AND(((rt0.c0)!=(t0.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c1 END))) ISNULL));
SELECT ALL * FROM rt0, t1, t0;
SELECT DISTINCT t1.c0, t0.c0 FROM t0, t1;
SELECT DISTINCT t1.c0, t0.c0 FROM t0, t1 WHERE (((ABS(t1.c0))<>((((t0.c0, t1.c0, t0.c0)) NOT BETWEEN (('~3', t0.c0, t0.c0)) AND ((t0.c0, t1.c0, t0.c0)))))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t0, t1 WHERE ((NOT (((ABS(t1.c0))<>((((t0.c0, t1.c0, t0.c0)) NOT BETWEEN (('~3', t0.c0, t0.c0)) AND ((t0.c0, t1.c0, t0.c0)))))))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t0, t1 WHERE (((((ABS(t1.c0))!=((((t0.c0, t1.c0, t0.c0)) NOT BETWEEN (('~3', t0.c0, t0.c0)) AND ((t0.c0, t1.c0, t0.c0)))))) ISNULL));
SELECT DISTINCT t1.c0, t0.c0 FROM t0, t1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE RTRIM COLLATE NOCASE) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE RTRIM COLLATE NOCASE))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE RTRIM COLLATE NOCASE) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c0 FROM rt0 INNER JOIN t0 ON ((((rt0.c0)==(t1.c0))) BETWEEN (((NULL)AND(0.026276447051989504))) AND ((((rt0.c3, rt0.c2, rt0.c0, t0.c0, t0.c0))==((x'4787', rt0.c0, rt0.c1, rt0.c1, NULL))))) CROSS JOIN t1 ON CASE WHEN ((t1.c0) NOTNULL) THEN CAST(rt0.c0 AS BLOB) ELSE (rt0.c3 IN ()) END GROUP BY t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c0;
SELECT t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c0 FROM rt0 INNER JOIN t0 ON ((((rt0.c0)==(t1.c0))) BETWEEN (((NULL)AND(0.026276447051989504))) AND ((((rt0.c3, rt0.c2, rt0.c0, t0.c0, t0.c0))==((x'4787', rt0.c0, rt0.c1, rt0.c1, NULL))))) CROSS JOIN t1 ON CASE WHEN ((t1.c0) NOTNULL) THEN CAST(rt0.c0 AS BLOB) ELSE (rt0.c3 IN ()) END GROUP BY t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c0 FROM rt0 INNER JOIN t0 ON ((((rt0.c0)==(t1.c0))) BETWEEN (((NULL)AND(0.026276447051989504))) AND ((((rt0.c3, rt0.c2, rt0.c0, t0.c0, t0.c0))==((x'4787', rt0.c0, rt0.c1, rt0.c1, NULL))))) CROSS JOIN t1 ON CASE WHEN ((t1.c0) NOTNULL) THEN CAST(rt0.c0 AS BLOB) ELSE (rt0.c3 IN ()) END GROUP BY t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c0 FROM rt0 INNER JOIN t0 ON ((((rt0.c0)=(t1.c0))) BETWEEN (((NULL)AND(0.026276447051989504))) AND ((((rt0.c3, rt0.c2, rt0.c0, t0.c0, t0.c0))=((x'4787', rt0.c0, rt0.c1, rt0.c1, NULL))))) CROSS JOIN t1 ON CASE WHEN ((t1.c0) NOTNULL) THEN CAST(rt0.c0 AS BLOB) ELSE (rt0.c3 IN ()) END GROUP BY t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c0 FROM rt0 INNER JOIN t0 ON ((((rt0.c0)==(t1.c0))) BETWEEN (((NULL)AND(0.026276447051989504))) AND ((((rt0.c3, rt0.c2, rt0.c0, t0.c0, t0.c0))==((x'4787', rt0.c0, rt0.c1, rt0.c1, NULL))))) CROSS JOIN t1 ON CASE WHEN ((t1.c0) NOTNULL) THEN CAST(rt0.c0 AS BLOB) ELSE (rt0.c3 IN ()) END GROUP BY t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c0;
SELECT t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c0 FROM rt0 INNER JOIN t0 ON ((((rt0.c0)==(t1.c0))) BETWEEN (((NULL)AND(0.026276447051989504))) AND ((((rt0.c3, rt0.c2, rt0.c0, t0.c0, t0.c0))==((x'4787', rt0.c0, rt0.c1, rt0.c1, NULL))))) CROSS JOIN t1 ON CASE WHEN ((t1.c0) NOTNULL) THEN CAST(rt0.c0 AS BLOB) ELSE (rt0.c3 IN ()) END GROUP BY t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c0 FROM rt0 INNER JOIN t0 ON ((((rt0.c0)==(t1.c0))) BETWEEN (((NULL)AND(0.026276447051989504))) AND ((((rt0.c3, rt0.c2, rt0.c0, t0.c0, t0.c0))==((x'4787', rt0.c0, rt0.c1, rt0.c1, NULL))))) CROSS JOIN t1 ON CASE WHEN ((t1.c0) NOTNULL) THEN CAST(rt0.c0 AS BLOB) ELSE (rt0.c3 IN ()) END GROUP BY t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c0 FROM rt0 INNER JOIN t0 ON ((((rt0.c0)=(t1.c0))) BETWEEN (((NULL)AND(0.026276447051989504))) AND ((((rt0.c3, rt0.c2, rt0.c0, t0.c0, t0.c0))=((x'4787', rt0.c0, rt0.c1, rt0.c1, NULL))))) CROSS JOIN t1 ON CASE WHEN ((t1.c0) NOTNULL) THEN CAST(rt0.c0 AS BLOB) ELSE (rt0.c3 IN ()) END GROUP BY t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c0 FROM rt0 INNER JOIN t0 ON ((((rt0.c0)==(t1.c0))) BETWEEN (((NULL)AND(0.026276447051989504))) AND ((((rt0.c3, rt0.c2, rt0.c0, t0.c0, t0.c0))==((x'4787', rt0.c0, rt0.c1, rt0.c1, NULL))))) CROSS JOIN t1 ON CASE WHEN ((t1.c0) NOTNULL) THEN CAST(rt0.c0 AS BLOB) ELSE (rt0.c3 IN ()) END GROUP BY t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, t0.c0 FROM rt0, t0, t1;
SELECT rt0.c1, rt0.c2, rt0.c0, t0.c0 FROM rt0, t0, t1 WHERE (((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))<=((CASE WHEN rt0.c3 THEN rt0.c1 WHEN t1.c0 THEN rt0.c1 WHEN t1.c0 THEN t0.c0 ELSE 2003860980 END)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, t0.c0 FROM rt0, t0, t1 WHERE ((NOT (((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))<=((CASE WHEN rt0.c3 THEN rt0.c1 WHEN t1.c0 THEN rt0.c1 WHEN t1.c0 THEN t0.c0 ELSE 2003860980 END)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, t0.c0 FROM rt0, t0, t1 WHERE (((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))<=((CASE WHEN rt0.c3 THEN rt0.c1 WHEN t1.c0 THEN rt0.c1 WHEN t1.c0 THEN t0.c0 ELSE 2003860980 END)))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c0, t0.c0 FROM rt0, t0, t1;
SELECT DISTINCT rt0.c2 FROM t1, rt0;
SELECT DISTINCT rt0.c2 FROM t1, rt0 WHERE (((((CAST(rt0.c0 AS BLOB))OR(x'' COLLATE BINARY)))OR(((t1.c0)IS(rt0.c3))))) UNION SELECT DISTINCT rt0.c2 FROM t1, rt0 WHERE ((NOT (((((CAST(rt0.c0 AS BLOB))OR(x'' COLLATE BINARY)))OR(((t1.c0)IS(rt0.c3))))))) UNION SELECT DISTINCT rt0.c2 FROM t1, rt0 WHERE (((((((CAST(rt0.c0 AS BLOB))OR(x'' COLLATE BINARY)))OR(((t1.c0)IS(rt0.c3))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM t1, rt0;
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t1, t0 WHERE (CASE ((t1.c0)IS(t1.c0))  WHEN NULL THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) ELSE t1.c0 COLLATE NOCASE END) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t1, t0 WHERE ((NOT (CASE ((t1.c0)IS(t1.c0))  WHEN NULL THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) ELSE t1.c0 COLLATE NOCASE END))) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t1, t0 WHERE (((CASE ((t1.c0)IS(t1.c0))  WHEN NULL THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) ELSE t1.c0 COLLATE NOCASE END) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING NULL UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (NULL)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((NULL) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING NULL UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (NULL)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((NULL) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c0) IS TRUE))) AND (((~ (t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((((t0.c0) IS TRUE))) AND (((~ (t0.c0)))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((((t0.c0) IS TRUE))) AND (((~ (t0.c0)))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((CASE rt0.c0  WHEN NULL THEN rt0.c3 END)) AND (((rt0.c2 IN ()))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2)) BETWEEN ((CASE rt0.c0  WHEN NULL THEN rt0.c3 END)) AND (((rt0.c2 IN ()))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((CASE rt0.c0  WHEN NULL THEN rt0.c3 END)) AND (((rt0.c2 IN ()))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL t1.c0, rt0.c2 FROM t1, rt0 GROUP BY t1.c0, rt0.c2;
SELECT t1.c0, rt0.c2 FROM t1, rt0 WHERE (((rt0.c0 IN ()) IN (LOWER(rt0.c1)))) GROUP BY t1.c0, rt0.c2 UNION SELECT ALL t1.c0, rt0.c2 FROM t1, rt0 NOT INDEXED WHERE ((NOT (((rt0.c0 IN ()) IN (LOWER(rt0.c1)))))) GROUP BY t1.c0, rt0.c2 UNION SELECT t1.c0, rt0.c2 FROM t1, rt0 WHERE (((((rt0.c0 IN ()) IN (LOWER(rt0.c1)))) ISNULL)) GROUP BY t1.c0, rt0.c2;
SELECT ALL t1.c0, rt0.c2 FROM t1, rt0 GROUP BY t1.c0, rt0.c2;
SELECT rt0.c1, rt0.c2, t0.c0, rt0.c0 FROM t1 FULL OUTER JOIN rt0 ON ((rt0.c2 COLLATE BINARY)<=(((rt0.c0) NOT NULL))) RIGHT OUTER JOIN t0 ON (((rt0.c1, t0.c0, rt0.c3)) BETWEEN ((CASE WHEN t0.c0 THEN rt0.c3 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c3 END, ((rt0.c2)=(rt0.c1)), ((rt0.c2)|(NULL)))) AND (((((rt0.c3))>(('-711170791'))), t1.c0, (- (t1.c0))))) GROUP BY rt0.c1, rt0.c2, t0.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, t0.c0, rt0.c0 FROM t1 FULL OUTER JOIN rt0 ON ((rt0.c2 COLLATE BINARY)<=(((rt0.c0) NOT NULL))) RIGHT OUTER JOIN t0 ON (((rt0.c1, t0.c0, rt0.c3)) BETWEEN ((CASE WHEN t0.c0 THEN rt0.c3 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c3 END, ((rt0.c2)=(rt0.c1)), ((rt0.c2)|(NULL)))) AND (((((rt0.c3))>(('-711170791'))), t1.c0, (- (t1.c0))))) GROUP BY rt0.c1, rt0.c2, t0.c0, rt0.c0 HAVING MIN(COUNT(COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2, t0.c0, rt0.c0 FROM t1 FULL OUTER JOIN rt0 ON ((rt0.c2 COLLATE BINARY)<=(((rt0.c0) NOT NULL))) RIGHT OUTER JOIN t0 ON (((rt0.c1, t0.c0, rt0.c3)) BETWEEN ((CASE WHEN t0.c0 THEN rt0.c3 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c3 END, ((rt0.c2)==(rt0.c1)), ((rt0.c2)|(NULL)))) AND (((((rt0.c3))>(('-711170791'))), t1.c0, (- (t1.c0))))) GROUP BY rt0.c1, rt0.c2, t0.c0, rt0.c0 HAVING (NOT (MIN(COUNT(COUNT(*))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, t0.c0, rt0.c0 FROM t1 FULL OUTER JOIN rt0 ON ((rt0.c2 COLLATE BINARY)<=(((rt0.c0) NOT NULL))) RIGHT OUTER JOIN t0 ON (((rt0.c1, t0.c0, rt0.c3)) BETWEEN ((CASE WHEN t0.c0 THEN rt0.c3 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c3 END, ((rt0.c2)=(rt0.c1)), ((rt0.c2)|(NULL)))) AND (((((rt0.c3))>(('-711170791'))), t1.c0, (- (t1.c0))))) GROUP BY rt0.c1, rt0.c2, t0.c0, rt0.c0 HAVING ((MIN(COUNT(COUNT(*)))) ISNULL);
SELECT MAX((((- (rt0.c3)))||((rt0.c3 IN ())))) FROM rt0;
SELECT ALL rt0.c3, rt0.c1, t1.c0, rt0.c2, rt0.c0 FROM rt0, t1, t0 INDEXED BY i42;
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0 WHERE ((- (rt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT ((- (rt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0 WHERE ((((- (rt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0;
SELECT ALL rt0.c0, t1.c0, rt0.c1 FROM t1, rt0 CROSS JOIN t0 ON ((((t1.c0) ISNULL))>>(rt0.c1)) GROUP BY rt0.c0, t1.c0, rt0.c1;
SELECT rt0.c0, t1.c0, rt0.c1 FROM t1, rt0 CROSS JOIN t0 ON ((((t1.c0) ISNULL))>>(rt0.c1)) WHERE (((rt0.c3 COLLATE BINARY) ISNULL)) GROUP BY rt0.c0, t1.c0, rt0.c1 UNION SELECT rt0.c0, t1.c0, rt0.c1 FROM t1, rt0 CROSS JOIN t0 ON ((((t1.c0) ISNULL))>>(rt0.c1)) WHERE ((NOT (((rt0.c3 COLLATE BINARY) ISNULL)))) GROUP BY rt0.c0, t1.c0, rt0.c1 UNION SELECT ALL rt0.c0, t1.c0, rt0.c1 FROM t1, rt0 CROSS JOIN t0 ON ((((t1.c0) ISNULL))>>(rt0.c1)) WHERE (((((rt0.c3 COLLATE BINARY) ISNULL)) ISNULL)) GROUP BY rt0.c0, t1.c0, rt0.c1;
SELECT ALL rt0.c0, t1.c0, rt0.c1 FROM t1, rt0 CROSS JOIN t0 ON ((((t1.c0) ISNULL))>>(rt0.c1)) GROUP BY rt0.c0, t1.c0, rt0.c1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(AVG(t1.c0)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(AVG(t1.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(AVG(t1.c0))) ISNULL);
SELECT ALL t0.c0, t1.c0 FROM t1, t0;
SELECT t0.c0, t1.c0 FROM t1, t0 WHERE (IFNULL(0.5282423568255862, CAST(t1.c0 AS TEXT))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t1, t0 WHERE ((NOT (IFNULL(0.5282423568255862, CAST(t1.c0 AS TEXT))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t1, t0 WHERE (((IFNULL(0.5282423568255862, CAST(t1.c0 AS TEXT))) ISNULL));
SELECT ALL t0.c0, t1.c0 FROM t1, t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c3, t1.c0 FROM t0, t1, rt0 GROUP BY rt0.c0, rt0.c3, t1.c0;
SELECT ALL rt0.c0, rt0.c3, t1.c0 FROM t0, t1, rt0 WHERE (TYPEOF(DISTINCT (((rt0.c0)) BETWEEN ((rt0.c0)) AND (('-1803714476'))))) GROUP BY rt0.c0, rt0.c3, t1.c0 UNION SELECT rt0.c0, rt0.c3, t1.c0 FROM t0, t1, rt0 WHERE ((NOT (TYPEOF(DISTINCT (((rt0.c0)) BETWEEN ((rt0.c0)) AND (('-1803714476'))))))) GROUP BY rt0.c0, rt0.c3, t1.c0 UNION SELECT rt0.c0, rt0.c3, t1.c0 FROM t0, t1, rt0 WHERE (((TYPEOF(DISTINCT (((rt0.c0)) BETWEEN ((rt0.c0)) AND (('-1803714476'))))) ISNULL)) GROUP BY rt0.c0, rt0.c3, t1.c0;
SELECT ALL rt0.c0, rt0.c3, t1.c0 FROM t0, t1, rt0 GROUP BY rt0.c0, rt0.c3, t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT ALL * FROM t1, rt0 FULL OUTER JOIN t0 ON ((((((((((rt0.c0) ISNULL))AND(rt0.c0)))OR(((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c0)))))AND(((NULL)||(t0.c0)))))OR((- (t1.c0))));
SELECT * FROM t1, rt0 FULL OUTER JOIN t0 ON ((((((((((rt0.c0) ISNULL))AND(rt0.c0)))OR(((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c0)))))AND(((NULL)||(t0.c0)))))OR((- (t1.c0)))) WHERE (x'') UNION ALL SELECT * FROM t1, rt0 FULL OUTER JOIN t0 ON ((((((((((rt0.c0) ISNULL))AND(rt0.c0)))OR(((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c0)))))AND(((NULL)||(t0.c0)))))OR((- (t1.c0)))) WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM t1, rt0 FULL OUTER JOIN t0 ON ((((((((((rt0.c0) ISNULL))AND(rt0.c0)))OR(((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c0)))))AND(((NULL)||(t0.c0)))))OR((- (t1.c0)))) WHERE (((x'') ISNULL));
SELECT ALL * FROM t1, rt0 FULL OUTER JOIN t0 ON ((((((((((rt0.c0) ISNULL))AND(rt0.c0)))OR(((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c0)))))AND(((NULL)||(t0.c0)))))OR((- (t1.c0))));
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE ((- (((rt0.c2)-(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT ((- (((rt0.c2)-(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((((- (((rt0.c2)-(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1 WHERE (COALESCE(t0.c0, ((t1.c0)|(0Xffffffff946b4951)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t0, t1 WHERE ((NOT (COALESCE(t0.c0, ((t1.c0)|(0Xffffffff946b4951)))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t0, t1 WHERE (((COALESCE(t0.c0, ((t1.c0)|(0xffffffff946b4951)))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING SUM(rt0.c1 COLLATE RTRIM) UNION ALL SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING (NOT (SUM(rt0.c1 COLLATE RTRIM))) UNION ALL SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING ((SUM(rt0.c1 COLLATE RTRIM)) ISNULL);
SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING SUM(rt0.c1 COLLATE RTRIM) UNION ALL SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING (NOT (SUM(rt0.c1 COLLATE RTRIM))) UNION ALL SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING ((SUM(rt0.c1 COLLATE RTRIM)) ISNULL);
SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT t0.c0 FROM t0, t1;
SELECT ALL t0.c0 FROM t0, t1 WHERE ((((t0.c0)) BETWEEN ((((t1.c0) NOT NULL))) AND ((x'')))) UNION ALL SELECT t0.c0 FROM t0, t1 WHERE ((NOT ((((t0.c0)) BETWEEN ((((t1.c0) NOT NULL))) AND ((x'')))))) UNION ALL SELECT ALL t0.c0 FROM t0, t1 WHERE ((((((t0.c0)) BETWEEN ((((t1.c0) NOT NULL))) AND ((x'')))) ISNULL));
SELECT t0.c0 FROM t0, t1;
SELECT DISTINCT rt0.c1, rt0.c2, t0.c0, rt0.c0 FROM t0 CROSS JOIN rt0 ON (((- (t0.c0)))|(((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c3)))AND(-917529470)))AND(rt0.c0)))) RIGHT OUTER JOIN t1 ON CASE WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c1) NOT NULL) ELSE rt0.c0 END;
SELECT DISTINCT rt0.c1, rt0.c2, t0.c0, rt0.c0 FROM t0 CROSS JOIN rt0 ON (((- (t0.c0)))|(((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c3)))AND(-917529470)))AND(rt0.c0)))) RIGHT OUTER JOIN t1 ON CASE WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c1) NOT NULL) ELSE rt0.c0 END WHERE (((rt0.c1 COLLATE NOCASE) BETWEEN (((NULL)LIKE(t0.c0))) AND (CAST(rt0.c2 AS BLOB)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, t0.c0, rt0.c0 FROM t0 CROSS JOIN rt0 ON (((- (t0.c0)))|(((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c3)))AND(-917529470)))AND(rt0.c0)))) RIGHT OUTER JOIN t1 ON CASE WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c1) NOT NULL) ELSE rt0.c0 END WHERE ((NOT (((rt0.c1 COLLATE NOCASE) BETWEEN (((NULL)LIKE(t0.c0))) AND (CAST(rt0.c2 AS BLOB)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, t0.c0, rt0.c0 FROM t0 CROSS JOIN rt0 ON (((- (t0.c0)))|(((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c3)))AND(-917529470)))AND(rt0.c0)))) RIGHT OUTER JOIN t1 ON CASE WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c1) NOT NULL) ELSE rt0.c0 END WHERE (((((rt0.c1 COLLATE NOCASE) BETWEEN (((NULL)LIKE(t0.c0))) AND (CAST(rt0.c2 AS BLOB)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, t0.c0, rt0.c0 FROM t0 CROSS JOIN rt0 ON (((- (t0.c0)))|(((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c3)))AND(-917529470)))AND(rt0.c0)))) RIGHT OUTER JOIN t1 ON CASE WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c1) NOT NULL) ELSE rt0.c0 END;
SELECT ALL rt0.c1 FROM rt0, t1 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, t1 WHERE (((SQLITE_VERSION())IS NOT(rt0.c3))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, t1 WHERE ((NOT (((SQLITE_VERSION())IS NOT(rt0.c3))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, t1 WHERE (((((SQLITE_VERSION())IS NOT(rt0.c3))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t1 GROUP BY rt0.c1;
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING MAX(COUNT(t0.c0)) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING (NOT (MAX(COUNT(t0.c0)))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING ((MAX(COUNT(t0.c0))) ISNULL);
SELECT ALL * FROM t0 INNER JOIN t1 ON ((((((((CAST(rt0.c1 AS NUMERIC))AND(((((t1.c0)AND(rt0.c3)))AND(rt0.c3)))))OR(((t1.c0)<(-1167681038)))))OR(((rt0.c3) NOT NULL))))AND((~ ('-2118383331')))) CROSS JOIN rt0 ON ((((t1.c0) IS TRUE)) BETWEEN (((((((((((((t1.c0)AND(rt0.c3)))AND(rt0.c3)))AND(-1.167681038E9)))AND(t0.c0)))AND(t0.c0)))OR(rt0.c1))) AND (rt0.c3));
SELECT ALL * FROM t0 INNER JOIN t1 ON ((((((((CAST(rt0.c1 AS NUMERIC))AND(((((t1.c0)AND(rt0.c3)))AND(rt0.c3)))))OR(((t1.c0)<(-1167681038)))))OR(((rt0.c3) NOT NULL))))AND((~ ('-2118383331')))) CROSS JOIN rt0 ON ((((t1.c0) IS TRUE)) BETWEEN (((((((((((((t1.c0)AND(rt0.c3)))AND(rt0.c3)))AND(-1.167681038E9)))AND(t0.c0)))AND(t0.c0)))OR(rt0.c1))) AND (rt0.c3)) WHERE (((((rt0.c2) IS FALSE)) NOTNULL)) UNION ALL SELECT * FROM t0 INNER JOIN t1 ON ((((((((CAST(rt0.c1 AS NUMERIC))AND(((((t1.c0)AND(rt0.c3)))AND(rt0.c3)))))OR(((t1.c0)<(-1167681038)))))OR(((rt0.c3) NOT NULL))))AND((~ ('-2118383331')))) CROSS JOIN rt0 ON ((((t1.c0) IS TRUE)) BETWEEN (((((((((((((t1.c0)AND(rt0.c3)))AND(rt0.c3)))AND(-1.167681038E9)))AND(t0.c0)))AND(t0.c0)))OR(rt0.c1))) AND (rt0.c3)) WHERE ((NOT (((((rt0.c2) IS FALSE)) NOTNULL)))) UNION ALL SELECT * FROM t0 INNER JOIN t1 ON ((((((((CAST(rt0.c1 AS NUMERIC))AND(((((t1.c0)AND(rt0.c3)))AND(rt0.c3)))))OR(((t1.c0)<(-1167681038)))))OR(((rt0.c3) NOT NULL))))AND((~ ('-2118383331')))) CROSS JOIN rt0 ON ((((t1.c0) IS TRUE)) BETWEEN (((((((((((((t1.c0)AND(rt0.c3)))AND(rt0.c3)))AND(-1.167681038E9)))AND(t0.c0)))AND(t0.c0)))OR(rt0.c1))) AND (rt0.c3)) WHERE (((((((rt0.c2) IS FALSE)) NOTNULL)) ISNULL));
SELECT ALL * FROM t0 INNER JOIN t1 ON ((((((((CAST(rt0.c1 AS NUMERIC))AND(((((t1.c0)AND(rt0.c3)))AND(rt0.c3)))))OR(((t1.c0)<(-1167681038)))))OR(((rt0.c3) NOT NULL))))AND((~ ('-2118383331')))) CROSS JOIN rt0 ON ((((t1.c0) IS TRUE)) BETWEEN (((((((((((((t1.c0)AND(rt0.c3)))AND(rt0.c3)))AND(-1.167681038E9)))AND(t0.c0)))AND(t0.c0)))OR(rt0.c1))) AND (rt0.c3));
SELECT DISTINCT t1.c0 FROM t0, t1;
SELECT DISTINCT t1.c0 FROM t0, t1 WHERE (LIKELIHOOD(t1.c0, 0.6178218821296302) COLLATE RTRIM) UNION SELECT DISTINCT t1.c0 FROM t0, t1 WHERE ((NOT (LIKELIHOOD(t1.c0, 0.6178218821296302) COLLATE RTRIM))) UNION SELECT DISTINCT t1.c0 FROM t0, t1 WHERE (((LIKELIHOOD(t1.c0, 0.6178218821296302) COLLATE RTRIM) ISNULL));
SELECT DISTINCT t1.c0 FROM t0, t1;
SELECT ALL rt0.c1, t0.c0, rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0 LEFT OUTER JOIN t1 ON (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((((rt0.c2)IS(rt0.c2))))) GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c2, rt0.c3;
SELECT rt0.c1, t0.c0, rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0 LEFT OUTER JOIN t1 ON (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((((rt0.c2)IS(rt0.c2))))) WHERE (((((rt0.c2) IS TRUE))<=(rt0.c2))) GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c2, rt0.c3 UNION SELECT rt0.c1, t0.c0, rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0 LEFT OUTER JOIN t1 ON (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((((rt0.c2)IS(rt0.c2))))) WHERE ((NOT (((((rt0.c2) IS TRUE))<=(rt0.c2))))) GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c1, t0.c0, rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0 LEFT OUTER JOIN t1 ON (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((((rt0.c2)IS(rt0.c2))))) WHERE (((((((rt0.c2) IS TRUE))<=(rt0.c2))) ISNULL)) GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c1, t0.c0, rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0 LEFT OUTER JOIN t1 ON (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((((rt0.c2)IS(rt0.c2))))) GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c2, rt0.c3;
SELECT t1.c0, t0.c0 FROM t1 FULL OUTER JOIN t0 ON (((+ (t1.c0)))>(((t1.c0) BETWEEN (t1.c0) AND (x'')))) GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1 FULL OUTER JOIN t0 ON (((+ (t1.c0)))>(((t1.c0) BETWEEN (t1.c0) AND (x'')))) GROUP BY t1.c0, t0.c0 HAVING AVG(TOTAL(GROUP_CONCAT(SUM(t0.c0))) COLLATE NOCASE) UNION ALL SELECT t1.c0, t0.c0 FROM t1 FULL OUTER JOIN t0 ON (((+ (t1.c0)))>(((t1.c0) BETWEEN (t1.c0) AND (x'')))) GROUP BY t1.c0, t0.c0 HAVING (NOT (AVG(TOTAL(GROUP_CONCAT(SUM(t0.c0))) COLLATE NOCASE))) UNION ALL SELECT t1.c0, t0.c0 FROM t1 FULL OUTER JOIN t0 ON (((+ (t1.c0)))>(((t1.c0) BETWEEN (t1.c0) AND (x'')))) GROUP BY t1.c0, t0.c0 HAVING ((AVG(TOTAL(GROUP_CONCAT(SUM(t0.c0))) COLLATE NOCASE)) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0)>=(t0.c0)))IS NOT(((t0.c0)AND(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)>=(t0.c0)))IS NOT(((t0.c0)AND(t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0)>=(t0.c0)))IS NOT(((t0.c0)AND(t0.c0))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (t1.c0 COLLATE NOCASE) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (t1.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t1 WHERE (((t1.c0 COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT rt0.c1 FROM t1 RIGHT OUTER JOIN rt0 ON (((NOT (t1.c0))) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c1)!=(t1.c0)))) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM t1 RIGHT OUTER JOIN rt0 ON (((NOT (t1.c0))) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c1)<>(t1.c0)))) WHERE (((('0.8504332066450263')) BETWEEN (((- (NULL)))) AND (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM t1 RIGHT OUTER JOIN rt0 ON (((NOT (t1.c0))) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c1)!=(t1.c0)))) WHERE ((NOT (((('0.8504332066450263')) BETWEEN (((- (NULL)))) AND (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM t1 RIGHT OUTER JOIN rt0 ON (((NOT (t1.c0))) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c1)!=(t1.c0)))) WHERE (((((('0.8504332066450263')) BETWEEN (((- (NULL)))) AND (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM t1 RIGHT OUTER JOIN rt0 ON (((NOT (t1.c0))) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c1)!=(t1.c0)))) GROUP BY rt0.c1;
SELECT rt0.c3, rt0.c0, t0.c0, rt0.c2, rt0.c1, t1.c0 FROM t1, t0, rt0 NOT INDEXED GROUP BY rt0.c3, rt0.c0, t0.c0, rt0.c2, rt0.c1, t1.c0;
SELECT rt0.c3, rt0.c0, t0.c0, rt0.c2, rt0.c1, t1.c0 FROM t1, t0, rt0 GROUP BY rt0.c3, rt0.c0, t0.c0, rt0.c2, rt0.c1, t1.c0 HAVING COUNT(GROUP_CONCAT(t0.c0)) UNION ALL SELECT rt0.c3, rt0.c0, t0.c0, rt0.c2, rt0.c1, t1.c0 FROM t1, t0, rt0 GROUP BY rt0.c3, rt0.c0, t0.c0, rt0.c2, rt0.c1, t1.c0 HAVING (NOT (COUNT(GROUP_CONCAT(t0.c0)))) UNION ALL SELECT rt0.c3, rt0.c0, t0.c0, rt0.c2, rt0.c1, t1.c0 FROM t1, t0, rt0 GROUP BY rt0.c3, rt0.c0, t0.c0, rt0.c2, rt0.c1, t1.c0 HAVING ((COUNT(GROUP_CONCAT(t0.c0))) ISNULL);
SELECT * FROM t1, t0, rt0;
SELECT ALL * FROM t1, t0, rt0 WHERE ((((((rt0.c2, t1.c0, rt0.c0))<((t0.c0, 0.061207588137913715, rt0.c1)))) NOT BETWEEN (((0X3adc51e8)AND(t1.c0))) AND ((((rt0.c0))=((rt0.c1)))))) UNION ALL SELECT ALL * FROM t1, t0, rt0 WHERE ((NOT ((((((rt0.c2, t1.c0, rt0.c0))<((t0.c0, 0.061207588137913715, rt0.c1)))) NOT BETWEEN (((0x3adc51e8)AND(t1.c0))) AND ((((rt0.c0))=((rt0.c1)))))))) UNION ALL SELECT ALL * FROM t1, t0, rt0 WHERE ((((((((rt0.c2, t1.c0, rt0.c0))<((t0.c0, 0.061207588137913715, rt0.c1)))) NOT BETWEEN (((0X3adc51e8)AND(t1.c0))) AND ((((rt0.c0))=((rt0.c1)))))) ISNULL));
SELECT * FROM t1, t0, rt0;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN t1 ON (((+ (rt0.c3)))%(CASE '-1157531190'  WHEN rt0.c0 THEN rt0.c2 END)) CROSS JOIN t0 ON (((((- (rt0.c2)))AND(rt0.c1 COLLATE BINARY)))OR(CAST(rt0.c3 AS REAL)));
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN t1 ON (((+ (rt0.c3)))%(CASE '-1157531190'  WHEN rt0.c0 THEN rt0.c2 END)) CROSS JOIN t0 ON (((((- (rt0.c2)))AND(rt0.c1 COLLATE BINARY)))OR(CAST(rt0.c3 AS REAL))) WHERE (((((((rt0.c3)AND(rt0.c0)))AND(t0.c0)))==((((t1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN t1 ON (((+ (rt0.c3)))%(CASE '-1157531190'  WHEN rt0.c0 THEN rt0.c2 END)) CROSS JOIN t0 ON (((((- (rt0.c2)))AND(rt0.c1 COLLATE BINARY)))OR(CAST(rt0.c3 AS REAL))) WHERE ((NOT (((((((rt0.c3)AND(rt0.c0)))AND(t0.c0)))=((((t1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))))) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN t1 ON (((+ (rt0.c3)))%(CASE '-1157531190'  WHEN rt0.c0 THEN rt0.c2 END)) CROSS JOIN t0 ON (((((- (rt0.c2)))AND(rt0.c1 COLLATE BINARY)))OR(CAST(rt0.c3 AS REAL))) WHERE (((((((((rt0.c3)AND(rt0.c0)))AND(t0.c0)))=((((t1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN t1 ON (((+ (rt0.c3)))%(CASE '-1157531190'  WHEN rt0.c0 THEN rt0.c2 END)) CROSS JOIN t0 ON (((((- (rt0.c2)))AND(rt0.c1 COLLATE BINARY)))OR(CAST(rt0.c3 AS REAL)));
SELECT t1.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM t1, rt0, t0 GROUP BY t1.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c3;
SELECT t1.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM t1, rt0, t0 WHERE (0.40745251166568264) GROUP BY t1.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c3 UNION SELECT t1.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM t1, rt0, t0 WHERE ((NOT (0.40745251166568264))) GROUP BY t1.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c3 UNION SELECT ALL t1.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM t1, rt0, t0 WHERE (((0.40745251166568264) ISNULL)) GROUP BY t1.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c3;
SELECT t1.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM t1, rt0, t0 GROUP BY t1.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c3;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN((NOT (MIN(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN((NOT (MIN(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN((NOT (MIN(t0.c0))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (CAST((((rt0.c2, 0xffffffffea5debe9, rt0.c0))<((0.32472792386021443, rt0.c3, rt0.c2))) AS INTEGER)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST((((rt0.c2, 0Xffffffffea5debe9, rt0.c0))<((0.32472792386021443, rt0.c3, rt0.c2))) AS INTEGER)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST((((rt0.c2, 0Xffffffffea5debe9, rt0.c0))<((0.32472792386021443, rt0.c3, rt0.c2))) AS INTEGER)) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT t1.c0, t0.c0 FROM t1 INNER JOIN t0 ON (((t0.c0 IN ()))<(((t0.c0) NOTNULL)));
SELECT DISTINCT t1.c0, t0.c0 FROM t1 INNER JOIN t0 ON (((t0.c0 IN ()))<(((t0.c0) NOTNULL))) WHERE ((- (((((t1.c0)OR(t0.c0)))AND(t1.c0))))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t1 INNER JOIN t0 ON (((t0.c0 IN ()))<(((t0.c0) NOTNULL))) WHERE ((NOT ((- (((((t1.c0)OR(t0.c0)))AND(t1.c0))))))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t1 INNER JOIN t0 ON (((t0.c0 IN ()))<(((t0.c0) NOTNULL))) WHERE ((((- (((((t1.c0)OR(t0.c0)))AND(t1.c0))))) ISNULL));
SELECT DISTINCT t1.c0, t0.c0 FROM t1 INNER JOIN t0 ON (((t0.c0 IN ()))<(((t0.c0) NOTNULL)));
SELECT ALL rt0.c1 FROM rt0, t1 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t1 WHERE (load_extension(((rt0.c3) NOT NULL), CAST(rt0.c1 AS INTEGER))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, t1 WHERE ((NOT (load_extension(((rt0.c3) NOT NULL), CAST(rt0.c1 AS INTEGER))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, t1 WHERE (((load_extension(((rt0.c3) NOT NULL), CAST(rt0.c1 AS INTEGER))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c2, t0.c0 FROM t0, t1, rt0 GROUP BY rt0.c2, t0.c0;
SELECT ALL rt0.c2, t0.c0 FROM t0, t1, rt0 GROUP BY rt0.c2, t0.c0 HAVING ((((MAX(MIN(rt0.c0)))AND((~ (rt0.c0)))))OR((AVG(AVG(t0.c0)) IN (GROUP_CONCAT(GROUP_CONCAT(COUNT(*))), rt0.c3)))) UNION ALL SELECT rt0.c2, t0.c0 FROM t0, t1, rt0 GROUP BY rt0.c2, t0.c0 HAVING (NOT (((((MAX(MIN(rt0.c0)))AND((~ (rt0.c0)))))OR((AVG(AVG(t0.c0)) IN (GROUP_CONCAT(GROUP_CONCAT(COUNT(*))), rt0.c3)))))) UNION ALL SELECT ALL rt0.c2, t0.c0 FROM t0, t1, rt0 GROUP BY rt0.c2, t0.c0 HAVING ((((((MAX(MIN(rt0.c0)))AND((~ (rt0.c0)))))OR((AVG(AVG(t0.c0)) IN (GROUP_CONCAT(GROUP_CONCAT(COUNT(*))), rt0.c3))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (x'') AND (rt0.c1))) BETWEEN ((((rt0.c2))<>((rt0.c0)))) AND (CASE WHEN rt0.c1 THEN rt0.c1 END))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (x'') AND (rt0.c1))) BETWEEN ((((rt0.c2))!=((rt0.c0)))) AND (CASE WHEN rt0.c1 THEN rt0.c1 END))))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (x'') AND (rt0.c1))) BETWEEN ((((rt0.c2))<>((rt0.c0)))) AND (CASE WHEN rt0.c1 THEN rt0.c1 END))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (NULL) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((NULL) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT rt0.c2, rt0.c0 FROM rt0, t0, t1 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, t0, t1 WHERE (((t0.c0)/(rt0.c0)) COLLATE NOCASE) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0, t0, t1 WHERE ((NOT (((t0.c0)/(rt0.c0)) COLLATE NOCASE))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0, t0, t1 WHERE (((((t0.c0)/(rt0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, t0, t1 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, t1.c0, t0.c0, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON ((((NULL)AND(((t0.c0)&(rt0.c3)))))AND(0.12139195846909301 COLLATE RTRIM)) INNER JOIN t1 ON ((('-711170791', t1.c0, t1.c0)) NOT BETWEEN ((TRIM(t1.c0, rt0.c1), rt0.c0, rt0.c1 COLLATE RTRIM)) AND ((CAST(t0.c0 AS INTEGER), t0.c0, ((rt0.c3)%(rt0.c2))))) GROUP BY rt0.c2, rt0.c3, t1.c0, t0.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, t1.c0, t0.c0, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON ((((NULL)AND(((t0.c0)&(rt0.c3)))))AND(0.12139195846909301 COLLATE RTRIM)) INNER JOIN t1 ON ((('-711170791', t1.c0, t1.c0)) NOT BETWEEN ((TRIM(t1.c0, rt0.c1), rt0.c0, rt0.c1 COLLATE RTRIM)) AND ((CAST(t0.c0 AS INTEGER), t0.c0, ((rt0.c3)%(rt0.c2))))) GROUP BY rt0.c2, rt0.c3, t1.c0, t0.c0, rt0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT rt0.c2, rt0.c3, t1.c0, t0.c0, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON ((((NULL)AND(((t0.c0)&(rt0.c3)))))AND(0.12139195846909301 COLLATE RTRIM)) INNER JOIN t1 ON ((('-711170791', t1.c0, t1.c0)) NOT BETWEEN ((TRIM(t1.c0, rt0.c1), rt0.c0, rt0.c1 COLLATE RTRIM)) AND ((CAST(t0.c0 AS INTEGER), t0.c0, ((rt0.c3)%(rt0.c2))))) GROUP BY rt0.c2, rt0.c3, t1.c0, t0.c0, rt0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT rt0.c2, rt0.c3, t1.c0, t0.c0, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON ((((NULL)AND(((t0.c0)&(rt0.c3)))))AND(0.12139195846909301 COLLATE RTRIM)) INNER JOIN t1 ON ((('-711170791', t1.c0, t1.c0)) NOT BETWEEN ((TRIM(t1.c0, rt0.c1), rt0.c0, rt0.c1 COLLATE RTRIM)) AND ((CAST(t0.c0 AS INTEGER), t0.c0, ((rt0.c3)%(rt0.c2))))) GROUP BY rt0.c2, rt0.c3, t1.c0, t0.c0, rt0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM t0, rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE (LENGTH(json_extract(rt0.c3, rt0.c1, x'', rt0.c2))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE ((NOT (LENGTH(json_extract(rt0.c3, rt0.c1, x'', rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE (((LENGTH(json_extract(rt0.c3, rt0.c1, x'', rt0.c2))) ISNULL));
SELECT DISTINCT * FROM rt0, t0, t1;
SELECT DISTINCT * FROM rt0, t0, t1 WHERE (((((((t0.c0)GLOB(t0.c0)))OR(rt0.c1)))OR((rt0.c0 IN (t0.c0))))) UNION SELECT DISTINCT * FROM rt0, t0, t1 WHERE ((NOT (((((((t0.c0)GLOB(t0.c0)))OR(rt0.c1)))OR((rt0.c0 IN (t0.c0))))))) UNION SELECT DISTINCT * FROM rt0, t0, t1 WHERE (((((((((t0.c0)GLOB(t0.c0)))OR(rt0.c1)))OR((rt0.c0 IN (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0, t1;
SELECT rt0.c3, t1.c0, rt0.c1, rt0.c0 FROM t1, t0, rt0 GROUP BY rt0.c3, t1.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, t1.c0, rt0.c1, rt0.c0 FROM t1, t0, rt0 WHERE (((((NULL)OR(CAST(rt0.c2 AS INTEGER))))OR(highlight(t0.c0, t1.c0, rt0.c1, rt0.c0)))) GROUP BY rt0.c3, t1.c0, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c3, t1.c0, rt0.c1, rt0.c0 FROM t1 NOT INDEXED, t0, rt0 WHERE ((NOT (((((NULL)OR(CAST(rt0.c2 AS INTEGER))))OR(highlight(t0.c0, t1.c0, rt0.c1, rt0.c0)))))) GROUP BY rt0.c3, t1.c0, rt0.c1, rt0.c0 UNION SELECT rt0.c3, t1.c0, rt0.c1, rt0.c0 FROM t1, t0 NOT INDEXED, rt0 WHERE (((((((NULL)OR(CAST(rt0.c2 AS INTEGER))))OR(highlight(t0.c0, t1.c0, rt0.c1, rt0.c0)))) ISNULL)) GROUP BY rt0.c3, t1.c0, rt0.c1, rt0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING (- (AVG(MIN(COUNT(t0.c0))))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING (NOT ((- (AVG(MIN(COUNT(t0.c0))))))) UNION ALL SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING (((- (AVG(MIN(COUNT(t0.c0)))))) ISNULL);
SELECT rt0.c3 FROM rt0;
SELECT ALL rt0.c3 FROM rt0 WHERE (TRIM(((rt0.c3)LIKE(rt0.c1)))) UNION ALL SELECT rt0.c3 FROM rt0 WHERE ((NOT (TRIM(((rt0.c3)LIKE(rt0.c1)))))) UNION ALL SELECT ALL rt0.c3 FROM rt0 WHERE (((TRIM(((rt0.c3)LIKE(rt0.c1)))) ISNULL));
SELECT rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c0 FROM rt0 WHERE ('1941934327') UNION SELECT DISTINCT rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT ('1941934327'))) UNION SELECT DISTINCT rt0.c3, rt0.c0 FROM rt0 WHERE ((('1941934327') ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE (NULL COLLATE NOCASE COLLATE BINARY) GROUP BY rt0.c2, rt0.c1, rt0.c3 UNION SELECT rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (NULL COLLATE NOCASE COLLATE BINARY))) GROUP BY rt0.c2, rt0.c1, rt0.c3 UNION SELECT rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE (((NULL COLLATE NOCASE COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(((((t0.c0)AND(t0.c0)))OR(AVG(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(((((t0.c0)AND(t0.c0)))OR(AVG(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(((((t0.c0)AND(t0.c0)))OR(AVG(t0.c0))))) ISNULL);
SELECT ALL * FROM rt0, t1;
SELECT * FROM rt0, t1 WHERE (json(GLOB(t1.c0, rt0.c3))) UNION ALL SELECT ALL * FROM rt0, t1 WHERE ((NOT (json(GLOB(t1.c0, rt0.c3))))) UNION ALL SELECT * FROM rt0, t1 WHERE (((json(GLOB(t1.c0, rt0.c3))) ISNULL));
SELECT ALL * FROM rt0, t1;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((((rt0.c1) NOTNULL))=((- (rt0.c3))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((((rt0.c1) NOTNULL))=((- (rt0.c3))))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((((rt0.c1) NOTNULL))==((- (rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT ALL rt0.c0, t0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c1)AND(t0.c0)) IN ((+ (NULL)))) LEFT OUTER JOIN t1 ON rt0.c3 COLLATE NOCASE GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c0, t0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c1)AND(t0.c0)) IN ((+ (NULL)))) LEFT OUTER JOIN t1 ON rt0.c3 COLLATE NOCASE WHERE (TRIM(DISTINCT ((rt0.c0)<=(t1.c0)), (rt0.c2 IN ()))) GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, t0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c1)AND(t0.c0)) IN ((+ (NULL)))) LEFT OUTER JOIN t1 ON rt0.c3 COLLATE NOCASE WHERE ((NOT (TRIM(DISTINCT ((rt0.c0)<=(t1.c0)), (rt0.c2 IN ()))))) GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, t0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c1)AND(t0.c0)) IN ((+ (NULL)))) LEFT OUTER JOIN t1 ON rt0.c3 COLLATE NOCASE WHERE (((TRIM(DISTINCT ((rt0.c0)<=(t1.c0)), (rt0.c2 IN ()))) ISNULL)) GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, t0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c1)AND(t0.c0)) IN ((+ (NULL)))) LEFT OUTER JOIN t1 ON rt0.c3 COLLATE NOCASE GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING CASE WHEN MAX(t1.c0) THEN COUNT(t1.c0) END COLLATE BINARY COLLATE BINARY UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (CASE WHEN MAX(t1.c0) THEN COUNT(t1.c0) END COLLATE BINARY COLLATE BINARY)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((CASE WHEN MAX(t1.c0) THEN COUNT(t1.c0) END COLLATE BINARY COLLATE BINARY) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING CASE WHEN MAX(t1.c0) THEN COUNT(t1.c0) END COLLATE BINARY COLLATE BINARY UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (CASE WHEN MAX(t1.c0) THEN COUNT(t1.c0) END COLLATE BINARY COLLATE BINARY)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((CASE WHEN MAX(t1.c0) THEN COUNT(t1.c0) END COLLATE BINARY COLLATE BINARY) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((((t0.c0 IN ()))AND((+ (t0.c0))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((t0.c0 IN ()))AND((+ (t0.c0))))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((t0.c0 IN ()))AND((+ (t0.c0))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((~ (((rt0.c0)>=(rt0.c3))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((~ (((rt0.c0)>=(rt0.c3))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((~ (((rt0.c0)>=(rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (((((((0xffffffffef6b6076) ISNULL))AND((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, 'y', t1.c0)) AND ((t1.c0, t1.c0, t1.c0))))))OR(t1.c0))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((((((0Xffffffffef6b6076) ISNULL))AND((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, 'y', t1.c0)) AND ((t1.c0, t1.c0, t1.c0))))))OR(t1.c0))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((((((((0Xffffffffef6b6076) ISNULL))AND((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, 'y', t1.c0)) AND ((t1.c0, t1.c0, t1.c0))))))OR(t1.c0))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING GROUP_CONCAT(COUNT(COUNT(x''))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(COUNT(x''))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((GROUP_CONCAT(COUNT(COUNT(x'')))) ISNULL);
SELECT * FROM t1;
SELECT ALL * FROM t1 WHERE ((((('J*')OR(((t1.c0)&(t1.c0)))))OR(CAST(t1.c0 AS NUMERIC)))) UNION ALL SELECT * FROM t1 WHERE ((NOT ((((('J*')OR(((t1.c0)&(t1.c0)))))OR(CAST(t1.c0 AS NUMERIC)))))) UNION ALL SELECT ALL * FROM t1 WHERE ((((((('J*')OR(((t1.c0)&(t1.c0)))))OR(CAST(t1.c0 AS NUMERIC)))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT * FROM rt0, t1 RIGHT OUTER JOIN t0 ON ((t0.c0) ISNULL);
SELECT DISTINCT * FROM rt0, t1 RIGHT OUTER JOIN t0 ON ((t0.c0) ISNULL) WHERE (NULL) UNION SELECT DISTINCT * FROM rt0, t1 RIGHT OUTER JOIN t0 ON ((t0.c0) ISNULL) WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt0, t1 RIGHT OUTER JOIN t0 ON ((t0.c0) ISNULL) WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt0, t1 RIGHT OUTER JOIN t0 ON ((t0.c0) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (x'6e6c') GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (x'6e6c'))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((x'6e6c') ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, t1.c0 FROM rt0, t1, t0 GROUP BY rt0.c2, t1.c0;
SELECT rt0.c2, t1.c0 FROM rt0, t1, t0 GROUP BY rt0.c2, t1.c0 HAVING COUNT(HEX(AVG(MAX(rt0.c0)))) UNION ALL SELECT rt0.c2, t1.c0 FROM rt0, t1, t0 GROUP BY rt0.c2, t1.c0 HAVING (NOT (COUNT(HEX(AVG(MAX(rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, t1.c0 FROM rt0, t1, t0 GROUP BY rt0.c2, t1.c0 HAVING ((COUNT(HEX(AVG(MAX(rt0.c0))))) ISNULL);
SELECT ALL t1.c0 FROM t0, t1;
SELECT t1.c0 FROM t0, t1 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t1.c0 END) IS TRUE)) UNION ALL SELECT t1.c0 FROM t0, t1 WHERE ((NOT (((CASE t0.c0  WHEN t0.c0 THEN t1.c0 END) IS TRUE)))) UNION ALL SELECT ALL t1.c0 FROM t0, t1 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t1.c0 END) IS TRUE)) ISNULL));
SELECT ALL t1.c0 FROM t0, t1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((((CAST(t0.c0 AS TEXT))AND(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))))OR(0x79ee30e1)))AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(((t0.c0)>>(x''))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((((((CAST(t0.c0 AS TEXT))AND(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))))OR(0x79ee30e1)))AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(((t0.c0)>>(x''))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((((((CAST(t0.c0 AS TEXT))AND(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))))OR(0x79ee30e1)))AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(((t0.c0)>>(x''))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL rt0.c2, t0.c0, rt0.c3 FROM t0, t1 RIGHT OUTER JOIN rt0 ON -2013232699 GROUP BY rt0.c2, t0.c0, rt0.c3;
SELECT rt0.c2, t0.c0, rt0.c3 FROM t0, t1 RIGHT OUTER JOIN rt0 ON -2013232699 WHERE (x'') GROUP BY rt0.c2, t0.c0, rt0.c3 UNION SELECT ALL rt0.c2, t0.c0, rt0.c3 FROM t0, t1 RIGHT OUTER JOIN rt0 ON -2013232699 WHERE ((NOT (x''))) GROUP BY rt0.c2, t0.c0, rt0.c3 UNION SELECT rt0.c2, t0.c0, rt0.c3 FROM t0, t1 RIGHT OUTER JOIN rt0 ON -2013232699 WHERE (((x'') ISNULL)) GROUP BY rt0.c2, t0.c0, rt0.c3;
SELECT ALL rt0.c2, t0.c0, rt0.c3 FROM t0, t1 RIGHT OUTER JOIN rt0 ON -2013232699 GROUP BY rt0.c2, t0.c0, rt0.c3;
SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING MAX(((((rt0.c2)AND(rt0.c1)))AND(MIN(COUNT(COUNT(rt0.c1)))))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING (NOT (MAX(((((rt0.c2)AND(rt0.c1)))AND(MIN(COUNT(COUNT(rt0.c1)))))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING ((MAX(((((rt0.c2)AND(rt0.c1)))AND(MIN(COUNT(COUNT(rt0.c1))))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((CAST(rt0.c1 AS REAL))) AND ((((rt0.c0) IS FALSE))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((CAST(rt0.c1 AS REAL))) AND ((((rt0.c0) IS FALSE))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((CAST(rt0.c1 AS REAL))) AND ((((rt0.c0) IS FALSE))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE (CAST((rt0.c1 IN (NULL)) AS NUMERIC)) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (CAST((rt0.c1 IN (NULL)) AS NUMERIC)))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE (((CAST((rt0.c1 IN (NULL)) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2 FROM rt0;
SELECT t0.c0, rt0.c3 FROM t0, rt0 GROUP BY t0.c0, rt0.c3;
SELECT ALL t0.c0, rt0.c3 FROM t0, rt0 WHERE (((LTRIM(rt0.c2)) BETWEEN (NULL) AND (((((t0.c0)AND('1674822492')))AND(rt0.c2))))) GROUP BY t0.c0, rt0.c3 UNION SELECT t0.c0, rt0.c3 FROM t0, rt0 WHERE ((NOT (((LTRIM(rt0.c2)) BETWEEN (NULL) AND (((((t0.c0)AND('1674822492')))AND(rt0.c2))))))) GROUP BY t0.c0, rt0.c3 UNION SELECT ALL t0.c0, rt0.c3 FROM t0, rt0 WHERE (((((LTRIM(rt0.c2)) BETWEEN (NULL) AND (((((t0.c0)AND('1674822492')))AND(rt0.c2))))) ISNULL)) GROUP BY t0.c0, rt0.c3;
SELECT t0.c0, rt0.c3 FROM t0, rt0 GROUP BY t0.c0, rt0.c3;
SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING ((AVG(rt0.c2))>=(CASE WHEN rt0.c1 THEN TOTAL(AVG(AVG(MIN(rt0.c1)))) ELSE MIN(COUNT(MIN(COUNT(*)))) END)) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING (NOT (((AVG(rt0.c2))>=(CASE WHEN rt0.c1 THEN TOTAL(AVG(AVG(MIN(rt0.c1)))) ELSE MIN(COUNT(MIN(COUNT(*)))) END)))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING ((((AVG(rt0.c2))>=(CASE WHEN rt0.c1 THEN TOTAL(AVG(AVG(MIN(rt0.c1)))) ELSE MIN(COUNT(MIN(COUNT(*)))) END))) ISNULL);
SELECT t0.c0 FROM t0, rt0;
SELECT t0.c0 FROM t0, rt0 WHERE (t0.c0) UNION ALL SELECT ALL t0.c0 FROM t0, rt0 WHERE ((NOT (t0.c0))) UNION ALL SELECT t0.c0 FROM t0, rt0 WHERE (((t0.c0) ISNULL));
SELECT t0.c0 FROM t0, rt0;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN t1 ON ((rt0.c0 IN ()) IN ()) INNER JOIN rt0 ON t0.c0;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN t1 ON ((rt0.c0 IN ()) IN ()) INNER JOIN rt0 ON t0.c0 WHERE (t1.c0) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN t1 ON ((rt0.c0 IN ()) IN ()) INNER JOIN rt0 ON t0.c0 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN t1 ON ((rt0.c0 IN ()) IN ()) INNER JOIN rt0 ON t0.c0 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN t1 ON ((rt0.c0 IN ()) IN ()) INNER JOIN rt0 ON t0.c0;
SELECT rt0.c2, t1.c0 FROM t1, rt0 GROUP BY rt0.c2, t1.c0;
SELECT ALL rt0.c2, t1.c0 FROM t1, rt0 WHERE (((rt0.c0)||((((t1.c0))>=((rt0.c2)))))) GROUP BY rt0.c2, t1.c0 UNION SELECT rt0.c2, t1.c0 FROM t1, rt0 WHERE ((NOT (((rt0.c0)||((((t1.c0))>=((rt0.c2)))))))) GROUP BY rt0.c2, t1.c0 UNION SELECT ALL rt0.c2, t1.c0 FROM t1, rt0 WHERE (((((rt0.c0)||((((t1.c0))>=((rt0.c2)))))) ISNULL)) GROUP BY rt0.c2, t1.c0;
SELECT rt0.c2, t1.c0 FROM t1, rt0 GROUP BY rt0.c2, t1.c0;
SELECT ALL rt0.c2 FROM t1, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM t1, rt0 GROUP BY rt0.c2 HAVING (((COUNT(COUNT(MIN(COUNT(t1.c0))))))>((((AVG(t1.c0)) ISNULL)))) UNION ALL SELECT ALL rt0.c2 FROM t1, rt0 GROUP BY rt0.c2 HAVING (NOT ((((COUNT(COUNT(MIN(COUNT(t1.c0))))))>((((AVG(t1.c0)) ISNULL)))))) UNION ALL SELECT ALL rt0.c2 FROM t1, rt0 NOT INDEXED GROUP BY rt0.c2 HAVING (((((COUNT(COUNT(MIN(COUNT(t1.c0))))))>((((AVG(t1.c0)) ISNULL))))) ISNULL);
SELECT ALL * FROM rt0, t1;
SELECT ALL * FROM rt0, t1 WHERE ((((t1.c0)) NOT BETWEEN ((rt0.c2)) AND ((((t1.c0) ISNULL))))) UNION ALL SELECT ALL * FROM rt0, t1 WHERE ((NOT ((((t1.c0)) NOT BETWEEN ((rt0.c2)) AND ((((t1.c0) ISNULL))))))) UNION ALL SELECT ALL * FROM rt0, t1 WHERE ((((((t1.c0)) NOT BETWEEN ((rt0.c2)) AND ((((t1.c0) ISNULL))))) ISNULL));
SELECT ALL * FROM rt0, t1;
SELECT DISTINCT rt0.c3, rt0.c2, t1.c0 FROM rt0, t1;
SELECT DISTINCT rt0.c3, rt0.c2, t1.c0 FROM rt0, t1 WHERE ((((x'e3fe') NOT BETWEEN (t1.c0) AND (rt0.c0)) IN (((x'')&(rt0.c1))))) UNION SELECT DISTINCT rt0.c3, rt0.c2, t1.c0 FROM rt0, t1 WHERE ((NOT ((((x'e3fe') NOT BETWEEN (t1.c0) AND (rt0.c0)) IN (((x'')&(rt0.c1))))))) UNION SELECT DISTINCT rt0.c3, rt0.c2, t1.c0 FROM rt0 NOT INDEXED, t1 WHERE ((((((x'e3fe') NOT BETWEEN (t1.c0) AND (rt0.c0)) IN (((x'')&(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2, t1.c0 FROM rt0, t1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (((CASE t1.c0  WHEN x'72ce' THEN t1.c0 ELSE t1.c0 END) NOT NULL)) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((CASE t1.c0  WHEN x'72ce' THEN t1.c0 ELSE t1.c0 END) NOT NULL)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((((CASE t1.c0  WHEN x'72ce' THEN t1.c0 ELSE t1.c0 END) NOT NULL)) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT * FROM t1;
SELECT ALL * FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((((t1.c0) IS FALSE))) AND ((CAST(t1.c0 AS BLOB))))) UNION ALL SELECT * FROM t1 WHERE ((NOT ((((t1.c0)) NOT BETWEEN ((((t1.c0) IS FALSE))) AND ((CAST(t1.c0 AS BLOB))))))) UNION ALL SELECT * FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((((t1.c0) IS FALSE))) AND ((CAST(t1.c0 AS BLOB))))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT t0.c0 FROM rt0, t0, t1;
SELECT DISTINCT t0.c0 FROM rt0, t0, t1 WHERE (CAST(t0.c0 AS INTEGER) COLLATE NOCASE) UNION SELECT DISTINCT t0.c0 FROM rt0, t0, t1 WHERE ((NOT (CAST(t0.c0 AS INTEGER) COLLATE NOCASE))) UNION SELECT DISTINCT t0.c0 FROM rt0, t0, t1 WHERE (((CAST(t0.c0 AS INTEGER) COLLATE NOCASE) ISNULL));
SELECT DISTINCT t0.c0 FROM rt0, t0, t1;
SELECT rt0.c0, t0.c0, t1.c0, rt0.c3 FROM rt0 INNER JOIN t0 ON ((-69019498) BETWEEN (((NULL) NOT NULL)) AND (x'')) CROSS JOIN t1 ON (((rt0.c3 IN ()))||(CAST('36790183' AS INTEGER))) GROUP BY rt0.c0, t0.c0, t1.c0, rt0.c3;
SELECT rt0.c0, t0.c0, t1.c0, rt0.c3 FROM rt0 INNER JOIN t0 ON ((-69019498) BETWEEN (((NULL) NOT NULL)) AND (x'')) CROSS JOIN t1 ON (((rt0.c3 IN ()))||(CAST('36790183' AS INTEGER))) WHERE ((((rt0.c1)LIKE(x'6f58')) IN ())) GROUP BY rt0.c0, t0.c0, t1.c0, rt0.c3 UNION SELECT ALL rt0.c0, t0.c0, t1.c0, rt0.c3 FROM rt0 INNER JOIN t0 ON ((-69019498) BETWEEN (((NULL) NOT NULL)) AND (x'')) CROSS JOIN t1 ON (((rt0.c3 IN ()))||(CAST('36790183' AS INTEGER))) WHERE ((NOT ((((rt0.c1)LIKE(x'6f58')) IN ())))) GROUP BY rt0.c0, t0.c0, t1.c0, rt0.c3 UNION SELECT ALL rt0.c0, t0.c0, t1.c0, rt0.c3 FROM rt0 INNER JOIN t0 ON ((-69019498) BETWEEN (((NULL) NOT NULL)) AND (x'')) CROSS JOIN t1 ON (((rt0.c3 IN ()))||(CAST('36790183' AS INTEGER))) WHERE ((((((rt0.c1)LIKE(x'6f58')) IN ())) ISNULL)) GROUP BY rt0.c0, t0.c0, t1.c0, rt0.c3;
SELECT rt0.c0, t0.c0, t1.c0, rt0.c3 FROM rt0 INNER JOIN t0 ON ((-69019498) BETWEEN (((NULL) NOT NULL)) AND (x'')) CROSS JOIN t1 ON (((rt0.c3 IN ()))||(CAST('36790183' AS INTEGER))) GROUP BY rt0.c0, t0.c0, t1.c0, rt0.c3;
SELECT ALL rt0.c1, t0.c0 FROM t0 LEFT OUTER JOIN t1 ON ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN t1.c0 WHEN t0.c0 THEN t1.c0 END)||(CASE WHEN rt0.c1 THEN t1.c0 WHEN rt0.c1 THEN t0.c0 WHEN t1.c0 THEN rt0.c3 WHEN t1.c0 THEN rt0.c3 WHEN rt0.c1 THEN t1.c0 ELSE rt0.c3 END)) RIGHT OUTER JOIN rt0 ON ((((('ﮕ<>bfq')) NOT BETWEEN ((t1.c0)) AND ((rt0.c1))))|(((rt0.c3)IS NOT(rt0.c1)))) GROUP BY rt0.c1, t0.c0;
SELECT ALL t1.c0 FROM t1, t0;
SELECT ALL t1.c0 FROM t1, t0 WHERE (t1.c0) UNION ALL SELECT t1.c0 FROM t1, t0 WHERE ((NOT (t1.c0))) UNION ALL SELECT t1.c0 FROM t1, t0 WHERE (((t1.c0) ISNULL));
SELECT ALL t1.c0 FROM t1, t0;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE (((t0.c0) NOT NULL) COLLATE RTRIM) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT (((t0.c0) NOT NULL) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t1, t0 WHERE (((((t0.c0) NOT NULL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT ALL t0.c0, rt0.c2 FROM t0 CROSS JOIN rt0 ON 0.8562443677135149 GROUP BY t0.c0, rt0.c2;
SELECT ALL t0.c0, rt0.c2 FROM t0 CROSS JOIN rt0 ON 0.8562443677135149 WHERE ((('-1666492688')LIKE((((rt0.c3))<=((rt0.c0)))))) GROUP BY t0.c0, rt0.c2 UNION SELECT t0.c0, rt0.c2 FROM t0 CROSS JOIN rt0 ON 0.8562443677135149 WHERE ((NOT ((('-1666492688')LIKE((((rt0.c3))<=((rt0.c0)))))))) GROUP BY t0.c0, rt0.c2 UNION SELECT ALL t0.c0, rt0.c2 FROM t0 CROSS JOIN rt0 ON 0.8562443677135149 WHERE ((((('-1666492688')LIKE((((rt0.c3))<=((rt0.c0)))))) ISNULL)) GROUP BY t0.c0, rt0.c2;
SELECT ALL t0.c0, rt0.c2 FROM t0 CROSS JOIN rt0 ON 0.8562443677135149 GROUP BY t0.c0, rt0.c2;
SELECT ALL t0.c0, rt0.c3, rt0.c2, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON ((((0Xffffffffc7c94bc2) IS FALSE))OR(MIN(rt0.c1, x'bbda', rt0.c1, rt0.c3))) GROUP BY t0.c0, rt0.c3, rt0.c2, rt0.c0;
SELECT ALL t0.c0, rt0.c3, rt0.c2, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON ((((0Xffffffffc7c94bc2) IS FALSE))OR(MIN(rt0.c1, x'bbda', rt0.c1, rt0.c3))) GROUP BY t0.c0, rt0.c3, rt0.c2, rt0.c0 HAVING (((t0.c0))<=((GROUP_CONCAT(MAX(rt0.c1))))) UNION ALL SELECT t0.c0, rt0.c3, rt0.c2, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON ((((0Xffffffffc7c94bc2) IS FALSE))OR(MIN(rt0.c1, x'bbda', rt0.c1, rt0.c3))) GROUP BY t0.c0, rt0.c3, rt0.c2, rt0.c0 HAVING (NOT ((((t0.c0))<=((GROUP_CONCAT(MAX(rt0.c1))))))) UNION ALL SELECT ALL t0.c0, rt0.c3, rt0.c2, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON ((((0Xffffffffc7c94bc2) IS FALSE))OR(MIN(rt0.c1, x'bbda', rt0.c1, rt0.c3))) GROUP BY t0.c0, rt0.c3, rt0.c2, rt0.c0 HAVING (((((t0.c0))<=((GROUP_CONCAT(MAX(rt0.c1)))))) ISNULL);
SELECT * FROM t1 CROSS JOIN rt0 ON (~ (CAST(t1.c0 AS BLOB)));
SELECT * FROM t1 CROSS JOIN rt0 ON (~ (CAST(t1.c0 AS BLOB))) WHERE (CAST(rt0.c0 AS INTEGER)) UNION ALL SELECT * FROM t1 CROSS JOIN rt0 ON (~ (CAST(t1.c0 AS BLOB))) WHERE ((NOT (CAST(rt0.c0 AS INTEGER)))) UNION ALL SELECT ALL * FROM t1 CROSS JOIN rt0 ON (~ (CAST(t1.c0 AS BLOB))) WHERE (((CAST(rt0.c0 AS INTEGER)) ISNULL));
SELECT * FROM t1 CROSS JOIN rt0 ON (~ (CAST(t1.c0 AS BLOB)));
SELECT DISTINCT * FROM t1 RIGHT OUTER JOIN rt0 ON ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)))AND(((rt0.c2)*(t0.c0)))))AND(CASE t0.c0  WHEN rt0.c1 THEN x'68a2' END)) RIGHT OUTER JOIN t0 ON CAST(HEX(DISTINCT rt0.c0) AS NUMERIC);
SELECT ALL t0.c0, rt0.c3, rt0.c0, rt0.c2 FROM t0, t1, rt0 GROUP BY t0.c0, rt0.c3, rt0.c0, rt0.c2;
SELECT ALL t0.c0, rt0.c3, rt0.c0, rt0.c2 FROM t0, t1, rt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) GROUP BY t0.c0, rt0.c3, rt0.c0, rt0.c2 UNION SELECT t0.c0, rt0.c3, rt0.c0, rt0.c2 FROM t0, t1, rt0 WHERE ((NOT ((NOT (((rt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))))) GROUP BY t0.c0, rt0.c3, rt0.c0, rt0.c2 UNION SELECT t0.c0, rt0.c3, rt0.c0, rt0.c2 FROM t0, t1, rt0 WHERE ((((NOT (((rt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) ISNULL)) GROUP BY t0.c0, rt0.c3, rt0.c0, rt0.c2;
SELECT ALL t0.c0, rt0.c3, rt0.c0, rt0.c2 FROM t0, t1, rt0 GROUP BY t0.c0, rt0.c3, rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c1, t1.c0, t0.c0 FROM t1, t0, rt0 GROUP BY rt0.c2, rt0.c1, t1.c0, t0.c0;
SELECT rt0.c2, rt0.c1, t1.c0, t0.c0 FROM t1, t0, rt0 GROUP BY rt0.c2, rt0.c1, t1.c0, t0.c0 HAVING rt0.c3 UNION ALL SELECT ALL rt0.c2, rt0.c1, t1.c0, t0.c0 FROM t1, t0, rt0 GROUP BY rt0.c2, rt0.c1, t1.c0, t0.c0 HAVING (NOT (rt0.c3)) UNION ALL SELECT rt0.c2, rt0.c1, t1.c0, t0.c0 FROM t1, t0, rt0 GROUP BY rt0.c2, rt0.c1, t1.c0, t0.c0 HAVING ((rt0.c3) ISNULL);
SELECT ALL rt0.c2, rt0.c1, t1.c0, t0.c0 FROM t1, t0, rt0 GROUP BY rt0.c2, rt0.c1, t1.c0, t0.c0;
SELECT rt0.c2, rt0.c1, t1.c0, t0.c0 FROM t1, t0, rt0 GROUP BY rt0.c2, rt0.c1, t1.c0, t0.c0 HAVING rt0.c3 UNION ALL SELECT ALL rt0.c2, rt0.c1, t1.c0, t0.c0 FROM t1, t0, rt0 GROUP BY rt0.c2, rt0.c1, t1.c0, t0.c0 HAVING (NOT (rt0.c3)) UNION ALL SELECT rt0.c2, rt0.c1, t1.c0, t0.c0 FROM t1, t0, rt0 GROUP BY rt0.c2, rt0.c1, t1.c0, t0.c0 HAVING ((rt0.c3) ISNULL);
SELECT ALL rt0.c2, rt0.c1, t1.c0, t0.c0 FROM t1, t0, rt0 GROUP BY rt0.c2, rt0.c1, t1.c0, t0.c0;
SELECT ALL t1.c0 FROM rt0, t0, t1;
SELECT t1.c0 FROM rt0, t0, t1 WHERE (CAST(t1.c0 AS INTEGER) COLLATE NOCASE) UNION ALL SELECT t1.c0 FROM rt0, t0, t1 WHERE ((NOT (CAST(t1.c0 AS INTEGER) COLLATE NOCASE))) UNION ALL SELECT t1.c0 FROM rt0, t0, t1 WHERE (((CAST(t1.c0 AS INTEGER) COLLATE NOCASE) ISNULL));
SELECT ALL t1.c0 FROM rt0, t0, t1;
SELECT DISTINCT * FROM t1 NATURAL JOIN rt0;
SELECT DISTINCT * FROM t1 NATURAL JOIN rt0 WHERE (((((((((((rt0.c2)AND(rt0.c3)))AND('2073605997')))OR(t1.c0)))OR(rt0.c1)))!=(CASE WHEN rt0.c3 THEN t1.c0 END))) UNION SELECT DISTINCT * FROM t1 NATURAL JOIN rt0 WHERE ((NOT (((((((((((rt0.c2)AND(rt0.c3)))AND('2073605997')))OR(t1.c0)))OR(rt0.c1)))!=(CASE WHEN rt0.c3 THEN t1.c0 END))))) UNION SELECT DISTINCT * FROM t1 NATURAL JOIN rt0 WHERE (((((((((((((rt0.c2)AND(rt0.c3)))AND('2073605997')))OR(t1.c0)))OR(rt0.c1)))!=(CASE WHEN rt0.c3 THEN t1.c0 END))) ISNULL));
SELECT DISTINCT * FROM t1 NATURAL JOIN rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (x'') GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (x''))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING ((((t1.c0) BETWEEN (MIN(TOTAL(COUNT(*)))) AND (MAX(x'960f'))))OR(((t0.c0)/(COUNT(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING (NOT (((((t1.c0) BETWEEN (MIN(TOTAL(COUNT(*)))) AND (MAX(x'960f'))))OR(((t0.c0)/(COUNT(t0.c0))))))) UNION ALL SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING ((((((t1.c0) BETWEEN (MIN(TOTAL(COUNT(*)))) AND (MAX(x'960f'))))OR(((t0.c0)/(COUNT(t0.c0)))))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (((CAST(t0.c0 AS INTEGER))+(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((CAST(t0.c0 AS INTEGER))+(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((CAST(t0.c0 AS INTEGER))+(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM rt0 INDEXED BY i57, t0, t1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ((((+ (t1.c0)))IS(LAST_INSERT_ROWID()))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((((+ (t1.c0)))IS(LAST_INSERT_ROWID()))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((((((+ (t1.c0)))IS(LAST_INSERT_ROWID()))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2 HAVING CAST(COUNT(rt0.c3) AS NUMERIC) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2 HAVING (NOT (CAST(COUNT(rt0.c3) AS NUMERIC))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2 HAVING ((CAST(COUNT(rt0.c3) AS NUMERIC)) ISNULL);
SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2 HAVING CAST(COUNT(rt0.c3) AS NUMERIC) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2 HAVING (NOT (CAST(COUNT(rt0.c3) AS NUMERIC))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2 HAVING ((CAST(COUNT(rt0.c3) AS NUMERIC)) ISNULL);
SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2;
SELECT * FROM t1;
SELECT * FROM t1 WHERE (((t1.c0 COLLATE NOCASE)&((((t1.c0, t1.c0, t1.c0))=((t1.c0, t1.c0, 0x28ff8e56)))))) UNION ALL SELECT * FROM t1 WHERE ((NOT (((t1.c0 COLLATE NOCASE)&((((t1.c0, t1.c0, t1.c0))==((t1.c0, t1.c0, 0X28ff8e56)))))))) UNION ALL SELECT * FROM t1 WHERE (((((t1.c0 COLLATE NOCASE)&((((t1.c0, t1.c0, t1.c0))==((t1.c0, t1.c0, 0X28ff8e56)))))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT * FROM t0, t1, rt0;
SELECT DISTINCT * FROM t0, t1, rt0 WHERE (json_valid(LIKELY(t1.c0))) UNION SELECT DISTINCT * FROM t0, t1, rt0 WHERE ((NOT (json_valid(LIKELY(t1.c0))))) UNION SELECT DISTINCT * FROM t0, t1, rt0 WHERE (((json_valid(LIKELY(t1.c0))) ISNULL));
SELECT DISTINCT * FROM t0, t1, rt0;
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t1, t0 WHERE (CASE t0.c0  WHEN ((NULL) NOT BETWEEN (t0.c0) AND (t1.c0)) THEN t1.c0 ELSE (- (t0.c0)) END) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t1, t0 WHERE ((NOT (CASE t0.c0  WHEN ((NULL) NOT BETWEEN (t0.c0) AND (t1.c0)) THEN t1.c0 ELSE (- (t0.c0)) END))) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t1, t0 WHERE (((CASE t0.c0  WHEN ((NULL) NOT BETWEEN (t0.c0) AND (t1.c0)) THEN t1.c0 ELSE (- (t0.c0)) END) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT rt0.c0, t0.c0, rt0.c3, t1.c0, rt0.c1, rt0.c2 FROM t1, t0, rt0 GROUP BY rt0.c0, t0.c0, rt0.c3, t1.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, t0.c0, rt0.c3, t1.c0, rt0.c1, rt0.c2 FROM t1, t0, rt0 GROUP BY rt0.c0, t0.c0, rt0.c3, t1.c0, rt0.c1, rt0.c2 HAVING GROUP_CONCAT(MIN(t1.c0)) UNION ALL SELECT ALL rt0.c0, t0.c0, rt0.c3, t1.c0, rt0.c1, rt0.c2 FROM t1, t0, rt0 GROUP BY rt0.c0, t0.c0, rt0.c3, t1.c0, rt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT(MIN(t1.c0)))) UNION ALL SELECT rt0.c0, t0.c0, rt0.c3, t1.c0, rt0.c1, rt0.c2 FROM t1, t0, rt0 GROUP BY rt0.c0, t0.c0, rt0.c3, t1.c0, rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(MIN(t1.c0))) ISNULL);
SELECT TOTAL((((t0.c0 IN ())) NOT BETWEEN ((~ (rt0.c2))) AND (CASE WHEN rt0.c2 THEN rt0.c1 END))) FROM rt0, t0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((~ (rt0.c3))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((~ (rt0.c3))))) UNION ALL SELECT * FROM rt0 WHERE ((((~ (rt0.c3))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c3, t0.c0, t1.c0, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN t1 ON CAST(((t0.c0)>>(t1.c0)) AS REAL) CROSS JOIN t0 ON rt0.c0;
SELECT rt0.c3, rt0.c1, t0.c0 FROM rt0, t0 GROUP BY rt0.c3, rt0.c1, t0.c0;
SELECT ALL rt0.c3, rt0.c1, t0.c0 FROM rt0, t0 WHERE (((((CASE rt0.c1  WHEN x'b7b0' THEN rt0.c1 ELSE t0.c0 END)OR(CAST('-1207016956' AS INTEGER))))OR(((rt0.c3)<<(rt0.c1))))) GROUP BY rt0.c3, rt0.c1, t0.c0 UNION SELECT rt0.c3, rt0.c1, t0.c0 FROM rt0, t0 WHERE ((NOT (((((CASE rt0.c1  WHEN x'b7b0' THEN rt0.c1 ELSE t0.c0 END)OR(CAST('-1207016956' AS INTEGER))))OR(((rt0.c3)<<(rt0.c1))))))) GROUP BY rt0.c3, rt0.c1, t0.c0 UNION SELECT rt0.c3, rt0.c1, t0.c0 FROM rt0, t0 WHERE (((((((CASE rt0.c1  WHEN x'b7b0' THEN rt0.c1 ELSE t0.c0 END)OR(CAST('-1207016956' AS INTEGER))))OR(((rt0.c3)<<(rt0.c1))))) ISNULL)) GROUP BY rt0.c3, rt0.c1, t0.c0;
SELECT rt0.c3, rt0.c1, t0.c0 FROM rt0, t0 GROUP BY rt0.c3, rt0.c1, t0.c0;
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(t1.c0))*(GROUP_CONCAT(AVG(t1.c0)))) UNION ALL SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING (NOT (((GROUP_CONCAT(t1.c0))*(GROUP_CONCAT(AVG(t1.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING ((((GROUP_CONCAT(t1.c0))*(GROUP_CONCAT(AVG(t1.c0))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) IN ())) ORDER BY ((((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c3)))OR(CAST(rt0.c3 AS REAL))))OR(((rt0.c2)*(rt0.c1)))))AND(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3))));
SELECT * FROM rt0 WHERE ((NOT ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) IN ())))) ORDER BY ((((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c3)))OR(CAST(rt0.c3 AS REAL))))OR(((rt0.c2)*(rt0.c1)))))AND(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) IN ())) ISNULL)) ORDER BY ((((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c3)))OR(CAST(rt0.c3 AS REAL))))OR(((rt0.c2)*(rt0.c1)))))AND(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3))));
SELECT * FROM rt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CAST('1233998749' AS NUMERIC)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CAST('1233998749' AS NUMERIC)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CAST('1233998749' AS NUMERIC)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (((((t1.c0 COLLATE BINARY)AND(((((t1.c0)OR(t1.c0)))OR(t1.c0)))))AND(((((t1.c0)OR(t1.c0)))AND(t1.c0))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((((t1.c0 COLLATE BINARY)AND(((((t1.c0)OR(t1.c0)))OR(t1.c0)))))AND(((((t1.c0)OR(t1.c0)))AND(t1.c0))))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((((t1.c0 COLLATE BINARY)AND(((((t1.c0)OR(t1.c0)))OR(t1.c0)))))AND(((((t1.c0)OR(t1.c0)))AND(t1.c0))))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t0.c0, t1.c0, rt0.c1 FROM t1, t0, rt0 GROUP BY t0.c0, t1.c0, rt0.c1;
SELECT ALL t0.c0, t1.c0, rt0.c1 FROM t1, t0, rt0 GROUP BY t0.c0, t1.c0, rt0.c1 HAVING (((MAX(COUNT(*))))!=((((GROUP_CONCAT(rt0.c3)) IS FALSE)))) UNION ALL SELECT ALL t0.c0, t1.c0, rt0.c1 FROM t1, t0, rt0 GROUP BY t0.c0, t1.c0, rt0.c1 HAVING (NOT ((((MAX(COUNT(*))))!=((((GROUP_CONCAT(rt0.c3)) IS FALSE)))))) UNION ALL SELECT t0.c0, t1.c0, rt0.c1 FROM t1, t0, rt0 GROUP BY t0.c0, t1.c0, rt0.c1 HAVING (((((MAX(COUNT(*))))<>((((GROUP_CONCAT(rt0.c3)) IS FALSE))))) ISNULL);
SELECT SUM((- (CASE WHEN rt0.c3 THEN NULL ELSE t1.c0 END))) FROM rt0, t1, t0;
SELECT ALL rt0.c1, rt0.c3 FROM t1, rt0, t0;
SELECT ALL rt0.c1, rt0.c3 FROM t1, rt0, t0 WHERE (((((rt0.c0)IS(0.8770532356940846)))+(((rt0.c2) IS TRUE)))) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM t1, rt0, t0 WHERE ((NOT (((((rt0.c0)IS(0.8770532356940846)))+(((rt0.c2) IS TRUE)))))) UNION ALL SELECT rt0.c1, rt0.c3 FROM t1, rt0, t0 WHERE (((((((rt0.c0)IS(0.8770532356940846)))+(((rt0.c2) IS TRUE)))) ISNULL));
SELECT ALL rt0.c1, rt0.c3 FROM t1, rt0, t0;
SELECT DISTINCT * FROM t0, t1, rt0;
SELECT DISTINCT * FROM t0, t1, rt0 WHERE (CAST(((rt0.c1)IS(rt0.c3)) AS BLOB)) UNION SELECT DISTINCT * FROM t0, t1, rt0 WHERE ((NOT (CAST(((rt0.c1)IS(rt0.c3)) AS BLOB)))) UNION SELECT DISTINCT * FROM t0, t1, rt0 WHERE (((CAST(((rt0.c1)IS(rt0.c3)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM t0, t1, rt0;
SELECT rt0.c2 FROM t0, rt0, t1 GROUP BY rt0.c2;
SELECT rt0.c2 FROM t0, rt0, t1 WHERE (((((((rt0.c1)GLOB(rt0.c1)))OR(((t1.c0) IS TRUE))))AND(((t0.c0) NOT BETWEEN (rt0.c1) AND (0.8653367268271663))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM t0, rt0, t1 WHERE ((NOT (((((((rt0.c1)GLOB(rt0.c1)))OR(((t1.c0) IS TRUE))))AND(((t0.c0) NOT BETWEEN (rt0.c1) AND (0.8653367268271663))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM t0, rt0, t1 WHERE (((((((((rt0.c1)GLOB(rt0.c1)))OR(((t1.c0) IS TRUE))))AND(((t0.c0) NOT BETWEEN (rt0.c1) AND (0.8653367268271663))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM t0, rt0, t1 GROUP BY rt0.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM(SUM(t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM(SUM(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(SUM(t0.c0))) ISNULL);
SELECT * FROM t1, rt0, t0;
SELECT * FROM t1, rt0, t0 WHERE (((t1.c0) ISNULL)) UNION ALL SELECT * FROM t1, rt0, t0 WHERE ((NOT (((t1.c0) ISNULL)))) UNION ALL SELECT * FROM t1, rt0, t0 WHERE (((((t1.c0) ISNULL)) ISNULL));
SELECT * FROM t1, rt0, t0;
SELECT DISTINCT rt0.c2, t0.c0 FROM t0, rt0;
SELECT DISTINCT rt0.c2, t0.c0 FROM t0, rt0 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c0 ELSE -1e500 END)OR(0.058002691873684786))) UNION SELECT DISTINCT rt0.c2, t0.c0 FROM t0, rt0 WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c0 ELSE -1e500 END)OR(0.058002691873684786))))) UNION SELECT DISTINCT rt0.c2, t0.c0 FROM t0, rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c0 ELSE -1e500 END)OR(0.058002691873684786))) ISNULL));
SELECT DISTINCT rt0.c2, t0.c0 FROM t0, rt0;
SELECT t1.c0, t0.c0 FROM t0, t1 INDEXED BY i42 GROUP BY t1.c0, t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL((((MAX('{*g\nA')))<=((GROUP_CONCAT(AVG(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL((((MAX('{*g\nA')))<=((GROUP_CONCAT(AVG(t0.c0)))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL((((MAX('{*g\nA')))<=((GROUP_CONCAT(AVG(t0.c0))))))) ISNULL);
SELECT ALL * FROM rt0, t0 FULL OUTER JOIN t1 ON (((t1.c0)) BETWEEN ((((t1.c0) BETWEEN (t0.c0) AND (rt0.c1)))) AND ((CASE rt0.c1  WHEN t0.c0 THEN rt0.c1 END)));
SELECT * FROM rt0, t0 FULL OUTER JOIN t1 ON (((t1.c0)) BETWEEN ((((t1.c0) BETWEEN (t0.c0) AND (rt0.c1)))) AND ((CASE rt0.c1  WHEN t0.c0 THEN rt0.c1 END))) WHERE ((((('-2100883786')=(t1.c0)))>>(CAST(t1.c0 AS TEXT)))) UNION ALL SELECT ALL * FROM rt0, t0 FULL OUTER JOIN t1 ON (((t1.c0)) BETWEEN ((((t1.c0) BETWEEN (t0.c0) AND (rt0.c1)))) AND ((CASE rt0.c1  WHEN t0.c0 THEN rt0.c1 END))) WHERE ((NOT ((((('-2100883786')==(t1.c0)))>>(CAST(t1.c0 AS TEXT)))))) UNION ALL SELECT * FROM rt0, t0 FULL OUTER JOIN t1 ON (((t1.c0)) BETWEEN ((((t1.c0) BETWEEN (t0.c0) AND (rt0.c1)))) AND ((CASE rt0.c1  WHEN t0.c0 THEN rt0.c1 END))) WHERE ((((((('-2100883786')==(t1.c0)))>>(CAST(t1.c0 AS TEXT)))) ISNULL));
SELECT ALL * FROM rt0, t0 FULL OUTER JOIN t1 ON (((t1.c0)) BETWEEN ((((t1.c0) BETWEEN (t0.c0) AND (rt0.c1)))) AND ((CASE rt0.c1  WHEN t0.c0 THEN rt0.c1 END)));
SELECT DISTINCT * FROM t1, rt0 FULL OUTER JOIN t0 ON ((CAST(rt0.c0 AS REAL)) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) AND (((((((((rt0.c0)OR(rt0.c0)))OR(x'206f')))AND(rt0.c2)))AND(rt0.c0))));
SELECT DISTINCT * FROM t1, rt0 FULL OUTER JOIN t0 ON ((CAST(rt0.c0 AS REAL)) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) AND (((((((((rt0.c0)OR(rt0.c0)))OR(x'206f')))AND(rt0.c2)))AND(rt0.c0)))) WHERE (((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))) AND ('1198440141'))) UNION SELECT DISTINCT * FROM t1, rt0 FULL OUTER JOIN t0 ON ((CAST(rt0.c0 AS REAL)) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) AND (((((((((rt0.c0)OR(rt0.c0)))OR(x'206f')))AND(rt0.c2)))AND(rt0.c0)))) WHERE ((NOT (((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))) AND ('1198440141'))))) UNION SELECT DISTINCT * FROM t1, rt0 FULL OUTER JOIN t0 ON ((CAST(rt0.c0 AS REAL)) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) AND (((((((((rt0.c0)OR(rt0.c0)))OR(x'206f')))AND(rt0.c2)))AND(rt0.c0)))) WHERE (((((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))) AND ('1198440141'))) ISNULL));
SELECT DISTINCT * FROM t1, rt0 FULL OUTER JOIN t0 ON ((CAST(rt0.c0 AS REAL)) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) AND (((((((((rt0.c0)OR(rt0.c0)))OR(x'206f')))AND(rt0.c2)))AND(rt0.c0))));
SELECT rt0.c3, rt0.c2 FROM t1, rt0, t0 GROUP BY rt0.c3, rt0.c2;
SELECT rt0.c3, rt0.c2 FROM t1, rt0, t0 WHERE (((((t0.c0)<(rt0.c3))) NOT NULL)) GROUP BY rt0.c3, rt0.c2 UNION SELECT rt0.c3, rt0.c2 FROM t1, rt0, t0 WHERE ((NOT (((((t0.c0)<(rt0.c3))) NOT NULL)))) GROUP BY rt0.c3, rt0.c2 UNION SELECT rt0.c3, rt0.c2 FROM t1, rt0, t0 WHERE (((((((t0.c0)<(rt0.c3))) NOT NULL)) ISNULL)) GROUP BY rt0.c3, rt0.c2;
SELECT rt0.c3, rt0.c2 FROM t1, rt0, t0 GROUP BY rt0.c3, rt0.c2;
SELECT ALL t1.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM t1 NATURAL JOIN rt0 GROUP BY t1.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT t1.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM t1 NATURAL JOIN rt0 GROUP BY t1.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING TOTAL(NULL) UNION ALL SELECT t1.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM t1 NATURAL JOIN rt0 GROUP BY t1.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING (NOT (TOTAL(NULL))) UNION ALL SELECT t1.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM t1 NATURAL JOIN rt0 GROUP BY t1.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING ((TOTAL(NULL)) ISNULL);
SELECT ALL t1.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM t1 NATURAL JOIN rt0 GROUP BY t1.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT t1.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM t1 NATURAL JOIN rt0 GROUP BY t1.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING TOTAL(NULL) UNION ALL SELECT t1.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM t1 NATURAL JOIN rt0 GROUP BY t1.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING (NOT (TOTAL(NULL))) UNION ALL SELECT t1.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM t1 NATURAL JOIN rt0 GROUP BY t1.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING ((TOTAL(NULL)) ISNULL);
SELECT ALL t1.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM t1 NATURAL JOIN rt0 GROUP BY t1.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT ALL * FROM rt0, t0 LEFT OUTER JOIN t1 ON (((rt0.c0) ISNULL) IN (CASE WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END));
SELECT ALL * FROM rt0, t0 LEFT OUTER JOIN t1 ON (((rt0.c0) ISNULL) IN (CASE WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END)) WHERE (0.3153686980141065) UNION ALL SELECT ALL * FROM rt0, t0 LEFT OUTER JOIN t1 ON (((rt0.c0) ISNULL) IN (CASE WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END)) WHERE ((NOT (0.3153686980141065))) UNION ALL SELECT ALL * FROM rt0, t0 LEFT OUTER JOIN t1 ON (((rt0.c0) ISNULL) IN (CASE WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END)) WHERE (((0.3153686980141065) ISNULL));
SELECT ALL * FROM rt0, t0 LEFT OUTER JOIN t1 ON (((rt0.c0) ISNULL) IN (CASE WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END));
SELECT DISTINCT * FROM rt0, t0, t1;
SELECT DISTINCT * FROM rt0, t0, t1 WHERE ((- (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN t0.c0 WHEN t1.c0 THEN rt0.c1 ELSE rt0.c2 END))) UNION SELECT DISTINCT * FROM rt0, t0, t1 WHERE ((NOT ((- (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN t0.c0 WHEN t1.c0 THEN rt0.c1 ELSE rt0.c2 END))))) UNION SELECT DISTINCT * FROM rt0, t0, t1 WHERE ((((- (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN t0.c0 WHEN t1.c0 THEN rt0.c1 ELSE rt0.c2 END))) ISNULL));
SELECT DISTINCT * FROM rt0, t0, t1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CASE WHEN t0.c0 THEN LIKELY(NULL) WHEN ']^#' THEN (t0.c0 IN ()) WHEN ((t0.c0)IS(-1572104501)) THEN (((0.5355918493713379))<((t0.c0))) END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CASE WHEN t0.c0 THEN LIKELY(NULL) WHEN ']^#' THEN (t0.c0 IN ()) WHEN ((t0.c0)IS(-1572104501)) THEN (((0.5355918493713379))<((t0.c0))) END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CASE WHEN t0.c0 THEN LIKELY(NULL) WHEN ']^#' THEN (t0.c0 IN ()) WHEN ((t0.c0)IS(-1572104501)) THEN (((0.5355918493713379))<((t0.c0))) END) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY t1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT t1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY t1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING CASE ((rt0.c2)|(rt0.c0))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (t1.c0)) THEN (((AVG(GROUP_CONCAT(rt0.c2))))==((TOTAL(GROUP_CONCAT(COUNT(*)))))) WHEN GROUP_CONCAT(AVG('v^C8N1')) THEN ((((rt0.c0)AND(t1.c0)))OR(t1.c0)) WHEN SUM(rt0.c1) THEN ((COUNT(*))IS(NULL)) END UNION ALL SELECT ALL t1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY t1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (CASE ((rt0.c2)|(rt0.c0))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (t1.c0)) THEN (((AVG(GROUP_CONCAT(rt0.c2))))=((TOTAL(GROUP_CONCAT(COUNT(*)))))) WHEN GROUP_CONCAT(AVG('v^C8N1')) THEN ((((rt0.c0)AND(t1.c0)))OR(t1.c0)) WHEN SUM(rt0.c1) THEN ((COUNT(*))IS(NULL)) END)) UNION ALL SELECT t1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY t1.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING ((CASE ((rt0.c2)|(rt0.c0))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (t1.c0)) THEN (((AVG(GROUP_CONCAT(rt0.c2))))=((TOTAL(GROUP_CONCAT(COUNT(*)))))) WHEN GROUP_CONCAT(AVG('v^C8N1')) THEN ((((rt0.c0)AND(t1.c0)))OR(t1.c0)) WHEN SUM(rt0.c1) THEN ((COUNT(*))IS(NULL)) END) ISNULL);
SELECT t0.c0, rt0.c3 FROM t0, rt0 RIGHT OUTER JOIN t1 ON (NOT ((rt0.c0 IN ())));
SELECT ALL t0.c0, rt0.c3 FROM t0, rt0 RIGHT OUTER JOIN t1 ON (NOT ((rt0.c0 IN ()))) WHERE (((((rt0.c0)|(rt0.c0))) IS FALSE)) UNION ALL SELECT ALL t0.c0, rt0.c3 FROM t0, rt0 RIGHT OUTER JOIN t1 ON (NOT ((rt0.c0 IN ()))) WHERE ((NOT (((((rt0.c0)|(rt0.c0))) IS FALSE)))) UNION ALL SELECT ALL t0.c0, rt0.c3 FROM t0, rt0 RIGHT OUTER JOIN t1 ON (NOT ((rt0.c0 IN ()))) WHERE (((((((rt0.c0)|(rt0.c0))) IS FALSE)) ISNULL));
SELECT t0.c0, rt0.c3 FROM t0, rt0 RIGHT OUTER JOIN t1 ON (NOT ((rt0.c0 IN ())));
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE ((NULLIF(rt0.c2, rt0.c3) IN ())) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT ((NULLIF(rt0.c2, rt0.c3) IN ())))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((((NULLIF(rt0.c2, rt0.c3) IN ())) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL t1.c0, rt0.c0, rt0.c2, rt0.c3 FROM t1, rt0 GROUP BY t1.c0, rt0.c0, rt0.c2, rt0.c3;
SELECT t1.c0, rt0.c0, rt0.c2, rt0.c3 FROM t1, rt0 WHERE (((rt0.c2) BETWEEN (t1.c0) AND (rt0.c0)) COLLATE BINARY) GROUP BY t1.c0, rt0.c0, rt0.c2, rt0.c3 UNION SELECT t1.c0, rt0.c0, rt0.c2, rt0.c3 FROM t1, rt0 WHERE ((NOT (((rt0.c2) BETWEEN (t1.c0) AND (rt0.c0)) COLLATE BINARY))) GROUP BY t1.c0, rt0.c0, rt0.c2, rt0.c3 UNION SELECT t1.c0, rt0.c0, rt0.c2, rt0.c3 FROM t1, rt0 WHERE (((((rt0.c2) BETWEEN (t1.c0) AND (rt0.c0)) COLLATE BINARY) ISNULL)) GROUP BY t1.c0, rt0.c0, rt0.c2, rt0.c3;
SELECT ALL t1.c0, rt0.c0, rt0.c2, rt0.c3 FROM t1, rt0 GROUP BY t1.c0, rt0.c0, rt0.c2, rt0.c3;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((t0.c0 IN ())) BETWEEN (AVG(t0.c0)) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((AVG(COUNT(COUNT(*)))))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((t0.c0 IN ())) BETWEEN (AVG(t0.c0)) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((AVG(COUNT(COUNT(*)))))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((t0.c0 IN ())) BETWEEN (AVG(t0.c0)) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((AVG(COUNT(COUNT(*))))))))) ISNULL);
SELECT MIN(CAST(CAST(t1.c0 AS TEXT) AS TEXT)) FROM t0, rt0, t1;
SELECT ALL * FROM t0 INDEXED BY i57, t1, rt0;
SELECT DISTINCT t0.c0 FROM t1 NATURAL JOIN t0;
SELECT DISTINCT t0.c0 FROM t1 NATURAL JOIN t0 WHERE ((CAST(t1.c0 AS REAL) IN ())) UNION SELECT DISTINCT t0.c0 FROM t1 NATURAL JOIN t0 WHERE ((NOT ((CAST(t1.c0 AS REAL) IN ())))) UNION SELECT DISTINCT t0.c0 FROM t1 NATURAL JOIN t0 WHERE ((((CAST(t1.c0 AS REAL) IN ())) ISNULL));
SELECT DISTINCT t0.c0 FROM t1 NATURAL JOIN t0;
SELECT ALL rt0.c2, t0.c0, rt0.c3 FROM t0, rt0 GROUP BY rt0.c2, t0.c0, rt0.c3;
SELECT rt0.c2, t0.c0, rt0.c3 FROM t0, rt0 WHERE (((((rt0.c2)IS('䁝y'))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END) AND ((- (rt0.c0))))) GROUP BY rt0.c2, t0.c0, rt0.c3 UNION SELECT rt0.c2, t0.c0, rt0.c3 FROM t0, rt0 WHERE ((NOT (((((rt0.c2)IS('䁝y'))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END) AND ((- (rt0.c0))))))) GROUP BY rt0.c2, t0.c0, rt0.c3 UNION SELECT ALL rt0.c2, t0.c0, rt0.c3 FROM t0, rt0 WHERE (((((((rt0.c2)IS('䁝y'))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END) AND ((- (rt0.c0))))) ISNULL)) GROUP BY rt0.c2, t0.c0, rt0.c3;
SELECT ALL rt0.c2, t0.c0, rt0.c3 FROM t0, rt0 GROUP BY rt0.c2, t0.c0, rt0.c3;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*))*(COUNT(0.8435683590158889))) COLLATE BINARY UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((COUNT(*))*(COUNT(0.8435683590158889))) COLLATE BINARY)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((COUNT(*))*(COUNT(0.8435683590158889))) COLLATE BINARY) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*))*(COUNT(0.8435683590158889))) COLLATE BINARY UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((COUNT(*))*(COUNT(0.8435683590158889))) COLLATE BINARY)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((COUNT(*))*(COUNT(0.8435683590158889))) COLLATE BINARY) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 NOT INDEXED;
SELECT ALL t0.c0 FROM t0 WHERE (CASE ((((((((t0.c0)OR(-2013232699)))AND(x'')))OR(t0.c0)))OR(t0.c0))  WHEN ROUND(t0.c0, t0.c0) THEN x'770b' WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) THEN ((t0.c0)<(t0.c0)) WHEN ((((-1390547252)OR(t0.c0)))OR(t0.c0)) THEN (t0.c0 IN ()) ELSE ('2045574375' IN ()) END) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CASE ((((((((t0.c0)OR(-2013232699)))AND(x'')))OR(t0.c0)))OR(t0.c0))  WHEN ROUND(t0.c0, t0.c0) THEN x'770b' WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) THEN ((t0.c0)<(t0.c0)) WHEN ((((-1390547252)OR(t0.c0)))OR(t0.c0)) THEN (t0.c0 IN ()) ELSE ('2045574375' IN ()) END))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((CASE ((((((((t0.c0)OR(-2013232699)))AND(x'')))OR(t0.c0)))OR(t0.c0))  WHEN ROUND(t0.c0, t0.c0) THEN x'770b' WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) THEN ((t0.c0)<(t0.c0)) WHEN ((((-1390547252)OR(t0.c0)))OR(t0.c0)) THEN (t0.c0 IN ()) ELSE ('2045574375' IN ()) END) ISNULL));
SELECT t0.c0 FROM t0 NOT INDEXED;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)*(((t1.c0)||(t1.c0))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)*(((t1.c0)||(t1.c0))))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)*(((t1.c0)||(t1.c0))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t1.c0 FROM t1 NATURAL JOIN t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 NATURAL JOIN t0 WHERE (CASE WHEN 'k\rG)!ub.' THEN (((t1.c0)) BETWEEN ((t0.c0)) AND ((t1.c0))) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t1.c0)) END) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 NATURAL JOIN t0 WHERE ((NOT (CASE WHEN 'k\rG)!ub.' THEN (((t1.c0)) BETWEEN ((t0.c0)) AND ((t1.c0))) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t1.c0)) END))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 NATURAL JOIN t0 WHERE (((CASE WHEN 'k\rG)!ub.' THEN (((t1.c0)) BETWEEN ((t0.c0)) AND ((t1.c0))) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t1.c0)) END) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 NATURAL JOIN t0 GROUP BY t1.c0;
SELECT t0.c0, rt0.c0, rt0.c3 FROM t0, rt0, t1 GROUP BY t0.c0, rt0.c0, rt0.c3;
SELECT ALL t0.c0, rt0.c0, rt0.c3 FROM t0, rt0, t1 GROUP BY t0.c0, rt0.c0, rt0.c3 HAVING COUNT(AVG(rt0.c0)) UNION ALL SELECT ALL t0.c0, rt0.c0, rt0.c3 FROM t0, rt0, t1 GROUP BY t0.c0, rt0.c0, rt0.c3 HAVING (NOT (COUNT(AVG(rt0.c0)))) UNION ALL SELECT ALL t0.c0, rt0.c0, rt0.c3 FROM t0, rt0, t1 GROUP BY t0.c0, rt0.c0, rt0.c3 HAVING ((COUNT(AVG(rt0.c0))) ISNULL);
SELECT ALL t0.c0, rt0.c1, rt0.c3, t1.c0 FROM rt0, t0, t1;
SELECT t0.c0, rt0.c1, rt0.c3, t1.c0 FROM rt0, t0, t1 WHERE (((((((x'c99e')AND(t1.c0)))AND(rt0.c3)))<=(((((((((NULL)OR(rt0.c2)))OR(t1.c0)))AND(x'300883c3')))OR(t1.c0))))) UNION ALL SELECT ALL t0.c0, rt0.c1, rt0.c3, t1.c0 FROM rt0, t0, t1 WHERE ((NOT (((((((x'c99e')AND(t1.c0)))AND(rt0.c3)))<=(((((((((NULL)OR(rt0.c2)))OR(t1.c0)))AND(x'300883c3')))OR(t1.c0))))))) UNION ALL SELECT ALL t0.c0, rt0.c1, rt0.c3, t1.c0 FROM rt0, t0, t1 WHERE (((((((((x'c99e')AND(t1.c0)))AND(rt0.c3)))<=(((((((((NULL)OR(rt0.c2)))OR(t1.c0)))AND(x'300883c3')))OR(t1.c0))))) ISNULL));
SELECT ALL t0.c0, rt0.c1, rt0.c3, t1.c0 FROM rt0, t0, t1;
SELECT DISTINCT * FROM t1, t0, rt0;
SELECT DISTINCT * FROM t1, t0, rt0 WHERE (((((rt0.c3) IS TRUE)) BETWEEN (((rt0.c3)>=(t1.c0))) AND (((rt0.c0)=(rt0.c1))))) UNION SELECT DISTINCT * FROM t1, t0, rt0 WHERE ((NOT (((((rt0.c3) IS TRUE)) BETWEEN (((rt0.c3)>=(t1.c0))) AND (((rt0.c0)=(rt0.c1))))))) UNION SELECT DISTINCT * FROM t1, t0, rt0 WHERE (((((((rt0.c3) IS TRUE)) BETWEEN (((rt0.c3)>=(t1.c0))) AND (((rt0.c0)==(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM t1, t0, rt0;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1))) NOT BETWEEN ('747000768') AND (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c3))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 UNION SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1))) NOT BETWEEN ('747000768') AND (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c3))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1))) NOT BETWEEN ('747000768') AND (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c3))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3;
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3 HAVING SUM(AVG(SUM(MIN(MIN(MAX(COUNT(*))))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3 HAVING (NOT (SUM(AVG(SUM(MIN(MIN(MAX(COUNT(*))))))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3 HAVING ((SUM(AVG(SUM(MIN(MIN(MAX(COUNT(*)))))))) ISNULL);
SELECT t0.c0, t1.c0, rt0.c3, rt0.c0, rt0.c1 FROM rt0, t1 CROSS JOIN t0 ON (t1.c0 COLLATE RTRIM IN (((((rt0.c3)AND(t1.c0)))OR(rt0.c3))));
SELECT t0.c0, t1.c0, rt0.c3, rt0.c0, rt0.c1 FROM rt0, t1 CROSS JOIN t0 ON (t1.c0 COLLATE RTRIM IN (((((rt0.c3)AND(t1.c0)))OR(rt0.c3)))) WHERE ('965295355') UNION ALL SELECT t0.c0, t1.c0, rt0.c3, rt0.c0, rt0.c1 FROM rt0, t1 CROSS JOIN t0 ON (t1.c0 COLLATE RTRIM IN (((((rt0.c3)AND(t1.c0)))OR(rt0.c3)))) WHERE ((NOT ('965295355'))) UNION ALL SELECT ALL t0.c0, t1.c0, rt0.c3, rt0.c0, rt0.c1 FROM rt0, t1 CROSS JOIN t0 ON (t1.c0 COLLATE RTRIM IN (((((rt0.c3)AND(t1.c0)))OR(rt0.c3)))) WHERE ((('965295355') ISNULL));
SELECT t0.c0, t1.c0, rt0.c3, rt0.c0, rt0.c1 FROM rt0, t1 CROSS JOIN t0 ON (t1.c0 COLLATE RTRIM IN (((((rt0.c3)AND(t1.c0)))OR(rt0.c3))));
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 NOT INDEXED WHERE ((((t1.c0)) BETWEEN ((((t1.c0)&(t1.c0)))) AND ((((((t1.c0)AND(t1.c0)))OR(t1.c0)))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((((t1.c0)) BETWEEN ((((t1.c0)&(t1.c0)))) AND ((((((t1.c0)AND(t1.c0)))OR(t1.c0)))))))) UNION SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0)) BETWEEN ((((t1.c0)&(t1.c0)))) AND ((((((t1.c0)AND(t1.c0)))OR(t1.c0)))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (IFNULL(DISTINCT CAST(t1.c0 AS NUMERIC), t1.c0)) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (IFNULL(DISTINCT CAST(t1.c0 AS NUMERIC), t1.c0)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((IFNULL(DISTINCT CAST(t1.c0 AS NUMERIC), t1.c0)) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON t0.c0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON t0.c0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING CASE (((TOTAL(rt0.c0)))=((rt0.c3)))  WHEN COUNT(t0.c0) THEN CASE MIN(rt0.c0)  WHEN COUNT(0.32472792386021443) THEN GROUP_CONCAT(t0.c0) ELSE COUNT(COUNT(MAX(MIN(rt0.c0)))) END END UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON t0.c0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING (NOT (CASE (((TOTAL(rt0.c0)))=((rt0.c3)))  WHEN COUNT(t0.c0) THEN CASE MIN(rt0.c0)  WHEN COUNT(0.32472792386021443) THEN GROUP_CONCAT(t0.c0) ELSE COUNT(COUNT(MAX(MIN(rt0.c0)))) END END)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON t0.c0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING ((CASE (((TOTAL(rt0.c0)))=((rt0.c3)))  WHEN COUNT(t0.c0) THEN CASE MIN(rt0.c0)  WHEN COUNT(0.32472792386021443) THEN GROUP_CONCAT(t0.c0) ELSE COUNT(COUNT(MAX(MIN(rt0.c0)))) END END) ISNULL);
SELECT ALL t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE ((t1.c0 IN ()) COLLATE NOCASE) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT ((t1.c0 IN ()) COLLATE NOCASE))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((((t1.c0 IN ()) COLLATE NOCASE) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1, t0, rt0;
SELECT DISTINCT t1.c0 FROM t1, t0, rt0 WHERE (rtreenode((t0.c0 IN ()), (((t1.c0, rt0.c3, rt0.c1))<>((rt0.c3, NULL, rt0.c3))))) UNION SELECT DISTINCT t1.c0 FROM t1, t0, rt0 WHERE ((NOT (rtreenode((t0.c0 IN ()), (((t1.c0, rt0.c3, rt0.c1))!=((rt0.c3, NULL, rt0.c3))))))) UNION SELECT DISTINCT t1.c0 FROM t1, t0, rt0 WHERE (((rtreenode((t0.c0 IN ()), (((t1.c0, rt0.c3, rt0.c1))<>((rt0.c3, NULL, rt0.c3))))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1, t0, rt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (TRIM(DISTINCT ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (TRIM(DISTINCT ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((TRIM(DISTINCT ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((COUNT(t0.c0))) BETWEEN ((t0.c0)) AND ((COUNT(TOTAL(AVG(t0.c0)))))))=(MAX(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((((COUNT(t0.c0))) BETWEEN ((t0.c0)) AND ((COUNT(TOTAL(AVG(t0.c0)))))))=(MAX(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((((COUNT(t0.c0))) BETWEEN ((t0.c0)) AND ((COUNT(TOTAL(AVG(t0.c0)))))))=(MAX(t0.c0)))) ISNULL);
SELECT ALL rt0.c3 FROM t1, rt0;
SELECT ALL rt0.c3 FROM t1, rt0 WHERE ((((((((((((((+ (rt0.c3)))OR((('CY')IS(t1.c0)))))AND(((rt0.c3) ISNULL))))OR(CAST(rt0.c2 AS INTEGER))))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 END)))OR(((t1.c0)AND(t1.c0)))))AND(((rt0.c0) NOT NULL)))) UNION ALL SELECT ALL rt0.c3 FROM t1, rt0 WHERE ((NOT ((((((((((((((+ (rt0.c3)))OR((('CY')IS(t1.c0)))))AND(((rt0.c3) ISNULL))))OR(CAST(rt0.c2 AS INTEGER))))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 END)))OR(((t1.c0)AND(t1.c0)))))AND(((rt0.c0) NOT NULL)))))) UNION ALL SELECT rt0.c3 FROM t1, rt0 WHERE ((((((((((((((((+ (rt0.c3)))OR((('CY')IS(t1.c0)))))AND(((rt0.c3) ISNULL))))OR(CAST(rt0.c2 AS INTEGER))))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 END)))OR(((t1.c0)AND(t1.c0)))))AND(((rt0.c0) NOT NULL)))) ISNULL));
SELECT ALL rt0.c3 FROM t1, rt0;
SELECT DISTINCT t0.c0, t1.c0 FROM t0 CROSS JOIN t1 ON (((t0.c0 IN ())) BETWEEN (((((((((t0.c0)AND(t0.c0)))OR(t1.c0)))OR(t0.c0)))AND(t1.c0))) AND (-1.7976931348623157E308));
SELECT DISTINCT t0.c0, t1.c0 FROM t0 CROSS JOIN t1 ON (((t0.c0 IN ())) BETWEEN (((((((((t0.c0)AND(t0.c0)))OR(t1.c0)))OR(t0.c0)))AND(t1.c0))) AND (-1.7976931348623157E308)) WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t1.c0)) AS REAL)) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t0 CROSS JOIN t1 ON (((t0.c0 IN ())) BETWEEN (((((((((t0.c0)AND(t0.c0)))OR(t1.c0)))OR(t0.c0)))AND(t1.c0))) AND (-1.7976931348623157E308)) WHERE ((NOT (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t1.c0)) AS REAL)))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t0 CROSS JOIN t1 ON (((t0.c0 IN ())) BETWEEN (((((((((t0.c0)AND(t0.c0)))OR(t1.c0)))OR(t0.c0)))AND(t1.c0))) AND (-1.7976931348623157E308)) WHERE (((CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t1.c0)) AS REAL)) ISNULL));
SELECT DISTINCT t0.c0, t1.c0 FROM t0 CROSS JOIN t1 ON (((t0.c0 IN ())) BETWEEN (((((((((t0.c0)AND(t0.c0)))OR(t1.c0)))OR(t0.c0)))AND(t1.c0))) AND (-1.7976931348623157E308));
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (UNLIKELY(NULLIF(DISTINCT t1.c0, t1.c0))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (UNLIKELY(NULLIF(DISTINCT t1.c0, t1.c0))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((UNLIKELY(NULLIF(DISTINCT t1.c0, t1.c0))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM t1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM t1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1 HAVING COUNT(MIN(GROUP_CONCAT(AVG(rt0.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM t1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1 HAVING (NOT (COUNT(MIN(GROUP_CONCAT(AVG(rt0.c1)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM t1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1 HAVING ((COUNT(MIN(GROUP_CONCAT(AVG(rt0.c1))))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0, t1.c0 FROM rt0, t0, t1;
SELECT rt0.c1, rt0.c2, rt0.c0, t1.c0 FROM rt0, t0, t1 WHERE ((('' COLLATE RTRIM) NOT BETWEEN ('') AND (((rt0.c0)+(rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, t1.c0 FROM rt0, t0, t1 WHERE ((NOT ((('' COLLATE RTRIM) NOT BETWEEN ('') AND (((rt0.c0)+(rt0.c2))))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, t1.c0 FROM rt0, t0, t1 WHERE ((((('' COLLATE RTRIM) NOT BETWEEN ('') AND (((rt0.c0)+(rt0.c2))))) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0, t1.c0 FROM rt0, t0, t1;
SELECT DISTINCT * FROM t0, rt0, t1;
SELECT DISTINCT * FROM t0, rt0, t1 WHERE ((LTRIM(t0.c0) IN ())) UNION SELECT DISTINCT * FROM t0, rt0, t1 WHERE ((NOT ((LTRIM(t0.c0) IN ())))) UNION SELECT DISTINCT * FROM t0, rt0, t1 WHERE ((((LTRIM(t0.c0) IN ())) ISNULL));
SELECT DISTINCT * FROM t0, rt0, t1;
SELECT rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE (0Xffffffffccec0829) GROUP BY rt0.c2, rt0.c1, rt0.c3 UNION SELECT rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (0Xffffffffccec0829))) GROUP BY rt0.c2, rt0.c1, rt0.c3 UNION SELECT rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE (((0Xffffffffccec0829) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1 FULL OUTER JOIN t0 ON ((((rt0.c1)OR(((rt0.c1) NOT BETWEEN (t1.c0) AND (rt0.c2)))))AND(LOWER(t0.c0))) CROSS JOIN rt0 ON '';
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE (NULLIF(-7.96889639E8, ((rt0.c3) NOTNULL))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT (NULLIF(-7.96889639E8, ((rt0.c3) NOTNULL))))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE (((NULLIF(-7.96889639E8, ((rt0.c3) NOTNULL))) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((~ (t0.c0)) IN ((t0.c0 IN ()), (- (t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((~ (t0.c0)) IN ((t0.c0 IN ()), (- (t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((~ (t0.c0)) IN ((t0.c0 IN ()), (- (t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, rt0.c1, t1.c0, rt0.c0, rt0.c2 FROM t1, rt0, t0 GROUP BY t0.c0, rt0.c1, t1.c0, rt0.c0, rt0.c2;
SELECT t0.c0, rt0.c1, t1.c0, rt0.c0, rt0.c2 FROM t1, rt0, t0 GROUP BY t0.c0, rt0.c1, t1.c0, rt0.c0, rt0.c2 HAVING ((((((COUNT(MAX(t1.c0))) NOTNULL))OR(NULL)))AND(((t1.c0) NOT BETWEEN (MAX(t0.c0)) AND (rt0.c1)))) UNION ALL SELECT ALL t0.c0, rt0.c1, t1.c0, rt0.c0, rt0.c2 FROM t1, rt0, t0 GROUP BY t0.c0, rt0.c1, t1.c0, rt0.c0, rt0.c2 HAVING (NOT (((((((COUNT(MAX(t1.c0))) NOTNULL))OR(NULL)))AND(((t1.c0) NOT BETWEEN (MAX(t0.c0)) AND (rt0.c1)))))) UNION ALL SELECT ALL t0.c0, rt0.c1, t1.c0, rt0.c0, rt0.c2 FROM t1, rt0, t0 GROUP BY t0.c0, rt0.c1, t1.c0, rt0.c0, rt0.c2 HAVING ((((((((COUNT(MAX(t1.c0))) NOTNULL))OR(NULL)))AND(((t1.c0) NOT BETWEEN (MAX(t0.c0)) AND (rt0.c1))))) ISNULL);
SELECT t1.c0, rt0.c0, rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS NUMERIC))>>(((rt0.c2) NOT NULL))) LEFT OUTER JOIN t1 ON ((((rt0.c2)||(rt0.c3))) NOT NULL);
SELECT ALL t1.c0, rt0.c0, rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS NUMERIC))>>(((rt0.c2) NOT NULL))) LEFT OUTER JOIN t1 ON ((((rt0.c2)||(rt0.c3))) NOT NULL) WHERE ((((t1.c0 IN (rt0.c0, rt0.c3)))IS(rt0.c2))) ORDER BY rt0.c2 ASC  NULLS LAST, (((- (x'')))LIKE(t0.c0)) ASC  NULLS LAST;
SELECT ALL t1.c0, rt0.c0, rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS NUMERIC))>>(((rt0.c2) NOT NULL))) LEFT OUTER JOIN t1 ON ((((rt0.c2)||(rt0.c3))) NOT NULL) WHERE ((NOT ((((t1.c0 IN (rt0.c0, rt0.c3)))IS(rt0.c2))))) ORDER BY rt0.c2 ASC  NULLS LAST, (((- (x'')))LIKE(t0.c0)) ASC  NULLS LAST;
SELECT ALL t1.c0, rt0.c0, rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS NUMERIC))>>(((rt0.c2) NOT NULL))) LEFT OUTER JOIN t1 ON ((((rt0.c2)||(rt0.c3))) NOT NULL) WHERE ((((((t1.c0 IN (rt0.c0, rt0.c3)))IS(rt0.c2))) ISNULL)) ORDER BY rt0.c2 ASC  NULLS LAST, (((- (x'')))LIKE(t0.c0)) ASC  NULLS LAST;
SELECT t1.c0, rt0.c0, rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS NUMERIC))>>(((rt0.c2) NOT NULL))) LEFT OUTER JOIN t1 ON ((((rt0.c2)||(rt0.c3))) NOT NULL);
SELECT DISTINCT rt0.c1 FROM t1, rt0;
SELECT DISTINCT rt0.c1 FROM t1, rt0 WHERE (((((rt0.c0) NOT BETWEEN ('2120172671') AND (NULL)))=(IFNULL(DISTINCT t1.c0, rt0.c0)))) UNION SELECT DISTINCT rt0.c1 FROM t1, rt0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN ('2120172671') AND (NULL)))=(IFNULL(DISTINCT t1.c0, rt0.c0)))))) UNION SELECT DISTINCT rt0.c1 FROM t1, rt0 WHERE (((((((rt0.c0) NOT BETWEEN ('2120172671') AND (NULL)))==(IFNULL(DISTINCT t1.c0, rt0.c0)))) ISNULL));
SELECT DISTINCT rt0.c1 FROM t1, rt0;
SELECT rt0.c2, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM t1, rt0 WHERE (((((((rt0.c2)GLOB(rt0.c1)))OR('1267627664')))OR((rt0.c0 IN (rt0.c1, rt0.c0))))) GROUP BY rt0.c2, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c3 FROM t1, rt0 WHERE ((NOT (((((((rt0.c2)GLOB(rt0.c1)))OR('1267627664')))OR((rt0.c0 IN (rt0.c1, rt0.c0))))))) GROUP BY rt0.c2, rt0.c3 UNION SELECT rt0.c2, rt0.c3 FROM t1, rt0 WHERE (((((((((rt0.c2)GLOB(rt0.c1)))OR('1267627664')))OR((rt0.c0 IN (rt0.c1, rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING GROUP_CONCAT(MIN(rt0.c2)) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT(MIN(rt0.c2)))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(MIN(rt0.c2))) ISNULL);
SELECT t0.c0 FROM t1, rt0 NATURAL JOIN t0;
SELECT t0.c0 FROM t1, rt0 NATURAL JOIN t0 WHERE (0xffffffffb6299112) UNION ALL SELECT t0.c0 FROM t1, rt0 NATURAL JOIN t0 WHERE ((NOT (0Xffffffffb6299112))) UNION ALL SELECT t0.c0 FROM t1, rt0 NATURAL JOIN t0 WHERE (((0xffffffffb6299112) ISNULL));
SELECT t0.c0 FROM t1, rt0 NATURAL JOIN t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0)>=(t0.c0)) COLLATE BINARY) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((t0.c0)>=(t0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0)>=(t0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t1.c0, rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY t1.c0, rt0.c2, rt0.c3;
SELECT t1.c0, rt0.c2, rt0.c3 FROM rt0, t1 WHERE (((((rt0.c3 COLLATE BINARY)AND(rt0.c0 COLLATE RTRIM)))OR((((t1.c0))<>((rt0.c3)))))) GROUP BY t1.c0, rt0.c2, rt0.c3 UNION SELECT ALL t1.c0, rt0.c2, rt0.c3 FROM rt0, t1 WHERE ((NOT (((((rt0.c3 COLLATE BINARY)AND(rt0.c0 COLLATE RTRIM)))OR((((t1.c0))<>((rt0.c3)))))))) GROUP BY t1.c0, rt0.c2, rt0.c3 UNION SELECT t1.c0, rt0.c2, rt0.c3 FROM rt0, t1 WHERE (((((((rt0.c3 COLLATE BINARY)AND(rt0.c0 COLLATE RTRIM)))OR((((t1.c0))<>((rt0.c3)))))) ISNULL)) GROUP BY t1.c0, rt0.c2, rt0.c3;
SELECT ALL t1.c0, rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY t1.c0, rt0.c2, rt0.c3;
SELECT rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0, t1 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0, t1 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2 HAVING COUNT(rt0.c0) COLLATE NOCASE UNION ALL SELECT ALL rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0, t1 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(rt0.c0) COLLATE NOCASE)) UNION ALL SELECT rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0, t1 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(rt0.c0) COLLATE NOCASE) ISNULL);
SELECT rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0, t1 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0, t1 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2 HAVING COUNT(rt0.c0) COLLATE NOCASE UNION ALL SELECT ALL rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0, t1 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(rt0.c0) COLLATE NOCASE)) UNION ALL SELECT rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0, t1 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(rt0.c0) COLLATE NOCASE) ISNULL);
SELECT rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0, t1 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2;
SELECT ALL * FROM t1, t0, rt0;
SELECT ALL * FROM t1, t0, rt0 WHERE (CHAR(UPPER(DISTINCT t0.c0), ((rt0.c3)|(rt0.c0)), CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 END)) UNION ALL SELECT * FROM t1, t0, rt0 WHERE ((NOT (CHAR(UPPER(DISTINCT t0.c0), ((rt0.c3)|(rt0.c0)), CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 END)))) UNION ALL SELECT * FROM t1, t0, rt0 WHERE (((CHAR(UPPER(DISTINCT t0.c0), ((rt0.c3)|(rt0.c0)), CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 END)) ISNULL));
SELECT ALL * FROM t1, t0, rt0;
SELECT DISTINCT rt0.c2 FROM t0, rt0;
SELECT DISTINCT rt0.c2 FROM t0, rt0 WHERE (((((rt0.c3)AND(rt0.c2))) NOT NULL)) UNION SELECT DISTINCT rt0.c2 FROM t0, rt0 WHERE ((NOT (((((rt0.c3)AND(rt0.c2))) NOT NULL)))) UNION SELECT DISTINCT rt0.c2 FROM t0, rt0 WHERE (((((((rt0.c3)AND(rt0.c2))) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c2 FROM t0, rt0;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE (NULL COLLATE BINARY) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 UNION SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (NULL COLLATE BINARY))) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE (((NULL COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT ALL rt0.c0, t1.c0, rt0.c1, t0.c0, rt0.c2, rt0.c3 FROM rt0 CROSS JOIN t1 ON ((((rt0.c3)<<(rt0.c1)))/(((((rt0.c3)AND(x'')))AND(rt0.c1)))) LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0)>=(t0.c0)) THEN ((rt0.c3) NOT NULL) WHEN UPPER(t0.c0) THEN (+ (t0.c0)) WHEN ((((rt0.c0)AND(t1.c0)))OR(t0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((-1302416986)) AND ((rt0.c1))) ELSE ((((rt0.c2)AND(rt0.c2)))AND(t0.c0)) END GROUP BY rt0.c0, t1.c0, rt0.c1, t0.c0, rt0.c2, rt0.c3;
SELECT rt0.c0, t1.c0, rt0.c1, t0.c0, rt0.c2, rt0.c3 FROM rt0 CROSS JOIN t1 ON ((((rt0.c3)<<(rt0.c1)))/(((((rt0.c3)AND(x'')))AND(rt0.c1)))) LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0)>=(t0.c0)) THEN ((rt0.c3) NOT NULL) WHEN UPPER(t0.c0) THEN (+ (t0.c0)) WHEN ((((rt0.c0)AND(t1.c0)))OR(t0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((-1302416986)) AND ((rt0.c1))) ELSE ((((rt0.c2)AND(rt0.c2)))AND(t0.c0)) END GROUP BY rt0.c0, t1.c0, rt0.c1, t0.c0, rt0.c2, rt0.c3 HAVING COUNT(*) UNION ALL SELECT rt0.c0, t1.c0, rt0.c1, t0.c0, rt0.c2, rt0.c3 FROM rt0 CROSS JOIN t1 ON ((((rt0.c3)<<(rt0.c1)))/(((((rt0.c3)AND(x'')))AND(rt0.c1)))) LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0)>=(t0.c0)) THEN ((rt0.c3) NOT NULL) WHEN UPPER(t0.c0) THEN (+ (t0.c0)) WHEN ((((rt0.c0)AND(t1.c0)))OR(t0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((-1302416986)) AND ((rt0.c1))) ELSE ((((rt0.c2)AND(rt0.c2)))AND(t0.c0)) END GROUP BY rt0.c0, t1.c0, rt0.c1, t0.c0, rt0.c2, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, t1.c0, rt0.c1, t0.c0, rt0.c2, rt0.c3 FROM rt0 CROSS JOIN t1 ON ((((rt0.c3)<<(rt0.c1)))/(((((rt0.c3)AND(x'')))AND(rt0.c1)))) LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0)>=(t0.c0)) THEN ((rt0.c3) NOT NULL) WHEN UPPER(t0.c0) THEN (+ (t0.c0)) WHEN ((((rt0.c0)AND(t1.c0)))OR(t0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((-1302416986)) AND ((rt0.c1))) ELSE ((((rt0.c2)AND(rt0.c2)))AND(t0.c0)) END GROUP BY rt0.c0, t1.c0, rt0.c1, t0.c0, rt0.c2, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, t1.c0, rt0.c1, t0.c0, rt0.c2, rt0.c3 FROM rt0 CROSS JOIN t1 ON ((((rt0.c3)<<(rt0.c1)))/(((((rt0.c3)AND(x'')))AND(rt0.c1)))) LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0)>=(t0.c0)) THEN ((rt0.c3) NOT NULL) WHEN UPPER(t0.c0) THEN (+ (t0.c0)) WHEN ((((rt0.c0)AND(t1.c0)))OR(t0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((-1302416986)) AND ((rt0.c1))) ELSE ((((rt0.c2)AND(rt0.c2)))AND(t0.c0)) END GROUP BY rt0.c0, t1.c0, rt0.c1, t0.c0, rt0.c2, rt0.c3;
SELECT rt0.c0, t1.c0, rt0.c1, t0.c0, rt0.c2, rt0.c3 FROM rt0 CROSS JOIN t1 ON ((((rt0.c3)<<(rt0.c1)))/(((((rt0.c3)AND(x'')))AND(rt0.c1)))) LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0)>=(t0.c0)) THEN ((rt0.c3) NOT NULL) WHEN UPPER(t0.c0) THEN (+ (t0.c0)) WHEN ((((rt0.c0)AND(t1.c0)))OR(t0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((-1302416986)) AND ((rt0.c1))) ELSE ((((rt0.c2)AND(rt0.c2)))AND(t0.c0)) END GROUP BY rt0.c0, t1.c0, rt0.c1, t0.c0, rt0.c2, rt0.c3 HAVING COUNT(*) UNION ALL SELECT rt0.c0, t1.c0, rt0.c1, t0.c0, rt0.c2, rt0.c3 FROM rt0 CROSS JOIN t1 ON ((((rt0.c3)<<(rt0.c1)))/(((((rt0.c3)AND(x'')))AND(rt0.c1)))) LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0)>=(t0.c0)) THEN ((rt0.c3) NOT NULL) WHEN UPPER(t0.c0) THEN (+ (t0.c0)) WHEN ((((rt0.c0)AND(t1.c0)))OR(t0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((-1302416986)) AND ((rt0.c1))) ELSE ((((rt0.c2)AND(rt0.c2)))AND(t0.c0)) END GROUP BY rt0.c0, t1.c0, rt0.c1, t0.c0, rt0.c2, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, t1.c0, rt0.c1, t0.c0, rt0.c2, rt0.c3 FROM rt0 CROSS JOIN t1 ON ((((rt0.c3)<<(rt0.c1)))/(((((rt0.c3)AND(x'')))AND(rt0.c1)))) LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0)>=(t0.c0)) THEN ((rt0.c3) NOT NULL) WHEN UPPER(t0.c0) THEN (+ (t0.c0)) WHEN ((((rt0.c0)AND(t1.c0)))OR(t0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((-1302416986)) AND ((rt0.c1))) ELSE ((((rt0.c2)AND(rt0.c2)))AND(t0.c0)) END GROUP BY rt0.c0, t1.c0, rt0.c1, t0.c0, rt0.c2, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, t1.c0, rt0.c1, t0.c0, rt0.c2, rt0.c3 FROM rt0 CROSS JOIN t1 ON ((((rt0.c3)<<(rt0.c1)))/(((((rt0.c3)AND(x'')))AND(rt0.c1)))) LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0)>=(t0.c0)) THEN ((rt0.c3) NOT NULL) WHEN UPPER(t0.c0) THEN (+ (t0.c0)) WHEN ((((rt0.c0)AND(t1.c0)))OR(t0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((-1302416986)) AND ((rt0.c1))) ELSE ((((rt0.c2)AND(rt0.c2)))AND(t0.c0)) END GROUP BY rt0.c0, t1.c0, rt0.c1, t0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c1, t1.c0 FROM rt0, t1 CROSS JOIN t0 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))<<('1011125961'));
SELECT rt0.c1, t1.c0 FROM rt0, t1 CROSS JOIN t0 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))<<('1011125961')) WHERE ((+ (((t1.c0) BETWEEN (rt0.c3) AND (t0.c0))))) UNION ALL SELECT rt0.c1, t1.c0 FROM rt0, t1 CROSS JOIN t0 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))<<('1011125961')) WHERE ((NOT ((+ (((t1.c0) BETWEEN (rt0.c3) AND (t0.c0))))))) UNION ALL SELECT rt0.c1, t1.c0 FROM rt0, t1 CROSS JOIN t0 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))<<('1011125961')) WHERE ((((+ (((t1.c0) BETWEEN (rt0.c3) AND (t0.c0))))) ISNULL));
SELECT ALL rt0.c1, t1.c0 FROM rt0, t1 CROSS JOIN t0 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))<<('1011125961'));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c3) NOT NULL) AS BLOB)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(((rt0.c3) NOT NULL) AS BLOB)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(((rt0.c3) NOT NULL) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0 COLLATE NOCASE)-((- ('-1484526620'))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((t0.c0 COLLATE NOCASE)-((- ('-1484526620'))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0 COLLATE NOCASE)-((- ('-1484526620'))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c2, t0.c0 FROM t1, t0, rt0 GROUP BY rt0.c2, t0.c0;
SELECT ALL rt0.c2, t0.c0 FROM t1, t0, rt0 GROUP BY rt0.c2, t0.c0 HAVING AVG(((((t1.c0)OR(rt0.c1)))AND(MAX(TOTAL(rt0.c0))))) UNION ALL SELECT rt0.c2, t0.c0 FROM t1, t0, rt0 GROUP BY rt0.c2, t0.c0 HAVING (NOT (AVG(((((t1.c0)OR(rt0.c1)))AND(MAX(TOTAL(rt0.c0))))))) UNION ALL SELECT rt0.c2, t0.c0 FROM t1, t0, rt0 GROUP BY rt0.c2, t0.c0 HAVING ((AVG(((((t1.c0)OR(rt0.c1)))AND(MAX(TOTAL(rt0.c0)))))) ISNULL);
SELECT * FROM t0, rt0 FULL OUTER JOIN t1 ON rt0.c1;
SELECT ALL * FROM t0, rt0 FULL OUTER JOIN t1 ON rt0.c1 WHERE (LIKELIHOOD(DISTINCT 0.43953651370590896, 0.15338845251488664)) UNION ALL SELECT ALL * FROM t0, rt0 FULL OUTER JOIN t1 ON rt0.c1 WHERE ((NOT (LIKELIHOOD(DISTINCT 0.43953651370590896, 0.15338845251488664)))) UNION ALL SELECT * FROM t0, rt0 FULL OUTER JOIN t1 ON rt0.c1 WHERE (((LIKELIHOOD(DISTINCT 0.43953651370590896, 0.15338845251488664)) ISNULL));
SELECT * FROM t0, rt0 FULL OUTER JOIN t1 ON rt0.c1;
SELECT DISTINCT * FROM rt0, t0 NATURAL JOIN t1;
SELECT DISTINCT * FROM rt0, t0 NATURAL JOIN t1 WHERE (((((((rt0.c2)OR(t1.c0)))OR(rt0.c0)))<=((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((t1.c0)))))) UNION SELECT DISTINCT * FROM rt0, t0 NATURAL JOIN t1 WHERE ((NOT (((((((rt0.c2)OR(t1.c0)))OR(rt0.c0)))<=((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((t1.c0)))))))) UNION SELECT DISTINCT * FROM rt0, t0 NATURAL JOIN t1 WHERE (((((((((rt0.c2)OR(t1.c0)))OR(rt0.c0)))<=((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((t1.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0 NATURAL JOIN t1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (STRFTIME(((((t1.c0)OR(t1.c0)))OR(t1.c0)), ((t1.c0)GLOB(t1.c0)), (+ (t1.c0)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (STRFTIME(((((t1.c0)OR(t1.c0)))OR(t1.c0)), ((t1.c0)GLOB(t1.c0)), (+ (t1.c0)))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((STRFTIME(((((t1.c0)OR(t1.c0)))OR(t1.c0)), ((t1.c0)GLOB(t1.c0)), (+ (t1.c0)))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING GROUP_CONCAT(MIN(MAX(rt0.c0))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(MIN(MAX(rt0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(MIN(MAX(rt0.c0)))) ISNULL);
SELECT t1.c0 FROM t0, t1;
SELECT t1.c0 FROM t0, t1 WHERE (((((((t1.c0)>>(t0.c0)))OR(t1.c0)))OR(((t1.c0) IS FALSE)))) UNION ALL SELECT t1.c0 FROM t0, t1 WHERE ((NOT (((((((t1.c0)>>(t0.c0)))OR(t1.c0)))OR(((t1.c0) IS FALSE)))))) UNION ALL SELECT ALL t1.c0 FROM t0, t1 WHERE (((((((((t1.c0)>>(t0.c0)))OR(t1.c0)))OR(((t1.c0) IS FALSE)))) ISNULL));
SELECT t1.c0 FROM t0, t1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c3 COLLATE RTRIM)OR(DATETIME(rt0.c0, 0xfffffffff9045cb0, rt0.c0))))AND(((((((((((((rt0.c1)OR(NULL)))OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c3)))OR('0.41428959593568515'))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c3 COLLATE RTRIM)OR(DATETIME(rt0.c0, 0Xfffffffff9045cb0, rt0.c0))))AND(((((((((((((rt0.c1)OR(NULL)))OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c3)))OR('0.41428959593568515'))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c3 COLLATE RTRIM)OR(DATETIME(rt0.c0, 0Xfffffffff9045cb0, rt0.c0))))AND(((((((((((((rt0.c1)OR(NULL)))OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c3)))OR('0.41428959593568515'))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 WHERE (LTRIM(t1.c0, ((t1.c0) NOT BETWEEN (t1.c0) AND (t0.c0)))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t0, t1 WHERE ((NOT (LTRIM(t1.c0, ((t1.c0) NOT BETWEEN (t1.c0) AND (t0.c0)))))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t0, t1 WHERE (((LTRIM(t1.c0, ((t1.c0) NOT BETWEEN (t1.c0) AND (t0.c0)))) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT ALL t0.c0, t1.c0, rt0.c0, rt0.c3, rt0.c1 FROM rt0 INNER JOIN t0 ON ((rt0.c1)+('1928585003')) COLLATE RTRIM INNER JOIN t1 ON CASE ((rt0.c3)OR(NULL))  WHEN rt0.c3 THEN CAST(rt0.c0 AS BLOB) ELSE CASE '2003860980'  WHEN t1.c0 THEN rt0.c1 END END GROUP BY t0.c0, t1.c0, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL t0.c0, t1.c0, rt0.c0, rt0.c3, rt0.c1 FROM rt0 INNER JOIN t0 ON ((rt0.c1)+('1928585003')) COLLATE RTRIM INNER JOIN t1 ON CASE ((rt0.c3)OR(NULL))  WHEN rt0.c3 THEN CAST(rt0.c0 AS BLOB) ELSE CASE '2003860980'  WHEN t1.c0 THEN rt0.c1 END END GROUP BY t0.c0, t1.c0, rt0.c0, rt0.c3, rt0.c1 HAVING NULL UNION ALL SELECT t0.c0, t1.c0, rt0.c0, rt0.c3, rt0.c1 FROM rt0 INNER JOIN t0 ON ((rt0.c1)+('1928585003')) COLLATE RTRIM INNER JOIN t1 ON CASE ((rt0.c3)OR(NULL))  WHEN rt0.c3 THEN CAST(rt0.c0 AS BLOB) ELSE CASE '2003860980'  WHEN t1.c0 THEN rt0.c1 END END GROUP BY t0.c0, t1.c0, rt0.c0, rt0.c3, rt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT ALL t0.c0, t1.c0, rt0.c0, rt0.c3, rt0.c1 FROM rt0 INNER JOIN t0 ON ((rt0.c1)+('1928585003')) COLLATE RTRIM INNER JOIN t1 ON CASE ((rt0.c3)OR(NULL))  WHEN rt0.c3 THEN CAST(rt0.c0 AS BLOB) ELSE CASE '2003860980'  WHEN t1.c0 THEN rt0.c1 END END GROUP BY t0.c0, t1.c0, rt0.c0, rt0.c3, rt0.c1 HAVING ((NULL) ISNULL);
SELECT ALL t0.c0, t1.c0, rt0.c0, rt0.c3, rt0.c1 FROM rt0 INNER JOIN t0 ON ((rt0.c1)+('1928585003')) COLLATE RTRIM INNER JOIN t1 ON CASE ((rt0.c3)OR(NULL))  WHEN rt0.c3 THEN CAST(rt0.c0 AS BLOB) ELSE CASE '2003860980'  WHEN t1.c0 THEN rt0.c1 END END GROUP BY t0.c0, t1.c0, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL t0.c0, t1.c0, rt0.c0, rt0.c3, rt0.c1 FROM rt0 INNER JOIN t0 ON ((rt0.c1)+('1928585003')) COLLATE RTRIM INNER JOIN t1 ON CASE ((rt0.c3)OR(NULL))  WHEN rt0.c3 THEN CAST(rt0.c0 AS BLOB) ELSE CASE '2003860980'  WHEN t1.c0 THEN rt0.c1 END END GROUP BY t0.c0, t1.c0, rt0.c0, rt0.c3, rt0.c1 HAVING NULL UNION ALL SELECT t0.c0, t1.c0, rt0.c0, rt0.c3, rt0.c1 FROM rt0 INNER JOIN t0 ON ((rt0.c1)+('1928585003')) COLLATE RTRIM INNER JOIN t1 ON CASE ((rt0.c3)OR(NULL))  WHEN rt0.c3 THEN CAST(rt0.c0 AS BLOB) ELSE CASE '2003860980'  WHEN t1.c0 THEN rt0.c1 END END GROUP BY t0.c0, t1.c0, rt0.c0, rt0.c3, rt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT ALL t0.c0, t1.c0, rt0.c0, rt0.c3, rt0.c1 FROM rt0 INNER JOIN t0 ON ((rt0.c1)+('1928585003')) COLLATE RTRIM INNER JOIN t1 ON CASE ((rt0.c3)OR(NULL))  WHEN rt0.c3 THEN CAST(rt0.c0 AS BLOB) ELSE CASE '2003860980'  WHEN t1.c0 THEN rt0.c1 END END GROUP BY t0.c0, t1.c0, rt0.c0, rt0.c3, rt0.c1 HAVING ((NULL) ISNULL);
SELECT ALL t0.c0, t1.c0, rt0.c0, rt0.c3, rt0.c1 FROM rt0 INNER JOIN t0 ON ((rt0.c1)+('1928585003')) COLLATE RTRIM INNER JOIN t1 ON CASE ((rt0.c3)OR(NULL))  WHEN rt0.c3 THEN CAST(rt0.c0 AS BLOB) ELSE CASE '2003860980'  WHEN t1.c0 THEN rt0.c1 END END GROUP BY t0.c0, t1.c0, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (((((t0.c0)+(t0.c0))) NOT BETWEEN (((t0.c0)>(t0.c0))) AND (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((t0.c0)+(t0.c0))) NOT BETWEEN (((t0.c0)>(t0.c0))) AND (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) UNION ALL SELECT * FROM t0 WHERE (((((((t0.c0)+(t0.c0))) NOT BETWEEN (((t0.c0)>(t0.c0))) AND (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE (t1.c0) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT * FROM t1, t0 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT ALL rt0.c1 FROM rt0, t1 NATURAL JOIN t0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t1 NATURAL JOIN t0 WHERE ((NOT ((((rt0.c3, t0.c0, rt0.c3))==((rt0.c3, rt0.c2, t0.c0)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, t1 NATURAL JOIN t0 WHERE ((NOT ((NOT ((((rt0.c3, t0.c0, rt0.c3))=((rt0.c3, rt0.c2, t0.c0)))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, t1 NATURAL JOIN t0 WHERE ((((NOT ((((rt0.c3, t0.c0, rt0.c3))==((rt0.c3, rt0.c2, t0.c0)))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t1 NATURAL JOIN t0 GROUP BY rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1 HAVING x'' UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (x'')) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1 HAVING ((x'') ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1 HAVING x'' UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (x'')) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1 HAVING ((x'') ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1;
SELECT MAX(NULL) FROM t1, rt0, t0;
SELECT * FROM t1 LEFT OUTER JOIN t0 ON (+ ((((t1.c0)) BETWEEN ((t0.c0)) AND ((0.9050101800892814)))));
SELECT * FROM t1 LEFT OUTER JOIN t0 ON (+ ((((t1.c0)) BETWEEN ((t0.c0)) AND ((0.9050101800892814))))) WHERE (t0.c0) UNION ALL SELECT ALL * FROM t1 LEFT OUTER JOIN t0 ON (+ ((((t1.c0)) BETWEEN ((t0.c0)) AND ((0.9050101800892814))))) WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL * FROM t1 LEFT OUTER JOIN t0 ON (+ ((((t1.c0)) BETWEEN ((t0.c0)) AND ((0.9050101800892814))))) WHERE (((t0.c0) ISNULL));
SELECT * FROM t1 LEFT OUTER JOIN t0 ON (+ ((((t1.c0)) BETWEEN ((t0.c0)) AND ((0.9050101800892814)))));
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE (((rt0.c1 COLLATE NOCASE) ISNULL)) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT (((rt0.c1 COLLATE NOCASE) ISNULL)))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE (((((rt0.c1 COLLATE NOCASE) ISNULL)) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END COLLATE BINARY) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END COLLATE BINARY))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END COLLATE BINARY) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING ((((TOTAL(t0.c0))AND(MIN(t0.c0))))AND(((((MAX(COUNT(GROUP_CONCAT(t0.c0))))OR(t1.c0)))OR(t1.c0)))) UNION ALL SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING (NOT (((((TOTAL(t0.c0))AND(MIN(t0.c0))))AND(((((MAX(COUNT(GROUP_CONCAT(t0.c0))))OR(t1.c0)))OR(t1.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING ((((((TOTAL(t0.c0))AND(MIN(t0.c0))))AND(((((MAX(COUNT(GROUP_CONCAT(t0.c0))))OR(t1.c0)))OR(t1.c0))))) ISNULL);
SELECT SUM(t0.c0) FROM t0 ORDER BY CASE WHEN 'I' THEN (NOT (t0.c0)) WHEN ((((t0.c0)AND(t0.c0)))OR('U繿*M')) THEN ((t0.c0)||(t0.c0)) WHEN (t0.c0 IN (t0.c0)) THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE (~ (t0.c0)) END ASC, (((NOT (t0.c0))) NOT BETWEEN (((((t0.c0)AND(t0.c0)))OR(t0.c0))) AND (CAST(t0.c0 AS BLOB)))  NULLS LAST, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)%((t0.c0 IN ()))) DESC;
SELECT * FROM t0, rt0 NOT INDEXED;
SELECT * FROM t0, rt0 WHERE ((NOT (CAST(t0.c0 AS REAL)))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT ((NOT (CAST(t0.c0 AS REAL)))))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((((NOT (CAST(t0.c0 AS REAL)))) ISNULL));
SELECT * FROM t0, rt0 NOT INDEXED;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE (((((((t1.c0) BETWEEN (t0.c0) AND (0X570f6365)))AND(((t0.c0)*(t0.c0)))))AND(t0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT (((((((t1.c0) BETWEEN (t0.c0) AND (0x570f6365)))AND(((t0.c0)*(t0.c0)))))AND(t0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM t1, t0 WHERE (((((((((t1.c0) BETWEEN (t0.c0) AND (0x570f6365)))AND(((t0.c0)*(t0.c0)))))AND(t0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT rt0.c3, rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c3, rt0.c0, t0.c0, rt0.c1, rt0.c2;
SELECT rt0.c3, rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE (((t0.c0)IS NOT(t0.c0)) COLLATE NOCASE) GROUP BY rt0.c3, rt0.c0, t0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE ((NOT (((t0.c0)IS NOT(t0.c0)) COLLATE NOCASE))) GROUP BY rt0.c3, rt0.c0, t0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c3, rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE (((((t0.c0)IS NOT(t0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c3, rt0.c0, t0.c0, rt0.c1, rt0.c2;
SELECT rt0.c3, rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c3, rt0.c0, t0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c1 FROM rt0, t1, t0 GROUP BY rt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c0, rt0.c3, rt0.c1 FROM rt0, t1, t0 GROUP BY rt0.c0, rt0.c3, rt0.c1 HAVING (((rt0.c3) BETWEEN (SUM(TOTAL(GROUP_CONCAT(GROUP_CONCAT(SUM(GROUP_CONCAT(GROUP_CONCAT(rt0.c1)))))))) AND (x'')) IN ()) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1 FROM rt0, t1, t0 GROUP BY rt0.c0, rt0.c3, rt0.c1 HAVING (NOT ((((rt0.c3) BETWEEN (SUM(TOTAL(GROUP_CONCAT(GROUP_CONCAT(SUM(GROUP_CONCAT(GROUP_CONCAT(rt0.c1)))))))) AND (x'')) IN ()))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c1 FROM rt0, t1, t0 GROUP BY rt0.c0, rt0.c3, rt0.c1 HAVING (((((rt0.c3) BETWEEN (SUM(TOTAL(GROUP_CONCAT(GROUP_CONCAT(SUM(GROUP_CONCAT(GROUP_CONCAT(rt0.c1)))))))) AND (x'')) IN ())) ISNULL);
SELECT rt0.c0, rt0.c3, rt0.c1 FROM rt0, t1, t0 GROUP BY rt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c0, rt0.c3, rt0.c1 FROM rt0, t1, t0 GROUP BY rt0.c0, rt0.c3, rt0.c1 HAVING (((rt0.c3) BETWEEN (SUM(TOTAL(GROUP_CONCAT(GROUP_CONCAT(SUM(GROUP_CONCAT(GROUP_CONCAT(rt0.c1)))))))) AND (x'')) IN ()) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1 FROM rt0, t1, t0 GROUP BY rt0.c0, rt0.c3, rt0.c1 HAVING (NOT ((((rt0.c3) BETWEEN (SUM(TOTAL(GROUP_CONCAT(GROUP_CONCAT(SUM(GROUP_CONCAT(GROUP_CONCAT(rt0.c1)))))))) AND (x'')) IN ()))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c1 FROM rt0, t1, t0 GROUP BY rt0.c0, rt0.c3, rt0.c1 HAVING (((((rt0.c3) BETWEEN (SUM(TOTAL(GROUP_CONCAT(GROUP_CONCAT(SUM(GROUP_CONCAT(GROUP_CONCAT(rt0.c1)))))))) AND (x'')) IN ())) ISNULL);
SELECT rt0.c0, rt0.c3, rt0.c1 FROM rt0, t1, t0 GROUP BY rt0.c0, rt0.c3, rt0.c1;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3))) NOTNULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3))) NOTNULL)))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3))) NOTNULL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((TRIM(rt0.c1) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((TRIM(rt0.c1) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((TRIM(rt0.c1) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c2) IS FALSE)) NOTNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2) IS FALSE)) NOTNULL)))) GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c2) IS FALSE)) NOTNULL)) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c2;
SELECT rt0.c2 FROM rt0 FULL OUTER JOIN t1 ON LIKELIHOOD(((rt0.c3)&(rt0.c1)), 0.8708454601022635) INNER JOIN t0 ON (((rt0.c3)+(t1.c0)) IN ()) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 FULL OUTER JOIN t1 ON LIKELIHOOD(((rt0.c3)&(rt0.c1)), 0.8708454601022635) INNER JOIN t0 ON (((rt0.c3)+(t1.c0)) IN ()) GROUP BY rt0.c2 HAVING ((COUNT(MIN(TOTAL(TOTAL(rt0.c2))))) BETWEEN (((rt0.c1)%(TOTAL(COUNT(*))))) AND ((t1.c0 IN ()))) UNION ALL SELECT rt0.c2 FROM rt0 FULL OUTER JOIN t1 ON LIKELIHOOD(((rt0.c3)&(rt0.c1)), 0.8708454601022635) INNER JOIN t0 ON (((rt0.c3)+(t1.c0)) IN ()) GROUP BY rt0.c2 HAVING (NOT (((COUNT(MIN(TOTAL(TOTAL(rt0.c2))))) BETWEEN (((rt0.c1)%(TOTAL(COUNT(*))))) AND ((t1.c0 IN ()))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 FULL OUTER JOIN t1 ON LIKELIHOOD(((rt0.c3)&(rt0.c1)), 0.8708454601022635) INNER JOIN t0 ON (((rt0.c3)+(t1.c0)) IN ()) GROUP BY rt0.c2 HAVING ((((COUNT(MIN(TOTAL(TOTAL(rt0.c2))))) BETWEEN (((rt0.c1)%(TOTAL(COUNT(*))))) AND ((t1.c0 IN ())))) ISNULL);
SELECT ALL MAX(TYPEOF(DISTINCT rtreenode(t0.c0, t1.c0))) FROM t1, t0;
SELECT rt0.c1, t1.c0, rt0.c2, rt0.c3 FROM rt0, t1;
SELECT rt0.c1, t1.c0, rt0.c2, rt0.c3 FROM rt0, t1 WHERE ((- (CAST(rt0.c0 AS TEXT)))) UNION ALL SELECT rt0.c1, t1.c0, rt0.c2, rt0.c3 FROM rt0, t1 NOT INDEXED WHERE ((NOT ((- (CAST(rt0.c0 AS TEXT)))))) UNION ALL SELECT rt0.c1, t1.c0, rt0.c2, rt0.c3 FROM rt0, t1 WHERE ((((- (CAST(rt0.c0 AS TEXT)))) ISNULL));
SELECT rt0.c1, t1.c0, rt0.c2, rt0.c3 FROM rt0, t1;
SELECT DISTINCT * FROM t1, t0, rt0;
SELECT DISTINCT * FROM t1, t0, rt0 WHERE (((('', rt0.c2, rt0.c0, rt0.c2, 0.27988423819493125)) BETWEEN (((((rt0.c3))>=((rt0.c0))), (rt0.c3 IN (t0.c0)), CASE t0.c0  WHEN rt0.c1 THEN rt0.c3 END, CASE rt0.c1  WHEN t1.c0 THEN rt0.c3 END, rt0.c1 COLLATE RTRIM)) AND ((json_patch(rt0.c2, '-796889639'), t1.c0, LIKE(t0.c0, t0.c0), rt0.c3, (((t1.c0))>((rt0.c0))))))) UNION SELECT DISTINCT * FROM t1, t0, rt0 WHERE ((NOT (((('', rt0.c2, rt0.c0, rt0.c2, 0.27988423819493125)) BETWEEN (((((rt0.c3))>=((rt0.c0))), (rt0.c3 IN (t0.c0)), CASE t0.c0  WHEN rt0.c1 THEN rt0.c3 END, CASE rt0.c1  WHEN t1.c0 THEN rt0.c3 END, rt0.c1 COLLATE RTRIM)) AND ((json_patch(rt0.c2, '-796889639'), t1.c0, LIKE(t0.c0, t0.c0), rt0.c3, (((t1.c0))>((rt0.c0))))))))) UNION SELECT DISTINCT * FROM t1, t0, rt0 WHERE (((((('', rt0.c2, rt0.c0, rt0.c2, 0.27988423819493125)) BETWEEN (((((rt0.c3))>=((rt0.c0))), (rt0.c3 IN (t0.c0)), CASE t0.c0  WHEN rt0.c1 THEN rt0.c3 END, CASE rt0.c1  WHEN t1.c0 THEN rt0.c3 END, rt0.c1 COLLATE RTRIM)) AND ((json_patch(rt0.c2, '-796889639'), t1.c0, LIKE(t0.c0, t0.c0), rt0.c3, (((t1.c0))>((rt0.c0))))))) ISNULL));
SELECT DISTINCT * FROM t1, t0, rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((0.7221825044923867)OR(((rt0.c3) ISNULL))))AND(((0.673612181453202)-(rt0.c2)))))AND((rt0.c2 IN ()))))AND(((rt0.c2)==(rt0.c1))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((((((0.7221825044923867)OR(((rt0.c3) ISNULL))))AND(((0.673612181453202)-(rt0.c2)))))AND((rt0.c2 IN ()))))AND(((rt0.c2)==(rt0.c1))))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((((0.7221825044923867)OR(((rt0.c3) ISNULL))))AND(((0.673612181453202)-(rt0.c2)))))AND((rt0.c2 IN ()))))AND(((rt0.c2)=(rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING CASE WHEN ((t1.c0) NOT BETWEEN (SUM(COUNT(*))) AND (t1.c0)) THEN COUNT(MIN(AVG(MAX(COUNT(MAX(GROUP_CONCAT(t1.c0))))))) WHEN MIN(t1.c0) THEN (((x'', GROUP_CONCAT(t1.c0), t1.c0))==((AVG(t1.c0), SUM(t1.c0), t1.c0))) WHEN ((t1.c0)GLOB(t1.c0)) THEN COUNT(*) END UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (CASE WHEN ((t1.c0) NOT BETWEEN (SUM(COUNT(*))) AND (t1.c0)) THEN COUNT(MIN(AVG(MAX(COUNT(MAX(GROUP_CONCAT(t1.c0))))))) WHEN MIN(t1.c0) THEN (((x'', GROUP_CONCAT(t1.c0), t1.c0))==((AVG(t1.c0), SUM(t1.c0), t1.c0))) WHEN ((t1.c0)GLOB(t1.c0)) THEN COUNT(*) END)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((CASE WHEN ((t1.c0) NOT BETWEEN (SUM(COUNT(*))) AND (t1.c0)) THEN COUNT(MIN(AVG(MAX(COUNT(MAX(GROUP_CONCAT(t1.c0))))))) WHEN MIN(t1.c0) THEN (((x'', GROUP_CONCAT(t1.c0), t1.c0))=((AVG(t1.c0), SUM(t1.c0), t1.c0))) WHEN ((t1.c0)GLOB(t1.c0)) THEN COUNT(*) END) ISNULL);
SELECT ALL * FROM t0, rt0, t1;
SELECT ALL * FROM t0, rt0, t1 WHERE (x'') UNION ALL SELECT ALL * FROM t0, rt0, t1 WHERE ((NOT (x''))) UNION ALL SELECT * FROM t0, rt0, t1 WHERE (((x'') ISNULL));
SELECT ALL * FROM t0, rt0, t1;
SELECT DISTINCT * FROM rt0, t1, t0;
SELECT DISTINCT * FROM rt0, t1, t0 WHERE (CAST(CASE rt0.c1  WHEN NULL THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 END AS NUMERIC)) UNION SELECT DISTINCT * FROM rt0, t1, t0 WHERE ((NOT (CAST(CASE rt0.c1  WHEN NULL THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 END AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0, t1, t0 WHERE (((CAST(CASE rt0.c1  WHEN NULL THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 END AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt0, t1, t0;
SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 WHERE (CASE WHEN (((((((('')OR(NULL)))OR(t1.c0)))OR(t0.c0)))OR(t1.c0)) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t1.c0))) END) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t0, t1 WHERE ((NOT (CASE WHEN (((((((('')OR(NULL)))OR(t1.c0)))OR(t0.c0)))OR(t1.c0)) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t1.c0))) END))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t0, t1 WHERE (((CASE WHEN (((((((('')OR(NULL)))OR(t1.c0)))OR(t0.c0)))OR(t1.c0)) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t1.c0))) END) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t0.c0, rt0.c1, rt0.c0, t1.c0, rt0.c2, rt0.c3 FROM t1, rt0, t0 GROUP BY t0.c0, rt0.c1, rt0.c0, t1.c0, rt0.c2, rt0.c3;
SELECT ALL t0.c0, rt0.c1, rt0.c0, t1.c0, rt0.c2, rt0.c3 FROM t1, rt0, t0 GROUP BY t0.c0, rt0.c1, rt0.c0, t1.c0, rt0.c2, rt0.c3 HAVING ((((((((((COUNT(*))OR(rt0.c3)))AND(AVG(MAX(GROUP_CONCAT(MAX('-1361052779')))))))OR(COUNT(*))))OR(SUM(AVG(MAX(rt0.c3)))))) NOTNULL) UNION ALL SELECT t0.c0, rt0.c1, rt0.c0, t1.c0, rt0.c2, rt0.c3 FROM t1, rt0, t0 GROUP BY t0.c0, rt0.c1, rt0.c0, t1.c0, rt0.c2, rt0.c3 HAVING (NOT (((((((((((COUNT(*))OR(rt0.c3)))AND(AVG(MAX(GROUP_CONCAT(MAX('-1361052779')))))))OR(COUNT(*))))OR(SUM(AVG(MAX(rt0.c3)))))) NOTNULL))) UNION ALL SELECT ALL t0.c0, rt0.c1, rt0.c0, t1.c0, rt0.c2, rt0.c3 FROM t1, rt0, t0 GROUP BY t0.c0, rt0.c1, rt0.c0, t1.c0, rt0.c2, rt0.c3 HAVING ((((((((((((COUNT(*))OR(rt0.c3)))AND(AVG(MAX(GROUP_CONCAT(MAX('-1361052779')))))))OR(COUNT(*))))OR(SUM(AVG(MAX(rt0.c3)))))) NOTNULL)) ISNULL);
SELECT * FROM t1, t0;
SELECT ALL * FROM t1, t0 WHERE ((- (t1.c0)) COLLATE RTRIM) UNION ALL SELECT * FROM t1, t0 WHERE ((NOT ((- (t1.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM t1, t0 WHERE ((((- (t1.c0)) COLLATE RTRIM) ISNULL));
SELECT * FROM t1, t0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE ((((((+ (t1.c0)))OR(t1.c0 COLLATE NOCASE)))AND(LENGTH(t1.c0)))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT ((((((+ (t1.c0)))OR(t1.c0 COLLATE NOCASE)))AND(LENGTH(t1.c0)))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((((((((+ (t1.c0)))OR(t1.c0 COLLATE NOCASE)))AND(LENGTH(t1.c0)))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT rt0.c2, t0.c0, rt0.c0, rt0.c1, rt0.c3 FROM t0 INNER JOIN rt0 ON rt0.c2 COLLATE RTRIM COLLATE BINARY GROUP BY rt0.c2, t0.c0, rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c2, t0.c0, rt0.c0, rt0.c1, rt0.c3 FROM t0 INNER JOIN rt0 ON rt0.c2 COLLATE RTRIM COLLATE BINARY WHERE ((- (((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0))))) GROUP BY rt0.c2, t0.c0, rt0.c0, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c2, t0.c0, rt0.c0, rt0.c1, rt0.c3 FROM t0 INNER JOIN rt0 ON rt0.c2 COLLATE RTRIM COLLATE BINARY WHERE ((NOT ((- (((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0))))))) GROUP BY rt0.c2, t0.c0, rt0.c0, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c2, t0.c0, rt0.c0, rt0.c1, rt0.c3 FROM t0 INNER JOIN rt0 ON rt0.c2 COLLATE RTRIM COLLATE BINARY WHERE ((((- (((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0))))) ISNULL)) GROUP BY rt0.c2, t0.c0, rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c2, t0.c0, rt0.c0, rt0.c1, rt0.c3 FROM t0 INNER JOIN rt0 ON rt0.c2 COLLATE RTRIM COLLATE BINARY GROUP BY rt0.c2, t0.c0, rt0.c0, rt0.c1, rt0.c3;
SELECT ALL t1.c0 FROM t0 INNER JOIN t1 ON (((+ (t1.c0)))GLOB(0.04070884986635903)) GROUP BY t1.c0;
SELECT t1.c0 FROM t0 INNER JOIN t1 ON (((+ (t1.c0)))GLOB(0.04070884986635903)) GROUP BY t1.c0 HAVING (- (COUNT(*))) UNION ALL SELECT ALL t1.c0 FROM t0 INNER JOIN t1 ON (((+ (t1.c0)))GLOB(0.04070884986635903)) GROUP BY t1.c0 HAVING (NOT ((- (COUNT(*))))) UNION ALL SELECT t1.c0 FROM t0 INNER JOIN t1 ON (((+ (t1.c0)))GLOB(0.04070884986635903)) GROUP BY t1.c0 HAVING (((- (COUNT(*)))) ISNULL);
SELECT ALL t1.c0 FROM t0 INNER JOIN t1 ON (((+ (t1.c0)))GLOB(0.04070884986635903)) GROUP BY t1.c0;
SELECT t1.c0 FROM t0 INNER JOIN t1 ON (((+ (t1.c0)))GLOB(0.04070884986635903)) GROUP BY t1.c0 HAVING (- (COUNT(*))) UNION ALL SELECT ALL t1.c0 FROM t0 INNER JOIN t1 ON (((+ (t1.c0)))GLOB(0.04070884986635903)) GROUP BY t1.c0 HAVING (NOT ((- (COUNT(*))))) UNION ALL SELECT t1.c0 FROM t0 INNER JOIN t1 ON (((+ (t1.c0)))GLOB(0.04070884986635903)) GROUP BY t1.c0 HAVING (((- (COUNT(*)))) ISNULL);
SELECT ALL t1.c0 FROM t0 INNER JOIN t1 ON (((+ (t1.c0)))GLOB(0.04070884986635903)) GROUP BY t1.c0;
SELECT ALL * FROM t1, rt0, t0;
SELECT * FROM t1, rt0, t0 WHERE (((((rt0.c1)>(rt0.c3)))OR(rt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM t1, rt0, t0 WHERE ((NOT (((((rt0.c1)>(rt0.c3)))OR(rt0.c0 COLLATE RTRIM))))) UNION ALL SELECT * FROM t1, rt0, t0 WHERE (((((((rt0.c1)>(rt0.c3)))OR(rt0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM t1, rt0, t0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM t0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM t0, rt0 WHERE ((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM t0, rt0 WHERE ((NOT ((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)) IN ())))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM t0, rt0 WHERE ((((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM t0, rt0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (((((((t1.c0) NOTNULL))AND(CAST(t1.c0 AS REAL))))AND((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((((((t1.c0) NOTNULL))AND(CAST(t1.c0 AS REAL))))AND((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((((((t1.c0) NOTNULL))AND(CAST(t1.c0 AS REAL))))AND((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL rt0.c1, t1.c0, rt0.c3 FROM t1, rt0, t0 GROUP BY rt0.c1, t1.c0, rt0.c3;
SELECT rt0.c1, t1.c0, rt0.c3 FROM t1, rt0, t0 GROUP BY rt0.c1, t1.c0, rt0.c3 HAVING (((COUNT(rt0.c3)))<((COUNT(*)))) UNION ALL SELECT rt0.c1, t1.c0, rt0.c3 FROM t1, rt0, t0 GROUP BY rt0.c1, t1.c0, rt0.c3 HAVING (NOT ((((COUNT(rt0.c3)))<((COUNT(*)))))) UNION ALL SELECT rt0.c1, t1.c0, rt0.c3 FROM t1, rt0, t0 GROUP BY rt0.c1, t1.c0, rt0.c3 HAVING (((((COUNT(rt0.c3)))<((COUNT(*))))) ISNULL);
SELECT ALL rt0.c1, t1.c0, rt0.c3 FROM t1, rt0, t0 GROUP BY rt0.c1, t1.c0, rt0.c3;
SELECT rt0.c1, t1.c0, rt0.c3 FROM t1, rt0, t0 GROUP BY rt0.c1, t1.c0, rt0.c3 HAVING (((COUNT(rt0.c3)))<((COUNT(*)))) UNION ALL SELECT rt0.c1, t1.c0, rt0.c3 FROM t1, rt0, t0 GROUP BY rt0.c1, t1.c0, rt0.c3 HAVING (NOT ((((COUNT(rt0.c3)))<((COUNT(*)))))) UNION ALL SELECT rt0.c1, t1.c0, rt0.c3 FROM t1, rt0, t0 GROUP BY rt0.c1, t1.c0, rt0.c3 HAVING (((((COUNT(rt0.c3)))<((COUNT(*))))) ISNULL);
SELECT ALL rt0.c1, t1.c0, rt0.c3 FROM t1, rt0, t0 GROUP BY rt0.c1, t1.c0, rt0.c3;
SELECT rt0.c2, rt0.c0, t0.c0, rt0.c3, rt0.c1 FROM t0, rt0;
SELECT ALL rt0.c2, rt0.c0, t0.c0, rt0.c3, rt0.c1 FROM t0, rt0 WHERE (CAST(0.5282423568255862 AS INTEGER)) UNION ALL SELECT ALL rt0.c2, rt0.c0, t0.c0, rt0.c3, rt0.c1 FROM t0, rt0 WHERE ((NOT (CAST(0.5282423568255862 AS INTEGER)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, t0.c0, rt0.c3, rt0.c1 FROM t0, rt0 NOT INDEXED WHERE (((CAST(0.5282423568255862 AS INTEGER)) ISNULL));
SELECT rt0.c2, rt0.c0, t0.c0, rt0.c3, rt0.c1 FROM t0, rt0;
SELECT DISTINCT * FROM t1 FULL OUTER JOIN rt0 ON CAST(544253587 COLLATE RTRIM AS INTEGER);
SELECT DISTINCT * FROM t1 FULL OUTER JOIN rt0 ON CAST(544253587 COLLATE RTRIM AS INTEGER) WHERE ((((NULL)) BETWEEN ((rt0.c3)) AND (('am1j#!v헍j')))) UNION SELECT DISTINCT * FROM t1 FULL OUTER JOIN rt0 ON CAST(544253587 COLLATE RTRIM AS INTEGER) WHERE ((NOT ((((NULL)) BETWEEN ((rt0.c3)) AND (('am1j#!v헍j')))))) UNION SELECT DISTINCT * FROM t1 FULL OUTER JOIN rt0 ON CAST(544253587 COLLATE RTRIM AS INTEGER) WHERE ((((((NULL)) BETWEEN ((rt0.c3)) AND (('am1j#!v헍j')))) ISNULL));
SELECT DISTINCT * FROM t1 FULL OUTER JOIN rt0 ON CAST(544253587 COLLATE RTRIM AS INTEGER);
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0 WHERE (((((((((((x'')<(t0.c0)))OR(CAST(t0.c0 AS REAL))))OR(((t0.c0) NOTNULL))))OR(((((((((t0.c0)OR(t1.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))))AND(((((t0.c0)OR(t1.c0)))OR(t0.c0))))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t1, t0 WHERE ((NOT (((((((((((x'')<(t0.c0)))OR(CAST(t0.c0 AS REAL))))OR(((t0.c0) NOTNULL))))OR(((((((((t0.c0)OR(t1.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))))AND(((((t0.c0)OR(t1.c0)))OR(t0.c0))))))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t1, t0 WHERE (((((((((((((x'')<(t0.c0)))OR(CAST(t0.c0 AS REAL))))OR(((t0.c0) NOTNULL))))OR(((((((((t0.c0)OR(t1.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))))AND(((((t0.c0)OR(t1.c0)))OR(t0.c0))))) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT rt0.c0 FROM t0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM t0, rt0 GROUP BY rt0.c0 HAVING LOWER(CAST(COUNT(*) AS TEXT)) UNION ALL SELECT rt0.c0 FROM t0, rt0 GROUP BY rt0.c0 HAVING (NOT (LOWER(CAST(COUNT(*) AS TEXT)))) UNION ALL SELECT rt0.c0 FROM t0, rt0 GROUP BY rt0.c0 HAVING ((LOWER(CAST(COUNT(*) AS TEXT))) ISNULL);
SELECT rt0.c0 FROM t0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM t0, rt0 GROUP BY rt0.c0 HAVING LOWER(CAST(COUNT(*) AS TEXT)) UNION ALL SELECT rt0.c0 FROM t0, rt0 GROUP BY rt0.c0 HAVING (NOT (LOWER(CAST(COUNT(*) AS TEXT)))) UNION ALL SELECT rt0.c0 FROM t0, rt0 GROUP BY rt0.c0 HAVING ((LOWER(CAST(COUNT(*) AS TEXT))) ISNULL);
SELECT rt0.c0 FROM t0, rt0 GROUP BY rt0.c0;
SELECT * FROM t1, t0, rt0;
SELECT * FROM t1, t0, rt0 WHERE (0.7813257643635803) UNION ALL SELECT ALL * FROM t1, t0, rt0 WHERE ((NOT (0.7813257643635803))) UNION ALL SELECT ALL * FROM t1, t0, rt0 WHERE (((0.7813257643635803) ISNULL));
SELECT * FROM t1, t0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE (rt0.c2 IN ())  WHEN ((rt0.c3)%(rt0.c3)) THEN ((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c1)) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE (rt0.c2 IN ())  WHEN ((rt0.c3)%(rt0.c3)) THEN ((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c1)) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE (rt0.c2 IN ())  WHEN ((rt0.c3)%(rt0.c3)) THEN ((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c1)) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (ABS(t1.c0) COLLATE NOCASE) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (ABS(t1.c0) COLLATE NOCASE))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((ABS(t1.c0) COLLATE NOCASE) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t0 NOT INDEXED, t1 NOT INDEXED GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT * FROM rt0, t0, t1;
SELECT ALL * FROM rt0, t0, t1 WHERE (x'') UNION ALL SELECT * FROM rt0, t0, t1 WHERE ((NOT (x''))) UNION ALL SELECT * FROM rt0, t0, t1 WHERE (((x'') ISNULL));
SELECT * FROM rt0, t0, t1;
SELECT DISTINCT t1.c0, rt0.c2, rt0.c1 FROM t1 NATURAL JOIN rt0;
SELECT DISTINCT t1.c0, rt0.c2, rt0.c1 FROM t1 NATURAL JOIN rt0 WHERE (((rt0.c2)IS NOT(((rt0.c0)LIKE(rt0.c1))))) UNION SELECT DISTINCT t1.c0, rt0.c2, rt0.c1 FROM t1 NATURAL JOIN rt0 WHERE ((NOT (((rt0.c2)IS NOT(((rt0.c0)LIKE(rt0.c1))))))) UNION SELECT DISTINCT t1.c0, rt0.c2, rt0.c1 FROM t1 NATURAL JOIN rt0 WHERE (((((rt0.c2)IS NOT(((rt0.c0)LIKE(rt0.c1))))) ISNULL));
SELECT DISTINCT t1.c0, rt0.c2, rt0.c1 FROM t1 NATURAL JOIN rt0;
SELECT ALL rt0.c1, rt0.c3, rt0.c0, rt0.c2, t1.c0 FROM t1, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c2, t1.c0;
SELECT rt0.c1, rt0.c3, rt0.c0, rt0.c2, t1.c0 FROM t1, rt0 WHERE (CASE rt0.c2 COLLATE RTRIM  WHEN (((t1.c0, rt0.c0, 'l'))==((t1.c0, 0x135c7a4a, rt0.c2))) THEN ('' IN ()) END) GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c2, t1.c0 UNION SELECT rt0.c1, rt0.c3, rt0.c0, rt0.c2, t1.c0 FROM t1, rt0 WHERE ((NOT (CASE rt0.c2 COLLATE RTRIM  WHEN (((t1.c0, rt0.c0, 'l'))==((t1.c0, 0x135c7a4a, rt0.c2))) THEN ('' IN ()) END))) GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c2, t1.c0 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c0, rt0.c2, t1.c0 FROM t1, rt0 WHERE (((CASE rt0.c2 COLLATE RTRIM  WHEN (((t1.c0, rt0.c0, 'l'))=((t1.c0, 0X135c7a4a, rt0.c2))) THEN ('' IN ()) END) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c2, t1.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c0, rt0.c2, t1.c0 FROM t1, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c2, t1.c0;
SELECT ALL t1.c0, rt0.c2 FROM t1, rt0 GROUP BY t1.c0, rt0.c2;
SELECT t1.c0, rt0.c2 FROM t1, rt0 GROUP BY t1.c0, rt0.c2 HAVING SUM(CASE WHEN GROUP_CONCAT(rt0.c2) THEN GROUP_CONCAT(MIN(rt0.c3)) WHEN SUM(COUNT(*)) THEN rt0.c3 WHEN AVG(rt0.c3) THEN TOTAL(rt0.c1) END) UNION ALL SELECT t1.c0, rt0.c2 FROM t1, rt0 GROUP BY t1.c0, rt0.c2 HAVING (NOT (SUM(CASE WHEN GROUP_CONCAT(rt0.c2) THEN GROUP_CONCAT(MIN(rt0.c3)) WHEN SUM(COUNT(*)) THEN rt0.c3 WHEN AVG(rt0.c3) THEN TOTAL(rt0.c1) END))) UNION ALL SELECT t1.c0, rt0.c2 FROM t1, rt0 GROUP BY t1.c0, rt0.c2 HAVING ((SUM(CASE WHEN GROUP_CONCAT(rt0.c2) THEN GROUP_CONCAT(MIN(rt0.c3)) WHEN SUM(COUNT(*)) THEN rt0.c3 WHEN AVG(rt0.c3) THEN TOTAL(rt0.c1) END)) ISNULL);
SELECT rt0.c2 FROM rt0 FULL OUTER JOIN t1 ON ((((rt0.c3) NOT BETWEEN (x'') AND (rt0.c3)))*(((t1.c0) ISNULL)));
SELECT rt0.c2 FROM rt0 FULL OUTER JOIN t1 ON ((((rt0.c3) NOT BETWEEN (x'') AND (rt0.c3)))*(((t1.c0) ISNULL))) WHERE (((rt0.c1 COLLATE RTRIM)*(('0.058002691873684786' IN ())))) UNION ALL SELECT ALL rt0.c2 FROM rt0 FULL OUTER JOIN t1 ON ((((rt0.c3) NOT BETWEEN (x'') AND (rt0.c3)))*(((t1.c0) ISNULL))) WHERE ((NOT (((rt0.c1 COLLATE RTRIM)*(('0.058002691873684786' IN ())))))) UNION ALL SELECT rt0.c2 FROM rt0 FULL OUTER JOIN t1 ON ((((rt0.c3) NOT BETWEEN (x'') AND (rt0.c3)))*(((t1.c0) ISNULL))) WHERE (((((rt0.c1 COLLATE RTRIM)*(('0.058002691873684786' IN ())))) ISNULL));
SELECT rt0.c2 FROM rt0 FULL OUTER JOIN t1 ON ((((rt0.c3) NOT BETWEEN (x'') AND (rt0.c3)))*(((t1.c0) ISNULL)));
SELECT DISTINCT rt0.c2, rt0.c0, t0.c0, rt0.c3, rt0.c1, t1.c0 FROM t0, t1, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, t0.c0, rt0.c3, rt0.c1, t1.c0 FROM t0, t1, rt0 WHERE (CASE (t0.c0 IN ())  WHEN ((rt0.c0)IS(t1.c0)) THEN ((t1.c0)>>(t1.c0)) ELSE (- (t0.c0)) END) UNION SELECT DISTINCT rt0.c2, rt0.c0, t0.c0, rt0.c3, rt0.c1, t1.c0 FROM t0 NOT INDEXED, t1, rt0 WHERE ((NOT (CASE (t0.c0 IN ())  WHEN ((rt0.c0)IS(t1.c0)) THEN ((t1.c0)>>(t1.c0)) ELSE (- (t0.c0)) END))) UNION SELECT DISTINCT rt0.c2, rt0.c0, t0.c0, rt0.c3, rt0.c1, t1.c0 FROM t0 NOT INDEXED, t1, rt0 WHERE (((CASE (t0.c0 IN ())  WHEN ((rt0.c0)IS(t1.c0)) THEN ((t1.c0)>>(t1.c0)) ELSE (- (t0.c0)) END) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, t0.c0, rt0.c3, rt0.c1, t1.c0 FROM t0, t1, rt0;
SELECT rt0.c3, rt0.c0, t1.c0, rt0.c2, t0.c0 FROM rt0, t0, t1 GROUP BY rt0.c3, rt0.c0, t1.c0, rt0.c2, t0.c0;
SELECT rt0.c3, rt0.c0, t1.c0, rt0.c2, t0.c0 FROM rt0, t0, t1 WHERE (SQLITE_SOURCE_ID()) GROUP BY rt0.c3, rt0.c0, t1.c0, rt0.c2, t0.c0 UNION SELECT ALL rt0.c3, rt0.c0, t1.c0, rt0.c2, t0.c0 FROM rt0, t0, t1 WHERE ((NOT (SQLITE_SOURCE_ID()))) GROUP BY rt0.c3, rt0.c0, t1.c0, rt0.c2, t0.c0 UNION SELECT ALL rt0.c3, rt0.c0, t1.c0, rt0.c2, t0.c0 FROM rt0, t0, t1 WHERE (((SQLITE_SOURCE_ID()) ISNULL)) GROUP BY rt0.c3, rt0.c0, t1.c0, rt0.c2, t0.c0;
SELECT rt0.c3, rt0.c0, t1.c0, rt0.c2, t0.c0 FROM rt0, t0, t1 GROUP BY rt0.c3, rt0.c0, t1.c0, rt0.c2, t0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING CAST(((COUNT(*)) ISNULL) AS INTEGER) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (CAST(((COUNT(*)) ISNULL) AS INTEGER))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((CAST(((COUNT(*)) ISNULL) AS INTEGER)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING CAST(((COUNT(*)) ISNULL) AS INTEGER) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (CAST(((COUNT(*)) ISNULL) AS INTEGER))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((CAST(((COUNT(*)) ISNULL) AS INTEGER)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t0.c0 FROM t1, t0;
SELECT t0.c0 FROM t1, t0 WHERE ((NOT (((t0.c0)>>(t1.c0))))) UNION ALL SELECT t0.c0 FROM t1, t0 WHERE ((NOT ((NOT (((t0.c0)>>(t1.c0))))))) UNION ALL SELECT t0.c0 FROM t1, t0 WHERE ((((NOT (((t0.c0)>>(t1.c0))))) ISNULL));
SELECT t0.c0 FROM t1, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (DATETIME(0.13904250994143963, (t0.c0 IN ()), COALESCE(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (DATETIME(0.13904250994143963, (t0.c0 IN ()), COALESCE(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((DATETIME(0.13904250994143963, (t0.c0 IN ()), COALESCE(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT rt0.c3, rt0.c1, t0.c0 FROM t1, rt0 LEFT OUTER JOIN t0 ON (rt0.c3 IN ()) COLLATE RTRIM GROUP BY rt0.c3, rt0.c1, t0.c0;
SELECT ALL rt0.c3, rt0.c1, t0.c0 FROM t1, rt0 LEFT OUTER JOIN t0 ON (rt0.c3 IN ()) COLLATE RTRIM WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END AS INTEGER)) GROUP BY rt0.c3, rt0.c1, t0.c0 UNION SELECT rt0.c3, rt0.c1, t0.c0 FROM t1, rt0 LEFT OUTER JOIN t0 ON (rt0.c3 IN ()) COLLATE RTRIM WHERE ((NOT (CAST(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END AS INTEGER)))) GROUP BY rt0.c3, rt0.c1, t0.c0 UNION SELECT ALL rt0.c3, rt0.c1, t0.c0 FROM t1, rt0 LEFT OUTER JOIN t0 ON (rt0.c3 IN ()) COLLATE RTRIM WHERE (((CAST(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END AS INTEGER)) ISNULL)) GROUP BY rt0.c3, rt0.c1, t0.c0;
SELECT rt0.c3, rt0.c1, t0.c0 FROM t1, rt0 LEFT OUTER JOIN t0 ON (rt0.c3 IN ()) COLLATE RTRIM GROUP BY rt0.c3, rt0.c1, t0.c0;
SELECT rt0.c2, rt0.c0 FROM t1, rt0, t0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM t1, rt0, t0 GROUP BY rt0.c2, rt0.c0 HAVING CASE WHEN MAX(t0.c0) THEN 0.8766458287579635 ELSE SUM(MIN(TOTAL(TOTAL(rt0.c0)))) COLLATE BINARY END UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM t1, rt0, t0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (CASE WHEN MAX(t0.c0) THEN 0.8766458287579635 ELSE SUM(MIN(TOTAL(TOTAL(rt0.c0)))) COLLATE BINARY END)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM t1, rt0, t0 GROUP BY rt0.c2, rt0.c0 HAVING ((CASE WHEN MAX(t0.c0) THEN 0.8766458287579635 ELSE SUM(MIN(TOTAL(TOTAL(rt0.c0)))) COLLATE BINARY END) ISNULL);
SELECT ALL t0.c0 FROM t1, rt0, t0;
SELECT t0.c0 FROM t1, rt0, t0 WHERE (((((((((rt0.c0 COLLATE RTRIM)AND(0.8601804434054248)))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)))))AND(CAST(rt0.c2 AS INTEGER))))AND(x''))) UNION ALL SELECT t0.c0 FROM t1, rt0, t0 WHERE ((NOT (((((((((rt0.c0 COLLATE RTRIM)AND(0.8601804434054248)))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)))))AND(CAST(rt0.c2 AS INTEGER))))AND(x''))))) UNION ALL SELECT t0.c0 FROM t1, rt0, t0 WHERE (((((((((((rt0.c0 COLLATE RTRIM)AND(0.8601804434054248)))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)))))AND(CAST(rt0.c2 AS INTEGER))))AND(x''))) ISNULL));
SELECT ALL t0.c0 FROM t1, rt0, t0;
SELECT DISTINCT rt0.c0 FROM rt0 INNER JOIN t0 ON ((NULL)IS(rt0.c2)) COLLATE BINARY;
SELECT DISTINCT rt0.c0 FROM rt0 INNER JOIN t0 ON ((NULL)IS(rt0.c2)) COLLATE BINARY WHERE (MIN(UNICODE(rt0.c2), (- (rt0.c1)))) UNION SELECT DISTINCT rt0.c0 FROM rt0 INNER JOIN t0 ON ((NULL)IS(rt0.c2)) COLLATE BINARY WHERE ((NOT (MIN(UNICODE(rt0.c2), (- (rt0.c1)))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 INNER JOIN t0 ON ((NULL)IS(rt0.c2)) COLLATE BINARY WHERE (((MIN(UNICODE(rt0.c2), (- (rt0.c1)))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0 INNER JOIN t0 ON ((NULL)IS(rt0.c2)) COLLATE BINARY;
SELECT rt0.c1, t0.c0, rt0.c2, rt0.c3 FROM rt0 FULL OUTER JOIN t0 ON CAST(((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2)))AND(t0.c0)))AND(t0.c0)) AS REAL) GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c1, t0.c0, rt0.c2, rt0.c3 FROM rt0 FULL OUTER JOIN t0 ON CAST(((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2)))AND(t0.c0)))AND(t0.c0)) AS REAL) WHERE ((~ (rt0.c0))) GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c3 UNION SELECT rt0.c1, t0.c0, rt0.c2, rt0.c3 FROM rt0 FULL OUTER JOIN t0 ON CAST(((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2)))AND(t0.c0)))AND(t0.c0)) AS REAL) WHERE ((NOT ((~ (rt0.c0))))) GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c1, t0.c0, rt0.c2, rt0.c3 FROM rt0 FULL OUTER JOIN t0 ON CAST(((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2)))AND(t0.c0)))AND(t0.c0)) AS REAL) WHERE ((((~ (rt0.c0))) ISNULL)) GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c3;
SELECT rt0.c1, t0.c0, rt0.c2, rt0.c3 FROM rt0 FULL OUTER JOIN t0 ON CAST(((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2)))AND(t0.c0)))AND(t0.c0)) AS REAL) GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c3;
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (MAX(t1.c0) IN ()) UNION ALL SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (NOT ((MAX(t1.c0) IN ()))) UNION ALL SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (((MAX(t1.c0) IN ())) ISNULL);
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (MAX(t1.c0) IN ()) UNION ALL SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (NOT ((MAX(t1.c0) IN ()))) UNION ALL SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (((MAX(t1.c0) IN ())) ISNULL);
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((((((rt0.c2, rt0.c0, rt0.c3)) BETWEEN ((rt0.c0, rt0.c3, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c1))))OR(((rt0.c2)OR(rt0.c2)))))AND((rt0.c2 IN (rt0.c0, rt0.c1))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((((rt0.c2, rt0.c0, rt0.c3)) BETWEEN ((rt0.c0, rt0.c3, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c1))))OR(((rt0.c2)OR(rt0.c2)))))AND((rt0.c2 IN (rt0.c0, rt0.c1))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((((((rt0.c2, rt0.c0, rt0.c3)) BETWEEN ((rt0.c0, rt0.c3, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c1))))OR(((rt0.c2)OR(rt0.c2)))))AND((rt0.c2 IN (rt0.c0, rt0.c1))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((t0.c0 IN (t0.c0)))>(t0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0 IN (t0.c0)))>(t0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0 IN (t0.c0)))>(t0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0, t1 WHERE ((((t0.c0 COLLATE NOCASE, ((-707768490)/(t1.c0)), ((((0.3034569152883664)AND(t1.c0)))OR(t1.c0))))<((((t0.c0)&(t1.c0)), CAST(t0.c0 AS BLOB), ((t0.c0) ISNULL))))) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t0, t1 WHERE ((NOT ((((t0.c0 COLLATE NOCASE, ((-707768490)/(t1.c0)), ((((0.3034569152883664)AND(t1.c0)))OR(t1.c0))))<((((t0.c0)&(t1.c0)), CAST(t0.c0 AS BLOB), ((t0.c0) ISNULL))))))) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t0, t1 WHERE ((((((t0.c0 COLLATE NOCASE, ((-707768490)/(t1.c0)), ((((0.3034569152883664)AND(t1.c0)))OR(t1.c0))))<((((t0.c0)&(t1.c0)), CAST(t0.c0 AS BLOB), ((t0.c0) ISNULL))))) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING AVG(SUM(rt0.c2)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (AVG(SUM(rt0.c2)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((AVG(SUM(rt0.c2))) ISNULL);
SELECT * FROM t1 RIGHT OUTER JOIN rt0 ON (((t0.c0, t1.c0, rt0.c3)) BETWEEN ((LIKELIHOOD(t0.c0, 0.7165639512334626), ((rt0.c3)||(rt0.c1)), ((t0.c0)>(rt0.c2)))) AND (((- (t0.c0)), rt0.c3, ((rt0.c1) IS FALSE)))) RIGHT OUTER JOIN t0 ON ((((rt0.c3)<<(rt0.c3))) IS TRUE);
SELECT DISTINCT t0.c0, t1.c0 FROM t0, t1;
SELECT DISTINCT t0.c0, t1.c0 FROM t0, t1 WHERE ((~ ((~ (t1.c0))))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t0, t1 WHERE ((NOT ((~ ((~ (t1.c0))))))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t0, t1 WHERE ((((~ ((~ (t1.c0))))) ISNULL));
SELECT DISTINCT t0.c0, t1.c0 FROM t0, t1;
SELECT ALL rt0.c3, rt0.c2, t0.c0, rt0.c1, rt0.c0 FROM t0, t1, rt0 GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c2, t0.c0, rt0.c1, rt0.c0 FROM t0, t1, rt0 WHERE (CASE WHEN NULL THEN CASE WHEN 0.9945069961167486 THEN rt0.c3 ELSE t0.c0 END END) GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c2, t0.c0, rt0.c1, rt0.c0 FROM t0, t1, rt0 WHERE ((NOT (CASE WHEN NULL THEN CASE WHEN 0.9945069961167486 THEN rt0.c3 ELSE t0.c0 END END))) GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c2, t0.c0, rt0.c1, rt0.c0 FROM t0, t1, rt0 WHERE (((CASE WHEN NULL THEN CASE WHEN 0.9945069961167486 THEN rt0.c3 ELSE t0.c0 END END) ISNULL)) GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, t0.c0, rt0.c1, rt0.c0 FROM t0, t1, rt0 GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c1, t1.c0 FROM rt0, t0, t1 GROUP BY rt0.c3, rt0.c1, t1.c0;
SELECT rt0.c3, rt0.c1, t1.c0 FROM rt0, t0, t1 GROUP BY rt0.c3, rt0.c1, t1.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c3, rt0.c1, t1.c0 FROM rt0, t0, t1 GROUP BY rt0.c3, rt0.c1, t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, rt0.c1, t1.c0 FROM rt0, t0, t1 GROUP BY rt0.c3, rt0.c1, t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c3, rt0.c1, t1.c0 FROM rt0, t0, t1 GROUP BY rt0.c3, rt0.c1, t1.c0;
SELECT rt0.c3, rt0.c1, t1.c0 FROM rt0, t0, t1 GROUP BY rt0.c3, rt0.c1, t1.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c3, rt0.c1, t1.c0 FROM rt0, t0, t1 GROUP BY rt0.c3, rt0.c1, t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, rt0.c1, t1.c0 FROM rt0, t0, t1 GROUP BY rt0.c3, rt0.c1, t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c3, rt0.c1, t1.c0 FROM rt0, t0, t1 GROUP BY rt0.c3, rt0.c1, t1.c0;
SELECT ALL SUM(((((((t0.c0)OR(t0.c0)))AND(t0.c0)))&((((t0.c0, '-1157531190', t0.c0, 0.26258548817886007, t0.c0))<((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))))) FROM t0 ORDER BY ABS(CAST(t0.c0 AS TEXT)) DESC  NULLS LAST;
SELECT ALL * FROM t1, rt0, t0;
SELECT ALL * FROM t1, rt0, t0 WHERE (load_extension(((rt0.c0)<>(0.8827551026562355)))) UNION ALL SELECT * FROM t1, rt0, t0 WHERE ((NOT (load_extension(((rt0.c0)<>(0.8827551026562355)))))) UNION ALL SELECT * FROM t1, rt0, t0 WHERE (((load_extension(((rt0.c0)<>(0.8827551026562355)))) ISNULL));
SELECT DISTINCT * FROM t0, t1;
SELECT DISTINCT * FROM t0, t1 WHERE (((((t0.c0 COLLATE BINARY)OR(((((t1.c0)OR(x'')))AND(t0.c0)))))OR((t0.c0 IN (t0.c0))))) UNION SELECT DISTINCT * FROM t0, t1 WHERE ((NOT (((((t0.c0 COLLATE BINARY)OR(((((t1.c0)OR(x'')))AND(t0.c0)))))OR((t0.c0 IN (t0.c0))))))) UNION SELECT DISTINCT * FROM t0, t1 WHERE (((((((t0.c0 COLLATE BINARY)OR(((((t1.c0)OR(x'')))AND(t0.c0)))))OR((t0.c0 IN (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, t1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((((((t1.c0) ISNULL))OR(t1.c0)))OR(((t1.c0)<>(t1.c0))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((((((t1.c0) ISNULL))OR(t1.c0)))OR(((t1.c0)!=(t1.c0))))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((((((((t1.c0) ISNULL))OR(t1.c0)))OR(((t1.c0)<>(t1.c0))))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON (+ (rt0.c0 COLLATE BINARY)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON (+ (rt0.c0 COLLATE BINARY)) GROUP BY t0.c0 HAVING NULLIF(MAX(SUM(GROUP_CONCAT(rt0.c1))) COLLATE NOCASE, COUNT(*)) UNION ALL SELECT t0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON (+ (rt0.c0 COLLATE BINARY)) GROUP BY t0.c0 HAVING (NOT (NULLIF(MAX(SUM(GROUP_CONCAT(rt0.c1))) COLLATE NOCASE, COUNT(*)))) UNION ALL SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON (+ (rt0.c0 COLLATE BINARY)) GROUP BY t0.c0 HAVING ((NULLIF(MAX(SUM(GROUP_CONCAT(rt0.c1))) COLLATE NOCASE, COUNT(*))) ISNULL);
SELECT ALL t1.c0 FROM rt0, t0, t1;
SELECT ALL t1.c0 FROM rt0, t0, t1 WHERE (((rt0.c1 IN ()) IN (HEX(rt0.c3)))) UNION ALL SELECT t1.c0 FROM rt0, t0, t1 WHERE ((NOT (((rt0.c1 IN ()) IN (HEX(rt0.c3)))))) UNION ALL SELECT ALL t1.c0 FROM rt0, t0, t1 WHERE (((((rt0.c1 IN ()) IN (HEX(rt0.c3)))) ISNULL));
SELECT ALL t1.c0 FROM rt0, t0, t1;
SELECT DISTINCT rt0.c2 FROM t0, t1, rt0;
SELECT DISTINCT rt0.c2 FROM t0, t1, rt0 WHERE ((((rt0.c3, rt0.c3, t1.c0))<>((rt0.c0, rt0.c2, t1.c0))) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c2 FROM t0, t1, rt0 WHERE ((NOT ((((rt0.c3, rt0.c3, t1.c0))!=((rt0.c0, rt0.c2, t1.c0))) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c2 FROM t0, t1, rt0 WHERE ((((((rt0.c3, rt0.c3, t1.c0))<>((rt0.c0, rt0.c2, t1.c0))) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c2 FROM t0, t1, rt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 END IN ())) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((CASE WHEN t0.c0 THEN t0.c0 END IN ())))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 NOT INDEXED WHERE ((((CASE WHEN t0.c0 THEN t0.c0 END IN ())) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t1.c0, rt0.c3 FROM t1, rt0, t0 GROUP BY t1.c0, rt0.c3;
SELECT ALL t1.c0, rt0.c3 FROM t1, rt0, t0 GROUP BY t1.c0, rt0.c3 HAVING GROUP_CONCAT(rt0.c2) UNION ALL SELECT t1.c0, rt0.c3 FROM t1, rt0, t0 GROUP BY t1.c0, rt0.c3 HAVING (NOT (GROUP_CONCAT(rt0.c2))) UNION ALL SELECT t1.c0, rt0.c3 FROM t1, rt0, t0 GROUP BY t1.c0, rt0.c3 HAVING ((GROUP_CONCAT(rt0.c2)) ISNULL);
SELECT ALL t1.c0, rt0.c3 FROM t1, rt0, t0 GROUP BY t1.c0, rt0.c3;
SELECT ALL t1.c0, rt0.c3 FROM t1, rt0, t0 GROUP BY t1.c0, rt0.c3 HAVING GROUP_CONCAT(rt0.c2) UNION ALL SELECT t1.c0, rt0.c3 FROM t1, rt0, t0 GROUP BY t1.c0, rt0.c3 HAVING (NOT (GROUP_CONCAT(rt0.c2))) UNION ALL SELECT t1.c0, rt0.c3 FROM t1, rt0, t0 GROUP BY t1.c0, rt0.c3 HAVING ((GROUP_CONCAT(rt0.c2)) ISNULL);
SELECT ALL t1.c0, rt0.c3 FROM t1, rt0, t0 GROUP BY t1.c0, rt0.c3;
SELECT ALL SUM(rt0.c0) FROM t1, t0, rt0 ORDER BY 'Fh<j '  NULLS LAST;
SELECT * FROM t1 INNER JOIN t0 ON (((json_extract(t1.c0, t1.c0)))<(((- (t0.c0)))));
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0)AND(t1.c0)))<(((t1.c0) IS FALSE)))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((((t1.c0)AND(t1.c0)))<(((t1.c0) IS FALSE)))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0)AND(t1.c0)))<(((t1.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t0.c0, rt0.c3, rt0.c0, rt0.c2, t1.c0 FROM rt0, t1 NATURAL JOIN t0 GROUP BY t0.c0, rt0.c3, rt0.c0, rt0.c2, t1.c0;
SELECT ALL t0.c0, rt0.c3, rt0.c0, rt0.c2, t1.c0 FROM rt0, t1 NATURAL JOIN t0 WHERE ((((t1.c0)) BETWEEN ((rt0.c2)) AND ((t0.c0))) COLLATE NOCASE) GROUP BY t0.c0, rt0.c3, rt0.c0, rt0.c2, t1.c0 UNION SELECT ALL t0.c0, rt0.c3, rt0.c0, rt0.c2, t1.c0 FROM rt0, t1 NATURAL JOIN t0 WHERE ((NOT ((((t1.c0)) BETWEEN ((rt0.c2)) AND ((t0.c0))) COLLATE NOCASE))) GROUP BY t0.c0, rt0.c3, rt0.c0, rt0.c2, t1.c0 UNION SELECT t0.c0, rt0.c3, rt0.c0, rt0.c2, t1.c0 FROM rt0, t1 NATURAL JOIN t0 WHERE ((((((t1.c0)) BETWEEN ((rt0.c2)) AND ((t0.c0))) COLLATE NOCASE) ISNULL)) GROUP BY t0.c0, rt0.c3, rt0.c0, rt0.c2, t1.c0;
SELECT ALL t0.c0, rt0.c3, rt0.c0, rt0.c2, t1.c0 FROM rt0, t1 NATURAL JOIN t0 GROUP BY t0.c0, rt0.c3, rt0.c0, rt0.c2, t1.c0;
SELECT t0.c0, t1.c0, rt0.c1, rt0.c0, rt0.c2 FROM t1 FULL OUTER JOIN t0 ON (((((rt0.c0)OR(0.860060787535382)))OR(rt0.c1)) IN (((((rt0.c3)AND(rt0.c2)))AND(t0.c0)))) CROSS JOIN rt0 ON CASE WHEN ((t1.c0) BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((((((((rt0.c3)AND(t1.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c3)) WHEN rt0.c2 THEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN 0.011151239674046076 THEN rt0.c3 ELSE t0.c0 END WHEN (((t1.c0))>=((rt0.c1))) THEN JULIANDAY(t0.c0, rt0.c1, rt0.c1) END GROUP BY t0.c0, t1.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((((CAST(t0.c0 AS NUMERIC)))>=((((t0.c0)IS NOT(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((CAST(t0.c0 AS NUMERIC)))>=((((t0.c0)IS NOT(t0.c0)))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((((CAST(t0.c0 AS NUMERIC)))>=((((t0.c0)IS NOT(t0.c0)))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE ((((t1.c0, t1.c0, t1.c0)) BETWEEN (((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))), CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END, t1.c0 COLLATE NOCASE)) AND ((t1.c0, t1.c0 COLLATE BINARY, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT ((((t1.c0, t1.c0, t1.c0)) BETWEEN (((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))), CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END, t1.c0 COLLATE NOCASE)) AND ((t1.c0, t1.c0 COLLATE BINARY, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((((((t1.c0, t1.c0, t1.c0)) BETWEEN (((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))), CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END, t1.c0 COLLATE NOCASE)) AND ((t1.c0, t1.c0 COLLATE BINARY, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (((((t1.c0) IS TRUE))&(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((((t1.c0) IS TRUE))&(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((((t1.c0) IS TRUE))&(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL rt0.c1, rt0.c3 FROM rt0;
SELECT ALL rt0.c1, rt0.c3 FROM rt0 WHERE (((CASE rt0.c3  WHEN rt0.c2 THEN NULL END)>(rt0.c1))) UNION ALL SELECT rt0.c1, rt0.c3 FROM rt0 NOT INDEXED WHERE ((NOT (((CASE rt0.c3  WHEN rt0.c2 THEN NULL END)>(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c3 FROM rt0 WHERE (((((CASE rt0.c3  WHEN rt0.c2 THEN NULL END)>(rt0.c1))) ISNULL));
SELECT ALL rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN rt0 ON (((NOT (t0.c0))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND ((rt0.c1 IN ())));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN rt0 ON (((NOT (t0.c0))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND ((rt0.c1 IN ()))) WHERE (((rt0.c1)||(rt0.c2)) COLLATE BINARY) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN rt0 ON (((NOT (t0.c0))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND ((rt0.c1 IN ()))) WHERE ((NOT (((rt0.c1)||(rt0.c2)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN rt0 ON (((NOT (t0.c0))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND ((rt0.c1 IN ()))) WHERE (((((rt0.c1)||(rt0.c2)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN rt0 ON (((NOT (t0.c0))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND ((rt0.c1 IN ())));
SELECT ALL rt0.c1, rt0.c3 FROM rt0 CROSS JOIN t1 ON (((t0.c0) BETWEEN (rt0.c3) AND (t1.c0)) IN ((('-1553711653') BETWEEN (t1.c0) AND (rt0.c0)), x'8c11')) CROSS JOIN t0 ON rtreenode((((''))>=((NULL))), ((t1.c0) BETWEEN (t1.c0) AND (rt0.c2))) GROUP BY rt0.c1, rt0.c3;
SELECT ALL rt0.c1, rt0.c3 FROM rt0 CROSS JOIN t1 ON (((t0.c0) BETWEEN (rt0.c3) AND (t1.c0)) IN ((('-1553711653') BETWEEN (t1.c0) AND (rt0.c0)), x'8c11')) CROSS JOIN t0 ON rtreenode((((''))>=((NULL))), ((t1.c0) BETWEEN (t1.c0) AND (rt0.c2))) WHERE ((NOT ((+ (rt0.c0))))) GROUP BY rt0.c1, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c3 FROM rt0 CROSS JOIN t1 ON (((t0.c0) BETWEEN (rt0.c3) AND (t1.c0)) IN ((('-1553711653') BETWEEN (t1.c0) AND (rt0.c0)), x'8c11')) CROSS JOIN t0 ON rtreenode((((''))>=((NULL))), ((t1.c0) BETWEEN (t1.c0) AND (rt0.c2))) WHERE ((NOT ((NOT ((+ (rt0.c0))))))) GROUP BY rt0.c1, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c3 FROM rt0 CROSS JOIN t1 ON (((t0.c0) BETWEEN (rt0.c3) AND (t1.c0)) IN ((('-1553711653') BETWEEN (t1.c0) AND (rt0.c0)), x'8c11')) CROSS JOIN t0 ON rtreenode((((''))>=((NULL))), ((t1.c0) BETWEEN (t1.c0) AND (rt0.c2))) WHERE ((((NOT ((+ (rt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c3;
SELECT ALL rt0.c1, rt0.c3 FROM rt0 CROSS JOIN t1 ON (((t0.c0) BETWEEN (rt0.c3) AND (t1.c0)) IN ((('-1553711653') BETWEEN (t1.c0) AND (rt0.c0)), x'8c11')) CROSS JOIN t0 ON rtreenode((((''))>=((NULL))), ((t1.c0) BETWEEN (t1.c0) AND (rt0.c2))) GROUP BY rt0.c1, rt0.c3;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((((((t0.c0 IN ()))OR(SUM(GROUP_CONCAT(MAX(COUNT(*)))))))OR(COUNT(*))))OR(COUNT(MIN(GROUP_CONCAT(GROUP_CONCAT(MIN(COUNT(*)))))))))AND(SUM(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((((((((t0.c0 IN ()))OR(SUM(GROUP_CONCAT(MAX(COUNT(*)))))))OR(COUNT(*))))OR(COUNT(MIN(GROUP_CONCAT(GROUP_CONCAT(MIN(COUNT(*)))))))))AND(SUM(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((((((((t0.c0 IN ()))OR(SUM(GROUP_CONCAT(MAX(COUNT(*)))))))OR(COUNT(*))))OR(COUNT(MIN(GROUP_CONCAT(GROUP_CONCAT(MIN(COUNT(*)))))))))AND(SUM(t0.c0)))) ISNULL);
SELECT rt0.c1, t0.c0, t1.c0 FROM rt0, t1 CROSS JOIN t0 ON (((((rt0.c0, t0.c0, rt0.c1))==((rt0.c0, rt0.c1, rt0.c0))))-(TOTAL_CHANGES()));
SELECT ALL rt0.c1, t0.c0, t1.c0 FROM rt0, t1 CROSS JOIN t0 ON (((((rt0.c0, t0.c0, rt0.c1))==((rt0.c0, rt0.c1, rt0.c0))))-(TOTAL_CHANGES())) WHERE (CAST(((t0.c0) NOT NULL) AS BLOB)) UNION ALL SELECT rt0.c1, t0.c0, t1.c0 FROM rt0, t1 CROSS JOIN t0 ON (((((rt0.c0, t0.c0, rt0.c1))==((rt0.c0, rt0.c1, rt0.c0))))-(TOTAL_CHANGES())) WHERE ((NOT (CAST(((t0.c0) NOT NULL) AS BLOB)))) UNION ALL SELECT ALL rt0.c1, t0.c0, t1.c0 FROM rt0, t1 CROSS JOIN t0 ON (((((rt0.c0, t0.c0, rt0.c1))==((rt0.c0, rt0.c1, rt0.c0))))-(TOTAL_CHANGES())) WHERE (((CAST(((t0.c0) NOT NULL) AS BLOB)) ISNULL));
SELECT rt0.c1, t0.c0, t1.c0 FROM rt0, t1 CROSS JOIN t0 ON (((((rt0.c0, t0.c0, rt0.c1))==((rt0.c0, rt0.c1, rt0.c0))))-(TOTAL_CHANGES()));
SELECT DISTINCT t1.c0, rt0.c1, rt0.c0 FROM t1, rt0;
SELECT DISTINCT t1.c0, rt0.c1, rt0.c0 FROM t1, rt0 WHERE (((rt0.c2) ISNULL) COLLATE RTRIM) UNION SELECT DISTINCT t1.c0, rt0.c1, rt0.c0 FROM t1, rt0 WHERE ((NOT (((rt0.c2) ISNULL) COLLATE RTRIM))) UNION SELECT DISTINCT t1.c0, rt0.c1, rt0.c0 FROM t1, rt0 WHERE (((((rt0.c2) ISNULL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT t1.c0, rt0.c1, rt0.c0 FROM t1, rt0;
SELECT rt0.c0, t0.c0, rt0.c2, rt0.c1, t1.c0, rt0.c3 FROM rt0 RIGHT OUTER JOIN t1 ON (((('Z_') ISNULL)) NOT BETWEEN (rt0.c3 COLLATE BINARY) AND ((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t1.c0))))) FULL OUTER JOIN t0 ON x'' GROUP BY rt0.c0, t0.c0, rt0.c2, rt0.c1, t1.c0, rt0.c3;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING MAX(t1.c0 COLLATE RTRIM) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (MAX(t1.c0 COLLATE RTRIM))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((MAX(t1.c0 COLLATE RTRIM)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING MAX(t1.c0 COLLATE RTRIM) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (MAX(t1.c0 COLLATE RTRIM))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((MAX(t1.c0 COLLATE RTRIM)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT rt0.c0, rt0.c3, t1.c0, rt0.c2 FROM rt0 NATURAL JOIN t1;
SELECT ALL rt0.c0, rt0.c3, t1.c0, rt0.c2 FROM rt0 NATURAL JOIN t1 WHERE ((((((rt0.c1) NOTNULL)))<((((((((((rt0.c3)OR(t1.c0)))AND(t1.c0)))OR(0X533b3ba2)))AND(-808335957)))))) UNION ALL SELECT rt0.c0, rt0.c3, t1.c0, rt0.c2 FROM rt0 NATURAL JOIN t1 WHERE ((NOT ((((((rt0.c1) NOTNULL)))<((((((((((rt0.c3)OR(t1.c0)))AND(t1.c0)))OR(0X533b3ba2)))AND(-808335957)))))))) UNION ALL SELECT rt0.c0, rt0.c3, t1.c0, rt0.c2 FROM rt0 NATURAL JOIN t1 WHERE ((((((((rt0.c1) NOTNULL)))<((((((((((rt0.c3)OR(t1.c0)))AND(t1.c0)))OR(0x533b3ba2)))AND(-808335957)))))) ISNULL));
SELECT rt0.c0, rt0.c3, t1.c0, rt0.c2 FROM rt0 NATURAL JOIN t1;
SELECT DISTINCT * FROM t0, rt0, t1;
SELECT DISTINCT * FROM t0, rt0, t1 WHERE ((rt0.c1 COLLATE NOCASE IN ())) UNION SELECT DISTINCT * FROM t0, rt0, t1 WHERE ((NOT ((rt0.c1 COLLATE NOCASE IN ())))) UNION SELECT DISTINCT * FROM t0, rt0, t1 WHERE ((((rt0.c1 COLLATE NOCASE IN ())) ISNULL));
SELECT DISTINCT * FROM t0, rt0, t1;
SELECT t0.c0, rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c1;
SELECT t0.c0, rt0.c2, rt0.c1 FROM rt0, t0 WHERE ((((rt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN (((rt0.c1 IN ()), STRFTIME(rt0.c1, t0.c0, rt0.c0), rt0.c2 COLLATE RTRIM)) AND ((0.573638138702427, LIKELY(DISTINCT rt0.c3), ((rt0.c1)*(rt0.c3)))))) GROUP BY t0.c0, rt0.c2, rt0.c1 UNION SELECT ALL t0.c0, rt0.c2, rt0.c1 FROM rt0 NOT INDEXED, t0 WHERE ((NOT ((((rt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN (((rt0.c1 IN ()), STRFTIME(rt0.c1, t0.c0, rt0.c0), rt0.c2 COLLATE RTRIM)) AND ((0.573638138702427, LIKELY(DISTINCT rt0.c3), ((rt0.c1)*(rt0.c3)))))))) GROUP BY t0.c0, rt0.c2, rt0.c1 UNION SELECT t0.c0, rt0.c2, rt0.c1 FROM rt0, t0 WHERE ((((((rt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN (((rt0.c1 IN ()), STRFTIME(rt0.c1, t0.c0, rt0.c0), rt0.c2 COLLATE RTRIM)) AND ((0.573638138702427, LIKELY(DISTINCT rt0.c3), ((rt0.c1)*(rt0.c3)))))) ISNULL)) GROUP BY t0.c0, rt0.c2, rt0.c1;
SELECT t0.c0, rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(TOTAL(t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(TOTAL(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(TOTAL(t0.c0))) ISNULL);
SELECT TOTAL(CASE t1.c0  WHEN ((t1.c0) BETWEEN ('9EL1fpz6>') AND (t1.c0)) THEN (+ (x'')) END) FROM t1 ORDER BY ((-7.11170791E8) IS TRUE) DESC, ((IFNULL(DISTINCT t1.c0, t1.c0)) NOT NULL)  NULLS FIRST;
SELECT rt0.c1, rt0.c3, t1.c0, rt0.c0, t0.c0 FROM rt0, t1 FULL OUTER JOIN t0 ON t1.c0;
SELECT ALL rt0.c1, rt0.c3, t1.c0, rt0.c0, t0.c0 FROM rt0, t1 FULL OUTER JOIN t0 ON t1.c0 WHERE (json_array(rt0.c2, CASE WHEN t1.c0 THEN t1.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c0 THEN rt0.c0 END, ((((t0.c0)OR(rt0.c3)))OR(rt0.c0)), (((t0.c0))>((rt0.c3))))) UNION ALL SELECT rt0.c1, rt0.c3, t1.c0, rt0.c0, t0.c0 FROM rt0, t1 FULL OUTER JOIN t0 ON t1.c0 WHERE ((NOT (json_array(rt0.c2, CASE WHEN t1.c0 THEN t1.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c0 THEN rt0.c0 END, ((((t0.c0)OR(rt0.c3)))OR(rt0.c0)), (((t0.c0))>((rt0.c3))))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, t1.c0, rt0.c0, t0.c0 FROM rt0, t1 FULL OUTER JOIN t0 ON t1.c0 WHERE (((json_array(rt0.c2, CASE WHEN t1.c0 THEN t1.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c0 THEN rt0.c0 END, ((((t0.c0)OR(rt0.c3)))OR(rt0.c0)), (((t0.c0))>((rt0.c3))))) ISNULL));
SELECT rt0.c1, rt0.c3, t1.c0, rt0.c0, t0.c0 FROM rt0, t1 FULL OUTER JOIN t0 ON t1.c0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c0 FROM t1 FULL OUTER JOIN rt0 ON ((rt0.c0 IN (rt0.c0, rt0.c3)) IN ());
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c0 FROM t1 FULL OUTER JOIN rt0 ON ((rt0.c0 IN (rt0.c0, rt0.c3)) IN ()) WHERE (((((rt0.c3)=(rt0.c2)))AND((- (rt0.c2))))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c0 FROM t1 FULL OUTER JOIN rt0 ON ((rt0.c0 IN (rt0.c0, rt0.c3)) IN ()) WHERE ((NOT (((((rt0.c3)=(rt0.c2)))AND((- (rt0.c2))))))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c0 FROM t1 FULL OUTER JOIN rt0 ON ((rt0.c0 IN (rt0.c0, rt0.c3)) IN ()) WHERE (((((((rt0.c3)==(rt0.c2)))AND((- (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c0 FROM t1 FULL OUTER JOIN rt0 ON ((rt0.c0 IN (rt0.c0, rt0.c3)) IN ());
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 WHERE ((- ((rt0.c1 IN ())))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0 WHERE ((NOT ((- ((rt0.c1 IN ())))))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0 WHERE ((((- ((rt0.c1 IN ())))) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING TOTAL(((t1.c0) BETWEEN (COUNT(TOTAL(t1.c0))) AND (t1.c0))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (TOTAL(((t1.c0) BETWEEN (COUNT(TOTAL(t1.c0))) AND (t1.c0))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((TOTAL(((t1.c0) BETWEEN (COUNT(TOTAL(t1.c0))) AND (t1.c0)))) ISNULL);
SELECT ALL * FROM t0, t1 NATURAL JOIN rt0;
SELECT ALL * FROM t0, t1 NATURAL JOIN rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END)&(rt0.c0))) UNION ALL SELECT ALL * FROM t0, t1 NATURAL JOIN rt0 WHERE ((NOT (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END)&(rt0.c0))))) UNION ALL SELECT * FROM t0, t1 NATURAL JOIN rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END)&(rt0.c0))) ISNULL));
SELECT ALL * FROM t0, t1 NATURAL JOIN rt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((t0.c0 IN (t0.c0, t0.c0)))>(t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0 IN (t0.c0, t0.c0)))>(t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0 IN (t0.c0, t0.c0)))>(t0.c0))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT rt0.c3 FROM t1 LEFT OUTER JOIN t0 ON (((COALESCE(DISTINCT rt0.c2, rt0.c1)))<((t1.c0))) CROSS JOIN rt0 ON ((NOT (rt0.c0)) IN ()) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM t1 LEFT OUTER JOIN t0 ON (((COALESCE(DISTINCT rt0.c2, rt0.c1)))<((t1.c0))) CROSS JOIN rt0 ON ((NOT (rt0.c0)) IN ()) WHERE (CAST('0.07653450450579047' AS BLOB)) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM t1 LEFT OUTER JOIN t0 ON (((COALESCE(DISTINCT rt0.c2, rt0.c1)))<((t1.c0))) CROSS JOIN rt0 ON ((NOT (rt0.c0)) IN ()) WHERE ((NOT (CAST('0.07653450450579047' AS BLOB)))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM t1 LEFT OUTER JOIN t0 ON (((COALESCE(DISTINCT rt0.c2, rt0.c1)))<((t1.c0))) CROSS JOIN rt0 ON ((NOT (rt0.c0)) IN ()) WHERE (((CAST('0.07653450450579047' AS BLOB)) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM t1 LEFT OUTER JOIN t0 ON (((COALESCE(DISTINCT rt0.c2, rt0.c1)))<((t1.c0))) CROSS JOIN rt0 ON ((NOT (rt0.c0)) IN ()) GROUP BY rt0.c3;
SELECT ALL rt0.c1 FROM rt0, t1, t0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t1, t0 GROUP BY rt0.c1 HAVING (((((rt0.c2 IN (rt0.c0, COUNT(*))))OR(((MAX(rt0.c2)) NOT BETWEEN (rt0.c1) AND (SUM(TOTAL(MIN(rt0.c2))))))))OR(((((((((((((rt0.c3)OR(t0.c0)))OR(NULL)))OR(COUNT(*))))OR(AVG(rt0.c2))))OR(COUNT(COUNT(MAX(rt0.c0))))))AND(GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, t1, t0 GROUP BY rt0.c1 HAVING (NOT ((((((rt0.c2 IN (rt0.c0, COUNT(*))))OR(((MAX(rt0.c2)) NOT BETWEEN (rt0.c1) AND (SUM(TOTAL(MIN(rt0.c2))))))))OR(((((((((((((rt0.c3)OR(t0.c0)))OR(NULL)))OR(COUNT(*))))OR(AVG(rt0.c2))))OR(COUNT(COUNT(MAX(rt0.c0))))))AND(GROUP_CONCAT(rt0.c2))))))) UNION ALL SELECT rt0.c1 FROM rt0 NOT INDEXED, t1, t0 GROUP BY rt0.c1 HAVING (((((((rt0.c2 IN (rt0.c0, COUNT(*))))OR(((MAX(rt0.c2)) NOT BETWEEN (rt0.c1) AND (SUM(TOTAL(MIN(rt0.c2))))))))OR(((((((((((((rt0.c3)OR(t0.c0)))OR(NULL)))OR(COUNT(*))))OR(AVG(rt0.c2))))OR(COUNT(COUNT(MAX(rt0.c0))))))AND(GROUP_CONCAT(rt0.c2)))))) ISNULL);
SELECT ALL * FROM t0, t1 FULL OUTER JOIN rt0 ON (~ (((t1.c0)OR(t0.c0))));
SELECT ALL * FROM t0, t1 FULL OUTER JOIN rt0 ON (~ (((t1.c0)OR(t0.c0)))) WHERE ((~ (CHANGES()))) UNION ALL SELECT * FROM t0, t1 FULL OUTER JOIN rt0 ON (~ (((t1.c0)OR(t0.c0)))) WHERE ((NOT ((~ (CHANGES()))))) UNION ALL SELECT * FROM t0, t1 FULL OUTER JOIN rt0 ON (~ (((t1.c0)OR(t0.c0)))) WHERE ((((~ (CHANGES()))) ISNULL));
SELECT ALL * FROM t0, t1 FULL OUTER JOIN rt0 ON (~ (((t1.c0)OR(t0.c0))));
SELECT DISTINCT * FROM t0 CROSS JOIN t1 ON 'R9' LEFT OUTER JOIN rt0 ON ((((t1.c0) IS TRUE)) IS FALSE);
SELECT DISTINCT * FROM t0 CROSS JOIN t1 ON 'R9' LEFT OUTER JOIN rt0 ON ((((t1.c0) IS TRUE)) IS FALSE) WHERE (((UNLIKELY(DISTINCT rt0.c1)) NOT NULL)) UNION SELECT DISTINCT * FROM t0 CROSS JOIN t1 ON 'R9' LEFT OUTER JOIN rt0 ON ((((t1.c0) IS TRUE)) IS FALSE) WHERE ((NOT (((UNLIKELY(DISTINCT rt0.c1)) NOT NULL)))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN t1 ON 'R9' LEFT OUTER JOIN rt0 ON ((((t1.c0) IS TRUE)) IS FALSE) WHERE (((((UNLIKELY(DISTINCT rt0.c1)) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN t1 ON 'R9' LEFT OUTER JOIN rt0 ON ((((t1.c0) IS TRUE)) IS FALSE);
SELECT ALL t1.c0, rt0.c2, rt0.c0, rt0.c3, t0.c0, rt0.c1 FROM t0, rt0 FULL OUTER JOIN t1 ON '' GROUP BY t1.c0, rt0.c2, rt0.c0, rt0.c3, t0.c0, rt0.c1;
SELECT t1.c0, rt0.c2, rt0.c0, rt0.c3, t0.c0, rt0.c1 FROM t0, rt0 FULL OUTER JOIN t1 ON '' WHERE (CASE WHEN ((((rt0.c3)AND(rt0.c3)))OR(t1.c0)) THEN ((t0.c0) NOT NULL) END) GROUP BY t1.c0, rt0.c2, rt0.c0, rt0.c3, t0.c0, rt0.c1 UNION SELECT ALL t1.c0, rt0.c2, rt0.c0, rt0.c3, t0.c0, rt0.c1 FROM t0, rt0 FULL OUTER JOIN t1 ON '' WHERE ((NOT (CASE WHEN ((((rt0.c3)AND(rt0.c3)))OR(t1.c0)) THEN ((t0.c0) NOT NULL) END))) GROUP BY t1.c0, rt0.c2, rt0.c0, rt0.c3, t0.c0, rt0.c1 UNION SELECT t1.c0, rt0.c2, rt0.c0, rt0.c3, t0.c0, rt0.c1 FROM t0, rt0 FULL OUTER JOIN t1 ON '' WHERE (((CASE WHEN ((((rt0.c3)AND(rt0.c3)))OR(t1.c0)) THEN ((t0.c0) NOT NULL) END) ISNULL)) GROUP BY t1.c0, rt0.c2, rt0.c0, rt0.c3, t0.c0, rt0.c1;
SELECT ALL t1.c0, rt0.c2, rt0.c0, rt0.c3, t0.c0, rt0.c1 FROM t0, rt0 FULL OUTER JOIN t1 ON '' GROUP BY t1.c0, rt0.c2, rt0.c0, rt0.c3, t0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, t1.c0, t0.c0 FROM rt0, t0 NATURAL JOIN t1 GROUP BY rt0.c3, rt0.c2, rt0.c1, t1.c0, t0.c0;
SELECT rt0.c3, rt0.c2, rt0.c1, t1.c0, t0.c0 FROM rt0, t0 NATURAL JOIN t1 GROUP BY rt0.c3, rt0.c2, rt0.c1, t1.c0, t0.c0 HAVING 'xj' UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1, t1.c0, t0.c0 FROM rt0, t0 NATURAL JOIN t1 GROUP BY rt0.c3, rt0.c2, rt0.c1, t1.c0, t0.c0 HAVING (NOT ('xj')) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1, t1.c0, t0.c0 FROM rt0, t0 NATURAL JOIN t1 GROUP BY rt0.c3, rt0.c2, rt0.c1, t1.c0, t0.c0 HAVING (('xj') ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c1, t1.c0, t0.c0 FROM rt0, t0 NATURAL JOIN t1 GROUP BY rt0.c3, rt0.c2, rt0.c1, t1.c0, t0.c0;
SELECT rt0.c3, rt0.c2, rt0.c1, t1.c0, t0.c0 FROM rt0, t0 NATURAL JOIN t1 GROUP BY rt0.c3, rt0.c2, rt0.c1, t1.c0, t0.c0 HAVING 'xj' UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1, t1.c0, t0.c0 FROM rt0, t0 NATURAL JOIN t1 GROUP BY rt0.c3, rt0.c2, rt0.c1, t1.c0, t0.c0 HAVING (NOT ('xj')) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1, t1.c0, t0.c0 FROM rt0, t0 NATURAL JOIN t1 GROUP BY rt0.c3, rt0.c2, rt0.c1, t1.c0, t0.c0 HAVING (('xj') ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c1, t1.c0, t0.c0 FROM rt0, t0 NATURAL JOIN t1 GROUP BY rt0.c3, rt0.c2, rt0.c1, t1.c0, t0.c0;
SELECT SUM(CASE WHEN rt0.c0 COLLATE RTRIM THEN rt0.c0 COLLATE NOCASE ELSE ((rt0.c1) IS FALSE) END) FROM rt0, t1 ORDER BY (((rt0.c2) BETWEEN (0.13789958553935322) AND (t1.c0)) IN ())  NULLS LAST;
SELECT * FROM rt0, t0, t1;
SELECT * FROM rt0, t0, t1 WHERE (((LTRIM(rt0.c1, rt0.c0)) NOT NULL)) UNION ALL SELECT ALL * FROM rt0, t0, t1 WHERE ((NOT (((LTRIM(rt0.c1, rt0.c0)) NOT NULL)))) UNION ALL SELECT * FROM rt0, t0, t1 WHERE (((((LTRIM(rt0.c1, rt0.c0)) NOT NULL)) ISNULL));
SELECT * FROM rt0, t0, t1;
SELECT DISTINCT t0.c0 FROM t1, t0;
SELECT DISTINCT t0.c0 FROM t1, t0 WHERE (UNLIKELY(json_patch(t1.c0, t1.c0))) UNION SELECT DISTINCT t0.c0 FROM t1, t0 WHERE ((NOT (UNLIKELY(json_patch(t1.c0, t1.c0))))) UNION SELECT DISTINCT t0.c0 FROM t1, t0 WHERE (((UNLIKELY(json_patch(t1.c0, t1.c0))) ISNULL));
SELECT ALL t1.c0, rt0.c3 FROM t1 INDEXED BY i89 NATURAL JOIN rt0 GROUP BY t1.c0, rt0.c3;
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING ((((t0.c0)IS(2.00386098E9))) BETWEEN (AVG(t0.c0)) AND ((MAX(COUNT(*)) IN ()))) UNION ALL SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING (NOT (((((t0.c0)IS(2.00386098E9))) BETWEEN (AVG(t0.c0)) AND ((MAX(COUNT(*)) IN ()))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING ((((((t0.c0)IS(2.00386098E9))) BETWEEN (AVG(t0.c0)) AND ((MAX(COUNT(*)) IN ())))) ISNULL);
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING ((((t0.c0)IS(2.00386098E9))) BETWEEN (AVG(t0.c0)) AND ((MAX(COUNT(*)) IN ()))) UNION ALL SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING (NOT (((((t0.c0)IS(2.00386098E9))) BETWEEN (AVG(t0.c0)) AND ((MAX(COUNT(*)) IN ()))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING ((((((t0.c0)IS(2.00386098E9))) BETWEEN (AVG(t0.c0)) AND ((MAX(COUNT(*)) IN ())))) ISNULL);
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t0;
SELECT ALL t0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t0 WHERE (CASE ((t0.c0) ISNULL)  WHEN ((rt0.c1)*(rt0.c0)) THEN rt0.c1 END) UNION ALL SELECT t0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((NOT (CASE ((t0.c0) ISNULL)  WHEN ((rt0.c1)*(rt0.c0)) THEN rt0.c1 END))) UNION ALL SELECT ALL t0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t0 WHERE (((CASE ((t0.c0) ISNULL)  WHEN ((rt0.c1)*(rt0.c0)) THEN rt0.c1 END) ISNULL));
SELECT t0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (1.105769079E9) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (1.105769079E9))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((1.105769079E9) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
