-- Time: 2024/06/09 06:45:55
-- Database: database96
-- Database version: 3.40.0
-- seed value: 2567341596
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 1ms;
CREATE TABLE t1 (c0 TEXT , c1 BLOB , c2 REAL CHECK ( ((x'8aee') NOT BETWEEN (((c2) NOT BETWEEN (c0) AND (NULL))) AND (((c0) IS FALSE)))) NOT NULL ); -- 0ms;
INSERT OR ABORT INTO t1(c1, c0) VALUES (0.3426515689154649, 0.02484378651043284); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (1010162289), (NULL), (x''), (x''), (NULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1469815653'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '1010162289 4 sz=9223372036854775807 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=307623774 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '307623774 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 1010162289 THEN NULL ELSE '0.3426515689154649' END)%(CASE x''  WHEN '' THEN 1.469815653E9 ELSE '(fisw{?' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1469815653 sz=263288614 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '-179622903 sz=305494579 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=717355259'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'2e3e') NOT NULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=717355259 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('307623774') NOTNULL))+((NULL IN ()))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-138344728 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-138344728 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '-1795399678 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('304256000') BETWEEN (717355259) AND ('TRUE')) THEN ((('371445703', -1.38344728E8, '1563371587')) BETWEEN ((x'', x'', 0x25a5b928)) AND (('717355259', 0.4559042088658095, '1010162289'))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1362230935 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1563371587 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=307623774'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((0x3b48cb61)) BETWEEN ((0.5747291072788776)) AND ((NULL)))  WHEN CASE '_厲vb{rF'  WHEN 0.5522882076913603 THEN '(fisw{?' END THEN (((x'754e')) BETWEEN ((0Xffffffffffffffff)) AND ((NULL))) WHEN 0.2956507585713112 COLLATE BINARY THEN ((('n>+7', x'', x'')) BETWEEN (('n>+7', 1703410219, '')) AND (('Nz', NULL, x''))) WHEN (('')<<(3.05494579E8)) THEN (((0.9367415882851114, x'', '944325883'))<((0x2c25e3d5, '0.4559042088658095', 1836138575))) ELSE (('sXFLGK')<>(0.14095088941378486)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '2 1469815653 2 -781454135 sz=304256000'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE NULL  WHEN '1362230935' THEN NULL END))>=(((((((((('')OR(0x1623cfc7)))AND(0xffffffff8aac148d)))AND('QퟛJj')))AND(0.4559042088658095))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1514815156 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '631617832' COLLATE NOCASE THEN (NULL IN ()) WHEN (('''_hOL1')<>('')) THEN IFNULL('-142586315', 2115697798) WHEN (NULL IN (x'')) THEN IFNULL(NULL, '獤]&VJ2') END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -1608447359 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1793957623'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS TEXT) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-396730941 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>(NULL)))<>(JULIANDAY(0.4398433791565788, NULL, NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE LTRIM(0.29801705489479635)  WHEN ((0.48031003066074685) BETWEEN ('974882170') AND ('n>+7')) THEN ((('k뤨(.(7,A%', x'8b8e', -1573358748))=((NULL, '', NULL))) ELSE CAST(NULL AS TEXT) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (NULL) AND (x''))) BETWEEN (CASE x'e5dd'  WHEN 'ZC' THEN '2061128130' ELSE 'O瘿' END) AND (0.3426515689154649)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=161188516 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-151136974 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL IN ()) IN (((0.1088257147207603) ISNULL), ((0.20732348908964238)/('''_hol1')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN (x'221b', x'62e8379d')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (-1731752623)))=(((NULL) BETWEEN (NULL) AND ('-1656900287')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1542389634; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-969010859 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1186997167 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-1573358748 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '1964944478 sz=446683303 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('1964944478') IS FALSE))AND(NULL)))OR(((x'')LIKE(x'0536')))))AND((NULL IN ()))))AND(QUOTE(x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -0.0; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2086710418'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=1964944478 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('h]' AS NUMERIC)) BETWEEN (((NULL) BETWEEN (6.31617832E8) AND (NULL))) AND (((x'37d0')<<(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-447311213'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1834267443'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE((NOT (x'')), x'', '1'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('0.20732348908964238' AS BLOB)) BETWEEN ((((('-214418502')OR(813550520)))OR(NULL))) AND (((-1.573358748E9)>=(0.22832658096294456)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN (((('404953624') NOT BETWEEN ('0.1088257147207603') AND (0.5672241946911123)))) AND ((((0.42762400542823586)&(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '863285756'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1928616446 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('.{}') NOT BETWEEN ('0.6036243013922501') AND (208733017)) IN (((NULL) NOT BETWEEN (x'') AND (0Xffffffff8139f913)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS INTEGER) IN ((((0.31769955468797295, 0.2956507585713112, '2K')) NOT BETWEEN (('-2126907117', x'c2e0', x'')) AND (('-1065121310', ']\v,,P觢|', 0xffffffffb891b274))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL)))GLOB(((x'')>>(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=-1656900287 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1795399678 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '994626401 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_insert(json_array_length(0.049631127135570274), (x'3cf8' IN ()), (((('0.02484378651043284')OR(NULL)))AND('974882170'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL) BETWEEN (NULL) AND (-479603761)) THEN NULL ELSE 0.049631127135570274 COLLATE BINARY END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE 'ﴂ'  WHEN x'' THEN '*i*ySU\W' ELSE '' END)AND((x'' IN ()))))AND(((962537013) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '161188516 sz=-680220318 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) NOTNULL) IN (json_array(NULL, x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('UퟛL,o0B)[') BETWEEN (NULL) AND (0X5d2f2843)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ (NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json('-1331057016'))-((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1563371587 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1793957623 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS BLOB) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-968255043' AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '-19413210'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.34660999068784126) NOT BETWEEN (x'') AND ('-909992307')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-396730941 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT CASE WHEN '-229547372' THEN 'X' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1624144279 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2096356547'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1774831379 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-601772946 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=208733017 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'ab67' IN ()) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1496095044 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) NOT BETWEEN ((0.20732348908964238)) AND ((x'4f01')))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1514815156 sz=38799852 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=-1746698791 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '2114838565'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=-262860311 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=55041681 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1487910902 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1616090153 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xffffffffb4f29c0b IN ('0.48031003066074685'))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1724443208'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL))OR(json_extract(x'', '', 0.26220202812575355, x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '403760495 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('a') BETWEEN (NULL) AND (447632724)) THEN (((0.24384836359037465))<((x''))) ELSE ((x'')+('3Z')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1548967692'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '-515969882 1469815653 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-576882341'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=1953214224 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-2039425388'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0Xffffffffa341fd02 THEN (((NULL))<>((''))) ELSE CASE WHEN x'' THEN NULL WHEN -1744784546 THEN NULL WHEN '' THEN NULL END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.4559042088658095) NOT NULL) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE WHEN x'' THEN 0.30230196218222316 END)OR(CASE NULL  WHEN NULL THEN x'' END)))OR(((NULL) NOT BETWEEN (NULL) AND ('')))))AND((x'59a6' IN ()))))AND(CAST(NULL AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1457582878 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=371445703'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (('-138344728' IN (x'', NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1457582878'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((x''))>=((x''))) THEN (('')>=(x'')) WHEN UPPER('1093300390') THEN ((0.6475587459246845)GLOB(0.41925220682560893)) WHEN 0.2956507585713112 COLLATE BINARY THEN 'ﲆ' COLLATE BINARY END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8083754678771087)) BETWEEN ((((((x'34b2')AND('')))AND(0.9295648368547829)))) AND ((x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array((NULL IN ()), ((x'08e8')>=('817402090'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1672520059)&(x''))) BETWEEN ((((NULL))<((-1656900287)))) AND ((NOT ('|ﲆET)<8')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-97829147 COLLATE BINARY)>>((- (7.40680661E8)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((+ (x'')), (('') BETWEEN (0.9963836670113191) AND (0.8927512313456203)), (('!b?9a') BETWEEN ('') AND ('c?o'))))>((1787419452 COLLATE NOCASE, CASE WHEN '<Z(sF' THEN 0xffffffff94cabc1f END, (- (NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UPPER(0.5747291072788776))=((- (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL IN (x'')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.26220202812575355' COLLATE RTRIM)+(((((x'')AND(x'')))OR('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-1744784546 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('0.8083754678771087' AS REAL)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-2145825216'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-668949440 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1119688174 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')=(NULL)), ((x'') NOT BETWEEN ('Up') AND ('-1UAWV0')), (((('i6G Eq')AND('-1573358748')))OR(x''))))==((NULLIF(NULL, NULL), SQLITE_COMPILEOPTION_GET('1469815653'), CAST(NULL AS REAL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1795614796 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM('-1e500')) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.20732348908964238 COLLATE NOCASE)OR(((NULL) IS FALSE))))AND(((0x1810e56f)IS('')))))AND(((0.9469195687315839) BETWEEN (x'b2b0') AND (x'2358')))))AND(((((x'')AND('-1234223088')))OR(55041681)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1035506598 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((238614105)|(0.9963836670113191))  WHEN ((0Xffffffff92bf26b5) BETWEEN (NULL) AND (0.8897930840518523)) THEN ((5.5041681E7) IS TRUE) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'5298' AS BLOB)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (0.8575167403356454 COLLATE BINARY)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -2009257582; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'2143') NOT NULL))OR(x'ef7a' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1922690510'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-177832952 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=589703268'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 sz=1496095044 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9719524725665114, 'Fv乀^l#s', '-9223372036854775808', -168874384, '	(~Pn}'))<(('-909992307', 'Jp.\n늀', NULL, '0.9719524725665114', NULL))) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-793123935'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('cY')/(x'82fe')) COLLATE RTRIM COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) NOT BETWEEN ((0.6675901060048853)) AND ((0Xffffffff9fff32f0)))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '2 sz=-1640657573 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0xffffffff9b49825a IN ()) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1496095044 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=37831383 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 -1680978379 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(0.45472238058412284 AS TEXT) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.7311302633109629 AS NUMERIC) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1286820247 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE -1.774831379E9 COLLATE NOCASE  WHEN x'bf79' COLLATE BINARY THEN ((x'') BETWEEN (x'') AND (-2.086710418E9)) WHEN (0xffffffffa17bf9e7 IN ()) THEN ((0.0452004127605522) IS TRUE) WHEN ('1811260511' IN (0.0910185087594606)) THEN (1433474760 IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS INTEGER)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (json_remove(x'', NULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1784097966'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-2145825216 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1420869717 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'OaJC>'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('6b6VsBv')GLOB('1953214224')))||(((((NULL)AND('-151136974')))OR('dL')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((((((('-1832966475')AND(0.6273604255921355)))OR('1')))OR(-138344728)))OR('0.6036243013922501')) THEN ((NULL)>>(0x7271e542)) ELSE (- (3.71445703E8)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.15666026818915102)AND(x'')))AND(x'd405'))) NOT BETWEEN (NULL COLLATE NOCASE) AND ((('-426705914') NOT BETWEEN (x'') AND (0.061372792486491745)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-541320761'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((('')) BETWEEN (('[<oa')) AND ((NULL))) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('2iHUṾWN䈹')*(NULL)))&((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-781454135 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT ((x'0147') BETWEEN (x'') AND (x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.5445734198820695 AS TEXT)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-31254664'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-649981308)OR(x'')))OR(0.02484378651043284))) NOT BETWEEN (CAST(0.37207428228866457 AS TEXT)) AND ((- ('< #j')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ('863285756'))) BETWEEN (((((x'')OR(NULL)))AND(x''))) AND (x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' COLLATE RTRIM, '-574092372' COLLATE RTRIM, ((x'')OR('oB'))))=(('#(\n&4p' COLLATE BINARY, CAST('1' AS TEXT), CASE WHEN 0Xffffffffb891b274 THEN 0.4382722336220073 WHEN x'' THEN x'' WHEN x'c5cecf40' THEN x'' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 sz=-1746698791 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1073275344'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(NULL)))AND('+}0	#')))IS NOT(('' IN (NULL, '')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1423676370 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1774831379'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1564263564 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '4 sz=1860091850 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-620080206 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.48031003066074685 COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-737615158 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1335262237 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-847963431 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) NOT BETWEEN (NULL) AND (x'')))AND((x'' IN ()))))AND((+ ('0.14095088941378486')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=2008222373 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2131493898 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.6889029106476097)GLOB(NULL)))OR((((NULL))==((0.580671819638257))))))OR((((0.9767066736934092)) NOT BETWEEN ((1521729933)) AND ((0.4399267162559758))))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1330323172 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 0 sz=-1119688174'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=776852260 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('폏ᄽ'))) NOT BETWEEN (((x'963d')<('780211894'))) AND (x'8196')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=1835626622 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1011687029 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json(x''))LIKE((NOT (0.8728573297054127)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT ('jC' IN ('511174752', 0x61cb30e2)), (NOT ('''1hbdU'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE STRFTIME(((NULL)GLOB('636269411')), ((x'')>=(']u')), ((0X25d96193) NOTNULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=1624144279 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('-0.0')IS(-68625300)))OR((((x''))=(('-294471209'))))))AND(NULL)))OR((-1496199065 IN (0.27177917116405226)))))OR(((((x'')OR(0.9830079019436243)))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((((NULL)AND(0.1335878947811051)))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-207410635 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2041541378 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(CAST(NULL AS TEXT)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (NULL) AND ('0.4382722336220073')))*(((((x'')OR(x'8826')))AND(x'76c1302d')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0x32b28d2b THEN NULL END)OR(((NULL) NOT BETWEEN (x'') AND ('1402534357')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=9223372036854775807 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1548967692 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(CASE 0.22990626326719554  WHEN NULL THEN '?' END, (+ (x''))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=933765923 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'2a86' IN (x'b440', 'F')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2027164086 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')AND('')))AND(CASE 0xffffffffafc5e1a2  WHEN x'' THEN 'zv5' WHEN '-1881234625' THEN '' WHEN x'' THEN '622999290' ELSE 2114838565 END)))AND(CAST('9' AS REAL))))OR((('1614490003')>(0.1429080024706112)))))AND((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.4328976858521709; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-1928727101 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=-969010859 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')IS(x'941a'))))<=((CAST(0.37121627455866835 AS TEXT)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')*(NULL)))<>(CASE WHEN NULL THEN 0.37534439226320737 WHEN x'bdfc0b18' THEN NULL WHEN '/G' THEN '-251396660' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((LOWER(NULL))AND(((((((((0.8728573297054127)OR(NULL)))OR('631617832')))OR(NULL)))OR(NULL)))))AND(('-2032299892' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=-479603761'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) ISNULL) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNICODE(('-1832966475' IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-515969882 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-685233446 1776982073 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-224252782 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1471899021 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_VERSION(); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') IS FALSE) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=810420982 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('!b?9a')) BETWEEN ((NULL)) AND ((1.724443208E9))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS BLOB))<<(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)OR('-1610773002')))OR('-1094306401')))OR('#')))AND(x'5a41'))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1555956478'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS TEXT)) NOT NULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE BINARY IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS REAL))<<(0.8575167403356454 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('213074332')OR(x'')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1542636509'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1.331057016E9; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1724443208'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.4169646506033301 AS TEXT))<=(-1035506598)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1577072008 1953214224 1231432217 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '712419437 sz=2115697798 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1989313302 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SUBSTR(-2097064485, x'ca3b')) NOT BETWEEN (((NULL)*('6'))) AND (x'' COLLATE NOCASE)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (LIKE(NULL, NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=9223372036854775807 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(516743612 AS REAL)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '-187164130 -1608447359 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0xffffffffa102687b) NOTNULL) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((-1035506598 IN ()))AND((x'' IN (x'0336')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=863285756 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1489939052 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=447632724 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-624729914 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('1093300390' COLLATE RTRIM IN (((x'd495') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=-447311213'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 sz=402637402 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1365689287 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'313f')OR(0.6237119297109578)))OR('k뤨(.(7,a%')))IS(x'7f6a')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1915529039 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1365050479 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1523445043 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-420905161 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(RTRIM('1787419452'), '355365355' COLLATE BINARY); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ('780982621')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1118556188 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('rX?A瓟뛨l' COLLATE BINARY AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-2126907117 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=1787419452 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=553341312 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1834267443 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)-('')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(-9223372036854775808 AS BLOB))AND(((0.8294151099237725)!=(509921632)))))AND(((x'')LIKE('	稳8Q')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE MIN(CAST(x'' AS REAL), (+ (''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x''))<=(('1608123841'))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1670172130 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-151136974'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.18047444948898927, NULL, 0.9950671407251267))<=(('', '*i*ySU\W', x'')))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UNLIKELY(NULL)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.9767066736934092 COLLATE NOCASE AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (-1476433525)))=((((((((('')OR('')))OR(0.580671819638257)))OR(x'')))AND(0.20930079740757623)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'b69a')AND('5bCa2')))AND(-1.573358748E9)))AND('1964944478')))OR(NULL))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('K㗛')LIKE(0X12229400)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'977f'))<((-1555956478))) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')AND(x'25a8')))AND('\rg')))AND(x'')))OR('{_k'))) NOT BETWEEN ((NULL IN ())) AND ((~ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=364808187 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1327594072 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-1815251403'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1739701927 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1234223088 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) BETWEEN (CAST('1563371587' AS REAL)) AND ((('1514815156')>=(0xfffffffff7c106e8)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '231772458 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '1563371587 -2081444852 sz=724088137 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (('-1783109405')) AND ((((0.5919309801688047) NOT BETWEEN (NULL) AND (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1963397061'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1814009092 -217591848 sz=-626698848 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.9950671407251267)=(''))  WHEN (x'' IN ('	(~Pn}')) THEN (('1287444443') NOT BETWEEN ('-1542389634') AND (x'')) ELSE ((0.30230196218222316) NOT BETWEEN (x'') AND (0.32968372140965463)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '4 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-447311213 -1893356061 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=208733017 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '1929485453 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')>>(-1256103339))) NOT BETWEEN ((+ (NULL))) AND (((359245810) BETWEEN (NULL) AND (0.5371439871468595)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '1789188831 sz=371043005'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=1714118529 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1220104039 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1774831379 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'92d7' AS INTEGER)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2126907117 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=366947525'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '-1242548474 sz=-892984940 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1.624144279E9; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-968255043 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=1951037846 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0x746baf10 AS TEXT) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'6846')) BETWEEN ((NULLIF(DISTINCT 0.6385300530669453, '/+X?'))) AND (((((631617832)) BETWEEN (('up')) AND ((NULL)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7525660386407725 IN ('706738963'))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=2131320398'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(CASE WHEN 0.5585610617322523 THEN NULL ELSE NULL END, CAST(')k<n' AS REAL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') ISNULL) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1859364941 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-9223372036854775808 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1563371587 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x92e4121) BETWEEN (NULL) AND (x'')))&(((x'') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '1537004245 sz=1953214224 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')IS(x'')) IN (('K7c\iT' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1.563371587E9 IN ()))<(IFNULL(x'cae6', ''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '360805357 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=1616750990 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(x'5d44'))LIKE(((x'f9b2') NOT BETWEEN ('/+X?') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 1850494479 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE(CAST(NULL AS TEXT), (('%P') IS TRUE)); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((NULL IN ()) IN ((((x'')) BETWEEN (('Oe')) AND (('1953214224'))), ((x'') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1968434035 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((LOWER(DISTINCT 0.7113735749645703))OR(NULLIF('{O%5Bl/', NULL))))OR(UPPER(DISTINCT 0x3cf9c6d4))))OR(((0.8664720424121165) NOT NULL))))AND((((NULL, x'2c39', 0.6499235638723704)) BETWEEN (('740680661', '', 0.6569649010909733)) AND (('Zi', '', x'2154'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1801287726'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('847605477')<('-668949440')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (TRIM(DISTINCT 0.2482966244765774) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('D#') BETWEEN (NULL) AND (x'')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT ((NULL) NOT BETWEEN (x'') AND (x'89f7'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '702874358 sz=1165072374 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8408160658800348))<=((1936134898))) IN ((~ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('T閴z2\巃r	_' AS INTEGER) IN (CASE '饄횔'  WHEN '1231405166' THEN NULL END, ((NULL) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 1353546093 sz=404953624 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=1787419452 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1446282782'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'7eae'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') BETWEEN (((((((((0xfffffffffa2b3ee5)AND('')))AND(NULL)))AND('5N^NVG)')))OR('/⒩'))) AND (LTRIM(x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE -779039896  WHEN 0.2730503052096791 THEN 218593822 WHEN -5.15969882E8 THEN 'wl醞d5' WHEN '-667312347' THEN '%''DTc>+1' ELSE x'390c' END)AND((NULL IN ()))))OR(COALESCE(NULL, x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT (NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('*,')LIKE(x'50d1')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL COLLATE NOCASE  WHEN ((0.1283836139025536) NOT BETWEEN (NULL) AND (7.455876878369461E-4)) THEN ((x'804a') IS FALSE) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((x'')AND(NULL)))AND(NULL)))OR(1.487910902E9)))OR(0.5062534859366797))))>=(((+ ('-0.0'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(-1871512710 AS BLOB) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0.7072705740829219))==((x''))) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1832966475 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.48031003066074685  WHEN 'A/' THEN x'5942' ELSE 0.07170316180607261 END)>>(CASE '!b?9a'  WHEN 0.6940528787031306 THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-20389578'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-87278936 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ (0.3740615894476319)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8664720424121165)) BETWEEN ((x'')) AND (('1093300390'))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-20888574'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-909992307'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-1486099188 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=321078111 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM('-1e500' COLLATE NOCASE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '-2022600277 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '2115697798 sz=-1035506598'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-167058936 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1851886182', '461525000', '1010162289')) NOT BETWEEN ((((2.06112813E9) ISNULL), 0.6334307629469992, CAST('\rs' AS INTEGER))) AND ((((NULL)<(NULL)), DATETIME(x'', x'0314', NULL, NULL, 0.9878516838046897), 0.07504544751722031 COLLATE RTRIM))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 sz=111817898 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1601723100')) NOT BETWEEN (((('1624144279') ISNULL))) AND (((x'' IN ())))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (((((0.3847670859790394)) NOT BETWEEN (('-1430808210')) AND (('UퟛL,o0B)['))))) AND (((('x')LIKE(-2075288672))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-602360352 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((1190977612)) BETWEEN ((x'')) AND ((0X6f1b227b)))  WHEN CAST(NULL AS TEXT) THEN (('0.31769955468797295') NOT NULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ABS(-9.68255043E8)) NOT BETWEEN ((((''))<>((x'')))) AND ('-262860311' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=80212362 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'8085') BETWEEN ('홤v') AND ('-2087179654')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')OR(0.37121627455866835)))OR(0.5354839916514436)))AND(0.5672241946911123)))OR('aC*'))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((x'')OR(x'')))OR(x'')) THEN ((x'') NOT BETWEEN ('-1798652897') AND (0.2730861326269516)) ELSE ((x'')/(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x'd266')))==(((0.8049137932578991) BETWEEN (NULL) AND (NULL)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-752739883 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 sz=2068283010 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1941591578 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-968255043'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-1989476139 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.6484659607498634) NOT BETWEEN (-1.744784546E9) AND (x'')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-439327192 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '4 sz=213320905 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'CY''|u2'; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-479603761'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1904056776'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-680220318' IN ('307623774')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT ((0.848138497744085)>>(0.8875564753168356))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1248370763' IN ()))AND((('TRUE')>('3 ')))))OR((('?⇓d')GLOB(6.31617832E8)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) NOT BETWEEN (CASE '897610044'  WHEN '' THEN x'' END) AND ('519525540' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '1000399649 sz=-1252764927 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '1418449155 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((0.7166436752690162)==('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=1827277179 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2129440880 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1787419452 COLLATE BINARY) BETWEEN ((((x'')) NOT BETWEEN ((NULL)) AND ((NULL)))) AND (((x'')||(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(COALESCE(NULL, NULL) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=224864118 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'a87a')AND(x'1ef6')) IN ('', (NOT (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TIME((NULL IN (x'cdba860d')), (('d)奵Kxkws{') IS FALSE), CAST(NULL AS INTEGER), (NOT (0.8420545126031791)), (('O\r') BETWEEN (x'') AND (NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1964944478 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '281770142 0 sz=1724443208 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((2.08733017E8)OR('-1608447359')))AND(NULL)), (('') BETWEEN ('{#') AND ('-1470441966')), (0.9295648368547829 IN (NULL))))>((((((x'')AND(NULL)))OR(0.4163280182775987)), ((x'') NOT BETWEEN (NULL) AND ('-1795399678')), IFNULL('_E', NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1667000310 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '2083311269'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-668949440 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=813550520 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(COALESCE(x'', 'r픲P6''L')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1976851367 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-1122032511 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'2a53' AS NUMERIC) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-179622903 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-Infinity굃'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) BETWEEN ((0xffffffff8139f913 COLLATE NOCASE)) AND ((((((0.9404993280454375)AND(0.9761256496522456)))OR(x'85e1'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1998999121 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '790466921 sz=781344826 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 'TRUE' THEN (-1746698791 IN ()) ELSE ((NULL)+(NULL)) END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1630027964'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 0 0 sz=242529535 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '-636503183 sz=962537013 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2115558120 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=54484269 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' COLLATE NOCASE IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-97829147')OR(0.4169646506033301)))OR('')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(IFNULL(DISTINCT x'', '') AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((+ (0.5290735258552937)))AND((- ('223788566')))))AND(CAST(NULL AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')+('-395023874')))>(CASE WHEN x'' THEN -1.186997167E9 WHEN x'' THEN 's쬤TU' WHEN '-1555956478' THEN 1.787419452E9 ELSE x'' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD((((((((('*''Ugw.')AND(2.06112813E9)))AND(0.15354376680201964)))OR(x'1a3f')))AND(NULL)), 0.15605086919877242); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL IN (x''))))==((((NULL) IS FALSE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=431568703 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=1734863599 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 sz=38799852 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-33226929 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS BLOB))!=((((((((('-1331057016')AND('OaJC>')))AND(x'5574')))AND(x'5279')))OR(-142586315)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '0 1834267443 sz=-1167703832 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0xffffffff929de0bf)) NOT BETWEEN (('{_k')) AND ((NULL)))) BETWEEN ((('\r?8fEy') NOT NULL)) AND (((0.6675901060048853)%(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-453414753 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_COMPILEOPTION_USED(NULL)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-19413210 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1753117263 COLLATE BINARY)OR(((x'90b5')/(NULL)))))OR(NULL COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_object((((x'')) NOT BETWEEN (('1448203305')) AND ((''))), CAST(NULL AS REAL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE x'369c'  WHEN '~䭺ᒍsL(P7' THEN '243532419' WHEN NULL THEN 0.9367415882851114 WHEN 0.6334307629469992 THEN '-1713688355' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '4 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=149413849'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-626089923'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-1143039643 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1703410219 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1.42586315E8)) BETWEEN ((((NULL) IS TRUE))) AND (((0.47538636274704904 IN (0.9886736068638647))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE '1471758791' COLLATE BINARY COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1071748644'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('')AND(x''))  WHEN ((0Xffffffff97e8a46a) BETWEEN (x'1075') AND ('')) THEN (((('181851843')OR(NULL)))AND(0.30549702826226666)) WHEN ((((-1.795614796E9)OR('')))OR(NULL)) THEN (('404953624') BETWEEN (x'') AND (x'')) WHEN NULL THEN CASE 1.09330039E9  WHEN 0X7fffffffffffffff THEN '-1928703573' ELSE '-781454135' END ELSE (('861300237')!=(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN 'FV乀^L#S' ELSE '0.8408160658800348' END) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS REAL))+('446683303' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((NULL)AND(x'b34d')))OR(0.7302733441369602)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '-1234223088 sz=1437956604'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS INTEGER)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '813550520 sz=1308053049 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '720152071 sz=2115697798'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '-493583005 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1842014700 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1211008627 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-781454135 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1455692977 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=2087433733 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-740572724 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -413578282 sz=-1343159477 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1555956478 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-425820649 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.22585104322250082 AS REAL))IS NOT((('T[3c\n[Н[]a')|('1074003751')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '4 sz=1270183487 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.3612623540587945) BETWEEN (x'aa1d6631') AND (x'f545')))*(x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-1672520059 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 sz=981299754 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 -781454135 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.03707680913902445) NOTNULL)) BETWEEN (((0x7e0de025)<('kz'))) AND (CASE WHEN NULL THEN NULL ELSE 0.38037578696373475 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' COLLATE RTRIM IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=38799852 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2056441459 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('1092762667')>(0.1390421266351909)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.3829385750558493 COLLATE NOCASE)<=(('' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '-539995389 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOTNULL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1608447359 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((x'')/(CASE x''  WHEN NULL THEN 8.63285756E8 ELSE x'ec9f' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=-1089459326'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) BETWEEN (('-1145914238')) AND ((x'3d95')))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=447632724'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '1469815653 sz=-307992645'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))>=((9.62537013E8))))IS((('994626401')<('>InfinityM-InfinityQ')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE 1.61188516E8  WHEN 0X4bb5763f THEN 0xffffffffa856a4f0 END AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-396867543 sz=-1331057016'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=817402090'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((CASE WHEN 3.07623774E8 THEN 'F' ELSE 0.848459100690392 END)) AND ((((x'')!=('2145852159'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1049929945 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('o\n+')/(0.22836744405543352)))!=((-2086710418 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0X6f7ba7f8 COLLATE NOCASE) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('' IN ())))<=((((((9.62537013E8)OR(0xffffffffd5ba2baa)))OR(x'cdbc'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1065121310 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-79450269 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((606034908)) BETWEEN ((0.1561859144074954)) AND ((NULL)))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1065121310')OR(NULL)))!=((- (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('0.3740615894476319' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.038539943030108215))>(((~ (NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 0 sz=-1548967692 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('161188516' IN ('#JZ')))<>(CAST('-1672520059' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=974882170 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=2096356547 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR('0.6940528787031306')))OR(1.270183487E9)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1461135611 0 sz=144576997 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('ᔹ☵6')>((((((((('-1198411148')AND(x'd89d')))OR('-810780566')))AND('(')))OR(1.270183487E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-113500391 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN ((LIKE(']3e>Kn', 1754602638))) AND ((((('醲*'))<=(('371445703')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=944325883 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('gGo{!9L') IS TRUE) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1842208384 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1313668265 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(NULL AS BLOB)  WHEN ('' IN ()) THEN CAST('' AS BLOB) ELSE '-634548313' END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT (((x'')) BETWEEN (('2,PP3jhj')) AND (('6o')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=55041681 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1262794787'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-1172390506 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=708694952 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=368968973'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE UNLIKELY('939820755')  WHEN (NOT (NULL)) THEN ((x'3f0a') BETWEEN (NULL) AND (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 1756969934 sz=315012371 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-262860311 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-983626067'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1902768346 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-447311213 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0X2baae370)OR(NULL)))OR(0.6249549268962696)))AND(NULL)))OR('')))>>(((0xffffffffb5e6b35b) NOT BETWEEN (0Xffffffff9920fac2) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0X13c98879 IN ()))>=((+ (x'ccbe')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('eUve*') NOT BETWEEN (NULL) AND (NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)<('292532563')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('-207348809') BETWEEN (x'') AND ('-1672520059')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('Hl' IN ('-750045398', x''))) BETWEEN (json_array(0Xffffffff8e064b1e, '0.5290735258552937')) AND ('[+' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2146305213 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '-461084641 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('\,騄*K퍀\r')||('-1656900287')))>>(((x'34b7') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-105452669')>(x'')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'effb')<<(NULL)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '-479603761 unordered noskipscan'); -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=15'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 4ms;
COMMIT TRANSACTION; -- 0ms;
END; -- 0ms;
END TRANSACTION; -- 0ms;
ALTER TABLE t0 ADD COLUMN c75 BLOB; -- 0ms;
DROP TABLE IF EXISTS t0; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
DELETE FROM vt0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '26864'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA main.mmap_size = -5989613626861141997; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('~vj_1'); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (x''), (NULL), (-79293149); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '62742'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '423'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1308467923,9');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -168467814);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '30734'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '8416'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
END TRANSACTION; -- 0ms;
END; -- 0ms;
REINDEX; -- 1ms;
ANALYZE; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0)=('1362701609'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''), (x'8b38'), (x''), ('#9鐀J3'), (''); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), (0.1959335278434119), (0.6812908854573921); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 340396646); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '31329'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2069698810); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 445365017); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (x'c96d'), ('럶<p㡵'), (0X7c52cb2b); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=6'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND(0.7004068044562256)))OR((~ (-1608447359)))))AND((('-2128410391') ISNULL))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INTEGER ); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (x'fe0c'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.6549961739965866), (x'd5a86ed1'), (0.24775779971779166); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1939803970);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
VACUUM; -- 1ms;
INSERT OR ABORT INTO vt0(c0) VALUES (x'61d454aa'); -- 0ms;
ALTER TABLE t0 ADD COLUMN c74 INT CHECK ( ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND((t0.c0 IN (t0.c0))))); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
PRAGMA shrink_memory; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
ANALYZE; -- 0ms;
COMMIT; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=3'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.15082549253918098); -- 1ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1238757493,6');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '38423'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=8'); -- 0ms;
INSERT OR FAIL INTO t1 VALUES (0.15569839107202055); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.03553469035413581), (0.002458487036818391), ('>#'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=13'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA main.auto_vacuum = NONE; -- 0ms;
REINDEX; -- 1ms;
CREATE TRIGGER IF NOT EXISTS tr0 AFTER INSERT ON t1 FOR EACH ROW  WHEN (t1.c0 IN ()) BEGIN SELECT RAISE(FAIL, 'asdf');END; -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -166757441);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA journal_size_limit = 0; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('773836034'); -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i66 ON t1(CAST(((c0)+(c0)) AS BLOB) COLLATE BINARY); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=3'); -- 0ms;
CREATE UNIQUE INDEX i1 ON t1(NULL); -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
PRAGMA automatic_index; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=1'); -- 1ms;
CREATE UNIQUE INDEX i12 ON t1((HEX(c0) IN ()) COLLATE RTRIM); -- 0ms;
CREATE INDEX i43 ON t1((((NOT (c0)))<<(INSTR(c0, c0))) ASC); -- 1ms;
ALTER TABLE t1 RENAME TO t0; -- 1ms;
REINDEX; -- 0ms;
PRAGMA soft_heap_limit; -- 0ms;
REINDEX; -- 1ms;
VACUUM temp; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM t0 CROSS JOIN vt0 ON ((MIN(t0.c0, t0.c0)) NOTNULL);
SELECT * FROM t0 CROSS JOIN vt0 ON ((MIN(t0.c0, t0.c0)) NOTNULL) WHERE ((((vt0.c0) IS FALSE) IN ((((t0.c0)) BETWEEN (('-851285768')) AND ((vt0.c0)))))) UNION ALL SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((MIN(t0.c0, t0.c0)) NOTNULL) WHERE ((NOT ((((vt0.c0) IS FALSE) IN ((((t0.c0)) BETWEEN (('-851285768')) AND ((vt0.c0)))))))) UNION ALL SELECT * FROM t0 CROSS JOIN vt0 ON ((MIN(t0.c0, t0.c0)) NOTNULL) WHERE ((((((vt0.c0) IS FALSE) IN ((((t0.c0)) BETWEEN (('-851285768')) AND ((vt0.c0)))))) ISNULL));
SELECT * FROM t0 CROSS JOIN vt0 ON ((MIN(t0.c0, t0.c0)) NOTNULL);
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS BLOB)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0) NOT NULL) AS BLOB)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0) NOT NULL) AS BLOB)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0 WHERE (((((((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND('54517259')))AND(((962537013)-(t0.c0)))))AND(t0.c0 COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0 NOT INDEXED, vt0 WHERE ((NOT (((((((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND('54517259')))AND(((962537013)-(t0.c0)))))AND(t0.c0 COLLATE NOCASE))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt0 WHERE (((((((((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND('54517259')))AND(((962537013)-(t0.c0)))))AND(t0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((((((MAX(t0.c0)))==((t0.c0))), 0.9189759499949821, GROUP_CONCAT(MAX(vt0.c0)), NULL, TOTAL(COUNT(t0.c0))))>((MIN(t0.c0), ((TOTAL(vt0.c0)) ISNULL), (+ (COUNT(*))), AVG(t0.c0), TYPEOF(GROUP_CONCAT(COUNT(vt0.c0)))))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (((((((MAX(t0.c0)))==((t0.c0))), 0.9189759499949821, GROUP_CONCAT(MAX(vt0.c0)), NULL, TOTAL(COUNT(t0.c0))))>((MIN(t0.c0), ((TOTAL(vt0.c0)) ISNULL), (+ (COUNT(*))), AVG(t0.c0), TYPEOF(GROUP_CONCAT(COUNT(vt0.c0)))))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((((((((MAX(t0.c0)))=((t0.c0))), 0.9189759499949821, GROUP_CONCAT(MAX(vt0.c0)), NULL, TOTAL(COUNT(t0.c0))))>((MIN(t0.c0), ((TOTAL(vt0.c0)) ISNULL), (+ (COUNT(*))), AVG(t0.c0), TYPEOF(GROUP_CONCAT(COUNT(vt0.c0))))))) ISNULL);
SELECT t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0 COLLATE BINARY)OR((vt0.c0 IN ()))))AND((t0.c0 IN ())));
SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0 COLLATE BINARY)OR((vt0.c0 IN ()))))AND((t0.c0 IN ()))) WHERE (vt0.c0) UNION ALL SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0 COLLATE BINARY)OR((vt0.c0 IN ()))))AND((t0.c0 IN ()))) WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0 COLLATE BINARY)OR((vt0.c0 IN ()))))AND((t0.c0 IN ()))) WHERE (((vt0.c0) ISNULL));
SELECT t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0 COLLATE BINARY)OR((vt0.c0 IN ()))))AND((t0.c0 IN ())));
SELECT DISTINCT t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((((((vt0.c0)AND('-1521254108')))OR(vt0.c0)))<=((- (t0.c0))));
SELECT DISTINCT t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((((((vt0.c0)AND('-1521254108')))OR(vt0.c0)))<=((- (t0.c0)))) WHERE (CASE vt0.c0  WHEN ((t0.c0)LIKE(vt0.c0)) THEN ((((x'')OR(x'')))OR(t0.c0)) ELSE vt0.c0 COLLATE RTRIM END) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((((((vt0.c0)AND('-1521254108')))OR(vt0.c0)))<=((- (t0.c0)))) WHERE ((NOT (CASE vt0.c0  WHEN ((t0.c0)LIKE(vt0.c0)) THEN ((((x'')OR(x'')))OR(t0.c0)) ELSE vt0.c0 COLLATE RTRIM END))) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((((((vt0.c0)AND('-1521254108')))OR(vt0.c0)))<=((- (t0.c0)))) WHERE (((CASE vt0.c0  WHEN ((t0.c0)LIKE(vt0.c0)) THEN ((((x'')OR(x'')))OR(t0.c0)) ELSE vt0.c0 COLLATE RTRIM END) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((((((vt0.c0)AND('-1521254108')))OR(vt0.c0)))<=((- (t0.c0))));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((LOWER(DISTINCT vt0.c0))<=(vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((LOWER(DISTINCT vt0.c0))<=(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((LOWER(DISTINCT vt0.c0))<=(vt0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (x'' IN ()) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (x'' IN ()) GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (x'' IN ()) GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (x'' IN ()) GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (x'' IN ()) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (x'' IN ()) GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (x'' IN ()) GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (x'' IN ()) GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (x'' IN ()) GROUP BY t0.c0;
SELECT ALL * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE (LIKELY(DISTINCT (('~!')|(t0.c0)))) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT (LIKELY(DISTINCT (('~!')|(t0.c0)))))) UNION ALL SELECT * FROM t0, vt0 WHERE (((LIKELY(DISTINCT (('~!')|(t0.c0)))) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE ((+ (CAST(0.06866247228518674 AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE ((NOT ((+ (CAST(0.06866247228518674 AS NUMERIC)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE ((((+ (CAST(0.06866247228518674 AS NUMERIC)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, t0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE (vt0.c0) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON CAST(CASE WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END AS TEXT);
SELECT vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON CAST(CASE WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END AS TEXT) WHERE (((((((t0.c0)>=(vt0.c0)))AND(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END)))OR((t0.c0 IN ())))) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON CAST(CASE WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END AS TEXT) WHERE ((NOT (((((((t0.c0)>=(vt0.c0)))AND(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END)))OR((t0.c0 IN ())))))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON CAST(CASE WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END AS TEXT) WHERE (((((((((t0.c0)>=(vt0.c0)))AND(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END)))OR((t0.c0 IN ())))) ISNULL));
SELECT vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON CAST(CASE WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END AS TEXT);
SELECT DISTINCT vt0.c0, t0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c0, t0.c0 FROM t0, vt0 WHERE (((CHAR(t0.c0)) NOTNULL)) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT (((CHAR(t0.c0)) NOTNULL)))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM t0, vt0 WHERE (((((CHAR(t0.c0)) NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0 FROM t0, vt0;
SELECT vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING SUM(MAX(t0.c0)) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(MAX(t0.c0)))) UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((SUM(MAX(t0.c0))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (CAST(t0.c0 COLLATE RTRIM AS REAL)) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST(t0.c0 COLLATE RTRIM AS REAL)))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((CAST(t0.c0 COLLATE RTRIM AS REAL)) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0 NOT INDEXED, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0) ISNULL)) NOT BETWEEN (LIKELY(t0.c0)) AND (((t0.c0)>(t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) ISNULL)) NOT BETWEEN (LIKELY(t0.c0)) AND (((t0.c0)>(t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((t0.c0) ISNULL)) NOT BETWEEN (LIKELY(t0.c0)) AND (((t0.c0)>(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING AVG(COUNT(AVG(vt0.c0))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (AVG(COUNT(AVG(vt0.c0))))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING ((AVG(COUNT(AVG(vt0.c0)))) ISNULL);
SELECT TOTAL((((t0.c0 IN ())) NOTNULL)) FROM t0, vt0 ORDER BY ((t0.c0 IN (vt0.c0)) IN (CAST(vt0.c0 AS NUMERIC))) DESC  NULLS FIRST;
SELECT vt0.c0, t0.c0 FROM t0, vt0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0, t0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0)+(vt0.c0)))LIKE(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)+(vt0.c0)))LIKE(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)+(vt0.c0)))LIKE(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0, t0.c0 FROM t0 INNER JOIN vt0 ON (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) IN ()) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0 INNER JOIN vt0 ON (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) IN ()) WHERE (((((((((t0.c0)AND(t0.c0)))OR(x'8873')))OR(vt0.c0)))OR(t0.c0)) COLLATE RTRIM) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0 NOT INDEXED INNER JOIN vt0 ON (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) IN ()) WHERE ((NOT (((((((((t0.c0)AND(t0.c0)))OR(x'8873')))OR(vt0.c0)))OR(t0.c0)) COLLATE RTRIM))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t0 INNER JOIN vt0 ON (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) IN ()) WHERE (((((((((((t0.c0)AND(t0.c0)))OR(x'8873')))OR(vt0.c0)))OR(t0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0 INNER JOIN vt0 ON (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) IN ()) GROUP BY vt0.c0, t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(((((((((COUNT(MAX(t0.c0)))OR(COUNT(*))))OR(SUM(MAX(t0.c0)))))OR(AVG(t0.c0))))OR(t0.c0)) AS TEXT) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(((((((((COUNT(MAX(t0.c0)))OR(COUNT(*))))OR(SUM(MAX(t0.c0)))))OR(AVG(t0.c0))))OR(t0.c0)) AS TEXT))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(((((((((COUNT(MAX(t0.c0)))OR(COUNT(*))))OR(SUM(MAX(t0.c0)))))OR(AVG(t0.c0))))OR(t0.c0)) AS TEXT)) ISNULL);
SELECT * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE (((TYPEOF(DISTINCT vt0.c0)) NOTNULL)) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT (((TYPEOF(DISTINCT vt0.c0)) NOTNULL)))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE (((((TYPEOF(DISTINCT vt0.c0)) NOTNULL)) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE ((vt0.c0 COLLATE BINARY IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE ((NOT ((vt0.c0 COLLATE BINARY IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE ((((vt0.c0 COLLATE BINARY IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, t0;
SELECT ALL vt0.c0, t0.c0 FROM vt0 CROSS JOIN t0 ON (((('1362230935') NOTNULL)) BETWEEN (MIN(vt0.c0, t0.c0)) AND (vt0.c0 COLLATE NOCASE)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0 CROSS JOIN t0 ON (((('1362230935') NOTNULL)) BETWEEN (MIN(vt0.c0, t0.c0)) AND (vt0.c0 COLLATE NOCASE)) WHERE ((((t0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND ((t0.c0 COLLATE NOCASE)))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0 CROSS JOIN t0 ON (((('1362230935') NOTNULL)) BETWEEN (MIN(vt0.c0, t0.c0)) AND (vt0.c0 COLLATE NOCASE)) WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND ((t0.c0 COLLATE NOCASE)))))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM vt0 CROSS JOIN t0 ON (((('1362230935') NOTNULL)) BETWEEN (MIN(vt0.c0, t0.c0)) AND (vt0.c0 COLLATE NOCASE)) WHERE ((((((t0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND ((t0.c0 COLLATE NOCASE)))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0 CROSS JOIN t0 ON (((('1362230935') NOTNULL)) BETWEEN (MIN(vt0.c0, t0.c0)) AND (vt0.c0 COLLATE NOCASE)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING x'' UNION ALL SELECT vt0.c0 FROM t0, vt0 NOT INDEXED GROUP BY vt0.c0 HAVING (NOT (x'')) UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((x'') ISNULL);
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING x'' UNION ALL SELECT vt0.c0 FROM t0, vt0 NOT INDEXED GROUP BY vt0.c0 HAVING (NOT (x'')) UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((x'') ISNULL);
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((json_type(vt0.c0))OR(((vt0.c0) IS TRUE)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((json_type(vt0.c0))OR(((vt0.c0) IS TRUE)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((json_type(vt0.c0))OR(((vt0.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (NULL) AND ((((vt0.c0))>((vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (NULL) AND ((((vt0.c0))>((vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (NULL) AND ((((vt0.c0))>((vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((NOT (-1015253889))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((NOT (-1015253889))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((NOT (-1015253889))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (x'') UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL vt0.c0 FROM vt0 INDEXED BY i43, t0 GROUP BY vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((TOTAL(NULL))|(AVG(t0.c0))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (((TOTAL(NULL))|(AVG(t0.c0))))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((((TOTAL(NULL))|(AVG(t0.c0)))) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((TOTAL(NULL))|(AVG(t0.c0))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (((TOTAL(NULL))|(AVG(t0.c0))))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((((TOTAL(NULL))|(AVG(t0.c0)))) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0) IS TRUE))>(((t0.c0)%(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) IS TRUE))>(((t0.c0)%(t0.c0))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((((t0.c0) IS TRUE))>(((t0.c0)%(t0.c0))))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE x''  WHEN '?f(A7狿W梁' THEN ((t0.c0)IS(t0.c0)) WHEN ((0x412a70a6)<<(t0.c0)) THEN CAST(t0.c0 AS BLOB) WHEN DATETIME(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0) THEN (+ (t0.c0)) WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0) ISNULL) WHEN ((t0.c0)AND(t0.c0)) THEN 1.61188516E8 END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE x''  WHEN '?f(A7狿W梁' THEN ((t0.c0)IS(t0.c0)) WHEN ((0X412a70a6)<<(t0.c0)) THEN CAST(t0.c0 AS BLOB) WHEN DATETIME(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0) THEN (+ (t0.c0)) WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0) ISNULL) WHEN ((t0.c0)AND(t0.c0)) THEN 1.61188516E8 END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE x''  WHEN '?f(A7狿W梁' THEN ((t0.c0)IS(t0.c0)) WHEN ((0X412a70a6)<<(t0.c0)) THEN CAST(t0.c0 AS BLOB) WHEN DATETIME(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0) THEN (+ (t0.c0)) WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0) ISNULL) WHEN ((t0.c0)AND(t0.c0)) THEN 1.61188516E8 END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))>=(((('')<<(t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))>=(((('')<<(t0.c0)))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))>=(((('')<<(t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM t0 CROSS JOIN vt0 ON ((((t0.c0)AND((vt0.c0 IN ()))))AND((~ (t0.c0)))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0 CROSS JOIN vt0 ON ((((t0.c0)AND((vt0.c0 IN ()))))AND((~ (t0.c0)))) GROUP BY vt0.c0 HAVING SUM(AVG(GROUP_CONCAT(AVG(AVG(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM t0 CROSS JOIN vt0 ON ((((t0.c0)AND((vt0.c0 IN ()))))AND((~ (t0.c0)))) GROUP BY vt0.c0 HAVING (NOT (SUM(AVG(GROUP_CONCAT(AVG(AVG(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM t0 CROSS JOIN vt0 ON ((((t0.c0)AND((vt0.c0 IN ()))))AND((~ (t0.c0)))) GROUP BY vt0.c0 HAVING ((SUM(AVG(GROUP_CONCAT(AVG(AVG(vt0.c0)))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0))=((vt0.c0))))OR((vt0.c0 IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0))=((vt0.c0))))OR((vt0.c0 IN ())))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((vt0.c0))==((vt0.c0))))OR((vt0.c0 IN ())))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT t0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c0 FROM vt0, t0 WHERE ((((+ (x''))) IS TRUE)) UNION SELECT DISTINCT t0.c0 FROM vt0, t0 WHERE ((NOT ((((+ (x''))) IS TRUE)))) UNION SELECT DISTINCT t0.c0 FROM vt0, t0 WHERE ((((((+ (x''))) IS TRUE)) ISNULL));
SELECT DISTINCT t0.c0 FROM vt0, t0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE ((((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT ((((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE ((((((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(((((GROUP_CONCAT(GROUP_CONCAT(COUNT(*))))OR('\*BFF\0')))OR(MIN(COUNT(*)))) AS REAL) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(((((GROUP_CONCAT(GROUP_CONCAT(COUNT(*))))OR('\*BFF\0')))OR(MIN(COUNT(*)))) AS REAL))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(((((GROUP_CONCAT(GROUP_CONCAT(COUNT(*))))OR('\*BFF\0')))OR(MIN(COUNT(*)))) AS REAL)) ISNULL);
SELECT t0.c0, vt0.c0 FROM vt0, t0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))>=((t0.c0 IN ())))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))>=((t0.c0 IN ())))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 NOT INDEXED WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))>=((t0.c0 IN ())))) ISNULL));
SELECT t0.c0, vt0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((t0.c0) IS TRUE) IN (0.0452004127605522, ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0) IS TRUE) IN (0.0452004127605522, ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0) IS TRUE) IN (0.0452004127605522, ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((((t0.c0)/(t0.c0)))OR((t0.c0 IN (t0.c0, t0.c0)))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((((t0.c0)/(t0.c0)))OR((t0.c0 IN (t0.c0, t0.c0)))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((((t0.c0)/(t0.c0)))OR((t0.c0 IN (t0.c0, t0.c0)))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (GROUP_CONCAT(t0.c0) IN ()) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((GROUP_CONCAT(t0.c0) IN ()))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((GROUP_CONCAT(t0.c0) IN ())) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (GROUP_CONCAT(t0.c0) IN ()) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((GROUP_CONCAT(t0.c0) IN ()))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((GROUP_CONCAT(t0.c0) IN ())) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT TOTAL(CASE ((vt0.c0) IS TRUE)  WHEN t0.c0 THEN 0x369b345b END) FROM vt0, t0 ORDER BY CAST(((((vt0.c0)AND(t0.c0)))AND(vt0.c0)) AS NUMERIC);
SELECT t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((t0.c0)GLOB(2067341561)))))AND(((t0.c0)%(t0.c0))));
SELECT ALL t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((t0.c0)GLOB(2067341561)))))AND(((t0.c0)%(t0.c0)))) WHERE (t0.c0) UNION ALL SELECT t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((t0.c0)GLOB(2067341561)))))AND(((t0.c0)%(t0.c0)))) WHERE ((NOT (t0.c0))) UNION ALL SELECT t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((t0.c0)GLOB(2067341561)))))AND(((t0.c0)%(t0.c0)))) WHERE (((t0.c0) ISNULL));
SELECT t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((t0.c0)GLOB(2067341561)))))AND(((t0.c0)%(t0.c0))));
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (LOWER((t0.c0 IN ()))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (LOWER((t0.c0 IN ()))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((LOWER((t0.c0 IN ()))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0)) COLLATE NOCASE) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0)) COLLATE NOCASE))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((COUNT(*))) NOT BETWEEN ((((x'') NOT NULL))) AND ((MIN(MAX(NULL))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((COUNT(*))) NOT BETWEEN ((((x'') NOT NULL))) AND ((MIN(MAX(NULL))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((COUNT(*))) NOT BETWEEN ((((x'') NOT NULL))) AND ((MIN(MAX(NULL)))))) ISNULL);
SELECT * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE (NULL) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM vt0, t0 WHERE (((NULL) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT t0.c0 FROM t0 INDEXED BY i43;
SELECT DISTINCT t0.c0 FROM t0 INDEXED BY i43 WHERE ((((t0.c0, t0.c0, t0.c0)) BETWEEN (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), NULLIF(t0.c0, '1270183487'), ((t0.c0) NOT NULL))) AND ((((t0.c0)AND(t0.c0)), t0.c0, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 INDEXED BY i43 WHERE ((NOT ((((t0.c0, t0.c0, t0.c0)) BETWEEN (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), NULLIF(t0.c0, '1270183487'), ((t0.c0) NOT NULL))) AND ((((t0.c0)AND(t0.c0)), t0.c0, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))))) UNION SELECT DISTINCT t0.c0 FROM t0 INDEXED BY i43 WHERE ((((((t0.c0, t0.c0, t0.c0)) BETWEEN (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), NULLIF(t0.c0, '1270183487'), ((t0.c0) NOT NULL))) AND ((((t0.c0)AND(t0.c0)), t0.c0, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0 INDEXED BY i43;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))||(CHAR('')))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))||(CHAR('')))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))||(CHAR('')))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))))) UNION ALL SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))))) UNION ALL SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE (CAST(((vt0.c0)<>(vt0.c0)) AS NUMERIC)) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT (CAST(((vt0.c0)!=(vt0.c0)) AS NUMERIC)))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE (((CAST(((vt0.c0)!=(vt0.c0)) AS NUMERIC)) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0) ISNULL))))OR(((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))AND(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(json_remove(vt0.c0, vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0) ISNULL))))OR(((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))AND(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(json_remove(vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0) ISNULL))))OR(((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))AND(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(json_remove(vt0.c0, vt0.c0)))) ISNULL));
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 WHERE (0.07991735271820322) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt0 WHERE ((NOT (0.07991735271820322))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt0 WHERE (((0.07991735271820322) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL SUM(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END COLLATE RTRIM) FROM vt0, t0 ORDER BY ((((t0.c0)OR(t0.c0)))OR('-824884866')) COLLATE NOCASE  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND (((((x'0336', t0.c0, vt0.c0))>((vt0.c0, t0.c0, t0.c0))))))  NULLS FIRST;
SELECT ALL vt0.c0 FROM vt0, t0;
SELECT vt0.c0 FROM vt0, t0 WHERE (LIKELIHOOD(DISTINCT IFNULL(vt0.c0, x''), 0.0014396546018780043)) UNION ALL SELECT vt0.c0 FROM vt0, t0 WHERE ((NOT (LIKELIHOOD(DISTINCT IFNULL(vt0.c0, x''), 0.0014396546018780043)))) UNION ALL SELECT vt0.c0 FROM vt0, t0 WHERE (((LIKELIHOOD(DISTINCT IFNULL(vt0.c0, x''), 0.0014396546018780043)) ISNULL));
SELECT ALL vt0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0 WHERE (json_object((~ (vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT (json_object((~ (vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0 WHERE (((json_object((~ (vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ISNULL));
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (TYPEOF(DISTINCT ((t0.c0) ISNULL))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (TYPEOF(DISTINCT ((t0.c0) ISNULL))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((TYPEOF(DISTINCT ((t0.c0) ISNULL))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0;
SELECT ALL t0.c0 FROM vt0, t0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE BINARY COLLATE RTRIM) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 WHERE ((NOT (CAST(vt0.c0 AS TEXT) COLLATE BINARY COLLATE RTRIM))) UNION ALL SELECT t0.c0 FROM vt0, t0 WHERE (((CAST(vt0.c0 AS TEXT) COLLATE BINARY COLLATE RTRIM) ISNULL));
SELECT ALL t0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE (json_array_length((((vt0.c0))>=((vt0.c0))), ((vt0.c0) ISNULL))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE ((NOT (json_array_length((((vt0.c0))>=((vt0.c0))), ((vt0.c0) ISNULL))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE (((json_array_length((((vt0.c0))>=((vt0.c0))), ((vt0.c0) ISNULL))) ISNULL));
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE ('IBATT[u7') GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT ('IBATT[u7'))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE ((('IBATT[u7') ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG((((MIN(vt0.c0), SUM(vt0.c0), TOTAL(vt0.c0), 'D', vt0.c0)) BETWEEN ((COUNT(*), MIN(MIN(TOTAL(vt0.c0))), SUM(vt0.c0), SUM(GROUP_CONCAT(TOTAL(SUM(vt0.c0)))), vt0.c0)) AND ((SUM(GROUP_CONCAT(GROUP_CONCAT(x'2833'))), 0.05437896126963837, GROUP_CONCAT(GROUP_CONCAT(vt0.c0)), vt0.c0, COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG((((MIN(vt0.c0), SUM(vt0.c0), TOTAL(vt0.c0), 'D', vt0.c0)) BETWEEN ((COUNT(*), MIN(MIN(TOTAL(vt0.c0))), SUM(vt0.c0), SUM(GROUP_CONCAT(TOTAL(SUM(vt0.c0)))), vt0.c0)) AND ((SUM(GROUP_CONCAT(GROUP_CONCAT(x'2833'))), 0.05437896126963837, GROUP_CONCAT(GROUP_CONCAT(vt0.c0)), vt0.c0, COUNT(*))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG((((MIN(vt0.c0), SUM(vt0.c0), TOTAL(vt0.c0), 'D', vt0.c0)) BETWEEN ((COUNT(*), MIN(MIN(TOTAL(vt0.c0))), SUM(vt0.c0), SUM(GROUP_CONCAT(TOTAL(SUM(vt0.c0)))), vt0.c0)) AND ((SUM(GROUP_CONCAT(GROUP_CONCAT(x'2833'))), 0.05437896126963837, GROUP_CONCAT(GROUP_CONCAT(vt0.c0)), vt0.c0, COUNT(*)))))) ISNULL);
SELECT vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))));
SELECT vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))) WHERE (((~ (t0.c0)) IN ())) UNION ALL SELECT vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))) WHERE ((NOT (((~ (t0.c0)) IN ())))) UNION ALL SELECT vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))) WHERE (((((~ (t0.c0)) IN ())) ISNULL));
SELECT vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))));
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE ((((((t0.c0))!=((vt0.c0))))<(t0.c0))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT ((((((t0.c0))!=((vt0.c0))))<(t0.c0))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((((((((t0.c0))!=((vt0.c0))))<(t0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 NOT INDEXED WHERE ((((~ (vt0.c0)))%(((t0.c0)|(t0.c0))))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 WHERE ((NOT ((((~ (vt0.c0)))%(((t0.c0)|(t0.c0))))))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM t0, vt0 WHERE ((((((~ (vt0.c0)))%(((t0.c0)|(t0.c0))))) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(AVG(-1162991427)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(AVG(-1162991427)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(AVG(-1162991427))) ISNULL);
SELECT vt0.c0, t0.c0 FROM t0, vt0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((((((vt0.c0 IN ()))OR((((0.8294151099237725, t0.c0, t0.c0)) NOT BETWEEN (('2093793501', x'8c6c', '2K')) AND ((t0.c0, t0.c0, 'p*'))))))OR(vt0.c0))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT ((((((vt0.c0 IN ()))OR((((0.8294151099237725, t0.c0, t0.c0)) NOT BETWEEN (('2093793501', x'8c6c', '2K')) AND ((t0.c0, t0.c0, 'p*'))))))OR(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE ((((((((vt0.c0 IN ()))OR((((0.8294151099237725, t0.c0, t0.c0)) NOT BETWEEN (('2093793501', x'8c6c', '2K')) AND ((t0.c0, t0.c0, 'p*'))))))OR(vt0.c0))) ISNULL));
SELECT vt0.c0, t0.c0 FROM t0, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST(t0.c0 AS BLOB)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(t0.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS BLOB)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((+ (((t0.c0) NOTNULL)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((+ (((t0.c0) NOTNULL)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((+ (((t0.c0) NOTNULL)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0 IN (t0.c0))) NOT NULL)) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT ((((vt0.c0 IN (t0.c0))) NOT NULL)))) UNION ALL SELECT * FROM vt0, t0 WHERE ((((((vt0.c0 IN (t0.c0))) NOT NULL)) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR('&Y')) COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)AND(vt0.c0)))OR('&Y')) COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR('&Y')) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND(((t0.c0)/(NULL)))) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND(((t0.c0)/(NULL)))) WHERE (t0.c0) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND(((t0.c0)/(NULL)))) WHERE ((NOT (t0.c0))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND(((t0.c0)/(NULL)))) WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND(((t0.c0)/(NULL)))) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(NULL)) NOT NULL) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((MIN(NULL)) NOT NULL))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((MIN(NULL)) NOT NULL)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(NULL)) NOT NULL) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((MIN(NULL)) NOT NULL))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((MIN(NULL)) NOT NULL)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (CAST(((t0.c0)==(t0.c0)) AS TEXT)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CAST(((t0.c0)=(t0.c0)) AS TEXT)))) UNION ALL SELECT ALL * FROM t0 WHERE (((CAST(((t0.c0)=(t0.c0)) AS TEXT)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE ((MAX(t0.c0, t0.c0, t0.c0, vt0.c0) IN ())) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT ((MAX(t0.c0, t0.c0, t0.c0, vt0.c0) IN ())))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((((MAX(t0.c0, t0.c0, t0.c0, vt0.c0) IN ())) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CAST(JULIANDAY(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0) AS REAL)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST(JULIANDAY(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0) AS REAL)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST(JULIANDAY(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0) AS REAL)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING (((((TOTAL(MAX(vt0.c0)))-(COUNT(*)))))=((((t0.c0) BETWEEN (vt0.c0) AND (MIN(COUNT(TOTAL(MIN(MIN(GROUP_CONCAT(vt0.c0))))))))))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING (NOT ((((((TOTAL(MAX(vt0.c0)))-(COUNT(*)))))=((((t0.c0) BETWEEN (vt0.c0) AND (MIN(COUNT(TOTAL(MIN(MIN(GROUP_CONCAT(vt0.c0))))))))))))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING (((((((TOTAL(MAX(vt0.c0)))-(COUNT(*)))))=((((t0.c0) BETWEEN (vt0.c0) AND (MIN(COUNT(TOTAL(MIN(MIN(GROUP_CONCAT(vt0.c0)))))))))))) ISNULL);
SELECT ALL SUM((- (vt0.c0)) COLLATE BINARY) FROM vt0;
SELECT * FROM vt0, t0;
SELECT ALL * FROM vt0 NOT INDEXED, t0 WHERE (SQLITE_COMPILEOPTION_GET(((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))))) UNION ALL SELECT * FROM vt0, t0 WHERE (((SQLITE_COMPILEOPTION_GET(((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((NULL IN (((t0.c0) IS FALSE)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((NULL IN (((t0.c0) IS FALSE)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((NULL IN (((t0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ('128839407') GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ('128839407'))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((('128839407') ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON ((HEX(t0.c0))<>(json_remove(t0.c0, t0.c0, vt0.c0, t0.c0))) GROUP BY t0.c0, vt0.c0;
SELECT ALL * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))%((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))%((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))))) UNION ALL SELECT * FROM t0, vt0 WHERE ((((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))%((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) ISNULL)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) ISNULL)))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0)&(t0.c0)))!=(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)&(t0.c0)))<>(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((t0.c0)&(t0.c0)))!=(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING x'9835' UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (NOT (x'9835')) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((x'9835') ISNULL);
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING x'9835' UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (NOT (x'9835')) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((x'9835') ISNULL);
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (COALESCE(DISTINCT (t0.c0 IN ()), 0.16818861912253447 COLLATE BINARY)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (COALESCE(DISTINCT (t0.c0 IN ()), 0.16818861912253447 COLLATE BINARY)))) UNION ALL SELECT * FROM t0 WHERE (((COALESCE(DISTINCT (t0.c0 IN ()), 0.16818861912253447 COLLATE BINARY)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((((t0.c0))<((t0.c0)))) NOT BETWEEN (CAST(x'' AS BLOB)) AND (t0.c0 COLLATE BINARY))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0))<((t0.c0)))) NOT BETWEEN (CAST(x'' AS BLOB)) AND (t0.c0 COLLATE BINARY))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((((t0.c0))<((t0.c0)))) NOT BETWEEN (CAST(x'' AS BLOB)) AND (t0.c0 COLLATE BINARY))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY t0.c0, vt0.c0 HAVING MAX(AVG(COUNT(*))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (MAX(AVG(COUNT(*))))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY t0.c0, vt0.c0 HAVING ((MAX(AVG(COUNT(*)))) ISNULL);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c0 THEN vt0.c0 END COLLATE RTRIM COLLATE BINARY;
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c0 THEN vt0.c0 END COLLATE RTRIM COLLATE BINARY WHERE (((DATE(x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0))-(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))))) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c0 THEN vt0.c0 END COLLATE RTRIM COLLATE BINARY WHERE ((NOT (((DATE(x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0))-(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))))))) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c0 THEN vt0.c0 END COLLATE RTRIM COLLATE BINARY WHERE (((((DATE(x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0))-(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))))) ISNULL));
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c0 THEN vt0.c0 END COLLATE RTRIM COLLATE BINARY;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((((ABS(t0.c0))AND(x'')))AND(CAST(t0.c0 AS BLOB))))OR('DfVKkQ')))OR((('XIHA4') IS TRUE)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((((((ABS(t0.c0))AND(x'')))AND(CAST(t0.c0 AS BLOB))))OR('DfVKkQ')))OR((('XIHA4') IS TRUE)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((((((ABS(t0.c0))AND(x'')))AND(CAST(t0.c0 AS BLOB))))OR('DfVKkQ')))OR((('XIHA4') IS TRUE)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((t0.c0) ISNULL) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((t0.c0) ISNULL) WHERE ((t0.c0 IN ())) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((t0.c0) ISNULL) WHERE ((NOT ((t0.c0 IN ())))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((t0.c0) ISNULL) WHERE ((((t0.c0 IN ())) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((t0.c0) ISNULL) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c0)IS NOT(t0.c0))) IS TRUE) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c0)IS NOT(t0.c0))) IS TRUE) GROUP BY vt0.c0 HAVING ((COUNT(*)) NOT BETWEEN (MIN(vt0.c0)) AND (AVG(COUNT(TOTAL(SUM(t0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c0)IS NOT(t0.c0))) IS TRUE) GROUP BY vt0.c0 HAVING (NOT (((COUNT(*)) NOT BETWEEN (MIN(vt0.c0)) AND (AVG(COUNT(TOTAL(SUM(t0.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c0)IS NOT(t0.c0))) IS TRUE) GROUP BY vt0.c0 HAVING ((((COUNT(*)) NOT BETWEEN (MIN(vt0.c0)) AND (AVG(COUNT(TOTAL(SUM(t0.c0))))))) ISNULL);
SELECT t0.c0, vt0.c0 FROM vt0, t0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE (CAST((+ (vt0.c0)) AS BLOB)) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (CAST((+ (vt0.c0)) AS BLOB)))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE (((CAST((+ (vt0.c0)) AS BLOB)) ISNULL));
SELECT t0.c0, vt0.c0 FROM vt0, t0;
SELECT DISTINCT * FROM vt0 INDEXED BY i43, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ('0.9830079019436243') GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ('0.9830079019436243'))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((('0.9830079019436243') ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING MAX((AVG(SUM(GROUP_CONCAT(vt0.c0))) IN ())) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (MAX((AVG(SUM(GROUP_CONCAT(vt0.c0))) IN ())))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((MAX((AVG(SUM(GROUP_CONCAT(vt0.c0))) IN ()))) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING MAX((AVG(SUM(GROUP_CONCAT(vt0.c0))) IN ())) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (MAX((AVG(SUM(GROUP_CONCAT(vt0.c0))) IN ())))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((MAX((AVG(SUM(GROUP_CONCAT(vt0.c0))) IN ()))) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ('scAss	') UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT ('scAss	'))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((('scAss	') ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0 WHERE (NULL) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE WHEN ((vt0.c0)AND(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN (vt0.c0 IN (vt0.c0)) THEN (NOT (563876447)) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0)AND(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN (vt0.c0 IN (vt0.c0)) THEN (NOT (563876447)) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN ((vt0.c0)AND(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN (vt0.c0 IN (vt0.c0)) THEN (NOT (563876447)) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((+ (vt0.c0)))<>(LIKELIHOOD(vt0.c0, 0.7655411226668597)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((+ (vt0.c0)))<>(LIKELIHOOD(vt0.c0, 0.7655411226668597)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((+ (vt0.c0)))<>(LIKELIHOOD(vt0.c0, 0.7655411226668597)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)*(vt0.c0))) IS FALSE)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)*(vt0.c0))) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)*(vt0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE (((((t0.c0)OR(vt0.c0)))*((NULL IN ())))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT (((((t0.c0)OR(vt0.c0)))*((NULL IN ())))))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE (((((((t0.c0)OR(vt0.c0)))*((NULL IN ())))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(CASE WHEN vt0.c0 THEN GROUP_CONCAT(vt0.c0) ELSE vt0.c0 END) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(CASE WHEN vt0.c0 THEN GROUP_CONCAT(vt0.c0) ELSE vt0.c0 END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(CASE WHEN vt0.c0 THEN GROUP_CONCAT(vt0.c0) ELSE vt0.c0 END)) ISNULL);
SELECT * FROM t0 NATURAL JOIN vt0;
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (x'' COLLATE NOCASE COLLATE NOCASE) UNION ALL SELECT * FROM t0 NATURAL JOIN vt0 WHERE ((NOT (x'' COLLATE NOCASE COLLATE NOCASE))) UNION ALL SELECT * FROM t0 NATURAL JOIN vt0 WHERE (((x'' COLLATE NOCASE COLLATE NOCASE) ISNULL));
SELECT * FROM t0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT t0.c0 FROM t0, vt0 INDEXED BY i43 GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (MAX(GROUP_CONCAT(vt0.c0)) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((MAX(GROUP_CONCAT(vt0.c0)) IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((MAX(GROUP_CONCAT(vt0.c0)) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (MAX(GROUP_CONCAT(vt0.c0)) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((MAX(GROUP_CONCAT(vt0.c0)) IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((MAX(GROUP_CONCAT(vt0.c0)) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE (t0.c0) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE (((t0.c0) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (IFNULL(vt0.c0, t0.c0) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (IFNULL(vt0.c0, t0.c0) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((IFNULL(vt0.c0, t0.c0) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0) ISNULL)))<=((((((NULL)AND(vt0.c0)))AND(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0) ISNULL)))<=((((((NULL)AND(vt0.c0)))AND(vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((vt0.c0) ISNULL)))<=((((((NULL)AND(vt0.c0)))AND(vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) NOT BETWEEN (MIN(vt0.c0)) AND (COUNT(*))) UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*)) NOT BETWEEN (MIN(vt0.c0)) AND (COUNT(*))))) UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*)) NOT BETWEEN (MIN(vt0.c0)) AND (COUNT(*)))) ISNULL);
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) NOT BETWEEN (MIN(vt0.c0)) AND (COUNT(*))) UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*)) NOT BETWEEN (MIN(vt0.c0)) AND (COUNT(*))))) UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*)) NOT BETWEEN (MIN(vt0.c0)) AND (COUNT(*)))) ISNULL);
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((~ (((((((((vt0.c0)AND(vt0.c0)))OR(NULL)))AND(vt0.c0)))AND(0.016119534208125952))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((~ (((((((((vt0.c0)AND(vt0.c0)))OR(NULL)))AND(vt0.c0)))AND(0.016119534208125952))))))) UNION ALL SELECT * FROM vt0 WHERE ((((~ (((((((((vt0.c0)AND(vt0.c0)))OR(NULL)))AND(vt0.c0)))AND(0.016119534208125952))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0 CROSS JOIN t0 ON (((t0.c0, t0.c0, t0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CASE WHEN vt0.c0 THEN t0.c0 END)) AND ((((vt0.c0)-(x'')), ((t0.c0) NOTNULL), vt0.c0)));
SELECT DISTINCT * FROM vt0 CROSS JOIN t0 ON (((t0.c0, t0.c0, t0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CASE WHEN vt0.c0 THEN t0.c0 END)) AND ((((vt0.c0)-(x'')), ((t0.c0) NOTNULL), vt0.c0))) WHERE (((((((((((t0.c0)OR(t0.c0)))OR(vt0.c0)))OR(t0.c0)))OR(476643079)))>>(vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN t0 ON (((t0.c0, t0.c0, t0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CASE WHEN vt0.c0 THEN t0.c0 END)) AND ((((vt0.c0)-(x'')), ((t0.c0) NOTNULL), vt0.c0))) WHERE ((NOT (((((((((((t0.c0)OR(t0.c0)))OR(vt0.c0)))OR(t0.c0)))OR(476643079)))>>(vt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN t0 ON (((t0.c0, t0.c0, t0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CASE WHEN vt0.c0 THEN t0.c0 END)) AND ((((vt0.c0)-(x'')), ((t0.c0) NOTNULL), vt0.c0))) WHERE (((((((((((((t0.c0)OR(t0.c0)))OR(vt0.c0)))OR(t0.c0)))OR(476643079)))>>(vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN t0 ON (((t0.c0, t0.c0, t0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CASE WHEN vt0.c0 THEN t0.c0 END)) AND ((((vt0.c0)-(x'')), ((t0.c0) NOTNULL), vt0.c0)));
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 WHERE (((UPPER(t0.c0))<=(((x'') ISNULL)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt0, t0 WHERE ((NOT (((UPPER(t0.c0))<=(((x'') ISNULL)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 WHERE (((((UPPER(t0.c0))<=(((x'') ISNULL)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(ABS(DISTINCT MIN(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(ABS(DISTINCT MIN(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(ABS(DISTINCT MIN(t0.c0)))) ISNULL);
SELECT ALL * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)) AS INTEGER)) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)) AS INTEGER)))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE (((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)) AS INTEGER)) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (((LIKELY(t0.c0))*(((((t0.c0)OR(t0.c0)))OR(vt0.c0))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (((LIKELY(t0.c0))*(((((t0.c0)OR(t0.c0)))OR(vt0.c0))))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((((LIKELY(t0.c0))*(((((t0.c0)OR(t0.c0)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((- (vt0.c0)), vt0.c0, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (vt0.c0 IN ()), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((- (vt0.c0)), vt0.c0, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (vt0.c0 IN ()), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((- (vt0.c0)), vt0.c0, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (vt0.c0 IN ()), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING AVG(SUM(t0.c0)) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(SUM(t0.c0)))) UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((AVG(SUM(t0.c0))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (1992906316) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (1992906316))) UNION ALL SELECT * FROM vt0 WHERE (((1992906316) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((NULL, vt0.c0, x'')) AND ((vt0.c0, vt0.c0, NULL))))IS NOT(CAST(vt0.c0 AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((NULL, vt0.c0, x'')) AND ((vt0.c0, vt0.c0, NULL))))IS NOT(CAST(vt0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((NULL, vt0.c0, x'')) AND ((vt0.c0, vt0.c0, NULL))))IS NOT(CAST(vt0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (LOWER(CASE WHEN vt0.c0 THEN vt0.c0 END)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (LOWER(CASE WHEN vt0.c0 THEN vt0.c0 END)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((LOWER(CASE WHEN vt0.c0 THEN vt0.c0 END)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG((- (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG((- (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG((- (vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG((- (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG((- (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG((- (vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0;
SELECT ALL vt0.c0 FROM vt0, t0 WHERE ((((('-479603761')OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)LIKE(t0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0, t0 WHERE ((NOT ((((('-479603761')OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)LIKE(t0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 WHERE ((((((('-479603761')OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)LIKE(t0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((1.61188516E8)>=((((vt0.c0))<((vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((1.61188516E8)>=((((vt0.c0))<((vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((1.61188516E8)>=((((vt0.c0))<((vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((((((((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))OR(t0.c0)))AND(vt0.c0))))<=((((((vt0.c0)OR(t0.c0)))OR(vt0.c0)))))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT ((((((((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))OR(t0.c0)))AND(vt0.c0))))<=((((((vt0.c0)OR(t0.c0)))OR(vt0.c0)))))))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((((((((((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))OR(t0.c0)))AND(vt0.c0))))<=((((((vt0.c0)OR(t0.c0)))OR(vt0.c0)))))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0 COLLATE BINARY) BETWEEN (((((AVG(TOTAL(GROUP_CONCAT(COUNT(t0.c0)))))OR(TOTAL(t0.c0))))OR(t0.c0))) AND (MIN(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((t0.c0 COLLATE BINARY) BETWEEN (((((AVG(TOTAL(GROUP_CONCAT(COUNT(t0.c0)))))OR(TOTAL(t0.c0))))OR(t0.c0))) AND (MIN(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((t0.c0 COLLATE BINARY) BETWEEN (((((AVG(TOTAL(GROUP_CONCAT(COUNT(t0.c0)))))OR(TOTAL(t0.c0))))OR(t0.c0))) AND (MIN(t0.c0)))) ISNULL);
SELECT ALL TOTAL(CASE (((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN '1316459830' THEN ((vt0.c0) ISNULL) WHEN '-1215447427' THEN (- (vt0.c0)) WHEN ((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) THEN ((((((((t0.c0)AND(0.8169261072701032)))AND(vt0.c0)))OR(t0.c0)))AND('307623774')) ELSE LIKELY(t0.c0) END) FROM t0, vt0 ORDER BY ((- (x'')) IN ())  NULLS LAST;
SELECT vt0.c0 FROM t0 NOT INDEXED, vt0;
SELECT vt0.c0 FROM t0, vt0 WHERE ((((vt0.c0, vt0.c0, t0.c0)) BETWEEN ((x'', ((t0.c0)&(0.4371356034483802)), vt0.c0)) AND ((((0Xffffffff938d9d56) BETWEEN (t0.c0) AND (t0.c0)), (+ (t0.c0)), t0.c0 COLLATE BINARY)))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, t0.c0)) BETWEEN ((x'', ((t0.c0)&(0.4371356034483802)), vt0.c0)) AND ((((0xffffffff938d9d56) BETWEEN (t0.c0) AND (t0.c0)), (+ (t0.c0)), t0.c0 COLLATE BINARY)))))) UNION ALL SELECT vt0.c0 FROM t0, vt0 WHERE ((((((vt0.c0, vt0.c0, t0.c0)) BETWEEN ((x'', ((t0.c0)&(0.4371356034483802)), vt0.c0)) AND ((((0Xffffffff938d9d56) BETWEEN (t0.c0) AND (t0.c0)), (+ (t0.c0)), t0.c0 COLLATE BINARY)))) ISNULL));
SELECT vt0.c0 FROM t0 NOT INDEXED, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0)AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c0)AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0))) COLLATE NOCASE) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0))) COLLATE NOCASE))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0))) COLLATE NOCASE) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING ((((MIN(COUNT(*)))AND(TOTAL(MIN(MIN(t0.c0))))))AND(COUNT(MIN(MIN(AVG(COUNT(t0.c0))))))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (((((MIN(COUNT(*)))AND(TOTAL(MIN(MIN(t0.c0))))))AND(COUNT(MIN(MIN(AVG(COUNT(t0.c0))))))))) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING ((((((MIN(COUNT(*)))AND(TOTAL(MIN(MIN(t0.c0))))))AND(COUNT(MIN(MIN(AVG(COUNT(t0.c0)))))))) ISNULL);
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE ((~ (CASE vt0.c0  WHEN x'10a6' THEN '~r I_xLj౰' END))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT ((~ (CASE vt0.c0  WHEN x'10a6' THEN '~r I_xLj౰' END))))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((((~ (CASE vt0.c0  WHEN x'10a6' THEN '~r I_xLj౰' END))) ISNULL));
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (LIKELIHOOD(vt0.c0, 0.7276505898950557)) AND (((((vt0.c0)AND(vt0.c0)))AND(x''))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (LIKELIHOOD(vt0.c0, 0.7276505898950557)) AND (((((vt0.c0)AND(vt0.c0)))AND(x''))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (LIKELIHOOD(vt0.c0, 0.7276505898950557)) AND (((((vt0.c0)AND(vt0.c0)))AND(x''))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 WHERE ((NULL IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t0 WHERE ((NOT ((NULL IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t0 WHERE ((((NULL IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING AVG(GROUP_CONCAT(AVG(t0.c0))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (AVG(GROUP_CONCAT(AVG(t0.c0))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((AVG(GROUP_CONCAT(AVG(t0.c0)))) ISNULL);
SELECT ALL MAX(NULL) FROM vt0, t0;
SELECT * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE (((((t0.c0)>=(vt0.c0))) ISNULL)) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT (((((t0.c0)>=(vt0.c0))) ISNULL)))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE (((((((t0.c0)>=(vt0.c0))) ISNULL)) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT t0.c0, vt0.c0 FROM t0, vt0;
SELECT DISTINCT t0.c0, vt0.c0 FROM t0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((NULL IN (t0.c0))))) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM t0, vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((NULL IN (t0.c0))))))) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM t0, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((NULL IN (t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0 FROM t0, vt0;
SELECT vt0.c0 FROM vt0 NOT INDEXED RIGHT OUTER JOIN t0 ON (+ ((t0.c0 IN (t0.c0, t0.c0)))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (+ ((t0.c0 IN (t0.c0, t0.c0)))) WHERE ((((((vt0.c0))!=((vt0.c0))))LIKE(vt0.c0 COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (+ ((t0.c0 IN (t0.c0, t0.c0)))) WHERE ((NOT ((((((vt0.c0))!=((vt0.c0))))LIKE(vt0.c0 COLLATE NOCASE))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (+ ((t0.c0 IN (t0.c0, t0.c0)))) WHERE ((((((((vt0.c0))<>((vt0.c0))))LIKE(vt0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NOT INDEXED RIGHT OUTER JOIN t0 ON (+ ((t0.c0 IN (t0.c0, t0.c0)))) GROUP BY vt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(COUNT(t0.c0)))IS(COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((SUM(COUNT(t0.c0)))IS(COUNT(*))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((SUM(COUNT(t0.c0)))IS(COUNT(*)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, t0;
SELECT ALL vt0.c0 FROM vt0, t0 WHERE (((((t0.c0)<=(t0.c0)))GLOB(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0, t0 WHERE ((NOT (((((t0.c0)<=(t0.c0)))GLOB(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 WHERE (((((((t0.c0)<=(t0.c0)))GLOB(vt0.c0))) ISNULL));
SELECT ALL vt0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c0 FROM t0, vt0 NOT INDEXED WHERE (((((((t0.c0)AND(t0.c0)))AND(vt0.c0))) BETWEEN (((t0.c0)OR(vt0.c0))) AND (NULL))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ((NOT (((((((t0.c0)AND(t0.c0)))AND(vt0.c0))) BETWEEN (((t0.c0)OR(vt0.c0))) AND (NULL))))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE (((((((((t0.c0)AND(t0.c0)))AND(vt0.c0))) BETWEEN (((t0.c0)OR(vt0.c0))) AND (NULL))) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 WHERE (((x'') NOTNULL)) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 WHERE ((NOT (((x'') NOTNULL)))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM t0, vt0 WHERE (((((x'') NOTNULL)) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(MIN(TOTAL(MAX(GROUP_CONCAT(GROUP_CONCAT(AVG(COUNT(vt0.c0))))))) AS INTEGER) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(MIN(TOTAL(MAX(GROUP_CONCAT(GROUP_CONCAT(AVG(COUNT(vt0.c0))))))) AS INTEGER))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(MIN(TOTAL(MAX(GROUP_CONCAT(GROUP_CONCAT(AVG(COUNT(vt0.c0))))))) AS INTEGER)) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (- (HEX(DISTINCT vt0.c0)));
SELECT ALL t0.c0, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (- (HEX(DISTINCT vt0.c0))) WHERE (((((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE 0.21049180649737032 END)AND(((x'') BETWEEN (vt0.c0) AND (vt0.c0)))))OR((+ (t0.c0))))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (- (HEX(DISTINCT vt0.c0))) WHERE ((NOT (((((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE 0.21049180649737032 END)AND(((x'') BETWEEN (vt0.c0) AND (vt0.c0)))))OR((+ (t0.c0))))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (- (HEX(DISTINCT vt0.c0))) WHERE (((((((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE 0.21049180649737032 END)AND(((x'') BETWEEN (vt0.c0) AND (vt0.c0)))))OR((+ (t0.c0))))) ISNULL));
SELECT ALL t0.c0, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (- (HEX(DISTINCT vt0.c0)));
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((((((((((+ (t0.c0)))AND(((((t0.c0)AND(t0.c0)))OR('-1548967692')))))OR(((t0.c0)<>(t0.c0)))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(0Xfffffffff05511e9)))AND(t0.c0)))))AND(((((((((t0.c0)AND(t0.c0)))OR(0.8281515933197194)))OR(t0.c0)))AND(t0.c0)))))AND((((((((('Z\')AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))))OR((t0.c0 IN ())))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((((((((((((+ (t0.c0)))AND(((((t0.c0)AND(t0.c0)))OR('-1548967692')))))OR(((t0.c0)!=(t0.c0)))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(0xfffffffff05511e9)))AND(t0.c0)))))AND(((((((((t0.c0)AND(t0.c0)))OR(0.8281515933197194)))OR(t0.c0)))AND(t0.c0)))))AND((((((((('Z\')AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))))OR((t0.c0 IN ())))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((((((((((((+ (t0.c0)))AND(((((t0.c0)AND(t0.c0)))OR('-1548967692')))))OR(((t0.c0)!=(t0.c0)))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(0xfffffffff05511e9)))AND(t0.c0)))))AND(((((((((t0.c0)AND(t0.c0)))OR(0.8281515933197194)))OR(t0.c0)))AND(t0.c0)))))AND((((((((('Z\')AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))))OR((t0.c0 IN ())))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((GROUP_CONCAT(GROUP_CONCAT(t0.c0)))AND(AVG(MIN(t0.c0)))))AND(CASE WHEN TOTAL(t0.c0) THEN t0.c0 WHEN t0.c0 THEN MAX(t0.c0) WHEN t0.c0 THEN GROUP_CONCAT(GROUP_CONCAT(t0.c0)) END)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((GROUP_CONCAT(GROUP_CONCAT(t0.c0)))AND(AVG(MIN(t0.c0)))))AND(CASE WHEN TOTAL(t0.c0) THEN t0.c0 WHEN t0.c0 THEN MAX(t0.c0) WHEN t0.c0 THEN GROUP_CONCAT(GROUP_CONCAT(t0.c0)) END)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((GROUP_CONCAT(GROUP_CONCAT(t0.c0)))AND(AVG(MIN(t0.c0)))))AND(CASE WHEN TOTAL(t0.c0) THEN t0.c0 WHEN t0.c0 THEN MAX(t0.c0) WHEN t0.c0 THEN GROUP_CONCAT(GROUP_CONCAT(t0.c0)) END))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END)||(((vt0.c0) IS FALSE)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 END)||(((vt0.c0) IS FALSE)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 END)||(((vt0.c0) IS FALSE)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE (NULL) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (IFNULL((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))), 0X1986db19)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (IFNULL((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))), 0x1986db19)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((IFNULL((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))), 0x1986db19)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (((((TOTAL(TOTAL(TOTAL(vt0.c0))))<(AVG(t0.c0)))))>((COUNT(*)))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT ((((((TOTAL(TOTAL(TOTAL(vt0.c0))))<(AVG(t0.c0)))))>((COUNT(*)))))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (((((((TOTAL(TOTAL(TOTAL(vt0.c0))))<(AVG(t0.c0)))))>((COUNT(*))))) ISNULL);
SELECT vt0.c0 FROM vt0, t0;
SELECT vt0.c0 FROM vt0, t0 WHERE ((((vt0.c0 IN ()))GLOB(CASE WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END))) UNION ALL SELECT vt0.c0 FROM vt0, t0 WHERE ((NOT ((((vt0.c0 IN ()))GLOB(CASE WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) UNION ALL SELECT vt0.c0 FROM vt0, t0 WHERE ((((((vt0.c0 IN ()))GLOB(CASE WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT vt0.c0 FROM vt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (NULL) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM t0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((0.9779173809976028 IN ()))||(vt0.c0 COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((0.9779173809976028 IN ()))||(vt0.c0 COLLATE BINARY))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((0.9779173809976028 IN ()))||(vt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(COUNT(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING (NOT (COUNT(COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(COUNT(vt0.c0))) ISNULL);
SELECT t0.c0, vt0.c0 FROM t0, vt0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 WHERE ('1953214224') UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 WHERE ((NOT ('1953214224'))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 WHERE ((('1953214224') ISNULL));
SELECT t0.c0, vt0.c0 FROM t0, vt0;
SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0 WHERE (((((t0.c0)>>(t0.c0))) ISNULL)) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (((((t0.c0)>>(t0.c0))) ISNULL)))) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0 WHERE (((((((t0.c0)>>(t0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE (t0.c0) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT vt0.c0 FROM t0 CROSS JOIN vt0 ON (((t0.c0)>>(vt0.c0)) IN ()) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0 CROSS JOIN vt0 ON (((t0.c0)>>(vt0.c0)) IN ()) GROUP BY vt0.c0 HAVING TOTAL((t0.c0 IN (SUM(GROUP_CONCAT(SUM(MAX(AVG(vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM t0 CROSS JOIN vt0 ON (((t0.c0)>>(vt0.c0)) IN ()) GROUP BY vt0.c0 HAVING (NOT (TOTAL((t0.c0 IN (SUM(GROUP_CONCAT(SUM(MAX(AVG(vt0.c0)))))))))) UNION ALL SELECT ALL vt0.c0 FROM t0 CROSS JOIN vt0 ON (((t0.c0)>>(vt0.c0)) IN ()) GROUP BY vt0.c0 HAVING ((TOTAL((t0.c0 IN (SUM(GROUP_CONCAT(SUM(MAX(AVG(vt0.c0))))))))) ISNULL);
SELECT * FROM vt0 NOT INDEXED, t0;
SELECT * FROM vt0, t0 WHERE ((NOT ((((0.3847670859790394)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT ((NOT ((((0.3847670859790394)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))))) UNION ALL SELECT ALL * FROM vt0 NOT INDEXED, t0 WHERE ((((NOT ((((0.3847670859790394)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ISNULL));
SELECT * FROM vt0 NOT INDEXED, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)-(t0.c0)))+(t0.c0))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0)-(t0.c0)))+(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)-(t0.c0)))+(t0.c0))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 WHERE ((((((t0.c0) BETWEEN (vt0.c0) AND (t0.c0))))<=((((t0.c0)OR(t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt0, t0 WHERE ((NOT ((((((t0.c0) BETWEEN (vt0.c0) AND (t0.c0))))<=((((t0.c0)OR(t0.c0)))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 WHERE ((((((((t0.c0) BETWEEN (vt0.c0) AND (t0.c0))))<=((((t0.c0)OR(t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING COUNT(COUNT(vt0.c0)) COLLATE BINARY UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (COUNT(COUNT(vt0.c0)) COLLATE BINARY)) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING ((COUNT(COUNT(vt0.c0)) COLLATE BINARY) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (vt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (vt0.c0 COLLATE NOCASE))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE (CASE WHEN ((vt0.c0)!=(vt0.c0)) THEN (vt0.c0 IN (t0.c0)) WHEN CAST(0xffffffff94fc6002 AS REAL) THEN (t0.c0 IN ()) WHEN (((t0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) THEN t0.c0 END) UNION SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE ((NOT (CASE WHEN ((vt0.c0)!=(vt0.c0)) THEN (vt0.c0 IN (t0.c0)) WHEN CAST(0xffffffff94fc6002 AS REAL) THEN (t0.c0 IN ()) WHEN (((t0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) THEN t0.c0 END))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE (((CASE WHEN ((vt0.c0)!=(vt0.c0)) THEN (vt0.c0 IN (t0.c0)) WHEN CAST(0xffffffff94fc6002 AS REAL) THEN (t0.c0 IN ()) WHEN (((t0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) THEN t0.c0 END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, t0;
SELECT ALL vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE (~ (t0.c0)) END GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE (~ (t0.c0)) END WHERE (((((vt0.c0)*(vt0.c0))) BETWEEN (STRFTIME('', 'f4', t0.c0, vt0.c0, NULL, vt0.c0, x'8101')) AND (((vt0.c0) BETWEEN (t0.c0) AND (t0.c0))))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE (~ (t0.c0)) END WHERE ((NOT (((((vt0.c0)*(vt0.c0))) BETWEEN (STRFTIME('', 'f4', t0.c0, vt0.c0, NULL, vt0.c0, x'8101')) AND (((vt0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE (~ (t0.c0)) END WHERE (((((((vt0.c0)*(vt0.c0))) BETWEEN (STRFTIME('', 'f4', t0.c0, vt0.c0, NULL, vt0.c0, x'8101')) AND (((vt0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE (~ (t0.c0)) END GROUP BY vt0.c0, t0.c0;
SELECT t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON (((vt0.c0 COLLATE RTRIM))>((json(t0.c0)))) GROUP BY t0.c0, vt0.c0;
SELECT ALL * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE (((t0.c0 COLLATE NOCASE) IS TRUE)) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT (((t0.c0 COLLATE NOCASE) IS TRUE)))) UNION ALL SELECT * FROM vt0, t0 WHERE (((((t0.c0 COLLATE NOCASE) IS TRUE)) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0)) BETWEEN (((t0.c0 IN (t0.c0)))) AND (((t0.c0 IN ()))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) BETWEEN (((t0.c0 IN (t0.c0)))) AND (((t0.c0 IN ()))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((t0.c0)) BETWEEN (((t0.c0 IN (t0.c0)))) AND (((t0.c0 IN ()))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CASE ((((t0.c0)AND(COUNT(*))))AND(COUNT(*)))  WHEN MIN(t0.c0) THEN TOTAL(COUNT(*)) END UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CASE ((((t0.c0)AND(COUNT(*))))AND(COUNT(*)))  WHEN MIN(t0.c0) THEN TOTAL(COUNT(*)) END)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CASE ((((t0.c0)AND(COUNT(*))))AND(COUNT(*)))  WHEN MIN(t0.c0) THEN TOTAL(COUNT(*)) END) ISNULL);
SELECT vt0.c0, t0.c0 FROM t0, vt0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE (vt0.c0) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0, t0.c0 FROM t0, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) ISNULL))IS(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0) ISNULL))IS(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0) ISNULL))IS(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((('M끍J')AND(vt0.c0 COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((('M끍J')AND(vt0.c0 COLLATE RTRIM))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((('M끍J')AND(vt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING GROUP_CONCAT(COUNT(COUNT(*))) UNION ALL SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(COUNT(*))))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(COUNT(COUNT(*)))) ISNULL);
SELECT MAX((NOT (CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END))) FROM vt0, t0;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))GLOB((((t0.c0, t0.c0, 'V~#_Q>'))<((t0.c0, t0.c0, t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))GLOB((((t0.c0, t0.c0, 'V~#_Q>'))<((t0.c0, t0.c0, t0.c0)))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))GLOB((((t0.c0, t0.c0, 'V~#_Q>'))<((t0.c0, t0.c0, t0.c0)))))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING MAX(t0.c0 COLLATE RTRIM) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (MAX(t0.c0 COLLATE RTRIM))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((MAX(t0.c0 COLLATE RTRIM)) ISNULL);
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING MAX(t0.c0 COLLATE RTRIM) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (MAX(t0.c0 COLLATE RTRIM))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((MAX(t0.c0 COLLATE RTRIM)) ISNULL);
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0 FROM t0, vt0;
SELECT ALL t0.c0 FROM t0, vt0 WHERE ((('cL틏r9 \n')GLOB(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 WHERE ((NOT ((('cL틏r9 \n')GLOB(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 WHERE ((((('cL틏r9 \n')GLOB(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))))) ISNULL));
SELECT ALL t0.c0 FROM t0, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE ((t0.c0) IS TRUE)  WHEN (((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))) THEN json_valid(t0.c0) END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE ((t0.c0) IS TRUE)  WHEN (((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))) THEN json_valid(t0.c0) END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE ((t0.c0) IS TRUE)  WHEN (((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))) THEN json_valid(t0.c0) END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0 FROM t0 CROSS JOIN vt0 ON t0.c0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0 CROSS JOIN vt0 ON t0.c0 WHERE (TOTAL_CHANGES()) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0 CROSS JOIN vt0 ON t0.c0 WHERE ((NOT (TOTAL_CHANGES()))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t0 CROSS JOIN vt0 ON t0.c0 WHERE (((TOTAL_CHANGES()) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0 CROSS JOIN vt0 ON t0.c0 GROUP BY vt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((GROUP_CONCAT(t0.c0))LIKE(t0.c0)) IN ()) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((GROUP_CONCAT(t0.c0))LIKE(t0.c0)) IN ()))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((GROUP_CONCAT(t0.c0))LIKE(t0.c0)) IN ())) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((GROUP_CONCAT(t0.c0))LIKE(t0.c0)) IN ()) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((GROUP_CONCAT(t0.c0))LIKE(t0.c0)) IN ()))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((GROUP_CONCAT(t0.c0))LIKE(t0.c0)) IN ())) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))) IS TRUE)) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 WHERE ((NOT ((((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))) IS TRUE)))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0 NOT INDEXED, vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))) IS TRUE)) ISNULL));
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((t0.c0 IN ()) COLLATE NOCASE) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((t0.c0 IN ()) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0 WHERE ((((t0.c0 IN ()) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0 FROM vt0 INDEXED BY i43 GROUP BY vt0.c0;
SELECT t0.c0 FROM vt0 INNER JOIN t0 ON ((HEX(DISTINCT t0.c0))+(CASE t0.c0  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN 'A4>P>>' THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0 INNER JOIN t0 ON ((HEX(DISTINCT t0.c0))+(CASE t0.c0  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN 'A4>P>>' THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END)) GROUP BY t0.c0 HAVING (((MIN(t0.c0)))<((TOTAL(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM vt0 INNER JOIN t0 ON ((HEX(DISTINCT t0.c0))+(CASE t0.c0  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN 'A4>P>>' THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END)) GROUP BY t0.c0 HAVING (NOT ((((MIN(t0.c0)))<((TOTAL(t0.c0)))))) UNION ALL SELECT t0.c0 FROM vt0 INNER JOIN t0 ON ((HEX(DISTINCT t0.c0))+(CASE t0.c0  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN 'A4>P>>' THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END)) GROUP BY t0.c0 HAVING (((((MIN(t0.c0)))<((TOTAL(t0.c0))))) ISNULL);
SELECT t0.c0 FROM vt0 INNER JOIN t0 ON ((HEX(DISTINCT t0.c0))+(CASE t0.c0  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN 'A4>P>>' THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0 INNER JOIN t0 ON ((HEX(DISTINCT t0.c0))+(CASE t0.c0  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN 'A4>P>>' THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END)) GROUP BY t0.c0 HAVING (((MIN(t0.c0)))<((TOTAL(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM vt0 INNER JOIN t0 ON ((HEX(DISTINCT t0.c0))+(CASE t0.c0  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN 'A4>P>>' THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END)) GROUP BY t0.c0 HAVING (NOT ((((MIN(t0.c0)))<((TOTAL(t0.c0)))))) UNION ALL SELECT t0.c0 FROM vt0 INNER JOIN t0 ON ((HEX(DISTINCT t0.c0))+(CASE t0.c0  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN 'A4>P>>' THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END)) GROUP BY t0.c0 HAVING (((((MIN(t0.c0)))<((TOTAL(t0.c0))))) ISNULL);
SELECT t0.c0 FROM vt0 INNER JOIN t0 ON ((HEX(DISTINCT t0.c0))+(CASE t0.c0  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN 'A4>P>>' THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END)) GROUP BY t0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 WHERE (((t0.c0 COLLATE NOCASE)-((+ (t0.c0))))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 WHERE ((NOT (((t0.c0 COLLATE NOCASE)-((+ (t0.c0))))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 WHERE (((((t0.c0 COLLATE NOCASE)-((+ (t0.c0))))) ISNULL));
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((NOT (vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(NULL))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((((NOT (vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(NULL))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((NOT (vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(NULL))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (COALESCE((+ (t0.c0)), json_array_length(x'bc1e4ed6'))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (COALESCE((+ (t0.c0)), json_array_length(x'bc1e4ed6'))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((COALESCE((+ (t0.c0)), json_array_length(x'bc1e4ed6'))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 WHERE (((((((t0.c0)IS NOT(t0.c0)))OR(((x'9fb4') IS TRUE))))OR((- (t0.c0))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 WHERE ((NOT (((((((t0.c0)IS NOT(t0.c0)))OR(((x'9fb4') IS TRUE))))OR((- (t0.c0))))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 WHERE (((((((((t0.c0)IS NOT(t0.c0)))OR(((x'9fb4') IS TRUE))))OR((- (t0.c0))))) ISNULL));
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0;
SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0 WHERE (TRIM(DISTINCT ((vt0.c0)-(vt0.c0)), vt0.c0 COLLATE NOCASE)) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (TRIM(DISTINCT ((vt0.c0)-(vt0.c0)), vt0.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0 WHERE (((TRIM(DISTINCT ((vt0.c0)-(vt0.c0)), vt0.c0 COLLATE NOCASE)) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))OR(t0.c0)))&(t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((((t0.c0)AND(t0.c0)))OR(t0.c0)))&(t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))&(t0.c0))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING ((MAX(9.94626401E8)) IS TRUE) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (((MAX(9.94626401E8)) IS TRUE))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING ((((MAX(9.94626401E8)) IS TRUE)) ISNULL);
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING ((MAX(9.94626401E8)) IS TRUE) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (((MAX(9.94626401E8)) IS TRUE))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING ((((MAX(9.94626401E8)) IS TRUE)) ISNULL);
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (0.5303835706322507) UNION ALL SELECT * FROM t0 WHERE ((NOT (0.5303835706322507))) UNION ALL SELECT * FROM t0 WHERE (((0.5303835706322507) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0 NOT INDEXED WHERE (((t0.c0) BETWEEN (((((0.9028316711733239)OR(vt0.c0)))AND(t0.c0))) AND (((t0.c0)AND(t0.c0))))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT (((t0.c0) BETWEEN (((((0.9028316711733239)OR(vt0.c0)))AND(t0.c0))) AND (((t0.c0)AND(t0.c0))))))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0 WHERE (((((t0.c0) BETWEEN (((((0.9028316711733239)OR(vt0.c0)))AND(t0.c0))) AND (((t0.c0)AND(t0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 WHERE (((((vt0.c0) NOT BETWEEN ('K') AND (vt0.c0)))IS NOT(0.3455808357758262))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN ('K') AND (vt0.c0)))IS NOT(0.3455808357758262))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt0, t0 WHERE (((((((vt0.c0) NOT BETWEEN ('K') AND (vt0.c0)))IS NOT(0.3455808357758262))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING x'' UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING ((x'') ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING x'' UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING ((x'') ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (UNLIKELY(((t0.c0)!=(t0.c0)))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (UNLIKELY(((t0.c0)<>(t0.c0)))))) UNION ALL SELECT * FROM t0 NOT INDEXED WHERE (((UNLIKELY(((t0.c0)<>(t0.c0)))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT vt0.c0 FROM t0 INNER JOIN vt0 ON load_extension((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END);
SELECT ALL t0.c0 FROM t0 CROSS JOIN vt0 ON (- (((vt0.c0) IS TRUE))) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 CROSS JOIN vt0 ON (- (((vt0.c0) IS TRUE))) WHERE ((((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) IN ())) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 CROSS JOIN vt0 ON (- (((vt0.c0) IS TRUE))) WHERE ((NOT ((((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) IN ())))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 CROSS JOIN vt0 ON (- (((vt0.c0) IS TRUE))) WHERE ((((((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 CROSS JOIN vt0 ON (- (((vt0.c0) IS TRUE))) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT((AVG(TOTAL(COUNT(*))) IN ())) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT((AVG(TOTAL(COUNT(*))) IN ())))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT((AVG(TOTAL(COUNT(*))) IN ()))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT((AVG(TOTAL(COUNT(*))) IN ())) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT((AVG(TOTAL(COUNT(*))) IN ())))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT((AVG(TOTAL(COUNT(*))) IN ()))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((NOT (vt0.c0 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0 COLLATE BINARY))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, '1980845141', -1018785386, vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(0.5445734198820695)), vt0.c0, (vt0.c0 IN ()), ((((((((vt0.c0)AND(1.496095044E9)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), vt0.c0)) AND ((((vt0.c0) ISNULL), ((vt0.c0)GLOB(vt0.c0)), NULLIF(vt0.c0, vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), x'')))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, '1980845141', -1018785386, vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(0.5445734198820695)), vt0.c0, (vt0.c0 IN ()), ((((((((vt0.c0)AND(1.496095044E9)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), vt0.c0)) AND ((((vt0.c0) ISNULL), ((vt0.c0)GLOB(vt0.c0)), NULLIF(vt0.c0, vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), x'')))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, '1980845141', -1018785386, vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(0.5445734198820695)), vt0.c0, (vt0.c0 IN ()), ((((((((vt0.c0)AND(1.496095044E9)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), vt0.c0)) AND ((((vt0.c0) ISNULL), ((vt0.c0)GLOB(vt0.c0)), NULLIF(vt0.c0, vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), x'')))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 WHERE (vt0.c0) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM t0, vt0 WHERE ((NOT (vt0.c0))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(MIN(t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(MIN(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(MIN(t0.c0))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0) NOT BETWEEN (x'') AND (t0.c0)) IN ())) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0) NOT BETWEEN (x'') AND (t0.c0)) IN ())))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0) NOT BETWEEN (x'') AND (t0.c0)) IN ())) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (0Xffffffffc8e7b9fe) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (0Xffffffffc8e7b9fe))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((0xffffffffc8e7b9fe) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((CASE vt0.c0  WHEN SUM(vt0.c0) THEN vt0.c0 WHEN vt0.c0 THEN MAX(AVG(NULL)) WHEN TOTAL(COUNT(*)) THEN GROUP_CONCAT(MIN(vt0.c0)) ELSE AVG(GROUP_CONCAT(MIN(GROUP_CONCAT(SUM(TOTAL(GROUP_CONCAT(vt0.c0))))))) END))<=((GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((CASE vt0.c0  WHEN SUM(vt0.c0) THEN vt0.c0 WHEN vt0.c0 THEN MAX(AVG(NULL)) WHEN TOTAL(COUNT(*)) THEN GROUP_CONCAT(MIN(vt0.c0)) ELSE AVG(GROUP_CONCAT(MIN(GROUP_CONCAT(SUM(TOTAL(GROUP_CONCAT(vt0.c0))))))) END))<=((GROUP_CONCAT(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((CASE vt0.c0  WHEN SUM(vt0.c0) THEN vt0.c0 WHEN vt0.c0 THEN MAX(AVG(NULL)) WHEN TOTAL(COUNT(*)) THEN GROUP_CONCAT(MIN(vt0.c0)) ELSE AVG(GROUP_CONCAT(MIN(GROUP_CONCAT(SUM(TOTAL(GROUP_CONCAT(vt0.c0))))))) END))<=((GROUP_CONCAT(vt0.c0))))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (((t0.c0 COLLATE NOCASE) IS FALSE)) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (((t0.c0 COLLATE NOCASE) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((((t0.c0 COLLATE NOCASE) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT ALL t0.c0, vt0.c0 FROM vt0 CROSS JOIN t0 ON CAST(((t0.c0)>>(t0.c0)) AS BLOB) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0 CROSS JOIN t0 ON CAST(((t0.c0)>>(t0.c0)) AS BLOB) WHERE (((((t0.c0) ISNULL))OR((((x'')) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM vt0 CROSS JOIN t0 ON CAST(((t0.c0)>>(t0.c0)) AS BLOB) WHERE ((NOT (((((t0.c0) ISNULL))OR((((x'')) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))))))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM vt0 CROSS JOIN t0 ON CAST(((t0.c0)>>(t0.c0)) AS BLOB) WHERE (((((((t0.c0) ISNULL))OR((((x'')) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))))) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0 CROSS JOIN t0 ON CAST(((t0.c0)>>(t0.c0)) AS BLOB) GROUP BY t0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(MIN(TOTAL(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(MIN(TOTAL(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(MIN(TOTAL(vt0.c0)))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (UPPER((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (UPPER((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))) UNION ALL SELECT * FROM t0 WHERE (((UPPER((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CAST((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))) AS REAL)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CAST((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))) AS REAL)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CAST((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))) AS REAL)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(t0.c0)))OR(t0.c0)) COLLATE NOCASE COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt0 WHERE ((NOT (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(t0.c0)))OR(t0.c0)) COLLATE NOCASE COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t0, vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(t0.c0)))OR(t0.c0)) COLLATE NOCASE COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING CAST(((MAX(t0.c0))LIKE(t0.c0)) AS REAL) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (CAST(((MAX(t0.c0))LIKE(t0.c0)) AS REAL))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING ((CAST(((MAX(t0.c0))LIKE(t0.c0)) AS REAL)) ISNULL);
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING CAST(((MAX(t0.c0))LIKE(t0.c0)) AS REAL) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (CAST(((MAX(t0.c0))LIKE(t0.c0)) AS REAL))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING ((CAST(((MAX(t0.c0))LIKE(t0.c0)) AS REAL)) ISNULL);
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL t0.c0 FROM t0 CROSS JOIN vt0 ON 0.2870881602779187;
SELECT ALL t0.c0 FROM t0 CROSS JOIN vt0 ON 0.2870881602779187 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN ((vt0.c0 IN (t0.c0))) AND (((vt0.c0)>=(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 CROSS JOIN vt0 ON 0.2870881602779187 WHERE ((NOT (((((vt0.c0) NOTNULL)) NOT BETWEEN ((vt0.c0 IN (t0.c0))) AND (((vt0.c0)>=(t0.c0))))))) UNION ALL SELECT t0.c0 FROM t0 CROSS JOIN vt0 ON 0.2870881602779187 WHERE (((((((vt0.c0) NOTNULL)) NOT BETWEEN ((vt0.c0 IN (t0.c0))) AND (((vt0.c0)>=(t0.c0))))) ISNULL));
SELECT ALL t0.c0 FROM t0 CROSS JOIN vt0 ON 0.2870881602779187;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0) IS FALSE)) BETWEEN (LOWER(t0.c0)) AND ((~ (t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) IS FALSE)) BETWEEN (LOWER(t0.c0)) AND ((~ (t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 NOT INDEXED WHERE (((((((t0.c0) IS FALSE)) BETWEEN (LOWER(t0.c0)) AND ((~ (t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE (CASE UNLIKELY(DISTINCT t0.c0)  WHEN ((vt0.c0)&(vt0.c0)) THEN ((0.7459844838892289) BETWEEN (t0.c0) AND (vt0.c0)) WHEN ((((((((vt0.c0)AND(t0.c0)))OR(vt0.c0)))OR(t0.c0)))OR(vt0.c0)) THEN ((t0.c0) NOT NULL) WHEN (((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0) ISNULL) WHEN CAST(NULL AS NUMERIC) THEN ((t0.c0)IS NOT(t0.c0)) WHEN 0.19963334874249472 THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT (CASE UNLIKELY(DISTINCT t0.c0)  WHEN ((vt0.c0)&(vt0.c0)) THEN ((0.7459844838892289) BETWEEN (t0.c0) AND (vt0.c0)) WHEN ((((((((vt0.c0)AND(t0.c0)))OR(vt0.c0)))OR(t0.c0)))OR(vt0.c0)) THEN ((t0.c0) NOT NULL) WHEN (((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0) ISNULL) WHEN CAST(NULL AS NUMERIC) THEN ((t0.c0)IS NOT(t0.c0)) WHEN 0.19963334874249472 THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE (((CASE UNLIKELY(DISTINCT t0.c0)  WHEN ((vt0.c0)&(vt0.c0)) THEN ((0.7459844838892289) BETWEEN (t0.c0) AND (vt0.c0)) WHEN ((((((((vt0.c0)AND(t0.c0)))OR(vt0.c0)))OR(t0.c0)))OR(vt0.c0)) THEN ((t0.c0) NOT NULL) WHEN (((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0) ISNULL) WHEN CAST(NULL AS NUMERIC) THEN ((t0.c0)IS NOT(t0.c0)) WHEN 0.19963334874249472 THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING CAST(COUNT(t0.c0) AS REAL) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING (NOT (CAST(COUNT(t0.c0) AS REAL))) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING ((CAST(COUNT(t0.c0) AS REAL)) ISNULL);
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING CAST(COUNT(t0.c0) AS REAL) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING (NOT (CAST(COUNT(t0.c0) AS REAL))) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING ((CAST(COUNT(t0.c0) AS REAL)) ISNULL);
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (LIKELIHOOD(((vt0.c0) IS TRUE), 0.1401928743708173)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (LIKELIHOOD(((vt0.c0) IS TRUE), 0.1401928743708173)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((LIKELIHOOD(((vt0.c0) IS TRUE), 0.1401928743708173)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON ((CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 END)|(vt0.c0));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON ((CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 END)|(vt0.c0)) WHERE (vt0.c0 COLLATE RTRIM) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON ((CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 END)|(vt0.c0)) WHERE ((NOT (vt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON ((CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 END)|(vt0.c0)) WHERE (((vt0.c0 COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON ((CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 END)|(vt0.c0));
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS INTEGER)) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND (((t0.c0) NOTNULL)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((CAST(t0.c0 AS INTEGER)) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND (((t0.c0) NOTNULL)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((CAST(t0.c0 AS INTEGER)) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND (((t0.c0) NOTNULL)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING MAX(NULL) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (MAX(NULL))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING ((MAX(NULL)) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING MAX(NULL) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (MAX(NULL))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING ((MAX(NULL)) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS BLOB))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((CAST(t0.c0 AS BLOB))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) UNION ALL SELECT * FROM t0 WHERE (((((CAST(t0.c0 AS BLOB))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)|(vt0.c0)), 0.961769383587482, ((vt0.c0) NOT NULL)))<=((CAST(vt0.c0 AS TEXT), CAST(vt0.c0 AS TEXT), (~ (vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c0)|(vt0.c0)), 0.961769383587482, ((vt0.c0) NOT NULL)))<=((CAST(vt0.c0 AS TEXT), CAST(vt0.c0 AS TEXT), (~ (vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c0)|(vt0.c0)), 0.961769383587482, ((vt0.c0) NOT NULL)))<=((CAST(vt0.c0 AS TEXT), CAST(vt0.c0 AS TEXT), (~ (vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (((((COUNT(t0.c0)) IS TRUE)))==((CASE WHEN vt0.c0 THEN '214098189' ELSE t0.c0 END))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (NOT ((((((COUNT(t0.c0)) IS TRUE)))=((CASE WHEN vt0.c0 THEN '214098189' ELSE t0.c0 END))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (((((((COUNT(t0.c0)) IS TRUE)))==((CASE WHEN vt0.c0 THEN '214098189' ELSE t0.c0 END)))) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (((((COUNT(t0.c0)) IS TRUE)))==((CASE WHEN vt0.c0 THEN '214098189' ELSE t0.c0 END))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (NOT ((((((COUNT(t0.c0)) IS TRUE)))=((CASE WHEN vt0.c0 THEN '214098189' ELSE t0.c0 END))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (((((((COUNT(t0.c0)) IS TRUE)))==((CASE WHEN vt0.c0 THEN '214098189' ELSE t0.c0 END)))) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE ((((((t0.c0, t0.c0, t0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, 0x44676920, vt0.c0)) AND ((vt0.c0, vt0.c0, x'', vt0.c0, t0.c0)))) NOT BETWEEN (LIKE(vt0.c0, t0.c0)) AND (((vt0.c0)IS(vt0.c0))))) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT ((((((t0.c0, t0.c0, t0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, 0x44676920, vt0.c0)) AND ((vt0.c0, vt0.c0, x'', vt0.c0, t0.c0)))) NOT BETWEEN (LIKE(vt0.c0, t0.c0)) AND (((vt0.c0)IS(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE ((((((((t0.c0, t0.c0, t0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, 0x44676920, vt0.c0)) AND ((vt0.c0, vt0.c0, x'', vt0.c0, t0.c0)))) NOT BETWEEN (LIKE(vt0.c0, t0.c0)) AND (((vt0.c0)IS(vt0.c0))))) ISNULL));
SELECT vt0.c0, t0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0)>=(vt0.c0))) AND (((vt0.c0)%(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0)>=(vt0.c0))) AND (((vt0.c0)%(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0)>=(vt0.c0))) AND (((vt0.c0)%(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 WHERE ((((('-19413210') BETWEEN (t0.c0) AND (vt0.c0)))IS(t0.c0))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM t0 NOT INDEXED, vt0 WHERE ((NOT ((((('-19413210') BETWEEN (t0.c0) AND (vt0.c0)))IS(t0.c0))))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM t0, vt0 WHERE ((((((('-19413210') BETWEEN (t0.c0) AND (vt0.c0)))IS(t0.c0))) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (CAST(CAST(NULL AS BLOB) AS NUMERIC)) UNION ALL SELECT * FROM t0 WHERE ((NOT (CAST(CAST(NULL AS BLOB) AS NUMERIC)))) UNION ALL SELECT * FROM t0 WHERE (((CAST(CAST(NULL AS BLOB) AS NUMERIC)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((((((t0.c0)>=(t0.c0)))AND(CAST(t0.c0 AS INTEGER))))AND(((t0.c0)<=(t0.c0)))))AND(((t0.c0)/(t0.c0)))))AND(((t0.c0)||(t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((((((((t0.c0)>=(t0.c0)))AND(CAST(t0.c0 AS INTEGER))))AND(((t0.c0)<=(t0.c0)))))AND(((t0.c0)/(t0.c0)))))AND(((t0.c0)||(t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((((((((t0.c0)>=(t0.c0)))AND(CAST(t0.c0 AS INTEGER))))AND(((t0.c0)<=(t0.c0)))))AND(((t0.c0)/(t0.c0)))))AND(((t0.c0)||(t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON ((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END)>(CHAR(t0.c0))) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON ((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END)>(CHAR(t0.c0))) WHERE (((COALESCE(NULL, vt0.c0)) NOT BETWEEN ((~ (t0.c0))) AND (vt0.c0))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON ((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END)>(CHAR(t0.c0))) WHERE ((NOT (((COALESCE(NULL, vt0.c0)) NOT BETWEEN ((~ (t0.c0))) AND (vt0.c0))))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON ((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END)>(CHAR(t0.c0))) WHERE (((((COALESCE(NULL, vt0.c0)) NOT BETWEEN ((~ (t0.c0))) AND (vt0.c0))) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON ((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END)>(CHAR(t0.c0))) GROUP BY t0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (AVG(vt0.c0) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((AVG(vt0.c0) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((AVG(vt0.c0) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (AVG(vt0.c0) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((AVG(vt0.c0) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((AVG(vt0.c0) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE (((t0.c0) NOTNULL)) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT (((t0.c0) NOTNULL)))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((((t0.c0) NOTNULL)) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((t0.c0 COLLATE BINARY)) AND ((((0.07504544751722031) BETWEEN (t0.c0) AND (vt0.c0)))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((t0.c0 COLLATE BINARY)) AND ((((0.07504544751722031) BETWEEN (t0.c0) AND (vt0.c0)))))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((t0.c0 COLLATE BINARY)) AND ((((0.07504544751722031) BETWEEN (t0.c0) AND (vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 WHERE (((highlight(vt0.c0, t0.c0, t0.c0, vt0.c0))==(NULL))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 WHERE ((NOT (((highlight(vt0.c0, t0.c0, t0.c0, vt0.c0))=(NULL))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt0, t0 WHERE (((((highlight(vt0.c0, t0.c0, t0.c0, vt0.c0))=(NULL))) ISNULL)) GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 COLLATE NOCASE UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0 COLLATE NOCASE)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0 COLLATE NOCASE) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 COLLATE NOCASE UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0 COLLATE NOCASE)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0 COLLATE NOCASE) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0, t0.c0, 1574432854))!=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) COLLATE NOCASE) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0, t0.c0, t0.c0, t0.c0, 1574432854))<>((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) COLLATE NOCASE))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0, t0.c0, 1574432854))<>((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) COLLATE NOCASE) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (x'') UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((x'') ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0)GLOB(0.1960729602007797)) COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)GLOB(0.1960729602007797)) COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)GLOB(0.1960729602007797)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON CASE WHEN t0.c0 THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE '-1657512449' END GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON CASE WHEN t0.c0 THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE '-1657512449' END GROUP BY t0.c0, vt0.c0 HAVING (((COUNT(TOTAL(x'ca4e')), vt0.c0, '-1745613357')) NOT BETWEEN ((SUM(COUNT(*)), ((vt0.c0) NOT NULL), ((((((((AVG(COUNT(vt0.c0)))AND(COUNT(*))))AND(COUNT(TOTAL(t0.c0)))))AND(AVG(x''))))AND(t0.c0)))) AND ((((MIN(COUNT(GROUP_CONCAT(TOTAL(vt0.c0)))))<=(TOTAL(COUNT(*)))), SUM(SUM(MAX(t0.c0))), COUNT(*)))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON CASE WHEN t0.c0 THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE '-1657512449' END GROUP BY t0.c0, vt0.c0 HAVING (NOT ((((COUNT(TOTAL(x'ca4e')), vt0.c0, '-1745613357')) NOT BETWEEN ((SUM(COUNT(*)), ((vt0.c0) NOT NULL), ((((((((AVG(COUNT(vt0.c0)))AND(COUNT(*))))AND(COUNT(TOTAL(t0.c0)))))AND(AVG(x''))))AND(t0.c0)))) AND ((((MIN(COUNT(GROUP_CONCAT(TOTAL(vt0.c0)))))<=(TOTAL(COUNT(*)))), SUM(SUM(MAX(t0.c0))), COUNT(*)))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON CASE WHEN t0.c0 THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE '-1657512449' END GROUP BY t0.c0, vt0.c0 HAVING (((((COUNT(TOTAL(x'ca4e')), vt0.c0, '-1745613357')) NOT BETWEEN ((SUM(COUNT(*)), ((vt0.c0) NOT NULL), ((((((((AVG(COUNT(vt0.c0)))AND(COUNT(*))))AND(COUNT(TOTAL(t0.c0)))))AND(AVG(x''))))AND(t0.c0)))) AND ((((MIN(COUNT(GROUP_CONCAT(TOTAL(vt0.c0)))))<=(TOTAL(COUNT(*)))), SUM(SUM(MAX(t0.c0))), COUNT(*))))) ISNULL);
SELECT * FROM vt0 NOT INDEXED INNER JOIN t0 ON CASE WHEN HEX(vt0.c0) THEN ((t0.c0) NOTNULL) END;
SELECT * FROM vt0 INNER JOIN t0 ON CASE WHEN HEX(vt0.c0) THEN ((t0.c0) NOTNULL) END WHERE (((vt0.c0)AND(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE 15386568 END))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN t0 ON CASE WHEN HEX(vt0.c0) THEN ((t0.c0) NOTNULL) END WHERE ((NOT (((vt0.c0)AND(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE 15386568 END))))) UNION ALL SELECT * FROM vt0 INNER JOIN t0 ON CASE WHEN HEX(vt0.c0) THEN ((t0.c0) NOTNULL) END WHERE (((((vt0.c0)AND(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE 15386568 END))) ISNULL));
SELECT * FROM vt0 NOT INDEXED INNER JOIN t0 ON CASE WHEN HEX(vt0.c0) THEN ((t0.c0) NOTNULL) END;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))<<(((vt0.c0) NOTNULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))<<(((vt0.c0) NOTNULL)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))<<(((vt0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN ((t0.c0 IN ())) AND (CAST(t0.c0 AS INTEGER)))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN ((t0.c0 IN ())) AND (CAST(t0.c0 AS INTEGER)))))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE (((((CAST(vt0.c0 AS BLOB)) NOT BETWEEN ((t0.c0 IN ())) AND (CAST(t0.c0 AS INTEGER)))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING MAX(MIN(vt0.c0)) UNION ALL SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING (NOT (MAX(MIN(vt0.c0)))) UNION ALL SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING ((MAX(MIN(vt0.c0))) ISNULL);
SELECT ALL * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE (CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END COLLATE RTRIM) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT (CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END COLLATE RTRIM))) UNION ALL SELECT * FROM t0, vt0 WHERE (((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END COLLATE RTRIM) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0)))<=((((vt0.c0))<((0.9651066338371681)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)<<(vt0.c0)))<=((((vt0.c0))<((0.9651066338371681)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)<<(vt0.c0)))<=((((vt0.c0))<((0.9651066338371681)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (json_array_length(vt0.c0) COLLATE RTRIM COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (json_array_length(vt0.c0) COLLATE RTRIM COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((json_array_length(vt0.c0) COLLATE RTRIM COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING MIN(MIN(TOTAL(TOTAL(TOTAL(t0.c0))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (MIN(MIN(TOTAL(TOTAL(TOTAL(t0.c0))))))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING ((MIN(MIN(TOTAL(TOTAL(TOTAL(t0.c0)))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((NOT (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((NOT (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 WHERE (LOWER(((vt0.c0)+(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t0 WHERE ((NOT (LOWER(((vt0.c0)+(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t0 WHERE (((LOWER(((vt0.c0)+(vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((+ (vt0.c0))) BETWEEN (TOTAL(MAX(GROUP_CONCAT(vt0.c0)))) AND (CAST(vt0.c0 AS BLOB))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((+ (vt0.c0))) BETWEEN (TOTAL(MAX(GROUP_CONCAT(vt0.c0)))) AND (CAST(vt0.c0 AS BLOB))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((+ (vt0.c0))) BETWEEN (TOTAL(MAX(GROUP_CONCAT(vt0.c0)))) AND (CAST(vt0.c0 AS BLOB)))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (t0.c0) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (UPPER(DISTINCT t0.c0)) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (UPPER(DISTINCT t0.c0)))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((UPPER(DISTINCT t0.c0)) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON CAST(x'' COLLATE RTRIM AS NUMERIC) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON CAST(x'' COLLATE RTRIM AS NUMERIC) WHERE (((((vt0.c0)AND(vt0.c0 COLLATE NOCASE)))OR(((t0.c0) ISNULL)))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON CAST(x'' COLLATE RTRIM AS NUMERIC) WHERE ((NOT (((((vt0.c0)AND(vt0.c0 COLLATE NOCASE)))OR(((t0.c0) ISNULL)))))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON CAST(x'' COLLATE RTRIM AS NUMERIC) WHERE (((((((vt0.c0)AND(vt0.c0 COLLATE NOCASE)))OR(((t0.c0) ISNULL)))) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON CAST(x'' COLLATE RTRIM AS NUMERIC) GROUP BY t0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE WHEN MAX(NULL) THEN SUM(GROUP_CONCAT(COUNT(*))) WHEN GROUP_CONCAT('0.9830079019436243') THEN (((vt0.c0, MIN(AVG(COUNT(*))), GROUP_CONCAT(vt0.c0))) BETWEEN ((COUNT(vt0.c0), vt0.c0, vt0.c0)) AND ((vt0.c0, MAX(SUM(MAX(SUM(MAX(vt0.c0))))), AVG(NULL)))) WHEN ((GROUP_CONCAT(MIN(GROUP_CONCAT(MIN(SUM(MIN(COUNT(*)))))))) IS FALSE) THEN SUM(MIN(AVG(NULL))) END UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE WHEN MAX(NULL) THEN SUM(GROUP_CONCAT(COUNT(*))) WHEN GROUP_CONCAT('0.9830079019436243') THEN (((vt0.c0, MIN(AVG(COUNT(*))), GROUP_CONCAT(vt0.c0))) BETWEEN ((COUNT(vt0.c0), vt0.c0, vt0.c0)) AND ((vt0.c0, MAX(SUM(MAX(SUM(MAX(vt0.c0))))), AVG(NULL)))) WHEN ((GROUP_CONCAT(MIN(GROUP_CONCAT(MIN(SUM(MIN(COUNT(*)))))))) IS FALSE) THEN SUM(MIN(AVG(NULL))) END)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE WHEN MAX(NULL) THEN SUM(GROUP_CONCAT(COUNT(*))) WHEN GROUP_CONCAT('0.9830079019436243') THEN (((vt0.c0, MIN(AVG(COUNT(*))), GROUP_CONCAT(vt0.c0))) BETWEEN ((COUNT(vt0.c0), vt0.c0, vt0.c0)) AND ((vt0.c0, MAX(SUM(MAX(SUM(MAX(vt0.c0))))), AVG(NULL)))) WHEN ((GROUP_CONCAT(MIN(GROUP_CONCAT(MIN(SUM(MIN(COUNT(*)))))))) IS FALSE) THEN SUM(MIN(AVG(NULL))) END) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (NULL) UNION ALL SELECT * FROM t0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM t0 WHERE (((NULL) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0)<(t0.c0)))IS NOT((((NULL))>=((t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)<(t0.c0)))IS NOT((((NULL))>=((t0.c0)))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0)<(t0.c0)))IS NOT((((NULL))>=((t0.c0)))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((((((t0.c0 IN ()))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR(((((((((x'')OR(vt0.c0)))AND(vt0.c0)))AND(NULL)))OR(vt0.c0))))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT ((((((t0.c0 IN ()))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR(((((((((x'')OR(vt0.c0)))AND(vt0.c0)))AND(NULL)))OR(vt0.c0))))))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((((((((t0.c0 IN ()))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR(((((((((x'')OR(vt0.c0)))AND(vt0.c0)))AND(NULL)))OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING GROUP_CONCAT((TOTAL(t0.c0) IN (SUM('-2039425388'), AVG(COUNT(t0.c0))))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (GROUP_CONCAT((TOTAL(t0.c0) IN (SUM('-2039425388'), AVG(COUNT(t0.c0))))))) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING ((GROUP_CONCAT((TOTAL(t0.c0) IN (SUM('-2039425388'), AVG(COUNT(t0.c0)))))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS TEXT)) IS FALSE)) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((CAST(t0.c0 AS TEXT)) IS FALSE)))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((CAST(t0.c0 AS TEXT)) IS FALSE)) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((('-358178842') NOT BETWEEN (DATE(vt0.c0, vt0.c0, vt0.c0)) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((('-358178842') NOT BETWEEN (DATE(vt0.c0, vt0.c0, vt0.c0)) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((('-358178842') NOT BETWEEN (DATE(vt0.c0, vt0.c0, vt0.c0)) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((~ (t0.c0)))>=(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((~ (t0.c0)))>=(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((~ (t0.c0)))>=(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING TOTAL(x'87c8') UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(x'87c8'))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((TOTAL(x'87c8')) ISNULL);
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING TOTAL(x'87c8') UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(x'87c8'))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((TOTAL(x'87c8')) ISNULL);
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0 COLLATE RTRIM, t0.c0, ((t0.c0)<<(t0.c0)))) AND ((x'0b59', ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (((((((('-151136974')AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0 COLLATE RTRIM, t0.c0, ((t0.c0)<<(t0.c0)))) AND ((x'0b59', ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (((((((('-151136974')AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0 COLLATE RTRIM, t0.c0, ((t0.c0)<<(t0.c0)))) AND ((x'0b59', ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (((((((('-151136974')AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN NULL THEN '-1691421520' ELSE vt0.c0 END)<=((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, '0.3426515689154649', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CASE WHEN NULL THEN '-1691421520' ELSE vt0.c0 END)<=((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, '0.3426515689154649', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CASE WHEN NULL THEN '-1691421520' ELSE vt0.c0 END)<=((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, '0.3426515689154649', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CASE WHEN t0.c0 THEN 0.19621105584934717 WHEN (- (t0.c0)) THEN (t0.c0 IN ()) WHEN ((t0.c0)GLOB(t0.c0)) THEN t0.c0 END) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CASE WHEN t0.c0 THEN 0.19621105584934717 WHEN (- (t0.c0)) THEN (t0.c0 IN ()) WHEN ((t0.c0)GLOB(t0.c0)) THEN t0.c0 END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CASE WHEN t0.c0 THEN 0.19621105584934717 WHEN (- (t0.c0)) THEN (t0.c0 IN ()) WHEN ((t0.c0)GLOB(t0.c0)) THEN t0.c0 END) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (t0.c0 IN (t0.c0)) COLLATE NOCASE GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (t0.c0 IN (t0.c0)) COLLATE NOCASE GROUP BY t0.c0 HAVING COUNT(((MAX(t0.c0))=(COUNT(vt0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (t0.c0 IN (t0.c0)) COLLATE NOCASE GROUP BY t0.c0 HAVING (NOT (COUNT(((MAX(t0.c0))==(COUNT(vt0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (t0.c0 IN (t0.c0)) COLLATE NOCASE GROUP BY t0.c0 HAVING ((COUNT(((MAX(t0.c0))=(COUNT(vt0.c0))))) ISNULL);
SELECT ALL t0.c0 FROM vt0, t0;
SELECT t0.c0 FROM vt0, t0 WHERE ('1e500') UNION ALL SELECT t0.c0 FROM vt0, t0 WHERE ((NOT ('1e500'))) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 WHERE ((('1e500') ISNULL));
SELECT ALL t0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))) NOTNULL);
SELECT DISTINCT vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))) NOTNULL) WHERE ((~ (((t0.c0)>(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))) NOTNULL) WHERE ((NOT ((~ (((t0.c0)>(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))) NOTNULL) WHERE ((((~ (((t0.c0)>(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))) NOTNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)GLOB(((x'')GLOB(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY)GLOB(((x'')GLOB(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)GLOB(((x'')GLOB(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON LIKELIHOOD(DISTINCT (- (NULL)), 0.8360525814434485) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON LIKELIHOOD(DISTINCT (- (NULL)), 0.8360525814434485) GROUP BY vt0.c0 HAVING AVG(COUNT(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON LIKELIHOOD(DISTINCT (- (NULL)), 0.8360525814434485) GROUP BY vt0.c0 HAVING (NOT (AVG(COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON LIKELIHOOD(DISTINCT (- (NULL)), 0.8360525814434485) GROUP BY vt0.c0 HAVING ((AVG(COUNT(vt0.c0))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 NOT INDEXED WHERE (((t0.c0 COLLATE BINARY)OR(CAST(t0.c0 AS NUMERIC)))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((t0.c0 COLLATE BINARY)OR(CAST(t0.c0 AS NUMERIC)))))) UNION ALL SELECT * FROM t0 WHERE (((((t0.c0 COLLATE BINARY)OR(CAST(t0.c0 AS NUMERIC)))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c0, vt0.c0 FROM t0, vt0;
SELECT DISTINCT t0.c0, vt0.c0 FROM t0, vt0 WHERE (NULL) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM t0, vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM t0, vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0 FROM t0, vt0;
SELECT ALL vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON CAST('' AS NUMERIC) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON CAST('' AS NUMERIC) WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (1.61188516E8))) ISNULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON CAST('' AS NUMERIC) WHERE ((NOT (((((t0.c0) NOT BETWEEN (t0.c0) AND (1.61188516E8))) ISNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON CAST('' AS NUMERIC) WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (1.61188516E8))) ISNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON CAST('' AS NUMERIC) GROUP BY vt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CASE WHEN ((((COUNT(*))AND(MIN(t0.c0))))OR(COUNT(MAX(t0.c0)))) THEN GROUP_CONCAT(MIN(AVG(TOTAL(TOTAL(t0.c0))))) ELSE SUM(t0.c0) END UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CASE WHEN ((((COUNT(*))AND(MIN(t0.c0))))OR(COUNT(MAX(t0.c0)))) THEN GROUP_CONCAT(MIN(AVG(TOTAL(TOTAL(t0.c0))))) ELSE SUM(t0.c0) END)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CASE WHEN ((((COUNT(*))AND(MIN(t0.c0))))OR(COUNT(MAX(t0.c0)))) THEN GROUP_CONCAT(MIN(AVG(TOTAL(TOTAL(t0.c0))))) ELSE SUM(t0.c0) END) ISNULL);
SELECT ALL * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE (CAST(CASE WHEN t0.c0 THEN vt0.c0 END AS NUMERIC)) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT (CAST(CASE WHEN t0.c0 THEN vt0.c0 END AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((CAST(CASE WHEN t0.c0 THEN vt0.c0 END AS NUMERIC)) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)>=(vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE)>=(vt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)>=(vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0, vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) WHERE (((t0.c0 IN ()) IN (vt0.c0))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) WHERE ((NOT (((t0.c0 IN ()) IN (vt0.c0))))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) WHERE (((((t0.c0 IN ()) IN (vt0.c0))) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) GROUP BY t0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL SUM(((vt0.c0) NOT NULL)) FROM t0, vt0;
SELECT ALL * FROM vt0 NOT INDEXED, t0;
SELECT * FROM vt0, t0 WHERE ((NOT (0.8728573297054127 COLLATE BINARY))) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT ((NOT (0.8728573297054127 COLLATE BINARY))))) UNION ALL SELECT * FROM vt0, t0 WHERE ((((NOT (0.8728573297054127 COLLATE BINARY))) ISNULL));
SELECT ALL * FROM vt0 NOT INDEXED, t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0)<>(-1.573358748E9)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0)<>(-1.573358748E9)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)!=(-1.573358748E9)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE (((TRIM(DISTINCT t0.c0)) ISNULL)) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT (((TRIM(DISTINCT t0.c0)) ISNULL)))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE (((((TRIM(DISTINCT t0.c0)) ISNULL)) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (- (CAST(TOTAL(t0.c0) AS REAL))) UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (NOT ((- (CAST(TOTAL(t0.c0) AS REAL))))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (((- (CAST(TOTAL(t0.c0) AS REAL)))) ISNULL);
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (- (CAST(TOTAL(t0.c0) AS REAL))) UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (NOT ((- (CAST(TOTAL(t0.c0) AS REAL))))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (((- (CAST(TOTAL(t0.c0) AS REAL)))) ISNULL);
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0 FROM t0, vt0;
SELECT ALL t0.c0 FROM t0, vt0 WHERE (json_array_length(t0.c0, t0.c0 COLLATE BINARY)) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 WHERE ((NOT (json_array_length(t0.c0, t0.c0 COLLATE BINARY)))) UNION ALL SELECT t0.c0 FROM t0, vt0 WHERE (((json_array_length(t0.c0, t0.c0 COLLATE BINARY)) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (CAST(ABS(vt0.c0) AS REAL)) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (CAST(ABS(vt0.c0) AS REAL)))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((CAST(ABS(vt0.c0) AS REAL)) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (IFNULL((+ (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (IFNULL((+ (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((IFNULL((+ (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING TOTAL(((t0.c0)IS(t0.c0))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (TOTAL(((t0.c0)IS(t0.c0))))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING ((TOTAL(((t0.c0)IS(t0.c0)))) ISNULL);
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING TOTAL(((t0.c0)IS(t0.c0))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (TOTAL(((t0.c0)IS(t0.c0))))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING ((TOTAL(((t0.c0)IS(t0.c0)))) ISNULL);
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (NULL) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM vt0 WHERE (((NULL) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((0.09904380980149019)>=(t0.c0)))) AND ((vt0.c0 COLLATE BINARY)))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((((0.09904380980149019)>=(t0.c0)))) AND ((vt0.c0 COLLATE BINARY)))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((((0.09904380980149019)>=(t0.c0)))) AND ((vt0.c0 COLLATE BINARY)))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0)) NOT BETWEEN (((NOT (t0.c0)))) AND ((((t0.c0)%('>InfinityM-InfinityQ')))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN (((NOT (t0.c0)))) AND ((((t0.c0)%('>InfinityM-InfinityQ')))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN (((NOT (t0.c0)))) AND ((((t0.c0)%('>InfinityM-InfinityQ')))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c0)<>(t0.c0))) NOT BETWEEN (CASE 'Oe'  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c0)<>(t0.c0))) NOT BETWEEN (CASE 'Oe'  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0)) GROUP BY t0.c0 HAVING GROUP_CONCAT(vt0.c0 COLLATE NOCASE) UNION ALL SELECT ALL t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c0)<>(t0.c0))) NOT BETWEEN (CASE 'Oe'  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0)) GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c0)<>(t0.c0))) NOT BETWEEN (CASE 'Oe'  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0)) GROUP BY t0.c0 HAVING ((GROUP_CONCAT(vt0.c0 COLLATE NOCASE)) ISNULL);
SELECT ALL t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c0)<>(t0.c0))) NOT BETWEEN (CASE 'Oe'  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c0)<>(t0.c0))) NOT BETWEEN (CASE 'Oe'  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0)) GROUP BY t0.c0 HAVING GROUP_CONCAT(vt0.c0 COLLATE NOCASE) UNION ALL SELECT ALL t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c0)<>(t0.c0))) NOT BETWEEN (CASE 'Oe'  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0)) GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c0)<>(t0.c0))) NOT BETWEEN (CASE 'Oe'  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0)) GROUP BY t0.c0 HAVING ((GROUP_CONCAT(vt0.c0 COLLATE NOCASE)) ISNULL);
SELECT ALL t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c0)<>(t0.c0))) NOT BETWEEN (CASE 'Oe'  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0)) GROUP BY t0.c0;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)AND(((t0.c0)OR('305494579'))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)AND(((t0.c0)OR('305494579'))))))) UNION ALL SELECT * FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)AND(((t0.c0)OR('305494579'))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0 FROM t0 NOT INDEXED NATURAL JOIN vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 NATURAL JOIN vt0 WHERE (x'') GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 NATURAL JOIN vt0 WHERE ((NOT (x''))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 NATURAL JOIN vt0 WHERE (((x'') ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 NOT INDEXED NATURAL JOIN vt0 GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(GROUP_CONCAT(NULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(GROUP_CONCAT(NULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(GROUP_CONCAT(NULL))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (x'baea') UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (x'baea'))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((x'baea') ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0) ISNULL) IN ((~ (vt0.c0)), (NOT (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0) ISNULL) IN ((~ (vt0.c0)), (NOT (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE ((((((vt0.c0) ISNULL) IN ((~ (vt0.c0)), (NOT (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0 FROM t0 INDEXED BY i43 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 INDEXED BY i43 WHERE (((CAST(t0.c0 AS REAL)) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (((t0.c0)+(t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 INDEXED BY i43 WHERE ((NOT (((CAST(t0.c0 AS REAL)) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (((t0.c0)+(t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 INDEXED BY i43 WHERE (((((CAST(t0.c0 AS REAL)) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (((t0.c0)+(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 INDEXED BY i43 GROUP BY t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING GROUP_CONCAT(SUM(vt0.c0)) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (GROUP_CONCAT(SUM(vt0.c0)))) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING ((GROUP_CONCAT(SUM(vt0.c0))) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (vt0.c0) AND ((~ (vt0.c0))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (vt0.c0) AND ((~ (vt0.c0))))))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (vt0.c0) AND ((~ (vt0.c0))))) ISNULL));
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) UNION SELECT DISTINCT * FROM vt0, t0 NOT INDEXED WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING TOTAL(HEX(COUNT(*))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (TOTAL(HEX(COUNT(*))))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING ((TOTAL(HEX(COUNT(*)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((((x'') IS FALSE), ((vt0.c0) ISNULL), ((vt0.c0)OR(vt0.c0))))=((vt0.c0 COLLATE BINARY, (vt0.c0 IN ()), '-381894478')))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((x'') IS FALSE), ((vt0.c0) ISNULL), ((vt0.c0)OR(vt0.c0))))=((vt0.c0 COLLATE BINARY, (vt0.c0 IN ()), '-381894478')))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((((x'') IS FALSE), ((vt0.c0) ISNULL), ((vt0.c0)OR(vt0.c0))))==((vt0.c0 COLLATE BINARY, (vt0.c0 IN ()), '-381894478')))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (x'7af4')))) AND ((load_extension(vt0.c0))));
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0)>>(t0.c0)) IN ())) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)>>(t0.c0)) IN ())))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0)>>(t0.c0)) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (NULL IN ()) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (NOT ((NULL IN ()))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (((NULL IN ())) ISNULL);
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (NULL IN ()) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (NOT ((NULL IN ()))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (((NULL IN ())) ISNULL);
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (t0.c0) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (CASE vt0.c0  WHEN (t0.c0 IN ()) THEN (~ (vt0.c0)) END) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (CASE vt0.c0  WHEN (t0.c0 IN ()) THEN (~ (vt0.c0)) END))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN (t0.c0 IN ()) THEN (~ (vt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT ALL t0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON t0.c0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON t0.c0 WHERE (vt0.c0) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON t0.c0 WHERE ((NOT (vt0.c0))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON t0.c0 WHERE (((vt0.c0) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON t0.c0 GROUP BY t0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING 0.7526047894920286 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (0.7526047894920286)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((0.7526047894920286) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING 0.7526047894920286 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (0.7526047894920286)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((0.7526047894920286) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c0)-(vt0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0)-(vt0.c0)) COLLATE RTRIM))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c0)-(vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (((((((((CASE t0.c0  WHEN 0.21192101278645836 THEN x'' ELSE t0.c0 END)OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(TRIM(t0.c0))))AND(((t0.c0)-(t0.c0)))))OR(((t0.c0)-(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (((((((((CASE t0.c0  WHEN 0.21192101278645836 THEN x'' ELSE t0.c0 END)OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(TRIM(t0.c0))))AND(((t0.c0)-(t0.c0)))))OR(((t0.c0)-(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((((((((((CASE t0.c0  WHEN 0.21192101278645836 THEN x'' ELSE t0.c0 END)OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(TRIM(t0.c0))))AND(((t0.c0)-(t0.c0)))))OR(((t0.c0)-(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((((((((((NULL)AND(t0.c0)))OR(t0.c0)))AND(((t0.c0)-(t0.c0)))))OR((((t0.c0))>((t0.c0))))))AND(((t0.c0)=(t0.c0)))))OR(SQLITE_VERSION()))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((((((((((NULL)AND(t0.c0)))OR(t0.c0)))AND(((t0.c0)-(t0.c0)))))OR((((t0.c0))>((t0.c0))))))AND(((t0.c0)==(t0.c0)))))OR(SQLITE_VERSION()))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((((((((((NULL)AND(t0.c0)))OR(t0.c0)))AND(((t0.c0)-(t0.c0)))))OR((((t0.c0))>((t0.c0))))))AND(((t0.c0)=(t0.c0)))))OR(SQLITE_VERSION()))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(TOTAL(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(TOTAL(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(TOTAL(vt0.c0))) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM vt0 NATURAL JOIN t0;
SELECT t0.c0, vt0.c0 FROM vt0 NATURAL JOIN t0 WHERE (LAST_INSERT_ROWID()) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0 NATURAL JOIN t0 WHERE ((NOT (LAST_INSERT_ROWID()))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0 NATURAL JOIN t0 WHERE (((LAST_INSERT_ROWID()) ISNULL));
SELECT ALL t0.c0, vt0.c0 FROM vt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (((((t0.c0) NOT NULL))IS((('1724443208')&(vt0.c0))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (((((t0.c0) NOT NULL))IS((('1724443208')&(vt0.c0))))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((((((t0.c0) NOT NULL))IS((('1724443208')&(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c0))) NOTNULL)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, vt0 WHERE ((NOT (((((((t0.c0)OR(t0.c0)))AND(t0.c0))) NOTNULL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, vt0 WHERE (((((((((t0.c0)OR(t0.c0)))AND(t0.c0))) NOTNULL)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 INDEXED BY i43 GROUP BY vt0.c0, t0.c0;
SELECT ALL MIN((- (CAST(vt0.c0 AS BLOB)))) FROM vt0 ORDER BY '974882170' DESC;
SELECT ALL t0.c0 FROM t0 CROSS JOIN vt0 ON ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((NULL) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((((((((((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(t0.c0))));
SELECT t0.c0 FROM t0 CROSS JOIN vt0 ON ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((NULL) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((((((((((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(t0.c0)))) WHERE (((CASE t0.c0  WHEN NULL THEN t0.c0 END)=((~ (vt0.c0))))) UNION ALL SELECT t0.c0 FROM t0 CROSS JOIN vt0 ON ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((NULL) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((((((((((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(t0.c0)))) WHERE ((NOT (((CASE t0.c0  WHEN NULL THEN t0.c0 END)==((~ (vt0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 CROSS JOIN vt0 ON ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((NULL) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((((((((((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(t0.c0)))) WHERE (((((CASE t0.c0  WHEN NULL THEN t0.c0 END)=((~ (vt0.c0))))) ISNULL));
SELECT ALL t0.c0 FROM t0 CROSS JOIN vt0 ON ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((NULL) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((((((((((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(t0.c0))));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((~ (vt0.c0)))-(CAST(vt0.c0 AS TEXT)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((~ (vt0.c0)))-(CAST(vt0.c0 AS TEXT)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((~ (vt0.c0)))-(CAST(vt0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c0) IS FALSE))) AND ((t0.c0)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((((t0.c0) IS FALSE))) AND ((t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((((t0.c0) IS FALSE))) AND ((t0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT * FROM t0, vt0 INDEXED BY i43;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((+ (vt0.c0)) IN (IFNULL(vt0.c0, vt0.c0), json_extract(vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((+ (vt0.c0)) IN (IFNULL(vt0.c0, vt0.c0), json_extract(vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((+ (vt0.c0)) IN (IFNULL(vt0.c0, vt0.c0), json_extract(vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((x''))<=((t0.c0 COLLATE NOCASE)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((x''))<=((t0.c0 COLLATE NOCASE)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((x''))<=((t0.c0 COLLATE NOCASE)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((t0.c0)>(t0.c0)) COLLATE RTRIM GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((t0.c0)>(t0.c0)) COLLATE RTRIM GROUP BY t0.c0, vt0.c0 HAVING vt0.c0 UNION ALL SELECT t0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((t0.c0)>(t0.c0)) COLLATE RTRIM GROUP BY t0.c0, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((t0.c0)>(t0.c0)) COLLATE RTRIM GROUP BY t0.c0, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((t0.c0)>(t0.c0)) COLLATE RTRIM GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((t0.c0)>(t0.c0)) COLLATE RTRIM GROUP BY t0.c0, vt0.c0 HAVING vt0.c0 UNION ALL SELECT t0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((t0.c0)>(t0.c0)) COLLATE RTRIM GROUP BY t0.c0, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((t0.c0)>(t0.c0)) COLLATE RTRIM GROUP BY t0.c0, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((t0.c0)>(t0.c0)) COLLATE RTRIM GROUP BY t0.c0, vt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)LIKE(NULL)))OR(((((((((0.6141296809866325)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(NULL COLLATE NOCASE)))AND(((vt0.c0)!=(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((((((((vt0.c0)LIKE(NULL)))OR(((((((((0.6141296809866325)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(NULL COLLATE NOCASE)))AND(((vt0.c0)<>(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((((((((vt0.c0)LIKE(NULL)))OR(((((((((0.6141296809866325)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(NULL COLLATE NOCASE)))AND(((vt0.c0)!=(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0 WHERE ((((vt0.c0 IN ()))<>((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))))) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT ((((vt0.c0 IN ()))<>((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))))))) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0 WHERE ((((((vt0.c0 IN ()))<>((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 AS REAL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS REAL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (HEX(DISTINCT x'83be')) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (HEX(DISTINCT x'83be')))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((HEX(DISTINCT x'83be')) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((- (NULL)) IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((- (NULL)) IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((- (NULL)) IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (TRIM((((t0.c0))!=((t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (TRIM((((t0.c0))<>((t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((TRIM((((t0.c0))<>((t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(MAX(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(MAX(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(MAX(vt0.c0))) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 WHERE ((((vt0.c0) IS TRUE) IN ())) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 WHERE ((NOT ((((vt0.c0) IS TRUE) IN ())))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 WHERE ((((((vt0.c0) IS TRUE) IN ())) ISNULL));
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE x''  WHEN (t0.c0 IN (t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN '944325883' END WHEN ((t0.c0)=(t0.c0)) THEN (((t0.c0))>=((t0.c0))) WHEN (- (t0.c0)) THEN (t0.c0 IN ()) ELSE ((t0.c0)OR(t0.c0)) END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE x''  WHEN (t0.c0 IN (t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN '944325883' END WHEN ((t0.c0)==(t0.c0)) THEN (((t0.c0))>=((t0.c0))) WHEN (- (t0.c0)) THEN (t0.c0 IN ()) ELSE ((t0.c0)OR(t0.c0)) END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE x''  WHEN (t0.c0 IN (t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN '944325883' END WHEN ((t0.c0)=(t0.c0)) THEN (((t0.c0))>=((t0.c0))) WHEN (- (t0.c0)) THEN (t0.c0 IN ()) ELSE ((t0.c0)OR(t0.c0)) END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 WHERE (((CAST(t0.c0 AS NUMERIC))=(CAST(t0.c0 AS INTEGER)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 WHERE ((NOT (((CAST(t0.c0 AS NUMERIC))=(CAST(t0.c0 AS INTEGER)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt0, t0 WHERE (((((CAST(t0.c0 AS NUMERIC))==(CAST(t0.c0 AS INTEGER)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(t0.c0) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(t0.c0)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(t0.c0) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(t0.c0)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON LIKELY(DISTINCT vt0.c0 COLLATE BINARY);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON LIKELY(DISTINCT vt0.c0 COLLATE BINARY) WHERE ('0.07170316180607261') UNION ALL SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON LIKELY(DISTINCT vt0.c0 COLLATE BINARY) WHERE ((NOT ('0.07170316180607261'))) UNION ALL SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON LIKELY(DISTINCT vt0.c0 COLLATE BINARY) WHERE ((('0.07170316180607261') ISNULL));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON LIKELY(DISTINCT vt0.c0 COLLATE BINARY);
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (((((t0.c0) ISNULL)) ISNULL)) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (((((t0.c0) ISNULL)) ISNULL)))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((((((t0.c0) ISNULL)) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR((((t0.c0)) BETWEEN ((t0.c0)) AND ((NULL))))))AND(vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt0 WHERE ((NOT (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR((((t0.c0)) BETWEEN ((t0.c0)) AND ((NULL))))))AND(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt0 WHERE (((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR((((t0.c0)) BETWEEN ((t0.c0)) AND ((NULL))))))AND(vt0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING ((COUNT(*) IN ()) IN (MAX(t0.c0))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (((COUNT(*) IN ()) IN (MAX(t0.c0))))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING ((((COUNT(*) IN ()) IN (MAX(t0.c0)))) ISNULL);
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING ((COUNT(*) IN ()) IN (MAX(t0.c0))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (((COUNT(*) IN ()) IN (MAX(t0.c0))))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING ((((COUNT(*) IN ()) IN (MAX(t0.c0)))) ISNULL);
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT ALL * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE ((((~ (x'')))/((vt0.c0 IN ())))) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT ((((~ (x'')))/((vt0.c0 IN ())))))) UNION ALL SELECT * FROM t0, vt0 WHERE ((((((~ (x'')))/((vt0.c0 IN ())))) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((NULL)) AND ((NULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((NULL)) AND ((NULL)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((NULL)) AND ((NULL)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (- (vt0.c0)) ELSE vt0.c0 COLLATE BINARY END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (- (vt0.c0)) ELSE vt0.c0 COLLATE BINARY END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (- (vt0.c0)) ELSE vt0.c0 COLLATE BINARY END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(CASE COUNT(*)  WHEN GROUP_CONCAT(COUNT(*)) THEN t0.c0 ELSE MIN(NULL) END) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(CASE COUNT(*)  WHEN GROUP_CONCAT(COUNT(*)) THEN t0.c0 ELSE MIN(NULL) END))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(CASE COUNT(*)  WHEN GROUP_CONCAT(COUNT(*)) THEN t0.c0 ELSE MIN(NULL) END)) ISNULL);
SELECT ALL MAX((('-946752797') NOT BETWEEN (t0.c0 COLLATE BINARY) AND (((vt0.c0) IS FALSE)))) FROM t0, vt0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((TRIM(740680661))OR(((vt0.c0)|(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((TRIM(740680661))OR(((vt0.c0)|(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((TRIM(740680661))OR(((vt0.c0)|(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED, t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE (((((t0.c0)AND(t0.c0 COLLATE RTRIM)))OR(CASE t0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (((((t0.c0)AND(t0.c0 COLLATE RTRIM)))OR(CASE t0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE (((((((t0.c0)AND(t0.c0 COLLATE RTRIM)))OR(CASE t0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(CAST(vt0.c0 AS REAL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(CAST(vt0.c0 AS REAL)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(CAST(vt0.c0 AS REAL))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(CAST(vt0.c0 AS REAL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(CAST(vt0.c0 AS REAL)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(CAST(vt0.c0 AS REAL))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE (CAST(CASE WHEN vt0.c0 THEN '85' WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END AS REAL)) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT (CAST(CASE WHEN vt0.c0 THEN '85' WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END AS REAL)))) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE (((CAST(CASE WHEN vt0.c0 THEN '85' WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END AS REAL)) ISNULL));
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (LTRIM(((t0.c0) ISNULL), ((NULL)+(x'')))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (LTRIM(((t0.c0) ISNULL), ((NULL)+(x'')))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((LTRIM(((t0.c0) ISNULL), ((NULL)+(x'')))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CAST(t0.c0 AS BLOB) COLLATE BINARY COLLATE RTRIM) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CAST(t0.c0 AS BLOB) COLLATE BINARY COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS BLOB) COLLATE BINARY COLLATE RTRIM) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(t0.c0 COLLATE NOCASE) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(t0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(t0.c0 COLLATE NOCASE)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(t0.c0 COLLATE NOCASE) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(t0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(t0.c0 COLLATE NOCASE)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL SUM(RTRIM(vt0.c0 COLLATE NOCASE)) FROM t0, vt0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE (x'') UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT (x''))) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE (((x'') ISNULL));
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'31e9' END IN ())) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'31e9' END IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'31e9' END IN ())) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 WHERE (((((t0.c0) NOTNULL))==((t0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t0 WHERE ((NOT (((((t0.c0) NOTNULL))==((t0.c0 IN ())))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t0 WHERE (((((((t0.c0) NOTNULL))=((t0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((((((LIKELY(DISTINCT vt0.c0))AND(x'')))OR(((vt0.c0)OR(vt0.c0)))))AND((- (vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((LIKELY(DISTINCT vt0.c0))AND(x'')))OR(((vt0.c0)OR(vt0.c0)))))AND((- (vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((LIKELY(DISTINCT vt0.c0))AND(x'')))OR(((vt0.c0)OR(vt0.c0)))))AND((- (vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE ((((('-1774831379')AND(CASE t0.c0  WHEN vt0.c0 THEN '-435439212' END)))OR(CAST(t0.c0 AS TEXT)))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT ((((('-1774831379')AND(CASE t0.c0  WHEN vt0.c0 THEN '-435439212' END)))OR(CAST(t0.c0 AS TEXT)))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((((((('-1774831379')AND(CASE t0.c0  WHEN vt0.c0 THEN '-435439212' END)))OR(CAST(t0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT vt0.c0, t0.c0 FROM t0 FULL OUTER JOIN vt0 ON (NOT (((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0 FULL OUTER JOIN vt0 ON (NOT (((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (CAST(((vt0.c0) ISNULL) AS BLOB)) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0 FULL OUTER JOIN vt0 ON (NOT (((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE ((NOT (CAST(((vt0.c0) ISNULL) AS BLOB)))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0 FULL OUTER JOIN vt0 ON (NOT (((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (((CAST(((vt0.c0) ISNULL) AS BLOB)) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0 FULL OUTER JOIN vt0 ON (NOT (((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) GROUP BY vt0.c0, t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(((t0.c0) NOT BETWEEN (COUNT(*)) AND (COUNT(*)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(((t0.c0) NOT BETWEEN (COUNT(*)) AND (COUNT(*)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(((t0.c0) NOT BETWEEN (COUNT(*)) AND (COUNT(*))))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (ABS(vt0.c0) COLLATE BINARY) UNION ALL SELECT * FROM vt0 WHERE ((NOT (ABS(vt0.c0) COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt0 WHERE (((ABS(vt0.c0) COLLATE BINARY) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((- (vt0.c0)) COLLATE RTRIM COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((- (vt0.c0)) COLLATE RTRIM COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((- (vt0.c0)) COLLATE RTRIM COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((t0.c0 IN ())) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((t0.c0 IN ())))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((t0.c0 IN ())) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(((vt0.c0)+(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(((vt0.c0)+(GROUP_CONCAT(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(((vt0.c0)+(GROUP_CONCAT(vt0.c0))))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (IFNULL(NULL, NULL)) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (IFNULL(NULL, NULL)))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((IFNULL(NULL, NULL)) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (LIKELY(((vt0.c0)GLOB(vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (LIKELY(((vt0.c0)GLOB(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((LIKELY(((vt0.c0)GLOB(vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((((vt0.c0 IN (t0.c0)))<>((t0.c0 IN (NULL))))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT ((((vt0.c0 IN (t0.c0)))!=((t0.c0 IN (NULL))))))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE ((((((vt0.c0 IN (t0.c0)))!=((t0.c0 IN (NULL))))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MAX(COUNT(SUM(COUNT(SUM(MIN(vt0.c0))))))) NOTNULL))&(CASE MAX(vt0.c0)  WHEN AVG(vt0.c0) THEN vt0.c0 ELSE MAX(SUM(MAX(vt0.c0))) END)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((MAX(COUNT(SUM(COUNT(SUM(MIN(vt0.c0))))))) NOTNULL))&(CASE MAX(vt0.c0)  WHEN AVG(vt0.c0) THEN vt0.c0 ELSE MAX(SUM(MAX(vt0.c0))) END)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((MAX(COUNT(SUM(COUNT(SUM(MIN(vt0.c0))))))) NOTNULL))&(CASE MAX(vt0.c0)  WHEN AVG(vt0.c0) THEN vt0.c0 ELSE MAX(SUM(MAX(vt0.c0))) END))) ISNULL);
SELECT * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE ((NULL IN ())) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT ((NULL IN ())))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((((NULL IN ())) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((t0.c0 IN ())) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((t0.c0 IN ())))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((t0.c0 IN ())) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 WHERE ((((t0.c0)) BETWEEN ((t0.c0)) AND ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt0 WHERE ((NOT ((((t0.c0)) BETWEEN ((t0.c0)) AND ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt0 WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(AVG(t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(AVG(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(AVG(t0.c0))) ISNULL);
SELECT ALL * FROM vt0 INDEXED BY i43;
SELECT DISTINCT * FROM vt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM vt0 NATURAL JOIN t0 WHERE (((((((vt0.c0)&(vt0.c0)))OR((+ (t0.c0)))))AND(((-350742093) BETWEEN (t0.c0) AND (t0.c0))))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN t0 WHERE ((NOT (((((((vt0.c0)&(vt0.c0)))OR((+ (t0.c0)))))AND(((-350742093) BETWEEN (t0.c0) AND (t0.c0))))))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN t0 WHERE (((((((((vt0.c0)&(vt0.c0)))OR((+ (t0.c0)))))AND(((-350742093) BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0 NATURAL JOIN t0;
SELECT ALL t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 NATURAL JOIN vt0 WHERE (((0.7988150322085752) BETWEEN ((((t0.c0))=((t0.c0)))) AND ((vt0.c0 IN (t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 NATURAL JOIN vt0 WHERE ((NOT (((0.7988150322085752) BETWEEN ((((t0.c0))=((t0.c0)))) AND ((vt0.c0 IN (t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 NATURAL JOIN vt0 WHERE (((((0.7988150322085752) BETWEEN ((((t0.c0))==((t0.c0)))) AND ((vt0.c0 IN (t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CASE WHEN COUNT(t0.c0) THEN ((((((((((((t0.c0)AND(MAX(t0.c0))))OR(t0.c0)))AND(t0.c0)))OR(TOTAL(SUM(t0.c0)))))OR(GROUP_CONCAT(t0.c0))))OR(COUNT(*))) END UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CASE WHEN COUNT(t0.c0) THEN ((((((((((((t0.c0)AND(MAX(t0.c0))))OR(t0.c0)))AND(t0.c0)))OR(TOTAL(SUM(t0.c0)))))OR(GROUP_CONCAT(t0.c0))))OR(COUNT(*))) END)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CASE WHEN COUNT(t0.c0) THEN ((((((((((((t0.c0)AND(MAX(t0.c0))))OR(t0.c0)))AND(t0.c0)))OR(TOTAL(SUM(t0.c0)))))OR(GROUP_CONCAT(t0.c0))))OR(COUNT(*))) END) ISNULL);
SELECT ALL SUM(((vt0.c0)IS(vt0.c0))) FROM vt0;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (t0.c0) UNION ALL SELECT * FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c0 FROM vt0, t0 WHERE (((+ (x'')) IN ())) UNION SELECT DISTINCT t0.c0 FROM vt0, t0 WHERE ((NOT (((+ (x'')) IN ())))) UNION SELECT DISTINCT t0.c0 FROM vt0, t0 WHERE (((((+ (x'')) IN ())) ISNULL));
SELECT DISTINCT t0.c0 FROM vt0, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CAST(t0.c0 AS REAL) COLLATE NOCASE) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CAST(t0.c0 AS REAL) COLLATE NOCASE))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS REAL) COLLATE NOCASE) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(vt0.c0))/(MAX(SUM(vt0.c0))))) ISNULL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((TOTAL(vt0.c0))/(MAX(SUM(vt0.c0))))) ISNULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((TOTAL(vt0.c0))/(MAX(SUM(vt0.c0))))) ISNULL)) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)>=(((vt0.c0)IS(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0)>=(((vt0.c0)IS(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((vt0.c0)>=(((vt0.c0)IS(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL vt0.c0, t0.c0 FROM vt0 CROSS JOIN t0 ON UPPER(DISTINCT vt0.c0) COLLATE RTRIM GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0 CROSS JOIN t0 ON UPPER(DISTINCT vt0.c0) COLLATE RTRIM WHERE (CASE ((vt0.c0)GLOB(t0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN CAST(t0.c0 AS REAL) WHEN ((vt0.c0) IS TRUE) THEN (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))) WHEN CASE t0.c0  WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END THEN CAST(vt0.c0 AS REAL) ELSE (t0.c0 IN ()) END) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM vt0 CROSS JOIN t0 ON UPPER(DISTINCT vt0.c0) COLLATE RTRIM WHERE ((NOT (CASE ((vt0.c0)GLOB(t0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN CAST(t0.c0 AS REAL) WHEN ((vt0.c0) IS TRUE) THEN (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))) WHEN CASE t0.c0  WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END THEN CAST(vt0.c0 AS REAL) ELSE (t0.c0 IN ()) END))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0 CROSS JOIN t0 ON UPPER(DISTINCT vt0.c0) COLLATE RTRIM WHERE (((CASE ((vt0.c0)GLOB(t0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN CAST(t0.c0 AS REAL) WHEN ((vt0.c0) IS TRUE) THEN (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))) WHEN CASE t0.c0  WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END THEN CAST(vt0.c0 AS REAL) ELSE (t0.c0 IN ()) END) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0 CROSS JOIN t0 ON UPPER(DISTINCT vt0.c0) COLLATE RTRIM GROUP BY vt0.c0, t0.c0;
SELECT t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON CAST(LTRIM(vt0.c0) AS REAL) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON CAST(LTRIM(vt0.c0) AS REAL) GROUP BY t0.c0, vt0.c0 HAVING ((((COUNT(*))AND((vt0.c0 IN ()))))OR(CAST(MAX('Fg') AS TEXT))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON CAST(LTRIM(vt0.c0) AS REAL) GROUP BY t0.c0, vt0.c0 HAVING (NOT (((((COUNT(*))AND((vt0.c0 IN ()))))OR(CAST(MAX('Fg') AS TEXT))))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON CAST(LTRIM(vt0.c0) AS REAL) GROUP BY t0.c0, vt0.c0 HAVING ((((((COUNT(*))AND((vt0.c0 IN ()))))OR(CAST(MAX('Fg') AS TEXT)))) ISNULL);
SELECT t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON CAST(LTRIM(vt0.c0) AS REAL) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON CAST(LTRIM(vt0.c0) AS REAL) GROUP BY t0.c0, vt0.c0 HAVING ((((COUNT(*))AND((vt0.c0 IN ()))))OR(CAST(MAX('Fg') AS TEXT))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON CAST(LTRIM(vt0.c0) AS REAL) GROUP BY t0.c0, vt0.c0 HAVING (NOT (((((COUNT(*))AND((vt0.c0 IN ()))))OR(CAST(MAX('Fg') AS TEXT))))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON CAST(LTRIM(vt0.c0) AS REAL) GROUP BY t0.c0, vt0.c0 HAVING ((((((COUNT(*))AND((vt0.c0 IN ()))))OR(CAST(MAX('Fg') AS TEXT)))) ISNULL);
SELECT t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON CAST(LTRIM(vt0.c0) AS REAL) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) IS TRUE)) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) IS TRUE)))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) IS TRUE)) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((LIKELY(t0.c0) IN ())) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((LIKELY(t0.c0) IN ())))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((LIKELY(t0.c0) IN ())) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((- (t0.c0 COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((- (t0.c0 COLLATE RTRIM))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((- (t0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT SUM((((vt0.c0 IN ()))||((NULL IN ())))) FROM vt0, t0;
SELECT * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE (t0.c0) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE (((t0.c0) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN (vt0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE (((~ (vt0.c0)) IN ())) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT (((~ (vt0.c0)) IN ())))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE (((((~ (vt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN((((vt0.c0))<>((vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN((((vt0.c0))<>((vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN((((vt0.c0))<>((vt0.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN((((vt0.c0))<>((vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN((((vt0.c0))<>((vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN((((vt0.c0))<>((vt0.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL TOTAL(CASE 0.24628323559296628  WHEN (+ (vt0.c0)) THEN (+ (vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 THEN ABS(DISTINCT vt0.c0) END) FROM vt0 ORDER BY ((vt0.c0)<=(CAST('[Bjd	Y\*S' AS REAL))) DESC  NULLS FIRST;
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((t0.c0 IN ('!s?厲')) COLLATE BINARY) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((t0.c0 IN ('!s?厲')) COLLATE BINARY))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0 IN ('!s?厲')) COLLATE BINARY) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)))IS('%P'))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)))IS('%P'))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)))IS('%P'))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS TEXT)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 COLLATE RTRIM AS TEXT)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 COLLATE RTRIM AS TEXT)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CASE WHEN MAX(t0.c0) THEN t0.c0 END COLLATE NOCASE UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CASE WHEN MAX(t0.c0) THEN t0.c0 END COLLATE NOCASE)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CASE WHEN MAX(t0.c0) THEN t0.c0 END COLLATE NOCASE) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CASE WHEN MAX(t0.c0) THEN t0.c0 END COLLATE NOCASE UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CASE WHEN MAX(t0.c0) THEN t0.c0 END COLLATE NOCASE)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CASE WHEN MAX(t0.c0) THEN t0.c0 END COLLATE NOCASE) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((((((((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))AND((t0.c0 IN ()))))AND(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))OR(vt0.c0));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((((((((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))AND((t0.c0 IN ()))))AND(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))OR(vt0.c0)) WHERE (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((((((((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))AND((t0.c0 IN ()))))AND(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))OR(vt0.c0)) WHERE ((NOT (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((((((((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))AND((t0.c0 IN ()))))AND(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))OR(vt0.c0)) WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY) ISNULL));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((((((((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))AND((t0.c0 IN ()))))AND(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))OR(vt0.c0));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0 IN (t0.c0)))IS(LIKELIHOOD(t0.c0, 0.6276307443204346)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((t0.c0 IN (t0.c0)))IS(LIKELIHOOD(t0.c0, 0.6276307443204346)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0 IN (t0.c0)))IS(LIKELIHOOD(t0.c0, 0.6276307443204346)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING COUNT(vt0.c0 COLLATE BINARY) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (COUNT(vt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 NOT INDEXED GROUP BY t0.c0, vt0.c0 HAVING ((COUNT(vt0.c0 COLLATE BINARY)) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING COUNT(vt0.c0 COLLATE BINARY) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (COUNT(vt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 NOT INDEXED GROUP BY t0.c0, vt0.c0 HAVING ((COUNT(vt0.c0 COLLATE BINARY)) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON CASE vt0.c0  WHEN -668949440 THEN (t0.c0 IN ()) END;
SELECT ALL t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON CASE vt0.c0  WHEN -668949440 THEN (t0.c0 IN ()) END WHERE ((vt0.c0 COLLATE RTRIM IN ())) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON CASE vt0.c0  WHEN -668949440 THEN (t0.c0 IN ()) END WHERE ((NOT ((vt0.c0 COLLATE RTRIM IN ())))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON CASE vt0.c0  WHEN -668949440 THEN (t0.c0 IN ()) END WHERE ((((vt0.c0 COLLATE RTRIM IN ())) ISNULL));
SELECT ALL t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON CASE vt0.c0  WHEN -668949440 THEN (t0.c0 IN ()) END;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (1928616446) AND (t0.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (1928616446) AND (t0.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (1928616446) AND (t0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0)OR(vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('-927133386')))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0)OR(vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('-927133386')))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0)OR(vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('-927133386')))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(SUM(COUNT(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(SUM(COUNT(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(SUM(COUNT(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM t0, vt0;
SELECT ALL vt0.c0 FROM t0, vt0 WHERE ('4卮H?') UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 WHERE ((NOT ('4卮H?'))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 WHERE ((('4卮H?') ISNULL));
SELECT ALL vt0.c0 FROM t0, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (COALESCE(DISTINCT ((']\v,,P觢|')-(t0.c0)), ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (COALESCE(DISTINCT ((']\v,,P觢|')-(t0.c0)), ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((COALESCE(DISTINCT ((']\v,,P觢|')-(t0.c0)), ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((+ (vt0.c0 COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((+ (vt0.c0 COLLATE NOCASE))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((+ (vt0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(GROUP_CONCAT(COUNT(*)) AS BLOB) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(GROUP_CONCAT(COUNT(*)) AS BLOB))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(GROUP_CONCAT(COUNT(*)) AS BLOB)) ISNULL);
SELECT SUM(vt0.c0) FROM vt0, t0 ORDER BY (- ((((vt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) ASC  NULLS LAST;
SELECT vt0.c0, t0.c0 FROM vt0, t0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE (CASE WHEN CAST(vt0.c0 AS REAL) THEN -151136974 WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN CAST(t0.c0 AS BLOB) WHEN (0.5599114414499394 IN (vt0.c0)) THEN ((NULL)&(t0.c0)) ELSE CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END END) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT (CASE WHEN CAST(vt0.c0 AS REAL) THEN -151136974 WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN CAST(t0.c0 AS BLOB) WHEN (0.5599114414499394 IN (vt0.c0)) THEN ((NULL)&(t0.c0)) ELSE CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END END))) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE (((CASE WHEN CAST(vt0.c0 AS REAL) THEN -151136974 WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN CAST(t0.c0 AS BLOB) WHEN (0.5599114414499394 IN (vt0.c0)) THEN ((NULL)&(t0.c0)) ELSE CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END END) ISNULL));
SELECT vt0.c0, t0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN t0 ON NULL;
SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN t0 ON NULL WHERE (((((((t0.c0)<=(t0.c0)))OR((- (t0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN t0 ON NULL WHERE ((NOT (((((((t0.c0)<=(t0.c0)))OR((- (t0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN t0 ON NULL WHERE (((((((((t0.c0)<=(t0.c0)))OR((- (t0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN t0 ON NULL;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 WHERE (LOWER(DISTINCT CAST(vt0.c0 AS BLOB))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, vt0 WHERE ((NOT (LOWER(DISTINCT CAST(vt0.c0 AS BLOB))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt0 NOT INDEXED WHERE (((LOWER(DISTINCT CAST(vt0.c0 AS BLOB))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (((GROUP_CONCAT(GROUP_CONCAT(MIN(vt0.c0))) IN (t0.c0)))LIKE(COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (NOT ((((GROUP_CONCAT(GROUP_CONCAT(MIN(vt0.c0))) IN (t0.c0)))LIKE(COUNT(*))))) UNION ALL SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (((((GROUP_CONCAT(GROUP_CONCAT(MIN(vt0.c0))) IN (t0.c0)))LIKE(COUNT(*)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS TEXT)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST(vt0.c0 COLLATE RTRIM AS TEXT)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 COLLATE RTRIM AS TEXT)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0) ISNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0)<<(vt0.c0)) AS BLOB)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0)<<(vt0.c0)) AS BLOB)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0)<<(vt0.c0)) AS BLOB)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (COUNT(GROUP_CONCAT(MAX(x''))) IN ()) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((COUNT(GROUP_CONCAT(MAX(x''))) IN ()))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((COUNT(GROUP_CONCAT(MAX(x''))) IN ())) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (COUNT(GROUP_CONCAT(MAX(x''))) IN ()) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((COUNT(GROUP_CONCAT(MAX(x''))) IN ()))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((COUNT(GROUP_CONCAT(MAX(x''))) IN ())) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE (2.096356547E9) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT (2.096356547E9))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE (((2.096356547E9) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 IN (vt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE (load_extension((t0.c0 IN (t0.c0, vt0.c0)), (+ (t0.c0)))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT (load_extension((t0.c0 IN (t0.c0, vt0.c0)), (+ (t0.c0)))))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE (((load_extension((t0.c0 IN (t0.c0, vt0.c0)), (+ (t0.c0)))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING MAX(MAX(SUM(vt0.c0))) UNION ALL SELECT vt0.c0 FROM t0, vt0 NOT INDEXED GROUP BY vt0.c0 HAVING (NOT (MAX(MAX(SUM(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((MAX(MAX(SUM(vt0.c0)))) ISNULL);
SELECT * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE ((((NOT (t0.c0))) IS TRUE)) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT ((((NOT (t0.c0))) IS TRUE)))) UNION ALL SELECT * FROM vt0, t0 WHERE ((((((NOT (t0.c0))) IS TRUE)) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0 NATURAL JOIN t0;
SELECT DISTINCT vt0.c0 FROM vt0 NATURAL JOIN t0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))=(CASE WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN '-1198411148' ELSE vt0.c0 END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 NATURAL JOIN t0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))==(CASE WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN '-1198411148' ELSE vt0.c0 END))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 NATURAL JOIN t0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))==(CASE WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN '-1198411148' ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 NATURAL JOIN t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING CASE vt0.c0  WHEN COUNT(COUNT(COUNT(vt0.c0))) THEN AVG(COUNT(*)) WHEN AVG(vt0.c0) THEN ((MIN(TOTAL(0.3652715175688188)))%(vt0.c0)) WHEN ((vt0.c0)OR(COUNT(GROUP_CONCAT(t0.c0)))) THEN CAST(MAX(t0.c0) AS NUMERIC) ELSE COUNT(*) END UNION ALL SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING (NOT (CASE vt0.c0  WHEN COUNT(COUNT(COUNT(vt0.c0))) THEN AVG(COUNT(*)) WHEN AVG(vt0.c0) THEN ((MIN(TOTAL(0.3652715175688188)))%(vt0.c0)) WHEN ((vt0.c0)OR(COUNT(GROUP_CONCAT(t0.c0)))) THEN CAST(MAX(t0.c0) AS NUMERIC) ELSE COUNT(*) END)) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING ((CASE vt0.c0  WHEN COUNT(COUNT(COUNT(vt0.c0))) THEN AVG(COUNT(*)) WHEN AVG(vt0.c0) THEN ((MIN(TOTAL(0.3652715175688188)))%(vt0.c0)) WHEN ((vt0.c0)OR(COUNT(GROUP_CONCAT(t0.c0)))) THEN CAST(MAX(t0.c0) AS NUMERIC) ELSE COUNT(*) END) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ('') UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (''))) UNION ALL SELECT ALL * FROM vt0 WHERE ((('') ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (INSTR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), CAST(vt0.c0 AS REAL))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (INSTR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), CAST(vt0.c0 AS REAL))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((INSTR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), CAST(vt0.c0 AS REAL))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE (((vt0.c0) IS TRUE) COLLATE NOCASE) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT (((vt0.c0) IS TRUE) COLLATE NOCASE))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE (((((vt0.c0) IS TRUE) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(MAX(MAX(COUNT(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(MAX(MAX(COUNT(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(MAX(MAX(COUNT(t0.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS TEXT)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 COLLATE BINARY AS TEXT)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 COLLATE BINARY AS TEXT)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 WHERE ((vt0.c0 COLLATE BINARY IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt0 WHERE ((NOT ((vt0.c0 COLLATE BINARY IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt0 WHERE ((((vt0.c0 COLLATE BINARY IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (+ (COUNT(*))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (+ (COUNT(*))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT ALL * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((t0.c0) BETWEEN (vt0.c0) AND (t0.c0))) AND (((vt0.c0)=(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT ((((vt0.c0 IN ())) NOT BETWEEN (((t0.c0) BETWEEN (vt0.c0) AND (t0.c0))) AND (((vt0.c0)=(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.c0 IN ())) NOT BETWEEN (((t0.c0) BETWEEN (vt0.c0) AND (t0.c0))) AND (((vt0.c0)=(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT t0.c0 FROM t0, vt0;
SELECT DISTINCT t0.c0 FROM t0, vt0 WHERE ((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0)))) UNION SELECT DISTINCT t0.c0 FROM t0, vt0 WHERE ((NOT ((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0, vt0 WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST((((vt0.c0)) NOT BETWEEN ((x'')) AND ((0.5672241946911123))) AS BLOB)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST((((vt0.c0)) NOT BETWEEN ((x'')) AND ((0.5672241946911123))) AS BLOB)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST((((vt0.c0)) NOT BETWEEN ((x'')) AND ((0.5672241946911123))) AS BLOB)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0 FROM t0 CROSS JOIN vt0 ON CAST(t0.c0 COLLATE BINARY AS NUMERIC) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 CROSS JOIN vt0 ON CAST(t0.c0 COLLATE BINARY AS NUMERIC) GROUP BY t0.c0 HAVING ((((COUNT(*))OR(TOTAL(vt0.c0))))OR(COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 CROSS JOIN vt0 ON CAST(t0.c0 COLLATE BINARY AS NUMERIC) GROUP BY t0.c0 HAVING (NOT (((((COUNT(*))OR(TOTAL(vt0.c0))))OR(COUNT(*))))) UNION ALL SELECT t0.c0 FROM t0 CROSS JOIN vt0 ON CAST(t0.c0 COLLATE BINARY AS NUMERIC) GROUP BY t0.c0 HAVING ((((((COUNT(*))OR(TOTAL(vt0.c0))))OR(COUNT(*)))) ISNULL);
SELECT t0.c0 FROM t0 CROSS JOIN vt0 ON CAST(t0.c0 COLLATE BINARY AS NUMERIC) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 CROSS JOIN vt0 ON CAST(t0.c0 COLLATE BINARY AS NUMERIC) GROUP BY t0.c0 HAVING ((((COUNT(*))OR(TOTAL(vt0.c0))))OR(COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 CROSS JOIN vt0 ON CAST(t0.c0 COLLATE BINARY AS NUMERIC) GROUP BY t0.c0 HAVING (NOT (((((COUNT(*))OR(TOTAL(vt0.c0))))OR(COUNT(*))))) UNION ALL SELECT t0.c0 FROM t0 CROSS JOIN vt0 ON CAST(t0.c0 COLLATE BINARY AS NUMERIC) GROUP BY t0.c0 HAVING ((((((COUNT(*))OR(TOTAL(vt0.c0))))OR(COUNT(*)))) ISNULL);
SELECT t0.c0 FROM t0 CROSS JOIN vt0 ON CAST(t0.c0 COLLATE BINARY AS NUMERIC) GROUP BY t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM))) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0 COLLATE BINARY)AND(CAST(t0.c0 AS TEXT))))OR((t0.c0 IN (t0.c0, t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0 COLLATE BINARY)AND(CAST(t0.c0 AS TEXT))))OR((t0.c0 IN (t0.c0, t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0 COLLATE BINARY)AND(CAST(t0.c0 AS TEXT))))OR((t0.c0 IN (t0.c0, t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (LOWER(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (LOWER(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((LOWER(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (- (MIN(COUNT(MAX(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((- (MIN(COUNT(MAX(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((- (MIN(COUNT(MAX(vt0.c0)))))) ISNULL);
SELECT vt0.c0 FROM vt0, t0;
SELECT vt0.c0 FROM vt0, t0 WHERE (vt0.c0 COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 WHERE ((NOT (vt0.c0 COLLATE NOCASE))) UNION ALL SELECT vt0.c0 FROM vt0, t0 WHERE (((vt0.c0 COLLATE NOCASE) ISNULL));
SELECT vt0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE (((vt0.c0)<=(COALESCE(DISTINCT t0.c0, vt0.c0, vt0.c0, t0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ((NOT (((vt0.c0)<=(COALESCE(DISTINCT t0.c0, vt0.c0, vt0.c0, t0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE (((((vt0.c0)<=(COALESCE(DISTINCT t0.c0, vt0.c0, vt0.c0, t0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT ALL t0.c0 FROM vt0, t0 INDEXED BY i43 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 INDEXED BY i43 WHERE ((- (t0.c0)) COLLATE RTRIM) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 INDEXED BY i43 WHERE ((NOT ((- (t0.c0)) COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 INDEXED BY i43 WHERE ((((- (t0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 INDEXED BY i43 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((t0.c0)) BETWEEN (((+ (t0.c0)))) AND (((NOT (t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((t0.c0)) BETWEEN (((+ (t0.c0)))) AND (((NOT (t0.c0))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((t0.c0)) BETWEEN (((+ (t0.c0)))) AND (((NOT (t0.c0)))))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((t0.c0)) BETWEEN (((+ (t0.c0)))) AND (((NOT (t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((t0.c0)) BETWEEN (((+ (t0.c0)))) AND (((NOT (t0.c0))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((t0.c0)) BETWEEN (((+ (t0.c0)))) AND (((NOT (t0.c0)))))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))) AND (961169940 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))) AND (961169940 COLLATE NOCASE))))) UNION ALL SELECT * FROM t0 WHERE ((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))) AND (961169940 COLLATE NOCASE))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((('') NOT NULL)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((('') NOT NULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((('') NOT NULL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 WHERE (x'338d') GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 WHERE ((NOT (x'338d'))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt0, t0 WHERE (((x'338d') ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (SUM(vt0.c0) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((SUM(vt0.c0) IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((SUM(vt0.c0) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (SUM(vt0.c0) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((SUM(vt0.c0) IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((SUM(vt0.c0) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL MIN((((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, '-1339025300'))))GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0)) COLLATE RTRIM) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((~ (vt0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (((((vt0.c0)*(t0.c0))) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (0xffffffff96058c17))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (((((vt0.c0)*(t0.c0))) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (0Xffffffff96058c17))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((((((vt0.c0)*(t0.c0))) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (0xffffffff96058c17))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((CAST(t0.c0 AS NUMERIC))OR((~ (t0.c0)))))AND((~ (t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((CAST(t0.c0 AS NUMERIC))OR((~ (t0.c0)))))AND((~ (t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((CAST(t0.c0 AS NUMERIC))OR((~ (t0.c0)))))AND((~ (t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM vt0 INNER JOIN t0 ON (((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0))))!=((t0.c0 COLLATE BINARY))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 INNER JOIN t0 ON (((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0))))!=((t0.c0 COLLATE BINARY))) GROUP BY vt0.c0 HAVING SUM((- (MAX(COUNT(COUNT(t0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 INNER JOIN t0 ON (((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0))))<>((t0.c0 COLLATE BINARY))) GROUP BY vt0.c0 HAVING (NOT (SUM((- (MAX(COUNT(COUNT(t0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 INNER JOIN t0 ON (((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0))))<>((t0.c0 COLLATE BINARY))) GROUP BY vt0.c0 HAVING ((SUM((- (MAX(COUNT(COUNT(t0.c0))))))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((((t0.c0)>=(t0.c0)))IS NOT(NULL))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((t0.c0)>=(t0.c0)))IS NOT(NULL))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((t0.c0)>=(t0.c0)))IS NOT(NULL))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0)OR(t0.c0)))OR(t0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)OR(t0.c0)))OR(t0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))OR(t0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (HEX(DISTINCT vt0.c0 COLLATE NOCASE)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (HEX(DISTINCT vt0.c0 COLLATE NOCASE)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((HEX(DISTINCT vt0.c0 COLLATE NOCASE)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL TOTAL(CASE WHEN -854506699 THEN vt0.c0 WHEN '-138344728' THEN ((x'') BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) NOT NULL) THEN (((t0.c0))<((vt0.c0))) WHEN x'' THEN ((vt0.c0)!=(vt0.c0)) WHEN ((((t0.c0)OR(vt0.c0)))OR(x'')) THEN CAST(t0.c0 AS INTEGER) ELSE (t0.c0 IN ()) END) FROM vt0, t0;
SELECT ALL vt0.c0, t0.c0 FROM vt0 NOT INDEXED, t0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE (IFNULL(DISTINCT t0.c0 COLLATE RTRIM, t0.c0 COLLATE NOCASE)) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT (IFNULL(DISTINCT t0.c0 COLLATE RTRIM, t0.c0 COLLATE NOCASE)))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE (((IFNULL(DISTINCT t0.c0 COLLATE RTRIM, t0.c0 COLLATE NOCASE)) ISNULL));
SELECT ALL vt0.c0, t0.c0 FROM vt0 NOT INDEXED, t0;
SELECT DISTINCT t0.c0 FROM t0, vt0;
SELECT DISTINCT t0.c0 FROM t0, vt0 WHERE ((((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0))))LIKE(((t0.c0) IS FALSE)))) UNION SELECT DISTINCT t0.c0 FROM t0, vt0 WHERE ((NOT ((((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0))))LIKE(((t0.c0) IS FALSE)))))) UNION SELECT DISTINCT t0.c0 FROM t0, vt0 WHERE ((((((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0))))LIKE(((t0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, vt0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT (COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, x'')))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT ((NOT (COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, x'')))))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((((NOT (COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, x'')))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE (((((((t0.c0)AND(vt0.c0)))OR(((NULL)/(t0.c0)))))AND(((vt0.c0)<<(vt0.c0))))) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT (((((((t0.c0)AND(vt0.c0)))OR(((NULL)/(t0.c0)))))AND(((vt0.c0)<<(vt0.c0))))))) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE (((((((((t0.c0)AND(vt0.c0)))OR(((NULL)/(t0.c0)))))AND(((vt0.c0)<<(vt0.c0))))) ISNULL));
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)<(vt0.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)<(vt0.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)<(vt0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CAST(((t0.c0)/(t0.c0)) AS INTEGER)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST(((t0.c0)/(t0.c0)) AS INTEGER)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST(((t0.c0)/(t0.c0)) AS INTEGER)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING MAX(vt0.c0) COLLATE NOCASE UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (MAX(vt0.c0) COLLATE NOCASE)) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING ((MAX(vt0.c0) COLLATE NOCASE) ISNULL);
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING MAX(vt0.c0) COLLATE NOCASE UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (MAX(vt0.c0) COLLATE NOCASE)) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING ((MAX(vt0.c0) COLLATE NOCASE) ISNULL);
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((((((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))AND((NOT (t0.c0)))))OR(t0.c0))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))AND((NOT (t0.c0)))))OR(t0.c0))))) UNION ALL SELECT * FROM t0 WHERE ((((((((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))AND((NOT (t0.c0)))))OR(t0.c0))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0)==('%.Up')) IN ((t0.c0 IN ()), CASE WHEN 0Xfffffffff2516294 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((t0.c0)=('%.Up')) IN ((t0.c0 IN ()), CASE WHEN 0Xfffffffff2516294 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0)==('%.Up')) IN ((t0.c0 IN ()), CASE WHEN 0xfffffffff2516294 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 WHERE ((((vt0.c0 IN ())) NOTNULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt0 WHERE ((NOT ((((vt0.c0 IN ())) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt0 WHERE ((((((vt0.c0 IN ())) NOTNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) GROUP BY t0.c0, vt0.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) GROUP BY t0.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) GROUP BY t0.c0, vt0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((- (vt0.c0)))AND(vt0.c0 COLLATE RTRIM))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((- (vt0.c0)))AND(vt0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((- (vt0.c0)))AND(vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM t0 NATURAL JOIN vt0 WHERE ((((vt0.c0)) BETWEEN ((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))) AND ((((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))))) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))) AND ((((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))))))) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN vt0 WHERE ((((((vt0.c0)) BETWEEN ((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))) AND ((((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0 NATURAL JOIN vt0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((((vt0.c0)) NOT BETWEEN ((LOWER(DISTINCT vt0.c0))) AND (((- (vt0.c0)))))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((LOWER(DISTINCT vt0.c0))) AND (((- (vt0.c0)))))))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((((((vt0.c0)) NOT BETWEEN ((LOWER(DISTINCT vt0.c0))) AND (((- (vt0.c0)))))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(SUM(GROUP_CONCAT(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(SUM(GROUP_CONCAT(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(SUM(GROUP_CONCAT(t0.c0)))) ISNULL);
SELECT ALL MIN(((t0.c0) IS TRUE)) FROM t0, vt0;
SELECT ALL * FROM vt0, t0 NOT INDEXED;
SELECT * FROM vt0, t0 WHERE (CAST(vt0.c0 COLLATE BINARY AS REAL)) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT (CAST(vt0.c0 COLLATE BINARY AS REAL)))) UNION ALL SELECT * FROM vt0, t0 WHERE (((CAST(vt0.c0 COLLATE BINARY AS REAL)) ISNULL));
SELECT ALL * FROM vt0, t0 NOT INDEXED;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (vt0.c0) AND (vt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((- (vt0.c0))) NOT BETWEEN (vt0.c0) AND (vt0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((- (vt0.c0))) NOT BETWEEN (vt0.c0) AND (vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0))>=(('(()8fI'''))))) AND ((((0.28330326187150634)IS(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN (((((vt0.c0))>=(('(()8fI'''))))) AND ((((0.28330326187150634)IS(vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN (((((vt0.c0))>=(('(()8fI'''))))) AND ((((0.28330326187150634)IS(vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ABS(CASE WHEN t0.c0 THEN TOTAL(AVG(t0.c0)) ELSE t0.c0 END) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (ABS(CASE WHEN t0.c0 THEN TOTAL(AVG(t0.c0)) ELSE t0.c0 END))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((ABS(CASE WHEN t0.c0 THEN TOTAL(AVG(t0.c0)) ELSE t0.c0 END)) ISNULL);
SELECT vt0.c0, t0.c0 FROM t0, vt0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE (t0.c0) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT (t0.c0))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE (((t0.c0) ISNULL));
SELECT vt0.c0, t0.c0 FROM t0, vt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (ABS(UPPER('-862537336'))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (ABS(UPPER('-862537336'))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((ABS(UPPER('-862537336'))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE ((((t0.c0) NOTNULL) IN ())) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT ((((t0.c0) NOTNULL) IN ())))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE ((((((t0.c0) NOTNULL) IN ())) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING t0.c0 UNION ALL SELECT ALL vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING t0.c0 UNION ALL SELECT ALL vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS TEXT) COLLATE RTRIM))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT) COLLATE RTRIM) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((DATE(vt0.c0, vt0.c0, 0.8875564753168356, vt0.c0, vt0.c0) IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((DATE(vt0.c0, vt0.c0, 0.8875564753168356, vt0.c0, vt0.c0) IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((DATE(vt0.c0, vt0.c0, 0.8875564753168356, vt0.c0, vt0.c0) IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0)==(vt0.c0)))AND(((vt0.c0) ISNULL))))AND(((vt0.c0) ISNULL))))AND(((vt0.c0)IS(vt0.c0)))))AND(((vt0.c0) ISNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((((vt0.c0)=(vt0.c0)))AND(((vt0.c0) ISNULL))))AND(((vt0.c0) ISNULL))))AND(((vt0.c0)IS(vt0.c0)))))AND(((vt0.c0) ISNULL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((((vt0.c0)==(vt0.c0)))AND(((vt0.c0) ISNULL))))AND(((vt0.c0) ISNULL))))AND(((vt0.c0)IS(vt0.c0)))))AND(((vt0.c0) ISNULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((((t0.c0))!=((x'17ad'))) IN ((t0.c0 IN (t0.c0, t0.c0))))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((t0.c0))<>((x'17ad'))) IN ((t0.c0 IN (t0.c0, t0.c0))))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((t0.c0))<>((x'17ad'))) IN ((t0.c0 IN (t0.c0, t0.c0))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN (((vt0.c0, vt0.c0, 371445703)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN UNLIKELY(0.27161103634805184) END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE vt0.c0 COLLATE BINARY  WHEN (((vt0.c0, vt0.c0, 371445703)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN UNLIKELY(0.27161103634805184) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE vt0.c0 COLLATE BINARY  WHEN (((vt0.c0, vt0.c0, 371445703)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN UNLIKELY(0.27161103634805184) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) IS TRUE)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS INTEGER)) IS TRUE)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER)) IS TRUE)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0 FROM vt0, t0 INDEXED BY i43 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 INDEXED BY i43 GROUP BY t0.c0 HAVING SUM(vt0.c0) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 INDEXED BY i43 GROUP BY t0.c0 HAVING (NOT (SUM(vt0.c0))) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 INDEXED BY i43 GROUP BY t0.c0 HAVING ((SUM(vt0.c0)) ISNULL);
SELECT ALL t0.c0 FROM vt0, t0 INDEXED BY i43 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 INDEXED BY i43 GROUP BY t0.c0 HAVING SUM(vt0.c0) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 INDEXED BY i43 GROUP BY t0.c0 HAVING (NOT (SUM(vt0.c0))) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 INDEXED BY i43 GROUP BY t0.c0 HAVING ((SUM(vt0.c0)) ISNULL);
SELECT ALL t0.c0 FROM vt0, t0 INDEXED BY i43 GROUP BY t0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS INTEGER)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST(((vt0.c0) IS FALSE) AS INTEGER)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(((vt0.c0) IS FALSE) AS INTEGER)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((('|%FnI5')-(vt0.c0)))*((((vt0.c0))<=((-2105805503)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((('|%FnI5')-(vt0.c0)))*((((vt0.c0))<=((-2105805503)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((('|%FnI5')-(vt0.c0)))*((((vt0.c0))<=((-2105805503)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((HEX(DISTINCT vt0.c0) IN ())) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT ((HEX(DISTINCT vt0.c0) IN ())))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE ((((HEX(DISTINCT vt0.c0) IN ())) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING TOTAL(((vt0.c0) NOT BETWEEN (vt0.c0) AND (COUNT(MIN(t0.c0))))) UNION ALL SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(((vt0.c0) NOT BETWEEN (vt0.c0) AND (COUNT(MIN(t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING ((TOTAL(((vt0.c0) NOT BETWEEN (vt0.c0) AND (COUNT(MIN(t0.c0)))))) ISNULL);
SELECT vt0.c0, t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON COALESCE(DISTINCT CASE WHEN vt0.c0 THEN t0.c0 END, ((vt0.c0)>=(vt0.c0)));
SELECT ALL vt0.c0, t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON COALESCE(DISTINCT CASE WHEN vt0.c0 THEN t0.c0 END, ((vt0.c0)>=(vt0.c0))) WHERE (vt0.c0) UNION ALL SELECT vt0.c0, t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON COALESCE(DISTINCT CASE WHEN vt0.c0 THEN t0.c0 END, ((vt0.c0)>=(vt0.c0))) WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON COALESCE(DISTINCT CASE WHEN vt0.c0 THEN t0.c0 END, ((vt0.c0)>=(vt0.c0))) WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0, t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON COALESCE(DISTINCT CASE WHEN vt0.c0 THEN t0.c0 END, ((vt0.c0)>=(vt0.c0)));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE ((t0.c0)>>(t0.c0))  WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN 'j1BD5' COLLATE BINARY WHEN ((t0.c0) NOT NULL) THEN ((t0.c0) IS FALSE) WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN t0.c0 COLLATE NOCASE END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE ((t0.c0)>>(t0.c0))  WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN 'j1BD5' COLLATE BINARY WHEN ((t0.c0) NOT NULL) THEN ((t0.c0) IS FALSE) WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN t0.c0 COLLATE NOCASE END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE ((t0.c0)>>(t0.c0))  WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN 'j1BD5' COLLATE BINARY WHEN ((t0.c0) NOT NULL) THEN ((t0.c0) IS FALSE) WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN t0.c0 COLLATE NOCASE END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((((((NOT (vt0.c0)))OR('')))AND(vt0.c0 COLLATE RTRIM))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT ((((((NOT (vt0.c0)))OR('')))AND(vt0.c0 COLLATE RTRIM))))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((((((((NOT (vt0.c0)))OR('')))AND(vt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0 INNER JOIN t0 ON (((vt0.c0)/(vt0.c0)) IN ()) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0 INNER JOIN t0 ON (((vt0.c0)/(vt0.c0)) IN ()) GROUP BY t0.c0, vt0.c0 HAVING (((t0.c0)) BETWEEN (((t0.c0 IN (t0.c0)))) AND ((COUNT(*)))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0 INNER JOIN t0 ON (((vt0.c0)/(vt0.c0)) IN ()) GROUP BY t0.c0, vt0.c0 HAVING (NOT ((((t0.c0)) BETWEEN (((t0.c0 IN (t0.c0)))) AND ((COUNT(*)))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0 INNER JOIN t0 ON (((vt0.c0)/(vt0.c0)) IN ()) GROUP BY t0.c0, vt0.c0 HAVING (((((t0.c0)) BETWEEN (((t0.c0 IN (t0.c0)))) AND ((COUNT(*))))) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM vt0 INNER JOIN t0 ON (((vt0.c0)/(vt0.c0)) IN ()) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0 INNER JOIN t0 ON (((vt0.c0)/(vt0.c0)) IN ()) GROUP BY t0.c0, vt0.c0 HAVING (((t0.c0)) BETWEEN (((t0.c0 IN (t0.c0)))) AND ((COUNT(*)))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0 INNER JOIN t0 ON (((vt0.c0)/(vt0.c0)) IN ()) GROUP BY t0.c0, vt0.c0 HAVING (NOT ((((t0.c0)) BETWEEN (((t0.c0 IN (t0.c0)))) AND ((COUNT(*)))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0 INNER JOIN t0 ON (((vt0.c0)/(vt0.c0)) IN ()) GROUP BY t0.c0, vt0.c0 HAVING (((((t0.c0)) BETWEEN (((t0.c0 IN (t0.c0)))) AND ((COUNT(*))))) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM vt0 INNER JOIN t0 ON (((vt0.c0)/(vt0.c0)) IN ()) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0 FROM vt0, t0;
SELECT ALL t0.c0 FROM vt0, t0 WHERE (CASE WHEN t0.c0 THEN ((((vt0.c0)AND(t0.c0)))OR(t0.c0)) END) UNION ALL SELECT t0.c0 FROM vt0, t0 WHERE ((NOT (CASE WHEN t0.c0 THEN ((((vt0.c0)AND(t0.c0)))OR(t0.c0)) END))) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 WHERE (((CASE WHEN t0.c0 THEN ((((vt0.c0)AND(t0.c0)))OR(t0.c0)) END) ISNULL));
SELECT t0.c0 FROM vt0, t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((+ (((vt0.c0)|(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((+ (((vt0.c0)|(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((+ (((vt0.c0)|(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM t0, vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0 WHERE (((('D)奵KXKWS{') NOT BETWEEN (vt0.c0) AND (t0.c0)) IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt0 WHERE ((NOT (((('D)奵KXKWS{') NOT BETWEEN (vt0.c0) AND (t0.c0)) IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt0 WHERE (((((('D)奵KXKWS{') NOT BETWEEN (vt0.c0) AND (t0.c0)) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((STRFTIME(t0.c0, t0.c0, t0.c0))<>(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((STRFTIME(t0.c0, t0.c0, t0.c0))<>(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((STRFTIME(t0.c0, t0.c0, t0.c0))<>(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(LTRIM(t0.c0, t0.c0))))AND(''))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(LTRIM(t0.c0, t0.c0))))AND(''))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(LTRIM(t0.c0, t0.c0))))AND(''))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG('*E') UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG('*E'))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG('*E')) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG('*E') UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG('*E'))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG('*E')) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT MIN((~ ((- (vt0.c0))))) FROM vt0;
SELECT * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE (((((((((t0.c0)AND((+ (vt0.c0)))))AND((vt0.c0 IN (vt0.c0)))))OR(CAST(NULL AS INTEGER))))AND(((vt0.c0)<=(t0.c0))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT (((((((((t0.c0)AND((+ (vt0.c0)))))AND((vt0.c0 IN (vt0.c0)))))OR(CAST(NULL AS INTEGER))))AND(((vt0.c0)<=(t0.c0))))))) UNION ALL SELECT * FROM vt0, t0 WHERE (((((((((((t0.c0)AND((+ (vt0.c0)))))AND((vt0.c0 IN (vt0.c0)))))OR(CAST(NULL AS INTEGER))))AND(((vt0.c0)<=(t0.c0))))) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0 WHERE ((((~ (vt0.c0))) NOT NULL)) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT ((((~ (vt0.c0))) NOT NULL)))) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0 WHERE ((((((~ (vt0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)!=(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)<>(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)<>(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0 FROM t0, vt0;
SELECT t0.c0 FROM t0, vt0 WHERE (CAST(((((vt0.c0)OR(t0.c0)))OR(vt0.c0)) AS TEXT)) UNION ALL SELECT t0.c0 FROM t0, vt0 WHERE ((NOT (CAST(((((vt0.c0)OR(t0.c0)))OR(vt0.c0)) AS TEXT)))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 WHERE (((CAST(((((vt0.c0)OR(t0.c0)))OR(vt0.c0)) AS TEXT)) ISNULL));
SELECT ALL t0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ('-881006643') UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ((NOT ('-881006643'))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ((('-881006643') ISNULL));
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE (CAST((t0.c0 IN ()) AS BLOB)) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT (CAST((t0.c0 IN ()) AS BLOB)))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE (((CAST((t0.c0 IN ()) AS BLOB)) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((((MAX(vt0.c0)) IS TRUE))LIKE(((vt0.c0) NOT NULL))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (((((MAX(vt0.c0)) IS TRUE))LIKE(((vt0.c0) NOT NULL))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((((((MAX(vt0.c0)) IS TRUE))LIKE(((vt0.c0) NOT NULL)))) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((((MAX(vt0.c0)) IS TRUE))LIKE(((vt0.c0) NOT NULL))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (((((MAX(vt0.c0)) IS TRUE))LIKE(((vt0.c0) NOT NULL))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((((((MAX(vt0.c0)) IS TRUE))LIKE(((vt0.c0) NOT NULL)))) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE (((0X1810e56f) IS TRUE)) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT (((0X1810e56f) IS TRUE)))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((((0x1810e56f) IS TRUE)) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (SQLITE_VERSION()) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (SQLITE_VERSION()))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((SQLITE_VERSION()) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((- (CAST(t0.c0 AS NUMERIC)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((- (CAST(t0.c0 AS NUMERIC)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((- (CAST(t0.c0 AS NUMERIC)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT MIN(CAST(((t0.c0) IS FALSE) AS TEXT)) FROM t0;
SELECT ALL * FROM t0 INDEXED BY i43 CROSS JOIN vt0 ON CASE WHEN CAST(t0.c0 AS NUMERIC) THEN t0.c0 WHEN ((((vt0.c0)AND(vt0.c0)))AND(t0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(0xcafafa1)) WHEN t0.c0 COLLATE BINARY THEN (NOT ('1563371587')) END;
SELECT * FROM t0 INDEXED BY i43 CROSS JOIN vt0 ON CASE WHEN CAST(t0.c0 AS NUMERIC) THEN t0.c0 WHEN ((((vt0.c0)AND(vt0.c0)))AND(t0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(0xcafafa1)) WHEN t0.c0 COLLATE BINARY THEN (NOT ('1563371587')) END WHERE (((t0.c0 COLLATE BINARY) BETWEEN (2114838565) AND (CAST(vt0.c0 AS REAL)))) UNION ALL SELECT * FROM t0 INDEXED BY i43 CROSS JOIN vt0 ON CASE WHEN CAST(t0.c0 AS NUMERIC) THEN t0.c0 WHEN ((((vt0.c0)AND(vt0.c0)))AND(t0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(0xcafafa1)) WHEN t0.c0 COLLATE BINARY THEN (NOT ('1563371587')) END WHERE ((NOT (((t0.c0 COLLATE BINARY) BETWEEN (2114838565) AND (CAST(vt0.c0 AS REAL)))))) UNION ALL SELECT ALL * FROM t0 INDEXED BY i43 CROSS JOIN vt0 ON CASE WHEN CAST(t0.c0 AS NUMERIC) THEN t0.c0 WHEN ((((vt0.c0)AND(vt0.c0)))AND(t0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(0Xcafafa1)) WHEN t0.c0 COLLATE BINARY THEN (NOT ('1563371587')) END WHERE (((((t0.c0 COLLATE BINARY) BETWEEN (2114838565) AND (CAST(vt0.c0 AS REAL)))) ISNULL));
SELECT ALL * FROM t0 INDEXED BY i43 CROSS JOIN vt0 ON CASE WHEN CAST(t0.c0 AS NUMERIC) THEN t0.c0 WHEN ((((vt0.c0)AND(vt0.c0)))AND(t0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(0xcafafa1)) WHEN t0.c0 COLLATE BINARY THEN (NOT ('1563371587')) END;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0)|('0.061372792486491745'))) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)|('0.061372792486491745'))) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)|('0.061372792486491745'))) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (0.7645123287163816) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (0.7645123287163816))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((0.7645123287163816) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((t0.c0) ISNULL))==(CAST(AVG(MAX(t0.c0)) AS TEXT))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((t0.c0) ISNULL))=(CAST(AVG(MAX(t0.c0)) AS TEXT))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((t0.c0) ISNULL))=(CAST(AVG(MAX(t0.c0)) AS TEXT)))) ISNULL);
SELECT MIN(x'') FROM t0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (HEX('-447311213')) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (HEX('-447311213')))) UNION SELECT DISTINCT * FROM t0 WHERE (((HEX('-447311213')) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0)AND(((t0.c0)<>(NULL)))))OR(CAST(t0.c0 AS REAL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)AND(((t0.c0)!=(NULL)))))OR(CAST(t0.c0 AS REAL)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0)AND(((t0.c0)<>(NULL)))))OR(CAST(t0.c0 AS REAL)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(COUNT(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(COUNT(vt0.c0))) ISNULL);
SELECT ALL * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE (((t0.c0) NOTNULL) COLLATE BINARY) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT (((t0.c0) NOTNULL) COLLATE BINARY))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0) NOTNULL) COLLATE BINARY) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (x'') UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 WHERE ((- (((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 NOT INDEXED WHERE ((NOT ((- (((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt0, t0 WHERE ((((- (((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (+ (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (+ (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE (((((SQLITE_SOURCE_ID())AND(LIKELIHOOD(t0.c0, 0.36144552840381416))))AND(t0.c0 COLLATE RTRIM))) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT (((((SQLITE_SOURCE_ID())AND(LIKELIHOOD(t0.c0, 0.36144552840381416))))AND(t0.c0 COLLATE RTRIM))))) UNION ALL SELECT * FROM vt0, t0 WHERE (((((((SQLITE_SOURCE_ID())AND(LIKELIHOOD(t0.c0, 0.36144552840381416))))AND(t0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT vt0.c0, t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON ((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((((vt0.c0)OR(t0.c0)))OR(t0.c0))) AND (((vt0.c0)||(t0.c0))));
SELECT DISTINCT vt0.c0, t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON ((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((((vt0.c0)OR(t0.c0)))OR(t0.c0))) AND (((vt0.c0)||(t0.c0)))) WHERE (0xffffffffd05ce906) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON ((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((((vt0.c0)OR(t0.c0)))OR(t0.c0))) AND (((vt0.c0)||(t0.c0)))) WHERE ((NOT (0xffffffffd05ce906))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON ((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((((vt0.c0)OR(t0.c0)))OR(t0.c0))) AND (((vt0.c0)||(t0.c0)))) WHERE (((0Xffffffffd05ce906) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON ((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((((vt0.c0)OR(t0.c0)))OR(t0.c0))) AND (((vt0.c0)||(t0.c0))));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) IS FALSE)) BETWEEN ((((vt0.c0, '38799852', NULL, vt0.c0, '5N^NVG)'))>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) AND (LIKELIHOOD(NULL, 0.7242510017072529)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) IS FALSE)) BETWEEN ((((vt0.c0, '38799852', NULL, vt0.c0, '5N^NVG)'))>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) AND (LIKELIHOOD(NULL, 0.7242510017072529)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) IS FALSE)) BETWEEN ((((vt0.c0, '38799852', NULL, vt0.c0, '5N^NVG)'))>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) AND (LIKELIHOOD(NULL, 0.7242510017072529)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING CASE AVG(t0.c0)  WHEN '' THEN MAX(COUNT(COUNT(TOTAL(MAX(COUNT(SUM(vt0.c0))))))) END UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (NOT (CASE AVG(t0.c0)  WHEN '' THEN MAX(COUNT(COUNT(TOTAL(MAX(COUNT(SUM(vt0.c0))))))) END)) UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((CASE AVG(t0.c0)  WHEN '' THEN MAX(COUNT(COUNT(TOTAL(MAX(COUNT(SUM(vt0.c0))))))) END) ISNULL);
SELECT t0.c0, vt0.c0 FROM vt0, t0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE (t0.c0 COLLATE NOCASE) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (t0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE (((t0.c0 COLLATE NOCASE) ISNULL));
SELECT t0.c0, vt0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ((((((t0.c0))==((3.05494579E8))))>>(((t0.c0) NOTNULL)))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ((NOT ((((((t0.c0))==((3.05494579E8))))>>(((t0.c0) NOTNULL)))))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ((((((((t0.c0))=((3.05494579E8))))>>(((t0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 WHERE (vt0.c0) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM t0, vt0 WHERE ((NOT (vt0.c0))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(AVG(MAX(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(AVG(MAX(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(AVG(MAX(vt0.c0)))) ISNULL);
SELECT t0.c0, vt0.c0 FROM t0, vt0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 WHERE (t0.c0) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 NOT INDEXED WHERE (((t0.c0) ISNULL));
SELECT t0.c0, vt0.c0 FROM t0, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0 COLLATE BINARY) BETWEEN (625449898) AND (t0.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c0 COLLATE BINARY) BETWEEN (625449898) AND (t0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((t0.c0 COLLATE BINARY) BETWEEN (625449898) AND (t0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 NOT INDEXED WHERE ((NOT ((- (t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((NOT ((- (t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((NOT ((- (t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(MIN(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(MIN(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(MIN(vt0.c0))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (CAST(((t0.c0) IS FALSE) AS INTEGER)) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (CAST(((t0.c0) IS FALSE) AS INTEGER)))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((CAST(((t0.c0) IS FALSE) AS INTEGER)) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((0Xffffffff91b13a80)OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) ISNULL)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((0xffffffff91b13a80)OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) ISNULL)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((0xffffffff91b13a80)OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 WHERE ((((-2145825216, t0.c0, t0.c0)) NOT BETWEEN ((((((vt0.c0)OR(t0.c0)))AND(t0.c0)), TYPEOF(t0.c0), vt0.c0)) AND ((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0, ((t0.c0) IS TRUE))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t0 WHERE ((NOT ((((-2145825216, t0.c0, t0.c0)) NOT BETWEEN ((((((vt0.c0)OR(t0.c0)))AND(t0.c0)), TYPEOF(t0.c0), vt0.c0)) AND ((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0, ((t0.c0) IS TRUE))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t0 WHERE ((((((-2145825216, t0.c0, t0.c0)) NOT BETWEEN ((((((vt0.c0)OR(t0.c0)))AND(t0.c0)), TYPEOF(t0.c0), vt0.c0)) AND ((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0, ((t0.c0) IS TRUE))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(TOTAL(t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(TOTAL(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(TOTAL(t0.c0))) ISNULL);
SELECT ALL SUM(((((t0.c0)>>(t0.c0)))IS((((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0)))))) FROM vt0, t0;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (+ (QUOTE(vt0.c0)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (+ (QUOTE(vt0.c0))) WHERE (((CAST(t0.c0 AS REAL)) BETWEEN (t0.c0 COLLATE RTRIM) AND (LIKELIHOOD(vt0.c0, 0.6038480384229115)))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (+ (QUOTE(vt0.c0))) WHERE ((NOT (((CAST(t0.c0 AS REAL)) BETWEEN (t0.c0 COLLATE RTRIM) AND (LIKELIHOOD(vt0.c0, 0.6038480384229115)))))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (+ (QUOTE(vt0.c0))) WHERE (((((CAST(t0.c0 AS REAL)) BETWEEN (t0.c0 COLLATE RTRIM) AND (LIKELIHOOD(vt0.c0, 0.6038480384229115)))) ISNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (+ (QUOTE(vt0.c0)));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((- (vt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((- (vt0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((- (vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0 WHERE (((((((((vt0.c0)AND((((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0))))))OR(((vt0.c0)<<(vt0.c0)))))AND((NOT (vt0.c0)))))AND(TRIM(t0.c0, t0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t0 WHERE ((NOT (((((((((vt0.c0)AND((((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0))))))OR(((vt0.c0)<<(vt0.c0)))))AND((NOT (vt0.c0)))))AND(TRIM(t0.c0, t0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t0 WHERE (((((((((((vt0.c0)AND((((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0))))))OR(((vt0.c0)<<(vt0.c0)))))AND((NOT (vt0.c0)))))AND(TRIM(t0.c0, t0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(GROUP_CONCAT(COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(GROUP_CONCAT(COUNT(*)))) ISNULL);
SELECT ALL * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE ((+ (CAST(t0.c0 AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT ((+ (CAST(t0.c0 AS NUMERIC)))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((((+ (CAST(t0.c0 AS NUMERIC)))) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE TIME(vt0.c0, vt0.c0, vt0.c0)  WHEN (((vt0.c0, vt0.c0, NULL))>((vt0.c0, vt0.c0, vt0.c0))) THEN highlight(vt0.c0, vt0.c0, '9223372036854775807', vt0.c0) WHEN (+ (vt0.c0)) THEN ((((vt0.c0)OR('g躂')))OR(0.19394848256400565)) WHEN (vt0.c0 IN (vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((vt0.c0)/(vt0.c0)) THEN 0.6905928881093906 WHEN ((vt0.c0) NOT NULL) THEN (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) ELSE SQLITE_SOURCE_ID() END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE TIME(vt0.c0, vt0.c0, vt0.c0)  WHEN (((vt0.c0, vt0.c0, NULL))>((vt0.c0, vt0.c0, vt0.c0))) THEN highlight(vt0.c0, vt0.c0, '9223372036854775807', vt0.c0) WHEN (+ (vt0.c0)) THEN ((((vt0.c0)OR('g躂')))OR(0.19394848256400565)) WHEN (vt0.c0 IN (vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((vt0.c0)/(vt0.c0)) THEN 0.6905928881093906 WHEN ((vt0.c0) NOT NULL) THEN (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) ELSE SQLITE_SOURCE_ID() END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE TIME(vt0.c0, vt0.c0, vt0.c0)  WHEN (((vt0.c0, vt0.c0, NULL))>((vt0.c0, vt0.c0, vt0.c0))) THEN highlight(vt0.c0, vt0.c0, '9223372036854775807', vt0.c0) WHEN (+ (vt0.c0)) THEN ((((vt0.c0)OR('g躂')))OR(0.19394848256400565)) WHEN (vt0.c0 IN (vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((vt0.c0)/(vt0.c0)) THEN 0.6905928881093906 WHEN ((vt0.c0) NOT NULL) THEN (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) ELSE SQLITE_SOURCE_ID() END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
