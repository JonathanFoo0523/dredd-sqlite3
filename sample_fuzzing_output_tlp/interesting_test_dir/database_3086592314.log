-- Time: 2024/06/13 01:51:27
-- Database: database14
-- Database version: 3.40.0
-- seed value: 3086592314
PRAGMA cache_size = 50000; -- 15ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 INTEGER ); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, c3, c4); -- 1ms;
INSERT OR REPLACE INTO rt1(c3) VALUES (1003527199); -- 0ms;
INSERT OR FAIL INTO rt1(c0, c4, c2) VALUES ('z?E2iSI', NULL, 0.03668066758819577); -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c1) VALUES (x'', 0x3bd09c1f), (x'8467', '781928472'), (0.09768476719053898, ')W鰟p'); -- 0ms;
PRAGMA ignore_check_constraints = true; -- 0ms;
INSERT OR ABORT INTO rt1(c4, c0, c1) VALUES ('1003527199', x'16ef', '1870454259'), (0.587280984490753, 'W‪>*篩\)䠘8', ''), (x'', NULL, 'm[*|]k'); -- 0ms;
INSERT OR ABORT INTO rt0(c2, c1, c3) VALUES (0.9558851966971554, 'jti!~U볷)', NULL), ('-0.0', x'', NULL), (0.8708504835218674, '', 'XV'), (0.6586024764222318, '781928472', '170204803'), ('', 1.870454259E9, 0.21440172133059876), (NULL, '-2136533489', NULL), (0.6424241880253206, 0.13825558743414457, 0.587280984490753); -- 1ms;
INSERT OR ABORT INTO rt0(c2, c1) VALUES (x'9417', x''), ('', ' '), (0.6424241880253206, '-695918550'); -- 0ms;
PRAGMA temp.foreign_keys = true; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES (0.10224300262854713, '-', x'', 0.7453047017867829); -- 1ms;
ANALYZE; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO rt1(c1, c2) VALUES (NULL, x''), (0.5731741166681025, x'bc71'), (x'', 0Xffffffff89183594); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c4, c1) VALUES (NULL, '', NULL), (NULL, NULL, 0.7050392041827584), (0.3833706845052215, '1870454259', '-695918550'), (')w鰟p', NULL, 0.8495875357779732), ('{}', '篩o	Ynl 㖔Y', NULL); -- 0ms;
INSERT OR ABORT INTO rt1(c4, c2) VALUES (x'e198', ''); -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (NULL, '-', '0.7453047017867829', 0.6534466052778922, NULL); -- 0ms;
INSERT OR IGNORE INTO rt1(c0) VALUES (NULL); -- 0ms;
DROP TABLE rt1; -- 0ms;
CREATE VIEW v0(c0) AS SELECT DISTINCT (+ ((NOT (rt0.c0)))) FROM rt0 LIMIT 903163596 OFFSET -1698678248; -- 0ms;
PRAGMA recursive_triggers; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
VACUUM temp; -- 0ms;
REINDEX; -- 0ms;
PRAGMA main.cell_size_check = true; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR REPLACE INTO rt0(c3, c0) VALUES (1338335391, NULL); -- 0ms;
PRAGMA temp.stats; -- 0ms;
INSERT OR ABORT INTO rt0(c2, c3) VALUES (NULL, x''), (NULL, 0.6165146025740195), ('821898944', 0.7053249403566192), (x'4ebf', x''), ('0.03668066758819577', ''); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c3) VALUES (NULL, 0x7ea55c09), (NULL, 0x365b65e7), (0.14714362222945787, x''), (0.47718161034294226, 0.3816421241495025), (NULL, x''); -- 0ms;
PRAGMA ignore_check_constraints = false; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA temp.journal_mode = DELETE; -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (1588626462); -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 1ms;
PRAGMA main.automatic_index; -- 0ms;
END; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c0, c2) VALUES (x'', NULL, '424460378'); -- 0ms;
PRAGMA main.auto_vacuum; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 INSTEAD OF UPDATE OF c0 ON v0 FOR EACH ROW  BEGIN SELECT RAISE(IGNORE);UPDATE OR IGNORE vt0 SET (c0)=(x'') WHERE ((0.27168161982881267) BETWEEN (0.14714362222945787) AND (vt0.c0)) COLLATE NOCASE;UPDATE OR REPLACE vt0 SET (c0, c0)=(0Xffffffffd685202a, x'') WHERE (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR((- (NULL)))))OR(2.124766217E9));END; -- 0ms;
ANALYZE; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (0.3816421241495025); -- 0ms;
END; -- 0ms;
REINDEX; -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('(gSui-E'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
ANALYZE main; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c3) VALUES (-1595747252, NULL), ('Q?Ps㇇/4', 0.36250526465334654), (0.2422276897251694, NULL); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1887351943); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0xffffffffc2ae7c63), (']y '), ('1713181838'); -- 0ms;
PRAGMA short_column_names = false; -- 0ms;
PRAGMA main.wal_autocheckpoint = 291920320714318653; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=2124766217,11');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '14330'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 444649496); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (NULL); -- 0ms;
PRAGMA main.cell_size_check = false; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1, c2) VALUES (NULL, x'', '1870454259'); -- 0ms;
PRAGMA wal_autocheckpoint; -- 0ms;
COMMIT; -- 0ms;
PRAGMA temp.wal_autocheckpoint; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c3, c2) VALUES (0.14714362222945787, '-1994902124', '781928472'); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ANALYZE v0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1563818928);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ANALYZE vt0; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
PRAGMA cell_size_check; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((+ (vt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT ((+ (vt0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((+ (vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)|(v0.c0)))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))))OR(((((v0.c0)AND('_yS45,')))OR(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0)|(v0.c0)))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))))OR(((((v0.c0)AND('_yS45,')))OR(v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((((v0.c0)|(v0.c0)))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))))OR(((((v0.c0)AND('_yS45,')))OR(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c2, '867905898', rt0.c2)) BETWEEN ((v0.c0, ((rt0.c3) IS FALSE), 1.588626462E9)) AND (((- (rt0.c3)), ((rt0.c0) BETWEEN (rt0.c1) AND (NULL)), (+ (rt0.c3))))) GROUP BY rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c2, '867905898', rt0.c2)) BETWEEN ((v0.c0, ((rt0.c3) IS FALSE), 1.588626462E9)) AND (((- (rt0.c3)), ((rt0.c0) BETWEEN (rt0.c1) AND (NULL)), (+ (rt0.c3))))) GROUP BY rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3 HAVING MAX(TOTAL(AVG(AVG(AVG(rt0.c2))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c2, '867905898', rt0.c2)) BETWEEN ((v0.c0, ((rt0.c3) IS FALSE), 1.588626462E9)) AND (((- (rt0.c3)), ((rt0.c0) BETWEEN (rt0.c1) AND (NULL)), (+ (rt0.c3))))) GROUP BY rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3 HAVING (NOT (MAX(TOTAL(AVG(AVG(AVG(rt0.c2))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c2, '867905898', rt0.c2)) BETWEEN ((v0.c0, ((rt0.c3) IS FALSE), 1.588626462E9)) AND (((- (rt0.c3)), ((rt0.c0) BETWEEN (rt0.c1) AND (NULL)), (+ (rt0.c3))))) GROUP BY rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3 HAVING ((MAX(TOTAL(AVG(AVG(AVG(rt0.c2)))))) ISNULL);
SELECT ALL * FROM rt0 INNER JOIN v0 ON (HEX(DISTINCT rt0.c2) IN ('-816926271'));
SELECT ALL * FROM rt0 INNER JOIN v0 ON (HEX(DISTINCT rt0.c2) IN ('-816926271')) WHERE (v0.c0) UNION ALL SELECT * FROM rt0 INNER JOIN v0 ON (HEX(DISTINCT rt0.c2) IN ('-816926271')) WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL * FROM rt0 INNER JOIN v0 ON (HEX(DISTINCT rt0.c2) IN ('-816926271')) WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM rt0 INNER JOIN v0 ON (HEX(DISTINCT rt0.c2) IN ('-816926271'));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (LIKE(rt0.c2, rt0.c1) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (LIKE(rt0.c2, rt0.c1) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE (((LIKE(rt0.c2, rt0.c1) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0, rt0.c0 FROM rt0, v0, vt0 GROUP BY v0.c0, rt0.c0;
SELECT ALL v0.c0, rt0.c0 FROM rt0, v0, vt0 WHERE ((((vt0.c0, v0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0 COLLATE BINARY, CASE WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c1) BETWEEN (rt0.c1) AND (v0.c0)))) AND ((((0.8495875357779732) NOT BETWEEN (rt0.c2) AND (rt0.c0)), x'8893', CAST(rt0.c0 AS INTEGER))))) GROUP BY v0.c0, rt0.c0 UNION SELECT ALL v0.c0, rt0.c0 FROM rt0, v0, vt0 WHERE ((NOT ((((vt0.c0, v0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0 COLLATE BINARY, CASE WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c1) BETWEEN (rt0.c1) AND (v0.c0)))) AND ((((0.8495875357779732) NOT BETWEEN (rt0.c2) AND (rt0.c0)), x'8893', CAST(rt0.c0 AS INTEGER))))))) GROUP BY v0.c0, rt0.c0 UNION SELECT v0.c0, rt0.c0 FROM rt0, v0, vt0 WHERE ((((((vt0.c0, v0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0 COLLATE BINARY, CASE WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c1) BETWEEN (rt0.c1) AND (v0.c0)))) AND ((((0.8495875357779732) NOT BETWEEN (rt0.c2) AND (rt0.c0)), x'8893', CAST(rt0.c0 AS INTEGER))))) ISNULL)) GROUP BY v0.c0, rt0.c0;
SELECT v0.c0, rt0.c0 FROM rt0, v0, vt0 GROUP BY v0.c0, rt0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((((((((((vt0.c0) IS FALSE))AND(MIN(vt0.c0))))OR(((COUNT(v0.c0))&(MIN(SUM(vt0.c0)))))))OR(CAST(GROUP_CONCAT(MAX(MIN(v0.c0))) AS BLOB))))AND((~ (v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (((((((((((vt0.c0) IS FALSE))AND(MIN(vt0.c0))))OR(((COUNT(v0.c0))&(MIN(SUM(vt0.c0)))))))OR(CAST(GROUP_CONCAT(MAX(MIN(v0.c0))) AS BLOB))))AND((~ (v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((((((((((((vt0.c0) IS FALSE))AND(MIN(vt0.c0))))OR(((COUNT(v0.c0))&(MIN(SUM(vt0.c0)))))))OR(CAST(GROUP_CONCAT(MAX(MIN(v0.c0))) AS BLOB))))AND((~ (v0.c0))))) ISNULL);
SELECT rt0.c2 FROM rt0, v0, vt0;
SELECT rt0.c2 FROM rt0, v0, vt0 WHERE (((((vt0.c0) IS FALSE))>=(((0.5390156761368621)OR(0xffffffffbaf605d6))))) UNION ALL SELECT ALL rt0.c2 FROM rt0, v0, vt0 WHERE ((NOT (((((vt0.c0) IS FALSE))>=(((0.5390156761368621)OR(0Xffffffffbaf605d6))))))) UNION ALL SELECT rt0.c2 FROM rt0, v0, vt0 WHERE (((((((vt0.c0) IS FALSE))>=(((0.5390156761368621)OR(0Xffffffffbaf605d6))))) ISNULL));
SELECT rt0.c2 FROM rt0, v0, vt0;
SELECT DISTINCT rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0, v0;
SELECT DISTINCT rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0, v0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c3) BETWEEN (0.36250526465334654) AND (v0.c0)))) AND ((((((v0.c0)OR('1068317489')))OR(rt0.c2)))))) UNION SELECT DISTINCT rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0, v0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((((rt0.c3) BETWEEN (0.36250526465334654) AND (v0.c0)))) AND ((((((v0.c0)OR('1068317489')))OR(rt0.c2)))))))) UNION SELECT DISTINCT rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0, v0 WHERE ((((((rt0.c1)) BETWEEN ((((rt0.c3) BETWEEN (0.36250526465334654) AND (v0.c0)))) AND ((((((v0.c0)OR('1068317489')))OR(rt0.c2)))))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0, v0;
SELECT rt0.c0, rt0.c1, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM vt0, rt0 WHERE (rt0.c1) GROUP BY rt0.c0, rt0.c1, rt0.c3 UNION SELECT rt0.c0, rt0.c1, rt0.c3 FROM vt0, rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c0, rt0.c1, rt0.c3 UNION SELECT rt0.c0, rt0.c1, rt0.c3 FROM vt0, rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 HAVING (((((vt0.c0)OR(rt0.c1)))OR(vt0.c0)) IN (MIN(TOTAL(MIN(SUM(GROUP_CONCAT(TOTAL(TOTAL(COUNT(*)))))))))) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 HAVING (NOT ((((((vt0.c0)OR(rt0.c1)))OR(vt0.c0)) IN (MIN(TOTAL(MIN(SUM(GROUP_CONCAT(TOTAL(TOTAL(COUNT(*)))))))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 HAVING (((((((vt0.c0)OR(rt0.c1)))OR(vt0.c0)) IN (MIN(TOTAL(MIN(SUM(GROUP_CONCAT(TOTAL(TOTAL(COUNT(*))))))))))) ISNULL);
SELECT vt0.c0, rt0.c2, rt0.c0, v0.c0, rt0.c1, rt0.c3 FROM vt0, rt0 NATURAL JOIN v0;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, v0.c0, rt0.c1, rt0.c3 FROM vt0, rt0 NATURAL JOIN v0 WHERE (CASE TYPEOF(vt0.c0)  WHEN ((rt0.c2) NOT NULL) THEN 0.6223901345479271 WHEN LTRIM(rt0.c1, '1403138503') THEN ((v0.c0) ISNULL) WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 END THEN ((rt0.c2)&(rt0.c0)) END) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c0, v0.c0, rt0.c1, rt0.c3 FROM vt0, rt0 NATURAL JOIN v0 WHERE ((NOT (CASE TYPEOF(vt0.c0)  WHEN ((rt0.c2) NOT NULL) THEN 0.6223901345479271 WHEN LTRIM(rt0.c1, '1403138503') THEN ((v0.c0) ISNULL) WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 END THEN ((rt0.c2)&(rt0.c0)) END))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c0, v0.c0, rt0.c1, rt0.c3 FROM vt0, rt0 NATURAL JOIN v0 WHERE (((CASE TYPEOF(vt0.c0)  WHEN ((rt0.c2) NOT NULL) THEN 0.6223901345479271 WHEN LTRIM(rt0.c1, '1403138503') THEN ((v0.c0) ISNULL) WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 END THEN ((rt0.c2)&(rt0.c0)) END) ISNULL));
SELECT vt0.c0, rt0.c2, rt0.c0, v0.c0, rt0.c1, rt0.c3 FROM vt0, rt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (0.753785658623417) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (0.753785658623417))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((0.753785658623417) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0)IS NOT(((vt0.c0) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)IS NOT(((vt0.c0) NOTNULL)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)IS NOT(((vt0.c0) NOTNULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2, vt0.c0 HAVING MIN(SUM(MIN(MIN(rt0.c3)))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2, vt0.c0 HAVING (NOT (MIN(SUM(MIN(MIN(rt0.c3)))))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2, vt0.c0 HAVING ((MIN(SUM(MIN(MIN(rt0.c3))))) ISNULL);
SELECT ALL * FROM vt0, rt0, v0;
SELECT ALL * FROM vt0, rt0, v0 WHERE (TRIM((- (v0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 ELSE v0.c0 END)) UNION ALL SELECT * FROM vt0, rt0, v0 WHERE ((NOT (TRIM((- (v0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 ELSE v0.c0 END)))) UNION ALL SELECT * FROM vt0, rt0, v0 WHERE (((TRIM((- (v0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 ELSE v0.c0 END)) ISNULL));
SELECT ALL * FROM vt0, rt0, v0;
SELECT DISTINCT rt0.c1, v0.c0, rt0.c2, vt0.c0, rt0.c3 FROM vt0 RIGHT OUTER JOIN v0 ON (((((~ (v0.c0)))AND((((0x4de5bc35))<((v0.c0))))))AND((((rt0.c3, vt0.c0, v0.c0)) NOT BETWEEN ((rt0.c0, v0.c0, rt0.c0)) AND ((rt0.c2, rt0.c3, rt0.c3))))) RIGHT OUTER JOIN rt0 ON ((((v0.c0) BETWEEN (vt0.c0) AND (rt0.c2))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((((~ (rt0.c2)))LIKE(x'cb01'))) GROUP BY rt0.c1, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT ((((~ (rt0.c2)))LIKE(x'cb01'))))) GROUP BY rt0.c1, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((((((~ (rt0.c2)))LIKE(x'cb01'))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((((rt0.c3, rt0.c3, rt0.c2))<>((rt0.c1, rt0.c1, GROUP_CONCAT(COUNT(MIN(TOTAL(TOTAL(rt0.c3))))))))))<>((AVG(GROUP_CONCAT(MAX(0X365b65e7)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((((((rt0.c3, rt0.c3, rt0.c2))!=((rt0.c1, rt0.c1, GROUP_CONCAT(COUNT(MIN(TOTAL(TOTAL(rt0.c3))))))))))!=((AVG(GROUP_CONCAT(MAX(0x365b65e7)))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((((((rt0.c3, rt0.c3, rt0.c2))!=((rt0.c1, rt0.c1, GROUP_CONCAT(COUNT(MIN(TOTAL(TOTAL(rt0.c3))))))))))<>((AVG(GROUP_CONCAT(MAX(0x365b65e7))))))) ISNULL);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (x'' IN ()) LEFT OUTER JOIN rt0 ON CAST(x'fe1f' COLLATE NOCASE AS INTEGER);
SELECT * FROM vt0 CROSS JOIN v0 ON (x'' IN ()) LEFT OUTER JOIN rt0 ON CAST(x'fe1f' COLLATE NOCASE AS INTEGER) WHERE ((((((~ (rt0.c2)))AND((- (rt0.c3)))))AND(((((((((rt0.c3)OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c0))))) UNION ALL SELECT * FROM vt0 CROSS JOIN v0 ON (x'' IN ()) LEFT OUTER JOIN rt0 ON CAST(x'fe1f' COLLATE NOCASE AS INTEGER) WHERE ((NOT ((((((~ (rt0.c2)))AND((- (rt0.c3)))))AND(((((((((rt0.c3)OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c0))))))) UNION ALL SELECT * FROM vt0 CROSS JOIN v0 ON (x'' IN ()) LEFT OUTER JOIN rt0 ON CAST(x'fe1f' COLLATE NOCASE AS INTEGER) WHERE ((((((((~ (rt0.c2)))AND((- (rt0.c3)))))AND(((((((((rt0.c3)OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c0))))) ISNULL));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (x'' IN ()) LEFT OUTER JOIN rt0 ON CAST(x'fe1f' COLLATE NOCASE AS INTEGER);
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON (((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))IS(((rt0.c0)/(v0.c0)))) LEFT OUTER JOIN vt0 ON ((((((((((rt0.c2) NOTNULL))AND(rt0.c0)))OR(((((((((0.2567447840139748)OR(rt0.c1)))OR(rt0.c3)))AND(v0.c0)))OR(vt0.c0)))))AND(((rt0.c3) NOT NULL))))OR((rt0.c3 IN ())));
SELECT ALL rt0.c2, rt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM vt0, v0, rt0 WHERE (((CAST(rt0.c1 AS REAL))AND((rt0.c1 IN ())))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM vt0, v0, rt0 WHERE ((NOT (((CAST(rt0.c1 AS REAL))AND((rt0.c1 IN ())))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM vt0, v0, rt0 WHERE (((((CAST(rt0.c1 AS REAL))AND((rt0.c1 IN ())))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2;
SELECT ALL rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2 HAVING CASE WHEN TOTAL(rt0.c2) THEN AVG(MAX(MIN(rt0.c3))) ELSE SUM(rt0.c2) END UNION ALL SELECT rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2 HAVING (NOT (CASE WHEN TOTAL(rt0.c2) THEN AVG(MAX(MIN(rt0.c3))) ELSE SUM(rt0.c2) END)) UNION ALL SELECT ALL rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2 HAVING ((CASE WHEN TOTAL(rt0.c2) THEN AVG(MAX(MIN(rt0.c3))) ELSE SUM(rt0.c2) END) ISNULL);
SELECT * FROM vt0, rt0, v0;
SELECT * FROM vt0, rt0, v0 WHERE (((((v0.c0)OR(((rt0.c2)>(rt0.c1)))))AND((- (rt0.c1))))) UNION ALL SELECT ALL * FROM vt0, rt0, v0 WHERE ((NOT (((((v0.c0)OR(((rt0.c2)>(rt0.c1)))))AND((- (rt0.c1))))))) UNION ALL SELECT ALL * FROM vt0, rt0, v0 WHERE (((((((v0.c0)OR(((rt0.c2)>(rt0.c1)))))AND((- (rt0.c1))))) ISNULL));
SELECT * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((x'')>=(((('c')) BETWEEN ((rt0.c1)) AND ((rt0.c3)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((x'')>=(((('c')) BETWEEN ((rt0.c1)) AND ((rt0.c3)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((x'')>=(((('c')) BETWEEN ((rt0.c1)) AND ((rt0.c3)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, vt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE (((((((rt0.c0)AND(vt0.c0)))AND(rt0.c3))) IS TRUE)) GROUP BY rt0.c0, vt0.c0, rt0.c3, rt0.c2 UNION SELECT rt0.c0, vt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((((((rt0.c0)AND(vt0.c0)))AND(rt0.c3))) IS TRUE)))) GROUP BY rt0.c0, vt0.c0, rt0.c3, rt0.c2 UNION SELECT rt0.c0, vt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE (((((((((rt0.c0)AND(vt0.c0)))AND(rt0.c3))) IS TRUE)) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c3, rt0.c2;
SELECT rt0.c0, vt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3 HAVING TOTAL(SUM(rt0.c0) COLLATE RTRIM) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3 HAVING (NOT (TOTAL(SUM(rt0.c0) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3 HAVING ((TOTAL(SUM(rt0.c0) COLLATE RTRIM)) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (-8.16926271E8) AND (vt0.c0))) ISNULL)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (-8.16926271E8) AND (vt0.c0))) ISNULL)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (-8.16926271E8) AND (vt0.c0))) ISNULL)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c3, v0.c0, vt0.c0, rt0.c0, rt0.c1 FROM v0, rt0, vt0;
SELECT DISTINCT rt0.c3, v0.c0, vt0.c0, rt0.c0, rt0.c1 FROM v0, rt0, vt0 WHERE ((((vt0.c0 IN ())) NOT NULL)) UNION SELECT DISTINCT rt0.c3, v0.c0, vt0.c0, rt0.c0, rt0.c1 FROM v0, rt0, vt0 WHERE ((NOT ((((vt0.c0 IN ())) NOT NULL)))) UNION SELECT DISTINCT rt0.c3, v0.c0, vt0.c0, rt0.c0, rt0.c1 FROM v0, rt0, vt0 WHERE ((((((vt0.c0 IN ())) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c3, v0.c0, vt0.c0, rt0.c0, rt0.c1 FROM v0, rt0, vt0;
SELECT ALL rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM rt0 CROSS JOIN v0 ON CAST(((((1.338335391E9)OR('	E')))AND('')) AS TEXT) GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM rt0 CROSS JOIN v0 ON CAST(((((1.338335391E9)OR('	E')))AND('')) AS TEXT) WHERE (TRIM(rt0.c2 COLLATE NOCASE)) GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM rt0 CROSS JOIN v0 ON CAST(((((1.338335391E9)OR('	E')))AND('')) AS TEXT) WHERE ((NOT (TRIM(rt0.c2 COLLATE NOCASE)))) GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM rt0 CROSS JOIN v0 ON CAST(((((1.338335391E9)OR('	E')))AND('')) AS TEXT) WHERE (((TRIM(rt0.c2 COLLATE NOCASE)) ISNULL)) GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM rt0 CROSS JOIN v0 ON CAST(((((1.338335391E9)OR('	E')))AND('')) AS TEXT) GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c1;
SELECT rt0.c3 FROM vt0, rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM vt0, rt0 GROUP BY rt0.c3 HAVING (((~ (rt0.c2))) BETWEEN (SUM(TOTAL(COUNT(*)))) AND (CASE WHEN COUNT(*) THEN rt0.c2 WHEN rt0.c1 THEN TOTAL(TOTAL(rt0.c0)) WHEN '0.3833706845052215' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 ELSE SUM(rt0.c0) END)) UNION ALL SELECT ALL rt0.c3 FROM vt0, rt0 GROUP BY rt0.c3 HAVING (NOT ((((~ (rt0.c2))) BETWEEN (SUM(TOTAL(COUNT(*)))) AND (CASE WHEN COUNT(*) THEN rt0.c2 WHEN rt0.c1 THEN TOTAL(TOTAL(rt0.c0)) WHEN '0.3833706845052215' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 ELSE SUM(rt0.c0) END)))) UNION ALL SELECT rt0.c3 FROM vt0, rt0 GROUP BY rt0.c3 HAVING (((((~ (rt0.c2))) BETWEEN (SUM(TOTAL(COUNT(*)))) AND (CASE WHEN COUNT(*) THEN rt0.c2 WHEN rt0.c1 THEN TOTAL(TOTAL(rt0.c0)) WHEN '0.3833706845052215' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 ELSE SUM(rt0.c0) END))) ISNULL);
SELECT * FROM v0, vt0, rt0;
SELECT * FROM v0, vt0, rt0 WHERE (((UPPER(rt0.c0))AND(((0.04529683785308336)GLOB(rt0.c0))))) UNION ALL SELECT * FROM v0, vt0, rt0 WHERE ((NOT (((UPPER(rt0.c0))AND(((0.04529683785308336)GLOB(rt0.c0))))))) UNION ALL SELECT * FROM v0, vt0, rt0 WHERE (((((UPPER(rt0.c0))AND(((0.04529683785308336)GLOB(rt0.c0))))) ISNULL));
SELECT * FROM v0, vt0, rt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE ((((((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))))OR((vt0.c0 IN (vt0.c0))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT ((((((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))))OR((vt0.c0 IN (vt0.c0))))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((((((((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))))OR((vt0.c0 IN (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE (((v0.c0) NOTNULL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE ((NOT (((v0.c0) NOTNULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE (((((v0.c0) NOTNULL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c1 HAVING AVG(((((MIN(rt0.c3))OR(TOTAL(COUNT(COUNT(*))))))OR(COUNT(*)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c1 HAVING (NOT (AVG(((((MIN(rt0.c3))OR(TOTAL(COUNT(COUNT(*))))))OR(COUNT(*)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c1 HAVING ((AVG(((((MIN(rt0.c3))OR(TOTAL(COUNT(COUNT(*))))))OR(COUNT(*))))) ISNULL);
SELECT * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (LIKELIHOOD(DISTINCT ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)), 0.37188178185837983)) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (LIKELIHOOD(DISTINCT ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)), 0.37188178185837983)))) UNION ALL SELECT * FROM v0, vt0 WHERE (((LIKELIHOOD(DISTINCT ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)), 0.37188178185837983)) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON ((v0.c0)<(NULL)) COLLATE BINARY;
SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON ((v0.c0)<(NULL)) COLLATE BINARY WHERE ((((vt0.c0 COLLATE NOCASE))<>((((v0.c0)<>(v0.c0)))))) UNION SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON ((v0.c0)<(NULL)) COLLATE BINARY WHERE ((NOT ((((vt0.c0 COLLATE NOCASE))<>((((v0.c0)<>(v0.c0)))))))) UNION SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON ((v0.c0)<(NULL)) COLLATE BINARY WHERE ((((((vt0.c0 COLLATE NOCASE))<>((((v0.c0)<>(v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON ((v0.c0)<(NULL)) COLLATE BINARY;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3 UNION SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3 UNION SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 CROSS JOIN vt0 ON ((('搃+lXO>\n' IN ())) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((v0.c0)>=(rt0.c2)))) GROUP BY rt0.c1, v0.c0, rt0.c2;
SELECT rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 CROSS JOIN vt0 ON ((('搃+lXO>\n' IN ())) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((v0.c0)>=(rt0.c2)))) GROUP BY rt0.c1, v0.c0, rt0.c2 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 CROSS JOIN vt0 ON ((('搃+lXO>\n' IN ())) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((v0.c0)>=(rt0.c2)))) GROUP BY rt0.c1, v0.c0, rt0.c2 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 CROSS JOIN vt0 ON ((('搃+lXO>\n' IN ())) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((v0.c0)>=(rt0.c2)))) GROUP BY rt0.c1, v0.c0, rt0.c2 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT MIN((((((('1\n')AND(rt0.c1)))OR(rt0.c1))) BETWEEN ((rt0.c3 IN ())) AND (((rt0.c1)<=(rt0.c2))))) FROM rt0 ORDER BY ((((((((((((((rt0.c3)AND(rt0.c0)))OR('zi2')))AND(rt0.c0)))OR(0.617156882375345)))AND(rt0.c1)))AND(rt0.c2))) ISNULL) DESC, CAST(rt0.c3 AS BLOB) DESC  NULLS LAST;
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c0) ISNULL) AS BLOB);
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c0) ISNULL) AS BLOB) WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (CASE ''  WHEN rt0.c1 THEN rt0.c2 END) AND (rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c0) ISNULL) AS BLOB) WHERE ((NOT (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (CASE ''  WHEN rt0.c1 THEN rt0.c2 END) AND (rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c0) ISNULL) AS BLOB) WHERE (((((rt0.c2 COLLATE RTRIM) NOT BETWEEN (CASE ''  WHEN rt0.c1 THEN rt0.c2 END) AND (rt0.c1))) ISNULL));
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c0) ISNULL) AS BLOB);
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON (((((0.3909057128070679, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c0))))+('-1028752285'));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON (((((0.3909057128070679, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c0))))+('-1028752285')) WHERE (LTRIM((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), (+ (v0.c0)))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON (((((0.3909057128070679, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c0))))+('-1028752285')) WHERE ((NOT (LTRIM((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), (+ (v0.c0)))))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON (((((0.3909057128070679, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c0))))+('-1028752285')) WHERE (((LTRIM((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), (+ (v0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON (((((0.3909057128070679, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c0))))+('-1028752285'));
SELECT vt0.c0, rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM vt0, rt0, v0 GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2, v0.c0;
SELECT ALL vt0.c0, rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM vt0, rt0, v0 WHERE ((~ ((((rt0.c3, rt0.c0, v0.c0))>=((rt0.c0, rt0.c3, v0.c0)))))) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2, v0.c0 UNION SELECT vt0.c0, rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM vt0, rt0, v0 WHERE ((NOT ((~ ((((rt0.c3, rt0.c0, v0.c0))>=((rt0.c0, rt0.c3, v0.c0)))))))) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2, v0.c0 UNION SELECT vt0.c0, rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM vt0, rt0 NOT INDEXED, v0 WHERE ((((~ ((((rt0.c3, rt0.c0, v0.c0))>=((rt0.c0, rt0.c3, v0.c0)))))) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2, v0.c0;
SELECT vt0.c0, rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM vt0, rt0, v0 GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (COUNT(v0.c0) IN ()) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((COUNT(v0.c0) IN ()))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((COUNT(v0.c0) IN ())) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (COUNT(v0.c0) IN ()) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((COUNT(v0.c0) IN ()))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((COUNT(v0.c0) IN ())) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0, rt0;
SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0, rt0 WHERE ((((v0.c0)) NOT BETWEEN (((+ (rt0.c2)))) AND ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))))) UNION ALL SELECT rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0, rt0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN (((+ (rt0.c2)))) AND ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))))))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0, rt0 WHERE ((((((v0.c0)) NOT BETWEEN (((+ (rt0.c2)))) AND ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))))) ISNULL));
SELECT rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((NULL)&(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((NULL)&(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((NULL)&(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE WHEN TOTAL(v0.c0) THEN ((x'4db5') NOT BETWEEN (v0.c0) AND (v0.c0)) END UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CASE WHEN TOTAL(v0.c0) THEN ((x'4db5') NOT BETWEEN (v0.c0) AND (v0.c0)) END)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE WHEN TOTAL(v0.c0) THEN ((x'4db5') NOT BETWEEN (v0.c0) AND (v0.c0)) END) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE WHEN TOTAL(v0.c0) THEN ((x'4db5') NOT BETWEEN (v0.c0) AND (v0.c0)) END UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CASE WHEN TOTAL(v0.c0) THEN ((x'4db5') NOT BETWEEN (v0.c0) AND (v0.c0)) END)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE WHEN TOTAL(v0.c0) THEN ((x'4db5') NOT BETWEEN (v0.c0) AND (v0.c0)) END) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((~ (((vt0.c0)>>(v0.c0))))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT ((~ (((vt0.c0)>>(v0.c0))))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((~ (((vt0.c0)>>(v0.c0))))) ISNULL));
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT DISTINCT * FROM vt0, v0, rt0 WHERE ((((NOT (NULL)))+(((v0.c0)==(v0.c0))))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE ((NOT ((((NOT (NULL)))+(((v0.c0)=(v0.c0))))))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE ((((((NOT (NULL)))+(((v0.c0)=(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT ALL v0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0, rt0 WHERE (((((((rt0.c2)LIKE(rt0.c0)))AND(((v0.c0)==(rt0.c3)))))OR(v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0, rt0 WHERE ((NOT (((((((rt0.c2)LIKE(rt0.c0)))AND(((v0.c0)==(rt0.c3)))))OR(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0, rt0 WHERE (((((((((rt0.c2)LIKE(rt0.c0)))AND(((v0.c0)=(rt0.c3)))))OR(v0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT SUM(CAST(CASE WHEN rt0.c0 THEN rt0.c1 END AS REAL)) FROM rt0, v0 ORDER BY ((rt0.c1) IS FALSE) COLLATE NOCASE  NULLS LAST;
SELECT * FROM rt0, vt0, v0;
SELECT ALL * FROM rt0, vt0, v0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM rt0, vt0, v0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM rt0, vt0, v0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM rt0, vt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0)>(v0.c0))) NOT BETWEEN (((v0.c0)%(NULL))) AND (CAST(v0.c0 AS TEXT)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)>(v0.c0))) NOT BETWEEN (((v0.c0)%(NULL))) AND (CAST(v0.c0 AS TEXT)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0)>(v0.c0))) NOT BETWEEN (((v0.c0)%(NULL))) AND (CAST(v0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, rt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (((((0.6467845942880546)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))) NOT BETWEEN ((+ (v0.c0))) AND (rt0.c1)) RIGHT OUTER JOIN rt0 ON x'' GROUP BY vt0.c0, rt0.c0, v0.c0;
SELECT * FROM v0, rt0, vt0;
SELECT ALL * FROM v0, rt0, vt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c0 ELSE v0.c0 END) BETWEEN (0.11625946332666814) AND ((((v0.c0, v0.c0, NULL))<=((rt0.c1, vt0.c0, rt0.c3)))))) UNION ALL SELECT * FROM v0, rt0, vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN rt0.c0 ELSE v0.c0 END) BETWEEN (0.11625946332666814) AND ((((v0.c0, v0.c0, NULL))<=((rt0.c1, vt0.c0, rt0.c3)))))))) UNION ALL SELECT ALL * FROM v0, rt0, vt0 WHERE (((((CASE WHEN vt0.c0 THEN rt0.c0 ELSE v0.c0 END) BETWEEN (0.11625946332666814) AND ((((v0.c0, v0.c0, NULL))<=((rt0.c1, vt0.c0, rt0.c3)))))) ISNULL));
SELECT * FROM v0, rt0, vt0;
SELECT DISTINCT rt0.c2 FROM vt0 NOT INDEXED, rt0, v0;
SELECT DISTINCT rt0.c2 FROM vt0, rt0, v0 WHERE (((rt0.c0)>(rt0.c1)) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c2 FROM vt0, rt0, v0 WHERE ((NOT (((rt0.c0)>(rt0.c1)) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c2 FROM vt0, rt0, v0 WHERE (((((rt0.c0)>(rt0.c1)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c2 FROM vt0 NOT INDEXED, rt0, v0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 WHERE (((((((v0.c0) IS TRUE))AND((- (v0.c0)))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT (((((((v0.c0) IS TRUE))AND((- (v0.c0)))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((((((((v0.c0) IS TRUE))AND((- (v0.c0)))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL rt0.c1 FROM vt0, rt0, v0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0, rt0, v0 GROUP BY rt0.c1 HAVING GROUP_CONCAT(COUNT(rt0.c0)) UNION ALL SELECT rt0.c1 FROM vt0, rt0, v0 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(COUNT(rt0.c0)))) UNION ALL SELECT rt0.c1 FROM vt0, rt0, v0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(COUNT(rt0.c0))) ISNULL);
SELECT * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (((DATE(vt0.c0, '-1294905535', v0.c0)) NOT BETWEEN (NULLIF(vt0.c0, vt0.c0)) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))) UNION ALL SELECT ALL * FROM v0, vt0 NOT INDEXED WHERE ((NOT (((DATE(vt0.c0, '-1294905535', v0.c0)) NOT BETWEEN (NULLIF(vt0.c0, vt0.c0)) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))))) UNION ALL SELECT * FROM v0, vt0 WHERE (((((DATE(vt0.c0, '-1294905535', v0.c0)) NOT BETWEEN (NULLIF(vt0.c0, vt0.c0)) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE (ROUND(rt0.c2, rt0.c3)) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (ROUND(rt0.c2, rt0.c3)))) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE (((ROUND(rt0.c2, rt0.c3)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0;
SELECT v0.c0, rt0.c2, rt0.c3, rt0.c0 FROM vt0 CROSS JOIN v0 ON ((CAST(rt0.c3 AS BLOB))/((+ (vt0.c0)))) INNER JOIN rt0 ON (~ (COALESCE(DISTINCT 0.6612427863377834, rt0.c1))) GROUP BY v0.c0, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL v0.c0, rt0.c2, rt0.c3, rt0.c0 FROM vt0 CROSS JOIN v0 ON ((CAST(rt0.c3 AS BLOB))/((+ (vt0.c0)))) INNER JOIN rt0 ON (~ (COALESCE(DISTINCT 0.6612427863377834, rt0.c1))) WHERE (((((((((((((((((vt0.c0)AND(0.6101367106993838)))OR(((v0.c0) NOT NULL))))OR(((v0.c0)IS(rt0.c0)))))OR(((rt0.c1)*(0.5292817965355433)))))OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (170204803)))))OR((((v0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))))OR(v0.c0)))OR(((((rt0.c3)OR(rt0.c3)))AND(vt0.c0))))) GROUP BY v0.c0, rt0.c2, rt0.c3, rt0.c0 UNION SELECT ALL v0.c0, rt0.c2, rt0.c3, rt0.c0 FROM vt0 CROSS JOIN v0 ON ((CAST(rt0.c3 AS BLOB))/((+ (vt0.c0)))) INNER JOIN rt0 ON (~ (COALESCE(DISTINCT 0.6612427863377834, rt0.c1))) WHERE ((NOT (((((((((((((((((vt0.c0)AND(0.6101367106993838)))OR(((v0.c0) NOT NULL))))OR(((v0.c0)IS(rt0.c0)))))OR(((rt0.c1)*(0.5292817965355433)))))OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (170204803)))))OR((((v0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))))OR(v0.c0)))OR(((((rt0.c3)OR(rt0.c3)))AND(vt0.c0))))))) GROUP BY v0.c0, rt0.c2, rt0.c3, rt0.c0 UNION SELECT ALL v0.c0, rt0.c2, rt0.c3, rt0.c0 FROM vt0 CROSS JOIN v0 ON ((CAST(rt0.c3 AS BLOB))/((+ (vt0.c0)))) INNER JOIN rt0 ON (~ (COALESCE(DISTINCT 0.6612427863377834, rt0.c1))) WHERE (((((((((((((((((((vt0.c0)AND(0.6101367106993838)))OR(((v0.c0) NOT NULL))))OR(((v0.c0)IS(rt0.c0)))))OR(((rt0.c1)*(0.5292817965355433)))))OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (170204803)))))OR((((v0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))))OR(v0.c0)))OR(((((rt0.c3)OR(rt0.c3)))AND(vt0.c0))))) ISNULL)) GROUP BY v0.c0, rt0.c2, rt0.c3, rt0.c0;
SELECT v0.c0, rt0.c2, rt0.c3, rt0.c0 FROM vt0 CROSS JOIN v0 ON ((CAST(rt0.c3 AS BLOB))/((+ (vt0.c0)))) INNER JOIN rt0 ON (~ (COALESCE(DISTINCT 0.6612427863377834, rt0.c1))) GROUP BY v0.c0, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CASE UNLIKELY(rt0.c3)  WHEN NULL THEN ((((rt0.c2)AND(rt0.c3)))OR(rt0.c2)) ELSE ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)) END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE UNLIKELY(rt0.c3)  WHEN NULL THEN ((((rt0.c2)AND(rt0.c3)))OR(rt0.c2)) ELSE ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE UNLIKELY(rt0.c3)  WHEN NULL THEN ((((rt0.c2)AND(rt0.c3)))OR(rt0.c2)) ELSE ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM v0, rt0, vt0;
SELECT DISTINCT * FROM v0, rt0, vt0 WHERE ((((0.21369549858685544, (v0.c0 IN ()), 0.5731741166681025))=((((rt0.c0)LIKE(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN rt0.c0 ELSE v0.c0 END, (('ፉ?R2<') IS FALSE))))) UNION SELECT DISTINCT * FROM v0, rt0, vt0 WHERE ((NOT ((((0.21369549858685544, (v0.c0 IN ()), 0.5731741166681025))==((((rt0.c0)LIKE(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN rt0.c0 ELSE v0.c0 END, (('ፉ?R2<') IS FALSE))))))) UNION SELECT DISTINCT * FROM v0, rt0, vt0 WHERE ((((((0.21369549858685544, (v0.c0 IN ()), 0.5731741166681025))==((((rt0.c0)LIKE(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN rt0.c0 ELSE v0.c0 END, (('ፉ?R2<') IS FALSE))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0, vt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c3 FROM vt0 NOT INDEXED CROSS JOIN rt0 ON CASE CAST(rt0.c3 AS NUMERIC)  WHEN vt0.c0 THEN (+ (rt0.c0)) END GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c3 FROM vt0 CROSS JOIN rt0 ON CASE CAST(rt0.c3 AS NUMERIC)  WHEN vt0.c0 THEN (+ (rt0.c0)) END WHERE ((- (MAX(rt0.c0, rt0.c0)))) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c3 UNION SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c3 FROM vt0 CROSS JOIN rt0 ON CASE CAST(rt0.c3 AS NUMERIC)  WHEN vt0.c0 THEN (+ (rt0.c0)) END WHERE ((NOT ((- (MAX(rt0.c0, rt0.c0)))))) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c3 FROM vt0 CROSS JOIN rt0 ON CASE CAST(rt0.c3 AS NUMERIC)  WHEN vt0.c0 THEN (+ (rt0.c0)) END WHERE ((((- (MAX(rt0.c0, rt0.c0)))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c3 FROM vt0 NOT INDEXED CROSS JOIN rt0 ON CASE CAST(rt0.c3 AS NUMERIC)  WHEN vt0.c0 THEN (+ (rt0.c0)) END GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c3;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (MAX(x'') IN ()) COLLATE RTRIM UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((MAX(x'') IN ()) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((MAX(x'') IN ()) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (MAX(x'') IN ()) COLLATE RTRIM UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((MAX(x'') IN ()) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((MAX(x'') IN ()) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((NULL)) BETWEEN ((((vt0.c0) BETWEEN ('Uj(iP1') AND (vt0.c0)))) AND (((v0.c0 IN (v0.c0)))))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT ((((NULL)) BETWEEN ((((vt0.c0) BETWEEN ('Uj(iP1') AND (vt0.c0)))) AND (((v0.c0 IN (v0.c0)))))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((((NULL)) BETWEEN ((((vt0.c0) BETWEEN ('Uj(iP1') AND (vt0.c0)))) AND (((v0.c0 IN (v0.c0)))))) ISNULL));
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c3, rt0.c3, rt0.c3)) BETWEEN (((('') ISNULL), CAST(rt0.c1 AS REAL), rt0.c1 COLLATE BINARY)) AND (((0.7940910288729071 IN ()), -1.294905535E9, CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c3, rt0.c3, rt0.c3)) BETWEEN (((('') ISNULL), CAST(rt0.c1 AS REAL), rt0.c1 COLLATE BINARY)) AND (((0.7940910288729071 IN ()), -1.294905535E9, CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c3, rt0.c3, rt0.c3)) BETWEEN (((('') ISNULL), CAST(rt0.c1 AS REAL), rt0.c1 COLLATE BINARY)) AND (((0.7940910288729071 IN ()), -1.294905535E9, CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c0, rt0.c3, rt0.c0, v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((rt0.c1)OR(v0.c0 COLLATE NOCASE)))AND(((((x'c6cb')AND(rt0.c3)))AND(vt0.c0)))))AND(((((rt0.c2)AND(vt0.c0)))OR(rt0.c3)))))AND((NOT (v0.c0)))) CROSS JOIN vt0 ON (((((0.6482298161324198 IN (rt0.c3)))OR(load_extension(rt0.c3, rt0.c3))))AND(((rt0.c0)LIKE(v0.c0)))) GROUP BY vt0.c0, rt0.c3, rt0.c0, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (MIN(x'45a7') IN ()) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((MIN(x'45a7') IN ()))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((MIN(x'45a7') IN ())) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (MIN(x'45a7') IN ()) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((MIN(x'45a7') IN ()))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((MIN(x'45a7') IN ())) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS NUMERIC)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0)GLOB(rt0.c1))) NOTNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0)GLOB(rt0.c1))) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0)GLOB(rt0.c1))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))OR(v0.c0)))LIKE(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0)OR(v0.c0)))OR(v0.c0)))LIKE(((((v0.c0)AND(v0.c0)))AND(v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))LIKE(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1, v0.c0, vt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c1, v0.c0, vt0.c0;
SELECT rt0.c1, v0.c0, vt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c1, v0.c0, vt0.c0 HAVING TOTAL(COUNT(rt0.c1)) UNION ALL SELECT ALL rt0.c1, v0.c0, vt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c1, v0.c0, vt0.c0 HAVING (NOT (TOTAL(COUNT(rt0.c1)))) UNION ALL SELECT rt0.c1, v0.c0, vt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c1, v0.c0, vt0.c0 HAVING ((TOTAL(COUNT(rt0.c1))) ISNULL);
SELECT rt0.c1 FROM rt0, vt0 INNER JOIN v0 ON x'';
SELECT rt0.c1 FROM rt0, vt0 INNER JOIN v0 ON x'' WHERE (((((rt0.c1) ISNULL)) NOT BETWEEN ((((v0.c0))<=((rt0.c3)))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) UNION ALL SELECT rt0.c1 FROM rt0, vt0 INNER JOIN v0 ON x'' WHERE ((NOT (((((rt0.c1) ISNULL)) NOT BETWEEN ((((v0.c0))<=((rt0.c3)))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt0 INNER JOIN v0 ON x'' WHERE (((((((rt0.c1) ISNULL)) NOT BETWEEN ((((v0.c0))<=((rt0.c3)))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ISNULL));
SELECT rt0.c1 FROM rt0, vt0 INNER JOIN v0 ON x'';
SELECT DISTINCT rt0.c3, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c0 FROM rt0 WHERE (((CAST(rt0.c3 AS REAL))<=(CAST(rt0.c3 AS BLOB)))) UNION SELECT DISTINCT rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (((CAST(rt0.c3 AS REAL))<=(CAST(rt0.c3 AS BLOB)))))) UNION SELECT DISTINCT rt0.c3, rt0.c0 FROM rt0 WHERE (((((CAST(rt0.c3 AS REAL))<=(CAST(rt0.c3 AS BLOB)))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM v0, vt0 INNER JOIN rt0 ON ((rt0.c3 COLLATE BINARY)=(((rt0.c2)>>(-1182942417)))) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM v0, vt0 INNER JOIN rt0 ON ((rt0.c3 COLLATE BINARY)=(((rt0.c2)>>(-1182942417)))) WHERE ((((((vt0.c0)==('-1175529484'))))=((((v0.c0) ISNULL))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM v0, vt0 INNER JOIN rt0 ON ((rt0.c3 COLLATE BINARY)=(((rt0.c2)>>(-1182942417)))) WHERE ((NOT ((((((vt0.c0)==('-1175529484'))))==((((v0.c0) ISNULL))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM v0, vt0 NOT INDEXED INNER JOIN rt0 ON ((rt0.c3 COLLATE BINARY)=(((rt0.c2)>>(-1182942417)))) WHERE ((((((((vt0.c0)==('-1175529484'))))=((((v0.c0) ISNULL))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM v0, vt0 INNER JOIN rt0 ON ((rt0.c3 COLLATE BINARY)=(((rt0.c2)>>(-1182942417)))) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING CAST(((AVG(rt0.c0)) BETWEEN (COUNT(*)) AND (rt0.c0)) AS INTEGER) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING (NOT (CAST(((AVG(rt0.c0)) BETWEEN (COUNT(*)) AND (rt0.c0)) AS INTEGER))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING ((CAST(((AVG(rt0.c0)) BETWEEN (COUNT(*)) AND (rt0.c0)) AS INTEGER)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING CAST(((AVG(rt0.c0)) BETWEEN (COUNT(*)) AND (rt0.c0)) AS INTEGER) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING (NOT (CAST(((AVG(rt0.c0)) BETWEEN (COUNT(*)) AND (rt0.c0)) AS INTEGER))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING ((CAST(((AVG(rt0.c0)) BETWEEN (COUNT(*)) AND (rt0.c0)) AS INTEGER)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT * FROM vt0, v0, rt0;
SELECT * FROM vt0, v0, rt0 WHERE ((NOT (CAST(rt0.c3 AS TEXT)))) UNION ALL SELECT * FROM vt0, v0, rt0 WHERE ((NOT ((NOT (CAST(rt0.c3 AS TEXT)))))) UNION ALL SELECT ALL * FROM vt0, v0, rt0 WHERE ((((NOT (CAST(rt0.c3 AS TEXT)))) ISNULL));
SELECT * FROM vt0, v0, rt0;
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (((NULL) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (0x5bb5bc77))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE ((NOT (((NULL) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (0x5bb5bc77))))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (((((NULL) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (0x5bb5bc77))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0, vt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0, vt0.c0 FROM v0, rt0, vt0 WHERE (CAST((+ (NULL)) AS REAL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0, vt0.c0 FROM v0, rt0, vt0 WHERE ((NOT (CAST((+ (NULL)) AS REAL)))) GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0, vt0.c0 UNION SELECT rt0.c0, rt0.c2, rt0.c1, v0.c0, vt0.c0 FROM v0, rt0, vt0 WHERE (((CAST((+ (NULL)) AS REAL)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0, vt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN((vt0.c0 IN ())) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN((vt0.c0 IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN((vt0.c0 IN ()))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN((vt0.c0 IN ())) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN((vt0.c0 IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN((vt0.c0 IN ()))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c3, rt0.c0, v0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON ((MAX(rt0.c2, rt0.c3))>>(IFNULL(rt0.c0, vt0.c0))) CROSS JOIN v0 ON CAST(rt0.c0 AS BLOB);
SELECT ALL rt0.c3, rt0.c0, v0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON ((MAX(rt0.c2, rt0.c3))>>(IFNULL(rt0.c0, vt0.c0))) CROSS JOIN v0 ON CAST(rt0.c0 AS BLOB) WHERE ('0.6424241880253206') UNION ALL SELECT ALL rt0.c3, rt0.c0, v0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON ((MAX(rt0.c2, rt0.c3))>>(IFNULL(rt0.c0, vt0.c0))) CROSS JOIN v0 ON CAST(rt0.c0 AS BLOB) WHERE ((NOT ('0.6424241880253206'))) UNION ALL SELECT rt0.c3, rt0.c0, v0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON ((MAX(rt0.c2, rt0.c3))>>(IFNULL(rt0.c0, vt0.c0))) CROSS JOIN v0 ON CAST(rt0.c0 AS BLOB) WHERE ((('0.6424241880253206') ISNULL));
SELECT rt0.c3, rt0.c0, v0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON ((MAX(rt0.c2, rt0.c3))>>(IFNULL(rt0.c0, vt0.c0))) CROSS JOIN v0 ON CAST(rt0.c0 AS BLOB);
SELECT DISTINCT vt0.c0, rt0.c3, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c3, rt0.c1 FROM rt0, vt0 WHERE (rt0.c3) UNION SELECT DISTINCT vt0.c0, rt0.c3, rt0.c1 FROM rt0, vt0 WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT vt0.c0, rt0.c3, rt0.c1 FROM rt0, vt0 WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c3, rt0.c1 FROM rt0, vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0) NOT NULL)) NOT BETWEEN ((~ (v0.c0))) AND (((x'') BETWEEN (v0.c0) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) NOT NULL)) NOT BETWEEN ((~ (v0.c0))) AND (((x'') BETWEEN (v0.c0) AND (v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((v0.c0) NOT NULL)) NOT BETWEEN ((~ (v0.c0))) AND (((x'') BETWEEN (v0.c0) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0, rt0.c3, v0.c0, rt0.c1 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c3, v0.c0, rt0.c1;
SELECT vt0.c0, rt0.c3, v0.c0, rt0.c1 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c3, v0.c0, rt0.c1 HAVING CASE WHEN MIN(MIN(AVG(rt0.c2))) THEN ((((AVG(MIN(SUM(SUM(COUNT(*))))))AND(TOTAL(SUM(vt0.c0)))))OR(1.338335391E9)) ELSE (MAX(COUNT(*)) IN (GROUP_CONCAT(MAX(MAX(COUNT('l')))))) END UNION ALL SELECT ALL vt0.c0, rt0.c3, v0.c0, rt0.c1 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c3, v0.c0, rt0.c1 HAVING (NOT (CASE WHEN MIN(MIN(AVG(rt0.c2))) THEN ((((AVG(MIN(SUM(SUM(COUNT(*))))))AND(TOTAL(SUM(vt0.c0)))))OR(1.338335391E9)) ELSE (MAX(COUNT(*)) IN (GROUP_CONCAT(MAX(MAX(COUNT('l')))))) END)) UNION ALL SELECT vt0.c0, rt0.c3, v0.c0, rt0.c1 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c3, v0.c0, rt0.c1 HAVING ((CASE WHEN MIN(MIN(AVG(rt0.c2))) THEN ((((AVG(MIN(SUM(SUM(COUNT(*))))))AND(TOTAL(SUM(vt0.c0)))))OR(1.338335391E9)) ELSE (MAX(COUNT(*)) IN (GROUP_CONCAT(MAX(MAX(COUNT('l')))))) END) ISNULL);
SELECT rt0.c3 FROM v0, rt0, vt0;
SELECT ALL rt0.c3 FROM v0, rt0, vt0 WHERE (STRFTIME(((((((((-1.648198679E9)AND(v0.c0)))OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c1)), LOWER(rt0.c0), '-1787043177')) UNION ALL SELECT ALL rt0.c3 FROM v0, rt0, vt0 WHERE ((NOT (STRFTIME(((((((((-1.648198679E9)AND(v0.c0)))OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c1)), LOWER(rt0.c0), '-1787043177')))) UNION ALL SELECT rt0.c3 FROM v0, rt0, vt0 WHERE (((STRFTIME(((((((((-1.648198679E9)AND(v0.c0)))OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c1)), LOWER(rt0.c0), '-1787043177')) ISNULL));
SELECT rt0.c3 FROM v0, rt0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL v0.c0, vt0.c0, rt0.c0, rt0.c1, rt0.c3 FROM vt0, rt0, v0 GROUP BY v0.c0, vt0.c0, rt0.c0, rt0.c1, rt0.c3;
SELECT v0.c0, vt0.c0, rt0.c0, rt0.c1, rt0.c3 FROM vt0, rt0, v0 WHERE (((rt0.c3)&(vt0.c0)) COLLATE NOCASE) GROUP BY v0.c0, vt0.c0, rt0.c0, rt0.c1, rt0.c3 UNION SELECT ALL v0.c0, vt0.c0, rt0.c0, rt0.c1, rt0.c3 FROM vt0, rt0, v0 WHERE ((NOT (((rt0.c3)&(vt0.c0)) COLLATE NOCASE))) GROUP BY v0.c0, vt0.c0, rt0.c0, rt0.c1, rt0.c3 UNION SELECT v0.c0, vt0.c0, rt0.c0, rt0.c1, rt0.c3 FROM vt0, rt0, v0 WHERE (((((rt0.c3)&(vt0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0, vt0.c0, rt0.c0, rt0.c1, rt0.c3;
SELECT ALL v0.c0, vt0.c0, rt0.c0, rt0.c1, rt0.c3 FROM vt0, rt0, v0 GROUP BY v0.c0, vt0.c0, rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c3, v0.c0, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c3, v0.c0, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0 HAVING ((AVG(MIN(MAX('-18882759')))) IS FALSE) UNION ALL SELECT rt0.c3, v0.c0, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0 HAVING (NOT (((AVG(MIN(MAX('-18882759')))) IS FALSE))) UNION ALL SELECT rt0.c3, v0.c0, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0 HAVING ((((AVG(MIN(MAX('-18882759')))) IS FALSE)) ISNULL);
SELECT rt0.c2 FROM vt0, rt0 INNER JOIN v0 ON ((rt0.c0) NOT BETWEEN (((rt0.c1)<<(rt0.c3))) AND ((((('')OR(rt0.c0)))OR(v0.c0))));
SELECT rt0.c2 FROM vt0, rt0 INNER JOIN v0 ON ((rt0.c0) NOT BETWEEN (((rt0.c1)<<(rt0.c3))) AND ((((('')OR(rt0.c0)))OR(v0.c0)))) WHERE (v0.c0) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0 INNER JOIN v0 ON ((rt0.c0) NOT BETWEEN (((rt0.c1)<<(rt0.c3))) AND ((((('')OR(rt0.c0)))OR(v0.c0)))) WHERE ((NOT (v0.c0))) UNION ALL SELECT rt0.c2 FROM vt0, rt0 INNER JOIN v0 ON ((rt0.c0) NOT BETWEEN (((rt0.c1)<<(rt0.c3))) AND ((((('')OR(rt0.c0)))OR(v0.c0)))) WHERE (((v0.c0) ISNULL));
SELECT rt0.c2 FROM vt0, rt0 INNER JOIN v0 ON ((rt0.c0) NOT BETWEEN (((rt0.c1)<<(rt0.c3))) AND ((((('')OR(rt0.c0)))OR(v0.c0))));
SELECT DISTINCT v0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0, v0, vt0;
SELECT DISTINCT v0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0, v0, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))+((~ (rt0.c0))))) UNION SELECT DISTINCT v0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0, v0, vt0 WHERE ((NOT (((CAST(vt0.c0 AS NUMERIC))+((~ (rt0.c0))))))) UNION SELECT DISTINCT v0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0, v0, vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))+((~ (rt0.c0))))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0, v0, vt0;
SELECT v0.c0, rt0.c0, rt0.c3, rt0.c2 FROM rt0, v0 FULL OUTER JOIN vt0 ON (((rt0.c2)<<(rt0.c2)) IN ()) GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2;
SELECT ALL v0.c0, rt0.c0, rt0.c3, rt0.c2 FROM rt0, v0 FULL OUTER JOIN vt0 ON (((rt0.c2)<<(rt0.c2)) IN ()) WHERE ((~ (COALESCE('gs<\C	', v0.c0, rt0.c0, rt0.c3)))) GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2 UNION SELECT ALL v0.c0, rt0.c0, rt0.c3, rt0.c2 FROM rt0, v0 FULL OUTER JOIN vt0 ON (((rt0.c2)<<(rt0.c2)) IN ()) WHERE ((NOT ((~ (COALESCE('gs<\C	', v0.c0, rt0.c0, rt0.c3)))))) GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2 UNION SELECT ALL v0.c0, rt0.c0, rt0.c3, rt0.c2 FROM rt0, v0 FULL OUTER JOIN vt0 ON (((rt0.c2)<<(rt0.c2)) IN ()) WHERE ((((~ (COALESCE('gs<\C	', v0.c0, rt0.c0, rt0.c3)))) ISNULL)) GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2;
SELECT v0.c0, rt0.c0, rt0.c3, rt0.c2 FROM rt0, v0 FULL OUTER JOIN vt0 ON (((rt0.c2)<<(rt0.c2)) IN ()) GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2;
SELECT rt0.c2, rt0.c0, v0.c0, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c3, rt0.c1 HAVING CASE WHEN (+ (COUNT(rt0.c0))) THEN x'999d' WHEN MIN(COUNT(v0.c0)) THEN ((rt0.c0)>(rt0.c3)) WHEN MIN(MIN(rt0.c3)) THEN SUM(rt0.c2) ELSE AVG(MAX(rt0.c3)) END UNION ALL SELECT rt0.c2, rt0.c0, v0.c0, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c3, rt0.c1 HAVING (NOT (CASE WHEN (+ (COUNT(rt0.c0))) THEN x'999d' WHEN MIN(COUNT(v0.c0)) THEN ((rt0.c0)>(rt0.c3)) WHEN MIN(MIN(rt0.c3)) THEN SUM(rt0.c2) ELSE AVG(MAX(rt0.c3)) END)) UNION ALL SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c3, rt0.c1 HAVING ((CASE WHEN (+ (COUNT(rt0.c0))) THEN x'999d' WHEN MIN(COUNT(v0.c0)) THEN ((rt0.c0)>(rt0.c3)) WHEN MIN(MIN(rt0.c3)) THEN SUM(rt0.c2) ELSE AVG(MAX(rt0.c3)) END) ISNULL);
SELECT rt0.c2 FROM v0 RIGHT OUTER JOIN vt0 ON (((rt0.c0)%(rt0.c0)) IN (((v0.c0)-(0.6223901345479271)))) INNER JOIN rt0 ON (((''))>=((rt0.c3))) COLLATE NOCASE;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (((((COALESCE(vt0.c0, vt0.c0))OR(((((x'd28a644c868466d3')OR(v0.c0)))AND(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (((((COALESCE(vt0.c0, vt0.c0))OR(((((x'd28a644c868466d3')OR(v0.c0)))AND(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((((((COALESCE(vt0.c0, vt0.c0))OR(((((x'd28a644c868466d3')OR(v0.c0)))AND(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT rt0.c3, rt0.c1, v0.c0, rt0.c2 FROM vt0, v0 INNER JOIN rt0 ON ('0.9514238025442917' IN ()) GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, v0.c0, rt0.c2 FROM vt0, v0 INNER JOIN rt0 ON ('0.9514238025442917' IN ()) WHERE (rt0.c0 COLLATE BINARY) GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c2 UNION SELECT rt0.c3, rt0.c1, v0.c0, rt0.c2 FROM vt0, v0 INNER JOIN rt0 ON ('0.9514238025442917' IN ()) WHERE ((NOT (rt0.c0 COLLATE BINARY))) GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c2 UNION SELECT rt0.c3, rt0.c1, v0.c0, rt0.c2 FROM vt0, v0 INNER JOIN rt0 ON ('0.9514238025442917' IN ()) WHERE (((rt0.c0 COLLATE BINARY) ISNULL)) GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c2;
SELECT rt0.c3, rt0.c1, v0.c0, rt0.c2 FROM vt0, v0 INNER JOIN rt0 ON ('0.9514238025442917' IN ()) GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3 FROM rt0, v0, vt0 GROUP BY vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3;
SELECT ALL vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3 FROM rt0, v0, vt0 GROUP BY vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3 HAVING COUNT(*) UNION ALL SELECT vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3 FROM rt0, v0, vt0 GROUP BY vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3 FROM rt0, v0, vt0 GROUP BY vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3 FROM rt0, v0, vt0 GROUP BY vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3;
SELECT ALL vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3 FROM rt0, v0, vt0 GROUP BY vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3 HAVING COUNT(*) UNION ALL SELECT vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3 FROM rt0, v0, vt0 GROUP BY vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3 FROM rt0, v0, vt0 GROUP BY vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3 FROM rt0, v0, vt0 GROUP BY vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c3;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'7a45' WHEN vt0.c0 THEN vt0.c0 END, ((x'')||(vt0.c0)), CAST(vt0.c0 AS INTEGER))) AND ((((vt0.c0)OR(vt0.c0)), 0.06441770885318876, ((x'') BETWEEN (vt0.c0) AND (vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'7a45' WHEN vt0.c0 THEN vt0.c0 END, ((x'')||(vt0.c0)), CAST(vt0.c0 AS INTEGER))) AND ((((vt0.c0)OR(vt0.c0)), 0.06441770885318876, ((x'') BETWEEN (vt0.c0) AND (vt0.c0)))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'7a45' WHEN vt0.c0 THEN vt0.c0 END, ((x'')||(vt0.c0)), CAST(vt0.c0 AS INTEGER))) AND ((((vt0.c0)OR(vt0.c0)), 0.06441770885318876, ((x'') BETWEEN (vt0.c0) AND (vt0.c0)))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT DISTINCT * FROM v0, vt0, rt0 WHERE ('867905898' COLLATE RTRIM) UNION SELECT DISTINCT * FROM v0, vt0, rt0 WHERE ((NOT ('867905898' COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0 NOT INDEXED, vt0, rt0 WHERE ((('867905898' COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT rt0.c1, rt0.c0, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c1, rt0.c0, rt0.c3 FROM rt0, vt0 WHERE ((((rt0.c1)) NOT BETWEEN ((CASE '-780408285'  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END)) AND ((0.4823630442081035)))) GROUP BY rt0.c1, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c3 FROM rt0, vt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((CASE '-780408285'  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END)) AND ((0.4823630442081035)))))) GROUP BY rt0.c1, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c3 FROM rt0, vt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((CASE '-780408285'  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END)) AND ((0.4823630442081035)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c1, rt0.c0, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c3;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (CAST(MIN(v0.c0) AS NUMERIC) IN ()) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((CAST(MIN(v0.c0) AS NUMERIC) IN ()))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((CAST(MIN(v0.c0) AS NUMERIC) IN ())) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (CAST(MIN(v0.c0) AS NUMERIC) IN ()) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((CAST(MIN(v0.c0) AS NUMERIC) IN ()))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((CAST(MIN(v0.c0) AS NUMERIC) IN ())) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c3 FROM vt0, v0, rt0;
SELECT ALL rt0.c3 FROM vt0, v0, rt0 WHERE ((((rt0.c3, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c1, '')) AND ((vt0.c0, rt0.c0, v0.c0))) COLLATE NOCASE) UNION ALL SELECT rt0.c3 FROM vt0, v0, rt0 WHERE ((NOT ((((rt0.c3, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c1, '')) AND ((vt0.c0, rt0.c0, v0.c0))) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c3 FROM vt0, v0, rt0 WHERE ((((((rt0.c3, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c1, '')) AND ((vt0.c0, rt0.c0, v0.c0))) COLLATE NOCASE) ISNULL));
SELECT rt0.c3 FROM vt0, v0, rt0;
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (((((((((((v0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))OR(CASE rt0.c2  WHEN v0.c0 THEN v0.c0 ELSE rt0.c3 END)))AND((+ (v0.c0)))))AND(CAST(vt0.c0 AS INTEGER))))OR((((rt0.c0))>((rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE ((NOT (((((((((((v0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))OR(CASE rt0.c2  WHEN v0.c0 THEN v0.c0 ELSE rt0.c3 END)))AND((+ (v0.c0)))))AND(CAST(vt0.c0 AS INTEGER))))OR((((rt0.c0))>((rt0.c0)))))))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (((((((((((((v0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))OR(CASE rt0.c2  WHEN v0.c0 THEN v0.c0 ELSE rt0.c3 END)))AND((+ (v0.c0)))))AND(CAST(vt0.c0 AS INTEGER))))OR((((rt0.c0))>((rt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT rt0.c0, rt0.c3, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, v0.c0, rt0.c2;
SELECT rt0.c0, rt0.c3, v0.c0, rt0.c2 FROM rt0, v0 WHERE (((CAST(rt0.c0 AS REAL))==(v0.c0 COLLATE BINARY))) GROUP BY rt0.c0, rt0.c3, v0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c3, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT (((CAST(rt0.c0 AS REAL))=(v0.c0 COLLATE BINARY))))) GROUP BY rt0.c0, rt0.c3, v0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c3, v0.c0, rt0.c2 FROM rt0, v0 WHERE (((((CAST(rt0.c0 AS REAL))=(v0.c0 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c0, rt0.c3, v0.c0, rt0.c2;
SELECT rt0.c0, rt0.c3, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, v0.c0, rt0.c2;
SELECT rt0.c2, v0.c0, rt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING ((((SUM(rt0.c2))AND(GROUP_CONCAT(COUNT(*)))))OR(rt0.c1 COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING (NOT (((((SUM(rt0.c2))AND(GROUP_CONCAT(COUNT(*)))))OR(rt0.c1 COLLATE RTRIM)))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING ((((((SUM(rt0.c2))AND(GROUP_CONCAT(COUNT(*)))))OR(rt0.c1 COLLATE RTRIM))) ISNULL);
SELECT MAX((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c1))) COLLATE BINARY) FROM rt0, v0 ORDER BY v0.c0  NULLS FIRST;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) ISNULL)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS INTEGER)) ISNULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER)) ISNULL)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT DISTINCT * FROM vt0, v0, rt0 WHERE (ABS((('1672829494') IS TRUE))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE ((NOT (ABS((('1672829494') IS TRUE))))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE (((ABS((('1672829494') IS TRUE))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((CAST(v0.c0 AS REAL))AND(CAST(v0.c0 AS BLOB))))OR(((vt0.c0) IS FALSE)))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (((((CAST(v0.c0 AS REAL))AND(CAST(v0.c0 AS BLOB))))OR(((vt0.c0) IS FALSE)))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((((CAST(v0.c0 AS REAL))AND(CAST(v0.c0 AS BLOB))))OR(((vt0.c0) IS FALSE)))) ISNULL));
SELECT v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0, rt0.c2 FROM vt0 CROSS JOIN v0 ON ((((rt0.c0) IS TRUE))IS NOT(((rt0.c2) IS FALSE))) RIGHT OUTER JOIN rt0 ON 0.983660547298345;
SELECT ALL rt0.c3, rt0.c0, v0.c0, rt0.c1, vt0.c0, rt0.c2 FROM vt0 CROSS JOIN rt0 ON ((((((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(NULL)))AND(ROUND(v0.c0, rt0.c2))))AND(CASE rt0.c3  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c2 END)) FULL OUTER JOIN v0 ON CAST(vt0.c0 AS TEXT) GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((((MAX(rt0.c3)) BETWEEN (rt0.c0) AND (COUNT(rt0.c1)))) ISNULL) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (((((MAX(rt0.c3)) BETWEEN (rt0.c0) AND (COUNT(rt0.c1)))) ISNULL))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((((((MAX(rt0.c3)) BETWEEN (rt0.c0) AND (COUNT(rt0.c1)))) ISNULL)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((((MAX(rt0.c3)) BETWEEN (rt0.c0) AND (COUNT(rt0.c1)))) ISNULL) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (((((MAX(rt0.c3)) BETWEEN (rt0.c0) AND (COUNT(rt0.c1)))) ISNULL))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((((((MAX(rt0.c3)) BETWEEN (rt0.c0) AND (COUNT(rt0.c1)))) ISNULL)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((((((v0.c0 IN (v0.c0, v0.c0)))OR(((v0.c0) NOT NULL))))AND(((v0.c0) IS FALSE)))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((((v0.c0 IN (v0.c0, v0.c0)))OR(((v0.c0) NOT NULL))))AND(((v0.c0) IS FALSE)))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((((((v0.c0 IN (v0.c0, v0.c0)))OR(((v0.c0) NOT NULL))))AND(((v0.c0) IS FALSE)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM vt0, v0 RIGHT OUTER JOIN rt0 ON (+ (((v0.c0)GLOB(rt0.c1))));
SELECT DISTINCT * FROM vt0, v0 RIGHT OUTER JOIN rt0 ON (+ (((v0.c0)GLOB(rt0.c1)))) WHERE (((rt0.c1)<=(vt0.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0, v0 RIGHT OUTER JOIN rt0 ON (+ (((v0.c0)GLOB(rt0.c1)))) WHERE ((NOT (((rt0.c1)<=(vt0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0, v0 RIGHT OUTER JOIN rt0 ON (+ (((v0.c0)GLOB(rt0.c1)))) WHERE (((((rt0.c1)<=(vt0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0, v0 RIGHT OUTER JOIN rt0 ON (+ (((v0.c0)GLOB(rt0.c1))));
SELECT ALL rt0.c0, rt0.c1 FROM v0 NOT INDEXED, vt0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM v0, vt0, rt0 WHERE ((((CAST(v0.c0 AS TEXT)))<=(('-1294905535')))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM v0, vt0, rt0 WHERE ((NOT ((((CAST(v0.c0 AS TEXT)))<=(('-1294905535')))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM v0, vt0, rt0 WHERE ((((((CAST(v0.c0 AS TEXT)))<=(('-1294905535')))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM v0 NOT INDEXED, vt0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 GROUP BY vt0.c0, rt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 GROUP BY vt0.c0, rt0.c0, rt0.c2 HAVING (MIN(rt0.c3) IN ()) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 GROUP BY vt0.c0, rt0.c0, rt0.c2 HAVING (NOT ((MIN(rt0.c3) IN ()))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 GROUP BY vt0.c0, rt0.c0, rt0.c2 HAVING (((MIN(rt0.c3) IN ())) ISNULL);
SELECT vt0.c0, rt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 GROUP BY vt0.c0, rt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 GROUP BY vt0.c0, rt0.c0, rt0.c2 HAVING (MIN(rt0.c3) IN ()) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 GROUP BY vt0.c0, rt0.c0, rt0.c2 HAVING (NOT ((MIN(rt0.c3) IN ()))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 GROUP BY vt0.c0, rt0.c0, rt0.c2 HAVING (((MIN(rt0.c3) IN ())) ISNULL);
SELECT vt0.c0, rt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 GROUP BY vt0.c0, rt0.c0, rt0.c2;
SELECT rt0.c3, rt0.c2 FROM rt0;
SELECT ALL rt0.c3, rt0.c2 FROM rt0 WHERE (CASE WHEN rt0.c1 THEN (- (rt0.c1)) END) UNION ALL SELECT ALL rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c1 THEN (- (rt0.c1)) END))) UNION ALL SELECT rt0.c3, rt0.c2 FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN (- (rt0.c1)) END) ISNULL));
SELECT rt0.c3, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0, v0 FULL OUTER JOIN rt0 ON CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 END COLLATE RTRIM;
SELECT ALL * FROM vt0, v0 FULL OUTER JOIN rt0 ON CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 END COLLATE RTRIM WHERE (((((((((((v0.c0)OR(v0.c0)))AND(rt0.c3)))AND(v0.c0)))OR(x'')))IS NOT((NOT (rt0.c0))))) UNION ALL SELECT ALL * FROM vt0, v0 FULL OUTER JOIN rt0 ON CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 END COLLATE RTRIM WHERE ((NOT (((((((((((v0.c0)OR(v0.c0)))AND(rt0.c3)))AND(v0.c0)))OR(x'')))IS NOT((NOT (rt0.c0))))))) UNION ALL SELECT * FROM vt0, v0 FULL OUTER JOIN rt0 ON CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 END COLLATE RTRIM WHERE (((((((((((((v0.c0)OR(v0.c0)))AND(rt0.c3)))AND(v0.c0)))OR(x'')))IS NOT((NOT (rt0.c0))))) ISNULL));
SELECT ALL * FROM vt0, v0 FULL OUTER JOIN rt0 ON CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 END COLLATE RTRIM;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (NULL) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM v0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((ABS(DISTINCT rt0.c0))<=(((NULL)LIKE(rt0.c3))))) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((ABS(DISTINCT rt0.c0))<=(((NULL)LIKE(rt0.c3))))))) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((((ABS(DISTINCT rt0.c0))<=(((NULL)LIKE(rt0.c3))))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2, v0.c0, rt0.c1, vt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1, vt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c1, vt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1, vt0.c0, rt0.c3 HAVING '2S|wS썚#' UNION ALL SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c1, vt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1, vt0.c0, rt0.c3 HAVING (NOT ('2S|wS썚#')) UNION ALL SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c1, vt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1, vt0.c0, rt0.c3 HAVING (('2S|wS썚#') ISNULL);
SELECT rt0.c0, rt0.c2, v0.c0, rt0.c1, vt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1, vt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c1, vt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1, vt0.c0, rt0.c3 HAVING '2S|wS썚#' UNION ALL SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c1, vt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1, vt0.c0, rt0.c3 HAVING (NOT ('2S|wS썚#')) UNION ALL SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c1, vt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1, vt0.c0, rt0.c3 HAVING (('2S|wS썚#') ISNULL);
SELECT rt0.c0, rt0.c2, v0.c0, rt0.c1, vt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1, vt0.c0, rt0.c3;
SELECT v0.c0, vt0.c0 FROM vt0, v0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((v0.c0)<=(vt0.c0)))>=(v0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (((((v0.c0)<=(vt0.c0)))>=(v0.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((((v0.c0)<=(vt0.c0)))>=(v0.c0 COLLATE NOCASE))) ISNULL));
SELECT v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT DISTINCT * FROM v0, vt0, rt0 WHERE (TRIM(rt0.c0 COLLATE RTRIM)) UNION SELECT DISTINCT * FROM v0, vt0, rt0 WHERE ((NOT (TRIM(rt0.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT * FROM v0, vt0, rt0 WHERE (((TRIM(rt0.c0 COLLATE RTRIM)) ISNULL));
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((0.7396455041822374 IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((0.7396455041822374 IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((0.7396455041822374 IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c3, rt0.c1;
SELECT rt0.c0, rt0.c2, v0.c0, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c3, rt0.c1 HAVING CASE MAX(COUNT(*))  WHEN CAST(COUNT(*) AS INTEGER) THEN MIN(MAX(rt0.c3)) ELSE MAX(v0.c0) END UNION ALL SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c3, rt0.c1 HAVING (NOT (CASE MAX(COUNT(*))  WHEN CAST(COUNT(*) AS INTEGER) THEN MIN(MAX(rt0.c3)) ELSE MAX(v0.c0) END)) UNION ALL SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c3, rt0.c1 HAVING ((CASE MAX(COUNT(*))  WHEN CAST(COUNT(*) AS INTEGER) THEN MIN(MAX(rt0.c3)) ELSE MAX(v0.c0) END) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((-1789947590)%(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((-1789947590)%(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((-1789947590)%(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt0.c1, vt0.c0, v0.c0 FROM vt0, v0, rt0;
SELECT DISTINCT rt0.c1, vt0.c0, v0.c0 FROM vt0, v0, rt0 WHERE ('') UNION SELECT DISTINCT rt0.c1, vt0.c0, v0.c0 FROM vt0, v0, rt0 WHERE ((NOT (''))) UNION SELECT DISTINCT rt0.c1, vt0.c0, v0.c0 FROM vt0, v0, rt0 WHERE ((('') ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0, v0.c0 FROM vt0, v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN((v0.c0 IN ())) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN((v0.c0 IN ())))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN((v0.c0 IN ()))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN((v0.c0 IN ())) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN((v0.c0 IN ())))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN((v0.c0 IN ()))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c2, vt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c1, rt0.c3, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((- (rt0.c2)) COLLATE RTRIM) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((- (rt0.c2)) COLLATE RTRIM))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((((- (rt0.c2)) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c1, rt0.c3, rt0.c2, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON ((((rt0.c1)OR((rt0.c2 IN ()))))OR(((((((((((((rt0.c1)AND(rt0.c2)))OR('z6')))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)))OR('F'))));
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON ((((rt0.c1)OR((rt0.c2 IN ()))))OR(((((((((((((rt0.c1)AND(rt0.c2)))OR('z6')))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)))OR('F')))) WHERE (ABS(NULL)) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON ((((rt0.c1)OR((rt0.c2 IN ()))))OR(((((((((((((rt0.c1)AND(rt0.c2)))OR('z6')))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)))OR('F')))) WHERE ((NOT (ABS(NULL)))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON ((((rt0.c1)OR((rt0.c2 IN ()))))OR(((((((((((((rt0.c1)AND(rt0.c2)))OR('z6')))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)))OR('F')))) WHERE (((ABS(NULL)) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON ((((rt0.c1)OR((rt0.c2 IN ()))))OR(((((((((((((rt0.c1)AND(rt0.c2)))OR('z6')))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)))OR('F'))));
SELECT ALL rt0.c2, v0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c2, v0.c0;
SELECT ALL rt0.c2, v0.c0 FROM rt0, v0, vt0 WHERE (rt0.c1) GROUP BY rt0.c2, v0.c0 UNION SELECT rt0.c2, v0.c0 FROM rt0, v0, vt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c2, v0.c0 UNION SELECT rt0.c2, v0.c0 FROM rt0, v0, vt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c2, v0.c0;
SELECT ALL rt0.c2, v0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c2, v0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0 HAVING ((SUM(AVG(NULL)))*(((rt0.c3) IS FALSE))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0 HAVING (NOT (((SUM(AVG(NULL)))*(((rt0.c3) IS FALSE))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0 HAVING ((((SUM(AVG(NULL)))*(((rt0.c3) IS FALSE)))) ISNULL);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON ((- (vt0.c0)) IN (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN x'' THEN x'' END)) RIGHT OUTER JOIN v0 ON ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))))==((((rt0.c1)GLOB(x'')))));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON ((- (vt0.c0)) IN (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN x'' THEN x'' END)) RIGHT OUTER JOIN v0 ON ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))))==((((rt0.c1)GLOB(x''))))) WHERE (CAST('0.983660547298345' AS INTEGER) COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON ((- (vt0.c0)) IN (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN x'' THEN x'' END)) RIGHT OUTER JOIN v0 ON ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))))=((((rt0.c1)GLOB(x''))))) WHERE ((NOT (CAST('0.983660547298345' AS INTEGER) COLLATE RTRIM))) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN rt0 ON ((- (vt0.c0)) IN (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN x'' THEN x'' END)) RIGHT OUTER JOIN v0 ON ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))))==((((rt0.c1)GLOB(x''))))) WHERE (((CAST('0.983660547298345' AS INTEGER) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON ((- (vt0.c0)) IN (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN x'' THEN x'' END)) RIGHT OUTER JOIN v0 ON ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))))==((((rt0.c1)GLOB(x'')))));
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((- (((vt0.c0)&(rt0.c2))))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((NOT ((- (((vt0.c0)&(rt0.c2))))))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((((- (((vt0.c0)&(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT ALL vt0.c0, v0.c0, rt0.c0, rt0.c2, rt0.c3 FROM v0 CROSS JOIN vt0 ON ((CASE v0.c0  WHEN vt0.c0 THEN rt0.c3 WHEN v0.c0 THEN rt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)LIKE(((rt0.c3) BETWEEN (v0.c0) AND (rt0.c0)))) FULL OUTER JOIN rt0 ON CASE (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))  WHEN ((((vt0.c0)OR(rt0.c0)))AND(v0.c0)) THEN ((rt0.c2)OR('-107367001')) END GROUP BY vt0.c0, v0.c0, rt0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c3, rt0.c1 FROM vt0 INNER JOIN rt0 ON CAST(((rt0.c0) BETWEEN (vt0.c0) AND ('785113117')) AS TEXT) GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM vt0 INNER JOIN rt0 ON CAST(((rt0.c0) BETWEEN (vt0.c0) AND ('785113117')) AS TEXT) GROUP BY rt0.c3, rt0.c1 HAVING NULL UNION ALL SELECT rt0.c3, rt0.c1 FROM vt0 INNER JOIN rt0 ON CAST(((rt0.c0) BETWEEN (vt0.c0) AND ('785113117')) AS TEXT) GROUP BY rt0.c3, rt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c3, rt0.c1 FROM vt0 INNER JOIN rt0 ON CAST(((rt0.c0) BETWEEN (vt0.c0) AND ('785113117')) AS TEXT) GROUP BY rt0.c3, rt0.c1 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c3, rt0.c1 FROM vt0 INNER JOIN rt0 ON CAST(((rt0.c0) BETWEEN (vt0.c0) AND ('785113117')) AS TEXT) GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM vt0 INNER JOIN rt0 ON CAST(((rt0.c0) BETWEEN (vt0.c0) AND ('785113117')) AS TEXT) GROUP BY rt0.c3, rt0.c1 HAVING NULL UNION ALL SELECT rt0.c3, rt0.c1 FROM vt0 INNER JOIN rt0 ON CAST(((rt0.c0) BETWEEN (vt0.c0) AND ('785113117')) AS TEXT) GROUP BY rt0.c3, rt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c3, rt0.c1 FROM vt0 INNER JOIN rt0 ON CAST(((rt0.c0) BETWEEN (vt0.c0) AND ('785113117')) AS TEXT) GROUP BY rt0.c3, rt0.c1 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c3, rt0.c1 FROM vt0 INNER JOIN rt0 ON CAST(((rt0.c0) BETWEEN (vt0.c0) AND ('785113117')) AS TEXT) GROUP BY rt0.c3, rt0.c1;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (CASE CASE WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN CAST(v0.c0 AS REAL) THEN LAST_INSERT_ROWID() WHEN 'ꙵ 	' THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN 0X21e3c4c0 THEN (((v0.c0))>=((v0.c0))) ELSE (((v0.c0))<((v0.c0))) END) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (CASE CASE WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN CAST(v0.c0 AS REAL) THEN LAST_INSERT_ROWID() WHEN 'ꙵ 	' THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN 0X21e3c4c0 THEN (((v0.c0))>=((v0.c0))) ELSE (((v0.c0))<((v0.c0))) END))) UNION ALL SELECT ALL * FROM v0 WHERE (((CASE CASE WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN CAST(v0.c0 AS REAL) THEN LAST_INSERT_ROWID() WHEN 'ꙵ 	' THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN 0X21e3c4c0 THEN (((v0.c0))>=((v0.c0))) ELSE (((v0.c0))<((v0.c0))) END) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM vt0, rt0 CROSS JOIN v0 ON rt0.c1;
SELECT DISTINCT * FROM vt0, rt0 CROSS JOIN v0 ON rt0.c1 WHERE ((- ((((rt0.c2))<((vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, rt0 CROSS JOIN v0 ON rt0.c1 WHERE ((NOT ((- ((((rt0.c2))<((vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0, rt0 CROSS JOIN v0 ON rt0.c1 WHERE ((((- ((((rt0.c2))<((vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0 CROSS JOIN v0 ON rt0.c1;
SELECT ALL rt0.c3 FROM rt0, v0, vt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0, v0, vt0 WHERE (((((((((((rt0.c2)LIKE(rt0.c2)))AND(NULL)))OR((vt0.c0 IN ()))))OR((('1638745485') IS FALSE))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0, v0, vt0 WHERE ((NOT (((((((((((rt0.c2)LIKE(rt0.c2)))AND(NULL)))OR((vt0.c0 IN ()))))OR((('1638745485') IS FALSE))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0, v0, vt0 WHERE (((((((((((((rt0.c2)LIKE(rt0.c2)))AND(NULL)))OR((vt0.c0 IN ()))))OR((('1638745485') IS FALSE))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END))) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0, v0, vt0 GROUP BY rt0.c3;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(((((SUM(vt0.c0))AND(COUNT(SUM(vt0.c0)))))AND(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(((((SUM(vt0.c0))AND(COUNT(SUM(vt0.c0)))))AND(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(((((SUM(vt0.c0))AND(COUNT(SUM(vt0.c0)))))AND(vt0.c0)))) ISNULL);
SELECT ALL * FROM v0, rt0, vt0;
SELECT * FROM v0, rt0, vt0 WHERE ((((((rt0.c3)) BETWEEN ((x'a377')) AND ((rt0.c2))))|(CASE WHEN rt0.c1 THEN rt0.c3 ELSE vt0.c0 END))) UNION ALL SELECT * FROM v0, rt0, vt0 WHERE ((NOT ((((((rt0.c3)) BETWEEN ((x'a377')) AND ((rt0.c2))))|(CASE WHEN rt0.c1 THEN rt0.c3 ELSE vt0.c0 END))))) UNION ALL SELECT ALL * FROM v0, rt0, vt0 WHERE ((((((((rt0.c3)) BETWEEN ((x'a377')) AND ((rt0.c2))))|(CASE WHEN rt0.c1 THEN rt0.c3 ELSE vt0.c0 END))) ISNULL));
SELECT ALL * FROM v0, rt0, vt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((rt0.c3)||(rt0.c2))) ISNULL)) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((rt0.c3)||(rt0.c2))) ISNULL)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((rt0.c3)||(rt0.c2))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(MAX(MIN(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(MAX(MIN(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(MAX(MIN(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN '1672829494' ELSE vt0.c0 END, CAST(vt0.c0 AS NUMERIC), ((vt0.c0)%(vt0.c0)), ((vt0.c0)>>(vt0.c0)), ((vt0.c0)|(NULL))))!=((vt0.c0 COLLATE RTRIM, (- (vt0.c0)), vt0.c0, ((vt0.c0) BETWEEN (x'') AND (vt0.c0)), ((vt0.c0) IS TRUE))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((CASE vt0.c0  WHEN vt0.c0 THEN '1672829494' ELSE vt0.c0 END, CAST(vt0.c0 AS NUMERIC), ((vt0.c0)%(vt0.c0)), ((vt0.c0)>>(vt0.c0)), ((vt0.c0)|(NULL))))!=((vt0.c0 COLLATE RTRIM, (- (vt0.c0)), vt0.c0, ((vt0.c0) BETWEEN (x'') AND (vt0.c0)), ((vt0.c0) IS TRUE))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((CASE vt0.c0  WHEN vt0.c0 THEN '1672829494' ELSE vt0.c0 END, CAST(vt0.c0 AS NUMERIC), ((vt0.c0)%(vt0.c0)), ((vt0.c0)>>(vt0.c0)), ((vt0.c0)|(NULL))))!=((vt0.c0 COLLATE RTRIM, (- (vt0.c0)), vt0.c0, ((vt0.c0) BETWEEN (x'') AND (vt0.c0)), ((vt0.c0) IS TRUE))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((SQLITE_VERSION()) BETWEEN (((0xffffffffd17bea23) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((SQLITE_VERSION()) BETWEEN (((0Xffffffffd17bea23) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((SQLITE_VERSION()) BETWEEN (((0xffffffffd17bea23) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c3 FROM rt0, v0 INNER JOIN vt0 ON (((((rt0.c3))<=((rt0.c0)))) BETWEEN (SQLITE_COMPILEOPTION_USED(rt0.c2)) AND (0.004166806719134053)) GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c3 FROM rt0, v0 INNER JOIN vt0 ON (((((rt0.c3))<=((rt0.c0)))) BETWEEN (SQLITE_COMPILEOPTION_USED(rt0.c2)) AND (0.004166806719134053)) WHERE (v0.c0) GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c3 UNION SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c3 FROM rt0, v0 INNER JOIN vt0 ON (((((rt0.c3))<=((rt0.c0)))) BETWEEN (SQLITE_COMPILEOPTION_USED(rt0.c2)) AND (0.004166806719134053)) WHERE ((NOT (v0.c0))) GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c3 UNION SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c3 FROM rt0, v0 INNER JOIN vt0 ON (((((rt0.c3))<=((rt0.c0)))) BETWEEN (SQLITE_COMPILEOPTION_USED(rt0.c2)) AND (0.004166806719134053)) WHERE (((v0.c0) ISNULL)) GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c3 FROM rt0, v0 INNER JOIN vt0 ON (((((rt0.c3))<=((rt0.c0)))) BETWEEN (SQLITE_COMPILEOPTION_USED(rt0.c2)) AND (0.004166806719134053)) GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c3;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((((v0.c0)LIKE(COUNT(*))))<=(TOTAL(vt0.c0))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (((((v0.c0)LIKE(COUNT(*))))<=(TOTAL(vt0.c0))))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((((((v0.c0)LIKE(COUNT(*))))<=(TOTAL(vt0.c0)))) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((((v0.c0)LIKE(COUNT(*))))<=(TOTAL(vt0.c0))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (((((v0.c0)LIKE(COUNT(*))))<=(TOTAL(vt0.c0))))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((((((v0.c0)LIKE(COUNT(*))))<=(TOTAL(vt0.c0)))) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) ISNULL)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((CAST(v0.c0 AS INTEGER)) ISNULL)))) UNION ALL SELECT ALL * FROM v0 WHERE (((((CAST(v0.c0 AS INTEGER)) ISNULL)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE ((((v0.c0) NOT NULL) IN ())) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT ((((v0.c0) NOT NULL) IN ())))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((((((v0.c0) NOT NULL) IN ())) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 WHERE (CASE v0.c0  WHEN (+ (vt0.c0)) THEN ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) WHEN ((((vt0.c0)AND(520135686)))AND(v0.c0)) THEN v0.c0 COLLATE NOCASE WHEN UNLIKELY(vt0.c0) THEN ((vt0.c0)>=(vt0.c0)) ELSE (NULL IN ()) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((NOT (CASE v0.c0  WHEN (+ (vt0.c0)) THEN ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) WHEN ((((vt0.c0)AND(520135686)))AND(v0.c0)) THEN v0.c0 COLLATE NOCASE WHEN UNLIKELY(vt0.c0) THEN ((vt0.c0)>=(vt0.c0)) ELSE (NULL IN ()) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((CASE v0.c0  WHEN (+ (vt0.c0)) THEN ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) WHEN ((((vt0.c0)AND(520135686)))AND(v0.c0)) THEN v0.c0 COLLATE NOCASE WHEN UNLIKELY(vt0.c0) THEN ((vt0.c0)>=(vt0.c0)) ELSE (NULL IN ()) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT v0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c0;
SELECT v0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c0 HAVING TOTAL(rt0.c0) UNION ALL SELECT v0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c0 HAVING (NOT (TOTAL(rt0.c0))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c0 HAVING ((TOTAL(rt0.c0)) ISNULL);
SELECT v0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c0;
SELECT v0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c0 HAVING TOTAL(rt0.c0) UNION ALL SELECT v0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c0 HAVING (NOT (TOTAL(rt0.c0))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c0 HAVING ((TOTAL(rt0.c0)) ISNULL);
SELECT v0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((- (((((v0.c0)OR(v0.c0)))AND(v0.c0))))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((- (((((v0.c0)OR(v0.c0)))AND(v0.c0))))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((- (((((v0.c0)OR(v0.c0)))AND(v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c0, v0.c0, rt0.c1, rt0.c3 FROM rt0, v0, vt0;
SELECT DISTINCT rt0.c0, v0.c0, rt0.c1, rt0.c3 FROM rt0, v0, vt0 WHERE ((((('谌9' COLLATE NOCASE)AND(((vt0.c0)/(v0.c0)))))OR(((rt0.c0)AND(rt0.c1))))) UNION SELECT DISTINCT rt0.c0, v0.c0, rt0.c1, rt0.c3 FROM rt0, v0, vt0 WHERE ((NOT ((((('谌9' COLLATE NOCASE)AND(((vt0.c0)/(v0.c0)))))OR(((rt0.c0)AND(rt0.c1))))))) UNION SELECT DISTINCT rt0.c0, v0.c0, rt0.c1, rt0.c3 FROM rt0, v0, vt0 WHERE ((((((('谌9' COLLATE NOCASE)AND(((vt0.c0)/(v0.c0)))))OR(((rt0.c0)AND(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c0, v0.c0, rt0.c1, rt0.c3 FROM rt0, v0, vt0;
SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c1;
SELECT rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 WHERE (CAST(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(x'60473b9d')) AS INTEGER)) GROUP BY rt0.c2, v0.c0, rt0.c1 UNION SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (CAST(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(x'60473b9d')) AS INTEGER)))) GROUP BY rt0.c2, v0.c0, rt0.c1 UNION SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 WHERE (((CAST(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(x'60473b9d')) AS INTEGER)) ISNULL)) GROUP BY rt0.c2, v0.c0, rt0.c1;
SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((AVG(COUNT(TOTAL(MIN(v0.c0)))))AND(v0.c0)))AND(MAX(v0.c0))))AND(SUM(v0.c0))))AND(AVG(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((((((AVG(COUNT(TOTAL(MIN(v0.c0)))))AND(v0.c0)))AND(MAX(v0.c0))))AND(SUM(v0.c0))))AND(AVG(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((((AVG(COUNT(TOTAL(MIN(v0.c0)))))AND(v0.c0)))AND(MAX(v0.c0))))AND(SUM(v0.c0))))AND(AVG(v0.c0)))) ISNULL);
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE (CAST(rt0.c0 AS TEXT) COLLATE RTRIM) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS TEXT) COLLATE RTRIM))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((~ (vt0.c0))))!=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((~ (vt0.c0))))!=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((~ (vt0.c0))))!=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)IS(vt0.c0))) NOT BETWEEN (vt0.c0) AND (((((vt0.c0)AND('-1809504339')))OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)IS(vt0.c0))) NOT BETWEEN (vt0.c0) AND (((((vt0.c0)AND('-1809504339')))OR(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)IS(vt0.c0))) NOT BETWEEN (vt0.c0) AND (((((vt0.c0)AND('-1809504339')))OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c3, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c3, vt0.c0, rt0.c1;
SELECT ALL rt0.c3, vt0.c0, rt0.c1 FROM rt0, vt0 NOT INDEXED GROUP BY rt0.c3, vt0.c0, rt0.c1 HAVING vt0.c0 UNION ALL SELECT rt0.c3, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c3, vt0.c0, rt0.c1 HAVING (NOT (vt0.c0)) UNION ALL SELECT rt0.c3, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c3, vt0.c0, rt0.c1 HAVING ((vt0.c0) ISNULL);
SELECT ALL rt0.c3, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c3, vt0.c0, rt0.c1;
SELECT ALL rt0.c3, vt0.c0, rt0.c1 FROM rt0, vt0 NOT INDEXED GROUP BY rt0.c3, vt0.c0, rt0.c1 HAVING vt0.c0 UNION ALL SELECT rt0.c3, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c3, vt0.c0, rt0.c1 HAVING (NOT (vt0.c0)) UNION ALL SELECT rt0.c3, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c3, vt0.c0, rt0.c1 HAVING ((vt0.c0) ISNULL);
SELECT ALL rt0.c3, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c3, vt0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c0 FROM rt0, v0;
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c0 FROM rt0, v0 WHERE (0.030048787200553484) UNION ALL SELECT rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c0 FROM rt0, v0 WHERE ((NOT (0.030048787200553484))) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c0 FROM rt0, v0 WHERE (((0.030048787200553484) ISNULL));
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c3, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c3, rt0.c1 FROM vt0, rt0 WHERE ((CAST(rt0.c1 AS INTEGER) IN (((((((((((((rt0.c3)OR('z6')))OR(x'')))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1))))) UNION SELECT DISTINCT rt0.c3, rt0.c1 FROM vt0, rt0 WHERE ((NOT ((CAST(rt0.c1 AS INTEGER) IN (((((((((((((rt0.c3)OR('z6')))OR(x'')))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1))))))) UNION SELECT DISTINCT rt0.c3, rt0.c1 FROM vt0, rt0 WHERE ((((CAST(rt0.c1 AS INTEGER) IN (((((((((((((rt0.c3)OR('z6')))OR(x'')))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1 FROM vt0, rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE (COALESCE(GLOB(rt0.c3, rt0.c3), ((rt0.c0)==(rt0.c3)), CAST(rt0.c3 AS TEXT), '!鱩')) GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3 UNION SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (COALESCE(GLOB(rt0.c3, rt0.c3), ((rt0.c0)=(rt0.c3)), CAST(rt0.c3 AS TEXT), '!鱩')))) GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE (((COALESCE(GLOB(rt0.c3, rt0.c3), ((rt0.c0)=(rt0.c3)), CAST(rt0.c3 AS TEXT), '!鱩')) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (CAST(TOTAL(MAX(SUM(AVG(TOTAL(MAX(TOTAL(vt0.c0))))))) AS INTEGER) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((CAST(TOTAL(MAX(SUM(AVG(TOTAL(MAX(TOTAL(vt0.c0))))))) AS INTEGER) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((CAST(TOTAL(MAX(SUM(AVG(TOTAL(MAX(TOTAL(vt0.c0))))))) AS INTEGER) IN ())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (CAST(TOTAL(MAX(SUM(AVG(TOTAL(MAX(TOTAL(vt0.c0))))))) AS INTEGER) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((CAST(TOTAL(MAX(SUM(AVG(TOTAL(MAX(TOTAL(vt0.c0))))))) AS INTEGER) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((CAST(TOTAL(MAX(SUM(AVG(TOTAL(MAX(TOTAL(vt0.c0))))))) AS INTEGER) IN ())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0, rt0, v0;
SELECT * FROM vt0, rt0, v0 WHERE ((v0.c0 COLLATE BINARY IN ())) UNION ALL SELECT ALL * FROM vt0, rt0, v0 WHERE ((NOT ((v0.c0 COLLATE BINARY IN ())))) UNION ALL SELECT ALL * FROM vt0, rt0, v0 WHERE ((((v0.c0 COLLATE BINARY IN ())) ISNULL));
SELECT * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (rt0.c3) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT ALL vt0.c0, v0.c0 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (((rt0.c3 IN ())) NOT NULL) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (((rt0.c3 IN ())) NOT NULL) WHERE (rt0.c2) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (((rt0.c3 IN ())) NOT NULL) WHERE ((NOT (rt0.c2))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (((rt0.c3 IN ())) NOT NULL) WHERE (((rt0.c2) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (((rt0.c3 IN ())) NOT NULL) GROUP BY vt0.c0, v0.c0;
SELECT ALL rt0.c0, vt0.c0, rt0.c3, rt0.c1 FROM v0, vt0 FULL OUTER JOIN rt0 ON ((v0.c0 COLLATE NOCASE)*(PRINTF(rt0.c2))) GROUP BY rt0.c0, vt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c3, rt0.c1 FROM v0, vt0 FULL OUTER JOIN rt0 ON ((v0.c0 COLLATE NOCASE)*(PRINTF(rt0.c2))) GROUP BY rt0.c0, vt0.c0, rt0.c3, rt0.c1 HAVING GROUP_CONCAT(TOTAL(COUNT(AVG(MIN(rt0.c2))))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c3, rt0.c1 FROM v0, vt0 FULL OUTER JOIN rt0 ON ((v0.c0 COLLATE NOCASE)*(PRINTF(rt0.c2))) GROUP BY rt0.c0, vt0.c0, rt0.c3, rt0.c1 HAVING (NOT (GROUP_CONCAT(TOTAL(COUNT(AVG(MIN(rt0.c2))))))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c3, rt0.c1 FROM v0, vt0 FULL OUTER JOIN rt0 ON ((v0.c0 COLLATE NOCASE)*(PRINTF(rt0.c2))) GROUP BY rt0.c0, vt0.c0, rt0.c3, rt0.c1 HAVING ((GROUP_CONCAT(TOTAL(COUNT(AVG(MIN(rt0.c2)))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END))!=((((((rt0.c3)OR(rt0.c0)))AND(rt0.c1)))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END))!=((((((rt0.c3)OR(rt0.c0)))AND(rt0.c1)))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END))<>((((((rt0.c3)OR(rt0.c0)))AND(rt0.c1)))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (x'') UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (x''))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((x'') ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (vt0.c0) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT(highlight(COUNT(SUM(AVG(SUM(COUNT(*))))), TOTAL(x'4f09'), rt0.c2, COUNT(SUM(AVG(SUM(GROUP_CONCAT(COUNT(*)))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(highlight(COUNT(SUM(AVG(SUM(COUNT(*))))), TOTAL(x'4f09'), rt0.c2, COUNT(SUM(AVG(SUM(GROUP_CONCAT(COUNT(*)))))))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(highlight(COUNT(SUM(AVG(SUM(COUNT(*))))), TOTAL(x'4f09'), rt0.c2, COUNT(SUM(AVG(SUM(GROUP_CONCAT(COUNT(*))))))))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((v0.c0) ISNULL)) UNION ALL SELECT * FROM v0 WHERE ((NOT (((v0.c0) ISNULL)))) UNION ALL SELECT ALL * FROM v0 WHERE (((((v0.c0) ISNULL)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (((rt0.c0 COLLATE NOCASE)/(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(vt0.c0))))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE ((NOT (((rt0.c0 COLLATE NOCASE)/(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(vt0.c0))))))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (((((rt0.c0 COLLATE NOCASE)/(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, vt0 WHERE (((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END)GLOB(CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c1 END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM rt0, vt0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END)GLOB(CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c1 END))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM rt0, vt0 WHERE (((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END)GLOB(CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c1 END))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0;
SELECT rt0.c2, rt0.c3, v0.c0, rt0.c0, rt0.c1 FROM rt0 INNER JOIN v0 ON ((((((((((((((rt0.c0)&(rt0.c2)))AND(((rt0.c3) IS TRUE))))AND(((rt0.c0)>>(rt0.c0)))))AND(((rt0.c3) ISNULL))))AND(v0.c0 COLLATE BINARY)))AND(((rt0.c1) NOT BETWEEN (v0.c0) AND (NULL)))))AND(LIKELY(DISTINCT rt0.c3))) GROUP BY rt0.c2, rt0.c3, v0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, v0.c0, rt0.c0, rt0.c1 FROM rt0 INNER JOIN v0 ON ((((((((((((((rt0.c0)&(rt0.c2)))AND(((rt0.c3) IS TRUE))))AND(((rt0.c0)>>(rt0.c0)))))AND(((rt0.c3) ISNULL))))AND(v0.c0 COLLATE BINARY)))AND(((rt0.c1) NOT BETWEEN (v0.c0) AND (NULL)))))AND(LIKELY(DISTINCT rt0.c3))) GROUP BY rt0.c2, rt0.c3, v0.c0, rt0.c0, rt0.c1 HAVING GROUP_CONCAT(AVG(rt0.c3)) UNION ALL SELECT ALL rt0.c2, rt0.c3, v0.c0, rt0.c0, rt0.c1 FROM rt0 INNER JOIN v0 ON ((((((((((((((rt0.c0)&(rt0.c2)))AND(((rt0.c3) IS TRUE))))AND(((rt0.c0)>>(rt0.c0)))))AND(((rt0.c3) ISNULL))))AND(v0.c0 COLLATE BINARY)))AND(((rt0.c1) NOT BETWEEN (v0.c0) AND (NULL)))))AND(LIKELY(DISTINCT rt0.c3))) GROUP BY rt0.c2, rt0.c3, v0.c0, rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(AVG(rt0.c3)))) UNION ALL SELECT rt0.c2, rt0.c3, v0.c0, rt0.c0, rt0.c1 FROM rt0 INNER JOIN v0 ON ((((((((((((((rt0.c0)&(rt0.c2)))AND(((rt0.c3) IS TRUE))))AND(((rt0.c0)>>(rt0.c0)))))AND(((rt0.c3) ISNULL))))AND(v0.c0 COLLATE BINARY)))AND(((rt0.c1) NOT BETWEEN (v0.c0) AND (NULL)))))AND(LIKELY(DISTINCT rt0.c3))) GROUP BY rt0.c2, rt0.c3, v0.c0, rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(AVG(rt0.c3))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) NOT BETWEEN (v0.c0) AND (CAST(v0.c0 AS NUMERIC)))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) NOT BETWEEN (v0.c0) AND (CAST(v0.c0 AS NUMERIC)))))) UNION ALL SELECT * FROM v0 WHERE ((((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) NOT BETWEEN (v0.c0) AND (CAST(v0.c0 AS NUMERIC)))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, x'5100')) BETWEEN ((x'', vt0.c0, vt0.c0)) AND ((vt0.c0, 0x3aadf259, vt0.c0))))=(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c0, vt0.c0, x'5100')) BETWEEN ((x'', vt0.c0, vt0.c0)) AND ((vt0.c0, 0X3aadf259, vt0.c0))))=(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c0, vt0.c0, x'5100')) BETWEEN ((x'', vt0.c0, vt0.c0)) AND ((vt0.c0, 0x3aadf259, vt0.c0))))==(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c3, v0.c0 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c3, v0.c0;
SELECT ALL rt0.c3, v0.c0 FROM v0 NATURAL JOIN rt0 WHERE (((x'') IS TRUE)) GROUP BY rt0.c3, v0.c0 UNION SELECT ALL rt0.c3, v0.c0 FROM v0 NATURAL JOIN rt0 WHERE ((NOT (((x'') IS TRUE)))) GROUP BY rt0.c3, v0.c0 UNION SELECT rt0.c3, v0.c0 FROM v0 NATURAL JOIN rt0 WHERE (((((x'') IS TRUE)) ISNULL)) GROUP BY rt0.c3, v0.c0;
SELECT ALL rt0.c3, v0.c0 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c3, v0.c0;
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON CASE (rt0.c2 IN ())  WHEN (((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, 0.4401909144330375, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c2))) THEN COALESCE(rt0.c2, rt0.c2, vt0.c0, rt0.c0) WHEN PRINTF(rt0.c0) THEN ((((v0.c0)OR(rt0.c1)))AND(v0.c0)) WHEN GLOB(0.8155263749507348, vt0.c0) THEN ((((((((rt0.c1)OR(rt0.c1)))OR(NULL)))AND(vt0.c0)))OR(rt0.c2)) ELSE ((rt0.c0)&(0xfffffffffedfdf39)) END CROSS JOIN rt0 ON (NOT (((((v0.c0)OR(rt0.c0)))OR(rt0.c1)))) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((((rt0.c3)||(v0.c0))) ISNULL);
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON ((((rt0.c3)||(v0.c0))) ISNULL) WHERE ((((+ (rt0.c2))) ISNULL)) UNION ALL SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((((rt0.c3)||(v0.c0))) ISNULL) WHERE ((NOT ((((+ (rt0.c2))) ISNULL)))) UNION ALL SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((((rt0.c3)||(v0.c0))) ISNULL) WHERE ((((((+ (rt0.c2))) ISNULL)) ISNULL));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((((rt0.c3)||(v0.c0))) ISNULL);
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (NULL) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c3, rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (CASE ((rt0.c1)+(vt0.c0))  WHEN rt0.c0 COLLATE NOCASE THEN (((rt0.c1))<((rt0.c1))) END) GROUP BY rt0.c3, rt0.c0, vt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT (CASE ((rt0.c1)+(vt0.c0))  WHEN rt0.c0 COLLATE NOCASE THEN (((rt0.c1))<((rt0.c1))) END))) GROUP BY rt0.c3, rt0.c0, vt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c3, rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((CASE ((rt0.c1)+(vt0.c0))  WHEN rt0.c0 COLLATE NOCASE THEN (((rt0.c1))<((rt0.c1))) END) ISNULL)) GROUP BY rt0.c3, rt0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c3 HAVING MAX(SUM(rt0.c0)) UNION ALL SELECT rt0.c2, v0.c0, rt0.c0, rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c3 HAVING (NOT (MAX(SUM(rt0.c0)))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c3 HAVING ((MAX(SUM(rt0.c0))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (1.70204803E8)))!=(((vt0.c0) IS FALSE)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (1.70204803E8)))!=(((vt0.c0) IS FALSE)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (1.70204803E8)))!=(((vt0.c0) IS FALSE)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOT BETWEEN ((NOT (rt0.c3))) AND (((rt0.c3) IS FALSE)))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOT BETWEEN ((NOT (rt0.c3))) AND (((rt0.c3) IS FALSE)))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOT BETWEEN ((NOT (rt0.c3))) AND (((rt0.c3) IS FALSE)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON (~ (NULL COLLATE RTRIM)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON (~ (NULL COLLATE RTRIM)) WHERE ((((v0.c0)GLOB(v0.c0)) IN (((v0.c0) NOT BETWEEN (vt0.c0) AND ('0.10224300262854713'))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON (~ (NULL COLLATE RTRIM)) WHERE ((NOT ((((v0.c0)GLOB(v0.c0)) IN (((v0.c0) NOT BETWEEN (vt0.c0) AND ('0.10224300262854713'))))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON (~ (NULL COLLATE RTRIM)) WHERE ((((((v0.c0)GLOB(v0.c0)) IN (((v0.c0) NOT BETWEEN (vt0.c0) AND ('0.10224300262854713'))))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON (~ (NULL COLLATE RTRIM)) GROUP BY v0.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0, v0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0, v0.c0 HAVING LIKELIHOOD(DISTINCT AVG(GROUP_CONCAT(v0.c0)), 0.3998091191912373) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0, v0.c0 HAVING (NOT (LIKELIHOOD(DISTINCT AVG(GROUP_CONCAT(v0.c0)), 0.3998091191912373))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0, v0.c0 HAVING ((LIKELIHOOD(DISTINCT AVG(GROUP_CONCAT(v0.c0)), 0.3998091191912373)) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((+ (((x'fae8')/(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((+ (((x'fae8')/(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((+ (((x'fae8')/(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON (- (TRIM(vt0.c0, rt0.c2))) RIGHT OUTER JOIN rt0 ON (((rt0.c3)) BETWEEN (('1564962071')) AND ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c3 END)));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0)/(v0.c0)) IN (CAST(v0.c0 AS BLOB)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)/(v0.c0)) IN (CAST(v0.c0 AS BLOB)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0)/(v0.c0)) IN (CAST(v0.c0 AS BLOB)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0, v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0, v0, vt0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(SUM(rt0.c2))) ISNULL) UNION ALL SELECT ALL v0.c0 FROM rt0, v0, vt0 GROUP BY v0.c0 HAVING (NOT (((GROUP_CONCAT(SUM(rt0.c2))) ISNULL))) UNION ALL SELECT v0.c0 FROM rt0 NOT INDEXED, v0, vt0 GROUP BY v0.c0 HAVING ((((GROUP_CONCAT(SUM(rt0.c2))) ISNULL)) ISNULL);
SELECT vt0.c0, v0.c0 FROM v0, vt0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((v0.c0)|(v0.c0))) ISNULL)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (((((v0.c0)|(v0.c0))) ISNULL)))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((((v0.c0)|(v0.c0))) ISNULL)) ISNULL));
SELECT vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c2)%(rt0.c2)) ELSE rt0.c0 END LEFT OUTER JOIN v0 ON '-1935686498';
SELECT DISTINCT v0.c0, vt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c2)%(rt0.c2)) ELSE rt0.c0 END LEFT OUTER JOIN v0 ON '-1935686498' WHERE ((((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)) IN ())) UNION SELECT DISTINCT v0.c0, vt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c2)%(rt0.c2)) ELSE rt0.c0 END LEFT OUTER JOIN v0 ON '-1935686498' WHERE ((NOT ((((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)) IN ())))) UNION SELECT DISTINCT v0.c0, vt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c2)%(rt0.c2)) ELSE rt0.c0 END LEFT OUTER JOIN v0 ON '-1935686498' WHERE ((((((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)) IN ())) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c2)%(rt0.c2)) ELSE rt0.c0 END LEFT OUTER JOIN v0 ON '-1935686498';
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 WHERE ((('1870454259')GLOB(vt0.c0)) COLLATE RTRIM) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((NOT ((('1870454259')GLOB(vt0.c0)) COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((((('1870454259')GLOB(vt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((AVG(v0.c0)) IS TRUE)) NOT NULL) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((AVG(v0.c0)) IS TRUE)) NOT NULL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((AVG(v0.c0)) IS TRUE)) NOT NULL)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((AVG(v0.c0)) IS TRUE)) NOT NULL) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((AVG(v0.c0)) IS TRUE)) NOT NULL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((AVG(v0.c0)) IS TRUE)) NOT NULL)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (rt0.c1) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((rt0.c1) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.c0, rt0.c1, rt0.c3, rt0.c0, v0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN v0 ON ((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN vt0.c0 END)OR((- (rt0.c1)))) FULL OUTER JOIN rt0 ON ',eE5K.' GROUP BY vt0.c0, rt0.c1, rt0.c3, rt0.c0, v0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c3 FROM vt0, rt0, v0 GROUP BY rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c3 FROM vt0, rt0, v0 GROUP BY rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c3 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c3 FROM vt0, rt0, v0 GROUP BY rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c3 FROM vt0, rt0, v0 GROUP BY rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c3 FROM vt0, rt0, v0 GROUP BY rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c3 FROM vt0, rt0, v0 GROUP BY rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c3 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c3 FROM vt0, rt0, v0 GROUP BY rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c3 FROM vt0, rt0, v0 GROUP BY rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c3 FROM vt0, rt0, v0 GROUP BY rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c3;
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((vt0.c0 IN ()), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))), ((vt0.c0)IS NOT(vt0.c0)))) AND (((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))), ((vt0.c0) IS FALSE), (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, v0.c0))<>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x'fb34'))))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((vt0.c0 IN ()), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))), ((vt0.c0)IS NOT(vt0.c0)))) AND (((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))), ((vt0.c0) IS FALSE), (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, v0.c0))!=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x'fb34')))))) WHERE (1.338335391E9) UNION ALL SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((vt0.c0 IN ()), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))), ((vt0.c0)IS NOT(vt0.c0)))) AND (((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))), ((vt0.c0) IS FALSE), (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, v0.c0))!=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x'fb34')))))) WHERE ((NOT (1.338335391E9))) UNION ALL SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((vt0.c0 IN ()), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))), ((vt0.c0)IS NOT(vt0.c0)))) AND (((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))), ((vt0.c0) IS FALSE), (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, v0.c0))!=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x'fb34')))))) WHERE (((1.338335391E9) ISNULL));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((vt0.c0 IN ()), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))), ((vt0.c0)IS NOT(vt0.c0)))) AND (((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))), ((vt0.c0) IS FALSE), (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, v0.c0))<>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x'fb34'))))));
SELECT DISTINCT v0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((x'') NOT BETWEEN (vt0.c0) AND (v0.c0)), ((v0.c0)+(vt0.c0)), (+ (v0.c0)))) AND ((((v0.c0) NOTNULL), ((vt0.c0) IS TRUE), ((v0.c0) IS FALSE))))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((x'') NOT BETWEEN (vt0.c0) AND (v0.c0)), ((v0.c0)+(vt0.c0)), (+ (v0.c0)))) AND ((((v0.c0) NOTNULL), ((vt0.c0) IS TRUE), ((v0.c0) IS FALSE))))))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((x'') NOT BETWEEN (vt0.c0) AND (v0.c0)), ((v0.c0)+(vt0.c0)), (+ (v0.c0)))) AND ((((v0.c0) NOTNULL), ((vt0.c0) IS TRUE), ((v0.c0) IS FALSE))))) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0, v0;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE ((CAST(rt0.c1 AS REAL) IN ())) GROUP BY rt0.c2, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT ((CAST(rt0.c1 AS REAL) IN ())))) GROUP BY rt0.c2, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE ((((CAST(rt0.c1 AS REAL) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, v0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c2, rt0.c0, v0.c0;
SELECT rt0.c2, rt0.c0, v0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c2, rt0.c0, v0.c0 HAVING GROUP_CONCAT(MIN(rt0.c0)) UNION ALL SELECT rt0.c2, rt0.c0, v0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c2, rt0.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(MIN(rt0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, v0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c2, rt0.c0, v0.c0 HAVING ((GROUP_CONCAT(MIN(rt0.c0))) ISNULL);
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON CAST(v0.c0 COLLATE NOCASE AS TEXT);
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON CAST(v0.c0 COLLATE NOCASE AS TEXT) WHERE (NULL COLLATE RTRIM) ORDER BY v0.c0  NULLS FIRST;
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON CAST(v0.c0 COLLATE NOCASE AS TEXT) WHERE ((NOT (NULL COLLATE RTRIM))) ORDER BY v0.c0  NULLS FIRST;
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON CAST(v0.c0 COLLATE NOCASE AS TEXT) WHERE (((NULL COLLATE RTRIM) ISNULL)) ORDER BY v0.c0  NULLS FIRST;
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON CAST(v0.c0 COLLATE NOCASE AS TEXT);
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON (((~ (rt0.c3)))IS NOT((((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((rt0.c3, '-1787043177', vt0.c0)))));
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON (((~ (rt0.c3)))IS NOT((((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((rt0.c3, '-1787043177', vt0.c0))))) WHERE (((NULL) IS TRUE)) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON (((~ (rt0.c3)))IS NOT((((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((rt0.c3, '-1787043177', vt0.c0))))) WHERE ((NOT (((NULL) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON (((~ (rt0.c3)))IS NOT((((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((rt0.c3, '-1787043177', vt0.c0))))) WHERE (((((NULL) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON (((~ (rt0.c3)))IS NOT((((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((rt0.c3, '-1787043177', vt0.c0)))));
SELECT v0.c0, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c0;
SELECT ALL v0.c0, rt0.c0 FROM rt0, v0 WHERE ((~ (((v0.c0) NOTNULL)))) GROUP BY v0.c0, rt0.c0 UNION SELECT ALL v0.c0, rt0.c0 FROM rt0, v0 WHERE ((NOT ((~ (((v0.c0) NOTNULL)))))) GROUP BY v0.c0, rt0.c0 UNION SELECT ALL v0.c0, rt0.c0 FROM rt0, v0 WHERE ((((~ (((v0.c0) NOTNULL)))) ISNULL)) GROUP BY v0.c0, rt0.c0;
SELECT v0.c0, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0)IS(rtreenode(COUNT(*), v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((v0.c0)IS(rtreenode(COUNT(*), v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0)IS(rtreenode(COUNT(*), v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0)IS(rtreenode(COUNT(*), v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((v0.c0)IS(rtreenode(COUNT(*), v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0)IS(rtreenode(COUNT(*), v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1, v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0, vt0;
SELECT rt0.c1, v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0, vt0 WHERE (((rt0.c1 COLLATE RTRIM) ISNULL)) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0, vt0 WHERE ((NOT (((rt0.c1 COLLATE RTRIM) ISNULL)))) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0, vt0 WHERE (((((rt0.c1 COLLATE RTRIM) ISNULL)) ISNULL));
SELECT rt0.c1, v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN ((((v0.c0)OR(v0.c0)))OR('-1987917661')) THEN ((v0.c0) ISNULL) END) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN ((((v0.c0)OR(v0.c0)))OR('-1987917661')) THEN ((v0.c0) ISNULL) END))) UNION SELECT DISTINCT * FROM v0 WHERE (((CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN ((((v0.c0)OR(v0.c0)))OR('-1987917661')) THEN ((v0.c0) ISNULL) END) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((- ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((- ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((- ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0;
SELECT ALL rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0;
SELECT ALL rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0;
SELECT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (CAST(rt0.c2 COLLATE BINARY AS NUMERIC)) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CAST(rt0.c2 COLLATE BINARY AS NUMERIC)))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((CAST(rt0.c2 COLLATE BINARY AS NUMERIC)) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (CAST((~ (v0.c0)) AS NUMERIC)) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE ((NOT (CAST((~ (v0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (((CAST((~ (v0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT rt0.c1, rt0.c3, vt0.c0, v0.c0, rt0.c0, rt0.c2 FROM v0, vt0 RIGHT OUTER JOIN rt0 ON ABS(CAST(rt0.c1 AS NUMERIC)) GROUP BY rt0.c1, rt0.c3, vt0.c0, v0.c0, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c3, vt0.c0, v0.c0, rt0.c0, rt0.c2 FROM v0, vt0 RIGHT OUTER JOIN rt0 ON ABS(CAST(rt0.c1 AS NUMERIC)) WHERE ((((rt0.c2, x'7ae8', rt0.c0)) BETWEEN ((v0.c0, (- (NULL)), rt0.c2)) AND ((vt0.c0, (v0.c0 IN ()), ((vt0.c0)IS(rt0.c0)))))) GROUP BY rt0.c1, rt0.c3, vt0.c0, v0.c0, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c3, vt0.c0, v0.c0, rt0.c0, rt0.c2 FROM v0, vt0 RIGHT OUTER JOIN rt0 ON ABS(CAST(rt0.c1 AS NUMERIC)) WHERE ((NOT ((((rt0.c2, x'7ae8', rt0.c0)) BETWEEN ((v0.c0, (- (NULL)), rt0.c2)) AND ((vt0.c0, (v0.c0 IN ()), ((vt0.c0)IS(rt0.c0)))))))) GROUP BY rt0.c1, rt0.c3, vt0.c0, v0.c0, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c3, vt0.c0, v0.c0, rt0.c0, rt0.c2 FROM v0, vt0 RIGHT OUTER JOIN rt0 ON ABS(CAST(rt0.c1 AS NUMERIC)) WHERE ((((((rt0.c2, x'7ae8', rt0.c0)) BETWEEN ((v0.c0, (- (NULL)), rt0.c2)) AND ((vt0.c0, (v0.c0 IN ()), ((vt0.c0)IS(rt0.c0)))))) ISNULL)) GROUP BY rt0.c1, rt0.c3, vt0.c0, v0.c0, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c3, vt0.c0, v0.c0, rt0.c0, rt0.c2 FROM v0, vt0 RIGHT OUTER JOIN rt0 ON ABS(CAST(rt0.c1 AS NUMERIC)) GROUP BY rt0.c1, rt0.c3, vt0.c0, v0.c0, rt0.c0, rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT((COUNT(vt0.c0) IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT((COUNT(vt0.c0) IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT((COUNT(vt0.c0) IN ()))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT((COUNT(vt0.c0) IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT((COUNT(vt0.c0) IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT((COUNT(vt0.c0) IN ()))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((0xffffffff94cf53a3) NOT BETWEEN ('1132897909') AND (vt0.c0)))IS NOT(((vt0.c0)GLOB(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((0xffffffff94cf53a3) NOT BETWEEN ('1132897909') AND (vt0.c0)))IS NOT(((vt0.c0)GLOB(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((0xffffffff94cf53a3) NOT BETWEEN ('1132897909') AND (vt0.c0)))IS NOT(((vt0.c0)GLOB(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0, v0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0, v0, rt0 WHERE (CAST((~ (vt0.c0)) AS NUMERIC)) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0, rt0 WHERE ((NOT (CAST((~ (vt0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0, rt0 WHERE (((CAST((~ (vt0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, v0, rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (NULL) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM rt0, v0, vt0;
SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0, v0, vt0 WHERE (((((rt0.c0)<=(v0.c0))) IS FALSE)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0, v0, vt0 WHERE ((NOT (((((rt0.c0)<=(v0.c0))) IS FALSE)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0, v0, vt0 WHERE (((((((rt0.c0)<=(v0.c0))) IS FALSE)) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM rt0, v0, vt0;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c3) BETWEEN (rt0.c0) AND (NULL)))) AND ((x'6163')))) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((((rt0.c2)) BETWEEN ((((rt0.c3) BETWEEN (rt0.c0) AND (NULL)))) AND ((x'6163')))))) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((((((rt0.c2)) BETWEEN ((((rt0.c3) BETWEEN (rt0.c0) AND (NULL)))) AND ((x'6163')))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c1, v0.c0, vt0.c0, rt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, v0.c0, vt0.c0, rt0.c0;
SELECT ALL rt0.c1, v0.c0, vt0.c0, rt0.c0 FROM v0, vt0, rt0 WHERE (0.18025242644700257) GROUP BY rt0.c1, v0.c0, vt0.c0, rt0.c0 UNION SELECT rt0.c1, v0.c0, vt0.c0, rt0.c0 FROM v0, vt0, rt0 WHERE ((NOT (0.18025242644700257))) GROUP BY rt0.c1, v0.c0, vt0.c0, rt0.c0 UNION SELECT ALL rt0.c1, v0.c0, vt0.c0, rt0.c0 FROM v0, vt0, rt0 WHERE (((0.18025242644700257) ISNULL)) GROUP BY rt0.c1, v0.c0, vt0.c0, rt0.c0;
SELECT ALL rt0.c1, v0.c0, vt0.c0, rt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, v0.c0, vt0.c0, rt0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING NULLIF(DISTINCT (COUNT(NULL) IN ()), MIN(MAX(vt0.c0))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (NULLIF(DISTINCT (COUNT(NULL) IN ()), MIN(MAX(vt0.c0))))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((NULLIF(DISTINCT (COUNT(NULL) IN ()), MIN(MAX(vt0.c0)))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CAST((NULL IN ()) AS INTEGER)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST((NULL IN ()) AS INTEGER)))) UNION ALL SELECT * FROM vt0 WHERE (((CAST((NULL IN ()) AS INTEGER)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)*(vt0.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)*(vt0.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)*(vt0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0 COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0 COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c3, v0.c0, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON PRINTF((rt0.c2 IN ())) CROSS JOIN vt0 ON (~ ((((rt0.c2, rt0.c3, rt0.c0)) BETWEEN ((v0.c0, rt0.c1, rt0.c0)) AND ((rt0.c3, 2124766217, rt0.c3))))) GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c1;
SELECT rt0.c3, v0.c0, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON PRINTF((rt0.c2 IN ())) CROSS JOIN vt0 ON (~ ((((rt0.c2, rt0.c3, rt0.c0)) BETWEEN ((v0.c0, rt0.c1, rt0.c0)) AND ((rt0.c3, 2124766217, rt0.c3))))) GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c1 HAVING 'H' UNION ALL SELECT ALL rt0.c3, v0.c0, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON PRINTF((rt0.c2 IN ())) CROSS JOIN vt0 ON (~ ((((rt0.c2, rt0.c3, rt0.c0)) BETWEEN ((v0.c0, rt0.c1, rt0.c0)) AND ((rt0.c3, 2124766217, rt0.c3))))) GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c1 HAVING (NOT ('H')) UNION ALL SELECT ALL rt0.c3, v0.c0, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON PRINTF((rt0.c2 IN ())) CROSS JOIN vt0 ON (~ ((((rt0.c2, rt0.c3, rt0.c0)) BETWEEN ((v0.c0, rt0.c1, rt0.c0)) AND ((rt0.c3, 2124766217, rt0.c3))))) GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c1 HAVING (('H') ISNULL);
SELECT ALL rt0.c3, v0.c0, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON PRINTF((rt0.c2 IN ())) CROSS JOIN vt0 ON (~ ((((rt0.c2, rt0.c3, rt0.c0)) BETWEEN ((v0.c0, rt0.c1, rt0.c0)) AND ((rt0.c3, 2124766217, rt0.c3))))) GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c1;
SELECT rt0.c3, v0.c0, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON PRINTF((rt0.c2 IN ())) CROSS JOIN vt0 ON (~ ((((rt0.c2, rt0.c3, rt0.c0)) BETWEEN ((v0.c0, rt0.c1, rt0.c0)) AND ((rt0.c3, 2124766217, rt0.c3))))) GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c1 HAVING 'H' UNION ALL SELECT ALL rt0.c3, v0.c0, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON PRINTF((rt0.c2 IN ())) CROSS JOIN vt0 ON (~ ((((rt0.c2, rt0.c3, rt0.c0)) BETWEEN ((v0.c0, rt0.c1, rt0.c0)) AND ((rt0.c3, 2124766217, rt0.c3))))) GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c1 HAVING (NOT ('H')) UNION ALL SELECT ALL rt0.c3, v0.c0, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON PRINTF((rt0.c2 IN ())) CROSS JOIN vt0 ON (~ ((((rt0.c2, rt0.c3, rt0.c0)) BETWEEN ((v0.c0, rt0.c1, rt0.c0)) AND ((rt0.c3, 2124766217, rt0.c3))))) GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c1 HAVING (('H') ISNULL);
SELECT ALL rt0.c3, v0.c0, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON PRINTF((rt0.c2 IN ())) CROSS JOIN vt0 ON (~ ((((rt0.c2, rt0.c3, rt0.c0)) BETWEEN ((v0.c0, rt0.c1, rt0.c0)) AND ((rt0.c3, 2124766217, rt0.c3))))) GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) THEN (((rt0.c0))!=((rt0.c3))) WHEN CAST(rt0.c3 AS TEXT) THEN LIKELY(rt0.c3) WHEN (((rt0.c1))>=((rt0.c1))) THEN ((rt0.c2)%(rt0.c1)) WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)) THEN CAST(rt0.c1 AS NUMERIC) WHEN rt0.c2 THEN ((rt0.c2)*(rt0.c0)) END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE WHEN ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) THEN (((rt0.c0))!=((rt0.c3))) WHEN CAST(rt0.c3 AS TEXT) THEN LIKELY(rt0.c3) WHEN (((rt0.c1))>=((rt0.c1))) THEN ((rt0.c2)%(rt0.c1)) WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)) THEN CAST(rt0.c1 AS NUMERIC) WHEN rt0.c2 THEN ((rt0.c2)*(rt0.c0)) END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE WHEN ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) THEN (((rt0.c0))!=((rt0.c3))) WHEN CAST(rt0.c3 AS TEXT) THEN LIKELY(rt0.c3) WHEN (((rt0.c1))>=((rt0.c1))) THEN ((rt0.c2)%(rt0.c1)) WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)) THEN CAST(rt0.c1 AS NUMERIC) WHEN rt0.c2 THEN ((rt0.c2)*(rt0.c0)) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0, rt0.c3 FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0, rt0.c3 FROM rt0, vt0 WHERE (((rt0.c2 COLLATE BINARY)IS NOT(rt0.c1))) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0, rt0.c3 FROM rt0, vt0 NOT INDEXED WHERE ((NOT (((rt0.c2 COLLATE BINARY)IS NOT(rt0.c1))))) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0, rt0.c3 FROM rt0, vt0 WHERE (((((rt0.c2 COLLATE BINARY)IS NOT(rt0.c1))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0, rt0.c3 FROM rt0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((v0.c0)) BETWEEN ((SUM(COUNT(*)) COLLATE NOCASE)) AND ((MIN(MAX(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((v0.c0)) BETWEEN ((SUM(COUNT(*)) COLLATE NOCASE)) AND ((MIN(MAX(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((v0.c0)) BETWEEN ((SUM(COUNT(*)) COLLATE NOCASE)) AND ((MIN(MAX(v0.c0)))))) ISNULL);
SELECT rt0.c3, rt0.c1, vt0.c0 FROM vt0, v0, rt0;
SELECT ALL rt0.c3, rt0.c1, vt0.c0 FROM vt0, v0, rt0 WHERE ('402530713') UNION ALL SELECT rt0.c3, rt0.c1, vt0.c0 FROM vt0, v0, rt0 WHERE ((NOT ('402530713'))) UNION ALL SELECT rt0.c3, rt0.c1, vt0.c0 FROM vt0, v0, rt0 WHERE ((('402530713') ISNULL));
SELECT rt0.c3, rt0.c1, vt0.c0 FROM vt0, v0, rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1))) NOTNULL)) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1))) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((((('L%')AND((rt0.c1 IN ()))))AND(0.24252410409830671 COLLATE BINARY))) GROUP BY rt0.c3, rt0.c1, rt0.c0 UNION SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((('L%')AND((rt0.c1 IN ()))))AND(0.24252410409830671 COLLATE BINARY))))) GROUP BY rt0.c3, rt0.c1, rt0.c0 UNION SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((('L%')AND((rt0.c1 IN ()))))AND(0.24252410409830671 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING MAX(MAX(GROUP_CONCAT(v0.c0))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (MAX(MAX(GROUP_CONCAT(v0.c0))))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((MAX(MAX(GROUP_CONCAT(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (highlight(ROUND(v0.c0, vt0.c0), ((v0.c0)<<(vt0.c0)), ((v0.c0) BETWEEN (vt0.c0) AND (x'')), v0.c0 COLLATE NOCASE)) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (highlight(ROUND(v0.c0, vt0.c0), ((v0.c0)<<(vt0.c0)), ((v0.c0) BETWEEN (vt0.c0) AND (x'')), v0.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((highlight(ROUND(v0.c0, vt0.c0), ((v0.c0)<<(vt0.c0)), ((v0.c0) BETWEEN (vt0.c0) AND (x'')), v0.c0 COLLATE NOCASE)) ISNULL));
SELECT vt0.c0, rt0.c0 FROM vt0 CROSS JOIN rt0 ON ((x'daa3f3ba') BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0))) AND ('-640742504')) GROUP BY vt0.c0, rt0.c0;
SELECT vt0.c0, rt0.c0 FROM vt0 CROSS JOIN rt0 ON ((x'daa3f3ba') BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0))) AND ('-640742504')) WHERE ((((+ (rt0.c2)))<<(((rt0.c1) NOT NULL)))) GROUP BY vt0.c0, rt0.c0 UNION SELECT vt0.c0, rt0.c0 FROM vt0 CROSS JOIN rt0 ON ((x'daa3f3ba') BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0))) AND ('-640742504')) WHERE ((NOT ((((+ (rt0.c2)))<<(((rt0.c1) NOT NULL)))))) GROUP BY vt0.c0, rt0.c0 UNION SELECT ALL vt0.c0, rt0.c0 FROM vt0 CROSS JOIN rt0 ON ((x'daa3f3ba') BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0))) AND ('-640742504')) WHERE ((((((+ (rt0.c2)))<<(((rt0.c1) NOT NULL)))) ISNULL)) GROUP BY vt0.c0, rt0.c0;
SELECT vt0.c0, rt0.c0 FROM vt0 CROSS JOIN rt0 ON ((x'daa3f3ba') BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0))) AND ('-640742504')) GROUP BY vt0.c0, rt0.c0;
SELECT rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, v0.c0;
SELECT ALL rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, v0.c0 HAVING AVG(CAST(SUM(v0.c0) AS INTEGER)) UNION ALL SELECT rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, v0.c0 HAVING (NOT (AVG(CAST(SUM(v0.c0) AS INTEGER)))) UNION ALL SELECT ALL rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, v0.c0 HAVING ((AVG(CAST(SUM(v0.c0) AS INTEGER))) ISNULL);
SELECT SUM(CAST(rt0.c2 COLLATE RTRIM AS INTEGER)) FROM rt0, v0;
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (+ ((((v0.c0, rt0.c3, rt0.c0))>((rt0.c3, rt0.c3, rt0.c3)))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON (+ ((((v0.c0, rt0.c3, rt0.c0))>((rt0.c3, rt0.c3, rt0.c3))))) WHERE (v0.c0) ORDER BY (((((((((rt0.c2 IN ()))AND(((rt0.c1)*(rt0.c2)))))AND(CASE WHEN rt0.c3 THEN rt0.c3 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)))OR((- (rt0.c2)))))OR(NULL));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (+ ((((v0.c0, rt0.c3, rt0.c0))>((rt0.c3, rt0.c3, rt0.c3))))) WHERE ((NOT (v0.c0))) ORDER BY (((((((((rt0.c2 IN ()))AND(((rt0.c1)*(rt0.c2)))))AND(CASE WHEN rt0.c3 THEN rt0.c3 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)))OR((- (rt0.c2)))))OR(NULL));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (+ ((((v0.c0, rt0.c3, rt0.c0))>((rt0.c3, rt0.c3, rt0.c3))))) WHERE (((v0.c0) ISNULL)) ORDER BY (((((((((rt0.c2 IN ()))AND(((rt0.c1)*(rt0.c2)))))AND(CASE WHEN rt0.c3 THEN rt0.c3 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)))OR((- (rt0.c2)))))OR(NULL));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (+ ((((v0.c0, rt0.c3, rt0.c0))>((rt0.c3, rt0.c3, rt0.c3)))));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (TYPEOF(vt0.c0)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (TYPEOF(vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((TYPEOF(vt0.c0)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT v0.c0, rt0.c3, rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM v0 LEFT OUTER JOIN vt0 ON LAST_INSERT_ROWID() INNER JOIN rt0 ON rt0.c3 GROUP BY v0.c0, rt0.c3, rt0.c0, rt0.c1, vt0.c0, rt0.c2;
SELECT v0.c0, rt0.c3, rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM v0 LEFT OUTER JOIN vt0 ON LAST_INSERT_ROWID() INNER JOIN rt0 ON rt0.c3 WHERE ((- (v0.c0)) COLLATE BINARY) GROUP BY v0.c0, rt0.c3, rt0.c0, rt0.c1, vt0.c0, rt0.c2 UNION SELECT ALL v0.c0, rt0.c3, rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM v0 LEFT OUTER JOIN vt0 ON LAST_INSERT_ROWID() INNER JOIN rt0 ON rt0.c3 WHERE ((NOT ((- (v0.c0)) COLLATE BINARY))) GROUP BY v0.c0, rt0.c3, rt0.c0, rt0.c1, vt0.c0, rt0.c2 UNION SELECT ALL v0.c0, rt0.c3, rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM v0 LEFT OUTER JOIN vt0 ON LAST_INSERT_ROWID() INNER JOIN rt0 ON rt0.c3 WHERE ((((- (v0.c0)) COLLATE BINARY) ISNULL)) GROUP BY v0.c0, rt0.c3, rt0.c0, rt0.c1, vt0.c0, rt0.c2;
SELECT v0.c0, rt0.c3, rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM v0 LEFT OUTER JOIN vt0 ON LAST_INSERT_ROWID() INNER JOIN rt0 ON rt0.c3 GROUP BY v0.c0, rt0.c3, rt0.c0, rt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c2, vt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c2, vt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c2, vt0.c0 HAVING GROUP_CONCAT(rt0.c3) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c2, vt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c2, vt0.c0 HAVING (NOT (GROUP_CONCAT(rt0.c3))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c2, vt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c2, vt0.c0 HAVING ((GROUP_CONCAT(rt0.c3)) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c2, vt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c2, vt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c2, vt0.c0 HAVING GROUP_CONCAT(rt0.c3) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c2, vt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c2, vt0.c0 HAVING (NOT (GROUP_CONCAT(rt0.c3))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c2, vt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c2, vt0.c0 HAVING ((GROUP_CONCAT(rt0.c3)) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c2, vt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c2, vt0.c0;
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (~ ((((rt0.c3)) NOT BETWEEN ((NULL)) AND ((rt0.c1)))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON (~ ((((rt0.c3)) NOT BETWEEN ((NULL)) AND ((rt0.c1))))) WHERE (x'94a2') UNION ALL SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (~ ((((rt0.c3)) NOT BETWEEN ((NULL)) AND ((rt0.c1))))) WHERE ((NOT (x'94a2'))) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN vt0 ON (~ ((((rt0.c3)) NOT BETWEEN ((NULL)) AND ((rt0.c1))))) WHERE (((x'94a2') ISNULL));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (~ ((((rt0.c3)) NOT BETWEEN ((NULL)) AND ((rt0.c1)))));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC)) IS TRUE)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((CAST(v0.c0 AS NUMERIC)) IS TRUE)))) UNION SELECT DISTINCT * FROM v0 WHERE (((((CAST(v0.c0 AS NUMERIC)) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c2 FROM vt0, rt0 NOT INDEXED, v0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0, v0 WHERE (v0.c0) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0 NOT INDEXED, rt0, v0 NOT INDEXED WHERE ((NOT (v0.c0))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0, rt0, v0 WHERE (((v0.c0) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, rt0 NOT INDEXED, v0 GROUP BY rt0.c2;
SELECT rt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0 HAVING COUNT(CAST(COUNT(*) AS REAL)) UNION ALL SELECT rt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0 HAVING (NOT (COUNT(CAST(COUNT(*) AS REAL)))) UNION ALL SELECT rt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0 HAVING ((COUNT(CAST(COUNT(*) AS REAL))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (((LIKELIHOOD(DISTINCT rt0.c3, 0.21477182720700683))<=(0.7111769729000401 COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((LIKELIHOOD(DISTINCT rt0.c3, 0.21477182720700683))<=(0.7111769729000401 COLLATE BINARY))))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((((LIKELIHOOD(DISTINCT rt0.c3, 0.21477182720700683))<=(0.7111769729000401 COLLATE BINARY))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON CAST(NULL AS INTEGER) LEFT OUTER JOIN vt0 ON rt0.c1;
SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON CAST(NULL AS INTEGER) LEFT OUTER JOIN vt0 ON rt0.c1 WHERE (((IFNULL(DISTINCT -7.17928322E8, rt0.c2))IS NOT((NOT (v0.c0))))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON CAST(NULL AS INTEGER) LEFT OUTER JOIN vt0 ON rt0.c1 WHERE ((NOT (((IFNULL(DISTINCT -7.17928322E8, rt0.c2))IS NOT((NOT (v0.c0))))))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON CAST(NULL AS INTEGER) LEFT OUTER JOIN vt0 ON rt0.c1 WHERE (((((IFNULL(DISTINCT -7.17928322E8, rt0.c2))IS NOT((NOT (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON CAST(NULL AS INTEGER) LEFT OUTER JOIN vt0 ON rt0.c1;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 WHERE ((((v0.c0 COLLATE NOCASE))<=(((v0.c0 IN ()))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((NOT ((((v0.c0 COLLATE NOCASE))<=(((v0.c0 IN ()))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((((((v0.c0 COLLATE NOCASE))<=(((v0.c0 IN ()))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1, v0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c2;
SELECT ALL rt0.c1, v0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c1, v0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, v0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c2;
SELECT ALL rt0.c1, v0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c1, v0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, v0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c2;
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (((CASE v0.c0  WHEN rt0.c0 THEN rt0.c2 END) BETWEEN (x'bd65') AND ((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (((CASE v0.c0  WHEN rt0.c0 THEN rt0.c2 END) BETWEEN (x'bd65') AND ((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))))) UNION ALL SELECT * FROM v0, rt0 WHERE (((((CASE v0.c0  WHEN rt0.c0 THEN rt0.c2 END) BETWEEN (x'bd65') AND ((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE (CAST(v0.c0 AS REAL) COLLATE BINARY) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((NOT (CAST(v0.c0 AS REAL) COLLATE BINARY))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE (((CAST(v0.c0 AS REAL) COLLATE BINARY) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT rt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c2, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c2, v0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c2, v0.c0 FROM v0, vt0, rt0 WHERE ((((((vt0.c0)>>(rt0.c1))))>((((rt0.c1)GLOB(vt0.c0)))))) GROUP BY rt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c2, v0.c0 UNION SELECT rt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c2, v0.c0 FROM v0, vt0, rt0 WHERE ((NOT ((((((vt0.c0)>>(rt0.c1))))>((((rt0.c1)GLOB(vt0.c0)))))))) GROUP BY rt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c2, v0.c0 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c2, v0.c0 FROM v0, vt0, rt0 WHERE ((((((((vt0.c0)>>(rt0.c1))))>((((rt0.c1)GLOB(vt0.c0)))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c2, v0.c0;
SELECT rt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c2, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c2, v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(vt0.c0 AS TEXT)) NOTNULL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((CAST(vt0.c0 AS TEXT)) NOTNULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((CAST(vt0.c0 AS TEXT)) NOTNULL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(vt0.c0 AS TEXT)) NOTNULL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((CAST(vt0.c0 AS TEXT)) NOTNULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((CAST(vt0.c0 AS TEXT)) NOTNULL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0 NATURAL JOIN rt0;
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (((rt0.c1)AND(((rt0.c0)*(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (((rt0.c1)AND(((rt0.c0)*(vt0.c0))))))) UNION ALL SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (((((rt0.c1)AND(((rt0.c0)*(vt0.c0))))) ISNULL));
SELECT * FROM vt0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (NULL) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM v0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c1, v0.c0, rt0.c3, rt0.c2 FROM vt0, v0 FULL OUTER JOIN rt0 ON v0.c0 COLLATE BINARY GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c2 FROM vt0, v0 FULL OUTER JOIN rt0 ON v0.c0 COLLATE BINARY WHERE (((((rt0.c1) IS TRUE)) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c2 FROM vt0, v0 NOT INDEXED FULL OUTER JOIN rt0 ON v0.c0 COLLATE BINARY WHERE ((NOT (((((rt0.c1) IS TRUE)) ISNULL)))) GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c2 UNION SELECT rt0.c1, v0.c0, rt0.c3, rt0.c2 FROM vt0, v0 FULL OUTER JOIN rt0 ON v0.c0 COLLATE BINARY WHERE (((((((rt0.c1) IS TRUE)) ISNULL)) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c2;
SELECT rt0.c1, v0.c0, rt0.c3, rt0.c2 FROM vt0, v0 FULL OUTER JOIN rt0 ON v0.c0 COLLATE BINARY GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c2;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (- (UPPER(DISTINCT v0.c0))) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT ((- (UPPER(DISTINCT v0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (((- (UPPER(DISTINCT v0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (- (UPPER(DISTINCT v0.c0))) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT ((- (UPPER(DISTINCT v0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (((- (UPPER(DISTINCT v0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0 COLLATE NOCASE)+(((v0.c0)-(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE NOCASE)+(((v0.c0)-(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE NOCASE)+(((v0.c0)-(v0.c0))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c0, rt0.c1, vt0.c0 FROM vt0 INNER JOIN rt0 ON CASE WHEN ((rt0.c1)<(vt0.c0)) THEN rt0.c2 WHEN json(rt0.c0) THEN rt0.c1 WHEN CASE v0.c0  WHEN rt0.c0 THEN '9>Xf厡q_IS' END THEN vt0.c0 COLLATE RTRIM END CROSS JOIN v0 ON (((IFNULL(DISTINCT rt0.c2, rt0.c3)))==((CAST(x'' AS NUMERIC))));
SELECT DISTINCT rt0.c0, rt0.c1, vt0.c0 FROM vt0 INNER JOIN rt0 ON CASE WHEN ((rt0.c1)<(vt0.c0)) THEN rt0.c2 WHEN json(rt0.c0) THEN rt0.c1 WHEN CASE v0.c0  WHEN rt0.c0 THEN '9>Xf厡q_IS' END THEN vt0.c0 COLLATE RTRIM END CROSS JOIN v0 ON (((IFNULL(DISTINCT rt0.c2, rt0.c3)))=((CAST(x'' AS NUMERIC)))) WHERE (((((rt0.c2)/('')))=(CAST(v0.c0 AS INTEGER)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt0.c0 FROM vt0 INNER JOIN rt0 ON CASE WHEN ((rt0.c1)<(vt0.c0)) THEN rt0.c2 WHEN json(rt0.c0) THEN rt0.c1 WHEN CASE v0.c0  WHEN rt0.c0 THEN '9>Xf厡q_IS' END THEN vt0.c0 COLLATE RTRIM END CROSS JOIN v0 ON (((IFNULL(DISTINCT rt0.c2, rt0.c3)))==((CAST(x'' AS NUMERIC)))) WHERE ((NOT (((((rt0.c2)/('')))==(CAST(v0.c0 AS INTEGER)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt0.c0 FROM vt0 INNER JOIN rt0 ON CASE WHEN ((rt0.c1)<(vt0.c0)) THEN rt0.c2 WHEN json(rt0.c0) THEN rt0.c1 WHEN CASE v0.c0  WHEN rt0.c0 THEN '9>Xf厡q_IS' END THEN vt0.c0 COLLATE RTRIM END CROSS JOIN v0 ON (((IFNULL(DISTINCT rt0.c2, rt0.c3)))==((CAST(x'' AS NUMERIC)))) WHERE (((((((rt0.c2)/('')))=(CAST(v0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, vt0.c0 FROM vt0 INNER JOIN rt0 ON CASE WHEN ((rt0.c1)<(vt0.c0)) THEN rt0.c2 WHEN json(rt0.c0) THEN rt0.c1 WHEN CASE v0.c0  WHEN rt0.c0 THEN '9>Xf厡q_IS' END THEN vt0.c0 COLLATE RTRIM END CROSS JOIN v0 ON (((IFNULL(DISTINCT rt0.c2, rt0.c3)))==((CAST(x'' AS NUMERIC))));
SELECT ALL rt0.c3, rt0.c2 FROM rt0, vt0, v0 GROUP BY rt0.c3, rt0.c2;
SELECT ALL rt0.c3, rt0.c2 FROM rt0, vt0, v0 WHERE (TRIM(DISTINCT ((rt0.c3) NOTNULL))) GROUP BY rt0.c3, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c2 FROM rt0, vt0, v0 WHERE ((NOT (TRIM(DISTINCT ((rt0.c3) NOTNULL))))) GROUP BY rt0.c3, rt0.c2 UNION SELECT rt0.c3, rt0.c2 FROM rt0, vt0, v0 WHERE (((TRIM(DISTINCT ((rt0.c3) NOTNULL))) ISNULL)) GROUP BY rt0.c3, rt0.c2;
SELECT ALL rt0.c3, rt0.c2 FROM rt0, vt0, v0 GROUP BY rt0.c3, rt0.c2;
SELECT ALL vt0.c0, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c1)+(v0.c0))) NOTNULL) LEFT OUTER JOIN vt0 ON (((json(v0.c0)))>=((((v0.c0)GLOB(vt0.c0))))) GROUP BY vt0.c0, rt0.c0;
SELECT vt0.c0, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c1)+(v0.c0))) NOTNULL) LEFT OUTER JOIN vt0 ON (((json(v0.c0)))>=((((v0.c0)GLOB(vt0.c0))))) GROUP BY vt0.c0, rt0.c0 HAVING SUM(MAX(vt0.c0)) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c1)+(v0.c0))) NOTNULL) LEFT OUTER JOIN vt0 ON (((json(v0.c0)))>=((((v0.c0)GLOB(vt0.c0))))) GROUP BY vt0.c0, rt0.c0 HAVING (NOT (SUM(MAX(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c1)+(v0.c0))) NOTNULL) LEFT OUTER JOIN vt0 ON (((json(v0.c0)))>=((((v0.c0)GLOB(vt0.c0))))) GROUP BY vt0.c0, rt0.c0 HAVING ((SUM(MAX(vt0.c0))) ISNULL);
SELECT ALL rt0.c3, rt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c3, rt0.c0 FROM vt0, rt0 WHERE ((((rt0.c1 IN ())) BETWEEN (1.068317489E9) AND ((rt0.c2 IN ())))) UNION ALL SELECT rt0.c3, rt0.c0 FROM vt0, rt0 WHERE ((NOT ((((rt0.c1 IN ())) BETWEEN (1.068317489E9) AND ((rt0.c2 IN ())))))) UNION ALL SELECT rt0.c3, rt0.c0 FROM vt0, rt0 WHERE ((((((rt0.c1 IN ())) BETWEEN (1.068317489E9) AND ((rt0.c2 IN ())))) ISNULL));
SELECT ALL rt0.c3, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0 CROSS JOIN v0 ON CAST(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB);
SELECT DISTINCT vt0.c0 FROM vt0 CROSS JOIN v0 ON CAST(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB) WHERE (SQLITE_VERSION()) UNION SELECT DISTINCT vt0.c0 FROM vt0 CROSS JOIN v0 ON CAST(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB) WHERE ((NOT (SQLITE_VERSION()))) UNION SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED CROSS JOIN v0 ON CAST(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB) WHERE (((SQLITE_VERSION()) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 CROSS JOIN v0 ON CAST(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB);
SELECT rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, v0 WHERE (CAST(rt0.c3 AS BLOB) COLLATE NOCASE) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((NOT (CAST(rt0.c3 AS BLOB) COLLATE NOCASE))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0, v0 WHERE (((CAST(rt0.c3 AS BLOB) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING COUNT(SUM(rt0.c3)) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (COUNT(SUM(rt0.c3)))) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((COUNT(SUM(rt0.c3))) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c2 END COLLATE BINARY) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (CASE WHEN rt0.c2 THEN rt0.c2 END COLLATE BINARY))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 END COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT rt0.c0 FROM vt0, rt0 CROSS JOIN v0 ON (((v0.c0)) BETWEEN ((((rt0.c1) NOTNULL))) AND ((((v0.c0) BETWEEN (NULL) AND (v0.c0)))));
SELECT DISTINCT rt0.c0 FROM vt0, rt0 CROSS JOIN v0 ON (((v0.c0)) BETWEEN ((((rt0.c1) NOTNULL))) AND ((((v0.c0) BETWEEN (NULL) AND (v0.c0))))) WHERE (((v0.c0 COLLATE NOCASE)OR(x''))) UNION SELECT DISTINCT rt0.c0 FROM vt0, rt0 CROSS JOIN v0 ON (((v0.c0)) BETWEEN ((((rt0.c1) NOTNULL))) AND ((((v0.c0) BETWEEN (NULL) AND (v0.c0))))) WHERE ((NOT (((v0.c0 COLLATE NOCASE)OR(x''))))) UNION SELECT DISTINCT rt0.c0 FROM vt0, rt0 CROSS JOIN v0 ON (((v0.c0)) BETWEEN ((((rt0.c1) NOTNULL))) AND ((((v0.c0) BETWEEN (NULL) AND (v0.c0))))) WHERE (((((v0.c0 COLLATE NOCASE)OR(x''))) ISNULL));
SELECT DISTINCT rt0.c0 FROM vt0, rt0 CROSS JOIN v0 ON (((v0.c0)) BETWEEN ((((rt0.c1) NOTNULL))) AND ((((v0.c0) BETWEEN (NULL) AND (v0.c0)))));
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 WHERE (CASE WHEN (vt0.c0 IN (vt0.c0)) THEN v0.c0 WHEN vt0.c0 THEN ((9.63675998E8) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN LIKELY(v0.c0) THEN (((v0.c0))>=((vt0.c0))) ELSE ((v0.c0) NOT NULL) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((NOT (CASE WHEN (vt0.c0 IN (vt0.c0)) THEN v0.c0 WHEN vt0.c0 THEN ((9.63675998E8) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN LIKELY(v0.c0) THEN (((v0.c0))>=((vt0.c0))) ELSE ((v0.c0) NOT NULL) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 NOT INDEXED WHERE (((CASE WHEN (vt0.c0 IN (vt0.c0)) THEN v0.c0 WHEN vt0.c0 THEN ((9.63675998E8) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN LIKELY(v0.c0) THEN (((v0.c0))>=((vt0.c0))) ELSE ((v0.c0) NOT NULL) END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c0 IN ())) IS TRUE) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((vt0.c0 IN ())) IS TRUE))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0 IN ())) IS TRUE)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c0 IN ())) IS TRUE) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((vt0.c0 IN ())) IS TRUE))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0 IN ())) IS TRUE)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 NOT INDEXED WHERE (((((((((v0.c0 COLLATE BINARY)OR(((v0.c0)<(v0.c0)))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR(v0.c0)))OR(''))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((((((v0.c0 COLLATE BINARY)OR(((v0.c0)<(v0.c0)))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR(v0.c0)))OR(''))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((((((v0.c0 COLLATE BINARY)OR(((v0.c0)<(v0.c0)))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR(v0.c0)))OR(''))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM v0 INNER JOIN rt0 ON 1.564962071E9;
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM v0 INNER JOIN rt0 ON 1.564962071E9 WHERE (rt0.c3) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM v0 INNER JOIN rt0 ON 1.564962071E9 WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM v0 INNER JOIN rt0 ON 1.564962071E9 WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM v0 INNER JOIN rt0 ON 1.564962071E9;
SELECT v0.c0, rt0.c0 FROM rt0 INNER JOIN v0 ON ((rt0.c2 COLLATE BINARY)*((((rt0.c0))==((rt0.c1))))) INNER JOIN vt0 ON LOWER(x'') GROUP BY v0.c0, rt0.c0;
SELECT ALL v0.c0, rt0.c0 FROM rt0 INNER JOIN v0 ON ((rt0.c2 COLLATE BINARY)*((((rt0.c0))=((rt0.c1))))) INNER JOIN vt0 ON LOWER(x'') WHERE (((((v0.c0) NOTNULL)) BETWEEN ((((rt0.c1))=((rt0.c1)))) AND ('-58453942'))) GROUP BY v0.c0, rt0.c0 UNION SELECT v0.c0, rt0.c0 FROM rt0 INNER JOIN v0 ON ((rt0.c2 COLLATE BINARY)*((((rt0.c0))==((rt0.c1))))) INNER JOIN vt0 ON LOWER(x'') WHERE ((NOT (((((v0.c0) NOTNULL)) BETWEEN ((((rt0.c1))==((rt0.c1)))) AND ('-58453942'))))) GROUP BY v0.c0, rt0.c0 UNION SELECT ALL v0.c0, rt0.c0 FROM rt0 INNER JOIN v0 ON ((rt0.c2 COLLATE BINARY)*((((rt0.c0))=((rt0.c1))))) INNER JOIN vt0 ON LOWER(x'') WHERE (((((((v0.c0) NOTNULL)) BETWEEN ((((rt0.c1))==((rt0.c1)))) AND ('-58453942'))) ISNULL)) GROUP BY v0.c0, rt0.c0;
SELECT v0.c0, rt0.c0 FROM rt0 INNER JOIN v0 ON ((rt0.c2 COLLATE BINARY)*((((rt0.c0))==((rt0.c1))))) INNER JOIN vt0 ON LOWER(x'') GROUP BY v0.c0, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0 HAVING MIN(TOTAL(COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0 HAVING (NOT (MIN(TOTAL(COUNT(*))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0 HAVING ((MIN(TOTAL(COUNT(*)))) ISNULL);
SELECT v0.c0 FROM v0, rt0;
SELECT v0.c0 FROM v0, rt0 WHERE ((((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) ISNULL)) UNION ALL SELECT ALL v0.c0 FROM v0, rt0 WHERE ((NOT ((((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) ISNULL)))) UNION ALL SELECT v0.c0 FROM v0, rt0 WHERE ((((((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) ISNULL)) ISNULL));
SELECT v0.c0 FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((- ((((rt0.c2, rt0.c0, rt0.c3))<>((rt0.c2, rt0.c2, rt0.c0)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((- ((((rt0.c2, rt0.c0, rt0.c3))!=((rt0.c2, rt0.c2, rt0.c0)))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((- ((((rt0.c2, rt0.c0, rt0.c3))<>((rt0.c2, rt0.c2, rt0.c0)))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*))LIKE(MAX(SUM(COUNT(SUM(x'')))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((COUNT(*))LIKE(MAX(SUM(COUNT(SUM(x'')))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((COUNT(*))LIKE(MAX(SUM(COUNT(SUM(x''))))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (UPPER(DISTINCT vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (UPPER(DISTINCT vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((UPPER(DISTINCT vt0.c0)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((rt0.c2 COLLATE RTRIM)IS NOT(((rt0.c1) ISNULL)));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((rt0.c2 COLLATE RTRIM)IS NOT(((rt0.c1) ISNULL))) WHERE (rt0.c0) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((rt0.c2 COLLATE RTRIM)IS NOT(((rt0.c1) ISNULL))) WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((rt0.c2 COLLATE RTRIM)IS NOT(((rt0.c1) ISNULL))) WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((rt0.c2 COLLATE RTRIM)IS NOT(((rt0.c1) ISNULL)));
SELECT v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM vt0, v0, rt0 GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c0;
SELECT v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM vt0, v0, rt0 WHERE (((((x'')>(rt0.c2))) IS TRUE)) GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c0 UNION SELECT v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM vt0, v0, rt0 WHERE ((NOT (((((x'')>(rt0.c2))) IS TRUE)))) GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c0 UNION SELECT v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM vt0, v0, rt0 WHERE (((((((x'')>(rt0.c2))) IS TRUE)) ISNULL)) GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c0;
SELECT v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM vt0, v0, rt0 GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING AVG((~ (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (AVG((~ (v0.c0))))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((AVG((~ (v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING AVG((~ (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (AVG((~ (v0.c0))))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((AVG((~ (v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((CAST('jY' AS NUMERIC)) NOTNULL)) UNION ALL SELECT * FROM v0 WHERE ((NOT (((CAST('jY' AS NUMERIC)) NOTNULL)))) UNION ALL SELECT * FROM v0 WHERE (((((CAST('jY' AS NUMERIC)) NOTNULL)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0)IS(v0.c0)) IN ())) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)IS(v0.c0)) IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0)IS(v0.c0)) IN ())) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((+ (vt0.c0)) IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((+ (vt0.c0)) IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((+ (vt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(GROUP_CONCAT(GROUP_CONCAT(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(GROUP_CONCAT(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c2)>>(rt0.c3))  WHEN (- (rt0.c3)) THEN ((rt0.c0)LIKE(NULL)) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE ((rt0.c2)>>(rt0.c3))  WHEN (- (rt0.c3)) THEN ((rt0.c0)LIKE(NULL)) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE ((rt0.c2)>>(rt0.c3))  WHEN (- (rt0.c3)) THEN ((rt0.c0)LIKE(NULL)) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE (((CAST(rt0.c3 AS BLOB))<=(((rt0.c3)>=(rt0.c0))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (((CAST(rt0.c3 AS BLOB))<=(((rt0.c3)>=(rt0.c0))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE (((((CAST(rt0.c3 AS BLOB))<=(((rt0.c3)>=(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3 FROM rt0;
SELECT ALL rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM v0, rt0, vt0 WHERE (CASE ((rt0.c0)>=(rt0.c1))  WHEN v0.c0 THEN ((((((((rt0.c2)OR(rt0.c3)))AND(x'')))OR(rt0.c1)))OR(rt0.c1)) ELSE CASE '(gSui-E'  WHEN rt0.c3 THEN rt0.c2 END END) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM v0, rt0, vt0 WHERE ((NOT (CASE ((rt0.c0)>=(rt0.c1))  WHEN v0.c0 THEN ((((((((rt0.c2)OR(rt0.c3)))AND(x'')))OR(rt0.c1)))OR(rt0.c1)) ELSE CASE '(gSui-E'  WHEN rt0.c3 THEN rt0.c2 END END))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM v0, rt0, vt0 WHERE (((CASE ((rt0.c0)>=(rt0.c1))  WHEN v0.c0 THEN ((((((((rt0.c2)OR(rt0.c3)))AND(x'')))OR(rt0.c1)))OR(rt0.c1)) ELSE CASE '(gSui-E'  WHEN rt0.c3 THEN rt0.c2 END END) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c3;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, vt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, vt0.c0 HAVING ((rt0.c1)<<(MAX(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, vt0.c0 HAVING (NOT (((rt0.c1)<<(MAX(GROUP_CONCAT(rt0.c0)))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, vt0.c0 HAVING ((((rt0.c1)<<(MAX(GROUP_CONCAT(rt0.c0))))) ISNULL);
SELECT * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE ((+ (v0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT ((+ (v0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((((+ (v0.c0 COLLATE RTRIM))) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2, rt0.c0, rt0.c0, rt0.c0, rt0.c2))>=((rt0.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1)))) BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c3) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c2, rt0.c0, rt0.c0, rt0.c0, rt0.c2))>=((rt0.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1)))) BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c3) IS FALSE)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c2, rt0.c0, rt0.c0, rt0.c0, rt0.c2))>=((rt0.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c1)))) BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c3) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c3, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c0, v0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, v0.c0 FROM rt0, v0 WHERE (((((rt0.c3 COLLATE RTRIM)OR((rt0.c3 IN ()))))OR(((rt0.c3) NOTNULL)))) GROUP BY rt0.c2, rt0.c3, rt0.c0, v0.c0 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c0, v0.c0 FROM rt0, v0 WHERE ((NOT (((((rt0.c3 COLLATE RTRIM)OR((rt0.c3 IN ()))))OR(((rt0.c3) NOTNULL)))))) GROUP BY rt0.c2, rt0.c3, rt0.c0, v0.c0 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c0, v0.c0 FROM rt0, v0 WHERE (((((((rt0.c3 COLLATE RTRIM)OR((rt0.c3 IN ()))))OR(((rt0.c3) NOTNULL)))) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c0, v0.c0;
SELECT rt0.c2, rt0.c3, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c0, v0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (((v0.c0 IN ())) BETWEEN (((((MIN(MAX(vt0.c0)))OR(TOTAL(MIN(MIN(MAX(vt0.c0)))))))OR(vt0.c0))) AND (TOTAL(vt0.c0))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT ((((v0.c0 IN ())) BETWEEN (((((MIN(MAX(vt0.c0)))OR(TOTAL(MIN(MIN(MAX(vt0.c0)))))))OR(vt0.c0))) AND (TOTAL(vt0.c0))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (((((v0.c0 IN ())) BETWEEN (((((MIN(MAX(vt0.c0)))OR(TOTAL(MIN(MIN(MAX(vt0.c0)))))))OR(vt0.c0))) AND (TOTAL(vt0.c0)))) ISNULL);
SELECT ALL TOTAL(CAST((((-781861464)) BETWEEN ((NULL)) AND ((v0.c0))) AS INTEGER)) FROM rt0, vt0, v0;
SELECT ALL vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON ((((v0.c0) NOT NULL))IS(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))));
SELECT vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON ((((v0.c0) NOT NULL))IS(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))) WHERE (CAST(vt0.c0 AS INTEGER)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON ((((v0.c0) NOT NULL))IS(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))) WHERE ((NOT (CAST(vt0.c0 AS INTEGER)))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON ((((v0.c0) NOT NULL))IS(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))) WHERE (((CAST(vt0.c0 AS INTEGER)) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON ((((v0.c0) NOT NULL))IS(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((UNICODE(v0.c0))AND(((v0.c0)GLOB(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((UNICODE(v0.c0))AND(((v0.c0)GLOB(v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((UNICODE(v0.c0))AND(((v0.c0)GLOB(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c3, rt0.c0, rt0.c1, v0.c0;
SELECT rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM vt0, rt0, v0 WHERE ((((v0.c0)) BETWEEN ((rt0.c3 COLLATE BINARY)) AND ((((rt0.c2)<>(rt0.c0)))))) GROUP BY rt0.c3, rt0.c0, rt0.c1, v0.c0 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM vt0, rt0, v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((rt0.c3 COLLATE BINARY)) AND ((((rt0.c2)<>(rt0.c0)))))))) GROUP BY rt0.c3, rt0.c0, rt0.c1, v0.c0 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM vt0, rt0, v0 WHERE ((((((v0.c0)) BETWEEN ((rt0.c3 COLLATE BINARY)) AND ((((rt0.c2)!=(rt0.c0)))))) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c1, v0.c0;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c3, rt0.c0, rt0.c1, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(MIN(v0.c0) AS REAL)) NOT NULL) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((CAST(MIN(v0.c0) AS REAL)) NOT NULL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((CAST(MIN(v0.c0) AS REAL)) NOT NULL)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(MIN(v0.c0) AS REAL)) NOT NULL) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((CAST(MIN(v0.c0) AS REAL)) NOT NULL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((CAST(MIN(v0.c0) AS REAL)) NOT NULL)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM vt0 INNER JOIN rt0 ON COALESCE(DISTINCT (((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))), ((rt0.c0)*(0X765c68a5)));
SELECT * FROM vt0 INNER JOIN rt0 ON COALESCE(DISTINCT (((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))), ((rt0.c0)*(0X765c68a5))) WHERE (-1827315936) UNION ALL SELECT ALL * FROM vt0 INNER JOIN rt0 ON COALESCE(DISTINCT (((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))), ((rt0.c0)*(0X765c68a5))) WHERE ((NOT (-1827315936))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN rt0 ON COALESCE(DISTINCT (((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))), ((rt0.c0)*(0x765c68a5))) WHERE (((-1827315936) ISNULL));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON COALESCE(DISTINCT (((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))), ((rt0.c0)*(0X765c68a5)));
SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON CASE WHEN (((vt0.c0))>=((v0.c0))) THEN (((v0.c0))!=((v0.c0))) END;
SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON CASE WHEN (((vt0.c0))>=((v0.c0))) THEN (((v0.c0))!=((v0.c0))) END WHERE (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (NOT (vt0.c0)) THEN PRINTF(v0.c0, vt0.c0, vt0.c0) END) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON CASE WHEN (((vt0.c0))>=((v0.c0))) THEN (((v0.c0))<>((v0.c0))) END WHERE ((NOT (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (NOT (vt0.c0)) THEN PRINTF(v0.c0, vt0.c0, vt0.c0) END))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON CASE WHEN (((vt0.c0))>=((v0.c0))) THEN (((v0.c0))!=((v0.c0))) END WHERE (((CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (NOT (vt0.c0)) THEN PRINTF(v0.c0, vt0.c0, vt0.c0) END) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON CASE WHEN (((vt0.c0))>=((v0.c0))) THEN (((v0.c0))!=((v0.c0))) END;
SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (IFNULL(x'9354', (((rt0.c3, rt0.c3, rt0.c3))=((rt0.c0, rt0.c3, rt0.c1))))) GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (IFNULL(x'9354', (((rt0.c3, rt0.c3, rt0.c3))==((rt0.c0, rt0.c3, rt0.c1))))))) GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((IFNULL(x'9354', (((rt0.c3, rt0.c3, rt0.c3))==((rt0.c0, rt0.c3, rt0.c1))))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING ((COUNT(*))<=(AVG(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING (NOT (((COUNT(*))<=(AVG(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING ((((COUNT(*))<=(AVG(rt0.c1)))) ISNULL);
SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING ((COUNT(*))<=(AVG(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING (NOT (((COUNT(*))<=(AVG(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING ((((COUNT(*))<=(AVG(rt0.c1)))) ISNULL);
SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE))==((('520135686') NOT NULL)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0) IS FALSE))=((('520135686') NOT NULL)))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0) IS FALSE))=((('520135686') NOT NULL)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((~ (((v0.c0)%(v0.c0))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT ((~ (((v0.c0)%(v0.c0))))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((~ (((v0.c0)%(v0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT v0.c0 FROM vt0, v0, rt0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0, rt0 WHERE ((((rt0.c0 IN ())) BETWEEN (((((vt0.c0)OR(rt0.c0)))AND(v0.c0))) AND ((((v0.c0)) BETWEEN ((rt0.c3)) AND ((0.9515845470067775)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0, rt0 WHERE ((NOT ((((rt0.c0 IN ())) BETWEEN (((((vt0.c0)OR(rt0.c0)))AND(v0.c0))) AND ((((v0.c0)) BETWEEN ((rt0.c3)) AND ((0.9515845470067775)))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0, rt0 WHERE ((((((rt0.c0 IN ())) BETWEEN (((((vt0.c0)OR(rt0.c0)))AND(v0.c0))) AND ((((v0.c0)) BETWEEN ((rt0.c3)) AND ((0.9515845470067775)))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0, rt0 GROUP BY v0.c0;
SELECT ALL rt0.c3 FROM rt0, v0, vt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0, v0, vt0 NOT INDEXED GROUP BY rt0.c3 HAVING MIN(CAST(rt0.c2 AS REAL)) UNION ALL SELECT ALL rt0.c3 FROM rt0, v0, vt0 GROUP BY rt0.c3 HAVING (NOT (MIN(CAST(rt0.c2 AS REAL)))) UNION ALL SELECT rt0.c3 FROM rt0, v0, vt0 GROUP BY rt0.c3 HAVING ((MIN(CAST(rt0.c2 AS REAL))) ISNULL);
SELECT ALL rt0.c3 FROM rt0, v0, vt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0, v0, vt0 NOT INDEXED GROUP BY rt0.c3 HAVING MIN(CAST(rt0.c2 AS REAL)) UNION ALL SELECT ALL rt0.c3 FROM rt0, v0, vt0 GROUP BY rt0.c3 HAVING (NOT (MIN(CAST(rt0.c2 AS REAL)))) UNION ALL SELECT rt0.c3 FROM rt0, v0, vt0 GROUP BY rt0.c3 HAVING ((MIN(CAST(rt0.c2 AS REAL))) ISNULL);
SELECT ALL rt0.c3 FROM rt0, v0, vt0 GROUP BY rt0.c3;
SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c3, rt0.c2, v0.c0 FROM rt0, v0, vt0;
SELECT rt0.c1, vt0.c0, rt0.c0, rt0.c3, rt0.c2, v0.c0 FROM rt0, v0, vt0 WHERE (((rt0.c0) BETWEEN (((rt0.c1)GLOB(vt0.c0))) AND (((rt0.c1)AND(rt0.c2))))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c3, rt0.c2, v0.c0 FROM rt0, v0, vt0 WHERE ((NOT (((rt0.c0) BETWEEN (((rt0.c1)GLOB(vt0.c0))) AND (((rt0.c1)AND(rt0.c2))))))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c3, rt0.c2, v0.c0 FROM rt0, v0, vt0 WHERE (((((rt0.c0) BETWEEN (((rt0.c1)GLOB(vt0.c0))) AND (((rt0.c1)AND(rt0.c2))))) ISNULL));
SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c3, rt0.c2, v0.c0 FROM rt0, v0, vt0;
SELECT DISTINCT rt0.c3, v0.c0, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0, v0;
SELECT DISTINCT rt0.c3, v0.c0, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0, v0 WHERE (0.6651686165532517) UNION SELECT DISTINCT rt0.c3, v0.c0, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0, v0 WHERE ((NOT (0.6651686165532517))) UNION SELECT DISTINCT rt0.c3, v0.c0, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0, v0 WHERE (((0.6651686165532517) ISNULL));
SELECT DISTINCT rt0.c3, v0.c0, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0, v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (TYPEOF(CAST(vt0.c0 AS NUMERIC))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (TYPEOF(CAST(vt0.c0 AS NUMERIC))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((TYPEOF(CAST(vt0.c0 AS NUMERIC))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL v0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT v0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL v0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT v0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL MIN((((rt0.c3 IN ())) IS FALSE)) FROM v0, vt0, rt0 ORDER BY CAST(((((((((v0.c0)OR(vt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND(vt0.c0)) AS NUMERIC), ((+ (rt0.c0)) IN ()) ASC  NULLS LAST;
SELECT ALL rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3 FROM vt0, rt0;
SELECT rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3 FROM vt0, rt0 WHERE (((((rt0.c2)+(rt0.c2))) NOT NULL)) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3 FROM vt0, rt0 WHERE ((NOT (((((rt0.c2)+(rt0.c2))) NOT NULL)))) UNION ALL SELECT rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3 FROM vt0, rt0 WHERE (((((((rt0.c2)+(rt0.c2))) NOT NULL)) ISNULL));
SELECT ALL rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0, rt0.c3 FROM rt0, vt0 NOT INDEXED;
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0, rt0.c3 FROM rt0, vt0 WHERE (((((vt0.c0)>=(rt0.c1))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND ((((vt0.c0, rt0.c0, rt0.c0))<((NULL, '0 \nCuB', rt0.c1)))))) UNION SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0, rt0.c3 FROM rt0, vt0 WHERE ((NOT (((((vt0.c0)>=(rt0.c1))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND ((((vt0.c0, rt0.c0, rt0.c0))<((NULL, '0 \nCuB', rt0.c1)))))))) UNION SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0, rt0.c3 FROM rt0, vt0 WHERE (((((((vt0.c0)>=(rt0.c1))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND ((((vt0.c0, rt0.c0, rt0.c0))<((NULL, '0 \nCuB', rt0.c1)))))) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0, rt0.c3 FROM rt0, vt0 NOT INDEXED;
SELECT ALL rt0.c1, rt0.c3, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((((HEX(rt0.c1), (((rt0.c3))>((rt0.c2))), CASE WHEN x'cff4' THEN vt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN 1.306901557E9 WHEN '709708488' THEN rt0.c2 ELSE 0.7308895019681353 END))<((0X5a07766b, IFNULL(rt0.c3, vt0.c0), CASE rt0.c3  WHEN rt0.c0 THEN vt0.c0 END)))) GROUP BY rt0.c1, rt0.c3, rt0.c2, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((((HEX(rt0.c1), (((rt0.c3))>((rt0.c2))), CASE WHEN x'cff4' THEN vt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN 1.306901557E9 WHEN '709708488' THEN rt0.c2 ELSE 0.7308895019681353 END))<((0x5a07766b, IFNULL(rt0.c3, vt0.c0), CASE rt0.c3  WHEN rt0.c0 THEN vt0.c0 END)))))) GROUP BY rt0.c1, rt0.c3, rt0.c2, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((((((HEX(rt0.c1), (((rt0.c3))>((rt0.c2))), CASE WHEN x'cff4' THEN vt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN 1.306901557E9 WHEN '709708488' THEN rt0.c2 ELSE 0.7308895019681353 END))<((0X5a07766b, IFNULL(rt0.c3, vt0.c0), CASE rt0.c3  WHEN rt0.c0 THEN vt0.c0 END)))) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, vt0.c0;
SELECT ALL v0.c0, rt0.c3, vt0.c0, rt0.c2 FROM rt0, v0, vt0 GROUP BY v0.c0, rt0.c3, vt0.c0, rt0.c2;
SELECT v0.c0, rt0.c3, vt0.c0, rt0.c2 FROM rt0, v0, vt0 GROUP BY v0.c0, rt0.c3, vt0.c0, rt0.c2 HAVING COUNT((~ (GROUP_CONCAT(TOTAL(COUNT(COUNT(*))))))) UNION ALL SELECT v0.c0, rt0.c3, vt0.c0, rt0.c2 FROM rt0, v0, vt0 GROUP BY v0.c0, rt0.c3, vt0.c0, rt0.c2 HAVING (NOT (COUNT((~ (GROUP_CONCAT(TOTAL(COUNT(COUNT(*))))))))) UNION ALL SELECT ALL v0.c0, rt0.c3, vt0.c0, rt0.c2 FROM rt0, v0, vt0 GROUP BY v0.c0, rt0.c3, vt0.c0, rt0.c2 HAVING ((COUNT((~ (GROUP_CONCAT(TOTAL(COUNT(COUNT(*)))))))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((- (UNLIKELY(v0.c0)))) UNION ALL SELECT * FROM v0 NOT INDEXED WHERE ((NOT ((- (UNLIKELY(v0.c0)))))) UNION ALL SELECT * FROM v0 WHERE ((((- (UNLIKELY(v0.c0)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE WHEN x'' THEN rt0.c0 END)<>(rt0.c1))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((CASE WHEN x'' THEN rt0.c0 END)<>(rt0.c1))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((((CASE WHEN x'' THEN rt0.c0 END)<>(rt0.c1))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c3, rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0 INNER JOIN rt0 ON ((((((rt0.c3)OR(NULL)))AND(rt0.c0))) NOTNULL) RIGHT OUTER JOIN v0 ON ((rt0.c3)IS(rt0.c2)) COLLATE RTRIM GROUP BY rt0.c3, rt0.c1, rt0.c2, vt0.c0, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0 INNER JOIN rt0 ON ((((((rt0.c3)OR(NULL)))AND(rt0.c0))) NOTNULL) RIGHT OUTER JOIN v0 ON ((rt0.c3)IS(rt0.c2)) COLLATE RTRIM WHERE (UNLIKELY(DISTINCT ((((rt0.c3)OR(v0.c0)))OR(vt0.c0)))) GROUP BY rt0.c3, rt0.c1, rt0.c2, vt0.c0, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0 INNER JOIN rt0 ON ((((((rt0.c3)OR(NULL)))AND(rt0.c0))) NOTNULL) RIGHT OUTER JOIN v0 ON ((rt0.c3)IS(rt0.c2)) COLLATE RTRIM WHERE ((NOT (UNLIKELY(DISTINCT ((((rt0.c3)OR(v0.c0)))OR(vt0.c0)))))) GROUP BY rt0.c3, rt0.c1, rt0.c2, vt0.c0, rt0.c0 UNION SELECT rt0.c3, rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0 INNER JOIN rt0 ON ((((((rt0.c3)OR(NULL)))AND(rt0.c0))) NOTNULL) RIGHT OUTER JOIN v0 ON ((rt0.c3)IS(rt0.c2)) COLLATE RTRIM WHERE (((UNLIKELY(DISTINCT ((((rt0.c3)OR(v0.c0)))OR(vt0.c0)))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c2, vt0.c0, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0 INNER JOIN rt0 ON ((((((rt0.c3)OR(NULL)))AND(rt0.c0))) NOTNULL) RIGHT OUTER JOIN v0 ON ((rt0.c3)IS(rt0.c2)) COLLATE RTRIM GROUP BY rt0.c3, rt0.c1, rt0.c2, vt0.c0, rt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING COUNT(SUM(MIN(vt0.c0))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (COUNT(SUM(MIN(vt0.c0))))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((COUNT(SUM(MIN(vt0.c0)))) ISNULL);
SELECT rt0.c0, v0.c0, rt0.c3, rt0.c1, vt0.c0 FROM vt0, v0 RIGHT OUTER JOIN rt0 ON CAST((((v0.c0, rt0.c3, rt0.c1))<=((rt0.c3, v0.c0, 0.2594619309012862))) AS INTEGER);
SELECT ALL rt0.c0, v0.c0, rt0.c3, rt0.c1, vt0.c0 FROM vt0, v0 RIGHT OUTER JOIN rt0 ON CAST((((v0.c0, rt0.c3, rt0.c1))<=((rt0.c3, v0.c0, 0.2594619309012862))) AS INTEGER) WHERE (CASE WHEN '' THEN CAST(vt0.c0 AS REAL) END) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c3, rt0.c1, vt0.c0 FROM vt0, v0 RIGHT OUTER JOIN rt0 ON CAST((((v0.c0, rt0.c3, rt0.c1))<=((rt0.c3, v0.c0, 0.2594619309012862))) AS INTEGER) WHERE ((NOT (CASE WHEN '' THEN CAST(vt0.c0 AS REAL) END))) UNION ALL SELECT rt0.c0, v0.c0, rt0.c3, rt0.c1, vt0.c0 FROM vt0, v0 RIGHT OUTER JOIN rt0 ON CAST((((v0.c0, rt0.c3, rt0.c1))<=((rt0.c3, v0.c0, 0.2594619309012862))) AS INTEGER) WHERE (((CASE WHEN '' THEN CAST(vt0.c0 AS REAL) END) ISNULL));
SELECT rt0.c0, v0.c0, rt0.c3, rt0.c1, vt0.c0 FROM vt0, v0 RIGHT OUTER JOIN rt0 ON CAST((((v0.c0, rt0.c3, rt0.c1))<=((rt0.c3, v0.c0, 0.2594619309012862))) AS INTEGER);
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((TRIM(v0.c0, v0.c0)) NOT BETWEEN (v0.c0) AND ('493817731'))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((TRIM(v0.c0, v0.c0)) NOT BETWEEN (v0.c0) AND ('493817731'))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((TRIM(v0.c0, v0.c0)) NOT BETWEEN (v0.c0) AND ('493817731'))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))) AND ((((NULL) ISNULL)))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))) AND ((((NULL) ISNULL)))) WHERE ((0.883433895969797 IN (((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))) AND ((((NULL) ISNULL)))) WHERE ((NOT ((0.883433895969797 IN (((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))) AND ((((NULL) ISNULL)))) WHERE ((((0.883433895969797 IN (((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))) AND ((((NULL) ISNULL)))) GROUP BY vt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING MAX(CASE WHEN rt0.c2 THEN rt0.c0 END) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (MAX(CASE WHEN rt0.c2 THEN rt0.c0 END))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((MAX(CASE WHEN rt0.c2 THEN rt0.c0 END)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING MAX(CASE WHEN rt0.c2 THEN rt0.c0 END) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (MAX(CASE WHEN rt0.c2 THEN rt0.c0 END))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((MAX(CASE WHEN rt0.c2 THEN rt0.c0 END)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c3, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0;
SELECT rt0.c1, rt0.c3, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((json_valid(rt0.c3) IN ())) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT ((json_valid(rt0.c3) IN ())))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((((json_valid(rt0.c3) IN ())) ISNULL));
SELECT ALL rt0.c1, rt0.c3, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0, vt0 WHERE (((((NULL)OR(NULL)))OR(CAST(0.6961525249653291 AS TEXT)))) UNION SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0, vt0 WHERE ((NOT (((((NULL)OR(NULL)))OR(CAST(0.6961525249653291 AS TEXT)))))) UNION SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0, vt0 WHERE (((((((NULL)OR(NULL)))OR(CAST(0.6961525249653291 AS TEXT)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0, vt0;
SELECT ALL rt0.c3, v0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c3, v0.c0;
SELECT ALL rt0.c3, v0.c0 FROM rt0, v0, vt0 WHERE (((((((((CAST(vt0.c0 AS INTEGER))AND(json_extract('I5],qM봉L', 'a	嬪8c'))))AND(((vt0.c0) NOT NULL))))OR(IFNULL(v0.c0, rt0.c1))))OR(''))) GROUP BY rt0.c3, v0.c0 UNION SELECT ALL rt0.c3, v0.c0 FROM rt0, v0, vt0 WHERE ((NOT (((((((((CAST(vt0.c0 AS INTEGER))AND(json_extract('I5],qM봉L', 'a	嬪8c'))))AND(((vt0.c0) NOT NULL))))OR(IFNULL(v0.c0, rt0.c1))))OR(''))))) GROUP BY rt0.c3, v0.c0 UNION SELECT ALL rt0.c3, v0.c0 FROM rt0, v0, vt0 WHERE (((((((((((CAST(vt0.c0 AS INTEGER))AND(json_extract('I5],qM봉L', 'a	嬪8c'))))AND(((vt0.c0) NOT NULL))))OR(IFNULL(v0.c0, rt0.c1))))OR(''))) ISNULL)) GROUP BY rt0.c3, v0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING TOTAL(MIN(COUNT(v0.c0))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (TOTAL(MIN(COUNT(v0.c0))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((TOTAL(MIN(COUNT(v0.c0)))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (LIKELY(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (LIKELY(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((LIKELY(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((('531844541')<(vt0.c0)))OR((rt0.c1 IN (vt0.c0, rt0.c3)))))AND(rt0.c3))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((((((('531844541')<(vt0.c0)))OR((rt0.c1 IN (vt0.c0, rt0.c3)))))AND(rt0.c3))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((((('531844541')<(vt0.c0)))OR((rt0.c1 IN (vt0.c0, rt0.c3)))))AND(rt0.c3))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON NULL COLLATE NOCASE GROUP BY v0.c0;
SELECT v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON NULL COLLATE NOCASE WHERE (CAST(CAST(vt0.c0 AS REAL) AS TEXT)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON NULL COLLATE NOCASE WHERE ((NOT (CAST(CAST(vt0.c0 AS REAL) AS TEXT)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON NULL COLLATE NOCASE WHERE (((CAST(CAST(vt0.c0 AS REAL) AS TEXT)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON NULL COLLATE NOCASE GROUP BY v0.c0;
SELECT vt0.c0, rt0.c0, rt0.c2, v0.c0 FROM rt0, vt0 CROSS JOIN v0 ON (((rt0.c2)) BETWEEN ((rt0.c1)) AND (('-1902064514'))) GROUP BY vt0.c0, rt0.c0, rt0.c2, v0.c0;
SELECT vt0.c0, rt0.c0, rt0.c2, v0.c0 FROM rt0, vt0 CROSS JOIN v0 ON (((rt0.c2)) BETWEEN ((rt0.c1)) AND (('-1902064514'))) GROUP BY vt0.c0, rt0.c0, rt0.c2, v0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c2, v0.c0 FROM rt0, vt0 CROSS JOIN v0 ON (((rt0.c2)) BETWEEN ((rt0.c1)) AND (('-1902064514'))) GROUP BY vt0.c0, rt0.c0, rt0.c2, v0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c2, v0.c0 FROM rt0, vt0 CROSS JOIN v0 ON (((rt0.c2)) BETWEEN ((rt0.c1)) AND (('-1902064514'))) GROUP BY vt0.c0, rt0.c0, rt0.c2, v0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE ((((x'', v0.c0, v0.c0)) BETWEEN ((CAST(vt0.c0 AS BLOB), ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)), ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(0.6892484040414244)))OR(vt0.c0)))) AND ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END, '0.6223901345479271', CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT ((((x'', v0.c0, v0.c0)) BETWEEN ((CAST(vt0.c0 AS BLOB), ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)), ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(0.6892484040414244)))OR(vt0.c0)))) AND ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END, '0.6223901345479271', CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)))))) UNION ALL SELECT * FROM vt0, v0 WHERE ((((((x'', v0.c0, v0.c0)) BETWEEN ((CAST(vt0.c0 AS BLOB), ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)), ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(0.6892484040414244)))OR(vt0.c0)))) AND ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END, '0.6223901345479271', CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((((((((((vt0.c0)AND('cm(‪&\n^')))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0))) IS FALSE);
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((((((((((vt0.c0)AND('cm(‪&\n^')))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0))) IS FALSE) WHERE (((((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))*((rt0.c0 IN ())))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((((((((((vt0.c0)AND('cm(‪&\n^')))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0))) IS FALSE) WHERE ((NOT (((((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))*((rt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((((((((((vt0.c0)AND('cm(‪&\n^')))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0))) IS FALSE) WHERE (((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))*((rt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((((((((((vt0.c0)AND('cm(‪&\n^')))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0))) IS FALSE);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((x'')>(v0.c0 COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((x'')>(v0.c0 COLLATE BINARY))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((x'')>(v0.c0 COLLATE BINARY))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((0.11625946332666814)<>(v0.c0))) NOT BETWEEN (COUNT(*)) AND (MAX(TOTAL(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((0.11625946332666814)!=(v0.c0))) NOT BETWEEN (COUNT(*)) AND (MAX(TOTAL(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((0.11625946332666814)!=(v0.c0))) NOT BETWEEN (COUNT(*)) AND (MAX(TOTAL(v0.c0))))) ISNULL);
SELECT * FROM vt0 CROSS JOIN rt0 ON rt0.c2 COLLATE NOCASE;
SELECT * FROM vt0 CROSS JOIN rt0 ON rt0.c2 COLLATE NOCASE WHERE ((~ ((rt0.c1 IN ())))) UNION ALL SELECT * FROM vt0 CROSS JOIN rt0 ON rt0.c2 COLLATE NOCASE WHERE ((NOT ((~ ((rt0.c1 IN ())))))) UNION ALL SELECT * FROM vt0 CROSS JOIN rt0 ON rt0.c2 COLLATE NOCASE WHERE ((((~ ((rt0.c1 IN ())))) ISNULL));
SELECT * FROM vt0 CROSS JOIN rt0 ON rt0.c2 COLLATE NOCASE;
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((((vt0.c0)>>(rt0.c3)))<(v0.c0))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((NOT (((((vt0.c0)>>(rt0.c3)))<(v0.c0))))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((((((vt0.c0)>>(rt0.c3)))<(v0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT v0.c0, rt0.c3, rt0.c2 FROM rt0, v0, vt0 GROUP BY v0.c0, rt0.c3, rt0.c2;
SELECT v0.c0, rt0.c3, rt0.c2 FROM rt0, v0, vt0 WHERE (((rt0.c2) ISNULL)) GROUP BY v0.c0, rt0.c3, rt0.c2 UNION SELECT v0.c0, rt0.c3, rt0.c2 FROM rt0, v0, vt0 WHERE ((NOT (((rt0.c2) ISNULL)))) GROUP BY v0.c0, rt0.c3, rt0.c2 UNION SELECT ALL v0.c0, rt0.c3, rt0.c2 FROM rt0, v0, vt0 WHERE (((((rt0.c2) ISNULL)) ISNULL)) GROUP BY v0.c0, rt0.c3, rt0.c2;
SELECT v0.c0, rt0.c3, rt0.c2 FROM rt0, v0, vt0 GROUP BY v0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0 HAVING MIN(TRIM(MIN(TOTAL(MAX('0.7050392041827584'))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MIN(TRIM(MIN(TOTAL(MAX('0.7050392041827584'))))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0 HAVING ((MIN(TRIM(MIN(TOTAL(MAX('0.7050392041827584')))))) ISNULL);
SELECT rt0.c0, rt0.c3 FROM rt0, vt0;
SELECT ALL rt0.c0, rt0.c3 FROM rt0, vt0 WHERE (NULL) UNION ALL SELECT rt0.c0, rt0.c3 FROM rt0, vt0 WHERE ((NOT (NULL))) UNION ALL SELECT rt0.c0, rt0.c3 FROM rt0, vt0 WHERE (((NULL) ISNULL));
SELECT rt0.c0, rt0.c3 FROM rt0, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c0, rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c0 FROM vt0, v0 CROSS JOIN rt0 ON (((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((vt0.c0))))<(((rt0.c3) IS TRUE))) GROUP BY vt0.c0, rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c0;
SELECT vt0.c0, rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c0 FROM vt0, v0 CROSS JOIN rt0 ON (((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((vt0.c0))))<(((rt0.c3) IS TRUE))) WHERE ((- (rt0.c2))) GROUP BY vt0.c0, rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c0 UNION SELECT vt0.c0, rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c0 FROM vt0, v0 CROSS JOIN rt0 ON (((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((vt0.c0))))<(((rt0.c3) IS TRUE))) WHERE ((NOT ((- (rt0.c2))))) GROUP BY vt0.c0, rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c0 UNION SELECT vt0.c0, rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c0 FROM vt0, v0 CROSS JOIN rt0 ON (((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((vt0.c0))))<(((rt0.c3) IS TRUE))) WHERE ((((- (rt0.c2))) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c0;
SELECT ALL vt0.c0, rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c0 FROM vt0, v0 CROSS JOIN rt0 ON (((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((vt0.c0))))<(((rt0.c3) IS TRUE))) GROUP BY vt0.c0, rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING MAX(vt0.c0) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 NOT INDEXED GROUP BY v0.c0, vt0.c0 HAVING (NOT (MAX(vt0.c0))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((MAX(vt0.c0)) ISNULL);
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING MAX(vt0.c0) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 NOT INDEXED GROUP BY v0.c0, vt0.c0 HAVING (NOT (MAX(vt0.c0))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((MAX(vt0.c0)) ISNULL);
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (CAST(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC)) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (CAST(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC)))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((CAST(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC)) ISNULL));
SELECT v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((~ (((v0.c0)<>(vt0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((NOT ((~ (((v0.c0)!=(vt0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((((~ (((v0.c0)!=(vt0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT ALL rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0, vt0 GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0, vt0 WHERE ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)) IN ())) GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0, vt0 WHERE ((NOT ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)) IN ())))) GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0, vt0 WHERE ((((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)) IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0, vt0 GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2;
SELECT ALL vt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0, v0 NATURAL JOIN vt0 GROUP BY vt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0, v0 NATURAL JOIN vt0 GROUP BY vt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(rt0.c3)) NOT BETWEEN ((MIN(TOTAL(TOTAL(vt0.c0))) IN ())) AND (CASE rt0.c3  WHEN GROUP_CONCAT(TOTAL(SUM(rt0.c2))) THEN rt0.c3 ELSE MIN(vt0.c0) END)) UNION ALL SELECT ALL vt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0, v0 NATURAL JOIN vt0 GROUP BY vt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((GROUP_CONCAT(rt0.c3)) NOT BETWEEN ((MIN(TOTAL(TOTAL(vt0.c0))) IN ())) AND (CASE rt0.c3  WHEN GROUP_CONCAT(TOTAL(SUM(rt0.c2))) THEN rt0.c3 ELSE MIN(vt0.c0) END)))) UNION ALL SELECT vt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0, v0 NATURAL JOIN vt0 GROUP BY vt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING ((((GROUP_CONCAT(rt0.c3)) NOT BETWEEN ((MIN(TOTAL(TOTAL(vt0.c0))) IN ())) AND (CASE rt0.c3  WHEN GROUP_CONCAT(TOTAL(SUM(rt0.c2))) THEN rt0.c3 ELSE MIN(vt0.c0) END))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)+(vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)+(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)+(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON TYPEOF(DISTINCT CAST(vt0.c0 AS REAL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON TYPEOF(DISTINCT CAST(vt0.c0 AS REAL)) WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))==(((vt0.c0)==(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON TYPEOF(DISTINCT CAST(vt0.c0 AS REAL)) WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))=(((vt0.c0)=(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON TYPEOF(DISTINCT CAST(vt0.c0 AS REAL)) WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))==(((vt0.c0)==(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON TYPEOF(DISTINCT CAST(vt0.c0 AS REAL));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((((~ (vt0.c0)))OR(((NULL)/(vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((~ (vt0.c0)))OR(((NULL)/(vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((((~ (vt0.c0)))OR(((NULL)/(vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, rt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, rt0, v0 GROUP BY vt0.c0, v0.c0 HAVING MAX(MAX(COUNT(*))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, rt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (MAX(MAX(COUNT(*))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, rt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((MAX(MAX(COUNT(*)))) ISNULL);
SELECT * FROM rt0, vt0, v0;
SELECT * FROM rt0, vt0, v0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))>>((((v0.c0))<=((rt0.c1)))))) ORDER BY rt0.c3 ASC;
SELECT ALL * FROM rt0, vt0, v0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))>>((((v0.c0))<=((rt0.c1)))))))) ORDER BY rt0.c3 ASC;
SELECT * FROM rt0, vt0 NOT INDEXED, v0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))>>((((v0.c0))<=((rt0.c1)))))) ISNULL)) ORDER BY rt0.c3 ASC;
SELECT * FROM rt0, vt0, v0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c3)&('1510438507')))) AND ((((x'') IS TRUE))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((((rt0.c3)&('1510438507')))) AND ((((x'') IS TRUE))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((((rt0.c3)&('1510438507')))) AND ((((x'') IS TRUE))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE (-1.787043177E9) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (-1.787043177E9))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (((-1.787043177E9) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM v0, rt0 NOT INDEXED, vt0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c0;
SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM v0, rt0, vt0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM v0, rt0, vt0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM v0, rt0, vt0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM v0, rt0 NOT INDEXED, vt0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c0;
SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM v0, rt0, vt0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM v0, rt0, vt0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM v0, rt0, vt0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM v0, rt0 NOT INDEXED, vt0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c0;
SELECT rt0.c3, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE (((((UNLIKELY(rt0.c2))AND(((rt0.c2)=(rt0.c1)))))AND((~ (rt0.c3))))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((UNLIKELY(rt0.c2))AND(((rt0.c2)==(rt0.c1)))))AND((~ (rt0.c3))))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((UNLIKELY(rt0.c2))AND(((rt0.c2)=(rt0.c1)))))AND((~ (rt0.c3))))) ISNULL));
SELECT rt0.c3, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c3)) COLLATE BINARY) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c3)) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE (((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c3)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0;
SELECT rt0.c1, v0.c0, rt0.c0 FROM vt0 NOT INDEXED, v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c0;
SELECT ALL rt0.c1, v0.c0, rt0.c0 FROM vt0, v0, rt0 WHERE ((((((rt0.c3 IN (vt0.c0)))OR(CAST(vt0.c0 AS INTEGER))))OR(((rt0.c0) NOTNULL)))) GROUP BY rt0.c1, v0.c0, rt0.c0 UNION SELECT rt0.c1, v0.c0, rt0.c0 FROM vt0, v0, rt0 WHERE ((NOT ((((((rt0.c3 IN (vt0.c0)))OR(CAST(vt0.c0 AS INTEGER))))OR(((rt0.c0) NOTNULL)))))) GROUP BY rt0.c1, v0.c0, rt0.c0 UNION SELECT rt0.c1, v0.c0, rt0.c0 FROM vt0 NOT INDEXED, v0, rt0 WHERE ((((((((rt0.c3 IN (vt0.c0)))OR(CAST(vt0.c0 AS INTEGER))))OR(((rt0.c0) NOTNULL)))) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c0;
SELECT rt0.c1, v0.c0, rt0.c0 FROM vt0 NOT INDEXED, v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c0;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING AVG(COUNT(MIN(v0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING (NOT (AVG(COUNT(MIN(v0.c0))))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING ((AVG(COUNT(MIN(v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 NOT INDEXED WHERE (((v0.c0) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((((((((((x'')OR(rt0.c3)))OR(rt0.c1)))OR(0Xffffffffde79ba74)))AND(rt0.c0))) BETWEEN (0.9770766987697418) AND (rt0.c3))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((((((((((x'')OR(rt0.c3)))OR(rt0.c1)))OR(0Xffffffffde79ba74)))AND(rt0.c0))) BETWEEN (0.9770766987697418) AND (rt0.c3))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((((((((((x'')OR(rt0.c3)))OR(rt0.c1)))OR(0xffffffffde79ba74)))AND(rt0.c0))) BETWEEN (0.9770766987697418) AND (rt0.c3))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE (CAST(CASE WHEN v0.c0 THEN NULL WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END AS INTEGER)) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((NOT (CAST(CASE WHEN v0.c0 THEN NULL WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END AS INTEGER)))) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE (((CAST(CASE WHEN v0.c0 THEN NULL WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END AS INTEGER)) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(vt0.c0 COLLATE BINARY) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(vt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(vt0.c0 COLLATE BINARY)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(vt0.c0 COLLATE BINARY) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(vt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(vt0.c0 COLLATE BINARY)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0, rt0, v0;
SELECT * FROM vt0, rt0, v0 WHERE (((((v0.c0)GLOB(rt0.c3))) NOT BETWEEN (((((((((rt0.c0)AND(v0.c0)))OR(rt0.c2)))OR(v0.c0)))OR(rt0.c1))) AND (((rt0.c3) NOTNULL)))) UNION ALL SELECT * FROM vt0, rt0, v0 WHERE ((NOT (((((v0.c0)GLOB(rt0.c3))) NOT BETWEEN (((((((((rt0.c0)AND(v0.c0)))OR(rt0.c2)))OR(v0.c0)))OR(rt0.c1))) AND (((rt0.c3) NOTNULL)))))) UNION ALL SELECT ALL * FROM vt0, rt0, v0 WHERE (((((((v0.c0)GLOB(rt0.c3))) NOT BETWEEN (((((((((rt0.c0)AND(v0.c0)))OR(rt0.c2)))OR(v0.c0)))OR(rt0.c1))) AND (((rt0.c3) NOTNULL)))) ISNULL));
SELECT ALL * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (x'ed1b') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (x'ed1b'))) UNION SELECT DISTINCT * FROM rt0 WHERE (((x'ed1b') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0 IN ())) BETWEEN ((((v0.c0)) NOT BETWEEN (('')) AND ((v0.c0)))) AND ((- (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 IN ())) BETWEEN ((((v0.c0)) NOT BETWEEN (('')) AND ((v0.c0)))) AND ((- (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0 IN ())) BETWEEN ((((v0.c0)) NOT BETWEEN (('')) AND ((v0.c0)))) AND ((- (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING MAX(GROUP_CONCAT(MIN(vt0.c0))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (MAX(GROUP_CONCAT(MIN(vt0.c0))))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((MAX(GROUP_CONCAT(MIN(vt0.c0)))) ISNULL);
SELECT ALL TOTAL(((((vt0.c0 COLLATE NOCASE)OR(((vt0.c0)==(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END))) FROM vt0;
SELECT rt0.c3, vt0.c0, rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c2 COLLATE NOCASE CROSS JOIN vt0 ON (('/V+jꂬvg')|(rt0.c0));
SELECT rt0.c3, vt0.c0, rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c2 COLLATE NOCASE CROSS JOIN vt0 ON (('/V+jꂬvg')|(rt0.c0)) WHERE (CAST(rt0.c3 COLLATE NOCASE AS NUMERIC)) UNION ALL SELECT ALL rt0.c3, vt0.c0, rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c2 COLLATE NOCASE CROSS JOIN vt0 ON (('/V+jꂬvg')|(rt0.c0)) WHERE ((NOT (CAST(rt0.c3 COLLATE NOCASE AS NUMERIC)))) UNION ALL SELECT ALL rt0.c3, vt0.c0, rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c2 COLLATE NOCASE CROSS JOIN vt0 ON (('/V+jꂬvg')|(rt0.c0)) WHERE (((CAST(rt0.c3 COLLATE NOCASE AS NUMERIC)) ISNULL));
SELECT rt0.c3, vt0.c0, rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c2 COLLATE NOCASE CROSS JOIN vt0 ON (('/V+jꂬvg')|(rt0.c0));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CASE v0.c0 COLLATE NOCASE  WHEN (v0.c0 IN ()) THEN CAST(NULL AS TEXT) END) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CASE v0.c0 COLLATE NOCASE  WHEN (v0.c0 IN ()) THEN CAST(NULL AS TEXT) END))) UNION SELECT DISTINCT * FROM v0 WHERE (((CASE v0.c0 COLLATE NOCASE  WHEN (v0.c0 IN ()) THEN CAST(NULL AS TEXT) END) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c3, vt0.c0;
SELECT ALL rt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0 WHERE (((((rt0.c0 IN ())))!=(((vt0.c0 IN (vt0.c0)))))) GROUP BY rt0.c1, rt0.c3, vt0.c0 UNION SELECT rt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((((rt0.c0 IN ())))<>(((vt0.c0 IN (vt0.c0)))))))) GROUP BY rt0.c1, rt0.c3, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0 WHERE (((((((rt0.c0 IN ())))<>(((vt0.c0 IN (vt0.c0)))))) ISNULL)) GROUP BY rt0.c1, rt0.c3, vt0.c0;
SELECT ALL rt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c3, vt0.c0;
SELECT rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2;
SELECT ALL rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2 HAVING CASE WHEN ((rt0.c1) NOT BETWEEN ('-1848254180') AND (COUNT(rt0.c2))) THEN MIN(AVG(SUM(MAX(MIN(COUNT(rt0.c2)))))) ELSE MIN(MIN(rt0.c1)) END UNION ALL SELECT ALL rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2 HAVING (NOT (CASE WHEN ((rt0.c1) NOT BETWEEN ('-1848254180') AND (COUNT(rt0.c2))) THEN MIN(AVG(SUM(MAX(MIN(COUNT(rt0.c2)))))) ELSE MIN(MIN(rt0.c1)) END)) UNION ALL SELECT ALL rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2 HAVING ((CASE WHEN ((rt0.c1) NOT BETWEEN ('-1848254180') AND (COUNT(rt0.c2))) THEN MIN(AVG(SUM(MAX(MIN(COUNT(rt0.c2)))))) ELSE MIN(MIN(rt0.c1)) END) ISNULL);
SELECT ALL * FROM v0, rt0 CROSS JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER)) ISNULL);
SELECT * FROM v0, rt0 CROSS JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER)) ISNULL) WHERE ((((rt0.c0) IS FALSE) IN ())) UNION ALL SELECT * FROM v0, rt0 CROSS JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER)) ISNULL) WHERE ((NOT ((((rt0.c0) IS FALSE) IN ())))) UNION ALL SELECT ALL * FROM v0, rt0 CROSS JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER)) ISNULL) WHERE ((((((rt0.c0) IS FALSE) IN ())) ISNULL));
SELECT ALL * FROM v0, rt0 CROSS JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER)) ISNULL);
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CAST('U	' AS NUMERIC))*(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CAST('U	' AS NUMERIC))*(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CAST('U	' AS NUMERIC))*(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0)IS NOT(vt0.c0)))))OR(CASE WHEN 0.9603760625726017 THEN vt0.c0 ELSE vt0.c0 END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0)IS NOT(vt0.c0)))))OR(CASE WHEN 0.9603760625726017 THEN vt0.c0 ELSE vt0.c0 END))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0)IS NOT(vt0.c0)))))OR(CASE WHEN 0.9603760625726017 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0)<=(COUNT(*))) COLLATE RTRIM UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((v0.c0)<=(COUNT(*))) COLLATE RTRIM)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0)<=(COUNT(*))) COLLATE RTRIM) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0)<=(COUNT(*))) COLLATE RTRIM UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((v0.c0)<=(COUNT(*))) COLLATE RTRIM)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0)<=(COUNT(*))) COLLATE RTRIM) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0, v0;
SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0, v0 WHERE (CASE IFNULL(DISTINCT vt0.c0, rt0.c0)  WHEN ((rt0.c3)!=(x'')) THEN ((rt0.c3)<(vt0.c0)) END) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0, v0 WHERE ((NOT (CASE IFNULL(DISTINCT vt0.c0, rt0.c0)  WHEN ((rt0.c3)<>(x'')) THEN ((rt0.c3)<(vt0.c0)) END))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0, v0 WHERE (((CASE IFNULL(DISTINCT vt0.c0, rt0.c0)  WHEN ((rt0.c3)!=(x'')) THEN ((rt0.c3)<(vt0.c0)) END) ISNULL));
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0, v0;
SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN '1068317489' WHEN rt0.c0 THEN rt0.c3 END COLLATE NOCASE RIGHT OUTER JOIN vt0 ON (NOT (json_patch(rt0.c0, v0.c0)));
SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN '1068317489' WHEN rt0.c0 THEN rt0.c3 END COLLATE NOCASE RIGHT OUTER JOIN vt0 ON (NOT (json_patch(rt0.c0, v0.c0))) WHERE ((((NOT (vt0.c0))) NOT BETWEEN (INSTR(rt0.c2, x'')) AND (((rt0.c1)<<(rt0.c2))))) UNION SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN '1068317489' WHEN rt0.c0 THEN rt0.c3 END COLLATE NOCASE RIGHT OUTER JOIN vt0 ON (NOT (json_patch(rt0.c0, v0.c0))) WHERE ((NOT ((((NOT (vt0.c0))) NOT BETWEEN (INSTR(rt0.c2, x'')) AND (((rt0.c1)<<(rt0.c2))))))) UNION SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN '1068317489' WHEN rt0.c0 THEN rt0.c3 END COLLATE NOCASE RIGHT OUTER JOIN vt0 ON (NOT (json_patch(rt0.c0, v0.c0))) WHERE ((((((NOT (vt0.c0))) NOT BETWEEN (INSTR(rt0.c2, x'')) AND (((rt0.c1)<<(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN '1068317489' WHEN rt0.c0 THEN rt0.c3 END COLLATE NOCASE RIGHT OUTER JOIN vt0 ON (NOT (json_patch(rt0.c0, v0.c0)));
SELECT rt0.c1, v0.c0, rt0.c3, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (LIKELIHOOD(DISTINCT rt0.c3, 0.764053130885606) IN (((rt0.c3)*(rt0.c0)), ((rt0.c1) IS TRUE))) CROSS JOIN v0 ON ((rt0.c0 COLLATE NOCASE)OR(CASE WHEN v0.c0 THEN v0.c0 END)) GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (LIKELIHOOD(DISTINCT rt0.c3, 0.764053130885606) IN (((rt0.c3)*(rt0.c0)), ((rt0.c1) IS TRUE))) CROSS JOIN v0 ON ((rt0.c0 COLLATE NOCASE)OR(CASE WHEN v0.c0 THEN v0.c0 END)) WHERE (CASE (((rt0.c2))<=((vt0.c0)))  WHEN (- (rt0.c3)) THEN PRINTF(rt0.c2) ELSE v0.c0 COLLATE RTRIM END) GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (LIKELIHOOD(DISTINCT rt0.c3, 0.764053130885606) IN (((rt0.c3)*(rt0.c0)), ((rt0.c1) IS TRUE))) CROSS JOIN v0 ON ((rt0.c0 COLLATE NOCASE)OR(CASE WHEN v0.c0 THEN v0.c0 END)) WHERE ((NOT (CASE (((rt0.c2))<=((vt0.c0)))  WHEN (- (rt0.c3)) THEN PRINTF(rt0.c2) ELSE v0.c0 COLLATE RTRIM END))) GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c0 UNION SELECT rt0.c1, v0.c0, rt0.c3, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (LIKELIHOOD(DISTINCT rt0.c3, 0.764053130885606) IN (((rt0.c3)*(rt0.c0)), ((rt0.c1) IS TRUE))) CROSS JOIN v0 ON ((rt0.c0 COLLATE NOCASE)OR(CASE WHEN v0.c0 THEN v0.c0 END)) WHERE (((CASE (((rt0.c2))<=((vt0.c0)))  WHEN (- (rt0.c3)) THEN PRINTF(rt0.c2) ELSE v0.c0 COLLATE RTRIM END) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c0;
SELECT rt0.c1, v0.c0, rt0.c3, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (LIKELIHOOD(DISTINCT rt0.c3, 0.764053130885606) IN (((rt0.c3)*(rt0.c0)), ((rt0.c1) IS TRUE))) CROSS JOIN v0 ON ((rt0.c0 COLLATE NOCASE)OR(CASE WHEN v0.c0 THEN v0.c0 END)) GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c0;
SELECT ALL vt0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY vt0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY vt0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 HAVING ((v0.c0)&(MIN(vt0.c0))) UNION ALL SELECT ALL vt0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY vt0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 HAVING (NOT (((v0.c0)&(MIN(vt0.c0))))) UNION ALL SELECT vt0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY vt0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 HAVING ((((v0.c0)&(MIN(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY vt0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY vt0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 HAVING ((v0.c0)&(MIN(vt0.c0))) UNION ALL SELECT ALL vt0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY vt0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 HAVING (NOT (((v0.c0)&(MIN(vt0.c0))))) UNION ALL SELECT vt0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY vt0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 HAVING ((((v0.c0)&(MIN(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY vt0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0 WHERE (CASE WHEN ((rt0.c2) NOTNULL) THEN ((rt0.c0)>('')) ELSE 1e500 END) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0 WHERE ((NOT (CASE WHEN ((rt0.c2) NOTNULL) THEN ((rt0.c0)>('')) ELSE 1e500 END))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0 WHERE (((CASE WHEN ((rt0.c2) NOTNULL) THEN ((rt0.c0)>('')) ELSE 1e500 END) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(RTRIM(v0.c0) AS TEXT)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CAST(RTRIM(v0.c0) AS TEXT)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CAST(RTRIM(v0.c0) AS TEXT)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING COUNT(SUM(rt0.c3)) UNION ALL SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(SUM(rt0.c3)))) UNION ALL SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING ((COUNT(SUM(rt0.c3))) ISNULL);
SELECT rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c1 FROM v0, rt0;
SELECT rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 WHERE (((((((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)))AND(v0.c0)))AND(rt0.c1)))AND(rt0.c2)))IS(rt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (((((((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)))AND(v0.c0)))AND(rt0.c1)))AND(rt0.c2)))IS(rt0.c0 COLLATE RTRIM))))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 WHERE (((((((((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)))AND(v0.c0)))AND(rt0.c1)))AND(rt0.c2)))IS(rt0.c0 COLLATE RTRIM))) ISNULL));
SELECT rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c1 FROM v0, rt0;
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT DISTINCT * FROM vt0, v0, rt0 WHERE (((v0.c0)*(((rt0.c3) ISNULL)))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE ((NOT (((v0.c0)*(((rt0.c3) ISNULL)))))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE (((((v0.c0)*(((rt0.c3) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, vt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0 WHERE (((0.14656504721178176)IS(CAST(vt0.c0 AS TEXT)))) GROUP BY rt0.c0, rt0.c1, rt0.c3, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((0.14656504721178176)IS(CAST(vt0.c0 AS TEXT)))))) GROUP BY rt0.c0, rt0.c1, rt0.c3, vt0.c0 UNION SELECT rt0.c0, rt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0 WHERE (((((0.14656504721178176)IS(CAST(vt0.c0 AS TEXT)))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c3, vt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c3, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(TOTAL(SUM(SUM(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(TOTAL(SUM(SUM(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(TOTAL(SUM(SUM(vt0.c0))))) ISNULL);
SELECT ALL * FROM vt0, rt0, v0;
SELECT ALL * FROM vt0, rt0, v0 WHERE (((highlight(rt0.c0, v0.c0, '?!̎', vt0.c0)) NOTNULL)) UNION ALL SELECT ALL * FROM vt0, rt0, v0 WHERE ((NOT (((highlight(rt0.c0, v0.c0, '?!̎', vt0.c0)) NOTNULL)))) UNION ALL SELECT * FROM vt0, rt0, v0 WHERE (((((highlight(rt0.c0, v0.c0, '?!̎', vt0.c0)) NOTNULL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CASE ((NULL) BETWEEN (v0.c0) AND (v0.c0))  WHEN ((vt0.c0)-(v0.c0)) THEN vt0.c0 COLLATE BINARY END;
SELECT DISTINCT v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CASE ((NULL) BETWEEN (v0.c0) AND (v0.c0))  WHEN ((vt0.c0)-(v0.c0)) THEN vt0.c0 COLLATE BINARY END WHERE (v0.c0) UNION SELECT DISTINCT v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CASE ((NULL) BETWEEN (v0.c0) AND (v0.c0))  WHEN ((vt0.c0)-(v0.c0)) THEN vt0.c0 COLLATE BINARY END WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CASE ((NULL) BETWEEN (v0.c0) AND (v0.c0))  WHEN ((vt0.c0)-(v0.c0)) THEN vt0.c0 COLLATE BINARY END WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CASE ((NULL) BETWEEN (v0.c0) AND (v0.c0))  WHEN ((vt0.c0)-(v0.c0)) THEN vt0.c0 COLLATE BINARY END;
SELECT rt0.c0, vt0.c0, v0.c0, rt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON ((x'7f9b') BETWEEN ((NOT (rt0.c3))) AND (rt0.c2 COLLATE RTRIM)) RIGHT OUTER JOIN rt0 ON (NOT (rt0.c0)) COLLATE RTRIM GROUP BY rt0.c0, vt0.c0, v0.c0, rt0.c1;
SELECT ALL rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING rt0.c2 UNION ALL SELECT rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING rt0.c2 UNION ALL SELECT rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL SUM((((v0.c0 IN ())) BETWEEN (v0.c0) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) FROM v0;
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE ((((rt0.c1)IS NOT(rt0.c1)) IN (((vt0.c0) IS TRUE)))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT ((((rt0.c1)IS NOT(rt0.c1)) IN (((vt0.c0) IS TRUE)))))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((((((rt0.c1)IS NOT(rt0.c1)) IN (((vt0.c0) IS TRUE)))) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM rt0, v0, vt0;
SELECT DISTINCT * FROM rt0, v0, vt0 WHERE (((CAST(rt0.c1 AS REAL)) BETWEEN ((+ (rt0.c2))) AND (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))))) UNION SELECT DISTINCT * FROM rt0, v0, vt0 WHERE ((NOT (((CAST(rt0.c1 AS REAL)) BETWEEN ((+ (rt0.c2))) AND (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))))))) UNION SELECT DISTINCT * FROM rt0, v0, vt0 WHERE (((((CAST(rt0.c1 AS REAL)) BETWEEN ((+ (rt0.c2))) AND (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0, vt0;
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM v0, rt0 WHERE ((- (CAST(rt0.c1 AS TEXT)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM v0, rt0 WHERE ((NOT ((- (CAST(rt0.c1 AS TEXT)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM v0, rt0 WHERE ((((- (CAST(rt0.c1 AS TEXT)))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING AVG(rt0.c3 COLLATE NOCASE) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (AVG(rt0.c3 COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((AVG(rt0.c3 COLLATE NOCASE)) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING AVG(rt0.c3 COLLATE NOCASE) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (AVG(rt0.c3 COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((AVG(rt0.c3 COLLATE NOCASE)) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (LIKELY(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (LIKELY(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE (((LIKELY(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((json_object(rt0.c0, rt0.c3)) NOT BETWEEN (CASE NULL  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END) AND ((NOT (rt0.c0))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((json_object(rt0.c0, rt0.c3)) NOT BETWEEN (CASE NULL  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END) AND ((NOT (rt0.c0))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((((json_object(rt0.c0, rt0.c3)) NOT BETWEEN (CASE NULL  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END) AND ((NOT (rt0.c0))))) ISNULL));
SELECT ALL rt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM v0, rt0, vt0 WHERE (((((rt0.c2)OR(CASE vt0.c0  WHEN v0.c0 THEN rt0.c3 END)))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM v0, rt0, vt0 WHERE ((NOT (((((rt0.c2)OR(CASE vt0.c0  WHEN v0.c0 THEN rt0.c3 END)))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM v0, rt0, vt0 WHERE (((((((rt0.c2)OR(CASE vt0.c0  WHEN v0.c0 THEN rt0.c3 END)))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING AVG(TOTAL(rt0.c3)) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING (NOT (AVG(TOTAL(rt0.c3)))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING ((AVG(TOTAL(rt0.c3))) ISNULL);
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE ((+ (rt0.c1 COLLATE NOCASE))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT ((+ (rt0.c1 COLLATE NOCASE))))) UNION ALL SELECT ALL * FROM rt0, v0 NOT INDEXED WHERE ((((+ (rt0.c1 COLLATE NOCASE))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT rt0.c3 FROM v0, vt0 FULL OUTER JOIN rt0 ON HEX(NULLIF(DISTINCT v0.c0, rt0.c3));
SELECT DISTINCT rt0.c3 FROM v0, vt0 FULL OUTER JOIN rt0 ON HEX(NULLIF(DISTINCT v0.c0, rt0.c3)) WHERE (LIKELIHOOD(DISTINCT '-1437339032' COLLATE BINARY, 0.7374490323005011)) UNION SELECT DISTINCT rt0.c3 FROM v0, vt0 FULL OUTER JOIN rt0 ON HEX(NULLIF(DISTINCT v0.c0, rt0.c3)) WHERE ((NOT (LIKELIHOOD(DISTINCT '-1437339032' COLLATE BINARY, 0.7374490323005011)))) UNION SELECT DISTINCT rt0.c3 FROM v0, vt0 FULL OUTER JOIN rt0 ON HEX(NULLIF(DISTINCT v0.c0, rt0.c3)) WHERE (((LIKELIHOOD(DISTINCT '-1437339032' COLLATE BINARY, 0.7374490323005011)) ISNULL));
SELECT DISTINCT rt0.c3 FROM v0, vt0 FULL OUTER JOIN rt0 ON HEX(NULLIF(DISTINCT v0.c0, rt0.c3));
SELECT rt0.c1, rt0.c0, rt0.c3, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, vt0.c0 FROM vt0, rt0 WHERE ((((((((((rt0.c3)AND(vt0.c0)))AND(rt0.c1)))OR(0xffffffff94cf53a3)))AND(rt0.c0)) IN ())) GROUP BY rt0.c1, rt0.c0, rt0.c3, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c3, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((((((((((rt0.c3)AND(vt0.c0)))AND(rt0.c1)))OR(0Xffffffff94cf53a3)))AND(rt0.c0)) IN ())))) GROUP BY rt0.c1, rt0.c0, rt0.c3, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c3, vt0.c0 FROM vt0, rt0 WHERE ((((((((((((rt0.c3)AND(vt0.c0)))AND(rt0.c1)))OR(0Xffffffff94cf53a3)))AND(rt0.c0)) IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c3, vt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c3, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM v0, vt0, rt0;
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((rt0.c1) IS FALSE)) IS TRUE)) UNION ALL SELECT ALL * FROM v0, vt0, rt0 WHERE ((NOT (((((rt0.c1) IS FALSE)) IS TRUE)))) UNION ALL SELECT ALL * FROM v0, vt0, rt0 WHERE (((((((rt0.c1) IS FALSE)) IS TRUE)) ISNULL));
SELECT ALL * FROM v0, vt0, rt0;
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON (((((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)), rt0.c3, ((rt0.c1) NOT NULL)))=(((rt0.c1 IN ()), (((rt0.c2))!=((rt0.c1))), LIKELIHOOD(rt0.c2, 0.12413393153972252)))) FULL OUTER JOIN v0 ON (((rt0.c3)) NOT BETWEEN ((LOWER(DISTINCT rt0.c3))) AND ((CAST(rt0.c0 AS INTEGER))));
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON (((((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)), rt0.c3, ((rt0.c1) NOT NULL)))=(((rt0.c1 IN ()), (((rt0.c2))!=((rt0.c1))), LIKELIHOOD(rt0.c2, 0.12413393153972252)))) FULL OUTER JOIN v0 ON (((rt0.c3)) NOT BETWEEN ((LOWER(DISTINCT rt0.c3))) AND ((CAST(rt0.c0 AS INTEGER)))) WHERE (((x'') NOT NULL)) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON (((((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)), rt0.c3, ((rt0.c1) NOT NULL)))=(((rt0.c1 IN ()), (((rt0.c2))<>((rt0.c1))), LIKELIHOOD(rt0.c2, 0.12413393153972252)))) FULL OUTER JOIN v0 ON (((rt0.c3)) NOT BETWEEN ((LOWER(DISTINCT rt0.c3))) AND ((CAST(rt0.c0 AS INTEGER)))) WHERE ((NOT (((x'') NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON (((((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)), rt0.c3, ((rt0.c1) NOT NULL)))==(((rt0.c1 IN ()), (((rt0.c2))!=((rt0.c1))), LIKELIHOOD(rt0.c2, 0.12413393153972252)))) FULL OUTER JOIN v0 ON (((rt0.c3)) NOT BETWEEN ((LOWER(DISTINCT rt0.c3))) AND ((CAST(rt0.c0 AS INTEGER)))) WHERE (((((x'') NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON (((((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)), rt0.c3, ((rt0.c1) NOT NULL)))=(((rt0.c1 IN ()), (((rt0.c2))!=((rt0.c1))), LIKELIHOOD(rt0.c2, 0.12413393153972252)))) FULL OUTER JOIN v0 ON (((rt0.c3)) NOT BETWEEN ((LOWER(DISTINCT rt0.c3))) AND ((CAST(rt0.c0 AS INTEGER))));
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0, rt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0, rt0 WHERE (((CAST(rt0.c0 AS REAL)) NOT BETWEEN (((v0.c0) ISNULL)) AND ('W‪>*篩\)䠘8'))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0, rt0 WHERE ((NOT (((CAST(rt0.c0 AS REAL)) NOT BETWEEN (((v0.c0) ISNULL)) AND ('W‪>*篩\)䠘8'))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0, rt0 WHERE (((((CAST(rt0.c0 AS REAL)) NOT BETWEEN (((v0.c0) ISNULL)) AND ('W‪>*篩\)䠘8'))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0, rt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c3, rt0.c0 HAVING ((GROUP_CONCAT(COUNT(*)))>(((MAX(rt0.c3)) NOT BETWEEN (SUM('')) AND (MIN(AVG(TOTAL(AVG(SUM(MAX(COUNT(rt0.c2))))))))))) UNION ALL SELECT rt0.c3, rt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c3, rt0.c0 HAVING (NOT (((GROUP_CONCAT(COUNT(*)))>(((MAX(rt0.c3)) NOT BETWEEN (SUM('')) AND (MIN(AVG(TOTAL(AVG(SUM(MAX(COUNT(rt0.c2))))))))))))) UNION ALL SELECT rt0.c3, rt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c3, rt0.c0 HAVING ((((GROUP_CONCAT(COUNT(*)))>(((MAX(rt0.c3)) NOT BETWEEN (SUM('')) AND (MIN(AVG(TOTAL(AVG(SUM(MAX(COUNT(rt0.c2)))))))))))) ISNULL);
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE ((rt0.c3 IN (rt0.c2, rt0.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT ((rt0.c3 IN (rt0.c2, rt0.c0)) COLLATE BINARY))) UNION ALL SELECT * FROM v0, rt0 WHERE ((((rt0.c3 IN (rt0.c2, rt0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((((v0.c0)<=(NULL))) NOTNULL)) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((((v0.c0)<=(NULL))) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((((v0.c0)<=(NULL))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT rt0.c3, v0.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM vt0 NOT INDEXED, v0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, v0.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM vt0, v0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 END)))) GROUP BY rt0.c3, v0.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c3, v0.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM vt0, v0, rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 END)))))) GROUP BY rt0.c3, v0.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c2 UNION SELECT rt0.c3, v0.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM vt0, v0, rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 END)))) ISNULL)) GROUP BY rt0.c3, v0.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c2;
SELECT rt0.c3, v0.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM vt0 NOT INDEXED, v0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c2;
SELECT vt0.c0, v0.c0 FROM vt0 NOT INDEXED CROSS JOIN v0 ON json_extract('-938621896', CAST(vt0.c0 AS BLOB)) GROUP BY vt0.c0, v0.c0;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((v0.c0)OR(0x363673d0)))AND(rt0.c0)))OR(rt0.c0)))AND(v0.c0)) COLLATE NOCASE RIGHT OUTER JOIN v0 ON CASE WHEN ((vt0.c0) NOT NULL) THEN ((rt0.c3) IS FALSE) END;
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT DISTINCT * FROM vt0, v0, rt0 WHERE (((((((((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND(rt0.c1)))OR(((rt0.c3)>=(rt0.c0)))))AND(((rt0.c1)OR(rt0.c0)))))AND((((rt0.c1))!=((v0.c0)))))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE ((NOT (((((((((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND(rt0.c1)))OR(((rt0.c3)>=(rt0.c0)))))AND(((rt0.c1)OR(rt0.c0)))))AND((((rt0.c1))!=((v0.c0)))))))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE (((((((((((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND(rt0.c1)))OR(((rt0.c3)>=(rt0.c0)))))AND(((rt0.c1)OR(rt0.c0)))))AND((((rt0.c1))!=((v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0)*(((vt0.c0)<=(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)*(((vt0.c0)<=(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)*(((vt0.c0)<=(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c1, v0.c0;
SELECT ALL rt0.c1, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c1, v0.c0 HAVING (COUNT(*) IN ()) UNION ALL SELECT rt0.c1, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c1, v0.c0 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL rt0.c1, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c1, v0.c0 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT rt0.c1, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c1, v0.c0;
SELECT ALL rt0.c1, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c1, v0.c0 HAVING (COUNT(*) IN ()) UNION ALL SELECT rt0.c1, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c1, v0.c0 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL rt0.c1, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c1, v0.c0 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT rt0.c1, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c1, v0.c0;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS BLOB))IS NOT('-847256199'))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS BLOB))IS NOT('-847256199'))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS BLOB))IS NOT('-847256199'))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c2 FROM v0, rt0;
SELECT DISTINCT rt0.c2 FROM v0, rt0 WHERE ((((((v0.c0)) NOT BETWEEN ((rt0.c3)) AND (('鯥*'))))/(((rt0.c2) NOTNULL)))) UNION SELECT DISTINCT rt0.c2 FROM v0, rt0 WHERE ((NOT ((((((v0.c0)) NOT BETWEEN ((rt0.c3)) AND (('鯥*'))))/(((rt0.c2) NOTNULL)))))) UNION SELECT DISTINCT rt0.c2 FROM v0, rt0 WHERE ((((((((v0.c0)) NOT BETWEEN ((rt0.c3)) AND (('鯥*'))))/(((rt0.c2) NOTNULL)))) ISNULL));
SELECT DISTINCT rt0.c2 FROM v0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0 IN ())) IS FALSE)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 IN ())) IS FALSE)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((v0.c0 IN ())) IS FALSE)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM v0 FULL OUTER JOIN rt0 ON UPPER(rt0.c2 COLLATE RTRIM) CROSS JOIN vt0 ON ((((vt0.c0) ISNULL)) NOTNULL) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0 FULL OUTER JOIN rt0 ON UPPER(rt0.c2 COLLATE RTRIM) CROSS JOIN vt0 ON ((((vt0.c0) ISNULL)) NOTNULL) GROUP BY vt0.c0 HAVING ((((((((-1e500)OR(COUNT(*))))OR(rt0.c2)))OR(MIN(AVG(COUNT(rt0.c1))))))AND(SUM(SUM(0.6544168822690534)))) UNION ALL SELECT ALL vt0.c0 FROM v0 FULL OUTER JOIN rt0 ON UPPER(rt0.c2 COLLATE RTRIM) CROSS JOIN vt0 ON ((((vt0.c0) ISNULL)) NOTNULL) GROUP BY vt0.c0 HAVING (NOT (((((((((-1e500)OR(COUNT(*))))OR(rt0.c2)))OR(MIN(AVG(COUNT(rt0.c1))))))AND(SUM(SUM(0.6544168822690534)))))) UNION ALL SELECT vt0.c0 FROM v0 FULL OUTER JOIN rt0 ON UPPER(rt0.c2 COLLATE RTRIM) CROSS JOIN vt0 ON ((((vt0.c0) ISNULL)) NOTNULL) GROUP BY vt0.c0 HAVING ((((((((((-1e500)OR(COUNT(*))))OR(rt0.c2)))OR(MIN(AVG(COUNT(rt0.c1))))))AND(SUM(SUM(0.6544168822690534))))) ISNULL);
SELECT * FROM v0, vt0 INNER JOIN rt0 ON CAST(rt0.c0 AS REAL);
SELECT * FROM v0, vt0 INNER JOIN rt0 ON CAST(rt0.c0 AS REAL) WHERE (SQLITE_COMPILEOPTION_GET(v0.c0) COLLATE NOCASE) UNION ALL SELECT * FROM v0, vt0 INNER JOIN rt0 ON CAST(rt0.c0 AS REAL) WHERE ((NOT (SQLITE_COMPILEOPTION_GET(v0.c0) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM v0, vt0 INNER JOIN rt0 ON CAST(rt0.c0 AS REAL) WHERE (((SQLITE_COMPILEOPTION_GET(v0.c0) COLLATE NOCASE) ISNULL));
SELECT * FROM v0, vt0 INNER JOIN rt0 ON CAST(rt0.c0 AS REAL);
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0 FROM rt0, vt0, v0;
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0 FROM rt0, vt0, v0 WHERE (((((rt0.c2)AND(vt0.c0)))OR(rt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c0 FROM rt0, vt0, v0 WHERE ((NOT (((((rt0.c2)AND(vt0.c0)))OR(rt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c0 FROM rt0, vt0, v0 WHERE (((((((rt0.c2)AND(vt0.c0)))OR(rt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0 FROM rt0, vt0, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)IS NOT((vt0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)IS NOT((vt0.c0 IN ())))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)IS NOT((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c2 HAVING TOTAL(vt0.c0) COLLATE NOCASE UNION ALL SELECT rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c2 HAVING (NOT (TOTAL(vt0.c0) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c2 HAVING ((TOTAL(vt0.c0) COLLATE NOCASE) ISNULL);
SELECT rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c2 HAVING TOTAL(vt0.c0) COLLATE NOCASE UNION ALL SELECT rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c2 HAVING (NOT (TOTAL(vt0.c0) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c2 HAVING ((TOTAL(vt0.c0) COLLATE NOCASE) ISNULL);
SELECT rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c2;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, 0.3162641272773459))==((vt0.c0, vt0.c0, vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((NOT ((((vt0.c0, vt0.c0, 0.3162641272773459))==((vt0.c0, vt0.c0, vt0.c0)))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((NOT ((((vt0.c0, vt0.c0, 0.3162641272773459))==((vt0.c0, vt0.c0, vt0.c0)))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2))) IS FALSE)) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2))) IS FALSE)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0)AND(v0.c0)))AND(x'')) IN ())) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 NOT INDEXED WHERE ((NOT ((((((v0.c0)AND(v0.c0)))AND(x'')) IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((((v0.c0)AND(v0.c0)))AND(x'')) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0 HAVING CAST(MAX(MAX(COUNT(MAX(AVG(COUNT(*)))))) AS NUMERIC) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (CAST(MAX(MAX(COUNT(MAX(AVG(COUNT(*)))))) AS NUMERIC))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0 HAVING ((CAST(MAX(MAX(COUNT(MAX(AVG(COUNT(*)))))) AS NUMERIC)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM rt0, v0, vt0;
SELECT rt0.c2, rt0.c1, rt0.c3 FROM rt0, v0, vt0 WHERE ((+ (x'992c')) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM rt0, v0, vt0 WHERE ((NOT ((+ (x'992c')) COLLATE NOCASE))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c3 FROM rt0, v0, vt0 WHERE ((((+ (x'992c')) COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM rt0, v0, vt0;
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((((rt0.c3)OR(v0.c0)))OR(vt0.c0))) AND (rt0.c3 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((NOT (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((((rt0.c3)OR(v0.c0)))OR(vt0.c0))) AND (rt0.c3 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((((rt0.c3)OR(v0.c0)))OR(vt0.c0))) AND (rt0.c3 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((((vt0.c0 IN ()))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(x'')))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)*(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((((((vt0.c0 IN ()))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(x'')))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)*(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((((((vt0.c0 IN ()))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(x'')))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)*(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(MIN(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(MIN(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(MIN(vt0.c0))) ISNULL);
SELECT ALL TOTAL(LAST_INSERT_ROWID()) FROM rt0, v0;
SELECT ALL * FROM vt0, rt0, v0;
SELECT * FROM vt0, rt0, v0 WHERE ((((rt0.c0 IN ()))LIKE(CASE WHEN vt0.c0 THEN vt0.c0 END))) UNION ALL SELECT ALL * FROM vt0, rt0, v0 WHERE ((NOT ((((rt0.c0 IN ()))LIKE(CASE WHEN vt0.c0 THEN vt0.c0 END))))) UNION ALL SELECT * FROM vt0, rt0, v0 WHERE ((((((rt0.c0 IN ()))LIKE(CASE WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT ALL * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON COALESCE(DISTINCT ((rt0.c1) IS FALSE), ((vt0.c0)||(rt0.c1))) FULL OUTER JOIN vt0 ON ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) IS TRUE);
SELECT rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c0, rt0.c3, vt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM v0, rt0, vt0 WHERE ((+ ((((rt0.c0, rt0.c2, vt0.c0)) BETWEEN ((rt0.c3, rt0.c0, v0.c0)) AND ((0.6388750949133327, rt0.c1, rt0.c1)))))) GROUP BY rt0.c0, rt0.c3, vt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM v0, rt0, vt0 WHERE ((NOT ((+ ((((rt0.c0, rt0.c2, vt0.c0)) BETWEEN ((rt0.c3, rt0.c0, v0.c0)) AND ((0.6388750949133327, rt0.c1, rt0.c1)))))))) GROUP BY rt0.c0, rt0.c3, vt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM v0, rt0, vt0 WHERE ((((+ ((((rt0.c0, rt0.c2, vt0.c0)) BETWEEN ((rt0.c3, rt0.c0, v0.c0)) AND ((0.6388750949133327, rt0.c1, rt0.c1)))))) ISNULL)) GROUP BY rt0.c0, rt0.c3, vt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c0, rt0.c3, vt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c3, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c3, v0.c0;
SELECT ALL rt0.c0, rt0.c3, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c3, v0.c0 HAVING (MIN(rt0.c0) IN ()) UNION ALL SELECT ALL rt0.c0, rt0.c3, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c3, v0.c0 HAVING (NOT ((MIN(rt0.c0) IN ()))) UNION ALL SELECT rt0.c0, rt0.c3, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c3, v0.c0 HAVING (((MIN(rt0.c0) IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c3, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c3, v0.c0;
SELECT ALL rt0.c0, rt0.c3, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c3, v0.c0 HAVING (MIN(rt0.c0) IN ()) UNION ALL SELECT ALL rt0.c0, rt0.c3, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c3, v0.c0 HAVING (NOT ((MIN(rt0.c0) IN ()))) UNION ALL SELECT rt0.c0, rt0.c3, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c3, v0.c0 HAVING (((MIN(rt0.c0) IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c3, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c3, v0.c0;
SELECT rt0.c1, v0.c0, rt0.c3, rt0.c0, vt0.c0, rt0.c2 FROM rt0 INNER JOIN v0 ON LOWER(DISTINCT ((rt0.c2)LIKE(rt0.c0))) FULL OUTER JOIN vt0 ON CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (NOT (rt0.c0)) THEN 0Xfffffffffbbc175f ELSE UPPER(vt0.c0) END;
SELECT rt0.c1, v0.c0, rt0.c3, rt0.c0, vt0.c0, rt0.c2 FROM rt0 INNER JOIN v0 ON LOWER(DISTINCT ((rt0.c2)LIKE(rt0.c0))) FULL OUTER JOIN vt0 ON CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (NOT (rt0.c0)) THEN 0xfffffffffbbc175f ELSE UPPER(vt0.c0) END WHERE (((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)))GLOB((- (v0.c0))))) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c0, vt0.c0, rt0.c2 FROM rt0 INNER JOIN v0 ON LOWER(DISTINCT ((rt0.c2)LIKE(rt0.c0))) FULL OUTER JOIN vt0 ON CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (NOT (rt0.c0)) THEN 0xfffffffffbbc175f ELSE UPPER(vt0.c0) END WHERE ((NOT (((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)))GLOB((- (v0.c0))))))) UNION ALL SELECT rt0.c1, v0.c0, rt0.c3, rt0.c0, vt0.c0, rt0.c2 FROM rt0 INNER JOIN v0 ON LOWER(DISTINCT ((rt0.c2)LIKE(rt0.c0))) FULL OUTER JOIN vt0 ON CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (NOT (rt0.c0)) THEN 0Xfffffffffbbc175f ELSE UPPER(vt0.c0) END WHERE (((((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)))GLOB((- (v0.c0))))) ISNULL));
SELECT rt0.c1, v0.c0, rt0.c3, rt0.c0, vt0.c0, rt0.c2 FROM rt0 INNER JOIN v0 ON LOWER(DISTINCT ((rt0.c2)LIKE(rt0.c0))) FULL OUTER JOIN vt0 ON CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (NOT (rt0.c0)) THEN 0Xfffffffffbbc175f ELSE UPPER(vt0.c0) END;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-640742504' WHEN vt0.c0 THEN -859697809 ELSE vt0.c0 END)<<((vt0.c0 IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-640742504' WHEN vt0.c0 THEN -859697809 ELSE vt0.c0 END)<<((vt0.c0 IN ())))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-640742504' WHEN vt0.c0 THEN -859697809 ELSE vt0.c0 END)<<((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0, rt0.c3, rt0.c0 FROM vt0, v0 INNER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 END) IS FALSE) GROUP BY vt0.c0, rt0.c3, rt0.c0;
SELECT ALL vt0.c0, rt0.c3, rt0.c0 FROM vt0, v0 INNER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 END) IS FALSE) WHERE (((((rt0.c3 COLLATE RTRIM)OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((rt0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) GROUP BY vt0.c0, rt0.c3, rt0.c0 UNION SELECT vt0.c0, rt0.c3, rt0.c0 FROM vt0, v0 INNER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 END) IS FALSE) WHERE ((NOT (((((rt0.c3 COLLATE RTRIM)OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((rt0.c0) BETWEEN (v0.c0) AND (vt0.c0))))))) GROUP BY vt0.c0, rt0.c3, rt0.c0 UNION SELECT vt0.c0, rt0.c3, rt0.c0 FROM vt0, v0 INNER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 END) IS FALSE) WHERE (((((((rt0.c3 COLLATE RTRIM)OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((rt0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0, rt0.c3, rt0.c0;
SELECT vt0.c0, rt0.c3, rt0.c0 FROM vt0, v0 INNER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 END) IS FALSE) GROUP BY vt0.c0, rt0.c3, rt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING MIN((((COUNT(vt0.c0)))>((vt0.c0)))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (MIN((((COUNT(vt0.c0)))>((vt0.c0)))))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((MIN((((COUNT(vt0.c0)))>((vt0.c0))))) ISNULL);
SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (CAST(rt0.c0 AS INTEGER)) UNION ALL SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((NOT (CAST(rt0.c0 AS INTEGER)))) UNION ALL SELECT rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (((CAST(rt0.c0 AS INTEGER)) ISNULL));
SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((- (((vt0.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((- (((vt0.c0) NOT NULL)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((- (((vt0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((COALESCE(DISTINCT vt0.c0, rt0.c3))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1)))) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((COALESCE(DISTINCT vt0.c0, rt0.c3))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1)))) WHERE (CASE ((((((((0.5092085763660743)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0))  WHEN CAST(vt0.c0 AS TEXT) THEN rt0.c1 ELSE ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) END) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((COALESCE(DISTINCT vt0.c0, rt0.c3))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1)))) WHERE ((NOT (CASE ((((((((0.5092085763660743)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0))  WHEN CAST(vt0.c0 AS TEXT) THEN rt0.c1 ELSE ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) END))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((COALESCE(DISTINCT vt0.c0, rt0.c3))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1)))) WHERE (((CASE ((((((((0.5092085763660743)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0))  WHEN CAST(vt0.c0 AS TEXT) THEN rt0.c1 ELSE ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) END) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((COALESCE(DISTINCT vt0.c0, rt0.c3))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1)))) GROUP BY rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0;
SELECT * FROM vt0 NATURAL JOIN rt0;
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (((CAST(rt0.c1 AS NUMERIC)) NOT NULL)) UNION ALL SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (((CAST(rt0.c1 AS NUMERIC)) NOT NULL)))) UNION ALL SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (((((CAST(rt0.c1 AS NUMERIC)) NOT NULL)) ISNULL));
SELECT * FROM vt0 NATURAL JOIN rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c0, rt0.c3 FROM rt0, v0 INNER JOIN vt0 ON CAST(((rt0.c1) NOTNULL) AS REAL) GROUP BY rt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c3 FROM rt0, v0 INNER JOIN vt0 ON CAST(((rt0.c1) NOTNULL) AS REAL) WHERE (((CASE WHEN v0.c0 THEN vt0.c0 END) NOT BETWEEN (rt0.c2) AND (vt0.c0 COLLATE BINARY))) GROUP BY rt0.c0, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c3 FROM rt0, v0 INNER JOIN vt0 ON CAST(((rt0.c1) NOTNULL) AS REAL) WHERE ((NOT (((CASE WHEN v0.c0 THEN vt0.c0 END) NOT BETWEEN (rt0.c2) AND (vt0.c0 COLLATE BINARY))))) GROUP BY rt0.c0, rt0.c3 UNION SELECT rt0.c0, rt0.c3 FROM rt0, v0 INNER JOIN vt0 ON CAST(((rt0.c1) NOTNULL) AS REAL) WHERE (((((CASE WHEN v0.c0 THEN vt0.c0 END) NOT BETWEEN (rt0.c2) AND (vt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c3 FROM rt0, v0 INNER JOIN vt0 ON CAST(((rt0.c1) NOTNULL) AS REAL) GROUP BY rt0.c0, rt0.c3;
SELECT vt0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c3) BETWEEN (CAST('-1414634428' AS NUMERIC)) AND (((vt0.c0)==('c蝞gAy')))) GROUP BY vt0.c0, rt0.c3;
SELECT vt0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c3) BETWEEN (CAST('-1414634428' AS NUMERIC)) AND (((vt0.c0)==('c蝞gAy')))) GROUP BY vt0.c0, rt0.c3 HAVING COUNT(UPPER(DISTINCT vt0.c0)) UNION ALL SELECT vt0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c3) BETWEEN (CAST('-1414634428' AS NUMERIC)) AND (((vt0.c0)=('c蝞gAy')))) GROUP BY vt0.c0, rt0.c3 HAVING (NOT (COUNT(UPPER(DISTINCT vt0.c0)))) UNION ALL SELECT ALL vt0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c3) BETWEEN (CAST('-1414634428' AS NUMERIC)) AND (((vt0.c0)=('c蝞gAy')))) GROUP BY vt0.c0, rt0.c3 HAVING ((COUNT(UPPER(DISTINCT vt0.c0))) ISNULL);
SELECT vt0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c3) BETWEEN (CAST('-1414634428' AS NUMERIC)) AND (((vt0.c0)==('c蝞gAy')))) GROUP BY vt0.c0, rt0.c3;
SELECT vt0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c3) BETWEEN (CAST('-1414634428' AS NUMERIC)) AND (((vt0.c0)==('c蝞gAy')))) GROUP BY vt0.c0, rt0.c3 HAVING COUNT(UPPER(DISTINCT vt0.c0)) UNION ALL SELECT vt0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c3) BETWEEN (CAST('-1414634428' AS NUMERIC)) AND (((vt0.c0)=('c蝞gAy')))) GROUP BY vt0.c0, rt0.c3 HAVING (NOT (COUNT(UPPER(DISTINCT vt0.c0)))) UNION ALL SELECT ALL vt0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c3) BETWEEN (CAST('-1414634428' AS NUMERIC)) AND (((vt0.c0)=('c蝞gAy')))) GROUP BY vt0.c0, rt0.c3 HAVING ((COUNT(UPPER(DISTINCT vt0.c0))) ISNULL);
SELECT vt0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c3) BETWEEN (CAST('-1414634428' AS NUMERIC)) AND (((vt0.c0)==('c蝞gAy')))) GROUP BY vt0.c0, rt0.c3;
SELECT * FROM vt0, rt0, v0;
SELECT ALL * FROM vt0, rt0, v0 WHERE ((((rt0.c3, rt0.c0, NULL)) NOT BETWEEN (((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))), (((0.5639363949504462)) BETWEEN ((NULL)) AND ((v0.c0))), ((rt0.c3)&(rt0.c3)))) AND ((((rt0.c0) ISNULL), (~ (rt0.c1)), CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 END)))) UNION ALL SELECT ALL * FROM vt0, rt0, v0 WHERE ((NOT ((((rt0.c3, rt0.c0, NULL)) NOT BETWEEN (((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))), (((0.5639363949504462)) BETWEEN ((NULL)) AND ((v0.c0))), ((rt0.c3)&(rt0.c3)))) AND ((((rt0.c0) ISNULL), (~ (rt0.c1)), CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 END)))))) UNION ALL SELECT ALL * FROM vt0, rt0, v0 WHERE ((((((rt0.c3, rt0.c0, NULL)) NOT BETWEEN (((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))), (((0.5639363949504462)) BETWEEN ((NULL)) AND ((v0.c0))), ((rt0.c3)&(rt0.c3)))) AND ((((rt0.c0) ISNULL), (~ (rt0.c1)), CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 END)))) ISNULL));
SELECT * FROM vt0, rt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((v0.c0 COLLATE RTRIM IN (((v0.c0) NOTNULL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((v0.c0 COLLATE RTRIM IN (((v0.c0) NOTNULL)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0 COLLATE RTRIM IN (((v0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c1, v0.c0, rt0.c2, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c1, v0.c0, rt0.c2, rt0.c3, rt0.c0 FROM v0, rt0 WHERE (((((rt0.c3) IS FALSE)) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c2, rt0.c3, rt0.c0 UNION SELECT rt0.c1, v0.c0, rt0.c2, rt0.c3, rt0.c0 FROM v0, rt0 WHERE ((NOT (((((rt0.c3) IS FALSE)) ISNULL)))) GROUP BY rt0.c1, v0.c0, rt0.c2, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c1, v0.c0, rt0.c2, rt0.c3, rt0.c0 FROM v0, rt0 WHERE (((((((rt0.c3) IS FALSE)) ISNULL)) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, v0.c0, rt0.c2, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c2, rt0.c3, rt0.c0;
SELECT vt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0 HAVING (((SUM(COUNT(v0.c0))))==((COUNT(*)))) UNION ALL SELECT vt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0 HAVING (NOT ((((SUM(COUNT(v0.c0))))=((COUNT(*)))))) UNION ALL SELECT vt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0 HAVING (((((SUM(COUNT(v0.c0))))=((COUNT(*))))) ISNULL);
SELECT ALL * FROM v0, vt0, rt0;
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((0Xffffffffc2d37cbd)<>(rt0.c1)))+((((rt0.c3, rt0.c0, rt0.c0))!=((rt0.c2, vt0.c0, rt0.c0)))))) UNION ALL SELECT ALL * FROM v0, vt0, rt0 WHERE ((NOT (((((0Xffffffffc2d37cbd)!=(rt0.c1)))+((((rt0.c3, rt0.c0, rt0.c0))!=((rt0.c2, vt0.c0, rt0.c0)))))))) UNION ALL SELECT ALL * FROM v0, vt0, rt0 WHERE (((((((0Xffffffffc2d37cbd)!=(rt0.c1)))+((((rt0.c3, rt0.c0, rt0.c0))<>((rt0.c2, vt0.c0, rt0.c0)))))) ISNULL));
SELECT ALL * FROM v0, vt0, rt0;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON ((CAST(rt0.c0 AS BLOB)) NOTNULL) LEFT OUTER JOIN rt0 ON vt0.c0 COLLATE NOCASE;
SELECT v0.c0, rt0.c0, vt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, vt0, v0 GROUP BY v0.c0, rt0.c0, vt0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL v0.c0, rt0.c0, vt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, vt0, v0 WHERE (rt0.c1) GROUP BY v0.c0, rt0.c0, vt0.c0, rt0.c3, rt0.c2, rt0.c1 UNION SELECT v0.c0, rt0.c0, vt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, vt0, v0 WHERE ((NOT (rt0.c1))) GROUP BY v0.c0, rt0.c0, vt0.c0, rt0.c3, rt0.c2, rt0.c1 UNION SELECT v0.c0, rt0.c0, vt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, vt0, v0 WHERE (((rt0.c1) ISNULL)) GROUP BY v0.c0, rt0.c0, vt0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT v0.c0, rt0.c0, vt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, vt0, v0 GROUP BY v0.c0, rt0.c0, vt0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1 HAVING rt0.c0 UNION ALL SELECT rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1 HAVING rt0.c0 UNION ALL SELECT rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, v0, vt0;
SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, v0, vt0 WHERE (vt0.c0) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, v0, vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, v0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, v0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((+ (v0.c0))))<((v0.c0 COLLATE BINARY)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((+ (v0.c0))))<((v0.c0 COLLATE BINARY)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((+ (v0.c0))))<((v0.c0 COLLATE BINARY)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0 NOT INDEXED, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*))>(COUNT(SUM(vt0.c0)))) COLLATE RTRIM UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*))>(COUNT(SUM(vt0.c0)))) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*))>(COUNT(SUM(vt0.c0)))) COLLATE RTRIM) ISNULL);
SELECT ALL * FROM vt0, v0, rt0;
SELECT * FROM vt0, v0, rt0 WHERE (CASE WHEN CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN v0.c0 WHEN rt0.c3 THEN rt0.c1 END THEN (('')GLOB(rt0.c3)) WHEN (- (rt0.c2)) THEN (((x''))>((vt0.c0))) WHEN ABS(v0.c0) THEN ((v0.c0) IS FALSE) ELSE CAST(0.9883785895729497 AS TEXT) END) UNION ALL SELECT * FROM vt0, v0, rt0 WHERE ((NOT (CASE WHEN CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN v0.c0 WHEN rt0.c3 THEN rt0.c1 END THEN (('')GLOB(rt0.c3)) WHEN (- (rt0.c2)) THEN (((x''))>((vt0.c0))) WHEN ABS(v0.c0) THEN ((v0.c0) IS FALSE) ELSE CAST(0.9883785895729497 AS TEXT) END))) UNION ALL SELECT * FROM vt0, v0, rt0 WHERE (((CASE WHEN CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN v0.c0 WHEN rt0.c3 THEN rt0.c1 END THEN (('')GLOB(rt0.c3)) WHEN (- (rt0.c2)) THEN (((x''))>((vt0.c0))) WHEN ABS(v0.c0) THEN ((v0.c0) IS FALSE) ELSE CAST(0.9883785895729497 AS TEXT) END) ISNULL));
SELECT ALL * FROM vt0, v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3 FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3 FROM v0, rt0 WHERE ((((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c2)) IN ())) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3 FROM v0, rt0 WHERE ((NOT ((((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c2)) IN ())))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3 FROM v0, rt0 WHERE ((((((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c2)) IN ())) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3 FROM v0, rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c3) AND (1510438507)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c3) AND (1510438507)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c3) AND (1510438507)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT vt0.c0, rt0.c3, rt0.c2, rt0.c0 FROM vt0, rt0, v0 GROUP BY vt0.c0, rt0.c3, rt0.c2, rt0.c0;
SELECT vt0.c0, rt0.c3, rt0.c2, rt0.c0 FROM vt0, rt0, v0 GROUP BY vt0.c0, rt0.c3, rt0.c2, rt0.c0 HAVING ((((((((((rt0.c3)AND(rt0.c3)))AND(COUNT(SUM(rt0.c3)))))AND(AVG(vt0.c0))))OR(rt0.c1)))<=(TOTAL(rt0.c3))) UNION ALL SELECT ALL vt0.c0, rt0.c3, rt0.c2, rt0.c0 FROM vt0, rt0, v0 GROUP BY vt0.c0, rt0.c3, rt0.c2, rt0.c0 HAVING (NOT (((((((((((rt0.c3)AND(rt0.c3)))AND(COUNT(SUM(rt0.c3)))))AND(AVG(vt0.c0))))OR(rt0.c1)))<=(TOTAL(rt0.c3))))) UNION ALL SELECT ALL vt0.c0, rt0.c3, rt0.c2, rt0.c0 FROM vt0, rt0, v0 GROUP BY vt0.c0, rt0.c3, rt0.c2, rt0.c0 HAVING ((((((((((((rt0.c3)AND(rt0.c3)))AND(COUNT(SUM(rt0.c3)))))AND(AVG(vt0.c0))))OR(rt0.c1)))<=(TOTAL(rt0.c3)))) ISNULL);
SELECT ALL v0.c0, vt0.c0, rt0.c0, rt0.c2, rt0.c3 FROM v0, vt0, rt0;
SELECT v0.c0, vt0.c0, rt0.c0, rt0.c2, rt0.c3 FROM v0, vt0, rt0 WHERE (((rt0.c0) ISNULL) COLLATE NOCASE) UNION ALL SELECT ALL v0.c0, vt0.c0, rt0.c0, rt0.c2, rt0.c3 FROM v0, vt0, rt0 WHERE ((NOT (((rt0.c0) ISNULL) COLLATE NOCASE))) UNION ALL SELECT v0.c0, vt0.c0, rt0.c0, rt0.c2, rt0.c3 FROM v0, vt0, rt0 WHERE (((((rt0.c0) ISNULL) COLLATE NOCASE) ISNULL));
SELECT ALL v0.c0, vt0.c0, rt0.c0, rt0.c2, rt0.c3 FROM v0, vt0, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON (- ((((rt0.c3))==(('-307342431')))));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON (- ((((rt0.c3))==(('-307342431'))))) WHERE (CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c0)/(rt0.c1)) THEN ((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)) WHEN rt0.c2 COLLATE RTRIM THEN (+ (rt0.c2)) WHEN ((rt0.c3) IS FALSE) THEN (rt0.c1 IN ()) END) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON (- ((((rt0.c3))==(('-307342431'))))) WHERE ((NOT (CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c0)/(rt0.c1)) THEN ((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)) WHEN rt0.c2 COLLATE RTRIM THEN (+ (rt0.c2)) WHEN ((rt0.c3) IS FALSE) THEN (rt0.c1 IN ()) END))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON (- ((((rt0.c3))=(('-307342431'))))) WHERE (((CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c0)/(rt0.c1)) THEN ((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)) WHEN rt0.c2 COLLATE RTRIM THEN (+ (rt0.c2)) WHEN ((rt0.c3) IS FALSE) THEN (rt0.c1 IN ()) END) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON (- ((((rt0.c3))==(('-307342431')))));
SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, vt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, vt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, vt0.c0 FROM rt0, v0, vt0 WHERE (CAST(0.5126085323443909 AS REAL)) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, vt0.c0 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, vt0.c0 FROM rt0, v0, vt0 WHERE ((NOT (CAST(0.5126085323443909 AS REAL)))) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, vt0.c0 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, vt0.c0 FROM rt0, v0, vt0 WHERE (((CAST(0.5126085323443909 AS REAL)) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, vt0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, vt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, vt0.c0;
SELECT v0.c0 FROM v0, rt0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, rt0, vt0 GROUP BY v0.c0 HAVING TYPEOF(SQLITE_COMPILEOPTION_USED(GROUP_CONCAT(MIN(rt0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0, rt0, vt0 NOT INDEXED GROUP BY v0.c0 HAVING (NOT (TYPEOF(SQLITE_COMPILEOPTION_USED(GROUP_CONCAT(MIN(rt0.c0)))))) UNION ALL SELECT v0.c0 FROM v0, rt0, vt0 GROUP BY v0.c0 HAVING ((TYPEOF(SQLITE_COMPILEOPTION_USED(GROUP_CONCAT(MIN(rt0.c0))))) ISNULL);
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON ((v0.c0 COLLATE NOCASE) IS TRUE);
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON ((v0.c0 COLLATE NOCASE) IS TRUE) WHERE (CASE CASE WHEN rt0.c3 THEN rt0.c3 END  WHEN ((rt0.c3) IS TRUE) THEN (rt0.c2 IN (rt0.c1)) ELSE (+ (-1918313087)) END) UNION ALL SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((v0.c0 COLLATE NOCASE) IS TRUE) WHERE ((NOT (CASE CASE WHEN rt0.c3 THEN rt0.c3 END  WHEN ((rt0.c3) IS TRUE) THEN (rt0.c2 IN (rt0.c1)) ELSE (+ (-1918313087)) END))) UNION ALL SELECT * FROM v0 LEFT OUTER JOIN rt0 ON ((v0.c0 COLLATE NOCASE) IS TRUE) WHERE (((CASE CASE WHEN rt0.c3 THEN rt0.c3 END  WHEN ((rt0.c3) IS TRUE) THEN (rt0.c2 IN (rt0.c1)) ELSE (+ (-1918313087)) END) ISNULL));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON ((v0.c0 COLLATE NOCASE) IS TRUE);
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE (CAST(LAST_INSERT_ROWID() AS BLOB)) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (CAST(LAST_INSERT_ROWID() AS BLOB)))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE (((CAST(LAST_INSERT_ROWID() AS BLOB)) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT ALL v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c2 FROM rt0, v0 WHERE (((v0.c0) BETWEEN (NULLIF(v0.c0, v0.c0)) AND (CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) GROUP BY v0.c0, rt0.c2 UNION SELECT ALL v0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT (((v0.c0) BETWEEN (NULLIF(v0.c0, v0.c0)) AND (CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))))) GROUP BY v0.c0, rt0.c2 UNION SELECT v0.c0, rt0.c2 FROM rt0, v0 WHERE (((((v0.c0) BETWEEN (NULLIF(v0.c0, v0.c0)) AND (CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ISNULL)) GROUP BY v0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2;
SELECT ALL rt0.c3 FROM rt0 LEFT OUTER JOIN v0 ON (v0.c0 IN ()) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 LEFT OUTER JOIN v0 ON (v0.c0 IN ()) GROUP BY rt0.c3 HAVING TOTAL(GROUP_CONCAT(v0.c0)) UNION ALL SELECT rt0.c3 FROM rt0 LEFT OUTER JOIN v0 ON (v0.c0 IN ()) GROUP BY rt0.c3 HAVING (NOT (TOTAL(GROUP_CONCAT(v0.c0)))) UNION ALL SELECT rt0.c3 FROM rt0 LEFT OUTER JOIN v0 ON (v0.c0 IN ()) GROUP BY rt0.c3 HAVING ((TOTAL(GROUP_CONCAT(v0.c0))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((NOT (LIKELY(vt0.c0)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((NOT (LIKELY(vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE ((((NOT (LIKELY(vt0.c0)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((NULL)/((((rt0.c1)) BETWEEN ((-776144162)) AND ((rt0.c0)))));
SELECT DISTINCT rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((NULL)/((((rt0.c1)) BETWEEN ((-776144162)) AND ((rt0.c0))))) WHERE (rt0.c3) UNION SELECT DISTINCT rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((NULL)/((((rt0.c1)) BETWEEN ((-776144162)) AND ((rt0.c0))))) WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((NULL)/((((rt0.c1)) BETWEEN ((-776144162)) AND ((rt0.c0))))) WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((NULL)/((((rt0.c1)) BETWEEN ((-776144162)) AND ((rt0.c0)))));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((~ (-1220389790))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((~ (-1220389790))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((~ (-1220389790))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0, rt0.c3, vt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 FULL OUTER JOIN vt0 ON ((x'') BETWEEN (((0.10090815595304481) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) GROUP BY rt0.c0, rt0.c3, vt0.c0, rt0.c2, rt0.c1, v0.c0;
SELECT ALL rt0.c0, rt0.c3, vt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 FULL OUTER JOIN vt0 ON ((x'') BETWEEN (((0.10090815595304481) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) GROUP BY rt0.c0, rt0.c3, vt0.c0, rt0.c2, rt0.c1, v0.c0 HAVING ((((AVG(x''))OR(TOTAL(GROUP_CONCAT(COUNT(AVG(MIN(MAX(v0.c0)))))))))AND(COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c3, vt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 FULL OUTER JOIN vt0 ON ((x'') BETWEEN (((0.10090815595304481) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) GROUP BY rt0.c0, rt0.c3, vt0.c0, rt0.c2, rt0.c1, v0.c0 HAVING (NOT (((((AVG(x''))OR(TOTAL(GROUP_CONCAT(COUNT(AVG(MIN(MAX(v0.c0)))))))))AND(COUNT(*))))) UNION ALL SELECT ALL rt0.c0, rt0.c3, vt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 FULL OUTER JOIN vt0 ON ((x'') BETWEEN (((0.10090815595304481) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) GROUP BY rt0.c0, rt0.c3, vt0.c0, rt0.c2, rt0.c1, v0.c0 HAVING ((((((AVG(x''))OR(TOTAL(GROUP_CONCAT(COUNT(AVG(MIN(MAX(v0.c0)))))))))AND(COUNT(*)))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS REAL)) UNION ALL SELECT * FROM v0 WHERE ((NOT (CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS REAL)))) UNION ALL SELECT * FROM v0 WHERE (((CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS REAL)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT DISTINCT * FROM vt0, v0, rt0 WHERE (rt0.c3) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN json_object('2005717771', vt0.c0) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN (vt0.c0 IN ()) THEN (((vt0.c0))>((vt0.c0))) WHEN ((vt0.c0)=(vt0.c0)) THEN vt0.c0 END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE (vt0.c0 IN ())  WHEN json_object('2005717771', vt0.c0) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN (vt0.c0 IN ()) THEN (((vt0.c0))>((vt0.c0))) WHEN ((vt0.c0)=(vt0.c0)) THEN vt0.c0 END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE (vt0.c0 IN ())  WHEN json_object('2005717771', vt0.c0) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN (vt0.c0 IN ()) THEN (((vt0.c0))>((vt0.c0))) WHEN ((vt0.c0)==(vt0.c0)) THEN vt0.c0 END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((SUM(TOTAL(vt0.c0))) BETWEEN (((SUM(SUM(vt0.c0)))+(v0.c0))) AND (CASE WHEN v0.c0 THEN vt0.c0 END)) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (((SUM(TOTAL(vt0.c0))) BETWEEN (((SUM(SUM(vt0.c0)))+(v0.c0))) AND (CASE WHEN v0.c0 THEN vt0.c0 END)))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((((SUM(TOTAL(vt0.c0))) BETWEEN (((SUM(SUM(vt0.c0)))+(v0.c0))) AND (CASE WHEN v0.c0 THEN vt0.c0 END))) ISNULL);
SELECT TOTAL(((((v0.c0)<<(v0.c0)))-((('PF5A(')IS NOT(vt0.c0))))) FROM vt0, v0 ORDER BY ((CAST(vt0.c0 AS NUMERIC))OR(vt0.c0 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0, v0;
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0, v0 WHERE (CASE CAST(rt0.c1 AS BLOB)  WHEN ((rt0.c3) IS TRUE) THEN 0.9450547522476873 ELSE HEX(NULL) END) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0, v0 WHERE ((NOT (CASE CAST(rt0.c1 AS BLOB)  WHEN ((rt0.c3) IS TRUE) THEN 0.9450547522476873 ELSE HEX(NULL) END))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0, v0 WHERE (((CASE CAST(rt0.c1 AS BLOB)  WHEN ((rt0.c3) IS TRUE) THEN 0.9450547522476873 ELSE HEX(NULL) END) ISNULL));
SELECT rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0, v0;
SELECT DISTINCT rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(v0.c0)))OR((('-384956925') IS FALSE))))AND(((rt0.c0)GLOB(rt0.c1)))))OR(((rt0.c1)||(v0.c0)))))AND(rt0.c1 COLLATE BINARY));
SELECT DISTINCT rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(v0.c0)))OR((('-384956925') IS FALSE))))AND(((rt0.c0)GLOB(rt0.c1)))))OR(((rt0.c1)||(v0.c0)))))AND(rt0.c1 COLLATE BINARY)) WHERE (v0.c0) UNION SELECT DISTINCT rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(v0.c0)))OR((('-384956925') IS FALSE))))AND(((rt0.c0)GLOB(rt0.c1)))))OR(((rt0.c1)||(v0.c0)))))AND(rt0.c1 COLLATE BINARY)) WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT rt0.c3 FROM rt0 NOT INDEXED RIGHT OUTER JOIN v0 ON ((((((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(v0.c0)))OR((('-384956925') IS FALSE))))AND(((rt0.c0)GLOB(rt0.c1)))))OR(((rt0.c1)||(v0.c0)))))AND(rt0.c1 COLLATE BINARY)) WHERE (((v0.c0) ISNULL));
SELECT DISTINCT rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(v0.c0)))OR((('-384956925') IS FALSE))))AND(((rt0.c0)GLOB(rt0.c1)))))OR(((rt0.c1)||(v0.c0)))))AND(rt0.c1 COLLATE BINARY));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0 IN (v0.c0))) IS FALSE)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 IN (v0.c0))) IS FALSE)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((v0.c0 IN (v0.c0))) IS FALSE)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(GROUP_CONCAT(vt0.c0))) NOT NULL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((SUM(GROUP_CONCAT(vt0.c0))) NOT NULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((SUM(GROUP_CONCAT(vt0.c0))) NOT NULL)) ISNULL);
SELECT ALL vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (((((((v0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, v0.c0))))AND((NOT (vt0.c0)))))AND(vt0.c0));
SELECT vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (((((((v0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, v0.c0))))AND((NOT (vt0.c0)))))AND(vt0.c0)) WHERE (((((((v0.c0)OR('-1809504339')))AND(v0.c0)))&((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (((((((v0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, v0.c0))))AND((NOT (vt0.c0)))))AND(vt0.c0)) WHERE ((NOT (((((((v0.c0)OR('-1809504339')))AND(v0.c0)))&((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (((((((v0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, v0.c0))))AND((NOT (vt0.c0)))))AND(vt0.c0)) WHERE (((((((((v0.c0)OR('-1809504339')))AND(v0.c0)))&((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT ALL vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (((((((v0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, v0.c0))))AND((NOT (vt0.c0)))))AND(vt0.c0));
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((0.13088299649969037)IS NOT(((rt0.c2)>(rt0.c3))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((0.13088299649969037)IS NOT(((rt0.c2)>(rt0.c3))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((0.13088299649969037)IS NOT(((rt0.c2)>(rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1, v0.c0, vt0.c0 FROM v0 INNER JOIN rt0 ON CASE CASE WHEN x'9b3c' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN 0X21e3c4c0 THEN rt0.c2 END  WHEN rt0.c0 COLLATE RTRIM THEN NULL END LEFT OUTER JOIN vt0 ON ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 END)IS NOT(((v0.c0) NOT BETWEEN (0.4417162310341294) AND (rt0.c1)))) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, v0.c0, vt0.c0;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1, v0.c0, vt0.c0 FROM v0 INNER JOIN rt0 ON CASE CASE WHEN x'9b3c' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN 0X21e3c4c0 THEN rt0.c2 END  WHEN rt0.c0 COLLATE RTRIM THEN NULL END LEFT OUTER JOIN vt0 ON ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 END)IS NOT(((v0.c0) NOT BETWEEN (0.4417162310341294) AND (rt0.c1)))) WHERE (vt0.c0) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, v0.c0, vt0.c0 UNION SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1, v0.c0, vt0.c0 FROM v0 INNER JOIN rt0 ON CASE CASE WHEN x'9b3c' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN 0X21e3c4c0 THEN rt0.c2 END  WHEN rt0.c0 COLLATE RTRIM THEN NULL END LEFT OUTER JOIN vt0 ON ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 END)IS NOT(((v0.c0) NOT BETWEEN (0.4417162310341294) AND (rt0.c1)))) WHERE ((NOT (vt0.c0))) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, v0.c0, vt0.c0 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1, v0.c0, vt0.c0 FROM v0 INNER JOIN rt0 ON CASE CASE WHEN x'9b3c' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN 0x21e3c4c0 THEN rt0.c2 END  WHEN rt0.c0 COLLATE RTRIM THEN NULL END LEFT OUTER JOIN vt0 ON ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 END)IS NOT(((v0.c0) NOT BETWEEN (0.4417162310341294) AND (rt0.c1)))) WHERE (((vt0.c0) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, v0.c0, vt0.c0;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1, v0.c0, vt0.c0 FROM v0 INNER JOIN rt0 ON CASE CASE WHEN x'9b3c' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN 0X21e3c4c0 THEN rt0.c2 END  WHEN rt0.c0 COLLATE RTRIM THEN NULL END LEFT OUTER JOIN vt0 ON ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 END)IS NOT(((v0.c0) NOT BETWEEN (0.4417162310341294) AND (rt0.c1)))) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, v0.c0, vt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(TOTAL(COUNT(rt0.c2))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(TOTAL(COUNT(rt0.c2))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(TOTAL(COUNT(rt0.c2)))) ISNULL);
SELECT ALL * FROM v0, vt0 LEFT OUTER JOIN rt0 ON ((((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)))AND(NULL COLLATE NOCASE)))OR(CAST(rt0.c2 AS NUMERIC)));
SELECT ALL * FROM v0, vt0 LEFT OUTER JOIN rt0 ON ((((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)))AND(NULL COLLATE NOCASE)))OR(CAST(rt0.c2 AS NUMERIC))) WHERE ((((((-107367001)) NOT BETWEEN (('m')) AND ((rt0.c2)))) IS FALSE)) UNION ALL SELECT ALL * FROM v0, vt0 LEFT OUTER JOIN rt0 ON ((((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)))AND(NULL COLLATE NOCASE)))OR(CAST(rt0.c2 AS NUMERIC))) WHERE ((NOT ((((((-107367001)) NOT BETWEEN (('m')) AND ((rt0.c2)))) IS FALSE)))) UNION ALL SELECT ALL * FROM v0, vt0 LEFT OUTER JOIN rt0 ON ((((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)))AND(NULL COLLATE NOCASE)))OR(CAST(rt0.c2 AS NUMERIC))) WHERE ((((((((-107367001)) NOT BETWEEN (('m')) AND ((rt0.c2)))) IS FALSE)) ISNULL));
SELECT ALL * FROM v0, vt0 LEFT OUTER JOIN rt0 ON ((((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)))AND(NULL COLLATE NOCASE)))OR(CAST(rt0.c2 AS NUMERIC)));
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (x'') UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (CASE WHEN (((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((rt0.c2)||(rt0.c1)) END) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT (CASE WHEN (((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((rt0.c2)||(rt0.c1)) END))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((CASE WHEN (((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((rt0.c2)||(rt0.c1)) END) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c3 HAVING GROUP_CONCAT(rt0.c1) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c3 HAVING (NOT (GROUP_CONCAT(rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c3 HAVING ((GROUP_CONCAT(rt0.c1)) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c3 HAVING GROUP_CONCAT(rt0.c1) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c3 HAVING (NOT (GROUP_CONCAT(rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c3 HAVING ((GROUP_CONCAT(rt0.c1)) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c3;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0) IS TRUE))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 NOT INDEXED WHERE ((NOT ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0) IS TRUE))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0) IS TRUE))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON ((((CAST(v0.c0 AS NUMERIC))AND(v0.c0)))OR(((v0.c0)*(rt0.c0))));
SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON ((((CAST(v0.c0 AS NUMERIC))AND(v0.c0)))OR(((v0.c0)*(rt0.c0)))) WHERE (UPPER(DISTINCT x'' COLLATE NOCASE)) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON ((((CAST(v0.c0 AS NUMERIC))AND(v0.c0)))OR(((v0.c0)*(rt0.c0)))) WHERE ((NOT (UPPER(DISTINCT x'' COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON ((((CAST(v0.c0 AS NUMERIC))AND(v0.c0)))OR(((v0.c0)*(rt0.c0)))) WHERE (((UPPER(DISTINCT x'' COLLATE NOCASE)) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON ((((CAST(v0.c0 AS NUMERIC))AND(v0.c0)))OR(((v0.c0)*(rt0.c0))));
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (0X3fad3b31) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (0x3fad3b31))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((0x3fad3b31) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT(COUNT(SUM(x''))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(COUNT(SUM(x''))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(COUNT(SUM(x'')))) ISNULL);
SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1, rt0.c3, v0.c0 FROM vt0, v0 CROSS JOIN rt0 ON ((CAST(vt0.c0 AS BLOB)) ISNULL);
SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1, rt0.c3, v0.c0 FROM vt0, v0 CROSS JOIN rt0 ON ((CAST(vt0.c0 AS BLOB)) ISNULL) WHERE (((v0.c0) NOTNULL)) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1, rt0.c3, v0.c0 FROM vt0, v0 CROSS JOIN rt0 ON ((CAST(vt0.c0 AS BLOB)) ISNULL) WHERE ((NOT (((v0.c0) NOTNULL)))) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1, rt0.c3, v0.c0 FROM vt0, v0 CROSS JOIN rt0 ON ((CAST(vt0.c0 AS BLOB)) ISNULL) WHERE (((((v0.c0) NOTNULL)) ISNULL));
SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1, rt0.c3, v0.c0 FROM vt0, v0 CROSS JOIN rt0 ON ((CAST(vt0.c0 AS BLOB)) ISNULL);
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((NULL)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN (CAST(rt0.c1 AS TEXT), ((rt0.c1) NOTNULL)))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((NULL)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN (CAST(rt0.c1 AS TEXT), ((rt0.c1) NOTNULL)))))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((NULL)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN (CAST(rt0.c1 AS TEXT), ((rt0.c1) NOTNULL)))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c3, vt0.c0, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c3, vt0.c0, v0.c0;
SELECT rt0.c3, vt0.c0, v0.c0 FROM v0, rt0, vt0 WHERE (((((rt0.c2) ISNULL))>>(CAST(rt0.c3 AS BLOB)))) GROUP BY rt0.c3, vt0.c0, v0.c0 UNION SELECT rt0.c3, vt0.c0, v0.c0 FROM v0, rt0, vt0 WHERE ((NOT (((((rt0.c2) ISNULL))>>(CAST(rt0.c3 AS BLOB)))))) GROUP BY rt0.c3, vt0.c0, v0.c0 UNION SELECT rt0.c3, vt0.c0, v0.c0 FROM v0, rt0, vt0 WHERE (((((((rt0.c2) ISNULL))>>(CAST(rt0.c3 AS BLOB)))) ISNULL)) GROUP BY rt0.c3, vt0.c0, v0.c0;
SELECT ALL rt0.c3, vt0.c0, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c3, vt0.c0, v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c3 FROM v0, rt0, vt0;
SELECT rt0.c3 FROM v0, rt0, vt0 WHERE (((((TRIM(DISTINCT vt0.c0, vt0.c0))OR(((rt0.c1) BETWEEN (v0.c0) AND (v0.c0)))))OR(v0.c0 COLLATE RTRIM))) UNION ALL SELECT rt0.c3 FROM v0, rt0, vt0 WHERE ((NOT (((((TRIM(DISTINCT vt0.c0, vt0.c0))OR(((rt0.c1) BETWEEN (v0.c0) AND (v0.c0)))))OR(v0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL rt0.c3 FROM v0, rt0, vt0 WHERE (((((((TRIM(DISTINCT vt0.c0, vt0.c0))OR(((rt0.c1) BETWEEN (v0.c0) AND (v0.c0)))))OR(v0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL rt0.c3 FROM v0, rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3, rt0.c0, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON CASE x'5521'  WHEN CAST(rt0.c1 AS TEXT) THEN rt0.c3 END INNER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM)GLOB(CASE WHEN v0.c0 THEN vt0.c0 WHEN '' THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN v0.c0 THEN rt0.c3 WHEN NULL THEN rt0.c3 ELSE vt0.c0 END));
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 WHERE (x'b105') GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE ((NOT (x'b105'))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE (((x'b105') ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT rt0.c0, vt0.c0, rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c3;
SELECT rt0.c0, vt0.c0, rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c3 HAVING TRIM(DISTINCT (('wM')=(AVG(v0.c0))), MIN(rt0.c0)) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c3 FROM v0 NOT INDEXED, rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c3 HAVING (NOT (TRIM(DISTINCT (('wM')==(AVG(v0.c0))), MIN(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c3 HAVING ((TRIM(DISTINCT (('wM')==(AVG(v0.c0))), MIN(rt0.c0))) ISNULL);
SELECT rt0.c0, vt0.c0, rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c3;
SELECT rt0.c0, vt0.c0, rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c3 HAVING TRIM(DISTINCT (('wM')=(AVG(v0.c0))), MIN(rt0.c0)) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c3 FROM v0 NOT INDEXED, rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c3 HAVING (NOT (TRIM(DISTINCT (('wM')==(AVG(v0.c0))), MIN(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c3 HAVING ((TRIM(DISTINCT (('wM')==(AVG(v0.c0))), MIN(rt0.c0))) ISNULL);
SELECT rt0.c0, vt0.c0, rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c3;
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (~ (CAST(v0.c0 AS REAL)));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON (~ (CAST(v0.c0 AS REAL))) WHERE (((((vt0.c0) NOTNULL))!=(v0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (~ (CAST(v0.c0 AS REAL))) WHERE ((NOT (((((vt0.c0) NOTNULL))!=(v0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (~ (CAST(v0.c0 AS REAL))) WHERE (((((((vt0.c0) NOTNULL))<>(v0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (~ (CAST(v0.c0 AS REAL)));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN CASE NULL  WHEN rt0.c0 THEN 0.5390156761368621 END THEN ((rt0.c0)GLOB(rt0.c1)) WHEN ((rt0.c2) NOT BETWEEN ('U (\ni') AND (rt0.c1)) THEN ((((NULL)OR(NULL)))AND(rt0.c2)) WHEN '2124265176' THEN x'' ELSE (rt0.c1 IN ()) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN CASE NULL  WHEN rt0.c0 THEN 0.5390156761368621 END THEN ((rt0.c0)GLOB(rt0.c1)) WHEN ((rt0.c2) NOT BETWEEN ('U (\ni') AND (rt0.c1)) THEN ((((NULL)OR(NULL)))AND(rt0.c2)) WHEN '2124265176' THEN x'' ELSE (rt0.c1 IN ()) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN CASE NULL  WHEN rt0.c0 THEN 0.5390156761368621 END THEN ((rt0.c0)GLOB(rt0.c1)) WHEN ((rt0.c2) NOT BETWEEN ('U (\ni') AND (rt0.c1)) THEN ((((NULL)OR(NULL)))AND(rt0.c2)) WHEN '2124265176' THEN x'' ELSE (rt0.c1 IN ()) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM v0 RIGHT OUTER JOIN vt0 ON rt0.c0 RIGHT OUTER JOIN rt0 ON (((rt0.c3)) NOT BETWEEN ((((((rt0.c1)OR(rt0.c0)))OR(vt0.c0)))) AND ((v0.c0 COLLATE RTRIM))) GROUP BY vt0.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c3 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c3 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c2, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c3 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c3 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c2, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c3;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN (v0.c0 IN ()) ELSE ((((((((((((v0.c0)OR(0x63c9ee31)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) END) UNION ALL SELECT * FROM v0 WHERE ((NOT (CASE WHEN (v0.c0 IN ()) THEN (v0.c0 IN ()) ELSE ((((((((((((v0.c0)OR(0x63c9ee31)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) END))) UNION ALL SELECT ALL * FROM v0 WHERE (((CASE WHEN (v0.c0 IN ()) THEN (v0.c0 IN ()) ELSE ((((((((((((v0.c0)OR(0x63c9ee31)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) END) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM v0, rt0 WHERE (((- (rt0.c0)) IN (rt0.c3))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM v0, rt0 WHERE ((NOT (((- (rt0.c0)) IN (rt0.c3))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM v0, rt0 WHERE (((((- (rt0.c0)) IN (rt0.c3))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM v0, rt0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((('-776144162')IS(((((v0.c0)AND(vt0.c0)))AND(v0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((NOT ((('-776144162')IS(((((v0.c0)AND(vt0.c0)))AND(v0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 WHERE ((((('-776144162')IS(((((v0.c0)AND(vt0.c0)))AND(v0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(MAX(SUM(COUNT(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(MAX(SUM(COUNT(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(MAX(SUM(COUNT(v0.c0))))) ISNULL);
SELECT v0.c0, vt0.c0 FROM rt0, vt0, v0;
SELECT ALL v0.c0, vt0.c0 FROM rt0, vt0, v0 WHERE (((((v0.c0) NOTNULL)) ISNULL)) UNION ALL SELECT v0.c0, vt0.c0 FROM rt0, vt0, v0 WHERE ((NOT (((((v0.c0) NOTNULL)) ISNULL)))) UNION ALL SELECT v0.c0, vt0.c0 FROM rt0, vt0, v0 WHERE (((((((v0.c0) NOTNULL)) ISNULL)) ISNULL));
SELECT v0.c0, vt0.c0 FROM rt0, vt0, v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT ((vt0.c0 IN ())))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT ((NOT ((vt0.c0 IN ())))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((NOT ((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CAST(CAST(v0.c0 AS TEXT) AS INTEGER)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(CAST(v0.c0 AS TEXT) AS INTEGER)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CAST(CAST(v0.c0 AS TEXT) AS INTEGER)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c3, v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c3, v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING MAX(rt0.c3) UNION ALL SELECT rt0.c3, v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING (NOT (MAX(rt0.c3))) UNION ALL SELECT ALL rt0.c3, v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING ((MAX(rt0.c3)) ISNULL);
SELECT rt0.c3, v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c3, v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING MAX(rt0.c3) UNION ALL SELECT rt0.c3, v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING (NOT (MAX(rt0.c3))) UNION ALL SELECT ALL rt0.c3, v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING ((MAX(rt0.c3)) ISNULL);
SELECT rt0.c3, v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT ALL * FROM v0 NOT INDEXED;
SELECT * FROM v0 WHERE (((((((((((x'')AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))|(JULIANDAY(v0.c0, v0.c0, v0.c0)))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((((((((x'')AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))|(JULIANDAY(v0.c0, v0.c0, v0.c0)))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((((((((x'')AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))|(JULIANDAY(v0.c0, v0.c0, v0.c0)))) ISNULL));
SELECT ALL * FROM v0 NOT INDEXED;
SELECT DISTINCT * FROM vt0, rt0 RIGHT OUTER JOIN v0 ON rt0.c2;
SELECT DISTINCT * FROM vt0, rt0 RIGHT OUTER JOIN v0 ON rt0.c2 WHERE (((((((((rt0.c0)OR(((rt0.c3) IS TRUE))))OR(CAST(vt0.c0 AS TEXT))))OR((((rt0.c0))>=((v0.c0))))))AND((- (rt0.c1))))) UNION SELECT DISTINCT * FROM vt0, rt0 RIGHT OUTER JOIN v0 ON rt0.c2 WHERE ((NOT (((((((((rt0.c0)OR(((rt0.c3) IS TRUE))))OR(CAST(vt0.c0 AS TEXT))))OR((((rt0.c0))>=((v0.c0))))))AND((- (rt0.c1))))))) UNION SELECT DISTINCT * FROM vt0, rt0 RIGHT OUTER JOIN v0 ON rt0.c2 WHERE (((((((((((rt0.c0)OR(((rt0.c3) IS TRUE))))OR(CAST(vt0.c0 AS TEXT))))OR((((rt0.c0))>=((v0.c0))))))AND((- (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0 RIGHT OUTER JOIN v0 ON rt0.c2;
SELECT rt0.c3, rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, vt0.c0, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE (((((((((((rt0.c1)-(rt0.c3)))AND((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((1068317489))))))OR(CAST(rt0.c2 AS REAL))))OR(((rt0.c2)&(rt0.c0)))))OR(CAST(rt0.c0 AS NUMERIC)))) GROUP BY rt0.c3, rt0.c2, rt0.c1, vt0.c0, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (((((((((((rt0.c1)-(rt0.c3)))AND((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((1068317489))))))OR(CAST(rt0.c2 AS REAL))))OR(((rt0.c2)&(rt0.c0)))))OR(CAST(rt0.c0 AS NUMERIC)))))) GROUP BY rt0.c3, rt0.c2, rt0.c1, vt0.c0, rt0.c0 UNION SELECT rt0.c3, rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE (((((((((((((rt0.c1)-(rt0.c3)))AND((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((1068317489))))))OR(CAST(rt0.c2 AS REAL))))OR(((rt0.c2)&(rt0.c0)))))OR(CAST(rt0.c0 AS NUMERIC)))) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, vt0.c0, rt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((NOT (v0.c0)) IN ()) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((NOT (v0.c0)) IN ()))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((NOT (v0.c0)) IN ())) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((NOT (v0.c0)) IN ()) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((NOT (v0.c0)) IN ()))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((NOT (v0.c0)) IN ())) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM vt0, rt0, v0;
SELECT ALL * FROM vt0, rt0, v0 WHERE (((rt0.c0 IN ()) IN ())) UNION ALL SELECT * FROM vt0, rt0, v0 WHERE ((NOT (((rt0.c0 IN ()) IN ())))) UNION ALL SELECT ALL * FROM vt0, rt0, v0 WHERE (((((rt0.c0 IN ()) IN ())) ISNULL));
SELECT ALL * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((0X63d033a7) NOTNULL))|(rt0.c3))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((0x63d033a7) NOTNULL))|(rt0.c3))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((0X63d033a7) NOTNULL))|(rt0.c3))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM rt0 WHERE ((((1.870454259E9, rt0.c0, rt0.c1)) NOT BETWEEN ((((rt0.c0)IS(rt0.c3)), ((rt0.c0)*(rt0.c2)), ABS(rt0.c2))) AND ((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)), CAST(rt0.c1 AS NUMERIC), ((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))))) GROUP BY rt0.c2, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT ((((1.870454259E9, rt0.c0, rt0.c1)) NOT BETWEEN ((((rt0.c0)IS(rt0.c3)), ((rt0.c0)*(rt0.c2)), ABS(rt0.c2))) AND ((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)), CAST(rt0.c1 AS NUMERIC), ((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))))))) GROUP BY rt0.c2, rt0.c3 UNION SELECT rt0.c2, rt0.c3 FROM rt0 WHERE ((((((1.870454259E9, rt0.c0, rt0.c1)) NOT BETWEEN ((((rt0.c0)IS(rt0.c3)), ((rt0.c0)*(rt0.c2)), ABS(rt0.c2))) AND ((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)), CAST(rt0.c1 AS NUMERIC), ((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))))) ISNULL)) GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c3, v0.c0, rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c0, rt0.c3, v0.c0, rt0.c2;
SELECT rt0.c0, rt0.c3, v0.c0, rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c0, rt0.c3, v0.c0, rt0.c2 HAVING (NOT (MIN(rt0.c2))) UNION ALL SELECT rt0.c0, rt0.c3, v0.c0, rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c0, rt0.c3, v0.c0, rt0.c2 HAVING (NOT ((NOT (MIN(rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c3, v0.c0, rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c0, rt0.c3, v0.c0, rt0.c2 HAVING (((NOT (MIN(rt0.c2)))) ISNULL);
SELECT rt0.c0, rt0.c3, v0.c0, rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c0, rt0.c3, v0.c0, rt0.c2;
SELECT rt0.c0, rt0.c3, v0.c0, rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c0, rt0.c3, v0.c0, rt0.c2 HAVING (NOT (MIN(rt0.c2))) UNION ALL SELECT rt0.c0, rt0.c3, v0.c0, rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c0, rt0.c3, v0.c0, rt0.c2 HAVING (NOT ((NOT (MIN(rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c3, v0.c0, rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c0, rt0.c3, v0.c0, rt0.c2 HAVING (((NOT (MIN(rt0.c2)))) ISNULL);
SELECT rt0.c0, rt0.c3, v0.c0, rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c0, rt0.c3, v0.c0, rt0.c2;
SELECT rt0.c1, v0.c0 FROM v0, vt0, rt0;
SELECT rt0.c1, v0.c0 FROM v0, vt0, rt0 WHERE (UNLIKELY(DISTINCT CAST(v0.c0 AS BLOB))) UNION ALL SELECT ALL rt0.c1, v0.c0 FROM v0, vt0, rt0 WHERE ((NOT (UNLIKELY(DISTINCT CAST(v0.c0 AS BLOB))))) UNION ALL SELECT rt0.c1, v0.c0 FROM v0, vt0, rt0 WHERE (((UNLIKELY(DISTINCT CAST(v0.c0 AS BLOB))) ISNULL));
SELECT rt0.c1, v0.c0 FROM v0, vt0, rt0;
SELECT DISTINCT rt0.c1, v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c1, v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0, v0 WHERE (((rt0.c3 COLLATE RTRIM) IS FALSE)) UNION SELECT DISTINCT rt0.c1, v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0, v0 WHERE ((NOT (((rt0.c3 COLLATE RTRIM) IS FALSE)))) UNION SELECT DISTINCT rt0.c1, v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0, v0 WHERE (((((rt0.c3 COLLATE RTRIM) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c1, v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0, v0;
SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, vt0 WHERE ((rt0.c0 COLLATE BINARY IN (NULL COLLATE BINARY, CAST(rt0.c2 AS BLOB)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM rt0, vt0 WHERE ((NOT ((rt0.c0 COLLATE BINARY IN (NULL COLLATE BINARY, CAST(rt0.c2 AS BLOB)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM rt0, vt0 WHERE ((((rt0.c0 COLLATE BINARY IN (NULL COLLATE BINARY, CAST(rt0.c2 AS BLOB)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(MAX(SUM(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(MAX(SUM(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(MAX(SUM(vt0.c0)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN '-1001372674' END)OR(((rt0.c0)|(rt0.c2)))))OR(((rt0.c1)LIKE(rt0.c3))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((CASE WHEN rt0.c0 THEN '-1001372674' END)OR(((rt0.c0)|(rt0.c2)))))OR(((rt0.c1)LIKE(rt0.c3))))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((CASE WHEN rt0.c0 THEN '-1001372674' END)OR(((rt0.c0)|(rt0.c2)))))OR(((rt0.c1)LIKE(rt0.c3))))) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)AND('oWR2[' COLLATE BINARY)))OR(((vt0.c0)<=(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0 COLLATE BINARY)AND('oWR2[' COLLATE BINARY)))OR(((vt0.c0)<=(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0 COLLATE BINARY)AND('oWR2[' COLLATE BINARY)))OR(((vt0.c0)<=(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)<=(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, -717928322))!=((vt0.c0, (+ (vt0.c0)), (NOT (vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0)<=(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, -717928322))!=((vt0.c0, (+ (vt0.c0)), (NOT (vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((vt0.c0)<=(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, -717928322))!=((vt0.c0, (+ (vt0.c0)), (NOT (vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING SUM((COUNT(*) IN ())) UNION ALL SELECT ALL vt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING (NOT (SUM((COUNT(*) IN ())))) UNION ALL SELECT ALL vt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING ((SUM((COUNT(*) IN ()))) ISNULL);
SELECT vt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING SUM((COUNT(*) IN ())) UNION ALL SELECT ALL vt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING (NOT (SUM((COUNT(*) IN ())))) UNION ALL SELECT ALL vt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING ((SUM((COUNT(*) IN ()))) ISNULL);
SELECT vt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c3)>(rt0.c0)))OR(((('', rt0.c1, rt0.c3)) BETWEEN ((NULL, rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c0, rt0.c2))))))OR(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN 0.9811271624293864 WHEN rt0.c0 THEN rt0.c0 END)))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))OR((- (rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((((((rt0.c3)>(rt0.c0)))OR(((('', rt0.c1, rt0.c3)) BETWEEN ((NULL, rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c0, rt0.c2))))))OR(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN 0.9811271624293864 WHEN rt0.c0 THEN rt0.c0 END)))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))OR((- (rt0.c0))))))) UNION ALL SELECT * FROM rt0 WHERE (((((((((((((rt0.c3)>(rt0.c0)))OR(((('', rt0.c1, rt0.c3)) BETWEEN ((NULL, rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c0, rt0.c2))))))OR(CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN 0.9811271624293864 WHEN rt0.c0 THEN rt0.c0 END)))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))OR((- (rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (CAST(x'a7f9' AS TEXT)) UNION SELECT DISTINCT * FROM v0 NOT INDEXED, rt0 WHERE ((NOT (CAST(x'a7f9' AS TEXT)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((CAST(x'a7f9' AS TEXT)) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON LIKELY(DISTINCT ((((rt0.c2)OR(rt0.c2)))OR(rt0.c0))) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON LIKELY(DISTINCT ((((rt0.c2)OR(rt0.c2)))OR(rt0.c0))) WHERE (((((((((rt0.c0 COLLATE NOCASE)AND(((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))))OR(((((rt0.c1)OR(rt0.c1)))OR(rt0.c3)))))OR(rt0.c3)))OR(rt0.c3 COLLATE BINARY))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON LIKELY(DISTINCT ((((rt0.c2)OR(rt0.c2)))OR(rt0.c0))) WHERE ((NOT (((((((((rt0.c0 COLLATE NOCASE)AND(((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))))OR(((((rt0.c1)OR(rt0.c1)))OR(rt0.c3)))))OR(rt0.c3)))OR(rt0.c3 COLLATE BINARY))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON LIKELY(DISTINCT ((((rt0.c2)OR(rt0.c2)))OR(rt0.c0))) WHERE (((((((((((rt0.c0 COLLATE NOCASE)AND(((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))))OR(((((rt0.c1)OR(rt0.c1)))OR(rt0.c3)))))OR(rt0.c3)))OR(rt0.c3 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON LIKELY(DISTINCT ((((rt0.c2)OR(rt0.c2)))OR(rt0.c0))) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING json_quote(json_valid(SUM(rt0.c0))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (json_quote(json_valid(SUM(rt0.c0))))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((json_quote(json_valid(SUM(rt0.c0)))) ISNULL);
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING json_quote(json_valid(SUM(rt0.c0))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (json_quote(json_valid(SUM(rt0.c0))))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((json_quote(json_valid(SUM(rt0.c0)))) ISNULL);
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL TOTAL(((((v0.c0)OR(v0.c0))) NOT NULL)) FROM vt0, v0;
SELECT ALL rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM vt0 NOT INDEXED, rt0 NOT INDEXED, v0;
SELECT ALL rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM vt0, rt0, v0 WHERE (((TRIM(DISTINCT v0.c0))<>(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) UNION ALL SELECT ALL rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM vt0, rt0, v0 WHERE ((NOT (((TRIM(DISTINCT v0.c0))!=(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))))) UNION ALL SELECT ALL rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM vt0, rt0, v0 WHERE (((((TRIM(DISTINCT v0.c0))<>(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL));
SELECT ALL rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM vt0 NOT INDEXED, rt0 NOT INDEXED, v0;
SELECT DISTINCT v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (- (vt0.c0)) COLLATE RTRIM;
SELECT DISTINCT v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (- (vt0.c0)) COLLATE RTRIM WHERE ((((NULL)) NOT BETWEEN (((v0.c0 IN ()))) AND ((vt0.c0)))) UNION SELECT DISTINCT v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (- (vt0.c0)) COLLATE RTRIM WHERE ((NOT ((((NULL)) NOT BETWEEN (((v0.c0 IN ()))) AND ((vt0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (- (vt0.c0)) COLLATE RTRIM WHERE ((((((NULL)) NOT BETWEEN (((v0.c0 IN ()))) AND ((vt0.c0)))) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (- (vt0.c0)) COLLATE RTRIM;
SELECT ALL v0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON CASE WHEN (+ (rt0.c0)) THEN ((rt0.c3)==(v0.c0)) WHEN ((rt0.c3)<>(rt0.c3)) THEN (((rt0.c3))<=((0.753785658623417))) WHEN (NOT (rt0.c1)) THEN ((NULL) IS FALSE) END GROUP BY v0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3;
SELECT v0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON CASE WHEN (+ (rt0.c0)) THEN ((rt0.c3)=(v0.c0)) WHEN ((rt0.c3)!=(rt0.c3)) THEN (((rt0.c3))<=((0.753785658623417))) WHEN (NOT (rt0.c1)) THEN ((NULL) IS FALSE) END WHERE (NULL) GROUP BY v0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3 UNION SELECT ALL v0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON CASE WHEN (+ (rt0.c0)) THEN ((rt0.c3)=(v0.c0)) WHEN ((rt0.c3)!=(rt0.c3)) THEN (((rt0.c3))<=((0.753785658623417))) WHEN (NOT (rt0.c1)) THEN ((NULL) IS FALSE) END WHERE ((NOT (NULL))) GROUP BY v0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3 UNION SELECT ALL v0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON CASE WHEN (+ (rt0.c0)) THEN ((rt0.c3)==(v0.c0)) WHEN ((rt0.c3)<>(rt0.c3)) THEN (((rt0.c3))<=((0.753785658623417))) WHEN (NOT (rt0.c1)) THEN ((NULL) IS FALSE) END WHERE (((NULL) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3;
SELECT ALL v0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON CASE WHEN (+ (rt0.c0)) THEN ((rt0.c3)==(v0.c0)) WHEN ((rt0.c3)<>(rt0.c3)) THEN (((rt0.c3))<=((0.753785658623417))) WHEN (NOT (rt0.c1)) THEN ((NULL) IS FALSE) END GROUP BY v0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (+ (GROUP_CONCAT(MIN(AVG(COUNT(SUM(MIN(rt0.c2)))))))) UNION ALL SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (NOT ((+ (GROUP_CONCAT(MIN(AVG(COUNT(SUM(MIN(rt0.c2)))))))))) UNION ALL SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (((+ (GROUP_CONCAT(MIN(AVG(COUNT(SUM(MIN(rt0.c2))))))))) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c0) NOTNULL) AS REAL)) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (CAST(((rt0.c0) NOTNULL) AS REAL)))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((CAST(((rt0.c0) NOTNULL) AS REAL)) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) NOT NULL) WHEN vt0.c0 COLLATE RTRIM THEN CAST(vt0.c0 AS BLOB) WHEN ((x'')>=(vt0.c0)) THEN json_patch(vt0.c0, NULL) END) UNION SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED WHERE ((NOT (CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) NOT NULL) WHEN vt0.c0 COLLATE RTRIM THEN CAST(vt0.c0 AS BLOB) WHEN ((x'')>=(vt0.c0)) THEN json_patch(vt0.c0, NULL) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) NOT NULL) WHEN vt0.c0 COLLATE RTRIM THEN CAST(vt0.c0 AS BLOB) WHEN ((x'')>=(vt0.c0)) THEN json_patch(vt0.c0, NULL) END) ISNULL));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS REAL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 COLLATE BINARY AS REAL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 COLLATE BINARY AS REAL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT v0.c0, vt0.c0 FROM v0, vt0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((v0.c0, vt0.c0, v0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), ((((v0.c0)AND(v0.c0)))OR(v0.c0)), HEX(0.23960151026369692))) AND ((v0.c0, CAST(v0.c0 AS REAL), x'' COLLATE NOCASE)))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT ((((v0.c0, vt0.c0, v0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), ((((v0.c0)AND(v0.c0)))OR(v0.c0)), HEX(0.23960151026369692))) AND ((v0.c0, CAST(v0.c0 AS REAL), x'' COLLATE NOCASE)))))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((((v0.c0, vt0.c0, v0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), ((((v0.c0)AND(v0.c0)))OR(v0.c0)), HEX(0.23960151026369692))) AND ((v0.c0, CAST(v0.c0 AS REAL), x'' COLLATE NOCASE)))) ISNULL));
SELECT v0.c0, vt0.c0 FROM v0, vt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON rt0.c2 LEFT OUTER JOIN vt0 ON CASE WHEN (((v0.c0))!=((vt0.c0))) THEN ((rt0.c2)>(rt0.c1)) ELSE (~ (rt0.c0)) END;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON rt0.c2 LEFT OUTER JOIN vt0 ON CASE WHEN (((v0.c0))<>((vt0.c0))) THEN ((rt0.c2)>(rt0.c1)) ELSE (~ (rt0.c0)) END WHERE (((NOT (rt0.c1)) IN ())) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON rt0.c2 LEFT OUTER JOIN vt0 ON CASE WHEN (((v0.c0))<>((vt0.c0))) THEN ((rt0.c2)>(rt0.c1)) ELSE (~ (rt0.c0)) END WHERE ((NOT (((NOT (rt0.c1)) IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON rt0.c2 LEFT OUTER JOIN vt0 ON CASE WHEN (((v0.c0))<>((vt0.c0))) THEN ((rt0.c2)>(rt0.c1)) ELSE (~ (rt0.c0)) END WHERE (((((NOT (rt0.c1)) IN ())) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON rt0.c2 LEFT OUTER JOIN vt0 ON CASE WHEN (((v0.c0))!=((vt0.c0))) THEN ((rt0.c2)>(rt0.c1)) ELSE (~ (rt0.c0)) END;
SELECT rt0.c2 FROM v0 INNER JOIN rt0 ON CASE CASE WHEN v0.c0 THEN rt0.c2 END  WHEN '1403138503' THEN ((0.38539573936096316)||(rt0.c1)) END GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM v0 INNER JOIN rt0 ON CASE CASE WHEN v0.c0 THEN rt0.c2 END  WHEN '1403138503' THEN ((0.38539573936096316)||(rt0.c1)) END WHERE ((((((rt0.c0, rt0.c3, rt0.c2))<((rt0.c0, rt0.c0, rt0.c0)))) NOTNULL)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM v0 INNER JOIN rt0 ON CASE CASE WHEN v0.c0 THEN rt0.c2 END  WHEN '1403138503' THEN ((0.38539573936096316)||(rt0.c1)) END WHERE ((NOT ((((((rt0.c0, rt0.c3, rt0.c2))<((rt0.c0, rt0.c0, rt0.c0)))) NOTNULL)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM v0 INNER JOIN rt0 ON CASE CASE WHEN v0.c0 THEN rt0.c2 END  WHEN '1403138503' THEN ((0.38539573936096316)||(rt0.c1)) END WHERE ((((((((rt0.c0, rt0.c3, rt0.c2))<((rt0.c0, rt0.c0, rt0.c0)))) NOTNULL)) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0 INNER JOIN rt0 ON CASE CASE WHEN v0.c0 THEN rt0.c2 END  WHEN '1403138503' THEN ((0.38539573936096316)||(rt0.c1)) END GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, v0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, v0, rt0 GROUP BY rt0.c2 HAVING CASE WHEN COUNT(*) THEN (COUNT(*) IN ()) ELSE x'' END UNION ALL SELECT rt0.c2 FROM vt0, v0, rt0 GROUP BY rt0.c2 HAVING (NOT (CASE WHEN COUNT(*) THEN (COUNT(*) IN ()) ELSE x'' END)) UNION ALL SELECT rt0.c2 FROM vt0, v0, rt0 GROUP BY rt0.c2 HAVING ((CASE WHEN COUNT(*) THEN (COUNT(*) IN ()) ELSE x'' END) ISNULL);
SELECT ALL rt0.c2 FROM vt0, v0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, v0, rt0 GROUP BY rt0.c2 HAVING CASE WHEN COUNT(*) THEN (COUNT(*) IN ()) ELSE x'' END UNION ALL SELECT rt0.c2 FROM vt0, v0, rt0 GROUP BY rt0.c2 HAVING (NOT (CASE WHEN COUNT(*) THEN (COUNT(*) IN ()) ELSE x'' END)) UNION ALL SELECT rt0.c2 FROM vt0, v0, rt0 GROUP BY rt0.c2 HAVING ((CASE WHEN COUNT(*) THEN (COUNT(*) IN ()) ELSE x'' END) ISNULL);
SELECT ALL rt0.c2 FROM vt0, v0, rt0 GROUP BY rt0.c2;
SELECT * FROM rt0 CROSS JOIN v0 ON (~ (x'')) LEFT OUTER JOIN vt0 ON (- (((((rt0.c0)AND(rt0.c3)))OR(rt0.c2))));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON (~ (x'')) LEFT OUTER JOIN vt0 ON (- (((((rt0.c0)AND(rt0.c3)))OR(rt0.c2)))) WHERE (v0.c0) UNION ALL SELECT * FROM rt0 CROSS JOIN v0 ON (~ (x'')) LEFT OUTER JOIN vt0 ON (- (((((rt0.c0)AND(rt0.c3)))OR(rt0.c2)))) WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM rt0 CROSS JOIN v0 ON (~ (x'')) LEFT OUTER JOIN vt0 ON (- (((((rt0.c0)AND(rt0.c3)))OR(rt0.c2)))) WHERE (((v0.c0) ISNULL));
SELECT * FROM rt0 CROSS JOIN v0 ON (~ (x'')) LEFT OUTER JOIN vt0 ON (- (((((rt0.c0)AND(rt0.c3)))OR(rt0.c2))));
SELECT DISTINCT * FROM rt0, v0, vt0;
SELECT DISTINCT * FROM rt0, v0, vt0 WHERE (((0.0724345803579739 COLLATE NOCASE) NOTNULL)) UNION SELECT DISTINCT * FROM rt0, v0, vt0 WHERE ((NOT (((0.0724345803579739 COLLATE NOCASE) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0, v0, vt0 WHERE (((((0.0724345803579739 COLLATE NOCASE) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, v0, vt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0, vt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0, vt0 WHERE (((rt0.c3 IN ()) IN (((((rt0.c1)AND(rt0.c3)))AND(rt0.c0)), ((rt0.c1) IS TRUE)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0, v0, vt0 WHERE ((NOT (((rt0.c3 IN ()) IN (((((rt0.c1)AND(rt0.c3)))AND(rt0.c0)), ((rt0.c1) IS TRUE)))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0, v0, vt0 WHERE (((((rt0.c3 IN ()) IN (((((rt0.c1)AND(rt0.c3)))AND(rt0.c0)), ((rt0.c1) IS TRUE)))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0, vt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c3, vt0.c0 FROM v0, vt0 INNER JOIN rt0 ON (- (((x'9f6c') NOT BETWEEN (rt0.c2) AND (vt0.c0)))) GROUP BY rt0.c3, vt0.c0;
SELECT ALL rt0.c3, vt0.c0 FROM v0, vt0 INNER JOIN rt0 ON (- (((x'9f6c') NOT BETWEEN (rt0.c2) AND (vt0.c0)))) GROUP BY rt0.c3, vt0.c0 HAVING SUM(COALESCE(DISTINCT MAX(rt0.c0), rt0.c1)) UNION ALL SELECT ALL rt0.c3, vt0.c0 FROM v0, vt0 INNER JOIN rt0 ON (- (((x'9f6c') NOT BETWEEN (rt0.c2) AND (vt0.c0)))) GROUP BY rt0.c3, vt0.c0 HAVING (NOT (SUM(COALESCE(DISTINCT MAX(rt0.c0), rt0.c1)))) UNION ALL SELECT rt0.c3, vt0.c0 FROM v0, vt0 INNER JOIN rt0 ON (- (((x'9f6c') NOT BETWEEN (rt0.c2) AND (vt0.c0)))) GROUP BY rt0.c3, vt0.c0 HAVING ((SUM(COALESCE(DISTINCT MAX(rt0.c0), rt0.c1))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM rt0, v0;
SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 WHERE (((((((rt0.c2)==(v0.c0)))OR(0Xffffffffb788b7b5)))OR(rt0.c2 COLLATE NOCASE))) UNION ALL SELECT rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (((((((rt0.c2)=(v0.c0)))OR(0xffffffffb788b7b5)))OR(rt0.c2 COLLATE NOCASE))))) UNION ALL SELECT rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 WHERE (((((((((rt0.c2)==(v0.c0)))OR(0xffffffffb788b7b5)))OR(rt0.c2 COLLATE NOCASE))) ISNULL));
SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM rt0, v0;
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (((rt0.c1)LIKE((rt0.c2 IN ())))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE ((NOT (((rt0.c1)LIKE((rt0.c2 IN ())))))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (((((rt0.c1)LIKE((rt0.c2 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0;
SELECT rt0.c3, rt0.c0 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c3, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c3, rt0.c0 UNION SELECT rt0.c3, rt0.c0 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c3, rt0.c0;
SELECT rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c3 IN (rt0.c1))) IS FALSE) RIGHT OUTER JOIN vt0 ON x'' GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c3 IN (rt0.c1))) IS FALSE) RIGHT OUTER JOIN vt0 ON x'' GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING AVG(CASE WHEN AVG(COUNT(SUM(rt0.c3))) THEN rt0.c3 END) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c3 IN (rt0.c1))) IS FALSE) RIGHT OUTER JOIN vt0 ON x'' GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING (NOT (AVG(CASE WHEN AVG(COUNT(SUM(rt0.c3))) THEN rt0.c3 END))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c3 IN (rt0.c1))) IS FALSE) RIGHT OUTER JOIN vt0 ON x'' GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING ((AVG(CASE WHEN AVG(COUNT(SUM(rt0.c3))) THEN rt0.c3 END)) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST((vt0.c0 IN (vt0.c0)) AS REAL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST((vt0.c0 IN (vt0.c0)) AS REAL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST((vt0.c0 IN (vt0.c0)) AS REAL)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE ((((((vt0.c0)|(vt0.c0))))<=((LIKELY(DISTINCT vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT ((((((vt0.c0)|(vt0.c0))))<=((LIKELY(DISTINCT vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((((((((vt0.c0)|(vt0.c0))))<=((LIKELY(DISTINCT vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL rt0.c0, vt0.c0, rt0.c1, rt0.c3, rt0.c2, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c3, rt0.c2, v0.c0;
SELECT ALL rt0.c0, vt0.c0, rt0.c1, rt0.c3, rt0.c2, v0.c0 FROM v0, vt0, rt0 WHERE ((- (0.8913152408692961))) GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c3, rt0.c2, v0.c0 UNION SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c3, rt0.c2, v0.c0 FROM v0, vt0, rt0 WHERE ((NOT ((- (0.8913152408692961))))) GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c3, rt0.c2, v0.c0 UNION SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c3, rt0.c2, v0.c0 FROM v0, vt0, rt0 WHERE ((((- (0.8913152408692961))) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c3, rt0.c2, v0.c0;
SELECT ALL rt0.c0, vt0.c0, rt0.c1, rt0.c3, rt0.c2, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c3, rt0.c2, v0.c0;
SELECT vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((((0Xffffffffea7f7e89)OR(((v0.c0)>=(vt0.c0)))))OR(CAST(v0.c0 AS INTEGER))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((((0Xffffffffea7f7e89)OR(((v0.c0)>=(vt0.c0)))))OR(CAST(v0.c0 AS INTEGER))) GROUP BY vt0.c0 HAVING AVG(SUM(TOTAL(AVG(SUM(AVG(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((((0Xffffffffea7f7e89)OR(((v0.c0)>=(vt0.c0)))))OR(CAST(v0.c0 AS INTEGER))) GROUP BY vt0.c0 HAVING (NOT (AVG(SUM(TOTAL(AVG(SUM(AVG(vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((((0xffffffffea7f7e89)OR(((v0.c0)>=(vt0.c0)))))OR(CAST(v0.c0 AS INTEGER))) GROUP BY vt0.c0 HAVING ((AVG(SUM(TOTAL(AVG(SUM(AVG(vt0.c0))))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON NULL;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON NULL WHERE (rtreenode(v0.c0, rt0.c1) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON NULL WHERE ((NOT (rtreenode(v0.c0, rt0.c1) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON NULL WHERE (((rtreenode(v0.c0, rt0.c1) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON NULL;
SELECT ALL rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE (CAST('1674178097' AS INTEGER)) GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (CAST('1674178097' AS INTEGER)))) GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE (((CAST('1674178097' AS INTEGER)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, vt0.c0, v0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c3)*(vt0.c0)))AND(CASE rt0.c2  WHEN '-2136533489' THEN v0.c0 ELSE v0.c0 END)))OR((((vt0.c0))>=((vt0.c0))))) RIGHT OUTER JOIN v0 ON CASE WHEN ((v0.c0)|('S')) THEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (vt0.c0)) WHEN CAST(rt0.c3 AS INTEGER) THEN (((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) WHEN CASE rt0.c2  WHEN v0.c0 THEN vt0.c0 END THEN ((rt0.c0)GLOB(v0.c0)) ELSE (((rt0.c2)) NOT BETWEEN ((x'9e3d')) AND ((v0.c0))) END GROUP BY rt0.c1, rt0.c0, rt0.c3, vt0.c0, v0.c0;
SELECT ALL MIN(((((((v0.c0) IS FALSE))AND(((0.5596503735819819) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))) FROM v0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ('785113117') UNION ALL SELECT * FROM vt0 WHERE ((NOT ('785113117'))) UNION ALL SELECT ALL * FROM vt0 WHERE ((('785113117') ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT DISTINCT * FROM v0, vt0, rt0 WHERE ((NOT ((- (vt0.c0))))) UNION SELECT DISTINCT * FROM v0, vt0, rt0 WHERE ((NOT ((NOT ((- (vt0.c0))))))) UNION SELECT DISTINCT * FROM v0, vt0, rt0 WHERE ((((NOT ((- (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT ALL rt0.c0, rt0.c3 FROM v0 CROSS JOIN rt0 ON ((rt0.c0) NOTNULL) GROUP BY rt0.c0, rt0.c3;
SELECT rt0.c0, rt0.c3 FROM v0 CROSS JOIN rt0 ON ((rt0.c0) NOTNULL) WHERE (0.9822911914266472 COLLATE BINARY) GROUP BY rt0.c0, rt0.c3 UNION SELECT rt0.c0, rt0.c3 FROM v0 CROSS JOIN rt0 ON ((rt0.c0) NOTNULL) WHERE ((NOT (0.9822911914266472 COLLATE BINARY))) GROUP BY rt0.c0, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c3 FROM v0 CROSS JOIN rt0 ON ((rt0.c0) NOTNULL) WHERE (((0.9822911914266472 COLLATE BINARY) ISNULL)) GROUP BY rt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c3 FROM v0 CROSS JOIN rt0 ON ((rt0.c0) NOTNULL) GROUP BY rt0.c0, rt0.c3;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(v0.c0 AS BLOB) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(v0.c0 AS BLOB))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(v0.c0 AS BLOB)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(v0.c0 AS BLOB) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(v0.c0 AS BLOB))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(v0.c0 AS BLOB)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM v0, rt0;
SELECT rt0.c3, rt0.c0 FROM v0, rt0 WHERE ((+ ((((rt0.c3, rt0.c1, rt0.c3)) BETWEEN (('', '-1595747252', rt0.c1)) AND ((rt0.c0, rt0.c0, v0.c0)))))) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM v0, rt0 WHERE ((NOT ((+ ((((rt0.c3, rt0.c1, rt0.c3)) BETWEEN (('', '-1595747252', rt0.c1)) AND ((rt0.c0, rt0.c0, v0.c0)))))))) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM v0, rt0 WHERE ((((+ ((((rt0.c3, rt0.c1, rt0.c3)) BETWEEN (('', '-1595747252', rt0.c1)) AND ((rt0.c0, rt0.c0, v0.c0)))))) ISNULL));
SELECT ALL rt0.c3, rt0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c0, v0.c0, rt0.c1, rt0.c3 FROM rt0, v0;
SELECT DISTINCT rt0.c0, v0.c0, rt0.c1, rt0.c3 FROM rt0, v0 WHERE (HEX('')) UNION SELECT DISTINCT rt0.c0, v0.c0, rt0.c1, rt0.c3 FROM rt0, v0 WHERE ((NOT (HEX('')))) UNION SELECT DISTINCT rt0.c0, v0.c0, rt0.c1, rt0.c3 FROM rt0, v0 WHERE (((HEX('')) ISNULL));
SELECT DISTINCT rt0.c0, v0.c0, rt0.c1, rt0.c3 FROM rt0, v0;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 WHERE (((rt0.c3 IN ()) IN ())) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0 WHERE ((NOT (((rt0.c3 IN ()) IN ())))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE (((((rt0.c3 IN ()) IN ())) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL v0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((((rt0.c2)IS NOT(rt0.c3))))>=((((v0.c0)-(rt0.c1))))) GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT v0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((((rt0.c2)IS NOT(rt0.c3))))>=((((v0.c0)-(rt0.c1))))) GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((((rt0.c2)IS NOT(rt0.c3))))>=((((v0.c0)-(rt0.c1))))) GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((((rt0.c2)IS NOT(rt0.c3))))>=((((v0.c0)-(rt0.c1))))) GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((((rt0.c2)IS NOT(rt0.c3))))>=((((v0.c0)-(rt0.c1))))) GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT v0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((((rt0.c2)IS NOT(rt0.c3))))>=((((v0.c0)-(rt0.c1))))) GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((((rt0.c2)IS NOT(rt0.c3))))>=((((v0.c0)-(rt0.c1))))) GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((((rt0.c2)IS NOT(rt0.c3))))>=((((v0.c0)-(rt0.c1))))) GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((((rt0.c2)IS NOT(rt0.c3))))>=((((v0.c0)-(rt0.c1))))) GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c1 COLLATE RTRIM))>=((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1 COLLATE RTRIM))>=((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))))))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c1 COLLATE RTRIM))>=((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))))) ISNULL));
SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0 WHERE (((((((((x'')AND(((rt0.c1) NOTNULL))))OR(((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)))))OR(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))AND(((rt0.c1)%(vt0.c0))))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0 WHERE ((NOT (((((((((x'')AND(((rt0.c1) NOTNULL))))OR(((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)))))OR(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))AND(((rt0.c1)%(vt0.c0))))))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0 WHERE (((((((((((x'')AND(((rt0.c1) NOTNULL))))OR(((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)))))OR(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))AND(((rt0.c1)%(vt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0;
SELECT rt0.c0, rt0.c3, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, v0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c3, v0.c0, rt0.c1 FROM rt0, v0 WHERE (LAST_INSERT_ROWID() COLLATE RTRIM) GROUP BY rt0.c0, rt0.c3, v0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c3, v0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (LAST_INSERT_ROWID() COLLATE RTRIM))) GROUP BY rt0.c0, rt0.c3, v0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c3, v0.c0, rt0.c1 FROM rt0, v0 WHERE (((LAST_INSERT_ROWID() COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0, rt0.c3, v0.c0, rt0.c1;
SELECT rt0.c0, rt0.c3, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, v0.c0, rt0.c1;
SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING SUM(rt0.c2) UNION ALL SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING (NOT (SUM(rt0.c2))) UNION ALL SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING ((SUM(rt0.c2)) ISNULL);
SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING SUM(rt0.c2) UNION ALL SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING (NOT (SUM(rt0.c2))) UNION ALL SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING ((SUM(rt0.c2)) ISNULL);
SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c3, v0.c0, rt0.c1 FROM rt0, v0, vt0;
SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c3, v0.c0, rt0.c1 FROM rt0, v0, vt0 WHERE (('-974843063' IN ())) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c3, v0.c0, rt0.c1 FROM rt0, v0, vt0 WHERE ((NOT (('-974843063' IN ())))) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c3, v0.c0, rt0.c1 FROM rt0, v0, vt0 NOT INDEXED WHERE (((('-974843063' IN ())) ISNULL));
SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c3, v0.c0, rt0.c1 FROM rt0, v0, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))GLOB((~ (v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))GLOB((~ (v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))GLOB((~ (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c0 FROM rt0 INNER JOIN vt0 ON ((((((((json_array_length(rt0.c3, rt0.c0))AND(((vt0.c0)LIKE(rt0.c1)))))OR(v0.c0 COLLATE NOCASE)))AND((rt0.c1 IN ()))))AND(((((((((rt0.c1)AND(rt0.c2)))AND(v0.c0)))OR(rt0.c2)))AND(vt0.c0)))) LEFT OUTER JOIN v0 ON (((rt0.c2)) BETWEEN ((vt0.c0)) AND (((~ (rt0.c0))))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0 INNER JOIN vt0 ON ((((((((json_array_length(rt0.c3, rt0.c0))AND(((vt0.c0)LIKE(rt0.c1)))))OR(v0.c0 COLLATE NOCASE)))AND((rt0.c1 IN ()))))AND(((((((((rt0.c1)AND(rt0.c2)))AND(v0.c0)))OR(rt0.c2)))AND(vt0.c0)))) LEFT OUTER JOIN v0 ON (((rt0.c2)) BETWEEN ((vt0.c0)) AND (((~ (rt0.c0))))) WHERE ((((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) IN ((v0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM rt0 INNER JOIN vt0 ON ((((((((json_array_length(rt0.c3, rt0.c0))AND(((vt0.c0)LIKE(rt0.c1)))))OR(v0.c0 COLLATE NOCASE)))AND((rt0.c1 IN ()))))AND(((((((((rt0.c1)AND(rt0.c2)))AND(v0.c0)))OR(rt0.c2)))AND(vt0.c0)))) LEFT OUTER JOIN v0 ON (((rt0.c2)) BETWEEN ((vt0.c0)) AND (((~ (rt0.c0))))) WHERE ((NOT ((((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) IN ((v0.c0 IN ())))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM rt0 INNER JOIN vt0 ON ((((((((json_array_length(rt0.c3, rt0.c0))AND(((vt0.c0)LIKE(rt0.c1)))))OR(v0.c0 COLLATE NOCASE)))AND((rt0.c1 IN ()))))AND(((((((((rt0.c1)AND(rt0.c2)))AND(v0.c0)))OR(rt0.c2)))AND(vt0.c0)))) LEFT OUTER JOIN v0 ON (((rt0.c2)) BETWEEN ((vt0.c0)) AND (((~ (rt0.c0))))) WHERE ((((((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) IN ((v0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0 INNER JOIN vt0 ON ((((((((json_array_length(rt0.c3, rt0.c0))AND(((vt0.c0)LIKE(rt0.c1)))))OR(v0.c0 COLLATE NOCASE)))AND((rt0.c1 IN ()))))AND(((((((((rt0.c1)AND(rt0.c2)))AND(v0.c0)))OR(rt0.c2)))AND(vt0.c0)))) LEFT OUTER JOIN v0 ON (((rt0.c2)) BETWEEN ((vt0.c0)) AND (((~ (rt0.c0))))) GROUP BY vt0.c0;
