-- Time: 2024/06/09 07:22:10
-- Database: database63
-- Database version: 3.40.0
-- seed value: 899729863
PRAGMA cache_size = 50000; -- 2ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=12'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA main.cache_spill = 8408053982583657524; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1650703793,10');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -644226735);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-644226735,15');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
REINDEX  vt0; -- 0ms;
PRAGMA main.stats; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=1'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
REINDEX  vt0; -- 0ms;
UPDATE OR ABORT vt0 SET c0=NULL WHERE ((((((vt0.c0)|(vt0.c0)))OR(((vt0.c0) IS TRUE))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))); -- 0ms;
REINDEX  vt0; -- 0ms;
UPDATE OR ABORT vt0 SET c0=x''; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.9684927636163236) WHERE (- (vt0.c0)); -- 4ms;
PRAGMA temp.recursive_triggers; -- 0ms;
UPDATE vt0 SET c0=-6.44226735E8 WHERE ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (vt0.c0) AND ((((vt0.c0))<=((vt0.c0))))); -- 0ms;
END; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1358855845'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS TEXT))<(((0.47141583157338773) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1814317534'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1791418964 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.08227743805956123) NOT BETWEEN (x'6804') AND (NULL))) NOT BETWEEN (NULL) AND (CAST(0.6430179074880218 AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(x'', '' COLLATE NOCASE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=456374282 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN x'' THEN '' END)AND((((('-491172578')OR(0.24586023047873695)))OR(NULL)))))AND(((x'')|('456374282')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(CAST(NULL AS INTEGER)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2020039418 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 456374282 sz=-1339946140'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-869199724 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (NULL)))>>(0X42b25471)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xfffffffff017ccb3) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' COLLATE RTRIM))!=((((('큧O*E)<8Ru'))<(('s?')))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 'r{鼾}' THEN NULL END COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.2821987485989381)IS(0.5160038697229722)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-568836122 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('fFG噰Vstart of yearet쥀')IS(0.6430179074880218)))>>(CAST(0xffffffffb2638684 AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'605e')) NOT BETWEEN ((x'')) AND ((LIKELY(DISTINCT NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL IN ('-1302100348')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'b1ba'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=350853532 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('2122875323'))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-568956461 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1650703793 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '326287651 2122875323'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '459697291 sz=-1650703793 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-644226735 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2091303977 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1682872201 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=923555440 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-772715049 -136610494 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.9684927636163236 THEN CAST(x'' AS REAL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1302100348 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-2017402306 sz=800521692 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-107269404 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((('' COLLATE RTRIM)OR(0.4888456428925855 COLLATE BINARY)))AND(HEX(DISTINCT x''))))OR(ABS(DISTINCT '0.4888456428925855'))))OR(CAST(0Xfffffffff99b32e4 AS TEXT))))OR((NOT (0.3543239017137324)))))OR(NULLIF(DISTINCT x'', x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1987908337 sz=-1343699997 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-175057571 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-134678105 402163746 sz=350853532'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)<(0.6430179074880218)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.7722855090206866; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((x'' IN (-1324113578)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1788788265 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(('fFG噰Vstart of yearet쥀' IN ()), (NOT (NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.2821987485989381)>('0.7722855090206866')))&((('1788788265') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-994793272'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-225207140 sz=1788788265'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 0 sz=314613566 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=823372988 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.3678442484625204 AS INTEGER))<((((0.5734811204399384)) NOT BETWEEN ((0.6506576913007306)) AND ((''))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '2c'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1814317534 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-772715049 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE rtreenode(CASE x''  WHEN NULL THEN x'' END, ((x'')AND(x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)IS('0i&'))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-613898134 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('KI')) BETWEEN ((((0xffffffffdb68a86a) IS FALSE))) AND ((CAST(314613566 AS REAL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (0.45686317604462545)))-(749213584)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1353063807 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.08227743805956123; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2040668427'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 0 sz=-1607491920 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1227422362')/(((((0.5572611644742804)AND(x'')))OR(-5.68956461E8)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL) IS TRUE))AND(ABS(DISTINCT NULL))))AND((('枵2') BETWEEN ('aL᳛L2') AND ('350853532')))))OR((0.875244631766793 IN (NULL)))))OR('1616287164')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LOWER(DISTINCT '-1853796203')) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5160038697229722; -- 1ms;
DELETE FROM sqlite_stat1 WHERE LAST_INSERT_ROWID(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-2012114352) BETWEEN (NULL) AND (x'6b43'))) BETWEEN ((0.17437317732587154 IN (x''))) AND (('-1343699997' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '293480068 -42268400'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 -42268400 sz=-1659064238 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-468605327'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL)LIKE(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1353063807 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1616287164 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1791418964 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- ('-2020039418')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1185789063'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (x'')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-2101809102')>=(x''))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('0.5572611644742804' COLLATE NOCASE IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1353063807 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1125882692 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-42268400 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-2040668427 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((('-2101809102')) NOT BETWEEN ((7.49213584E8)) AND (('-946476482'))) THEN LTRIM('', x'') WHEN ((x'') NOT NULL) THEN ((x'')|(-9.94793272E8)) WHEN ((('荵', 0.9351389585984069, x'')) NOT BETWEEN (('-343727520', '', 4.02163746E8)) AND (('-1339946140', 0.5377088730595802, '293480068'))) THEN (((0x4a99a2d6))<(('0.3543239017137324'))) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('-286770165' IN ()) IN (((0.563409815174803) NOT BETWEEN (x'9373') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1715786646 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-1607491920')AND(NULL)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1819346712'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.5155738820569766 AS NUMERIC)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'5936'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1812711851 -2091303977 sz=1828113130 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1616287164 0 sz=-107269404 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2089484241 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-84760083'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1272349975'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE '350853532'  WHEN 0.19752105530788766 THEN '39204403' WHEN NULL THEN NULL WHEN 0.5572611644742804 THEN NULL END)OR((('w*')<(x'')))))AND(0X75d75e16)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1443387409))<>(((('-1896371720')/('1257242446'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') BETWEEN (NULL) AND (NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-376950628 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-225207140 -1659064238 sz=-1324113578 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(x'a580' AS BLOB)  WHEN CAST(NULL AS INTEGER) THEN ((1.251582678E9) IS FALSE) ELSE ((NULL) NOT NULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1221652953 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (NULL) AND (NULL)))%(CASE WHEN NULL THEN NULL ELSE '0.9351389585984069' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1221652953 940046685 sz=1678624468 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE WHEN '' THEN '-772715049' ELSE x'' END)OR(CAST('-1493276747' AS TEXT))))AND((('0.17437317732587154') IS FALSE))))AND((((('')AND(NULL)))AND(x'')))))AND(((1.788788265E9) BETWEEN (-2.86770165E8) AND (-487492556)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1557842328 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1161721609 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.5642457360093318) NOT NULL) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1604302406 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '350853532 sz=-1896371720 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('') BETWEEN (NULL) AND (-135102482)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE WHEN NULL THEN 0.5160038697229722 ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-491172578'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-568956461 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('p~v%I*'))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.45686317604462545') NOT NULL)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1393317808 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('~Wtirm[W' AS TEXT) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (0xffffffffa06049ba)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-478581867 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1619536971 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1619536971'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-338259831'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-266875725')AND('2015091817')))OR(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT MAX(x'', x'', 0xffffffffe2b94d1e, '1465852650'), (((('-994793272')OR(0.7722855090206866)))OR(-2125144030))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('0.08227743805956123' IN (1.715786646E9)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.7674571848155768) NOTNULL)  WHEN ((0.9591289695215867) NOT BETWEEN (NULL) AND ('-1557842328')) THEN ((0.875244631766793)>=('Rq')) WHEN COALESCE(DISTINCT 0.24765851389050209, '枵2', x'', 0.37209072419572153) THEN ((((((((x'')OR(NULL)))OR(-0.0)))AND('')))AND('-2089484241')) WHEN CASE 0Xffffffffaa4882b7  WHEN '' THEN '<&' ELSE NULL END THEN (NOT (x'')) ELSE ((-1.7976931348623157E308) BETWEEN ('') AND ('1788788265')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(((0xc740056)>=(x'ebfe')), '' COLLATE RTRIM); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-924638679 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '713875245 -84760083 sz=-1540098290 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('1161721609')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 2 sz=-266875725 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN x'' THEN 'x]_' END IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT (x'' IN ())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'' IN ())))!=(((((('713875245')OR(0.11180239458666685)))AND('-965073583'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=115385726 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-872290316'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-468605327 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1185789063'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')OR('613166844' COLLATE NOCASE)))AND(CASE x''  WHEN '' THEN '0.11180239458666685' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-946912707 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-175057571 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9721991265667633) NOT NULL))=(((NULL)!=('9tW麰2')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-93983646'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1018204647'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8117132641734929)|(1288648902))) BETWEEN (NULL COLLATE BINARY) AND ((((x'eb8f', NULL, -394198842, '', 0.9989708421523964))==((NULL, '\i', x'', '', 0.5352011885244408))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF((('1125882692') BETWEEN ('%w') AND (NULL)), ((-1.60749192E9) NOT BETWEEN ('944687575') AND (x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1036106161 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1118983281'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(CAST(x'b366' AS REAL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHANGES(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2138709840 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1465852650 0'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-877650822 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1830436004 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(CASE 0xffffffff8f4c1762  WHEN 0.46875771946021083 THEN 0.7722855090206866 WHEN x'6e6e' THEN x'' WHEN 0.2356479937833138 THEN x'' END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ (NULL)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1819346712 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1512429183 sz=-2012114352 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1819346712'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-302060627 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.7645962808967476; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN -1659064238 THEN NULL END)%(((('769427281')) NOT BETWEEN ((0.5225840277276906)) AND ((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5624764426069795)) NOT BETWEEN ((((NULL)-(-334615711)))) AND ((((x'') NOT BETWEEN (NULL) AND (x'fd09'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 sz=290991682 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '612125860 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1619536971'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('꣈4Dn')<=(0.6029989093823419)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1884998616'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-136610494 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-394168010 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xfffffffff2939c9c) BETWEEN (x'b22d') AND ('1320233580'))) NOT BETWEEN (((0.9443280977436577)<<(NULL))) AND (x'' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1064901367 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1798770835 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'fa74')+(x'')) THEN (((NULL, '2015091817', x'')) BETWEEN (('-1619536971', '0.3543239017137324', '-96119435')) AND (('?2C⋪Zt^D', '-1393317808', NULL))) ELSE (('-1987908337') NOT BETWEEN (0.778038315968051) AND (0.3203740016548303)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((HEX('713875245'))AND((('')&('459697291')))))AND((~ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.8128935381523874) NOTNULL) THEN ((-1.791418964E9)>>(NULL)) ELSE (('1187348899')|(0.8512762677780635)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1902299168 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1872357346 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((LIKELY(DISTINCT x'c8b9'))AND((((x'', '-918033313', NULL, '-1990705623', 0.2571515155101477))>((0.9443280977436577, x'', x'', 0.8432165506042023, x'35a4'))))))AND((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-266875725'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) BETWEEN (NULL) AND (0Xffffffffd1f14dd7)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1235684270'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '4 sz=-1327914572 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(',i_AU3fT' AS BLOB)  WHEN ((0.11180239458666685) BETWEEN (0.8737501152165014) AND ('-158279007')) THEN (NOT (0xffffffffef69e6fc)) WHEN ((1573946616)>>('')) THEN NULL WHEN CASE WHEN -1987908337 THEN x'' END THEN (((1e500))<>((-340921228))) WHEN (((('gFk{*')AND('0.2356479937833138')))OR('')) THEN (('1239758358') ISNULL) WHEN ((NULL)<>('')) THEN ((NULL)==('43')) ELSE load_extension(0X1ba01594) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1353063807 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '575679161 sz=-1058276844 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-994793272 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'114344ae') NOTNULL) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE) NOT BETWEEN ((((('|a')AND(NULL)))OR(NULL))) AND ('ᦘ#u6%' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1604302406 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') ISNULL))!=(('184618565' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-134678105'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ (NULL)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1311454912 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1828113130 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))<((0x3807f95d)))) NOT BETWEEN ((('0.7722855090206866')OR(0.29459205700448876))) AND (((0xffffffffa6794ff6) BETWEEN (0.5867246937578916) AND ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-353540670 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('332064384') BETWEEN ('') AND (x'')))/((((0x71f0e117))>=((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1358855845 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1184124426 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1009318634 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((('\n!')AND(x'')))AND('x]_'))  WHEN CAST('-869199724' AS BLOB) THEN (('o6)V<''t#')*('-84760083')) WHEN 0Xffffffffebd69089 THEN ((NULL) IS FALSE) WHEN CASE '0.7722855090206866'  WHEN 0.88335229265927 THEN x'' END THEN CASE 0.5235453450262624  WHEN 0.5573882512967594 THEN '-1555383890' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-487492556 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=23644395 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('VK(A뭸u*H')|(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=613166844 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ (x'')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('b') NOT NULL)  WHEN 0.8128935381523874 COLLATE BINARY THEN 0.3400097538047153 END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1192687438'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1597885009 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((x'a53ef364') NOT BETWEEN (((-1590536172)-(NULL))) AND ((((('B绍UI.*S')OR(0.0)))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1850959944' COLLATE NOCASE)|('')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('?2C⋪Zt^D')&('moRUl[')) COLLATE RTRIM COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(CAST('n' AS BLOB), ((((0.16430415804677)AND(NULL)))AND('FALSE'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1627376731 sz=238264301 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-4.87492556E8) IS FALSE))|(((('', x'bd88', 940046685))<((0.2183098277276606, NULL, -1944654615))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=456374282 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LENGTH(((0.3821919023938818) NOT BETWEEN (0.563409815174803) AND (0.8048705538352623))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN ('') AND (0.778038315968051))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.2174217017934359 AS BLOB))LIKE(CAST(x'' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (('z' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE (('') ISNULL)  WHEN (+ (1.82811313E9)) THEN CAST(x'' AS BLOB) ELSE (((NULL, '371939278', NULL))<((0xfffffffffaf2a9ed, x'', '-1607491920'))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1002428523'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')>(x'1849')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-568956461'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.3460786271201406) IS FALSE))OR((x'' IN ()))))AND((NOT ('쫪''')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1527070529 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1428674366 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN x'37ba' THEN 0.9528511574097572 ELSE NULL END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-53692143'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'' AS NUMERIC) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-258326116 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL)) BETWEEN (NULL COLLATE BINARY) AND ((((('-2040668427')AND(NULL)))OR('293480068')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) BETWEEN ((0xfffffffffe4eecea)) AND ((0X53c851a9))))<=(((0xffffffffe988309c) BETWEEN (-4.68605327E8) AND (0.9127757122908355)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=25594633'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=456374282 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=437315811 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('Rv5') BETWEEN (NULL) AND ('0.8737501152165014'))) BETWEEN (((x'')<=(0.9749701703226131))) AND (((NULL) NOT BETWEEN (x'') AND (0.35687267513186915)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELIHOOD(x'93f8', 0.9246096143258385)) BETWEEN ((x'' IN (NULL))) AND ((((0x771179b7)) NOT BETWEEN ((823372988)) AND ((1141767557))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -1749183978 sz=1814317534 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-35119952 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '609110480 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((0.022132258652842518)AND(NULL)))OR(NULL)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=974196173 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST(1473652143 AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-249190279 1065190417'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5113459429091628)<=(0.34671526540778963)))==((((-1.185789063E9)) NOT BETWEEN (('')) AND (('-1324164913'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -1808619752 sz=-1123533205 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE 0.6297516232566803  WHEN 'b4H8\rW' THEN '-37933697' ELSE 0.250084617955631 END AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '-1557842328'  WHEN '0.2821987485989381' THEN NULL END COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2067470553 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS TEXT))>(((NULL) BETWEEN (-1.89637172E9) AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=459697291 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (NULL) AND (x'')))+(0.819291781313021)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=610722278 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=686132845'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-338259831'))<=((NULL))))/(('' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('B{!' IN (x'')))||(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE 1678624468  WHEN NULL THEN '-345327196' END AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1311587540 823372988 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1604659649'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-199006220 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension('', x'') COLLATE NOCASE COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=-1674999331'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- ('-1393317808')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ((-1901318911) IS TRUE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-105134717'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1879907806 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2054348955 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1682356818 sz=-964975062 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=959423055 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '39204403 sz=937732631 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1650787637 sz=1465852650 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-554757948 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -973219095 sz=9223372036854775807'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1853796203')!=(NULL)))!=(((0xffffffffeca4f430)IS(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1896371720'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1175558309 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'' IN ()))AND((((0.9654339647218735)) NOT BETWEEN ((0xffffffffbd92c98c)) AND ((x''))))))AND(0.2572997748765792)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-587920339 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1987908337 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=541991093 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-414222537 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=687556029 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xffffffff8154e022 IN ()) IN (PRINTF('ꡪ嬘?L?o<G>', NULL, -124257528))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x2563633 IN ()), (((((((('-1637557921')AND(0.012319178096618755)))AND('')))AND('-1671443513')))AND('')), (((((((('')AND(418513009)))AND(-487492556)))OR('P)胘r')))AND(1336155318))))<>((((NULL)<<('-776312817')), (((('-1169324366')AND(NULL)))AND('1885195603')), (((NULL)) NOT BETWEEN (('pT+v\r^*''G')) AND ((0.7934427037742436)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2091303977 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffffacf3a850)) BETWEEN ((((NULL) BETWEEN ('') AND (1121532610)))) AND ((((((x'')AND(-1.324113578E9)))OR(x'2608'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1391442245 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((NULL)) BETWEEN ((NULL)) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('4549973365678543859-368-463:1538T5803460318013362081T3969270069516649987:4275467455111159583 ]卶' AS NUMERIC)) NOT BETWEEN ((NULL IN ())) AND ((('L__')<=(0.9327208526491209)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1722151780 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-440720741'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((1.715786646E9)<<('1018993681')))OR((- (0.5667013950722845)))))AND(((1708215011) BETWEEN (x'd566') AND ('Q}Db6#a(/')))))OR(((NULL)||(NULL)))))AND((+ ('-1987908337')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2061699087 sz=-562265694 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((+ (x'281bec2f')))AND(((0.22005048064972865)>>(1.125882692E9)))))AND(((0Xffffffff82b8f032)<(0.49166149988245267)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-135102482 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-744853971'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1095036656 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1118983281 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-512464432 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-59210891 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE))<((0.05557752255614401 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '327512353 unordered'); -- 6ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('')OR('-568956461')))OR(NULL)))OR(((-29360136) NOT BETWEEN (x'') AND (NULL)))))AND((+ ('-135102482')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('387002947') NOTNULL)) NOT BETWEEN (((-1805428496)OR(x''))) AND (((x'bd8c')<=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -1887305472'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=459697291'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1005372742 sz=-1089035160 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-987632582 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1317887863 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '350853532'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN ()) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 5ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1625386690 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)/('1465852650')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATE(('-2025110' IN ('')), (NULL IN ('r')), CAST(NULL AS INTEGER)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'16c6' IN ()))IS NOT(CAST(x'bb18' AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN (((((('1354569272')OR(x'')))OR('TSᣧsQlCថp')))) AND ((TRIM(DISTINCT '-1896371720')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)LIKE('-1393317808')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=197866151 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1534904374 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=459697291 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT (('</') IS FALSE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('ST') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '613166844 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('0.9591289695215867', NULL, 0.543311151589095, x'', x'ad2c'))>((0.4931730326838032, NULL, -8.72290316E8, 0X653d4c5a, x'1709'))))!=((((x'87c74d7e', NULL, 0.4192229291773112)) BETWEEN ((NULL, 0.6427628303206613, 7.13875245E8)) AND ((0.29566972373482003, 'p~v%I*', x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-2049158658'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1853796203 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2122875323'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1366848201 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.46875771946021083) ISNULL))%(('-994793272' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('' COLLATE NOCASE AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=115385726 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1185789063 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1658016496 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.5160038697229722' IN ())) NOT BETWEEN (UPPER(DISTINCT 0.12048301318862009)) AND (-1324113578 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1339946140 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '721206012 -1704384904 sz=-1596528411 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-2125877492 sz=1616199255 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=208928854 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 1839482238 sz=-491172578'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN '!W' THEN NULL ELSE '923555440' END) NOT BETWEEN (CAST('jEGUw cCY' AS REAL)) AND (('di' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2092449983 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2025317235 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.5624764426069795  WHEN NULL THEN NULL WHEN x'' THEN '1251582678' WHEN '	T	G' THEN 0.3479089058034369 END) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-576750460 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-849784656 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1176487222'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '743236609 2 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-116821076 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((highlight('-2102164056', '-439580829', NULL, NULL), (('>2') IS TRUE), NULL))<=(('' COLLATE BINARY, (('0.3821919023938818') BETWEEN (NULL) AND (x'2a48')), ((x'')<>(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.279717461755816; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=468693070 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '350853532 sz=1780535389'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 713875245 sz=-869199724 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=115385726 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1206764306'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-175057571 -848805891 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((json_array(0Xfffffffffc788375, x'', x'', ''))AND(TRIM('-59210891'))))OR(((0.3379617639741439) BETWEEN (NULL) AND (0x17f88822)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((('P*')AND(x'b045')))AND('-266875725')) THEN CASE WHEN 'xFSvี2	ig' THEN '#?jMnG' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1777821790'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (NULL))) BETWEEN (((NULL)<=(x''))) AND ('0' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(((NULL) NOT BETWEEN (NULL) AND (-1.343699997E9))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((0X3a23c053)>>(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('^-' AS REAL))LIKE(CAST('1251582678' AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' COLLATE NOCASE IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 459316911; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(x''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '91495868 sz=-1443387409 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-1904187115 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-468605327 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=208190296'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LENGTH(((0.9961623007698455) NOTNULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-468605327 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=873527345 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.1438425465930735 COLLATE NOCASE) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1607491920 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '973903797 sz=1682872201'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('0.35687267513186915') NOTNULL)  WHEN CAST('' AS BLOB) THEN (('1590017445') NOT BETWEEN ('1954793547') AND (0.08614956174377186)) ELSE (((NULL, '0.6506576913007306', 0.8469152175796959))<=(('-1400907942', 0.5936497303468855, '-1557842328'))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1573903888'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT x'bad6' COLLATE RTRIM, CASE NULL  WHEN x'd6d1' THEN NULL END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((-674126010)OR(1797655846)))OR('9tW麰2')))AND(((-776363419) IS FALSE))))AND(((x'b84f')!=('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-994793272 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '9223372036854775807 -2125317953 sz=-225207140 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -105167954 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1658154971 sz=1464618017 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-485416724 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.5190956221375679)-(x'5a2e47fb')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0X9df3a61; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-568956461 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-236533348 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-119043543 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')>=(0.46875771946021083))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-135102482', NULL, -1748312346))<(('-2036998413', '1678624468', '0.24586023047873695')))) NOT BETWEEN (((NULL)>>(''))) AND ('' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=293480068 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT '1801483756', NULL) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'')>=(-2091303977)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=162050446 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1682850472 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-471825374 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '293480068 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-904054136 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('\?')))GLOB('')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=952574971 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0x4865c501)OR('-1690122747')))AND(NULL)))AND(0X378ff193)))OR(0xffffffffccbdb5e7)))%(NULL COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-2091303977 sz=-806647057 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TOTAL_CHANGES(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<=(x'')))==(',kj<Q侊5!' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'7c87'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-253702041 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('6vgꅖ')%(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ ('')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=113481796 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-491172578'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1715786646'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1341490862'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=290854589 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '575627611 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -1438088521'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-2077488487 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '4 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1471811919'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(0.763714200143175, CASE x''  WHEN '-1604302406' THEN '1715786646' END, 0.5808560357881662 COLLATE NOCASE, CAST('-994793272' AS REAL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS BLOB))<(((0.9988171462771022)!=('Qb[')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1.678624468E9) BETWEEN ((((NULL))=((NULL)))) AND ((NOT (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-644226735 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-644390366 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1598998135 sz=1358597048'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((UPPER('947497580'))AND((('0.6029989093823419')||('-1177228480')))))AND(((((0.97656984972084)AND(0.4156764852902267)))AND(0.6720551245730205)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-9223372036854775808'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('zhQrc') IS TRUE) COLLATE RTRIM; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)+(('&-v졮^vP' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -907554879 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=115385726'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1019984335 sz=-225207140 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-266875725 0 sz=-1296582120 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1679872070 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1344000816 459697291 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN NULL THEN NULL END)|(CAST(0.05833545379930205 AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8124558531396175; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('洡' COLLATE BINARY IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-946476482'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '848708654 sz=2032537181'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-696477159) BETWEEN (x'') AND ('i8!94</E')))%(CAST(0.464841033298384 AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1891514401'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL IN ()), CAST(NULL AS REAL), (NOT (NULL))))==((((x'') IS FALSE), (('RVQo ')>>(NULL)), (('%F~j') NOTNULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=661332457 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-20077758 sz=224512365'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-1138086776' AS NUMERIC) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('1136349027' AS BLOB) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6584417698728525) IS FALSE))<((('cC\o0SK')|(0.10454219672976905)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=523598385 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '314613566 -2020039418'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('-2017402306')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((RTRIM('')) BETWEEN (CAST(x'' AS TEXT)) AND (CASE WHEN x'' THEN '>.' WHEN '&X' THEN NULL WHEN -1.853796203E9 THEN NULL ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=937306712 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(0xffffffff9f77d3b5 AS NUMERIC)))<(((('1463445669')+('N^'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1814317534 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((2.122875323E9)) BETWEEN (('-253702041')) AND ((x''))))OR(((NULL) NOT BETWEEN (NULL) AND (x'4bde')))))AND('-1607491920')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-286770165 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((('UK'))<=((0.841171271937733))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL IN ())))<=((0.24586023047873695 COLLATE BINARY))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.9847674396833527)>=(NULL)))AND((((NULL, NULL, '293480068'))==((NULL, NULL, NULL))))))OR(CAST('-982474921' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-196253991'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2026344951 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=902566723 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1607491920 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'f850') BETWEEN (NULL) AND (0.38584570452043)))||('F_' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -710875415 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x62426163) NOT NULL))GLOB(CAST(1325211220 AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=889222136 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'6af6')>=(x''))) BETWEEN ((~ ('-1540098290'))) AND (('' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1996316915 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=215945299 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=992407660 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('ᛩfO3FSTV' COLLATE NOCASE)OR(((NULL)|(x'')))))AND(((((NULL)OR(x'dc34')))AND(x'2616')))))AND((((((((((((('z})a5')OR('1161721609')))OR('')))OR('9zs~')))OR(0.6374848161174671)))AND(x'')))AND('|Z')))))OR((((NULL))>=((x'fae8'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1493276747 sz=11963325 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((NULL, '-1236506431', NULL))<=((NULL, x'', x'ff31')))  WHEN (((x'69ab', x'', NULL)) NOT BETWEEN ((x'e338', '', 0.22913228965798815)) AND ((-2089484241, NULL, x'2a9e'))) THEN (NOT (0.9988171462771022)) ELSE (('0.88335229265927')LIKE(x'')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (~ ('-651379928'))  WHEN ((('', NULL, NULL)) NOT BETWEEN ((0.9317052035484082, x'', '-1167559819')) AND ((x'', NULL, 'gu'))) THEN CASE WHEN 'Tb.\n' THEN NULL WHEN '713875245' THEN x'' WHEN x'' THEN 0.2663711330431635 END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-59210891 -740674820 sz=-107269404'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=944952826 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-2077981790'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT CASE '-1488170304'  WHEN '0.5155738820569766' THEN -2140750107 END, 0.8921040522179009); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-33013324 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ ('9맴')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL IN ()))AND(((0X2bad67a0)|('923555440')))))AND(json_insert(NULL, 1.118983281E9, NULL, 0.08614956174377186, x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1587232594 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT (0.5838202666076789)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-869199724 -1518935913 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE(0.14453777972618587, NULL)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1836212524 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8627694267310836)IS NOT(x''))) BETWEEN ((((0.08041383015149339)) NOT BETWEEN ((x'')) AND (('-338259831')))) AND ((('-2017402306')||(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((NULL, 'sGZR ', NULL))<((0Xffffffffbbae36f5, x'da47', x'b5f3'))) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN ('') AND ('1800521947'))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-42268400'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-352713253 0 sz=-1851975134 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1977048598'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '996265771 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-343727520 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN x'' THEN NULL END IN (NULL COLLATE RTRIM, ((0.38697950425213623)AND('877465798')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x12c751ab IN (NULL)))%(((0.6019030314023116)!=(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=-26785004'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1397031437 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.6507640051675944 IN ()) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((((((NULL)OR(x'1cd4')))AND(1227422362)))AND(x'eb17')))AND(0Xffffffffeb832260)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-568836122 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('p~vFI*')AND(RTRIM(NULL))))OR(x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.9347310668354095  WHEN '1591953709' THEN NULL ELSE NULL END COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-134678105'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xffffffff8ef7a9f8; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=326287651 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1701986086) NOT BETWEEN (0.6506576913007306) AND ('')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-478581867 -1493276747 sz=-1112840848 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '923555440 2 sz=1616287164 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1033724545'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((NULL)AND(1116243681)))OR(0.7011481018104111)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST(0.8659768190552498 AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1325105741 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN '1682872201' THEN x'' END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=893934858'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1791418964'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-718350394'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=749213584 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1044759284 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1339946140'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.3467041184498394 COLLATE NOCASE AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 -2125144030 sz=-330937584 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (0.941434342960968))) NOT BETWEEN (((x'') NOTNULL)) AND ((+ (326287651)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-983813815'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA main.journal_size_limit = 3539661038896432103; -- 0ms;
END TRANSACTION; -- 0ms;
VACUUM; -- 3ms;
REINDEX NOCASE; -- 0ms;
UPDATE vt0 SET (c0, c0)=(NULL, 'i#첳1SI'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0) AS SELECT CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(0.4575033680241225)))OR(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (0.9735984561013544) AND (vt0.c0)) THEN x'' WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) END FROM vt0; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (NULL); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 254369594); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '58405'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '31065'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE vt0 SET (c0)=('1118983281'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '34208'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL), ('>8p''W'), (NULL); -- 0ms;
PRAGMA main.recursive_triggers; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1358855845,7');\n; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0X6c710718); -- 1ms;
END TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
ANALYZE sqlite_master; -- 5ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '17009'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX  vt0; -- 0ms;
UPDATE vt0 SET (c0)=(0.3657401755442866) WHERE ((((((((((923555440)>>(vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND((~ (vt0.c0)))))AND((~ (vt0.c0)))))OR(((vt0.c0) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1443387409 unordered noskipscan'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, c1); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
PRAGMA temp.locking_mode; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 2019974907); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 782559101); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=0'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '28586'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(''); -- 3ms;
UPDATE OR IGNORE vt1 SET c1=x'' WHERE ((((((vt1.c0)||(vt1.c1)))AND(CAST(vt1.c0 AS TEXT))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)); -- 0ms;
END; -- 0ms;
ANALYZE; -- 0ms;
COMMIT; -- 0ms;
PRAGMA cell_size_check; -- 0ms;
UPDATE vt1 SET c0='' WHERE (((((vt1.c0))<((vt1.c1))))|((vt1.c0 IN ()))); -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=6'); -- 1ms;
DELETE FROM vt0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=5'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '35341'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
VACUUM; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 11); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT vt0.c0 FROM vt0 NOT INDEXED;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0) IS FALSE) IN ())) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0) IS FALSE) IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0) IS FALSE) IN ())) ISNULL));
SELECT vt0.c0 FROM vt0 NOT INDEXED;
SELECT DISTINCT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1, v0 WHERE (CAST(LIKE(0.5530309311317461, v0.c0, '1') AS TEXT)) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((NOT (CAST(LIKE(0.5530309311317461, v0.c0, '1') AS TEXT)))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE (((CAST(LIKE(0.5530309311317461, v0.c0, '1') AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt1, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) AND (((- (x'')))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) AND (((- (x'')))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) AND (((- (x'')))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt1.c0, v0.c0, vt1.c1 FROM vt1, v0 GROUP BY vt1.c0, v0.c0, vt1.c1;
SELECT vt1.c0, v0.c0, vt1.c1 FROM vt1, v0 GROUP BY vt1.c0, v0.c0, vt1.c1 HAVING AVG(GROUP_CONCAT(MIN(AVG(TOTAL(SUM(vt1.c1)))))) UNION ALL SELECT vt1.c0, v0.c0, vt1.c1 FROM vt1, v0 GROUP BY vt1.c0, v0.c0, vt1.c1 HAVING (NOT (AVG(GROUP_CONCAT(MIN(AVG(TOTAL(SUM(vt1.c1)))))))) UNION ALL SELECT ALL vt1.c0, v0.c0, vt1.c1 FROM vt1, v0 GROUP BY vt1.c0, v0.c0, vt1.c1 HAVING ((AVG(GROUP_CONCAT(MIN(AVG(TOTAL(SUM(vt1.c1))))))) ISNULL);
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0;
SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 WHERE (vt1.c0) UNION ALL SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 WHERE ((NOT (vt1.c0))) UNION ALL SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 WHERE (((vt1.c0) ISNULL));
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (((((v0.c0))<((NULL))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (((((v0.c0))<((NULL))))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (((((v0.c0))<((NULL))))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0)LIKE(v0.c0))) NOT BETWEEN (NULL) AND ((((v0.c0, v0.c0, 0xffffffffdb68a86a))>=((v0.c0, v0.c0, v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)LIKE(v0.c0))) NOT BETWEEN (NULL) AND ((((v0.c0, v0.c0, 0Xffffffffdb68a86a))>=((v0.c0, v0.c0, v0.c0)))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)LIKE(v0.c0))) NOT BETWEEN (NULL) AND ((((v0.c0, v0.c0, 0Xffffffffdb68a86a))>=((v0.c0, v0.c0, v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt1.c1 FROM v0, vt0, vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM v0, vt0, vt1 GROUP BY vt1.c1 HAVING COUNT(AVG(vt1.c1)) UNION ALL SELECT vt1.c1 FROM v0, vt0, vt1 GROUP BY vt1.c1 HAVING (NOT (COUNT(AVG(vt1.c1)))) UNION ALL SELECT ALL vt1.c1 FROM v0, vt0, vt1 GROUP BY vt1.c1 HAVING ((COUNT(AVG(vt1.c1))) ISNULL);
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN v0 ON vt0.c0;
SELECT ALL * FROM vt1, vt0 RIGHT OUTER JOIN v0 ON vt0.c0 WHERE ((((vt1.c1 IN (vt0.c0))) BETWEEN ('c!JZ)La[' COLLATE RTRIM) AND (LAST_INSERT_ROWID()))) UNION ALL SELECT * FROM vt1, vt0 RIGHT OUTER JOIN v0 ON vt0.c0 WHERE ((NOT ((((vt1.c1 IN (vt0.c0))) BETWEEN ('c!JZ)La[' COLLATE RTRIM) AND (LAST_INSERT_ROWID()))))) UNION ALL SELECT * FROM vt1, vt0 RIGHT OUTER JOIN v0 ON vt0.c0 WHERE ((((((vt1.c1 IN (vt0.c0))) BETWEEN ('c!JZ)La[' COLLATE RTRIM) AND (LAST_INSERT_ROWID()))) ISNULL));
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN v0 ON vt0.c0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c1, vt1.c1, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))))GLOB(CASE vt1.c0  WHEN 0.9396759483744945 THEN vt1.c0 ELSE NULL END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c1, vt1.c1, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))))GLOB(CASE vt1.c0  WHEN 0.9396759483744945 THEN vt1.c0 ELSE NULL END))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((((vt1.c1, vt1.c1, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))))GLOB(CASE vt1.c0  WHEN 0.9396759483744945 THEN vt1.c0 ELSE NULL END))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0, vt1.c1 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt0, v0, vt1 WHERE ((- (((-1.650703793E9) NOT BETWEEN (vt0.c0) AND (v0.c0))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt0, v0, vt1 WHERE ((NOT ((- (((-1.650703793E9) NOT BETWEEN (vt0.c0) AND (v0.c0))))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt0, v0, vt1 WHERE ((((- (((-1.650703793E9) NOT BETWEEN (vt0.c0) AND (v0.c0))))) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt0.c0, vt1.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON x'790d' FULL OUTER JOIN v0 ON (((- (v0.c0)))IS((vt1.c1 IN ()))) GROUP BY vt0.c0, vt1.c1;
SELECT ALL vt0.c0, vt1.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON x'790d' FULL OUTER JOIN v0 ON (((- (v0.c0)))IS((vt1.c1 IN ()))) GROUP BY vt0.c0, vt1.c1 HAVING COUNT(((COUNT(*))GLOB(MAX(MIN(TOTAL(AVG(vt1.c0))))))) UNION ALL SELECT ALL vt0.c0, vt1.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON x'790d' FULL OUTER JOIN v0 ON (((- (v0.c0)))IS((vt1.c1 IN ()))) GROUP BY vt0.c0, vt1.c1 HAVING (NOT (COUNT(((COUNT(*))GLOB(MAX(MIN(TOTAL(AVG(vt1.c0))))))))) UNION ALL SELECT vt0.c0, vt1.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON x'790d' FULL OUTER JOIN v0 ON (((- (v0.c0)))IS((vt1.c1 IN ()))) GROUP BY vt0.c0, vt1.c1 HAVING ((COUNT(((COUNT(*))GLOB(MAX(MIN(TOTAL(AVG(vt1.c0)))))))) ISNULL);
SELECT ALL * FROM v0, vt0, vt1;
SELECT * FROM v0, vt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)) UNION ALL SELECT * FROM v0, vt0, vt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)))) UNION ALL SELECT ALL * FROM v0, vt0, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)) ISNULL));
SELECT ALL * FROM v0, vt0, vt1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((('', ((v0.c0) BETWEEN (0.5151259919023032) AND (v0.c0)), v0.c0))<((((v0.c0)!=(v0.c0)), CAST(-1393317808 AS NUMERIC), CASE '-946476482'  WHEN '-286770165' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((('', ((v0.c0) BETWEEN (0.5151259919023032) AND (v0.c0)), v0.c0))<((((v0.c0)!=(v0.c0)), CAST(-1393317808 AS NUMERIC), CASE '-946476482'  WHEN '-286770165' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((('', ((v0.c0) BETWEEN (0.5151259919023032) AND (v0.c0)), v0.c0))<((((v0.c0)<>(v0.c0)), CAST(-1393317808 AS NUMERIC), CASE '-946476482'  WHEN '-286770165' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM vt0, v0 NOT INDEXED GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0 NOT INDEXED, v0 WHERE (((CAST(v0.c0 AS BLOB))||(''))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE ((NOT (((CAST(v0.c0 AS BLOB))||(''))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE (((((CAST(v0.c0 AS BLOB))||(''))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 NOT INDEXED GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT v0.c0 FROM v0, vt0;
SELECT v0.c0 FROM v0, vt0 WHERE (vt0.c0) UNION ALL SELECT v0.c0 FROM v0, vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT v0.c0 FROM v0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT v0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((((v0.c0)<=(v0.c0))) BETWEEN (((v0.c0)/(v0.c0))) AND ((((v0.c0, '1740861997', vt0.c0)) NOT BETWEEN ((x'', v0.c0, v0.c0)) AND ((vt0.c0, v0.c0, '<&')))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((((v0.c0)<=(v0.c0))) BETWEEN (((v0.c0)/(v0.c0))) AND ((((v0.c0, '1740861997', vt0.c0)) NOT BETWEEN ((x'', v0.c0, v0.c0)) AND ((vt0.c0, v0.c0, '<&')))))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((((v0.c0)<=(v0.c0))) BETWEEN (((v0.c0)/(v0.c0))) AND ((((v0.c0, '1740861997', vt0.c0)) NOT BETWEEN ((x'', v0.c0, v0.c0)) AND ((vt0.c0, v0.c0, '<&')))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL vt1.c0, vt1.c1, v0.c0, vt0.c0 FROM vt1 CROSS JOIN v0 ON (- (NULL)) CROSS JOIN vt0 ON ((((((((((vt1.c0)<<(-6.13898134E8)))OR((v0.c0 IN ()))))AND(((((vt1.c0)OR(vt1.c0)))OR(v0.c0)))))OR(((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)))))AND(((((v0.c0)OR(v0.c0)))OR(vt0.c0)))) GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c0;
SELECT ALL vt1.c0, vt1.c1, v0.c0, vt0.c0 FROM vt1 CROSS JOIN v0 ON (- (NULL)) CROSS JOIN vt0 ON ((((((((((vt1.c0)<<(-6.13898134E8)))OR((v0.c0 IN ()))))AND(((((vt1.c0)OR(vt1.c0)))OR(v0.c0)))))OR(((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)))))AND(((((v0.c0)OR(v0.c0)))OR(vt0.c0)))) WHERE (CASE CASE v0.c0  WHEN vt1.c1 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 END  WHEN (((vt0.c0))<>((v0.c0))) THEN vt0.c0 COLLATE RTRIM END) GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt1.c1, v0.c0, vt0.c0 FROM vt1 CROSS JOIN v0 ON (- (NULL)) CROSS JOIN vt0 ON ((((((((((vt1.c0)<<(-6.13898134E8)))OR((v0.c0 IN ()))))AND(((((vt1.c0)OR(vt1.c0)))OR(v0.c0)))))OR(((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)))))AND(((((v0.c0)OR(v0.c0)))OR(vt0.c0)))) WHERE ((NOT (CASE CASE v0.c0  WHEN vt1.c1 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 END  WHEN (((vt0.c0))!=((v0.c0))) THEN vt0.c0 COLLATE RTRIM END))) GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c0 UNION SELECT vt1.c0, vt1.c1, v0.c0, vt0.c0 FROM vt1 CROSS JOIN v0 ON (- (NULL)) CROSS JOIN vt0 ON ((((((((((vt1.c0)<<(-6.13898134E8)))OR((v0.c0 IN ()))))AND(((((vt1.c0)OR(vt1.c0)))OR(v0.c0)))))OR(((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)))))AND(((((v0.c0)OR(v0.c0)))OR(vt0.c0)))) WHERE (((CASE CASE v0.c0  WHEN vt1.c1 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 END  WHEN (((vt0.c0))<>((v0.c0))) THEN vt0.c0 COLLATE RTRIM END) ISNULL)) GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c0;
SELECT ALL vt1.c0, vt1.c1, v0.c0, vt0.c0 FROM vt1 CROSS JOIN v0 ON (- (NULL)) CROSS JOIN vt0 ON ((((((((((vt1.c0)<<(-6.13898134E8)))OR((v0.c0 IN ()))))AND(((((vt1.c0)OR(vt1.c0)))OR(v0.c0)))))OR(((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)))))AND(((((v0.c0)OR(v0.c0)))OR(vt0.c0)))) GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c0;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING GROUP_CONCAT(TRIM(DISTINCT SUM(TOTAL(COUNT(COUNT(AVG(MIN(vt1.c0)))))), AVG(SUM(TOTAL(NULL))))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (GROUP_CONCAT(TRIM(DISTINCT SUM(TOTAL(COUNT(COUNT(AVG(MIN(vt1.c0)))))), AVG(SUM(TOTAL(NULL))))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((GROUP_CONCAT(TRIM(DISTINCT SUM(TOTAL(COUNT(COUNT(AVG(MIN(vt1.c0)))))), AVG(SUM(TOTAL(NULL)))))) ISNULL);
SELECT * FROM v0, vt0, vt1;
SELECT ALL * FROM v0, vt0, vt1 WHERE ((- (vt1.c1))) UNION ALL SELECT ALL * FROM v0, vt0, vt1 WHERE ((NOT ((- (vt1.c1))))) UNION ALL SELECT * FROM v0, vt0, vt1 WHERE ((((- (vt1.c1))) ISNULL));
SELECT * FROM v0, vt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (MAX(((vt1.c1)>=(vt1.c0)), CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN 0x126c2a69 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END, ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)), ((vt1.c0) IS TRUE), CAST(vt1.c0 AS NUMERIC), CAST(vt1.c0 AS REAL))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (MAX(((vt1.c1)>=(vt1.c0)), CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN 0X126c2a69 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END, ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)), ((vt1.c0) IS TRUE), CAST(vt1.c0 AS NUMERIC), CAST(vt1.c0 AS REAL))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((MAX(((vt1.c1)>=(vt1.c0)), CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN 0X126c2a69 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END, ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)), ((vt1.c0) IS TRUE), CAST(vt1.c0 AS NUMERIC), CAST(vt1.c0 AS REAL))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0;
SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (CAST(((vt1.c0)>>(vt1.c0)) AS REAL)) GROUP BY vt1.c1, vt0.c0, vt1.c0 UNION SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (CAST(((vt1.c0)>>(vt1.c0)) AS REAL)))) GROUP BY vt1.c1, vt0.c0, vt1.c0 UNION SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((CAST(((vt1.c0)>>(vt1.c0)) AS REAL)) ISNULL)) GROUP BY vt1.c1, vt0.c0, vt1.c0;
SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0;
SELECT vt1.c0, vt1.c1 FROM v0, vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM v0, vt1 GROUP BY vt1.c0, vt1.c1 HAVING GROUP_CONCAT(MIN(COUNT(*))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM v0, vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (GROUP_CONCAT(MIN(COUNT(*))))) UNION ALL SELECT vt1.c0, vt1.c1 FROM v0, vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((GROUP_CONCAT(MIN(COUNT(*)))) ISNULL);
SELECT v0.c0, vt1.c0, vt1.c1 FROM v0, vt1;
SELECT ALL v0.c0, vt1.c0, vt1.c1 FROM v0, vt1 WHERE ((~ (CASE WHEN vt1.c0 THEN vt1.c0 END))) UNION ALL SELECT ALL v0.c0, vt1.c0, vt1.c1 FROM v0, vt1 WHERE ((NOT ((~ (CASE WHEN vt1.c0 THEN vt1.c0 END))))) UNION ALL SELECT ALL v0.c0, vt1.c0, vt1.c1 FROM v0, vt1 WHERE ((((~ (CASE WHEN vt1.c0 THEN vt1.c0 END))) ISNULL));
SELECT v0.c0, vt1.c0, vt1.c1 FROM v0, vt1;
SELECT DISTINCT * FROM vt1 INNER JOIN v0 ON (+ (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END));
SELECT DISTINCT * FROM vt1 INNER JOIN v0 ON (+ (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)) WHERE ((CASE WHEN vt1.c1 THEN NULL ELSE vt1.c0 END IN ())) UNION SELECT DISTINCT * FROM vt1 INNER JOIN v0 ON (+ (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)) WHERE ((NOT ((CASE WHEN vt1.c1 THEN NULL ELSE vt1.c0 END IN ())))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN v0 ON (+ (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)) WHERE ((((CASE WHEN vt1.c1 THEN NULL ELSE vt1.c0 END IN ())) ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN v0 ON (+ (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END));
SELECT ALL vt1.c0, v0.c0, vt1.c1 FROM vt0, vt1 NATURAL JOIN v0 GROUP BY vt1.c0, v0.c0, vt1.c1;
SELECT vt1.c0, v0.c0, vt1.c1 FROM vt0, vt1 NATURAL JOIN v0 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (x'bbd6') AND (((vt1.c0)-(vt0.c0))))) GROUP BY vt1.c0, v0.c0, vt1.c1 UNION SELECT ALL vt1.c0, v0.c0, vt1.c1 FROM vt0, vt1 NATURAL JOIN v0 WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (x'bbd6') AND (((vt1.c0)-(vt0.c0))))))) GROUP BY vt1.c0, v0.c0, vt1.c1 UNION SELECT vt1.c0, v0.c0, vt1.c1 FROM vt0, vt1 NOT INDEXED NATURAL JOIN v0 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (x'bbd6') AND (((vt1.c0)-(vt0.c0))))) ISNULL)) GROUP BY vt1.c0, v0.c0, vt1.c1;
SELECT ALL vt1.c0, v0.c0, vt1.c1 FROM vt0, vt1 NATURAL JOIN v0 GROUP BY vt1.c0, v0.c0, vt1.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(((MIN(AVG(SUM(vt0.c0))))%(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(((MIN(AVG(SUM(vt0.c0))))%(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(((MIN(AVG(SUM(vt0.c0))))%(vt0.c0)))) ISNULL);
SELECT ALL * FROM vt1, v0;
SELECT * FROM vt1, v0 WHERE ((((vt1.c0))!=((v0.c0)))) UNION ALL SELECT ALL * FROM vt1, v0 WHERE ((NOT ((((vt1.c0))!=((v0.c0)))))) UNION ALL SELECT ALL * FROM vt1, v0 WHERE ((((((vt1.c0))<>((v0.c0)))) ISNULL));
SELECT ALL * FROM vt1, v0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (GLOB(((v0.c0)<<(vt0.c0)), ((v0.c0)%(0X4f2a334c)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (GLOB(((v0.c0)<<(vt0.c0)), ((v0.c0)%(0x4f2a334c)))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((GLOB(((v0.c0)<<(vt0.c0)), ((v0.c0)%(0x4f2a334c)))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((((v0.c0)OR(v0.c0)), (235876714 IN (NULL)), v0.c0 COLLATE BINARY))>=((v0.c0 COLLATE BINARY, v0.c0, CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0)OR(v0.c0)), (235876714 IN (NULL)), v0.c0 COLLATE BINARY))>=((v0.c0 COLLATE BINARY, v0.c0, CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((((v0.c0)OR(v0.c0)), (235876714 IN (NULL)), v0.c0 COLLATE BINARY))>=((v0.c0 COLLATE BINARY, v0.c0, CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt1.c0, vt1.c1 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt1.c1 HAVING TOTAL(vt1.c0) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (TOTAL(vt1.c0))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((TOTAL(vt1.c0)) ISNULL);
SELECT vt1.c0, vt1.c1 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt1.c1 HAVING TOTAL(vt1.c0) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (TOTAL(vt1.c0))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((TOTAL(vt1.c0)) ISNULL);
SELECT vt1.c0, vt1.c1 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt0.c0, vt1.c1 FROM vt1 FULL OUTER JOIN v0 ON CASE WHEN CAST(vt1.c0 AS TEXT) THEN vt1.c1 COLLATE NOCASE WHEN vt0.c0 THEN ((vt1.c0)IS NOT(vt1.c0)) WHEN v0.c0 COLLATE NOCASE THEN TRIM(DISTINCT x'', vt1.c1) END INNER JOIN vt0 ON COALESCE('', ((v0.c0) NOT NULL));
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON (((((vt1.c0)GLOB(vt0.c0)), CAST(vt1.c1 AS INTEGER), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c1))))>=((CASE WHEN vt1.c1 THEN vt0.c0 END, ((vt1.c0) IS TRUE), ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))));
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON (((((vt1.c0)GLOB(vt0.c0)), CAST(vt1.c1 AS INTEGER), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c1))))>=((CASE WHEN vt1.c1 THEN vt0.c0 END, ((vt1.c0) IS TRUE), ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))))) WHERE (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON (((((vt1.c0)GLOB(vt0.c0)), CAST(vt1.c1 AS INTEGER), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c1))))>=((CASE WHEN vt1.c1 THEN vt0.c0 END, ((vt1.c0) IS TRUE), ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))))) WHERE ((NOT (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON (((((vt1.c0)GLOB(vt0.c0)), CAST(vt1.c1 AS INTEGER), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c1))))>=((CASE WHEN vt1.c1 THEN vt0.c0 END, ((vt1.c0) IS TRUE), ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))))) WHERE (((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON (((((vt1.c0)GLOB(vt0.c0)), CAST(vt1.c1 AS INTEGER), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c1))))>=((CASE WHEN vt1.c1 THEN vt0.c0 END, ((vt1.c0) IS TRUE), ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))));
SELECT vt0.c0 FROM vt0 INNER JOIN v0 ON ((((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))<((TRIM(DISTINCT vt0.c0)))) CROSS JOIN vt1 ON (((vt1.c0) NOT NULL) IN ()) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 INNER JOIN v0 ON ((((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))<((TRIM(DISTINCT vt0.c0)))) CROSS JOIN vt1 ON (((vt1.c0) NOT NULL) IN ()) WHERE ((((CAST(vt1.c1 AS REAL)))<=((CAST(vt1.c1 AS REAL))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 INNER JOIN v0 ON ((((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))<((TRIM(DISTINCT vt0.c0)))) CROSS JOIN vt1 ON (((vt1.c0) NOT NULL) IN ()) WHERE ((NOT ((((CAST(vt1.c1 AS REAL)))<=((CAST(vt1.c1 AS REAL))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 INNER JOIN v0 ON ((((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))<((TRIM(DISTINCT vt0.c0)))) CROSS JOIN vt1 ON (((vt1.c0) NOT NULL) IN ()) WHERE ((((((CAST(vt1.c1 AS REAL)))<=((CAST(vt1.c1 AS REAL))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 INNER JOIN v0 ON ((((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))<((TRIM(DISTINCT vt0.c0)))) CROSS JOIN vt1 ON (((vt1.c0) NOT NULL) IN ()) GROUP BY vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING MAX(((TOTAL(COUNT(*)))>(vt1.c0))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (MAX(((TOTAL(COUNT(*)))>(vt1.c0))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((MAX(((TOTAL(COUNT(*)))>(vt1.c0)))) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1, vt0;
SELECT vt1.c1, vt1.c0 FROM vt1, vt0 WHERE (IFNULL((~ (vt0.c0)), ((vt0.c0)|(vt0.c0)))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1, vt0 WHERE ((NOT (IFNULL((~ (vt0.c0)), ((vt0.c0)|(vt0.c0)))))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1, vt0 WHERE (((IFNULL((~ (vt0.c0)), ((vt0.c0)|(vt0.c0)))) ISNULL));
SELECT ALL vt1.c1, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, v0.c0, vt1.c1 FROM v0, vt1;
SELECT DISTINCT vt1.c0, v0.c0, vt1.c1 FROM v0, vt1 WHERE (((UPPER(vt1.c1))>=(vt1.c1 COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0, v0.c0, vt1.c1 FROM v0, vt1 WHERE ((NOT (((UPPER(vt1.c1))>=(vt1.c1 COLLATE RTRIM))))) UNION SELECT DISTINCT vt1.c0, v0.c0, vt1.c1 FROM v0, vt1 WHERE (((((UPPER(vt1.c1))>=(vt1.c1 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt1.c0, v0.c0, vt1.c1 FROM v0, vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))LIKE((- (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN (vt0.c0)))LIKE((- (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN (vt0.c0)))LIKE((- (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0, v0.c0 FROM vt1 FULL OUTER JOIN v0 ON (('|a')&('2u/')) GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt1 FULL OUTER JOIN v0 ON (('|a')&('2u/')) GROUP BY vt1.c0, v0.c0 HAVING CAST(COUNT(vt1.c0) AS TEXT) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1 FULL OUTER JOIN v0 ON (('|a')&('2u/')) GROUP BY vt1.c0, v0.c0 HAVING (NOT (CAST(COUNT(vt1.c0) AS TEXT))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt1 FULL OUTER JOIN v0 ON (('|a')&('2u/')) GROUP BY vt1.c0, v0.c0 HAVING ((CAST(COUNT(vt1.c0) AS TEXT)) ISNULL);
SELECT vt1.c0, v0.c0 FROM vt1 FULL OUTER JOIN v0 ON (('|a')&('2u/')) GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt1 FULL OUTER JOIN v0 ON (('|a')&('2u/')) GROUP BY vt1.c0, v0.c0 HAVING CAST(COUNT(vt1.c0) AS TEXT) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1 FULL OUTER JOIN v0 ON (('|a')&('2u/')) GROUP BY vt1.c0, v0.c0 HAVING (NOT (CAST(COUNT(vt1.c0) AS TEXT))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt1 FULL OUTER JOIN v0 ON (('|a')&('2u/')) GROUP BY vt1.c0, v0.c0 HAVING ((CAST(COUNT(vt1.c0) AS TEXT)) ISNULL);
SELECT vt1.c0, v0.c0 FROM vt1 FULL OUTER JOIN v0 ON (('|a')&('2u/')) GROUP BY vt1.c0, v0.c0;
SELECT MAX(CAST(v0.c0 AS REAL)) FROM v0;
SELECT ALL * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c1 ELSE vt0.c0 END) AND (vt1.c1))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c1 ELSE vt0.c0 END) AND (vt1.c1))))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c1 ELSE vt0.c0 END) AND (vt1.c1))) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT v0.c0, vt1.c1, vt1.c0 FROM v0 INNER JOIN vt1 ON CASE ((v0.c0)>=(vt1.c1))  WHEN (NOT (-6.44226735E8)) THEN TRIM(DISTINCT vt1.c0) WHEN ((((v0.c0)OR(vt1.c1)))OR(vt1.c0)) THEN (+ ('(7,>')) WHEN ((vt1.c0)&(vt1.c1)) THEN 'fA ySD' ELSE 0.21880281413020164 END;
SELECT DISTINCT v0.c0, vt1.c1, vt1.c0 FROM v0 INNER JOIN vt1 ON CASE ((v0.c0)>=(vt1.c1))  WHEN (NOT (-6.44226735E8)) THEN TRIM(DISTINCT vt1.c0) WHEN ((((v0.c0)OR(vt1.c1)))OR(vt1.c0)) THEN (+ ('(7,>')) WHEN ((vt1.c0)&(vt1.c1)) THEN 'fA ySD' ELSE 0.21880281413020164 END WHERE (highlight((((x'e547', vt1.c1, vt1.c1))<>((vt1.c0, vt1.c0, vt1.c0))), ((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)), ((((((((v0.c0)OR(vt1.c0)))OR(vt1.c1)))OR(NULL)))AND('l렊C]L')), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))) UNION SELECT DISTINCT v0.c0, vt1.c1, vt1.c0 FROM v0 INNER JOIN vt1 ON CASE ((v0.c0)>=(vt1.c1))  WHEN (NOT (-6.44226735E8)) THEN TRIM(DISTINCT vt1.c0) WHEN ((((v0.c0)OR(vt1.c1)))OR(vt1.c0)) THEN (+ ('(7,>')) WHEN ((vt1.c0)&(vt1.c1)) THEN 'fA ySD' ELSE 0.21880281413020164 END WHERE ((NOT (highlight((((x'e547', vt1.c1, vt1.c1))<>((vt1.c0, vt1.c0, vt1.c0))), ((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)), ((((((((v0.c0)OR(vt1.c0)))OR(vt1.c1)))OR(NULL)))AND('l렊C]L')), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))) UNION SELECT DISTINCT v0.c0, vt1.c1, vt1.c0 FROM v0 INNER JOIN vt1 ON CASE ((v0.c0)>=(vt1.c1))  WHEN (NOT (-6.44226735E8)) THEN TRIM(DISTINCT vt1.c0) WHEN ((((v0.c0)OR(vt1.c1)))OR(vt1.c0)) THEN (+ ('(7,>')) WHEN ((vt1.c0)&(vt1.c1)) THEN 'fA ySD' ELSE 0.21880281413020164 END WHERE (((highlight((((x'e547', vt1.c1, vt1.c1))!=((vt1.c0, vt1.c0, vt1.c0))), ((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)), ((((((((v0.c0)OR(vt1.c0)))OR(vt1.c1)))OR(NULL)))AND('l렊C]L')), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))) ISNULL));
SELECT DISTINCT v0.c0, vt1.c1, vt1.c0 FROM v0 INNER JOIN vt1 ON CASE ((v0.c0)>=(vt1.c1))  WHEN (NOT (-6.44226735E8)) THEN TRIM(DISTINCT vt1.c0) WHEN ((((v0.c0)OR(vt1.c1)))OR(vt1.c0)) THEN (+ ('(7,>')) WHEN ((vt1.c0)&(vt1.c1)) THEN 'fA ySD' ELSE 0.21880281413020164 END;
SELECT ALL v0.c0, vt1.c1 FROM v0, vt1 GROUP BY v0.c0, vt1.c1;
SELECT ALL v0.c0, vt1.c1 FROM v0, vt1 WHERE (v0.c0) GROUP BY v0.c0, vt1.c1 UNION SELECT v0.c0, vt1.c1 FROM v0, vt1 WHERE ((NOT (v0.c0))) GROUP BY v0.c0, vt1.c1 UNION SELECT ALL v0.c0, vt1.c1 FROM v0, vt1 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0, vt1.c1;
SELECT ALL v0.c0, vt1.c1 FROM v0, vt1 GROUP BY v0.c0, vt1.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(((SUM(vt0.c0))*(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(((SUM(vt0.c0))*(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING ((AVG(((SUM(vt0.c0))*(vt0.c0)))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((((CASE WHEN v0.c0 THEN x'' ELSE v0.c0 END)OR(((v0.c0)IS(x'')))))AND(((NULL) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((CASE WHEN v0.c0 THEN x'' ELSE v0.c0 END)OR(((v0.c0)IS(x'')))))AND(((NULL) NOT BETWEEN (v0.c0) AND (v0.c0))))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((CASE WHEN v0.c0 THEN x'' ELSE v0.c0 END)OR(((v0.c0)IS(x'')))))AND(((NULL) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0))) NOT BETWEEN (MAX(vt0.c0, vt0.c0)) AND (vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)>>(vt0.c0))) NOT BETWEEN (MAX(vt0.c0, vt0.c0)) AND (vt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)>>(vt0.c0))) NOT BETWEEN (MAX(vt0.c0, vt0.c0)) AND (vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON CASE -1305191711  WHEN vt0.c0 THEN (vt1.c1 IN (vt0.c0)) ELSE v0.c0 END FULL OUTER JOIN v0 ON (((-9.46476482E8, (- (vt1.c1)), (('456374282') BETWEEN (vt0.c0) AND (v0.c0))))>=((((vt0.c0) ISNULL), (((vt1.c1))>((v0.c0))), (vt0.c0 IN (vt1.c1))))) GROUP BY v0.c0, vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(MIN(vt0.c0) AS BLOB) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(MIN(vt0.c0) AS BLOB))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(MIN(vt0.c0) AS BLOB)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(MIN(vt0.c0) AS BLOB) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(MIN(vt0.c0) AS BLOB))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(MIN(vt0.c0) AS BLOB)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0, vt1.c1, vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((((((vt1.c1)OR(vt1.c0)))OR(vt0.c0))) ISNULL) CROSS JOIN vt1 ON CASE (~ (vt1.c0))  WHEN ((((vt0.c0)OR(vt1.c0)))OR(v0.c0)) THEN (((vt0.c0, 6.13166844E8, vt1.c0))==(('666108162', vt1.c1, vt1.c0))) END;
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN v0 ON ((((((((CAST(vt1.c0 AS NUMERIC))OR(vt1.c0 COLLATE NOCASE)))OR((- (vt1.c0)))))AND(((v0.c0)&(vt0.c0)))))OR((('-2101809102')<>(vt0.c0)))) RIGHT OUTER JOIN vt0 ON ((0.1700568557546306 IN ()) IN ());
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((+ ('rRgJ(M~Z'))) NOT BETWEEN (((v0.c0) IS TRUE)) AND (TOTAL_CHANGES()))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((+ ('rRgJ(M~Z'))) NOT BETWEEN (((v0.c0) IS TRUE)) AND (TOTAL_CHANGES()))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((+ ('rRgJ(M~Z'))) NOT BETWEEN (((v0.c0) IS TRUE)) AND (TOTAL_CHANGES()))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(MIN(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(MIN(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(MIN(vt0.c0))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((+ (vt0.c0))) ISNULL)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((+ (vt0.c0))) ISNULL)))) UNION ALL SELECT * FROM vt0 WHERE ((((((+ (vt0.c0))) ISNULL)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt1.c0, v0.c0, vt1.c1 FROM vt1, v0;
SELECT DISTINCT vt1.c0, v0.c0, vt1.c1 FROM vt1, v0 WHERE (((((((vt1.c1)OR(vt1.c1)))AND(vt1.c1))) BETWEEN ((+ (vt1.c0))) AND (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))AND(v0.c0)))OR(vt1.c1))))) UNION SELECT DISTINCT vt1.c0, v0.c0, vt1.c1 FROM vt1, v0 WHERE ((NOT (((((((vt1.c1)OR(vt1.c1)))AND(vt1.c1))) BETWEEN ((+ (vt1.c0))) AND (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))AND(v0.c0)))OR(vt1.c1))))))) UNION SELECT DISTINCT vt1.c0, v0.c0, vt1.c1 FROM vt1, v0 WHERE (((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c1))) BETWEEN ((+ (vt1.c0))) AND (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))AND(v0.c0)))OR(vt1.c1))))) ISNULL));
SELECT DISTINCT vt1.c0, v0.c0, vt1.c1 FROM vt1, v0;
SELECT ALL vt1.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON (((((v0.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0)))) NOT NULL) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON (((((v0.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0)))) NOT NULL) WHERE (CASE ((v0.c0)>>(vt0.c0))  WHEN v0.c0 THEN ((vt1.c0) NOTNULL) END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON (((((v0.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0)))) NOT NULL) WHERE ((NOT (CASE ((v0.c0)>>(vt0.c0))  WHEN v0.c0 THEN ((vt1.c0) NOTNULL) END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON (((((v0.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0)))) NOT NULL) WHERE (((CASE ((v0.c0)>>(vt0.c0))  WHEN v0.c0 THEN ((vt1.c0) NOTNULL) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON (((((v0.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0)))) NOT NULL) GROUP BY vt1.c0;
SELECT vt1.c1, vt0.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt0.c0, v0.c0;
SELECT ALL vt1.c1, vt0.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt0.c0, v0.c0 HAVING x'4f45' UNION ALL SELECT ALL vt1.c1, vt0.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt0.c0, v0.c0 HAVING (NOT (x'4f45')) UNION ALL SELECT vt1.c1, vt0.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt0.c0, v0.c0 HAVING ((x'4f45') ISNULL);
SELECT vt1.c1, vt0.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt0.c0, v0.c0;
SELECT ALL vt1.c1, vt0.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt0.c0, v0.c0 HAVING x'4f45' UNION ALL SELECT ALL vt1.c1, vt0.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt0.c0, v0.c0 HAVING (NOT (x'4f45')) UNION ALL SELECT vt1.c1, vt0.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt0.c0, v0.c0 HAVING ((x'4f45') ISNULL);
SELECT vt1.c1, vt0.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt0.c0, v0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CASE WHEN -1.89637172E9 THEN NULL END) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN -1.89637172E9 THEN NULL END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN -1.89637172E9 THEN NULL END) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT DISTINCT * FROM vt1, vt0, v0 WHERE ((((((vt0.c0) NOT BETWEEN (x'b982') AND (vt1.c1)), json_array_length(vt1.c1, v0.c0), v0.c0 COLLATE BINARY))<(((vt1.c1 IN ()), vt1.c1 COLLATE BINARY, CASE 0.8962134114504345  WHEN v0.c0 THEN v0.c0 END)))) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE ((NOT ((((((vt0.c0) NOT BETWEEN (x'b982') AND (vt1.c1)), json_array_length(vt1.c1, v0.c0), v0.c0 COLLATE BINARY))<(((vt1.c1 IN ()), vt1.c1 COLLATE BINARY, CASE 0.8962134114504345  WHEN v0.c0 THEN v0.c0 END)))))) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE ((((((((vt0.c0) NOT BETWEEN (x'b982') AND (vt1.c1)), json_array_length(vt1.c1, v0.c0), v0.c0 COLLATE BINARY))<(((vt1.c1 IN ()), vt1.c1 COLLATE BINARY, CASE 0.8962134114504345  WHEN v0.c0 THEN v0.c0 END)))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN CAST(vt1.c1 AS NUMERIC) THEN vt1.c1 ELSE ((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)) END) GROUP BY vt1.c0, vt0.c0, vt1.c1 UNION SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 WHERE ((NOT (CASE vt0.c0 COLLATE NOCASE  WHEN CAST(vt1.c1 AS NUMERIC) THEN vt1.c1 ELSE ((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)) END))) GROUP BY vt1.c0, vt0.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 WHERE (((CASE vt0.c0 COLLATE NOCASE  WHEN CAST(vt1.c1 AS NUMERIC) THEN vt1.c1 ELSE ((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)) END) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT vt1.c1 FROM v0, vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM v0, vt1 GROUP BY vt1.c1 HAVING ((((NULL)=(vt1.c0))) BETWEEN ((((vt1.c0)) NOT BETWEEN ((MAX(COUNT(*)))) AND ((vt1.c0)))) AND (MIN(TOTAL(MIN(vt1.c0))))) UNION ALL SELECT vt1.c1 FROM v0, vt1 GROUP BY vt1.c1 HAVING (NOT (((((NULL)==(vt1.c0))) BETWEEN ((((vt1.c0)) NOT BETWEEN ((MAX(COUNT(*)))) AND ((vt1.c0)))) AND (MIN(TOTAL(MIN(vt1.c0))))))) UNION ALL SELECT ALL vt1.c1 FROM v0, vt1 GROUP BY vt1.c1 HAVING ((((((NULL)==(vt1.c0))) BETWEEN ((((vt1.c0)) NOT BETWEEN ((MAX(COUNT(*)))) AND ((vt1.c0)))) AND (MIN(TOTAL(MIN(vt1.c0)))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((((vt1.c1 IN ()))|((((vt1.c0, vt1.c1, 0.7375931595289125)) BETWEEN ((vt1.c0, x'', vt1.c1)) AND ((vt1.c1, vt1.c0, vt1.c0)))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((vt1.c1 IN ()))|((((vt1.c0, vt1.c1, 0.7375931595289125)) BETWEEN ((vt1.c0, x'', vt1.c1)) AND ((vt1.c1, vt1.c0, vt1.c0)))))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((((vt1.c1 IN ()))|((((vt1.c0, vt1.c1, 0.7375931595289125)) BETWEEN ((vt1.c0, x'', vt1.c1)) AND ((vt1.c1, vt1.c0, vt1.c0)))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((0.29959346335261094 IN ()))>(-636009884))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((0.29959346335261094 IN ()))>(-636009884))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((0.29959346335261094 IN ()))>(-636009884))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt1.c1 FROM vt0, v0, vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt0, v0, vt1 WHERE ((((((((((- (vt0.c0)))OR(LIKELY(DISTINCT vt1.c0))))OR(((v0.c0) IS TRUE))))AND(((((((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(v0.c0)))AND(vt1.c1)))AND(v0.c0)))))AND(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt0, v0, vt1 WHERE ((NOT ((((((((((- (vt0.c0)))OR(LIKELY(DISTINCT vt1.c0))))OR(((v0.c0) IS TRUE))))AND(((((((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(v0.c0)))AND(vt1.c1)))AND(v0.c0)))))AND(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt0, v0, vt1 WHERE ((((((((((((- (vt0.c0)))OR(LIKELY(DISTINCT vt1.c0))))OR(((v0.c0) IS TRUE))))AND(((((((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(v0.c0)))AND(vt1.c1)))AND(v0.c0)))))AND(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))))) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt0, v0, vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING GROUP_CONCAT(SUM(vt1.c1)) UNION ALL SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING (NOT (GROUP_CONCAT(SUM(vt1.c1)))) UNION ALL SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING ((GROUP_CONCAT(SUM(vt1.c1))) ISNULL);
SELECT ALL * FROM v0 NOT INDEXED, vt1, vt0;
SELECT ALL * FROM v0, vt1, vt0 WHERE (((CASE WHEN vt1.c0 THEN v0.c0 END)/((+ (vt0.c0))))) UNION ALL SELECT * FROM v0, vt1, vt0 WHERE ((NOT (((CASE WHEN vt1.c0 THEN v0.c0 END)/((+ (vt0.c0))))))) UNION ALL SELECT ALL * FROM v0, vt1, vt0 WHERE (((((CASE WHEN vt1.c0 THEN v0.c0 END)/((+ (vt0.c0))))) ISNULL));
SELECT ALL * FROM v0 NOT INDEXED, vt1, vt0;
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT DISTINCT * FROM vt0, v0, vt1 WHERE (((((((vt1.c0)LIKE(vt1.c0)))OR(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 ELSE v0.c0 END)))OR(v0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((NOT (((((((vt1.c0)LIKE(vt1.c0)))OR(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 ELSE v0.c0 END)))OR(v0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE (((((((((vt1.c0)LIKE(vt1.c0)))OR(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 ELSE v0.c0 END)))OR(v0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT v0.c0, vt1.c1, vt0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt1.c1, vt0.c0, vt1.c0;
SELECT v0.c0, vt1.c1, vt0.c0, vt1.c0 FROM v0, vt0, vt1 WHERE (((((((vt1.c0)AND(vt0.c0)))AND('0.250084617955631'))) BETWEEN ((vt1.c1 IN (vt1.c1))) AND (CAST(vt0.c0 AS REAL)))) GROUP BY v0.c0, vt1.c1, vt0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c1, vt0.c0, vt1.c0 FROM v0, vt0, vt1 WHERE ((NOT (((((((vt1.c0)AND(vt0.c0)))AND('0.250084617955631'))) BETWEEN ((vt1.c1 IN (vt1.c1))) AND (CAST(vt0.c0 AS REAL)))))) GROUP BY v0.c0, vt1.c1, vt0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c1, vt0.c0, vt1.c0 FROM v0, vt0, vt1 WHERE (((((((((vt1.c0)AND(vt0.c0)))AND('0.250084617955631'))) BETWEEN ((vt1.c1 IN (vt1.c1))) AND (CAST(vt0.c0 AS REAL)))) ISNULL)) GROUP BY v0.c0, vt1.c1, vt0.c0, vt1.c0;
SELECT v0.c0, vt1.c1, vt0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt1.c1, vt0.c0, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING TOTAL(vt1.c0) COLLATE NOCASE UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (TOTAL(vt1.c0) COLLATE NOCASE)) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((TOTAL(vt1.c0) COLLATE NOCASE) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING TOTAL(vt1.c0) COLLATE NOCASE UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (TOTAL(vt1.c0) COLLATE NOCASE)) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((TOTAL(vt1.c0) COLLATE NOCASE) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))=((vt0.c0 COLLATE RTRIM)))) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))==((vt0.c0 COLLATE RTRIM)))))) UNION ALL SELECT * FROM vt0, v0 WHERE ((((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))=((vt0.c0 COLLATE RTRIM)))) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1, v0 WHERE (CASE WHEN ((v0.c0) ISNULL) THEN CAST(vt1.c0 AS REAL) ELSE (~ (vt1.c1)) END) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((NOT (CASE WHEN ((v0.c0) ISNULL) THEN CAST(vt1.c0 AS REAL) ELSE (~ (vt1.c1)) END))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE (((CASE WHEN ((v0.c0) ISNULL) THEN CAST(vt1.c0 AS REAL) ELSE (~ (vt1.c1)) END) ISNULL));
SELECT DISTINCT * FROM vt1, v0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE ((((v0.c0)) BETWEEN (((NOT (vt0.c0)))) AND (((~ (vt0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE ((NOT ((((v0.c0)) BETWEEN (((NOT (vt0.c0)))) AND (((~ (vt0.c0)))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE ((((((v0.c0)) BETWEEN (((NOT (vt0.c0)))) AND (((~ (vt0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING AVG(LIKELY(vt1.c0)) UNION ALL SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING (NOT (AVG(LIKELY(vt1.c0)))) UNION ALL SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING ((AVG(LIKELY(vt1.c0))) ISNULL);
SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING AVG(LIKELY(vt1.c0)) UNION ALL SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING (NOT (AVG(LIKELY(vt1.c0)))) UNION ALL SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING ((AVG(LIKELY(vt1.c0))) ISNULL);
SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (NULL) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((NULL) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE (CASE (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))  WHEN SQLITE_SOURCE_ID() THEN ((v0.c0) ISNULL) END) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (CASE (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))  WHEN SQLITE_SOURCE_ID() THEN ((v0.c0) ISNULL) END))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((CASE (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))  WHEN SQLITE_SOURCE_ID() THEN ((v0.c0) ISNULL) END) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT v0.c0, vt0.c0 FROM vt1, v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt1, v0, vt0 WHERE (((vt1.c1) NOT BETWEEN ('-331959112') AND (vt1.c0)) COLLATE NOCASE) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt1, v0, vt0 WHERE ((NOT (((vt1.c1) NOT BETWEEN ('-331959112') AND (vt1.c0)) COLLATE NOCASE))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt1, v0, vt0 WHERE (((((vt1.c1) NOT BETWEEN ('-331959112') AND (vt1.c0)) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt1, v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING TOTAL(TOTAL(vt1.c0)) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (TOTAL(TOTAL(vt1.c0)))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((TOTAL(TOTAL(vt1.c0))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (CASE x''  WHEN v0.c0 THEN v0.c0 END COLLATE RTRIM) UNION ALL SELECT * FROM v0 WHERE ((NOT (CASE x''  WHEN v0.c0 THEN v0.c0 END COLLATE RTRIM))) UNION ALL SELECT * FROM v0 WHERE (((CASE x''  WHEN v0.c0 THEN v0.c0 END COLLATE RTRIM) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT vt1.c0, v0.c0, vt1.c1 FROM v0, vt1;
SELECT DISTINCT vt1.c0, v0.c0, vt1.c1 FROM v0, vt1 WHERE (LIKELIHOOD(DISTINCT CAST(v0.c0 AS REAL), 0.7871451679400961)) UNION SELECT DISTINCT vt1.c0, v0.c0, vt1.c1 FROM v0, vt1 WHERE ((NOT (LIKELIHOOD(DISTINCT CAST(v0.c0 AS REAL), 0.7871451679400961)))) UNION SELECT DISTINCT vt1.c0, v0.c0, vt1.c1 FROM v0, vt1 WHERE (((LIKELIHOOD(DISTINCT CAST(v0.c0 AS REAL), 0.7871451679400961)) ISNULL));
SELECT DISTINCT vt1.c0, v0.c0, vt1.c1 FROM v0, vt1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((NOT (((((v0.c0)AND(v0.c0)))OR(v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((NOT (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE ((CAST(v0.c0 AS TEXT) IN ())) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT ((CAST(v0.c0 AS TEXT) IN ())))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((((CAST(v0.c0 AS TEXT) IN ())) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT DISTINCT * FROM vt1, vt0, v0 WHERE (((0.9749701703226131) ISNULL)) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE ((NOT (((0.9749701703226131) ISNULL)))) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE (((((0.9749701703226131) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT ALL vt1.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1, vt0 WHERE (NULL) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1, vt0 WHERE ((NOT (NULL))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1, vt0 WHERE (((NULL) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt1.c1;
SELECT v0.c0, vt1.c1, vt0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt1.c1, vt0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c1, vt0.c0, vt1.c0 FROM v0, vt0, vt1 NOT INDEXED GROUP BY v0.c0, vt1.c1, vt0.c0, vt1.c0 HAVING CASE vt0.c0  WHEN MAX(TOTAL(vt1.c1)) THEN TOTAL(vt1.c1) END COLLATE BINARY UNION ALL SELECT ALL v0.c0, vt1.c1, vt0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt1.c1, vt0.c0, vt1.c0 HAVING (NOT (CASE vt0.c0  WHEN MAX(TOTAL(vt1.c1)) THEN TOTAL(vt1.c1) END COLLATE BINARY)) UNION ALL SELECT ALL v0.c0, vt1.c1, vt0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt1.c1, vt0.c0, vt1.c0 HAVING ((CASE vt0.c0  WHEN MAX(TOTAL(vt1.c1)) THEN TOTAL(vt1.c1) END COLLATE BINARY) ISNULL);
SELECT ALL * FROM v0 FULL OUTER JOIN vt1 ON CASE WHEN ((v0.c0)<(vt1.c0)) THEN CAST(0.5225840277276906 AS BLOB) END;
SELECT * FROM v0 FULL OUTER JOIN vt1 ON CASE WHEN ((v0.c0)<(vt1.c0)) THEN CAST(0.5225840277276906 AS BLOB) END WHERE (NULL) UNION ALL SELECT * FROM v0 FULL OUTER JOIN vt1 ON CASE WHEN ((v0.c0)<(vt1.c0)) THEN CAST(0.5225840277276906 AS BLOB) END WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM v0 FULL OUTER JOIN vt1 ON CASE WHEN ((v0.c0)<(vt1.c0)) THEN CAST(0.5225840277276906 AS BLOB) END WHERE (((NULL) ISNULL));
SELECT ALL * FROM v0 FULL OUTER JOIN vt1 ON CASE WHEN ((v0.c0)<(vt1.c0)) THEN CAST(0.5225840277276906 AS BLOB) END;
SELECT DISTINCT vt0.c0 FROM v0, vt1 FULL OUTER JOIN vt0 ON (((v0.c0 IN ())) NOT NULL);
SELECT DISTINCT vt0.c0 FROM v0, vt1 FULL OUTER JOIN vt0 ON (((v0.c0 IN ())) NOT NULL) WHERE ((((((((((vt0.c0 IN ()))OR((vt0.c0 IN (v0.c0)))))OR(LIKELY(DISTINCT vt1.c0))))AND(CAST(vt1.c1 AS TEXT))))AND(CAST(v0.c0 AS REAL)))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt1 FULL OUTER JOIN vt0 ON (((v0.c0 IN ())) NOT NULL) WHERE ((NOT ((((((((((vt0.c0 IN ()))OR((vt0.c0 IN (v0.c0)))))OR(LIKELY(DISTINCT vt1.c0))))AND(CAST(vt1.c1 AS TEXT))))AND(CAST(v0.c0 AS REAL)))))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt1 FULL OUTER JOIN vt0 ON (((v0.c0 IN ())) NOT NULL) WHERE ((((((((((((vt0.c0 IN ()))OR((vt0.c0 IN (v0.c0)))))OR(LIKELY(DISTINCT vt1.c0))))AND(CAST(vt1.c1 AS TEXT))))AND(CAST(v0.c0 AS REAL)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, vt1 FULL OUTER JOIN vt0 ON (((v0.c0 IN ())) NOT NULL);
SELECT ALL vt0.c0, vt1.c1, v0.c0 FROM vt0 FULL OUTER JOIN vt1 ON 0.9939006201869773 CROSS JOIN v0 ON CAST(CAST(v0.c0 AS TEXT) AS INTEGER) GROUP BY vt0.c0, vt1.c1, v0.c0;
SELECT vt0.c0, vt1.c1, v0.c0 FROM vt0 NOT INDEXED FULL OUTER JOIN vt1 ON 0.9939006201869773 CROSS JOIN v0 ON CAST(CAST(v0.c0 AS TEXT) AS INTEGER) WHERE (CAST((('224687303')>>(v0.c0)) AS REAL)) GROUP BY vt0.c0, vt1.c1, v0.c0 UNION SELECT ALL vt0.c0, vt1.c1, v0.c0 FROM vt0 FULL OUTER JOIN vt1 ON 0.9939006201869773 CROSS JOIN v0 ON CAST(CAST(v0.c0 AS TEXT) AS INTEGER) WHERE ((NOT (CAST((('224687303')>>(v0.c0)) AS REAL)))) GROUP BY vt0.c0, vt1.c1, v0.c0 UNION SELECT ALL vt0.c0, vt1.c1, v0.c0 FROM vt0 FULL OUTER JOIN vt1 ON 0.9939006201869773 CROSS JOIN v0 ON CAST(CAST(v0.c0 AS TEXT) AS INTEGER) WHERE (((CAST((('224687303')>>(v0.c0)) AS REAL)) ISNULL)) GROUP BY vt0.c0, vt1.c1, v0.c0;
SELECT ALL vt0.c0, vt1.c1, v0.c0 FROM vt0 FULL OUTER JOIN vt1 ON 0.9939006201869773 CROSS JOIN v0 ON CAST(CAST(v0.c0 AS TEXT) AS INTEGER) GROUP BY vt0.c0, vt1.c1, v0.c0;
SELECT ALL vt0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0 HAVING (((~ (vt1.c1)))||((- (TOTAL(v0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0 HAVING (NOT ((((~ (vt1.c1)))||((- (TOTAL(v0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0 HAVING (((((~ (vt1.c1)))||((- (TOTAL(v0.c0)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0 HAVING (((~ (vt1.c1)))||((- (TOTAL(v0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0 HAVING (NOT ((((~ (vt1.c1)))||((- (TOTAL(v0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0 HAVING (((((~ (vt1.c1)))||((- (TOTAL(v0.c0)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0;
SELECT SUM(((((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((v0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, v0.c0, vt1.c1))) IN (((v0.c0)IS(v0.c0))))) FROM vt0, vt1, v0;
SELECT * FROM vt1, v0;
SELECT ALL * FROM vt1, v0 WHERE (v0.c0) UNION ALL SELECT * FROM vt1, v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL * FROM vt1, v0 WHERE (((v0.c0) ISNULL));
SELECT * FROM vt1, v0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((vt0.c0 IN ())) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((vt0.c0 IN ())))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt0.c0 IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST((+ (v0.c0)) AS INTEGER)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST((+ (v0.c0)) AS INTEGER)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST((+ (v0.c0)) AS INTEGER)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 NOT INDEXED GROUP BY vt0.c0 HAVING TOTAL(((v0.c0) NOT NULL)) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(((v0.c0) NOT NULL)))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((TOTAL(((v0.c0) NOT NULL))) ISNULL);
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 NOT INDEXED GROUP BY vt0.c0 HAVING TOTAL(((v0.c0) NOT NULL)) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(((v0.c0) NOT NULL)))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((TOTAL(((v0.c0) NOT NULL))) ISNULL);
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt1, vt0 INNER JOIN v0 ON (((NULL)+(vt1.c0)) IN (CAST(vt1.c1 AS BLOB)));
SELECT ALL * FROM vt1, vt0 INNER JOIN v0 ON (((NULL)+(vt1.c0)) IN (CAST(vt1.c1 AS BLOB))) WHERE (((vt0.c0)%(v0.c0)) COLLATE BINARY) UNION ALL SELECT * FROM vt1, vt0 INNER JOIN v0 ON (((NULL)+(vt1.c0)) IN (CAST(vt1.c1 AS BLOB))) WHERE ((NOT (((vt0.c0)%(v0.c0)) COLLATE BINARY))) UNION ALL SELECT * FROM vt1, vt0 INNER JOIN v0 ON (((NULL)+(vt1.c0)) IN (CAST(vt1.c1 AS BLOB))) WHERE (((((vt0.c0)%(v0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt1, vt0 INNER JOIN v0 ON (((NULL)+(vt1.c0)) IN (CAST(vt1.c1 AS BLOB)));
SELECT DISTINCT vt0.c0, vt1.c0, v0.c0 FROM v0, vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0, v0.c0 FROM v0, vt1, vt0 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0)))))) UNION SELECT DISTINCT vt0.c0, vt1.c0, v0.c0 FROM v0, vt1, vt0 WHERE ((NOT ((NOT ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0)))))))) UNION SELECT DISTINCT vt0.c0, vt1.c0, v0.c0 FROM v0, vt1, vt0 WHERE ((((NOT ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0, v0.c0 FROM v0, vt1, vt0;
SELECT vt1.c1, v0.c0, vt0.c0 FROM v0, vt0 CROSS JOIN vt1 ON CAST(v0.c0 AS INTEGER) GROUP BY vt1.c1, v0.c0, vt0.c0;
SELECT vt1.c1, v0.c0, vt0.c0 FROM v0, vt0 CROSS JOIN vt1 ON CAST(v0.c0 AS INTEGER) WHERE (NULL) GROUP BY vt1.c1, v0.c0, vt0.c0 UNION SELECT vt1.c1, v0.c0, vt0.c0 FROM v0, vt0 CROSS JOIN vt1 ON CAST(v0.c0 AS INTEGER) WHERE ((NOT (NULL))) GROUP BY vt1.c1, v0.c0, vt0.c0 UNION SELECT vt1.c1, v0.c0, vt0.c0 FROM v0, vt0 CROSS JOIN vt1 ON CAST(v0.c0 AS INTEGER) WHERE (((NULL) ISNULL)) GROUP BY vt1.c1, v0.c0, vt0.c0;
SELECT vt1.c1, v0.c0, vt0.c0 FROM v0, vt0 CROSS JOIN vt1 ON CAST(v0.c0 AS INTEGER) GROUP BY vt1.c1, v0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE ((vt0.c0) IS TRUE)  WHEN ((COUNT(vt0.c0))>(vt0.c0)) THEN AVG(GROUP_CONCAT(AVG(vt0.c0))) WHEN ((((vt0.c0)AND(vt0.c0)))OR(AVG(vt0.c0))) THEN vt0.c0 COLLATE RTRIM WHEN vt0.c0 THEN TOTAL(vt0.c0) ELSE ((vt0.c0)>(vt0.c0)) END UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE ((vt0.c0) IS TRUE)  WHEN ((COUNT(vt0.c0))>(vt0.c0)) THEN AVG(GROUP_CONCAT(AVG(vt0.c0))) WHEN ((((vt0.c0)AND(vt0.c0)))OR(AVG(vt0.c0))) THEN vt0.c0 COLLATE RTRIM WHEN vt0.c0 THEN TOTAL(vt0.c0) ELSE ((vt0.c0)>(vt0.c0)) END)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE ((vt0.c0) IS TRUE)  WHEN ((COUNT(vt0.c0))>(vt0.c0)) THEN AVG(GROUP_CONCAT(AVG(vt0.c0))) WHEN ((((vt0.c0)AND(vt0.c0)))OR(AVG(vt0.c0))) THEN vt0.c0 COLLATE RTRIM WHEN vt0.c0 THEN TOTAL(vt0.c0) ELSE ((vt0.c0)>(vt0.c0)) END) ISNULL);
SELECT ALL vt0.c0, vt1.c0, vt1.c1, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((CAST(vt1.c1 AS INTEGER)) NOT BETWEEN (x'') AND (CASE vt0.c0  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END)) FULL OUTER JOIN vt1 ON UNICODE(CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END);
SELECT DISTINCT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1 WHERE (CAST(((((vt1.c1)AND(vt1.c0)))OR(vt1.c1)) AS INTEGER)) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((NOT (CAST(((((vt1.c1)AND(vt1.c0)))OR(vt1.c1)) AS INTEGER)))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE (((CAST(((((vt1.c1)AND(vt1.c0)))OR(vt1.c1)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM v0, vt1;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((((vt0.c0))<((vt0.c0)))) IS FALSE)) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT ((((((vt0.c0))<((vt0.c0)))) IS FALSE)))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((((((vt0.c0))<((vt0.c0)))) IS FALSE)) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(COUNT(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(COUNT(vt0.c0))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (CAST(v0.c0 COLLATE NOCASE AS TEXT)) UNION ALL SELECT * FROM v0 WHERE ((NOT (CAST(v0.c0 COLLATE NOCASE AS TEXT)))) UNION ALL SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 COLLATE NOCASE AS TEXT)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((ABS(DISTINCT vt0.c0))AND(((vt0.c0)<<(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0x327f2488 ELSE vt0.c0 END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((ABS(DISTINCT vt0.c0))AND(((vt0.c0)<<(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0X327f2488 ELSE vt0.c0 END))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((ABS(DISTINCT vt0.c0))AND(((vt0.c0)<<(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0X327f2488 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (((((((vt1.c0))>=((vt1.c1))))AND(((v0.c0)<<(vt1.c0)))))AND((('-487492556') NOT BETWEEN (vt0.c0) AND (v0.c0)))) RIGHT OUTER JOIN v0 ON CAST(LIKELY('|Z') AS BLOB) GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (MIN(TOTAL(AVG(vt0.c0))) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((MIN(TOTAL(AVG(vt0.c0))) IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((MIN(TOTAL(AVG(vt0.c0))) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (MIN(TOTAL(AVG(vt0.c0))) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((MIN(TOTAL(AVG(vt0.c0))) IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((MIN(TOTAL(AVG(vt0.c0))) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CASE ((v0.c0)||(v0.c0))  WHEN json_quote(vt1.c1) THEN TRIM(DISTINCT vt1.c1, vt0.c0) END LEFT OUTER JOIN v0 ON (((((v0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(v0.c0))) AND (CASE NULL  WHEN vt1.c0 THEN NULL END));
SELECT * FROM vt1 NOT INDEXED CROSS JOIN vt0 ON CASE ((v0.c0)||(v0.c0))  WHEN json_quote(vt1.c1) THEN TRIM(DISTINCT vt1.c1, vt0.c0) END LEFT OUTER JOIN v0 ON (((((v0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(v0.c0))) AND (CASE NULL  WHEN vt1.c0 THEN NULL END)) WHERE (((((vt1.c1)IS(0.5175660016654442)))>>(vt0.c0))) UNION ALL SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CASE ((v0.c0)||(v0.c0))  WHEN json_quote(vt1.c1) THEN TRIM(DISTINCT vt1.c1, vt0.c0) END LEFT OUTER JOIN v0 ON (((((v0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(v0.c0))) AND (CASE NULL  WHEN vt1.c0 THEN NULL END)) WHERE ((NOT (((((vt1.c1)IS(0.5175660016654442)))>>(vt0.c0))))) UNION ALL SELECT * FROM vt1 CROSS JOIN vt0 ON CASE ((v0.c0)||(v0.c0))  WHEN json_quote(vt1.c1) THEN TRIM(DISTINCT vt1.c1, vt0.c0) END LEFT OUTER JOIN v0 ON (((((v0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(v0.c0))) AND (CASE NULL  WHEN vt1.c0 THEN NULL END)) WHERE (((((((vt1.c1)IS(0.5175660016654442)))>>(vt0.c0))) ISNULL));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CASE ((v0.c0)||(v0.c0))  WHEN json_quote(vt1.c1) THEN TRIM(DISTINCT vt1.c1, vt0.c0) END LEFT OUTER JOIN v0 ON (((((v0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(v0.c0))) AND (CASE NULL  WHEN vt1.c0 THEN NULL END));
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((((vt0.c0)/(v0.c0)))||(((vt0.c0)>(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((((vt0.c0)/(v0.c0)))||(((vt0.c0)>(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((((vt0.c0)/(v0.c0)))||(((vt0.c0)>(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0) IS TRUE)))<(((((vt0.c0))<=((vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0) IS TRUE)))<(((((vt0.c0))<=((vt0.c0))))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0) IS TRUE)))<(((((vt0.c0))<=((vt0.c0))))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT * FROM vt1, v0;
SELECT ALL * FROM vt1, v0 WHERE (CASE NULL  WHEN ((0.4245383532239497)GLOB(vt1.c0)) THEN ((v0.c0) NOTNULL) END) UNION ALL SELECT ALL * FROM vt1, v0 WHERE ((NOT (CASE NULL  WHEN ((0.4245383532239497)GLOB(vt1.c0)) THEN ((v0.c0) NOTNULL) END))) UNION ALL SELECT ALL * FROM vt1, v0 WHERE (((CASE NULL  WHEN ((0.4245383532239497)GLOB(vt1.c0)) THEN ((v0.c0) NOTNULL) END) ISNULL));
SELECT * FROM vt1, v0;
SELECT DISTINCT vt0.c0, vt1.c0, vt1.c1, v0.c0 FROM vt0, v0 FULL OUTER JOIN vt1 ON COALESCE(((((((((vt1.c0)OR(v0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c1)), (((v0.c0)) NOT BETWEEN ((0.1779420922426289)) AND ((vt1.c0))));
SELECT DISTINCT vt0.c0, vt1.c0, vt1.c1, v0.c0 FROM vt0, v0 FULL OUTER JOIN vt1 ON COALESCE(((((((((vt1.c0)OR(v0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c1)), (((v0.c0)) NOT BETWEEN ((0.1779420922426289)) AND ((vt1.c0)))) WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt1.c1, v0.c0 FROM vt0, v0 FULL OUTER JOIN vt1 ON COALESCE(((((((((vt1.c0)OR(v0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c1)), (((v0.c0)) NOT BETWEEN ((0.1779420922426289)) AND ((vt1.c0)))) WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt1.c1, v0.c0 FROM vt0, v0 FULL OUTER JOIN vt1 ON COALESCE(((((((((vt1.c0)OR(v0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c1)), (((v0.c0)) NOT BETWEEN ((0.1779420922426289)) AND ((vt1.c0)))) WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0, vt1.c1, v0.c0 FROM vt0, v0 FULL OUTER JOIN vt1 ON COALESCE(((((((((vt1.c0)OR(v0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c1)), (((v0.c0)) NOT BETWEEN ((0.1779420922426289)) AND ((vt1.c0))));
SELECT ALL v0.c0, vt1.c1, vt0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c1, vt0.c0;
SELECT ALL v0.c0, vt1.c1, vt0.c0 FROM vt0, vt1, v0 WHERE ((- (((vt1.c1)GLOB(vt0.c0))))) GROUP BY v0.c0, vt1.c1, vt0.c0 UNION SELECT ALL v0.c0, vt1.c1, vt0.c0 FROM vt0, vt1, v0 WHERE ((NOT ((- (((vt1.c1)GLOB(vt0.c0))))))) GROUP BY v0.c0, vt1.c1, vt0.c0 UNION SELECT ALL v0.c0, vt1.c1, vt0.c0 FROM vt0, vt1, v0 WHERE ((((- (((vt1.c1)GLOB(vt0.c0))))) ISNULL)) GROUP BY v0.c0, vt1.c1, vt0.c0;
SELECT ALL v0.c0, vt1.c1, vt0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c1, vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((MAX(vt0.c0))==('f_')) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (((MAX(vt0.c0))==('f_')))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((((MAX(vt0.c0))=('f_'))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((MAX(vt0.c0))==('f_')) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (((MAX(vt0.c0))==('f_')))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((((MAX(vt0.c0))=('f_'))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL * FROM vt0, v0, vt1;
SELECT * FROM vt0, v0, vt1 WHERE (ROUND(vt1.c1, vt1.c0)) UNION ALL SELECT ALL * FROM vt0, v0, vt1 WHERE ((NOT (ROUND(vt1.c1, vt1.c0)))) UNION ALL SELECT * FROM vt0, v0, vt1 WHERE (((ROUND(vt1.c1, vt1.c0)) ISNULL));
SELECT ALL * FROM vt0, v0, vt1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((('1ZKcZ' COLLATE BINARY)IS NOT(((v0.c0)OR(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((('1ZKcZ' COLLATE BINARY)IS NOT(((v0.c0)OR(v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((('1ZKcZ' COLLATE BINARY)IS NOT(((v0.c0)OR(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CAST('-1221652953' AS REAL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CAST('-1221652953' AS REAL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST('-1221652953' AS REAL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(COUNT(*) AS REAL) COLLATE NOCASE UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(COUNT(*) AS REAL) COLLATE NOCASE)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(COUNT(*) AS REAL) COLLATE NOCASE) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(COUNT(*) AS REAL) COLLATE NOCASE UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(COUNT(*) AS REAL) COLLATE NOCASE)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(COUNT(*) AS REAL) COLLATE NOCASE) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt1.c0)IS NOT(vt1.c1)))AND((vt0.c0 IN ()))))OR(json_type(vt1.c1)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt1.c0)IS NOT(vt1.c1)))AND((vt0.c0 IN ()))))OR(json_type(vt1.c1))) WHERE (((((vt1.c1 COLLATE NOCASE)AND(((((((((NULL)OR(vt1.c1)))OR(vt1.c1)))AND(vt0.c0)))AND(vt1.c1)))))AND(((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)))AND(vt1.c1)))AND(1107719373))))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt1.c0)IS NOT(vt1.c1)))AND((vt0.c0 IN ()))))OR(json_type(vt1.c1))) WHERE ((NOT (((((vt1.c1 COLLATE NOCASE)AND(((((((((NULL)OR(vt1.c1)))OR(vt1.c1)))AND(vt0.c0)))AND(vt1.c1)))))AND(((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)))AND(vt1.c1)))AND(1107719373))))))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt1.c0)IS NOT(vt1.c1)))AND((vt0.c0 IN ()))))OR(json_type(vt1.c1))) WHERE (((((((vt1.c1 COLLATE NOCASE)AND(((((((((NULL)OR(vt1.c1)))OR(vt1.c1)))AND(vt0.c0)))AND(vt1.c1)))))AND(((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)))AND(vt1.c1)))AND(1107719373))))) ISNULL));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt1.c0)IS NOT(vt1.c1)))AND((vt0.c0 IN ()))))OR(json_type(vt1.c1)));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0)<=(vt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)<=(vt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0)<=(vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM v0 CROSS JOIN vt0 ON (- (((vt0.c0)>(vt0.c0)))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0 CROSS JOIN vt0 ON (- (((vt0.c0)>(vt0.c0)))) WHERE ((((((NOT (vt0.c0)))AND(((v0.c0)|(vt0.c0)))))OR(v0.c0 COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0 CROSS JOIN vt0 ON (- (((vt0.c0)>(vt0.c0)))) WHERE ((NOT ((((((NOT (vt0.c0)))AND(((v0.c0)|(vt0.c0)))))OR(v0.c0 COLLATE NOCASE))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0 CROSS JOIN vt0 ON (- (((vt0.c0)>(vt0.c0)))) WHERE ((((((((NOT (vt0.c0)))AND(((v0.c0)|(vt0.c0)))))OR(v0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0 CROSS JOIN vt0 ON (- (((vt0.c0)>(vt0.c0)))) GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING JULIANDAY(CAST(v0.c0 AS NUMERIC), (v0.c0 IN ()), (v0.c0 IN ()), CAST(AVG(MIN(GROUP_CONCAT(GROUP_CONCAT('560864152')))) AS INTEGER), GROUP_CONCAT(TOTAL(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (JULIANDAY(CAST(v0.c0 AS NUMERIC), (v0.c0 IN ()), (v0.c0 IN ()), CAST(AVG(MIN(GROUP_CONCAT(GROUP_CONCAT('560864152')))) AS INTEGER), GROUP_CONCAT(TOTAL(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((JULIANDAY(CAST(v0.c0 AS NUMERIC), (v0.c0 IN ()), (v0.c0 IN ()), CAST(AVG(MIN(GROUP_CONCAT(GROUP_CONCAT('560864152')))) AS INTEGER), GROUP_CONCAT(TOTAL(v0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (NULL) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((NULL) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0, vt1.c1, v0.c0 FROM vt1, v0, vt0;
SELECT DISTINCT vt0.c0, vt1.c1, v0.c0 FROM vt1, v0, vt0 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c1 THEN v0.c0 ELSE vt0.c0 END)<(CAST(v0.c0 AS REAL)))) UNION SELECT DISTINCT vt0.c0, vt1.c1, v0.c0 FROM vt1, v0, vt0 WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c1 THEN v0.c0 ELSE vt0.c0 END)<(CAST(v0.c0 AS REAL)))))) UNION SELECT DISTINCT vt0.c0, vt1.c1, v0.c0 FROM vt1, v0, vt0 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c1 THEN v0.c0 ELSE vt0.c0 END)<(CAST(v0.c0 AS REAL)))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c1, v0.c0 FROM vt1, v0, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c1)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c1)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c1)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(MAX(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(MAX(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(MAX(vt0.c0))) ISNULL);
SELECT ALL vt1.c0, v0.c0 FROM vt1 FULL OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((v0.c0 COLLATE BINARY)) AND (((0.4998005765784933 IN (v0.c0)))));
SELECT vt1.c0, v0.c0 FROM vt1 FULL OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((v0.c0 COLLATE BINARY)) AND (((0.4998005765784933 IN (v0.c0))))) WHERE (((vt1.c0 COLLATE BINARY) NOT NULL)) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1 FULL OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((v0.c0 COLLATE BINARY)) AND (((0.4998005765784933 IN (v0.c0))))) WHERE ((NOT (((vt1.c0 COLLATE BINARY) NOT NULL)))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt1 FULL OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((v0.c0 COLLATE BINARY)) AND (((0.4998005765784933 IN (v0.c0))))) WHERE (((((vt1.c0 COLLATE BINARY) NOT NULL)) ISNULL));
SELECT ALL vt1.c0, v0.c0 FROM vt1 FULL OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((v0.c0 COLLATE BINARY)) AND (((0.4998005765784933 IN (v0.c0)))));
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT DISTINCT * FROM vt1, vt0, v0 WHERE (LOWER((((vt1.c0, v0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, v0.c0))))) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE ((NOT (LOWER((((vt1.c0, v0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, v0.c0))))))) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE (((LOWER((((vt1.c0, v0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, v0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT ALL v0.c0, vt1.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON vt1.c1 CROSS JOIN v0 ON ((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))<(((vt1.c1)+(vt0.c0)))) GROUP BY v0.c0, vt1.c1;
SELECT v0.c0, vt1.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON vt1.c1 CROSS JOIN v0 ON ((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))<(((vt1.c1)+(vt0.c0)))) WHERE ((((((NULL)OR(vt0.c0)))AND(vt0.c0)) IN ())) GROUP BY v0.c0, vt1.c1 UNION SELECT v0.c0, vt1.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON vt1.c1 CROSS JOIN v0 ON ((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))<(((vt1.c1)+(vt0.c0)))) WHERE ((NOT ((((((NULL)OR(vt0.c0)))AND(vt0.c0)) IN ())))) GROUP BY v0.c0, vt1.c1 UNION SELECT ALL v0.c0, vt1.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON vt1.c1 CROSS JOIN v0 ON ((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))<(((vt1.c1)+(vt0.c0)))) WHERE ((((((((NULL)OR(vt0.c0)))AND(vt0.c0)) IN ())) ISNULL)) GROUP BY v0.c0, vt1.c1;
SELECT ALL v0.c0, vt1.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON vt1.c1 CROSS JOIN v0 ON ((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))<(((vt1.c1)+(vt0.c0)))) GROUP BY v0.c0, vt1.c1;
SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING AVG(vt1.c0) UNION ALL SELECT ALL v0.c0 FROM v0, vt1 NOT INDEXED GROUP BY v0.c0 HAVING (NOT (AVG(vt1.c0))) UNION ALL SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING ((AVG(vt1.c0)) ISNULL);
SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING AVG(vt1.c0) UNION ALL SELECT ALL v0.c0 FROM v0, vt1 NOT INDEXED GROUP BY v0.c0 HAVING (NOT (AVG(vt1.c0))) UNION ALL SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING ((AVG(vt1.c0)) ISNULL);
SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0;
SELECT TOTAL('' COLLATE BINARY COLLATE RTRIM) FROM v0, vt0, vt1 ORDER BY ((vt1.c0)==(vt1.c0)) ASC, ((0.5751404626116241)GLOB(((v0.c0) ISNULL))) DESC;
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON 0xffffffffc0daeb7a;
SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON 0xffffffffc0daeb7a WHERE ((- (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) UNION ALL SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON 0xffffffffc0daeb7a WHERE ((NOT ((- (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))))))) UNION ALL SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON 0Xffffffffc0daeb7a WHERE ((((- (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) ISNULL));
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON 0xffffffffc0daeb7a;
SELECT DISTINCT vt1.c1, vt1.c0, v0.c0 FROM v0, vt1;
SELECT DISTINCT vt1.c1, vt1.c0, v0.c0 FROM v0, vt1 WHERE (0xffffffffa6c71ebe) UNION SELECT DISTINCT vt1.c1, vt1.c0, v0.c0 FROM v0, vt1 WHERE ((NOT (0Xffffffffa6c71ebe))) UNION SELECT DISTINCT vt1.c1, vt1.c0, v0.c0 FROM v0, vt1 WHERE (((0xffffffffa6c71ebe) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0, v0.c0 FROM v0, vt1;
SELECT ALL vt0.c0 FROM v0 CROSS JOIN vt0 ON TRIM((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))), ((vt0.c0)=(v0.c0))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 CROSS JOIN vt0 ON TRIM((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))), ((vt0.c0)==(v0.c0))) WHERE ('179230389') GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0 NOT INDEXED CROSS JOIN vt0 ON TRIM((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))), ((vt0.c0)=(v0.c0))) WHERE ((NOT ('179230389'))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0 CROSS JOIN vt0 ON TRIM((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))), ((vt0.c0)==(v0.c0))) WHERE ((('179230389') ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 CROSS JOIN vt0 ON TRIM((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))), ((vt0.c0)=(v0.c0))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CASE v0.c0  WHEN vt0.c0 THEN vt1.c0 END COLLATE BINARY LEFT OUTER JOIN v0 ON COALESCE(DISTINCT (~ (vt1.c0)), ((vt1.c0) NOT NULL)) GROUP BY vt0.c0;
SELECT SUM(CAST(CASE vt1.c1  WHEN NULL THEN vt1.c0 END AS NUMERIC)) FROM vt1 ORDER BY (((vt1.c1 IN ()))<=(((vt1.c1)LIKE(vt1.c0))));
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (TYPEOF(DISTINCT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (TYPEOF(DISTINCT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE (((TYPEOF(DISTINCT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt1, vt0 FULL OUTER JOIN v0 ON CAST(((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS NUMERIC);
SELECT DISTINCT * FROM vt1, vt0 FULL OUTER JOIN v0 ON CAST(((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS NUMERIC) WHERE (0.38777393685966743) UNION SELECT DISTINCT * FROM vt1, vt0 FULL OUTER JOIN v0 ON CAST(((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS NUMERIC) WHERE ((NOT (0.38777393685966743))) UNION SELECT DISTINCT * FROM vt1, vt0 FULL OUTER JOIN v0 ON CAST(((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS NUMERIC) WHERE (((0.38777393685966743) ISNULL));
SELECT DISTINCT * FROM vt1, vt0 FULL OUTER JOIN v0 ON CAST(((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS NUMERIC);
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((((((vt1.c0, vt1.c1, vt1.c0))>((vt1.c0, vt1.c1, NULL))))GLOB(((vt1.c1)!=(vt1.c0))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT ((((((vt1.c0, vt1.c1, vt1.c0))>((vt1.c0, vt1.c1, NULL))))GLOB(((vt1.c1)<>(vt1.c0))))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((((((((vt1.c0, vt1.c1, vt1.c0))>((vt1.c0, vt1.c1, NULL))))GLOB(((vt1.c1)!=(vt1.c0))))) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((LTRIM(v0.c0, COUNT(v0.c0))) IS FALSE) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((LTRIM(v0.c0, COUNT(v0.c0))) IS FALSE))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((LTRIM(v0.c0, COUNT(v0.c0))) IS FALSE)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((LTRIM(v0.c0, COUNT(v0.c0))) IS FALSE) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((LTRIM(v0.c0, COUNT(v0.c0))) IS FALSE))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((LTRIM(v0.c0, COUNT(v0.c0))) IS FALSE)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (NULL) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (NULL))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((NULL) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0)|((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0)|((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) WHERE (HEX((vt0.c0 IN ()))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0)|((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) WHERE ((NOT (HEX((vt0.c0 IN ()))))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0)|((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) WHERE (((HEX((vt0.c0 IN ()))) ISNULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0)|((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))));
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 NOT INDEXED WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))) BETWEEN (CAST(vt1.c1 AS INTEGER)) AND (SQLITE_COMPILEOPTION_USED(vt0.c0)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))) BETWEEN (CAST(vt1.c1 AS INTEGER)) AND (SQLITE_COMPILEOPTION_USED(vt0.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE ((((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))) BETWEEN (CAST(vt1.c1 AS INTEGER)) AND (SQLITE_COMPILEOPTION_USED(vt0.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(v0.c0 COLLATE RTRIM) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(v0.c0 COLLATE RTRIM))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(v0.c0 COLLATE RTRIM)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(v0.c0 COLLATE RTRIM) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(v0.c0 COLLATE RTRIM))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(v0.c0 COLLATE RTRIM)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0, vt1.c1, v0.c0 FROM v0, vt1, vt0;
SELECT vt0.c0, vt1.c1, v0.c0 FROM v0, vt1, vt0 WHERE ((+ (((vt0.c0)||(v0.c0))))) UNION ALL SELECT vt0.c0, vt1.c1, v0.c0 FROM v0, vt1, vt0 WHERE ((NOT ((+ (((vt0.c0)||(v0.c0))))))) UNION ALL SELECT ALL vt0.c0, vt1.c1, v0.c0 FROM v0, vt1, vt0 WHERE ((((+ (((vt0.c0)||(v0.c0))))) ISNULL));
SELECT vt0.c0, vt1.c1, v0.c0 FROM v0, vt1, vt0;
SELECT DISTINCT vt1.c1, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON NULL COLLATE NOCASE;
SELECT DISTINCT vt1.c1, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON NULL COLLATE NOCASE WHERE (((vt1.c0 COLLATE BINARY)&(((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1))))) UNION SELECT DISTINCT vt1.c1, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON NULL COLLATE NOCASE WHERE ((NOT (((vt1.c0 COLLATE BINARY)&(((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1))))))) UNION SELECT DISTINCT vt1.c1, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON NULL COLLATE NOCASE WHERE (((((vt1.c0 COLLATE BINARY)&(((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1))))) ISNULL));
SELECT DISTINCT vt1.c1, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON NULL COLLATE NOCASE;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((NOT (v0.c0)))GLOB((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT ((((NOT (v0.c0)))GLOB((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((((NOT (v0.c0)))GLOB((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt1 INNER JOIN v0 ON ((vt0.c0)%(vt1.c0)) COLLATE RTRIM INNER JOIN vt0 ON CASE CAST(v0.c0 AS BLOB)  WHEN UNLIKELY(DISTINCT v0.c0) THEN NULLIF(vt1.c0, vt1.c1) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) END GROUP BY vt1.c1, vt0.c0, vt1.c0;
SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt1 INNER JOIN v0 ON ((vt0.c0)%(vt1.c0)) COLLATE RTRIM INNER JOIN vt0 ON CASE CAST(v0.c0 AS BLOB)  WHEN UNLIKELY(DISTINCT v0.c0) THEN NULLIF(vt1.c0, vt1.c1) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) END GROUP BY vt1.c1, vt0.c0, vt1.c0 HAVING TOTAL(((vt1.c0)OR(NULL))) UNION ALL SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt1 INNER JOIN v0 ON ((vt0.c0)%(vt1.c0)) COLLATE RTRIM INNER JOIN vt0 ON CASE CAST(v0.c0 AS BLOB)  WHEN UNLIKELY(DISTINCT v0.c0) THEN NULLIF(vt1.c0, vt1.c1) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) END GROUP BY vt1.c1, vt0.c0, vt1.c0 HAVING (NOT (TOTAL(((vt1.c0)OR(NULL))))) UNION ALL SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt1 INNER JOIN v0 ON ((vt0.c0)%(vt1.c0)) COLLATE RTRIM INNER JOIN vt0 ON CASE CAST(v0.c0 AS BLOB)  WHEN UNLIKELY(DISTINCT v0.c0) THEN NULLIF(vt1.c0, vt1.c1) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) END GROUP BY vt1.c1, vt0.c0, vt1.c0 HAVING ((TOTAL(((vt1.c0)OR(NULL)))) ISNULL);
SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt1 INNER JOIN v0 ON ((vt0.c0)%(vt1.c0)) COLLATE RTRIM INNER JOIN vt0 ON CASE CAST(v0.c0 AS BLOB)  WHEN UNLIKELY(DISTINCT v0.c0) THEN NULLIF(vt1.c0, vt1.c1) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) END GROUP BY vt1.c1, vt0.c0, vt1.c0;
SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt1 INNER JOIN v0 ON ((vt0.c0)%(vt1.c0)) COLLATE RTRIM INNER JOIN vt0 ON CASE CAST(v0.c0 AS BLOB)  WHEN UNLIKELY(DISTINCT v0.c0) THEN NULLIF(vt1.c0, vt1.c1) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) END GROUP BY vt1.c1, vt0.c0, vt1.c0 HAVING TOTAL(((vt1.c0)OR(NULL))) UNION ALL SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt1 INNER JOIN v0 ON ((vt0.c0)%(vt1.c0)) COLLATE RTRIM INNER JOIN vt0 ON CASE CAST(v0.c0 AS BLOB)  WHEN UNLIKELY(DISTINCT v0.c0) THEN NULLIF(vt1.c0, vt1.c1) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) END GROUP BY vt1.c1, vt0.c0, vt1.c0 HAVING (NOT (TOTAL(((vt1.c0)OR(NULL))))) UNION ALL SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt1 INNER JOIN v0 ON ((vt0.c0)%(vt1.c0)) COLLATE RTRIM INNER JOIN vt0 ON CASE CAST(v0.c0 AS BLOB)  WHEN UNLIKELY(DISTINCT v0.c0) THEN NULLIF(vt1.c0, vt1.c1) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) END GROUP BY vt1.c1, vt0.c0, vt1.c0 HAVING ((TOTAL(((vt1.c0)OR(NULL)))) ISNULL);
SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt1 INNER JOIN v0 ON ((vt0.c0)%(vt1.c0)) COLLATE RTRIM INNER JOIN vt0 ON CASE CAST(v0.c0 AS BLOB)  WHEN UNLIKELY(DISTINCT v0.c0) THEN NULLIF(vt1.c0, vt1.c1) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) END GROUP BY vt1.c1, vt0.c0, vt1.c0;
SELECT * FROM v0, vt1;
SELECT ALL * FROM v0, vt1 WHERE (((0x79b11a94) BETWEEN (NULL) AND (CASE WHEN vt1.c1 THEN 0.7456350402197554 END))) UNION ALL SELECT ALL * FROM v0, vt1 WHERE ((NOT (((0x79b11a94) BETWEEN (NULL) AND (CASE WHEN vt1.c1 THEN 0.7456350402197554 END))))) UNION ALL SELECT ALL * FROM v0, vt1 WHERE (((((0x79b11a94) BETWEEN (NULL) AND (CASE WHEN vt1.c1 THEN 0.7456350402197554 END))) ISNULL));
SELECT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1 WHERE ((((vt1.c1)<<(v0.c0)) IN ())) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((NOT ((((vt1.c1)<<(v0.c0)) IN ())))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((((((vt1.c1)<<(v0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM v0, vt1;
SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((((x'')IS NOT(v0.c0))) BETWEEN ((v0.c0 IN ())) AND ('-1334932037' COLLATE NOCASE)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((((x'')IS NOT(v0.c0))) BETWEEN ((v0.c0 IN ())) AND ('-1334932037' COLLATE NOCASE)) WHERE ((vt0.c0 IN (((vt0.c0) NOTNULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((((x'')IS NOT(v0.c0))) BETWEEN ((v0.c0 IN ())) AND ('-1334932037' COLLATE NOCASE)) WHERE ((NOT ((vt0.c0 IN (((vt0.c0) NOTNULL)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((((x'')IS NOT(v0.c0))) BETWEEN ((v0.c0 IN ())) AND ('-1334932037' COLLATE NOCASE)) WHERE ((((vt0.c0 IN (((vt0.c0) NOTNULL)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((((x'')IS NOT(v0.c0))) BETWEEN ((v0.c0 IN ())) AND ('-1334932037' COLLATE NOCASE)) GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(vt0.c0)) BETWEEN (SUM(vt0.c0)) AND (((vt0.c0) BETWEEN (MIN(MIN(vt0.c0))) AND (AVG(AVG(NULL)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((MIN(vt0.c0)) BETWEEN (SUM(vt0.c0)) AND (((vt0.c0) BETWEEN (MIN(MIN(vt0.c0))) AND (AVG(AVG(NULL)))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MIN(vt0.c0)) BETWEEN (SUM(vt0.c0)) AND (((vt0.c0) BETWEEN (MIN(MIN(vt0.c0))) AND (AVG(AVG(NULL))))))) ISNULL);
SELECT ALL MIN((- (((vt1.c0)<(vt1.c0))))) FROM vt0, vt1, v0 ORDER BY '-422911990' DESC;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((((((v0.c0)<(v0.c0))))>(((NULL IN ()))))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((((v0.c0)<(v0.c0))))>(((NULL IN ()))))))) UNION ALL SELECT * FROM v0 WHERE ((((((((v0.c0)<(v0.c0))))>(((NULL IN ()))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST(v0.c0 AS BLOB) COLLATE BINARY) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST(v0.c0 AS BLOB) COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST(v0.c0 AS BLOB) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1, v0, vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt1.c0, vt0.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1, v0, vt0 WHERE ((NOT ((NOT (vt0.c0))))) GROUP BY vt1.c0, vt0.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1, v0, vt0 WHERE ((((NOT (vt0.c0))) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1;
SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((((((NOT (0.3400097538047153)))AND(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)))AND(((1161721609) BETWEEN (vt1.c1) AND (vt1.c1))))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((((((NOT (0.3400097538047153)))AND(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)))AND(((1161721609) BETWEEN (vt1.c1) AND (vt1.c1))))))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((((((((NOT (0.3400097538047153)))AND(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)))AND(((1161721609) BETWEEN (vt1.c1) AND (vt1.c1))))) ISNULL));
SELECT vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CASE WHEN CAST(v0.c0 AS TEXT) THEN (- (v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN ((-4.91172578E8)||(v0.c0)) WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN '' WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN COALESCE(v0.c0, v0.c0) WHEN v0.c0 THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END ELSE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CASE WHEN CAST(v0.c0 AS TEXT) THEN (- (v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN ((-4.91172578E8)||(v0.c0)) WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN '' WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN COALESCE(v0.c0, v0.c0) WHEN v0.c0 THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END ELSE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END))) UNION SELECT DISTINCT * FROM v0 WHERE (((CASE WHEN CAST(v0.c0 AS TEXT) THEN (- (v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN ((-4.91172578E8)||(v0.c0)) WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN '' WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN COALESCE(v0.c0, v0.c0) WHEN v0.c0 THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END ELSE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0, vt1.c0, vt1.c1, vt0.c0 FROM vt0, v0, vt1 GROUP BY v0.c0, vt1.c0, vt1.c1, vt0.c0;
SELECT ALL v0.c0, vt1.c0, vt1.c1, vt0.c0 FROM vt0, v0, vt1 WHERE (CAST(vt1.c1 AS INTEGER) COLLATE BINARY) GROUP BY v0.c0, vt1.c0, vt1.c1, vt0.c0 UNION SELECT v0.c0, vt1.c0, vt1.c1, vt0.c0 FROM vt0, v0, vt1 WHERE ((NOT (CAST(vt1.c1 AS INTEGER) COLLATE BINARY))) GROUP BY v0.c0, vt1.c0, vt1.c1, vt0.c0 UNION SELECT ALL v0.c0, vt1.c0, vt1.c1, vt0.c0 FROM vt0, v0, vt1 WHERE (((CAST(vt1.c1 AS INTEGER) COLLATE BINARY) ISNULL)) GROUP BY v0.c0, vt1.c0, vt1.c1, vt0.c0;
SELECT v0.c0, vt1.c0, vt1.c1, vt0.c0 FROM vt0, v0, vt1 GROUP BY v0.c0, vt1.c0, vt1.c1, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(TOTAL(MIN(COUNT(*)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(TOTAL(MIN(COUNT(*)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(TOTAL(MIN(COUNT(*))))) ISNULL);
SELECT ALL * FROM vt0 NOT INDEXED, vt1, v0;
SELECT ALL * FROM vt0, vt1, v0 WHERE (((vt0.c0)>(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))) UNION ALL SELECT * FROM vt0, vt1, v0 WHERE ((NOT (((vt0.c0)>(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))))) UNION ALL SELECT ALL * FROM vt0, vt1, v0 WHERE (((((vt0.c0)>(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT ALL * FROM vt0 NOT INDEXED, vt1, v0;
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON (((vt1.c1, x'', vt1.c1)) NOT BETWEEN ((((((NULL)OR(vt1.c1)))OR(vt0.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)), ((vt0.c0)>=(vt1.c0)))) AND ((vt1.c1, ((vt1.c0)>=(vt1.c0)), ((vt1.c1) NOT NULL))));
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON (((vt1.c1, x'', vt1.c1)) NOT BETWEEN ((((((NULL)OR(vt1.c1)))OR(vt0.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)), ((vt0.c0)>=(vt1.c0)))) AND ((vt1.c1, ((vt1.c0)>=(vt1.c0)), ((vt1.c1) NOT NULL)))) WHERE ((+ (x'' COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON (((vt1.c1, x'', vt1.c1)) NOT BETWEEN ((((((NULL)OR(vt1.c1)))OR(vt0.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)), ((vt0.c0)>=(vt1.c0)))) AND ((vt1.c1, ((vt1.c0)>=(vt1.c0)), ((vt1.c1) NOT NULL)))) WHERE ((NOT ((+ (x'' COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON (((vt1.c1, x'', vt1.c1)) NOT BETWEEN ((((((NULL)OR(vt1.c1)))OR(vt0.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)), ((vt0.c0)>=(vt1.c0)))) AND ((vt1.c1, ((vt1.c0)>=(vt1.c0)), ((vt1.c1) NOT NULL)))) WHERE ((((+ (x'' COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON (((vt1.c1, x'', vt1.c1)) NOT BETWEEN ((((((NULL)OR(vt1.c1)))OR(vt0.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)), ((vt0.c0)>=(vt1.c0)))) AND ((vt1.c1, ((vt1.c0)>=(vt1.c0)), ((vt1.c1) NOT NULL))));
SELECT vt1.c0, vt1.c1 FROM vt1 NOT INDEXED RIGHT OUTER JOIN v0 ON ((((CAST(vt1.c0 AS TEXT))OR(v0.c0)))AND(((v0.c0)|(v0.c0)))) GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 RIGHT OUTER JOIN v0 ON ((((CAST(vt1.c0 AS TEXT))OR(v0.c0)))AND(((v0.c0)|(v0.c0)))) WHERE (CAST((~ (vt1.c0)) AS BLOB)) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1 RIGHT OUTER JOIN v0 ON ((((CAST(vt1.c0 AS TEXT))OR(v0.c0)))AND(((v0.c0)|(v0.c0)))) WHERE ((NOT (CAST((~ (vt1.c0)) AS BLOB)))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 RIGHT OUTER JOIN v0 ON ((((CAST(vt1.c0 AS TEXT))OR(v0.c0)))AND(((v0.c0)|(v0.c0)))) WHERE (((CAST((~ (vt1.c0)) AS BLOB)) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 NOT INDEXED RIGHT OUTER JOIN v0 ON ((((CAST(vt1.c0 AS TEXT))OR(v0.c0)))AND(((v0.c0)|(v0.c0)))) GROUP BY vt1.c0, vt1.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0 COLLATE NOCASE)>(MAX(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((vt0.c0 COLLATE NOCASE)>(MAX(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0 COLLATE NOCASE)>(MAX(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0 COLLATE NOCASE)>(MAX(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((vt0.c0 COLLATE NOCASE)>(MAX(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0 COLLATE NOCASE)>(MAX(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM vt0, v0;
SELECT ALL v0.c0 FROM vt0, v0 WHERE (INSTR((((v0.c0, v0.c0, v0.c0))==((vt0.c0, NULL, v0.c0))), vt0.c0)) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 WHERE ((NOT (INSTR((((v0.c0, v0.c0, v0.c0))==((vt0.c0, NULL, v0.c0))), vt0.c0)))) UNION ALL SELECT v0.c0 FROM vt0, v0 WHERE (((INSTR((((v0.c0, v0.c0, v0.c0))==((vt0.c0, NULL, v0.c0))), vt0.c0)) ISNULL));
SELECT ALL v0.c0 FROM vt0, v0;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt0, vt1;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt0, vt1 WHERE (((vt1.c1) BETWEEN (CAST(vt1.c1 AS BLOB)) AND (vt1.c1))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt0, vt1 WHERE ((NOT (((vt1.c1) BETWEEN (CAST(vt1.c1 AS BLOB)) AND (vt1.c1))))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt0, vt1 WHERE (((((vt1.c1) BETWEEN (CAST(vt1.c1 AS BLOB)) AND (vt1.c1))) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt0, vt1;
SELECT ALL vt1.c1, v0.c0 FROM vt1 CROSS JOIN v0 ON v0.c0 GROUP BY vt1.c1, v0.c0;
SELECT vt1.c1, v0.c0 FROM vt1 CROSS JOIN v0 ON v0.c0 WHERE ((((((v0.c0 IN ()))AND((v0.c0 IN ()))))OR(v0.c0))) GROUP BY vt1.c1, v0.c0 UNION SELECT ALL vt1.c1, v0.c0 FROM vt1 CROSS JOIN v0 ON v0.c0 WHERE ((NOT ((((((v0.c0 IN ()))AND((v0.c0 IN ()))))OR(v0.c0))))) GROUP BY vt1.c1, v0.c0 UNION SELECT ALL vt1.c1, v0.c0 FROM vt1 CROSS JOIN v0 ON v0.c0 WHERE ((((((((v0.c0 IN ()))AND((v0.c0 IN ()))))OR(v0.c0))) ISNULL)) GROUP BY vt1.c1, v0.c0;
SELECT ALL vt1.c1, v0.c0 FROM vt1 CROSS JOIN v0 ON v0.c0 GROUP BY vt1.c1, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(COUNT(*))) IS TRUE) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((SUM(COUNT(*))) IS TRUE))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((SUM(COUNT(*))) IS TRUE)) ISNULL);
SELECT ALL vt1.c1 FROM vt1, vt0;
SELECT ALL vt1.c1 FROM vt1, vt0 WHERE ((('(e<lꍪ4W\r') NOT BETWEEN (vt0.c0) AND (CAST(vt1.c0 AS INTEGER)))) UNION ALL SELECT vt1.c1 FROM vt1, vt0 WHERE ((NOT ((('(e<lꍪ4W\r') NOT BETWEEN (vt0.c0) AND (CAST(vt1.c0 AS INTEGER)))))) UNION ALL SELECT ALL vt1.c1 FROM vt1, vt0 WHERE ((((('(e<lꍪ4W\r') NOT BETWEEN (vt0.c0) AND (CAST(vt1.c0 AS INTEGER)))) ISNULL));
SELECT ALL vt1.c1 FROM vt1, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 NOT INDEXED WHERE (((TYPEOF(vt0.c0))OR(((-266875725)IS NOT(v0.c0))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (((TYPEOF(vt0.c0))OR(((-266875725)IS NOT(v0.c0))))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((TYPEOF(vt0.c0))OR(((-266875725)IS NOT(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT ALL v0.c0, vt1.c1, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c1, vt1.c0;
SELECT ALL v0.c0, vt1.c1, vt1.c0 FROM vt1, v0 WHERE ((NOT (vt1.c0 COLLATE BINARY))) GROUP BY v0.c0, vt1.c1, vt1.c0 UNION SELECT v0.c0, vt1.c1, vt1.c0 FROM vt1, v0 WHERE ((NOT ((NOT (vt1.c0 COLLATE BINARY))))) GROUP BY v0.c0, vt1.c1, vt1.c0 UNION SELECT v0.c0, vt1.c1, vt1.c0 FROM vt1, v0 WHERE ((((NOT (vt1.c0 COLLATE BINARY))) ISNULL)) GROUP BY v0.c0, vt1.c1, vt1.c0;
SELECT ALL v0.c0, vt1.c1, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c1, vt1.c0;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING MAX(SUM(AVG(vt1.c0))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (MAX(SUM(AVG(vt1.c0))))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((MAX(SUM(AVG(vt1.c0)))) ISNULL);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c1) BETWEEN (vt0.c0) AND (v0.c0))) NOT BETWEEN (((vt1.c1)>(vt0.c0))) AND ((NOT (v0.c0)))) LEFT OUTER JOIN v0 ON (((((v0.c0)AND(vt1.c1)))OR('-1650703793')) IN ());
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE ((((v0.c0 IN ())) NOT BETWEEN (LIKELY(DISTINCT ',eZvAe')) AND (LIKELY(DISTINCT v0.c0)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT ((((v0.c0 IN ())) NOT BETWEEN (LIKELY(DISTINCT ',eZvAe')) AND (LIKELY(DISTINCT v0.c0)))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((((((v0.c0 IN ())) NOT BETWEEN (LIKELY(DISTINCT ',eZvAe')) AND (LIKELY(DISTINCT v0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT v0.c0 FROM v0, vt1 LEFT OUTER JOIN vt0 ON (((~ (vt1.c1)))>>(((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt1 LEFT OUTER JOIN vt0 ON (((~ (vt1.c1)))>>(((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (json(((vt1.c1) IS FALSE))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt1 LEFT OUTER JOIN vt0 ON (((~ (vt1.c1)))>>(((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE ((NOT (json(((vt1.c1) IS FALSE))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt1 LEFT OUTER JOIN vt0 ON (((~ (vt1.c1)))>>(((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (((json(((vt1.c1) IS FALSE))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt1 LEFT OUTER JOIN vt0 ON (((~ (vt1.c1)))>>(((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON CASE v0.c0  WHEN CAST(v0.c0 AS BLOB) THEN ((vt0.c0) NOTNULL) END GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON CASE v0.c0  WHEN CAST(v0.c0 AS BLOB) THEN ((vt0.c0) NOTNULL) END GROUP BY v0.c0 HAVING ((v0.c0) BETWEEN (TOTAL(MAX(v0.c0))) AND (NULL)) COLLATE NOCASE UNION ALL SELECT ALL v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON CASE v0.c0  WHEN CAST(v0.c0 AS BLOB) THEN ((vt0.c0) NOTNULL) END GROUP BY v0.c0 HAVING (NOT (((v0.c0) BETWEEN (TOTAL(MAX(v0.c0))) AND (NULL)) COLLATE NOCASE)) UNION ALL SELECT ALL v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON CASE v0.c0  WHEN CAST(v0.c0 AS BLOB) THEN ((vt0.c0) NOTNULL) END GROUP BY v0.c0 HAVING ((((v0.c0) BETWEEN (TOTAL(MAX(v0.c0))) AND (NULL)) COLLATE NOCASE) ISNULL);
SELECT ALL * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE ((- ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, v0.c0, 0Xffffffffc852d6ba)))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT ((- ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, v0.c0, 0Xffffffffc852d6ba)))))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((((- ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, v0.c0, 0Xffffffffc852d6ba)))))) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c0 FROM vt0 INNER JOIN v0 ON (((((((((vt1.c0 IN (NULL, vt1.c0)))OR(vt1.c1)))OR(((vt1.c1)&(vt1.c0)))))OR((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c1))))))AND(((vt1.c1)+('-271054228')))) FULL OUTER JOIN vt1 ON 0.9765495886400237 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) NOT BETWEEN (COUNT(*)) AND (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*)) NOT BETWEEN (COUNT(*)) AND (COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*)) NOT BETWEEN (COUNT(*)) AND (COUNT(*)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) NOT BETWEEN (COUNT(*)) AND (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*)) NOT BETWEEN (COUNT(*)) AND (COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*)) NOT BETWEEN (COUNT(*)) AND (COUNT(*)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c1, vt0.c0 FROM vt1, vt0 CROSS JOIN v0 ON (vt1.c0 IN ());
SELECT ALL vt1.c1, vt0.c0 FROM vt1, vt0 CROSS JOIN v0 ON (vt1.c0 IN ()) WHERE ((((vt1.c0)) NOT BETWEEN (((((vt1.c1))!=((vt0.c0))))) AND ((((vt1.c0)IS NOT(vt0.c0)))))) ORDER BY ABS(DISTINCT vt1.c0);
SELECT vt1.c1, vt0.c0 FROM vt1, vt0 CROSS JOIN v0 ON (vt1.c0 IN ()) WHERE ((NOT ((((vt1.c0)) NOT BETWEEN (((((vt1.c1))!=((vt0.c0))))) AND ((((vt1.c0)IS NOT(vt0.c0)))))))) ORDER BY ABS(DISTINCT vt1.c0);
SELECT ALL vt1.c1, vt0.c0 FROM vt1 NOT INDEXED, vt0 CROSS JOIN v0 ON (vt1.c0 IN ()) WHERE ((((((vt1.c0)) NOT BETWEEN (((((vt1.c1))!=((vt0.c0))))) AND ((((vt1.c0)IS NOT(vt0.c0)))))) ISNULL)) ORDER BY ABS(DISTINCT vt1.c0);
SELECT vt1.c1, vt0.c0 FROM vt1, vt0 CROSS JOIN v0 ON (vt1.c0 IN ());
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1, vt0 WHERE (x'') UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1, vt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1, vt0 WHERE (((x'') ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1, vt0;
SELECT vt0.c0, vt1.c1 FROM vt0, v0 LEFT OUTER JOIN vt1 ON ((((((((((vt1.c0) NOT BETWEEN (x'53cd') AND (vt1.c0)))OR((NOT (vt1.c1)))))AND(((vt1.c1)=(v0.c0)))))AND(CASE vt1.c1  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt1.c0) NOTNULL))) GROUP BY vt0.c0, vt1.c1;
SELECT ALL vt0.c0, vt1.c1 FROM vt0, v0 LEFT OUTER JOIN vt1 ON ((((((((((vt1.c0) NOT BETWEEN (x'53cd') AND (vt1.c0)))OR((NOT (vt1.c1)))))AND(((vt1.c1)=(v0.c0)))))AND(CASE vt1.c1  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt1.c0) NOTNULL))) WHERE (((vt1.c0)&(0.5618148270328389)) COLLATE BINARY) GROUP BY vt0.c0, vt1.c1 UNION SELECT ALL vt0.c0, vt1.c1 FROM vt0, v0 LEFT OUTER JOIN vt1 ON ((((((((((vt1.c0) NOT BETWEEN (x'53cd') AND (vt1.c0)))OR((NOT (vt1.c1)))))AND(((vt1.c1)=(v0.c0)))))AND(CASE vt1.c1  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt1.c0) NOTNULL))) WHERE ((NOT (((vt1.c0)&(0.5618148270328389)) COLLATE BINARY))) GROUP BY vt0.c0, vt1.c1 UNION SELECT vt0.c0, vt1.c1 FROM vt0, v0 LEFT OUTER JOIN vt1 ON ((((((((((vt1.c0) NOT BETWEEN (x'53cd') AND (vt1.c0)))OR((NOT (vt1.c1)))))AND(((vt1.c1)=(v0.c0)))))AND(CASE vt1.c1  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt1.c0) NOTNULL))) WHERE (((((vt1.c0)&(0.5618148270328389)) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0, vt1.c1;
SELECT vt0.c0, vt1.c1 FROM vt0, v0 LEFT OUTER JOIN vt1 ON ((((((((((vt1.c0) NOT BETWEEN (x'53cd') AND (vt1.c0)))OR((NOT (vt1.c1)))))AND(((vt1.c1)=(v0.c0)))))AND(CASE vt1.c1  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt1.c0) NOTNULL))) GROUP BY vt0.c0, vt1.c1;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING COUNT(IFNULL(DISTINCT v0.c0, SUM(v0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (COUNT(IFNULL(DISTINCT v0.c0, SUM(v0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((COUNT(IFNULL(DISTINCT v0.c0, SUM(v0.c0)))) ISNULL);
SELECT * FROM vt1, v0, vt0;
SELECT * FROM vt1, v0, vt0 WHERE ((((((((((vt1.c1)OR(vt0.c0)))OR(-1619536971)))OR(vt1.c1)))OR(0.9596559523889864)) IN ())) UNION ALL SELECT ALL * FROM vt1, v0, vt0 WHERE ((NOT ((((((((((vt1.c1)OR(vt0.c0)))OR(-1619536971)))OR(vt1.c1)))OR(0.9596559523889864)) IN ())))) UNION ALL SELECT ALL * FROM vt1, v0, vt0 WHERE ((((((((((((vt1.c1)OR(vt0.c0)))OR(-1619536971)))OR(vt1.c1)))OR(0.9596559523889864)) IN ())) ISNULL));
SELECT * FROM vt1, v0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (x'8cdd') UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (x'8cdd'))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((x'8cdd') ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (((CAST(vt1.c1 AS REAL))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c1))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (((CAST(vt1.c1 AS REAL))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c1))))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (((((CAST(vt1.c1 AS REAL))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c1))))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (- (COUNT(TOTAL(GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 NOT INDEXED GROUP BY vt1.c0, vt0.c0 HAVING (NOT ((- (COUNT(TOTAL(GROUP_CONCAT(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (((- (COUNT(TOTAL(GROUP_CONCAT(vt1.c0)))))) ISNULL);
SELECT ALL * FROM vt1, v0;
SELECT ALL * FROM vt1, v0 WHERE (NULL) UNION ALL SELECT * FROM vt1, v0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM vt1, v0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM vt1, v0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (json_patch(((((0xffffffff95391dac)OR(v0.c0)))AND(v0.c0)), vt0.c0)) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (json_patch(((((0xffffffff95391dac)OR(v0.c0)))AND(v0.c0)), vt0.c0)))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((json_patch(((((0xffffffff95391dac)OR(v0.c0)))AND(v0.c0)), vt0.c0)) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((((((((vt0.c0)AND(vt0.c0)))AND(NULL)))OR(x'')))OR(v0.c0)) IN ()) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((((((((vt0.c0)AND(vt0.c0)))AND(NULL)))OR(x'')))OR(v0.c0)) IN ()) WHERE (LOWER(MAX(v0.c0, v0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((((((((vt0.c0)AND(vt0.c0)))AND(NULL)))OR(x'')))OR(v0.c0)) IN ()) WHERE ((NOT (LOWER(MAX(v0.c0, v0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((((((((vt0.c0)AND(vt0.c0)))AND(NULL)))OR(x'')))OR(v0.c0)) IN ()) WHERE (((LOWER(MAX(v0.c0, v0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((((((((vt0.c0)AND(vt0.c0)))AND(NULL)))OR(x'')))OR(v0.c0)) IN ()) GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE WHEN (((0.5269663999189551, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, COUNT(v0.c0))) AND ((v0.c0, AVG(AVG(v0.c0)), v0.c0))) THEN SUM(-994793272) WHEN TOTAL(COUNT(*)) THEN (((TOTAL(v0.c0)))<((COUNT(NULL)))) WHEN CAST(MIN(v0.c0) AS NUMERIC) THEN ((MAX(v0.c0)) ISNULL) END UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CASE WHEN (((0.5269663999189551, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, COUNT(v0.c0))) AND ((v0.c0, AVG(AVG(v0.c0)), v0.c0))) THEN SUM(-994793272) WHEN TOTAL(COUNT(*)) THEN (((TOTAL(v0.c0)))<((COUNT(NULL)))) WHEN CAST(MIN(v0.c0) AS NUMERIC) THEN ((MAX(v0.c0)) ISNULL) END)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE WHEN (((0.5269663999189551, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, COUNT(v0.c0))) AND ((v0.c0, AVG(AVG(v0.c0)), v0.c0))) THEN SUM(-994793272) WHEN TOTAL(COUNT(*)) THEN (((TOTAL(v0.c0)))<((COUNT(NULL)))) WHEN CAST(MIN(v0.c0) AS NUMERIC) THEN ((MAX(v0.c0)) ISNULL) END) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (CAST((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))) AS INTEGER)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CAST((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))) AS INTEGER)))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CAST((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))) AS INTEGER)) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT ALL vt1.c1 FROM vt0, v0, vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt0, v0, vt1 WHERE (((- (x'6281')) IN ())) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt0, v0, vt1 WHERE ((NOT (((- (x'6281')) IN ())))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt0, v0, vt1 WHERE (((((- (x'6281')) IN ())) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt0, v0, vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING CASE WHEN GROUP_CONCAT(vt1.c1) THEN ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) ELSE x'0dca' END UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (CASE WHEN GROUP_CONCAT(vt1.c1) THEN ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) ELSE x'0dca' END)) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((CASE WHEN GROUP_CONCAT(vt1.c1) THEN ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) ELSE x'0dca' END) ISNULL);
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING CASE WHEN GROUP_CONCAT(vt1.c1) THEN ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) ELSE x'0dca' END UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (CASE WHEN GROUP_CONCAT(vt1.c1) THEN ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) ELSE x'0dca' END)) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((CASE WHEN GROUP_CONCAT(vt1.c1) THEN ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) ELSE x'0dca' END) ISNULL);
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (CASE CASE WHEN x'' THEN v0.c0 END  WHEN CAST(v0.c0 AS BLOB) THEN ((NULL) IS TRUE) ELSE ((v0.c0) ISNULL) END) UNION ALL SELECT * FROM v0 WHERE ((NOT (CASE CASE WHEN x'' THEN v0.c0 END  WHEN CAST(v0.c0 AS BLOB) THEN ((NULL) IS TRUE) ELSE ((v0.c0) ISNULL) END))) UNION ALL SELECT * FROM v0 WHERE (((CASE CASE WHEN x'' THEN v0.c0 END  WHEN CAST(v0.c0 AS BLOB) THEN ((NULL) IS TRUE) ELSE ((v0.c0) ISNULL) END) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) NOT NULL))) AND ((vt0.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED WHERE ((NOT ((((vt0.c0)) BETWEEN ((((vt0.c0) NOT NULL))) AND ((vt0.c0 COLLATE NOCASE)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((((vt0.c0) NOT NULL))) AND ((vt0.c0 COLLATE NOCASE)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 WHERE (((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) COLLATE NOCASE) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT vt1.c1 FROM v0, vt0 NATURAL JOIN vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM v0, vt0 NATURAL JOIN vt1 GROUP BY vt1.c1 HAVING COUNT(((COUNT(COUNT(vt1.c0))) NOT BETWEEN (v0.c0) AND ('暏K''V'))) UNION ALL SELECT ALL vt1.c1 FROM v0, vt0 NATURAL JOIN vt1 GROUP BY vt1.c1 HAVING (NOT (COUNT(((COUNT(COUNT(vt1.c0))) NOT BETWEEN (v0.c0) AND ('暏K''V'))))) UNION ALL SELECT ALL vt1.c1 FROM v0, vt0 NATURAL JOIN vt1 GROUP BY vt1.c1 HAVING ((COUNT(((COUNT(COUNT(vt1.c0))) NOT BETWEEN (v0.c0) AND ('暏K''V')))) ISNULL);
SELECT * FROM v0, vt1;
SELECT ALL * FROM v0, vt1 WHERE (LIKELY(vt1.c1) COLLATE RTRIM) UNION ALL SELECT * FROM v0, vt1 WHERE ((NOT (LIKELY(vt1.c1) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM v0, vt1 WHERE (((LIKELY(vt1.c1) COLLATE RTRIM) ISNULL));
SELECT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1, vt0;
SELECT DISTINCT * FROM v0, vt1, vt0 WHERE (((((v0.c0)OR(vt0.c0)))>>(vt0.c0))) UNION SELECT DISTINCT * FROM v0, vt1, vt0 WHERE ((NOT (((((v0.c0)OR(vt0.c0)))>>(vt0.c0))))) UNION SELECT DISTINCT * FROM v0, vt1, vt0 WHERE (((((((v0.c0)OR(vt0.c0)))>>(vt0.c0))) ISNULL));
SELECT DISTINCT * FROM v0, vt1, vt0;
SELECT vt1.c1, vt1.c0 FROM v0 NATURAL JOIN vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM v0 NATURAL JOIN vt1 WHERE ((NOT (((NULL)|(v0.c0))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM v0 NATURAL JOIN vt1 WHERE ((NOT ((NOT (((NULL)|(v0.c0))))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM v0 NATURAL JOIN vt1 WHERE ((((NOT (((NULL)|(v0.c0))))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM v0 NATURAL JOIN vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((SUM(v0.c0))>>(MAX(v0.c0))), ((((v0.c0)AND(v0.c0)))OR(v0.c0)), SUM(TOTAL(v0.c0))))!=((GROUP_CONCAT(v0.c0), COUNT(*), MAX(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((((SUM(v0.c0))>>(MAX(v0.c0))), ((((v0.c0)AND(v0.c0)))OR(v0.c0)), SUM(TOTAL(v0.c0))))<>((GROUP_CONCAT(v0.c0), COUNT(*), MAX(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((((SUM(v0.c0))>>(MAX(v0.c0))), ((((v0.c0)AND(v0.c0)))OR(v0.c0)), SUM(TOTAL(v0.c0))))!=((GROUP_CONCAT(v0.c0), COUNT(*), MAX(v0.c0))))) ISNULL);
SELECT v0.c0 FROM vt0 CROSS JOIN v0 ON (~ (vt0.c0));
SELECT ALL v0.c0 FROM vt0 CROSS JOIN v0 ON (~ (vt0.c0)) WHERE ((((CAST(vt0.c0 AS NUMERIC)))<=((CAST(vt0.c0 AS INTEGER))))) UNION ALL SELECT v0.c0 FROM vt0 CROSS JOIN v0 ON (~ (vt0.c0)) WHERE ((NOT ((((CAST(vt0.c0 AS NUMERIC)))<=((CAST(vt0.c0 AS INTEGER))))))) UNION ALL SELECT ALL v0.c0 FROM vt0 CROSS JOIN v0 ON (~ (vt0.c0)) WHERE ((((((CAST(vt0.c0 AS NUMERIC)))<=((CAST(vt0.c0 AS INTEGER))))) ISNULL));
SELECT v0.c0 FROM vt0 CROSS JOIN v0 ON (~ (vt0.c0));
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE ((((('-872290316')OR(v0.c0 COLLATE RTRIM)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT ((((('-872290316')OR(v0.c0 COLLATE RTRIM)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((((((('-872290316')OR(v0.c0 COLLATE RTRIM)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1, v0 WHERE (vt0.c0) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1, v0 WHERE ((NOT (vt0.c0))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1, v0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (- (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((- (vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((- (vt0.c0))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (- (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((- (vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((- (vt0.c0))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)%(x'')))>=(vt0.c0));
SELECT vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)%(x'')))>=(vt0.c0)) WHERE ((((v0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND (((NULL IN ()))))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)%(x'')))>=(vt0.c0)) WHERE ((NOT ((((v0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND (((NULL IN ()))))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)%(x'')))>=(vt0.c0)) WHERE ((((((v0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND (((NULL IN ()))))) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)%(x'')))>=(vt0.c0));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((+ (v0.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((+ (v0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((+ (v0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt1.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0, vt0.c0, vt1.c0))<((vt1.c0, vt0.c0, vt1.c0))) IN ()) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0, vt0.c0, vt1.c0))<((vt1.c0, vt0.c0, vt1.c0))) IN ()) WHERE (CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c0 END COLLATE RTRIM) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0, vt0.c0, vt1.c0))<((vt1.c0, vt0.c0, vt1.c0))) IN ()) WHERE ((NOT (CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c0 END COLLATE RTRIM))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0, vt0.c0, vt1.c0))<((vt1.c0, vt0.c0, vt1.c0))) IN ()) WHERE (((CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c0 END COLLATE RTRIM) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0, vt0.c0, vt1.c0))<((vt1.c0, vt0.c0, vt1.c0))) IN ()) GROUP BY vt1.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((AVG(vt1.c1), ((vt1.c0) ISNULL), COUNT(AVG(vt1.c1))))<((((GROUP_CONCAT('ﳀ(+-n')) BETWEEN (COUNT(*)) AND (vt1.c0)), GROUP_CONCAT(vt1.c1), MIN(vt1.c1)))) UNION ALL SELECT vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0 HAVING (NOT ((((AVG(vt1.c1), ((vt1.c0) ISNULL), COUNT(AVG(vt1.c1))))<((((GROUP_CONCAT('ﳀ(+-n')) BETWEEN (COUNT(*)) AND (vt1.c0)), GROUP_CONCAT(vt1.c1), MIN(vt1.c1)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((AVG(vt1.c1), ((vt1.c0) ISNULL), COUNT(AVG(vt1.c1))))<((((GROUP_CONCAT('ﳀ(+-n')) BETWEEN (COUNT(*)) AND (vt1.c0)), GROUP_CONCAT(vt1.c1), MIN(vt1.c1))))) ISNULL);
SELECT ALL * FROM v0 NOT INDEXED, vt1;
SELECT ALL * FROM v0, vt1 WHERE (((CAST(vt1.c1 AS INTEGER))IS(HEX(v0.c0)))) UNION ALL SELECT * FROM v0, vt1 WHERE ((NOT (((CAST(vt1.c1 AS INTEGER))IS(HEX(v0.c0)))))) UNION ALL SELECT * FROM v0, vt1 WHERE (((((CAST(vt1.c1 AS INTEGER))IS(HEX(v0.c0)))) ISNULL));
SELECT ALL * FROM v0 NOT INDEXED, vt1;
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN v0 ON ((CAST(vt1.c0 AS INTEGER))-((- (vt1.c1))));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN v0 ON ((CAST(vt1.c0 AS INTEGER))-((- (vt1.c1)))) WHERE (((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))/(((v0.c0)&(x'72ab'))))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN v0 ON ((CAST(vt1.c0 AS INTEGER))-((- (vt1.c1)))) WHERE ((NOT (((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))/(((v0.c0)&(x'72ab'))))))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN v0 ON ((CAST(vt1.c0 AS INTEGER))-((- (vt1.c1)))) WHERE (((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))/(((v0.c0)&(x'72ab'))))) ISNULL));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN v0 ON ((CAST(vt1.c0 AS INTEGER))-((- (vt1.c1))));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((x'')+(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(-1.33994614E9))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((x'')+(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(-1.33994614E9))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((x'')+(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(-1.33994614E9))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c1 FROM vt0, v0, vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt0, v0, vt1 GROUP BY vt1.c1 HAVING ((NOT (TOTAL(vt0.c0))) IN (vt0.c0)) UNION ALL SELECT vt1.c1 FROM vt0, v0, vt1 GROUP BY vt1.c1 HAVING (NOT (((NOT (TOTAL(vt0.c0))) IN (vt0.c0)))) UNION ALL SELECT vt1.c1 FROM vt0, v0, vt1 GROUP BY vt1.c1 HAVING ((((NOT (TOTAL(vt0.c0))) IN (vt0.c0))) ISNULL);
SELECT ALL vt1.c1 FROM vt0, v0, vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt0, v0, vt1 GROUP BY vt1.c1 HAVING ((NOT (TOTAL(vt0.c0))) IN (vt0.c0)) UNION ALL SELECT vt1.c1 FROM vt0, v0, vt1 GROUP BY vt1.c1 HAVING (NOT (((NOT (TOTAL(vt0.c0))) IN (vt0.c0)))) UNION ALL SELECT vt1.c1 FROM vt0, v0, vt1 GROUP BY vt1.c1 HAVING ((((NOT (TOTAL(vt0.c0))) IN (vt0.c0))) ISNULL);
SELECT ALL vt1.c1 FROM vt0, v0, vt1 GROUP BY vt1.c1;
SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0 IN (vt1.c1))) IS TRUE);
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0 IN (vt1.c1))) IS TRUE) WHERE (((NOT (vt1.c1)) IN (vt0.c0 COLLATE NOCASE))) UNION ALL SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0 IN (vt1.c1))) IS TRUE) WHERE ((NOT (((NOT (vt1.c1)) IN (vt0.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0 IN (vt1.c1))) IS TRUE) WHERE (((((NOT (vt1.c1)) IN (vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0 IN (vt1.c1))) IS TRUE);
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (json_array_length((('1122418279') NOTNULL))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (json_array_length((('1122418279') NOTNULL))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((json_array_length((('1122418279') NOTNULL))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (TYPEOF(((x'') IS FALSE))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (TYPEOF(((x'') IS FALSE))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((TYPEOF(((x'') IS FALSE))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0 HAVING MIN('') UNION ALL SELECT vt0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0 HAVING (NOT (MIN(''))) UNION ALL SELECT vt0.c0 FROM vt0 NOT INDEXED, v0, vt1 GROUP BY vt0.c0 HAVING ((MIN('')) ISNULL);
SELECT vt0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0 HAVING MIN('') UNION ALL SELECT vt0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0 HAVING (NOT (MIN(''))) UNION ALL SELECT vt0.c0 FROM vt0 NOT INDEXED, v0, vt1 GROUP BY vt0.c0 HAVING ((MIN('')) ISNULL);
SELECT vt0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE ((((vt0.c0))<((v0.c0))) COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT ((((vt0.c0))<((v0.c0))) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((((((vt0.c0))<((v0.c0))) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt1, v0 RIGHT OUTER JOIN vt0 ON (((NOT (vt0.c0)))=((((0.8044819895265719))<>((vt0.c0))))) GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1, v0 RIGHT OUTER JOIN vt0 ON (((NOT (vt0.c0)))=((((0.8044819895265719))<>((vt0.c0))))) WHERE (CAST(CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)) GROUP BY vt1.c0, vt1.c1, vt0.c0 UNION SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt1, v0 RIGHT OUTER JOIN vt0 ON (((NOT (vt0.c0)))==((((0.8044819895265719))<>((vt0.c0))))) WHERE ((NOT (CAST(CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)))) GROUP BY vt1.c0, vt1.c1, vt0.c0 UNION SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt1, v0 RIGHT OUTER JOIN vt0 ON (((NOT (vt0.c0)))=((((0.8044819895265719))<>((vt0.c0))))) WHERE (((CAST(CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)) ISNULL)) GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt1, v0 RIGHT OUTER JOIN vt0 ON (((NOT (vt0.c0)))=((((0.8044819895265719))<>((vt0.c0))))) GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN vt0 ON CAST(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS BLOB) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 FULL OUTER JOIN vt0 ON CAST(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS BLOB) GROUP BY v0.c0 HAVING CAST(COUNT(COUNT(*)) AS NUMERIC) UNION ALL SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN vt0 ON CAST(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS BLOB) GROUP BY v0.c0 HAVING (NOT (CAST(COUNT(COUNT(*)) AS NUMERIC))) UNION ALL SELECT v0.c0 FROM v0 FULL OUTER JOIN vt0 ON CAST(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS BLOB) GROUP BY v0.c0 HAVING ((CAST(COUNT(COUNT(*)) AS NUMERIC)) ISNULL);
SELECT ALL * FROM v0, vt1, vt0;
SELECT ALL * FROM v0, vt1, vt0 WHERE (vt1.c1) UNION ALL SELECT * FROM v0, vt1, vt0 WHERE ((NOT (vt1.c1))) UNION ALL SELECT * FROM v0, vt1, vt0 WHERE (((vt1.c1) ISNULL));
SELECT ALL * FROM v0, vt1, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c1 FROM vt0, vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt0, vt1 WHERE (((vt0.c0) ISNULL) COLLATE BINARY) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt0, vt1 WHERE ((NOT (((vt0.c0) ISNULL) COLLATE BINARY))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt0, vt1 WHERE (((((vt0.c0) ISNULL) COLLATE BINARY) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt0, vt1 GROUP BY vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt1.c1 HAVING SUM(MAX(MIN(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (SUM(MAX(MIN(GROUP_CONCAT(vt0.c0)))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt1.c1 HAVING ((SUM(MAX(MIN(GROUP_CONCAT(vt0.c0))))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (UPPER(((((v0.c0)AND(v0.c0)))AND(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (UPPER(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((UPPER(((((v0.c0)AND(v0.c0)))AND(v0.c0)))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, vt1, vt0;
SELECT DISTINCT * FROM v0, vt1, vt0 WHERE (((((vt1.c0) ISNULL))>(vt1.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0, vt1, vt0 WHERE ((NOT (((((vt1.c0) ISNULL))>(vt1.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM v0, vt1, vt0 WHERE (((((((vt1.c0) ISNULL))>(vt1.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM v0, vt1, vt0;
SELECT vt1.c1, vt0.c0 FROM vt0, vt1, v0 GROUP BY vt1.c1, vt0.c0;
SELECT vt1.c1, vt0.c0 FROM vt0, vt1, v0 WHERE (((vt1.c1) IS TRUE)) GROUP BY vt1.c1, vt0.c0 UNION SELECT ALL vt1.c1, vt0.c0 FROM vt0, vt1, v0 WHERE ((NOT (((vt1.c1) IS TRUE)))) GROUP BY vt1.c1, vt0.c0 UNION SELECT ALL vt1.c1, vt0.c0 FROM vt0, vt1, v0 WHERE (((((vt1.c1) IS TRUE)) ISNULL)) GROUP BY vt1.c1, vt0.c0;
SELECT vt1.c1, vt0.c0 FROM vt0, vt1, v0 GROUP BY vt1.c1, vt0.c0;
SELECT ALL vt1.c1, v0.c0, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, v0.c0, vt0.c0;
SELECT vt1.c1, v0.c0, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, v0.c0, vt0.c0 HAVING AVG(v0.c0) UNION ALL SELECT vt1.c1, v0.c0, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, v0.c0, vt0.c0 HAVING (NOT (AVG(v0.c0))) UNION ALL SELECT ALL vt1.c1, v0.c0, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, v0.c0, vt0.c0 HAVING ((AVG(v0.c0)) ISNULL);
SELECT ALL vt1.c1, v0.c0, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, v0.c0, vt0.c0;
SELECT vt1.c1, v0.c0, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, v0.c0, vt0.c0 HAVING AVG(v0.c0) UNION ALL SELECT vt1.c1, v0.c0, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, v0.c0, vt0.c0 HAVING (NOT (AVG(v0.c0))) UNION ALL SELECT ALL vt1.c1, v0.c0, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, v0.c0, vt0.c0 HAVING ((AVG(v0.c0)) ISNULL);
SELECT ALL vt1.c1, v0.c0, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, v0.c0, vt0.c0;
SELECT ALL * FROM vt1, v0, vt0;
SELECT * FROM vt1, v0, vt0 WHERE (HEX(((vt0.c0) IS FALSE))) UNION ALL SELECT * FROM vt1, v0, vt0 WHERE ((NOT (HEX(((vt0.c0) IS FALSE))))) UNION ALL SELECT * FROM vt1, v0, vt0 WHERE (((HEX(((vt0.c0) IS FALSE))) ISNULL));
SELECT ALL * FROM vt1, v0, vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((- (CAST(v0.c0 AS NUMERIC)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((- (CAST(v0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((- (CAST(v0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt1.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0, v0 WHERE (((((vt1.c0)/(vt0.c0))) NOT BETWEEN (CASE v0.c0  WHEN vt1.c1 THEN v0.c0 ELSE vt0.c0 END) AND (((vt1.c1) NOT NULL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0, v0 NOT INDEXED WHERE ((NOT (((((vt1.c0)/(vt0.c0))) NOT BETWEEN (CASE v0.c0  WHEN vt1.c1 THEN v0.c0 ELSE vt0.c0 END) AND (((vt1.c1) NOT NULL)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0, v0 WHERE (((((((vt1.c0)/(vt0.c0))) NOT BETWEEN (CASE v0.c0  WHEN vt1.c1 THEN v0.c0 ELSE vt0.c0 END) AND (((vt1.c1) NOT NULL)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (MIN(vt0.c0) IN ()) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT ((MIN(vt0.c0) IN ()))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (((MIN(vt0.c0) IN ())) ISNULL);
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (MIN(vt0.c0) IN ()) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT ((MIN(vt0.c0) IN ()))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (((MIN(vt0.c0) IN ())) ISNULL);
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1, v0;
SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1, v0 WHERE (CASE CAST(v0.c0 AS TEXT)  WHEN (+ (0.7337619711935851)) THEN ((vt1.c0)|(vt1.c1)) END) ORDER BY ((((vt1.c0)<=(vt1.c0))) BETWEEN ((+ (v0.c0))) AND ((((v0.c0))<((v0.c0)))))  NULLS FIRST;
SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1, v0 WHERE ((NOT (CASE CAST(v0.c0 AS TEXT)  WHEN (+ (0.7337619711935851)) THEN ((vt1.c0)|(vt1.c1)) END))) ORDER BY ((((vt1.c0)<=(vt1.c0))) BETWEEN ((+ (v0.c0))) AND ((((v0.c0))<((v0.c0)))))  NULLS FIRST;
SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1, v0 WHERE (((CASE CAST(v0.c0 AS TEXT)  WHEN (+ (0.7337619711935851)) THEN ((vt1.c0)|(vt1.c1)) END) ISNULL)) ORDER BY ((((vt1.c0)<=(vt1.c0))) BETWEEN ((+ (v0.c0))) AND ((((v0.c0))<((v0.c0)))))  NULLS FIRST;
SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1, v0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE ((((~ (vt0.c0))) IS TRUE)) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT ((((~ (vt0.c0))) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((((((~ (vt0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT vt1.c1, v0.c0 FROM v0, vt1 GROUP BY vt1.c1, v0.c0;
SELECT vt1.c1, v0.c0 FROM v0, vt1 WHERE (CAST(vt1.c0 AS REAL)) GROUP BY vt1.c1, v0.c0 UNION SELECT ALL vt1.c1, v0.c0 FROM v0, vt1 WHERE ((NOT (CAST(vt1.c0 AS REAL)))) GROUP BY vt1.c1, v0.c0 UNION SELECT vt1.c1, v0.c0 FROM v0, vt1 WHERE (((CAST(vt1.c0 AS REAL)) ISNULL)) GROUP BY vt1.c1, v0.c0;
SELECT vt1.c1, v0.c0 FROM v0, vt1 GROUP BY vt1.c1, v0.c0;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING SUM(SUM(MIN(vt1.c0))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (SUM(SUM(MIN(vt1.c0))))) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((SUM(SUM(MIN(vt1.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 IN ()) IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0 IN ()) IN ())) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1, v0;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1, v0 WHERE (((((((((CAST(vt1.c0 AS REAL))OR(((vt1.c0)<(vt1.c0)))))AND(((v0.c0)==(v0.c0)))))OR(ABS(DISTINCT vt1.c0))))AND(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1, v0 WHERE ((NOT (((((((((CAST(vt1.c0 AS REAL))OR(((vt1.c0)<(vt1.c0)))))AND(((v0.c0)==(v0.c0)))))OR(ABS(DISTINCT vt1.c0))))AND(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1, v0 WHERE (((((((((((CAST(vt1.c0 AS REAL))OR(((vt1.c0)<(vt1.c0)))))AND(((v0.c0)=(v0.c0)))))OR(ABS(DISTINCT vt1.c0))))AND(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)GLOB(((vt0.c0) IS TRUE)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY)GLOB(((vt0.c0) IS TRUE)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)GLOB(((vt0.c0) IS TRUE)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT vt1.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT TOTAL(((((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c1 WHEN 'HvD\92' THEN vt1.c1 WHEN 0.8259201994142825 THEN NULL END)OR(((NULL)GLOB(vt1.c0)))))OR(CAST(vt1.c0 AS INTEGER)))) FROM v0, vt0, vt1 ORDER BY ((((((((vt0.c0)OR(((vt0.c0) IS FALSE))))OR(CAST(vt1.c1 AS NUMERIC))))OR(((vt1.c1)LIKE(0.1438425465930735)))))AND((((v0.c0))=((vt0.c0)))))  NULLS FIRST;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) IS TRUE)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) IS TRUE)))) UNION ALL SELECT * FROM v0 WHERE ((((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) IS TRUE)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (NULL COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (NULL COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0 WHERE (((NULL COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt1, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt1, vt0 WHERE (((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE BINARY) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt1, vt0 WHERE ((NOT (((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE BINARY))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt1, vt0 WHERE (((((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE BINARY) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt1, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING 8.00521692E8 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (8.00521692E8)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((8.00521692E8) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING 8.00521692E8 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (8.00521692E8)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((8.00521692E8) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM vt1, v0, vt0;
SELECT ALL * FROM vt1, v0, vt0 WHERE (CASE WHEN vt0.c0 THEN v0.c0 END COLLATE RTRIM) UNION ALL SELECT * FROM vt1, v0, vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN v0.c0 END COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt1, v0, vt0 WHERE (((CASE WHEN vt0.c0 THEN v0.c0 END COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST(TYPEOF(DISTINCT vt1.c0) AS REAL)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST(TYPEOF(DISTINCT vt1.c0) AS REAL)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST(TYPEOF(DISTINCT vt1.c0) AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c1, v0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c1, v0.c0;
SELECT vt1.c1, v0.c0 FROM vt1, v0, vt0 WHERE (((((CASE WHEN v0.c0 THEN vt1.c1 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END)OR(((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(vt0.c0)))))AND(((((((((vt1.c1)AND('')))AND(vt1.c1)))AND('-705658046')))OR(vt1.c1))))) GROUP BY vt1.c1, v0.c0 UNION SELECT ALL vt1.c1, v0.c0 FROM vt1, v0, vt0 WHERE ((NOT (((((CASE WHEN v0.c0 THEN vt1.c1 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END)OR(((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(vt0.c0)))))AND(((((((((vt1.c1)AND('')))AND(vt1.c1)))AND('-705658046')))OR(vt1.c1))))))) GROUP BY vt1.c1, v0.c0 UNION SELECT ALL vt1.c1, v0.c0 FROM vt1, v0, vt0 WHERE (((((((CASE WHEN v0.c0 THEN vt1.c1 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END)OR(((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(vt0.c0)))))AND(((((((((vt1.c1)AND('')))AND(vt1.c1)))AND('-705658046')))OR(vt1.c1))))) ISNULL)) GROUP BY vt1.c1, v0.c0;
SELECT ALL vt1.c1, v0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c1, v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(MIN(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(MIN(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(MIN(vt0.c0))) ISNULL);
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt1 ON (((v0.c0)%(vt1.c1)) IN ()) LEFT OUTER JOIN vt0 ON '0.47141583157338773';
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt1 ON (((v0.c0)%(vt1.c1)) IN ()) LEFT OUTER JOIN vt0 ON '0.47141583157338773' WHERE (((v0.c0 COLLATE NOCASE) NOT BETWEEN (PRINTF(vt0.c0)) AND ((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, v0.c0, v0.c0)) AND ((vt1.c0, vt1.c1, vt0.c0)))))) UNION ALL SELECT vt1.c0, v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt1 ON (((v0.c0)%(vt1.c1)) IN ()) LEFT OUTER JOIN vt0 ON '0.47141583157338773' WHERE ((NOT (((v0.c0 COLLATE NOCASE) NOT BETWEEN (PRINTF(vt0.c0)) AND ((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, v0.c0, v0.c0)) AND ((vt1.c0, vt1.c1, vt0.c0)))))))) UNION ALL SELECT vt1.c0, v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt1 ON (((v0.c0)%(vt1.c1)) IN ()) LEFT OUTER JOIN vt0 ON '0.47141583157338773' WHERE (((((v0.c0 COLLATE NOCASE) NOT BETWEEN (PRINTF(vt0.c0)) AND ((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, v0.c0, v0.c0)) AND ((vt1.c0, vt1.c1, vt0.c0)))))) ISNULL));
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt1 ON (((v0.c0)%(vt1.c1)) IN ()) LEFT OUTER JOIN vt0 ON '0.47141583157338773';
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ('1668031240') UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ('1668031240'))) UNION SELECT DISTINCT * FROM vt0 WHERE ((('1668031240') ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c1 FROM vt1, v0 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1, v0 WHERE (CAST(vt1.c0 COLLATE BINARY AS REAL)) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1, v0 WHERE ((NOT (CAST(vt1.c0 COLLATE BINARY AS REAL)))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1, v0 WHERE (((CAST(vt1.c0 COLLATE BINARY AS REAL)) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1, v0 GROUP BY vt1.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((v0.c0)AND(SUM(COUNT(*)))))AND(COUNT(*))))||(x'')) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((((v0.c0)AND(SUM(COUNT(*)))))AND(COUNT(*))))||(x'')))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((v0.c0)AND(SUM(COUNT(*)))))AND(COUNT(*))))||(x''))) ISNULL);
SELECT ALL * FROM vt0, vt1, v0;
SELECT ALL * FROM vt0, vt1, v0 WHERE ((((0.17437317732587154 IN ())) NOTNULL)) UNION ALL SELECT ALL * FROM vt0 NOT INDEXED, vt1, v0 WHERE ((NOT ((((0.17437317732587154 IN ())) NOTNULL)))) UNION ALL SELECT * FROM vt0, vt1, v0 WHERE ((((((0.17437317732587154 IN ())) NOTNULL)) ISNULL));
SELECT ALL * FROM vt0, vt1, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((- (v0.c0)) IN ())) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((- (v0.c0)) IN ())))) UNION SELECT DISTINCT * FROM v0 WHERE (((((- (v0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (ABS((vt1.c0 IN ()))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (ABS((vt1.c0 IN ()))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (((ABS((vt1.c0 IN ()))) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING ((TOTAL(COUNT(*)))-(SUM(AVG(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING (NOT (((TOTAL(COUNT(*)))-(SUM(AVG(v0.c0)))))) UNION ALL SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING ((((TOTAL(COUNT(*)))-(SUM(AVG(v0.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt1.c1 FROM vt0 INNER JOIN vt1 ON vt1.c1;
SELECT DISTINCT vt1.c1 FROM vt0 INNER JOIN vt1 ON vt1.c1 WHERE (LIKE(((vt0.c0)>(0.543311151589095)), (vt1.c1 IN ()))) UNION SELECT DISTINCT vt1.c1 FROM vt0 INNER JOIN vt1 ON vt1.c1 WHERE ((NOT (LIKE(((vt0.c0)>(0.543311151589095)), (vt1.c1 IN ()))))) UNION SELECT DISTINCT vt1.c1 FROM vt0 INNER JOIN vt1 ON vt1.c1 WHERE (((LIKE(((vt0.c0)>(0.543311151589095)), (vt1.c1 IN ()))) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt0 INNER JOIN vt1 ON vt1.c1;
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt0, v0, vt1 WHERE (((((((((vt1.c0)AND(v0.c0)))OR(TRIM(v0.c0, vt1.c1))))OR(UPPER(DISTINCT vt1.c0))))OR(vt1.c1))) GROUP BY vt1.c1, vt1.c0, vt0.c0 UNION SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt0 NOT INDEXED, v0, vt1 WHERE ((NOT (((((((((vt1.c0)AND(v0.c0)))OR(TRIM(v0.c0, vt1.c1))))OR(UPPER(DISTINCT vt1.c0))))OR(vt1.c1))))) GROUP BY vt1.c1, vt1.c0, vt0.c0 UNION SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt0, v0, vt1 WHERE (((((((((((vt1.c0)AND(v0.c0)))OR(TRIM(v0.c0, vt1.c1))))OR(UPPER(DISTINCT vt1.c0))))OR(vt1.c1))) ISNULL)) GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(TOTAL(SUM(COUNT(v0.c0))) COLLATE NOCASE) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(TOTAL(SUM(COUNT(v0.c0))) COLLATE NOCASE))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(TOTAL(SUM(COUNT(v0.c0))) COLLATE NOCASE)) ISNULL);
SELECT vt1.c1 FROM vt1;
SELECT vt1.c1 FROM vt1 WHERE (CASE WHEN CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END THEN vt1.c0 COLLATE NOCASE ELSE (((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END) UNION ALL SELECT vt1.c1 FROM vt1 WHERE ((NOT (CASE WHEN CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END THEN vt1.c0 COLLATE NOCASE ELSE (((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END))) UNION ALL SELECT vt1.c1 FROM vt1 WHERE (((CASE WHEN CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END THEN vt1.c0 COLLATE NOCASE ELSE (((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END) ISNULL));
SELECT vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (LIKELY(DISTINCT ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c1)))) UNION SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (LIKELY(DISTINCT ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c1)))))) UNION SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((LIKELY(DISTINCT ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c1)))) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt1.c0, vt1.c1 FROM vt0, v0 CROSS JOIN vt1 ON rtreenode(v0.c0 COLLATE RTRIM, (v0.c0 IN (vt1.c1, v0.c0, v0.c0))) GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt0, v0 CROSS JOIN vt1 ON rtreenode(v0.c0 COLLATE RTRIM, (v0.c0 IN (vt1.c1, v0.c0, v0.c0))) GROUP BY vt1.c0, vt1.c1 HAVING (~ (COUNT(TOTAL(COUNT(vt1.c0))))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt0, v0 CROSS JOIN vt1 ON rtreenode(v0.c0 COLLATE RTRIM, (v0.c0 IN (vt1.c1, v0.c0, v0.c0))) GROUP BY vt1.c0, vt1.c1 HAVING (NOT ((~ (COUNT(TOTAL(COUNT(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt0, v0 CROSS JOIN vt1 ON rtreenode(v0.c0 COLLATE RTRIM, (v0.c0 IN (vt1.c1, v0.c0, v0.c0))) GROUP BY vt1.c0, vt1.c1 HAVING (((~ (COUNT(TOTAL(COUNT(vt1.c0)))))) ISNULL);
SELECT vt1.c1 FROM vt1;
SELECT ALL vt1.c1 FROM vt1 WHERE (((0.05557752255614401)!=(((vt1.c0)/(vt1.c1))))) UNION ALL SELECT vt1.c1 FROM vt1 WHERE ((NOT (((0.05557752255614401)<>(((vt1.c0)/(vt1.c1))))))) UNION ALL SELECT vt1.c1 FROM vt1 WHERE (((((0.05557752255614401)!=(((vt1.c0)/(vt1.c1))))) ISNULL));
SELECT vt1.c1 FROM vt1;
SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON 1e500 CROSS JOIN vt1 ON (((vt1.c0 IN ())) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN vt1.c1 END) AND (HEX(vt0.c0)));
SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON 1e500 CROSS JOIN vt1 ON (((vt1.c0 IN ())) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN vt1.c1 END) AND (HEX(vt0.c0))) WHERE (TRIM(NULL, v0.c0 COLLATE RTRIM)) UNION SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON 1e500 CROSS JOIN vt1 ON (((vt1.c0 IN ())) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN vt1.c1 END) AND (HEX(vt0.c0))) WHERE ((NOT (TRIM(NULL, v0.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON 1e500 CROSS JOIN vt1 ON (((vt1.c0 IN ())) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN vt1.c1 END) AND (HEX(vt0.c0))) WHERE (((TRIM(NULL, v0.c0 COLLATE RTRIM)) ISNULL));
SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON 1e500 CROSS JOIN vt1 ON (((vt1.c0 IN ())) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN vt1.c1 END) AND (HEX(vt0.c0)));
SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt0, vt1 WHERE (COALESCE(MIN(vt0.c0, vt0.c0), (vt1.c0 IN (vt0.c0)))) GROUP BY vt1.c0, vt0.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt0, vt1 WHERE ((NOT (COALESCE(MIN(vt0.c0, vt0.c0), (vt1.c0 IN (vt0.c0)))))) GROUP BY vt1.c0, vt0.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt0, vt1 WHERE (((COALESCE(MIN(vt0.c0, vt0.c0), (vt1.c0 IN (vt0.c0)))) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(COUNT(COUNT(GROUP_CONCAT(v0.c0))) AS BLOB) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(COUNT(COUNT(GROUP_CONCAT(v0.c0))) AS BLOB))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(COUNT(COUNT(GROUP_CONCAT(v0.c0))) AS BLOB)) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((vt1.c0 COLLATE RTRIM IN ())) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((vt1.c0 COLLATE RTRIM IN ())))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((((vt1.c0 COLLATE RTRIM IN ())) ISNULL));
SELECT vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ())) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((vt0.c0 COLLATE BINARY IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY IN ())) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((((vt0.c0)) BETWEEN (((v0.c0 IN (vt0.c0, vt0.c0)))) AND ((vt0.c0)))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN (((v0.c0 IN (vt0.c0, vt0.c0)))) AND ((vt0.c0)))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((((((vt0.c0)) BETWEEN (((v0.c0 IN (vt0.c0, vt0.c0)))) AND ((vt0.c0)))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt1.c1 FROM vt1, v0 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, v0 GROUP BY vt1.c1 HAVING AVG(TOTAL(v0.c0)) UNION ALL SELECT ALL vt1.c1 FROM vt1, v0 GROUP BY vt1.c1 HAVING (NOT (AVG(TOTAL(v0.c0)))) UNION ALL SELECT ALL vt1.c1 FROM vt1, v0 GROUP BY vt1.c1 HAVING ((AVG(TOTAL(v0.c0))) ISNULL);
SELECT ALL vt1.c1, vt0.c0, v0.c0, vt1.c0 FROM v0, vt0, vt1;
SELECT vt1.c1, vt0.c0, v0.c0, vt1.c0 FROM v0, vt0, vt1 WHERE ((((((v0.c0) ISNULL)))!=((UPPER(DISTINCT vt0.c0))))) UNION ALL SELECT vt1.c1, vt0.c0, v0.c0, vt1.c0 FROM v0, vt0, vt1 WHERE ((NOT ((((((v0.c0) ISNULL)))<>((UPPER(DISTINCT vt0.c0))))))) UNION ALL SELECT vt1.c1, vt0.c0, v0.c0, vt1.c0 FROM v0, vt0, vt1 WHERE ((((((((v0.c0) ISNULL)))<>((UPPER(DISTINCT vt0.c0))))) ISNULL));
SELECT ALL vt1.c1, vt0.c0, v0.c0, vt1.c0 FROM v0, vt0, vt1;
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (CASE WHEN ((((NULL)AND(vt0.c0)))OR(vt0.c0)) THEN (((v0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, '1088986219', 0X17f88822)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN vt0.c0 THEN '892416393' WHEN ((v0.c0) NOT NULL) THEN load_extension(v0.c0) ELSE CAST(vt0.c0 AS TEXT) END) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ((NOT (CASE WHEN ((((NULL)AND(vt0.c0)))OR(vt0.c0)) THEN (((v0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, '1088986219', 0x17f88822)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN vt0.c0 THEN '892416393' WHEN ((v0.c0) NOT NULL) THEN load_extension(v0.c0) ELSE CAST(vt0.c0 AS TEXT) END))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (((CASE WHEN ((((NULL)AND(vt0.c0)))OR(vt0.c0)) THEN (((v0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, '1088986219', 0x17f88822)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN vt0.c0 THEN '892416393' WHEN ((v0.c0) NOT NULL) THEN load_extension(v0.c0) ELSE CAST(vt0.c0 AS TEXT) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0 NOT INDEXED, vt1, v0 WHERE (NULL) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0, vt1, v0 WHERE ((NOT (NULL))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1, v0 WHERE (((NULL) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c1, vt0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c1, vt0.c0;
SELECT vt1.c1, vt0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c1, vt0.c0 HAVING (((AVG(vt0.c0)) NOT NULL) IN (COUNT(*) COLLATE BINARY, COUNT(-1339946140))) UNION ALL SELECT vt1.c1, vt0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c1, vt0.c0 HAVING (NOT ((((AVG(vt0.c0)) NOT NULL) IN (COUNT(*) COLLATE BINARY, COUNT(-1339946140))))) UNION ALL SELECT vt1.c1, vt0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c1, vt0.c0 HAVING (((((AVG(vt0.c0)) NOT NULL) IN (COUNT(*) COLLATE BINARY, COUNT(-1339946140)))) ISNULL);
SELECT ALL vt1.c1, vt0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c1, vt0.c0;
SELECT vt1.c1, vt0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c1, vt0.c0 HAVING (((AVG(vt0.c0)) NOT NULL) IN (COUNT(*) COLLATE BINARY, COUNT(-1339946140))) UNION ALL SELECT vt1.c1, vt0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c1, vt0.c0 HAVING (NOT ((((AVG(vt0.c0)) NOT NULL) IN (COUNT(*) COLLATE BINARY, COUNT(-1339946140))))) UNION ALL SELECT vt1.c1, vt0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c1, vt0.c0 HAVING (((((AVG(vt0.c0)) NOT NULL) IN (COUNT(*) COLLATE BINARY, COUNT(-1339946140)))) ISNULL);
SELECT ALL vt1.c1, vt0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c1, vt0.c0;
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((((((((vt1.c1)AND(((vt1.c0)LIKE(vt1.c1)))))OR(CAST(vt0.c0 AS BLOB))))OR(((vt1.c1) BETWEEN (v0.c0) AND (vt1.c0)))))AND(((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))) CROSS JOIN vt1 ON (((v0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END)) AND ((((v0.c0)&(vt1.c1)))));
SELECT DISTINCT vt1.c1 FROM v0, vt1;
SELECT DISTINCT vt1.c1 FROM v0, vt1 WHERE (((vt1.c1)>>(vt1.c0)) COLLATE RTRIM) UNION SELECT DISTINCT vt1.c1 FROM v0, vt1 WHERE ((NOT (((vt1.c1)>>(vt1.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c1 FROM v0, vt1 WHERE (((((vt1.c1)>>(vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c1 FROM v0, vt1;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))*(-3.76950628E8))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 WHERE ((NOT (((CAST(vt0.c0 AS NUMERIC))*(-3.76950628E8))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))*(-3.76950628E8))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c1, vt0.c0, vt1.c0, v0.c0 FROM vt0 CROSS JOIN vt1 ON (- (((vt0.c0)>(v0.c0)))) CROSS JOIN v0 ON (((vt1.c1)) BETWEEN ((((v0.c0)||(vt0.c0)))) AND (('M'))) GROUP BY vt1.c1, vt0.c0, vt1.c0, v0.c0;
SELECT ALL vt1.c1, vt0.c0, vt1.c0, v0.c0 FROM vt0 CROSS JOIN vt1 ON (- (((vt0.c0)>(v0.c0)))) CROSS JOIN v0 ON (((vt1.c1)) BETWEEN ((((v0.c0)||(vt0.c0)))) AND (('M'))) GROUP BY vt1.c1, vt0.c0, vt1.c0, v0.c0 HAVING ((vt1.c1)!=(((SUM(x''))%(COUNT(NULL))))) UNION ALL SELECT vt1.c1, vt0.c0, vt1.c0, v0.c0 FROM vt0 CROSS JOIN vt1 ON (- (((vt0.c0)>(v0.c0)))) CROSS JOIN v0 ON (((vt1.c1)) BETWEEN ((((v0.c0)||(vt0.c0)))) AND (('M'))) GROUP BY vt1.c1, vt0.c0, vt1.c0, v0.c0 HAVING (NOT (((vt1.c1)<>(((SUM(x''))%(COUNT(NULL))))))) UNION ALL SELECT vt1.c1, vt0.c0, vt1.c0, v0.c0 FROM vt0 CROSS JOIN vt1 ON (- (((vt0.c0)>(v0.c0)))) CROSS JOIN v0 ON (((vt1.c1)) BETWEEN ((((v0.c0)||(vt0.c0)))) AND (('M'))) GROUP BY vt1.c1, vt0.c0, vt1.c0, v0.c0 HAVING ((((vt1.c1)<>(((SUM(x''))%(COUNT(NULL)))))) ISNULL);
SELECT ALL vt1.c1, vt0.c0, vt1.c0, v0.c0 FROM vt0 CROSS JOIN vt1 ON (- (((vt0.c0)>(v0.c0)))) CROSS JOIN v0 ON (((vt1.c1)) BETWEEN ((((v0.c0)||(vt0.c0)))) AND (('M'))) GROUP BY vt1.c1, vt0.c0, vt1.c0, v0.c0;
SELECT ALL vt1.c1, vt0.c0, vt1.c0, v0.c0 FROM vt0 CROSS JOIN vt1 ON (- (((vt0.c0)>(v0.c0)))) CROSS JOIN v0 ON (((vt1.c1)) BETWEEN ((((v0.c0)||(vt0.c0)))) AND (('M'))) GROUP BY vt1.c1, vt0.c0, vt1.c0, v0.c0 HAVING ((vt1.c1)!=(((SUM(x''))%(COUNT(NULL))))) UNION ALL SELECT vt1.c1, vt0.c0, vt1.c0, v0.c0 FROM vt0 CROSS JOIN vt1 ON (- (((vt0.c0)>(v0.c0)))) CROSS JOIN v0 ON (((vt1.c1)) BETWEEN ((((v0.c0)||(vt0.c0)))) AND (('M'))) GROUP BY vt1.c1, vt0.c0, vt1.c0, v0.c0 HAVING (NOT (((vt1.c1)<>(((SUM(x''))%(COUNT(NULL))))))) UNION ALL SELECT vt1.c1, vt0.c0, vt1.c0, v0.c0 FROM vt0 CROSS JOIN vt1 ON (- (((vt0.c0)>(v0.c0)))) CROSS JOIN v0 ON (((vt1.c1)) BETWEEN ((((v0.c0)||(vt0.c0)))) AND (('M'))) GROUP BY vt1.c1, vt0.c0, vt1.c0, v0.c0 HAVING ((((vt1.c1)<>(((SUM(x''))%(COUNT(NULL)))))) ISNULL);
SELECT ALL vt1.c1, vt0.c0, vt1.c0, v0.c0 FROM vt0 CROSS JOIN vt1 ON (- (((vt0.c0)>(v0.c0)))) CROSS JOIN v0 ON (((vt1.c1)) BETWEEN ((((v0.c0)||(vt0.c0)))) AND (('M'))) GROUP BY vt1.c1, vt0.c0, vt1.c0, v0.c0;
SELECT vt1.c1 FROM vt1, vt0, v0;
SELECT vt1.c1 FROM vt1, vt0, v0 WHERE (LTRIM((((vt1.c0, vt1.c0, v0.c0))<((vt1.c1, vt1.c1, vt1.c1))))) UNION ALL SELECT vt1.c1 FROM vt1, vt0, v0 WHERE ((NOT (LTRIM((((vt1.c0, vt1.c0, v0.c0))<((vt1.c1, vt1.c1, vt1.c1))))))) UNION ALL SELECT ALL vt1.c1 FROM vt1, vt0, v0 WHERE (((LTRIM((((vt1.c0, vt1.c0, v0.c0))<((vt1.c1, vt1.c1, vt1.c1))))) ISNULL));
SELECT vt1.c1 FROM vt1, vt0, v0;
SELECT DISTINCT * FROM v0 NOT INDEXED;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0 NOT INDEXED;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (highlight((((v0.c0))<=((vt0.c0))), (('ᢋ\raȳ') NOT BETWEEN (v0.c0) AND (v0.c0)), COALESCE(DISTINCT vt0.c0, vt0.c0), ((('[gO7', vt0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (highlight((((v0.c0))<=((vt0.c0))), (('ᢋ\raȳ') NOT BETWEEN (v0.c0) AND (v0.c0)), COALESCE(DISTINCT vt0.c0, vt0.c0), ((('[gO7', vt0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 NOT INDEXED WHERE (((highlight((((v0.c0))<=((vt0.c0))), (('ᢋ\raȳ') NOT BETWEEN (v0.c0) AND (v0.c0)), COALESCE(DISTINCT vt0.c0, vt0.c0), ((('[gO7', vt0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0))))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL vt1.c1, v0.c0 FROM vt1 CROSS JOIN v0 ON CASE WHEN vt1.c1 COLLATE RTRIM THEN vt1.c0 ELSE (vt1.c0 IN (vt1.c0, vt1.c0)) END GROUP BY vt1.c1, v0.c0;
SELECT vt1.c1, v0.c0 FROM vt1 CROSS JOIN v0 ON CASE WHEN vt1.c1 COLLATE RTRIM THEN vt1.c0 ELSE (vt1.c0 IN (vt1.c0, vt1.c0)) END GROUP BY vt1.c1, v0.c0 HAVING MIN(((vt1.c0) NOTNULL)) UNION ALL SELECT ALL vt1.c1, v0.c0 FROM vt1 CROSS JOIN v0 ON CASE WHEN vt1.c1 COLLATE RTRIM THEN vt1.c0 ELSE (vt1.c0 IN (vt1.c0, vt1.c0)) END GROUP BY vt1.c1, v0.c0 HAVING (NOT (MIN(((vt1.c0) NOTNULL)))) UNION ALL SELECT ALL vt1.c1, v0.c0 FROM vt1 CROSS JOIN v0 ON CASE WHEN vt1.c1 COLLATE RTRIM THEN vt1.c0 ELSE (vt1.c0 IN (vt1.c0, vt1.c0)) END GROUP BY vt1.c1, v0.c0 HAVING ((MIN(((vt1.c0) NOTNULL))) ISNULL);
SELECT ALL vt1.c1, v0.c0 FROM vt1 CROSS JOIN v0 ON CASE WHEN vt1.c1 COLLATE RTRIM THEN vt1.c0 ELSE (vt1.c0 IN (vt1.c0, vt1.c0)) END GROUP BY vt1.c1, v0.c0;
SELECT vt1.c1, v0.c0 FROM vt1 CROSS JOIN v0 ON CASE WHEN vt1.c1 COLLATE RTRIM THEN vt1.c0 ELSE (vt1.c0 IN (vt1.c0, vt1.c0)) END GROUP BY vt1.c1, v0.c0 HAVING MIN(((vt1.c0) NOTNULL)) UNION ALL SELECT ALL vt1.c1, v0.c0 FROM vt1 CROSS JOIN v0 ON CASE WHEN vt1.c1 COLLATE RTRIM THEN vt1.c0 ELSE (vt1.c0 IN (vt1.c0, vt1.c0)) END GROUP BY vt1.c1, v0.c0 HAVING (NOT (MIN(((vt1.c0) NOTNULL)))) UNION ALL SELECT ALL vt1.c1, v0.c0 FROM vt1 CROSS JOIN v0 ON CASE WHEN vt1.c1 COLLATE RTRIM THEN vt1.c0 ELSE (vt1.c0 IN (vt1.c0, vt1.c0)) END GROUP BY vt1.c1, v0.c0 HAVING ((MIN(((vt1.c0) NOTNULL))) ISNULL);
SELECT ALL vt1.c1, v0.c0 FROM vt1 CROSS JOIN v0 ON CASE WHEN vt1.c1 COLLATE RTRIM THEN vt1.c0 ELSE (vt1.c0 IN (vt1.c0, vt1.c0)) END GROUP BY vt1.c1, v0.c0;
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN v0 ON (+ (vt1.c1)) COLLATE NOCASE;
SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN v0 ON (+ (vt1.c1)) COLLATE NOCASE WHERE (CAST((~ (vt1.c0)) AS INTEGER)) UNION ALL SELECT * FROM vt0, vt1 RIGHT OUTER JOIN v0 ON (+ (vt1.c1)) COLLATE NOCASE WHERE ((NOT (CAST((~ (vt1.c0)) AS INTEGER)))) UNION ALL SELECT * FROM vt0, vt1 RIGHT OUTER JOIN v0 ON (+ (vt1.c1)) COLLATE NOCASE WHERE (((CAST((~ (vt1.c0)) AS INTEGER)) ISNULL));
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN v0 ON (+ (vt1.c1)) COLLATE NOCASE;
SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON CASE WHEN NULL THEN NULL ELSE (((vt0.c0, v0.c0, '456374282'))<=((v0.c0, v0.c0, vt0.c0))) END;
SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON CASE WHEN NULL THEN NULL ELSE (((vt0.c0, v0.c0, '456374282'))<=((v0.c0, v0.c0, vt0.c0))) END WHERE (CAST(((v0.c0)GLOB(v0.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON CASE WHEN NULL THEN NULL ELSE (((vt0.c0, v0.c0, '456374282'))<=((v0.c0, v0.c0, vt0.c0))) END WHERE ((NOT (CAST(((v0.c0)GLOB(v0.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON CASE WHEN NULL THEN NULL ELSE (((vt0.c0, v0.c0, '456374282'))<=((v0.c0, v0.c0, vt0.c0))) END WHERE (((CAST(((v0.c0)GLOB(v0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON CASE WHEN NULL THEN NULL ELSE (((vt0.c0, v0.c0, '456374282'))<=((v0.c0, v0.c0, vt0.c0))) END;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((+ (vt0.c0))) NOT NULL)) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT ((((+ (vt0.c0))) NOT NULL)))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((((+ (vt0.c0))) NOT NULL)) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL * FROM vt1, v0;
SELECT * FROM vt1, v0 WHERE (CASE WHEN TRIM(DISTINCT vt1.c0, vt1.c0) THEN (('S?') NOTNULL) ELSE vt1.c0 COLLATE BINARY END) UNION ALL SELECT ALL * FROM vt1, v0 WHERE ((NOT (CASE WHEN TRIM(DISTINCT vt1.c0, vt1.c0) THEN (('S?') NOTNULL) ELSE vt1.c0 COLLATE BINARY END))) UNION ALL SELECT * FROM vt1, v0 WHERE (((CASE WHEN TRIM(DISTINCT vt1.c0, vt1.c0) THEN (('S?') NOTNULL) ELSE vt1.c0 COLLATE BINARY END) ISNULL));
SELECT ALL * FROM vt1, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))||(((v0.c0)/(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))||(((v0.c0)/(v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))||(((v0.c0)/(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM vt0, v0, vt1 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0, vt1 WHERE (((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)))=(0.6832513757298513))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 NOT INDEXED, vt1 WHERE ((NOT (((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)))==(0.6832513757298513))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0, vt1 WHERE (((((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)))=(0.6832513757298513))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0, vt1 GROUP BY v0.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (((vt1.c1, GROUP_CONCAT(vt1.c1), TOTAL(vt1.c0))) NOT BETWEEN ((AVG(vt1.c0), MIN(TOTAL(GROUP_CONCAT(AVG(vt1.c0)))), COUNT(MAX(MAX(x''))))) AND ((TOTAL(SUM(vt1.c0)), (- (-865472287)), GROUP_CONCAT(COUNT(vt1.c0))))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT ((((vt1.c1, GROUP_CONCAT(vt1.c1), TOTAL(vt1.c0))) NOT BETWEEN ((AVG(vt1.c0), MIN(TOTAL(GROUP_CONCAT(AVG(vt1.c0)))), COUNT(MAX(MAX(x''))))) AND ((TOTAL(SUM(vt1.c0)), (- (-865472287)), GROUP_CONCAT(COUNT(vt1.c0))))))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (((((vt1.c1, GROUP_CONCAT(vt1.c1), TOTAL(vt1.c0))) NOT BETWEEN ((AVG(vt1.c0), MIN(TOTAL(GROUP_CONCAT(AVG(vt1.c0)))), COUNT(MAX(MAX(x''))))) AND ((TOTAL(SUM(vt1.c0)), (- (-865472287)), GROUP_CONCAT(COUNT(vt1.c0)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt1, vt0;
SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS BLOB)) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((NOT (CAST(vt0.c0 COLLATE BINARY AS BLOB)))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 WHERE (((CAST(vt0.c0 COLLATE BINARY AS BLOB)) ISNULL));
SELECT ALL vt0.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((- (((vt1.c0) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((NOT ((- (((vt1.c0) IS FALSE)))))) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((((- (((vt1.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS REAL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST((vt0.c0 IN ()) AS REAL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST((vt0.c0 IN ()) AS REAL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((GROUP_CONCAT(v0.c0))OR('1050561382')))OR(MAX(SUM(GROUP_CONCAT(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((GROUP_CONCAT(v0.c0))OR('1050561382')))OR(MAX(SUM(GROUP_CONCAT(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((GROUP_CONCAT(v0.c0))OR('1050561382')))OR(MAX(SUM(GROUP_CONCAT(v0.c0)))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON CAST(v0.c0 AS TEXT);
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON CAST(v0.c0 AS TEXT) WHERE (CASE ((vt0.c0)>(vt0.c0))  WHEN ((((v0.c0)OR(v0.c0)))OR(x'')) THEN CAST(v0.c0 AS NUMERIC) ELSE ((v0.c0) ISNULL) END) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON CAST(v0.c0 AS TEXT) WHERE ((NOT (CASE ((vt0.c0)>(vt0.c0))  WHEN ((((v0.c0)OR(v0.c0)))OR(x'')) THEN CAST(v0.c0 AS NUMERIC) ELSE ((v0.c0) ISNULL) END))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON CAST(v0.c0 AS TEXT) WHERE (((CASE ((vt0.c0)>(vt0.c0))  WHEN ((((v0.c0)OR(v0.c0)))OR(x'')) THEN CAST(v0.c0 AS NUMERIC) ELSE ((v0.c0) ISNULL) END) ISNULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON CAST(v0.c0 AS TEXT);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)AND(x'' COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)AND(x'' COLLATE BINARY))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)AND(x'' COLLATE BINARY))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(SUM(MIN(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(SUM(MIN(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(SUM(MIN(vt0.c0)))) ISNULL);
SELECT * FROM vt1, v0;
SELECT * FROM vt1, v0 WHERE (((((vt1.c0)AND(v0.c0 COLLATE NOCASE)))OR(((((vt1.c1)OR(vt1.c0)))AND(v0.c0))))) UNION ALL SELECT * FROM vt1, v0 WHERE ((NOT (((((vt1.c0)AND(v0.c0 COLLATE NOCASE)))OR(((((vt1.c1)OR(vt1.c0)))AND(v0.c0))))))) UNION ALL SELECT * FROM vt1, v0 WHERE (((((((vt1.c0)AND(v0.c0 COLLATE NOCASE)))OR(((((vt1.c1)OR(vt1.c0)))AND(v0.c0))))) ISNULL));
SELECT * FROM vt1, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((x'' IN ()) IN ())) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((x'' IN ()) IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((x'' IN ()) IN ())) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt1.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1, vt0 WHERE ((~ ((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt0.c0)))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1, vt0 WHERE ((NOT ((~ ((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt0.c0)))))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1, vt0 WHERE ((((~ ((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt0.c0)))))) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c1, vt1.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING COUNT(*) COLLATE RTRIM UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (COUNT(*) COLLATE RTRIM)) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((COUNT(*) COLLATE RTRIM) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING COUNT(*) COLLATE RTRIM UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (COUNT(*) COLLATE RTRIM)) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((COUNT(*) COLLATE RTRIM) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (1494169784) UNION ALL SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (1494169784))) UNION ALL SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((1494169784) ISNULL));
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0 FROM v0, vt1, vt0;
SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0 FROM v0, vt1, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0 FROM v0, vt1, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0 FROM v0, vt1, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0 FROM v0, vt1, vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS BLOB))/((+ (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS BLOB))/((+ (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS BLOB))/((+ (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((COUNT(vt0.c0))<(vt0.c0)))AND(MIN(vt0.c0))))AND(((MAX(COUNT(*)))>=(TOTAL(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((((COUNT(vt0.c0))<(vt0.c0)))AND(MIN(vt0.c0))))AND(((MAX(COUNT(*)))>=(TOTAL(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((COUNT(vt0.c0))<(vt0.c0)))AND(MIN(vt0.c0))))AND(((MAX(COUNT(*)))>=(TOTAL(vt0.c0)))))) ISNULL);
SELECT vt1.c1 FROM v0, vt1, vt0;
SELECT ALL vt1.c1 FROM v0, vt1, vt0 WHERE (vt0.c0 COLLATE RTRIM) UNION ALL SELECT ALL vt1.c1 FROM v0, vt1, vt0 WHERE ((NOT (vt0.c0 COLLATE RTRIM))) UNION ALL SELECT vt1.c1 FROM v0, vt1, vt0 WHERE (((vt0.c0 COLLATE RTRIM) ISNULL));
SELECT vt1.c1 FROM v0, vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt1, v0, vt0;
SELECT DISTINCT vt0.c0 FROM vt1, v0, vt0 WHERE (((x'6c92') IS FALSE)) UNION SELECT DISTINCT vt0.c0 FROM vt1, v0, vt0 WHERE ((NOT (((x'6c92') IS FALSE)))) UNION SELECT DISTINCT vt0.c0 FROM vt1, v0, vt0 WHERE (((((x'6c92') IS FALSE)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, v0, vt0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 NOT INDEXED, vt0 WHERE (((load_extension(vt1.c1))!=(CASE WHEN vt0.c0 THEN vt0.c0 END))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((load_extension(vt1.c1))!=(CASE WHEN vt0.c0 THEN vt0.c0 END))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1, vt0 WHERE (((((load_extension(vt1.c1))<>(CASE WHEN vt0.c0 THEN vt0.c0 END))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0;
SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING SUM(TOTAL(v0.c0)) UNION ALL SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING (NOT (SUM(TOTAL(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING ((SUM(TOTAL(v0.c0))) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1 NATURAL JOIN v0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 NATURAL JOIN v0 WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) THEN CASE NULL  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN v0.c0 WHEN vt1.c0 THEN vt1.c1 ELSE v0.c0 END END) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 NATURAL JOIN v0 WHERE ((NOT (CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) THEN CASE NULL  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN v0.c0 WHEN vt1.c0 THEN vt1.c1 ELSE v0.c0 END END))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 NATURAL JOIN v0 WHERE (((CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) THEN CASE NULL  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN v0.c0 WHEN vt1.c0 THEN vt1.c1 ELSE v0.c0 END END) ISNULL));
SELECT ALL vt1.c1, vt1.c0 FROM vt1 NATURAL JOIN v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE (((vt0.c0)||(vt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (((vt0.c0)||(vt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((vt0.c0)||(vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 WHERE (((v0.c0)IS(NULL)) COLLATE RTRIM) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((NOT (((v0.c0)IS(NULL)) COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE (((((v0.c0)IS(NULL)) COLLATE RTRIM) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING MAX(MIN(vt0.c0)) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (MAX(MIN(vt0.c0)))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((MAX(MIN(vt0.c0))) ISNULL);
SELECT ALL * FROM vt1, v0;
SELECT ALL * FROM vt1, v0 NOT INDEXED WHERE ((((v0.c0, CAST(vt1.c1 AS INTEGER), CASE vt1.c0  WHEN NULL THEN '-1607491920' END))>=(((NOT (vt1.c1)), ((((((((vt1.c1)OR(v0.c0)))AND(v0.c0)))OR('-1324113578')))OR(v0.c0)), v0.c0)))) UNION ALL SELECT ALL * FROM vt1, v0 WHERE ((NOT ((((v0.c0, CAST(vt1.c1 AS INTEGER), CASE vt1.c0  WHEN NULL THEN '-1607491920' END))>=(((NOT (vt1.c1)), ((((((((vt1.c1)OR(v0.c0)))AND(v0.c0)))OR('-1324113578')))OR(v0.c0)), v0.c0)))))) UNION ALL SELECT * FROM vt1, v0 NOT INDEXED WHERE ((((((v0.c0, CAST(vt1.c1 AS INTEGER), CASE vt1.c0  WHEN NULL THEN '-1607491920' END))>=(((NOT (vt1.c1)), ((((((((vt1.c1)OR(v0.c0)))AND(v0.c0)))OR('-1324113578')))OR(v0.c0)), v0.c0)))) ISNULL));
SELECT ALL * FROM vt1, v0;
SELECT DISTINCT vt0.c0 FROM vt0, vt1, v0;
SELECT DISTINCT vt0.c0 FROM vt0, vt1, v0 WHERE (CAST(x'5338' AS INTEGER)) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1, v0 WHERE ((NOT (CAST(x'5338' AS INTEGER)))) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1, v0 WHERE (((CAST(x'5338' AS INTEGER)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, vt1, v0;
SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1 CROSS JOIN vt0 ON (((- (vt1.c1))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1))) AND ((- (vt1.c1)))) GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1 CROSS JOIN vt0 ON (((- (vt1.c1))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1))) AND ((- (vt1.c1)))) WHERE ((+ (vt1.c1)) COLLATE BINARY) GROUP BY vt1.c0, vt1.c1, vt0.c0 UNION SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt1 CROSS JOIN vt0 ON (((- (vt1.c1))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1))) AND ((- (vt1.c1)))) WHERE ((NOT ((+ (vt1.c1)) COLLATE BINARY))) GROUP BY vt1.c0, vt1.c1, vt0.c0 UNION SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1 CROSS JOIN vt0 ON (((- (vt1.c1))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1))) AND ((- (vt1.c1)))) WHERE ((((+ (vt1.c1)) COLLATE BINARY) ISNULL)) GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1 CROSS JOIN vt0 ON (((- (vt1.c1))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1))) AND ((- (vt1.c1)))) GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((COUNT(*)))==((MIN(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((COUNT(*)))==((MIN(COUNT(*))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((COUNT(*)))==((MIN(COUNT(*)))))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (CAST((v0.c0 IN ()) AS TEXT)) UNION ALL SELECT * FROM v0 WHERE ((NOT (CAST((v0.c0 IN ()) AS TEXT)))) UNION ALL SELECT * FROM v0 WHERE (((CAST((v0.c0 IN ()) AS TEXT)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE (((((((((((vt1.c0) NOT NULL))AND(CAST(vt1.c1 AS BLOB))))AND((vt1.c1 IN ()))))AND((+ (vt1.c0)))))AND(CAST(vt1.c0 AS BLOB)))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (((((((((((vt1.c0) NOT NULL))AND(CAST(vt1.c1 AS BLOB))))AND((vt1.c1 IN ()))))AND((+ (vt1.c0)))))AND(CAST(vt1.c0 AS BLOB)))))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE (((((((((((((vt1.c0) NOT NULL))AND(CAST(vt1.c1 AS BLOB))))AND((vt1.c1 IN ()))))AND((+ (vt1.c0)))))AND(CAST(vt1.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((+ (((v0.c0)|(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((+ (((v0.c0)|(v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((+ (((v0.c0)|(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING COUNT(HEX(COUNT(*))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (COUNT(HEX(COUNT(*))))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((COUNT(HEX(COUNT(*)))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST(NULL AS REAL)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST(NULL AS REAL)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(NULL AS REAL)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM v0, vt1 FULL OUTER JOIN vt0 ON ((CAST(vt1.c1 AS BLOB))OR((vt1.c0 IN ())));
SELECT DISTINCT * FROM v0, vt1 FULL OUTER JOIN vt0 ON ((CAST(vt1.c1 AS BLOB))OR((vt1.c0 IN ()))) WHERE ((((('Nq' COLLATE BINARY)OR(LIKE(vt0.c0, vt0.c0))))OR(((vt0.c0) NOT BETWEEN (vt1.c1) AND (v0.c0))))) UNION SELECT DISTINCT * FROM v0, vt1 FULL OUTER JOIN vt0 ON ((CAST(vt1.c1 AS BLOB))OR((vt1.c0 IN ()))) WHERE ((NOT ((((('Nq' COLLATE BINARY)OR(LIKE(vt0.c0, vt0.c0))))OR(((vt0.c0) NOT BETWEEN (vt1.c1) AND (v0.c0))))))) UNION SELECT DISTINCT * FROM v0, vt1 FULL OUTER JOIN vt0 ON ((CAST(vt1.c1 AS BLOB))OR((vt1.c0 IN ()))) WHERE ((((((('Nq' COLLATE BINARY)OR(LIKE(vt0.c0, vt0.c0))))OR(((vt0.c0) NOT BETWEEN (vt1.c1) AND (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, vt1 FULL OUTER JOIN vt0 ON ((CAST(vt1.c1 AS BLOB))OR((vt1.c0 IN ())));
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE ((((vt0.c0 IN (v0.c0))) BETWEEN ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0)>(vt0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE ((NOT ((((vt0.c0 IN (v0.c0))) BETWEEN ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0)>(vt0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE ((((((vt0.c0 IN (v0.c0))) BETWEEN ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0)>(vt0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING AVG(TOTAL(vt1.c1)) COLLATE BINARY UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (AVG(TOTAL(vt1.c1)) COLLATE BINARY)) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((AVG(TOTAL(vt1.c1)) COLLATE BINARY) ISNULL);
SELECT ALL * FROM vt1, v0, vt0;
SELECT ALL * FROM vt1, v0, vt0 WHERE ((((('')AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(UNLIKELY(vt0.c0)))) UNION ALL SELECT ALL * FROM vt1, v0, vt0 WHERE ((NOT ((((('')AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(UNLIKELY(vt0.c0)))))) UNION ALL SELECT ALL * FROM vt1, v0, vt0 WHERE ((((((('')AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(UNLIKELY(vt0.c0)))) ISNULL));
SELECT ALL * FROM vt1, v0, vt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 WHERE (0Xffffffffbaad7864) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT (0xffffffffbaad7864))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE (((0xffffffffbaad7864) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt0.c0, vt1.c1, v0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0, vt1.c1, v0.c0;
SELECT ALL vt0.c0, vt1.c1, v0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0, vt1.c1, v0.c0 HAVING TOTAL(CASE WHEN vt1.c1 THEN COUNT(SUM(0.054261236984293304)) END) UNION ALL SELECT ALL vt0.c0, vt1.c1, v0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0, vt1.c1, v0.c0 HAVING (NOT (TOTAL(CASE WHEN vt1.c1 THEN COUNT(SUM(0.054261236984293304)) END))) UNION ALL SELECT vt0.c0, vt1.c1, v0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0, vt1.c1, v0.c0 HAVING ((TOTAL(CASE WHEN vt1.c1 THEN COUNT(SUM(0.054261236984293304)) END)) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((((v0.c0)>>(v0.c0))) NOT NULL)) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((v0.c0)>>(v0.c0))) NOT NULL)))) UNION ALL SELECT * FROM v0 WHERE (((((((v0.c0)>>(v0.c0))) NOT NULL)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (('-946476482' IN ())) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (('-946476482' IN ())))) UNION SELECT DISTINCT * FROM vt1 WHERE (((('-946476482' IN ())) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (((+ (vt1.c0)))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (((+ (vt1.c0)))))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (((+ (vt1.c0)))))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1, v0 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1, v0 GROUP BY vt1.c1, vt1.c0 HAVING AVG((((COUNT(*)))!=((vt1.c0)))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1, v0 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (AVG((((COUNT(*)))<>((vt1.c0)))))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1, v0 GROUP BY vt1.c1, vt1.c0 HAVING ((AVG((((COUNT(*)))<>((vt1.c0))))) ISNULL);
SELECT ALL vt1.c1, v0.c0, vt1.c0 FROM vt1, v0;
SELECT vt1.c1, v0.c0, vt1.c0 FROM vt1, v0 WHERE (CASE WHEN v0.c0 COLLATE RTRIM THEN vt1.c1 ELSE '(Al]?FWD첳' COLLATE NOCASE END) UNION ALL SELECT ALL vt1.c1, v0.c0, vt1.c0 FROM vt1, v0 WHERE ((NOT (CASE WHEN v0.c0 COLLATE RTRIM THEN vt1.c1 ELSE '(Al]?FWD첳' COLLATE NOCASE END))) UNION ALL SELECT vt1.c1, v0.c0, vt1.c0 FROM vt1, v0 WHERE (((CASE WHEN v0.c0 COLLATE RTRIM THEN vt1.c1 ELSE '(Al]?FWD첳' COLLATE NOCASE END) ISNULL));
SELECT ALL vt1.c1, v0.c0, vt1.c0 FROM vt1, v0;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt1 ON (json_array_length(vt1.c0) IN ((+ (vt1.c1))));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt1 ON (json_array_length(vt1.c0) IN ((+ (vt1.c1)))) WHERE ('K') UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt1 ON (json_array_length(vt1.c0) IN ((+ (vt1.c1)))) WHERE ((NOT ('K'))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt1 ON (json_array_length(vt1.c0) IN ((+ (vt1.c1)))) WHERE ((('K') ISNULL));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt1 ON (json_array_length(vt1.c0) IN ((+ (vt1.c1))));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (TRIM(DISTINCT vt0.c0 COLLATE RTRIM, (NOT (vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (TRIM(DISTINCT vt0.c0 COLLATE RTRIM, (NOT (vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((TRIM(DISTINCT vt0.c0 COLLATE RTRIM, (NOT (vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0 HAVING AVG(MIN(vt1.c0)) UNION ALL SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0 HAVING (NOT (AVG(MIN(vt1.c0)))) UNION ALL SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0 HAVING ((AVG(MIN(vt1.c0))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((((v0.c0)) BETWEEN (('402163746')) AND ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((v0.c0)) BETWEEN (('402163746')) AND ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((((v0.c0)) BETWEEN (('402163746')) AND ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0, vt1 INNER JOIN vt0 ON 0.03886986594125197;
SELECT DISTINCT * FROM v0, vt1 INNER JOIN vt0 ON 0.03886986594125197 WHERE (((((vt1.c1) NOT BETWEEN (vt1.c0) AND (v0.c0)))<<((('-1185789063') IS TRUE)))) UNION SELECT DISTINCT * FROM v0, vt1 INNER JOIN vt0 ON 0.03886986594125197 WHERE ((NOT (((((vt1.c1) NOT BETWEEN (vt1.c0) AND (v0.c0)))<<((('-1185789063') IS TRUE)))))) UNION SELECT DISTINCT * FROM v0, vt1 INNER JOIN vt0 ON 0.03886986594125197 WHERE (((((((vt1.c1) NOT BETWEEN (vt1.c0) AND (v0.c0)))<<((('-1185789063') IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM v0, vt1 INNER JOIN vt0 ON 0.03886986594125197;
SELECT ALL vt0.c0, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (((((v0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) NOT NULL) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (((((v0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) NOT NULL) WHERE (((((((((CAST(vt0.c0 AS BLOB))AND(((v0.c0) NOT NULL))))OR((vt0.c0 IN ()))))OR(((((vt0.c0)OR(v0.c0)))OR('')))))AND(((v0.c0) NOTNULL)))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (((((v0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) NOT NULL) WHERE ((NOT (((((((((CAST(vt0.c0 AS BLOB))AND(((v0.c0) NOT NULL))))OR((vt0.c0 IN ()))))OR(((((vt0.c0)OR(v0.c0)))OR('')))))AND(((v0.c0) NOTNULL)))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (((((v0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) NOT NULL) WHERE (((((((((((CAST(vt0.c0 AS BLOB))AND(((v0.c0) NOT NULL))))OR((vt0.c0 IN ()))))OR(((((vt0.c0)OR(v0.c0)))OR('')))))AND(((v0.c0) NOTNULL)))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (((((v0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) NOT NULL) GROUP BY vt0.c0, v0.c0;
SELECT vt1.c1, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt0.c0;
SELECT vt1.c1, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT ALL vt1.c1, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL vt1.c1, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT vt0.c0 FROM vt1, vt0;
SELECT vt0.c0 FROM vt1, vt0 WHERE ((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))<(((vt1.c0 IN ()))))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 WHERE ((NOT ((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))<(((vt1.c0 IN ()))))))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))<(((vt1.c0 IN ()))))) ISNULL));
SELECT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt1 ON CASE v0.c0  WHEN vt1.c0 THEN vt1.c1 ELSE vt0.c0 END COLLATE BINARY FULL OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (((vt1.c0)/(x''))) AND (((vt1.c1) NOTNULL)));
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((((NULLIF(vt1.c1, vt1.c1)))<((vt1.c0)))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((((NULLIF(vt1.c1, vt1.c1)))<((vt1.c0)))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((((((NULLIF(vt1.c1, vt1.c1)))<((vt1.c0)))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c0, vt1.c1, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt1.c1, v0.c0;
SELECT ALL vt1.c0, vt1.c1, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt1.c1, v0.c0 HAVING MIN((COUNT(vt1.c0) IN ())) UNION ALL SELECT ALL vt1.c0, vt1.c1, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt1.c1, v0.c0 HAVING (NOT (MIN((COUNT(vt1.c0) IN ())))) UNION ALL SELECT vt1.c0, vt1.c1, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt1.c1, v0.c0 HAVING ((MIN((COUNT(vt1.c0) IN ()))) ISNULL);
SELECT ALL vt1.c0, vt1.c1, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt1.c1, v0.c0;
SELECT ALL vt1.c0, vt1.c1, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt1.c1, v0.c0 HAVING MIN((COUNT(vt1.c0) IN ())) UNION ALL SELECT ALL vt1.c0, vt1.c1, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt1.c1, v0.c0 HAVING (NOT (MIN((COUNT(vt1.c0) IN ())))) UNION ALL SELECT vt1.c0, vt1.c1, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt1.c1, v0.c0 HAVING ((MIN((COUNT(vt1.c0) IN ()))) ISNULL);
SELECT ALL vt1.c0, vt1.c1, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt1.c1, v0.c0;
SELECT ALL vt1.c1 FROM vt1;
SELECT vt1.c1 FROM vt1 WHERE ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))OR(vt1.c0))))<=((vt1.c1)))) UNION ALL SELECT vt1.c1 FROM vt1 WHERE ((NOT ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))OR(vt1.c0))))<=((vt1.c1)))))) UNION ALL SELECT ALL vt1.c1 FROM vt1 WHERE ((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))OR(vt1.c0))))<=((vt1.c1)))) ISNULL));
SELECT ALL vt1.c1 FROM vt1;
SELECT DISTINCT * FROM v0, vt0 CROSS JOIN vt1 ON (((- (v0.c0)))&(CASE WHEN vt1.c0 THEN x'424d' END));
SELECT DISTINCT * FROM v0, vt0 CROSS JOIN vt1 ON (((- (v0.c0)))&(CASE WHEN vt1.c0 THEN x'424d' END)) WHERE (CASE WHEN '-2066920824' THEN vt0.c0 WHEN ((((NULL)OR(vt1.c1)))OR(vt0.c0)) THEN vt1.c0 COLLATE BINARY WHEN NULL THEN ((vt1.c1)GLOB(1e500)) ELSE ((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)))OR(vt0.c0)))OR(vt1.c1)) END) UNION SELECT DISTINCT * FROM v0, vt0 CROSS JOIN vt1 ON (((- (v0.c0)))&(CASE WHEN vt1.c0 THEN x'424d' END)) WHERE ((NOT (CASE WHEN '-2066920824' THEN vt0.c0 WHEN ((((NULL)OR(vt1.c1)))OR(vt0.c0)) THEN vt1.c0 COLLATE BINARY WHEN NULL THEN ((vt1.c1)GLOB(1e500)) ELSE ((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)))OR(vt0.c0)))OR(vt1.c1)) END))) UNION SELECT DISTINCT * FROM v0, vt0 CROSS JOIN vt1 ON (((- (v0.c0)))&(CASE WHEN vt1.c0 THEN x'424d' END)) WHERE (((CASE WHEN '-2066920824' THEN vt0.c0 WHEN ((((NULL)OR(vt1.c1)))OR(vt0.c0)) THEN vt1.c0 COLLATE BINARY WHEN NULL THEN ((vt1.c1)GLOB(1e500)) ELSE ((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)))OR(vt0.c0)))OR(vt1.c1)) END) ISNULL));
SELECT DISTINCT * FROM v0, vt0 CROSS JOIN vt1 ON (((- (v0.c0)))&(CASE WHEN vt1.c0 THEN x'424d' END));
SELECT ALL vt0.c0, vt1.c1 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c1;
SELECT vt0.c0, vt1.c1 FROM v0, vt1, vt0 NOT INDEXED WHERE (CAST(vt0.c0 AS NUMERIC)) GROUP BY vt0.c0, vt1.c1 UNION SELECT vt0.c0, vt1.c1 FROM v0, vt1, vt0 WHERE ((NOT (CAST(vt0.c0 AS NUMERIC)))) GROUP BY vt0.c0, vt1.c1 UNION SELECT ALL vt0.c0, vt1.c1 FROM v0, vt1, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) ISNULL)) GROUP BY vt0.c0, vt1.c1;
SELECT ALL vt0.c0, vt1.c1 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c1;
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, v0 NOT INDEXED GROUP BY vt1.c0 HAVING COUNT(COUNT(COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (NOT (COUNT(COUNT(COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING ((COUNT(COUNT(COUNT(*)))) ISNULL);
SELECT ALL vt0.c0 FROM vt1, vt0, v0;
SELECT ALL vt0.c0 FROM vt1, vt0, v0 WHERE (x'c6fc') UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0, v0 WHERE ((NOT (x'c6fc'))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0, v0 WHERE (((x'c6fc') ISNULL));
SELECT ALL vt0.c0 FROM vt1, vt0, v0;
SELECT DISTINCT vt0.c0 FROM v0, vt0 INNER JOIN vt1 ON ((((CASE vt1.c1  WHEN vt1.c1 THEN vt0.c0 WHEN -1.75057571E8 THEN 0X575cb01e WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)OR((~ (v0.c0)))))AND(vt0.c0));
SELECT DISTINCT vt0.c0 FROM v0, vt0 INNER JOIN vt1 ON ((((CASE vt1.c1  WHEN vt1.c1 THEN vt0.c0 WHEN -1.75057571E8 THEN 0x575cb01e WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)OR((~ (v0.c0)))))AND(vt0.c0)) WHERE ((((v0.c0)) BETWEEN ((0.8253362052481232)) AND ((((vt1.c0)*(vt1.c1)))))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 INNER JOIN vt1 ON ((((CASE vt1.c1  WHEN vt1.c1 THEN vt0.c0 WHEN -1.75057571E8 THEN 0X575cb01e WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)OR((~ (v0.c0)))))AND(vt0.c0)) WHERE ((NOT ((((v0.c0)) BETWEEN ((0.8253362052481232)) AND ((((vt1.c0)*(vt1.c1)))))))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 INNER JOIN vt1 ON ((((CASE vt1.c1  WHEN vt1.c1 THEN vt0.c0 WHEN -1.75057571E8 THEN 0x575cb01e WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)OR((~ (v0.c0)))))AND(vt0.c0)) WHERE ((((((v0.c0)) BETWEEN ((0.8253362052481232)) AND ((((vt1.c0)*(vt1.c1)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, vt0 INNER JOIN vt1 ON ((((CASE vt1.c1  WHEN vt1.c1 THEN vt0.c0 WHEN -1.75057571E8 THEN 0X575cb01e WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)OR((~ (v0.c0)))))AND(vt0.c0));
SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, v0 WHERE (((CASE WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (CAST(v0.c0 AS TEXT)) AND (CAST(vt1.c1 AS INTEGER)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt1, v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (CAST(v0.c0 AS TEXT)) AND (CAST(vt1.c1 AS INTEGER)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt1, v0 WHERE (((((CASE WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (CAST(v0.c0 AS TEXT)) AND (CAST(vt1.c1 AS INTEGER)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(MIN(GROUP_CONCAT(vt0.c0))))%(SUM(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((TOTAL(MIN(GROUP_CONCAT(vt0.c0))))%(SUM(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(MIN(GROUP_CONCAT(vt0.c0))))%(SUM(vt0.c0)))) ISNULL);
SELECT ALL * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (((vt1.c1)/((((vt0.c0))>=((vt1.c0)))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((vt1.c1)/((((vt0.c0))>=((vt1.c0)))))))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((((vt1.c1)/((((vt0.c0))>=((vt1.c0)))))) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((NOT (vt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((NOT (vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0 FROM vt1, vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, vt0, v0 WHERE ((('Ꞁ뒒|T') NOT BETWEEN (json_remove(vt0.c0, NULL)) AND (CASE WHEN vt1.c0 THEN v0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN x'' THEN vt0.c0 END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt1, vt0, v0 WHERE ((NOT ((('Ꞁ뒒|T') NOT BETWEEN (json_remove(vt0.c0, NULL)) AND (CASE WHEN vt1.c0 THEN v0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN x'' THEN vt0.c0 END))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt1, vt0, v0 WHERE ((((('Ꞁ뒒|T') NOT BETWEEN (json_remove(vt0.c0, NULL)) AND (CASE WHEN vt1.c0 THEN v0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN x'' THEN vt0.c0 END))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, vt0, v0 GROUP BY v0.c0;
SELECT vt1.c1, v0.c0 FROM vt0 INNER JOIN vt1 ON '402163746' RIGHT OUTER JOIN v0 ON ((((vt0.c0)||(vt1.c1))) IS FALSE) GROUP BY vt1.c1, v0.c0;
SELECT ALL vt1.c1, v0.c0 FROM vt0 INNER JOIN vt1 ON '402163746' RIGHT OUTER JOIN v0 ON ((((vt0.c0)||(vt1.c1))) IS FALSE) GROUP BY vt1.c1, v0.c0 HAVING CASE SUM(vt1.c1)  WHEN (((vt1.c1)) BETWEEN ((vt0.c0)) AND ((COUNT(*)))) THEN vt1.c1 END UNION ALL SELECT vt1.c1, v0.c0 FROM vt0 INNER JOIN vt1 ON '402163746' RIGHT OUTER JOIN v0 ON ((((vt0.c0)||(vt1.c1))) IS FALSE) GROUP BY vt1.c1, v0.c0 HAVING (NOT (CASE SUM(vt1.c1)  WHEN (((vt1.c1)) BETWEEN ((vt0.c0)) AND ((COUNT(*)))) THEN vt1.c1 END)) UNION ALL SELECT vt1.c1, v0.c0 FROM vt0 INNER JOIN vt1 ON '402163746' RIGHT OUTER JOIN v0 ON ((((vt0.c0)||(vt1.c1))) IS FALSE) GROUP BY vt1.c1, v0.c0 HAVING ((CASE SUM(vt1.c1)  WHEN (((vt1.c1)) BETWEEN ((vt0.c0)) AND ((COUNT(*)))) THEN vt1.c1 END) ISNULL);
SELECT vt1.c1, v0.c0 FROM vt0 INNER JOIN vt1 ON '402163746' RIGHT OUTER JOIN v0 ON ((((vt0.c0)||(vt1.c1))) IS FALSE) GROUP BY vt1.c1, v0.c0;
SELECT ALL vt1.c1, v0.c0 FROM vt0 INNER JOIN vt1 ON '402163746' RIGHT OUTER JOIN v0 ON ((((vt0.c0)||(vt1.c1))) IS FALSE) GROUP BY vt1.c1, v0.c0 HAVING CASE SUM(vt1.c1)  WHEN (((vt1.c1)) BETWEEN ((vt0.c0)) AND ((COUNT(*)))) THEN vt1.c1 END UNION ALL SELECT vt1.c1, v0.c0 FROM vt0 INNER JOIN vt1 ON '402163746' RIGHT OUTER JOIN v0 ON ((((vt0.c0)||(vt1.c1))) IS FALSE) GROUP BY vt1.c1, v0.c0 HAVING (NOT (CASE SUM(vt1.c1)  WHEN (((vt1.c1)) BETWEEN ((vt0.c0)) AND ((COUNT(*)))) THEN vt1.c1 END)) UNION ALL SELECT vt1.c1, v0.c0 FROM vt0 INNER JOIN vt1 ON '402163746' RIGHT OUTER JOIN v0 ON ((((vt0.c0)||(vt1.c1))) IS FALSE) GROUP BY vt1.c1, v0.c0 HAVING ((CASE SUM(vt1.c1)  WHEN (((vt1.c1)) BETWEEN ((vt0.c0)) AND ((COUNT(*)))) THEN vt1.c1 END) ISNULL);
SELECT vt1.c1, v0.c0 FROM vt0 INNER JOIN vt1 ON '402163746' RIGHT OUTER JOIN v0 ON ((((vt0.c0)||(vt1.c1))) IS FALSE) GROUP BY vt1.c1, v0.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((((x'b7fb')==(vt1.c1))) IS FALSE)) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((x'b7fb')==(vt1.c1))) IS FALSE)))) UNION ALL SELECT * FROM vt1 WHERE (((((((x'b7fb')==(vt1.c1))) IS FALSE)) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE (((((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))), (vt1.c1 IN (vt1.c1)), (((vt1.c1, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, '-607240135', 923555440)))))>=((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt0.c0 END, ((vt1.c1)LIKE(vt1.c0)), vt1.c1)))) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE ((NOT (((((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))), (vt1.c1 IN (vt1.c1)), (((vt1.c1, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, '-607240135', 923555440)))))>=((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt0.c0 END, ((vt1.c1)LIKE(vt1.c0)), vt1.c1)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE (((((((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))), (vt1.c1 IN (vt1.c1)), (((vt1.c1, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, '-607240135', 923555440)))))>=((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt0.c0 END, ((vt1.c1)LIKE(vt1.c0)), vt1.c1)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, vt1;
SELECT vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON vt0.c0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON vt0.c0 WHERE (NULL) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON vt0.c0 WHERE ((NOT (NULL))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON vt0.c0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON vt0.c0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON v0.c0 FULL OUTER JOIN v0 ON v0.c0 GROUP BY vt0.c0;
SELECT ALL * FROM vt1, v0;
SELECT ALL * FROM vt1, v0 WHERE (CAST(0.7112657561978919 AS INTEGER) COLLATE NOCASE) UNION ALL SELECT ALL * FROM vt1, v0 WHERE ((NOT (CAST(0.7112657561978919 AS INTEGER) COLLATE NOCASE))) UNION ALL SELECT * FROM vt1, v0 WHERE (((CAST(0.7112657561978919 AS INTEGER) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt1, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(CAST(v0.c0 AS TEXT))))AND(v0.c0 COLLATE BINARY)))AND((v0.c0 IN ()))))AND((NOT (v0.c0)))))OR(((v0.c0)GLOB(v0.c0)))))OR(((((NULL)AND(v0.c0)))AND(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((((((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(CAST(v0.c0 AS TEXT))))AND(v0.c0 COLLATE BINARY)))AND((v0.c0 IN ()))))AND((NOT (v0.c0)))))OR(((v0.c0)GLOB(v0.c0)))))OR(((((NULL)AND(v0.c0)))AND(v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(CAST(v0.c0 AS TEXT))))AND(v0.c0 COLLATE BINARY)))AND((v0.c0 IN ()))))AND((NOT (v0.c0)))))OR(((v0.c0)GLOB(v0.c0)))))OR(((((NULL)AND(v0.c0)))AND(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0, v0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c1)))AND((- (-2009398043))))) GROUP BY vt1.c0, vt1.c1, vt0.c0 UNION SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0, v0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c1)))AND((- (-2009398043))))))) GROUP BY vt1.c0, vt1.c1, vt0.c0 UNION SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0, v0 WHERE (((((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c1)))AND((- (-2009398043))))) ISNULL)) GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT ALL v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON CAST((v0.c0 IN (vt0.c0, v0.c0)) AS REAL) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON CAST((v0.c0 IN (vt0.c0, v0.c0)) AS REAL) GROUP BY v0.c0 HAVING MAX(MIN(AVG(vt0.c0))) UNION ALL SELECT v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON CAST((v0.c0 IN (vt0.c0, v0.c0)) AS REAL) GROUP BY v0.c0 HAVING (NOT (MAX(MIN(AVG(vt0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON CAST((v0.c0 IN (vt0.c0, v0.c0)) AS REAL) GROUP BY v0.c0 HAVING ((MAX(MIN(AVG(vt0.c0)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (NULL) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM vt0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (x'') UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (x''))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((x'') ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 INNER JOIN vt0 ON (((vt0.c0)IS NOT(vt0.c0)) IN ()) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 INNER JOIN vt0 ON (((vt0.c0)IS NOT(vt0.c0)) IN ()) WHERE ((+ (CAST(vt0.c0 AS REAL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 INNER JOIN vt0 ON (((vt0.c0)IS NOT(vt0.c0)) IN ()) WHERE ((NOT ((+ (CAST(vt0.c0 AS REAL)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 INNER JOIN vt0 ON (((vt0.c0)IS NOT(vt0.c0)) IN ()) WHERE ((((+ (CAST(vt0.c0 AS REAL)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 INNER JOIN vt0 ON (((vt0.c0)IS NOT(vt0.c0)) IN ()) GROUP BY v0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL * FROM vt0, v0 FULL OUTER JOIN vt1 ON (((+ (vt0.c0))) BETWEEN ((+ (v0.c0))) AND (((vt1.c1)/(vt1.c0))));
SELECT ALL * FROM vt0, v0 FULL OUTER JOIN vt1 ON (((+ (vt0.c0))) BETWEEN ((+ (v0.c0))) AND (((vt1.c1)/(vt1.c0)))) WHERE (v0.c0) UNION ALL SELECT * FROM vt0, v0 FULL OUTER JOIN vt1 ON (((+ (vt0.c0))) BETWEEN ((+ (v0.c0))) AND (((vt1.c1)/(vt1.c0)))) WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM vt0, v0 FULL OUTER JOIN vt1 ON (((+ (vt0.c0))) BETWEEN ((+ (v0.c0))) AND (((vt1.c1)/(vt1.c0)))) WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM vt0, v0 FULL OUTER JOIN vt1 ON (((+ (vt0.c0))) BETWEEN ((+ (v0.c0))) AND (((vt1.c1)/(vt1.c0))));
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (CAST(json_array(vt0.c0, vt0.c0) AS INTEGER)) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (CAST(json_array(vt0.c0, vt0.c0) AS INTEGER)))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((CAST(json_array(vt0.c0, vt0.c0) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT vt1.c1, v0.c0, vt1.c0 FROM vt1, v0 GROUP BY vt1.c1, v0.c0, vt1.c0;
SELECT ALL vt1.c1, v0.c0, vt1.c0 FROM vt1, v0 WHERE ((('1682872201') BETWEEN (vt1.c1) AND (v0.c0)) COLLATE NOCASE) GROUP BY vt1.c1, v0.c0, vt1.c0 UNION SELECT ALL vt1.c1, v0.c0, vt1.c0 FROM vt1, v0 WHERE ((NOT ((('1682872201') BETWEEN (vt1.c1) AND (v0.c0)) COLLATE NOCASE))) GROUP BY vt1.c1, v0.c0, vt1.c0 UNION SELECT vt1.c1, v0.c0, vt1.c0 FROM vt1, v0 WHERE ((((('1682872201') BETWEEN (vt1.c1) AND (v0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt1.c1, v0.c0, vt1.c0;
SELECT vt1.c1, v0.c0, vt1.c0 FROM vt1, v0 GROUP BY vt1.c1, v0.c0, vt1.c0;
SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0, vt0.c0 HAVING GROUP_CONCAT(SUM(vt0.c0)) UNION ALL SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(SUM(vt0.c0)))) UNION ALL SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0, vt0.c0 HAVING ((GROUP_CONCAT(SUM(vt0.c0))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (LAST_INSERT_ROWID()) UNION ALL SELECT * FROM vt0 WHERE ((NOT (LAST_INSERT_ROWID()))) UNION ALL SELECT * FROM vt0 WHERE (((LAST_INSERT_ROWID()) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (NULL) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((((v0.c0 IN ()))+(((vt0.c0)>=(v0.c0))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((NOT ((((v0.c0 IN ()))+(((vt0.c0)>=(v0.c0))))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((((((v0.c0 IN ()))+(((vt0.c0)>=(v0.c0))))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE ((vt0.c0)-(vt0.c0))  WHEN MIN(vt0.c0) THEN TRIM(DISTINCT MAX(vt0.c0), vt0.c0) END UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE ((vt0.c0)-(vt0.c0))  WHEN MIN(vt0.c0) THEN TRIM(DISTINCT MAX(vt0.c0), vt0.c0) END)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE ((vt0.c0)-(vt0.c0))  WHEN MIN(vt0.c0) THEN TRIM(DISTINCT MAX(vt0.c0), vt0.c0) END) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE ((vt0.c0)-(vt0.c0))  WHEN MIN(vt0.c0) THEN TRIM(DISTINCT MAX(vt0.c0), vt0.c0) END UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE ((vt0.c0)-(vt0.c0))  WHEN MIN(vt0.c0) THEN TRIM(DISTINCT MAX(vt0.c0), vt0.c0) END)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE ((vt0.c0)-(vt0.c0))  WHEN MIN(vt0.c0) THEN TRIM(DISTINCT MAX(vt0.c0), vt0.c0) END) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT MAX(vt0.c0) FROM vt0;
SELECT ALL * FROM vt1 INNER JOIN v0 ON ((UPPER(vt1.c0)) NOT BETWEEN (CASE vt0.c0  WHEN vt1.c1 THEN vt0.c0 ELSE v0.c0 END) AND (((vt1.c1) NOT BETWEEN (0x62ec530d) AND (v0.c0)))) RIGHT OUTER JOIN vt0 ON (((((((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))OR(CAST(x'' AS NUMERIC))))OR(vt0.c0 COLLATE NOCASE));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0) NOT NULL) COLLATE NOCASE) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((v0.c0) NOT NULL) COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0) NOT NULL) COLLATE NOCASE) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN v0 ON (((vt0.c0) BETWEEN (vt1.c1) AND ('䷗ZE]')) IN (((vt1.c0)LIKE(vt1.c0)))) LEFT OUTER JOIN vt0 ON CAST(vt0.c0 AS NUMERIC) COLLATE BINARY GROUP BY vt0.c0, vt1.c1, vt1.c0;
SELECT ALL vt1.c1 FROM v0 INNER JOIN vt1 ON x'f73a';
SELECT ALL vt1.c1 FROM v0 INNER JOIN vt1 ON x'f73a' WHERE ((((~ (vt1.c1)))>=((NOT (vt1.c0))))) UNION ALL SELECT vt1.c1 FROM v0 INNER JOIN vt1 ON x'f73a' WHERE ((NOT ((((~ (vt1.c1)))>=((NOT (vt1.c0))))))) UNION ALL SELECT ALL vt1.c1 FROM v0 INNER JOIN vt1 ON x'f73a' WHERE ((((((~ (vt1.c1)))>=((NOT (vt1.c0))))) ISNULL));
SELECT ALL vt1.c1 FROM v0 INNER JOIN vt1 ON x'f73a';
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT DISTINCT * FROM vt1, vt0, v0 WHERE (((LOWER(vt1.c0)) IS TRUE)) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE ((NOT (((LOWER(vt1.c0)) IS TRUE)))) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE (((((LOWER(vt1.c0)) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT vt0.c0, vt1.c0, vt1.c1 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt1.c1;
SELECT vt0.c0, vt1.c0, vt1.c1 FROM v0, vt1, vt0 WHERE ((((NULL IN ()))GLOB(NULL))) GROUP BY vt0.c0, vt1.c0, vt1.c1 UNION SELECT vt0.c0, vt1.c0, vt1.c1 FROM v0, vt1, vt0 WHERE ((NOT ((((NULL IN ()))GLOB(NULL))))) GROUP BY vt0.c0, vt1.c0, vt1.c1 UNION SELECT ALL vt0.c0, vt1.c0, vt1.c1 FROM v0, vt1, vt0 WHERE ((((((NULL IN ()))GLOB(NULL))) ISNULL)) GROUP BY vt0.c0, vt1.c0, vt1.c1;
SELECT vt0.c0, vt1.c0, vt1.c1 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt1.c1;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0)AND('-853531658')))OR(x'')) IN (((v0.c0)IS(vt0.c0)), SUM(AVG(v0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT ((((((vt0.c0)AND('-853531658')))OR(x'')) IN (((v0.c0)IS(vt0.c0)), SUM(AVG(v0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (((((((vt0.c0)AND('-853531658')))OR(x'')) IN (((v0.c0)IS(vt0.c0)), SUM(AVG(v0.c0))))) ISNULL);
SELECT vt0.c0 FROM vt1, vt0, v0;
SELECT vt0.c0 FROM vt1, vt0, v0 WHERE (vt1.c0) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0, v0 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0, v0 WHERE (((vt1.c0) ISNULL));
SELECT vt0.c0 FROM vt1, vt0, v0;
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt1, v0, vt0 WHERE (ABS(DISTINCT vt0.c0)) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((NOT (ABS(DISTINCT vt0.c0)))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE (((ABS(DISTINCT vt0.c0)) ISNULL));
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST((('gu')!=(vt1.c1)) AS REAL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST((('gu')!=(vt1.c1)) AS REAL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CAST((('gu')!=(vt1.c1)) AS REAL)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c1, v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON vt1.c0 GROUP BY vt1.c1, v0.c0;
SELECT ALL vt1.c1, v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON vt1.c0 GROUP BY vt1.c1, v0.c0 HAVING CAST(json_extract(MIN(TOTAL(COUNT(GROUP_CONCAT(NULL)))), TOTAL(MIN(vt1.c1)), COUNT(*), v0.c0) AS REAL) UNION ALL SELECT ALL vt1.c1, v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON vt1.c0 GROUP BY vt1.c1, v0.c0 HAVING (NOT (CAST(json_extract(MIN(TOTAL(COUNT(GROUP_CONCAT(NULL)))), TOTAL(MIN(vt1.c1)), COUNT(*), v0.c0) AS REAL))) UNION ALL SELECT ALL vt1.c1, v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON vt1.c0 GROUP BY vt1.c1, v0.c0 HAVING ((CAST(json_extract(MIN(TOTAL(COUNT(GROUP_CONCAT(NULL)))), TOTAL(MIN(vt1.c1)), COUNT(*), v0.c0) AS REAL)) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (1698014237 COLLATE BINARY) UNION ALL SELECT * FROM vt0 WHERE ((NOT (1698014237 COLLATE BINARY))) UNION ALL SELECT * FROM vt0 WHERE (((1698014237 COLLATE BINARY) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM v0, vt1 FULL OUTER JOIN vt0 ON (((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS BLOB))) AND ((((((((((vt1.c0)OR(vt1.c1)))OR(x'')))AND('-1699465869')))AND(vt1.c1)))));
SELECT DISTINCT * FROM v0, vt1 FULL OUTER JOIN vt0 ON (((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS BLOB))) AND ((((((((((vt1.c0)OR(vt1.c1)))OR(x'')))AND('-1699465869')))AND(vt1.c1))))) WHERE (NULL) UNION SELECT DISTINCT * FROM v0, vt1 FULL OUTER JOIN vt0 ON (((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS BLOB))) AND ((((((((((vt1.c0)OR(vt1.c1)))OR(x'')))AND('-1699465869')))AND(vt1.c1))))) WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM v0, vt1 FULL OUTER JOIN vt0 ON (((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS BLOB))) AND ((((((((((vt1.c0)OR(vt1.c1)))OR(x'')))AND('-1699465869')))AND(vt1.c1))))) WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM v0, vt1 FULL OUTER JOIN vt0 ON (((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS BLOB))) AND ((((((((((vt1.c0)OR(vt1.c1)))OR(x'')))AND('-1699465869')))AND(vt1.c1)))));
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0) AND (((v0.c0)%(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE ((NOT (((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0) AND (((v0.c0)%(v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0) AND (((v0.c0)%(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING ((x'')LIKE(MIN(MAX(vt1.c0)))) UNION ALL SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING (NOT (((x'')LIKE(MIN(MAX(vt1.c0)))))) UNION ALL SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING ((((x'')LIKE(MIN(MAX(vt1.c0))))) ISNULL);
SELECT * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN ((NULL COLLATE RTRIM)) AND ((vt1.c1)))) ORDER BY ((((((0.6431771902894188)OR(vt0.c0)))OR(vt1.c1)))IS NOT(CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((NULL COLLATE RTRIM)) AND ((vt1.c1)))))) ORDER BY ((((((0.6431771902894188)OR(vt0.c0)))OR(vt1.c1)))IS NOT(CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt0.c0)) NOT BETWEEN ((NULL COLLATE RTRIM)) AND ((vt1.c1)))) ISNULL)) ORDER BY ((((((0.6431771902894188)OR(vt0.c0)))OR(vt1.c1)))IS NOT(CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT * FROM vt0, vt1;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE (CASE WHEN ((v0.c0)IS(v0.c0)) THEN ((((((((v0.c0)OR(vt0.c0)))AND(0xffffffffde97ccfc)))AND(vt0.c0)))AND(vt0.c0)) END) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (CASE WHEN ((v0.c0)IS(v0.c0)) THEN ((((((((v0.c0)OR(vt0.c0)))AND(0xffffffffde97ccfc)))AND(vt0.c0)))AND(vt0.c0)) END))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((CASE WHEN ((v0.c0)IS(v0.c0)) THEN ((((((((v0.c0)OR(vt0.c0)))AND(0Xffffffffde97ccfc)))AND(vt0.c0)))AND(vt0.c0)) END) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT vt0.c0, vt1.c0, v0.c0, vt1.c1 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0, v0.c0, vt1.c1;
SELECT vt0.c0, vt1.c0, v0.c0, vt1.c1 FROM v0, vt1, vt0 WHERE ((((((v0.c0)OR(v0.c0)))AND(vt1.c1)) IN (v0.c0 COLLATE RTRIM))) GROUP BY vt0.c0, vt1.c0, v0.c0, vt1.c1 UNION SELECT ALL vt0.c0, vt1.c0, v0.c0, vt1.c1 FROM v0, vt1, vt0 WHERE ((NOT ((((((v0.c0)OR(v0.c0)))AND(vt1.c1)) IN (v0.c0 COLLATE RTRIM))))) GROUP BY vt0.c0, vt1.c0, v0.c0, vt1.c1 UNION SELECT ALL vt0.c0, vt1.c0, v0.c0, vt1.c1 FROM v0, vt1, vt0 WHERE ((((((((v0.c0)OR(v0.c0)))AND(vt1.c1)) IN (v0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c0, vt1.c0, v0.c0, vt1.c1;
SELECT vt0.c0, vt1.c0, v0.c0, vt1.c1 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0, v0.c0, vt1.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(COUNT(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(COUNT(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(COUNT(v0.c0))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)=(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY)==(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)=(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))<=(x'a313' COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))<=(x'a313' COLLATE BINARY))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))<=(x'a313' COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 WHERE ((((json_insert(vt1.c1, vt1.c0, vt1.c1)))==((NULLIF(vt1.c0, vt1.c0))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE ((NOT ((((json_insert(vt1.c1, vt1.c0, vt1.c1)))==((NULLIF(vt1.c0, vt1.c0))))))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE ((((((json_insert(vt1.c1, vt1.c0, vt1.c1)))==((NULLIF(vt1.c0, vt1.c0))))) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1 HAVING TOTAL(COUNT(*)) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL MAX((((vt0.c0))<(((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))))) FROM vt1, vt0, v0 ORDER BY (~ (((v0.c0)*(vt0.c0))));
SELECT vt1.c1, vt1.c0 FROM vt0, vt1;
SELECT ALL vt1.c1, vt1.c0 FROM vt0, vt1 WHERE (vt1.c1) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt0, vt1 WHERE ((NOT (vt1.c1))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt0, vt1 WHERE (((vt1.c1) ISNULL));
SELECT vt1.c1, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE ((((vt0.c0))<((UPPER(DISTINCT vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0))<((UPPER(DISTINCT vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0))<((UPPER(DISTINCT vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((vt1.c1)-(vt1.c0)) COLLATE BINARY) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1 NOT INDEXED, vt0 WHERE ((NOT (((vt1.c1)-(vt1.c0)) COLLATE BINARY))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((vt1.c1)-(vt1.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING NULL UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((NULL) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING NULL UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((NULL) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((-2040668427)))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((-2040668427)))))) UNION ALL SELECT ALL * FROM vt0, vt1 NOT INDEXED WHERE ((((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((-2040668427)))) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt1, v0, vt0 WHERE (((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1))) IN ())) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((NOT (((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1))) IN ())))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE (((((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1))) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c1, vt1.c0, v0.c0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0 WHERE (((+ (vt0.c0)) IN ())) GROUP BY vt0.c0, vt1.c1, vt1.c0, v0.c0 UNION SELECT vt0.c0, vt1.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0 WHERE ((NOT (((+ (vt0.c0)) IN ())))) GROUP BY vt0.c0, vt1.c1, vt1.c0, v0.c0 UNION SELECT vt0.c0, vt1.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0 WHERE (((((+ (vt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c0, vt1.c1, vt1.c0, v0.c0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c1, vt1.c0, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(SUM(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(SUM(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(SUM(v0.c0))) ISNULL);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN v0 ON TRIM(DISTINCT NULL);
SELECT * FROM vt1 RIGHT OUTER JOIN v0 ON TRIM(DISTINCT NULL) WHERE (((((v0.c0)LIKE(vt1.c1)))||(' g\nJ~''xG*'))) UNION ALL SELECT * FROM vt1 RIGHT OUTER JOIN v0 ON TRIM(DISTINCT NULL) WHERE ((NOT (((((v0.c0)LIKE(vt1.c1)))||(' g\nJ~''xG*'))))) UNION ALL SELECT * FROM vt1 RIGHT OUTER JOIN v0 ON TRIM(DISTINCT NULL) WHERE (((((((v0.c0)LIKE(vt1.c1)))||(' g\nJ~''xG*'))) ISNULL));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN v0 ON TRIM(DISTINCT NULL);
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 WHERE (vt1.c1) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE ((NOT (vt1.c1))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE (((vt1.c1) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING NULL UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((NULL) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING NULL UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((NULL) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM vt0, vt1, v0;
SELECT ALL * FROM vt0, vt1, v0 WHERE (((((vt0.c0)AND(((((vt0.c0)OR(vt1.c0)))OR(v0.c0)))))OR((NOT (v0.c0))))) UNION ALL SELECT ALL * FROM vt0, vt1, v0 WHERE ((NOT (((((vt0.c0)AND(((((vt0.c0)OR(vt1.c0)))OR(v0.c0)))))OR((NOT (v0.c0))))))) UNION ALL SELECT ALL * FROM vt0, vt1, v0 WHERE (((((((vt0.c0)AND(((((vt0.c0)OR(vt1.c0)))OR(v0.c0)))))OR((NOT (v0.c0))))) ISNULL));
SELECT * FROM vt0, vt1, v0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((- (vt1.c0)) COLLATE RTRIM COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((- (vt1.c0)) COLLATE RTRIM COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((- (vt1.c0)) COLLATE RTRIM COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT v0.c0, vt1.c1 FROM v0, vt1 INNER JOIN vt0 ON CASE x''  WHEN ((v0.c0) IS TRUE) THEN (('')IS NOT(vt0.c0)) ELSE ((vt1.c0)/(vt1.c0)) END GROUP BY v0.c0, vt1.c1;
SELECT v0.c0, vt1.c1 FROM v0, vt1 INNER JOIN vt0 ON CASE x''  WHEN ((v0.c0) IS TRUE) THEN (('')IS NOT(vt0.c0)) ELSE ((vt1.c0)/(vt1.c0)) END WHERE ('-2040668427') GROUP BY v0.c0, vt1.c1 UNION SELECT ALL v0.c0, vt1.c1 FROM v0, vt1 INNER JOIN vt0 ON CASE x''  WHEN ((v0.c0) IS TRUE) THEN (('')IS NOT(vt0.c0)) ELSE ((vt1.c0)/(vt1.c0)) END WHERE ((NOT ('-2040668427'))) GROUP BY v0.c0, vt1.c1 UNION SELECT ALL v0.c0, vt1.c1 FROM v0, vt1 INNER JOIN vt0 ON CASE x''  WHEN ((v0.c0) IS TRUE) THEN (('')IS NOT(vt0.c0)) ELSE ((vt1.c0)/(vt1.c0)) END WHERE ((('-2040668427') ISNULL)) GROUP BY v0.c0, vt1.c1;
SELECT v0.c0, vt1.c1 FROM v0, vt1 INNER JOIN vt0 ON CASE x''  WHEN ((v0.c0) IS TRUE) THEN (('')IS NOT(vt0.c0)) ELSE ((vt1.c0)/(vt1.c0)) END GROUP BY v0.c0, vt1.c1;
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN vt0 ON (CAST(vt0.c0 AS NUMERIC) IN ()) GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN vt0 ON (CAST(vt0.c0 AS NUMERIC) IN ()) GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING MAX(GROUP_CONCAT(vt1.c0)) UNION ALL SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN vt0 ON (CAST(vt0.c0 AS NUMERIC) IN ()) GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING (NOT (MAX(GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN vt0 ON (CAST(vt0.c0 AS NUMERIC) IN ()) GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING ((MAX(GROUP_CONCAT(vt1.c0))) ISNULL);
SELECT ALL * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0))  WHEN highlight(NULL, vt1.c1, vt1.c0, 'KKna4j^R^') THEN vt1.c0 ELSE vt1.c1 END) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (CASE ((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0))  WHEN highlight(NULL, vt1.c1, vt1.c0, 'KKna4j^R^') THEN vt1.c0 ELSE vt1.c1 END))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((CASE ((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0))  WHEN highlight(NULL, vt1.c1, vt1.c0, 'KKna4j^R^') THEN vt1.c0 ELSE vt1.c1 END) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)OR(CAST(vt0.c0 AS REAL))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0 COLLATE NOCASE)OR(CAST(vt0.c0 AS REAL))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0 COLLATE NOCASE)OR(CAST(vt0.c0 AS REAL))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c1 FROM vt1 LEFT OUTER JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN (vt0.c0)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 LEFT OUTER JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN (vt0.c0)) WHERE (vt1.c1) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 LEFT OUTER JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN (vt0.c0)) WHERE ((NOT (vt1.c1))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 LEFT OUTER JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN (vt0.c0)) WHERE (((vt1.c1) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 LEFT OUTER JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN (vt0.c0)) GROUP BY vt1.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(TOTAL(TOTAL(COUNT(*)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(TOTAL(TOTAL(COUNT(*)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(TOTAL(TOTAL(COUNT(*))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) ISNULL)) IS TRUE)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) ISNULL)) IS TRUE)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) ISNULL)) IS TRUE)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, vt1, v0;
SELECT DISTINCT * FROM vt0, vt1, v0 WHERE (0Xffffffffe044484b) UNION SELECT DISTINCT * FROM vt0, vt1, v0 WHERE ((NOT (0Xffffffffe044484b))) UNION SELECT DISTINCT * FROM vt0, vt1, v0 WHERE (((0Xffffffffe044484b) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, v0;
SELECT vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0, vt0 WHERE ((((- (vt0.c0)))!=(CAST(vt0.c0 AS BLOB)))) GROUP BY vt1.c0, v0.c0 UNION SELECT ALL vt1.c0, v0.c0 FROM vt1, v0, vt0 WHERE ((NOT ((((- (vt0.c0)))<>(CAST(vt0.c0 AS BLOB)))))) GROUP BY vt1.c0, v0.c0 UNION SELECT ALL vt1.c0, v0.c0 FROM vt1, v0, vt0 WHERE ((((((- (vt0.c0)))<>(CAST(vt0.c0 AS BLOB)))) ISNULL)) GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE WHEN (('613166844')<<(TOTAL(v0.c0))) THEN COUNT(*) END UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CASE WHEN (('613166844')<<(TOTAL(v0.c0))) THEN COUNT(*) END)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE WHEN (('613166844')<<(TOTAL(v0.c0))) THEN COUNT(*) END) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE WHEN (('613166844')<<(TOTAL(v0.c0))) THEN COUNT(*) END UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CASE WHEN (('613166844')<<(TOTAL(v0.c0))) THEN COUNT(*) END)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE WHEN (('613166844')<<(TOTAL(v0.c0))) THEN COUNT(*) END) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM v0, vt0, vt1;
SELECT ALL * FROM v0, vt0, vt1 WHERE (CASE WHEN '-869199724' THEN (~ (vt1.c0)) WHEN ((vt1.c0)<(vt1.c1)) THEN QUOTE(v0.c0) WHEN ((0.9340570231169839) IS FALSE) THEN (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((NULL))) END) UNION ALL SELECT ALL * FROM v0, vt0, vt1 WHERE ((NOT (CASE WHEN '-869199724' THEN (~ (vt1.c0)) WHEN ((vt1.c0)<(vt1.c1)) THEN QUOTE(v0.c0) WHEN ((0.9340570231169839) IS FALSE) THEN (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((NULL))) END))) UNION ALL SELECT ALL * FROM v0, vt0, vt1 WHERE (((CASE WHEN '-869199724' THEN (~ (vt1.c0)) WHEN ((vt1.c0)<(vt1.c1)) THEN QUOTE(v0.c0) WHEN ((0.9340570231169839) IS FALSE) THEN (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((NULL))) END) ISNULL));
SELECT ALL * FROM v0, vt0, vt1;
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT DISTINCT * FROM vt1, vt0, v0 WHERE ('') UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE ((NOT (''))) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE ((('') ISNULL));
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (((((vt1.c1) IS FALSE))IS NOT(((vt1.c0)==(vt1.c1))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (((((vt1.c1) IS FALSE))IS NOT(((vt1.c0)==(vt1.c1))))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (((((((vt1.c1) IS FALSE))IS NOT(((vt1.c0)==(vt1.c1))))) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL * FROM v0, vt0, vt1;
SELECT * FROM v0, vt0, vt1 WHERE (CAST('W ' AS INTEGER)) UNION ALL SELECT ALL * FROM v0, vt0, vt1 WHERE ((NOT (CAST('W ' AS INTEGER)))) UNION ALL SELECT ALL * FROM v0, vt0, vt1 WHERE (((CAST('W ' AS INTEGER)) ISNULL));
SELECT ALL * FROM v0, vt0, vt1;
SELECT DISTINCT vt1.c1 FROM vt1, vt0, v0;
SELECT DISTINCT vt1.c1 FROM vt1 NOT INDEXED, vt0, v0 WHERE ((((((vt1.c0)OR(v0.c0)))OR(vt1.c0)) IN (((vt0.c0)*(vt0.c0)), CAST(v0.c0 AS NUMERIC)))) UNION SELECT DISTINCT vt1.c1 FROM vt1, vt0, v0 WHERE ((NOT ((((((vt1.c0)OR(v0.c0)))OR(vt1.c0)) IN (((vt0.c0)*(vt0.c0)), CAST(v0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT vt1.c1 FROM vt1, vt0, v0 WHERE ((((((((vt1.c0)OR(v0.c0)))OR(vt1.c0)) IN (((vt0.c0)*(vt0.c0)), CAST(v0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt1, vt0, v0;
SELECT ALL vt1.c1 FROM vt1, v0 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, v0 WHERE ((((CAST(-2.020039418E9 AS INTEGER)))!=((1056972023)))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1, v0 WHERE ((NOT ((((CAST(-2.020039418E9 AS INTEGER)))<>((1056972023)))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1, v0 WHERE ((((((CAST(-2.020039418E9 AS INTEGER)))!=((1056972023)))) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, v0 GROUP BY vt1.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(CAST(vt1.c0 AS REAL)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(CAST(vt1.c0 AS REAL)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(CAST(vt1.c0 AS REAL))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(CAST(vt1.c0 AS REAL)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(CAST(vt1.c0 AS REAL)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(CAST(vt1.c0 AS REAL))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((((((((((((((v0.c0)OR(v0.c0)))AND((v0.c0 IN (v0.c0)))))AND(((v0.c0)<=(v0.c0)))))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((x''))))))AND(0.4192229291773112)))AND(((v0.c0)/(v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((((((((((((v0.c0)OR(v0.c0)))AND((v0.c0 IN (v0.c0)))))AND(((v0.c0)<=(v0.c0)))))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((x''))))))AND(0.4192229291773112)))AND(((v0.c0)/(v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((((((((((((v0.c0)OR(v0.c0)))AND((v0.c0 IN (v0.c0)))))AND(((v0.c0)<=(v0.c0)))))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((x''))))))AND(0.4192229291773112)))AND(((v0.c0)/(v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1 WHERE (((vt1.c1 COLLATE BINARY)|((~ (v0.c0))))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((NOT (((vt1.c1 COLLATE BINARY)|((~ (v0.c0))))))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE (((((vt1.c1 COLLATE BINARY)|((~ (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)=(vt0.c0)))+(ABS(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)=(vt0.c0)))+(ABS(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)==(vt0.c0)))+(ABS(vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING CAST(GROUP_CONCAT(COUNT(*)) AS BLOB) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (CAST(GROUP_CONCAT(COUNT(*)) AS BLOB))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((CAST(GROUP_CONCAT(COUNT(*)) AS BLOB)) ISNULL);
SELECT ALL MIN('-487492556' COLLATE NOCASE) FROM v0, vt0, vt1;
SELECT * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (TRIM(vt0.c0)) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (TRIM(vt0.c0)))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((TRIM(vt0.c0)) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT vt1.c0 FROM vt0, vt1, v0;
SELECT DISTINCT vt1.c0 FROM vt0, vt1, v0 WHERE (((((((((v0.c0)OR(vt1.c1)))AND(x'')))OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1, v0 WHERE ((NOT (((((((((v0.c0)OR(vt1.c1)))AND(x'')))OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1, v0 WHERE (((((((((((v0.c0)OR(vt1.c1)))AND(x'')))OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, vt1, v0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c1) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c1))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c1) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT v0.c0, vt1.c1, vt1.c0, vt0.c0 FROM v0, vt1, vt0 GROUP BY v0.c0, vt1.c1, vt1.c0, vt0.c0;
SELECT v0.c0, vt1.c1, vt1.c0, vt0.c0 FROM v0, vt1, vt0 GROUP BY v0.c0, vt1.c1, vt1.c0, vt0.c0 HAVING CAST(((COUNT(vt0.c0))||(TOTAL(COUNT(vt1.c1)))) AS TEXT) UNION ALL SELECT v0.c0, vt1.c1, vt1.c0, vt0.c0 FROM v0, vt1, vt0 GROUP BY v0.c0, vt1.c1, vt1.c0, vt0.c0 HAVING (NOT (CAST(((COUNT(vt0.c0))||(TOTAL(COUNT(vt1.c1)))) AS TEXT))) UNION ALL SELECT ALL v0.c0, vt1.c1, vt1.c0, vt0.c0 FROM v0, vt1, vt0 GROUP BY v0.c0, vt1.c1, vt1.c0, vt0.c0 HAVING ((CAST(((COUNT(vt0.c0))||(TOTAL(COUNT(vt1.c1)))) AS TEXT)) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (x''))))>(((- (NULL)))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0) BETWEEN (v0.c0) AND (x''))))>(((- (NULL)))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((((((v0.c0) BETWEEN (v0.c0) AND (x''))))>(((- (NULL)))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (vt0.c0) AND (CAST(vt0.c0 AS TEXT)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM) BETWEEN (vt0.c0) AND (CAST(vt0.c0 AS TEXT)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM) BETWEEN (vt0.c0) AND (CAST(vt0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0, vt1.c0, vt1.c1 FROM vt0, v0, vt1 GROUP BY vt0.c0, vt1.c0, vt1.c1;
SELECT ALL vt0.c0, vt1.c0, vt1.c1 FROM vt0, v0, vt1 WHERE (((vt1.c0) NOT NULL) COLLATE BINARY) GROUP BY vt0.c0, vt1.c0, vt1.c1 UNION SELECT ALL vt0.c0, vt1.c0, vt1.c1 FROM vt0, v0, vt1 WHERE ((NOT (((vt1.c0) NOT NULL) COLLATE BINARY))) GROUP BY vt0.c0, vt1.c0, vt1.c1 UNION SELECT vt0.c0, vt1.c0, vt1.c1 FROM vt0, v0, vt1 WHERE (((((vt1.c0) NOT NULL) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0, vt1.c0, vt1.c1;
SELECT ALL vt0.c0, vt1.c0, vt1.c1 FROM vt0, v0, vt1 GROUP BY vt0.c0, vt1.c0, vt1.c1;
SELECT ALL vt1.c1 FROM vt1, v0 NOT INDEXED, vt0 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, v0, vt0 GROUP BY vt1.c1 HAVING 3.14613566E8 UNION ALL SELECT vt1.c1 FROM vt1, v0, vt0 GROUP BY vt1.c1 HAVING (NOT (3.14613566E8)) UNION ALL SELECT vt1.c1 FROM vt1, v0, vt0 GROUP BY vt1.c1 HAVING ((3.14613566E8) ISNULL);
SELECT ALL vt1.c1 FROM vt1, v0 NOT INDEXED, vt0 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, v0, vt0 GROUP BY vt1.c1 HAVING 3.14613566E8 UNION ALL SELECT vt1.c1 FROM vt1, v0, vt0 GROUP BY vt1.c1 HAVING (NOT (3.14613566E8)) UNION ALL SELECT vt1.c1 FROM vt1, v0, vt0 GROUP BY vt1.c1 HAVING ((3.14613566E8) ISNULL);
SELECT ALL vt1.c1 FROM vt1, v0 NOT INDEXED, vt0 GROUP BY vt1.c1;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS TEXT))/(CASE WHEN '' THEN v0.c0 ELSE v0.c0 END))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS TEXT))/(CASE WHEN '' THEN v0.c0 ELSE v0.c0 END))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS TEXT))/(CASE WHEN '' THEN v0.c0 ELSE v0.c0 END))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON '-134678105';
SELECT DISTINCT vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON '-134678105' WHERE (((((+ (vt1.c0))))<(((+ (NULL)))))) UNION SELECT DISTINCT vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON '-134678105' WHERE ((NOT (((((+ (vt1.c0))))<(((+ (NULL)))))))) UNION SELECT DISTINCT vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON '-134678105' WHERE (((((((+ (vt1.c0))))<(((+ (NULL)))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON '-134678105';
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 WHERE (HEX(DISTINCT NULLIF(DISTINCT vt1.c1, vt1.c1))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE ((NOT (HEX(DISTINCT NULLIF(DISTINCT vt1.c1, vt1.c1))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE (((HEX(DISTINCT NULLIF(DISTINCT vt1.c1, vt1.c1))) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING SUM(MAX(vt1.c0)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (SUM(MAX(vt1.c0)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((SUM(MAX(vt1.c0))) ISNULL);
SELECT vt1.c1, v0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt1 ON (vt1.c0 IN ()) COLLATE RTRIM CROSS JOIN vt0 ON (-908083224 IN ());
SELECT vt1.c1, v0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt1 ON (vt1.c0 IN ()) COLLATE RTRIM CROSS JOIN vt0 ON (-908083224 IN ()) WHERE (((vt1.c0)<=(((((vt1.c0)AND(vt0.c0)))AND(0.12972657655877817))))) UNION ALL SELECT ALL vt1.c1, v0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt1 ON (vt1.c0 IN ()) COLLATE RTRIM CROSS JOIN vt0 ON (-908083224 IN ()) WHERE ((NOT (((vt1.c0)<=(((((vt1.c0)AND(vt0.c0)))AND(0.12972657655877817))))))) UNION ALL SELECT ALL vt1.c1, v0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt1 ON (vt1.c0 IN ()) COLLATE RTRIM CROSS JOIN vt0 ON (-908083224 IN ()) WHERE (((((vt1.c0)<=(((((vt1.c0)AND(vt0.c0)))AND(0.12972657655877817))))) ISNULL));
SELECT vt1.c1, v0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt1 ON (vt1.c0 IN ()) COLLATE RTRIM CROSS JOIN vt0 ON (-908083224 IN ());
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT DISTINCT * FROM vt1, vt0 NOT INDEXED, v0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1 WHERE (x'') GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM v0, vt1 WHERE ((NOT (x''))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM v0, vt1 WHERE (((x'') ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c1, vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c1, vt1.c0, vt0.c0, v0.c0;
SELECT vt1.c1, vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c1, vt1.c0, vt0.c0, v0.c0 HAVING COUNT(AVG(MAX(vt1.c0))) UNION ALL SELECT ALL vt1.c1, vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c1, vt1.c0, vt0.c0, v0.c0 HAVING (NOT (COUNT(AVG(MAX(vt1.c0))))) UNION ALL SELECT vt1.c1, vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c1, vt1.c0, vt0.c0, v0.c0 HAVING ((COUNT(AVG(MAX(vt1.c0)))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS REAL)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST(((vt0.c0) IS FALSE) AS REAL)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(((vt0.c0) IS FALSE) AS REAL)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, 0.5667013950722845)) BETWEEN ((UNLIKELY(vt0.c0), 0.5333071646601063, ('' IN (vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, 0.5667013950722845)) BETWEEN ((UNLIKELY(vt0.c0), 0.5333071646601063, ('' IN (vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, 0.5667013950722845)) BETWEEN ((UNLIKELY(vt0.c0), 0.5333071646601063, ('' IN (vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c1 FROM vt1, v0, vt0 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1, v0, vt0 WHERE (((CASE WHEN vt1.c1 THEN vt1.c0 END) NOT BETWEEN (CAST(vt1.c1 AS INTEGER)) AND (v0.c0 COLLATE BINARY))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1, v0, vt0 WHERE ((NOT (((CASE WHEN vt1.c1 THEN vt1.c0 END) NOT BETWEEN (CAST(vt1.c1 AS INTEGER)) AND (v0.c0 COLLATE BINARY))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1, v0, vt0 WHERE (((((CASE WHEN vt1.c1 THEN vt1.c0 END) NOT BETWEEN (CAST(vt1.c1 AS INTEGER)) AND (v0.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, v0, vt0 GROUP BY vt1.c1;
SELECT vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(AVG(vt1.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(AVG(vt1.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(AVG(vt1.c0))) ISNULL);
SELECT ALL * FROM v0, vt1, vt0;
SELECT ALL * FROM v0, vt1, vt0 WHERE (((((v0.c0)<=(vt0.c0)))/((v0.c0 IN ())))) UNION ALL SELECT * FROM v0, vt1, vt0 WHERE ((NOT (((((v0.c0)<=(vt0.c0)))/((v0.c0 IN ())))))) UNION ALL SELECT ALL * FROM v0, vt1 NOT INDEXED, vt0 WHERE (((((((v0.c0)<=(vt0.c0)))/((v0.c0 IN ())))) ISNULL));
SELECT ALL * FROM v0, vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt0, vt1 WHERE (((x'') IS FALSE)) GROUP BY vt1.c0, vt0.c0, vt1.c1 UNION SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt0, vt1 WHERE ((NOT (((x'') IS FALSE)))) GROUP BY vt1.c0, vt0.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt0, vt1 NOT INDEXED WHERE (((((x'') IS FALSE)) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING MAX(COUNT(MIN(vt0.c0))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (MAX(COUNT(MIN(vt0.c0))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((MAX(COUNT(MIN(vt0.c0)))) ISNULL);
SELECT * FROM v0, vt0, vt1;
SELECT * FROM v0, vt0, vt1 WHERE (vt1.c0 COLLATE BINARY) UNION ALL SELECT * FROM v0, vt0, vt1 WHERE ((NOT (vt1.c0 COLLATE BINARY))) UNION ALL SELECT ALL * FROM v0, vt0, vt1 WHERE (((vt1.c0 COLLATE BINARY) ISNULL));
SELECT * FROM v0, vt0, vt1;
SELECT DISTINCT vt1.c1, v0.c0 FROM vt1, v0, vt0;
SELECT DISTINCT vt1.c1, v0.c0 FROM vt1, v0, vt0 WHERE ((((NOT (vt1.c0))) BETWEEN (((((vt1.c1)OR(NULL)))AND(vt1.c1))) AND ((((vt1.c0, v0.c0, 'EF~j')) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((vt0.c0, v0.c0, vt0.c0)))))) UNION SELECT DISTINCT vt1.c1, v0.c0 FROM vt1, v0, vt0 WHERE ((NOT ((((NOT (vt1.c0))) BETWEEN (((((vt1.c1)OR(NULL)))AND(vt1.c1))) AND ((((vt1.c0, v0.c0, 'EF~j')) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((vt0.c0, v0.c0, vt0.c0)))))))) UNION SELECT DISTINCT vt1.c1, v0.c0 FROM vt1, v0, vt0 WHERE ((((((NOT (vt1.c0))) BETWEEN (((((vt1.c1)OR(NULL)))AND(vt1.c1))) AND ((((vt1.c0, v0.c0, 'EF~j')) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((vt0.c0, v0.c0, vt0.c0)))))) ISNULL));
SELECT DISTINCT vt1.c1, v0.c0 FROM vt1, v0, vt0;
SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (CAST(vt1.c0 AS REAL)))) GROUP BY vt1.c1, vt1.c0, vt0.c0 UNION SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((NOT (CAST(vt1.c0 AS REAL)))))) GROUP BY vt1.c1, vt1.c0, vt0.c0 UNION SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((NOT (CAST(vt1.c0 AS REAL)))) ISNULL)) GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(TOTAL(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(TOTAL(v0.c0))) ISNULL);
SELECT * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE ('1565964650' COLLATE BINARY) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT ('1565964650' COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((('1565964650' COLLATE BINARY) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE ((- (vt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT ((- (vt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((((- (vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c1)OR(CASE NULL  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) NOTNULL))) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c1)OR(CASE NULL  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) NOTNULL))) WHERE (CASE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((x'')))  WHEN ((vt1.c1)*(vt0.c0)) THEN vt1.c0 COLLATE RTRIM ELSE ((vt0.c0)+(vt1.c1)) END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c1)OR(CASE NULL  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) NOTNULL))) WHERE ((NOT (CASE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((x'')))  WHEN ((vt1.c1)*(vt0.c0)) THEN vt1.c0 COLLATE RTRIM ELSE ((vt0.c0)+(vt1.c1)) END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c1)OR(CASE NULL  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) NOTNULL))) WHERE (((CASE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((x'')))  WHEN ((vt1.c1)*(vt0.c0)) THEN vt1.c0 COLLATE RTRIM ELSE ((vt0.c0)+(vt1.c1)) END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c1)OR(CASE NULL  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) NOTNULL))) GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1, vt1.c0;
SELECT vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1, vt1.c0 HAVING MAX(MAX(vt0.c0)) UNION ALL SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1, vt1.c0 HAVING (NOT (MAX(MAX(vt0.c0)))) UNION ALL SELECT vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1, vt1.c0 HAVING ((MAX(MAX(vt0.c0))) ISNULL);
SELECT ALL vt1.c1, v0.c0, vt0.c0 FROM vt1, vt0, v0;
SELECT ALL vt1.c1, v0.c0, vt0.c0 FROM vt1, vt0, v0 WHERE (NULL) UNION ALL SELECT vt1.c1, v0.c0, vt0.c0 FROM vt1, vt0, v0 WHERE ((NOT (NULL))) UNION ALL SELECT vt1.c1, v0.c0, vt0.c0 FROM vt1, vt0, v0 WHERE (((NULL) ISNULL));
SELECT ALL vt1.c1, v0.c0, vt0.c0 FROM vt1, vt0, v0;
SELECT DISTINCT * FROM vt0, vt1 INNER JOIN v0 ON vt1.c1;
SELECT DISTINCT * FROM vt0, vt1 INNER JOIN v0 ON vt1.c1 WHERE (CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c1)) AS NUMERIC)) UNION SELECT DISTINCT * FROM vt0, vt1 INNER JOIN v0 ON vt1.c1 WHERE ((NOT (CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c1)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0, vt1 INNER JOIN v0 ON vt1.c1 WHERE (((CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c1)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt0, vt1 INNER JOIN v0 ON vt1.c1;
SELECT v0.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, vt1, v0 WHERE ((((((('1590485510'))<=((vt1.c0)))))>=((x'a3e3')))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, vt1, v0 WHERE ((NOT ((((((('1590485510'))<=((vt1.c0)))))>=((x'a3e3')))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, vt1, v0 WHERE ((((((((('1590485510'))<=((vt1.c0)))))>=((x'a3e3')))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL vt1.c1, vt1.c0 FROM v0 LEFT OUTER JOIN vt1 ON vt1.c1 COLLATE NOCASE GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM v0 LEFT OUTER JOIN vt1 ON vt1.c1 COLLATE NOCASE GROUP BY vt1.c1, vt1.c0 HAVING (((((GROUP_CONCAT(NULL))) NOT BETWEEN ((COUNT(*))) AND ((SUM(NULL))))) IS TRUE) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM v0 LEFT OUTER JOIN vt1 ON vt1.c1 COLLATE NOCASE GROUP BY vt1.c1, vt1.c0 HAVING (NOT ((((((GROUP_CONCAT(NULL))) NOT BETWEEN ((COUNT(*))) AND ((SUM(NULL))))) IS TRUE))) UNION ALL SELECT vt1.c1, vt1.c0 FROM v0 LEFT OUTER JOIN vt1 ON vt1.c1 COLLATE NOCASE GROUP BY vt1.c1, vt1.c0 HAVING (((((((GROUP_CONCAT(NULL))) NOT BETWEEN ((COUNT(*))) AND ((SUM(NULL))))) IS TRUE)) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM v0 LEFT OUTER JOIN vt1 ON vt1.c1 COLLATE NOCASE GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM v0 LEFT OUTER JOIN vt1 ON vt1.c1 COLLATE NOCASE GROUP BY vt1.c1, vt1.c0 HAVING (((((GROUP_CONCAT(NULL))) NOT BETWEEN ((COUNT(*))) AND ((SUM(NULL))))) IS TRUE) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM v0 LEFT OUTER JOIN vt1 ON vt1.c1 COLLATE NOCASE GROUP BY vt1.c1, vt1.c0 HAVING (NOT ((((((GROUP_CONCAT(NULL))) NOT BETWEEN ((COUNT(*))) AND ((SUM(NULL))))) IS TRUE))) UNION ALL SELECT vt1.c1, vt1.c0 FROM v0 LEFT OUTER JOIN vt1 ON vt1.c1 COLLATE NOCASE GROUP BY vt1.c1, vt1.c0 HAVING (((((((GROUP_CONCAT(NULL))) NOT BETWEEN ((COUNT(*))) AND ((SUM(NULL))))) IS TRUE)) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM v0 LEFT OUTER JOIN vt1 ON vt1.c1 COLLATE NOCASE GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1, vt0, v0;
SELECT vt1.c1, vt1.c0 FROM vt1, vt0, v0 WHERE ((((((((((((((vt1.c0 IN (vt0.c0)))OR(((vt0.c0) IS FALSE))))OR('BV~<ʩ蚄')))OR((+ (vt0.c0)))))OR(CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)))OR(CASE WHEN '1616287164' THEN vt1.c1 ELSE -1324113578 END)))OR(((vt1.c1)LIKE(vt1.c1))))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1, vt0, v0 WHERE ((NOT ((((((((((((((vt1.c0 IN (vt0.c0)))OR(((vt0.c0) IS FALSE))))OR('BV~<ʩ蚄')))OR((+ (vt0.c0)))))OR(CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)))OR(CASE WHEN '1616287164' THEN vt1.c1 ELSE -1324113578 END)))OR(((vt1.c1)LIKE(vt1.c1))))))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1, vt0, v0 WHERE ((((((((((((((((vt1.c0 IN (vt0.c0)))OR(((vt0.c0) IS FALSE))))OR('BV~<ʩ蚄')))OR((+ (vt0.c0)))))OR(CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)))OR(CASE WHEN '1616287164' THEN vt1.c1 ELSE -1324113578 END)))OR(((vt1.c1)LIKE(vt1.c1))))) ISNULL));
SELECT ALL vt1.c1, vt1.c0 FROM vt1, vt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(x'b0f7fce2')))AND(v0.c0)))) AND ((((v0.c0) NOT BETWEEN ('561060341') AND (v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(x'b0f7fce2')))AND(v0.c0)))) AND ((((v0.c0) NOT BETWEEN ('561060341') AND (v0.c0)))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(x'b0f7fce2')))AND(v0.c0)))) AND ((((v0.c0) NOT BETWEEN ('561060341') AND (v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c0, vt1.c1 FROM vt1, vt0 FULL OUTER JOIN v0 ON x'' GROUP BY vt0.c0, vt1.c1;
SELECT vt0.c0, vt1.c1 FROM vt1, vt0 FULL OUTER JOIN v0 ON x'' WHERE (-21276301) GROUP BY vt0.c0, vt1.c1 UNION SELECT ALL vt0.c0, vt1.c1 FROM vt1, vt0 FULL OUTER JOIN v0 ON x'' WHERE ((NOT (-21276301))) GROUP BY vt0.c0, vt1.c1 UNION SELECT vt0.c0, vt1.c1 FROM vt1, vt0 FULL OUTER JOIN v0 ON x'' WHERE (((-21276301) ISNULL)) GROUP BY vt0.c0, vt1.c1;
SELECT ALL vt0.c0, vt1.c1 FROM vt1, vt0 FULL OUTER JOIN v0 ON x'' GROUP BY vt0.c0, vt1.c1;
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt0, vt1, v0 GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt0, vt1, v0 GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING IFNULL(DISTINCT GROUP_CONCAT(GROUP_CONCAT(0.4050470597904151)), vt0.c0 COLLATE RTRIM) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt0, vt1, v0 GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING (NOT (IFNULL(DISTINCT GROUP_CONCAT(GROUP_CONCAT(0.4050470597904151)), vt0.c0 COLLATE RTRIM))) UNION ALL SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt0, vt1, v0 GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING ((IFNULL(DISTINCT GROUP_CONCAT(GROUP_CONCAT(0.4050470597904151)), vt0.c0 COLLATE RTRIM)) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (CASE vt0.c0  WHEN NULL THEN vt0.c0 ELSE '' END))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS INTEGER)) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (CASE vt0.c0  WHEN NULL THEN vt0.c0 ELSE '' END))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER)) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (CASE vt0.c0  WHEN NULL THEN vt0.c0 ELSE '' END))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt1.c1, v0.c0, vt0.c0 FROM v0, vt0, vt1;
SELECT DISTINCT vt1.c1, v0.c0, vt0.c0 FROM v0, vt0, vt1 WHERE (NULL) UNION SELECT DISTINCT vt1.c1, v0.c0, vt0.c0 FROM v0, vt0, vt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt1.c1, v0.c0, vt0.c0 FROM v0, vt0, vt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt1.c1, v0.c0, vt0.c0 FROM v0, vt0, vt1;
SELECT v0.c0, vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 NATURAL JOIN v0 GROUP BY v0.c0, vt0.c0, vt1.c1, vt1.c0;
SELECT ALL v0.c0, vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 NATURAL JOIN v0 WHERE (((CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN x'' THEN vt1.c0 END)>((((vt0.c0))<>((vt1.c0)))))) GROUP BY v0.c0, vt0.c0, vt1.c1, vt1.c0 UNION SELECT v0.c0, vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 NATURAL JOIN v0 WHERE ((NOT (((CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN x'' THEN vt1.c0 END)>((((vt0.c0))<>((vt1.c0)))))))) GROUP BY v0.c0, vt0.c0, vt1.c1, vt1.c0 UNION SELECT v0.c0, vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 NATURAL JOIN v0 WHERE (((((CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN x'' THEN vt1.c0 END)>((((vt0.c0))<>((vt1.c0)))))) ISNULL)) GROUP BY v0.c0, vt0.c0, vt1.c1, vt1.c0;
SELECT v0.c0, vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 NATURAL JOIN v0 GROUP BY v0.c0, vt0.c0, vt1.c1, vt1.c0;
SELECT vt1.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0 HAVING AVG(AVG(MAX(MIN(vt0.c0)))) UNION ALL SELECT vt1.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0 HAVING (NOT (AVG(AVG(MAX(MIN(vt0.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0 HAVING ((AVG(AVG(MAX(MIN(vt0.c0))))) ISNULL);
SELECT ALL * FROM vt1, v0;
SELECT ALL * FROM vt1, v0 WHERE (CAST(vt1.c0 AS BLOB) COLLATE RTRIM) UNION ALL SELECT * FROM vt1, v0 WHERE ((NOT (CAST(vt1.c0 AS BLOB) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt1, v0 WHERE (((CAST(vt1.c0 AS BLOB) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt1, v0;
SELECT DISTINCT v0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN v0 ON CASE WHEN vt1.c1 THEN ((((vt1.c1)OR(v0.c0)))AND(vt1.c1)) END LEFT OUTER JOIN vt0 ON CASE WHEN vt1.c1 THEN vt1.c0 END COLLATE NOCASE;
SELECT DISTINCT v0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN v0 ON CASE WHEN vt1.c1 THEN ((((vt1.c1)OR(v0.c0)))AND(vt1.c1)) END LEFT OUTER JOIN vt0 ON CASE WHEN vt1.c1 THEN vt1.c0 END COLLATE NOCASE WHERE (((((vt1.c1) NOT NULL)) IS FALSE)) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN v0 ON CASE WHEN vt1.c1 THEN ((((vt1.c1)OR(v0.c0)))AND(vt1.c1)) END LEFT OUTER JOIN vt0 ON CASE WHEN vt1.c1 THEN vt1.c0 END COLLATE NOCASE WHERE ((NOT (((((vt1.c1) NOT NULL)) IS FALSE)))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN v0 ON CASE WHEN vt1.c1 THEN ((((vt1.c1)OR(v0.c0)))AND(vt1.c1)) END LEFT OUTER JOIN vt0 ON CASE WHEN vt1.c1 THEN vt1.c0 END COLLATE NOCASE WHERE (((((((vt1.c1) NOT NULL)) IS FALSE)) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN v0 ON CASE WHEN vt1.c1 THEN ((((vt1.c1)OR(v0.c0)))AND(vt1.c1)) END LEFT OUTER JOIN vt0 ON CASE WHEN vt1.c1 THEN vt1.c0 END COLLATE NOCASE;
SELECT ALL vt1.c1, v0.c0, vt1.c0 FROM v0, vt1 GROUP BY vt1.c1, v0.c0, vt1.c0;
SELECT ALL vt1.c1, v0.c0, vt1.c0 FROM v0, vt1 WHERE (((v0.c0)IS NOT(((vt1.c1)%(vt1.c0))))) GROUP BY vt1.c1, v0.c0, vt1.c0 UNION SELECT vt1.c1, v0.c0, vt1.c0 FROM v0, vt1 WHERE ((NOT (((v0.c0)IS NOT(((vt1.c1)%(vt1.c0))))))) GROUP BY vt1.c1, v0.c0, vt1.c0 UNION SELECT ALL vt1.c1, v0.c0, vt1.c0 FROM v0, vt1 WHERE (((((v0.c0)IS NOT(((vt1.c1)%(vt1.c0))))) ISNULL)) GROUP BY vt1.c1, v0.c0, vt1.c0;
SELECT ALL vt1.c1, v0.c0, vt1.c0 FROM v0, vt1 GROUP BY vt1.c1, v0.c0, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, v0.c0, vt1.c0 FROM v0, vt1;
SELECT ALL vt1.c1, v0.c0, vt1.c0 FROM v0, vt1 WHERE (CASE ((vt1.c0) IS FALSE)  WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c1)) THEN CASE vt1.c1  WHEN v0.c0 THEN v0.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END WHEN CAST('&x' AS BLOB) THEN SQLITE_VERSION() END) UNION ALL SELECT ALL vt1.c1, v0.c0, vt1.c0 FROM v0, vt1 WHERE ((NOT (CASE ((vt1.c0) IS FALSE)  WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c1)) THEN CASE vt1.c1  WHEN v0.c0 THEN v0.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END WHEN CAST('&x' AS BLOB) THEN SQLITE_VERSION() END))) UNION ALL SELECT vt1.c1, v0.c0, vt1.c0 FROM v0, vt1 WHERE (((CASE ((vt1.c0) IS FALSE)  WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c1)) THEN CASE vt1.c1  WHEN v0.c0 THEN v0.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END WHEN CAST('&x' AS BLOB) THEN SQLITE_VERSION() END) ISNULL));
SELECT vt1.c1, v0.c0, vt1.c0 FROM v0, vt1;
SELECT DISTINCT * FROM vt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM vt0 NATURAL JOIN v0 WHERE (((((((((x'ceee')OR((((vt0.c0, vt0.c0, vt0.c0))>=((v0.c0, x'0a03', vt0.c0))))))OR((((v0.c0, vt0.c0, v0.c0, vt0.c0, v0.c0))<=((vt0.c0, v0.c0, v0.c0, '', vt0.c0))))))OR(NULL)))OR((~ (v0.c0))))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN v0 WHERE ((NOT (((((((((x'ceee')OR((((vt0.c0, vt0.c0, vt0.c0))>=((v0.c0, x'0a03', vt0.c0))))))OR((((v0.c0, vt0.c0, v0.c0, vt0.c0, v0.c0))<=((vt0.c0, v0.c0, v0.c0, '', vt0.c0))))))OR(NULL)))OR((~ (v0.c0))))))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN v0 WHERE (((((((((((x'ceee')OR((((vt0.c0, vt0.c0, vt0.c0))>=((v0.c0, x'0a03', vt0.c0))))))OR((((v0.c0, vt0.c0, v0.c0, vt0.c0, v0.c0))<=((vt0.c0, v0.c0, v0.c0, '', vt0.c0))))))OR(NULL)))OR((~ (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0 NATURAL JOIN v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 NOT INDEXED WHERE ((((((v0.c0))<=((x'07da')))) NOT BETWEEN (((v0.c0)+(v0.c0))) AND (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0))<=((x'07da')))) NOT BETWEEN (((v0.c0)+(v0.c0))) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((((v0.c0))<=((x'07da')))) NOT BETWEEN (((v0.c0)+(v0.c0))) AND (v0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0 HAVING (CASE 0.88335229265927  WHEN vt1.c1 THEN vt1.c0 END IN (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0 HAVING (NOT ((CASE 0.88335229265927  WHEN vt1.c1 THEN vt1.c0 END IN (COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0 HAVING (((CASE 0.88335229265927  WHEN vt1.c1 THEN vt1.c0 END IN (COUNT(*)))) ISNULL);
SELECT vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0 HAVING (CASE 0.88335229265927  WHEN vt1.c1 THEN vt1.c0 END IN (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0 HAVING (NOT ((CASE 0.88335229265927  WHEN vt1.c1 THEN vt1.c0 END IN (COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0 HAVING (((CASE 0.88335229265927  WHEN vt1.c1 THEN vt1.c0 END IN (COUNT(*)))) ISNULL);
SELECT vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0;
SELECT ALL * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE ((+ (NULL))) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT ((+ (NULL))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((((+ (NULL))) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE ((((((+ (vt0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT ((((((+ (vt0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((((((((+ (vt0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT vt1.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((((vt1.c0)AND(vt1.c1)))OR(v0.c0)))IS NOT((('459697291')<=(vt1.c0)))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((((vt1.c0)AND(vt1.c1)))OR(v0.c0)))IS NOT((('459697291')<=(vt1.c0)))) WHERE (((((vt0.c0) NOTNULL)) IS TRUE)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((((vt1.c0)AND(vt1.c1)))OR(v0.c0)))IS NOT((('459697291')<=(vt1.c0)))) WHERE ((NOT (((((vt0.c0) NOTNULL)) IS TRUE)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((((vt1.c0)AND(vt1.c1)))OR(v0.c0)))IS NOT((('459697291')<=(vt1.c0)))) WHERE (((((((vt0.c0) NOTNULL)) IS TRUE)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((((vt1.c0)AND(vt1.c1)))OR(v0.c0)))IS NOT((('459697291')<=(vt1.c0)))) GROUP BY vt1.c0;
SELECT vt0.c0 FROM v0 CROSS JOIN vt1 ON vt0.c0 RIGHT OUTER JOIN vt0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))&(v0.c0 COLLATE BINARY)) GROUP BY vt0.c0;
SELECT SUM((((v0.c0) NOTNULL) IN ())) FROM v0, vt1, vt0;
SELECT ALL vt0.c0, v0.c0 FROM v0 FULL OUTER JOIN vt0 ON CASE (NOT (v0.c0))  WHEN (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt0.c0 WHEN (((v0.c0))<=((v0.c0))) THEN vt0.c0 COLLATE BINARY WHEN ((v0.c0)|(v0.c0)) THEN CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END END;
SELECT vt0.c0, v0.c0 FROM v0 NOT INDEXED FULL OUTER JOIN vt0 ON CASE (NOT (v0.c0))  WHEN (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt0.c0 WHEN (((v0.c0))<=((v0.c0))) THEN vt0.c0 COLLATE BINARY WHEN ((v0.c0)|(v0.c0)) THEN CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END END WHERE (TRIM(NULL)) UNION ALL SELECT vt0.c0, v0.c0 FROM v0 FULL OUTER JOIN vt0 ON CASE (NOT (v0.c0))  WHEN (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt0.c0 WHEN (((v0.c0))<=((v0.c0))) THEN vt0.c0 COLLATE BINARY WHEN ((v0.c0)|(v0.c0)) THEN CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END END WHERE ((NOT (TRIM(NULL)))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0 FULL OUTER JOIN vt0 ON CASE (NOT (v0.c0))  WHEN (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt0.c0 WHEN (((v0.c0))<=((v0.c0))) THEN vt0.c0 COLLATE BINARY WHEN ((v0.c0)|(v0.c0)) THEN CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END END WHERE (((TRIM(NULL)) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM v0 FULL OUTER JOIN vt0 ON CASE (NOT (v0.c0))  WHEN (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt0.c0 WHEN (((v0.c0))<=((v0.c0))) THEN vt0.c0 COLLATE BINARY WHEN ((v0.c0)|(v0.c0)) THEN CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END END;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ('' IN ()) THEN CAST(NULL AS NUMERIC) ELSE CAST(vt0.c0 AS NUMERIC) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ('' IN ()) THEN CAST(NULL AS NUMERIC) ELSE CAST(vt0.c0 AS NUMERIC) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ('' IN ()) THEN CAST(NULL AS NUMERIC) ELSE CAST(vt0.c0 AS NUMERIC) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c0, vt1.c1, vt1.c0 FROM vt1, vt0, v0 GROUP BY v0.c0, vt1.c1, vt1.c0;
SELECT v0.c0, vt1.c1, vt1.c0 FROM vt1, vt0, v0 WHERE (CASE WHEN IFNULL(v0.c0, vt1.c0) THEN ((vt0.c0) NOT BETWEEN (vt1.c1) AND (v0.c0)) ELSE CAST('0.5113459429091628' AS INTEGER) END) GROUP BY v0.c0, vt1.c1, vt1.c0 UNION SELECT ALL v0.c0, vt1.c1, vt1.c0 FROM vt1, vt0, v0 WHERE ((NOT (CASE WHEN IFNULL(v0.c0, vt1.c0) THEN ((vt0.c0) NOT BETWEEN (vt1.c1) AND (v0.c0)) ELSE CAST('0.5113459429091628' AS INTEGER) END))) GROUP BY v0.c0, vt1.c1, vt1.c0 UNION SELECT v0.c0, vt1.c1, vt1.c0 FROM vt1, vt0, v0 WHERE (((CASE WHEN IFNULL(v0.c0, vt1.c0) THEN ((vt0.c0) NOT BETWEEN (vt1.c1) AND (v0.c0)) ELSE CAST('0.5113459429091628' AS INTEGER) END) ISNULL)) GROUP BY v0.c0, vt1.c1, vt1.c0;
SELECT ALL v0.c0, vt1.c1, vt1.c0 FROM vt1, vt0, v0 GROUP BY v0.c0, vt1.c1, vt1.c0;
SELECT vt0.c0, vt1.c1 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c1;
SELECT ALL vt0.c0, vt1.c1 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c1 HAVING (((((((((((vt1.c1)) NOT BETWEEN ((COUNT(*))) AND ((TOTAL(vt0.c0)))))AND(COUNT(v0.c0))))AND(SUM(GROUP_CONCAT(vt1.c1)))))AND(CASE GROUP_CONCAT(COUNT(''))  WHEN vt0.c0 THEN v0.c0 ELSE vt1.c1 END)))OR((((vt1.c1, COUNT(*), AVG(MAX(v0.c0))))!=((SUM(GROUP_CONCAT(MIN(v0.c0))), MIN(TOTAL(GROUP_CONCAT(TOTAL(MAX(COUNT(MIN(vt1.c0))))))), vt1.c0))))) UNION ALL SELECT vt0.c0, vt1.c1 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c1 HAVING (NOT ((((((((((((vt1.c1)) NOT BETWEEN ((COUNT(*))) AND ((TOTAL(vt0.c0)))))AND(COUNT(v0.c0))))AND(SUM(GROUP_CONCAT(vt1.c1)))))AND(CASE GROUP_CONCAT(COUNT(''))  WHEN vt0.c0 THEN v0.c0 ELSE vt1.c1 END)))OR((((vt1.c1, COUNT(*), AVG(MAX(v0.c0))))!=((SUM(GROUP_CONCAT(MIN(v0.c0))), MIN(TOTAL(GROUP_CONCAT(TOTAL(MAX(COUNT(MIN(vt1.c0))))))), vt1.c0))))))) UNION ALL SELECT vt0.c0, vt1.c1 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c1 HAVING (((((((((((((vt1.c1)) NOT BETWEEN ((COUNT(*))) AND ((TOTAL(vt0.c0)))))AND(COUNT(v0.c0))))AND(SUM(GROUP_CONCAT(vt1.c1)))))AND(CASE GROUP_CONCAT(COUNT(''))  WHEN vt0.c0 THEN v0.c0 ELSE vt1.c1 END)))OR((((vt1.c1, COUNT(*), AVG(MAX(v0.c0))))<>((SUM(GROUP_CONCAT(MIN(v0.c0))), MIN(TOTAL(GROUP_CONCAT(TOTAL(MAX(COUNT(MIN(vt1.c0))))))), vt1.c0)))))) ISNULL);
SELECT vt1.c1, vt0.c0 FROM vt1, vt0 NOT INDEXED;
SELECT vt1.c1, vt0.c0 FROM vt1, vt0 WHERE (CAST((~ (vt1.c1)) AS NUMERIC)) UNION ALL SELECT ALL vt1.c1, vt0.c0 FROM vt1, vt0 WHERE ((NOT (CAST((~ (vt1.c1)) AS NUMERIC)))) UNION ALL SELECT ALL vt1.c1, vt0.c0 FROM vt1, vt0 WHERE (((CAST((~ (vt1.c1)) AS NUMERIC)) ISNULL));
SELECT vt1.c1, vt0.c0 FROM vt1, vt0 NOT INDEXED;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (highlight(((vt0.c0)!=(vt0.c0)), (+ (vt0.c0)), CASE WHEN 0.9127757122908355 THEN vt0.c0 ELSE vt0.c0 END, '682105514')) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (highlight(((vt0.c0)<>(vt0.c0)), (+ (vt0.c0)), CASE WHEN 0.9127757122908355 THEN vt0.c0 ELSE vt0.c0 END, '682105514')))) UNION SELECT DISTINCT * FROM vt0 WHERE (((highlight(((vt0.c0)!=(vt0.c0)), (+ (vt0.c0)), CASE WHEN 0.9127757122908355 THEN vt0.c0 ELSE vt0.c0 END, '682105514')) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1, vt0 WHERE (((vt1.c1)>=((vt1.c0 IN ())))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1, vt0 WHERE ((NOT (((vt1.c1)>=((vt1.c0 IN ())))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1, vt0 WHERE (((((vt1.c1)>=((vt1.c0 IN ())))) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1;
SELECT ALL v0.c0, vt0.c0 FROM v0 CROSS JOIN vt0 ON (((((((NULL)AND(v0.c0)))OR(vt0.c0))))<((vt0.c0))) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0 CROSS JOIN vt0 ON (((((((NULL)AND(v0.c0)))OR(vt0.c0))))<((vt0.c0))) GROUP BY v0.c0, vt0.c0 HAVING CAST(GROUP_CONCAT(TOTAL(MAX(COUNT(*)))) AS TEXT) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0 CROSS JOIN vt0 ON (((((((NULL)AND(v0.c0)))OR(vt0.c0))))<((vt0.c0))) GROUP BY v0.c0, vt0.c0 HAVING (NOT (CAST(GROUP_CONCAT(TOTAL(MAX(COUNT(*)))) AS TEXT))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0 CROSS JOIN vt0 ON (((((((NULL)AND(v0.c0)))OR(vt0.c0))))<((vt0.c0))) GROUP BY v0.c0, vt0.c0 HAVING ((CAST(GROUP_CONCAT(TOTAL(MAX(COUNT(*)))) AS TEXT)) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (NOT (vt0.c0)) WHEN '0.8128935381523874' THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE vt0.c0  WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (NOT (vt0.c0)) WHEN '0.8128935381523874' THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (NOT (vt0.c0)) WHEN '0.8128935381523874' THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt1.c1, vt1.c0 FROM v0, vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM v0, vt1 WHERE (CASE WHEN ((v0.c0)-(vt1.c0)) THEN COALESCE(DISTINCT vt1.c0, vt1.c0) ELSE TRIM(DISTINCT vt1.c0) END) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM v0, vt1 WHERE ((NOT (CASE WHEN ((v0.c0)-(vt1.c0)) THEN COALESCE(DISTINCT vt1.c0, vt1.c0) ELSE TRIM(DISTINCT vt1.c0) END))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM v0, vt1 WHERE (((CASE WHEN ((v0.c0)-(vt1.c0)) THEN COALESCE(DISTINCT vt1.c0, vt1.c0) ELSE TRIM(DISTINCT vt1.c0) END) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0 FROM v0, vt1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((((v0.c0)AND(v0.c0)))OR(v0.c0)) IN (v0.c0 COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0)AND(v0.c0)))OR(v0.c0)) IN (v0.c0 COLLATE RTRIM))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)) IN (v0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((AVG(TOTAL(vt0.c0))) NOT BETWEEN (((MAX(COUNT(*)))|(MAX(vt0.c0)))) AND (MAX(v0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (((AVG(TOTAL(vt0.c0))) NOT BETWEEN (((MAX(COUNT(*)))|(MAX(vt0.c0)))) AND (MAX(v0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((((AVG(TOTAL(vt0.c0))) NOT BETWEEN (((MAX(COUNT(*)))|(MAX(vt0.c0)))) AND (MAX(v0.c0)))) ISNULL);
SELECT * FROM vt1 CROSS JOIN v0 ON v0.c0 CROSS JOIN vt0 ON (vt1.c1 IN ()) COLLATE BINARY;
SELECT ALL * FROM vt1 CROSS JOIN v0 ON v0.c0 CROSS JOIN vt0 ON (vt1.c1 IN ()) COLLATE BINARY WHERE (((((v0.c0)<>(vt0.c0))) NOT NULL)) UNION ALL SELECT ALL * FROM vt1 CROSS JOIN v0 ON v0.c0 CROSS JOIN vt0 ON (vt1.c1 IN ()) COLLATE BINARY WHERE ((NOT (((((v0.c0)<>(vt0.c0))) NOT NULL)))) UNION ALL SELECT ALL * FROM vt1 CROSS JOIN v0 ON v0.c0 CROSS JOIN vt0 ON (vt1.c1 IN ()) COLLATE BINARY WHERE (((((((v0.c0)!=(vt0.c0))) NOT NULL)) ISNULL));
SELECT * FROM vt1 CROSS JOIN v0 ON v0.c0 CROSS JOIN vt0 ON (vt1.c1 IN ()) COLLATE BINARY;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE RTRIM) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt1.c0, v0.c0 FROM vt1 NOT INDEXED, v0 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 WHERE ((~ (vt1.c0 COLLATE NOCASE))) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM vt1, v0 WHERE ((NOT ((~ (vt1.c0 COLLATE NOCASE))))) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM vt1, v0 WHERE ((((~ (vt1.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1 NOT INDEXED, v0 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0, vt1.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((- (v0.c0))))<>((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))) GROUP BY vt0.c0, v0.c0, vt1.c0;
SELECT vt0.c0, v0.c0, vt1.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((- (v0.c0))))!=((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))) GROUP BY vt0.c0, v0.c0, vt1.c0 HAVING GROUP_CONCAT(vt1.c0) UNION ALL SELECT vt0.c0, v0.c0, vt1.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((- (v0.c0))))!=((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))) GROUP BY vt0.c0, v0.c0, vt1.c0 HAVING (NOT (GROUP_CONCAT(vt1.c0))) UNION ALL SELECT ALL vt0.c0, v0.c0, vt1.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((- (v0.c0))))<>((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))) GROUP BY vt0.c0, v0.c0, vt1.c0 HAVING ((GROUP_CONCAT(vt1.c0)) ISNULL);
SELECT ALL vt0.c0, v0.c0, vt1.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((- (v0.c0))))<>((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))) GROUP BY vt0.c0, v0.c0, vt1.c0;
SELECT vt0.c0, v0.c0, vt1.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((- (v0.c0))))!=((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))) GROUP BY vt0.c0, v0.c0, vt1.c0 HAVING GROUP_CONCAT(vt1.c0) UNION ALL SELECT vt0.c0, v0.c0, vt1.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((- (v0.c0))))!=((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))) GROUP BY vt0.c0, v0.c0, vt1.c0 HAVING (NOT (GROUP_CONCAT(vt1.c0))) UNION ALL SELECT ALL vt0.c0, v0.c0, vt1.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((- (v0.c0))))<>((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))) GROUP BY vt0.c0, v0.c0, vt1.c0 HAVING ((GROUP_CONCAT(vt1.c0)) ISNULL);
SELECT ALL vt0.c0, v0.c0, vt1.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((- (v0.c0))))<>((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))) GROUP BY vt0.c0, v0.c0, vt1.c0;
SELECT * FROM vt1 FULL OUTER JOIN v0 ON (- (TRIM(vt0.c0))) INNER JOIN vt0 ON vt1.c1;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ('-286770165') UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT ('-286770165'))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((('-286770165') ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((- (vt1.c0)))*(((((vt1.c1)AND(vt1.c0)))AND(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((- (vt1.c0)))*(((((vt1.c1)AND(vt1.c0)))AND(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((- (vt1.c0)))*(((((vt1.c1)AND(vt1.c0)))AND(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt1.c1 FROM vt0 FULL OUTER JOIN vt1 ON (((+ (vt1.c0)))<>(CASE vt1.c1  WHEN vt0.c0 THEN vt1.c1 END)) GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt0 FULL OUTER JOIN vt1 ON (((+ (vt1.c0)))<>(CASE vt1.c1  WHEN vt0.c0 THEN vt1.c1 END)) GROUP BY vt1.c0, vt1.c1 HAVING ((GROUP_CONCAT(vt0.c0)) NOT BETWEEN (TOTAL(AVG(MAX('473826093')))) AND (((TOTAL(TOTAL(SUM(COUNT(*))))) IS TRUE))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt0 FULL OUTER JOIN vt1 ON (((+ (vt1.c0)))!=(CASE vt1.c1  WHEN vt0.c0 THEN vt1.c1 END)) GROUP BY vt1.c0, vt1.c1 HAVING (NOT (((GROUP_CONCAT(vt0.c0)) NOT BETWEEN (TOTAL(AVG(MAX('473826093')))) AND (((TOTAL(TOTAL(SUM(COUNT(*))))) IS TRUE))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt0 FULL OUTER JOIN vt1 ON (((+ (vt1.c0)))<>(CASE vt1.c1  WHEN vt0.c0 THEN vt1.c1 END)) GROUP BY vt1.c0, vt1.c1 HAVING ((((GROUP_CONCAT(vt0.c0)) NOT BETWEEN (TOTAL(AVG(MAX('473826093')))) AND (((TOTAL(TOTAL(SUM(COUNT(*))))) IS TRUE)))) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (((vt1.c0)>>(vt1.c0)) COLLATE NOCASE) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0)>>(vt1.c0)) COLLATE NOCASE))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (((((vt1.c0)>>(vt1.c0)) COLLATE NOCASE) ISNULL));
SELECT vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT * FROM v0, vt1, vt0;
SELECT DISTINCT * FROM v0, vt1, vt0 WHERE (json_patch(vt0.c0 COLLATE BINARY, ((')~4.ML}')>(vt1.c0)))) UNION SELECT DISTINCT * FROM v0, vt1, vt0 WHERE ((NOT (json_patch(vt0.c0 COLLATE BINARY, ((')~4.ML}')>(vt1.c0)))))) UNION SELECT DISTINCT * FROM v0, vt1, vt0 WHERE (((json_patch(vt0.c0 COLLATE BINARY, ((')~4.ML}')>(vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM v0, vt1, vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((UNLIKELY(v0.c0)) NOT BETWEEN (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))) AND ((- (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((UNLIKELY(v0.c0)) NOT BETWEEN (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))) AND ((- (v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((UNLIKELY(v0.c0)) NOT BETWEEN (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))) AND ((- (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt1.c0, vt1.c1, v0.c0, vt0.c0 FROM v0, vt0 RIGHT OUTER JOIN vt1 ON NULL GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c0;
SELECT vt1.c0, vt1.c1, v0.c0, vt0.c0 FROM v0, vt0 RIGHT OUTER JOIN vt1 ON NULL GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0, vt1.c1, v0.c0, vt0.c0 FROM v0, vt0 RIGHT OUTER JOIN vt1 ON NULL GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt1.c0, vt1.c1, v0.c0, vt0.c0 FROM v0, vt0 RIGHT OUTER JOIN vt1 ON NULL GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c0 HAVING ((vt1.c0) ISNULL);
SELECT vt1.c0, vt1.c1, v0.c0, vt0.c0 FROM v0, vt0 RIGHT OUTER JOIN vt1 ON NULL GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c0;
SELECT vt1.c0, vt1.c1, v0.c0, vt0.c0 FROM v0, vt0 RIGHT OUTER JOIN vt1 ON NULL GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0, vt1.c1, v0.c0, vt0.c0 FROM v0, vt0 RIGHT OUTER JOIN vt1 ON NULL GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt1.c0, vt1.c1, v0.c0, vt0.c0 FROM v0, vt0 RIGHT OUTER JOIN vt1 ON NULL GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c0 HAVING ((vt1.c0) ISNULL);
SELECT vt1.c0, vt1.c1, v0.c0, vt0.c0 FROM v0, vt0 RIGHT OUTER JOIN vt1 ON NULL GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(x'3505')))AND(vt0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(x'3505')))AND(vt0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(x'3505')))AND(vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((~ (((vt1.c0) IS TRUE)))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((NOT ((~ (((vt1.c0) IS TRUE)))))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((((~ (((vt1.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON v0.c0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON v0.c0 WHERE (((((TRIM(DISTINCT v0.c0, vt0.c0))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON v0.c0 WHERE ((NOT (((((TRIM(DISTINCT v0.c0, vt0.c0))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON v0.c0 WHERE (((((((TRIM(DISTINCT v0.c0, vt0.c0))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(vt0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON v0.c0 GROUP BY vt0.c0;
SELECT ALL vt1.c1, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt1.c1)IS NOT(vt0.c0))) IS FALSE) GROUP BY vt1.c1, vt0.c0;
SELECT ALL vt1.c1, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt1.c1)IS NOT(vt0.c0))) IS FALSE) GROUP BY vt1.c1, vt0.c0 HAVING AVG(vt1.c1) UNION ALL SELECT ALL vt1.c1, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt1.c1)IS NOT(vt0.c0))) IS FALSE) GROUP BY vt1.c1, vt0.c0 HAVING (NOT (AVG(vt1.c1))) UNION ALL SELECT vt1.c1, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt1.c1)IS NOT(vt0.c0))) IS FALSE) GROUP BY vt1.c1, vt0.c0 HAVING ((AVG(vt1.c1)) ISNULL);
SELECT ALL vt1.c1, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt1.c1)IS NOT(vt0.c0))) IS FALSE) GROUP BY vt1.c1, vt0.c0;
SELECT ALL vt1.c1, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt1.c1)IS NOT(vt0.c0))) IS FALSE) GROUP BY vt1.c1, vt0.c0 HAVING AVG(vt1.c1) UNION ALL SELECT ALL vt1.c1, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt1.c1)IS NOT(vt0.c0))) IS FALSE) GROUP BY vt1.c1, vt0.c0 HAVING (NOT (AVG(vt1.c1))) UNION ALL SELECT vt1.c1, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt1.c1)IS NOT(vt0.c0))) IS FALSE) GROUP BY vt1.c1, vt0.c0 HAVING ((AVG(vt1.c1)) ISNULL);
SELECT ALL vt1.c1, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt1.c1)IS NOT(vt0.c0))) IS FALSE) GROUP BY vt1.c1, vt0.c0;
SELECT SUM(((((((((((((vt0.c0)AND(-1.650703793E9)))AND(v0.c0)))OR(CASE WHEN vt1.c1 THEN vt1.c0 END)))AND(((v0.c0)=(vt1.c0)))))OR(((vt1.c1)&(vt0.c0)))))AND(CASE vt1.c1  WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c1 END))) FROM v0, vt0, vt1 ORDER BY NULL;
SELECT * FROM vt1, v0, vt0;
SELECT ALL * FROM vt1, v0, vt0 WHERE (((((- (v0.c0))))>(((((vt0.c0, NULL, v0.c0))<=((vt0.c0, vt1.c0, vt1.c0))))))) UNION ALL SELECT ALL * FROM vt1, v0, vt0 WHERE ((NOT (((((- (v0.c0))))>(((((vt0.c0, NULL, v0.c0))<=((vt0.c0, vt1.c0, vt1.c0))))))))) UNION ALL SELECT * FROM vt1, v0, vt0 WHERE (((((((- (v0.c0))))>(((((vt0.c0, NULL, v0.c0))<=((vt0.c0, vt1.c0, vt1.c0))))))) ISNULL));
SELECT * FROM vt1, v0, vt0;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0) ISNULL)))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (((((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0) ISNULL)))))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE (((((((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0) ISNULL)))) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((UNLIKELY(DISTINCT v0.c0) IN ())) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((UNLIKELY(DISTINCT v0.c0) IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((UNLIKELY(DISTINCT v0.c0) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(GROUP_CONCAT(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(GROUP_CONCAT(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING ((SUM(GROUP_CONCAT(v0.c0))) ISNULL);
SELECT ALL v0.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON ((COALESCE(v0.c0, vt1.c1, vt1.c1, vt0.c0, vt1.c1, x'')) NOT BETWEEN ((NOT (vt1.c0))) AND (vt1.c0 COLLATE RTRIM));
SELECT v0.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON ((COALESCE(v0.c0, vt1.c1, vt1.c1, vt0.c0, vt1.c1, x'')) NOT BETWEEN ((NOT (vt1.c0))) AND (vt1.c0 COLLATE RTRIM)) WHERE (NULL COLLATE BINARY) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON ((COALESCE(v0.c0, vt1.c1, vt1.c1, vt0.c0, vt1.c1, x'')) NOT BETWEEN ((NOT (vt1.c0))) AND (vt1.c0 COLLATE RTRIM)) WHERE ((NOT (NULL COLLATE BINARY))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON ((COALESCE(v0.c0, vt1.c1, vt1.c1, vt0.c0, vt1.c1, x'')) NOT BETWEEN ((NOT (vt1.c0))) AND (vt1.c0 COLLATE RTRIM)) WHERE (((NULL COLLATE BINARY) ISNULL));
SELECT ALL v0.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON ((COALESCE(v0.c0, vt1.c1, vt1.c1, vt0.c0, vt1.c1, x'')) NOT BETWEEN ((NOT (vt1.c0))) AND (vt1.c0 COLLATE RTRIM));
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST((+ (vt1.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST((+ (vt1.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST((+ (vt1.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL v0.c0, vt1.c1 FROM vt1, v0 GROUP BY v0.c0, vt1.c1;
SELECT v0.c0, vt1.c1 FROM vt1, v0 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE)) GROUP BY v0.c0, vt1.c1 UNION SELECT v0.c0, vt1.c1 FROM vt1, v0 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE)))) GROUP BY v0.c0, vt1.c1 UNION SELECT v0.c0, vt1.c1 FROM vt1, v0 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE)) ISNULL)) GROUP BY v0.c0, vt1.c1;
SELECT ALL v0.c0, vt1.c1 FROM vt1, v0 GROUP BY v0.c0, vt1.c1;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0 NOT INDEXED, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT v0.c0, vt1.c1 FROM v0, vt1;
SELECT ALL v0.c0, vt1.c1 FROM v0, vt1 WHERE ((NOT ((('326287651') NOT BETWEEN (v0.c0) AND (vt1.c1))))) UNION ALL SELECT ALL v0.c0, vt1.c1 FROM v0, vt1 WHERE ((NOT ((NOT ((('326287651') NOT BETWEEN (v0.c0) AND (vt1.c1))))))) UNION ALL SELECT v0.c0, vt1.c1 FROM v0, vt1 NOT INDEXED WHERE ((((NOT ((('326287651') NOT BETWEEN (v0.c0) AND (vt1.c1))))) ISNULL));
SELECT v0.c0, vt1.c1 FROM v0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON x'';
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON x'' WHERE (CASE ((((vt0.c0)AND(vt1.c1)))OR(vt0.c0))  WHEN (~ (vt1.c1)) THEN (((vt1.c0, vt1.c0, vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((vt1.c1, '', vt1.c1))) WHEN CAST(vt1.c1 AS REAL) THEN (((vt1.c1))>((vt1.c1))) WHEN (~ (vt0.c0)) THEN ((vt1.c0)>=(vt0.c0)) WHEN (vt1.c1 IN (vt1.c0)) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0) NOTNULL) ELSE (~ (vt1.c0)) END) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON x'' WHERE ((NOT (CASE ((((vt0.c0)AND(vt1.c1)))OR(vt0.c0))  WHEN (~ (vt1.c1)) THEN (((vt1.c0, vt1.c0, vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((vt1.c1, '', vt1.c1))) WHEN CAST(vt1.c1 AS REAL) THEN (((vt1.c1))>((vt1.c1))) WHEN (~ (vt0.c0)) THEN ((vt1.c0)>=(vt0.c0)) WHEN (vt1.c1 IN (vt1.c0)) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0) NOTNULL) ELSE (~ (vt1.c0)) END))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON x'' WHERE (((CASE ((((vt0.c0)AND(vt1.c1)))OR(vt0.c0))  WHEN (~ (vt1.c1)) THEN (((vt1.c0, vt1.c0, vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((vt1.c1, '', vt1.c1))) WHEN CAST(vt1.c1 AS REAL) THEN (((vt1.c1))>((vt1.c1))) WHEN (~ (vt0.c0)) THEN ((vt1.c0)>=(vt0.c0)) WHEN (vt1.c1 IN (vt1.c0)) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0) NOTNULL) ELSE (~ (vt1.c0)) END) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON x'';
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE (json_insert((((vt0.c0))>=(('0.2821987485989381'))), CASE vt0.c0  WHEN x'' THEN v0.c0 END, v0.c0)) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (json_insert((((vt0.c0))>=(('0.2821987485989381'))), CASE vt0.c0  WHEN x'' THEN v0.c0 END, v0.c0)))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (((json_insert((((vt0.c0))>=(('0.2821987485989381'))), CASE vt0.c0  WHEN x'' THEN v0.c0 END, v0.c0)) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0;
SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0 HAVING MIN(AVG(v0.c0)) UNION ALL SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0 HAVING (NOT (MIN(AVG(v0.c0)))) UNION ALL SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0 HAVING ((MIN(AVG(v0.c0))) ISNULL);
SELECT * FROM vt0, vt1, v0;
SELECT * FROM vt0, vt1, v0 WHERE ((((((((((((vt1.c1)AND(vt0.c0)))OR(vt1.c0)))OR(v0.c0)))OR(vt1.c0)), ((vt0.c0)AND(vt1.c0)), CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 WHEN v0.c0 THEN vt1.c0 ELSE vt1.c1 END))>=((CAST(0.7473983698250097 AS NUMERIC), LIKELIHOOD(v0.c0, 0.6636079398752689), CASE WHEN '930673858' THEN x'05fb' END)))) UNION ALL SELECT * FROM vt0, vt1, v0 WHERE ((NOT ((((((((((((vt1.c1)AND(vt0.c0)))OR(vt1.c0)))OR(v0.c0)))OR(vt1.c0)), ((vt0.c0)AND(vt1.c0)), CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 WHEN v0.c0 THEN vt1.c0 ELSE vt1.c1 END))>=((CAST(0.7473983698250097 AS NUMERIC), LIKELIHOOD(v0.c0, 0.6636079398752689), CASE WHEN '930673858' THEN x'05fb' END)))))) UNION ALL SELECT ALL * FROM vt0, vt1, v0 WHERE ((((((((((((((vt1.c1)AND(vt0.c0)))OR(vt1.c0)))OR(v0.c0)))OR(vt1.c0)), ((vt0.c0)AND(vt1.c0)), CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 WHEN v0.c0 THEN vt1.c0 ELSE vt1.c1 END))>=((CAST(0.7473983698250097 AS NUMERIC), LIKELIHOOD(v0.c0, 0.6636079398752689), CASE WHEN '930673858' THEN x'05fb' END)))) ISNULL));
SELECT * FROM vt0, vt1, v0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)) IN ())) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)) IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((((vt1.c0 COLLATE NOCASE, (((('z)3OiJ')AND(vt1.c0)))OR('-411061393')), CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN 'Pt' WHEN vt1.c0 THEN vt1.c1 END))<((((vt1.c1) NOTNULL), vt1.c0, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 COLLATE NOCASE, (((('z)3OiJ')AND(vt1.c0)))OR('-411061393')), CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN 'Pt' WHEN vt1.c0 THEN vt1.c1 END))<((((vt1.c1) NOTNULL), vt1.c0, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((((((vt1.c0 COLLATE NOCASE, (((('z)3OiJ')AND(vt1.c0)))OR('-411061393')), CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN 'Pt' WHEN vt1.c0 THEN vt1.c1 END))<((((vt1.c1) NOTNULL), vt1.c0, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST((- (vt1.c0)) AS BLOB) GROUP BY vt1.c1, vt0.c0;
SELECT vt1.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST((- (vt1.c0)) AS BLOB) GROUP BY vt1.c1, vt0.c0 HAVING ((CAST(MIN(SUM(AVG(vt0.c0))) AS REAL))IS NOT(CASE WHEN vt1.c0 THEN SUM(COUNT(COUNT(*))) END)) UNION ALL SELECT vt1.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST((- (vt1.c0)) AS BLOB) GROUP BY vt1.c1, vt0.c0 HAVING (NOT (((CAST(MIN(SUM(AVG(vt0.c0))) AS REAL))IS NOT(CASE WHEN vt1.c0 THEN SUM(COUNT(COUNT(*))) END)))) UNION ALL SELECT ALL vt1.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST((- (vt1.c0)) AS BLOB) GROUP BY vt1.c1, vt0.c0 HAVING ((((CAST(MIN(SUM(AVG(vt0.c0))) AS REAL))IS NOT(CASE WHEN vt1.c0 THEN SUM(COUNT(COUNT(*))) END))) ISNULL);
SELECT ALL vt1.c1, vt1.c0, v0.c0 FROM v0 FULL OUTER JOIN vt1 ON CAST(CAST(v0.c0 AS TEXT) AS INTEGER);
SELECT ALL vt1.c1, vt1.c0, v0.c0 FROM v0 FULL OUTER JOIN vt1 ON CAST(CAST(v0.c0 AS TEXT) AS INTEGER) WHERE (-225207140) UNION ALL SELECT vt1.c1, vt1.c0, v0.c0 FROM v0 FULL OUTER JOIN vt1 ON CAST(CAST(v0.c0 AS TEXT) AS INTEGER) WHERE ((NOT (-225207140))) UNION ALL SELECT vt1.c1, vt1.c0, v0.c0 FROM v0 FULL OUTER JOIN vt1 ON CAST(CAST(v0.c0 AS TEXT) AS INTEGER) WHERE (((-225207140) ISNULL));
SELECT ALL vt1.c1, vt1.c0, v0.c0 FROM v0 FULL OUTER JOIN vt1 ON CAST(CAST(v0.c0 AS TEXT) AS INTEGER);
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((HEX(vt0.c0))LIKE(((vt0.c0)<(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((HEX(vt0.c0))LIKE(((vt0.c0)<(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((HEX(vt0.c0))LIKE(((vt0.c0)<(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN '' WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)OR(0.7781042480221607)))AND((NOT (vt1.c0))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE ((NOT (((((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN '' WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)OR(0.7781042480221607)))AND((NOT (vt1.c0))))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE (((((((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN '' WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)OR(0.7781042480221607)))AND((NOT (vt1.c0))))) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT((- (GROUP_CONCAT(MAX(TOTAL(GROUP_CONCAT(GROUP_CONCAT(vt1.c1)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT((- (GROUP_CONCAT(MAX(TOTAL(GROUP_CONCAT(GROUP_CONCAT(vt1.c1)))))))))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT((- (GROUP_CONCAT(MAX(TOTAL(GROUP_CONCAT(GROUP_CONCAT(vt1.c1))))))))) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0, vt1, vt0;
SELECT v0.c0, vt0.c0 FROM v0, vt1, vt0 WHERE ((('-1607491920') NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt1, vt0 WHERE ((NOT ((('-1607491920') NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt1, vt0 WHERE ((((('-1607491920') NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL v0.c0, vt0.c0 FROM v0, vt1, vt0;
SELECT DISTINCT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1 WHERE ((((((vt1.c1 IN ()))AND(((vt1.c1)<<(vt1.c1)))))AND((((vt1.c1)) BETWEEN ((v0.c0)) AND ((vt1.c0)))))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((NOT ((((((vt1.c1 IN ()))AND(((vt1.c1)<<(vt1.c1)))))AND((((vt1.c1)) BETWEEN ((v0.c0)) AND ((vt1.c0)))))))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((((((((vt1.c1 IN ()))AND(((vt1.c1)<<(vt1.c1)))))AND((((vt1.c1)) BETWEEN ((v0.c0)) AND ((vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0, vt1;
SELECT vt0.c0 FROM vt0, vt1 INNER JOIN v0 ON (((v0.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((((vt1.c0) IS FALSE), CAST('402163746' AS INTEGER), vt1.c0 COLLATE BINARY)) AND ((vt1.c1 COLLATE NOCASE, ((v0.c0)<=(v0.c0)), HEX(vt0.c0)))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 INNER JOIN v0 ON (((v0.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((((vt1.c0) IS FALSE), CAST('402163746' AS INTEGER), vt1.c0 COLLATE BINARY)) AND ((vt1.c1 COLLATE NOCASE, ((v0.c0)<=(v0.c0)), HEX(vt0.c0)))) WHERE (((vt1.c0)/(vt1.c1)) COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 INNER JOIN v0 ON (((v0.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((((vt1.c0) IS FALSE), CAST('402163746' AS INTEGER), vt1.c0 COLLATE BINARY)) AND ((vt1.c1 COLLATE NOCASE, ((v0.c0)<=(v0.c0)), HEX(vt0.c0)))) WHERE ((NOT (((vt1.c0)/(vt1.c1)) COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 INNER JOIN v0 ON (((v0.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((((vt1.c0) IS FALSE), CAST('402163746' AS INTEGER), vt1.c0 COLLATE BINARY)) AND ((vt1.c1 COLLATE NOCASE, ((v0.c0)<=(v0.c0)), HEX(vt0.c0)))) WHERE (((((vt1.c0)/(vt1.c1)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 INNER JOIN v0 ON (((v0.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((((vt1.c0) IS FALSE), CAST('402163746' AS INTEGER), vt1.c0 COLLATE BINARY)) AND ((vt1.c1 COLLATE NOCASE, ((v0.c0)<=(v0.c0)), HEX(vt0.c0)))) GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL * FROM vt1, vt0, v0;
SELECT * FROM vt1, vt0, v0 WHERE (((((UPPER(vt1.c0))AND((((vt0.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))))AND(CASE WHEN vt0.c0 THEN x'' WHEN 0.03273802319539054 THEN vt0.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END))) UNION ALL SELECT ALL * FROM vt1, vt0, v0 WHERE ((NOT (((((UPPER(vt1.c0))AND((((vt0.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))))AND(CASE WHEN vt0.c0 THEN x'' WHEN 0.03273802319539054 THEN vt0.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END))))) UNION ALL SELECT ALL * FROM vt1, vt0, v0 WHERE (((((((UPPER(vt1.c0))AND((((vt0.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))))AND(CASE WHEN vt0.c0 THEN x'' WHEN 0.03273802319539054 THEN vt0.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END))) ISNULL));
SELECT ALL * FROM vt1, vt0, v0;
SELECT DISTINCT vt0.c0 FROM v0 CROSS JOIN vt0 ON '-1853796203';
SELECT DISTINCT vt0.c0 FROM v0 CROSS JOIN vt0 ON '-1853796203' WHERE ((((v0.c0)IS NOT(v0.c0)) IN ())) UNION SELECT DISTINCT vt0.c0 FROM v0 CROSS JOIN vt0 ON '-1853796203' WHERE ((NOT ((((v0.c0)IS NOT(v0.c0)) IN ())))) UNION SELECT DISTINCT vt0.c0 FROM v0 CROSS JOIN vt0 ON '-1853796203' WHERE ((((((v0.c0)IS NOT(v0.c0)) IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0 CROSS JOIN vt0 ON '-1853796203';
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE ((((vt0.c0 COLLATE NOCASE))<((vt0.c0 COLLATE RTRIM)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE ((NOT ((((vt0.c0 COLLATE NOCASE))<((vt0.c0 COLLATE RTRIM)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE ((((((vt0.c0 COLLATE NOCASE))<((vt0.c0 COLLATE RTRIM)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM v0, vt1 LEFT OUTER JOIN vt0 ON ((-1.358855845E9) BETWEEN ('-1358855845') AND (LIKELY(vt1.c0))) GROUP BY vt0.c0, vt1.c1, vt1.c0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM v0, vt1 LEFT OUTER JOIN vt0 ON ((-1.358855845E9) BETWEEN ('-1358855845') AND (LIKELY(vt1.c0))) GROUP BY vt0.c0, vt1.c1, vt1.c0 HAVING GROUP_CONCAT(v0.c0) UNION ALL SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM v0, vt1 LEFT OUTER JOIN vt0 ON ((-1.358855845E9) BETWEEN ('-1358855845') AND (LIKELY(vt1.c0))) GROUP BY vt0.c0, vt1.c1, vt1.c0 HAVING (NOT (GROUP_CONCAT(v0.c0))) UNION ALL SELECT vt0.c0, vt1.c1, vt1.c0 FROM v0, vt1 LEFT OUTER JOIN vt0 ON ((-1.358855845E9) BETWEEN ('-1358855845') AND (LIKELY(vt1.c0))) GROUP BY vt0.c0, vt1.c1, vt1.c0 HAVING ((GROUP_CONCAT(v0.c0)) ISNULL);
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM v0, vt1 LEFT OUTER JOIN vt0 ON ((-1.358855845E9) BETWEEN ('-1358855845') AND (LIKELY(vt1.c0))) GROUP BY vt0.c0, vt1.c1, vt1.c0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM v0, vt1 LEFT OUTER JOIN vt0 ON ((-1.358855845E9) BETWEEN ('-1358855845') AND (LIKELY(vt1.c0))) GROUP BY vt0.c0, vt1.c1, vt1.c0 HAVING GROUP_CONCAT(v0.c0) UNION ALL SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM v0, vt1 LEFT OUTER JOIN vt0 ON ((-1.358855845E9) BETWEEN ('-1358855845') AND (LIKELY(vt1.c0))) GROUP BY vt0.c0, vt1.c1, vt1.c0 HAVING (NOT (GROUP_CONCAT(v0.c0))) UNION ALL SELECT vt0.c0, vt1.c1, vt1.c0 FROM v0, vt1 LEFT OUTER JOIN vt0 ON ((-1.358855845E9) BETWEEN ('-1358855845') AND (LIKELY(vt1.c0))) GROUP BY vt0.c0, vt1.c1, vt1.c0 HAVING ((GROUP_CONCAT(v0.c0)) ISNULL);
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM v0, vt1 LEFT OUTER JOIN vt0 ON ((-1.358855845E9) BETWEEN ('-1358855845') AND (LIKELY(vt1.c0))) GROUP BY vt0.c0, vt1.c1, vt1.c0;
SELECT MIN(((CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c1 END) NOT NULL)) FROM vt0, v0, vt1;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CASE CASE '0.2821987485989381'  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN v0.c0 COLLATE NOCASE THEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN '1042017049' WHEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CASE CASE '0.2821987485989381'  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN v0.c0 COLLATE NOCASE THEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN '1042017049' WHEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CASE CASE '0.2821987485989381'  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN v0.c0 COLLATE NOCASE THEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN '1042017049' WHEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE (('')GLOB(vt1.c1))  WHEN x'' THEN ((vt1.c0)==(vt1.c0)) END) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE (('')GLOB(vt1.c1))  WHEN x'' THEN ((vt1.c0)=(vt1.c0)) END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE (('')GLOB(vt1.c1))  WHEN x'' THEN ((vt1.c0)=(vt1.c0)) END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 FULL OUTER JOIN v0 ON load_extension(CAST(vt1.c0 AS NUMERIC)) GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 FULL OUTER JOIN v0 ON load_extension(CAST(vt1.c0 AS NUMERIC)) WHERE (CASE WHEN (((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) THEN ((vt0.c0)||(v0.c0)) END) GROUP BY vt1.c0, vt0.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 FULL OUTER JOIN v0 ON load_extension(CAST(vt1.c0 AS NUMERIC)) WHERE ((NOT (CASE WHEN (((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) THEN ((vt0.c0)||(v0.c0)) END))) GROUP BY vt1.c0, vt0.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 FULL OUTER JOIN v0 ON load_extension(CAST(vt1.c0 AS NUMERIC)) WHERE (((CASE WHEN (((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) THEN ((vt0.c0)||(v0.c0)) END) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 FULL OUTER JOIN v0 ON load_extension(CAST(vt1.c0 AS NUMERIC)) GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(vt0.c0))|(((vt0.c0)!=(v0.c0)))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (((GROUP_CONCAT(vt0.c0))|(((vt0.c0)!=(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((((GROUP_CONCAT(vt0.c0))|(((vt0.c0)<>(v0.c0))))) ISNULL);
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(vt0.c0))|(((vt0.c0)!=(v0.c0)))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (((GROUP_CONCAT(vt0.c0))|(((vt0.c0)!=(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((((GROUP_CONCAT(vt0.c0))|(((vt0.c0)<>(v0.c0))))) ISNULL);
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL * FROM v0, vt0, vt1;
SELECT ALL * FROM v0, vt0, vt1 WHERE ((((((vt1.c0, vt0.c0, vt0.c0))=((vt1.c1, vt0.c0, vt0.c0)))) NOT NULL)) UNION ALL SELECT * FROM v0, vt0, vt1 WHERE ((NOT ((((((vt1.c0, vt0.c0, vt0.c0))=((vt1.c1, vt0.c0, vt0.c0)))) NOT NULL)))) UNION ALL SELECT ALL * FROM v0, vt0, vt1 WHERE ((((((((vt1.c0, vt0.c0, vt0.c0))=((vt1.c1, vt0.c0, vt0.c0)))) NOT NULL)) ISNULL));
SELECT ALL * FROM v0, vt0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))/(((vt0.c0) ISNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))/(((vt0.c0) ISNULL)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))/(((vt0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1 WHERE (vt1.c1) GROUP BY vt1.c0, vt1.c1, vt0.c0 UNION SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1 WHERE ((NOT (vt1.c1))) GROUP BY vt1.c0, vt1.c1, vt0.c0 UNION SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1 WHERE (((vt1.c1) ISNULL)) GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING TOTAL(vt1.c1) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (TOTAL(vt1.c1))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c1, vt1.c0 HAVING ((TOTAL(vt1.c1)) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING TOTAL(vt1.c1) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (TOTAL(vt1.c1))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c1, vt1.c0 HAVING ((TOTAL(vt1.c1)) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL TOTAL((((('-1302100348')) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN (((v0.c0)<<(v0.c0))))) FROM v0;
SELECT v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON (~ ((((v0.c0, v0.c0, vt1.c1)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((vt1.c1, vt1.c1, vt1.c0)))));
SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON (~ ((((v0.c0, v0.c0, vt1.c1)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((vt1.c1, vt1.c1, vt1.c0))))) WHERE (((((x'2a79')AND(((vt1.c1)GLOB('q')))))AND(vt1.c1))) UNION ALL SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON (~ ((((v0.c0, v0.c0, vt1.c1)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((vt1.c1, vt1.c1, vt1.c0))))) WHERE ((NOT (((((x'2a79')AND(((vt1.c1)GLOB('q')))))AND(vt1.c1))))) UNION ALL SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON (~ ((((v0.c0, v0.c0, vt1.c1)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((vt1.c1, vt1.c1, vt1.c0))))) WHERE (((((((x'2a79')AND(((vt1.c1)GLOB('q')))))AND(vt1.c1))) ISNULL));
SELECT v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON (~ ((((v0.c0, v0.c0, vt1.c1)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((vt1.c1, vt1.c1, vt1.c0)))));
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN 1.715786646E9 END)&((((vt1.c1))<((vt1.c1)))))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (((CASE WHEN vt1.c0 THEN 1.715786646E9 END)&((((vt1.c1))<((vt1.c1)))))))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN 1.715786646E9 END)&((((vt1.c1))<((vt1.c1)))))) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((- ((vt1.c0 IN ())))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((- ((vt1.c0 IN ())))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((- ((vt1.c0 IN ())))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(((((((((v0.c0)OR(MAX(AVG(v0.c0)))))AND('-1311454912')))OR(v0.c0)))AND(SUM(GROUP_CONCAT(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(((((((((v0.c0)OR(MAX(AVG(v0.c0)))))AND('-1311454912')))OR(v0.c0)))AND(SUM(GROUP_CONCAT(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(((((((((v0.c0)OR(MAX(AVG(v0.c0)))))AND('-1311454912')))OR(v0.c0)))AND(SUM(GROUP_CONCAT(v0.c0)))))) ISNULL);
SELECT ALL * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (v0.c0) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM v0, vt0 WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (NULL) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (CAST(CASE WHEN '1329523681' THEN vt1.c1 END AS INTEGER)) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (CAST(CASE WHEN '1329523681' THEN vt1.c1 END AS INTEGER)))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (((CAST(CASE WHEN '1329523681' THEN vt1.c1 END AS INTEGER)) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0 HAVING SUM(COUNT(vt1.c0)) UNION ALL SELECT vt0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0 HAVING (NOT (SUM(COUNT(vt1.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0 HAVING ((SUM(COUNT(vt1.c0))) ISNULL);
SELECT ALL v0.c0, vt1.c0 FROM v0, vt0, vt1;
SELECT v0.c0, vt1.c0 FROM v0, vt0, vt1 WHERE (NULL) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM v0, vt0, vt1 WHERE ((NOT (NULL))) UNION ALL SELECT v0.c0, vt1.c0 FROM v0, vt0, vt1 WHERE (((NULL) ISNULL));
SELECT ALL v0.c0, vt1.c0 FROM v0, vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (CASE WHEN ((vt1.c1)<(vt1.c1)) THEN ((vt1.c1) NOTNULL) ELSE ((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0)) END) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (CASE WHEN ((vt1.c1)<(vt1.c1)) THEN ((vt1.c1) NOTNULL) ELSE ((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0)) END))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((CASE WHEN ((vt1.c1)<(vt1.c1)) THEN ((vt1.c1) NOTNULL) ELSE ((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0)) END) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT ALL v0.c0 FROM vt1 CROSS JOIN v0 ON (((((vt0.c0)!=(vt1.c1)), ((vt1.c1)OR(vt0.c0)), (- (vt1.c1))))>((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)), (((vt1.c0))>((v0.c0))), (((vt1.c0, v0.c0, vt1.c0))>((vt0.c0, v0.c0, vt1.c1)))))) INNER JOIN vt0 ON HEX(v0.c0) COLLATE BINARY GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1 CROSS JOIN v0 ON (((((vt0.c0)!=(vt1.c1)), ((vt1.c1)OR(vt0.c0)), (- (vt1.c1))))>((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)), (((vt1.c0))>((v0.c0))), (((vt1.c0, v0.c0, vt1.c0))>((vt0.c0, v0.c0, vt1.c1)))))) INNER JOIN vt0 ON HEX(v0.c0) COLLATE BINARY WHERE (((CAST(vt1.c0 AS INTEGER))%(CAST(vt0.c0 AS TEXT)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt1 CROSS JOIN v0 ON (((((vt0.c0)<>(vt1.c1)), ((vt1.c1)OR(vt0.c0)), (- (vt1.c1))))>((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)), (((vt1.c0))>((v0.c0))), (((vt1.c0, v0.c0, vt1.c0))>((vt0.c0, v0.c0, vt1.c1)))))) INNER JOIN vt0 ON HEX(v0.c0) COLLATE BINARY WHERE ((NOT (((CAST(vt1.c0 AS INTEGER))%(CAST(vt0.c0 AS TEXT)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt1 CROSS JOIN v0 ON (((((vt0.c0)!=(vt1.c1)), ((vt1.c1)OR(vt0.c0)), (- (vt1.c1))))>((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)), (((vt1.c0))>((v0.c0))), (((vt1.c0, v0.c0, vt1.c0))>((vt0.c0, v0.c0, vt1.c1)))))) INNER JOIN vt0 ON HEX(v0.c0) COLLATE BINARY WHERE (((((CAST(vt1.c0 AS INTEGER))%(CAST(vt0.c0 AS TEXT)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1 CROSS JOIN v0 ON (((((vt0.c0)!=(vt1.c1)), ((vt1.c1)OR(vt0.c0)), (- (vt1.c1))))>((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)), (((vt1.c0))>((v0.c0))), (((vt1.c0, v0.c0, vt1.c0))>((vt0.c0, v0.c0, vt1.c1)))))) INNER JOIN vt0 ON HEX(v0.c0) COLLATE BINARY GROUP BY v0.c0;
SELECT v0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN v0 ON 3.14613566E8 GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN v0 ON 3.14613566E8 GROUP BY v0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN v0 ON 3.14613566E8 GROUP BY v0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN v0 ON 3.14613566E8 GROUP BY v0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN v0 ON 3.14613566E8 GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN v0 ON 3.14613566E8 GROUP BY v0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN v0 ON 3.14613566E8 GROUP BY v0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN v0 ON 3.14613566E8 GROUP BY v0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN v0 ON 3.14613566E8 GROUP BY v0.c0, vt1.c0;
SELECT SUM(((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END) NOT NULL)) FROM vt1;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((NOT (MIN(v0.c0, 0.09355398773723445, v0.c0, v0.c0)))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((NOT (MIN(v0.c0, 0.09355398773723445, v0.c0, v0.c0)))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((NOT (MIN(v0.c0, 0.09355398773723445, v0.c0, v0.c0)))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT vt1.c0, vt1.c1, v0.c0 FROM vt1, v0;
SELECT DISTINCT vt1.c0, vt1.c1, v0.c0 FROM vt1, v0 WHERE ((- (((vt1.c0)%('-0.0'))))) UNION SELECT DISTINCT vt1.c0, vt1.c1, v0.c0 FROM vt1, v0 WHERE ((NOT ((- (((vt1.c0)%('-0.0'))))))) UNION SELECT DISTINCT vt1.c0, vt1.c1, v0.c0 FROM vt1, v0 WHERE ((((- (((vt1.c0)%('-0.0'))))) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1, v0.c0 FROM vt1, v0;
SELECT ALL v0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, vt1, v0 WHERE ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) IN ())) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, vt1, v0 WHERE ((NOT ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, vt1, v0 WHERE ((((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING MAX(((SUM(vt0.c0))<>(COUNT(*)))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (MAX(((SUM(vt0.c0))<>(COUNT(*)))))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((MAX(((SUM(vt0.c0))!=(COUNT(*))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (TYPEOF(DISTINCT ((vt1.c0) NOT NULL))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (TYPEOF(DISTINCT ((vt1.c0) NOT NULL))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((TYPEOF(DISTINCT ((vt1.c0) NOT NULL))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT v0.c0 FROM vt1, v0;
SELECT DISTINCT v0.c0 FROM vt1, v0 WHERE (NULL) UNION SELECT DISTINCT v0.c0 FROM vt1, v0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT v0.c0 FROM vt1, v0 WHERE (((NULL) ISNULL));
SELECT DISTINCT v0.c0 FROM vt1, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (TRIM(DISTINCT CAST(v0.c0 AS BLOB), 1330612717)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (TRIM(DISTINCT CAST(v0.c0 AS BLOB), 1330612717)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((TRIM(DISTINCT CAST(v0.c0 AS BLOB), 1330612717)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((CAST(vt1.c0 AS NUMERIC))||(AVG(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (((CAST(vt1.c0 AS NUMERIC))||(AVG(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 NOT INDEXED GROUP BY vt1.c0 HAVING ((((CAST(vt1.c0 AS NUMERIC))||(AVG(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((CAST(vt1.c0 AS NUMERIC))||(AVG(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (((CAST(vt1.c0 AS NUMERIC))||(AVG(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 NOT INDEXED GROUP BY vt1.c0 HAVING ((((CAST(vt1.c0 AS NUMERIC))||(AVG(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL SUM(((((vt1.c1) NOT NULL)) NOT BETWEEN (((vt1.c0) ISNULL)) AND ((('-676184652')>>(v0.c0))))) FROM vt1, vt0, v0;
SELECT vt1.c0, vt1.c1 FROM vt1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((vt1.c1 IN ()) COLLATE NOCASE) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT ((vt1.c1 IN ()) COLLATE NOCASE))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((((vt1.c1 IN ()) COLLATE NOCASE) ISNULL));
SELECT vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((+ (vt1.c1))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((NOT ((+ (vt1.c1))))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((((+ (vt1.c1))) ISNULL));
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT ALL vt0.c0, vt1.c1 FROM vt0 CROSS JOIN v0 ON CAST((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) AS BLOB) RIGHT OUTER JOIN vt1 ON (x'' IN ()) GROUP BY vt0.c0, vt1.c1;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING MIN(TOTAL(vt1.c0) COLLATE NOCASE) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (MIN(TOTAL(vt1.c0) COLLATE NOCASE))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((MIN(TOTAL(vt1.c0) COLLATE NOCASE)) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON ((v0.c0) NOT BETWEEN ('枵2') AND (v0.c0)) COLLATE BINARY;
SELECT ALL vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON ((v0.c0) NOT BETWEEN ('枵2') AND (v0.c0)) COLLATE BINARY WHERE (((vt0.c0) IS TRUE) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON ((v0.c0) NOT BETWEEN ('枵2') AND (v0.c0)) COLLATE BINARY WHERE ((NOT (((vt0.c0) IS TRUE) COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON ((v0.c0) NOT BETWEEN ('枵2') AND (v0.c0)) COLLATE BINARY WHERE (((((vt0.c0) IS TRUE) COLLATE RTRIM) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON ((v0.c0) NOT BETWEEN ('枵2') AND (v0.c0)) COLLATE BINARY;
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT DISTINCT * FROM vt1, vt0, v0 WHERE (((((((((((x'')OR(v0.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt1.c1)))!=(2139519983))) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE ((NOT (((((((((((x'')OR(v0.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt1.c1)))<>(2139519983))))) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE (((((((((((((x'')OR(v0.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt1.c1)))<>(2139519983))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT vt1.c1, v0.c0, vt0.c0 FROM v0, vt0 RIGHT OUTER JOIN vt1 ON vt1.c1 GROUP BY vt1.c1, v0.c0, vt0.c0;
SELECT ALL vt1.c1, v0.c0, vt0.c0 FROM v0, vt0 RIGHT OUTER JOIN vt1 ON vt1.c1 WHERE (((v0.c0)+(((vt1.c1)<>(vt1.c1))))) GROUP BY vt1.c1, v0.c0, vt0.c0 UNION SELECT ALL vt1.c1, v0.c0, vt0.c0 FROM v0, vt0 RIGHT OUTER JOIN vt1 ON vt1.c1 WHERE ((NOT (((v0.c0)+(((vt1.c1)!=(vt1.c1))))))) GROUP BY vt1.c1, v0.c0, vt0.c0 UNION SELECT ALL vt1.c1, v0.c0, vt0.c0 FROM v0, vt0 RIGHT OUTER JOIN vt1 ON vt1.c1 WHERE (((((v0.c0)+(((vt1.c1)!=(vt1.c1))))) ISNULL)) GROUP BY vt1.c1, v0.c0, vt0.c0;
SELECT vt1.c1, v0.c0, vt0.c0 FROM v0, vt0 RIGHT OUTER JOIN vt1 ON vt1.c1 GROUP BY vt1.c1, v0.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0, v0.c0, vt1.c1 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c0, v0.c0, vt1.c1;
SELECT vt1.c0, vt0.c0, v0.c0, vt1.c1 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c0, v0.c0, vt1.c1 HAVING UNLIKELY((AVG(SUM(SUM(vt1.c0))) IN ())) UNION ALL SELECT vt1.c0, vt0.c0, v0.c0, vt1.c1 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c0, v0.c0, vt1.c1 HAVING (NOT (UNLIKELY((AVG(SUM(SUM(vt1.c0))) IN ())))) UNION ALL SELECT vt1.c0, vt0.c0, v0.c0, vt1.c1 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c0, v0.c0, vt1.c1 HAVING ((UNLIKELY((AVG(SUM(SUM(vt1.c0))) IN ()))) ISNULL);
SELECT ALL vt1.c0, vt0.c0, v0.c0, vt1.c1 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c0, v0.c0, vt1.c1;
SELECT vt1.c0, vt0.c0, v0.c0, vt1.c1 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c0, v0.c0, vt1.c1 HAVING UNLIKELY((AVG(SUM(SUM(vt1.c0))) IN ())) UNION ALL SELECT vt1.c0, vt0.c0, v0.c0, vt1.c1 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c0, v0.c0, vt1.c1 HAVING (NOT (UNLIKELY((AVG(SUM(SUM(vt1.c0))) IN ())))) UNION ALL SELECT vt1.c0, vt0.c0, v0.c0, vt1.c1 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c0, v0.c0, vt1.c1 HAVING ((UNLIKELY((AVG(SUM(SUM(vt1.c0))) IN ()))) ISNULL);
SELECT ALL vt1.c0, vt0.c0, v0.c0, vt1.c1 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c0, v0.c0, vt1.c1;
SELECT ALL vt0.c0, v0.c0, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON vt1.c0 RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE NOCASE)||(v0.c0));
SELECT ALL vt0.c0, v0.c0, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON vt1.c0 RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE NOCASE)||(v0.c0)) WHERE (x'') UNION ALL SELECT vt0.c0, v0.c0, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON vt1.c0 RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE NOCASE)||(v0.c0)) WHERE ((NOT (x''))) UNION ALL SELECT ALL vt0.c0, v0.c0, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON vt1.c0 RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE NOCASE)||(v0.c0)) WHERE (((x'') ISNULL));
SELECT ALL vt0.c0, v0.c0, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON vt1.c0 RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE NOCASE)||(v0.c0));
SELECT DISTINCT vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((x'05fb')))) NOT BETWEEN (((x'')>(vt0.c0))) AND (((vt1.c1)OR(vt0.c0)))) CROSS JOIN v0 ON (LTRIM('%w', vt0.c0) IN ());
SELECT DISTINCT vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((x'05fb')))) NOT BETWEEN (((x'')>(vt0.c0))) AND (((vt1.c1)OR(vt0.c0)))) CROSS JOIN v0 ON (LTRIM('%w', vt0.c0) IN ()) WHERE (((vt1.c0) IS TRUE)) UNION SELECT DISTINCT vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((x'05fb')))) NOT BETWEEN (((x'')>(vt0.c0))) AND (((vt1.c1)OR(vt0.c0)))) CROSS JOIN v0 ON (LTRIM('%w', vt0.c0) IN ()) WHERE ((NOT (((vt1.c0) IS TRUE)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((x'05fb')))) NOT BETWEEN (((x'')>(vt0.c0))) AND (((vt1.c1)OR(vt0.c0)))) CROSS JOIN v0 ON (LTRIM('%w', vt0.c0) IN ()) WHERE (((((vt1.c0) IS TRUE)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((x'05fb')))) NOT BETWEEN (((x'')>(vt0.c0))) AND (((vt1.c1)OR(vt0.c0)))) CROSS JOIN v0 ON (LTRIM('%w', vt0.c0) IN ());
SELECT ALL vt0.c0, vt1.c1, vt1.c0, v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON CAST(v0.c0 AS TEXT) COLLATE BINARY INNER JOIN vt0 ON ((((vt1.c0))<>((vt1.c0))) IN ()) GROUP BY vt0.c0, vt1.c1, vt1.c0, v0.c0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0, v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON CAST(v0.c0 AS TEXT) COLLATE BINARY INNER JOIN vt0 ON ((((vt1.c0))<>((vt1.c0))) IN ()) WHERE ((NOT (vt1.c1 COLLATE BINARY))) GROUP BY vt0.c0, vt1.c1, vt1.c0, v0.c0 UNION SELECT ALL vt0.c0, vt1.c1, vt1.c0, v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON CAST(v0.c0 AS TEXT) COLLATE BINARY INNER JOIN vt0 ON ((((vt1.c0))<>((vt1.c0))) IN ()) WHERE ((NOT ((NOT (vt1.c1 COLLATE BINARY))))) GROUP BY vt0.c0, vt1.c1, vt1.c0, v0.c0 UNION SELECT ALL vt0.c0, vt1.c1, vt1.c0, v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON CAST(v0.c0 AS TEXT) COLLATE BINARY INNER JOIN vt0 ON ((((vt1.c0))<>((vt1.c0))) IN ()) WHERE ((((NOT (vt1.c1 COLLATE BINARY))) ISNULL)) GROUP BY vt0.c0, vt1.c1, vt1.c0, v0.c0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0, v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON CAST(v0.c0 AS TEXT) COLLATE BINARY INNER JOIN vt0 ON ((((vt1.c0))<>((vt1.c0))) IN ()) GROUP BY vt0.c0, vt1.c1, vt1.c0, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ABS((~ (COUNT(*)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (ABS((~ (COUNT(*)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((ABS((~ (COUNT(*))))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ABS((~ (COUNT(*)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (ABS((~ (COUNT(*)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((ABS((~ (COUNT(*))))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)LIKE(vt0.c0)), ((vt0.c0)%(NULL)), CAST(vt0.c0 AS NUMERIC))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR('-174050221')))OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) IS FALSE), CAST(vt0.c0 AS BLOB))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)LIKE(vt0.c0)), ((vt0.c0)%(NULL)), CAST(vt0.c0 AS NUMERIC))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR('-174050221')))OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) IS FALSE), CAST(vt0.c0 AS BLOB))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)LIKE(vt0.c0)), ((vt0.c0)%(NULL)), CAST(vt0.c0 AS NUMERIC))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR('-174050221')))OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) IS FALSE), CAST(vt0.c0 AS BLOB))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
