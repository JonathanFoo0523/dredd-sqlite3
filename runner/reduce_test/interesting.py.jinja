#!/usr/bin/python3

import sys
import os
import subprocess
import tempfile
import time

env_copy = os.environ.copy()

with open('{{ testcase_to_check }}', 'rb') as f:
    statements = f.read()
    # This ensure creduce produced test case alwats end with ';'
    while statements[-1] != 59:
        statements = statements[:-1]

with tempfile.NamedTemporaryFile(prefix='dredd-sqlite3-test-reduction-db', suffix='.db') as temp_db:
    start_time = time.time()
    proc_ref = subprocess.run(['{{ sqlite3_mutation_binary }}', temp_db.name], input=statements, stdout=subprocess.PIPE, stderr=subprocess.PIPE, env=env_copy)
    end_time = time.time()
    base_time = end_time - start_time

if 'syntax error' in proc_ref.stderr.decode():
    exit(3)

env_copy["DREDD_ENABLED_MUTATION"] = str({{ mutation_id }})
with tempfile.NamedTemporaryFile(prefix='dredd-sqlite3-test-reduction-db', suffix='.db') as temp_db:
    try:
        proc_mut = subprocess.run(['{{ sqlite3_mutation_binary }}', temp_db.name], input=statements, stdout=subprocess.PIPE, stderr=subprocess.PIPE, env=env_copy, timeout=max({{ min_timeout }}, base_time * {{ timeout_multiplier }}))
    except subprocess.TimeoutExpired:
        exit(2)

if proc_ref.returncode == proc_mut.returncode and proc_ref.stdout == proc_mut.stdout and proc_ref.stderr == proc_mut.stderr:
    exit(1)

exit(0)