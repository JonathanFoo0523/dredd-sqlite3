-- Time: 2024/06/09 10:20:46
-- Database: database23
-- Database version: 3.40.0
-- seed value: 3494751723
PRAGMA cache_size = 50000; -- 10ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 8ms;
INSERT OR IGNORE INTO vt0 VALUES (0.667674796713338); -- 7ms;
PRAGMA cache_spill; -- 3ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.8814636939450045); -- 0ms;
PRAGMA legacy_file_format = false; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, compress=likely, uncompress=likely); -- 13ms;
PRAGMA main.short_column_names; -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (''); -- 1ms;
DROP TABLE vt1; -- 1ms;
ANALYZE; -- 0ms;
ANALYZE main; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1608939130 unordered'); -- 10ms;
ANALYZE; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA temp.soft_heap_limit; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.9296343796613556); -- 0ms;
PRAGMA main.short_column_names = true; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
PRAGMA temp.short_column_names; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX BINARY; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (0.8890625310222606), ('] z姜d'), (1.60893913E9); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 16ms;
INSERT OR ABORT INTO vt0(c0) VALUES (''), ('-1833873302'), ('Q4,\rDrS?'), (x''), (NULL); -- 1ms;
END; -- 0ms;
COMMIT; -- 0ms;
VACUUM temp; -- 0ms;
PRAGMA temp.busy_timeout = 0; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'7a74'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 0 sz=1608939130 unordered'); -- 2ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (x''); -- 5ms;
END TRANSACTION; -- 9ms;
ANALYZE main; -- 3ms;
END; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.667674796713338); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('1608939130'), (x''), (0.8983646924350226); -- 0ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
CREATE VIEW v0(c0) AS SELECT DISTINCT CASE WHEN ((vt0.c0)%('9223372036854775807')) THEN CASE WHEN vt0.c0 THEN 'p(G' END WHEN ((1.60893913E9) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0)>(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END FROM vt0 WHERE (((('Q4,\rDrS?')<=(NULL)) IN ())) GROUP BY ((vt0.c0 COLLATE BINARY) BETWEEN (((((((((vt0.c0)OR(0.5762644942754116)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0)*(vt0.c0)))), (((vt0.c0)) NOT BETWEEN ((json_patch(vt0.c0, vt0.c0))) AND ((0.0 COLLATE BINARY))), CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC) HAVING (- (((vt0.c0)&(vt0.c0)))); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA temp.journal_mode = PERSIST; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x''), (''), (NULL); -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 INSTEAD OF INSERT ON v0 FOR EACH ROW  WHEN v0.c0 BEGIN UPDATE vt0 SET (c0)=('B\n');END; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (NULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' sz=-1497605668'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.7860457037178067))<((x'c8c2'))), (((NULL, x'fc62', x'dc4f')) NOT BETWEEN (('1677253938', '-64234213', '-64234213')) AND (('648298335', '1608939130', 0.16290241984339882))), ((x'ecaeb2bc') NOTNULL), (('b\n') IS TRUE), 0.6470768225628066 COLLATE RTRIM))>=((NULL COLLATE NOCASE, (((x'')) BETWEEN ((x'574d78cd')) AND (('Q4,\rDrS?'))), ((NULL)%(x'')), (('1608939130') NOT BETWEEN (2023230753) AND (x'')), x'' COLLATE RTRIM))); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0Xffffffffb194f6d9), (''), (NULL); -- 0ms;
ANALYZE vt0; -- 0ms;
ANALYZE temp; -- 1ms;
INSERT OR ABORT INTO vt0(c0) VALUES (-1.497605668E9), (NULL), (x''), (NULL), ('1180643054'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.3638265076164465); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.24437164083288965); -- 0ms;
PRAGMA main.stats; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (0.20725181680874405); -- 1ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (-1182184659); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA secure_delete; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'', c0=NULL, c0=x''; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
PRAGMA temp.application_id; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
PRAGMA mmap_size; -- 0ms;
PRAGMA main.application_id; -- 0ms;
ANALYZE vt0; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('-1497605668'), (NULL), (0.7336360064483929); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
PRAGMA wal_autocheckpoint = -6078081172041296896; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 END)OR((+ (v0.c0)))))OR(CASE 0.9332905682284364  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY CAST(CHAR(v0.c0) AS NUMERIC) ASC  NULLS LAST, ((v0.c0)OR(CAST(v0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN v0.c0 THEN v0.c0 END)OR((+ (v0.c0)))))OR(CASE 0.9332905682284364  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY CAST(CHAR(v0.c0) AS NUMERIC) ASC  NULLS LAST, ((v0.c0)OR(CAST(v0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 END)OR((+ (v0.c0)))))OR(CASE 0.9332905682284364  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY CAST(CHAR(v0.c0) AS NUMERIC) ASC  NULLS LAST, ((v0.c0)OR(CAST(v0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN v0.c0 THEN v0.c0 END)OR((+ (v0.c0)))))OR(CASE 0.9332905682284364  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY CAST(CHAR(v0.c0) AS NUMERIC) ASC  NULLS LAST, ((v0.c0)OR(CAST(v0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 END)OR((+ (v0.c0)))))OR(CASE 0.9332905682284364  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY CAST(CHAR(v0.c0) AS NUMERIC) ASC  NULLS LAST, ((v0.c0)OR(CAST(v0.c0 AS NUMERIC)));
SELECT * FROM vt0 WHERE ((NOT (((vt0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (((vt0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (((vt0.c0)>=(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN (((((v0.c0))<=((v0.c0))))) AND ((LIKELY(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN (((((v0.c0))<=((v0.c0))))) AND ((LIKELY(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN (((((v0.c0))<=((v0.c0))))) AND ((LIKELY(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN (((((v0.c0))<=((v0.c0))))) AND ((LIKELY(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN (((((v0.c0))<=((v0.c0))))) AND ((LIKELY(v0.c0)))));
SELECT * FROM vt0, v0 WHERE (NULL) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c0 ASC);
SELECT * FROM vt0, v0 WHERE (NULL) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c0 ASC);
SELECT * FROM vt0, v0 WHERE (NULL) ORDER BY v0.c0 ASC;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)<>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>=(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)!=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>=(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)<>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>=(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)!=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>=(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)<>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>=(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT * FROM vt0 WHERE ((~ (CASE WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((~ (CASE WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((~ (CASE WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS TEXT) WHEN CASE 1.60893913E9  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE BINARY WHEN CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END THEN (+ (vt0.c0)) ELSE (+ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS TEXT) WHEN CASE 1.60893913E9  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE BINARY WHEN CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END THEN (+ (vt0.c0)) ELSE (+ (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS TEXT) WHEN CASE 1.60893913E9  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE BINARY WHEN CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END THEN (+ (vt0.c0)) ELSE (+ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS TEXT) WHEN CASE 1.60893913E9  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE BINARY WHEN CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END THEN (+ (vt0.c0)) ELSE (+ (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS TEXT) WHEN CASE 1.60893913E9  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE BINARY WHEN CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END THEN (+ (vt0.c0)) ELSE (+ (vt0.c0)) END);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN v0.c0 THEN (~ (v0.c0)) END) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN (~ (v0.c0)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN v0.c0 THEN (~ (v0.c0)) END) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN (~ (v0.c0)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN v0.c0 THEN (~ (v0.c0)) END) ORDER BY NULL  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE '648298335'  WHEN ((v0.c0) NOT BETWEEN (0.35757338590512056) AND (v0.c0)) THEN v0.c0 COLLATE RTRIM WHEN ((v0.c0) NOTNULL) THEN (((v0.c0))<>((1.180643054E9))) WHEN (((v0.c0, v0.c0, x'', v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))) THEN ((v0.c0)IS(v0.c0)) END) ORDER BY CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) AS BLOB)  NULLS FIRST, (((UPPER(DISTINCT v0.c0)))<>((CASE WHEN v0.c0 THEN v0.c0 END))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE '648298335'  WHEN ((v0.c0) NOT BETWEEN (0.35757338590512056) AND (v0.c0)) THEN v0.c0 COLLATE RTRIM WHEN ((v0.c0) NOTNULL) THEN (((v0.c0))<>((1.180643054E9))) WHEN (((v0.c0, v0.c0, x'', v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))) THEN ((v0.c0)IS(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) AS BLOB)  NULLS FIRST, (((UPPER(DISTINCT v0.c0)))<>((CASE WHEN v0.c0 THEN v0.c0 END))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE '648298335'  WHEN ((v0.c0) NOT BETWEEN (0.35757338590512056) AND (v0.c0)) THEN v0.c0 COLLATE RTRIM WHEN ((v0.c0) NOTNULL) THEN (((v0.c0))<>((1.180643054E9))) WHEN (((v0.c0, v0.c0, x'', v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))) THEN ((v0.c0)IS(v0.c0)) END) ORDER BY CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) AS BLOB)  NULLS FIRST, (((UPPER(DISTINCT v0.c0)))<>((CASE WHEN v0.c0 THEN v0.c0 END))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE '648298335'  WHEN ((v0.c0) NOT BETWEEN (0.35757338590512056) AND (v0.c0)) THEN v0.c0 COLLATE RTRIM WHEN ((v0.c0) NOTNULL) THEN (((v0.c0))<>((1.180643054E9))) WHEN (((v0.c0, v0.c0, x'', v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))) THEN ((v0.c0)IS(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) AS BLOB)  NULLS FIRST, (((UPPER(DISTINCT v0.c0)))<>((CASE WHEN v0.c0 THEN v0.c0 END))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE '648298335'  WHEN ((v0.c0) NOT BETWEEN (0.35757338590512056) AND (v0.c0)) THEN v0.c0 COLLATE RTRIM WHEN ((v0.c0) NOTNULL) THEN (((v0.c0))<>((1.180643054E9))) WHEN (((v0.c0, v0.c0, x'', v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))) THEN ((v0.c0)IS(v0.c0)) END) ORDER BY CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) AS BLOB)  NULLS FIRST, (((UPPER(DISTINCT v0.c0)))<>((CASE WHEN v0.c0 THEN v0.c0 END))) DESC  NULLS FIRST;
SELECT * FROM v0 WHERE ((((- (v0.c0))) BETWEEN (((v0.c0)|(v0.c0))) AND (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0))) BETWEEN (((v0.c0)|(v0.c0))) AND (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((- (v0.c0))) BETWEEN (((v0.c0)|(v0.c0))) AND (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0))) BETWEEN (((v0.c0)|(v0.c0))) AND (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((- (v0.c0))) BETWEEN (((v0.c0)|(v0.c0))) AND (v0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0 WHERE (((('CTYD' IN ()))>=((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((('CTYD' IN ()))>=((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((('CTYD' IN ()))>=((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((('CTYD' IN ()))>=((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((('CTYD' IN ()))>=((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))!=(NULL COLLATE RTRIM))) ORDER BY (((vt0.c0)GLOB(vt0.c0)) IN ()) DESC  NULLS FIRST, ((((CAST(vt0.c0 AS REAL))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((((vt0.c0)AND(vt0.c0)))AND(x''))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER))!=(NULL COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)GLOB(vt0.c0)) IN ()) DESC  NULLS FIRST, ((((CAST(vt0.c0 AS REAL))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((((vt0.c0)AND(vt0.c0)))AND(x'')))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))!=(NULL COLLATE RTRIM))) ORDER BY (((vt0.c0)GLOB(vt0.c0)) IN ()) DESC  NULLS FIRST, ((((CAST(vt0.c0 AS REAL))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((((vt0.c0)AND(vt0.c0)))AND(x''))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER))!=(NULL COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)GLOB(vt0.c0)) IN ()) DESC  NULLS FIRST, ((((CAST(vt0.c0 AS REAL))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((((vt0.c0)AND(vt0.c0)))AND(x'')))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))!=(NULL COLLATE RTRIM))) ORDER BY (((vt0.c0)GLOB(vt0.c0)) IN ()) DESC  NULLS FIRST, ((((CAST(vt0.c0 AS REAL))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((((vt0.c0)AND(vt0.c0)))AND(x''))));
SELECT COUNT(*) FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(('-142002962' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(('-142002962' IN ())))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(('-142002962' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(('-142002962' IN ())))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(('-142002962' IN ()))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, 738690551, v0.c0)) AND ((v0.c0, vt0.c0, v0.c0)))))<((x'5bbf')))) ORDER BY ((NULL) BETWEEN ((~ (v0.c0))) AND (CAST(v0.c0 AS TEXT)))  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((((v0.c0)OR(vt0.c0)))) AND ((vt0.c0 COLLATE NOCASE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, 738690551, v0.c0)) AND ((v0.c0, vt0.c0, v0.c0)))))<((x'5bbf')))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((NULL) BETWEEN ((~ (v0.c0))) AND (CAST(v0.c0 AS TEXT)))  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((((v0.c0)OR(vt0.c0)))) AND ((vt0.c0 COLLATE NOCASE))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, 738690551, v0.c0)) AND ((v0.c0, vt0.c0, v0.c0)))))<((x'5bbf')))) ORDER BY ((NULL) BETWEEN ((~ (v0.c0))) AND (CAST(v0.c0 AS TEXT)))  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((((v0.c0)OR(vt0.c0)))) AND ((vt0.c0 COLLATE NOCASE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, 738690551, v0.c0)) AND ((v0.c0, vt0.c0, v0.c0)))))<((x'5bbf')))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((NULL) BETWEEN ((~ (v0.c0))) AND (CAST(v0.c0 AS TEXT)))  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((((v0.c0)OR(vt0.c0)))) AND ((vt0.c0 COLLATE NOCASE))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, 738690551, v0.c0)) AND ((v0.c0, vt0.c0, v0.c0)))))<((x'5bbf')))) ORDER BY ((NULL) BETWEEN ((~ (v0.c0))) AND (CAST(v0.c0 AS TEXT)))  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((((v0.c0)OR(vt0.c0)))) AND ((vt0.c0 COLLATE NOCASE))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN ')M嗎J5[C2' THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN ')M嗎J5[C2' THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN ')M嗎J5[C2' THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN ')M嗎J5[C2' THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN ')M嗎J5[C2' THEN vt0.c0 END)));
SELECT * FROM v0 WHERE (NULL) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 ORDER BY x'' ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (NULL) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 ORDER BY x'' ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (NULL) ORDER BY x'' ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((NULL) NOTNULL))) AND ((((((vt0.c0)AND(vt0.c0)))OR(x'')))))) ORDER BY ((vt0.c0 IN ()) IN ()) DESC  NULLS LAST, (NOT ((((vt0.c0))<=((vt0.c0))))), (((~ (vt0.c0))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((NULL) NOTNULL))) AND ((((((vt0.c0)AND(vt0.c0)))OR(x'')))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN ()) IN ()) DESC  NULLS LAST, (NOT ((((vt0.c0))<=((vt0.c0))))), (((~ (vt0.c0))) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((NULL) NOTNULL))) AND ((((((vt0.c0)AND(vt0.c0)))OR(x'')))))) ORDER BY ((vt0.c0 IN ()) IN ()) DESC  NULLS LAST, (NOT ((((vt0.c0))<=((vt0.c0))))), (((~ (vt0.c0))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((NULL) NOTNULL))) AND ((((((vt0.c0)AND(vt0.c0)))OR(x'')))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN ()) IN ()) DESC  NULLS LAST, (NOT ((((vt0.c0))<=((vt0.c0))))), (((~ (vt0.c0))) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((NULL) NOTNULL))) AND ((((((vt0.c0)AND(vt0.c0)))OR(x'')))))) ORDER BY ((vt0.c0 IN ()) IN ()) DESC  NULLS LAST, (NOT ((((vt0.c0))<=((vt0.c0))))), (((~ (vt0.c0))) NOTNULL) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)LIKE(vt0.c0)))OR(vt0.c0)))AND(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)LIKE(vt0.c0)))OR(vt0.c0)))AND(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)LIKE(vt0.c0)))OR(vt0.c0)))AND(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)LIKE(vt0.c0)))OR(vt0.c0)))AND(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)LIKE(vt0.c0)))OR(vt0.c0)))AND(CAST(vt0.c0 AS BLOB))));
SELECT ALL * FROM v0 WHERE (((v0.c0) NOT BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((v0.c0)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((v0.c0)*(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0) NOT BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((v0.c0)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((v0.c0)*(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0) NOT BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((v0.c0)*(v0.c0)))));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN '884119317' WHEN vt0.c0 THEN vt0.c0 END)) AND ((CASE vt0.c0  WHEN '1156654806' THEN NULL ELSE v0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN '884119317' WHEN vt0.c0 THEN vt0.c0 END)) AND ((CASE vt0.c0  WHEN '1156654806' THEN NULL ELSE v0.c0 END)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN '884119317' WHEN vt0.c0 THEN vt0.c0 END)) AND ((CASE vt0.c0  WHEN '1156654806' THEN NULL ELSE v0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN '884119317' WHEN vt0.c0 THEN vt0.c0 END)) AND ((CASE vt0.c0  WHEN '1156654806' THEN NULL ELSE v0.c0 END)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN '884119317' WHEN vt0.c0 THEN vt0.c0 END)) AND ((CASE vt0.c0  WHEN '1156654806' THEN NULL ELSE v0.c0 END))));
SELECT * FROM v0 WHERE (((v0.c0 IN ()) IN ())) ORDER BY ((((((v0.c0)OR(v0.c0)))OR(v0.c0))) ISNULL) DESC, (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))AND(((NULL)%(v0.c0)))))AND(((0.007249318636322388) NOT BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST, CAST(v0.c0 COLLATE RTRIM AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)OR(v0.c0)))OR(v0.c0))) ISNULL) DESC, (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))AND(((NULL)%(v0.c0)))))AND(((0.007249318636322388) NOT BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST, CAST(v0.c0 COLLATE RTRIM AS BLOB)  NULLS LAST);
SELECT * FROM v0 WHERE (((v0.c0 IN ()) IN ())) ORDER BY ((((((v0.c0)OR(v0.c0)))OR(v0.c0))) ISNULL) DESC, (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))AND(((NULL)%(v0.c0)))))AND(((0.007249318636322388) NOT BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST, CAST(v0.c0 COLLATE RTRIM AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)OR(v0.c0)))OR(v0.c0))) ISNULL) DESC, (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))AND(((NULL)%(v0.c0)))))AND(((0.007249318636322388) NOT BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST, CAST(v0.c0 COLLATE RTRIM AS BLOB)  NULLS LAST);
SELECT * FROM v0 WHERE (((v0.c0 IN ()) IN ())) ORDER BY ((((((v0.c0)OR(v0.c0)))OR(v0.c0))) ISNULL) DESC, (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))AND(((NULL)%(v0.c0)))))AND(((0.007249318636322388) NOT BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST, CAST(v0.c0 COLLATE RTRIM AS BLOB)  NULLS LAST;
SELECT * FROM vt0 INNER JOIN v0 ON (~ (((v0.c0) IS FALSE))) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (~ (((v0.c0) IS FALSE))));
SELECT * FROM vt0 INNER JOIN v0 ON (~ (((v0.c0) IS FALSE))) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (~ (((v0.c0) IS FALSE))));
SELECT * FROM vt0 INNER JOIN v0 ON (~ (((v0.c0) IS FALSE))) WHERE (v0.c0);
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON (v0.c0 COLLATE BINARY IN ()) WHERE (((CAST(vt0.c0 AS INTEGER))<>((vt0.c0 IN (-233498472, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))<>((vt0.c0 IN (-233498472, vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (v0.c0 COLLATE BINARY IN ()));
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON (v0.c0 COLLATE BINARY IN ()) WHERE (((CAST(vt0.c0 AS INTEGER))<>((vt0.c0 IN (-233498472, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))<>((vt0.c0 IN (-233498472, vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (v0.c0 COLLATE BINARY IN ()));
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON (v0.c0 COLLATE BINARY IN ()) WHERE (((CAST(vt0.c0 AS INTEGER))<>((vt0.c0 IN (-233498472, vt0.c0)))));
SELECT * FROM vt0 INNER JOIN v0 ON ((((CASE WHEN vt0.c0 THEN v0.c0 ELSE '' END)AND(v0.c0)))AND((v0.c0 IN ()))) WHERE (((((vt0.c0)|(vt0.c0)))>>(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)|(vt0.c0)))>>(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((CASE WHEN vt0.c0 THEN v0.c0 ELSE '' END)AND(v0.c0)))AND((v0.c0 IN ()))));
SELECT * FROM vt0 INNER JOIN v0 ON ((((CASE WHEN vt0.c0 THEN v0.c0 ELSE '' END)AND(v0.c0)))AND((v0.c0 IN ()))) WHERE (((((vt0.c0)|(vt0.c0)))>>(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)|(vt0.c0)))>>(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((CASE WHEN vt0.c0 THEN v0.c0 ELSE '' END)AND(v0.c0)))AND((v0.c0 IN ()))));
SELECT * FROM vt0 INNER JOIN v0 ON ((((CASE WHEN vt0.c0 THEN v0.c0 ELSE '' END)AND(v0.c0)))AND((v0.c0 IN ()))) WHERE (((((vt0.c0)|(vt0.c0)))>>(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (CAST((vt0.c0 IN (v0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN (v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (CAST((vt0.c0 IN (v0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN (v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (CAST((vt0.c0 IN (v0.c0)) AS TEXT));
SELECT ALL * FROM vt0, v0 WHERE (v0.c0) ORDER BY (((((((((((v0.c0)AND(-1.42002962E8)))AND(vt0.c0)))AND('-1315637543')))AND(v0.c0))))<=(((~ (x'')))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((((((((v0.c0)AND(-1.42002962E8)))AND(vt0.c0)))AND('-1315637543')))AND(v0.c0))))<=(((~ (x''))))));
SELECT ALL * FROM vt0, v0 WHERE (v0.c0) ORDER BY (((((((((((v0.c0)AND(-1.42002962E8)))AND(vt0.c0)))AND('-1315637543')))AND(v0.c0))))<=(((~ (x'')))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((((((((v0.c0)AND(-1.42002962E8)))AND(vt0.c0)))AND('-1315637543')))AND(v0.c0))))<=(((~ (x''))))));
SELECT ALL * FROM vt0, v0 WHERE (v0.c0) ORDER BY (((((((((((v0.c0)AND(-1.42002962E8)))AND(vt0.c0)))AND('-1315637543')))AND(v0.c0))))<=(((~ (x'')))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON ((v0.c0 COLLATE RTRIM)-(vt0.c0 COLLATE NOCASE)) WHERE (((vt0.c0 COLLATE RTRIM)<=(vt0.c0 COLLATE BINARY))) ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN (NOT (v0.c0)) WHEN '796087758' THEN (((v0.c0, v0.c0, vt0.c0))!=((v0.c0, vt0.c0, vt0.c0))) WHEN v0.c0 COLLATE BINARY THEN (v0.c0 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)<=(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((v0.c0 COLLATE RTRIM)-(vt0.c0 COLLATE NOCASE)) ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN (NOT (v0.c0)) WHEN '796087758' THEN (((v0.c0, v0.c0, vt0.c0))<>((v0.c0, vt0.c0, vt0.c0))) WHEN v0.c0 COLLATE BINARY THEN (v0.c0 IN ()) END ASC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON ((v0.c0 COLLATE RTRIM)-(vt0.c0 COLLATE NOCASE)) WHERE (((vt0.c0 COLLATE RTRIM)<=(vt0.c0 COLLATE BINARY))) ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN (NOT (v0.c0)) WHEN '796087758' THEN (((v0.c0, v0.c0, vt0.c0))!=((v0.c0, vt0.c0, vt0.c0))) WHEN v0.c0 COLLATE BINARY THEN (v0.c0 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)<=(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((v0.c0 COLLATE RTRIM)-(vt0.c0 COLLATE NOCASE)) ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN (NOT (v0.c0)) WHEN '796087758' THEN (((v0.c0, v0.c0, vt0.c0))<>((v0.c0, vt0.c0, vt0.c0))) WHEN v0.c0 COLLATE BINARY THEN (v0.c0 IN ()) END ASC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON ((v0.c0 COLLATE RTRIM)-(vt0.c0 COLLATE NOCASE)) WHERE (((vt0.c0 COLLATE RTRIM)<=(vt0.c0 COLLATE BINARY))) ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN (NOT (v0.c0)) WHEN '796087758' THEN (((v0.c0, v0.c0, vt0.c0))!=((v0.c0, vt0.c0, vt0.c0))) WHEN v0.c0 COLLATE BINARY THEN (v0.c0 IN ()) END ASC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((NULL IN (v0.c0)))<(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))) ORDER BY CAST((vt0.c0 IN (v0.c0, v0.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL IN (v0.c0)))<(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST((vt0.c0 IN (v0.c0, v0.c0)) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((NULL IN (v0.c0)))<(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))) ORDER BY CAST((vt0.c0 IN (v0.c0, v0.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL IN (v0.c0)))<(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST((vt0.c0 IN (v0.c0, v0.c0)) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((NULL IN (v0.c0)))<(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))) ORDER BY CAST((vt0.c0 IN (v0.c0, v0.c0)) AS REAL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)%(v0.c0))))>=(((~ (v0.c0)))))) ORDER BY rtreenode(v0.c0, ((v0.c0) NOTNULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)%(v0.c0))))>=(((~ (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY rtreenode(v0.c0, ((v0.c0) NOTNULL)) DESC);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)%(v0.c0))))>=(((~ (v0.c0)))))) ORDER BY rtreenode(v0.c0, ((v0.c0) NOTNULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)%(v0.c0))))>=(((~ (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY rtreenode(v0.c0, ((v0.c0) NOTNULL)) DESC);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)%(v0.c0))))>=(((~ (v0.c0)))))) ORDER BY rtreenode(v0.c0, ((v0.c0) NOTNULL)) DESC;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) ISNULL))>=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))>=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) ISNULL))>=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))>=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) ISNULL))>=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c0)) BETWEEN ((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END)) AND (((NOT (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END)) AND (((NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c0)) BETWEEN ((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END)) AND (((NOT (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END)) AND (((NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c0)) BETWEEN ((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END)) AND (((NOT (vt0.c0))))));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((CASE WHEN v0.c0 THEN vt0.c0 END)+(v0.c0)) WHERE ((vt0.c0 COLLATE BINARY IN (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE BINARY IN (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((CASE WHEN v0.c0 THEN vt0.c0 END)+(v0.c0)));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((CASE WHEN v0.c0 THEN vt0.c0 END)+(v0.c0)) WHERE ((vt0.c0 COLLATE BINARY IN (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE BINARY IN (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((CASE WHEN v0.c0 THEN vt0.c0 END)+(v0.c0)));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((CASE WHEN v0.c0 THEN vt0.c0 END)+(v0.c0)) WHERE ((vt0.c0 COLLATE BINARY IN (((vt0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, v0 WHERE (vt0.c0) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY NULL DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, v0 WHERE (vt0.c0) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY NULL DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, v0 WHERE (vt0.c0) ORDER BY NULL DESC  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE (NULL) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0 DESC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (NULL) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0 DESC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (NULL) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((- (vt0.c0))))) ORDER BY ((((((((vt0.c0)AND((('648298335')|(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)))OR(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)), (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.c0) IS FALSE), vt0.c0, CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)AND((('648298335')|(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)))OR(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)), (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.c0) IS FALSE), vt0.c0, CAST(vt0.c0 AS INTEGER)))));
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((- (vt0.c0))))) ORDER BY ((((((((vt0.c0)AND((('648298335')|(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)))OR(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)), (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.c0) IS FALSE), vt0.c0, CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)AND((('648298335')|(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)))OR(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)), (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.c0) IS FALSE), vt0.c0, CAST(vt0.c0 AS INTEGER)))));
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((- (vt0.c0))))) ORDER BY ((((((((vt0.c0)AND((('648298335')|(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)))OR(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)), (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.c0) IS FALSE), vt0.c0, CAST(vt0.c0 AS INTEGER))));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (~ (((vt0.c0)IS NOT(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0)IS NOT(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (~ (((vt0.c0)IS NOT(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0)IS NOT(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (~ (((vt0.c0)IS NOT(vt0.c0)))) DESC;
SELECT ALL * FROM vt0 WHERE (UNLIKELY(DISTINCT 0.39269390650463976));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT 0.39269390650463976)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (UNLIKELY(DISTINCT 0.39269390650463976));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT 0.39269390650463976)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (UNLIKELY(DISTINCT 0.39269390650463976));
SELECT * FROM vt0 WHERE (((((vt0.c0)<=(vt0.c0)))OR(((vt0.c0) IS TRUE)))) ORDER BY ((((vt0.c0)*(vt0.c0))) NOTNULL) ASC, (CAST(vt0.c0 AS NUMERIC) IN ());
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=(vt0.c0)))OR(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)*(vt0.c0))) NOTNULL) ASC, (CAST(vt0.c0 AS NUMERIC) IN ()));
SELECT * FROM vt0 WHERE (((((vt0.c0)<=(vt0.c0)))OR(((vt0.c0) IS TRUE)))) ORDER BY ((((vt0.c0)*(vt0.c0))) NOTNULL) ASC, (CAST(vt0.c0 AS NUMERIC) IN ());
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=(vt0.c0)))OR(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)*(vt0.c0))) NOTNULL) ASC, (CAST(vt0.c0 AS NUMERIC) IN ()));
SELECT * FROM vt0 WHERE (((((vt0.c0)<=(vt0.c0)))OR(((vt0.c0) IS TRUE)))) ORDER BY ((((vt0.c0)*(vt0.c0))) NOTNULL) ASC, (CAST(vt0.c0 AS NUMERIC) IN ());
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON vt0.c0 WHERE (x'') ORDER BY (((x'')<(v0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 INNER JOIN v0 ON vt0.c0 ORDER BY (((x'')<(v0.c0)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON vt0.c0 WHERE (x'') ORDER BY (((x'')<(v0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 INNER JOIN v0 ON vt0.c0 ORDER BY (((x'')<(v0.c0)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON vt0.c0 WHERE (x'') ORDER BY (((x'')<(v0.c0)) IN ())  NULLS LAST;
SELECT * FROM vt0, v0 WHERE (((vt0.c0 COLLATE RTRIM)&(vt0.c0 COLLATE BINARY))) ORDER BY '', (((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN -2020794527 THEN v0.c0 WHEN v0.c0 THEN '917012619' WHEN vt0.c0 THEN v0.c0 END, CAST(v0.c0 AS TEXT), (~ (v0.c0)))) AND (('-32580673', CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, (((1.156654806E9, vt0.c0, '-1060361528')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((x'', v0.c0, v0.c0))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)&(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0 ORDER BY '', (((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN -2020794527 THEN v0.c0 WHEN v0.c0 THEN '917012619' WHEN vt0.c0 THEN v0.c0 END, CAST(v0.c0 AS TEXT), (~ (v0.c0)))) AND (('-32580673', CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, (((1.156654806E9, vt0.c0, '-1060361528')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((x'', v0.c0, v0.c0))))))  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (((vt0.c0 COLLATE RTRIM)&(vt0.c0 COLLATE BINARY))) ORDER BY '', (((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN -2020794527 THEN v0.c0 WHEN v0.c0 THEN '917012619' WHEN vt0.c0 THEN v0.c0 END, CAST(v0.c0 AS TEXT), (~ (v0.c0)))) AND (('-32580673', CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, (((1.156654806E9, vt0.c0, '-1060361528')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((x'', v0.c0, v0.c0))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)&(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0 ORDER BY '', (((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN -2020794527 THEN v0.c0 WHEN v0.c0 THEN '917012619' WHEN vt0.c0 THEN v0.c0 END, CAST(v0.c0 AS TEXT), (~ (v0.c0)))) AND (('-32580673', CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, (((1.156654806E9, vt0.c0, '-1060361528')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((x'', v0.c0, v0.c0))))))  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (((vt0.c0 COLLATE RTRIM)&(vt0.c0 COLLATE BINARY))) ORDER BY '', (((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN -2020794527 THEN v0.c0 WHEN v0.c0 THEN '917012619' WHEN vt0.c0 THEN v0.c0 END, CAST(v0.c0 AS TEXT), (~ (v0.c0)))) AND (('-32580673', CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, (((1.156654806E9, vt0.c0, '-1060361528')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((x'', v0.c0, v0.c0))))))  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0) IS FALSE)) NOT BETWEEN (((v0.c0)OR(vt0.c0))) AND (x''))) ORDER BY (((CAST(v0.c0 AS BLOB)))<(((vt0.c0 IN ()))))  NULLS FIRST, UNLIKELY(vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) NOT BETWEEN (((v0.c0)OR(vt0.c0))) AND (x''))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((CAST(v0.c0 AS BLOB)))<(((vt0.c0 IN ()))))  NULLS FIRST, UNLIKELY(vt0.c0 COLLATE RTRIM));
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0) IS FALSE)) NOT BETWEEN (((v0.c0)OR(vt0.c0))) AND (x''))) ORDER BY (((CAST(v0.c0 AS BLOB)))<(((vt0.c0 IN ()))))  NULLS FIRST, UNLIKELY(vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) NOT BETWEEN (((v0.c0)OR(vt0.c0))) AND (x''))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((CAST(v0.c0 AS BLOB)))<(((vt0.c0 IN ()))))  NULLS FIRST, UNLIKELY(vt0.c0 COLLATE RTRIM));
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0) IS FALSE)) NOT BETWEEN (((v0.c0)OR(vt0.c0))) AND (x''))) ORDER BY (((CAST(v0.c0 AS BLOB)))<(((vt0.c0 IN ()))))  NULLS FIRST, UNLIKELY(vt0.c0 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN (((v0.c0 IN (v0.c0)))) AND (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) ORDER BY (v0.c0 IN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), v0.c0 COLLATE RTRIM)), (((v0.c0)) BETWEEN ((((v0.c0) IS TRUE))) AND ((((((v0.c0)AND(v0.c0)))OR(v0.c0)))))  NULLS LAST, (NULL IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN (((v0.c0 IN (v0.c0)))) AND (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 IN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), v0.c0 COLLATE RTRIM)), (((v0.c0)) BETWEEN ((((v0.c0) IS TRUE))) AND ((((((v0.c0)AND(v0.c0)))OR(v0.c0)))))  NULLS LAST, (NULL IN ()) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN (((v0.c0 IN (v0.c0)))) AND (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) ORDER BY (v0.c0 IN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), v0.c0 COLLATE RTRIM)), (((v0.c0)) BETWEEN ((((v0.c0) IS TRUE))) AND ((((((v0.c0)AND(v0.c0)))OR(v0.c0)))))  NULLS LAST, (NULL IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN (((v0.c0 IN (v0.c0)))) AND (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 IN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), v0.c0 COLLATE RTRIM)), (((v0.c0)) BETWEEN ((((v0.c0) IS TRUE))) AND ((((((v0.c0)AND(v0.c0)))OR(v0.c0)))))  NULLS LAST, (NULL IN ()) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN (((v0.c0 IN (v0.c0)))) AND (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) ORDER BY (v0.c0 IN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), v0.c0 COLLATE RTRIM)), (((v0.c0)) BETWEEN ((((v0.c0) IS TRUE))) AND ((((((v0.c0)AND(v0.c0)))OR(v0.c0)))))  NULLS LAST, (NULL IN ()) DESC;
SELECT ALL * FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (NULL);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((v0.c0, v0.c0, vt0.c0))>=((v0.c0, v0.c0, vt0.c0))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, v0.c0, vt0.c0))>=((v0.c0, v0.c0, vt0.c0))))AND(vt0.c0))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((v0.c0, v0.c0, vt0.c0))>=((v0.c0, v0.c0, vt0.c0))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, v0.c0, vt0.c0))>=((v0.c0, v0.c0, vt0.c0))))AND(vt0.c0))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((v0.c0, v0.c0, vt0.c0))>=((v0.c0, v0.c0, vt0.c0))))AND(vt0.c0)));
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((v0.c0)LIKE(v0.c0)), x'5877a6bb'))>((v0.c0 COLLATE RTRIM, ((v0.c0) IS FALSE), (('.-i	!\r?\')!=(v0.c0)))))) ORDER BY ((UNLIKELY(x'c738'))==(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((v0.c0)LIKE(v0.c0)), x'5877a6bb'))>((v0.c0 COLLATE RTRIM, ((v0.c0) IS FALSE), (('.-i	!\r?\')!=(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((UNLIKELY(x'c738'))=(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((v0.c0)LIKE(v0.c0)), x'5877a6bb'))>((v0.c0 COLLATE RTRIM, ((v0.c0) IS FALSE), (('.-i	!\r?\')!=(v0.c0)))))) ORDER BY ((UNLIKELY(x'c738'))==(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((v0.c0)LIKE(v0.c0)), x'5877a6bb'))>((v0.c0 COLLATE RTRIM, ((v0.c0) IS FALSE), (('.-i	!\r?\')!=(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((UNLIKELY(x'c738'))=(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((v0.c0)LIKE(v0.c0)), x'5877a6bb'))>((v0.c0 COLLATE RTRIM, ((v0.c0) IS FALSE), (('.-i	!\r?\')!=(v0.c0)))))) ORDER BY ((UNLIKELY(x'c738'))==(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))));
SELECT * FROM v0 WHERE ((((NULL)LIKE(v0.c0)) IN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)LIKE(v0.c0)) IN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((NULL)LIKE(v0.c0)) IN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)LIKE(v0.c0)) IN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((NULL)LIKE(v0.c0)) IN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT ALL * FROM v0, vt0 WHERE (((((((((((((((v0.c0)AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))*(v0.c0))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))) AND (vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((v0.c0)AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))*(v0.c0))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))) AND (vt0.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (((((((((((((((v0.c0)AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))*(v0.c0))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))) AND (vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((v0.c0)AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))*(v0.c0))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))) AND (vt0.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (((((((((((((((v0.c0)AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))*(v0.c0))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))) AND (vt0.c0)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM v0 WHERE (((TIME(NULL, 0.05914910347311797, v0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((TIME(NULL, 0.05914910347311797, v0.c0)) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((TIME(NULL, 0.05914910347311797, v0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((TIME(NULL, 0.05914910347311797, v0.c0)) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((TIME(NULL, 0.05914910347311797, v0.c0)) IS TRUE));
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((0.47097444454479076))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((0.47097444454479076)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((0.47097444454479076))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((0.47097444454479076)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((0.47097444454479076))));
SELECT ALL * FROM vt0, v0 WHERE (((vt0.c0)IS(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((vt0.c0)IS(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((vt0.c0)IS(CAST(vt0.c0 AS NUMERIC))));
SELECT ALL * FROM vt0 WHERE ('246614078') ORDER BY (- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('246614078') IS TRUE)  as count FROM vt0 ORDER BY (- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ('246614078') ORDER BY (- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('246614078') IS TRUE)  as count FROM vt0 ORDER BY (- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ('246614078') ORDER BY (- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL))) AND (vt0.c0 COLLATE RTRIM))) ORDER BY (~ (vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL))) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0)) DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL))) AND (vt0.c0 COLLATE RTRIM))) ORDER BY (~ (vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL))) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0)) DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL))) AND (vt0.c0 COLLATE RTRIM))) ORDER BY (~ (vt0.c0)) DESC;
SELECT COUNT(*) FROM v0 WHERE (CAST((~ (v0.c0)) AS NUMERIC)) ORDER BY NULLIF(v0.c0 COLLATE NOCASE, LIKELIHOOD(v0.c0, 0.13650291125833214)), (((~ (v0.c0)))<((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0)))))  NULLS FIRST, CASE ((v0.c0)>>(v0.c0))  WHEN ((v0.c0)IS(v0.c0)) THEN CAST(v0.c0 AS TEXT) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY NULLIF(v0.c0 COLLATE NOCASE, LIKELIHOOD(v0.c0, 0.13650291125833214)), (((~ (v0.c0)))<((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0)))))  NULLS FIRST, CASE ((v0.c0)>>(v0.c0))  WHEN ((v0.c0)IS(v0.c0)) THEN CAST(v0.c0 AS TEXT) END DESC);
SELECT COUNT(*) FROM v0 WHERE (CAST((~ (v0.c0)) AS NUMERIC)) ORDER BY NULLIF(v0.c0 COLLATE NOCASE, LIKELIHOOD(v0.c0, 0.13650291125833214)), (((~ (v0.c0)))<((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0)))))  NULLS FIRST, CASE ((v0.c0)>>(v0.c0))  WHEN ((v0.c0)IS(v0.c0)) THEN CAST(v0.c0 AS TEXT) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY NULLIF(v0.c0 COLLATE NOCASE, LIKELIHOOD(v0.c0, 0.13650291125833214)), (((~ (v0.c0)))<((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0)))))  NULLS FIRST, CASE ((v0.c0)>>(v0.c0))  WHEN ((v0.c0)IS(v0.c0)) THEN CAST(v0.c0 AS TEXT) END DESC);
SELECT COUNT(*) FROM v0 WHERE (CAST((~ (v0.c0)) AS NUMERIC)) ORDER BY NULLIF(v0.c0 COLLATE NOCASE, LIKELIHOOD(v0.c0, 0.13650291125833214)), (((~ (v0.c0)))<((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0)))))  NULLS FIRST, CASE ((v0.c0)>>(v0.c0))  WHEN ((v0.c0)IS(v0.c0)) THEN CAST(v0.c0 AS TEXT) END DESC;
SELECT ALL * FROM vt0, v0 WHERE (json_patch(((v0.c0) IS TRUE), (NOT (x'f20c7f45')))) ORDER BY ((((((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND('')))AND((+ (vt0.c0)))))OR(((v0.c0) NOTNULL))))OR((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(((v0.c0) IS TRUE), (NOT (x'f20c7f45')))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND('')))AND((+ (vt0.c0)))))OR(((v0.c0) NOTNULL))))OR((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) ASC);
SELECT ALL * FROM vt0, v0 WHERE (json_patch(((v0.c0) IS TRUE), (NOT (x'f20c7f45')))) ORDER BY ((((((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND('')))AND((+ (vt0.c0)))))OR(((v0.c0) NOTNULL))))OR((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(((v0.c0) IS TRUE), (NOT (x'f20c7f45')))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND('')))AND((+ (vt0.c0)))))OR(((v0.c0) NOTNULL))))OR((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) ASC);
SELECT ALL * FROM vt0, v0 WHERE (json_patch(((v0.c0) IS TRUE), (NOT (x'f20c7f45')))) ORDER BY ((((((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND('')))AND((+ (vt0.c0)))))OR(((v0.c0) NOTNULL))))OR((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) ASC;
SELECT * FROM v0 WHERE (((((v0.c0) NOTNULL)) IS TRUE)) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS FIRST);
SELECT * FROM v0 WHERE (((((v0.c0) NOTNULL)) IS TRUE)) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS FIRST);
SELECT * FROM v0 WHERE (((((v0.c0) NOTNULL)) IS TRUE)) ORDER BY v0.c0  NULLS FIRST;
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) IS FALSE));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(QUOTE(vt0.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(QUOTE(vt0.c0) AS REAL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(QUOTE(vt0.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(QUOTE(vt0.c0) AS REAL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(QUOTE(vt0.c0) AS REAL));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0))<((vt0.c0))), (vt0.c0 IN ()), 0xffffffff899921e2))!=((NULL, vt0.c0, x'')))) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0))<((vt0.c0))), (vt0.c0 IN ()), 0xffffffff899921e2))<>((NULL, vt0.c0, x'')))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0))<((vt0.c0))), (vt0.c0 IN ()), 0xffffffff899921e2))!=((NULL, vt0.c0, x'')))) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0))<((vt0.c0))), (vt0.c0 IN ()), 0xffffffff899921e2))<>((NULL, vt0.c0, x'')))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0))<((vt0.c0))), (vt0.c0 IN ()), 0xffffffff899921e2))!=((NULL, vt0.c0, x'')))) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM v0 WHERE (CAST((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))) AS REAL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))) AS REAL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))) AS REAL));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((v0.c0)+(v0.c0)))+((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN (('7o', x'', v0.c0)) AND ((v0.c0, vt0.c0, v0.c0))))) WHERE (((v0.c0)>>(vt0.c0)) COLLATE BINARY) ORDER BY vt0.c0 COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0)>>(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((v0.c0)+(v0.c0)))+((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN (('7o', x'', v0.c0)) AND ((v0.c0, vt0.c0, v0.c0))))) ORDER BY vt0.c0 COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((v0.c0)+(v0.c0)))+((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN (('7o', x'', v0.c0)) AND ((v0.c0, vt0.c0, v0.c0))))) WHERE (((v0.c0)>>(vt0.c0)) COLLATE BINARY) ORDER BY vt0.c0 COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0)>>(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((v0.c0)+(v0.c0)))+((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN (('7o', x'', v0.c0)) AND ((v0.c0, vt0.c0, v0.c0))))) ORDER BY vt0.c0 COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((v0.c0)+(v0.c0)))+((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN (('7o', x'', v0.c0)) AND ((v0.c0, vt0.c0, v0.c0))))) WHERE (((v0.c0)>>(vt0.c0)) COLLATE BINARY) ORDER BY vt0.c0 COLLATE RTRIM DESC;
SELECT ALL * FROM vt0 INNER JOIN v0 ON (HEX(0.9505494951301262) IN ()) WHERE (((((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))AND(CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END))) ORDER BY LIKE((NOT (x'ba7b')), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), '-') DESC, 1327295201 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))AND(CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (HEX(0.9505494951301262) IN ()) ORDER BY LIKE((NOT (x'ba7b')), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), '-') DESC, 1327295201 DESC  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN v0 ON (HEX(0.9505494951301262) IN ()) WHERE (((((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))AND(CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END))) ORDER BY LIKE((NOT (x'ba7b')), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), '-') DESC, 1327295201 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))AND(CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (HEX(0.9505494951301262) IN ()) ORDER BY LIKE((NOT (x'ba7b')), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), '-') DESC, 1327295201 DESC  NULLS FIRST);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (-675784138);
SELECT SUM(count) FROM (SELECT ((-675784138) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (-675784138);
SELECT SUM(count) FROM (SELECT ((-675784138) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (-675784138);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))==((vt0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))=((vt0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))==((vt0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))=((vt0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))==((vt0.c0)))) ISNULL));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ABS(DISTINCT (+ (vt0.c0))) WHERE (((v0.c0) NOT BETWEEN (CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND ((vt0.c0 IN (vt0.c0))))) ORDER BY (((vt0.c0) IS TRUE) IN (((v0.c0) ISNULL), (v0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ABS(DISTINCT (+ (vt0.c0))) ORDER BY (((vt0.c0) IS TRUE) IN (((v0.c0) ISNULL), (v0.c0 IN ()))) DESC  NULLS FIRST);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ABS(DISTINCT (+ (vt0.c0))) WHERE (((v0.c0) NOT BETWEEN (CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND ((vt0.c0 IN (vt0.c0))))) ORDER BY (((vt0.c0) IS TRUE) IN (((v0.c0) ISNULL), (v0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ABS(DISTINCT (+ (vt0.c0))) ORDER BY (((vt0.c0) IS TRUE) IN (((v0.c0) ISNULL), (v0.c0 IN ()))) DESC  NULLS FIRST);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ABS(DISTINCT (+ (vt0.c0))) WHERE (((v0.c0) NOT BETWEEN (CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND ((vt0.c0 IN (vt0.c0))))) ORDER BY (((vt0.c0) IS TRUE) IN (((v0.c0) ISNULL), (v0.c0 IN ()))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) BETWEEN (CAST(v0.c0 AS REAL)) AND ((- (v0.c0))))) ORDER BY ((((v0.c0) IS TRUE)) NOT BETWEEN ((v0.c0 IN ())) AND (((v0.c0) ISNULL))), (((v0.c0 IN ()))==(((0.6756542879676779) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) BETWEEN (CAST(v0.c0 AS REAL)) AND ((- (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) IS TRUE)) NOT BETWEEN ((v0.c0 IN ())) AND (((v0.c0) ISNULL))), (((v0.c0 IN ()))==(((0.6756542879676779) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) BETWEEN (CAST(v0.c0 AS REAL)) AND ((- (v0.c0))))) ORDER BY ((((v0.c0) IS TRUE)) NOT BETWEEN ((v0.c0 IN ())) AND (((v0.c0) ISNULL))), (((v0.c0 IN ()))==(((0.6756542879676779) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) BETWEEN (CAST(v0.c0 AS REAL)) AND ((- (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) IS TRUE)) NOT BETWEEN ((v0.c0 IN ())) AND (((v0.c0) ISNULL))), (((v0.c0 IN ()))==(((0.6756542879676779) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) BETWEEN (CAST(v0.c0 AS REAL)) AND ((- (v0.c0))))) ORDER BY ((((v0.c0) IS TRUE)) NOT BETWEEN ((v0.c0 IN ())) AND (((v0.c0) ISNULL))), (((v0.c0 IN ()))==(((0.6756542879676779) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CHANGES());
SELECT ALL * FROM v0 WHERE ((((x'')) NOT BETWEEN ((HEX(v0.c0))) AND ((((v0.c0) ISNULL))))) ORDER BY v0.c0 COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x'')) NOT BETWEEN ((HEX(v0.c0))) AND ((((v0.c0) ISNULL))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((x'')) NOT BETWEEN ((HEX(v0.c0))) AND ((((v0.c0) ISNULL))))) ORDER BY v0.c0 COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x'')) NOT BETWEEN ((HEX(v0.c0))) AND ((((v0.c0) ISNULL))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((x'')) NOT BETWEEN ((HEX(v0.c0))) AND ((((v0.c0) ISNULL))))) ORDER BY v0.c0 COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (0.7281009711539685) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.7281009711539685) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) IS FALSE) ASC);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (0.7281009711539685) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.7281009711539685) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) IS FALSE) ASC);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (0.7281009711539685) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) IS FALSE) ASC;
SELECT * FROM vt0 WHERE ((NOT (vt0.c0)) COLLATE BINARY) ORDER BY ((((vt0.c0) ISNULL)) NOT BETWEEN ((+ (vt0.c0))) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) ISNULL)) NOT BETWEEN ((+ (vt0.c0))) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((NOT (vt0.c0)) COLLATE BINARY) ORDER BY ((((vt0.c0) ISNULL)) NOT BETWEEN ((+ (vt0.c0))) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) ISNULL)) NOT BETWEEN ((+ (vt0.c0))) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((NOT (vt0.c0)) COLLATE BINARY) ORDER BY ((((vt0.c0) ISNULL)) NOT BETWEEN ((+ (vt0.c0))) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((((((vt0.c0) IS FALSE))AND(v0.c0)))AND(TRIM(v0.c0))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((v0.c0)>=(vt0.c0))))) ORDER BY 0X429d589d DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) IS FALSE))AND(v0.c0)))AND(TRIM(v0.c0))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((v0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY 0X429d589d DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((((((vt0.c0) IS FALSE))AND(v0.c0)))AND(TRIM(v0.c0))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((v0.c0)>=(vt0.c0))))) ORDER BY 0X429d589d DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) IS FALSE))AND(v0.c0)))AND(TRIM(v0.c0))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((v0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY 0X429d589d DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (0.13640546950006494);
SELECT SUM(count) FROM (SELECT ((0.13640546950006494) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.13640546950006494);
SELECT SUM(count) FROM (SELECT ((0.13640546950006494) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.13640546950006494);
SELECT ALL COUNT(*) FROM v0 WHERE (LIKE((v0.c0 IN ()), ((((v0.c0)OR(v0.c0)))AND(0.940972007712325)), '-'));
SELECT SUM(count) FROM (SELECT ALL ((LIKE((v0.c0 IN ()), ((((v0.c0)OR(v0.c0)))AND(0.940972007712325)), '-')) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LIKE((v0.c0 IN ()), ((((v0.c0)OR(v0.c0)))AND(0.940972007712325)), '-'));
SELECT SUM(count) FROM (SELECT ALL ((LIKE((v0.c0 IN ()), ((((v0.c0)OR(v0.c0)))AND(0.940972007712325)), '-')) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LIKE((v0.c0 IN ()), ((((v0.c0)OR(v0.c0)))AND(0.940972007712325)), '-'));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED CROSS JOIN vt0 ON 0.17745318628479545 WHERE (((((v0.c0) NOT NULL))&(CAST(v0.c0 AS REAL)))) ORDER BY (~ (CAST(v0.c0 AS BLOB))) ASC  NULLS LAST, CAST(x'f9f3' AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT NULL))&(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON 0.17745318628479545 ORDER BY (~ (CAST(v0.c0 AS BLOB))) ASC  NULLS LAST, CAST(x'f9f3' AS REAL));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED CROSS JOIN vt0 ON 0.17745318628479545 WHERE (((((v0.c0) NOT NULL))&(CAST(v0.c0 AS REAL)))) ORDER BY (~ (CAST(v0.c0 AS BLOB))) ASC  NULLS LAST, CAST(x'f9f3' AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT NULL))&(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON 0.17745318628479545 ORDER BY (~ (CAST(v0.c0 AS BLOB))) ASC  NULLS LAST, CAST(x'f9f3' AS REAL));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED CROSS JOIN vt0 ON 0.17745318628479545 WHERE (((((v0.c0) NOT NULL))&(CAST(v0.c0 AS REAL)))) ORDER BY (~ (CAST(v0.c0 AS BLOB))) ASC  NULLS LAST, CAST(x'f9f3' AS REAL);
SELECT COUNT(*) FROM vt0 WHERE (MIN(vt0.c0, vt0.c0, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) ORDER BY NULL, TOTAL_CHANGES() ASC;
SELECT SUM(count) FROM (SELECT ALL ((MIN(vt0.c0, vt0.c0, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY NULL, TOTAL_CHANGES() ASC);
SELECT COUNT(*) FROM vt0 WHERE (MIN(vt0.c0, vt0.c0, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) ORDER BY NULL, TOTAL_CHANGES() ASC;
SELECT SUM(count) FROM (SELECT ALL ((MIN(vt0.c0, vt0.c0, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY NULL, TOTAL_CHANGES() ASC);
SELECT COUNT(*) FROM vt0 WHERE (MIN(vt0.c0, vt0.c0, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) ORDER BY NULL, TOTAL_CHANGES() ASC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST((((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c0, vt0.c0, v0.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c0, vt0.c0, v0.c0))) AS TEXT)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST((((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c0, vt0.c0, v0.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c0, vt0.c0, v0.c0))) AS TEXT)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST((((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c0, vt0.c0, v0.c0))) AS TEXT));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CAST(0.6701705664536136 AS REAL)) BETWEEN (ABS(DISTINCT vt0.c0)) AND ((('.R')GLOB(v0.c0))))) ORDER BY (((0X3b2c560b))==((CAST(vt0.c0 AS BLOB)))), (~ ((v0.c0 IN (v0.c0, vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.6701705664536136 AS REAL)) BETWEEN (ABS(DISTINCT vt0.c0)) AND ((('.R')GLOB(v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((0x3b2c560b))=((CAST(vt0.c0 AS BLOB)))), (~ ((v0.c0 IN (v0.c0, vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CAST(0.6701705664536136 AS REAL)) BETWEEN (ABS(DISTINCT vt0.c0)) AND ((('.R')GLOB(v0.c0))))) ORDER BY (((0X3b2c560b))==((CAST(vt0.c0 AS BLOB)))), (~ ((v0.c0 IN (v0.c0, vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.6701705664536136 AS REAL)) BETWEEN (ABS(DISTINCT vt0.c0)) AND ((('.R')GLOB(v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((0x3b2c560b))=((CAST(vt0.c0 AS BLOB)))), (~ ((v0.c0 IN (v0.c0, vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CAST(0.6701705664536136 AS REAL)) BETWEEN (ABS(DISTINCT vt0.c0)) AND ((('.R')GLOB(v0.c0))))) ORDER BY (((0X3b2c560b))==((CAST(vt0.c0 AS BLOB)))), (~ ((v0.c0 IN (v0.c0, vt0.c0))))  NULLS FIRST;
SELECT * FROM v0 WHERE (((v0.c0 COLLATE BINARY)<=(CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((v0.c0) NOT NULL))%(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY)<=(CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT NULL))%(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE BINARY)<=(CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((v0.c0) NOT NULL))%(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY)<=(CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT NULL))%(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE BINARY)<=(CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((v0.c0) NOT NULL))%(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)LIKE(vt0.c0)) IN ())) ORDER BY (((((('') BETWEEN (v0.c0) AND (v0.c0)))OR(x'')))AND(CAST(v0.c0 AS BLOB))), ((CAST(v0.c0 AS REAL)) IS TRUE) ASC, (((CHANGES()))<>((HEX(DISTINCT vt0.c0))))  NULLS LAST, v0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)LIKE(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((('') BETWEEN (v0.c0) AND (v0.c0)))OR(x'')))AND(CAST(v0.c0 AS BLOB))), ((CAST(v0.c0 AS REAL)) IS TRUE) ASC, (((CHANGES()))!=((HEX(DISTINCT vt0.c0))))  NULLS LAST, v0.c0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)LIKE(vt0.c0)) IN ())) ORDER BY (((((('') BETWEEN (v0.c0) AND (v0.c0)))OR(x'')))AND(CAST(v0.c0 AS BLOB))), ((CAST(v0.c0 AS REAL)) IS TRUE) ASC, (((CHANGES()))<>((HEX(DISTINCT vt0.c0))))  NULLS LAST, v0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)LIKE(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((('') BETWEEN (v0.c0) AND (v0.c0)))OR(x'')))AND(CAST(v0.c0 AS BLOB))), ((CAST(v0.c0 AS REAL)) IS TRUE) ASC, (((CHANGES()))!=((HEX(DISTINCT vt0.c0))))  NULLS LAST, v0.c0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)LIKE(vt0.c0)) IN ())) ORDER BY (((((('') BETWEEN (v0.c0) AND (v0.c0)))OR(x'')))AND(CAST(v0.c0 AS BLOB))), ((CAST(v0.c0 AS REAL)) IS TRUE) ASC, (((CHANGES()))<>((HEX(DISTINCT vt0.c0))))  NULLS LAST, v0.c0;
SELECT ALL COUNT(*) FROM v0 WHERE (((((NULL)AND(v0.c0)))|((v0.c0 IN (0X4f1ceae1))))) ORDER BY CASE ((v0.c0) ISNULL)  WHEN '-965271732' THEN -1.182184659E9 COLLATE NOCASE ELSE v0.c0 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(v0.c0)))|((v0.c0 IN (0X4f1ceae1))))) IS TRUE)  as count FROM v0 ORDER BY CASE ((v0.c0) ISNULL)  WHEN '-965271732' THEN -1.182184659E9 COLLATE NOCASE ELSE v0.c0 END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((NULL)AND(v0.c0)))|((v0.c0 IN (0X4f1ceae1))))) ORDER BY CASE ((v0.c0) ISNULL)  WHEN '-965271732' THEN -1.182184659E9 COLLATE NOCASE ELSE v0.c0 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(v0.c0)))|((v0.c0 IN (0X4f1ceae1))))) IS TRUE)  as count FROM v0 ORDER BY CASE ((v0.c0) ISNULL)  WHEN '-965271732' THEN -1.182184659E9 COLLATE NOCASE ELSE v0.c0 END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((NULL)AND(v0.c0)))|((v0.c0 IN (0X4f1ceae1))))) ORDER BY CASE ((v0.c0) ISNULL)  WHEN '-965271732' THEN -1.182184659E9 COLLATE NOCASE ELSE v0.c0 END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((x'a472')>=(v0.c0)) THEN ((v0.c0) IS FALSE) END) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)LIKE(vt0.c0)))) AND (((((v0.c0))<>((vt0.c0))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((x'a472')>=(v0.c0)) THEN ((v0.c0) IS FALSE) END) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)LIKE(vt0.c0)))) AND (((((v0.c0))<>((vt0.c0))))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((x'a472')>=(v0.c0)) THEN ((v0.c0) IS FALSE) END) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)LIKE(vt0.c0)))) AND (((((v0.c0))<>((vt0.c0))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((x'a472')>=(v0.c0)) THEN ((v0.c0) IS FALSE) END) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)LIKE(vt0.c0)))) AND (((((v0.c0))<>((vt0.c0))))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((x'a472')>=(v0.c0)) THEN ((v0.c0) IS FALSE) END) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)LIKE(vt0.c0)))) AND (((((v0.c0))<>((vt0.c0))))))  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0) NOTNULL)) ISNULL)) ORDER BY (NOT (((v0.c0)<>(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL)) ISNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY (NOT (((v0.c0)!=(v0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0) NOTNULL)) ISNULL)) ORDER BY (NOT (((v0.c0)<>(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL)) ISNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY (NOT (((v0.c0)!=(v0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0) NOTNULL)) ISNULL)) ORDER BY (NOT (((v0.c0)<>(v0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((~ (vt0.c0)) IN (TRIM('1180643054', vt0.c0)))) ORDER BY (v0.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt0.c0)) IN (TRIM('1180643054', vt0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (v0.c0 IN ()));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((~ (vt0.c0)) IN (TRIM('1180643054', vt0.c0)))) ORDER BY (v0.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt0.c0)) IN (TRIM('1180643054', vt0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (v0.c0 IN ()));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((~ (vt0.c0)) IN (TRIM('1180643054', vt0.c0)))) ORDER BY (v0.c0 IN ());
SELECT COUNT(*) FROM v0 WHERE (CASE -1652375077  WHEN ((v0.c0)IS(v0.c0)) THEN ((v0.c0)IS(v0.c0)) ELSE (NOT (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE -1652375077  WHEN ((v0.c0)IS(v0.c0)) THEN ((v0.c0)IS(v0.c0)) ELSE (NOT (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE -1652375077  WHEN ((v0.c0)IS(v0.c0)) THEN ((v0.c0)IS(v0.c0)) ELSE (NOT (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE -1652375077  WHEN ((v0.c0)IS(v0.c0)) THEN ((v0.c0)IS(v0.c0)) ELSE (NOT (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE -1652375077  WHEN ((v0.c0)IS(v0.c0)) THEN ((v0.c0)IS(v0.c0)) ELSE (NOT (v0.c0)) END);
SELECT * FROM v0, vt0 WHERE (((vt0.c0) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0) NOTNULL)))) ORDER BY ((((vt0.c0) NOT NULL)) BETWEEN (((vt0.c0)&(vt0.c0))) AND ((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))) DESC  NULLS FIRST, (((((vt0.c0))!=((vt0.c0)))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0) NOT NULL)) BETWEEN (((vt0.c0)&(vt0.c0))) AND ((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))) DESC  NULLS FIRST, (((((vt0.c0))!=((vt0.c0)))) IS FALSE)  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((vt0.c0) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0) NOTNULL)))) ORDER BY ((((vt0.c0) NOT NULL)) BETWEEN (((vt0.c0)&(vt0.c0))) AND ((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))) DESC  NULLS FIRST, (((((vt0.c0))!=((vt0.c0)))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0) NOT NULL)) BETWEEN (((vt0.c0)&(vt0.c0))) AND ((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))) DESC  NULLS FIRST, (((((vt0.c0))!=((vt0.c0)))) IS FALSE)  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((vt0.c0) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0) NOTNULL)))) ORDER BY ((((vt0.c0) NOT NULL)) BETWEEN (((vt0.c0)&(vt0.c0))) AND ((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))) DESC  NULLS FIRST, (((((vt0.c0))!=((vt0.c0)))) IS FALSE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((vt0.c0 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((vt0.c0 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((vt0.c0 COLLATE NOCASE) IS TRUE));
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) BETWEEN ('') AND (v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) BETWEEN ('') AND (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) BETWEEN ('') AND (v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) BETWEEN ('') AND (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) BETWEEN ('') AND (v0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c0, vt0.c0, v0.c0)) BETWEEN (((vt0.c0 IN ()), v0.c0 COLLATE RTRIM, ((v0.c0)OR(vt0.c0)))) AND (('-1182184659', (('250737210') BETWEEN (v0.c0) AND (vt0.c0)), (((v0.c0))<((v0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, vt0.c0, v0.c0)) BETWEEN (((vt0.c0 IN ()), v0.c0 COLLATE RTRIM, ((v0.c0)OR(vt0.c0)))) AND (('-1182184659', (('250737210') BETWEEN (v0.c0) AND (vt0.c0)), (((v0.c0))<((v0.c0))))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c0, vt0.c0, v0.c0)) BETWEEN (((vt0.c0 IN ()), v0.c0 COLLATE RTRIM, ((v0.c0)OR(vt0.c0)))) AND (('-1182184659', (('250737210') BETWEEN (v0.c0) AND (vt0.c0)), (((v0.c0))<((v0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, vt0.c0, v0.c0)) BETWEEN (((vt0.c0 IN ()), v0.c0 COLLATE RTRIM, ((v0.c0)OR(vt0.c0)))) AND (('-1182184659', (('250737210') BETWEEN (v0.c0) AND (vt0.c0)), (((v0.c0))<((v0.c0))))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c0, vt0.c0, v0.c0)) BETWEEN (((vt0.c0 IN ()), v0.c0 COLLATE RTRIM, ((v0.c0)OR(vt0.c0)))) AND (('-1182184659', (('250737210') BETWEEN (v0.c0) AND (vt0.c0)), (((v0.c0))<((v0.c0)))))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (LIKELIHOOD(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))), 0.44126298573207756)) ORDER BY ((UNICODE('-1833873302'))&(v0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))), 0.44126298573207756)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((UNICODE('-1833873302'))&(v0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (LIKELIHOOD(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))), 0.44126298573207756)) ORDER BY ((UNICODE('-1833873302'))&(v0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))), 0.44126298573207756)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((UNICODE('-1833873302'))&(v0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (LIKELIHOOD(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))), 0.44126298573207756)) ORDER BY ((UNICODE('-1833873302'))&(v0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((vt0.c0)<(v0.c0)))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)))AND((((vt0.c0))>((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)<(v0.c0)))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)))AND((((vt0.c0))>((v0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((vt0.c0)<(v0.c0)))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)))AND((((vt0.c0))>((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)<(v0.c0)))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)))AND((((vt0.c0))>((v0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((vt0.c0)<(v0.c0)))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)))AND((((vt0.c0))>((v0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (vt0.c0)));
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON ((vt0.c0 COLLATE BINARY)GLOB(CASE WHEN vt0.c0 THEN v0.c0 END)) WHERE (((((vt0.c0) ISNULL)) IS TRUE)) ORDER BY ((v0.c0) NOT BETWEEN (NULL) AND (json_quote(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) IS TRUE)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((vt0.c0 COLLATE BINARY)GLOB(CASE WHEN vt0.c0 THEN v0.c0 END)) ORDER BY ((v0.c0) NOT BETWEEN (NULL) AND (json_quote(v0.c0))));
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON ((vt0.c0 COLLATE BINARY)GLOB(CASE WHEN vt0.c0 THEN v0.c0 END)) WHERE (((((vt0.c0) ISNULL)) IS TRUE)) ORDER BY ((v0.c0) NOT BETWEEN (NULL) AND (json_quote(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) IS TRUE)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((vt0.c0 COLLATE BINARY)GLOB(CASE WHEN vt0.c0 THEN v0.c0 END)) ORDER BY ((v0.c0) NOT BETWEEN (NULL) AND (json_quote(v0.c0))));
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON ((vt0.c0 COLLATE BINARY)GLOB(CASE WHEN vt0.c0 THEN v0.c0 END)) WHERE (((((vt0.c0) ISNULL)) IS TRUE)) ORDER BY ((v0.c0) NOT BETWEEN (NULL) AND (json_quote(v0.c0)));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((vt0.c0 COLLATE BINARY)+('')) WHERE (((CASE WHEN v0.c0 THEN x'f7eb' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((vt0.c0) IS TRUE)) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ORDER BY TRIM(((v0.c0) NOT NULL), ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN x'f7eb' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((vt0.c0) IS TRUE)) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((vt0.c0 COLLATE BINARY)+('')) ORDER BY TRIM(((v0.c0) NOT NULL), ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((vt0.c0 COLLATE BINARY)+('')) WHERE (((CASE WHEN v0.c0 THEN x'f7eb' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((vt0.c0) IS TRUE)) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ORDER BY TRIM(((v0.c0) NOT NULL), ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN x'f7eb' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((vt0.c0) IS TRUE)) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((vt0.c0 COLLATE BINARY)+('')) ORDER BY TRIM(((v0.c0) NOT NULL), ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((vt0.c0 COLLATE BINARY)+('')) WHERE (((CASE WHEN v0.c0 THEN x'f7eb' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((vt0.c0) IS TRUE)) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ORDER BY TRIM(((v0.c0) NOT NULL), ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((+ (vt0.c0))) NOTNULL)) ORDER BY (((((('648298335')OR(vt0.c0)))AND(v0.c0)))+(TRIM(vt0.c0, v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((('648298335')OR(vt0.c0)))AND(v0.c0)))+(TRIM(vt0.c0, v0.c0))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((+ (vt0.c0))) NOTNULL)) ORDER BY (((((('648298335')OR(vt0.c0)))AND(v0.c0)))+(TRIM(vt0.c0, v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((('648298335')OR(vt0.c0)))AND(v0.c0)))+(TRIM(vt0.c0, v0.c0))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((+ (vt0.c0))) NOTNULL)) ORDER BY (((((('648298335')OR(vt0.c0)))AND(v0.c0)))+(TRIM(vt0.c0, v0.c0)));
SELECT ALL * FROM v0 WHERE (CAST(v0.c0 AS NUMERIC)) ORDER BY '1608939130' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY '1608939130' DESC);
SELECT ALL * FROM v0 WHERE (CAST(v0.c0 AS NUMERIC)) ORDER BY '1608939130' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY '1608939130' DESC);
SELECT ALL * FROM v0 WHERE (CAST(v0.c0 AS NUMERIC)) ORDER BY '1608939130' DESC;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ('/g' IN ()) DESC, (NOT (0.7561766554805416));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ('/g' IN ()) DESC, (NOT (0.7561766554805416)));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ('/g' IN ()) DESC, (NOT (0.7561766554805416));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ('/g' IN ()) DESC, (NOT (0.7561766554805416)));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ('/g' IN ()) DESC, (NOT (0.7561766554805416));
SELECT ALL * FROM vt0, v0 WHERE ((- (CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((- (CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((- (CAST(v0.c0 AS NUMERIC))));
SELECT * FROM v0 WHERE (((((((v0.c0)>>(v0.c0)))AND(CAST(v0.c0 AS INTEGER))))OR(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))))) ORDER BY v0.c0, (((((v0.c0))<=((v0.c0)))) BETWEEN (((((v0.c0)OR(v0.c0)))AND('0.9296343796613556'))) AND ((v0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)>>(v0.c0)))AND(CAST(v0.c0 AS INTEGER))))OR(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0, (((((v0.c0))<=((v0.c0)))) BETWEEN (((((v0.c0)OR(v0.c0)))AND('0.9296343796613556'))) AND ((v0.c0 IN ()))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (((((((v0.c0)>>(v0.c0)))AND(CAST(v0.c0 AS INTEGER))))OR(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))))) ORDER BY v0.c0, (((((v0.c0))<=((v0.c0)))) BETWEEN (((((v0.c0)OR(v0.c0)))AND('0.9296343796613556'))) AND ((v0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)>>(v0.c0)))AND(CAST(v0.c0 AS INTEGER))))OR(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0, (((((v0.c0))<=((v0.c0)))) BETWEEN (((((v0.c0)OR(v0.c0)))AND('0.9296343796613556'))) AND ((v0.c0 IN ()))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (((((((v0.c0)>>(v0.c0)))AND(CAST(v0.c0 AS INTEGER))))OR(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))))) ORDER BY v0.c0, (((((v0.c0))<=((v0.c0)))) BETWEEN (((((v0.c0)OR(v0.c0)))AND('0.9296343796613556'))) AND ((v0.c0 IN ()))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOTNULL))%(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL))%(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOTNULL))%(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL))%(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOTNULL))%(v0.c0)));
SELECT ALL * FROM vt0 WHERE ((((((((((NOT (vt0.c0)))OR((vt0.c0 IN (vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))))OR(vt0.c0))) ORDER BY ((((CAST(vt0.c0 AS BLOB))AND(json_array_length(vt0.c0, vt0.c0))))AND((vt0.c0 IN ()))), CAST(((vt0.c0) IS TRUE) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((NOT (vt0.c0)))OR((vt0.c0 IN (vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))))OR(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c0 AS BLOB))AND(json_array_length(vt0.c0, vt0.c0))))AND((vt0.c0 IN ()))), CAST(((vt0.c0) IS TRUE) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((((((NOT (vt0.c0)))OR((vt0.c0 IN (vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))))OR(vt0.c0))) ORDER BY ((((CAST(vt0.c0 AS BLOB))AND(json_array_length(vt0.c0, vt0.c0))))AND((vt0.c0 IN ()))), CAST(((vt0.c0) IS TRUE) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((NOT (vt0.c0)))OR((vt0.c0 IN (vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))))OR(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c0 AS BLOB))AND(json_array_length(vt0.c0, vt0.c0))))AND((vt0.c0 IN ()))), CAST(((vt0.c0) IS TRUE) AS NUMERIC)  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (((((v0.c0) NOT NULL)) ISNULL)) ORDER BY CASE v0.c0 COLLATE BINARY  WHEN CAST(v0.c0 AS REAL) THEN vt0.c0 COLLATE RTRIM END, CASE (~ (v0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END THEN v0.c0 COLLATE NOCASE WHEN ((vt0.c0)<<(vt0.c0)) THEN 0.015255224424654212 WHEN ((v0.c0)&(NULL)) THEN ((v0.c0) BETWEEN ('P[2dX|G	') AND (v0.c0)) END ASC, (((((vt0.c0 IN ()))OR(((vt0.c0) NOT NULL))))AND((+ (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT NULL)) ISNULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE v0.c0 COLLATE BINARY  WHEN CAST(v0.c0 AS REAL) THEN vt0.c0 COLLATE RTRIM END, CASE (~ (v0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END THEN v0.c0 COLLATE NOCASE WHEN ((vt0.c0)<<(vt0.c0)) THEN 0.015255224424654212 WHEN ((v0.c0)&(NULL)) THEN ((v0.c0) BETWEEN ('P[2dX|G	') AND (v0.c0)) END ASC, (((((vt0.c0 IN ()))OR(((vt0.c0) NOT NULL))))AND((+ (v0.c0)))) DESC);
SELECT * FROM vt0, v0 WHERE (((((v0.c0) NOT NULL)) ISNULL)) ORDER BY CASE v0.c0 COLLATE BINARY  WHEN CAST(v0.c0 AS REAL) THEN vt0.c0 COLLATE RTRIM END, CASE (~ (v0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END THEN v0.c0 COLLATE NOCASE WHEN ((vt0.c0)<<(vt0.c0)) THEN 0.015255224424654212 WHEN ((v0.c0)&(NULL)) THEN ((v0.c0) BETWEEN ('P[2dX|G	') AND (v0.c0)) END ASC, (((((vt0.c0 IN ()))OR(((vt0.c0) NOT NULL))))AND((+ (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT NULL)) ISNULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE v0.c0 COLLATE BINARY  WHEN CAST(v0.c0 AS REAL) THEN vt0.c0 COLLATE RTRIM END, CASE (~ (v0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END THEN v0.c0 COLLATE NOCASE WHEN ((vt0.c0)<<(vt0.c0)) THEN 0.015255224424654212 WHEN ((v0.c0)&(NULL)) THEN ((v0.c0) BETWEEN ('P[2dX|G	') AND (v0.c0)) END ASC, (((((vt0.c0 IN ()))OR(((vt0.c0) NOT NULL))))AND((+ (v0.c0)))) DESC);
SELECT * FROM vt0, v0 WHERE (((((v0.c0) NOT NULL)) ISNULL)) ORDER BY CASE v0.c0 COLLATE BINARY  WHEN CAST(v0.c0 AS REAL) THEN vt0.c0 COLLATE RTRIM END, CASE (~ (v0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END THEN v0.c0 COLLATE NOCASE WHEN ((vt0.c0)<<(vt0.c0)) THEN 0.015255224424654212 WHEN ((v0.c0)&(NULL)) THEN ((v0.c0) BETWEEN ('P[2dX|G	') AND (v0.c0)) END ASC, (((((vt0.c0 IN ()))OR(((vt0.c0) NOT NULL))))AND((+ (v0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c0);
SELECT ALL * FROM v0 WHERE ((((((((('796087758')OR(v0.c0)))OR(v0.c0)))AND(v0.c0 COLLATE NOCASE)))OR(x''))) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((('796087758')OR(v0.c0)))OR(v0.c0)))AND(v0.c0 COLLATE NOCASE)))OR(x''))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((((((('796087758')OR(v0.c0)))OR(v0.c0)))AND(v0.c0 COLLATE NOCASE)))OR(x''))) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((('796087758')OR(v0.c0)))OR(v0.c0)))AND(v0.c0 COLLATE NOCASE)))OR(x''))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((((((('796087758')OR(v0.c0)))OR(v0.c0)))AND(v0.c0 COLLATE NOCASE)))OR(x''))) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) IS FALSE)) ORDER BY ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, 0.996799075791237, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, 0.996799075791237, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) IS FALSE)) ORDER BY ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, 0.996799075791237, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, 0.996799075791237, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) IS FALSE)) ORDER BY ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, 0.996799075791237, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ())  NULLS FIRST;
SELECT * FROM vt0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((NOT (vt0.c0)))OR(CAST(vt0.c0 AS REAL))))OR((vt0.c0 IN (vt0.c0))))) ORDER BY ((((vt0.c0)>=(vt0.c0)))||(((((vt0.c0)AND(x'c7ad')))AND(vt0.c0)))) DESC, (((vt0.c0))>((CAST(vt0.c0 AS NUMERIC)))) DESC, (- ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (vt0.c0)))OR(CAST(vt0.c0 AS REAL))))OR((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>=(vt0.c0)))||(((((vt0.c0)AND(x'c7ad')))AND(vt0.c0)))) DESC, (((vt0.c0))>((CAST(vt0.c0 AS NUMERIC)))) DESC, (- ((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((NOT (vt0.c0)))OR(CAST(vt0.c0 AS REAL))))OR((vt0.c0 IN (vt0.c0))))) ORDER BY ((((vt0.c0)>=(vt0.c0)))||(((((vt0.c0)AND(x'c7ad')))AND(vt0.c0)))) DESC, (((vt0.c0))>((CAST(vt0.c0 AS NUMERIC)))) DESC, (- ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (vt0.c0)))OR(CAST(vt0.c0 AS REAL))))OR((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>=(vt0.c0)))||(((((vt0.c0)AND(x'c7ad')))AND(vt0.c0)))) DESC, (((vt0.c0))>((CAST(vt0.c0 AS NUMERIC)))) DESC, (- ((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((NOT (vt0.c0)))OR(CAST(vt0.c0 AS REAL))))OR((vt0.c0 IN (vt0.c0))))) ORDER BY ((((vt0.c0)>=(vt0.c0)))||(((((vt0.c0)AND(x'c7ad')))AND(vt0.c0)))) DESC, (((vt0.c0))>((CAST(vt0.c0 AS NUMERIC)))) DESC, (- ((vt0.c0 IN ())));
SELECT * FROM vt0, v0 WHERE (((CAST(v0.c0 AS INTEGER))>=(NULL)));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS INTEGER))>=(NULL))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((CAST(v0.c0 AS INTEGER))>=(NULL)));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS INTEGER))>=(NULL))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((CAST(v0.c0 AS INTEGER))>=(NULL)));
SELECT ALL * FROM v0 WHERE (CASE (('k-R') NOT NULL)  WHEN CAST(v0.c0 AS INTEGER) THEN json_insert(v0.c0, v0.c0, v0.c0) WHEN ((v0.c0)%(v0.c0)) THEN SQLITE_COMPILEOPTION_GET(v0.c0) WHEN ((v0.c0)<=(v0.c0)) THEN ((v0.c0)IS('P[2dX|G	')) ELSE 0.6756542879676779 END) ORDER BY 1.60893913E9;
SELECT SUM(count) FROM (SELECT ((CASE (('k-R') NOT NULL)  WHEN CAST(v0.c0 AS INTEGER) THEN json_insert(v0.c0, v0.c0, v0.c0) WHEN ((v0.c0)%(v0.c0)) THEN SQLITE_COMPILEOPTION_GET(v0.c0) WHEN ((v0.c0)<=(v0.c0)) THEN ((v0.c0)IS('P[2dX|G	')) ELSE 0.6756542879676779 END) IS TRUE)  as count FROM v0 ORDER BY 1.60893913E9);
SELECT ALL * FROM v0 WHERE (CASE (('k-R') NOT NULL)  WHEN CAST(v0.c0 AS INTEGER) THEN json_insert(v0.c0, v0.c0, v0.c0) WHEN ((v0.c0)%(v0.c0)) THEN SQLITE_COMPILEOPTION_GET(v0.c0) WHEN ((v0.c0)<=(v0.c0)) THEN ((v0.c0)IS('P[2dX|G	')) ELSE 0.6756542879676779 END) ORDER BY 1.60893913E9;
SELECT SUM(count) FROM (SELECT ((CASE (('k-R') NOT NULL)  WHEN CAST(v0.c0 AS INTEGER) THEN json_insert(v0.c0, v0.c0, v0.c0) WHEN ((v0.c0)%(v0.c0)) THEN SQLITE_COMPILEOPTION_GET(v0.c0) WHEN ((v0.c0)<=(v0.c0)) THEN ((v0.c0)IS('P[2dX|G	')) ELSE 0.6756542879676779 END) IS TRUE)  as count FROM v0 ORDER BY 1.60893913E9);
SELECT ALL * FROM v0 WHERE (CASE (('k-R') NOT NULL)  WHEN CAST(v0.c0 AS INTEGER) THEN json_insert(v0.c0, v0.c0, v0.c0) WHEN ((v0.c0)%(v0.c0)) THEN SQLITE_COMPILEOPTION_GET(v0.c0) WHEN ((v0.c0)<=(v0.c0)) THEN ((v0.c0)IS('P[2dX|G	')) ELSE 0.6756542879676779 END) ORDER BY 1.60893913E9;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(''))))) ORDER BY ((((vt0.c0)AND(vt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(''))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(vt0.c0))) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(''))))) ORDER BY ((((vt0.c0)AND(vt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(''))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(vt0.c0))) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(''))))) ORDER BY ((((vt0.c0)AND(vt0.c0))) NOT NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE '0'  WHEN JULIANDAY(vt0.c0, 0xffffffffb194f6d9, vt0.c0) THEN (vt0.c0 IN ()) ELSE vt0.c0 END) ORDER BY load_extension(vt0.c0, vt0.c0) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE '0'  WHEN JULIANDAY(vt0.c0, 0xffffffffb194f6d9, vt0.c0) THEN (vt0.c0 IN ()) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY load_extension(vt0.c0, vt0.c0) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE '0'  WHEN JULIANDAY(vt0.c0, 0xffffffffb194f6d9, vt0.c0) THEN (vt0.c0 IN ()) ELSE vt0.c0 END) ORDER BY load_extension(vt0.c0, vt0.c0) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE '0'  WHEN JULIANDAY(vt0.c0, 0xffffffffb194f6d9, vt0.c0) THEN (vt0.c0 IN ()) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY load_extension(vt0.c0, vt0.c0) COLLATE NOCASE);
SELECT * FROM vt0 WHERE ((- ((- (vt0.c0))))) ORDER BY (+ (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((- ((- (vt0.c0))))) ORDER BY (+ (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((- ((- (vt0.c0))))) ORDER BY (+ (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((HEX(v0.c0))) AND (((((0xffffffffeb3d73c0))>=((v0.c0))))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((HEX(v0.c0))) AND (((((0Xffffffffeb3d73c0))>=((v0.c0))))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((HEX(v0.c0))) AND (((((0xffffffffeb3d73c0))>=((v0.c0))))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((HEX(v0.c0))) AND (((((0Xffffffffeb3d73c0))>=((v0.c0))))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((HEX(v0.c0))) AND (((((0xffffffffeb3d73c0))>=((v0.c0))))))) ORDER BY v0.c0;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) ISNULL)) ORDER BY (LTRIM(vt0.c0, vt0.c0) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (LTRIM(vt0.c0, vt0.c0) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) ISNULL)) ORDER BY (LTRIM(vt0.c0, vt0.c0) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (LTRIM(vt0.c0, vt0.c0) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) ISNULL)) ORDER BY (LTRIM(vt0.c0, vt0.c0) IN ())  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT NULL)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT NULL)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((NULL) NOT NULL));
SELECT ALL * FROM v0, vt0 WHERE ((((((v0.c0, vt0.c0, v0.c0, vt0.c0, vt0.c0))>=((v0.c0, v0.c0, v0.c0, vt0.c0, v0.c0))))>>(((v0.c0) NOT BETWEEN ('￿<21tꘔ)') AND ('孁t'))))) ORDER BY (((v0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((v0.c0 IN ()), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))), ((((v0.c0)AND('')))OR(vt0.c0)), ((v0.c0)IS NOT(vt0.c0)), (- (vt0.c0)))) AND ((((vt0.c0) IS TRUE), ((vt0.c0)LIKE(v0.c0)), CASE 'z240 7370989073781811695-N'  WHEN v0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS NUMERIC), ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0, vt0.c0, v0.c0, vt0.c0, vt0.c0))>=((v0.c0, v0.c0, v0.c0, vt0.c0, v0.c0))))>>(((v0.c0) NOT BETWEEN ('￿<21tꘔ)') AND ('孁t'))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((v0.c0 IN ()), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))), ((((v0.c0)AND('')))OR(vt0.c0)), ((v0.c0)IS NOT(vt0.c0)), (- (vt0.c0)))) AND ((((vt0.c0) IS TRUE), ((vt0.c0)LIKE(v0.c0)), CASE 'z240 7370989073781811695-N'  WHEN v0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS NUMERIC), ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE ((((((v0.c0, vt0.c0, v0.c0, vt0.c0, vt0.c0))>=((v0.c0, v0.c0, v0.c0, vt0.c0, v0.c0))))>>(((v0.c0) NOT BETWEEN ('￿<21tꘔ)') AND ('孁t'))))) ORDER BY (((v0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((v0.c0 IN ()), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))), ((((v0.c0)AND('')))OR(vt0.c0)), ((v0.c0)IS NOT(vt0.c0)), (- (vt0.c0)))) AND ((((vt0.c0) IS TRUE), ((vt0.c0)LIKE(v0.c0)), CASE 'z240 7370989073781811695-N'  WHEN v0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS NUMERIC), ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0, vt0.c0, v0.c0, vt0.c0, vt0.c0))>=((v0.c0, v0.c0, v0.c0, vt0.c0, v0.c0))))>>(((v0.c0) NOT BETWEEN ('￿<21tꘔ)') AND ('孁t'))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((v0.c0 IN ()), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))), ((((v0.c0)AND('')))OR(vt0.c0)), ((v0.c0)IS NOT(vt0.c0)), (- (vt0.c0)))) AND ((((vt0.c0) IS TRUE), ((vt0.c0)LIKE(v0.c0)), CASE 'z240 7370989073781811695-N'  WHEN v0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS NUMERIC), ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE ((((((v0.c0, vt0.c0, v0.c0, vt0.c0, vt0.c0))>=((v0.c0, v0.c0, v0.c0, vt0.c0, v0.c0))))>>(((v0.c0) NOT BETWEEN ('￿<21tꘔ)') AND ('孁t'))))) ORDER BY (((v0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((v0.c0 IN ()), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))), ((((v0.c0)AND('')))OR(vt0.c0)), ((v0.c0)IS NOT(vt0.c0)), (- (vt0.c0)))) AND ((((vt0.c0) IS TRUE), ((vt0.c0)LIKE(v0.c0)), CASE 'z240 7370989073781811695-N'  WHEN v0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS NUMERIC), ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) DESC  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE ('796087758' COLLATE RTRIM) ORDER BY (((((v0.c0))>((v0.c0)))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (('796087758' COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((v0.c0))>((v0.c0)))) NOTNULL) DESC);
SELECT * FROM v0, vt0 WHERE ('796087758' COLLATE RTRIM) ORDER BY (((((v0.c0))>((v0.c0)))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (('796087758' COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((v0.c0))>((v0.c0)))) NOTNULL) DESC);
SELECT * FROM v0, vt0 WHERE ('796087758' COLLATE RTRIM) ORDER BY (((((v0.c0))>((v0.c0)))) NOTNULL) DESC;
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)|(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0)|(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)|(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0)|(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)|(v0.c0)) IN ()));
SELECT COUNT(*) FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (x'');
SELECT ALL * FROM v0 WHERE (CASE WHEN '' THEN (+ (v0.c0)) ELSE ((v0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '' THEN (+ (v0.c0)) ELSE ((v0.c0) NOT NULL) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN '' THEN (+ (v0.c0)) ELSE ((v0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '' THEN (+ (v0.c0)) ELSE ((v0.c0) NOT NULL) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN '' THEN (+ (v0.c0)) ELSE ((v0.c0) NOT NULL) END);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ((CAST(v0.c0 AS REAL)) ISNULL) WHERE (((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))GLOB((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))GLOB((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((CAST(v0.c0 AS REAL)) ISNULL));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ((CAST(v0.c0 AS REAL)) ISNULL) WHERE (((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))GLOB((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))GLOB((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((CAST(v0.c0 AS REAL)) ISNULL));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ((CAST(v0.c0 AS REAL)) ISNULL) WHERE (((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))GLOB((vt0.c0 IN ()))));
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((((vt0.c0)) NOT BETWEEN ((x'c3cf')) AND ((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((((vt0.c0)) NOT BETWEEN ((x'c3cf')) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((((vt0.c0)) NOT BETWEEN ((x'c3cf')) AND ((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((((vt0.c0)) NOT BETWEEN ((x'c3cf')) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((((vt0.c0)) NOT BETWEEN ((x'c3cf')) AND ((vt0.c0)))))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0 IN ())))<((v0.c0)))) ORDER BY CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0 IN ())))<((v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0 IN ())))<((v0.c0)))) ORDER BY CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0 IN ())))<((v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0 IN ())))<((v0.c0)))) ORDER BY CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS TEXT)  NULLS LAST;
SELECT * FROM v0 WHERE ((((((v0.c0)==('<[')), ((v0.c0) NOT NULL), x''))<((CASE WHEN v0.c0 THEN v0.c0 END, (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), ((((v0.c0)AND(v0.c0)))AND('-1833873302')))))) ORDER BY ((NULL) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)=('<[')), ((v0.c0) NOT NULL), x''))<((CASE WHEN v0.c0 THEN v0.c0 END, (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), ((((v0.c0)AND(v0.c0)))AND('-1833873302')))))) IS TRUE)  as count FROM v0 ORDER BY ((NULL) IS TRUE) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((((v0.c0)==('<[')), ((v0.c0) NOT NULL), x''))<((CASE WHEN v0.c0 THEN v0.c0 END, (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), ((((v0.c0)AND(v0.c0)))AND('-1833873302')))))) ORDER BY ((NULL) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)=('<[')), ((v0.c0) NOT NULL), x''))<((CASE WHEN v0.c0 THEN v0.c0 END, (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), ((((v0.c0)AND(v0.c0)))AND('-1833873302')))))) IS TRUE)  as count FROM v0 ORDER BY ((NULL) IS TRUE) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((((v0.c0)==('<[')), ((v0.c0) NOT NULL), x''))<((CASE WHEN v0.c0 THEN v0.c0 END, (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), ((((v0.c0)AND(v0.c0)))AND('-1833873302')))))) ORDER BY ((NULL) IS TRUE) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (0.6217727076123535);
SELECT SUM(count) FROM (SELECT ALL ((0.6217727076123535) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (0.6217727076123535);
SELECT SUM(count) FROM (SELECT ALL ((0.6217727076123535) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (0.6217727076123535);
SELECT ALL * FROM vt0, v0 WHERE (LENGTH(CAST(v0.c0 AS NUMERIC))) ORDER BY CAST((+ (vt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((LENGTH(CAST(v0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST((+ (vt0.c0)) AS BLOB));
SELECT ALL * FROM vt0, v0 WHERE (LENGTH(CAST(v0.c0 AS NUMERIC))) ORDER BY CAST((+ (vt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((LENGTH(CAST(v0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST((+ (vt0.c0)) AS BLOB));
SELECT ALL * FROM vt0, v0 WHERE (LENGTH(CAST(v0.c0 AS NUMERIC))) ORDER BY CAST((+ (vt0.c0)) AS BLOB);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (v0.c0 COLLATE RTRIM))) ORDER BY ((v0.c0 COLLATE RTRIM) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE RTRIM) NOTNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (v0.c0 COLLATE RTRIM))) ORDER BY ((v0.c0 COLLATE RTRIM) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE RTRIM) NOTNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (v0.c0 COLLATE RTRIM))) ORDER BY ((v0.c0 COLLATE RTRIM) NOTNULL) ASC  NULLS FIRST;
SELECT * FROM v0 WHERE ((((v0.c0)) BETWEEN ((((NULL)<<(v0.c0)))) AND (((+ (v0.c0)))))) ORDER BY (NOT (((v0.c0) NOT BETWEEN ('-64234213') AND (v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((NULL)<<(v0.c0)))) AND (((+ (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c0) NOT BETWEEN ('-64234213') AND (v0.c0)))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((((v0.c0)) BETWEEN ((((NULL)<<(v0.c0)))) AND (((+ (v0.c0)))))) ORDER BY (NOT (((v0.c0) NOT BETWEEN ('-64234213') AND (v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((NULL)<<(v0.c0)))) AND (((+ (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c0) NOT BETWEEN ('-64234213') AND (v0.c0)))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((((v0.c0)) BETWEEN ((((NULL)<<(v0.c0)))) AND (((+ (v0.c0)))))) ORDER BY (NOT (((v0.c0) NOT BETWEEN ('-64234213') AND (v0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (NULL) ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) IS TRUE), CAST(x'' AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) IS TRUE), CAST(x'' AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (NULL) ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) IS TRUE), CAST(x'' AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) IS TRUE), CAST(x'' AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (NULL) ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) IS TRUE), CAST(x'' AS BLOB)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((vt0.c0))>=((v0.c0)))) BETWEEN (x'') AND (CASE v0.c0  WHEN 0Xffffffff92b1506a THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN vt0.c0 END))) ORDER BY CASE ((vt0.c0)IS(vt0.c0))  WHEN TRIM(DISTINCT v0.c0, v0.c0) THEN CAST(x'' AS INTEGER) WHEN ((v0.c0) NOT NULL) THEN SUBSTR(vt0.c0, v0.c0) WHEN 0.996799075791237 THEN ((vt0.c0)&(v0.c0)) ELSE (~ (vt0.c0)) END, CAST((('-1200623174')*(v0.c0)) AS REAL) DESC  NULLS FIRST, ((((v0.c0)IS NOT(vt0.c0))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))>=((v0.c0)))) BETWEEN (x'') AND (CASE v0.c0  WHEN 0xffffffff92b1506a THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE ((vt0.c0)IS(vt0.c0))  WHEN TRIM(DISTINCT v0.c0, v0.c0) THEN CAST(x'' AS INTEGER) WHEN ((v0.c0) NOT NULL) THEN SUBSTR(vt0.c0, v0.c0) WHEN 0.996799075791237 THEN ((vt0.c0)&(v0.c0)) ELSE (~ (vt0.c0)) END, CAST((('-1200623174')*(v0.c0)) AS REAL) DESC  NULLS FIRST, ((((v0.c0)IS NOT(vt0.c0))) NOT NULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((vt0.c0))>=((v0.c0)))) BETWEEN (x'') AND (CASE v0.c0  WHEN 0Xffffffff92b1506a THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN vt0.c0 END))) ORDER BY CASE ((vt0.c0)IS(vt0.c0))  WHEN TRIM(DISTINCT v0.c0, v0.c0) THEN CAST(x'' AS INTEGER) WHEN ((v0.c0) NOT NULL) THEN SUBSTR(vt0.c0, v0.c0) WHEN 0.996799075791237 THEN ((vt0.c0)&(v0.c0)) ELSE (~ (vt0.c0)) END, CAST((('-1200623174')*(v0.c0)) AS REAL) DESC  NULLS FIRST, ((((v0.c0)IS NOT(vt0.c0))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))>=((v0.c0)))) BETWEEN (x'') AND (CASE v0.c0  WHEN 0xffffffff92b1506a THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE ((vt0.c0)IS(vt0.c0))  WHEN TRIM(DISTINCT v0.c0, v0.c0) THEN CAST(x'' AS INTEGER) WHEN ((v0.c0) NOT NULL) THEN SUBSTR(vt0.c0, v0.c0) WHEN 0.996799075791237 THEN ((vt0.c0)&(v0.c0)) ELSE (~ (vt0.c0)) END, CAST((('-1200623174')*(v0.c0)) AS REAL) DESC  NULLS FIRST, ((((v0.c0)IS NOT(vt0.c0))) NOT NULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((vt0.c0))>=((v0.c0)))) BETWEEN (x'') AND (CASE v0.c0  WHEN 0Xffffffff92b1506a THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN vt0.c0 END))) ORDER BY CASE ((vt0.c0)IS(vt0.c0))  WHEN TRIM(DISTINCT v0.c0, v0.c0) THEN CAST(x'' AS INTEGER) WHEN ((v0.c0) NOT NULL) THEN SUBSTR(vt0.c0, v0.c0) WHEN 0.996799075791237 THEN ((vt0.c0)&(v0.c0)) ELSE (~ (vt0.c0)) END, CAST((('-1200623174')*(v0.c0)) AS REAL) DESC  NULLS FIRST, ((((v0.c0)IS NOT(vt0.c0))) NOT NULL) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((0.7654256908191566)!=(json_type('220163027')))) ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.7654256908191566)<>(json_type('220163027')))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((0.7654256908191566)!=(json_type('220163027')))) ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.7654256908191566)<>(json_type('220163027')))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((0.7654256908191566)!=(json_type('220163027')))) ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND (((+ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND (((+ (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND (((+ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND (((+ (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND (((+ (vt0.c0))))));
SELECT * FROM v0, vt0 WHERE ((((v0.c0, vt0.c0, vt0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0 COLLATE NOCASE, (+ (v0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((vt0.c0)&(v0.c0)))) AND ((CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((vt0.c0)AND(v0.c0)))OR(v0.c0)), ((vt0.c0) ISNULL), json_valid(v0.c0), ((v0.c0)<>(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, vt0.c0, vt0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0 COLLATE NOCASE, (+ (v0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((vt0.c0)&(v0.c0)))) AND ((CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((vt0.c0)AND(v0.c0)))OR(v0.c0)), ((vt0.c0) ISNULL), json_valid(v0.c0), ((v0.c0)<>(v0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((v0.c0, vt0.c0, vt0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0 COLLATE NOCASE, (+ (v0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((vt0.c0)&(v0.c0)))) AND ((CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((vt0.c0)AND(v0.c0)))OR(v0.c0)), ((vt0.c0) ISNULL), json_valid(v0.c0), ((v0.c0)<>(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, vt0.c0, vt0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0 COLLATE NOCASE, (+ (v0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((vt0.c0)&(v0.c0)))) AND ((CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((vt0.c0)AND(v0.c0)))OR(v0.c0)), ((vt0.c0) ISNULL), json_valid(v0.c0), ((v0.c0)<>(v0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((v0.c0, vt0.c0, vt0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0 COLLATE NOCASE, (+ (v0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((vt0.c0)&(v0.c0)))) AND ((CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((vt0.c0)AND(v0.c0)))OR(v0.c0)), ((vt0.c0) ISNULL), json_valid(v0.c0), ((v0.c0)<>(v0.c0))))));
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND((x'' IN ()))))OR(((x'')-(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND((x'' IN ()))))OR(((x'')-(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND((x'' IN ()))))OR(((x'')-(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND((x'' IN ()))))OR(((x'')-(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND((x'' IN ()))))OR(((x'')-(v0.c0)))));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON ((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))|(((vt0.c0)LIKE(vt0.c0)))) WHERE (((((((v0.c0)AND(vt0.c0)))OR(v0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(vt0.c0)))OR(v0.c0))) ISNULL)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))|(((vt0.c0)LIKE(vt0.c0)))));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON ((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))|(((vt0.c0)LIKE(vt0.c0)))) WHERE (((((((v0.c0)AND(vt0.c0)))OR(v0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(vt0.c0)))OR(v0.c0))) ISNULL)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))|(((vt0.c0)LIKE(vt0.c0)))));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON ((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))|(((vt0.c0)LIKE(vt0.c0)))) WHERE (((((((v0.c0)AND(vt0.c0)))OR(v0.c0))) ISNULL));
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS INTEGER))==(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY ((((v0.c0)>(v0.c0))) NOTNULL)  NULLS LAST, (v0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS INTEGER))==(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)>(v0.c0))) NOTNULL)  NULLS LAST, (v0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM DESC);
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS INTEGER))==(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY ((((v0.c0)>(v0.c0))) NOTNULL)  NULLS LAST, (v0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS INTEGER))==(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)>(v0.c0))) NOTNULL)  NULLS LAST, (v0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM DESC);
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS INTEGER))==(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY ((((v0.c0)>(v0.c0))) NOTNULL)  NULLS LAST, (v0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM DESC;
SELECT * FROM vt0, v0 WHERE (CASE ((vt0.c0)%(v0.c0))  WHEN CAST(vt0.c0 AS REAL) THEN CAST(v0.c0 AS REAL) END) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)%(v0.c0))  WHEN CAST(vt0.c0 AS REAL) THEN CAST(v0.c0 AS REAL) END) IS TRUE)  as count FROM vt0, v0 ORDER BY NULL  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (CASE ((vt0.c0)%(v0.c0))  WHEN CAST(vt0.c0 AS REAL) THEN CAST(v0.c0 AS REAL) END) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)%(v0.c0))  WHEN CAST(vt0.c0 AS REAL) THEN CAST(v0.c0 AS REAL) END) IS TRUE)  as count FROM vt0, v0 ORDER BY NULL  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (CASE ((vt0.c0)%(v0.c0))  WHEN CAST(vt0.c0 AS REAL) THEN CAST(v0.c0 AS REAL) END) ORDER BY NULL  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE (LTRIM(((vt0.c0) NOTNULL), (((vt0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0))))) ORDER BY CAST(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END AS BLOB), ((((((v0.c0)AND(vt0.c0)))OR(v0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((vt0.c0) NOTNULL), (((vt0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END AS BLOB), ((((((v0.c0)AND(vt0.c0)))OR(v0.c0))) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (LTRIM(((vt0.c0) NOTNULL), (((vt0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0))))) ORDER BY CAST(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END AS BLOB), ((((((v0.c0)AND(vt0.c0)))OR(v0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((vt0.c0) NOTNULL), (((vt0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END AS BLOB), ((((((v0.c0)AND(vt0.c0)))OR(v0.c0))) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (LTRIM(((vt0.c0) NOTNULL), (((vt0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0))))) ORDER BY CAST(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END AS BLOB), ((((((v0.c0)AND(vt0.c0)))OR(v0.c0))) NOTNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)OR(v0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(v0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)OR(v0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(v0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)OR(v0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (CAST(v0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((0.43036697513767086)) BETWEEN ((((vt0.c0)<(vt0.c0)))) AND ((CAST(vt0.c0 AS INTEGER))))) ORDER BY (+ (vt0.c0))  NULLS LAST, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (0.7860457037178067) AND (vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.43036697513767086)) BETWEEN ((((vt0.c0)<(vt0.c0)))) AND ((CAST(vt0.c0 AS INTEGER))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c0))  NULLS LAST, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (0.7860457037178067) AND (vt0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((0.43036697513767086)) BETWEEN ((((vt0.c0)<(vt0.c0)))) AND ((CAST(vt0.c0 AS INTEGER))))) ORDER BY (+ (vt0.c0))  NULLS LAST, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (0.7860457037178067) AND (vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.43036697513767086)) BETWEEN ((((vt0.c0)<(vt0.c0)))) AND ((CAST(vt0.c0 AS INTEGER))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c0))  NULLS LAST, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (0.7860457037178067) AND (vt0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((0.43036697513767086)) BETWEEN ((((vt0.c0)<(vt0.c0)))) AND ((CAST(vt0.c0 AS INTEGER))))) ORDER BY (+ (vt0.c0))  NULLS LAST, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (0.7860457037178067) AND (vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((0.35465046194398686)+(((((vt0.c0)OR(vt0.c0)))AND(v0.c0))))) ORDER BY INSTR((((vt0.c0, vt0.c0, 0.8687881042031885))>=((vt0.c0, vt0.c0, 'D4M'))), ((((v0.c0)OR(NULL)))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((0.35465046194398686)+(((((vt0.c0)OR(vt0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY INSTR((((vt0.c0, vt0.c0, 0.8687881042031885))>=((vt0.c0, vt0.c0, 'D4M'))), ((((v0.c0)OR(NULL)))AND(vt0.c0))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((0.35465046194398686)+(((((vt0.c0)OR(vt0.c0)))AND(v0.c0))))) ORDER BY INSTR((((vt0.c0, vt0.c0, 0.8687881042031885))>=((vt0.c0, vt0.c0, 'D4M'))), ((((v0.c0)OR(NULL)))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((0.35465046194398686)+(((((vt0.c0)OR(vt0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY INSTR((((vt0.c0, vt0.c0, 0.8687881042031885))>=((vt0.c0, vt0.c0, 'D4M'))), ((((v0.c0)OR(NULL)))AND(vt0.c0))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((0.35465046194398686)+(((((vt0.c0)OR(vt0.c0)))AND(v0.c0))))) ORDER BY INSTR((((vt0.c0, vt0.c0, 0.8687881042031885))>=((vt0.c0, vt0.c0, 'D4M'))), ((((v0.c0)OR(NULL)))AND(vt0.c0)));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((UNICODE(NULL), ((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))))<=((((((v0.c0)OR(vt0.c0)))OR(v0.c0)), json_patch(0.3407336033362802, vt0.c0), ((((((((vt0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))) WHERE (CASE CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END  WHEN ((((vt0.c0)AND(v0.c0)))OR(vt0.c0)) THEN (+ (v0.c0)) WHEN 0.07424268773890252 THEN (+ ('-1117714129')) WHEN v0.c0 THEN json_patch(v0.c0, vt0.c0) END) ORDER BY IFNULL((NOT (v0.c0)), '0.47097444454479076') ASC, ((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))<=(vt0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END  WHEN ((((vt0.c0)AND(v0.c0)))OR(vt0.c0)) THEN (+ (v0.c0)) WHEN 0.07424268773890252 THEN (+ ('-1117714129')) WHEN v0.c0 THEN json_patch(v0.c0, vt0.c0) END) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((UNICODE(NULL), ((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))))<=((((((v0.c0)OR(vt0.c0)))OR(v0.c0)), json_patch(0.3407336033362802, vt0.c0), ((((((((vt0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))) ORDER BY IFNULL((NOT (v0.c0)), '0.47097444454479076') ASC, ((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))<=(vt0.c0 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((UNICODE(NULL), ((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))))<=((((((v0.c0)OR(vt0.c0)))OR(v0.c0)), json_patch(0.3407336033362802, vt0.c0), ((((((((vt0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))) WHERE (CASE CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END  WHEN ((((vt0.c0)AND(v0.c0)))OR(vt0.c0)) THEN (+ (v0.c0)) WHEN 0.07424268773890252 THEN (+ ('-1117714129')) WHEN v0.c0 THEN json_patch(v0.c0, vt0.c0) END) ORDER BY IFNULL((NOT (v0.c0)), '0.47097444454479076') ASC, ((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))<=(vt0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END  WHEN ((((vt0.c0)AND(v0.c0)))OR(vt0.c0)) THEN (+ (v0.c0)) WHEN 0.07424268773890252 THEN (+ ('-1117714129')) WHEN v0.c0 THEN json_patch(v0.c0, vt0.c0) END) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((UNICODE(NULL), ((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))))<=((((((v0.c0)OR(vt0.c0)))OR(v0.c0)), json_patch(0.3407336033362802, vt0.c0), ((((((((vt0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))) ORDER BY IFNULL((NOT (v0.c0)), '0.47097444454479076') ASC, ((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))<=(vt0.c0 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((UNICODE(NULL), ((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))))<=((((((v0.c0)OR(vt0.c0)))OR(v0.c0)), json_patch(0.3407336033362802, vt0.c0), ((((((((vt0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))) WHERE (CASE CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END  WHEN ((((vt0.c0)AND(v0.c0)))OR(vt0.c0)) THEN (+ (v0.c0)) WHEN 0.07424268773890252 THEN (+ ('-1117714129')) WHEN v0.c0 THEN json_patch(v0.c0, vt0.c0) END) ORDER BY IFNULL((NOT (v0.c0)), '0.47097444454479076') ASC, ((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))<=(vt0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE ((SQLITE_SOURCE_ID() IN ())) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE NOCASE))  NULLS FIRST, ((((vt0.c0)<<(vt0.c0))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((SQLITE_SOURCE_ID() IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE NOCASE))  NULLS FIRST, ((((vt0.c0)<<(vt0.c0))) IS TRUE)  NULLS FIRST);
SELECT * FROM vt0 WHERE ((SQLITE_SOURCE_ID() IN ())) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE NOCASE))  NULLS FIRST, ((((vt0.c0)<<(vt0.c0))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((SQLITE_SOURCE_ID() IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE NOCASE))  NULLS FIRST, ((((vt0.c0)<<(vt0.c0))) IS TRUE)  NULLS FIRST);
SELECT * FROM vt0 WHERE ((SQLITE_SOURCE_ID() IN ())) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE NOCASE))  NULLS FIRST, ((((vt0.c0)<<(vt0.c0))) IS TRUE)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((('췔8囃귽K˯ND') BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN 'D4M' WHEN vt0.c0 THEN vt0.c0 WHEN 'Qu?[pV' THEN x'' END) AND (0.8034607282914478))) ORDER BY ((CAST(vt0.c0 AS TEXT))>=((vt0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('췔8囃귽K˯ND') BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN 'D4M' WHEN vt0.c0 THEN vt0.c0 WHEN 'Qu?[pV' THEN x'' END) AND (0.8034607282914478))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT))>=((vt0.c0 IN ()))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((('췔8囃귽K˯ND') BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN 'D4M' WHEN vt0.c0 THEN vt0.c0 WHEN 'Qu?[pV' THEN x'' END) AND (0.8034607282914478))) ORDER BY ((CAST(vt0.c0 AS TEXT))>=((vt0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('췔8囃귽K˯ND') BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN 'D4M' WHEN vt0.c0 THEN vt0.c0 WHEN 'Qu?[pV' THEN x'' END) AND (0.8034607282914478))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT))>=((vt0.c0 IN ()))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((('췔8囃귽K˯ND') BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN 'D4M' WHEN vt0.c0 THEN vt0.c0 WHEN 'Qu?[pV' THEN x'' END) AND (0.8034607282914478))) ORDER BY ((CAST(vt0.c0 AS TEXT))>=((vt0.c0 IN ()))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0) ISNULL) THEN (((v0.c0))<>((0.6379637303262693))) WHEN v0.c0 THEN ((v0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0) ISNULL) THEN (((v0.c0))<>((0.6379637303262693))) WHEN v0.c0 THEN ((v0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0) ISNULL) THEN (((v0.c0))<>((0.6379637303262693))) WHEN v0.c0 THEN ((v0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0) ISNULL) THEN (((v0.c0))<>((0.6379637303262693))) WHEN v0.c0 THEN ((v0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0) ISNULL) THEN (((v0.c0))<>((0.6379637303262693))) WHEN v0.c0 THEN ((v0.c0) NOT NULL) END);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (HEX(HEX(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((HEX(HEX(vt0.c0))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (HEX(HEX(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((HEX(HEX(vt0.c0))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (HEX(HEX(vt0.c0)));
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE ((((v0.c0)) BETWEEN ((((0.6390505248378638)IS(v0.c0)))) AND ((CAST(v0.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((0.6390505248378638)IS(v0.c0)))) AND ((CAST(v0.c0 AS BLOB))))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE ((((v0.c0)) BETWEEN ((((0.6390505248378638)IS(v0.c0)))) AND ((CAST(v0.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((0.6390505248378638)IS(v0.c0)))) AND ((CAST(v0.c0 AS BLOB))))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE ((((v0.c0)) BETWEEN ((((0.6390505248378638)IS(v0.c0)))) AND ((CAST(v0.c0 AS BLOB)))));
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (LIKE(v0.c0, v0.c0, '/')) AND (SQLITE_SOURCE_ID()))) ORDER BY CAST(CAST('' AS NUMERIC) AS REAL)  NULLS FIRST, (((((((((((v0.c0))=((v0.c0))))OR(((v0.c0) ISNULL))))OR(((v0.c0) NOT NULL))))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))AND((('z-') NOT BETWEEN (v0.c0) AND (''))))  NULLS LAST, json_array_length(v0.c0 COLLATE RTRIM) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (LIKE(v0.c0, v0.c0, '/')) AND (SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM v0 ORDER BY CAST(CAST('' AS NUMERIC) AS REAL)  NULLS FIRST, (((((((((((v0.c0))=((v0.c0))))OR(((v0.c0) ISNULL))))OR(((v0.c0) NOT NULL))))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))AND((('z-') NOT BETWEEN (v0.c0) AND (''))))  NULLS LAST, json_array_length(v0.c0 COLLATE RTRIM) ASC);
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (LIKE(v0.c0, v0.c0, '/')) AND (SQLITE_SOURCE_ID()))) ORDER BY CAST(CAST('' AS NUMERIC) AS REAL)  NULLS FIRST, (((((((((((v0.c0))=((v0.c0))))OR(((v0.c0) ISNULL))))OR(((v0.c0) NOT NULL))))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))AND((('z-') NOT BETWEEN (v0.c0) AND (''))))  NULLS LAST, json_array_length(v0.c0 COLLATE RTRIM) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (LIKE(v0.c0, v0.c0, '/')) AND (SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM v0 ORDER BY CAST(CAST('' AS NUMERIC) AS REAL)  NULLS FIRST, (((((((((((v0.c0))=((v0.c0))))OR(((v0.c0) ISNULL))))OR(((v0.c0) NOT NULL))))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))AND((('z-') NOT BETWEEN (v0.c0) AND (''))))  NULLS LAST, json_array_length(v0.c0 COLLATE RTRIM) ASC);
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (LIKE(v0.c0, v0.c0, '/')) AND (SQLITE_SOURCE_ID()))) ORDER BY CAST(CAST('' AS NUMERIC) AS REAL)  NULLS FIRST, (((((((((((v0.c0))=((v0.c0))))OR(((v0.c0) ISNULL))))OR(((v0.c0) NOT NULL))))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))AND((('z-') NOT BETWEEN (v0.c0) AND (''))))  NULLS LAST, json_array_length(v0.c0 COLLATE RTRIM) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY (+ (x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY (+ (x''))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY (+ (x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY (+ (x''))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY (+ (x''))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ('102889205');
SELECT SUM(count) FROM (SELECT ALL (('102889205') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('102889205');
SELECT SUM(count) FROM (SELECT ALL (('102889205') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('102889205');
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN TRIM(DISTINCT vt0.c0) THEN vt0.c0 COLLATE NOCASE ELSE x'' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN TRIM(DISTINCT vt0.c0) THEN vt0.c0 COLLATE NOCASE ELSE x'' END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN TRIM(DISTINCT vt0.c0) THEN vt0.c0 COLLATE NOCASE ELSE x'' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN TRIM(DISTINCT vt0.c0) THEN vt0.c0 COLLATE NOCASE ELSE x'' END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN TRIM(DISTINCT vt0.c0) THEN vt0.c0 COLLATE NOCASE ELSE x'' END);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN 'h^H+''' END) NOT BETWEEN (((vt0.c0)+('T,mViX.'))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN 'h^H+''' END) NOT BETWEEN (((vt0.c0)+('T,mViX.'))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN 'h^H+''' END) NOT BETWEEN (((vt0.c0)+('T,mViX.'))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN 'h^H+''' END) NOT BETWEEN (((vt0.c0)+('T,mViX.'))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN 'h^H+''' END) NOT BETWEEN (((vt0.c0)+('T,mViX.'))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)&(x'')) ELSE ((vt0.c0)%(vt0.c0)) END) ORDER BY CASE (((vt0.c0))<((NULL)))  WHEN (vt0.c0 IN (vt0.c0)) THEN (vt0.c0 IN ()) ELSE vt0.c0 COLLATE BINARY END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE NOCASE  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)&(x'')) ELSE ((vt0.c0)%(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CASE (((vt0.c0))<((NULL)))  WHEN (vt0.c0 IN (vt0.c0)) THEN (vt0.c0 IN ()) ELSE vt0.c0 COLLATE BINARY END  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)&(x'')) ELSE ((vt0.c0)%(vt0.c0)) END) ORDER BY CASE (((vt0.c0))<((NULL)))  WHEN (vt0.c0 IN (vt0.c0)) THEN (vt0.c0 IN ()) ELSE vt0.c0 COLLATE BINARY END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE NOCASE  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)&(x'')) ELSE ((vt0.c0)%(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CASE (((vt0.c0))<((NULL)))  WHEN (vt0.c0 IN (vt0.c0)) THEN (vt0.c0 IN ()) ELSE vt0.c0 COLLATE BINARY END  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)&(x'')) ELSE ((vt0.c0)%(vt0.c0)) END) ORDER BY CASE (((vt0.c0))<((NULL)))  WHEN (vt0.c0 IN (vt0.c0)) THEN (vt0.c0 IN ()) ELSE vt0.c0 COLLATE BINARY END  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((x'')<((v0.c0 IN ())))) ORDER BY (~ (v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'')<((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY (~ (v0.c0)) DESC);
SELECT COUNT(*) FROM v0 WHERE (((x'')<((v0.c0 IN ())))) ORDER BY (~ (v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'')<((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY (~ (v0.c0)) DESC);
SELECT COUNT(*) FROM v0 WHERE (((x'')<((v0.c0 IN ())))) ORDER BY (~ (v0.c0)) DESC;
SELECT * FROM v0, vt0 WHERE (((~ (vt0.c0)) IN ('s^cRb2\n+', (v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt0.c0)) IN ('s^cRb2\n+', (v0.c0 IN ())))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((~ (vt0.c0)) IN ('s^cRb2\n+', (v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt0.c0)) IN ('s^cRb2\n+', (v0.c0 IN ())))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((~ (vt0.c0)) IN ('s^cRb2\n+', (v0.c0 IN ()))));
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)!=(vt0.c0))  WHEN (- (vt0.c0)) THEN ((vt0.c0) NOTNULL) ELSE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) END) ORDER BY (((vt0.c0, vt0.c0, '')) NOT BETWEEN ((((vt0.c0)LIKE(vt0.c0)), ((vt0.c0) IS TRUE), ((vt0.c0)!=(vt0.c0)))) AND ((vt0.c0, NULL, x''))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)!=(vt0.c0))  WHEN (- (vt0.c0)) THEN ((vt0.c0) NOTNULL) ELSE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY (((vt0.c0, vt0.c0, '')) NOT BETWEEN ((((vt0.c0)LIKE(vt0.c0)), ((vt0.c0) IS TRUE), ((vt0.c0)!=(vt0.c0)))) AND ((vt0.c0, NULL, x''))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)!=(vt0.c0))  WHEN (- (vt0.c0)) THEN ((vt0.c0) NOTNULL) ELSE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) END) ORDER BY (((vt0.c0, vt0.c0, '')) NOT BETWEEN ((((vt0.c0)LIKE(vt0.c0)), ((vt0.c0) IS TRUE), ((vt0.c0)!=(vt0.c0)))) AND ((vt0.c0, NULL, x''))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)!=(vt0.c0))  WHEN (- (vt0.c0)) THEN ((vt0.c0) NOTNULL) ELSE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY (((vt0.c0, vt0.c0, '')) NOT BETWEEN ((((vt0.c0)LIKE(vt0.c0)), ((vt0.c0) IS TRUE), ((vt0.c0)!=(vt0.c0)))) AND ((vt0.c0, NULL, x''))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)!=(vt0.c0))  WHEN (- (vt0.c0)) THEN ((vt0.c0) NOTNULL) ELSE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) END) ORDER BY (((vt0.c0, vt0.c0, '')) NOT BETWEEN ((((vt0.c0)LIKE(vt0.c0)), ((vt0.c0) IS TRUE), ((vt0.c0)!=(vt0.c0)))) AND ((vt0.c0, NULL, x''))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((LOWER(v0.c0))<>((((NULL)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))) ORDER BY CAST('979468431' AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((((LOWER(v0.c0))<>((((NULL)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST('979468431' AS BLOB) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((LOWER(v0.c0))<>((((NULL)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))) ORDER BY CAST('979468431' AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((((LOWER(v0.c0))<>((((NULL)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST('979468431' AS BLOB) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((LOWER(v0.c0))<>((((NULL)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))) ORDER BY CAST('979468431' AS BLOB) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (x'4744') ORDER BY ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(v0.c0 COLLATE RTRIM)))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((x'4744') IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(v0.c0 COLLATE RTRIM)))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (x'4744') ORDER BY ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(v0.c0 COLLATE RTRIM)))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((x'4744') IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(v0.c0 COLLATE RTRIM)))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (x'4744') ORDER BY ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(v0.c0 COLLATE RTRIM)))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN (v0.c0 IN ()) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE v0.c0 COLLATE BINARY END) ORDER BY ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN (v0.c0 IN ()) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE v0.c0 COLLATE BINARY END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN (v0.c0 IN ()) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE v0.c0 COLLATE BINARY END) ORDER BY ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN (v0.c0 IN ()) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE v0.c0 COLLATE BINARY END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN (v0.c0 IN ()) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE v0.c0 COLLATE BINARY END) ORDER BY ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) ASC;
SELECT ALL * FROM v0 WHERE (((HEX(DISTINCT v0.c0))>>(((v0.c0)<>(v0.c0))))) ORDER BY CAST(((v0.c0)GLOB(v0.c0)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT v0.c0))>>(((v0.c0)<>(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)GLOB(v0.c0)) AS TEXT) DESC);
SELECT ALL * FROM v0 WHERE (((HEX(DISTINCT v0.c0))>>(((v0.c0)<>(v0.c0))))) ORDER BY CAST(((v0.c0)GLOB(v0.c0)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT v0.c0))>>(((v0.c0)<>(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)GLOB(v0.c0)) AS TEXT) DESC);
SELECT ALL * FROM v0 WHERE (((HEX(DISTINCT v0.c0))>>(((v0.c0)<>(v0.c0))))) ORDER BY CAST(((v0.c0)GLOB(v0.c0)) AS TEXT) DESC;
SELECT * FROM vt0 WHERE (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '-1058859696')) AND ((1.677253938E9, vt0.c0, vt0.c0)))))!=((UNLIKELY(DISTINCT vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '-1058859696')) AND ((1.677253938E9, vt0.c0, vt0.c0)))))!=((UNLIKELY(DISTINCT vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '-1058859696')) AND ((1.677253938E9, vt0.c0, vt0.c0)))))!=((UNLIKELY(DISTINCT vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '-1058859696')) AND ((1.677253938E9, vt0.c0, vt0.c0)))))!=((UNLIKELY(DISTINCT vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '-1058859696')) AND ((1.677253938E9, vt0.c0, vt0.c0)))))!=((UNLIKELY(DISTINCT vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)+((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)+((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)+((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)+((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)+((vt0.c0 IN ()))));
SELECT * FROM vt0, v0 WHERE ((((vt0.c0, vt0.c0, v0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), ((vt0.c0)AND(vt0.c0)), (~ (vt0.c0)), (vt0.c0 IN ()), ((v0.c0) NOTNULL))) AND ((((((v0.c0)AND(v0.c0)))AND('-1497605668')), vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS INTEGER), ((vt0.c0)<>(vt0.c0)), 0.2729243189825963))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, v0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), ((vt0.c0)AND(vt0.c0)), (~ (vt0.c0)), (vt0.c0 IN ()), ((v0.c0) NOTNULL))) AND ((((((v0.c0)AND(v0.c0)))AND('-1497605668')), vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS INTEGER), ((vt0.c0)<>(vt0.c0)), 0.2729243189825963)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((vt0.c0, vt0.c0, v0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), ((vt0.c0)AND(vt0.c0)), (~ (vt0.c0)), (vt0.c0 IN ()), ((v0.c0) NOTNULL))) AND ((((((v0.c0)AND(v0.c0)))AND('-1497605668')), vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS INTEGER), ((vt0.c0)<>(vt0.c0)), 0.2729243189825963))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, v0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), ((vt0.c0)AND(vt0.c0)), (~ (vt0.c0)), (vt0.c0 IN ()), ((v0.c0) NOTNULL))) AND ((((((v0.c0)AND(v0.c0)))AND('-1497605668')), vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS INTEGER), ((vt0.c0)<>(vt0.c0)), 0.2729243189825963)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((vt0.c0, vt0.c0, v0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), ((vt0.c0)AND(vt0.c0)), (~ (vt0.c0)), (vt0.c0 IN ()), ((v0.c0) NOTNULL))) AND ((((((v0.c0)AND(v0.c0)))AND('-1497605668')), vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS INTEGER), ((vt0.c0)<>(vt0.c0)), 0.2729243189825963))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)*(v0.c0)) WHEN v0.c0 THEN ((v0.c0) ISNULL) WHEN (NOT (vt0.c0)) THEN ((vt0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)*(v0.c0)) WHEN v0.c0 THEN ((v0.c0) ISNULL) WHEN (NOT (vt0.c0)) THEN ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)*(v0.c0)) WHEN v0.c0 THEN ((v0.c0) ISNULL) WHEN (NOT (vt0.c0)) THEN ((vt0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)*(v0.c0)) WHEN v0.c0 THEN ((v0.c0) ISNULL) WHEN (NOT (vt0.c0)) THEN ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)*(v0.c0)) WHEN v0.c0 THEN ((v0.c0) ISNULL) WHEN (NOT (vt0.c0)) THEN ((vt0.c0) IS TRUE) END);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON TYPEOF(LOWER(vt0.c0)) WHERE ((((v0.c0)) BETWEEN ((v0.c0)) AND ((CAST(vt0.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((v0.c0)) AND ((CAST(vt0.c0 AS BLOB))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON TYPEOF(LOWER(vt0.c0)));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON TYPEOF(LOWER(vt0.c0)) WHERE ((((v0.c0)) BETWEEN ((v0.c0)) AND ((CAST(vt0.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((v0.c0)) AND ((CAST(vt0.c0 AS BLOB))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON TYPEOF(LOWER(vt0.c0)));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON TYPEOF(LOWER(vt0.c0)) WHERE ((((v0.c0)) BETWEEN ((v0.c0)) AND ((CAST(vt0.c0 AS BLOB)))));
SELECT ALL * FROM vt0, v0 WHERE ((((((vt0.c0))<=((v0.c0))))>(((vt0.c0)LIKE(vt0.c0))))) ORDER BY (((((((v0.c0, vt0.c0, v0.c0))<=((v0.c0, vt0.c0, NULL))))AND('2041463969')))AND((((v0.c0, v0.c0, 0.0836899765323662))>((NULL, vt0.c0, v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<=((v0.c0))))>(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((((v0.c0, vt0.c0, v0.c0))<=((v0.c0, vt0.c0, NULL))))AND('2041463969')))AND((((v0.c0, v0.c0, 0.0836899765323662))>((NULL, vt0.c0, v0.c0))))) ASC);
SELECT ALL * FROM vt0, v0 WHERE ((((((vt0.c0))<=((v0.c0))))>(((vt0.c0)LIKE(vt0.c0))))) ORDER BY (((((((v0.c0, vt0.c0, v0.c0))<=((v0.c0, vt0.c0, NULL))))AND('2041463969')))AND((((v0.c0, v0.c0, 0.0836899765323662))>((NULL, vt0.c0, v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<=((v0.c0))))>(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((((v0.c0, vt0.c0, v0.c0))<=((v0.c0, vt0.c0, NULL))))AND('2041463969')))AND((((v0.c0, v0.c0, 0.0836899765323662))>((NULL, vt0.c0, v0.c0))))) ASC);
SELECT ALL * FROM vt0, v0 WHERE ((((((vt0.c0))<=((v0.c0))))>(((vt0.c0)LIKE(vt0.c0))))) ORDER BY (((((((v0.c0, vt0.c0, v0.c0))<=((v0.c0, vt0.c0, NULL))))AND('2041463969')))AND((((v0.c0, v0.c0, 0.0836899765323662))>((NULL, vt0.c0, v0.c0))))) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) NOTNULL)) ORDER BY ((((v0.c0) IS FALSE))<>(CAST(v0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) IS FALSE))<>(CAST(v0.c0 AS INTEGER))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) NOTNULL)) ORDER BY ((((v0.c0) IS FALSE))<>(CAST(v0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) IS FALSE))<>(CAST(v0.c0 AS INTEGER))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) NOTNULL)) ORDER BY ((((v0.c0) IS FALSE))<>(CAST(v0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ())) ORDER BY ((((vt0.c0)AND(vt0.c0)))%((- (vt0.c0)))), ABS((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(vt0.c0)))%((- (vt0.c0)))), ABS((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ())) ORDER BY ((((vt0.c0)AND(vt0.c0)))%((- (vt0.c0)))), ABS((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(vt0.c0)))%((- (vt0.c0)))), ABS((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ())) ORDER BY ((((vt0.c0)AND(vt0.c0)))%((- (vt0.c0)))), ABS((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(TYPEOF(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(TYPEOF(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(TYPEOF(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(TYPEOF(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(TYPEOF(vt0.c0))));
SELECT COUNT(*) FROM v0, vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END IN (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END, vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END IN (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END, vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END IN (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END, vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END IN (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END, vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END IN (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END, vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0)) BETWEEN ((NULL)) AND ((HEX(DISTINCT vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((NULL)) AND ((HEX(DISTINCT vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0)) BETWEEN ((NULL)) AND ((HEX(DISTINCT vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((NULL)) AND ((HEX(DISTINCT vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0)) BETWEEN ((NULL)) AND ((HEX(DISTINCT vt0.c0)))));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(v0.c0)))) AND ((((vt0.c0)LIKE(v0.c0))))) WHERE ((((((((((NULL IN ()))AND('-749997761')))OR(v0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NULL IN ()))AND('-749997761')))OR(v0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(v0.c0)))) AND ((((vt0.c0)LIKE(v0.c0))))));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(v0.c0)))) AND ((((vt0.c0)LIKE(v0.c0))))) WHERE ((((((((((NULL IN ()))AND('-749997761')))OR(v0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NULL IN ()))AND('-749997761')))OR(v0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(v0.c0)))) AND ((((vt0.c0)LIKE(v0.c0))))));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(v0.c0)))) AND ((((vt0.c0)LIKE(v0.c0))))) WHERE ((((((((((NULL IN ()))AND('-749997761')))OR(v0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT * FROM v0 WHERE ((v0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((v0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((v0.c0 COLLATE BINARY IN ()));
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((((+ (vt0.c0)))|(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))|(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((((+ (vt0.c0)))|(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))|(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((((+ (vt0.c0)))|(vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))&(CAST(vt0.c0 AS TEXT))) WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END IN ())) ORDER BY (((v0.c0)>=(x'')) IN (INSTR(vt0.c0, v0.c0)));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END IN ())) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))&(CAST(vt0.c0 AS TEXT))) ORDER BY (((v0.c0)>=(x'')) IN (INSTR(vt0.c0, v0.c0))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))&(CAST(vt0.c0 AS TEXT))) WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END IN ())) ORDER BY (((v0.c0)>=(x'')) IN (INSTR(vt0.c0, v0.c0)));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END IN ())) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))&(CAST(vt0.c0 AS TEXT))) ORDER BY (((v0.c0)>=(x'')) IN (INSTR(vt0.c0, v0.c0))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))&(CAST(vt0.c0 AS TEXT))) WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END IN ())) ORDER BY (((v0.c0)>=(x'')) IN (INSTR(vt0.c0, v0.c0)));
SELECT ALL * FROM vt0 NOT INDEXED WHERE (((vt0.c0)>(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (((vt0.c0)>(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (((vt0.c0)>(vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) IS FALSE));
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY 0.15842652527160672 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY 0.15842652527160672 COLLATE BINARY);
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY 0.15842652527160672 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY 0.15842652527160672 COLLATE BINARY);
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY 0.15842652527160672 COLLATE BINARY;
SELECT COUNT(*) FROM v0 WHERE (((((((((v0.c0 COLLATE NOCASE)AND(HEX(DISTINCT NULL))))AND(CASE v0.c0  WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND((('k-R')<(v0.c0)))))AND((v0.c0 IN (v0.c0))))) ORDER BY ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (CAST('-293770263' AS BLOB)) AND (v0.c0 COLLATE BINARY)) ASC  NULLS LAST, ((((((v0.c0)OR(v0.c0)))OR(v0.c0))) BETWEEN (((x'') IS FALSE)) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0 COLLATE NOCASE)AND(HEX(DISTINCT NULL))))AND(CASE v0.c0  WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND((('k-R')<(v0.c0)))))AND((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (CAST('-293770263' AS BLOB)) AND (v0.c0 COLLATE BINARY)) ASC  NULLS LAST, ((((((v0.c0)OR(v0.c0)))OR(v0.c0))) BETWEEN (((x'') IS FALSE)) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (((((((((v0.c0 COLLATE NOCASE)AND(HEX(DISTINCT NULL))))AND(CASE v0.c0  WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND((('k-R')<(v0.c0)))))AND((v0.c0 IN (v0.c0))))) ORDER BY ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (CAST('-293770263' AS BLOB)) AND (v0.c0 COLLATE BINARY)) ASC  NULLS LAST, ((((((v0.c0)OR(v0.c0)))OR(v0.c0))) BETWEEN (((x'') IS FALSE)) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0 COLLATE NOCASE)AND(HEX(DISTINCT NULL))))AND(CASE v0.c0  WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND((('k-R')<(v0.c0)))))AND((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (CAST('-293770263' AS BLOB)) AND (v0.c0 COLLATE BINARY)) ASC  NULLS LAST, ((((((v0.c0)OR(v0.c0)))OR(v0.c0))) BETWEEN (((x'') IS FALSE)) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (((((((((v0.c0 COLLATE NOCASE)AND(HEX(DISTINCT NULL))))AND(CASE v0.c0  WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND((('k-R')<(v0.c0)))))AND((v0.c0 IN (v0.c0))))) ORDER BY ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (CAST('-293770263' AS BLOB)) AND (v0.c0 COLLATE BINARY)) ASC  NULLS LAST, ((((((v0.c0)OR(v0.c0)))OR(v0.c0))) BETWEEN (((x'') IS FALSE)) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0))));
SELECT ALL * FROM v0 NOT INDEXED WHERE (((((((((v0.c0 COLLATE NOCASE)AND(NULL)))OR(x'c564')))OR(CAST(v0.c0 AS BLOB))))OR((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0 COLLATE NOCASE)AND(NULL)))OR(x'c564')))OR(CAST(v0.c0 AS BLOB))))OR((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 NOT INDEXED WHERE (((((((((v0.c0 COLLATE NOCASE)AND(NULL)))OR(x'c564')))OR(CAST(v0.c0 AS BLOB))))OR((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0 COLLATE NOCASE)AND(NULL)))OR(x'c564')))OR(CAST(v0.c0 AS BLOB))))OR((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 NOT INDEXED WHERE (((((((((v0.c0 COLLATE NOCASE)AND(NULL)))OR(x'c564')))OR(CAST(v0.c0 AS BLOB))))OR((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (- (v0.c0)) COLLATE RTRIM WHERE (((ROUND(v0.c0, vt0.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((ROUND(v0.c0, vt0.c0)) NOTNULL)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (- (v0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (- (v0.c0)) COLLATE RTRIM WHERE (((ROUND(v0.c0, vt0.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((ROUND(v0.c0, vt0.c0)) NOTNULL)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (- (v0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (- (v0.c0)) COLLATE RTRIM WHERE (((ROUND(v0.c0, vt0.c0)) NOTNULL));
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((CASE v0.c0  WHEN 0Xfffffffff78934ee THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN '0.3638265076164465' WHEN v0.c0 THEN v0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((CASE v0.c0  WHEN 0Xfffffffff78934ee THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN '0.3638265076164465' WHEN v0.c0 THEN v0.c0 END)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((CASE v0.c0  WHEN 0Xfffffffff78934ee THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN '0.3638265076164465' WHEN v0.c0 THEN v0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((CASE v0.c0  WHEN 0Xfffffffff78934ee THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN '0.3638265076164465' WHEN v0.c0 THEN v0.c0 END)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((CASE v0.c0  WHEN 0Xfffffffff78934ee THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN '0.3638265076164465' WHEN v0.c0 THEN v0.c0 END))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (x'613f') ORDER BY CAST((+ (vt0.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'613f') IS TRUE)  as count FROM v0, vt0 ORDER BY CAST((+ (vt0.c0)) AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (x'613f') ORDER BY CAST((+ (vt0.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'613f') IS TRUE)  as count FROM v0, vt0 ORDER BY CAST((+ (vt0.c0)) AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (x'613f') ORDER BY CAST((+ (vt0.c0)) AS TEXT)  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(LOWER(v0.c0) AS TEXT)) ORDER BY (NOT (666240990 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER(v0.c0) AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY (NOT (666240990 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(LOWER(v0.c0) AS TEXT)) ORDER BY (NOT (666240990 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER(v0.c0) AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY (NOT (666240990 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(LOWER(v0.c0) AS TEXT)) ORDER BY (NOT (666240990 COLLATE NOCASE));
SELECT ALL * FROM v0, vt0 WHERE ((NOT (CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((((CASE WHEN '-348294208' THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END)AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))))))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((CASE WHEN '-348294208' THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END)AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))))))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) DESC);
SELECT ALL * FROM v0, vt0 WHERE ((NOT (CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((((CASE WHEN '-348294208' THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END)AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))))))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((CASE WHEN '-348294208' THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END)AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))))))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) DESC);
SELECT ALL * FROM v0, vt0 WHERE ((NOT (CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((((CASE WHEN '-348294208' THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END)AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))))))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) DESC;
SELECT * FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((v0.c0 IN ())) ORDER BY CAST((NOT (v0.c0)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST((NOT (v0.c0)) AS REAL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((v0.c0 IN ())) ORDER BY CAST((NOT (v0.c0)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST((NOT (v0.c0)) AS REAL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((v0.c0 IN ())) ORDER BY CAST((NOT (v0.c0)) AS REAL) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((((~ (vt0.c0)))OR(((vt0.c0)+(vt0.c0)))))AND(((vt0.c0)OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((~ (vt0.c0)))OR(((vt0.c0)+(vt0.c0)))))AND(((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((~ (vt0.c0)))OR(((vt0.c0)+(vt0.c0)))))AND(((vt0.c0)OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((~ (vt0.c0)))OR(((vt0.c0)+(vt0.c0)))))AND(((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((~ (vt0.c0)))OR(((vt0.c0)+(vt0.c0)))))AND(((vt0.c0)OR(vt0.c0)))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.7595022795479286))+((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT vt0.c0, 0.7595022795479286))+((- (v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.7595022795479286))+((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT vt0.c0, 0.7595022795479286))+((- (v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.7595022795479286))+((- (v0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN 0x3eb87dab ELSE vt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN 0X3eb87dab ELSE vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN 0x3eb87dab ELSE vt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN 0X3eb87dab ELSE vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN 0x3eb87dab ELSE vt0.c0 END) ISNULL));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY ((((~ (vt0.c0))))>((((vt0.c0)*(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((~ (vt0.c0))))>((((vt0.c0)*(vt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY ((((~ (vt0.c0))))>((((vt0.c0)*(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((~ (vt0.c0))))>((((vt0.c0)*(vt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY ((((~ (vt0.c0))))>((((vt0.c0)*(vt0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (CAST(NULL AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(NULL AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(NULL AS TEXT) COLLATE BINARY);
SELECT * FROM v0 WHERE (TRIM(DISTINCT ((v0.c0)AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((v0.c0)AND(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (TRIM(DISTINCT ((v0.c0)AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((v0.c0)AND(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (TRIM(DISTINCT ((v0.c0)AND(v0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0))<=((vt0.c0))) IN ())) ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)GLOB(vt0.c0)))))OR(((vt0.c0)-(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0))<=((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)GLOB(vt0.c0)))))OR(((vt0.c0)-(vt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0))<=((vt0.c0))) IN ())) ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)GLOB(vt0.c0)))))OR(((vt0.c0)-(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0))<=((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)GLOB(vt0.c0)))))OR(((vt0.c0)-(vt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0))<=((vt0.c0))) IN ())) ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)GLOB(vt0.c0)))))OR(((vt0.c0)-(vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (LIKELY(CAST(v0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CAST(v0.c0 AS REAL))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (LIKELY(CAST(v0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CAST(v0.c0 AS REAL))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (LIKELY(CAST(v0.c0 AS REAL)));
SELECT ALL COUNT(*) FROM v0 WHERE (((LAST_INSERT_ROWID()) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID()) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((LAST_INSERT_ROWID()) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID()) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((LAST_INSERT_ROWID()) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c0) ORDER BY v0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c0) ORDER BY v0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c0) ORDER BY v0.c0 DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE (LIKELY((v0.c0 IN ()))) ORDER BY (vt0.c0 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY((v0.c0 IN ()))) IS TRUE)  as count FROM vt0, v0 ORDER BY (vt0.c0 IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (LIKELY((v0.c0 IN ()))) ORDER BY (vt0.c0 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY((v0.c0 IN ()))) IS TRUE)  as count FROM vt0, v0 ORDER BY (vt0.c0 IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (LIKELY((v0.c0 IN ()))) ORDER BY (vt0.c0 IN ()) ASC  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE ((+ (DATETIME(vt0.c0, v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT (((+ (DATETIME(vt0.c0, v0.c0, v0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((+ (DATETIME(vt0.c0, v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT (((+ (DATETIME(vt0.c0, v0.c0, v0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((+ (DATETIME(vt0.c0, v0.c0, v0.c0))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOTNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOTNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((NULL) NOTNULL));
SELECT ALL COUNT(*) FROM v0 WHERE ((('') IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((('') IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((('') IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((('') IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((('') IS FALSE));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(x'061b8dfe' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(x'061b8dfe' AS REAL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(x'061b8dfe' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(x'061b8dfe' AS REAL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(x'061b8dfe' AS REAL));
SELECT ALL COUNT(*) FROM vt0 WHERE (STRFTIME(vt0.c0 COLLATE NOCASE, JULIANDAY(vt0.c0, vt0.c0, vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(vt0.c0 COLLATE NOCASE, JULIANDAY(vt0.c0, vt0.c0, vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (STRFTIME(vt0.c0 COLLATE NOCASE, JULIANDAY(vt0.c0, vt0.c0, vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(vt0.c0 COLLATE NOCASE, JULIANDAY(vt0.c0, vt0.c0, vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (STRFTIME(vt0.c0 COLLATE NOCASE, JULIANDAY(vt0.c0, vt0.c0, vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL * FROM v0, vt0 WHERE (CAST(((v0.c0)>(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)>(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (CAST(((v0.c0)>(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)>(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (CAST(((v0.c0)>(vt0.c0)) AS INTEGER));
SELECT ALL * FROM vt0, v0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN vt0.c0 THEN ((vt0.c0)OR(vt0.c0)) WHEN TYPEOF(DISTINCT v0.c0) THEN CASE WHEN v0.c0 THEN v0.c0 END WHEN NULL THEN (((vt0.c0))>=((vt0.c0))) ELSE ((vt0.c0) NOT BETWEEN (v0.c0) AND (2.103037396E9)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) IS TRUE)  WHEN vt0.c0 THEN ((vt0.c0)OR(vt0.c0)) WHEN TYPEOF(DISTINCT v0.c0) THEN CASE WHEN v0.c0 THEN v0.c0 END WHEN NULL THEN (((vt0.c0))>=((vt0.c0))) ELSE ((vt0.c0) NOT BETWEEN (v0.c0) AND (2.103037396E9)) END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN vt0.c0 THEN ((vt0.c0)OR(vt0.c0)) WHEN TYPEOF(DISTINCT v0.c0) THEN CASE WHEN v0.c0 THEN v0.c0 END WHEN NULL THEN (((vt0.c0))>=((vt0.c0))) ELSE ((vt0.c0) NOT BETWEEN (v0.c0) AND (2.103037396E9)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) IS TRUE)  WHEN vt0.c0 THEN ((vt0.c0)OR(vt0.c0)) WHEN TYPEOF(DISTINCT v0.c0) THEN CASE WHEN v0.c0 THEN v0.c0 END WHEN NULL THEN (((vt0.c0))>=((vt0.c0))) ELSE ((vt0.c0) NOT BETWEEN (v0.c0) AND (2.103037396E9)) END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN vt0.c0 THEN ((vt0.c0)OR(vt0.c0)) WHEN TYPEOF(DISTINCT v0.c0) THEN CASE WHEN v0.c0 THEN v0.c0 END WHEN NULL THEN (((vt0.c0))>=((vt0.c0))) ELSE ((vt0.c0) NOT BETWEEN (v0.c0) AND (2.103037396E9)) END);
SELECT ALL * FROM vt0 WHERE (LOWER(CHANGES())) ORDER BY ((vt0.c0) ISNULL) DESC, (((vt0.c0 IN ()))AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((LOWER(CHANGES())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) ISNULL) DESC, (((vt0.c0 IN ()))AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) DESC);
SELECT ALL * FROM vt0 WHERE (LOWER(CHANGES())) ORDER BY ((vt0.c0) ISNULL) DESC, (((vt0.c0 IN ()))AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((LOWER(CHANGES())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) ISNULL) DESC, (((vt0.c0 IN ()))AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (((CAST(v0.c0 AS NUMERIC))<=(v0.c0))) ORDER BY (- (NULL)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS NUMERIC))<=(v0.c0))) IS TRUE)  as count FROM v0, vt0 ORDER BY (- (NULL)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (((CAST(v0.c0 AS NUMERIC))<=(v0.c0))) ORDER BY (- (NULL)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS NUMERIC))<=(v0.c0))) IS TRUE)  as count FROM v0, vt0 ORDER BY (- (NULL)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (((CAST(v0.c0 AS NUMERIC))<=(v0.c0))) ORDER BY (- (NULL)) COLLATE RTRIM DESC;
SELECT ALL * FROM v0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (x'');
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c0)))<<(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))<<(CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c0)))<<(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))<<(CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c0)))<<(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS REAL)) ORDER BY v0.c0 COLLATE BINARY ASC, (((NOT ('D4M'))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((- (v0.c0))))  NULLS LAST, v0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS REAL)) IS TRUE)  as count FROM v0 ORDER BY v0.c0 COLLATE BINARY ASC, (((NOT ('D4M'))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((- (v0.c0))))  NULLS LAST, v0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS REAL)) ORDER BY v0.c0 COLLATE BINARY ASC, (((NOT ('D4M'))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((- (v0.c0))))  NULLS LAST, v0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS REAL)) IS TRUE)  as count FROM v0 ORDER BY v0.c0 COLLATE BINARY ASC, (((NOT ('D4M'))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((- (v0.c0))))  NULLS LAST, v0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS REAL)) ORDER BY v0.c0 COLLATE BINARY ASC, (((NOT ('D4M'))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((- (v0.c0))))  NULLS LAST, v0.c0 DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) NOT NULL))OR(((vt0.c0)LIKE(vt0.c0)))))AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOT NULL))OR(((vt0.c0)LIKE(vt0.c0)))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) NOT NULL))OR(((vt0.c0)LIKE(vt0.c0)))))AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOT NULL))OR(((vt0.c0)LIKE(vt0.c0)))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) NOT NULL))OR(((vt0.c0)LIKE(vt0.c0)))))AND((vt0.c0 IN ()))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)) BETWEEN (((((v0.c0))<((v0.c0))))) AND ((CASE WHEN v0.c0 THEN v0.c0 END)))) ORDER BY ((NULL)/(vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((((v0.c0))<((v0.c0))))) AND ((CASE WHEN v0.c0 THEN v0.c0 END)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((NULL)/(vt0.c0)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)) BETWEEN (((((v0.c0))<((v0.c0))))) AND ((CASE WHEN v0.c0 THEN v0.c0 END)))) ORDER BY ((NULL)/(vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((((v0.c0))<((v0.c0))))) AND ((CASE WHEN v0.c0 THEN v0.c0 END)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((NULL)/(vt0.c0)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)) BETWEEN (((((v0.c0))<((v0.c0))))) AND ((CASE WHEN v0.c0 THEN v0.c0 END)))) ORDER BY ((NULL)/(vt0.c0)) ASC  NULLS FIRST;
SELECT * FROM v0 WHERE (((TRIM(v0.c0))<(LIKELY(0.14105276899302732)))) ORDER BY (NOT (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((TRIM(v0.c0))<(LIKELY(0.14105276899302732)))) IS TRUE)  as count FROM v0 ORDER BY (NOT (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC);
SELECT * FROM v0 WHERE (((TRIM(v0.c0))<(LIKELY(0.14105276899302732)))) ORDER BY (NOT (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((TRIM(v0.c0))<(LIKELY(0.14105276899302732)))) IS TRUE)  as count FROM v0 ORDER BY (NOT (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC);
SELECT * FROM v0 WHERE (((TRIM(v0.c0))<(LIKELY(0.14105276899302732)))) ORDER BY (NOT (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC;
SELECT ALL * FROM vt0 WHERE (CAST((('1953361129')>=(vt0.c0)) AS REAL)) ORDER BY (- (((vt0.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((('1953361129')>=(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0) IS TRUE)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST((('1953361129')>=(vt0.c0)) AS REAL)) ORDER BY (- (((vt0.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((('1953361129')>=(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0) IS TRUE)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST((('1953361129')>=(vt0.c0)) AS REAL)) ORDER BY (- (((vt0.c0) IS TRUE)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON '-372832306' WHERE ((((~ (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON '-372832306');
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON '-372832306' WHERE ((((~ (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON '-372832306');
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON '-372832306' WHERE ((((~ (vt0.c0))) IS TRUE));
SELECT * FROM vt0 CROSS JOIN v0 ON TIME(v0.c0, v0.c0, '796087758', v0.c0, v0.c0) COLLATE NOCASE WHERE (CAST(json_type(vt0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(json_type(vt0.c0) AS BLOB)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON TIME(v0.c0, v0.c0, '796087758', v0.c0, v0.c0) COLLATE NOCASE);
SELECT * FROM vt0 CROSS JOIN v0 ON TIME(v0.c0, v0.c0, '796087758', v0.c0, v0.c0) COLLATE NOCASE WHERE (CAST(json_type(vt0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(json_type(vt0.c0) AS BLOB)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON TIME(v0.c0, v0.c0, '796087758', v0.c0, v0.c0) COLLATE NOCASE);
SELECT COUNT(*) FROM v0 NOT INDEXED LEFT OUTER JOIN vt0 ON CASE WHEN ((((v0.c0)OR(0.7011478248171482)))AND(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE (((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0))) END WHERE ((((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)<(vt0.c0)), ((vt0.c0)IS NOT(vt0.c0)), (vt0.c0 IN (vt0.c0)))) AND ((HEX(vt0.c0), (((v0.c0))>=((v0.c0))), CAST(v0.c0 AS TEXT))))) ORDER BY (((x'bed8', v0.c0, v0.c0))==((v0.c0, vt0.c0, v0.c0))) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)<(vt0.c0)), ((vt0.c0)IS NOT(vt0.c0)), (vt0.c0 IN (vt0.c0)))) AND ((HEX(vt0.c0), (((v0.c0))>=((v0.c0))), CAST(v0.c0 AS TEXT))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON CASE WHEN ((((v0.c0)OR(0.7011478248171482)))AND(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE (((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0))) END ORDER BY (((x'bed8', v0.c0, v0.c0))=((v0.c0, vt0.c0, v0.c0))) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM v0 NOT INDEXED LEFT OUTER JOIN vt0 ON CASE WHEN ((((v0.c0)OR(0.7011478248171482)))AND(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE (((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0))) END WHERE ((((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)<(vt0.c0)), ((vt0.c0)IS NOT(vt0.c0)), (vt0.c0 IN (vt0.c0)))) AND ((HEX(vt0.c0), (((v0.c0))>=((v0.c0))), CAST(v0.c0 AS TEXT))))) ORDER BY (((x'bed8', v0.c0, v0.c0))==((v0.c0, vt0.c0, v0.c0))) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)<(vt0.c0)), ((vt0.c0)IS NOT(vt0.c0)), (vt0.c0 IN (vt0.c0)))) AND ((HEX(vt0.c0), (((v0.c0))>=((v0.c0))), CAST(v0.c0 AS TEXT))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON CASE WHEN ((((v0.c0)OR(0.7011478248171482)))AND(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE (((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0))) END ORDER BY (((x'bed8', v0.c0, v0.c0))=((v0.c0, vt0.c0, v0.c0))) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM v0 NOT INDEXED LEFT OUTER JOIN vt0 ON CASE WHEN ((((v0.c0)OR(0.7011478248171482)))AND(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE (((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0))) END WHERE ((((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)<(vt0.c0)), ((vt0.c0)IS NOT(vt0.c0)), (vt0.c0 IN (vt0.c0)))) AND ((HEX(vt0.c0), (((v0.c0))>=((v0.c0))), CAST(v0.c0 AS TEXT))))) ORDER BY (((x'bed8', v0.c0, v0.c0))==((v0.c0, vt0.c0, v0.c0))) COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT CAST(vt0.c0 AS BLOB))) ORDER BY (+ ((+ (0.6415932327728129))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0 ORDER BY (+ ((+ (0.6415932327728129)))));
SELECT COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT CAST(vt0.c0 AS BLOB))) ORDER BY (+ ((+ (0.6415932327728129))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0 ORDER BY (+ ((+ (0.6415932327728129)))));
SELECT COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT CAST(vt0.c0 AS BLOB))) ORDER BY (+ ((+ (0.6415932327728129))));
SELECT * FROM v0 NATURAL JOIN vt0 WHERE ((((v0.c0)) NOT BETWEEN ((((vt0.c0)%(vt0.c0)))) AND ((((((v0.c0)AND(NULL)))OR(v0.c0)))))) ORDER BY load_extension(((vt0.c0) ISNULL), 0.684128980724686)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((vt0.c0)%(vt0.c0)))) AND ((((((v0.c0)AND(NULL)))OR(v0.c0)))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY load_extension(((vt0.c0) ISNULL), 0.684128980724686)  NULLS FIRST);
SELECT * FROM v0 NATURAL JOIN vt0 WHERE ((((v0.c0)) NOT BETWEEN ((((vt0.c0)%(vt0.c0)))) AND ((((((v0.c0)AND(NULL)))OR(v0.c0)))))) ORDER BY load_extension(((vt0.c0) ISNULL), 0.684128980724686)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((vt0.c0)%(vt0.c0)))) AND ((((((v0.c0)AND(NULL)))OR(v0.c0)))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY load_extension(((vt0.c0) ISNULL), 0.684128980724686)  NULLS FIRST);
SELECT * FROM v0 NATURAL JOIN vt0 WHERE ((((v0.c0)) NOT BETWEEN ((((vt0.c0)%(vt0.c0)))) AND ((((((v0.c0)AND(NULL)))OR(v0.c0)))))) ORDER BY load_extension(((vt0.c0) ISNULL), 0.684128980724686)  NULLS FIRST;
SELECT ALL * FROM v0, vt0 WHERE (('P[2dX|G	' IN ())) ORDER BY ((((((v0.c0)AND(v0.c0)))OR(0Xfffffffffd1bfe43)))>>(((('K-R', v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, v0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((('P[2dX|G	' IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((v0.c0)AND(v0.c0)))OR(0xfffffffffd1bfe43)))>>(((('K-R', v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, v0.c0, v0.c0))))));
SELECT ALL * FROM v0, vt0 WHERE (('P[2dX|G	' IN ())) ORDER BY ((((((v0.c0)AND(v0.c0)))OR(0Xfffffffffd1bfe43)))>>(((('K-R', v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, v0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((('P[2dX|G	' IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((v0.c0)AND(v0.c0)))OR(0xfffffffffd1bfe43)))>>(((('K-R', v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, v0.c0, v0.c0))))));
SELECT ALL * FROM v0, vt0 WHERE (('P[2dX|G	' IN ())) ORDER BY ((((((v0.c0)AND(v0.c0)))OR(0Xfffffffffd1bfe43)))>>(((('K-R', v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, v0.c0, v0.c0)))));
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(v0.c0 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(v0.c0 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(v0.c0 AS INTEGER) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT * FROM vt0 WHERE ((((vt0.c0))>((vt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0))>((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0))>((vt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0))>((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0))>((vt0.c0 COLLATE BINARY))));
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))*(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((((((('855438653'))<((v0.c0))))OR(0.5934920436329159)))OR(x'')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))*(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((((('855438653'))<((v0.c0))))OR(0.5934920436329159)))OR(x'')) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))*(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((((((('855438653'))<((v0.c0))))OR(0.5934920436329159)))OR(x'')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))*(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((((('855438653'))<((v0.c0))))OR(0.5934920436329159)))OR(x'')) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))*(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((((((('855438653'))<((v0.c0))))OR(0.5934920436329159)))OR(x'')) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON ((v0.c0 COLLATE NOCASE)IS(vt0.c0 COLLATE NOCASE)) WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))%(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))%(vt0.c0))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((v0.c0 COLLATE NOCASE)IS(vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON ((v0.c0 COLLATE NOCASE)IS(vt0.c0 COLLATE NOCASE)) WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))%(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))%(vt0.c0))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((v0.c0 COLLATE NOCASE)IS(vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON ((v0.c0 COLLATE NOCASE)IS(vt0.c0 COLLATE NOCASE)) WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))%(vt0.c0)));
SELECT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN ('hvy姜CXa,') AND (v0.c0)))|(((v0.c0)<=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN ('hvy姜CXa,') AND (v0.c0)))|(((v0.c0)<=(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN ('hvy姜CXa,') AND (v0.c0)))|(((v0.c0)<=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN ('hvy姜CXa,') AND (v0.c0)))|(((v0.c0)<=(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN ('hvy姜CXa,') AND (v0.c0)))|(((v0.c0)<=(v0.c0)))));
SELECT * FROM v0 WHERE (((SQLITE_SOURCE_ID()) NOT BETWEEN (v0.c0) AND (((v0.c0) BETWEEN (v0.c0) AND (0.44548202438798823)))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_SOURCE_ID()) NOT BETWEEN (v0.c0) AND (((v0.c0) BETWEEN (v0.c0) AND (0.44548202438798823))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((SQLITE_SOURCE_ID()) NOT BETWEEN (v0.c0) AND (((v0.c0) BETWEEN (v0.c0) AND (0.44548202438798823)))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_SOURCE_ID()) NOT BETWEEN (v0.c0) AND (((v0.c0) BETWEEN (v0.c0) AND (0.44548202438798823))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((SQLITE_SOURCE_ID()) NOT BETWEEN (v0.c0) AND (((v0.c0) BETWEEN (v0.c0) AND (0.44548202438798823)))));
SELECT ALL COUNT(*) FROM v0 WHERE (json_type(((v0.c0) IS FALSE))) ORDER BY ((((CAST(v0.c0 AS NUMERIC))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR((- (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_type(((v0.c0) IS FALSE))) IS TRUE)  as count FROM v0 ORDER BY ((((CAST(v0.c0 AS NUMERIC))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR((- (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (json_type(((v0.c0) IS FALSE))) ORDER BY ((((CAST(v0.c0 AS NUMERIC))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR((- (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_type(((v0.c0) IS FALSE))) IS TRUE)  as count FROM v0 ORDER BY ((((CAST(v0.c0 AS NUMERIC))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR((- (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (json_type(((v0.c0) IS FALSE))) ORDER BY ((((CAST(v0.c0 AS NUMERIC))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR((- (v0.c0))));
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (- ((('-1669814583') BETWEEN (v0.c0) AND (vt0.c0)))) WHERE ((((~ (vt0.c0))) NOT BETWEEN ('1677253938') AND (CAST(v0.c0 AS TEXT)))) ORDER BY (NOT (((v0.c0)<(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) NOT BETWEEN ('1677253938') AND (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (- ((('-1669814583') BETWEEN (v0.c0) AND (vt0.c0)))) ORDER BY (NOT (((v0.c0)<(vt0.c0)))));
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (- ((('-1669814583') BETWEEN (v0.c0) AND (vt0.c0)))) WHERE ((((~ (vt0.c0))) NOT BETWEEN ('1677253938') AND (CAST(v0.c0 AS TEXT)))) ORDER BY (NOT (((v0.c0)<(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) NOT BETWEEN ('1677253938') AND (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (- ((('-1669814583') BETWEEN (v0.c0) AND (vt0.c0)))) ORDER BY (NOT (((v0.c0)<(vt0.c0)))));
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (- ((('-1669814583') BETWEEN (v0.c0) AND (vt0.c0)))) WHERE ((((~ (vt0.c0))) NOT BETWEEN ('1677253938') AND (CAST(v0.c0 AS TEXT)))) ORDER BY (NOT (((v0.c0)<(vt0.c0))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((json_insert(vt0.c0, vt0.c0, vt0.c0))<<((((v0.c0))>=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((json_insert(vt0.c0, vt0.c0, vt0.c0))<<((((v0.c0))>=((vt0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((json_insert(vt0.c0, vt0.c0, vt0.c0))<<((((v0.c0))>=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((json_insert(vt0.c0, vt0.c0, vt0.c0))<<((((v0.c0))>=((vt0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((json_insert(vt0.c0, vt0.c0, vt0.c0))<<((((v0.c0))>=((vt0.c0))))));
SELECT ALL COUNT(*) FROM v0 WHERE ((~ ((((v0.c0))<=((v0.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((v0.c0))<=((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ ((((v0.c0))<=((v0.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((v0.c0))<=((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ ((((v0.c0))<=((v0.c0))))));
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (((vt0.c0)/(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)/(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (((vt0.c0)/(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)/(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (((vt0.c0)/(v0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM v0 WHERE (((((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR((0xffffffffc4940402 IN (0.4717332889896655)))))AND(((v0.c0) ISNULL)))) ORDER BY (((v0.c0) NOTNULL) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR((0Xffffffffc4940402 IN (0.4717332889896655)))))AND(((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0) NOTNULL) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR((0xffffffffc4940402 IN (0.4717332889896655)))))AND(((v0.c0) ISNULL)))) ORDER BY (((v0.c0) NOTNULL) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR((0Xffffffffc4940402 IN (0.4717332889896655)))))AND(((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0) NOTNULL) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR((0xffffffffc4940402 IN (0.4717332889896655)))))AND(((v0.c0) ISNULL)))) ORDER BY (((v0.c0) NOTNULL) IN ())  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0 IN (v0.c0)))/(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(v0.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (0.6940774488261847) AND (v0.c0))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (v0.c0)))/(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0) NOT BETWEEN (0.6940774488261847) AND (v0.c0))) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0 IN (v0.c0)))/(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(v0.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (0.6940774488261847) AND (v0.c0))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (v0.c0)))/(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0) NOT BETWEEN (0.6940774488261847) AND (v0.c0))) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0 IN (v0.c0)))/(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(v0.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (0.6940774488261847) AND (v0.c0))) IS TRUE) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 NOT INDEXED WHERE (((v0.c0) BETWEEN (0.022197545072556557) AND (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (0.022197545072556557) AND (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 NOT INDEXED WHERE (((v0.c0) BETWEEN (0.022197545072556557) AND (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (0.022197545072556557) AND (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 NOT INDEXED WHERE (((v0.c0) BETWEEN (0.022197545072556557) AND (v0.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0, v0 WHERE (((-251460996)/((('855438653')<=(NULL)))));
SELECT SUM(count) FROM (SELECT ((((-251460996)/((('855438653')<=(NULL))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((-251460996)/((('855438653')<=(NULL)))));
SELECT SUM(count) FROM (SELECT ((((-251460996)/((('855438653')<=(NULL))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((-251460996)/((('855438653')<=(NULL)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((((((((((vt0.c0)/(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))OR(CAST(NULL AS BLOB))))OR(CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)))OR(((v0.c0)&(vt0.c0)))) WHERE (((SQLITE_COMPILEOPTION_GET(vt0.c0)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((((v0.c0)OR(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_GET(vt0.c0)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((((v0.c0)OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((((((((((vt0.c0)/(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))OR(CAST(NULL AS BLOB))))OR(CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)))OR(((v0.c0)&(vt0.c0)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((((((((((vt0.c0)/(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))OR(CAST(NULL AS BLOB))))OR(CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)))OR(((v0.c0)&(vt0.c0)))) WHERE (((SQLITE_COMPILEOPTION_GET(vt0.c0)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((((v0.c0)OR(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_GET(vt0.c0)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((((v0.c0)OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((((((((((vt0.c0)/(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))OR(CAST(NULL AS BLOB))))OR(CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)))OR(((v0.c0)&(vt0.c0)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((((((((((vt0.c0)/(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))OR(CAST(NULL AS BLOB))))OR(CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)))OR(((v0.c0)&(vt0.c0)))) WHERE (((SQLITE_COMPILEOPTION_GET(vt0.c0)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((((v0.c0)OR(v0.c0)))AND(v0.c0)))));
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)<>(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)<>(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)<>(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)<>(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)<>(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((((x'') NOTNULL)) NOTNULL) WHERE ((~ (vt0.c0 COLLATE RTRIM))) ORDER BY x'4ac0';
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((x'') NOTNULL)) NOTNULL) ORDER BY x'4ac0');
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((((x'') NOTNULL)) NOTNULL) WHERE ((~ (vt0.c0 COLLATE RTRIM))) ORDER BY x'4ac0';
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((x'') NOTNULL)) NOTNULL) ORDER BY x'4ac0');
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((((x'') NOTNULL)) NOTNULL) WHERE ((~ (vt0.c0 COLLATE RTRIM))) ORDER BY x'4ac0';
SELECT * FROM vt0, v0 WHERE (((((vt0.c0) IS FALSE))OR(v0.c0 COLLATE BINARY))) ORDER BY (((v0.c0 IN ())) IS TRUE)  NULLS FIRST, (((((((vt0.c0, v0.c0, vt0.c0)) BETWEEN ((x'3214', vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))AND((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND((NOT (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE))OR(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0 IN ())) IS TRUE)  NULLS FIRST, (((((((vt0.c0, v0.c0, vt0.c0)) BETWEEN ((x'3214', vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))AND((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND((NOT (vt0.c0)))) ASC);
SELECT * FROM vt0, v0 WHERE (((((vt0.c0) IS FALSE))OR(v0.c0 COLLATE BINARY))) ORDER BY (((v0.c0 IN ())) IS TRUE)  NULLS FIRST, (((((((vt0.c0, v0.c0, vt0.c0)) BETWEEN ((x'3214', vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))AND((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND((NOT (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE))OR(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0 IN ())) IS TRUE)  NULLS FIRST, (((((((vt0.c0, v0.c0, vt0.c0)) BETWEEN ((x'3214', vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))AND((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND((NOT (vt0.c0)))) ASC);
SELECT * FROM vt0, v0 WHERE (((((vt0.c0) IS FALSE))OR(v0.c0 COLLATE BINARY))) ORDER BY (((v0.c0 IN ())) IS TRUE)  NULLS FIRST, (((((((vt0.c0, v0.c0, vt0.c0)) BETWEEN ((x'3214', vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))AND((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND((NOT (vt0.c0)))) ASC;
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (((+ (v0.c0)))!=(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) WHERE ((((~ (v0.c0))) NOTNULL)) ORDER BY ((+ (vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (((+ (v0.c0)))<>(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY ((+ (vt0.c0)) IN ()) ASC);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (((+ (v0.c0)))!=(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) WHERE ((((~ (v0.c0))) NOTNULL)) ORDER BY ((+ (vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (((+ (v0.c0)))<>(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY ((+ (vt0.c0)) IN ()) ASC);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (((+ (v0.c0)))!=(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) WHERE ((((~ (v0.c0))) NOTNULL)) ORDER BY ((+ (vt0.c0)) IN ()) ASC;
SELECT ALL * FROM v0, vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)OR(v0.c0)))/(v0.c0 COLLATE RTRIM))) ORDER BY (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ((+ (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)OR(v0.c0)))/(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ((+ (v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)OR(v0.c0)))/(v0.c0 COLLATE RTRIM))) ORDER BY (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ((+ (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)OR(v0.c0)))/(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ((+ (v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)OR(v0.c0)))/(v0.c0 COLLATE RTRIM))) ORDER BY (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ((+ (v0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((vt0.c0 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((vt0.c0 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((vt0.c0 COLLATE BINARY) ISNULL));
SELECT ALL COUNT(*) FROM v0 WHERE (0.7860457037178067);
SELECT SUM(count) FROM (SELECT ((0.7860457037178067) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (0.7860457037178067);
SELECT SUM(count) FROM (SELECT ((0.7860457037178067) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (0.7860457037178067);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE)) ORDER BY CAST(vt0.c0 AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE)) ORDER BY CAST(vt0.c0 AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE)) ORDER BY CAST(vt0.c0 AS INTEGER) ASC;
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) IS FALSE));
SELECT * FROM v0, vt0 WHERE ((~ (((v0.c0)OR(vt0.c0))))) ORDER BY ((((x'4015' IN ())))>((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0))))) DESC  NULLS FIRST, ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)OR(vt0.c0)))OR(((x'37e9e59c') BETWEEN (v0.c0) AND (vt0.c0)))) DESC, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((x'4015' IN ())))>((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0))))) DESC  NULLS FIRST, ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)OR(vt0.c0)))OR(((x'37e9e59c') BETWEEN (v0.c0) AND (vt0.c0)))) DESC, v0.c0  NULLS LAST);
SELECT * FROM v0, vt0 WHERE ((~ (((v0.c0)OR(vt0.c0))))) ORDER BY ((((x'4015' IN ())))>((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0))))) DESC  NULLS FIRST, ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)OR(vt0.c0)))OR(((x'37e9e59c') BETWEEN (v0.c0) AND (vt0.c0)))) DESC, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((x'4015' IN ())))>((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0))))) DESC  NULLS FIRST, ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)OR(vt0.c0)))OR(((x'37e9e59c') BETWEEN (v0.c0) AND (vt0.c0)))) DESC, v0.c0  NULLS LAST);
SELECT * FROM v0, vt0 WHERE ((~ (((v0.c0)OR(vt0.c0))))) ORDER BY ((((x'4015' IN ())))>((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0))))) DESC  NULLS FIRST, ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)OR(vt0.c0)))OR(((x'37e9e59c') BETWEEN (v0.c0) AND (vt0.c0)))) DESC, v0.c0  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (CASE IFNULL(DISTINCT v0.c0, v0.c0)  WHEN CASE v0.c0  WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 1677253938 ELSE v0.c0 END THEN (((v0.c0))>=((v0.c0))) ELSE (v0.c0 IN ()) END) ORDER BY CASE WHEN 0x34d97836 THEN ((v0.c0) NOTNULL) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE IFNULL(DISTINCT v0.c0, v0.c0)  WHEN CASE v0.c0  WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 1677253938 ELSE v0.c0 END THEN (((v0.c0))>=((v0.c0))) ELSE (v0.c0 IN ()) END) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN 0X34d97836 THEN ((v0.c0) NOTNULL) END DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CASE IFNULL(DISTINCT v0.c0, v0.c0)  WHEN CASE v0.c0  WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 1677253938 ELSE v0.c0 END THEN (((v0.c0))>=((v0.c0))) ELSE (v0.c0 IN ()) END) ORDER BY CASE WHEN 0x34d97836 THEN ((v0.c0) NOTNULL) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE IFNULL(DISTINCT v0.c0, v0.c0)  WHEN CASE v0.c0  WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 1677253938 ELSE v0.c0 END THEN (((v0.c0))>=((v0.c0))) ELSE (v0.c0 IN ()) END) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN 0X34d97836 THEN ((v0.c0) NOTNULL) END DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CASE IFNULL(DISTINCT v0.c0, v0.c0)  WHEN CASE v0.c0  WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 1677253938 ELSE v0.c0 END THEN (((v0.c0))>=((v0.c0))) ELSE (v0.c0 IN ()) END) ORDER BY CASE WHEN 0x34d97836 THEN ((v0.c0) NOTNULL) END DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY vt0.c0 ASC, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC, vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY vt0.c0 ASC, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC, vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY vt0.c0 ASC, vt0.c0;
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0)!=(v0.c0)) COLLATE RTRIM) ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<>(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0)!=(v0.c0)) COLLATE RTRIM) ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<>(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0)!=(v0.c0)) COLLATE RTRIM) ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) IS TRUE);
SELECT * FROM vt0, v0 WHERE (((((vt0.c0)<=('796087758'))) BETWEEN (json_array_length(v0.c0, v0.c0)) AND (((x'37de4b46')+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=('796087758'))) BETWEEN (json_array_length(v0.c0, v0.c0)) AND (((x'37de4b46')+(vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((vt0.c0)<=('796087758'))) BETWEEN (json_array_length(v0.c0, v0.c0)) AND (((x'37de4b46')+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=('796087758'))) BETWEEN (json_array_length(v0.c0, v0.c0)) AND (((x'37de4b46')+(vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((vt0.c0)<=('796087758'))) BETWEEN (json_array_length(v0.c0, v0.c0)) AND (((x'37de4b46')+(vt0.c0)))));
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0, x'', vt0.c0))>((v0.c0, 0.547337089486857, v0.c0))) IN ())) ORDER BY (~ (((-3.2580673E7)/(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, x'', vt0.c0))>((v0.c0, 0.547337089486857, v0.c0))) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ (((-3.2580673E7)/(vt0.c0)))) ASC);
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0, x'', vt0.c0))>((v0.c0, 0.547337089486857, v0.c0))) IN ())) ORDER BY (~ (((-3.2580673E7)/(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, x'', vt0.c0))>((v0.c0, 0.547337089486857, v0.c0))) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ (((-3.2580673E7)/(vt0.c0)))) ASC);
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0, x'', vt0.c0))>((v0.c0, 0.547337089486857, v0.c0))) IN ())) ORDER BY (~ (((-3.2580673E7)/(vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 IN ((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ((- (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 IN ((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ((- (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 IN ((- (v0.c0)))));
SELECT * FROM v0 WHERE (((((((((((((v0.c0)OR(0x3da22bc8)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((((((v0.c0)OR(0X3da22bc8)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((((((v0.c0)OR(0x3da22bc8)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((((((v0.c0)OR(0X3da22bc8)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((((((v0.c0)OR(0x3da22bc8)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE);
SELECT ALL * FROM v0, vt0 WHERE (CAST((((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) AS NUMERIC)) ORDER BY ((NULL)LIKE(-2.33498472E8))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((NULL)LIKE(-2.33498472E8))  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (CAST((((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) AS NUMERIC)) ORDER BY ((NULL)LIKE(-2.33498472E8))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((NULL)LIKE(-2.33498472E8))  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (CAST((((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) AS NUMERIC)) ORDER BY ((NULL)LIKE(-2.33498472E8))  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((NOT (v0.c0)) IN (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((NOT (v0.c0)) IN (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((NOT (v0.c0)) IN (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((NOT (v0.c0)) IN (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((NOT (v0.c0)) IN (v0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM v0 WHERE (LOWER(DISTINCT (NOT (v0.c0)))) ORDER BY 0.0031284881079158833 DESC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (NOT (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY 0.0031284881079158833 DESC);
SELECT COUNT(*) FROM v0 WHERE (LOWER(DISTINCT (NOT (v0.c0)))) ORDER BY 0.0031284881079158833 DESC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (NOT (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY 0.0031284881079158833 DESC);
SELECT COUNT(*) FROM v0 WHERE (LOWER(DISTINCT (NOT (v0.c0)))) ORDER BY 0.0031284881079158833 DESC;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)<<(v0.c0))) BETWEEN ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ORDER BY ((((v0.c0) IS TRUE))GLOB(((((v0.c0)OR(v0.c0)))OR(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<<(v0.c0))) BETWEEN ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) IS TRUE))GLOB(((((v0.c0)OR(v0.c0)))OR(v0.c0)))) ASC);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)<<(v0.c0))) BETWEEN ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ORDER BY ((((v0.c0) IS TRUE))GLOB(((((v0.c0)OR(v0.c0)))OR(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<<(v0.c0))) BETWEEN ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) IS TRUE))GLOB(((((v0.c0)OR(v0.c0)))OR(v0.c0)))) ASC);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)<<(v0.c0))) BETWEEN ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ORDER BY ((((v0.c0) IS TRUE))GLOB(((((v0.c0)OR(v0.c0)))OR(v0.c0)))) ASC;
SELECT * FROM vt0 WHERE (1945593842) ORDER BY (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('-1058859696', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((1945593842) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('-1058859696', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) COLLATE BINARY);
SELECT * FROM vt0 WHERE (1945593842) ORDER BY (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('-1058859696', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((1945593842) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('-1058859696', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) COLLATE BINARY);
SELECT * FROM vt0 WHERE (1945593842) ORDER BY (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('-1058859696', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) COLLATE BINARY;
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(MIN(vt0.c0, v0.c0) AS REAL)) ORDER BY CASE CAST(-348294208 AS NUMERIC)  WHEN (~ (v0.c0)) THEN ((vt0.c0)IS NOT(NULL)) WHEN DATETIME(102889205, vt0.c0, 'j0C/TIҩ9') THEN CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END WHEN 0.6701705664536136 THEN (v0.c0 IN ()) WHEN ((v0.c0) ISNULL) THEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) WHEN ((vt0.c0)>>(v0.c0)) THEN CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE CASE vt0.c0  WHEN vt0.c0 THEN '!oA%U	' ELSE x'684f' END END  NULLS LAST, ((v0.c0 COLLATE NOCASE)*(((0xffffffffc0e404c3) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(MIN(vt0.c0, v0.c0) AS REAL)) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE CAST(-348294208 AS NUMERIC)  WHEN (~ (v0.c0)) THEN ((vt0.c0)IS NOT(NULL)) WHEN DATETIME(102889205, vt0.c0, 'j0C/TIҩ9') THEN CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END WHEN 0.6701705664536136 THEN (v0.c0 IN ()) WHEN ((v0.c0) ISNULL) THEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) WHEN ((vt0.c0)>>(v0.c0)) THEN CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE CASE vt0.c0  WHEN vt0.c0 THEN '!oA%U	' ELSE x'684f' END END  NULLS LAST, ((v0.c0 COLLATE NOCASE)*(((0Xffffffffc0e404c3) NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(MIN(vt0.c0, v0.c0) AS REAL)) ORDER BY CASE CAST(-348294208 AS NUMERIC)  WHEN (~ (v0.c0)) THEN ((vt0.c0)IS NOT(NULL)) WHEN DATETIME(102889205, vt0.c0, 'j0C/TIҩ9') THEN CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END WHEN 0.6701705664536136 THEN (v0.c0 IN ()) WHEN ((v0.c0) ISNULL) THEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) WHEN ((vt0.c0)>>(v0.c0)) THEN CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE CASE vt0.c0  WHEN vt0.c0 THEN '!oA%U	' ELSE x'684f' END END  NULLS LAST, ((v0.c0 COLLATE NOCASE)*(((0xffffffffc0e404c3) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(MIN(vt0.c0, v0.c0) AS REAL)) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE CAST(-348294208 AS NUMERIC)  WHEN (~ (v0.c0)) THEN ((vt0.c0)IS NOT(NULL)) WHEN DATETIME(102889205, vt0.c0, 'j0C/TIҩ9') THEN CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END WHEN 0.6701705664536136 THEN (v0.c0 IN ()) WHEN ((v0.c0) ISNULL) THEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) WHEN ((vt0.c0)>>(v0.c0)) THEN CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE CASE vt0.c0  WHEN vt0.c0 THEN '!oA%U	' ELSE x'684f' END END  NULLS LAST, ((v0.c0 COLLATE NOCASE)*(((0Xffffffffc0e404c3) NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(MIN(vt0.c0, v0.c0) AS REAL)) ORDER BY CASE CAST(-348294208 AS NUMERIC)  WHEN (~ (v0.c0)) THEN ((vt0.c0)IS NOT(NULL)) WHEN DATETIME(102889205, vt0.c0, 'j0C/TIҩ9') THEN CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END WHEN 0.6701705664536136 THEN (v0.c0 IN ()) WHEN ((v0.c0) ISNULL) THEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) WHEN ((vt0.c0)>>(v0.c0)) THEN CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE CASE vt0.c0  WHEN vt0.c0 THEN '!oA%U	' ELSE x'684f' END END  NULLS LAST, ((v0.c0 COLLATE NOCASE)*(((0xffffffffc0e404c3) NOT NULL)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN (((v0.c0))>=((vt0.c0))) THEN (NOT (v0.c0)) ELSE ((vt0.c0)<(vt0.c0)) END) ORDER BY ((x'') NOT BETWEEN (((v0.c0)IS NOT(vt0.c0))) AND ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((v0.c0))>=((vt0.c0))) THEN (NOT (v0.c0)) ELSE ((vt0.c0)<(vt0.c0)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((x'') NOT BETWEEN (((v0.c0)IS NOT(vt0.c0))) AND ((vt0.c0 IN ()))));
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN (((v0.c0))>=((vt0.c0))) THEN (NOT (v0.c0)) ELSE ((vt0.c0)<(vt0.c0)) END) ORDER BY ((x'') NOT BETWEEN (((v0.c0)IS NOT(vt0.c0))) AND ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((v0.c0))>=((vt0.c0))) THEN (NOT (v0.c0)) ELSE ((vt0.c0)<(vt0.c0)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((x'') NOT BETWEEN (((v0.c0)IS NOT(vt0.c0))) AND ((vt0.c0 IN ()))));
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN (((v0.c0))>=((vt0.c0))) THEN (NOT (v0.c0)) ELSE ((vt0.c0)<(vt0.c0)) END) ORDER BY ((x'') NOT BETWEEN (((v0.c0)IS NOT(vt0.c0))) AND ((vt0.c0 IN ())));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (((~ (v0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)AND(v0.c0)))) WHERE (((((((v0.c0) BETWEEN (vt0.c0) AND (0.10301891870270496)))OR((NOT ('')))))OR(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) BETWEEN (vt0.c0) AND (0.10301891870270496)))OR((NOT ('')))))OR(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (((~ (v0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)AND(v0.c0)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (((~ (v0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)AND(v0.c0)))) WHERE (((((((v0.c0) BETWEEN (vt0.c0) AND (0.10301891870270496)))OR((NOT ('')))))OR(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) BETWEEN (vt0.c0) AND (0.10301891870270496)))OR((NOT ('')))))OR(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (((~ (v0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)AND(v0.c0)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (((~ (v0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)AND(v0.c0)))) WHERE (((((((v0.c0) BETWEEN (vt0.c0) AND (0.10301891870270496)))OR((NOT ('')))))OR(CAST(vt0.c0 AS TEXT))));
SELECT COUNT(*) FROM v0, vt0 WHERE (-1858897132);
SELECT SUM(count) FROM (SELECT ((-1858897132) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (-1858897132);
SELECT SUM(count) FROM (SELECT ((-1858897132) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (-1858897132);
SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0))<(('1428523345')))))) ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt0.c0))<(('1428523345')))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) IS TRUE) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0))<(('1428523345')))))) ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt0.c0))<(('1428523345')))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) IS TRUE) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0))<(('1428523345')))))) ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) IS TRUE) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS BLOB));
SELECT * FROM vt0, v0 WHERE ('-1484803062');
SELECT SUM(count) FROM (SELECT (('-1484803062') IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ('-1484803062');
SELECT SUM(count) FROM (SELECT (('-1484803062') IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ('-1484803062');
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CASE v0.c0  WHEN '&^9Qnu' THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END) IS FALSE)) ORDER BY (((~ (v0.c0))) ISNULL)  NULLS FIRST, (((COALESCE(DISTINCT v0.c0, 1486759476)))<>((v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN '&^9Qnu' THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END) IS FALSE)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((~ (v0.c0))) ISNULL)  NULLS FIRST, (((COALESCE(DISTINCT v0.c0, 1486759476)))<>((v0.c0))) ASC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CASE v0.c0  WHEN '&^9Qnu' THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END) IS FALSE)) ORDER BY (((~ (v0.c0))) ISNULL)  NULLS FIRST, (((COALESCE(DISTINCT v0.c0, 1486759476)))<>((v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN '&^9Qnu' THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END) IS FALSE)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((~ (v0.c0))) ISNULL)  NULLS FIRST, (((COALESCE(DISTINCT v0.c0, 1486759476)))<>((v0.c0))) ASC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CASE v0.c0  WHEN '&^9Qnu' THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END) IS FALSE)) ORDER BY (((~ (v0.c0))) ISNULL)  NULLS FIRST, (((COALESCE(DISTINCT v0.c0, 1486759476)))<>((v0.c0))) ASC;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON (((vt0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, vt0.c0)) BETWEEN ((((v0.c0)IS(v0.c0)), vt0.c0, ABS(DISTINCT vt0.c0), ((v0.c0)GLOB(vt0.c0)), vt0.c0, ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0xffffffffb75257ea)) AND ((vt0.c0 COLLATE RTRIM, CAST(v0.c0 AS REAL), vt0.c0, ((vt0.c0)!=(v0.c0)), CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, (((vt0.c0))>=((v0.c0))), 9.00334319E8))) WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((vt0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, vt0.c0)) BETWEEN ((((v0.c0)IS(v0.c0)), vt0.c0, ABS(DISTINCT vt0.c0), ((v0.c0)GLOB(vt0.c0)), vt0.c0, ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0xffffffffb75257ea)) AND ((vt0.c0 COLLATE RTRIM, CAST(v0.c0 AS REAL), vt0.c0, ((vt0.c0)<>(v0.c0)), CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, (((vt0.c0))>=((v0.c0))), 9.00334319E8))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON (((vt0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, vt0.c0)) BETWEEN ((((v0.c0)IS(v0.c0)), vt0.c0, ABS(DISTINCT vt0.c0), ((v0.c0)GLOB(vt0.c0)), vt0.c0, ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0xffffffffb75257ea)) AND ((vt0.c0 COLLATE RTRIM, CAST(v0.c0 AS REAL), vt0.c0, ((vt0.c0)!=(v0.c0)), CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, (((vt0.c0))>=((v0.c0))), 9.00334319E8))) WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((vt0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, vt0.c0)) BETWEEN ((((v0.c0)IS(v0.c0)), vt0.c0, ABS(DISTINCT vt0.c0), ((v0.c0)GLOB(vt0.c0)), vt0.c0, ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0xffffffffb75257ea)) AND ((vt0.c0 COLLATE RTRIM, CAST(v0.c0 AS REAL), vt0.c0, ((vt0.c0)<>(v0.c0)), CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, (((vt0.c0))>=((v0.c0))), 9.00334319E8))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON (((vt0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, vt0.c0)) BETWEEN ((((v0.c0)IS(v0.c0)), vt0.c0, ABS(DISTINCT vt0.c0), ((v0.c0)GLOB(vt0.c0)), vt0.c0, ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0xffffffffb75257ea)) AND ((vt0.c0 COLLATE RTRIM, CAST(v0.c0 AS REAL), vt0.c0, ((vt0.c0)!=(v0.c0)), CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, (((vt0.c0))>=((v0.c0))), 9.00334319E8))) WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT ALL * FROM v0 WHERE (((CASE v0.c0  WHEN x'9a80' THEN v0.c0 ELSE v0.c0 END)>>((v0.c0 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN x'9a80' THEN v0.c0 ELSE v0.c0 END)>>((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CASE v0.c0  WHEN x'9a80' THEN v0.c0 ELSE v0.c0 END)>>((v0.c0 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN x'9a80' THEN v0.c0 ELSE v0.c0 END)>>((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CASE v0.c0  WHEN x'9a80' THEN v0.c0 ELSE v0.c0 END)>>((v0.c0 IN (v0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ('0.0') ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((CAST(vt0.c0 AS INTEGER)))), x'';
SELECT SUM(count) FROM (SELECT ALL (('0.0') IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((CAST(vt0.c0 AS INTEGER)))), x'');
SELECT COUNT(*) FROM vt0 WHERE ('0.0') ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((CAST(vt0.c0 AS INTEGER)))), x'';
SELECT SUM(count) FROM (SELECT ALL (('0.0') IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((CAST(vt0.c0 AS INTEGER)))), x'');
SELECT COUNT(*) FROM vt0 WHERE ('0.0') ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((CAST(vt0.c0 AS INTEGER)))), x'';
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((((LTRIM(vt0.c0))AND(((vt0.c0) NOTNULL))))OR(((vt0.c0)+(vt0.c0)))))OR(NULL)))AND(((vt0.c0)AND(vt0.c0)))))AND(((((((((0.6496559839943935)OR(vt0.c0)))AND(-2137012134)))OR(vt0.c0)))AND(vt0.c0)))))OR(UPPER(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((((LTRIM(vt0.c0))AND(((vt0.c0) NOTNULL))))OR(((vt0.c0)+(vt0.c0)))))OR(NULL)))AND(((vt0.c0)AND(vt0.c0)))))AND(((((((((0.6496559839943935)OR(vt0.c0)))AND(-2137012134)))OR(vt0.c0)))AND(vt0.c0)))))OR(UPPER(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((((LTRIM(vt0.c0))AND(((vt0.c0) NOTNULL))))OR(((vt0.c0)+(vt0.c0)))))OR(NULL)))AND(((vt0.c0)AND(vt0.c0)))))AND(((((((((0.6496559839943935)OR(vt0.c0)))AND(-2137012134)))OR(vt0.c0)))AND(vt0.c0)))))OR(UPPER(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((((LTRIM(vt0.c0))AND(((vt0.c0) NOTNULL))))OR(((vt0.c0)+(vt0.c0)))))OR(NULL)))AND(((vt0.c0)AND(vt0.c0)))))AND(((((((((0.6496559839943935)OR(vt0.c0)))AND(-2137012134)))OR(vt0.c0)))AND(vt0.c0)))))OR(UPPER(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((((LTRIM(vt0.c0))AND(((vt0.c0) NOTNULL))))OR(((vt0.c0)+(vt0.c0)))))OR(NULL)))AND(((vt0.c0)AND(vt0.c0)))))AND(((((((((0.6496559839943935)OR(vt0.c0)))AND(-2137012134)))OR(vt0.c0)))AND(vt0.c0)))))OR(UPPER(DISTINCT vt0.c0))));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0) IS FALSE))<<(v0.c0))) ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((ABS(NULL), ((vt0.c0)LIKE(vt0.c0)), (((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) AND ((v0.c0 COLLATE NOCASE, ((v0.c0)IS(vt0.c0)), CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END))) ASC, (((vt0.c0)*(v0.c0)) IN (CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, CAST(0.21768593044266482 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))<<(v0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((ABS(NULL), ((vt0.c0)LIKE(vt0.c0)), (((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) AND ((v0.c0 COLLATE NOCASE, ((v0.c0)IS(vt0.c0)), CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END))) ASC, (((vt0.c0)*(v0.c0)) IN (CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, CAST(0.21768593044266482 AS BLOB)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0) IS FALSE))<<(v0.c0))) ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((ABS(NULL), ((vt0.c0)LIKE(vt0.c0)), (((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) AND ((v0.c0 COLLATE NOCASE, ((v0.c0)IS(vt0.c0)), CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END))) ASC, (((vt0.c0)*(v0.c0)) IN (CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, CAST(0.21768593044266482 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))<<(v0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((ABS(NULL), ((vt0.c0)LIKE(vt0.c0)), (((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) AND ((v0.c0 COLLATE NOCASE, ((v0.c0)IS(vt0.c0)), CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END))) ASC, (((vt0.c0)*(v0.c0)) IN (CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, CAST(0.21768593044266482 AS BLOB)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0) IS FALSE))<<(v0.c0))) ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((ABS(NULL), ((vt0.c0)LIKE(vt0.c0)), (((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) AND ((v0.c0 COLLATE NOCASE, ((v0.c0)IS(vt0.c0)), CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END))) ASC, (((vt0.c0)*(v0.c0)) IN (CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, CAST(0.21768593044266482 AS BLOB)))  NULLS LAST;
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON 0.9838831879808936 WHERE ((+ ((((((((('0.47097444454479076')AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(NULL))))) ORDER BY CAST(v0.c0 AS NUMERIC) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((+ ((((((((('0.47097444454479076')AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(NULL))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON 0.9838831879808936 ORDER BY CAST(v0.c0 AS NUMERIC) COLLATE NOCASE);
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON 0.9838831879808936 WHERE ((+ ((((((((('0.47097444454479076')AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(NULL))))) ORDER BY CAST(v0.c0 AS NUMERIC) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((+ ((((((((('0.47097444454479076')AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(NULL))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON 0.9838831879808936 ORDER BY CAST(v0.c0 AS NUMERIC) COLLATE NOCASE);
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON 0.9838831879808936 WHERE ((+ ((((((((('0.47097444454479076')AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(NULL))))) ORDER BY CAST(v0.c0 AS NUMERIC) COLLATE NOCASE;
SELECT COUNT(*) FROM v0, vt0 WHERE ((vt0.c0 IN (vt0.c0, x'1c61')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (vt0.c0, x'1c61')) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((vt0.c0 IN (vt0.c0, x'1c61')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (vt0.c0, x'1c61')) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((vt0.c0 IN (vt0.c0, x'1c61')) COLLATE RTRIM);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ())) ISNULL)) ORDER BY (~ (((vt0.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0) IS TRUE))) ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ())) ISNULL)) ORDER BY (~ (((vt0.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0) IS TRUE))) ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ())) ISNULL)) ORDER BY (~ (((vt0.c0) IS TRUE))) ASC;
SELECT * FROM v0 WHERE (CAST('a<Z)oAX-' AS BLOB)) ORDER BY (+ (((v0.c0) NOT BETWEEN (NULL) AND (v0.c0)))) DESC  NULLS FIRST, ((v0.c0)%(v0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CAST('a<Z)oAX-' AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY (+ (((v0.c0) NOT BETWEEN (NULL) AND (v0.c0)))) DESC  NULLS FIRST, ((v0.c0)%(v0.c0)) COLLATE RTRIM);
SELECT * FROM v0 WHERE (CAST('a<Z)oAX-' AS BLOB)) ORDER BY (+ (((v0.c0) NOT BETWEEN (NULL) AND (v0.c0)))) DESC  NULLS FIRST, ((v0.c0)%(v0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CAST('a<Z)oAX-' AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY (+ (((v0.c0) NOT BETWEEN (NULL) AND (v0.c0)))) DESC  NULLS FIRST, ((v0.c0)%(v0.c0)) COLLATE RTRIM);
SELECT * FROM v0 WHERE (CAST('a<Z)oAX-' AS BLOB)) ORDER BY (+ (((v0.c0) NOT BETWEEN (NULL) AND (v0.c0)))) DESC  NULLS FIRST, ((v0.c0)%(v0.c0)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c0)||(vt0.c0)))|(CAST(vt0.c0 AS INTEGER)))) ORDER BY (NOT ((((vt0.c0))<((v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)||(vt0.c0)))|(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (NOT ((((vt0.c0))<((v0.c0))))) DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c0)||(vt0.c0)))|(CAST(vt0.c0 AS INTEGER)))) ORDER BY (NOT ((((vt0.c0))<((v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)||(vt0.c0)))|(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (NOT ((((vt0.c0))<((v0.c0))))) DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c0)||(vt0.c0)))|(CAST(vt0.c0 AS INTEGER)))) ORDER BY (NOT ((((vt0.c0))<((v0.c0))))) DESC;
SELECT * FROM v0 WHERE (CASE WHEN v0.c0 COLLATE RTRIM THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) ELSE GLOB(v0.c0, v0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 COLLATE RTRIM THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) ELSE GLOB(v0.c0, v0.c0) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN v0.c0 COLLATE RTRIM THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) ELSE GLOB(v0.c0, v0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 COLLATE RTRIM THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) ELSE GLOB(v0.c0, v0.c0) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN v0.c0 COLLATE RTRIM THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) ELSE GLOB(v0.c0, v0.c0) END);
SELECT * FROM v0 INNER JOIN vt0 ON v0.c0 WHERE ((((vt0.c0 COLLATE BINARY))<=((((vt0.c0)+(v0.c0)))))) ORDER BY '햰4Vk'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE BINARY))<=((((vt0.c0)+(v0.c0)))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON v0.c0 ORDER BY '햰4Vk'  NULLS LAST);
SELECT * FROM v0 INNER JOIN vt0 ON v0.c0 WHERE ((((vt0.c0 COLLATE BINARY))<=((((vt0.c0)+(v0.c0)))))) ORDER BY '햰4Vk'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE BINARY))<=((((vt0.c0)+(v0.c0)))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON v0.c0 ORDER BY '햰4Vk'  NULLS LAST);
SELECT * FROM v0 INNER JOIN vt0 ON v0.c0 WHERE ((((vt0.c0 COLLATE BINARY))<=((((vt0.c0)+(v0.c0)))))) ORDER BY '햰4Vk'  NULLS LAST;
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (((((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((((vt0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND(LIKELIHOOD(DISTINCT v0.c0, 0.5042407234799895))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((((vt0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND(LIKELIHOOD(DISTINCT v0.c0, 0.5042407234799895)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (((((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((((vt0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND(LIKELIHOOD(DISTINCT v0.c0, 0.5042407234799895))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((((vt0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND(LIKELIHOOD(DISTINCT v0.c0, 0.5042407234799895)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (((((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((((vt0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND(LIKELIHOOD(DISTINCT v0.c0, 0.5042407234799895))));
SELECT ALL * FROM v0, vt0 WHERE (((((((vt0.c0)GLOB(v0.c0)))OR(((vt0.c0)+(v0.c0)))))AND(((vt0.c0)<<(v0.c0))))) ORDER BY 272729037  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)GLOB(v0.c0)))OR(((vt0.c0)+(v0.c0)))))AND(((vt0.c0)<<(v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY 272729037  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (((((((vt0.c0)GLOB(v0.c0)))OR(((vt0.c0)+(v0.c0)))))AND(((vt0.c0)<<(v0.c0))))) ORDER BY 272729037  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)GLOB(v0.c0)))OR(((vt0.c0)+(v0.c0)))))AND(((vt0.c0)<<(v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY 272729037  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((((x'') ISNULL)) NOT NULL) WHERE (UPPER(CAST(v0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(CAST(v0.c0 AS BLOB))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((x'') ISNULL)) NOT NULL));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((((x'') ISNULL)) NOT NULL) WHERE (UPPER(CAST(v0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(CAST(v0.c0 AS BLOB))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((x'') ISNULL)) NOT NULL));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((((x'') ISNULL)) NOT NULL) WHERE (UPPER(CAST(v0.c0 AS BLOB)));
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))||(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('n'))))) ORDER BY ((COALESCE(DISTINCT vt0.c0, vt0.c0))<=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST, ((LOWER(DISTINCT vt0.c0))OR(vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))||(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('n'))))) IS TRUE)  as count FROM vt0 ORDER BY ((COALESCE(DISTINCT vt0.c0, vt0.c0))<=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST, ((LOWER(DISTINCT vt0.c0))OR(vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))||(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('n'))))) ORDER BY ((COALESCE(DISTINCT vt0.c0, vt0.c0))<=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST, ((LOWER(DISTINCT vt0.c0))OR(vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))||(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('n'))))) IS TRUE)  as count FROM vt0 ORDER BY ((COALESCE(DISTINCT vt0.c0, vt0.c0))<=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST, ((LOWER(DISTINCT vt0.c0))OR(vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))||(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('n'))))) ORDER BY ((COALESCE(DISTINCT vt0.c0, vt0.c0))<=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST, ((LOWER(DISTINCT vt0.c0))OR(vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((NULL) BETWEEN ((~ (0X26ad04a9))) AND (CASE WHEN 0Xffffffffd617db47 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN 0xffffffffc7d1d867 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN ((~ (0x26ad04a9))) AND (CASE WHEN 0Xffffffffd617db47 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN 0xffffffffc7d1d867 THEN vt0.c0 END))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((NULL) BETWEEN ((~ (0X26ad04a9))) AND (CASE WHEN 0Xffffffffd617db47 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN 0xffffffffc7d1d867 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN ((~ (0x26ad04a9))) AND (CASE WHEN 0Xffffffffd617db47 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN 0xffffffffc7d1d867 THEN vt0.c0 END))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((NULL) BETWEEN ((~ (0X26ad04a9))) AND (CASE WHEN 0Xffffffffd617db47 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN 0xffffffffc7d1d867 THEN vt0.c0 END)));
SELECT * FROM vt0, v0 WHERE (992761355);
SELECT SUM(count) FROM (SELECT ((992761355) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (992761355);
SELECT SUM(count) FROM (SELECT ((992761355) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (992761355);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((vt0.c0)+(0Xfffffffff78934ee)))))AND(vt0.c0))) ORDER BY LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END, 0.5070402075600305) DESC;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((vt0.c0)+(0xfffffffff78934ee)))))AND(vt0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END, 0.5070402075600305) DESC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((vt0.c0)+(0Xfffffffff78934ee)))))AND(vt0.c0))) ORDER BY LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END, 0.5070402075600305) DESC;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((vt0.c0)+(0xfffffffff78934ee)))))AND(vt0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END, 0.5070402075600305) DESC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((vt0.c0)+(0Xfffffffff78934ee)))))AND(vt0.c0))) ORDER BY LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END, 0.5070402075600305) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE ((v0.c0)||(v0.c0))  WHEN CAST(v0.c0 AS INTEGER) THEN (v0.c0 IN ()) ELSE ((v0.c0)IS(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)||(v0.c0))  WHEN CAST(v0.c0 AS INTEGER) THEN (v0.c0 IN ()) ELSE ((v0.c0)IS(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE ((v0.c0)||(v0.c0))  WHEN CAST(v0.c0 AS INTEGER) THEN (v0.c0 IN ()) ELSE ((v0.c0)IS(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)||(v0.c0))  WHEN CAST(v0.c0 AS INTEGER) THEN (v0.c0 IN ()) ELSE ((v0.c0)IS(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE ((v0.c0)||(v0.c0))  WHEN CAST(v0.c0 AS INTEGER) THEN (v0.c0 IN ()) ELSE ((v0.c0)IS(v0.c0)) END);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(v0.c0 COLLATE RTRIM AS INTEGER)) ORDER BY ((((((vt0.c0)GLOB(v0.c0)))OR((((v0.c0)) BETWEEN ((v0.c0)) AND (('-1061731887'))))))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC  NULLS LAST, LIKELY(((vt0.c0)>(v0.c0))) ASC, TRIM(CASE WHEN vt0.c0 THEN v0.c0 END, (- (v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((vt0.c0)GLOB(v0.c0)))OR((((v0.c0)) BETWEEN ((v0.c0)) AND (('-1061731887'))))))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC  NULLS LAST, LIKELY(((vt0.c0)>(v0.c0))) ASC, TRIM(CASE WHEN vt0.c0 THEN v0.c0 END, (- (v0.c0))) ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(v0.c0 COLLATE RTRIM AS INTEGER)) ORDER BY ((((((vt0.c0)GLOB(v0.c0)))OR((((v0.c0)) BETWEEN ((v0.c0)) AND (('-1061731887'))))))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC  NULLS LAST, LIKELY(((vt0.c0)>(v0.c0))) ASC, TRIM(CASE WHEN vt0.c0 THEN v0.c0 END, (- (v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((vt0.c0)GLOB(v0.c0)))OR((((v0.c0)) BETWEEN ((v0.c0)) AND (('-1061731887'))))))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC  NULLS LAST, LIKELY(((vt0.c0)>(v0.c0))) ASC, TRIM(CASE WHEN vt0.c0 THEN v0.c0 END, (- (v0.c0))) ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(v0.c0 COLLATE RTRIM AS INTEGER)) ORDER BY ((((((vt0.c0)GLOB(v0.c0)))OR((((v0.c0)) BETWEEN ((v0.c0)) AND (('-1061731887'))))))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC  NULLS LAST, LIKELY(((vt0.c0)>(v0.c0))) ASC, TRIM(CASE WHEN vt0.c0 THEN v0.c0 END, (- (v0.c0))) ASC;
SELECT ALL * FROM v0 WHERE (((0.6873781557122975 COLLATE RTRIM)AND(UPPER(x''))));
SELECT SUM(count) FROM (SELECT ((((0.6873781557122975 COLLATE RTRIM)AND(UPPER(x'')))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((0.6873781557122975 COLLATE RTRIM)AND(UPPER(x''))));
SELECT SUM(count) FROM (SELECT ((((0.6873781557122975 COLLATE RTRIM)AND(UPPER(x'')))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((0.6873781557122975 COLLATE RTRIM)AND(UPPER(x''))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT * FROM v0, vt0 WHERE ((((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) IN (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) IN (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) IN (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) IN (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) IN (v0.c0 COLLATE RTRIM)));
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON vt0.c0 COLLATE RTRIM WHERE (TRIM(DISTINCT (vt0.c0 IN ()))) ORDER BY ((vt0.c0) NOT BETWEEN ((v0.c0 IN ())) AND ((~ (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (vt0.c0 IN ()))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON vt0.c0 COLLATE RTRIM ORDER BY ((vt0.c0) NOT BETWEEN ((v0.c0 IN ())) AND ((~ (v0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON vt0.c0 COLLATE RTRIM WHERE (TRIM(DISTINCT (vt0.c0 IN ()))) ORDER BY ((vt0.c0) NOT BETWEEN ((v0.c0 IN ())) AND ((~ (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (vt0.c0 IN ()))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON vt0.c0 COLLATE RTRIM ORDER BY ((vt0.c0) NOT BETWEEN ((v0.c0 IN ())) AND ((~ (v0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON vt0.c0 COLLATE RTRIM WHERE (TRIM(DISTINCT (vt0.c0 IN ()))) ORDER BY ((vt0.c0) NOT BETWEEN ((v0.c0 IN ())) AND ((~ (v0.c0))))  NULLS FIRST;
SELECT * FROM vt0 WHERE (((vt0.c0)GLOB(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)GLOB(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)GLOB(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)GLOB(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)GLOB(vt0.c0)) COLLATE BINARY);
SELECT * FROM v0 WHERE (((LIKELIHOOD(v0.c0, 0.8304087143256028))>=(COALESCE('-664479881', v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))) ORDER BY ((+ (v0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(v0.c0, 0.8304087143256028))>=(COALESCE('-664479881', v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((+ (v0.c0)) IN ()) ASC);
SELECT * FROM v0 WHERE (((LIKELIHOOD(v0.c0, 0.8304087143256028))>=(COALESCE('-664479881', v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))) ORDER BY ((+ (v0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(v0.c0, 0.8304087143256028))>=(COALESCE('-664479881', v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((+ (v0.c0)) IN ()) ASC);
SELECT * FROM v0 WHERE (((LIKELIHOOD(v0.c0, 0.8304087143256028))>=(COALESCE('-664479881', v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))) ORDER BY ((+ (v0.c0)) IN ()) ASC;
SELECT COUNT(*) FROM v0, vt0 WHERE ((vt0.c0 IN ())) ORDER BY CASE CAST(x'' AS REAL)  WHEN TYPEOF(DISTINCT vt0.c0) THEN ((vt0.c0) NOT NULL) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE CAST(x'' AS REAL)  WHEN TYPEOF(DISTINCT vt0.c0) THEN ((vt0.c0) NOT NULL) END ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE ((vt0.c0 IN ())) ORDER BY CASE CAST(x'' AS REAL)  WHEN TYPEOF(DISTINCT vt0.c0) THEN ((vt0.c0) NOT NULL) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE CAST(x'' AS REAL)  WHEN TYPEOF(DISTINCT vt0.c0) THEN ((vt0.c0) NOT NULL) END ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE ((vt0.c0 IN ())) ORDER BY CASE CAST(x'' AS REAL)  WHEN TYPEOF(DISTINCT vt0.c0) THEN ((vt0.c0) NOT NULL) END ASC;
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((((((((((((((vt0.c0)>(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))OR(CAST(810476365 AS NUMERIC))))AND(vt0.c0)))OR(((((0.06298727550634298)AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN ('-1061731887') AND (vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((vt0.c0)>(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))OR(CAST(810476365 AS NUMERIC))))AND(vt0.c0)))OR(((((0.06298727550634298)AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN ('-1061731887') AND (vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((((((((((((((vt0.c0)>(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))OR(CAST(810476365 AS NUMERIC))))AND(vt0.c0)))OR(((((0.06298727550634298)AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN ('-1061731887') AND (vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((vt0.c0)>(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))OR(CAST(810476365 AS NUMERIC))))AND(vt0.c0)))OR(((((0.06298727550634298)AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN ('-1061731887') AND (vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((((((((((((((vt0.c0)>(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))OR(CAST(810476365 AS NUMERIC))))AND(vt0.c0)))OR(((((0.06298727550634298)AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN ('-1061731887') AND (vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))  NULLS LAST;
SELECT * FROM v0 CROSS JOIN vt0 ON ((((v0.c0) IS FALSE)) IS TRUE) WHERE (((UNLIKELY(v0.c0))*(INSTR(vt0.c0, v0.c0)))) ORDER BY (NOT (((vt0.c0)||(v0.c0)))), UNLIKELY(((0.6684422785743359) NOT NULL)), (((((v0.c0))<((v0.c0))))/(((v0.c0)<<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(v0.c0))*(INSTR(vt0.c0, v0.c0)))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((((v0.c0) IS FALSE)) IS TRUE) ORDER BY (NOT (((vt0.c0)||(v0.c0)))), UNLIKELY(((0.6684422785743359) NOT NULL)), (((((v0.c0))<((v0.c0))))/(((v0.c0)<<(vt0.c0)))));
SELECT * FROM v0 CROSS JOIN vt0 ON ((((v0.c0) IS FALSE)) IS TRUE) WHERE (((UNLIKELY(v0.c0))*(INSTR(vt0.c0, v0.c0)))) ORDER BY (NOT (((vt0.c0)||(v0.c0)))), UNLIKELY(((0.6684422785743359) NOT NULL)), (((((v0.c0))<((v0.c0))))/(((v0.c0)<<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(v0.c0))*(INSTR(vt0.c0, v0.c0)))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((((v0.c0) IS FALSE)) IS TRUE) ORDER BY (NOT (((vt0.c0)||(v0.c0)))), UNLIKELY(((0.6684422785743359) NOT NULL)), (((((v0.c0))<((v0.c0))))/(((v0.c0)<<(vt0.c0)))));
SELECT * FROM v0 CROSS JOIN vt0 ON ((((v0.c0) IS FALSE)) IS TRUE) WHERE (((UNLIKELY(v0.c0))*(INSTR(vt0.c0, v0.c0)))) ORDER BY (NOT (((vt0.c0)||(v0.c0)))), UNLIKELY(((0.6684422785743359) NOT NULL)), (((((v0.c0))<((v0.c0))))/(((v0.c0)<<(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM v0 WHERE (CAST(v0.c0 AS BLOB) COLLATE BINARY) ORDER BY CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE NULL END  WHEN ((((v0.c0)OR('-1652375077')))OR(v0.c0)) THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) WHEN ((v0.c0)&(v0.c0)) THEN ((v0.c0) NOT NULL) WHEN ((v0.c0)%(v0.c0)) THEN COALESCE(DISTINCT v0.c0, v0.c0) ELSE ((v0.c0)OR(v0.c0)) END DESC  NULLS FIRST, ((0.8921136764680594) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE NULL END  WHEN ((((v0.c0)OR('-1652375077')))OR(v0.c0)) THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) WHEN ((v0.c0)&(v0.c0)) THEN ((v0.c0) NOT NULL) WHEN ((v0.c0)%(v0.c0)) THEN COALESCE(DISTINCT v0.c0, v0.c0) ELSE ((v0.c0)OR(v0.c0)) END DESC  NULLS FIRST, ((0.8921136764680594) ISNULL));
SELECT * FROM v0 WHERE (CAST(v0.c0 AS BLOB) COLLATE BINARY) ORDER BY CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE NULL END  WHEN ((((v0.c0)OR('-1652375077')))OR(v0.c0)) THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) WHEN ((v0.c0)&(v0.c0)) THEN ((v0.c0) NOT NULL) WHEN ((v0.c0)%(v0.c0)) THEN COALESCE(DISTINCT v0.c0, v0.c0) ELSE ((v0.c0)OR(v0.c0)) END DESC  NULLS FIRST, ((0.8921136764680594) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE NULL END  WHEN ((((v0.c0)OR('-1652375077')))OR(v0.c0)) THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) WHEN ((v0.c0)&(v0.c0)) THEN ((v0.c0) NOT NULL) WHEN ((v0.c0)%(v0.c0)) THEN COALESCE(DISTINCT v0.c0, v0.c0) ELSE ((v0.c0)OR(v0.c0)) END DESC  NULLS FIRST, ((0.8921136764680594) ISNULL));
SELECT * FROM v0 WHERE (CAST(v0.c0 AS BLOB) COLLATE BINARY) ORDER BY CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE NULL END  WHEN ((((v0.c0)OR('-1652375077')))OR(v0.c0)) THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) WHEN ((v0.c0)&(v0.c0)) THEN ((v0.c0) NOT NULL) WHEN ((v0.c0)%(v0.c0)) THEN COALESCE(DISTINCT v0.c0, v0.c0) ELSE ((v0.c0)OR(v0.c0)) END DESC  NULLS FIRST, ((0.8921136764680594) ISNULL);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY ((vt0.c0)>=(vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)>=(vt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY ((vt0.c0)>=(vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)>=(vt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY ((vt0.c0)>=(vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)+(vt0.c0)) AS NUMERIC)) ORDER BY CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (((vt0.c0))!=((vt0.c0))) ELSE vt0.c0 COLLATE NOCASE END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)+(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (((vt0.c0))!=((vt0.c0))) ELSE vt0.c0 COLLATE NOCASE END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)+(vt0.c0)) AS NUMERIC)) ORDER BY CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (((vt0.c0))!=((vt0.c0))) ELSE vt0.c0 COLLATE NOCASE END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)+(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (((vt0.c0))!=((vt0.c0))) ELSE vt0.c0 COLLATE NOCASE END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)+(vt0.c0)) AS NUMERIC)) ORDER BY CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (((vt0.c0))!=((vt0.c0))) ELSE vt0.c0 COLLATE NOCASE END ASC  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))=((((v0.c0)) NOT BETWEEN ((0x621f6f5)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))=((((v0.c0)) NOT BETWEEN ((0x621f6f5)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))=((((v0.c0)) NOT BETWEEN ((0x621f6f5)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))=((((v0.c0)) NOT BETWEEN ((0x621f6f5)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))=((((v0.c0)) NOT BETWEEN ((0x621f6f5)) AND ((v0.c0))))));
SELECT COUNT(*) FROM v0 WHERE (CAST((+ (v0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (v0.c0)) AS REAL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST((+ (v0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (v0.c0)) AS REAL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST((+ (v0.c0)) AS REAL));
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0) ORDER BY (v0.c0 COLLATE BINARY IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY (v0.c0 COLLATE BINARY IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0) ORDER BY (v0.c0 COLLATE BINARY IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY (v0.c0 COLLATE BINARY IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0) ORDER BY (v0.c0 COLLATE BINARY IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))<=((vt0.c0))))IS NOT(((vt0.c0) IS FALSE)))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) BETWEEN (0.46562622251832186) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST, vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<=((vt0.c0))))IS NOT(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) BETWEEN (0.46562622251832186) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST, vt0.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))<=((vt0.c0))))IS NOT(((vt0.c0) IS FALSE)))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) BETWEEN (0.46562622251832186) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST, vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<=((vt0.c0))))IS NOT(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) BETWEEN (0.46562622251832186) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST, vt0.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))<=((vt0.c0))))IS NOT(((vt0.c0) IS FALSE)))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) BETWEEN (0.46562622251832186) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST, vt0.c0 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE ((('0') NOT NULL));
SELECT SUM(count) FROM (SELECT (((('0') NOT NULL)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((('0') NOT NULL));
SELECT SUM(count) FROM (SELECT (((('0') NOT NULL)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((('0') NOT NULL));
SELECT * FROM v0, vt0 WHERE (((((ABS(v0.c0))OR(((vt0.c0)<=(v0.c0)))))OR(UPPER(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((ABS(v0.c0))OR(((vt0.c0)<=(v0.c0)))))OR(UPPER(v0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((ABS(v0.c0))OR(((vt0.c0)<=(v0.c0)))))OR(UPPER(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((ABS(v0.c0))OR(((vt0.c0)<=(v0.c0)))))OR(UPPER(v0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((ABS(v0.c0))OR(((vt0.c0)<=(v0.c0)))))OR(UPPER(v0.c0))));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 COLLATE NOCASE AS TEXT));
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN ())) ORDER BY ((v0.c0)%(v0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)%(v0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN ())) ORDER BY ((v0.c0)%(v0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)%(v0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN ())) ORDER BY ((v0.c0)%(v0.c0)) COLLATE NOCASE;
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 END COLLATE BINARY COLLATE RTRIM) ORDER BY LTRIM(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN v0.c0 END COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY LTRIM(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 END COLLATE BINARY COLLATE RTRIM) ORDER BY LTRIM(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN v0.c0 END COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY LTRIM(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 END COLLATE BINARY COLLATE RTRIM) ORDER BY LTRIM(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (('-1497605668' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (('-1497605668' IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (('-1497605668' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (('-1497605668' IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (('-1497605668' IN ()))));
SELECT COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 END) IS TRUE)) ORDER BY ((((v0.c0) IS FALSE)) NOTNULL) DESC  NULLS LAST, (((v0.c0))<>(((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))), CHANGES();
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 END) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) IS FALSE)) NOTNULL) DESC  NULLS LAST, (((v0.c0))!=(((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))), CHANGES());
SELECT COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 END) IS TRUE)) ORDER BY ((((v0.c0) IS FALSE)) NOTNULL) DESC  NULLS LAST, (((v0.c0))<>(((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))), CHANGES();
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 END) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) IS FALSE)) NOTNULL) DESC  NULLS LAST, (((v0.c0))!=(((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))), CHANGES());
SELECT COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 END) IS TRUE)) ORDER BY ((((v0.c0) IS FALSE)) NOTNULL) DESC  NULLS LAST, (((v0.c0))<>(((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))), CHANGES();
SELECT * FROM v0, vt0 WHERE (json_insert(CHANGES(), v0.c0 COLLATE RTRIM, (((vt0.c0))==((vt0.c0))))) ORDER BY ((((v0.c0) ISNULL))GLOB(((vt0.c0)<<(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_insert(CHANGES(), v0.c0 COLLATE RTRIM, (((vt0.c0))==((vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c0) ISNULL))GLOB(((vt0.c0)<<(v0.c0)))) DESC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (json_insert(CHANGES(), v0.c0 COLLATE RTRIM, (((vt0.c0))==((vt0.c0))))) ORDER BY ((((v0.c0) ISNULL))GLOB(((vt0.c0)<<(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_insert(CHANGES(), v0.c0 COLLATE RTRIM, (((vt0.c0))==((vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c0) ISNULL))GLOB(((vt0.c0)<<(v0.c0)))) DESC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (json_insert(CHANGES(), v0.c0 COLLATE RTRIM, (((vt0.c0))==((vt0.c0))))) ORDER BY ((((v0.c0) ISNULL))GLOB(((vt0.c0)<<(v0.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE ((vt0.c0 COLLATE RTRIM IN ())) ORDER BY CASE ((vt0.c0) NOT NULL)  WHEN (vt0.c0 IN ()) THEN ((vt0.c0) ISNULL) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE ((vt0.c0) NOT NULL)  WHEN (vt0.c0 IN ()) THEN ((vt0.c0) ISNULL) END DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE ((vt0.c0 COLLATE RTRIM IN ())) ORDER BY CASE ((vt0.c0) NOT NULL)  WHEN (vt0.c0 IN ()) THEN ((vt0.c0) ISNULL) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE ((vt0.c0) NOT NULL)  WHEN (vt0.c0 IN ()) THEN ((vt0.c0) ISNULL) END DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE ((vt0.c0 COLLATE RTRIM IN ())) ORDER BY CASE ((vt0.c0) NOT NULL)  WHEN (vt0.c0 IN ()) THEN ((vt0.c0) ISNULL) END DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) BETWEEN (vt0.c0) AND (((vt0.c0)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) BETWEEN (vt0.c0) AND (((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) BETWEEN (vt0.c0) AND (((vt0.c0)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) BETWEEN (vt0.c0) AND (((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) BETWEEN (vt0.c0) AND (((vt0.c0)+(vt0.c0)))));
SELECT * FROM vt0, v0 WHERE ((((((vt0.c0)>(v0.c0))))<((((v0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)>(v0.c0))))<((((v0.c0) IS FALSE))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((((vt0.c0)>(v0.c0))))<((((v0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)>(v0.c0))))<((((v0.c0) IS FALSE))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((((vt0.c0)>(v0.c0))))<((((v0.c0) IS FALSE)))));
SELECT ALL COUNT(*) FROM v0 WHERE ('744341932') ORDER BY (((v0.c0)) BETWEEN ((((v0.c0)|(v0.c0)))) AND ((0x4c6aece9))) DESC, '-32580673' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('744341932') IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) BETWEEN ((((v0.c0)|(v0.c0)))) AND ((0x4c6aece9))) DESC, '-32580673' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ('744341932') ORDER BY (((v0.c0)) BETWEEN ((((v0.c0)|(v0.c0)))) AND ((0x4c6aece9))) DESC, '-32580673' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('744341932') IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) BETWEEN ((((v0.c0)|(v0.c0)))) AND ((0x4c6aece9))) DESC, '-32580673' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ('744341932') ORDER BY (((v0.c0)) BETWEEN ((((v0.c0)|(v0.c0)))) AND ((0x4c6aece9))) DESC, '-32580673' DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE ((~ (CHANGES()))) ORDER BY ((((((vt0.c0) IS TRUE))AND(v0.c0)))AND(CAST(v0.c0 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (CHANGES()))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((vt0.c0) IS TRUE))AND(v0.c0)))AND(CAST(v0.c0 AS NUMERIC))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((~ (CHANGES()))) ORDER BY ((((((vt0.c0) IS TRUE))AND(v0.c0)))AND(CAST(v0.c0 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (CHANGES()))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((vt0.c0) IS TRUE))AND(v0.c0)))AND(CAST(v0.c0 AS NUMERIC))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((~ (CHANGES()))) ORDER BY ((((((vt0.c0) IS TRUE))AND(v0.c0)))AND(CAST(v0.c0 AS NUMERIC))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))<<(TOTAL_CHANGES())));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0)))<<(TOTAL_CHANGES()))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))<<(TOTAL_CHANGES())));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0)))<<(TOTAL_CHANGES()))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))<<(TOTAL_CHANGES())));
SELECT * FROM vt0 CROSS JOIN v0 ON (((+ (vt0.c0)))-(CASE vt0.c0  WHEN -2020794527 THEN 'N' END)) WHERE (((((('-1743585904', v0.c0, vt0.c0)) BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, v0.c0, vt0.c0)))) NOT BETWEEN (vt0.c0) AND (((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((('-1743585904', v0.c0, vt0.c0)) BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, v0.c0, vt0.c0)))) NOT BETWEEN (vt0.c0) AND (((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (((+ (vt0.c0)))-(CASE vt0.c0  WHEN -2020794527 THEN 'N' END)));
SELECT * FROM vt0 CROSS JOIN v0 ON (((+ (vt0.c0)))-(CASE vt0.c0  WHEN -2020794527 THEN 'N' END)) WHERE (((((('-1743585904', v0.c0, vt0.c0)) BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, v0.c0, vt0.c0)))) NOT BETWEEN (vt0.c0) AND (((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((('-1743585904', v0.c0, vt0.c0)) BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, v0.c0, vt0.c0)))) NOT BETWEEN (vt0.c0) AND (((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (((+ (vt0.c0)))-(CASE vt0.c0  WHEN -2020794527 THEN 'N' END)));
SELECT * FROM vt0 CROSS JOIN v0 ON (((+ (vt0.c0)))-(CASE vt0.c0  WHEN -2020794527 THEN 'N' END)) WHERE (((((('-1743585904', v0.c0, vt0.c0)) BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, v0.c0, vt0.c0)))) NOT BETWEEN (vt0.c0) AND (((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT * FROM v0 WHERE ((((v0.c0)&(v0.c0)) IN ())) ORDER BY ((((v0.c0) ISNULL)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (CASE WHEN v0.c0 THEN NULL END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)&(v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) ISNULL)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (CASE WHEN v0.c0 THEN NULL END)) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((((v0.c0)&(v0.c0)) IN ())) ORDER BY ((((v0.c0) ISNULL)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (CASE WHEN v0.c0 THEN NULL END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)&(v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) ISNULL)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (CASE WHEN v0.c0 THEN NULL END)) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((((v0.c0)&(v0.c0)) IN ())) ORDER BY ((((v0.c0) ISNULL)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (CASE WHEN v0.c0 THEN NULL END)) DESC  NULLS LAST;
SELECT * FROM vt0 INNER JOIN v0 ON NULL WHERE ((+ (0x78980d21)));
SELECT SUM(count) FROM (SELECT ALL (((+ (0X78980d21))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON NULL);
SELECT * FROM vt0 INNER JOIN v0 ON NULL WHERE ((+ (0x78980d21)));
SELECT SUM(count) FROM (SELECT ALL (((+ (0X78980d21))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON NULL);
SELECT * FROM vt0 INNER JOIN v0 ON NULL WHERE ((+ (0x78980d21)));
SELECT * FROM vt0, v0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT * FROM vt0, v0 WHERE (((((vt0.c0) NOT NULL)) ISNULL)) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL)) ISNULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0 ASC);
SELECT * FROM vt0, v0 WHERE (((((vt0.c0) NOT NULL)) ISNULL)) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL)) ISNULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0 ASC);
SELECT * FROM vt0, v0 WHERE (((((vt0.c0) NOT NULL)) ISNULL)) ORDER BY vt0.c0 ASC;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((- (v0.c0)), ((vt0.c0)!=(vt0.c0)), (vt0.c0 IN ())))>((LIKELIHOOD(v0.c0, 0.0487577393644858), ((v0.c0) ISNULL), (((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, 0.9767603313891444)) AND ((vt0.c0, v0.c0, v0.c0)))))));
SELECT SUM(count) FROM (SELECT ((((((- (v0.c0)), ((vt0.c0)!=(vt0.c0)), (vt0.c0 IN ())))>((LIKELIHOOD(v0.c0, 0.0487577393644858), ((v0.c0) ISNULL), (((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, 0.9767603313891444)) AND ((vt0.c0, v0.c0, v0.c0))))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((- (v0.c0)), ((vt0.c0)!=(vt0.c0)), (vt0.c0 IN ())))>((LIKELIHOOD(v0.c0, 0.0487577393644858), ((v0.c0) ISNULL), (((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, 0.9767603313891444)) AND ((vt0.c0, v0.c0, v0.c0)))))));
SELECT SUM(count) FROM (SELECT ((((((- (v0.c0)), ((vt0.c0)!=(vt0.c0)), (vt0.c0 IN ())))>((LIKELIHOOD(v0.c0, 0.0487577393644858), ((v0.c0) ISNULL), (((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, 0.9767603313891444)) AND ((vt0.c0, v0.c0, v0.c0))))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((- (v0.c0)), ((vt0.c0)!=(vt0.c0)), (vt0.c0 IN ())))>((LIKELIHOOD(v0.c0, 0.0487577393644858), ((v0.c0) ISNULL), (((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, 0.9767603313891444)) AND ((vt0.c0, v0.c0, v0.c0)))))));
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(x'' AS NUMERIC))AND((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS NUMERIC))AND((+ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(x'' AS NUMERIC))AND((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS NUMERIC))AND((+ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(x'' AS NUMERIC))AND((+ (v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((HEX(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((HEX(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((HEX(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((HEX(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((HEX(v0.c0)))));
SELECT ALL * FROM vt0, v0 WHERE ((- (CAST('' AS BLOB))));
SELECT SUM(count) FROM (SELECT (((- (CAST('' AS BLOB)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((- (CAST('' AS BLOB))));
SELECT SUM(count) FROM (SELECT (((- (CAST('' AS BLOB)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((- (CAST('' AS BLOB))));
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((((vt0.c0)=(vt0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)=(vt0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((((vt0.c0)=(vt0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)=(vt0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((((vt0.c0)=(vt0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (v0.c0 COLLATE NOCASE)));
SELECT * FROM vt0, v0 WHERE ((~ (((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((~ (((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((~ (((v0.c0) IS TRUE))));
SELECT ALL * FROM vt0, v0 WHERE ((- (CAST(vt0.c0 AS REAL)))) ORDER BY ((ABS(v0.c0))==('n')) ASC  NULLS LAST, (((v0.c0)) NOT BETWEEN ((((v0.c0)||('1017821990')))) AND ((((v0.c0) NOTNULL)))) DESC;
SELECT SUM(count) FROM (SELECT (((- (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((ABS(v0.c0))=('n')) ASC  NULLS LAST, (((v0.c0)) NOT BETWEEN ((((v0.c0)||('1017821990')))) AND ((((v0.c0) NOTNULL)))) DESC);
SELECT ALL * FROM vt0, v0 WHERE ((- (CAST(vt0.c0 AS REAL)))) ORDER BY ((ABS(v0.c0))==('n')) ASC  NULLS LAST, (((v0.c0)) NOT BETWEEN ((((v0.c0)||('1017821990')))) AND ((((v0.c0) NOTNULL)))) DESC;
SELECT SUM(count) FROM (SELECT (((- (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((ABS(v0.c0))=('n')) ASC  NULLS LAST, (((v0.c0)) NOT BETWEEN ((((v0.c0)||('1017821990')))) AND ((((v0.c0) NOTNULL)))) DESC);
SELECT ALL * FROM vt0, v0 WHERE ((- (CAST(vt0.c0 AS REAL)))) ORDER BY ((ABS(v0.c0))==('n')) ASC  NULLS LAST, (((v0.c0)) NOT BETWEEN ((((v0.c0)||('1017821990')))) AND ((((v0.c0) NOTNULL)))) DESC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((- ('1425984891'))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((- ('1425984891'))) ISNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((- ('1425984891'))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((- ('1425984891'))) ISNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((- ('1425984891'))) ISNULL));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED WHERE (v0.c0) ORDER BY (((v0.c0)) NOT BETWEEN (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) AND ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) AND ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED WHERE (v0.c0) ORDER BY (((v0.c0)) NOT BETWEEN (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) AND ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) AND ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED WHERE (v0.c0) ORDER BY (((v0.c0)) NOT BETWEEN (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) AND ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT * FROM v0, vt0 WHERE (((((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))+(((vt0.c0)LIKE('껱cr')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))+(((vt0.c0)LIKE('껱cr'))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))+(((vt0.c0)LIKE('껱cr')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))+(((vt0.c0)LIKE('껱cr'))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))+(((vt0.c0)LIKE('껱cr')))));
SELECT ALL COUNT(*) FROM v0 WHERE ('S8');
SELECT SUM(count) FROM (SELECT ALL (('S8') IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ('S8');
SELECT SUM(count) FROM (SELECT ALL (('S8') IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ('S8');
SELECT * FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))OR(v0.c0)))IS(((v0.c0) ISNULL)))) ORDER BY ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))IS(((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) IS TRUE) ASC);
SELECT * FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))OR(v0.c0)))IS(((v0.c0) ISNULL)))) ORDER BY ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))IS(((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) IS TRUE) ASC);
SELECT * FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))OR(v0.c0)))IS(((v0.c0) ISNULL)))) ORDER BY ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) IS TRUE) ASC;
SELECT * FROM v0 WHERE (load_extension(v0.c0, ((v0.c0)+(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(v0.c0, ((v0.c0)+(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (load_extension(v0.c0, ((v0.c0)+(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(v0.c0, ((v0.c0)+(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (load_extension(v0.c0, ((v0.c0)+(v0.c0))));
SELECT * FROM v0 WHERE ((NOT (1608939130))) ORDER BY CAST(((v0.c0)OR(v0.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (1608939130))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)OR(v0.c0)) AS TEXT)  NULLS FIRST);
SELECT * FROM v0 WHERE ((NOT (1608939130))) ORDER BY CAST(((v0.c0)OR(v0.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (1608939130))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)OR(v0.c0)) AS TEXT)  NULLS FIRST);
SELECT * FROM v0 WHERE ((NOT (1608939130))) ORDER BY CAST(((v0.c0)OR(v0.c0)) AS TEXT)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((NULL) ISNULL))AND(((vt0.c0)>>(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE))) ORDER BY (~ (CAST(v0.c0 AS INTEGER))) ASC  NULLS LAST, x''  NULLS FIRST, (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))))OR(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL) ISNULL))AND(((vt0.c0)>>(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ (CAST(v0.c0 AS INTEGER))) ASC  NULLS LAST, x''  NULLS FIRST, (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))))OR(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((NULL) ISNULL))AND(((vt0.c0)>>(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE))) ORDER BY (~ (CAST(v0.c0 AS INTEGER))) ASC  NULLS LAST, x''  NULLS FIRST, (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))))OR(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL) ISNULL))AND(((vt0.c0)>>(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ (CAST(v0.c0 AS INTEGER))) ASC  NULLS LAST, x''  NULLS FIRST, (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))))OR(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((NULL) ISNULL))AND(((vt0.c0)>>(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE))) ORDER BY (~ (CAST(v0.c0 AS INTEGER))) ASC  NULLS LAST, x''  NULLS FIRST, (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))))OR(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY (((NOT (v0.c0)))<(((v0.c0)%(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c0)))<(((v0.c0)%(v0.c0)))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY (((NOT (v0.c0)))<(((v0.c0)%(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c0)))<(((v0.c0)%(v0.c0)))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY (((NOT (v0.c0)))<(((v0.c0)%(v0.c0)))) ASC;
SELECT * FROM v0, vt0 WHERE (((CAST(vt0.c0 AS REAL)) BETWEEN (0.8151436867317852) AND (CAST(0.9277219458015863 AS REAL)))) ORDER BY ((UNLIKELY(vt0.c0)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) BETWEEN (0.8151436867317852) AND (CAST(0.9277219458015863 AS REAL)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((UNLIKELY(vt0.c0)) IS FALSE) DESC);
SELECT * FROM v0, vt0 WHERE (((CAST(vt0.c0 AS REAL)) BETWEEN (0.8151436867317852) AND (CAST(0.9277219458015863 AS REAL)))) ORDER BY ((UNLIKELY(vt0.c0)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) BETWEEN (0.8151436867317852) AND (CAST(0.9277219458015863 AS REAL)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((UNLIKELY(vt0.c0)) IS FALSE) DESC);
SELECT * FROM v0, vt0 WHERE (((CAST(vt0.c0 AS REAL)) BETWEEN (0.8151436867317852) AND (CAST(0.9277219458015863 AS REAL)))) ORDER BY ((UNLIKELY(vt0.c0)) IS FALSE) DESC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((((((((('-1445496184') NOT BETWEEN (vt0.c0) AND (v0.c0)))AND(CAST(v0.c0 AS REAL))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND((NOT ('879722093')))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((('-1445496184') NOT BETWEEN (vt0.c0) AND (v0.c0)))AND(CAST(v0.c0 AS REAL))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND((NOT ('879722093'))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((((((((('-1445496184') NOT BETWEEN (vt0.c0) AND (v0.c0)))AND(CAST(v0.c0 AS REAL))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND((NOT ('879722093')))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((('-1445496184') NOT BETWEEN (vt0.c0) AND (v0.c0)))AND(CAST(v0.c0 AS REAL))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND((NOT ('879722093'))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((((((((('-1445496184') NOT BETWEEN (vt0.c0) AND (v0.c0)))AND(CAST(v0.c0 AS REAL))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND((NOT ('879722093')))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, v0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, v0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON vt0.c0 WHERE (((vt0.c0)-((v0.c0 IN (v0.c0))))) ORDER BY (CAST(v0.c0 AS BLOB) IN ()) DESC, vt0.c0  NULLS LAST, CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)-((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON vt0.c0 ORDER BY (CAST(v0.c0 AS BLOB) IN ()) DESC, vt0.c0  NULLS LAST, CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END COLLATE BINARY);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON vt0.c0 WHERE (((vt0.c0)-((v0.c0 IN (v0.c0))))) ORDER BY (CAST(v0.c0 AS BLOB) IN ()) DESC, vt0.c0  NULLS LAST, CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)-((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON vt0.c0 ORDER BY (CAST(v0.c0 AS BLOB) IN ()) DESC, vt0.c0  NULLS LAST, CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END COLLATE BINARY);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON vt0.c0 WHERE (((vt0.c0)-((v0.c0 IN (v0.c0))))) ORDER BY (CAST(v0.c0 AS BLOB) IN ()) DESC, vt0.c0  NULLS LAST, CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END COLLATE BINARY;
SELECT * FROM v0 WHERE (LOWER(DISTINCT ((((v0.c0)AND(NULL)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((((v0.c0)AND(NULL)))OR(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (LOWER(DISTINCT ((((v0.c0)AND(NULL)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((((v0.c0)AND(NULL)))OR(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (LOWER(DISTINCT ((((v0.c0)AND(NULL)))OR(v0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (0.09262225152334391);
SELECT SUM(count) FROM (SELECT ALL ((0.09262225152334391) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.09262225152334391);
SELECT SUM(count) FROM (SELECT ALL ((0.09262225152334391) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.09262225152334391);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) NOTNULL)) ORDER BY (((vt0.c0)LIKE(vt0.c0)) IN (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)LIKE(vt0.c0)) IN (vt0.c0))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) NOTNULL)) ORDER BY (((vt0.c0)LIKE(vt0.c0)) IN (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)LIKE(vt0.c0)) IN (vt0.c0))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) NOTNULL)) ORDER BY (((vt0.c0)LIKE(vt0.c0)) IN (vt0.c0))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY);
SELECT * FROM v0, vt0 WHERE (NULL) ORDER BY (((v0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((NULLIF(v0.c0, vt0.c0)))) ASC, (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((-1105350783)))) NOTNULL) ASC, x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((NULLIF(v0.c0, vt0.c0)))) ASC, (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((-1105350783)))) NOTNULL) ASC, x'' ASC);
SELECT * FROM v0, vt0 WHERE (NULL) ORDER BY (((v0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((NULLIF(v0.c0, vt0.c0)))) ASC, (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((-1105350783)))) NOTNULL) ASC, x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((NULLIF(v0.c0, vt0.c0)))) ASC, (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((-1105350783)))) NOTNULL) ASC, x'' ASC);
SELECT * FROM v0, vt0 WHERE (NULL) ORDER BY (((v0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((NULLIF(v0.c0, vt0.c0)))) ASC, (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((-1105350783)))) NOTNULL) ASC, x'' ASC;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER)) BETWEEN ('-1717793230') AND ((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0))))) WHERE (((v0.c0) NOT NULL) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT NULL) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER)) BETWEEN ('-1717793230') AND ((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0))))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER)) BETWEEN ('-1717793230') AND ((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0))))) WHERE (((v0.c0) NOT NULL) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT NULL) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER)) BETWEEN ('-1717793230') AND ((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0))))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER)) BETWEEN ('-1717793230') AND ((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0))))) WHERE (((v0.c0) NOT NULL) COLLATE RTRIM COLLATE RTRIM);
SELECT * FROM vt0 INNER JOIN v0 ON ((((v0.c0)AND(v0.c0)))||(vt0.c0)) WHERE (CASE (((vt0.c0, vt0.c0, vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c0, vt0.c0, vt0.c0)))  WHEN (v0.c0 IN ()) THEN ((vt0.c0)|(v0.c0)) WHEN v0.c0 THEN vt0.c0 COLLATE NOCASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END THEN 'fzh{*L.[' WHEN ((((vt0.c0)OR(v0.c0)))AND(vt0.c0)) THEN IFNULL(v0.c0, v0.c0) WHEN CAST(v0.c0 AS BLOB) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END END) ORDER BY (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))) BETWEEN (IFNULL(v0.c0, v0.c0)) AND (vt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0, vt0.c0, vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c0, vt0.c0, vt0.c0)))  WHEN (v0.c0 IN ()) THEN ((vt0.c0)|(v0.c0)) WHEN v0.c0 THEN vt0.c0 COLLATE NOCASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END THEN 'fzh{*L.[' WHEN ((((vt0.c0)OR(v0.c0)))AND(vt0.c0)) THEN IFNULL(v0.c0, v0.c0) WHEN CAST(v0.c0 AS BLOB) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END END) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((v0.c0)AND(v0.c0)))||(vt0.c0)) ORDER BY (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))) BETWEEN (IFNULL(v0.c0, v0.c0)) AND (vt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM vt0 INNER JOIN v0 ON ((((v0.c0)AND(v0.c0)))||(vt0.c0)) WHERE (CASE (((vt0.c0, vt0.c0, vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c0, vt0.c0, vt0.c0)))  WHEN (v0.c0 IN ()) THEN ((vt0.c0)|(v0.c0)) WHEN v0.c0 THEN vt0.c0 COLLATE NOCASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END THEN 'fzh{*L.[' WHEN ((((vt0.c0)OR(v0.c0)))AND(vt0.c0)) THEN IFNULL(v0.c0, v0.c0) WHEN CAST(v0.c0 AS BLOB) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END END) ORDER BY (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))) BETWEEN (IFNULL(v0.c0, v0.c0)) AND (vt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0, vt0.c0, vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c0, vt0.c0, vt0.c0)))  WHEN (v0.c0 IN ()) THEN ((vt0.c0)|(v0.c0)) WHEN v0.c0 THEN vt0.c0 COLLATE NOCASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END THEN 'fzh{*L.[' WHEN ((((vt0.c0)OR(v0.c0)))AND(vt0.c0)) THEN IFNULL(v0.c0, v0.c0) WHEN CAST(v0.c0 AS BLOB) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END END) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((v0.c0)AND(v0.c0)))||(vt0.c0)) ORDER BY (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))) BETWEEN (IFNULL(v0.c0, v0.c0)) AND (vt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM vt0 INNER JOIN v0 ON ((((v0.c0)AND(v0.c0)))||(vt0.c0)) WHERE (CASE (((vt0.c0, vt0.c0, vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c0, vt0.c0, vt0.c0)))  WHEN (v0.c0 IN ()) THEN ((vt0.c0)|(v0.c0)) WHEN v0.c0 THEN vt0.c0 COLLATE NOCASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END THEN 'fzh{*L.[' WHEN ((((vt0.c0)OR(v0.c0)))AND(vt0.c0)) THEN IFNULL(v0.c0, v0.c0) WHEN CAST(v0.c0 AS BLOB) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END END) ORDER BY (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))) BETWEEN (IFNULL(v0.c0, v0.c0)) AND (vt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, NULL, vt0.c0))=((x'', vt0.c0, vt0.c0))) COLLATE RTRIM) ORDER BY ('V0' IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, NULL, vt0.c0))=((x'', vt0.c0, vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ('V0' IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, NULL, vt0.c0))=((x'', vt0.c0, vt0.c0))) COLLATE RTRIM) ORDER BY ('V0' IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, NULL, vt0.c0))=((x'', vt0.c0, vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ('V0' IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, NULL, vt0.c0))=((x'', vt0.c0, vt0.c0))) COLLATE RTRIM) ORDER BY ('V0' IN ())  NULLS LAST;
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))-(vt0.c0))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) ISNULL)  NULLS FIRST, (('*㓮')%((vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))-(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) ISNULL)  NULLS FIRST, (('*㓮')%((vt0.c0 IN ()))) ASC);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))-(vt0.c0))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) ISNULL)  NULLS FIRST, (('*㓮')%((vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))-(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) ISNULL)  NULLS FIRST, (('*㓮')%((vt0.c0 IN ()))) ASC);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))-(vt0.c0))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) ISNULL)  NULLS FIRST, (('*㓮')%((vt0.c0 IN ()))) ASC;
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON (~ ('')) WHERE ((- (v0.c0 COLLATE NOCASE))) ORDER BY (((((v0.c0) IS FALSE), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))), CASE WHEN v0.c0 THEN vt0.c0 ELSE '-1833873302' END))==((((vt0.c0)>=(v0.c0)), ((vt0.c0)<<(vt0.c0)), ((v0.c0)+(vt0.c0))))), 0x621f6f5 COLLATE BINARY DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((((v0.c0)/(v0.c0)))) AND ((0.8280784619666431)));
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (~ ('')) ORDER BY (((((v0.c0) IS FALSE), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))), CASE WHEN v0.c0 THEN vt0.c0 ELSE '-1833873302' END))==((((vt0.c0)>=(v0.c0)), ((vt0.c0)<<(vt0.c0)), ((v0.c0)+(vt0.c0))))), 0X621f6f5 COLLATE BINARY DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((((v0.c0)/(v0.c0)))) AND ((0.8280784619666431))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON (~ ('')) WHERE ((- (v0.c0 COLLATE NOCASE))) ORDER BY (((((v0.c0) IS FALSE), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))), CASE WHEN v0.c0 THEN vt0.c0 ELSE '-1833873302' END))==((((vt0.c0)>=(v0.c0)), ((vt0.c0)<<(vt0.c0)), ((v0.c0)+(vt0.c0))))), 0x621f6f5 COLLATE BINARY DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((((v0.c0)/(v0.c0)))) AND ((0.8280784619666431)));
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (~ ('')) ORDER BY (((((v0.c0) IS FALSE), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))), CASE WHEN v0.c0 THEN vt0.c0 ELSE '-1833873302' END))==((((vt0.c0)>=(v0.c0)), ((vt0.c0)<<(vt0.c0)), ((v0.c0)+(vt0.c0))))), 0X621f6f5 COLLATE BINARY DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((((v0.c0)/(v0.c0)))) AND ((0.8280784619666431))));
SELECT COUNT(*) FROM v0 WHERE (CAST(UNLIKELY(v0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UNLIKELY(v0.c0) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(UNLIKELY(v0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UNLIKELY(v0.c0) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(UNLIKELY(v0.c0) AS TEXT));
SELECT COUNT(*) FROM v0 WHERE ((~ (((((v0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((~ (((((v0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((~ (((((v0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))AND(((vt0.c0) ISNULL))))AND((vt0.c0 IN ())))) ORDER BY (- ((~ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS BLOB))AND(((vt0.c0) ISNULL))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (- ((~ (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))AND(((vt0.c0) ISNULL))))AND((vt0.c0 IN ())))) ORDER BY (- ((~ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS BLOB))AND(((vt0.c0) ISNULL))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (- ((~ (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))AND(((vt0.c0) ISNULL))))AND((vt0.c0 IN ())))) ORDER BY (- ((~ (vt0.c0))))  NULLS LAST;
SELECT * FROM vt0, v0 WHERE (CASE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN ((((v0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN (v0.c0)) ELSE v0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN ((((v0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN (v0.c0)) ELSE v0.c0 END) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CASE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN ((((v0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN (v0.c0)) ELSE v0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN ((((v0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN (v0.c0)) ELSE v0.c0 END) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CASE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN ((((v0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN (v0.c0)) ELSE v0.c0 END);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0) ORDER BY (~ ((- (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ ((- (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0) ORDER BY (~ ((- (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ ((- (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0) ORDER BY (~ ((- (vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON UNLIKELY(v0.c0) WHERE (((((((vt0.c0)>=(vt0.c0)))OR((vt0.c0 IN ()))))AND(((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)>=(vt0.c0)))OR((vt0.c0 IN ()))))AND(((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON UNLIKELY(v0.c0));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON UNLIKELY(v0.c0) WHERE (((((((vt0.c0)>=(vt0.c0)))OR((vt0.c0 IN ()))))AND(((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)>=(vt0.c0)))OR((vt0.c0 IN ()))))AND(((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON UNLIKELY(v0.c0));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON UNLIKELY(v0.c0) WHERE (((((((vt0.c0)>=(vt0.c0)))OR((vt0.c0 IN ()))))AND(((v0.c0) ISNULL))));
SELECT * FROM v0, vt0 WHERE ((((1.203919681E9, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)), ABS(DISTINCT v0.c0))) AND ((0xffffffffa77fb40a, ((v0.c0) ISNULL), (- (v0.c0)))))) ORDER BY IFNULL(TRIM(vt0.c0), (NOT (v0.c0))) ASC, (((vt0.c0 IN ())) NOT BETWEEN (vt0.c0) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((1.203919681E9, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)), ABS(DISTINCT v0.c0))) AND ((0xffffffffa77fb40a, ((v0.c0) ISNULL), (- (v0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY IFNULL(TRIM(vt0.c0), (NOT (v0.c0))) ASC, (((vt0.c0 IN ())) NOT BETWEEN (vt0.c0) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))) DESC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE ((((1.203919681E9, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)), ABS(DISTINCT v0.c0))) AND ((0xffffffffa77fb40a, ((v0.c0) ISNULL), (- (v0.c0)))))) ORDER BY IFNULL(TRIM(vt0.c0), (NOT (v0.c0))) ASC, (((vt0.c0 IN ())) NOT BETWEEN (vt0.c0) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((1.203919681E9, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)), ABS(DISTINCT v0.c0))) AND ((0xffffffffa77fb40a, ((v0.c0) ISNULL), (- (v0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY IFNULL(TRIM(vt0.c0), (NOT (v0.c0))) ASC, (((vt0.c0 IN ())) NOT BETWEEN (vt0.c0) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))) DESC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE ((((1.203919681E9, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)), ABS(DISTINCT v0.c0))) AND ((0xffffffffa77fb40a, ((v0.c0) ISNULL), (- (v0.c0)))))) ORDER BY IFNULL(TRIM(vt0.c0), (NOT (v0.c0))) ASC, (((vt0.c0 IN ())) NOT BETWEEN (vt0.c0) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((((vt0.c0))<((v0.c0))))%(((((NULL)OR(NULL)))OR(vt0.c0))))) ORDER BY vt0.c0 DESC, HEX(DISTINCT v0.c0 COLLATE NOCASE) ASC  NULLS FIRST, ((((v0.c0))>=((vt0.c0))) IN (((v0.c0) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<((v0.c0))))%(((((NULL)OR(NULL)))OR(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY vt0.c0 DESC, HEX(DISTINCT v0.c0 COLLATE NOCASE) ASC  NULLS FIRST, ((((v0.c0))>=((vt0.c0))) IN (((v0.c0) IS TRUE))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((((vt0.c0))<((v0.c0))))%(((((NULL)OR(NULL)))OR(vt0.c0))))) ORDER BY vt0.c0 DESC, HEX(DISTINCT v0.c0 COLLATE NOCASE) ASC  NULLS FIRST, ((((v0.c0))>=((vt0.c0))) IN (((v0.c0) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<((v0.c0))))%(((((NULL)OR(NULL)))OR(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY vt0.c0 DESC, HEX(DISTINCT v0.c0 COLLATE NOCASE) ASC  NULLS FIRST, ((((v0.c0))>=((vt0.c0))) IN (((v0.c0) IS TRUE))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((((vt0.c0))<((v0.c0))))%(((((NULL)OR(NULL)))OR(vt0.c0))))) ORDER BY vt0.c0 DESC, HEX(DISTINCT v0.c0 COLLATE NOCASE) ASC  NULLS FIRST, ((((v0.c0))>=((vt0.c0))) IN (((v0.c0) IS TRUE))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN '-251460996' COLLATE RTRIM THEN (- (vt0.c0)) WHEN ((vt0.c0)AND(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)-(vt0.c0)) ELSE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR('(d0(Q')))AND(vt0.c0)) END) ORDER BY (~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN '-251460996' COLLATE RTRIM THEN (- (vt0.c0)) WHEN ((vt0.c0)AND(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)-(vt0.c0)) ELSE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR('(d0(Q')))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN '-251460996' COLLATE RTRIM THEN (- (vt0.c0)) WHEN ((vt0.c0)AND(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)-(vt0.c0)) ELSE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR('(d0(Q')))AND(vt0.c0)) END) ORDER BY (~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN '-251460996' COLLATE RTRIM THEN (- (vt0.c0)) WHEN ((vt0.c0)AND(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)-(vt0.c0)) ELSE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR('(d0(Q')))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN '-251460996' COLLATE RTRIM THEN (- (vt0.c0)) WHEN ((vt0.c0)AND(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)-(vt0.c0)) ELSE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR('(d0(Q')))AND(vt0.c0)) END) ORDER BY (~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((vt0.c0 COLLATE NOCASE)*(((vt0.c0) BETWEEN ('884119317') AND (vt0.c0)))) WHERE (0.8280784619666431);
SELECT SUM(count) FROM (SELECT ALL ((0.8280784619666431) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((vt0.c0 COLLATE NOCASE)*(((vt0.c0) BETWEEN ('884119317') AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((vt0.c0 COLLATE NOCASE)*(((vt0.c0) BETWEEN ('884119317') AND (vt0.c0)))) WHERE (0.8280784619666431);
SELECT SUM(count) FROM (SELECT ALL ((0.8280784619666431) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((vt0.c0 COLLATE NOCASE)*(((vt0.c0) BETWEEN ('884119317') AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((vt0.c0 COLLATE NOCASE)*(((vt0.c0) BETWEEN ('884119317') AND (vt0.c0)))) WHERE (0.8280784619666431);
SELECT COUNT(*) FROM vt0 WHERE (((((- (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>=((vt0.c0 COLLATE BINARY, ((vt0.c0)||(0.0045490138897971155)), vt0.c0)))) ORDER BY (((vt0.c0 IN ())) BETWEEN ((vt0.c0 IN ())) AND (TRIM(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((- (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>=((vt0.c0 COLLATE BINARY, ((vt0.c0)||(0.0045490138897971155)), vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) BETWEEN ((vt0.c0 IN ())) AND (TRIM(vt0.c0))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((- (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>=((vt0.c0 COLLATE BINARY, ((vt0.c0)||(0.0045490138897971155)), vt0.c0)))) ORDER BY (((vt0.c0 IN ())) BETWEEN ((vt0.c0 IN ())) AND (TRIM(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((- (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>=((vt0.c0 COLLATE BINARY, ((vt0.c0)||(0.0045490138897971155)), vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) BETWEEN ((vt0.c0 IN ())) AND (TRIM(vt0.c0))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((- (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>=((vt0.c0 COLLATE BINARY, ((vt0.c0)||(0.0045490138897971155)), vt0.c0)))) ORDER BY (((vt0.c0 IN ())) BETWEEN ((vt0.c0 IN ())) AND (TRIM(vt0.c0))) DESC;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN ((((vt0.c0))<>((vt0.c0)))) AND (vt0.c0 COLLATE BINARY))) ORDER BY ((((vt0.c0)>=(vt0.c0)))<<((((vt0.c0))<((vt0.c0))))) DESC  NULLS LAST, CAST(((vt0.c0) NOT NULL) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>=(vt0.c0)))<<((((vt0.c0))<((vt0.c0))))) DESC  NULLS LAST, CAST(((vt0.c0) NOT NULL) AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN ((((vt0.c0))<>((vt0.c0)))) AND (vt0.c0 COLLATE BINARY))) ORDER BY ((((vt0.c0)>=(vt0.c0)))<<((((vt0.c0))<((vt0.c0))))) DESC  NULLS LAST, CAST(((vt0.c0) NOT NULL) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>=(vt0.c0)))<<((((vt0.c0))<((vt0.c0))))) DESC  NULLS LAST, CAST(((vt0.c0) NOT NULL) AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN ((((vt0.c0))<>((vt0.c0)))) AND (vt0.c0 COLLATE BINARY))) ORDER BY ((((vt0.c0)>=(vt0.c0)))<<((((vt0.c0))<((vt0.c0))))) DESC  NULLS LAST, CAST(((vt0.c0) NOT NULL) AS INTEGER) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN (v0.c0, v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (v0.c0, v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN (v0.c0, v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (v0.c0, v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN (v0.c0, v0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) IS FALSE))||(json_type('0.8814636939450045'))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS FALSE))||(json_type('0.8814636939450045')))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) IS FALSE))||(json_type('0.8814636939450045'))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS FALSE))||(json_type('0.8814636939450045')))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) IS FALSE))||(json_type('0.8814636939450045'))));
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))IS(0.7896900123934406))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))IS(0.7896900123934406))) IS TRUE)  as count FROM v0 ORDER BY NULL DESC);
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))IS(0.7896900123934406))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))IS(0.7896900123934406))) IS TRUE)  as count FROM v0 ORDER BY NULL DESC);
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))IS(0.7896900123934406))) ORDER BY NULL DESC;
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY ((((((v0.c0)AND(v0.c0)))OR(v0.c0)))IS NOT(((v0.c0) BETWEEN (535227219) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)AND(v0.c0)))OR(v0.c0)))IS NOT(((v0.c0) BETWEEN (535227219) AND (v0.c0)))));
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY ((((((v0.c0)AND(v0.c0)))OR(v0.c0)))IS NOT(((v0.c0) BETWEEN (535227219) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)AND(v0.c0)))OR(v0.c0)))IS NOT(((v0.c0) BETWEEN (535227219) AND (v0.c0)))));
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY ((((((v0.c0)AND(v0.c0)))OR(v0.c0)))IS NOT(((v0.c0) BETWEEN (535227219) AND (v0.c0))));
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS REAL));
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS INTEGER))GLOB(((v0.c0)=(v0.c0))))) ORDER BY ((x'')LIKE(v0.c0)) ASC  NULLS FIRST, v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS INTEGER))GLOB(((v0.c0)=(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((x'')LIKE(v0.c0)) ASC  NULLS FIRST, v0.c0 DESC);
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS INTEGER))GLOB(((v0.c0)=(v0.c0))))) ORDER BY ((x'')LIKE(v0.c0)) ASC  NULLS FIRST, v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS INTEGER))GLOB(((v0.c0)=(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((x'')LIKE(v0.c0)) ASC  NULLS FIRST, v0.c0 DESC);
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS INTEGER))GLOB(((v0.c0)=(v0.c0))))) ORDER BY ((x'')LIKE(v0.c0)) ASC  NULLS FIRST, v0.c0 DESC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0)/(vt0.c0))) NOT BETWEEN (((v0.c0) IS FALSE)) AND (UNLIKELY(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)/(vt0.c0))) NOT BETWEEN (((v0.c0) IS FALSE)) AND (UNLIKELY(DISTINCT vt0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0)/(vt0.c0))) NOT BETWEEN (((v0.c0) IS FALSE)) AND (UNLIKELY(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)/(vt0.c0))) NOT BETWEEN (((v0.c0) IS FALSE)) AND (UNLIKELY(DISTINCT vt0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0)/(vt0.c0))) NOT BETWEEN (((v0.c0) IS FALSE)) AND (UNLIKELY(DISTINCT vt0.c0))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((+ (((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))))) ORDER BY (((('-703079609')AND(CAST(vt0.c0 AS BLOB))))AND((vt0.c0 IN ())))  NULLS FIRST, (NOT ((vt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((('-703079609')AND(CAST(vt0.c0 AS BLOB))))AND((vt0.c0 IN ())))  NULLS FIRST, (NOT ((vt0.c0 IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((+ (((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))))) ORDER BY (((('-703079609')AND(CAST(vt0.c0 AS BLOB))))AND((vt0.c0 IN ())))  NULLS FIRST, (NOT ((vt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((('-703079609')AND(CAST(vt0.c0 AS BLOB))))AND((vt0.c0 IN ())))  NULLS FIRST, (NOT ((vt0.c0 IN ()))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (vt0.c0) ORDER BY CAST(((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS REAL) DESC);
SELECT ALL * FROM vt0, v0 WHERE (vt0.c0) ORDER BY CAST(((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS REAL) DESC);
SELECT ALL * FROM vt0, v0 WHERE (vt0.c0) ORDER BY CAST(((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS REAL) DESC;
SELECT ALL * FROM vt0, v0 WHERE ((- (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((- (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((- (v0.c0)) COLLATE NOCASE);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON (+ (((v0.c0)<>(vt0.c0)))) WHERE (((((v0.c0))<=((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((v0.c0))<=((vt0.c0))) IN ())) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (+ (((v0.c0)<>(vt0.c0)))));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON (+ (((v0.c0)<>(vt0.c0)))) WHERE (((((v0.c0))<=((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((v0.c0))<=((vt0.c0))) IN ())) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (+ (((v0.c0)<>(vt0.c0)))));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON (+ (((v0.c0)<>(vt0.c0)))) WHERE (((((v0.c0))<=((vt0.c0))) IN ()));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (0.5872152967821053);
SELECT SUM(count) FROM (SELECT ((0.5872152967821053) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (0.5872152967821053);
SELECT SUM(count) FROM (SELECT ((0.5872152967821053) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (0.5872152967821053);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)IS(v0.c0)))IS NOT(((v0.c0) NOT BETWEEN (v0.c0) AND (0.4196645619961564))))) ORDER BY (NOT ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)IS(v0.c0)))IS NOT(((v0.c0) NOT BETWEEN (v0.c0) AND (0.4196645619961564))))) IS TRUE)  as count FROM v0 ORDER BY (NOT ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)IS(v0.c0)))IS NOT(((v0.c0) NOT BETWEEN (v0.c0) AND (0.4196645619961564))))) ORDER BY (NOT ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)IS(v0.c0)))IS NOT(((v0.c0) NOT BETWEEN (v0.c0) AND (0.4196645619961564))))) IS TRUE)  as count FROM v0 ORDER BY (NOT ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)IS(v0.c0)))IS NOT(((v0.c0) NOT BETWEEN (v0.c0) AND (0.4196645619961564))))) ORDER BY (NOT ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))  NULLS FIRST;
SELECT * FROM vt0, v0 WHERE ((((- (v0.c0))) IS FALSE)) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c0 ASC);
SELECT * FROM vt0, v0 WHERE ((((- (v0.c0))) IS FALSE)) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c0 ASC);
SELECT * FROM vt0, v0 WHERE ((((- (v0.c0))) IS FALSE)) ORDER BY v0.c0 ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((CASE vt0.c0  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((vt0.c0)==(vt0.c0)))))AND(((vt0.c0)IS NOT(vt0.c0)))))AND(RTRIM(vt0.c0))))AND(((vt0.c0)AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CASE vt0.c0  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((vt0.c0)==(vt0.c0)))))AND(((vt0.c0)IS NOT(vt0.c0)))))AND(RTRIM(vt0.c0))))AND(((vt0.c0)AND(vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((CASE vt0.c0  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((vt0.c0)==(vt0.c0)))))AND(((vt0.c0)IS NOT(vt0.c0)))))AND(RTRIM(vt0.c0))))AND(((vt0.c0)AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CASE vt0.c0  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((vt0.c0)==(vt0.c0)))))AND(((vt0.c0)IS NOT(vt0.c0)))))AND(RTRIM(vt0.c0))))AND(((vt0.c0)AND(vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((CASE vt0.c0  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((vt0.c0)==(vt0.c0)))))AND(((vt0.c0)IS NOT(vt0.c0)))))AND(RTRIM(vt0.c0))))AND(((vt0.c0)AND(vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS INTEGER)) ORDER BY ((CASE x''  WHEN vt0.c0 THEN vt0.c0 END)=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE x''  WHEN vt0.c0 THEN vt0.c0 END)==(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS INTEGER)) ORDER BY ((CASE x''  WHEN vt0.c0 THEN vt0.c0 END)=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE x''  WHEN vt0.c0 THEN vt0.c0 END)==(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS INTEGER)) ORDER BY ((CASE x''  WHEN vt0.c0 THEN vt0.c0 END)=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (TRIM(((v0.c0) NOTNULL), v0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((TRIM(((v0.c0) NOTNULL), v0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (TRIM(((v0.c0) NOTNULL), v0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((TRIM(((v0.c0) NOTNULL), v0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (TRIM(((v0.c0) NOTNULL), v0.c0 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(v0.c0 COLLATE BINARY AS NUMERIC)) ORDER BY ((((((((((vt0.c0)!=(vt0.c0)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))))))AND(v0.c0)))OR((((vt0.c0, v0.c0, v0.c0))>=((v0.c0, 'ᥟ^8\', v0.c0))))))AND(CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((((vt0.c0)<>(vt0.c0)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))))))AND(v0.c0)))OR((((vt0.c0, v0.c0, v0.c0))>=((v0.c0, 'ᥟ^8\', v0.c0))))))AND(CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(v0.c0 COLLATE BINARY AS NUMERIC)) ORDER BY ((((((((((vt0.c0)!=(vt0.c0)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))))))AND(v0.c0)))OR((((vt0.c0, v0.c0, v0.c0))>=((v0.c0, 'ᥟ^8\', v0.c0))))))AND(CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((((vt0.c0)<>(vt0.c0)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))))))AND(v0.c0)))OR((((vt0.c0, v0.c0, v0.c0))>=((v0.c0, 'ᥟ^8\', v0.c0))))))AND(CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(v0.c0 COLLATE BINARY AS NUMERIC)) ORDER BY ((((((((((vt0.c0)!=(vt0.c0)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))))))AND(v0.c0)))OR((((vt0.c0, v0.c0, v0.c0))>=((v0.c0, 'ᥟ^8\', v0.c0))))))AND(CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL))/((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))/((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL))/((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))/((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL))/((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL * FROM v0 WHERE (CASE WHEN ((((v0.c0)AND(v0.c0)))AND(x'f71e')) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN v0.c0 THEN x'' WHEN ((v0.c0)*(v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((v0.c0)AND(v0.c0)))AND(x'f71e')) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN v0.c0 THEN x'' WHEN ((v0.c0)*(v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN ((((v0.c0)AND(v0.c0)))AND(x'f71e')) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN v0.c0 THEN x'' WHEN ((v0.c0)*(v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((v0.c0)AND(v0.c0)))AND(x'f71e')) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN v0.c0 THEN x'' WHEN ((v0.c0)*(v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN ((((v0.c0)AND(v0.c0)))AND(x'f71e')) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN v0.c0 THEN x'' WHEN ((v0.c0)*(v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS NUMERIC));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((json_patch(v0.c0, vt0.c0)))>((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN '*nᇋ' THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'UKཚ\nDic' END)))) ORDER BY CAST(vt0.c0 AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((json_patch(v0.c0, vt0.c0)))>((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN '*nᇋ' THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'UKཚ\nDic' END)))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(vt0.c0 AS NUMERIC));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((json_patch(v0.c0, vt0.c0)))>((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN '*nᇋ' THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'UKཚ\nDic' END)))) ORDER BY CAST(vt0.c0 AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((json_patch(v0.c0, vt0.c0)))>((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN '*nᇋ' THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'UKཚ\nDic' END)))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(vt0.c0 AS NUMERIC));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((json_patch(v0.c0, vt0.c0)))>((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN '*nᇋ' THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'UKཚ\nDic' END)))) ORDER BY CAST(vt0.c0 AS NUMERIC);
SELECT ALL * FROM v0 WHERE (((LIKELIHOOD(v0.c0, 0.6117374606630981)) IS FALSE)) ORDER BY (((((v0.c0) ISNULL)))>((((v0.c0) BETWEEN (v0.c0) AND (0.9470952383129583))))), ((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(v0.c0, 0.6117374606630981)) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0) ISNULL)))>((((v0.c0) BETWEEN (v0.c0) AND (0.9470952383129583))))), ((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0))) IN ()) DESC);
SELECT ALL * FROM v0 WHERE (((LIKELIHOOD(v0.c0, 0.6117374606630981)) IS FALSE)) ORDER BY (((((v0.c0) ISNULL)))>((((v0.c0) BETWEEN (v0.c0) AND (0.9470952383129583))))), ((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(v0.c0, 0.6117374606630981)) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0) ISNULL)))>((((v0.c0) BETWEEN (v0.c0) AND (0.9470952383129583))))), ((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0))) IN ()) DESC);
SELECT ALL * FROM v0 WHERE (((LIKELIHOOD(v0.c0, 0.6117374606630981)) IS FALSE)) ORDER BY (((((v0.c0) ISNULL)))>((((v0.c0) BETWEEN (v0.c0) AND (0.9470952383129583))))), ((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0))) IN ()) DESC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0) NOT NULL))))) ORDER BY ((((((((((((vt0.c0)OR(-0.0)))OR(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(x'')))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST, (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)OR(-0.0)))OR(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(x'')))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST, (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0) NOT NULL))))) ORDER BY ((((((((((((vt0.c0)OR(-0.0)))OR(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(x'')))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST, (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)OR(-0.0)))OR(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(x'')))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST, (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0) NOT NULL))))) ORDER BY ((((((((((((vt0.c0)OR(-0.0)))OR(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(x'')))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST, (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (~ (v0.c0)) WHERE ((('D(') NOTNULL)) ORDER BY highlight(((((((((v0.c0)AND(v0.c0)))OR(vt0.c0)))AND('T,mViX.')))OR(vt0.c0)), vt0.c0, CAST(v0.c0 AS NUMERIC), CASE vt0.c0  WHEN vt0.c0 THEN 0.14766800235050792 END);
SELECT SUM(count) FROM (SELECT (((('D(') NOTNULL)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (~ (v0.c0)) ORDER BY highlight(((((((((v0.c0)AND(v0.c0)))OR(vt0.c0)))AND('T,mViX.')))OR(vt0.c0)), vt0.c0, CAST(v0.c0 AS NUMERIC), CASE vt0.c0  WHEN vt0.c0 THEN 0.14766800235050792 END));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (~ (v0.c0)) WHERE ((('D(') NOTNULL)) ORDER BY highlight(((((((((v0.c0)AND(v0.c0)))OR(vt0.c0)))AND('T,mViX.')))OR(vt0.c0)), vt0.c0, CAST(v0.c0 AS NUMERIC), CASE vt0.c0  WHEN vt0.c0 THEN 0.14766800235050792 END);
SELECT SUM(count) FROM (SELECT (((('D(') NOTNULL)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (~ (v0.c0)) ORDER BY highlight(((((((((v0.c0)AND(v0.c0)))OR(vt0.c0)))AND('T,mViX.')))OR(vt0.c0)), vt0.c0, CAST(v0.c0 AS NUMERIC), CASE vt0.c0  WHEN vt0.c0 THEN 0.14766800235050792 END));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (~ (v0.c0)) WHERE ((('D(') NOTNULL)) ORDER BY highlight(((((((((v0.c0)AND(v0.c0)))OR(vt0.c0)))AND('T,mViX.')))OR(vt0.c0)), vt0.c0, CAST(v0.c0 AS NUMERIC), CASE vt0.c0  WHEN vt0.c0 THEN 0.14766800235050792 END);
SELECT * FROM v0 WHERE ((('1282075881')>=(((v0.c0)%(v0.c0))))) ORDER BY (((v0.c0)AND(x'7b05')) IN ()), CAST(v0.c0 COLLATE BINARY AS REAL)  NULLS LAST, (+ (((v0.c0)AND(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('1282075881')>=(((v0.c0)%(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)AND(x'7b05')) IN ()), CAST(v0.c0 COLLATE BINARY AS REAL)  NULLS LAST, (+ (((v0.c0)AND(v0.c0)))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((('1282075881')>=(((v0.c0)%(v0.c0))))) ORDER BY (((v0.c0)AND(x'7b05')) IN ()), CAST(v0.c0 COLLATE BINARY AS REAL)  NULLS LAST, (+ (((v0.c0)AND(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('1282075881')>=(((v0.c0)%(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)AND(x'7b05')) IN ()), CAST(v0.c0 COLLATE BINARY AS REAL)  NULLS LAST, (+ (((v0.c0)AND(v0.c0)))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((('1282075881')>=(((v0.c0)%(v0.c0))))) ORDER BY (((v0.c0)AND(x'7b05')) IN ()), CAST(v0.c0 COLLATE BINARY AS REAL)  NULLS LAST, (+ (((v0.c0)AND(v0.c0)))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (CASE WHEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 END THEN x'' COLLATE BINARY ELSE STRFTIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, '250737210') END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 END THEN x'' COLLATE BINARY ELSE STRFTIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, '250737210') END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 END THEN x'' COLLATE BINARY ELSE STRFTIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, '250737210') END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 END THEN x'' COLLATE BINARY ELSE STRFTIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, '250737210') END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 END THEN x'' COLLATE BINARY ELSE STRFTIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, '250737210') END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((vt0.c0))!=((vt0.c0))))AND((~ (vt0.c0)))))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0))!=((vt0.c0))))AND((~ (vt0.c0)))))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((vt0.c0))!=((vt0.c0))))AND((~ (vt0.c0)))))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0))!=((vt0.c0))))AND((~ (vt0.c0)))))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((vt0.c0))!=((vt0.c0))))AND((~ (vt0.c0)))))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL * FROM vt0, v0 WHERE ((TYPEOF(DISTINCT vt0.c0) IN ())) ORDER BY (- (((v0.c0)IS NOT(vt0.c0)))), x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((TYPEOF(DISTINCT vt0.c0) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED, v0 ORDER BY (- (((v0.c0)IS NOT(vt0.c0)))), x''  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((TYPEOF(DISTINCT vt0.c0) IN ())) ORDER BY (- (((v0.c0)IS NOT(vt0.c0)))), x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((TYPEOF(DISTINCT vt0.c0) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED, v0 ORDER BY (- (((v0.c0)IS NOT(vt0.c0)))), x''  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((TYPEOF(DISTINCT vt0.c0) IN ())) ORDER BY (- (((v0.c0)IS NOT(vt0.c0)))), x''  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0)))))<=((((vt0.c0) ISNULL)))) WHERE (0.6778287526513223) ORDER BY ((((v0.c0) IS TRUE)) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((vt0.c0)<=(v0.c0)))) DESC, (((+ (v0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((0.6778287526513223) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0)))))<=((((vt0.c0) ISNULL)))) ORDER BY ((((v0.c0) IS TRUE)) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((vt0.c0)<=(v0.c0)))) DESC, (((+ (v0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0)))))<=((((vt0.c0) ISNULL)))) WHERE (0.6778287526513223) ORDER BY ((((v0.c0) IS TRUE)) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((vt0.c0)<=(v0.c0)))) DESC, (((+ (v0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((0.6778287526513223) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0)))))<=((((vt0.c0) ISNULL)))) ORDER BY ((((v0.c0) IS TRUE)) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((vt0.c0)<=(v0.c0)))) DESC, (((+ (v0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0)))))<=((((vt0.c0) ISNULL)))) WHERE (0.6778287526513223) ORDER BY ((((v0.c0) IS TRUE)) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((vt0.c0)<=(v0.c0)))) DESC, (((+ (v0.c0))) ISNULL);
SELECT ALL * FROM v0 WHERE ((NOT (-965271732)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (-965271732))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((NOT (-965271732)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (-965271732))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((NOT (-965271732)));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ())) ORDER BY (((((vt0.c0) NOTNULL)))<>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) NOTNULL)))!=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ())) ORDER BY (((((vt0.c0) NOTNULL)))<>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) NOTNULL)))!=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ())) ORDER BY (((((vt0.c0) NOTNULL)))<>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) ORDER BY vt0.c0  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ((((NOT (v0.c0)))<(0.13202924821426198)));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0)))<(0.13202924821426198))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((NOT (v0.c0)))<(0.13202924821426198)));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0)))<(0.13202924821426198))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((NOT (v0.c0)))<(0.13202924821426198)));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) IS TRUE) IN ())) ORDER BY (((vt0.c0)) NOT BETWEEN (((913526556 IN ()))) AND ((((vt0.c0) NOT NULL))))  NULLS FIRST, 0.9561338278368959 DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((913526556 IN ()))) AND ((((vt0.c0) NOT NULL))))  NULLS FIRST, 0.9561338278368959 DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) IS TRUE) IN ())) ORDER BY (((vt0.c0)) NOT BETWEEN (((913526556 IN ()))) AND ((((vt0.c0) NOT NULL))))  NULLS FIRST, 0.9561338278368959 DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((913526556 IN ()))) AND ((((vt0.c0) NOT NULL))))  NULLS FIRST, 0.9561338278368959 DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) IS TRUE) IN ())) ORDER BY (((vt0.c0)) NOT BETWEEN (((913526556 IN ()))) AND ((((vt0.c0) NOT NULL))))  NULLS FIRST, 0.9561338278368959 DESC;
SELECT ALL * FROM v0 WHERE (0.08342753037473993);
SELECT SUM(count) FROM (SELECT ((0.08342753037473993) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.08342753037473993);
SELECT SUM(count) FROM (SELECT ((0.08342753037473993) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.08342753037473993);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((((DATETIME(v0.c0, v0.c0, vt0.c0))OR(((vt0.c0) IS TRUE))))OR((NOT (v0.c0)))))OR(((((((((vt0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(vt0.c0)))))OR(CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((((DATETIME(v0.c0, v0.c0, vt0.c0))OR(((vt0.c0) IS TRUE))))OR((NOT (v0.c0)))))OR(((((((((vt0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(vt0.c0)))))OR(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((((DATETIME(v0.c0, v0.c0, vt0.c0))OR(((vt0.c0) IS TRUE))))OR((NOT (v0.c0)))))OR(((((((((vt0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(vt0.c0)))))OR(CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((((DATETIME(v0.c0, v0.c0, vt0.c0))OR(((vt0.c0) IS TRUE))))OR((NOT (v0.c0)))))OR(((((((((vt0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(vt0.c0)))))OR(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((((DATETIME(v0.c0, v0.c0, vt0.c0))OR(((vt0.c0) IS TRUE))))OR((NOT (v0.c0)))))OR(((((((((vt0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(vt0.c0)))))OR(CAST(v0.c0 AS TEXT))));
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE ((((- (vt0.c0)))LIKE(-1857226081))) ORDER BY ((vt0.c0) NOTNULL) DESC  NULLS LAST, ((CAST(vt0.c0 AS TEXT))<>(((vt0.c0)>=('-1489542174'))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))LIKE(-1857226081))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY ((vt0.c0) NOTNULL) DESC  NULLS LAST, ((CAST(vt0.c0 AS TEXT))!=(((vt0.c0)>=('-1489542174')))));
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE ((((- (vt0.c0)))LIKE(-1857226081))) ORDER BY ((vt0.c0) NOTNULL) DESC  NULLS LAST, ((CAST(vt0.c0 AS TEXT))<>(((vt0.c0)>=('-1489542174'))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))LIKE(-1857226081))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY ((vt0.c0) NOTNULL) DESC  NULLS LAST, ((CAST(vt0.c0 AS TEXT))!=(((vt0.c0)>=('-1489542174')))));
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE ((((- (vt0.c0)))LIKE(-1857226081))) ORDER BY ((vt0.c0) NOTNULL) DESC  NULLS LAST, ((CAST(vt0.c0 AS TEXT))<>(((vt0.c0)>=('-1489542174'))));
SELECT ALL * FROM vt0, v0 WHERE (((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOTNULL));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CASE WHEN v0.c0 THEN vt0.c0 END)&(((vt0.c0)%(vt0.c0))))) ORDER BY v0.c0 DESC  NULLS LAST, ((v0.c0)==(v0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN vt0.c0 END)&(((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0 DESC  NULLS LAST, ((v0.c0)=(v0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CASE WHEN v0.c0 THEN vt0.c0 END)&(((vt0.c0)%(vt0.c0))))) ORDER BY v0.c0 DESC  NULLS LAST, ((v0.c0)==(v0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN vt0.c0 END)&(((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0 DESC  NULLS LAST, ((v0.c0)=(v0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CASE WHEN v0.c0 THEN vt0.c0 END)&(((vt0.c0)%(vt0.c0))))) ORDER BY v0.c0 DESC  NULLS LAST, ((v0.c0)==(v0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON CAST(vt0.c0 AS INTEGER) COLLATE BINARY COLLATE BINARY WHERE ('' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('' COLLATE RTRIM) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CAST(vt0.c0 AS INTEGER) COLLATE BINARY COLLATE BINARY);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON CAST(vt0.c0 AS INTEGER) COLLATE BINARY COLLATE BINARY WHERE ('' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('' COLLATE RTRIM) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CAST(vt0.c0 AS INTEGER) COLLATE BINARY COLLATE BINARY);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON CAST(vt0.c0 AS INTEGER) COLLATE BINARY COLLATE BINARY WHERE ('' COLLATE RTRIM);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON ((((vt0.c0) IS TRUE)) NOT BETWEEN (0.3407336033362802) AND ((v0.c0 IN ()))) WHERE (LIKE((+ (vt0.c0)), ((v0.c0) IS TRUE), 'k')) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN -32580673 END) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKE((+ (vt0.c0)), ((v0.c0) IS TRUE), 'k')) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((((vt0.c0) IS TRUE)) NOT BETWEEN (0.3407336033362802) AND ((v0.c0 IN ()))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN -32580673 END) NOTNULL)  NULLS LAST);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON ((((vt0.c0) IS TRUE)) NOT BETWEEN (0.3407336033362802) AND ((v0.c0 IN ()))) WHERE (LIKE((+ (vt0.c0)), ((v0.c0) IS TRUE), 'k')) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN -32580673 END) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKE((+ (vt0.c0)), ((v0.c0) IS TRUE), 'k')) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((((vt0.c0) IS TRUE)) NOT BETWEEN (0.3407336033362802) AND ((v0.c0 IN ()))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN -32580673 END) NOTNULL)  NULLS LAST);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON ((((vt0.c0) IS TRUE)) NOT BETWEEN (0.3407336033362802) AND ((v0.c0 IN ()))) WHERE (LIKE((+ (vt0.c0)), ((v0.c0) IS TRUE), 'k')) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN -32580673 END) NOTNULL)  NULLS LAST;
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((0.022197545072556557)) BETWEEN ((v0.c0)) AND (('-2117229932'))) COLLATE NOCASE WHERE (((v0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS TRUE)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((0.022197545072556557)) BETWEEN ((v0.c0)) AND (('-2117229932'))) COLLATE NOCASE);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((0.022197545072556557)) BETWEEN ((v0.c0)) AND (('-2117229932'))) COLLATE NOCASE WHERE (((v0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS TRUE)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((0.022197545072556557)) BETWEEN ((v0.c0)) AND (('-2117229932'))) COLLATE NOCASE);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((0.022197545072556557)) BETWEEN ((v0.c0)) AND (('-2117229932'))) COLLATE NOCASE WHERE (((v0.c0) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE vt0.c0  WHEN (- (0.614239089706494)) THEN '0.16290241984339882' WHEN ((NULL)OR(v0.c0)) THEN (vt0.c0 IN ()) WHEN 'wT' THEN (NULL IN ()) ELSE v0.c0 COLLATE RTRIM END) ORDER BY (((- (v0.c0)))>=(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN (- (0.614239089706494)) THEN '0.16290241984339882' WHEN ((NULL)OR(v0.c0)) THEN (vt0.c0 IN ()) WHEN 'wT' THEN (NULL IN ()) ELSE v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, v0 ORDER BY (((- (v0.c0)))>=(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE vt0.c0  WHEN (- (0.614239089706494)) THEN '0.16290241984339882' WHEN ((NULL)OR(v0.c0)) THEN (vt0.c0 IN ()) WHEN 'wT' THEN (NULL IN ()) ELSE v0.c0 COLLATE RTRIM END) ORDER BY (((- (v0.c0)))>=(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN (- (0.614239089706494)) THEN '0.16290241984339882' WHEN ((NULL)OR(v0.c0)) THEN (vt0.c0 IN ()) WHEN 'wT' THEN (NULL IN ()) ELSE v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, v0 ORDER BY (((- (v0.c0)))>=(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE vt0.c0  WHEN (- (0.614239089706494)) THEN '0.16290241984339882' WHEN ((NULL)OR(v0.c0)) THEN (vt0.c0 IN ()) WHEN 'wT' THEN (NULL IN ()) ELSE v0.c0 COLLATE RTRIM END) ORDER BY (((- (v0.c0)))>=(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((v0.c0) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((v0.c0) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((v0.c0) NOTNULL)) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE ((((LIKELY(DISTINCT v0.c0)))<=((((v0.c0)<<(vt0.c0)))))) ORDER BY ((v0.c0)IS NOT(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((LIKELY(DISTINCT v0.c0)))<=((((v0.c0)<<(vt0.c0)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY ((v0.c0)IS NOT(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE ((((LIKELY(DISTINCT v0.c0)))<=((((v0.c0)<<(vt0.c0)))))) ORDER BY ((v0.c0)IS NOT(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((LIKELY(DISTINCT v0.c0)))<=((((v0.c0)<<(vt0.c0)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY ((v0.c0)IS NOT(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE ((((LIKELY(DISTINCT v0.c0)))<=((((v0.c0)<<(vt0.c0)))))) ORDER BY ((v0.c0)IS NOT(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT * FROM vt0, v0 WHERE (vt0.c0) ORDER BY (((NULL)) NOT BETWEEN (((~ (v0.c0)))) AND ((LIKELY(DISTINCT vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY (((NULL)) NOT BETWEEN (((~ (v0.c0)))) AND ((LIKELY(DISTINCT vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (vt0.c0) ORDER BY (((NULL)) NOT BETWEEN (((~ (v0.c0)))) AND ((LIKELY(DISTINCT vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY (((NULL)) NOT BETWEEN (((~ (v0.c0)))) AND ((LIKELY(DISTINCT vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (vt0.c0) ORDER BY (((NULL)) NOT BETWEEN (((~ (v0.c0)))) AND ((LIKELY(DISTINCT vt0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0)IS NOT(v0.c0)))<(((((v0.c0)OR(v0.c0)))OR(x''))))) ORDER BY (((- (vt0.c0))) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (ABS(vt0.c0))) ASC  NULLS LAST, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(v0.c0)))<(((((v0.c0)OR(v0.c0)))OR(x''))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((- (vt0.c0))) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (ABS(vt0.c0))) ASC  NULLS LAST, vt0.c0);
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0)IS NOT(v0.c0)))<(((((v0.c0)OR(v0.c0)))OR(x''))))) ORDER BY (((- (vt0.c0))) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (ABS(vt0.c0))) ASC  NULLS LAST, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(v0.c0)))<(((((v0.c0)OR(v0.c0)))OR(x''))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((- (vt0.c0))) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (ABS(vt0.c0))) ASC  NULLS LAST, vt0.c0);
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0)IS NOT(v0.c0)))<(((((v0.c0)OR(v0.c0)))OR(x''))))) ORDER BY (((- (vt0.c0))) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (ABS(vt0.c0))) ASC  NULLS LAST, vt0.c0;
SELECT * FROM vt0, v0 WHERE (((((((v0.c0)==(vt0.c0)))OR(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((~ (v0.c0))))) ORDER BY CAST(LIKELY(v0.c0) AS TEXT), ((json_array(v0.c0, vt0.c0, v0.c0, NULL))IS(v0.c0 COLLATE NOCASE)) ASC, v0.c0;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)==(vt0.c0)))OR(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((~ (v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(LIKELY(v0.c0) AS TEXT), ((json_array(v0.c0, vt0.c0, v0.c0, NULL))IS(v0.c0 COLLATE NOCASE)) ASC, v0.c0);
SELECT * FROM vt0, v0 WHERE (((((((v0.c0)==(vt0.c0)))OR(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((~ (v0.c0))))) ORDER BY CAST(LIKELY(v0.c0) AS TEXT), ((json_array(v0.c0, vt0.c0, v0.c0, NULL))IS(v0.c0 COLLATE NOCASE)) ASC, v0.c0;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)==(vt0.c0)))OR(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((~ (v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(LIKELY(v0.c0) AS TEXT), ((json_array(v0.c0, vt0.c0, v0.c0, NULL))IS(v0.c0 COLLATE NOCASE)) ASC, v0.c0);
SELECT * FROM vt0, v0 WHERE (((((((v0.c0)==(vt0.c0)))OR(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((~ (v0.c0))))) ORDER BY CAST(LIKELY(v0.c0) AS TEXT), ((json_array(v0.c0, vt0.c0, v0.c0, NULL))IS(v0.c0 COLLATE NOCASE)) ASC, v0.c0;
SELECT COUNT(*) FROM v0 WHERE (TRIM(DISTINCT MIN(v0.c0, v0.c0)));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT MIN(v0.c0, v0.c0))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (TRIM(DISTINCT MIN(v0.c0, v0.c0)));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT MIN(v0.c0, v0.c0))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (TRIM(DISTINCT MIN(v0.c0, v0.c0)));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (STRFTIME(((vt0.c0)IS(vt0.c0)), 0.9912887550928788, CAST(v0.c0 AS TEXT), CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) NOT NULL), ((vt0.c0)IS NOT(vt0.c0)), v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(((vt0.c0)IS(vt0.c0)), 0.9912887550928788, CAST(v0.c0 AS TEXT), CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) NOT NULL), ((vt0.c0)IS NOT(vt0.c0)), v0.c0 COLLATE BINARY)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (STRFTIME(((vt0.c0)IS(vt0.c0)), 0.9912887550928788, CAST(v0.c0 AS TEXT), CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) NOT NULL), ((vt0.c0)IS NOT(vt0.c0)), v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(((vt0.c0)IS(vt0.c0)), 0.9912887550928788, CAST(v0.c0 AS TEXT), CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) NOT NULL), ((vt0.c0)IS NOT(vt0.c0)), v0.c0 COLLATE BINARY)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (STRFTIME(((vt0.c0)IS(vt0.c0)), 0.9912887550928788, CAST(v0.c0 AS TEXT), CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) NOT NULL), ((vt0.c0)IS NOT(vt0.c0)), v0.c0 COLLATE BINARY));
SELECT ALL * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS BLOB)) ORDER BY ((((x'')%(vt0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((x'')%(vt0.c0))) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS BLOB)) ORDER BY ((((x'')%(vt0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((x'')%(vt0.c0))) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS BLOB)) ORDER BY ((((x'')%(vt0.c0))) NOT NULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)%(vt0.c0)) AS NUMERIC)) ORDER BY (((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(x'')))OR(vt0.c0)))) AND ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)%(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(x'')))OR(vt0.c0)))) AND ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)%(vt0.c0)) AS NUMERIC)) ORDER BY (((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(x'')))OR(vt0.c0)))) AND ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)%(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(x'')))OR(vt0.c0)))) AND ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)%(vt0.c0)) AS NUMERIC)) ORDER BY (((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(x'')))OR(vt0.c0)))) AND ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) ORDER BY ((vt0.c0) IS FALSE) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c0) IS FALSE) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) ORDER BY ((vt0.c0) IS FALSE) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c0) IS FALSE) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) ORDER BY ((vt0.c0) IS FALSE) COLLATE BINARY;
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON ((((((vt0.c0)AND(0.7217889879863909)))AND(vt0.c0)))==((v0.c0 IN ()))) WHERE (((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END) IS FALSE)) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((((((vt0.c0)AND(0.7217889879863909)))AND(vt0.c0)))=((v0.c0 IN ()))) ORDER BY v0.c0  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON ((((((vt0.c0)AND(0.7217889879863909)))AND(vt0.c0)))==((v0.c0 IN ()))) WHERE (((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END) IS FALSE)) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((((((vt0.c0)AND(0.7217889879863909)))AND(vt0.c0)))=((v0.c0 IN ()))) ORDER BY v0.c0  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON ((((((vt0.c0)AND(0.7217889879863909)))AND(vt0.c0)))==((v0.c0 IN ()))) WHERE (((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END) IS FALSE)) ORDER BY v0.c0  NULLS FIRST;
SELECT ALL * FROM v0, vt0 WHERE (((((((((((((((((((v0.c0)/(NULL)))AND(v0.c0)))OR(0.4196645619961564)))OR(vt0.c0 COLLATE NOCASE)))AND(v0.c0)))OR(((vt0.c0)>=(vt0.c0)))))AND(((vt0.c0)!=(x'')))))AND(((vt0.c0) NOTNULL))))AND(((v0.c0)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((v0.c0)/(NULL)))AND(v0.c0)))OR(0.4196645619961564)))OR(vt0.c0 COLLATE NOCASE)))AND(v0.c0)))OR(((vt0.c0)>=(vt0.c0)))))AND(((vt0.c0)!=(x'')))))AND(((vt0.c0) NOTNULL))))AND(((v0.c0)<(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((((((((((((((((v0.c0)/(NULL)))AND(v0.c0)))OR(0.4196645619961564)))OR(vt0.c0 COLLATE NOCASE)))AND(v0.c0)))OR(((vt0.c0)>=(vt0.c0)))))AND(((vt0.c0)!=(x'')))))AND(((vt0.c0) NOTNULL))))AND(((v0.c0)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((v0.c0)/(NULL)))AND(v0.c0)))OR(0.4196645619961564)))OR(vt0.c0 COLLATE NOCASE)))AND(v0.c0)))OR(((vt0.c0)>=(vt0.c0)))))AND(((vt0.c0)!=(x'')))))AND(((vt0.c0) NOTNULL))))AND(((v0.c0)<(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((((((((((((((((v0.c0)/(NULL)))AND(v0.c0)))OR(0.4196645619961564)))OR(vt0.c0 COLLATE NOCASE)))AND(v0.c0)))OR(((vt0.c0)>=(vt0.c0)))))AND(((vt0.c0)!=(x'')))))AND(((vt0.c0) NOTNULL))))AND(((v0.c0)<(vt0.c0)))));
SELECT * FROM vt0 WHERE ((((vt0.c0)LIKE(vt0.c0)) IN ())) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)LIKE(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0)LIKE(vt0.c0)) IN ())) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)LIKE(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0)LIKE(vt0.c0)) IN ())) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((('7o') NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0)))) AND (((vt0.c0)|(vt0.c0))))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((('7o') NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0)))) AND (((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((('7o') NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0)))) AND (((vt0.c0)|(vt0.c0))))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((('7o') NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0)))) AND (((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((('7o') NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0)))) AND (((vt0.c0)|(vt0.c0))))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ());
SELECT * FROM vt0 WHERE ((vt0.c0 IN (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 IN (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 IN (CAST(vt0.c0 AS TEXT))));
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)OR(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) ELSE vt0.c0 END) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL)  NULLS FIRST, '-1238361248';
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)OR(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL)  NULLS FIRST, '-1238361248');
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)OR(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) ELSE vt0.c0 END) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL)  NULLS FIRST, '-1238361248';
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)OR(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL)  NULLS FIRST, '-1238361248');
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)OR(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) ELSE vt0.c0 END) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL)  NULLS FIRST, '-1238361248';
SELECT * FROM v0, vt0 WHERE (HEX(DISTINCT NULL)) ORDER BY v0.c0 COLLATE NOCASE, ((304601144) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT NULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0 COLLATE NOCASE, ((304601144) IS TRUE) DESC);
SELECT * FROM v0, vt0 WHERE (HEX(DISTINCT NULL)) ORDER BY v0.c0 COLLATE NOCASE, ((304601144) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT NULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0 COLLATE NOCASE, ((304601144) IS TRUE) DESC);
SELECT * FROM v0, vt0 WHERE (HEX(DISTINCT NULL)) ORDER BY v0.c0 COLLATE NOCASE, ((304601144) IS TRUE) DESC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))AND(NULL)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))AND(NULL)) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))AND(NULL)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))AND(NULL)) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))AND(NULL)) AS BLOB)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS BLOB)) ORDER BY ((x'8cf9') NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((x'8cf9') NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS BLOB)) ORDER BY ((x'8cf9') NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((x'8cf9') NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS BLOB)) ORDER BY ((x'8cf9') NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE ((+ (ABS(DISTINCT v0.c0)))) ORDER BY ((CAST(v0.c0 AS TEXT)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT (((+ (ABS(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS TEXT)) IS TRUE) ASC);
SELECT COUNT(*) FROM v0 WHERE ((+ (ABS(DISTINCT v0.c0)))) ORDER BY ((CAST(v0.c0 AS TEXT)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT (((+ (ABS(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS TEXT)) IS TRUE) ASC);
SELECT COUNT(*) FROM v0 WHERE ((+ (ABS(DISTINCT v0.c0)))) ORDER BY ((CAST(v0.c0 AS TEXT)) IS TRUE) ASC;
SELECT COUNT(*) FROM vt0 WHERE (json_array((vt0.c0 IN ()), ((vt0.c0)*(vt0.c0)), (('yh[x')GLOB(vt0.c0)), 0.8983646924350226)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) IS TRUE) DESC  NULLS FIRST, (((NOT (vt0.c0)))<<((vt0.c0 IN ()))) ASC, (x'' IN (((vt0.c0)-(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((json_array((vt0.c0 IN ()), ((vt0.c0)*(vt0.c0)), (('yh[x')GLOB(vt0.c0)), 0.8983646924350226)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) IS TRUE) DESC  NULLS FIRST, (((NOT (vt0.c0)))<<((vt0.c0 IN ()))) ASC, (x'' IN (((vt0.c0)-(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (json_array((vt0.c0 IN ()), ((vt0.c0)*(vt0.c0)), (('yh[x')GLOB(vt0.c0)), 0.8983646924350226)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) IS TRUE) DESC  NULLS FIRST, (((NOT (vt0.c0)))<<((vt0.c0 IN ()))) ASC, (x'' IN (((vt0.c0)-(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((json_array((vt0.c0 IN ()), ((vt0.c0)*(vt0.c0)), (('yh[x')GLOB(vt0.c0)), 0.8983646924350226)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) IS TRUE) DESC  NULLS FIRST, (((NOT (vt0.c0)))<<((vt0.c0 IN ()))) ASC, (x'' IN (((vt0.c0)-(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (json_array((vt0.c0 IN ()), ((vt0.c0)*(vt0.c0)), (('yh[x')GLOB(vt0.c0)), 0.8983646924350226)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) IS TRUE) DESC  NULLS FIRST, (((NOT (vt0.c0)))<<((vt0.c0 IN ()))) ASC, (x'' IN (((vt0.c0)-(vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((x'', vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (json_extract(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND (NULL))) ORDER BY (((~ (vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT (((((((x'', vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (json_extract(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND (NULL))) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((x'', vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (json_extract(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND (NULL))) ORDER BY (((~ (vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT (((((((x'', vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (json_extract(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND (NULL))) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0) ISNULL) THEN (+ (vt0.c0)) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN (- (vt0.c0)) WHEN (('') NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN ((vt0.c0)>>(vt0.c0)) THEN vt0.c0 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (NOT ('931713762')) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY ((IFNULL(vt0.c0, vt0.c0)) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0)IS(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN ((vt0.c0) ISNULL) THEN (+ (vt0.c0)) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN (- (vt0.c0)) WHEN (('') NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN ((vt0.c0)>>(vt0.c0)) THEN vt0.c0 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (NOT ('931713762')) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY ((IFNULL(vt0.c0, vt0.c0)) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0)IS(vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0) ISNULL) THEN (+ (vt0.c0)) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN (- (vt0.c0)) WHEN (('') NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN ((vt0.c0)>>(vt0.c0)) THEN vt0.c0 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (NOT ('931713762')) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY ((IFNULL(vt0.c0, vt0.c0)) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0)IS(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN ((vt0.c0) ISNULL) THEN (+ (vt0.c0)) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN (- (vt0.c0)) WHEN (('') NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN ((vt0.c0)>>(vt0.c0)) THEN vt0.c0 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (NOT ('931713762')) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY ((IFNULL(vt0.c0, vt0.c0)) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0)IS(vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0) ISNULL) THEN (+ (vt0.c0)) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN (- (vt0.c0)) WHEN (('') NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN ((vt0.c0)>>(vt0.c0)) THEN vt0.c0 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (NOT ('931713762')) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY ((IFNULL(vt0.c0, vt0.c0)) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0)IS(vt0.c0)))) ASC;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((0xffffffff9a1f39d0) NOTNULL)) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((0xffffffff9a1f39d0) NOTNULL)) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((0xffffffff9a1f39d0) NOTNULL)) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((0xffffffff9a1f39d0) NOTNULL)) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((0xffffffff9a1f39d0) NOTNULL)) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c0)>(v0.c0)))/((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>(v0.c0)))/((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c0)>(v0.c0)))/((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>(v0.c0)))/((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c0)>(v0.c0)))/((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0))) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND ((((vt0.c0))<>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND ((((vt0.c0))<>((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0))) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND ((((vt0.c0))<>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND ((((vt0.c0))<>((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0))) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND ((((vt0.c0))<>((vt0.c0))))));
SELECT COUNT(*) FROM v0 WHERE ('-2062513039' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('-2062513039' COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ('-2062513039' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('-2062513039' COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ('-2062513039' COLLATE BINARY);
SELECT * FROM vt0 INNER JOIN v0 ON (CAST(v0.c0 AS BLOB) IN ()) WHERE (((vt0.c0 COLLATE RTRIM)>=(((v0.c0)>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)>=(((v0.c0)>(v0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (CAST(v0.c0 AS BLOB) IN ()));
SELECT * FROM vt0 INNER JOIN v0 ON (CAST(v0.c0 AS BLOB) IN ()) WHERE (((vt0.c0 COLLATE RTRIM)>=(((v0.c0)>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)>=(((v0.c0)>(v0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (CAST(v0.c0 AS BLOB) IN ()));
SELECT * FROM vt0 INNER JOIN v0 ON (CAST(v0.c0 AS BLOB) IN ()) WHERE (((vt0.c0 COLLATE RTRIM)>=(((v0.c0)>(v0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((v0.c0, vt0.c0, vt0.c0))<((v0.c0, vt0.c0, vt0.c0)))) NOTNULL)) ORDER BY (~ (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END))  NULLS FIRST, ((ABS(v0.c0)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0, vt0.c0, vt0.c0))<((v0.c0, vt0.c0, vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END))  NULLS FIRST, ((ABS(v0.c0)) ISNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((v0.c0, vt0.c0, vt0.c0))<((v0.c0, vt0.c0, vt0.c0)))) NOTNULL)) ORDER BY (~ (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END))  NULLS FIRST, ((ABS(v0.c0)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0, vt0.c0, vt0.c0))<((v0.c0, vt0.c0, vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END))  NULLS FIRST, ((ABS(v0.c0)) ISNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((v0.c0, vt0.c0, vt0.c0))<((v0.c0, vt0.c0, vt0.c0)))) NOTNULL)) ORDER BY (~ (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END))  NULLS FIRST, ((ABS(v0.c0)) ISNULL)  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT)) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT)) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT)) ORDER BY x'' ASC;
SELECT * FROM v0 WHERE ((((v0.c0) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) ISNULL) IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) ISNULL) IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0) ISNULL) IN ()));
SELECT ALL * FROM vt0, v0 WHERE (json_array_length(CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, (((vt0.c0, v0.c0, v0.c0))<>((vt0.c0, v0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT ((json_array_length(CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, (((vt0.c0, v0.c0, v0.c0))!=((vt0.c0, v0.c0, v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (json_array_length(CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, (((vt0.c0, v0.c0, v0.c0))<>((vt0.c0, v0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT ((json_array_length(CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, (((vt0.c0, v0.c0, v0.c0))!=((vt0.c0, v0.c0, v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (json_array_length(CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, (((vt0.c0, v0.c0, v0.c0))<>((vt0.c0, v0.c0, v0.c0)))));
SELECT ALL * FROM v0, vt0 WHERE ((+ (((((((((v0.c0)OR(0.8590704685926076)))AND(vt0.c0)))OR(vt0.c0)))OR(NULL))))) ORDER BY ((vt0.c0 COLLATE NOCASE) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((((((((v0.c0)OR(0.8590704685926076)))AND(vt0.c0)))OR(vt0.c0)))OR(NULL))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) IS FALSE)  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE ((+ (((((((((v0.c0)OR(0.8590704685926076)))AND(vt0.c0)))OR(vt0.c0)))OR(NULL))))) ORDER BY ((vt0.c0 COLLATE NOCASE) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((((((((v0.c0)OR(0.8590704685926076)))AND(vt0.c0)))OR(vt0.c0)))OR(NULL))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) IS FALSE)  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE ((+ (((((((((v0.c0)OR(0.8590704685926076)))AND(vt0.c0)))OR(vt0.c0)))OR(NULL))))) ORDER BY ((vt0.c0 COLLATE NOCASE) IS FALSE)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN NULL THEN NULL END) ORDER BY (((v0.c0 IN ()))<((v0.c0 IN (v0.c0)))) ASC  NULLS LAST, v0.c0, ((x'')LIKE(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN NULL END) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ()))<((v0.c0 IN (v0.c0)))) ASC  NULLS LAST, v0.c0, ((x'')LIKE(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN NULL THEN NULL END) ORDER BY (((v0.c0 IN ()))<((v0.c0 IN (v0.c0)))) ASC  NULLS LAST, v0.c0, ((x'')LIKE(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN NULL END) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ()))<((v0.c0 IN (v0.c0)))) ASC  NULLS LAST, v0.c0, ((x'')LIKE(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN NULL THEN NULL END) ORDER BY (((v0.c0 IN ()))<((v0.c0 IN (v0.c0)))) ASC  NULLS LAST, v0.c0, ((x'')LIKE(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((CAST(v0.c0 AS REAL) IN ())) ORDER BY TIME(CAST(v0.c0 AS BLOB), CASE WHEN v0.c0 THEN v0.c0 END, v0.c0, ((v0.c0)IS(v0.c0)), CAST(v0.c0 AS REAL))  NULLS FIRST, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS REAL) IN ())) IS TRUE)  as count FROM v0 ORDER BY TIME(CAST(v0.c0 AS BLOB), CASE WHEN v0.c0 THEN v0.c0 END, v0.c0, ((v0.c0)IS(v0.c0)), CAST(v0.c0 AS REAL))  NULLS FIRST, v0.c0  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((CAST(v0.c0 AS REAL) IN ())) ORDER BY TIME(CAST(v0.c0 AS BLOB), CASE WHEN v0.c0 THEN v0.c0 END, v0.c0, ((v0.c0)IS(v0.c0)), CAST(v0.c0 AS REAL))  NULLS FIRST, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS REAL) IN ())) IS TRUE)  as count FROM v0 ORDER BY TIME(CAST(v0.c0 AS BLOB), CASE WHEN v0.c0 THEN v0.c0 END, v0.c0, ((v0.c0)IS(v0.c0)), CAST(v0.c0 AS REAL))  NULLS FIRST, v0.c0  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((CAST(v0.c0 AS REAL) IN ())) ORDER BY TIME(CAST(v0.c0 AS BLOB), CASE WHEN v0.c0 THEN v0.c0 END, v0.c0, ((v0.c0)IS(v0.c0)), CAST(v0.c0 AS REAL))  NULLS FIRST, v0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (x'') ORDER BY ((v0.c0) BETWEEN ((+ (v0.c0))) AND (NULL)) ASC  NULLS LAST, CASE ((((v0.c0)AND('Hj5')))OR('1829310923'))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE vt0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END, ((v0.c0)<=(CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY ((v0.c0) BETWEEN ((+ (v0.c0))) AND (NULL)) ASC  NULLS LAST, CASE ((((v0.c0)AND('Hj5')))OR('1829310923'))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE vt0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END, ((v0.c0)<=(CAST(vt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (x'') ORDER BY ((v0.c0) BETWEEN ((+ (v0.c0))) AND (NULL)) ASC  NULLS LAST, CASE ((((v0.c0)AND('Hj5')))OR('1829310923'))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE vt0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END, ((v0.c0)<=(CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY ((v0.c0) BETWEEN ((+ (v0.c0))) AND (NULL)) ASC  NULLS LAST, CASE ((((v0.c0)AND('Hj5')))OR('1829310923'))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE vt0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END, ((v0.c0)<=(CAST(vt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (x'') ORDER BY ((v0.c0) BETWEEN ((+ (v0.c0))) AND (NULL)) ASC  NULLS LAST, CASE ((((v0.c0)AND('Hj5')))OR('1829310923'))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE vt0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END, ((v0.c0)<=(CAST(vt0.c0 AS TEXT)));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON (LIKE(v0.c0, vt0.c0) IN (NULL, highlight(v0.c0, v0.c0, vt0.c0, v0.c0))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (LIKE(v0.c0, vt0.c0) IN (NULL, highlight(v0.c0, v0.c0, vt0.c0, v0.c0))));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON (LIKE(v0.c0, vt0.c0) IN (NULL, highlight(v0.c0, v0.c0, vt0.c0, v0.c0))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (LIKE(v0.c0, vt0.c0) IN (NULL, highlight(v0.c0, v0.c0, vt0.c0, v0.c0))));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON (LIKE(v0.c0, vt0.c0) IN (NULL, highlight(v0.c0, v0.c0, vt0.c0, v0.c0))) WHERE (x'');
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON (((8.55438653E8))>((((v0.c0) IS FALSE)))) WHERE ((((v0.c0) ISNULL) IN (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) ISNULL) IN (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (((8.55438653E8))>((((v0.c0) IS FALSE)))));
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON (((8.55438653E8))>((((v0.c0) IS FALSE)))) WHERE ((((v0.c0) ISNULL) IN (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) ISNULL) IN (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (((8.55438653E8))>((((v0.c0) IS FALSE)))));
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON (((8.55438653E8))>((((v0.c0) IS FALSE)))) WHERE ((((v0.c0) ISNULL) IN (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT NULL)) ORDER BY (((((((('-1928672216')AND(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0)IS NOT(vt0.c0)))))AND(x'')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (((((((('-1928672216')AND(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0)IS NOT(vt0.c0)))))AND(x'')) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT NULL)) ORDER BY (((((((('-1928672216')AND(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0)IS NOT(vt0.c0)))))AND(x'')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (((((((('-1928672216')AND(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0)IS NOT(vt0.c0)))))AND(x'')) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT NULL)) ORDER BY (((((((('-1928672216')AND(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0)IS NOT(vt0.c0)))))AND(x'')) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (x'8ad0') ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)  NULLS LAST, CAST(UPPER(DISTINCT vt0.c0) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'8ad0') IS TRUE)  as count FROM vt0 ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)  NULLS LAST, CAST(UPPER(DISTINCT vt0.c0) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (x'8ad0') ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)  NULLS LAST, CAST(UPPER(DISTINCT vt0.c0) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'8ad0') IS TRUE)  as count FROM vt0 ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)  NULLS LAST, CAST(UPPER(DISTINCT vt0.c0) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (x'8ad0') ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)  NULLS LAST, CAST(UPPER(DISTINCT vt0.c0) AS BLOB)  NULLS FIRST;
SELECT * FROM vt0, v0 WHERE ((v0.c0 COLLATE RTRIM IN (vt0.c0 COLLATE RTRIM))) ORDER BY ((vt0.c0) BETWEEN ((- (vt0.c0))) AND (v0.c0 COLLATE BINARY)) DESC  NULLS FIRST, (~ (((vt0.c0) BETWEEN (vt0.c0) AND (x'')))) ASC, (((v0.c0 IN ())) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE RTRIM IN (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c0) BETWEEN ((- (vt0.c0))) AND (v0.c0 COLLATE BINARY)) DESC  NULLS FIRST, (~ (((vt0.c0) BETWEEN (vt0.c0) AND (x'')))) ASC, (((v0.c0 IN ())) NOT NULL) ASC);
SELECT * FROM vt0, v0 WHERE ((v0.c0 COLLATE RTRIM IN (vt0.c0 COLLATE RTRIM))) ORDER BY ((vt0.c0) BETWEEN ((- (vt0.c0))) AND (v0.c0 COLLATE BINARY)) DESC  NULLS FIRST, (~ (((vt0.c0) BETWEEN (vt0.c0) AND (x'')))) ASC, (((v0.c0 IN ())) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE RTRIM IN (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c0) BETWEEN ((- (vt0.c0))) AND (v0.c0 COLLATE BINARY)) DESC  NULLS FIRST, (~ (((vt0.c0) BETWEEN (vt0.c0) AND (x'')))) ASC, (((v0.c0 IN ())) NOT NULL) ASC);
SELECT * FROM vt0, v0 WHERE ((v0.c0 COLLATE RTRIM IN (vt0.c0 COLLATE RTRIM))) ORDER BY ((vt0.c0) BETWEEN ((- (vt0.c0))) AND (v0.c0 COLLATE BINARY)) DESC  NULLS FIRST, (~ (((vt0.c0) BETWEEN (vt0.c0) AND (x'')))) ASC, (((v0.c0 IN ())) NOT NULL) ASC;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((v0.c0)%(vt0.c0)))OR(CAST(v0.c0 AS REAL))))OR(((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) ORDER BY (((NOT (v0.c0)))+(''));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)%(vt0.c0)))OR(CAST(v0.c0 AS REAL))))OR(((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((NOT (v0.c0)))+('')));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((v0.c0)%(vt0.c0)))OR(CAST(v0.c0 AS REAL))))OR(((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) ORDER BY (((NOT (v0.c0)))+(''));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)%(vt0.c0)))OR(CAST(v0.c0 AS REAL))))OR(((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((NOT (v0.c0)))+('')));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((v0.c0)%(vt0.c0)))OR(CAST(v0.c0 AS REAL))))OR(((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) ORDER BY (((NOT (v0.c0)))+(''));
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) IS FALSE));
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (((((vt0.c0, v0.c0, v0.c0))<((v0.c0, vt0.c0, vt0.c0))))<<(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) WHERE ((- (COALESCE(v0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (COALESCE(v0.c0, vt0.c0)))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((((vt0.c0, v0.c0, v0.c0))<((v0.c0, vt0.c0, vt0.c0))))<<(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (((((vt0.c0, v0.c0, v0.c0))<((v0.c0, vt0.c0, vt0.c0))))<<(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) WHERE ((- (COALESCE(v0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (COALESCE(v0.c0, vt0.c0)))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((((vt0.c0, v0.c0, v0.c0))<((v0.c0, vt0.c0, vt0.c0))))<<(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (((((vt0.c0, v0.c0, v0.c0))<((v0.c0, vt0.c0, vt0.c0))))<<(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) WHERE ((- (COALESCE(v0.c0, vt0.c0))));
SELECT ALL * FROM v0, vt0 WHERE (NULL) ORDER BY ((CAST(v0.c0 AS TEXT))||(CASE WHEN v0.c0 THEN v0.c0 END))  NULLS FIRST, ((((((((0.5890567947614064)AND(((vt0.c0) BETWEEN (x'') AND (vt0.c0)))))AND(CAST(v0.c0 AS TEXT))))OR('466676282')))AND(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END)), SUBSTR(vt0.c0 COLLATE BINARY, CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CAST(v0.c0 AS TEXT))||(CASE WHEN v0.c0 THEN v0.c0 END))  NULLS FIRST, ((((((((0.5890567947614064)AND(((vt0.c0) BETWEEN (x'') AND (vt0.c0)))))AND(CAST(v0.c0 AS TEXT))))OR('466676282')))AND(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END)), SUBSTR(vt0.c0 COLLATE BINARY, CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END));
SELECT ALL * FROM v0, vt0 WHERE (NULL) ORDER BY ((CAST(v0.c0 AS TEXT))||(CASE WHEN v0.c0 THEN v0.c0 END))  NULLS FIRST, ((((((((0.5890567947614064)AND(((vt0.c0) BETWEEN (x'') AND (vt0.c0)))))AND(CAST(v0.c0 AS TEXT))))OR('466676282')))AND(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END)), SUBSTR(vt0.c0 COLLATE BINARY, CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CAST(v0.c0 AS TEXT))||(CASE WHEN v0.c0 THEN v0.c0 END))  NULLS FIRST, ((((((((0.5890567947614064)AND(((vt0.c0) BETWEEN (x'') AND (vt0.c0)))))AND(CAST(v0.c0 AS TEXT))))OR('466676282')))AND(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END)), SUBSTR(vt0.c0 COLLATE BINARY, CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END));
SELECT ALL * FROM v0, vt0 WHERE (NULL) ORDER BY ((CAST(v0.c0 AS TEXT))||(CASE WHEN v0.c0 THEN v0.c0 END))  NULLS FIRST, ((((((((0.5890567947614064)AND(((vt0.c0) BETWEEN (x'') AND (vt0.c0)))))AND(CAST(v0.c0 AS TEXT))))OR('466676282')))AND(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END)), SUBSTR(vt0.c0 COLLATE BINARY, CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (load_extension('~'));
SELECT SUM(count) FROM (SELECT ((load_extension('~')) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (load_extension('~'));
SELECT SUM(count) FROM (SELECT ((load_extension('~')) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((LIKELIHOOD(v0.c0, 0.8826754175671057) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((LIKELIHOOD(v0.c0, 0.8826754175671057) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((LIKELIHOOD(v0.c0, 0.8826754175671057) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((LIKELIHOOD(v0.c0, 0.8826754175671057) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((LIKELIHOOD(v0.c0, 0.8826754175671057) IN ()));
SELECT COUNT(*) FROM v0, vt0 WHERE (((IFNULL(v0.c0, v0.c0))+(((0.8967398194793775) NOT BETWEEN (v0.c0) AND (vt0.c0))))) ORDER BY ',y' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(v0.c0, v0.c0))+(((0.8967398194793775) NOT BETWEEN (v0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ',y' DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (((IFNULL(v0.c0, v0.c0))+(((0.8967398194793775) NOT BETWEEN (v0.c0) AND (vt0.c0))))) ORDER BY ',y' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(v0.c0, v0.c0))+(((0.8967398194793775) NOT BETWEEN (v0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ',y' DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (((IFNULL(v0.c0, v0.c0))+(((0.8967398194793775) NOT BETWEEN (v0.c0) AND (vt0.c0))))) ORDER BY ',y' DESC;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((x'ea7c')OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((x'ea7c')OR(vt0.c0))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((x'ea7c')OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((x'ea7c')OR(vt0.c0))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((x'ea7c')OR(vt0.c0)));
SELECT ALL * FROM v0 WHERE (((NULL) IS TRUE)) ORDER BY 0.8197916882004592 DESC, (NOT ((v0.c0 IN ()))), ((((((((((x'')AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND('#d44Adv'))) BETWEEN (((((v0.c0)OR(v0.c0)))AND(v0.c0))) AND ('FoL' COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY 0.8197916882004592 DESC, (NOT ((v0.c0 IN ()))), ((((((((((x'')AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND('#d44Adv'))) BETWEEN (((((v0.c0)OR(v0.c0)))AND(v0.c0))) AND ('FoL' COLLATE NOCASE)) DESC);
SELECT ALL * FROM v0 WHERE (((NULL) IS TRUE)) ORDER BY 0.8197916882004592 DESC, (NOT ((v0.c0 IN ()))), ((((((((((x'')AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND('#d44Adv'))) BETWEEN (((((v0.c0)OR(v0.c0)))AND(v0.c0))) AND ('FoL' COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY 0.8197916882004592 DESC, (NOT ((v0.c0 IN ()))), ((((((((((x'')AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND('#d44Adv'))) BETWEEN (((((v0.c0)OR(v0.c0)))AND(v0.c0))) AND ('FoL' COLLATE NOCASE)) DESC);
SELECT ALL * FROM v0 WHERE (((NULL) IS TRUE)) ORDER BY 0.8197916882004592 DESC, (NOT ((v0.c0 IN ()))), ((((((((((x'')AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND('#d44Adv'))) BETWEEN (((((v0.c0)OR(v0.c0)))AND(v0.c0))) AND ('FoL' COLLATE NOCASE)) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ('H4') ORDER BY (NOT (vt0.c0));
SELECT SUM(count) FROM (SELECT ALL (('H4') IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE ('H4') ORDER BY (NOT (vt0.c0));
SELECT SUM(count) FROM (SELECT ALL (('H4') IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE ('H4') ORDER BY (NOT (vt0.c0));
SELECT ALL * FROM vt0, v0 WHERE (CAST(TRIM(DISTINCT v0.c0, v0.c0) AS BLOB)) ORDER BY CAST(((0.8529586361425935) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC), (((((vt0.c0)/(vt0.c0))))<((vt0.c0 COLLATE BINARY)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(DISTINCT v0.c0, v0.c0) AS BLOB)) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(((0.8529586361425935) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC), (((((vt0.c0)/(vt0.c0))))<((vt0.c0 COLLATE BINARY)))  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (CAST(TRIM(DISTINCT v0.c0, v0.c0) AS BLOB)) ORDER BY CAST(((0.8529586361425935) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC), (((((vt0.c0)/(vt0.c0))))<((vt0.c0 COLLATE BINARY)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(DISTINCT v0.c0, v0.c0) AS BLOB)) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(((0.8529586361425935) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC), (((((vt0.c0)/(vt0.c0))))<((vt0.c0 COLLATE BINARY)))  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (CAST(TRIM(DISTINCT v0.c0, v0.c0) AS BLOB)) ORDER BY CAST(((0.8529586361425935) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC), (((((vt0.c0)/(vt0.c0))))<((vt0.c0 COLLATE BINARY)))  NULLS FIRST;
SELECT * FROM vt0, v0 WHERE ((((v0.c0 IN (vt0.c0, vt0.c0)))%(((vt0.c0)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (vt0.c0, vt0.c0)))%(((vt0.c0)*(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((v0.c0 IN (vt0.c0, vt0.c0)))%(((vt0.c0)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (vt0.c0, vt0.c0)))%(((vt0.c0)*(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((v0.c0 IN (vt0.c0, vt0.c0)))%(((vt0.c0)*(v0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)LIKE(((vt0.c0)GLOB(vt0.c0))))) ORDER BY TRIM(vt0.c0, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)LIKE(((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(vt0.c0, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)LIKE(((vt0.c0)GLOB(vt0.c0))))) ORDER BY TRIM(vt0.c0, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)LIKE(((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(vt0.c0, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)LIKE(((vt0.c0)GLOB(vt0.c0))))) ORDER BY TRIM(vt0.c0, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)));
SELECT ALL * FROM v0, vt0 WHERE (((v0.c0 COLLATE RTRIM) NOT NULL)) ORDER BY CAST(CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END AS TEXT), ABS(vt0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END AS TEXT), ABS(vt0.c0 COLLATE BINARY));
SELECT ALL * FROM v0, vt0 WHERE (((v0.c0 COLLATE RTRIM) NOT NULL)) ORDER BY CAST(CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END AS TEXT), ABS(vt0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END AS TEXT), ABS(vt0.c0 COLLATE BINARY));
SELECT ALL * FROM v0, vt0 WHERE (((v0.c0 COLLATE RTRIM) NOT NULL)) ORDER BY CAST(CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END AS TEXT), ABS(vt0.c0 COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((vt0.c0)OR(x'')))AND('786803141'))) IS TRUE)) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(x'')))AND('786803141'))) IS TRUE)) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((vt0.c0)OR(x'')))AND('786803141'))) IS TRUE)) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(x'')))AND('786803141'))) IS TRUE)) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((vt0.c0)OR(x'')))AND('786803141'))) IS TRUE)) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC);
SELECT ALL * FROM vt0, v0 WHERE ((vt0.c0 COLLATE NOCASE IN ())) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE ((vt0.c0 COLLATE NOCASE IN ())) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE ((vt0.c0 COLLATE NOCASE IN ())) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE ((((NOT (v0.c0))) IS TRUE)) ORDER BY ((CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END) ISNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((NOT (v0.c0))) IS TRUE)) ORDER BY ((CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END) ISNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((NOT (v0.c0))) IS TRUE)) ORDER BY ((CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END) ISNULL) DESC  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE (((CAST(x'5a0c' AS TEXT))-(UNLIKELY(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'5a0c' AS TEXT))-(UNLIKELY(vt0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((CAST(x'5a0c' AS TEXT))-(UNLIKELY(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'5a0c' AS TEXT))-(UNLIKELY(vt0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((CAST(x'5a0c' AS TEXT))-(UNLIKELY(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY CAST(vt0.c0 AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS NUMERIC));
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY CAST(vt0.c0 AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS NUMERIC));
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY CAST(vt0.c0 AS NUMERIC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE RTRIM) ORDER BY ((HEX(vt0.c0)) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (TRIM(DISTINCT vt0.c0)));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((HEX(vt0.c0)) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (TRIM(DISTINCT vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE RTRIM) ORDER BY ((HEX(vt0.c0)) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (TRIM(DISTINCT vt0.c0)));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((HEX(vt0.c0)) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (TRIM(DISTINCT vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE RTRIM) ORDER BY ((HEX(vt0.c0)) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (TRIM(DISTINCT vt0.c0)));
SELECT ALL COUNT(*) FROM v0 WHERE (((x'') BETWEEN (((NULL)<<(v0.c0))) AND (CAST(v0.c0 AS REAL)))) ORDER BY (((v0.c0 COLLATE NOCASE, (('')&(v0.c0)), ((v0.c0)IS NOT(-2.137012134E9)), ((v0.c0)/(v0.c0)), ((v0.c0) NOTNULL)))>((v0.c0, ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((-2.062513039E9)>>(v0.c0)), ((v0.c0)&(v0.c0)), ((v0.c0) ISNULL))))  NULLS LAST, NULLIF((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), CASE WHEN v0.c0 THEN 'ufPP[1秳]I嘋' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (((NULL)<<(v0.c0))) AND (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 COLLATE NOCASE, (('')&(v0.c0)), ((v0.c0)IS NOT(-2.137012134E9)), ((v0.c0)/(v0.c0)), ((v0.c0) NOTNULL)))>((v0.c0, ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((-2.062513039E9)>>(v0.c0)), ((v0.c0)&(v0.c0)), ((v0.c0) ISNULL))))  NULLS LAST, NULLIF((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), CASE WHEN v0.c0 THEN 'ufPP[1秳]I嘋' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((x'') BETWEEN (((NULL)<<(v0.c0))) AND (CAST(v0.c0 AS REAL)))) ORDER BY (((v0.c0 COLLATE NOCASE, (('')&(v0.c0)), ((v0.c0)IS NOT(-2.137012134E9)), ((v0.c0)/(v0.c0)), ((v0.c0) NOTNULL)))>((v0.c0, ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((-2.062513039E9)>>(v0.c0)), ((v0.c0)&(v0.c0)), ((v0.c0) ISNULL))))  NULLS LAST, NULLIF((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), CASE WHEN v0.c0 THEN 'ufPP[1秳]I嘋' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (((NULL)<<(v0.c0))) AND (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 COLLATE NOCASE, (('')&(v0.c0)), ((v0.c0)IS NOT(-2.137012134E9)), ((v0.c0)/(v0.c0)), ((v0.c0) NOTNULL)))>((v0.c0, ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((-2.062513039E9)>>(v0.c0)), ((v0.c0)&(v0.c0)), ((v0.c0) ISNULL))))  NULLS LAST, NULLIF((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), CASE WHEN v0.c0 THEN 'ufPP[1秳]I嘋' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((x'') BETWEEN (((NULL)<<(v0.c0))) AND (CAST(v0.c0 AS REAL)))) ORDER BY (((v0.c0 COLLATE NOCASE, (('')&(v0.c0)), ((v0.c0)IS NOT(-2.137012134E9)), ((v0.c0)/(v0.c0)), ((v0.c0) NOTNULL)))>((v0.c0, ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((-2.062513039E9)>>(v0.c0)), ((v0.c0)&(v0.c0)), ((v0.c0) ISNULL))))  NULLS LAST, NULLIF((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), CASE WHEN v0.c0 THEN 'ufPP[1秳]I嘋' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (']k');
SELECT SUM(count) FROM (SELECT ALL ((']k') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (']k');
SELECT SUM(count) FROM (SELECT ALL ((']k') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (']k');
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c0)<=((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<=((vt0.c0 IN ())))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c0)<=((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<=((vt0.c0 IN ())))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c0)<=((vt0.c0 IN ()))));
SELECT * FROM v0 WHERE ((((((v0.c0) NOT NULL), UNLIKELY(v0.c0), v0.c0))<((v0.c0, ((v0.c0)GLOB(v0.c0)), (NOT (v0.c0)))))) ORDER BY (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN (((((v0.c0)OR(v0.c0)))AND(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) NOT NULL), UNLIKELY(v0.c0), v0.c0))<((v0.c0, ((v0.c0)GLOB(v0.c0)), (NOT (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN (((((v0.c0)OR(v0.c0)))AND(v0.c0)))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE ((((((v0.c0) NOT NULL), UNLIKELY(v0.c0), v0.c0))<((v0.c0, ((v0.c0)GLOB(v0.c0)), (NOT (v0.c0)))))) ORDER BY (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN (((((v0.c0)OR(v0.c0)))AND(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) NOT NULL), UNLIKELY(v0.c0), v0.c0))<((v0.c0, ((v0.c0)GLOB(v0.c0)), (NOT (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN (((((v0.c0)OR(v0.c0)))AND(v0.c0)))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE ((((((v0.c0) NOT NULL), UNLIKELY(v0.c0), v0.c0))<((v0.c0, ((v0.c0)GLOB(v0.c0)), (NOT (v0.c0)))))) ORDER BY (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN (((((v0.c0)OR(v0.c0)))AND(v0.c0)))) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0 COLLATE BINARY) IS FALSE);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY) IS FALSE));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0 COLLATE BINARY) IS FALSE);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY) IS FALSE));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0 COLLATE BINARY) IS FALSE);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((v0.c0) NOT NULL)))=(((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) NOT NULL)))=(((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((v0.c0) NOT NULL)))=(((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) NOT NULL)))=(((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((v0.c0) NOT NULL)))=(((vt0.c0 IN ())))));
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (((((v0.c0)+(v0.c0))) BETWEEN (((((vt0.c0)AND(v0.c0)))AND(v0.c0))) AND ((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)+(v0.c0))) BETWEEN (((((vt0.c0)AND(v0.c0)))AND(v0.c0))) AND ((NOT (v0.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (((((v0.c0)+(v0.c0))) BETWEEN (((((vt0.c0)AND(v0.c0)))AND(v0.c0))) AND ((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)+(v0.c0))) BETWEEN (((((vt0.c0)AND(v0.c0)))AND(v0.c0))) AND ((NOT (v0.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (((((v0.c0)+(v0.c0))) BETWEEN (((((vt0.c0)AND(v0.c0)))AND(v0.c0))) AND ((NOT (v0.c0)))));
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST((+ (v0.c0)) AS NUMERIC)) ORDER BY (((+ (vt0.c0)))+(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((+ (vt0.c0)))+(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST((+ (v0.c0)) AS NUMERIC)) ORDER BY (((+ (vt0.c0)))+(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((+ (vt0.c0)))+(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST((+ (v0.c0)) AS NUMERIC)) ORDER BY (((+ (vt0.c0)))+(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST;
SELECT * FROM v0 WHERE (CAST(v0.c0 AS BLOB) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS BLOB) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(v0.c0 AS BLOB) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS BLOB) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(v0.c0 AS BLOB) COLLATE NOCASE COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (TRIM(DISTINCT (v0.c0 IN (v0.c0)), 'b\n'));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (v0.c0 IN (v0.c0)), 'b\n')) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (TRIM(DISTINCT (v0.c0 IN (v0.c0)), 'b\n'));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (v0.c0 IN (v0.c0)), 'b\n')) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (TRIM(DISTINCT (v0.c0 IN (v0.c0)), 'b\n'));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0)||(CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)||(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0)||(CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)||(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0)||(CAST(v0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((v0.c0 IN (v0.c0)) IN (json_object(v0.c0, v0.c0, vt0.c0, v0.c0)))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN (v0.c0)) IN (json_object(v0.c0, v0.c0, vt0.c0, v0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY NULL ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE (((v0.c0 IN (v0.c0)) IN (json_object(v0.c0, v0.c0, vt0.c0, v0.c0)))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN (v0.c0)) IN (json_object(v0.c0, v0.c0, vt0.c0, v0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY NULL ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE (((v0.c0 IN (v0.c0)) IN (json_object(v0.c0, v0.c0, vt0.c0, v0.c0)))) ORDER BY NULL ASC;
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((v0.c0) BETWEEN (v0.c0 COLLATE NOCASE) AND (((vt0.c0) NOTNULL))) WHERE (CAST(v0.c0 COLLATE NOCASE AS INTEGER)) ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY, ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)), CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((v0.c0) BETWEEN (v0.c0 COLLATE NOCASE) AND (((vt0.c0) NOTNULL))) ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY, ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)), CAST(vt0.c0 AS BLOB)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((v0.c0) BETWEEN (v0.c0 COLLATE NOCASE) AND (((vt0.c0) NOTNULL))) WHERE (CAST(v0.c0 COLLATE NOCASE AS INTEGER)) ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY, ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)), CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((v0.c0) BETWEEN (v0.c0 COLLATE NOCASE) AND (((vt0.c0) NOTNULL))) ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY, ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)), CAST(vt0.c0 AS BLOB)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((v0.c0) BETWEEN (v0.c0 COLLATE NOCASE) AND (((vt0.c0) NOTNULL))) WHERE (CAST(v0.c0 COLLATE NOCASE AS INTEGER)) ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY, ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)), CAST(vt0.c0 AS BLOB))));
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)%(vt0.c0)) COLLATE RTRIM) ORDER BY (NOT (CAST(vt0.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)%(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (NOT (CAST(vt0.c0 AS INTEGER))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)%(vt0.c0)) COLLATE RTRIM) ORDER BY (NOT (CAST(vt0.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)%(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (NOT (CAST(vt0.c0 AS INTEGER))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)%(vt0.c0)) COLLATE RTRIM) ORDER BY (NOT (CAST(vt0.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (LIKELY(((v0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((LIKELY(((v0.c0) ISNULL))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (LIKELY(((v0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((LIKELY(((v0.c0) ISNULL))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (LIKELY(((v0.c0) ISNULL)));
SELECT ALL * FROM vt0, v0 WHERE ((((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(((v0.c0)<(vt0.c0)))))OR(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(((v0.c0)<(vt0.c0)))))OR(v0.c0))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(((v0.c0)<(vt0.c0)))))OR(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(((v0.c0)<(vt0.c0)))))OR(v0.c0))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(((v0.c0)<(vt0.c0)))))OR(v0.c0)));
SELECT ALL * FROM v0 WHERE (RTRIM(((((0.04375908598874889)OR(v0.c0)))OR(v0.c0)))) ORDER BY (((CASE WHEN v0.c0 THEN v0.c0 END, (v0.c0 IN (v0.c0, v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (0.03289984397671741))))>((CASE 0.9634752173696709  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, 1.994645103E9, v0.c0 COLLATE BINARY))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((RTRIM(((((0.04375908598874889)OR(v0.c0)))OR(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (((CASE WHEN v0.c0 THEN v0.c0 END, (v0.c0 IN (v0.c0, v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (0.03289984397671741))))>((CASE 0.9634752173696709  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, 1.994645103E9, v0.c0 COLLATE BINARY))) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (RTRIM(((((0.04375908598874889)OR(v0.c0)))OR(v0.c0)))) ORDER BY (((CASE WHEN v0.c0 THEN v0.c0 END, (v0.c0 IN (v0.c0, v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (0.03289984397671741))))>((CASE 0.9634752173696709  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, 1.994645103E9, v0.c0 COLLATE BINARY))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((RTRIM(((((0.04375908598874889)OR(v0.c0)))OR(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (((CASE WHEN v0.c0 THEN v0.c0 END, (v0.c0 IN (v0.c0, v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (0.03289984397671741))))>((CASE 0.9634752173696709  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, 1.994645103E9, v0.c0 COLLATE BINARY))) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (RTRIM(((((0.04375908598874889)OR(v0.c0)))OR(v0.c0)))) ORDER BY (((CASE WHEN v0.c0 THEN v0.c0 END, (v0.c0 IN (v0.c0, v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (0.03289984397671741))))>((CASE 0.9634752173696709  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, 1.994645103E9, v0.c0 COLLATE BINARY))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((((vt0.c0, v0.c0, vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0, '265621319', vt0.c0)))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN NULL THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, v0.c0, vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0, '265621319', vt0.c0)))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN NULL THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((((vt0.c0, v0.c0, vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0, '265621319', vt0.c0)))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN NULL THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, v0.c0, vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0, '265621319', vt0.c0)))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN NULL THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((((vt0.c0, v0.c0, vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0, '265621319', vt0.c0)))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN NULL THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(vt0.c0 COLLATE RTRIM)))AND(CAST(v0.c0 AS REAL)))) ORDER BY (+ (0X73725b9b)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(vt0.c0 COLLATE RTRIM)))AND(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (+ (0X73725b9b)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(vt0.c0 COLLATE RTRIM)))AND(CAST(v0.c0 AS REAL)))) ORDER BY (+ (0X73725b9b)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(vt0.c0 COLLATE RTRIM)))AND(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (+ (0X73725b9b)) DESC  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (((((0x3caabb26)|(vt0.c0))) BETWEEN (v0.c0) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((0X3caabb26)|(vt0.c0))) BETWEEN (v0.c0) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((0x3caabb26)|(vt0.c0))) BETWEEN (v0.c0) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((0X3caabb26)|(vt0.c0))) BETWEEN (v0.c0) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((0x3caabb26)|(vt0.c0))) BETWEEN (v0.c0) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ())) NOT BETWEEN ((~ (v0.c0))) AND (((v0.c0)>(v0.c0)))) WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))AND((v0.c0 IN ())))) ORDER BY (-1.497605668E9 IN ());
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))AND((v0.c0 IN ())))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ())) NOT BETWEEN ((~ (v0.c0))) AND (((v0.c0)>(v0.c0)))) ORDER BY (-1.497605668E9 IN ()));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ())) NOT BETWEEN ((~ (v0.c0))) AND (((v0.c0)>(v0.c0)))) WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))AND((v0.c0 IN ())))) ORDER BY (-1.497605668E9 IN ());
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))AND((v0.c0 IN ())))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ())) NOT BETWEEN ((~ (v0.c0))) AND (((v0.c0)>(v0.c0)))) ORDER BY (-1.497605668E9 IN ()));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ())) NOT BETWEEN ((~ (v0.c0))) AND (((v0.c0)>(v0.c0)))) WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))AND((v0.c0 IN ())))) ORDER BY (-1.497605668E9 IN ());
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (((x'6da1')) NOT BETWEEN ((2027907711)) AND ((vt0.c0))) THEN ((vt0.c0)<>(vt0.c0)) ELSE ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY TYPEOF(((vt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((x'6da1')) NOT BETWEEN ((2027907711)) AND ((vt0.c0))) THEN ((vt0.c0)!=(vt0.c0)) ELSE ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(((vt0.c0) ISNULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (((x'6da1')) NOT BETWEEN ((2027907711)) AND ((vt0.c0))) THEN ((vt0.c0)<>(vt0.c0)) ELSE ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY TYPEOF(((vt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((x'6da1')) NOT BETWEEN ((2027907711)) AND ((vt0.c0))) THEN ((vt0.c0)!=(vt0.c0)) ELSE ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(((vt0.c0) ISNULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (((x'6da1')) NOT BETWEEN ((2027907711)) AND ((vt0.c0))) THEN ((vt0.c0)<>(vt0.c0)) ELSE ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY TYPEOF(((vt0.c0) ISNULL));
SELECT ALL * FROM v0 INNER JOIN vt0 ON CASE (vt0.c0 IN (vt0.c0, vt0.c0))  WHEN ((v0.c0)+(vt0.c0)) THEN (~ (v0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN vt0.c0 COLLATE BINARY WHEN LIKE(vt0.c0, v0.c0, 's') THEN '1A' END WHERE (CASE WHEN ((vt0.c0)OR(v0.c0)) THEN (vt0.c0 IN ()) ELSE ((1706055422)GLOB(vt0.c0)) END) ORDER BY CASE ((vt0.c0) NOTNULL)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END THEN v0.c0 WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(x'')))AND(vt0.c0)) THEN ((((0.35393996106440095)OR(v0.c0)))OR(vt0.c0)) WHEN v0.c0 COLLATE RTRIM THEN (+ (vt0.c0)) END, HEX(CAST(vt0.c0 AS INTEGER)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)OR(v0.c0)) THEN (vt0.c0 IN ()) ELSE ((1706055422)GLOB(vt0.c0)) END) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON CASE (vt0.c0 IN (vt0.c0, vt0.c0))  WHEN ((v0.c0)+(vt0.c0)) THEN (~ (v0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN vt0.c0 COLLATE BINARY WHEN LIKE(vt0.c0, v0.c0, 's') THEN '1A' END ORDER BY CASE ((vt0.c0) NOTNULL)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END THEN v0.c0 WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(x'')))AND(vt0.c0)) THEN ((((0.35393996106440095)OR(v0.c0)))OR(vt0.c0)) WHEN v0.c0 COLLATE RTRIM THEN (+ (vt0.c0)) END, HEX(CAST(vt0.c0 AS INTEGER)) ASC  NULLS FIRST);
SELECT ALL * FROM v0 INNER JOIN vt0 ON CASE (vt0.c0 IN (vt0.c0, vt0.c0))  WHEN ((v0.c0)+(vt0.c0)) THEN (~ (v0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN vt0.c0 COLLATE BINARY WHEN LIKE(vt0.c0, v0.c0, 's') THEN '1A' END WHERE (CASE WHEN ((vt0.c0)OR(v0.c0)) THEN (vt0.c0 IN ()) ELSE ((1706055422)GLOB(vt0.c0)) END) ORDER BY CASE ((vt0.c0) NOTNULL)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END THEN v0.c0 WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(x'')))AND(vt0.c0)) THEN ((((0.35393996106440095)OR(v0.c0)))OR(vt0.c0)) WHEN v0.c0 COLLATE RTRIM THEN (+ (vt0.c0)) END, HEX(CAST(vt0.c0 AS INTEGER)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)OR(v0.c0)) THEN (vt0.c0 IN ()) ELSE ((1706055422)GLOB(vt0.c0)) END) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON CASE (vt0.c0 IN (vt0.c0, vt0.c0))  WHEN ((v0.c0)+(vt0.c0)) THEN (~ (v0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN vt0.c0 COLLATE BINARY WHEN LIKE(vt0.c0, v0.c0, 's') THEN '1A' END ORDER BY CASE ((vt0.c0) NOTNULL)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END THEN v0.c0 WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(x'')))AND(vt0.c0)) THEN ((((0.35393996106440095)OR(v0.c0)))OR(vt0.c0)) WHEN v0.c0 COLLATE RTRIM THEN (+ (vt0.c0)) END, HEX(CAST(vt0.c0 AS INTEGER)) ASC  NULLS FIRST);
SELECT ALL * FROM v0 INNER JOIN vt0 ON CASE (vt0.c0 IN (vt0.c0, vt0.c0))  WHEN ((v0.c0)+(vt0.c0)) THEN (~ (v0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN vt0.c0 COLLATE BINARY WHEN LIKE(vt0.c0, v0.c0, 's') THEN '1A' END WHERE (CASE WHEN ((vt0.c0)OR(v0.c0)) THEN (vt0.c0 IN ()) ELSE ((1706055422)GLOB(vt0.c0)) END) ORDER BY CASE ((vt0.c0) NOTNULL)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END THEN v0.c0 WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(x'')))AND(vt0.c0)) THEN ((((0.35393996106440095)OR(v0.c0)))OR(vt0.c0)) WHEN v0.c0 COLLATE RTRIM THEN (+ (vt0.c0)) END, HEX(CAST(vt0.c0 AS INTEGER)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)OR((NOT (vt0.c0))))) ORDER BY 0xffffffffc9d50633 DESC, (+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))<<(vt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)OR((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY 0xffffffffc9d50633 DESC, (+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))<<(vt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)OR((NOT (vt0.c0))))) ORDER BY 0xffffffffc9d50633 DESC, (+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))<<(vt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)OR((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY 0xffffffffc9d50633 DESC, (+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))<<(vt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)OR((NOT (vt0.c0))))) ORDER BY 0xffffffffc9d50633 DESC, (+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))<<(vt0.c0 COLLATE BINARY));
SELECT ALL * FROM v0 INNER JOIN vt0 ON ((((((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))AND(((vt0.c0) IS TRUE))))AND(((v0.c0)&(v0.c0)))) WHERE (((x'')%(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((x'')%(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))AND(((vt0.c0) IS TRUE))))AND(((v0.c0)&(v0.c0)))));
SELECT ALL * FROM v0 INNER JOIN vt0 ON ((((((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))AND(((vt0.c0) IS TRUE))))AND(((v0.c0)&(v0.c0)))) WHERE (((x'')%(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((x'')%(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))AND(((vt0.c0) IS TRUE))))AND(((v0.c0)&(v0.c0)))));
SELECT ALL * FROM v0 INNER JOIN vt0 ON ((((((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))AND(((vt0.c0) IS TRUE))))AND(((v0.c0)&(v0.c0)))) WHERE (((x'')%(vt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt0, v0 WHERE (LIKELIHOOD(((v0.c0) NOT NULL), 0.7540481960735235)) ORDER BY (~ ((v0.c0 IN (v0.c0)))) DESC, ((((((vt0.c0)OR(v0.c0)))OR(v0.c0 COLLATE RTRIM)))AND(0.4680322889740558 COLLATE NOCASE)) DESC, ((((vt0.c0)*(vt0.c0)))==(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((v0.c0) NOT NULL), 0.7540481960735235)) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ ((v0.c0 IN (v0.c0)))) DESC, ((((((vt0.c0)OR(v0.c0)))OR(v0.c0 COLLATE RTRIM)))AND(0.4680322889740558 COLLATE NOCASE)) DESC, ((((vt0.c0)*(vt0.c0)))==(vt0.c0)) ASC);
SELECT ALL * FROM vt0, v0 WHERE (LIKELIHOOD(((v0.c0) NOT NULL), 0.7540481960735235)) ORDER BY (~ ((v0.c0 IN (v0.c0)))) DESC, ((((((vt0.c0)OR(v0.c0)))OR(v0.c0 COLLATE RTRIM)))AND(0.4680322889740558 COLLATE NOCASE)) DESC, ((((vt0.c0)*(vt0.c0)))==(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((v0.c0) NOT NULL), 0.7540481960735235)) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ ((v0.c0 IN (v0.c0)))) DESC, ((((((vt0.c0)OR(v0.c0)))OR(v0.c0 COLLATE RTRIM)))AND(0.4680322889740558 COLLATE NOCASE)) DESC, ((((vt0.c0)*(vt0.c0)))==(vt0.c0)) ASC);
SELECT ALL * FROM vt0, v0 WHERE (LIKELIHOOD(((v0.c0) NOT NULL), 0.7540481960735235)) ORDER BY (~ ((v0.c0 IN (v0.c0)))) DESC, ((((((vt0.c0)OR(v0.c0)))OR(v0.c0 COLLATE RTRIM)))AND(0.4680322889740558 COLLATE NOCASE)) DESC, ((((vt0.c0)*(vt0.c0)))==(vt0.c0)) ASC;
SELECT COUNT(*) FROM vt0 WHERE (351244489);
SELECT SUM(count) FROM (SELECT ((351244489) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (351244489);
SELECT SUM(count) FROM (SELECT ((351244489) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (351244489);
SELECT ALL * FROM vt0 WHERE ((- (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((- (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((- (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM v0 WHERE (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) IN ())) ORDER BY ((CAST(v0.c0 AS BLOB))&(((((v0.c0)OR(v0.c0)))AND(v0.c0)))) DESC, (NULL IN ((x'7e985e82' IN (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS BLOB))&(((((v0.c0)OR(v0.c0)))AND(v0.c0)))) DESC, (NULL IN ((x'7e985e82' IN (v0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) IN ())) ORDER BY ((CAST(v0.c0 AS BLOB))&(((((v0.c0)OR(v0.c0)))AND(v0.c0)))) DESC, (NULL IN ((x'7e985e82' IN (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS BLOB))&(((((v0.c0)OR(v0.c0)))AND(v0.c0)))) DESC, (NULL IN ((x'7e985e82' IN (v0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) IN ())) ORDER BY ((CAST(v0.c0 AS BLOB))&(((((v0.c0)OR(v0.c0)))AND(v0.c0)))) DESC, (NULL IN ((x'7e985e82' IN (v0.c0))))  NULLS FIRST;
