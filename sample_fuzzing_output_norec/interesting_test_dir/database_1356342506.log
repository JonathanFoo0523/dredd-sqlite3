-- Time: 2024/06/11 00:50:27
-- Database: database6
-- Database version: 3.40.0
-- seed value: 1356342506
PRAGMA cache_size = 50000; -- 9ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 1ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, order=DESC); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=x'cf2a' WHERE ((vt0.c0 COLLATE NOCASE)>=(0.928279925483482)); -- 0ms;
PRAGMA main.secure_delete = true; -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE vt0 SET (c0)=('700619239'); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('Y〈'); -- 1ms;
PRAGMA busy_timeout = 0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR REPLACE rt0 SET (c2)=(NULL); -- 0ms;
UPDATE vt0 SET (c0)=('') WHERE (+ (((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))); -- 0ms;
COMMIT; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c2)=(0.2789251972247486, '') WHERE ((rt0.c0)GLOB(rt0.c2)) COLLATE BINARY; -- 0ms;
PRAGMA main.ignore_check_constraints; -- 0ms;
PRAGMA temp.foreign_keys = false; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0.2789251972247486 WHERE ((((rt0.c2)>=(rt0.c0)))||((((NULL)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))); -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c2)=(x'74e9'); -- 0ms;
PRAGMA cell_size_check = true; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR REPLACE vt0 SET c0=0.28953579121515394 WHERE vt0.c0; -- 0ms;
END; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0xffffffff8ede3008) WHERE vt0.c0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA automatic_index; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE vt0 SET (c0, c0, c0)=(x'', x'0e706a56', 0.3860346073155422); -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE OR REPLACE vt0 SET (c0, c0)=(0.028080742177020945, -1898041336) WHERE vt0.c0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '51089'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1766003622);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.automatic_index = true; -- 0ms;
PRAGMA main.secure_delete; -- 0ms;
PRAGMA temp.automatic_index = true; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=12'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE rt0 SET (c0, c2)=(x'', '-486241072') WHERE (rt0.c0 COLLATE NOCASE IN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (0.9312742211711119)))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '56074'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 456838106);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA integrity_check; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA main.auto_vacuum = FULL; -- 0ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0) AS SELECT (~ (0.5396824724578724)) FROM rt0 WHERE (0.021001297286836307); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'' WHERE (- (CASE WHEN vt0.c0 THEN vt0.c0 END)); -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr2 INSTEAD OF DELETE ON v0 FOR EACH ROW  WHEN CAST((- (v0.c0)) AS NUMERIC) BEGIN INSERT OR IGNORE INTO rt0(c2) VALUES ('y〈'), ('0.9312742211711119'), (0xe7bebf1);END; -- 1ms;
UPDATE OR IGNORE vt0 SET c0=0X100f07f5; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1625829385); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c1)=(x'd510'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR FAIL vt0 SET (c0, c0)=(NULL, '0.9312742211711119'); -- 0ms;
VACUUM temp; -- 0ms;
UPDATE OR IGNORE rt0 SET c0='-554942333'; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '23928'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=13'); -- 0ms;
PRAGMA busy_timeout; -- 0ms;
CREATE TEMP TABLE t0 (c0 INTEGER ); -- 0ms;
PRAGMA ignore_check_constraints; -- 0ms;
UPDATE OR IGNORE rt0 SET c1='_x' WHERE ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE; -- 0ms;
DELETE FROM rt0 WHERE (((((rt0.c0)+(rt0.c2))))>=((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))); -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
PRAGMA main.short_column_names = false; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA threads = -432192480987605356; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM t0, vt0 INNER JOIN rt0 ON (CAST(vt0.c0 AS NUMERIC) IN (((vt0.c0)!=(t0.c0)))) WHERE ((((((rt0.c2)!=(rt0.c1))))<=(('1814995728')))) ORDER BY ((((((((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))AND(NULL)))AND(t0.c0)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (t0.c0)))))OR('&넥霫')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)!=(rt0.c1))))<=(('1814995728')))) IS TRUE)  as count FROM t0, vt0 INNER JOIN rt0 ON (CAST(vt0.c0 AS NUMERIC) IN (((vt0.c0)<>(t0.c0)))) ORDER BY ((((((((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))AND(NULL)))AND(t0.c0)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (t0.c0)))))OR('&넥霫')) ASC  NULLS LAST);
SELECT * FROM t0, vt0 INNER JOIN rt0 ON (CAST(vt0.c0 AS NUMERIC) IN (((vt0.c0)!=(t0.c0)))) WHERE ((((((rt0.c2)!=(rt0.c1))))<=(('1814995728')))) ORDER BY ((((((((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))AND(NULL)))AND(t0.c0)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (t0.c0)))))OR('&넥霫')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)!=(rt0.c1))))<=(('1814995728')))) IS TRUE)  as count FROM t0, vt0 INNER JOIN rt0 ON (CAST(vt0.c0 AS NUMERIC) IN (((vt0.c0)<>(t0.c0)))) ORDER BY ((((((((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))AND(NULL)))AND(t0.c0)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (t0.c0)))))OR('&넥霫')) ASC  NULLS LAST);
SELECT * FROM t0, vt0 INNER JOIN rt0 ON (CAST(vt0.c0 AS NUMERIC) IN (((vt0.c0)!=(t0.c0)))) WHERE ((((((rt0.c2)!=(rt0.c1))))<=(('1814995728')))) ORDER BY ((((((((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))AND(NULL)))AND(t0.c0)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (t0.c0)))))OR('&넥霫')) ASC  NULLS LAST;
SELECT * FROM vt0, t0, v0 WHERE (CAST(((((0.5119302926995621)AND(v0.c0)))AND(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((0.5119302926995621)AND(v0.c0)))AND(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE (CAST(((((0.5119302926995621)AND(v0.c0)))AND(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((0.5119302926995621)AND(v0.c0)))AND(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE (CAST(((((0.5119302926995621)AND(v0.c0)))AND(vt0.c0)) AS INTEGER));
SELECT ALL * FROM v0, t0, vt0, rt0 WHERE (((((rt0.c2) IS TRUE))==((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS TRUE))=((rt0.c0 IN ())))) IS TRUE)  as count FROM v0, t0, vt0, rt0);
SELECT ALL * FROM v0, t0, vt0, rt0 WHERE (((((rt0.c2) IS TRUE))==((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS TRUE))=((rt0.c0 IN ())))) IS TRUE)  as count FROM v0, t0, vt0, rt0);
SELECT ALL * FROM v0, t0, vt0, rt0 WHERE (((((rt0.c2) IS TRUE))==((rt0.c0 IN ()))));
SELECT * FROM vt0 CROSS JOIN t0 ON ROUND((t0.c0 IN ()), 0.4259495329531858) WHERE (UNLIKELY(DISTINCT (- (vt0.c0)))) ORDER BY CAST(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT (- (vt0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ROUND((t0.c0 IN ()), 0.4259495329531858) ORDER BY CAST(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END AS INTEGER) ASC);
SELECT * FROM vt0 CROSS JOIN t0 ON ROUND((t0.c0 IN ()), 0.4259495329531858) WHERE (UNLIKELY(DISTINCT (- (vt0.c0)))) ORDER BY CAST(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT (- (vt0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ROUND((t0.c0 IN ()), 0.4259495329531858) ORDER BY CAST(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END AS INTEGER) ASC);
SELECT * FROM vt0 CROSS JOIN t0 ON ROUND((t0.c0 IN ()), 0.4259495329531858) WHERE (UNLIKELY(DISTINCT (- (vt0.c0)))) ORDER BY CAST(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END AS INTEGER) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0, v0, t0 WHERE (x'') ORDER BY (((rt0.c2) NOT BETWEEN (t0.c0) AND (v0.c0)) IN ()), (('0.5396824724578724')>(CAST(vt0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0, v0, t0 ORDER BY (((rt0.c2) NOT BETWEEN (t0.c0) AND (v0.c0)) IN ()), (('0.5396824724578724')>(CAST(vt0.c0 AS INTEGER))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, v0, t0 WHERE (x'') ORDER BY (((rt0.c2) NOT BETWEEN (t0.c0) AND (v0.c0)) IN ()), (('0.5396824724578724')>(CAST(vt0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0, v0, t0 ORDER BY (((rt0.c2) NOT BETWEEN (t0.c0) AND (v0.c0)) IN ()), (('0.5396824724578724')>(CAST(vt0.c0 AS INTEGER))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, v0, t0 WHERE (x'') ORDER BY (((rt0.c2) NOT BETWEEN (t0.c0) AND (v0.c0)) IN ()), (('0.5396824724578724')>(CAST(vt0.c0 AS INTEGER))) DESC;
SELECT ALL * FROM vt0, rt0, t0 WHERE (t0.c0) ORDER BY ((((vt0.c0)||(vt0.c0)))=((((rt0.c1))<=((vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((vt0.c0)||(vt0.c0)))=((((rt0.c1))<=((vt0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, t0 WHERE (t0.c0) ORDER BY ((((vt0.c0)||(vt0.c0)))=((((rt0.c1))<=((vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((vt0.c0)||(vt0.c0)))=((((rt0.c1))<=((vt0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, t0 WHERE (t0.c0) ORDER BY ((((vt0.c0)||(vt0.c0)))=((((rt0.c1))<=((vt0.c0))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0, rt0 WHERE (((CASE WHEN '243002353' THEN v0.c0 WHEN t0.c0 THEN x'52a2a89f' WHEN v0.c0 THEN NULL ELSE rt0.c2 END) NOT BETWEEN (UPPER(rt0.c2)) AND (((v0.c0)<<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN '243002353' THEN v0.c0 WHEN t0.c0 THEN x'52a2a89f' WHEN v0.c0 THEN NULL ELSE rt0.c2 END) NOT BETWEEN (UPPER(rt0.c2)) AND (((v0.c0)<<(v0.c0))))) IS TRUE)  as count FROM v0, t0, rt0);
SELECT ALL COUNT(*) FROM v0, t0, rt0 WHERE (((CASE WHEN '243002353' THEN v0.c0 WHEN t0.c0 THEN x'52a2a89f' WHEN v0.c0 THEN NULL ELSE rt0.c2 END) NOT BETWEEN (UPPER(rt0.c2)) AND (((v0.c0)<<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN '243002353' THEN v0.c0 WHEN t0.c0 THEN x'52a2a89f' WHEN v0.c0 THEN NULL ELSE rt0.c2 END) NOT BETWEEN (UPPER(rt0.c2)) AND (((v0.c0)<<(v0.c0))))) IS TRUE)  as count FROM v0, t0, rt0);
SELECT ALL COUNT(*) FROM v0, t0, rt0 WHERE (((CASE WHEN '243002353' THEN v0.c0 WHEN t0.c0 THEN x'52a2a89f' WHEN v0.c0 THEN NULL ELSE rt0.c2 END) NOT BETWEEN (UPPER(rt0.c2)) AND (((v0.c0)<<(v0.c0)))));
SELECT ALL * FROM t0, v0, vt0, rt0 WHERE (t0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((t0.c0 COLLATE RTRIM) IS TRUE)  as count FROM t0, v0, vt0, rt0);
SELECT ALL * FROM t0, v0, vt0, rt0 WHERE (t0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((t0.c0 COLLATE RTRIM) IS TRUE)  as count FROM t0, v0, vt0, rt0);
SELECT ALL * FROM t0, v0, vt0, rt0 WHERE (t0.c0 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (vt0.c0);
SELECT ALL * FROM t0, v0 WHERE (((((((t0.c0)OR(v0.c0)))AND(t0.c0))) BETWEEN (CASE v0.c0  WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 END) AND (((((t0.c0)OR(t0.c0)))OR(t0.c0))))) ORDER BY CAST((((v0.c0))==((t0.c0))) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)OR(v0.c0)))AND(t0.c0))) BETWEEN (CASE v0.c0  WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 END) AND (((((t0.c0)OR(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY CAST((((v0.c0))=((t0.c0))) AS REAL)  NULLS FIRST);
SELECT ALL * FROM t0, v0 WHERE (((((((t0.c0)OR(v0.c0)))AND(t0.c0))) BETWEEN (CASE v0.c0  WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 END) AND (((((t0.c0)OR(t0.c0)))OR(t0.c0))))) ORDER BY CAST((((v0.c0))==((t0.c0))) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)OR(v0.c0)))AND(t0.c0))) BETWEEN (CASE v0.c0  WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 END) AND (((((t0.c0)OR(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY CAST((((v0.c0))=((t0.c0))) AS REAL)  NULLS FIRST);
SELECT ALL * FROM t0, v0 WHERE (((((((t0.c0)OR(v0.c0)))AND(t0.c0))) BETWEEN (CASE v0.c0  WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 END) AND (((((t0.c0)OR(t0.c0)))OR(t0.c0))))) ORDER BY CAST((((v0.c0))==((t0.c0))) AS REAL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON CAST((NOT ('')) AS REAL) RIGHT OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((rt0.c1)=(rt0.c0)))) AND ((LIKELY(DISTINCT v0.c0)))) INNER JOIN v0 ON (+ (vt0.c0 COLLATE RTRIM)) WHERE (((((((v0.c0)OR(vt0.c0)))AND(rt0.c0)))AND(((((vt0.c0)OR(t0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(vt0.c0)))AND(rt0.c0)))AND(((((vt0.c0)OR(t0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON CAST((NOT ('')) AS REAL) RIGHT OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((rt0.c1)==(rt0.c0)))) AND ((LIKELY(DISTINCT v0.c0)))) INNER JOIN v0 ON (+ (vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON CAST((NOT ('')) AS REAL) RIGHT OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((rt0.c1)=(rt0.c0)))) AND ((LIKELY(DISTINCT v0.c0)))) INNER JOIN v0 ON (+ (vt0.c0 COLLATE RTRIM)) WHERE (((((((v0.c0)OR(vt0.c0)))AND(rt0.c0)))AND(((((vt0.c0)OR(t0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(vt0.c0)))AND(rt0.c0)))AND(((((vt0.c0)OR(t0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON CAST((NOT ('')) AS REAL) RIGHT OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((rt0.c1)==(rt0.c0)))) AND ((LIKELY(DISTINCT v0.c0)))) INNER JOIN v0 ON (+ (vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON CAST((NOT ('')) AS REAL) RIGHT OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((rt0.c1)=(rt0.c0)))) AND ((LIKELY(DISTINCT v0.c0)))) INNER JOIN v0 ON (+ (vt0.c0 COLLATE RTRIM)) WHERE (((((((v0.c0)OR(vt0.c0)))AND(rt0.c0)))AND(((((vt0.c0)OR(t0.c0)))OR(rt0.c1)))));
SELECT * FROM t0, rt0, vt0, v0 WHERE (((rt0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT NULL)) IS TRUE)  as count FROM t0, rt0, vt0, v0);
SELECT * FROM t0, rt0, vt0, v0 WHERE (((rt0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT NULL)) IS TRUE)  as count FROM t0, rt0, vt0, v0);
SELECT * FROM t0, rt0, vt0, v0 WHERE (((rt0.c0) NOT NULL));
SELECT ALL * FROM v0 WHERE (CAST(v0.c0 COLLATE RTRIM AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(v0.c0 COLLATE RTRIM AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(v0.c0 COLLATE RTRIM AS NUMERIC));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2 COLLATE NOCASE)OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)))AND(0.49798647865167933))) ORDER BY (NOT (TYPEOF(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2 COLLATE NOCASE)OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)))AND(0.49798647865167933))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (TYPEOF(rt0.c2))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2 COLLATE NOCASE)OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)))AND(0.49798647865167933))) ORDER BY (NOT (TYPEOF(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2 COLLATE NOCASE)OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)))AND(0.49798647865167933))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (TYPEOF(rt0.c2))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2 COLLATE NOCASE)OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)))AND(0.49798647865167933))) ORDER BY (NOT (TYPEOF(rt0.c2)));
SELECT * FROM v0 WHERE (CAST(v0.c0 AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(v0.c0 AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(v0.c0 AS BLOB) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((x'' IN ()));
SELECT COUNT(*) FROM v0, t0 INNER JOIN rt0 ON 'y〈' CROSS JOIN vt0 ON ((CAST(rt0.c0 AS INTEGER)) IS TRUE) WHERE ((((NOT (v0.c0))) NOT BETWEEN (t0.c0) AND (((v0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0))) NOT BETWEEN (t0.c0) AND (((v0.c0) BETWEEN (vt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM v0, t0 NOT INDEXED INNER JOIN rt0 ON 'y〈' CROSS JOIN vt0 ON ((CAST(rt0.c0 AS INTEGER)) IS TRUE));
SELECT COUNT(*) FROM v0, t0 INNER JOIN rt0 ON 'y〈' CROSS JOIN vt0 ON ((CAST(rt0.c0 AS INTEGER)) IS TRUE) WHERE ((((NOT (v0.c0))) NOT BETWEEN (t0.c0) AND (((v0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0))) NOT BETWEEN (t0.c0) AND (((v0.c0) BETWEEN (vt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM v0, t0 NOT INDEXED INNER JOIN rt0 ON 'y〈' CROSS JOIN vt0 ON ((CAST(rt0.c0 AS INTEGER)) IS TRUE));
SELECT COUNT(*) FROM v0, t0 INNER JOIN rt0 ON 'y〈' CROSS JOIN vt0 ON ((CAST(rt0.c0 AS INTEGER)) IS TRUE) WHERE ((((NOT (v0.c0))) NOT BETWEEN (t0.c0) AND (((v0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))));
SELECT * FROM v0, rt0, t0, vt0 WHERE (((rt0.c0)<(((v0.c0) NOTNULL)))) ORDER BY ((rt0.c1 COLLATE BINARY)GLOB(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)<(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, rt0, t0, vt0 ORDER BY ((rt0.c1 COLLATE BINARY)GLOB(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1))))  NULLS FIRST);
SELECT * FROM v0, rt0, t0, vt0 WHERE (((rt0.c0)<(((v0.c0) NOTNULL)))) ORDER BY ((rt0.c1 COLLATE BINARY)GLOB(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)<(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, rt0, t0, vt0 ORDER BY ((rt0.c1 COLLATE BINARY)GLOB(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1))))  NULLS FIRST);
SELECT * FROM v0, rt0, t0, vt0 WHERE (((rt0.c0)<(((v0.c0) NOTNULL)))) ORDER BY ((rt0.c1 COLLATE BINARY)GLOB(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1))))  NULLS FIRST;
SELECT * FROM t0, rt0 NOT INDEXED, v0 WHERE ((~ (CASE rt0.c0  WHEN v0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN rt0.c0 END))) ORDER BY (CASE WHEN v0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN rt0.c2 END IN (((t0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT (((~ (CASE rt0.c0  WHEN v0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN rt0.c0 END))) IS TRUE)  as count FROM t0, rt0, v0 ORDER BY (CASE WHEN v0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN rt0.c2 END IN (((t0.c0) NOTNULL))));
SELECT * FROM t0, rt0 NOT INDEXED, v0 WHERE ((~ (CASE rt0.c0  WHEN v0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN rt0.c0 END))) ORDER BY (CASE WHEN v0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN rt0.c2 END IN (((t0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT (((~ (CASE rt0.c0  WHEN v0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN rt0.c0 END))) IS TRUE)  as count FROM t0, rt0, v0 ORDER BY (CASE WHEN v0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN rt0.c2 END IN (((t0.c0) NOTNULL))));
SELECT * FROM t0, rt0 NOT INDEXED, v0 WHERE ((~ (CASE rt0.c0  WHEN v0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN rt0.c0 END))) ORDER BY (CASE WHEN v0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN rt0.c2 END IN (((t0.c0) NOTNULL)));
SELECT ALL COUNT(*) FROM t0, rt0 CROSS JOIN v0 ON CASE WHEN CAST(rt0.c0 AS REAL) THEN rt0.c1 COLLATE RTRIM ELSE (NULL IN ()) END WHERE (((v0.c0) IS FALSE)) ORDER BY x''  NULLS FIRST, ((rt0.c1 COLLATE RTRIM) BETWEEN (CASE WHEN v0.c0 THEN t0.c0 WHEN rt0.c2 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 END) AND ((rt0.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS FALSE)) IS TRUE)  as count FROM t0, rt0 CROSS JOIN v0 ON CASE WHEN CAST(rt0.c0 AS REAL) THEN rt0.c1 COLLATE RTRIM ELSE (NULL IN ()) END ORDER BY x''  NULLS FIRST, ((rt0.c1 COLLATE RTRIM) BETWEEN (CASE WHEN v0.c0 THEN t0.c0 WHEN rt0.c2 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 END) AND ((rt0.c2 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 CROSS JOIN v0 ON CASE WHEN CAST(rt0.c0 AS REAL) THEN rt0.c1 COLLATE RTRIM ELSE (NULL IN ()) END WHERE (((v0.c0) IS FALSE)) ORDER BY x''  NULLS FIRST, ((rt0.c1 COLLATE RTRIM) BETWEEN (CASE WHEN v0.c0 THEN t0.c0 WHEN rt0.c2 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 END) AND ((rt0.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS FALSE)) IS TRUE)  as count FROM t0, rt0 CROSS JOIN v0 ON CASE WHEN CAST(rt0.c0 AS REAL) THEN rt0.c1 COLLATE RTRIM ELSE (NULL IN ()) END ORDER BY x''  NULLS FIRST, ((rt0.c1 COLLATE RTRIM) BETWEEN (CASE WHEN v0.c0 THEN t0.c0 WHEN rt0.c2 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 END) AND ((rt0.c2 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 CROSS JOIN v0 ON CASE WHEN CAST(rt0.c0 AS REAL) THEN rt0.c1 COLLATE RTRIM ELSE (NULL IN ()) END WHERE (((v0.c0) IS FALSE)) ORDER BY x''  NULLS FIRST, ((rt0.c1 COLLATE RTRIM) BETWEEN (CASE WHEN v0.c0 THEN t0.c0 WHEN rt0.c2 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 END) AND ((rt0.c2 IN ())))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(rt0.c0 COLLATE NOCASE AS TEXT)) ORDER BY ((CAST(rt0.c2 AS BLOB))>(((rt0.c0)>>(0.670117808321948))))  NULLS LAST, ((((t0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))IS NOT((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, t0.c0)) AND ((rt0.c2, t0.c0, t0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((CAST(rt0.c2 AS BLOB))>(((rt0.c0)>>(0.670117808321948))))  NULLS LAST, ((((t0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))IS NOT((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, t0.c0)) AND ((rt0.c2, t0.c0, t0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(rt0.c0 COLLATE NOCASE AS TEXT)) ORDER BY ((CAST(rt0.c2 AS BLOB))>(((rt0.c0)>>(0.670117808321948))))  NULLS LAST, ((((t0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))IS NOT((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, t0.c0)) AND ((rt0.c2, t0.c0, t0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((CAST(rt0.c2 AS BLOB))>(((rt0.c0)>>(0.670117808321948))))  NULLS LAST, ((((t0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))IS NOT((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, t0.c0)) AND ((rt0.c2, t0.c0, t0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(rt0.c0 COLLATE NOCASE AS TEXT)) ORDER BY ((CAST(rt0.c2 AS BLOB))>(((rt0.c0)>>(0.670117808321948))))  NULLS LAST, ((((t0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))IS NOT((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, t0.c0)) AND ((rt0.c2, t0.c0, t0.c0)))))  NULLS LAST;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((((CAST(t0.c0 AS TEXT))AND(((rt0.c1) ISNULL))))OR('Xa')) RIGHT OUTER JOIN rt0 ON ((rt0.c1) IS FALSE) COLLATE NOCASE LEFT OUTER JOIN t0 ON x'' WHERE (((((x'') NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') NOT NULL)) IS FALSE)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((CAST(t0.c0 AS TEXT))AND(((rt0.c1) ISNULL))))OR('Xa')) RIGHT OUTER JOIN rt0 ON ((rt0.c1) IS FALSE) COLLATE NOCASE LEFT OUTER JOIN t0 ON x'');
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((((CAST(t0.c0 AS TEXT))AND(((rt0.c1) ISNULL))))OR('Xa')) RIGHT OUTER JOIN rt0 ON ((rt0.c1) IS FALSE) COLLATE NOCASE LEFT OUTER JOIN t0 ON x'' WHERE (((((x'') NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') NOT NULL)) IS FALSE)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((CAST(t0.c0 AS TEXT))AND(((rt0.c1) ISNULL))))OR('Xa')) RIGHT OUTER JOIN rt0 ON ((rt0.c1) IS FALSE) COLLATE NOCASE LEFT OUTER JOIN t0 ON x'');
SELECT COUNT(*) FROM rt0 WHERE (CASE 0.012034517073410855  WHEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE 877760831 END THEN ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) WHEN (NOT (rt0.c2)) THEN 0.728224975090602 WHEN UPPER(rt0.c0) THEN (((rt0.c0))<>((''))) ELSE (0X7bf519ca IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.012034517073410855  WHEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE 877760831 END THEN ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) WHEN (NOT (rt0.c2)) THEN 0.728224975090602 WHEN UPPER(rt0.c0) THEN (((rt0.c0))<>((''))) ELSE (0x7bf519ca IN ()) END) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0 WHERE (CASE 0.012034517073410855  WHEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE 877760831 END THEN ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) WHEN (NOT (rt0.c2)) THEN 0.728224975090602 WHEN UPPER(rt0.c0) THEN (((rt0.c0))<>((''))) ELSE (0X7bf519ca IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.012034517073410855  WHEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE 877760831 END THEN ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) WHEN (NOT (rt0.c2)) THEN 0.728224975090602 WHEN UPPER(rt0.c0) THEN (((rt0.c0))<>((''))) ELSE (0x7bf519ca IN ()) END) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0 WHERE (CASE 0.012034517073410855  WHEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE 877760831 END THEN ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) WHEN (NOT (rt0.c2)) THEN 0.728224975090602 WHEN UPPER(rt0.c0) THEN (((rt0.c0))<>((''))) ELSE (0X7bf519ca IN ()) END);
SELECT * FROM v0 WHERE ((((v0.c0, '', v0.c0)) BETWEEN ((((v0.c0)>(v0.c0)), ((((v0.c0)OR(v0.c0)))OR(v0.c0)), ((((v0.c0)AND(v0.c0)))OR(v0.c0)))) AND (((v0.c0 IN (v0.c0, 0.10819444173685955)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), (((v0.c0))==((v0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, '', v0.c0)) BETWEEN ((((v0.c0)>(v0.c0)), ((((v0.c0)OR(v0.c0)))OR(v0.c0)), ((((v0.c0)AND(v0.c0)))OR(v0.c0)))) AND (((v0.c0 IN (v0.c0, 0.10819444173685955)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), (((v0.c0))==((v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0, '', v0.c0)) BETWEEN ((((v0.c0)>(v0.c0)), ((((v0.c0)OR(v0.c0)))OR(v0.c0)), ((((v0.c0)AND(v0.c0)))OR(v0.c0)))) AND (((v0.c0 IN (v0.c0, 0.10819444173685955)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), (((v0.c0))==((v0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, '', v0.c0)) BETWEEN ((((v0.c0)>(v0.c0)), ((((v0.c0)OR(v0.c0)))OR(v0.c0)), ((((v0.c0)AND(v0.c0)))OR(v0.c0)))) AND (((v0.c0 IN (v0.c0, 0.10819444173685955)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), (((v0.c0))==((v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0, '', v0.c0)) BETWEEN ((((v0.c0)>(v0.c0)), ((((v0.c0)OR(v0.c0)))OR(v0.c0)), ((((v0.c0)AND(v0.c0)))OR(v0.c0)))) AND (((v0.c0 IN (v0.c0, 0.10819444173685955)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), (((v0.c0))==((v0.c0)))))));
SELECT COUNT(*) FROM t0, rt0 LEFT OUTER JOIN v0 ON rt0.c0 WHERE ((((rt0.c0))>((rt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((rt0.c0))>((rt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN v0 ON rt0.c0);
SELECT COUNT(*) FROM t0, rt0 LEFT OUTER JOIN v0 ON rt0.c0 WHERE ((((rt0.c0))>((rt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((rt0.c0))>((rt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN v0 ON rt0.c0);
SELECT COUNT(*) FROM t0, rt0 LEFT OUTER JOIN v0 ON rt0.c0 WHERE ((((rt0.c0))>((rt0.c0))) COLLATE BINARY);
SELECT ALL * FROM v0, rt0, vt0, t0 WHERE (((CAST(vt0.c0 AS TEXT))<>(((((((((rt0.c0)OR(rt0.c1)))OR(t0.c0)))OR(0.31432954136059166)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))<>(((((((((rt0.c0)OR(rt0.c1)))OR(t0.c0)))OR(0.31432954136059166)))AND(vt0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0, t0);
SELECT ALL * FROM v0, rt0, vt0, t0 WHERE (((CAST(vt0.c0 AS TEXT))<>(((((((((rt0.c0)OR(rt0.c1)))OR(t0.c0)))OR(0.31432954136059166)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))<>(((((((((rt0.c0)OR(rt0.c1)))OR(t0.c0)))OR(0.31432954136059166)))AND(vt0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0, t0);
SELECT ALL * FROM v0, rt0, vt0, t0 WHERE (((CAST(vt0.c0 AS TEXT))<>(((((((((rt0.c0)OR(rt0.c1)))OR(t0.c0)))OR(0.31432954136059166)))AND(vt0.c0)))));
SELECT ALL * FROM t0, v0 INNER JOIN rt0 ON ((t0.c0)||(rt0.c0)) COLLATE BINARY WHERE (((((((((((rt0.c1)AND(t0.c0)))OR(v0.c0)))OR(t0.c0)))AND(rt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)AND(t0.c0)))OR(v0.c0)))OR(t0.c0)))AND(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, v0 INNER JOIN rt0 ON ((t0.c0)||(rt0.c0)) COLLATE BINARY);
SELECT ALL * FROM t0, v0 INNER JOIN rt0 ON ((t0.c0)||(rt0.c0)) COLLATE BINARY WHERE (((((((((((rt0.c1)AND(t0.c0)))OR(v0.c0)))OR(t0.c0)))AND(rt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)AND(t0.c0)))OR(v0.c0)))OR(t0.c0)))AND(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, v0 INNER JOIN rt0 ON ((t0.c0)||(rt0.c0)) COLLATE BINARY);
SELECT ALL * FROM t0, v0 INNER JOIN rt0 ON ((t0.c0)||(rt0.c0)) COLLATE BINARY WHERE (((((((((((rt0.c1)AND(t0.c0)))OR(v0.c0)))OR(t0.c0)))AND(rt0.c0))) NOTNULL));
SELECT ALL * FROM vt0, rt0 WHERE (HEX((rt0.c0 IN (rt0.c0)))) ORDER BY TRIM(DISTINCT (rt0.c0 IN ())) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX((rt0.c0 IN (rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY TRIM(DISTINCT (rt0.c0 IN ())) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (HEX((rt0.c0 IN (rt0.c0)))) ORDER BY TRIM(DISTINCT (rt0.c0 IN ())) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX((rt0.c0 IN (rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY TRIM(DISTINCT (rt0.c0 IN ())) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (HEX((rt0.c0 IN (rt0.c0)))) ORDER BY TRIM(DISTINCT (rt0.c0 IN ())) ASC  NULLS FIRST;
SELECT ALL * FROM t0, v0, rt0 WHERE (0.597394230571744) ORDER BY (((rt0.c1)IS(rt0.c2)) IN ((~ (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.597394230571744) IS TRUE)  as count FROM t0, v0, rt0 ORDER BY (((rt0.c1)IS(rt0.c2)) IN ((~ (rt0.c2))))  NULLS LAST);
SELECT ALL * FROM t0, v0, rt0 WHERE (0.597394230571744) ORDER BY (((rt0.c1)IS(rt0.c2)) IN ((~ (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.597394230571744) IS TRUE)  as count FROM t0, v0, rt0 ORDER BY (((rt0.c1)IS(rt0.c2)) IN ((~ (rt0.c2))))  NULLS LAST);
SELECT ALL * FROM t0, v0, rt0 WHERE (0.597394230571744) ORDER BY (((rt0.c1)IS(rt0.c2)) IN ((~ (rt0.c2))))  NULLS LAST;
SELECT * FROM t0, vt0, v0, rt0 WHERE (CAST(((t0.c0) IS TRUE) AS TEXT)) ORDER BY CASE ((t0.c0) IS FALSE)  WHEN CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END THEN ((vt0.c0)AND(rt0.c0)) WHEN ((v0.c0)!=(v0.c0)) THEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) WHEN CAST(x'' AS BLOB) THEN ((v0.c0)>>(t0.c0)) ELSE (v0.c0 IN (x'', v0.c0)) END ASC, (CAST(t0.c0 AS INTEGER) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) IS TRUE) AS TEXT)) IS TRUE)  as count FROM t0, vt0, v0, rt0 ORDER BY CASE ((t0.c0) IS FALSE)  WHEN CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END THEN ((vt0.c0)AND(rt0.c0)) WHEN ((v0.c0)<>(v0.c0)) THEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) WHEN CAST(x'' AS BLOB) THEN ((v0.c0)>>(t0.c0)) ELSE (v0.c0 IN (x'', v0.c0)) END ASC, (CAST(t0.c0 AS INTEGER) IN ()) DESC);
SELECT * FROM t0, vt0, v0, rt0 WHERE (CAST(((t0.c0) IS TRUE) AS TEXT)) ORDER BY CASE ((t0.c0) IS FALSE)  WHEN CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END THEN ((vt0.c0)AND(rt0.c0)) WHEN ((v0.c0)!=(v0.c0)) THEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) WHEN CAST(x'' AS BLOB) THEN ((v0.c0)>>(t0.c0)) ELSE (v0.c0 IN (x'', v0.c0)) END ASC, (CAST(t0.c0 AS INTEGER) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) IS TRUE) AS TEXT)) IS TRUE)  as count FROM t0, vt0, v0, rt0 ORDER BY CASE ((t0.c0) IS FALSE)  WHEN CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END THEN ((vt0.c0)AND(rt0.c0)) WHEN ((v0.c0)<>(v0.c0)) THEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) WHEN CAST(x'' AS BLOB) THEN ((v0.c0)>>(t0.c0)) ELSE (v0.c0 IN (x'', v0.c0)) END ASC, (CAST(t0.c0 AS INTEGER) IN ()) DESC);
SELECT * FROM t0, vt0, v0, rt0 WHERE (CAST(((t0.c0) IS TRUE) AS TEXT)) ORDER BY CASE ((t0.c0) IS FALSE)  WHEN CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END THEN ((vt0.c0)AND(rt0.c0)) WHEN ((v0.c0)!=(v0.c0)) THEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) WHEN CAST(x'' AS BLOB) THEN ((v0.c0)>>(t0.c0)) ELSE (v0.c0 IN (x'', v0.c0)) END ASC, (CAST(t0.c0 AS INTEGER) IN ()) DESC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(LIKELY(rt0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(rt0.c2) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(LIKELY(rt0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(rt0.c2) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(LIKELY(rt0.c2) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 WHERE (0.522383896936584) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((0.522383896936584) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.522383896936584) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((0.522383896936584) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.522383896936584) ORDER BY rt0.c1;
SELECT ALL * FROM t0 WHERE ((TRIM(DISTINCT t0.c0, t0.c0) IN (TYPEOF(t0.c0)))) ORDER BY ((t0.c0)OR(x'')) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((TRIM(DISTINCT t0.c0, t0.c0) IN (TYPEOF(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0)OR(x'')) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((TRIM(DISTINCT t0.c0, t0.c0) IN (TYPEOF(t0.c0)))) ORDER BY ((t0.c0)OR(x'')) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((TRIM(DISTINCT t0.c0, t0.c0) IN (TYPEOF(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0)OR(x'')) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((TRIM(DISTINCT t0.c0, t0.c0) IN (TYPEOF(t0.c0)))) ORDER BY ((t0.c0)OR(x'')) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL * FROM vt0, t0, v0 WHERE (t0.c0) ORDER BY (~ (CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (~ (CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM vt0, t0, v0 WHERE (t0.c0) ORDER BY (~ (CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (~ (CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM vt0, t0, v0 WHERE (t0.c0) ORDER BY (~ (CAST(vt0.c0 AS REAL)));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))))=((rt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))))=((rt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))))=((rt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))))=((rt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))))=((rt0.c0 COLLATE BINARY))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CAST('-1898041336' AS INTEGER)) ORDER BY CAST(COALESCE(DISTINCT t0.c0, vt0.c0) AS TEXT) DESC, (- (t0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CAST('-1898041336' AS INTEGER)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY CAST(COALESCE(DISTINCT t0.c0, vt0.c0) AS TEXT) DESC, (- (t0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CAST('-1898041336' AS INTEGER)) ORDER BY CAST(COALESCE(DISTINCT t0.c0, vt0.c0) AS TEXT) DESC, (- (t0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CAST('-1898041336' AS INTEGER)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY CAST(COALESCE(DISTINCT t0.c0, vt0.c0) AS TEXT) DESC, (- (t0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CAST('-1898041336' AS INTEGER)) ORDER BY CAST(COALESCE(DISTINCT t0.c0, vt0.c0) AS TEXT) DESC, (- (t0.c0)) COLLATE NOCASE;
SELECT ALL * FROM vt0, t0, v0, rt0 WHERE (((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c2)) COLLATE NOCASE) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, v0, rt0 NOT INDEXED ORDER BY NULL ASC);
SELECT ALL * FROM vt0, t0, v0, rt0 WHERE (((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c2)) COLLATE NOCASE) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, v0, rt0 NOT INDEXED ORDER BY NULL ASC);
SELECT ALL * FROM vt0, t0, v0, rt0 WHERE (((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c2)) COLLATE NOCASE) ORDER BY NULL ASC;
SELECT ALL * FROM vt0, t0, rt0 FULL OUTER JOIN v0 ON ((((((rt0.c2) NOTNULL))AND(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))))OR(((rt0.c0) NOT NULL))) WHERE (rt0.c1) ORDER BY ((CAST(rt0.c1 AS INTEGER)) IS TRUE)  NULLS LAST, ((((rt0.c1)<=(rt0.c0))) ISNULL) DESC  NULLS FIRST, CASE WHEN (t0.c0 IN ()) THEN ((700619239)/(rt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, t0, rt0 FULL OUTER JOIN v0 ON ((((((rt0.c2) NOTNULL))AND(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))))OR(((rt0.c0) NOT NULL))) ORDER BY ((CAST(rt0.c1 AS INTEGER)) IS TRUE)  NULLS LAST, ((((rt0.c1)<=(rt0.c0))) ISNULL) DESC  NULLS FIRST, CASE WHEN (t0.c0 IN ()) THEN ((700619239)/(rt0.c0)) END  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt0 FULL OUTER JOIN v0 ON ((((((rt0.c2) NOTNULL))AND(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))))OR(((rt0.c0) NOT NULL))) WHERE (rt0.c1) ORDER BY ((CAST(rt0.c1 AS INTEGER)) IS TRUE)  NULLS LAST, ((((rt0.c1)<=(rt0.c0))) ISNULL) DESC  NULLS FIRST, CASE WHEN (t0.c0 IN ()) THEN ((700619239)/(rt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, t0, rt0 FULL OUTER JOIN v0 ON ((((((rt0.c2) NOTNULL))AND(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))))OR(((rt0.c0) NOT NULL))) ORDER BY ((CAST(rt0.c1 AS INTEGER)) IS TRUE)  NULLS LAST, ((((rt0.c1)<=(rt0.c0))) ISNULL) DESC  NULLS FIRST, CASE WHEN (t0.c0 IN ()) THEN ((700619239)/(rt0.c0)) END  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt0 FULL OUTER JOIN v0 ON ((((((rt0.c2) NOTNULL))AND(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))))OR(((rt0.c0) NOT NULL))) WHERE (rt0.c1) ORDER BY ((CAST(rt0.c1 AS INTEGER)) IS TRUE)  NULLS LAST, ((((rt0.c1)<=(rt0.c0))) ISNULL) DESC  NULLS FIRST, CASE WHEN (t0.c0 IN ()) THEN ((700619239)/(rt0.c0)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((+ (v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((+ (v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((+ (v0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM v0, vt0, t0, rt0 WHERE (((((NULL)OR(((((vt0.c0)AND(v0.c0)))AND(v0.c0)))))OR(((rt0.c2) IS FALSE)))) ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(((((vt0.c0)AND(v0.c0)))AND(v0.c0)))))OR(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM v0, vt0, t0, rt0 ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, t0, rt0 WHERE (((((NULL)OR(((((vt0.c0)AND(v0.c0)))AND(v0.c0)))))OR(((rt0.c2) IS FALSE)))) ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(((((vt0.c0)AND(v0.c0)))AND(v0.c0)))))OR(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM v0, vt0, t0, rt0 ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, t0, rt0 WHERE (((((NULL)OR(((((vt0.c0)AND(v0.c0)))AND(v0.c0)))))OR(((rt0.c2) IS FALSE)))) ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS REAL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))OR(t0.c0)))==(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))==(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))OR(t0.c0)))==(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))==(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))OR(t0.c0)))==(t0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM) ORDER BY ((CASE WHEN t0.c0 THEN rt0.c0 END)>>(((rt0.c0)<<(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0 ORDER BY ((CASE WHEN t0.c0 THEN rt0.c0 END)>>(((rt0.c0)<<(t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM) ORDER BY ((CASE WHEN t0.c0 THEN rt0.c0 END)>>(((rt0.c0)<<(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0 ORDER BY ((CASE WHEN t0.c0 THEN rt0.c0 END)>>(((rt0.c0)<<(t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM) ORDER BY ((CASE WHEN t0.c0 THEN rt0.c0 END)>>(((rt0.c0)<<(t0.c0)))) ASC;
SELECT * FROM t0 WHERE ((CASE 0.7322645493088366  WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE 0.7322645493088366  WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((CASE 0.7322645493088366  WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE 0.7322645493088366  WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((CASE 0.7322645493088366  WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ()));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((NULL) NOT BETWEEN ((+ (rt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN 0.9005075842005746 WHEN t0.c0 THEN rt0.c0 ELSE vt0.c0 END))) ORDER BY (((vt0.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN ('') AND (t0.c0)), ((rt0.c2) NOT NULL), ((x'be72')LIKE(rt0.c1)))) AND (((('-368536007') IS TRUE), ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)), CAST(vt0.c0 AS NUMERIC))))  NULLS FIRST, CASE (NOT (rt0.c1))  WHEN ((vt0.c0)<=(rt0.c1)) THEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)) WHEN CASE rt0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c0 THEN vt0.c0 END THEN ((rt0.c2)LIKE(rt0.c2)) WHEN ((vt0.c0)<(t0.c0)) THEN ((((vt0.c0)OR(t0.c0)))AND(rt0.c2)) ELSE UPPER(DISTINCT t0.c0) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN ((+ (rt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN 0.9005075842005746 WHEN t0.c0 THEN rt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((vt0.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN ('') AND (t0.c0)), ((rt0.c2) NOT NULL), ((x'be72')LIKE(rt0.c1)))) AND (((('-368536007') IS TRUE), ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)), CAST(vt0.c0 AS NUMERIC))))  NULLS FIRST, CASE (NOT (rt0.c1))  WHEN ((vt0.c0)<=(rt0.c1)) THEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)) WHEN CASE rt0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c0 THEN vt0.c0 END THEN ((rt0.c2)LIKE(rt0.c2)) WHEN ((vt0.c0)<(t0.c0)) THEN ((((vt0.c0)OR(t0.c0)))AND(rt0.c2)) ELSE UPPER(DISTINCT t0.c0) END DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((NULL) NOT BETWEEN ((+ (rt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN 0.9005075842005746 WHEN t0.c0 THEN rt0.c0 ELSE vt0.c0 END))) ORDER BY (((vt0.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN ('') AND (t0.c0)), ((rt0.c2) NOT NULL), ((x'be72')LIKE(rt0.c1)))) AND (((('-368536007') IS TRUE), ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)), CAST(vt0.c0 AS NUMERIC))))  NULLS FIRST, CASE (NOT (rt0.c1))  WHEN ((vt0.c0)<=(rt0.c1)) THEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)) WHEN CASE rt0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c0 THEN vt0.c0 END THEN ((rt0.c2)LIKE(rt0.c2)) WHEN ((vt0.c0)<(t0.c0)) THEN ((((vt0.c0)OR(t0.c0)))AND(rt0.c2)) ELSE UPPER(DISTINCT t0.c0) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN ((+ (rt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN 0.9005075842005746 WHEN t0.c0 THEN rt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((vt0.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN ('') AND (t0.c0)), ((rt0.c2) NOT NULL), ((x'be72')LIKE(rt0.c1)))) AND (((('-368536007') IS TRUE), ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)), CAST(vt0.c0 AS NUMERIC))))  NULLS FIRST, CASE (NOT (rt0.c1))  WHEN ((vt0.c0)<=(rt0.c1)) THEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)) WHEN CASE rt0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c0 THEN vt0.c0 END THEN ((rt0.c2)LIKE(rt0.c2)) WHEN ((vt0.c0)<(t0.c0)) THEN ((((vt0.c0)OR(t0.c0)))AND(rt0.c2)) ELSE UPPER(DISTINCT t0.c0) END DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((NULL) NOT BETWEEN ((+ (rt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN 0.9005075842005746 WHEN t0.c0 THEN rt0.c0 ELSE vt0.c0 END))) ORDER BY (((vt0.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN ('') AND (t0.c0)), ((rt0.c2) NOT NULL), ((x'be72')LIKE(rt0.c1)))) AND (((('-368536007') IS TRUE), ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)), CAST(vt0.c0 AS NUMERIC))))  NULLS FIRST, CASE (NOT (rt0.c1))  WHEN ((vt0.c0)<=(rt0.c1)) THEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)) WHEN CASE rt0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c0 THEN vt0.c0 END THEN ((rt0.c2)LIKE(rt0.c2)) WHEN ((vt0.c0)<(t0.c0)) THEN ((((vt0.c0)OR(t0.c0)))AND(rt0.c2)) ELSE UPPER(DISTINCT t0.c0) END DESC;
SELECT * FROM v0, t0, vt0, rt0 WHERE (CAST(((t0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) AS INTEGER)) ORDER BY ((rt0.c1) BETWEEN (((t0.c0)<=(0.9175748124698436))) AND ((rt0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, t0, vt0, rt0 ORDER BY ((rt0.c1) BETWEEN (((t0.c0)<=(0.9175748124698436))) AND ((rt0.c1 IN ())))  NULLS FIRST);
SELECT * FROM v0, t0, vt0, rt0 WHERE (CAST(((t0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) AS INTEGER)) ORDER BY ((rt0.c1) BETWEEN (((t0.c0)<=(0.9175748124698436))) AND ((rt0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, t0, vt0, rt0 ORDER BY ((rt0.c1) BETWEEN (((t0.c0)<=(0.9175748124698436))) AND ((rt0.c1 IN ())))  NULLS FIRST);
SELECT * FROM v0, t0, vt0, rt0 WHERE (CAST(((t0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) AS INTEGER)) ORDER BY ((rt0.c1) BETWEEN (((t0.c0)<=(0.9175748124698436))) AND ((rt0.c1 IN ())))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM t0, rt0, vt0, v0 WHERE ((((HEX(DISTINCT rt0.c2)))<>((CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE t0.c0 END)))) ORDER BY ((- (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((((HEX(DISTINCT rt0.c2)))<>((CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE t0.c0 END)))) IS TRUE)  as count FROM t0, rt0, vt0, v0 ORDER BY ((- (vt0.c0)) IN ()));
SELECT * FROM t0, rt0, vt0, v0 WHERE ((((HEX(DISTINCT rt0.c2)))<>((CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE t0.c0 END)))) ORDER BY ((- (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((((HEX(DISTINCT rt0.c2)))<>((CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE t0.c0 END)))) IS TRUE)  as count FROM t0, rt0, vt0, v0 ORDER BY ((- (vt0.c0)) IN ()));
SELECT * FROM t0, rt0, vt0, v0 WHERE ((((HEX(DISTINCT rt0.c2)))<>((CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE t0.c0 END)))) ORDER BY ((- (vt0.c0)) IN ());
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((((t0.c0)&(v0.c0)))AND(((v0.c0) IS TRUE))))AND(((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)&(v0.c0)))AND(((v0.c0) IS TRUE))))AND(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((((t0.c0)&(v0.c0)))AND(((v0.c0) IS TRUE))))AND(((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)&(v0.c0)))AND(((v0.c0) IS TRUE))))AND(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((((t0.c0)&(v0.c0)))AND(((v0.c0) IS TRUE))))AND(((v0.c0) NOT NULL))));
SELECT ALL * FROM v0, t0, vt0, rt0 WHERE (((CAST(0X3fbfa659 AS INTEGER))<=(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((CAST(0x3fbfa659 AS INTEGER))<=(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM v0, t0, vt0, rt0);
SELECT ALL * FROM v0, t0, vt0, rt0 WHERE (((CAST(0X3fbfa659 AS INTEGER))<=(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((CAST(0x3fbfa659 AS INTEGER))<=(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM v0, t0, vt0, rt0);
SELECT ALL * FROM v0, t0, vt0, rt0 WHERE (((CAST(0X3fbfa659 AS INTEGER))<=(CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM rt0, vt0, v0 WHERE (x'') ORDER BY (CASE WHEN rt0.c2 THEN '' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END IN (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (CASE WHEN rt0.c2 THEN '' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END IN (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, v0 WHERE (x'') ORDER BY (CASE WHEN rt0.c2 THEN '' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END IN (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (CASE WHEN rt0.c2 THEN '' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END IN (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, v0 WHERE (x'') ORDER BY (CASE WHEN rt0.c2 THEN '' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END IN (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM t0 NATURAL JOIN v0 WHERE (((((t0.c0 IN ()), LIKELY(t0.c0), CAST(t0.c0 AS INTEGER)))<((NULL, (t0.c0 IN ()), (((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0 IN ()), LIKELY(t0.c0), CAST(t0.c0 AS INTEGER)))<((NULL, (t0.c0 IN ()), (((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))) IS TRUE)  as count FROM t0 NATURAL JOIN v0);
SELECT COUNT(*) FROM t0 NATURAL JOIN v0 WHERE (((((t0.c0 IN ()), LIKELY(t0.c0), CAST(t0.c0 AS INTEGER)))<((NULL, (t0.c0 IN ()), (((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0 IN ()), LIKELY(t0.c0), CAST(t0.c0 AS INTEGER)))<((NULL, (t0.c0 IN ()), (((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))) IS TRUE)  as count FROM t0 NATURAL JOIN v0);
SELECT COUNT(*) FROM t0 NATURAL JOIN v0 WHERE (((((t0.c0 IN ()), LIKELY(t0.c0), CAST(t0.c0 AS INTEGER)))<((NULL, (t0.c0 IN ()), (((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))));
SELECT ALL * FROM rt0 NOT INDEXED, t0, v0 WHERE ((((((rt0.c1)OR('7]Q')))AND(v0.c0)) IN ())) ORDER BY ((('' COLLATE BINARY))>=(((NULL IN (t0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)OR('7]Q')))AND(v0.c0)) IN ())) IS TRUE)  as count FROM rt0, t0, v0 ORDER BY ((('' COLLATE BINARY))>=(((NULL IN (t0.c0)))))  NULLS FIRST);
SELECT ALL * FROM rt0 NOT INDEXED, t0, v0 WHERE ((((((rt0.c1)OR('7]Q')))AND(v0.c0)) IN ())) ORDER BY ((('' COLLATE BINARY))>=(((NULL IN (t0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)OR('7]Q')))AND(v0.c0)) IN ())) IS TRUE)  as count FROM rt0, t0, v0 ORDER BY ((('' COLLATE BINARY))>=(((NULL IN (t0.c0)))))  NULLS FIRST);
SELECT ALL * FROM rt0 NOT INDEXED, t0, v0 WHERE ((((((rt0.c1)OR('7]Q')))AND(v0.c0)) IN ())) ORDER BY ((('' COLLATE BINARY))>=(((NULL IN (t0.c0)))))  NULLS FIRST;
SELECT * FROM vt0, v0 CROSS JOIN rt0 ON ((v0.c0) NOT NULL) WHERE ((((+ (1e500)))OR(((((0.5363467622929037)AND(rt0.c2)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((+ (1e500)))OR(((((0.5363467622929037)AND(rt0.c2)))OR(v0.c0))))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN rt0 ON ((v0.c0) NOT NULL));
SELECT * FROM vt0, v0 CROSS JOIN rt0 ON ((v0.c0) NOT NULL) WHERE ((((+ (1e500)))OR(((((0.5363467622929037)AND(rt0.c2)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((+ (1e500)))OR(((((0.5363467622929037)AND(rt0.c2)))OR(v0.c0))))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN rt0 ON ((v0.c0) NOT NULL));
SELECT * FROM vt0, v0 CROSS JOIN rt0 ON ((v0.c0) NOT NULL) WHERE ((((+ (1e500)))OR(((((0.5363467622929037)AND(rt0.c2)))OR(v0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0, vt0, v0 WHERE (((vt0.c0) NOT NULL)) ORDER BY rt0.c0 DESC, CAST(vt0.c0 AS TEXT) COLLATE RTRIM  NULLS FIRST, CAST(vt0.c0 AS TEXT) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM t0, rt0, vt0, v0 ORDER BY rt0.c0 DESC, CAST(vt0.c0 AS TEXT) COLLATE RTRIM  NULLS FIRST, CAST(vt0.c0 AS TEXT) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, v0 WHERE (((vt0.c0) NOT NULL)) ORDER BY rt0.c0 DESC, CAST(vt0.c0 AS TEXT) COLLATE RTRIM  NULLS FIRST, CAST(vt0.c0 AS TEXT) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM t0, rt0, vt0, v0 ORDER BY rt0.c0 DESC, CAST(vt0.c0 AS TEXT) COLLATE RTRIM  NULLS FIRST, CAST(vt0.c0 AS TEXT) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, v0 WHERE (((vt0.c0) NOT NULL)) ORDER BY rt0.c0 DESC, CAST(vt0.c0 AS TEXT) COLLATE RTRIM  NULLS FIRST, CAST(vt0.c0 AS TEXT) COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY CASE 0.9152596699727403  WHEN UNLIKELY(vt0.c0) THEN 0xffffffff8f3d6513 ELSE TYPEOF(DISTINCT vt0.c0) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY CASE 0.9152596699727403  WHEN UNLIKELY(vt0.c0) THEN 0xffffffff8f3d6513 ELSE TYPEOF(DISTINCT vt0.c0) END ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY CASE 0.9152596699727403  WHEN UNLIKELY(vt0.c0) THEN 0xffffffff8f3d6513 ELSE TYPEOF(DISTINCT vt0.c0) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY CASE 0.9152596699727403  WHEN UNLIKELY(vt0.c0) THEN 0xffffffff8f3d6513 ELSE TYPEOF(DISTINCT vt0.c0) END ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY CASE 0.9152596699727403  WHEN UNLIKELY(vt0.c0) THEN 0xffffffff8f3d6513 ELSE TYPEOF(DISTINCT vt0.c0) END ASC;
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((((v0.c0 COLLATE NOCASE)OR(rt0.c0 COLLATE RTRIM)))OR(((rt0.c0)==(rt0.c1)))))OR((~ (rt0.c0)))))AND(((((v0.c0)AND(rt0.c1)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0 COLLATE NOCASE)OR(rt0.c0 COLLATE RTRIM)))OR(((rt0.c0)=(rt0.c1)))))OR((~ (rt0.c0)))))AND(((((v0.c0)AND(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((((v0.c0 COLLATE NOCASE)OR(rt0.c0 COLLATE RTRIM)))OR(((rt0.c0)==(rt0.c1)))))OR((~ (rt0.c0)))))AND(((((v0.c0)AND(rt0.c1)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0 COLLATE NOCASE)OR(rt0.c0 COLLATE RTRIM)))OR(((rt0.c0)=(rt0.c1)))))OR((~ (rt0.c0)))))AND(((((v0.c0)AND(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((((v0.c0 COLLATE NOCASE)OR(rt0.c0 COLLATE RTRIM)))OR(((rt0.c0)==(rt0.c1)))))OR((~ (rt0.c0)))))AND(((((v0.c0)AND(rt0.c1)))AND(rt0.c0)))));
SELECT ALL * FROM t0, vt0 WHERE (((((((0.266522561812509)OR(t0.c0)))OR(t0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (((vt0.c0)>>(t0.c0))))) ORDER BY ((CAST(vt0.c0 AS NUMERIC))%(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END)), (vt0.c0 IN (((t0.c0)>=(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.266522561812509)OR(t0.c0)))OR(t0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (((vt0.c0)>>(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC))%(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END)), (vt0.c0 IN (((t0.c0)>=(vt0.c0)))) ASC);
SELECT ALL * FROM t0, vt0 WHERE (((((((0.266522561812509)OR(t0.c0)))OR(t0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (((vt0.c0)>>(t0.c0))))) ORDER BY ((CAST(vt0.c0 AS NUMERIC))%(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END)), (vt0.c0 IN (((t0.c0)>=(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.266522561812509)OR(t0.c0)))OR(t0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (((vt0.c0)>>(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC))%(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END)), (vt0.c0 IN (((t0.c0)>=(vt0.c0)))) ASC);
SELECT ALL * FROM t0, vt0 WHERE (((((((0.266522561812509)OR(t0.c0)))OR(t0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (((vt0.c0)>>(t0.c0))))) ORDER BY ((CAST(vt0.c0 AS NUMERIC))%(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END)), (vt0.c0 IN (((t0.c0)>=(vt0.c0)))) ASC;
SELECT * FROM v0, rt0 WHERE ((((v0.c0)) NOT BETWEEN ((CAST(rt0.c1 AS TEXT))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) ORDER BY (- (((rt0.c1)%(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((CAST(rt0.c1 AS TEXT))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (- (((rt0.c1)%(v0.c0)))));
SELECT * FROM v0, rt0 WHERE ((((v0.c0)) NOT BETWEEN ((CAST(rt0.c1 AS TEXT))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) ORDER BY (- (((rt0.c1)%(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((CAST(rt0.c1 AS TEXT))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (- (((rt0.c1)%(v0.c0)))));
SELECT * FROM v0, rt0 WHERE ((((v0.c0)) NOT BETWEEN ((CAST(rt0.c1 AS TEXT))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) ORDER BY (- (((rt0.c1)%(v0.c0))));
SELECT ALL * FROM rt0, v0 WHERE (ROUND(v0.c0 COLLATE NOCASE, v0.c0 COLLATE NOCASE)) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((ROUND(v0.c0 COLLATE NOCASE, v0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c1);
SELECT ALL * FROM rt0, v0 WHERE (ROUND(v0.c0 COLLATE NOCASE, v0.c0 COLLATE NOCASE)) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((ROUND(v0.c0 COLLATE NOCASE, v0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c1);
SELECT ALL * FROM rt0, v0 WHERE (ROUND(v0.c0 COLLATE NOCASE, v0.c0 COLLATE NOCASE)) ORDER BY rt0.c1;
SELECT COUNT(*) FROM v0, vt0, rt0, t0 WHERE (((rt0.c0 COLLATE BINARY)+(CASE rt0.c2  WHEN x'' THEN vt0.c0 ELSE rt0.c0 END))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)+(CASE rt0.c2  WHEN x'' THEN vt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM v0, vt0, rt0, t0 ORDER BY x'');
SELECT COUNT(*) FROM v0, vt0, rt0, t0 WHERE (((rt0.c0 COLLATE BINARY)+(CASE rt0.c2  WHEN x'' THEN vt0.c0 ELSE rt0.c0 END))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)+(CASE rt0.c2  WHEN x'' THEN vt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM v0, vt0, rt0, t0 ORDER BY x'');
SELECT COUNT(*) FROM v0, vt0, rt0, t0 WHERE (((rt0.c0 COLLATE BINARY)+(CASE rt0.c2  WHEN x'' THEN vt0.c0 ELSE rt0.c0 END))) ORDER BY x'';
SELECT ALL COUNT(*) FROM t0, v0, vt0, rt0 WHERE (((((v0.c0)IS(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, v0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0, rt0 WHERE (((((v0.c0)IS(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, v0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0, rt0 WHERE (((((v0.c0)IS(vt0.c0))) IS TRUE));
SELECT * FROM t0, v0 WHERE ((- (CAST(v0.c0 AS INTEGER)))) ORDER BY (((((t0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, v0 ORDER BY (((((t0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) IS FALSE)  NULLS LAST);
SELECT * FROM t0, v0 WHERE ((- (CAST(v0.c0 AS INTEGER)))) ORDER BY (((((t0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, v0 ORDER BY (((((t0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) IS FALSE)  NULLS LAST);
SELECT * FROM t0, v0 WHERE ((- (CAST(v0.c0 AS INTEGER)))) ORDER BY (((((t0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) IS FALSE)  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (CAST((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))) AS REAL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))) AS REAL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))) AS REAL));
SELECT ALL * FROM vt0, t0, v0 WHERE (((CAST(t0.c0 AS INTEGER))<<((((v0.c0))!=((vt0.c0)))))) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS INTEGER))<<((((v0.c0))!=((vt0.c0)))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY v0.c0  NULLS LAST);
SELECT ALL * FROM vt0, t0, v0 WHERE (((CAST(t0.c0 AS INTEGER))<<((((v0.c0))!=((vt0.c0)))))) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS INTEGER))<<((((v0.c0))!=((vt0.c0)))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY v0.c0  NULLS LAST);
SELECT ALL * FROM vt0, t0, v0 WHERE (((CAST(t0.c0 AS INTEGER))<<((((v0.c0))!=((vt0.c0)))))) ORDER BY v0.c0  NULLS LAST;
SELECT ALL * FROM rt0, t0 WHERE (((((rt0.c2) NOTNULL))IS NOT(((((t0.c0)OR(rt0.c0)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOTNULL))IS NOT(((((t0.c0)OR(rt0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((rt0.c2) NOTNULL))IS NOT(((((t0.c0)OR(rt0.c0)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOTNULL))IS NOT(((((t0.c0)OR(rt0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((rt0.c2) NOTNULL))IS NOT(((((t0.c0)OR(rt0.c0)))AND(rt0.c0)))));
SELECT * FROM rt0, t0 CROSS JOIN v0 ON ((NULL)<=(((rt0.c1) ISNULL))) WHERE ((((t0.c0)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((((v0.c0)|(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((((v0.c0)|(v0.c0)))))) IS TRUE)  as count FROM rt0, t0 CROSS JOIN v0 ON ((NULL)<=(((rt0.c1) ISNULL))));
SELECT * FROM rt0, t0 CROSS JOIN v0 ON ((NULL)<=(((rt0.c1) ISNULL))) WHERE ((((t0.c0)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((((v0.c0)|(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((((v0.c0)|(v0.c0)))))) IS TRUE)  as count FROM rt0, t0 CROSS JOIN v0 ON ((NULL)<=(((rt0.c1) ISNULL))));
SELECT * FROM rt0, t0 CROSS JOIN v0 ON ((NULL)<=(((rt0.c1) ISNULL))) WHERE ((((t0.c0)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((((v0.c0)|(v0.c0))))));
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (rtreenode(rt0.c0 COLLATE NOCASE, CASE v0.c0  WHEN vt0.c0 THEN NULL END)) ORDER BY CAST(vt0.c0 AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(rt0.c0 COLLATE NOCASE, CASE v0.c0  WHEN vt0.c0 THEN NULL END)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CAST(vt0.c0 AS TEXT) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (rtreenode(rt0.c0 COLLATE NOCASE, CASE v0.c0  WHEN vt0.c0 THEN NULL END)) ORDER BY CAST(vt0.c0 AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(rt0.c0 COLLATE NOCASE, CASE v0.c0  WHEN vt0.c0 THEN NULL END)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CAST(vt0.c0 AS TEXT) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (rtreenode(rt0.c0 COLLATE NOCASE, CASE v0.c0  WHEN vt0.c0 THEN NULL END)) ORDER BY CAST(vt0.c0 AS TEXT) ASC;
SELECT COUNT(*) FROM v0, t0 WHERE (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE (((NULL)=(UNLIKELY(rt0.c0)))) ORDER BY NULL, ((((rt0.c0)%(rt0.c2)))AND('774282088')), (+ (((((-2072550161)OR(rt0.c0)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((NULL)==(UNLIKELY(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY NULL, ((((rt0.c0)%(rt0.c2)))AND('774282088')), (+ (((((-2072550161)OR(rt0.c0)))AND(rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (((NULL)=(UNLIKELY(rt0.c0)))) ORDER BY NULL, ((((rt0.c0)%(rt0.c2)))AND('774282088')), (+ (((((-2072550161)OR(rt0.c0)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((NULL)==(UNLIKELY(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY NULL, ((((rt0.c0)%(rt0.c2)))AND('774282088')), (+ (((((-2072550161)OR(rt0.c0)))AND(rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (((NULL)=(UNLIKELY(rt0.c0)))) ORDER BY NULL, ((((rt0.c0)%(rt0.c2)))AND('774282088')), (+ (((((-2072550161)OR(rt0.c0)))AND(rt0.c0))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((((+ (v0.c0)))OR(((v0.c0)<>(v0.c0)))))OR((- (v0.c0))))) ORDER BY CAST(NULL AS INTEGER), ((((v0.c0)|(v0.c0)))%(((v0.c0)>(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (v0.c0)))OR(((v0.c0)<>(v0.c0)))))OR((- (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CAST(NULL AS INTEGER), ((((v0.c0)|(v0.c0)))%(((v0.c0)>(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((((+ (v0.c0)))OR(((v0.c0)<>(v0.c0)))))OR((- (v0.c0))))) ORDER BY CAST(NULL AS INTEGER), ((((v0.c0)|(v0.c0)))%(((v0.c0)>(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (v0.c0)))OR(((v0.c0)<>(v0.c0)))))OR((- (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CAST(NULL AS INTEGER), ((((v0.c0)|(v0.c0)))%(((v0.c0)>(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((((+ (v0.c0)))OR(((v0.c0)<>(v0.c0)))))OR((- (v0.c0))))) ORDER BY CAST(NULL AS INTEGER), ((((v0.c0)|(v0.c0)))%(((v0.c0)>(v0.c0))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (COALESCE(vt0.c0, t0.c0)) AND (((((((((t0.c0)AND(vt0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))))) ORDER BY vt0.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (COALESCE(vt0.c0, t0.c0)) AND (((((((((t0.c0)AND(vt0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c0 COLLATE NOCASE);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (COALESCE(vt0.c0, t0.c0)) AND (((((((((t0.c0)AND(vt0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))))) ORDER BY vt0.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (COALESCE(vt0.c0, t0.c0)) AND (((((((((t0.c0)AND(vt0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c0 COLLATE NOCASE);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (COALESCE(vt0.c0, t0.c0)) AND (((((((((t0.c0)AND(vt0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))))) ORDER BY vt0.c0 COLLATE NOCASE;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0) ISNULL)) BETWEEN (((vt0.c0)<>(vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))))) ORDER BY ((((t0.c0) NOT NULL)) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) BETWEEN (((vt0.c0)<>(vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c0) NOT NULL)) IS TRUE));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0) ISNULL)) BETWEEN (((vt0.c0)<>(vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))))) ORDER BY ((((t0.c0) NOT NULL)) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) BETWEEN (((vt0.c0)<>(vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c0) NOT NULL)) IS TRUE));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0) ISNULL)) BETWEEN (((vt0.c0)<>(vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))))) ORDER BY ((((t0.c0) NOT NULL)) IS TRUE);
SELECT ALL COUNT(*) FROM vt0, t0 CROSS JOIN v0 ON SQLITE_VERSION() CROSS JOIN rt0 ON ((NULL) BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0))) AND (t0.c0 COLLATE RTRIM)) WHERE (TRIM(((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt0.c0) NOT NULL))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN v0 ON SQLITE_VERSION() CROSS JOIN rt0 ON ((NULL) BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0))) AND (t0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0, t0 CROSS JOIN v0 ON SQLITE_VERSION() CROSS JOIN rt0 ON ((NULL) BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0))) AND (t0.c0 COLLATE RTRIM)) WHERE (TRIM(((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt0.c0) NOT NULL))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN v0 ON SQLITE_VERSION() CROSS JOIN rt0 ON ((NULL) BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0))) AND (t0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0, t0 CROSS JOIN v0 ON SQLITE_VERSION() CROSS JOIN rt0 ON ((NULL) BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0))) AND (t0.c0 COLLATE RTRIM)) WHERE (TRIM(((vt0.c0) NOT NULL)));
SELECT COUNT(*) FROM v0, vt0, rt0, t0 WHERE ((((~ (rt0.c0)))!=(((rt0.c2) IS FALSE)))) ORDER BY ((((((((((((((((rt0.c0)AND(rt0.c0)))OR(v0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR('921818078')))AND(((((rt0.c0)AND(rt0.c0)))AND(0.18592474062432507)))))OR((((rt0.c0, v0.c0, t0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c1, v0.c0, rt0.c0))))))OR(rt0.c1 COLLATE RTRIM)), CAST(CASE WHEN rt0.c2 THEN rt0.c1 END AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0)))!=(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM v0, vt0, rt0, t0 ORDER BY ((((((((((((((((rt0.c0)AND(rt0.c0)))OR(v0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR('921818078')))AND(((((rt0.c0)AND(rt0.c0)))AND(0.18592474062432507)))))OR((((rt0.c0, v0.c0, t0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c1, v0.c0, rt0.c0))))))OR(rt0.c1 COLLATE RTRIM)), CAST(CASE WHEN rt0.c2 THEN rt0.c1 END AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, rt0, t0 WHERE ((((~ (rt0.c0)))!=(((rt0.c2) IS FALSE)))) ORDER BY ((((((((((((((((rt0.c0)AND(rt0.c0)))OR(v0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR('921818078')))AND(((((rt0.c0)AND(rt0.c0)))AND(0.18592474062432507)))))OR((((rt0.c0, v0.c0, t0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c1, v0.c0, rt0.c0))))))OR(rt0.c1 COLLATE RTRIM)), CAST(CASE WHEN rt0.c2 THEN rt0.c1 END AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0)))!=(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM v0, vt0, rt0, t0 ORDER BY ((((((((((((((((rt0.c0)AND(rt0.c0)))OR(v0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR('921818078')))AND(((((rt0.c0)AND(rt0.c0)))AND(0.18592474062432507)))))OR((((rt0.c0, v0.c0, t0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c1, v0.c0, rt0.c0))))))OR(rt0.c1 COLLATE RTRIM)), CAST(CASE WHEN rt0.c2 THEN rt0.c1 END AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, rt0, t0 WHERE ((((~ (rt0.c0)))!=(((rt0.c2) IS FALSE)))) ORDER BY ((((((((((((((((rt0.c0)AND(rt0.c0)))OR(v0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR('921818078')))AND(((((rt0.c0)AND(rt0.c0)))AND(0.18592474062432507)))))OR((((rt0.c0, v0.c0, t0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c1, v0.c0, rt0.c0))))))OR(rt0.c1 COLLATE RTRIM)), CAST(CASE WHEN rt0.c2 THEN rt0.c1 END AS INTEGER)  NULLS FIRST;
SELECT * FROM t0, v0, rt0 WHERE ((+ (((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM t0, v0, rt0);
SELECT * FROM t0, v0, rt0 WHERE ((+ (((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM t0, v0, rt0);
SELECT * FROM t0, v0, rt0 WHERE ((+ (((rt0.c2) NOT NULL))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)*(rt0.c0)))%(CASE WHEN rt0.c1 THEN vt0.c0 END))) ORDER BY (((rt0.c2, rt0.c2, rt0.c1, vt0.c0, '')) NOT BETWEEN ((((NULL) NOTNULL), (((rt0.c0, rt0.c1, vt0.c0))<((vt0.c0, rt0.c1, rt0.c2))), CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END, rt0.c2, vt0.c0)) AND (((((rt0.c2))!=((rt0.c2))), ((vt0.c0)<(rt0.c0)), (~ (x'')), ((rt0.c1)OR(rt0.c1)), NULL)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)*(rt0.c0)))%(CASE WHEN rt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2, rt0.c2, rt0.c1, vt0.c0, '')) NOT BETWEEN ((((NULL) NOTNULL), (((rt0.c0, rt0.c1, vt0.c0))<((vt0.c0, rt0.c1, rt0.c2))), CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END, rt0.c2, vt0.c0)) AND (((((rt0.c2))!=((rt0.c2))), ((vt0.c0)<(rt0.c0)), (~ (x'')), ((rt0.c1)OR(rt0.c1)), NULL))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)*(rt0.c0)))%(CASE WHEN rt0.c1 THEN vt0.c0 END))) ORDER BY (((rt0.c2, rt0.c2, rt0.c1, vt0.c0, '')) NOT BETWEEN ((((NULL) NOTNULL), (((rt0.c0, rt0.c1, vt0.c0))<((vt0.c0, rt0.c1, rt0.c2))), CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END, rt0.c2, vt0.c0)) AND (((((rt0.c2))!=((rt0.c2))), ((vt0.c0)<(rt0.c0)), (~ (x'')), ((rt0.c1)OR(rt0.c1)), NULL)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)*(rt0.c0)))%(CASE WHEN rt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2, rt0.c2, rt0.c1, vt0.c0, '')) NOT BETWEEN ((((NULL) NOTNULL), (((rt0.c0, rt0.c1, vt0.c0))<((vt0.c0, rt0.c1, rt0.c2))), CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END, rt0.c2, vt0.c0)) AND (((((rt0.c2))!=((rt0.c2))), ((vt0.c0)<(rt0.c0)), (~ (x'')), ((rt0.c1)OR(rt0.c1)), NULL))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)*(rt0.c0)))%(CASE WHEN rt0.c1 THEN vt0.c0 END))) ORDER BY (((rt0.c2, rt0.c2, rt0.c1, vt0.c0, '')) NOT BETWEEN ((((NULL) NOTNULL), (((rt0.c0, rt0.c1, vt0.c0))<((vt0.c0, rt0.c1, rt0.c2))), CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END, rt0.c2, vt0.c0)) AND (((((rt0.c2))!=((rt0.c2))), ((vt0.c0)<(rt0.c0)), (~ (x'')), ((rt0.c1)OR(rt0.c1)), NULL)));
SELECT * FROM v0, t0, rt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM v0, t0, rt0);
SELECT * FROM v0, t0, rt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM v0, t0, rt0);
SELECT * FROM v0, t0, rt0 WHERE (t0.c0);
SELECT * FROM rt0 WHERE (((+ (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((+ (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((+ (rt0.c1)) IN ()));
SELECT ALL * FROM v0 WHERE (CAST((v0.c0 IN ()) AS NUMERIC)) ORDER BY (+ (v0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY (+ (v0.c0 COLLATE NOCASE)));
SELECT ALL * FROM v0 WHERE (CAST((v0.c0 IN ()) AS NUMERIC)) ORDER BY (+ (v0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY (+ (v0.c0 COLLATE NOCASE)));
SELECT ALL * FROM v0 WHERE (CAST((v0.c0 IN ()) AS NUMERIC)) ORDER BY (+ (v0.c0 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((rt0.c2 COLLATE NOCASE)LIKE((rt0.c0 IN (rt0.c2))))) ORDER BY (CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 END IN ()), GLOB('0.021001297286836307', 0.8435787664238679);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE)LIKE((rt0.c0 IN (rt0.c2))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 END IN ()), GLOB('0.021001297286836307', 0.8435787664238679));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((rt0.c2 COLLATE NOCASE)LIKE((rt0.c0 IN (rt0.c2))))) ORDER BY (CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 END IN ()), GLOB('0.021001297286836307', 0.8435787664238679);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE)LIKE((rt0.c0 IN (rt0.c2))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 END IN ()), GLOB('0.021001297286836307', 0.8435787664238679));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((rt0.c2 COLLATE NOCASE)LIKE((rt0.c0 IN (rt0.c2))))) ORDER BY (CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 END IN ()), GLOB('0.021001297286836307', 0.8435787664238679);
SELECT * FROM t0, rt0, vt0 WHERE (x'598a') ORDER BY (((((((((((NULL))<((vt0.c0))))OR((+ (rt0.c0)))))AND(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((rt0.c1)*('&넥霫')))))OR(rt0.c2 COLLATE RTRIM)), ((((((((((rt0.c1) IS TRUE))AND((((t0.c0))<((rt0.c0))))))AND(((rt0.c2)=(rt0.c0)))))AND((- (rt0.c1)))))AND(((rt0.c0) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((x'598a') IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((((((((((NULL))<((vt0.c0))))OR((+ (rt0.c0)))))AND(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((rt0.c1)*('&넥霫')))))OR(rt0.c2 COLLATE RTRIM)), ((((((((((rt0.c1) IS TRUE))AND((((t0.c0))<((rt0.c0))))))AND(((rt0.c2)=(rt0.c0)))))AND((- (rt0.c1)))))AND(((rt0.c0) ISNULL))) DESC);
SELECT * FROM t0, rt0, vt0 WHERE (x'598a') ORDER BY (((((((((((NULL))<((vt0.c0))))OR((+ (rt0.c0)))))AND(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((rt0.c1)*('&넥霫')))))OR(rt0.c2 COLLATE RTRIM)), ((((((((((rt0.c1) IS TRUE))AND((((t0.c0))<((rt0.c0))))))AND(((rt0.c2)=(rt0.c0)))))AND((- (rt0.c1)))))AND(((rt0.c0) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((x'598a') IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((((((((((NULL))<((vt0.c0))))OR((+ (rt0.c0)))))AND(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((rt0.c1)*('&넥霫')))))OR(rt0.c2 COLLATE RTRIM)), ((((((((((rt0.c1) IS TRUE))AND((((t0.c0))<((rt0.c0))))))AND(((rt0.c2)=(rt0.c0)))))AND((- (rt0.c1)))))AND(((rt0.c0) ISNULL))) DESC);
SELECT * FROM t0, rt0, vt0 WHERE (x'598a') ORDER BY (((((((((((NULL))<((vt0.c0))))OR((+ (rt0.c0)))))AND(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((rt0.c1)*('&넥霫')))))OR(rt0.c2 COLLATE RTRIM)), ((((((((((rt0.c1) IS TRUE))AND((((t0.c0))<((rt0.c0))))))AND(((rt0.c2)=(rt0.c0)))))AND((- (rt0.c1)))))AND(((rt0.c0) ISNULL))) DESC;
SELECT * FROM vt0 WHERE (((+ (vt0.c0)) IN ())) ORDER BY 0Xffffffffcd164be9  NULLS FIRST, UNLIKELY((vt0.c0 IN ())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY 0xffffffffcd164be9  NULLS FIRST, UNLIKELY((vt0.c0 IN ())) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((+ (vt0.c0)) IN ())) ORDER BY 0Xffffffffcd164be9  NULLS FIRST, UNLIKELY((vt0.c0 IN ())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY 0xffffffffcd164be9  NULLS FIRST, UNLIKELY((vt0.c0 IN ())) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((+ (vt0.c0)) IN ())) ORDER BY 0Xffffffffcd164be9  NULLS FIRST, UNLIKELY((vt0.c0 IN ())) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c1)AND(UNLIKELY(rt0.c1))))AND(rt0.c0 COLLATE BINARY)) LEFT OUTER JOIN t0 ON ((((rt0.c1)<>(NULL))) IS TRUE) WHERE (((CASE '-1898041336'  WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END) BETWEEN ((~ (rt0.c0))) AND ((((t0.c0))>=((x''))))));
SELECT SUM(count) FROM (SELECT ((((CASE '-1898041336'  WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END) BETWEEN ((~ (rt0.c0))) AND ((((t0.c0))>=((x'')))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c1)AND(UNLIKELY(rt0.c1))))AND(rt0.c0 COLLATE BINARY)) LEFT OUTER JOIN t0 ON ((((rt0.c1)<>(NULL))) IS TRUE));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c1)AND(UNLIKELY(rt0.c1))))AND(rt0.c0 COLLATE BINARY)) LEFT OUTER JOIN t0 ON ((((rt0.c1)<>(NULL))) IS TRUE) WHERE (((CASE '-1898041336'  WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END) BETWEEN ((~ (rt0.c0))) AND ((((t0.c0))>=((x''))))));
SELECT SUM(count) FROM (SELECT ((((CASE '-1898041336'  WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END) BETWEEN ((~ (rt0.c0))) AND ((((t0.c0))>=((x'')))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c1)AND(UNLIKELY(rt0.c1))))AND(rt0.c0 COLLATE BINARY)) LEFT OUTER JOIN t0 ON ((((rt0.c1)<>(NULL))) IS TRUE));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c1)AND(UNLIKELY(rt0.c1))))AND(rt0.c0 COLLATE BINARY)) LEFT OUTER JOIN t0 ON ((((rt0.c1)<>(NULL))) IS TRUE) WHERE (((CASE '-1898041336'  WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END) BETWEEN ((~ (rt0.c0))) AND ((((t0.c0))>=((x''))))));
SELECT ALL * FROM rt0, t0 WHERE ((NOT (((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((rt0.c1)AND(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((NOT (((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((rt0.c1)AND(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((NOT (((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (CASE ((vt0.c0)IS(rt0.c2))  WHEN rt0.c2 THEN (((0X44f86803)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) END) ORDER BY CASE WHEN (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c2))) THEN ((((rt0.c1)AND(t0.c0)))AND(vt0.c0)) WHEN t0.c0 COLLATE RTRIM THEN NULLIF(t0.c0, rt0.c0) WHEN LTRIM(rt0.c2, rt0.c2) THEN ((rt0.c2)<(vt0.c0)) ELSE ((rt0.c1)>>(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)IS(rt0.c2))  WHEN rt0.c2 THEN (((0X44f86803)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CASE WHEN (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c2))) THEN ((((rt0.c1)AND(t0.c0)))AND(vt0.c0)) WHEN t0.c0 COLLATE RTRIM THEN NULLIF(t0.c0, rt0.c0) WHEN LTRIM(rt0.c2, rt0.c2) THEN ((rt0.c2)<(vt0.c0)) ELSE ((rt0.c1)>>(vt0.c0)) END ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (CASE ((vt0.c0)IS(rt0.c2))  WHEN rt0.c2 THEN (((0X44f86803)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) END) ORDER BY CASE WHEN (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c2))) THEN ((((rt0.c1)AND(t0.c0)))AND(vt0.c0)) WHEN t0.c0 COLLATE RTRIM THEN NULLIF(t0.c0, rt0.c0) WHEN LTRIM(rt0.c2, rt0.c2) THEN ((rt0.c2)<(vt0.c0)) ELSE ((rt0.c1)>>(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)IS(rt0.c2))  WHEN rt0.c2 THEN (((0X44f86803)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CASE WHEN (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c2))) THEN ((((rt0.c1)AND(t0.c0)))AND(vt0.c0)) WHEN t0.c0 COLLATE RTRIM THEN NULLIF(t0.c0, rt0.c0) WHEN LTRIM(rt0.c2, rt0.c2) THEN ((rt0.c2)<(vt0.c0)) ELSE ((rt0.c1)>>(vt0.c0)) END ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (CASE ((vt0.c0)IS(rt0.c2))  WHEN rt0.c2 THEN (((0X44f86803)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) END) ORDER BY CASE WHEN (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c2))) THEN ((((rt0.c1)AND(t0.c0)))AND(vt0.c0)) WHEN t0.c0 COLLATE RTRIM THEN NULLIF(t0.c0, rt0.c0) WHEN LTRIM(rt0.c2, rt0.c2) THEN ((rt0.c2)<(vt0.c0)) ELSE ((rt0.c1)>>(vt0.c0)) END ASC;
SELECT * FROM vt0, t0 WHERE ((((((t0.c0))>=((t0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))>=((t0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((t0.c0))>=((t0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))>=((t0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((t0.c0))>=((t0.c0)))) ISNULL));
SELECT * FROM vt0 INNER JOIN rt0 ON CAST(rt0.c1 COLLATE RTRIM AS TEXT) WHERE (((vt0.c0) IS TRUE) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CAST(rt0.c1 COLLATE RTRIM AS TEXT));
SELECT * FROM vt0 INNER JOIN rt0 ON CAST(rt0.c1 COLLATE RTRIM AS TEXT) WHERE (((vt0.c0) IS TRUE) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CAST(rt0.c1 COLLATE RTRIM AS TEXT));
SELECT * FROM vt0 INNER JOIN rt0 ON CAST(rt0.c1 COLLATE RTRIM AS TEXT) WHERE (((vt0.c0) IS TRUE) COLLATE BINARY COLLATE BINARY);
SELECT COUNT(*) FROM vt0 NOT INDEXED, t0, v0 WHERE (((((NULL) IS FALSE)) BETWEEN (json_valid(v0.c0)) AND (t0.c0 COLLATE RTRIM))) ORDER BY (((((('269420533')>=(8.77760831E8)))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))))OR(CAST(v0.c0 AS TEXT))) ASC  NULLS FIRST, (~ (((((((((vt0.c0)AND(v0.c0)))OR(0.47005294459611957)))AND(v0.c0)))AND(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((NULL) IS FALSE)) BETWEEN (json_valid(v0.c0)) AND (t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((((('269420533')>=(8.77760831E8)))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))))OR(CAST(v0.c0 AS TEXT))) ASC  NULLS FIRST, (~ (((((((((vt0.c0)AND(v0.c0)))OR(0.47005294459611957)))AND(v0.c0)))AND(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 NOT INDEXED, t0, v0 WHERE (((((NULL) IS FALSE)) BETWEEN (json_valid(v0.c0)) AND (t0.c0 COLLATE RTRIM))) ORDER BY (((((('269420533')>=(8.77760831E8)))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))))OR(CAST(v0.c0 AS TEXT))) ASC  NULLS FIRST, (~ (((((((((vt0.c0)AND(v0.c0)))OR(0.47005294459611957)))AND(v0.c0)))AND(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((NULL) IS FALSE)) BETWEEN (json_valid(v0.c0)) AND (t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((((('269420533')>=(8.77760831E8)))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))))OR(CAST(v0.c0 AS TEXT))) ASC  NULLS FIRST, (~ (((((((((vt0.c0)AND(v0.c0)))OR(0.47005294459611957)))AND(v0.c0)))AND(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 NOT INDEXED, t0, v0 WHERE (((((NULL) IS FALSE)) BETWEEN (json_valid(v0.c0)) AND (t0.c0 COLLATE RTRIM))) ORDER BY (((((('269420533')>=(8.77760831E8)))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))))OR(CAST(v0.c0 AS TEXT))) ASC  NULLS FIRST, (~ (((((((((vt0.c0)AND(v0.c0)))OR(0.47005294459611957)))AND(v0.c0)))AND(vt0.c0)))) DESC;
SELECT ALL * FROM t0 WHERE ((((((t0.c0))>=((t0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))>=((t0.c0)))) NOT NULL)) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT ALL * FROM t0 WHERE ((((((t0.c0))>=((t0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))>=((t0.c0)))) NOT NULL)) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT ALL * FROM t0 WHERE ((((((t0.c0))>=((t0.c0)))) NOT NULL));
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON (~ (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) LEFT OUTER JOIN vt0 ON (vt0.c0 IN ()) WHERE (((CAST('l>' AS REAL))OR(((v0.c0)AND(vt0.c0))))) ORDER BY CASE WHEN 0.8435787664238679 THEN ((rt0.c1)AND(rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ((((CAST('l>' AS REAL))OR(((v0.c0)AND(vt0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (~ (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) LEFT OUTER JOIN vt0 ON (vt0.c0 IN ()) ORDER BY CASE WHEN 0.8435787664238679 THEN ((rt0.c1)AND(rt0.c2)) END ASC);
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON (~ (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) LEFT OUTER JOIN vt0 ON (vt0.c0 IN ()) WHERE (((CAST('l>' AS REAL))OR(((v0.c0)AND(vt0.c0))))) ORDER BY CASE WHEN 0.8435787664238679 THEN ((rt0.c1)AND(rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ((((CAST('l>' AS REAL))OR(((v0.c0)AND(vt0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (~ (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) LEFT OUTER JOIN vt0 ON (vt0.c0 IN ()) ORDER BY CASE WHEN 0.8435787664238679 THEN ((rt0.c1)AND(rt0.c2)) END ASC);
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON (~ (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) LEFT OUTER JOIN vt0 ON (vt0.c0 IN ()) WHERE (((CAST('l>' AS REAL))OR(((v0.c0)AND(vt0.c0))))) ORDER BY CASE WHEN 0.8435787664238679 THEN ((rt0.c1)AND(rt0.c2)) END ASC;
SELECT * FROM rt0, v0, vt0, t0 WHERE (IFNULL(((rt0.c0) IS FALSE), ((vt0.c0)>>(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((IFNULL(((rt0.c0) IS FALSE), ((vt0.c0)>>(rt0.c2)))) IS TRUE)  as count FROM rt0, v0, vt0, t0);
SELECT * FROM rt0, v0, vt0, t0 WHERE (IFNULL(((rt0.c0) IS FALSE), ((vt0.c0)>>(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((IFNULL(((rt0.c0) IS FALSE), ((vt0.c0)>>(rt0.c2)))) IS TRUE)  as count FROM rt0, v0, vt0, t0);
SELECT * FROM rt0, v0, vt0, t0 WHERE (IFNULL(((rt0.c0) IS FALSE), ((vt0.c0)>>(rt0.c2))));
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (((((vt0.c0)=(v0.c0)))>>(((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)=(v0.c0)))>>(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (((((vt0.c0)=(v0.c0)))>>(((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)=(v0.c0)))>>(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (((((vt0.c0)=(v0.c0)))>>(((v0.c0) NOTNULL))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2)<<(rt0.c0))) BETWEEN (rt0.c1) AND (GLOB(vt0.c0, rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<<(rt0.c0))) BETWEEN (rt0.c1) AND (GLOB(vt0.c0, rt0.c2)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2)<<(rt0.c0))) BETWEEN (rt0.c1) AND (GLOB(vt0.c0, rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<<(rt0.c0))) BETWEEN (rt0.c1) AND (GLOB(vt0.c0, rt0.c2)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2)<<(rt0.c0))) BETWEEN (rt0.c1) AND (GLOB(vt0.c0, rt0.c2))));
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN ((rt0.c0)>=(rt0.c1)) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (t0.c0)) WHEN LIKELY(rt0.c1) THEN (((rt0.c2))<>((rt0.c0))) WHEN CASE t0.c0  WHEN t0.c0 THEN rt0.c2 END THEN ((rt0.c2)-(rt0.c2)) ELSE (rt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)>=(rt0.c1)) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (t0.c0)) WHEN LIKELY(rt0.c1) THEN (((rt0.c2))<>((rt0.c0))) WHEN CASE t0.c0  WHEN t0.c0 THEN rt0.c2 END THEN ((rt0.c2)-(rt0.c2)) ELSE (rt0.c2 IN ()) END) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN ((rt0.c0)>=(rt0.c1)) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (t0.c0)) WHEN LIKELY(rt0.c1) THEN (((rt0.c2))<>((rt0.c0))) WHEN CASE t0.c0  WHEN t0.c0 THEN rt0.c2 END THEN ((rt0.c2)-(rt0.c2)) ELSE (rt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)>=(rt0.c1)) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (t0.c0)) WHEN LIKELY(rt0.c1) THEN (((rt0.c2))<>((rt0.c0))) WHEN CASE t0.c0  WHEN t0.c0 THEN rt0.c2 END THEN ((rt0.c2)-(rt0.c2)) ELSE (rt0.c2 IN ()) END) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN ((rt0.c0)>=(rt0.c1)) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (t0.c0)) WHEN LIKELY(rt0.c1) THEN (((rt0.c2))<>((rt0.c0))) WHEN CASE t0.c0  WHEN t0.c0 THEN rt0.c2 END THEN ((rt0.c2)-(rt0.c2)) ELSE (rt0.c2 IN ()) END);
SELECT ALL COUNT(*) FROM rt0, t0, v0 WHERE ((((rt0.c0, t0.c0, rt0.c2)) BETWEEN ((t0.c0 COLLATE NOCASE, 'Cx\nvaUf6', CAST(rt0.c0 AS REAL))) AND ((((0x1f0d2fbf) BETWEEN (rt0.c0) AND (rt0.c0)), ((v0.c0) ISNULL), ((0xffffffff8f3d6513) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, t0.c0, rt0.c2)) BETWEEN ((t0.c0 COLLATE NOCASE, 'Cx\nvaUf6', CAST(rt0.c0 AS REAL))) AND ((((0x1f0d2fbf) BETWEEN (rt0.c0) AND (rt0.c0)), ((v0.c0) ISNULL), ((0xffffffff8f3d6513) NOTNULL))))) IS TRUE)  as count FROM rt0, t0, v0);
SELECT ALL COUNT(*) FROM rt0, t0, v0 WHERE ((((rt0.c0, t0.c0, rt0.c2)) BETWEEN ((t0.c0 COLLATE NOCASE, 'Cx\nvaUf6', CAST(rt0.c0 AS REAL))) AND ((((0x1f0d2fbf) BETWEEN (rt0.c0) AND (rt0.c0)), ((v0.c0) ISNULL), ((0xffffffff8f3d6513) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, t0.c0, rt0.c2)) BETWEEN ((t0.c0 COLLATE NOCASE, 'Cx\nvaUf6', CAST(rt0.c0 AS REAL))) AND ((((0x1f0d2fbf) BETWEEN (rt0.c0) AND (rt0.c0)), ((v0.c0) ISNULL), ((0xffffffff8f3d6513) NOTNULL))))) IS TRUE)  as count FROM rt0, t0, v0);
SELECT ALL COUNT(*) FROM rt0, t0, v0 WHERE ((((rt0.c0, t0.c0, rt0.c2)) BETWEEN ((t0.c0 COLLATE NOCASE, 'Cx\nvaUf6', CAST(rt0.c0 AS REAL))) AND ((((0x1f0d2fbf) BETWEEN (rt0.c0) AND (rt0.c0)), ((v0.c0) ISNULL), ((0xffffffff8f3d6513) NOTNULL)))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)/(rt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)/(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)/(rt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)/(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)/(rt0.c0)) AS BLOB));
SELECT ALL * FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((STRFTIME(0.8442288044723958, v0.c0, vt0.c0, v0.c0, v0.c0)) IS TRUE) WHERE (((v0.c0 COLLATE RTRIM)IS NOT(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM)IS NOT(t0.c0))) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((STRFTIME(0.8442288044723958, v0.c0, vt0.c0, v0.c0, v0.c0)) IS TRUE));
SELECT ALL * FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((STRFTIME(0.8442288044723958, v0.c0, vt0.c0, v0.c0, v0.c0)) IS TRUE) WHERE (((v0.c0 COLLATE RTRIM)IS NOT(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM)IS NOT(t0.c0))) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((STRFTIME(0.8442288044723958, v0.c0, vt0.c0, v0.c0, v0.c0)) IS TRUE));
SELECT ALL * FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((STRFTIME(0.8442288044723958, v0.c0, vt0.c0, v0.c0, v0.c0)) IS TRUE) WHERE (((v0.c0 COLLATE RTRIM)IS NOT(t0.c0)));
SELECT * FROM vt0, v0, t0, rt0 WHERE ((NOT (((vt0.c0)>=(vt0.c0))))) ORDER BY (((rt0.c2, rt0.c2, v0.c0, rt0.c2, t0.c0)) BETWEEN ((v0.c0 COLLATE NOCASE, SQLITE_COMPILEOPTION_USED(x''), ((((v0.c0)AND(t0.c0)))OR(rt0.c2)), CASE WHEN x'af40' THEN rt0.c1 ELSE 0.9312742211711119 END, ((rt0.c1) IS TRUE))) AND ((v0.c0 COLLATE RTRIM, ((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)), ((t0.c0)<<(rt0.c2)), v0.c0 COLLATE BINARY, (~ (t0.c0))))), ((0Xffffffffacf2defd) BETWEEN (CASE rt0.c2  WHEN vt0.c0 THEN v0.c0 ELSE rt0.c0 END) AND (CAST(rt0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0, v0, t0, rt0 ORDER BY (((rt0.c2, rt0.c2, v0.c0, rt0.c2, t0.c0)) BETWEEN ((v0.c0 COLLATE NOCASE, SQLITE_COMPILEOPTION_USED(x''), ((((v0.c0)AND(t0.c0)))OR(rt0.c2)), CASE WHEN x'af40' THEN rt0.c1 ELSE 0.9312742211711119 END, ((rt0.c1) IS TRUE))) AND ((v0.c0 COLLATE RTRIM, ((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)), ((t0.c0)<<(rt0.c2)), v0.c0 COLLATE BINARY, (~ (t0.c0))))), ((0xffffffffacf2defd) BETWEEN (CASE rt0.c2  WHEN vt0.c0 THEN v0.c0 ELSE rt0.c0 END) AND (CAST(rt0.c0 AS INTEGER))) DESC  NULLS LAST);
SELECT * FROM vt0, v0, t0, rt0 WHERE ((NOT (((vt0.c0)>=(vt0.c0))))) ORDER BY (((rt0.c2, rt0.c2, v0.c0, rt0.c2, t0.c0)) BETWEEN ((v0.c0 COLLATE NOCASE, SQLITE_COMPILEOPTION_USED(x''), ((((v0.c0)AND(t0.c0)))OR(rt0.c2)), CASE WHEN x'af40' THEN rt0.c1 ELSE 0.9312742211711119 END, ((rt0.c1) IS TRUE))) AND ((v0.c0 COLLATE RTRIM, ((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)), ((t0.c0)<<(rt0.c2)), v0.c0 COLLATE BINARY, (~ (t0.c0))))), ((0Xffffffffacf2defd) BETWEEN (CASE rt0.c2  WHEN vt0.c0 THEN v0.c0 ELSE rt0.c0 END) AND (CAST(rt0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0, v0, t0, rt0 ORDER BY (((rt0.c2, rt0.c2, v0.c0, rt0.c2, t0.c0)) BETWEEN ((v0.c0 COLLATE NOCASE, SQLITE_COMPILEOPTION_USED(x''), ((((v0.c0)AND(t0.c0)))OR(rt0.c2)), CASE WHEN x'af40' THEN rt0.c1 ELSE 0.9312742211711119 END, ((rt0.c1) IS TRUE))) AND ((v0.c0 COLLATE RTRIM, ((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)), ((t0.c0)<<(rt0.c2)), v0.c0 COLLATE BINARY, (~ (t0.c0))))), ((0xffffffffacf2defd) BETWEEN (CASE rt0.c2  WHEN vt0.c0 THEN v0.c0 ELSE rt0.c0 END) AND (CAST(rt0.c0 AS INTEGER))) DESC  NULLS LAST);
SELECT * FROM vt0, v0, t0, rt0 WHERE ((NOT (((vt0.c0)>=(vt0.c0))))) ORDER BY (((rt0.c2, rt0.c2, v0.c0, rt0.c2, t0.c0)) BETWEEN ((v0.c0 COLLATE NOCASE, SQLITE_COMPILEOPTION_USED(x''), ((((v0.c0)AND(t0.c0)))OR(rt0.c2)), CASE WHEN x'af40' THEN rt0.c1 ELSE 0.9312742211711119 END, ((rt0.c1) IS TRUE))) AND ((v0.c0 COLLATE RTRIM, ((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)), ((t0.c0)<<(rt0.c2)), v0.c0 COLLATE BINARY, (~ (t0.c0))))), ((0Xffffffffacf2defd) BETWEEN (CASE rt0.c2  WHEN vt0.c0 THEN v0.c0 ELSE rt0.c0 END) AND (CAST(rt0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON CASE ((t0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))  WHEN (((rt0.c0)) BETWEEN ((NULL)) AND ((rt0.c0))) THEN (- (rt0.c1)) END CROSS JOIN v0 ON ABS(DISTINCT t0.c0) COLLATE BINARY LEFT OUTER JOIN vt0 ON (((vt0.c0 COLLATE BINARY))<=((SQLITE_VERSION()))) WHERE ((((vt0.c0 IN (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON CASE ((t0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))  WHEN (((rt0.c0)) BETWEEN ((NULL)) AND ((rt0.c0))) THEN (- (rt0.c1)) END CROSS JOIN v0 ON ABS(DISTINCT t0.c0) COLLATE BINARY LEFT OUTER JOIN vt0 ON (((vt0.c0 COLLATE BINARY))<=((SQLITE_VERSION()))));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON CASE ((t0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))  WHEN (((rt0.c0)) BETWEEN ((NULL)) AND ((rt0.c0))) THEN (- (rt0.c1)) END CROSS JOIN v0 ON ABS(DISTINCT t0.c0) COLLATE BINARY LEFT OUTER JOIN vt0 ON (((vt0.c0 COLLATE BINARY))<=((SQLITE_VERSION()))) WHERE ((((vt0.c0 IN (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON CASE ((t0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))  WHEN (((rt0.c0)) BETWEEN ((NULL)) AND ((rt0.c0))) THEN (- (rt0.c1)) END CROSS JOIN v0 ON ABS(DISTINCT t0.c0) COLLATE BINARY LEFT OUTER JOIN vt0 ON (((vt0.c0 COLLATE BINARY))<=((SQLITE_VERSION()))));
SELECT * FROM vt0, rt0, v0 WHERE ((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE ((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE ((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))) NOTNULL));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c0) IS TRUE) IN (CHANGES())) WHERE (CAST('' AS NUMERIC)) ORDER BY ((rt0.c2) ISNULL) DESC  NULLS FIRST, ((((((v0.c0)OR(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (CAST(rt0.c2 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('' AS NUMERIC)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c0) IS TRUE) IN (CHANGES())) ORDER BY ((rt0.c2) ISNULL) DESC  NULLS FIRST, ((((((v0.c0)OR(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (CAST(rt0.c2 AS BLOB)))  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c0) IS TRUE) IN (CHANGES())) WHERE (CAST('' AS NUMERIC)) ORDER BY ((rt0.c2) ISNULL) DESC  NULLS FIRST, ((((((v0.c0)OR(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (CAST(rt0.c2 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('' AS NUMERIC)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c0) IS TRUE) IN (CHANGES())) ORDER BY ((rt0.c2) ISNULL) DESC  NULLS FIRST, ((((((v0.c0)OR(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (CAST(rt0.c2 AS BLOB)))  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c0) IS TRUE) IN (CHANGES())) WHERE (CAST('' AS NUMERIC)) ORDER BY ((rt0.c2) ISNULL) DESC  NULLS FIRST, ((((((v0.c0)OR(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (CAST(rt0.c2 AS BLOB)))  NULLS LAST;
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON (((((vt0.c0))=((v0.c0)))) NOT BETWEEN (NULL) AND (NULL COLLATE NOCASE)) WHERE ((CAST(vt0.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (((((vt0.c0))==((v0.c0)))) NOT BETWEEN (NULL) AND (NULL COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON (((((vt0.c0))=((v0.c0)))) NOT BETWEEN (NULL) AND (NULL COLLATE NOCASE)) WHERE ((CAST(vt0.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (((((vt0.c0))==((v0.c0)))) NOT BETWEEN (NULL) AND (NULL COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON (((((vt0.c0))=((v0.c0)))) NOT BETWEEN (NULL) AND (NULL COLLATE NOCASE)) WHERE ((CAST(vt0.c0 AS NUMERIC) IN ()));
SELECT ALL * FROM t0 WHERE (((((CAST(t0.c0 AS REAL))OR((NOT (t0.c0)))))OR(CASE WHEN t0.c0 THEN 0.18592474062432507 END)));
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c0 AS REAL))OR((NOT (t0.c0)))))OR(CASE WHEN t0.c0 THEN 0.18592474062432507 END))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((CAST(t0.c0 AS REAL))OR((NOT (t0.c0)))))OR(CASE WHEN t0.c0 THEN 0.18592474062432507 END)));
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c0 AS REAL))OR((NOT (t0.c0)))))OR(CASE WHEN t0.c0 THEN 0.18592474062432507 END))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((CAST(t0.c0 AS REAL))OR((NOT (t0.c0)))))OR(CASE WHEN t0.c0 THEN 0.18592474062432507 END)));
SELECT COUNT(*) FROM t0, v0 NATURAL JOIN rt0 WHERE (CAST(TYPEOF(DISTINCT v0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(DISTINCT v0.c0) AS BLOB)) IS TRUE)  as count FROM t0, v0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM t0, v0 NATURAL JOIN rt0 WHERE (CAST(TYPEOF(DISTINCT v0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(DISTINCT v0.c0) AS BLOB)) IS TRUE)  as count FROM t0, v0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM t0, v0 NATURAL JOIN rt0 WHERE (CAST(TYPEOF(DISTINCT v0.c0) AS BLOB));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, rt0, vt0 NOT INDEXED, t0 WHERE (((((vt0.c0)=(rt0.c2))) NOT NULL)) ORDER BY CASE ((rt0.c2)OR(x''))  WHEN ((t0.c0)>=(rt0.c0)) THEN CAST(t0.c0 AS BLOB) END  NULLS FIRST, ((((vt0.c0) ISNULL)) IS TRUE), CAST(TYPEOF(vt0.c0) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)==(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM v0, rt0, vt0, t0 ORDER BY CASE ((rt0.c2)OR(x''))  WHEN ((t0.c0)>=(rt0.c0)) THEN CAST(t0.c0 AS BLOB) END  NULLS FIRST, ((((vt0.c0) ISNULL)) IS TRUE), CAST(TYPEOF(vt0.c0) AS TEXT) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, rt0, vt0 NOT INDEXED, t0 WHERE (((((vt0.c0)=(rt0.c2))) NOT NULL)) ORDER BY CASE ((rt0.c2)OR(x''))  WHEN ((t0.c0)>=(rt0.c0)) THEN CAST(t0.c0 AS BLOB) END  NULLS FIRST, ((((vt0.c0) ISNULL)) IS TRUE), CAST(TYPEOF(vt0.c0) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)==(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM v0, rt0, vt0, t0 ORDER BY CASE ((rt0.c2)OR(x''))  WHEN ((t0.c0)>=(rt0.c0)) THEN CAST(t0.c0 AS BLOB) END  NULLS FIRST, ((((vt0.c0) ISNULL)) IS TRUE), CAST(TYPEOF(vt0.c0) AS TEXT) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, rt0, vt0 NOT INDEXED, t0 WHERE (((((vt0.c0)=(rt0.c2))) NOT NULL)) ORDER BY CASE ((rt0.c2)OR(x''))  WHEN ((t0.c0)>=(rt0.c0)) THEN CAST(t0.c0 AS BLOB) END  NULLS FIRST, ((((vt0.c0) ISNULL)) IS TRUE), CAST(TYPEOF(vt0.c0) AS TEXT) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0, v0, rt0 WHERE (((((((((((((((((rt0.c2)OR(rt0.c0)))AND(vt0.c0)))AND(x'')))OR(t0.c0)))OR((~ (rt0.c1)))))OR((((t0.c0, vt0.c0, vt0.c0))<((t0.c0, rt0.c2, rt0.c0))))))AND(CASE x'b713'  WHEN v0.c0 THEN rt0.c0 ELSE t0.c0 END)))AND(((v0.c0) BETWEEN ('td') AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt0.c2)OR(rt0.c0)))AND(vt0.c0)))AND(x'')))OR(t0.c0)))OR((~ (rt0.c1)))))OR((((t0.c0, vt0.c0, vt0.c0))<((t0.c0, rt0.c2, rt0.c0))))))AND(CASE x'b713'  WHEN v0.c0 THEN rt0.c0 ELSE t0.c0 END)))AND(((v0.c0) BETWEEN ('td') AND (t0.c0))))) IS TRUE)  as count FROM t0, vt0, v0, rt0);
SELECT COUNT(*) FROM t0, vt0, v0, rt0 WHERE (((((((((((((((((rt0.c2)OR(rt0.c0)))AND(vt0.c0)))AND(x'')))OR(t0.c0)))OR((~ (rt0.c1)))))OR((((t0.c0, vt0.c0, vt0.c0))<((t0.c0, rt0.c2, rt0.c0))))))AND(CASE x'b713'  WHEN v0.c0 THEN rt0.c0 ELSE t0.c0 END)))AND(((v0.c0) BETWEEN ('td') AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt0.c2)OR(rt0.c0)))AND(vt0.c0)))AND(x'')))OR(t0.c0)))OR((~ (rt0.c1)))))OR((((t0.c0, vt0.c0, vt0.c0))<((t0.c0, rt0.c2, rt0.c0))))))AND(CASE x'b713'  WHEN v0.c0 THEN rt0.c0 ELSE t0.c0 END)))AND(((v0.c0) BETWEEN ('td') AND (t0.c0))))) IS TRUE)  as count FROM t0, vt0, v0, rt0);
SELECT COUNT(*) FROM t0, vt0, v0, rt0 WHERE (((((((((((((((((rt0.c2)OR(rt0.c0)))AND(vt0.c0)))AND(x'')))OR(t0.c0)))OR((~ (rt0.c1)))))OR((((t0.c0, vt0.c0, vt0.c0))<((t0.c0, rt0.c2, rt0.c0))))))AND(CASE x'b713'  WHEN v0.c0 THEN rt0.c0 ELSE t0.c0 END)))AND(((v0.c0) BETWEEN ('td') AND (t0.c0)))));
SELECT * FROM rt0 WHERE ((((('0.9175748124698436')|(rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((('0.9175748124698436')|(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((('0.9175748124698436')|(rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((('0.9175748124698436')|(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((('0.9175748124698436')|(rt0.c0))) IS TRUE));
SELECT * FROM vt0, t0, v0, rt0 WHERE (CAST('ll賐B' AS REAL)) ORDER BY (~ (((rt0.c0)=(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST('ll賐B' AS REAL)) IS TRUE)  as count FROM vt0, t0, v0, rt0 ORDER BY (~ (((rt0.c0)==(vt0.c0)))) DESC);
SELECT * FROM vt0, t0, v0, rt0 WHERE (CAST('ll賐B' AS REAL)) ORDER BY (~ (((rt0.c0)=(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST('ll賐B' AS REAL)) IS TRUE)  as count FROM vt0, t0, v0, rt0 ORDER BY (~ (((rt0.c0)==(vt0.c0)))) DESC);
SELECT * FROM vt0, t0, v0, rt0 WHERE (CAST('ll賐B' AS REAL)) ORDER BY (~ (((rt0.c0)=(vt0.c0)))) DESC;
SELECT ALL * FROM t0, v0, rt0 WHERE (((rt0.c2) NOT BETWEEN (((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1))) AND ('543278757'))) ORDER BY (((rt0.c2)) BETWEEN (((((rt0.c0))!=((rt0.c2))))) AND ((((t0.c0)|(rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN (((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1))) AND ('543278757'))) IS TRUE)  as count FROM t0, v0, rt0 ORDER BY (((rt0.c2)) BETWEEN (((((rt0.c0))<>((rt0.c2))))) AND ((((t0.c0)|(rt0.c0))))) ASC);
SELECT ALL * FROM t0, v0, rt0 WHERE (((rt0.c2) NOT BETWEEN (((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1))) AND ('543278757'))) ORDER BY (((rt0.c2)) BETWEEN (((((rt0.c0))!=((rt0.c2))))) AND ((((t0.c0)|(rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN (((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1))) AND ('543278757'))) IS TRUE)  as count FROM t0, v0, rt0 ORDER BY (((rt0.c2)) BETWEEN (((((rt0.c0))<>((rt0.c2))))) AND ((((t0.c0)|(rt0.c0))))) ASC);
SELECT ALL * FROM t0, v0, rt0 WHERE (((rt0.c2) NOT BETWEEN (((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1))) AND ('543278757'))) ORDER BY (((rt0.c2)) BETWEEN (((((rt0.c0))!=((rt0.c2))))) AND ((((t0.c0)|(rt0.c0))))) ASC;
SELECT * FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC))GLOB(((t0.c0) ISNULL)))) ORDER BY ((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM  NULLS FIRST, (NULL IN (((t0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS NUMERIC))GLOB(((t0.c0) ISNULL)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM  NULLS FIRST, (NULL IN (((t0.c0) NOT NULL))));
SELECT * FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC))GLOB(((t0.c0) ISNULL)))) ORDER BY ((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM  NULLS FIRST, (NULL IN (((t0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS NUMERIC))GLOB(((t0.c0) ISNULL)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM  NULLS FIRST, (NULL IN (((t0.c0) NOT NULL))));
SELECT * FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC))GLOB(((t0.c0) ISNULL)))) ORDER BY ((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM  NULLS FIRST, (NULL IN (((t0.c0) NOT NULL)));
SELECT ALL COUNT(*) FROM t0, rt0, v0 WHERE (((((t0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE RTRIM) ORDER BY ((rt0.c0 COLLATE NOCASE) BETWEEN (((rt0.c2) NOT NULL)) AND (t0.c0 COLLATE BINARY))  NULLS FIRST, '0.0' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, v0 ORDER BY ((rt0.c0 COLLATE NOCASE) BETWEEN (((rt0.c2) NOT NULL)) AND (t0.c0 COLLATE BINARY))  NULLS FIRST, '0.0' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, v0 WHERE (((((t0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE RTRIM) ORDER BY ((rt0.c0 COLLATE NOCASE) BETWEEN (((rt0.c2) NOT NULL)) AND (t0.c0 COLLATE BINARY))  NULLS FIRST, '0.0' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, v0 ORDER BY ((rt0.c0 COLLATE NOCASE) BETWEEN (((rt0.c2) NOT NULL)) AND (t0.c0 COLLATE BINARY))  NULLS FIRST, '0.0' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, v0 WHERE (((((t0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE RTRIM) ORDER BY ((rt0.c0 COLLATE NOCASE) BETWEEN (((rt0.c2) NOT NULL)) AND (t0.c0 COLLATE BINARY))  NULLS FIRST, '0.0' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 LEFT OUTER JOIN v0 ON CASE WHEN x'' THEN (- (v0.c0)) ELSE (((x'5053'))!=((t0.c0))) END WHERE (((((~ (vt0.c0))))<=(((~ (v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((~ (vt0.c0))))<=(((~ (v0.c0)))))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN v0 ON CASE WHEN x'' THEN (- (v0.c0)) ELSE (((x'5053'))!=((t0.c0))) END);
SELECT ALL COUNT(*) FROM t0, vt0 LEFT OUTER JOIN v0 ON CASE WHEN x'' THEN (- (v0.c0)) ELSE (((x'5053'))!=((t0.c0))) END WHERE (((((~ (vt0.c0))))<=(((~ (v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((~ (vt0.c0))))<=(((~ (v0.c0)))))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN v0 ON CASE WHEN x'' THEN (- (v0.c0)) ELSE (((x'5053'))!=((t0.c0))) END);
SELECT ALL COUNT(*) FROM t0, vt0 LEFT OUTER JOIN v0 ON CASE WHEN x'' THEN (- (v0.c0)) ELSE (((x'5053'))!=((t0.c0))) END WHERE (((((~ (vt0.c0))))<=(((~ (v0.c0))))));
SELECT ALL * FROM rt0, t0, vt0, v0 WHERE (TYPEOF(NULLIF(t0.c0, t0.c0))) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(NULLIF(t0.c0, t0.c0))) IS TRUE)  as count FROM rt0, t0, vt0, v0 ORDER BY rt0.c0 ASC);
SELECT ALL * FROM rt0, t0, vt0, v0 WHERE (TYPEOF(NULLIF(t0.c0, t0.c0))) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(NULLIF(t0.c0, t0.c0))) IS TRUE)  as count FROM rt0, t0, vt0, v0 ORDER BY rt0.c0 ASC);
SELECT ALL * FROM rt0, t0, vt0, v0 WHERE (TYPEOF(NULLIF(t0.c0, t0.c0))) ORDER BY rt0.c0 ASC;
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c1)!=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c1)<>(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c1)!=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c1)<>(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c1)!=(rt0.c1)))));
SELECT COUNT(*) FROM vt0, v0 CROSS JOIN rt0 ON (NOT (CAST(rt0.c0 AS REAL))) WHERE (CASE TYPEOF(DISTINCT rt0.c1)  WHEN rt0.c2 COLLATE BINARY THEN (rt0.c1 IN ()) WHEN (rt0.c0 IN (x'', rt0.c2)) THEN ((v0.c0)&(vt0.c0)) WHEN ((-1558409143) BETWEEN (0.45466983173339937) AND (vt0.c0)) THEN ((rt0.c0)>>(v0.c0)) ELSE ((vt0.c0) BETWEEN (x'cab7') AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE TYPEOF(DISTINCT rt0.c1)  WHEN rt0.c2 COLLATE BINARY THEN (rt0.c1 IN ()) WHEN (rt0.c0 IN (x'', rt0.c2)) THEN ((v0.c0)&(vt0.c0)) WHEN ((-1558409143) BETWEEN (0.45466983173339937) AND (vt0.c0)) THEN ((rt0.c0)>>(v0.c0)) ELSE ((vt0.c0) BETWEEN (x'cab7') AND (rt0.c2)) END) IS TRUE)  as count FROM vt0, v0 CROSS JOIN rt0 ON (NOT (CAST(rt0.c0 AS REAL))));
SELECT COUNT(*) FROM vt0, v0 CROSS JOIN rt0 ON (NOT (CAST(rt0.c0 AS REAL))) WHERE (CASE TYPEOF(DISTINCT rt0.c1)  WHEN rt0.c2 COLLATE BINARY THEN (rt0.c1 IN ()) WHEN (rt0.c0 IN (x'', rt0.c2)) THEN ((v0.c0)&(vt0.c0)) WHEN ((-1558409143) BETWEEN (0.45466983173339937) AND (vt0.c0)) THEN ((rt0.c0)>>(v0.c0)) ELSE ((vt0.c0) BETWEEN (x'cab7') AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE TYPEOF(DISTINCT rt0.c1)  WHEN rt0.c2 COLLATE BINARY THEN (rt0.c1 IN ()) WHEN (rt0.c0 IN (x'', rt0.c2)) THEN ((v0.c0)&(vt0.c0)) WHEN ((-1558409143) BETWEEN (0.45466983173339937) AND (vt0.c0)) THEN ((rt0.c0)>>(v0.c0)) ELSE ((vt0.c0) BETWEEN (x'cab7') AND (rt0.c2)) END) IS TRUE)  as count FROM vt0, v0 CROSS JOIN rt0 ON (NOT (CAST(rt0.c0 AS REAL))));
SELECT COUNT(*) FROM vt0, v0 CROSS JOIN rt0 ON (NOT (CAST(rt0.c0 AS REAL))) WHERE (CASE TYPEOF(DISTINCT rt0.c1)  WHEN rt0.c2 COLLATE BINARY THEN (rt0.c1 IN ()) WHEN (rt0.c0 IN (x'', rt0.c2)) THEN ((v0.c0)&(vt0.c0)) WHEN ((-1558409143) BETWEEN (0.45466983173339937) AND (vt0.c0)) THEN ((rt0.c0)>>(v0.c0)) ELSE ((vt0.c0) BETWEEN (x'cab7') AND (rt0.c2)) END);
SELECT * FROM rt0, t0 WHERE (((((((rt0.c1)AND(0.3514981667656073)))AND(t0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(0.3514981667656073)))AND(t0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((((((rt0.c1)AND(0.3514981667656073)))AND(t0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(0.3514981667656073)))AND(t0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((((((rt0.c1)AND(0.3514981667656073)))AND(t0.c0))) NOTNULL));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) IS FALSE))-(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS FALSE))-(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) IS FALSE))-(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS FALSE))-(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) IS FALSE))-(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)));
SELECT ALL COUNT(*) FROM v0 WHERE ('-1558409143');
SELECT SUM(count) FROM (SELECT (('-1558409143') IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ('-1558409143');
SELECT SUM(count) FROM (SELECT (('-1558409143') IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ('-1558409143');
SELECT COUNT(*) FROM t0, v0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, v0, rt0);
SELECT COUNT(*) FROM t0, v0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, v0, rt0);
SELECT COUNT(*) FROM t0, v0, rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM v0 NOT INDEXED, t0 WHERE (543278757);
SELECT SUM(count) FROM (SELECT ((543278757) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0 NOT INDEXED, t0 WHERE (543278757);
SELECT SUM(count) FROM (SELECT ((543278757) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0 NOT INDEXED, t0 WHERE (543278757);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON CAST(((rt0.c1)LIKE(t0.c0)) AS INTEGER) LEFT OUTER JOIN rt0 ON ((RTRIM(rt0.c2))>=(TRIM(DISTINCT vt0.c0, vt0.c0))) WHERE (((t0.c0) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND ((rt0.c0 IN ())))) ORDER BY ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CAST(((rt0.c1)LIKE(t0.c0)) AS INTEGER) LEFT OUTER JOIN rt0 ON ((RTRIM(rt0.c2))>=(TRIM(DISTINCT vt0.c0, vt0.c0))) ORDER BY ''  NULLS LAST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON CAST(((rt0.c1)LIKE(t0.c0)) AS INTEGER) LEFT OUTER JOIN rt0 ON ((RTRIM(rt0.c2))>=(TRIM(DISTINCT vt0.c0, vt0.c0))) WHERE (((t0.c0) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND ((rt0.c0 IN ())))) ORDER BY ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CAST(((rt0.c1)LIKE(t0.c0)) AS INTEGER) LEFT OUTER JOIN rt0 ON ((RTRIM(rt0.c2))>=(TRIM(DISTINCT vt0.c0, vt0.c0))) ORDER BY ''  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))) IS TRUE));
SELECT COUNT(*) FROM rt0 WHERE ((+ (CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ (CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ (CAST(rt0.c2 AS BLOB))));
SELECT * FROM t0 INNER JOIN v0 ON CAST((((x'25b6')) BETWEEN ((t0.c0)) AND ((v0.c0))) AS NUMERIC) WHERE ((t0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ())) IS TRUE)  as count FROM t0 INNER JOIN v0 ON CAST((((x'25b6')) BETWEEN ((t0.c0)) AND ((v0.c0))) AS NUMERIC));
SELECT * FROM t0 INNER JOIN v0 ON CAST((((x'25b6')) BETWEEN ((t0.c0)) AND ((v0.c0))) AS NUMERIC) WHERE ((t0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ())) IS TRUE)  as count FROM t0 INNER JOIN v0 ON CAST((((x'25b6')) BETWEEN ((t0.c0)) AND ((v0.c0))) AS NUMERIC));
SELECT * FROM t0 INNER JOIN v0 ON CAST((((x'25b6')) BETWEEN ((t0.c0)) AND ((v0.c0))) AS NUMERIC) WHERE ((t0.c0 IN ()));
SELECT COUNT(*) FROM vt0, v0 WHERE ('-486241072');
SELECT SUM(count) FROM (SELECT ALL (('-486241072') IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ('-486241072');
SELECT SUM(count) FROM (SELECT ALL (('-486241072') IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ('-486241072');
SELECT ALL * FROM vt0 WHERE ((((vt0.c0))!=(((((vt0.c0))=((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0))!=(((((vt0.c0))==((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0))!=(((((vt0.c0))=((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0))!=(((((vt0.c0))==((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0))!=(((((vt0.c0))=((vt0.c0)))))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON ((((x'')AND(((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))))AND(CAST(t0.c0 AS INTEGER))) WHERE (json_extract(0.05752084389161649, ((v0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(0.05752084389161649, ((v0.c0) IS FALSE))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON ((((x'')AND(((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))))AND(CAST(t0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON ((((x'')AND(((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))))AND(CAST(t0.c0 AS INTEGER))) WHERE (json_extract(0.05752084389161649, ((v0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(0.05752084389161649, ((v0.c0) IS FALSE))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON ((((x'')AND(((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))))AND(CAST(t0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON ((((x'')AND(((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))))AND(CAST(t0.c0 AS INTEGER))) WHERE (json_extract(0.05752084389161649, ((v0.c0) IS FALSE)));
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN t0 ON ((921818078) ISNULL) CROSS JOIN rt0 ON (~ (v0.c0)) COLLATE BINARY WHERE ((((vt0.c0)) NOT BETWEEN ((LIKELY(v0.c0))) AND ((((('㭥wM>SX', t0.c0, t0.c0)) BETWEEN ((rt0.c0, vt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c1))))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((LIKELY(v0.c0))) AND ((((('㭥wM>SX', t0.c0, t0.c0)) BETWEEN ((rt0.c0, vt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c1))))))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN t0 ON ((921818078) ISNULL) CROSS JOIN rt0 ON (~ (v0.c0)) COLLATE BINARY ORDER BY x'');
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN t0 ON ((921818078) ISNULL) CROSS JOIN rt0 ON (~ (v0.c0)) COLLATE BINARY WHERE ((((vt0.c0)) NOT BETWEEN ((LIKELY(v0.c0))) AND ((((('㭥wM>SX', t0.c0, t0.c0)) BETWEEN ((rt0.c0, vt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c1))))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((LIKELY(v0.c0))) AND ((((('㭥wM>SX', t0.c0, t0.c0)) BETWEEN ((rt0.c0, vt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c1))))))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN t0 ON ((921818078) ISNULL) CROSS JOIN rt0 ON (~ (v0.c0)) COLLATE BINARY ORDER BY x'');
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN t0 ON ((921818078) ISNULL) CROSS JOIN rt0 ON (~ (v0.c0)) COLLATE BINARY WHERE ((((vt0.c0)) NOT BETWEEN ((LIKELY(v0.c0))) AND ((((('㭥wM>SX', t0.c0, t0.c0)) BETWEEN ((rt0.c0, vt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c1))))))) ORDER BY x'';
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CASE rt0.c2 COLLATE RTRIM  WHEN CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END THEN rt0.c2 WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c1 COLLATE RTRIM WHEN ((rt0.c1)LIKE(rt0.c1)) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN 't-' THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END ELSE ((('-1898041336'))==((rt0.c1))) END WHERE ((+ (rt0.c1)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c1))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE rt0.c2 COLLATE RTRIM  WHEN CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END THEN rt0.c2 WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c1 COLLATE RTRIM WHEN ((rt0.c1)LIKE(rt0.c1)) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN 't-' THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END ELSE ((('-1898041336'))==((rt0.c1))) END);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CASE rt0.c2 COLLATE RTRIM  WHEN CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END THEN rt0.c2 WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c1 COLLATE RTRIM WHEN ((rt0.c1)LIKE(rt0.c1)) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN 't-' THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END ELSE ((('-1898041336'))==((rt0.c1))) END WHERE ((+ (rt0.c1)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c1))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE rt0.c2 COLLATE RTRIM  WHEN CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END THEN rt0.c2 WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c1 COLLATE RTRIM WHEN ((rt0.c1)LIKE(rt0.c1)) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN 't-' THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END ELSE ((('-1898041336'))==((rt0.c1))) END);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CASE rt0.c2 COLLATE RTRIM  WHEN CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END THEN rt0.c2 WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c1 COLLATE RTRIM WHEN ((rt0.c1)LIKE(rt0.c1)) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN 't-' THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END ELSE ((('-1898041336'))==((rt0.c1))) END WHERE ((+ (rt0.c1)));
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(v0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(v0.c0)))AND(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(v0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(v0.c0)))AND(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(v0.c0))) IS FALSE));
SELECT * FROM vt0, t0 INNER JOIN rt0 ON ((CAST(t0.c0 AS BLOB)) NOT NULL) RIGHT OUTER JOIN v0 ON rt0.c0 WHERE (CASE WHEN (rt0.c1 IN (rt0.c0)) THEN CAST(t0.c0 AS NUMERIC) ELSE ((rt0.c1)/(t0.c0)) END) ORDER BY (+ (((t0.c0)IS NOT(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c1 IN (rt0.c0)) THEN CAST(t0.c0 AS NUMERIC) ELSE ((rt0.c1)/(t0.c0)) END) IS TRUE)  as count FROM vt0, t0 INNER JOIN rt0 ON ((CAST(t0.c0 AS BLOB)) NOT NULL) RIGHT OUTER JOIN v0 ON rt0.c0 ORDER BY (+ (((t0.c0)IS NOT(rt0.c0))))  NULLS FIRST);
SELECT * FROM vt0, t0 INNER JOIN rt0 ON ((CAST(t0.c0 AS BLOB)) NOT NULL) RIGHT OUTER JOIN v0 ON rt0.c0 WHERE (CASE WHEN (rt0.c1 IN (rt0.c0)) THEN CAST(t0.c0 AS NUMERIC) ELSE ((rt0.c1)/(t0.c0)) END) ORDER BY (+ (((t0.c0)IS NOT(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c1 IN (rt0.c0)) THEN CAST(t0.c0 AS NUMERIC) ELSE ((rt0.c1)/(t0.c0)) END) IS TRUE)  as count FROM vt0, t0 INNER JOIN rt0 ON ((CAST(t0.c0 AS BLOB)) NOT NULL) RIGHT OUTER JOIN v0 ON rt0.c0 ORDER BY (+ (((t0.c0)IS NOT(rt0.c0))))  NULLS FIRST);
SELECT * FROM vt0, t0 INNER JOIN rt0 ON ((CAST(t0.c0 AS BLOB)) NOT NULL) RIGHT OUTER JOIN v0 ON rt0.c0 WHERE (CASE WHEN (rt0.c1 IN (rt0.c0)) THEN CAST(t0.c0 AS NUMERIC) ELSE ((rt0.c1)/(t0.c0)) END) ORDER BY (+ (((t0.c0)IS NOT(rt0.c0))))  NULLS FIRST;
SELECT * FROM vt0, v0 RIGHT OUTER JOIN rt0 ON CAST(((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))OR(0x2061c6a5)) AS TEXT) WHERE (x'bfd7') ORDER BY ((((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END)OR(vt0.c0)))OR((NOT (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'bfd7') IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN rt0 ON CAST(((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))OR(0x2061c6a5)) AS TEXT) ORDER BY ((((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END)OR(vt0.c0)))OR((NOT (rt0.c1))))  NULLS LAST);
SELECT * FROM vt0, v0 RIGHT OUTER JOIN rt0 ON CAST(((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))OR(0x2061c6a5)) AS TEXT) WHERE (x'bfd7') ORDER BY ((((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END)OR(vt0.c0)))OR((NOT (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'bfd7') IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN rt0 ON CAST(((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))OR(0x2061c6a5)) AS TEXT) ORDER BY ((((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END)OR(vt0.c0)))OR((NOT (rt0.c1))))  NULLS LAST);
SELECT * FROM vt0, v0 RIGHT OUTER JOIN rt0 ON CAST(((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))OR(0x2061c6a5)) AS TEXT) WHERE (x'bfd7') ORDER BY ((((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END)OR(vt0.c0)))OR((NOT (rt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (CASE UPPER(DISTINCT t0.c0)  WHEN ((t0.c0) IS FALSE) THEN NULL ELSE NULLIF(t0.c0, 1.069524569E9) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE UPPER(DISTINCT t0.c0)  WHEN ((t0.c0) IS FALSE) THEN NULL ELSE NULLIF(t0.c0, 1.069524569E9) END) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (CASE UPPER(DISTINCT t0.c0)  WHEN ((t0.c0) IS FALSE) THEN NULL ELSE NULLIF(t0.c0, 1.069524569E9) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE UPPER(DISTINCT t0.c0)  WHEN ((t0.c0) IS FALSE) THEN NULL ELSE NULLIF(t0.c0, 1.069524569E9) END) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (CASE UPPER(DISTINCT t0.c0)  WHEN ((t0.c0) IS FALSE) THEN NULL ELSE NULLIF(t0.c0, 1.069524569E9) END);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (x'6227') ORDER BY (((((t0.c0)&(t0.c0))))<(((~ (NULL))))), x''  NULLS FIRST, ((vt0.c0) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'6227') IS TRUE)  as count FROM t0, vt0 ORDER BY (((((t0.c0)&(t0.c0))))<(((~ (NULL))))), x''  NULLS FIRST, ((vt0.c0) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (x'6227') ORDER BY (((((t0.c0)&(t0.c0))))<(((~ (NULL))))), x''  NULLS FIRST, ((vt0.c0) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'6227') IS TRUE)  as count FROM t0, vt0 ORDER BY (((((t0.c0)&(t0.c0))))<(((~ (NULL))))), x''  NULLS FIRST, ((vt0.c0) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (x'6227') ORDER BY (((((t0.c0)&(t0.c0))))<(((~ (NULL))))), x''  NULLS FIRST, ((vt0.c0) IS TRUE)  NULLS LAST;
SELECT * FROM rt0, v0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((v0.c0)))) NOT BETWEEN (rt0.c0) AND (((((rt0.c0)AND(NULL)))OR(rt0.c1))))) ORDER BY ((HEX(DISTINCT 0.183218370548199))-(CASE v0.c0  WHEN rt0.c0 THEN 0xe8c272 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((v0.c0)))) NOT BETWEEN (rt0.c0) AND (((((rt0.c0)AND(NULL)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((HEX(DISTINCT 0.183218370548199))-(CASE v0.c0  WHEN rt0.c0 THEN 0Xe8c272 END)) ASC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((v0.c0)))) NOT BETWEEN (rt0.c0) AND (((((rt0.c0)AND(NULL)))OR(rt0.c1))))) ORDER BY ((HEX(DISTINCT 0.183218370548199))-(CASE v0.c0  WHEN rt0.c0 THEN 0xe8c272 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((v0.c0)))) NOT BETWEEN (rt0.c0) AND (((((rt0.c0)AND(NULL)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((HEX(DISTINCT 0.183218370548199))-(CASE v0.c0  WHEN rt0.c0 THEN 0Xe8c272 END)) ASC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((v0.c0)))) NOT BETWEEN (rt0.c0) AND (((((rt0.c0)AND(NULL)))OR(rt0.c1))))) ORDER BY ((HEX(DISTINCT 0.183218370548199))-(CASE v0.c0  WHEN rt0.c0 THEN 0xe8c272 END)) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ('2069342706');
SELECT SUM(count) FROM (SELECT (('2069342706') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('2069342706');
SELECT SUM(count) FROM (SELECT (('2069342706') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('2069342706');
SELECT ALL * FROM vt0, t0, v0 WHERE (CAST(CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END AS TEXT)) ORDER BY ((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END AS TEXT)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, v0 WHERE (CAST(CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END AS TEXT)) ORDER BY ((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END AS TEXT)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, v0 WHERE (CAST(CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END AS TEXT)) ORDER BY ((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON (((((NULL))!=((vt0.c0))))LIKE(((vt0.c0) NOTNULL))) WHERE (((v0.c0 COLLATE NOCASE)|((((vt0.c0))>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)|((((vt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((((NULL))<>((vt0.c0))))LIKE(((vt0.c0) NOTNULL))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON (((((NULL))!=((vt0.c0))))LIKE(((vt0.c0) NOTNULL))) WHERE (((v0.c0 COLLATE NOCASE)|((((vt0.c0))>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)|((((vt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((((NULL))<>((vt0.c0))))LIKE(((vt0.c0) NOTNULL))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON (((((NULL))!=((vt0.c0))))LIKE(((vt0.c0) NOTNULL))) WHERE (((v0.c0 COLLATE NOCASE)|((((vt0.c0))>((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON ((((((v0.c0))>=((vt0.c0)))))>((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) WHERE (((((load_extension(v0.c0))AND((- (vt0.c0)))))OR((~ (v0.c0))))) ORDER BY (('gs') IS FALSE) DESC  NULLS FIRST, ((((vt0.c0))=((vt0.c0))) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((load_extension(v0.c0))AND((- (vt0.c0)))))OR((~ (v0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((((v0.c0))>=((vt0.c0)))))>((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) ORDER BY (('gs') IS FALSE) DESC  NULLS FIRST, ((((vt0.c0))=((vt0.c0))) IN ()));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON ((((((v0.c0))>=((vt0.c0)))))>((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) WHERE (((((load_extension(v0.c0))AND((- (vt0.c0)))))OR((~ (v0.c0))))) ORDER BY (('gs') IS FALSE) DESC  NULLS FIRST, ((((vt0.c0))=((vt0.c0))) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((load_extension(v0.c0))AND((- (vt0.c0)))))OR((~ (v0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((((v0.c0))>=((vt0.c0)))))>((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) ORDER BY (('gs') IS FALSE) DESC  NULLS FIRST, ((((vt0.c0))=((vt0.c0))) IN ()));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON ((((((v0.c0))>=((vt0.c0)))))>((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) WHERE (((((load_extension(v0.c0))AND((- (vt0.c0)))))OR((~ (v0.c0))))) ORDER BY (('gs') IS FALSE) DESC  NULLS FIRST, ((((vt0.c0))=((vt0.c0))) IN ());
SELECT * FROM vt0, rt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))  WHEN ((rt0.c0) NOTNULL) THEN rt0.c1 ELSE (((vt0.c0, rt0.c0, rt0.c1))<((rt0.c1, rt0.c0, rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))  WHEN ((rt0.c0) NOTNULL) THEN rt0.c1 ELSE (((vt0.c0, rt0.c0, rt0.c1))<((rt0.c1, rt0.c0, rt0.c0))) END) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))  WHEN ((rt0.c0) NOTNULL) THEN rt0.c1 ELSE (((vt0.c0, rt0.c0, rt0.c1))<((rt0.c1, rt0.c0, rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))  WHEN ((rt0.c0) NOTNULL) THEN rt0.c1 ELSE (((vt0.c0, rt0.c0, rt0.c1))<((rt0.c1, rt0.c0, rt0.c0))) END) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))  WHEN ((rt0.c0) NOTNULL) THEN rt0.c1 ELSE (((vt0.c0, rt0.c0, rt0.c1))<((rt0.c1, rt0.c0, rt0.c0))) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(TYPEOF(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((TRIM(TYPEOF(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(TYPEOF(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((TRIM(TYPEOF(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(TYPEOF(vt0.c0)));
SELECT * FROM t0 NOT INDEXED, rt0, vt0 WHERE (CASE WHEN -347701452 THEN rt0.c2 ELSE t0.c0 END COLLATE NOCASE) ORDER BY ((((((NULL) BETWEEN (rt0.c1) AND (0.6252148781749083)))OR(((vt0.c0) NOT NULL))))OR(CASE rt0.c1  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN t0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN -347701452 THEN rt0.c2 ELSE t0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((((NULL) BETWEEN (rt0.c1) AND (0.6252148781749083)))OR(((vt0.c0) NOT NULL))))OR(CASE rt0.c1  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN t0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST);
SELECT * FROM t0 NOT INDEXED, rt0, vt0 WHERE (CASE WHEN -347701452 THEN rt0.c2 ELSE t0.c0 END COLLATE NOCASE) ORDER BY ((((((NULL) BETWEEN (rt0.c1) AND (0.6252148781749083)))OR(((vt0.c0) NOT NULL))))OR(CASE rt0.c1  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN t0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN -347701452 THEN rt0.c2 ELSE t0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((((NULL) BETWEEN (rt0.c1) AND (0.6252148781749083)))OR(((vt0.c0) NOT NULL))))OR(CASE rt0.c1  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN t0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST);
SELECT * FROM t0 NOT INDEXED, rt0, vt0 WHERE (CASE WHEN -347701452 THEN rt0.c2 ELSE t0.c0 END COLLATE NOCASE) ORDER BY ((((((NULL) BETWEEN (rt0.c1) AND (0.6252148781749083)))OR(((vt0.c0) NOT NULL))))OR(CASE rt0.c1  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN t0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (((((((x'59ff') BETWEEN (t0.c0) AND (t0.c0)))AND(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))AND((t0.c0 IN ())))) ORDER BY TRIM(t0.c0 COLLATE RTRIM) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((x'59ff') BETWEEN (t0.c0) AND (t0.c0)))AND(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))AND((t0.c0 IN ())))) IS TRUE)  as count FROM t0 ORDER BY TRIM(t0.c0 COLLATE RTRIM) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (((((((x'59ff') BETWEEN (t0.c0) AND (t0.c0)))AND(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))AND((t0.c0 IN ())))) ORDER BY TRIM(t0.c0 COLLATE RTRIM) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((x'59ff') BETWEEN (t0.c0) AND (t0.c0)))AND(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))AND((t0.c0 IN ())))) IS TRUE)  as count FROM t0 ORDER BY TRIM(t0.c0 COLLATE RTRIM) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (((((((x'59ff') BETWEEN (t0.c0) AND (t0.c0)))AND(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))AND((t0.c0 IN ())))) ORDER BY TRIM(t0.c0 COLLATE RTRIM) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, v0 INNER JOIN vt0 ON CASE WHEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)) THEN NULL END LEFT OUTER JOIN rt0 ON TYPEOF(DISTINCT t0.c0) COLLATE BINARY WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((((t0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN (((((t0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, v0 INNER JOIN vt0 ON CASE WHEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)) THEN NULL END LEFT OUTER JOIN rt0 ON TYPEOF(DISTINCT t0.c0) COLLATE BINARY);
SELECT COUNT(*) FROM t0, v0 INNER JOIN vt0 ON CASE WHEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)) THEN NULL END LEFT OUTER JOIN rt0 ON TYPEOF(DISTINCT t0.c0) COLLATE BINARY WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((((t0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN (((((t0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, v0 INNER JOIN vt0 ON CASE WHEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)) THEN NULL END LEFT OUTER JOIN rt0 ON TYPEOF(DISTINCT t0.c0) COLLATE BINARY);
SELECT COUNT(*) FROM t0, v0 INNER JOIN vt0 ON CASE WHEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)) THEN NULL END LEFT OUTER JOIN rt0 ON TYPEOF(DISTINCT t0.c0) COLLATE BINARY WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((((t0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (CAST(vt0.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (((NULL, 1965904895, ((0.597394230571744) IS FALSE)))>((TRIM(t0.c0), ((((((((vt0.c0)AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(t0.c0)), ((t0.c0)LIKE(vt0.c0))))) WHERE (((((((((((((t0.c0 COLLATE RTRIM)AND(((vt0.c0)>=(vt0.c0)))))AND(((t0.c0) IS TRUE))))OR(CAST(t0.c0 AS TEXT))))AND(vt0.c0)))OR(((t0.c0)>=(x'425575f2')))))OR(((vt0.c0)/(vt0.c0))))) ORDER BY (((+ (t0.c0))) NOT BETWEEN ((((vt0.c0))<>((vt0.c0)))) AND (((t0.c0) IS TRUE))) ASC  NULLS FIRST, CASE WHEN (vt0.c0 IN ()) THEN CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c0 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c0 COLLATE RTRIM)AND(((vt0.c0)>=(vt0.c0)))))AND(((t0.c0) IS TRUE))))OR(CAST(t0.c0 AS TEXT))))AND(vt0.c0)))OR(((t0.c0)>=(x'425575f2')))))OR(((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((NULL, 1965904895, ((0.597394230571744) IS FALSE)))>((TRIM(t0.c0), ((((((((vt0.c0)AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(t0.c0)), ((t0.c0)LIKE(vt0.c0))))) ORDER BY (((+ (t0.c0))) NOT BETWEEN ((((vt0.c0))<>((vt0.c0)))) AND (((t0.c0) IS TRUE))) ASC  NULLS FIRST, CASE WHEN (vt0.c0 IN ()) THEN CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c0 END END  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (((NULL, 1965904895, ((0.597394230571744) IS FALSE)))>((TRIM(t0.c0), ((((((((vt0.c0)AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(t0.c0)), ((t0.c0)LIKE(vt0.c0))))) WHERE (((((((((((((t0.c0 COLLATE RTRIM)AND(((vt0.c0)>=(vt0.c0)))))AND(((t0.c0) IS TRUE))))OR(CAST(t0.c0 AS TEXT))))AND(vt0.c0)))OR(((t0.c0)>=(x'425575f2')))))OR(((vt0.c0)/(vt0.c0))))) ORDER BY (((+ (t0.c0))) NOT BETWEEN ((((vt0.c0))<>((vt0.c0)))) AND (((t0.c0) IS TRUE))) ASC  NULLS FIRST, CASE WHEN (vt0.c0 IN ()) THEN CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c0 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c0 COLLATE RTRIM)AND(((vt0.c0)>=(vt0.c0)))))AND(((t0.c0) IS TRUE))))OR(CAST(t0.c0 AS TEXT))))AND(vt0.c0)))OR(((t0.c0)>=(x'425575f2')))))OR(((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((NULL, 1965904895, ((0.597394230571744) IS FALSE)))>((TRIM(t0.c0), ((((((((vt0.c0)AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(t0.c0)), ((t0.c0)LIKE(vt0.c0))))) ORDER BY (((+ (t0.c0))) NOT BETWEEN ((((vt0.c0))<>((vt0.c0)))) AND (((t0.c0) IS TRUE))) ASC  NULLS FIRST, CASE WHEN (vt0.c0 IN ()) THEN CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c0 END END  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (((NULL, 1965904895, ((0.597394230571744) IS FALSE)))>((TRIM(t0.c0), ((((((((vt0.c0)AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(t0.c0)), ((t0.c0)LIKE(vt0.c0))))) WHERE (((((((((((((t0.c0 COLLATE RTRIM)AND(((vt0.c0)>=(vt0.c0)))))AND(((t0.c0) IS TRUE))))OR(CAST(t0.c0 AS TEXT))))AND(vt0.c0)))OR(((t0.c0)>=(x'425575f2')))))OR(((vt0.c0)/(vt0.c0))))) ORDER BY (((+ (t0.c0))) NOT BETWEEN ((((vt0.c0))<>((vt0.c0)))) AND (((t0.c0) IS TRUE))) ASC  NULLS FIRST, CASE WHEN (vt0.c0 IN ()) THEN CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c0 END END  NULLS LAST;
SELECT COUNT(*) FROM t0, v0, rt0 WHERE (0.812958644128131) ORDER BY (((t0.c0)) NOT BETWEEN ((rt0.c2)) AND ((NULL))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((0.812958644128131) IS TRUE)  as count FROM t0, v0, rt0 ORDER BY (((t0.c0)) NOT BETWEEN ((rt0.c2)) AND ((NULL))) COLLATE BINARY);
SELECT COUNT(*) FROM t0, v0, rt0 WHERE (0.812958644128131) ORDER BY (((t0.c0)) NOT BETWEEN ((rt0.c2)) AND ((NULL))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((0.812958644128131) IS TRUE)  as count FROM t0, v0, rt0 ORDER BY (((t0.c0)) NOT BETWEEN ((rt0.c2)) AND ((NULL))) COLLATE BINARY);
SELECT COUNT(*) FROM t0, v0, rt0 WHERE (0.812958644128131) ORDER BY (((t0.c0)) NOT BETWEEN ((rt0.c2)) AND ((NULL))) COLLATE BINARY;
SELECT COUNT(*) FROM vt0 WHERE ((x'' IN ())) ORDER BY ((vt0.c0) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((x'' IN ())) ORDER BY ((vt0.c0) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((x'' IN ())) ORDER BY ((vt0.c0) IS TRUE)  NULLS LAST;
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN rt0 ON CASE t0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN 'j➗%uX' THEN t0.c0 ELSE t0.c0 END COLLATE RTRIM WHERE (0.45264651147697177);
SELECT SUM(count) FROM (SELECT ((0.45264651147697177) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON CASE t0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN 'j➗%uX' THEN t0.c0 ELSE t0.c0 END COLLATE RTRIM);
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN rt0 ON CASE t0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN 'j➗%uX' THEN t0.c0 ELSE t0.c0 END COLLATE RTRIM WHERE (0.45264651147697177);
SELECT SUM(count) FROM (SELECT ((0.45264651147697177) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON CASE t0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN 'j➗%uX' THEN t0.c0 ELSE t0.c0 END COLLATE RTRIM);
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN rt0 ON CASE t0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN 'j➗%uX' THEN t0.c0 ELSE t0.c0 END COLLATE RTRIM WHERE (0.45264651147697177);
SELECT * FROM rt0, v0, t0 WHERE (((v0.c0)*(v0.c0)) COLLATE NOCASE) ORDER BY (((((rt0.c1)>>(t0.c0)), CASE t0.c0  WHEN rt0.c1 THEN t0.c0 ELSE t0.c0 END, ((rt0.c0)IS NOT(rt0.c2)), ((rt0.c0) BETWEEN (t0.c0) AND (v0.c0)), ((t0.c0)<<(rt0.c0))))==(((+ (rt0.c0)), (NOT (rt0.c0)), ((rt0.c0)!=(rt0.c0)), rt0.c0 COLLATE BINARY, ((rt0.c1)<<(rt0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)*(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0, t0 ORDER BY (((((rt0.c1)>>(t0.c0)), CASE t0.c0  WHEN rt0.c1 THEN t0.c0 ELSE t0.c0 END, ((rt0.c0)IS NOT(rt0.c2)), ((rt0.c0) BETWEEN (t0.c0) AND (v0.c0)), ((t0.c0)<<(rt0.c0))))=(((+ (rt0.c0)), (NOT (rt0.c0)), ((rt0.c0)<>(rt0.c0)), rt0.c0 COLLATE BINARY, ((rt0.c1)<<(rt0.c2))))) DESC  NULLS LAST);
SELECT * FROM rt0, v0, t0 WHERE (((v0.c0)*(v0.c0)) COLLATE NOCASE) ORDER BY (((((rt0.c1)>>(t0.c0)), CASE t0.c0  WHEN rt0.c1 THEN t0.c0 ELSE t0.c0 END, ((rt0.c0)IS NOT(rt0.c2)), ((rt0.c0) BETWEEN (t0.c0) AND (v0.c0)), ((t0.c0)<<(rt0.c0))))==(((+ (rt0.c0)), (NOT (rt0.c0)), ((rt0.c0)!=(rt0.c0)), rt0.c0 COLLATE BINARY, ((rt0.c1)<<(rt0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)*(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0, t0 ORDER BY (((((rt0.c1)>>(t0.c0)), CASE t0.c0  WHEN rt0.c1 THEN t0.c0 ELSE t0.c0 END, ((rt0.c0)IS NOT(rt0.c2)), ((rt0.c0) BETWEEN (t0.c0) AND (v0.c0)), ((t0.c0)<<(rt0.c0))))=(((+ (rt0.c0)), (NOT (rt0.c0)), ((rt0.c0)<>(rt0.c0)), rt0.c0 COLLATE BINARY, ((rt0.c1)<<(rt0.c2))))) DESC  NULLS LAST);
SELECT * FROM rt0, v0, t0 WHERE (((v0.c0)*(v0.c0)) COLLATE NOCASE) ORDER BY (((((rt0.c1)>>(t0.c0)), CASE t0.c0  WHEN rt0.c1 THEN t0.c0 ELSE t0.c0 END, ((rt0.c0)IS NOT(rt0.c2)), ((rt0.c0) BETWEEN (t0.c0) AND (v0.c0)), ((t0.c0)<<(rt0.c0))))==(((+ (rt0.c0)), (NOT (rt0.c0)), ((rt0.c0)!=(rt0.c0)), rt0.c0 COLLATE BINARY, ((rt0.c1)<<(rt0.c2))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((v0.c0) IS TRUE)) ORDER BY CAST(((v0.c0) IS FALSE) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS TRUE)) IS TRUE)  as count FROM t0, v0 ORDER BY CAST(((v0.c0) IS FALSE) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((v0.c0) IS TRUE)) ORDER BY CAST(((v0.c0) IS FALSE) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS TRUE)) IS TRUE)  as count FROM t0, v0 ORDER BY CAST(((v0.c0) IS FALSE) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((v0.c0) IS TRUE)) ORDER BY CAST(((v0.c0) IS FALSE) AS NUMERIC)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ('-2072550161');
SELECT SUM(count) FROM (SELECT (('-2072550161') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-2072550161');
SELECT SUM(count) FROM (SELECT (('-2072550161') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-2072550161');
SELECT * FROM vt0 WHERE ((NOT (vt0.c0 COLLATE BINARY))) ORDER BY (vt0.c0 IN (((-8.54176791E8) IS FALSE)))  NULLS LAST, ((('O7')) BETWEEN ((NULLIF(vt0.c0, 0.10819444173685955))) AND (((NOT (vt0.c0)))))  NULLS FIRST, (NOT ((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN (((-8.54176791E8) IS FALSE)))  NULLS LAST, ((('O7')) BETWEEN ((NULLIF(vt0.c0, 0.10819444173685955))) AND (((NOT (vt0.c0)))))  NULLS FIRST, (NOT ((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC);
SELECT * FROM vt0 WHERE ((NOT (vt0.c0 COLLATE BINARY))) ORDER BY (vt0.c0 IN (((-8.54176791E8) IS FALSE)))  NULLS LAST, ((('O7')) BETWEEN ((NULLIF(vt0.c0, 0.10819444173685955))) AND (((NOT (vt0.c0)))))  NULLS FIRST, (NOT ((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN (((-8.54176791E8) IS FALSE)))  NULLS LAST, ((('O7')) BETWEEN ((NULLIF(vt0.c0, 0.10819444173685955))) AND (((NOT (vt0.c0)))))  NULLS FIRST, (NOT ((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC);
SELECT * FROM vt0 WHERE ((NOT (vt0.c0 COLLATE BINARY))) ORDER BY (vt0.c0 IN (((-8.54176791E8) IS FALSE)))  NULLS LAST, ((('O7')) BETWEEN ((NULLIF(vt0.c0, 0.10819444173685955))) AND (((NOT (vt0.c0)))))  NULLS FIRST, (NOT ((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC;
SELECT ALL * FROM t0 WHERE ((+ (((t0.c0)IS NOT(t0.c0))))) ORDER BY ((CAST(t0.c0 AS BLOB)) NOT NULL), (+ (((t0.c0) IS TRUE))), ((((t0.c0) IS FALSE)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (((+ (((t0.c0)IS NOT(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS BLOB)) NOT NULL), (+ (((t0.c0) IS TRUE))), ((((t0.c0) IS FALSE)) NOTNULL) ASC);
SELECT ALL * FROM t0 WHERE ((+ (((t0.c0)IS NOT(t0.c0))))) ORDER BY ((CAST(t0.c0 AS BLOB)) NOT NULL), (+ (((t0.c0) IS TRUE))), ((((t0.c0) IS FALSE)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (((+ (((t0.c0)IS NOT(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS BLOB)) NOT NULL), (+ (((t0.c0) IS TRUE))), ((((t0.c0) IS FALSE)) NOTNULL) ASC);
SELECT ALL * FROM t0 WHERE ((+ (((t0.c0)IS NOT(t0.c0))))) ORDER BY ((CAST(t0.c0 AS BLOB)) NOT NULL), (+ (((t0.c0) IS TRUE))), ((((t0.c0) IS FALSE)) NOTNULL) ASC;
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON '-104162870' FULL OUTER JOIN rt0 ON ((((((((rt0.c0)OR(0x5876b92c)))OR(rt0.c0)))OR(((((((((rt0.c0)OR(v0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))))AND(((rt0.c1) NOT BETWEEN (x'92e0') AND (rt0.c0)))) WHERE (vt0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON '-104162870' FULL OUTER JOIN rt0 ON ((((((((rt0.c0)OR(0X5876b92c)))OR(rt0.c0)))OR(((((((((rt0.c0)OR(v0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))))AND(((rt0.c1) NOT BETWEEN (x'92e0') AND (rt0.c0)))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON '-104162870' FULL OUTER JOIN rt0 ON ((((((((rt0.c0)OR(0x5876b92c)))OR(rt0.c0)))OR(((((((((rt0.c0)OR(v0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))))AND(((rt0.c1) NOT BETWEEN (x'92e0') AND (rt0.c0)))) WHERE (vt0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON '-104162870' FULL OUTER JOIN rt0 ON ((((((((rt0.c0)OR(0X5876b92c)))OR(rt0.c0)))OR(((((((((rt0.c0)OR(v0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))))AND(((rt0.c1) NOT BETWEEN (x'92e0') AND (rt0.c0)))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON '-104162870' FULL OUTER JOIN rt0 ON ((((((((rt0.c0)OR(0x5876b92c)))OR(rt0.c0)))OR(((((((((rt0.c0)OR(v0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))))AND(((rt0.c1) NOT BETWEEN (x'92e0') AND (rt0.c0)))) WHERE (vt0.c0 COLLATE BINARY);
SELECT ALL * FROM t0, rt0, v0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, rt0, v0);
SELECT ALL * FROM t0, rt0, v0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, rt0, v0);
SELECT ALL * FROM t0, rt0, v0 WHERE (t0.c0);
SELECT COUNT(*) FROM t0, vt0, v0 INNER JOIN rt0 ON ((((((((((rt0.c1) IS TRUE))AND(json(t0.c0))))AND(((rt0.c0)<<(rt0.c0)))))AND(LIKELY(0.2729085265057697))))OR(CASE WHEN rt0.c0 THEN rt0.c1 END)) WHERE ((+ (vt0.c0))) ORDER BY v0.c0 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM t0, vt0, v0 INNER JOIN rt0 ON ((((((((((rt0.c1) IS TRUE))AND(json(t0.c0))))AND(((rt0.c0)<<(rt0.c0)))))AND(LIKELY(0.2729085265057697))))OR(CASE WHEN rt0.c0 THEN rt0.c1 END)) ORDER BY v0.c0 COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, v0 INNER JOIN rt0 ON ((((((((((rt0.c1) IS TRUE))AND(json(t0.c0))))AND(((rt0.c0)<<(rt0.c0)))))AND(LIKELY(0.2729085265057697))))OR(CASE WHEN rt0.c0 THEN rt0.c1 END)) WHERE ((+ (vt0.c0))) ORDER BY v0.c0 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM t0, vt0, v0 INNER JOIN rt0 ON ((((((((((rt0.c1) IS TRUE))AND(json(t0.c0))))AND(((rt0.c0)<<(rt0.c0)))))AND(LIKELY(0.2729085265057697))))OR(CASE WHEN rt0.c0 THEN rt0.c1 END)) ORDER BY v0.c0 COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, v0 INNER JOIN rt0 ON ((((((((((rt0.c1) IS TRUE))AND(json(t0.c0))))AND(((rt0.c0)<<(rt0.c0)))))AND(LIKELY(0.2729085265057697))))OR(CASE WHEN rt0.c0 THEN rt0.c1 END)) WHERE ((+ (vt0.c0))) ORDER BY v0.c0 COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON 0.8371838707999425 WHERE (CASE (~ (v0.c0))  WHEN (((t0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN (t0.c0 IN (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (v0.c0))  WHEN (((t0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN (t0.c0 IN (v0.c0)) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON 0.8371838707999425);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON 0.8371838707999425 WHERE (CASE (~ (v0.c0))  WHEN (((t0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN (t0.c0 IN (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (v0.c0))  WHEN (((t0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN (t0.c0 IN (v0.c0)) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON 0.8371838707999425);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON 0.8371838707999425 WHERE (CASE (~ (v0.c0))  WHEN (((t0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN (t0.c0 IN (v0.c0)) END);
SELECT * FROM rt0 CROSS JOIN vt0 ON (((rt0.c1)AND(rt0.c0)) IN ()) WHERE ((((NULL IN ()))<=(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ()))<=(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((rt0.c1)AND(rt0.c0)) IN ()) ORDER BY ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE RTRIM);
SELECT * FROM rt0 CROSS JOIN vt0 ON (((rt0.c1)AND(rt0.c0)) IN ()) WHERE ((((NULL IN ()))<=(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ()))<=(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((rt0.c1)AND(rt0.c0)) IN ()) ORDER BY ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE RTRIM);
SELECT * FROM rt0 CROSS JOIN vt0 ON (((rt0.c1)AND(rt0.c0)) IN ()) WHERE ((((NULL IN ()))<=(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE RTRIM;
SELECT * FROM vt0 WHERE ('15254130');
SELECT SUM(count) FROM (SELECT ALL (('15254130') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('15254130');
SELECT SUM(count) FROM (SELECT ALL (('15254130') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('15254130');
SELECT ALL * FROM t0, rt0, vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.9657469213449638))<(((t0.c0) BETWEEN (rt0.c2) AND (vt0.c0))))) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT vt0.c0, 0.9657469213449638))<(((t0.c0) BETWEEN (rt0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY rt0.c2 ASC);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.9657469213449638))<(((t0.c0) BETWEEN (rt0.c2) AND (vt0.c0))))) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT vt0.c0, 0.9657469213449638))<(((t0.c0) BETWEEN (rt0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY rt0.c2 ASC);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.9657469213449638))<(((t0.c0) BETWEEN (rt0.c2) AND (vt0.c0))))) ORDER BY rt0.c2 ASC;
SELECT * FROM t0, v0, rt0, vt0 WHERE ((((CHAR(rt0.c1), (- (x'')), COALESCE(rt0.c0, v0.c0)))>((PRINTF(rt0.c1, rt0.c1, v0.c0), (rt0.c1 IN (vt0.c0, -1891801837)), ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CHAR(rt0.c1), (- (x'')), COALESCE(rt0.c0, v0.c0)))>((PRINTF(rt0.c1, rt0.c1, v0.c0), (rt0.c1 IN (vt0.c0, -1891801837)), ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))))) IS TRUE)  as count FROM t0, v0, rt0, vt0);
SELECT * FROM t0, v0, rt0, vt0 WHERE ((((CHAR(rt0.c1), (- (x'')), COALESCE(rt0.c0, v0.c0)))>((PRINTF(rt0.c1, rt0.c1, v0.c0), (rt0.c1 IN (vt0.c0, -1891801837)), ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CHAR(rt0.c1), (- (x'')), COALESCE(rt0.c0, v0.c0)))>((PRINTF(rt0.c1, rt0.c1, v0.c0), (rt0.c1 IN (vt0.c0, -1891801837)), ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))))) IS TRUE)  as count FROM t0, v0, rt0, vt0);
SELECT * FROM t0, v0, rt0, vt0 WHERE ((((CHAR(rt0.c1), (- (x'')), COALESCE(rt0.c0, v0.c0)))>((PRINTF(rt0.c1, rt0.c1, v0.c0), (rt0.c1 IN (vt0.c0, -1891801837)), ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0))))));
SELECT ALL COUNT(*) FROM v0, rt0, t0, vt0 WHERE (LIKELIHOOD(((rt0.c0) NOT BETWEEN (t0.c0) AND ('5䂃m4')), 0.7163629452591224)) ORDER BY (((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)), ((t0.c0)-(v0.c0)), UPPER(rt0.c2)))<((x'', ((rt0.c1)<(v0.c0)), CASE rt0.c2  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((rt0.c0) NOT BETWEEN (t0.c0) AND ('5䂃m4')), 0.7163629452591224)) IS TRUE)  as count FROM v0, rt0, t0, vt0 ORDER BY (((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)), ((t0.c0)-(v0.c0)), UPPER(rt0.c2)))<((x'', ((rt0.c1)<(v0.c0)), CASE rt0.c2  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, t0, vt0 WHERE (LIKELIHOOD(((rt0.c0) NOT BETWEEN (t0.c0) AND ('5䂃m4')), 0.7163629452591224)) ORDER BY (((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)), ((t0.c0)-(v0.c0)), UPPER(rt0.c2)))<((x'', ((rt0.c1)<(v0.c0)), CASE rt0.c2  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((rt0.c0) NOT BETWEEN (t0.c0) AND ('5䂃m4')), 0.7163629452591224)) IS TRUE)  as count FROM v0, rt0, t0, vt0 ORDER BY (((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)), ((t0.c0)-(v0.c0)), UPPER(rt0.c2)))<((x'', ((rt0.c1)<(v0.c0)), CASE rt0.c2  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, t0, vt0 WHERE (LIKELIHOOD(((rt0.c0) NOT BETWEEN (t0.c0) AND ('5䂃m4')), 0.7163629452591224)) ORDER BY (((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)), ((t0.c0)-(v0.c0)), UPPER(rt0.c2)))<((x'', ((rt0.c1)<(v0.c0)), CASE rt0.c2  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)))  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((v0.c0))<=((v0.c0))))GLOB(LIKELY(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))<=((v0.c0))))GLOB(LIKELY(DISTINCT vt0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((v0.c0))<=((v0.c0))))GLOB(LIKELY(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))<=((v0.c0))))GLOB(LIKELY(DISTINCT vt0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((v0.c0))<=((v0.c0))))GLOB(LIKELY(DISTINCT vt0.c0))));
SELECT ALL COUNT(*) FROM rt0, v0, t0 LEFT OUTER JOIN vt0 ON (((rt0.c1)==(rt0.c1)) IN (((rt0.c1)<(t0.c0)), CASE WHEN rt0.c1 THEN rt0.c0 END)) WHERE ((((((((v0.c0, v0.c0, '?'))<((v0.c0, rt0.c2, NULL))))AND(ABS('-1898473685'))))OR(((((t0.c0)OR(rt0.c1)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0, v0.c0, '?'))<((v0.c0, rt0.c2, NULL))))AND(ABS('-1898473685'))))OR(((((t0.c0)OR(rt0.c1)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, v0, t0 LEFT OUTER JOIN vt0 ON (((rt0.c1)==(rt0.c1)) IN (((rt0.c1)<(t0.c0)), CASE WHEN rt0.c1 THEN rt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0, v0, t0 LEFT OUTER JOIN vt0 ON (((rt0.c1)==(rt0.c1)) IN (((rt0.c1)<(t0.c0)), CASE WHEN rt0.c1 THEN rt0.c0 END)) WHERE ((((((((v0.c0, v0.c0, '?'))<((v0.c0, rt0.c2, NULL))))AND(ABS('-1898473685'))))OR(((((t0.c0)OR(rt0.c1)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0, v0.c0, '?'))<((v0.c0, rt0.c2, NULL))))AND(ABS('-1898473685'))))OR(((((t0.c0)OR(rt0.c1)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, v0, t0 LEFT OUTER JOIN vt0 ON (((rt0.c1)==(rt0.c1)) IN (((rt0.c1)<(t0.c0)), CASE WHEN rt0.c1 THEN rt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0, v0, t0 LEFT OUTER JOIN vt0 ON (((rt0.c1)==(rt0.c1)) IN (((rt0.c1)<(t0.c0)), CASE WHEN rt0.c1 THEN rt0.c0 END)) WHERE ((((((((v0.c0, v0.c0, '?'))<((v0.c0, rt0.c2, NULL))))AND(ABS('-1898473685'))))OR(((((t0.c0)OR(rt0.c1)))AND(rt0.c1)))));
SELECT * FROM rt0 WHERE ((((NOT (1.525413E7)))OR(GLOB(rt0.c1, rt0.c2)))) ORDER BY CASE WHEN (((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c1))) THEN ((rt0.c0)%(x'')) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (1.525413E7)))OR(GLOB(rt0.c1, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c1))) THEN ((rt0.c0)%(x'')) END DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((NOT (1.525413E7)))OR(GLOB(rt0.c1, rt0.c2)))) ORDER BY CASE WHEN (((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c1))) THEN ((rt0.c0)%(x'')) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (1.525413E7)))OR(GLOB(rt0.c1, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c1))) THEN ((rt0.c0)%(x'')) END DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((NOT (1.525413E7)))OR(GLOB(rt0.c1, rt0.c2)))) ORDER BY CASE WHEN (((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c1))) THEN ((rt0.c0)%(x'')) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1)%(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)%(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1)%(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)%(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1)%(rt0.c1)) COLLATE BINARY);
SELECT * FROM rt0, v0 WHERE (((((((((((((((((((rt0.c2) NOTNULL))AND(((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 WHEN '6\e' THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 END)))AND(((rt0.c2)=(rt0.c1)))))AND(((x'') ISNULL))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((v0.c0) BETWEEN (x'a708') AND (rt0.c2)))))OR((((rt0.c0))>((v0.c0))))))OR(rt0.c2 COLLATE NOCASE))) ORDER BY (((0.5491879008316, rt0.c1, rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER), rt0.c1, ((((((((v0.c0)OR(rt0.c1)))AND(rt0.c1)))AND(v0.c0)))OR(rt0.c1)))) AND ((x'', CASE rt0.c1  WHEN '-347701452' THEN v0.c0 END, x''))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((rt0.c2) NOTNULL))AND(((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 WHEN '6\e' THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 END)))AND(((rt0.c2)==(rt0.c1)))))AND(((x'') ISNULL))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((v0.c0) BETWEEN (x'a708') AND (rt0.c2)))))OR((((rt0.c0))>((v0.c0))))))OR(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((0.5491879008316, rt0.c1, rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER), rt0.c1, ((((((((v0.c0)OR(rt0.c1)))AND(rt0.c1)))AND(v0.c0)))OR(rt0.c1)))) AND ((x'', CASE rt0.c1  WHEN '-347701452' THEN v0.c0 END, x''))) ASC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (((((((((((((((((((rt0.c2) NOTNULL))AND(((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 WHEN '6\e' THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 END)))AND(((rt0.c2)=(rt0.c1)))))AND(((x'') ISNULL))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((v0.c0) BETWEEN (x'a708') AND (rt0.c2)))))OR((((rt0.c0))>((v0.c0))))))OR(rt0.c2 COLLATE NOCASE))) ORDER BY (((0.5491879008316, rt0.c1, rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER), rt0.c1, ((((((((v0.c0)OR(rt0.c1)))AND(rt0.c1)))AND(v0.c0)))OR(rt0.c1)))) AND ((x'', CASE rt0.c1  WHEN '-347701452' THEN v0.c0 END, x''))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((rt0.c2) NOTNULL))AND(((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 WHEN '6\e' THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 END)))AND(((rt0.c2)==(rt0.c1)))))AND(((x'') ISNULL))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((v0.c0) BETWEEN (x'a708') AND (rt0.c2)))))OR((((rt0.c0))>((v0.c0))))))OR(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((0.5491879008316, rt0.c1, rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER), rt0.c1, ((((((((v0.c0)OR(rt0.c1)))AND(rt0.c1)))AND(v0.c0)))OR(rt0.c1)))) AND ((x'', CASE rt0.c1  WHEN '-347701452' THEN v0.c0 END, x''))) ASC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (((((((((((((((((((rt0.c2) NOTNULL))AND(((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 WHEN '6\e' THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 END)))AND(((rt0.c2)=(rt0.c1)))))AND(((x'') ISNULL))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((v0.c0) BETWEEN (x'a708') AND (rt0.c2)))))OR((((rt0.c0))>((v0.c0))))))OR(rt0.c2 COLLATE NOCASE))) ORDER BY (((0.5491879008316, rt0.c1, rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER), rt0.c1, ((((((((v0.c0)OR(rt0.c1)))AND(rt0.c1)))AND(v0.c0)))OR(rt0.c1)))) AND ((x'', CASE rt0.c1  WHEN '-347701452' THEN v0.c0 END, x''))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, v0, rt0 WHERE ((((rt0.c0 IN (rt0.c2)))+(((((rt0.c0)OR(v0.c0)))AND(v0.c0))))) ORDER BY (((+ (rt0.c2)))|((((t0.c0))==((rt0.c2)))))  NULLS LAST, NULL DESC  NULLS FIRST, (((- (v0.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c2)))+(((((rt0.c0)OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM t0, v0, rt0 ORDER BY (((+ (rt0.c2)))|((((t0.c0))=((rt0.c2)))))  NULLS LAST, NULL DESC  NULLS FIRST, (((- (v0.c0))) NOT NULL) ASC);
SELECT COUNT(*) FROM t0, v0, rt0 WHERE ((((rt0.c0 IN (rt0.c2)))+(((((rt0.c0)OR(v0.c0)))AND(v0.c0))))) ORDER BY (((+ (rt0.c2)))|((((t0.c0))==((rt0.c2)))))  NULLS LAST, NULL DESC  NULLS FIRST, (((- (v0.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c2)))+(((((rt0.c0)OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM t0, v0, rt0 ORDER BY (((+ (rt0.c2)))|((((t0.c0))=((rt0.c2)))))  NULLS LAST, NULL DESC  NULLS FIRST, (((- (v0.c0))) NOT NULL) ASC);
SELECT COUNT(*) FROM t0, v0, rt0 WHERE ((((rt0.c0 IN (rt0.c2)))+(((((rt0.c0)OR(v0.c0)))AND(v0.c0))))) ORDER BY (((+ (rt0.c2)))|((((t0.c0))==((rt0.c2)))))  NULLS LAST, NULL DESC  NULLS FIRST, (((- (v0.c0))) NOT NULL) ASC;
SELECT ALL COUNT(*) FROM v0, t0 FULL OUTER JOIN vt0 ON (((('.C[!_	')=(t0.c0)))/(CASE v0.c0  WHEN t0.c0 THEN t0.c0 END)) WHERE (((((v0.c0) NOTNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM v0, t0 FULL OUTER JOIN vt0 ON (((('.C[!_	')=(t0.c0)))/(CASE v0.c0  WHEN t0.c0 THEN t0.c0 END)));
SELECT ALL COUNT(*) FROM v0, t0 FULL OUTER JOIN vt0 ON (((('.C[!_	')=(t0.c0)))/(CASE v0.c0  WHEN t0.c0 THEN t0.c0 END)) WHERE (((((v0.c0) NOTNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM v0, t0 FULL OUTER JOIN vt0 ON (((('.C[!_	')=(t0.c0)))/(CASE v0.c0  WHEN t0.c0 THEN t0.c0 END)));
SELECT ALL COUNT(*) FROM v0, t0 FULL OUTER JOIN vt0 ON (((('.C[!_	')=(t0.c0)))/(CASE v0.c0  WHEN t0.c0 THEN t0.c0 END)) WHERE (((((v0.c0) NOTNULL)) NOT NULL));
SELECT ALL * FROM t0, v0 WHERE ((((t0.c0 IN ())) BETWEEN ((t0.c0 IN ())) AND (load_extension(v0.c0)))) ORDER BY CASE WHEN (((t0.c0))<((v0.c0))) THEN CASE WHEN x'' THEN t0.c0 END ELSE CASE v0.c0  WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c0 ELSE '-1392490672' END END DESC, (((t0.c0)) BETWEEN ((((t0.c0)>(t0.c0)))) AND (((((t0.c0, t0.c0, t0.c0)) BETWEEN ((v0.c0, t0.c0, v0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) BETWEEN ((t0.c0 IN ())) AND (load_extension(v0.c0)))) IS TRUE)  as count FROM t0, v0 ORDER BY CASE WHEN (((t0.c0))<((v0.c0))) THEN CASE WHEN x'' THEN t0.c0 END ELSE CASE v0.c0  WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c0 ELSE '-1392490672' END END DESC, (((t0.c0)) BETWEEN ((((t0.c0)>(t0.c0)))) AND (((((t0.c0, t0.c0, t0.c0)) BETWEEN ((v0.c0, t0.c0, v0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) ASC);
SELECT ALL * FROM t0, v0 WHERE ((((t0.c0 IN ())) BETWEEN ((t0.c0 IN ())) AND (load_extension(v0.c0)))) ORDER BY CASE WHEN (((t0.c0))<((v0.c0))) THEN CASE WHEN x'' THEN t0.c0 END ELSE CASE v0.c0  WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c0 ELSE '-1392490672' END END DESC, (((t0.c0)) BETWEEN ((((t0.c0)>(t0.c0)))) AND (((((t0.c0, t0.c0, t0.c0)) BETWEEN ((v0.c0, t0.c0, v0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) BETWEEN ((t0.c0 IN ())) AND (load_extension(v0.c0)))) IS TRUE)  as count FROM t0, v0 ORDER BY CASE WHEN (((t0.c0))<((v0.c0))) THEN CASE WHEN x'' THEN t0.c0 END ELSE CASE v0.c0  WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c0 ELSE '-1392490672' END END DESC, (((t0.c0)) BETWEEN ((((t0.c0)>(t0.c0)))) AND (((((t0.c0, t0.c0, t0.c0)) BETWEEN ((v0.c0, t0.c0, v0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) ASC);
SELECT ALL * FROM t0, v0 WHERE ((((t0.c0 IN ())) BETWEEN ((t0.c0 IN ())) AND (load_extension(v0.c0)))) ORDER BY CASE WHEN (((t0.c0))<((v0.c0))) THEN CASE WHEN x'' THEN t0.c0 END ELSE CASE v0.c0  WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c0 ELSE '-1392490672' END END DESC, (((t0.c0)) BETWEEN ((((t0.c0)>(t0.c0)))) AND (((((t0.c0, t0.c0, t0.c0)) BETWEEN ((v0.c0, t0.c0, v0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) ASC;
SELECT ALL * FROM v0, vt0 WHERE (vt0.c0) ORDER BY 2.07966049E9;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY 2.07966049E9);
SELECT ALL * FROM v0, vt0 WHERE (vt0.c0) ORDER BY 2.07966049E9;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY 2.07966049E9);
SELECT ALL * FROM v0, vt0 WHERE (vt0.c0) ORDER BY 2.07966049E9;
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) AND (((rt0.c2 IN ()))))) ORDER BY (((rt0.c1)%(rt0.c1)) IN (((t0.c0)-(rt0.c0)), (((rt0.c2))==((rt0.c0))))), rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) AND (((rt0.c2 IN ()))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((rt0.c1)%(rt0.c1)) IN (((t0.c0)-(rt0.c0)), (((rt0.c2))==((rt0.c0))))), rt0.c2 ASC);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) AND (((rt0.c2 IN ()))))) ORDER BY (((rt0.c1)%(rt0.c1)) IN (((t0.c0)-(rt0.c0)), (((rt0.c2))==((rt0.c0))))), rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) AND (((rt0.c2 IN ()))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((rt0.c1)%(rt0.c1)) IN (((t0.c0)-(rt0.c0)), (((rt0.c2))==((rt0.c0))))), rt0.c2 ASC);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) AND (((rt0.c2 IN ()))))) ORDER BY (((rt0.c1)%(rt0.c1)) IN (((t0.c0)-(rt0.c0)), (((rt0.c2))==((rt0.c0))))), rt0.c2 ASC;
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON x'' LEFT OUTER JOIN vt0 ON ((rt0.c1)==(t0.c0)) COLLATE BINARY WHERE (CAST(((rt0.c0) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) ISNULL) AS BLOB)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON x'' LEFT OUTER JOIN vt0 ON ((rt0.c1)=(t0.c0)) COLLATE BINARY);
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON x'' LEFT OUTER JOIN vt0 ON ((rt0.c1)==(t0.c0)) COLLATE BINARY WHERE (CAST(((rt0.c0) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) ISNULL) AS BLOB)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON x'' LEFT OUTER JOIN vt0 ON ((rt0.c1)=(t0.c0)) COLLATE BINARY);
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON x'' LEFT OUTER JOIN vt0 ON ((rt0.c1)==(t0.c0)) COLLATE BINARY WHERE (CAST(((rt0.c0) ISNULL) AS BLOB));
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON (vt0.c0 IN ()) CROSS JOIN rt0 ON (+ (CAST(vt0.c0 AS TEXT))) WHERE ((((v0.c0)) BETWEEN ((UNLIKELY(DISTINCT vt0.c0))) AND ((((rt0.c2)%(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((UNLIKELY(DISTINCT vt0.c0))) AND ((((rt0.c2)%(vt0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (vt0.c0 IN ()) CROSS JOIN rt0 ON (+ (CAST(vt0.c0 AS TEXT))));
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON (vt0.c0 IN ()) CROSS JOIN rt0 ON (+ (CAST(vt0.c0 AS TEXT))) WHERE ((((v0.c0)) BETWEEN ((UNLIKELY(DISTINCT vt0.c0))) AND ((((rt0.c2)%(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((UNLIKELY(DISTINCT vt0.c0))) AND ((((rt0.c2)%(vt0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (vt0.c0 IN ()) CROSS JOIN rt0 ON (+ (CAST(vt0.c0 AS TEXT))));
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON (vt0.c0 IN ()) CROSS JOIN rt0 ON (+ (CAST(vt0.c0 AS TEXT))) WHERE ((((v0.c0)) BETWEEN ((UNLIKELY(DISTINCT vt0.c0))) AND ((((rt0.c2)%(vt0.c0))))));
SELECT * FROM t0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE NOCASE) ORDER BY ((((t0.c0) ISNULL))>=(((t0.c0)GLOB(t0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) ISNULL))>=(((t0.c0)GLOB(t0.c0)))));
SELECT * FROM t0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE NOCASE) ORDER BY ((((t0.c0) ISNULL))>=(((t0.c0)GLOB(t0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) ISNULL))>=(((t0.c0)GLOB(t0.c0)))));
SELECT * FROM t0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE NOCASE) ORDER BY ((((t0.c0) ISNULL))>=(((t0.c0)GLOB(t0.c0))));
SELECT COUNT(*) FROM t0, vt0, v0 INNER JOIN rt0 ON (((((rt0.c1) IS TRUE), (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((t0.c0))), rt0.c2))!=(((NOT (rt0.c2)), CAST(t0.c0 AS INTEGER), UNLIKELY(DISTINCT rt0.c2)))) WHERE (((CASE t0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)>(UPPER(DISTINCT '(G')))) ORDER BY 0X1014262a DESC, 0.19931696549725886 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)>(UPPER(DISTINCT '(G')))) IS TRUE)  as count FROM t0, vt0, v0 INNER JOIN rt0 ON (((((rt0.c1) IS TRUE), (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((t0.c0))), rt0.c2))<>(((NOT (rt0.c2)), CAST(t0.c0 AS INTEGER), UNLIKELY(DISTINCT rt0.c2)))) ORDER BY 0X1014262a DESC, 0.19931696549725886 ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, v0 INNER JOIN rt0 ON (((((rt0.c1) IS TRUE), (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((t0.c0))), rt0.c2))!=(((NOT (rt0.c2)), CAST(t0.c0 AS INTEGER), UNLIKELY(DISTINCT rt0.c2)))) WHERE (((CASE t0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)>(UPPER(DISTINCT '(G')))) ORDER BY 0X1014262a DESC, 0.19931696549725886 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)>(UPPER(DISTINCT '(G')))) IS TRUE)  as count FROM t0, vt0, v0 INNER JOIN rt0 ON (((((rt0.c1) IS TRUE), (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((t0.c0))), rt0.c2))<>(((NOT (rt0.c2)), CAST(t0.c0 AS INTEGER), UNLIKELY(DISTINCT rt0.c2)))) ORDER BY 0X1014262a DESC, 0.19931696549725886 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ((((v0.c0)) NOT BETWEEN (((+ (t0.c0)))) AND ((CAST('2079660490' AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN (((+ (t0.c0)))) AND ((CAST('2079660490' AS INTEGER))))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ((((v0.c0)) NOT BETWEEN (((+ (t0.c0)))) AND ((CAST('2079660490' AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN (((+ (t0.c0)))) AND ((CAST('2079660490' AS INTEGER))))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ((((v0.c0)) NOT BETWEEN (((+ (t0.c0)))) AND ((CAST('2079660490' AS INTEGER)))));
SELECT ALL COUNT(*) FROM t0, vt0, v0, rt0 WHERE (((((CASE WHEN v0.c0 THEN t0.c0 ELSE rt0.c0 END)AND((- (v0.c0)))))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN v0.c0 THEN t0.c0 ELSE rt0.c0 END)AND((- (v0.c0)))))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0, v0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, v0, rt0 WHERE (((((CASE WHEN v0.c0 THEN t0.c0 ELSE rt0.c0 END)AND((- (v0.c0)))))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN v0.c0 THEN t0.c0 ELSE rt0.c0 END)AND((- (v0.c0)))))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0, v0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, v0, rt0 WHERE (((((CASE WHEN v0.c0 THEN t0.c0 ELSE rt0.c0 END)AND((- (v0.c0)))))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0, v0, t0 FULL OUTER JOIN rt0 ON (t0.c0 IN (CAST(rt0.c2 AS REAL))) WHERE (rt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, t0 FULL OUTER JOIN rt0 ON (t0.c0 IN (CAST(rt0.c2 AS REAL))));
SELECT COUNT(*) FROM vt0, v0, t0 FULL OUTER JOIN rt0 ON (t0.c0 IN (CAST(rt0.c2 AS REAL))) WHERE (rt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, t0 FULL OUTER JOIN rt0 ON (t0.c0 IN (CAST(rt0.c2 AS REAL))));
SELECT COUNT(*) FROM vt0, v0, t0 FULL OUTER JOIN rt0 ON (t0.c0 IN (CAST(rt0.c2 AS REAL))) WHERE (rt0.c1 COLLATE BINARY);
SELECT ALL * FROM t0, rt0 WHERE (((CASE t0.c0  WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (((t0.c0)<(x''))) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE t0.c0 END))) ORDER BY CAST(x'' AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (((t0.c0)<(x''))) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(x'' AS INTEGER) DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (((CASE t0.c0  WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (((t0.c0)<(x''))) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE t0.c0 END))) ORDER BY CAST(x'' AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (((t0.c0)<(x''))) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(x'' AS INTEGER) DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (((CASE t0.c0  WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (((t0.c0)<(x''))) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE t0.c0 END))) ORDER BY CAST(x'' AS INTEGER) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 NOT INDEXED, v0 WHERE ((((v0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, (((rt0.c2, rt0.c0, vt0.c0))=((rt0.c2, v0.c0, rt0.c1))), CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END)) AND (('-574976346', '', ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, (((rt0.c2, rt0.c0, vt0.c0))==((rt0.c2, v0.c0, rt0.c1))), CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END)) AND (('-574976346', '', ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0 NOT INDEXED, v0 WHERE ((((v0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, (((rt0.c2, rt0.c0, vt0.c0))=((rt0.c2, v0.c0, rt0.c1))), CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END)) AND (('-574976346', '', ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, (((rt0.c2, rt0.c0, vt0.c0))==((rt0.c2, v0.c0, rt0.c1))), CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END)) AND (('-574976346', '', ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0 NOT INDEXED, v0 WHERE ((((v0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, (((rt0.c2, rt0.c0, vt0.c0))=((rt0.c2, v0.c0, rt0.c1))), CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END)) AND (('-574976346', '', ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1))))));
SELECT ALL * FROM v0, vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE (NULL);
SELECT * FROM rt0, t0, vt0 WHERE (((((vt0.c0)AND(rt0.c1)))>>(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(rt0.c1)))>>(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE (((((vt0.c0)AND(rt0.c1)))>>(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(rt0.c1)))>>(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE (((((vt0.c0)AND(rt0.c1)))>>(((vt0.c0) ISNULL))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ('35546008', rt0.c2)))*(rt0.c1 COLLATE BINARY))) ORDER BY 0.2273181386532409  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ('35546008', rt0.c2)))*(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY 0.2273181386532409  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ('35546008', rt0.c2)))*(rt0.c1 COLLATE BINARY))) ORDER BY 0.2273181386532409  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ('35546008', rt0.c2)))*(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY 0.2273181386532409  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ('35546008', rt0.c2)))*(rt0.c1 COLLATE BINARY))) ORDER BY 0.2273181386532409  NULLS FIRST;
SELECT * FROM vt0 WHERE (HEX(DISTINCT (~ (vt0.c0)))) ORDER BY (((NULL)) NOT BETWEEN (((~ (vt0.c0)))) AND (((NOT (vt0.c0))))) ASC, ((vt0.c0)/(vt0.c0)) COLLATE NOCASE ASC, ((((vt0.c0) NOTNULL)) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (~ (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((NULL)) NOT BETWEEN (((~ (vt0.c0)))) AND (((NOT (vt0.c0))))) ASC, ((vt0.c0)/(vt0.c0)) COLLATE NOCASE ASC, ((((vt0.c0) NOTNULL)) IS FALSE) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (HEX(DISTINCT (~ (vt0.c0)))) ORDER BY (((NULL)) NOT BETWEEN (((~ (vt0.c0)))) AND (((NOT (vt0.c0))))) ASC, ((vt0.c0)/(vt0.c0)) COLLATE NOCASE ASC, ((((vt0.c0) NOTNULL)) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (~ (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((NULL)) NOT BETWEEN (((~ (vt0.c0)))) AND (((NOT (vt0.c0))))) ASC, ((vt0.c0)/(vt0.c0)) COLLATE NOCASE ASC, ((((vt0.c0) NOTNULL)) IS FALSE) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (HEX(DISTINCT (~ (vt0.c0)))) ORDER BY (((NULL)) NOT BETWEEN (((~ (vt0.c0)))) AND (((NOT (vt0.c0))))) ASC, ((vt0.c0)/(vt0.c0)) COLLATE NOCASE ASC, ((((vt0.c0) NOTNULL)) IS FALSE) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON json(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) WHERE ((((rt0.c2) ISNULL) IN (vt0.c0))) ORDER BY ((((vt0.c0)IS(rt0.c2))) NOT BETWEEN (vt0.c0) AND ((rt0.c1 IN ()))), ((0.5953161522539151)>=((((x'')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) ISNULL) IN (vt0.c0))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON json(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) ORDER BY ((((vt0.c0)IS(rt0.c2))) NOT BETWEEN (vt0.c0) AND ((rt0.c1 IN ()))), ((0.5953161522539151)>=((((x'')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON json(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) WHERE ((((rt0.c2) ISNULL) IN (vt0.c0))) ORDER BY ((((vt0.c0)IS(rt0.c2))) NOT BETWEEN (vt0.c0) AND ((rt0.c1 IN ()))), ((0.5953161522539151)>=((((x'')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) ISNULL) IN (vt0.c0))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON json(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) ORDER BY ((((vt0.c0)IS(rt0.c2))) NOT BETWEEN (vt0.c0) AND ((rt0.c1 IN ()))), ((0.5953161522539151)>=((((x'')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON json(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) WHERE ((((rt0.c2) ISNULL) IN (vt0.c0))) ORDER BY ((((vt0.c0)IS(rt0.c2))) NOT BETWEEN (vt0.c0) AND ((rt0.c1 IN ()))), ((0.5953161522539151)>=((((x'')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0) ISNULL) THEN ((v0.c0)%(v0.c0)) WHEN x'd4cd3a8f' THEN v0.c0 WHEN v0.c0 THEN (v0.c0 IN ()) END) ORDER BY (((v0.c0 IN (v0.c0)))>>(v0.c0)) DESC, (((v0.c0, 'C躦p', v0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), COALESCE(DISTINCT v0.c0, v0.c0), (v0.c0 IN ()))) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, ((0.07027877759478296)|(v0.c0)), 5.20957887E8)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) ISNULL) THEN ((v0.c0)%(v0.c0)) WHEN x'd4cd3a8f' THEN v0.c0 WHEN v0.c0 THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c0)))>>(v0.c0)) DESC, (((v0.c0, 'C躦p', v0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), COALESCE(DISTINCT v0.c0, v0.c0), (v0.c0 IN ()))) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, ((0.07027877759478296)|(v0.c0)), 5.20957887E8))));
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0) ISNULL) THEN ((v0.c0)%(v0.c0)) WHEN x'd4cd3a8f' THEN v0.c0 WHEN v0.c0 THEN (v0.c0 IN ()) END) ORDER BY (((v0.c0 IN (v0.c0)))>>(v0.c0)) DESC, (((v0.c0, 'C躦p', v0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), COALESCE(DISTINCT v0.c0, v0.c0), (v0.c0 IN ()))) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, ((0.07027877759478296)|(v0.c0)), 5.20957887E8)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) ISNULL) THEN ((v0.c0)%(v0.c0)) WHEN x'd4cd3a8f' THEN v0.c0 WHEN v0.c0 THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c0)))>>(v0.c0)) DESC, (((v0.c0, 'C躦p', v0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), COALESCE(DISTINCT v0.c0, v0.c0), (v0.c0 IN ()))) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, ((0.07027877759478296)|(v0.c0)), 5.20957887E8))));
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0) ISNULL) THEN ((v0.c0)%(v0.c0)) WHEN x'd4cd3a8f' THEN v0.c0 WHEN v0.c0 THEN (v0.c0 IN ()) END) ORDER BY (((v0.c0 IN (v0.c0)))>>(v0.c0)) DESC, (((v0.c0, 'C躦p', v0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), COALESCE(DISTINCT v0.c0, v0.c0), (v0.c0 IN ()))) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, ((0.07027877759478296)|(v0.c0)), 5.20957887E8)));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0 IN ())))<=(('-2037411912')))) ORDER BY ((((v0.c0)<=(v0.c0)))>>(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ASC, NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 IN ())))<=(('-2037411912')))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)<=(v0.c0)))>>(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ASC, NULL ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0 IN ())))<=(('-2037411912')))) ORDER BY ((((v0.c0)<=(v0.c0)))>>(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ASC, NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 IN ())))<=(('-2037411912')))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)<=(v0.c0)))>>(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ASC, NULL ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0 IN ())))<=(('-2037411912')))) ORDER BY ((((v0.c0)<=(v0.c0)))>>(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ASC, NULL ASC;
SELECT ALL * FROM vt0, v0, t0 WHERE ((((+ (vt0.c0)))<>(((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))!=(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM vt0, v0, t0 WHERE ((((+ (vt0.c0)))<>(((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))!=(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM vt0, v0, t0 WHERE ((((+ (vt0.c0)))<>(((v0.c0) NOTNULL))));
SELECT ALL * FROM v0, rt0 WHERE (((((v0.c0)AND(rt0.c2)))AND((((rt0.c1, 0.021001297286836307, rt0.c0)) NOT BETWEEN ((rt0.c1, -0.0, rt0.c2)) AND ((v0.c0, rt0.c2, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)AND(rt0.c2)))AND((((rt0.c1, 0.021001297286836307, rt0.c0)) NOT BETWEEN ((rt0.c1, -0.0, rt0.c2)) AND ((v0.c0, rt0.c2, rt0.c2)))))) IS TRUE)  as count FROM v0, rt0 NOT INDEXED);
SELECT ALL * FROM v0, rt0 WHERE (((((v0.c0)AND(rt0.c2)))AND((((rt0.c1, 0.021001297286836307, rt0.c0)) NOT BETWEEN ((rt0.c1, -0.0, rt0.c2)) AND ((v0.c0, rt0.c2, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)AND(rt0.c2)))AND((((rt0.c1, 0.021001297286836307, rt0.c0)) NOT BETWEEN ((rt0.c1, -0.0, rt0.c2)) AND ((v0.c0, rt0.c2, rt0.c2)))))) IS TRUE)  as count FROM v0, rt0 NOT INDEXED);
SELECT ALL * FROM v0, rt0 WHERE (((((v0.c0)AND(rt0.c2)))AND((((rt0.c1, 0.021001297286836307, rt0.c0)) NOT BETWEEN ((rt0.c1, -0.0, rt0.c2)) AND ((v0.c0, rt0.c2, rt0.c2))))));
SELECT ALL * FROM t0 WHERE (CAST((t0.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST((t0.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST((t0.c0 IN ()) AS REAL));
SELECT * FROM rt0, vt0, v0 LEFT OUTER JOIN t0 ON (('' COLLATE BINARY)IS NOT(CASE t0.c0  WHEN NULL THEN t0.c0 ELSE rt0.c1 END)) WHERE (rt0.c2) ORDER BY UNLIKELY(CAST(v0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, v0 LEFT OUTER JOIN t0 ON (('' COLLATE BINARY)IS NOT(CASE t0.c0  WHEN NULL THEN t0.c0 ELSE rt0.c1 END)) ORDER BY UNLIKELY(CAST(v0.c0 AS INTEGER)));
SELECT * FROM rt0, vt0, v0 LEFT OUTER JOIN t0 ON (('' COLLATE BINARY)IS NOT(CASE t0.c0  WHEN NULL THEN t0.c0 ELSE rt0.c1 END)) WHERE (rt0.c2) ORDER BY UNLIKELY(CAST(v0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, v0 LEFT OUTER JOIN t0 ON (('' COLLATE BINARY)IS NOT(CASE t0.c0  WHEN NULL THEN t0.c0 ELSE rt0.c1 END)) ORDER BY UNLIKELY(CAST(v0.c0 AS INTEGER)));
SELECT * FROM rt0, vt0, v0 LEFT OUTER JOIN t0 ON (('' COLLATE BINARY)IS NOT(CASE t0.c0  WHEN NULL THEN t0.c0 ELSE rt0.c1 END)) WHERE (rt0.c2) ORDER BY UNLIKELY(CAST(v0.c0 AS INTEGER));
SELECT * FROM t0, rt0, vt0 NOT INDEXED, v0 WHERE (CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c2 END COLLATE NOCASE) ORDER BY DATETIME((+ (v0.c0)), ((vt0.c0)>=(vt0.c0)), ((((rt0.c1)OR(t0.c0)))OR(rt0.c2)))  NULLS FIRST, ((rt0.c2)>=(t0.c0)) COLLATE NOCASE  NULLS FIRST, ((CASE WHEN x'' THEN v0.c0 ELSE rt0.c2 END) NOT BETWEEN ((((rt0.c2, t0.c0, rt0.c0)) NOT BETWEEN ((NULL, vt0.c0, '6\e')) AND ((t0.c0, rt0.c0, rt0.c1)))) AND ((t0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, vt0, v0 ORDER BY DATETIME((+ (v0.c0)), ((vt0.c0)>=(vt0.c0)), ((((rt0.c1)OR(t0.c0)))OR(rt0.c2)))  NULLS FIRST, ((rt0.c2)>=(t0.c0)) COLLATE NOCASE  NULLS FIRST, ((CASE WHEN x'' THEN v0.c0 ELSE rt0.c2 END) NOT BETWEEN ((((rt0.c2, t0.c0, rt0.c0)) NOT BETWEEN ((NULL, vt0.c0, '6\e')) AND ((t0.c0, rt0.c0, rt0.c1)))) AND ((t0.c0 IN ()))) ASC);
SELECT * FROM t0, rt0, vt0 NOT INDEXED, v0 WHERE (CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c2 END COLLATE NOCASE) ORDER BY DATETIME((+ (v0.c0)), ((vt0.c0)>=(vt0.c0)), ((((rt0.c1)OR(t0.c0)))OR(rt0.c2)))  NULLS FIRST, ((rt0.c2)>=(t0.c0)) COLLATE NOCASE  NULLS FIRST, ((CASE WHEN x'' THEN v0.c0 ELSE rt0.c2 END) NOT BETWEEN ((((rt0.c2, t0.c0, rt0.c0)) NOT BETWEEN ((NULL, vt0.c0, '6\e')) AND ((t0.c0, rt0.c0, rt0.c1)))) AND ((t0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, vt0, v0 ORDER BY DATETIME((+ (v0.c0)), ((vt0.c0)>=(vt0.c0)), ((((rt0.c1)OR(t0.c0)))OR(rt0.c2)))  NULLS FIRST, ((rt0.c2)>=(t0.c0)) COLLATE NOCASE  NULLS FIRST, ((CASE WHEN x'' THEN v0.c0 ELSE rt0.c2 END) NOT BETWEEN ((((rt0.c2, t0.c0, rt0.c0)) NOT BETWEEN ((NULL, vt0.c0, '6\e')) AND ((t0.c0, rt0.c0, rt0.c1)))) AND ((t0.c0 IN ()))) ASC);
SELECT * FROM t0, rt0, vt0 NOT INDEXED, v0 WHERE (CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c2 END COLLATE NOCASE) ORDER BY DATETIME((+ (v0.c0)), ((vt0.c0)>=(vt0.c0)), ((((rt0.c1)OR(t0.c0)))OR(rt0.c2)))  NULLS FIRST, ((rt0.c2)>=(t0.c0)) COLLATE NOCASE  NULLS FIRST, ((CASE WHEN x'' THEN v0.c0 ELSE rt0.c2 END) NOT BETWEEN ((((rt0.c2, t0.c0, rt0.c0)) NOT BETWEEN ((NULL, vt0.c0, '6\e')) AND ((t0.c0, rt0.c0, rt0.c1)))) AND ((t0.c0 IN ()))) ASC;
SELECT COUNT(*) FROM vt0, v0 WHERE (((v0.c0) BETWEEN (CASE WHEN vt0.c0 THEN v0.c0 ELSE 0.314651958214491 END) AND (((vt0.c0)<<(v0.c0))))) ORDER BY (((((((((v0.c0 IN (vt0.c0)))AND(((vt0.c0)-(vt0.c0)))))AND(((((((((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))AND(v0.c0)))))OR(CAST(vt0.c0 AS TEXT))))OR((('!kLy9WI')<<(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (CASE WHEN vt0.c0 THEN v0.c0 ELSE 0.314651958214491 END) AND (((vt0.c0)<<(v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((((((v0.c0 IN (vt0.c0)))AND(((vt0.c0)-(vt0.c0)))))AND(((((((((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))AND(v0.c0)))))OR(CAST(vt0.c0 AS TEXT))))OR((('!kLy9WI')<<(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE (((v0.c0) BETWEEN (CASE WHEN vt0.c0 THEN v0.c0 ELSE 0.314651958214491 END) AND (((vt0.c0)<<(v0.c0))))) ORDER BY (((((((((v0.c0 IN (vt0.c0)))AND(((vt0.c0)-(vt0.c0)))))AND(((((((((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))AND(v0.c0)))))OR(CAST(vt0.c0 AS TEXT))))OR((('!kLy9WI')<<(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (CASE WHEN vt0.c0 THEN v0.c0 ELSE 0.314651958214491 END) AND (((vt0.c0)<<(v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((((((v0.c0 IN (vt0.c0)))AND(((vt0.c0)-(vt0.c0)))))AND(((((((((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))AND(v0.c0)))))OR(CAST(vt0.c0 AS TEXT))))OR((('!kLy9WI')<<(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE (((v0.c0) BETWEEN (CASE WHEN vt0.c0 THEN v0.c0 ELSE 0.314651958214491 END) AND (((vt0.c0)<<(v0.c0))))) ORDER BY (((((((((v0.c0 IN (vt0.c0)))AND(((vt0.c0)-(vt0.c0)))))AND(((((((((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))AND(v0.c0)))))OR(CAST(vt0.c0 AS TEXT))))OR((('!kLy9WI')<<(vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (x'3a30');
SELECT SUM(count) FROM (SELECT ((x'3a30') IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (x'3a30');
SELECT SUM(count) FROM (SELECT ((x'3a30') IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (x'3a30');
SELECT COUNT(*) FROM vt0, v0, rt0, t0 WHERE (json_type(v0.c0)) ORDER BY ((DATE(rt0.c2, rt0.c0, rt0.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c1))|(COALESCE('289225573', rt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_type(v0.c0)) IS TRUE)  as count FROM vt0, v0, rt0, t0 ORDER BY ((DATE(rt0.c2, rt0.c0, rt0.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c1))|(COALESCE('289225573', rt0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, rt0, t0 WHERE (json_type(v0.c0)) ORDER BY ((DATE(rt0.c2, rt0.c0, rt0.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c1))|(COALESCE('289225573', rt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_type(v0.c0)) IS TRUE)  as count FROM vt0, v0, rt0, t0 ORDER BY ((DATE(rt0.c2, rt0.c0, rt0.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c1))|(COALESCE('289225573', rt0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, rt0, t0 WHERE (json_type(v0.c0)) ORDER BY ((DATE(rt0.c2, rt0.c0, rt0.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c1))|(COALESCE('289225573', rt0.c0))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULL);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON (NOT ((NOT (rt0.c1)))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (NOT ((NOT (rt0.c1)))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON (NOT ((NOT (rt0.c1)))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (NOT ((NOT (rt0.c1)))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON (NOT ((NOT (rt0.c1)))) WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2)IS NOT(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)IS NOT(v0.c0)) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2)IS NOT(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)IS NOT(v0.c0)) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2)IS NOT(v0.c0)) IN ()));
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0)AND(vt0.c0)))OR(t0.c0)) COLLATE BINARY) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END)IS NOT(vt0.c0))  NULLS LAST, (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND (((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)AND(vt0.c0)))OR(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END)IS NOT(vt0.c0))  NULLS LAST, (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND (((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))));
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0)AND(vt0.c0)))OR(t0.c0)) COLLATE BINARY) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END)IS NOT(vt0.c0))  NULLS LAST, (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND (((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)AND(vt0.c0)))OR(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END)IS NOT(vt0.c0))  NULLS LAST, (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND (((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))));
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0)AND(vt0.c0)))OR(t0.c0)) COLLATE BINARY) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END)IS NOT(vt0.c0))  NULLS LAST, (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND (((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT * FROM v0, vt0 WHERE ((((CAST('616063728' AS BLOB)))=((((v0.c0) ISNULL))))) ORDER BY ((((v0.c0) NOTNULL)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST('616063728' AS BLOB)))==((((v0.c0) ISNULL))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c0) NOTNULL)) IS FALSE) DESC);
SELECT * FROM v0, vt0 WHERE ((((CAST('616063728' AS BLOB)))=((((v0.c0) ISNULL))))) ORDER BY ((((v0.c0) NOTNULL)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST('616063728' AS BLOB)))==((((v0.c0) ISNULL))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c0) NOTNULL)) IS FALSE) DESC);
SELECT * FROM v0, vt0 WHERE ((((CAST('616063728' AS BLOB)))=((((v0.c0) ISNULL))))) ORDER BY ((((v0.c0) NOTNULL)) IS FALSE) DESC;
SELECT ALL * FROM rt0, t0 WHERE (CASE ((rt0.c1) NOTNULL)  WHEN (~ (rt0.c2)) THEN CAST(t0.c0 AS TEXT) ELSE (((rt0.c2, rt0.c1, x'', rt0.c2, t0.c0))<((t0.c0, t0.c0, rt0.c0, rt0.c2, rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) NOTNULL)  WHEN (~ (rt0.c2)) THEN CAST(t0.c0 AS TEXT) ELSE (((rt0.c2, rt0.c1, x'', rt0.c2, t0.c0))<((t0.c0, t0.c0, rt0.c0, rt0.c2, rt0.c0))) END) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CASE ((rt0.c1) NOTNULL)  WHEN (~ (rt0.c2)) THEN CAST(t0.c0 AS TEXT) ELSE (((rt0.c2, rt0.c1, x'', rt0.c2, t0.c0))<((t0.c0, t0.c0, rt0.c0, rt0.c2, rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) NOTNULL)  WHEN (~ (rt0.c2)) THEN CAST(t0.c0 AS TEXT) ELSE (((rt0.c2, rt0.c1, x'', rt0.c2, t0.c0))<((t0.c0, t0.c0, rt0.c0, rt0.c2, rt0.c0))) END) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CASE ((rt0.c1) NOTNULL)  WHEN (~ (rt0.c2)) THEN CAST(t0.c0 AS TEXT) ELSE (((rt0.c2, rt0.c1, x'', rt0.c2, t0.c0))<((t0.c0, t0.c0, rt0.c0, rt0.c2, rt0.c0))) END);
SELECT * FROM t0 INNER JOIN rt0 ON ((((((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))AND(x'665d')))OR(((rt0.c0) NOTNULL))))AND(((rt0.c0)>=(t0.c0)))))OR(rt0.c2 COLLATE BINARY)) WHERE (((rt0.c0 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((((((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))AND(x'665d')))OR(((rt0.c0) NOTNULL))))AND(((rt0.c0)>=(t0.c0)))))OR(rt0.c2 COLLATE BINARY)));
SELECT * FROM t0 INNER JOIN rt0 ON ((((((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))AND(x'665d')))OR(((rt0.c0) NOTNULL))))AND(((rt0.c0)>=(t0.c0)))))OR(rt0.c2 COLLATE BINARY)) WHERE (((rt0.c0 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((((((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))AND(x'665d')))OR(((rt0.c0) NOTNULL))))AND(((rt0.c0)>=(t0.c0)))))OR(rt0.c2 COLLATE BINARY)));
SELECT * FROM t0 INNER JOIN rt0 ON ((((((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))AND(x'665d')))OR(((rt0.c0) NOTNULL))))AND(((rt0.c0)>=(t0.c0)))))OR(rt0.c2 COLLATE BINARY)) WHERE (((rt0.c0 COLLATE NOCASE) IS TRUE));
SELECT * FROM t0, vt0, rt0 WHERE (((((t0.c0)LIKE(rt0.c1)))>(CASE WHEN rt0.c1 THEN 0.6792938450167569 ELSE 0.7389763257462678 END))) ORDER BY (((((((((((('503376401')OR(rt0.c0)))OR(rt0.c1)))AND(vt0.c0)))AND(rt0.c1)))AND(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1)))))AND(CAST('' AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)LIKE(rt0.c1)))>(CASE WHEN rt0.c1 THEN 0.6792938450167569 ELSE 0.7389763257462678 END))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((((((((((('503376401')OR(rt0.c0)))OR(rt0.c1)))AND(vt0.c0)))AND(rt0.c1)))AND(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1)))))AND(CAST('' AS NUMERIC)))  NULLS LAST);
SELECT * FROM t0, vt0, rt0 WHERE (((((t0.c0)LIKE(rt0.c1)))>(CASE WHEN rt0.c1 THEN 0.6792938450167569 ELSE 0.7389763257462678 END))) ORDER BY (((((((((((('503376401')OR(rt0.c0)))OR(rt0.c1)))AND(vt0.c0)))AND(rt0.c1)))AND(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1)))))AND(CAST('' AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)LIKE(rt0.c1)))>(CASE WHEN rt0.c1 THEN 0.6792938450167569 ELSE 0.7389763257462678 END))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((((((((((('503376401')OR(rt0.c0)))OR(rt0.c1)))AND(vt0.c0)))AND(rt0.c1)))AND(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1)))))AND(CAST('' AS NUMERIC)))  NULLS LAST);
SELECT * FROM t0, vt0, rt0 WHERE (((((t0.c0)LIKE(rt0.c1)))>(CASE WHEN rt0.c1 THEN 0.6792938450167569 ELSE 0.7389763257462678 END))) ORDER BY (((((((((((('503376401')OR(rt0.c0)))OR(rt0.c1)))AND(vt0.c0)))AND(rt0.c1)))AND(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1)))))AND(CAST('' AS NUMERIC)))  NULLS LAST;
SELECT * FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (- (((vt0.c0) IS TRUE))) LEFT OUTER JOIN t0 ON ((NULL)AND(((vt0.c0)<=(rt0.c1)))) LEFT OUTER JOIN rt0 ON ((((((520957887) BETWEEN (v0.c0) AND (rt0.c1)))AND((((v0.c0, vt0.c0, vt0.c0))>=((vt0.c0, rt0.c1, rt0.c1))))))OR(IFNULL(rt0.c2, rt0.c1))) WHERE (((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))||((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))||((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (- (((vt0.c0) IS TRUE))) LEFT OUTER JOIN t0 ON ((NULL)AND(((vt0.c0)<=(rt0.c1)))) LEFT OUTER JOIN rt0 ON ((((((520957887) BETWEEN (v0.c0) AND (rt0.c1)))AND((((v0.c0, vt0.c0, vt0.c0))>=((vt0.c0, rt0.c1, rt0.c1))))))OR(IFNULL(rt0.c2, rt0.c1))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (- (((vt0.c0) IS TRUE))) LEFT OUTER JOIN t0 ON ((NULL)AND(((vt0.c0)<=(rt0.c1)))) LEFT OUTER JOIN rt0 ON ((((((520957887) BETWEEN (v0.c0) AND (rt0.c1)))AND((((v0.c0, vt0.c0, vt0.c0))>=((vt0.c0, rt0.c1, rt0.c1))))))OR(IFNULL(rt0.c2, rt0.c1))) WHERE (((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))||((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))||((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (- (((vt0.c0) IS TRUE))) LEFT OUTER JOIN t0 ON ((NULL)AND(((vt0.c0)<=(rt0.c1)))) LEFT OUTER JOIN rt0 ON ((((((520957887) BETWEEN (v0.c0) AND (rt0.c1)))AND((((v0.c0, vt0.c0, vt0.c0))>=((vt0.c0, rt0.c1, rt0.c1))))))OR(IFNULL(rt0.c2, rt0.c1))));
SELECT * FROM rt0, v0, t0 NATURAL JOIN vt0 WHERE (rt0.c1 COLLATE RTRIM) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0, t0 NATURAL JOIN vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END) ISNULL)  NULLS LAST);
SELECT * FROM rt0, v0, t0 NATURAL JOIN vt0 WHERE (rt0.c1 COLLATE RTRIM) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0, t0 NATURAL JOIN vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END) ISNULL)  NULLS LAST);
SELECT * FROM rt0, v0, t0 NATURAL JOIN vt0 WHERE (rt0.c1 COLLATE RTRIM) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END) ISNULL)  NULLS LAST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(rt0.c2 COLLATE BINARY AS INTEGER) WHERE (((((rt0.c0)AND(((((rt0.c1)AND(vt0.c0)))OR(rt0.c0)))))AND(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY (+ (TRIM(DISTINCT rt0.c0, rt0.c0))) DESC, ((((rt0.c2) IS TRUE))=(((rt0.c0) IS TRUE))), CASE WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END THEN CAST(rt0.c0 AS NUMERIC) ELSE CASE WHEN NULL THEN rt0.c1 ELSE rt0.c0 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)AND(((((rt0.c1)AND(vt0.c0)))OR(rt0.c0)))))AND(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(rt0.c2 COLLATE BINARY AS INTEGER) ORDER BY (+ (TRIM(DISTINCT rt0.c0, rt0.c0))) DESC, ((((rt0.c2) IS TRUE))=(((rt0.c0) IS TRUE))), CASE WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END THEN CAST(rt0.c0 AS NUMERIC) ELSE CASE WHEN NULL THEN rt0.c1 ELSE rt0.c0 END END  NULLS LAST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(rt0.c2 COLLATE BINARY AS INTEGER) WHERE (((((rt0.c0)AND(((((rt0.c1)AND(vt0.c0)))OR(rt0.c0)))))AND(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY (+ (TRIM(DISTINCT rt0.c0, rt0.c0))) DESC, ((((rt0.c2) IS TRUE))=(((rt0.c0) IS TRUE))), CASE WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END THEN CAST(rt0.c0 AS NUMERIC) ELSE CASE WHEN NULL THEN rt0.c1 ELSE rt0.c0 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)AND(((((rt0.c1)AND(vt0.c0)))OR(rt0.c0)))))AND(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(rt0.c2 COLLATE BINARY AS INTEGER) ORDER BY (+ (TRIM(DISTINCT rt0.c0, rt0.c0))) DESC, ((((rt0.c2) IS TRUE))=(((rt0.c0) IS TRUE))), CASE WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END THEN CAST(rt0.c0 AS NUMERIC) ELSE CASE WHEN NULL THEN rt0.c1 ELSE rt0.c0 END END  NULLS LAST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(rt0.c2 COLLATE BINARY AS INTEGER) WHERE (((((rt0.c0)AND(((((rt0.c1)AND(vt0.c0)))OR(rt0.c0)))))AND(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY (+ (TRIM(DISTINCT rt0.c0, rt0.c0))) DESC, ((((rt0.c2) IS TRUE))=(((rt0.c0) IS TRUE))), CASE WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END THEN CAST(rt0.c0 AS NUMERIC) ELSE CASE WHEN NULL THEN rt0.c1 ELSE rt0.c0 END END  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)OR((((rt0.c0))<=((rt0.c0))))))OR((0.14819468846630146 IN ()))))AND(x'')))OR(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)OR((((rt0.c0))<=((rt0.c0))))))OR((0.14819468846630146 IN ()))))AND(x'')))OR(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)OR((((rt0.c0))<=((rt0.c0))))))OR((0.14819468846630146 IN ()))))AND(x'')))OR(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)OR((((rt0.c0))<=((rt0.c0))))))OR((0.14819468846630146 IN ()))))AND(x'')))OR(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)OR((((rt0.c0))<=((rt0.c0))))))OR((0.14819468846630146 IN ()))))AND(x'')))OR(rt0.c0 COLLATE RTRIM)));
SELECT * FROM v0, vt0, t0 WHERE (v0.c0) ORDER BY (~ (((((v0.c0)AND(t0.c0)))AND(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (~ (((((v0.c0)AND(t0.c0)))AND(vt0.c0))))  NULLS FIRST);
SELECT * FROM v0, vt0, t0 WHERE (v0.c0) ORDER BY (~ (((((v0.c0)AND(t0.c0)))AND(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (~ (((((v0.c0)AND(t0.c0)))AND(vt0.c0))))  NULLS FIRST);
SELECT * FROM v0, vt0, t0 WHERE (v0.c0) ORDER BY (~ (((((v0.c0)AND(t0.c0)))AND(vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c0))) NOT NULL)) ORDER BY ((((x'')OR(v0.c0)))LIKE(v0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(v0.c0)))AND(v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY ((((x'')OR(v0.c0)))LIKE(v0.c0)) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c0))) NOT NULL)) ORDER BY ((((x'')OR(v0.c0)))LIKE(v0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(v0.c0)))AND(v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY ((((x'')OR(v0.c0)))LIKE(v0.c0)) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c0))) NOT NULL)) ORDER BY ((((x'')OR(v0.c0)))LIKE(v0.c0)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((((v0.c0) IS FALSE)))<((((((((((t0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(t0.c0)))AND(x''))))) FULL OUTER JOIN v0 ON ((json_patch(v0.c0, t0.c0)) NOT NULL) WHERE ((CAST(t0.c0 AS TEXT) IN (vt0.c0 COLLATE BINARY, 0.18954467683643217))) ORDER BY ('' IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c0 AS TEXT) IN (vt0.c0 COLLATE BINARY, 0.18954467683643217))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((((v0.c0) IS FALSE)))<((((((((((t0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(t0.c0)))AND(x''))))) FULL OUTER JOIN v0 ON ((json_patch(v0.c0, t0.c0)) NOT NULL) ORDER BY ('' IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((((v0.c0) IS FALSE)))<((((((((((t0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(t0.c0)))AND(x''))))) FULL OUTER JOIN v0 ON ((json_patch(v0.c0, t0.c0)) NOT NULL) WHERE ((CAST(t0.c0 AS TEXT) IN (vt0.c0 COLLATE BINARY, 0.18954467683643217))) ORDER BY ('' IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c0 AS TEXT) IN (vt0.c0 COLLATE BINARY, 0.18954467683643217))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((((v0.c0) IS FALSE)))<((((((((((t0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(t0.c0)))AND(x''))))) FULL OUTER JOIN v0 ON ((json_patch(v0.c0, t0.c0)) NOT NULL) ORDER BY ('' IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (TYPEOF(CASE WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END)) ORDER BY 'g]' DESC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(CASE WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END)) IS TRUE)  as count FROM t0, v0 ORDER BY 'g]' DESC);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (TYPEOF(CASE WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END)) ORDER BY 'g]' DESC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(CASE WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END)) IS TRUE)  as count FROM t0, v0 ORDER BY 'g]' DESC);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (TYPEOF(CASE WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END)) ORDER BY 'g]' DESC;
SELECT * FROM rt0, vt0, t0 WHERE ((((x'' IN (rt0.c1))) BETWEEN ('폞	') AND (CASE rt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((x'' IN (rt0.c1))) BETWEEN ('폞	') AND (CASE rt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE ((((x'' IN (rt0.c1))) BETWEEN ('폞	') AND (CASE rt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((x'' IN (rt0.c1))) BETWEEN ('폞	') AND (CASE rt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE ((((x'' IN (rt0.c1))) BETWEEN ('폞	') AND (CASE rt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE rt0.c1 END)));
SELECT ALL COUNT(*) FROM t0 WHERE (0.17084611000444372);
SELECT SUM(count) FROM (SELECT ALL ((0.17084611000444372) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (0.17084611000444372);
SELECT SUM(count) FROM (SELECT ALL ((0.17084611000444372) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (0.17084611000444372);
SELECT ALL * FROM t0, vt0, v0, rt0 WHERE (((((t0.c0)GLOB(0.9526238344446154)))<((- (rt0.c1))))) ORDER BY (((t0.c0, rt0.c2, v0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((((v0.c0)<=(t0.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))), (((vt0.c0, vt0.c0, t0.c0))>=((rt0.c0, rt0.c0, rt0.c2))), rt0.c2, (vt0.c0 IN ()))) AND ((((((t0.c0)AND('_R')))OR(vt0.c0)), (NOT (t0.c0)), CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 END, rt0.c1, TOTAL_CHANGES()))) DESC, (((((v0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1))))>((((rt0.c2)/(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)GLOB(0.9526238344446154)))<((- (rt0.c1))))) IS TRUE)  as count FROM t0, vt0, v0, rt0 ORDER BY (((t0.c0, rt0.c2, v0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((((v0.c0)<=(t0.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))), (((vt0.c0, vt0.c0, t0.c0))>=((rt0.c0, rt0.c0, rt0.c2))), rt0.c2, (vt0.c0 IN ()))) AND ((((((t0.c0)AND('_R')))OR(vt0.c0)), (NOT (t0.c0)), CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 END, rt0.c1, TOTAL_CHANGES()))) DESC, (((((v0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1))))>((((rt0.c2)/(v0.c0))))));
SELECT ALL * FROM t0, vt0, v0, rt0 WHERE (((((t0.c0)GLOB(0.9526238344446154)))<((- (rt0.c1))))) ORDER BY (((t0.c0, rt0.c2, v0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((((v0.c0)<=(t0.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))), (((vt0.c0, vt0.c0, t0.c0))>=((rt0.c0, rt0.c0, rt0.c2))), rt0.c2, (vt0.c0 IN ()))) AND ((((((t0.c0)AND('_R')))OR(vt0.c0)), (NOT (t0.c0)), CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 END, rt0.c1, TOTAL_CHANGES()))) DESC, (((((v0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1))))>((((rt0.c2)/(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)GLOB(0.9526238344446154)))<((- (rt0.c1))))) IS TRUE)  as count FROM t0, vt0, v0, rt0 ORDER BY (((t0.c0, rt0.c2, v0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((((v0.c0)<=(t0.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))), (((vt0.c0, vt0.c0, t0.c0))>=((rt0.c0, rt0.c0, rt0.c2))), rt0.c2, (vt0.c0 IN ()))) AND ((((((t0.c0)AND('_R')))OR(vt0.c0)), (NOT (t0.c0)), CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 END, rt0.c1, TOTAL_CHANGES()))) DESC, (((((v0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1))))>((((rt0.c2)/(v0.c0))))));
SELECT ALL * FROM t0, vt0, v0, rt0 WHERE (((((t0.c0)GLOB(0.9526238344446154)))<((- (rt0.c1))))) ORDER BY (((t0.c0, rt0.c2, v0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((((v0.c0)<=(t0.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))), (((vt0.c0, vt0.c0, t0.c0))>=((rt0.c0, rt0.c0, rt0.c2))), rt0.c2, (vt0.c0 IN ()))) AND ((((((t0.c0)AND('_R')))OR(vt0.c0)), (NOT (t0.c0)), CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 END, rt0.c1, TOTAL_CHANGES()))) DESC, (((((v0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1))))>((((rt0.c2)/(v0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0, vt0, v0 WHERE (((CAST(vt0.c0 AS BLOB))IS((((vt0.c0))>((t0.c0)))))) ORDER BY ((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))IS((((vt0.c0))>((t0.c0)))))) IS TRUE)  as count FROM t0, rt0, vt0, v0 ORDER BY ((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, v0 WHERE (((CAST(vt0.c0 AS BLOB))IS((((vt0.c0))>((t0.c0)))))) ORDER BY ((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))IS((((vt0.c0))>((t0.c0)))))) IS TRUE)  as count FROM t0, rt0, vt0, v0 ORDER BY ((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, v0 WHERE (((CAST(vt0.c0 AS BLOB))IS((((vt0.c0))>((t0.c0)))))) ORDER BY ((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) ISNULL))+((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) ORDER BY (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, '', t0.c0, t0.c0)))) NOT BETWEEN (((t0.c0) IS FALSE)) AND (((x'')>>(0.5536903653920341)))) DESC, (t0.c0 IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) ISNULL))+((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, '', t0.c0, t0.c0)))) NOT BETWEEN (((t0.c0) IS FALSE)) AND (((x'')>>(0.5536903653920341)))) DESC, (t0.c0 IN ()) COLLATE BINARY ASC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) ISNULL))+((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) ORDER BY (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, '', t0.c0, t0.c0)))) NOT BETWEEN (((t0.c0) IS FALSE)) AND (((x'')>>(0.5536903653920341)))) DESC, (t0.c0 IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) ISNULL))+((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, '', t0.c0, t0.c0)))) NOT BETWEEN (((t0.c0) IS FALSE)) AND (((x'')>>(0.5536903653920341)))) DESC, (t0.c0 IN ()) COLLATE BINARY ASC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) ISNULL))+((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) ORDER BY (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, '', t0.c0, t0.c0)))) NOT BETWEEN (((t0.c0) IS FALSE)) AND (((x'')>>(0.5536903653920341)))) DESC, (t0.c0 IN ()) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON NULLIF(((((-104162870)OR(rt0.c0)))AND(rt0.c2)), CAST(vt0.c0 AS NUMERIC)) INNER JOIN rt0 ON CASE WHEN ((v0.c0) IS FALSE) THEN ((rt0.c2)>>(vt0.c0)) WHEN ((rt0.c0)>>(rt0.c1)) THEN ((rt0.c1)>=(t0.c0)) WHEN ((rt0.c1)IS(t0.c0)) THEN vt0.c0 ELSE (((('9a]/''*A')AND(v0.c0)))OR(rt0.c0)) END FULL OUTER JOIN t0 ON (((((((((+ (t0.c0)))OR(((rt0.c0)+(rt0.c0)))))OR(CASE WHEN vt0.c0 THEN rt0.c0 END)))OR((+ (rt0.c2)))))OR(vt0.c0 COLLATE NOCASE)) WHERE (CASE (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((NULL)))  WHEN ((('-1514100754', rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, vt0.c0, t0.c0)) AND ((0xffffffffd686633e, rt0.c1, vt0.c0))) THEN ((rt0.c2) NOTNULL) WHEN LIKELIHOOD(vt0.c0, 0.5412292376158719) THEN (rt0.c2 IN ()) WHEN rt0.c0 THEN (('603907034') NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE SQLITE_COMPILEOPTION_GET(vt0.c0) END) ORDER BY (((CAST(rt0.c1 AS TEXT)))!=((((rt0.c0)<(rt0.c0))))) ASC  NULLS FIRST, ((v0.c0 COLLATE NOCASE)LIKE(((t0.c0)&(v0.c0)))) DESC  NULLS FIRST, (+ (t0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((NULL)))  WHEN ((('-1514100754', rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, vt0.c0, t0.c0)) AND ((0xffffffffd686633e, rt0.c1, vt0.c0))) THEN ((rt0.c2) NOTNULL) WHEN LIKELIHOOD(vt0.c0, 0.5412292376158719) THEN (rt0.c2 IN ()) WHEN rt0.c0 THEN (('603907034') NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE SQLITE_COMPILEOPTION_GET(vt0.c0) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON NULLIF(((((-104162870)OR(rt0.c0)))AND(rt0.c2)), CAST(vt0.c0 AS NUMERIC)) INNER JOIN rt0 ON CASE WHEN ((v0.c0) IS FALSE) THEN ((rt0.c2)>>(vt0.c0)) WHEN ((rt0.c0)>>(rt0.c1)) THEN ((rt0.c1)>=(t0.c0)) WHEN ((rt0.c1)IS(t0.c0)) THEN vt0.c0 ELSE (((('9a]/''*A')AND(v0.c0)))OR(rt0.c0)) END FULL OUTER JOIN t0 ON (((((((((+ (t0.c0)))OR(((rt0.c0)+(rt0.c0)))))OR(CASE WHEN vt0.c0 THEN rt0.c0 END)))OR((+ (rt0.c2)))))OR(vt0.c0 COLLATE NOCASE)) ORDER BY (((CAST(rt0.c1 AS TEXT)))!=((((rt0.c0)<(rt0.c0))))) ASC  NULLS FIRST, ((v0.c0 COLLATE NOCASE)LIKE(((t0.c0)&(v0.c0)))) DESC  NULLS FIRST, (+ (t0.c0 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON NULLIF(((((-104162870)OR(rt0.c0)))AND(rt0.c2)), CAST(vt0.c0 AS NUMERIC)) INNER JOIN rt0 ON CASE WHEN ((v0.c0) IS FALSE) THEN ((rt0.c2)>>(vt0.c0)) WHEN ((rt0.c0)>>(rt0.c1)) THEN ((rt0.c1)>=(t0.c0)) WHEN ((rt0.c1)IS(t0.c0)) THEN vt0.c0 ELSE (((('9a]/''*A')AND(v0.c0)))OR(rt0.c0)) END FULL OUTER JOIN t0 ON (((((((((+ (t0.c0)))OR(((rt0.c0)+(rt0.c0)))))OR(CASE WHEN vt0.c0 THEN rt0.c0 END)))OR((+ (rt0.c2)))))OR(vt0.c0 COLLATE NOCASE)) WHERE (CASE (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((NULL)))  WHEN ((('-1514100754', rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, vt0.c0, t0.c0)) AND ((0xffffffffd686633e, rt0.c1, vt0.c0))) THEN ((rt0.c2) NOTNULL) WHEN LIKELIHOOD(vt0.c0, 0.5412292376158719) THEN (rt0.c2 IN ()) WHEN rt0.c0 THEN (('603907034') NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE SQLITE_COMPILEOPTION_GET(vt0.c0) END) ORDER BY (((CAST(rt0.c1 AS TEXT)))!=((((rt0.c0)<(rt0.c0))))) ASC  NULLS FIRST, ((v0.c0 COLLATE NOCASE)LIKE(((t0.c0)&(v0.c0)))) DESC  NULLS FIRST, (+ (t0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((NULL)))  WHEN ((('-1514100754', rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, vt0.c0, t0.c0)) AND ((0xffffffffd686633e, rt0.c1, vt0.c0))) THEN ((rt0.c2) NOTNULL) WHEN LIKELIHOOD(vt0.c0, 0.5412292376158719) THEN (rt0.c2 IN ()) WHEN rt0.c0 THEN (('603907034') NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE SQLITE_COMPILEOPTION_GET(vt0.c0) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON NULLIF(((((-104162870)OR(rt0.c0)))AND(rt0.c2)), CAST(vt0.c0 AS NUMERIC)) INNER JOIN rt0 ON CASE WHEN ((v0.c0) IS FALSE) THEN ((rt0.c2)>>(vt0.c0)) WHEN ((rt0.c0)>>(rt0.c1)) THEN ((rt0.c1)>=(t0.c0)) WHEN ((rt0.c1)IS(t0.c0)) THEN vt0.c0 ELSE (((('9a]/''*A')AND(v0.c0)))OR(rt0.c0)) END FULL OUTER JOIN t0 ON (((((((((+ (t0.c0)))OR(((rt0.c0)+(rt0.c0)))))OR(CASE WHEN vt0.c0 THEN rt0.c0 END)))OR((+ (rt0.c2)))))OR(vt0.c0 COLLATE NOCASE)) ORDER BY (((CAST(rt0.c1 AS TEXT)))!=((((rt0.c0)<(rt0.c0))))) ASC  NULLS FIRST, ((v0.c0 COLLATE NOCASE)LIKE(((t0.c0)&(v0.c0)))) DESC  NULLS FIRST, (+ (t0.c0 COLLATE BINARY))  NULLS LAST);
SELECT * FROM v0 WHERE ((((v0.c0)LIKE(NULL)) IN ((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)LIKE(NULL)) IN ((~ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0)LIKE(NULL)) IN ((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)LIKE(NULL)) IN ((~ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0)LIKE(NULL)) IN ((~ (v0.c0)))));
SELECT ALL * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))) ORDER BY ((HEX(DISTINCT '376879191')) NOT BETWEEN (((t0.c0) NOT NULL)) AND (x'53bd93c2')) ASC  NULLS FIRST, (((t0.c0 IN (t0.c0, t0.c0))) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND (t0.c0))  NULLS LAST, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)<(CAST(t0.c0 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))) IS TRUE)  as count FROM t0 ORDER BY ((HEX(DISTINCT '376879191')) NOT BETWEEN (((t0.c0) NOT NULL)) AND (x'53bd93c2')) ASC  NULLS FIRST, (((t0.c0 IN (t0.c0, t0.c0))) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND (t0.c0))  NULLS LAST, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)<(CAST(t0.c0 AS TEXT))) ASC);
SELECT ALL * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))) ORDER BY ((HEX(DISTINCT '376879191')) NOT BETWEEN (((t0.c0) NOT NULL)) AND (x'53bd93c2')) ASC  NULLS FIRST, (((t0.c0 IN (t0.c0, t0.c0))) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND (t0.c0))  NULLS LAST, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)<(CAST(t0.c0 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))) IS TRUE)  as count FROM t0 ORDER BY ((HEX(DISTINCT '376879191')) NOT BETWEEN (((t0.c0) NOT NULL)) AND (x'53bd93c2')) ASC  NULLS FIRST, (((t0.c0 IN (t0.c0, t0.c0))) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND (t0.c0))  NULLS LAST, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)<(CAST(t0.c0 AS TEXT))) ASC);
SELECT ALL * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))) ORDER BY ((HEX(DISTINCT '376879191')) NOT BETWEEN (((t0.c0) NOT NULL)) AND (x'53bd93c2')) ASC  NULLS FIRST, (((t0.c0 IN (t0.c0, t0.c0))) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND (t0.c0))  NULLS LAST, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)<(CAST(t0.c0 AS TEXT))) ASC;
SELECT COUNT(*) FROM v0 WHERE (NULLIF(((0xffffffff95528b14)%(v0.c0)), ((((((((v0.c0)OR(0.2862468427729359)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))) ORDER BY json_valid((0.05827839936915469 IN ())), ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))>=(v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(((0xffffffff95528b14)%(v0.c0)), ((((((((v0.c0)OR(0.2862468427729359)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY json_valid((0.05827839936915469 IN ())), ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))>=(v0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (NULLIF(((0xffffffff95528b14)%(v0.c0)), ((((((((v0.c0)OR(0.2862468427729359)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))) ORDER BY json_valid((0.05827839936915469 IN ())), ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))>=(v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(((0xffffffff95528b14)%(v0.c0)), ((((((((v0.c0)OR(0.2862468427729359)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY json_valid((0.05827839936915469 IN ())), ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))>=(v0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (NULLIF(((0xffffffff95528b14)%(v0.c0)), ((((((((v0.c0)OR(0.2862468427729359)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))) ORDER BY json_valid((0.05827839936915469 IN ())), ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))>=(v0.c0))  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (CASE ('' IN ())  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN vt0.c0 COLLATE BINARY ELSE t0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE ('' IN ())  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN vt0.c0 COLLATE BINARY ELSE t0.c0 END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CASE ('' IN ())  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN vt0.c0 COLLATE BINARY ELSE t0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE ('' IN ())  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN vt0.c0 COLLATE BINARY ELSE t0.c0 END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CASE ('' IN ())  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN vt0.c0 COLLATE BINARY ELSE t0.c0 END);
SELECT * FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) BETWEEN (rt0.c1) AND (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) BETWEEN (rt0.c1) AND (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) BETWEEN (rt0.c1) AND (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) BETWEEN (rt0.c1) AND (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) BETWEEN (rt0.c1) AND (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)));
SELECT ALL COUNT(*) FROM v0 WHERE ((((((NULL)/(v0.c0))))<=((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))))) ORDER BY (((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((v0.c0)&(v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)/(v0.c0))))<=((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((v0.c0)&(v0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((NULL)/(v0.c0))))<=((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))))) ORDER BY (((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((v0.c0)&(v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)/(v0.c0))))<=((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((v0.c0)&(v0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((NULL)/(v0.c0))))<=((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))))) ORDER BY (((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((v0.c0)&(v0.c0)))))  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (CASE WHEN (x'' IN (rt0.c2, vt0.c0)) THEN (+ (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (x'' IN (rt0.c2, vt0.c0)) THEN (+ (rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN (x'' IN (rt0.c2, vt0.c0)) THEN (+ (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (x'' IN (rt0.c2, vt0.c0)) THEN (+ (rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN (x'' IN (rt0.c2, vt0.c0)) THEN (+ (rt0.c2)) END);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) ORDER BY '' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY '' ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) ORDER BY '' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY '' ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) ORDER BY '' ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON ((CAST(t0.c0 AS INTEGER))IS NOT(((vt0.c0)LIKE(rt0.c2)))) FULL OUTER JOIN rt0 ON (((((NOT ('X4Hv')))AND(((rt0.c2) NOT NULL))))AND(CASE WHEN rt0.c1 THEN rt0.c0 END)) RIGHT OUTER JOIN vt0 ON CASE WHEN ((((((((rt0.c1)AND(vt0.c0)))AND(v0.c0)))AND(rt0.c1)))OR(vt0.c0)) THEN CAST(rt0.c1 AS NUMERIC) END WHERE (LIKELIHOOD(DISTINCT ((vt0.c0)=(rt0.c0)), 0.29307430611305496));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((vt0.c0)=(rt0.c0)), 0.29307430611305496)) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON ((CAST(t0.c0 AS INTEGER))IS NOT(((vt0.c0)LIKE(rt0.c2)))) FULL OUTER JOIN rt0 ON (((((NOT ('X4Hv')))AND(((rt0.c2) NOT NULL))))AND(CASE WHEN rt0.c1 THEN rt0.c0 END)) RIGHT OUTER JOIN vt0 ON CASE WHEN ((((((((rt0.c1)AND(vt0.c0)))AND(v0.c0)))AND(rt0.c1)))OR(vt0.c0)) THEN CAST(rt0.c1 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON ((CAST(t0.c0 AS INTEGER))IS NOT(((vt0.c0)LIKE(rt0.c2)))) FULL OUTER JOIN rt0 ON (((((NOT ('X4Hv')))AND(((rt0.c2) NOT NULL))))AND(CASE WHEN rt0.c1 THEN rt0.c0 END)) RIGHT OUTER JOIN vt0 ON CASE WHEN ((((((((rt0.c1)AND(vt0.c0)))AND(v0.c0)))AND(rt0.c1)))OR(vt0.c0)) THEN CAST(rt0.c1 AS NUMERIC) END WHERE (LIKELIHOOD(DISTINCT ((vt0.c0)=(rt0.c0)), 0.29307430611305496));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((vt0.c0)=(rt0.c0)), 0.29307430611305496)) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON ((CAST(t0.c0 AS INTEGER))IS NOT(((vt0.c0)LIKE(rt0.c2)))) FULL OUTER JOIN rt0 ON (((((NOT ('X4Hv')))AND(((rt0.c2) NOT NULL))))AND(CASE WHEN rt0.c1 THEN rt0.c0 END)) RIGHT OUTER JOIN vt0 ON CASE WHEN ((((((((rt0.c1)AND(vt0.c0)))AND(v0.c0)))AND(rt0.c1)))OR(vt0.c0)) THEN CAST(rt0.c1 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CASE ((v0.c0) BETWEEN (rt0.c2) AND (vt0.c0))  WHEN ((rt0.c2) IS TRUE) THEN (rt0.c0 IN ()) ELSE ((1.708896549E9) IS FALSE) END LEFT OUTER JOIN v0 ON CASE WHEN (((rt0.c2))>=((rt0.c2))) THEN ((NULL)>=(rt0.c1)) ELSE ((((vt0.c0)AND(rt0.c2)))AND(x'4a93')) END INNER JOIN t0 ON (+ ((vt0.c0 IN ()))) WHERE (((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND ((+ (rt0.c1))))) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND ((+ (rt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE ((v0.c0) BETWEEN (rt0.c2) AND (vt0.c0))  WHEN ((rt0.c2) IS TRUE) THEN (rt0.c0 IN ()) ELSE ((1.708896549E9) IS FALSE) END LEFT OUTER JOIN v0 ON CASE WHEN (((rt0.c2))>=((rt0.c2))) THEN ((NULL)>=(rt0.c1)) ELSE ((((vt0.c0)AND(rt0.c2)))AND(x'4a93')) END INNER JOIN t0 ON (+ ((vt0.c0 IN ()))) ORDER BY rt0.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CASE ((v0.c0) BETWEEN (rt0.c2) AND (vt0.c0))  WHEN ((rt0.c2) IS TRUE) THEN (rt0.c0 IN ()) ELSE ((1.708896549E9) IS FALSE) END LEFT OUTER JOIN v0 ON CASE WHEN (((rt0.c2))>=((rt0.c2))) THEN ((NULL)>=(rt0.c1)) ELSE ((((vt0.c0)AND(rt0.c2)))AND(x'4a93')) END INNER JOIN t0 ON (+ ((vt0.c0 IN ()))) WHERE (((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND ((+ (rt0.c1))))) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND ((+ (rt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE ((v0.c0) BETWEEN (rt0.c2) AND (vt0.c0))  WHEN ((rt0.c2) IS TRUE) THEN (rt0.c0 IN ()) ELSE ((1.708896549E9) IS FALSE) END LEFT OUTER JOIN v0 ON CASE WHEN (((rt0.c2))>=((rt0.c2))) THEN ((NULL)>=(rt0.c1)) ELSE ((((vt0.c0)AND(rt0.c2)))AND(x'4a93')) END INNER JOIN t0 ON (+ ((vt0.c0 IN ()))) ORDER BY rt0.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((CAST(v0.c0 AS BLOB))OR((('*|K)8^(') NOT NULL))))OR((-174951447 IN (t0.c0, rt0.c1)))) LEFT OUTER JOIN v0 ON ((((('880296957')) BETWEEN ((rt0.c2)) AND ((rt0.c1))))||((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 END) NOT NULL)) ORDER BY CASE WHEN (((t0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN v0.c0 THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN ((rt0.c0) IS FALSE) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) ELSE rt0.c0 COLLATE RTRIM END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c0 END) NOT NULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((CAST(v0.c0 AS BLOB))OR((('*|K)8^(') NOT NULL))))OR((-174951447 IN (t0.c0, rt0.c1)))) LEFT OUTER JOIN v0 ON ((((('880296957')) BETWEEN ((rt0.c2)) AND ((rt0.c1))))||((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) ORDER BY CASE WHEN (((t0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN v0.c0 THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN ((rt0.c0) IS FALSE) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) ELSE rt0.c0 COLLATE RTRIM END DESC);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((CAST(v0.c0 AS BLOB))OR((('*|K)8^(') NOT NULL))))OR((-174951447 IN (t0.c0, rt0.c1)))) LEFT OUTER JOIN v0 ON ((((('880296957')) BETWEEN ((rt0.c2)) AND ((rt0.c1))))||((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 END) NOT NULL)) ORDER BY CASE WHEN (((t0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN v0.c0 THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN ((rt0.c0) IS FALSE) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) ELSE rt0.c0 COLLATE RTRIM END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c0 END) NOT NULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((CAST(v0.c0 AS BLOB))OR((('*|K)8^(') NOT NULL))))OR((-174951447 IN (t0.c0, rt0.c1)))) LEFT OUTER JOIN v0 ON ((((('880296957')) BETWEEN ((rt0.c2)) AND ((rt0.c1))))||((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) ORDER BY CASE WHEN (((t0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN v0.c0 THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN ((rt0.c0) IS FALSE) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) ELSE rt0.c0 COLLATE RTRIM END DESC);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (0.3268025915621059) ORDER BY (+ (LAST_INSERT_ROWID()))  NULLS FIRST, CASE (NOT (t0.c0))  WHEN (('-2082381545')<<(t0.c0)) THEN ((rt0.c0)>(rt0.c1)) WHEN CASE t0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c2 END THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN 0.012034517073410855 THEN ((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2)) WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)) WHEN CAST(rt0.c2 AS INTEGER) THEN 0.9312742211711119 WHEN (rt0.c2 IN ()) THEN rt0.c0 WHEN vt0.c0 THEN ((rt0.c2) NOT NULL) END ASC  NULLS LAST, CAST((NOT (rt0.c2)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.3268025915621059) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (+ (LAST_INSERT_ROWID()))  NULLS FIRST, CASE (NOT (t0.c0))  WHEN (('-2082381545')<<(t0.c0)) THEN ((rt0.c0)>(rt0.c1)) WHEN CASE t0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c2 END THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN 0.012034517073410855 THEN ((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2)) WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)) WHEN CAST(rt0.c2 AS INTEGER) THEN 0.9312742211711119 WHEN (rt0.c2 IN ()) THEN rt0.c0 WHEN vt0.c0 THEN ((rt0.c2) NOT NULL) END ASC  NULLS LAST, CAST((NOT (rt0.c2)) AS NUMERIC) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (0.3268025915621059) ORDER BY (+ (LAST_INSERT_ROWID()))  NULLS FIRST, CASE (NOT (t0.c0))  WHEN (('-2082381545')<<(t0.c0)) THEN ((rt0.c0)>(rt0.c1)) WHEN CASE t0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c2 END THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN 0.012034517073410855 THEN ((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2)) WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)) WHEN CAST(rt0.c2 AS INTEGER) THEN 0.9312742211711119 WHEN (rt0.c2 IN ()) THEN rt0.c0 WHEN vt0.c0 THEN ((rt0.c2) NOT NULL) END ASC  NULLS LAST, CAST((NOT (rt0.c2)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.3268025915621059) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (+ (LAST_INSERT_ROWID()))  NULLS FIRST, CASE (NOT (t0.c0))  WHEN (('-2082381545')<<(t0.c0)) THEN ((rt0.c0)>(rt0.c1)) WHEN CASE t0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c2 END THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN 0.012034517073410855 THEN ((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2)) WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)) WHEN CAST(rt0.c2 AS INTEGER) THEN 0.9312742211711119 WHEN (rt0.c2 IN ()) THEN rt0.c0 WHEN vt0.c0 THEN ((rt0.c2) NOT NULL) END ASC  NULLS LAST, CAST((NOT (rt0.c2)) AS NUMERIC) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (0.3268025915621059) ORDER BY (+ (LAST_INSERT_ROWID()))  NULLS FIRST, CASE (NOT (t0.c0))  WHEN (('-2082381545')<<(t0.c0)) THEN ((rt0.c0)>(rt0.c1)) WHEN CASE t0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c2 END THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN 0.012034517073410855 THEN ((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2)) WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)) WHEN CAST(rt0.c2 AS INTEGER) THEN 0.9312742211711119 WHEN (rt0.c2 IN ()) THEN rt0.c0 WHEN vt0.c0 THEN ((rt0.c2) NOT NULL) END ASC  NULLS LAST, CAST((NOT (rt0.c2)) AS NUMERIC) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, t0 WHERE (CASE ((((t0.c0)AND(v0.c0)))AND(t0.c0))  WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((v0.c0))) THEN ((v0.c0)>(v0.c0)) WHEN x'' THEN (t0.c0 IN (v0.c0)) WHEN (((t0.c0, v0.c0, v0.c0))>=((t0.c0, t0.c0, t0.c0))) THEN x'' ELSE (+ (t0.c0)) END) ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM DESC, CAST(((v0.c0)IS NOT(v0.c0)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((t0.c0)AND(v0.c0)))AND(t0.c0))  WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((v0.c0))) THEN ((v0.c0)>(v0.c0)) WHEN x'' THEN (t0.c0 IN (v0.c0)) WHEN (((t0.c0, v0.c0, v0.c0))>=((t0.c0, t0.c0, t0.c0))) THEN x'' ELSE (+ (t0.c0)) END) IS TRUE)  as count FROM v0, t0 ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM DESC, CAST(((v0.c0)IS NOT(v0.c0)) AS BLOB) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE (CASE ((((t0.c0)AND(v0.c0)))AND(t0.c0))  WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((v0.c0))) THEN ((v0.c0)>(v0.c0)) WHEN x'' THEN (t0.c0 IN (v0.c0)) WHEN (((t0.c0, v0.c0, v0.c0))>=((t0.c0, t0.c0, t0.c0))) THEN x'' ELSE (+ (t0.c0)) END) ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM DESC, CAST(((v0.c0)IS NOT(v0.c0)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((t0.c0)AND(v0.c0)))AND(t0.c0))  WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((v0.c0))) THEN ((v0.c0)>(v0.c0)) WHEN x'' THEN (t0.c0 IN (v0.c0)) WHEN (((t0.c0, v0.c0, v0.c0))>=((t0.c0, t0.c0, t0.c0))) THEN x'' ELSE (+ (t0.c0)) END) IS TRUE)  as count FROM v0, t0 ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM DESC, CAST(((v0.c0)IS NOT(v0.c0)) AS BLOB) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE (CASE ((((t0.c0)AND(v0.c0)))AND(t0.c0))  WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((v0.c0))) THEN ((v0.c0)>(v0.c0)) WHEN x'' THEN (t0.c0 IN (v0.c0)) WHEN (((t0.c0, v0.c0, v0.c0))>=((t0.c0, t0.c0, t0.c0))) THEN x'' ELSE (+ (t0.c0)) END) ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM DESC, CAST(((v0.c0)IS NOT(v0.c0)) AS BLOB) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (x'');
SELECT * FROM rt0 WHERE (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) IN ())) ORDER BY (((rt0.c2)) NOT BETWEEN ((CAST(rt0.c1 AS REAL))) AND ((0.5363467622929037))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((CAST(rt0.c1 AS REAL))) AND ((0.5363467622929037))) DESC);
SELECT * FROM rt0 WHERE (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) IN ())) ORDER BY (((rt0.c2)) NOT BETWEEN ((CAST(rt0.c1 AS REAL))) AND ((0.5363467622929037))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((CAST(rt0.c1 AS REAL))) AND ((0.5363467622929037))) DESC);
SELECT * FROM rt0 WHERE (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) IN ())) ORDER BY (((rt0.c2)) NOT BETWEEN ((CAST(rt0.c1 AS REAL))) AND ((0.5363467622929037))) DESC;
SELECT ALL * FROM t0, rt0, vt0 NATURAL JOIN v0 WHERE ((NOT (rt0.c2 COLLATE NOCASE))) ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c2)&(rt0.c2)))) AND ((rt0.c0 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0, vt0 NATURAL JOIN v0 ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c2)&(rt0.c2)))) AND ((rt0.c0 COLLATE NOCASE)))  NULLS LAST);
SELECT ALL * FROM t0, rt0, vt0 NATURAL JOIN v0 WHERE ((NOT (rt0.c2 COLLATE NOCASE))) ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c2)&(rt0.c2)))) AND ((rt0.c0 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0, vt0 NATURAL JOIN v0 ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c2)&(rt0.c2)))) AND ((rt0.c0 COLLATE NOCASE)))  NULLS LAST);
SELECT ALL * FROM t0, rt0, vt0 NATURAL JOIN v0 WHERE ((NOT (rt0.c2 COLLATE NOCASE))) ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c2)&(rt0.c2)))) AND ((rt0.c0 COLLATE NOCASE)))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (MAX(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)<(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((MAX(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)<(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (MAX(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)<(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((MAX(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)<(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (MAX(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)<(v0.c0))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (UNLIKELY(DISTINCT ((rt0.c0)&(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((rt0.c0)&(vt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (UNLIKELY(DISTINCT ((rt0.c0)&(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((rt0.c0)&(vt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (UNLIKELY(DISTINCT ((rt0.c0)&(vt0.c0))));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (NOT ((rt0.c1 IN (v0.c0)))) LEFT OUTER JOIN t0 ON ((((((vt0.c0)OR(v0.c0)))AND(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(t0.c0)))OR(x'e3e92e8f'))) AND (rt0.c2)) CROSS JOIN v0 ON (((((((((~ (t0.c0)))OR((NOT (rt0.c2)))))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END)))AND(((rt0.c0)||(vt0.c0)))))AND(((rt0.c0)>=(rt0.c1)))) WHERE (CASE WHEN NULL THEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) WHEN ((rt0.c2) NOTNULL) THEN CAST(t0.c0 AS REAL) WHEN CASE rt0.c2  WHEN rt0.c0 THEN x'' ELSE rt0.c1 END THEN (+ (vt0.c0)) END) ORDER BY ((((((rt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)))AND(LOWER(rt0.c2))))AND(CASE rt0.c1  WHEN v0.c0 THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) WHEN ((rt0.c2) NOTNULL) THEN CAST(t0.c0 AS REAL) WHEN CASE rt0.c2  WHEN rt0.c0 THEN x'' ELSE rt0.c1 END THEN (+ (vt0.c0)) END) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (NOT ((rt0.c1 IN (v0.c0)))) LEFT OUTER JOIN t0 ON ((((((vt0.c0)OR(v0.c0)))AND(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(t0.c0)))OR(x'e3e92e8f'))) AND (rt0.c2)) CROSS JOIN v0 ON (((((((((~ (t0.c0)))OR((NOT (rt0.c2)))))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END)))AND(((rt0.c0)||(vt0.c0)))))AND(((rt0.c0)>=(rt0.c1)))) ORDER BY ((((((rt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)))AND(LOWER(rt0.c2))))AND(CASE rt0.c1  WHEN v0.c0 THEN rt0.c0 END)));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (NOT ((rt0.c1 IN (v0.c0)))) LEFT OUTER JOIN t0 ON ((((((vt0.c0)OR(v0.c0)))AND(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(t0.c0)))OR(x'e3e92e8f'))) AND (rt0.c2)) CROSS JOIN v0 ON (((((((((~ (t0.c0)))OR((NOT (rt0.c2)))))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END)))AND(((rt0.c0)||(vt0.c0)))))AND(((rt0.c0)>=(rt0.c1)))) WHERE (CASE WHEN NULL THEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) WHEN ((rt0.c2) NOTNULL) THEN CAST(t0.c0 AS REAL) WHEN CASE rt0.c2  WHEN rt0.c0 THEN x'' ELSE rt0.c1 END THEN (+ (vt0.c0)) END) ORDER BY ((((((rt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)))AND(LOWER(rt0.c2))))AND(CASE rt0.c1  WHEN v0.c0 THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) WHEN ((rt0.c2) NOTNULL) THEN CAST(t0.c0 AS REAL) WHEN CASE rt0.c2  WHEN rt0.c0 THEN x'' ELSE rt0.c1 END THEN (+ (vt0.c0)) END) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (NOT ((rt0.c1 IN (v0.c0)))) LEFT OUTER JOIN t0 ON ((((((vt0.c0)OR(v0.c0)))AND(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(t0.c0)))OR(x'e3e92e8f'))) AND (rt0.c2)) CROSS JOIN v0 ON (((((((((~ (t0.c0)))OR((NOT (rt0.c2)))))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END)))AND(((rt0.c0)||(vt0.c0)))))AND(((rt0.c0)>=(rt0.c1)))) ORDER BY ((((((rt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)))AND(LOWER(rt0.c2))))AND(CASE rt0.c1  WHEN v0.c0 THEN rt0.c0 END)));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (NOT ((rt0.c1 IN (v0.c0)))) LEFT OUTER JOIN t0 ON ((((((vt0.c0)OR(v0.c0)))AND(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(t0.c0)))OR(x'e3e92e8f'))) AND (rt0.c2)) CROSS JOIN v0 ON (((((((((~ (t0.c0)))OR((NOT (rt0.c2)))))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END)))AND(((rt0.c0)||(vt0.c0)))))AND(((rt0.c0)>=(rt0.c1)))) WHERE (CASE WHEN NULL THEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) WHEN ((rt0.c2) NOTNULL) THEN CAST(t0.c0 AS REAL) WHEN CASE rt0.c2  WHEN rt0.c0 THEN x'' ELSE rt0.c1 END THEN (+ (vt0.c0)) END) ORDER BY ((((((rt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)))AND(LOWER(rt0.c2))))AND(CASE rt0.c1  WHEN v0.c0 THEN rt0.c0 END));
SELECT COUNT(*) FROM t0 CROSS JOIN v0 ON ((((t0.c0)==(t0.c0))) ISNULL) WHERE (((t0.c0)*(v0.c0)) COLLATE RTRIM) ORDER BY json_array_length(((((v0.c0)AND(t0.c0)))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((t0.c0)*(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON ((((t0.c0)==(t0.c0))) ISNULL) ORDER BY json_array_length(((((v0.c0)AND(t0.c0)))AND(v0.c0))));
SELECT COUNT(*) FROM t0 CROSS JOIN v0 ON ((((t0.c0)==(t0.c0))) ISNULL) WHERE (((t0.c0)*(v0.c0)) COLLATE RTRIM) ORDER BY json_array_length(((((v0.c0)AND(t0.c0)))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((t0.c0)*(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON ((((t0.c0)==(t0.c0))) ISNULL) ORDER BY json_array_length(((((v0.c0)AND(t0.c0)))AND(v0.c0))));
SELECT COUNT(*) FROM t0 CROSS JOIN v0 ON ((((t0.c0)==(t0.c0))) ISNULL) WHERE (((t0.c0)*(v0.c0)) COLLATE RTRIM) ORDER BY json_array_length(((((v0.c0)AND(t0.c0)))AND(v0.c0)));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((v0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((v0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0 IN ()) IN ()));
SELECT * FROM vt0 WHERE ((((- (vt0.c0)))LIKE(vt0.c0))) ORDER BY CASE COALESCE(DISTINCT vt0.c0, vt0.c0)  WHEN NULLIF(vt0.c0, vt0.c0) THEN (NOT (vt0.c0)) WHEN ((NULL)>=(vt0.c0)) THEN ((NULL)<=(vt0.c0)) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN SUBSTR(vt0.c0, vt0.c0) WHEN (- (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN '!m\n7' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN x'' COLLATE NOCASE THEN ((vt0.c0)IS(vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))LIKE(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CASE COALESCE(DISTINCT vt0.c0, vt0.c0)  WHEN NULLIF(vt0.c0, vt0.c0) THEN (NOT (vt0.c0)) WHEN ((NULL)>=(vt0.c0)) THEN ((NULL)<=(vt0.c0)) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN SUBSTR(vt0.c0, vt0.c0) WHEN (- (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN '!m\n7' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN x'' COLLATE NOCASE THEN ((vt0.c0)IS(vt0.c0)) END DESC);
SELECT * FROM vt0 WHERE ((((- (vt0.c0)))LIKE(vt0.c0))) ORDER BY CASE COALESCE(DISTINCT vt0.c0, vt0.c0)  WHEN NULLIF(vt0.c0, vt0.c0) THEN (NOT (vt0.c0)) WHEN ((NULL)>=(vt0.c0)) THEN ((NULL)<=(vt0.c0)) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN SUBSTR(vt0.c0, vt0.c0) WHEN (- (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN '!m\n7' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN x'' COLLATE NOCASE THEN ((vt0.c0)IS(vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))LIKE(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CASE COALESCE(DISTINCT vt0.c0, vt0.c0)  WHEN NULLIF(vt0.c0, vt0.c0) THEN (NOT (vt0.c0)) WHEN ((NULL)>=(vt0.c0)) THEN ((NULL)<=(vt0.c0)) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN SUBSTR(vt0.c0, vt0.c0) WHEN (- (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN '!m\n7' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN x'' COLLATE NOCASE THEN ((vt0.c0)IS(vt0.c0)) END DESC);
SELECT * FROM vt0 WHERE ((((- (vt0.c0)))LIKE(vt0.c0))) ORDER BY CASE COALESCE(DISTINCT vt0.c0, vt0.c0)  WHEN NULLIF(vt0.c0, vt0.c0) THEN (NOT (vt0.c0)) WHEN ((NULL)>=(vt0.c0)) THEN ((NULL)<=(vt0.c0)) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN SUBSTR(vt0.c0, vt0.c0) WHEN (- (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN '!m\n7' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN x'' COLLATE NOCASE THEN ((vt0.c0)IS(vt0.c0)) END DESC;
SELECT ALL * FROM vt0, v0, t0 RIGHT OUTER JOIN rt0 ON '䯜''' WHERE (CASE ((t0.c0) NOTNULL)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN rt0.c0 ELSE t0.c0 COLLATE RTRIM END) ORDER BY NULL, (((rt0.c0 IN ())) NOT BETWEEN (((((vt0.c0)OR('')))OR(rt0.c0))) AND (((rt0.c0)>=(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) NOTNULL)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN rt0.c0 ELSE t0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, v0, t0 RIGHT OUTER JOIN rt0 ON '䯜''' ORDER BY NULL, (((rt0.c0 IN ())) NOT BETWEEN (((((vt0.c0)OR('')))OR(rt0.c0))) AND (((rt0.c0)>=(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0, v0, t0 RIGHT OUTER JOIN rt0 ON '䯜''' WHERE (CASE ((t0.c0) NOTNULL)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN rt0.c0 ELSE t0.c0 COLLATE RTRIM END) ORDER BY NULL, (((rt0.c0 IN ())) NOT BETWEEN (((((vt0.c0)OR('')))OR(rt0.c0))) AND (((rt0.c0)>=(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) NOTNULL)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN rt0.c0 ELSE t0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, v0, t0 RIGHT OUTER JOIN rt0 ON '䯜''' ORDER BY NULL, (((rt0.c0 IN ())) NOT BETWEEN (((((vt0.c0)OR('')))OR(rt0.c0))) AND (((rt0.c0)>=(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0, v0, t0 RIGHT OUTER JOIN rt0 ON '䯜''' WHERE (CASE ((t0.c0) NOTNULL)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN rt0.c0 ELSE t0.c0 COLLATE RTRIM END) ORDER BY NULL, (((rt0.c0 IN ())) NOT BETWEEN (((((vt0.c0)OR('')))OR(rt0.c0))) AND (((rt0.c0)>=(vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON (((NOT (rt0.c1))) NOT NULL) RIGHT OUTER JOIN t0 ON CAST(TIME(rt0.c2, v0.c0, rt0.c0) AS INTEGER) INNER JOIN rt0 ON ((((((rt0.c2) NOTNULL))OR(t0.c0 COLLATE BINARY)))AND(((vt0.c0)AND(rt0.c0)))) WHERE ((~ (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY ((((v0.c0) NOT NULL)) BETWEEN (rt0.c2) AND (v0.c0));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((NOT (rt0.c1))) NOT NULL) RIGHT OUTER JOIN t0 ON CAST(TIME(rt0.c2, v0.c0, rt0.c0) AS INTEGER) INNER JOIN rt0 ON ((((((rt0.c2) NOTNULL))OR(t0.c0 COLLATE BINARY)))AND(((vt0.c0)AND(rt0.c0)))) ORDER BY ((((v0.c0) NOT NULL)) BETWEEN (rt0.c2) AND (v0.c0)));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON (((NOT (rt0.c1))) NOT NULL) RIGHT OUTER JOIN t0 ON CAST(TIME(rt0.c2, v0.c0, rt0.c0) AS INTEGER) INNER JOIN rt0 ON ((((((rt0.c2) NOTNULL))OR(t0.c0 COLLATE BINARY)))AND(((vt0.c0)AND(rt0.c0)))) WHERE ((~ (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY ((((v0.c0) NOT NULL)) BETWEEN (rt0.c2) AND (v0.c0));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((NOT (rt0.c1))) NOT NULL) RIGHT OUTER JOIN t0 ON CAST(TIME(rt0.c2, v0.c0, rt0.c0) AS INTEGER) INNER JOIN rt0 ON ((((((rt0.c2) NOTNULL))OR(t0.c0 COLLATE BINARY)))AND(((vt0.c0)AND(rt0.c0)))) ORDER BY ((((v0.c0) NOT NULL)) BETWEEN (rt0.c2) AND (v0.c0)));
SELECT ALL * FROM vt0, v0 FULL OUTER JOIN t0 ON ((((rt0.c1)=(rt0.c1))) IS FALSE) CROSS JOIN rt0 ON ((((((((UNLIKELY(vt0.c0))AND(((t0.c0)IS NOT(rt0.c1)))))AND(x'' COLLATE RTRIM)))AND(((((v0.c0)OR(rt0.c2)))AND(t0.c0)))))OR((((vt0.c0))>=((rt0.c2))))) WHERE ((NOT (CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN t0 ON ((((rt0.c1)=(rt0.c1))) IS FALSE) CROSS JOIN rt0 ON ((((((((UNLIKELY(vt0.c0))AND(((t0.c0)IS NOT(rt0.c1)))))AND(x'' COLLATE RTRIM)))AND(((((v0.c0)OR(rt0.c2)))AND(t0.c0)))))OR((((vt0.c0))>=((rt0.c2))))));
SELECT ALL * FROM vt0, v0 FULL OUTER JOIN t0 ON ((((rt0.c1)=(rt0.c1))) IS FALSE) CROSS JOIN rt0 ON ((((((((UNLIKELY(vt0.c0))AND(((t0.c0)IS NOT(rt0.c1)))))AND(x'' COLLATE RTRIM)))AND(((((v0.c0)OR(rt0.c2)))AND(t0.c0)))))OR((((vt0.c0))>=((rt0.c2))))) WHERE ((NOT (CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN t0 ON ((((rt0.c1)=(rt0.c1))) IS FALSE) CROSS JOIN rt0 ON ((((((((UNLIKELY(vt0.c0))AND(((t0.c0)IS NOT(rt0.c1)))))AND(x'' COLLATE RTRIM)))AND(((((v0.c0)OR(rt0.c2)))AND(t0.c0)))))OR((((vt0.c0))>=((rt0.c2))))));
SELECT * FROM t0 WHERE (TRIM(json(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(json(t0.c0))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (TRIM(json(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(json(t0.c0))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (TRIM(json(t0.c0)));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CAST(0.6588914452104899 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(0.6588914452104899 AS BLOB)) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CAST(0.6588914452104899 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(0.6588914452104899 AS BLOB)) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CAST(0.6588914452104899 AS BLOB));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN ((NOT (rt0.c2))) AND ((~ (rt0.c2))))) ORDER BY CAST(HEX(rt0.c0) AS TEXT) DESC  NULLS FIRST, (NOT (((rt0.c1)<=(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN ((NOT (rt0.c2))) AND ((~ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(HEX(rt0.c0) AS TEXT) DESC  NULLS FIRST, (NOT (((rt0.c1)<=(rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN ((NOT (rt0.c2))) AND ((~ (rt0.c2))))) ORDER BY CAST(HEX(rt0.c0) AS TEXT) DESC  NULLS FIRST, (NOT (((rt0.c1)<=(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN ((NOT (rt0.c2))) AND ((~ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(HEX(rt0.c0) AS TEXT) DESC  NULLS FIRST, (NOT (((rt0.c1)<=(rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN ((NOT (rt0.c2))) AND ((~ (rt0.c2))))) ORDER BY CAST(HEX(rt0.c0) AS TEXT) DESC  NULLS FIRST, (NOT (((rt0.c1)<=(rt0.c0))))  NULLS FIRST;
SELECT ALL * FROM rt0, t0 WHERE (0xffffffff9a49efbe);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffff9a49efbe) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (0xffffffff9a49efbe);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffff9a49efbe) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (0xffffffff9a49efbe);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1 COLLATE NOCASE) NOTNULL) FULL OUTER JOIN v0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 END) IS FALSE) WHERE (((((((v0.c0)OR(rt0.c0)))OR(rt0.c0)))AND(((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))))) ORDER BY ((((v0.c0) NOTNULL)) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(rt0.c0)))OR(rt0.c0)))AND(((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1 COLLATE NOCASE) NOTNULL) FULL OUTER JOIN v0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 END) IS FALSE) ORDER BY ((((v0.c0) NOTNULL)) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1 COLLATE NOCASE) NOTNULL) FULL OUTER JOIN v0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 END) IS FALSE) WHERE (((((((v0.c0)OR(rt0.c0)))OR(rt0.c0)))AND(((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))))) ORDER BY ((((v0.c0) NOTNULL)) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(rt0.c0)))OR(rt0.c0)))AND(((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1 COLLATE NOCASE) NOTNULL) FULL OUTER JOIN v0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 END) IS FALSE) ORDER BY ((((v0.c0) NOTNULL)) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1 COLLATE NOCASE) NOTNULL) FULL OUTER JOIN v0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 END) IS FALSE) WHERE (((((((v0.c0)OR(rt0.c0)))OR(rt0.c0)))AND(((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))))) ORDER BY ((((v0.c0) NOTNULL)) NOT NULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c2);
SELECT * FROM t0 NATURAL JOIN rt0 WHERE (((rt0.c2) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT * FROM t0 NATURAL JOIN rt0 WHERE (((rt0.c2) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT * FROM t0 NATURAL JOIN rt0 WHERE (((rt0.c2) NOT NULL) COLLATE BINARY);
SELECT ALL * FROM v0 WHERE (((((v0.c0)||(v0.c0)))>=(((v0.c0)IS(0.022544842351499672))))) ORDER BY v0.c0 ASC, CASE WHEN ((v0.c0)+(v0.c0)) THEN CAST(v0.c0 AS INTEGER) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)||(v0.c0)))>=(((v0.c0)IS(0.022544842351499672))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC, CASE WHEN ((v0.c0)+(v0.c0)) THEN CAST(v0.c0 AS INTEGER) END DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((v0.c0)||(v0.c0)))>=(((v0.c0)IS(0.022544842351499672))))) ORDER BY v0.c0 ASC, CASE WHEN ((v0.c0)+(v0.c0)) THEN CAST(v0.c0 AS INTEGER) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)||(v0.c0)))>=(((v0.c0)IS(0.022544842351499672))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC, CASE WHEN ((v0.c0)+(v0.c0)) THEN CAST(v0.c0 AS INTEGER) END DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((v0.c0)||(v0.c0)))>=(((v0.c0)IS(0.022544842351499672))))) ORDER BY v0.c0 ASC, CASE WHEN ((v0.c0)+(v0.c0)) THEN CAST(v0.c0 AS INTEGER) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0, v0, vt0 WHERE ((((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) IN ())) ORDER BY CAST((rt0.c2 IN (rt0.c1, rt0.c1)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, t0, v0, vt0 ORDER BY CAST((rt0.c2 IN (rt0.c1, rt0.c1)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, t0, v0, vt0 WHERE ((((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) IN ())) ORDER BY CAST((rt0.c2 IN (rt0.c1, rt0.c1)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, t0, v0, vt0 ORDER BY CAST((rt0.c2 IN (rt0.c1, rt0.c1)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, t0, v0, vt0 WHERE ((((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) IN ())) ORDER BY CAST((rt0.c2 IN (rt0.c1, rt0.c1)) AS NUMERIC);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((CAST(t0.c0 AS TEXT)) IS FALSE) DESC  NULLS FIRST, (((t0.c0)) BETWEEN ((((t0.c0) ISNULL))) AND ((CAST(1069524569 AS REAL)))) ASC, 0.5307584858854514  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS TEXT)) IS FALSE) DESC  NULLS FIRST, (((t0.c0)) BETWEEN ((((t0.c0) ISNULL))) AND ((CAST(1069524569 AS REAL)))) ASC, 0.5307584858854514  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((CAST(t0.c0 AS TEXT)) IS FALSE) DESC  NULLS FIRST, (((t0.c0)) BETWEEN ((((t0.c0) ISNULL))) AND ((CAST(1069524569 AS REAL)))) ASC, 0.5307584858854514  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS TEXT)) IS FALSE) DESC  NULLS FIRST, (((t0.c0)) BETWEEN ((((t0.c0) ISNULL))) AND ((CAST(1069524569 AS REAL)))) ASC, 0.5307584858854514  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((CAST(t0.c0 AS TEXT)) IS FALSE) DESC  NULLS FIRST, (((t0.c0)) BETWEEN ((((t0.c0) ISNULL))) AND ((CAST(1069524569 AS REAL)))) ASC, 0.5307584858854514  NULLS LAST;
SELECT * FROM v0 WHERE (((x'' COLLATE BINARY)OR(((v0.c0)/(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE BINARY)OR(((v0.c0)/(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((x'' COLLATE BINARY)OR(((v0.c0)/(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE BINARY)OR(((v0.c0)/(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((x'' COLLATE BINARY)OR(((v0.c0)/(v0.c0)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((((v0.c0) IS FALSE)) NOT BETWEEN (rt0.c0) AND (((t0.c0)+(v0.c0)))) INNER JOIN t0 ON ((((((rt0.c0) NOT NULL))OR(((((((((vt0.c0)AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((rt0.c2)<('1265624963')))) INNER JOIN v0 ON json_array_length(CAST(v0.c0 AS REAL)) WHERE (CASE WHEN 0.45379815974272697 THEN ((((v0.c0)AND(t0.c0)))OR(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.45379815974272697 THEN ((((v0.c0)AND(t0.c0)))OR(v0.c0)) END) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((v0.c0) IS FALSE)) NOT BETWEEN (rt0.c0) AND (((t0.c0)+(v0.c0)))) INNER JOIN t0 ON ((((((rt0.c0) NOT NULL))OR(((((((((vt0.c0)AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((rt0.c2)<('1265624963')))) INNER JOIN v0 ON json_array_length(CAST(v0.c0 AS REAL)));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((((v0.c0) IS FALSE)) NOT BETWEEN (rt0.c0) AND (((t0.c0)+(v0.c0)))) INNER JOIN t0 ON ((((((rt0.c0) NOT NULL))OR(((((((((vt0.c0)AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((rt0.c2)<('1265624963')))) INNER JOIN v0 ON json_array_length(CAST(v0.c0 AS REAL)) WHERE (CASE WHEN 0.45379815974272697 THEN ((((v0.c0)AND(t0.c0)))OR(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.45379815974272697 THEN ((((v0.c0)AND(t0.c0)))OR(v0.c0)) END) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((v0.c0) IS FALSE)) NOT BETWEEN (rt0.c0) AND (((t0.c0)+(v0.c0)))) INNER JOIN t0 ON ((((((rt0.c0) NOT NULL))OR(((((((((vt0.c0)AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((rt0.c2)<('1265624963')))) INNER JOIN v0 ON json_array_length(CAST(v0.c0 AS REAL)));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((((v0.c0) IS FALSE)) NOT BETWEEN (rt0.c0) AND (((t0.c0)+(v0.c0)))) INNER JOIN t0 ON ((((((rt0.c0) NOT NULL))OR(((((((((vt0.c0)AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((rt0.c2)<('1265624963')))) INNER JOIN v0 ON json_array_length(CAST(v0.c0 AS REAL)) WHERE (CASE WHEN 0.45379815974272697 THEN ((((v0.c0)AND(t0.c0)))OR(v0.c0)) END);
SELECT ALL COUNT(*) FROM rt0, t0, vt0, v0 WHERE (((((vt0.c0)<=(rt0.c2)))%(((t0.c0) NOT BETWEEN ('-851798941') AND (vt0.c0))))) ORDER BY ((rt0.c2)%(x'')) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(rt0.c2)))%(((t0.c0) NOT BETWEEN ('-851798941') AND (vt0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0, v0 ORDER BY ((rt0.c2)%(x'')) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0, v0 WHERE (((((vt0.c0)<=(rt0.c2)))%(((t0.c0) NOT BETWEEN ('-851798941') AND (vt0.c0))))) ORDER BY ((rt0.c2)%(x'')) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(rt0.c2)))%(((t0.c0) NOT BETWEEN ('-851798941') AND (vt0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0, v0 ORDER BY ((rt0.c2)%(x'')) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0, v0 WHERE (((((vt0.c0)<=(rt0.c2)))%(((t0.c0) NOT BETWEEN ('-851798941') AND (vt0.c0))))) ORDER BY ((rt0.c2)%(x'')) COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON 'koC{nxR' WHERE (((rt0.c0) IS FALSE) COLLATE NOCASE) ORDER BY (((((rt0.c1 IN ()))OR(CAST(NULL AS NUMERIC))))AND(CASE WHEN t0.c0 THEN rt0.c1 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON 'koC{nxR' ORDER BY (((((rt0.c1 IN ()))OR(CAST(NULL AS NUMERIC))))AND(CASE WHEN t0.c0 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON 'koC{nxR' WHERE (((rt0.c0) IS FALSE) COLLATE NOCASE) ORDER BY (((((rt0.c1 IN ()))OR(CAST(NULL AS NUMERIC))))AND(CASE WHEN t0.c0 THEN rt0.c1 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON 'koC{nxR' ORDER BY (((((rt0.c1 IN ()))OR(CAST(NULL AS NUMERIC))))AND(CASE WHEN t0.c0 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON 'koC{nxR' WHERE (((rt0.c0) IS FALSE) COLLATE NOCASE) ORDER BY (((((rt0.c1 IN ()))OR(CAST(NULL AS NUMERIC))))AND(CASE WHEN t0.c0 THEN rt0.c1 ELSE rt0.c1 END));
SELECT * FROM v0 WHERE (CAST(((v0.c0)OR(0.21351513348609552)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)OR(0.21351513348609552)) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(((v0.c0)OR(0.21351513348609552)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)OR(0.21351513348609552)) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(((v0.c0)OR(0.21351513348609552)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CHANGES())LIKE(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CHANGES())LIKE(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CHANGES())LIKE(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CHANGES())LIKE(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CHANGES())LIKE(vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0, v0, vt0 FULL OUTER JOIN rt0 ON (- (v0.c0 COLLATE BINARY)) WHERE (((rt0.c2) BETWEEN (((rt0.c2) NOTNULL)) AND (rt0.c0))) ORDER BY (NOT (((rt0.c0)!=(-3.47701452E8))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (((rt0.c2) NOTNULL)) AND (rt0.c0))) IS TRUE)  as count FROM t0, v0, vt0 FULL OUTER JOIN rt0 ON (- (v0.c0 COLLATE BINARY)) ORDER BY (NOT (((rt0.c0)<>(-3.47701452E8)))));
SELECT ALL COUNT(*) FROM t0, v0, vt0 FULL OUTER JOIN rt0 ON (- (v0.c0 COLLATE BINARY)) WHERE (((rt0.c2) BETWEEN (((rt0.c2) NOTNULL)) AND (rt0.c0))) ORDER BY (NOT (((rt0.c0)!=(-3.47701452E8))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (((rt0.c2) NOTNULL)) AND (rt0.c0))) IS TRUE)  as count FROM t0, v0, vt0 FULL OUTER JOIN rt0 ON (- (v0.c0 COLLATE BINARY)) ORDER BY (NOT (((rt0.c0)<>(-3.47701452E8)))));
SELECT ALL COUNT(*) FROM t0, v0, vt0 FULL OUTER JOIN rt0 ON (- (v0.c0 COLLATE BINARY)) WHERE (((rt0.c2) BETWEEN (((rt0.c2) NOTNULL)) AND (rt0.c0))) ORDER BY (NOT (((rt0.c0)!=(-3.47701452E8))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((t0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((LOWER('-347701452'), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)), ((((rt0.c1)OR('2004671701')))OR(rt0.c1)))) AND ((t0.c0, (rt0.c1 IN ()), CASE rt0.c0  WHEN '2113166518' THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((LOWER('-347701452'), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)), ((((rt0.c1)OR('2004671701')))OR(rt0.c1)))) AND ((t0.c0, (rt0.c1 IN ()), CASE rt0.c0  WHEN '2113166518' THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((t0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((LOWER('-347701452'), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)), ((((rt0.c1)OR('2004671701')))OR(rt0.c1)))) AND ((t0.c0, (rt0.c1 IN ()), CASE rt0.c0  WHEN '2113166518' THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((LOWER('-347701452'), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)), ((((rt0.c1)OR('2004671701')))OR(rt0.c1)))) AND ((t0.c0, (rt0.c1 IN ()), CASE rt0.c0  WHEN '2113166518' THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((t0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((LOWER('-347701452'), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)), ((((rt0.c1)OR('2004671701')))OR(rt0.c1)))) AND ((t0.c0, (rt0.c1 IN ()), CASE rt0.c0  WHEN '2113166518' THEN vt0.c0 END))));
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (QUOTE(((vt0.c0) NOT NULL))) ORDER BY LIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((QUOTE(((vt0.c0) NOT NULL))) IS TRUE)  as count FROM vt0 ORDER BY LIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (QUOTE(((vt0.c0) NOT NULL))) ORDER BY LIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((QUOTE(((vt0.c0) NOT NULL))) IS TRUE)  as count FROM vt0 ORDER BY LIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (QUOTE(((vt0.c0) NOT NULL))) ORDER BY LIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ASC  NULLS FIRST;
SELECT ALL * FROM t0, v0 WHERE ((UPPER(t0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((UPPER(t0.c0) IN ())) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ((UPPER(t0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((UPPER(t0.c0) IN ())) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ((UPPER(t0.c0) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (CASE json_array_length(NULL)  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE json_array_length(NULL)  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE json_array_length(NULL)  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE json_array_length(NULL)  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE json_array_length(NULL)  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) IS TRUE) END);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0 IN ())) BETWEEN ('-2037411912') AND (t0.c0))) ORDER BY CAST(((t0.c0)<(t0.c0)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) BETWEEN ('-2037411912') AND (t0.c0))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0)<(t0.c0)) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0 IN ())) BETWEEN ('-2037411912') AND (t0.c0))) ORDER BY CAST(((t0.c0)<(t0.c0)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) BETWEEN ('-2037411912') AND (t0.c0))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0)<(t0.c0)) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0 IN ())) BETWEEN ('-2037411912') AND (t0.c0))) ORDER BY CAST(((t0.c0)<(t0.c0)) AS BLOB)  NULLS FIRST;
SELECT * FROM v0 WHERE (NULL) ORDER BY CASE v0.c0 COLLATE RTRIM  WHEN ((v0.c0)/(x'')) THEN ((v0.c0) NOT NULL) ELSE ((v0.c0)|(v0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY CASE v0.c0 COLLATE RTRIM  WHEN ((v0.c0)/(x'')) THEN ((v0.c0) NOT NULL) ELSE ((v0.c0)|(v0.c0)) END DESC);
SELECT * FROM v0 WHERE (NULL) ORDER BY CASE v0.c0 COLLATE RTRIM  WHEN ((v0.c0)/(x'')) THEN ((v0.c0) NOT NULL) ELSE ((v0.c0)|(v0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY CASE v0.c0 COLLATE RTRIM  WHEN ((v0.c0)/(x'')) THEN ((v0.c0) NOT NULL) ELSE ((v0.c0)|(v0.c0)) END DESC);
SELECT * FROM v0 WHERE (NULL) ORDER BY CASE v0.c0 COLLATE RTRIM  WHEN ((v0.c0)/(x'')) THEN ((v0.c0) NOT NULL) ELSE ((v0.c0)|(v0.c0)) END DESC;
SELECT * FROM vt0, v0 INNER JOIN rt0 ON ((((rt0.c1)+(vt0.c0))) NOTNULL) WHERE (CASE WHEN (((rt0.c0, v0.c0, v0.c0))=((v0.c0, rt0.c2, rt0.c0))) THEN 0Xffffffffff1931a1 ELSE (((v0.c0, rt0.c0, rt0.c0))>=((rt0.c2, rt0.c1, rt0.c2))) END) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END) BETWEEN (CAST(0x3451913f AS BLOB)) AND (((vt0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c0, v0.c0, v0.c0))=((v0.c0, rt0.c2, rt0.c0))) THEN 0xffffffffff1931a1 ELSE (((v0.c0, rt0.c0, rt0.c0))>=((rt0.c2, rt0.c1, rt0.c2))) END) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON ((((rt0.c1)+(vt0.c0))) NOTNULL) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END) BETWEEN (CAST(0x3451913f AS BLOB)) AND (((vt0.c0) NOTNULL))) DESC);
SELECT * FROM vt0, v0 INNER JOIN rt0 ON ((((rt0.c1)+(vt0.c0))) NOTNULL) WHERE (CASE WHEN (((rt0.c0, v0.c0, v0.c0))=((v0.c0, rt0.c2, rt0.c0))) THEN 0Xffffffffff1931a1 ELSE (((v0.c0, rt0.c0, rt0.c0))>=((rt0.c2, rt0.c1, rt0.c2))) END) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END) BETWEEN (CAST(0x3451913f AS BLOB)) AND (((vt0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c0, v0.c0, v0.c0))=((v0.c0, rt0.c2, rt0.c0))) THEN 0xffffffffff1931a1 ELSE (((v0.c0, rt0.c0, rt0.c0))>=((rt0.c2, rt0.c1, rt0.c2))) END) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON ((((rt0.c1)+(vt0.c0))) NOTNULL) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END) BETWEEN (CAST(0x3451913f AS BLOB)) AND (((vt0.c0) NOTNULL))) DESC);
SELECT * FROM vt0, v0 INNER JOIN rt0 ON ((((rt0.c1)+(vt0.c0))) NOTNULL) WHERE (CASE WHEN (((rt0.c0, v0.c0, v0.c0))=((v0.c0, rt0.c2, rt0.c0))) THEN 0Xffffffffff1931a1 ELSE (((v0.c0, rt0.c0, rt0.c0))>=((rt0.c2, rt0.c1, rt0.c2))) END) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END) BETWEEN (CAST(0x3451913f AS BLOB)) AND (((vt0.c0) NOTNULL))) DESC;
SELECT ALL COUNT(*) FROM rt0, v0, t0 WHERE ((((((t0.c0)) NOT BETWEEN ((0.3860346073155422)) AND ((rt0.c1)))) BETWEEN (((rt0.c0) IS FALSE)) AND (HEX(v0.c0)))) ORDER BY (((((rt0.c2) NOT NULL)))<=((rt0.c0 COLLATE BINARY))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) NOT BETWEEN ((0.3860346073155422)) AND ((rt0.c1)))) BETWEEN (((rt0.c0) IS FALSE)) AND (HEX(v0.c0)))) IS TRUE)  as count FROM rt0, v0, t0 ORDER BY (((((rt0.c2) NOT NULL)))<=((rt0.c0 COLLATE BINARY))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0, t0 WHERE ((((((t0.c0)) NOT BETWEEN ((0.3860346073155422)) AND ((rt0.c1)))) BETWEEN (((rt0.c0) IS FALSE)) AND (HEX(v0.c0)))) ORDER BY (((((rt0.c2) NOT NULL)))<=((rt0.c0 COLLATE BINARY))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) NOT BETWEEN ((0.3860346073155422)) AND ((rt0.c1)))) BETWEEN (((rt0.c0) IS FALSE)) AND (HEX(v0.c0)))) IS TRUE)  as count FROM rt0, v0, t0 ORDER BY (((((rt0.c2) NOT NULL)))<=((rt0.c0 COLLATE BINARY))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0, t0 WHERE ((((((t0.c0)) NOT BETWEEN ((0.3860346073155422)) AND ((rt0.c1)))) BETWEEN (((rt0.c0) IS FALSE)) AND (HEX(v0.c0)))) ORDER BY (((((rt0.c2) NOT NULL)))<=((rt0.c0 COLLATE BINARY))) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0)>>(-1e500)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)>>(-1e500)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0)>>(-1e500)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)>>(-1e500)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0)>>(-1e500)) AS NUMERIC));
SELECT ALL * FROM v0, rt0, vt0 WHERE (((UNLIKELY(v0.c0))*((NOT (vt0.c0))))) ORDER BY v0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(v0.c0))*((NOT (vt0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY v0.c0 DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((UNLIKELY(v0.c0))*((NOT (vt0.c0))))) ORDER BY v0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(v0.c0))*((NOT (vt0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY v0.c0 DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((UNLIKELY(v0.c0))*((NOT (vt0.c0))))) ORDER BY v0.c0 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((((((((v0.c0))<>((v0.c0))))OR(LOWER(v0.c0))))OR(((v0.c0) IS FALSE))))OR((+ (v0.c0)))))AND((v0.c0 IN (vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((v0.c0))<>((v0.c0))))OR(LOWER(v0.c0))))OR(((v0.c0) IS FALSE))))OR((+ (v0.c0)))))AND((v0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((((((((v0.c0))<>((v0.c0))))OR(LOWER(v0.c0))))OR(((v0.c0) IS FALSE))))OR((+ (v0.c0)))))AND((v0.c0 IN (vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((v0.c0))<>((v0.c0))))OR(LOWER(v0.c0))))OR(((v0.c0) IS FALSE))))OR((+ (v0.c0)))))AND((v0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((((((((v0.c0))<>((v0.c0))))OR(LOWER(v0.c0))))OR(((v0.c0) IS FALSE))))OR((+ (v0.c0)))))AND((v0.c0 IN (vt0.c0, vt0.c0)))));
SELECT ALL * FROM rt0, t0 RIGHT OUTER JOIN vt0 ON CASE WHEN '	>☀}t <+K' THEN (('rt')/(vt0.c0)) ELSE (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) END RIGHT OUTER JOIN v0 ON CASE WHEN t0.c0 COLLATE BINARY THEN ((((rt0.c1)OR(v0.c0)))OR(t0.c0)) WHEN ((rt0.c0)GLOB(rt0.c2)) THEN (((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c2))) WHEN LIKELY(rt0.c2) THEN NULL END WHERE ((((((NOT (rt0.c1)))AND(TYPEOF(vt0.c0))))AND(((NULL)>>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt0.c1)))AND(TYPEOF(vt0.c0))))AND(((NULL)>>(rt0.c0))))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt0 ON CASE WHEN '	>☀}t <+K' THEN (('rt')/(vt0.c0)) ELSE (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) END RIGHT OUTER JOIN v0 ON CASE WHEN t0.c0 COLLATE BINARY THEN ((((rt0.c1)OR(v0.c0)))OR(t0.c0)) WHEN ((rt0.c0)GLOB(rt0.c2)) THEN (((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c2))) WHEN LIKELY(rt0.c2) THEN NULL END);
SELECT ALL * FROM rt0, t0 RIGHT OUTER JOIN vt0 ON CASE WHEN '	>☀}t <+K' THEN (('rt')/(vt0.c0)) ELSE (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) END RIGHT OUTER JOIN v0 ON CASE WHEN t0.c0 COLLATE BINARY THEN ((((rt0.c1)OR(v0.c0)))OR(t0.c0)) WHEN ((rt0.c0)GLOB(rt0.c2)) THEN (((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c2))) WHEN LIKELY(rt0.c2) THEN NULL END WHERE ((((((NOT (rt0.c1)))AND(TYPEOF(vt0.c0))))AND(((NULL)>>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt0.c1)))AND(TYPEOF(vt0.c0))))AND(((NULL)>>(rt0.c0))))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt0 ON CASE WHEN '	>☀}t <+K' THEN (('rt')/(vt0.c0)) ELSE (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) END RIGHT OUTER JOIN v0 ON CASE WHEN t0.c0 COLLATE BINARY THEN ((((rt0.c1)OR(v0.c0)))OR(t0.c0)) WHEN ((rt0.c0)GLOB(rt0.c2)) THEN (((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c2))) WHEN LIKELY(rt0.c2) THEN NULL END);
SELECT ALL * FROM rt0, t0 RIGHT OUTER JOIN vt0 ON CASE WHEN '	>☀}t <+K' THEN (('rt')/(vt0.c0)) ELSE (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) END RIGHT OUTER JOIN v0 ON CASE WHEN t0.c0 COLLATE BINARY THEN ((((rt0.c1)OR(v0.c0)))OR(t0.c0)) WHEN ((rt0.c0)GLOB(rt0.c2)) THEN (((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c2))) WHEN LIKELY(rt0.c2) THEN NULL END WHERE ((((((NOT (rt0.c1)))AND(TYPEOF(vt0.c0))))AND(((NULL)>>(rt0.c0)))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (LIKELIHOOD(CASE WHEN t0.c0 THEN v0.c0 END, 0.09692821165782695)) ORDER BY ((((CASE WHEN t0.c0 THEN v0.c0 END)AND(CASE WHEN t0.c0 THEN v0.c0 ELSE '748737034' END)))AND(CAST(v0.c0 AS BLOB))) DESC  NULLS FIRST, t0.c0  NULLS FIRST, (((((t0.c0)) BETWEEN ((0X113d3b65)) AND ((v0.c0)))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(CASE WHEN t0.c0 THEN v0.c0 END, 0.09692821165782695)) IS TRUE)  as count FROM v0, t0 ORDER BY ((((CASE WHEN t0.c0 THEN v0.c0 END)AND(CASE WHEN t0.c0 THEN v0.c0 ELSE '748737034' END)))AND(CAST(v0.c0 AS BLOB))) DESC  NULLS FIRST, t0.c0  NULLS FIRST, (((((t0.c0)) BETWEEN ((0x113d3b65)) AND ((v0.c0)))) NOT NULL));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (LIKELIHOOD(CASE WHEN t0.c0 THEN v0.c0 END, 0.09692821165782695)) ORDER BY ((((CASE WHEN t0.c0 THEN v0.c0 END)AND(CASE WHEN t0.c0 THEN v0.c0 ELSE '748737034' END)))AND(CAST(v0.c0 AS BLOB))) DESC  NULLS FIRST, t0.c0  NULLS FIRST, (((((t0.c0)) BETWEEN ((0X113d3b65)) AND ((v0.c0)))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(CASE WHEN t0.c0 THEN v0.c0 END, 0.09692821165782695)) IS TRUE)  as count FROM v0, t0 ORDER BY ((((CASE WHEN t0.c0 THEN v0.c0 END)AND(CASE WHEN t0.c0 THEN v0.c0 ELSE '748737034' END)))AND(CAST(v0.c0 AS BLOB))) DESC  NULLS FIRST, t0.c0  NULLS FIRST, (((((t0.c0)) BETWEEN ((0x113d3b65)) AND ((v0.c0)))) NOT NULL));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (LIKELIHOOD(CASE WHEN t0.c0 THEN v0.c0 END, 0.09692821165782695)) ORDER BY ((((CASE WHEN t0.c0 THEN v0.c0 END)AND(CASE WHEN t0.c0 THEN v0.c0 ELSE '748737034' END)))AND(CAST(v0.c0 AS BLOB))) DESC  NULLS FIRST, t0.c0  NULLS FIRST, (((((t0.c0)) BETWEEN ((0X113d3b65)) AND ((v0.c0)))) NOT NULL);
SELECT ALL * FROM v0, vt0, rt0 WHERE (LIKELY(DISTINCT (+ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (+ (rt0.c1)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (LIKELY(DISTINCT (+ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (+ (rt0.c1)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (LIKELY(DISTINCT (+ (rt0.c1))));
SELECT COUNT(*) FROM t0, v0, rt0, vt0 WHERE (((((((t0.c0) IS FALSE))OR(CAST('(M' AS TEXT))))AND(((t0.c0) ISNULL)))) ORDER BY ((((v0.c0 IN ())))<(((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c0)))))), (~ (((vt0.c0)=('2jB\n)p叿T'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0) IS FALSE))OR(CAST('(M' AS TEXT))))AND(((t0.c0) ISNULL)))) IS TRUE)  as count FROM t0, v0, rt0, vt0 ORDER BY ((((v0.c0 IN ())))<(((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c0)))))), (~ (((vt0.c0)=('2jB\n)p叿T'))))  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, rt0, vt0 WHERE (((((((t0.c0) IS FALSE))OR(CAST('(M' AS TEXT))))AND(((t0.c0) ISNULL)))) ORDER BY ((((v0.c0 IN ())))<(((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c0)))))), (~ (((vt0.c0)=('2jB\n)p叿T'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0) IS FALSE))OR(CAST('(M' AS TEXT))))AND(((t0.c0) ISNULL)))) IS TRUE)  as count FROM t0, v0, rt0, vt0 ORDER BY ((((v0.c0 IN ())))<(((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c0)))))), (~ (((vt0.c0)=('2jB\n)p叿T'))))  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, rt0, vt0 WHERE (((((((t0.c0) IS FALSE))OR(CAST('(M' AS TEXT))))AND(((t0.c0) ISNULL)))) ORDER BY ((((v0.c0 IN ())))<(((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c0)))))), (~ (((vt0.c0)=('2jB\n)p叿T'))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE ((((((((((((rt0.c0)OR(v0.c0)))AND(rt0.c0)))AND(v0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(1.265624963E9))  WHEN (NOT (rt0.c0)) THEN rt0.c1 WHEN (rt0.c2 IN ()) THEN CASE 2.069342706E9  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN (('-490549976')/(rt0.c2)) THEN (((rt0.c1, rt0.c2, rt0.c1))>=((rt0.c1, v0.c0, rt0.c0))) WHEN CASE WHEN '0.9526238344446154' THEN rt0.c0 ELSE rt0.c0 END THEN ((rt0.c1)>(rt0.c1)) WHEN ((rt0.c1)LIKE(rt0.c0)) THEN ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) END) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))<=(((rt0.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((((((rt0.c0)OR(v0.c0)))AND(rt0.c0)))AND(v0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(1.265624963E9))  WHEN (NOT (rt0.c0)) THEN rt0.c1 WHEN (rt0.c2 IN ()) THEN CASE 2.069342706E9  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN (('-490549976')/(rt0.c2)) THEN (((rt0.c1, rt0.c2, rt0.c1))>=((rt0.c1, v0.c0, rt0.c0))) WHEN CASE WHEN '0.9526238344446154' THEN rt0.c0 ELSE rt0.c0 END THEN ((rt0.c1)>(rt0.c1)) WHEN ((rt0.c1)LIKE(rt0.c0)) THEN ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))<=(((rt0.c0) IS FALSE)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE ((((((((((((rt0.c0)OR(v0.c0)))AND(rt0.c0)))AND(v0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(1.265624963E9))  WHEN (NOT (rt0.c0)) THEN rt0.c1 WHEN (rt0.c2 IN ()) THEN CASE 2.069342706E9  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN (('-490549976')/(rt0.c2)) THEN (((rt0.c1, rt0.c2, rt0.c1))>=((rt0.c1, v0.c0, rt0.c0))) WHEN CASE WHEN '0.9526238344446154' THEN rt0.c0 ELSE rt0.c0 END THEN ((rt0.c1)>(rt0.c1)) WHEN ((rt0.c1)LIKE(rt0.c0)) THEN ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) END) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))<=(((rt0.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((((((rt0.c0)OR(v0.c0)))AND(rt0.c0)))AND(v0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(1.265624963E9))  WHEN (NOT (rt0.c0)) THEN rt0.c1 WHEN (rt0.c2 IN ()) THEN CASE 2.069342706E9  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN (('-490549976')/(rt0.c2)) THEN (((rt0.c1, rt0.c2, rt0.c1))>=((rt0.c1, v0.c0, rt0.c0))) WHEN CASE WHEN '0.9526238344446154' THEN rt0.c0 ELSE rt0.c0 END THEN ((rt0.c1)>(rt0.c1)) WHEN ((rt0.c1)LIKE(rt0.c0)) THEN ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))<=(((rt0.c0) IS FALSE)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE ((((((((((((rt0.c0)OR(v0.c0)))AND(rt0.c0)))AND(v0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(1.265624963E9))  WHEN (NOT (rt0.c0)) THEN rt0.c1 WHEN (rt0.c2 IN ()) THEN CASE 2.069342706E9  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN (('-490549976')/(rt0.c2)) THEN (((rt0.c1, rt0.c2, rt0.c1))>=((rt0.c1, v0.c0, rt0.c0))) WHEN CASE WHEN '0.9526238344446154' THEN rt0.c0 ELSE rt0.c0 END THEN ((rt0.c1)>(rt0.c1)) WHEN ((rt0.c1)LIKE(rt0.c0)) THEN ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) END) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))<=(((rt0.c0) IS FALSE)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 RIGHT OUTER JOIN v0 ON ((((((rt0.c1) NOTNULL))AND(UNLIKELY(DISTINCT rt0.c1))))OR('253777789')) WHERE (rt0.c0) ORDER BY rt0.c2 DESC  NULLS FIRST, CAST(((930011735) IS TRUE) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, vt0, rt0 RIGHT OUTER JOIN v0 ON ((((((rt0.c1) NOTNULL))AND(UNLIKELY(DISTINCT rt0.c1))))OR('253777789')) ORDER BY rt0.c2 DESC  NULLS FIRST, CAST(((930011735) IS TRUE) AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 RIGHT OUTER JOIN v0 ON ((((((rt0.c1) NOTNULL))AND(UNLIKELY(DISTINCT rt0.c1))))OR('253777789')) WHERE (rt0.c0) ORDER BY rt0.c2 DESC  NULLS FIRST, CAST(((930011735) IS TRUE) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, vt0, rt0 RIGHT OUTER JOIN v0 ON ((((((rt0.c1) NOTNULL))AND(UNLIKELY(DISTINCT rt0.c1))))OR('253777789')) ORDER BY rt0.c2 DESC  NULLS FIRST, CAST(((930011735) IS TRUE) AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 RIGHT OUTER JOIN v0 ON ((((((rt0.c1) NOTNULL))AND(UNLIKELY(DISTINCT rt0.c1))))OR('253777789')) WHERE (rt0.c0) ORDER BY rt0.c2 DESC  NULLS FIRST, CAST(((930011735) IS TRUE) AS TEXT)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ('') ORDER BY CASE WHEN vt0.c0 THEN t0.c0 END;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CASE WHEN vt0.c0 THEN t0.c0 END);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ('') ORDER BY CASE WHEN vt0.c0 THEN t0.c0 END;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CASE WHEN vt0.c0 THEN t0.c0 END);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ('') ORDER BY CASE WHEN vt0.c0 THEN t0.c0 END;
SELECT ALL * FROM vt0 INNER JOIN v0 ON (((CASE WHEN v0.c0 THEN vt0.c0 ELSE 0x1b3acbda END, (t0.c0 IN ()), (t0.c0 IN ())))==(((('Qx9c') NOT BETWEEN (t0.c0) AND (vt0.c0)), ((((((((t0.c0)OR(v0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(vt0.c0)), (((NULL, t0.c0, ''))>=((t0.c0, '', NULL)))))) FULL OUTER JOIN t0 ON ((x'') BETWEEN (IFNULL(DISTINCT t0.c0, vt0.c0)) AND ((+ (vt0.c0)))) WHERE (v0.c0) ORDER BY (~ (load_extension(t0.c0))) ASC  NULLS LAST, ((CAST(t0.c0 AS NUMERIC))*((((0.24509250189757914, t0.c0, t0.c0, v0.c0, v0.c0)) NOT BETWEEN (('-1898473685', v0.c0, t0.c0, v0.c0, t0.c0)) AND ((vt0.c0, t0.c0, 'M~guu.)6k', '', t0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((CASE WHEN v0.c0 THEN vt0.c0 ELSE 0x1b3acbda END, (t0.c0 IN ()), (t0.c0 IN ())))=(((('Qx9c') NOT BETWEEN (t0.c0) AND (vt0.c0)), ((((((((t0.c0)OR(v0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(vt0.c0)), (((NULL, t0.c0, ''))>=((t0.c0, '', NULL)))))) FULL OUTER JOIN t0 ON ((x'') BETWEEN (IFNULL(DISTINCT t0.c0, vt0.c0)) AND ((+ (vt0.c0)))) ORDER BY (~ (load_extension(t0.c0))) ASC  NULLS LAST, ((CAST(t0.c0 AS NUMERIC))*((((0.24509250189757914, t0.c0, t0.c0, v0.c0, v0.c0)) NOT BETWEEN (('-1898473685', v0.c0, t0.c0, v0.c0, t0.c0)) AND ((vt0.c0, t0.c0, 'M~guu.)6k', '', t0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 INNER JOIN v0 ON (((CASE WHEN v0.c0 THEN vt0.c0 ELSE 0x1b3acbda END, (t0.c0 IN ()), (t0.c0 IN ())))==(((('Qx9c') NOT BETWEEN (t0.c0) AND (vt0.c0)), ((((((((t0.c0)OR(v0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(vt0.c0)), (((NULL, t0.c0, ''))>=((t0.c0, '', NULL)))))) FULL OUTER JOIN t0 ON ((x'') BETWEEN (IFNULL(DISTINCT t0.c0, vt0.c0)) AND ((+ (vt0.c0)))) WHERE (v0.c0) ORDER BY (~ (load_extension(t0.c0))) ASC  NULLS LAST, ((CAST(t0.c0 AS NUMERIC))*((((0.24509250189757914, t0.c0, t0.c0, v0.c0, v0.c0)) NOT BETWEEN (('-1898473685', v0.c0, t0.c0, v0.c0, t0.c0)) AND ((vt0.c0, t0.c0, 'M~guu.)6k', '', t0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((CASE WHEN v0.c0 THEN vt0.c0 ELSE 0x1b3acbda END, (t0.c0 IN ()), (t0.c0 IN ())))=(((('Qx9c') NOT BETWEEN (t0.c0) AND (vt0.c0)), ((((((((t0.c0)OR(v0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(vt0.c0)), (((NULL, t0.c0, ''))>=((t0.c0, '', NULL)))))) FULL OUTER JOIN t0 ON ((x'') BETWEEN (IFNULL(DISTINCT t0.c0, vt0.c0)) AND ((+ (vt0.c0)))) ORDER BY (~ (load_extension(t0.c0))) ASC  NULLS LAST, ((CAST(t0.c0 AS NUMERIC))*((((0.24509250189757914, t0.c0, t0.c0, v0.c0, v0.c0)) NOT BETWEEN (('-1898473685', v0.c0, t0.c0, v0.c0, t0.c0)) AND ((vt0.c0, t0.c0, 'M~guu.)6k', '', t0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON TIME((((v0.c0))<((t0.c0))), ((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)), SUBSTR(NULL, rt0.c2)) FULL OUTER JOIN t0 ON LIKE(TRIM(DISTINCT rt0.c0, rt0.c0), CAST(rt0.c0 AS INTEGER), '*') CROSS JOIN v0 ON ((0.5413495777743721)<<(0.14783878929360228)) WHERE (RTRIM(vt0.c0)) ORDER BY CASE WHEN ((0.2273181386532409) IS FALSE) THEN (rt0.c0 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((RTRIM(vt0.c0)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON TIME((((v0.c0))<((t0.c0))), ((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)), SUBSTR(NULL, rt0.c2)) FULL OUTER JOIN t0 ON LIKE(TRIM(DISTINCT rt0.c0, rt0.c0), CAST(rt0.c0 AS INTEGER), '*') CROSS JOIN v0 ON ((0.5413495777743721)<<(0.14783878929360228)) ORDER BY CASE WHEN ((0.2273181386532409) IS FALSE) THEN (rt0.c0 IN ()) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON TIME((((v0.c0))<((t0.c0))), ((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)), SUBSTR(NULL, rt0.c2)) FULL OUTER JOIN t0 ON LIKE(TRIM(DISTINCT rt0.c0, rt0.c0), CAST(rt0.c0 AS INTEGER), '*') CROSS JOIN v0 ON ((0.5413495777743721)<<(0.14783878929360228)) WHERE (RTRIM(vt0.c0)) ORDER BY CASE WHEN ((0.2273181386532409) IS FALSE) THEN (rt0.c0 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((RTRIM(vt0.c0)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON TIME((((v0.c0))<((t0.c0))), ((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)), SUBSTR(NULL, rt0.c2)) FULL OUTER JOIN t0 ON LIKE(TRIM(DISTINCT rt0.c0, rt0.c0), CAST(rt0.c0 AS INTEGER), '*') CROSS JOIN v0 ON ((0.5413495777743721)<<(0.14783878929360228)) ORDER BY CASE WHEN ((0.2273181386532409) IS FALSE) THEN (rt0.c0 IN ()) END  NULLS FIRST);
SELECT * FROM t0 WHERE ((NOT (0.8593290151492787))) ORDER BY ((0.595705863369003) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (0.8593290151492787))) IS TRUE)  as count FROM t0 ORDER BY ((0.595705863369003) NOTNULL) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE ((NOT (0.8593290151492787))) ORDER BY ((0.595705863369003) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (0.8593290151492787))) IS TRUE)  as count FROM t0 ORDER BY ((0.595705863369003) NOTNULL) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE ((NOT (0.8593290151492787))) ORDER BY ((0.595705863369003) NOTNULL) DESC  NULLS FIRST;
SELECT * FROM rt0, t0, vt0 WHERE ((((rt0.c1 COLLATE NOCASE, LIKELIHOOD(DISTINCT rt0.c1, 0.671743798553656), 0.9312742211711119))<>(((- (rt0.c2)), ('1265624963' IN (rt0.c2)), t0.c0)))) ORDER BY ((rt0.c1 IN ()) IN (((rt0.c0) ISNULL), vt0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 COLLATE NOCASE, LIKELIHOOD(DISTINCT rt0.c1, 0.671743798553656), 0.9312742211711119))!=(((- (rt0.c2)), ('1265624963' IN (rt0.c2)), t0.c0)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((rt0.c1 IN ()) IN (((rt0.c0) ISNULL), vt0.c0 COLLATE BINARY)) ASC);
SELECT * FROM rt0, t0, vt0 WHERE ((((rt0.c1 COLLATE NOCASE, LIKELIHOOD(DISTINCT rt0.c1, 0.671743798553656), 0.9312742211711119))<>(((- (rt0.c2)), ('1265624963' IN (rt0.c2)), t0.c0)))) ORDER BY ((rt0.c1 IN ()) IN (((rt0.c0) ISNULL), vt0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 COLLATE NOCASE, LIKELIHOOD(DISTINCT rt0.c1, 0.671743798553656), 0.9312742211711119))!=(((- (rt0.c2)), ('1265624963' IN (rt0.c2)), t0.c0)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((rt0.c1 IN ()) IN (((rt0.c0) ISNULL), vt0.c0 COLLATE BINARY)) ASC);
SELECT * FROM rt0, t0, vt0 WHERE ((((rt0.c1 COLLATE NOCASE, LIKELIHOOD(DISTINCT rt0.c1, 0.671743798553656), 0.9312742211711119))<>(((- (rt0.c2)), ('1265624963' IN (rt0.c2)), t0.c0)))) ORDER BY ((rt0.c1 IN ()) IN (((rt0.c0) ISNULL), vt0.c0 COLLATE BINARY)) ASC;
SELECT ALL * FROM vt0, rt0, v0, t0 WHERE ((((v0.c0, v0.c0, vt0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE, CAST(rt0.c0 AS REAL), CASE WHEN t0.c0 THEN vt0.c0 END)) AND ((((vt0.c0)/(rt0.c0)), ((rt0.c0)OR('	6Gz3,Z㽵~')), rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, vt0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE, CAST(rt0.c0 AS REAL), CASE WHEN t0.c0 THEN vt0.c0 END)) AND ((((vt0.c0)/(rt0.c0)), ((rt0.c0)OR('	6Gz3,Z㽵~')), rt0.c2)))) IS TRUE)  as count FROM vt0, rt0, v0, t0);
SELECT ALL * FROM vt0, rt0, v0, t0 WHERE ((((v0.c0, v0.c0, vt0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE, CAST(rt0.c0 AS REAL), CASE WHEN t0.c0 THEN vt0.c0 END)) AND ((((vt0.c0)/(rt0.c0)), ((rt0.c0)OR('	6Gz3,Z㽵~')), rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, vt0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE, CAST(rt0.c0 AS REAL), CASE WHEN t0.c0 THEN vt0.c0 END)) AND ((((vt0.c0)/(rt0.c0)), ((rt0.c0)OR('	6Gz3,Z㽵~')), rt0.c2)))) IS TRUE)  as count FROM vt0, rt0, v0, t0);
SELECT ALL * FROM vt0, rt0, v0, t0 WHERE ((((v0.c0, v0.c0, vt0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE, CAST(rt0.c0 AS REAL), CASE WHEN t0.c0 THEN vt0.c0 END)) AND ((((vt0.c0)/(rt0.c0)), ((rt0.c0)OR('	6Gz3,Z㽵~')), rt0.c2))));
SELECT COUNT(*) FROM t0, vt0, v0 FULL OUTER JOIN rt0 ON ((((rt0.c2 COLLATE BINARY)AND('-104162870')))OR(((((t0.c0)OR(rt0.c0)))AND(rt0.c1)))) WHERE (((CAST(rt0.c2 AS NUMERIC)) NOTNULL)) ORDER BY (((NULL))<>((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS NUMERIC)) NOTNULL)) IS TRUE)  as count FROM t0, vt0, v0 FULL OUTER JOIN rt0 ON ((((rt0.c2 COLLATE BINARY)AND('-104162870')))OR(((((t0.c0)OR(rt0.c0)))AND(rt0.c1)))) ORDER BY (((NULL))<>((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 END))));
SELECT COUNT(*) FROM t0, vt0, v0 FULL OUTER JOIN rt0 ON ((((rt0.c2 COLLATE BINARY)AND('-104162870')))OR(((((t0.c0)OR(rt0.c0)))AND(rt0.c1)))) WHERE (((CAST(rt0.c2 AS NUMERIC)) NOTNULL)) ORDER BY (((NULL))<>((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS NUMERIC)) NOTNULL)) IS TRUE)  as count FROM t0, vt0, v0 FULL OUTER JOIN rt0 ON ((((rt0.c2 COLLATE BINARY)AND('-104162870')))OR(((((t0.c0)OR(rt0.c0)))AND(rt0.c1)))) ORDER BY (((NULL))<>((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 END))));
SELECT COUNT(*) FROM t0, vt0, v0 FULL OUTER JOIN rt0 ON ((((rt0.c2 COLLATE BINARY)AND('-104162870')))OR(((((t0.c0)OR(rt0.c0)))AND(rt0.c1)))) WHERE (((CAST(rt0.c2 AS NUMERIC)) NOTNULL)) ORDER BY (((NULL))<>((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 END)));
SELECT * FROM t0, vt0 WHERE ((~ (t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((~ (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((~ (t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((~ (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((~ (t0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0, rt0, v0, vt0 WHERE (LIKELY(DISTINCT ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) IS TRUE)  as count FROM t0, rt0, v0, vt0 ORDER BY rt0.c2 DESC);
SELECT ALL COUNT(*) FROM t0, rt0, v0, vt0 WHERE (LIKELY(DISTINCT ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) IS TRUE)  as count FROM t0, rt0, v0, vt0 ORDER BY rt0.c2 DESC);
SELECT ALL COUNT(*) FROM t0, rt0, v0, vt0 WHERE (LIKELY(DISTINCT ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) ORDER BY rt0.c2 DESC;
SELECT COUNT(*) FROM rt0, t0 CROSS JOIN vt0 ON t0.c0 WHERE ((((~ (rt0.c2))) NOTNULL)) ORDER BY (((vt0.c0 IN ()))&(CAST(rt0.c1 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt0 ON t0.c0 ORDER BY (((vt0.c0 IN ()))&(CAST(rt0.c1 AS INTEGER))) ASC);
SELECT COUNT(*) FROM rt0, t0 CROSS JOIN vt0 ON t0.c0 WHERE ((((~ (rt0.c2))) NOTNULL)) ORDER BY (((vt0.c0 IN ()))&(CAST(rt0.c1 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt0 ON t0.c0 ORDER BY (((vt0.c0 IN ()))&(CAST(rt0.c1 AS INTEGER))) ASC);
SELECT COUNT(*) FROM rt0, t0 CROSS JOIN vt0 ON t0.c0 WHERE ((((~ (rt0.c2))) NOTNULL)) ORDER BY (((vt0.c0 IN ()))&(CAST(rt0.c1 AS INTEGER))) ASC;
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON CASE WHEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END THEN (((vt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))) END RIGHT OUTER JOIN vt0 ON CAST('擯_3' AS TEXT) WHERE (((((v0.c0)>>(vt0.c0))) NOT NULL)) ORDER BY CAST(DATE(rt0.c2, vt0.c0, NULL) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>>(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON CASE WHEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END THEN (((vt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))) END RIGHT OUTER JOIN vt0 ON CAST('擯_3' AS TEXT) ORDER BY CAST(DATE(rt0.c2, vt0.c0, NULL) AS TEXT)  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON CASE WHEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END THEN (((vt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))) END RIGHT OUTER JOIN vt0 ON CAST('擯_3' AS TEXT) WHERE (((((v0.c0)>>(vt0.c0))) NOT NULL)) ORDER BY CAST(DATE(rt0.c2, vt0.c0, NULL) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>>(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON CASE WHEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END THEN (((vt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))) END RIGHT OUTER JOIN vt0 ON CAST('擯_3' AS TEXT) ORDER BY CAST(DATE(rt0.c2, vt0.c0, NULL) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN CAST(vt0.c0 AS BLOB) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.5697568501811514))) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0) NOT NULL) THEN CAST(vt0.c0 AS REAL) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((((((vt0.c0)OR(vt0.c0)))OR('oz')))AND(vt0.c0)))AND(vt0.c0)) WHEN ((0x5d27626a)<>(vt0.c0)) THEN vt0.c0 ELSE ((((((((vt0.c0)OR(0.45466983173339937)))OR(NULL)))OR(vt0.c0)))AND(vt0.c0)) END) ORDER BY LIKELY(DISTINCT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN CAST(vt0.c0 AS BLOB) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.5697568501811514))) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0) NOT NULL) THEN CAST(vt0.c0 AS REAL) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((((((vt0.c0)OR(vt0.c0)))OR('oz')))AND(vt0.c0)))AND(vt0.c0)) WHEN ((0X5d27626a)<>(vt0.c0)) THEN vt0.c0 ELSE ((((((((vt0.c0)OR(0.45466983173339937)))OR(NULL)))OR(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY LIKELY(DISTINCT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN CAST(vt0.c0 AS BLOB) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.5697568501811514))) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0) NOT NULL) THEN CAST(vt0.c0 AS REAL) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((((((vt0.c0)OR(vt0.c0)))OR('oz')))AND(vt0.c0)))AND(vt0.c0)) WHEN ((0x5d27626a)<>(vt0.c0)) THEN vt0.c0 ELSE ((((((((vt0.c0)OR(0.45466983173339937)))OR(NULL)))OR(vt0.c0)))AND(vt0.c0)) END) ORDER BY LIKELY(DISTINCT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN CAST(vt0.c0 AS BLOB) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.5697568501811514))) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0) NOT NULL) THEN CAST(vt0.c0 AS REAL) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((((((vt0.c0)OR(vt0.c0)))OR('oz')))AND(vt0.c0)))AND(vt0.c0)) WHEN ((0X5d27626a)<>(vt0.c0)) THEN vt0.c0 ELSE ((((((((vt0.c0)OR(0.45466983173339937)))OR(NULL)))OR(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY LIKELY(DISTINCT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN CAST(vt0.c0 AS BLOB) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.5697568501811514))) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0) NOT NULL) THEN CAST(vt0.c0 AS REAL) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((((((vt0.c0)OR(vt0.c0)))OR('oz')))AND(vt0.c0)))AND(vt0.c0)) WHEN ((0x5d27626a)<>(vt0.c0)) THEN vt0.c0 ELSE ((((((((vt0.c0)OR(0.45466983173339937)))OR(NULL)))OR(vt0.c0)))AND(vt0.c0)) END) ORDER BY LIKELY(DISTINCT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) ASC  NULLS FIRST;
SELECT * FROM vt0, v0 INNER JOIN rt0 ON rt0.c1 COLLATE BINARY COLLATE BINARY WHERE (TYPEOF(DISTINCT LENGTH(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT LENGTH(rt0.c0))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON rt0.c1 COLLATE BINARY COLLATE BINARY);
SELECT * FROM vt0, v0 INNER JOIN rt0 ON rt0.c1 COLLATE BINARY COLLATE BINARY WHERE (TYPEOF(DISTINCT LENGTH(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT LENGTH(rt0.c0))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON rt0.c1 COLLATE BINARY COLLATE BINARY);
SELECT * FROM vt0, v0 INNER JOIN rt0 ON rt0.c1 COLLATE BINARY COLLATE BINARY WHERE (TYPEOF(DISTINCT LENGTH(rt0.c0)));
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE ((('b{onv)') IS FALSE));
SELECT SUM(count) FROM (SELECT (((('b{onv)') IS FALSE)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE ((('b{onv)') IS FALSE));
SELECT SUM(count) FROM (SELECT (((('b{onv)') IS FALSE)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE ((('b{onv)') IS FALSE));
SELECT COUNT(*) FROM t0, rt0, v0 WHERE (((((((((LOWER(v0.c0))OR(UPPER(DISTINCT t0.c0))))OR(((t0.c0) NOT NULL))))OR(NULL)))AND((+ (rt0.c2))))) ORDER BY (((rt0.c0 COLLATE RTRIM))>((rt0.c2 COLLATE NOCASE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((LOWER(v0.c0))OR(UPPER(DISTINCT t0.c0))))OR(((t0.c0) NOT NULL))))OR(NULL)))AND((+ (rt0.c2))))) IS TRUE)  as count FROM t0, rt0, v0 ORDER BY (((rt0.c0 COLLATE RTRIM))>((rt0.c2 COLLATE NOCASE))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, v0 WHERE (((((((((LOWER(v0.c0))OR(UPPER(DISTINCT t0.c0))))OR(((t0.c0) NOT NULL))))OR(NULL)))AND((+ (rt0.c2))))) ORDER BY (((rt0.c0 COLLATE RTRIM))>((rt0.c2 COLLATE NOCASE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((LOWER(v0.c0))OR(UPPER(DISTINCT t0.c0))))OR(((t0.c0) NOT NULL))))OR(NULL)))AND((+ (rt0.c2))))) IS TRUE)  as count FROM t0, rt0, v0 ORDER BY (((rt0.c0 COLLATE RTRIM))>((rt0.c2 COLLATE NOCASE))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, v0 WHERE (((((((((LOWER(v0.c0))OR(UPPER(DISTINCT t0.c0))))OR(((t0.c0) NOT NULL))))OR(NULL)))AND((+ (rt0.c2))))) ORDER BY (((rt0.c0 COLLATE RTRIM))>((rt0.c2 COLLATE NOCASE))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON ((PRINTF(vt0.c0)) IS FALSE) WHERE (((((CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(1.708896549E9)))AND(CAST(vt0.c0 AS REAL)))) ORDER BY 2.89225573E8 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(1.708896549E9)))AND(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((PRINTF(vt0.c0)) IS FALSE) ORDER BY 2.89225573E8 DESC);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON ((PRINTF(vt0.c0)) IS FALSE) WHERE (((((CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(1.708896549E9)))AND(CAST(vt0.c0 AS REAL)))) ORDER BY 2.89225573E8 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(1.708896549E9)))AND(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((PRINTF(vt0.c0)) IS FALSE) ORDER BY 2.89225573E8 DESC);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON ((PRINTF(vt0.c0)) IS FALSE) WHERE (((((CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(1.708896549E9)))AND(CAST(vt0.c0 AS REAL)))) ORDER BY 2.89225573E8 DESC;
SELECT * FROM vt0, t0, rt0 WHERE (((CAST(rt0.c0 AS INTEGER))+(((rt0.c2)%(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER))+(((rt0.c2)%(t0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (((CAST(rt0.c0 AS INTEGER))+(((rt0.c2)%(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER))+(((rt0.c2)%(t0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (((CAST(rt0.c0 AS INTEGER))+(((rt0.c2)%(t0.c0)))));
SELECT ALL * FROM vt0, v0, t0, rt0 WHERE (ABS(((t0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(((t0.c0) NOT NULL))) IS TRUE)  as count FROM vt0, v0, t0, rt0);
SELECT ALL * FROM vt0, v0, t0, rt0 WHERE (ABS(((t0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(((t0.c0) NOT NULL))) IS TRUE)  as count FROM vt0, v0, t0, rt0);
SELECT ALL * FROM vt0, v0, t0, rt0 WHERE (ABS(((t0.c0) NOT NULL)));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c0) IS FALSE) COLLATE NOCASE COLLATE RTRIM WHERE (((CASE WHEN v0.c0 THEN t0.c0 END) NOT NULL)) ORDER BY ((t0.c0) IS FALSE) ASC, ((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)) COLLATE BINARY ASC, (((NOT (v0.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN t0.c0 END) NOT NULL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c0) IS FALSE) COLLATE NOCASE COLLATE RTRIM ORDER BY ((t0.c0) IS FALSE) ASC, ((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)) COLLATE BINARY ASC, (((NOT (v0.c0))) IS TRUE) ASC);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c0) IS FALSE) COLLATE NOCASE COLLATE RTRIM WHERE (((CASE WHEN v0.c0 THEN t0.c0 END) NOT NULL)) ORDER BY ((t0.c0) IS FALSE) ASC, ((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)) COLLATE BINARY ASC, (((NOT (v0.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN t0.c0 END) NOT NULL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c0) IS FALSE) COLLATE NOCASE COLLATE RTRIM ORDER BY ((t0.c0) IS FALSE) ASC, ((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)) COLLATE BINARY ASC, (((NOT (v0.c0))) IS TRUE) ASC);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c0) IS FALSE) COLLATE NOCASE COLLATE RTRIM WHERE (((CASE WHEN v0.c0 THEN t0.c0 END) NOT NULL)) ORDER BY ((t0.c0) IS FALSE) ASC, ((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)) COLLATE BINARY ASC, (((NOT (v0.c0))) IS TRUE) ASC;
SELECT ALL COUNT(*) FROM t0, v0 WHERE (SQLITE_COMPILEOPTION_GET('740714296') COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET('740714296') COLLATE RTRIM) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (SQLITE_COMPILEOPTION_GET('740714296') COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET('740714296') COLLATE RTRIM) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (SQLITE_COMPILEOPTION_GET('740714296') COLLATE RTRIM);
SELECT * FROM vt0, t0 CROSS JOIN v0 ON (((t0.c0, v0.c0, CAST(t0.c0 AS REAL)))>((((v0.c0)==(t0.c0)), (((t0.c0, 0xffffffffea089639, vt0.c0)) NOT BETWEEN ((t0.c0, t0.c0, v0.c0)) AND ((t0.c0, v0.c0, v0.c0))), NULLIF(DISTINCT NULL, t0.c0)))) WHERE (NULLIF(COALESCE(v0.c0, t0.c0), ((vt0.c0) NOT NULL))) ORDER BY (+ (((v0.c0) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(COALESCE(v0.c0, t0.c0), ((vt0.c0) NOT NULL))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN v0 ON (((t0.c0, v0.c0, CAST(t0.c0 AS REAL)))>((((v0.c0)==(t0.c0)), (((t0.c0, 0Xffffffffea089639, vt0.c0)) NOT BETWEEN ((t0.c0, t0.c0, v0.c0)) AND ((t0.c0, v0.c0, v0.c0))), NULLIF(DISTINCT NULL, t0.c0)))) ORDER BY (+ (((v0.c0) ISNULL))) DESC);
SELECT * FROM vt0, t0 CROSS JOIN v0 ON (((t0.c0, v0.c0, CAST(t0.c0 AS REAL)))>((((v0.c0)==(t0.c0)), (((t0.c0, 0xffffffffea089639, vt0.c0)) NOT BETWEEN ((t0.c0, t0.c0, v0.c0)) AND ((t0.c0, v0.c0, v0.c0))), NULLIF(DISTINCT NULL, t0.c0)))) WHERE (NULLIF(COALESCE(v0.c0, t0.c0), ((vt0.c0) NOT NULL))) ORDER BY (+ (((v0.c0) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(COALESCE(v0.c0, t0.c0), ((vt0.c0) NOT NULL))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN v0 ON (((t0.c0, v0.c0, CAST(t0.c0 AS REAL)))>((((v0.c0)==(t0.c0)), (((t0.c0, 0Xffffffffea089639, vt0.c0)) NOT BETWEEN ((t0.c0, t0.c0, v0.c0)) AND ((t0.c0, v0.c0, v0.c0))), NULLIF(DISTINCT NULL, t0.c0)))) ORDER BY (+ (((v0.c0) ISNULL))) DESC);
SELECT * FROM vt0, t0 CROSS JOIN v0 ON (((t0.c0, v0.c0, CAST(t0.c0 AS REAL)))>((((v0.c0)==(t0.c0)), (((t0.c0, 0xffffffffea089639, vt0.c0)) NOT BETWEEN ((t0.c0, t0.c0, v0.c0)) AND ((t0.c0, v0.c0, v0.c0))), NULLIF(DISTINCT NULL, t0.c0)))) WHERE (NULLIF(COALESCE(v0.c0, t0.c0), ((vt0.c0) NOT NULL))) ORDER BY (+ (((v0.c0) ISNULL))) DESC;
SELECT * FROM rt0, vt0, t0, v0 WHERE (((((((t0.c0)AND(rt0.c2)))OR(rt0.c0))) BETWEEN (((((((((v0.c0)AND(v0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(rt0.c1))) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))%(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(rt0.c2)))OR(rt0.c0))) BETWEEN (((((((((v0.c0)AND(v0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(rt0.c1))) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, t0, v0 ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))%(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))  NULLS FIRST);
SELECT * FROM rt0, vt0, t0, v0 WHERE (((((((t0.c0)AND(rt0.c2)))OR(rt0.c0))) BETWEEN (((((((((v0.c0)AND(v0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(rt0.c1))) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))%(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(rt0.c2)))OR(rt0.c0))) BETWEEN (((((((((v0.c0)AND(v0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(rt0.c1))) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, t0, v0 ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))%(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))  NULLS FIRST);
SELECT * FROM rt0, vt0, t0, v0 WHERE (((((((t0.c0)AND(rt0.c2)))OR(rt0.c0))) BETWEEN (((((((((v0.c0)AND(v0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(rt0.c1))) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))%(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))  NULLS FIRST;
SELECT * FROM t0 WHERE ((((t0.c0) BETWEEN (x'') AND (t0.c0)) IN ())) ORDER BY ((((((((CAST(t0.c0 AS BLOB))OR(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))AND(0xffffffffa6992797)))OR(t0.c0)))AND(t0.c0));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) BETWEEN (x'') AND (t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((((((CAST(t0.c0 AS BLOB))OR(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))AND(0xffffffffa6992797)))OR(t0.c0)))AND(t0.c0)));
SELECT * FROM t0 WHERE ((((t0.c0) BETWEEN (x'') AND (t0.c0)) IN ())) ORDER BY ((((((((CAST(t0.c0 AS BLOB))OR(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))AND(0xffffffffa6992797)))OR(t0.c0)))AND(t0.c0));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) BETWEEN (x'') AND (t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((((((CAST(t0.c0 AS BLOB))OR(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))AND(0xffffffffa6992797)))OR(t0.c0)))AND(t0.c0)));
SELECT * FROM t0 WHERE ((((t0.c0) BETWEEN (x'') AND (t0.c0)) IN ())) ORDER BY ((((((((CAST(t0.c0 AS BLOB))OR(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))AND(0xffffffffa6992797)))OR(t0.c0)))AND(t0.c0));
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)AND(((vt0.c0)LIKE(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CAST(vt0.c0 AS BLOB))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(((vt0.c0)LIKE(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CAST(vt0.c0 AS BLOB))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)AND(((vt0.c0)LIKE(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CAST(vt0.c0 AS BLOB))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(((vt0.c0)LIKE(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CAST(vt0.c0 AS BLOB))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)AND(((vt0.c0)LIKE(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CAST(vt0.c0 AS BLOB))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0, t0, v0, vt0 WHERE ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) IN ())) ORDER BY (((rt0.c2)) BETWEEN (((((t0.c0))>((rt0.c1))))) AND ((CAST(rt0.c1 AS REAL)))) DESC  NULLS FIRST, CAST(v0.c0 AS TEXT) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) IN ())) IS TRUE)  as count FROM rt0, t0, v0, vt0 ORDER BY (((rt0.c2)) BETWEEN (((((t0.c0))>((rt0.c1))))) AND ((CAST(rt0.c1 AS REAL)))) DESC  NULLS FIRST, CAST(v0.c0 AS TEXT) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, t0, v0, vt0 WHERE ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) IN ())) ORDER BY (((rt0.c2)) BETWEEN (((((t0.c0))>((rt0.c1))))) AND ((CAST(rt0.c1 AS REAL)))) DESC  NULLS FIRST, CAST(v0.c0 AS TEXT) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) IN ())) IS TRUE)  as count FROM rt0, t0, v0, vt0 ORDER BY (((rt0.c2)) BETWEEN (((((t0.c0))>((rt0.c1))))) AND ((CAST(rt0.c1 AS REAL)))) DESC  NULLS FIRST, CAST(v0.c0 AS TEXT) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, t0, v0, vt0 WHERE ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) IN ())) ORDER BY (((rt0.c2)) BETWEEN (((((t0.c0))>((rt0.c1))))) AND ((CAST(rt0.c1 AS REAL)))) DESC  NULLS FIRST, CAST(v0.c0 AS TEXT) COLLATE NOCASE;
SELECT * FROM t0 WHERE (((t0.c0 COLLATE RTRIM) NOTNULL)) ORDER BY (((((t0.c0, NULL, t0.c0))<=((t0.c0, t0.c0, t0.c0))))GLOB(((t0.c0) BETWEEN (t0.c0) AND ('774282088'))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0, NULL, t0.c0))<=((t0.c0, t0.c0, t0.c0))))GLOB(((t0.c0) BETWEEN (t0.c0) AND ('774282088')))));
SELECT * FROM t0 WHERE (((t0.c0 COLLATE RTRIM) NOTNULL)) ORDER BY (((((t0.c0, NULL, t0.c0))<=((t0.c0, t0.c0, t0.c0))))GLOB(((t0.c0) BETWEEN (t0.c0) AND ('774282088'))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0, NULL, t0.c0))<=((t0.c0, t0.c0, t0.c0))))GLOB(((t0.c0) BETWEEN (t0.c0) AND ('774282088')))));
SELECT * FROM t0 WHERE (((t0.c0 COLLATE RTRIM) NOTNULL)) ORDER BY (((((t0.c0, NULL, t0.c0))<=((t0.c0, t0.c0, t0.c0))))GLOB(((t0.c0) BETWEEN (t0.c0) AND ('774282088'))));
SELECT ALL * FROM vt0, v0 WHERE (((NULL)>>(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((NULL)>>(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((NULL)>>(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((NULL)>>(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((NULL)>>(CAST(vt0.c0 AS BLOB))));
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((rt0.c1) NOT NULL)) NOTNULL)) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((rt0.c1) NOT NULL)) NOTNULL)) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((rt0.c1) NOT NULL)) NOTNULL)) ORDER BY NULL  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE(DISTINCT (('0a/')||(vt0.c0)), NULL));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (('0a/')||(vt0.c0)), NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE(DISTINCT (('0a/')||(vt0.c0)), NULL));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (('0a/')||(vt0.c0)), NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE(DISTINCT (('0a/')||(vt0.c0)), NULL));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((NULL) IS FALSE)) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) IS FALSE)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY rt0.c2 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((NULL) IS FALSE)) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) IS FALSE)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY rt0.c2 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((NULL) IS FALSE)) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT ALL * FROM rt0, t0, vt0 WHERE ((('560663830') BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM) ORDER BY (CAST(vt0.c0 AS REAL) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('560663830') BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (CAST(vt0.c0 AS REAL) IN ()) ASC);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((('560663830') BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM) ORDER BY (CAST(vt0.c0 AS REAL) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('560663830') BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (CAST(vt0.c0 AS REAL) IN ()) ASC);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((('560663830') BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM) ORDER BY (CAST(vt0.c0 AS REAL) IN ()) ASC;
SELECT ALL COUNT(*) FROM v0, rt0, vt0, t0 WHERE (CASE WHEN ((((((((rt0.c0)AND(x'')))OR(rt0.c2)))OR(t0.c0)))OR(v0.c0)) THEN CASE v0.c0  WHEN rt0.c2 THEN rt0.c2 END ELSE (+ (x'')) END) ORDER BY (((NOT ('/1IHeN.W'))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((rt0.c0)AND(x'')))OR(rt0.c2)))OR(t0.c0)))OR(v0.c0)) THEN CASE v0.c0  WHEN rt0.c2 THEN rt0.c2 END ELSE (+ (x'')) END) IS TRUE)  as count FROM v0, rt0, vt0, t0 ORDER BY (((NOT ('/1IHeN.W'))) NOT NULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0, t0 WHERE (CASE WHEN ((((((((rt0.c0)AND(x'')))OR(rt0.c2)))OR(t0.c0)))OR(v0.c0)) THEN CASE v0.c0  WHEN rt0.c2 THEN rt0.c2 END ELSE (+ (x'')) END) ORDER BY (((NOT ('/1IHeN.W'))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((rt0.c0)AND(x'')))OR(rt0.c2)))OR(t0.c0)))OR(v0.c0)) THEN CASE v0.c0  WHEN rt0.c2 THEN rt0.c2 END ELSE (+ (x'')) END) IS TRUE)  as count FROM v0, rt0, vt0, t0 ORDER BY (((NOT ('/1IHeN.W'))) NOT NULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0, t0 WHERE (CASE WHEN ((((((((rt0.c0)AND(x'')))OR(rt0.c2)))OR(t0.c0)))OR(v0.c0)) THEN CASE v0.c0  WHEN rt0.c2 THEN rt0.c2 END ELSE (+ (x'')) END) ORDER BY (((NOT ('/1IHeN.W'))) NOT NULL) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (CASE WHEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN (t0.c0 IN ()) WHEN TYPEOF(DISTINCT t0.c0) THEN t0.c0 WHEN t0.c0 COLLATE BINARY THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END ELSE t0.c0 END) ORDER BY CASE (NOT (t0.c0))  WHEN ((t0.c0)<(t0.c0)) THEN t0.c0 ELSE (NOT (t0.c0)) END;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN (t0.c0 IN ()) WHEN TYPEOF(DISTINCT t0.c0) THEN t0.c0 WHEN t0.c0 COLLATE BINARY THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END ELSE t0.c0 END) IS TRUE)  as count FROM t0 ORDER BY CASE (NOT (t0.c0))  WHEN ((t0.c0)<(t0.c0)) THEN t0.c0 ELSE (NOT (t0.c0)) END);
SELECT * FROM t0 WHERE (CASE WHEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN (t0.c0 IN ()) WHEN TYPEOF(DISTINCT t0.c0) THEN t0.c0 WHEN t0.c0 COLLATE BINARY THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END ELSE t0.c0 END) ORDER BY CASE (NOT (t0.c0))  WHEN ((t0.c0)<(t0.c0)) THEN t0.c0 ELSE (NOT (t0.c0)) END;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN (t0.c0 IN ()) WHEN TYPEOF(DISTINCT t0.c0) THEN t0.c0 WHEN t0.c0 COLLATE BINARY THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END ELSE t0.c0 END) IS TRUE)  as count FROM t0 ORDER BY CASE (NOT (t0.c0))  WHEN ((t0.c0)<(t0.c0)) THEN t0.c0 ELSE (NOT (t0.c0)) END);
SELECT * FROM t0 WHERE (CASE WHEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN (t0.c0 IN ()) WHEN TYPEOF(DISTINCT t0.c0) THEN t0.c0 WHEN t0.c0 COLLATE BINARY THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END ELSE t0.c0 END) ORDER BY CASE (NOT (t0.c0))  WHEN ((t0.c0)<(t0.c0)) THEN t0.c0 ELSE (NOT (t0.c0)) END;
SELECT COUNT(*) FROM t0, rt0, v0, vt0 WHERE ((NOT (CAST(rt0.c1 AS TEXT)))) ORDER BY CASE WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 END COLLATE BINARY ASC, CASE rt0.c1 COLLATE RTRIM  WHEN ((vt0.c0) ISNULL) THEN CASE WHEN rt0.c1 THEN t0.c0 END ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END, (((((rt0.c1) NOT NULL), (((rt0.c2))!=((t0.c0))), CAST(rt0.c0 AS NUMERIC)))<=((0.266522561812509, ((rt0.c0)+(t0.c0)), (('䯜''') IS TRUE)))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM t0, rt0, v0, vt0 ORDER BY CASE WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 END COLLATE BINARY ASC, CASE rt0.c1 COLLATE RTRIM  WHEN ((vt0.c0) ISNULL) THEN CASE WHEN rt0.c1 THEN t0.c0 END ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END, (((((rt0.c1) NOT NULL), (((rt0.c2))!=((t0.c0))), CAST(rt0.c0 AS NUMERIC)))<=((0.266522561812509, ((rt0.c0)+(t0.c0)), (('䯜''') IS TRUE)))) DESC);
SELECT COUNT(*) FROM t0, rt0, v0, vt0 WHERE ((NOT (CAST(rt0.c1 AS TEXT)))) ORDER BY CASE WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 END COLLATE BINARY ASC, CASE rt0.c1 COLLATE RTRIM  WHEN ((vt0.c0) ISNULL) THEN CASE WHEN rt0.c1 THEN t0.c0 END ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END, (((((rt0.c1) NOT NULL), (((rt0.c2))!=((t0.c0))), CAST(rt0.c0 AS NUMERIC)))<=((0.266522561812509, ((rt0.c0)+(t0.c0)), (('䯜''') IS TRUE)))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM t0, rt0, v0, vt0 ORDER BY CASE WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 END COLLATE BINARY ASC, CASE rt0.c1 COLLATE RTRIM  WHEN ((vt0.c0) ISNULL) THEN CASE WHEN rt0.c1 THEN t0.c0 END ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END, (((((rt0.c1) NOT NULL), (((rt0.c2))!=((t0.c0))), CAST(rt0.c0 AS NUMERIC)))<=((0.266522561812509, ((rt0.c0)+(t0.c0)), (('䯜''') IS TRUE)))) DESC);
SELECT COUNT(*) FROM t0, rt0, v0, vt0 WHERE ((NOT (CAST(rt0.c1 AS TEXT)))) ORDER BY CASE WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 END COLLATE BINARY ASC, CASE rt0.c1 COLLATE RTRIM  WHEN ((vt0.c0) ISNULL) THEN CASE WHEN rt0.c1 THEN t0.c0 END ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END, (((((rt0.c1) NOT NULL), (((rt0.c2))!=((t0.c0))), CAST(rt0.c0 AS NUMERIC)))<=((0.266522561812509, ((rt0.c0)+(t0.c0)), (('䯜''') IS TRUE)))) DESC;
SELECT COUNT(*) FROM rt0 WHERE (0.6913708598122981);
SELECT SUM(count) FROM (SELECT ALL ((0.6913708598122981) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0.6913708598122981);
SELECT SUM(count) FROM (SELECT ALL ((0.6913708598122981) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0.6913708598122981);
SELECT * FROM t0, vt0 WHERE (((((vt0.c0)>(vt0.c0)))==(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>(vt0.c0)))=(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt0 NOT INDEXED);
SELECT * FROM t0, vt0 WHERE (((((vt0.c0)>(vt0.c0)))==(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>(vt0.c0)))=(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt0 NOT INDEXED);
SELECT * FROM t0, vt0 WHERE (((((vt0.c0)>(vt0.c0)))==(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))));
SELECT ALL * FROM rt0 WHERE (((TYPEOF(DISTINCT rt0.c1))GLOB(((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT rt0.c1))GLOB(((((rt0.c1)OR(rt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((TYPEOF(DISTINCT rt0.c1))GLOB(((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT rt0.c1))GLOB(((((rt0.c1)OR(rt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((TYPEOF(DISTINCT rt0.c1))GLOB(((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))));
SELECT * FROM rt0, vt0, v0 WHERE (((UPPER(DISTINCT rt0.c2)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(DISTINCT rt0.c2)) NOT NULL)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (((UPPER(DISTINCT rt0.c2)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(DISTINCT rt0.c2)) NOT NULL)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (((UPPER(DISTINCT rt0.c2)) NOT NULL));
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((TYPEOF(t0.c0)) NOTNULL)) ORDER BY (- (((((vt0.c0)OR(t0.c0)))OR(vt0.c0)))) DESC  NULLS FIRST, ((vt0.c0)-(v0.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(t0.c0)) NOTNULL)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (- (((((vt0.c0)OR(t0.c0)))OR(vt0.c0)))) DESC  NULLS FIRST, ((vt0.c0)-(v0.c0)) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((TYPEOF(t0.c0)) NOTNULL)) ORDER BY (- (((((vt0.c0)OR(t0.c0)))OR(vt0.c0)))) DESC  NULLS FIRST, ((vt0.c0)-(v0.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(t0.c0)) NOTNULL)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (- (((((vt0.c0)OR(t0.c0)))OR(vt0.c0)))) DESC  NULLS FIRST, ((vt0.c0)-(v0.c0)) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((TYPEOF(t0.c0)) NOTNULL)) ORDER BY (- (((((vt0.c0)OR(t0.c0)))OR(vt0.c0)))) DESC  NULLS FIRST, ((vt0.c0)-(v0.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 NOT INDEXED, rt0, vt0, t0 WHERE ((((t0.c0)) BETWEEN ((CAST(t0.c0 AS INTEGER))) AND ((((vt0.c0)GLOB(rt0.c0)))))) ORDER BY ((((((((t0.c0 COLLATE BINARY)OR(0.24966409475924556)))OR(vt0.c0)))OR(CAST(rt0.c2 AS REAL))))AND(json_patch(rt0.c1, rt0.c2)))  NULLS LAST, (x'' IN (((rt0.c1) BETWEEN (t0.c0) AND (vt0.c0)), '256822951' COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((CAST(t0.c0 AS INTEGER))) AND ((((vt0.c0)GLOB(rt0.c0)))))) IS TRUE)  as count FROM v0, rt0, vt0, t0 ORDER BY ((((((((t0.c0 COLLATE BINARY)OR(0.24966409475924556)))OR(vt0.c0)))OR(CAST(rt0.c2 AS REAL))))AND(json_patch(rt0.c1, rt0.c2)))  NULLS LAST, (x'' IN (((rt0.c1) BETWEEN (t0.c0) AND (vt0.c0)), '256822951' COLLATE RTRIM)));
SELECT COUNT(*) FROM v0 NOT INDEXED, rt0, vt0, t0 WHERE ((((t0.c0)) BETWEEN ((CAST(t0.c0 AS INTEGER))) AND ((((vt0.c0)GLOB(rt0.c0)))))) ORDER BY ((((((((t0.c0 COLLATE BINARY)OR(0.24966409475924556)))OR(vt0.c0)))OR(CAST(rt0.c2 AS REAL))))AND(json_patch(rt0.c1, rt0.c2)))  NULLS LAST, (x'' IN (((rt0.c1) BETWEEN (t0.c0) AND (vt0.c0)), '256822951' COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((CAST(t0.c0 AS INTEGER))) AND ((((vt0.c0)GLOB(rt0.c0)))))) IS TRUE)  as count FROM v0, rt0, vt0, t0 ORDER BY ((((((((t0.c0 COLLATE BINARY)OR(0.24966409475924556)))OR(vt0.c0)))OR(CAST(rt0.c2 AS REAL))))AND(json_patch(rt0.c1, rt0.c2)))  NULLS LAST, (x'' IN (((rt0.c1) BETWEEN (t0.c0) AND (vt0.c0)), '256822951' COLLATE RTRIM)));
SELECT COUNT(*) FROM v0 NOT INDEXED, rt0, vt0, t0 WHERE ((((t0.c0)) BETWEEN ((CAST(t0.c0 AS INTEGER))) AND ((((vt0.c0)GLOB(rt0.c0)))))) ORDER BY ((((((((t0.c0 COLLATE BINARY)OR(0.24966409475924556)))OR(vt0.c0)))OR(CAST(rt0.c2 AS REAL))))AND(json_patch(rt0.c1, rt0.c2)))  NULLS LAST, (x'' IN (((rt0.c1) BETWEEN (t0.c0) AND (vt0.c0)), '256822951' COLLATE RTRIM));
SELECT COUNT(*) FROM t0, vt0 WHERE ((+ ('139804124')));
SELECT SUM(count) FROM (SELECT ALL (((+ ('139804124'))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((+ ('139804124')));
SELECT SUM(count) FROM (SELECT ALL (((+ ('139804124'))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((+ ('139804124')));
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS INTEGER)) ORDER BY (- (((x'') NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY (- (((x'') NOTNULL)))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS INTEGER)) ORDER BY (- (((x'') NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY (- (((x'') NOTNULL)))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS INTEGER)) ORDER BY (- (((x'') NOTNULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (ABS(DISTINCT ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (ABS(DISTINCT ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (ABS(DISTINCT ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT * FROM t0, v0, vt0 WHERE (PRINTF(COALESCE(DISTINCT t0.c0, v0.c0))) ORDER BY SUBSTR(0xffffffff8202a83a, (t0.c0 IN ())) ASC, ((((t0.c0) IS TRUE))|(((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((PRINTF(COALESCE(DISTINCT t0.c0, v0.c0))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY SUBSTR(0xffffffff8202a83a, (t0.c0 IN ())) ASC, ((((t0.c0) IS TRUE))|(((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC);
SELECT * FROM t0, v0, vt0 WHERE (PRINTF(COALESCE(DISTINCT t0.c0, v0.c0))) ORDER BY SUBSTR(0xffffffff8202a83a, (t0.c0 IN ())) ASC, ((((t0.c0) IS TRUE))|(((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((PRINTF(COALESCE(DISTINCT t0.c0, v0.c0))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY SUBSTR(0xffffffff8202a83a, (t0.c0 IN ())) ASC, ((((t0.c0) IS TRUE))|(((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC);
SELECT * FROM t0, v0, vt0 WHERE (PRINTF(COALESCE(DISTINCT t0.c0, v0.c0))) ORDER BY SUBSTR(0xffffffff8202a83a, (t0.c0 IN ())) ASC, ((((t0.c0) IS TRUE))|(((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT ALL * FROM rt0, v0 WHERE (CAST(((((v0.c0)AND(v0.c0)))AND(rt0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c0)AND(v0.c0)))AND(rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CAST(((((v0.c0)AND(v0.c0)))AND(rt0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c0)AND(v0.c0)))AND(rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CAST(((((v0.c0)AND(v0.c0)))AND(rt0.c2)) AS INTEGER));
SELECT * FROM rt0, v0, t0, vt0 WHERE ((+ (0.5396824724578724)));
SELECT SUM(count) FROM (SELECT (((+ (0.5396824724578724))) IS TRUE)  as count FROM rt0, v0, t0, vt0);
SELECT * FROM rt0, v0, t0, vt0 WHERE ((+ (0.5396824724578724)));
SELECT SUM(count) FROM (SELECT (((+ (0.5396824724578724))) IS TRUE)  as count FROM rt0, v0, t0, vt0);
SELECT * FROM rt0, v0, t0, vt0 WHERE ((+ (0.5396824724578724)));
SELECT * FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM);
SELECT * FROM v0 WHERE (CAST(((v0.c0)*(v0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)*(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(((v0.c0)*(v0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)*(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(((v0.c0)*(v0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0, v0 FULL OUTER JOIN rt0 ON ((((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))OR(vt0.c0)))AND(-1.393369347E9)))AND(rt0.c0)))AND(rt0.c2)))%('2113166518')) WHERE (((((vt0.c0) NOT NULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) NOT NULL)) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN rt0 ON ((((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))OR(vt0.c0)))AND(-1.393369347E9)))AND(rt0.c0)))AND(rt0.c2)))%('2113166518')));
SELECT ALL COUNT(*) FROM vt0, v0 FULL OUTER JOIN rt0 ON ((((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))OR(vt0.c0)))AND(-1.393369347E9)))AND(rt0.c0)))AND(rt0.c2)))%('2113166518')) WHERE (((((vt0.c0) NOT NULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) NOT NULL)) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN rt0 ON ((((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))OR(vt0.c0)))AND(-1.393369347E9)))AND(rt0.c0)))AND(rt0.c2)))%('2113166518')));
SELECT ALL COUNT(*) FROM vt0, v0 FULL OUTER JOIN rt0 ON ((((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))OR(vt0.c0)))AND(-1.393369347E9)))AND(rt0.c0)))AND(rt0.c2)))%('2113166518')) WHERE (((((vt0.c0) NOT NULL)) NOT NULL));
SELECT * FROM t0, vt0 WHERE (((vt0.c0) NOT BETWEEN (((((((((((((t0.c0)OR(x'1ae1')))AND(t0.c0)))OR(t0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(t0.c0))) AND ((('-555466891')+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (((((((((((((t0.c0)OR(x'1ae1')))AND(t0.c0)))OR(t0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(t0.c0))) AND ((('-555466891')+(vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((vt0.c0) NOT BETWEEN (((((((((((((t0.c0)OR(x'1ae1')))AND(t0.c0)))OR(t0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(t0.c0))) AND ((('-555466891')+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (((((((((((((t0.c0)OR(x'1ae1')))AND(t0.c0)))OR(t0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(t0.c0))) AND ((('-555466891')+(vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((vt0.c0) NOT BETWEEN (((((((((((((t0.c0)OR(x'1ae1')))AND(t0.c0)))OR(t0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(t0.c0))) AND ((('-555466891')+(vt0.c0)))));
SELECT * FROM rt0 WHERE (((CAST(rt0.c1 AS REAL)) NOT NULL)) ORDER BY '0.28953579121515394', ((((rt0.c1)IS NOT(rt0.c2)))|((rt0.c1 IN (rt0.c1))))  NULLS FIRST, ((rt0.c0 COLLATE RTRIM)/(json_array(rt0.c0, rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS REAL)) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY '0.28953579121515394', ((((rt0.c1)IS NOT(rt0.c2)))|((rt0.c1 IN (rt0.c1))))  NULLS FIRST, ((rt0.c0 COLLATE RTRIM)/(json_array(rt0.c0, rt0.c1))));
SELECT * FROM rt0 WHERE (((CAST(rt0.c1 AS REAL)) NOT NULL)) ORDER BY '0.28953579121515394', ((((rt0.c1)IS NOT(rt0.c2)))|((rt0.c1 IN (rt0.c1))))  NULLS FIRST, ((rt0.c0 COLLATE RTRIM)/(json_array(rt0.c0, rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS REAL)) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY '0.28953579121515394', ((((rt0.c1)IS NOT(rt0.c2)))|((rt0.c1 IN (rt0.c1))))  NULLS FIRST, ((rt0.c0 COLLATE RTRIM)/(json_array(rt0.c0, rt0.c1))));
SELECT * FROM rt0 WHERE (((CAST(rt0.c1 AS REAL)) NOT NULL)) ORDER BY '0.28953579121515394', ((((rt0.c1)IS NOT(rt0.c2)))|((rt0.c1 IN (rt0.c1))))  NULLS FIRST, ((rt0.c0 COLLATE RTRIM)/(json_array(rt0.c0, rt0.c1)));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)!=(v0.c0))) ISNULL)) ORDER BY ((((v0.c0)<=(v0.c0))) BETWEEN (v0.c0) AND (CAST(v0.c0 AS REAL))) DESC, (((v0.c0, v0.c0, NULL))=((v0.c0, v0.c0, v0.c0))) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<>(v0.c0))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)<=(v0.c0))) BETWEEN (v0.c0) AND (CAST(v0.c0 AS REAL))) DESC, (((v0.c0, v0.c0, NULL))=((v0.c0, v0.c0, v0.c0))) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)!=(v0.c0))) ISNULL)) ORDER BY ((((v0.c0)<=(v0.c0))) BETWEEN (v0.c0) AND (CAST(v0.c0 AS REAL))) DESC, (((v0.c0, v0.c0, NULL))=((v0.c0, v0.c0, v0.c0))) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<>(v0.c0))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)<=(v0.c0))) BETWEEN (v0.c0) AND (CAST(v0.c0 AS REAL))) DESC, (((v0.c0, v0.c0, NULL))=((v0.c0, v0.c0, v0.c0))) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)!=(v0.c0))) ISNULL)) ORDER BY ((((v0.c0)<=(v0.c0))) BETWEEN (v0.c0) AND (CAST(v0.c0 AS REAL))) DESC, (((v0.c0, v0.c0, NULL))=((v0.c0, v0.c0, v0.c0))) COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0, rt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0 NOT INDEXED, vt0, rt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0 NOT INDEXED, vt0, rt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0, v0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((~ (rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((~ (rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((~ (rt0.c2)) AS TEXT));
SELECT * FROM rt0, t0, vt0 WHERE ((((((((((((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((t0.c0, rt0.c0, vt0.c0)) AND ((rt0.c2, vt0.c0, vt0.c0))))OR((((x'')) BETWEEN ((rt0.c2)) AND ((rt0.c2))))))AND(json(vt0.c0))))OR(((rt0.c1)<(rt0.c0)))))OR(CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((t0.c0, rt0.c0, vt0.c0)) AND ((rt0.c2, vt0.c0, vt0.c0))))OR((((x'')) BETWEEN ((rt0.c2)) AND ((rt0.c2))))))AND(json(vt0.c0))))OR(((rt0.c1)<(rt0.c0)))))OR(CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE ((((((((((((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((t0.c0, rt0.c0, vt0.c0)) AND ((rt0.c2, vt0.c0, vt0.c0))))OR((((x'')) BETWEEN ((rt0.c2)) AND ((rt0.c2))))))AND(json(vt0.c0))))OR(((rt0.c1)<(rt0.c0)))))OR(CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((t0.c0, rt0.c0, vt0.c0)) AND ((rt0.c2, vt0.c0, vt0.c0))))OR((((x'')) BETWEEN ((rt0.c2)) AND ((rt0.c2))))))AND(json(vt0.c0))))OR(((rt0.c1)<(rt0.c0)))))OR(CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE ((((((((((((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((t0.c0, rt0.c0, vt0.c0)) AND ((rt0.c2, vt0.c0, vt0.c0))))OR((((x'')) BETWEEN ((rt0.c2)) AND ((rt0.c2))))))AND(json(vt0.c0))))OR(((rt0.c1)<(rt0.c0)))))OR(CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT ALL * FROM v0, vt0 WHERE (((LIKELY(DISTINCT v0.c0))+(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT v0.c0))+(v0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((LIKELY(DISTINCT v0.c0))+(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT v0.c0))+(v0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((LIKELY(DISTINCT v0.c0))+(v0.c0)));
SELECT * FROM rt0, t0, vt0 WHERE (((((t0.c0) IS TRUE)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS TRUE)) ISNULL)) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE (((((t0.c0) IS TRUE)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS TRUE)) ISNULL)) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE (((((t0.c0) IS TRUE)) ISNULL));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON (((NULL))==((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2))))) LEFT OUTER JOIN v0 ON ((((((((((v0.c0)OR(v0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1))) ISNULL) WHERE (x'a335');
SELECT SUM(count) FROM (SELECT ALL ((x'a335') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (((NULL))==((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2))))) LEFT OUTER JOIN v0 ON ((((((((((v0.c0)OR(v0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1))) ISNULL));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON (((NULL))==((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2))))) LEFT OUTER JOIN v0 ON ((((((((((v0.c0)OR(v0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1))) ISNULL) WHERE (x'a335');
SELECT SUM(count) FROM (SELECT ALL ((x'a335') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (((NULL))==((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2))))) LEFT OUTER JOIN v0 ON ((((((((((v0.c0)OR(v0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1))) ISNULL));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON (((NULL))==((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2))))) LEFT OUTER JOIN v0 ON ((((((((((v0.c0)OR(v0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1))) ISNULL) WHERE (x'a335');
SELECT ALL * FROM rt0 WHERE (CASE WHEN (NOT (rt0.c1)) THEN (((rt0.c1))>=((rt0.c2))) WHEN json_quote(rt0.c0) THEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)) WHEN CAST('+{GX_CfQ' AS REAL) THEN ((rt0.c1)*(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (rt0.c1)) THEN (((rt0.c1))>=((rt0.c2))) WHEN json_quote(rt0.c0) THEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)) WHEN CAST('+{GX_CfQ' AS REAL) THEN ((rt0.c1)*(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN (NOT (rt0.c1)) THEN (((rt0.c1))>=((rt0.c2))) WHEN json_quote(rt0.c0) THEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)) WHEN CAST('+{GX_CfQ' AS REAL) THEN ((rt0.c1)*(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (rt0.c1)) THEN (((rt0.c1))>=((rt0.c2))) WHEN json_quote(rt0.c0) THEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)) WHEN CAST('+{GX_CfQ' AS REAL) THEN ((rt0.c1)*(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN (NOT (rt0.c1)) THEN (((rt0.c1))>=((rt0.c2))) WHEN json_quote(rt0.c0) THEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)) WHEN CAST('+{GX_CfQ' AS REAL) THEN ((rt0.c1)*(rt0.c2)) END);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON (((v0.c0 IN ('740714296', v0.c0)))>(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) WHERE (LOWER(((rt0.c2)*(v0.c0)))) ORDER BY ((((((((rt0.c2 COLLATE NOCASE)AND(((rt0.c1)<=(rt0.c2)))))AND(0Xffffffff8202a83a)))OR(((v0.c0)/(rt0.c1)))))AND(((('0.9312742211711119', v0.c0, v0.c0))>((rt0.c2, rt0.c0, rt0.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((rt0.c2)*(v0.c0)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((v0.c0 IN ('740714296', v0.c0)))>(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) ORDER BY ((((((((rt0.c2 COLLATE NOCASE)AND(((rt0.c1)<=(rt0.c2)))))AND(0Xffffffff8202a83a)))OR(((v0.c0)/(rt0.c1)))))AND(((('0.9312742211711119', v0.c0, v0.c0))>((rt0.c2, rt0.c0, rt0.c2))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON (((v0.c0 IN ('740714296', v0.c0)))>(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) WHERE (LOWER(((rt0.c2)*(v0.c0)))) ORDER BY ((((((((rt0.c2 COLLATE NOCASE)AND(((rt0.c1)<=(rt0.c2)))))AND(0Xffffffff8202a83a)))OR(((v0.c0)/(rt0.c1)))))AND(((('0.9312742211711119', v0.c0, v0.c0))>((rt0.c2, rt0.c0, rt0.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((rt0.c2)*(v0.c0)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((v0.c0 IN ('740714296', v0.c0)))>(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) ORDER BY ((((((((rt0.c2 COLLATE NOCASE)AND(((rt0.c1)<=(rt0.c2)))))AND(0Xffffffff8202a83a)))OR(((v0.c0)/(rt0.c1)))))AND(((('0.9312742211711119', v0.c0, v0.c0))>((rt0.c2, rt0.c0, rt0.c2))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON (((v0.c0 IN ('740714296', v0.c0)))>(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) WHERE (LOWER(((rt0.c2)*(v0.c0)))) ORDER BY ((((((((rt0.c2 COLLATE NOCASE)AND(((rt0.c1)<=(rt0.c2)))))AND(0Xffffffff8202a83a)))OR(((v0.c0)/(rt0.c1)))))AND(((('0.9312742211711119', v0.c0, v0.c0))>((rt0.c2, rt0.c0, rt0.c2))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, v0, rt0, vt0 WHERE (((ABS(DISTINCT rt0.c1)) BETWEEN (((t0.c0) ISNULL)) AND (rt0.c1))) ORDER BY ((NOT (t0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT rt0.c1)) BETWEEN (((t0.c0) ISNULL)) AND (rt0.c1))) IS TRUE)  as count FROM t0, v0, rt0, vt0 ORDER BY ((NOT (t0.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM t0, v0, rt0, vt0 WHERE (((ABS(DISTINCT rt0.c1)) BETWEEN (((t0.c0) ISNULL)) AND (rt0.c1))) ORDER BY ((NOT (t0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT rt0.c1)) BETWEEN (((t0.c0) ISNULL)) AND (rt0.c1))) IS TRUE)  as count FROM t0, v0, rt0, vt0 ORDER BY ((NOT (t0.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM t0, v0, rt0, vt0 WHERE (((ABS(DISTINCT rt0.c1)) BETWEEN (((t0.c0) ISNULL)) AND (rt0.c1))) ORDER BY ((NOT (t0.c0)) IN ()) ASC;
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON COALESCE(DISTINCT ((((((((0.17207172902692291)AND(v0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)), (- (t0.c0))) WHERE ((((t0.c0)-(t0.c0)) IN ())) ORDER BY (((v0.c0 IN ())) BETWEEN (((((v0.c0)AND(t0.c0)))OR(t0.c0))) AND (v0.c0 COLLATE BINARY)) DESC  NULLS LAST, ((v0.c0 COLLATE BINARY)<=(CHAR(t0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)-(t0.c0)) IN ())) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON COALESCE(DISTINCT ((((((((0.17207172902692291)AND(v0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)), (- (t0.c0))) ORDER BY (((v0.c0 IN ())) BETWEEN (((((v0.c0)AND(t0.c0)))OR(t0.c0))) AND (v0.c0 COLLATE BINARY)) DESC  NULLS LAST, ((v0.c0 COLLATE BINARY)<=(CHAR(t0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON COALESCE(DISTINCT ((((((((0.17207172902692291)AND(v0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)), (- (t0.c0))) WHERE ((((t0.c0)-(t0.c0)) IN ())) ORDER BY (((v0.c0 IN ())) BETWEEN (((((v0.c0)AND(t0.c0)))OR(t0.c0))) AND (v0.c0 COLLATE BINARY)) DESC  NULLS LAST, ((v0.c0 COLLATE BINARY)<=(CHAR(t0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)-(t0.c0)) IN ())) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON COALESCE(DISTINCT ((((((((0.17207172902692291)AND(v0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)), (- (t0.c0))) ORDER BY (((v0.c0 IN ())) BETWEEN (((((v0.c0)AND(t0.c0)))OR(t0.c0))) AND (v0.c0 COLLATE BINARY)) DESC  NULLS LAST, ((v0.c0 COLLATE BINARY)<=(CHAR(t0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON COALESCE(DISTINCT ((((((((0.17207172902692291)AND(v0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)), (- (t0.c0))) WHERE ((((t0.c0)-(t0.c0)) IN ())) ORDER BY (((v0.c0 IN ())) BETWEEN (((((v0.c0)AND(t0.c0)))OR(t0.c0))) AND (v0.c0 COLLATE BINARY)) DESC  NULLS LAST, ((v0.c0 COLLATE BINARY)<=(CHAR(t0.c0))) ASC  NULLS FIRST;
SELECT * FROM vt0, v0, rt0 WHERE ((((((('-1482871473') BETWEEN (v0.c0) AND (rt0.c0)))AND(CASE WHEN v0.c0 THEN rt0.c0 END)))AND(STRFTIME(rt0.c1, rt0.c1, '-536456781', rt0.c1, rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((('-1482871473') BETWEEN (v0.c0) AND (rt0.c0)))AND(CASE WHEN v0.c0 THEN rt0.c0 END)))AND(STRFTIME(rt0.c1, rt0.c1, '-536456781', rt0.c1, rt0.c0)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE ((((((('-1482871473') BETWEEN (v0.c0) AND (rt0.c0)))AND(CASE WHEN v0.c0 THEN rt0.c0 END)))AND(STRFTIME(rt0.c1, rt0.c1, '-536456781', rt0.c1, rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((('-1482871473') BETWEEN (v0.c0) AND (rt0.c0)))AND(CASE WHEN v0.c0 THEN rt0.c0 END)))AND(STRFTIME(rt0.c1, rt0.c1, '-536456781', rt0.c1, rt0.c0)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE ((((((('-1482871473') BETWEEN (v0.c0) AND (rt0.c0)))AND(CASE WHEN v0.c0 THEN rt0.c0 END)))AND(STRFTIME(rt0.c1, rt0.c1, '-536456781', rt0.c1, rt0.c0))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c0)<=(rt0.c0))) IS FALSE)) ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 END)=(CASE WHEN rt0.c0 THEN v0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<=(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 END)=(CASE WHEN rt0.c0 THEN v0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c0)<=(rt0.c0))) IS FALSE)) ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 END)=(CASE WHEN rt0.c0 THEN v0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<=(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 END)=(CASE WHEN rt0.c0 THEN v0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c0)<=(rt0.c0))) IS FALSE)) ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 END)=(CASE WHEN rt0.c0 THEN v0.c0 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0, v0, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, rt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, rt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0, t0 WHERE (rt0.c1);
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN rt0 ON (- (rt0.c2)) COLLATE RTRIM INNER JOIN v0 ON ((((rt0.c1, rt0.c2, rt0.c2))>=((v0.c0, rt0.c2, vt0.c0))) IN ()) WHERE (CASE ((t0.c0)>=(v0.c0))  WHEN ((vt0.c0)==(t0.c0)) THEN ((((t0.c0)OR(0.44478649110320456)))OR(rt0.c2)) WHEN ((((rt0.c0)AND(v0.c0)))OR(rt0.c1)) THEN CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 END WHEN ((((rt0.c2)AND(v0.c0)))OR(rt0.c1)) THEN ((rt0.c0)<>(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0)>=(v0.c0))  WHEN ((vt0.c0)=(t0.c0)) THEN ((((t0.c0)OR(0.44478649110320456)))OR(rt0.c2)) WHEN ((((rt0.c0)AND(v0.c0)))OR(rt0.c1)) THEN CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 END WHEN ((((rt0.c2)AND(v0.c0)))OR(rt0.c1)) THEN ((rt0.c0)<>(rt0.c1)) END) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON (- (rt0.c2)) COLLATE RTRIM INNER JOIN v0 ON ((((rt0.c1, rt0.c2, rt0.c2))>=((v0.c0, rt0.c2, vt0.c0))) IN ()));
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN rt0 ON (- (rt0.c2)) COLLATE RTRIM INNER JOIN v0 ON ((((rt0.c1, rt0.c2, rt0.c2))>=((v0.c0, rt0.c2, vt0.c0))) IN ()) WHERE (CASE ((t0.c0)>=(v0.c0))  WHEN ((vt0.c0)==(t0.c0)) THEN ((((t0.c0)OR(0.44478649110320456)))OR(rt0.c2)) WHEN ((((rt0.c0)AND(v0.c0)))OR(rt0.c1)) THEN CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 END WHEN ((((rt0.c2)AND(v0.c0)))OR(rt0.c1)) THEN ((rt0.c0)<>(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0)>=(v0.c0))  WHEN ((vt0.c0)=(t0.c0)) THEN ((((t0.c0)OR(0.44478649110320456)))OR(rt0.c2)) WHEN ((((rt0.c0)AND(v0.c0)))OR(rt0.c1)) THEN CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 END WHEN ((((rt0.c2)AND(v0.c0)))OR(rt0.c1)) THEN ((rt0.c0)<>(rt0.c1)) END) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON (- (rt0.c2)) COLLATE RTRIM INNER JOIN v0 ON ((((rt0.c1, rt0.c2, rt0.c2))>=((v0.c0, rt0.c2, vt0.c0))) IN ()));
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN rt0 ON (- (rt0.c2)) COLLATE RTRIM INNER JOIN v0 ON ((((rt0.c1, rt0.c2, rt0.c2))>=((v0.c0, rt0.c2, vt0.c0))) IN ()) WHERE (CASE ((t0.c0)>=(v0.c0))  WHEN ((vt0.c0)==(t0.c0)) THEN ((((t0.c0)OR(0.44478649110320456)))OR(rt0.c2)) WHEN ((((rt0.c0)AND(v0.c0)))OR(rt0.c1)) THEN CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 END WHEN ((((rt0.c2)AND(v0.c0)))OR(rt0.c1)) THEN ((rt0.c0)<>(rt0.c1)) END);
SELECT ALL * FROM t0 WHERE (0.40479691223547676);
SELECT SUM(count) FROM (SELECT ALL ((0.40479691223547676) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (0.40479691223547676);
SELECT SUM(count) FROM (SELECT ALL ((0.40479691223547676) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (0.40479691223547676);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON (((t0.c0 IN ())) IS FALSE) WHERE (((((x'') NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)) ORDER BY TYPEOF(t0.c0) ASC  NULLS LAST, ((CASE WHEN v0.c0 THEN t0.c0 ELSE '1009138213' END) BETWEEN ((t0.c0 IN ())) AND (t0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'') NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (((t0.c0 IN ())) IS FALSE) ORDER BY TYPEOF(t0.c0) ASC  NULLS LAST, ((CASE WHEN v0.c0 THEN t0.c0 ELSE '1009138213' END) BETWEEN ((t0.c0 IN ())) AND (t0.c0)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON (((t0.c0 IN ())) IS FALSE) WHERE (((((x'') NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)) ORDER BY TYPEOF(t0.c0) ASC  NULLS LAST, ((CASE WHEN v0.c0 THEN t0.c0 ELSE '1009138213' END) BETWEEN ((t0.c0 IN ())) AND (t0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'') NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (((t0.c0 IN ())) IS FALSE) ORDER BY TYPEOF(t0.c0) ASC  NULLS LAST, ((CASE WHEN v0.c0 THEN t0.c0 ELSE '1009138213' END) BETWEEN ((t0.c0 IN ())) AND (t0.c0)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON (((t0.c0 IN ())) IS FALSE) WHERE (((((x'') NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)) ORDER BY TYPEOF(t0.c0) ASC  NULLS LAST, ((CASE WHEN v0.c0 THEN t0.c0 ELSE '1009138213' END) BETWEEN ((t0.c0 IN ())) AND (t0.c0)) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c2 AS TEXT))AND((- (rt0.c1)))))OR(rt0.c0 COLLATE NOCASE))) ORDER BY (~ (CAST(rt0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c2 AS TEXT))AND((- (rt0.c1)))))OR(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY (~ (CAST(rt0.c0 AS TEXT)))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c2 AS TEXT))AND((- (rt0.c1)))))OR(rt0.c0 COLLATE NOCASE))) ORDER BY (~ (CAST(rt0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c2 AS TEXT))AND((- (rt0.c1)))))OR(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY (~ (CAST(rt0.c0 AS TEXT)))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c2 AS TEXT))AND((- (rt0.c1)))))OR(rt0.c0 COLLATE NOCASE))) ORDER BY (~ (CAST(rt0.c0 AS TEXT)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((+ (vt0.c0 COLLATE NOCASE))) ORDER BY ((((t0.c0)/(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c0)/(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((+ (vt0.c0 COLLATE NOCASE))) ORDER BY ((((t0.c0)/(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c0)/(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((+ (vt0.c0 COLLATE NOCASE))) ORDER BY ((((t0.c0)/(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0, v0 LEFT OUTER JOIN vt0 ON 0xffffffffd686633e WHERE (CASE (((('')AND(rt0.c1)))OR('1745046070'))  WHEN 0.852417951899526 THEN (((rt0.c0))>((v0.c0))) ELSE t0.c0 END) ORDER BY ((CAST(rt0.c0 AS REAL)) IS TRUE);
SELECT SUM(count) FROM (SELECT ((CASE (((('')AND(rt0.c1)))OR('1745046070'))  WHEN 0.852417951899526 THEN (((rt0.c0))>((v0.c0))) ELSE t0.c0 END) IS TRUE)  as count FROM rt0, t0, v0 LEFT OUTER JOIN vt0 ON 0Xffffffffd686633e ORDER BY ((CAST(rt0.c0 AS REAL)) IS TRUE));
SELECT ALL COUNT(*) FROM rt0, t0, v0 LEFT OUTER JOIN vt0 ON 0xffffffffd686633e WHERE (CASE (((('')AND(rt0.c1)))OR('1745046070'))  WHEN 0.852417951899526 THEN (((rt0.c0))>((v0.c0))) ELSE t0.c0 END) ORDER BY ((CAST(rt0.c0 AS REAL)) IS TRUE);
SELECT SUM(count) FROM (SELECT ((CASE (((('')AND(rt0.c1)))OR('1745046070'))  WHEN 0.852417951899526 THEN (((rt0.c0))>((v0.c0))) ELSE t0.c0 END) IS TRUE)  as count FROM rt0, t0, v0 LEFT OUTER JOIN vt0 ON 0Xffffffffd686633e ORDER BY ((CAST(rt0.c0 AS REAL)) IS TRUE));
SELECT ALL COUNT(*) FROM rt0, t0, v0 LEFT OUTER JOIN vt0 ON 0xffffffffd686633e WHERE (CASE (((('')AND(rt0.c1)))OR('1745046070'))  WHEN 0.852417951899526 THEN (((rt0.c0))>((v0.c0))) ELSE t0.c0 END) ORDER BY ((CAST(rt0.c0 AS REAL)) IS TRUE);
SELECT ALL * FROM v0, vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE (vt0.c0);
SELECT ALL * FROM vt0, rt0, t0, v0 WHERE (CAST(v0.c0 AS TEXT) COLLATE BINARY) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, t0, v0 ORDER BY vt0.c0 ASC);
SELECT ALL * FROM vt0, rt0, t0, v0 WHERE (CAST(v0.c0 AS TEXT) COLLATE BINARY) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, t0, v0 ORDER BY vt0.c0 ASC);
SELECT ALL * FROM vt0, rt0, t0, v0 WHERE (CAST(v0.c0 AS TEXT) COLLATE BINARY) ORDER BY vt0.c0 ASC;
SELECT COUNT(*) FROM v0, t0, rt0, vt0 WHERE ((CAST(rt0.c2 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS REAL) IN ())) IS TRUE)  as count FROM v0, t0, rt0, vt0);
SELECT COUNT(*) FROM v0, t0, rt0, vt0 WHERE ((CAST(rt0.c2 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS REAL) IN ())) IS TRUE)  as count FROM v0, t0, rt0, vt0);
SELECT COUNT(*) FROM v0, t0, rt0, vt0 WHERE ((CAST(rt0.c2 AS REAL) IN ()));
SELECT COUNT(*) FROM rt0, t0, vt0, v0 WHERE (v0.c0) ORDER BY ((TYPEOF(DISTINCT rt0.c0))>>((~ (vt0.c0)))) DESC  NULLS FIRST, ((((((v0.c0) ISNULL))AND(((((((((v0.c0)OR(rt0.c2)))OR(t0.c0)))AND(vt0.c0)))AND(rt0.c2)))))AND(((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))) ASC, ((((CASE vt0.c0  WHEN 0.05536287558883357 THEN rt0.c1 WHEN NULL THEN vt0.c0 WHEN t0.c0 THEN rt0.c0 ELSE rt0.c2 END)AND(((v0.c0) ISNULL))))OR(t0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, t0, vt0, v0 ORDER BY ((TYPEOF(DISTINCT rt0.c0))>>((~ (vt0.c0)))) DESC  NULLS FIRST, ((((((v0.c0) ISNULL))AND(((((((((v0.c0)OR(rt0.c2)))OR(t0.c0)))AND(vt0.c0)))AND(rt0.c2)))))AND(((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))) ASC, ((((CASE vt0.c0  WHEN 0.05536287558883357 THEN rt0.c1 WHEN NULL THEN vt0.c0 WHEN t0.c0 THEN rt0.c0 ELSE rt0.c2 END)AND(((v0.c0) ISNULL))))OR(t0.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, vt0, v0 WHERE (v0.c0) ORDER BY ((TYPEOF(DISTINCT rt0.c0))>>((~ (vt0.c0)))) DESC  NULLS FIRST, ((((((v0.c0) ISNULL))AND(((((((((v0.c0)OR(rt0.c2)))OR(t0.c0)))AND(vt0.c0)))AND(rt0.c2)))))AND(((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))) ASC, ((((CASE vt0.c0  WHEN 0.05536287558883357 THEN rt0.c1 WHEN NULL THEN vt0.c0 WHEN t0.c0 THEN rt0.c0 ELSE rt0.c2 END)AND(((v0.c0) ISNULL))))OR(t0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, t0, vt0, v0 ORDER BY ((TYPEOF(DISTINCT rt0.c0))>>((~ (vt0.c0)))) DESC  NULLS FIRST, ((((((v0.c0) ISNULL))AND(((((((((v0.c0)OR(rt0.c2)))OR(t0.c0)))AND(vt0.c0)))AND(rt0.c2)))))AND(((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))) ASC, ((((CASE vt0.c0  WHEN 0.05536287558883357 THEN rt0.c1 WHEN NULL THEN vt0.c0 WHEN t0.c0 THEN rt0.c0 ELSE rt0.c2 END)AND(((v0.c0) ISNULL))))OR(t0.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, vt0, v0 WHERE (v0.c0) ORDER BY ((TYPEOF(DISTINCT rt0.c0))>>((~ (vt0.c0)))) DESC  NULLS FIRST, ((((((v0.c0) ISNULL))AND(((((((((v0.c0)OR(rt0.c2)))OR(t0.c0)))AND(vt0.c0)))AND(rt0.c2)))))AND(((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))) ASC, ((((CASE vt0.c0  WHEN 0.05536287558883357 THEN rt0.c1 WHEN NULL THEN vt0.c0 WHEN t0.c0 THEN rt0.c0 ELSE rt0.c2 END)AND(((v0.c0) ISNULL))))OR(t0.c0)) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((CHAR(rt0.c2))IS NOT(((rt0.c0)&(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CHAR(rt0.c2))IS NOT(((rt0.c0)&(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CHAR(rt0.c2))IS NOT(((rt0.c0)&(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CHAR(rt0.c2))IS NOT(((rt0.c0)&(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CHAR(rt0.c2))IS NOT(((rt0.c0)&(rt0.c2)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(vt0.c0)))) AND ((rt0.c1))) WHERE (((((rt0.c0)>=(rt0.c0))) NOT BETWEEN (((((vt0.c0)OR(rt0.c0)))AND(vt0.c0))) AND ((~ (rt0.c1))))) ORDER BY ((TYPEOF(vt0.c0)) IS FALSE) ASC, (((((rt0.c0))>=((rt0.c1)))) NOT BETWEEN ((('-2037411912')-(rt0.c1))) AND (vt0.c0));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>=(rt0.c0))) NOT BETWEEN (((((vt0.c0)OR(rt0.c0)))AND(vt0.c0))) AND ((~ (rt0.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(vt0.c0)))) AND ((rt0.c1))) ORDER BY ((TYPEOF(vt0.c0)) IS FALSE) ASC, (((((rt0.c0))>=((rt0.c1)))) NOT BETWEEN ((('-2037411912')-(rt0.c1))) AND (vt0.c0)));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(vt0.c0)))) AND ((rt0.c1))) WHERE (((((rt0.c0)>=(rt0.c0))) NOT BETWEEN (((((vt0.c0)OR(rt0.c0)))AND(vt0.c0))) AND ((~ (rt0.c1))))) ORDER BY ((TYPEOF(vt0.c0)) IS FALSE) ASC, (((((rt0.c0))>=((rt0.c1)))) NOT BETWEEN ((('-2037411912')-(rt0.c1))) AND (vt0.c0));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>=(rt0.c0))) NOT BETWEEN (((((vt0.c0)OR(rt0.c0)))AND(vt0.c0))) AND ((~ (rt0.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(vt0.c0)))) AND ((rt0.c1))) ORDER BY ((TYPEOF(vt0.c0)) IS FALSE) ASC, (((((rt0.c0))>=((rt0.c1)))) NOT BETWEEN ((('-2037411912')-(rt0.c1))) AND (vt0.c0)));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(vt0.c0)))) AND ((rt0.c1))) WHERE (((((rt0.c0)>=(rt0.c0))) NOT BETWEEN (((((vt0.c0)OR(rt0.c0)))AND(vt0.c0))) AND ((~ (rt0.c1))))) ORDER BY ((TYPEOF(vt0.c0)) IS FALSE) ASC, (((((rt0.c0))>=((rt0.c1)))) NOT BETWEEN ((('-2037411912')-(rt0.c1))) AND (vt0.c0));
SELECT * FROM t0, rt0, v0 WHERE (((((rt0.c2)AND(rt0.c2)))OR(t0.c0)) COLLATE NOCASE) ORDER BY '1179397915' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND(rt0.c2)))OR(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, v0 ORDER BY '1179397915' DESC  NULLS LAST);
SELECT * FROM t0, rt0, v0 WHERE (((((rt0.c2)AND(rt0.c2)))OR(t0.c0)) COLLATE NOCASE) ORDER BY '1179397915' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND(rt0.c2)))OR(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, v0 ORDER BY '1179397915' DESC  NULLS LAST);
SELECT * FROM t0, rt0, v0 WHERE (((((rt0.c2)AND(rt0.c2)))OR(t0.c0)) COLLATE NOCASE) ORDER BY '1179397915' DESC  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (NULL);
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON ((((t0.c0) BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN (((vt0.c0)&(v0.c0))) AND (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) RIGHT OUTER JOIN t0 ON ((x'')<<(((rt0.c0) ISNULL))) INNER JOIN rt0 ON ((((vt0.c0) ISNULL))*(rt0.c0 COLLATE BINARY)) WHERE (((((((v0.c0)AND(rt0.c2)))OR(v0.c0)))&(((((rt0.c0)OR(rt0.c1)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(rt0.c2)))OR(v0.c0)))&(((((rt0.c0)OR(rt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((t0.c0) BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN (((vt0.c0)&(v0.c0))) AND (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) RIGHT OUTER JOIN t0 ON ((x'')<<(((rt0.c0) ISNULL))) INNER JOIN rt0 ON ((((vt0.c0) ISNULL))*(rt0.c0 COLLATE BINARY)));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON ((((t0.c0) BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN (((vt0.c0)&(v0.c0))) AND (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) RIGHT OUTER JOIN t0 ON ((x'')<<(((rt0.c0) ISNULL))) INNER JOIN rt0 ON ((((vt0.c0) ISNULL))*(rt0.c0 COLLATE BINARY)) WHERE (((((((v0.c0)AND(rt0.c2)))OR(v0.c0)))&(((((rt0.c0)OR(rt0.c1)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(rt0.c2)))OR(v0.c0)))&(((((rt0.c0)OR(rt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((t0.c0) BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN (((vt0.c0)&(v0.c0))) AND (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) RIGHT OUTER JOIN t0 ON ((x'')<<(((rt0.c0) ISNULL))) INNER JOIN rt0 ON ((((vt0.c0) ISNULL))*(rt0.c0 COLLATE BINARY)));
SELECT ALL * FROM v0 WHERE (UPPER((v0.c0 IN ()))) ORDER BY (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))<((((v0.c0) ISNULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER((v0.c0 IN ()))) IS TRUE)  as count FROM v0 ORDER BY (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))<((((v0.c0) ISNULL)))) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (UPPER((v0.c0 IN ()))) ORDER BY (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))<((((v0.c0) ISNULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER((v0.c0 IN ()))) IS TRUE)  as count FROM v0 ORDER BY (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))<((((v0.c0) ISNULL)))) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (UPPER((v0.c0 IN ()))) ORDER BY (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))<((((v0.c0) ISNULL)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 WHERE (((CASE WHEN rt0.c1 THEN x'2c4e' ELSE rt0.c0 END)-(((rt0.c0)LIKE(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN x'2c4e' ELSE rt0.c0 END)-(((rt0.c0)LIKE(rt0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((CASE WHEN rt0.c1 THEN x'2c4e' ELSE rt0.c0 END)-(((rt0.c0)LIKE(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN x'2c4e' ELSE rt0.c0 END)-(((rt0.c0)LIKE(rt0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((CASE WHEN rt0.c1 THEN x'2c4e' ELSE rt0.c0 END)-(((rt0.c0)LIKE(rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (1.814995728E9) ORDER BY (((+ (rt0.c1)))*(((rt0.c1)>=(rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((1.814995728E9) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((+ (rt0.c1)))*(((rt0.c1)>=(rt0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (1.814995728E9) ORDER BY (((+ (rt0.c1)))*(((rt0.c1)>=(rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((1.814995728E9) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((+ (rt0.c1)))*(((rt0.c1)>=(rt0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (1.814995728E9) ORDER BY (((+ (rt0.c1)))*(((rt0.c1)>=(rt0.c1)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((rt0.c1)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((((rt0.c1)OR(vt0.c0)))AND(rt0.c2)))))) ORDER BY CASE WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c1 ELSE (((vt0.c0, rt0.c0, rt0.c2)) BETWEEN ((vt0.c0, vt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c1))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((((rt0.c1)OR(vt0.c0)))AND(rt0.c2)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY CASE WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c1 ELSE (((vt0.c0, rt0.c0, rt0.c2)) BETWEEN ((vt0.c0, vt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c1))) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((rt0.c1)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((((rt0.c1)OR(vt0.c0)))AND(rt0.c2)))))) ORDER BY CASE WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c1 ELSE (((vt0.c0, rt0.c0, rt0.c2)) BETWEEN ((vt0.c0, vt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c1))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((((rt0.c1)OR(vt0.c0)))AND(rt0.c2)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY CASE WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c1 ELSE (((vt0.c0, rt0.c0, rt0.c2)) BETWEEN ((vt0.c0, vt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c1))) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((rt0.c1)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((((rt0.c1)OR(vt0.c0)))AND(rt0.c2)))))) ORDER BY CASE WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c1 ELSE (((vt0.c0, rt0.c0, rt0.c2)) BETWEEN ((vt0.c0, vt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c1))) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, v0, t0 WHERE ((((rt0.c2, v0.c0, t0.c0, vt0.c0, t0.c0)) BETWEEN ((rt0.c0 COLLATE BINARY, rt0.c1, CASE t0.c0  WHEN rt0.c2 THEN v0.c0 END, ((rt0.c1) NOT NULL), ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))) AND ((v0.c0 COLLATE RTRIM, (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((NULL))), ((t0.c0)>=(rt0.c1)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)), ((v0.c0)>=(v0.c0)))))) ORDER BY (NOT (x'36fe'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, v0.c0, t0.c0, vt0.c0, t0.c0)) BETWEEN ((rt0.c0 COLLATE BINARY, rt0.c1, CASE t0.c0  WHEN rt0.c2 THEN v0.c0 END, ((rt0.c1) NOT NULL), ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))) AND ((v0.c0 COLLATE RTRIM, (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((NULL))), ((t0.c0)>=(rt0.c1)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)), ((v0.c0)>=(v0.c0)))))) IS TRUE)  as count FROM vt0, rt0, v0, t0 ORDER BY (NOT (x'36fe'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, v0, t0 WHERE ((((rt0.c2, v0.c0, t0.c0, vt0.c0, t0.c0)) BETWEEN ((rt0.c0 COLLATE BINARY, rt0.c1, CASE t0.c0  WHEN rt0.c2 THEN v0.c0 END, ((rt0.c1) NOT NULL), ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))) AND ((v0.c0 COLLATE RTRIM, (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((NULL))), ((t0.c0)>=(rt0.c1)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)), ((v0.c0)>=(v0.c0)))))) ORDER BY (NOT (x'36fe'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, v0.c0, t0.c0, vt0.c0, t0.c0)) BETWEEN ((rt0.c0 COLLATE BINARY, rt0.c1, CASE t0.c0  WHEN rt0.c2 THEN v0.c0 END, ((rt0.c1) NOT NULL), ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))) AND ((v0.c0 COLLATE RTRIM, (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((NULL))), ((t0.c0)>=(rt0.c1)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)), ((v0.c0)>=(v0.c0)))))) IS TRUE)  as count FROM vt0, rt0, v0, t0 ORDER BY (NOT (x'36fe'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, v0, t0 WHERE ((((rt0.c2, v0.c0, t0.c0, vt0.c0, t0.c0)) BETWEEN ((rt0.c0 COLLATE BINARY, rt0.c1, CASE t0.c0  WHEN rt0.c2 THEN v0.c0 END, ((rt0.c1) NOT NULL), ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))) AND ((v0.c0 COLLATE RTRIM, (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((NULL))), ((t0.c0)>=(rt0.c1)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)), ((v0.c0)>=(v0.c0)))))) ORDER BY (NOT (x'36fe'))  NULLS FIRST;
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON '0.07027877759478296' INNER JOIN vt0 ON json_type(0.522383896936584) LEFT OUTER JOIN rt0 ON ((((((rt0.c2)OR(rt0.c0)))AND(x'')))<<(CAST(rt0.c0 AS BLOB))) WHERE ((+ (CAST(rt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON '0.07027877759478296' INNER JOIN vt0 ON json_type(0.522383896936584) LEFT OUTER JOIN rt0 ON ((((((rt0.c2)OR(rt0.c0)))AND(x'')))<<(CAST(rt0.c0 AS BLOB))));
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON '0.07027877759478296' INNER JOIN vt0 ON json_type(0.522383896936584) LEFT OUTER JOIN rt0 ON ((((((rt0.c2)OR(rt0.c0)))AND(x'')))<<(CAST(rt0.c0 AS BLOB))) WHERE ((+ (CAST(rt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON '0.07027877759478296' INNER JOIN vt0 ON json_type(0.522383896936584) LEFT OUTER JOIN rt0 ON ((((((rt0.c2)OR(rt0.c0)))AND(x'')))<<(CAST(rt0.c0 AS BLOB))));
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON '0.07027877759478296' INNER JOIN vt0 ON json_type(0.522383896936584) LEFT OUTER JOIN rt0 ON ((((((rt0.c2)OR(rt0.c0)))AND(x'')))<<(CAST(rt0.c0 AS BLOB))) WHERE ((+ (CAST(rt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON x'' FULL OUTER JOIN t0 ON ((LIKELIHOOD(DISTINCT rt0.c2, 0.4687112304826231))<<(((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) WHERE ((rt0.c0 COLLATE NOCASE IN (MAX(t0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE NOCASE IN (MAX(t0.c0, t0.c0)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON x'' FULL OUTER JOIN t0 ON ((LIKELIHOOD(DISTINCT rt0.c2, 0.4687112304826231))<<(((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON x'' FULL OUTER JOIN t0 ON ((LIKELIHOOD(DISTINCT rt0.c2, 0.4687112304826231))<<(((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) WHERE ((rt0.c0 COLLATE NOCASE IN (MAX(t0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE NOCASE IN (MAX(t0.c0, t0.c0)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON x'' FULL OUTER JOIN t0 ON ((LIKELIHOOD(DISTINCT rt0.c2, 0.4687112304826231))<<(((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON x'' FULL OUTER JOIN t0 ON ((LIKELIHOOD(DISTINCT rt0.c2, 0.4687112304826231))<<(((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) WHERE ((rt0.c0 COLLATE NOCASE IN (MAX(t0.c0, t0.c0))));
SELECT ALL * FROM vt0, t0, rt0, v0 WHERE (((CAST(vt0.c0 AS NUMERIC))>=((- (v0.c0))))) ORDER BY ((((v0.c0)<=(vt0.c0)))+(t0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC))>=((- (v0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0, v0 ORDER BY ((((v0.c0)<=(vt0.c0)))+(t0.c0)) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt0, v0 WHERE (((CAST(vt0.c0 AS NUMERIC))>=((- (v0.c0))))) ORDER BY ((((v0.c0)<=(vt0.c0)))+(t0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC))>=((- (v0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0, v0 ORDER BY ((((v0.c0)<=(vt0.c0)))+(t0.c0)) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt0, v0 WHERE (((CAST(vt0.c0 AS NUMERIC))>=((- (v0.c0))))) ORDER BY ((((v0.c0)<=(vt0.c0)))+(t0.c0)) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 IN ()))/(((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ()))/(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 IN ()))/(((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ()))/(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 IN ()))/(((t0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM v0 WHERE (((UNLIKELY(v0.c0))IS NOT(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(v0.c0))IS NOT(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((UNLIKELY(v0.c0))IS NOT(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(v0.c0))IS NOT(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((UNLIKELY(v0.c0))IS NOT(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))));
SELECT ALL * FROM t0, v0, vt0 WHERE (COALESCE(NULL, ((t0.c0)<(vt0.c0)), LIKE(v0.c0, vt0.c0), CASE WHEN t0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((COALESCE(NULL, ((t0.c0)<(vt0.c0)), LIKE(v0.c0, vt0.c0), CASE WHEN t0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (COALESCE(NULL, ((t0.c0)<(vt0.c0)), LIKE(v0.c0, vt0.c0), CASE WHEN t0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((COALESCE(NULL, ((t0.c0)<(vt0.c0)), LIKE(v0.c0, vt0.c0), CASE WHEN t0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (COALESCE(NULL, ((t0.c0)<(vt0.c0)), LIKE(v0.c0, vt0.c0), CASE WHEN t0.c0 THEN vt0.c0 END));
SELECT * FROM v0 WHERE ((((((((((((((+ (v0.c0)))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(((v0.c0)<=(v0.c0)))))AND(((v0.c0)GLOB(v0.c0)))))OR(((v0.c0) IS FALSE))))OR(CASE WHEN v0.c0 THEN v0.c0 END)))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY x'', x'';
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((+ (v0.c0)))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(((v0.c0)<=(v0.c0)))))AND(((v0.c0)GLOB(v0.c0)))))OR(((v0.c0) IS FALSE))))OR(CASE WHEN v0.c0 THEN v0.c0 END)))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY x'', x'');
SELECT * FROM v0 WHERE ((((((((((((((+ (v0.c0)))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(((v0.c0)<=(v0.c0)))))AND(((v0.c0)GLOB(v0.c0)))))OR(((v0.c0) IS FALSE))))OR(CASE WHEN v0.c0 THEN v0.c0 END)))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY x'', x'';
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((+ (v0.c0)))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(((v0.c0)<=(v0.c0)))))AND(((v0.c0)GLOB(v0.c0)))))OR(((v0.c0) IS FALSE))))OR(CASE WHEN v0.c0 THEN v0.c0 END)))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY x'', x'');
SELECT * FROM v0 WHERE ((((((((((((((+ (v0.c0)))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(((v0.c0)<=(v0.c0)))))AND(((v0.c0)GLOB(v0.c0)))))OR(((v0.c0) IS FALSE))))OR(CASE WHEN v0.c0 THEN v0.c0 END)))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY x'', x'';
SELECT * FROM v0 WHERE ((NOT (v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((NOT (v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((NOT (v0.c0 COLLATE BINARY)));
SELECT ALL * FROM t0, vt0, v0 WHERE ((((((vt0.c0 IN ()))AND(0.7678909762055499)))OR(((((t0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY 0.26249033901830676 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))AND(0.7678909762055499)))OR(((((t0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY 0.26249033901830676 ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0, v0 WHERE ((((((vt0.c0 IN ()))AND(0.7678909762055499)))OR(((((t0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY 0.26249033901830676 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))AND(0.7678909762055499)))OR(((((t0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY 0.26249033901830676 ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0, v0 WHERE ((((((vt0.c0 IN ()))AND(0.7678909762055499)))OR(((((t0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY 0.26249033901830676 ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON CASE x''  WHEN (-183830697 IN ()) THEN (((t0.c0)) BETWEEN ((0Xffffffffea089639)) AND ((vt0.c0))) WHEN ((((NULL)AND(vt0.c0)))OR(vt0.c0)) THEN '' WHEN ((vt0.c0) NOTNULL) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END RIGHT OUTER JOIN t0 ON CAST(HEX(DISTINCT vt0.c0) AS INTEGER) WHERE (((CAST(v0.c0 AS INTEGER))AND((v0.c0 IN (NULL))))) ORDER BY (~ ((NULL IN ())));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS INTEGER))AND((v0.c0 IN (NULL))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CASE x''  WHEN (-183830697 IN ()) THEN (((t0.c0)) BETWEEN ((0xffffffffea089639)) AND ((vt0.c0))) WHEN ((((NULL)AND(vt0.c0)))OR(vt0.c0)) THEN '' WHEN ((vt0.c0) NOTNULL) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END RIGHT OUTER JOIN t0 ON CAST(HEX(DISTINCT vt0.c0) AS INTEGER) ORDER BY (~ ((NULL IN ()))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON CASE x''  WHEN (-183830697 IN ()) THEN (((t0.c0)) BETWEEN ((0Xffffffffea089639)) AND ((vt0.c0))) WHEN ((((NULL)AND(vt0.c0)))OR(vt0.c0)) THEN '' WHEN ((vt0.c0) NOTNULL) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END RIGHT OUTER JOIN t0 ON CAST(HEX(DISTINCT vt0.c0) AS INTEGER) WHERE (((CAST(v0.c0 AS INTEGER))AND((v0.c0 IN (NULL))))) ORDER BY (~ ((NULL IN ())));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS INTEGER))AND((v0.c0 IN (NULL))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CASE x''  WHEN (-183830697 IN ()) THEN (((t0.c0)) BETWEEN ((0xffffffffea089639)) AND ((vt0.c0))) WHEN ((((NULL)AND(vt0.c0)))OR(vt0.c0)) THEN '' WHEN ((vt0.c0) NOTNULL) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END RIGHT OUTER JOIN t0 ON CAST(HEX(DISTINCT vt0.c0) AS INTEGER) ORDER BY (~ ((NULL IN ()))));
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE '' END) BETWEEN (vt0.c0) AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE '' END) BETWEEN (vt0.c0) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE '' END) BETWEEN (vt0.c0) AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE '' END) BETWEEN (vt0.c0) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE '' END) BETWEEN (vt0.c0) AND (((vt0.c0) NOT NULL))));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))<=(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))) WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 NOT INDEXED INNER JOIN vt0 ON ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))<=(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))<=(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))) WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 NOT INDEXED INNER JOIN vt0 ON ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))<=(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))<=(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))) WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM rt0 WHERE ((NOT ('\X'))) ORDER BY rt0.c0 DESC  NULLS FIRST, ((((NOT (rt0.c2)), (- (rt0.c1)), (~ (rt0.c0)), (((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, NULL, rt0.c2))), NULL, (- (rt0.c1)), rt0.c2))<=((((rt0.c0)=(rt0.c1)), rt0.c2, rt0.c2 COLLATE NOCASE, (rt0.c0 IN ()), ((rt0.c2) NOT NULL), (~ (rt0.c1)), ((rt0.c1)LIKE(rt0.c0))))) DESC, ((((rt0.c0)<=(rt0.c0))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ('\X'))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC  NULLS FIRST, ((((NOT (rt0.c2)), (- (rt0.c1)), (~ (rt0.c0)), (((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, NULL, rt0.c2))), NULL, (- (rt0.c1)), rt0.c2))<=((((rt0.c0)=(rt0.c1)), rt0.c2, rt0.c2 COLLATE NOCASE, (rt0.c0 IN ()), ((rt0.c2) NOT NULL), (~ (rt0.c1)), ((rt0.c1)LIKE(rt0.c0))))) DESC, ((((rt0.c0)<=(rt0.c0))) ISNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((NOT ('\X'))) ORDER BY rt0.c0 DESC  NULLS FIRST, ((((NOT (rt0.c2)), (- (rt0.c1)), (~ (rt0.c0)), (((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, NULL, rt0.c2))), NULL, (- (rt0.c1)), rt0.c2))<=((((rt0.c0)=(rt0.c1)), rt0.c2, rt0.c2 COLLATE NOCASE, (rt0.c0 IN ()), ((rt0.c2) NOT NULL), (~ (rt0.c1)), ((rt0.c1)LIKE(rt0.c0))))) DESC, ((((rt0.c0)<=(rt0.c0))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ('\X'))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC  NULLS FIRST, ((((NOT (rt0.c2)), (- (rt0.c1)), (~ (rt0.c0)), (((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, NULL, rt0.c2))), NULL, (- (rt0.c1)), rt0.c2))<=((((rt0.c0)=(rt0.c1)), rt0.c2, rt0.c2 COLLATE NOCASE, (rt0.c0 IN ()), ((rt0.c2) NOT NULL), (~ (rt0.c1)), ((rt0.c1)LIKE(rt0.c0))))) DESC, ((((rt0.c0)<=(rt0.c0))) ISNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((NOT ('\X'))) ORDER BY rt0.c0 DESC  NULLS FIRST, ((((NOT (rt0.c2)), (- (rt0.c1)), (~ (rt0.c0)), (((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, NULL, rt0.c2))), NULL, (- (rt0.c1)), rt0.c2))<=((((rt0.c0)=(rt0.c1)), rt0.c2, rt0.c2 COLLATE NOCASE, (rt0.c0 IN ()), ((rt0.c2) NOT NULL), (~ (rt0.c1)), ((rt0.c1)LIKE(rt0.c0))))) DESC, ((((rt0.c0)<=(rt0.c0))) ISNULL) ASC  NULLS FIRST;
SELECT * FROM v0, vt0, rt0 WHERE (CAST(((v0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (CAST(((v0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (CAST(((v0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c1  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN x'3283d9a3' COLLATE NOCASE WHEN (rt0.c1 IN ()) THEN ((rt0.c2)IS NOT(rt0.c0)) WHEN (269420533 IN ()) THEN ((rt0.c2) IS FALSE) END) ORDER BY ((((((((((NULL)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1))) BETWEEN (((rt0.c1) IS FALSE)) AND (0.49798647865167933))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN x'3283d9a3' COLLATE NOCASE WHEN (rt0.c1 IN ()) THEN ((rt0.c2)IS NOT(rt0.c0)) WHEN (269420533 IN ()) THEN ((rt0.c2) IS FALSE) END) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((NULL)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1))) BETWEEN (((rt0.c1) IS FALSE)) AND (0.49798647865167933))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c1  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN x'3283d9a3' COLLATE NOCASE WHEN (rt0.c1 IN ()) THEN ((rt0.c2)IS NOT(rt0.c0)) WHEN (269420533 IN ()) THEN ((rt0.c2) IS FALSE) END) ORDER BY ((((((((((NULL)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1))) BETWEEN (((rt0.c1) IS FALSE)) AND (0.49798647865167933))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN x'3283d9a3' COLLATE NOCASE WHEN (rt0.c1 IN ()) THEN ((rt0.c2)IS NOT(rt0.c0)) WHEN (269420533 IN ()) THEN ((rt0.c2) IS FALSE) END) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((NULL)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1))) BETWEEN (((rt0.c1) IS FALSE)) AND (0.49798647865167933))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c1  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN x'3283d9a3' COLLATE NOCASE WHEN (rt0.c1 IN ()) THEN ((rt0.c2)IS NOT(rt0.c0)) WHEN (269420533 IN ()) THEN ((rt0.c2) IS FALSE) END) ORDER BY ((((((((((NULL)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1))) BETWEEN (((rt0.c1) IS FALSE)) AND (0.49798647865167933))  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (CAST(x'' AS NUMERIC)) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))+((t0.c0 IN (x'', vt0.c0)))) DESC  NULLS LAST, t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))+((t0.c0 IN (x'', vt0.c0)))) DESC  NULLS LAST, t0.c0  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (CAST(x'' AS NUMERIC)) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))+((t0.c0 IN (x'', vt0.c0)))) DESC  NULLS LAST, t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))+((t0.c0 IN (x'', vt0.c0)))) DESC  NULLS LAST, t0.c0  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (CAST(x'' AS NUMERIC)) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))+((t0.c0 IN (x'', vt0.c0)))) DESC  NULLS LAST, t0.c0  NULLS LAST;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((('-104162870' COLLATE RTRIM))>=((('' IN ())))) WHERE (TRIM(LIKELIHOOD(DISTINCT rt0.c2, 0.10691636680883043))) ORDER BY ((CAST(rt0.c2 AS TEXT))>=(((rt0.c1)==('')))) DESC, CAST(LIKELY(3.5546008E7) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(LIKELIHOOD(DISTINCT rt0.c2, 0.10691636680883043))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((('-104162870' COLLATE RTRIM))>=((('' IN ())))) ORDER BY ((CAST(rt0.c2 AS TEXT))>=(((rt0.c1)=('')))) DESC, CAST(LIKELY(3.5546008E7) AS TEXT) ASC);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((('-104162870' COLLATE RTRIM))>=((('' IN ())))) WHERE (TRIM(LIKELIHOOD(DISTINCT rt0.c2, 0.10691636680883043))) ORDER BY ((CAST(rt0.c2 AS TEXT))>=(((rt0.c1)==('')))) DESC, CAST(LIKELY(3.5546008E7) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(LIKELIHOOD(DISTINCT rt0.c2, 0.10691636680883043))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((('-104162870' COLLATE RTRIM))>=((('' IN ())))) ORDER BY ((CAST(rt0.c2 AS TEXT))>=(((rt0.c1)=('')))) DESC, CAST(LIKELY(3.5546008E7) AS TEXT) ASC);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((('-104162870' COLLATE RTRIM))>=((('' IN ())))) WHERE (TRIM(LIKELIHOOD(DISTINCT rt0.c2, 0.10691636680883043))) ORDER BY ((CAST(rt0.c2 AS TEXT))>=(((rt0.c1)==('')))) DESC, CAST(LIKELY(3.5546008E7) AS TEXT) ASC;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((~ ((NOT (0.8593290151492787))))) ORDER BY ((t0.c0)LIKE(t0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((~ ((NOT (0.8593290151492787))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((t0.c0)LIKE(t0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((~ ((NOT (0.8593290151492787))))) ORDER BY ((t0.c0)LIKE(t0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((~ ((NOT (0.8593290151492787))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((t0.c0)LIKE(t0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((~ ((NOT (0.8593290151492787))))) ORDER BY ((t0.c0)LIKE(t0.c0)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM v0 WHERE (TYPEOF(DISTINCT v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT v0.c0)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (TYPEOF(DISTINCT v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT v0.c0)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (TYPEOF(DISTINCT v0.c0));
SELECT ALL COUNT(*) FROM rt0, v0 INNER JOIN t0 ON (((((rt0.c1 IN (0.6427930639680111)))OR(v0.c0 COLLATE BINARY)))OR(vt0.c0)) LEFT OUTER JOIN vt0 ON ((rt0.c2) IS TRUE) WHERE ((((((v0.c0)<=(vt0.c0)), t0.c0, NULLIF(rt0.c0, v0.c0)))<>((CASE WHEN rt0.c0 THEN x'' WHEN t0.c0 THEN -536456781 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END, NULL COLLATE NOCASE, rt0.c1 COLLATE NOCASE)))) ORDER BY ((((x'')LIKE(rt0.c0)))<((NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)<=(vt0.c0)), t0.c0, NULLIF(rt0.c0, v0.c0)))<>((CASE WHEN rt0.c0 THEN x'' WHEN t0.c0 THEN -536456781 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END, NULL COLLATE NOCASE, rt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, v0 INNER JOIN t0 ON (((((rt0.c1 IN (0.6427930639680111)))OR(v0.c0 COLLATE BINARY)))OR(vt0.c0)) LEFT OUTER JOIN vt0 ON ((rt0.c2) IS TRUE) ORDER BY ((((x'')LIKE(rt0.c0)))<((NOT (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, v0 INNER JOIN t0 ON (((((rt0.c1 IN (0.6427930639680111)))OR(v0.c0 COLLATE BINARY)))OR(vt0.c0)) LEFT OUTER JOIN vt0 ON ((rt0.c2) IS TRUE) WHERE ((((((v0.c0)<=(vt0.c0)), t0.c0, NULLIF(rt0.c0, v0.c0)))<>((CASE WHEN rt0.c0 THEN x'' WHEN t0.c0 THEN -536456781 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END, NULL COLLATE NOCASE, rt0.c1 COLLATE NOCASE)))) ORDER BY ((((x'')LIKE(rt0.c0)))<((NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)<=(vt0.c0)), t0.c0, NULLIF(rt0.c0, v0.c0)))<>((CASE WHEN rt0.c0 THEN x'' WHEN t0.c0 THEN -536456781 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END, NULL COLLATE NOCASE, rt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, v0 INNER JOIN t0 ON (((((rt0.c1 IN (0.6427930639680111)))OR(v0.c0 COLLATE BINARY)))OR(vt0.c0)) LEFT OUTER JOIN vt0 ON ((rt0.c2) IS TRUE) ORDER BY ((((x'')LIKE(rt0.c0)))<((NOT (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, v0 INNER JOIN t0 ON (((((rt0.c1 IN (0.6427930639680111)))OR(v0.c0 COLLATE BINARY)))OR(vt0.c0)) LEFT OUTER JOIN vt0 ON ((rt0.c2) IS TRUE) WHERE ((((((v0.c0)<=(vt0.c0)), t0.c0, NULLIF(rt0.c0, v0.c0)))<>((CASE WHEN rt0.c0 THEN x'' WHEN t0.c0 THEN -536456781 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END, NULL COLLATE NOCASE, rt0.c1 COLLATE NOCASE)))) ORDER BY ((((x'')LIKE(rt0.c0)))<((NOT (rt0.c0))));
SELECT ALL * FROM vt0, rt0, t0, v0 WHERE (((((((rt0.c0) ISNULL))AND(x'')))AND(((t0.c0)+(rt0.c2))))) ORDER BY LTRIM(CAST(t0.c0 AS REAL)), ((((rt0.c2)|(t0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) ISNULL))AND(x'')))AND(((t0.c0)+(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, t0, v0 ORDER BY LTRIM(CAST(t0.c0 AS REAL)), ((((rt0.c2)|(t0.c0))) ISNULL));
SELECT ALL * FROM vt0, rt0, t0, v0 WHERE (((((((rt0.c0) ISNULL))AND(x'')))AND(((t0.c0)+(rt0.c2))))) ORDER BY LTRIM(CAST(t0.c0 AS REAL)), ((((rt0.c2)|(t0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) ISNULL))AND(x'')))AND(((t0.c0)+(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, t0, v0 ORDER BY LTRIM(CAST(t0.c0 AS REAL)), ((((rt0.c2)|(t0.c0))) ISNULL));
SELECT ALL * FROM vt0, rt0, t0, v0 WHERE (((((((rt0.c0) ISNULL))AND(x'')))AND(((t0.c0)+(rt0.c2))))) ORDER BY LTRIM(CAST(t0.c0 AS REAL)), ((((rt0.c2)|(t0.c0))) ISNULL);
SELECT * FROM vt0 INNER JOIN t0 ON (((rt0.c1)<=(t0.c0)) IN ()) CROSS JOIN v0 ON ((((rt0.c0)IS NOT(rt0.c0)))%(((rt0.c1)>>(NULL)))) CROSS JOIN rt0 ON t0.c0 COLLATE BINARY COLLATE NOCASE WHERE (CASE SQLITE_COMPILEOPTION_GET(x'')  WHEN ((rt0.c1) IS TRUE) THEN CASE WHEN vt0.c0 THEN rt0.c0 END WHEN ((rt0.c0)AND(t0.c0)) THEN '' WHEN CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN rt0.c1 WHEN t0.c0 THEN v0.c0 ELSE vt0.c0 END THEN ((((rt0.c1)AND(v0.c0)))AND(t0.c0)) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ((CASE SQLITE_COMPILEOPTION_GET(x'')  WHEN ((rt0.c1) IS TRUE) THEN CASE WHEN vt0.c0 THEN rt0.c0 END WHEN ((rt0.c0)AND(t0.c0)) THEN '' WHEN CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN rt0.c1 WHEN t0.c0 THEN v0.c0 ELSE vt0.c0 END THEN ((((rt0.c1)AND(v0.c0)))AND(t0.c0)) ELSE x'' END) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((rt0.c1)<=(t0.c0)) IN ()) CROSS JOIN v0 ON ((((rt0.c0)IS NOT(rt0.c0)))%(((rt0.c1)>>(NULL)))) CROSS JOIN rt0 ON t0.c0 COLLATE BINARY COLLATE NOCASE);
SELECT * FROM vt0 INNER JOIN t0 ON (((rt0.c1)<=(t0.c0)) IN ()) CROSS JOIN v0 ON ((((rt0.c0)IS NOT(rt0.c0)))%(((rt0.c1)>>(NULL)))) CROSS JOIN rt0 ON t0.c0 COLLATE BINARY COLLATE NOCASE WHERE (CASE SQLITE_COMPILEOPTION_GET(x'')  WHEN ((rt0.c1) IS TRUE) THEN CASE WHEN vt0.c0 THEN rt0.c0 END WHEN ((rt0.c0)AND(t0.c0)) THEN '' WHEN CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN rt0.c1 WHEN t0.c0 THEN v0.c0 ELSE vt0.c0 END THEN ((((rt0.c1)AND(v0.c0)))AND(t0.c0)) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ((CASE SQLITE_COMPILEOPTION_GET(x'')  WHEN ((rt0.c1) IS TRUE) THEN CASE WHEN vt0.c0 THEN rt0.c0 END WHEN ((rt0.c0)AND(t0.c0)) THEN '' WHEN CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN rt0.c1 WHEN t0.c0 THEN v0.c0 ELSE vt0.c0 END THEN ((((rt0.c1)AND(v0.c0)))AND(t0.c0)) ELSE x'' END) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((rt0.c1)<=(t0.c0)) IN ()) CROSS JOIN v0 ON ((((rt0.c0)IS NOT(rt0.c0)))%(((rt0.c1)>>(NULL)))) CROSS JOIN rt0 ON t0.c0 COLLATE BINARY COLLATE NOCASE);
SELECT * FROM vt0 INNER JOIN t0 ON (((rt0.c1)<=(t0.c0)) IN ()) CROSS JOIN v0 ON ((((rt0.c0)IS NOT(rt0.c0)))%(((rt0.c1)>>(NULL)))) CROSS JOIN rt0 ON t0.c0 COLLATE BINARY COLLATE NOCASE WHERE (CASE SQLITE_COMPILEOPTION_GET(x'')  WHEN ((rt0.c1) IS TRUE) THEN CASE WHEN vt0.c0 THEN rt0.c0 END WHEN ((rt0.c0)AND(t0.c0)) THEN '' WHEN CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN rt0.c1 WHEN t0.c0 THEN v0.c0 ELSE vt0.c0 END THEN ((((rt0.c1)AND(v0.c0)))AND(t0.c0)) ELSE x'' END);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c0)<=(t0.c0)) AS BLOB)) ORDER BY (- (t0.c0));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)<=(t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY (- (t0.c0)));
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c0)<=(t0.c0)) AS BLOB)) ORDER BY (- (t0.c0));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)<=(t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY (- (t0.c0)));
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c0)<=(t0.c0)) AS BLOB)) ORDER BY (- (t0.c0));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE ((((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END))<((COALESCE(v0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END))<((COALESCE(v0.c0, vt0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON vt0.c0);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE ((((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END))<((COALESCE(v0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END))<((COALESCE(v0.c0, vt0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON vt0.c0);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE ((((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END))<((COALESCE(v0.c0, vt0.c0)))));
SELECT COUNT(*) FROM vt0, v0, rt0 NOT INDEXED, t0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (CASE WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END) AND (CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) NOT BETWEEN (CASE WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END) AND (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, v0, rt0, t0);
SELECT COUNT(*) FROM vt0, v0, rt0 NOT INDEXED, t0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (CASE WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END) AND (CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) NOT BETWEEN (CASE WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END) AND (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, v0, rt0, t0);
SELECT COUNT(*) FROM vt0, v0, rt0 NOT INDEXED, t0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (CASE WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END) AND (CAST(rt0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM v0, rt0 NATURAL JOIN vt0 WHERE (((x'c9dc')IS NOT(((((((((v0.c0)AND(v0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'c9dc')IS NOT(((((((((v0.c0)AND(v0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM v0, rt0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0, rt0 NATURAL JOIN vt0 WHERE (((x'c9dc')IS NOT(((((((((v0.c0)AND(v0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'c9dc')IS NOT(((((((((v0.c0)AND(v0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM v0, rt0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0, rt0 NATURAL JOIN vt0 WHERE (((x'c9dc')IS NOT(((((((((v0.c0)AND(v0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(rt0.c1)))));
SELECT * FROM v0 WHERE ((((((((v0.c0)OR(v0.c0)))OR(v0.c0))))<((((v0.c0)<(v0.c0)))))) ORDER BY (TOTAL_CHANGES() IN ((((v0.c0))<=((v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0)OR(v0.c0)))OR(v0.c0))))<((((v0.c0)<(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (TOTAL_CHANGES() IN ((((v0.c0))<=((v0.c0))))) ASC);
SELECT * FROM v0 WHERE ((((((((v0.c0)OR(v0.c0)))OR(v0.c0))))<((((v0.c0)<(v0.c0)))))) ORDER BY (TOTAL_CHANGES() IN ((((v0.c0))<=((v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0)OR(v0.c0)))OR(v0.c0))))<((((v0.c0)<(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (TOTAL_CHANGES() IN ((((v0.c0))<=((v0.c0))))) ASC);
SELECT * FROM v0 WHERE ((((((((v0.c0)OR(v0.c0)))OR(v0.c0))))<((((v0.c0)<(v0.c0)))))) ORDER BY (TOTAL_CHANGES() IN ((((v0.c0))<=((v0.c0))))) ASC;
SELECT COUNT(*) FROM v0, vt0 NATURAL JOIN t0 WHERE (LIKE(((t0.c0)&(t0.c0)), (t0.c0 IN ()))) ORDER BY CASE WHEN ((vt0.c0)OR(v0.c0)) THEN ((v0.c0)<=(vt0.c0)) WHEN (vt0.c0 IN ()) THEN v0.c0 COLLATE RTRIM WHEN NULL THEN CASE t0.c0  WHEN x'fa83' THEN v0.c0 ELSE t0.c0 END WHEN ((v0.c0) BETWEEN (vt0.c0) AND (t0.c0)) THEN ((vt0.c0) NOTNULL) WHEN CAST(vt0.c0 AS NUMERIC) THEN CASE vt0.c0  WHEN t0.c0 THEN v0.c0 ELSE vt0.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((t0.c0)&(t0.c0)), (t0.c0 IN ()))) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN t0 ORDER BY CASE WHEN ((vt0.c0)OR(v0.c0)) THEN ((v0.c0)<=(vt0.c0)) WHEN (vt0.c0 IN ()) THEN v0.c0 COLLATE RTRIM WHEN NULL THEN CASE t0.c0  WHEN x'fa83' THEN v0.c0 ELSE t0.c0 END WHEN ((v0.c0) BETWEEN (vt0.c0) AND (t0.c0)) THEN ((vt0.c0) NOTNULL) WHEN CAST(vt0.c0 AS NUMERIC) THEN CASE vt0.c0  WHEN t0.c0 THEN v0.c0 ELSE vt0.c0 END END  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 NATURAL JOIN t0 WHERE (LIKE(((t0.c0)&(t0.c0)), (t0.c0 IN ()))) ORDER BY CASE WHEN ((vt0.c0)OR(v0.c0)) THEN ((v0.c0)<=(vt0.c0)) WHEN (vt0.c0 IN ()) THEN v0.c0 COLLATE RTRIM WHEN NULL THEN CASE t0.c0  WHEN x'fa83' THEN v0.c0 ELSE t0.c0 END WHEN ((v0.c0) BETWEEN (vt0.c0) AND (t0.c0)) THEN ((vt0.c0) NOTNULL) WHEN CAST(vt0.c0 AS NUMERIC) THEN CASE vt0.c0  WHEN t0.c0 THEN v0.c0 ELSE vt0.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((t0.c0)&(t0.c0)), (t0.c0 IN ()))) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN t0 ORDER BY CASE WHEN ((vt0.c0)OR(v0.c0)) THEN ((v0.c0)<=(vt0.c0)) WHEN (vt0.c0 IN ()) THEN v0.c0 COLLATE RTRIM WHEN NULL THEN CASE t0.c0  WHEN x'fa83' THEN v0.c0 ELSE t0.c0 END WHEN ((v0.c0) BETWEEN (vt0.c0) AND (t0.c0)) THEN ((vt0.c0) NOTNULL) WHEN CAST(vt0.c0 AS NUMERIC) THEN CASE vt0.c0  WHEN t0.c0 THEN v0.c0 ELSE vt0.c0 END END  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 NATURAL JOIN t0 WHERE (LIKE(((t0.c0)&(t0.c0)), (t0.c0 IN ()))) ORDER BY CASE WHEN ((vt0.c0)OR(v0.c0)) THEN ((v0.c0)<=(vt0.c0)) WHEN (vt0.c0 IN ()) THEN v0.c0 COLLATE RTRIM WHEN NULL THEN CASE t0.c0  WHEN x'fa83' THEN v0.c0 ELSE t0.c0 END WHEN ((v0.c0) BETWEEN (vt0.c0) AND (t0.c0)) THEN ((vt0.c0) NOTNULL) WHEN CAST(vt0.c0 AS NUMERIC) THEN CASE vt0.c0  WHEN t0.c0 THEN v0.c0 ELSE vt0.c0 END END  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0, t0 INNER JOIN rt0 ON CASE rt0.c0 COLLATE RTRIM  WHEN ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN NULL ELSE CAST(v0.c0 AS BLOB) END WHERE (((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN '' THEN vt0.c0 WHEN t0.c0 THEN v0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN '' THEN vt0.c0 WHEN t0.c0 THEN v0.c0 END) ISNULL)) IS TRUE)  as count FROM v0, vt0, t0 INNER JOIN rt0 ON CASE rt0.c0 COLLATE RTRIM  WHEN ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN NULL ELSE CAST(v0.c0 AS BLOB) END);
SELECT COUNT(*) FROM v0, vt0, t0 INNER JOIN rt0 ON CASE rt0.c0 COLLATE RTRIM  WHEN ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN NULL ELSE CAST(v0.c0 AS BLOB) END WHERE (((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN '' THEN vt0.c0 WHEN t0.c0 THEN v0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN '' THEN vt0.c0 WHEN t0.c0 THEN v0.c0 END) ISNULL)) IS TRUE)  as count FROM v0, vt0, t0 INNER JOIN rt0 ON CASE rt0.c0 COLLATE RTRIM  WHEN ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN NULL ELSE CAST(v0.c0 AS BLOB) END);
SELECT COUNT(*) FROM v0, vt0, t0 INNER JOIN rt0 ON CASE rt0.c0 COLLATE RTRIM  WHEN ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN NULL ELSE CAST(v0.c0 AS BLOB) END WHERE (((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN '' THEN vt0.c0 WHEN t0.c0 THEN v0.c0 END) ISNULL));
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON t0.c0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c2 AS REAL)) NOTNULL) CROSS JOIN vt0 ON (((t0.c0, rt0.c2, NULL)) BETWEEN ((NULLIF(DISTINCT v0.c0, rt0.c2), TRIM(DISTINCT vt0.c0, rt0.c2), CAST(vt0.c0 AS BLOB))) AND ((CASE v0.c0  WHEN rt0.c2 THEN t0.c0 WHEN '1527258014' THEN t0.c0 WHEN t0.c0 THEN rt0.c2 END, ((t0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), 1.48417566E9))) WHERE (LIKELIHOOD(((rt0.c0) BETWEEN ('434298988') AND (v0.c0)), 0.9459749707072903)) ORDER BY (~ (((rt0.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((rt0.c0) BETWEEN ('434298988') AND (v0.c0)), 0.9459749707072903)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON t0.c0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c2 AS REAL)) NOTNULL) CROSS JOIN vt0 ON (((t0.c0, rt0.c2, NULL)) BETWEEN ((NULLIF(DISTINCT v0.c0, rt0.c2), TRIM(DISTINCT vt0.c0, rt0.c2), CAST(vt0.c0 AS BLOB))) AND ((CASE v0.c0  WHEN rt0.c2 THEN t0.c0 WHEN '1527258014' THEN t0.c0 WHEN t0.c0 THEN rt0.c2 END, ((t0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), 1.48417566E9))) ORDER BY (~ (((rt0.c0) IS FALSE)))  NULLS FIRST);
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON t0.c0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c2 AS REAL)) NOTNULL) CROSS JOIN vt0 ON (((t0.c0, rt0.c2, NULL)) BETWEEN ((NULLIF(DISTINCT v0.c0, rt0.c2), TRIM(DISTINCT vt0.c0, rt0.c2), CAST(vt0.c0 AS BLOB))) AND ((CASE v0.c0  WHEN rt0.c2 THEN t0.c0 WHEN '1527258014' THEN t0.c0 WHEN t0.c0 THEN rt0.c2 END, ((t0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), 1.48417566E9))) WHERE (LIKELIHOOD(((rt0.c0) BETWEEN ('434298988') AND (v0.c0)), 0.9459749707072903)) ORDER BY (~ (((rt0.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((rt0.c0) BETWEEN ('434298988') AND (v0.c0)), 0.9459749707072903)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON t0.c0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c2 AS REAL)) NOTNULL) CROSS JOIN vt0 ON (((t0.c0, rt0.c2, NULL)) BETWEEN ((NULLIF(DISTINCT v0.c0, rt0.c2), TRIM(DISTINCT vt0.c0, rt0.c2), CAST(vt0.c0 AS BLOB))) AND ((CASE v0.c0  WHEN rt0.c2 THEN t0.c0 WHEN '1527258014' THEN t0.c0 WHEN t0.c0 THEN rt0.c2 END, ((t0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), 1.48417566E9))) ORDER BY (~ (((rt0.c0) IS FALSE)))  NULLS FIRST);
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON t0.c0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c2 AS REAL)) NOTNULL) CROSS JOIN vt0 ON (((t0.c0, rt0.c2, NULL)) BETWEEN ((NULLIF(DISTINCT v0.c0, rt0.c2), TRIM(DISTINCT vt0.c0, rt0.c2), CAST(vt0.c0 AS BLOB))) AND ((CASE v0.c0  WHEN rt0.c2 THEN t0.c0 WHEN '1527258014' THEN t0.c0 WHEN t0.c0 THEN rt0.c2 END, ((t0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), 1.48417566E9))) WHERE (LIKELIHOOD(((rt0.c0) BETWEEN ('434298988') AND (v0.c0)), 0.9459749707072903)) ORDER BY (~ (((rt0.c0) IS FALSE)))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (CAST(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (CAST(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (CAST(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS INTEGER));
SELECT ALL * FROM rt0, t0 WHERE (((x'')OR(((t0.c0) BETWEEN (t0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')OR(((t0.c0) BETWEEN (t0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((x'')OR(((t0.c0) BETWEEN (t0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')OR(((t0.c0) BETWEEN (t0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((x'')OR(((t0.c0) BETWEEN (t0.c0) AND (rt0.c1)))));
SELECT * FROM v0, t0 WHERE ((((v0.c0)<=(v0.c0)) IN ())) ORDER BY (((t0.c0 IN (v0.c0)))<(((t0.c0)&(t0.c0)))) DESC  NULLS LAST, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)<=(v0.c0)) IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY (((t0.c0 IN (v0.c0)))<(((t0.c0)&(t0.c0)))) DESC  NULLS LAST, NULL  NULLS FIRST);
SELECT * FROM v0, t0 WHERE ((((v0.c0)<=(v0.c0)) IN ())) ORDER BY (((t0.c0 IN (v0.c0)))<(((t0.c0)&(t0.c0)))) DESC  NULLS LAST, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)<=(v0.c0)) IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY (((t0.c0 IN (v0.c0)))<(((t0.c0)&(t0.c0)))) DESC  NULLS LAST, NULL  NULLS FIRST);
SELECT * FROM v0, t0 WHERE ((((v0.c0)<=(v0.c0)) IN ())) ORDER BY (((t0.c0 IN (v0.c0)))<(((t0.c0)&(t0.c0)))) DESC  NULLS LAST, NULL  NULLS FIRST;
SELECT * FROM v0, vt0, rt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0, rt0, t0);
SELECT * FROM v0, vt0, rt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0, rt0, t0);
SELECT * FROM v0, vt0, rt0, t0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((6.16063728E8) BETWEEN (CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((6.16063728E8) BETWEEN (CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END) AND (x''))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((6.16063728E8) BETWEEN (CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((6.16063728E8) BETWEEN (CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END) AND (x''))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((6.16063728E8) BETWEEN (CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END) AND (x'')));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)AND(rt0.c1)))>(SQLITE_VERSION())));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(rt0.c1)))>(SQLITE_VERSION()))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)AND(rt0.c1)))>(SQLITE_VERSION())));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(rt0.c1)))>(SQLITE_VERSION()))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)AND(rt0.c1)))>(SQLITE_VERSION())));
SELECT * FROM v0, rt0 WHERE (((CAST(rt0.c1 AS INTEGER)) BETWEEN (2.069342706E9) AND (((rt0.c0)>>(v0.c0))))) ORDER BY 0.22684025898555038;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS INTEGER)) BETWEEN (2.069342706E9) AND (((rt0.c0)>>(v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY 0.22684025898555038);
SELECT * FROM v0, rt0 WHERE (((CAST(rt0.c1 AS INTEGER)) BETWEEN (2.069342706E9) AND (((rt0.c0)>>(v0.c0))))) ORDER BY 0.22684025898555038;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS INTEGER)) BETWEEN (2.069342706E9) AND (((rt0.c0)>>(v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY 0.22684025898555038);
SELECT * FROM v0, rt0 WHERE (((CAST(rt0.c1 AS INTEGER)) BETWEEN (2.069342706E9) AND (((rt0.c0)>>(v0.c0))))) ORDER BY 0.22684025898555038;
SELECT * FROM t0, vt0 WHERE (CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END COLLATE NOCASE);
SELECT * FROM rt0 WHERE ((((((rt0.c0, rt0.c2, '774282088')) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((x'', rt0.c2, rt0.c1))))<(((1.179397915E9)LIKE(NULL))))) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c2, '774282088')) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((x'', rt0.c2, rt0.c1))))<(((1.179397915E9)LIKE(NULL))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((((rt0.c0, rt0.c2, '774282088')) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((x'', rt0.c2, rt0.c1))))<(((1.179397915E9)LIKE(NULL))))) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c2, '774282088')) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((x'', rt0.c2, rt0.c1))))<(((1.179397915E9)LIKE(NULL))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((((rt0.c0, rt0.c2, '774282088')) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((x'', rt0.c2, rt0.c1))))<(((1.179397915E9)LIKE(NULL))))) ORDER BY rt0.c1  NULLS FIRST;
SELECT * FROM vt0, v0, rt0, t0 WHERE (((((vt0.c0)*(t0.c0))) NOTNULL)) ORDER BY (IFNULL(vt0.c0, -1.898041336E9) IN (rt0.c1)) DESC  NULLS FIRST, CASE ((rt0.c0) BETWEEN (vt0.c0) AND (t0.c0))  WHEN ((v0.c0)+(rt0.c1)) THEN ((rt0.c1)-(rt0.c0)) ELSE CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN 0.8346340971489867 WHEN rt0.c2 THEN rt0.c0 END END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(t0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, v0, rt0, t0 ORDER BY (IFNULL(vt0.c0, -1.898041336E9) IN (rt0.c1)) DESC  NULLS FIRST, CASE ((rt0.c0) BETWEEN (vt0.c0) AND (t0.c0))  WHEN ((v0.c0)+(rt0.c1)) THEN ((rt0.c1)-(rt0.c0)) ELSE CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN 0.8346340971489867 WHEN rt0.c2 THEN rt0.c0 END END DESC  NULLS FIRST);
SELECT * FROM vt0, v0, rt0, t0 WHERE (((((vt0.c0)*(t0.c0))) NOTNULL)) ORDER BY (IFNULL(vt0.c0, -1.898041336E9) IN (rt0.c1)) DESC  NULLS FIRST, CASE ((rt0.c0) BETWEEN (vt0.c0) AND (t0.c0))  WHEN ((v0.c0)+(rt0.c1)) THEN ((rt0.c1)-(rt0.c0)) ELSE CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN 0.8346340971489867 WHEN rt0.c2 THEN rt0.c0 END END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(t0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, v0, rt0, t0 ORDER BY (IFNULL(vt0.c0, -1.898041336E9) IN (rt0.c1)) DESC  NULLS FIRST, CASE ((rt0.c0) BETWEEN (vt0.c0) AND (t0.c0))  WHEN ((v0.c0)+(rt0.c1)) THEN ((rt0.c1)-(rt0.c0)) ELSE CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN 0.8346340971489867 WHEN rt0.c2 THEN rt0.c0 END END DESC  NULLS FIRST);
SELECT * FROM vt0, v0, rt0, t0 WHERE (((((vt0.c0)*(t0.c0))) NOTNULL)) ORDER BY (IFNULL(vt0.c0, -1.898041336E9) IN (rt0.c1)) DESC  NULLS FIRST, CASE ((rt0.c0) BETWEEN (vt0.c0) AND (t0.c0))  WHEN ((v0.c0)+(rt0.c1)) THEN ((rt0.c1)-(rt0.c0)) ELSE CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN 0.8346340971489867 WHEN rt0.c2 THEN rt0.c0 END END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 NOT INDEXED FULL OUTER JOIN vt0 ON ((((vt0.c0)>=(v0.c0)))||(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))) WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((x'') IS TRUE), (((v0.c0))>=((vt0.c0)))))<>((CASE WHEN vt0.c0 THEN vt0.c0 END, 0.023493236836389375, LIKE(v0.c0, vt0.c0, 'K')))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((x'') IS TRUE), (((v0.c0))>=((vt0.c0)))))<>((CASE WHEN vt0.c0 THEN vt0.c0 END, 0.023493236836389375, LIKE(v0.c0, vt0.c0, 'K'))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((vt0.c0)>=(v0.c0)))||(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED FULL OUTER JOIN vt0 ON ((((vt0.c0)>=(v0.c0)))||(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))) WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((x'') IS TRUE), (((v0.c0))>=((vt0.c0)))))<>((CASE WHEN vt0.c0 THEN vt0.c0 END, 0.023493236836389375, LIKE(v0.c0, vt0.c0, 'K')))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((x'') IS TRUE), (((v0.c0))>=((vt0.c0)))))<>((CASE WHEN vt0.c0 THEN vt0.c0 END, 0.023493236836389375, LIKE(v0.c0, vt0.c0, 'K'))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((vt0.c0)>=(v0.c0)))||(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED FULL OUTER JOIN vt0 ON ((((vt0.c0)>=(v0.c0)))||(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))) WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((x'') IS TRUE), (((v0.c0))>=((vt0.c0)))))<>((CASE WHEN vt0.c0 THEN vt0.c0 END, 0.023493236836389375, LIKE(v0.c0, vt0.c0, 'K')))));
SELECT COUNT(*) FROM t0, v0 WHERE ((- (v0.c0)));
SELECT SUM(count) FROM (SELECT (((- (v0.c0))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ((- (v0.c0)));
SELECT SUM(count) FROM (SELECT (((- (v0.c0))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ((- (v0.c0)));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (x'');
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (((- (vt0.c0))) NOT BETWEEN (((v0.c0)+(vt0.c0))) AND (CAST('PWKzK5' AS INTEGER))) WHERE (CAST(((vt0.c0)/(NULL)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)/(NULL)) AS TEXT)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((- (vt0.c0))) NOT BETWEEN (((v0.c0)+(vt0.c0))) AND (CAST('PWKzK5' AS INTEGER))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (((- (vt0.c0))) NOT BETWEEN (((v0.c0)+(vt0.c0))) AND (CAST('PWKzK5' AS INTEGER))) WHERE (CAST(((vt0.c0)/(NULL)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)/(NULL)) AS TEXT)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((- (vt0.c0))) NOT BETWEEN (((v0.c0)+(vt0.c0))) AND (CAST('PWKzK5' AS INTEGER))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (((- (vt0.c0))) NOT BETWEEN (((v0.c0)+(vt0.c0))) AND (CAST('PWKzK5' AS INTEGER))) WHERE (CAST(((vt0.c0)/(NULL)) AS TEXT));
SELECT COUNT(*) FROM v0, vt0 INNER JOIN t0 ON (NOT ((rt0.c2 IN ()))) RIGHT OUTER JOIN rt0 ON CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM WHERE ((~ ((((('_''')AND(rt0.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((('_''')AND(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM v0, vt0 INNER JOIN t0 ON (NOT ((rt0.c2 IN ()))) RIGHT OUTER JOIN rt0 ON CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM);
SELECT COUNT(*) FROM v0, vt0 INNER JOIN t0 ON (NOT ((rt0.c2 IN ()))) RIGHT OUTER JOIN rt0 ON CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM WHERE ((~ ((((('_''')AND(rt0.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((('_''')AND(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM v0, vt0 INNER JOIN t0 ON (NOT ((rt0.c2 IN ()))) RIGHT OUTER JOIN rt0 ON CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM);
SELECT COUNT(*) FROM v0, vt0 INNER JOIN t0 ON (NOT ((rt0.c2 IN ()))) RIGHT OUTER JOIN rt0 ON CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM WHERE ((~ ((((('_''')AND(rt0.c0)))AND(rt0.c1)))));
SELECT * FROM rt0, vt0, v0, t0 WHERE (((((((t0.c0)OR(NULL)))AND(rt0.c2))) NOTNULL)) ORDER BY (((- (rt0.c0))) NOT BETWEEN (CASE v0.c0  WHEN t0.c0 THEN rt0.c2 ELSE v0.c0 END) AND (((rt0.c1)+(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(NULL)))AND(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0, v0, t0 ORDER BY (((- (rt0.c0))) NOT BETWEEN (CASE v0.c0  WHEN t0.c0 THEN rt0.c2 ELSE v0.c0 END) AND (((rt0.c1)+(v0.c0)))));
SELECT * FROM rt0, vt0, v0, t0 WHERE (((((((t0.c0)OR(NULL)))AND(rt0.c2))) NOTNULL)) ORDER BY (((- (rt0.c0))) NOT BETWEEN (CASE v0.c0  WHEN t0.c0 THEN rt0.c2 ELSE v0.c0 END) AND (((rt0.c1)+(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(NULL)))AND(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0, v0, t0 ORDER BY (((- (rt0.c0))) NOT BETWEEN (CASE v0.c0  WHEN t0.c0 THEN rt0.c2 ELSE v0.c0 END) AND (((rt0.c1)+(v0.c0)))));
SELECT * FROM rt0, vt0, v0, t0 WHERE (((((((t0.c0)OR(NULL)))AND(rt0.c2))) NOTNULL)) ORDER BY (((- (rt0.c0))) NOT BETWEEN (CASE v0.c0  WHEN t0.c0 THEN rt0.c2 ELSE v0.c0 END) AND (((rt0.c1)+(v0.c0))));
SELECT ALL * FROM t0 WHERE (('-1558409143' IN ()));
SELECT SUM(count) FROM (SELECT ((('-1558409143' IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (('-1558409143' IN ()));
SELECT SUM(count) FROM (SELECT ((('-1558409143' IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (('-1558409143' IN ()));
SELECT ALL * FROM t0, v0, vt0, rt0 WHERE ((((((rt0.c0, vt0.c0, rt0.c0, '', vt0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c2, vt0.c0, t0.c0, t0.c0))))+((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, vt0.c0, rt0.c0, '', vt0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c2, vt0.c0, t0.c0, t0.c0))))+((t0.c0 IN ())))) IS TRUE)  as count FROM t0, v0, vt0, rt0);
SELECT ALL * FROM t0, v0, vt0, rt0 WHERE ((((((rt0.c0, vt0.c0, rt0.c0, '', vt0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c2, vt0.c0, t0.c0, t0.c0))))+((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, vt0.c0, rt0.c0, '', vt0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c2, vt0.c0, t0.c0, t0.c0))))+((t0.c0 IN ())))) IS TRUE)  as count FROM t0, v0, vt0, rt0);
SELECT ALL * FROM t0, v0, vt0, rt0 WHERE ((((((rt0.c0, vt0.c0, rt0.c0, '', vt0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c2, vt0.c0, t0.c0, t0.c0))))+((t0.c0 IN ()))));
SELECT * FROM rt0, vt0 WHERE (CAST(CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END AS TEXT)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CAST(CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END AS TEXT)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CAST(CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END AS TEXT));
SELECT COUNT(*) FROM v0, t0, rt0 WHERE ((TYPEOF(t0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((TYPEOF(t0.c0) IN ())) IS TRUE)  as count FROM v0 NOT INDEXED, t0, rt0);
SELECT COUNT(*) FROM v0, t0, rt0 WHERE ((TYPEOF(t0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((TYPEOF(t0.c0) IN ())) IS TRUE)  as count FROM v0 NOT INDEXED, t0, rt0);
SELECT COUNT(*) FROM v0, t0, rt0 WHERE ((TYPEOF(t0.c0) IN ()));
SELECT COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt0 ON NULLIF(DISTINCT DATETIME(vt0.c0, rt0.c1, rt0.c1), (rt0.c1 IN ())) INNER JOIN t0 ON ((CASE rt0.c2  WHEN vt0.c0 THEN t0.c0 ELSE v0.c0 END) IS TRUE) WHERE (CASE CASE rt0.c1  WHEN rt0.c1 THEN NULL ELSE rt0.c2 END  WHEN vt0.c0 THEN ((vt0.c0)IS NOT(0.38658060580945985)) ELSE '-783346208' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c1  WHEN rt0.c1 THEN NULL ELSE rt0.c2 END  WHEN vt0.c0 THEN ((vt0.c0)IS NOT(0.38658060580945985)) ELSE '-783346208' END) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN vt0 ON NULLIF(DISTINCT DATETIME(vt0.c0, rt0.c1, rt0.c1), (rt0.c1 IN ())) INNER JOIN t0 ON ((CASE rt0.c2  WHEN vt0.c0 THEN t0.c0 ELSE v0.c0 END) IS TRUE));
SELECT COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt0 ON NULLIF(DISTINCT DATETIME(vt0.c0, rt0.c1, rt0.c1), (rt0.c1 IN ())) INNER JOIN t0 ON ((CASE rt0.c2  WHEN vt0.c0 THEN t0.c0 ELSE v0.c0 END) IS TRUE) WHERE (CASE CASE rt0.c1  WHEN rt0.c1 THEN NULL ELSE rt0.c2 END  WHEN vt0.c0 THEN ((vt0.c0)IS NOT(0.38658060580945985)) ELSE '-783346208' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c1  WHEN rt0.c1 THEN NULL ELSE rt0.c2 END  WHEN vt0.c0 THEN ((vt0.c0)IS NOT(0.38658060580945985)) ELSE '-783346208' END) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN vt0 ON NULLIF(DISTINCT DATETIME(vt0.c0, rt0.c1, rt0.c1), (rt0.c1 IN ())) INNER JOIN t0 ON ((CASE rt0.c2  WHEN vt0.c0 THEN t0.c0 ELSE v0.c0 END) IS TRUE));
SELECT COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt0 ON NULLIF(DISTINCT DATETIME(vt0.c0, rt0.c1, rt0.c1), (rt0.c1 IN ())) INNER JOIN t0 ON ((CASE rt0.c2  WHEN vt0.c0 THEN t0.c0 ELSE v0.c0 END) IS TRUE) WHERE (CASE CASE rt0.c1  WHEN rt0.c1 THEN NULL ELSE rt0.c2 END  WHEN vt0.c0 THEN ((vt0.c0)IS NOT(0.38658060580945985)) ELSE '-783346208' END);
SELECT * FROM t0 WHERE ((+ ('Mr2')));
SELECT SUM(count) FROM (SELECT (((+ ('Mr2'))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ ('Mr2')));
SELECT SUM(count) FROM (SELECT (((+ ('Mr2'))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ ('Mr2')));
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c1)LIKE(rt0.c0)))) AND ((((rt0.c2) ISNULL))))) ORDER BY ((json_object(NULL, rt0.c1))GLOB(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((((rt0.c1)LIKE(rt0.c0)))) AND ((((rt0.c2) ISNULL))))) IS TRUE)  as count FROM rt0 ORDER BY ((json_object(NULL, rt0.c1))GLOB(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c1)LIKE(rt0.c0)))) AND ((((rt0.c2) ISNULL))))) ORDER BY ((json_object(NULL, rt0.c1))GLOB(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((((rt0.c1)LIKE(rt0.c0)))) AND ((((rt0.c2) ISNULL))))) IS TRUE)  as count FROM rt0 ORDER BY ((json_object(NULL, rt0.c1))GLOB(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c1)LIKE(rt0.c0)))) AND ((((rt0.c2) ISNULL))))) ORDER BY ((json_object(NULL, rt0.c1))GLOB(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END));
SELECT * FROM v0, vt0 FULL OUTER JOIN t0 ON ((((CASE WHEN v0.c0 THEN v0.c0 ELSE '-854176791' END)AND(v0.c0)))AND((t0.c0 IN ()))) WHERE (((t0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) ISNULL)) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN t0 ON ((((CASE WHEN v0.c0 THEN v0.c0 ELSE '-854176791' END)AND(v0.c0)))AND((t0.c0 IN ()))));
SELECT * FROM v0, vt0 FULL OUTER JOIN t0 ON ((((CASE WHEN v0.c0 THEN v0.c0 ELSE '-854176791' END)AND(v0.c0)))AND((t0.c0 IN ()))) WHERE (((t0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) ISNULL)) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN t0 ON ((((CASE WHEN v0.c0 THEN v0.c0 ELSE '-854176791' END)AND(v0.c0)))AND((t0.c0 IN ()))));
SELECT * FROM v0, vt0 FULL OUTER JOIN t0 ON ((((CASE WHEN v0.c0 THEN v0.c0 ELSE '-854176791' END)AND(v0.c0)))AND((t0.c0 IN ()))) WHERE (((t0.c0) ISNULL));
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC)) BETWEEN (((v0.c0)<=(v0.c0))) AND (((v0.c0)|(v0.c0))))) ORDER BY ((v0.c0 COLLATE BINARY) NOT NULL), (((v0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (x'')))) AND (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (('?⼛lwEt'))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC)) BETWEEN (((v0.c0)<=(v0.c0))) AND (((v0.c0)|(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY) NOT NULL), (((v0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (x'')))) AND (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (('?⼛lwEt')))))));
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC)) BETWEEN (((v0.c0)<=(v0.c0))) AND (((v0.c0)|(v0.c0))))) ORDER BY ((v0.c0 COLLATE BINARY) NOT NULL), (((v0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (x'')))) AND (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (('?⼛lwEt'))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC)) BETWEEN (((v0.c0)<=(v0.c0))) AND (((v0.c0)|(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY) NOT NULL), (((v0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (x'')))) AND (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (('?⼛lwEt')))))));
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC)) BETWEEN (((v0.c0)<=(v0.c0))) AND (((v0.c0)|(v0.c0))))) ORDER BY ((v0.c0 COLLATE BINARY) NOT NULL), (((v0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (x'')))) AND (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (('?⼛lwEt'))))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c0)!=(t0.c0)) IN ())) ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)!=(t0.c0)) IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c0)!=(t0.c0)) IN ())) ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)!=(t0.c0)) IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c0)!=(t0.c0)) IN ())) ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) NOT NULL) DESC;
SELECT COUNT(*) FROM v0 WHERE (((((((((CAST(v0.c0 AS TEXT))AND((- (v0.c0)))))OR(((v0.c0) IS TRUE))))OR(CAST(v0.c0 AS INTEGER))))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(v0.c0 AS TEXT))AND((- (v0.c0)))))OR(((v0.c0) IS TRUE))))OR(CAST(v0.c0 AS INTEGER))))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((((CAST(v0.c0 AS TEXT))AND((- (v0.c0)))))OR(((v0.c0) IS TRUE))))OR(CAST(v0.c0 AS INTEGER))))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(v0.c0 AS TEXT))AND((- (v0.c0)))))OR(((v0.c0) IS TRUE))))OR(CAST(v0.c0 AS INTEGER))))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((((CAST(v0.c0 AS TEXT))AND((- (v0.c0)))))OR(((v0.c0) IS TRUE))))OR(CAST(v0.c0 AS INTEGER))))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (v0.c0 COLLATE NOCASE IN (((((vt0.c0)OR(rt0.c2)))AND(t0.c0)))) CROSS JOIN v0 ON (CAST(rt0.c1 AS BLOB) IN (0.34947894872570595, ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) WHERE ((((rt0.c1 IN ())) IS TRUE)) ORDER BY (((rt0.c1, rt0.c1, vt0.c0)) BETWEEN (((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), DATE(rt0.c2, rt0.c2, v0.c0, vt0.c0, v0.c0), rt0.c2)) AND ((CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END, ((vt0.c0)/(vt0.c0)), NULLIF(rt0.c1, '1676939391'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (v0.c0 COLLATE NOCASE IN (((((vt0.c0)OR(rt0.c2)))AND(t0.c0)))) CROSS JOIN v0 ON (CAST(rt0.c1 AS BLOB) IN (0.34947894872570595, ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) ORDER BY (((rt0.c1, rt0.c1, vt0.c0)) BETWEEN (((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), DATE(rt0.c2, rt0.c2, v0.c0, vt0.c0, v0.c0), rt0.c2)) AND ((CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END, ((vt0.c0)/(vt0.c0)), NULLIF(rt0.c1, '1676939391'))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (v0.c0 COLLATE NOCASE IN (((((vt0.c0)OR(rt0.c2)))AND(t0.c0)))) CROSS JOIN v0 ON (CAST(rt0.c1 AS BLOB) IN (0.34947894872570595, ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) WHERE ((((rt0.c1 IN ())) IS TRUE)) ORDER BY (((rt0.c1, rt0.c1, vt0.c0)) BETWEEN (((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), DATE(rt0.c2, rt0.c2, v0.c0, vt0.c0, v0.c0), rt0.c2)) AND ((CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END, ((vt0.c0)/(vt0.c0)), NULLIF(rt0.c1, '1676939391'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (v0.c0 COLLATE NOCASE IN (((((vt0.c0)OR(rt0.c2)))AND(t0.c0)))) CROSS JOIN v0 ON (CAST(rt0.c1 AS BLOB) IN (0.34947894872570595, ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) ORDER BY (((rt0.c1, rt0.c1, vt0.c0)) BETWEEN (((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), DATE(rt0.c2, rt0.c2, v0.c0, vt0.c0, v0.c0), rt0.c2)) AND ((CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END, ((vt0.c0)/(vt0.c0)), NULLIF(rt0.c1, '1676939391'))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (v0.c0 COLLATE NOCASE IN (((((vt0.c0)OR(rt0.c2)))AND(t0.c0)))) CROSS JOIN v0 ON (CAST(rt0.c1 AS BLOB) IN (0.34947894872570595, ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) WHERE ((((rt0.c1 IN ())) IS TRUE)) ORDER BY (((rt0.c1, rt0.c1, vt0.c0)) BETWEEN (((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), DATE(rt0.c2, rt0.c2, v0.c0, vt0.c0, v0.c0), rt0.c2)) AND ((CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END, ((vt0.c0)/(vt0.c0)), NULLIF(rt0.c1, '1676939391'))))  NULLS LAST;
SELECT * FROM vt0 WHERE (UPPER(DISTINCT CAST(vt0.c0 AS BLOB))) ORDER BY (((vt0.c0, ((vt0.c0)>(vt0.c0)), ((vt0.c0)&(vt0.c0))))<=((LOWER(vt0.c0), ((vt0.c0)LIKE(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, ((vt0.c0)>(vt0.c0)), ((vt0.c0)&(vt0.c0))))<=((LOWER(vt0.c0), ((vt0.c0)LIKE(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (UPPER(DISTINCT CAST(vt0.c0 AS BLOB))) ORDER BY (((vt0.c0, ((vt0.c0)>(vt0.c0)), ((vt0.c0)&(vt0.c0))))<=((LOWER(vt0.c0), ((vt0.c0)LIKE(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, ((vt0.c0)>(vt0.c0)), ((vt0.c0)&(vt0.c0))))<=((LOWER(vt0.c0), ((vt0.c0)LIKE(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (UPPER(DISTINCT CAST(vt0.c0 AS BLOB))) ORDER BY (((vt0.c0, ((vt0.c0)>(vt0.c0)), ((vt0.c0)&(vt0.c0))))<=((LOWER(vt0.c0), ((vt0.c0)LIKE(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))) DESC  NULLS LAST;
SELECT ALL * FROM t0, rt0, v0, vt0 WHERE (((((x'')AND(IFNULL(DISTINCT t0.c0, rt0.c2))))AND((((t0.c0))==((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((x'')AND(IFNULL(DISTINCT t0.c0, rt0.c2))))AND((((t0.c0))==((rt0.c0)))))) IS TRUE)  as count FROM t0, rt0, v0 NOT INDEXED, vt0);
SELECT ALL * FROM t0, rt0, v0, vt0 WHERE (((((x'')AND(IFNULL(DISTINCT t0.c0, rt0.c2))))AND((((t0.c0))==((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((x'')AND(IFNULL(DISTINCT t0.c0, rt0.c2))))AND((((t0.c0))==((rt0.c0)))))) IS TRUE)  as count FROM t0, rt0, v0 NOT INDEXED, vt0);
SELECT ALL * FROM t0, rt0, v0, vt0 WHERE (((((x'')AND(IFNULL(DISTINCT t0.c0, rt0.c2))))AND((((t0.c0))==((rt0.c0))))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(((rt0.c2)AND(v0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)AND(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(((rt0.c2)AND(v0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)AND(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(((rt0.c2)AND(v0.c0)) AS INTEGER));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((- (rt0.c0))) NOTNULL)) ORDER BY ((((rt0.c0)GLOB(rt0.c0)))IS((rt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((rt0.c0)GLOB(rt0.c0)))IS((rt0.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((- (rt0.c0))) NOTNULL)) ORDER BY ((((rt0.c0)GLOB(rt0.c0)))IS((rt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((rt0.c0)GLOB(rt0.c0)))IS((rt0.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((- (rt0.c0))) NOTNULL)) ORDER BY ((((rt0.c0)GLOB(rt0.c0)))IS((rt0.c0 IN ())))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 COLLATE NOCASE AS NUMERIC)) ORDER BY ((((t0.c0 COLLATE BINARY)AND(((t0.c0)=('-786968899')))))OR(t0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0 COLLATE BINARY)AND(((t0.c0)==('-786968899')))))OR(t0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 COLLATE NOCASE AS NUMERIC)) ORDER BY ((((t0.c0 COLLATE BINARY)AND(((t0.c0)=('-786968899')))))OR(t0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0 COLLATE BINARY)AND(((t0.c0)==('-786968899')))))OR(t0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 COLLATE NOCASE AS NUMERIC)) ORDER BY ((((t0.c0 COLLATE BINARY)AND(((t0.c0)=('-786968899')))))OR(t0.c0 COLLATE RTRIM));
SELECT * FROM t0, v0 NOT INDEXED WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 NOT INDEXED WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 NOT INDEXED WHERE (NULL);
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS NOT(((x'') NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS NOT(((x'') NOT NULL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS NOT(((x'') NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS NOT(((x'') NOT NULL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS NOT(((x'') NOT NULL))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT NULL))&(((rt0.c0)>=(rt0.c2))))) ORDER BY (((rt0.c0 IN ()))%(SQLITE_VERSION()))  NULLS LAST, LIKELY(DISTINCT rt0.c2) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL))&(((rt0.c0)>=(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ()))%(SQLITE_VERSION()))  NULLS LAST, LIKELY(DISTINCT rt0.c2) COLLATE BINARY DESC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT NULL))&(((rt0.c0)>=(rt0.c2))))) ORDER BY (((rt0.c0 IN ()))%(SQLITE_VERSION()))  NULLS LAST, LIKELY(DISTINCT rt0.c2) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL))&(((rt0.c0)>=(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ()))%(SQLITE_VERSION()))  NULLS LAST, LIKELY(DISTINCT rt0.c2) COLLATE BINARY DESC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT NULL))&(((rt0.c0)>=(rt0.c2))))) ORDER BY (((rt0.c0 IN ()))%(SQLITE_VERSION()))  NULLS LAST, LIKELY(DISTINCT rt0.c2) COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (((load_extension(v0.c0))%(v0.c0))) ORDER BY (CAST(1.525413E7 AS INTEGER) IN (CAST(v0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((load_extension(v0.c0))%(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY (CAST(1.525413E7 AS INTEGER) IN (CAST(v0.c0 AS TEXT)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((load_extension(v0.c0))%(v0.c0))) ORDER BY (CAST(1.525413E7 AS INTEGER) IN (CAST(v0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((load_extension(v0.c0))%(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY (CAST(1.525413E7 AS INTEGER) IN (CAST(v0.c0 AS TEXT)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((load_extension(v0.c0))%(v0.c0))) ORDER BY (CAST(1.525413E7 AS INTEGER) IN (CAST(v0.c0 AS TEXT)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, v0, t0 WHERE (((CAST(rt0.c2 AS BLOB)) IS FALSE)) ORDER BY CAST((- (rt0.c0)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM rt0, vt0, v0, t0 ORDER BY CAST((- (rt0.c0)) AS TEXT) DESC);
SELECT COUNT(*) FROM rt0, vt0, v0, t0 WHERE (((CAST(rt0.c2 AS BLOB)) IS FALSE)) ORDER BY CAST((- (rt0.c0)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM rt0, vt0, v0, t0 ORDER BY CAST((- (rt0.c0)) AS TEXT) DESC);
SELECT COUNT(*) FROM rt0, vt0, v0, t0 WHERE (((CAST(rt0.c2 AS BLOB)) IS FALSE)) ORDER BY CAST((- (rt0.c0)) AS TEXT) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ('');
SELECT * FROM t0, rt0, v0, vt0 WHERE (((vt0.c0) NOT BETWEEN ('w>') AND (NULLIF(t0.c0, rt0.c1)))) ORDER BY (((~ (rt0.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN ('w>') AND (NULLIF(t0.c0, rt0.c1)))) IS TRUE)  as count FROM t0, rt0, v0, vt0 ORDER BY (((~ (rt0.c1))) NOT NULL));
SELECT * FROM t0, rt0, v0, vt0 WHERE (((vt0.c0) NOT BETWEEN ('w>') AND (NULLIF(t0.c0, rt0.c1)))) ORDER BY (((~ (rt0.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN ('w>') AND (NULLIF(t0.c0, rt0.c1)))) IS TRUE)  as count FROM t0, rt0, v0, vt0 ORDER BY (((~ (rt0.c1))) NOT NULL));
SELECT * FROM t0, rt0, v0, vt0 WHERE (((vt0.c0) NOT BETWEEN ('w>') AND (NULLIF(t0.c0, rt0.c1)))) ORDER BY (((~ (rt0.c1))) NOT NULL);
SELECT ALL COUNT(*) FROM v0, t0, rt0 WHERE (HEX(DISTINCT CASE rt0.c2  WHEN t0.c0 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT CASE rt0.c2  WHEN t0.c0 THEN rt0.c2 END)) IS TRUE)  as count FROM v0, t0, rt0);
SELECT ALL COUNT(*) FROM v0, t0, rt0 WHERE (HEX(DISTINCT CASE rt0.c2  WHEN t0.c0 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT CASE rt0.c2  WHEN t0.c0 THEN rt0.c2 END)) IS TRUE)  as count FROM v0, t0, rt0);
SELECT ALL COUNT(*) FROM v0, t0, rt0 WHERE (HEX(DISTINCT CASE rt0.c2  WHEN t0.c0 THEN rt0.c2 END));
SELECT * FROM t0 WHERE ((((((t0.c0))<>((t0.c0)))) NOTNULL)) ORDER BY ((t0.c0 COLLATE NOCASE)<(NULLIF(t0.c0, t0.c0)));
SELECT SUM(count) FROM (SELECT (((((((t0.c0))!=((t0.c0)))) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 COLLATE NOCASE)<(NULLIF(t0.c0, t0.c0))));
SELECT * FROM t0 WHERE ((((((t0.c0))<>((t0.c0)))) NOTNULL)) ORDER BY ((t0.c0 COLLATE NOCASE)<(NULLIF(t0.c0, t0.c0)));
SELECT SUM(count) FROM (SELECT (((((((t0.c0))!=((t0.c0)))) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 COLLATE NOCASE)<(NULLIF(t0.c0, t0.c0))));
SELECT * FROM t0 WHERE ((((((t0.c0))<>((t0.c0)))) NOTNULL)) ORDER BY ((t0.c0 COLLATE NOCASE)<(NULLIF(t0.c0, t0.c0)));
SELECT * FROM t0 WHERE (LIKELIHOOD(CAST(0Xffffffffd7b94966 AS REAL), 0.7996385247891759)) ORDER BY '0.6913708598122981' COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(CAST(0xffffffffd7b94966 AS REAL), 0.7996385247891759)) IS TRUE)  as count FROM t0 ORDER BY '0.6913708598122981' COLLATE RTRIM);
SELECT * FROM t0 WHERE (LIKELIHOOD(CAST(0Xffffffffd7b94966 AS REAL), 0.7996385247891759)) ORDER BY '0.6913708598122981' COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(CAST(0xffffffffd7b94966 AS REAL), 0.7996385247891759)) IS TRUE)  as count FROM t0 ORDER BY '0.6913708598122981' COLLATE RTRIM);
SELECT * FROM t0 WHERE (LIKELIHOOD(CAST(0Xffffffffd7b94966 AS REAL), 0.7996385247891759)) ORDER BY '0.6913708598122981' COLLATE RTRIM;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))%(((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))%(((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))%(((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))%(((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))%(((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c0)==(x'')), (rt0.c0 IN (rt0.c1, rt0.c0)), CAST(rt0.c1 AS BLOB)))==((TYPEOF(rt0.c1), CASE rt0.c1  WHEN '-1195104324' THEN v0.c0 ELSE rt0.c1 END, ((rt0.c1) IS FALSE))))) ORDER BY (((((((v0.c0, rt0.c1, rt0.c2))>((v0.c0, rt0.c2, rt0.c0))))AND(CASE 0.9395719472976165  WHEN v0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))AND((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)==(x'')), (rt0.c0 IN (rt0.c1, rt0.c0)), CAST(rt0.c1 AS BLOB)))=((TYPEOF(rt0.c1), CASE rt0.c1  WHEN '-1195104324' THEN v0.c0 ELSE rt0.c1 END, ((rt0.c1) IS FALSE))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((((v0.c0, rt0.c1, rt0.c2))>((v0.c0, rt0.c2, rt0.c0))))AND(CASE 0.9395719472976165  WHEN v0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))AND((rt0.c2 IN ()))));
SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c0)==(x'')), (rt0.c0 IN (rt0.c1, rt0.c0)), CAST(rt0.c1 AS BLOB)))==((TYPEOF(rt0.c1), CASE rt0.c1  WHEN '-1195104324' THEN v0.c0 ELSE rt0.c1 END, ((rt0.c1) IS FALSE))))) ORDER BY (((((((v0.c0, rt0.c1, rt0.c2))>((v0.c0, rt0.c2, rt0.c0))))AND(CASE 0.9395719472976165  WHEN v0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))AND((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)==(x'')), (rt0.c0 IN (rt0.c1, rt0.c0)), CAST(rt0.c1 AS BLOB)))=((TYPEOF(rt0.c1), CASE rt0.c1  WHEN '-1195104324' THEN v0.c0 ELSE rt0.c1 END, ((rt0.c1) IS FALSE))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((((v0.c0, rt0.c1, rt0.c2))>((v0.c0, rt0.c2, rt0.c0))))AND(CASE 0.9395719472976165  WHEN v0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))AND((rt0.c2 IN ()))));
SELECT ALL COUNT(*) FROM v0, t0, vt0, rt0 WHERE (((((v0.c0)||(rt0.c2))) BETWEEN (((rt0.c0)*(t0.c0))) AND (CHAR(rt0.c0)))) ORDER BY CASE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0))  WHEN rt0.c0 THEN ((rt0.c2)>=(0Xffffffff810a8b21)) WHEN ABS(rt0.c2) THEN (x'' IN ()) WHEN ((((rt0.c2)AND(t0.c0)))AND(rt0.c0)) THEN NULL WHEN (((rt0.c1, rt0.c1, v0.c0))>((v0.c0, rt0.c2, rt0.c2))) THEN (rt0.c1 IN ()) WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (t0.c0)) THEN ((((((((v0.c0)AND(rt0.c2)))AND(rt0.c2)))AND(t0.c0)))OR(v0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)||(rt0.c2))) BETWEEN (((rt0.c0)*(t0.c0))) AND (CHAR(rt0.c0)))) IS TRUE)  as count FROM v0, t0, vt0, rt0 ORDER BY CASE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0))  WHEN rt0.c0 THEN ((rt0.c2)>=(0xffffffff810a8b21)) WHEN ABS(rt0.c2) THEN (x'' IN ()) WHEN ((((rt0.c2)AND(t0.c0)))AND(rt0.c0)) THEN NULL WHEN (((rt0.c1, rt0.c1, v0.c0))>((v0.c0, rt0.c2, rt0.c2))) THEN (rt0.c1 IN ()) WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (t0.c0)) THEN ((((((((v0.c0)AND(rt0.c2)))AND(rt0.c2)))AND(t0.c0)))OR(v0.c0)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, vt0, rt0 WHERE (((((v0.c0)||(rt0.c2))) BETWEEN (((rt0.c0)*(t0.c0))) AND (CHAR(rt0.c0)))) ORDER BY CASE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0))  WHEN rt0.c0 THEN ((rt0.c2)>=(0Xffffffff810a8b21)) WHEN ABS(rt0.c2) THEN (x'' IN ()) WHEN ((((rt0.c2)AND(t0.c0)))AND(rt0.c0)) THEN NULL WHEN (((rt0.c1, rt0.c1, v0.c0))>((v0.c0, rt0.c2, rt0.c2))) THEN (rt0.c1 IN ()) WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (t0.c0)) THEN ((((((((v0.c0)AND(rt0.c2)))AND(rt0.c2)))AND(t0.c0)))OR(v0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)||(rt0.c2))) BETWEEN (((rt0.c0)*(t0.c0))) AND (CHAR(rt0.c0)))) IS TRUE)  as count FROM v0, t0, vt0, rt0 ORDER BY CASE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0))  WHEN rt0.c0 THEN ((rt0.c2)>=(0xffffffff810a8b21)) WHEN ABS(rt0.c2) THEN (x'' IN ()) WHEN ((((rt0.c2)AND(t0.c0)))AND(rt0.c0)) THEN NULL WHEN (((rt0.c1, rt0.c1, v0.c0))>((v0.c0, rt0.c2, rt0.c2))) THEN (rt0.c1 IN ()) WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (t0.c0)) THEN ((((((((v0.c0)AND(rt0.c2)))AND(rt0.c2)))AND(t0.c0)))OR(v0.c0)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, vt0, rt0 WHERE (((((v0.c0)||(rt0.c2))) BETWEEN (((rt0.c0)*(t0.c0))) AND (CHAR(rt0.c0)))) ORDER BY CASE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0))  WHEN rt0.c0 THEN ((rt0.c2)>=(0Xffffffff810a8b21)) WHEN ABS(rt0.c2) THEN (x'' IN ()) WHEN ((((rt0.c2)AND(t0.c0)))AND(rt0.c0)) THEN NULL WHEN (((rt0.c1, rt0.c1, v0.c0))>((v0.c0, rt0.c2, rt0.c2))) THEN (rt0.c1 IN ()) WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (t0.c0)) THEN ((((((((v0.c0)AND(rt0.c2)))AND(rt0.c2)))AND(t0.c0)))OR(v0.c0)) END DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((x'')OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<<(((vt0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<<(((vt0.c0) NOTNULL)))  NULLS LAST);
SELECT * FROM vt0 WHERE (((((x'')OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<<(((vt0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<<(((vt0.c0) NOTNULL)))  NULLS LAST);
SELECT * FROM vt0 WHERE (((((x'')OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<<(((vt0.c0) NOTNULL)))  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, t0 RIGHT OUTER JOIN rt0 ON (CAST(rt0.c1 AS TEXT) IN ()) WHERE (((((((rt0.c2)-(rt0.c1)))OR(((v0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))))OR(((rt0.c0)LIKE(rt0.c2))))) ORDER BY UNLIKELY(DISTINCT t0.c0) COLLATE BINARY ASC, (((rt0.c1 IN (v0.c0, t0.c0))) BETWEEN (rt0.c2) AND (LIKELY(DISTINCT rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)-(rt0.c1)))OR(((v0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))))OR(((rt0.c0)LIKE(rt0.c2))))) IS TRUE)  as count FROM v0, vt0, t0 RIGHT OUTER JOIN rt0 ON (CAST(rt0.c1 AS TEXT) IN ()) ORDER BY UNLIKELY(DISTINCT t0.c0) COLLATE BINARY ASC, (((rt0.c1 IN (v0.c0, t0.c0))) BETWEEN (rt0.c2) AND (LIKELY(DISTINCT rt0.c0))) ASC);
SELECT COUNT(*) FROM v0, vt0, t0 RIGHT OUTER JOIN rt0 ON (CAST(rt0.c1 AS TEXT) IN ()) WHERE (((((((rt0.c2)-(rt0.c1)))OR(((v0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))))OR(((rt0.c0)LIKE(rt0.c2))))) ORDER BY UNLIKELY(DISTINCT t0.c0) COLLATE BINARY ASC, (((rt0.c1 IN (v0.c0, t0.c0))) BETWEEN (rt0.c2) AND (LIKELY(DISTINCT rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)-(rt0.c1)))OR(((v0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))))OR(((rt0.c0)LIKE(rt0.c2))))) IS TRUE)  as count FROM v0, vt0, t0 RIGHT OUTER JOIN rt0 ON (CAST(rt0.c1 AS TEXT) IN ()) ORDER BY UNLIKELY(DISTINCT t0.c0) COLLATE BINARY ASC, (((rt0.c1 IN (v0.c0, t0.c0))) BETWEEN (rt0.c2) AND (LIKELY(DISTINCT rt0.c0))) ASC);
SELECT COUNT(*) FROM v0, vt0, t0 RIGHT OUTER JOIN rt0 ON (CAST(rt0.c1 AS TEXT) IN ()) WHERE (((((((rt0.c2)-(rt0.c1)))OR(((v0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))))OR(((rt0.c0)LIKE(rt0.c2))))) ORDER BY UNLIKELY(DISTINCT t0.c0) COLLATE BINARY ASC, (((rt0.c1 IN (v0.c0, t0.c0))) BETWEEN (rt0.c2) AND (LIKELY(DISTINCT rt0.c0))) ASC;
SELECT ALL * FROM t0, v0, vt0 WHERE ((((v0.c0 IN ())) ISNULL)) ORDER BY (((NOT (x''))) BETWEEN (NULLIF(t0.c0, t0.c0)) AND ('魨Y3墬')), ((x'')<<(TRIM(0.5713158007665332)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (((NOT (x''))) BETWEEN (NULLIF(t0.c0, t0.c0)) AND ('魨Y3墬')), ((x'')<<(TRIM(0.5713158007665332)))  NULLS FIRST);
SELECT ALL * FROM t0, v0, vt0 WHERE ((((v0.c0 IN ())) ISNULL)) ORDER BY (((NOT (x''))) BETWEEN (NULLIF(t0.c0, t0.c0)) AND ('魨Y3墬')), ((x'')<<(TRIM(0.5713158007665332)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (((NOT (x''))) BETWEEN (NULLIF(t0.c0, t0.c0)) AND ('魨Y3墬')), ((x'')<<(TRIM(0.5713158007665332)))  NULLS FIRST);
SELECT ALL * FROM t0, v0, vt0 WHERE ((((v0.c0 IN ())) ISNULL)) ORDER BY (((NOT (x''))) BETWEEN (NULLIF(t0.c0, t0.c0)) AND ('魨Y3墬')), ((x'')<<(TRIM(0.5713158007665332)))  NULLS FIRST;
SELECT * FROM t0, vt0, v0, rt0 WHERE (',V');
SELECT SUM(count) FROM (SELECT ALL ((',V') IS TRUE)  as count FROM t0, vt0, v0, rt0);
SELECT * FROM t0, vt0, v0, rt0 WHERE (',V');
SELECT SUM(count) FROM (SELECT ALL ((',V') IS TRUE)  as count FROM t0, vt0, v0, rt0);
SELECT * FROM t0, vt0, v0, rt0 WHERE (',V');
SELECT ALL * FROM v0, rt0, vt0 WHERE ((- (CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE ((- (CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE ((- (CAST(v0.c0 AS BLOB))));
SELECT * FROM v0, rt0, t0, vt0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((((NULL)-(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((((NULL)-(rt0.c2)))))) IS TRUE)  as count FROM v0, rt0, t0, vt0);
SELECT * FROM v0, rt0, t0, vt0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((((NULL)-(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((((NULL)-(rt0.c2)))))) IS TRUE)  as count FROM v0, rt0, t0, vt0);
SELECT * FROM v0, rt0, t0, vt0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((((NULL)-(rt0.c2))))));
SELECT * FROM vt0 NOT INDEXED, rt0, v0, t0 WHERE ((((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, rt0, v0, t0);
SELECT * FROM vt0 NOT INDEXED, rt0, v0, t0 WHERE ((((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, rt0, v0, t0);
SELECT * FROM vt0 NOT INDEXED, rt0, v0, t0 WHERE ((((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN ()));
SELECT * FROM v0, vt0, t0, rt0 WHERE ((((+ (t0.c0)))<<(CASE 0.22664952706470043  WHEN vt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c0)))<<(CASE 0.22664952706470043  WHEN vt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM v0, vt0, t0, rt0);
SELECT * FROM v0, vt0, t0, rt0 WHERE ((((+ (t0.c0)))<<(CASE 0.22664952706470043  WHEN vt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c0)))<<(CASE 0.22664952706470043  WHEN vt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM v0, vt0, t0, rt0);
SELECT * FROM v0, vt0, t0, rt0 WHERE ((((+ (t0.c0)))<<(CASE 0.22664952706470043  WHEN vt0.c0 THEN rt0.c1 END)));
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN t0 ON 0.10312249851499244 RIGHT OUTER JOIN v0 ON (((rt0.c1 IN (rt0.c0))) BETWEEN (v0.c0 COLLATE NOCASE) AND (CAST(rt0.c1 AS INTEGER))) WHERE ((~ (rt0.c1 COLLATE BINARY))) ORDER BY CAST(((rt0.c0)>>(rt0.c1)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON 0.10312249851499244 RIGHT OUTER JOIN v0 ON (((rt0.c1 IN (rt0.c0))) BETWEEN (v0.c0 COLLATE NOCASE) AND (CAST(rt0.c1 AS INTEGER))) ORDER BY CAST(((rt0.c0)>>(rt0.c1)) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN t0 ON 0.10312249851499244 RIGHT OUTER JOIN v0 ON (((rt0.c1 IN (rt0.c0))) BETWEEN (v0.c0 COLLATE NOCASE) AND (CAST(rt0.c1 AS INTEGER))) WHERE ((~ (rt0.c1 COLLATE BINARY))) ORDER BY CAST(((rt0.c0)>>(rt0.c1)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON 0.10312249851499244 RIGHT OUTER JOIN v0 ON (((rt0.c1 IN (rt0.c0))) BETWEEN (v0.c0 COLLATE NOCASE) AND (CAST(rt0.c1 AS INTEGER))) ORDER BY CAST(((rt0.c0)>>(rt0.c1)) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN t0 ON 0.10312249851499244 RIGHT OUTER JOIN v0 ON (((rt0.c1 IN (rt0.c0))) BETWEEN (v0.c0 COLLATE NOCASE) AND (CAST(rt0.c1 AS INTEGER))) WHERE ((~ (rt0.c1 COLLATE BINARY))) ORDER BY CAST(((rt0.c0)>>(rt0.c1)) AS INTEGER) ASC;
SELECT * FROM t0, rt0 WHERE (TRIM(DISTINCT ((rt0.c1)*(rt0.c0)), ((rt0.c0)/(rt0.c0)))) ORDER BY ((((rt0.c0)LIKE(NULL)))+(((rt0.c1) NOT NULL))) ASC, ((((rt0.c2) ISNULL)) IS FALSE);
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((rt0.c1)*(rt0.c0)), ((rt0.c0)/(rt0.c0)))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c0)LIKE(NULL)))+(((rt0.c1) NOT NULL))) ASC, ((((rt0.c2) ISNULL)) IS FALSE));
SELECT * FROM t0, rt0 WHERE (TRIM(DISTINCT ((rt0.c1)*(rt0.c0)), ((rt0.c0)/(rt0.c0)))) ORDER BY ((((rt0.c0)LIKE(NULL)))+(((rt0.c1) NOT NULL))) ASC, ((((rt0.c2) ISNULL)) IS FALSE);
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((rt0.c1)*(rt0.c0)), ((rt0.c0)/(rt0.c0)))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c0)LIKE(NULL)))+(((rt0.c1) NOT NULL))) ASC, ((((rt0.c2) ISNULL)) IS FALSE));
SELECT * FROM t0, rt0 WHERE (TRIM(DISTINCT ((rt0.c1)*(rt0.c0)), ((rt0.c0)/(rt0.c0)))) ORDER BY ((((rt0.c0)LIKE(NULL)))+(((rt0.c1) NOT NULL))) ASC, ((((rt0.c2) ISNULL)) IS FALSE);
SELECT ALL * FROM rt0, t0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (rt0.c0);
SELECT ALL * FROM rt0 WHERE (CHAR((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((CHAR((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CHAR((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((CHAR((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CHAR((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (IFNULL(DISTINCT CAST(v0.c0 AS BLOB), ((((v0.c0)OR(v0.c0)))AND('-783346208')))) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT CAST(v0.c0 AS BLOB), ((((v0.c0)OR(v0.c0)))AND('-783346208')))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (IFNULL(DISTINCT CAST(v0.c0 AS BLOB), ((((v0.c0)OR(v0.c0)))AND('-783346208')))) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT CAST(v0.c0 AS BLOB), ((((v0.c0)OR(v0.c0)))AND('-783346208')))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (IFNULL(DISTINCT CAST(v0.c0 AS BLOB), ((((v0.c0)OR(v0.c0)))AND('-783346208')))) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((((rt0.c2)<<(0.709986318345999)))))) ORDER BY ((0.10315776693194434)*(COALESCE(DISTINCT rt0.c2, rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((((rt0.c2)<<(0.709986318345999)))))) IS TRUE)  as count FROM rt0 ORDER BY ((0.10315776693194434)*(COALESCE(DISTINCT rt0.c2, rt0.c1))) ASC);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((((rt0.c2)<<(0.709986318345999)))))) ORDER BY ((0.10315776693194434)*(COALESCE(DISTINCT rt0.c2, rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((((rt0.c2)<<(0.709986318345999)))))) IS TRUE)  as count FROM rt0 ORDER BY ((0.10315776693194434)*(COALESCE(DISTINCT rt0.c2, rt0.c1))) ASC);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((((rt0.c2)<<(0.709986318345999)))))) ORDER BY ((0.10315776693194434)*(COALESCE(DISTINCT rt0.c2, rt0.c1))) ASC;
SELECT COUNT(*) FROM v0, vt0, t0, rt0 WHERE (CASE WHEN CASE vt0.c0  WHEN t0.c0 THEN v0.c0 END THEN ((t0.c0)+(NULL)) WHEN ((rt0.c1)-(-1694314527)) THEN CASE WHEN v0.c0 THEN rt0.c2 END WHEN CASE v0.c0  WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN t0.c0 THEN v0.c0 ELSE vt0.c0 END THEN LIKELIHOOD(DISTINCT rt0.c0, 0.7423335906628092) WHEN rt0.c1 COLLATE RTRIM THEN vt0.c0 WHEN CASE WHEN x'' THEN v0.c0 ELSE rt0.c0 END THEN vt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c0  WHEN t0.c0 THEN v0.c0 END THEN ((t0.c0)+(NULL)) WHEN ((rt0.c1)-(-1694314527)) THEN CASE WHEN v0.c0 THEN rt0.c2 END WHEN CASE v0.c0  WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN t0.c0 THEN v0.c0 ELSE vt0.c0 END THEN LIKELIHOOD(DISTINCT rt0.c0, 0.7423335906628092) WHEN rt0.c1 COLLATE RTRIM THEN vt0.c0 WHEN CASE WHEN x'' THEN v0.c0 ELSE rt0.c0 END THEN vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM v0, vt0, t0, rt0);
SELECT COUNT(*) FROM v0, vt0, t0, rt0 WHERE (CASE WHEN CASE vt0.c0  WHEN t0.c0 THEN v0.c0 END THEN ((t0.c0)+(NULL)) WHEN ((rt0.c1)-(-1694314527)) THEN CASE WHEN v0.c0 THEN rt0.c2 END WHEN CASE v0.c0  WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN t0.c0 THEN v0.c0 ELSE vt0.c0 END THEN LIKELIHOOD(DISTINCT rt0.c0, 0.7423335906628092) WHEN rt0.c1 COLLATE RTRIM THEN vt0.c0 WHEN CASE WHEN x'' THEN v0.c0 ELSE rt0.c0 END THEN vt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c0  WHEN t0.c0 THEN v0.c0 END THEN ((t0.c0)+(NULL)) WHEN ((rt0.c1)-(-1694314527)) THEN CASE WHEN v0.c0 THEN rt0.c2 END WHEN CASE v0.c0  WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN t0.c0 THEN v0.c0 ELSE vt0.c0 END THEN LIKELIHOOD(DISTINCT rt0.c0, 0.7423335906628092) WHEN rt0.c1 COLLATE RTRIM THEN vt0.c0 WHEN CASE WHEN x'' THEN v0.c0 ELSE rt0.c0 END THEN vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM v0, vt0, t0, rt0);
SELECT COUNT(*) FROM v0, vt0, t0, rt0 WHERE (CASE WHEN CASE vt0.c0  WHEN t0.c0 THEN v0.c0 END THEN ((t0.c0)+(NULL)) WHEN ((rt0.c1)-(-1694314527)) THEN CASE WHEN v0.c0 THEN rt0.c2 END WHEN CASE v0.c0  WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN t0.c0 THEN v0.c0 ELSE vt0.c0 END THEN LIKELIHOOD(DISTINCT rt0.c0, 0.7423335906628092) WHEN rt0.c1 COLLATE RTRIM THEN vt0.c0 WHEN CASE WHEN x'' THEN v0.c0 ELSE rt0.c0 END THEN vt0.c0 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM vt0, rt0, v0, t0 WHERE (((CASE v0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN rt0.c1 END) NOT BETWEEN (QUOTE(-2.113755078E9)) AND (((vt0.c0)LIKE(-1e500))))) ORDER BY ((CAST(rt0.c1 AS INTEGER)) BETWEEN (CASE t0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE t0.c0 END) AND (((x'') NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN rt0.c1 END) NOT BETWEEN (QUOTE(-2.113755078E9)) AND (((vt0.c0)LIKE(-1e500))))) IS TRUE)  as count FROM vt0, rt0, v0, t0 ORDER BY ((CAST(rt0.c1 AS INTEGER)) BETWEEN (CASE t0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE t0.c0 END) AND (((x'') NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, v0, t0 WHERE (((CASE v0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN rt0.c1 END) NOT BETWEEN (QUOTE(-2.113755078E9)) AND (((vt0.c0)LIKE(-1e500))))) ORDER BY ((CAST(rt0.c1 AS INTEGER)) BETWEEN (CASE t0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE t0.c0 END) AND (((x'') NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN rt0.c1 END) NOT BETWEEN (QUOTE(-2.113755078E9)) AND (((vt0.c0)LIKE(-1e500))))) IS TRUE)  as count FROM vt0, rt0, v0, t0 ORDER BY ((CAST(rt0.c1 AS INTEGER)) BETWEEN (CASE t0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE t0.c0 END) AND (((x'') NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, v0, t0 WHERE (((CASE v0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN rt0.c1 END) NOT BETWEEN (QUOTE(-2.113755078E9)) AND (((vt0.c0)LIKE(-1e500))))) ORDER BY ((CAST(rt0.c1 AS INTEGER)) BETWEEN (CASE t0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE t0.c0 END) AND (((x'') NOT NULL))) ASC;
SELECT * FROM t0, v0, rt0, vt0 WHERE (NULL) ORDER BY ((vt0.c0 IN ()) IN (x'')) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, v0, rt0, vt0 ORDER BY ((vt0.c0 IN ()) IN (x'')) ASC);
SELECT * FROM t0, v0, rt0, vt0 WHERE (NULL) ORDER BY ((vt0.c0 IN ()) IN (x'')) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, v0, rt0, vt0 ORDER BY ((vt0.c0 IN ()) IN (x'')) ASC);
SELECT * FROM t0, v0, rt0, vt0 WHERE (NULL) ORDER BY ((vt0.c0 IN ()) IN (x'')) ASC;
SELECT ALL * FROM vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (NULL);
SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((rt0.c1)OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c1)OR(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((rt0.c1)OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c1)OR(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((rt0.c1)OR(rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (((LIKE(rt0.c1, 0.9795804234306991)) ISNULL)) ORDER BY CASE WHEN ((rt0.c2)<>(rt0.c2)) THEN (rt0.c2 IN ()) ELSE ((rt0.c0) NOT NULL) END, ((rt0.c0 COLLATE RTRIM) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(rt0.c1, 0.9795804234306991)) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c2)!=(rt0.c2)) THEN (rt0.c2 IN ()) ELSE ((rt0.c0) NOT NULL) END, ((rt0.c0 COLLATE RTRIM) IS TRUE));
SELECT ALL * FROM rt0 WHERE (((LIKE(rt0.c1, 0.9795804234306991)) ISNULL)) ORDER BY CASE WHEN ((rt0.c2)<>(rt0.c2)) THEN (rt0.c2 IN ()) ELSE ((rt0.c0) NOT NULL) END, ((rt0.c0 COLLATE RTRIM) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(rt0.c1, 0.9795804234306991)) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c2)!=(rt0.c2)) THEN (rt0.c2 IN ()) ELSE ((rt0.c0) NOT NULL) END, ((rt0.c0 COLLATE RTRIM) IS TRUE));
SELECT ALL * FROM rt0 WHERE (((LIKE(rt0.c1, 0.9795804234306991)) ISNULL)) ORDER BY CASE WHEN ((rt0.c2)<>(rt0.c2)) THEN (rt0.c2 IN ()) ELSE ((rt0.c0) NOT NULL) END, ((rt0.c0 COLLATE RTRIM) IS TRUE);
SELECT ALL COUNT(*) FROM vt0, t0, v0, rt0 WHERE (((NOT (rt0.c2)) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((NOT (v0.c0)) IN (LIKELY(rt0.c1)))  NULLS LAST, ((((CASE rt0.c2  WHEN v0.c0 THEN x'a5af433a' WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)AND(((rt0.c1)+(vt0.c0)))))OR(0.183218370548199)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt0.c2)) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, t0, v0, rt0 ORDER BY ((NOT (v0.c0)) IN (LIKELY(rt0.c1)))  NULLS LAST, ((((CASE rt0.c2  WHEN v0.c0 THEN x'a5af433a' WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)AND(((rt0.c1)+(vt0.c0)))))OR(0.183218370548199)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, v0, rt0 WHERE (((NOT (rt0.c2)) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((NOT (v0.c0)) IN (LIKELY(rt0.c1)))  NULLS LAST, ((((CASE rt0.c2  WHEN v0.c0 THEN x'a5af433a' WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)AND(((rt0.c1)+(vt0.c0)))))OR(0.183218370548199)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt0.c2)) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, t0, v0, rt0 ORDER BY ((NOT (v0.c0)) IN (LIKELY(rt0.c1)))  NULLS LAST, ((((CASE rt0.c2  WHEN v0.c0 THEN x'a5af433a' WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)AND(((rt0.c1)+(vt0.c0)))))OR(0.183218370548199)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, v0, rt0 WHERE (((NOT (rt0.c2)) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((NOT (v0.c0)) IN (LIKELY(rt0.c1)))  NULLS LAST, ((((CASE rt0.c2  WHEN v0.c0 THEN x'a5af433a' WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)AND(((rt0.c1)+(vt0.c0)))))OR(0.183218370548199)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (json_extract(((rt0.c1)||(rt0.c1)), (+ (rt0.c0)), TRIM(rt0.c0, rt0.c0), CAST(rt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((json_extract(((rt0.c1)||(rt0.c1)), (+ (rt0.c0)), TRIM(rt0.c0, rt0.c0), CAST(rt0.c1 AS NUMERIC))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (json_extract(((rt0.c1)||(rt0.c1)), (+ (rt0.c0)), TRIM(rt0.c0, rt0.c0), CAST(rt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((json_extract(((rt0.c1)||(rt0.c1)), (+ (rt0.c0)), TRIM(rt0.c0, rt0.c0), CAST(rt0.c1 AS NUMERIC))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (json_extract(((rt0.c1)||(rt0.c1)), (+ (rt0.c0)), TRIM(rt0.c0, rt0.c0), CAST(rt0.c1 AS NUMERIC)));
SELECT ALL COUNT(*) FROM rt0, t0, vt0, v0 WHERE ((NOT (rt0.c1)) COLLATE RTRIM) ORDER BY 'd攓.t9ꎼ' ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, vt0, v0 ORDER BY 'd攓.t9ꎼ' ASC);
SELECT ALL COUNT(*) FROM rt0, t0, vt0, v0 WHERE ((NOT (rt0.c1)) COLLATE RTRIM) ORDER BY 'd攓.t9ꎼ' ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, vt0, v0 ORDER BY 'd攓.t9ꎼ' ASC);
SELECT ALL COUNT(*) FROM rt0, t0, vt0, v0 WHERE ((NOT (rt0.c1)) COLLATE RTRIM) ORDER BY 'd攓.t9ꎼ' ASC;
SELECT ALL * FROM rt0, t0, vt0 FULL OUTER JOIN v0 ON ((rt0.c1) IS FALSE) COLLATE RTRIM WHERE (v0.c0) ORDER BY ((((rt0.c2 IN ())))<=((rt0.c0))) DESC, v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, t0, vt0 FULL OUTER JOIN v0 ON ((rt0.c1) IS FALSE) COLLATE RTRIM ORDER BY ((((rt0.c2 IN ())))<=((rt0.c0))) DESC, v0.c0 DESC);
SELECT ALL * FROM rt0, t0, vt0 FULL OUTER JOIN v0 ON ((rt0.c1) IS FALSE) COLLATE RTRIM WHERE (v0.c0) ORDER BY ((((rt0.c2 IN ())))<=((rt0.c0))) DESC, v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, t0, vt0 FULL OUTER JOIN v0 ON ((rt0.c1) IS FALSE) COLLATE RTRIM ORDER BY ((((rt0.c2 IN ())))<=((rt0.c0))) DESC, v0.c0 DESC);
SELECT ALL * FROM rt0, t0, vt0 FULL OUTER JOIN v0 ON ((rt0.c1) IS FALSE) COLLATE RTRIM WHERE (v0.c0) ORDER BY ((((rt0.c2 IN ())))<=((rt0.c0))) DESC, v0.c0 DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (((NOT (v0.c0)) IN (((x'')==(v0.c0)), 0.4883114856199112))) ORDER BY v0.c0, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NOT (v0.c0)) IN (((x'')==(v0.c0)), 0.4883114856199112))) IS TRUE)  as count FROM v0 ORDER BY v0.c0, NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((NOT (v0.c0)) IN (((x'')==(v0.c0)), 0.4883114856199112))) ORDER BY v0.c0, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NOT (v0.c0)) IN (((x'')==(v0.c0)), 0.4883114856199112))) IS TRUE)  as count FROM v0 ORDER BY v0.c0, NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((NOT (v0.c0)) IN (((x'')==(v0.c0)), 0.4883114856199112))) ORDER BY v0.c0, NULL  NULLS FIRST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0))) BETWEEN (CAST(rt0.c1 AS REAL)) AND (vt0.c0)) FULL OUTER JOIN rt0 ON ((((((((CAST(rt0.c2 AS REAL))AND(((rt0.c1)AND(rt0.c0)))))OR(rt0.c0 COLLATE RTRIM)))AND(json_quote(rt0.c1))))OR(vt0.c0)) CROSS JOIN v0 ON ((CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 END) NOT BETWEEN (x'') AND ((rt0.c1 IN ()))) WHERE ((((NULL IN ()))LIKE(json(x'6630')))) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULL IN ()))LIKE(json(x'6630')))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0))) BETWEEN (CAST(rt0.c1 AS REAL)) AND (vt0.c0)) FULL OUTER JOIN rt0 ON ((((((((CAST(rt0.c2 AS REAL))AND(((rt0.c1)AND(rt0.c0)))))OR(rt0.c0 COLLATE RTRIM)))AND(json_quote(rt0.c1))))OR(vt0.c0)) CROSS JOIN v0 ON ((CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 END) NOT BETWEEN (x'') AND ((rt0.c1 IN ()))) ORDER BY v0.c0  NULLS LAST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0))) BETWEEN (CAST(rt0.c1 AS REAL)) AND (vt0.c0)) FULL OUTER JOIN rt0 ON ((((((((CAST(rt0.c2 AS REAL))AND(((rt0.c1)AND(rt0.c0)))))OR(rt0.c0 COLLATE RTRIM)))AND(json_quote(rt0.c1))))OR(vt0.c0)) CROSS JOIN v0 ON ((CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 END) NOT BETWEEN (x'') AND ((rt0.c1 IN ()))) WHERE ((((NULL IN ()))LIKE(json(x'6630')))) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULL IN ()))LIKE(json(x'6630')))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0))) BETWEEN (CAST(rt0.c1 AS REAL)) AND (vt0.c0)) FULL OUTER JOIN rt0 ON ((((((((CAST(rt0.c2 AS REAL))AND(((rt0.c1)AND(rt0.c0)))))OR(rt0.c0 COLLATE RTRIM)))AND(json_quote(rt0.c1))))OR(vt0.c0)) CROSS JOIN v0 ON ((CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 END) NOT BETWEEN (x'') AND ((rt0.c1 IN ()))) ORDER BY v0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CHAR(v0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CHAR(v0.c0) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CHAR(v0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CHAR(v0.c0) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CHAR(v0.c0) COLLATE RTRIM);
SELECT ALL * FROM t0, v0 WHERE (((t0.c0) IS FALSE) COLLATE BINARY) ORDER BY '-1746446164' ASC, UPPER(NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM t0, v0 ORDER BY '-1746446164' ASC, UPPER(NULL)  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE (((t0.c0) IS FALSE) COLLATE BINARY) ORDER BY '-1746446164' ASC, UPPER(NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM t0, v0 ORDER BY '-1746446164' ASC, UPPER(NULL)  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE (((t0.c0) IS FALSE) COLLATE BINARY) ORDER BY '-1746446164' ASC, UPPER(NULL)  NULLS LAST;
SELECT * FROM t0, rt0, vt0 WHERE (CASE json_array_length(vt0.c0, t0.c0)  WHEN CASE WHEN rt0.c2 THEN t0.c0 ELSE '' END THEN ((((rt0.c0)OR(NULL)))OR(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE json_array_length(vt0.c0, t0.c0)  WHEN CASE WHEN rt0.c2 THEN t0.c0 ELSE '' END THEN ((((rt0.c0)OR(NULL)))OR(rt0.c0)) END) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (CASE json_array_length(vt0.c0, t0.c0)  WHEN CASE WHEN rt0.c2 THEN t0.c0 ELSE '' END THEN ((((rt0.c0)OR(NULL)))OR(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE json_array_length(vt0.c0, t0.c0)  WHEN CASE WHEN rt0.c2 THEN t0.c0 ELSE '' END THEN ((((rt0.c0)OR(NULL)))OR(rt0.c0)) END) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (CASE json_array_length(vt0.c0, t0.c0)  WHEN CASE WHEN rt0.c2 THEN t0.c0 ELSE '' END THEN ((((rt0.c0)OR(NULL)))OR(rt0.c0)) END);
SELECT * FROM vt0, v0 WHERE (((((((vt0.c0)IS NOT(vt0.c0)))OR((((vt0.c0, vt0.c0, v0.c0))>=((v0.c0, vt0.c0, vt0.c0))))))AND(2069342706 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)IS NOT(vt0.c0)))OR((((vt0.c0, vt0.c0, v0.c0))>=((v0.c0, vt0.c0, vt0.c0))))))AND(2069342706 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((((vt0.c0)IS NOT(vt0.c0)))OR((((vt0.c0, vt0.c0, v0.c0))>=((v0.c0, vt0.c0, vt0.c0))))))AND(2069342706 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)IS NOT(vt0.c0)))OR((((vt0.c0, vt0.c0, v0.c0))>=((v0.c0, vt0.c0, vt0.c0))))))AND(2069342706 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((((vt0.c0)IS NOT(vt0.c0)))OR((((vt0.c0, vt0.c0, v0.c0))>=((v0.c0, vt0.c0, vt0.c0))))))AND(2069342706 COLLATE NOCASE)));
SELECT * FROM v0, rt0 INNER JOIN t0 ON CAST(((t0.c0)OR(rt0.c0)) AS TEXT) INNER JOIN vt0 ON CAST(((((v0.c0)OR(rt0.c0)))AND(rt0.c0)) AS TEXT) WHERE (((CASE WHEN t0.c0 THEN v0.c0 WHEN rt0.c1 THEN 1.39804124E8 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS TRUE)) ORDER BY (((((((('{}')OR(v0.c0 COLLATE BINARY)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR((((vt0.c0))==((t0.c0))))))AND(((rt0.c1)/(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN v0.c0 WHEN rt0.c1 THEN 1.39804124E8 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS TRUE)) IS TRUE)  as count FROM v0, rt0 INNER JOIN t0 ON CAST(((t0.c0)OR(rt0.c0)) AS TEXT) INNER JOIN vt0 ON CAST(((((v0.c0)OR(rt0.c0)))AND(rt0.c0)) AS TEXT) ORDER BY (((((((('{}')OR(v0.c0 COLLATE BINARY)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR((((vt0.c0))=((t0.c0))))))AND(((rt0.c1)/(rt0.c2)))) DESC);
SELECT * FROM v0, rt0 INNER JOIN t0 ON CAST(((t0.c0)OR(rt0.c0)) AS TEXT) INNER JOIN vt0 ON CAST(((((v0.c0)OR(rt0.c0)))AND(rt0.c0)) AS TEXT) WHERE (((CASE WHEN t0.c0 THEN v0.c0 WHEN rt0.c1 THEN 1.39804124E8 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS TRUE)) ORDER BY (((((((('{}')OR(v0.c0 COLLATE BINARY)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR((((vt0.c0))==((t0.c0))))))AND(((rt0.c1)/(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN v0.c0 WHEN rt0.c1 THEN 1.39804124E8 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS TRUE)) IS TRUE)  as count FROM v0, rt0 INNER JOIN t0 ON CAST(((t0.c0)OR(rt0.c0)) AS TEXT) INNER JOIN vt0 ON CAST(((((v0.c0)OR(rt0.c0)))AND(rt0.c0)) AS TEXT) ORDER BY (((((((('{}')OR(v0.c0 COLLATE BINARY)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR((((vt0.c0))=((t0.c0))))))AND(((rt0.c1)/(rt0.c2)))) DESC);
SELECT * FROM v0, rt0 INNER JOIN t0 ON CAST(((t0.c0)OR(rt0.c0)) AS TEXT) INNER JOIN vt0 ON CAST(((((v0.c0)OR(rt0.c0)))AND(rt0.c0)) AS TEXT) WHERE (((CASE WHEN t0.c0 THEN v0.c0 WHEN rt0.c1 THEN 1.39804124E8 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS TRUE)) ORDER BY (((((((('{}')OR(v0.c0 COLLATE BINARY)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR((((vt0.c0))==((t0.c0))))))AND(((rt0.c1)/(rt0.c2)))) DESC;
SELECT ALL COUNT(*) FROM v0, vt0 LEFT OUTER JOIN rt0 ON IFNULL(DISTINCT TYPEOF(rt0.c1), ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) WHERE (TRIM(0.2682190345858335));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(0.2682190345858335)) IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN rt0 ON IFNULL(DISTINCT TYPEOF(rt0.c1), ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL COUNT(*) FROM v0, vt0 LEFT OUTER JOIN rt0 ON IFNULL(DISTINCT TYPEOF(rt0.c1), ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) WHERE (TRIM(0.2682190345858335));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(0.2682190345858335)) IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN rt0 ON IFNULL(DISTINCT TYPEOF(rt0.c1), ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL COUNT(*) FROM v0, vt0 LEFT OUTER JOIN rt0 ON IFNULL(DISTINCT TYPEOF(rt0.c1), ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) WHERE (TRIM(0.2682190345858335));
SELECT * FROM v0, t0 RIGHT OUTER JOIN vt0 ON (((t0.c0 IN ('-389232680')))GLOB(((vt0.c0) IS TRUE))) WHERE (((t0.c0)|(((((((((vt0.c0)AND(t0.c0)))AND(NULL)))AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0)|(((((((((vt0.c0)AND(t0.c0)))AND(NULL)))AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0, t0 RIGHT OUTER JOIN vt0 ON (((t0.c0 IN ('-389232680')))GLOB(((vt0.c0) IS TRUE))));
SELECT * FROM v0, t0 RIGHT OUTER JOIN vt0 ON (((t0.c0 IN ('-389232680')))GLOB(((vt0.c0) IS TRUE))) WHERE (((t0.c0)|(((((((((vt0.c0)AND(t0.c0)))AND(NULL)))AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0)|(((((((((vt0.c0)AND(t0.c0)))AND(NULL)))AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0, t0 RIGHT OUTER JOIN vt0 ON (((t0.c0 IN ('-389232680')))GLOB(((vt0.c0) IS TRUE))));
SELECT * FROM v0, t0 RIGHT OUTER JOIN vt0 ON (((t0.c0 IN ('-389232680')))GLOB(((vt0.c0) IS TRUE))) WHERE (((t0.c0)|(((((((((vt0.c0)AND(t0.c0)))AND(NULL)))AND(v0.c0)))OR(v0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((~ (v0.c0)));
SELECT SUM(count) FROM (SELECT (((~ (v0.c0))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((~ (v0.c0)));
SELECT SUM(count) FROM (SELECT (((~ (v0.c0))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((~ (v0.c0)));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((rt0.c0)<(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((rt0.c0)<(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((rt0.c0)<(v0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)GLOB(rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c0)GLOB(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)GLOB(rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c0)GLOB(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)GLOB(rt0.c1)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((vt0.c0 IN (rt0.c1)) IN (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN (rt0.c1)) IN (rt0.c0))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((vt0.c0 IN (rt0.c1)) IN (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN (rt0.c1)) IN (rt0.c0))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((vt0.c0 IN (rt0.c1)) IN (rt0.c0)));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON '1695384296' CROSS JOIN t0 ON STRFTIME(CAST(v0.c0 AS TEXT), ((rt0.c2) NOTNULL), CASE WHEN v0.c0 THEN v0.c0 ELSE rt0.c0 END) FULL OUTER JOIN v0 ON (((rt0.c2) IS TRUE) IN ()) WHERE (CASE rt0.c2 COLLATE NOCASE  WHEN CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END THEN (t0.c0 IN (rt0.c0, t0.c0)) END) ORDER BY CAST(rt0.c0 AS BLOB) COLLATE BINARY, x'', ((((rt0.c2)=('}{'))) BETWEEN (((vt0.c0)/(rt0.c1))) AND ((rt0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2 COLLATE NOCASE  WHEN CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END THEN (t0.c0 IN (rt0.c0, t0.c0)) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON '1695384296' CROSS JOIN t0 ON STRFTIME(CAST(v0.c0 AS TEXT), ((rt0.c2) NOTNULL), CASE WHEN v0.c0 THEN v0.c0 ELSE rt0.c0 END) FULL OUTER JOIN v0 ON (((rt0.c2) IS TRUE) IN ()) ORDER BY CAST(rt0.c0 AS BLOB) COLLATE BINARY, x'', ((((rt0.c2)==('}{'))) BETWEEN (((vt0.c0)/(rt0.c1))) AND ((rt0.c0 IN ()))) ASC  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON '1695384296' CROSS JOIN t0 ON STRFTIME(CAST(v0.c0 AS TEXT), ((rt0.c2) NOTNULL), CASE WHEN v0.c0 THEN v0.c0 ELSE rt0.c0 END) FULL OUTER JOIN v0 ON (((rt0.c2) IS TRUE) IN ()) WHERE (CASE rt0.c2 COLLATE NOCASE  WHEN CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END THEN (t0.c0 IN (rt0.c0, t0.c0)) END) ORDER BY CAST(rt0.c0 AS BLOB) COLLATE BINARY, x'', ((((rt0.c2)=('}{'))) BETWEEN (((vt0.c0)/(rt0.c1))) AND ((rt0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2 COLLATE NOCASE  WHEN CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END THEN (t0.c0 IN (rt0.c0, t0.c0)) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON '1695384296' CROSS JOIN t0 ON STRFTIME(CAST(v0.c0 AS TEXT), ((rt0.c2) NOTNULL), CASE WHEN v0.c0 THEN v0.c0 ELSE rt0.c0 END) FULL OUTER JOIN v0 ON (((rt0.c2) IS TRUE) IN ()) ORDER BY CAST(rt0.c0 AS BLOB) COLLATE BINARY, x'', ((((rt0.c2)==('}{'))) BETWEEN (((vt0.c0)/(rt0.c1))) AND ((rt0.c0 IN ()))) ASC  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (((rt0.c0)<<(((rt0.c0)>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<<(((rt0.c0)>(rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((rt0.c0)<<(((rt0.c0)>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<<(((rt0.c0)>(rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((rt0.c0)<<(((rt0.c0)>(rt0.c1)))));
SELECT COUNT(*) FROM v0, t0, rt0, vt0 WHERE (((rt0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS FALSE)) IS TRUE)  as count FROM v0, t0, rt0, vt0);
SELECT COUNT(*) FROM v0, t0, rt0, vt0 WHERE (((rt0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS FALSE)) IS TRUE)  as count FROM v0, t0, rt0, vt0);
SELECT COUNT(*) FROM v0, t0, rt0, vt0 WHERE (((rt0.c0) IS FALSE));
SELECT COUNT(*) FROM rt0, vt0, t0, v0 WHERE (CASE WHEN (+ (rt0.c2)) THEN ((rt0.c0)*(NULL)) WHEN ((vt0.c0)/(rt0.c1)) THEN rt0.c0 COLLATE RTRIM WHEN rt0.c2 THEN ('' IN (t0.c0, v0.c0)) END) ORDER BY ((((t0.c0)OR(t0.c0)))AND(rt0.c2)) COLLATE RTRIM  NULLS FIRST, rt0.c1 ASC  NULLS FIRST, CAST(((rt0.c2)IS(t0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (rt0.c2)) THEN ((rt0.c0)*(NULL)) WHEN ((vt0.c0)/(rt0.c1)) THEN rt0.c0 COLLATE RTRIM WHEN rt0.c2 THEN ('' IN (t0.c0, v0.c0)) END) IS TRUE)  as count FROM rt0, vt0, t0, v0 ORDER BY ((((t0.c0)OR(t0.c0)))AND(rt0.c2)) COLLATE RTRIM  NULLS FIRST, rt0.c1 ASC  NULLS FIRST, CAST(((rt0.c2)IS(t0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, t0, v0 WHERE (CASE WHEN (+ (rt0.c2)) THEN ((rt0.c0)*(NULL)) WHEN ((vt0.c0)/(rt0.c1)) THEN rt0.c0 COLLATE RTRIM WHEN rt0.c2 THEN ('' IN (t0.c0, v0.c0)) END) ORDER BY ((((t0.c0)OR(t0.c0)))AND(rt0.c2)) COLLATE RTRIM  NULLS FIRST, rt0.c1 ASC  NULLS FIRST, CAST(((rt0.c2)IS(t0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (rt0.c2)) THEN ((rt0.c0)*(NULL)) WHEN ((vt0.c0)/(rt0.c1)) THEN rt0.c0 COLLATE RTRIM WHEN rt0.c2 THEN ('' IN (t0.c0, v0.c0)) END) IS TRUE)  as count FROM rt0, vt0, t0, v0 ORDER BY ((((t0.c0)OR(t0.c0)))AND(rt0.c2)) COLLATE RTRIM  NULLS FIRST, rt0.c1 ASC  NULLS FIRST, CAST(((rt0.c2)IS(t0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, t0, v0 WHERE (CASE WHEN (+ (rt0.c2)) THEN ((rt0.c0)*(NULL)) WHEN ((vt0.c0)/(rt0.c1)) THEN rt0.c0 COLLATE RTRIM WHEN rt0.c2 THEN ('' IN (t0.c0, v0.c0)) END) ORDER BY ((((t0.c0)OR(t0.c0)))AND(rt0.c2)) COLLATE RTRIM  NULLS FIRST, rt0.c1 ASC  NULLS FIRST, CAST(((rt0.c2)IS(t0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((CAST(t0.c0 AS BLOB))%(((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(t0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))<=(t0.c0 COLLATE BINARY)) ASC, (((v0.c0 IN ())) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS BLOB))%(((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(t0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))<=(t0.c0 COLLATE BINARY)) ASC, (((v0.c0 IN ())) NOTNULL));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((CAST(t0.c0 AS BLOB))%(((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(t0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))<=(t0.c0 COLLATE BINARY)) ASC, (((v0.c0 IN ())) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS BLOB))%(((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(t0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))<=(t0.c0 COLLATE BINARY)) ASC, (((v0.c0 IN ())) NOTNULL));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((CAST(t0.c0 AS BLOB))%(((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(t0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))<=(t0.c0 COLLATE BINARY)) ASC, (((v0.c0 IN ())) NOTNULL);
SELECT * FROM t0, v0, rt0, vt0 WHERE (UNLIKELY(CAST(x'' AS TEXT))) ORDER BY NULLIF(rt0.c2 COLLATE NOCASE, (~ (v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(CAST(x'' AS TEXT))) IS TRUE)  as count FROM t0, v0, rt0, vt0 ORDER BY NULLIF(rt0.c2 COLLATE NOCASE, (~ (v0.c0)))  NULLS FIRST);
SELECT * FROM t0, v0, rt0, vt0 WHERE (UNLIKELY(CAST(x'' AS TEXT))) ORDER BY NULLIF(rt0.c2 COLLATE NOCASE, (~ (v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(CAST(x'' AS TEXT))) IS TRUE)  as count FROM t0, v0, rt0, vt0 ORDER BY NULLIF(rt0.c2 COLLATE NOCASE, (~ (v0.c0)))  NULLS FIRST);
SELECT * FROM t0, v0, rt0, vt0 WHERE (UNLIKELY(CAST(x'' AS TEXT))) ORDER BY NULLIF(rt0.c2 COLLATE NOCASE, (~ (v0.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((((((v0.c0)AND(vt0.c0)))AND(t0.c0)))))) ORDER BY ((t0.c0)>=(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((((((v0.c0)AND(vt0.c0)))AND(t0.c0)))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((t0.c0)>=(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((((((v0.c0)AND(vt0.c0)))AND(t0.c0)))))) ORDER BY ((t0.c0)>=(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((((((v0.c0)AND(vt0.c0)))AND(t0.c0)))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((t0.c0)>=(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((((((v0.c0)AND(vt0.c0)))AND(t0.c0)))))) ORDER BY ((t0.c0)>=(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT * FROM t0, rt0, vt0 WHERE (x'a8c3') ORDER BY ((CAST(rt0.c2 AS TEXT))*(t0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'a8c3') IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((CAST(rt0.c2 AS TEXT))*(t0.c0)) ASC);
SELECT * FROM t0, rt0, vt0 WHERE (x'a8c3') ORDER BY ((CAST(rt0.c2 AS TEXT))*(t0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'a8c3') IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((CAST(rt0.c2 AS TEXT))*(t0.c0)) ASC);
SELECT * FROM t0, rt0, vt0 WHERE (x'a8c3') ORDER BY ((CAST(rt0.c2 AS TEXT))*(t0.c0)) ASC;
SELECT ALL * FROM vt0, rt0 WHERE (TYPEOF((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((~ (vt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (TYPEOF((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((~ (vt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (TYPEOF((~ (vt0.c0))));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)&(2008144484)) IN (0.6117636322049466)));
SELECT SUM(count) FROM (SELECT (((((t0.c0)&(2008144484)) IN (0.6117636322049466))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)&(2008144484)) IN (0.6117636322049466)));
SELECT SUM(count) FROM (SELECT (((((t0.c0)&(2008144484)) IN (0.6117636322049466))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)&(2008144484)) IN (0.6117636322049466)));
SELECT ALL COUNT(*) FROM v0 WHERE (TIME(v0.c0, v0.c0, NULL, v0.c0, '', 0.2682190345858335, v0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((TIME(v0.c0, v0.c0, NULL, v0.c0, '', 0.2682190345858335, v0.c0) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (TIME(v0.c0, v0.c0, NULL, v0.c0, '', 0.2682190345858335, v0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((TIME(v0.c0, v0.c0, NULL, v0.c0, '', 0.2682190345858335, v0.c0) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (TIME(v0.c0, v0.c0, NULL, v0.c0, '', 0.2682190345858335, v0.c0) COLLATE RTRIM);
SELECT ALL * FROM v0, rt0, vt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((TRIM(DISTINCT vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((TRIM(DISTINCT vt0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((TRIM(DISTINCT vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((TRIM(DISTINCT vt0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((TRIM(DISTINCT vt0.c0)))));
SELECT ALL * FROM rt0 WHERE ((- (CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((- (CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((- (CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((- (CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((- (CAST(rt0.c0 AS INTEGER))));
SELECT COUNT(*) FROM t0, vt0 WHERE ((t0.c0 COLLATE BINARY IN (((vt0.c0)+(t0.c0))))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))GLOB(''))  NULLS FIRST, ((((((((vt0.c0)OR(t0.c0)))OR(vt0.c0)))OR(t0.c0 COLLATE NOCASE)))AND((t0.c0 IN (x'')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 COLLATE BINARY IN (((vt0.c0)+(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))GLOB(''))  NULLS FIRST, ((((((((vt0.c0)OR(t0.c0)))OR(vt0.c0)))OR(t0.c0 COLLATE NOCASE)))AND((t0.c0 IN (x'')))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((t0.c0 COLLATE BINARY IN (((vt0.c0)+(t0.c0))))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))GLOB(''))  NULLS FIRST, ((((((((vt0.c0)OR(t0.c0)))OR(vt0.c0)))OR(t0.c0 COLLATE NOCASE)))AND((t0.c0 IN (x'')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 COLLATE BINARY IN (((vt0.c0)+(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))GLOB(''))  NULLS FIRST, ((((((((vt0.c0)OR(t0.c0)))OR(vt0.c0)))OR(t0.c0 COLLATE NOCASE)))AND((t0.c0 IN (x'')))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((t0.c0 COLLATE BINARY IN (((vt0.c0)+(t0.c0))))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))GLOB(''))  NULLS FIRST, ((((((((vt0.c0)OR(t0.c0)))OR(vt0.c0)))OR(t0.c0 COLLATE NOCASE)))AND((t0.c0 IN (x'')))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 NOT INDEXED, v0, t0 WHERE (0.07606395205988525) ORDER BY ((v0.c0 COLLATE RTRIM) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.07606395205988525) IS TRUE)  as count FROM vt0, rt0, v0, t0 ORDER BY ((v0.c0 COLLATE RTRIM) ISNULL) DESC);
SELECT COUNT(*) FROM vt0, rt0 NOT INDEXED, v0, t0 WHERE (0.07606395205988525) ORDER BY ((v0.c0 COLLATE RTRIM) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.07606395205988525) IS TRUE)  as count FROM vt0, rt0, v0, t0 ORDER BY ((v0.c0 COLLATE RTRIM) ISNULL) DESC);
SELECT COUNT(*) FROM vt0, rt0 NOT INDEXED, v0, t0 WHERE (0.07606395205988525) ORDER BY ((v0.c0 COLLATE RTRIM) ISNULL) DESC;
SELECT COUNT(*) FROM v0, vt0, t0 NATURAL JOIN rt0 WHERE ((((rt0.c1) BETWEEN (rt0.c2) AND (t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) BETWEEN (rt0.c2) AND (t0.c0)) IN ())) IS TRUE)  as count FROM v0, vt0, t0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM v0, vt0, t0 NATURAL JOIN rt0 WHERE ((((rt0.c1) BETWEEN (rt0.c2) AND (t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) BETWEEN (rt0.c2) AND (t0.c0)) IN ())) IS TRUE)  as count FROM v0, vt0, t0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM v0, vt0, t0 NATURAL JOIN rt0 WHERE ((((rt0.c1) BETWEEN (rt0.c2) AND (t0.c0)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)+(vt0.c0)))-((vt0.c0 IN (vt0.c0, vt0.c0))))) ORDER BY (- ((vt0.c0 IN ())))  NULLS FIRST, CASE (NOT (vt0.c0))  WHEN vt0.c0 THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)+(vt0.c0)))-((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (- ((vt0.c0 IN ())))  NULLS FIRST, CASE (NOT (vt0.c0))  WHEN vt0.c0 THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)+(vt0.c0)))-((vt0.c0 IN (vt0.c0, vt0.c0))))) ORDER BY (- ((vt0.c0 IN ())))  NULLS FIRST, CASE (NOT (vt0.c0))  WHEN vt0.c0 THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)+(vt0.c0)))-((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (- ((vt0.c0 IN ())))  NULLS FIRST, CASE (NOT (vt0.c0))  WHEN vt0.c0 THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)+(vt0.c0)))-((vt0.c0 IN (vt0.c0, vt0.c0))))) ORDER BY (- ((vt0.c0 IN ())))  NULLS FIRST, CASE (NOT (vt0.c0))  WHEN vt0.c0 THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END;
SELECT * FROM rt0, vt0, t0, v0 WHERE ((+ ((rt0.c1 IN (v0.c0))))) ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) ISNULL), ((v0.c0)||(rt0.c0)) COLLATE RTRIM ASC  NULLS LAST, (UNLIKELY(rt0.c2) IN ());
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c1 IN (v0.c0))))) IS TRUE)  as count FROM rt0, vt0, t0, v0 ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) ISNULL), ((v0.c0)||(rt0.c0)) COLLATE RTRIM ASC  NULLS LAST, (UNLIKELY(rt0.c2) IN ()));
SELECT * FROM rt0, vt0, t0, v0 WHERE ((+ ((rt0.c1 IN (v0.c0))))) ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) ISNULL), ((v0.c0)||(rt0.c0)) COLLATE RTRIM ASC  NULLS LAST, (UNLIKELY(rt0.c2) IN ());
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c1 IN (v0.c0))))) IS TRUE)  as count FROM rt0, vt0, t0, v0 ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) ISNULL), ((v0.c0)||(rt0.c0)) COLLATE RTRIM ASC  NULLS LAST, (UNLIKELY(rt0.c2) IN ()));
SELECT * FROM rt0, vt0, t0, v0 WHERE ((+ ((rt0.c1 IN (v0.c0))))) ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) ISNULL), ((v0.c0)||(rt0.c0)) COLLATE RTRIM ASC  NULLS LAST, (UNLIKELY(rt0.c2) IN ());
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(rt0.c0 AS BLOB) COLLATE NOCASE) ORDER BY ((((((rt0.c1)&(rt0.c2)))OR(LIKELIHOOD(DISTINCT 0.6835439804636565, 0.29441583147229045))))OR(((((rt0.c1)AND(rt0.c1)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c1)&(rt0.c2)))OR(LIKELIHOOD(DISTINCT 0.6835439804636565, 0.29441583147229045))))OR(((((rt0.c1)AND(rt0.c1)))OR(vt0.c0)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(rt0.c0 AS BLOB) COLLATE NOCASE) ORDER BY ((((((rt0.c1)&(rt0.c2)))OR(LIKELIHOOD(DISTINCT 0.6835439804636565, 0.29441583147229045))))OR(((((rt0.c1)AND(rt0.c1)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c1)&(rt0.c2)))OR(LIKELIHOOD(DISTINCT 0.6835439804636565, 0.29441583147229045))))OR(((((rt0.c1)AND(rt0.c1)))OR(vt0.c0)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(rt0.c0 AS BLOB) COLLATE NOCASE) ORDER BY ((((((rt0.c1)&(rt0.c2)))OR(LIKELIHOOD(DISTINCT 0.6835439804636565, 0.29441583147229045))))OR(((((rt0.c1)AND(rt0.c1)))OR(vt0.c0))));
SELECT ALL COUNT(*) FROM t0, v0 LEFT OUTER JOIN vt0 ON (((+ (t0.c0)))LIKE(((v0.c0)*(rt0.c1)))) INNER JOIN rt0 ON ((vt0.c0) ISNULL) WHERE (((rt0.c1)||(((t0.c0)GLOB(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)||(((t0.c0)GLOB(rt0.c1))))) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN vt0 ON (((+ (t0.c0)))LIKE(((v0.c0)*(rt0.c1)))) INNER JOIN rt0 ON ((vt0.c0) ISNULL));
SELECT ALL COUNT(*) FROM t0, v0 LEFT OUTER JOIN vt0 ON (((+ (t0.c0)))LIKE(((v0.c0)*(rt0.c1)))) INNER JOIN rt0 ON ((vt0.c0) ISNULL) WHERE (((rt0.c1)||(((t0.c0)GLOB(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)||(((t0.c0)GLOB(rt0.c1))))) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN vt0 ON (((+ (t0.c0)))LIKE(((v0.c0)*(rt0.c1)))) INNER JOIN rt0 ON ((vt0.c0) ISNULL));
SELECT * FROM v0 CROSS JOIN rt0 ON CAST(rt0.c1 AS NUMERIC) FULL OUTER JOIN t0 ON ((NULL) NOT BETWEEN (0.45662711883249474) AND (vt0.c0)) COLLATE NOCASE LEFT OUTER JOIN vt0 ON CASE (+ (rt0.c0))  WHEN NULL THEN rt0.c2 WHEN rt0.c2 COLLATE NOCASE THEN (~ (rt0.c2)) WHEN ((rt0.c0)>>(rt0.c2)) THEN rt0.c2 COLLATE RTRIM ELSE (+ (vt0.c0)) END WHERE (((((CAST(0.6363338095564636 AS INTEGER))AND(CASE WHEN vt0.c0 THEN v0.c0 END)))AND(((t0.c0)>>(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(0.6363338095564636 AS INTEGER))AND(CASE WHEN vt0.c0 THEN v0.c0 END)))AND(((t0.c0)>>(NULL))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON CAST(rt0.c1 AS NUMERIC) FULL OUTER JOIN t0 ON ((NULL) NOT BETWEEN (0.45662711883249474) AND (vt0.c0)) COLLATE NOCASE LEFT OUTER JOIN vt0 ON CASE (+ (rt0.c0))  WHEN NULL THEN rt0.c2 WHEN rt0.c2 COLLATE NOCASE THEN (~ (rt0.c2)) WHEN ((rt0.c0)>>(rt0.c2)) THEN rt0.c2 COLLATE RTRIM ELSE (+ (vt0.c0)) END);
SELECT * FROM v0 CROSS JOIN rt0 ON CAST(rt0.c1 AS NUMERIC) FULL OUTER JOIN t0 ON ((NULL) NOT BETWEEN (0.45662711883249474) AND (vt0.c0)) COLLATE NOCASE LEFT OUTER JOIN vt0 ON CASE (+ (rt0.c0))  WHEN NULL THEN rt0.c2 WHEN rt0.c2 COLLATE NOCASE THEN (~ (rt0.c2)) WHEN ((rt0.c0)>>(rt0.c2)) THEN rt0.c2 COLLATE RTRIM ELSE (+ (vt0.c0)) END WHERE (((((CAST(0.6363338095564636 AS INTEGER))AND(CASE WHEN vt0.c0 THEN v0.c0 END)))AND(((t0.c0)>>(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(0.6363338095564636 AS INTEGER))AND(CASE WHEN vt0.c0 THEN v0.c0 END)))AND(((t0.c0)>>(NULL))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON CAST(rt0.c1 AS NUMERIC) FULL OUTER JOIN t0 ON ((NULL) NOT BETWEEN (0.45662711883249474) AND (vt0.c0)) COLLATE NOCASE LEFT OUTER JOIN vt0 ON CASE (+ (rt0.c0))  WHEN NULL THEN rt0.c2 WHEN rt0.c2 COLLATE NOCASE THEN (~ (rt0.c2)) WHEN ((rt0.c0)>>(rt0.c2)) THEN rt0.c2 COLLATE RTRIM ELSE (+ (vt0.c0)) END);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((((((((((((CAST(NULL AS NUMERIC))OR(((v0.c0) IS FALSE))))AND(rt0.c0)))AND(((((((((vt0.c0)AND(rt0.c2)))OR(v0.c0)))OR(rt0.c0)))AND(rt0.c2)))))OR(((rt0.c2)IS(rt0.c1)))))AND(((rt0.c1)<=(rt0.c1)))))OR(((vt0.c0)<=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((CAST(NULL AS NUMERIC))OR(((v0.c0) IS FALSE))))AND(rt0.c0)))AND(((((((((vt0.c0)AND(rt0.c2)))OR(v0.c0)))OR(rt0.c0)))AND(rt0.c2)))))OR(((rt0.c2)IS(rt0.c1)))))AND(((rt0.c1)<=(rt0.c1)))))OR(((vt0.c0)<=(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((((((((((((CAST(NULL AS NUMERIC))OR(((v0.c0) IS FALSE))))AND(rt0.c0)))AND(((((((((vt0.c0)AND(rt0.c2)))OR(v0.c0)))OR(rt0.c0)))AND(rt0.c2)))))OR(((rt0.c2)IS(rt0.c1)))))AND(((rt0.c1)<=(rt0.c1)))))OR(((vt0.c0)<=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((CAST(NULL AS NUMERIC))OR(((v0.c0) IS FALSE))))AND(rt0.c0)))AND(((((((((vt0.c0)AND(rt0.c2)))OR(v0.c0)))OR(rt0.c0)))AND(rt0.c2)))))OR(((rt0.c2)IS(rt0.c1)))))AND(((rt0.c1)<=(rt0.c1)))))OR(((vt0.c0)<=(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((((((((((((CAST(NULL AS NUMERIC))OR(((v0.c0) IS FALSE))))AND(rt0.c0)))AND(((((((((vt0.c0)AND(rt0.c2)))OR(v0.c0)))OR(rt0.c0)))AND(rt0.c2)))))OR(((rt0.c2)IS(rt0.c1)))))AND(((rt0.c1)<=(rt0.c1)))))OR(((vt0.c0)<=(rt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0)IS(vt0.c0)))));
SELECT COUNT(*) FROM v0, t0, vt0, rt0 WHERE (((((t0.c0)-(t0.c0))) BETWEEN (543278757) AND (rt0.c0))) ORDER BY ((t0.c0) ISNULL) ASC, (- ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)-(t0.c0))) BETWEEN (543278757) AND (rt0.c0))) IS TRUE)  as count FROM v0, t0, vt0, rt0 ORDER BY ((t0.c0) ISNULL) ASC, (- ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))))) ASC);
SELECT COUNT(*) FROM v0, t0, vt0, rt0 WHERE (((((t0.c0)-(t0.c0))) BETWEEN (543278757) AND (rt0.c0))) ORDER BY ((t0.c0) ISNULL) ASC, (- ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)-(t0.c0))) BETWEEN (543278757) AND (rt0.c0))) IS TRUE)  as count FROM v0, t0, vt0, rt0 ORDER BY ((t0.c0) ISNULL) ASC, (- ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))))) ASC);
SELECT COUNT(*) FROM v0, t0, vt0, rt0 WHERE (((((t0.c0)-(t0.c0))) BETWEEN (543278757) AND (rt0.c0))) ORDER BY ((t0.c0) ISNULL) ASC, (- ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))))) ASC;
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)-(vt0.c0 COLLATE NOCASE))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (x'c953'))) AND (LENGTH(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)-(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (x'c953'))) AND (LENGTH(vt0.c0)))  NULLS LAST);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)-(vt0.c0 COLLATE NOCASE))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (x'c953'))) AND (LENGTH(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)-(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (x'c953'))) AND (LENGTH(vt0.c0)))  NULLS LAST);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)-(vt0.c0 COLLATE NOCASE))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (x'c953'))) AND (LENGTH(vt0.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON t0.c0 LEFT OUTER JOIN rt0 ON ((-209917546 COLLATE NOCASE) IS TRUE) INNER JOIN v0 ON ((CAST(rt0.c1 AS TEXT))<=((NOT (rt0.c0)))) WHERE (((vt0.c0)!=(t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<>(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON t0.c0 LEFT OUTER JOIN rt0 ON ((-209917546 COLLATE NOCASE) IS TRUE) INNER JOIN v0 ON ((CAST(rt0.c1 AS TEXT))<=((NOT (rt0.c0)))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON t0.c0 LEFT OUTER JOIN rt0 ON ((-209917546 COLLATE NOCASE) IS TRUE) INNER JOIN v0 ON ((CAST(rt0.c1 AS TEXT))<=((NOT (rt0.c0)))) WHERE (((vt0.c0)!=(t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<>(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON t0.c0 LEFT OUTER JOIN rt0 ON ((-209917546 COLLATE NOCASE) IS TRUE) INNER JOIN v0 ON ((CAST(rt0.c1 AS TEXT))<=((NOT (rt0.c0)))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON t0.c0 LEFT OUTER JOIN rt0 ON ((-209917546 COLLATE NOCASE) IS TRUE) INNER JOIN v0 ON ((CAST(rt0.c1 AS TEXT))<=((NOT (rt0.c0)))) WHERE (((vt0.c0)!=(t0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM v0, t0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (v0.c0);
SELECT * FROM rt0 WHERE ((- (((rt0.c0)>>(rt0.c0))))) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0)>>(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC);
SELECT * FROM rt0 WHERE ((- (((rt0.c0)>>(rt0.c0))))) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0)>>(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC);
SELECT * FROM rt0 WHERE ((- (((rt0.c0)>>(rt0.c0))))) ORDER BY rt0.c0 DESC;
SELECT * FROM t0, rt0 WHERE (((LOWER(DISTINCT t0.c0))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN t0.c0 COLLATE RTRIM THEN rt0.c0 COLLATE BINARY END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT t0.c0))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN t0.c0 COLLATE RTRIM THEN rt0.c0 COLLATE BINARY END  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (((LOWER(DISTINCT t0.c0))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN t0.c0 COLLATE RTRIM THEN rt0.c0 COLLATE BINARY END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT t0.c0))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN t0.c0 COLLATE RTRIM THEN rt0.c0 COLLATE BINARY END  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (((LOWER(DISTINCT t0.c0))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN t0.c0 COLLATE RTRIM THEN rt0.c0 COLLATE BINARY END  NULLS LAST;
SELECT * FROM v0 NOT INDEXED WHERE (v0.c0) ORDER BY (CAST(v0.c0 AS TEXT) IN ());
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (CAST(v0.c0 AS TEXT) IN ()));
SELECT * FROM v0 NOT INDEXED WHERE (v0.c0) ORDER BY (CAST(v0.c0 AS TEXT) IN ());
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (CAST(v0.c0 AS TEXT) IN ()));
SELECT * FROM v0 NOT INDEXED WHERE (v0.c0) ORDER BY (CAST(v0.c0 AS TEXT) IN ());
SELECT COUNT(*) FROM rt0, vt0 WHERE ((vt0.c0 IN ())) ORDER BY (((rt0.c2 IN ()))+((+ (rt0.c2))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2 IN ()))+((+ (rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((vt0.c0 IN ())) ORDER BY (((rt0.c2 IN ()))+((+ (rt0.c2))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2 IN ()))+((+ (rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((vt0.c0 IN ())) ORDER BY (((rt0.c2 IN ()))+((+ (rt0.c2))));
SELECT COUNT(*) FROM vt0, v0, rt0 INNER JOIN t0 ON ((((rt0.c1, t0.c0, rt0.c2))>=((rt0.c2, rt0.c1, NULL))) IN ()) WHERE (CAST(rt0.c1 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS TEXT)) IS TRUE)  as count FROM vt0, v0, rt0 INNER JOIN t0 ON ((((rt0.c1, t0.c0, rt0.c2))>=((rt0.c2, rt0.c1, NULL))) IN ()));
SELECT COUNT(*) FROM vt0, v0, rt0 INNER JOIN t0 ON ((((rt0.c1, t0.c0, rt0.c2))>=((rt0.c2, rt0.c1, NULL))) IN ()) WHERE (CAST(rt0.c1 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS TEXT)) IS TRUE)  as count FROM vt0, v0, rt0 INNER JOIN t0 ON ((((rt0.c1, t0.c0, rt0.c2))>=((rt0.c2, rt0.c1, NULL))) IN ()));
SELECT COUNT(*) FROM vt0, v0, rt0 INNER JOIN t0 ON ((((rt0.c1, t0.c0, rt0.c2))>=((rt0.c2, rt0.c1, NULL))) IN ()) WHERE (CAST(rt0.c1 AS TEXT));
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS REAL)) ORDER BY (((vt0.c0)) BETWEEN ((((x'') NOT BETWEEN (vt0.c0) AND (1.069524569E9)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOTNULL) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((x'') NOT BETWEEN (vt0.c0) AND (1.069524569E9)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS REAL)) ORDER BY (((vt0.c0)) BETWEEN ((((x'') NOT BETWEEN (vt0.c0) AND (1.069524569E9)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOTNULL) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((x'') NOT BETWEEN (vt0.c0) AND (1.069524569E9)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS REAL)) ORDER BY (((vt0.c0)) BETWEEN ((((x'') NOT BETWEEN (vt0.c0) AND (1.069524569E9)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0, t0, v0 WHERE (((((t0.c0 COLLATE NOCASE)AND(((((v0.c0)OR(v0.c0)))AND(t0.c0)))))AND(CASE WHEN t0.c0 THEN 0.26249033901830676 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0 COLLATE NOCASE)AND(((((v0.c0)OR(v0.c0)))AND(t0.c0)))))AND(CASE WHEN t0.c0 THEN 0.26249033901830676 ELSE v0.c0 END))) IS TRUE)  as count FROM vt0, rt0, t0, v0);
SELECT COUNT(*) FROM vt0, rt0, t0, v0 WHERE (((((t0.c0 COLLATE NOCASE)AND(((((v0.c0)OR(v0.c0)))AND(t0.c0)))))AND(CASE WHEN t0.c0 THEN 0.26249033901830676 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0 COLLATE NOCASE)AND(((((v0.c0)OR(v0.c0)))AND(t0.c0)))))AND(CASE WHEN t0.c0 THEN 0.26249033901830676 ELSE v0.c0 END))) IS TRUE)  as count FROM vt0, rt0, t0, v0);
SELECT COUNT(*) FROM vt0, rt0, t0, v0 WHERE (((((t0.c0 COLLATE NOCASE)AND(((((v0.c0)OR(v0.c0)))AND(t0.c0)))))AND(CASE WHEN t0.c0 THEN 0.26249033901830676 ELSE v0.c0 END)));
SELECT ALL * FROM v0, rt0, t0 WHERE (rt0.c0) ORDER BY CAST(TRIM(DISTINCT rt0.c2) AS BLOB)  NULLS LAST, ((t0.c0 IN (rt0.c0, rt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, rt0, t0 ORDER BY CAST(TRIM(DISTINCT rt0.c2) AS BLOB)  NULLS LAST, ((t0.c0 IN (rt0.c0, rt0.c0)) IN ()));
SELECT ALL * FROM v0, rt0, t0 WHERE (rt0.c0) ORDER BY CAST(TRIM(DISTINCT rt0.c2) AS BLOB)  NULLS LAST, ((t0.c0 IN (rt0.c0, rt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, rt0, t0 ORDER BY CAST(TRIM(DISTINCT rt0.c2) AS BLOB)  NULLS LAST, ((t0.c0 IN (rt0.c0, rt0.c0)) IN ()));
SELECT ALL * FROM v0, rt0, t0 WHERE (rt0.c0) ORDER BY CAST(TRIM(DISTINCT rt0.c2) AS BLOB)  NULLS LAST, ((t0.c0 IN (rt0.c0, rt0.c0)) IN ());
SELECT * FROM t0, rt0, v0 WHERE ((((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c2))))AND(((t0.c0)>>(t0.c0))))) ORDER BY ((((rt0.c2) IS TRUE)) BETWEEN (((v0.c0)>=(rt0.c0))) AND (CASE t0.c0  WHEN v0.c0 THEN rt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c2))))AND(((t0.c0)>>(t0.c0))))) IS TRUE)  as count FROM t0, rt0, v0 ORDER BY ((((rt0.c2) IS TRUE)) BETWEEN (((v0.c0)>=(rt0.c0))) AND (CASE t0.c0  WHEN v0.c0 THEN rt0.c0 END)) DESC);
SELECT * FROM t0, rt0, v0 WHERE ((((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c2))))AND(((t0.c0)>>(t0.c0))))) ORDER BY ((((rt0.c2) IS TRUE)) BETWEEN (((v0.c0)>=(rt0.c0))) AND (CASE t0.c0  WHEN v0.c0 THEN rt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c2))))AND(((t0.c0)>>(t0.c0))))) IS TRUE)  as count FROM t0, rt0, v0 ORDER BY ((((rt0.c2) IS TRUE)) BETWEEN (((v0.c0)>=(rt0.c0))) AND (CASE t0.c0  WHEN v0.c0 THEN rt0.c0 END)) DESC);
SELECT * FROM t0, rt0, v0 WHERE ((((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c2))))AND(((t0.c0)>>(t0.c0))))) ORDER BY ((((rt0.c2) IS TRUE)) BETWEEN (((v0.c0)>=(rt0.c0))) AND (CASE t0.c0  WHEN v0.c0 THEN rt0.c0 END)) DESC;
SELECT * FROM vt0, t0 FULL OUTER JOIN rt0 ON rt0.c1 INNER JOIN v0 ON (rt0.c0 IN ()) COLLATE RTRIM WHERE ('0.26249033901830676');
SELECT SUM(count) FROM (SELECT ALL (('0.26249033901830676') IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON rt0.c1 INNER JOIN v0 ON (rt0.c0 IN ()) COLLATE RTRIM);
SELECT * FROM vt0, t0 FULL OUTER JOIN rt0 ON rt0.c1 INNER JOIN v0 ON (rt0.c0 IN ()) COLLATE RTRIM WHERE ('0.26249033901830676');
SELECT SUM(count) FROM (SELECT ALL (('0.26249033901830676') IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON rt0.c1 INNER JOIN v0 ON (rt0.c0 IN ()) COLLATE RTRIM);
SELECT * FROM vt0, t0 FULL OUTER JOIN rt0 ON rt0.c1 INNER JOIN v0 ON (rt0.c0 IN ()) COLLATE RTRIM WHERE ('0.26249033901830676');
SELECT ALL * FROM v0, vt0, rt0 WHERE (CAST(NULL AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (CAST(NULL AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (CAST(NULL AS BLOB));
SELECT * FROM rt0, v0 FULL OUTER JOIN t0 ON 0.6588914452104899 COLLATE RTRIM WHERE (((LIKELIHOOD(DISTINCT t0.c0, 0.5393823494995639)) NOT BETWEEN (((((t0.c0)OR(v0.c0)))OR(rt0.c0))) AND (((0.2099392553968038) NOT BETWEEN (rt0.c2) AND (t0.c0))))) ORDER BY ((t0.c0 COLLATE RTRIM)LIKE(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT t0.c0, 0.5393823494995639)) NOT BETWEEN (((((t0.c0)OR(v0.c0)))OR(rt0.c0))) AND (((0.2099392553968038) NOT BETWEEN (rt0.c2) AND (t0.c0))))) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN t0 ON 0.6588914452104899 COLLATE RTRIM ORDER BY ((t0.c0 COLLATE RTRIM)LIKE(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))) DESC);
SELECT * FROM rt0, v0 FULL OUTER JOIN t0 ON 0.6588914452104899 COLLATE RTRIM WHERE (((LIKELIHOOD(DISTINCT t0.c0, 0.5393823494995639)) NOT BETWEEN (((((t0.c0)OR(v0.c0)))OR(rt0.c0))) AND (((0.2099392553968038) NOT BETWEEN (rt0.c2) AND (t0.c0))))) ORDER BY ((t0.c0 COLLATE RTRIM)LIKE(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT t0.c0, 0.5393823494995639)) NOT BETWEEN (((((t0.c0)OR(v0.c0)))OR(rt0.c0))) AND (((0.2099392553968038) NOT BETWEEN (rt0.c2) AND (t0.c0))))) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN t0 ON 0.6588914452104899 COLLATE RTRIM ORDER BY ((t0.c0 COLLATE RTRIM)LIKE(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))) DESC);
SELECT * FROM rt0, v0 FULL OUTER JOIN t0 ON 0.6588914452104899 COLLATE RTRIM WHERE (((LIKELIHOOD(DISTINCT t0.c0, 0.5393823494995639)) NOT BETWEEN (((((t0.c0)OR(v0.c0)))OR(rt0.c0))) AND (((0.2099392553968038) NOT BETWEEN (rt0.c2) AND (t0.c0))))) ORDER BY ((t0.c0 COLLATE RTRIM)LIKE(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))) DESC;
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CAST((vt0.c0 IN ()) AS NUMERIC)) ORDER BY -2082766424 ASC, (((((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1))))AND(CASE '\r^<gz\rD('  WHEN 0.11688713499241388 THEN vt0.c0 WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN 0.4524795318703172 END)))OR(TRIM(rt0.c1, t0.c0))) ASC, CAST(x'542f' AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY -2082766424 ASC, (((((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1))))AND(CASE '\r^<gz\rD('  WHEN 0.11688713499241388 THEN vt0.c0 WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN 0.4524795318703172 END)))OR(TRIM(rt0.c1, t0.c0))) ASC, CAST(x'542f' AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CAST((vt0.c0 IN ()) AS NUMERIC)) ORDER BY -2082766424 ASC, (((((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1))))AND(CASE '\r^<gz\rD('  WHEN 0.11688713499241388 THEN vt0.c0 WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN 0.4524795318703172 END)))OR(TRIM(rt0.c1, t0.c0))) ASC, CAST(x'542f' AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY -2082766424 ASC, (((((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1))))AND(CASE '\r^<gz\rD('  WHEN 0.11688713499241388 THEN vt0.c0 WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN 0.4524795318703172 END)))OR(TRIM(rt0.c1, t0.c0))) ASC, CAST(x'542f' AS REAL)  NULLS LAST);
SELECT * FROM rt0, v0, vt0, t0 WHERE (x'7d5d');
SELECT SUM(count) FROM (SELECT ((x'7d5d') IS TRUE)  as count FROM rt0, v0, vt0, t0);
SELECT * FROM rt0, v0, vt0, t0 WHERE (x'7d5d');
SELECT SUM(count) FROM (SELECT ((x'7d5d') IS TRUE)  as count FROM rt0, v0, vt0, t0);
SELECT * FROM rt0, v0, vt0, t0 WHERE (x'7d5d');
SELECT * FROM rt0, t0, v0, vt0 WHERE ((((((((vt0.c0, rt0.c0, v0.c0, vt0.c0, vt0.c0))<((rt0.c2, rt0.c1, rt0.c0, NULL, t0.c0))))OR(((t0.c0)|(NULL)))))OR(CAST(rt0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0, rt0.c0, v0.c0, vt0.c0, vt0.c0))<((rt0.c2, rt0.c1, rt0.c0, NULL, t0.c0))))OR(((t0.c0)|(NULL)))))OR(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0, t0, v0, vt0);
SELECT * FROM rt0, t0, v0, vt0 WHERE ((((((((vt0.c0, rt0.c0, v0.c0, vt0.c0, vt0.c0))<((rt0.c2, rt0.c1, rt0.c0, NULL, t0.c0))))OR(((t0.c0)|(NULL)))))OR(CAST(rt0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0, rt0.c0, v0.c0, vt0.c0, vt0.c0))<((rt0.c2, rt0.c1, rt0.c0, NULL, t0.c0))))OR(((t0.c0)|(NULL)))))OR(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0, t0, v0, vt0);
SELECT * FROM rt0, t0, v0, vt0 WHERE ((((((((vt0.c0, rt0.c0, v0.c0, vt0.c0, vt0.c0))<((rt0.c2, rt0.c1, rt0.c0, NULL, t0.c0))))OR(((t0.c0)|(NULL)))))OR(CAST(rt0.c2 AS INTEGER))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON ((((t0.c0) IS FALSE))&(vt0.c0)) CROSS JOIN vt0 ON ((CAST(rt0.c1 AS INTEGER)) ISNULL) RIGHT OUTER JOIN v0 ON NULLIF(((vt0.c0)>=(NULL)), ((rt0.c2) BETWEEN (t0.c0) AND (NULL))) WHERE (CAST(((((rt0.c1)AND(v0.c0)))OR(rt0.c1)) AS BLOB)) ORDER BY ((t0.c0) BETWEEN ((- ('RT'))) AND ((((vt0.c0))<=((rt0.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c1)AND(v0.c0)))OR(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((((t0.c0) IS FALSE))&(vt0.c0)) CROSS JOIN vt0 ON ((CAST(rt0.c1 AS INTEGER)) ISNULL) RIGHT OUTER JOIN v0 ON NULLIF(((vt0.c0)>=(NULL)), ((rt0.c2) BETWEEN (t0.c0) AND (NULL))) ORDER BY ((t0.c0) BETWEEN ((- ('RT'))) AND ((((vt0.c0))<=((rt0.c2))))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON ((((t0.c0) IS FALSE))&(vt0.c0)) CROSS JOIN vt0 ON ((CAST(rt0.c1 AS INTEGER)) ISNULL) RIGHT OUTER JOIN v0 ON NULLIF(((vt0.c0)>=(NULL)), ((rt0.c2) BETWEEN (t0.c0) AND (NULL))) WHERE (CAST(((((rt0.c1)AND(v0.c0)))OR(rt0.c1)) AS BLOB)) ORDER BY ((t0.c0) BETWEEN ((- ('RT'))) AND ((((vt0.c0))<=((rt0.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c1)AND(v0.c0)))OR(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((((t0.c0) IS FALSE))&(vt0.c0)) CROSS JOIN vt0 ON ((CAST(rt0.c1 AS INTEGER)) ISNULL) RIGHT OUTER JOIN v0 ON NULLIF(((vt0.c0)>=(NULL)), ((rt0.c2) BETWEEN (t0.c0) AND (NULL))) ORDER BY ((t0.c0) BETWEEN ((- ('RT'))) AND ((((vt0.c0))<=((rt0.c2))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c0) NOTNULL)) NOT NULL) WHERE ((NULL IN ())) ORDER BY ((rt0.c2) BETWEEN ((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c0, rt0.c2, rt0.c2)))) AND (((t0.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c0) NOTNULL)) NOT NULL) ORDER BY ((rt0.c2) BETWEEN ((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c0, rt0.c2, rt0.c2)))) AND (((t0.c0) IS FALSE)))  NULLS LAST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c0) NOTNULL)) NOT NULL) WHERE ((NULL IN ())) ORDER BY ((rt0.c2) BETWEEN ((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c0, rt0.c2, rt0.c2)))) AND (((t0.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c0) NOTNULL)) NOT NULL) ORDER BY ((rt0.c2) BETWEEN ((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c0, rt0.c2, rt0.c2)))) AND (((t0.c0) IS FALSE)))  NULLS LAST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c0) NOTNULL)) NOT NULL) WHERE ((NULL IN ())) ORDER BY ((rt0.c2) BETWEEN ((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c0, rt0.c2, rt0.c2)))) AND (((t0.c0) IS FALSE)))  NULLS LAST;
SELECT * FROM vt0 FULL OUTER JOIN v0 ON rt0.c2 CROSS JOIN rt0 ON (((vt0.c0)) BETWEEN ((((((-684603413)AND(rt0.c1)))OR(rt0.c1)))) AND ((((((((((rt0.c2)OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c2)))OR(v0.c0))))) WHERE (CAST((+ (v0.c0)) AS REAL)) ORDER BY (~ (v0.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((+ (v0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON rt0.c2 CROSS JOIN rt0 ON (((vt0.c0)) BETWEEN ((((((-684603413)AND(rt0.c1)))OR(rt0.c1)))) AND ((((((((((rt0.c2)OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c2)))OR(v0.c0))))) ORDER BY (~ (v0.c0 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON rt0.c2 CROSS JOIN rt0 ON (((vt0.c0)) BETWEEN ((((((-684603413)AND(rt0.c1)))OR(rt0.c1)))) AND ((((((((((rt0.c2)OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c2)))OR(v0.c0))))) WHERE (CAST((+ (v0.c0)) AS REAL)) ORDER BY (~ (v0.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((+ (v0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON rt0.c2 CROSS JOIN rt0 ON (((vt0.c0)) BETWEEN ((((((-684603413)AND(rt0.c1)))OR(rt0.c1)))) AND ((((((((((rt0.c2)OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c2)))OR(v0.c0))))) ORDER BY (~ (v0.c0 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT ALL * FROM t0, v0, vt0 WHERE (((CASE v0.c0  WHEN x'' THEN t0.c0 END) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((0.928279925483482) BETWEEN (v0.c0) AND (vt0.c0))))) ORDER BY CASE v0.c0 COLLATE NOCASE  WHEN ((((t0.c0)AND(vt0.c0)))AND(v0.c0)) THEN ((((t0.c0)AND(vt0.c0)))OR(v0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN (- (vt0.c0)) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) BETWEEN (t0.c0) AND (v0.c0)) END  NULLS LAST, ((UPPER(v0.c0)) IS TRUE)  NULLS LAST, (((('')AND((- (0.9208264989316189)))))AND(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN x'' THEN t0.c0 END) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((0.928279925483482) BETWEEN (v0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY CASE v0.c0 COLLATE NOCASE  WHEN ((((t0.c0)AND(vt0.c0)))AND(v0.c0)) THEN ((((t0.c0)AND(vt0.c0)))OR(v0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN (- (vt0.c0)) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) BETWEEN (t0.c0) AND (v0.c0)) END  NULLS LAST, ((UPPER(v0.c0)) IS TRUE)  NULLS LAST, (((('')AND((- (0.9208264989316189)))))AND(vt0.c0))  NULLS FIRST);
SELECT ALL * FROM t0, v0, vt0 WHERE (((CASE v0.c0  WHEN x'' THEN t0.c0 END) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((0.928279925483482) BETWEEN (v0.c0) AND (vt0.c0))))) ORDER BY CASE v0.c0 COLLATE NOCASE  WHEN ((((t0.c0)AND(vt0.c0)))AND(v0.c0)) THEN ((((t0.c0)AND(vt0.c0)))OR(v0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN (- (vt0.c0)) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) BETWEEN (t0.c0) AND (v0.c0)) END  NULLS LAST, ((UPPER(v0.c0)) IS TRUE)  NULLS LAST, (((('')AND((- (0.9208264989316189)))))AND(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN x'' THEN t0.c0 END) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((0.928279925483482) BETWEEN (v0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY CASE v0.c0 COLLATE NOCASE  WHEN ((((t0.c0)AND(vt0.c0)))AND(v0.c0)) THEN ((((t0.c0)AND(vt0.c0)))OR(v0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN (- (vt0.c0)) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) BETWEEN (t0.c0) AND (v0.c0)) END  NULLS LAST, ((UPPER(v0.c0)) IS TRUE)  NULLS LAST, (((('')AND((- (0.9208264989316189)))))AND(vt0.c0))  NULLS FIRST);
SELECT ALL * FROM t0, v0, vt0 WHERE (((CASE v0.c0  WHEN x'' THEN t0.c0 END) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((0.928279925483482) BETWEEN (v0.c0) AND (vt0.c0))))) ORDER BY CASE v0.c0 COLLATE NOCASE  WHEN ((((t0.c0)AND(vt0.c0)))AND(v0.c0)) THEN ((((t0.c0)AND(vt0.c0)))OR(v0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN (- (vt0.c0)) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) BETWEEN (t0.c0) AND (v0.c0)) END  NULLS LAST, ((UPPER(v0.c0)) IS TRUE)  NULLS LAST, (((('')AND((- (0.9208264989316189)))))AND(vt0.c0))  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE (((((((((rt0.c1 COLLATE RTRIM)AND(((v0.c0) ISNULL))))OR((((rt0.c0, rt0.c2, v0.c0)) NOT BETWEEN ((v0.c0, rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1))))))OR((rt0.c1 IN ()))))AND((rt0.c2 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1 COLLATE RTRIM)AND(((v0.c0) ISNULL))))OR((((rt0.c0, rt0.c2, v0.c0)) NOT BETWEEN ((v0.c0, rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1))))))OR((rt0.c1 IN ()))))AND((rt0.c2 IN (v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((((((rt0.c1 COLLATE RTRIM)AND(((v0.c0) ISNULL))))OR((((rt0.c0, rt0.c2, v0.c0)) NOT BETWEEN ((v0.c0, rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1))))))OR((rt0.c1 IN ()))))AND((rt0.c2 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1 COLLATE RTRIM)AND(((v0.c0) ISNULL))))OR((((rt0.c0, rt0.c2, v0.c0)) NOT BETWEEN ((v0.c0, rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1))))))OR((rt0.c1 IN ()))))AND((rt0.c2 IN (v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((((((rt0.c1 COLLATE RTRIM)AND(((v0.c0) ISNULL))))OR((((rt0.c0, rt0.c2, v0.c0)) NOT BETWEEN ((v0.c0, rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1))))))OR((rt0.c1 IN ()))))AND((rt0.c2 IN (v0.c0)))));
