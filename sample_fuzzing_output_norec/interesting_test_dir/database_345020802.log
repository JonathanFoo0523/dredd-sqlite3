-- Time: 2024/06/09 09:25:31
-- Database: database2
-- Database version: 3.40.0
-- seed value: 345020802
PRAGMA cache_size = 50000; -- 8ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, matchinfo=fts3); -- 5ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 3ms;
BEGIN IMMEDIATE TRANSACTION; -- 2ms;
INSERT OR REPLACE INTO vt0 VALUES (0.25987568829237273), ('1890368798'), (x''); -- 3ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 2ms;
UPDATE vt0 SET c0=1890368798 WHERE '-133513881'; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 4ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 6ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 5ms;
REINDEX; -- 0ms;
UPDATE OR FAIL vt0 SET c0=NULL, c0=1.890368798E9, c0=0.6885948458356257 WHERE (((vt0.c0 IN ())) ISNULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '16915'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=-1137516426,15');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '58393'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-133513881,5');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '439'); -- 4ms;
INSERT INTO vt0(vt0) VALUES('merge=-839776739,13');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '13216'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 181593435); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=517207865,11');\n; -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='m!%w_[k'; -- 7ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''), (NULL), (x''); -- 8ms;
UPDATE OR FAIL vt0 SET c0=0.6880421043807462, c0=NULL; -- 2ms;
UPDATE OR ABORT vt0 SET c0=x'' WHERE ((vt0.c0) IS FALSE) COLLATE BINARY; -- 5ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-133513881'), ('-133513881'), (x''); -- 3ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=8'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '55515'); -- 5ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '47810'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1712810278);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1310900816); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2114286839); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1409037878,5');\n; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (NULL); -- 1ms;
REINDEX  vt0; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'9769'); -- 9ms;
INSERT OR FAIL INTO vt0 VALUES (NULL), (x'7b61'), (1.890368798E9); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0xffffffffba3b2273); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('1712810278'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '11887'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=412653682,9');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 5ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x''), (0.8804928848073832), (526240034); -- 1ms;
UPDATE OR IGNORE vt0 SET c0='d&A|'; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1929598987); -- 5ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 16ms;
INSERT OR FAIL INTO vt0 VALUES (0.5690922301565802); -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (0.8270781950963719); -- 3ms;
INSERT INTO vt0(vt0) VALUES('merge=1302959052,5');\n; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1714232262);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 11); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
UPDATE vt0 SET (c0, c0)=(NULL, '1712810278'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.8953282875486174 WHERE vt0.c0; -- 0ms;
VACUUM temp; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x''; -- 0ms;
REINDEX; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '3107'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=980949648,4');\n; -- 3ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL), ('526240034'), (x'3758'), ('729466301'), (0Xffffffffcdf2061d); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1712810278 unordered'); -- 0ms;
CREATE TABLE t0 (c0 REAL , c1 REAL , c2 BLOB ); -- 1ms;
UPDATE OR REPLACE t0 SET c0=0.2903940581060779 WHERE (NOT ((t0.c0 IN ()))); -- 0ms;
CREATE VIRTUAL TABLE vt12 USING fts5(c0); -- 0ms;
REINDEX; -- 11ms;
END; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4); -- 5ms;
UPDATE OR IGNORE vt12 SET c0=x'5678', c0=''; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.03025702324297541); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 0ms;
INSERT INTO vt12(vt12, rank) VALUES('automerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt12(vt12) VALUES('automerge=12'); -- 0ms;
INSERT INTO vt12(vt12) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (''); -- 6ms;
REINDEX  vt0; -- 0ms;
INSERT OR FAIL INTO t0(c1) VALUES ('517207865'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO t0(c1, c0) VALUES (NULL, '') ON CONFLICT DO NOTHING; -- 2ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.6818770774504606); -- 1ms;
INSERT INTO vt12(vt12) VALUES('merge=128517892,6');\n; -- 4ms;
INSERT INTO vt12(vt12, rank) VALUES('pgsz', '49256'); -- 2ms;
INSERT OR IGNORE INTO vt12 VALUES ('1903368409'); -- 1ms;
UPDATE OR IGNORE vt12 SET c0=x'786ee5e3', c0=NULL, c0=x'', c0='-444866173'; -- 0ms;
INSERT INTO vt12(vt12, rank) VALUES('usermerge', 4); -- 0ms;
UPDATE vt0 SET (c0)=(NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 2ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '20328'); -- 0ms;
INSERT INTO vt12(vt12) VALUES('rebuild'); -- 1ms;
INSERT OR FAIL INTO vt12(c0) VALUES (NULL), (9.80949648E8), (''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '41364'); -- 0ms;
INSERT INTO vt12(vt12) VALUES('integrity-check'); -- 0ms;
REINDEX  vt0; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM t0, vt12, rt0, vt0 WHERE ((((rt0.c0)) BETWEEN ((UPPER(rt0.c4))) AND ((NULL COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((UPPER(rt0.c4))) AND ((NULL COLLATE BINARY)))) IS TRUE)  as count FROM t0, vt12, rt0, vt0);
SELECT ALL * FROM t0, vt12, rt0, vt0 WHERE ((((rt0.c0)) BETWEEN ((UPPER(rt0.c4))) AND ((NULL COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((UPPER(rt0.c4))) AND ((NULL COLLATE BINARY)))) IS TRUE)  as count FROM t0, vt12, rt0, vt0);
SELECT ALL * FROM t0, vt12, rt0, vt0 WHERE ((((rt0.c0)) BETWEEN ((UPPER(rt0.c4))) AND ((NULL COLLATE BINARY))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0 COLLATE NOCASE)AND(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0)))AND(((vt0.c0)||(vt0.c0))))) ORDER BY CASE CAST(vt0.c0 AS INTEGER)  WHEN ((((((((x'')AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN x'' COLLATE BINARY WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN 0.37704545638337306 THEN ((vt0.c0) NOT NULL) END ASC, (x'4ac6' IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0 COLLATE NOCASE)AND(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0)))AND(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(vt0.c0 AS INTEGER)  WHEN ((((((((x'')AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN x'' COLLATE BINARY WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN 0.37704545638337306 THEN ((vt0.c0) NOT NULL) END ASC, (x'4ac6' IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0 COLLATE NOCASE)AND(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0)))AND(((vt0.c0)||(vt0.c0))))) ORDER BY CASE CAST(vt0.c0 AS INTEGER)  WHEN ((((((((x'')AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN x'' COLLATE BINARY WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN 0.37704545638337306 THEN ((vt0.c0) NOT NULL) END ASC, (x'4ac6' IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0 COLLATE NOCASE)AND(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0)))AND(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(vt0.c0 AS INTEGER)  WHEN ((((((((x'')AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN x'' COLLATE BINARY WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN 0.37704545638337306 THEN ((vt0.c0) NOT NULL) END ASC, (x'4ac6' IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0 COLLATE NOCASE)AND(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0)))AND(((vt0.c0)||(vt0.c0))))) ORDER BY CASE CAST(vt0.c0 AS INTEGER)  WHEN ((((((((x'')AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN x'' COLLATE BINARY WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN 0.37704545638337306 THEN ((vt0.c0) NOT NULL) END ASC, (x'4ac6' IN ());
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED INNER JOIN vt0 ON (((((t0.c2) BETWEEN (rt0.c4) AND (vt0.c0)), ((rt0.c2) NOT NULL), (- (rt0.c1))))==(((((rt0.c3)) NOT BETWEEN ((t0.c1)) AND ((rt0.c4))), '[[膭o', ((((t0.c2)OR(t0.c1)))AND(t0.c0))))) LEFT OUTER JOIN t0 ON ((GLOB(x'', t0.c2)) BETWEEN (((rt0.c0) BETWEEN (rt0.c4) AND (t0.c2))) AND (((rt0.c4) BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (((IFNULL(vt0.c0, NULL))>(rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((IFNULL(vt0.c0, NULL))>(rt0.c3))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((((t0.c2) BETWEEN (rt0.c4) AND (vt0.c0)), ((rt0.c2) NOT NULL), (- (rt0.c1))))==(((((rt0.c3)) NOT BETWEEN ((t0.c1)) AND ((rt0.c4))), '[[膭o', ((((t0.c2)OR(t0.c1)))AND(t0.c0))))) LEFT OUTER JOIN t0 ON ((GLOB(x'', t0.c2)) BETWEEN (((rt0.c0) BETWEEN (rt0.c4) AND (t0.c2))) AND (((rt0.c4) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED INNER JOIN vt0 ON (((((t0.c2) BETWEEN (rt0.c4) AND (vt0.c0)), ((rt0.c2) NOT NULL), (- (rt0.c1))))==(((((rt0.c3)) NOT BETWEEN ((t0.c1)) AND ((rt0.c4))), '[[膭o', ((((t0.c2)OR(t0.c1)))AND(t0.c0))))) LEFT OUTER JOIN t0 ON ((GLOB(x'', t0.c2)) BETWEEN (((rt0.c0) BETWEEN (rt0.c4) AND (t0.c2))) AND (((rt0.c4) BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (((IFNULL(vt0.c0, NULL))>(rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((IFNULL(vt0.c0, NULL))>(rt0.c3))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((((t0.c2) BETWEEN (rt0.c4) AND (vt0.c0)), ((rt0.c2) NOT NULL), (- (rt0.c1))))==(((((rt0.c3)) NOT BETWEEN ((t0.c1)) AND ((rt0.c4))), '[[膭o', ((((t0.c2)OR(t0.c1)))AND(t0.c0))))) LEFT OUTER JOIN t0 ON ((GLOB(x'', t0.c2)) BETWEEN (((rt0.c0) BETWEEN (rt0.c4) AND (t0.c2))) AND (((rt0.c4) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED INNER JOIN vt0 ON (((((t0.c2) BETWEEN (rt0.c4) AND (vt0.c0)), ((rt0.c2) NOT NULL), (- (rt0.c1))))==(((((rt0.c3)) NOT BETWEEN ((t0.c1)) AND ((rt0.c4))), '[[膭o', ((((t0.c2)OR(t0.c1)))AND(t0.c0))))) LEFT OUTER JOIN t0 ON ((GLOB(x'', t0.c2)) BETWEEN (((rt0.c0) BETWEEN (rt0.c4) AND (t0.c2))) AND (((rt0.c4) BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (((IFNULL(vt0.c0, NULL))>(rt0.c3)));
SELECT COUNT(*) FROM rt0, vt12, vt0 FULL OUTER JOIN t0 ON CASE WHEN json_patch(rt0.c0, t0.c0) THEN (((rt0.c0, rt0.c2, rt0.c1))<=((rt0.c0, rt0.c0, rt0.c4))) WHEN CAST(t0.c1 AS NUMERIC) THEN ((((vt12.c0)AND(vt0.c0)))AND('~QK~5]FD')) WHEN (('')>(t0.c0)) THEN ((t0.c0) BETWEEN (rt0.c3) AND (vt0.c0)) END WHERE (((((((rt0.c1)AND(vt12.c0)))OR(vt12.c0)))<<(((rt0.c4)>>(vt12.c0))))) ORDER BY rt0.c4 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(vt12.c0)))OR(vt12.c0)))<<(((rt0.c4)>>(vt12.c0))))) IS TRUE)  as count FROM rt0, vt12, vt0 FULL OUTER JOIN t0 ON CASE WHEN json_patch(rt0.c0, t0.c0) THEN (((rt0.c0, rt0.c2, rt0.c1))<=((rt0.c0, rt0.c0, rt0.c4))) WHEN CAST(t0.c1 AS NUMERIC) THEN ((((vt12.c0)AND(vt0.c0)))AND('~QK~5]FD')) WHEN (('')>(t0.c0)) THEN ((t0.c0) BETWEEN (rt0.c3) AND (vt0.c0)) END ORDER BY rt0.c4 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt12, vt0 FULL OUTER JOIN t0 ON CASE WHEN json_patch(rt0.c0, t0.c0) THEN (((rt0.c0, rt0.c2, rt0.c1))<=((rt0.c0, rt0.c0, rt0.c4))) WHEN CAST(t0.c1 AS NUMERIC) THEN ((((vt12.c0)AND(vt0.c0)))AND('~QK~5]FD')) WHEN (('')>(t0.c0)) THEN ((t0.c0) BETWEEN (rt0.c3) AND (vt0.c0)) END WHERE (((((((rt0.c1)AND(vt12.c0)))OR(vt12.c0)))<<(((rt0.c4)>>(vt12.c0))))) ORDER BY rt0.c4 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(vt12.c0)))OR(vt12.c0)))<<(((rt0.c4)>>(vt12.c0))))) IS TRUE)  as count FROM rt0, vt12, vt0 FULL OUTER JOIN t0 ON CASE WHEN json_patch(rt0.c0, t0.c0) THEN (((rt0.c0, rt0.c2, rt0.c1))<=((rt0.c0, rt0.c0, rt0.c4))) WHEN CAST(t0.c1 AS NUMERIC) THEN ((((vt12.c0)AND(vt0.c0)))AND('~QK~5]FD')) WHEN (('')>(t0.c0)) THEN ((t0.c0) BETWEEN (rt0.c3) AND (vt0.c0)) END ORDER BY rt0.c4 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt12, vt0 FULL OUTER JOIN t0 ON CASE WHEN json_patch(rt0.c0, t0.c0) THEN (((rt0.c0, rt0.c2, rt0.c1))<=((rt0.c0, rt0.c0, rt0.c4))) WHEN CAST(t0.c1 AS NUMERIC) THEN ((((vt12.c0)AND(vt0.c0)))AND('~QK~5]FD')) WHEN (('')>(t0.c0)) THEN ((t0.c0) BETWEEN (rt0.c3) AND (vt0.c0)) END WHERE (((((((rt0.c1)AND(vt12.c0)))OR(vt12.c0)))<<(((rt0.c4)>>(vt12.c0))))) ORDER BY rt0.c4 ASC  NULLS FIRST;
SELECT ALL * FROM t0, rt0 WHERE (((x'1bd8') IS FALSE));
SELECT SUM(count) FROM (SELECT ((((x'1bd8') IS FALSE)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((x'1bd8') IS FALSE));
SELECT SUM(count) FROM (SELECT ((((x'1bd8') IS FALSE)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((x'1bd8') IS FALSE));
SELECT ALL * FROM vt12, vt0 WHERE (0xffffffff81b5cf79);
SELECT SUM(count) FROM (SELECT ((0Xffffffff81b5cf79) IS TRUE)  as count FROM vt12, vt0);
SELECT ALL * FROM vt12, vt0 WHERE (0xffffffff81b5cf79);
SELECT SUM(count) FROM (SELECT ((0Xffffffff81b5cf79) IS TRUE)  as count FROM vt12, vt0);
SELECT ALL * FROM vt12, vt0 WHERE (0xffffffff81b5cf79);
SELECT ALL * FROM t0, rt0 WHERE (CASE CASE WHEN x'0246' THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 WHEN t0.c0 THEN rt0.c1 ELSE rt0.c4 END  WHEN ((t0.c2) BETWEEN (rt0.c1) AND (rt0.c3)) THEN ((NULL) BETWEEN (rt0.c4) AND (rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN x'0246' THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 WHEN t0.c0 THEN rt0.c1 ELSE rt0.c4 END  WHEN ((t0.c2) BETWEEN (rt0.c1) AND (rt0.c3)) THEN ((NULL) BETWEEN (rt0.c4) AND (rt0.c3)) END) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CASE CASE WHEN x'0246' THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 WHEN t0.c0 THEN rt0.c1 ELSE rt0.c4 END  WHEN ((t0.c2) BETWEEN (rt0.c1) AND (rt0.c3)) THEN ((NULL) BETWEEN (rt0.c4) AND (rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN x'0246' THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 WHEN t0.c0 THEN rt0.c1 ELSE rt0.c4 END  WHEN ((t0.c2) BETWEEN (rt0.c1) AND (rt0.c3)) THEN ((NULL) BETWEEN (rt0.c4) AND (rt0.c3)) END) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CASE CASE WHEN x'0246' THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 WHEN t0.c0 THEN rt0.c1 ELSE rt0.c4 END  WHEN ((t0.c2) BETWEEN (rt0.c1) AND (rt0.c3)) THEN ((NULL) BETWEEN (rt0.c4) AND (rt0.c3)) END);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1 COLLATE RTRIM))<((rt0.c3 COLLATE RTRIM)))) ORDER BY UNICODE(((rt0.c0)IS NOT(rt0.c1))) DESC, (HEX(rt0.c1) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 COLLATE RTRIM))<((rt0.c3 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0 ORDER BY UNICODE(((rt0.c0)IS NOT(rt0.c1))) DESC, (HEX(rt0.c1) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1 COLLATE RTRIM))<((rt0.c3 COLLATE RTRIM)))) ORDER BY UNICODE(((rt0.c0)IS NOT(rt0.c1))) DESC, (HEX(rt0.c1) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 COLLATE RTRIM))<((rt0.c3 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0 ORDER BY UNICODE(((rt0.c0)IS NOT(rt0.c1))) DESC, (HEX(rt0.c1) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1 COLLATE RTRIM))<((rt0.c3 COLLATE RTRIM)))) ORDER BY UNICODE(((rt0.c0)IS NOT(rt0.c1))) DESC, (HEX(rt0.c1) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((- (UPPER(DISTINCT rt0.c3)))) ORDER BY highlight(CAST(rt0.c2 AS INTEGER), (((rt0.c1, rt0.c4, rt0.c1)) NOT BETWEEN ((t0.c1, rt0.c0, rt0.c0)) AND ((rt0.c3, rt0.c4, t0.c2))), ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4)), (rt0.c4 IN (t0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (UPPER(DISTINCT rt0.c3)))) IS TRUE)  as count FROM t0, rt0 ORDER BY highlight(CAST(rt0.c2 AS INTEGER), (((rt0.c1, rt0.c4, rt0.c1)) NOT BETWEEN ((t0.c1, rt0.c0, rt0.c0)) AND ((rt0.c3, rt0.c4, t0.c2))), ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4)), (rt0.c4 IN (t0.c2))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((- (UPPER(DISTINCT rt0.c3)))) ORDER BY highlight(CAST(rt0.c2 AS INTEGER), (((rt0.c1, rt0.c4, rt0.c1)) NOT BETWEEN ((t0.c1, rt0.c0, rt0.c0)) AND ((rt0.c3, rt0.c4, t0.c2))), ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4)), (rt0.c4 IN (t0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (UPPER(DISTINCT rt0.c3)))) IS TRUE)  as count FROM t0, rt0 ORDER BY highlight(CAST(rt0.c2 AS INTEGER), (((rt0.c1, rt0.c4, rt0.c1)) NOT BETWEEN ((t0.c1, rt0.c0, rt0.c0)) AND ((rt0.c3, rt0.c4, t0.c2))), ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4)), (rt0.c4 IN (t0.c2))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((- (UPPER(DISTINCT rt0.c3)))) ORDER BY highlight(CAST(rt0.c2 AS INTEGER), (((rt0.c1, rt0.c4, rt0.c1)) NOT BETWEEN ((t0.c1, rt0.c0, rt0.c0)) AND ((rt0.c3, rt0.c4, t0.c2))), ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4)), (rt0.c4 IN (t0.c2))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((x'')AND(rt0.c4)))OR(rt0.c3)) COLLATE NOCASE) ORDER BY x'', ((((MIN(rt0.c1, rt0.c4))OR(((rt0.c4) ISNULL))))AND(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'')AND(rt0.c4)))OR(rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY x'', ((((MIN(rt0.c1, rt0.c4))OR(((rt0.c4) ISNULL))))AND(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((x'')AND(rt0.c4)))OR(rt0.c3)) COLLATE NOCASE) ORDER BY x'', ((((MIN(rt0.c1, rt0.c4))OR(((rt0.c4) ISNULL))))AND(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'')AND(rt0.c4)))OR(rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY x'', ((((MIN(rt0.c1, rt0.c4))OR(((rt0.c4) ISNULL))))AND(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((x'')AND(rt0.c4)))OR(rt0.c3)) COLLATE NOCASE) ORDER BY x'', ((((MIN(rt0.c1, rt0.c4))OR(((rt0.c4) ISNULL))))AND(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE ((~ (t0.c2)) COLLATE NOCASE) ORDER BY ((((UPPER(t0.c0))OR(((t0.c2)<(t0.c2)))))OR(x'43f3'))  NULLS LAST, (+ (((t0.c0) BETWEEN (t0.c1) AND (t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (t0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((((UPPER(t0.c0))OR(((t0.c2)<(t0.c2)))))OR(x'43f3'))  NULLS LAST, (+ (((t0.c0) BETWEEN (t0.c1) AND (t0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE ((~ (t0.c2)) COLLATE NOCASE) ORDER BY ((((UPPER(t0.c0))OR(((t0.c2)<(t0.c2)))))OR(x'43f3'))  NULLS LAST, (+ (((t0.c0) BETWEEN (t0.c1) AND (t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (t0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((((UPPER(t0.c0))OR(((t0.c2)<(t0.c2)))))OR(x'43f3'))  NULLS LAST, (+ (((t0.c0) BETWEEN (t0.c1) AND (t0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE ((~ (t0.c2)) COLLATE NOCASE) ORDER BY ((((UPPER(t0.c0))OR(((t0.c2)<(t0.c2)))))OR(x'43f3'))  NULLS LAST, (+ (((t0.c0) BETWEEN (t0.c1) AND (t0.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt12 WHERE ((((((t0.c2))=((t0.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((t0.c2))=((t0.c0)))) IS TRUE)) IS TRUE)  as count FROM t0 NATURAL JOIN vt12);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt12 WHERE ((((((t0.c2))=((t0.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((t0.c2))=((t0.c0)))) IS TRUE)) IS TRUE)  as count FROM t0 NATURAL JOIN vt12);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt12 WHERE ((((((t0.c2))=((t0.c0)))) IS TRUE));
SELECT ALL * FROM vt0, t0, rt0, vt12 WHERE (((((rt0.c0)AND(rt0.c0)))OR(rt0.c3)) COLLATE RTRIM) ORDER BY CAST(((((rt0.c3)OR(rt0.c0)))AND(t0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, rt0, vt12 ORDER BY CAST(((((rt0.c3)OR(rt0.c0)))AND(t0.c0)) AS INTEGER));
SELECT ALL * FROM vt0, t0, rt0, vt12 WHERE (((((rt0.c0)AND(rt0.c0)))OR(rt0.c3)) COLLATE RTRIM) ORDER BY CAST(((((rt0.c3)OR(rt0.c0)))AND(t0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, rt0, vt12 ORDER BY CAST(((((rt0.c3)OR(rt0.c0)))AND(t0.c0)) AS INTEGER));
SELECT ALL * FROM vt0, t0, rt0, vt12 WHERE (((((rt0.c0)AND(rt0.c0)))OR(rt0.c3)) COLLATE RTRIM) ORDER BY CAST(((((rt0.c3)OR(rt0.c0)))AND(t0.c0)) AS INTEGER);
SELECT * FROM t0, rt0 WHERE (t0.c2) ORDER BY CAST(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c4 END AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c4 END AS REAL) DESC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (t0.c2) ORDER BY CAST(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c4 END AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c4 END AS REAL) DESC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (t0.c2) ORDER BY CAST(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c4 END AS REAL) DESC  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c0) IS FALSE))<(((((vt0.c0)OR(t0.c2)))OR(t0.c2))))) ORDER BY ((((CASE WHEN 413468662 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN x'' THEN t0.c0 END)OR('Mb')))AND(vt0.c0)) ASC, (((t0.c1 IN ()))/(CAST(NULL AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))<(((((vt0.c0)OR(t0.c2)))OR(t0.c2))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((CASE WHEN 413468662 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN x'' THEN t0.c0 END)OR('Mb')))AND(vt0.c0)) ASC, (((t0.c1 IN ()))/(CAST(NULL AS NUMERIC))));
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c0) IS FALSE))<(((((vt0.c0)OR(t0.c2)))OR(t0.c2))))) ORDER BY ((((CASE WHEN 413468662 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN x'' THEN t0.c0 END)OR('Mb')))AND(vt0.c0)) ASC, (((t0.c1 IN ()))/(CAST(NULL AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))<(((((vt0.c0)OR(t0.c2)))OR(t0.c2))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((CASE WHEN 413468662 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN x'' THEN t0.c0 END)OR('Mb')))AND(vt0.c0)) ASC, (((t0.c1 IN ()))/(CAST(NULL AS NUMERIC))));
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c0) IS FALSE))<(((((vt0.c0)OR(t0.c2)))OR(t0.c2))))) ORDER BY ((((CASE WHEN 413468662 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN x'' THEN t0.c0 END)OR('Mb')))AND(vt0.c0)) ASC, (((t0.c1 IN ()))/(CAST(NULL AS NUMERIC)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((TRIM(DISTINCT rt0.c1, rt0.c4))<>(((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4))))) ORDER BY (((rt0.c2, rt0.c3, rt0.c4)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c3)) AND ((rt0.c2, rt0.c1, rt0.c0))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT rt0.c1, rt0.c4))!=(((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, rt0.c3, rt0.c4)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c3)) AND ((rt0.c2, rt0.c1, rt0.c0))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (((TRIM(DISTINCT rt0.c1, rt0.c4))<>(((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4))))) ORDER BY (((rt0.c2, rt0.c3, rt0.c4)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c3)) AND ((rt0.c2, rt0.c1, rt0.c0))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT rt0.c1, rt0.c4))!=(((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, rt0.c3, rt0.c4)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c3)) AND ((rt0.c2, rt0.c1, rt0.c0))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (((TRIM(DISTINCT rt0.c1, rt0.c4))<>(((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4))))) ORDER BY (((rt0.c2, rt0.c3, rt0.c4)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c3)) AND ((rt0.c2, rt0.c1, rt0.c0))) COLLATE BINARY;
SELECT * FROM vt12 WHERE (((vt12.c0) NOT BETWEEN (CASE vt12.c0  WHEN vt12.c0 THEN vt12.c0 END) AND (CASE WHEN vt12.c0 THEN vt12.c0 WHEN vt12.c0 THEN vt12.c0 WHEN vt12.c0 THEN vt12.c0 END)));
SELECT SUM(count) FROM (SELECT ((((vt12.c0) NOT BETWEEN (CASE vt12.c0  WHEN vt12.c0 THEN vt12.c0 END) AND (CASE WHEN vt12.c0 THEN vt12.c0 WHEN vt12.c0 THEN vt12.c0 WHEN vt12.c0 THEN vt12.c0 END))) IS TRUE)  as count FROM vt12);
SELECT * FROM vt12 WHERE (((vt12.c0) NOT BETWEEN (CASE vt12.c0  WHEN vt12.c0 THEN vt12.c0 END) AND (CASE WHEN vt12.c0 THEN vt12.c0 WHEN vt12.c0 THEN vt12.c0 WHEN vt12.c0 THEN vt12.c0 END)));
SELECT SUM(count) FROM (SELECT ((((vt12.c0) NOT BETWEEN (CASE vt12.c0  WHEN vt12.c0 THEN vt12.c0 END) AND (CASE WHEN vt12.c0 THEN vt12.c0 WHEN vt12.c0 THEN vt12.c0 WHEN vt12.c0 THEN vt12.c0 END))) IS TRUE)  as count FROM vt12);
SELECT * FROM vt12 WHERE (((vt12.c0) NOT BETWEEN (CASE vt12.c0  WHEN vt12.c0 THEN vt12.c0 END) AND (CASE WHEN vt12.c0 THEN vt12.c0 WHEN vt12.c0 THEN vt12.c0 WHEN vt12.c0 THEN vt12.c0 END)));
SELECT ALL * FROM rt0, vt0 WHERE ((NOT (rt0.c2))) ORDER BY CAST(CAST(rt0.c1 AS TEXT) AS REAL) ASC  NULLS LAST, CAST((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((NULL))) AS INTEGER)  NULLS FIRST, (((((vt0.c0, rt0.c1, rt0.c1))>=((rt0.c3, rt0.c4, vt0.c0)))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c2))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(CAST(rt0.c1 AS TEXT) AS REAL) ASC  NULLS LAST, CAST((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((NULL))) AS INTEGER)  NULLS FIRST, (((((vt0.c0, rt0.c1, rt0.c1))>=((rt0.c3, rt0.c4, vt0.c0)))) IS TRUE) ASC);
SELECT ALL * FROM rt0, vt0 WHERE ((NOT (rt0.c2))) ORDER BY CAST(CAST(rt0.c1 AS TEXT) AS REAL) ASC  NULLS LAST, CAST((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((NULL))) AS INTEGER)  NULLS FIRST, (((((vt0.c0, rt0.c1, rt0.c1))>=((rt0.c3, rt0.c4, vt0.c0)))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c2))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(CAST(rt0.c1 AS TEXT) AS REAL) ASC  NULLS LAST, CAST((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((NULL))) AS INTEGER)  NULLS FIRST, (((((vt0.c0, rt0.c1, rt0.c1))>=((rt0.c3, rt0.c4, vt0.c0)))) IS TRUE) ASC);
SELECT ALL * FROM rt0, vt0 WHERE ((NOT (rt0.c2))) ORDER BY CAST(CAST(rt0.c1 AS TEXT) AS REAL) ASC  NULLS LAST, CAST((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((NULL))) AS INTEGER)  NULLS FIRST, (((((vt0.c0, rt0.c1, rt0.c1))>=((rt0.c3, rt0.c4, vt0.c0)))) IS TRUE) ASC;
SELECT * FROM vt12, vt0, t0, rt0 WHERE (UPPER(t0.c0) COLLATE NOCASE) ORDER BY (- ((~ (rt0.c1)))), 0.25987568829237273 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((UPPER(t0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt12, vt0, t0, rt0 ORDER BY (- ((~ (rt0.c1)))), 0.25987568829237273 COLLATE NOCASE);
SELECT * FROM vt12, vt0, t0, rt0 WHERE (UPPER(t0.c0) COLLATE NOCASE) ORDER BY (- ((~ (rt0.c1)))), 0.25987568829237273 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((UPPER(t0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt12, vt0, t0, rt0 ORDER BY (- ((~ (rt0.c1)))), 0.25987568829237273 COLLATE NOCASE);
SELECT * FROM vt12, vt0, t0, rt0 WHERE (UPPER(t0.c0) COLLATE NOCASE) ORDER BY (- ((~ (rt0.c1)))), 0.25987568829237273 COLLATE NOCASE;
SELECT * FROM rt0, t0, vt12, vt0 WHERE ((NOT (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0, t0, vt12, vt0);
SELECT * FROM rt0, t0, vt12, vt0 WHERE ((NOT (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0, t0, vt12, vt0);
SELECT * FROM rt0, t0, vt12, vt0 WHERE ((NOT (((vt0.c0) NOT NULL))));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((((('1712810278')) BETWEEN ((rt0.c3)) AND ((vt0.c0))))>=(((rt0.c1)==(rt0.c1)))) WHERE (((((((((((rt0.c1) NOTNULL))OR(((rt0.c1)>>(rt0.c4)))))AND(((vt0.c0)IS(rt0.c3)))))OR(CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END)))OR(((((rt0.c3)AND(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1) NOTNULL))OR(((rt0.c1)>>(rt0.c4)))))AND(((vt0.c0)IS(rt0.c3)))))OR(CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END)))OR(((((rt0.c3)AND(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((('1712810278')) BETWEEN ((rt0.c3)) AND ((vt0.c0))))>=(((rt0.c1)==(rt0.c1)))));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((((('1712810278')) BETWEEN ((rt0.c3)) AND ((vt0.c0))))>=(((rt0.c1)==(rt0.c1)))) WHERE (((((((((((rt0.c1) NOTNULL))OR(((rt0.c1)>>(rt0.c4)))))AND(((vt0.c0)IS(rt0.c3)))))OR(CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END)))OR(((((rt0.c3)AND(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1) NOTNULL))OR(((rt0.c1)>>(rt0.c4)))))AND(((vt0.c0)IS(rt0.c3)))))OR(CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END)))OR(((((rt0.c3)AND(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((('1712810278')) BETWEEN ((rt0.c3)) AND ((vt0.c0))))>=(((rt0.c1)==(rt0.c1)))));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((((('1712810278')) BETWEEN ((rt0.c3)) AND ((vt0.c0))))>=(((rt0.c1)==(rt0.c1)))) WHERE (((((((((((rt0.c1) NOTNULL))OR(((rt0.c1)>>(rt0.c4)))))AND(((vt0.c0)IS(rt0.c3)))))OR(CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END)))OR(((((rt0.c3)AND(rt0.c2)))OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM t0, vt0, vt12 WHERE (((CAST('502503516' AS BLOB))-(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST('502503516' AS BLOB))-(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM t0, vt0 NOT INDEXED, vt12);
SELECT ALL COUNT(*) FROM t0, vt0, vt12 WHERE (((CAST('502503516' AS BLOB))-(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST('502503516' AS BLOB))-(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM t0, vt0 NOT INDEXED, vt12);
SELECT ALL COUNT(*) FROM t0, vt0, vt12 WHERE (((CAST('502503516' AS BLOB))-(CAST(vt0.c0 AS BLOB))));
SELECT COUNT(*) FROM rt0, t0, vt12 WHERE (((CAST(t0.c0 AS INTEGER)) NOT BETWEEN (QUOTE(t0.c0)) AND (((((rt0.c4)OR(t0.c0)))AND(t0.c2))))) ORDER BY 0.9272273123414208 DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS INTEGER)) NOT BETWEEN (QUOTE(t0.c0)) AND (((((rt0.c4)OR(t0.c0)))AND(t0.c2))))) IS TRUE)  as count FROM rt0, t0, vt12 ORDER BY 0.9272273123414208 DESC);
SELECT COUNT(*) FROM rt0, t0, vt12 WHERE (((CAST(t0.c0 AS INTEGER)) NOT BETWEEN (QUOTE(t0.c0)) AND (((((rt0.c4)OR(t0.c0)))AND(t0.c2))))) ORDER BY 0.9272273123414208 DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS INTEGER)) NOT BETWEEN (QUOTE(t0.c0)) AND (((((rt0.c4)OR(t0.c0)))AND(t0.c2))))) IS TRUE)  as count FROM rt0, t0, vt12 ORDER BY 0.9272273123414208 DESC);
SELECT COUNT(*) FROM rt0, t0, vt12 WHERE (((CAST(t0.c0 AS INTEGER)) NOT BETWEEN (QUOTE(t0.c0)) AND (((((rt0.c4)OR(t0.c0)))AND(t0.c2))))) ORDER BY 0.9272273123414208 DESC;
SELECT ALL COUNT(*) FROM vt12 WHERE (LTRIM((- (vt12.c0))));
SELECT SUM(count) FROM (SELECT ((LTRIM((- (vt12.c0)))) IS TRUE)  as count FROM vt12);
SELECT ALL COUNT(*) FROM vt12 WHERE (LTRIM((- (vt12.c0))));
SELECT SUM(count) FROM (SELECT ((LTRIM((- (vt12.c0)))) IS TRUE)  as count FROM vt12);
SELECT ALL COUNT(*) FROM vt12 WHERE (LTRIM((- (vt12.c0))));
SELECT COUNT(*) FROM vt12 WHERE (5.17207865E8) ORDER BY ((vt12.c0) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((5.17207865E8) IS TRUE)  as count FROM vt12 ORDER BY ((vt12.c0) IS TRUE) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt12 WHERE (5.17207865E8) ORDER BY ((vt12.c0) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((5.17207865E8) IS TRUE)  as count FROM vt12 ORDER BY ((vt12.c0) IS TRUE) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt12 WHERE (5.17207865E8) ORDER BY ((vt12.c0) IS TRUE) ASC  NULLS LAST;
SELECT * FROM vt12 NOT INDEXED RIGHT OUTER JOIN vt0 ON LOWER(DISTINCT ((t0.c0)/(0.48354402611439484))) FULL OUTER JOIN t0 ON t0.c1 WHERE (((t0.c0 COLLATE RTRIM)IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c2))))) ORDER BY CASE WHEN ((t0.c0) BETWEEN (t0.c1) AND (t0.c1)) THEN (((x'', vt12.c0, '~qk~5]fd'))>((vt0.c0, vt12.c0, vt12.c0))) WHEN (vt0.c0 IN ()) THEN ((t0.c2) NOT BETWEEN (t0.c0) AND (vt12.c0)) WHEN ((t0.c2) NOTNULL) THEN ((t0.c1)<=(t0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM)IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c2))))) IS TRUE)  as count FROM vt12 RIGHT OUTER JOIN vt0 ON LOWER(DISTINCT ((t0.c0)/(0.48354402611439484))) FULL OUTER JOIN t0 ON t0.c1 ORDER BY CASE WHEN ((t0.c0) BETWEEN (t0.c1) AND (t0.c1)) THEN (((x'', vt12.c0, '~qk~5]fd'))>((vt0.c0, vt12.c0, vt12.c0))) WHEN (vt0.c0 IN ()) THEN ((t0.c2) NOT BETWEEN (t0.c0) AND (vt12.c0)) WHEN ((t0.c2) NOTNULL) THEN ((t0.c1)<=(t0.c0)) END  NULLS FIRST);
SELECT * FROM vt12 NOT INDEXED RIGHT OUTER JOIN vt0 ON LOWER(DISTINCT ((t0.c0)/(0.48354402611439484))) FULL OUTER JOIN t0 ON t0.c1 WHERE (((t0.c0 COLLATE RTRIM)IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c2))))) ORDER BY CASE WHEN ((t0.c0) BETWEEN (t0.c1) AND (t0.c1)) THEN (((x'', vt12.c0, '~qk~5]fd'))>((vt0.c0, vt12.c0, vt12.c0))) WHEN (vt0.c0 IN ()) THEN ((t0.c2) NOT BETWEEN (t0.c0) AND (vt12.c0)) WHEN ((t0.c2) NOTNULL) THEN ((t0.c1)<=(t0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM)IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c2))))) IS TRUE)  as count FROM vt12 RIGHT OUTER JOIN vt0 ON LOWER(DISTINCT ((t0.c0)/(0.48354402611439484))) FULL OUTER JOIN t0 ON t0.c1 ORDER BY CASE WHEN ((t0.c0) BETWEEN (t0.c1) AND (t0.c1)) THEN (((x'', vt12.c0, '~qk~5]fd'))>((vt0.c0, vt12.c0, vt12.c0))) WHEN (vt0.c0 IN ()) THEN ((t0.c2) NOT BETWEEN (t0.c0) AND (vt12.c0)) WHEN ((t0.c2) NOTNULL) THEN ((t0.c1)<=(t0.c0)) END  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (NULLIF(DISTINCT (t0.c2 IN ()), NULL));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (t0.c2 IN ()), NULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULLIF(DISTINCT (t0.c2 IN ()), NULL));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (t0.c2 IN ()), NULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULLIF(DISTINCT (t0.c2 IN ()), NULL));
SELECT ALL * FROM t0, vt0 WHERE ((+ (((((t0.c0)AND(t0.c1)))AND(x'e32d')))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((t0.c0)AND(t0.c1)))AND(x'e32d'))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((+ (((((t0.c0)AND(t0.c1)))AND(x'e32d')))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((t0.c0)AND(t0.c1)))AND(x'e32d'))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((+ (((((t0.c0)AND(t0.c1)))AND(x'e32d')))));
SELECT ALL * FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ())) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE) ASC);
SELECT ALL * FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ())) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE) ASC);
SELECT ALL * FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ())) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE) ASC;
SELECT ALL COUNT(*) FROM t0, vt12, rt0, vt0 WHERE ('1581187357') ORDER BY (((vt12.c0 IN ())) BETWEEN (((((t0.c0)AND(t0.c1)))AND(t0.c2))) AND (vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1581187357') IS TRUE)  as count FROM t0, vt12, rt0, vt0 ORDER BY (((vt12.c0 IN ())) BETWEEN (((((t0.c0)AND(t0.c1)))AND(t0.c2))) AND (vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt12, rt0, vt0 WHERE ('1581187357') ORDER BY (((vt12.c0 IN ())) BETWEEN (((((t0.c0)AND(t0.c1)))AND(t0.c2))) AND (vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1581187357') IS TRUE)  as count FROM t0, vt12, rt0, vt0 ORDER BY (((vt12.c0 IN ())) BETWEEN (((((t0.c0)AND(t0.c1)))AND(t0.c2))) AND (vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt12, rt0, vt0 WHERE ('1581187357') ORDER BY (((vt12.c0 IN ())) BETWEEN (((((t0.c0)AND(t0.c1)))AND(t0.c2))) AND (vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE ((((((vt0.c0))==((rt0.c3)))) BETWEEN (((vt0.c0) IS FALSE)) AND ((NOT (rt0.c0))))) ORDER BY (((rt0.c1))<((rt0.c1))) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))==((rt0.c3)))) BETWEEN (((vt0.c0) IS FALSE)) AND ((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1))<((rt0.c1))) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE ((((((vt0.c0))==((rt0.c3)))) BETWEEN (((vt0.c0) IS FALSE)) AND ((NOT (rt0.c0))))) ORDER BY (((rt0.c1))<((rt0.c1))) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))==((rt0.c3)))) BETWEEN (((vt0.c0) IS FALSE)) AND ((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1))<((rt0.c1))) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE ((((((vt0.c0))==((rt0.c3)))) BETWEEN (((vt0.c0) IS FALSE)) AND ((NOT (rt0.c0))))) ORDER BY (((rt0.c1))<((rt0.c1))) COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt12 WHERE ((((((rt0.c3))==((rt0.c4)))) NOTNULL)) ORDER BY (~ (CASE WHEN vt12.c0 THEN rt0.c4 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3))==((rt0.c4)))) NOTNULL)) IS TRUE)  as count FROM rt0, vt12 ORDER BY (~ (CASE WHEN vt12.c0 THEN rt0.c4 END)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt12 WHERE ((((((rt0.c3))==((rt0.c4)))) NOTNULL)) ORDER BY (~ (CASE WHEN vt12.c0 THEN rt0.c4 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3))==((rt0.c4)))) NOTNULL)) IS TRUE)  as count FROM rt0, vt12 ORDER BY (~ (CASE WHEN vt12.c0 THEN rt0.c4 END)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt12 WHERE ((((((rt0.c3))==((rt0.c4)))) NOTNULL)) ORDER BY (~ (CASE WHEN vt12.c0 THEN rt0.c4 END)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt12, vt0, t0, rt0 WHERE ((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4))))=((rt0.c2)))) ORDER BY (- ((+ (rt0.c3)))) DESC  NULLS FIRST, (((rt0.c2 IN (t0.c1))) BETWEEN (((t0.c0)/(0.8876986106070458))) AND (((((rt0.c0)AND(rt0.c2)))AND(rt0.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4))))==((rt0.c2)))) IS TRUE)  as count FROM vt12, vt0, t0, rt0 ORDER BY (- ((+ (rt0.c3)))) DESC  NULLS FIRST, (((rt0.c2 IN (t0.c1))) BETWEEN (((t0.c0)/(0.8876986106070458))) AND (((((rt0.c0)AND(rt0.c2)))AND(rt0.c4))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt12, vt0, t0, rt0 WHERE ((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4))))=((rt0.c2)))) ORDER BY (- ((+ (rt0.c3)))) DESC  NULLS FIRST, (((rt0.c2 IN (t0.c1))) BETWEEN (((t0.c0)/(0.8876986106070458))) AND (((((rt0.c0)AND(rt0.c2)))AND(rt0.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4))))==((rt0.c2)))) IS TRUE)  as count FROM vt12, vt0, t0, rt0 ORDER BY (- ((+ (rt0.c3)))) DESC  NULLS FIRST, (((rt0.c2 IN (t0.c1))) BETWEEN (((t0.c0)/(0.8876986106070458))) AND (((((rt0.c0)AND(rt0.c2)))AND(rt0.c4))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt12, vt0, t0, rt0 WHERE ((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4))))=((rt0.c2)))) ORDER BY (- ((+ (rt0.c3)))) DESC  NULLS FIRST, (((rt0.c2 IN (t0.c1))) BETWEEN (((t0.c0)/(0.8876986106070458))) AND (((((rt0.c0)AND(rt0.c2)))AND(rt0.c4))))  NULLS FIRST;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt12 ON NULL WHERE (((((((rt0.c2)OR('y봞')))AND(rt0.c1))) NOT BETWEEN (CASE vt12.c0  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN vt12.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END) AND (rt0.c1))) ORDER BY (((rt0.c3)LIKE(vt12.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR('y봞')))AND(rt0.c1))) NOT BETWEEN (CASE vt12.c0  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN vt12.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END) AND (rt0.c1))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt12 ON NULL ORDER BY (((rt0.c3)LIKE(vt12.c0)) IN ()) DESC);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt12 ON NULL WHERE (((((((rt0.c2)OR('y봞')))AND(rt0.c1))) NOT BETWEEN (CASE vt12.c0  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN vt12.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END) AND (rt0.c1))) ORDER BY (((rt0.c3)LIKE(vt12.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR('y봞')))AND(rt0.c1))) NOT BETWEEN (CASE vt12.c0  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN vt12.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END) AND (rt0.c1))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt12 ON NULL ORDER BY (((rt0.c3)LIKE(vt12.c0)) IN ()) DESC);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt12 ON NULL WHERE (((((((rt0.c2)OR('y봞')))AND(rt0.c1))) NOT BETWEEN (CASE vt12.c0  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN vt12.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END) AND (rt0.c1))) ORDER BY (((rt0.c3)LIKE(vt12.c0)) IN ()) DESC;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((x'', ((rt0.c3) IS FALSE), rt0.c4 COLLATE RTRIM)) AND ((HEX(rt0.c4), CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c2)||(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((x'', ((rt0.c3) IS FALSE), rt0.c4 COLLATE RTRIM)) AND ((HEX(rt0.c4), CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c2)||(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((x'', ((rt0.c3) IS FALSE), rt0.c4 COLLATE RTRIM)) AND ((HEX(rt0.c4), CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c2)||(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((x'', ((rt0.c3) IS FALSE), rt0.c4 COLLATE RTRIM)) AND ((HEX(rt0.c4), CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c2)||(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((x'', ((rt0.c3) IS FALSE), rt0.c4 COLLATE RTRIM)) AND ((HEX(rt0.c4), CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c2)||(rt0.c2))))));
SELECT COUNT(*) FROM t0, vt0, vt12, rt0 WHERE ((+ (837704112))) ORDER BY ((rt0.c2 IN ()) IN (((rt0.c2)-(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (837704112))) IS TRUE)  as count FROM t0, vt0, vt12, rt0 ORDER BY ((rt0.c2 IN ()) IN (((rt0.c2)-(rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, vt12, rt0 WHERE ((+ (837704112))) ORDER BY ((rt0.c2 IN ()) IN (((rt0.c2)-(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (837704112))) IS TRUE)  as count FROM t0, vt0, vt12, rt0 ORDER BY ((rt0.c2 IN ()) IN (((rt0.c2)-(rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, vt12, rt0 WHERE ((+ (837704112))) ORDER BY ((rt0.c2 IN ()) IN (((rt0.c2)-(rt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt12, t0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt12, t0);
SELECT ALL COUNT(*) FROM vt0, vt12, t0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt12, t0);
SELECT ALL COUNT(*) FROM vt0, vt12, t0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE BINARY);
SELECT * FROM vt12 LEFT OUTER JOIN vt0 ON ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 ELSE vt0.c0 END)||(0.5743042726677496)) LEFT OUTER JOIN t0 ON ABS(DISTINCT (~ (rt0.c4))) LEFT OUTER JOIN rt0 ON ((IFNULL(t0.c1, rt0.c2)) NOT BETWEEN ((((t0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))) AND ((((vt0.c0, rt0.c4, rt0.c1)) BETWEEN ((rt0.c1, vt12.c0, rt0.c4)) AND ((rt0.c1, rt0.c3, vt0.c0))))) WHERE (CASE rt0.c0 COLLATE BINARY  WHEN ((vt0.c0)|(rt0.c2)) THEN ((((rt0.c3)OR(vt12.c0)))AND(t0.c2)) WHEN ((((vt0.c0)OR(rt0.c4)))OR(t0.c1)) THEN ((rt0.c3) NOT NULL) WHEN ((((rt0.c0)OR(vt12.c0)))AND(rt0.c0)) THEN CAST(rt0.c3 AS REAL) ELSE (((((((('')OR(rt0.c3)))OR(vt0.c0)))OR(t0.c0)))OR(vt12.c0)) END) ORDER BY (- (vt12.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0 COLLATE BINARY  WHEN ((vt0.c0)|(rt0.c2)) THEN ((((rt0.c3)OR(vt12.c0)))AND(t0.c2)) WHEN ((((vt0.c0)OR(rt0.c4)))OR(t0.c1)) THEN ((rt0.c3) NOT NULL) WHEN ((((rt0.c0)OR(vt12.c0)))AND(rt0.c0)) THEN CAST(rt0.c3 AS REAL) ELSE (((((((('')OR(rt0.c3)))OR(vt0.c0)))OR(t0.c0)))OR(vt12.c0)) END) IS TRUE)  as count FROM vt12 LEFT OUTER JOIN vt0 ON ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 ELSE vt0.c0 END)||(0.5743042726677496)) LEFT OUTER JOIN t0 ON ABS(DISTINCT (~ (rt0.c4))) LEFT OUTER JOIN rt0 ON ((IFNULL(t0.c1, rt0.c2)) NOT BETWEEN ((((t0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))) AND ((((vt0.c0, rt0.c4, rt0.c1)) BETWEEN ((rt0.c1, vt12.c0, rt0.c4)) AND ((rt0.c1, rt0.c3, vt0.c0))))) ORDER BY (- (vt12.c0 COLLATE NOCASE)) ASC);
SELECT * FROM vt12 LEFT OUTER JOIN vt0 ON ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 ELSE vt0.c0 END)||(0.5743042726677496)) LEFT OUTER JOIN t0 ON ABS(DISTINCT (~ (rt0.c4))) LEFT OUTER JOIN rt0 ON ((IFNULL(t0.c1, rt0.c2)) NOT BETWEEN ((((t0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))) AND ((((vt0.c0, rt0.c4, rt0.c1)) BETWEEN ((rt0.c1, vt12.c0, rt0.c4)) AND ((rt0.c1, rt0.c3, vt0.c0))))) WHERE (CASE rt0.c0 COLLATE BINARY  WHEN ((vt0.c0)|(rt0.c2)) THEN ((((rt0.c3)OR(vt12.c0)))AND(t0.c2)) WHEN ((((vt0.c0)OR(rt0.c4)))OR(t0.c1)) THEN ((rt0.c3) NOT NULL) WHEN ((((rt0.c0)OR(vt12.c0)))AND(rt0.c0)) THEN CAST(rt0.c3 AS REAL) ELSE (((((((('')OR(rt0.c3)))OR(vt0.c0)))OR(t0.c0)))OR(vt12.c0)) END) ORDER BY (- (vt12.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0 COLLATE BINARY  WHEN ((vt0.c0)|(rt0.c2)) THEN ((((rt0.c3)OR(vt12.c0)))AND(t0.c2)) WHEN ((((vt0.c0)OR(rt0.c4)))OR(t0.c1)) THEN ((rt0.c3) NOT NULL) WHEN ((((rt0.c0)OR(vt12.c0)))AND(rt0.c0)) THEN CAST(rt0.c3 AS REAL) ELSE (((((((('')OR(rt0.c3)))OR(vt0.c0)))OR(t0.c0)))OR(vt12.c0)) END) IS TRUE)  as count FROM vt12 LEFT OUTER JOIN vt0 ON ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 ELSE vt0.c0 END)||(0.5743042726677496)) LEFT OUTER JOIN t0 ON ABS(DISTINCT (~ (rt0.c4))) LEFT OUTER JOIN rt0 ON ((IFNULL(t0.c1, rt0.c2)) NOT BETWEEN ((((t0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))) AND ((((vt0.c0, rt0.c4, rt0.c1)) BETWEEN ((rt0.c1, vt12.c0, rt0.c4)) AND ((rt0.c1, rt0.c3, vt0.c0))))) ORDER BY (- (vt12.c0 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM vt0, rt0, t0 LEFT OUTER JOIN vt12 ON CAST('' AS NUMERIC) WHERE (((rt0.c2 COLLATE BINARY) BETWEEN ((((t0.c0))<>((t0.c0)))) AND ((rt0.c0 IN ())))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY) BETWEEN ((((t0.c0))<>((t0.c0)))) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0, t0 LEFT OUTER JOIN vt12 ON CAST('' AS NUMERIC) ORDER BY NULL ASC);
SELECT COUNT(*) FROM vt0, rt0, t0 LEFT OUTER JOIN vt12 ON CAST('' AS NUMERIC) WHERE (((rt0.c2 COLLATE BINARY) BETWEEN ((((t0.c0))<>((t0.c0)))) AND ((rt0.c0 IN ())))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY) BETWEEN ((((t0.c0))<>((t0.c0)))) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0, t0 LEFT OUTER JOIN vt12 ON CAST('' AS NUMERIC) ORDER BY NULL ASC);
SELECT COUNT(*) FROM vt0, rt0, t0 LEFT OUTER JOIN vt12 ON CAST('' AS NUMERIC) WHERE (((rt0.c2 COLLATE BINARY) BETWEEN ((((t0.c0))<>((t0.c0)))) AND ((rt0.c0 IN ())))) ORDER BY NULL ASC;
SELECT ALL * FROM rt0, t0, vt12 WHERE (((vt12.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt12.c0) NOT NULL)) IS TRUE)  as count FROM rt0, t0, vt12);
SELECT ALL * FROM rt0, t0, vt12 WHERE (((vt12.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt12.c0) NOT NULL)) IS TRUE)  as count FROM rt0, t0, vt12);
SELECT ALL * FROM rt0, t0, vt12 WHERE (((vt12.c0) NOT NULL));
SELECT * FROM t0, vt0, rt0 WHERE (rt0.c1) ORDER BY CAST(((rt0.c0)LIKE(0.1829804795864387)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST(((rt0.c0)LIKE(0.1829804795864387)) AS NUMERIC)  NULLS FIRST);
SELECT * FROM t0, vt0, rt0 WHERE (rt0.c1) ORDER BY CAST(((rt0.c0)LIKE(0.1829804795864387)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST(((rt0.c0)LIKE(0.1829804795864387)) AS NUMERIC)  NULLS FIRST);
SELECT * FROM t0, vt0, rt0 WHERE (rt0.c1) ORDER BY CAST(((rt0.c0)LIKE(0.1829804795864387)) AS NUMERIC)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt12, rt0, vt0 WHERE (((-9.01938771E8)<(CAST(vt12.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((-9.01938771E8)<(CAST(vt12.c0 AS REAL)))) IS TRUE)  as count FROM vt12, rt0, vt0);
SELECT ALL COUNT(*) FROM vt12, rt0, vt0 WHERE (((-9.01938771E8)<(CAST(vt12.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((-9.01938771E8)<(CAST(vt12.c0 AS REAL)))) IS TRUE)  as count FROM vt12, rt0, vt0);
SELECT ALL COUNT(*) FROM vt12, rt0, vt0 WHERE (((-9.01938771E8)<(CAST(vt12.c0 AS REAL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (-1170529677) ORDER BY (((((vt0.c0 IN ()))OR(((vt0.c0)>(vt0.c0)))))OR((- (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-1170529677) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN ()))OR(((vt0.c0)>(vt0.c0)))))OR((- (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (-1170529677) ORDER BY (((((vt0.c0 IN ()))OR(((vt0.c0)>(vt0.c0)))))OR((- (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-1170529677) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN ()))OR(((vt0.c0)>(vt0.c0)))))OR((- (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (-1170529677) ORDER BY (((((vt0.c0 IN ()))OR(((vt0.c0)>(vt0.c0)))))OR((- (vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt12, t0, rt0 WHERE ('4X*');
SELECT SUM(count) FROM (SELECT (('4X*') IS TRUE)  as count FROM vt12, t0, rt0);
SELECT COUNT(*) FROM vt12, t0, rt0 WHERE ('4X*');
SELECT SUM(count) FROM (SELECT (('4X*') IS TRUE)  as count FROM vt12, t0, rt0);
SELECT COUNT(*) FROM vt12, t0, rt0 WHERE ('4X*');
SELECT COUNT(*) FROM vt12, rt0, vt0 WHERE (((rt0.c2) NOTNULL)) ORDER BY (~ (CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 ELSE vt12.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOTNULL)) IS TRUE)  as count FROM vt12, rt0, vt0 ORDER BY (~ (CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 ELSE vt12.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM vt12, rt0, vt0 WHERE (((rt0.c2) NOTNULL)) ORDER BY (~ (CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 ELSE vt12.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOTNULL)) IS TRUE)  as count FROM vt12, rt0, vt0 ORDER BY (~ (CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 ELSE vt12.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM vt12, rt0, vt0 WHERE (((rt0.c2) NOTNULL)) ORDER BY (~ (CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 ELSE vt12.c0 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (((t0.c2, t0.c2, t0.c2, t0.c1, t0.c2)) NOT BETWEEN (((- (t0.c1)), CAST(vt0.c0 AS BLOB), t0.c2, CAST(t0.c2 AS TEXT), t0.c0 COLLATE NOCASE)) AND ((LAST_INSERT_ROWID(), COALESCE(DISTINCT t0.c1, vt0.c0), CASE t0.c2  WHEN t0.c1 THEN 0.5884112134616828 WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN t0.c1 END, COALESCE(DISTINCT vt0.c0, t0.c2, vt0.c0, t0.c0), ((t0.c2) BETWEEN (vt0.c0) AND (t0.c2))))) WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((t0.c2, t0.c2, t0.c2, t0.c1, t0.c2)) NOT BETWEEN (((- (t0.c1)), CAST(vt0.c0 AS BLOB), t0.c2, CAST(t0.c2 AS TEXT), t0.c0 COLLATE NOCASE)) AND ((LAST_INSERT_ROWID(), COALESCE(DISTINCT t0.c1, vt0.c0), CASE t0.c2  WHEN t0.c1 THEN 0.5884112134616828 WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN t0.c1 END, COALESCE(DISTINCT vt0.c0, t0.c2, vt0.c0, t0.c0), ((t0.c2) BETWEEN (vt0.c0) AND (t0.c2))))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (((t0.c2, t0.c2, t0.c2, t0.c1, t0.c2)) NOT BETWEEN (((- (t0.c1)), CAST(vt0.c0 AS BLOB), t0.c2, CAST(t0.c2 AS TEXT), t0.c0 COLLATE NOCASE)) AND ((LAST_INSERT_ROWID(), COALESCE(DISTINCT t0.c1, vt0.c0), CASE t0.c2  WHEN t0.c1 THEN 0.5884112134616828 WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN t0.c1 END, COALESCE(DISTINCT vt0.c0, t0.c2, vt0.c0, t0.c0), ((t0.c2) BETWEEN (vt0.c0) AND (t0.c2))))) WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((t0.c2, t0.c2, t0.c2, t0.c1, t0.c2)) NOT BETWEEN (((- (t0.c1)), CAST(vt0.c0 AS BLOB), t0.c2, CAST(t0.c2 AS TEXT), t0.c0 COLLATE NOCASE)) AND ((LAST_INSERT_ROWID(), COALESCE(DISTINCT t0.c1, vt0.c0), CASE t0.c2  WHEN t0.c1 THEN 0.5884112134616828 WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN t0.c1 END, COALESCE(DISTINCT vt0.c0, t0.c2, vt0.c0, t0.c0), ((t0.c2) BETWEEN (vt0.c0) AND (t0.c2))))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (((t0.c2, t0.c2, t0.c2, t0.c1, t0.c2)) NOT BETWEEN (((- (t0.c1)), CAST(vt0.c0 AS BLOB), t0.c2, CAST(t0.c2 AS TEXT), t0.c0 COLLATE NOCASE)) AND ((LAST_INSERT_ROWID(), COALESCE(DISTINCT t0.c1, vt0.c0), CASE t0.c2  WHEN t0.c1 THEN 0.5884112134616828 WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN t0.c1 END, COALESCE(DISTINCT vt0.c0, t0.c2, vt0.c0, t0.c0), ((t0.c2) BETWEEN (vt0.c0) AND (t0.c2))))) WHERE (t0.c1);
SELECT ALL COUNT(*) FROM vt0, vt12, t0 WHERE (CASE (('[]')OR(t0.c0))  WHEN (t0.c0 IN ()) THEN ((((NULL)OR(t0.c2)))AND(0.2249872417083515)) END) ORDER BY '1890368798', ((((vt12.c0) NOT BETWEEN (t0.c1) AND (t0.c1)))>=((NOT (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (('[]')OR(t0.c0))  WHEN (t0.c0 IN ()) THEN ((((NULL)OR(t0.c2)))AND(0.2249872417083515)) END) IS TRUE)  as count FROM vt0, vt12, t0 ORDER BY '1890368798', ((((vt12.c0) NOT BETWEEN (t0.c1) AND (t0.c1)))>=((NOT (t0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt12, t0 WHERE (CASE (('[]')OR(t0.c0))  WHEN (t0.c0 IN ()) THEN ((((NULL)OR(t0.c2)))AND(0.2249872417083515)) END) ORDER BY '1890368798', ((((vt12.c0) NOT BETWEEN (t0.c1) AND (t0.c1)))>=((NOT (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (('[]')OR(t0.c0))  WHEN (t0.c0 IN ()) THEN ((((NULL)OR(t0.c2)))AND(0.2249872417083515)) END) IS TRUE)  as count FROM vt0, vt12, t0 ORDER BY '1890368798', ((((vt12.c0) NOT BETWEEN (t0.c1) AND (t0.c1)))>=((NOT (t0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt12, t0 WHERE (CASE (('[]')OR(t0.c0))  WHEN (t0.c0 IN ()) THEN ((((NULL)OR(t0.c2)))AND(0.2249872417083515)) END) ORDER BY '1890368798', ((((vt12.c0) NOT BETWEEN (t0.c1) AND (t0.c1)))>=((NOT (t0.c0))))  NULLS FIRST;
SELECT * FROM rt0 FULL OUTER JOIN vt12 ON ((((0.7382898167945547)+(rt0.c2)))>>((((vt0.c0, rt0.c0, rt0.c4))>=((vt12.c0, vt0.c0, vt0.c0))))) INNER JOIN vt0 ON (((NULL))<(((((vt0.c0, rt0.c3, rt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c1, vt12.c0)) AND ((rt0.c3, rt0.c4, rt0.c3)))))) WHERE (((((((((rt0.c2 COLLATE BINARY)AND(((rt0.c3) ISNULL))))OR(((((((((rt0.c0)OR(vt12.c0)))OR(rt0.c2)))AND('+	X䐨45Wr')))AND(rt0.c1)))))AND((((vt12.c0))==((vt0.c0))))))AND(CASE rt0.c4  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2 COLLATE BINARY)AND(((rt0.c3) ISNULL))))OR(((((((((rt0.c0)OR(vt12.c0)))OR(rt0.c2)))AND('+	X䐨45Wr')))AND(rt0.c1)))))AND((((vt12.c0))==((vt0.c0))))))AND(CASE rt0.c4  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt12 ON ((((0.7382898167945547)+(rt0.c2)))>>((((vt0.c0, rt0.c0, rt0.c4))>=((vt12.c0, vt0.c0, vt0.c0))))) INNER JOIN vt0 ON (((NULL))<(((((vt0.c0, rt0.c3, rt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c1, vt12.c0)) AND ((rt0.c3, rt0.c4, rt0.c3)))))));
SELECT * FROM rt0 FULL OUTER JOIN vt12 ON ((((0.7382898167945547)+(rt0.c2)))>>((((vt0.c0, rt0.c0, rt0.c4))>=((vt12.c0, vt0.c0, vt0.c0))))) INNER JOIN vt0 ON (((NULL))<(((((vt0.c0, rt0.c3, rt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c1, vt12.c0)) AND ((rt0.c3, rt0.c4, rt0.c3)))))) WHERE (((((((((rt0.c2 COLLATE BINARY)AND(((rt0.c3) ISNULL))))OR(((((((((rt0.c0)OR(vt12.c0)))OR(rt0.c2)))AND('+	X䐨45Wr')))AND(rt0.c1)))))AND((((vt12.c0))==((vt0.c0))))))AND(CASE rt0.c4  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2 COLLATE BINARY)AND(((rt0.c3) ISNULL))))OR(((((((((rt0.c0)OR(vt12.c0)))OR(rt0.c2)))AND('+	X䐨45Wr')))AND(rt0.c1)))))AND((((vt12.c0))==((vt0.c0))))))AND(CASE rt0.c4  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt12 ON ((((0.7382898167945547)+(rt0.c2)))>>((((vt0.c0, rt0.c0, rt0.c4))>=((vt12.c0, vt0.c0, vt0.c0))))) INNER JOIN vt0 ON (((NULL))<(((((vt0.c0, rt0.c3, rt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c1, vt12.c0)) AND ((rt0.c3, rt0.c4, rt0.c3)))))));
SELECT ALL * FROM vt12 CROSS JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c3 END)<=(LENGTH(rt0.c3))) LEFT OUTER JOIN vt0 ON 0.84332811524739 WHERE (((CASE WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END) IS TRUE)) IS TRUE)  as count FROM vt12 CROSS JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c3 END)<=(LENGTH(rt0.c3))) LEFT OUTER JOIN vt0 ON 0.84332811524739);
SELECT ALL * FROM vt12 CROSS JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c3 END)<=(LENGTH(rt0.c3))) LEFT OUTER JOIN vt0 ON 0.84332811524739 WHERE (((CASE WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END) IS TRUE)) IS TRUE)  as count FROM vt12 CROSS JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c3 END)<=(LENGTH(rt0.c3))) LEFT OUTER JOIN vt0 ON 0.84332811524739);
SELECT ALL * FROM vt12 CROSS JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c3 END)<=(LENGTH(rt0.c3))) LEFT OUTER JOIN vt0 ON 0.84332811524739 WHERE (((CASE WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END) IS TRUE));
SELECT COUNT(*) FROM rt0, vt12 RIGHT OUTER JOIN t0 ON ((((t0.c2) IS TRUE))&(((rt0.c4) IS FALSE))) WHERE (((((((t0.c0, t0.c2, rt0.c4))>((rt0.c4, rt0.c2, rt0.c0)))))>(((t0.c2 IN (rt0.c4))))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0, t0.c2, rt0.c4))>((rt0.c4, rt0.c2, rt0.c0)))))>(((t0.c2 IN (rt0.c4)))))) IS TRUE)  as count FROM rt0, vt12 RIGHT OUTER JOIN t0 ON ((((t0.c2) IS TRUE))&(((rt0.c4) IS FALSE))));
SELECT COUNT(*) FROM rt0, vt12 RIGHT OUTER JOIN t0 ON ((((t0.c2) IS TRUE))&(((rt0.c4) IS FALSE))) WHERE (((((((t0.c0, t0.c2, rt0.c4))>((rt0.c4, rt0.c2, rt0.c0)))))>(((t0.c2 IN (rt0.c4))))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0, t0.c2, rt0.c4))>((rt0.c4, rt0.c2, rt0.c0)))))>(((t0.c2 IN (rt0.c4)))))) IS TRUE)  as count FROM rt0, vt12 RIGHT OUTER JOIN t0 ON ((((t0.c2) IS TRUE))&(((rt0.c4) IS FALSE))));
SELECT COUNT(*) FROM rt0, vt12 RIGHT OUTER JOIN t0 ON ((((t0.c2) IS TRUE))&(((rt0.c4) IS FALSE))) WHERE (((((((t0.c0, t0.c2, rt0.c4))>((rt0.c4, rt0.c2, rt0.c0)))))>(((t0.c2 IN (rt0.c4))))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt12 WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN ((((vt0.c0, vt12.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt12.c0, vt0.c0)) AND ((1711339455, vt12.c0, vt12.c0)))) AND (((vt0.c0)||(vt12.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) BETWEEN ((((vt0.c0, vt12.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt12.c0, vt0.c0)) AND ((1711339455, vt12.c0, vt12.c0)))) AND (((vt0.c0)||(vt12.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt12);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt12 WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN ((((vt0.c0, vt12.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt12.c0, vt0.c0)) AND ((1711339455, vt12.c0, vt12.c0)))) AND (((vt0.c0)||(vt12.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) BETWEEN ((((vt0.c0, vt12.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt12.c0, vt0.c0)) AND ((1711339455, vt12.c0, vt12.c0)))) AND (((vt0.c0)||(vt12.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt12);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt12 WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN ((((vt0.c0, vt12.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt12.c0, vt0.c0)) AND ((1711339455, vt12.c0, vt12.c0)))) AND (((vt0.c0)||(vt12.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0, vt12 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0, vt12);
SELECT ALL COUNT(*) FROM rt0, vt0, vt12 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0, vt12);
SELECT ALL COUNT(*) FROM rt0, vt0, vt12 WHERE (rt0.c0);
SELECT COUNT(*) FROM vt12, t0 WHERE ((((CASE WHEN t0.c0 THEN 0X4a1b4428 WHEN x'' THEN t0.c1 WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END))=((((((0.4715755215889815)OR(vt12.c0)))AND(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c0 THEN 0X4a1b4428 WHEN x'' THEN t0.c1 WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END))==((((((0.4715755215889815)OR(vt12.c0)))AND(t0.c0)))))) IS TRUE)  as count FROM vt12, t0);
SELECT COUNT(*) FROM vt12, t0 WHERE ((((CASE WHEN t0.c0 THEN 0X4a1b4428 WHEN x'' THEN t0.c1 WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END))=((((((0.4715755215889815)OR(vt12.c0)))AND(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c0 THEN 0X4a1b4428 WHEN x'' THEN t0.c1 WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END))==((((((0.4715755215889815)OR(vt12.c0)))AND(t0.c0)))))) IS TRUE)  as count FROM vt12, t0);
SELECT COUNT(*) FROM vt12, t0 WHERE ((((CASE WHEN t0.c0 THEN 0X4a1b4428 WHEN x'' THEN t0.c1 WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END))=((((((0.4715755215889815)OR(vt12.c0)))AND(t0.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (x'1955') ORDER BY CASE WHEN rt0.c0 THEN rt0.c3 WHEN x'aa51' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((x'1955') IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c0 THEN rt0.c3 WHEN x'aa51' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'1955') ORDER BY CASE WHEN rt0.c0 THEN rt0.c3 WHEN x'aa51' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((x'1955') IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c0 THEN rt0.c3 WHEN x'aa51' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'1955') ORDER BY CASE WHEN rt0.c0 THEN rt0.c3 WHEN x'aa51' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END COLLATE BINARY ASC;
SELECT ALL * FROM rt0, vt0, t0, vt12 WHERE ((((vt12.c0 IN ()))<=(((rt0.c4)GLOB(rt0.c1))))) ORDER BY ((((rt0.c3) NOT NULL))>>(((rt0.c0) NOT BETWEEN (t0.c2) AND (vt12.c0)))), ((((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c3)))|(CAST(vt12.c0 AS TEXT))), ((((t0.c2)>=(rt0.c0))) NOT BETWEEN (vt0.c0) AND (((rt0.c3)|(t0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt12.c0 IN ()))<=(((rt0.c4)GLOB(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, t0, vt12 ORDER BY ((((rt0.c3) NOT NULL))>>(((rt0.c0) NOT BETWEEN (t0.c2) AND (vt12.c0)))), ((((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c3)))|(CAST(vt12.c0 AS TEXT))), ((((t0.c2)>=(rt0.c0))) NOT BETWEEN (vt0.c0) AND (((rt0.c3)|(t0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0, t0, vt12 WHERE ((((vt12.c0 IN ()))<=(((rt0.c4)GLOB(rt0.c1))))) ORDER BY ((((rt0.c3) NOT NULL))>>(((rt0.c0) NOT BETWEEN (t0.c2) AND (vt12.c0)))), ((((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c3)))|(CAST(vt12.c0 AS TEXT))), ((((t0.c2)>=(rt0.c0))) NOT BETWEEN (vt0.c0) AND (((rt0.c3)|(t0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt12.c0 IN ()))<=(((rt0.c4)GLOB(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, t0, vt12 ORDER BY ((((rt0.c3) NOT NULL))>>(((rt0.c0) NOT BETWEEN (t0.c2) AND (vt12.c0)))), ((((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c3)))|(CAST(vt12.c0 AS TEXT))), ((((t0.c2)>=(rt0.c0))) NOT BETWEEN (vt0.c0) AND (((rt0.c3)|(t0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0, t0, vt12 WHERE ((((vt12.c0 IN ()))<=(((rt0.c4)GLOB(rt0.c1))))) ORDER BY ((((rt0.c3) NOT NULL))>>(((rt0.c0) NOT BETWEEN (t0.c2) AND (vt12.c0)))), ((((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c3)))|(CAST(vt12.c0 AS TEXT))), ((((t0.c2)>=(rt0.c0))) NOT BETWEEN (vt0.c0) AND (((rt0.c3)|(t0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0)))<(((vt0.c0)AND(vt0.c0))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))  NULLS LAST, (((((vt0.c0) NOTNULL)))<=((CAST(vt0.c0 AS INTEGER)))) ASC  NULLS LAST, LENGTH(SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))<(((vt0.c0)AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))  NULLS LAST, (((((vt0.c0) NOTNULL)))<=((CAST(vt0.c0 AS INTEGER)))) ASC  NULLS LAST, LENGTH(SQLITE_SOURCE_ID()));
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0)))<(((vt0.c0)AND(vt0.c0))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))  NULLS LAST, (((((vt0.c0) NOTNULL)))<=((CAST(vt0.c0 AS INTEGER)))) ASC  NULLS LAST, LENGTH(SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))<(((vt0.c0)AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))  NULLS LAST, (((((vt0.c0) NOTNULL)))<=((CAST(vt0.c0 AS INTEGER)))) ASC  NULLS LAST, LENGTH(SQLITE_SOURCE_ID()));
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0)))<(((vt0.c0)AND(vt0.c0))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))  NULLS LAST, (((((vt0.c0) NOTNULL)))<=((CAST(vt0.c0 AS INTEGER)))) ASC  NULLS LAST, LENGTH(SQLITE_SOURCE_ID());
SELECT * FROM vt12 LEFT OUTER JOIN rt0 ON (((x'' IN (rt0.c3))) NOT BETWEEN ((((rt0.c1))!=((rt0.c3)))) AND (((((((((x'7ffb')OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))) WHERE ((+ (rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt12 LEFT OUTER JOIN rt0 ON (((x'' IN (rt0.c3))) NOT BETWEEN ((((rt0.c1))!=((rt0.c3)))) AND (((((((((x'7ffb')OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))));
SELECT * FROM vt12 LEFT OUTER JOIN rt0 ON (((x'' IN (rt0.c3))) NOT BETWEEN ((((rt0.c1))!=((rt0.c3)))) AND (((((((((x'7ffb')OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))) WHERE ((+ (rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt12 LEFT OUTER JOIN rt0 ON (((x'' IN (rt0.c3))) NOT BETWEEN ((((rt0.c1))!=((rt0.c3)))) AND (((((((((x'7ffb')OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))));
SELECT * FROM vt12 LEFT OUTER JOIN rt0 ON (((x'' IN (rt0.c3))) NOT BETWEEN ((((rt0.c1))!=((rt0.c3)))) AND (((((((((x'7ffb')OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))) WHERE ((+ (rt0.c3 COLLATE BINARY)));
SELECT ALL * FROM vt0, vt12, t0 WHERE (((((((((((((((x'b3a4') BETWEEN (t0.c0) AND (vt0.c0)))AND(((t0.c2) IS TRUE))))AND(vt0.c0)))AND(vt12.c0 COLLATE NOCASE)))OR(((((vt12.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(((((vt0.c0)OR(t0.c1)))OR(t0.c2)))))OR(((t0.c0)IS(t0.c2))))) ORDER BY (((- (-1.33513881E8))) NOT NULL), vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((x'b3a4') BETWEEN (t0.c0) AND (vt0.c0)))AND(((t0.c2) IS TRUE))))AND(vt0.c0)))AND(vt12.c0 COLLATE NOCASE)))OR(((((vt12.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(((((vt0.c0)OR(t0.c1)))OR(t0.c2)))))OR(((t0.c0)IS(t0.c2))))) IS TRUE)  as count FROM vt0, vt12, t0 ORDER BY (((- (-1.33513881E8))) NOT NULL), vt0.c0 ASC);
SELECT ALL * FROM vt0, vt12, t0 WHERE (((((((((((((((x'b3a4') BETWEEN (t0.c0) AND (vt0.c0)))AND(((t0.c2) IS TRUE))))AND(vt0.c0)))AND(vt12.c0 COLLATE NOCASE)))OR(((((vt12.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(((((vt0.c0)OR(t0.c1)))OR(t0.c2)))))OR(((t0.c0)IS(t0.c2))))) ORDER BY (((- (-1.33513881E8))) NOT NULL), vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((x'b3a4') BETWEEN (t0.c0) AND (vt0.c0)))AND(((t0.c2) IS TRUE))))AND(vt0.c0)))AND(vt12.c0 COLLATE NOCASE)))OR(((((vt12.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(((((vt0.c0)OR(t0.c1)))OR(t0.c2)))))OR(((t0.c0)IS(t0.c2))))) IS TRUE)  as count FROM vt0, vt12, t0 ORDER BY (((- (-1.33513881E8))) NOT NULL), vt0.c0 ASC);
SELECT ALL * FROM vt0, vt12, t0 WHERE (((((((((((((((x'b3a4') BETWEEN (t0.c0) AND (vt0.c0)))AND(((t0.c2) IS TRUE))))AND(vt0.c0)))AND(vt12.c0 COLLATE NOCASE)))OR(((((vt12.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(((((vt0.c0)OR(t0.c1)))OR(t0.c2)))))OR(((t0.c0)IS(t0.c2))))) ORDER BY (((- (-1.33513881E8))) NOT NULL), vt0.c0 ASC;
SELECT * FROM t0 WHERE ((- (((t0.c2)-(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c2)-(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((- (((t0.c2)-(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c2)-(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((- (((t0.c2)-(t0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (IFNULL(DISTINCT vt0.c0, '-1708815513')))) ORDER BY LIKELY(DISTINCT (+ (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (IFNULL(DISTINCT vt0.c0, '-1708815513')))) IS TRUE)  as count FROM vt0 ORDER BY LIKELY(DISTINCT (+ (vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (IFNULL(DISTINCT vt0.c0, '-1708815513')))) ORDER BY LIKELY(DISTINCT (+ (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (IFNULL(DISTINCT vt0.c0, '-1708815513')))) IS TRUE)  as count FROM vt0 ORDER BY LIKELY(DISTINCT (+ (vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (IFNULL(DISTINCT vt0.c0, '-1708815513')))) ORDER BY LIKELY(DISTINCT (+ (vt0.c0)));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c1)) BETWEEN ((((0.9227817400660997)>=(t0.c0)))) AND ((((t0.c0) BETWEEN (t0.c1) AND (t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) BETWEEN ((((0.9227817400660997)>=(t0.c0)))) AND ((((t0.c0) BETWEEN (t0.c1) AND (t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c1)) BETWEEN ((((0.9227817400660997)>=(t0.c0)))) AND ((((t0.c0) BETWEEN (t0.c1) AND (t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) BETWEEN ((((0.9227817400660997)>=(t0.c0)))) AND ((((t0.c0) BETWEEN (t0.c1) AND (t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c1)) BETWEEN ((((0.9227817400660997)>=(t0.c0)))) AND ((((t0.c0) BETWEEN (t0.c1) AND (t0.c0))))));
SELECT COUNT(*) FROM vt0, rt0, vt12, t0 WHERE ('') ORDER BY TRIM((- (rt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, rt0, vt12, t0 ORDER BY TRIM((- (rt0.c2)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, vt12, t0 WHERE ('') ORDER BY TRIM((- (rt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, rt0, vt12, t0 ORDER BY TRIM((- (rt0.c2)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, vt12, t0 WHERE ('') ORDER BY TRIM((- (rt0.c2)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt12 WHERE ((('412653682')&((((vt12.c0)) BETWEEN ((vt12.c0)) AND ((vt12.c0))))));
SELECT SUM(count) FROM (SELECT (((('412653682')&((((vt12.c0)) BETWEEN ((vt12.c0)) AND ((vt12.c0)))))) IS TRUE)  as count FROM vt12);
SELECT ALL COUNT(*) FROM vt12 WHERE ((('412653682')&((((vt12.c0)) BETWEEN ((vt12.c0)) AND ((vt12.c0))))));
SELECT SUM(count) FROM (SELECT (((('412653682')&((((vt12.c0)) BETWEEN ((vt12.c0)) AND ((vt12.c0)))))) IS TRUE)  as count FROM vt12);
SELECT ALL COUNT(*) FROM vt12 WHERE ((('412653682')&((((vt12.c0)) BETWEEN ((vt12.c0)) AND ((vt12.c0))))));
SELECT COUNT(*) FROM t0 WHERE (CAST(LOWER(t0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(LOWER(t0.c2) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(LOWER(t0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(LOWER(t0.c2) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(LOWER(t0.c2) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, vt12 WHERE (((rt0.c3) BETWEEN (vt12.c0) AND (vt12.c0)) COLLATE RTRIM) ORDER BY ((((((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c0)))OR(((((((((rt0.c1)OR(rt0.c2)))AND(x'5612')))OR(vt12.c0)))AND(rt0.c4)))))OR(rt0.c4 COLLATE NOCASE)))AND(((rt0.c1)AND(rt0.c1)))))OR(((((rt0.c2)OR(rt0.c4)))AND(vt12.c0))))  NULLS LAST, QUOTE(vt12.c0) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) BETWEEN (vt12.c0) AND (vt12.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt12 ORDER BY ((((((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c0)))OR(((((((((rt0.c1)OR(rt0.c2)))AND(x'5612')))OR(vt12.c0)))AND(rt0.c4)))))OR(rt0.c4 COLLATE NOCASE)))AND(((rt0.c1)AND(rt0.c1)))))OR(((((rt0.c2)OR(rt0.c4)))AND(vt12.c0))))  NULLS LAST, QUOTE(vt12.c0) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt12 WHERE (((rt0.c3) BETWEEN (vt12.c0) AND (vt12.c0)) COLLATE RTRIM) ORDER BY ((((((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c0)))OR(((((((((rt0.c1)OR(rt0.c2)))AND(x'5612')))OR(vt12.c0)))AND(rt0.c4)))))OR(rt0.c4 COLLATE NOCASE)))AND(((rt0.c1)AND(rt0.c1)))))OR(((((rt0.c2)OR(rt0.c4)))AND(vt12.c0))))  NULLS LAST, QUOTE(vt12.c0) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) BETWEEN (vt12.c0) AND (vt12.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt12 ORDER BY ((((((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c0)))OR(((((((((rt0.c1)OR(rt0.c2)))AND(x'5612')))OR(vt12.c0)))AND(rt0.c4)))))OR(rt0.c4 COLLATE NOCASE)))AND(((rt0.c1)AND(rt0.c1)))))OR(((((rt0.c2)OR(rt0.c4)))AND(vt12.c0))))  NULLS LAST, QUOTE(vt12.c0) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt12 WHERE (((rt0.c3) BETWEEN (vt12.c0) AND (vt12.c0)) COLLATE RTRIM) ORDER BY ((((((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c0)))OR(((((((((rt0.c1)OR(rt0.c2)))AND(x'5612')))OR(vt12.c0)))AND(rt0.c4)))))OR(rt0.c4 COLLATE NOCASE)))AND(((rt0.c1)AND(rt0.c1)))))OR(((((rt0.c2)OR(rt0.c4)))AND(vt12.c0))))  NULLS LAST, QUOTE(vt12.c0) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((((- (rt0.c2)))OR(rt0.c4 COLLATE BINARY)))AND(((vt0.c0) BETWEEN (rt0.c1) AND (0.17017855898952627)))) INNER JOIN t0 ON CAST('' AS BLOB) WHERE (GLOB(rt0.c2 COLLATE RTRIM, GLOB(t0.c0, rt0.c0))) ORDER BY ((((((t0.c0)) BETWEEN (('-790739593')) AND ((rt0.c3)))))=((vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((GLOB(rt0.c2 COLLATE RTRIM, GLOB(t0.c0, rt0.c0))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((((- (rt0.c2)))OR(rt0.c4 COLLATE BINARY)))AND(((vt0.c0) BETWEEN (rt0.c1) AND (0.17017855898952627)))) INNER JOIN t0 ON CAST('' AS BLOB) ORDER BY ((((((t0.c0)) BETWEEN (('-790739593')) AND ((rt0.c3)))))=((vt0.c0))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((((- (rt0.c2)))OR(rt0.c4 COLLATE BINARY)))AND(((vt0.c0) BETWEEN (rt0.c1) AND (0.17017855898952627)))) INNER JOIN t0 ON CAST('' AS BLOB) WHERE (GLOB(rt0.c2 COLLATE RTRIM, GLOB(t0.c0, rt0.c0))) ORDER BY ((((((t0.c0)) BETWEEN (('-790739593')) AND ((rt0.c3)))))=((vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((GLOB(rt0.c2 COLLATE RTRIM, GLOB(t0.c0, rt0.c0))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((((- (rt0.c2)))OR(rt0.c4 COLLATE BINARY)))AND(((vt0.c0) BETWEEN (rt0.c1) AND (0.17017855898952627)))) INNER JOIN t0 ON CAST('' AS BLOB) ORDER BY ((((((t0.c0)) BETWEEN (('-790739593')) AND ((rt0.c3)))))=((vt0.c0))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((((- (rt0.c2)))OR(rt0.c4 COLLATE BINARY)))AND(((vt0.c0) BETWEEN (rt0.c1) AND (0.17017855898952627)))) INNER JOIN t0 ON CAST('' AS BLOB) WHERE (GLOB(rt0.c2 COLLATE RTRIM, GLOB(t0.c0, rt0.c0))) ORDER BY ((((((t0.c0)) BETWEEN (('-790739593')) AND ((rt0.c3)))))=((vt0.c0))) ASC  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (((((((((t0.c2)AND(t0.c1)))AND(t0.c0)))OR((('1094654736')IS NOT(t0.c2)))))OR(t0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c2)AND(t0.c1)))AND(t0.c0)))OR((('1094654736')IS NOT(t0.c2)))))OR(t0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((((((t0.c2)AND(t0.c1)))AND(t0.c0)))OR((('1094654736')IS NOT(t0.c2)))))OR(t0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c2)AND(t0.c1)))AND(t0.c0)))OR((('1094654736')IS NOT(t0.c2)))))OR(t0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((((((t0.c2)AND(t0.c1)))AND(t0.c0)))OR((('1094654736')IS NOT(t0.c2)))))OR(t0.c1 COLLATE BINARY)));
SELECT * FROM vt0, t0 WHERE (CAST((~ (t0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((~ (t0.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CAST((~ (t0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((~ (t0.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CAST((~ (t0.c2)) AS NUMERIC));
SELECT COUNT(*) FROM rt0, vt12 WHERE ((- (((rt0.c4) NOT NULL)))) ORDER BY ((((rt0.c0) ISNULL)) BETWEEN ((((rt0.c1, rt0.c3, rt0.c2))<((rt0.c0, rt0.c0, rt0.c0)))) AND (CAST(rt0.c0 AS TEXT)))  NULLS LAST, ((LTRIM(rt0.c0, NULL))<=(((rt0.c1)|(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c4) NOT NULL)))) IS TRUE)  as count FROM rt0, vt12 ORDER BY ((((rt0.c0) ISNULL)) BETWEEN ((((rt0.c1, rt0.c3, rt0.c2))<((rt0.c0, rt0.c0, rt0.c0)))) AND (CAST(rt0.c0 AS TEXT)))  NULLS LAST, ((LTRIM(rt0.c0, NULL))<=(((rt0.c1)|(rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt12 WHERE ((- (((rt0.c4) NOT NULL)))) ORDER BY ((((rt0.c0) ISNULL)) BETWEEN ((((rt0.c1, rt0.c3, rt0.c2))<((rt0.c0, rt0.c0, rt0.c0)))) AND (CAST(rt0.c0 AS TEXT)))  NULLS LAST, ((LTRIM(rt0.c0, NULL))<=(((rt0.c1)|(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c4) NOT NULL)))) IS TRUE)  as count FROM rt0, vt12 ORDER BY ((((rt0.c0) ISNULL)) BETWEEN ((((rt0.c1, rt0.c3, rt0.c2))<((rt0.c0, rt0.c0, rt0.c0)))) AND (CAST(rt0.c0 AS TEXT)))  NULLS LAST, ((LTRIM(rt0.c0, NULL))<=(((rt0.c1)|(rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt12 WHERE ((- (((rt0.c4) NOT NULL)))) ORDER BY ((((rt0.c0) ISNULL)) BETWEEN ((((rt0.c1, rt0.c3, rt0.c2))<((rt0.c0, rt0.c0, rt0.c0)))) AND (CAST(rt0.c0 AS TEXT)))  NULLS LAST, ((LTRIM(rt0.c0, NULL))<=(((rt0.c1)|(rt0.c2))));
SELECT * FROM vt0 WHERE ('v.');
SELECT SUM(count) FROM (SELECT ALL (('v.') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('v.');
SELECT SUM(count) FROM (SELECT ALL (('v.') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('v.');
SELECT ALL COUNT(*) FROM vt12 NATURAL JOIN t0 WHERE (UNLIKELY(((t0.c2)>=(t0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((t0.c2)>=(t0.c0)))) IS TRUE)  as count FROM vt12 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt12 NATURAL JOIN t0 WHERE (UNLIKELY(((t0.c2)>=(t0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((t0.c2)>=(t0.c0)))) IS TRUE)  as count FROM vt12 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt12 NATURAL JOIN t0 WHERE (UNLIKELY(((t0.c2)>=(t0.c0))));
SELECT COUNT(*) FROM rt0, vt12, t0, vt0 WHERE (((((CAST(t0.c2 AS NUMERIC))OR(UNLIKELY(t0.c0))))OR((('') NOT BETWEEN (t0.c1) AND (vt12.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c2 AS NUMERIC))OR(UNLIKELY(t0.c0))))OR((('') NOT BETWEEN (t0.c1) AND (vt12.c0))))) IS TRUE)  as count FROM rt0, vt12, t0, vt0);
SELECT COUNT(*) FROM rt0, vt12, t0, vt0 WHERE (((((CAST(t0.c2 AS NUMERIC))OR(UNLIKELY(t0.c0))))OR((('') NOT BETWEEN (t0.c1) AND (vt12.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c2 AS NUMERIC))OR(UNLIKELY(t0.c0))))OR((('') NOT BETWEEN (t0.c1) AND (vt12.c0))))) IS TRUE)  as count FROM rt0, vt12, t0, vt0);
SELECT COUNT(*) FROM rt0, vt12, t0, vt0 WHERE (((((CAST(t0.c2 AS NUMERIC))OR(UNLIKELY(t0.c0))))OR((('') NOT BETWEEN (t0.c1) AND (vt12.c0)))));
SELECT * FROM vt12, rt0, vt0, t0 WHERE (((((rt0.c3) IS TRUE)) NOT BETWEEN (((rt0.c4)<(t0.c1))) AND (CASE rt0.c1  WHEN t0.c1 THEN rt0.c4 WHEN t0.c1 THEN rt0.c1 WHEN rt0.c4 THEN vt12.c0 ELSE 0.03025702324297541 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) IS TRUE)) NOT BETWEEN (((rt0.c4)<(t0.c1))) AND (CASE rt0.c1  WHEN t0.c1 THEN rt0.c4 WHEN t0.c1 THEN rt0.c1 WHEN rt0.c4 THEN vt12.c0 ELSE 0.03025702324297541 END))) IS TRUE)  as count FROM vt12, rt0, vt0, t0);
SELECT * FROM vt12, rt0, vt0, t0 WHERE (((((rt0.c3) IS TRUE)) NOT BETWEEN (((rt0.c4)<(t0.c1))) AND (CASE rt0.c1  WHEN t0.c1 THEN rt0.c4 WHEN t0.c1 THEN rt0.c1 WHEN rt0.c4 THEN vt12.c0 ELSE 0.03025702324297541 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) IS TRUE)) NOT BETWEEN (((rt0.c4)<(t0.c1))) AND (CASE rt0.c1  WHEN t0.c1 THEN rt0.c4 WHEN t0.c1 THEN rt0.c1 WHEN rt0.c4 THEN vt12.c0 ELSE 0.03025702324297541 END))) IS TRUE)  as count FROM vt12, rt0, vt0, t0);
SELECT * FROM vt12, rt0, vt0, t0 WHERE (((((rt0.c3) IS TRUE)) NOT BETWEEN (((rt0.c4)<(t0.c1))) AND (CASE rt0.c1  WHEN t0.c1 THEN rt0.c4 WHEN t0.c1 THEN rt0.c1 WHEN rt0.c4 THEN vt12.c0 ELSE 0.03025702324297541 END)));
SELECT ALL COUNT(*) FROM t0, rt0 NOT INDEXED, vt0 WHERE (HEX(rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((HEX(rt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0 NOT INDEXED, vt0 WHERE (HEX(rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((HEX(rt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0 NOT INDEXED, vt0 WHERE (HEX(rt0.c1 COLLATE BINARY));
SELECT * FROM rt0, vt12, vt0, t0 WHERE ((((t0.c2 IN (t0.c1)))LIKE(rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN (t0.c1)))LIKE(rt0.c2))) IS TRUE)  as count FROM rt0, vt12, vt0, t0);
SELECT * FROM rt0, vt12, vt0, t0 WHERE ((((t0.c2 IN (t0.c1)))LIKE(rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN (t0.c1)))LIKE(rt0.c2))) IS TRUE)  as count FROM rt0, vt12, vt0, t0);
SELECT * FROM rt0, vt12, vt0, t0 WHERE ((((t0.c2 IN (t0.c1)))LIKE(rt0.c2)));
SELECT ALL * FROM t0, vt0 WHERE ((((NULL))>=((CASE t0.c1  WHEN vt0.c0 THEN vt0.c0 END)))) ORDER BY (((((((t0.c1, vt0.c0, t0.c1, t0.c2, t0.c0))>=((t0.c0, t0.c1, t0.c0, t0.c0, x''))))AND(CASE t0.c2  WHEN vt0.c0 THEN t0.c2 END)))AND(vt0.c0))  NULLS FIRST, ((((((vt0.c0)==(t0.c1)))AND(((((((((vt0.c0)AND(t0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(IFNULL(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((NULL))>=((CASE t0.c1  WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((((t0.c1, vt0.c0, t0.c1, t0.c2, t0.c0))>=((t0.c0, t0.c1, t0.c0, t0.c0, x''))))AND(CASE t0.c2  WHEN vt0.c0 THEN t0.c2 END)))AND(vt0.c0))  NULLS FIRST, ((((((vt0.c0)==(t0.c1)))AND(((((((((vt0.c0)AND(t0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(IFNULL(vt0.c0, vt0.c0))));
SELECT ALL * FROM t0, vt0 WHERE ((((NULL))>=((CASE t0.c1  WHEN vt0.c0 THEN vt0.c0 END)))) ORDER BY (((((((t0.c1, vt0.c0, t0.c1, t0.c2, t0.c0))>=((t0.c0, t0.c1, t0.c0, t0.c0, x''))))AND(CASE t0.c2  WHEN vt0.c0 THEN t0.c2 END)))AND(vt0.c0))  NULLS FIRST, ((((((vt0.c0)==(t0.c1)))AND(((((((((vt0.c0)AND(t0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(IFNULL(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((NULL))>=((CASE t0.c1  WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((((t0.c1, vt0.c0, t0.c1, t0.c2, t0.c0))>=((t0.c0, t0.c1, t0.c0, t0.c0, x''))))AND(CASE t0.c2  WHEN vt0.c0 THEN t0.c2 END)))AND(vt0.c0))  NULLS FIRST, ((((((vt0.c0)==(t0.c1)))AND(((((((((vt0.c0)AND(t0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(IFNULL(vt0.c0, vt0.c0))));
SELECT ALL * FROM t0, vt0 WHERE ((((NULL))>=((CASE t0.c1  WHEN vt0.c0 THEN vt0.c0 END)))) ORDER BY (((((((t0.c1, vt0.c0, t0.c1, t0.c2, t0.c0))>=((t0.c0, t0.c1, t0.c0, t0.c0, x''))))AND(CASE t0.c2  WHEN vt0.c0 THEN t0.c2 END)))AND(vt0.c0))  NULLS FIRST, ((((((vt0.c0)==(t0.c1)))AND(((((((((vt0.c0)AND(t0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(IFNULL(vt0.c0, vt0.c0)));
SELECT * FROM vt12 LEFT OUTER JOIN t0 ON rt0.c3 CROSS JOIN vt0 ON CAST(t0.c0 AS TEXT) COLLATE RTRIM CROSS JOIN rt0 ON ((rt0.c3) BETWEEN (((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c2))) AND (((rt0.c2)<=(rt0.c4)))) WHERE (CASE vt0.c0 COLLATE BINARY  WHEN ((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)) THEN ((rt0.c0) NOT BETWEEN (t0.c2) AND (0xffffffffee37e9ef)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN ((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)) THEN ((rt0.c0) NOT BETWEEN (t0.c2) AND (0Xffffffffee37e9ef)) END) IS TRUE)  as count FROM vt12 LEFT OUTER JOIN t0 ON rt0.c3 CROSS JOIN vt0 ON CAST(t0.c0 AS TEXT) COLLATE RTRIM CROSS JOIN rt0 ON ((rt0.c3) BETWEEN (((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c2))) AND (((rt0.c2)<=(rt0.c4)))));
SELECT * FROM vt12 LEFT OUTER JOIN t0 ON rt0.c3 CROSS JOIN vt0 ON CAST(t0.c0 AS TEXT) COLLATE RTRIM CROSS JOIN rt0 ON ((rt0.c3) BETWEEN (((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c2))) AND (((rt0.c2)<=(rt0.c4)))) WHERE (CASE vt0.c0 COLLATE BINARY  WHEN ((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)) THEN ((rt0.c0) NOT BETWEEN (t0.c2) AND (0xffffffffee37e9ef)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN ((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)) THEN ((rt0.c0) NOT BETWEEN (t0.c2) AND (0Xffffffffee37e9ef)) END) IS TRUE)  as count FROM vt12 LEFT OUTER JOIN t0 ON rt0.c3 CROSS JOIN vt0 ON CAST(t0.c0 AS TEXT) COLLATE RTRIM CROSS JOIN rt0 ON ((rt0.c3) BETWEEN (((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c2))) AND (((rt0.c2)<=(rt0.c4)))));
SELECT * FROM vt12 LEFT OUTER JOIN t0 ON rt0.c3 CROSS JOIN vt0 ON CAST(t0.c0 AS TEXT) COLLATE RTRIM CROSS JOIN rt0 ON ((rt0.c3) BETWEEN (((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c2))) AND (((rt0.c2)<=(rt0.c4)))) WHERE (CASE vt0.c0 COLLATE BINARY  WHEN ((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)) THEN ((rt0.c0) NOT BETWEEN (t0.c2) AND (0xffffffffee37e9ef)) END);
SELECT * FROM t0, vt0 WHERE ((((((vt0.c0) BETWEEN (t0.c0) AND (0.7951859372950485))))==((SQLITE_SOURCE_ID()))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (t0.c0) AND (0.7951859372950485))))==((SQLITE_SOURCE_ID())))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((((vt0.c0) BETWEEN (t0.c0) AND (0.7951859372950485))))==((SQLITE_SOURCE_ID()))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (t0.c0) AND (0.7951859372950485))))==((SQLITE_SOURCE_ID())))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((((vt0.c0) BETWEEN (t0.c0) AND (0.7951859372950485))))==((SQLITE_SOURCE_ID()))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c4 IN ()))AND(rt0.c3)))AND(((rt0.c2) IS TRUE)))) ORDER BY (((rt0.c0)) BETWEEN (((((rt0.c4, rt0.c3, rt0.c0))!=((0X0, x'', rt0.c4))))) AND ((CASE rt0.c1  WHEN -234230074 THEN rt0.c4 ELSE '1712810278' END))) DESC  NULLS LAST, json_remove(rt0.c1, 1429042867, 0.18283892759199694, rt0.c3) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4 IN ()))AND(rt0.c3)))AND(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN (((((rt0.c4, rt0.c3, rt0.c0))!=((0X0, x'', rt0.c4))))) AND ((CASE rt0.c1  WHEN -234230074 THEN rt0.c4 ELSE '1712810278' END))) DESC  NULLS LAST, json_remove(rt0.c1, 1429042867, 0.18283892759199694, rt0.c3) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c4 IN ()))AND(rt0.c3)))AND(((rt0.c2) IS TRUE)))) ORDER BY (((rt0.c0)) BETWEEN (((((rt0.c4, rt0.c3, rt0.c0))!=((0X0, x'', rt0.c4))))) AND ((CASE rt0.c1  WHEN -234230074 THEN rt0.c4 ELSE '1712810278' END))) DESC  NULLS LAST, json_remove(rt0.c1, 1429042867, 0.18283892759199694, rt0.c3) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4 IN ()))AND(rt0.c3)))AND(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN (((((rt0.c4, rt0.c3, rt0.c0))!=((0X0, x'', rt0.c4))))) AND ((CASE rt0.c1  WHEN -234230074 THEN rt0.c4 ELSE '1712810278' END))) DESC  NULLS LAST, json_remove(rt0.c1, 1429042867, 0.18283892759199694, rt0.c3) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c4 IN ()))AND(rt0.c3)))AND(((rt0.c2) IS TRUE)))) ORDER BY (((rt0.c0)) BETWEEN (((((rt0.c4, rt0.c3, rt0.c0))!=((0X0, x'', rt0.c4))))) AND ((CASE rt0.c1  WHEN -234230074 THEN rt0.c4 ELSE '1712810278' END))) DESC  NULLS LAST, json_remove(rt0.c1, 1429042867, 0.18283892759199694, rt0.c3) COLLATE BINARY ASC  NULLS LAST;
SELECT * FROM t0 WHERE ((((((((((((((((t0.c1)AND(x'')))OR(t0.c2)))AND(t0.c1)))OR('-131108496')))OR(t0.c2)))AND(t0.c2))))>=((((t0.c2)*(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((((((((((t0.c1)AND(x'')))OR(t0.c2)))AND(t0.c1)))OR('-131108496')))OR(t0.c2)))AND(t0.c2))))>=((((t0.c2)*(t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((((((((((((t0.c1)AND(x'')))OR(t0.c2)))AND(t0.c1)))OR('-131108496')))OR(t0.c2)))AND(t0.c2))))>=((((t0.c2)*(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((((((((((t0.c1)AND(x'')))OR(t0.c2)))AND(t0.c1)))OR('-131108496')))OR(t0.c2)))AND(t0.c2))))>=((((t0.c2)*(t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((((((((((((t0.c1)AND(x'')))OR(t0.c2)))AND(t0.c1)))OR('-131108496')))OR(t0.c2)))AND(t0.c2))))>=((((t0.c2)*(t0.c0))))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((CASE WHEN t0.c1 THEN rt0.c2 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c1 THEN rt0.c2 END) NOT NULL)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((CASE WHEN t0.c1 THEN rt0.c2 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c1 THEN rt0.c2 END) NOT NULL)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((CASE WHEN t0.c1 THEN rt0.c2 END) NOT NULL));
SELECT ALL COUNT(*) FROM vt12 WHERE ((((vt12.c0)) NOT BETWEEN ((TYPEOF(0.576996998644756))) AND ((vt12.c0 COLLATE RTRIM)))) ORDER BY (((vt12.c0)AND(vt12.c0)) IN (x''))  NULLS LAST, vt12.c0;
SELECT SUM(count) FROM (SELECT (((((vt12.c0)) NOT BETWEEN ((TYPEOF(0.576996998644756))) AND ((vt12.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt12 ORDER BY (((vt12.c0)AND(vt12.c0)) IN (x''))  NULLS LAST, vt12.c0);
SELECT ALL COUNT(*) FROM vt12 WHERE ((((vt12.c0)) NOT BETWEEN ((TYPEOF(0.576996998644756))) AND ((vt12.c0 COLLATE RTRIM)))) ORDER BY (((vt12.c0)AND(vt12.c0)) IN (x''))  NULLS LAST, vt12.c0;
SELECT SUM(count) FROM (SELECT (((((vt12.c0)) NOT BETWEEN ((TYPEOF(0.576996998644756))) AND ((vt12.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt12 ORDER BY (((vt12.c0)AND(vt12.c0)) IN (x''))  NULLS LAST, vt12.c0);
SELECT ALL COUNT(*) FROM vt12 WHERE ((((vt12.c0)) NOT BETWEEN ((TYPEOF(0.576996998644756))) AND ((vt12.c0 COLLATE RTRIM)))) ORDER BY (((vt12.c0)AND(vt12.c0)) IN (x''))  NULLS LAST, vt12.c0;
SELECT * FROM vt12, rt0, vt0, t0 WHERE (CAST((('䬱')>>('-839776739')) AS BLOB)) ORDER BY (((vt12.c0)) BETWEEN ((1714232262)) AND (((~ (rt0.c2))))), ((((rt0.c3)OR((rt0.c1 IN ()))))AND((~ (t0.c1)))), ((((((t0.c2)AND(vt12.c0)))OR(t0.c0)))OR(((((rt0.c0)OR(rt0.c0)))AND(rt0.c4))));
SELECT SUM(count) FROM (SELECT ((CAST((('䬱')>>('-839776739')) AS BLOB)) IS TRUE)  as count FROM vt12, rt0, vt0, t0 ORDER BY (((vt12.c0)) BETWEEN ((1714232262)) AND (((~ (rt0.c2))))), ((((rt0.c3)OR((rt0.c1 IN ()))))AND((~ (t0.c1)))), ((((((t0.c2)AND(vt12.c0)))OR(t0.c0)))OR(((((rt0.c0)OR(rt0.c0)))AND(rt0.c4)))));
SELECT * FROM vt12, rt0, vt0, t0 WHERE (CAST((('䬱')>>('-839776739')) AS BLOB)) ORDER BY (((vt12.c0)) BETWEEN ((1714232262)) AND (((~ (rt0.c2))))), ((((rt0.c3)OR((rt0.c1 IN ()))))AND((~ (t0.c1)))), ((((((t0.c2)AND(vt12.c0)))OR(t0.c0)))OR(((((rt0.c0)OR(rt0.c0)))AND(rt0.c4))));
SELECT SUM(count) FROM (SELECT ((CAST((('䬱')>>('-839776739')) AS BLOB)) IS TRUE)  as count FROM vt12, rt0, vt0, t0 ORDER BY (((vt12.c0)) BETWEEN ((1714232262)) AND (((~ (rt0.c2))))), ((((rt0.c3)OR((rt0.c1 IN ()))))AND((~ (t0.c1)))), ((((((t0.c2)AND(vt12.c0)))OR(t0.c0)))OR(((((rt0.c0)OR(rt0.c0)))AND(rt0.c4)))));
SELECT * FROM vt12, rt0, vt0, t0 WHERE (CAST((('䬱')>>('-839776739')) AS BLOB)) ORDER BY (((vt12.c0)) BETWEEN ((1714232262)) AND (((~ (rt0.c2))))), ((((rt0.c3)OR((rt0.c1 IN ()))))AND((~ (t0.c1)))), ((((((t0.c2)AND(vt12.c0)))OR(t0.c0)))OR(((((rt0.c0)OR(rt0.c0)))AND(rt0.c4))));
SELECT * FROM t0, rt0, vt0 NOT INDEXED RIGHT OUTER JOIN vt12 ON ((rt0.c0) ISNULL) COLLATE RTRIM WHERE ((((((NULL) NOT BETWEEN (t0.c2) AND (rt0.c4)), ((rt0.c1) IS TRUE), ((vt0.c0)/(rt0.c1))))==((CAST(vt12.c0 AS BLOB), rt0.c2 COLLATE RTRIM, CAST(rt0.c2 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL) NOT BETWEEN (t0.c2) AND (rt0.c4)), ((rt0.c1) IS TRUE), ((vt0.c0)/(rt0.c1))))==((CAST(vt12.c0 AS BLOB), rt0.c2 COLLATE RTRIM, CAST(rt0.c2 AS INTEGER))))) IS TRUE)  as count FROM t0, rt0, vt0 RIGHT OUTER JOIN vt12 ON ((rt0.c0) ISNULL) COLLATE RTRIM);
SELECT * FROM t0, rt0, vt0 NOT INDEXED RIGHT OUTER JOIN vt12 ON ((rt0.c0) ISNULL) COLLATE RTRIM WHERE ((((((NULL) NOT BETWEEN (t0.c2) AND (rt0.c4)), ((rt0.c1) IS TRUE), ((vt0.c0)/(rt0.c1))))==((CAST(vt12.c0 AS BLOB), rt0.c2 COLLATE RTRIM, CAST(rt0.c2 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL) NOT BETWEEN (t0.c2) AND (rt0.c4)), ((rt0.c1) IS TRUE), ((vt0.c0)/(rt0.c1))))==((CAST(vt12.c0 AS BLOB), rt0.c2 COLLATE RTRIM, CAST(rt0.c2 AS INTEGER))))) IS TRUE)  as count FROM t0, rt0, vt0 RIGHT OUTER JOIN vt12 ON ((rt0.c0) ISNULL) COLLATE RTRIM);
SELECT * FROM t0, rt0, vt0 NOT INDEXED RIGHT OUTER JOIN vt12 ON ((rt0.c0) ISNULL) COLLATE RTRIM WHERE ((((((NULL) NOT BETWEEN (t0.c2) AND (rt0.c4)), ((rt0.c1) IS TRUE), ((vt0.c0)/(rt0.c1))))==((CAST(vt12.c0 AS BLOB), rt0.c2 COLLATE RTRIM, CAST(rt0.c2 AS INTEGER)))));
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON '-357598121' RIGHT OUTER JOIN vt12 ON (NOT (CAST(rt0.c0 AS BLOB))) WHERE ((((((0.32106120664486815)AND(rt0.c4)))OR(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((0.32106120664486815)AND(rt0.c4)))OR(rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON '-357598121' RIGHT OUTER JOIN vt12 ON (NOT (CAST(rt0.c0 AS BLOB))));
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON '-357598121' RIGHT OUTER JOIN vt12 ON (NOT (CAST(rt0.c0 AS BLOB))) WHERE ((((((0.32106120664486815)AND(rt0.c4)))OR(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((0.32106120664486815)AND(rt0.c4)))OR(rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON '-357598121' RIGHT OUTER JOIN vt12 ON (NOT (CAST(rt0.c0 AS BLOB))));
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON '-357598121' RIGHT OUTER JOIN vt12 ON (NOT (CAST(rt0.c0 AS BLOB))) WHERE ((((((0.32106120664486815)AND(rt0.c4)))OR(rt0.c3)) IN ()));
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN '-1170529677' WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (''))) ORDER BY ((((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND('')))AND(SQLITE_COMPILEOPTION_USED(vt0.c0))))OR((+ (vt0.c0)))))AND((('1243300904')/(vt0.c0)))))AND(vt0.c0)))AND(0.1847475313067518))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN '-1170529677' WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (''))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND('')))AND(SQLITE_COMPILEOPTION_USED(vt0.c0))))OR((+ (vt0.c0)))))AND((('1243300904')/(vt0.c0)))))AND(vt0.c0)))AND(0.1847475313067518))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN '-1170529677' WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (''))) ORDER BY ((((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND('')))AND(SQLITE_COMPILEOPTION_USED(vt0.c0))))OR((+ (vt0.c0)))))AND((('1243300904')/(vt0.c0)))))AND(vt0.c0)))AND(0.1847475313067518))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN '-1170529677' WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (''))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND('')))AND(SQLITE_COMPILEOPTION_USED(vt0.c0))))OR((+ (vt0.c0)))))AND((('1243300904')/(vt0.c0)))))AND(vt0.c0)))AND(0.1847475313067518))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN '-1170529677' WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (''))) ORDER BY ((((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND('')))AND(SQLITE_COMPILEOPTION_USED(vt0.c0))))OR((+ (vt0.c0)))))AND((('1243300904')/(vt0.c0)))))AND(vt0.c0)))AND(0.1847475313067518))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0, vt12, rt0 WHERE ((((vt12.c0 IN (x'9aca')))-(((rt0.c2) IS TRUE)))) ORDER BY ((CASE WHEN NULL THEN rt0.c1 ELSE t0.c1 END)*((((t0.c0, rt0.c1, vt0.c0))>((rt0.c1, vt12.c0, t0.c0))))), (((t0.c0) NOT BETWEEN (t0.c2) AND (vt0.c0)) IN (x'')) ASC, CAST(((t0.c2) NOT BETWEEN (rt0.c4) AND (t0.c0)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt12.c0 IN (x'9aca')))-(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0, t0, vt12, rt0 ORDER BY ((CASE WHEN NULL THEN rt0.c1 ELSE t0.c1 END)*((((t0.c0, rt0.c1, vt0.c0))>((rt0.c1, vt12.c0, t0.c0))))), (((t0.c0) NOT BETWEEN (t0.c2) AND (vt0.c0)) IN (x'')) ASC, CAST(((t0.c2) NOT BETWEEN (rt0.c4) AND (t0.c0)) AS BLOB) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, vt12, rt0 WHERE ((((vt12.c0 IN (x'9aca')))-(((rt0.c2) IS TRUE)))) ORDER BY ((CASE WHEN NULL THEN rt0.c1 ELSE t0.c1 END)*((((t0.c0, rt0.c1, vt0.c0))>((rt0.c1, vt12.c0, t0.c0))))), (((t0.c0) NOT BETWEEN (t0.c2) AND (vt0.c0)) IN (x'')) ASC, CAST(((t0.c2) NOT BETWEEN (rt0.c4) AND (t0.c0)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt12.c0 IN (x'9aca')))-(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0, t0, vt12, rt0 ORDER BY ((CASE WHEN NULL THEN rt0.c1 ELSE t0.c1 END)*((((t0.c0, rt0.c1, vt0.c0))>((rt0.c1, vt12.c0, t0.c0))))), (((t0.c0) NOT BETWEEN (t0.c2) AND (vt0.c0)) IN (x'')) ASC, CAST(((t0.c2) NOT BETWEEN (rt0.c4) AND (t0.c0)) AS BLOB) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, vt12, rt0 WHERE ((((vt12.c0 IN (x'9aca')))-(((rt0.c2) IS TRUE)))) ORDER BY ((CASE WHEN NULL THEN rt0.c1 ELSE t0.c1 END)*((((t0.c0, rt0.c1, vt0.c0))>((rt0.c1, vt12.c0, t0.c0))))), (((t0.c0) NOT BETWEEN (t0.c2) AND (vt0.c0)) IN (x'')) ASC, CAST(((t0.c2) NOT BETWEEN (rt0.c4) AND (t0.c0)) AS BLOB) ASC  NULLS FIRST;
SELECT * FROM vt12, vt0, t0, rt0 WHERE ((CAST(rt0.c4 AS BLOB) IN ())) ORDER BY CASE (~ (rt0.c3))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((vt12.c0)>(0Xffffffffc4dc34fe)) WHEN '-1791053299' THEN rt0.c1 WHEN ((((0xffffffffbc32e076)AND(rt0.c2)))OR(t0.c1)) THEN ((vt0.c0)LIKE(rt0.c4)) END ASC;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c4 AS BLOB) IN ())) IS TRUE)  as count FROM vt12, vt0, t0, rt0 ORDER BY CASE (~ (rt0.c3))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((vt12.c0)>(0xffffffffc4dc34fe)) WHEN '-1791053299' THEN rt0.c1 WHEN ((((0Xffffffffbc32e076)AND(rt0.c2)))OR(t0.c1)) THEN ((vt0.c0)LIKE(rt0.c4)) END ASC);
SELECT * FROM vt12, vt0, t0, rt0 WHERE ((CAST(rt0.c4 AS BLOB) IN ())) ORDER BY CASE (~ (rt0.c3))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((vt12.c0)>(0Xffffffffc4dc34fe)) WHEN '-1791053299' THEN rt0.c1 WHEN ((((0xffffffffbc32e076)AND(rt0.c2)))OR(t0.c1)) THEN ((vt0.c0)LIKE(rt0.c4)) END ASC;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c4 AS BLOB) IN ())) IS TRUE)  as count FROM vt12, vt0, t0, rt0 ORDER BY CASE (~ (rt0.c3))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((vt12.c0)>(0xffffffffc4dc34fe)) WHEN '-1791053299' THEN rt0.c1 WHEN ((((0Xffffffffbc32e076)AND(rt0.c2)))OR(t0.c1)) THEN ((vt0.c0)LIKE(rt0.c4)) END ASC);
SELECT * FROM vt12, vt0, t0, rt0 WHERE ((CAST(rt0.c4 AS BLOB) IN ())) ORDER BY CASE (~ (rt0.c3))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((vt12.c0)>(0Xffffffffc4dc34fe)) WHEN '-1791053299' THEN rt0.c1 WHEN ((((0xffffffffbc32e076)AND(rt0.c2)))OR(t0.c1)) THEN ((vt0.c0)LIKE(rt0.c4)) END ASC;
SELECT * FROM t0, vt0, rt0 WHERE (((((((t0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4)))OR(((((t0.c0)OR(x'c088')))AND(rt0.c2)))))AND((((0x619c406e))=((t0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4)))OR(((((t0.c0)OR(x'c088')))AND(rt0.c2)))))AND((((0X619c406e))==((t0.c2)))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (((((((t0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4)))OR(((((t0.c0)OR(x'c088')))AND(rt0.c2)))))AND((((0x619c406e))=((t0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4)))OR(((((t0.c0)OR(x'c088')))AND(rt0.c2)))))AND((((0X619c406e))==((t0.c2)))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (((((((t0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4)))OR(((((t0.c0)OR(x'c088')))AND(rt0.c2)))))AND((((0x619c406e))=((t0.c2))))));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON ((((t0.c0)==(t0.c1))) IS TRUE) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 NOT INDEXED CROSS JOIN t0 ON ((((t0.c0)=(t0.c1))) IS TRUE));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON ((((t0.c0)==(t0.c1))) IS TRUE) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 NOT INDEXED CROSS JOIN t0 ON ((((t0.c0)=(t0.c1))) IS TRUE));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON ((((t0.c0)==(t0.c1))) IS TRUE) WHERE (NULL);
SELECT ALL * FROM vt12, t0 WHERE (CAST(((t0.c0) NOT NULL) AS REAL)) ORDER BY NULL ASC  NULLS LAST, ((vt12.c0)<>(CAST(vt12.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) NOT NULL) AS REAL)) IS TRUE)  as count FROM vt12, t0 ORDER BY NULL ASC  NULLS LAST, ((vt12.c0)!=(CAST(vt12.c0 AS NUMERIC))) ASC);
SELECT ALL * FROM vt12, t0 WHERE (CAST(((t0.c0) NOT NULL) AS REAL)) ORDER BY NULL ASC  NULLS LAST, ((vt12.c0)<>(CAST(vt12.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) NOT NULL) AS REAL)) IS TRUE)  as count FROM vt12, t0 ORDER BY NULL ASC  NULLS LAST, ((vt12.c0)!=(CAST(vt12.c0 AS NUMERIC))) ASC);
SELECT ALL * FROM vt12, t0 WHERE (CAST(((t0.c0) NOT NULL) AS REAL)) ORDER BY NULL ASC  NULLS LAST, ((vt12.c0)<>(CAST(vt12.c0 AS NUMERIC))) ASC;
SELECT ALL COUNT(*) FROM vt0, vt12, rt0 FULL OUTER JOIN t0 ON ((CAST(rt0.c2 AS TEXT))<>(((vt0.c0) IS TRUE))) WHERE ((((~ (rt0.c4)))||(((rt0.c4)LIKE(vt12.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c4)))||(((rt0.c4)LIKE(vt12.c0))))) IS TRUE)  as count FROM vt0, vt12, rt0 FULL OUTER JOIN t0 ON ((CAST(rt0.c2 AS TEXT))!=(((vt0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0, vt12, rt0 FULL OUTER JOIN t0 ON ((CAST(rt0.c2 AS TEXT))<>(((vt0.c0) IS TRUE))) WHERE ((((~ (rt0.c4)))||(((rt0.c4)LIKE(vt12.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c4)))||(((rt0.c4)LIKE(vt12.c0))))) IS TRUE)  as count FROM vt0, vt12, rt0 FULL OUTER JOIN t0 ON ((CAST(rt0.c2 AS TEXT))!=(((vt0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0, vt12, rt0 FULL OUTER JOIN t0 ON ((CAST(rt0.c2 AS TEXT))<>(((vt0.c0) IS TRUE))) WHERE ((((~ (rt0.c4)))||(((rt0.c4)LIKE(vt12.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (rt0.c1) AND (json_insert(rt0.c2, rt0.c3, rt0.c0, rt0.c0, rt0.c3)))) ORDER BY (((rt0.c2))<(((((rt0.c3, NULL, rt0.c0))>=((rt0.c4, rt0.c1, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (rt0.c1) AND (json_insert(rt0.c2, rt0.c3, rt0.c0, rt0.c0, rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2))<(((((rt0.c3, NULL, rt0.c0))>=((rt0.c4, rt0.c1, rt0.c0)))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (rt0.c1) AND (json_insert(rt0.c2, rt0.c3, rt0.c0, rt0.c0, rt0.c3)))) ORDER BY (((rt0.c2))<(((((rt0.c3, NULL, rt0.c0))>=((rt0.c4, rt0.c1, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (rt0.c1) AND (json_insert(rt0.c2, rt0.c3, rt0.c0, rt0.c0, rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2))<(((((rt0.c3, NULL, rt0.c0))>=((rt0.c4, rt0.c1, rt0.c0)))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (rt0.c1) AND (json_insert(rt0.c2, rt0.c3, rt0.c0, rt0.c0, rt0.c3)))) ORDER BY (((rt0.c2))<(((((rt0.c3, NULL, rt0.c0))>=((rt0.c4, rt0.c1, rt0.c0))))));
SELECT * FROM vt0, vt12, rt0 FULL OUTER JOIN t0 ON '!Q풅xꮰ' WHERE (((rt0.c1)IS NOT(rt0.c0)) COLLATE RTRIM) ORDER BY ((SQLITE_SOURCE_ID())LIKE((((t0.c2, '1412334432', rt0.c4))!=((-4.44866173E8, rt0.c3, rt0.c1))))) DESC  NULLS LAST, t0.c1 ASC, json_insert(rt0.c4 COLLATE RTRIM, (+ (rt0.c4)), t0.c2, LOWER(t0.c1), (rt0.c4 IN (vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)IS NOT(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt12, rt0 FULL OUTER JOIN t0 ON '!Q풅xꮰ' ORDER BY ((SQLITE_SOURCE_ID())LIKE((((t0.c2, '1412334432', rt0.c4))!=((-4.44866173E8, rt0.c3, rt0.c1))))) DESC  NULLS LAST, t0.c1 ASC, json_insert(rt0.c4 COLLATE RTRIM, (+ (rt0.c4)), t0.c2, LOWER(t0.c1), (rt0.c4 IN (vt0.c0))) ASC);
SELECT * FROM vt0, vt12, rt0 FULL OUTER JOIN t0 ON '!Q풅xꮰ' WHERE (((rt0.c1)IS NOT(rt0.c0)) COLLATE RTRIM) ORDER BY ((SQLITE_SOURCE_ID())LIKE((((t0.c2, '1412334432', rt0.c4))!=((-4.44866173E8, rt0.c3, rt0.c1))))) DESC  NULLS LAST, t0.c1 ASC, json_insert(rt0.c4 COLLATE RTRIM, (+ (rt0.c4)), t0.c2, LOWER(t0.c1), (rt0.c4 IN (vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)IS NOT(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt12, rt0 FULL OUTER JOIN t0 ON '!Q풅xꮰ' ORDER BY ((SQLITE_SOURCE_ID())LIKE((((t0.c2, '1412334432', rt0.c4))!=((-4.44866173E8, rt0.c3, rt0.c1))))) DESC  NULLS LAST, t0.c1 ASC, json_insert(rt0.c4 COLLATE RTRIM, (+ (rt0.c4)), t0.c2, LOWER(t0.c1), (rt0.c4 IN (vt0.c0))) ASC);
SELECT * FROM vt0, vt12, rt0 FULL OUTER JOIN t0 ON '!Q풅xꮰ' WHERE (((rt0.c1)IS NOT(rt0.c0)) COLLATE RTRIM) ORDER BY ((SQLITE_SOURCE_ID())LIKE((((t0.c2, '1412334432', rt0.c4))!=((-4.44866173E8, rt0.c3, rt0.c1))))) DESC  NULLS LAST, t0.c1 ASC, json_insert(rt0.c4 COLLATE RTRIM, (+ (rt0.c4)), t0.c2, LOWER(t0.c1), (rt0.c4 IN (vt0.c0))) ASC;
SELECT ALL COUNT(*) FROM vt12, rt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c2 AS TEXT))<((t0.c1 IN ()))) FULL OUTER JOIN vt0 ON ((CASE rt0.c1  WHEN t0.c0 THEN vt12.c0 END)&(((((((((rt0.c1)AND(vt12.c0)))OR(t0.c2)))OR(rt0.c2)))AND(rt0.c3)))) WHERE ((- (((('2{Og')) BETWEEN ((rt0.c1)) AND ((rt0.c4)))))) ORDER BY vt12.c0 COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((('2{Og')) BETWEEN ((rt0.c1)) AND ((rt0.c4)))))) IS TRUE)  as count FROM vt12, rt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c2 AS TEXT))<((t0.c1 IN ()))) FULL OUTER JOIN vt0 ON ((CASE rt0.c1  WHEN t0.c0 THEN vt12.c0 END)&(((((((((rt0.c1)AND(vt12.c0)))OR(t0.c2)))OR(rt0.c2)))AND(rt0.c3)))) ORDER BY vt12.c0 COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt12, rt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c2 AS TEXT))<((t0.c1 IN ()))) FULL OUTER JOIN vt0 ON ((CASE rt0.c1  WHEN t0.c0 THEN vt12.c0 END)&(((((((((rt0.c1)AND(vt12.c0)))OR(t0.c2)))OR(rt0.c2)))AND(rt0.c3)))) WHERE ((- (((('2{Og')) BETWEEN ((rt0.c1)) AND ((rt0.c4)))))) ORDER BY vt12.c0 COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((('2{Og')) BETWEEN ((rt0.c1)) AND ((rt0.c4)))))) IS TRUE)  as count FROM vt12, rt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c2 AS TEXT))<((t0.c1 IN ()))) FULL OUTER JOIN vt0 ON ((CASE rt0.c1  WHEN t0.c0 THEN vt12.c0 END)&(((((((((rt0.c1)AND(vt12.c0)))OR(t0.c2)))OR(rt0.c2)))AND(rt0.c3)))) ORDER BY vt12.c0 COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt12, rt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c2 AS TEXT))<((t0.c1 IN ()))) FULL OUTER JOIN vt0 ON ((CASE rt0.c1  WHEN t0.c0 THEN vt12.c0 END)&(((((((((rt0.c1)AND(vt12.c0)))OR(t0.c2)))OR(rt0.c2)))AND(rt0.c3)))) WHERE ((- (((('2{Og')) BETWEEN ((rt0.c1)) AND ((rt0.c4)))))) ORDER BY vt12.c0 COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL * FROM t0, vt0, vt12 WHERE (vt0.c0) ORDER BY (NOT (t0.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0, vt12 ORDER BY (NOT (t0.c2)) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0, vt12 WHERE (vt0.c0) ORDER BY (NOT (t0.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0, vt12 ORDER BY (NOT (t0.c2)) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0, vt12 WHERE (vt0.c0) ORDER BY (NOT (t0.c2)) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0, t0 WHERE (((((COALESCE(t0.c1, rt0.c3))OR(rt0.c3 COLLATE NOCASE)))AND(rt0.c2 COLLATE RTRIM))) ORDER BY ((((t0.c2) ISNULL))>=(vt0.c0))  NULLS FIRST, rt0.c3 COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((COALESCE(t0.c1, rt0.c3))OR(rt0.c3 COLLATE NOCASE)))AND(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((t0.c2) ISNULL))>=(vt0.c0))  NULLS FIRST, rt0.c3 COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, t0 WHERE (((((COALESCE(t0.c1, rt0.c3))OR(rt0.c3 COLLATE NOCASE)))AND(rt0.c2 COLLATE RTRIM))) ORDER BY ((((t0.c2) ISNULL))>=(vt0.c0))  NULLS FIRST, rt0.c3 COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((COALESCE(t0.c1, rt0.c3))OR(rt0.c3 COLLATE NOCASE)))AND(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((t0.c2) ISNULL))>=(vt0.c0))  NULLS FIRST, rt0.c3 COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, t0 WHERE (((((COALESCE(t0.c1, rt0.c3))OR(rt0.c3 COLLATE NOCASE)))AND(rt0.c2 COLLATE RTRIM))) ORDER BY ((((t0.c2) ISNULL))>=(vt0.c0))  NULLS FIRST, rt0.c3 COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((('')AND(vt0.c0)))OR(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((((('')AND(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE (((((('')AND(vt0.c0)))OR(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((((('')AND(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE (((((('')AND(vt0.c0)))OR(vt0.c0)) IN ()));
SELECT COUNT(*) FROM rt0, t0, vt0, vt12 WHERE (CAST((rt0.c4 IN ()) AS TEXT)) ORDER BY ((json_array_length(rt0.c2, rt0.c2))>=(((rt0.c0)<=(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c4 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0, t0, vt0, vt12 ORDER BY ((json_array_length(rt0.c2, rt0.c2))>=(((rt0.c0)<=(rt0.c2)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, vt0, vt12 WHERE (CAST((rt0.c4 IN ()) AS TEXT)) ORDER BY ((json_array_length(rt0.c2, rt0.c2))>=(((rt0.c0)<=(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c4 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0, t0, vt0, vt12 ORDER BY ((json_array_length(rt0.c2, rt0.c2))>=(((rt0.c0)<=(rt0.c2)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, vt0, vt12 WHERE (CAST((rt0.c4 IN ()) AS TEXT)) ORDER BY ((json_array_length(rt0.c2, rt0.c2))>=(((rt0.c0)<=(rt0.c2)))) DESC  NULLS FIRST;
SELECT * FROM vt0 INNER JOIN rt0 ON (CAST(t0.c2 AS INTEGER) IN ()) INNER JOIN vt12 ON ((((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c4)))OR(NULL)))AND((vt12.c0 IN ()))) LEFT OUTER JOIN t0 ON ((((((((((vt0.c0)OR(t0.c2)))AND(rt0.c0)))AND(t0.c0)))OR(rt0.c1))) NOTNULL) WHERE (((((((vt12.c0)OR(t0.c0)))AND(t0.c1)))-(((rt0.c3)>=(vt12.c0))))) ORDER BY CAST(rt0.c4 AS BLOB) COLLATE BINARY DESC  NULLS FIRST, (((((vt0.c0))=((vt12.c0)))) NOT BETWEEN (t0.c0) AND (((t0.c2)&(rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt12.c0)OR(t0.c0)))AND(t0.c1)))-(((rt0.c3)>=(vt12.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (CAST(t0.c2 AS INTEGER) IN ()) INNER JOIN vt12 ON ((((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c4)))OR(NULL)))AND((vt12.c0 IN ()))) LEFT OUTER JOIN t0 ON ((((((((((vt0.c0)OR(t0.c2)))AND(rt0.c0)))AND(t0.c0)))OR(rt0.c1))) NOTNULL) ORDER BY CAST(rt0.c4 AS BLOB) COLLATE BINARY DESC  NULLS FIRST, (((((vt0.c0))==((vt12.c0)))) NOT BETWEEN (t0.c0) AND (((t0.c2)&(rt0.c3)))) ASC  NULLS LAST);
SELECT * FROM vt0 INNER JOIN rt0 ON (CAST(t0.c2 AS INTEGER) IN ()) INNER JOIN vt12 ON ((((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c4)))OR(NULL)))AND((vt12.c0 IN ()))) LEFT OUTER JOIN t0 ON ((((((((((vt0.c0)OR(t0.c2)))AND(rt0.c0)))AND(t0.c0)))OR(rt0.c1))) NOTNULL) WHERE (((((((vt12.c0)OR(t0.c0)))AND(t0.c1)))-(((rt0.c3)>=(vt12.c0))))) ORDER BY CAST(rt0.c4 AS BLOB) COLLATE BINARY DESC  NULLS FIRST, (((((vt0.c0))=((vt12.c0)))) NOT BETWEEN (t0.c0) AND (((t0.c2)&(rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt12.c0)OR(t0.c0)))AND(t0.c1)))-(((rt0.c3)>=(vt12.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (CAST(t0.c2 AS INTEGER) IN ()) INNER JOIN vt12 ON ((((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c4)))OR(NULL)))AND((vt12.c0 IN ()))) LEFT OUTER JOIN t0 ON ((((((((((vt0.c0)OR(t0.c2)))AND(rt0.c0)))AND(t0.c0)))OR(rt0.c1))) NOTNULL) ORDER BY CAST(rt0.c4 AS BLOB) COLLATE BINARY DESC  NULLS FIRST, (((((vt0.c0))==((vt12.c0)))) NOT BETWEEN (t0.c0) AND (((t0.c2)&(rt0.c3)))) ASC  NULLS LAST);
SELECT * FROM vt0 INNER JOIN rt0 ON (CAST(t0.c2 AS INTEGER) IN ()) INNER JOIN vt12 ON ((((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c4)))OR(NULL)))AND((vt12.c0 IN ()))) LEFT OUTER JOIN t0 ON ((((((((((vt0.c0)OR(t0.c2)))AND(rt0.c0)))AND(t0.c0)))OR(rt0.c1))) NOTNULL) WHERE (((((((vt12.c0)OR(t0.c0)))AND(t0.c1)))-(((rt0.c3)>=(vt12.c0))))) ORDER BY CAST(rt0.c4 AS BLOB) COLLATE BINARY DESC  NULLS FIRST, (((((vt0.c0))=((vt12.c0)))) NOT BETWEEN (t0.c0) AND (((t0.c2)&(rt0.c3)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE ((rt0.c1 IN (((vt0.c0)%(vt0.c0)), ((rt0.c4)==(rt0.c1))))) ORDER BY (- ((rt0.c0 IN (rt0.c0, rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN (((vt0.c0)%(vt0.c0)), ((rt0.c4)=(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- ((rt0.c0 IN (rt0.c0, rt0.c3)))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE ((rt0.c1 IN (((vt0.c0)%(vt0.c0)), ((rt0.c4)==(rt0.c1))))) ORDER BY (- ((rt0.c0 IN (rt0.c0, rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN (((vt0.c0)%(vt0.c0)), ((rt0.c4)=(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- ((rt0.c0 IN (rt0.c0, rt0.c3)))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE ((rt0.c1 IN (((vt0.c0)%(vt0.c0)), ((rt0.c4)==(rt0.c1))))) ORDER BY (- ((rt0.c0 IN (rt0.c0, rt0.c3)))) ASC;
SELECT * FROM vt0, vt12, t0 WHERE (((((vt12.c0) BETWEEN (t0.c0) AND (t0.c0)))AND((t0.c2 IN ())))) ORDER BY (t0.c2 COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ((((((vt12.c0) BETWEEN (t0.c0) AND (t0.c0)))AND((t0.c2 IN ())))) IS TRUE)  as count FROM vt0, vt12, t0 ORDER BY (t0.c2 COLLATE RTRIM IN ()));
SELECT * FROM vt0, vt12, t0 WHERE (((((vt12.c0) BETWEEN (t0.c0) AND (t0.c0)))AND((t0.c2 IN ())))) ORDER BY (t0.c2 COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ((((((vt12.c0) BETWEEN (t0.c0) AND (t0.c0)))AND((t0.c2 IN ())))) IS TRUE)  as count FROM vt0, vt12, t0 ORDER BY (t0.c2 COLLATE RTRIM IN ()));
SELECT * FROM vt0, vt12, t0 WHERE (((((vt12.c0) BETWEEN (t0.c0) AND (t0.c0)))AND((t0.c2 IN ())))) ORDER BY (t0.c2 COLLATE RTRIM IN ());
SELECT COUNT(*) FROM rt0, vt12, vt0 WHERE (rt0.c0) ORDER BY (((vt0.c0, x'1018', rt0.c0)) NOT BETWEEN ((rt0.c3, CAST(rt0.c4 AS NUMERIC), ((vt12.c0)<<(vt12.c0)))) AND ((CAST(rt0.c0 AS NUMERIC), DATETIME(rt0.c0, vt12.c0, rt0.c2, rt0.c1, rt0.c2, vt0.c0, rt0.c4), rt0.c0 COLLATE RTRIM)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt12, vt0 ORDER BY (((vt0.c0, x'1018', rt0.c0)) NOT BETWEEN ((rt0.c3, CAST(rt0.c4 AS NUMERIC), ((vt12.c0)<<(vt12.c0)))) AND ((CAST(rt0.c0 AS NUMERIC), DATETIME(rt0.c0, vt12.c0, rt0.c2, rt0.c1, rt0.c2, vt0.c0, rt0.c4), rt0.c0 COLLATE RTRIM)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt12, vt0 WHERE (rt0.c0) ORDER BY (((vt0.c0, x'1018', rt0.c0)) NOT BETWEEN ((rt0.c3, CAST(rt0.c4 AS NUMERIC), ((vt12.c0)<<(vt12.c0)))) AND ((CAST(rt0.c0 AS NUMERIC), DATETIME(rt0.c0, vt12.c0, rt0.c2, rt0.c1, rt0.c2, vt0.c0, rt0.c4), rt0.c0 COLLATE RTRIM)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt12, vt0 ORDER BY (((vt0.c0, x'1018', rt0.c0)) NOT BETWEEN ((rt0.c3, CAST(rt0.c4 AS NUMERIC), ((vt12.c0)<<(vt12.c0)))) AND ((CAST(rt0.c0 AS NUMERIC), DATETIME(rt0.c0, vt12.c0, rt0.c2, rt0.c1, rt0.c2, vt0.c0, rt0.c4), rt0.c0 COLLATE RTRIM)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt12, vt0 WHERE (rt0.c0) ORDER BY (((vt0.c0, x'1018', rt0.c0)) NOT BETWEEN ((rt0.c3, CAST(rt0.c4 AS NUMERIC), ((vt12.c0)<<(vt12.c0)))) AND ((CAST(rt0.c0 AS NUMERIC), DATETIME(rt0.c0, vt12.c0, rt0.c2, rt0.c1, rt0.c2, vt0.c0, rt0.c4), rt0.c0 COLLATE RTRIM)))  NULLS FIRST;
SELECT * FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE RTRIM) ORDER BY UPPER(((-7.90739593E8)LIKE(0X413f1b10))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY UPPER(((-7.90739593E8)LIKE(0X413f1b10))) DESC);
SELECT * FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE RTRIM) ORDER BY UPPER(((-7.90739593E8)LIKE(0X413f1b10))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY UPPER(((-7.90739593E8)LIKE(0X413f1b10))) DESC);
SELECT * FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE RTRIM) ORDER BY UPPER(((-7.90739593E8)LIKE(0X413f1b10))) DESC;
SELECT COUNT(*) FROM rt0, t0 WHERE (((NULL COLLATE RTRIM) NOT BETWEEN (((rt0.c3) NOT BETWEEN (t0.c1) AND (rt0.c2))) AND (t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE RTRIM) NOT BETWEEN (((rt0.c3) NOT BETWEEN (t0.c1) AND (rt0.c2))) AND (t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((NULL COLLATE RTRIM) NOT BETWEEN (((rt0.c3) NOT BETWEEN (t0.c1) AND (rt0.c2))) AND (t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE RTRIM) NOT BETWEEN (((rt0.c3) NOT BETWEEN (t0.c1) AND (rt0.c2))) AND (t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((NULL COLLATE RTRIM) NOT BETWEEN (((rt0.c3) NOT BETWEEN (t0.c1) AND (rt0.c2))) AND (t0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0 WHERE (json_type(((t0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((json_type(((t0.c0) ISNULL))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (json_type(((t0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((json_type(((t0.c0) ISNULL))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (json_type(((t0.c0) ISNULL)));
SELECT * FROM rt0, vt12, t0 NATURAL JOIN vt0 WHERE ((((rt0.c2 IN ()))AND((((rt0.c4, rt0.c4, '')) BETWEEN ((t0.c0, rt0.c2, 0.9272273123414208)) AND ((t0.c2, rt0.c0, rt0.c4)))))) ORDER BY NULL DESC  NULLS LAST, ((~ (vt0.c0)) IN (((((((((0.6880421043807462)OR(rt0.c3)))OR(vt0.c0)))AND(rt0.c2)))AND(vt12.c0)), CASE WHEN rt0.c1 THEN x'' END, ((((rt0.c3)OR(rt0.c3)))OR(t0.c1))))  NULLS FIRST, ((((t0.c1) IS TRUE)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))AND((((rt0.c4, rt0.c4, '')) BETWEEN ((t0.c0, rt0.c2, 0.9272273123414208)) AND ((t0.c2, rt0.c0, rt0.c4)))))) IS TRUE)  as count FROM rt0, vt12, t0 NATURAL JOIN vt0 ORDER BY NULL DESC  NULLS LAST, ((~ (vt0.c0)) IN (((((((((0.6880421043807462)OR(rt0.c3)))OR(vt0.c0)))AND(rt0.c2)))AND(vt12.c0)), CASE WHEN rt0.c1 THEN x'' END, ((((rt0.c3)OR(rt0.c3)))OR(t0.c1))))  NULLS FIRST, ((((t0.c1) IS TRUE)) NOT NULL) DESC);
SELECT * FROM rt0, vt12, t0 NATURAL JOIN vt0 WHERE ((((rt0.c2 IN ()))AND((((rt0.c4, rt0.c4, '')) BETWEEN ((t0.c0, rt0.c2, 0.9272273123414208)) AND ((t0.c2, rt0.c0, rt0.c4)))))) ORDER BY NULL DESC  NULLS LAST, ((~ (vt0.c0)) IN (((((((((0.6880421043807462)OR(rt0.c3)))OR(vt0.c0)))AND(rt0.c2)))AND(vt12.c0)), CASE WHEN rt0.c1 THEN x'' END, ((((rt0.c3)OR(rt0.c3)))OR(t0.c1))))  NULLS FIRST, ((((t0.c1) IS TRUE)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))AND((((rt0.c4, rt0.c4, '')) BETWEEN ((t0.c0, rt0.c2, 0.9272273123414208)) AND ((t0.c2, rt0.c0, rt0.c4)))))) IS TRUE)  as count FROM rt0, vt12, t0 NATURAL JOIN vt0 ORDER BY NULL DESC  NULLS LAST, ((~ (vt0.c0)) IN (((((((((0.6880421043807462)OR(rt0.c3)))OR(vt0.c0)))AND(rt0.c2)))AND(vt12.c0)), CASE WHEN rt0.c1 THEN x'' END, ((((rt0.c3)OR(rt0.c3)))OR(t0.c1))))  NULLS FIRST, ((((t0.c1) IS TRUE)) NOT NULL) DESC);
SELECT * FROM rt0, vt12, t0 NATURAL JOIN vt0 WHERE ((((rt0.c2 IN ()))AND((((rt0.c4, rt0.c4, '')) BETWEEN ((t0.c0, rt0.c2, 0.9272273123414208)) AND ((t0.c2, rt0.c0, rt0.c4)))))) ORDER BY NULL DESC  NULLS LAST, ((~ (vt0.c0)) IN (((((((((0.6880421043807462)OR(rt0.c3)))OR(vt0.c0)))AND(rt0.c2)))AND(vt12.c0)), CASE WHEN rt0.c1 THEN x'' END, ((((rt0.c3)OR(rt0.c3)))OR(t0.c1))))  NULLS FIRST, ((((t0.c1) IS TRUE)) NOT NULL) DESC;
SELECT ALL COUNT(*) FROM t0, rt0, vt0, vt12 WHERE ((((('-490177627' IN ())))<((rt0.c3 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((('-490177627' IN ())))<((rt0.c3 COLLATE BINARY)))) IS TRUE)  as count FROM t0, rt0, vt0, vt12);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, vt12 WHERE ((((('-490177627' IN ())))<((rt0.c3 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((('-490177627' IN ())))<((rt0.c3 COLLATE BINARY)))) IS TRUE)  as count FROM t0, rt0, vt0, vt12);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, vt12 WHERE ((((('-490177627' IN ())))<((rt0.c3 COLLATE BINARY))));
SELECT ALL * FROM vt12, rt0, vt0, t0 WHERE ((~ (((((((((vt0.c0)OR(rt0.c4)))OR(t0.c2)))OR(rt0.c3)))AND(rt0.c2))))) ORDER BY CAST(x'' AS INTEGER) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((~ (((((((((vt0.c0)OR(rt0.c4)))OR(t0.c2)))OR(rt0.c3)))AND(rt0.c2))))) IS TRUE)  as count FROM vt12, rt0, vt0, t0 ORDER BY CAST(x'' AS INTEGER) COLLATE BINARY ASC);
SELECT ALL * FROM vt12, rt0, vt0, t0 WHERE ((~ (((((((((vt0.c0)OR(rt0.c4)))OR(t0.c2)))OR(rt0.c3)))AND(rt0.c2))))) ORDER BY CAST(x'' AS INTEGER) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((~ (((((((((vt0.c0)OR(rt0.c4)))OR(t0.c2)))OR(rt0.c3)))AND(rt0.c2))))) IS TRUE)  as count FROM vt12, rt0, vt0, t0 ORDER BY CAST(x'' AS INTEGER) COLLATE BINARY ASC);
SELECT ALL * FROM vt12, rt0, vt0, t0 WHERE ((~ (((((((((vt0.c0)OR(rt0.c4)))OR(t0.c2)))OR(rt0.c3)))AND(rt0.c2))))) ORDER BY CAST(x'' AS INTEGER) COLLATE BINARY ASC;
SELECT COUNT(*) FROM vt12 WHERE ((+ (vt12.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt12.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt12);
SELECT COUNT(*) FROM vt12 WHERE ((+ (vt12.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt12.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt12);
SELECT COUNT(*) FROM vt12 WHERE ((+ (vt12.c0 COLLATE NOCASE)));
SELECT ALL * FROM rt0 WHERE ((((rt0.c3)LIKE(rt0.c3)) IN ())) ORDER BY (NOT (TRIM(NULL, rt0.c2))) ASC  NULLS FIRST, ((((0.3336800339946766)+(rt0.c2)))%(((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))), ((rt0.c4 COLLATE NOCASE)&(((((rt0.c2)AND(rt0.c1)))AND(rt0.c4))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)LIKE(rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (NOT (TRIM(NULL, rt0.c2))) ASC  NULLS FIRST, ((((0.3336800339946766)+(rt0.c2)))%(((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))), ((rt0.c4 COLLATE NOCASE)&(((((rt0.c2)AND(rt0.c1)))AND(rt0.c4)))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c3)LIKE(rt0.c3)) IN ())) ORDER BY (NOT (TRIM(NULL, rt0.c2))) ASC  NULLS FIRST, ((((0.3336800339946766)+(rt0.c2)))%(((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))), ((rt0.c4 COLLATE NOCASE)&(((((rt0.c2)AND(rt0.c1)))AND(rt0.c4))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)LIKE(rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (NOT (TRIM(NULL, rt0.c2))) ASC  NULLS FIRST, ((((0.3336800339946766)+(rt0.c2)))%(((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))), ((rt0.c4 COLLATE NOCASE)&(((((rt0.c2)AND(rt0.c1)))AND(rt0.c4)))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c3)LIKE(rt0.c3)) IN ())) ORDER BY (NOT (TRIM(NULL, rt0.c2))) ASC  NULLS FIRST, ((((0.3336800339946766)+(rt0.c2)))%(((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))), ((rt0.c4 COLLATE NOCASE)&(((((rt0.c2)AND(rt0.c1)))AND(rt0.c4))));
SELECT ALL * FROM t0 WHERE (CASE t0.c0  WHEN ((t0.c1)AND(t0.c2)) THEN ((t0.c2) NOT NULL) WHEN ((((t0.c1)OR(t0.c0)))AND(t0.c1)) THEN (+ (t0.c1)) WHEN (t0.c2 IN (t0.c0)) THEN t0.c2 ELSE ((t0.c1)*(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE t0.c0  WHEN ((t0.c1)AND(t0.c2)) THEN ((t0.c2) NOT NULL) WHEN ((((t0.c1)OR(t0.c0)))AND(t0.c1)) THEN (+ (t0.c1)) WHEN (t0.c2 IN (t0.c0)) THEN t0.c2 ELSE ((t0.c1)*(t0.c2)) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE t0.c0  WHEN ((t0.c1)AND(t0.c2)) THEN ((t0.c2) NOT NULL) WHEN ((((t0.c1)OR(t0.c0)))AND(t0.c1)) THEN (+ (t0.c1)) WHEN (t0.c2 IN (t0.c0)) THEN t0.c2 ELSE ((t0.c1)*(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE t0.c0  WHEN ((t0.c1)AND(t0.c2)) THEN ((t0.c2) NOT NULL) WHEN ((((t0.c1)OR(t0.c0)))AND(t0.c1)) THEN (+ (t0.c1)) WHEN (t0.c2 IN (t0.c0)) THEN t0.c2 ELSE ((t0.c1)*(t0.c2)) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE t0.c0  WHEN ((t0.c1)AND(t0.c2)) THEN ((t0.c2) NOT NULL) WHEN ((((t0.c1)OR(t0.c0)))AND(t0.c1)) THEN (+ (t0.c1)) WHEN (t0.c2 IN (t0.c0)) THEN t0.c2 ELSE ((t0.c1)*(t0.c2)) END);
SELECT * FROM vt12 WHERE (((CASE WHEN vt12.c0 THEN vt12.c0 WHEN vt12.c0 THEN vt12.c0 WHEN vt12.c0 THEN vt12.c0 ELSE vt12.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt12.c0 THEN vt12.c0 WHEN vt12.c0 THEN vt12.c0 WHEN vt12.c0 THEN vt12.c0 ELSE vt12.c0 END) NOTNULL)) IS TRUE)  as count FROM vt12);
SELECT * FROM vt12 WHERE (((CASE WHEN vt12.c0 THEN vt12.c0 WHEN vt12.c0 THEN vt12.c0 WHEN vt12.c0 THEN vt12.c0 ELSE vt12.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt12.c0 THEN vt12.c0 WHEN vt12.c0 THEN vt12.c0 WHEN vt12.c0 THEN vt12.c0 ELSE vt12.c0 END) NOTNULL)) IS TRUE)  as count FROM vt12);
SELECT * FROM vt12 WHERE (((CASE WHEN vt12.c0 THEN vt12.c0 WHEN vt12.c0 THEN vt12.c0 WHEN vt12.c0 THEN vt12.c0 ELSE vt12.c0 END) NOTNULL));
SELECT * FROM vt0 CROSS JOIN rt0 ON '-357598121' INNER JOIN t0 ON DATETIME(x'', ((('w+2af%8s'))==((rt0.c3))), ((t0.c1)<>(rt0.c3))) CROSS JOIN vt12 ON ((x'ec0b')||('1431825965')) WHERE ((((t0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) ORDER BY json_array_length(CAST(rt0.c0 AS REAL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON '-357598121' INNER JOIN t0 ON DATETIME(x'', ((('w+2af%8s'))==((rt0.c3))), ((t0.c1)!=(rt0.c3))) CROSS JOIN vt12 ON ((x'ec0b')||('1431825965')) ORDER BY json_array_length(CAST(rt0.c0 AS REAL)) DESC  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN rt0 ON '-357598121' INNER JOIN t0 ON DATETIME(x'', ((('w+2af%8s'))==((rt0.c3))), ((t0.c1)<>(rt0.c3))) CROSS JOIN vt12 ON ((x'ec0b')||('1431825965')) WHERE ((((t0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) ORDER BY json_array_length(CAST(rt0.c0 AS REAL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON '-357598121' INNER JOIN t0 ON DATETIME(x'', ((('w+2af%8s'))==((rt0.c3))), ((t0.c1)!=(rt0.c3))) CROSS JOIN vt12 ON ((x'ec0b')||('1431825965')) ORDER BY json_array_length(CAST(rt0.c0 AS REAL)) DESC  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN rt0 ON '-357598121' INNER JOIN t0 ON DATETIME(x'', ((('w+2af%8s'))==((rt0.c3))), ((t0.c1)<>(rt0.c3))) CROSS JOIN vt12 ON ((x'ec0b')||('1431825965')) WHERE ((((t0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) ORDER BY json_array_length(CAST(rt0.c0 AS REAL)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0, t0, vt12 WHERE ((((((rt0.c1) BETWEEN (t0.c1) AND (t0.c0))))>((((((rt0.c0)OR(vt0.c0)))AND(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1) BETWEEN (t0.c1) AND (t0.c0))))>((((((rt0.c0)OR(vt0.c0)))AND(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0, t0, vt12);
SELECT ALL * FROM vt0, rt0, t0, vt12 WHERE ((((((rt0.c1) BETWEEN (t0.c1) AND (t0.c0))))>((((((rt0.c0)OR(vt0.c0)))AND(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1) BETWEEN (t0.c1) AND (t0.c0))))>((((((rt0.c0)OR(vt0.c0)))AND(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0, t0, vt12);
SELECT ALL * FROM vt0, rt0, t0, vt12 WHERE ((((((rt0.c1) BETWEEN (t0.c1) AND (t0.c0))))>((((((rt0.c0)OR(vt0.c0)))AND(rt0.c0))))));
SELECT ALL * FROM t0 WHERE (LIKE(CAST(t0.c2 AS REAL), COALESCE(t0.c2, t0.c1), '0')) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((LIKE(CAST(t0.c2 AS REAL), COALESCE(t0.c2, t0.c1), '0')) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC);
SELECT ALL * FROM t0 WHERE (LIKE(CAST(t0.c2 AS REAL), COALESCE(t0.c2, t0.c1), '0')) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((LIKE(CAST(t0.c2 AS REAL), COALESCE(t0.c2, t0.c1), '0')) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC);
SELECT ALL * FROM t0 WHERE (LIKE(CAST(t0.c2 AS REAL), COALESCE(t0.c2, t0.c1), '0')) ORDER BY t0.c0 DESC;
SELECT ALL COUNT(*) FROM vt0, rt0, vt12 WHERE ((+ (((('-133513881')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) ORDER BY ((CAST(rt0.c4 AS TEXT))<<(((((((((((((vt12.c0)AND(vt12.c0)))OR(rt0.c1)))OR(rt0.c3)))OR('837704112')))OR(rt0.c1)))AND(rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((('-133513881')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0, vt12 ORDER BY ((CAST(rt0.c4 AS TEXT))<<(((((((((((((vt12.c0)AND(vt12.c0)))OR(rt0.c1)))OR(rt0.c3)))OR('837704112')))OR(rt0.c1)))AND(rt0.c3)))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, vt12 WHERE ((+ (((('-133513881')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) ORDER BY ((CAST(rt0.c4 AS TEXT))<<(((((((((((((vt12.c0)AND(vt12.c0)))OR(rt0.c1)))OR(rt0.c3)))OR('837704112')))OR(rt0.c1)))AND(rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((('-133513881')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0, vt12 ORDER BY ((CAST(rt0.c4 AS TEXT))<<(((((((((((((vt12.c0)AND(vt12.c0)))OR(rt0.c1)))OR(rt0.c3)))OR('837704112')))OR(rt0.c1)))AND(rt0.c3)))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, vt12 WHERE ((+ (((('-133513881')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) ORDER BY ((CAST(rt0.c4 AS TEXT))<<(((((((((((((vt12.c0)AND(vt12.c0)))OR(rt0.c1)))OR(rt0.c3)))OR('837704112')))OR(rt0.c1)))AND(rt0.c3)))) ASC;
SELECT COUNT(*) FROM t0, rt0, vt0 LEFT OUTER JOIN vt12 ON json_type((((rt0.c0, t0.c0, rt0.c3, rt0.c4, vt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c2, rt0.c1, vt12.c0)) AND ((rt0.c1, t0.c0, vt12.c0, t0.c1, '1650019371')))) WHERE ((((rt0.c0 IN ())) NOT BETWEEN ((+ (rt0.c2))) AND (CASE t0.c0  WHEN rt0.c3 THEN vt12.c0 END))) ORDER BY ((((((rt0.c2) NOT NULL))OR(((vt0.c0) BETWEEN (t0.c0) AND (rt0.c0)))))AND(((vt12.c0)*(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) NOT BETWEEN ((+ (rt0.c2))) AND (CASE t0.c0  WHEN rt0.c3 THEN vt12.c0 END))) IS TRUE)  as count FROM t0, rt0, vt0 LEFT OUTER JOIN vt12 ON json_type((((rt0.c0, t0.c0, rt0.c3, rt0.c4, vt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c2, rt0.c1, vt12.c0)) AND ((rt0.c1, t0.c0, vt12.c0, t0.c1, '1650019371')))) ORDER BY ((((((rt0.c2) NOT NULL))OR(((vt0.c0) BETWEEN (t0.c0) AND (rt0.c0)))))AND(((vt12.c0)*(rt0.c2)))));
SELECT COUNT(*) FROM t0, rt0, vt0 LEFT OUTER JOIN vt12 ON json_type((((rt0.c0, t0.c0, rt0.c3, rt0.c4, vt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c2, rt0.c1, vt12.c0)) AND ((rt0.c1, t0.c0, vt12.c0, t0.c1, '1650019371')))) WHERE ((((rt0.c0 IN ())) NOT BETWEEN ((+ (rt0.c2))) AND (CASE t0.c0  WHEN rt0.c3 THEN vt12.c0 END))) ORDER BY ((((((rt0.c2) NOT NULL))OR(((vt0.c0) BETWEEN (t0.c0) AND (rt0.c0)))))AND(((vt12.c0)*(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) NOT BETWEEN ((+ (rt0.c2))) AND (CASE t0.c0  WHEN rt0.c3 THEN vt12.c0 END))) IS TRUE)  as count FROM t0, rt0, vt0 LEFT OUTER JOIN vt12 ON json_type((((rt0.c0, t0.c0, rt0.c3, rt0.c4, vt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c2, rt0.c1, vt12.c0)) AND ((rt0.c1, t0.c0, vt12.c0, t0.c1, '1650019371')))) ORDER BY ((((((rt0.c2) NOT NULL))OR(((vt0.c0) BETWEEN (t0.c0) AND (rt0.c0)))))AND(((vt12.c0)*(rt0.c2)))));
SELECT COUNT(*) FROM t0, rt0, vt0 LEFT OUTER JOIN vt12 ON json_type((((rt0.c0, t0.c0, rt0.c3, rt0.c4, vt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c2, rt0.c1, vt12.c0)) AND ((rt0.c1, t0.c0, vt12.c0, t0.c1, '1650019371')))) WHERE ((((rt0.c0 IN ())) NOT BETWEEN ((+ (rt0.c2))) AND (CASE t0.c0  WHEN rt0.c3 THEN vt12.c0 END))) ORDER BY ((((((rt0.c2) NOT NULL))OR(((vt0.c0) BETWEEN (t0.c0) AND (rt0.c0)))))AND(((vt12.c0)*(rt0.c2))));
SELECT COUNT(*) FROM t0 WHERE (json_object((NOT (t0.c1)), '')) ORDER BY (((((t0.c1))=((t0.c2))))-(t0.c1 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((json_object((NOT (t0.c1)), '')) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c1))=((t0.c2))))-(t0.c1 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM t0 WHERE (json_object((NOT (t0.c1)), '')) ORDER BY (((((t0.c1))=((t0.c2))))-(t0.c1 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((json_object((NOT (t0.c1)), '')) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c1))=((t0.c2))))-(t0.c1 COLLATE NOCASE)) ASC);
SELECT * FROM vt0 CROSS JOIN t0 ON t0.c1 WHERE (x'4a9e' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((x'4a9e' COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON t0.c1);
SELECT * FROM vt0 CROSS JOIN t0 ON t0.c1 WHERE (x'4a9e' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((x'4a9e' COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON t0.c1);
SELECT * FROM vt0 CROSS JOIN t0 ON t0.c1 WHERE (x'4a9e' COLLATE BINARY);
SELECT * FROM vt12 WHERE (((((vt12.c0)AND(vt12.c0)))&(((vt12.c0)||(vt12.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt12.c0)AND(vt12.c0)))&(((vt12.c0)||(vt12.c0))))) IS TRUE)  as count FROM vt12);
SELECT * FROM vt12 WHERE (((((vt12.c0)AND(vt12.c0)))&(((vt12.c0)||(vt12.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt12.c0)AND(vt12.c0)))&(((vt12.c0)||(vt12.c0))))) IS TRUE)  as count FROM vt12);
SELECT * FROM vt12 WHERE (((((vt12.c0)AND(vt12.c0)))&(((vt12.c0)||(vt12.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (((t0.c1)IS NOT(t0.c1))))) ORDER BY (+ (json_object(t0.c0, t0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c1)IS NOT(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY (+ (json_object(t0.c0, t0.c1))));
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (((t0.c1)IS NOT(t0.c1))))) ORDER BY (+ (json_object(t0.c0, t0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c1)IS NOT(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY (+ (json_object(t0.c0, t0.c1))));
SELECT ALL * FROM t0 WHERE ((- (t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((- (t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((- (t0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (load_extension(((x'') IS FALSE))) ORDER BY (((t0.c1)+(t0.c0)) IN ((((t0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((x'') IS FALSE))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((t0.c1)+(t0.c0)) IN ((((t0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c4))))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (load_extension(((x'') IS FALSE))) ORDER BY (((t0.c1)+(t0.c0)) IN ((((t0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((x'') IS FALSE))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((t0.c1)+(t0.c0)) IN ((((t0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c4))))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (load_extension(((x'') IS FALSE))) ORDER BY (((t0.c1)+(t0.c0)) IN ((((t0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c4)))));
SELECT * FROM vt0 WHERE (((((vt0.c0 IN ())))!=((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))) ORDER BY (((0.6029867077851022))>=((((vt0.c0)IS NOT(vt0.c0)))))  NULLS LAST, (((vt0.c0)>=(vt0.c0)) IN (((((((((0.7793451810046855)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) DESC, ((((vt0.c0)>(vt0.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN ())))!=((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((0.6029867077851022))>=((((vt0.c0)IS NOT(vt0.c0)))))  NULLS LAST, (((vt0.c0)>=(vt0.c0)) IN (((((((((0.7793451810046855)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) DESC, ((((vt0.c0)>(vt0.c0))) NOTNULL) DESC);
SELECT * FROM vt0 WHERE (((((vt0.c0 IN ())))!=((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))) ORDER BY (((0.6029867077851022))>=((((vt0.c0)IS NOT(vt0.c0)))))  NULLS LAST, (((vt0.c0)>=(vt0.c0)) IN (((((((((0.7793451810046855)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) DESC, ((((vt0.c0)>(vt0.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN ())))!=((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((0.6029867077851022))>=((((vt0.c0)IS NOT(vt0.c0)))))  NULLS LAST, (((vt0.c0)>=(vt0.c0)) IN (((((((((0.7793451810046855)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) DESC, ((((vt0.c0)>(vt0.c0))) NOTNULL) DESC);
SELECT * FROM vt0 WHERE (((((vt0.c0 IN ())))!=((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))) ORDER BY (((0.6029867077851022))>=((((vt0.c0)IS NOT(vt0.c0)))))  NULLS LAST, (((vt0.c0)>=(vt0.c0)) IN (((((((((0.7793451810046855)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) DESC, ((((vt0.c0)>(vt0.c0))) NOTNULL) DESC;
SELECT * FROM t0 WHERE ((((t0.c2)*(t0.c0)) IN (((t0.c1) BETWEEN (t0.c2) AND (t0.c2))))) ORDER BY (((LIKE(t0.c0, t0.c1, '-')))!=((t0.c1)))  NULLS LAST, (((t0.c2)) BETWEEN ((((((((((((((x'9490')AND(t0.c2)))AND(t0.c1)))OR(NULL)))AND(t0.c0)))AND(t0.c0)))AND(x'')))) AND ((((((t0.c2)AND(t0.c1)))OR(t0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)*(t0.c0)) IN (((t0.c1) BETWEEN (t0.c2) AND (t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY (((LIKE(t0.c0, t0.c1, '-')))<>((t0.c1)))  NULLS LAST, (((t0.c2)) BETWEEN ((((((((((((((x'9490')AND(t0.c2)))AND(t0.c1)))OR(NULL)))AND(t0.c0)))AND(t0.c0)))AND(x'')))) AND ((((((t0.c2)AND(t0.c1)))OR(t0.c2))))) ASC);
SELECT * FROM t0 WHERE ((((t0.c2)*(t0.c0)) IN (((t0.c1) BETWEEN (t0.c2) AND (t0.c2))))) ORDER BY (((LIKE(t0.c0, t0.c1, '-')))!=((t0.c1)))  NULLS LAST, (((t0.c2)) BETWEEN ((((((((((((((x'9490')AND(t0.c2)))AND(t0.c1)))OR(NULL)))AND(t0.c0)))AND(t0.c0)))AND(x'')))) AND ((((((t0.c2)AND(t0.c1)))OR(t0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)*(t0.c0)) IN (((t0.c1) BETWEEN (t0.c2) AND (t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY (((LIKE(t0.c0, t0.c1, '-')))<>((t0.c1)))  NULLS LAST, (((t0.c2)) BETWEEN ((((((((((((((x'9490')AND(t0.c2)))AND(t0.c1)))OR(NULL)))AND(t0.c0)))AND(t0.c0)))AND(x'')))) AND ((((((t0.c2)AND(t0.c1)))OR(t0.c2))))) ASC);
SELECT * FROM t0 WHERE ((((t0.c2)*(t0.c0)) IN (((t0.c1) BETWEEN (t0.c2) AND (t0.c2))))) ORDER BY (((LIKE(t0.c0, t0.c1, '-')))!=((t0.c1)))  NULLS LAST, (((t0.c2)) BETWEEN ((((((((((((((x'9490')AND(t0.c2)))AND(t0.c1)))OR(NULL)))AND(t0.c0)))AND(t0.c0)))AND(x'')))) AND ((((((t0.c2)AND(t0.c1)))OR(t0.c2))))) ASC;
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((CAST(t0.c0 AS TEXT) IN (rt0.c1 COLLATE BINARY))) ORDER BY (((t0.c2)) NOT BETWEEN ((((rt0.c0)==(t0.c0)))) AND ((rt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(t0.c0 AS TEXT) IN (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((t0.c2)) NOT BETWEEN ((((rt0.c0)==(t0.c0)))) AND ((rt0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((CAST(t0.c0 AS TEXT) IN (rt0.c1 COLLATE BINARY))) ORDER BY (((t0.c2)) NOT BETWEEN ((((rt0.c0)==(t0.c0)))) AND ((rt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(t0.c0 AS TEXT) IN (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((t0.c2)) NOT BETWEEN ((((rt0.c0)==(t0.c0)))) AND ((rt0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((CAST(t0.c0 AS TEXT) IN (rt0.c1 COLLATE BINARY))) ORDER BY (((t0.c2)) NOT BETWEEN ((((rt0.c0)==(t0.c0)))) AND ((rt0.c0))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (LIKELIHOOD(DISTINCT ((vt0.c0)>(vt0.c0)), 0.8415789971148173));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((vt0.c0)>(vt0.c0)), 0.8415789971148173)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LIKELIHOOD(DISTINCT ((vt0.c0)>(vt0.c0)), 0.8415789971148173));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((vt0.c0)>(vt0.c0)), 0.8415789971148173)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LIKELIHOOD(DISTINCT ((vt0.c0)>(vt0.c0)), 0.8415789971148173));
SELECT COUNT(*) FROM vt12, vt0, rt0 WHERE (json_array_length(((vt12.c0) NOTNULL))) ORDER BY NULL ASC, ((~ (rt0.c4)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((vt12.c0) NOTNULL))) IS TRUE)  as count FROM vt12, vt0, rt0 ORDER BY NULL ASC, ((~ (rt0.c4)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt12, vt0, rt0 WHERE (json_array_length(((vt12.c0) NOTNULL))) ORDER BY NULL ASC, ((~ (rt0.c4)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((vt12.c0) NOTNULL))) IS TRUE)  as count FROM vt12, vt0, rt0 ORDER BY NULL ASC, ((~ (rt0.c4)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt12, vt0, rt0 WHERE (json_array_length(((vt12.c0) NOTNULL))) ORDER BY NULL ASC, ((~ (rt0.c4)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt12 WHERE ((((((((NULL)OR(vt0.c0)))AND(vt12.c0))))==((((vt12.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((NULL)OR(vt0.c0)))AND(vt12.c0))))==((((vt12.c0) NOT NULL))))) IS TRUE)  as count FROM vt0, vt12);
SELECT COUNT(*) FROM vt0, vt12 WHERE ((((((((NULL)OR(vt0.c0)))AND(vt12.c0))))==((((vt12.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((NULL)OR(vt0.c0)))AND(vt12.c0))))==((((vt12.c0) NOT NULL))))) IS TRUE)  as count FROM vt0, vt12);
SELECT COUNT(*) FROM vt0, vt12 WHERE ((((((((NULL)OR(vt0.c0)))AND(vt12.c0))))==((((vt12.c0) NOT NULL)))));
SELECT * FROM vt12, t0 WHERE (((rtreenode(t0.c1, t0.c0))&(t0.c1 COLLATE RTRIM))) ORDER BY (((NULL)) BETWEEN (((((t0.c1))<((vt12.c0))))) AND ((((((t0.c0)OR(t0.c0)))OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rtreenode(t0.c1, t0.c0))&(t0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt12, t0 ORDER BY (((NULL)) BETWEEN (((((t0.c1))<((vt12.c0))))) AND ((((((t0.c0)OR(t0.c0)))OR(t0.c1))))));
SELECT * FROM vt12, t0 WHERE (((rtreenode(t0.c1, t0.c0))&(t0.c1 COLLATE RTRIM))) ORDER BY (((NULL)) BETWEEN (((((t0.c1))<((vt12.c0))))) AND ((((((t0.c0)OR(t0.c0)))OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rtreenode(t0.c1, t0.c0))&(t0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt12, t0 ORDER BY (((NULL)) BETWEEN (((((t0.c1))<((vt12.c0))))) AND ((((((t0.c0)OR(t0.c0)))OR(t0.c1))))));
SELECT * FROM vt12, t0 WHERE (((rtreenode(t0.c1, t0.c0))&(t0.c1 COLLATE RTRIM))) ORDER BY (((NULL)) BETWEEN (((((t0.c1))<((vt12.c0))))) AND ((((((t0.c0)OR(t0.c0)))OR(t0.c1)))));
SELECT ALL COUNT(*) FROM vt12 RIGHT OUTER JOIN t0 ON ((((t0.c0)AND(t0.c2)))OR(t0.c1)) COLLATE RTRIM WHERE (((t0.c0) IS TRUE) COLLATE BINARY) ORDER BY CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt12 RIGHT OUTER JOIN t0 ON ((((t0.c0)AND(t0.c2)))OR(t0.c1)) COLLATE RTRIM ORDER BY CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt12 RIGHT OUTER JOIN t0 ON ((((t0.c0)AND(t0.c2)))OR(t0.c1)) COLLATE RTRIM WHERE (((t0.c0) IS TRUE) COLLATE BINARY) ORDER BY CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt12 RIGHT OUTER JOIN t0 ON ((((t0.c0)AND(t0.c2)))OR(t0.c1)) COLLATE RTRIM ORDER BY CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt12 RIGHT OUTER JOIN t0 ON ((((t0.c0)AND(t0.c2)))OR(t0.c1)) COLLATE RTRIM WHERE (((t0.c0) IS TRUE) COLLATE BINARY) ORDER BY CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt12, rt0 WHERE (((((((rt0.c3)=(-9.92201474E8)))OR((((vt12.c0))==((rt0.c4))))))OR(SQLITE_VERSION()))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)=(-9.92201474E8)))OR((((vt12.c0))==((rt0.c4))))))OR(SQLITE_VERSION()))) IS TRUE)  as count FROM vt12, rt0 ORDER BY NULL ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt12, rt0 WHERE (((((((rt0.c3)=(-9.92201474E8)))OR((((vt12.c0))==((rt0.c4))))))OR(SQLITE_VERSION()))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)=(-9.92201474E8)))OR((((vt12.c0))==((rt0.c4))))))OR(SQLITE_VERSION()))) IS TRUE)  as count FROM vt12, rt0 ORDER BY NULL ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt12, rt0 WHERE (((((((rt0.c3)=(-9.92201474E8)))OR((((vt12.c0))==((rt0.c4))))))OR(SQLITE_VERSION()))) ORDER BY NULL ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0)))OR((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0, vt0.c0)))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0)))OR((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0, vt0.c0)))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0)))OR((vt0.c0 IN ()))));
SELECT * FROM vt0, vt12, t0, rt0 WHERE ((('v\n&lM,0?') NOT BETWEEN ((((t0.c0, t0.c1, t0.c1)) NOT BETWEEN ((rt0.c4, rt0.c4, t0.c2)) AND ((vt12.c0, t0.c0, t0.c2)))) AND (((x'')*(rt0.c3))))) ORDER BY t0.c0  NULLS FIRST, CASE ABS(DISTINCT rt0.c4)  WHEN ((((((((t0.c2)AND(t0.c2)))AND(rt0.c0)))OR(vt0.c0)))OR(t0.c0)) THEN '-451644234' END DESC;
SELECT SUM(count) FROM (SELECT (((('v\n&lM,0?') NOT BETWEEN ((((t0.c0, t0.c1, t0.c1)) NOT BETWEEN ((rt0.c4, rt0.c4, t0.c2)) AND ((vt12.c0, t0.c0, t0.c2)))) AND (((x'')*(rt0.c3))))) IS TRUE)  as count FROM vt0, vt12, t0, rt0 ORDER BY t0.c0  NULLS FIRST, CASE ABS(DISTINCT rt0.c4)  WHEN ((((((((t0.c2)AND(t0.c2)))AND(rt0.c0)))OR(vt0.c0)))OR(t0.c0)) THEN '-451644234' END DESC);
SELECT * FROM vt0, vt12, t0, rt0 WHERE ((('v\n&lM,0?') NOT BETWEEN ((((t0.c0, t0.c1, t0.c1)) NOT BETWEEN ((rt0.c4, rt0.c4, t0.c2)) AND ((vt12.c0, t0.c0, t0.c2)))) AND (((x'')*(rt0.c3))))) ORDER BY t0.c0  NULLS FIRST, CASE ABS(DISTINCT rt0.c4)  WHEN ((((((((t0.c2)AND(t0.c2)))AND(rt0.c0)))OR(vt0.c0)))OR(t0.c0)) THEN '-451644234' END DESC;
SELECT SUM(count) FROM (SELECT (((('v\n&lM,0?') NOT BETWEEN ((((t0.c0, t0.c1, t0.c1)) NOT BETWEEN ((rt0.c4, rt0.c4, t0.c2)) AND ((vt12.c0, t0.c0, t0.c2)))) AND (((x'')*(rt0.c3))))) IS TRUE)  as count FROM vt0, vt12, t0, rt0 ORDER BY t0.c0  NULLS FIRST, CASE ABS(DISTINCT rt0.c4)  WHEN ((((((((t0.c2)AND(t0.c2)))AND(rt0.c0)))OR(vt0.c0)))OR(t0.c0)) THEN '-451644234' END DESC);
SELECT * FROM vt0, vt12, t0, rt0 WHERE ((('v\n&lM,0?') NOT BETWEEN ((((t0.c0, t0.c1, t0.c1)) NOT BETWEEN ((rt0.c4, rt0.c4, t0.c2)) AND ((vt12.c0, t0.c0, t0.c2)))) AND (((x'')*(rt0.c3))))) ORDER BY t0.c0  NULLS FIRST, CASE ABS(DISTINCT rt0.c4)  WHEN ((((((((t0.c2)AND(t0.c2)))AND(rt0.c0)))OR(vt0.c0)))OR(t0.c0)) THEN '-451644234' END DESC;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2, t0.c0, t0.c1)) BETWEEN (((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))), TYPEOF(DISTINCT t0.c0), ((t0.c2)>(t0.c1)))) AND ((HEX(t0.c0), ((t0.c0) NOTNULL), ((t0.c0) BETWEEN (t0.c0) AND (t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((t0.c2, t0.c0, t0.c1)) BETWEEN (((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))), TYPEOF(DISTINCT t0.c0), ((t0.c2)>(t0.c1)))) AND ((HEX(t0.c0), ((t0.c0) NOTNULL), ((t0.c0) BETWEEN (t0.c0) AND (t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2, t0.c0, t0.c1)) BETWEEN (((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))), TYPEOF(DISTINCT t0.c0), ((t0.c2)>(t0.c1)))) AND ((HEX(t0.c0), ((t0.c0) NOTNULL), ((t0.c0) BETWEEN (t0.c0) AND (t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((t0.c2, t0.c0, t0.c1)) BETWEEN (((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))), TYPEOF(DISTINCT t0.c0), ((t0.c2)>(t0.c1)))) AND ((HEX(t0.c0), ((t0.c0) NOTNULL), ((t0.c0) BETWEEN (t0.c0) AND (t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2, t0.c0, t0.c1)) BETWEEN (((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))), TYPEOF(DISTINCT t0.c0), ((t0.c2)>(t0.c1)))) AND ((HEX(t0.c0), ((t0.c0) NOTNULL), ((t0.c0) BETWEEN (t0.c0) AND (t0.c2))))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((0.3124812053613826) NOT BETWEEN (vt0.c0) AND (0.45325303908831427)) COLLATE RTRIM WHERE (rt0.c0 COLLATE NOCASE) ORDER BY ((((rt0.c1)OR(vt0.c0)))AND(rt0.c4)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((0.3124812053613826) NOT BETWEEN (vt0.c0) AND (0.45325303908831427)) COLLATE RTRIM ORDER BY ((((rt0.c1)OR(vt0.c0)))AND(rt0.c4)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((0.3124812053613826) NOT BETWEEN (vt0.c0) AND (0.45325303908831427)) COLLATE RTRIM WHERE (rt0.c0 COLLATE NOCASE) ORDER BY ((((rt0.c1)OR(vt0.c0)))AND(rt0.c4)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((0.3124812053613826) NOT BETWEEN (vt0.c0) AND (0.45325303908831427)) COLLATE RTRIM ORDER BY ((((rt0.c1)OR(vt0.c0)))AND(rt0.c4)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((0.3124812053613826) NOT BETWEEN (vt0.c0) AND (0.45325303908831427)) COLLATE RTRIM WHERE (rt0.c0 COLLATE NOCASE) ORDER BY ((((rt0.c1)OR(vt0.c0)))AND(rt0.c4)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt12 LEFT OUTER JOIN t0 ON (((t0.c1 IN (t0.c0)))==(CAST(NULL AS INTEGER))) WHERE ((((((('0.6885948458356257'))<>((x'')))))<>((649219691))));
SELECT SUM(count) FROM (SELECT ALL (((((((('0.6885948458356257'))<>((x'')))))!=((649219691)))) IS TRUE)  as count FROM vt0, vt12 LEFT OUTER JOIN t0 ON (((t0.c1 IN (t0.c0)))=(CAST(NULL AS INTEGER))));
SELECT COUNT(*) FROM vt0, vt12 LEFT OUTER JOIN t0 ON (((t0.c1 IN (t0.c0)))==(CAST(NULL AS INTEGER))) WHERE ((((((('0.6885948458356257'))<>((x'')))))<>((649219691))));
SELECT SUM(count) FROM (SELECT ALL (((((((('0.6885948458356257'))<>((x'')))))!=((649219691)))) IS TRUE)  as count FROM vt0, vt12 LEFT OUTER JOIN t0 ON (((t0.c1 IN (t0.c0)))=(CAST(NULL AS INTEGER))));
SELECT COUNT(*) FROM vt0, vt12 LEFT OUTER JOIN t0 ON (((t0.c1 IN (t0.c0)))==(CAST(NULL AS INTEGER))) WHERE ((((((('0.6885948458356257'))<>((x'')))))<>((649219691))));
SELECT * FROM t0 WHERE (((t0.c0) BETWEEN ((x'ee87' IN ())) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN ((x'ee87' IN ())) AND (x''))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0) BETWEEN ((x'ee87' IN ())) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN ((x'ee87' IN ())) AND (x''))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0) BETWEEN ((x'ee87' IN ())) AND (x'')));
SELECT ALL COUNT(*) FROM vt12 WHERE (((((vt12.c0)) NOT BETWEEN ((vt12.c0)) AND ((vt12.c0))) IN (CAST(vt12.c0 AS TEXT)))) ORDER BY ((((vt12.c0 COLLATE BINARY)AND((vt12.c0 IN ()))))OR((~ (NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt12.c0)) NOT BETWEEN ((vt12.c0)) AND ((vt12.c0))) IN (CAST(vt12.c0 AS TEXT)))) IS TRUE)  as count FROM vt12 ORDER BY ((((vt12.c0 COLLATE BINARY)AND((vt12.c0 IN ()))))OR((~ (NULL))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt12 WHERE (((((vt12.c0)) NOT BETWEEN ((vt12.c0)) AND ((vt12.c0))) IN (CAST(vt12.c0 AS TEXT)))) ORDER BY ((((vt12.c0 COLLATE BINARY)AND((vt12.c0 IN ()))))OR((~ (NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt12.c0)) NOT BETWEEN ((vt12.c0)) AND ((vt12.c0))) IN (CAST(vt12.c0 AS TEXT)))) IS TRUE)  as count FROM vt12 ORDER BY ((((vt12.c0 COLLATE BINARY)AND((vt12.c0 IN ()))))OR((~ (NULL))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt12 WHERE (((((vt12.c0)) NOT BETWEEN ((vt12.c0)) AND ((vt12.c0))) IN (CAST(vt12.c0 AS TEXT)))) ORDER BY ((((vt12.c0 COLLATE BINARY)AND((vt12.c0 IN ()))))OR((~ (NULL))))  NULLS LAST;
SELECT ALL * FROM rt0, t0, vt12 WHERE (((((0.8568240362606196)=(rt0.c2))) NOT BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c3) AND (1412334432))) AND ('sრw('))) ORDER BY vt12.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.8568240362606196)=(rt0.c2))) NOT BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c3) AND (1412334432))) AND ('sრw('))) IS TRUE)  as count FROM rt0, t0, vt12 ORDER BY vt12.c0 DESC);
SELECT ALL * FROM rt0, t0, vt12 WHERE (((((0.8568240362606196)=(rt0.c2))) NOT BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c3) AND (1412334432))) AND ('sრw('))) ORDER BY vt12.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.8568240362606196)=(rt0.c2))) NOT BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c3) AND (1412334432))) AND ('sრw('))) IS TRUE)  as count FROM rt0, t0, vt12 ORDER BY vt12.c0 DESC);
SELECT ALL * FROM rt0, t0, vt12 WHERE (((((0.8568240362606196)=(rt0.c2))) NOT BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c3) AND (1412334432))) AND ('sრw('))) ORDER BY vt12.c0 DESC;
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((((LIKELIHOOD(vt0.c0, 0.10573548357735418))OR((((t0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))))OR(NULL)) CROSS JOIN vt0 ON ((rt0.c4)%(x'')) CROSS JOIN vt12 ON 0.5743042726677496 WHERE (CAST(rt0.c2 COLLATE NOCASE AS INTEGER)) ORDER BY json_extract(((((t0.c2)AND(t0.c0)))AND(rt0.c2)), (((rt0.c2))>((rt0.c2))), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt12.c0)), ((rt0.c3)=(rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((LIKELIHOOD(vt0.c0, 0.10573548357735418))OR((((t0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))))OR(NULL)) CROSS JOIN vt0 ON ((rt0.c4)%(x'')) CROSS JOIN vt12 ON 0.5743042726677496 ORDER BY json_extract(((((t0.c2)AND(t0.c0)))AND(rt0.c2)), (((rt0.c2))>((rt0.c2))), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt12.c0)), ((rt0.c3)==(rt0.c2))) DESC);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((((LIKELIHOOD(vt0.c0, 0.10573548357735418))OR((((t0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))))OR(NULL)) CROSS JOIN vt0 ON ((rt0.c4)%(x'')) CROSS JOIN vt12 ON 0.5743042726677496 WHERE (CAST(rt0.c2 COLLATE NOCASE AS INTEGER)) ORDER BY json_extract(((((t0.c2)AND(t0.c0)))AND(rt0.c2)), (((rt0.c2))>((rt0.c2))), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt12.c0)), ((rt0.c3)=(rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((LIKELIHOOD(vt0.c0, 0.10573548357735418))OR((((t0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))))OR(NULL)) CROSS JOIN vt0 ON ((rt0.c4)%(x'')) CROSS JOIN vt12 ON 0.5743042726677496 ORDER BY json_extract(((((t0.c2)AND(t0.c0)))AND(rt0.c2)), (((rt0.c2))>((rt0.c2))), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt12.c0)), ((rt0.c3)==(rt0.c2))) DESC);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((((LIKELIHOOD(vt0.c0, 0.10573548357735418))OR((((t0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))))OR(NULL)) CROSS JOIN vt0 ON ((rt0.c4)%(x'')) CROSS JOIN vt12 ON 0.5743042726677496 WHERE (CAST(rt0.c2 COLLATE NOCASE AS INTEGER)) ORDER BY json_extract(((((t0.c2)AND(t0.c0)))AND(rt0.c2)), (((rt0.c2))>((rt0.c2))), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt12.c0)), ((rt0.c3)=(rt0.c2))) DESC;
SELECT ALL COUNT(*) FROM vt0, t0, vt12, rt0 WHERE ((((vt12.c0 IN ())) IS TRUE)) ORDER BY (((t0.c2)) BETWEEN ((rt0.c4)) AND ((vt12.c0))) COLLATE NOCASE COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt12.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0, t0, vt12, rt0 ORDER BY (((t0.c2)) BETWEEN ((rt0.c4)) AND ((vt12.c0))) COLLATE NOCASE COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt0, t0, vt12, rt0 WHERE ((((vt12.c0 IN ())) IS TRUE)) ORDER BY (((t0.c2)) BETWEEN ((rt0.c4)) AND ((vt12.c0))) COLLATE NOCASE COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt12.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0, t0, vt12, rt0 ORDER BY (((t0.c2)) BETWEEN ((rt0.c4)) AND ((vt12.c0))) COLLATE NOCASE COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt0, t0, vt12, rt0 WHERE ((((vt12.c0 IN ())) IS TRUE)) ORDER BY (((t0.c2)) BETWEEN ((rt0.c4)) AND ((vt12.c0))) COLLATE NOCASE COLLATE NOCASE ASC;
SELECT * FROM vt0 WHERE (0.7193759734355795) ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND (((((vt0.c0))==((vt0.c0)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.7193759734355795) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND (((((vt0.c0))=((vt0.c0)))))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (0.7193759734355795) ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND (((((vt0.c0))==((vt0.c0)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.7193759734355795) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND (((((vt0.c0))=((vt0.c0)))))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (0.7193759734355795) ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND (((((vt0.c0))==((vt0.c0)))))) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE ((+ (t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ (t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ (t0.c0)) COLLATE NOCASE);
SELECT * FROM rt0, t0, vt12 WHERE ((((rt0.c4 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN ())) IS FALSE)) IS TRUE)  as count FROM rt0, t0, vt12);
SELECT * FROM rt0, t0, vt12 WHERE ((((rt0.c4 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN ())) IS FALSE)) IS TRUE)  as count FROM rt0, t0, vt12);
SELECT * FROM rt0, t0, vt12 WHERE ((((rt0.c4 IN ())) IS FALSE));
SELECT ALL COUNT(*) FROM vt12, rt0 WHERE (((((((vt12.c0) NOT BETWEEN (rt0.c2) AND (0.8226188168892725)))AND(rt0.c2)))OR(((vt12.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt12.c0) NOT BETWEEN (rt0.c2) AND (0.8226188168892725)))AND(rt0.c2)))OR(((vt12.c0) NOTNULL)))) IS TRUE)  as count FROM vt12, rt0);
SELECT ALL COUNT(*) FROM vt12, rt0 WHERE (((((((vt12.c0) NOT BETWEEN (rt0.c2) AND (0.8226188168892725)))AND(rt0.c2)))OR(((vt12.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt12.c0) NOT BETWEEN (rt0.c2) AND (0.8226188168892725)))AND(rt0.c2)))OR(((vt12.c0) NOTNULL)))) IS TRUE)  as count FROM vt12, rt0);
SELECT ALL COUNT(*) FROM vt12, rt0 WHERE (((((((vt12.c0) NOT BETWEEN (rt0.c2) AND (0.8226188168892725)))AND(rt0.c2)))OR(((vt12.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((('1e500000')OR((((rt0.c4, rt0.c4, rt0.c3))!=((NULL, rt0.c2, rt0.c4))))))AND((rt0.c4 IN (rt0.c0, rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((('1e500000')OR((((rt0.c4, rt0.c4, rt0.c3))!=((NULL, rt0.c2, rt0.c4))))))AND((rt0.c4 IN (rt0.c0, rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((('1e500000')OR((((rt0.c4, rt0.c4, rt0.c3))!=((NULL, rt0.c2, rt0.c4))))))AND((rt0.c4 IN (rt0.c0, rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((('1e500000')OR((((rt0.c4, rt0.c4, rt0.c3))!=((NULL, rt0.c2, rt0.c4))))))AND((rt0.c4 IN (rt0.c0, rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((('1e500000')OR((((rt0.c4, rt0.c4, rt0.c3))!=((NULL, rt0.c2, rt0.c4))))))AND((rt0.c4 IN (rt0.c0, rt0.c1)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON vt0.c0 INNER JOIN t0 ON 0.13141731055200512 FULL OUTER JOIN vt12 ON (('')+(((t0.c0) NOT BETWEEN (rt0.c0) AND (vt12.c0)))) WHERE ((- ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((- (vt0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON vt0.c0 INNER JOIN t0 ON 0.13141731055200512 FULL OUTER JOIN vt12 ON (('')+(((t0.c0) NOT BETWEEN (rt0.c0) AND (vt12.c0)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON vt0.c0 INNER JOIN t0 ON 0.13141731055200512 FULL OUTER JOIN vt12 ON (('')+(((t0.c0) NOT BETWEEN (rt0.c0) AND (vt12.c0)))) WHERE ((- ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((- (vt0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON vt0.c0 INNER JOIN t0 ON 0.13141731055200512 FULL OUTER JOIN vt12 ON (('')+(((t0.c0) NOT BETWEEN (rt0.c0) AND (vt12.c0)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON vt0.c0 INNER JOIN t0 ON 0.13141731055200512 FULL OUTER JOIN vt12 ON (('')+(((t0.c0) NOT BETWEEN (rt0.c0) AND (vt12.c0)))) WHERE ((- ((- (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt12 RIGHT OUTER JOIN rt0 ON (+ (TRIM(DISTINCT rt0.c0))) INNER JOIN vt0 ON HEX((rt0.c3 IN ())) RIGHT OUTER JOIN t0 ON ((rt0.c0)*(rt0.c3)) COLLATE BINARY WHERE (CASE '1637630062'  WHEN ((((vt12.c0)OR(rt0.c3)))AND(rt0.c4)) THEN t0.c0 COLLATE RTRIM ELSE CAST(rt0.c4 AS TEXT) END) ORDER BY ABS(0.4442561841688);
SELECT SUM(count) FROM (SELECT ALL ((CASE '1637630062'  WHEN ((((vt12.c0)OR(rt0.c3)))AND(rt0.c4)) THEN t0.c0 COLLATE RTRIM ELSE CAST(rt0.c4 AS TEXT) END) IS TRUE)  as count FROM vt12 RIGHT OUTER JOIN rt0 ON (+ (TRIM(DISTINCT rt0.c0))) INNER JOIN vt0 ON HEX((rt0.c3 IN ())) RIGHT OUTER JOIN t0 ON ((rt0.c0)*(rt0.c3)) COLLATE BINARY ORDER BY ABS(0.4442561841688));
SELECT ALL COUNT(*) FROM vt12 RIGHT OUTER JOIN rt0 ON (+ (TRIM(DISTINCT rt0.c0))) INNER JOIN vt0 ON HEX((rt0.c3 IN ())) RIGHT OUTER JOIN t0 ON ((rt0.c0)*(rt0.c3)) COLLATE BINARY WHERE (CASE '1637630062'  WHEN ((((vt12.c0)OR(rt0.c3)))AND(rt0.c4)) THEN t0.c0 COLLATE RTRIM ELSE CAST(rt0.c4 AS TEXT) END) ORDER BY ABS(0.4442561841688);
SELECT SUM(count) FROM (SELECT ALL ((CASE '1637630062'  WHEN ((((vt12.c0)OR(rt0.c3)))AND(rt0.c4)) THEN t0.c0 COLLATE RTRIM ELSE CAST(rt0.c4 AS TEXT) END) IS TRUE)  as count FROM vt12 RIGHT OUTER JOIN rt0 ON (+ (TRIM(DISTINCT rt0.c0))) INNER JOIN vt0 ON HEX((rt0.c3 IN ())) RIGHT OUTER JOIN t0 ON ((rt0.c0)*(rt0.c3)) COLLATE BINARY ORDER BY ABS(0.4442561841688));
SELECT ALL COUNT(*) FROM vt12 RIGHT OUTER JOIN rt0 ON (+ (TRIM(DISTINCT rt0.c0))) INNER JOIN vt0 ON HEX((rt0.c3 IN ())) RIGHT OUTER JOIN t0 ON ((rt0.c0)*(rt0.c3)) COLLATE BINARY WHERE (CASE '1637630062'  WHEN ((((vt12.c0)OR(rt0.c3)))AND(rt0.c4)) THEN t0.c0 COLLATE RTRIM ELSE CAST(rt0.c4 AS TEXT) END) ORDER BY ABS(0.4442561841688);
SELECT * FROM vt12, rt0, vt0, t0 WHERE (json_insert(CASE NULL  WHEN rt0.c4 THEN t0.c2 END, ((rt0.c1)<<(rt0.c1)), rt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((json_insert(CASE NULL  WHEN rt0.c4 THEN t0.c2 END, ((rt0.c1)<<(rt0.c1)), rt0.c2 COLLATE BINARY)) IS TRUE)  as count FROM vt12, rt0, vt0, t0);
SELECT * FROM vt12, rt0, vt0, t0 WHERE (json_insert(CASE NULL  WHEN rt0.c4 THEN t0.c2 END, ((rt0.c1)<<(rt0.c1)), rt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((json_insert(CASE NULL  WHEN rt0.c4 THEN t0.c2 END, ((rt0.c1)<<(rt0.c1)), rt0.c2 COLLATE BINARY)) IS TRUE)  as count FROM vt12, rt0, vt0, t0);
SELECT * FROM vt12, rt0, vt0, t0 WHERE (json_insert(CASE NULL  WHEN rt0.c4 THEN t0.c2 END, ((rt0.c1)<<(rt0.c1)), rt0.c2 COLLATE BINARY));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c4) ORDER BY ((CAST(rt0.c4 AS BLOB)) NOT BETWEEN (((((rt0.c1)OR('-357598121')))OR(rt0.c0))) AND (rt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c4 AS BLOB)) NOT BETWEEN (((((rt0.c1)OR('-357598121')))OR(rt0.c0))) AND (rt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c4) ORDER BY ((CAST(rt0.c4 AS BLOB)) NOT BETWEEN (((((rt0.c1)OR('-357598121')))OR(rt0.c0))) AND (rt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c4 AS BLOB)) NOT BETWEEN (((((rt0.c1)OR('-357598121')))OR(rt0.c0))) AND (rt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c4) ORDER BY ((CAST(rt0.c4 AS BLOB)) NOT BETWEEN (((((rt0.c1)OR('-357598121')))OR(rt0.c0))) AND (rt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT ALL * FROM vt12, t0 WHERE ((((~ (t0.c2)))<<((- (t0.c0))))) ORDER BY ((((((((((((t0.c1)AND(t0.c0)))AND(0.13448759706575164)))AND('c좦6\r')))OR(((t0.c0)IS(t0.c1)))))OR((t0.c1 IN (t0.c0)))))AND(x'3c2a')) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c2)))<<((- (t0.c0))))) IS TRUE)  as count FROM vt12, t0 ORDER BY ((((((((((((t0.c1)AND(t0.c0)))AND(0.13448759706575164)))AND('c좦6\r')))OR(((t0.c0)IS(t0.c1)))))OR((t0.c1 IN (t0.c0)))))AND(x'3c2a')) DESC);
SELECT ALL * FROM vt12, t0 WHERE ((((~ (t0.c2)))<<((- (t0.c0))))) ORDER BY ((((((((((((t0.c1)AND(t0.c0)))AND(0.13448759706575164)))AND('c좦6\r')))OR(((t0.c0)IS(t0.c1)))))OR((t0.c1 IN (t0.c0)))))AND(x'3c2a')) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c2)))<<((- (t0.c0))))) IS TRUE)  as count FROM vt12, t0 ORDER BY ((((((((((((t0.c1)AND(t0.c0)))AND(0.13448759706575164)))AND('c좦6\r')))OR(((t0.c0)IS(t0.c1)))))OR((t0.c1 IN (t0.c0)))))AND(x'3c2a')) DESC);
SELECT ALL * FROM vt12, t0 WHERE ((((~ (t0.c2)))<<((- (t0.c0))))) ORDER BY ((((((((((((t0.c1)AND(t0.c0)))AND(0.13448759706575164)))AND('c좦6\r')))OR(((t0.c0)IS(t0.c1)))))OR((t0.c1 IN (t0.c0)))))AND(x'3c2a')) DESC;
SELECT ALL COUNT(*) FROM vt12, rt0 WHERE ((((rt0.c4) IS FALSE) IN ((((rt0.c2, rt0.c0, vt12.c0)) NOT BETWEEN ((vt12.c0, rt0.c4, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c2))), (- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4) IS FALSE) IN ((((rt0.c2, rt0.c0, vt12.c0)) NOT BETWEEN ((vt12.c0, rt0.c4, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c2))), (- (rt0.c0))))) IS TRUE)  as count FROM vt12, rt0);
SELECT ALL COUNT(*) FROM vt12, rt0 WHERE ((((rt0.c4) IS FALSE) IN ((((rt0.c2, rt0.c0, vt12.c0)) NOT BETWEEN ((vt12.c0, rt0.c4, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c2))), (- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4) IS FALSE) IN ((((rt0.c2, rt0.c0, vt12.c0)) NOT BETWEEN ((vt12.c0, rt0.c4, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c2))), (- (rt0.c0))))) IS TRUE)  as count FROM vt12, rt0);
SELECT ALL COUNT(*) FROM vt12, rt0 WHERE ((((rt0.c4) IS FALSE) IN ((((rt0.c2, rt0.c0, vt12.c0)) NOT BETWEEN ((vt12.c0, rt0.c4, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c2))), (- (rt0.c0)))));
SELECT * FROM vt12, t0 INNER JOIN rt0 ON (((NOT (t0.c1))) BETWEEN (x'') AND (((((rt0.c3)AND(rt0.c2)))AND(t0.c1)))) CROSS JOIN vt0 ON (+ ((t0.c1 IN ()))) WHERE ((((~ (vt12.c0)))LIKE(CASE WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN t0.c2 WHEN t0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt12.c0)))LIKE(CASE WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN t0.c2 WHEN t0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt12, t0 INNER JOIN rt0 ON (((NOT (t0.c1))) BETWEEN (x'') AND (((((rt0.c3)AND(rt0.c2)))AND(t0.c1)))) CROSS JOIN vt0 ON (+ ((t0.c1 IN ()))));
SELECT * FROM vt12, t0 INNER JOIN rt0 ON (((NOT (t0.c1))) BETWEEN (x'') AND (((((rt0.c3)AND(rt0.c2)))AND(t0.c1)))) CROSS JOIN vt0 ON (+ ((t0.c1 IN ()))) WHERE ((((~ (vt12.c0)))LIKE(CASE WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN t0.c2 WHEN t0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt12.c0)))LIKE(CASE WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN t0.c2 WHEN t0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt12, t0 INNER JOIN rt0 ON (((NOT (t0.c1))) BETWEEN (x'') AND (((((rt0.c3)AND(rt0.c2)))AND(t0.c1)))) CROSS JOIN vt0 ON (+ ((t0.c1 IN ()))));
SELECT * FROM vt12, t0 INNER JOIN rt0 ON (((NOT (t0.c1))) BETWEEN (x'') AND (((((rt0.c3)AND(rt0.c2)))AND(t0.c1)))) CROSS JOIN vt0 ON (+ ((t0.c1 IN ()))) WHERE ((((~ (vt12.c0)))LIKE(CASE WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN t0.c2 WHEN t0.c0 THEN vt0.c0 END)));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (- ((('-1791053299')IS(rt0.c1)))) WHERE ((((0.7818156366361596 IN ()))AND(CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((((rt0.c3)=(rt0.c3))) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c4 END) AND ((NOT (rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.7818156366361596 IN ()))AND(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (- ((('-1791053299')IS(rt0.c1)))) ORDER BY ((((rt0.c3)=(rt0.c3))) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c4 END) AND ((NOT (rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (- ((('-1791053299')IS(rt0.c1)))) WHERE ((((0.7818156366361596 IN ()))AND(CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((((rt0.c3)=(rt0.c3))) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c4 END) AND ((NOT (rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.7818156366361596 IN ()))AND(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (- ((('-1791053299')IS(rt0.c1)))) ORDER BY ((((rt0.c3)=(rt0.c3))) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c4 END) AND ((NOT (rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (- ((('-1791053299')IS(rt0.c1)))) WHERE ((((0.7818156366361596 IN ()))AND(CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((((rt0.c3)=(rt0.c3))) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c4 END) AND ((NOT (rt0.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((x'')IS NOT(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')IS NOT(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((x'')IS NOT(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')IS NOT(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((x'')IS NOT(vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((0.5482667171220849 IN (vt0.c0, vt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((0.5482667171220849 IN (vt0.c0, vt0.c0))) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((0.5482667171220849 IN (vt0.c0, vt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((0.5482667171220849 IN (vt0.c0, vt0.c0))) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((0.5482667171220849 IN (vt0.c0, vt0.c0))) NOT NULL);
SELECT COUNT(*) FROM t0, vt0, rt0, vt12 WHERE (NULL) ORDER BY ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0, rt0, vt12 ORDER BY ''  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt0, vt12 WHERE (NULL) ORDER BY ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0, rt0, vt12 ORDER BY ''  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt0, vt12 WHERE (NULL) ORDER BY ''  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt12 WHERE ((((((((((+ (rt0.c2)))OR(((rt0.c1)&(rt0.c2)))))OR(rt0.c0)))OR((- (rt0.c1)))))OR(CAST(NULL AS INTEGER)))) ORDER BY ((((vt12.c0)|(rt0.c3)))AND(x''));
SELECT SUM(count) FROM (SELECT (((((((((((+ (rt0.c2)))OR(((rt0.c1)&(rt0.c2)))))OR(rt0.c0)))OR((- (rt0.c1)))))OR(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM rt0, vt12 ORDER BY ((((vt12.c0)|(rt0.c3)))AND(x'')));
SELECT ALL COUNT(*) FROM rt0, vt12 WHERE ((((((((((+ (rt0.c2)))OR(((rt0.c1)&(rt0.c2)))))OR(rt0.c0)))OR((- (rt0.c1)))))OR(CAST(NULL AS INTEGER)))) ORDER BY ((((vt12.c0)|(rt0.c3)))AND(x''));
SELECT SUM(count) FROM (SELECT (((((((((((+ (rt0.c2)))OR(((rt0.c1)&(rt0.c2)))))OR(rt0.c0)))OR((- (rt0.c1)))))OR(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM rt0, vt12 ORDER BY ((((vt12.c0)|(rt0.c3)))AND(x'')));
SELECT ALL COUNT(*) FROM rt0, vt12 WHERE ((((((((((+ (rt0.c2)))OR(((rt0.c1)&(rt0.c2)))))OR(rt0.c0)))OR((- (rt0.c1)))))OR(CAST(NULL AS INTEGER)))) ORDER BY ((((vt12.c0)|(rt0.c3)))AND(x''));
SELECT * FROM rt0, vt12 WHERE (CAST(SQLITE_VERSION() AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(SQLITE_VERSION() AS TEXT)) IS TRUE)  as count FROM rt0, vt12);
SELECT * FROM rt0, vt12 WHERE (CAST(SQLITE_VERSION() AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(SQLITE_VERSION() AS TEXT)) IS TRUE)  as count FROM rt0, vt12);
SELECT * FROM rt0, vt12 WHERE (CAST(SQLITE_VERSION() AS TEXT));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(json_array_length(t0.c1, t0.c1) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_array_length(t0.c1, t0.c1) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(json_array_length(t0.c1, t0.c1) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_array_length(t0.c1, t0.c1) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0, vt12, vt0 WHERE ((((((t0.c2, '', t0.c1))==((vt12.c0, t0.c2, t0.c0))))==(CAST(vt0.c0 AS BLOB)))) ORDER BY ((((vt12.c0) BETWEEN (vt12.c0) AND (t0.c2)))|(((vt12.c0)<>(t0.c2)))) DESC, ((((((vt0.c0)LIKE(t0.c1)))AND(((((t0.c1)OR(vt12.c0)))OR(t0.c0)))))AND(t0.c2)) ASC  NULLS FIRST, (((vt12.c0)) NOT BETWEEN ((((((((((vt12.c0)OR(t0.c0)))AND(t0.c1)))OR(t0.c2)))OR(vt12.c0)))) AND ((((((t0.c0)OR(t0.c0)))AND(x''))))) ASC  NULLS LAST, ((((t0.c2) BETWEEN (vt0.c0) AND (t0.c1))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((((t0.c1)AND(t0.c1)))AND(t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2, '', t0.c1))=((vt12.c0, t0.c2, t0.c0))))==(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM t0, vt12, vt0 NOT INDEXED ORDER BY ((((vt12.c0) BETWEEN (vt12.c0) AND (t0.c2)))|(((vt12.c0)<>(t0.c2)))) DESC, ((((((vt0.c0)LIKE(t0.c1)))AND(((((t0.c1)OR(vt12.c0)))OR(t0.c0)))))AND(t0.c2)) ASC  NULLS FIRST, (((vt12.c0)) NOT BETWEEN ((((((((((vt12.c0)OR(t0.c0)))AND(t0.c1)))OR(t0.c2)))OR(vt12.c0)))) AND ((((((t0.c0)OR(t0.c0)))AND(x''))))) ASC  NULLS LAST, ((((t0.c2) BETWEEN (vt0.c0) AND (t0.c1))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((((t0.c1)AND(t0.c1)))AND(t0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt12, vt0 WHERE ((((((t0.c2, '', t0.c1))==((vt12.c0, t0.c2, t0.c0))))==(CAST(vt0.c0 AS BLOB)))) ORDER BY ((((vt12.c0) BETWEEN (vt12.c0) AND (t0.c2)))|(((vt12.c0)<>(t0.c2)))) DESC, ((((((vt0.c0)LIKE(t0.c1)))AND(((((t0.c1)OR(vt12.c0)))OR(t0.c0)))))AND(t0.c2)) ASC  NULLS FIRST, (((vt12.c0)) NOT BETWEEN ((((((((((vt12.c0)OR(t0.c0)))AND(t0.c1)))OR(t0.c2)))OR(vt12.c0)))) AND ((((((t0.c0)OR(t0.c0)))AND(x''))))) ASC  NULLS LAST, ((((t0.c2) BETWEEN (vt0.c0) AND (t0.c1))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((((t0.c1)AND(t0.c1)))AND(t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2, '', t0.c1))=((vt12.c0, t0.c2, t0.c0))))==(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM t0, vt12, vt0 NOT INDEXED ORDER BY ((((vt12.c0) BETWEEN (vt12.c0) AND (t0.c2)))|(((vt12.c0)<>(t0.c2)))) DESC, ((((((vt0.c0)LIKE(t0.c1)))AND(((((t0.c1)OR(vt12.c0)))OR(t0.c0)))))AND(t0.c2)) ASC  NULLS FIRST, (((vt12.c0)) NOT BETWEEN ((((((((((vt12.c0)OR(t0.c0)))AND(t0.c1)))OR(t0.c2)))OR(vt12.c0)))) AND ((((((t0.c0)OR(t0.c0)))AND(x''))))) ASC  NULLS LAST, ((((t0.c2) BETWEEN (vt0.c0) AND (t0.c1))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((((t0.c1)AND(t0.c1)))AND(t0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt12, vt0 WHERE ((((((t0.c2, '', t0.c1))==((vt12.c0, t0.c2, t0.c0))))==(CAST(vt0.c0 AS BLOB)))) ORDER BY ((((vt12.c0) BETWEEN (vt12.c0) AND (t0.c2)))|(((vt12.c0)<>(t0.c2)))) DESC, ((((((vt0.c0)LIKE(t0.c1)))AND(((((t0.c1)OR(vt12.c0)))OR(t0.c0)))))AND(t0.c2)) ASC  NULLS FIRST, (((vt12.c0)) NOT BETWEEN ((((((((((vt12.c0)OR(t0.c0)))AND(t0.c1)))OR(t0.c2)))OR(vt12.c0)))) AND ((((((t0.c0)OR(t0.c0)))AND(x''))))) ASC  NULLS LAST, ((((t0.c2) BETWEEN (vt0.c0) AND (t0.c1))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((((t0.c1)AND(t0.c1)))AND(t0.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt12, t0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c4 AS TEXT)) NOTNULL) WHERE (((((((vt12.c0, rt0.c4, vt12.c0)) NOT BETWEEN ((rt0.c0, t0.c1, t0.c2)) AND ((t0.c0, t0.c0, rt0.c2))), (+ (rt0.c0)), ((NULL) BETWEEN (t0.c1) AND (-1825080940))))<>(((- (rt0.c3)), t0.c0, ((t0.c0)LIKE(t0.c1)))))) ORDER BY rt0.c2, CAST((((rt0.c4)) BETWEEN (('')) AND ((rt0.c2))) AS BLOB) ASC, (((((t0.c0)<(vt12.c0))))<=(((((t0.c2))>((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((vt12.c0, rt0.c4, vt12.c0)) NOT BETWEEN ((rt0.c0, t0.c1, t0.c2)) AND ((t0.c0, t0.c0, rt0.c2))), (+ (rt0.c0)), ((NULL) BETWEEN (t0.c1) AND (-1825080940))))<>(((- (rt0.c3)), t0.c0, ((t0.c0)LIKE(t0.c1)))))) IS TRUE)  as count FROM vt12, t0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c4 AS TEXT)) NOTNULL) ORDER BY rt0.c2, CAST((((rt0.c4)) BETWEEN (('')) AND ((rt0.c2))) AS BLOB) ASC, (((((t0.c0)<(vt12.c0))))<=(((((t0.c2))>((rt0.c0)))))));
SELECT ALL COUNT(*) FROM vt12, t0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c4 AS TEXT)) NOTNULL) WHERE (((((((vt12.c0, rt0.c4, vt12.c0)) NOT BETWEEN ((rt0.c0, t0.c1, t0.c2)) AND ((t0.c0, t0.c0, rt0.c2))), (+ (rt0.c0)), ((NULL) BETWEEN (t0.c1) AND (-1825080940))))<>(((- (rt0.c3)), t0.c0, ((t0.c0)LIKE(t0.c1)))))) ORDER BY rt0.c2, CAST((((rt0.c4)) BETWEEN (('')) AND ((rt0.c2))) AS BLOB) ASC, (((((t0.c0)<(vt12.c0))))<=(((((t0.c2))>((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((vt12.c0, rt0.c4, vt12.c0)) NOT BETWEEN ((rt0.c0, t0.c1, t0.c2)) AND ((t0.c0, t0.c0, rt0.c2))), (+ (rt0.c0)), ((NULL) BETWEEN (t0.c1) AND (-1825080940))))<>(((- (rt0.c3)), t0.c0, ((t0.c0)LIKE(t0.c1)))))) IS TRUE)  as count FROM vt12, t0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c4 AS TEXT)) NOTNULL) ORDER BY rt0.c2, CAST((((rt0.c4)) BETWEEN (('')) AND ((rt0.c2))) AS BLOB) ASC, (((((t0.c0)<(vt12.c0))))<=(((((t0.c2))>((rt0.c0)))))));
SELECT ALL COUNT(*) FROM vt12, t0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c4 AS TEXT)) NOTNULL) WHERE (((((((vt12.c0, rt0.c4, vt12.c0)) NOT BETWEEN ((rt0.c0, t0.c1, t0.c2)) AND ((t0.c0, t0.c0, rt0.c2))), (+ (rt0.c0)), ((NULL) BETWEEN (t0.c1) AND (-1825080940))))<>(((- (rt0.c3)), t0.c0, ((t0.c0)LIKE(t0.c1)))))) ORDER BY rt0.c2, CAST((((rt0.c4)) BETWEEN (('')) AND ((rt0.c2))) AS BLOB) ASC, (((((t0.c0)<(vt12.c0))))<=(((((t0.c2))>((rt0.c0))))));
SELECT ALL * FROM t0, rt0, vt0, vt12 WHERE ((('-298325521') NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((('-298325521') NOTNULL)) IS TRUE)  as count FROM t0, rt0, vt0, vt12);
SELECT ALL * FROM t0, rt0, vt0, vt12 WHERE ((('-298325521') NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((('-298325521') NOTNULL)) IS TRUE)  as count FROM t0, rt0, vt0, vt12);
SELECT ALL * FROM t0, rt0, vt0, vt12 WHERE ((('-298325521') NOTNULL));
SELECT * FROM t0, vt12, rt0, vt0 WHERE (((((((((((rt0.c4)AND(rt0.c0)))AND(x'')))AND(rt0.c2)))AND(vt12.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c4)AND(rt0.c0)))AND(x'')))AND(rt0.c2)))AND(vt12.c0))) NOTNULL)) IS TRUE)  as count FROM t0, vt12, rt0, vt0);
SELECT * FROM t0, vt12, rt0, vt0 WHERE (((((((((((rt0.c4)AND(rt0.c0)))AND(x'')))AND(rt0.c2)))AND(vt12.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c4)AND(rt0.c0)))AND(x'')))AND(rt0.c2)))AND(vt12.c0))) NOTNULL)) IS TRUE)  as count FROM t0, vt12, rt0, vt0);
SELECT * FROM t0, vt12, rt0, vt0 WHERE (((((((((((rt0.c4)AND(rt0.c0)))AND(x'')))AND(rt0.c2)))AND(vt12.c0))) NOTNULL));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2)) BETWEEN ((NULL)) AND (((+ (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((NULL)) AND (((+ (rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2)) BETWEEN ((NULL)) AND (((+ (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((NULL)) AND (((+ (rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2)) BETWEEN ((NULL)) AND (((+ (rt0.c2))))));
SELECT ALL * FROM vt0 INNER JOIN t0 ON (+ (CASE WHEN t0.c0 THEN NULL END)) WHERE (t0.c1) ORDER BY ((t0.c2)<=(CASE WHEN t0.c1 THEN t0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (+ (CASE WHEN t0.c0 THEN NULL END)) ORDER BY ((t0.c2)<=(CASE WHEN t0.c1 THEN t0.c1 END)));
SELECT ALL * FROM vt0 INNER JOIN t0 ON (+ (CASE WHEN t0.c0 THEN NULL END)) WHERE (t0.c1) ORDER BY ((t0.c2)<=(CASE WHEN t0.c1 THEN t0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (+ (CASE WHEN t0.c0 THEN NULL END)) ORDER BY ((t0.c2)<=(CASE WHEN t0.c1 THEN t0.c1 END)));
SELECT ALL * FROM vt0 INNER JOIN t0 ON (+ (CASE WHEN t0.c0 THEN NULL END)) WHERE (t0.c1) ORDER BY ((t0.c2)<=(CASE WHEN t0.c1 THEN t0.c1 END));
SELECT * FROM vt0, rt0 WHERE ('PH' COLLATE BINARY) ORDER BY HEX((rt0.c4 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ALL (('PH' COLLATE BINARY) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 ORDER BY HEX((rt0.c4 IN ())) DESC);
SELECT * FROM vt0, rt0 WHERE ('PH' COLLATE BINARY) ORDER BY HEX((rt0.c4 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ALL (('PH' COLLATE BINARY) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 ORDER BY HEX((rt0.c4 IN ())) DESC);
SELECT * FROM vt0, rt0 WHERE ('PH' COLLATE BINARY) ORDER BY HEX((rt0.c4 IN ())) DESC;
SELECT COUNT(*) FROM t0, vt12, rt0, vt0 WHERE ((((((vt12.c0) NOT NULL)))>=((((rt0.c2)+(NULL)))))) ORDER BY ABS(CASE WHEN t0.c2 THEN vt0.c0 ELSE rt0.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt12.c0) NOT NULL)))>=((((rt0.c2)+(NULL)))))) IS TRUE)  as count FROM t0, vt12, rt0, vt0 ORDER BY ABS(CASE WHEN t0.c2 THEN vt0.c0 ELSE rt0.c0 END)  NULLS LAST);
SELECT COUNT(*) FROM t0, vt12, rt0, vt0 WHERE ((((((vt12.c0) NOT NULL)))>=((((rt0.c2)+(NULL)))))) ORDER BY ABS(CASE WHEN t0.c2 THEN vt0.c0 ELSE rt0.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt12.c0) NOT NULL)))>=((((rt0.c2)+(NULL)))))) IS TRUE)  as count FROM t0, vt12, rt0, vt0 ORDER BY ABS(CASE WHEN t0.c2 THEN vt0.c0 ELSE rt0.c0 END)  NULLS LAST);
SELECT COUNT(*) FROM t0, vt12, rt0, vt0 WHERE ((((((vt12.c0) NOT NULL)))>=((((rt0.c2)+(NULL)))))) ORDER BY ABS(CASE WHEN t0.c2 THEN vt0.c0 ELSE rt0.c0 END)  NULLS LAST;
SELECT ALL * FROM vt12, t0, rt0, vt0 WHERE (COALESCE(((rt0.c3) ISNULL), ((((vt0.c0)AND(t0.c0)))AND(rt0.c1)), ((rt0.c4)>=(rt0.c1)), (NOT ('1412334432')))) ORDER BY CAST(((t0.c0)IS(t0.c0)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((rt0.c3) ISNULL), ((((vt0.c0)AND(t0.c0)))AND(rt0.c1)), ((rt0.c4)>=(rt0.c1)), (NOT ('1412334432')))) IS TRUE)  as count FROM vt12, t0, rt0, vt0 ORDER BY CAST(((t0.c0)IS(t0.c0)) AS TEXT) ASC  NULLS FIRST);
SELECT ALL * FROM vt12, t0, rt0, vt0 WHERE (COALESCE(((rt0.c3) ISNULL), ((((vt0.c0)AND(t0.c0)))AND(rt0.c1)), ((rt0.c4)>=(rt0.c1)), (NOT ('1412334432')))) ORDER BY CAST(((t0.c0)IS(t0.c0)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((rt0.c3) ISNULL), ((((vt0.c0)AND(t0.c0)))AND(rt0.c1)), ((rt0.c4)>=(rt0.c1)), (NOT ('1412334432')))) IS TRUE)  as count FROM vt12, t0, rt0, vt0 ORDER BY CAST(((t0.c0)IS(t0.c0)) AS TEXT) ASC  NULLS FIRST);
SELECT ALL * FROM vt12, t0, rt0, vt0 WHERE (COALESCE(((rt0.c3) ISNULL), ((((vt0.c0)AND(t0.c0)))AND(rt0.c1)), ((rt0.c4)>=(rt0.c1)), (NOT ('1412334432')))) ORDER BY CAST(((t0.c0)IS(t0.c0)) AS TEXT) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c0, vt0.c0, t0.c2, t0.c1, t0.c0)) BETWEEN ((LIKELIHOOD(DISTINCT t0.c1, 0.709480249083225), vt0.c0, (t0.c0 IN (t0.c1)), (((vt0.c0, t0.c1, vt0.c0)) NOT BETWEEN ((t0.c0, t0.c1, '-850768523')) AND ((vt0.c0, t0.c0, vt0.c0))), IFNULL(DISTINCT t0.c1, t0.c0))) AND ((((t0.c0) IS TRUE), ((((((((t0.c1)AND(t0.c1)))AND(x'')))AND(t0.c1)))AND(t0.c0)), CAST(vt0.c0 AS BLOB), ((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)), CASE t0.c2  WHEN t0.c0 THEN vt0.c0 ELSE t0.c1 END))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, vt0.c0, t0.c2, t0.c1, t0.c0)) BETWEEN ((LIKELIHOOD(DISTINCT t0.c1, 0.709480249083225), vt0.c0, (t0.c0 IN (t0.c1)), (((vt0.c0, t0.c1, vt0.c0)) NOT BETWEEN ((t0.c0, t0.c1, '-850768523')) AND ((vt0.c0, t0.c0, vt0.c0))), IFNULL(DISTINCT t0.c1, t0.c0))) AND ((((t0.c0) IS TRUE), ((((((((t0.c1)AND(t0.c1)))AND(x'')))AND(t0.c1)))AND(t0.c0)), CAST(vt0.c0 AS BLOB), ((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)), CASE t0.c2  WHEN t0.c0 THEN vt0.c0 ELSE t0.c1 END)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c0, vt0.c0, t0.c2, t0.c1, t0.c0)) BETWEEN ((LIKELIHOOD(DISTINCT t0.c1, 0.709480249083225), vt0.c0, (t0.c0 IN (t0.c1)), (((vt0.c0, t0.c1, vt0.c0)) NOT BETWEEN ((t0.c0, t0.c1, '-850768523')) AND ((vt0.c0, t0.c0, vt0.c0))), IFNULL(DISTINCT t0.c1, t0.c0))) AND ((((t0.c0) IS TRUE), ((((((((t0.c1)AND(t0.c1)))AND(x'')))AND(t0.c1)))AND(t0.c0)), CAST(vt0.c0 AS BLOB), ((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)), CASE t0.c2  WHEN t0.c0 THEN vt0.c0 ELSE t0.c1 END))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, vt0.c0, t0.c2, t0.c1, t0.c0)) BETWEEN ((LIKELIHOOD(DISTINCT t0.c1, 0.709480249083225), vt0.c0, (t0.c0 IN (t0.c1)), (((vt0.c0, t0.c1, vt0.c0)) NOT BETWEEN ((t0.c0, t0.c1, '-850768523')) AND ((vt0.c0, t0.c0, vt0.c0))), IFNULL(DISTINCT t0.c1, t0.c0))) AND ((((t0.c0) IS TRUE), ((((((((t0.c1)AND(t0.c1)))AND(x'')))AND(t0.c1)))AND(t0.c0)), CAST(vt0.c0 AS BLOB), ((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)), CASE t0.c2  WHEN t0.c0 THEN vt0.c0 ELSE t0.c1 END)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c0, vt0.c0, t0.c2, t0.c1, t0.c0)) BETWEEN ((LIKELIHOOD(DISTINCT t0.c1, 0.709480249083225), vt0.c0, (t0.c0 IN (t0.c1)), (((vt0.c0, t0.c1, vt0.c0)) NOT BETWEEN ((t0.c0, t0.c1, '-850768523')) AND ((vt0.c0, t0.c0, vt0.c0))), IFNULL(DISTINCT t0.c1, t0.c0))) AND ((((t0.c0) IS TRUE), ((((((((t0.c1)AND(t0.c1)))AND(x'')))AND(t0.c1)))AND(t0.c0)), CAST(vt0.c0 AS BLOB), ((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)), CASE t0.c2  WHEN t0.c0 THEN vt0.c0 ELSE t0.c1 END))));
SELECT ALL COUNT(*) FROM vt0, vt12 INNER JOIN rt0 ON (((((NULL IN ()))OR('D㑬')))OR(((NULL) BETWEEN (rt0.c4) AND (rt0.c1)))) INNER JOIN t0 ON (((NOT (rt0.c1)))||(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt12 INNER JOIN rt0 ON (((((NULL IN ()))OR('D㑬')))OR(((NULL) BETWEEN (rt0.c4) AND (rt0.c1)))) INNER JOIN t0 ON (((NOT (rt0.c1)))||(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0, vt12 INNER JOIN rt0 ON (((((NULL IN ()))OR('D㑬')))OR(((NULL) BETWEEN (rt0.c4) AND (rt0.c1)))) INNER JOIN t0 ON (((NOT (rt0.c1)))||(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt12 INNER JOIN rt0 ON (((((NULL IN ()))OR('D㑬')))OR(((NULL) BETWEEN (rt0.c4) AND (rt0.c1)))) INNER JOIN t0 ON (((NOT (rt0.c1)))||(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0, vt12 INNER JOIN rt0 ON (((((NULL IN ()))OR('D㑬')))OR(((NULL) BETWEEN (rt0.c4) AND (rt0.c1)))) INNER JOIN t0 ON (((NOT (rt0.c1)))||(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3)))) WHERE (NULL);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((CASE WHEN t0.c0 THEN 0.08748698815418932 WHEN rt0.c2 THEN t0.c2 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END)GLOB((NOT (rt0.c0)))) WHERE (rt0.c3) ORDER BY (('!B') NOT BETWEEN ('eo') AND ((- (t0.c1)))) ASC  NULLS LAST, t0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((CASE WHEN t0.c0 THEN 0.08748698815418932 WHEN rt0.c2 THEN t0.c2 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END)GLOB((NOT (rt0.c0)))) ORDER BY (('!B') NOT BETWEEN ('eo') AND ((- (t0.c1)))) ASC  NULLS LAST, t0.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((CASE WHEN t0.c0 THEN 0.08748698815418932 WHEN rt0.c2 THEN t0.c2 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END)GLOB((NOT (rt0.c0)))) WHERE (rt0.c3) ORDER BY (('!B') NOT BETWEEN ('eo') AND ((- (t0.c1)))) ASC  NULLS LAST, t0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((CASE WHEN t0.c0 THEN 0.08748698815418932 WHEN rt0.c2 THEN t0.c2 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END)GLOB((NOT (rt0.c0)))) ORDER BY (('!B') NOT BETWEEN ('eo') AND ((- (t0.c1)))) ASC  NULLS LAST, t0.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((CASE WHEN t0.c0 THEN 0.08748698815418932 WHEN rt0.c2 THEN t0.c2 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END)GLOB((NOT (rt0.c0)))) WHERE (rt0.c3) ORDER BY (('!B') NOT BETWEEN ('eo') AND ((- (t0.c1)))) ASC  NULLS LAST, t0.c1 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((((((rt0.c4)) BETWEEN ((t0.c2)) AND ((rt0.c0))))&(((((NULL)OR(rt0.c3)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c4)) BETWEEN ((t0.c2)) AND ((rt0.c0))))&(((((NULL)OR(rt0.c3)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((((((rt0.c4)) BETWEEN ((t0.c2)) AND ((rt0.c0))))&(((((NULL)OR(rt0.c3)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c4)) BETWEEN ((t0.c2)) AND ((rt0.c0))))&(((((NULL)OR(rt0.c3)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((((((rt0.c4)) BETWEEN ((t0.c2)) AND ((rt0.c0))))&(((((NULL)OR(rt0.c3)))OR(rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)!=(vt0.c0)))) AND (((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))))), CASE (((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, x'3bdb', '-1357249774')))  WHEN CAST(vt0.c0 AS TEXT) THEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, 0.7285326483462374))) ELSE (NOT (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)!=(vt0.c0)))) AND (((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))))), CASE (((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, x'3bdb', '-1357249774')))  WHEN CAST(vt0.c0 AS TEXT) THEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, 0.7285326483462374))) ELSE (NOT (vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)!=(vt0.c0)))) AND (((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))))), CASE (((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, x'3bdb', '-1357249774')))  WHEN CAST(vt0.c0 AS TEXT) THEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, 0.7285326483462374))) ELSE (NOT (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)!=(vt0.c0)))) AND (((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))))), CASE (((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, x'3bdb', '-1357249774')))  WHEN CAST(vt0.c0 AS TEXT) THEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, 0.7285326483462374))) ELSE (NOT (vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)!=(vt0.c0)))) AND (((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))))), CASE (((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, x'3bdb', '-1357249774')))  WHEN CAST(vt0.c0 AS TEXT) THEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, 0.7285326483462374))) ELSE (NOT (vt0.c0)) END;
SELECT ALL COUNT(*) FROM vt0, t0, vt12 WHERE (((t0.c2)=(t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)==(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, vt12);
SELECT ALL COUNT(*) FROM vt0, t0, vt12 WHERE (((t0.c2)=(t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)==(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, vt12);
SELECT ALL COUNT(*) FROM vt0, t0, vt12 WHERE (((t0.c2)=(t0.c0)) COLLATE RTRIM);
SELECT * FROM rt0, vt0 WHERE (NULLIF(DISTINCT ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3)), (NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3)), (NOT (rt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (NULLIF(DISTINCT ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3)), (NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3)), (NOT (rt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (NULLIF(DISTINCT ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3)), (NOT (rt0.c0))));
SELECT * FROM vt0, rt0, t0 WHERE (((((vt0.c0) ISNULL))IS(CAST(t0.c0 AS BLOB)))) ORDER BY CAST(rt0.c4 AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))IS(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CAST(rt0.c4 AS NUMERIC)  NULLS FIRST);
SELECT * FROM vt0, rt0, t0 WHERE (((((vt0.c0) ISNULL))IS(CAST(t0.c0 AS BLOB)))) ORDER BY CAST(rt0.c4 AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))IS(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CAST(rt0.c4 AS NUMERIC)  NULLS FIRST);
SELECT * FROM vt0, rt0, t0 WHERE (((((vt0.c0) ISNULL))IS(CAST(t0.c0 AS BLOB)))) ORDER BY CAST(rt0.c4 AS NUMERIC)  NULLS FIRST;
SELECT COUNT(*) FROM vt12, rt0, vt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt12, rt0, vt0, t0);
SELECT COUNT(*) FROM vt12, rt0, vt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt12, rt0, vt0, t0);
SELECT COUNT(*) FROM vt12, rt0, vt0, t0 WHERE (x'');
SELECT ALL COUNT(*) FROM vt0, vt12, t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c1) AND (vt0.c0)))==(((((t0.c0)OR(vt12.c0)))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) NOT BETWEEN (t0.c1) AND (vt0.c0)))=(((((t0.c0)OR(vt12.c0)))AND(t0.c2))))) IS TRUE)  as count FROM vt0, vt12, t0);
SELECT ALL COUNT(*) FROM vt0, vt12, t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c1) AND (vt0.c0)))==(((((t0.c0)OR(vt12.c0)))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) NOT BETWEEN (t0.c1) AND (vt0.c0)))=(((((t0.c0)OR(vt12.c0)))AND(t0.c2))))) IS TRUE)  as count FROM vt0, vt12, t0);
SELECT ALL COUNT(*) FROM vt0, vt12, t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c1) AND (vt0.c0)))==(((((t0.c0)OR(vt12.c0)))AND(t0.c2)))));
SELECT * FROM t0 WHERE (((0.36125900446050263) NOT BETWEEN ((t0.c0 IN (t0.c1))) AND (((t0.c0) BETWEEN (NULL) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((0.36125900446050263) NOT BETWEEN ((t0.c0 IN (t0.c1))) AND (((t0.c0) BETWEEN (NULL) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((0.36125900446050263) NOT BETWEEN ((t0.c0 IN (t0.c1))) AND (((t0.c0) BETWEEN (NULL) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((0.36125900446050263) NOT BETWEEN ((t0.c0 IN (t0.c1))) AND (((t0.c0) BETWEEN (NULL) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((0.36125900446050263) NOT BETWEEN ((t0.c0 IN (t0.c1))) AND (((t0.c0) BETWEEN (NULL) AND (t0.c0)))));
SELECT * FROM vt12, rt0 WHERE (((rt0.c4 IN ()) IN ())) ORDER BY (((rt0.c0)&(rt0.c4)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c4 IN ()) IN ())) IS TRUE)  as count FROM vt12, rt0 NOT INDEXED ORDER BY (((rt0.c0)&(rt0.c4)) IN ()) ASC);
SELECT * FROM vt12, rt0 WHERE (((rt0.c4 IN ()) IN ())) ORDER BY (((rt0.c0)&(rt0.c4)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c4 IN ()) IN ())) IS TRUE)  as count FROM vt12, rt0 NOT INDEXED ORDER BY (((rt0.c0)&(rt0.c4)) IN ()) ASC);
SELECT * FROM vt12, rt0 WHERE (((rt0.c4 IN ()) IN ())) ORDER BY (((rt0.c0)&(rt0.c4)) IN ()) ASC;
SELECT ALL * FROM rt0 WHERE (CAST(((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)) AS TEXT));
SELECT * FROM vt12, rt0 CROSS JOIN vt0 ON t0.c1 INNER JOIN t0 ON ABS(DISTINCT ((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c3)))AND(vt0.c0)))OR(t0.c0))) WHERE ((((t0.c2)IS(t0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c2)IS(t0.c1)) IN ())) IS TRUE)  as count FROM vt12, rt0 CROSS JOIN vt0 ON t0.c1 INNER JOIN t0 ON ABS(DISTINCT ((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c3)))AND(vt0.c0)))OR(t0.c0))));
SELECT * FROM vt12, rt0 CROSS JOIN vt0 ON t0.c1 INNER JOIN t0 ON ABS(DISTINCT ((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c3)))AND(vt0.c0)))OR(t0.c0))) WHERE ((((t0.c2)IS(t0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c2)IS(t0.c1)) IN ())) IS TRUE)  as count FROM vt12, rt0 CROSS JOIN vt0 ON t0.c1 INNER JOIN t0 ON ABS(DISTINCT ((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c3)))AND(vt0.c0)))OR(t0.c0))));
SELECT * FROM vt12, rt0 CROSS JOIN vt0 ON t0.c1 INNER JOIN t0 ON ABS(DISTINCT ((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c3)))AND(vt0.c0)))OR(t0.c0))) WHERE ((((t0.c2)IS(t0.c1)) IN ()));
SELECT COUNT(*) FROM t0, rt0 CROSS JOIN vt0 ON ((((rt0.c4) NOT BETWEEN (t0.c2) AND (vt12.c0))) BETWEEN ('526240034') AND (((t0.c1) IS FALSE))) CROSS JOIN vt12 ON (- (CAST(vt12.c0 AS INTEGER))) WHERE ((((+ (vt0.c0)))||(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))||(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt0 ON ((((rt0.c4) NOT BETWEEN (t0.c2) AND (vt12.c0))) BETWEEN ('526240034') AND (((t0.c1) IS FALSE))) CROSS JOIN vt12 ON (- (CAST(vt12.c0 AS INTEGER))));
SELECT COUNT(*) FROM t0, rt0 CROSS JOIN vt0 ON ((((rt0.c4) NOT BETWEEN (t0.c2) AND (vt12.c0))) BETWEEN ('526240034') AND (((t0.c1) IS FALSE))) CROSS JOIN vt12 ON (- (CAST(vt12.c0 AS INTEGER))) WHERE ((((+ (vt0.c0)))||(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))||(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt0 ON ((((rt0.c4) NOT BETWEEN (t0.c2) AND (vt12.c0))) BETWEEN ('526240034') AND (((t0.c1) IS FALSE))) CROSS JOIN vt12 ON (- (CAST(vt12.c0 AS INTEGER))));
SELECT COUNT(*) FROM t0, rt0 CROSS JOIN vt0 ON ((((rt0.c4) NOT BETWEEN (t0.c2) AND (vt12.c0))) BETWEEN ('526240034') AND (((t0.c1) IS FALSE))) CROSS JOIN vt12 ON (- (CAST(vt12.c0 AS INTEGER))) WHERE ((((+ (vt0.c0)))||(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))));
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE ((t0.c0 IN ((+ (t0.c1))))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ((+ (t0.c1))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY NULL ASC  NULLS LAST);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE ((t0.c0 IN ((+ (t0.c1))))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ((+ (t0.c1))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY NULL ASC  NULLS LAST);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE ((t0.c0 IN ((+ (t0.c1))))) ORDER BY NULL ASC  NULLS LAST;
SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c1) AND (t0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (t0.c1) AND (t0.c1))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c1) AND (t0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (t0.c1) AND (t0.c1))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c1) AND (t0.c1))) IS TRUE));
SELECT COUNT(*) FROM rt0, vt0, vt12, t0 WHERE (((-298325521 COLLATE NOCASE) BETWEEN ((rt0.c2 IN (rt0.c2))) AND (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((-298325521 COLLATE NOCASE) BETWEEN ((rt0.c2 IN (rt0.c2))) AND (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, vt12, t0);
SELECT COUNT(*) FROM rt0, vt0, vt12, t0 WHERE (((-298325521 COLLATE NOCASE) BETWEEN ((rt0.c2 IN (rt0.c2))) AND (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((-298325521 COLLATE NOCASE) BETWEEN ((rt0.c2 IN (rt0.c2))) AND (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, vt12, t0);
SELECT COUNT(*) FROM rt0, vt0, vt12, t0 WHERE (((-298325521 COLLATE NOCASE) BETWEEN ((rt0.c2 IN (rt0.c2))) AND (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT ALL * FROM vt12, rt0 FULL OUTER JOIN t0 ON ((((rt0.c0) NOT BETWEEN (0.32106120664486815) AND (t0.c1))) BETWEEN (((rt0.c1)IS('0.37704545638337306'))) AND (0X62594c2b COLLATE RTRIM)) RIGHT OUTER JOIN vt0 ON ((((((((((vt12.c0) BETWEEN (t0.c1) AND (vt0.c0)))AND(x'')))OR((((t0.c2, t0.c2, rt0.c2)) BETWEEN ((t0.c0, rt0.c2, t0.c1)) AND ((t0.c1, rt0.c4, rt0.c2))))))OR(CAST(rt0.c0 AS BLOB))))OR(CAST(vt0.c0 AS BLOB))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt12, rt0 NOT INDEXED FULL OUTER JOIN t0 ON ((((rt0.c0) NOT BETWEEN (0.32106120664486815) AND (t0.c1))) BETWEEN (((rt0.c1)IS('0.37704545638337306'))) AND (0X62594c2b COLLATE RTRIM)) RIGHT OUTER JOIN vt0 ON ((((((((((vt12.c0) BETWEEN (t0.c1) AND (vt0.c0)))AND(x'')))OR((((t0.c2, t0.c2, rt0.c2)) BETWEEN ((t0.c0, rt0.c2, t0.c1)) AND ((t0.c1, rt0.c4, rt0.c2))))))OR(CAST(rt0.c0 AS BLOB))))OR(CAST(vt0.c0 AS BLOB))));
SELECT ALL * FROM vt12, rt0 FULL OUTER JOIN t0 ON ((((rt0.c0) NOT BETWEEN (0.32106120664486815) AND (t0.c1))) BETWEEN (((rt0.c1)IS('0.37704545638337306'))) AND (0X62594c2b COLLATE RTRIM)) RIGHT OUTER JOIN vt0 ON ((((((((((vt12.c0) BETWEEN (t0.c1) AND (vt0.c0)))AND(x'')))OR((((t0.c2, t0.c2, rt0.c2)) BETWEEN ((t0.c0, rt0.c2, t0.c1)) AND ((t0.c1, rt0.c4, rt0.c2))))))OR(CAST(rt0.c0 AS BLOB))))OR(CAST(vt0.c0 AS BLOB))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt12, rt0 NOT INDEXED FULL OUTER JOIN t0 ON ((((rt0.c0) NOT BETWEEN (0.32106120664486815) AND (t0.c1))) BETWEEN (((rt0.c1)IS('0.37704545638337306'))) AND (0X62594c2b COLLATE RTRIM)) RIGHT OUTER JOIN vt0 ON ((((((((((vt12.c0) BETWEEN (t0.c1) AND (vt0.c0)))AND(x'')))OR((((t0.c2, t0.c2, rt0.c2)) BETWEEN ((t0.c0, rt0.c2, t0.c1)) AND ((t0.c1, rt0.c4, rt0.c2))))))OR(CAST(rt0.c0 AS BLOB))))OR(CAST(vt0.c0 AS BLOB))));
SELECT ALL * FROM vt12, rt0 FULL OUTER JOIN t0 ON ((((rt0.c0) NOT BETWEEN (0.32106120664486815) AND (t0.c1))) BETWEEN (((rt0.c1)IS('0.37704545638337306'))) AND (0X62594c2b COLLATE RTRIM)) RIGHT OUTER JOIN vt0 ON ((((((((((vt12.c0) BETWEEN (t0.c1) AND (vt0.c0)))AND(x'')))OR((((t0.c2, t0.c2, rt0.c2)) BETWEEN ((t0.c0, rt0.c2, t0.c1)) AND ((t0.c1, rt0.c4, rt0.c2))))))OR(CAST(rt0.c0 AS BLOB))))OR(CAST(vt0.c0 AS BLOB))) WHERE (x'');
SELECT ALL COUNT(*) FROM vt12 CROSS JOIN rt0 ON ((HEX(t0.c0))-((rt0.c2 IN ()))) LEFT OUTER JOIN t0 ON CAST(vt12.c0 AS TEXT) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt12 CROSS JOIN rt0 ON ((HEX(t0.c0))-((rt0.c2 IN ()))) LEFT OUTER JOIN t0 ON CAST(vt12.c0 AS TEXT));
SELECT ALL COUNT(*) FROM vt12 CROSS JOIN rt0 ON ((HEX(t0.c0))-((rt0.c2 IN ()))) LEFT OUTER JOIN t0 ON CAST(vt12.c0 AS TEXT) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt12 CROSS JOIN rt0 ON ((HEX(t0.c0))-((rt0.c2 IN ()))) LEFT OUTER JOIN t0 ON CAST(vt12.c0 AS TEXT));
SELECT ALL COUNT(*) FROM vt12 CROSS JOIN rt0 ON ((HEX(t0.c0))-((rt0.c2 IN ()))) LEFT OUTER JOIN t0 ON CAST(vt12.c0 AS TEXT) WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM rt0, vt12 WHERE (((((((rt0.c0)AND(x'')))AND(NULL)))<=(NULL)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(x'')))AND(NULL)))<=(NULL))) IS TRUE)  as count FROM rt0, vt12);
SELECT ALL COUNT(*) FROM rt0, vt12 WHERE (((((((rt0.c0)AND(x'')))AND(NULL)))<=(NULL)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(x'')))AND(NULL)))<=(NULL))) IS TRUE)  as count FROM rt0, vt12);
SELECT ALL COUNT(*) FROM rt0, vt12 WHERE (((((((rt0.c0)AND(x'')))AND(NULL)))<=(NULL)));
SELECT COUNT(*) FROM vt12, vt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY (((vt12.c0, vt12.c0, vt12.c0)) BETWEEN (((vt0.c0 IN ()), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt12.c0)))AND(vt0.c0)), ((vt12.c0) BETWEEN (x'') AND (x'')))) AND (((NOT (vt12.c0)), ((vt12.c0)<(vt12.c0)), 0.5417333906969961)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt12, vt0 ORDER BY (((vt12.c0, vt12.c0, vt12.c0)) BETWEEN (((vt0.c0 IN ()), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt12.c0)))AND(vt0.c0)), ((vt12.c0) BETWEEN (x'') AND (x'')))) AND (((NOT (vt12.c0)), ((vt12.c0)<(vt12.c0)), 0.5417333906969961)))  NULLS LAST);
SELECT COUNT(*) FROM vt12, vt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY (((vt12.c0, vt12.c0, vt12.c0)) BETWEEN (((vt0.c0 IN ()), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt12.c0)))AND(vt0.c0)), ((vt12.c0) BETWEEN (x'') AND (x'')))) AND (((NOT (vt12.c0)), ((vt12.c0)<(vt12.c0)), 0.5417333906969961)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt12, vt0 ORDER BY (((vt12.c0, vt12.c0, vt12.c0)) BETWEEN (((vt0.c0 IN ()), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt12.c0)))AND(vt0.c0)), ((vt12.c0) BETWEEN (x'') AND (x'')))) AND (((NOT (vt12.c0)), ((vt12.c0)<(vt12.c0)), 0.5417333906969961)))  NULLS LAST);
SELECT COUNT(*) FROM vt12, vt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY (((vt12.c0, vt12.c0, vt12.c0)) BETWEEN (((vt0.c0 IN ()), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt12.c0)))AND(vt0.c0)), ((vt12.c0) BETWEEN (x'') AND (x'')))) AND (((NOT (vt12.c0)), ((vt12.c0)<(vt12.c0)), 0.5417333906969961)))  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)||(vt0.c0)) AS NUMERIC)) ORDER BY ((vt0.c0)|(vt0.c0)) COLLATE RTRIM  NULLS LAST, (((vt0.c0))<((((vt0.c0)-(vt0.c0)))))  NULLS LAST, ((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(((vt0.c0)IS(vt0.c0)))))AND(NULL)))AND((('W')OR(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN '0.4442561841688' ELSE vt0.c0 END)))OR((((vt0.c0))<((vt0.c0))))))OR((NOT (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)||(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)|(vt0.c0)) COLLATE RTRIM  NULLS LAST, (((vt0.c0))<((((vt0.c0)-(vt0.c0)))))  NULLS LAST, ((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(((vt0.c0)IS(vt0.c0)))))AND(NULL)))AND((('W')OR(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN '0.4442561841688' ELSE vt0.c0 END)))OR((((vt0.c0))<((vt0.c0))))))OR((NOT (vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)||(vt0.c0)) AS NUMERIC)) ORDER BY ((vt0.c0)|(vt0.c0)) COLLATE RTRIM  NULLS LAST, (((vt0.c0))<((((vt0.c0)-(vt0.c0)))))  NULLS LAST, ((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(((vt0.c0)IS(vt0.c0)))))AND(NULL)))AND((('W')OR(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN '0.4442561841688' ELSE vt0.c0 END)))OR((((vt0.c0))<((vt0.c0))))))OR((NOT (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)||(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)|(vt0.c0)) COLLATE RTRIM  NULLS LAST, (((vt0.c0))<((((vt0.c0)-(vt0.c0)))))  NULLS LAST, ((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(((vt0.c0)IS(vt0.c0)))))AND(NULL)))AND((('W')OR(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN '0.4442561841688' ELSE vt0.c0 END)))OR((((vt0.c0))<((vt0.c0))))))OR((NOT (vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)||(vt0.c0)) AS NUMERIC)) ORDER BY ((vt0.c0)|(vt0.c0)) COLLATE RTRIM  NULLS LAST, (((vt0.c0))<((((vt0.c0)-(vt0.c0)))))  NULLS LAST, ((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(((vt0.c0)IS(vt0.c0)))))AND(NULL)))AND((('W')OR(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN '0.4442561841688' ELSE vt0.c0 END)))OR((((vt0.c0))<((vt0.c0))))))OR((NOT (vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM rt0, t0, vt12 RIGHT OUTER JOIN vt0 ON ((LAST_INSERT_ROWID())>((((rt0.c4, vt0.c0, rt0.c1, rt0.c1, rt0.c1, rt0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, rt0.c3, rt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c1)) AND ((t0.c1, vt12.c0, rt0.c1, rt0.c0, t0.c2, vt12.c0, t0.c1))))) WHERE (((NULL)&(CASE WHEN rt0.c2 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((NULL)&(CASE WHEN rt0.c2 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, t0, vt12 RIGHT OUTER JOIN vt0 ON ((LAST_INSERT_ROWID())>((((rt0.c4, vt0.c0, rt0.c1, rt0.c1, rt0.c1, rt0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, rt0.c3, rt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c1)) AND ((t0.c1, vt12.c0, rt0.c1, rt0.c0, t0.c2, vt12.c0, t0.c1))))));
SELECT ALL * FROM rt0, t0, vt12 RIGHT OUTER JOIN vt0 ON ((LAST_INSERT_ROWID())>((((rt0.c4, vt0.c0, rt0.c1, rt0.c1, rt0.c1, rt0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, rt0.c3, rt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c1)) AND ((t0.c1, vt12.c0, rt0.c1, rt0.c0, t0.c2, vt12.c0, t0.c1))))) WHERE (((NULL)&(CASE WHEN rt0.c2 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((NULL)&(CASE WHEN rt0.c2 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, t0, vt12 RIGHT OUTER JOIN vt0 ON ((LAST_INSERT_ROWID())>((((rt0.c4, vt0.c0, rt0.c1, rt0.c1, rt0.c1, rt0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, rt0.c3, rt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c1)) AND ((t0.c1, vt12.c0, rt0.c1, rt0.c0, t0.c2, vt12.c0, t0.c1))))));
SELECT ALL * FROM rt0, t0, vt12 RIGHT OUTER JOIN vt0 ON ((LAST_INSERT_ROWID())>((((rt0.c4, vt0.c0, rt0.c1, rt0.c1, rt0.c1, rt0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, rt0.c3, rt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c1)) AND ((t0.c1, vt12.c0, rt0.c1, rt0.c0, t0.c2, vt12.c0, t0.c1))))) WHERE (((NULL)&(CASE WHEN rt0.c2 THEN rt0.c0 END)));
SELECT * FROM t0, vt12 WHERE (((((t0.c1)==(t0.c1))) IS FALSE)) ORDER BY json_quote(t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)=(t0.c1))) IS FALSE)) IS TRUE)  as count FROM t0, vt12 ORDER BY json_quote(t0.c1));
SELECT * FROM t0, vt12 WHERE (((((t0.c1)==(t0.c1))) IS FALSE)) ORDER BY json_quote(t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)=(t0.c1))) IS FALSE)) IS TRUE)  as count FROM t0, vt12 ORDER BY json_quote(t0.c1));
SELECT * FROM t0, vt12 WHERE (((((t0.c1)==(t0.c1))) IS FALSE)) ORDER BY json_quote(t0.c1);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c3)LIKE(rt0.c3))) BETWEEN ((((rt0.c0))<=((vt0.c0)))) AND ((rt0.c3 IN (rt0.c1)))) WHERE (((((rt0.c3)==(rt0.c2)))>((((((((('')OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c1))))) ORDER BY ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c4))) BETWEEN ((~ (rt0.c2))) AND (((rt0.c2) BETWEEN ('-1282454735') AND (rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)==(rt0.c2)))>((((((((('')OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c3)LIKE(rt0.c3))) BETWEEN ((((rt0.c0))<=((vt0.c0)))) AND ((rt0.c3 IN (rt0.c1)))) ORDER BY ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c4))) BETWEEN ((~ (rt0.c2))) AND (((rt0.c2) BETWEEN ('-1282454735') AND (rt0.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c3)LIKE(rt0.c3))) BETWEEN ((((rt0.c0))<=((vt0.c0)))) AND ((rt0.c3 IN (rt0.c1)))) WHERE (((((rt0.c3)==(rt0.c2)))>((((((((('')OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c1))))) ORDER BY ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c4))) BETWEEN ((~ (rt0.c2))) AND (((rt0.c2) BETWEEN ('-1282454735') AND (rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)==(rt0.c2)))>((((((((('')OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c3)LIKE(rt0.c3))) BETWEEN ((((rt0.c0))<=((vt0.c0)))) AND ((rt0.c3 IN (rt0.c1)))) ORDER BY ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c4))) BETWEEN ((~ (rt0.c2))) AND (((rt0.c2) BETWEEN ('-1282454735') AND (rt0.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c3)LIKE(rt0.c3))) BETWEEN ((((rt0.c0))<=((vt0.c0)))) AND ((rt0.c3 IN (rt0.c1)))) WHERE (((((rt0.c3)==(rt0.c2)))>((((((((('')OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c1))))) ORDER BY ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c4))) BETWEEN ((~ (rt0.c2))) AND (((rt0.c2) BETWEEN ('-1282454735') AND (rt0.c2)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0, vt12 WHERE ('') ORDER BY ((((((rt0.c2)+(rt0.c4)))AND(((rt0.c1)IS(rt0.c2)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE 4.12653682E8 END)) DESC, (((((((NULL)OR(rt0.c1)))OR(rt0.c1))))>(((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, rt0, vt12 ORDER BY ((((((rt0.c2)+(rt0.c4)))AND(((rt0.c1)IS(rt0.c2)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE 4.12653682E8 END)) DESC, (((((((NULL)OR(rt0.c1)))OR(rt0.c1))))>(((~ (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, rt0, vt12 WHERE ('') ORDER BY ((((((rt0.c2)+(rt0.c4)))AND(((rt0.c1)IS(rt0.c2)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE 4.12653682E8 END)) DESC, (((((((NULL)OR(rt0.c1)))OR(rt0.c1))))>(((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, rt0, vt12 ORDER BY ((((((rt0.c2)+(rt0.c4)))AND(((rt0.c1)IS(rt0.c2)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE 4.12653682E8 END)) DESC, (((((((NULL)OR(rt0.c1)))OR(rt0.c1))))>(((~ (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, rt0, vt12 WHERE ('') ORDER BY ((((((rt0.c2)+(rt0.c4)))AND(((rt0.c1)IS(rt0.c2)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE 4.12653682E8 END)) DESC, (((((((NULL)OR(rt0.c1)))OR(rt0.c1))))>(((~ (vt0.c0)))));
SELECT * FROM vt0 INNER JOIN vt12 ON (~ (t0.c1 COLLATE RTRIM)) LEFT OUTER JOIN t0 ON (vt0.c0 IN (vt12.c0, vt12.c0)) COLLATE BINARY WHERE (-1060752505);
SELECT SUM(count) FROM (SELECT ((-1060752505) IS TRUE)  as count FROM vt0 INNER JOIN vt12 ON (~ (t0.c1 COLLATE RTRIM)) LEFT OUTER JOIN t0 ON (vt0.c0 IN (vt12.c0, vt12.c0)) COLLATE BINARY);
SELECT * FROM vt0 INNER JOIN vt12 ON (~ (t0.c1 COLLATE RTRIM)) LEFT OUTER JOIN t0 ON (vt0.c0 IN (vt12.c0, vt12.c0)) COLLATE BINARY WHERE (-1060752505);
SELECT SUM(count) FROM (SELECT ((-1060752505) IS TRUE)  as count FROM vt0 INNER JOIN vt12 ON (~ (t0.c1 COLLATE RTRIM)) LEFT OUTER JOIN t0 ON (vt0.c0 IN (vt12.c0, vt12.c0)) COLLATE BINARY);
SELECT * FROM vt0 INNER JOIN vt12 ON (~ (t0.c1 COLLATE RTRIM)) LEFT OUTER JOIN t0 ON (vt0.c0 IN (vt12.c0, vt12.c0)) COLLATE BINARY WHERE (-1060752505);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE ((t0.c0)|(NULL))  WHEN ((t0.c2) ISNULL) THEN ((t0.c0)IS(vt0.c0)) WHEN t0.c2 THEN ((vt0.c0)||(x'')) WHEN ((t0.c0)GLOB(t0.c1)) THEN '()' COLLATE NOCASE ELSE ((((((((t0.c0)AND(t0.c0)))OR(vt0.c0)))AND(t0.c1)))OR('980949648')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0)|(NULL))  WHEN ((t0.c2) ISNULL) THEN ((t0.c0)IS(vt0.c0)) WHEN t0.c2 THEN ((vt0.c0)||(x'')) WHEN ((t0.c0)GLOB(t0.c1)) THEN '()' COLLATE NOCASE ELSE ((((((((t0.c0)AND(t0.c0)))OR(vt0.c0)))AND(t0.c1)))OR('980949648')) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE ((t0.c0)|(NULL))  WHEN ((t0.c2) ISNULL) THEN ((t0.c0)IS(vt0.c0)) WHEN t0.c2 THEN ((vt0.c0)||(x'')) WHEN ((t0.c0)GLOB(t0.c1)) THEN '()' COLLATE NOCASE ELSE ((((((((t0.c0)AND(t0.c0)))OR(vt0.c0)))AND(t0.c1)))OR('980949648')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0)|(NULL))  WHEN ((t0.c2) ISNULL) THEN ((t0.c0)IS(vt0.c0)) WHEN t0.c2 THEN ((vt0.c0)||(x'')) WHEN ((t0.c0)GLOB(t0.c1)) THEN '()' COLLATE NOCASE ELSE ((((((((t0.c0)AND(t0.c0)))OR(vt0.c0)))AND(t0.c1)))OR('980949648')) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE ((t0.c0)|(NULL))  WHEN ((t0.c2) ISNULL) THEN ((t0.c0)IS(vt0.c0)) WHEN t0.c2 THEN ((vt0.c0)||(x'')) WHEN ((t0.c0)GLOB(t0.c1)) THEN '()' COLLATE NOCASE ELSE ((((((((t0.c0)AND(t0.c0)))OR(vt0.c0)))AND(t0.c1)))OR('980949648')) END);
SELECT * FROM rt0 WHERE (((((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4)))))>=((((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2)))))) ORDER BY (NULLIF(DISTINCT rt0.c2, rt0.c4) IN ()) DESC  NULLS LAST, rt0.c0 ASC, ((((rt0.c3))>=((rt0.c1))) IN (rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4)))))>=((((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY (NULLIF(DISTINCT rt0.c2, rt0.c4) IN ()) DESC  NULLS LAST, rt0.c0 ASC, ((((rt0.c3))>=((rt0.c1))) IN (rt0.c2)) ASC);
SELECT * FROM rt0 WHERE (((((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4)))))>=((((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2)))))) ORDER BY (NULLIF(DISTINCT rt0.c2, rt0.c4) IN ()) DESC  NULLS LAST, rt0.c0 ASC, ((((rt0.c3))>=((rt0.c1))) IN (rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4)))))>=((((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY (NULLIF(DISTINCT rt0.c2, rt0.c4) IN ()) DESC  NULLS LAST, rt0.c0 ASC, ((((rt0.c3))>=((rt0.c1))) IN (rt0.c2)) ASC);
SELECT * FROM rt0 WHERE (((((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4)))))>=((((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2)))))) ORDER BY (NULLIF(DISTINCT rt0.c2, rt0.c4) IN ()) DESC  NULLS LAST, rt0.c0 ASC, ((((rt0.c3))>=((rt0.c1))) IN (rt0.c2)) ASC;
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) IS FALSE));
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))IS NOT(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0))))) ORDER BY ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))IS NOT(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE ASC);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))IS NOT(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0))))) ORDER BY ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))IS NOT(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE ASC);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))IS NOT(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0))))) ORDER BY ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE ASC;
SELECT COUNT(*) FROM vt12, rt0 WHERE (((837704112) ISNULL));
SELECT SUM(count) FROM (SELECT ((((837704112) ISNULL)) IS TRUE)  as count FROM vt12, rt0);
SELECT COUNT(*) FROM vt12, rt0 WHERE (((837704112) ISNULL));
SELECT SUM(count) FROM (SELECT ((((837704112) ISNULL)) IS TRUE)  as count FROM vt12, rt0);
SELECT COUNT(*) FROM vt12, rt0 WHERE (((837704112) ISNULL));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON CAST(UNLIKELY(DISTINCT rt0.c4) AS NUMERIC) CROSS JOIN rt0 ON vt0.c0 WHERE (((((CASE rt0.c3  WHEN rt0.c4 THEN t0.c2 ELSE rt0.c0 END)OR(((t0.c0) NOT NULL))))AND(IFNULL(rt0.c4, t0.c2)))) ORDER BY ((((((t0.c1)AND(t0.c1)))AND(rt0.c2)))LIKE((rt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c3  WHEN rt0.c4 THEN t0.c2 ELSE rt0.c0 END)OR(((t0.c0) NOT NULL))))AND(IFNULL(rt0.c4, t0.c2)))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CAST(UNLIKELY(DISTINCT rt0.c4) AS NUMERIC) CROSS JOIN rt0 ON vt0.c0 ORDER BY ((((((t0.c1)AND(t0.c1)))AND(rt0.c2)))LIKE((rt0.c0 IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON CAST(UNLIKELY(DISTINCT rt0.c4) AS NUMERIC) CROSS JOIN rt0 ON vt0.c0 WHERE (((((CASE rt0.c3  WHEN rt0.c4 THEN t0.c2 ELSE rt0.c0 END)OR(((t0.c0) NOT NULL))))AND(IFNULL(rt0.c4, t0.c2)))) ORDER BY ((((((t0.c1)AND(t0.c1)))AND(rt0.c2)))LIKE((rt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c3  WHEN rt0.c4 THEN t0.c2 ELSE rt0.c0 END)OR(((t0.c0) NOT NULL))))AND(IFNULL(rt0.c4, t0.c2)))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CAST(UNLIKELY(DISTINCT rt0.c4) AS NUMERIC) CROSS JOIN rt0 ON vt0.c0 ORDER BY ((((((t0.c1)AND(t0.c1)))AND(rt0.c2)))LIKE((rt0.c0 IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON CAST(UNLIKELY(DISTINCT rt0.c4) AS NUMERIC) CROSS JOIN rt0 ON vt0.c0 WHERE (((((CASE rt0.c3  WHEN rt0.c4 THEN t0.c2 ELSE rt0.c0 END)OR(((t0.c0) NOT NULL))))AND(IFNULL(rt0.c4, t0.c2)))) ORDER BY ((((((t0.c1)AND(t0.c1)))AND(rt0.c2)))LIKE((rt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (+ (rt0.c4 COLLATE BINARY)) WHERE (((UPPER(rt0.c0))/((((rt0.c1))=((t0.c0)))))) ORDER BY ((CASE rt0.c2  WHEN t0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN t0.c0 THEN rt0.c4 END) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(rt0.c0))/((((rt0.c1))==((t0.c0)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (+ (rt0.c4 COLLATE BINARY)) ORDER BY ((CASE rt0.c2  WHEN t0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN t0.c0 THEN rt0.c4 END) IS TRUE));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (+ (rt0.c4 COLLATE BINARY)) WHERE (((UPPER(rt0.c0))/((((rt0.c1))=((t0.c0)))))) ORDER BY ((CASE rt0.c2  WHEN t0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN t0.c0 THEN rt0.c4 END) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(rt0.c0))/((((rt0.c1))==((t0.c0)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (+ (rt0.c4 COLLATE BINARY)) ORDER BY ((CASE rt0.c2  WHEN t0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN t0.c0 THEN rt0.c4 END) IS TRUE));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (+ (rt0.c4 COLLATE BINARY)) WHERE (((UPPER(rt0.c0))/((((rt0.c1))=((t0.c0)))))) ORDER BY ((CASE rt0.c2  WHEN t0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN t0.c0 THEN rt0.c4 END) IS TRUE);
SELECT ALL * FROM rt0, vt12, vt0 WHERE (LIKELIHOOD(DISTINCT ((rt0.c3)<<(rt0.c0)), 0.20272556762270533));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((rt0.c3)<<(rt0.c0)), 0.20272556762270533)) IS TRUE)  as count FROM rt0, vt12, vt0);
SELECT ALL * FROM rt0, vt12, vt0 WHERE (LIKELIHOOD(DISTINCT ((rt0.c3)<<(rt0.c0)), 0.20272556762270533));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((rt0.c3)<<(rt0.c0)), 0.20272556762270533)) IS TRUE)  as count FROM rt0, vt12, vt0);
SELECT ALL * FROM rt0, vt12, vt0 WHERE (LIKELIHOOD(DISTINCT ((rt0.c3)<<(rt0.c0)), 0.20272556762270533));
SELECT ALL COUNT(*) FROM t0, rt0 NOT INDEXED CROSS JOIN vt0 ON CASE ((((rt0.c1)OR(rt0.c3)))OR(t0.c0))  WHEN rt0.c4 THEN CAST(rt0.c1 AS NUMERIC) WHEN 0x18ef41fa THEN (- (rt0.c0)) WHEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END THEN ((t0.c0)GLOB(rt0.c3)) WHEN ((((rt0.c2)OR(rt0.c1)))OR(NULL)) THEN rt0.c4 WHEN CAST(rt0.c2 AS NUMERIC) THEN ((((rt0.c0)OR(t0.c0)))AND(rt0.c3)) END WHERE (CAST(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) AS BLOB)) ORDER BY ((((((rt0.c2))>=((vt0.c0))), ((t0.c1)IS(t0.c2)), rt0.c2 COLLATE NOCASE))==(((((vt0.c0, rt0.c1, t0.c2)) BETWEEN ((rt0.c1, rt0.c0, t0.c2)) AND ((rt0.c4, t0.c0, rt0.c3))), CAST(vt0.c0 AS NUMERIC), RTRIM(t0.c1))));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt0 ON CASE ((((rt0.c1)OR(rt0.c3)))OR(t0.c0))  WHEN rt0.c4 THEN CAST(rt0.c1 AS NUMERIC) WHEN 0x18ef41fa THEN (- (rt0.c0)) WHEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END THEN ((t0.c0)GLOB(rt0.c3)) WHEN ((((rt0.c2)OR(rt0.c1)))OR(NULL)) THEN rt0.c4 WHEN CAST(rt0.c2 AS NUMERIC) THEN ((((rt0.c0)OR(t0.c0)))AND(rt0.c3)) END ORDER BY ((((((rt0.c2))>=((vt0.c0))), ((t0.c1)IS(t0.c2)), rt0.c2 COLLATE NOCASE))=(((((vt0.c0, rt0.c1, t0.c2)) BETWEEN ((rt0.c1, rt0.c0, t0.c2)) AND ((rt0.c4, t0.c0, rt0.c3))), CAST(vt0.c0 AS NUMERIC), RTRIM(t0.c1)))));
SELECT ALL COUNT(*) FROM t0, rt0 NOT INDEXED CROSS JOIN vt0 ON CASE ((((rt0.c1)OR(rt0.c3)))OR(t0.c0))  WHEN rt0.c4 THEN CAST(rt0.c1 AS NUMERIC) WHEN 0x18ef41fa THEN (- (rt0.c0)) WHEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END THEN ((t0.c0)GLOB(rt0.c3)) WHEN ((((rt0.c2)OR(rt0.c1)))OR(NULL)) THEN rt0.c4 WHEN CAST(rt0.c2 AS NUMERIC) THEN ((((rt0.c0)OR(t0.c0)))AND(rt0.c3)) END WHERE (CAST(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) AS BLOB)) ORDER BY ((((((rt0.c2))>=((vt0.c0))), ((t0.c1)IS(t0.c2)), rt0.c2 COLLATE NOCASE))==(((((vt0.c0, rt0.c1, t0.c2)) BETWEEN ((rt0.c1, rt0.c0, t0.c2)) AND ((rt0.c4, t0.c0, rt0.c3))), CAST(vt0.c0 AS NUMERIC), RTRIM(t0.c1))));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt0 ON CASE ((((rt0.c1)OR(rt0.c3)))OR(t0.c0))  WHEN rt0.c4 THEN CAST(rt0.c1 AS NUMERIC) WHEN 0x18ef41fa THEN (- (rt0.c0)) WHEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END THEN ((t0.c0)GLOB(rt0.c3)) WHEN ((((rt0.c2)OR(rt0.c1)))OR(NULL)) THEN rt0.c4 WHEN CAST(rt0.c2 AS NUMERIC) THEN ((((rt0.c0)OR(t0.c0)))AND(rt0.c3)) END ORDER BY ((((((rt0.c2))>=((vt0.c0))), ((t0.c1)IS(t0.c2)), rt0.c2 COLLATE NOCASE))=(((((vt0.c0, rt0.c1, t0.c2)) BETWEEN ((rt0.c1, rt0.c0, t0.c2)) AND ((rt0.c4, t0.c0, rt0.c3))), CAST(vt0.c0 AS NUMERIC), RTRIM(t0.c1)))));
SELECT ALL COUNT(*) FROM t0, rt0 NOT INDEXED CROSS JOIN vt0 ON CASE ((((rt0.c1)OR(rt0.c3)))OR(t0.c0))  WHEN rt0.c4 THEN CAST(rt0.c1 AS NUMERIC) WHEN 0x18ef41fa THEN (- (rt0.c0)) WHEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END THEN ((t0.c0)GLOB(rt0.c3)) WHEN ((((rt0.c2)OR(rt0.c1)))OR(NULL)) THEN rt0.c4 WHEN CAST(rt0.c2 AS NUMERIC) THEN ((((rt0.c0)OR(t0.c0)))AND(rt0.c3)) END WHERE (CAST(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) AS BLOB)) ORDER BY ((((((rt0.c2))>=((vt0.c0))), ((t0.c1)IS(t0.c2)), rt0.c2 COLLATE NOCASE))==(((((vt0.c0, rt0.c1, t0.c2)) BETWEEN ((rt0.c1, rt0.c0, t0.c2)) AND ((rt0.c4, t0.c0, rt0.c3))), CAST(vt0.c0 AS NUMERIC), RTRIM(t0.c1))));
SELECT ALL * FROM rt0, vt0, vt12 WHERE ('d&A|' COLLATE NOCASE) ORDER BY (((((rt0.c2 IN (vt0.c0)))AND((((rt0.c3))<=(('1581187357'))))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) DESC, ((x'') NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (('d&A|' COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, vt12 ORDER BY (((((rt0.c2 IN (vt0.c0)))AND((((rt0.c3))<=(('1581187357'))))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) DESC, ((x'') NOT NULL) ASC);
SELECT ALL * FROM rt0, vt0, vt12 WHERE ('d&A|' COLLATE NOCASE) ORDER BY (((((rt0.c2 IN (vt0.c0)))AND((((rt0.c3))<=(('1581187357'))))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) DESC, ((x'') NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (('d&A|' COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, vt12 ORDER BY (((((rt0.c2 IN (vt0.c0)))AND((((rt0.c3))<=(('1581187357'))))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) DESC, ((x'') NOT NULL) ASC);
SELECT ALL * FROM rt0, vt0, vt12 WHERE ('d&A|' COLLATE NOCASE) ORDER BY (((((rt0.c2 IN (vt0.c0)))AND((((rt0.c3))<=(('1581187357'))))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) DESC, ((x'') NOT NULL) ASC;
SELECT COUNT(*) FROM vt0, t0, vt12, rt0 WHERE ((((((((rt0.c4)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))OR(CHANGES())))AND(CASE WHEN rt0.c0 THEN rt0.c3 END))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c4)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))OR(CHANGES())))AND(CASE WHEN rt0.c0 THEN rt0.c3 END))) IS TRUE)  as count FROM vt0, t0, vt12, rt0 ORDER BY rt0.c2 DESC);
SELECT COUNT(*) FROM vt0, t0, vt12, rt0 WHERE ((((((((rt0.c4)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))OR(CHANGES())))AND(CASE WHEN rt0.c0 THEN rt0.c3 END))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c4)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))OR(CHANGES())))AND(CASE WHEN rt0.c0 THEN rt0.c3 END))) IS TRUE)  as count FROM vt0, t0, vt12, rt0 ORDER BY rt0.c2 DESC);
SELECT COUNT(*) FROM vt0, t0, vt12, rt0 WHERE ((((((((rt0.c4)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))OR(CHANGES())))AND(CASE WHEN rt0.c0 THEN rt0.c3 END))) ORDER BY rt0.c2 DESC;
SELECT ALL COUNT(*) FROM rt0, vt0, vt12, t0 WHERE ((((((((((NOT ('')))OR(rt0.c1 COLLATE BINARY)))AND(((t0.c0) IS FALSE))))OR(((rt0.c2) ISNULL))))OR(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 ELSE t0.c2 END)));
SELECT SUM(count) FROM (SELECT (((((((((((NOT ('')))OR(rt0.c1 COLLATE BINARY)))AND(((t0.c0) IS FALSE))))OR(((rt0.c2) ISNULL))))OR(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 ELSE t0.c2 END))) IS TRUE)  as count FROM rt0, vt0, vt12, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, vt12, t0 WHERE ((((((((((NOT ('')))OR(rt0.c1 COLLATE BINARY)))AND(((t0.c0) IS FALSE))))OR(((rt0.c2) ISNULL))))OR(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 ELSE t0.c2 END)));
SELECT SUM(count) FROM (SELECT (((((((((((NOT ('')))OR(rt0.c1 COLLATE BINARY)))AND(((t0.c0) IS FALSE))))OR(((rt0.c2) ISNULL))))OR(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 ELSE t0.c2 END))) IS TRUE)  as count FROM rt0, vt0, vt12, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, vt12, t0 WHERE ((((((((((NOT ('')))OR(rt0.c1 COLLATE BINARY)))AND(((t0.c0) IS FALSE))))OR(((rt0.c2) ISNULL))))OR(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 ELSE t0.c2 END)));
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS BLOB)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS BLOB)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB)) IS TRUE));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c1))<=((t0.c2))))<>(((((((((((((t0.c1)AND(t0.c2)))AND(t0.c2)))AND(t0.c1)))AND(x'')))AND(t0.c1)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c1))<=((t0.c2))))!=(((((((((((((t0.c1)AND(t0.c2)))AND(t0.c2)))AND(t0.c1)))AND(x'')))AND(t0.c1)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c1))<=((t0.c2))))<>(((((((((((((t0.c1)AND(t0.c2)))AND(t0.c2)))AND(t0.c1)))AND(x'')))AND(t0.c1)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c1))<=((t0.c2))))!=(((((((((((((t0.c1)AND(t0.c2)))AND(t0.c2)))AND(t0.c1)))AND(x'')))AND(t0.c1)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c1))<=((t0.c2))))<>(((((((((((((t0.c1)AND(t0.c2)))AND(t0.c2)))AND(t0.c1)))AND(x'')))AND(t0.c1)))AND(t0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c0, rt0.c4, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c3)) AND ((rt0.c1, rt0.c3, vt0.c0)))) NOTNULL)) ORDER BY ABS(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3))) DESC, ((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c0))) BETWEEN (((rt0.c1)+(rt0.c1))) AND (INSTR(rt0.c2, vt0.c0))), (((rt0.c4 COLLATE RTRIM))=((((rt0.c0)LIKE(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt0.c4, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c3)) AND ((rt0.c1, rt0.c3, vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ABS(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3))) DESC, ((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c0))) BETWEEN (((rt0.c1)+(rt0.c1))) AND (INSTR(rt0.c2, vt0.c0))), (((rt0.c4 COLLATE RTRIM))==((((rt0.c0)LIKE(rt0.c3))))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c0, rt0.c4, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c3)) AND ((rt0.c1, rt0.c3, vt0.c0)))) NOTNULL)) ORDER BY ABS(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3))) DESC, ((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c0))) BETWEEN (((rt0.c1)+(rt0.c1))) AND (INSTR(rt0.c2, vt0.c0))), (((rt0.c4 COLLATE RTRIM))=((((rt0.c0)LIKE(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt0.c4, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c3)) AND ((rt0.c1, rt0.c3, vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ABS(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3))) DESC, ((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c0))) BETWEEN (((rt0.c1)+(rt0.c1))) AND (INSTR(rt0.c2, vt0.c0))), (((rt0.c4 COLLATE RTRIM))==((((rt0.c0)LIKE(rt0.c3))))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c0, rt0.c4, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c3)) AND ((rt0.c1, rt0.c3, vt0.c0)))) NOTNULL)) ORDER BY ABS(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3))) DESC, ((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c0))) BETWEEN (((rt0.c1)+(rt0.c1))) AND (INSTR(rt0.c2, vt0.c0))), (((rt0.c4 COLLATE RTRIM))=((((rt0.c0)LIKE(rt0.c3)))));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((NULLIF(DISTINCT rt0.c4, x'b46819b8'))||(((rt0.c2) NOTNULL))) FULL OUTER JOIN t0 ON ((CAST(t0.c0 AS TEXT))*(UNLIKELY(DISTINCT rt0.c0))) RIGHT OUTER JOIN vt12 ON ((x'') NOT BETWEEN ((t0.c2 IN (t0.c0, rt0.c1))) AND (vt0.c0)) WHERE (((CAST(rt0.c3 AS TEXT))OR(((rt0.c4)GLOB(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS TEXT))OR(((rt0.c4)GLOB(rt0.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((NULLIF(DISTINCT rt0.c4, x'b46819b8'))||(((rt0.c2) NOTNULL))) FULL OUTER JOIN t0 ON ((CAST(t0.c0 AS TEXT))*(UNLIKELY(DISTINCT rt0.c0))) RIGHT OUTER JOIN vt12 ON ((x'') NOT BETWEEN ((t0.c2 IN (t0.c0, rt0.c1))) AND (vt0.c0)));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((NULLIF(DISTINCT rt0.c4, x'b46819b8'))||(((rt0.c2) NOTNULL))) FULL OUTER JOIN t0 ON ((CAST(t0.c0 AS TEXT))*(UNLIKELY(DISTINCT rt0.c0))) RIGHT OUTER JOIN vt12 ON ((x'') NOT BETWEEN ((t0.c2 IN (t0.c0, rt0.c1))) AND (vt0.c0)) WHERE (((CAST(rt0.c3 AS TEXT))OR(((rt0.c4)GLOB(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS TEXT))OR(((rt0.c4)GLOB(rt0.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((NULLIF(DISTINCT rt0.c4, x'b46819b8'))||(((rt0.c2) NOTNULL))) FULL OUTER JOIN t0 ON ((CAST(t0.c0 AS TEXT))*(UNLIKELY(DISTINCT rt0.c0))) RIGHT OUTER JOIN vt12 ON ((x'') NOT BETWEEN ((t0.c2 IN (t0.c0, rt0.c1))) AND (vt0.c0)));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((NULLIF(DISTINCT rt0.c4, x'b46819b8'))||(((rt0.c2) NOTNULL))) FULL OUTER JOIN t0 ON ((CAST(t0.c0 AS TEXT))*(UNLIKELY(DISTINCT rt0.c0))) RIGHT OUTER JOIN vt12 ON ((x'') NOT BETWEEN ((t0.c2 IN (t0.c0, rt0.c1))) AND (vt0.c0)) WHERE (((CAST(rt0.c3 AS TEXT))OR(((rt0.c4)GLOB(rt0.c2)))));
SELECT COUNT(*) FROM vt0, rt0, vt12 WHERE (CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 ELSE '-1396127882' END COLLATE BINARY) ORDER BY NULLIF(DISTINCT SUBSTR(vt0.c0, rt0.c4), CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 ELSE '-1396127882' END COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, vt12 ORDER BY NULLIF(DISTINCT SUBSTR(vt0.c0, rt0.c4), CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, vt12 WHERE (CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 ELSE '-1396127882' END COLLATE BINARY) ORDER BY NULLIF(DISTINCT SUBSTR(vt0.c0, rt0.c4), CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 ELSE '-1396127882' END COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, vt12 ORDER BY NULLIF(DISTINCT SUBSTR(vt0.c0, rt0.c4), CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, vt12 WHERE (CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 ELSE '-1396127882' END COLLATE BINARY) ORDER BY NULLIF(DISTINCT SUBSTR(vt0.c0, rt0.c4), CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, t0 WHERE ((((((rt0.c3) NOT BETWEEN (rt0.c1) AND (t0.c1))))>((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3) NOT BETWEEN (rt0.c1) AND (t0.c1))))>((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((((rt0.c3) NOT BETWEEN (rt0.c1) AND (t0.c1))))>((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3) NOT BETWEEN (rt0.c1) AND (t0.c1))))>((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((((rt0.c3) NOT BETWEEN (rt0.c1) AND (t0.c1))))>((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))));
SELECT COUNT(*) FROM t0, rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0) BETWEEN (rt0.c3) AND (t0.c0))) IS FALSE) WHERE (TYPEOF(rt0.c4) COLLATE NOCASE) ORDER BY ABS(vt0.c0) COLLATE NOCASE  NULLS FIRST, (((t0.c0, vt0.c0, 0x1df3985c)) BETWEEN (('1711339455', CASE 0Xffffffffbe9babb0  WHEN rt0.c3 THEN NULL ELSE vt0.c0 END, ((rt0.c0) IS TRUE))) AND ((x'ae90', ((rt0.c2)|(rt0.c1)), CAST(rt0.c1 AS BLOB))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(rt0.c4) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0) BETWEEN (rt0.c3) AND (t0.c0))) IS FALSE) ORDER BY ABS(vt0.c0) COLLATE NOCASE  NULLS FIRST, (((t0.c0, vt0.c0, 0x1df3985c)) BETWEEN (('1711339455', CASE 0Xffffffffbe9babb0  WHEN rt0.c3 THEN NULL ELSE vt0.c0 END, ((rt0.c0) IS TRUE))) AND ((x'ae90', ((rt0.c2)|(rt0.c1)), CAST(rt0.c1 AS BLOB))))  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0) BETWEEN (rt0.c3) AND (t0.c0))) IS FALSE) WHERE (TYPEOF(rt0.c4) COLLATE NOCASE) ORDER BY ABS(vt0.c0) COLLATE NOCASE  NULLS FIRST, (((t0.c0, vt0.c0, 0x1df3985c)) BETWEEN (('1711339455', CASE 0Xffffffffbe9babb0  WHEN rt0.c3 THEN NULL ELSE vt0.c0 END, ((rt0.c0) IS TRUE))) AND ((x'ae90', ((rt0.c2)|(rt0.c1)), CAST(rt0.c1 AS BLOB))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(rt0.c4) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0) BETWEEN (rt0.c3) AND (t0.c0))) IS FALSE) ORDER BY ABS(vt0.c0) COLLATE NOCASE  NULLS FIRST, (((t0.c0, vt0.c0, 0x1df3985c)) BETWEEN (('1711339455', CASE 0Xffffffffbe9babb0  WHEN rt0.c3 THEN NULL ELSE vt0.c0 END, ((rt0.c0) IS TRUE))) AND ((x'ae90', ((rt0.c2)|(rt0.c1)), CAST(rt0.c1 AS BLOB))))  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0) BETWEEN (rt0.c3) AND (t0.c0))) IS FALSE) WHERE (TYPEOF(rt0.c4) COLLATE NOCASE) ORDER BY ABS(vt0.c0) COLLATE NOCASE  NULLS FIRST, (((t0.c0, vt0.c0, 0x1df3985c)) BETWEEN (('1711339455', CASE 0Xffffffffbe9babb0  WHEN rt0.c3 THEN NULL ELSE vt0.c0 END, ((rt0.c0) IS TRUE))) AND ((x'ae90', ((rt0.c2)|(rt0.c1)), CAST(rt0.c1 AS BLOB))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt12, rt0, t0 WHERE (('R3' IN (CAST(vt0.c0 AS BLOB), '')));
SELECT SUM(count) FROM (SELECT ALL ((('R3' IN (CAST(vt0.c0 AS BLOB), ''))) IS TRUE)  as count FROM vt0, vt12, rt0, t0);
SELECT COUNT(*) FROM vt0, vt12, rt0, t0 WHERE (('R3' IN (CAST(vt0.c0 AS BLOB), '')));
SELECT SUM(count) FROM (SELECT ALL ((('R3' IN (CAST(vt0.c0 AS BLOB), ''))) IS TRUE)  as count FROM vt0, vt12, rt0, t0);
SELECT COUNT(*) FROM vt0, vt12, rt0, t0 WHERE (('R3' IN (CAST(vt0.c0 AS BLOB), '')));
SELECT ALL * FROM vt12 WHERE (((DATE(vt12.c0, x'6c0c', vt12.c0))AND((vt12.c0 IN (vt12.c0, vt12.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((DATE(vt12.c0, x'6c0c', vt12.c0))AND((vt12.c0 IN (vt12.c0, vt12.c0))))) IS TRUE)  as count FROM vt12);
SELECT ALL * FROM vt12 WHERE (((DATE(vt12.c0, x'6c0c', vt12.c0))AND((vt12.c0 IN (vt12.c0, vt12.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((DATE(vt12.c0, x'6c0c', vt12.c0))AND((vt12.c0 IN (vt12.c0, vt12.c0))))) IS TRUE)  as count FROM vt12);
SELECT ALL * FROM vt12 WHERE (((DATE(vt12.c0, x'6c0c', vt12.c0))AND((vt12.c0 IN (vt12.c0, vt12.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt12 WHERE ((((((((((vt0.c0)AND(vt0.c0)))OR(0x3f59b41a)))OR(vt12.c0)))OR(vt12.c0)) IN ((((vt0.c0))<=((vt12.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0)AND(vt0.c0)))OR(0x3f59b41a)))OR(vt12.c0)))OR(vt12.c0)) IN ((((vt0.c0))<=((vt12.c0)))))) IS TRUE)  as count FROM vt0, vt12);
SELECT ALL COUNT(*) FROM vt0, vt12 WHERE ((((((((((vt0.c0)AND(vt0.c0)))OR(0x3f59b41a)))OR(vt12.c0)))OR(vt12.c0)) IN ((((vt0.c0))<=((vt12.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0)AND(vt0.c0)))OR(0x3f59b41a)))OR(vt12.c0)))OR(vt12.c0)) IN ((((vt0.c0))<=((vt12.c0)))))) IS TRUE)  as count FROM vt0, vt12);
SELECT ALL COUNT(*) FROM vt0, vt12 WHERE ((((((((((vt0.c0)AND(vt0.c0)))OR(0x3f59b41a)))OR(vt12.c0)))OR(vt12.c0)) IN ((((vt0.c0))<=((vt12.c0))))));
SELECT ALL * FROM t0, rt0 WHERE (NULL) ORDER BY ((((NOT (rt0.c4)), ((0.24714958391935382) ISNULL), t0.c0 COLLATE RTRIM))<=((((rt0.c4) NOT BETWEEN (rt0.c2) AND (t0.c2)), rt0.c1 COLLATE RTRIM, ((t0.c0)GLOB(rt0.c3))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((NOT (rt0.c4)), ((0.24714958391935382) ISNULL), t0.c0 COLLATE RTRIM))<=((((rt0.c4) NOT BETWEEN (rt0.c2) AND (t0.c2)), rt0.c1 COLLATE RTRIM, ((t0.c0)GLOB(rt0.c3))))) ASC  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (NULL) ORDER BY ((((NOT (rt0.c4)), ((0.24714958391935382) ISNULL), t0.c0 COLLATE RTRIM))<=((((rt0.c4) NOT BETWEEN (rt0.c2) AND (t0.c2)), rt0.c1 COLLATE RTRIM, ((t0.c0)GLOB(rt0.c3))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((NOT (rt0.c4)), ((0.24714958391935382) ISNULL), t0.c0 COLLATE RTRIM))<=((((rt0.c4) NOT BETWEEN (rt0.c2) AND (t0.c2)), rt0.c1 COLLATE RTRIM, ((t0.c0)GLOB(rt0.c3))))) ASC  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (NULL) ORDER BY ((((NOT (rt0.c4)), ((0.24714958391935382) ISNULL), t0.c0 COLLATE RTRIM))<=((((rt0.c4) NOT BETWEEN (rt0.c2) AND (t0.c2)), rt0.c1 COLLATE RTRIM, ((t0.c0)GLOB(rt0.c3))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt12, rt0, vt0 WHERE (ABS(((rt0.c3)<(vt0.c0)))) ORDER BY ((((rt0.c3)<=(vt12.c0)))IS NOT((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((vt12.c0, rt0.c3, vt12.c0)) AND ((vt12.c0, rt0.c4, vt12.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(((rt0.c3)<(vt0.c0)))) IS TRUE)  as count FROM vt12, rt0, vt0 ORDER BY ((((rt0.c3)<=(vt12.c0)))IS NOT((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((vt12.c0, rt0.c3, vt12.c0)) AND ((vt12.c0, rt0.c4, vt12.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt12, rt0, vt0 WHERE (ABS(((rt0.c3)<(vt0.c0)))) ORDER BY ((((rt0.c3)<=(vt12.c0)))IS NOT((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((vt12.c0, rt0.c3, vt12.c0)) AND ((vt12.c0, rt0.c4, vt12.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(((rt0.c3)<(vt0.c0)))) IS TRUE)  as count FROM vt12, rt0, vt0 ORDER BY ((((rt0.c3)<=(vt12.c0)))IS NOT((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((vt12.c0, rt0.c3, vt12.c0)) AND ((vt12.c0, rt0.c4, vt12.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt12, rt0, vt0 WHERE (ABS(((rt0.c3)<(vt0.c0)))) ORDER BY ((((rt0.c3)<=(vt12.c0)))IS NOT((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((vt12.c0, rt0.c3, vt12.c0)) AND ((vt12.c0, rt0.c4, vt12.c0)))))  NULLS LAST;
SELECT ALL * FROM vt0, rt0, vt12 WHERE (((((rt0.c1)LIKE(rt0.c0)))<>(((((rt0.c1)AND(rt0.c2)))OR(vt0.c0))))) ORDER BY ((rt0.c3)IS NOT(vt12.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)LIKE(rt0.c0)))!=(((((rt0.c1)AND(rt0.c2)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, vt12 ORDER BY ((rt0.c3)IS NOT(vt12.c0)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, vt12 WHERE (((((rt0.c1)LIKE(rt0.c0)))<>(((((rt0.c1)AND(rt0.c2)))OR(vt0.c0))))) ORDER BY ((rt0.c3)IS NOT(vt12.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)LIKE(rt0.c0)))!=(((((rt0.c1)AND(rt0.c2)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, vt12 ORDER BY ((rt0.c3)IS NOT(vt12.c0)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, vt12 WHERE (((((rt0.c1)LIKE(rt0.c0)))<>(((((rt0.c1)AND(rt0.c2)))OR(vt0.c0))))) ORDER BY ((rt0.c3)IS NOT(vt12.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT * FROM t0 WHERE ((((((((((+ (t0.c2)))AND((('0.25987568829237273')<>(t0.c2)))))AND(CAST(t0.c2 AS NUMERIC))))AND(t0.c1 COLLATE NOCASE)))OR(TRIM(t0.c0, t0.c0)))) ORDER BY ((((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)))OR((((('E	')OR(t0.c2)))AND(t0.c0)))))OR(CASE WHEN t0.c0 THEN '886837129' ELSE t0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((+ (t0.c2)))AND((('0.25987568829237273')<>(t0.c2)))))AND(CAST(t0.c2 AS NUMERIC))))AND(t0.c1 COLLATE NOCASE)))OR(TRIM(t0.c0, t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)))OR((((('E	')OR(t0.c2)))AND(t0.c0)))))OR(CASE WHEN t0.c0 THEN '886837129' ELSE t0.c0 END)) DESC  NULLS LAST);
SELECT * FROM t0 WHERE ((((((((((+ (t0.c2)))AND((('0.25987568829237273')<>(t0.c2)))))AND(CAST(t0.c2 AS NUMERIC))))AND(t0.c1 COLLATE NOCASE)))OR(TRIM(t0.c0, t0.c0)))) ORDER BY ((((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)))OR((((('E	')OR(t0.c2)))AND(t0.c0)))))OR(CASE WHEN t0.c0 THEN '886837129' ELSE t0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((+ (t0.c2)))AND((('0.25987568829237273')<>(t0.c2)))))AND(CAST(t0.c2 AS NUMERIC))))AND(t0.c1 COLLATE NOCASE)))OR(TRIM(t0.c0, t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)))OR((((('E	')OR(t0.c2)))AND(t0.c0)))))OR(CASE WHEN t0.c0 THEN '886837129' ELSE t0.c0 END)) DESC  NULLS LAST);
SELECT * FROM t0 WHERE ((((((((((+ (t0.c2)))AND((('0.25987568829237273')<>(t0.c2)))))AND(CAST(t0.c2 AS NUMERIC))))AND(t0.c1 COLLATE NOCASE)))OR(TRIM(t0.c0, t0.c0)))) ORDER BY ((((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)))OR((((('E	')OR(t0.c2)))AND(t0.c0)))))OR(CASE WHEN t0.c0 THEN '886837129' ELSE t0.c0 END)) DESC  NULLS LAST;
SELECT * FROM rt0, t0, vt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c4 WHEN t0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 ELSE t0.c2 END)AND(691446002)))AND(CASE WHEN rt0.c2 THEN x'd533a8ec' END))) ORDER BY (((t0.c1))=(((- (rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c2 THEN rt0.c4 WHEN t0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 ELSE t0.c2 END)AND(691446002)))AND(CASE WHEN rt0.c2 THEN x'd533a8ec' END))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((t0.c1))==(((- (rt0.c1)))))  NULLS FIRST);
SELECT * FROM rt0, t0, vt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c4 WHEN t0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 ELSE t0.c2 END)AND(691446002)))AND(CASE WHEN rt0.c2 THEN x'd533a8ec' END))) ORDER BY (((t0.c1))=(((- (rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c2 THEN rt0.c4 WHEN t0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 ELSE t0.c2 END)AND(691446002)))AND(CASE WHEN rt0.c2 THEN x'd533a8ec' END))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((t0.c1))==(((- (rt0.c1)))))  NULLS FIRST);
SELECT * FROM rt0, t0, vt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c4 WHEN t0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 ELSE t0.c2 END)AND(691446002)))AND(CASE WHEN rt0.c2 THEN x'd533a8ec' END))) ORDER BY (((t0.c1))=(((- (rt0.c1)))))  NULLS FIRST;
SELECT COUNT(*) FROM vt12 WHERE ((+ (((vt12.c0)>=(vt12.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt12.c0)>=(vt12.c0))))) IS TRUE)  as count FROM vt12);
SELECT COUNT(*) FROM vt12 WHERE ((+ (((vt12.c0)>=(vt12.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt12.c0)>=(vt12.c0))))) IS TRUE)  as count FROM vt12);
SELECT COUNT(*) FROM vt12 WHERE ((+ (((vt12.c0)>=(vt12.c0)))));
SELECT ALL * FROM vt0, vt12, t0 WHERE ((('4X*') IS FALSE)) ORDER BY ((JULIANDAY(vt0.c0, t0.c0, t0.c0, t0.c2, vt0.c0)) BETWEEN (0.6494825791494574) AND (CAST(t0.c1 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT (((('4X*') IS FALSE)) IS TRUE)  as count FROM vt0, vt12, t0 ORDER BY ((JULIANDAY(vt0.c0, t0.c0, t0.c0, t0.c2, vt0.c0)) BETWEEN (0.6494825791494574) AND (CAST(t0.c1 AS REAL))) DESC);
SELECT ALL * FROM vt0, vt12, t0 WHERE ((('4X*') IS FALSE)) ORDER BY ((JULIANDAY(vt0.c0, t0.c0, t0.c0, t0.c2, vt0.c0)) BETWEEN (0.6494825791494574) AND (CAST(t0.c1 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT (((('4X*') IS FALSE)) IS TRUE)  as count FROM vt0, vt12, t0 ORDER BY ((JULIANDAY(vt0.c0, t0.c0, t0.c0, t0.c2, vt0.c0)) BETWEEN (0.6494825791494574) AND (CAST(t0.c1 AS REAL))) DESC);
SELECT ALL * FROM vt0, vt12, t0 WHERE ((('4X*') IS FALSE)) ORDER BY ((JULIANDAY(vt0.c0, t0.c0, t0.c0, t0.c2, vt0.c0)) BETWEEN (0.6494825791494574) AND (CAST(t0.c1 AS REAL))) DESC;
SELECT ALL * FROM vt12, t0 WHERE ((((+ (t0.c2))) BETWEEN (CASE WHEN t0.c2 THEN t0.c1 WHEN vt12.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND ('9\'))) ORDER BY ((t0.c0)|(t0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c2))) BETWEEN (CASE WHEN t0.c2 THEN t0.c1 WHEN vt12.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND ('9\'))) IS TRUE)  as count FROM vt12, t0 ORDER BY ((t0.c0)|(t0.c0 COLLATE NOCASE)) ASC);
SELECT ALL * FROM vt12, t0 WHERE ((((+ (t0.c2))) BETWEEN (CASE WHEN t0.c2 THEN t0.c1 WHEN vt12.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND ('9\'))) ORDER BY ((t0.c0)|(t0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c2))) BETWEEN (CASE WHEN t0.c2 THEN t0.c1 WHEN vt12.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND ('9\'))) IS TRUE)  as count FROM vt12, t0 ORDER BY ((t0.c0)|(t0.c0 COLLATE NOCASE)) ASC);
SELECT ALL * FROM vt12, t0 WHERE ((((+ (t0.c2))) BETWEEN (CASE WHEN t0.c2 THEN t0.c1 WHEN vt12.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND ('9\'))) ORDER BY ((t0.c0)|(t0.c0 COLLATE NOCASE)) ASC;
SELECT * FROM vt12 NOT INDEXED, vt0, rt0 NATURAL JOIN t0 WHERE (json_array_length(NULL, ((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c3)))) ORDER BY ((NULL)IS((((rt0.c2))<((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((json_array_length(NULL, ((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c3)))) IS TRUE)  as count FROM vt12, vt0, rt0 NATURAL JOIN t0 ORDER BY ((NULL)IS((((rt0.c2))<((rt0.c0))))));
SELECT * FROM vt12 NOT INDEXED, vt0, rt0 NATURAL JOIN t0 WHERE (json_array_length(NULL, ((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c3)))) ORDER BY ((NULL)IS((((rt0.c2))<((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((json_array_length(NULL, ((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c3)))) IS TRUE)  as count FROM vt12, vt0, rt0 NATURAL JOIN t0 ORDER BY ((NULL)IS((((rt0.c2))<((rt0.c0))))));
SELECT * FROM vt12 NOT INDEXED, vt0, rt0 NATURAL JOIN t0 WHERE (json_array_length(NULL, ((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c3)))) ORDER BY ((NULL)IS((((rt0.c2))<((rt0.c0)))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((CASE NULL  WHEN vt0.c0 THEN t0.c1 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE NULL  WHEN vt0.c0 THEN t0.c1 END) NOT NULL)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((CASE NULL  WHEN vt0.c0 THEN t0.c1 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE NULL  WHEN vt0.c0 THEN t0.c1 END) NOT NULL)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((CASE NULL  WHEN vt0.c0 THEN t0.c1 END) NOT NULL));
SELECT COUNT(*) FROM rt0, t0 WHERE ((0.0858728508618597 IN ())) ORDER BY ((((((t0.c2) BETWEEN (rt0.c4) AND (rt0.c0)))AND(((t0.c0) NOT NULL))))OR(NULL COLLATE BINARY)) DESC  NULLS FIRST, (((t0.c2))=((CASE WHEN rt0.c2 THEN t0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN 0.5751481643356231 END)))  NULLS LAST, (((- (rt0.c3))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((0.0858728508618597 IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((t0.c2) BETWEEN (rt0.c4) AND (rt0.c0)))AND(((t0.c0) NOT NULL))))OR(NULL COLLATE BINARY)) DESC  NULLS FIRST, (((t0.c2))==((CASE WHEN rt0.c2 THEN t0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN 0.5751481643356231 END)))  NULLS LAST, (((- (rt0.c3))) NOT NULL));
SELECT COUNT(*) FROM rt0, t0 WHERE ((0.0858728508618597 IN ())) ORDER BY ((((((t0.c2) BETWEEN (rt0.c4) AND (rt0.c0)))AND(((t0.c0) NOT NULL))))OR(NULL COLLATE BINARY)) DESC  NULLS FIRST, (((t0.c2))=((CASE WHEN rt0.c2 THEN t0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN 0.5751481643356231 END)))  NULLS LAST, (((- (rt0.c3))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((0.0858728508618597 IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((t0.c2) BETWEEN (rt0.c4) AND (rt0.c0)))AND(((t0.c0) NOT NULL))))OR(NULL COLLATE BINARY)) DESC  NULLS FIRST, (((t0.c2))==((CASE WHEN rt0.c2 THEN t0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN 0.5751481643356231 END)))  NULLS LAST, (((- (rt0.c3))) NOT NULL));
SELECT COUNT(*) FROM rt0, t0 WHERE ((0.0858728508618597 IN ())) ORDER BY ((((((t0.c2) BETWEEN (rt0.c4) AND (rt0.c0)))AND(((t0.c0) NOT NULL))))OR(NULL COLLATE BINARY)) DESC  NULLS FIRST, (((t0.c2))=((CASE WHEN rt0.c2 THEN t0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN 0.5751481643356231 END)))  NULLS LAST, (((- (rt0.c3))) NOT NULL);
SELECT ALL * FROM t0 WHERE (((t0.c1) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c1) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c1) NOTNULL) COLLATE BINARY);
SELECT ALL * FROM t0, vt0, vt12 WHERE (CAST(vt0.c0 COLLATE RTRIM AS TEXT)) ORDER BY t0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM t0, vt0, vt12 ORDER BY t0.c2 DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0, vt12 WHERE (CAST(vt0.c0 COLLATE RTRIM AS TEXT)) ORDER BY t0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM t0, vt0, vt12 ORDER BY t0.c2 DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0, vt12 WHERE (CAST(vt0.c0 COLLATE RTRIM AS TEXT)) ORDER BY t0.c2 DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt12, vt0 WHERE ((((vt0.c0 IN (vt12.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt12.c0))) IS TRUE)) IS TRUE)  as count FROM vt12, vt0);
SELECT COUNT(*) FROM vt12, vt0 WHERE ((((vt0.c0 IN (vt12.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt12.c0))) IS TRUE)) IS TRUE)  as count FROM vt12, vt0);
SELECT COUNT(*) FROM vt12, vt0 WHERE ((((vt0.c0 IN (vt12.c0))) IS TRUE));
SELECT ALL * FROM t0, vt12, vt0 FULL OUTER JOIN rt0 ON rt0.c1 WHERE (CAST(((rt0.c4) BETWEEN (rt0.c3) AND (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c4) BETWEEN (rt0.c3) AND (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM t0, vt12, vt0 FULL OUTER JOIN rt0 ON rt0.c1);
SELECT ALL * FROM t0, vt12, vt0 FULL OUTER JOIN rt0 ON rt0.c1 WHERE (CAST(((rt0.c4) BETWEEN (rt0.c3) AND (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c4) BETWEEN (rt0.c3) AND (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM t0, vt12, vt0 FULL OUTER JOIN rt0 ON rt0.c1);
SELECT ALL * FROM t0, vt12, vt0 FULL OUTER JOIN rt0 ON rt0.c1 WHERE (CAST(((rt0.c4) BETWEEN (rt0.c3) AND (vt0.c0)) AS TEXT));
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c1) BETWEEN (t0.c1) AND (t0.c1)))AND(TRIM(t0.c1))))OR(t0.c0 COLLATE BINARY))) ORDER BY CASE ((t0.c1)<<(t0.c1))  WHEN ((t0.c2) BETWEEN (t0.c0) AND (t0.c2)) THEN CAST(t0.c2 AS TEXT) WHEN t0.c1 COLLATE NOCASE THEN ((t0.c1)||(t0.c1)) WHEN ((t0.c0)-(t0.c2)) THEN (t0.c2 IN ()) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1) BETWEEN (t0.c1) AND (t0.c1)))AND(TRIM(t0.c1))))OR(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c1)<<(t0.c1))  WHEN ((t0.c2) BETWEEN (t0.c0) AND (t0.c2)) THEN CAST(t0.c2 AS TEXT) WHEN t0.c1 COLLATE NOCASE THEN ((t0.c1)||(t0.c1)) WHEN ((t0.c0)-(t0.c2)) THEN (t0.c2 IN ()) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c1) BETWEEN (t0.c1) AND (t0.c1)))AND(TRIM(t0.c1))))OR(t0.c0 COLLATE BINARY))) ORDER BY CASE ((t0.c1)<<(t0.c1))  WHEN ((t0.c2) BETWEEN (t0.c0) AND (t0.c2)) THEN CAST(t0.c2 AS TEXT) WHEN t0.c1 COLLATE NOCASE THEN ((t0.c1)||(t0.c1)) WHEN ((t0.c0)-(t0.c2)) THEN (t0.c2 IN ()) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1) BETWEEN (t0.c1) AND (t0.c1)))AND(TRIM(t0.c1))))OR(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c1)<<(t0.c1))  WHEN ((t0.c2) BETWEEN (t0.c0) AND (t0.c2)) THEN CAST(t0.c2 AS TEXT) WHEN t0.c1 COLLATE NOCASE THEN ((t0.c1)||(t0.c1)) WHEN ((t0.c0)-(t0.c2)) THEN (t0.c2 IN ()) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c1) BETWEEN (t0.c1) AND (t0.c1)))AND(TRIM(t0.c1))))OR(t0.c0 COLLATE BINARY))) ORDER BY CASE ((t0.c1)<<(t0.c1))  WHEN ((t0.c2) BETWEEN (t0.c0) AND (t0.c2)) THEN CAST(t0.c2 AS TEXT) WHEN t0.c1 COLLATE NOCASE THEN ((t0.c1)||(t0.c1)) WHEN ((t0.c0)-(t0.c2)) THEN (t0.c2 IN ()) END DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((rt0.c2, rt0.c3, rt0.c3)) BETWEEN ((UNLIKELY(0.25987568829237273), ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)), ((0.4535551606964291)%(rt0.c3)))) AND ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END, (rt0.c0 IN ()), CAST(rt0.c2 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c3, rt0.c3)) BETWEEN ((UNLIKELY(0.25987568829237273), ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)), ((0.4535551606964291)%(rt0.c3)))) AND ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END, (rt0.c0 IN ()), CAST(rt0.c2 AS TEXT))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2, rt0.c3, rt0.c3)) BETWEEN ((UNLIKELY(0.25987568829237273), ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)), ((0.4535551606964291)%(rt0.c3)))) AND ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END, (rt0.c0 IN ()), CAST(rt0.c2 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c3, rt0.c3)) BETWEEN ((UNLIKELY(0.25987568829237273), ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)), ((0.4535551606964291)%(rt0.c3)))) AND ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END, (rt0.c0 IN ()), CAST(rt0.c2 AS TEXT))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2, rt0.c3, rt0.c3)) BETWEEN ((UNLIKELY(0.25987568829237273), ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)), ((0.4535551606964291)%(rt0.c3)))) AND ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END, (rt0.c0 IN ()), CAST(rt0.c2 AS TEXT)))));
SELECT ALL COUNT(*) FROM rt0, vt12, t0, vt0 WHERE ((((+ (rt0.c1))) NOT BETWEEN (NULL) AND ((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1))) NOT BETWEEN (NULL) AND ((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0, vt12, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt12, t0, vt0 WHERE ((((+ (rt0.c1))) NOT BETWEEN (NULL) AND ((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1))) NOT BETWEEN (NULL) AND ((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0, vt12, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt12, t0, vt0 WHERE ((((+ (rt0.c1))) NOT BETWEEN (NULL) AND ((NOT (rt0.c1)))));
SELECT ALL * FROM vt12 CROSS JOIN t0 ON (NOT ((((t0.c0, t0.c2, vt0.c0))>((vt0.c0, vt12.c0, vt12.c0))))) FULL OUTER JOIN vt0 ON ((((t0.c1) IS TRUE)) NOT BETWEEN ((~ (t0.c1))) AND (t0.c0)) WHERE ((x'ea47' IN (CAST(t0.c1 AS TEXT)))) ORDER BY NULLIF(DISTINCT ((t0.c0)>=(vt12.c0)), (t0.c2 IN (t0.c2, t0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((x'ea47' IN (CAST(t0.c1 AS TEXT)))) IS TRUE)  as count FROM vt12 CROSS JOIN t0 ON (NOT ((((t0.c0, t0.c2, vt0.c0))>((vt0.c0, vt12.c0, vt12.c0))))) FULL OUTER JOIN vt0 ON ((((t0.c1) IS TRUE)) NOT BETWEEN ((~ (t0.c1))) AND (t0.c0)) ORDER BY NULLIF(DISTINCT ((t0.c0)>=(vt12.c0)), (t0.c2 IN (t0.c2, t0.c2))) ASC);
SELECT ALL * FROM vt12 CROSS JOIN t0 ON (NOT ((((t0.c0, t0.c2, vt0.c0))>((vt0.c0, vt12.c0, vt12.c0))))) FULL OUTER JOIN vt0 ON ((((t0.c1) IS TRUE)) NOT BETWEEN ((~ (t0.c1))) AND (t0.c0)) WHERE ((x'ea47' IN (CAST(t0.c1 AS TEXT)))) ORDER BY NULLIF(DISTINCT ((t0.c0)>=(vt12.c0)), (t0.c2 IN (t0.c2, t0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((x'ea47' IN (CAST(t0.c1 AS TEXT)))) IS TRUE)  as count FROM vt12 CROSS JOIN t0 ON (NOT ((((t0.c0, t0.c2, vt0.c0))>((vt0.c0, vt12.c0, vt12.c0))))) FULL OUTER JOIN vt0 ON ((((t0.c1) IS TRUE)) NOT BETWEEN ((~ (t0.c1))) AND (t0.c0)) ORDER BY NULLIF(DISTINCT ((t0.c0)>=(vt12.c0)), (t0.c2 IN (t0.c2, t0.c2))) ASC);
SELECT * FROM vt0, vt12, rt0 WHERE (((x'') BETWEEN (TRIM(vt0.c0, rt0.c4)) AND (((rt0.c4)OR(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN (TRIM(vt0.c0, rt0.c4)) AND (((rt0.c4)OR(rt0.c4))))) IS TRUE)  as count FROM vt0, vt12, rt0);
SELECT * FROM vt0, vt12, rt0 WHERE (((x'') BETWEEN (TRIM(vt0.c0, rt0.c4)) AND (((rt0.c4)OR(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN (TRIM(vt0.c0, rt0.c4)) AND (((rt0.c4)OR(rt0.c4))))) IS TRUE)  as count FROM vt0, vt12, rt0);
SELECT * FROM vt0, vt12, rt0 WHERE (((x'') BETWEEN (TRIM(vt0.c0, rt0.c4)) AND (((rt0.c4)OR(rt0.c4)))));
SELECT ALL * FROM t0, vt0, vt12 INNER JOIN rt0 ON CAST((- (rt0.c4)) AS TEXT) WHERE (((((t0.c2)<=(vt12.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)<=(vt12.c0))) IS FALSE)) IS TRUE)  as count FROM t0, vt0, vt12 INNER JOIN rt0 ON CAST((- (rt0.c4)) AS TEXT));
SELECT ALL * FROM t0, vt0, vt12 INNER JOIN rt0 ON CAST((- (rt0.c4)) AS TEXT) WHERE (((((t0.c2)<=(vt12.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)<=(vt12.c0))) IS FALSE)) IS TRUE)  as count FROM t0, vt0, vt12 INNER JOIN rt0 ON CAST((- (rt0.c4)) AS TEXT));
SELECT ALL * FROM t0, vt0, vt12 INNER JOIN rt0 ON CAST((- (rt0.c4)) AS TEXT) WHERE (((((t0.c2)<=(vt12.c0))) IS FALSE));
SELECT ALL * FROM t0, vt12, vt0, rt0 WHERE ((((NOT (rt0.c4))) BETWEEN (((t0.c1) BETWEEN ('') AND (t0.c1))) AND (((vt12.c0)&(vt12.c0))))) ORDER BY CASE ((rt0.c3)<>(rt0.c1))  WHEN rt0.c1 THEN rt0.c2 ELSE ((t0.c2) NOT BETWEEN (rt0.c2) AND (t0.c0)) END;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c4))) BETWEEN (((t0.c1) BETWEEN ('') AND (t0.c1))) AND (((vt12.c0)&(vt12.c0))))) IS TRUE)  as count FROM t0, vt12, vt0 NOT INDEXED, rt0 ORDER BY CASE ((rt0.c3)<>(rt0.c1))  WHEN rt0.c1 THEN rt0.c2 ELSE ((t0.c2) NOT BETWEEN (rt0.c2) AND (t0.c0)) END);
SELECT ALL * FROM t0, vt12, vt0, rt0 WHERE ((((NOT (rt0.c4))) BETWEEN (((t0.c1) BETWEEN ('') AND (t0.c1))) AND (((vt12.c0)&(vt12.c0))))) ORDER BY CASE ((rt0.c3)<>(rt0.c1))  WHEN rt0.c1 THEN rt0.c2 ELSE ((t0.c2) NOT BETWEEN (rt0.c2) AND (t0.c0)) END;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c4))) BETWEEN (((t0.c1) BETWEEN ('') AND (t0.c1))) AND (((vt12.c0)&(vt12.c0))))) IS TRUE)  as count FROM t0, vt12, vt0 NOT INDEXED, rt0 ORDER BY CASE ((rt0.c3)<>(rt0.c1))  WHEN rt0.c1 THEN rt0.c2 ELSE ((t0.c2) NOT BETWEEN (rt0.c2) AND (t0.c0)) END);
SELECT ALL * FROM t0, vt12, vt0, rt0 WHERE ((((NOT (rt0.c4))) BETWEEN (((t0.c1) BETWEEN ('') AND (t0.c1))) AND (((vt12.c0)&(vt12.c0))))) ORDER BY CASE ((rt0.c3)<>(rt0.c1))  WHEN rt0.c1 THEN rt0.c2 ELSE ((t0.c2) NOT BETWEEN (rt0.c2) AND (t0.c0)) END;
SELECT * FROM t0, rt0, vt0 WHERE (CASE NULL  WHEN ((rt0.c0) NOT NULL) THEN ((vt0.c0)<(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN ((rt0.c0) NOT NULL) THEN ((vt0.c0)<(vt0.c0)) END) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (CASE NULL  WHEN ((rt0.c0) NOT NULL) THEN ((vt0.c0)<(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN ((rt0.c0) NOT NULL) THEN ((vt0.c0)<(vt0.c0)) END) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (CASE NULL  WHEN ((rt0.c0) NOT NULL) THEN ((vt0.c0)<(vt0.c0)) END);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c2)<(t0.c2)))OR(((t0.c2)*(t0.c2)))))OR((((t0.c0))<((t0.c1)))))) ORDER BY ((((t0.c2)<=(t0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 1.109581873E9 WHEN -839776739 THEN 0.45089434197966705 END) AND (t0.c1));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)<(t0.c2)))OR(((t0.c2)*(t0.c2)))))OR((((t0.c0))<((t0.c1)))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2)<=(t0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 1.109581873E9 WHEN -839776739 THEN 0.45089434197966705 END) AND (t0.c1)));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c2)<(t0.c2)))OR(((t0.c2)*(t0.c2)))))OR((((t0.c0))<((t0.c1)))))) ORDER BY ((((t0.c2)<=(t0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 1.109581873E9 WHEN -839776739 THEN 0.45089434197966705 END) AND (t0.c1));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)<(t0.c2)))OR(((t0.c2)*(t0.c2)))))OR((((t0.c0))<((t0.c1)))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2)<=(t0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 1.109581873E9 WHEN -839776739 THEN 0.45089434197966705 END) AND (t0.c1)));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c2)<(t0.c2)))OR(((t0.c2)*(t0.c2)))))OR((((t0.c0))<((t0.c1)))))) ORDER BY ((((t0.c2)<=(t0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 1.109581873E9 WHEN -839776739 THEN 0.45089434197966705 END) AND (t0.c1));
SELECT * FROM rt0, vt0, vt12, t0 WHERE (rt0.c3) ORDER BY ((('缭㓾')|(t0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt0, vt12, t0 ORDER BY ((('缭㓾')|(t0.c1)) IN ()));
SELECT * FROM rt0, vt0, vt12, t0 WHERE (rt0.c3) ORDER BY ((('缭㓾')|(t0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt0, vt12, t0 ORDER BY ((('缭㓾')|(t0.c1)) IN ()));
SELECT * FROM rt0, vt0, vt12, t0 WHERE (rt0.c3) ORDER BY ((('缭㓾')|(t0.c1)) IN ());
SELECT ALL * FROM vt12, vt0 INNER JOIN rt0 ON (((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c4)))AND(rt0.c3)))AND(vt0.c0)) IN ()) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt12, vt0 INNER JOIN rt0 ON (((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c4)))AND(rt0.c3)))AND(vt0.c0)) IN ()));
SELECT ALL * FROM vt12, vt0 INNER JOIN rt0 ON (((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c4)))AND(rt0.c3)))AND(vt0.c0)) IN ()) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt12, vt0 INNER JOIN rt0 ON (((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c4)))AND(rt0.c3)))AND(vt0.c0)) IN ()));
SELECT ALL * FROM vt12, vt0 INNER JOIN rt0 ON (((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c4)))AND(rt0.c3)))AND(vt0.c0)) IN ()) WHERE (rt0.c3);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt12 ON (((t0.c2)) BETWEEN ((((rt0.c2) NOT NULL))) AND ((NULL))) LEFT OUTER JOIN t0 ON CAST(((t0.c0) NOT NULL) AS INTEGER) WHERE ((NOT ((rt0.c0 IN (vt12.c0, rt0.c1))))) ORDER BY ((((t0.c0)|(0xffffffffc4dc34fe)))<>(((vt12.c0)-(t0.c0)))), CASE rt0.c1  WHEN (vt12.c0 IN ()) THEN (((t0.c0)) BETWEEN ((rt0.c3)) AND ((vt12.c0))) WHEN ((rt0.c0)<<(rt0.c1)) THEN CASE rt0.c2  WHEN t0.c2 THEN t0.c2 END WHEN ((((((((((((t0.c0)AND(t0.c0)))OR('X^')))OR(t0.c2)))OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c0)) THEN NULL ELSE ((((t0.c2)OR(x'')))AND(t0.c0)) END ASC, CAST(((rt0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((NOT ((rt0.c0 IN (vt12.c0, rt0.c1))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt12 ON (((t0.c2)) BETWEEN ((((rt0.c2) NOT NULL))) AND ((NULL))) LEFT OUTER JOIN t0 ON CAST(((t0.c0) NOT NULL) AS INTEGER) ORDER BY ((((t0.c0)|(0xffffffffc4dc34fe)))!=(((vt12.c0)-(t0.c0)))), CASE rt0.c1  WHEN (vt12.c0 IN ()) THEN (((t0.c0)) BETWEEN ((rt0.c3)) AND ((vt12.c0))) WHEN ((rt0.c0)<<(rt0.c1)) THEN CASE rt0.c2  WHEN t0.c2 THEN t0.c2 END WHEN ((((((((((((t0.c0)AND(t0.c0)))OR('X^')))OR(t0.c2)))OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c0)) THEN NULL ELSE ((((t0.c2)OR(x'')))AND(t0.c0)) END ASC, CAST(((rt0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) AS INTEGER));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt12 ON (((t0.c2)) BETWEEN ((((rt0.c2) NOT NULL))) AND ((NULL))) LEFT OUTER JOIN t0 ON CAST(((t0.c0) NOT NULL) AS INTEGER) WHERE ((NOT ((rt0.c0 IN (vt12.c0, rt0.c1))))) ORDER BY ((((t0.c0)|(0xffffffffc4dc34fe)))<>(((vt12.c0)-(t0.c0)))), CASE rt0.c1  WHEN (vt12.c0 IN ()) THEN (((t0.c0)) BETWEEN ((rt0.c3)) AND ((vt12.c0))) WHEN ((rt0.c0)<<(rt0.c1)) THEN CASE rt0.c2  WHEN t0.c2 THEN t0.c2 END WHEN ((((((((((((t0.c0)AND(t0.c0)))OR('X^')))OR(t0.c2)))OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c0)) THEN NULL ELSE ((((t0.c2)OR(x'')))AND(t0.c0)) END ASC, CAST(((rt0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((NOT ((rt0.c0 IN (vt12.c0, rt0.c1))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt12 ON (((t0.c2)) BETWEEN ((((rt0.c2) NOT NULL))) AND ((NULL))) LEFT OUTER JOIN t0 ON CAST(((t0.c0) NOT NULL) AS INTEGER) ORDER BY ((((t0.c0)|(0xffffffffc4dc34fe)))!=(((vt12.c0)-(t0.c0)))), CASE rt0.c1  WHEN (vt12.c0 IN ()) THEN (((t0.c0)) BETWEEN ((rt0.c3)) AND ((vt12.c0))) WHEN ((rt0.c0)<<(rt0.c1)) THEN CASE rt0.c2  WHEN t0.c2 THEN t0.c2 END WHEN ((((((((((((t0.c0)AND(t0.c0)))OR('X^')))OR(t0.c2)))OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c0)) THEN NULL ELSE ((((t0.c2)OR(x'')))AND(t0.c0)) END ASC, CAST(((rt0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) AS INTEGER));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt12 ON (((t0.c2)) BETWEEN ((((rt0.c2) NOT NULL))) AND ((NULL))) LEFT OUTER JOIN t0 ON CAST(((t0.c0) NOT NULL) AS INTEGER) WHERE ((NOT ((rt0.c0 IN (vt12.c0, rt0.c1))))) ORDER BY ((((t0.c0)|(0xffffffffc4dc34fe)))<>(((vt12.c0)-(t0.c0)))), CASE rt0.c1  WHEN (vt12.c0 IN ()) THEN (((t0.c0)) BETWEEN ((rt0.c3)) AND ((vt12.c0))) WHEN ((rt0.c0)<<(rt0.c1)) THEN CASE rt0.c2  WHEN t0.c2 THEN t0.c2 END WHEN ((((((((((((t0.c0)AND(t0.c0)))OR('X^')))OR(t0.c2)))OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c0)) THEN NULL ELSE ((((t0.c2)OR(x'')))AND(t0.c0)) END ASC, CAST(((rt0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) AS INTEGER);
SELECT * FROM rt0, t0 WHERE (((((- (rt0.c0))))<>((((rt0.c3) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((- (rt0.c0))))<>((((rt0.c3) NOTNULL))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((((- (rt0.c0))))<>((((rt0.c3) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((- (rt0.c0))))<>((((rt0.c3) NOTNULL))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((((- (rt0.c0))))<>((((rt0.c3) NOTNULL)))));
SELECT ALL * FROM vt0, vt12, t0 WHERE (TRIM(DISTINCT ABS(t0.c1), '211722826')) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ABS(t0.c1), '211722826')) IS TRUE)  as count FROM vt0, vt12, t0 ORDER BY x'' DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt12, t0 WHERE (TRIM(DISTINCT ABS(t0.c1), '211722826')) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ABS(t0.c1), '211722826')) IS TRUE)  as count FROM vt0, vt12, t0 ORDER BY x'' DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt12, t0 WHERE (TRIM(DISTINCT ABS(t0.c1), '211722826')) ORDER BY x'' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c2)AND(x'fa25')) THEN CASE WHEN t0.c2 THEN t0.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c2)AND(x'fa25')) THEN CASE WHEN t0.c2 THEN t0.c1 END END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c2)AND(x'fa25')) THEN CASE WHEN t0.c2 THEN t0.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c2)AND(x'fa25')) THEN CASE WHEN t0.c2 THEN t0.c1 END END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c2)AND(x'fa25')) THEN CASE WHEN t0.c2 THEN t0.c1 END END);
SELECT COUNT(*) FROM vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (NULL);
SELECT COUNT(*) FROM vt12 WHERE (COALESCE(DISTINCT (NOT (vt12.c0)), vt12.c0));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (NOT (vt12.c0)), vt12.c0)) IS TRUE)  as count FROM vt12);
SELECT COUNT(*) FROM vt12 WHERE (COALESCE(DISTINCT (NOT (vt12.c0)), vt12.c0));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (NOT (vt12.c0)), vt12.c0)) IS TRUE)  as count FROM vt12);
SELECT COUNT(*) FROM vt12 WHERE (COALESCE(DISTINCT (NOT (vt12.c0)), vt12.c0));
SELECT ALL * FROM vt12, rt0, t0 WHERE (((rt0.c1)GLOB(0.08748698815418932)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)GLOB(0.08748698815418932)) COLLATE NOCASE) IS TRUE)  as count FROM vt12, rt0, t0);
SELECT ALL * FROM vt12, rt0, t0 WHERE (((rt0.c1)GLOB(0.08748698815418932)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)GLOB(0.08748698815418932)) COLLATE NOCASE) IS TRUE)  as count FROM vt12, rt0, t0);
SELECT ALL * FROM vt12, rt0, t0 WHERE (((rt0.c1)GLOB(0.08748698815418932)) COLLATE NOCASE);
SELECT ALL * FROM vt0, rt0, vt12, t0 WHERE (TYPEOF(DISTINCT ((t0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) ORDER BY (((t0.c0, rt0.c4, t0.c2)) NOT BETWEEN (((((t0.c1)) BETWEEN ((rt0.c2)) AND (('k~J[p^r('))), (x'' IN (vt0.c0)), ((rt0.c2)&(t0.c2)))) AND ((t0.c2 COLLATE NOCASE, ((t0.c0)GLOB(rt0.c0)), ((rt0.c4)>=(rt0.c4))))) DESC, LIKELIHOOD(CASE NULL  WHEN rt0.c4 THEN vt12.c0 END, 0.7191590230256166)  NULLS LAST, CAST(((x'') ISNULL) AS REAL)  NULLS FIRST, ((LIKELY(DISTINCT t0.c2)) BETWEEN (RTRIM(t0.c1)) AND ((t0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((t0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) IS TRUE)  as count FROM vt0, rt0, vt12, t0 ORDER BY (((t0.c0, rt0.c4, t0.c2)) NOT BETWEEN (((((t0.c1)) BETWEEN ((rt0.c2)) AND (('k~J[p^r('))), (x'' IN (vt0.c0)), ((rt0.c2)&(t0.c2)))) AND ((t0.c2 COLLATE NOCASE, ((t0.c0)GLOB(rt0.c0)), ((rt0.c4)>=(rt0.c4))))) DESC, LIKELIHOOD(CASE NULL  WHEN rt0.c4 THEN vt12.c0 END, 0.7191590230256166)  NULLS LAST, CAST(((x'') ISNULL) AS REAL)  NULLS FIRST, ((LIKELY(DISTINCT t0.c2)) BETWEEN (RTRIM(t0.c1)) AND ((t0.c1 IN ()))));
SELECT ALL * FROM vt0, rt0, vt12, t0 WHERE (TYPEOF(DISTINCT ((t0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) ORDER BY (((t0.c0, rt0.c4, t0.c2)) NOT BETWEEN (((((t0.c1)) BETWEEN ((rt0.c2)) AND (('k~J[p^r('))), (x'' IN (vt0.c0)), ((rt0.c2)&(t0.c2)))) AND ((t0.c2 COLLATE NOCASE, ((t0.c0)GLOB(rt0.c0)), ((rt0.c4)>=(rt0.c4))))) DESC, LIKELIHOOD(CASE NULL  WHEN rt0.c4 THEN vt12.c0 END, 0.7191590230256166)  NULLS LAST, CAST(((x'') ISNULL) AS REAL)  NULLS FIRST, ((LIKELY(DISTINCT t0.c2)) BETWEEN (RTRIM(t0.c1)) AND ((t0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((t0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) IS TRUE)  as count FROM vt0, rt0, vt12, t0 ORDER BY (((t0.c0, rt0.c4, t0.c2)) NOT BETWEEN (((((t0.c1)) BETWEEN ((rt0.c2)) AND (('k~J[p^r('))), (x'' IN (vt0.c0)), ((rt0.c2)&(t0.c2)))) AND ((t0.c2 COLLATE NOCASE, ((t0.c0)GLOB(rt0.c0)), ((rt0.c4)>=(rt0.c4))))) DESC, LIKELIHOOD(CASE NULL  WHEN rt0.c4 THEN vt12.c0 END, 0.7191590230256166)  NULLS LAST, CAST(((x'') ISNULL) AS REAL)  NULLS FIRST, ((LIKELY(DISTINCT t0.c2)) BETWEEN (RTRIM(t0.c1)) AND ((t0.c1 IN ()))));
SELECT ALL * FROM vt0, rt0, vt12, t0 WHERE (TYPEOF(DISTINCT ((t0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) ORDER BY (((t0.c0, rt0.c4, t0.c2)) NOT BETWEEN (((((t0.c1)) BETWEEN ((rt0.c2)) AND (('k~J[p^r('))), (x'' IN (vt0.c0)), ((rt0.c2)&(t0.c2)))) AND ((t0.c2 COLLATE NOCASE, ((t0.c0)GLOB(rt0.c0)), ((rt0.c4)>=(rt0.c4))))) DESC, LIKELIHOOD(CASE NULL  WHEN rt0.c4 THEN vt12.c0 END, 0.7191590230256166)  NULLS LAST, CAST(((x'') ISNULL) AS REAL)  NULLS FIRST, ((LIKELY(DISTINCT t0.c2)) BETWEEN (RTRIM(t0.c1)) AND ((t0.c1 IN ())));
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) NOT BETWEEN ((((''))<((vt0.c0)))) AND (((((0X542e8360)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0))) NOT BETWEEN ((((''))<((vt0.c0)))) AND (((((0x542e8360)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) NOT BETWEEN ((((''))<((vt0.c0)))) AND (((((0X542e8360)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0))) NOT BETWEEN ((((''))<((vt0.c0)))) AND (((((0x542e8360)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) NOT BETWEEN ((((''))<((vt0.c0)))) AND (((((0X542e8360)OR(vt0.c0)))OR(vt0.c0)))));
SELECT COUNT(*) FROM rt0, t0 WHERE (((TRIM(0.9676591766806645, rt0.c2))GLOB((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(0.9676591766806645, rt0.c2))GLOB((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((TRIM(0.9676591766806645, rt0.c2))GLOB((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(0.9676591766806645, rt0.c2))GLOB((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((TRIM(0.9676591766806645, rt0.c2))GLOB((rt0.c2 IN ()))));
SELECT COUNT(*) FROM vt0, vt12, t0 WHERE (CASE WHEN t0.c0 THEN CAST(t0.c0 AS INTEGER) ELSE (t0.c0 IN (vt0.c0)) END) ORDER BY ((vt0.c0) NOT BETWEEN (((((vt0.c0)OR(t0.c1)))AND(t0.c1))) AND (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c0 THEN CAST(t0.c0 AS INTEGER) ELSE (t0.c0 IN (vt0.c0)) END) IS TRUE)  as count FROM vt0, vt12, t0 ORDER BY ((vt0.c0) NOT BETWEEN (((((vt0.c0)OR(t0.c1)))AND(t0.c1))) AND (NULL))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt12, t0 WHERE (CASE WHEN t0.c0 THEN CAST(t0.c0 AS INTEGER) ELSE (t0.c0 IN (vt0.c0)) END) ORDER BY ((vt0.c0) NOT BETWEEN (((((vt0.c0)OR(t0.c1)))AND(t0.c1))) AND (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c0 THEN CAST(t0.c0 AS INTEGER) ELSE (t0.c0 IN (vt0.c0)) END) IS TRUE)  as count FROM vt0, vt12, t0 ORDER BY ((vt0.c0) NOT BETWEEN (((((vt0.c0)OR(t0.c1)))AND(t0.c1))) AND (NULL))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt12, t0 WHERE (CASE WHEN t0.c0 THEN CAST(t0.c0 AS INTEGER) ELSE (t0.c0 IN (vt0.c0)) END) ORDER BY ((vt0.c0) NOT BETWEEN (((((vt0.c0)OR(t0.c1)))AND(t0.c1))) AND (NULL))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt12, t0 WHERE (((((((vt12.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))OR((((vt12.c0))<((vt12.c0))))))OR(CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt12.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))OR((((vt12.c0))<((vt12.c0))))))OR(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0, vt12, t0);
SELECT COUNT(*) FROM rt0, vt12, t0 WHERE (((((((vt12.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))OR((((vt12.c0))<((vt12.c0))))))OR(CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt12.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))OR((((vt12.c0))<((vt12.c0))))))OR(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0, vt12, t0);
SELECT COUNT(*) FROM rt0, vt12, t0 WHERE (((((((vt12.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))OR((((vt12.c0))<((vt12.c0))))))OR(CAST(rt0.c2 AS TEXT))));
SELECT ALL COUNT(*) FROM vt12, vt0, t0 WHERE ((((((vt0.c0) IS FALSE), CAST(t0.c1 AS NUMERIC), ((vt0.c0)IS NOT(t0.c0))))<=((t0.c1, ((vt12.c0) BETWEEN (t0.c1) AND (t0.c0)), json_array(vt12.c0, t0.c2, vt0.c0, vt12.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) IS FALSE), CAST(t0.c1 AS NUMERIC), ((vt0.c0)IS NOT(t0.c0))))<=((t0.c1, ((vt12.c0) BETWEEN (t0.c1) AND (t0.c0)), json_array(vt12.c0, t0.c2, vt0.c0, vt12.c0))))) IS TRUE)  as count FROM vt12, vt0, t0);
SELECT ALL COUNT(*) FROM vt12, vt0, t0 WHERE ((((((vt0.c0) IS FALSE), CAST(t0.c1 AS NUMERIC), ((vt0.c0)IS NOT(t0.c0))))<=((t0.c1, ((vt12.c0) BETWEEN (t0.c1) AND (t0.c0)), json_array(vt12.c0, t0.c2, vt0.c0, vt12.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) IS FALSE), CAST(t0.c1 AS NUMERIC), ((vt0.c0)IS NOT(t0.c0))))<=((t0.c1, ((vt12.c0) BETWEEN (t0.c1) AND (t0.c0)), json_array(vt12.c0, t0.c2, vt0.c0, vt12.c0))))) IS TRUE)  as count FROM vt12, vt0, t0);
SELECT ALL COUNT(*) FROM vt12, vt0, t0 WHERE ((((((vt0.c0) IS FALSE), CAST(t0.c1 AS NUMERIC), ((vt0.c0)IS NOT(t0.c0))))<=((t0.c1, ((vt12.c0) BETWEEN (t0.c1) AND (t0.c0)), json_array(vt12.c0, t0.c2, vt0.c0, vt12.c0)))));
SELECT ALL * FROM t0 WHERE (((CAST(t0.c2 AS TEXT)) BETWEEN (((t0.c0) IS TRUE)) AND (((t0.c1) NOT NULL)))) ORDER BY (~ ((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS TEXT)) BETWEEN (((t0.c0) IS TRUE)) AND (((t0.c1) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY (~ ((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))))) DESC);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c2 AS TEXT)) BETWEEN (((t0.c0) IS TRUE)) AND (((t0.c1) NOT NULL)))) ORDER BY (~ ((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS TEXT)) BETWEEN (((t0.c0) IS TRUE)) AND (((t0.c1) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY (~ ((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))))) DESC);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c2 AS TEXT)) BETWEEN (((t0.c0) IS TRUE)) AND (((t0.c1) NOT NULL)))) ORDER BY (~ ((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))))) DESC;
SELECT ALL * FROM vt0, vt12 WHERE (((vt0.c0 COLLATE NOCASE)>=(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)>=(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, vt12);
SELECT ALL * FROM vt0, vt12 WHERE (((vt0.c0 COLLATE NOCASE)>=(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)>=(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, vt12);
SELECT ALL * FROM vt0, vt12 WHERE (((vt0.c0 COLLATE NOCASE)>=(CAST(vt0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1 IN ()))*(((((t0.c2)OR(t0.c1)))AND(t0.c2))))) ORDER BY ((t0.c2)&((+ (t0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ()))*(((((t0.c2)OR(t0.c1)))AND(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2)&((+ (t0.c1)))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1 IN ()))*(((((t0.c2)OR(t0.c1)))AND(t0.c2))))) ORDER BY ((t0.c2)&((+ (t0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ()))*(((((t0.c2)OR(t0.c1)))AND(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2)&((+ (t0.c1)))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1 IN ()))*(((((t0.c2)OR(t0.c1)))AND(t0.c2))))) ORDER BY ((t0.c2)&((+ (t0.c1)))) DESC;
SELECT ALL COUNT(*) FROM rt0, vt12, vt0 NATURAL JOIN t0 WHERE (((CASE x'716f'  WHEN rt0.c0 THEN vt12.c0 ELSE rt0.c2 END)<=(CASE rt0.c1  WHEN t0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c3 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN rt0.c1 ELSE t0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((CASE x'716f'  WHEN rt0.c0 THEN vt12.c0 ELSE rt0.c2 END)<=(CASE rt0.c1  WHEN t0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c3 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN rt0.c1 ELSE t0.c1 END))) IS TRUE)  as count FROM rt0, vt12, vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM rt0, vt12, vt0 NATURAL JOIN t0 WHERE (((CASE x'716f'  WHEN rt0.c0 THEN vt12.c0 ELSE rt0.c2 END)<=(CASE rt0.c1  WHEN t0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c3 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN rt0.c1 ELSE t0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((CASE x'716f'  WHEN rt0.c0 THEN vt12.c0 ELSE rt0.c2 END)<=(CASE rt0.c1  WHEN t0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c3 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN rt0.c1 ELSE t0.c1 END))) IS TRUE)  as count FROM rt0, vt12, vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM rt0, vt12, vt0 NATURAL JOIN t0 WHERE (((CASE x'716f'  WHEN rt0.c0 THEN vt12.c0 ELSE rt0.c2 END)<=(CASE rt0.c1  WHEN t0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c3 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN rt0.c1 ELSE t0.c1 END)));
SELECT ALL * FROM t0, vt0, rt0, vt12 WHERE ((- (-8.39776739E8)));
SELECT SUM(count) FROM (SELECT ALL (((- (-8.39776739E8))) IS TRUE)  as count FROM t0, vt0, rt0, vt12);
SELECT ALL * FROM t0, vt0, rt0, vt12 WHERE ((- (-8.39776739E8)));
SELECT SUM(count) FROM (SELECT ALL (((- (-8.39776739E8))) IS TRUE)  as count FROM t0, vt0, rt0, vt12);
SELECT ALL * FROM t0, vt0, rt0, vt12 WHERE ((- (-8.39776739E8)));
SELECT COUNT(*) FROM vt0, t0 WHERE (((vt0.c0) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((vt0.c0) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((vt0.c0) IS TRUE) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, vt12, vt0 WHERE (CAST((rt0.c2 IN ()) AS REAL)) ORDER BY (~ (CASE rt0.c2  WHEN rt0.c0 THEN vt12.c0 ELSE rt0.c2 END)), CAST(vt12.c0 AS INTEGER) COLLATE NOCASE DESC, CASE WHEN rt0.c2 THEN ((rt0.c3) IS TRUE) ELSE ((((((((vt0.c0)OR(rt0.c4)))OR(rt0.c3)))OR(vt0.c0)))AND(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN ()) AS REAL)) IS TRUE)  as count FROM rt0, vt12, vt0 ORDER BY (~ (CASE rt0.c2  WHEN rt0.c0 THEN vt12.c0 ELSE rt0.c2 END)), CAST(vt12.c0 AS INTEGER) COLLATE NOCASE DESC, CASE WHEN rt0.c2 THEN ((rt0.c3) IS TRUE) ELSE ((((((((vt0.c0)OR(rt0.c4)))OR(rt0.c3)))OR(vt0.c0)))AND(vt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0, vt12, vt0 WHERE (CAST((rt0.c2 IN ()) AS REAL)) ORDER BY (~ (CASE rt0.c2  WHEN rt0.c0 THEN vt12.c0 ELSE rt0.c2 END)), CAST(vt12.c0 AS INTEGER) COLLATE NOCASE DESC, CASE WHEN rt0.c2 THEN ((rt0.c3) IS TRUE) ELSE ((((((((vt0.c0)OR(rt0.c4)))OR(rt0.c3)))OR(vt0.c0)))AND(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN ()) AS REAL)) IS TRUE)  as count FROM rt0, vt12, vt0 ORDER BY (~ (CASE rt0.c2  WHEN rt0.c0 THEN vt12.c0 ELSE rt0.c2 END)), CAST(vt12.c0 AS INTEGER) COLLATE NOCASE DESC, CASE WHEN rt0.c2 THEN ((rt0.c3) IS TRUE) ELSE ((((((((vt0.c0)OR(rt0.c4)))OR(rt0.c3)))OR(vt0.c0)))AND(vt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0, vt12, vt0 WHERE (CAST((rt0.c2 IN ()) AS REAL)) ORDER BY (~ (CASE rt0.c2  WHEN rt0.c0 THEN vt12.c0 ELSE rt0.c2 END)), CAST(vt12.c0 AS INTEGER) COLLATE NOCASE DESC, CASE WHEN rt0.c2 THEN ((rt0.c3) IS TRUE) ELSE ((((((((vt0.c0)OR(rt0.c4)))OR(rt0.c3)))OR(vt0.c0)))AND(vt0.c0)) END;
SELECT * FROM t0 WHERE (((x'') NOTNULL)) ORDER BY (((- (t0.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((x'') NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY (((- (t0.c0))) NOT NULL) DESC);
SELECT * FROM t0 WHERE (((x'') NOTNULL)) ORDER BY (((- (t0.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((x'') NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY (((- (t0.c0))) NOT NULL) DESC);
SELECT * FROM t0 WHERE (((x'') NOTNULL)) ORDER BY (((- (t0.c0))) NOT NULL) DESC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1)/(rt0.c2))) BETWEEN (IFNULL(DISTINCT rt0.c2, rt0.c3)) AND (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)/(rt0.c2))) BETWEEN (IFNULL(DISTINCT rt0.c2, rt0.c3)) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1)/(rt0.c2))) BETWEEN (IFNULL(DISTINCT rt0.c2, rt0.c3)) AND (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)/(rt0.c2))) BETWEEN (IFNULL(DISTINCT rt0.c2, rt0.c3)) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1)/(rt0.c2))) BETWEEN (IFNULL(DISTINCT rt0.c2, rt0.c3)) AND (rt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM t0, rt0, vt0, vt12 WHERE (UNICODE(CASE WHEN t0.c2 THEN vt12.c0 WHEN vt12.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c0 ELSE t0.c1 END));
SELECT SUM(count) FROM (SELECT ((UNICODE(CASE WHEN t0.c2 THEN vt12.c0 WHEN vt12.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c0 ELSE t0.c1 END)) IS TRUE)  as count FROM t0, rt0, vt0, vt12);
SELECT ALL * FROM t0, rt0, vt0, vt12 WHERE (UNICODE(CASE WHEN t0.c2 THEN vt12.c0 WHEN vt12.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c0 ELSE t0.c1 END));
SELECT SUM(count) FROM (SELECT ((UNICODE(CASE WHEN t0.c2 THEN vt12.c0 WHEN vt12.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c0 ELSE t0.c1 END)) IS TRUE)  as count FROM t0, rt0, vt0, vt12);
SELECT ALL * FROM t0, rt0, vt0, vt12 WHERE (UNICODE(CASE WHEN t0.c2 THEN vt12.c0 WHEN vt12.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c0 ELSE t0.c1 END));
SELECT COUNT(*) FROM rt0, t0, vt0, vt12 WHERE (((((rt0.c2) ISNULL)) NOTNULL)) ORDER BY SQLITE_COMPILEOPTION_GET(CASE rt0.c4  WHEN rt0.c4 THEN vt12.c0 ELSE vt12.c0 END) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) ISNULL)) NOTNULL)) IS TRUE)  as count FROM rt0, t0, vt0, vt12 ORDER BY SQLITE_COMPILEOPTION_GET(CASE rt0.c4  WHEN rt0.c4 THEN vt12.c0 ELSE vt12.c0 END) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, vt0, vt12 WHERE (((((rt0.c2) ISNULL)) NOTNULL)) ORDER BY SQLITE_COMPILEOPTION_GET(CASE rt0.c4  WHEN rt0.c4 THEN vt12.c0 ELSE vt12.c0 END) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) ISNULL)) NOTNULL)) IS TRUE)  as count FROM rt0, t0, vt0, vt12 ORDER BY SQLITE_COMPILEOPTION_GET(CASE rt0.c4  WHEN rt0.c4 THEN vt12.c0 ELSE vt12.c0 END) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, vt0, vt12 WHERE (((((rt0.c2) ISNULL)) NOTNULL)) ORDER BY SQLITE_COMPILEOPTION_GET(CASE rt0.c4  WHEN rt0.c4 THEN vt12.c0 ELSE vt12.c0 END) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((0x16c306e1))<((rt0.c0))) AS REAL)) ORDER BY rt0.c0 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((0x16c306e1))<((rt0.c0))) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((0x16c306e1))<((rt0.c0))) AS REAL)) ORDER BY rt0.c0 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((0x16c306e1))<((rt0.c0))) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((0x16c306e1))<((rt0.c0))) AS REAL)) ORDER BY rt0.c0 COLLATE BINARY;
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt12 WHERE (1.429042867E9);
SELECT SUM(count) FROM (SELECT ALL ((1.429042867E9) IS TRUE)  as count FROM vt0, rt0, t0, vt12);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt12 WHERE (1.429042867E9);
SELECT SUM(count) FROM (SELECT ALL ((1.429042867E9) IS TRUE)  as count FROM vt0, rt0, t0, vt12);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt12 WHERE (1.429042867E9);
SELECT ALL COUNT(*) FROM rt0 WHERE (UNLIKELY('526240034'));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY('526240034')) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (UNLIKELY('526240034'));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY('526240034')) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (UNLIKELY('526240034'));
SELECT ALL COUNT(*) FROM vt12 WHERE (((((vt12.c0)/(vt12.c0)))-(LENGTH(vt12.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt12.c0)/(vt12.c0)))-(LENGTH(vt12.c0)))) IS TRUE)  as count FROM vt12);
SELECT ALL COUNT(*) FROM vt12 WHERE (((((vt12.c0)/(vt12.c0)))-(LENGTH(vt12.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt12.c0)/(vt12.c0)))-(LENGTH(vt12.c0)))) IS TRUE)  as count FROM vt12);
SELECT ALL COUNT(*) FROM vt12 WHERE (((((vt12.c0)/(vt12.c0)))-(LENGTH(vt12.c0))));
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON (((((rt0.c0)!=('0.3124812053613826'))))=((CASE WHEN rt0.c3 THEN 0.2249872417083515 ELSE rt0.c4 END))) WHERE (((((((rt0.c0)OR(rt0.c2)))AND(t0.c0))) NOT BETWEEN (UPPER(DISTINCT rt0.c1)) AND ((((t0.c0))==((0.5773300444315097)))))) ORDER BY (((((rt0.c0))==((rt0.c1))))IS NOT(HEX(DISTINCT rt0.c4))) DESC, 0.8227905247761652 ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(rt0.c2)))AND(t0.c0))) NOT BETWEEN (UPPER(DISTINCT rt0.c1)) AND ((((t0.c0))==((0.5773300444315097)))))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON (((((rt0.c0)<>('0.3124812053613826'))))==((CASE WHEN rt0.c3 THEN 0.2249872417083515 ELSE rt0.c4 END))) ORDER BY (((((rt0.c0))==((rt0.c1))))IS NOT(HEX(DISTINCT rt0.c4))) DESC, 0.8227905247761652 ASC);
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON (((((rt0.c0)!=('0.3124812053613826'))))=((CASE WHEN rt0.c3 THEN 0.2249872417083515 ELSE rt0.c4 END))) WHERE (((((((rt0.c0)OR(rt0.c2)))AND(t0.c0))) NOT BETWEEN (UPPER(DISTINCT rt0.c1)) AND ((((t0.c0))==((0.5773300444315097)))))) ORDER BY (((((rt0.c0))==((rt0.c1))))IS NOT(HEX(DISTINCT rt0.c4))) DESC, 0.8227905247761652 ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(rt0.c2)))AND(t0.c0))) NOT BETWEEN (UPPER(DISTINCT rt0.c1)) AND ((((t0.c0))==((0.5773300444315097)))))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON (((((rt0.c0)<>('0.3124812053613826'))))==((CASE WHEN rt0.c3 THEN 0.2249872417083515 ELSE rt0.c4 END))) ORDER BY (((((rt0.c0))==((rt0.c1))))IS NOT(HEX(DISTINCT rt0.c4))) DESC, 0.8227905247761652 ASC);
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON (((((rt0.c0)!=('0.3124812053613826'))))=((CASE WHEN rt0.c3 THEN 0.2249872417083515 ELSE rt0.c4 END))) WHERE (((((((rt0.c0)OR(rt0.c2)))AND(t0.c0))) NOT BETWEEN (UPPER(DISTINCT rt0.c1)) AND ((((t0.c0))==((0.5773300444315097)))))) ORDER BY (((((rt0.c0))==((rt0.c1))))IS NOT(HEX(DISTINCT rt0.c4))) DESC, 0.8227905247761652 ASC;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0))>=((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))>=((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0))>=((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))>=((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0))>=((vt0.c0))) IN ()));
SELECT * FROM t0 WHERE ((~ ((+ (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (t0.c1))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((~ ((+ (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (t0.c1))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((~ ((+ (t0.c1)))));
SELECT ALL * FROM t0 INNER JOIN vt12 ON (+ (((t0.c0)-(vt12.c0)))) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 INNER JOIN vt12 ON (+ (((t0.c0)-(vt12.c0)))));
SELECT ALL * FROM t0 INNER JOIN vt12 ON (+ (((t0.c0)-(vt12.c0)))) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 INNER JOIN vt12 ON (+ (((t0.c0)-(vt12.c0)))));
SELECT ALL * FROM t0 INNER JOIN vt12 ON (+ (((t0.c0)-(vt12.c0)))) WHERE (t0.c0);
SELECT * FROM vt12 NATURAL JOIN vt0 WHERE (('A捬,^fe ' IN ()));
SELECT SUM(count) FROM (SELECT ((('A捬,^fe ' IN ())) IS TRUE)  as count FROM vt12 NATURAL JOIN vt0);
SELECT * FROM vt12 NATURAL JOIN vt0 WHERE (('A捬,^fe ' IN ()));
SELECT SUM(count) FROM (SELECT ((('A捬,^fe ' IN ())) IS TRUE)  as count FROM vt12 NATURAL JOIN vt0);
SELECT * FROM vt12 NATURAL JOIN vt0 WHERE (('A捬,^fe ' IN ()));
SELECT * FROM vt0 WHERE (((0.9303310836804753) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((0.9303310836804753) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((0.9303310836804753) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((0.9303310836804753) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((0.9303310836804753) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)) END) ORDER BY -183374263;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)) END) IS TRUE)  as count FROM rt0 ORDER BY -183374263);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)) END) ORDER BY -183374263;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)) END) IS TRUE)  as count FROM rt0 ORDER BY -183374263);
SELECT ALL COUNT(*) FROM vt12, rt0, t0, vt0 WHERE (((((t0.c0)AND(rt0.c2)))OR(t0.c1)) COLLATE RTRIM) ORDER BY CAST(((((vt0.c0)OR(t0.c1)))OR(vt0.c0)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)AND(rt0.c2)))OR(t0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt12, rt0, t0, vt0 ORDER BY CAST(((((vt0.c0)OR(t0.c1)))OR(vt0.c0)) AS BLOB) DESC);
SELECT ALL COUNT(*) FROM vt12, rt0, t0, vt0 WHERE (((((t0.c0)AND(rt0.c2)))OR(t0.c1)) COLLATE RTRIM) ORDER BY CAST(((((vt0.c0)OR(t0.c1)))OR(vt0.c0)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)AND(rt0.c2)))OR(t0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt12, rt0, t0, vt0 ORDER BY CAST(((((vt0.c0)OR(t0.c1)))OR(vt0.c0)) AS BLOB) DESC);
SELECT ALL COUNT(*) FROM vt12, rt0, t0, vt0 WHERE (((((t0.c0)AND(rt0.c2)))OR(t0.c1)) COLLATE RTRIM) ORDER BY CAST(((((vt0.c0)OR(t0.c1)))OR(vt0.c0)) AS BLOB) DESC;
SELECT ALL * FROM vt0 WHERE ('-1322525048');
SELECT SUM(count) FROM (SELECT (('-1322525048') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('-1322525048');
SELECT SUM(count) FROM (SELECT (('-1322525048') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('-1322525048');
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) COLLATE BINARY);
SELECT ALL * FROM t0 WHERE (((1431825965)%(((('1712810278')) NOT BETWEEN ((t0.c2)) AND ((t0.c0)))))) ORDER BY CAST((t0.c0 IN ()) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((1431825965)%(((('1712810278')) NOT BETWEEN ((t0.c2)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY CAST((t0.c0 IN ()) AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((1431825965)%(((('1712810278')) NOT BETWEEN ((t0.c2)) AND ((t0.c0)))))) ORDER BY CAST((t0.c0 IN ()) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((1431825965)%(((('1712810278')) NOT BETWEEN ((t0.c2)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY CAST((t0.c0 IN ()) AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((1431825965)%(((('1712810278')) NOT BETWEEN ((t0.c2)) AND ((t0.c0)))))) ORDER BY CAST((t0.c0 IN ()) AS INTEGER) DESC  NULLS LAST;
SELECT * FROM t0, rt0, vt12 WHERE (((((1109581873 IN (rt0.c3, rt0.c1)), (+ (vt12.c0)), TYPEOF(rt0.c1), ((rt0.c1)/(rt0.c2)), (t0.c1 IN ())))>((rt0.c4 COLLATE RTRIM, ((t0.c0)/(t0.c2)), (vt12.c0 IN ()), TRIM(t0.c1), ((((((((((((rt0.c3)OR(t0.c1)))OR(vt12.c0)))OR(t0.c2)))AND(t0.c0)))AND(t0.c0)))AND(t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((1109581873 IN (rt0.c3, rt0.c1)), (+ (vt12.c0)), TYPEOF(rt0.c1), ((rt0.c1)/(rt0.c2)), (t0.c1 IN ())))>((rt0.c4 COLLATE RTRIM, ((t0.c0)/(t0.c2)), (vt12.c0 IN ()), TRIM(t0.c1), ((((((((((((rt0.c3)OR(t0.c1)))OR(vt12.c0)))OR(t0.c2)))AND(t0.c0)))AND(t0.c0)))AND(t0.c1)))))) IS TRUE)  as count FROM t0, rt0, vt12 NOT INDEXED);
SELECT * FROM t0, rt0, vt12 WHERE (((((1109581873 IN (rt0.c3, rt0.c1)), (+ (vt12.c0)), TYPEOF(rt0.c1), ((rt0.c1)/(rt0.c2)), (t0.c1 IN ())))>((rt0.c4 COLLATE RTRIM, ((t0.c0)/(t0.c2)), (vt12.c0 IN ()), TRIM(t0.c1), ((((((((((((rt0.c3)OR(t0.c1)))OR(vt12.c0)))OR(t0.c2)))AND(t0.c0)))AND(t0.c0)))AND(t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((1109581873 IN (rt0.c3, rt0.c1)), (+ (vt12.c0)), TYPEOF(rt0.c1), ((rt0.c1)/(rt0.c2)), (t0.c1 IN ())))>((rt0.c4 COLLATE RTRIM, ((t0.c0)/(t0.c2)), (vt12.c0 IN ()), TRIM(t0.c1), ((((((((((((rt0.c3)OR(t0.c1)))OR(vt12.c0)))OR(t0.c2)))AND(t0.c0)))AND(t0.c0)))AND(t0.c1)))))) IS TRUE)  as count FROM t0, rt0, vt12 NOT INDEXED);
SELECT * FROM t0, rt0, vt12 WHERE (((((1109581873 IN (rt0.c3, rt0.c1)), (+ (vt12.c0)), TYPEOF(rt0.c1), ((rt0.c1)/(rt0.c2)), (t0.c1 IN ())))>((rt0.c4 COLLATE RTRIM, ((t0.c0)/(t0.c2)), (vt12.c0 IN ()), TRIM(t0.c1), ((((((((((((rt0.c3)OR(t0.c1)))OR(vt12.c0)))OR(t0.c2)))AND(t0.c0)))AND(t0.c0)))AND(t0.c1))))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt12 ON (((vt12.c0)) BETWEEN ((((t0.c0)%(t0.c2)))) AND (((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0)))))) CROSS JOIN t0 ON x'935896d8' WHERE (CHANGES()) ORDER BY (((t0.c0)) NOT BETWEEN (((('920243581') IS FALSE))) AND (((NOT (t0.c0))))), (+ (vt12.c0 COLLATE NOCASE)) DESC  NULLS LAST, CASE WHEN t0.c2 THEN x'' END ASC;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt12 ON (((vt12.c0)) BETWEEN ((((t0.c0)%(t0.c2)))) AND (((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0)))))) CROSS JOIN t0 ON x'935896d8' ORDER BY (((t0.c0)) NOT BETWEEN (((('920243581') IS FALSE))) AND (((NOT (t0.c0))))), (+ (vt12.c0 COLLATE NOCASE)) DESC  NULLS LAST, CASE WHEN t0.c2 THEN x'' END ASC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt12 ON (((vt12.c0)) BETWEEN ((((t0.c0)%(t0.c2)))) AND (((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0)))))) CROSS JOIN t0 ON x'935896d8' WHERE (CHANGES()) ORDER BY (((t0.c0)) NOT BETWEEN (((('920243581') IS FALSE))) AND (((NOT (t0.c0))))), (+ (vt12.c0 COLLATE NOCASE)) DESC  NULLS LAST, CASE WHEN t0.c2 THEN x'' END ASC;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt12 ON (((vt12.c0)) BETWEEN ((((t0.c0)%(t0.c2)))) AND (((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0)))))) CROSS JOIN t0 ON x'935896d8' ORDER BY (((t0.c0)) NOT BETWEEN (((('920243581') IS FALSE))) AND (((NOT (t0.c0))))), (+ (vt12.c0 COLLATE NOCASE)) DESC  NULLS LAST, CASE WHEN t0.c2 THEN x'' END ASC);
SELECT ALL COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c4  WHEN vt12.c0 THEN vt0.c0 ELSE rt0.c1 END)LIKE(t0.c0)) FULL OUTER JOIN vt12 ON rt0.c4 WHERE ((+ (((vt12.c0)<(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt12.c0)<(t0.c2))))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c4  WHEN vt12.c0 THEN vt0.c0 ELSE rt0.c1 END)LIKE(t0.c0)) FULL OUTER JOIN vt12 ON rt0.c4);
SELECT ALL COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c4  WHEN vt12.c0 THEN vt0.c0 ELSE rt0.c1 END)LIKE(t0.c0)) FULL OUTER JOIN vt12 ON rt0.c4 WHERE ((+ (((vt12.c0)<(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt12.c0)<(t0.c2))))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c4  WHEN vt12.c0 THEN vt0.c0 ELSE rt0.c1 END)LIKE(t0.c0)) FULL OUTER JOIN vt12 ON rt0.c4);
SELECT * FROM vt12, t0 FULL OUTER JOIN rt0 ON 1627857408 FULL OUTER JOIN vt0 ON ((((((t0.c2)AND(x'')))OR(vt12.c0))) NOTNULL) WHERE (CASE vt0.c0 COLLATE BINARY  WHEN ((t0.c0)<<(rt0.c2)) THEN (((rt0.c0))<=((vt0.c0))) ELSE x'' END) ORDER BY ((CAST(rt0.c0 AS BLOB)) BETWEEN (CASE WHEN t0.c2 THEN rt0.c2 ELSE rt0.c0 END) AND (((((t0.c1)OR(t0.c2)))AND(vt12.c0))));
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN ((t0.c0)<<(rt0.c2)) THEN (((rt0.c0))<=((vt0.c0))) ELSE x'' END) IS TRUE)  as count FROM vt12, t0 FULL OUTER JOIN rt0 ON 1627857408 FULL OUTER JOIN vt0 ON ((((((t0.c2)AND(x'')))OR(vt12.c0))) NOTNULL) ORDER BY ((CAST(rt0.c0 AS BLOB)) BETWEEN (CASE WHEN t0.c2 THEN rt0.c2 ELSE rt0.c0 END) AND (((((t0.c1)OR(t0.c2)))AND(vt12.c0)))));
SELECT * FROM vt12, t0 FULL OUTER JOIN rt0 ON 1627857408 FULL OUTER JOIN vt0 ON ((((((t0.c2)AND(x'')))OR(vt12.c0))) NOTNULL) WHERE (CASE vt0.c0 COLLATE BINARY  WHEN ((t0.c0)<<(rt0.c2)) THEN (((rt0.c0))<=((vt0.c0))) ELSE x'' END) ORDER BY ((CAST(rt0.c0 AS BLOB)) BETWEEN (CASE WHEN t0.c2 THEN rt0.c2 ELSE rt0.c0 END) AND (((((t0.c1)OR(t0.c2)))AND(vt12.c0))));
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN ((t0.c0)<<(rt0.c2)) THEN (((rt0.c0))<=((vt0.c0))) ELSE x'' END) IS TRUE)  as count FROM vt12, t0 FULL OUTER JOIN rt0 ON 1627857408 FULL OUTER JOIN vt0 ON ((((((t0.c2)AND(x'')))OR(vt12.c0))) NOTNULL) ORDER BY ((CAST(rt0.c0 AS BLOB)) BETWEEN (CASE WHEN t0.c2 THEN rt0.c2 ELSE rt0.c0 END) AND (((((t0.c1)OR(t0.c2)))AND(vt12.c0)))));
SELECT * FROM vt12, t0 FULL OUTER JOIN rt0 ON 1627857408 FULL OUTER JOIN vt0 ON ((((((t0.c2)AND(x'')))OR(vt12.c0))) NOTNULL) WHERE (CASE vt0.c0 COLLATE BINARY  WHEN ((t0.c0)<<(rt0.c2)) THEN (((rt0.c0))<=((vt0.c0))) ELSE x'' END) ORDER BY ((CAST(rt0.c0 AS BLOB)) BETWEEN (CASE WHEN t0.c2 THEN rt0.c2 ELSE rt0.c0 END) AND (((((t0.c1)OR(t0.c2)))AND(vt12.c0))));
SELECT COUNT(*) FROM vt12, t0 WHERE (CASE t0.c1  WHEN t0.c2 THEN ((((t0.c2)OR(t0.c2)))AND(x'bafb')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c1  WHEN t0.c2 THEN ((((t0.c2)OR(t0.c2)))AND(x'bafb')) END) IS TRUE)  as count FROM vt12, t0);
SELECT COUNT(*) FROM vt12, t0 WHERE (CASE t0.c1  WHEN t0.c2 THEN ((((t0.c2)OR(t0.c2)))AND(x'bafb')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c1  WHEN t0.c2 THEN ((((t0.c2)OR(t0.c2)))AND(x'bafb')) END) IS TRUE)  as count FROM vt12, t0);
SELECT COUNT(*) FROM vt12, t0 WHERE (CASE t0.c1  WHEN t0.c2 THEN ((((t0.c2)OR(t0.c2)))AND(x'bafb')) END);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt12 ON (((((((rt0.c3, vt0.c0, vt12.c0))<((rt0.c2, vt12.c0, rt0.c4))))AND(TRIM(DISTINCT rt0.c2))))OR(TYPEOF(rt0.c3))) RIGHT OUTER JOIN rt0 ON ((t0.c0)/(rt0.c1)) COLLATE BINARY LEFT OUTER JOIN vt0 ON ((((rt0.c3) NOT BETWEEN (t0.c0) AND (rt0.c2)))GLOB(((((rt0.c0)OR('-1413398289')))AND(t0.c0)))) WHERE ((~ (CAST(rt0.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c3 AS REAL)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt12 ON (((((((rt0.c3, vt0.c0, vt12.c0))<((rt0.c2, vt12.c0, rt0.c4))))AND(TRIM(DISTINCT rt0.c2))))OR(TYPEOF(rt0.c3))) RIGHT OUTER JOIN rt0 ON ((t0.c0)/(rt0.c1)) COLLATE BINARY LEFT OUTER JOIN vt0 ON ((((rt0.c3) NOT BETWEEN (t0.c0) AND (rt0.c2)))GLOB(((((rt0.c0)OR('-1413398289')))AND(t0.c0)))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt12 ON (((((((rt0.c3, vt0.c0, vt12.c0))<((rt0.c2, vt12.c0, rt0.c4))))AND(TRIM(DISTINCT rt0.c2))))OR(TYPEOF(rt0.c3))) RIGHT OUTER JOIN rt0 ON ((t0.c0)/(rt0.c1)) COLLATE BINARY LEFT OUTER JOIN vt0 ON ((((rt0.c3) NOT BETWEEN (t0.c0) AND (rt0.c2)))GLOB(((((rt0.c0)OR('-1413398289')))AND(t0.c0)))) WHERE ((~ (CAST(rt0.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c3 AS REAL)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt12 ON (((((((rt0.c3, vt0.c0, vt12.c0))<((rt0.c2, vt12.c0, rt0.c4))))AND(TRIM(DISTINCT rt0.c2))))OR(TYPEOF(rt0.c3))) RIGHT OUTER JOIN rt0 ON ((t0.c0)/(rt0.c1)) COLLATE BINARY LEFT OUTER JOIN vt0 ON ((((rt0.c3) NOT BETWEEN (t0.c0) AND (rt0.c2)))GLOB(((((rt0.c0)OR('-1413398289')))AND(t0.c0)))));
SELECT ALL COUNT(*) FROM vt12 WHERE (CAST(((vt12.c0)+(vt12.c0)) AS INTEGER)) ORDER BY PRINTF((((vt12.c0))!=((vt12.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt12.c0)+(vt12.c0)) AS INTEGER)) IS TRUE)  as count FROM vt12 ORDER BY PRINTF((((vt12.c0))!=((vt12.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt12 WHERE (CAST(((vt12.c0)+(vt12.c0)) AS INTEGER)) ORDER BY PRINTF((((vt12.c0))!=((vt12.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt12.c0)+(vt12.c0)) AS INTEGER)) IS TRUE)  as count FROM vt12 ORDER BY PRINTF((((vt12.c0))!=((vt12.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt12 WHERE (CAST(((vt12.c0)+(vt12.c0)) AS INTEGER)) ORDER BY PRINTF((((vt12.c0))!=((vt12.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt12, vt0, t0, rt0 WHERE (((CASE t0.c0  WHEN vt12.c0 THEN rt0.c3 ELSE t0.c2 END) NOTNULL)) ORDER BY (+ (((rt0.c4) BETWEEN (x'') AND (t0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN vt12.c0 THEN rt0.c3 ELSE t0.c2 END) NOTNULL)) IS TRUE)  as count FROM vt12, vt0, t0, rt0 ORDER BY (+ (((rt0.c4) BETWEEN (x'') AND (t0.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt12, vt0, t0, rt0 WHERE (((CASE t0.c0  WHEN vt12.c0 THEN rt0.c3 ELSE t0.c2 END) NOTNULL)) ORDER BY (+ (((rt0.c4) BETWEEN (x'') AND (t0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN vt12.c0 THEN rt0.c3 ELSE t0.c2 END) NOTNULL)) IS TRUE)  as count FROM vt12, vt0, t0, rt0 ORDER BY (+ (((rt0.c4) BETWEEN (x'') AND (t0.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt12, vt0, t0, rt0 WHERE (((CASE t0.c0  WHEN vt12.c0 THEN rt0.c3 ELSE t0.c2 END) NOTNULL)) ORDER BY (+ (((rt0.c4) BETWEEN (x'') AND (t0.c1)))) DESC;
SELECT COUNT(*) FROM vt12, vt0, t0 WHERE ((~ ((NOT (vt12.c0))))) ORDER BY (- ('[]')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((NOT (vt12.c0))))) IS TRUE)  as count FROM vt12, vt0, t0 ORDER BY (- ('[]')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt12, vt0, t0 WHERE ((~ ((NOT (vt12.c0))))) ORDER BY (- ('[]')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((NOT (vt12.c0))))) IS TRUE)  as count FROM vt12, vt0, t0 ORDER BY (- ('[]')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt12, vt0, t0 WHERE ((~ ((NOT (vt12.c0))))) ORDER BY (- ('[]')) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt12 WHERE ((((vt12.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT (((((vt12.c0 IN ())) ISNULL)) IS TRUE)  as count FROM vt12);
SELECT COUNT(*) FROM vt12 WHERE ((((vt12.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT (((((vt12.c0 IN ())) ISNULL)) IS TRUE)  as count FROM vt12);
SELECT COUNT(*) FROM vt12 WHERE ((((vt12.c0 IN ())) ISNULL));
SELECT * FROM vt0 LEFT OUTER JOIN vt12 ON (((((((((vt12.c0 IN ()))OR(x'999c')))AND(UNLIKELY(DISTINCT vt0.c0))))AND(((vt12.c0)>(vt0.c0)))))AND(CAST(vt12.c0 AS INTEGER))) WHERE (HEX(((vt12.c0)IS NOT(vt12.c0)))) ORDER BY CAST('-183374263' AS REAL) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(((vt12.c0)IS NOT(vt12.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt12 ON (((((((((vt12.c0 IN ()))OR(x'999c')))AND(UNLIKELY(DISTINCT vt0.c0))))AND(((vt12.c0)>(vt0.c0)))))AND(CAST(vt12.c0 AS INTEGER))) ORDER BY CAST('-183374263' AS REAL) COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN vt12 ON (((((((((vt12.c0 IN ()))OR(x'999c')))AND(UNLIKELY(DISTINCT vt0.c0))))AND(((vt12.c0)>(vt0.c0)))))AND(CAST(vt12.c0 AS INTEGER))) WHERE (HEX(((vt12.c0)IS NOT(vt12.c0)))) ORDER BY CAST('-183374263' AS REAL) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(((vt12.c0)IS NOT(vt12.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt12 ON (((((((((vt12.c0 IN ()))OR(x'999c')))AND(UNLIKELY(DISTINCT vt0.c0))))AND(((vt12.c0)>(vt0.c0)))))AND(CAST(vt12.c0 AS INTEGER))) ORDER BY CAST('-183374263' AS REAL) COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN vt12 ON (((((((((vt12.c0 IN ()))OR(x'999c')))AND(UNLIKELY(DISTINCT vt0.c0))))AND(((vt12.c0)>(vt0.c0)))))AND(CAST(vt12.c0 AS INTEGER))) WHERE (HEX(((vt12.c0)IS NOT(vt12.c0)))) ORDER BY CAST('-183374263' AS REAL) COLLATE RTRIM ASC  NULLS FIRST;
SELECT * FROM rt0, t0, vt0 WHERE (((((((rt0.c3)&(t0.c1)))OR((rt0.c1 IN (t0.c0)))))OR(CASE WHEN t0.c2 THEN NULL ELSE t0.c1 END))) ORDER BY ((rt0.c1 COLLATE BINARY) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)&(t0.c1)))OR((rt0.c1 IN (t0.c0)))))OR(CASE WHEN t0.c2 THEN NULL ELSE t0.c1 END))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((rt0.c1 COLLATE BINARY) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c0) NOTNULL))));
SELECT * FROM rt0, t0, vt0 WHERE (((((((rt0.c3)&(t0.c1)))OR((rt0.c1 IN (t0.c0)))))OR(CASE WHEN t0.c2 THEN NULL ELSE t0.c1 END))) ORDER BY ((rt0.c1 COLLATE BINARY) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)&(t0.c1)))OR((rt0.c1 IN (t0.c0)))))OR(CASE WHEN t0.c2 THEN NULL ELSE t0.c1 END))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((rt0.c1 COLLATE BINARY) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c0) NOTNULL))));
SELECT * FROM rt0, t0, vt0 WHERE (((((((rt0.c3)&(t0.c1)))OR((rt0.c1 IN (t0.c0)))))OR(CASE WHEN t0.c2 THEN NULL ELSE t0.c1 END))) ORDER BY ((rt0.c1 COLLATE BINARY) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c0) NOTNULL)));
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((x'') BETWEEN (t0.c1) AND (rt0.c0))) BETWEEN (((t0.c1)&(t0.c1))) AND (CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') BETWEEN (t0.c1) AND (rt0.c0))) BETWEEN (((t0.c1)&(t0.c1))) AND (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((x'') BETWEEN (t0.c1) AND (rt0.c0))) BETWEEN (((t0.c1)&(t0.c1))) AND (CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') BETWEEN (t0.c1) AND (rt0.c0))) BETWEEN (((t0.c1)&(t0.c1))) AND (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((x'') BETWEEN (t0.c1) AND (rt0.c0))) BETWEEN (((t0.c1)&(t0.c1))) AND (CAST(rt0.c1 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CAST(((rt0.c4) NOTNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c4) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CAST(((rt0.c4) NOTNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c4) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CAST(((rt0.c4) NOTNULL) AS INTEGER));
SELECT ALL COUNT(*) FROM t0, vt12, rt0, vt0 WHERE (((t0.c0 IN ()) IN (((0.7978566563560373)IS(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 IN ()) IN (((0.7978566563560373)IS(t0.c0))))) IS TRUE)  as count FROM t0, vt12, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, vt12, rt0, vt0 WHERE (((t0.c0 IN ()) IN (((0.7978566563560373)IS(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 IN ()) IN (((0.7978566563560373)IS(t0.c0))))) IS TRUE)  as count FROM t0, vt12, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, vt12, rt0, vt0 WHERE (((t0.c0 IN ()) IN (((0.7978566563560373)IS(t0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0, vt12 WHERE (((((t0.c0)IS NOT(t0.c0)))+(CASE t0.c1  WHEN t0.c2 THEN vt0.c0 ELSE t0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)IS NOT(t0.c0)))+(CASE t0.c1  WHEN t0.c2 THEN vt0.c0 ELSE t0.c2 END))) IS TRUE)  as count FROM vt0, t0, vt12);
SELECT ALL COUNT(*) FROM vt0, t0, vt12 WHERE (((((t0.c0)IS NOT(t0.c0)))+(CASE t0.c1  WHEN t0.c2 THEN vt0.c0 ELSE t0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)IS NOT(t0.c0)))+(CASE t0.c1  WHEN t0.c2 THEN vt0.c0 ELSE t0.c2 END))) IS TRUE)  as count FROM vt0, t0, vt12);
SELECT ALL COUNT(*) FROM vt0, t0, vt12 WHERE (((((t0.c0)IS NOT(t0.c0)))+(CASE t0.c1  WHEN t0.c2 THEN vt0.c0 ELSE t0.c2 END)));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON ((CAST(rt0.c4 AS NUMERIC))==(((rt0.c3)+(rt0.c2)))) WHERE (((t0.c2 COLLATE RTRIM)-(((rt0.c4)-(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 COLLATE RTRIM)-(((rt0.c4)-(rt0.c2))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((CAST(rt0.c4 AS NUMERIC))=(((rt0.c3)+(rt0.c2)))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON ((CAST(rt0.c4 AS NUMERIC))==(((rt0.c3)+(rt0.c2)))) WHERE (((t0.c2 COLLATE RTRIM)-(((rt0.c4)-(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 COLLATE RTRIM)-(((rt0.c4)-(rt0.c2))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((CAST(rt0.c4 AS NUMERIC))=(((rt0.c3)+(rt0.c2)))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON ((CAST(rt0.c4 AS NUMERIC))==(((rt0.c3)+(rt0.c2)))) WHERE (((t0.c2 COLLATE RTRIM)-(((rt0.c4)-(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt12 LEFT OUTER JOIN vt0 ON (rt0.c4 COLLATE NOCASE IN ()) INNER JOIN rt0 ON ((TRIM(vt12.c0)) IS TRUE) WHERE (((((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c4)))OR(rt0.c0)))OR(((rt0.c0)<>(rt0.c4)))))AND(0xffffffff9d75f5a8)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c4)))OR(rt0.c0)))OR(((rt0.c0)!=(rt0.c4)))))AND(0Xffffffff9d75f5a8))) IS TRUE)  as count FROM vt12 LEFT OUTER JOIN vt0 ON (rt0.c4 COLLATE NOCASE IN ()) INNER JOIN rt0 ON ((TRIM(vt12.c0)) IS TRUE));
SELECT ALL COUNT(*) FROM vt12 LEFT OUTER JOIN vt0 ON (rt0.c4 COLLATE NOCASE IN ()) INNER JOIN rt0 ON ((TRIM(vt12.c0)) IS TRUE) WHERE (((((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c4)))OR(rt0.c0)))OR(((rt0.c0)<>(rt0.c4)))))AND(0xffffffff9d75f5a8)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c4)))OR(rt0.c0)))OR(((rt0.c0)!=(rt0.c4)))))AND(0Xffffffff9d75f5a8))) IS TRUE)  as count FROM vt12 LEFT OUTER JOIN vt0 ON (rt0.c4 COLLATE NOCASE IN ()) INNER JOIN rt0 ON ((TRIM(vt12.c0)) IS TRUE));
SELECT ALL COUNT(*) FROM vt12 LEFT OUTER JOIN vt0 ON (rt0.c4 COLLATE NOCASE IN ()) INNER JOIN rt0 ON ((TRIM(vt12.c0)) IS TRUE) WHERE (((((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c4)))OR(rt0.c0)))OR(((rt0.c0)<>(rt0.c4)))))AND(0xffffffff9d75f5a8)));
SELECT ALL COUNT(*) FROM vt0, vt12 INNER JOIN rt0 ON json_object(((((((((rt0.c3)OR(vt0.c0)))AND(t0.c2)))OR(t0.c2)))OR(rt0.c1)), ((((((((rt0.c1)OR(t0.c2)))OR(rt0.c1)))OR(rt0.c3)))AND(vt0.c0))) FULL OUTER JOIN t0 ON NULL WHERE (CASE WHEN t0.c0 COLLATE BINARY THEN (t0.c1 IN ()) WHEN json_patch(rt0.c2, t0.c1) THEN vt0.c0 WHEN UPPER(x'11cd') THEN ((('846347100')) BETWEEN ((vt12.c0)) AND ((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c0 COLLATE BINARY THEN (t0.c1 IN ()) WHEN json_patch(rt0.c2, t0.c1) THEN vt0.c0 WHEN UPPER(x'11cd') THEN ((('846347100')) BETWEEN ((vt12.c0)) AND ((rt0.c2))) END) IS TRUE)  as count FROM vt0, vt12 INNER JOIN rt0 ON json_object(((((((((rt0.c3)OR(vt0.c0)))AND(t0.c2)))OR(t0.c2)))OR(rt0.c1)), ((((((((rt0.c1)OR(t0.c2)))OR(rt0.c1)))OR(rt0.c3)))AND(vt0.c0))) FULL OUTER JOIN t0 ON NULL);
SELECT ALL COUNT(*) FROM vt0, vt12 INNER JOIN rt0 ON json_object(((((((((rt0.c3)OR(vt0.c0)))AND(t0.c2)))OR(t0.c2)))OR(rt0.c1)), ((((((((rt0.c1)OR(t0.c2)))OR(rt0.c1)))OR(rt0.c3)))AND(vt0.c0))) FULL OUTER JOIN t0 ON NULL WHERE (CASE WHEN t0.c0 COLLATE BINARY THEN (t0.c1 IN ()) WHEN json_patch(rt0.c2, t0.c1) THEN vt0.c0 WHEN UPPER(x'11cd') THEN ((('846347100')) BETWEEN ((vt12.c0)) AND ((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c0 COLLATE BINARY THEN (t0.c1 IN ()) WHEN json_patch(rt0.c2, t0.c1) THEN vt0.c0 WHEN UPPER(x'11cd') THEN ((('846347100')) BETWEEN ((vt12.c0)) AND ((rt0.c2))) END) IS TRUE)  as count FROM vt0, vt12 INNER JOIN rt0 ON json_object(((((((((rt0.c3)OR(vt0.c0)))AND(t0.c2)))OR(t0.c2)))OR(rt0.c1)), ((((((((rt0.c1)OR(t0.c2)))OR(rt0.c1)))OR(rt0.c3)))AND(vt0.c0))) FULL OUTER JOIN t0 ON NULL);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) IS FALSE));
SELECT ALL * FROM t0, rt0 INNER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN vt12 ON rt0.c0 WHERE (NULL) ORDER BY (((- (t0.c0)))>=(-1.31108496E8)) ASC  NULLS LAST, CASE ((NULL) BETWEEN (vt12.c0) AND (t0.c2))  WHEN ((rt0.c2)*(vt0.c0)) THEN ((((t0.c1)AND(rt0.c2)))AND(rt0.c1)) ELSE ((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)) END DESC, ((NULLIF(DISTINCT t0.c1, vt0.c0)) NOT BETWEEN (((vt12.c0) IS TRUE)) AND (vt0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN vt12 ON rt0.c0 ORDER BY (((- (t0.c0)))>=(-1.31108496E8)) ASC  NULLS LAST, CASE ((NULL) BETWEEN (vt12.c0) AND (t0.c2))  WHEN ((rt0.c2)*(vt0.c0)) THEN ((((t0.c1)AND(rt0.c2)))AND(rt0.c1)) ELSE ((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)) END DESC, ((NULLIF(DISTINCT t0.c1, vt0.c0)) NOT BETWEEN (((vt12.c0) IS TRUE)) AND (vt0.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT ALL * FROM t0, rt0 INNER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN vt12 ON rt0.c0 WHERE (NULL) ORDER BY (((- (t0.c0)))>=(-1.31108496E8)) ASC  NULLS LAST, CASE ((NULL) BETWEEN (vt12.c0) AND (t0.c2))  WHEN ((rt0.c2)*(vt0.c0)) THEN ((((t0.c1)AND(rt0.c2)))AND(rt0.c1)) ELSE ((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)) END DESC, ((NULLIF(DISTINCT t0.c1, vt0.c0)) NOT BETWEEN (((vt12.c0) IS TRUE)) AND (vt0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN vt12 ON rt0.c0 ORDER BY (((- (t0.c0)))>=(-1.31108496E8)) ASC  NULLS LAST, CASE ((NULL) BETWEEN (vt12.c0) AND (t0.c2))  WHEN ((rt0.c2)*(vt0.c0)) THEN ((((t0.c1)AND(rt0.c2)))AND(rt0.c1)) ELSE ((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)) END DESC, ((NULLIF(DISTINCT t0.c1, vt0.c0)) NOT BETWEEN (((vt12.c0) IS TRUE)) AND (vt0.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT ALL * FROM t0, rt0 INNER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN vt12 ON rt0.c0 WHERE (NULL) ORDER BY (((- (t0.c0)))>=(-1.31108496E8)) ASC  NULLS LAST, CASE ((NULL) BETWEEN (vt12.c0) AND (t0.c2))  WHEN ((rt0.c2)*(vt0.c0)) THEN ((((t0.c1)AND(rt0.c2)))AND(rt0.c1)) ELSE ((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)) END DESC, ((NULLIF(DISTINCT t0.c1, vt0.c0)) NOT BETWEEN (((vt12.c0) IS TRUE)) AND (vt0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT ALL * FROM vt12 WHERE (((vt12.c0)<(UPPER(DISTINCT vt12.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt12.c0)<(UPPER(DISTINCT vt12.c0)))) IS TRUE)  as count FROM vt12);
SELECT ALL * FROM vt12 WHERE (((vt12.c0)<(UPPER(DISTINCT vt12.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt12.c0)<(UPPER(DISTINCT vt12.c0)))) IS TRUE)  as count FROM vt12);
SELECT ALL * FROM vt12 WHERE (((vt12.c0)<(UPPER(DISTINCT vt12.c0))));
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (CASE LENGTH(vt0.c0)  WHEN ((rt0.c2)>>(rt0.c2)) THEN (~ (rt0.c0)) ELSE ((rt0.c2)+(vt0.c0)) END) ORDER BY (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))IS(rt0.c4 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((CASE LENGTH(vt0.c0)  WHEN ((rt0.c2)>>(rt0.c2)) THEN (~ (rt0.c0)) ELSE ((rt0.c2)+(vt0.c0)) END) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))IS(rt0.c4 COLLATE RTRIM)));
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (CASE LENGTH(vt0.c0)  WHEN ((rt0.c2)>>(rt0.c2)) THEN (~ (rt0.c0)) ELSE ((rt0.c2)+(vt0.c0)) END) ORDER BY (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))IS(rt0.c4 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((CASE LENGTH(vt0.c0)  WHEN ((rt0.c2)>>(rt0.c2)) THEN (~ (rt0.c0)) ELSE ((rt0.c2)+(vt0.c0)) END) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))IS(rt0.c4 COLLATE RTRIM)));
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (CASE LENGTH(vt0.c0)  WHEN ((rt0.c2)>>(rt0.c2)) THEN (~ (rt0.c0)) ELSE ((rt0.c2)+(vt0.c0)) END) ORDER BY (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))IS(rt0.c4 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((t0.c1 IN ())) IS TRUE)) ORDER BY CAST(CASE rt0.c1  WHEN t0.c1 THEN rt0.c1 WHEN t0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END AS REAL)  NULLS FIRST, CASE (+ (t0.c2))  WHEN ((((rt0.c0)OR(rt0.c1)))OR(0.7732787080629102)) THEN ((x'75a23dde') NOT BETWEEN (t0.c1) AND (rt0.c3)) ELSE ((t0.c2)LIKE(rt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(CASE rt0.c1  WHEN t0.c1 THEN rt0.c1 WHEN t0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END AS REAL)  NULLS FIRST, CASE (+ (t0.c2))  WHEN ((((rt0.c0)OR(rt0.c1)))OR(0.7732787080629102)) THEN ((x'75a23dde') NOT BETWEEN (t0.c1) AND (rt0.c3)) ELSE ((t0.c2)LIKE(rt0.c0)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((t0.c1 IN ())) IS TRUE)) ORDER BY CAST(CASE rt0.c1  WHEN t0.c1 THEN rt0.c1 WHEN t0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END AS REAL)  NULLS FIRST, CASE (+ (t0.c2))  WHEN ((((rt0.c0)OR(rt0.c1)))OR(0.7732787080629102)) THEN ((x'75a23dde') NOT BETWEEN (t0.c1) AND (rt0.c3)) ELSE ((t0.c2)LIKE(rt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(CASE rt0.c1  WHEN t0.c1 THEN rt0.c1 WHEN t0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END AS REAL)  NULLS FIRST, CASE (+ (t0.c2))  WHEN ((((rt0.c0)OR(rt0.c1)))OR(0.7732787080629102)) THEN ((x'75a23dde') NOT BETWEEN (t0.c1) AND (rt0.c3)) ELSE ((t0.c2)LIKE(rt0.c0)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((t0.c1 IN ())) IS TRUE)) ORDER BY CAST(CASE rt0.c1  WHEN t0.c1 THEN rt0.c1 WHEN t0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END AS REAL)  NULLS FIRST, CASE (+ (t0.c2))  WHEN ((((rt0.c0)OR(rt0.c1)))OR(0.7732787080629102)) THEN ((x'75a23dde') NOT BETWEEN (t0.c1) AND (rt0.c3)) ELSE ((t0.c2)LIKE(rt0.c0)) END DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt12, t0 WHERE ('1109581873') ORDER BY ((((((((vt12.c0)AND(vt12.c0)))AND(t0.c1 COLLATE BINARY)))AND(t0.c1)))OR(((((t0.c0)AND(t0.c1)))AND(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('1109581873') IS TRUE)  as count FROM vt0, vt12, t0 ORDER BY ((((((((vt12.c0)AND(vt12.c0)))AND(t0.c1 COLLATE BINARY)))AND(t0.c1)))OR(((((t0.c0)AND(t0.c1)))AND(t0.c0)))) ASC);
SELECT COUNT(*) FROM vt0, vt12, t0 WHERE ('1109581873') ORDER BY ((((((((vt12.c0)AND(vt12.c0)))AND(t0.c1 COLLATE BINARY)))AND(t0.c1)))OR(((((t0.c0)AND(t0.c1)))AND(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('1109581873') IS TRUE)  as count FROM vt0, vt12, t0 ORDER BY ((((((((vt12.c0)AND(vt12.c0)))AND(t0.c1 COLLATE BINARY)))AND(t0.c1)))OR(((((t0.c0)AND(t0.c1)))AND(t0.c0)))) ASC);
SELECT COUNT(*) FROM vt0, vt12, t0 WHERE ('1109581873') ORDER BY ((((((((vt12.c0)AND(vt12.c0)))AND(t0.c1 COLLATE BINARY)))AND(t0.c1)))OR(((((t0.c0)AND(t0.c1)))AND(t0.c0)))) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c0))) NOT BETWEEN ((~ (t0.c2))) AND (CAST(t0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c0))) NOT BETWEEN ((~ (t0.c2))) AND (CAST(t0.c2 AS INTEGER)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c0))) NOT BETWEEN ((~ (t0.c2))) AND (CAST(t0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c0))) NOT BETWEEN ((~ (t0.c2))) AND (CAST(t0.c2 AS INTEGER)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c0))) NOT BETWEEN ((~ (t0.c2))) AND (CAST(t0.c2 AS INTEGER))));
SELECT ALL * FROM rt0, vt0, t0 WHERE (CASE ((((t0.c1)OR(t0.c1)))OR(rt0.c4))  WHEN x'' THEN t0.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE ((((t0.c1)OR(t0.c1)))OR(rt0.c4))  WHEN x'' THEN t0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CASE ((((t0.c1)OR(t0.c1)))OR(rt0.c4))  WHEN x'' THEN t0.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE ((((t0.c1)OR(t0.c1)))OR(rt0.c4))  WHEN x'' THEN t0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CASE ((((t0.c1)OR(t0.c1)))OR(rt0.c4))  WHEN x'' THEN t0.c1 COLLATE NOCASE END);
SELECT * FROM t0, rt0, vt12 WHERE (vt12.c0);
SELECT SUM(count) FROM (SELECT ((vt12.c0) IS TRUE)  as count FROM t0, rt0, vt12);
SELECT * FROM t0, rt0, vt12 WHERE (vt12.c0);
SELECT SUM(count) FROM (SELECT ((vt12.c0) IS TRUE)  as count FROM t0, rt0, vt12);
SELECT * FROM t0, rt0, vt12 WHERE (vt12.c0);
SELECT * FROM t0, vt12 LEFT OUTER JOIN vt0 ON (((('-1322525048'))!=((t0.c0))) IN ()) RIGHT OUTER JOIN rt0 ON LIKELY((1943300398 IN ())) WHERE ('-1941758885') ORDER BY x'254f' DESC  NULLS LAST, '䁪\nM]]?M^'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-1941758885') IS TRUE)  as count FROM t0, vt12 LEFT OUTER JOIN vt0 ON (((('-1322525048'))!=((t0.c0))) IN ()) RIGHT OUTER JOIN rt0 ON LIKELY((1943300398 IN ())) ORDER BY x'254f' DESC  NULLS LAST, '䁪\nM]]?M^'  NULLS LAST);
SELECT * FROM t0, vt12 LEFT OUTER JOIN vt0 ON (((('-1322525048'))!=((t0.c0))) IN ()) RIGHT OUTER JOIN rt0 ON LIKELY((1943300398 IN ())) WHERE ('-1941758885') ORDER BY x'254f' DESC  NULLS LAST, '䁪\nM]]?M^'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-1941758885') IS TRUE)  as count FROM t0, vt12 LEFT OUTER JOIN vt0 ON (((('-1322525048'))!=((t0.c0))) IN ()) RIGHT OUTER JOIN rt0 ON LIKELY((1943300398 IN ())) ORDER BY x'254f' DESC  NULLS LAST, '䁪\nM]]?M^'  NULLS LAST);
SELECT * FROM t0, vt12 LEFT OUTER JOIN vt0 ON (((('-1322525048'))!=((t0.c0))) IN ()) RIGHT OUTER JOIN rt0 ON LIKELY((1943300398 IN ())) WHERE ('-1941758885') ORDER BY x'254f' DESC  NULLS LAST, '䁪\nM]]?M^'  NULLS LAST;
SELECT * FROM rt0 FULL OUTER JOIN vt12 ON ((((((rt0.c3)%(rt0.c0)))OR(rt0.c3)))AND(NULL)) CROSS JOIN vt0 ON (((t0.c1, rt0.c2, rt0.c4, t0.c1, rt0.c1)) NOT BETWEEN ((vt12.c0, ((((vt0.c0)AND(rt0.c0)))AND(vt12.c0)), (vt0.c0 IN (vt12.c0, rt0.c2)), rt0.c2, (t0.c0 IN ()))) AND ((((9.20243581E8)!=(rt0.c1)), (((rt0.c1, t0.c0, rt0.c3)) NOT BETWEEN ((rt0.c4, t0.c1, t0.c0)) AND ((t0.c1, '', rt0.c0))), 0.42286595006859595, ((t0.c1)OR(rt0.c3)), ((((NULL)OR(t0.c1)))OR(rt0.c2))))) LEFT OUTER JOIN t0 ON (((((((((((rt0.c0)OR(t0.c2)))AND(rt0.c1)))OR(rt0.c4)))OR(vt12.c0))))<>(((('413468662')AND(rt0.c4))))) WHERE (CASE ((((rt0.c3)AND(t0.c1)))OR(0Xffffffffecf9da86))  WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS TEXT) ELSE (((t0.c1)) NOT BETWEEN ((rt0.c1)) AND ((t0.c1))) END) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c3)AND(t0.c1)))OR(0xffffffffecf9da86))  WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS TEXT) ELSE (((t0.c1)) NOT BETWEEN ((rt0.c1)) AND ((t0.c1))) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt12 ON ((((((rt0.c3)%(rt0.c0)))OR(rt0.c3)))AND(NULL)) CROSS JOIN vt0 ON (((t0.c1, rt0.c2, rt0.c4, t0.c1, rt0.c1)) NOT BETWEEN ((vt12.c0, ((((vt0.c0)AND(rt0.c0)))AND(vt12.c0)), (vt0.c0 IN (vt12.c0, rt0.c2)), rt0.c2, (t0.c0 IN ()))) AND ((((9.20243581E8)<>(rt0.c1)), (((rt0.c1, t0.c0, rt0.c3)) NOT BETWEEN ((rt0.c4, t0.c1, t0.c0)) AND ((t0.c1, '', rt0.c0))), 0.42286595006859595, ((t0.c1)OR(rt0.c3)), ((((NULL)OR(t0.c1)))OR(rt0.c2))))) LEFT OUTER JOIN t0 ON (((((((((((rt0.c0)OR(t0.c2)))AND(rt0.c1)))OR(rt0.c4)))OR(vt12.c0))))!=(((('413468662')AND(rt0.c4))))) ORDER BY rt0.c2);
SELECT * FROM rt0 FULL OUTER JOIN vt12 ON ((((((rt0.c3)%(rt0.c0)))OR(rt0.c3)))AND(NULL)) CROSS JOIN vt0 ON (((t0.c1, rt0.c2, rt0.c4, t0.c1, rt0.c1)) NOT BETWEEN ((vt12.c0, ((((vt0.c0)AND(rt0.c0)))AND(vt12.c0)), (vt0.c0 IN (vt12.c0, rt0.c2)), rt0.c2, (t0.c0 IN ()))) AND ((((9.20243581E8)!=(rt0.c1)), (((rt0.c1, t0.c0, rt0.c3)) NOT BETWEEN ((rt0.c4, t0.c1, t0.c0)) AND ((t0.c1, '', rt0.c0))), 0.42286595006859595, ((t0.c1)OR(rt0.c3)), ((((NULL)OR(t0.c1)))OR(rt0.c2))))) LEFT OUTER JOIN t0 ON (((((((((((rt0.c0)OR(t0.c2)))AND(rt0.c1)))OR(rt0.c4)))OR(vt12.c0))))<>(((('413468662')AND(rt0.c4))))) WHERE (CASE ((((rt0.c3)AND(t0.c1)))OR(0Xffffffffecf9da86))  WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS TEXT) ELSE (((t0.c1)) NOT BETWEEN ((rt0.c1)) AND ((t0.c1))) END) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c3)AND(t0.c1)))OR(0xffffffffecf9da86))  WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS TEXT) ELSE (((t0.c1)) NOT BETWEEN ((rt0.c1)) AND ((t0.c1))) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt12 ON ((((((rt0.c3)%(rt0.c0)))OR(rt0.c3)))AND(NULL)) CROSS JOIN vt0 ON (((t0.c1, rt0.c2, rt0.c4, t0.c1, rt0.c1)) NOT BETWEEN ((vt12.c0, ((((vt0.c0)AND(rt0.c0)))AND(vt12.c0)), (vt0.c0 IN (vt12.c0, rt0.c2)), rt0.c2, (t0.c0 IN ()))) AND ((((9.20243581E8)<>(rt0.c1)), (((rt0.c1, t0.c0, rt0.c3)) NOT BETWEEN ((rt0.c4, t0.c1, t0.c0)) AND ((t0.c1, '', rt0.c0))), 0.42286595006859595, ((t0.c1)OR(rt0.c3)), ((((NULL)OR(t0.c1)))OR(rt0.c2))))) LEFT OUTER JOIN t0 ON (((((((((((rt0.c0)OR(t0.c2)))AND(rt0.c1)))OR(rt0.c4)))OR(vt12.c0))))!=(((('413468662')AND(rt0.c4))))) ORDER BY rt0.c2);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((CASE WHEN '_h' THEN rt0.c3 ELSE rt0.c1 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN '_h' THEN rt0.c3 ELSE rt0.c1 END) NOTNULL)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((CASE WHEN '_h' THEN rt0.c3 ELSE rt0.c1 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN '_h' THEN rt0.c3 ELSE rt0.c1 END) NOTNULL)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((CASE WHEN '_h' THEN rt0.c3 ELSE rt0.c1 END) NOTNULL));
SELECT * FROM rt0, vt0, t0 WHERE ((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0, t0 NOT INDEXED);
SELECT * FROM rt0, vt0, t0 WHERE ((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0, t0 NOT INDEXED);
SELECT * FROM rt0, vt0, t0 WHERE ((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0)) IN ()));
SELECT * FROM vt12, t0, rt0, vt0 WHERE (((LIKELIHOOD(rt0.c0, 0.3993508455570113)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(rt0.c0, 0.3993508455570113)) IS TRUE)) IS TRUE)  as count FROM vt12, t0, rt0, vt0);
SELECT * FROM vt12, t0, rt0, vt0 WHERE (((LIKELIHOOD(rt0.c0, 0.3993508455570113)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(rt0.c0, 0.3993508455570113)) IS TRUE)) IS TRUE)  as count FROM vt12, t0, rt0, vt0);
SELECT * FROM vt12, t0, rt0, vt0 WHERE (((LIKELIHOOD(rt0.c0, 0.3993508455570113)) IS TRUE));
SELECT * FROM t0 WHERE ((+ (t0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ (t0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ (t0.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0, t0, vt12 WHERE (((((x'')) BETWEEN ((t0.c0)) AND ((x''))) IN ())) ORDER BY ABS(CAST(rt0.c4 AS BLOB))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')) BETWEEN ((t0.c0)) AND ((x''))) IN ())) IS TRUE)  as count FROM rt0, t0, vt12 ORDER BY ABS(CAST(rt0.c4 AS BLOB))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt12 WHERE (((((x'')) BETWEEN ((t0.c0)) AND ((x''))) IN ())) ORDER BY ABS(CAST(rt0.c4 AS BLOB))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')) BETWEEN ((t0.c0)) AND ((x''))) IN ())) IS TRUE)  as count FROM rt0, t0, vt12 ORDER BY ABS(CAST(rt0.c4 AS BLOB))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt12 WHERE (((((x'')) BETWEEN ((t0.c0)) AND ((x''))) IN ())) ORDER BY ABS(CAST(rt0.c4 AS BLOB))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN t0.c1 THEN t0.c2 END) ORDER BY ((((t0.c1)GLOB(t0.c1))) NOT BETWEEN (COALESCE(DISTINCT t0.c1, t0.c1)) AND (((t0.c1)<<(t0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c1 THEN t0.c2 END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1)GLOB(t0.c1))) NOT BETWEEN (COALESCE(DISTINCT t0.c1, t0.c1)) AND (((t0.c1)<<(t0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN t0.c1 THEN t0.c2 END) ORDER BY ((((t0.c1)GLOB(t0.c1))) NOT BETWEEN (COALESCE(DISTINCT t0.c1, t0.c1)) AND (((t0.c1)<<(t0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c1 THEN t0.c2 END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1)GLOB(t0.c1))) NOT BETWEEN (COALESCE(DISTINCT t0.c1, t0.c1)) AND (((t0.c1)<<(t0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN t0.c1 THEN t0.c2 END) ORDER BY ((((t0.c1)GLOB(t0.c1))) NOT BETWEEN (COALESCE(DISTINCT t0.c1, t0.c1)) AND (((t0.c1)<<(t0.c1)))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c0 COLLATE RTRIM THEN '-1322525048' ELSE CAST('.,)' AS BLOB) END) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c2 END)LIKE(((('')) BETWEEN ((0X31ee59b0)) AND ((rt0.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c0 COLLATE RTRIM THEN '-1322525048' ELSE CAST('.,)' AS BLOB) END) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c2 END)LIKE(((('')) BETWEEN ((0X31ee59b0)) AND ((rt0.c3))))) DESC);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c0 COLLATE RTRIM THEN '-1322525048' ELSE CAST('.,)' AS BLOB) END) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c2 END)LIKE(((('')) BETWEEN ((0X31ee59b0)) AND ((rt0.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c0 COLLATE RTRIM THEN '-1322525048' ELSE CAST('.,)' AS BLOB) END) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c2 END)LIKE(((('')) BETWEEN ((0X31ee59b0)) AND ((rt0.c3))))) DESC);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c0 COLLATE RTRIM THEN '-1322525048' ELSE CAST('.,)' AS BLOB) END) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c2 END)LIKE(((('')) BETWEEN ((0X31ee59b0)) AND ((rt0.c3))))) DESC;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)AND(((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))))OR(CASE t0.c1  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 END))) ORDER BY (((t0.c0, t0.c0, 0Xffffffff854c8977)) BETWEEN ((t0.c1, t0.c1, t0.c2)) AND ((t0.c0, t0.c2, t0.c2))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)AND(((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))))OR(CASE t0.c1  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 END))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, t0.c0, 0Xffffffff854c8977)) BETWEEN ((t0.c1, t0.c1, t0.c2)) AND ((t0.c0, t0.c2, t0.c2))) COLLATE RTRIM);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)AND(((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))))OR(CASE t0.c1  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 END))) ORDER BY (((t0.c0, t0.c0, 0Xffffffff854c8977)) BETWEEN ((t0.c1, t0.c1, t0.c2)) AND ((t0.c0, t0.c2, t0.c2))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)AND(((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))))OR(CASE t0.c1  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 END))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, t0.c0, 0Xffffffff854c8977)) BETWEEN ((t0.c1, t0.c1, t0.c2)) AND ((t0.c0, t0.c2, t0.c2))) COLLATE RTRIM);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)AND(((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))))OR(CASE t0.c1  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 END))) ORDER BY (((t0.c0, t0.c0, 0Xffffffff854c8977)) BETWEEN ((t0.c1, t0.c1, t0.c2)) AND ((t0.c0, t0.c2, t0.c2))) COLLATE RTRIM;
SELECT * FROM vt12, t0, rt0 WHERE ((~ (CAST(t0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(t0.c2 AS TEXT)))) IS TRUE)  as count FROM vt12, t0, rt0);
SELECT * FROM vt12, t0, rt0 WHERE ((~ (CAST(t0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(t0.c2 AS TEXT)))) IS TRUE)  as count FROM vt12, t0, rt0);
SELECT * FROM vt12, t0, rt0 WHERE ((~ (CAST(t0.c2 AS TEXT))));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))OR(CASE WHEN rt0.c1 THEN rt0.c3 END)))OR((+ (rt0.c1))))) ORDER BY ((((rt0.c1 COLLATE BINARY)AND(rt0.c3)))AND(((rt0.c4) NOT BETWEEN (x'') AND (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))OR(CASE WHEN rt0.c1 THEN rt0.c3 END)))OR((+ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1 COLLATE BINARY)AND(rt0.c3)))AND(((rt0.c4) NOT BETWEEN (x'') AND (rt0.c1)))) ASC);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))OR(CASE WHEN rt0.c1 THEN rt0.c3 END)))OR((+ (rt0.c1))))) ORDER BY ((((rt0.c1 COLLATE BINARY)AND(rt0.c3)))AND(((rt0.c4) NOT BETWEEN (x'') AND (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))OR(CASE WHEN rt0.c1 THEN rt0.c3 END)))OR((+ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1 COLLATE BINARY)AND(rt0.c3)))AND(((rt0.c4) NOT BETWEEN (x'') AND (rt0.c1)))) ASC);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))OR(CASE WHEN rt0.c1 THEN rt0.c3 END)))OR((+ (rt0.c1))))) ORDER BY ((((rt0.c1 COLLATE BINARY)AND(rt0.c3)))AND(((rt0.c4) NOT BETWEEN (x'') AND (rt0.c1)))) ASC;
SELECT ALL * FROM rt0, vt0 WHERE (((((((((((rt0.c4)AND(vt0.c0)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c2)))GLOB(CAST(rt0.c1 AS TEXT)))) ORDER BY ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c4)AND(vt0.c0)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c2)))GLOB(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((((((((((rt0.c4)AND(vt0.c0)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c2)))GLOB(CAST(rt0.c1 AS TEXT)))) ORDER BY ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c4)AND(vt0.c0)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c2)))GLOB(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((((((((((rt0.c4)AND(vt0.c0)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c2)))GLOB(CAST(rt0.c1 AS TEXT)))) ORDER BY ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM  NULLS LAST;
SELECT * FROM rt0, vt12, vt0 RIGHT OUTER JOIN t0 ON UPPER((NOT (rt0.c2))) WHERE (CAST(((vt12.c0) BETWEEN (vt12.c0) AND (t0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt12.c0) BETWEEN (vt12.c0) AND (t0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0, vt12, vt0 RIGHT OUTER JOIN t0 ON UPPER((NOT (rt0.c2))));
SELECT * FROM rt0, vt12, vt0 RIGHT OUTER JOIN t0 ON UPPER((NOT (rt0.c2))) WHERE (CAST(((vt12.c0) BETWEEN (vt12.c0) AND (t0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt12.c0) BETWEEN (vt12.c0) AND (t0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0, vt12, vt0 RIGHT OUTER JOIN t0 ON UPPER((NOT (rt0.c2))));
SELECT * FROM rt0, vt12, vt0 RIGHT OUTER JOIN t0 ON UPPER((NOT (rt0.c2))) WHERE (CAST(((vt12.c0) BETWEEN (vt12.c0) AND (t0.c2)) AS BLOB));
SELECT * FROM vt0, rt0 WHERE (((rt0.c0)OR(rt0.c1)) COLLATE RTRIM) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)OR(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2 ASC);
SELECT * FROM vt0, rt0 WHERE (((rt0.c0)OR(rt0.c1)) COLLATE RTRIM) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)OR(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2 ASC);
SELECT * FROM vt0, rt0 WHERE (((rt0.c0)OR(rt0.c1)) COLLATE RTRIM) ORDER BY rt0.c2 ASC;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (NOT (((((rt0.c3)AND(rt0.c4)))OR(rt0.c2)))) WHERE ((~ (rt0.c1)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (NOT (((((rt0.c3)AND(rt0.c4)))OR(rt0.c2)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (NOT (((((rt0.c3)AND(rt0.c4)))OR(rt0.c2)))) WHERE ((~ (rt0.c1)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (NOT (((((rt0.c3)AND(rt0.c4)))OR(rt0.c2)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (NOT (((((rt0.c3)AND(rt0.c4)))OR(rt0.c2)))) WHERE ((~ (rt0.c1)));
SELECT COUNT(*) FROM rt0, t0 WHERE ((('U-)H~QAu{') NOT BETWEEN (rt0.c4 COLLATE NOCASE) AND (LIKELY(rt0.c2)))) ORDER BY ((((NULL) NOT NULL))-(((rt0.c4)>(0xffffffff88cff456)))), x'' ASC;
SELECT SUM(count) FROM (SELECT ALL (((('U-)H~QAu{') NOT BETWEEN (rt0.c4 COLLATE NOCASE) AND (LIKELY(rt0.c2)))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((NULL) NOT NULL))-(((rt0.c4)>(0xffffffff88cff456)))), x'' ASC);
SELECT COUNT(*) FROM rt0, t0 WHERE ((('U-)H~QAu{') NOT BETWEEN (rt0.c4 COLLATE NOCASE) AND (LIKELY(rt0.c2)))) ORDER BY ((((NULL) NOT NULL))-(((rt0.c4)>(0xffffffff88cff456)))), x'' ASC;
SELECT SUM(count) FROM (SELECT ALL (((('U-)H~QAu{') NOT BETWEEN (rt0.c4 COLLATE NOCASE) AND (LIKELY(rt0.c2)))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((NULL) NOT NULL))-(((rt0.c4)>(0xffffffff88cff456)))), x'' ASC);
SELECT COUNT(*) FROM rt0, t0 WHERE ((('U-)H~QAu{') NOT BETWEEN (rt0.c4 COLLATE NOCASE) AND (LIKELY(rt0.c2)))) ORDER BY ((((NULL) NOT NULL))-(((rt0.c4)>(0xffffffff88cff456)))), x'' ASC;
SELECT * FROM t0, vt0 WHERE (TRIM(DISTINCT vt0.c0)) ORDER BY UPPER(((t0.c1)LIKE(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT vt0.c0)) IS TRUE)  as count FROM t0, vt0 ORDER BY UPPER(((t0.c1)LIKE(vt0.c0))) ASC);
SELECT * FROM t0, vt0 WHERE (TRIM(DISTINCT vt0.c0)) ORDER BY UPPER(((t0.c1)LIKE(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT vt0.c0)) IS TRUE)  as count FROM t0, vt0 ORDER BY UPPER(((t0.c1)LIKE(vt0.c0))) ASC);
SELECT * FROM t0, vt0 WHERE (TRIM(DISTINCT vt0.c0)) ORDER BY UPPER(((t0.c1)LIKE(vt0.c0))) ASC;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON CASE ((t0.c2)&(rt0.c4))  WHEN CASE rt0.c2  WHEN t0.c0 THEN vt0.c0 END THEN CAST(rt0.c2 AS BLOB) END LEFT OUTER JOIN vt12 ON LIKELY(DISTINCT 0.6906359708818061) INNER JOIN vt0 ON ((((rt0.c3 IN ()), UNLIKELY(t0.c2), ((rt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c0))))<((((((rt0.c3)OR(t0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS REAL), rt0.c4 COLLATE BINARY))) WHERE ((((0.8739650571487847))<((rt0.c0))) COLLATE BINARY COLLATE RTRIM) ORDER BY CAST((+ (rt0.c1)) AS NUMERIC)  NULLS LAST, (+ (((rt0.c2)||(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.8739650571487847))<((rt0.c0))) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON CASE ((t0.c2)&(rt0.c4))  WHEN CASE rt0.c2  WHEN t0.c0 THEN vt0.c0 END THEN CAST(rt0.c2 AS BLOB) END LEFT OUTER JOIN vt12 ON LIKELY(DISTINCT 0.6906359708818061) INNER JOIN vt0 ON ((((rt0.c3 IN ()), UNLIKELY(t0.c2), ((rt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c0))))<((((((rt0.c3)OR(t0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS REAL), rt0.c4 COLLATE BINARY))) ORDER BY CAST((+ (rt0.c1)) AS NUMERIC)  NULLS LAST, (+ (((rt0.c2)||(rt0.c3))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON CASE ((t0.c2)&(rt0.c4))  WHEN CASE rt0.c2  WHEN t0.c0 THEN vt0.c0 END THEN CAST(rt0.c2 AS BLOB) END LEFT OUTER JOIN vt12 ON LIKELY(DISTINCT 0.6906359708818061) INNER JOIN vt0 ON ((((rt0.c3 IN ()), UNLIKELY(t0.c2), ((rt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c0))))<((((((rt0.c3)OR(t0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS REAL), rt0.c4 COLLATE BINARY))) WHERE ((((0.8739650571487847))<((rt0.c0))) COLLATE BINARY COLLATE RTRIM) ORDER BY CAST((+ (rt0.c1)) AS NUMERIC)  NULLS LAST, (+ (((rt0.c2)||(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.8739650571487847))<((rt0.c0))) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON CASE ((t0.c2)&(rt0.c4))  WHEN CASE rt0.c2  WHEN t0.c0 THEN vt0.c0 END THEN CAST(rt0.c2 AS BLOB) END LEFT OUTER JOIN vt12 ON LIKELY(DISTINCT 0.6906359708818061) INNER JOIN vt0 ON ((((rt0.c3 IN ()), UNLIKELY(t0.c2), ((rt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c0))))<((((((rt0.c3)OR(t0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS REAL), rt0.c4 COLLATE BINARY))) ORDER BY CAST((+ (rt0.c1)) AS NUMERIC)  NULLS LAST, (+ (((rt0.c2)||(rt0.c3))))  NULLS FIRST);
SELECT * FROM vt12, rt0, t0, vt0 WHERE (CASE WHEN (t0.c1 IN ()) THEN t0.c0 COLLATE NOCASE ELSE (rt0.c4 IN ()) END) ORDER BY 0Xffffffffcba6dcc2 DESC, ((((((((((rt0.c3)*(rt0.c2)))OR((- (vt0.c0)))))OR(CASE vt0.c0  WHEN rt0.c3 THEN t0.c2 END)))AND((t0.c1 IN ()))))AND(((t0.c1) BETWEEN ('-1439367023') AND (t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t0.c1 IN ()) THEN t0.c0 COLLATE NOCASE ELSE (rt0.c4 IN ()) END) IS TRUE)  as count FROM vt12, rt0, t0, vt0 ORDER BY 0xffffffffcba6dcc2 DESC, ((((((((((rt0.c3)*(rt0.c2)))OR((- (vt0.c0)))))OR(CASE vt0.c0  WHEN rt0.c3 THEN t0.c2 END)))AND((t0.c1 IN ()))))AND(((t0.c1) BETWEEN ('-1439367023') AND (t0.c2)))));
SELECT * FROM vt12, rt0, t0, vt0 WHERE (CASE WHEN (t0.c1 IN ()) THEN t0.c0 COLLATE NOCASE ELSE (rt0.c4 IN ()) END) ORDER BY 0Xffffffffcba6dcc2 DESC, ((((((((((rt0.c3)*(rt0.c2)))OR((- (vt0.c0)))))OR(CASE vt0.c0  WHEN rt0.c3 THEN t0.c2 END)))AND((t0.c1 IN ()))))AND(((t0.c1) BETWEEN ('-1439367023') AND (t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t0.c1 IN ()) THEN t0.c0 COLLATE NOCASE ELSE (rt0.c4 IN ()) END) IS TRUE)  as count FROM vt12, rt0, t0, vt0 ORDER BY 0xffffffffcba6dcc2 DESC, ((((((((((rt0.c3)*(rt0.c2)))OR((- (vt0.c0)))))OR(CASE vt0.c0  WHEN rt0.c3 THEN t0.c2 END)))AND((t0.c1 IN ()))))AND(((t0.c1) BETWEEN ('-1439367023') AND (t0.c2)))));
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c2)>=(t0.c2)))) AND ((t0.c0)))) ORDER BY (((((((((((((~ (rt0.c4)))AND(t0.c2)))OR(((t0.c0) BETWEEN (rt0.c1) AND (rt0.c4)))))AND(((rt0.c0) BETWEEN (t0.c1) AND (t0.c0)))))OR(((vt0.c0)==(t0.c1)))))AND((rt0.c2 IN (0.9626832403884685)))))AND('691446002')) DESC, vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((((rt0.c2)>=(t0.c2)))) AND ((t0.c0)))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((((((((((((~ (rt0.c4)))AND(t0.c2)))OR(((t0.c0) BETWEEN (rt0.c1) AND (rt0.c4)))))AND(((rt0.c0) BETWEEN (t0.c1) AND (t0.c0)))))OR(((vt0.c0)=(t0.c1)))))AND((rt0.c2 IN (0.9626832403884685)))))AND('691446002')) DESC, vt0.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c2)>=(t0.c2)))) AND ((t0.c0)))) ORDER BY (((((((((((((~ (rt0.c4)))AND(t0.c2)))OR(((t0.c0) BETWEEN (rt0.c1) AND (rt0.c4)))))AND(((rt0.c0) BETWEEN (t0.c1) AND (t0.c0)))))OR(((vt0.c0)==(t0.c1)))))AND((rt0.c2 IN (0.9626832403884685)))))AND('691446002')) DESC, vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((((rt0.c2)>=(t0.c2)))) AND ((t0.c0)))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((((((((((((~ (rt0.c4)))AND(t0.c2)))OR(((t0.c0) BETWEEN (rt0.c1) AND (rt0.c4)))))AND(((rt0.c0) BETWEEN (t0.c1) AND (t0.c0)))))OR(((vt0.c0)=(t0.c1)))))AND((rt0.c2 IN (0.9626832403884685)))))AND('691446002')) DESC, vt0.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c2)>=(t0.c2)))) AND ((t0.c0)))) ORDER BY (((((((((((((~ (rt0.c4)))AND(t0.c2)))OR(((t0.c0) BETWEEN (rt0.c1) AND (rt0.c4)))))AND(((rt0.c0) BETWEEN (t0.c1) AND (t0.c0)))))OR(((vt0.c0)==(t0.c1)))))AND((rt0.c2 IN (0.9626832403884685)))))AND('691446002')) DESC, vt0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt12, rt0, vt0 FULL OUTER JOIN t0 ON ((((t0.c0) IS TRUE))|(((rt0.c4)<=(vt12.c0)))) WHERE (((t0.c2 COLLATE RTRIM) IS TRUE)) ORDER BY (((- (vt12.c0)))IS(((rt0.c1) NOT BETWEEN (x'') AND (t0.c0)))), SQLITE_COMPILEOPTION_GET((- (vt0.c0))) ASC  NULLS FIRST, CAST(((((((((rt0.c3)AND(vt0.c0)))OR(vt12.c0)))OR(rt0.c3)))OR(rt0.c2)) AS BLOB) ASC, CASE ((((t0.c0)AND(rt0.c0)))AND(vt12.c0))  WHEN ((rt0.c1)>=(t0.c0)) THEN (((t0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) ELSE CAST(rt0.c3 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt12, rt0, vt0 FULL OUTER JOIN t0 ON ((((t0.c0) IS TRUE))|(((rt0.c4)<=(vt12.c0)))) ORDER BY (((- (vt12.c0)))IS(((rt0.c1) NOT BETWEEN (x'') AND (t0.c0)))), SQLITE_COMPILEOPTION_GET((- (vt0.c0))) ASC  NULLS FIRST, CAST(((((((((rt0.c3)AND(vt0.c0)))OR(vt12.c0)))OR(rt0.c3)))OR(rt0.c2)) AS BLOB) ASC, CASE ((((t0.c0)AND(rt0.c0)))AND(vt12.c0))  WHEN ((rt0.c1)>=(t0.c0)) THEN (((t0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) ELSE CAST(rt0.c3 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM vt12, rt0, vt0 FULL OUTER JOIN t0 ON ((((t0.c0) IS TRUE))|(((rt0.c4)<=(vt12.c0)))) WHERE (((t0.c2 COLLATE RTRIM) IS TRUE)) ORDER BY (((- (vt12.c0)))IS(((rt0.c1) NOT BETWEEN (x'') AND (t0.c0)))), SQLITE_COMPILEOPTION_GET((- (vt0.c0))) ASC  NULLS FIRST, CAST(((((((((rt0.c3)AND(vt0.c0)))OR(vt12.c0)))OR(rt0.c3)))OR(rt0.c2)) AS BLOB) ASC, CASE ((((t0.c0)AND(rt0.c0)))AND(vt12.c0))  WHEN ((rt0.c1)>=(t0.c0)) THEN (((t0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) ELSE CAST(rt0.c3 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt12, rt0, vt0 FULL OUTER JOIN t0 ON ((((t0.c0) IS TRUE))|(((rt0.c4)<=(vt12.c0)))) ORDER BY (((- (vt12.c0)))IS(((rt0.c1) NOT BETWEEN (x'') AND (t0.c0)))), SQLITE_COMPILEOPTION_GET((- (vt0.c0))) ASC  NULLS FIRST, CAST(((((((((rt0.c3)AND(vt0.c0)))OR(vt12.c0)))OR(rt0.c3)))OR(rt0.c2)) AS BLOB) ASC, CASE ((((t0.c0)AND(rt0.c0)))AND(vt12.c0))  WHEN ((rt0.c1)>=(t0.c0)) THEN (((t0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) ELSE CAST(rt0.c3 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM vt12, rt0, vt0 FULL OUTER JOIN t0 ON ((((t0.c0) IS TRUE))|(((rt0.c4)<=(vt12.c0)))) WHERE (((t0.c2 COLLATE RTRIM) IS TRUE)) ORDER BY (((- (vt12.c0)))IS(((rt0.c1) NOT BETWEEN (x'') AND (t0.c0)))), SQLITE_COMPILEOPTION_GET((- (vt0.c0))) ASC  NULLS FIRST, CAST(((((((((rt0.c3)AND(vt0.c0)))OR(vt12.c0)))OR(rt0.c3)))OR(rt0.c2)) AS BLOB) ASC, CASE ((((t0.c0)AND(rt0.c0)))AND(vt12.c0))  WHEN ((rt0.c1)>=(t0.c0)) THEN (((t0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) ELSE CAST(rt0.c3 AS NUMERIC) END;
SELECT ALL COUNT(*) FROM rt0, vt12, t0 WHERE (((((((0.7899073430269533) IS TRUE))OR(CAST(t0.c1 AS TEXT))))AND(((rt0.c3)<>(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.7899073430269533) IS TRUE))OR(CAST(t0.c1 AS TEXT))))AND(((rt0.c3)<>(t0.c1))))) IS TRUE)  as count FROM rt0, vt12, t0);
SELECT ALL COUNT(*) FROM rt0, vt12, t0 WHERE (((((((0.7899073430269533) IS TRUE))OR(CAST(t0.c1 AS TEXT))))AND(((rt0.c3)<>(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.7899073430269533) IS TRUE))OR(CAST(t0.c1 AS TEXT))))AND(((rt0.c3)<>(t0.c1))))) IS TRUE)  as count FROM rt0, vt12, t0);
SELECT ALL COUNT(*) FROM rt0, vt12, t0 WHERE (((((((0.7899073430269533) IS TRUE))OR(CAST(t0.c1 AS TEXT))))AND(((rt0.c3)<>(t0.c1)))));
SELECT COUNT(*) FROM vt12, rt0 WHERE (CASE rt0.c2  WHEN ((rt0.c2)!=(rt0.c4)) THEN LIKELIHOOD(rt0.c1, 0.7241565264974101) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN ((rt0.c2)!=(rt0.c4)) THEN LIKELIHOOD(rt0.c1, 0.7241565264974101) END) IS TRUE)  as count FROM vt12, rt0);
SELECT COUNT(*) FROM vt12, rt0 WHERE (CASE rt0.c2  WHEN ((rt0.c2)!=(rt0.c4)) THEN LIKELIHOOD(rt0.c1, 0.7241565264974101) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN ((rt0.c2)!=(rt0.c4)) THEN LIKELIHOOD(rt0.c1, 0.7241565264974101) END) IS TRUE)  as count FROM vt12, rt0);
SELECT COUNT(*) FROM vt12, rt0 WHERE (CASE rt0.c2  WHEN ((rt0.c2)!=(rt0.c4)) THEN LIKELIHOOD(rt0.c1, 0.7241565264974101) END);
SELECT * FROM t0, vt12, rt0 FULL OUTER JOIN vt0 ON (((rt0.c3)) BETWEEN ((-1e500)) AND ((CASE WHEN 0.8511863137156391 THEN t0.c2 WHEN vt12.c0 THEN rt0.c0 WHEN t0.c1 THEN rt0.c4 END))) WHERE ((((rt0.c1)) BETWEEN ((rt0.c4 COLLATE NOCASE)) AND (((((t0.c1)) BETWEEN ((rt0.c2)) AND ((t0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((rt0.c4 COLLATE NOCASE)) AND (((((t0.c1)) BETWEEN ((rt0.c2)) AND ((t0.c0))))))) IS TRUE)  as count FROM t0, vt12, rt0 FULL OUTER JOIN vt0 ON (((rt0.c3)) BETWEEN ((-1e500)) AND ((CASE WHEN 0.8511863137156391 THEN t0.c2 WHEN vt12.c0 THEN rt0.c0 WHEN t0.c1 THEN rt0.c4 END))));
SELECT * FROM t0, vt12, rt0 FULL OUTER JOIN vt0 ON (((rt0.c3)) BETWEEN ((-1e500)) AND ((CASE WHEN 0.8511863137156391 THEN t0.c2 WHEN vt12.c0 THEN rt0.c0 WHEN t0.c1 THEN rt0.c4 END))) WHERE ((((rt0.c1)) BETWEEN ((rt0.c4 COLLATE NOCASE)) AND (((((t0.c1)) BETWEEN ((rt0.c2)) AND ((t0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((rt0.c4 COLLATE NOCASE)) AND (((((t0.c1)) BETWEEN ((rt0.c2)) AND ((t0.c0))))))) IS TRUE)  as count FROM t0, vt12, rt0 FULL OUTER JOIN vt0 ON (((rt0.c3)) BETWEEN ((-1e500)) AND ((CASE WHEN 0.8511863137156391 THEN t0.c2 WHEN vt12.c0 THEN rt0.c0 WHEN t0.c1 THEN rt0.c4 END))));
SELECT * FROM t0, vt12, rt0 FULL OUTER JOIN vt0 ON (((rt0.c3)) BETWEEN ((-1e500)) AND ((CASE WHEN 0.8511863137156391 THEN t0.c2 WHEN vt12.c0 THEN rt0.c0 WHEN t0.c1 THEN rt0.c4 END))) WHERE ((((rt0.c1)) BETWEEN ((rt0.c4 COLLATE NOCASE)) AND (((((t0.c1)) BETWEEN ((rt0.c2)) AND ((t0.c0)))))));
SELECT * FROM t0 INNER JOIN rt0 ON (- (CAST(x'3753' AS BLOB))) WHERE ((((rt0.c0) NOT BETWEEN (rt0.c4) AND (t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) NOT BETWEEN (rt0.c4) AND (t0.c0)) IN ())) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (- (CAST(x'3753' AS BLOB))));
SELECT * FROM t0 INNER JOIN rt0 ON (- (CAST(x'3753' AS BLOB))) WHERE ((((rt0.c0) NOT BETWEEN (rt0.c4) AND (t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) NOT BETWEEN (rt0.c4) AND (t0.c0)) IN ())) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (- (CAST(x'3753' AS BLOB))));
SELECT * FROM t0 INNER JOIN rt0 ON (- (CAST(x'3753' AS BLOB))) WHERE ((((rt0.c0) NOT BETWEEN (rt0.c4) AND (t0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0, t0, rt0, vt12 WHERE (((((x'') IS TRUE)) IS FALSE)) ORDER BY ((((json_array_length(t0.c2))AND(((rt0.c3)||(rt0.c0)))))OR((((vt12.c0, vt0.c0, vt12.c0)) BETWEEN ((rt0.c4, rt0.c3, rt0.c0)) AND ((t0.c1, rt0.c0, rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') IS TRUE)) IS FALSE)) IS TRUE)  as count FROM vt0, t0, rt0, vt12 ORDER BY ((((json_array_length(t0.c2))AND(((rt0.c3)||(rt0.c0)))))OR((((vt12.c0, vt0.c0, vt12.c0)) BETWEEN ((rt0.c4, rt0.c3, rt0.c0)) AND ((t0.c1, rt0.c0, rt0.c1))))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0, vt12 WHERE (((((x'') IS TRUE)) IS FALSE)) ORDER BY ((((json_array_length(t0.c2))AND(((rt0.c3)||(rt0.c0)))))OR((((vt12.c0, vt0.c0, vt12.c0)) BETWEEN ((rt0.c4, rt0.c3, rt0.c0)) AND ((t0.c1, rt0.c0, rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') IS TRUE)) IS FALSE)) IS TRUE)  as count FROM vt0, t0, rt0, vt12 ORDER BY ((((json_array_length(t0.c2))AND(((rt0.c3)||(rt0.c0)))))OR((((vt12.c0, vt0.c0, vt12.c0)) BETWEEN ((rt0.c4, rt0.c3, rt0.c0)) AND ((t0.c1, rt0.c0, rt0.c1))))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0, vt12 WHERE (((((x'') IS TRUE)) IS FALSE)) ORDER BY ((((json_array_length(t0.c2))AND(((rt0.c3)||(rt0.c0)))))OR((((vt12.c0, vt0.c0, vt12.c0)) BETWEEN ((rt0.c4, rt0.c3, rt0.c0)) AND ((t0.c1, rt0.c0, rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c4)LIKE(rt0.c4)))=(CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)LIKE(rt0.c4)))==(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c4)LIKE(rt0.c4)))=(CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)LIKE(rt0.c4)))==(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c4)LIKE(rt0.c4)))=(CAST(rt0.c0 AS BLOB))));
SELECT COUNT(*) FROM vt12, vt0, rt0 WHERE ((NOT ((rt0.c4 IN (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c4 IN (rt0.c3))))) IS TRUE)  as count FROM vt12, vt0, rt0);
SELECT COUNT(*) FROM vt12, vt0, rt0 WHERE ((NOT ((rt0.c4 IN (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c4 IN (rt0.c3))))) IS TRUE)  as count FROM vt12, vt0, rt0);
SELECT COUNT(*) FROM vt12, vt0, rt0 WHERE ((NOT ((rt0.c4 IN (rt0.c3)))));
SELECT ALL COUNT(*) FROM t0, rt0, vt12 WHERE (CAST(((rt0.c4)OR(rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c4)OR(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM t0, rt0, vt12);
SELECT ALL COUNT(*) FROM t0, rt0, vt12 WHERE (CAST(((rt0.c4)OR(rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c4)OR(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM t0, rt0, vt12);
SELECT ALL COUNT(*) FROM t0, rt0, vt12 WHERE (CAST(((rt0.c4)OR(rt0.c1)) AS TEXT));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((rt0.c1 IN ()) COLLATE BINARY) ORDER BY ((t0.c0)>(rt0.c0 COLLATE BINARY)), NULL COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((t0.c0)>(rt0.c0 COLLATE BINARY)), NULL COLLATE RTRIM DESC);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((rt0.c1 IN ()) COLLATE BINARY) ORDER BY ((t0.c0)>(rt0.c0 COLLATE BINARY)), NULL COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((t0.c0)>(rt0.c0 COLLATE BINARY)), NULL COLLATE RTRIM DESC);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((rt0.c1 IN ()) COLLATE BINARY) ORDER BY ((t0.c0)>(rt0.c0 COLLATE BINARY)), NULL COLLATE RTRIM DESC;
SELECT ALL * FROM t0, vt0 WHERE (LIKELY(t0.c2));
SELECT SUM(count) FROM (SELECT ((LIKELY(t0.c2)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (LIKELY(t0.c2));
SELECT SUM(count) FROM (SELECT ((LIKELY(t0.c2)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (LIKELY(t0.c2));
SELECT ALL COUNT(*) FROM t0, vt0, vt12, rt0 WHERE ((LIKELY(DISTINCT rt0.c0) IN (((rt0.c0) ISNULL)))) ORDER BY (((((((((~ (rt0.c4)))OR(vt0.c0 COLLATE BINARY)))AND((((rt0.c3))<((vt0.c0))))))AND((rt0.c1 IN ()))))AND(((((rt0.c3)OR(rt0.c0)))AND(rt0.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((LIKELY(DISTINCT rt0.c0) IN (((rt0.c0) ISNULL)))) IS TRUE)  as count FROM t0, vt0, vt12, rt0 ORDER BY (((((((((~ (rt0.c4)))OR(vt0.c0 COLLATE BINARY)))AND((((rt0.c3))<((vt0.c0))))))AND((rt0.c1 IN ()))))AND(((((rt0.c3)OR(rt0.c0)))AND(rt0.c4)))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0, vt12, rt0 WHERE ((LIKELY(DISTINCT rt0.c0) IN (((rt0.c0) ISNULL)))) ORDER BY (((((((((~ (rt0.c4)))OR(vt0.c0 COLLATE BINARY)))AND((((rt0.c3))<((vt0.c0))))))AND((rt0.c1 IN ()))))AND(((((rt0.c3)OR(rt0.c0)))AND(rt0.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((LIKELY(DISTINCT rt0.c0) IN (((rt0.c0) ISNULL)))) IS TRUE)  as count FROM t0, vt0, vt12, rt0 ORDER BY (((((((((~ (rt0.c4)))OR(vt0.c0 COLLATE BINARY)))AND((((rt0.c3))<((vt0.c0))))))AND((rt0.c1 IN ()))))AND(((((rt0.c3)OR(rt0.c0)))AND(rt0.c4)))) ASC);
SELECT * FROM vt0, rt0, t0 WHERE (((((((((CAST(rt0.c4 AS REAL))OR(NULL)))OR(((vt0.c0)<(rt0.c4)))))AND(((NULL) IS TRUE))))OR((NOT (t0.c0))))) ORDER BY ((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))!=(CASE WHEN t0.c0 THEN x'' END));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c4 AS REAL))OR(NULL)))OR(((vt0.c0)<(rt0.c4)))))AND(((NULL) IS TRUE))))OR((NOT (t0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))<>(CASE WHEN t0.c0 THEN x'' END)));
SELECT * FROM vt0, rt0, t0 WHERE (((((((((CAST(rt0.c4 AS REAL))OR(NULL)))OR(((vt0.c0)<(rt0.c4)))))AND(((NULL) IS TRUE))))OR((NOT (t0.c0))))) ORDER BY ((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))!=(CASE WHEN t0.c0 THEN x'' END));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c4 AS REAL))OR(NULL)))OR(((vt0.c0)<(rt0.c4)))))AND(((NULL) IS TRUE))))OR((NOT (t0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))<>(CASE WHEN t0.c0 THEN x'' END)));
SELECT * FROM vt0, rt0, t0 WHERE (((((((((CAST(rt0.c4 AS REAL))OR(NULL)))OR(((vt0.c0)<(rt0.c4)))))AND(((NULL) IS TRUE))))OR((NOT (t0.c0))))) ORDER BY ((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))!=(CASE WHEN t0.c0 THEN x'' END));
SELECT * FROM t0, vt12 WHERE (((t0.c1 COLLATE BINARY)<(vt12.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 COLLATE BINARY)<(vt12.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt12);
SELECT * FROM t0, vt12 WHERE (((t0.c1 COLLATE BINARY)<(vt12.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 COLLATE BINARY)<(vt12.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt12);
SELECT * FROM t0, vt12 WHERE (((t0.c1 COLLATE BINARY)<(vt12.c0 COLLATE RTRIM)));
SELECT * FROM vt12 WHERE ((((vt12.c0)) NOT BETWEEN (((((vt12.c0)) BETWEEN ((vt12.c0)) AND ((vt12.c0))))) AND ((CASE WHEN vt12.c0 THEN vt12.c0 ELSE vt12.c0 END)))) ORDER BY vt12.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt12.c0)) NOT BETWEEN (((((vt12.c0)) BETWEEN ((vt12.c0)) AND ((vt12.c0))))) AND ((CASE WHEN vt12.c0 THEN vt12.c0 ELSE vt12.c0 END)))) IS TRUE)  as count FROM vt12 ORDER BY vt12.c0  NULLS LAST);
SELECT * FROM vt12 WHERE ((((vt12.c0)) NOT BETWEEN (((((vt12.c0)) BETWEEN ((vt12.c0)) AND ((vt12.c0))))) AND ((CASE WHEN vt12.c0 THEN vt12.c0 ELSE vt12.c0 END)))) ORDER BY vt12.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt12.c0)) NOT BETWEEN (((((vt12.c0)) BETWEEN ((vt12.c0)) AND ((vt12.c0))))) AND ((CASE WHEN vt12.c0 THEN vt12.c0 ELSE vt12.c0 END)))) IS TRUE)  as count FROM vt12 ORDER BY vt12.c0  NULLS LAST);
SELECT * FROM vt12 WHERE ((((vt12.c0)) NOT BETWEEN (((((vt12.c0)) BETWEEN ((vt12.c0)) AND ((vt12.c0))))) AND ((CASE WHEN vt12.c0 THEN vt12.c0 ELSE vt12.c0 END)))) ORDER BY vt12.c0  NULLS LAST;
SELECT ALL * FROM t0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN (((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((-1813330764))))) AND ((((t0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN (((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((-1813330764))))) AND ((((t0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN (((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((-1813330764))))) AND ((((t0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN (((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((-1813330764))))) AND ((((t0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN (((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((-1813330764))))) AND ((((t0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4))))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt12 ON ((CAST(vt0.c0 AS TEXT)) NOT NULL) INNER JOIN vt0 ON CAST(rt0.c1 AS INTEGER) LEFT OUTER JOIN t0 ON (((vt12.c0 IN ())) NOT BETWEEN (t0.c1) AND (((t0.c2) IS FALSE))) WHERE (((((t0.c0)OR((t0.c1 IN ()))))AND(((rt0.c0) NOT BETWEEN (t0.c1) AND (rt0.c2))))) ORDER BY CASE 0.14724575385205485  WHEN CAST(rt0.c1 AS REAL) THEN ((((((((t0.c1)OR(t0.c1)))OR(t0.c0)))OR(rt0.c3)))AND(rt0.c4)) ELSE rt0.c1 END ASC  NULLS LAST, (((NOT (vt0.c0))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)OR((t0.c1 IN ()))))AND(((rt0.c0) NOT BETWEEN (t0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN vt12 ON ((CAST(vt0.c0 AS TEXT)) NOT NULL) INNER JOIN vt0 ON CAST(rt0.c1 AS INTEGER) LEFT OUTER JOIN t0 ON (((vt12.c0 IN ())) NOT BETWEEN (t0.c1) AND (((t0.c2) IS FALSE))) ORDER BY CASE 0.14724575385205485  WHEN CAST(rt0.c1 AS REAL) THEN ((((((((t0.c1)OR(t0.c1)))OR(t0.c0)))OR(rt0.c3)))AND(rt0.c4)) ELSE rt0.c1 END ASC  NULLS LAST, (((NOT (vt0.c0))) NOT NULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt12 ON ((CAST(vt0.c0 AS TEXT)) NOT NULL) INNER JOIN vt0 ON CAST(rt0.c1 AS INTEGER) LEFT OUTER JOIN t0 ON (((vt12.c0 IN ())) NOT BETWEEN (t0.c1) AND (((t0.c2) IS FALSE))) WHERE (((((t0.c0)OR((t0.c1 IN ()))))AND(((rt0.c0) NOT BETWEEN (t0.c1) AND (rt0.c2))))) ORDER BY CASE 0.14724575385205485  WHEN CAST(rt0.c1 AS REAL) THEN ((((((((t0.c1)OR(t0.c1)))OR(t0.c0)))OR(rt0.c3)))AND(rt0.c4)) ELSE rt0.c1 END ASC  NULLS LAST, (((NOT (vt0.c0))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)OR((t0.c1 IN ()))))AND(((rt0.c0) NOT BETWEEN (t0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN vt12 ON ((CAST(vt0.c0 AS TEXT)) NOT NULL) INNER JOIN vt0 ON CAST(rt0.c1 AS INTEGER) LEFT OUTER JOIN t0 ON (((vt12.c0 IN ())) NOT BETWEEN (t0.c1) AND (((t0.c2) IS FALSE))) ORDER BY CASE 0.14724575385205485  WHEN CAST(rt0.c1 AS REAL) THEN ((((((((t0.c1)OR(t0.c1)))OR(t0.c0)))OR(rt0.c3)))AND(rt0.c4)) ELSE rt0.c1 END ASC  NULLS LAST, (((NOT (vt0.c0))) NOT NULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt12 ON ((CAST(vt0.c0 AS TEXT)) NOT NULL) INNER JOIN vt0 ON CAST(rt0.c1 AS INTEGER) LEFT OUTER JOIN t0 ON (((vt12.c0 IN ())) NOT BETWEEN (t0.c1) AND (((t0.c2) IS FALSE))) WHERE (((((t0.c0)OR((t0.c1 IN ()))))AND(((rt0.c0) NOT BETWEEN (t0.c1) AND (rt0.c2))))) ORDER BY CASE 0.14724575385205485  WHEN CAST(rt0.c1 AS REAL) THEN ((((((((t0.c1)OR(t0.c1)))OR(t0.c0)))OR(rt0.c3)))AND(rt0.c4)) ELSE rt0.c1 END ASC  NULLS LAST, (((NOT (vt0.c0))) NOT NULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt12, t0 RIGHT OUTER JOIN rt0 ON (((rt0.c1) NOT NULL) IN ()) WHERE (0xffffffff93377994);
SELECT SUM(count) FROM (SELECT ((0xffffffff93377994) IS TRUE)  as count FROM vt12, t0 RIGHT OUTER JOIN rt0 ON (((rt0.c1) NOT NULL) IN ()));
SELECT COUNT(*) FROM vt12, t0 RIGHT OUTER JOIN rt0 ON (((rt0.c1) NOT NULL) IN ()) WHERE (0xffffffff93377994);
SELECT SUM(count) FROM (SELECT ((0xffffffff93377994) IS TRUE)  as count FROM vt12, t0 RIGHT OUTER JOIN rt0 ON (((rt0.c1) NOT NULL) IN ()));
SELECT COUNT(*) FROM vt12, t0 RIGHT OUTER JOIN rt0 ON (((rt0.c1) NOT NULL) IN ()) WHERE (0xffffffff93377994);
SELECT * FROM t0, rt0, vt0 WHERE (rtreenode('0.8226188168892725', ((t0.c1)IS NOT(1150208526)))) ORDER BY CAST(rtreenode(NULL, t0.c1) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rtreenode('0.8226188168892725', ((t0.c1)IS NOT(1150208526)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CAST(rtreenode(NULL, t0.c1) AS INTEGER)  NULLS FIRST);
SELECT * FROM t0, rt0, vt0 WHERE (rtreenode('0.8226188168892725', ((t0.c1)IS NOT(1150208526)))) ORDER BY CAST(rtreenode(NULL, t0.c1) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rtreenode('0.8226188168892725', ((t0.c1)IS NOT(1150208526)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CAST(rtreenode(NULL, t0.c1) AS INTEGER)  NULLS FIRST);
SELECT * FROM t0, rt0, vt0 WHERE (rtreenode('0.8226188168892725', ((t0.c1)IS NOT(1150208526)))) ORDER BY CAST(rtreenode(NULL, t0.c1) AS INTEGER)  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((((t0.c0)-(rt0.c1)), x'3dbe', (rt0.c0 IN ())))>=((NULL, ((t0.c2) BETWEEN (rt0.c1) AND (vt0.c0)), 0.1675886939594493)))) ORDER BY (~ (CASE WHEN rt0.c0 THEN rt0.c3 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)-(rt0.c1)), x'3dbe', (rt0.c0 IN ())))>=((NULL, ((t0.c2) BETWEEN (rt0.c1) AND (vt0.c0)), 0.1675886939594493)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (~ (CASE WHEN rt0.c0 THEN rt0.c3 END)) ASC);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((((t0.c0)-(rt0.c1)), x'3dbe', (rt0.c0 IN ())))>=((NULL, ((t0.c2) BETWEEN (rt0.c1) AND (vt0.c0)), 0.1675886939594493)))) ORDER BY (~ (CASE WHEN rt0.c0 THEN rt0.c3 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)-(rt0.c1)), x'3dbe', (rt0.c0 IN ())))>=((NULL, ((t0.c2) BETWEEN (rt0.c1) AND (vt0.c0)), 0.1675886939594493)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (~ (CASE WHEN rt0.c0 THEN rt0.c3 END)) ASC);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((((t0.c0)-(rt0.c1)), x'3dbe', (rt0.c0 IN ())))>=((NULL, ((t0.c2) BETWEEN (rt0.c1) AND (vt0.c0)), 0.1675886939594493)))) ORDER BY (~ (CASE WHEN rt0.c0 THEN rt0.c3 END)) ASC;
SELECT ALL COUNT(*) FROM vt0, vt12 WHERE (CASE CASE '-357598121'  WHEN vt12.c0 THEN vt0.c0 ELSE vt12.c0 END  WHEN CAST(vt12.c0 AS INTEGER) THEN CAST(vt12.c0 AS REAL) ELSE (- (vt12.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE '-357598121'  WHEN vt12.c0 THEN vt0.c0 ELSE vt12.c0 END  WHEN CAST(vt12.c0 AS INTEGER) THEN CAST(vt12.c0 AS REAL) ELSE (- (vt12.c0)) END) IS TRUE)  as count FROM vt0, vt12);
SELECT ALL COUNT(*) FROM vt0, vt12 WHERE (CASE CASE '-357598121'  WHEN vt12.c0 THEN vt0.c0 ELSE vt12.c0 END  WHEN CAST(vt12.c0 AS INTEGER) THEN CAST(vt12.c0 AS REAL) ELSE (- (vt12.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE '-357598121'  WHEN vt12.c0 THEN vt0.c0 ELSE vt12.c0 END  WHEN CAST(vt12.c0 AS INTEGER) THEN CAST(vt12.c0 AS REAL) ELSE (- (vt12.c0)) END) IS TRUE)  as count FROM vt0, vt12);
SELECT ALL COUNT(*) FROM vt0, vt12 WHERE (CASE CASE '-357598121'  WHEN vt12.c0 THEN vt0.c0 ELSE vt12.c0 END  WHEN CAST(vt12.c0 AS INTEGER) THEN CAST(vt12.c0 AS REAL) ELSE (- (vt12.c0)) END);
SELECT ALL * FROM vt12 CROSS JOIN vt0 ON ((((vt0.c0)>>(t0.c1)))>>(((rt0.c1)GLOB(vt12.c0)))) CROSS JOIN t0 ON ((((rt0.c4) ISNULL))OR(CASE WHEN rt0.c3 THEN 'Em/N' WHEN t0.c1 THEN vt12.c0 WHEN t0.c0 THEN vt0.c0 END)) LEFT OUTER JOIN rt0 ON IFNULL(DISTINCT (('-1439367023')IS NOT(rt0.c2)), vt0.c0) WHERE (((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0))) NOTNULL)) ORDER BY '1637630062' ASC  NULLS FIRST, 0.3336800339946766 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt12 CROSS JOIN vt0 ON ((((vt0.c0)>>(t0.c1)))>>(((rt0.c1)GLOB(vt12.c0)))) CROSS JOIN t0 ON ((((rt0.c4) ISNULL))OR(CASE WHEN rt0.c3 THEN 'Em/N' WHEN t0.c1 THEN vt12.c0 WHEN t0.c0 THEN vt0.c0 END)) LEFT OUTER JOIN rt0 ON IFNULL(DISTINCT (('-1439367023')IS NOT(rt0.c2)), vt0.c0) ORDER BY '1637630062' ASC  NULLS FIRST, 0.3336800339946766 DESC  NULLS LAST);
SELECT ALL * FROM vt12 CROSS JOIN vt0 ON ((((vt0.c0)>>(t0.c1)))>>(((rt0.c1)GLOB(vt12.c0)))) CROSS JOIN t0 ON ((((rt0.c4) ISNULL))OR(CASE WHEN rt0.c3 THEN 'Em/N' WHEN t0.c1 THEN vt12.c0 WHEN t0.c0 THEN vt0.c0 END)) LEFT OUTER JOIN rt0 ON IFNULL(DISTINCT (('-1439367023')IS NOT(rt0.c2)), vt0.c0) WHERE (((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0))) NOTNULL)) ORDER BY '1637630062' ASC  NULLS FIRST, 0.3336800339946766 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt12 CROSS JOIN vt0 ON ((((vt0.c0)>>(t0.c1)))>>(((rt0.c1)GLOB(vt12.c0)))) CROSS JOIN t0 ON ((((rt0.c4) ISNULL))OR(CASE WHEN rt0.c3 THEN 'Em/N' WHEN t0.c1 THEN vt12.c0 WHEN t0.c0 THEN vt0.c0 END)) LEFT OUTER JOIN rt0 ON IFNULL(DISTINCT (('-1439367023')IS NOT(rt0.c2)), vt0.c0) ORDER BY '1637630062' ASC  NULLS FIRST, 0.3336800339946766 DESC  NULLS LAST);
SELECT ALL * FROM vt12 CROSS JOIN vt0 ON ((((vt0.c0)>>(t0.c1)))>>(((rt0.c1)GLOB(vt12.c0)))) CROSS JOIN t0 ON ((((rt0.c4) ISNULL))OR(CASE WHEN rt0.c3 THEN 'Em/N' WHEN t0.c1 THEN vt12.c0 WHEN t0.c0 THEN vt0.c0 END)) LEFT OUTER JOIN rt0 ON IFNULL(DISTINCT (('-1439367023')IS NOT(rt0.c2)), vt0.c0) WHERE (((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0))) NOTNULL)) ORDER BY '1637630062' ASC  NULLS FIRST, 0.3336800339946766 DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt12 WHERE (LIKELY(DISTINCT rt0.c2)) ORDER BY CAST(((rt0.c1) ISNULL) AS NUMERIC)  NULLS FIRST, ((vt12.c0) ISNULL) DESC  NULLS LAST, ((((rt0.c2 COLLATE NOCASE)AND((((vt12.c0))<((rt0.c4))))))AND(((((((((rt0.c2)AND('')))OR(rt0.c0)))OR(rt0.c1)))OR(x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT rt0.c2)) IS TRUE)  as count FROM rt0, vt12 ORDER BY CAST(((rt0.c1) ISNULL) AS NUMERIC)  NULLS FIRST, ((vt12.c0) ISNULL) DESC  NULLS LAST, ((((rt0.c2 COLLATE NOCASE)AND((((vt12.c0))<((rt0.c4))))))AND(((((((((rt0.c2)AND('')))OR(rt0.c0)))OR(rt0.c1)))OR(x''))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt12 WHERE (LIKELY(DISTINCT rt0.c2)) ORDER BY CAST(((rt0.c1) ISNULL) AS NUMERIC)  NULLS FIRST, ((vt12.c0) ISNULL) DESC  NULLS LAST, ((((rt0.c2 COLLATE NOCASE)AND((((vt12.c0))<((rt0.c4))))))AND(((((((((rt0.c2)AND('')))OR(rt0.c0)))OR(rt0.c1)))OR(x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT rt0.c2)) IS TRUE)  as count FROM rt0, vt12 ORDER BY CAST(((rt0.c1) ISNULL) AS NUMERIC)  NULLS FIRST, ((vt12.c0) ISNULL) DESC  NULLS LAST, ((((rt0.c2 COLLATE NOCASE)AND((((vt12.c0))<((rt0.c4))))))AND(((((((((rt0.c2)AND('')))OR(rt0.c0)))OR(rt0.c1)))OR(x''))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt12 WHERE (LIKELY(DISTINCT rt0.c2)) ORDER BY CAST(((rt0.c1) ISNULL) AS NUMERIC)  NULLS FIRST, ((vt12.c0) ISNULL) DESC  NULLS LAST, ((((rt0.c2 COLLATE NOCASE)AND((((vt12.c0))<((rt0.c4))))))AND(((((((((rt0.c2)AND('')))OR(rt0.c0)))OR(rt0.c1)))OR(x''))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt12, t0 INNER JOIN rt0 ON rt0.c0 INNER JOIN vt0 ON ((rt0.c2)>=(t0.c2)) COLLATE BINARY WHERE (((((vt0.c0)!=(x''))) IS FALSE)) ORDER BY rt0.c4, (~ (((t0.c0) BETWEEN (vt12.c0) AND (t0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<>(x''))) IS FALSE)) IS TRUE)  as count FROM vt12, t0 INNER JOIN rt0 ON rt0.c0 INNER JOIN vt0 ON ((rt0.c2)>=(t0.c2)) COLLATE BINARY ORDER BY rt0.c4, (~ (((t0.c0) BETWEEN (vt12.c0) AND (t0.c2)))) ASC);
SELECT ALL COUNT(*) FROM vt12, t0 INNER JOIN rt0 ON rt0.c0 INNER JOIN vt0 ON ((rt0.c2)>=(t0.c2)) COLLATE BINARY WHERE (((((vt0.c0)!=(x''))) IS FALSE)) ORDER BY rt0.c4, (~ (((t0.c0) BETWEEN (vt12.c0) AND (t0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<>(x''))) IS FALSE)) IS TRUE)  as count FROM vt12, t0 INNER JOIN rt0 ON rt0.c0 INNER JOIN vt0 ON ((rt0.c2)>=(t0.c2)) COLLATE BINARY ORDER BY rt0.c4, (~ (((t0.c0) BETWEEN (vt12.c0) AND (t0.c2)))) ASC);
SELECT ALL COUNT(*) FROM vt12, t0 INNER JOIN rt0 ON rt0.c0 INNER JOIN vt0 ON ((rt0.c2)>=(t0.c2)) COLLATE BINARY WHERE (((((vt0.c0)!=(x''))) IS FALSE)) ORDER BY rt0.c4, (~ (((t0.c0) BETWEEN (vt12.c0) AND (t0.c2)))) ASC;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON ((((((rt0.c0)AND(rt0.c3)))OR(0.5751481643356231)))*(((t0.c0)<=(rt0.c1)))) INNER JOIN vt12 ON ((x'') NOT BETWEEN (((rt0.c3) ISNULL)) AND ('NW')) RIGHT OUTER JOIN rt0 ON ((NULL)AND((NULL IN (vt0.c0)))) WHERE (((NULL)IS NOT(((t0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((NULL)IS NOT(((t0.c2) NOT NULL)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((((rt0.c0)AND(rt0.c3)))OR(0.5751481643356231)))*(((t0.c0)<=(rt0.c1)))) INNER JOIN vt12 ON ((x'') NOT BETWEEN (((rt0.c3) ISNULL)) AND ('NW')) RIGHT OUTER JOIN rt0 ON ((NULL)AND((NULL IN (vt0.c0)))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON ((((((rt0.c0)AND(rt0.c3)))OR(0.5751481643356231)))*(((t0.c0)<=(rt0.c1)))) INNER JOIN vt12 ON ((x'') NOT BETWEEN (((rt0.c3) ISNULL)) AND ('NW')) RIGHT OUTER JOIN rt0 ON ((NULL)AND((NULL IN (vt0.c0)))) WHERE (((NULL)IS NOT(((t0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((NULL)IS NOT(((t0.c2) NOT NULL)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((((rt0.c0)AND(rt0.c3)))OR(0.5751481643356231)))*(((t0.c0)<=(rt0.c1)))) INNER JOIN vt12 ON ((x'') NOT BETWEEN (((rt0.c3) ISNULL)) AND ('NW')) RIGHT OUTER JOIN rt0 ON ((NULL)AND((NULL IN (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt12 NOT INDEXED, vt0, rt0 WHERE (CASE NULL  WHEN SQLITE_COMPILEOPTION_GET(vt12.c0) THEN CASE vt12.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END WHEN CAST(rt0.c4 AS BLOB) THEN ((vt0.c0) BETWEEN (rt0.c4) AND (vt12.c0)) WHEN rt0.c1 COLLATE NOCASE THEN (((rt0.c4, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c4)) AND ((rt0.c0, vt0.c0, vt12.c0))) ELSE rt0.c1 END) ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c4)))+(((rt0.c2)|(rt0.c3)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN SQLITE_COMPILEOPTION_GET(vt12.c0) THEN CASE vt12.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END WHEN CAST(rt0.c4 AS BLOB) THEN ((vt0.c0) BETWEEN (rt0.c4) AND (vt12.c0)) WHEN rt0.c1 COLLATE NOCASE THEN (((rt0.c4, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c4)) AND ((rt0.c0, vt0.c0, vt12.c0))) ELSE rt0.c1 END) IS TRUE)  as count FROM vt12, vt0, rt0 ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c4)))+(((rt0.c2)|(rt0.c3)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt12 NOT INDEXED, vt0, rt0 WHERE (CASE NULL  WHEN SQLITE_COMPILEOPTION_GET(vt12.c0) THEN CASE vt12.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END WHEN CAST(rt0.c4 AS BLOB) THEN ((vt0.c0) BETWEEN (rt0.c4) AND (vt12.c0)) WHEN rt0.c1 COLLATE NOCASE THEN (((rt0.c4, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c4)) AND ((rt0.c0, vt0.c0, vt12.c0))) ELSE rt0.c1 END) ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c4)))+(((rt0.c2)|(rt0.c3)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN SQLITE_COMPILEOPTION_GET(vt12.c0) THEN CASE vt12.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END WHEN CAST(rt0.c4 AS BLOB) THEN ((vt0.c0) BETWEEN (rt0.c4) AND (vt12.c0)) WHEN rt0.c1 COLLATE NOCASE THEN (((rt0.c4, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c4)) AND ((rt0.c0, vt0.c0, vt12.c0))) ELSE rt0.c1 END) IS TRUE)  as count FROM vt12, vt0, rt0 ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c4)))+(((rt0.c2)|(rt0.c3)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt12 NOT INDEXED, vt0, rt0 WHERE (CASE NULL  WHEN SQLITE_COMPILEOPTION_GET(vt12.c0) THEN CASE vt12.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END WHEN CAST(rt0.c4 AS BLOB) THEN ((vt0.c0) BETWEEN (rt0.c4) AND (vt12.c0)) WHEN rt0.c1 COLLATE NOCASE THEN (((rt0.c4, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c4)) AND ((rt0.c0, vt0.c0, vt12.c0))) ELSE rt0.c1 END) ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c4)))+(((rt0.c2)|(rt0.c3)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt12 NATURAL JOIN t0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt12 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt12 NATURAL JOIN t0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt12 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt12 NATURAL JOIN t0 WHERE ('');
SELECT * FROM vt0, t0, rt0, vt12 WHERE ((((t0.c0)<=(rt0.c3)) IN (((x'3c7d')IS NOT(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)<=(rt0.c3)) IN (((x'3c7d')IS NOT(rt0.c2))))) IS TRUE)  as count FROM vt0, t0, rt0, vt12);
SELECT * FROM vt0, t0, rt0, vt12 WHERE ((((t0.c0)<=(rt0.c3)) IN (((x'3c7d')IS NOT(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)<=(rt0.c3)) IN (((x'3c7d')IS NOT(rt0.c2))))) IS TRUE)  as count FROM vt0, t0, rt0, vt12);
SELECT * FROM vt0, t0, rt0, vt12 WHERE ((((t0.c0)<=(rt0.c3)) IN (((x'3c7d')IS NOT(rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY rt0.c1 COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY rt0.c1 COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY rt0.c1 COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CAST(rt0.c4 COLLATE BINARY AS INTEGER) WHERE (LOWER(DISTINCT ((rt0.c2)AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((rt0.c2)AND(rt0.c0)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST(rt0.c4 COLLATE BINARY AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CAST(rt0.c4 COLLATE BINARY AS INTEGER) WHERE (LOWER(DISTINCT ((rt0.c2)AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((rt0.c2)AND(rt0.c0)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST(rt0.c4 COLLATE BINARY AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CAST(rt0.c4 COLLATE BINARY AS INTEGER) WHERE (LOWER(DISTINCT ((rt0.c2)AND(rt0.c0))));
SELECT COUNT(*) FROM t0 INNER JOIN vt12 ON CAST((((t0.c2, rt0.c0, t0.c1)) BETWEEN ((rt0.c2, rt0.c0, t0.c2)) AND ((NULL, NULL, rt0.c3))) AS BLOB) FULL OUTER JOIN rt0 ON ((CAST(vt12.c0 AS INTEGER))<<((rt0.c0 IN ()))) WHERE (rt0.c1) ORDER BY (((((((((((NULL)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))OR(CAST(rt0.c3 AS NUMERIC))))OR((~ (rt0.c0)))))AND(((rt0.c4)/('867232673')))))AND(((rt0.c0)GLOB(rt0.c0)))) DESC, ((((rt0.c0) NOT BETWEEN (t0.c2) AND (rt0.c1))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0 INNER JOIN vt12 ON CAST((((t0.c2, rt0.c0, t0.c1)) BETWEEN ((rt0.c2, rt0.c0, t0.c2)) AND ((NULL, NULL, rt0.c3))) AS BLOB) FULL OUTER JOIN rt0 ON ((CAST(vt12.c0 AS INTEGER))<<((rt0.c0 IN ()))) ORDER BY (((((((((((NULL)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))OR(CAST(rt0.c3 AS NUMERIC))))OR((~ (rt0.c0)))))AND(((rt0.c4)/('867232673')))))AND(((rt0.c0)GLOB(rt0.c0)))) DESC, ((((rt0.c0) NOT BETWEEN (t0.c2) AND (rt0.c1))) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN vt12 ON CAST((((t0.c2, rt0.c0, t0.c1)) BETWEEN ((rt0.c2, rt0.c0, t0.c2)) AND ((NULL, NULL, rt0.c3))) AS BLOB) FULL OUTER JOIN rt0 ON ((CAST(vt12.c0 AS INTEGER))<<((rt0.c0 IN ()))) WHERE (rt0.c1) ORDER BY (((((((((((NULL)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))OR(CAST(rt0.c3 AS NUMERIC))))OR((~ (rt0.c0)))))AND(((rt0.c4)/('867232673')))))AND(((rt0.c0)GLOB(rt0.c0)))) DESC, ((((rt0.c0) NOT BETWEEN (t0.c2) AND (rt0.c1))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0 INNER JOIN vt12 ON CAST((((t0.c2, rt0.c0, t0.c1)) BETWEEN ((rt0.c2, rt0.c0, t0.c2)) AND ((NULL, NULL, rt0.c3))) AS BLOB) FULL OUTER JOIN rt0 ON ((CAST(vt12.c0 AS INTEGER))<<((rt0.c0 IN ()))) ORDER BY (((((((((((NULL)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))OR(CAST(rt0.c3 AS NUMERIC))))OR((~ (rt0.c0)))))AND(((rt0.c4)/('867232673')))))AND(((rt0.c0)GLOB(rt0.c0)))) DESC, ((((rt0.c0) NOT BETWEEN (t0.c2) AND (rt0.c1))) IS FALSE) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((- (CASE WHEN vt0.c0 THEN '-444866173' ELSE vt0.c0 END))) ORDER BY (((('2d') BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0)OR(vt0.c0))) AND (CAST('S೙r_D/O/U' AS INTEGER)))  NULLS FIRST, (CAST(vt0.c0 AS TEXT) IN (vt0.c0, vt0.c0)) DESC, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<(((vt0.c0)<<(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN vt0.c0 THEN '-444866173' ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((('2d') BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0)OR(vt0.c0))) AND (CAST('S೙r_D/O/U' AS INTEGER)))  NULLS FIRST, (CAST(vt0.c0 AS TEXT) IN (vt0.c0, vt0.c0)) DESC, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<(((vt0.c0)<<(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((- (CASE WHEN vt0.c0 THEN '-444866173' ELSE vt0.c0 END))) ORDER BY (((('2d') BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0)OR(vt0.c0))) AND (CAST('S೙r_D/O/U' AS INTEGER)))  NULLS FIRST, (CAST(vt0.c0 AS TEXT) IN (vt0.c0, vt0.c0)) DESC, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<(((vt0.c0)<<(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN vt0.c0 THEN '-444866173' ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((('2d') BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0)OR(vt0.c0))) AND (CAST('S೙r_D/O/U' AS INTEGER)))  NULLS FIRST, (CAST(vt0.c0 AS TEXT) IN (vt0.c0, vt0.c0)) DESC, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<(((vt0.c0)<<(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((- (CASE WHEN vt0.c0 THEN '-444866173' ELSE vt0.c0 END))) ORDER BY (((('2d') BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0)OR(vt0.c0))) AND (CAST('S೙r_D/O/U' AS INTEGER)))  NULLS FIRST, (CAST(vt0.c0 AS TEXT) IN (vt0.c0, vt0.c0)) DESC, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<(((vt0.c0)<<(vt0.c0))));
SELECT ALL * FROM t0, vt12 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)))>(((rt0.c4)GLOB(vt12.c0)))) WHERE (LENGTH(((rt0.c0)|(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((LENGTH(((rt0.c0)|(rt0.c1)))) IS TRUE)  as count FROM t0, vt12 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)))>(((rt0.c4)GLOB(vt12.c0)))));
SELECT ALL * FROM t0, vt12 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)))>(((rt0.c4)GLOB(vt12.c0)))) WHERE (LENGTH(((rt0.c0)|(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((LENGTH(((rt0.c0)|(rt0.c1)))) IS TRUE)  as count FROM t0, vt12 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)))>(((rt0.c4)GLOB(vt12.c0)))));
SELECT ALL * FROM t0, vt12 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)))>(((rt0.c4)GLOB(vt12.c0)))) WHERE (LENGTH(((rt0.c0)|(rt0.c1))));
SELECT ALL * FROM vt0, vt12, rt0 FULL OUTER JOIN t0 ON ((((t0.c2) BETWEEN (rt0.c2) AND (vt0.c0)))&(LIKELY(-131108496))) WHERE ((((((((t0.c2)) BETWEEN ((rt0.c3)) AND ((t0.c0))))AND(((vt0.c0)-(rt0.c2)))))OR(CASE rt0.c4  WHEN vt0.c0 THEN rt0.c2 END))) ORDER BY ((((((((((t0.c1)AND(rt0.c3)))AND(vt12.c0)))AND(rt0.c3)))AND(rt0.c4))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c2)) BETWEEN ((rt0.c3)) AND ((t0.c0))))AND(((vt0.c0)-(rt0.c2)))))OR(CASE rt0.c4  WHEN vt0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM vt0, vt12, rt0 FULL OUTER JOIN t0 ON ((((t0.c2) BETWEEN (rt0.c2) AND (vt0.c0)))&(LIKELY(-131108496))) ORDER BY ((((((((((t0.c1)AND(rt0.c3)))AND(vt12.c0)))AND(rt0.c3)))AND(rt0.c4))) IS TRUE) DESC);
SELECT ALL * FROM vt0, vt12, rt0 FULL OUTER JOIN t0 ON ((((t0.c2) BETWEEN (rt0.c2) AND (vt0.c0)))&(LIKELY(-131108496))) WHERE ((((((((t0.c2)) BETWEEN ((rt0.c3)) AND ((t0.c0))))AND(((vt0.c0)-(rt0.c2)))))OR(CASE rt0.c4  WHEN vt0.c0 THEN rt0.c2 END))) ORDER BY ((((((((((t0.c1)AND(rt0.c3)))AND(vt12.c0)))AND(rt0.c3)))AND(rt0.c4))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c2)) BETWEEN ((rt0.c3)) AND ((t0.c0))))AND(((vt0.c0)-(rt0.c2)))))OR(CASE rt0.c4  WHEN vt0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM vt0, vt12, rt0 FULL OUTER JOIN t0 ON ((((t0.c2) BETWEEN (rt0.c2) AND (vt0.c0)))&(LIKELY(-131108496))) ORDER BY ((((((((((t0.c1)AND(rt0.c3)))AND(vt12.c0)))AND(rt0.c3)))AND(rt0.c4))) IS TRUE) DESC);
SELECT ALL * FROM vt0, vt12, rt0 FULL OUTER JOIN t0 ON ((((t0.c2) BETWEEN (rt0.c2) AND (vt0.c0)))&(LIKELY(-131108496))) WHERE ((((((((t0.c2)) BETWEEN ((rt0.c3)) AND ((t0.c0))))AND(((vt0.c0)-(rt0.c2)))))OR(CASE rt0.c4  WHEN vt0.c0 THEN rt0.c2 END))) ORDER BY ((((((((((t0.c1)AND(rt0.c3)))AND(vt12.c0)))AND(rt0.c3)))AND(rt0.c4))) IS TRUE) DESC;
SELECT * FROM t0, rt0, vt0, vt12 WHERE (NULL) ORDER BY (((vt0.c0 COLLATE BINARY, (rt0.c3 IN ()), ((rt0.c0) BETWEEN (1650019371) AND (rt0.c1))))<=(((NOT (vt0.c0)), t0.c1 COLLATE RTRIM, vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0, vt0, vt12 ORDER BY (((vt0.c0 COLLATE BINARY, (rt0.c3 IN ()), ((rt0.c0) BETWEEN (1650019371) AND (rt0.c1))))<=(((NOT (vt0.c0)), t0.c1 COLLATE RTRIM, vt0.c0))) ASC  NULLS FIRST);
SELECT * FROM t0, rt0, vt0, vt12 WHERE (NULL) ORDER BY (((vt0.c0 COLLATE BINARY, (rt0.c3 IN ()), ((rt0.c0) BETWEEN (1650019371) AND (rt0.c1))))<=(((NOT (vt0.c0)), t0.c1 COLLATE RTRIM, vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0, vt0, vt12 ORDER BY (((vt0.c0 COLLATE BINARY, (rt0.c3 IN ()), ((rt0.c0) BETWEEN (1650019371) AND (rt0.c1))))<=(((NOT (vt0.c0)), t0.c1 COLLATE RTRIM, vt0.c0))) ASC  NULLS FIRST);
SELECT * FROM t0, rt0, vt0, vt12 WHERE (NULL) ORDER BY (((vt0.c0 COLLATE BINARY, (rt0.c3 IN ()), ((rt0.c0) BETWEEN (1650019371) AND (rt0.c1))))<=(((NOT (vt0.c0)), t0.c1 COLLATE RTRIM, vt0.c0))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON (((rt0.c2)%(vt0.c0)) IN ()) CROSS JOIN t0 ON rt0.c2 WHERE (((((rt0.c2)<(t0.c1)))<=((('1650019371') NOT BETWEEN (t0.c1) AND (t0.c1))))) ORDER BY ((TRIM(t0.c2))GLOB(t0.c2)) ASC, ''  NULLS FIRST, CAST(t0.c2 COLLATE RTRIM AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<(t0.c1)))<=((('1650019371') NOT BETWEEN (t0.c1) AND (t0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((rt0.c2)%(vt0.c0)) IN ()) CROSS JOIN t0 ON rt0.c2 ORDER BY ((TRIM(t0.c2))GLOB(t0.c2)) ASC, ''  NULLS FIRST, CAST(t0.c2 COLLATE RTRIM AS TEXT) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON (((rt0.c2)%(vt0.c0)) IN ()) CROSS JOIN t0 ON rt0.c2 WHERE (((((rt0.c2)<(t0.c1)))<=((('1650019371') NOT BETWEEN (t0.c1) AND (t0.c1))))) ORDER BY ((TRIM(t0.c2))GLOB(t0.c2)) ASC, ''  NULLS FIRST, CAST(t0.c2 COLLATE RTRIM AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<(t0.c1)))<=((('1650019371') NOT BETWEEN (t0.c1) AND (t0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((rt0.c2)%(vt0.c0)) IN ()) CROSS JOIN t0 ON rt0.c2 ORDER BY ((TRIM(t0.c2))GLOB(t0.c2)) ASC, ''  NULLS FIRST, CAST(t0.c2 COLLATE RTRIM AS TEXT) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON (((rt0.c2)%(vt0.c0)) IN ()) CROSS JOIN t0 ON rt0.c2 WHERE (((((rt0.c2)<(t0.c1)))<=((('1650019371') NOT BETWEEN (t0.c1) AND (t0.c1))))) ORDER BY ((TRIM(t0.c2))GLOB(t0.c2)) ASC, ''  NULLS FIRST, CAST(t0.c2 COLLATE RTRIM AS TEXT) ASC  NULLS LAST;
SELECT ALL * FROM t0, rt0 WHERE (CASE ((rt0.c4) BETWEEN (rt0.c3) AND (t0.c1))  WHEN ((rt0.c0)+(t0.c2)) THEN rt0.c2 COLLATE NOCASE WHEN (rt0.c4 IN ()) THEN ((((((((rt0.c1)AND(0xfffffffff33850d9)))OR(t0.c0)))AND(0xffffffffac608856)))OR(t0.c1)) WHEN ((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)) THEN ((rt0.c1) IS FALSE) END) ORDER BY (+ (CASE WHEN rt0.c1 THEN 1.711339455E9 END))  NULLS FIRST, CASE WHEN (+ (rt0.c1)) THEN ((t0.c0)%(rt0.c0)) ELSE ((((t0.c2)AND(rt0.c0)))AND(t0.c2)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c4) BETWEEN (rt0.c3) AND (t0.c1))  WHEN ((rt0.c0)+(t0.c2)) THEN rt0.c2 COLLATE NOCASE WHEN (rt0.c4 IN ()) THEN ((((((((rt0.c1)AND(0Xfffffffff33850d9)))OR(t0.c0)))AND(0xffffffffac608856)))OR(t0.c1)) WHEN ((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)) THEN ((rt0.c1) IS FALSE) END) IS TRUE)  as count FROM t0, rt0 ORDER BY (+ (CASE WHEN rt0.c1 THEN 1.711339455E9 END))  NULLS FIRST, CASE WHEN (+ (rt0.c1)) THEN ((t0.c0)%(rt0.c0)) ELSE ((((t0.c2)AND(rt0.c0)))AND(t0.c2)) END DESC  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (CASE ((rt0.c4) BETWEEN (rt0.c3) AND (t0.c1))  WHEN ((rt0.c0)+(t0.c2)) THEN rt0.c2 COLLATE NOCASE WHEN (rt0.c4 IN ()) THEN ((((((((rt0.c1)AND(0xfffffffff33850d9)))OR(t0.c0)))AND(0xffffffffac608856)))OR(t0.c1)) WHEN ((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)) THEN ((rt0.c1) IS FALSE) END) ORDER BY (+ (CASE WHEN rt0.c1 THEN 1.711339455E9 END))  NULLS FIRST, CASE WHEN (+ (rt0.c1)) THEN ((t0.c0)%(rt0.c0)) ELSE ((((t0.c2)AND(rt0.c0)))AND(t0.c2)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c4) BETWEEN (rt0.c3) AND (t0.c1))  WHEN ((rt0.c0)+(t0.c2)) THEN rt0.c2 COLLATE NOCASE WHEN (rt0.c4 IN ()) THEN ((((((((rt0.c1)AND(0Xfffffffff33850d9)))OR(t0.c0)))AND(0xffffffffac608856)))OR(t0.c1)) WHEN ((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)) THEN ((rt0.c1) IS FALSE) END) IS TRUE)  as count FROM t0, rt0 ORDER BY (+ (CASE WHEN rt0.c1 THEN 1.711339455E9 END))  NULLS FIRST, CASE WHEN (+ (rt0.c1)) THEN ((t0.c0)%(rt0.c0)) ELSE ((((t0.c2)AND(rt0.c0)))AND(t0.c2)) END DESC  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (CASE ((rt0.c4) BETWEEN (rt0.c3) AND (t0.c1))  WHEN ((rt0.c0)+(t0.c2)) THEN rt0.c2 COLLATE NOCASE WHEN (rt0.c4 IN ()) THEN ((((((((rt0.c1)AND(0xfffffffff33850d9)))OR(t0.c0)))AND(0xffffffffac608856)))OR(t0.c1)) WHEN ((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)) THEN ((rt0.c1) IS FALSE) END) ORDER BY (+ (CASE WHEN rt0.c1 THEN 1.711339455E9 END))  NULLS FIRST, CASE WHEN (+ (rt0.c1)) THEN ((t0.c0)%(rt0.c0)) ELSE ((((t0.c2)AND(rt0.c0)))AND(t0.c2)) END DESC  NULLS LAST;
SELECT COUNT(*) FROM vt12, vt0 WHERE (((((SQLITE_VERSION())OR(((vt0.c0) IS FALSE))))OR(((vt12.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((SQLITE_VERSION())OR(((vt0.c0) IS FALSE))))OR(((vt12.c0) NOTNULL)))) IS TRUE)  as count FROM vt12, vt0);
SELECT COUNT(*) FROM vt12, vt0 WHERE (((((SQLITE_VERSION())OR(((vt0.c0) IS FALSE))))OR(((vt12.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((SQLITE_VERSION())OR(((vt0.c0) IS FALSE))))OR(((vt12.c0) NOTNULL)))) IS TRUE)  as count FROM vt12, vt0);
SELECT COUNT(*) FROM vt12, vt0 WHERE (((((SQLITE_VERSION())OR(((vt0.c0) IS FALSE))))OR(((vt12.c0) NOTNULL))));
SELECT ALL * FROM t0, rt0, vt0, vt12 WHERE (((t0.c1) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (0.19158812876872333))) AND (((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (0.19158812876872333))) AND (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM t0, rt0, vt0, vt12);
SELECT ALL * FROM t0, rt0, vt0, vt12 WHERE (((t0.c1) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (0.19158812876872333))) AND (((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (0.19158812876872333))) AND (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM t0, rt0, vt0, vt12);
SELECT ALL * FROM t0, rt0, vt0, vt12 WHERE (((t0.c1) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (0.19158812876872333))) AND (((rt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (t0.c0 COLLATE RTRIM) ORDER BY ((t0.c2) NOT BETWEEN (((t0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))) AND (CASE WHEN rt0.c2 THEN rt0.c2 WHEN t0.c2 THEN 0.1013408387384358 WHEN t0.c0 THEN rt0.c4 END));
SELECT SUM(count) FROM (SELECT ALL ((t0.c0 COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((t0.c2) NOT BETWEEN (((t0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))) AND (CASE WHEN rt0.c2 THEN rt0.c2 WHEN t0.c2 THEN 0.1013408387384358 WHEN t0.c0 THEN rt0.c4 END)));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (t0.c0 COLLATE RTRIM) ORDER BY ((t0.c2) NOT BETWEEN (((t0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))) AND (CASE WHEN rt0.c2 THEN rt0.c2 WHEN t0.c2 THEN 0.1013408387384358 WHEN t0.c0 THEN rt0.c4 END));
SELECT SUM(count) FROM (SELECT ALL ((t0.c0 COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((t0.c2) NOT BETWEEN (((t0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))) AND (CASE WHEN rt0.c2 THEN rt0.c2 WHEN t0.c2 THEN 0.1013408387384358 WHEN t0.c0 THEN rt0.c4 END)));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (t0.c0 COLLATE RTRIM) ORDER BY ((t0.c2) NOT BETWEEN (((t0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))) AND (CASE WHEN rt0.c2 THEN rt0.c2 WHEN t0.c2 THEN 0.1013408387384358 WHEN t0.c0 THEN rt0.c4 END));
SELECT * FROM vt12 WHERE (((x'5c4a' COLLATE RTRIM)*(((vt12.c0)|(vt12.c0))))) ORDER BY ((0.9120932719807843) IS FALSE)  NULLS LAST, (('0.0858728508618597')IS(((vt12.c0)&(vt12.c0)))) ASC  NULLS FIRST, MAX(((vt12.c0) BETWEEN (vt12.c0) AND (vt12.c0)), (vt12.c0 IN ())) ASC  NULLS FIRST, (((vt12.c0 IN ()))>=(CAST(vt12.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((x'5c4a' COLLATE RTRIM)*(((vt12.c0)|(vt12.c0))))) IS TRUE)  as count FROM vt12 ORDER BY ((0.9120932719807843) IS FALSE)  NULLS LAST, (('0.0858728508618597')IS(((vt12.c0)&(vt12.c0)))) ASC  NULLS FIRST, MAX(((vt12.c0) BETWEEN (vt12.c0) AND (vt12.c0)), (vt12.c0 IN ())) ASC  NULLS FIRST, (((vt12.c0 IN ()))>=(CAST(vt12.c0 AS TEXT))));
SELECT * FROM vt12 WHERE (((x'5c4a' COLLATE RTRIM)*(((vt12.c0)|(vt12.c0))))) ORDER BY ((0.9120932719807843) IS FALSE)  NULLS LAST, (('0.0858728508618597')IS(((vt12.c0)&(vt12.c0)))) ASC  NULLS FIRST, MAX(((vt12.c0) BETWEEN (vt12.c0) AND (vt12.c0)), (vt12.c0 IN ())) ASC  NULLS FIRST, (((vt12.c0 IN ()))>=(CAST(vt12.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((x'5c4a' COLLATE RTRIM)*(((vt12.c0)|(vt12.c0))))) IS TRUE)  as count FROM vt12 ORDER BY ((0.9120932719807843) IS FALSE)  NULLS LAST, (('0.0858728508618597')IS(((vt12.c0)&(vt12.c0)))) ASC  NULLS FIRST, MAX(((vt12.c0) BETWEEN (vt12.c0) AND (vt12.c0)), (vt12.c0 IN ())) ASC  NULLS FIRST, (((vt12.c0 IN ()))>=(CAST(vt12.c0 AS TEXT))));
SELECT * FROM vt12 WHERE (((x'5c4a' COLLATE RTRIM)*(((vt12.c0)|(vt12.c0))))) ORDER BY ((0.9120932719807843) IS FALSE)  NULLS LAST, (('0.0858728508618597')IS(((vt12.c0)&(vt12.c0)))) ASC  NULLS FIRST, MAX(((vt12.c0) BETWEEN (vt12.c0) AND (vt12.c0)), (vt12.c0 IN ())) ASC  NULLS FIRST, (((vt12.c0 IN ()))>=(CAST(vt12.c0 AS TEXT)));
SELECT * FROM vt12, vt0, t0 WHERE (LENGTH(((((t0.c1)OR(vt12.c0)))AND(t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(((((t0.c1)OR(vt12.c0)))AND(t0.c1)))) IS TRUE)  as count FROM vt12, vt0, t0);
SELECT * FROM vt12, vt0, t0 WHERE (LENGTH(((((t0.c1)OR(vt12.c0)))AND(t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(((((t0.c1)OR(vt12.c0)))AND(t0.c1)))) IS TRUE)  as count FROM vt12, vt0, t0);
SELECT * FROM vt12, vt0, t0 WHERE (LENGTH(((((t0.c1)OR(vt12.c0)))AND(t0.c1))));
SELECT * FROM vt0, t0, vt12 WHERE (vt12.c0) ORDER BY ('{fc' IN ());
SELECT SUM(count) FROM (SELECT ALL ((vt12.c0) IS TRUE)  as count FROM vt0, t0, vt12 ORDER BY ('{fc' IN ()));
SELECT * FROM vt0, t0, vt12 WHERE (vt12.c0) ORDER BY ('{fc' IN ());
SELECT SUM(count) FROM (SELECT ALL ((vt12.c0) IS TRUE)  as count FROM vt0, t0, vt12 ORDER BY ('{fc' IN ()));
SELECT * FROM vt0, t0, vt12 WHERE (vt12.c0) ORDER BY ('{fc' IN ());
SELECT * FROM rt0 RIGHT OUTER JOIN vt12 ON CAST((~ ('-1687911640')) AS INTEGER) FULL OUTER JOIN t0 ON (- (0.7061896514492321)) WHERE ((rt0.c1 IN ()) COLLATE NOCASE) ORDER BY (((rt0.c0 IN (rt0.c1))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt12 ON CAST((~ ('-1687911640')) AS INTEGER) FULL OUTER JOIN t0 ON (- (0.7061896514492321)) ORDER BY (((rt0.c0 IN (rt0.c1))) IS TRUE));
SELECT * FROM rt0 RIGHT OUTER JOIN vt12 ON CAST((~ ('-1687911640')) AS INTEGER) FULL OUTER JOIN t0 ON (- (0.7061896514492321)) WHERE ((rt0.c1 IN ()) COLLATE NOCASE) ORDER BY (((rt0.c0 IN (rt0.c1))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt12 ON CAST((~ ('-1687911640')) AS INTEGER) FULL OUTER JOIN t0 ON (- (0.7061896514492321)) ORDER BY (((rt0.c0 IN (rt0.c1))) IS TRUE));
SELECT * FROM rt0 RIGHT OUTER JOIN vt12 ON CAST((~ ('-1687911640')) AS INTEGER) FULL OUTER JOIN t0 ON (- (0.7061896514492321)) WHERE ((rt0.c1 IN ()) COLLATE NOCASE) ORDER BY (((rt0.c0 IN (rt0.c1))) IS TRUE);
SELECT * FROM rt0 CROSS JOIN vt0 ON CASE WHEN CASE WHEN vt12.c0 THEN rt0.c0 ELSE rt0.c2 END THEN ((((vt12.c0)AND(rt0.c0)))AND(rt0.c1)) WHEN ((vt12.c0) BETWEEN (rt0.c3) AND (rt0.c2)) THEN CASE WHEN vt12.c0 THEN vt12.c0 ELSE rt0.c0 END WHEN (- (rt0.c0)) THEN NULL ELSE ((x'5d4d')&(rt0.c4)) END LEFT OUTER JOIN vt12 ON (((vt12.c0 IN ()))IS(((NULL)<>(vt12.c0)))) WHERE (PRINTF((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF((~ (vt0.c0)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CASE WHEN CASE WHEN vt12.c0 THEN rt0.c0 ELSE rt0.c2 END THEN ((((vt12.c0)AND(rt0.c0)))AND(rt0.c1)) WHEN ((vt12.c0) BETWEEN (rt0.c3) AND (rt0.c2)) THEN CASE WHEN vt12.c0 THEN vt12.c0 ELSE rt0.c0 END WHEN (- (rt0.c0)) THEN NULL ELSE ((x'5d4d')&(rt0.c4)) END LEFT OUTER JOIN vt12 ON (((vt12.c0 IN ()))IS(((NULL)<>(vt12.c0)))));
SELECT * FROM rt0 CROSS JOIN vt0 ON CASE WHEN CASE WHEN vt12.c0 THEN rt0.c0 ELSE rt0.c2 END THEN ((((vt12.c0)AND(rt0.c0)))AND(rt0.c1)) WHEN ((vt12.c0) BETWEEN (rt0.c3) AND (rt0.c2)) THEN CASE WHEN vt12.c0 THEN vt12.c0 ELSE rt0.c0 END WHEN (- (rt0.c0)) THEN NULL ELSE ((x'5d4d')&(rt0.c4)) END LEFT OUTER JOIN vt12 ON (((vt12.c0 IN ()))IS(((NULL)<>(vt12.c0)))) WHERE (PRINTF((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF((~ (vt0.c0)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CASE WHEN CASE WHEN vt12.c0 THEN rt0.c0 ELSE rt0.c2 END THEN ((((vt12.c0)AND(rt0.c0)))AND(rt0.c1)) WHEN ((vt12.c0) BETWEEN (rt0.c3) AND (rt0.c2)) THEN CASE WHEN vt12.c0 THEN vt12.c0 ELSE rt0.c0 END WHEN (- (rt0.c0)) THEN NULL ELSE ((x'5d4d')&(rt0.c4)) END LEFT OUTER JOIN vt12 ON (((vt12.c0 IN ()))IS(((NULL)<>(vt12.c0)))));
SELECT * FROM rt0 CROSS JOIN vt0 ON CASE WHEN CASE WHEN vt12.c0 THEN rt0.c0 ELSE rt0.c2 END THEN ((((vt12.c0)AND(rt0.c0)))AND(rt0.c1)) WHEN ((vt12.c0) BETWEEN (rt0.c3) AND (rt0.c2)) THEN CASE WHEN vt12.c0 THEN vt12.c0 ELSE rt0.c0 END WHEN (- (rt0.c0)) THEN NULL ELSE ((x'5d4d')&(rt0.c4)) END LEFT OUTER JOIN vt12 ON (((vt12.c0 IN ()))IS(((NULL)<>(vt12.c0)))) WHERE (PRINTF((~ (vt0.c0))));
SELECT COUNT(*) FROM vt12, t0, rt0 WHERE (LIKELIHOOD(((t0.c1)+(rt0.c0)), 0.023386213135479172)) ORDER BY ((CAST(t0.c1 AS NUMERIC)) NOT BETWEEN (NULL) AND (((0Xffffffffdd77c3d9) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((t0.c1)+(rt0.c0)), 0.023386213135479172)) IS TRUE)  as count FROM vt12, t0, rt0 ORDER BY ((CAST(t0.c1 AS NUMERIC)) NOT BETWEEN (NULL) AND (((0Xffffffffdd77c3d9) IS TRUE))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt12, t0, rt0 WHERE (LIKELIHOOD(((t0.c1)+(rt0.c0)), 0.023386213135479172)) ORDER BY ((CAST(t0.c1 AS NUMERIC)) NOT BETWEEN (NULL) AND (((0Xffffffffdd77c3d9) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((t0.c1)+(rt0.c0)), 0.023386213135479172)) IS TRUE)  as count FROM vt12, t0, rt0 ORDER BY ((CAST(t0.c1 AS NUMERIC)) NOT BETWEEN (NULL) AND (((0Xffffffffdd77c3d9) IS TRUE))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt12, t0, rt0 WHERE (LIKELIHOOD(((t0.c1)+(rt0.c0)), 0.023386213135479172)) ORDER BY ((CAST(t0.c1 AS NUMERIC)) NOT BETWEEN (NULL) AND (((0Xffffffffdd77c3d9) IS TRUE))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, t0, vt12 WHERE ((CAST(vt12.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt12.c0 AS REAL) IN ())) IS TRUE)  as count FROM rt0, vt0, t0, vt12);
SELECT COUNT(*) FROM rt0, vt0, t0, vt12 WHERE ((CAST(vt12.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt12.c0 AS REAL) IN ())) IS TRUE)  as count FROM rt0, vt0, t0, vt12);
SELECT COUNT(*) FROM rt0, vt0, t0, vt12 WHERE ((CAST(vt12.c0 AS REAL) IN ()));
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST((+ (846347100)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((+ (846347100)) AS TEXT)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST((+ (846347100)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((+ (846347100)) AS TEXT)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST((+ (846347100)) AS TEXT));
SELECT * FROM t0, rt0, vt12, vt0 WHERE (((((((((((((CAST(vt0.c0 AS TEXT))OR((rt0.c3 IN ()))))OR('LG\r[a!რ钗')))OR(CASE NULL  WHEN rt0.c3 THEN rt0.c3 END)))OR(2012040978)))AND((('') IS TRUE))))AND(((rt0.c0)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((CAST(vt0.c0 AS TEXT))OR((rt0.c3 IN ()))))OR('LG\r[a!რ钗')))OR(CASE NULL  WHEN rt0.c3 THEN rt0.c3 END)))OR(2012040978)))AND((('') IS TRUE))))AND(((rt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM t0, rt0, vt12, vt0);
SELECT * FROM t0, rt0, vt12, vt0 WHERE (((((((((((((CAST(vt0.c0 AS TEXT))OR((rt0.c3 IN ()))))OR('LG\r[a!რ钗')))OR(CASE NULL  WHEN rt0.c3 THEN rt0.c3 END)))OR(2012040978)))AND((('') IS TRUE))))AND(((rt0.c0)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((CAST(vt0.c0 AS TEXT))OR((rt0.c3 IN ()))))OR('LG\r[a!რ钗')))OR(CASE NULL  WHEN rt0.c3 THEN rt0.c3 END)))OR(2012040978)))AND((('') IS TRUE))))AND(((rt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM t0, rt0, vt12, vt0);
SELECT * FROM t0, rt0, vt12, vt0 WHERE (((((((((((((CAST(vt0.c0 AS TEXT))OR((rt0.c3 IN ()))))OR('LG\r[a!რ钗')))OR(CASE NULL  WHEN rt0.c3 THEN rt0.c3 END)))OR(2012040978)))AND((('') IS TRUE))))AND(((rt0.c0)<<(vt0.c0)))));
SELECT ALL * FROM vt12, vt0 WHERE (((((vt12.c0)<(vt0.c0)))<(((vt12.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0)>=(x'b1d2'))) IS TRUE) ASC  NULLS LAST, (NOT (vt12.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt12.c0)<(vt0.c0)))<(((vt12.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt12, vt0 ORDER BY ((((vt0.c0)>=(x'b1d2'))) IS TRUE) ASC  NULLS LAST, (NOT (vt12.c0 COLLATE BINARY)) DESC);
SELECT ALL * FROM vt12, vt0 WHERE (((((vt12.c0)<(vt0.c0)))<(((vt12.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0)>=(x'b1d2'))) IS TRUE) ASC  NULLS LAST, (NOT (vt12.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt12.c0)<(vt0.c0)))<(((vt12.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt12, vt0 ORDER BY ((((vt0.c0)>=(x'b1d2'))) IS TRUE) ASC  NULLS LAST, (NOT (vt12.c0 COLLATE BINARY)) DESC);
SELECT ALL * FROM vt12, vt0 WHERE (((((vt12.c0)<(vt0.c0)))<(((vt12.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0)>=(x'b1d2'))) IS TRUE) ASC  NULLS LAST, (NOT (vt12.c0 COLLATE BINARY)) DESC;
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (NULL);
SELECT COUNT(*) FROM rt0, t0, vt12, vt0 WHERE (CAST((- (vt12.c0)) AS BLOB)) ORDER BY (((((((rt0.c3)OR(x'')))OR(vt0.c0)), CAST(rt0.c1 AS NUMERIC), CASE rt0.c4  WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c0 THEN t0.c1 WHEN t0.c2 THEN rt0.c4 ELSE t0.c0 END))>((CASE t0.c2  WHEN t0.c1 THEN vt0.c0 END, json_array_length(0.6494825791494574), vt12.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((- (vt12.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, t0 NOT INDEXED, vt12, vt0 ORDER BY (((((((rt0.c3)OR(x'')))OR(vt0.c0)), CAST(rt0.c1 AS NUMERIC), CASE rt0.c4  WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c0 THEN t0.c1 WHEN t0.c2 THEN rt0.c4 ELSE t0.c0 END))>((CASE t0.c2  WHEN t0.c1 THEN vt0.c0 END, json_array_length(0.6494825791494574), vt12.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, vt12, vt0 WHERE (CAST((- (vt12.c0)) AS BLOB)) ORDER BY (((((((rt0.c3)OR(x'')))OR(vt0.c0)), CAST(rt0.c1 AS NUMERIC), CASE rt0.c4  WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c0 THEN t0.c1 WHEN t0.c2 THEN rt0.c4 ELSE t0.c0 END))>((CASE t0.c2  WHEN t0.c1 THEN vt0.c0 END, json_array_length(0.6494825791494574), vt12.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((- (vt12.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, t0 NOT INDEXED, vt12, vt0 ORDER BY (((((((rt0.c3)OR(x'')))OR(vt0.c0)), CAST(rt0.c1 AS NUMERIC), CASE rt0.c4  WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c0 THEN t0.c1 WHEN t0.c2 THEN rt0.c4 ELSE t0.c0 END))>((CASE t0.c2  WHEN t0.c1 THEN vt0.c0 END, json_array_length(0.6494825791494574), vt12.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, vt12, vt0 WHERE (CAST((- (vt12.c0)) AS BLOB)) ORDER BY (((((((rt0.c3)OR(x'')))OR(vt0.c0)), CAST(rt0.c1 AS NUMERIC), CASE rt0.c4  WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c0 THEN t0.c1 WHEN t0.c2 THEN rt0.c4 ELSE t0.c0 END))>((CASE t0.c2  WHEN t0.c1 THEN vt0.c0 END, json_array_length(0.6494825791494574), vt12.c0))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt12, t0 WHERE (CAST(CAST(-901938771 AS BLOB) AS BLOB)) ORDER BY UNLIKELY(DISTINCT CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN t0.c2 WHEN rt0.c4 THEN vt12.c0 ELSE rt0.c0 END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(-901938771 AS BLOB) AS BLOB)) IS TRUE)  as count FROM rt0, vt12, t0 ORDER BY UNLIKELY(DISTINCT CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN t0.c2 WHEN rt0.c4 THEN vt12.c0 ELSE rt0.c0 END) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt12, t0 WHERE (CAST(CAST(-901938771 AS BLOB) AS BLOB)) ORDER BY UNLIKELY(DISTINCT CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN t0.c2 WHEN rt0.c4 THEN vt12.c0 ELSE rt0.c0 END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(-901938771 AS BLOB) AS BLOB)) IS TRUE)  as count FROM rt0, vt12, t0 ORDER BY UNLIKELY(DISTINCT CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN t0.c2 WHEN rt0.c4 THEN vt12.c0 ELSE rt0.c0 END) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt12, t0 WHERE (CAST(CAST(-901938771 AS BLOB) AS BLOB)) ORDER BY UNLIKELY(DISTINCT CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN t0.c2 WHEN rt0.c4 THEN vt12.c0 ELSE rt0.c0 END) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (LAST_INSERT_ROWID());
SELECT ALL COUNT(*) FROM t0, rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c4)>>(vt0.c0))) IS TRUE) INNER JOIN vt12 ON CAST((~ (rt0.c1)) AS INTEGER) WHERE (((((x'c485')AND(CAST(rt0.c2 AS NUMERIC))))OR(((x'')%(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'c485')AND(CAST(rt0.c2 AS NUMERIC))))OR(((x'')%(x''))))) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c4)>>(vt0.c0))) IS TRUE) INNER JOIN vt12 ON CAST((~ (rt0.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM t0, rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c4)>>(vt0.c0))) IS TRUE) INNER JOIN vt12 ON CAST((~ (rt0.c1)) AS INTEGER) WHERE (((((x'c485')AND(CAST(rt0.c2 AS NUMERIC))))OR(((x'')%(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'c485')AND(CAST(rt0.c2 AS NUMERIC))))OR(((x'')%(x''))))) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c4)>>(vt0.c0))) IS TRUE) INNER JOIN vt12 ON CAST((~ (rt0.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM t0, rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c4)>>(vt0.c0))) IS TRUE) INNER JOIN vt12 ON CAST((~ (rt0.c1)) AS INTEGER) WHERE (((((x'c485')AND(CAST(rt0.c2 AS NUMERIC))))OR(((x'')%(x'')))));
SELECT * FROM t0, vt12 WHERE (t0.c0) ORDER BY (((vt12.c0) ISNULL) IN (t0.c1, ((t0.c2)<>(t0.c2)))), (((vt12.c0) NOT NULL) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt12 ORDER BY (((vt12.c0) ISNULL) IN (t0.c1, ((t0.c2)!=(t0.c2)))), (((vt12.c0) NOT NULL) IN ()) ASC  NULLS FIRST);
SELECT * FROM t0, vt12 WHERE (t0.c0) ORDER BY (((vt12.c0) ISNULL) IN (t0.c1, ((t0.c2)<>(t0.c2)))), (((vt12.c0) NOT NULL) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt12 ORDER BY (((vt12.c0) ISNULL) IN (t0.c1, ((t0.c2)!=(t0.c2)))), (((vt12.c0) NOT NULL) IN ()) ASC  NULLS FIRST);
SELECT * FROM t0, vt12 WHERE (t0.c0) ORDER BY (((vt12.c0) ISNULL) IN (t0.c1, ((t0.c2)<>(t0.c2)))), (((vt12.c0) NOT NULL) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt12 WHERE (((((vt12.c0) BETWEEN (vt12.c0) AND (vt12.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt12.c0) BETWEEN (vt12.c0) AND (vt12.c0))) ISNULL)) IS TRUE)  as count FROM vt12);
SELECT COUNT(*) FROM vt12 WHERE (((((vt12.c0) BETWEEN (vt12.c0) AND (vt12.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt12.c0) BETWEEN (vt12.c0) AND (vt12.c0))) ISNULL)) IS TRUE)  as count FROM vt12);
SELECT COUNT(*) FROM vt12 WHERE (((((vt12.c0) BETWEEN (vt12.c0) AND (vt12.c0))) ISNULL));
SELECT COUNT(*) FROM rt0 WHERE ((~ (rt0.c0)) COLLATE BINARY) ORDER BY CASE (NOT (rt0.c3))  WHEN CAST(rt0.c3 AS NUMERIC) THEN CAST(rt0.c3 AS BLOB) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY CASE (NOT (rt0.c3))  WHEN CAST(rt0.c3 AS NUMERIC) THEN CAST(rt0.c3 AS BLOB) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((~ (rt0.c0)) COLLATE BINARY) ORDER BY CASE (NOT (rt0.c3))  WHEN CAST(rt0.c3 AS NUMERIC) THEN CAST(rt0.c3 AS BLOB) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY CASE (NOT (rt0.c3))  WHEN CAST(rt0.c3 AS NUMERIC) THEN CAST(rt0.c3 AS BLOB) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((~ (rt0.c0)) COLLATE BINARY) ORDER BY CASE (NOT (rt0.c3))  WHEN CAST(rt0.c3 AS NUMERIC) THEN CAST(rt0.c3 AS BLOB) END  NULLS FIRST;
SELECT * FROM t0 INNER JOIN vt12 ON ((CASE WHEN rt0.c1 THEN t0.c2 END)>=((rt0.c3 IN ()))) RIGHT OUTER JOIN vt0 ON t0.c2 COLLATE BINARY FULL OUTER JOIN rt0 ON rt0.c3 WHERE ((((vt12.c0) IS TRUE) IN ())) ORDER BY ((LIKELY(t0.c0)) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((x'996b')))) AND (((((vt0.c0)OR(rt0.c0)))OR(t0.c2))))  NULLS FIRST, SQLITE_COMPILEOPTION_USED((- (t0.c1))) ASC  NULLS FIRST, ((rt0.c2 COLLATE NOCASE) BETWEEN (rt0.c1) AND (((vt12.c0)+(0.37418771529080697))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt12.c0) IS TRUE) IN ())) IS TRUE)  as count FROM t0 INNER JOIN vt12 ON ((CASE WHEN rt0.c1 THEN t0.c2 END)>=((rt0.c3 IN ()))) RIGHT OUTER JOIN vt0 ON t0.c2 COLLATE BINARY FULL OUTER JOIN rt0 ON rt0.c3 ORDER BY ((LIKELY(t0.c0)) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((x'996b')))) AND (((((vt0.c0)OR(rt0.c0)))OR(t0.c2))))  NULLS FIRST, SQLITE_COMPILEOPTION_USED((- (t0.c1))) ASC  NULLS FIRST, ((rt0.c2 COLLATE NOCASE) BETWEEN (rt0.c1) AND (((vt12.c0)+(0.37418771529080697))))  NULLS FIRST);
SELECT * FROM t0 INNER JOIN vt12 ON ((CASE WHEN rt0.c1 THEN t0.c2 END)>=((rt0.c3 IN ()))) RIGHT OUTER JOIN vt0 ON t0.c2 COLLATE BINARY FULL OUTER JOIN rt0 ON rt0.c3 WHERE ((((vt12.c0) IS TRUE) IN ())) ORDER BY ((LIKELY(t0.c0)) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((x'996b')))) AND (((((vt0.c0)OR(rt0.c0)))OR(t0.c2))))  NULLS FIRST, SQLITE_COMPILEOPTION_USED((- (t0.c1))) ASC  NULLS FIRST, ((rt0.c2 COLLATE NOCASE) BETWEEN (rt0.c1) AND (((vt12.c0)+(0.37418771529080697))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt12.c0) IS TRUE) IN ())) IS TRUE)  as count FROM t0 INNER JOIN vt12 ON ((CASE WHEN rt0.c1 THEN t0.c2 END)>=((rt0.c3 IN ()))) RIGHT OUTER JOIN vt0 ON t0.c2 COLLATE BINARY FULL OUTER JOIN rt0 ON rt0.c3 ORDER BY ((LIKELY(t0.c0)) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((x'996b')))) AND (((((vt0.c0)OR(rt0.c0)))OR(t0.c2))))  NULLS FIRST, SQLITE_COMPILEOPTION_USED((- (t0.c1))) ASC  NULLS FIRST, ((rt0.c2 COLLATE NOCASE) BETWEEN (rt0.c1) AND (((vt12.c0)+(0.37418771529080697))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c3)<<(rt0.c0))) BETWEEN (COALESCE(rt0.c3, rt0.c1)) AND (rt0.c3)), ((((rt0.c3)||(rt0.c3)))OR(CAST(rt0.c4 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)<<(rt0.c0))) BETWEEN (COALESCE(rt0.c3, rt0.c1)) AND (rt0.c3)), ((((rt0.c3)||(rt0.c3)))OR(CAST(rt0.c4 AS TEXT))) ASC);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c3)<<(rt0.c0))) BETWEEN (COALESCE(rt0.c3, rt0.c1)) AND (rt0.c3)), ((((rt0.c3)||(rt0.c3)))OR(CAST(rt0.c4 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)<<(rt0.c0))) BETWEEN (COALESCE(rt0.c3, rt0.c1)) AND (rt0.c3)), ((((rt0.c3)||(rt0.c3)))OR(CAST(rt0.c4 AS TEXT))) ASC);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c3)<<(rt0.c0))) BETWEEN (COALESCE(rt0.c3, rt0.c1)) AND (rt0.c3)), ((((rt0.c3)||(rt0.c3)))OR(CAST(rt0.c4 AS TEXT))) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((json_object(rt0.c4, rt0.c1))OR((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_object(rt0.c4, rt0.c1))OR((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((json_object(rt0.c4, rt0.c1))OR((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_object(rt0.c4, rt0.c1))OR((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((json_object(rt0.c4, rt0.c1))OR((NOT (rt0.c1)))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt12 ON ((t0.c2)==(t0.c0)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON json_array((((x'')) NOT BETWEEN ((t0.c1)) AND ((t0.c2))), ((rt0.c2)>(rt0.c1)), ((rt0.c3) NOTNULL), (rt0.c0 IN (t0.c2))) WHERE ((((t0.c1)) NOT BETWEEN ((((rt0.c4)*(rt0.c2)))) AND (((- (t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) NOT BETWEEN ((((rt0.c4)*(rt0.c2)))) AND (((- (t0.c2)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt12 ON ((t0.c2)==(t0.c0)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON json_array((((x'')) NOT BETWEEN ((t0.c1)) AND ((t0.c2))), ((rt0.c2)>(rt0.c1)), ((rt0.c3) NOTNULL), (rt0.c0 IN (t0.c2))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt12 ON ((t0.c2)==(t0.c0)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON json_array((((x'')) NOT BETWEEN ((t0.c1)) AND ((t0.c2))), ((rt0.c2)>(rt0.c1)), ((rt0.c3) NOTNULL), (rt0.c0 IN (t0.c2))) WHERE ((((t0.c1)) NOT BETWEEN ((((rt0.c4)*(rt0.c2)))) AND (((- (t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) NOT BETWEEN ((((rt0.c4)*(rt0.c2)))) AND (((- (t0.c2)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt12 ON ((t0.c2)==(t0.c0)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON json_array((((x'')) NOT BETWEEN ((t0.c1)) AND ((t0.c2))), ((rt0.c2)>(rt0.c1)), ((rt0.c3) NOTNULL), (rt0.c0 IN (t0.c2))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt12 ON ((t0.c2)==(t0.c0)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON json_array((((x'')) NOT BETWEEN ((t0.c1)) AND ((t0.c2))), ((rt0.c2)>(rt0.c1)), ((rt0.c3) NOTNULL), (rt0.c0 IN (t0.c2))) WHERE ((((t0.c1)) NOT BETWEEN ((((rt0.c4)*(rt0.c2)))) AND (((- (t0.c2))))));
SELECT ALL COUNT(*) FROM vt12, rt0, t0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM vt12, rt0, t0);
SELECT ALL COUNT(*) FROM vt12, rt0, t0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM vt12, rt0, t0);
SELECT ALL COUNT(*) FROM vt12, rt0, t0 WHERE (rt0.c4);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(((rt0.c2)&(rt0.c2)) AS NUMERIC)) ORDER BY CASE WHEN ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0)) THEN vt0.c0 ELSE rt0.c0 END DESC, (((((t0.c1))!=((rt0.c2))))=((NOT (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)&(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CASE WHEN ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0)) THEN vt0.c0 ELSE rt0.c0 END DESC, (((((t0.c1))!=((rt0.c2))))=((NOT (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(((rt0.c2)&(rt0.c2)) AS NUMERIC)) ORDER BY CASE WHEN ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0)) THEN vt0.c0 ELSE rt0.c0 END DESC, (((((t0.c1))!=((rt0.c2))))=((NOT (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)&(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CASE WHEN ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0)) THEN vt0.c0 ELSE rt0.c0 END DESC, (((((t0.c1))!=((rt0.c2))))=((NOT (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(((rt0.c2)&(rt0.c2)) AS NUMERIC)) ORDER BY CASE WHEN ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0)) THEN vt0.c0 ELSE rt0.c0 END DESC, (((((t0.c1))!=((rt0.c2))))=((NOT (vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM rt0, t0, vt12 WHERE (1.409037878E9);
SELECT SUM(count) FROM (SELECT ((1.409037878E9) IS TRUE)  as count FROM rt0, t0, vt12);
SELECT ALL * FROM rt0, t0, vt12 WHERE (1.409037878E9);
SELECT SUM(count) FROM (SELECT ((1.409037878E9) IS TRUE)  as count FROM rt0, t0, vt12);
SELECT ALL * FROM rt0, t0, vt12 WHERE (1.409037878E9);
SELECT ALL COUNT(*) FROM vt12, vt0 INNER JOIN t0 ON (+ (((NULL)GLOB(t0.c2)))) FULL OUTER JOIN rt0 ON x'5879' WHERE (x'938a');
SELECT SUM(count) FROM (SELECT ((x'938a') IS TRUE)  as count FROM vt12, vt0 INNER JOIN t0 ON (+ (((NULL)GLOB(t0.c2)))) FULL OUTER JOIN rt0 ON x'5879');
SELECT ALL COUNT(*) FROM vt12, vt0 INNER JOIN t0 ON (+ (((NULL)GLOB(t0.c2)))) FULL OUTER JOIN rt0 ON x'5879' WHERE (x'938a');
SELECT SUM(count) FROM (SELECT ((x'938a') IS TRUE)  as count FROM vt12, vt0 INNER JOIN t0 ON (+ (((NULL)GLOB(t0.c2)))) FULL OUTER JOIN rt0 ON x'5879');
SELECT ALL COUNT(*) FROM vt12, vt0 INNER JOIN t0 ON (+ (((NULL)GLOB(t0.c2)))) FULL OUTER JOIN rt0 ON x'5879' WHERE (x'938a');
SELECT COUNT(*) FROM vt0, t0, rt0, vt12 WHERE ((((t0.c2) NOTNULL) IN ())) ORDER BY ((CAST(t0.c1 AS TEXT)) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2) NOTNULL) IN ())) IS TRUE)  as count FROM vt0, t0, rt0, vt12 ORDER BY ((CAST(t0.c1 AS TEXT)) NOTNULL));
SELECT COUNT(*) FROM vt0, t0, rt0, vt12 WHERE ((((t0.c2) NOTNULL) IN ())) ORDER BY ((CAST(t0.c1 AS TEXT)) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2) NOTNULL) IN ())) IS TRUE)  as count FROM vt0, t0, rt0, vt12 ORDER BY ((CAST(t0.c1 AS TEXT)) NOTNULL));
SELECT COUNT(*) FROM vt0, t0, rt0, vt12 WHERE ((((t0.c2) NOTNULL) IN ())) ORDER BY ((CAST(t0.c1 AS TEXT)) NOTNULL);
SELECT * FROM vt12, vt0, t0 WHERE ((((t0.c2)LIKE(t0.c1)) IN ())) ORDER BY ((CASE WHEN t0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt12.c0 WHEN t0.c1 THEN t0.c1 ELSE vt12.c0 END)LIKE((NOT (t0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)LIKE(t0.c1)) IN ())) IS TRUE)  as count FROM vt12, vt0, t0 ORDER BY ((CASE WHEN t0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt12.c0 WHEN t0.c1 THEN t0.c1 ELSE vt12.c0 END)LIKE((NOT (t0.c1)))));
SELECT * FROM vt12, vt0, t0 WHERE ((((t0.c2)LIKE(t0.c1)) IN ())) ORDER BY ((CASE WHEN t0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt12.c0 WHEN t0.c1 THEN t0.c1 ELSE vt12.c0 END)LIKE((NOT (t0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)LIKE(t0.c1)) IN ())) IS TRUE)  as count FROM vt12, vt0, t0 ORDER BY ((CASE WHEN t0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt12.c0 WHEN t0.c1 THEN t0.c1 ELSE vt12.c0 END)LIKE((NOT (t0.c1)))));
SELECT * FROM vt12, vt0, t0 WHERE ((((t0.c2)LIKE(t0.c1)) IN ())) ORDER BY ((CASE WHEN t0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt12.c0 WHEN t0.c1 THEN t0.c1 ELSE vt12.c0 END)LIKE((NOT (t0.c1))));
SELECT * FROM vt0 WHERE (((SQLITE_COMPILEOPTION_USED(vt0.c0))GLOB(-1.322525048E9))) ORDER BY json_remove(vt0.c0, vt0.c0 COLLATE NOCASE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_USED(vt0.c0))GLOB(-1.322525048E9))) IS TRUE)  as count FROM vt0 ORDER BY json_remove(vt0.c0, vt0.c0 COLLATE NOCASE)  NULLS FIRST);
SELECT * FROM vt0 WHERE (((SQLITE_COMPILEOPTION_USED(vt0.c0))GLOB(-1.322525048E9))) ORDER BY json_remove(vt0.c0, vt0.c0 COLLATE NOCASE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_USED(vt0.c0))GLOB(-1.322525048E9))) IS TRUE)  as count FROM vt0 ORDER BY json_remove(vt0.c0, vt0.c0 COLLATE NOCASE)  NULLS FIRST);
SELECT * FROM vt0 WHERE (((SQLITE_COMPILEOPTION_USED(vt0.c0))GLOB(-1.322525048E9))) ORDER BY json_remove(vt0.c0, vt0.c0 COLLATE NOCASE)  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ORDER BY (CASE WHEN t0.c2 THEN t0.c1 END IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY (CASE WHEN t0.c2 THEN t0.c1 END IN ()) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ORDER BY (CASE WHEN t0.c2 THEN t0.c1 END IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY (CASE WHEN t0.c2 THEN t0.c1 END IN ()) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ORDER BY (CASE WHEN t0.c2 THEN t0.c1 END IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt12, t0, rt0 WHERE (((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)))|(((vt0.c0)<<(vt0.c0))))) ORDER BY (+ ((t0.c0 IN (rt0.c4)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)))|(((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0, vt12, t0, rt0 ORDER BY (+ ((t0.c0 IN (rt0.c4)))) DESC);
SELECT COUNT(*) FROM vt0, vt12, t0, rt0 WHERE (((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)))|(((vt0.c0)<<(vt0.c0))))) ORDER BY (+ ((t0.c0 IN (rt0.c4)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)))|(((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0, vt12, t0, rt0 ORDER BY (+ ((t0.c0 IN (rt0.c4)))) DESC);
SELECT COUNT(*) FROM vt0, vt12, t0, rt0 WHERE (((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)))|(((vt0.c0)<<(vt0.c0))))) ORDER BY (+ ((t0.c0 IN (rt0.c4)))) DESC;
SELECT * FROM rt0, t0, vt0 WHERE ((((rt0.c3 IN ())) NOT BETWEEN ((((rt0.c1))==(('')))) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ())) NOT BETWEEN ((((rt0.c1))==(('')))) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE ((((rt0.c3 IN ())) NOT BETWEEN ((((rt0.c1))==(('')))) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ())) NOT BETWEEN ((((rt0.c1))==(('')))) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE ((((rt0.c3 IN ())) NOT BETWEEN ((((rt0.c1))==(('')))) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt12, t0, rt0 WHERE (t0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt12, t0, rt0);
SELECT ALL COUNT(*) FROM vt12, t0, rt0 WHERE (t0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt12, t0, rt0);
SELECT ALL COUNT(*) FROM vt12, t0, rt0 WHERE (t0.c0 COLLATE RTRIM);
SELECT ALL * FROM t0, vt12, rt0, vt0 WHERE ((((+ (rt0.c1)))AND(((((((((vt12.c0)OR(vt12.c0)))OR(rt0.c4)))AND(NULL)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1)))AND(((((((((vt12.c0)OR(vt12.c0)))OR(rt0.c4)))AND(NULL)))OR(rt0.c3))))) IS TRUE)  as count FROM t0, vt12, rt0, vt0);
SELECT ALL * FROM t0, vt12, rt0, vt0 WHERE ((((+ (rt0.c1)))AND(((((((((vt12.c0)OR(vt12.c0)))OR(rt0.c4)))AND(NULL)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1)))AND(((((((((vt12.c0)OR(vt12.c0)))OR(rt0.c4)))AND(NULL)))OR(rt0.c3))))) IS TRUE)  as count FROM t0, vt12, rt0, vt0);
SELECT ALL * FROM t0, vt12, rt0, vt0 WHERE ((((+ (rt0.c1)))AND(((((((((vt12.c0)OR(vt12.c0)))OR(rt0.c4)))AND(NULL)))OR(rt0.c3)))));
SELECT COUNT(*) FROM rt0, vt0, t0, vt12 WHERE (-2143912412) ORDER BY CAST(rt0.c4 AS TEXT) DESC  NULLS FIRST, ((TRIM(t0.c0, rt0.c2)) BETWEEN (((((vt12.c0)AND(vt12.c0)))OR(rt0.c4))) AND (NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((-2143912412) IS TRUE)  as count FROM rt0, vt0, t0, vt12 ORDER BY CAST(rt0.c4 AS TEXT) DESC  NULLS FIRST, ((TRIM(t0.c0, rt0.c2)) BETWEEN (((((vt12.c0)AND(vt12.c0)))OR(rt0.c4))) AND (NULL)) ASC);
SELECT COUNT(*) FROM rt0, vt0, t0, vt12 WHERE (-2143912412) ORDER BY CAST(rt0.c4 AS TEXT) DESC  NULLS FIRST, ((TRIM(t0.c0, rt0.c2)) BETWEEN (((((vt12.c0)AND(vt12.c0)))OR(rt0.c4))) AND (NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((-2143912412) IS TRUE)  as count FROM rt0, vt0, t0, vt12 ORDER BY CAST(rt0.c4 AS TEXT) DESC  NULLS FIRST, ((TRIM(t0.c0, rt0.c2)) BETWEEN (((((vt12.c0)AND(vt12.c0)))OR(rt0.c4))) AND (NULL)) ASC);
SELECT COUNT(*) FROM rt0, vt0, t0, vt12 WHERE (-2143912412) ORDER BY CAST(rt0.c4 AS TEXT) DESC  NULLS FIRST, ((TRIM(t0.c0, rt0.c2)) BETWEEN (((((vt12.c0)AND(vt12.c0)))OR(rt0.c4))) AND (NULL)) ASC;
SELECT ALL COUNT(*) FROM vt12, vt0 INNER JOIN rt0 ON (t0.c2 COLLATE NOCASE IN ()) LEFT OUTER JOIN t0 ON ((((t0.c2) NOT NULL))GLOB(((rt0.c3)<=(rt0.c3)))) WHERE ('-183374263');
SELECT SUM(count) FROM (SELECT (('-183374263') IS TRUE)  as count FROM vt12, vt0 INNER JOIN rt0 ON (t0.c2 COLLATE NOCASE IN ()) LEFT OUTER JOIN t0 ON ((((t0.c2) NOT NULL))GLOB(((rt0.c3)<=(rt0.c3)))));
SELECT ALL COUNT(*) FROM vt12, vt0 INNER JOIN rt0 ON (t0.c2 COLLATE NOCASE IN ()) LEFT OUTER JOIN t0 ON ((((t0.c2) NOT NULL))GLOB(((rt0.c3)<=(rt0.c3)))) WHERE ('-183374263');
SELECT SUM(count) FROM (SELECT (('-183374263') IS TRUE)  as count FROM vt12, vt0 INNER JOIN rt0 ON (t0.c2 COLLATE NOCASE IN ()) LEFT OUTER JOIN t0 ON ((((t0.c2) NOT NULL))GLOB(((rt0.c3)<=(rt0.c3)))));
SELECT ALL COUNT(*) FROM vt12, vt0 INNER JOIN rt0 ON (t0.c2 COLLATE NOCASE IN ()) LEFT OUTER JOIN t0 ON ((((t0.c2) NOT NULL))GLOB(((rt0.c3)<=(rt0.c3)))) WHERE ('-183374263');
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c4)AND(rt0.c2)) COLLATE RTRIM WHERE ((((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)) IN (0Xffffffffb8d2b933)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)) IN (0Xffffffffb8d2b933))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c4)AND(rt0.c2)) COLLATE RTRIM);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c4)AND(rt0.c2)) COLLATE RTRIM WHERE ((((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)) IN (0Xffffffffb8d2b933)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)) IN (0Xffffffffb8d2b933))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c4)AND(rt0.c2)) COLLATE RTRIM);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c4)AND(rt0.c2)) COLLATE RTRIM WHERE ((((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)) IN (0Xffffffffb8d2b933)));
SELECT ALL * FROM rt0, vt12, vt0 WHERE ((((CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END))=((((vt0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END))=((((vt0.c0) IS FALSE))))) IS TRUE)  as count FROM rt0, vt12, vt0);
SELECT ALL * FROM rt0, vt12, vt0 WHERE ((((CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END))=((((vt0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END))=((((vt0.c0) IS FALSE))))) IS TRUE)  as count FROM rt0, vt12, vt0);
SELECT ALL * FROM rt0, vt12, vt0 WHERE ((((CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END))=((((vt0.c0) IS FALSE)))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON x'' RIGHT OUTER JOIN vt12 ON ((rt0.c2)IS(rt0.c0)) COLLATE BINARY WHERE ((((((vt0.c0, vt12.c0, rt0.c4))>((rt0.c1, rt0.c2, x'ed15'))))LIKE(((vt12.c0)AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt12.c0, rt0.c4))>((rt0.c1, rt0.c2, x'ed15'))))LIKE(((vt12.c0)AND(rt0.c3))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON x'' RIGHT OUTER JOIN vt12 ON ((rt0.c2)IS(rt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON x'' RIGHT OUTER JOIN vt12 ON ((rt0.c2)IS(rt0.c0)) COLLATE BINARY WHERE ((((((vt0.c0, vt12.c0, rt0.c4))>((rt0.c1, rt0.c2, x'ed15'))))LIKE(((vt12.c0)AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt12.c0, rt0.c4))>((rt0.c1, rt0.c2, x'ed15'))))LIKE(((vt12.c0)AND(rt0.c3))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON x'' RIGHT OUTER JOIN vt12 ON ((rt0.c2)IS(rt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON x'' RIGHT OUTER JOIN vt12 ON ((rt0.c2)IS(rt0.c0)) COLLATE BINARY WHERE ((((((vt0.c0, vt12.c0, rt0.c4))>((rt0.c1, rt0.c2, x'ed15'))))LIKE(((vt12.c0)AND(rt0.c3)))));
SELECT COUNT(*) FROM vt12 WHERE (CASE WHEN ((vt12.c0)OR(vt12.c0)) THEN ((vt12.c0) NOT NULL) WHEN ((((NULL)OR(NULL)))AND(-413646909)) THEN ((((vt12.c0)OR(vt12.c0)))AND(vt12.c0)) WHEN ((vt12.c0)==(vt12.c0)) THEN '731469489' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt12.c0)OR(vt12.c0)) THEN ((vt12.c0) NOT NULL) WHEN ((((NULL)OR(NULL)))AND(-413646909)) THEN ((((vt12.c0)OR(vt12.c0)))AND(vt12.c0)) WHEN ((vt12.c0)==(vt12.c0)) THEN '731469489' END) IS TRUE)  as count FROM vt12);
SELECT COUNT(*) FROM vt12 WHERE (CASE WHEN ((vt12.c0)OR(vt12.c0)) THEN ((vt12.c0) NOT NULL) WHEN ((((NULL)OR(NULL)))AND(-413646909)) THEN ((((vt12.c0)OR(vt12.c0)))AND(vt12.c0)) WHEN ((vt12.c0)==(vt12.c0)) THEN '731469489' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt12.c0)OR(vt12.c0)) THEN ((vt12.c0) NOT NULL) WHEN ((((NULL)OR(NULL)))AND(-413646909)) THEN ((((vt12.c0)OR(vt12.c0)))AND(vt12.c0)) WHEN ((vt12.c0)==(vt12.c0)) THEN '731469489' END) IS TRUE)  as count FROM vt12);
SELECT COUNT(*) FROM vt12 WHERE (CASE WHEN ((vt12.c0)OR(vt12.c0)) THEN ((vt12.c0) NOT NULL) WHEN ((((NULL)OR(NULL)))AND(-413646909)) THEN ((((vt12.c0)OR(vt12.c0)))AND(vt12.c0)) WHEN ((vt12.c0)==(vt12.c0)) THEN '731469489' END);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))) THEN CAST(t0.c2 AS NUMERIC) WHEN LIKELY(t0.c0) THEN (t0.c1 IN (rt0.c4)) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (vt12.c0)) THEN (((vt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c0))) END FULL OUTER JOIN vt12 ON (NOT ((rt0.c2 IN ()))) FULL OUTER JOIN t0 ON ((NULL)/(CAST(rt0.c4 AS REAL))) WHERE (CASE WHEN ((((((((t0.c0)AND(rt0.c0)))OR(t0.c0)))AND(rt0.c1)))OR(rt0.c2)) THEN rt0.c3 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((t0.c0)AND(rt0.c0)))OR(t0.c0)))AND(rt0.c1)))OR(rt0.c2)) THEN rt0.c3 END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))) THEN CAST(t0.c2 AS NUMERIC) WHEN LIKELY(t0.c0) THEN (t0.c1 IN (rt0.c4)) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (vt12.c0)) THEN (((vt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c0))) END FULL OUTER JOIN vt12 ON (NOT ((rt0.c2 IN ()))) FULL OUTER JOIN t0 ON ((NULL)/(CAST(rt0.c4 AS REAL))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))) THEN CAST(t0.c2 AS NUMERIC) WHEN LIKELY(t0.c0) THEN (t0.c1 IN (rt0.c4)) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (vt12.c0)) THEN (((vt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c0))) END FULL OUTER JOIN vt12 ON (NOT ((rt0.c2 IN ()))) FULL OUTER JOIN t0 ON ((NULL)/(CAST(rt0.c4 AS REAL))) WHERE (CASE WHEN ((((((((t0.c0)AND(rt0.c0)))OR(t0.c0)))AND(rt0.c1)))OR(rt0.c2)) THEN rt0.c3 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((t0.c0)AND(rt0.c0)))OR(t0.c0)))AND(rt0.c1)))OR(rt0.c2)) THEN rt0.c3 END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))) THEN CAST(t0.c2 AS NUMERIC) WHEN LIKELY(t0.c0) THEN (t0.c1 IN (rt0.c4)) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (vt12.c0)) THEN (((vt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c0))) END FULL OUTER JOIN vt12 ON (NOT ((rt0.c2 IN ()))) FULL OUTER JOIN t0 ON ((NULL)/(CAST(rt0.c4 AS REAL))));
SELECT COUNT(*) FROM vt0, vt12, rt0, t0 WHERE (json_remove(((0.962699181695718)>=(t0.c0)), TRIM(DISTINCT x'', vt0.c0), (t0.c2 IN ()), CAST(rt0.c2 AS REAL))) ORDER BY (- (CAST(x'' AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_remove(((0.962699181695718)>=(t0.c0)), TRIM(DISTINCT x'', vt0.c0), (t0.c2 IN ()), CAST(rt0.c2 AS REAL))) IS TRUE)  as count FROM vt0, vt12, rt0, t0 ORDER BY (- (CAST(x'' AS INTEGER))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt12, rt0, t0 WHERE (json_remove(((0.962699181695718)>=(t0.c0)), TRIM(DISTINCT x'', vt0.c0), (t0.c2 IN ()), CAST(rt0.c2 AS REAL))) ORDER BY (- (CAST(x'' AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_remove(((0.962699181695718)>=(t0.c0)), TRIM(DISTINCT x'', vt0.c0), (t0.c2 IN ()), CAST(rt0.c2 AS REAL))) IS TRUE)  as count FROM vt0, vt12, rt0, t0 ORDER BY (- (CAST(x'' AS INTEGER))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt12, rt0, t0 WHERE (json_remove(((0.962699181695718)>=(t0.c0)), TRIM(DISTINCT x'', vt0.c0), (t0.c2 IN ()), CAST(rt0.c2 AS REAL))) ORDER BY (- (CAST(x'' AS INTEGER))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (((((t0.c2)AND(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((t0.c2)AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (((((t0.c2)AND(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((t0.c2)AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (((((t0.c2)AND(t0.c0)))AND(t0.c0)))));
SELECT COUNT(*) FROM vt0, vt12 WHERE ((((((0.3336800339946766) NOT BETWEEN (vt12.c0) AND (vt12.c0))))=((CAST('|L6C' AS TEXT))))) ORDER BY (((0.5674960350031398 IN (vt0.c0))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((0.3336800339946766) NOT BETWEEN (vt12.c0) AND (vt12.c0))))=((CAST('|L6C' AS TEXT))))) IS TRUE)  as count FROM vt0, vt12 ORDER BY (((0.5674960350031398 IN (vt0.c0))) IS TRUE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt12 WHERE ((((((0.3336800339946766) NOT BETWEEN (vt12.c0) AND (vt12.c0))))=((CAST('|L6C' AS TEXT))))) ORDER BY (((0.5674960350031398 IN (vt0.c0))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((0.3336800339946766) NOT BETWEEN (vt12.c0) AND (vt12.c0))))=((CAST('|L6C' AS TEXT))))) IS TRUE)  as count FROM vt0, vt12 ORDER BY (((0.5674960350031398 IN (vt0.c0))) IS TRUE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt12 WHERE ((((((0.3336800339946766) NOT BETWEEN (vt12.c0) AND (vt12.c0))))=((CAST('|L6C' AS TEXT))))) ORDER BY (((0.5674960350031398 IN (vt0.c0))) IS TRUE) ASC  NULLS FIRST;
SELECT ALL * FROM vt12, rt0 WHERE (CAST(((rt0.c4) NOT NULL) AS BLOB)) ORDER BY ((((rt0.c3) IS TRUE))>=(rt0.c3 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c4) NOT NULL) AS BLOB)) IS TRUE)  as count FROM vt12, rt0 ORDER BY ((((rt0.c3) IS TRUE))>=(rt0.c3 COLLATE BINARY))  NULLS LAST);
SELECT ALL * FROM vt12, rt0 WHERE (CAST(((rt0.c4) NOT NULL) AS BLOB)) ORDER BY ((((rt0.c3) IS TRUE))>=(rt0.c3 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c4) NOT NULL) AS BLOB)) IS TRUE)  as count FROM vt12, rt0 ORDER BY ((((rt0.c3) IS TRUE))>=(rt0.c3 COLLATE BINARY))  NULLS LAST);
SELECT ALL * FROM vt12, rt0 WHERE (CAST(((rt0.c4) NOT NULL) AS BLOB)) ORDER BY ((((rt0.c3) IS TRUE))>=(rt0.c3 COLLATE BINARY))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (CAST(vt0.c0 AS TEXT))));
SELECT * FROM vt0 WHERE ((((((vt0.c0 IN (vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN (vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0 IN (vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN (vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0 IN (vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))));
SELECT COUNT(*) FROM vt12 FULL OUTER JOIN t0 ON UNLIKELY(TRIM(DISTINCT vt12.c0, vt12.c0)) WHERE (((((((t0.c1)AND(t0.c1)))OR(vt12.c0))) BETWEEN (CASE WHEN '-131108496' THEN 'ln&' END) AND (CASE t0.c0  WHEN t0.c1 THEN t0.c2 END))) ORDER BY LIKELY(t0.c0) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c1)AND(t0.c1)))OR(vt12.c0))) BETWEEN (CASE WHEN '-131108496' THEN 'ln&' END) AND (CASE t0.c0  WHEN t0.c1 THEN t0.c2 END))) IS TRUE)  as count FROM vt12 FULL OUTER JOIN t0 ON UNLIKELY(TRIM(DISTINCT vt12.c0, vt12.c0)) ORDER BY LIKELY(t0.c0) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt12 FULL OUTER JOIN t0 ON UNLIKELY(TRIM(DISTINCT vt12.c0, vt12.c0)) WHERE (((((((t0.c1)AND(t0.c1)))OR(vt12.c0))) BETWEEN (CASE WHEN '-131108496' THEN 'ln&' END) AND (CASE t0.c0  WHEN t0.c1 THEN t0.c2 END))) ORDER BY LIKELY(t0.c0) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c1)AND(t0.c1)))OR(vt12.c0))) BETWEEN (CASE WHEN '-131108496' THEN 'ln&' END) AND (CASE t0.c0  WHEN t0.c1 THEN t0.c2 END))) IS TRUE)  as count FROM vt12 FULL OUTER JOIN t0 ON UNLIKELY(TRIM(DISTINCT vt12.c0, vt12.c0)) ORDER BY LIKELY(t0.c0) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt12 FULL OUTER JOIN t0 ON UNLIKELY(TRIM(DISTINCT vt12.c0, vt12.c0)) WHERE (((((((t0.c1)AND(t0.c1)))OR(vt12.c0))) BETWEEN (CASE WHEN '-131108496' THEN 'ln&' END) AND (CASE t0.c0  WHEN t0.c1 THEN t0.c2 END))) ORDER BY LIKELY(t0.c0) ASC  NULLS FIRST;
SELECT ALL * FROM vt12, rt0, t0, vt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (vt12.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c2) AND (vt12.c0))) NOTNULL)) IS TRUE)  as count FROM vt12, rt0, t0, vt0);
SELECT ALL * FROM vt12, rt0, t0, vt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (vt12.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c2) AND (vt12.c0))) NOTNULL)) IS TRUE)  as count FROM vt12, rt0, t0, vt0);
SELECT ALL * FROM vt12, rt0, t0, vt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (vt12.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM vt12, vt0, t0 CROSS JOIN rt0 ON CAST(((rt0.c4)IS(t0.c2)) AS TEXT) WHERE ((((((vt0.c0))!=((rt0.c4))))<(((rt0.c4) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))!=((rt0.c4))))<(((rt0.c4) IS TRUE)))) IS TRUE)  as count FROM vt12 NOT INDEXED, vt0, t0 CROSS JOIN rt0 ON CAST(((rt0.c4)IS(t0.c2)) AS TEXT));
SELECT ALL COUNT(*) FROM vt12, vt0, t0 CROSS JOIN rt0 ON CAST(((rt0.c4)IS(t0.c2)) AS TEXT) WHERE ((((((vt0.c0))!=((rt0.c4))))<(((rt0.c4) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))!=((rt0.c4))))<(((rt0.c4) IS TRUE)))) IS TRUE)  as count FROM vt12 NOT INDEXED, vt0, t0 CROSS JOIN rt0 ON CAST(((rt0.c4)IS(t0.c2)) AS TEXT));
SELECT ALL COUNT(*) FROM vt12, vt0, t0 CROSS JOIN rt0 ON CAST(((rt0.c4)IS(t0.c2)) AS TEXT) WHERE ((((((vt0.c0))!=((rt0.c4))))<(((rt0.c4) IS TRUE))));
SELECT ALL * FROM rt0, t0 RIGHT OUTER JOIN vt12 ON CASE ((rt0.c4) BETWEEN (t0.c1) AND (0.9643267417903263))  WHEN t0.c1 COLLATE NOCASE THEN (((t0.c2))<((t0.c0))) END CROSS JOIN vt0 ON -1396127882 WHERE ((- ((rt0.c0 IN (rt0.c4, rt0.c0))))) ORDER BY ((CAST(rt0.c4 AS REAL)) BETWEEN (UNLIKELY(DISTINCT rt0.c1)) AND (((rt0.c2)IS(t0.c1))))  NULLS FIRST, (+ ((- (rt0.c3))))  NULLS LAST, LIKELY(DISTINCT ((rt0.c0) BETWEEN (0.34235300180198447) AND (rt0.c3)));
SELECT SUM(count) FROM (SELECT (((- ((rt0.c0 IN (rt0.c4, rt0.c0))))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt12 ON CASE ((rt0.c4) BETWEEN (t0.c1) AND (0.9643267417903263))  WHEN t0.c1 COLLATE NOCASE THEN (((t0.c2))<((t0.c0))) END CROSS JOIN vt0 ON -1396127882 ORDER BY ((CAST(rt0.c4 AS REAL)) BETWEEN (UNLIKELY(DISTINCT rt0.c1)) AND (((rt0.c2)IS(t0.c1))))  NULLS FIRST, (+ ((- (rt0.c3))))  NULLS LAST, LIKELY(DISTINCT ((rt0.c0) BETWEEN (0.34235300180198447) AND (rt0.c3))));
SELECT ALL * FROM rt0, t0 RIGHT OUTER JOIN vt12 ON CASE ((rt0.c4) BETWEEN (t0.c1) AND (0.9643267417903263))  WHEN t0.c1 COLLATE NOCASE THEN (((t0.c2))<((t0.c0))) END CROSS JOIN vt0 ON -1396127882 WHERE ((- ((rt0.c0 IN (rt0.c4, rt0.c0))))) ORDER BY ((CAST(rt0.c4 AS REAL)) BETWEEN (UNLIKELY(DISTINCT rt0.c1)) AND (((rt0.c2)IS(t0.c1))))  NULLS FIRST, (+ ((- (rt0.c3))))  NULLS LAST, LIKELY(DISTINCT ((rt0.c0) BETWEEN (0.34235300180198447) AND (rt0.c3)));
SELECT SUM(count) FROM (SELECT (((- ((rt0.c0 IN (rt0.c4, rt0.c0))))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt12 ON CASE ((rt0.c4) BETWEEN (t0.c1) AND (0.9643267417903263))  WHEN t0.c1 COLLATE NOCASE THEN (((t0.c2))<((t0.c0))) END CROSS JOIN vt0 ON -1396127882 ORDER BY ((CAST(rt0.c4 AS REAL)) BETWEEN (UNLIKELY(DISTINCT rt0.c1)) AND (((rt0.c2)IS(t0.c1))))  NULLS FIRST, (+ ((- (rt0.c3))))  NULLS LAST, LIKELY(DISTINCT ((rt0.c0) BETWEEN (0.34235300180198447) AND (rt0.c3))));
SELECT ALL * FROM rt0, t0 RIGHT OUTER JOIN vt12 ON CASE ((rt0.c4) BETWEEN (t0.c1) AND (0.9643267417903263))  WHEN t0.c1 COLLATE NOCASE THEN (((t0.c2))<((t0.c0))) END CROSS JOIN vt0 ON -1396127882 WHERE ((- ((rt0.c0 IN (rt0.c4, rt0.c0))))) ORDER BY ((CAST(rt0.c4 AS REAL)) BETWEEN (UNLIKELY(DISTINCT rt0.c1)) AND (((rt0.c2)IS(t0.c1))))  NULLS FIRST, (+ ((- (rt0.c3))))  NULLS LAST, LIKELY(DISTINCT ((rt0.c0) BETWEEN (0.34235300180198447) AND (rt0.c3)));
SELECT COUNT(*) FROM vt12, rt0 WHERE (((((rt0.c1) ISNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL)) IS FALSE)) IS TRUE)  as count FROM vt12, rt0);
SELECT COUNT(*) FROM vt12, rt0 WHERE (((((rt0.c1) ISNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL)) IS FALSE)) IS TRUE)  as count FROM vt12, rt0);
SELECT COUNT(*) FROM vt12, rt0 WHERE (((((rt0.c1) ISNULL)) IS FALSE));
SELECT * FROM vt0, rt0 LEFT OUTER JOIN t0 ON (- ((t0.c2 IN ()))) WHERE (((((t0.c1)-(t0.c0))) ISNULL)) ORDER BY (- ((t0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c1)-(t0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON (- ((t0.c2 IN ()))) ORDER BY (- ((t0.c1 IN ())))  NULLS FIRST);
SELECT * FROM vt0, rt0 LEFT OUTER JOIN t0 ON (- ((t0.c2 IN ()))) WHERE (((((t0.c1)-(t0.c0))) ISNULL)) ORDER BY (- ((t0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c1)-(t0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON (- ((t0.c2 IN ()))) ORDER BY (- ((t0.c1 IN ())))  NULLS FIRST);
SELECT * FROM vt0, rt0 LEFT OUTER JOIN t0 ON (- ((t0.c2 IN ()))) WHERE (((((t0.c1)-(t0.c0))) ISNULL)) ORDER BY (- ((t0.c1 IN ())))  NULLS FIRST;
SELECT * FROM rt0, vt12 WHERE (CASE CASE rt0.c0  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c4 END  WHEN ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR('5]')))OR(rt0.c0)) THEN rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c0  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c4 END  WHEN ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR('5]')))OR(rt0.c0)) THEN rt0.c2 END) IS TRUE)  as count FROM rt0, vt12);
SELECT * FROM rt0, vt12 WHERE (CASE CASE rt0.c0  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c4 END  WHEN ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR('5]')))OR(rt0.c0)) THEN rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c0  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c4 END  WHEN ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR('5]')))OR(rt0.c0)) THEN rt0.c2 END) IS TRUE)  as count FROM rt0, vt12);
SELECT * FROM rt0, vt12 WHERE (CASE CASE rt0.c0  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c4 END  WHEN ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR('5]')))OR(rt0.c0)) THEN rt0.c2 END);
SELECT COUNT(*) FROM vt12, vt0, t0 WHERE ((((t0.c2 IN (vt12.c0)))>(vt12.c0))) ORDER BY (((t0.c1))==((vt12.c0))) COLLATE RTRIM ASC, ((vt12.c0 COLLATE BINARY) NOT BETWEEN (TRIM(DISTINCT t0.c0, vt12.c0)) AND (((t0.c2)<(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN (vt12.c0)))>(vt12.c0))) IS TRUE)  as count FROM vt12, vt0, t0 ORDER BY (((t0.c1))=((vt12.c0))) COLLATE RTRIM ASC, ((vt12.c0 COLLATE BINARY) NOT BETWEEN (TRIM(DISTINCT t0.c0, vt12.c0)) AND (((t0.c2)<(vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt12, vt0, t0 WHERE ((((t0.c2 IN (vt12.c0)))>(vt12.c0))) ORDER BY (((t0.c1))==((vt12.c0))) COLLATE RTRIM ASC, ((vt12.c0 COLLATE BINARY) NOT BETWEEN (TRIM(DISTINCT t0.c0, vt12.c0)) AND (((t0.c2)<(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN (vt12.c0)))>(vt12.c0))) IS TRUE)  as count FROM vt12, vt0, t0 ORDER BY (((t0.c1))=((vt12.c0))) COLLATE RTRIM ASC, ((vt12.c0 COLLATE BINARY) NOT BETWEEN (TRIM(DISTINCT t0.c0, vt12.c0)) AND (((t0.c2)<(vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt12, vt0, t0 WHERE ((((t0.c2 IN (vt12.c0)))>(vt12.c0))) ORDER BY (((t0.c1))==((vt12.c0))) COLLATE RTRIM ASC, ((vt12.c0 COLLATE BINARY) NOT BETWEEN (TRIM(DISTINCT t0.c0, vt12.c0)) AND (((t0.c2)<(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt12, rt0, vt0, t0 WHERE (((((((t0.c2)-(rt0.c2)))AND(rt0.c2)))AND(CASE '-413646909'  WHEN rt0.c4 THEN rt0.c2 END))) ORDER BY (+ (CASE t0.c0  WHEN rt0.c3 THEN rt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)-(rt0.c2)))AND(rt0.c2)))AND(CASE '-413646909'  WHEN rt0.c4 THEN rt0.c2 END))) IS TRUE)  as count FROM vt12, rt0, vt0, t0 ORDER BY (+ (CASE t0.c0  WHEN rt0.c3 THEN rt0.c1 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt12, rt0, vt0, t0 WHERE (((((((t0.c2)-(rt0.c2)))AND(rt0.c2)))AND(CASE '-413646909'  WHEN rt0.c4 THEN rt0.c2 END))) ORDER BY (+ (CASE t0.c0  WHEN rt0.c3 THEN rt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)-(rt0.c2)))AND(rt0.c2)))AND(CASE '-413646909'  WHEN rt0.c4 THEN rt0.c2 END))) IS TRUE)  as count FROM vt12, rt0, vt0, t0 ORDER BY (+ (CASE t0.c0  WHEN rt0.c3 THEN rt0.c1 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt12, rt0, vt0, t0 WHERE (((((((t0.c2)-(rt0.c2)))AND(rt0.c2)))AND(CASE '-413646909'  WHEN rt0.c4 THEN rt0.c2 END))) ORDER BY (+ (CASE t0.c0  WHEN rt0.c3 THEN rt0.c1 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt12, vt0 WHERE (vt12.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt12.c0) IS TRUE)  as count FROM vt12, vt0);
SELECT ALL COUNT(*) FROM vt12, vt0 WHERE (vt12.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt12.c0) IS TRUE)  as count FROM vt12, vt0);
SELECT ALL COUNT(*) FROM vt12, vt0 WHERE (vt12.c0);
SELECT COUNT(*) FROM t0, vt0, rt0 CROSS JOIN vt12 ON ((CASE '?~_('  WHEN rt0.c2 THEN rt0.c0 WHEN '1712810278' THEN rt0.c2 WHEN t0.c0 THEN vt0.c0 ELSE t0.c1 END)GLOB((((rt0.c0, t0.c1, t0.c0))!=((rt0.c0, rt0.c3, t0.c2))))) WHERE ((((NOT (t0.c2)))*(((vt0.c0)<('')))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c2)))*(((vt0.c0)<(''))))) IS TRUE)  as count FROM t0, vt0, rt0 CROSS JOIN vt12 ON ((CASE '?~_('  WHEN rt0.c2 THEN rt0.c0 WHEN '1712810278' THEN rt0.c2 WHEN t0.c0 THEN vt0.c0 ELSE t0.c1 END)GLOB((((rt0.c0, t0.c1, t0.c0))<>((rt0.c0, rt0.c3, t0.c2))))));
SELECT COUNT(*) FROM t0, vt0, rt0 CROSS JOIN vt12 ON ((CASE '?~_('  WHEN rt0.c2 THEN rt0.c0 WHEN '1712810278' THEN rt0.c2 WHEN t0.c0 THEN vt0.c0 ELSE t0.c1 END)GLOB((((rt0.c0, t0.c1, t0.c0))!=((rt0.c0, rt0.c3, t0.c2))))) WHERE ((((NOT (t0.c2)))*(((vt0.c0)<('')))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c2)))*(((vt0.c0)<(''))))) IS TRUE)  as count FROM t0, vt0, rt0 CROSS JOIN vt12 ON ((CASE '?~_('  WHEN rt0.c2 THEN rt0.c0 WHEN '1712810278' THEN rt0.c2 WHEN t0.c0 THEN vt0.c0 ELSE t0.c1 END)GLOB((((rt0.c0, t0.c1, t0.c0))<>((rt0.c0, rt0.c3, t0.c2))))));
SELECT COUNT(*) FROM t0, vt0, rt0 CROSS JOIN vt12 ON ((CASE '?~_('  WHEN rt0.c2 THEN rt0.c0 WHEN '1712810278' THEN rt0.c2 WHEN t0.c0 THEN vt0.c0 ELSE t0.c1 END)GLOB((((rt0.c0, t0.c1, t0.c0))!=((rt0.c0, rt0.c3, t0.c2))))) WHERE ((((NOT (t0.c2)))*(((vt0.c0)<('')))));
SELECT ALL COUNT(*) FROM t0, rt0, vt12 NOT INDEXED WHERE (rt0.c2 COLLATE BINARY) ORDER BY ((t0.c1 COLLATE BINARY) NOT BETWEEN (((((((((t0.c2)AND(t0.c1)))AND(rt0.c0)))AND(rt0.c4)))AND(t0.c2))) AND ((t0.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, vt12 ORDER BY ((t0.c1 COLLATE BINARY) NOT BETWEEN (((((((((t0.c2)AND(t0.c1)))AND(rt0.c0)))AND(rt0.c4)))AND(t0.c2))) AND ((t0.c1 IN ()))) DESC);
SELECT ALL COUNT(*) FROM t0, rt0, vt12 NOT INDEXED WHERE (rt0.c2 COLLATE BINARY) ORDER BY ((t0.c1 COLLATE BINARY) NOT BETWEEN (((((((((t0.c2)AND(t0.c1)))AND(rt0.c0)))AND(rt0.c4)))AND(t0.c2))) AND ((t0.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, vt12 ORDER BY ((t0.c1 COLLATE BINARY) NOT BETWEEN (((((((((t0.c2)AND(t0.c1)))AND(rt0.c0)))AND(rt0.c4)))AND(t0.c2))) AND ((t0.c1 IN ()))) DESC);
SELECT ALL COUNT(*) FROM t0, rt0, vt12 NOT INDEXED WHERE (rt0.c2 COLLATE BINARY) ORDER BY ((t0.c1 COLLATE BINARY) NOT BETWEEN (((((((((t0.c2)AND(t0.c1)))AND(rt0.c0)))AND(rt0.c4)))AND(t0.c2))) AND ((t0.c1 IN ()))) DESC;
SELECT * FROM t0, vt0 NATURAL JOIN rt0 WHERE (NULLIF(t0.c2, rt0.c4) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(t0.c2, rt0.c4) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN rt0);
SELECT * FROM t0, vt0 NATURAL JOIN rt0 WHERE (NULLIF(t0.c2, rt0.c4) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(t0.c2, rt0.c4) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN rt0);
SELECT * FROM t0, vt0 NATURAL JOIN rt0 WHERE (NULLIF(t0.c2, rt0.c4) COLLATE BINARY);
SELECT ALL * FROM t0, vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN '*c' END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN '*c' END COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN '*c' END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN '*c' END COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN '*c' END COLLATE NOCASE);
SELECT * FROM vt0, t0, rt0 WHERE ((((t0.c0, rt0.c4, t0.c1)) BETWEEN ((CAST(rt0.c0 AS BLOB), ((((((((rt0.c3)AND(rt0.c4)))OR(rt0.c1)))AND('[[膭o')))AND(vt0.c0)), x'')) AND ((((rt0.c3)+(0.716948459411506)), ((((t0.c0)AND(NULL)))OR(rt0.c2)), rt0.c2)))) ORDER BY (((((rt0.c0)LIKE(rt0.c2))))<((((t0.c0)<(x''))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, rt0.c4, t0.c1)) BETWEEN ((CAST(rt0.c0 AS BLOB), ((((((((rt0.c3)AND(rt0.c4)))OR(rt0.c1)))AND('[[膭o')))AND(vt0.c0)), x'')) AND ((((rt0.c3)+(0.716948459411506)), ((((t0.c0)AND(NULL)))OR(rt0.c2)), rt0.c2)))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((((rt0.c0)LIKE(rt0.c2))))<((((t0.c0)<(x''))))) DESC);
SELECT * FROM vt0, t0, rt0 WHERE ((((t0.c0, rt0.c4, t0.c1)) BETWEEN ((CAST(rt0.c0 AS BLOB), ((((((((rt0.c3)AND(rt0.c4)))OR(rt0.c1)))AND('[[膭o')))AND(vt0.c0)), x'')) AND ((((rt0.c3)+(0.716948459411506)), ((((t0.c0)AND(NULL)))OR(rt0.c2)), rt0.c2)))) ORDER BY (((((rt0.c0)LIKE(rt0.c2))))<((((t0.c0)<(x''))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, rt0.c4, t0.c1)) BETWEEN ((CAST(rt0.c0 AS BLOB), ((((((((rt0.c3)AND(rt0.c4)))OR(rt0.c1)))AND('[[膭o')))AND(vt0.c0)), x'')) AND ((((rt0.c3)+(0.716948459411506)), ((((t0.c0)AND(NULL)))OR(rt0.c2)), rt0.c2)))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((((rt0.c0)LIKE(rt0.c2))))<((((t0.c0)<(x''))))) DESC);
SELECT * FROM vt0, t0, rt0 WHERE ((((t0.c0, rt0.c4, t0.c1)) BETWEEN ((CAST(rt0.c0 AS BLOB), ((((((((rt0.c3)AND(rt0.c4)))OR(rt0.c1)))AND('[[膭o')))AND(vt0.c0)), x'')) AND ((((rt0.c3)+(0.716948459411506)), ((((t0.c0)AND(NULL)))OR(rt0.c2)), rt0.c2)))) ORDER BY (((((rt0.c0)LIKE(rt0.c2))))<((((t0.c0)<(x''))))) DESC;
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((t0.c2) ISNULL)) AND (CASE t0.c0  WHEN x'' THEN t0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((t0.c2) ISNULL)) AND (CASE t0.c0  WHEN x'' THEN t0.c1 END))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((t0.c2) ISNULL)) AND (CASE t0.c0  WHEN x'' THEN t0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((t0.c2) ISNULL)) AND (CASE t0.c0  WHEN x'' THEN t0.c1 END))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((t0.c2) ISNULL)) AND (CASE t0.c0  WHEN x'' THEN t0.c1 END)));
SELECT * FROM vt0, vt12, rt0, t0 WHERE ((((t0.c2))=(((((vt12.c0))>((vt12.c0))))))) ORDER BY ((rt0.c0) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2))) AND (((t0.c2)IS(t0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2))==(((((vt12.c0))>((vt12.c0))))))) IS TRUE)  as count FROM vt0, vt12, rt0, t0 ORDER BY ((rt0.c0) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2))) AND (((t0.c2)IS(t0.c1)))) DESC  NULLS LAST);
SELECT * FROM vt0, vt12, rt0, t0 WHERE ((((t0.c2))=(((((vt12.c0))>((vt12.c0))))))) ORDER BY ((rt0.c0) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2))) AND (((t0.c2)IS(t0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2))==(((((vt12.c0))>((vt12.c0))))))) IS TRUE)  as count FROM vt0, vt12, rt0, t0 ORDER BY ((rt0.c0) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2))) AND (((t0.c2)IS(t0.c1)))) DESC  NULLS LAST);
SELECT * FROM vt0, vt12, rt0, t0 WHERE ((((t0.c2))=(((((vt12.c0))>((vt12.c0))))))) ORDER BY ((rt0.c0) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2))) AND (((t0.c2)IS(t0.c1)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt12, rt0, vt0, t0 WHERE (((TRIM(rt0.c0)) BETWEEN ((((t0.c0))<((vt0.c0)))) AND (((vt12.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(rt0.c0)) BETWEEN ((((t0.c0))<((vt0.c0)))) AND (((vt12.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt12, rt0, vt0, t0);
SELECT COUNT(*) FROM vt12, rt0, vt0, t0 WHERE (((TRIM(rt0.c0)) BETWEEN ((((t0.c0))<((vt0.c0)))) AND (((vt12.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(rt0.c0)) BETWEEN ((((t0.c0))<((vt0.c0)))) AND (((vt12.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt12, rt0, vt0, t0);
SELECT COUNT(*) FROM vt12, rt0, vt0, t0 WHERE (((TRIM(rt0.c0)) BETWEEN ((((t0.c0))<((vt0.c0)))) AND (((vt12.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM t0, vt0, rt0, vt12 WHERE ((((vt0.c0)) BETWEEN ((CAST(rt0.c4 AS NUMERIC))) AND (((rt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((CAST(rt0.c4 AS NUMERIC))) AND (((rt0.c0 IN ()))))) IS TRUE)  as count FROM t0, vt0, rt0, vt12);
SELECT ALL * FROM t0, vt0, rt0, vt12 WHERE ((((vt0.c0)) BETWEEN ((CAST(rt0.c4 AS NUMERIC))) AND (((rt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((CAST(rt0.c4 AS NUMERIC))) AND (((rt0.c0 IN ()))))) IS TRUE)  as count FROM t0, vt0, rt0, vt12);
SELECT ALL * FROM t0, vt0, rt0, vt12 WHERE ((((vt0.c0)) BETWEEN ((CAST(rt0.c4 AS NUMERIC))) AND (((rt0.c0 IN ())))));
SELECT COUNT(*) FROM vt0, vt12, t0, rt0 WHERE ((((((t0.c0) NOT NULL)))>((((vt12.c0)|(NULL)))))) ORDER BY (((vt0.c0)) NOT BETWEEN (((((t0.c0))>((t0.c0))))) AND ((1627857408)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0) NOT NULL)))>((((vt12.c0)|(NULL)))))) IS TRUE)  as count FROM vt0, vt12, t0, rt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((((t0.c0))>((t0.c0))))) AND ((1627857408)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt12, t0, rt0 WHERE ((((((t0.c0) NOT NULL)))>((((vt12.c0)|(NULL)))))) ORDER BY (((vt0.c0)) NOT BETWEEN (((((t0.c0))>((t0.c0))))) AND ((1627857408)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0) NOT NULL)))>((((vt12.c0)|(NULL)))))) IS TRUE)  as count FROM vt0, vt12, t0, rt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((((t0.c0))>((t0.c0))))) AND ((1627857408)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt12, t0, rt0 WHERE ((((((t0.c0) NOT NULL)))>((((vt12.c0)|(NULL)))))) ORDER BY (((vt0.c0)) NOT BETWEEN (((((t0.c0))>((t0.c0))))) AND ((1627857408)))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ('%6E|FglLe') ORDER BY 867232673, CAST((rt0.c4 IN ()) AS BLOB);
SELECT SUM(count) FROM (SELECT (('%6E|FglLe') IS TRUE)  as count FROM rt0 ORDER BY 867232673, CAST((rt0.c4 IN ()) AS BLOB));
SELECT ALL * FROM rt0 WHERE ('%6E|FglLe') ORDER BY 867232673, CAST((rt0.c4 IN ()) AS BLOB);
SELECT SUM(count) FROM (SELECT (('%6E|FglLe') IS TRUE)  as count FROM rt0 ORDER BY 867232673, CAST((rt0.c4 IN ()) AS BLOB));
SELECT COUNT(*) FROM vt12, rt0, vt0 WHERE (((CAST(x'' AS INTEGER))OR(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END))) ORDER BY CASE WHEN ((rt0.c1)OR(vt12.c0)) THEN (((rt0.c1, vt0.c0, rt0.c0))<((rt0.c3, '얽y*&L', 0.923233155541613))) END;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS INTEGER))OR(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt12, rt0, vt0 ORDER BY CASE WHEN ((rt0.c1)OR(vt12.c0)) THEN (((rt0.c1, vt0.c0, rt0.c0))<((rt0.c3, '얽y*&L', 0.923233155541613))) END);
SELECT COUNT(*) FROM vt12, rt0, vt0 WHERE (((CAST(x'' AS INTEGER))OR(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END))) ORDER BY CASE WHEN ((rt0.c1)OR(vt12.c0)) THEN (((rt0.c1, vt0.c0, rt0.c0))<((rt0.c3, '얽y*&L', 0.923233155541613))) END;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS INTEGER))OR(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt12, rt0, vt0 ORDER BY CASE WHEN ((rt0.c1)OR(vt12.c0)) THEN (((rt0.c1, vt0.c0, rt0.c0))<((rt0.c3, '얽y*&L', 0.923233155541613))) END);
SELECT COUNT(*) FROM vt12, rt0, vt0 WHERE (((CAST(x'' AS INTEGER))OR(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END))) ORDER BY CASE WHEN ((rt0.c1)OR(vt12.c0)) THEN (((rt0.c1, vt0.c0, rt0.c0))<((rt0.c3, '얽y*&L', 0.923233155541613))) END;
SELECT ALL COUNT(*) FROM rt0, vt12 WHERE (((((((((((((((rt0.c2)<(rt0.c0)))OR((+ (vt12.c0)))))OR(CAST(vt12.c0 AS INTEGER))))OR(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END)))OR(rt0.c3)))OR(CAST(rt0.c1 AS INTEGER))))AND(CASE WHEN rt0.c4 THEN rt0.c0 ELSE vt12.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c2)<(rt0.c0)))OR((+ (vt12.c0)))))OR(CAST(vt12.c0 AS INTEGER))))OR(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END)))OR(rt0.c3)))OR(CAST(rt0.c1 AS INTEGER))))AND(CASE WHEN rt0.c4 THEN rt0.c0 ELSE vt12.c0 END))) IS TRUE)  as count FROM rt0, vt12);
SELECT ALL COUNT(*) FROM rt0, vt12 WHERE (((((((((((((((rt0.c2)<(rt0.c0)))OR((+ (vt12.c0)))))OR(CAST(vt12.c0 AS INTEGER))))OR(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END)))OR(rt0.c3)))OR(CAST(rt0.c1 AS INTEGER))))AND(CASE WHEN rt0.c4 THEN rt0.c0 ELSE vt12.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c2)<(rt0.c0)))OR((+ (vt12.c0)))))OR(CAST(vt12.c0 AS INTEGER))))OR(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END)))OR(rt0.c3)))OR(CAST(rt0.c1 AS INTEGER))))AND(CASE WHEN rt0.c4 THEN rt0.c0 ELSE vt12.c0 END))) IS TRUE)  as count FROM rt0, vt12);
SELECT ALL COUNT(*) FROM rt0, vt12 WHERE (((((((((((((((rt0.c2)<(rt0.c0)))OR((+ (vt12.c0)))))OR(CAST(vt12.c0 AS INTEGER))))OR(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END)))OR(rt0.c3)))OR(CAST(rt0.c1 AS INTEGER))))AND(CASE WHEN rt0.c4 THEN rt0.c0 ELSE vt12.c0 END)));
SELECT ALL * FROM vt12, vt0 CROSS JOIN t0 ON CAST(NULLIF(DISTINCT vt12.c0, vt12.c0) AS REAL) WHERE (((CAST(t0.c1 AS TEXT)) NOT BETWEEN ((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c1)))) AND (((t0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c1 AS TEXT)) NOT BETWEEN ((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c1)))) AND (((t0.c0) IS FALSE)))) IS TRUE)  as count FROM vt12, vt0 CROSS JOIN t0 ON CAST(NULLIF(DISTINCT vt12.c0, vt12.c0) AS REAL));
SELECT ALL * FROM vt12, vt0 CROSS JOIN t0 ON CAST(NULLIF(DISTINCT vt12.c0, vt12.c0) AS REAL) WHERE (((CAST(t0.c1 AS TEXT)) NOT BETWEEN ((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c1)))) AND (((t0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c1 AS TEXT)) NOT BETWEEN ((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c1)))) AND (((t0.c0) IS FALSE)))) IS TRUE)  as count FROM vt12, vt0 CROSS JOIN t0 ON CAST(NULLIF(DISTINCT vt12.c0, vt12.c0) AS REAL));
SELECT ALL * FROM vt12, vt0 CROSS JOIN t0 ON CAST(NULLIF(DISTINCT vt12.c0, vt12.c0) AS REAL) WHERE (((CAST(t0.c1 AS TEXT)) NOT BETWEEN ((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c1)))) AND (((t0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((NULL)<=(load_extension(rt0.c3)))) ORDER BY LIKELIHOOD(CAST(t0.c1 AS BLOB), 0.09522852134784265) ASC  NULLS FIRST, t0.c0  NULLS LAST, ((((((t0.c1) IS FALSE))OR(rt0.c0 COLLATE BINARY)))OR(((NULL) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ((((NULL)<=(load_extension(rt0.c3)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY LIKELIHOOD(CAST(t0.c1 AS BLOB), 0.09522852134784265) ASC  NULLS FIRST, t0.c0  NULLS LAST, ((((((t0.c1) IS FALSE))OR(rt0.c0 COLLATE BINARY)))OR(((NULL) IS FALSE))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((NULL)<=(load_extension(rt0.c3)))) ORDER BY LIKELIHOOD(CAST(t0.c1 AS BLOB), 0.09522852134784265) ASC  NULLS FIRST, t0.c0  NULLS LAST, ((((((t0.c1) IS FALSE))OR(rt0.c0 COLLATE BINARY)))OR(((NULL) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ((((NULL)<=(load_extension(rt0.c3)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY LIKELIHOOD(CAST(t0.c1 AS BLOB), 0.09522852134784265) ASC  NULLS FIRST, t0.c0  NULLS LAST, ((((((t0.c1) IS FALSE))OR(rt0.c0 COLLATE BINARY)))OR(((NULL) IS FALSE))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((NULL)<=(load_extension(rt0.c3)))) ORDER BY LIKELIHOOD(CAST(t0.c1 AS BLOB), 0.09522852134784265) ASC  NULLS FIRST, t0.c0  NULLS LAST, ((((((t0.c1) IS FALSE))OR(rt0.c0 COLLATE BINARY)))OR(((NULL) IS FALSE))) DESC;
SELECT * FROM rt0, t0 LEFT OUTER JOIN vt12 ON ((((CAST(rt0.c2 AS BLOB))AND((rt0.c3 IN ()))))AND(CAST(t0.c1 AS REAL))) RIGHT OUTER JOIN vt0 ON rt0.c2 WHERE (rt0.c0) ORDER BY CASE WHEN ((rt0.c1)>(NULL)) THEN HEX(DISTINCT rt0.c0) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt12 ON ((((CAST(rt0.c2 AS BLOB))AND((rt0.c3 IN ()))))AND(CAST(t0.c1 AS REAL))) RIGHT OUTER JOIN vt0 ON rt0.c2 ORDER BY CASE WHEN ((rt0.c1)>(NULL)) THEN HEX(DISTINCT rt0.c0) END ASC  NULLS FIRST);
SELECT * FROM rt0, t0 LEFT OUTER JOIN vt12 ON ((((CAST(rt0.c2 AS BLOB))AND((rt0.c3 IN ()))))AND(CAST(t0.c1 AS REAL))) RIGHT OUTER JOIN vt0 ON rt0.c2 WHERE (rt0.c0) ORDER BY CASE WHEN ((rt0.c1)>(NULL)) THEN HEX(DISTINCT rt0.c0) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt12 ON ((((CAST(rt0.c2 AS BLOB))AND((rt0.c3 IN ()))))AND(CAST(t0.c1 AS REAL))) RIGHT OUTER JOIN vt0 ON rt0.c2 ORDER BY CASE WHEN ((rt0.c1)>(NULL)) THEN HEX(DISTINCT rt0.c0) END ASC  NULLS FIRST);
SELECT * FROM rt0, t0 LEFT OUTER JOIN vt12 ON ((((CAST(rt0.c2 AS BLOB))AND((rt0.c3 IN ()))))AND(CAST(t0.c1 AS REAL))) RIGHT OUTER JOIN vt0 ON rt0.c2 WHERE (rt0.c0) ORDER BY CASE WHEN ((rt0.c1)>(NULL)) THEN HEX(DISTINCT rt0.c0) END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((UNLIKELY(t0.c1))AND((~ (t0.c0)))))AND(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1))))) ORDER BY (((+ (t0.c1)))OR((t0.c2 IN (t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((UNLIKELY(t0.c1))AND((~ (t0.c0)))))AND(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY (((+ (t0.c1)))OR((t0.c2 IN (t0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((UNLIKELY(t0.c1))AND((~ (t0.c0)))))AND(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1))))) ORDER BY (((+ (t0.c1)))OR((t0.c2 IN (t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((UNLIKELY(t0.c1))AND((~ (t0.c0)))))AND(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY (((+ (t0.c1)))OR((t0.c2 IN (t0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((UNLIKELY(t0.c1))AND((~ (t0.c0)))))AND(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1))))) ORDER BY (((+ (t0.c1)))OR((t0.c2 IN (t0.c0))))  NULLS LAST;
SELECT ALL * FROM vt0, t0, rt0, vt12 WHERE (((((x'')>>(t0.c2)))%((((NULL))!=((vt0.c0)))))) ORDER BY HEX(DISTINCT LIKELY(rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')>>(t0.c2)))%((((NULL))!=((vt0.c0)))))) IS TRUE)  as count FROM vt0, t0, rt0, vt12 ORDER BY HEX(DISTINCT LIKELY(rt0.c2))  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt0, vt12 WHERE (((((x'')>>(t0.c2)))%((((NULL))!=((vt0.c0)))))) ORDER BY HEX(DISTINCT LIKELY(rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')>>(t0.c2)))%((((NULL))!=((vt0.c0)))))) IS TRUE)  as count FROM vt0, t0, rt0, vt12 ORDER BY HEX(DISTINCT LIKELY(rt0.c2))  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt0, vt12 WHERE (((((x'')>>(t0.c2)))%((((NULL))!=((vt0.c0)))))) ORDER BY HEX(DISTINCT LIKELY(rt0.c2))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY UPPER(DISTINCT rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY UPPER(DISTINCT rt0.c4));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY UPPER(DISTINCT rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY UPPER(DISTINCT rt0.c4));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY UPPER(DISTINCT rt0.c4);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt12 ON (('-2100202494')LIKE(vt0.c0 COLLATE RTRIM)) CROSS JOIN t0 ON UPPER(DISTINCT ((t0.c1) ISNULL)) CROSS JOIN vt0 ON CASE WHEN LIKELY(rt0.c0) THEN (((('-935127749')AND(t0.c0)))AND(rt0.c3)) END WHERE (((QUOTE(vt12.c0))=('0.03025702324297541')));
SELECT SUM(count) FROM (SELECT ((((QUOTE(vt12.c0))==('0.03025702324297541'))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt12 ON (('-2100202494')LIKE(vt0.c0 COLLATE RTRIM)) CROSS JOIN t0 ON UPPER(DISTINCT ((t0.c1) ISNULL)) CROSS JOIN vt0 ON CASE WHEN LIKELY(rt0.c0) THEN (((('-935127749')AND(t0.c0)))AND(rt0.c3)) END);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt12 ON (('-2100202494')LIKE(vt0.c0 COLLATE RTRIM)) CROSS JOIN t0 ON UPPER(DISTINCT ((t0.c1) ISNULL)) CROSS JOIN vt0 ON CASE WHEN LIKELY(rt0.c0) THEN (((('-935127749')AND(t0.c0)))AND(rt0.c3)) END WHERE (((QUOTE(vt12.c0))=('0.03025702324297541')));
SELECT SUM(count) FROM (SELECT ((((QUOTE(vt12.c0))==('0.03025702324297541'))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt12 ON (('-2100202494')LIKE(vt0.c0 COLLATE RTRIM)) CROSS JOIN t0 ON UPPER(DISTINCT ((t0.c1) ISNULL)) CROSS JOIN vt0 ON CASE WHEN LIKELY(rt0.c0) THEN (((('-935127749')AND(t0.c0)))AND(rt0.c3)) END);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) IS TRUE) THEN (vt0.c0 IN (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) IS TRUE) THEN (vt0.c0 IN (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) IS TRUE) THEN (vt0.c0 IN (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) IS TRUE) THEN (vt0.c0 IN (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) IS TRUE) THEN (vt0.c0 IN (vt0.c0)) END);
SELECT * FROM t0, rt0 WHERE ((NOT (0.6677718819854728))) ORDER BY ((t0.c2) BETWEEN ((((rt0.c3, t0.c2, rt0.c4))<=((rt0.c2, rt0.c0, t0.c2)))) AND (CAST(rt0.c4 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.6677718819854728))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((t0.c2) BETWEEN ((((rt0.c3, t0.c2, rt0.c4))<=((rt0.c2, rt0.c0, t0.c2)))) AND (CAST(rt0.c4 AS BLOB))));
SELECT * FROM t0, rt0 WHERE ((NOT (0.6677718819854728))) ORDER BY ((t0.c2) BETWEEN ((((rt0.c3, t0.c2, rt0.c4))<=((rt0.c2, rt0.c0, t0.c2)))) AND (CAST(rt0.c4 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.6677718819854728))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((t0.c2) BETWEEN ((((rt0.c3, t0.c2, rt0.c4))<=((rt0.c2, rt0.c0, t0.c2)))) AND (CAST(rt0.c4 AS BLOB))));
SELECT * FROM t0, rt0 WHERE ((NOT (0.6677718819854728))) ORDER BY ((t0.c2) BETWEEN ((((rt0.c3, t0.c2, rt0.c4))<=((rt0.c2, rt0.c0, t0.c2)))) AND (CAST(rt0.c4 AS BLOB)));
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c1)<<(t0.c1)) THEN CAST(0.14586894151169705 AS INTEGER) WHEN t0.c1 COLLATE NOCASE THEN (+ (t0.c0)) WHEN 0.5356556499537756 THEN 0.3259565867223112 ELSE x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c1)<<(t0.c1)) THEN CAST(0.14586894151169705 AS INTEGER) WHEN t0.c1 COLLATE NOCASE THEN (+ (t0.c0)) WHEN 0.5356556499537756 THEN 0.3259565867223112 ELSE x'' END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c1)<<(t0.c1)) THEN CAST(0.14586894151169705 AS INTEGER) WHEN t0.c1 COLLATE NOCASE THEN (+ (t0.c0)) WHEN 0.5356556499537756 THEN 0.3259565867223112 ELSE x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c1)<<(t0.c1)) THEN CAST(0.14586894151169705 AS INTEGER) WHEN t0.c1 COLLATE NOCASE THEN (+ (t0.c0)) WHEN 0.5356556499537756 THEN 0.3259565867223112 ELSE x'' END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c1)<<(t0.c1)) THEN CAST(0.14586894151169705 AS INTEGER) WHEN t0.c1 COLLATE NOCASE THEN (+ (t0.c0)) WHEN 0.5356556499537756 THEN 0.3259565867223112 ELSE x'' END);
SELECT ALL COUNT(*) FROM rt0, vt12, vt0 NATURAL JOIN t0 WHERE ((- (((vt12.c0)=(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt12.c0)=(t0.c1))))) IS TRUE)  as count FROM rt0, vt12, vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM rt0, vt12, vt0 NATURAL JOIN t0 WHERE ((- (((vt12.c0)=(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt12.c0)=(t0.c1))))) IS TRUE)  as count FROM rt0, vt12, vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM rt0, vt12, vt0 NATURAL JOIN t0 WHERE ((- (((vt12.c0)=(t0.c1)))));
SELECT ALL * FROM rt0, t0, vt0, vt12 WHERE (((((rt0.c1)&(t0.c1)))<(((rt0.c4) IS FALSE)))) ORDER BY ((((rt0.c1)==(0.2507723855907257)))<=(CASE t0.c0  WHEN NULL THEN vt0.c0 END)), (((rt0.c2)) BETWEEN (('6)S9vqf\r#')) AND ((((t0.c0)%(rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)&(t0.c1)))<(((rt0.c4) IS FALSE)))) IS TRUE)  as count FROM rt0, t0, vt0, vt12 ORDER BY ((((rt0.c1)==(0.2507723855907257)))<=(CASE t0.c0  WHEN NULL THEN vt0.c0 END)), (((rt0.c2)) BETWEEN (('6)S9vqf\r#')) AND ((((t0.c0)%(rt0.c1))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0, vt0, vt12 WHERE (((((rt0.c1)&(t0.c1)))<(((rt0.c4) IS FALSE)))) ORDER BY ((((rt0.c1)==(0.2507723855907257)))<=(CASE t0.c0  WHEN NULL THEN vt0.c0 END)), (((rt0.c2)) BETWEEN (('6)S9vqf\r#')) AND ((((t0.c0)%(rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)&(t0.c1)))<(((rt0.c4) IS FALSE)))) IS TRUE)  as count FROM rt0, t0, vt0, vt12 ORDER BY ((((rt0.c1)==(0.2507723855907257)))<=(CASE t0.c0  WHEN NULL THEN vt0.c0 END)), (((rt0.c2)) BETWEEN (('6)S9vqf\r#')) AND ((((t0.c0)%(rt0.c1))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0, vt0, vt12 WHERE (((((rt0.c1)&(t0.c1)))<(((rt0.c4) IS FALSE)))) ORDER BY ((((rt0.c1)==(0.2507723855907257)))<=(CASE t0.c0  WHEN NULL THEN vt0.c0 END)), (((rt0.c2)) BETWEEN (('6)S9vqf\r#')) AND ((((t0.c0)%(rt0.c1))))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t0, vt12, rt0 WHERE ((NOT (json_extract(NULL, rt0.c4)))) ORDER BY (('') NOT BETWEEN (vt12.c0 COLLATE NOCASE) AND (((rt0.c3) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (json_extract(NULL, rt0.c4)))) IS TRUE)  as count FROM vt0, t0, vt12, rt0 ORDER BY (('') NOT BETWEEN (vt12.c0 COLLATE NOCASE) AND (((rt0.c3) NOTNULL))) DESC);
SELECT ALL * FROM vt0, t0, vt12, rt0 WHERE ((NOT (json_extract(NULL, rt0.c4)))) ORDER BY (('') NOT BETWEEN (vt12.c0 COLLATE NOCASE) AND (((rt0.c3) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (json_extract(NULL, rt0.c4)))) IS TRUE)  as count FROM vt0, t0, vt12, rt0 ORDER BY (('') NOT BETWEEN (vt12.c0 COLLATE NOCASE) AND (((rt0.c3) NOTNULL))) DESC);
SELECT ALL * FROM vt0, t0, vt12, rt0 WHERE ((NOT (json_extract(NULL, rt0.c4)))) ORDER BY (('') NOT BETWEEN (vt12.c0 COLLATE NOCASE) AND (((rt0.c3) NOTNULL))) DESC;
SELECT * FROM vt12 WHERE (((((vt12.c0)>=(vt12.c0)))+(((((vt12.c0)OR(vt12.c0)))OR(vt12.c0))))) ORDER BY '-1721743076'  NULLS FIRST, CASE WHEN vt12.c0 COLLATE RTRIM THEN CAST(vt12.c0 AS TEXT) WHEN CAST(vt12.c0 AS NUMERIC) THEN ((vt12.c0)||(vt12.c0)) WHEN ((vt12.c0) NOT BETWEEN (vt12.c0) AND (vt12.c0)) THEN vt12.c0 COLLATE BINARY WHEN CAST(vt12.c0 AS TEXT) THEN ((((vt12.c0)AND(vt12.c0)))AND(vt12.c0)) WHEN (vt12.c0 IN ()) THEN LIKELY(vt12.c0) END;
SELECT SUM(count) FROM (SELECT ((((((vt12.c0)>=(vt12.c0)))+(((((vt12.c0)OR(vt12.c0)))OR(vt12.c0))))) IS TRUE)  as count FROM vt12 ORDER BY '-1721743076'  NULLS FIRST, CASE WHEN vt12.c0 COLLATE RTRIM THEN CAST(vt12.c0 AS TEXT) WHEN CAST(vt12.c0 AS NUMERIC) THEN ((vt12.c0)||(vt12.c0)) WHEN ((vt12.c0) NOT BETWEEN (vt12.c0) AND (vt12.c0)) THEN vt12.c0 COLLATE BINARY WHEN CAST(vt12.c0 AS TEXT) THEN ((((vt12.c0)AND(vt12.c0)))AND(vt12.c0)) WHEN (vt12.c0 IN ()) THEN LIKELY(vt12.c0) END);
SELECT * FROM vt12 WHERE (((((vt12.c0)>=(vt12.c0)))+(((((vt12.c0)OR(vt12.c0)))OR(vt12.c0))))) ORDER BY '-1721743076'  NULLS FIRST, CASE WHEN vt12.c0 COLLATE RTRIM THEN CAST(vt12.c0 AS TEXT) WHEN CAST(vt12.c0 AS NUMERIC) THEN ((vt12.c0)||(vt12.c0)) WHEN ((vt12.c0) NOT BETWEEN (vt12.c0) AND (vt12.c0)) THEN vt12.c0 COLLATE BINARY WHEN CAST(vt12.c0 AS TEXT) THEN ((((vt12.c0)AND(vt12.c0)))AND(vt12.c0)) WHEN (vt12.c0 IN ()) THEN LIKELY(vt12.c0) END;
SELECT SUM(count) FROM (SELECT ((((((vt12.c0)>=(vt12.c0)))+(((((vt12.c0)OR(vt12.c0)))OR(vt12.c0))))) IS TRUE)  as count FROM vt12 ORDER BY '-1721743076'  NULLS FIRST, CASE WHEN vt12.c0 COLLATE RTRIM THEN CAST(vt12.c0 AS TEXT) WHEN CAST(vt12.c0 AS NUMERIC) THEN ((vt12.c0)||(vt12.c0)) WHEN ((vt12.c0) NOT BETWEEN (vt12.c0) AND (vt12.c0)) THEN vt12.c0 COLLATE BINARY WHEN CAST(vt12.c0 AS TEXT) THEN ((((vt12.c0)AND(vt12.c0)))AND(vt12.c0)) WHEN (vt12.c0 IN ()) THEN LIKELY(vt12.c0) END);
SELECT * FROM vt12 WHERE (((((vt12.c0)>=(vt12.c0)))+(((((vt12.c0)OR(vt12.c0)))OR(vt12.c0))))) ORDER BY '-1721743076'  NULLS FIRST, CASE WHEN vt12.c0 COLLATE RTRIM THEN CAST(vt12.c0 AS TEXT) WHEN CAST(vt12.c0 AS NUMERIC) THEN ((vt12.c0)||(vt12.c0)) WHEN ((vt12.c0) NOT BETWEEN (vt12.c0) AND (vt12.c0)) THEN vt12.c0 COLLATE BINARY WHEN CAST(vt12.c0 AS TEXT) THEN ((((vt12.c0)AND(vt12.c0)))AND(vt12.c0)) WHEN (vt12.c0 IN ()) THEN LIKELY(vt12.c0) END;
SELECT ALL * FROM rt0, vt0, vt12 RIGHT OUTER JOIN t0 ON (((((rt0.c1))>=((rt0.c2))))LIKE(t0.c0 COLLATE RTRIM)) WHERE (CAST((rt0.c4 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c4 IN ()) AS BLOB)) IS TRUE)  as count FROM rt0, vt0, vt12 RIGHT OUTER JOIN t0 ON (((((rt0.c1))>=((rt0.c2))))LIKE(t0.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt0, vt0, vt12 RIGHT OUTER JOIN t0 ON (((((rt0.c1))>=((rt0.c2))))LIKE(t0.c0 COLLATE RTRIM)) WHERE (CAST((rt0.c4 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c4 IN ()) AS BLOB)) IS TRUE)  as count FROM rt0, vt0, vt12 RIGHT OUTER JOIN t0 ON (((((rt0.c1))>=((rt0.c2))))LIKE(t0.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt0, vt0, vt12 RIGHT OUTER JOIN t0 ON (((((rt0.c1))>=((rt0.c2))))LIKE(t0.c0 COLLATE RTRIM)) WHERE (CAST((rt0.c4 IN ()) AS BLOB));
SELECT COUNT(*) FROM vt12 WHERE (((((vt12.c0) IS TRUE)) BETWEEN (NULL COLLATE NOCASE) AND (((vt12.c0)GLOB(vt12.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt12.c0) IS TRUE)) BETWEEN (NULL COLLATE NOCASE) AND (((vt12.c0)GLOB(vt12.c0))))) IS TRUE)  as count FROM vt12);
SELECT COUNT(*) FROM vt12 WHERE (((((vt12.c0) IS TRUE)) BETWEEN (NULL COLLATE NOCASE) AND (((vt12.c0)GLOB(vt12.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt12.c0) IS TRUE)) BETWEEN (NULL COLLATE NOCASE) AND (((vt12.c0)GLOB(vt12.c0))))) IS TRUE)  as count FROM vt12);
SELECT COUNT(*) FROM vt12 WHERE (((((vt12.c0) IS TRUE)) BETWEEN (NULL COLLATE NOCASE) AND (((vt12.c0)GLOB(vt12.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE (json_insert(((rt0.c0) BETWEEN (rt0.c4) AND (vt0.c0)), (vt0.c0 IN (-292679846)), (rt0.c1 IN ()), CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 END, ((rt0.c4)GLOB(0.8511863137156391)))) ORDER BY CASE (rt0.c4 IN ())  WHEN ((rt0.c1)==(rt0.c3)) THEN (~ (rt0.c1)) ELSE LIKELIHOOD(rt0.c2, 0.6654491279345781) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(((rt0.c0) BETWEEN (rt0.c4) AND (vt0.c0)), (vt0.c0 IN (-292679846)), (rt0.c1 IN ()), CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 END, ((rt0.c4)GLOB(0.8511863137156391)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE (rt0.c4 IN ())  WHEN ((rt0.c1)==(rt0.c3)) THEN (~ (rt0.c1)) ELSE LIKELIHOOD(rt0.c2, 0.6654491279345781) END DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (json_insert(((rt0.c0) BETWEEN (rt0.c4) AND (vt0.c0)), (vt0.c0 IN (-292679846)), (rt0.c1 IN ()), CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 END, ((rt0.c4)GLOB(0.8511863137156391)))) ORDER BY CASE (rt0.c4 IN ())  WHEN ((rt0.c1)==(rt0.c3)) THEN (~ (rt0.c1)) ELSE LIKELIHOOD(rt0.c2, 0.6654491279345781) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(((rt0.c0) BETWEEN (rt0.c4) AND (vt0.c0)), (vt0.c0 IN (-292679846)), (rt0.c1 IN ()), CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 END, ((rt0.c4)GLOB(0.8511863137156391)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE (rt0.c4 IN ())  WHEN ((rt0.c1)==(rt0.c3)) THEN (~ (rt0.c1)) ELSE LIKELIHOOD(rt0.c2, 0.6654491279345781) END DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (json_insert(((rt0.c0) BETWEEN (rt0.c4) AND (vt0.c0)), (vt0.c0 IN (-292679846)), (rt0.c1 IN ()), CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 END, ((rt0.c4)GLOB(0.8511863137156391)))) ORDER BY CASE (rt0.c4 IN ())  WHEN ((rt0.c1)==(rt0.c3)) THEN (~ (rt0.c1)) ELSE LIKELIHOOD(rt0.c2, 0.6654491279345781) END DESC  NULLS FIRST;
SELECT ALL * FROM vt12 WHERE (vt12.c0) ORDER BY vt12.c0  NULLS LAST, (+ (((((vt12.c0)AND(vt12.c0)))AND(vt12.c0)))), (HEX(vt12.c0) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt12.c0) IS TRUE)  as count FROM vt12 ORDER BY vt12.c0  NULLS LAST, (+ (((((vt12.c0)AND(vt12.c0)))AND(vt12.c0)))), (HEX(vt12.c0) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM vt12 WHERE (vt12.c0) ORDER BY vt12.c0  NULLS LAST, (+ (((((vt12.c0)AND(vt12.c0)))AND(vt12.c0)))), (HEX(vt12.c0) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt12.c0) IS TRUE)  as count FROM vt12 ORDER BY vt12.c0  NULLS LAST, (+ (((((vt12.c0)AND(vt12.c0)))AND(vt12.c0)))), (HEX(vt12.c0) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM vt12 WHERE (vt12.c0) ORDER BY vt12.c0  NULLS LAST, (+ (((((vt12.c0)AND(vt12.c0)))AND(vt12.c0)))), (HEX(vt12.c0) IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt12, vt0, rt0, t0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM vt12, vt0, rt0, t0);
SELECT COUNT(*) FROM vt12, vt0, rt0, t0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM vt12, vt0, rt0, t0);
SELECT COUNT(*) FROM vt12, vt0, rt0, t0 WHERE (rt0.c4);
SELECT ALL COUNT(*) FROM vt0, vt12, rt0, t0 WHERE (TRIM(DISTINCT (((rt0.c2))>=((rt0.c0))), (NULL IN ()))) ORDER BY vt0.c0 COLLATE BINARY, rt0.c1 COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (((rt0.c2))>=((rt0.c0))), (NULL IN ()))) IS TRUE)  as count FROM vt0, vt12, rt0, t0 ORDER BY vt0.c0 COLLATE BINARY, rt0.c1 COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0, vt12, rt0, t0 WHERE (TRIM(DISTINCT (((rt0.c2))>=((rt0.c0))), (NULL IN ()))) ORDER BY vt0.c0 COLLATE BINARY, rt0.c1 COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (((rt0.c2))>=((rt0.c0))), (NULL IN ()))) IS TRUE)  as count FROM vt0, vt12, rt0, t0 ORDER BY vt0.c0 COLLATE BINARY, rt0.c1 COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0, vt12, rt0, t0 WHERE (TRIM(DISTINCT (((rt0.c2))>=((rt0.c0))), (NULL IN ()))) ORDER BY vt0.c0 COLLATE BINARY, rt0.c1 COLLATE BINARY DESC;
SELECT ALL * FROM vt12, vt0 WHERE (UNLIKELY(DISTINCT json_insert(vt12.c0, vt0.c0, vt12.c0)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT json_insert(vt12.c0, vt0.c0, vt12.c0))) IS TRUE)  as count FROM vt12, vt0);
SELECT ALL * FROM vt12, vt0 WHERE (UNLIKELY(DISTINCT json_insert(vt12.c0, vt0.c0, vt12.c0)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT json_insert(vt12.c0, vt0.c0, vt12.c0))) IS TRUE)  as count FROM vt12, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE ((NULL IN (rt0.c4, x'')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((NULL IN (rt0.c4, x'')) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE ((NULL IN (rt0.c4, x'')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((NULL IN (rt0.c4, x'')) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE ((NULL IN (rt0.c4, x'')) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((x'')*(t0.c1)) COLLATE BINARY) ORDER BY (((t0.c0))=((t0.c0))) COLLATE RTRIM  NULLS LAST, ((CAST(vt0.c0 AS INTEGER)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((x'')*(t0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c0))=((t0.c0))) COLLATE RTRIM  NULLS LAST, ((CAST(vt0.c0 AS INTEGER)) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((x'')*(t0.c1)) COLLATE BINARY) ORDER BY (((t0.c0))=((t0.c0))) COLLATE RTRIM  NULLS LAST, ((CAST(vt0.c0 AS INTEGER)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((x'')*(t0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c0))=((t0.c0))) COLLATE RTRIM  NULLS LAST, ((CAST(vt0.c0 AS INTEGER)) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((x'')*(t0.c1)) COLLATE BINARY) ORDER BY (((t0.c0))=((t0.c0))) COLLATE RTRIM  NULLS LAST, ((CAST(vt0.c0 AS INTEGER)) IS TRUE) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE))<=(((vt0.c0)>>(vt0.c0))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE))<=(((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE))<=(((vt0.c0)>>(vt0.c0))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE))<=(((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE))<=(((vt0.c0)>>(vt0.c0))))) ORDER BY vt0.c0;
SELECT COUNT(*) FROM vt12, rt0 WHERE (((CASE rt0.c3  WHEN rt0.c4 THEN vt12.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END)<>(CAST(vt12.c0 AS INTEGER)))) ORDER BY ((('0.9120932719807843')) BETWEEN ((x'')) AND ((LIKELY(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c3  WHEN rt0.c4 THEN vt12.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END)<>(CAST(vt12.c0 AS INTEGER)))) IS TRUE)  as count FROM vt12, rt0 ORDER BY ((('0.9120932719807843')) BETWEEN ((x'')) AND ((LIKELY(DISTINCT rt0.c2)))));
SELECT COUNT(*) FROM vt12, rt0 WHERE (((CASE rt0.c3  WHEN rt0.c4 THEN vt12.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END)<>(CAST(vt12.c0 AS INTEGER)))) ORDER BY ((('0.9120932719807843')) BETWEEN ((x'')) AND ((LIKELY(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c3  WHEN rt0.c4 THEN vt12.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END)<>(CAST(vt12.c0 AS INTEGER)))) IS TRUE)  as count FROM vt12, rt0 ORDER BY ((('0.9120932719807843')) BETWEEN ((x'')) AND ((LIKELY(DISTINCT rt0.c2)))));
SELECT COUNT(*) FROM vt12, rt0 WHERE (((CASE rt0.c3  WHEN rt0.c4 THEN vt12.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END)<>(CAST(vt12.c0 AS INTEGER)))) ORDER BY ((('0.9120932719807843')) BETWEEN ((x'')) AND ((LIKELY(DISTINCT rt0.c2))));
SELECT * FROM rt0, vt12 WHERE (rt0.c3) ORDER BY LOWER(load_extension(1.711339455E9)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt12 ORDER BY LOWER(load_extension(1.711339455E9)) DESC  NULLS FIRST);
SELECT * FROM rt0, vt12 WHERE (rt0.c3) ORDER BY LOWER(load_extension(1.711339455E9)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt12 ORDER BY LOWER(load_extension(1.711339455E9)) DESC  NULLS FIRST);
SELECT * FROM rt0, vt12 WHERE (rt0.c3) ORDER BY LOWER(load_extension(1.711339455E9)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ('' COLLATE BINARY COLLATE NOCASE) ORDER BY ((CAST(t0.c1 AS TEXT))>(CASE WHEN t0.c0 THEN t0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('' COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c1 AS TEXT))>(CASE WHEN t0.c0 THEN t0.c1 END))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ('' COLLATE BINARY COLLATE NOCASE) ORDER BY ((CAST(t0.c1 AS TEXT))>(CASE WHEN t0.c0 THEN t0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('' COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c1 AS TEXT))>(CASE WHEN t0.c0 THEN t0.c1 END))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ('' COLLATE BINARY COLLATE NOCASE) ORDER BY ((CAST(t0.c1 AS TEXT))>(CASE WHEN t0.c0 THEN t0.c1 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt12 INNER JOIN t0 ON ((((CAST(t0.c2 AS REAL))OR(((vt12.c0)LIKE(t0.c0)))))OR(0.9978997403282365)) WHERE (((((vt12.c0))!=((t0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt12.c0))!=((t0.c0))) IN ())) IS TRUE)  as count FROM vt12 INNER JOIN t0 ON ((((CAST(t0.c2 AS REAL))OR(((vt12.c0)LIKE(t0.c0)))))OR(0.9978997403282365)));
SELECT ALL COUNT(*) FROM vt12 INNER JOIN t0 ON ((((CAST(t0.c2 AS REAL))OR(((vt12.c0)LIKE(t0.c0)))))OR(0.9978997403282365)) WHERE (((((vt12.c0))!=((t0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt12.c0))!=((t0.c0))) IN ())) IS TRUE)  as count FROM vt12 INNER JOIN t0 ON ((((CAST(t0.c2 AS REAL))OR(((vt12.c0)LIKE(t0.c0)))))OR(0.9978997403282365)));
SELECT ALL COUNT(*) FROM vt12 INNER JOIN t0 ON ((((CAST(t0.c2 AS REAL))OR(((vt12.c0)LIKE(t0.c0)))))OR(0.9978997403282365)) WHERE (((((vt12.c0))!=((t0.c0))) IN ()));
SELECT ALL * FROM vt12, rt0, vt0 NATURAL JOIN t0 WHERE ((((rt0.c0)) BETWEEN ((((((((((t0.c1)OR(t0.c1)))OR(rt0.c2)))OR(t0.c1)))AND(vt0.c0)))) AND ((CAST(rt0.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((((((((((t0.c1)OR(t0.c1)))OR(rt0.c2)))OR(t0.c1)))AND(vt0.c0)))) AND ((CAST(rt0.c0 AS INTEGER))))) IS TRUE)  as count FROM vt12, rt0, vt0 NATURAL JOIN t0);
SELECT ALL * FROM vt12, rt0, vt0 NATURAL JOIN t0 WHERE ((((rt0.c0)) BETWEEN ((((((((((t0.c1)OR(t0.c1)))OR(rt0.c2)))OR(t0.c1)))AND(vt0.c0)))) AND ((CAST(rt0.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((((((((((t0.c1)OR(t0.c1)))OR(rt0.c2)))OR(t0.c1)))AND(vt0.c0)))) AND ((CAST(rt0.c0 AS INTEGER))))) IS TRUE)  as count FROM vt12, rt0, vt0 NATURAL JOIN t0);
SELECT ALL * FROM vt12, rt0, vt0 NATURAL JOIN t0 WHERE ((((rt0.c0)) BETWEEN ((((((((((t0.c1)OR(t0.c1)))OR(rt0.c2)))OR(t0.c1)))AND(vt0.c0)))) AND ((CAST(rt0.c0 AS INTEGER)))));
SELECT ALL COUNT(*) FROM vt12 CROSS JOIN t0 ON (((- (t0.c1))) ISNULL) INNER JOIN vt0 ON ((((vt0.c0) BETWEEN (t0.c0) AND (vt12.c0))) NOT BETWEEN (((vt12.c0)=(t0.c2))) AND (((((vt12.c0)OR(t0.c1)))AND(1661960120)))) WHERE (((CASE WHEN 1465827565 THEN t0.c0 ELSE t0.c1 END)GLOB((('0.2903940581060779') IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 1465827565 THEN t0.c0 ELSE t0.c1 END)GLOB((('0.2903940581060779') IS TRUE)))) IS TRUE)  as count FROM vt12 CROSS JOIN t0 ON (((- (t0.c1))) ISNULL) INNER JOIN vt0 ON ((((vt0.c0) BETWEEN (t0.c0) AND (vt12.c0))) NOT BETWEEN (((vt12.c0)=(t0.c2))) AND (((((vt12.c0)OR(t0.c1)))AND(1661960120)))));
SELECT ALL COUNT(*) FROM vt12 CROSS JOIN t0 ON (((- (t0.c1))) ISNULL) INNER JOIN vt0 ON ((((vt0.c0) BETWEEN (t0.c0) AND (vt12.c0))) NOT BETWEEN (((vt12.c0)=(t0.c2))) AND (((((vt12.c0)OR(t0.c1)))AND(1661960120)))) WHERE (((CASE WHEN 1465827565 THEN t0.c0 ELSE t0.c1 END)GLOB((('0.2903940581060779') IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 1465827565 THEN t0.c0 ELSE t0.c1 END)GLOB((('0.2903940581060779') IS TRUE)))) IS TRUE)  as count FROM vt12 CROSS JOIN t0 ON (((- (t0.c1))) ISNULL) INNER JOIN vt0 ON ((((vt0.c0) BETWEEN (t0.c0) AND (vt12.c0))) NOT BETWEEN (((vt12.c0)=(t0.c2))) AND (((((vt12.c0)OR(t0.c1)))AND(1661960120)))));
SELECT ALL COUNT(*) FROM vt12 CROSS JOIN t0 ON (((- (t0.c1))) ISNULL) INNER JOIN vt0 ON ((((vt0.c0) BETWEEN (t0.c0) AND (vt12.c0))) NOT BETWEEN (((vt12.c0)=(t0.c2))) AND (((((vt12.c0)OR(t0.c1)))AND(1661960120)))) WHERE (((CASE WHEN 1465827565 THEN t0.c0 ELSE t0.c1 END)GLOB((('0.2903940581060779') IS TRUE))));
SELECT ALL COUNT(*) FROM vt12, rt0 WHERE (CASE CAST(rt0.c2 AS BLOB)  WHEN rt0.c0 COLLATE NOCASE THEN 418333178 END) ORDER BY ((',7')IS NOT(rt0.c4 COLLATE RTRIM))  NULLS LAST, (((NOT ('1204114747')))AND(((rt0.c2)%(vt12.c0)))) DESC, LOWER(rt0.c3 COLLATE BINARY)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c2 AS BLOB)  WHEN rt0.c0 COLLATE NOCASE THEN 418333178 END) IS TRUE)  as count FROM vt12, rt0 ORDER BY ((',7')IS NOT(rt0.c4 COLLATE RTRIM))  NULLS LAST, (((NOT ('1204114747')))AND(((rt0.c2)%(vt12.c0)))) DESC, LOWER(rt0.c3 COLLATE BINARY)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt12, rt0 WHERE (CASE CAST(rt0.c2 AS BLOB)  WHEN rt0.c0 COLLATE NOCASE THEN 418333178 END) ORDER BY ((',7')IS NOT(rt0.c4 COLLATE RTRIM))  NULLS LAST, (((NOT ('1204114747')))AND(((rt0.c2)%(vt12.c0)))) DESC, LOWER(rt0.c3 COLLATE BINARY)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c2 AS BLOB)  WHEN rt0.c0 COLLATE NOCASE THEN 418333178 END) IS TRUE)  as count FROM vt12, rt0 ORDER BY ((',7')IS NOT(rt0.c4 COLLATE RTRIM))  NULLS LAST, (((NOT ('1204114747')))AND(((rt0.c2)%(vt12.c0)))) DESC, LOWER(rt0.c3 COLLATE BINARY)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt12, rt0 WHERE (CASE CAST(rt0.c2 AS BLOB)  WHEN rt0.c0 COLLATE NOCASE THEN 418333178 END) ORDER BY ((',7')IS NOT(rt0.c4 COLLATE RTRIM))  NULLS LAST, (((NOT ('1204114747')))AND(((rt0.c2)%(vt12.c0)))) DESC, LOWER(rt0.c3 COLLATE BINARY)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt12, rt0 NOT INDEXED RIGHT OUTER JOIN t0 ON ((((((t0.c1) IS FALSE))OR(rt0.c3 COLLATE BINARY)))AND(((t0.c1)*(rt0.c2)))) WHERE (CASE rt0.c2  WHEN ((rt0.c3)==(vt12.c0)) THEN (('-133955108') NOT BETWEEN (rt0.c1) AND (t0.c1)) END) ORDER BY ((t0.c2 IN ()) IN ((((t0.c2))==((t0.c2))), rt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN ((rt0.c3)==(vt12.c0)) THEN (('-133955108') NOT BETWEEN (rt0.c1) AND (t0.c1)) END) IS TRUE)  as count FROM vt12, rt0 RIGHT OUTER JOIN t0 ON ((((((t0.c1) IS FALSE))OR(rt0.c3 COLLATE BINARY)))AND(((t0.c1)*(rt0.c2)))) ORDER BY ((t0.c2 IN ()) IN ((((t0.c2))=((t0.c2))), rt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt12, rt0 NOT INDEXED RIGHT OUTER JOIN t0 ON ((((((t0.c1) IS FALSE))OR(rt0.c3 COLLATE BINARY)))AND(((t0.c1)*(rt0.c2)))) WHERE (CASE rt0.c2  WHEN ((rt0.c3)==(vt12.c0)) THEN (('-133955108') NOT BETWEEN (rt0.c1) AND (t0.c1)) END) ORDER BY ((t0.c2 IN ()) IN ((((t0.c2))==((t0.c2))), rt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN ((rt0.c3)==(vt12.c0)) THEN (('-133955108') NOT BETWEEN (rt0.c1) AND (t0.c1)) END) IS TRUE)  as count FROM vt12, rt0 RIGHT OUTER JOIN t0 ON ((((((t0.c1) IS FALSE))OR(rt0.c3 COLLATE BINARY)))AND(((t0.c1)*(rt0.c2)))) ORDER BY ((t0.c2 IN ()) IN ((((t0.c2))=((t0.c2))), rt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt12, rt0 NOT INDEXED RIGHT OUTER JOIN t0 ON ((((((t0.c1) IS FALSE))OR(rt0.c3 COLLATE BINARY)))AND(((t0.c1)*(rt0.c2)))) WHERE (CASE rt0.c2  WHEN ((rt0.c3)==(vt12.c0)) THEN (('-133955108') NOT BETWEEN (rt0.c1) AND (t0.c1)) END) ORDER BY ((t0.c2 IN ()) IN ((((t0.c2))==((t0.c2))), rt0.c0 COLLATE BINARY));
SELECT COUNT(*) FROM t0 WHERE ((NOT ((((t0.c2))<=((t0.c0)))))) ORDER BY ((((x'') NOTNULL))IS NOT(CASE WHEN '517207865' THEN t0.c1 ELSE t0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((t0.c2))<=((t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY ((((x'') NOTNULL))IS NOT(CASE WHEN '517207865' THEN t0.c1 ELSE t0.c2 END))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((NOT ((((t0.c2))<=((t0.c0)))))) ORDER BY ((((x'') NOTNULL))IS NOT(CASE WHEN '517207865' THEN t0.c1 ELSE t0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((t0.c2))<=((t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY ((((x'') NOTNULL))IS NOT(CASE WHEN '517207865' THEN t0.c1 ELSE t0.c2 END))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((NOT ((((t0.c2))<=((t0.c0)))))) ORDER BY ((((x'') NOTNULL))IS NOT(CASE WHEN '517207865' THEN t0.c1 ELSE t0.c2 END))  NULLS LAST;
SELECT ALL * FROM vt0, t0, vt12 WHERE (CAST(CASE WHEN t0.c2 THEN t0.c0 END AS NUMERIC)) ORDER BY CASE WHEN (~ (vt12.c0)) THEN CAST(t0.c2 AS INTEGER) WHEN t0.c0 THEN LIKELY(DISTINCT t0.c0) WHEN ((((t0.c2)AND(t0.c2)))AND(NULL)) THEN LIKELY(t0.c1) ELSE ((t0.c1)%(t0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c2 THEN t0.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt0, t0, vt12 ORDER BY CASE WHEN (~ (vt12.c0)) THEN CAST(t0.c2 AS INTEGER) WHEN t0.c0 THEN LIKELY(DISTINCT t0.c0) WHEN ((((t0.c2)AND(t0.c2)))AND(NULL)) THEN LIKELY(t0.c1) ELSE ((t0.c1)%(t0.c2)) END DESC);
SELECT ALL * FROM vt0, t0, vt12 WHERE (CAST(CASE WHEN t0.c2 THEN t0.c0 END AS NUMERIC)) ORDER BY CASE WHEN (~ (vt12.c0)) THEN CAST(t0.c2 AS INTEGER) WHEN t0.c0 THEN LIKELY(DISTINCT t0.c0) WHEN ((((t0.c2)AND(t0.c2)))AND(NULL)) THEN LIKELY(t0.c1) ELSE ((t0.c1)%(t0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c2 THEN t0.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt0, t0, vt12 ORDER BY CASE WHEN (~ (vt12.c0)) THEN CAST(t0.c2 AS INTEGER) WHEN t0.c0 THEN LIKELY(DISTINCT t0.c0) WHEN ((((t0.c2)AND(t0.c2)))AND(NULL)) THEN LIKELY(t0.c1) ELSE ((t0.c1)%(t0.c2)) END DESC);
SELECT ALL * FROM vt0, t0, vt12 WHERE (CAST(CASE WHEN t0.c2 THEN t0.c0 END AS NUMERIC)) ORDER BY CASE WHEN (~ (vt12.c0)) THEN CAST(t0.c2 AS INTEGER) WHEN t0.c0 THEN LIKELY(DISTINCT t0.c0) WHEN ((((t0.c2)AND(t0.c2)))AND(NULL)) THEN LIKELY(t0.c1) ELSE ((t0.c1)%(t0.c2)) END DESC;
SELECT * FROM rt0, vt0, vt12 WHERE (((rt0.c4 COLLATE RTRIM)>(((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c1)))OR(vt0.c0)))OR(rt0.c4))))) ORDER BY (((rt0.c4) IS FALSE) IN ());
SELECT SUM(count) FROM (SELECT ((((rt0.c4 COLLATE RTRIM)>(((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c1)))OR(vt0.c0)))OR(rt0.c4))))) IS TRUE)  as count FROM rt0, vt0, vt12 ORDER BY (((rt0.c4) IS FALSE) IN ()));
SELECT * FROM rt0, vt0, vt12 WHERE (((rt0.c4 COLLATE RTRIM)>(((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c1)))OR(vt0.c0)))OR(rt0.c4))))) ORDER BY (((rt0.c4) IS FALSE) IN ());
SELECT SUM(count) FROM (SELECT ((((rt0.c4 COLLATE RTRIM)>(((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c1)))OR(vt0.c0)))OR(rt0.c4))))) IS TRUE)  as count FROM rt0, vt0, vt12 ORDER BY (((rt0.c4) IS FALSE) IN ()));
SELECT * FROM rt0, vt0, vt12 WHERE (((rt0.c4 COLLATE RTRIM)>(((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c1)))OR(vt0.c0)))OR(rt0.c4))))) ORDER BY (((rt0.c4) IS FALSE) IN ());
SELECT ALL * FROM t0, rt0, vt12 WHERE ((((vt12.c0 IN ()))GLOB(highlight(rt0.c2, rt0.c1, vt12.c0, t0.c1))));
SELECT SUM(count) FROM (SELECT (((((vt12.c0 IN ()))GLOB(highlight(rt0.c2, rt0.c1, vt12.c0, t0.c1)))) IS TRUE)  as count FROM t0, rt0, vt12);
SELECT ALL * FROM t0, rt0, vt12 WHERE ((((vt12.c0 IN ()))GLOB(highlight(rt0.c2, rt0.c1, vt12.c0, t0.c1))));
SELECT SUM(count) FROM (SELECT (((((vt12.c0 IN ()))GLOB(highlight(rt0.c2, rt0.c1, vt12.c0, t0.c1)))) IS TRUE)  as count FROM t0, rt0, vt12);
SELECT ALL * FROM t0, rt0, vt12 WHERE ((((vt12.c0 IN ()))GLOB(highlight(rt0.c2, rt0.c1, vt12.c0, t0.c1))));
SELECT * FROM vt12, rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt12.c0 THEN vt12.c0 WHEN NULL THEN vt12.c0 WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END AS NUMERIC)) ORDER BY CASE WHEN (NOT (rt0.c2)) THEN UPPER(rt0.c0) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt12.c0 THEN vt12.c0 WHEN NULL THEN vt12.c0 WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END AS NUMERIC)) IS TRUE)  as count FROM vt12, rt0 ORDER BY CASE WHEN (NOT (rt0.c2)) THEN UPPER(rt0.c0) END DESC);
SELECT * FROM vt12, rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt12.c0 THEN vt12.c0 WHEN NULL THEN vt12.c0 WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END AS NUMERIC)) ORDER BY CASE WHEN (NOT (rt0.c2)) THEN UPPER(rt0.c0) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt12.c0 THEN vt12.c0 WHEN NULL THEN vt12.c0 WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END AS NUMERIC)) IS TRUE)  as count FROM vt12, rt0 ORDER BY CASE WHEN (NOT (rt0.c2)) THEN UPPER(rt0.c0) END DESC);
SELECT * FROM vt12, rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt12.c0 THEN vt12.c0 WHEN NULL THEN vt12.c0 WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END AS NUMERIC)) ORDER BY CASE WHEN (NOT (rt0.c2)) THEN UPPER(rt0.c0) END DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (((NULLIF(DISTINCT t0.c0, t0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT t0.c0, t0.c0)) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((NULLIF(DISTINCT t0.c0, t0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT t0.c0, t0.c0)) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((NULLIF(DISTINCT t0.c0, t0.c0)) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (rt0.c3);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((+ (((t0.c2)/(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c2)/(t0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((+ (((t0.c2)/(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c2)/(t0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((+ (((t0.c2)/(t0.c0)))));
SELECT COUNT(*) FROM t0, vt0, rt0, vt12 WHERE (rt0.c4) ORDER BY (CAST(t0.c1 AS BLOB) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM t0, vt0, rt0, vt12 ORDER BY (CAST(t0.c1 AS BLOB) IN ())  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt0, vt12 WHERE (rt0.c4) ORDER BY (CAST(t0.c1 AS BLOB) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM t0, vt0, rt0, vt12 ORDER BY (CAST(t0.c1 AS BLOB) IN ())  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt0, vt12 WHERE (rt0.c4) ORDER BY (CAST(t0.c1 AS BLOB) IN ())  NULLS LAST;
SELECT * FROM vt12, rt0 WHERE ((((((rt0.c4) ISNULL)))>=((CAST(rt0.c3 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c4) ISNULL)))>=((CAST(rt0.c3 AS BLOB))))) IS TRUE)  as count FROM vt12, rt0);
SELECT * FROM vt12, rt0 WHERE ((((((rt0.c4) ISNULL)))>=((CAST(rt0.c3 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c4) ISNULL)))>=((CAST(rt0.c3 AS BLOB))))) IS TRUE)  as count FROM vt12, rt0);
SELECT * FROM vt12, rt0 WHERE ((((((rt0.c4) ISNULL)))>=((CAST(rt0.c3 AS BLOB)))));
SELECT * FROM vt0, vt12, rt0, t0 WHERE (CAST(0.11390665618088092 COLLATE RTRIM AS REAL)) ORDER BY (((rt0.c4, vt0.c0, rt0.c4)) NOT BETWEEN ((NULL, vt12.c0 COLLATE RTRIM, CAST(vt0.c0 AS INTEGER))) AND ((CAST(t0.c1 AS BLOB), NULLIF(rt0.c4, t0.c0), NULL)));
SELECT SUM(count) FROM (SELECT ((CAST(0.11390665618088092 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM vt0, vt12, rt0, t0 ORDER BY (((rt0.c4, vt0.c0, rt0.c4)) NOT BETWEEN ((NULL, vt12.c0 COLLATE RTRIM, CAST(vt0.c0 AS INTEGER))) AND ((CAST(t0.c1 AS BLOB), NULLIF(rt0.c4, t0.c0), NULL))));
SELECT * FROM vt0, vt12, rt0, t0 WHERE (CAST(0.11390665618088092 COLLATE RTRIM AS REAL)) ORDER BY (((rt0.c4, vt0.c0, rt0.c4)) NOT BETWEEN ((NULL, vt12.c0 COLLATE RTRIM, CAST(vt0.c0 AS INTEGER))) AND ((CAST(t0.c1 AS BLOB), NULLIF(rt0.c4, t0.c0), NULL)));
SELECT SUM(count) FROM (SELECT ((CAST(0.11390665618088092 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM vt0, vt12, rt0, t0 ORDER BY (((rt0.c4, vt0.c0, rt0.c4)) NOT BETWEEN ((NULL, vt12.c0 COLLATE RTRIM, CAST(vt0.c0 AS INTEGER))) AND ((CAST(t0.c1 AS BLOB), NULLIF(rt0.c4, t0.c0), NULL))));
SELECT * FROM vt0, vt12, rt0, t0 WHERE (CAST(0.11390665618088092 COLLATE RTRIM AS REAL)) ORDER BY (((rt0.c4, vt0.c0, rt0.c4)) NOT BETWEEN ((NULL, vt12.c0 COLLATE RTRIM, CAST(vt0.c0 AS INTEGER))) AND ((CAST(t0.c1 AS BLOB), NULLIF(rt0.c4, t0.c0), NULL)));
SELECT ALL * FROM t0 WHERE ('[[膭o');
SELECT SUM(count) FROM (SELECT ALL (('[[膭o') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ('[[膭o');
SELECT SUM(count) FROM (SELECT ALL (('[[膭o') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ('[[膭o');
SELECT ALL * FROM rt0, vt0 WHERE (CAST(rt0.c0 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(rt0.c0 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(rt0.c0 COLLATE RTRIM AS INTEGER));
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c4) IS TRUE))AND(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) IS TRUE))AND(rt0.c2))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c4) IS TRUE))AND(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) IS TRUE))AND(rt0.c2))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c4) IS TRUE))AND(rt0.c2)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c3)<=(rt0.c4)))OR(rt0.c0)))AND(TOTAL_CHANGES())))OR(NULL)))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)<=(rt0.c4)))OR(rt0.c0)))AND(TOTAL_CHANGES())))OR(NULL)))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c3)<=(rt0.c4)))OR(rt0.c0)))AND(TOTAL_CHANGES())))OR(NULL)))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)<=(rt0.c4)))OR(rt0.c0)))AND(TOTAL_CHANGES())))OR(NULL)))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c3)<=(rt0.c4)))OR(rt0.c0)))AND(TOTAL_CHANGES())))OR(NULL)))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)));
SELECT ALL * FROM vt12 WHERE (CAST(vt12.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt12.c0 AS NUMERIC)) IS TRUE)  as count FROM vt12);
SELECT ALL * FROM vt12 WHERE (CAST(vt12.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt12.c0 AS NUMERIC)) IS TRUE)  as count FROM vt12);
SELECT ALL * FROM vt12 WHERE (CAST(vt12.c0 AS NUMERIC));
SELECT ALL * FROM vt0, t0, rt0, vt12 NOT INDEXED WHERE (t0.c1) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM vt0, t0, rt0, vt12 ORDER BY t0.c0);
SELECT ALL * FROM vt0, t0, rt0, vt12 NOT INDEXED WHERE (t0.c1) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM vt0, t0, rt0, vt12 ORDER BY t0.c0);
SELECT ALL * FROM vt0, t0, rt0, vt12 NOT INDEXED WHERE (t0.c1) ORDER BY t0.c0;
SELECT COUNT(*) FROM rt0, vt0, vt12 FULL OUTER JOIN t0 ON (((t0.c0 IN ()))%((~ (t0.c1)))) WHERE ((~ (CASE rt0.c2  WHEN '0.34235300180198447' THEN t0.c2 END))) ORDER BY CASE ((rt0.c2)+(t0.c0))  WHEN CASE WHEN vt12.c0 THEN vt12.c0 ELSE vt12.c0 END THEN '\(1671T-2642515154785392648 6140826740072452373T/%Q' END DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE rt0.c2  WHEN '0.34235300180198447' THEN t0.c2 END))) IS TRUE)  as count FROM rt0, vt0, vt12 FULL OUTER JOIN t0 ON (((t0.c0 IN ()))%((~ (t0.c1)))) ORDER BY CASE ((rt0.c2)+(t0.c0))  WHEN CASE WHEN vt12.c0 THEN vt12.c0 ELSE vt12.c0 END THEN '\(1671T-2642515154785392648 6140826740072452373T/%Q' END DESC);
SELECT COUNT(*) FROM rt0, vt0, vt12 FULL OUTER JOIN t0 ON (((t0.c0 IN ()))%((~ (t0.c1)))) WHERE ((~ (CASE rt0.c2  WHEN '0.34235300180198447' THEN t0.c2 END))) ORDER BY CASE ((rt0.c2)+(t0.c0))  WHEN CASE WHEN vt12.c0 THEN vt12.c0 ELSE vt12.c0 END THEN '\(1671T-2642515154785392648 6140826740072452373T/%Q' END DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE rt0.c2  WHEN '0.34235300180198447' THEN t0.c2 END))) IS TRUE)  as count FROM rt0, vt0, vt12 FULL OUTER JOIN t0 ON (((t0.c0 IN ()))%((~ (t0.c1)))) ORDER BY CASE ((rt0.c2)+(t0.c0))  WHEN CASE WHEN vt12.c0 THEN vt12.c0 ELSE vt12.c0 END THEN '\(1671T-2642515154785392648 6140826740072452373T/%Q' END DESC);
SELECT COUNT(*) FROM rt0, vt0, vt12 FULL OUTER JOIN t0 ON (((t0.c0 IN ()))%((~ (t0.c1)))) WHERE ((~ (CASE rt0.c2  WHEN '0.34235300180198447' THEN t0.c2 END))) ORDER BY CASE ((rt0.c2)+(t0.c0))  WHEN CASE WHEN vt12.c0 THEN vt12.c0 ELSE vt12.c0 END THEN '\(1671T-2642515154785392648 6140826740072452373T/%Q' END DESC;
SELECT COUNT(*) FROM rt0, vt12, vt0 WHERE (CAST(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 ELSE 0X271b1179 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 ELSE 0X271b1179 END AS REAL)) IS TRUE)  as count FROM rt0, vt12, vt0);
SELECT COUNT(*) FROM rt0, vt12, vt0 WHERE (CAST(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 ELSE 0X271b1179 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 ELSE 0X271b1179 END AS REAL)) IS TRUE)  as count FROM rt0, vt12, vt0);
SELECT COUNT(*) FROM rt0, vt12, vt0 WHERE (CAST(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 ELSE 0X271b1179 END AS REAL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))IS((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))IS((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))IS((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))IS((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))IS((+ (vt0.c0)))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt12 ON ((ROUND(rt0.c3, vt0.c0)) BETWEEN (((((NULL)OR(vt12.c0)))OR(rt0.c3))) AND (t0.c1)) FULL OUTER JOIN vt0 ON (NOT (UPPER(rt0.c4))) CROSS JOIN rt0 ON ((json_object(t0.c0, t0.c2, vt0.c0, rt0.c0))||(rt0.c4)) WHERE (vt12.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt12.c0) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt12 ON ((ROUND(rt0.c3, vt0.c0)) BETWEEN (((((NULL)OR(vt12.c0)))OR(rt0.c3))) AND (t0.c1)) FULL OUTER JOIN vt0 ON (NOT (UPPER(rt0.c4))) CROSS JOIN rt0 ON ((json_object(t0.c0, t0.c2, vt0.c0, rt0.c0))||(rt0.c4)));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt12 ON ((ROUND(rt0.c3, vt0.c0)) BETWEEN (((((NULL)OR(vt12.c0)))OR(rt0.c3))) AND (t0.c1)) FULL OUTER JOIN vt0 ON (NOT (UPPER(rt0.c4))) CROSS JOIN rt0 ON ((json_object(t0.c0, t0.c2, vt0.c0, rt0.c0))||(rt0.c4)) WHERE (vt12.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt12.c0) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt12 ON ((ROUND(rt0.c3, vt0.c0)) BETWEEN (((((NULL)OR(vt12.c0)))OR(rt0.c3))) AND (t0.c1)) FULL OUTER JOIN vt0 ON (NOT (UPPER(rt0.c4))) CROSS JOIN rt0 ON ((json_object(t0.c0, t0.c2, vt0.c0, rt0.c0))||(rt0.c4)));
SELECT COUNT(*) FROM vt0, t0, vt12 FULL OUTER JOIN rt0 ON ((((rt0.c1) NOT NULL))IS((vt12.c0 IN ()))) WHERE (TYPEOF(('-' IN ()))) ORDER BY CASE (((vt12.c0))>=((rt0.c3)))  WHEN t0.c1 THEN '' WHEN CAST('' AS TEXT) THEN ((vt12.c0)AND(t0.c0)) WHEN (((rt0.c2)) NOT BETWEEN ((-1767832688)) AND ((t0.c2))) THEN CAST(t0.c0 AS BLOB) ELSE ((x'') NOT BETWEEN (t0.c0) AND (rt0.c4)) END, ((UNLIKELY(DISTINCT x'')) NOT BETWEEN (NULLIF(t0.c0, rt0.c0)) AND (((rt0.c4)<=(vt12.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(('-' IN ()))) IS TRUE)  as count FROM vt0, t0, vt12 FULL OUTER JOIN rt0 ON ((((rt0.c1) NOT NULL))IS((vt12.c0 IN ()))) ORDER BY CASE (((vt12.c0))>=((rt0.c3)))  WHEN t0.c1 THEN '' WHEN CAST('' AS TEXT) THEN ((vt12.c0)AND(t0.c0)) WHEN (((rt0.c2)) NOT BETWEEN ((-1767832688)) AND ((t0.c2))) THEN CAST(t0.c0 AS BLOB) ELSE ((x'') NOT BETWEEN (t0.c0) AND (rt0.c4)) END, ((UNLIKELY(DISTINCT x'')) NOT BETWEEN (NULLIF(t0.c0, rt0.c0)) AND (((rt0.c4)<=(vt12.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, vt12 FULL OUTER JOIN rt0 ON ((((rt0.c1) NOT NULL))IS((vt12.c0 IN ()))) WHERE (TYPEOF(('-' IN ()))) ORDER BY CASE (((vt12.c0))>=((rt0.c3)))  WHEN t0.c1 THEN '' WHEN CAST('' AS TEXT) THEN ((vt12.c0)AND(t0.c0)) WHEN (((rt0.c2)) NOT BETWEEN ((-1767832688)) AND ((t0.c2))) THEN CAST(t0.c0 AS BLOB) ELSE ((x'') NOT BETWEEN (t0.c0) AND (rt0.c4)) END, ((UNLIKELY(DISTINCT x'')) NOT BETWEEN (NULLIF(t0.c0, rt0.c0)) AND (((rt0.c4)<=(vt12.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(('-' IN ()))) IS TRUE)  as count FROM vt0, t0, vt12 FULL OUTER JOIN rt0 ON ((((rt0.c1) NOT NULL))IS((vt12.c0 IN ()))) ORDER BY CASE (((vt12.c0))>=((rt0.c3)))  WHEN t0.c1 THEN '' WHEN CAST('' AS TEXT) THEN ((vt12.c0)AND(t0.c0)) WHEN (((rt0.c2)) NOT BETWEEN ((-1767832688)) AND ((t0.c2))) THEN CAST(t0.c0 AS BLOB) ELSE ((x'') NOT BETWEEN (t0.c0) AND (rt0.c4)) END, ((UNLIKELY(DISTINCT x'')) NOT BETWEEN (NULLIF(t0.c0, rt0.c0)) AND (((rt0.c4)<=(vt12.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, vt12 FULL OUTER JOIN rt0 ON ((((rt0.c1) NOT NULL))IS((vt12.c0 IN ()))) WHERE (TYPEOF(('-' IN ()))) ORDER BY CASE (((vt12.c0))>=((rt0.c3)))  WHEN t0.c1 THEN '' WHEN CAST('' AS TEXT) THEN ((vt12.c0)AND(t0.c0)) WHEN (((rt0.c2)) NOT BETWEEN ((-1767832688)) AND ((t0.c2))) THEN CAST(t0.c0 AS BLOB) ELSE ((x'') NOT BETWEEN (t0.c0) AND (rt0.c4)) END, ((UNLIKELY(DISTINCT x'')) NOT BETWEEN (NULLIF(t0.c0, rt0.c0)) AND (((rt0.c4)<=(vt12.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt12, vt0, t0 WHERE ((+ (vt12.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt12.c0))) IS TRUE)  as count FROM vt12, vt0, t0);
SELECT ALL * FROM vt12, vt0, t0 WHERE ((+ (vt12.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt12.c0))) IS TRUE)  as count FROM vt12, vt0, t0);
SELECT ALL * FROM vt12, vt0, t0 WHERE ((+ (vt12.c0)));
SELECT * FROM vt12, rt0, t0 RIGHT OUTER JOIN vt0 ON CASE WHEN CAST(rt0.c3 AS REAL) THEN ((t0.c0)|(t0.c2)) ELSE LIKELIHOOD(vt12.c0, 0.02080397442192239) END WHERE (((('0.5417333906969961')) NOT BETWEEN ((CASE WHEN rt0.c3 THEN rt0.c2 END)) AND (((((rt0.c2))<((rt0.c2))))))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('0.5417333906969961')) NOT BETWEEN ((CASE WHEN rt0.c3 THEN rt0.c2 END)) AND (((((rt0.c2))<((rt0.c2))))))) IS TRUE)  as count FROM vt12, rt0, t0 RIGHT OUTER JOIN vt0 ON CASE WHEN CAST(rt0.c3 AS REAL) THEN ((t0.c0)|(t0.c2)) ELSE LIKELIHOOD(vt12.c0, 0.02080397442192239) END ORDER BY vt0.c0  NULLS LAST);
SELECT * FROM vt12, rt0, t0 RIGHT OUTER JOIN vt0 ON CASE WHEN CAST(rt0.c3 AS REAL) THEN ((t0.c0)|(t0.c2)) ELSE LIKELIHOOD(vt12.c0, 0.02080397442192239) END WHERE (((('0.5417333906969961')) NOT BETWEEN ((CASE WHEN rt0.c3 THEN rt0.c2 END)) AND (((((rt0.c2))<((rt0.c2))))))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('0.5417333906969961')) NOT BETWEEN ((CASE WHEN rt0.c3 THEN rt0.c2 END)) AND (((((rt0.c2))<((rt0.c2))))))) IS TRUE)  as count FROM vt12, rt0, t0 RIGHT OUTER JOIN vt0 ON CASE WHEN CAST(rt0.c3 AS REAL) THEN ((t0.c0)|(t0.c2)) ELSE LIKELIHOOD(vt12.c0, 0.02080397442192239) END ORDER BY vt0.c0  NULLS LAST);
SELECT * FROM vt12, rt0, t0 RIGHT OUTER JOIN vt0 ON CASE WHEN CAST(rt0.c3 AS REAL) THEN ((t0.c0)|(t0.c2)) ELSE LIKELIHOOD(vt12.c0, 0.02080397442192239) END WHERE (((('0.5417333906969961')) NOT BETWEEN ((CASE WHEN rt0.c3 THEN rt0.c2 END)) AND (((((rt0.c2))<((rt0.c2))))))) ORDER BY vt0.c0  NULLS LAST;
SELECT COUNT(*) FROM vt12, t0 INNER JOIN rt0 ON (NOT (rt0.c3)) COLLATE NOCASE WHERE (NULL) ORDER BY CAST('1139287507' AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt12, t0 INNER JOIN rt0 ON (NOT (rt0.c3)) COLLATE NOCASE ORDER BY CAST('1139287507' AS INTEGER) ASC);
SELECT COUNT(*) FROM vt12, t0 INNER JOIN rt0 ON (NOT (rt0.c3)) COLLATE NOCASE WHERE (NULL) ORDER BY CAST('1139287507' AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt12, t0 INNER JOIN rt0 ON (NOT (rt0.c3)) COLLATE NOCASE ORDER BY CAST('1139287507' AS INTEGER) ASC);
SELECT COUNT(*) FROM vt12, t0 INNER JOIN rt0 ON (NOT (rt0.c3)) COLLATE NOCASE WHERE (NULL) ORDER BY CAST('1139287507' AS INTEGER) ASC;
SELECT ALL COUNT(*) FROM vt12, vt0, t0, rt0 WHERE (CAST(((t0.c2)-(rt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2)-(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt12, vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt12, vt0, t0, rt0 WHERE (CAST(((t0.c2)-(rt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2)-(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt12, vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt12, vt0, t0, rt0 WHERE (CAST(((t0.c2)-(rt0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt12, rt0 WHERE (('{' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('{' IN ())) IS TRUE)  as count FROM vt12, rt0);
SELECT ALL COUNT(*) FROM vt12, rt0 WHERE (('{' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('{' IN ())) IS TRUE)  as count FROM vt12, rt0);
SELECT ALL COUNT(*) FROM vt12, rt0 WHERE (('{' IN ()));
SELECT ALL * FROM vt12 WHERE (CASE WHEN -1708815513 THEN (((vt12.c0)) NOT BETWEEN ((vt12.c0)) AND ((vt12.c0))) ELSE '3# ' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN -1708815513 THEN (((vt12.c0)) NOT BETWEEN ((vt12.c0)) AND ((vt12.c0))) ELSE '3# ' END) IS TRUE)  as count FROM vt12);
SELECT ALL * FROM vt12 WHERE (CASE WHEN -1708815513 THEN (((vt12.c0)) NOT BETWEEN ((vt12.c0)) AND ((vt12.c0))) ELSE '3# ' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN -1708815513 THEN (((vt12.c0)) NOT BETWEEN ((vt12.c0)) AND ((vt12.c0))) ELSE '3# ' END) IS TRUE)  as count FROM vt12);
SELECT ALL * FROM vt12 WHERE (CASE WHEN -1708815513 THEN (((vt12.c0)) NOT BETWEEN ((vt12.c0)) AND ((vt12.c0))) ELSE '3# ' END);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (UPPER(DISTINCT (t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (t0.c0 IN ()))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (UPPER(DISTINCT (t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (t0.c0 IN ()))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (UPPER(DISTINCT (t0.c0 IN ())));
SELECT * FROM vt12, vt0, rt0 WHERE ((~ (((((((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))AND(vt0.c0)))AND(vt12.c0)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))AND(vt0.c0)))AND(vt12.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM vt12, vt0, rt0);
SELECT * FROM vt12, vt0, rt0 WHERE ((~ (((((((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))AND(vt0.c0)))AND(vt12.c0)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))AND(vt0.c0)))AND(vt12.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM vt12, vt0, rt0);
SELECT * FROM vt12, vt0, rt0 WHERE ((~ (((((((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))AND(vt0.c0)))AND(vt12.c0)))AND(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0, vt12 WHERE (0.2011705031061809);
SELECT SUM(count) FROM (SELECT ALL ((0.2011705031061809) IS TRUE)  as count FROM vt0, vt12);
SELECT ALL * FROM vt0, vt12 WHERE (0.2011705031061809);
SELECT SUM(count) FROM (SELECT ALL ((0.2011705031061809) IS TRUE)  as count FROM vt0, vt12);
SELECT ALL * FROM vt0, vt12 WHERE (0.2011705031061809);
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOTNULL))|(((t0.c1)|(t0.c0))))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOTNULL))|(((t0.c1)|(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY x'' DESC);
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOTNULL))|(((t0.c1)|(t0.c0))))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOTNULL))|(((t0.c1)|(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY x'' DESC);
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOTNULL))|(((t0.c1)|(t0.c0))))) ORDER BY x'' DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((SUBSTR(vt0.c0, vt0.c0))) AND ((((vt0.c0)IS(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((SUBSTR(vt0.c0, vt0.c0))) AND ((((vt0.c0)IS(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((SUBSTR(vt0.c0, vt0.c0))) AND ((((vt0.c0)IS(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((SUBSTR(vt0.c0, vt0.c0))) AND ((((vt0.c0)IS(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((SUBSTR(vt0.c0, vt0.c0))) AND ((((vt0.c0)IS(vt0.c0))))));
SELECT * FROM vt12 WHERE (TRIM(DISTINCT (NOT (vt12.c0)), ((vt12.c0)IS(vt12.c0)))) ORDER BY ((((vt12.c0)>=(vt12.c0))) NOTNULL)  NULLS FIRST, ((((vt12.c0)>>(vt12.c0))) BETWEEN (((vt12.c0) NOT BETWEEN (vt12.c0) AND (vt12.c0))) AND (((((((((vt12.c0)AND(vt12.c0)))AND(vt12.c0)))OR(vt12.c0)))AND(vt12.c0))))  NULLS FIRST, vt12.c0 ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (NOT (vt12.c0)), ((vt12.c0)IS(vt12.c0)))) IS TRUE)  as count FROM vt12 ORDER BY ((((vt12.c0)>=(vt12.c0))) NOTNULL)  NULLS FIRST, ((((vt12.c0)>>(vt12.c0))) BETWEEN (((vt12.c0) NOT BETWEEN (vt12.c0) AND (vt12.c0))) AND (((((((((vt12.c0)AND(vt12.c0)))AND(vt12.c0)))OR(vt12.c0)))AND(vt12.c0))))  NULLS FIRST, vt12.c0 ASC);
SELECT * FROM vt12 WHERE (TRIM(DISTINCT (NOT (vt12.c0)), ((vt12.c0)IS(vt12.c0)))) ORDER BY ((((vt12.c0)>=(vt12.c0))) NOTNULL)  NULLS FIRST, ((((vt12.c0)>>(vt12.c0))) BETWEEN (((vt12.c0) NOT BETWEEN (vt12.c0) AND (vt12.c0))) AND (((((((((vt12.c0)AND(vt12.c0)))AND(vt12.c0)))OR(vt12.c0)))AND(vt12.c0))))  NULLS FIRST, vt12.c0 ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (NOT (vt12.c0)), ((vt12.c0)IS(vt12.c0)))) IS TRUE)  as count FROM vt12 ORDER BY ((((vt12.c0)>=(vt12.c0))) NOTNULL)  NULLS FIRST, ((((vt12.c0)>>(vt12.c0))) BETWEEN (((vt12.c0) NOT BETWEEN (vt12.c0) AND (vt12.c0))) AND (((((((((vt12.c0)AND(vt12.c0)))AND(vt12.c0)))OR(vt12.c0)))AND(vt12.c0))))  NULLS FIRST, vt12.c0 ASC);
SELECT * FROM vt12 WHERE (TRIM(DISTINCT (NOT (vt12.c0)), ((vt12.c0)IS(vt12.c0)))) ORDER BY ((((vt12.c0)>=(vt12.c0))) NOTNULL)  NULLS FIRST, ((((vt12.c0)>>(vt12.c0))) BETWEEN (((vt12.c0) NOT BETWEEN (vt12.c0) AND (vt12.c0))) AND (((((((((vt12.c0)AND(vt12.c0)))AND(vt12.c0)))OR(vt12.c0)))AND(vt12.c0))))  NULLS FIRST, vt12.c0 ASC;
SELECT COUNT(*) FROM t0, rt0 WHERE (((t0.c2 IN ()) IN ())) ORDER BY CAST('589566176' AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c2 IN ()) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST('589566176' AS NUMERIC) ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE (((t0.c2 IN ()) IN ())) ORDER BY CAST('589566176' AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c2 IN ()) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST('589566176' AS NUMERIC) ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE (((t0.c2 IN ()) IN ())) ORDER BY CAST('589566176' AS NUMERIC) ASC;
SELECT ALL * FROM vt12, t0 WHERE ((NOT (((t0.c0) NOT BETWEEN (vt12.c0) AND (t0.c0))))) ORDER BY ((((((t0.c2)OR(t0.c0)))AND(t0.c1)))OR(((((((((vt12.c0)OR(t0.c2)))AND(NULL)))OR(vt12.c0)))AND(t0.c0)))) ASC  NULLS LAST, ((((((((TYPEOF(vt12.c0))OR((((t0.c1))>((vt12.c0))))))OR(LIKELY(DISTINCT t0.c1))))OR((NOT (NULL)))))OR(((((t0.c1)AND(vt12.c0)))AND(vt12.c0)))) DESC, 0.8026517139519049 DESC  NULLS LAST, (~ ((NOT (t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c0) NOT BETWEEN (vt12.c0) AND (t0.c0))))) IS TRUE)  as count FROM vt12, t0 ORDER BY ((((((t0.c2)OR(t0.c0)))AND(t0.c1)))OR(((((((((vt12.c0)OR(t0.c2)))AND(NULL)))OR(vt12.c0)))AND(t0.c0)))) ASC  NULLS LAST, ((((((((TYPEOF(vt12.c0))OR((((t0.c1))>((vt12.c0))))))OR(LIKELY(DISTINCT t0.c1))))OR((NOT (NULL)))))OR(((((t0.c1)AND(vt12.c0)))AND(vt12.c0)))) DESC, 0.8026517139519049 DESC  NULLS LAST, (~ ((NOT (t0.c0))))  NULLS LAST);
SELECT ALL * FROM vt12, t0 WHERE ((NOT (((t0.c0) NOT BETWEEN (vt12.c0) AND (t0.c0))))) ORDER BY ((((((t0.c2)OR(t0.c0)))AND(t0.c1)))OR(((((((((vt12.c0)OR(t0.c2)))AND(NULL)))OR(vt12.c0)))AND(t0.c0)))) ASC  NULLS LAST, ((((((((TYPEOF(vt12.c0))OR((((t0.c1))>((vt12.c0))))))OR(LIKELY(DISTINCT t0.c1))))OR((NOT (NULL)))))OR(((((t0.c1)AND(vt12.c0)))AND(vt12.c0)))) DESC, 0.8026517139519049 DESC  NULLS LAST, (~ ((NOT (t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c0) NOT BETWEEN (vt12.c0) AND (t0.c0))))) IS TRUE)  as count FROM vt12, t0 ORDER BY ((((((t0.c2)OR(t0.c0)))AND(t0.c1)))OR(((((((((vt12.c0)OR(t0.c2)))AND(NULL)))OR(vt12.c0)))AND(t0.c0)))) ASC  NULLS LAST, ((((((((TYPEOF(vt12.c0))OR((((t0.c1))>((vt12.c0))))))OR(LIKELY(DISTINCT t0.c1))))OR((NOT (NULL)))))OR(((((t0.c1)AND(vt12.c0)))AND(vt12.c0)))) DESC, 0.8026517139519049 DESC  NULLS LAST, (~ ((NOT (t0.c0))))  NULLS LAST);
SELECT ALL * FROM vt12, t0 WHERE ((NOT (((t0.c0) NOT BETWEEN (vt12.c0) AND (t0.c0))))) ORDER BY ((((((t0.c2)OR(t0.c0)))AND(t0.c1)))OR(((((((((vt12.c0)OR(t0.c2)))AND(NULL)))OR(vt12.c0)))AND(t0.c0)))) ASC  NULLS LAST, ((((((((TYPEOF(vt12.c0))OR((((t0.c1))>((vt12.c0))))))OR(LIKELY(DISTINCT t0.c1))))OR((NOT (NULL)))))OR(((((t0.c1)AND(vt12.c0)))AND(vt12.c0)))) DESC, 0.8026517139519049 DESC  NULLS LAST, (~ ((NOT (t0.c0))))  NULLS LAST;
SELECT ALL * FROM vt12, t0 FULL OUTER JOIN vt0 ON CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE INNER JOIN rt0 ON rt0.c3 WHERE (((((((((((NULL)OR(vt12.c0)))AND(t0.c2)))OR(vt0.c0)))OR(rt0.c1))) NOT BETWEEN (((rt0.c0)||(rt0.c3))) AND (CAST(vt0.c0 AS NUMERIC)))) ORDER BY CASE (((t0.c1))!=((vt12.c0)))  WHEN (NOT (rt0.c3)) THEN rt0.c3 WHEN ((vt12.c0)GLOB(NULL)) THEN 'z4e3p' WHEN ((t0.c1) IS FALSE) THEN CAST(t0.c2 AS TEXT) END, ((CASE rt0.c0  WHEN rt0.c1 THEN t0.c2 END) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((NULL)OR(vt12.c0)))AND(t0.c2)))OR(vt0.c0)))OR(rt0.c1))) NOT BETWEEN (((rt0.c0)||(rt0.c3))) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt12, t0 FULL OUTER JOIN vt0 ON CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE INNER JOIN rt0 ON rt0.c3 ORDER BY CASE (((t0.c1))<>((vt12.c0)))  WHEN (NOT (rt0.c3)) THEN rt0.c3 WHEN ((vt12.c0)GLOB(NULL)) THEN 'z4e3p' WHEN ((t0.c1) IS FALSE) THEN CAST(t0.c2 AS TEXT) END, ((CASE rt0.c0  WHEN rt0.c1 THEN t0.c2 END) ISNULL) ASC);
SELECT ALL * FROM vt12, t0 FULL OUTER JOIN vt0 ON CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE INNER JOIN rt0 ON rt0.c3 WHERE (((((((((((NULL)OR(vt12.c0)))AND(t0.c2)))OR(vt0.c0)))OR(rt0.c1))) NOT BETWEEN (((rt0.c0)||(rt0.c3))) AND (CAST(vt0.c0 AS NUMERIC)))) ORDER BY CASE (((t0.c1))!=((vt12.c0)))  WHEN (NOT (rt0.c3)) THEN rt0.c3 WHEN ((vt12.c0)GLOB(NULL)) THEN 'z4e3p' WHEN ((t0.c1) IS FALSE) THEN CAST(t0.c2 AS TEXT) END, ((CASE rt0.c0  WHEN rt0.c1 THEN t0.c2 END) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((NULL)OR(vt12.c0)))AND(t0.c2)))OR(vt0.c0)))OR(rt0.c1))) NOT BETWEEN (((rt0.c0)||(rt0.c3))) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt12, t0 FULL OUTER JOIN vt0 ON CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE INNER JOIN rt0 ON rt0.c3 ORDER BY CASE (((t0.c1))<>((vt12.c0)))  WHEN (NOT (rt0.c3)) THEN rt0.c3 WHEN ((vt12.c0)GLOB(NULL)) THEN 'z4e3p' WHEN ((t0.c1) IS FALSE) THEN CAST(t0.c2 AS TEXT) END, ((CASE rt0.c0  WHEN rt0.c1 THEN t0.c2 END) ISNULL) ASC);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON ((((vt0.c0)OR(t0.c2)))AND(rt0.c0)) COLLATE BINARY INNER JOIN vt0 ON CASE WHEN CAST(t0.c0 AS REAL) THEN ABS(6.49219691E8) ELSE rt0.c2 COLLATE RTRIM END LEFT OUTER JOIN vt12 ON (((rt0.c2)) BETWEEN ((PRINTF(t0.c1, t0.c1, rt0.c4))) AND (((((NULL)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) WHERE ('5]');
SELECT SUM(count) FROM (SELECT ALL (('5]') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((vt0.c0)OR(t0.c2)))AND(rt0.c0)) COLLATE BINARY INNER JOIN vt0 ON CASE WHEN CAST(t0.c0 AS REAL) THEN ABS(6.49219691E8) ELSE rt0.c2 COLLATE RTRIM END LEFT OUTER JOIN vt12 ON (((rt0.c2)) BETWEEN ((PRINTF(t0.c1, t0.c1, rt0.c4))) AND (((((NULL)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON ((((vt0.c0)OR(t0.c2)))AND(rt0.c0)) COLLATE BINARY INNER JOIN vt0 ON CASE WHEN CAST(t0.c0 AS REAL) THEN ABS(6.49219691E8) ELSE rt0.c2 COLLATE RTRIM END LEFT OUTER JOIN vt12 ON (((rt0.c2)) BETWEEN ((PRINTF(t0.c1, t0.c1, rt0.c4))) AND (((((NULL)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) WHERE ('5]');
SELECT SUM(count) FROM (SELECT ALL (('5]') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((vt0.c0)OR(t0.c2)))AND(rt0.c0)) COLLATE BINARY INNER JOIN vt0 ON CASE WHEN CAST(t0.c0 AS REAL) THEN ABS(6.49219691E8) ELSE rt0.c2 COLLATE RTRIM END LEFT OUTER JOIN vt12 ON (((rt0.c2)) BETWEEN ((PRINTF(t0.c1, t0.c1, rt0.c4))) AND (((((NULL)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))));
SELECT * FROM rt0, vt0 WHERE ((((rt0.c3 IN ()))IS((+ (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ()))IS((+ (rt0.c3))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c3 IN ()))IS((+ (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ()))IS((+ (rt0.c3))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c3 IN ()))IS((+ (rt0.c3)))));
SELECT ALL COUNT(*) FROM vt12 RIGHT OUTER JOIN t0 ON (((CASE WHEN t0.c1 THEN vt12.c0 END))>((ABS(DISTINCT vt12.c0)))) INNER JOIN vt0 ON NULLIF(DISTINCT ((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)), NULL) WHERE (((((t0.c1) BETWEEN (t0.c2) AND (t0.c0)))LIKE(t0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) BETWEEN (t0.c2) AND (t0.c0)))LIKE(t0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt12 RIGHT OUTER JOIN t0 ON (((CASE WHEN t0.c1 THEN vt12.c0 END))>((ABS(DISTINCT vt12.c0)))) INNER JOIN vt0 ON NULLIF(DISTINCT ((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)), NULL));
SELECT ALL COUNT(*) FROM vt12 RIGHT OUTER JOIN t0 ON (((CASE WHEN t0.c1 THEN vt12.c0 END))>((ABS(DISTINCT vt12.c0)))) INNER JOIN vt0 ON NULLIF(DISTINCT ((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)), NULL) WHERE (((((t0.c1) BETWEEN (t0.c2) AND (t0.c0)))LIKE(t0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) BETWEEN (t0.c2) AND (t0.c0)))LIKE(t0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt12 RIGHT OUTER JOIN t0 ON (((CASE WHEN t0.c1 THEN vt12.c0 END))>((ABS(DISTINCT vt12.c0)))) INNER JOIN vt0 ON NULLIF(DISTINCT ((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)), NULL));
SELECT ALL COUNT(*) FROM vt12 RIGHT OUTER JOIN t0 ON (((CASE WHEN t0.c1 THEN vt12.c0 END))>((ABS(DISTINCT vt12.c0)))) INNER JOIN vt0 ON NULLIF(DISTINCT ((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)), NULL) WHERE (((((t0.c1) BETWEEN (t0.c2) AND (t0.c0)))LIKE(t0.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt12, rt0, t0 WHERE ((((t0.c0)) BETWEEN ((t0.c0)) AND ((((t0.c0) BETWEEN (vt12.c0) AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((t0.c0)) AND ((((t0.c0) BETWEEN (vt12.c0) AND (rt0.c1)))))) IS TRUE)  as count FROM vt12, rt0, t0);
SELECT ALL COUNT(*) FROM vt12, rt0, t0 WHERE ((((t0.c0)) BETWEEN ((t0.c0)) AND ((((t0.c0) BETWEEN (vt12.c0) AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((t0.c0)) AND ((((t0.c0) BETWEEN (vt12.c0) AND (rt0.c1)))))) IS TRUE)  as count FROM vt12, rt0, t0);
SELECT ALL COUNT(*) FROM vt12, rt0, t0 WHERE ((((t0.c0)) BETWEEN ((t0.c0)) AND ((((t0.c0) BETWEEN (vt12.c0) AND (rt0.c1))))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (rt0.c4 COLLATE NOCASE) ORDER BY (((((t0.c0)) BETWEEN ((rt0.c3)) AND ((t0.c1))))GLOB(CASE x''  WHEN rt0.c1 THEN t0.c1 WHEN t0.c2 THEN rt0.c1 WHEN rt0.c4 THEN t0.c1 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN t0.c1 END)) DESC, ((((t0.c0)AND(t0.c0)))/(((rt0.c3)==(t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4 COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((((t0.c0)) BETWEEN ((rt0.c3)) AND ((t0.c1))))GLOB(CASE x''  WHEN rt0.c1 THEN t0.c1 WHEN t0.c2 THEN rt0.c1 WHEN rt0.c4 THEN t0.c1 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN t0.c1 END)) DESC, ((((t0.c0)AND(t0.c0)))/(((rt0.c3)==(t0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (rt0.c4 COLLATE NOCASE) ORDER BY (((((t0.c0)) BETWEEN ((rt0.c3)) AND ((t0.c1))))GLOB(CASE x''  WHEN rt0.c1 THEN t0.c1 WHEN t0.c2 THEN rt0.c1 WHEN rt0.c4 THEN t0.c1 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN t0.c1 END)) DESC, ((((t0.c0)AND(t0.c0)))/(((rt0.c3)==(t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4 COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((((t0.c0)) BETWEEN ((rt0.c3)) AND ((t0.c1))))GLOB(CASE x''  WHEN rt0.c1 THEN t0.c1 WHEN t0.c2 THEN rt0.c1 WHEN rt0.c4 THEN t0.c1 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN t0.c1 END)) DESC, ((((t0.c0)AND(t0.c0)))/(((rt0.c3)==(t0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (rt0.c4 COLLATE NOCASE) ORDER BY (((((t0.c0)) BETWEEN ((rt0.c3)) AND ((t0.c1))))GLOB(CASE x''  WHEN rt0.c1 THEN t0.c1 WHEN t0.c2 THEN rt0.c1 WHEN rt0.c4 THEN t0.c1 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN t0.c1 END)) DESC, ((((t0.c0)AND(t0.c0)))/(((rt0.c3)==(t0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((json_remove(rt0.c2, rt0.c2, rt0.c0, rt0.c2)) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4))) AND ((+ (x'0ae1'))))) ORDER BY rt0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json_remove(rt0.c2, rt0.c2, rt0.c0, rt0.c2)) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4))) AND ((+ (x'0ae1'))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((json_remove(rt0.c2, rt0.c2, rt0.c0, rt0.c2)) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4))) AND ((+ (x'0ae1'))))) ORDER BY rt0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json_remove(rt0.c2, rt0.c2, rt0.c0, rt0.c2)) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4))) AND ((+ (x'0ae1'))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((json_remove(rt0.c2, rt0.c2, rt0.c0, rt0.c2)) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4))) AND ((+ (x'0ae1'))))) ORDER BY rt0.c2 ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt12, vt0 WHERE ((((('')-(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((('')-(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt12, vt0);
SELECT COUNT(*) FROM vt12, vt0 WHERE ((((('')-(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((('')-(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt12, vt0);
SELECT COUNT(*) FROM vt12, vt0 WHERE ((((('')-(vt0.c0))) NOTNULL));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN IFNULL(DISTINCT vt0.c0, rt0.c3) THEN ((rt0.c2) ISNULL) END WHERE (CASE CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 ELSE '-1346399981' END  WHEN ((x'f887') NOT BETWEEN (rt0.c0) AND (rt0.c4)) THEN (rt0.c1 IN (rt0.c1)) ELSE ((vt0.c0) BETWEEN (rt0.c4) AND (vt0.c0)) END) ORDER BY ((NOT (rt0.c4)) IN (CASE rt0.c4  WHEN rt0.c3 THEN vt0.c0 END, ((rt0.c2) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 ELSE '-1346399981' END  WHEN ((x'f887') NOT BETWEEN (rt0.c0) AND (rt0.c4)) THEN (rt0.c1 IN (rt0.c1)) ELSE ((vt0.c0) BETWEEN (rt0.c4) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN IFNULL(DISTINCT vt0.c0, rt0.c3) THEN ((rt0.c2) ISNULL) END ORDER BY ((NOT (rt0.c4)) IN (CASE rt0.c4  WHEN rt0.c3 THEN vt0.c0 END, ((rt0.c2) NOT NULL))) ASC);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN IFNULL(DISTINCT vt0.c0, rt0.c3) THEN ((rt0.c2) ISNULL) END WHERE (CASE CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 ELSE '-1346399981' END  WHEN ((x'f887') NOT BETWEEN (rt0.c0) AND (rt0.c4)) THEN (rt0.c1 IN (rt0.c1)) ELSE ((vt0.c0) BETWEEN (rt0.c4) AND (vt0.c0)) END) ORDER BY ((NOT (rt0.c4)) IN (CASE rt0.c4  WHEN rt0.c3 THEN vt0.c0 END, ((rt0.c2) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 ELSE '-1346399981' END  WHEN ((x'f887') NOT BETWEEN (rt0.c0) AND (rt0.c4)) THEN (rt0.c1 IN (rt0.c1)) ELSE ((vt0.c0) BETWEEN (rt0.c4) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN IFNULL(DISTINCT vt0.c0, rt0.c3) THEN ((rt0.c2) ISNULL) END ORDER BY ((NOT (rt0.c4)) IN (CASE rt0.c4  WHEN rt0.c3 THEN vt0.c0 END, ((rt0.c2) NOT NULL))) ASC);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN IFNULL(DISTINCT vt0.c0, rt0.c3) THEN ((rt0.c2) ISNULL) END WHERE (CASE CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 ELSE '-1346399981' END  WHEN ((x'f887') NOT BETWEEN (rt0.c0) AND (rt0.c4)) THEN (rt0.c1 IN (rt0.c1)) ELSE ((vt0.c0) BETWEEN (rt0.c4) AND (vt0.c0)) END) ORDER BY ((NOT (rt0.c4)) IN (CASE rt0.c4  WHEN rt0.c3 THEN vt0.c0 END, ((rt0.c2) NOT NULL))) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c4 COLLATE NOCASE)==(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((rt0.c4 COLLATE NOCASE)==(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c4 COLLATE NOCASE)==(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((rt0.c4 COLLATE NOCASE)==(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c4 COLLATE NOCASE)==(rt0.c1)));
SELECT COUNT(*) FROM vt12 WHERE ((((vt12.c0) IS TRUE) IN ())) ORDER BY ((vt12.c0 COLLATE BINARY)OR('-1137516426'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt12.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt12 ORDER BY ((vt12.c0 COLLATE BINARY)OR('-1137516426'))  NULLS FIRST);
SELECT COUNT(*) FROM vt12 WHERE ((((vt12.c0) IS TRUE) IN ())) ORDER BY ((vt12.c0 COLLATE BINARY)OR('-1137516426'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt12.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt12 ORDER BY ((vt12.c0 COLLATE BINARY)OR('-1137516426'))  NULLS FIRST);
SELECT COUNT(*) FROM vt12 WHERE ((((vt12.c0) IS TRUE) IN ())) ORDER BY ((vt12.c0 COLLATE BINARY)OR('-1137516426'))  NULLS FIRST;
