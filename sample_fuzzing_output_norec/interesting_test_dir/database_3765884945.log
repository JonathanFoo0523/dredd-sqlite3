-- Time: 2024/06/09 16:18:09
-- Database: database45
-- Database version: 3.40.0
-- seed value: 3765884945
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 BLOB ); -- 0ms;
UPDATE OR REPLACE rt0 SET (c2)=(x''); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
VACUUM temp; -- 0ms;
VACUUM; -- 1ms;
ANALYZE temp; -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (x''); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, 0.09290409958944701, 0.5820901295349389, 0.09290409958944701); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c2) VALUES (x'', 0.5820901295349389); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1) VALUES (''); -- 0ms;
PRAGMA main.automatic_index = true; -- 0ms;
INSERT OR REPLACE INTO rt0(c0) VALUES (0x8bf5f4c); -- 1ms;
COMMIT; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c2, c3) VALUES ('0.5820901295349389', 0.8917690732977163, '146759500'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c2) VALUES (1.467595E8, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2, c3, c0) VALUES (NULL, '', '', x''), (x'', 0.4395178008409131, x'', '146759500'), (0.7585340899781873, x'', NULL, '<0iAfqAWg'); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c1, c2) VALUES (0.8973554419819091, 0.4578262360560881, '2136055215'); -- 0ms;
INSERT OR FAIL INTO rt0 VALUES (x'b2b4', x'c70b', NULL, 0.46303959489714863), (0Xffffffff80d84f61, -2.133307551E9, NULL, x''), (2.136055215E9, 'Xc', NULL, -2133307551); -- 0ms;
INSERT OR FAIL INTO rt0(c0, c2) VALUES ('0.46303959489714863', 2136055215), (NULL, x''), ('2136055215', '-1953416209'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c3, c1) VALUES (0Xffffffffd7f397dc, -1710339897); -- 8ms;
PRAGMA shrink_memory; -- 0ms;
UPDATE OR ABORT rt0 SET (c0)=('-1028125847') WHERE ((CAST(rt0.c3 AS BLOB))<(CASE rt0.c0  WHEN rt0.c1 THEN NULL WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END)); -- 0ms;
PRAGMA soft_heap_limit; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE rt0 SET (c0, c3)=(x'57ce', x'') WHERE (((rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((((((x'')OR(x'')))AND(rt0.c1))))); -- 1ms;
UPDATE rt0 SET (c2)=(NULL) WHERE CAST(((rt0.c2) ISNULL) AS INTEGER); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR FAIL rt0 SET c1='-604998852'; -- 19ms;
CREATE TEMP VIEW v0(c0) AS SELECT DISTINCT rt0.c1 FROM rt0; -- 0ms;
UPDATE rt0 SET (c3)=('') WHERE CASE WHEN CASE WHEN rt0.c0 THEN rt0.c3 END THEN ((rt0.c3)*(rt0.c0)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END THEN ((rt0.c3)+(rt0.c2)) WHEN ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c1)) THEN '3B\nP' END; -- 0ms;
END; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA incremental_vacuum(915087482); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c2, c0) VALUES (NULL, 0.3920663861826623, x''); -- 0ms;
PRAGMA mmap_size = 4201264879692448371; -- 0ms;
PRAGMA cell_size_check; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (NULL, 0.05189393983594304), (0.4240103283986689, NULL), ('W', ''); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(0.6168921247630986); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
INSERT OR REPLACE INTO rt0(c0, c3) VALUES (0.7516049950144866, '-1906576224'); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0.8917690732977163, c3=x'' WHERE (((rt0.c0 IN ()))+(((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))); -- 0ms;
PRAGMA temp.threads; -- 0ms;
ANALYZE main; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=('''<p줱䠉9'''); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (x''), (-2.133307551E9), (x'66bc'); -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES (x'', 0x4817c931, 0.5902444093345586, ''), (0.6420927861944834, 1859103616, x'', ''), (NULL, NULL, 0x6b2fd01a, -1.298642935E9); -- 1ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES ('912751952', x''); -- 4ms;
PRAGMA temp.auto_vacuum = INCREMENTAL; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c2, c3, c0) VALUES (0.3920663861826623, '-1101723496', x'', 'gYFb임K1a?'); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c1, c2, c3) VALUES (NULL, 0X697395b5, x'ba88191a'), (x'', '-688477508', NULL), (x'', '-Infinity', '0.4240103283986689'); -- 0ms;
INSERT OR ABORT INTO rt0(c1, c0, c3, c2) VALUES ('-2133307551', 0X54193e7d, NULL, NULL), (x'ecea', 0.1485870186167585, x'', '1612144111'), (0Xffffffffbe173384, 0.7679644656858177, NULL, '915087482'); -- 0ms;
INSERT OR IGNORE INTO rt0(c3) VALUES (NULL), (x''), ('-1906576224'); -- 0ms;
REINDEX; -- 0ms;
INSERT OR FAIL INTO rt0(c0) VALUES ('0.05189393983594304'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2, c0) VALUES (NULL, 0.1485870186167585, 0.40337419590257373), ('&M]+&t*[>', x'', NULL), (x'', '-879041687', ''), (0.40670149165683545, x'c9e2', -671901732), (x'', 'Q', 0Xffffffffd8251640), (NULL, '1769182645', NULL), (NULL, '-1028125847', '1017455649'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE rt0 SET c2=x''; -- 2ms;
UPDATE rt0 SET (c1, c2)=('佡%!uk(~z', 0.7585340899781873); -- 0ms;
UPDATE OR ABORT rt0 SET (c1)=(x''); -- 0ms;
UPDATE OR REPLACE rt0 SET c1=1.467595E8, c3=0X4953dfd9 WHERE CAST(CASE WHEN rt0.c2 THEN rt0.c0 END AS REAL); -- 0ms;
UPDATE OR IGNORE rt0 SET c3='1964496389', c2=x'' WHERE 1859103616; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=NULL, c2='<0iAfqAWg'; -- 5ms;
PRAGMA main.shrink_memory; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=''; -- 1ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
PRAGMA busy_timeout = 10000; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.auto_vacuum = INCREMENTAL; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA automatic_index; -- 0ms;
INSERT OR IGNORE INTO rt0(c3) VALUES (NULL); -- 2ms;
INSERT OR ABORT INTO rt0(c2, c1) VALUES (x'', '468381116'); -- 0ms;
INSERT OR FAIL INTO rt0(c0, c1, c3) VALUES (0.9586328403545031, NULL, x''); -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES (NULL, NULL, 'O', 1769182645); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (0.047769775205951936); -- 17ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (x''); -- 0ms;
PRAGMA temp.soft_heap_limit = 0; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0) VALUES ('468381116'); -- 0ms;
UPDATE rt0 SET c1='-1906576224'; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2) VALUES (NULL), (NULL), (0.25627805252523805); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (NULL); -- 0ms;
ANALYZE sqlite_master; -- 1ms;
UPDATE OR IGNORE rt0 SET (c0, c1, c3)=(0.05365143109329762, x'b3645878', x'') WHERE ((((rt0.c3) ISNULL))OR(CAST(rt0.c0 AS TEXT))); -- 0ms;
PRAGMA recursive_triggers; -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES ('915087482'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2, c3) VALUES (0xffffffffd8251640, 0.9089005640840512, ''); -- 0ms;
UPDATE OR IGNORE rt0 SET c2='BiVc␡' WHERE CASE rt0.c1  WHEN (((rt0.c2))=(('覟w㫱'))) THEN '1851990349' ELSE (rt0.c2 IN ()) END; -- 1ms;
INSERT OR IGNORE INTO rt0(c3) VALUES (x'1ddf4f64'); -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES (NULL, 0.8088646236306388, x'192f', NULL), ('-879041687', 0.18403679317129473, x'', '0.6168921247630986'), ('-1651458875', x'', 0.047769775205951936, 0.7599101819737512); -- 1ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (NULL); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 1ms;
INSERT OR ABORT INTO vt0(c0) VALUES (0.9830674795774631); -- 0ms;
COMMIT; -- 5ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM v0 CROSS JOIN vt0 ON v0.c0 WHERE ((((vt0.c0)) BETWEEN ((json_valid(v0.c0))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (~ (((v0.c0)+(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((json_valid(v0.c0))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON v0.c0 ORDER BY (~ (((v0.c0)+(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM v0 CROSS JOIN vt0 ON v0.c0 WHERE ((((vt0.c0)) BETWEEN ((json_valid(v0.c0))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (~ (((v0.c0)+(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((json_valid(v0.c0))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON v0.c0 ORDER BY (~ (((v0.c0)+(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM v0 CROSS JOIN vt0 ON v0.c0 WHERE ((((vt0.c0)) BETWEEN ((json_valid(v0.c0))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (~ (((v0.c0)+(vt0.c0)))) ASC  NULLS LAST;
SELECT * FROM v0, vt0 WHERE ((((~ (vt0.c0))) BETWEEN ((((v0.c0, vt0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c0, x'', v0.c0)))) AND ((((0.17736152660517013))<>((vt0.c0)))))) ORDER BY ((CASE x''  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0))) BETWEEN ((((v0.c0, vt0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c0, x'', v0.c0)))) AND ((((0.17736152660517013))<>((vt0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CASE x''  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) NOTNULL) ASC);
SELECT * FROM v0, vt0 WHERE ((((~ (vt0.c0))) BETWEEN ((((v0.c0, vt0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c0, x'', v0.c0)))) AND ((((0.17736152660517013))<>((vt0.c0)))))) ORDER BY ((CASE x''  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0))) BETWEEN ((((v0.c0, vt0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c0, x'', v0.c0)))) AND ((((0.17736152660517013))<>((vt0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CASE x''  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) NOTNULL) ASC);
SELECT * FROM v0, vt0 WHERE ((((~ (vt0.c0))) BETWEEN ((((v0.c0, vt0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c0, x'', v0.c0)))) AND ((((0.17736152660517013))<>((vt0.c0)))))) ORDER BY ((CASE x''  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) NOTNULL) ASC;
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON (vt0.c0 IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))) WHERE (CHAR(vt0.c0 COLLATE NOCASE, v0.c0 COLLATE BINARY, (- (v0.c0))));
SELECT SUM(count) FROM (SELECT ((CHAR(vt0.c0 COLLATE NOCASE, v0.c0 COLLATE BINARY, (- (v0.c0)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (vt0.c0 IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON (vt0.c0 IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))) WHERE (CHAR(vt0.c0 COLLATE NOCASE, v0.c0 COLLATE BINARY, (- (v0.c0))));
SELECT SUM(count) FROM (SELECT ((CHAR(vt0.c0 COLLATE NOCASE, v0.c0 COLLATE BINARY, (- (v0.c0)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (vt0.c0 IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON (vt0.c0 IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))) WHERE (CHAR(vt0.c0 COLLATE NOCASE, v0.c0 COLLATE BINARY, (- (v0.c0))));
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c3) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c3) ISNULL) END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c3) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c3) ISNULL) END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c3) ISNULL) END);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((rt0.c2)AND(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((rt0.c2)AND(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((rt0.c2)AND(vt0.c0))) NOT NULL));
SELECT ALL * FROM v0, vt0 WHERE ((((((((v0.c0)AND(v0.c0)))AND(v0.c0))))<((v0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0)AND(v0.c0)))AND(v0.c0))))<((v0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((((((v0.c0)AND(v0.c0)))AND(v0.c0))))<((v0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0)AND(v0.c0)))AND(v0.c0))))<((v0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((((((v0.c0)AND(v0.c0)))AND(v0.c0))))<((v0.c0 COLLATE NOCASE))));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON SQLITE_SOURCE_ID() RIGHT OUTER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN 0.9089005640840512 ELSE rt0.c1 END)GLOB(((rt0.c1) IS FALSE))) WHERE (CAST(((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON SQLITE_SOURCE_ID() RIGHT OUTER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN 0.9089005640840512 ELSE rt0.c1 END)GLOB(((rt0.c1) IS FALSE))));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON SQLITE_SOURCE_ID() RIGHT OUTER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN 0.9089005640840512 ELSE rt0.c1 END)GLOB(((rt0.c1) IS FALSE))) WHERE (CAST(((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON SQLITE_SOURCE_ID() RIGHT OUTER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN 0.9089005640840512 ELSE rt0.c1 END)GLOB(((rt0.c1) IS FALSE))));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON SQLITE_SOURCE_ID() RIGHT OUTER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN 0.9089005640840512 ELSE rt0.c1 END)GLOB(((rt0.c1) IS FALSE))) WHERE (CAST(((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)) AS REAL));
SELECT COUNT(*) FROM v0, rt0 WHERE ((((~ (v0.c0)))*(CASE WHEN rt0.c2 THEN rt0.c2 END))) ORDER BY (((rt0.c0 IN ()))OR(v0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0)))*(CASE WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c0 IN ()))OR(v0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((~ (v0.c0)))*(CASE WHEN rt0.c2 THEN rt0.c2 END))) ORDER BY (((rt0.c0 IN ()))OR(v0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0)))*(CASE WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c0 IN ()))OR(v0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((~ (v0.c0)))*(CASE WHEN rt0.c2 THEN rt0.c2 END))) ORDER BY (((rt0.c0 IN ()))OR(v0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT * FROM v0 WHERE ((((- (v0.c0))) NOT BETWEEN (((v0.c0)<(v0.c0))) AND (v0.c0 COLLATE RTRIM))) ORDER BY (NOT ((- (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((- (v0.c0))) NOT BETWEEN (((v0.c0)<(v0.c0))) AND (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY (NOT ((- (v0.c0)))) ASC);
SELECT * FROM v0 WHERE ((((- (v0.c0))) NOT BETWEEN (((v0.c0)<(v0.c0))) AND (v0.c0 COLLATE RTRIM))) ORDER BY (NOT ((- (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((- (v0.c0))) NOT BETWEEN (((v0.c0)<(v0.c0))) AND (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY (NOT ((- (v0.c0)))) ASC);
SELECT * FROM v0 WHERE ((((- (v0.c0))) NOT BETWEEN (((v0.c0)<(v0.c0))) AND (v0.c0 COLLATE RTRIM))) ORDER BY (NOT ((- (v0.c0)))) ASC;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (CAST(rt0.c2 AS REAL) IN ()) WHERE (CASE (~ (rt0.c0))  WHEN (rt0.c0 IN ()) THEN (~ (rt0.c0)) END) ORDER BY NULLIF(DISTINCT '592959804', ((rt0.c0)<=(vt0.c0))) ASC  NULLS FIRST, (((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT BETWEEN ((((rt0.c1))<>((rt0.c0)))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (rt0.c0))  WHEN (rt0.c0 IN ()) THEN (~ (rt0.c0)) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (CAST(rt0.c2 AS REAL) IN ()) ORDER BY NULLIF(DISTINCT '592959804', ((rt0.c0)<=(vt0.c0))) ASC  NULLS FIRST, (((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT BETWEEN ((((rt0.c1))!=((rt0.c0)))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (CAST(rt0.c2 AS REAL) IN ()) WHERE (CASE (~ (rt0.c0))  WHEN (rt0.c0 IN ()) THEN (~ (rt0.c0)) END) ORDER BY NULLIF(DISTINCT '592959804', ((rt0.c0)<=(vt0.c0))) ASC  NULLS FIRST, (((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT BETWEEN ((((rt0.c1))<>((rt0.c0)))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (rt0.c0))  WHEN (rt0.c0 IN ()) THEN (~ (rt0.c0)) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (CAST(rt0.c2 AS REAL) IN ()) ORDER BY NULLIF(DISTINCT '592959804', ((rt0.c0)<=(vt0.c0))) ASC  NULLS FIRST, (((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT BETWEEN ((((rt0.c1))!=((rt0.c0)))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (CAST(rt0.c2 AS REAL) IN ()) WHERE (CASE (~ (rt0.c0))  WHEN (rt0.c0 IN ()) THEN (~ (rt0.c0)) END) ORDER BY NULLIF(DISTINCT '592959804', ((rt0.c0)<=(vt0.c0))) ASC  NULLS FIRST, (((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT BETWEEN ((((rt0.c1))<>((rt0.c0)))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (((((vt0.c0)OR(v0.c0))) NOT BETWEEN ((v0.c0 IN (v0.c0))) AND (CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(v0.c0))) NOT BETWEEN ((v0.c0 IN (v0.c0))) AND (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (((((vt0.c0)OR(v0.c0))) NOT BETWEEN ((v0.c0 IN (v0.c0))) AND (CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(v0.c0))) NOT BETWEEN ((v0.c0 IN (v0.c0))) AND (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (((((vt0.c0)OR(v0.c0))) NOT BETWEEN ((v0.c0 IN (v0.c0))) AND (CAST(v0.c0 AS REAL))));
SELECT * FROM vt0, v0 WHERE (((CASE WHEN v0.c0 THEN vt0.c0 END)*((vt0.c0 IN (vt0.c0))))) ORDER BY (((('U*')IS NOT(vt0.c0)))AND(((vt0.c0)/(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN vt0.c0 END)*((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((('U*')IS NOT(vt0.c0)))AND(((vt0.c0)/(v0.c0)))));
SELECT * FROM vt0, v0 WHERE (((CASE WHEN v0.c0 THEN vt0.c0 END)*((vt0.c0 IN (vt0.c0))))) ORDER BY (((('U*')IS NOT(vt0.c0)))AND(((vt0.c0)/(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN vt0.c0 END)*((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((('U*')IS NOT(vt0.c0)))AND(((vt0.c0)/(v0.c0)))));
SELECT * FROM vt0, v0 WHERE (((CASE WHEN v0.c0 THEN vt0.c0 END)*((vt0.c0 IN (vt0.c0))))) ORDER BY (((('U*')IS NOT(vt0.c0)))AND(((vt0.c0)/(v0.c0))));
SELECT * FROM vt0 WHERE (HEX(DISTINCT json_extract(vt0.c0, 0.6721396963651145)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT json_extract(vt0.c0, 0.6721396963651145))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (HEX(DISTINCT json_extract(vt0.c0, 0.6721396963651145)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT json_extract(vt0.c0, 0.6721396963651145))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((NOT (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((NOT (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((NOT (CAST(vt0.c0 AS TEXT))));
SELECT * FROM rt0, v0, vt0 WHERE (((vt0.c0)IS(rt0.c1)) COLLATE RTRIM) ORDER BY ((rt0.c0)>=(((((vt0.c0)AND(rt0.c2)))AND(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((rt0.c0)>=(((((vt0.c0)AND(rt0.c2)))AND(rt0.c0)))) ASC);
SELECT * FROM rt0, v0, vt0 WHERE (((vt0.c0)IS(rt0.c1)) COLLATE RTRIM) ORDER BY ((rt0.c0)>=(((((vt0.c0)AND(rt0.c2)))AND(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((rt0.c0)>=(((((vt0.c0)AND(rt0.c2)))AND(rt0.c0)))) ASC);
SELECT * FROM rt0, v0, vt0 WHERE (((vt0.c0)IS(rt0.c1)) COLLATE RTRIM) ORDER BY ((rt0.c0)>=(((((vt0.c0)AND(rt0.c2)))AND(rt0.c0)))) ASC;
SELECT * FROM rt0, vt0, v0 WHERE (((NULL) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS FALSE)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (((NULL) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS FALSE)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (((NULL) IS FALSE));
SELECT * FROM v0 CROSS JOIN rt0 ON (~ (0Xffffffffb6dd40fe)) WHERE (CAST(rt0.c3 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 AS INTEGER)) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (~ (0Xffffffffb6dd40fe)));
SELECT * FROM v0 CROSS JOIN rt0 ON (~ (0Xffffffffb6dd40fe)) WHERE (CAST(rt0.c3 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 AS INTEGER)) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (~ (0Xffffffffb6dd40fe)));
SELECT * FROM v0 CROSS JOIN rt0 ON (~ (0Xffffffffb6dd40fe)) WHERE (CAST(rt0.c3 AS INTEGER));
SELECT ALL * FROM rt0, v0, vt0 WHERE (CASE (((rt0.c0, NULL, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c2, v0.c0, rt0.c0)))  WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN ((rt0.c0) ISNULL) ELSE x'' END) ORDER BY (CASE WHEN rt0.c3 THEN v0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 ELSE v0.c0 END IN (TYPEOF(DISTINCT rt0.c3))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c0, NULL, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c2, v0.c0, rt0.c0)))  WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN ((rt0.c0) ISNULL) ELSE x'' END) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (CASE WHEN rt0.c3 THEN v0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 ELSE v0.c0 END IN (TYPEOF(DISTINCT rt0.c3))) DESC);
SELECT ALL * FROM rt0, v0, vt0 WHERE (CASE (((rt0.c0, NULL, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c2, v0.c0, rt0.c0)))  WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN ((rt0.c0) ISNULL) ELSE x'' END) ORDER BY (CASE WHEN rt0.c3 THEN v0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 ELSE v0.c0 END IN (TYPEOF(DISTINCT rt0.c3))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c0, NULL, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c2, v0.c0, rt0.c0)))  WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN ((rt0.c0) ISNULL) ELSE x'' END) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (CASE WHEN rt0.c3 THEN v0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 ELSE v0.c0 END IN (TYPEOF(DISTINCT rt0.c3))) DESC);
SELECT ALL * FROM rt0, v0, vt0 WHERE (CASE (((rt0.c0, NULL, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c2, v0.c0, rt0.c0)))  WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN ((rt0.c0) ISNULL) ELSE x'' END) ORDER BY (CASE WHEN rt0.c3 THEN v0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 ELSE v0.c0 END IN (TYPEOF(DISTINCT rt0.c3))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((-346242044))==((rt0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((-346242044))=((rt0.c0)))) NOT NULL)) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((-346242044))==((rt0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((-346242044))=((rt0.c0)))) NOT NULL)) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((-346242044))==((rt0.c0)))) NOT NULL));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE ((rt0.c3) NOTNULL)  WHEN ((('-2133307551'))<=((rt0.c0))) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)) WHEN (NOT (rt0.c2)) THEN (((vt0.c0, vt0.c0, rt0.c3))=((rt0.c0, 0.8917690732977163, rt0.c3))) WHEN TOTAL_CHANGES() THEN ((vt0.c0) ISNULL) ELSE ((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)) END) ORDER BY ((((rt0.c1)>=(rt0.c0))) IS FALSE)  NULLS LAST, -1785701271 DESC  NULLS LAST, (NOT (((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c3) NOTNULL)  WHEN ((('-2133307551'))<=((rt0.c0))) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)) WHEN (NOT (rt0.c2)) THEN (((vt0.c0, vt0.c0, rt0.c3))=((rt0.c0, 0.8917690732977163, rt0.c3))) WHEN TOTAL_CHANGES() THEN ((vt0.c0) ISNULL) ELSE ((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c1)>=(rt0.c0))) IS FALSE)  NULLS LAST, -1785701271 DESC  NULLS LAST, (NOT (((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE ((rt0.c3) NOTNULL)  WHEN ((('-2133307551'))<=((rt0.c0))) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)) WHEN (NOT (rt0.c2)) THEN (((vt0.c0, vt0.c0, rt0.c3))=((rt0.c0, 0.8917690732977163, rt0.c3))) WHEN TOTAL_CHANGES() THEN ((vt0.c0) ISNULL) ELSE ((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)) END) ORDER BY ((((rt0.c1)>=(rt0.c0))) IS FALSE)  NULLS LAST, -1785701271 DESC  NULLS LAST, (NOT (((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c3) NOTNULL)  WHEN ((('-2133307551'))<=((rt0.c0))) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)) WHEN (NOT (rt0.c2)) THEN (((vt0.c0, vt0.c0, rt0.c3))=((rt0.c0, 0.8917690732977163, rt0.c3))) WHEN TOTAL_CHANGES() THEN ((vt0.c0) ISNULL) ELSE ((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c1)>=(rt0.c0))) IS FALSE)  NULLS LAST, -1785701271 DESC  NULLS LAST, (NOT (((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((((x'')&(rt0.c0))))>((((rt0.c3)*(vt0.c0)))))) ORDER BY '&m]+&t*[>' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((x'')&(rt0.c0))))>((((rt0.c3)*(vt0.c0)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY '&m]+&t*[>' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((((x'')&(rt0.c0))))>((((rt0.c3)*(vt0.c0)))))) ORDER BY '&m]+&t*[>' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((x'')&(rt0.c0))))>((((rt0.c3)*(vt0.c0)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY '&m]+&t*[>' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((((x'')&(rt0.c0))))>((((rt0.c3)*(vt0.c0)))))) ORDER BY '&m]+&t*[>' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((+ ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((+ ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((+ ((vt0.c0 IN ()))));
SELECT * FROM vt0, v0 WHERE (((((((522106087)OR(vt0.c0)))AND(v0.c0)))>=(v0.c0 COLLATE RTRIM))) ORDER BY ((vt0.c0)<<(((((v0.c0)OR(v0.c0)))AND(vt0.c0)))) DESC  NULLS FIRST, (((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((522106087)OR(vt0.c0)))AND(v0.c0)))>=(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c0)<<(((((v0.c0)OR(v0.c0)))AND(vt0.c0)))) DESC  NULLS FIRST, (((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) IN ()));
SELECT * FROM vt0, v0 WHERE (((((((522106087)OR(vt0.c0)))AND(v0.c0)))>=(v0.c0 COLLATE RTRIM))) ORDER BY ((vt0.c0)<<(((((v0.c0)OR(v0.c0)))AND(vt0.c0)))) DESC  NULLS FIRST, (((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((522106087)OR(vt0.c0)))AND(v0.c0)))>=(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c0)<<(((((v0.c0)OR(v0.c0)))AND(vt0.c0)))) DESC  NULLS FIRST, (((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) IN ()));
SELECT * FROM vt0, v0 WHERE (((((((522106087)OR(vt0.c0)))AND(v0.c0)))>=(v0.c0 COLLATE RTRIM))) ORDER BY ((vt0.c0)<<(((((v0.c0)OR(v0.c0)))AND(vt0.c0)))) DESC  NULLS FIRST, (((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) IN ());
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((((((((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c3)))AND(v0.c0)))AND(LOWER(DISTINCT rt0.c2))))AND(((((rt0.c3)OR(rt0.c0)))OR(rt0.c2)))))OR((((rt0.c3))=((rt0.c2))))))OR(rt0.c3)))OR((('')&(rt0.c2)))))OR((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) INNER JOIN v0 ON (0Xffffffffbe550898 IN ()) WHERE ((CAST(rt0.c2 AS INTEGER) IN ((- (rt0.c1))))) ORDER BY (((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, HEX(DISTINCT vt0.c0), '[䦄')) AND ((rt0.c0, CAST(x'5f15' AS TEXT), ((rt0.c3)<=(vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS INTEGER) IN ((- (rt0.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((((((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c3)))AND(v0.c0)))AND(LOWER(DISTINCT rt0.c2))))AND(((((rt0.c3)OR(rt0.c0)))OR(rt0.c2)))))OR((((rt0.c3))==((rt0.c2))))))OR(rt0.c3)))OR((('')&(rt0.c2)))))OR((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) INNER JOIN v0 ON (0Xffffffffbe550898 IN ()) ORDER BY (((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, HEX(DISTINCT vt0.c0), '[䦄')) AND ((rt0.c0, CAST(x'5f15' AS TEXT), ((rt0.c3)<=(vt0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((((((((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c3)))AND(v0.c0)))AND(LOWER(DISTINCT rt0.c2))))AND(((((rt0.c3)OR(rt0.c0)))OR(rt0.c2)))))OR((((rt0.c3))=((rt0.c2))))))OR(rt0.c3)))OR((('')&(rt0.c2)))))OR((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) INNER JOIN v0 ON (0Xffffffffbe550898 IN ()) WHERE ((CAST(rt0.c2 AS INTEGER) IN ((- (rt0.c1))))) ORDER BY (((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, HEX(DISTINCT vt0.c0), '[䦄')) AND ((rt0.c0, CAST(x'5f15' AS TEXT), ((rt0.c3)<=(vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS INTEGER) IN ((- (rt0.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((((((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c3)))AND(v0.c0)))AND(LOWER(DISTINCT rt0.c2))))AND(((((rt0.c3)OR(rt0.c0)))OR(rt0.c2)))))OR((((rt0.c3))==((rt0.c2))))))OR(rt0.c3)))OR((('')&(rt0.c2)))))OR((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) INNER JOIN v0 ON (0Xffffffffbe550898 IN ()) ORDER BY (((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, HEX(DISTINCT vt0.c0), '[䦄')) AND ((rt0.c0, CAST(x'5f15' AS TEXT), ((rt0.c3)<=(vt0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((((((((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c3)))AND(v0.c0)))AND(LOWER(DISTINCT rt0.c2))))AND(((((rt0.c3)OR(rt0.c0)))OR(rt0.c2)))))OR((((rt0.c3))=((rt0.c2))))))OR(rt0.c3)))OR((('')&(rt0.c2)))))OR((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) INNER JOIN v0 ON (0Xffffffffbe550898 IN ()) WHERE ((CAST(rt0.c2 AS INTEGER) IN ((- (rt0.c1))))) ORDER BY (((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, HEX(DISTINCT vt0.c0), '[䦄')) AND ((rt0.c0, CAST(x'5f15' AS TEXT), ((rt0.c3)<=(vt0.c0))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN v0 ON ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))GLOB((v0.c0 IN ()))) WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (vt0.c0 COLLATE NOCASE) AND ((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) BETWEEN (vt0.c0 COLLATE NOCASE) AND ((~ (v0.c0))))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN v0 ON ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))GLOB((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN v0 ON ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))GLOB((v0.c0 IN ()))) WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (vt0.c0 COLLATE NOCASE) AND ((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) BETWEEN (vt0.c0 COLLATE NOCASE) AND ((~ (v0.c0))))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN v0 ON ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))GLOB((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN v0 ON ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))GLOB((v0.c0 IN ()))) WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (vt0.c0 COLLATE NOCASE) AND ((~ (v0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (CASE (rt0.c1 IN (0xffffffff8772dd8e))  WHEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c0)) THEN ((rt0.c3)GLOB(rt0.c2)) END) ORDER BY (((((((((((((x'' IN ()))AND(((rt0.c2) NOT NULL))))AND(TRIM(DISTINCT rt0.c1, rt0.c3))))AND('6g⸾~Q,')))AND(((rt0.c2)+(rt0.c3)))))AND((('2006802562') NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(CASE rt0.c0  WHEN rt0.c0 THEN 0xffffffffc2b80b69 WHEN rt0.c1 THEN rt0.c3 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c1 END))  NULLS FIRST, ((x'')IS NOT(rt0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c1 IN (0Xffffffff8772dd8e))  WHEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c0)) THEN ((rt0.c3)GLOB(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((((x'' IN ()))AND(((rt0.c2) NOT NULL))))AND(TRIM(DISTINCT rt0.c1, rt0.c3))))AND('6g⸾~Q,')))AND(((rt0.c2)+(rt0.c3)))))AND((('2006802562') NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(CASE rt0.c0  WHEN rt0.c0 THEN 0xffffffffc2b80b69 WHEN rt0.c1 THEN rt0.c3 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c1 END))  NULLS FIRST, ((x'')IS NOT(rt0.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 WHERE (CASE (rt0.c1 IN (0xffffffff8772dd8e))  WHEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c0)) THEN ((rt0.c3)GLOB(rt0.c2)) END) ORDER BY (((((((((((((x'' IN ()))AND(((rt0.c2) NOT NULL))))AND(TRIM(DISTINCT rt0.c1, rt0.c3))))AND('6g⸾~Q,')))AND(((rt0.c2)+(rt0.c3)))))AND((('2006802562') NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(CASE rt0.c0  WHEN rt0.c0 THEN 0xffffffffc2b80b69 WHEN rt0.c1 THEN rt0.c3 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c1 END))  NULLS FIRST, ((x'')IS NOT(rt0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c1 IN (0Xffffffff8772dd8e))  WHEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c0)) THEN ((rt0.c3)GLOB(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((((x'' IN ()))AND(((rt0.c2) NOT NULL))))AND(TRIM(DISTINCT rt0.c1, rt0.c3))))AND('6g⸾~Q,')))AND(((rt0.c2)+(rt0.c3)))))AND((('2006802562') NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(CASE rt0.c0  WHEN rt0.c0 THEN 0xffffffffc2b80b69 WHEN rt0.c1 THEN rt0.c3 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c1 END))  NULLS FIRST, ((x'')IS NOT(rt0.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 WHERE (CASE (rt0.c1 IN (0xffffffff8772dd8e))  WHEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c0)) THEN ((rt0.c3)GLOB(rt0.c2)) END) ORDER BY (((((((((((((x'' IN ()))AND(((rt0.c2) NOT NULL))))AND(TRIM(DISTINCT rt0.c1, rt0.c3))))AND('6g⸾~Q,')))AND(((rt0.c2)+(rt0.c3)))))AND((('2006802562') NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(CASE rt0.c0  WHEN rt0.c0 THEN 0xffffffffc2b80b69 WHEN rt0.c1 THEN rt0.c3 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c1 END))  NULLS FIRST, ((x'')IS NOT(rt0.c2)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM rt0, v0 CROSS JOIN vt0 ON CAST(vt0.c0 AS INTEGER) COLLATE RTRIM WHERE (((((('-813145583')) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((('-813145583')) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) ISNULL)) IS TRUE)  as count FROM rt0, v0 CROSS JOIN vt0 ON CAST(vt0.c0 AS INTEGER) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, v0 CROSS JOIN vt0 ON CAST(vt0.c0 AS INTEGER) COLLATE RTRIM WHERE (((((('-813145583')) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((('-813145583')) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) ISNULL)) IS TRUE)  as count FROM rt0, v0 CROSS JOIN vt0 ON CAST(vt0.c0 AS INTEGER) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, v0 CROSS JOIN vt0 ON CAST(vt0.c0 AS INTEGER) COLLATE RTRIM WHERE (((((('-813145583')) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) ISNULL));
SELECT ALL * FROM v0, vt0, rt0 WHERE (json_array_length(((rt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)))) ORDER BY ((rt0.c3) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((json_array_length(((rt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((rt0.c3) IS TRUE) DESC);
SELECT ALL * FROM v0, vt0, rt0 WHERE (json_array_length(((rt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)))) ORDER BY ((rt0.c3) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((json_array_length(((rt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((rt0.c3) IS TRUE) DESC);
SELECT ALL * FROM v0, vt0, rt0 WHERE (json_array_length(((rt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)))) ORDER BY ((rt0.c3) IS TRUE) DESC;
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)||(vt0.c0)) WHEN ((vt0.c0)&(NULL)) THEN ((vt0.c0) ISNULL) WHEN (vt0.c0 IN ()) THEN vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)||(vt0.c0)) WHEN ((vt0.c0)&(NULL)) THEN ((vt0.c0) ISNULL) WHEN (vt0.c0 IN ()) THEN vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)||(vt0.c0)) WHEN ((vt0.c0)&(NULL)) THEN ((vt0.c0) ISNULL) WHEN (vt0.c0 IN ()) THEN vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)||(vt0.c0)) WHEN ((vt0.c0)&(NULL)) THEN ((vt0.c0) ISNULL) WHEN (vt0.c0 IN ()) THEN vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)||(vt0.c0)) WHEN ((vt0.c0)&(NULL)) THEN ((vt0.c0) ISNULL) WHEN (vt0.c0 IN ()) THEN vt0.c0 COLLATE NOCASE END);
SELECT ALL * FROM vt0, v0, rt0 WHERE (json_extract(((NULL)=(vt0.c0)), (((rt0.c3))<=((rt0.c1))), CAST(rt0.c3 AS INTEGER), ((rt0.c3)+(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(((NULL)==(vt0.c0)), (((rt0.c3))<=((rt0.c1))), CAST(rt0.c3 AS INTEGER), ((rt0.c3)+(rt0.c2)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (json_extract(((NULL)=(vt0.c0)), (((rt0.c3))<=((rt0.c1))), CAST(rt0.c3 AS INTEGER), ((rt0.c3)+(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(((NULL)==(vt0.c0)), (((rt0.c3))<=((rt0.c1))), CAST(rt0.c3 AS INTEGER), ((rt0.c3)+(rt0.c2)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (json_extract(((NULL)=(vt0.c0)), (((rt0.c3))<=((rt0.c1))), CAST(rt0.c3 AS INTEGER), ((rt0.c3)+(rt0.c2))));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((((rt0.c1) NOT NULL))+((+ (rt0.c3))))) ORDER BY rt0.c0, '' DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT NULL))+((+ (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY rt0.c0, '' DESC);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((((rt0.c1) NOT NULL))+((+ (rt0.c3))))) ORDER BY rt0.c0, '' DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT NULL))+((+ (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY rt0.c0, '' DESC);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((((rt0.c1) NOT NULL))+((+ (rt0.c3))))) ORDER BY rt0.c0, '' DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR('V2jmQ{')))OR((vt0.c0 IN ()))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR('V2jmQ{')))OR((vt0.c0 IN ()))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR('V2jmQ{')))OR((vt0.c0 IN ()))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR('V2jmQ{')))OR((vt0.c0 IN ()))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR('V2jmQ{')))OR((vt0.c0 IN ()))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY vt0.c0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<<(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<<(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0))) IS FALSE));
SELECT COUNT(*) FROM rt0 NOT INDEXED, v0 WHERE (rt0.c3) ORDER BY ((NULL) IS TRUE)  NULLS LAST, ((((rt0.c1)*(rt0.c2))) NOT NULL) ASC, (NOT (((rt0.c3)>>(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, v0 ORDER BY ((NULL) IS TRUE)  NULLS LAST, ((((rt0.c1)*(rt0.c2))) NOT NULL) ASC, (NOT (((rt0.c3)>>(rt0.c3)))));
SELECT COUNT(*) FROM rt0 NOT INDEXED, v0 WHERE (rt0.c3) ORDER BY ((NULL) IS TRUE)  NULLS LAST, ((((rt0.c1)*(rt0.c2))) NOT NULL) ASC, (NOT (((rt0.c3)>>(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, v0 ORDER BY ((NULL) IS TRUE)  NULLS LAST, ((((rt0.c1)*(rt0.c2))) NOT NULL) ASC, (NOT (((rt0.c3)>>(rt0.c3)))));
SELECT COUNT(*) FROM rt0 NOT INDEXED, v0 WHERE (rt0.c3) ORDER BY ((NULL) IS TRUE)  NULLS LAST, ((((rt0.c1)*(rt0.c2))) NOT NULL) ASC, (NOT (((rt0.c3)>>(rt0.c3))));
SELECT ALL * FROM vt0 WHERE (((NOT (vt0.c0)) IN (LIKELIHOOD(DISTINCT vt0.c0, 0.9511012828385942))));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c0)) IN (LIKELIHOOD(DISTINCT vt0.c0, 0.9511012828385942)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((NOT (vt0.c0)) IN (LIKELIHOOD(DISTINCT vt0.c0, 0.9511012828385942))));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c0)) IN (LIKELIHOOD(DISTINCT vt0.c0, 0.9511012828385942)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((NOT (vt0.c0)) IN (LIKELIHOOD(DISTINCT vt0.c0, 0.9511012828385942))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (json_array_length((- (rt0.c1)), COALESCE(rt0.c2, rt0.c3, rt0.c2, vt0.c0, rt0.c2, NULL)));
SELECT SUM(count) FROM (SELECT ((json_array_length((- (rt0.c1)), COALESCE(rt0.c2, rt0.c3, rt0.c2, vt0.c0, rt0.c2, NULL))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (json_array_length((- (rt0.c1)), COALESCE(rt0.c2, rt0.c3, rt0.c2, vt0.c0, rt0.c2, NULL)));
SELECT SUM(count) FROM (SELECT ((json_array_length((- (rt0.c1)), COALESCE(rt0.c2, rt0.c3, rt0.c2, vt0.c0, rt0.c2, NULL))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (((v0.c0)&((NULL IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0)&((NULL IN (rt0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (((v0.c0)&((NULL IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0)&((NULL IN (rt0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (((v0.c0)&((NULL IN (rt0.c0)))));
SELECT ALL * FROM rt0 WHERE ('0.9089005640840512') ORDER BY CASE ((rt0.c0)>>(1.964496389E9))  WHEN RTRIM(rt0.c0) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) ELSE ((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL (('0.9089005640840512') IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c0)>>(1.964496389E9))  WHEN RTRIM(rt0.c0) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) ELSE ((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)) END);
SELECT ALL * FROM rt0 WHERE ('0.9089005640840512') ORDER BY CASE ((rt0.c0)>>(1.964496389E9))  WHEN RTRIM(rt0.c0) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) ELSE ((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL (('0.9089005640840512') IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c0)>>(1.964496389E9))  WHEN RTRIM(rt0.c0) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) ELSE ((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)) END);
SELECT ALL * FROM rt0 WHERE ('0.9089005640840512') ORDER BY CASE ((rt0.c0)>>(1.964496389E9))  WHEN RTRIM(rt0.c0) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) ELSE ((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)) END;
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (LOWER(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN 0.13367618255993186 THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN 0.13367618255993186 THEN rt0.c0 END)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (LOWER(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN 0.13367618255993186 THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN 0.13367618255993186 THEN rt0.c0 END)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (LOWER(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN 0.13367618255993186 THEN rt0.c0 END));
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON v0.c0 FULL OUTER JOIN rt0 ON ((((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN '-671901732' WHEN vt0.c0 THEN rt0.c3 END)OR(((rt0.c3)+(rt0.c3)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)))) WHERE (((((CAST(rt0.c2 AS REAL))AND(CAST(rt0.c0 AS INTEGER))))OR(v0.c0))) ORDER BY (NOT (CASE WHEN vt0.c0 THEN rt0.c3 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c2 AS REAL))AND(CAST(rt0.c0 AS INTEGER))))OR(v0.c0))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON v0.c0 FULL OUTER JOIN rt0 ON ((((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN '-671901732' WHEN vt0.c0 THEN rt0.c3 END)OR(((rt0.c3)+(rt0.c3)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)))) ORDER BY (NOT (CASE WHEN vt0.c0 THEN rt0.c3 END)) ASC);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON v0.c0 FULL OUTER JOIN rt0 ON ((((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN '-671901732' WHEN vt0.c0 THEN rt0.c3 END)OR(((rt0.c3)+(rt0.c3)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)))) WHERE (((((CAST(rt0.c2 AS REAL))AND(CAST(rt0.c0 AS INTEGER))))OR(v0.c0))) ORDER BY (NOT (CASE WHEN vt0.c0 THEN rt0.c3 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c2 AS REAL))AND(CAST(rt0.c0 AS INTEGER))))OR(v0.c0))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON v0.c0 FULL OUTER JOIN rt0 ON ((((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN '-671901732' WHEN vt0.c0 THEN rt0.c3 END)OR(((rt0.c3)+(rt0.c3)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)))) ORDER BY (NOT (CASE WHEN vt0.c0 THEN rt0.c3 END)) ASC);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON v0.c0 FULL OUTER JOIN rt0 ON ((((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN '-671901732' WHEN vt0.c0 THEN rt0.c3 END)OR(((rt0.c3)+(rt0.c3)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)))) WHERE (((((CAST(rt0.c2 AS REAL))AND(CAST(rt0.c0 AS INTEGER))))OR(v0.c0))) ORDER BY (NOT (CASE WHEN vt0.c0 THEN rt0.c3 END)) ASC;
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (IFNULL((rt0.c2 IN (rt0.c1)), ((v0.c0) NOT BETWEEN (rt0.c1) AND ('-1101723496')))) ORDER BY ((((rt0.c1) NOTNULL)) BETWEEN (TRIM(DISTINCT 'iM0享*窰', rt0.c3)) AND ((- (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((rt0.c2 IN (rt0.c1)), ((v0.c0) NOT BETWEEN (rt0.c1) AND ('-1101723496')))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY ((((rt0.c1) NOTNULL)) BETWEEN (TRIM(DISTINCT 'iM0享*窰', rt0.c3)) AND ((- (rt0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (IFNULL((rt0.c2 IN (rt0.c1)), ((v0.c0) NOT BETWEEN (rt0.c1) AND ('-1101723496')))) ORDER BY ((((rt0.c1) NOTNULL)) BETWEEN (TRIM(DISTINCT 'iM0享*窰', rt0.c3)) AND ((- (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((rt0.c2 IN (rt0.c1)), ((v0.c0) NOT BETWEEN (rt0.c1) AND ('-1101723496')))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY ((((rt0.c1) NOTNULL)) BETWEEN (TRIM(DISTINCT 'iM0享*窰', rt0.c3)) AND ((- (rt0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (IFNULL((rt0.c2 IN (rt0.c1)), ((v0.c0) NOT BETWEEN (rt0.c1) AND ('-1101723496')))) ORDER BY ((((rt0.c1) NOTNULL)) BETWEEN (TRIM(DISTINCT 'iM0享*窰', rt0.c3)) AND ((- (rt0.c0))))  NULLS FIRST;
SELECT * FROM v0 CROSS JOIN vt0 ON CAST(((((vt0.c0)AND(v0.c0)))AND(vt0.c0)) AS REAL) WHERE (v0.c0) ORDER BY ((((v0.c0)<=(vt0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) AND (0.9819377418846308));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CAST(((((vt0.c0)AND(v0.c0)))AND(vt0.c0)) AS REAL) ORDER BY ((((v0.c0)<=(vt0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) AND (0.9819377418846308)));
SELECT * FROM v0 CROSS JOIN vt0 ON CAST(((((vt0.c0)AND(v0.c0)))AND(vt0.c0)) AS REAL) WHERE (v0.c0) ORDER BY ((((v0.c0)<=(vt0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) AND (0.9819377418846308));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CAST(((((vt0.c0)AND(v0.c0)))AND(vt0.c0)) AS REAL) ORDER BY ((((v0.c0)<=(vt0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) AND (0.9819377418846308)));
SELECT * FROM v0 CROSS JOIN vt0 ON CAST(((((vt0.c0)AND(v0.c0)))AND(vt0.c0)) AS REAL) WHERE (v0.c0) ORDER BY ((((v0.c0)<=(vt0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) AND (0.9819377418846308));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CASE WHEN CAST(rt0.c3 AS REAL) THEN (+ (rt0.c2)) WHEN rt0.c2 THEN SQLITE_COMPILEOPTION_USED(vt0.c0) WHEN '' THEN 0.7279484101286721 COLLATE RTRIM ELSE CAST(vt0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c3 AS REAL) THEN (+ (rt0.c2)) WHEN rt0.c2 THEN SQLITE_COMPILEOPTION_USED(vt0.c0) WHEN '' THEN 0.7279484101286721 COLLATE RTRIM ELSE CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CASE WHEN CAST(rt0.c3 AS REAL) THEN (+ (rt0.c2)) WHEN rt0.c2 THEN SQLITE_COMPILEOPTION_USED(vt0.c0) WHEN '' THEN 0.7279484101286721 COLLATE RTRIM ELSE CAST(vt0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c3 AS REAL) THEN (+ (rt0.c2)) WHEN rt0.c2 THEN SQLITE_COMPILEOPTION_USED(vt0.c0) WHEN '' THEN 0.7279484101286721 COLLATE RTRIM ELSE CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CASE WHEN CAST(rt0.c3 AS REAL) THEN (+ (rt0.c2)) WHEN rt0.c2 THEN SQLITE_COMPILEOPTION_USED(vt0.c0) WHEN '' THEN 0.7279484101286721 COLLATE RTRIM ELSE CAST(vt0.c0 AS NUMERIC) END);
SELECT COUNT(*) FROM v0, vt0 WHERE (TRIM(DISTINCT v0.c0, vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT v0.c0, vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (TRIM(DISTINCT v0.c0, vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT v0.c0, vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (TRIM(DISTINCT v0.c0, vt0.c0 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM v0 WHERE (json_type(v0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((json_type(v0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (json_type(v0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((json_type(v0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (json_type(v0.c0 COLLATE RTRIM));
SELECT ALL * FROM vt0, rt0, v0 WHERE (0.18924014639907782) ORDER BY (('v')LIKE(rt0.c1));
SELECT SUM(count) FROM (SELECT ((0.18924014639907782) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (('v')LIKE(rt0.c1)));
SELECT ALL * FROM vt0, rt0, v0 WHERE (0.18924014639907782) ORDER BY (('v')LIKE(rt0.c1));
SELECT SUM(count) FROM (SELECT ((0.18924014639907782) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (('v')LIKE(rt0.c1)));
SELECT ALL * FROM vt0, rt0, v0 WHERE (0.18924014639907782) ORDER BY (('v')LIKE(rt0.c1));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((((((NULL)OR(rt0.c2)))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))AND(((rt0.c3) NOT BETWEEN (0.5094031870216426) AND (rt0.c3))))) ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)OR(rt0.c2)))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))AND(((rt0.c3) NOT BETWEEN (0.5094031870216426) AND (rt0.c3))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((((((NULL)OR(rt0.c2)))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))AND(((rt0.c3) NOT BETWEEN (0.5094031870216426) AND (rt0.c3))))) ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)OR(rt0.c2)))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))AND(((rt0.c3) NOT BETWEEN (0.5094031870216426) AND (rt0.c3))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((((((NULL)OR(rt0.c2)))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))AND(((rt0.c3) NOT BETWEEN (0.5094031870216426) AND (rt0.c3))))) ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)) AS NUMERIC)  NULLS LAST;
SELECT * FROM rt0 INNER JOIN vt0 ON (rt0.c2 IN (((rt0.c2) ISNULL))) WHERE (((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))IS(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))IS(rt0.c0))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (rt0.c2 IN (((rt0.c2) ISNULL))));
SELECT * FROM rt0 INNER JOIN vt0 ON (rt0.c2 IN (((rt0.c2) ISNULL))) WHERE (((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))IS(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))IS(rt0.c0))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (rt0.c2 IN (((rt0.c2) ISNULL))));
SELECT * FROM rt0 INNER JOIN vt0 ON (rt0.c2 IN (((rt0.c2) ISNULL))) WHERE (((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))IS(rt0.c0)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (COALESCE(DISTINCT rt0.c0, rt0.c0, rt0.c0, v0.c0) IN ()) RIGHT OUTER JOIN v0 ON ((((rt0.c0) NOTNULL))>(((rt0.c3) ISNULL))) WHERE (CAST((((rt0.c1))=((rt0.c1))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c1))==((rt0.c1))) AS REAL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (COALESCE(DISTINCT rt0.c0, rt0.c0, rt0.c0, v0.c0) IN ()) RIGHT OUTER JOIN v0 ON ((((rt0.c0) NOTNULL))>(((rt0.c3) ISNULL))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (COALESCE(DISTINCT rt0.c0, rt0.c0, rt0.c0, v0.c0) IN ()) RIGHT OUTER JOIN v0 ON ((((rt0.c0) NOTNULL))>(((rt0.c3) ISNULL))) WHERE (CAST((((rt0.c1))=((rt0.c1))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c1))==((rt0.c1))) AS REAL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (COALESCE(DISTINCT rt0.c0, rt0.c0, rt0.c0, v0.c0) IN ()) RIGHT OUTER JOIN v0 ON ((((rt0.c0) NOTNULL))>(((rt0.c3) ISNULL))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (COALESCE(DISTINCT rt0.c0, rt0.c0, rt0.c0, v0.c0) IN ()) RIGHT OUTER JOIN v0 ON ((((rt0.c0) NOTNULL))>(((rt0.c3) ISNULL))) WHERE (CAST((((rt0.c1))=((rt0.c1))) AS REAL));
SELECT * FROM v0 WHERE ((((((((v0.c0, '', v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND (('20i*P&U', v0.c0, v0.c0))))AND(v0.c0 COLLATE RTRIM)))AND(JULIANDAY(v0.c0, v0.c0, v0.c0)))) ORDER BY (((NOT (v0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (x''));
SELECT SUM(count) FROM (SELECT (((((((((v0.c0, '', v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND (('20i*P&U', v0.c0, v0.c0))))AND(v0.c0 COLLATE RTRIM)))AND(JULIANDAY(v0.c0, v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (x'')));
SELECT * FROM v0 WHERE ((((((((v0.c0, '', v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND (('20i*P&U', v0.c0, v0.c0))))AND(v0.c0 COLLATE RTRIM)))AND(JULIANDAY(v0.c0, v0.c0, v0.c0)))) ORDER BY (((NOT (v0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (x''));
SELECT SUM(count) FROM (SELECT (((((((((v0.c0, '', v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND (('20i*P&U', v0.c0, v0.c0))))AND(v0.c0 COLLATE RTRIM)))AND(JULIANDAY(v0.c0, v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (x'')));
SELECT * FROM v0 WHERE ((((((((v0.c0, '', v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND (('20i*P&U', v0.c0, v0.c0))))AND(v0.c0 COLLATE RTRIM)))AND(JULIANDAY(v0.c0, v0.c0, v0.c0)))) ORDER BY (((NOT (v0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (x''));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS TRUE))||(((vt0.c0)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE))||(((vt0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS TRUE))||(((vt0.c0)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE))||(((vt0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS TRUE))||(((vt0.c0)IS NOT(vt0.c0)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c0) NOTNULL))OR('-1226942394')))AND(((rt0.c3)IS(x'8e6c22e3')))))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))))AND(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)))) WHERE ((((('[')|(rt0.c1)))>((rt0.c1 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((('[')|(rt0.c1)))>((rt0.c1 IN (rt0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c0) NOTNULL))OR('-1226942394')))AND(((rt0.c3)IS(x'8e6c22e3')))))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))))AND(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c0) NOTNULL))OR('-1226942394')))AND(((rt0.c3)IS(x'8e6c22e3')))))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))))AND(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)))) WHERE ((((('[')|(rt0.c1)))>((rt0.c1 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((('[')|(rt0.c1)))>((rt0.c1 IN (rt0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c0) NOTNULL))OR('-1226942394')))AND(((rt0.c3)IS(x'8e6c22e3')))))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))))AND(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c0) NOTNULL))OR('-1226942394')))AND(((rt0.c3)IS(x'8e6c22e3')))))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))))AND(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)))) WHERE ((((('[')|(rt0.c1)))>((rt0.c1 IN (rt0.c0)))));
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(((x'')*(vt0.c0)) AS BLOB)) ORDER BY ((v0.c0) BETWEEN (x'') AND (((vt0.c0)OR('!N')))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((x'')*(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((v0.c0) BETWEEN (x'') AND (((vt0.c0)OR('!N')))) DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(((x'')*(vt0.c0)) AS BLOB)) ORDER BY ((v0.c0) BETWEEN (x'') AND (((vt0.c0)OR('!N')))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((x'')*(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((v0.c0) BETWEEN (x'') AND (((vt0.c0)OR('!N')))) DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(((x'')*(vt0.c0)) AS BLOB)) ORDER BY ((v0.c0) BETWEEN (x'') AND (((vt0.c0)OR('!N')))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (TIME(((vt0.c0) IS TRUE), ((vt0.c0)/(vt0.c0)), ((vt0.c0)>(vt0.c0)), ((vt0.c0)<<(vt0.c0)), vt0.c0 COLLATE BINARY)) ORDER BY (((0.9754770199850901)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((NULL)));
SELECT SUM(count) FROM (SELECT ALL ((TIME(((vt0.c0) IS TRUE), ((vt0.c0)/(vt0.c0)), ((vt0.c0)>(vt0.c0)), ((vt0.c0)<<(vt0.c0)), vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0 ORDER BY (((0.9754770199850901)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((NULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (TIME(((vt0.c0) IS TRUE), ((vt0.c0)/(vt0.c0)), ((vt0.c0)>(vt0.c0)), ((vt0.c0)<<(vt0.c0)), vt0.c0 COLLATE BINARY)) ORDER BY (((0.9754770199850901)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((NULL)));
SELECT SUM(count) FROM (SELECT ALL ((TIME(((vt0.c0) IS TRUE), ((vt0.c0)/(vt0.c0)), ((vt0.c0)>(vt0.c0)), ((vt0.c0)<<(vt0.c0)), vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0 ORDER BY (((0.9754770199850901)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((NULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (TIME(((vt0.c0) IS TRUE), ((vt0.c0)/(vt0.c0)), ((vt0.c0)>(vt0.c0)), ((vt0.c0)<<(vt0.c0)), vt0.c0 COLLATE BINARY)) ORDER BY (((0.9754770199850901)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((NULL)));
SELECT ALL COUNT(*) FROM v0 WHERE ((((CAST(v0.c0 AS BLOB)))<=((COALESCE(DISTINCT v0.c0, v0.c0))))) ORDER BY ((((((v0.c0)&(v0.c0)))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(v0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c0 AS BLOB)))<=((COALESCE(DISTINCT v0.c0, v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)&(v0.c0)))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(v0.c0 COLLATE RTRIM)) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((CAST(v0.c0 AS BLOB)))<=((COALESCE(DISTINCT v0.c0, v0.c0))))) ORDER BY ((((((v0.c0)&(v0.c0)))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(v0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c0 AS BLOB)))<=((COALESCE(DISTINCT v0.c0, v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)&(v0.c0)))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(v0.c0 COLLATE RTRIM)) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((CAST(v0.c0 AS BLOB)))<=((COALESCE(DISTINCT v0.c0, v0.c0))))) ORDER BY ((((((v0.c0)&(v0.c0)))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(v0.c0 COLLATE RTRIM)) ASC;
SELECT ALL * FROM v0 WHERE ((~ (((NULL) BETWEEN ('0.5902444093345586') AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((NULL) BETWEEN ('0.5902444093345586') AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((~ (((NULL) BETWEEN ('0.5902444093345586') AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((NULL) BETWEEN ('0.5902444093345586') AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((~ (((NULL) BETWEEN ('0.5902444093345586') AND (v0.c0)))));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (- (CAST(rt0.c0 AS NUMERIC))) FULL OUTER JOIN vt0 ON CASE WHEN ((vt0.c0)||(rt0.c2)) THEN ((v0.c0)<=(v0.c0)) ELSE (rt0.c3 IN ()) END WHERE ((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN (((rt0.c1 IN ()), ((rt0.c1) ISNULL), ((rt0.c3)*('-813145583')))) AND ((rt0.c2, (('ೊLFNk')/(NULL)), rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN (((rt0.c1 IN ()), ((rt0.c1) ISNULL), ((rt0.c3)*('-813145583')))) AND ((rt0.c2, (('ೊLFNk')/(NULL)), rt0.c2)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (- (CAST(rt0.c0 AS NUMERIC))) FULL OUTER JOIN vt0 ON CASE WHEN ((vt0.c0)||(rt0.c2)) THEN ((v0.c0)<=(v0.c0)) ELSE (rt0.c3 IN ()) END);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (- (CAST(rt0.c0 AS NUMERIC))) FULL OUTER JOIN vt0 ON CASE WHEN ((vt0.c0)||(rt0.c2)) THEN ((v0.c0)<=(v0.c0)) ELSE (rt0.c3 IN ()) END WHERE ((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN (((rt0.c1 IN ()), ((rt0.c1) ISNULL), ((rt0.c3)*('-813145583')))) AND ((rt0.c2, (('ೊLFNk')/(NULL)), rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN (((rt0.c1 IN ()), ((rt0.c1) ISNULL), ((rt0.c3)*('-813145583')))) AND ((rt0.c2, (('ೊLFNk')/(NULL)), rt0.c2)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (- (CAST(rt0.c0 AS NUMERIC))) FULL OUTER JOIN vt0 ON CASE WHEN ((vt0.c0)||(rt0.c2)) THEN ((v0.c0)<=(v0.c0)) ELSE (rt0.c3 IN ()) END);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (- (CAST(rt0.c0 AS NUMERIC))) FULL OUTER JOIN vt0 ON CASE WHEN ((vt0.c0)||(rt0.c2)) THEN ((v0.c0)<=(v0.c0)) ELSE (rt0.c3 IN ()) END WHERE ((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN (((rt0.c1 IN ()), ((rt0.c1) ISNULL), ((rt0.c3)*('-813145583')))) AND ((rt0.c2, (('ೊLFNk')/(NULL)), rt0.c2))));
SELECT * FROM vt0 WHERE (((((vt0.c0) IS TRUE))/((('') NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE))/((('') NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS TRUE))/((('') NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE))/((('') NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS TRUE))/((('') NOTNULL))));
SELECT * FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))OR('-318717895')))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) NOT NULL))))AND(CAST(vt0.c0 AS INTEGER))))AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0)OR(vt0.c0)))OR('-318717895')))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) NOT NULL))))AND(CAST(vt0.c0 AS INTEGER))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))OR('-318717895')))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) NOT NULL))))AND(CAST(vt0.c0 AS INTEGER))))AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0)OR(vt0.c0)))OR('-318717895')))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) NOT NULL))))AND(CAST(vt0.c0 AS INTEGER))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))OR('-318717895')))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) NOT NULL))))AND(CAST(vt0.c0 AS INTEGER))))AND((vt0.c0 IN ()))));
SELECT * FROM rt0, vt0, v0 WHERE (CAST(((vt0.c0)IS(rt0.c3)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)IS(rt0.c3)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (CAST(((vt0.c0)IS(rt0.c3)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)IS(rt0.c3)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (CAST(((vt0.c0)IS(rt0.c3)) AS BLOB));
SELECT * FROM vt0, rt0, v0 WHERE (COALESCE(CASE rt0.c0  WHEN v0.c0 THEN rt0.c1 WHEN rt0.c3 THEN '?u)' WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END, CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 END, rt0.c2, CASE WHEN rt0.c0 THEN v0.c0 END)) ORDER BY ((((vt0.c0)>(rt0.c3))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((COALESCE(CASE rt0.c0  WHEN v0.c0 THEN rt0.c1 WHEN rt0.c3 THEN '?u)' WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END, CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 END, rt0.c2, CASE WHEN rt0.c0 THEN v0.c0 END)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((vt0.c0)>(rt0.c3))) NOT NULL));
SELECT * FROM vt0, rt0, v0 WHERE (COALESCE(CASE rt0.c0  WHEN v0.c0 THEN rt0.c1 WHEN rt0.c3 THEN '?u)' WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END, CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 END, rt0.c2, CASE WHEN rt0.c0 THEN v0.c0 END)) ORDER BY ((((vt0.c0)>(rt0.c3))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((COALESCE(CASE rt0.c0  WHEN v0.c0 THEN rt0.c1 WHEN rt0.c3 THEN '?u)' WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END, CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 END, rt0.c2, CASE WHEN rt0.c0 THEN v0.c0 END)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((vt0.c0)>(rt0.c3))) NOT NULL));
SELECT * FROM vt0, rt0, v0 WHERE (COALESCE(CASE rt0.c0  WHEN v0.c0 THEN rt0.c1 WHEN rt0.c3 THEN '?u)' WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END, CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 END, rt0.c2, CASE WHEN rt0.c0 THEN v0.c0 END)) ORDER BY ((((vt0.c0)>(rt0.c3))) NOT NULL);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c0) AND ('')))>=(0.2911465347901684)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (rt0.c0) AND ('')))>=(0.2911465347901684))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c0) AND ('')))>=(0.2911465347901684)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (rt0.c0) AND ('')))>=(0.2911465347901684))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c0) AND ('')))>=(0.2911465347901684)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((vt0.c0 IN ()))));
SELECT ALL * FROM vt0 WHERE ('j8c');
SELECT SUM(count) FROM (SELECT (('j8c') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('j8c');
SELECT SUM(count) FROM (SELECT (('j8c') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('j8c');
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) IN (((v0.c0) IS FALSE))) WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN 0.10171539210682379 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN 0.10171539210682379 END IN ())) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) IN (((v0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) IN (((v0.c0) IS FALSE))) WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN 0.10171539210682379 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN 0.10171539210682379 END IN ())) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) IN (((v0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) IN (((v0.c0) IS FALSE))) WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN 0.10171539210682379 END IN ()));
SELECT COUNT(*) FROM v0, vt0 NOT INDEXED, rt0 WHERE ((+ (((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0 NOT INDEXED, rt0 WHERE ((+ (((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0 NOT INDEXED, rt0 WHERE ((+ (((rt0.c2) IS TRUE))));
SELECT * FROM rt0 INNER JOIN v0 ON vt0.c0 INNER JOIN vt0 ON (((rt0.c2) NOT BETWEEN (rt0.c1) AND (0.22074755244579503)) IN ()) WHERE (((rt0.c2)>(load_extension(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)>(load_extension(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON vt0.c0 INNER JOIN vt0 ON (((rt0.c2) NOT BETWEEN (rt0.c1) AND (0.22074755244579503)) IN ()));
SELECT * FROM rt0 INNER JOIN v0 ON vt0.c0 INNER JOIN vt0 ON (((rt0.c2) NOT BETWEEN (rt0.c1) AND (0.22074755244579503)) IN ()) WHERE (((rt0.c2)>(load_extension(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)>(load_extension(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON vt0.c0 INNER JOIN vt0 ON (((rt0.c2) NOT BETWEEN (rt0.c1) AND (0.22074755244579503)) IN ()));
SELECT * FROM rt0 INNER JOIN v0 ON vt0.c0 INNER JOIN vt0 ON (((rt0.c2) NOT BETWEEN (rt0.c1) AND (0.22074755244579503)) IN ()) WHERE (((rt0.c2)>(load_extension(vt0.c0, vt0.c0))));
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((((LOWER(DISTINCT rt0.c2))AND(CAST(rt0.c3 AS NUMERIC))))OR(CAST(rt0.c2 AS INTEGER)))) ORDER BY ((((((vt0.c0) NOT NULL))OR(CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))AND((rt0.c3 IN ())))  NULLS FIRST, 0.9754770199850901  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((LOWER(DISTINCT rt0.c2))AND(CAST(rt0.c3 AS NUMERIC))))OR(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((((vt0.c0) NOT NULL))OR(CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))AND((rt0.c3 IN ())))  NULLS FIRST, 0.9754770199850901  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((((LOWER(DISTINCT rt0.c2))AND(CAST(rt0.c3 AS NUMERIC))))OR(CAST(rt0.c2 AS INTEGER)))) ORDER BY ((((((vt0.c0) NOT NULL))OR(CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))AND((rt0.c3 IN ())))  NULLS FIRST, 0.9754770199850901  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((LOWER(DISTINCT rt0.c2))AND(CAST(rt0.c3 AS NUMERIC))))OR(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((((vt0.c0) NOT NULL))OR(CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))AND((rt0.c3 IN ())))  NULLS FIRST, 0.9754770199850901  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE BINARY) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE BINARY) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c2 COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ())) ORDER BY ((vt0.c0 COLLATE RTRIM)>((vt0.c0 IN (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)>((vt0.c0 IN (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ())) ORDER BY ((vt0.c0 COLLATE RTRIM)>((vt0.c0 IN (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)>((vt0.c0 IN (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ())) ORDER BY ((vt0.c0 COLLATE RTRIM)>((vt0.c0 IN (vt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT NULL))-(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL))-(x''))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT NULL))-(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL))-(x''))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT NULL))-(x'')));
SELECT * FROM v0 NOT INDEXED, rt0 WHERE (CAST(((x'') BETWEEN (rt0.c1) AND (rt0.c2)) AS REAL)) ORDER BY TRIM(DISTINCT CAST(v0.c0 AS NUMERIC), NULL)  NULLS FIRST, CASE (rt0.c0 IN ())  WHEN ((rt0.c0) NOTNULL) THEN 0.1549313660288345 ELSE NULL END;
SELECT SUM(count) FROM (SELECT ((CAST(((x'') BETWEEN (rt0.c1) AND (rt0.c2)) AS REAL)) IS TRUE)  as count FROM v0, rt0 ORDER BY TRIM(DISTINCT CAST(v0.c0 AS NUMERIC), NULL)  NULLS FIRST, CASE (rt0.c0 IN ())  WHEN ((rt0.c0) NOTNULL) THEN 0.1549313660288345 ELSE NULL END);
SELECT * FROM v0 NOT INDEXED, rt0 WHERE (CAST(((x'') BETWEEN (rt0.c1) AND (rt0.c2)) AS REAL)) ORDER BY TRIM(DISTINCT CAST(v0.c0 AS NUMERIC), NULL)  NULLS FIRST, CASE (rt0.c0 IN ())  WHEN ((rt0.c0) NOTNULL) THEN 0.1549313660288345 ELSE NULL END;
SELECT SUM(count) FROM (SELECT ((CAST(((x'') BETWEEN (rt0.c1) AND (rt0.c2)) AS REAL)) IS TRUE)  as count FROM v0, rt0 ORDER BY TRIM(DISTINCT CAST(v0.c0 AS NUMERIC), NULL)  NULLS FIRST, CASE (rt0.c0 IN ())  WHEN ((rt0.c0) NOTNULL) THEN 0.1549313660288345 ELSE NULL END);
SELECT * FROM v0 NOT INDEXED, rt0 WHERE (CAST(((x'') BETWEEN (rt0.c1) AND (rt0.c2)) AS REAL)) ORDER BY TRIM(DISTINCT CAST(v0.c0 AS NUMERIC), NULL)  NULLS FIRST, CASE (rt0.c0 IN ())  WHEN ((rt0.c0) NOTNULL) THEN 0.1549313660288345 ELSE NULL END;
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c2) NOT NULL))) AND ((((rt0.c3)<=(rt0.c0)))))) ORDER BY (((rt0.c1) IS TRUE) IN ());
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((((rt0.c2) NOT NULL))) AND ((((rt0.c3)<=(rt0.c0)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c1) IS TRUE) IN ()));
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c2) NOT NULL))) AND ((((rt0.c3)<=(rt0.c0)))))) ORDER BY (((rt0.c1) IS TRUE) IN ());
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((((rt0.c2) NOT NULL))) AND ((((rt0.c3)<=(rt0.c0)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c1) IS TRUE) IN ()));
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c2) NOT NULL))) AND ((((rt0.c3)<=(rt0.c0)))))) ORDER BY (((rt0.c1) IS TRUE) IN ());
SELECT * FROM v0 WHERE (((((v0.c0)OR(v0.c0)))<((+ (x'')))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)OR(v0.c0)))<((+ (x''))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)OR(v0.c0)))<((+ (x'')))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)OR(v0.c0)))<((+ (x''))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)OR(v0.c0)))<((+ (x'')))));
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE ((((rt0.c1 IN (v0.c0))) NOT BETWEEN (((rt0.c2)-(rt0.c3))) AND (CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (v0.c0))) NOT BETWEEN (((rt0.c2)-(rt0.c3))) AND (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE ((((rt0.c1 IN (v0.c0))) NOT BETWEEN (((rt0.c2)-(rt0.c3))) AND (CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (v0.c0))) NOT BETWEEN (((rt0.c2)-(rt0.c3))) AND (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE ((((rt0.c1 IN (v0.c0))) NOT BETWEEN (((rt0.c2)-(rt0.c3))) AND (CAST(rt0.c2 AS BLOB))));
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c0 COLLATE NOCASE) BETWEEN ((~ (rt0.c0))) AND (CAST(vt0.c0 AS BLOB)))) ORDER BY (~ (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE) BETWEEN ((~ (rt0.c0))) AND (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (NULL))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c0 COLLATE NOCASE) BETWEEN ((~ (rt0.c0))) AND (CAST(vt0.c0 AS BLOB)))) ORDER BY (~ (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE) BETWEEN ((~ (rt0.c0))) AND (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (NULL))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c0 COLLATE NOCASE) BETWEEN ((~ (rt0.c0))) AND (CAST(vt0.c0 AS BLOB)))) ORDER BY (~ (NULL))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((rt0.c1 COLLATE RTRIM) NOT BETWEEN (v0.c0) AND ((((rt0.c0)) BETWEEN ((rt0.c0)) AND (('97238312'))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM) NOT BETWEEN (v0.c0) AND ((((rt0.c0)) BETWEEN ((rt0.c0)) AND (('97238312')))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((rt0.c1 COLLATE RTRIM) NOT BETWEEN (v0.c0) AND ((((rt0.c0)) BETWEEN ((rt0.c0)) AND (('97238312'))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM) NOT BETWEEN (v0.c0) AND ((((rt0.c0)) BETWEEN ((rt0.c0)) AND (('97238312')))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((rt0.c1 COLLATE RTRIM) NOT BETWEEN (v0.c0) AND ((((rt0.c0)) BETWEEN ((rt0.c0)) AND (('97238312'))))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))) AND (rt0.c2)) WHERE (CAST((NOT (0Xffffffffe2946aed)) AS NUMERIC)) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c0, 0.9206078680541625)) BETWEEN (LIKELY(DISTINCT rt0.c3)) AND ((rt0.c0 IN ()))) ASC  NULLS LAST, (~ (CAST(rt0.c2 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (0xffffffffe2946aed)) AS NUMERIC)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))) AND (rt0.c2)) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c0, 0.9206078680541625)) BETWEEN (LIKELY(DISTINCT rt0.c3)) AND ((rt0.c0 IN ()))) ASC  NULLS LAST, (~ (CAST(rt0.c2 AS INTEGER)))  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))) AND (rt0.c2)) WHERE (CAST((NOT (0Xffffffffe2946aed)) AS NUMERIC)) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c0, 0.9206078680541625)) BETWEEN (LIKELY(DISTINCT rt0.c3)) AND ((rt0.c0 IN ()))) ASC  NULLS LAST, (~ (CAST(rt0.c2 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (0xffffffffe2946aed)) AS NUMERIC)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))) AND (rt0.c2)) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c0, 0.9206078680541625)) BETWEEN (LIKELY(DISTINCT rt0.c3)) AND ((rt0.c0 IN ()))) ASC  NULLS LAST, (~ (CAST(rt0.c2 AS INTEGER)))  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))) AND (rt0.c2)) WHERE (CAST((NOT (0Xffffffffe2946aed)) AS NUMERIC)) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c0, 0.9206078680541625)) BETWEEN (LIKELY(DISTINCT rt0.c3)) AND ((rt0.c0 IN ()))) ASC  NULLS LAST, (~ (CAST(rt0.c2 AS INTEGER)))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1)<(rt0.c2)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) ELSE ((rt0.c1) IS TRUE) END) ORDER BY (NOT (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) DESC, ABS(CAST(rt0.c3 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)<(rt0.c2)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) ELSE ((rt0.c1) IS TRUE) END) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) DESC, ABS(CAST(rt0.c3 AS TEXT)));
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1)<(rt0.c2)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) ELSE ((rt0.c1) IS TRUE) END) ORDER BY (NOT (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) DESC, ABS(CAST(rt0.c3 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)<(rt0.c2)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) ELSE ((rt0.c1) IS TRUE) END) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) DESC, ABS(CAST(rt0.c3 AS TEXT)));
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1)<(rt0.c2)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) ELSE ((rt0.c1) IS TRUE) END) ORDER BY (NOT (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) DESC, ABS(CAST(rt0.c3 AS TEXT));
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY TRIM(DISTINCT CASE WHEN rt0.c3 THEN rt0.c0 END, CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN NULL WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) ASC  NULLS FIRST, '-799449614', (((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((CAST(rt0.c3 AS TEXT), (((rt0.c3))==((rt0.c0))), CAST(rt0.c1 AS INTEGER))) AND ((((rt0.c0)AND(rt0.c2)), CAST(rt0.c1 AS REAL), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY TRIM(DISTINCT CASE WHEN rt0.c3 THEN rt0.c0 END, CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN NULL WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) ASC  NULLS FIRST, '-799449614', (((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((CAST(rt0.c3 AS TEXT), (((rt0.c3))=((rt0.c0))), CAST(rt0.c1 AS INTEGER))) AND ((((rt0.c0)AND(rt0.c2)), CAST(rt0.c1 AS REAL), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY TRIM(DISTINCT CASE WHEN rt0.c3 THEN rt0.c0 END, CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN NULL WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) ASC  NULLS FIRST, '-799449614', (((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((CAST(rt0.c3 AS TEXT), (((rt0.c3))==((rt0.c0))), CAST(rt0.c1 AS INTEGER))) AND ((((rt0.c0)AND(rt0.c2)), CAST(rt0.c1 AS REAL), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY TRIM(DISTINCT CASE WHEN rt0.c3 THEN rt0.c0 END, CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN NULL WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) ASC  NULLS FIRST, '-799449614', (((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((CAST(rt0.c3 AS TEXT), (((rt0.c3))=((rt0.c0))), CAST(rt0.c1 AS INTEGER))) AND ((((rt0.c0)AND(rt0.c2)), CAST(rt0.c1 AS REAL), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY TRIM(DISTINCT CASE WHEN rt0.c3 THEN rt0.c0 END, CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN NULL WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) ASC  NULLS FIRST, '-799449614', (((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((CAST(rt0.c3 AS TEXT), (((rt0.c3))==((rt0.c0))), CAST(rt0.c1 AS INTEGER))) AND ((((rt0.c0)AND(rt0.c2)), CAST(rt0.c1 AS REAL), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((CASE rt0.c2  WHEN NULL THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c3 END)))) ORDER BY CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 END COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((CASE rt0.c2  WHEN NULL THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c3 END)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 END COLLATE RTRIM ASC);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((CASE rt0.c2  WHEN NULL THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c3 END)))) ORDER BY CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 END COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((CASE rt0.c2  WHEN NULL THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c3 END)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 END COLLATE RTRIM ASC);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((CASE rt0.c2  WHEN NULL THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c3 END)))) ORDER BY CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 END COLLATE RTRIM ASC;
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0)IS(vt0.c0)))))OR(((vt0.c0)!=(x''))))) ORDER BY (- (((vt0.c0) ISNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0)IS(vt0.c0)))))OR(((vt0.c0)<>(x''))))) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0) ISNULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0)IS(vt0.c0)))))OR(((vt0.c0)!=(x''))))) ORDER BY (- (((vt0.c0) ISNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0)IS(vt0.c0)))))OR(((vt0.c0)<>(x''))))) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0) ISNULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0)IS(vt0.c0)))))OR(((vt0.c0)!=(x''))))) ORDER BY (- (((vt0.c0) ISNULL))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c3)LIKE(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)LIKE(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c3)LIKE(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)LIKE(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c3)LIKE(rt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (UNLIKELY(DISTINCT rt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT rt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (UNLIKELY(DISTINCT rt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT rt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (UNLIKELY(DISTINCT rt0.c0) COLLATE RTRIM);
SELECT ALL * FROM rt0, v0, vt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (CHANGES());
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT * FROM vt0 WHERE (CAST(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) AS BLOB)) ORDER BY ((((vt0.c0) IS FALSE))IS NOT(CAST(vt0.c0 AS TEXT))) DESC  NULLS FIRST, ((TRIM(DISTINCT vt0.c0)) NOTNULL) ASC, x'';
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS FALSE))IS NOT(CAST(vt0.c0 AS TEXT))) DESC  NULLS FIRST, ((TRIM(DISTINCT vt0.c0)) NOTNULL) ASC, x'');
SELECT * FROM vt0 WHERE (CAST(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) AS BLOB)) ORDER BY ((((vt0.c0) IS FALSE))IS NOT(CAST(vt0.c0 AS TEXT))) DESC  NULLS FIRST, ((TRIM(DISTINCT vt0.c0)) NOTNULL) ASC, x'';
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS FALSE))IS NOT(CAST(vt0.c0 AS TEXT))) DESC  NULLS FIRST, ((TRIM(DISTINCT vt0.c0)) NOTNULL) ASC, x'');
SELECT * FROM vt0 WHERE (CAST(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) AS BLOB)) ORDER BY ((((vt0.c0) IS FALSE))IS NOT(CAST(vt0.c0 AS TEXT))) DESC  NULLS FIRST, ((TRIM(DISTINCT vt0.c0)) NOTNULL) ASC, x'';
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END)-(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END)-(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END)-(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END)-(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END)-(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((NOT (v0.c0)))<(((vt0.c0) ISNULL))) WHERE ((((v0.c0)) BETWEEN ((TRIM(DISTINCT vt0.c0))) AND ((((v0.c0)IS NOT(v0.c0)))))) ORDER BY CAST(((v0.c0)/(v0.c0)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((TRIM(DISTINCT vt0.c0))) AND ((((v0.c0)IS NOT(v0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((NOT (v0.c0)))<(((vt0.c0) ISNULL))) ORDER BY CAST(((v0.c0)/(v0.c0)) AS BLOB) DESC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((NOT (v0.c0)))<(((vt0.c0) ISNULL))) WHERE ((((v0.c0)) BETWEEN ((TRIM(DISTINCT vt0.c0))) AND ((((v0.c0)IS NOT(v0.c0)))))) ORDER BY CAST(((v0.c0)/(v0.c0)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((TRIM(DISTINCT vt0.c0))) AND ((((v0.c0)IS NOT(v0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((NOT (v0.c0)))<(((vt0.c0) ISNULL))) ORDER BY CAST(((v0.c0)/(v0.c0)) AS BLOB) DESC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((NOT (v0.c0)))<(((vt0.c0) ISNULL))) WHERE ((((v0.c0)) BETWEEN ((TRIM(DISTINCT vt0.c0))) AND ((((v0.c0)IS NOT(v0.c0)))))) ORDER BY CAST(((v0.c0)/(v0.c0)) AS BLOB) DESC;
SELECT ALL * FROM rt0 WHERE ((rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((rt0.c0 IN ()));
SELECT * FROM vt0, v0, rt0 WHERE ((((CASE vt0.c0  WHEN v0.c0 THEN rt0.c1 WHEN x'' THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c0 END))>=((((rt0.c2)*(rt0.c2)))))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c0  WHEN v0.c0 THEN rt0.c1 WHEN x'' THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c0 END))>=((((rt0.c2)*(rt0.c2)))))) IS TRUE)  as count FROM vt0, v0, rt0 NOT INDEXED ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT * FROM vt0, v0, rt0 WHERE ((((CASE vt0.c0  WHEN v0.c0 THEN rt0.c1 WHEN x'' THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c0 END))>=((((rt0.c2)*(rt0.c2)))))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c0  WHEN v0.c0 THEN rt0.c1 WHEN x'' THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c0 END))>=((((rt0.c2)*(rt0.c2)))))) IS TRUE)  as count FROM vt0, v0, rt0 NOT INDEXED ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT * FROM vt0, v0, rt0 WHERE ((((CASE vt0.c0  WHEN v0.c0 THEN rt0.c1 WHEN x'' THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c0 END))>=((((rt0.c2)*(rt0.c2)))))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)&(rt0.c0))) IS TRUE)) ORDER BY (~ (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)&(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)&(rt0.c0))) IS TRUE)) ORDER BY (~ (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)&(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)&(rt0.c0))) IS TRUE)) ORDER BY (~ (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN TYPEOF(v0.c0) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END WHEN x'' THEN ((vt0.c0) NOT NULL) WHEN ((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)) THEN CAST(vt0.c0 AS NUMERIC) END) ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0)+(vt0.c0)) THEN ((v0.c0) BETWEEN (x'') AND (vt0.c0)) WHEN ((vt0.c0) NOT NULL) THEN CAST(vt0.c0 AS REAL) WHEN v0.c0 THEN '1365494176' COLLATE RTRIM END  NULLS FIRST, ((v0.c0 COLLATE BINARY) IS TRUE) DESC, vt0.c0;
SELECT SUM(count) FROM (SELECT ((CASE WHEN TYPEOF(v0.c0) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END WHEN x'' THEN ((vt0.c0) NOT NULL) WHEN ((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)) THEN CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0)+(vt0.c0)) THEN ((v0.c0) BETWEEN (x'') AND (vt0.c0)) WHEN ((vt0.c0) NOT NULL) THEN CAST(vt0.c0 AS REAL) WHEN v0.c0 THEN '1365494176' COLLATE RTRIM END  NULLS FIRST, ((v0.c0 COLLATE BINARY) IS TRUE) DESC, vt0.c0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN TYPEOF(v0.c0) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END WHEN x'' THEN ((vt0.c0) NOT NULL) WHEN ((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)) THEN CAST(vt0.c0 AS NUMERIC) END) ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0)+(vt0.c0)) THEN ((v0.c0) BETWEEN (x'') AND (vt0.c0)) WHEN ((vt0.c0) NOT NULL) THEN CAST(vt0.c0 AS REAL) WHEN v0.c0 THEN '1365494176' COLLATE RTRIM END  NULLS FIRST, ((v0.c0 COLLATE BINARY) IS TRUE) DESC, vt0.c0;
SELECT SUM(count) FROM (SELECT ((CASE WHEN TYPEOF(v0.c0) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END WHEN x'' THEN ((vt0.c0) NOT NULL) WHEN ((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)) THEN CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0)+(vt0.c0)) THEN ((v0.c0) BETWEEN (x'') AND (vt0.c0)) WHEN ((vt0.c0) NOT NULL) THEN CAST(vt0.c0 AS REAL) WHEN v0.c0 THEN '1365494176' COLLATE RTRIM END  NULLS FIRST, ((v0.c0 COLLATE BINARY) IS TRUE) DESC, vt0.c0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN TYPEOF(v0.c0) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END WHEN x'' THEN ((vt0.c0) NOT NULL) WHEN ((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)) THEN CAST(vt0.c0 AS NUMERIC) END) ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0)+(vt0.c0)) THEN ((v0.c0) BETWEEN (x'') AND (vt0.c0)) WHEN ((vt0.c0) NOT NULL) THEN CAST(vt0.c0 AS REAL) WHEN v0.c0 THEN '1365494176' COLLATE RTRIM END  NULLS FIRST, ((v0.c0 COLLATE BINARY) IS TRUE) DESC, vt0.c0;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2 COLLATE BINARY) ORDER BY CAST(UNLIKELY('0.5902444093345586') AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(UNLIKELY('0.5902444093345586') AS BLOB) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2 COLLATE BINARY) ORDER BY CAST(UNLIKELY('0.5902444093345586') AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(UNLIKELY('0.5902444093345586') AS BLOB) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2 COLLATE BINARY) ORDER BY CAST(UNLIKELY('0.5902444093345586') AS BLOB) DESC;
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON ((((v0.c0) BETWEEN ('1990886266') AND (rt0.c3)))|((((rt0.c0, rt0.c0, vt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, v0.c0, 0X3eb31532))))) LEFT OUTER JOIN vt0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN ((NOT (rt0.c2))) AND (SQLITE_VERSION())) WHERE ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((((v0.c0) BETWEEN ('1990886266') AND (rt0.c3)))|((((rt0.c0, rt0.c0, vt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, v0.c0, 0x3eb31532))))) LEFT OUTER JOIN vt0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN ((NOT (rt0.c2))) AND (SQLITE_VERSION())));
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON ((((v0.c0) BETWEEN ('1990886266') AND (rt0.c3)))|((((rt0.c0, rt0.c0, vt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, v0.c0, 0X3eb31532))))) LEFT OUTER JOIN vt0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN ((NOT (rt0.c2))) AND (SQLITE_VERSION())) WHERE ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((((v0.c0) BETWEEN ('1990886266') AND (rt0.c3)))|((((rt0.c0, rt0.c0, vt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, v0.c0, 0x3eb31532))))) LEFT OUTER JOIN vt0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN ((NOT (rt0.c2))) AND (SQLITE_VERSION())));
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON ((((v0.c0) BETWEEN ('1990886266') AND (rt0.c3)))|((((rt0.c0, rt0.c0, vt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, v0.c0, 0X3eb31532))))) LEFT OUTER JOIN vt0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN ((NOT (rt0.c2))) AND (SQLITE_VERSION())) WHERE ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))));
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c0, rt0.c3, rt0.c3))<((rt0.c0, rt0.c0, rt0.c1))))*(CASE v0.c0  WHEN v0.c0 THEN rt0.c3 END))) ORDER BY (NOT (((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))), ((x'cacc')>(rt0.c1 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt0.c3, rt0.c3))<((rt0.c0, rt0.c0, rt0.c1))))*(CASE v0.c0  WHEN v0.c0 THEN rt0.c3 END))) IS TRUE)  as count FROM v0, rt0 ORDER BY (NOT (((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))), ((x'cacc')>(rt0.c1 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c0, rt0.c3, rt0.c3))<((rt0.c0, rt0.c0, rt0.c1))))*(CASE v0.c0  WHEN v0.c0 THEN rt0.c3 END))) ORDER BY (NOT (((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))), ((x'cacc')>(rt0.c1 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt0.c3, rt0.c3))<((rt0.c0, rt0.c0, rt0.c1))))*(CASE v0.c0  WHEN v0.c0 THEN rt0.c3 END))) IS TRUE)  as count FROM v0, rt0 ORDER BY (NOT (((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))), ((x'cacc')>(rt0.c1 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c0, rt0.c3, rt0.c3))<((rt0.c0, rt0.c0, rt0.c1))))*(CASE v0.c0  WHEN v0.c0 THEN rt0.c3 END))) ORDER BY (NOT (((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))), ((x'cacc')>(rt0.c1 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (json_type(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_type(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (json_type(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_type(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (json_type(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT * FROM rt0 CROSS JOIN v0 ON (((rt0.c3, rt0.c2, rt0.c3)) BETWEEN ((CASE WHEN v0.c0 THEN rt0.c3 WHEN NULL THEN v0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END, ((('T'))<((v0.c0))), ((rt0.c2)OR(rt0.c2)))) AND ((CAST(rt0.c0 AS NUMERIC), v0.c0 COLLATE NOCASE, ((v0.c0)>=(rt0.c0))))) WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE -1612494871 END) NOT BETWEEN ((((v0.c0, rt0.c3, rt0.c3)) BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c3, rt0.c2)))) AND (TRIM(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE -1612494871 END) NOT BETWEEN ((((v0.c0, rt0.c3, rt0.c3)) BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c3, rt0.c2)))) AND (TRIM(v0.c0)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((rt0.c3, rt0.c2, rt0.c3)) BETWEEN ((CASE WHEN v0.c0 THEN rt0.c3 WHEN NULL THEN v0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END, ((('T'))<((v0.c0))), ((rt0.c2)OR(rt0.c2)))) AND ((CAST(rt0.c0 AS NUMERIC), v0.c0 COLLATE NOCASE, ((v0.c0)>=(rt0.c0))))));
SELECT * FROM rt0 CROSS JOIN v0 ON (((rt0.c3, rt0.c2, rt0.c3)) BETWEEN ((CASE WHEN v0.c0 THEN rt0.c3 WHEN NULL THEN v0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END, ((('T'))<((v0.c0))), ((rt0.c2)OR(rt0.c2)))) AND ((CAST(rt0.c0 AS NUMERIC), v0.c0 COLLATE NOCASE, ((v0.c0)>=(rt0.c0))))) WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE -1612494871 END) NOT BETWEEN ((((v0.c0, rt0.c3, rt0.c3)) BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c3, rt0.c2)))) AND (TRIM(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE -1612494871 END) NOT BETWEEN ((((v0.c0, rt0.c3, rt0.c3)) BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c3, rt0.c2)))) AND (TRIM(v0.c0)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((rt0.c3, rt0.c2, rt0.c3)) BETWEEN ((CASE WHEN v0.c0 THEN rt0.c3 WHEN NULL THEN v0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END, ((('T'))<((v0.c0))), ((rt0.c2)OR(rt0.c2)))) AND ((CAST(rt0.c0 AS NUMERIC), v0.c0 COLLATE NOCASE, ((v0.c0)>=(rt0.c0))))));
SELECT * FROM rt0 CROSS JOIN v0 ON (((rt0.c3, rt0.c2, rt0.c3)) BETWEEN ((CASE WHEN v0.c0 THEN rt0.c3 WHEN NULL THEN v0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END, ((('T'))<((v0.c0))), ((rt0.c2)OR(rt0.c2)))) AND ((CAST(rt0.c0 AS NUMERIC), v0.c0 COLLATE NOCASE, ((v0.c0)>=(rt0.c0))))) WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE -1612494871 END) NOT BETWEEN ((((v0.c0, rt0.c3, rt0.c3)) BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c3, rt0.c2)))) AND (TRIM(v0.c0))));
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN v0 ON v0.c0 WHERE (LIKELY(DISTINCT CAST(v0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT CAST(v0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON v0.c0);
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN v0 ON v0.c0 WHERE (LIKELY(DISTINCT CAST(v0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT CAST(v0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON v0.c0);
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN v0 ON v0.c0 WHERE (LIKELY(DISTINCT CAST(v0.c0 AS NUMERIC)));
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((v0.c0)AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0)AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((v0.c0)AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0)AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((v0.c0)AND(v0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))OR((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))OR((+ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))OR((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))OR((+ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))OR((+ (rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 IN ()) IN ()));
SELECT * FROM rt0, vt0 WHERE (((CHAR(rt0.c1, rt0.c0, rt0.c2))|(0.4604012495057288)));
SELECT SUM(count) FROM (SELECT ((((CHAR(rt0.c1, rt0.c0, rt0.c2))|(0.4604012495057288))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((CHAR(rt0.c1, rt0.c0, rt0.c2))|(0.4604012495057288)));
SELECT SUM(count) FROM (SELECT ((((CHAR(rt0.c1, rt0.c0, rt0.c2))|(0.4604012495057288))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((CHAR(rt0.c1, rt0.c0, rt0.c2))|(0.4604012495057288)));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((~ (rt0.c1))) AND (((((((((rt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(vt0.c0))))) ORDER BY ((ABS(DISTINCT rt0.c2))LIKE(rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((~ (rt0.c1))) AND (((((((((rt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((ABS(DISTINCT rt0.c2))LIKE(rt0.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((~ (rt0.c1))) AND (((((((((rt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(vt0.c0))))) ORDER BY ((ABS(DISTINCT rt0.c2))LIKE(rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((~ (rt0.c1))) AND (((((((((rt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((ABS(DISTINCT rt0.c2))LIKE(rt0.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((~ (rt0.c1))) AND (((((((((rt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(vt0.c0))))) ORDER BY ((ABS(DISTINCT rt0.c2))LIKE(rt0.c1 COLLATE BINARY));
SELECT ALL * FROM vt0 WHERE ((((((NOT (vt0.c0)))OR(((vt0.c0)*(vt0.c0)))))OR(vt0.c0))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((NOT (vt0.c0)))OR(((vt0.c0)*(vt0.c0)))))OR(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((NOT (vt0.c0)))OR(((vt0.c0)*(vt0.c0)))))OR(vt0.c0))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((NOT (vt0.c0)))OR(((vt0.c0)*(vt0.c0)))))OR(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((NOT (vt0.c0)))OR(((vt0.c0)*(vt0.c0)))))OR(vt0.c0))) ORDER BY NULL  NULLS FIRST;
SELECT ALL * FROM vt0, v0, rt0 WHERE (CAST(((vt0.c0)LIKE(-4.93589779E8)) AS TEXT)) ORDER BY ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((0.09290409958944701))) IN ((+ (rt0.c0))))  NULLS FIRST, ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE  NULLS FIRST, (((HEX(rt0.c0)))>=((((rt0.c1)|(rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)LIKE(-4.93589779E8)) AS TEXT)) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((0.09290409958944701))) IN ((+ (rt0.c0))))  NULLS FIRST, ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE  NULLS FIRST, (((HEX(rt0.c0)))>=((((rt0.c1)|(rt0.c1)))))  NULLS LAST);
SELECT ALL * FROM vt0, v0, rt0 WHERE (CAST(((vt0.c0)LIKE(-4.93589779E8)) AS TEXT)) ORDER BY ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((0.09290409958944701))) IN ((+ (rt0.c0))))  NULLS FIRST, ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE  NULLS FIRST, (((HEX(rt0.c0)))>=((((rt0.c1)|(rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)LIKE(-4.93589779E8)) AS TEXT)) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((0.09290409958944701))) IN ((+ (rt0.c0))))  NULLS FIRST, ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE  NULLS FIRST, (((HEX(rt0.c0)))>=((((rt0.c1)|(rt0.c1)))))  NULLS LAST);
SELECT ALL * FROM vt0, v0, rt0 WHERE (CAST(((vt0.c0)LIKE(-4.93589779E8)) AS TEXT)) ORDER BY ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((0.09290409958944701))) IN ((+ (rt0.c0))))  NULLS FIRST, ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE  NULLS FIRST, (((HEX(rt0.c0)))>=((((rt0.c1)|(rt0.c1)))))  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE (((CASE WHEN rt0.c2 THEN v0.c0 END)&(v0.c0 COLLATE RTRIM))) ORDER BY (((((rt0.c1)*(v0.c0)), NULL, (((rt0.c3))>((v0.c0)))))<=(((x'd6bf' IN ()), rt0.c2 COLLATE BINARY, ((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))))  NULLS FIRST, LIKELIHOOD(((rt0.c1) BETWEEN (NULL) AND (v0.c0)), 0.9484791615030213) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN v0.c0 END)&(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((rt0.c1)*(v0.c0)), NULL, (((rt0.c3))>((v0.c0)))))<=(((x'd6bf' IN ()), rt0.c2 COLLATE BINARY, ((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))))  NULLS FIRST, LIKELIHOOD(((rt0.c1) BETWEEN (NULL) AND (v0.c0)), 0.9484791615030213) ASC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (((CASE WHEN rt0.c2 THEN v0.c0 END)&(v0.c0 COLLATE RTRIM))) ORDER BY (((((rt0.c1)*(v0.c0)), NULL, (((rt0.c3))>((v0.c0)))))<=(((x'd6bf' IN ()), rt0.c2 COLLATE BINARY, ((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))))  NULLS FIRST, LIKELIHOOD(((rt0.c1) BETWEEN (NULL) AND (v0.c0)), 0.9484791615030213) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN v0.c0 END)&(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((rt0.c1)*(v0.c0)), NULL, (((rt0.c3))>((v0.c0)))))<=(((x'd6bf' IN ()), rt0.c2 COLLATE BINARY, ((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))))  NULLS FIRST, LIKELIHOOD(((rt0.c1) BETWEEN (NULL) AND (v0.c0)), 0.9484791615030213) ASC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (((CASE WHEN rt0.c2 THEN v0.c0 END)&(v0.c0 COLLATE RTRIM))) ORDER BY (((((rt0.c1)*(v0.c0)), NULL, (((rt0.c3))>((v0.c0)))))<=(((x'd6bf' IN ()), rt0.c2 COLLATE BINARY, ((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))))  NULLS FIRST, LIKELIHOOD(((rt0.c1) BETWEEN (NULL) AND (v0.c0)), 0.9484791615030213) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))OR(((v0.c0)GLOB(v0.c0)))))OR(v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))OR(((v0.c0)GLOB(v0.c0)))))OR(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))OR(((v0.c0)GLOB(v0.c0)))))OR(v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))OR(((v0.c0)GLOB(v0.c0)))))OR(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))OR(((v0.c0)GLOB(v0.c0)))))OR(v0.c0 COLLATE BINARY)));
SELECT * FROM v0 WHERE (0xffffffffe2946aed) ORDER BY ((CAST('720390780' AS TEXT)) BETWEEN (((v0.c0) IS TRUE)) AND (v0.c0 COLLATE BINARY)), ABS(v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffe2946aed) IS TRUE)  as count FROM v0 ORDER BY ((CAST('720390780' AS TEXT)) BETWEEN (((v0.c0) IS TRUE)) AND (v0.c0 COLLATE BINARY)), ABS(v0.c0));
SELECT * FROM v0 WHERE (0xffffffffe2946aed) ORDER BY ((CAST('720390780' AS TEXT)) BETWEEN (((v0.c0) IS TRUE)) AND (v0.c0 COLLATE BINARY)), ABS(v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffe2946aed) IS TRUE)  as count FROM v0 ORDER BY ((CAST('720390780' AS TEXT)) BETWEEN (((v0.c0) IS TRUE)) AND (v0.c0 COLLATE BINARY)), ABS(v0.c0));
SELECT * FROM v0 WHERE (0xffffffffe2946aed) ORDER BY ((CAST('720390780' AS TEXT)) BETWEEN (((v0.c0) IS TRUE)) AND (v0.c0 COLLATE BINARY)), ABS(v0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) BETWEEN ((vt0.c0 IN ())) AND (CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) BETWEEN ((vt0.c0 IN ())) AND (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) BETWEEN ((vt0.c0 IN ())) AND (CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) BETWEEN ((vt0.c0 IN ())) AND (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) BETWEEN ((vt0.c0 IN ())) AND (CAST(vt0.c0 AS BLOB))));
SELECT * FROM v0, rt0 WHERE (((((((rt0.c1)/(0.32925842610702283)))OR(CAST(rt0.c2 AS INTEGER))))OR(-1.385150076E9)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)/(0.32925842610702283)))OR(CAST(rt0.c2 AS INTEGER))))OR(-1.385150076E9))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((((rt0.c1)/(0.32925842610702283)))OR(CAST(rt0.c2 AS INTEGER))))OR(-1.385150076E9)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)/(0.32925842610702283)))OR(CAST(rt0.c2 AS INTEGER))))OR(-1.385150076E9))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((((rt0.c1)/(0.32925842610702283)))OR(CAST(rt0.c2 AS INTEGER))))OR(-1.385150076E9)));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON x'' WHERE (((rt0.c3) BETWEEN (rt0.c3) AND ((((rt0.c1))<>((rt0.c3)))))) ORDER BY ((rt0.c2) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1))) AND (((((rt0.c0)OR(NULL)))OR('bo'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) BETWEEN (rt0.c3) AND ((((rt0.c1))<>((rt0.c3)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON x'' ORDER BY ((rt0.c2) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1))) AND (((((rt0.c0)OR(NULL)))OR('bo'))))  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON x'' WHERE (((rt0.c3) BETWEEN (rt0.c3) AND ((((rt0.c1))<>((rt0.c3)))))) ORDER BY ((rt0.c2) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1))) AND (((((rt0.c0)OR(NULL)))OR('bo'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) BETWEEN (rt0.c3) AND ((((rt0.c1))<>((rt0.c3)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON x'' ORDER BY ((rt0.c2) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1))) AND (((((rt0.c0)OR(NULL)))OR('bo'))))  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON x'' WHERE (((rt0.c3) BETWEEN (rt0.c3) AND ((((rt0.c1))<>((rt0.c3)))))) ORDER BY ((rt0.c2) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1))) AND (((((rt0.c0)OR(NULL)))OR('bo'))))  NULLS LAST;
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((((vt0.c0)-(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((((vt0.c0)-(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((((vt0.c0)-(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((((vt0.c0)-(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((((vt0.c0)-(vt0.c0))))));
SELECT ALL * FROM vt0, v0, rt0 WHERE (((((((((0.7585340899781873)AND((+ (NULL)))))AND(((rt0.c1)IS NOT(rt0.c2)))))AND(((rt0.c3)>(rt0.c1)))))AND(((((rt0.c3)AND(x'')))OR(x'')))));
SELECT SUM(count) FROM (SELECT ((((((((((0.7585340899781873)AND((+ (NULL)))))AND(((rt0.c1)IS NOT(rt0.c2)))))AND(((rt0.c3)>(rt0.c1)))))AND(((((rt0.c3)AND(x'')))OR(x''))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((((((((0.7585340899781873)AND((+ (NULL)))))AND(((rt0.c1)IS NOT(rt0.c2)))))AND(((rt0.c3)>(rt0.c1)))))AND(((((rt0.c3)AND(x'')))OR(x'')))));
SELECT SUM(count) FROM (SELECT ((((((((((0.7585340899781873)AND((+ (NULL)))))AND(((rt0.c1)IS NOT(rt0.c2)))))AND(((rt0.c3)>(rt0.c1)))))AND(((((rt0.c3)AND(x'')))OR(x''))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((((((((0.7585340899781873)AND((+ (NULL)))))AND(((rt0.c1)IS NOT(rt0.c2)))))AND(((rt0.c3)>(rt0.c1)))))AND(((((rt0.c3)AND(x'')))OR(x'')))));
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2) IS TRUE) COLLATE RTRIM) ORDER BY CHANGES()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY CHANGES()  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2) IS TRUE) COLLATE RTRIM) ORDER BY CHANGES()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY CHANGES()  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2) IS TRUE) COLLATE RTRIM) ORDER BY CHANGES()  NULLS FIRST;
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON ((CASE '-671901732'  WHEN rt0.c2 THEN rt0.c0 END)OR(v0.c0 COLLATE NOCASE)) WHERE ((CAST(rt0.c2 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS REAL) IN ())) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((CASE '-671901732'  WHEN rt0.c2 THEN rt0.c0 END)OR(v0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON ((CASE '-671901732'  WHEN rt0.c2 THEN rt0.c0 END)OR(v0.c0 COLLATE NOCASE)) WHERE ((CAST(rt0.c2 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS REAL) IN ())) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((CASE '-671901732'  WHEN rt0.c2 THEN rt0.c0 END)OR(v0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON ((CASE '-671901732'  WHEN rt0.c2 THEN rt0.c0 END)OR(v0.c0 COLLATE NOCASE)) WHERE ((CAST(rt0.c2 AS REAL) IN ()));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST((((-1.298642935E9, v0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c2))) AS BLOB)) ORDER BY ((((rt0.c1) IS TRUE))IS(rt0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((-1.298642935E9, v0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c2))) AS BLOB)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c1) IS TRUE))IS(rt0.c2))  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST((((-1.298642935E9, v0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c2))) AS BLOB)) ORDER BY ((((rt0.c1) IS TRUE))IS(rt0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((-1.298642935E9, v0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c2))) AS BLOB)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c1) IS TRUE))IS(rt0.c2))  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST((((-1.298642935E9, v0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c2))) AS BLOB)) ORDER BY ((((rt0.c1) IS TRUE))IS(rt0.c2))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY (((- (rt0.c0)))*(TOTAL_CHANGES()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((- (rt0.c0)))*(TOTAL_CHANGES())));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY (((- (rt0.c0)))*(TOTAL_CHANGES()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((- (rt0.c0)))*(TOTAL_CHANGES())));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY (((- (rt0.c0)))*(TOTAL_CHANGES()));
SELECT ALL * FROM v0, rt0, vt0 WHERE (((rt0.c2 COLLATE RTRIM)!=(rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM)!=(rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((rt0.c2 COLLATE RTRIM)!=(rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM)!=(rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((rt0.c2 COLLATE RTRIM)!=(rt0.c3 COLLATE NOCASE)));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)IS NOT('0.4604012495057288'))) NOT BETWEEN (v0.c0) AND (v0.c0))) ORDER BY x'' ASC  NULLS FIRST, v0.c0, ((((v0.c0) ISNULL)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS NOT('0.4604012495057288'))) NOT BETWEEN (v0.c0) AND (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY x'' ASC  NULLS FIRST, v0.c0, ((((v0.c0) ISNULL)) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)IS NOT('0.4604012495057288'))) NOT BETWEEN (v0.c0) AND (v0.c0))) ORDER BY x'' ASC  NULLS FIRST, v0.c0, ((((v0.c0) ISNULL)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS NOT('0.4604012495057288'))) NOT BETWEEN (v0.c0) AND (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY x'' ASC  NULLS FIRST, v0.c0, ((((v0.c0) ISNULL)) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)IS NOT('0.4604012495057288'))) NOT BETWEEN (v0.c0) AND (v0.c0))) ORDER BY x'' ASC  NULLS FIRST, v0.c0, ((((v0.c0) ISNULL)) IS TRUE)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS TEXT)) ORDER BY TYPEOF((~ (vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF((~ (vt0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS TEXT)) ORDER BY TYPEOF((~ (vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF((~ (vt0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS TEXT)) ORDER BY TYPEOF((~ (vt0.c0))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((((((((rt0.c0, vt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, vt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2))))AND(rt0.c1 COLLATE NOCASE)))OR(ABS(v0.c0)))) ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) DESC, ((CAST(rt0.c2 AS NUMERIC)) ISNULL), (((CAST(v0.c0 AS TEXT), ((rt0.c1)LIKE(v0.c0)), SQLITE_SOURCE_ID()))>=(('146759500', rt0.c2, ((((vt0.c0)OR(rt0.c3)))OR(rt0.c3))))) ASC, CAST(((vt0.c0)IS(rt0.c3)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0, vt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, vt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2))))AND(rt0.c1 COLLATE NOCASE)))OR(ABS(v0.c0)))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) DESC, ((CAST(rt0.c2 AS NUMERIC)) ISNULL), (((CAST(v0.c0 AS TEXT), ((rt0.c1)LIKE(v0.c0)), SQLITE_SOURCE_ID()))>=(('146759500', rt0.c2, ((((vt0.c0)OR(rt0.c3)))OR(rt0.c3))))) ASC, CAST(((vt0.c0)IS(rt0.c3)) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((((((((rt0.c0, vt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, vt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2))))AND(rt0.c1 COLLATE NOCASE)))OR(ABS(v0.c0)))) ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) DESC, ((CAST(rt0.c2 AS NUMERIC)) ISNULL), (((CAST(v0.c0 AS TEXT), ((rt0.c1)LIKE(v0.c0)), SQLITE_SOURCE_ID()))>=(('146759500', rt0.c2, ((((vt0.c0)OR(rt0.c3)))OR(rt0.c3))))) ASC, CAST(((vt0.c0)IS(rt0.c3)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0, vt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, vt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2))))AND(rt0.c1 COLLATE NOCASE)))OR(ABS(v0.c0)))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) DESC, ((CAST(rt0.c2 AS NUMERIC)) ISNULL), (((CAST(v0.c0 AS TEXT), ((rt0.c1)LIKE(v0.c0)), SQLITE_SOURCE_ID()))>=(('146759500', rt0.c2, ((((vt0.c0)OR(rt0.c3)))OR(rt0.c3))))) ASC, CAST(((vt0.c0)IS(rt0.c3)) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((((((((rt0.c0, vt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, vt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2))))AND(rt0.c1 COLLATE NOCASE)))OR(ABS(v0.c0)))) ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) DESC, ((CAST(rt0.c2 AS NUMERIC)) ISNULL), (((CAST(v0.c0 AS TEXT), ((rt0.c1)LIKE(v0.c0)), SQLITE_SOURCE_ID()))>=(('146759500', rt0.c2, ((((vt0.c0)OR(rt0.c3)))OR(rt0.c3))))) ASC, CAST(((vt0.c0)IS(rt0.c3)) AS NUMERIC)  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY)AND(CAST(rt0.c2 AS REAL))))AND(((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 COLLATE BINARY)AND(CAST(rt0.c2 AS REAL))))AND(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY)AND(CAST(rt0.c2 AS REAL))))AND(((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 COLLATE BINARY)AND(CAST(rt0.c2 AS REAL))))AND(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY)AND(CAST(rt0.c2 AS REAL))))AND(((rt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(((rt0.c2)*(rt0.c3)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)*(rt0.c3)) AS TEXT)) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(((rt0.c2)*(rt0.c3)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)*(rt0.c3)) AS TEXT)) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(((rt0.c2)*(rt0.c3)) AS TEXT));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (2006802562) ORDER BY ((((((NULL)AND(rt0.c3)))OR(rt0.c0))) BETWEEN (rt0.c0) AND ((+ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((2006802562) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((((NULL)AND(rt0.c3)))OR(rt0.c0))) BETWEEN (rt0.c0) AND ((+ (rt0.c1)))));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (2006802562) ORDER BY ((((((NULL)AND(rt0.c3)))OR(rt0.c0))) BETWEEN (rt0.c0) AND ((+ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((2006802562) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((((NULL)AND(rt0.c3)))OR(rt0.c0))) BETWEEN (rt0.c0) AND ((+ (rt0.c1)))));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (2006802562) ORDER BY ((((((NULL)AND(rt0.c3)))OR(rt0.c0))) BETWEEN (rt0.c0) AND ((+ (rt0.c1))));
SELECT * FROM rt0, v0 WHERE ((((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN ((rt0.c0 IN (rt0.c3, rt0.c1))) AND (((((rt0.c3)AND(rt0.c1)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN ((rt0.c0 IN (rt0.c3, rt0.c1))) AND (((((rt0.c3)AND(rt0.c1)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN ((rt0.c0 IN (rt0.c3, rt0.c1))) AND (((((rt0.c3)AND(rt0.c1)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN ((rt0.c0 IN (rt0.c3, rt0.c1))) AND (((((rt0.c3)AND(rt0.c1)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN ((rt0.c0 IN (rt0.c3, rt0.c1))) AND (((((rt0.c3)AND(rt0.c1)))AND(rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3 IN (rt0.c2, rt0.c1)))+(CAST(rt0.c1 AS INTEGER)))) ORDER BY LOWER(rt0.c1 COLLATE BINARY) ASC, 0.38594074200146256 ASC, (+ (((rt0.c3)AND(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN (rt0.c2, rt0.c1)))+(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY LOWER(rt0.c1 COLLATE BINARY) ASC, 0.38594074200146256 ASC, (+ (((rt0.c3)AND(rt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3 IN (rt0.c2, rt0.c1)))+(CAST(rt0.c1 AS INTEGER)))) ORDER BY LOWER(rt0.c1 COLLATE BINARY) ASC, 0.38594074200146256 ASC, (+ (((rt0.c3)AND(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN (rt0.c2, rt0.c1)))+(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY LOWER(rt0.c1 COLLATE BINARY) ASC, 0.38594074200146256 ASC, (+ (((rt0.c3)AND(rt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3 IN (rt0.c2, rt0.c1)))+(CAST(rt0.c1 AS INTEGER)))) ORDER BY LOWER(rt0.c1 COLLATE BINARY) ASC, 0.38594074200146256 ASC, (+ (((rt0.c3)AND(rt0.c1))))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((rt0.c2)*(rt0.c3))) NOT BETWEEN ((rt0.c1 IN ())) AND ((((v0.c0))>=((rt0.c3)))))) ORDER BY ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (v0.c0)))IS(rt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)*(rt0.c3))) NOT BETWEEN ((rt0.c1 IN ())) AND ((((v0.c0))>=((rt0.c3)))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (v0.c0)))IS(rt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((rt0.c2)*(rt0.c3))) NOT BETWEEN ((rt0.c1 IN ())) AND ((((v0.c0))>=((rt0.c3)))))) ORDER BY ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (v0.c0)))IS(rt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)*(rt0.c3))) NOT BETWEEN ((rt0.c1 IN ())) AND ((((v0.c0))>=((rt0.c3)))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (v0.c0)))IS(rt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((rt0.c2)*(rt0.c3))) NOT BETWEEN ((rt0.c1 IN ())) AND ((((v0.c0))>=((rt0.c3)))))) ORDER BY ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (v0.c0)))IS(rt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (vt0.c0);
SELECT * FROM vt0, v0 WHERE (vt0.c0) ORDER BY v0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c0 DESC  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (vt0.c0) ORDER BY v0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c0 DESC  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (vt0.c0) ORDER BY v0.c0 DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CASE WHEN (((v0.c0, rt0.c0, rt0.c0))<((v0.c0, rt0.c1, rt0.c0))) THEN ((rt0.c1)+(vt0.c0)) ELSE (((rt0.c2))>(('2X!脠磫'))) END) ORDER BY (((((v0.c0))=((rt0.c1))))|(CAST(v0.c0 AS TEXT))) DESC  NULLS FIRST, (vt0.c0 IN ()) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((v0.c0, rt0.c0, rt0.c0))<((v0.c0, rt0.c1, rt0.c0))) THEN ((rt0.c1)+(vt0.c0)) ELSE (((rt0.c2))>(('2X!脠磫'))) END) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((((v0.c0))==((rt0.c1))))|(CAST(v0.c0 AS TEXT))) DESC  NULLS FIRST, (vt0.c0 IN ()) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CASE WHEN (((v0.c0, rt0.c0, rt0.c0))<((v0.c0, rt0.c1, rt0.c0))) THEN ((rt0.c1)+(vt0.c0)) ELSE (((rt0.c2))>(('2X!脠磫'))) END) ORDER BY (((((v0.c0))=((rt0.c1))))|(CAST(v0.c0 AS TEXT))) DESC  NULLS FIRST, (vt0.c0 IN ()) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((v0.c0, rt0.c0, rt0.c0))<((v0.c0, rt0.c1, rt0.c0))) THEN ((rt0.c1)+(vt0.c0)) ELSE (((rt0.c2))>(('2X!脠磫'))) END) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((((v0.c0))==((rt0.c1))))|(CAST(v0.c0 AS TEXT))) DESC  NULLS FIRST, (vt0.c0 IN ()) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CASE WHEN (((v0.c0, rt0.c0, rt0.c0))<((v0.c0, rt0.c1, rt0.c0))) THEN ((rt0.c1)+(vt0.c0)) ELSE (((rt0.c2))>(('2X!脠磫'))) END) ORDER BY (((((v0.c0))=((rt0.c1))))|(CAST(v0.c0 AS TEXT))) DESC  NULLS FIRST, (vt0.c0 IN ()) COLLATE RTRIM;
SELECT * FROM v0 WHERE (v0.c0) ORDER BY ((((((v0.c0)OR(v0.c0)))AND('-297947225'))) BETWEEN ((+ (v0.c0))) AND ((v0.c0 IN ()))) ASC, ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))<>((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)OR(v0.c0)))AND('-297947225'))) BETWEEN ((+ (v0.c0))) AND ((v0.c0 IN ()))) ASC, ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))<>((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY ((((((v0.c0)OR(v0.c0)))AND('-297947225'))) BETWEEN ((+ (v0.c0))) AND ((v0.c0 IN ()))) ASC, ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))<>((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)OR(v0.c0)))AND('-297947225'))) BETWEEN ((+ (v0.c0))) AND ((v0.c0 IN ()))) ASC, ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))<>((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY ((((((v0.c0)OR(v0.c0)))AND('-297947225'))) BETWEEN ((+ (v0.c0))) AND ((v0.c0 IN ()))) ASC, ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))<>((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)IS NOT(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)IS NOT(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)IS NOT(rt0.c2))) NOTNULL));
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c2))<=((rt0.c3))) COLLATE RTRIM) ORDER BY HEX(DISTINCT rt0.c2) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2))<=((rt0.c3))) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 ORDER BY HEX(DISTINCT rt0.c2) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c2))<=((rt0.c3))) COLLATE RTRIM) ORDER BY HEX(DISTINCT rt0.c2) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2))<=((rt0.c3))) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 ORDER BY HEX(DISTINCT rt0.c2) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c2))<=((rt0.c3))) COLLATE RTRIM) ORDER BY HEX(DISTINCT rt0.c2) ASC;
SELECT * FROM v0, rt0 CROSS JOIN vt0 ON (((((((rt0.c0, rt0.c1, v0.c0))>=((x'9258', vt0.c0, v0.c0))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3)))))OR(v0.c0 COLLATE BINARY)) WHERE (rt0.c2) ORDER BY 0.6198969954261098  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0, rt0 CROSS JOIN vt0 ON (((((((rt0.c0, rt0.c1, v0.c0))>=((x'9258', vt0.c0, v0.c0))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3)))))OR(v0.c0 COLLATE BINARY)) ORDER BY 0.6198969954261098  NULLS FIRST);
SELECT * FROM v0, rt0 CROSS JOIN vt0 ON (((((((rt0.c0, rt0.c1, v0.c0))>=((x'9258', vt0.c0, v0.c0))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3)))))OR(v0.c0 COLLATE BINARY)) WHERE (rt0.c2) ORDER BY 0.6198969954261098  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0, rt0 CROSS JOIN vt0 ON (((((((rt0.c0, rt0.c1, v0.c0))>=((x'9258', vt0.c0, v0.c0))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3)))))OR(v0.c0 COLLATE BINARY)) ORDER BY 0.6198969954261098  NULLS FIRST);
SELECT * FROM v0, rt0 CROSS JOIN vt0 ON (((((((rt0.c0, rt0.c1, v0.c0))>=((x'9258', vt0.c0, v0.c0))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3)))))OR(v0.c0 COLLATE BINARY)) WHERE (rt0.c2) ORDER BY 0.6198969954261098  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0)/(v0.c0)))) AND ((v0.c0))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((v0.c0)/(v0.c0)))) AND ((v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0)/(v0.c0)))) AND ((v0.c0))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((v0.c0)/(v0.c0)))) AND ((v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0)/(v0.c0)))) AND ((v0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE ('TRUE' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (('TRUE' COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ('TRUE' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (('TRUE' COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ('TRUE' COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN v0 ON ((0.10171539210682379) ISNULL) WHERE (((((((((CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN 0.26109720472265463 WHEN 0.5747761135150065 THEN rt0.c3 ELSE rt0.c2 END)AND('T\r')))OR(CAST(rt0.c3 AS REAL))))AND((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(((0.7279484101286721)||(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN 0.26109720472265463 WHEN 0.5747761135150065 THEN rt0.c3 ELSE rt0.c2 END)AND('T\r')))OR(CAST(rt0.c3 AS REAL))))AND((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(((0.7279484101286721)||(v0.c0))))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON ((0.10171539210682379) ISNULL));
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN v0 ON ((0.10171539210682379) ISNULL) WHERE (((((((((CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN 0.26109720472265463 WHEN 0.5747761135150065 THEN rt0.c3 ELSE rt0.c2 END)AND('T\r')))OR(CAST(rt0.c3 AS REAL))))AND((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(((0.7279484101286721)||(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN 0.26109720472265463 WHEN 0.5747761135150065 THEN rt0.c3 ELSE rt0.c2 END)AND('T\r')))OR(CAST(rt0.c3 AS REAL))))AND((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(((0.7279484101286721)||(v0.c0))))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON ((0.10171539210682379) ISNULL));
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN v0 ON ((0.10171539210682379) ISNULL) WHERE (((((((((CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN 0.26109720472265463 WHEN 0.5747761135150065 THEN rt0.c3 ELSE rt0.c2 END)AND('T\r')))OR(CAST(rt0.c3 AS REAL))))AND((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(((0.7279484101286721)||(v0.c0)))));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (CAST(((rt0.c2)%(rt0.c0)) AS REAL)) ORDER BY ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)))AND(vt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)%(rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)))AND(vt0.c0)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (CAST(((rt0.c2)%(rt0.c0)) AS REAL)) ORDER BY ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)))AND(vt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)%(rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)))AND(vt0.c0)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (CAST(((rt0.c2)%(rt0.c0)) AS REAL)) ORDER BY ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)))AND(vt0.c0)) COLLATE RTRIM ASC;
SELECT ALL * FROM rt0 WHERE ('-1385150076');
SELECT SUM(count) FROM (SELECT ALL (('-1385150076') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('-1385150076');
SELECT SUM(count) FROM (SELECT ALL (('-1385150076') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('-1385150076');
SELECT ALL COUNT(*) FROM vt0 WHERE (((((LIKELY(DISTINCT vt0.c0))AND(((vt0.c0)<<(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELY(DISTINCT vt0.c0))AND(((vt0.c0)<<(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((LIKELY(DISTINCT vt0.c0))AND(((vt0.c0)<<(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELY(DISTINCT vt0.c0))AND(((vt0.c0)<<(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((LIKELY(DISTINCT vt0.c0))AND(((vt0.c0)<<(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((((NOT (v0.c0)))<>(LTRIM(rt0.c1)))) ORDER BY json_array((rt0.c0 IN ()), rt0.c0) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0)))!=(LTRIM(rt0.c1)))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY json_array((rt0.c0 IN ()), rt0.c0) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((((NOT (v0.c0)))<>(LTRIM(rt0.c1)))) ORDER BY json_array((rt0.c0 IN ()), rt0.c0) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0)))!=(LTRIM(rt0.c1)))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY json_array((rt0.c0 IN ()), rt0.c0) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((((NOT (v0.c0)))<>(LTRIM(rt0.c1)))) ORDER BY json_array((rt0.c0 IN ()), rt0.c0) ASC;
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON CASE WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c0) ISNULL) END WHERE (CASE 0.9093906574881777  WHEN (NOT (v0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)) ELSE COALESCE(rt0.c3, v0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE 0.9093906574881777  WHEN (NOT (v0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)) ELSE COALESCE(rt0.c3, v0.c0) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CASE WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c0) ISNULL) END);
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON CASE WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c0) ISNULL) END WHERE (CASE 0.9093906574881777  WHEN (NOT (v0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)) ELSE COALESCE(rt0.c3, v0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE 0.9093906574881777  WHEN (NOT (v0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)) ELSE COALESCE(rt0.c3, v0.c0) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CASE WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c0) ISNULL) END);
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON CASE WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c0) ISNULL) END WHERE (CASE 0.9093906574881777  WHEN (NOT (v0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)) ELSE COALESCE(rt0.c3, v0.c0) END);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))IS NOT(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))IS NOT(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))IS NOT(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))IS NOT(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))IS NOT(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM v0 WHERE ((~ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((~ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((~ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT * FROM v0 WHERE ((+ (v0.c0 COLLATE NOCASE))) ORDER BY ((((((((((((((('-449708237')OR(v0.c0)))AND(x'')))OR(v0.c0)))OR(v0.c0)))OR(x'')))OR(v0.c0))))<=((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((((((('-449708237')OR(v0.c0)))AND(x'')))OR(v0.c0)))OR(v0.c0)))OR(x'')))OR(v0.c0))))<=((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE ((+ (v0.c0 COLLATE NOCASE))) ORDER BY ((((((((((((((('-449708237')OR(v0.c0)))AND(x'')))OR(v0.c0)))OR(v0.c0)))OR(x'')))OR(v0.c0))))<=((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((((((('-449708237')OR(v0.c0)))AND(x'')))OR(v0.c0)))OR(v0.c0)))OR(x'')))OR(v0.c0))))<=((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE ((+ (v0.c0 COLLATE NOCASE))) ORDER BY ((((((((((((((('-449708237')OR(v0.c0)))AND(x'')))OR(v0.c0)))OR(v0.c0)))OR(x'')))OR(v0.c0))))<=((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((rt0.c2 COLLATE NOCASE) ISNULL)) ORDER BY ((((((rt0.c1)GLOB(rt0.c0)))OR((((rt0.c2))>((v0.c0))))))AND(rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((rt0.c1)GLOB(rt0.c0)))OR((((rt0.c2))>((v0.c0))))))AND(rt0.c2))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((rt0.c2 COLLATE NOCASE) ISNULL)) ORDER BY ((((((rt0.c1)GLOB(rt0.c0)))OR((((rt0.c2))>((v0.c0))))))AND(rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((rt0.c1)GLOB(rt0.c0)))OR((((rt0.c2))>((v0.c0))))))AND(rt0.c2))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((rt0.c2 COLLATE NOCASE) ISNULL)) ORDER BY ((((((rt0.c1)GLOB(rt0.c0)))OR((((rt0.c2))>((v0.c0))))))AND(rt0.c2))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((rt0.c3)|(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((rt0.c3)|(rt0.c0))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((rt0.c3)|(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((rt0.c3)|(rt0.c0))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((rt0.c3)|(rt0.c0)));
SELECT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN (((rt0.c1 IN ()))) AND ((CASE WHEN rt0.c2 THEN rt0.c3 END)))) ORDER BY TRIM(DISTINCT CAST(rt0.c3 AS REAL), (+ (rt0.c1))), NULLIF(DISTINCT ((rt0.c2) ISNULL), (rt0.c3 IN ())) DESC  NULLS LAST, (+ (((x'f3f7') BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN (((rt0.c1 IN ()))) AND ((CASE WHEN rt0.c2 THEN rt0.c3 END)))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY TRIM(DISTINCT CAST(rt0.c3 AS REAL), (+ (rt0.c1))), NULLIF(DISTINCT ((rt0.c2) ISNULL), (rt0.c3 IN ())) DESC  NULLS LAST, (+ (((x'f3f7') BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN (((rt0.c1 IN ()))) AND ((CASE WHEN rt0.c2 THEN rt0.c3 END)))) ORDER BY TRIM(DISTINCT CAST(rt0.c3 AS REAL), (+ (rt0.c1))), NULLIF(DISTINCT ((rt0.c2) ISNULL), (rt0.c3 IN ())) DESC  NULLS LAST, (+ (((x'f3f7') BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN (((rt0.c1 IN ()))) AND ((CASE WHEN rt0.c2 THEN rt0.c3 END)))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY TRIM(DISTINCT CAST(rt0.c3 AS REAL), (+ (rt0.c1))), NULLIF(DISTINCT ((rt0.c2) ISNULL), (rt0.c3 IN ())) DESC  NULLS LAST, (+ (((x'f3f7') BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN (((rt0.c1 IN ()))) AND ((CASE WHEN rt0.c2 THEN rt0.c3 END)))) ORDER BY TRIM(DISTINCT CAST(rt0.c3 AS REAL), (+ (rt0.c1))), NULLIF(DISTINCT ((rt0.c2) ISNULL), (rt0.c3 IN ())) DESC  NULLS LAST, (+ (((x'f3f7') BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (IFNULL(NULL, (((rt0.c0))>=((rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((IFNULL(NULL, (((rt0.c0))>=((rt0.c3))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (IFNULL(NULL, (((rt0.c0))>=((rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((IFNULL(NULL, (((rt0.c0))>=((rt0.c3))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (IFNULL(NULL, (((rt0.c0))>=((rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((((rt0.c3 COLLATE NOCASE))>((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))))) ORDER BY (((NOT (rt0.c0)))<<(CAST(v0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 COLLATE NOCASE))>((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((NOT (rt0.c0)))<<(CAST(v0.c0 AS TEXT)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((((rt0.c3 COLLATE NOCASE))>((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))))) ORDER BY (((NOT (rt0.c0)))<<(CAST(v0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 COLLATE NOCASE))>((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((NOT (rt0.c0)))<<(CAST(v0.c0 AS TEXT)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((((rt0.c3 COLLATE NOCASE))>((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))))) ORDER BY (((NOT (rt0.c0)))<<(CAST(v0.c0 AS TEXT)))  NULLS LAST;
SELECT ALL * FROM v0, rt0, vt0 WHERE ((+ ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE ((+ ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE ((+ ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c3)/(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)/(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c3)/(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)/(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c3)/(vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM v0, vt0, rt0 WHERE (CAST(TYPEOF(DISTINCT v0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(DISTINCT v0.c0) AS TEXT)) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (CAST(TYPEOF(DISTINCT v0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(DISTINCT v0.c0) AS TEXT)) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (CAST(TYPEOF(DISTINCT v0.c0) AS TEXT));
SELECT ALL * FROM vt0, rt0, v0 WHERE (CAST('915087482' AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST('915087482' AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (CAST('915087482' AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST('915087482' AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (CAST('915087482' AS BLOB) COLLATE BINARY);
SELECT ALL * FROM rt0 WHERE (NULL) ORDER BY ((x'') NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((x'') NOT NULL));
SELECT ALL * FROM rt0 WHERE (NULL) ORDER BY ((x'') NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((x'') NOT NULL));
SELECT ALL * FROM rt0 WHERE (NULL) ORDER BY ((x'') NOT NULL);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((((v0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))), rt0.c2, CAST(vt0.c0 AS TEXT)))>=((((((rt0.c1)OR(v0.c0)))AND(rt0.c2)), rt0.c2, CAST(v0.c0 AS NUMERIC)))) LEFT OUTER JOIN v0 ON ((((((((((vt0.c0)+(v0.c0)))OR((NOT (rt0.c1)))))OR(rt0.c2)))AND(((rt0.c3)AND(v0.c0)))))OR(COALESCE(v0.c0, rt0.c3))) WHERE (((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))AND(rt0.c2 COLLATE NOCASE)))OR(CASE vt0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END))) ORDER BY ((rt0.c1) NOT BETWEEN (CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c2 END) AND (((rt0.c3)>=(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))AND(rt0.c2 COLLATE NOCASE)))OR(CASE vt0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((((v0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))), rt0.c2, CAST(vt0.c0 AS TEXT)))>=((((((rt0.c1)OR(v0.c0)))AND(rt0.c2)), rt0.c2, CAST(v0.c0 AS NUMERIC)))) LEFT OUTER JOIN v0 ON ((((((((((vt0.c0)+(v0.c0)))OR((NOT (rt0.c1)))))OR(rt0.c2)))AND(((rt0.c3)AND(v0.c0)))))OR(COALESCE(v0.c0, rt0.c3))) ORDER BY ((rt0.c1) NOT BETWEEN (CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c2 END) AND (((rt0.c3)>=(vt0.c0))))  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((((v0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))), rt0.c2, CAST(vt0.c0 AS TEXT)))>=((((((rt0.c1)OR(v0.c0)))AND(rt0.c2)), rt0.c2, CAST(v0.c0 AS NUMERIC)))) LEFT OUTER JOIN v0 ON ((((((((((vt0.c0)+(v0.c0)))OR((NOT (rt0.c1)))))OR(rt0.c2)))AND(((rt0.c3)AND(v0.c0)))))OR(COALESCE(v0.c0, rt0.c3))) WHERE (((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))AND(rt0.c2 COLLATE NOCASE)))OR(CASE vt0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END))) ORDER BY ((rt0.c1) NOT BETWEEN (CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c2 END) AND (((rt0.c3)>=(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))AND(rt0.c2 COLLATE NOCASE)))OR(CASE vt0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((((v0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))), rt0.c2, CAST(vt0.c0 AS TEXT)))>=((((((rt0.c1)OR(v0.c0)))AND(rt0.c2)), rt0.c2, CAST(v0.c0 AS NUMERIC)))) LEFT OUTER JOIN v0 ON ((((((((((vt0.c0)+(v0.c0)))OR((NOT (rt0.c1)))))OR(rt0.c2)))AND(((rt0.c3)AND(v0.c0)))))OR(COALESCE(v0.c0, rt0.c3))) ORDER BY ((rt0.c1) NOT BETWEEN (CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c2 END) AND (((rt0.c3)>=(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 NOT INDEXED, v0 WHERE (((v0.c0) NOT BETWEEN (((((vt0.c0)AND(v0.c0)))OR(vt0.c0))) AND (v0.c0))) ORDER BY CAST((- (vt0.c0)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (((((vt0.c0)AND(v0.c0)))OR(vt0.c0))) AND (v0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST((- (vt0.c0)) AS REAL) DESC  NULLS LAST);
SELECT ALL * FROM vt0 NOT INDEXED, v0 WHERE (((v0.c0) NOT BETWEEN (((((vt0.c0)AND(v0.c0)))OR(vt0.c0))) AND (v0.c0))) ORDER BY CAST((- (vt0.c0)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (((((vt0.c0)AND(v0.c0)))OR(vt0.c0))) AND (v0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST((- (vt0.c0)) AS REAL) DESC  NULLS LAST);
SELECT ALL * FROM vt0 NOT INDEXED, v0 WHERE (((v0.c0) NOT BETWEEN (((((vt0.c0)AND(v0.c0)))OR(vt0.c0))) AND (v0.c0))) ORDER BY CAST((- (vt0.c0)) AS REAL) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (',j{[qu') ORDER BY 0.045346079539348993 ASC, ((((CAST(vt0.c0 AS REAL))AND((~ (vt0.c0)))))OR(((vt0.c0)GLOB(vt0.c0)))) DESC, ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CAST(vt0.c0 AS BLOB), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)AND(vt0.c0)), ((vt0.c0) IS TRUE)))==((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), NULL, (vt0.c0 IN ()), ((vt0.c0)<(vt0.c0)), vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((',j{[qu') IS TRUE)  as count FROM vt0 ORDER BY 0.045346079539348993 ASC, ((((CAST(vt0.c0 AS REAL))AND((~ (vt0.c0)))))OR(((vt0.c0)GLOB(vt0.c0)))) DESC, ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CAST(vt0.c0 AS BLOB), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)AND(vt0.c0)), ((vt0.c0) IS TRUE)))=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), NULL, (vt0.c0 IN ()), ((vt0.c0)<(vt0.c0)), vt0.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (',j{[qu') ORDER BY 0.045346079539348993 ASC, ((((CAST(vt0.c0 AS REAL))AND((~ (vt0.c0)))))OR(((vt0.c0)GLOB(vt0.c0)))) DESC, ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CAST(vt0.c0 AS BLOB), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)AND(vt0.c0)), ((vt0.c0) IS TRUE)))==((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), NULL, (vt0.c0 IN ()), ((vt0.c0)<(vt0.c0)), vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((',j{[qu') IS TRUE)  as count FROM vt0 ORDER BY 0.045346079539348993 ASC, ((((CAST(vt0.c0 AS REAL))AND((~ (vt0.c0)))))OR(((vt0.c0)GLOB(vt0.c0)))) DESC, ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CAST(vt0.c0 AS BLOB), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)AND(vt0.c0)), ((vt0.c0) IS TRUE)))=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), NULL, (vt0.c0 IN ()), ((vt0.c0)<(vt0.c0)), vt0.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (',j{[qu') ORDER BY 0.045346079539348993 ASC, ((((CAST(vt0.c0 AS REAL))AND((~ (vt0.c0)))))OR(((vt0.c0)GLOB(vt0.c0)))) DESC, ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CAST(vt0.c0 AS BLOB), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)AND(vt0.c0)), ((vt0.c0) IS TRUE)))==((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), NULL, (vt0.c0 IN ()), ((vt0.c0)<(vt0.c0)), vt0.c0))) DESC  NULLS LAST;
SELECT * FROM v0 CROSS JOIN vt0 ON ((x'') NOT NULL) RIGHT OUTER JOIN rt0 ON (NOT (LAST_INSERT_ROWID())) WHERE (((((vt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((x'') NOT NULL) RIGHT OUTER JOIN rt0 ON (NOT (LAST_INSERT_ROWID())));
SELECT * FROM v0 CROSS JOIN vt0 ON ((x'') NOT NULL) RIGHT OUTER JOIN rt0 ON (NOT (LAST_INSERT_ROWID())) WHERE (((((vt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((x'') NOT NULL) RIGHT OUTER JOIN rt0 ON (NOT (LAST_INSERT_ROWID())));
SELECT * FROM v0 CROSS JOIN vt0 ON ((x'') NOT NULL) RIGHT OUTER JOIN rt0 ON (NOT (LAST_INSERT_ROWID())) WHERE (((((vt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))) IS FALSE));
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c0) BETWEEN (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END) AND ((((v0.c0))<=((v0.c0)))))) ORDER BY (((((v0.c0)AND(v0.c0)))AND(v0.c0)) IN ()), LOWER(DISTINCT CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN 1168686417 ELSE v0.c0 END) ASC  NULLS FIRST, (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END) AND ((((v0.c0))<=((v0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((v0.c0)AND(v0.c0)))AND(v0.c0)) IN ()), LOWER(DISTINCT CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN 1168686417 ELSE v0.c0 END) ASC  NULLS FIRST, (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c0) BETWEEN (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END) AND ((((v0.c0))<=((v0.c0)))))) ORDER BY (((((v0.c0)AND(v0.c0)))AND(v0.c0)) IN ()), LOWER(DISTINCT CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN 1168686417 ELSE v0.c0 END) ASC  NULLS FIRST, (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END) AND ((((v0.c0))<=((v0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((v0.c0)AND(v0.c0)))AND(v0.c0)) IN ()), LOWER(DISTINCT CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN 1168686417 ELSE v0.c0 END) ASC  NULLS FIRST, (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c0) BETWEEN (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END) AND ((((v0.c0))<=((v0.c0)))))) ORDER BY (((((v0.c0)AND(v0.c0)))AND(v0.c0)) IN ()), LOWER(DISTINCT CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN 1168686417 ELSE v0.c0 END) ASC  NULLS FIRST, (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ());
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CASE ((rt0.c3) NOT BETWEEN (rt0.c3) AND (v0.c0))  WHEN vt0.c0 COLLATE BINARY THEN (('') NOT BETWEEN (rt0.c3) AND (v0.c0)) ELSE ((((v0.c0)AND(rt0.c1)))OR(rt0.c0)) END) ORDER BY (~ (((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0))))  NULLS FIRST, ((vt0.c0 COLLATE NOCASE)<(UPPER(DISTINCT rt0.c3)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c3) NOT BETWEEN (rt0.c3) AND (v0.c0))  WHEN vt0.c0 COLLATE BINARY THEN (('') NOT BETWEEN (rt0.c3) AND (v0.c0)) ELSE ((((v0.c0)AND(rt0.c1)))OR(rt0.c0)) END) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (~ (((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0))))  NULLS FIRST, ((vt0.c0 COLLATE NOCASE)<(UPPER(DISTINCT rt0.c3)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CASE ((rt0.c3) NOT BETWEEN (rt0.c3) AND (v0.c0))  WHEN vt0.c0 COLLATE BINARY THEN (('') NOT BETWEEN (rt0.c3) AND (v0.c0)) ELSE ((((v0.c0)AND(rt0.c1)))OR(rt0.c0)) END) ORDER BY (~ (((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0))))  NULLS FIRST, ((vt0.c0 COLLATE NOCASE)<(UPPER(DISTINCT rt0.c3)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c3) NOT BETWEEN (rt0.c3) AND (v0.c0))  WHEN vt0.c0 COLLATE BINARY THEN (('') NOT BETWEEN (rt0.c3) AND (v0.c0)) ELSE ((((v0.c0)AND(rt0.c1)))OR(rt0.c0)) END) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (~ (((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0))))  NULLS FIRST, ((vt0.c0 COLLATE NOCASE)<(UPPER(DISTINCT rt0.c3)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CASE ((rt0.c3) NOT BETWEEN (rt0.c3) AND (v0.c0))  WHEN vt0.c0 COLLATE BINARY THEN (('') NOT BETWEEN (rt0.c3) AND (v0.c0)) ELSE ((((v0.c0)AND(rt0.c1)))OR(rt0.c0)) END) ORDER BY (~ (((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0))))  NULLS FIRST, ((vt0.c0 COLLATE NOCASE)<(UPPER(DISTINCT rt0.c3)))  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE ((0.28417937445091934)|(v0.c0))  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) END) ORDER BY (((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((((v0.c0) NOTNULL), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END, json_insert(v0.c0, vt0.c0, vt0.c0))) AND ((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END, (vt0.c0 IN ()), NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((0.28417937445091934)|(v0.c0))  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((((v0.c0) NOTNULL), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END, json_insert(v0.c0, vt0.c0, vt0.c0))) AND ((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END, (vt0.c0 IN ()), NULL))) ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE ((0.28417937445091934)|(v0.c0))  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) END) ORDER BY (((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((((v0.c0) NOTNULL), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END, json_insert(v0.c0, vt0.c0, vt0.c0))) AND ((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END, (vt0.c0 IN ()), NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((0.28417937445091934)|(v0.c0))  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((((v0.c0) NOTNULL), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END, json_insert(v0.c0, vt0.c0, vt0.c0))) AND ((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END, (vt0.c0 IN ()), NULL))) ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE ((0.28417937445091934)|(v0.c0))  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) END) ORDER BY (((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((((v0.c0) NOTNULL), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END, json_insert(v0.c0, vt0.c0, vt0.c0))) AND ((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END, (vt0.c0 IN ()), NULL))) ASC;
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CASE WHEN rt0.c3 THEN vt0.c0 WHEN x'' THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c3 THEN vt0.c0 WHEN x'' THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CASE WHEN rt0.c3 THEN vt0.c0 WHEN x'' THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c3 THEN vt0.c0 WHEN x'' THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CASE WHEN rt0.c3 THEN vt0.c0 WHEN x'' THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 END COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN v0 ON (+ (CASE rt0.c2  WHEN rt0.c3 THEN x'' WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 END)) WHERE (((rt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN v0 ON (+ (CASE rt0.c2  WHEN rt0.c3 THEN x'' WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 END)));
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN v0 ON (+ (CASE rt0.c2  WHEN rt0.c3 THEN x'' WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 END)) WHERE (((rt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN v0 ON (+ (CASE rt0.c2  WHEN rt0.c3 THEN x'' WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 END)));
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN v0 ON (+ (CASE rt0.c2  WHEN rt0.c3 THEN x'' WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 END)) WHERE (((rt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE 'TRUE'  WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c0) NOT BETWEEN ('1964496389') AND (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(NULL)) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE 'TRUE'  WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c0) NOT BETWEEN ('1964496389') AND (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(NULL)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE 'TRUE'  WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c0) NOT BETWEEN ('1964496389') AND (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(NULL)) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE 'TRUE'  WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c0) NOT BETWEEN ('1964496389') AND (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(NULL)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE 'TRUE'  WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c0) NOT BETWEEN ('1964496389') AND (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(NULL)) ELSE vt0.c0 END);
SELECT * FROM v0, rt0 WHERE (0.9237417129268299);
SELECT SUM(count) FROM (SELECT ALL ((0.9237417129268299) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (0.9237417129268299);
SELECT SUM(count) FROM (SELECT ALL ((0.9237417129268299) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (0.9237417129268299);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (CAST((((vt0.c0, vt0.c0, NULL))!=((vt0.c0, -4.49708237E8, vt0.c0))) AS NUMERIC)) ORDER BY ((((vt0.c0)>=(vt0.c0)))IS NOT(CAST(vt0.c0 AS NUMERIC))), (- (CAST(vt0.c0 AS NUMERIC))) DESC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<<(0.7137921485842118))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0, vt0.c0, NULL))!=((vt0.c0, -4.49708237E8, vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>=(vt0.c0)))IS NOT(CAST(vt0.c0 AS NUMERIC))), (- (CAST(vt0.c0 AS NUMERIC))) DESC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<<(0.7137921485842118))  NULLS LAST);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (CAST((((vt0.c0, vt0.c0, NULL))!=((vt0.c0, -4.49708237E8, vt0.c0))) AS NUMERIC)) ORDER BY ((((vt0.c0)>=(vt0.c0)))IS NOT(CAST(vt0.c0 AS NUMERIC))), (- (CAST(vt0.c0 AS NUMERIC))) DESC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<<(0.7137921485842118))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0, vt0.c0, NULL))!=((vt0.c0, -4.49708237E8, vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>=(vt0.c0)))IS NOT(CAST(vt0.c0 AS NUMERIC))), (- (CAST(vt0.c0 AS NUMERIC))) DESC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<<(0.7137921485842118))  NULLS LAST);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (CAST((((vt0.c0, vt0.c0, NULL))!=((vt0.c0, -4.49708237E8, vt0.c0))) AS NUMERIC)) ORDER BY ((((vt0.c0)>=(vt0.c0)))IS NOT(CAST(vt0.c0 AS NUMERIC))), (- (CAST(vt0.c0 AS NUMERIC))) DESC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<<(0.7137921485842118))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (0xffffffffcaa38845 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((0Xffffffffcaa38845 COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (0xffffffffcaa38845 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((0Xffffffffcaa38845 COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (0xffffffffcaa38845 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((CAST(0.7550079006256266 AS BLOB))||(CASE WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(0.7550079006256266 AS BLOB))||(CASE WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c0 END))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((CAST(0.7550079006256266 AS BLOB))||(CASE WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(0.7550079006256266 AS BLOB))||(CASE WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c0 END))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((CAST(0.7550079006256266 AS BLOB))||(CASE WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c0 END)));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (+ (0.40337419590257373))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (+ (0.40337419590257373))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (+ (0.40337419590257373))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (+ (0.40337419590257373))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (+ (0.40337419590257373))  NULLS FIRST;
SELECT * FROM v0 WHERE (((((((((v0.c0 COLLATE BINARY)OR(((v0.c0)>(v0.c0)))))OR((v0.c0 IN ()))))OR((~ (v0.c0)))))AND((+ (1818940589)))));
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0 COLLATE BINARY)OR(((v0.c0)>(v0.c0)))))OR((v0.c0 IN ()))))OR((~ (v0.c0)))))AND((+ (1818940589))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((v0.c0 COLLATE BINARY)OR(((v0.c0)>(v0.c0)))))OR((v0.c0 IN ()))))OR((~ (v0.c0)))))AND((+ (1818940589)))));
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0 COLLATE BINARY)OR(((v0.c0)>(v0.c0)))))OR((v0.c0 IN ()))))OR((~ (v0.c0)))))AND((+ (1818940589))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((v0.c0 COLLATE BINARY)OR(((v0.c0)>(v0.c0)))))OR((v0.c0 IN ()))))OR((~ (v0.c0)))))AND((+ (1818940589)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)))AND(((rt0.c3)>=(v0.c0)))))AND(((rt0.c1)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)))AND(((rt0.c3)>=(v0.c0)))))AND(((rt0.c1)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)))AND(((rt0.c3)>=(v0.c0)))))AND(((rt0.c1)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)))AND(((rt0.c3)>=(v0.c0)))))AND(((rt0.c1)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)))AND(((rt0.c3)>=(v0.c0)))))AND(((rt0.c1)IS NOT(rt0.c1)))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0)|(v0.c0)) WHERE ((+ (v0.c0)));
SELECT SUM(count) FROM (SELECT (((+ (v0.c0))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0)|(v0.c0)));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0)|(v0.c0)) WHERE ((+ (v0.c0)));
SELECT SUM(count) FROM (SELECT (((+ (v0.c0))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0)|(v0.c0)));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0)|(v0.c0)) WHERE ((+ (v0.c0)));
SELECT * FROM vt0, v0 WHERE ('U!');
SELECT SUM(count) FROM (SELECT (('U!') IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ('U!');
SELECT SUM(count) FROM (SELECT (('U!') IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ('U!');
SELECT * FROM v0 WHERE ((((((((((((((('-2022515314')OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))IS(((x'a77a')IS(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((((((('-2022515314')OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))IS(((x'a77a')IS(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((((((((((('-2022515314')OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))IS(((x'a77a')IS(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((((((('-2022515314')OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))IS(((x'a77a')IS(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((((((((((('-2022515314')OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))IS(((x'a77a')IS(v0.c0)))));
SELECT * FROM rt0, vt0, v0 WHERE ((((rt0.c2))<(((((v0.c0))>=((v0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2))<(((((v0.c0))>=((v0.c0))))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE ((((rt0.c2))<(((((v0.c0))>=((v0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2))<(((((v0.c0))>=((v0.c0))))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE ((((rt0.c2))<(((((v0.c0))>=((v0.c0)))))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CAST((((v0.c0, vt0.c0, rt0.c2, v0.c0, 'g')) BETWEEN ((rt0.c3, v0.c0, rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, v0.c0, rt0.c3, rt0.c1, v0.c0))) AS NUMERIC) INNER JOIN v0 ON (CAST(rt0.c2 AS NUMERIC) IN ()) WHERE ((((NOT (vt0.c0)))IS NOT((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))IS NOT((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST((((v0.c0, vt0.c0, rt0.c2, v0.c0, 'g')) BETWEEN ((rt0.c3, v0.c0, rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, v0.c0, rt0.c3, rt0.c1, v0.c0))) AS NUMERIC) INNER JOIN v0 ON (CAST(rt0.c2 AS NUMERIC) IN ()));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CAST((((v0.c0, vt0.c0, rt0.c2, v0.c0, 'g')) BETWEEN ((rt0.c3, v0.c0, rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, v0.c0, rt0.c3, rt0.c1, v0.c0))) AS NUMERIC) INNER JOIN v0 ON (CAST(rt0.c2 AS NUMERIC) IN ()) WHERE ((((NOT (vt0.c0)))IS NOT((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))IS NOT((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST((((v0.c0, vt0.c0, rt0.c2, v0.c0, 'g')) BETWEEN ((rt0.c3, v0.c0, rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, v0.c0, rt0.c3, rt0.c1, v0.c0))) AS NUMERIC) INNER JOIN v0 ON (CAST(rt0.c2 AS NUMERIC) IN ()));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CAST((((v0.c0, vt0.c0, rt0.c2, v0.c0, 'g')) BETWEEN ((rt0.c3, v0.c0, rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, v0.c0, rt0.c3, rt0.c1, v0.c0))) AS NUMERIC) INNER JOIN v0 ON (CAST(rt0.c2 AS NUMERIC) IN ()) WHERE ((((NOT (vt0.c0)))IS NOT((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((- ((('970714057')=(v0.c0))))) ORDER BY ((CASE WHEN rt0.c1 THEN vt0.c0 ELSE NULL END) NOT BETWEEN (json_remove(rt0.c1, rt0.c1, vt0.c0, 0.8189811995959969)) AND (((((0.7586047105687048)AND(vt0.c0)))OR('IM0享*窰')))) ASC, (((((NULL)<=(rt0.c3))))>=((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))))  NULLS FIRST, ((CAST(v0.c0 AS REAL)) BETWEEN (((vt0.c0)/(vt0.c0))) AND (SQLITE_SOURCE_ID()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((('970714057')=(v0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((CASE WHEN rt0.c1 THEN vt0.c0 ELSE NULL END) NOT BETWEEN (json_remove(rt0.c1, rt0.c1, vt0.c0, 0.8189811995959969)) AND (((((0.7586047105687048)AND(vt0.c0)))OR('IM0享*窰')))) ASC, (((((NULL)<=(rt0.c3))))>=((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))))  NULLS FIRST, ((CAST(v0.c0 AS REAL)) BETWEEN (((vt0.c0)/(vt0.c0))) AND (SQLITE_SOURCE_ID()))  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((- ((('970714057')=(v0.c0))))) ORDER BY ((CASE WHEN rt0.c1 THEN vt0.c0 ELSE NULL END) NOT BETWEEN (json_remove(rt0.c1, rt0.c1, vt0.c0, 0.8189811995959969)) AND (((((0.7586047105687048)AND(vt0.c0)))OR('IM0享*窰')))) ASC, (((((NULL)<=(rt0.c3))))>=((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))))  NULLS FIRST, ((CAST(v0.c0 AS REAL)) BETWEEN (((vt0.c0)/(vt0.c0))) AND (SQLITE_SOURCE_ID()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((('970714057')=(v0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((CASE WHEN rt0.c1 THEN vt0.c0 ELSE NULL END) NOT BETWEEN (json_remove(rt0.c1, rt0.c1, vt0.c0, 0.8189811995959969)) AND (((((0.7586047105687048)AND(vt0.c0)))OR('IM0享*窰')))) ASC, (((((NULL)<=(rt0.c3))))>=((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))))  NULLS FIRST, ((CAST(v0.c0 AS REAL)) BETWEEN (((vt0.c0)/(vt0.c0))) AND (SQLITE_SOURCE_ID()))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((json_extract(0.4118395755556086, vt0.c0))IS NOT(((((x'')OR(rt0.c3)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_extract(0.4118395755556086, vt0.c0))IS NOT(((((x'')OR(rt0.c3)))OR(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((json_extract(0.4118395755556086, vt0.c0))IS NOT(((((x'')OR(rt0.c3)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_extract(0.4118395755556086, vt0.c0))IS NOT(((((x'')OR(rt0.c3)))OR(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c2)|(rt0.c2)) COLLATE NOCASE) ORDER BY ((CAST(rt0.c1 AS BLOB)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)|(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CAST(rt0.c1 AS BLOB)) NOT NULL) ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c2)|(rt0.c2)) COLLATE NOCASE) ORDER BY ((CAST(rt0.c1 AS BLOB)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)|(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CAST(rt0.c1 AS BLOB)) NOT NULL) ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c2)|(rt0.c2)) COLLATE NOCASE) ORDER BY ((CAST(rt0.c1 AS BLOB)) NOT NULL) ASC;
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END)+(CAST(rt0.c3 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END)+(CAST(rt0.c3 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END)+(CAST(rt0.c3 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END)+(CAST(rt0.c3 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END)+(CAST(rt0.c3 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((vt0.c0 IN ())) AND (SQLITE_COMPILEOPTION_USED(vt0.c0)))) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((vt0.c0 IN ())) AND (SQLITE_COMPILEOPTION_USED(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY x''  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((vt0.c0 IN ())) AND (SQLITE_COMPILEOPTION_USED(vt0.c0)))) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((vt0.c0 IN ())) AND (SQLITE_COMPILEOPTION_USED(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY x''  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((vt0.c0 IN ())) AND (SQLITE_COMPILEOPTION_USED(vt0.c0)))) ORDER BY x''  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((rt0.c3)>>(vt0.c0)))) AND (((~ (rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((rt0.c3)>>(vt0.c0)))) AND (((~ (rt0.c3)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((rt0.c3)>>(vt0.c0)))) AND (((~ (rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((rt0.c3)>>(vt0.c0)))) AND (((~ (rt0.c3)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((rt0.c3)>>(vt0.c0)))) AND (((~ (rt0.c3))))));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((((((v0.c0)%(rt0.c3)))AND((((rt0.c1))!=((rt0.c1))))))AND(ABS(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)%(rt0.c3)))AND((((rt0.c1))<>((rt0.c1))))))AND(ABS(DISTINCT rt0.c2)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((((((v0.c0)%(rt0.c3)))AND((((rt0.c1))!=((rt0.c1))))))AND(ABS(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)%(rt0.c3)))AND((((rt0.c1))<>((rt0.c1))))))AND(ABS(DISTINCT rt0.c2)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((((((v0.c0)%(rt0.c3)))AND((((rt0.c1))!=((rt0.c1))))))AND(ABS(DISTINCT rt0.c2))));
SELECT * FROM v0, vt0 WHERE (CAST(((vt0.c0)GLOB('1851990349')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)GLOB('1851990349')) AS INTEGER)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CAST(((vt0.c0)GLOB('1851990349')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)GLOB('1851990349')) AS INTEGER)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CAST(((vt0.c0)GLOB('1851990349')) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(((((rt0.c3)AND(vt0.c0)))AND(rt0.c2)) AS REAL)) ORDER BY COALESCE(CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END, ((rt0.c1)&(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c3)AND(vt0.c0)))AND(rt0.c2)) AS REAL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY COALESCE(CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END, ((rt0.c1)&(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(((((rt0.c3)AND(vt0.c0)))AND(rt0.c2)) AS REAL)) ORDER BY COALESCE(CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END, ((rt0.c1)&(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c3)AND(vt0.c0)))AND(rt0.c2)) AS REAL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY COALESCE(CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END, ((rt0.c1)&(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(((((rt0.c3)AND(vt0.c0)))AND(rt0.c2)) AS REAL)) ORDER BY COALESCE(CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END, ((rt0.c1)&(vt0.c0)));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((rt0.c0) ISNULL)) IS FALSE)) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (rt0.c3) AND (((rt0.c1)&(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) ISNULL)) IS FALSE)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (rt0.c3) AND (((rt0.c1)&(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((rt0.c0) ISNULL)) IS FALSE)) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (rt0.c3) AND (((rt0.c1)&(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) ISNULL)) IS FALSE)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (rt0.c3) AND (((rt0.c1)&(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((rt0.c0) ISNULL)) IS FALSE)) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (rt0.c3) AND (((rt0.c1)&(rt0.c2))));
SELECT * FROM v0 WHERE ((+ (ABS(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (ABS(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((+ (ABS(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (ABS(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((+ (ABS(DISTINCT v0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) THEN ((rt0.c3)<<(rt0.c0)) ELSE ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)) END) ORDER BY (rt0.c3 COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) THEN ((rt0.c3)<<(rt0.c0)) ELSE ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c3 COLLATE NOCASE IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) THEN ((rt0.c3)<<(rt0.c0)) ELSE ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)) END) ORDER BY (rt0.c3 COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) THEN ((rt0.c3)<<(rt0.c0)) ELSE ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c3 COLLATE NOCASE IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) THEN ((rt0.c3)<<(rt0.c0)) ELSE ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)) END) ORDER BY (rt0.c3 COLLATE NOCASE IN ());
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((CAST(v0.c0 AS REAL)) BETWEEN (((v0.c0) ISNULL)) AND ((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS REAL)) BETWEEN (((v0.c0) ISNULL)) AND ((+ (rt0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((CAST(v0.c0 AS REAL)) BETWEEN (((v0.c0) ISNULL)) AND ((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS REAL)) BETWEEN (((v0.c0) ISNULL)) AND ((+ (rt0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((CAST(v0.c0 AS REAL)) BETWEEN (((v0.c0) ISNULL)) AND ((+ (rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON (vt0.c0 IN ()) CROSS JOIN rt0 ON 0.2819755681519238 WHERE ((((~ (rt0.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c3))) IS TRUE)) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (vt0.c0 IN ()) CROSS JOIN rt0 ON 0.2819755681519238);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON (vt0.c0 IN ()) CROSS JOIN rt0 ON 0.2819755681519238 WHERE ((((~ (rt0.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c3))) IS TRUE)) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (vt0.c0 IN ()) CROSS JOIN rt0 ON 0.2819755681519238);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON (vt0.c0 IN ()) CROSS JOIN rt0 ON 0.2819755681519238 WHERE ((((~ (rt0.c3))) IS TRUE));
SELECT COUNT(*) FROM rt0, vt0 NATURAL JOIN v0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM rt0, vt0 NATURAL JOIN v0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM rt0, vt0 NATURAL JOIN v0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((569477528)>>(((v0.c0)||(0.6420927861944834))))) ORDER BY ((((HEX(DISTINCT v0.c0))OR(CASE NULL  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END)))AND(v0.c0))  NULLS LAST, CASE rt0.c3  WHEN rt0.c0 THEN NULL WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((569477528)>>(((v0.c0)||(0.6420927861944834))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((HEX(DISTINCT v0.c0))OR(CASE NULL  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END)))AND(v0.c0))  NULLS LAST, CASE rt0.c3  WHEN rt0.c0 THEN NULL WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((569477528)>>(((v0.c0)||(0.6420927861944834))))) ORDER BY ((((HEX(DISTINCT v0.c0))OR(CASE NULL  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END)))AND(v0.c0))  NULLS LAST, CASE rt0.c3  WHEN rt0.c0 THEN NULL WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((569477528)>>(((v0.c0)||(0.6420927861944834))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((HEX(DISTINCT v0.c0))OR(CASE NULL  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END)))AND(v0.c0))  NULLS LAST, CASE rt0.c3  WHEN rt0.c0 THEN NULL WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((569477528)>>(((v0.c0)||(0.6420927861944834))))) ORDER BY ((((HEX(DISTINCT v0.c0))OR(CASE NULL  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END)))AND(v0.c0))  NULLS LAST, CASE rt0.c3  WHEN rt0.c0 THEN NULL WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL * FROM v0, rt0, vt0 WHERE (CASE (rt0.c0 IN ())  WHEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) THEN rt0.c1 COLLATE NOCASE WHEN ((vt0.c0)IS NOT(rt0.c2)) THEN (rt0.c3 IN ()) WHEN NULL THEN ((((v0.c0)AND(rt0.c3)))OR(rt0.c3)) ELSE ((rt0.c1)>=(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c0 IN ())  WHEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) THEN rt0.c1 COLLATE NOCASE WHEN ((vt0.c0)IS NOT(rt0.c2)) THEN (rt0.c3 IN ()) WHEN NULL THEN ((((v0.c0)AND(rt0.c3)))OR(rt0.c3)) ELSE ((rt0.c1)>=(rt0.c1)) END) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (CASE (rt0.c0 IN ())  WHEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) THEN rt0.c1 COLLATE NOCASE WHEN ((vt0.c0)IS NOT(rt0.c2)) THEN (rt0.c3 IN ()) WHEN NULL THEN ((((v0.c0)AND(rt0.c3)))OR(rt0.c3)) ELSE ((rt0.c1)>=(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c0 IN ())  WHEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) THEN rt0.c1 COLLATE NOCASE WHEN ((vt0.c0)IS NOT(rt0.c2)) THEN (rt0.c3 IN ()) WHEN NULL THEN ((((v0.c0)AND(rt0.c3)))OR(rt0.c3)) ELSE ((rt0.c1)>=(rt0.c1)) END) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (CASE (rt0.c0 IN ())  WHEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) THEN rt0.c1 COLLATE NOCASE WHEN ((vt0.c0)IS NOT(rt0.c2)) THEN (rt0.c3 IN ()) WHEN NULL THEN ((((v0.c0)AND(rt0.c3)))OR(rt0.c3)) ELSE ((rt0.c1)>=(rt0.c1)) END);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (x'004d1338') AND (vt0.c0)) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (x'004d1338') AND (vt0.c0)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (x'004d1338') AND (vt0.c0)) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (x'004d1338') AND (vt0.c0)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (x'004d1338') AND (vt0.c0)) COLLATE BINARY COLLATE NOCASE);
SELECT COUNT(*) FROM v0 NOT INDEXED WHERE (v0.c0) ORDER BY ((((v0.c0)=(x'')))IS(IFNULL(v0.c0, v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)=(x'')))IS(IFNULL(v0.c0, v0.c0))));
SELECT COUNT(*) FROM v0 NOT INDEXED WHERE (v0.c0) ORDER BY ((((v0.c0)=(x'')))IS(IFNULL(v0.c0, v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)=(x'')))IS(IFNULL(v0.c0, v0.c0))));
SELECT COUNT(*) FROM v0 NOT INDEXED WHERE (v0.c0) ORDER BY ((((v0.c0)=(x'')))IS(IFNULL(v0.c0, v0.c0)));
SELECT ALL COUNT(*) FROM v0 WHERE (SUBSTR(((v0.c0)<=(v0.c0)), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) ORDER BY ((((~ (v0.c0))))<>(((v0.c0 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(((v0.c0)<=(v0.c0)), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((~ (v0.c0))))<>(((v0.c0 IN ())))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (SUBSTR(((v0.c0)<=(v0.c0)), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) ORDER BY ((((~ (v0.c0))))<>(((v0.c0 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(((v0.c0)<=(v0.c0)), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((~ (v0.c0))))<>(((v0.c0 IN ())))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (SUBSTR(((v0.c0)<=(v0.c0)), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) ORDER BY ((((~ (v0.c0))))<>(((v0.c0 IN ())))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (NULLIF(ROUND(vt0.c0, vt0.c0), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY TYPEOF(DISTINCT ((vt0.c0) NOTNULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(ROUND(vt0.c0, vt0.c0), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(DISTINCT ((vt0.c0) NOTNULL)) DESC);
SELECT COUNT(*) FROM vt0 WHERE (NULLIF(ROUND(vt0.c0, vt0.c0), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY TYPEOF(DISTINCT ((vt0.c0) NOTNULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(ROUND(vt0.c0, vt0.c0), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(DISTINCT ((vt0.c0) NOTNULL)) DESC);
SELECT COUNT(*) FROM vt0 WHERE (NULLIF(ROUND(vt0.c0, vt0.c0), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY TYPEOF(DISTINCT ((vt0.c0) NOTNULL)) DESC;
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) BETWEEN (((rt0.c3)OR(rt0.c1))) AND ((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY) BETWEEN (((rt0.c3)OR(rt0.c1))) AND ((~ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) BETWEEN (((rt0.c3)OR(rt0.c1))) AND ((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY) BETWEEN (((rt0.c3)OR(rt0.c1))) AND ((~ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) BETWEEN (((rt0.c3)OR(rt0.c1))) AND ((~ (rt0.c0)))));
SELECT ALL * FROM vt0, rt0, v0 WHERE ((((- (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((((- (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((((- (vt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOTNULL));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((json_valid(rt0.c2))<>((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((json_valid(rt0.c2))<>((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((json_valid(rt0.c2))<>((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((json_valid(rt0.c2))<>((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((json_valid(rt0.c2))<>((vt0.c0 IN ()))));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CASE WHEN (('')IS(rt0.c2)) THEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('')IS(rt0.c2)) THEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 END END) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CASE WHEN (('')IS(rt0.c2)) THEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('')IS(rt0.c2)) THEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 END END) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CASE WHEN (('')IS(rt0.c2)) THEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 END END);
SELECT ALL * FROM vt0, rt0 WHERE (((~ (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((~ (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((~ (rt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((rt0.c3 IN ()) IN ())) ORDER BY NULLIF(NULL, (~ (v0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 IN ()) IN ())) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY NULLIF(NULL, (~ (v0.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((rt0.c3 IN ()) IN ())) ORDER BY NULLIF(NULL, (~ (v0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 IN ()) IN ())) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY NULLIF(NULL, (~ (v0.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((rt0.c3 IN ()) IN ())) ORDER BY NULLIF(NULL, (~ (v0.c0))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON ((((((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c0)))))<((((rt0.c1) NOT BETWEEN (rt0.c3) AND (1908839027))))) WHERE (((((rt0.c1) NOTNULL))*(((rt0.c1) IS TRUE)))) ORDER BY CAST(x'' COLLATE BINARY AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL))*(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0 NOT INDEXED CROSS JOIN v0 ON ((((((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c0)))))<((((rt0.c1) NOT BETWEEN (rt0.c3) AND (1908839027))))) ORDER BY CAST(x'' COLLATE BINARY AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON ((((((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c0)))))<((((rt0.c1) NOT BETWEEN (rt0.c3) AND (1908839027))))) WHERE (((((rt0.c1) NOTNULL))*(((rt0.c1) IS TRUE)))) ORDER BY CAST(x'' COLLATE BINARY AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL))*(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0 NOT INDEXED CROSS JOIN v0 ON ((((((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c0)))))<((((rt0.c1) NOT BETWEEN (rt0.c3) AND (1908839027))))) ORDER BY CAST(x'' COLLATE BINARY AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON ((((((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c0)))))<((((rt0.c1) NOT BETWEEN (rt0.c3) AND (1908839027))))) WHERE (((((rt0.c1) NOTNULL))*(((rt0.c1) IS TRUE)))) ORDER BY CAST(x'' COLLATE BINARY AS NUMERIC)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c2)*(rt0.c0)) COLLATE NOCASE WHERE ((((vt0.c0 IN ()))IS NOT('ᔲ\nr{')));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))IS NOT('ᔲ\nr{'))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c2)*(rt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c2)*(rt0.c0)) COLLATE NOCASE WHERE ((((vt0.c0 IN ()))IS NOT('ᔲ\nr{')));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))IS NOT('ᔲ\nr{'))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c2)*(rt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c2)*(rt0.c0)) COLLATE NOCASE WHERE ((((vt0.c0 IN ()))IS NOT('ᔲ\nr{')));
SELECT * FROM v0, rt0 WHERE ((((~ (rt0.c1))) ISNULL)) ORDER BY CAST(((rt0.c3)<>(rt0.c2)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1))) ISNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((rt0.c3)!=(rt0.c2)) AS NUMERIC));
SELECT * FROM v0, rt0 WHERE ((((~ (rt0.c1))) ISNULL)) ORDER BY CAST(((rt0.c3)<>(rt0.c2)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1))) ISNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((rt0.c3)!=(rt0.c2)) AS NUMERIC));
SELECT * FROM v0, rt0 WHERE ((((~ (rt0.c1))) ISNULL)) ORDER BY CAST(((rt0.c3)<>(rt0.c2)) AS NUMERIC);
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c1) ORDER BY UNLIKELY(DISTINCT ((rt0.c3)<=(v0.c0)))  NULLS LAST, ((((((rt0.c0)AND(rt0.c2)))AND(v0.c0)))&(((rt0.c0)!=(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM v0, rt0 ORDER BY UNLIKELY(DISTINCT ((rt0.c3)<=(v0.c0)))  NULLS LAST, ((((((rt0.c0)AND(rt0.c2)))AND(v0.c0)))&(((rt0.c0)!=(rt0.c0)))) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c1) ORDER BY UNLIKELY(DISTINCT ((rt0.c3)<=(v0.c0)))  NULLS LAST, ((((((rt0.c0)AND(rt0.c2)))AND(v0.c0)))&(((rt0.c0)!=(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM v0, rt0 ORDER BY UNLIKELY(DISTINCT ((rt0.c3)<=(v0.c0)))  NULLS LAST, ((((((rt0.c0)AND(rt0.c2)))AND(v0.c0)))&(((rt0.c0)!=(rt0.c0)))) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c1) ORDER BY UNLIKELY(DISTINCT ((rt0.c3)<=(v0.c0)))  NULLS LAST, ((((((rt0.c0)AND(rt0.c2)))AND(v0.c0)))&(((rt0.c0)!=(rt0.c0)))) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((+ (vt0.c0)), HEX(vt0.c0), ((vt0.c0) ISNULL))) AND ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (vt0.c0 IN ()), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))) ORDER BY ((vt0.c0 COLLATE RTRIM)<=(CAST(NULL AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((+ (vt0.c0)), HEX(vt0.c0), ((vt0.c0) ISNULL))) AND ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (vt0.c0 IN ()), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)<=(CAST(NULL AS NUMERIC))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((+ (vt0.c0)), HEX(vt0.c0), ((vt0.c0) ISNULL))) AND ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (vt0.c0 IN ()), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))) ORDER BY ((vt0.c0 COLLATE RTRIM)<=(CAST(NULL AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((+ (vt0.c0)), HEX(vt0.c0), ((vt0.c0) ISNULL))) AND ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (vt0.c0 IN ()), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)<=(CAST(NULL AS NUMERIC))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((+ (vt0.c0)), HEX(vt0.c0), ((vt0.c0) ISNULL))) AND ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (vt0.c0 IN ()), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))) ORDER BY ((vt0.c0 COLLATE RTRIM)<=(CAST(NULL AS NUMERIC)));
SELECT ALL * FROM vt0, rt0, v0 WHERE ('') ORDER BY ((SUBSTR(rt0.c3, vt0.c0)) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((SUBSTR(rt0.c3, vt0.c0)) ISNULL) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, v0 WHERE ('') ORDER BY ((SUBSTR(rt0.c3, vt0.c0)) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((SUBSTR(rt0.c3, vt0.c0)) ISNULL) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, v0 WHERE ('') ORDER BY ((SUBSTR(rt0.c3, vt0.c0)) ISNULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL))<<(((vt0.c0) NOT BETWEEN (0.35286136266298107) AND (vt0.c0))))) ORDER BY CASE ((vt0.c0) IS TRUE)  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN '-1785701271' COLLATE RTRIM ELSE ((vt0.c0)IS NOT(vt0.c0)) END ASC  NULLS FIRST, ABS(DISTINCT ((vt0.c0) NOT BETWEEN ('-1073526806') AND (vt0.c0))) ASC  NULLS FIRST, ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))||(((vt0.c0)/(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL))<<(((vt0.c0) NOT BETWEEN (0.35286136266298107) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) IS TRUE)  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN '-1785701271' COLLATE RTRIM ELSE ((vt0.c0)IS NOT(vt0.c0)) END ASC  NULLS FIRST, ABS(DISTINCT ((vt0.c0) NOT BETWEEN ('-1073526806') AND (vt0.c0))) ASC  NULLS FIRST, ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))||(((vt0.c0)/(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL))<<(((vt0.c0) NOT BETWEEN (0.35286136266298107) AND (vt0.c0))))) ORDER BY CASE ((vt0.c0) IS TRUE)  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN '-1785701271' COLLATE RTRIM ELSE ((vt0.c0)IS NOT(vt0.c0)) END ASC  NULLS FIRST, ABS(DISTINCT ((vt0.c0) NOT BETWEEN ('-1073526806') AND (vt0.c0))) ASC  NULLS FIRST, ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))||(((vt0.c0)/(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL))<<(((vt0.c0) NOT BETWEEN (0.35286136266298107) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) IS TRUE)  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN '-1785701271' COLLATE RTRIM ELSE ((vt0.c0)IS NOT(vt0.c0)) END ASC  NULLS FIRST, ABS(DISTINCT ((vt0.c0) NOT BETWEEN ('-1073526806') AND (vt0.c0))) ASC  NULLS FIRST, ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))||(((vt0.c0)/(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL))<<(((vt0.c0) NOT BETWEEN (0.35286136266298107) AND (vt0.c0))))) ORDER BY CASE ((vt0.c0) IS TRUE)  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN '-1785701271' COLLATE RTRIM ELSE ((vt0.c0)IS NOT(vt0.c0)) END ASC  NULLS FIRST, ABS(DISTINCT ((vt0.c0) NOT BETWEEN ('-1073526806') AND (vt0.c0))) ASC  NULLS FIRST, ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))||(((vt0.c0)/(vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((rt0.c0 IN ()))) AND (((rt0.c3 IN (rt0.c1)))))) ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c2) AND (v0.c0)))) AND ((((0.13367618255993186)/(rt0.c2))))) ASC, NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN (((rt0.c0 IN ()))) AND (((rt0.c3 IN (rt0.c1)))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c2) AND (v0.c0)))) AND ((((0.13367618255993186)/(rt0.c2))))) ASC, NULL DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((rt0.c0 IN ()))) AND (((rt0.c3 IN (rt0.c1)))))) ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c2) AND (v0.c0)))) AND ((((0.13367618255993186)/(rt0.c2))))) ASC, NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN (((rt0.c0 IN ()))) AND (((rt0.c3 IN (rt0.c1)))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c2) AND (v0.c0)))) AND ((((0.13367618255993186)/(rt0.c2))))) ASC, NULL DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((rt0.c0 IN ()))) AND (((rt0.c3 IN (rt0.c1)))))) ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c2) AND (v0.c0)))) AND ((((0.13367618255993186)/(rt0.c2))))) ASC, NULL DESC  NULLS LAST;
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON ((((((rt0.c3) NOT NULL))AND(UPPER(rt0.c0))))AND(CAST(rt0.c0 AS BLOB))) RIGHT OUTER JOIN vt0 ON ((rt0.c2 COLLATE NOCASE) BETWEEN (((1051923762) ISNULL)) AND (((rt0.c3) NOTNULL))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((((((rt0.c3) NOT NULL))AND(UPPER(rt0.c0))))AND(CAST(rt0.c0 AS BLOB))) RIGHT OUTER JOIN vt0 ON ((rt0.c2 COLLATE NOCASE) BETWEEN (((1051923762) ISNULL)) AND (((rt0.c3) NOTNULL))));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON ((((((rt0.c3) NOT NULL))AND(UPPER(rt0.c0))))AND(CAST(rt0.c0 AS BLOB))) RIGHT OUTER JOIN vt0 ON ((rt0.c2 COLLATE NOCASE) BETWEEN (((1051923762) ISNULL)) AND (((rt0.c3) NOTNULL))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((((((rt0.c3) NOT NULL))AND(UPPER(rt0.c0))))AND(CAST(rt0.c0 AS BLOB))) RIGHT OUTER JOIN vt0 ON ((rt0.c2 COLLATE NOCASE) BETWEEN (((1051923762) ISNULL)) AND (((rt0.c3) NOTNULL))));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON ((((((rt0.c3) NOT NULL))AND(UPPER(rt0.c0))))AND(CAST(rt0.c0 AS BLOB))) RIGHT OUTER JOIN vt0 ON ((rt0.c2 COLLATE NOCASE) BETWEEN (((1051923762) ISNULL)) AND (((rt0.c3) NOTNULL))) WHERE (rt0.c2);
SELECT * FROM v0 WHERE (json_patch(((v0.c0) IS TRUE), UPPER(v0.c0)));
SELECT SUM(count) FROM (SELECT ((json_patch(((v0.c0) IS TRUE), UPPER(v0.c0))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (json_patch(((v0.c0) IS TRUE), UPPER(v0.c0)));
SELECT SUM(count) FROM (SELECT ((json_patch(((v0.c0) IS TRUE), UPPER(v0.c0))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (json_patch(((v0.c0) IS TRUE), UPPER(v0.c0)));
SELECT * FROM v0, vt0 WHERE (load_extension((~ (vt0.c0)))) ORDER BY (((v0.c0 IN (vt0.c0, v0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((load_extension((~ (vt0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0 IN (vt0.c0, v0.c0))) IS FALSE));
SELECT * FROM v0, vt0 WHERE (load_extension((~ (vt0.c0)))) ORDER BY (((v0.c0 IN (vt0.c0, v0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((load_extension((~ (vt0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0 IN (vt0.c0, v0.c0))) IS FALSE));
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2))))<>(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END))) ORDER BY ((((rt0.c2) BETWEEN ('592959804') AND (rt0.c0)))<<(((((rt0.c3)AND(rt0.c1)))OR(0.2142707292244831))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2))))!=(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c2) BETWEEN ('592959804') AND (rt0.c0)))<<(((((rt0.c3)AND(rt0.c1)))OR(0.2142707292244831))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2))))<>(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END))) ORDER BY ((((rt0.c2) BETWEEN ('592959804') AND (rt0.c0)))<<(((((rt0.c3)AND(rt0.c1)))OR(0.2142707292244831))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2))))!=(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c2) BETWEEN ('592959804') AND (rt0.c0)))<<(((((rt0.c3)AND(rt0.c1)))OR(0.2142707292244831))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2))))<>(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END))) ORDER BY ((((rt0.c2) BETWEEN ('592959804') AND (rt0.c0)))<<(((((rt0.c3)AND(rt0.c1)))OR(0.2142707292244831))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (JULIANDAY((rt0.c0 IN (rt0.c0, rt0.c1)), COALESCE(DISTINCT rt0.c1, rt0.c0), ((((NULL)OR(0.4039070130104756)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((JULIANDAY((rt0.c0 IN (rt0.c0, rt0.c1)), COALESCE(DISTINCT rt0.c1, rt0.c0), ((((NULL)OR(0.4039070130104756)))AND(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (JULIANDAY((rt0.c0 IN (rt0.c0, rt0.c1)), COALESCE(DISTINCT rt0.c1, rt0.c0), ((((NULL)OR(0.4039070130104756)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((JULIANDAY((rt0.c0 IN (rt0.c0, rt0.c1)), COALESCE(DISTINCT rt0.c1, rt0.c0), ((((NULL)OR(0.4039070130104756)))AND(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (JULIANDAY((rt0.c0 IN (rt0.c0, rt0.c1)), COALESCE(DISTINCT rt0.c1, rt0.c0), ((((NULL)OR(0.4039070130104756)))AND(rt0.c2))));
SELECT ALL * FROM rt0, v0 WHERE (LOWER((~ (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((~ (rt0.c3)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (LOWER((~ (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((~ (rt0.c3)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (LOWER((~ (rt0.c3))));
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((rt0.c3) IS TRUE)) BETWEEN ((('\rA?	F')&(rt0.c0))) AND ((((rt0.c1, rt0.c1, rt0.c3)) NOT BETWEEN ((vt0.c0, v0.c0, rt0.c2)) AND ((rt0.c3, v0.c0, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) IS TRUE)) BETWEEN ((('\rA?	F')&(rt0.c0))) AND ((((rt0.c1, rt0.c1, rt0.c3)) NOT BETWEEN ((vt0.c0, v0.c0, rt0.c2)) AND ((rt0.c3, v0.c0, rt0.c0)))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((rt0.c3) IS TRUE)) BETWEEN ((('\rA?	F')&(rt0.c0))) AND ((((rt0.c1, rt0.c1, rt0.c3)) NOT BETWEEN ((vt0.c0, v0.c0, rt0.c2)) AND ((rt0.c3, v0.c0, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) IS TRUE)) BETWEEN ((('\rA?	F')&(rt0.c0))) AND ((((rt0.c1, rt0.c1, rt0.c3)) NOT BETWEEN ((vt0.c0, v0.c0, rt0.c2)) AND ((rt0.c3, v0.c0, rt0.c0)))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((rt0.c3) IS TRUE)) BETWEEN ((('\rA?	F')&(rt0.c0))) AND ((((rt0.c1, rt0.c1, rt0.c3)) NOT BETWEEN ((vt0.c0, v0.c0, rt0.c2)) AND ((rt0.c3, v0.c0, rt0.c0))))));
SELECT COUNT(*) FROM vt0, v0 WHERE (((json_extract(v0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_extract(v0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((json_extract(v0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_extract(v0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (((0.4159960474961969) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.4159960474961969) NOTNULL)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (((0.4159960474961969) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.4159960474961969) NOTNULL)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (((0.4159960474961969) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((((rt0.c3)<=(rt0.c3))) ISNULL)) ORDER BY NULLIF(DISTINCT rt0.c0, vt0.c0) COLLATE BINARY  NULLS FIRST, (- ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)<=(rt0.c3))) ISNULL)) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY NULLIF(DISTINCT rt0.c0, vt0.c0) COLLATE BINARY  NULLS FIRST, (- ((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((((rt0.c3)<=(rt0.c3))) ISNULL)) ORDER BY NULLIF(DISTINCT rt0.c0, vt0.c0) COLLATE BINARY  NULLS FIRST, (- ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)<=(rt0.c3))) ISNULL)) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY NULLIF(DISTINCT rt0.c0, vt0.c0) COLLATE BINARY  NULLS FIRST, (- ((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((((rt0.c3)<=(rt0.c3))) ISNULL)) ORDER BY NULLIF(DISTINCT rt0.c0, vt0.c0) COLLATE BINARY  NULLS FIRST, (- ((vt0.c0 IN ())));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON JULIANDAY((- (rt0.c0)), ((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)), ((0.02005887360048675) BETWEEN (rt0.c1) AND (rt0.c2)), ((('\n#'))<((rt0.c1))), (((rt0.c0))>=((rt0.c3)))) WHERE ((UNLIKELY(vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((UNLIKELY(vt0.c0) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON JULIANDAY((- (rt0.c0)), ((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)), ((0.02005887360048675) BETWEEN (rt0.c1) AND (rt0.c2)), ((('\n#'))<((rt0.c1))), (((rt0.c0))>=((rt0.c3)))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON JULIANDAY((- (rt0.c0)), ((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)), ((0.02005887360048675) BETWEEN (rt0.c1) AND (rt0.c2)), ((('\n#'))<((rt0.c1))), (((rt0.c0))>=((rt0.c3)))) WHERE ((UNLIKELY(vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((UNLIKELY(vt0.c0) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON JULIANDAY((- (rt0.c0)), ((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)), ((0.02005887360048675) BETWEEN (rt0.c1) AND (rt0.c2)), ((('\n#'))<((rt0.c1))), (((rt0.c0))>=((rt0.c3)))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON JULIANDAY((- (rt0.c0)), ((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)), ((0.02005887360048675) BETWEEN (rt0.c1) AND (rt0.c2)), ((('\n#'))<((rt0.c1))), (((rt0.c0))>=((rt0.c3)))) WHERE ((UNLIKELY(vt0.c0) IN ()));
SELECT COUNT(*) FROM v0 WHERE (CASE LOWER(v0.c0)  WHEN ((v0.c0) NOT BETWEEN (NULL) AND (v0.c0)) THEN ((v0.c0)>>(v0.c0)) ELSE v0.c0 END) ORDER BY ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, NULL)) AND ((v0.c0, v0.c0, v0.c0))), ((v0.c0)AND(NULL)), v0.c0 COLLATE BINARY))<=((('#h' IN (v0.c0, v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, (~ (v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE LOWER(v0.c0)  WHEN ((v0.c0) NOT BETWEEN (NULL) AND (v0.c0)) THEN ((v0.c0)>>(v0.c0)) ELSE v0.c0 END) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, NULL)) AND ((v0.c0, v0.c0, v0.c0))), ((v0.c0)AND(NULL)), v0.c0 COLLATE BINARY))<=((('#h' IN (v0.c0, v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, (~ (v0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CASE LOWER(v0.c0)  WHEN ((v0.c0) NOT BETWEEN (NULL) AND (v0.c0)) THEN ((v0.c0)>>(v0.c0)) ELSE v0.c0 END) ORDER BY ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, NULL)) AND ((v0.c0, v0.c0, v0.c0))), ((v0.c0)AND(NULL)), v0.c0 COLLATE BINARY))<=((('#h' IN (v0.c0, v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, (~ (v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE LOWER(v0.c0)  WHEN ((v0.c0) NOT BETWEEN (NULL) AND (v0.c0)) THEN ((v0.c0)>>(v0.c0)) ELSE v0.c0 END) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, NULL)) AND ((v0.c0, v0.c0, v0.c0))), ((v0.c0)AND(NULL)), v0.c0 COLLATE BINARY))<=((('#h' IN (v0.c0, v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, (~ (v0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CASE LOWER(v0.c0)  WHEN ((v0.c0) NOT BETWEEN (NULL) AND (v0.c0)) THEN ((v0.c0)>>(v0.c0)) ELSE v0.c0 END) ORDER BY ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, NULL)) AND ((v0.c0, v0.c0, v0.c0))), ((v0.c0)AND(NULL)), v0.c0 COLLATE BINARY))<=((('#h' IN (v0.c0, v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, (~ (v0.c0)))))  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE (((vt0.c0)>(((v0.c0)<=(vt0.c0))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>(((v0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c0);
SELECT ALL * FROM vt0, v0 WHERE (((vt0.c0)>(((v0.c0)<=(vt0.c0))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>(((v0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c0);
SELECT ALL * FROM vt0, v0 WHERE (((vt0.c0)>(((v0.c0)<=(vt0.c0))))) ORDER BY v0.c0;
SELECT ALL * FROM vt0 WHERE (LIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY LOWER(((vt0.c0)>=(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY LOWER(((vt0.c0)>=(vt0.c0))) ASC);
SELECT ALL * FROM vt0 WHERE (LIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY LOWER(((vt0.c0)>=(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY LOWER(((vt0.c0)>=(vt0.c0))) ASC);
SELECT ALL * FROM vt0 WHERE (LIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY LOWER(((vt0.c0)>=(vt0.c0))) ASC;
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c0, (- (vt0.c0)), (- (vt0.c0)), CAST(v0.c0 AS NUMERIC), 'd'))>((NULLIF(DISTINCT v0.c0, v0.c0), v0.c0, ((vt0.c0)-(vt0.c0)), (- (v0.c0)), CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, (- (vt0.c0)), (- (vt0.c0)), CAST(v0.c0 AS NUMERIC), 'd'))>((NULLIF(DISTINCT v0.c0, v0.c0), v0.c0, ((vt0.c0)-(vt0.c0)), (- (v0.c0)), CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c0, (- (vt0.c0)), (- (vt0.c0)), CAST(v0.c0 AS NUMERIC), 'd'))>((NULLIF(DISTINCT v0.c0, v0.c0), v0.c0, ((vt0.c0)-(vt0.c0)), (- (v0.c0)), CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, (- (vt0.c0)), (- (vt0.c0)), CAST(v0.c0 AS NUMERIC), 'd'))>((NULLIF(DISTINCT v0.c0, v0.c0), v0.c0, ((vt0.c0)-(vt0.c0)), (- (v0.c0)), CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c0, (- (vt0.c0)), (- (vt0.c0)), CAST(v0.c0 AS NUMERIC), 'd'))>((NULLIF(DISTINCT v0.c0, v0.c0), v0.c0, ((vt0.c0)-(vt0.c0)), (- (v0.c0)), CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END))));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(CASE WHEN NULL THEN rt0.c0 ELSE x'' END AS INTEGER)) ORDER BY rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN NULL THEN rt0.c0 ELSE x'' END AS INTEGER)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY rt0.c3  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(CASE WHEN NULL THEN rt0.c0 ELSE x'' END AS INTEGER)) ORDER BY rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN NULL THEN rt0.c0 ELSE x'' END AS INTEGER)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY rt0.c3  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(CASE WHEN NULL THEN rt0.c0 ELSE x'' END AS INTEGER)) ORDER BY rt0.c3  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE (((rt0.c2, rt0.c2, rt0.c3))=((rt0.c3, rt0.c3, rt0.c0)))  WHEN ((rt0.c0) IS TRUE) THEN CAST(rt0.c0 AS NUMERIC) ELSE CAST(rt0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c2, rt0.c2, rt0.c3))==((rt0.c3, rt0.c3, rt0.c0)))  WHEN ((rt0.c0) IS TRUE) THEN CAST(rt0.c0 AS NUMERIC) ELSE CAST(rt0.c0 AS BLOB) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE (((rt0.c2, rt0.c2, rt0.c3))=((rt0.c3, rt0.c3, rt0.c0)))  WHEN ((rt0.c0) IS TRUE) THEN CAST(rt0.c0 AS NUMERIC) ELSE CAST(rt0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c2, rt0.c2, rt0.c3))==((rt0.c3, rt0.c3, rt0.c0)))  WHEN ((rt0.c0) IS TRUE) THEN CAST(rt0.c0 AS NUMERIC) ELSE CAST(rt0.c0 AS BLOB) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE (((rt0.c2, rt0.c2, rt0.c3))=((rt0.c3, rt0.c3, rt0.c0)))  WHEN ((rt0.c0) IS TRUE) THEN CAST(rt0.c0 AS NUMERIC) ELSE CAST(rt0.c0 AS BLOB) END);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST((NOT (rt0.c3)) AS REAL)) ORDER BY ((((vt0.c0))<((rt0.c0))) IN ())  NULLS LAST, CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt0.c3)) AS REAL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0))<((rt0.c0))) IN ())  NULLS LAST, CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST((NOT (rt0.c3)) AS REAL)) ORDER BY ((((vt0.c0))<((rt0.c0))) IN ())  NULLS LAST, CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt0.c3)) AS REAL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0))<((rt0.c0))) IN ())  NULLS LAST, CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST((NOT (rt0.c3)) AS REAL)) ORDER BY ((((vt0.c0))<((rt0.c0))) IN ())  NULLS LAST, CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0 WHERE ((((v0.c0)) NOT BETWEEN ((LIKELIHOOD(DISTINCT rt0.c0, 0.10661073723483216))) AND (((((rt0.c3, rt0.c1, rt0.c3)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((rt0.c2, rt0.c2, rt0.c2)))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((LIKELIHOOD(DISTINCT rt0.c0, 0.10661073723483216))) AND (((((rt0.c3, rt0.c1, rt0.c3)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((rt0.c2, rt0.c2, rt0.c2))))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((v0.c0)) NOT BETWEEN ((LIKELIHOOD(DISTINCT rt0.c0, 0.10661073723483216))) AND (((((rt0.c3, rt0.c1, rt0.c3)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((rt0.c2, rt0.c2, rt0.c2)))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((LIKELIHOOD(DISTINCT rt0.c0, 0.10661073723483216))) AND (((((rt0.c3, rt0.c1, rt0.c3)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((rt0.c2, rt0.c2, rt0.c2))))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((v0.c0)) NOT BETWEEN ((LIKELIHOOD(DISTINCT rt0.c0, 0.10661073723483216))) AND (((((rt0.c3, rt0.c1, rt0.c3)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((rt0.c2, rt0.c2, rt0.c2)))))));
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((((((((json_object(rt0.c0, 0X406b06c3, vt0.c0, v0.c0))AND(((rt0.c2) BETWEEN (rt0.c3) AND (vt0.c0)))))OR(((vt0.c0)%('1330671287')))))OR(CAST(vt0.c0 AS REAL))))AND(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((json_object(rt0.c0, 0X406b06c3, vt0.c0, v0.c0))AND(((rt0.c2) BETWEEN (rt0.c3) AND (vt0.c0)))))OR(((vt0.c0)%('1330671287')))))OR(CAST(vt0.c0 AS REAL))))AND(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c3))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((((((((json_object(rt0.c0, 0X406b06c3, vt0.c0, v0.c0))AND(((rt0.c2) BETWEEN (rt0.c3) AND (vt0.c0)))))OR(((vt0.c0)%('1330671287')))))OR(CAST(vt0.c0 AS REAL))))AND(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((json_object(rt0.c0, 0X406b06c3, vt0.c0, v0.c0))AND(((rt0.c2) BETWEEN (rt0.c3) AND (vt0.c0)))))OR(((vt0.c0)%('1330671287')))))OR(CAST(vt0.c0 AS REAL))))AND(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c3))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c1) NOT NULL) IN (((v0.c0) ISNULL))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c1) NOT NULL) IN (((v0.c0) ISNULL))));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c1) NOT NULL) IN (((v0.c0) ISNULL))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c1) NOT NULL) IN (((v0.c0) ISNULL))));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c1) NOT NULL) IN (((v0.c0) ISNULL))) WHERE (rt0.c2);
SELECT * FROM v0, vt0 WHERE ((((v0.c0, vt0.c0, vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((((v0.c0) NOTNULL), (NOT (v0.c0)), ((((v0.c0)AND(vt0.c0)))AND(1.209518385E9)), CASE WHEN vt0.c0 THEN vt0.c0 END, ((v0.c0)&(v0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END, (~ (v0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, vt0.c0, vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((((v0.c0) NOTNULL), (NOT (v0.c0)), ((((v0.c0)AND(vt0.c0)))AND(1.209518385E9)), CASE WHEN vt0.c0 THEN vt0.c0 END, ((v0.c0)&(v0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END, (~ (v0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((v0.c0, vt0.c0, vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((((v0.c0) NOTNULL), (NOT (v0.c0)), ((((v0.c0)AND(vt0.c0)))AND(1.209518385E9)), CASE WHEN vt0.c0 THEN vt0.c0 END, ((v0.c0)&(v0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END, (~ (v0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, vt0.c0, vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((((v0.c0) NOTNULL), (NOT (v0.c0)), ((((v0.c0)AND(vt0.c0)))AND(1.209518385E9)), CASE WHEN vt0.c0 THEN vt0.c0 END, ((v0.c0)&(v0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END, (~ (v0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((v0.c0, vt0.c0, vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((((v0.c0) NOTNULL), (NOT (v0.c0)), ((((v0.c0)AND(vt0.c0)))AND(1.209518385E9)), CASE WHEN vt0.c0 THEN vt0.c0 END, ((v0.c0)&(v0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END, (~ (v0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS TEXT)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((((((((-1.612494871E9)AND(rt0.c1)))AND(rt0.c1)))AND(v0.c0)))AND(rt0.c1)))OR((((rt0.c2))<=((x'c4de'))))))AND(GLOB(rt0.c2, rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((((((((-1.612494871E9)AND(rt0.c1)))AND(rt0.c1)))AND(v0.c0)))AND(rt0.c1)))OR((((rt0.c2))<=((x'c4de'))))))AND(GLOB(rt0.c2, rt0.c1)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((((((((-1.612494871E9)AND(rt0.c1)))AND(rt0.c1)))AND(v0.c0)))AND(rt0.c1)))OR((((rt0.c2))<=((x'c4de'))))))AND(GLOB(rt0.c2, rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((((((((-1.612494871E9)AND(rt0.c1)))AND(rt0.c1)))AND(v0.c0)))AND(rt0.c1)))OR((((rt0.c2))<=((x'c4de'))))))AND(GLOB(rt0.c2, rt0.c1)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((((((((-1.612494871E9)AND(rt0.c1)))AND(rt0.c1)))AND(v0.c0)))AND(rt0.c1)))OR((((rt0.c2))<=((x'c4de'))))))AND(GLOB(rt0.c2, rt0.c1))));
SELECT * FROM vt0, rt0, v0 WHERE (((LAST_INSERT_ROWID())*(((rt0.c2) NOTNULL)))) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID())*(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM vt0, rt0, v0 WHERE (((LAST_INSERT_ROWID())*(((rt0.c2) NOTNULL)))) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID())*(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM vt0, rt0, v0 WHERE (((LAST_INSERT_ROWID())*(((rt0.c2) NOTNULL)))) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((''))))+(CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((''))))+(CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((''))))+(CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((''))))+(CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((''))))+(CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END)));
SELECT COUNT(*) FROM vt0 WHERE ((- (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (CAST(vt0.c0 AS INTEGER))));
SELECT ALL * FROM v0 WHERE ((+ (TYPEOF(v0.c0)))) ORDER BY ((((v0.c0)OR('-2003619647'))) BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (CAST(v0.c0 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (TYPEOF(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)OR('-2003619647'))) BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (CAST(v0.c0 AS BLOB)))  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((+ (TYPEOF(v0.c0)))) ORDER BY ((((v0.c0)OR('-2003619647'))) BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (CAST(v0.c0 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (TYPEOF(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)OR('-2003619647'))) BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (CAST(v0.c0 AS BLOB)))  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((+ (TYPEOF(v0.c0)))) ORDER BY ((((v0.c0)OR('-2003619647'))) BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (CAST(v0.c0 AS BLOB)))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1)) BETWEEN (((rt0.c1 IN ()))) AND ((rt0.c2 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (((rt0.c1 IN ()))) AND ((rt0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1)) BETWEEN (((rt0.c1 IN ()))) AND ((rt0.c2 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (((rt0.c1 IN ()))) AND ((rt0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1)) BETWEEN (((rt0.c1 IN ()))) AND ((rt0.c2 COLLATE BINARY))));
SELECT * FROM v0, vt0, rt0 WHERE (CASE WHEN 0.5902444093345586 THEN 0.7971228962637079 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.5902444093345586 THEN 0.7971228962637079 END) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (CASE WHEN 0.5902444093345586 THEN 0.7971228962637079 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.5902444093345586 THEN 0.7971228962637079 END) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (CASE WHEN 0.5902444093345586 THEN 0.7971228962637079 END);
SELECT * FROM rt0 WHERE ((((0X7be0864a, ((0xfffffffff49257cc) NOTNULL), ((rt0.c1)<<(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c3))))<=((('S9' IN ()), (NULL IN (rt0.c3)), ((rt0.c1)-(rt0.c2)), ((rt0.c0)||(rt0.c0)), (rt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((0x7be0864a, ((0xfffffffff49257cc) NOTNULL), ((rt0.c1)<<(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c3))))<=((('S9' IN ()), (NULL IN (rt0.c3)), ((rt0.c1)-(rt0.c2)), ((rt0.c0)||(rt0.c0)), (rt0.c0 IN ()))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((0X7be0864a, ((0xfffffffff49257cc) NOTNULL), ((rt0.c1)<<(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c3))))<=((('S9' IN ()), (NULL IN (rt0.c3)), ((rt0.c1)-(rt0.c2)), ((rt0.c0)||(rt0.c0)), (rt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((0x7be0864a, ((0xfffffffff49257cc) NOTNULL), ((rt0.c1)<<(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c3))))<=((('S9' IN ()), (NULL IN (rt0.c3)), ((rt0.c1)-(rt0.c2)), ((rt0.c0)||(rt0.c0)), (rt0.c0 IN ()))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((0X7be0864a, ((0xfffffffff49257cc) NOTNULL), ((rt0.c1)<<(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c3))))<=((('S9' IN ()), (NULL IN (rt0.c3)), ((rt0.c1)-(rt0.c2)), ((rt0.c0)||(rt0.c0)), (rt0.c0 IN ())))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON (((0.9754770199850901 IN ()))*(((rt0.c2) BETWEEN (-1.101723496E9) AND (rt0.c3)))) WHERE (LIKELY(DISTINCT NULL));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT NULL)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((0.9754770199850901 IN ()))*(((rt0.c2) BETWEEN (-1.101723496E9) AND (rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON (((0.9754770199850901 IN ()))*(((rt0.c2) BETWEEN (-1.101723496E9) AND (rt0.c3)))) WHERE (LIKELY(DISTINCT NULL));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT NULL)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((0.9754770199850901 IN ()))*(((rt0.c2) BETWEEN (-1.101723496E9) AND (rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON (((0.9754770199850901 IN ()))*(((rt0.c2) BETWEEN (-1.101723496E9) AND (rt0.c3)))) WHERE (LIKELY(DISTINCT NULL));
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (x'dbd9');
SELECT SUM(count) FROM (SELECT ((x'dbd9') IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (x'dbd9');
SELECT SUM(count) FROM (SELECT ((x'dbd9') IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (x'dbd9');
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((((rt0.c0)%(rt0.c3)))OR(((rt0.c3) NOTNULL))))OR(rt0.c2 COLLATE NOCASE)) LEFT OUTER JOIN vt0 ON (((rt0.c1) NOT NULL) IN ()) WHERE (((((rt0.c0)=(1.769182645E9)))LIKE(rt0.c0))) ORDER BY (((rt0.c3 IN ())) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)=(1.769182645E9)))LIKE(rt0.c0))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((((rt0.c0)%(rt0.c3)))OR(((rt0.c3) NOTNULL))))OR(rt0.c2 COLLATE NOCASE)) LEFT OUTER JOIN vt0 ON (((rt0.c1) NOT NULL) IN ()) ORDER BY (((rt0.c3 IN ())) IS TRUE));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((((rt0.c0)%(rt0.c3)))OR(((rt0.c3) NOTNULL))))OR(rt0.c2 COLLATE NOCASE)) LEFT OUTER JOIN vt0 ON (((rt0.c1) NOT NULL) IN ()) WHERE (((((rt0.c0)=(1.769182645E9)))LIKE(rt0.c0))) ORDER BY (((rt0.c3 IN ())) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)=(1.769182645E9)))LIKE(rt0.c0))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((((rt0.c0)%(rt0.c3)))OR(((rt0.c3) NOTNULL))))OR(rt0.c2 COLLATE NOCASE)) LEFT OUTER JOIN vt0 ON (((rt0.c1) NOT NULL) IN ()) ORDER BY (((rt0.c3 IN ())) IS TRUE));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((((rt0.c0)%(rt0.c3)))OR(((rt0.c3) NOTNULL))))OR(rt0.c2 COLLATE NOCASE)) LEFT OUTER JOIN vt0 ON (((rt0.c1) NOT NULL) IN ()) WHERE (((((rt0.c0)=(1.769182645E9)))LIKE(rt0.c0))) ORDER BY (((rt0.c3 IN ())) IS TRUE);
SELECT ALL * FROM rt0, v0 WHERE (((((v0.c0) IS FALSE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((v0.c0) IS FALSE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((v0.c0) IS FALSE)) NOTNULL));
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN (~ (NULL)) THEN CAST(vt0.c0 AS REAL) ELSE vt0.c0 COLLATE RTRIM END) ORDER BY (((- (vt0.c0)))<(vt0.c0)), ((((vt0.c0)>(vt0.c0))) IS TRUE), ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN (((x'')>(vt0.c0))) AND (CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN (~ (NULL)) THEN CAST(vt0.c0 AS REAL) ELSE vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0)))<(vt0.c0)), ((((vt0.c0)>(vt0.c0))) IS TRUE), ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN (((x'')>(vt0.c0))) AND (CAST(vt0.c0 AS BLOB))));
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN (~ (NULL)) THEN CAST(vt0.c0 AS REAL) ELSE vt0.c0 COLLATE RTRIM END) ORDER BY (((- (vt0.c0)))<(vt0.c0)), ((((vt0.c0)>(vt0.c0))) IS TRUE), ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN (((x'')>(vt0.c0))) AND (CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN (~ (NULL)) THEN CAST(vt0.c0 AS REAL) ELSE vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0)))<(vt0.c0)), ((((vt0.c0)>(vt0.c0))) IS TRUE), ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN (((x'')>(vt0.c0))) AND (CAST(vt0.c0 AS BLOB))));
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN (~ (NULL)) THEN CAST(vt0.c0 AS REAL) ELSE vt0.c0 COLLATE RTRIM END) ORDER BY (((- (vt0.c0)))<(vt0.c0)), ((((vt0.c0)>(vt0.c0))) IS TRUE), ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN (((x'')>(vt0.c0))) AND (CAST(vt0.c0 AS BLOB)));
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON (CASE WHEN v0.c0 THEN vt0.c0 END IN ()) WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))*(((vt0.c0)>(v0.c0))))) ORDER BY ((((vt0.c0)<(v0.c0))) NOT BETWEEN (vt0.c0) AND ((((v0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))*(((vt0.c0)>(v0.c0))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (CASE WHEN v0.c0 THEN vt0.c0 END IN ()) ORDER BY ((((vt0.c0)<(v0.c0))) NOT BETWEEN (vt0.c0) AND ((((v0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0))))));
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON (CASE WHEN v0.c0 THEN vt0.c0 END IN ()) WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))*(((vt0.c0)>(v0.c0))))) ORDER BY ((((vt0.c0)<(v0.c0))) NOT BETWEEN (vt0.c0) AND ((((v0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))*(((vt0.c0)>(v0.c0))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (CASE WHEN v0.c0 THEN vt0.c0 END IN ()) ORDER BY ((((vt0.c0)<(v0.c0))) NOT BETWEEN (vt0.c0) AND ((((v0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0))))));
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON (CASE WHEN v0.c0 THEN vt0.c0 END IN ()) WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))*(((vt0.c0)>(v0.c0))))) ORDER BY ((((vt0.c0)<(v0.c0))) NOT BETWEEN (vt0.c0) AND ((((v0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0)))));
SELECT * FROM rt0, vt0, v0 WHERE (((((rt0.c3)+(v0.c0)))AND((((0.023007770483151502)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ORDER BY ABS(v0.c0) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)+(v0.c0)))AND((((0.023007770483151502)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ABS(v0.c0) COLLATE NOCASE DESC);
SELECT * FROM rt0, vt0, v0 WHERE (((((rt0.c3)+(v0.c0)))AND((((0.023007770483151502)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ORDER BY ABS(v0.c0) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)+(v0.c0)))AND((((0.023007770483151502)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ABS(v0.c0) COLLATE NOCASE DESC);
SELECT * FROM rt0, vt0, v0 WHERE (((((rt0.c3)+(v0.c0)))AND((((0.023007770483151502)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ORDER BY ABS(v0.c0) COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(x''))) AND (LOWER(DISTINCT vt0.c0)))) ORDER BY ((vt0.c0)*(vt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(x''))) AND (LOWER(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)*(vt0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(x''))) AND (LOWER(DISTINCT vt0.c0)))) ORDER BY ((vt0.c0)*(vt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(x''))) AND (LOWER(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)*(vt0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(x''))) AND (LOWER(DISTINCT vt0.c0)))) ORDER BY ((vt0.c0)*(vt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0 NATURAL JOIN vt0 WHERE ((rt0.c3 IN (CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END, ((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN (CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END, ((rt0.c0) ISNULL)))) IS TRUE)  as count FROM v0, rt0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0, rt0 NATURAL JOIN vt0 WHERE ((rt0.c3 IN (CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END, ((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN (CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END, ((rt0.c0) ISNULL)))) IS TRUE)  as count FROM v0, rt0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0, rt0 NATURAL JOIN vt0 WHERE ((rt0.c3 IN (CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END, ((rt0.c0) ISNULL))));
SELECT * FROM v0 WHERE ((((CAST(v0.c0 AS TEXT)))>=((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(v0.c0 AS TEXT)))>=((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((CAST(v0.c0 AS TEXT)))>=((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(v0.c0 AS TEXT)))>=((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((CAST(v0.c0 AS TEXT)))>=((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)OR(((0.8733109594359236)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)OR(((0.8733109594359236)&(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)OR(((0.8733109594359236)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)OR(((0.8733109594359236)&(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)OR(((0.8733109594359236)&(vt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN v0 ON ((CAST(rt0.c2 AS TEXT))>(((((rt0.c0)AND(v0.c0)))AND(rt0.c1)))) WHERE (CAST(((rt0.c3)&(rt0.c2)) AS NUMERIC)) ORDER BY (((((rt0.c1)OR(rt0.c0)))AND(v0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3)&(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN v0 ON ((CAST(rt0.c2 AS TEXT))>(((((rt0.c0)AND(v0.c0)))AND(rt0.c1)))) ORDER BY (((((rt0.c1)OR(rt0.c0)))AND(v0.c0)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN v0 ON ((CAST(rt0.c2 AS TEXT))>(((((rt0.c0)AND(v0.c0)))AND(rt0.c1)))) WHERE (CAST(((rt0.c3)&(rt0.c2)) AS NUMERIC)) ORDER BY (((((rt0.c1)OR(rt0.c0)))AND(v0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3)&(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN v0 ON ((CAST(rt0.c2 AS TEXT))>(((((rt0.c0)AND(v0.c0)))AND(rt0.c1)))) ORDER BY (((((rt0.c1)OR(rt0.c0)))AND(v0.c0)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN v0 ON ((CAST(rt0.c2 AS TEXT))>(((((rt0.c0)AND(v0.c0)))AND(rt0.c1)))) WHERE (CAST(((rt0.c3)&(rt0.c2)) AS NUMERIC)) ORDER BY (((((rt0.c1)OR(rt0.c0)))AND(v0.c0)) IN ())  NULLS FIRST;
SELECT * FROM vt0, rt0, v0 WHERE ((((0.7110760131082624)) NOT BETWEEN ((((rt0.c0)&(rt0.c0)))) AND (((((rt0.c2, v0.c0, v0.c0))==((vt0.c0, 0.3188304764491474, vt0.c0))))))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0.7110760131082624)) NOT BETWEEN ((((rt0.c0)&(rt0.c0)))) AND (((((rt0.c2, v0.c0, v0.c0))=((vt0.c0, 0.3188304764491474, vt0.c0))))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT * FROM vt0, rt0, v0 WHERE ((((0.7110760131082624)) NOT BETWEEN ((((rt0.c0)&(rt0.c0)))) AND (((((rt0.c2, v0.c0, v0.c0))==((vt0.c0, 0.3188304764491474, vt0.c0))))))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0.7110760131082624)) NOT BETWEEN ((((rt0.c0)&(rt0.c0)))) AND (((((rt0.c2, v0.c0, v0.c0))=((vt0.c0, 0.3188304764491474, vt0.c0))))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT * FROM vt0, rt0, v0 WHERE ((((0.7110760131082624)) NOT BETWEEN ((((rt0.c0)&(rt0.c0)))) AND (((((rt0.c2, v0.c0, v0.c0))==((vt0.c0, 0.3188304764491474, vt0.c0))))))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c3)))AND(rt0.c3))) BETWEEN (((((rt0.c3)AND(rt0.c1)))AND(rt0.c2))) AND (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN 'Tk0Xl#' WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY (((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2))))>(((+ (0.12056278115364827))))) ASC  NULLS LAST, ((((rt0.c0 COLLATE BINARY)AND(((rt0.c0)OR(rt0.c0)))))AND(rt0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c3))) BETWEEN (((((rt0.c3)AND(rt0.c1)))AND(rt0.c2))) AND (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN 'Tk0Xl#' WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2))))>(((+ (0.12056278115364827))))) ASC  NULLS LAST, ((((rt0.c0 COLLATE BINARY)AND(((rt0.c0)OR(rt0.c0)))))AND(rt0.c0 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c3)))AND(rt0.c3))) BETWEEN (((((rt0.c3)AND(rt0.c1)))AND(rt0.c2))) AND (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN 'Tk0Xl#' WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY (((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2))))>(((+ (0.12056278115364827))))) ASC  NULLS LAST, ((((rt0.c0 COLLATE BINARY)AND(((rt0.c0)OR(rt0.c0)))))AND(rt0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c3))) BETWEEN (((((rt0.c3)AND(rt0.c1)))AND(rt0.c2))) AND (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN 'Tk0Xl#' WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2))))>(((+ (0.12056278115364827))))) ASC  NULLS LAST, ((((rt0.c0 COLLATE BINARY)AND(((rt0.c0)OR(rt0.c0)))))AND(rt0.c0 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c3)))AND(rt0.c3))) BETWEEN (((((rt0.c3)AND(rt0.c1)))AND(rt0.c2))) AND (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN 'Tk0Xl#' WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY (((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2))))>(((+ (0.12056278115364827))))) ASC  NULLS LAST, ((((rt0.c0 COLLATE BINARY)AND(((rt0.c0)OR(rt0.c0)))))AND(rt0.c0 COLLATE RTRIM)) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)LIKE((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)LIKE((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)LIKE((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)LIKE((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)LIKE((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM v0 WHERE (SQLITE_SOURCE_ID() COLLATE NOCASE) ORDER BY ((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))GLOB(((((v0.c0)OR(1.410940541E9)))OR(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID() COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))GLOB(((((v0.c0)OR(1.410940541E9)))OR(v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (SQLITE_SOURCE_ID() COLLATE NOCASE) ORDER BY ((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))GLOB(((((v0.c0)OR(1.410940541E9)))OR(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID() COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))GLOB(((((v0.c0)OR(1.410940541E9)))OR(v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (SQLITE_SOURCE_ID() COLLATE NOCASE) ORDER BY ((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))GLOB(((((v0.c0)OR(1.410940541E9)))OR(v0.c0))))  NULLS LAST;
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((0.7758537838724032)AND(rt0.c2)))AND(v0.c0)) COLLATE NOCASE) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((((((0.7758537838724032)AND(rt0.c2)))AND(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY rt0.c2);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((0.7758537838724032)AND(rt0.c2)))AND(v0.c0)) COLLATE NOCASE) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((((((0.7758537838724032)AND(rt0.c2)))AND(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY rt0.c2);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((0.7758537838724032)AND(rt0.c2)))AND(v0.c0)) COLLATE NOCASE) ORDER BY rt0.c2;
SELECT ALL * FROM rt0 CROSS JOIN v0 ON (((x'6406')+(rt0.c2)) IN ()) WHERE ((rt0.c1 IN ()) COLLATE NOCASE) ORDER BY CASE ((rt0.c3)=(rt0.c2))  WHEN rt0.c3 COLLATE BINARY THEN ((NULL)OR(rt0.c1)) WHEN (rt0.c2 IN ()) THEN ((v0.c0)<(rt0.c3)) WHEN rt0.c3 COLLATE RTRIM THEN ((rt0.c3)>(rt0.c0)) ELSE ((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)) END ASC, (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))<=((HEX(DISTINCT v0.c0))))  NULLS FIRST, ((((rt0.c0)<<(rt0.c0)))GLOB((rt0.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((x'6406')+(rt0.c2)) IN ()) ORDER BY CASE ((rt0.c3)=(rt0.c2))  WHEN rt0.c3 COLLATE BINARY THEN ((NULL)OR(rt0.c1)) WHEN (rt0.c2 IN ()) THEN ((v0.c0)<(rt0.c3)) WHEN rt0.c3 COLLATE RTRIM THEN ((rt0.c3)>(rt0.c0)) ELSE ((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)) END ASC, (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))<=((HEX(DISTINCT v0.c0))))  NULLS FIRST, ((((rt0.c0)<<(rt0.c0)))GLOB((rt0.c2 IN ()))) DESC);
SELECT ALL * FROM rt0 CROSS JOIN v0 ON (((x'6406')+(rt0.c2)) IN ()) WHERE ((rt0.c1 IN ()) COLLATE NOCASE) ORDER BY CASE ((rt0.c3)=(rt0.c2))  WHEN rt0.c3 COLLATE BINARY THEN ((NULL)OR(rt0.c1)) WHEN (rt0.c2 IN ()) THEN ((v0.c0)<(rt0.c3)) WHEN rt0.c3 COLLATE RTRIM THEN ((rt0.c3)>(rt0.c0)) ELSE ((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)) END ASC, (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))<=((HEX(DISTINCT v0.c0))))  NULLS FIRST, ((((rt0.c0)<<(rt0.c0)))GLOB((rt0.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((x'6406')+(rt0.c2)) IN ()) ORDER BY CASE ((rt0.c3)=(rt0.c2))  WHEN rt0.c3 COLLATE BINARY THEN ((NULL)OR(rt0.c1)) WHEN (rt0.c2 IN ()) THEN ((v0.c0)<(rt0.c3)) WHEN rt0.c3 COLLATE RTRIM THEN ((rt0.c3)>(rt0.c0)) ELSE ((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)) END ASC, (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))<=((HEX(DISTINCT v0.c0))))  NULLS FIRST, ((((rt0.c0)<<(rt0.c0)))GLOB((rt0.c2 IN ()))) DESC);
SELECT ALL * FROM rt0 CROSS JOIN v0 ON (((x'6406')+(rt0.c2)) IN ()) WHERE ((rt0.c1 IN ()) COLLATE NOCASE) ORDER BY CASE ((rt0.c3)=(rt0.c2))  WHEN rt0.c3 COLLATE BINARY THEN ((NULL)OR(rt0.c1)) WHEN (rt0.c2 IN ()) THEN ((v0.c0)<(rt0.c3)) WHEN rt0.c3 COLLATE RTRIM THEN ((rt0.c3)>(rt0.c0)) ELSE ((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)) END ASC, (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))<=((HEX(DISTINCT v0.c0))))  NULLS FIRST, ((((rt0.c0)<<(rt0.c0)))GLOB((rt0.c2 IN ()))) DESC;
SELECT * FROM rt0, vt0 INNER JOIN v0 ON rt0.c1 WHERE (CASE ((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c2))  WHEN CAST(rt0.c3 AS BLOB) THEN rt0.c2 COLLATE RTRIM WHEN (((v0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))) THEN ((rt0.c0)!=(v0.c0)) WHEN (((vt0.c0)) BETWEEN ((rt0.c2)) AND (('R6*qgc2K>'))) THEN CAST(v0.c0 AS TEXT) END) ORDER BY ((((vt0.c0)IS(rt0.c0)))OR(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) DESC  NULLS FIRST, PRINTF(rt0.c0) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c2))  WHEN CAST(rt0.c3 AS BLOB) THEN rt0.c2 COLLATE RTRIM WHEN (((v0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))) THEN ((rt0.c0)<>(v0.c0)) WHEN (((vt0.c0)) BETWEEN ((rt0.c2)) AND (('R6*qgc2K>'))) THEN CAST(v0.c0 AS TEXT) END) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON rt0.c1 ORDER BY ((((vt0.c0)IS(rt0.c0)))OR(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) DESC  NULLS FIRST, PRINTF(rt0.c0) COLLATE NOCASE ASC);
SELECT * FROM rt0, vt0 INNER JOIN v0 ON rt0.c1 WHERE (CASE ((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c2))  WHEN CAST(rt0.c3 AS BLOB) THEN rt0.c2 COLLATE RTRIM WHEN (((v0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))) THEN ((rt0.c0)!=(v0.c0)) WHEN (((vt0.c0)) BETWEEN ((rt0.c2)) AND (('R6*qgc2K>'))) THEN CAST(v0.c0 AS TEXT) END) ORDER BY ((((vt0.c0)IS(rt0.c0)))OR(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) DESC  NULLS FIRST, PRINTF(rt0.c0) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c2))  WHEN CAST(rt0.c3 AS BLOB) THEN rt0.c2 COLLATE RTRIM WHEN (((v0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))) THEN ((rt0.c0)<>(v0.c0)) WHEN (((vt0.c0)) BETWEEN ((rt0.c2)) AND (('R6*qgc2K>'))) THEN CAST(v0.c0 AS TEXT) END) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON rt0.c1 ORDER BY ((((vt0.c0)IS(rt0.c0)))OR(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) DESC  NULLS FIRST, PRINTF(rt0.c0) COLLATE NOCASE ASC);
SELECT * FROM rt0, vt0 INNER JOIN v0 ON rt0.c1 WHERE (CASE ((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c2))  WHEN CAST(rt0.c3 AS BLOB) THEN rt0.c2 COLLATE RTRIM WHEN (((v0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))) THEN ((rt0.c0)!=(v0.c0)) WHEN (((vt0.c0)) BETWEEN ((rt0.c2)) AND (('R6*qgc2K>'))) THEN CAST(v0.c0 AS TEXT) END) ORDER BY ((((vt0.c0)IS(rt0.c0)))OR(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) DESC  NULLS FIRST, PRINTF(rt0.c0) COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM vt0, v0 NATURAL JOIN rt0 WHERE (IFNULL(DISTINCT (v0.c0 IN ()), CASE rt0.c3  WHEN vt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE NULL END)) ORDER BY ((NULL)<<(rt0.c3)), CASE WHEN CAST(v0.c0 AS TEXT) THEN (- (0.15876643585253036)) ELSE ((vt0.c0)/(v0.c0)) END, ((NULL)IS(((vt0.c0)-(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT (v0.c0 IN ()), CASE rt0.c3  WHEN vt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE NULL END)) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN rt0 ORDER BY ((NULL)<<(rt0.c3)), CASE WHEN CAST(v0.c0 AS TEXT) THEN (- (0.15876643585253036)) ELSE ((vt0.c0)/(v0.c0)) END, ((NULL)IS(((vt0.c0)-(rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 NATURAL JOIN rt0 WHERE (IFNULL(DISTINCT (v0.c0 IN ()), CASE rt0.c3  WHEN vt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE NULL END)) ORDER BY ((NULL)<<(rt0.c3)), CASE WHEN CAST(v0.c0 AS TEXT) THEN (- (0.15876643585253036)) ELSE ((vt0.c0)/(v0.c0)) END, ((NULL)IS(((vt0.c0)-(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT (v0.c0 IN ()), CASE rt0.c3  WHEN vt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE NULL END)) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN rt0 ORDER BY ((NULL)<<(rt0.c3)), CASE WHEN CAST(v0.c0 AS TEXT) THEN (- (0.15876643585253036)) ELSE ((vt0.c0)/(v0.c0)) END, ((NULL)IS(((vt0.c0)-(rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 NATURAL JOIN rt0 WHERE (IFNULL(DISTINCT (v0.c0 IN ()), CASE rt0.c3  WHEN vt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE NULL END)) ORDER BY ((NULL)<<(rt0.c3)), CASE WHEN CAST(v0.c0 AS TEXT) THEN (- (0.15876643585253036)) ELSE ((vt0.c0)/(v0.c0)) END, ((NULL)IS(((vt0.c0)-(rt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((((+ (v0.c0))) NOT BETWEEN ('[' COLLATE BINARY) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (0.4578262360560881))))) ORDER BY CAST(((v0.c0)<>(v0.c0)) AS NUMERIC) DESC, (((- (v0.c0))) BETWEEN (((v0.c0) NOTNULL)) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0))) NOT BETWEEN ('[' COLLATE BINARY) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (0.4578262360560881))))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)<>(v0.c0)) AS NUMERIC) DESC, (((- (v0.c0))) BETWEEN (((v0.c0) NOTNULL)) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE ((((+ (v0.c0))) NOT BETWEEN ('[' COLLATE BINARY) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (0.4578262360560881))))) ORDER BY CAST(((v0.c0)<>(v0.c0)) AS NUMERIC) DESC, (((- (v0.c0))) BETWEEN (((v0.c0) NOTNULL)) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0))) NOT BETWEEN ('[' COLLATE BINARY) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (0.4578262360560881))))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)<>(v0.c0)) AS NUMERIC) DESC, (((- (v0.c0))) BETWEEN (((v0.c0) NOTNULL)) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE ((((+ (v0.c0))) NOT BETWEEN ('[' COLLATE BINARY) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (0.4578262360560881))))) ORDER BY CAST(((v0.c0)<>(v0.c0)) AS NUMERIC) DESC, (((- (v0.c0))) BETWEEN (((v0.c0) NOTNULL)) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0))));
SELECT ALL * FROM rt0, v0 WHERE (((CASE WHEN rt0.c0 THEN v0.c0 END) IS TRUE)) ORDER BY (((~ (rt0.c2))) BETWEEN (HEX(DISTINCT v0.c0)) AND ((((rt0.c3))>=((rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN v0.c0 END) IS TRUE)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((~ (rt0.c2))) BETWEEN (HEX(DISTINCT v0.c0)) AND ((((rt0.c3))>=((rt0.c1))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (((CASE WHEN rt0.c0 THEN v0.c0 END) IS TRUE)) ORDER BY (((~ (rt0.c2))) BETWEEN (HEX(DISTINCT v0.c0)) AND ((((rt0.c3))>=((rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN v0.c0 END) IS TRUE)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((~ (rt0.c2))) BETWEEN (HEX(DISTINCT v0.c0)) AND ((((rt0.c3))>=((rt0.c1))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (((CASE WHEN rt0.c0 THEN v0.c0 END) IS TRUE)) ORDER BY (((~ (rt0.c2))) BETWEEN (HEX(DISTINCT v0.c0)) AND ((((rt0.c3))>=((rt0.c1))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (vt0.c0) ORDER BY LIKELY(DISTINCT (+ (vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY LIKELY(DISTINCT (+ (vt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (vt0.c0) ORDER BY LIKELY(DISTINCT (+ (vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY LIKELY(DISTINCT (+ (vt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (vt0.c0) ORDER BY LIKELY(DISTINCT (+ (vt0.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CASE 'kcr&'  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 'rﲟ+iⲧ}c]''' THEN v0.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE 'kcr&'  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 'rﲟ+iⲧ}c]''' THEN v0.c0 END AS BLOB)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CASE 'kcr&'  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 'rﲟ+iⲧ}c]''' THEN v0.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE 'kcr&'  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 'rﲟ+iⲧ}c]''' THEN v0.c0 END AS BLOB)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CASE 'kcr&'  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 'rﲟ+iⲧ}c]''' THEN v0.c0 END AS BLOB));
SELECT ALL * FROM rt0, vt0, v0 WHERE (CAST(((rt0.c0) IS FALSE) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) IS FALSE) AS REAL)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (CAST(((rt0.c0) IS FALSE) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) IS FALSE) AS REAL)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (CAST(((rt0.c0) IS FALSE) AS REAL));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON CAST(NULL COLLATE RTRIM AS REAL) RIGHT OUTER JOIN vt0 ON (vt0.c0 IN ()) WHERE (CAST((+ (rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CAST(NULL COLLATE RTRIM AS REAL) RIGHT OUTER JOIN vt0 ON (vt0.c0 IN ()));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON CAST(NULL COLLATE RTRIM AS REAL) RIGHT OUTER JOIN vt0 ON (vt0.c0 IN ()) WHERE (CAST((+ (rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CAST(NULL COLLATE RTRIM AS REAL) RIGHT OUTER JOIN vt0 ON (vt0.c0 IN ()));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON CAST(NULL COLLATE RTRIM AS REAL) RIGHT OUTER JOIN vt0 ON (vt0.c0 IN ()) WHERE (CAST((+ (rt0.c2)) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((NOT (rt0.c1)) IN ('-528863505')) WHERE (((((((((((rt0.c2)>=(rt0.c3)))OR(((((rt0.c2)OR(rt0.c0)))OR(v0.c0)))))OR(v0.c0)))AND(((((rt0.c0)OR(rt0.c1)))OR(rt0.c3)))))AND('5347979278503056195')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)>=(rt0.c3)))OR(((((rt0.c2)OR(rt0.c0)))OR(v0.c0)))))OR(v0.c0)))AND(((((rt0.c0)OR(rt0.c1)))OR(rt0.c3)))))AND('5347979278503056195'))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((NOT (rt0.c1)) IN ('-528863505')));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((NOT (rt0.c1)) IN ('-528863505')) WHERE (((((((((((rt0.c2)>=(rt0.c3)))OR(((((rt0.c2)OR(rt0.c0)))OR(v0.c0)))))OR(v0.c0)))AND(((((rt0.c0)OR(rt0.c1)))OR(rt0.c3)))))AND('5347979278503056195')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)>=(rt0.c3)))OR(((((rt0.c2)OR(rt0.c0)))OR(v0.c0)))))OR(v0.c0)))AND(((((rt0.c0)OR(rt0.c1)))OR(rt0.c3)))))AND('5347979278503056195'))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((NOT (rt0.c1)) IN ('-528863505')));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((NOT (rt0.c1)) IN ('-528863505')) WHERE (((((((((((rt0.c2)>=(rt0.c3)))OR(((((rt0.c2)OR(rt0.c0)))OR(v0.c0)))))OR(v0.c0)))AND(((((rt0.c0)OR(rt0.c1)))OR(rt0.c3)))))AND('5347979278503056195')));
SELECT ALL * FROM v0 WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))<>((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))))) ORDER BY PRINTF(v0.c0) COLLATE NOCASE ASC, CAST(0.909447322182897 AS BLOB) DESC  NULLS FIRST, ('FWeW%!' IN ());
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))!=((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY PRINTF(v0.c0) COLLATE NOCASE ASC, CAST(0.909447322182897 AS BLOB) DESC  NULLS FIRST, ('FWeW%!' IN ()));
SELECT ALL * FROM v0 WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))<>((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))))) ORDER BY PRINTF(v0.c0) COLLATE NOCASE ASC, CAST(0.909447322182897 AS BLOB) DESC  NULLS FIRST, ('FWeW%!' IN ());
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))!=((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY PRINTF(v0.c0) COLLATE NOCASE ASC, CAST(0.909447322182897 AS BLOB) DESC  NULLS FIRST, ('FWeW%!' IN ()));
SELECT ALL * FROM v0 WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))<>((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))))) ORDER BY PRINTF(v0.c0) COLLATE NOCASE ASC, CAST(0.909447322182897 AS BLOB) DESC  NULLS FIRST, ('FWeW%!' IN ());
SELECT * FROM vt0, v0 WHERE (((((((v0.c0)-(v0.c0)))AND((((0.6089949731651532, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, vt0.c0, v0.c0))))))AND(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)-(v0.c0)))AND((((0.6089949731651532, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, vt0.c0, v0.c0))))))AND(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((((v0.c0)-(v0.c0)))AND((((0.6089949731651532, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, vt0.c0, v0.c0))))))AND(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)-(v0.c0)))AND((((0.6089949731651532, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, vt0.c0, v0.c0))))))AND(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((((v0.c0)-(v0.c0)))AND((((0.6089949731651532, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, vt0.c0, v0.c0))))))AND(vt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0 WHERE ((((((((v0.c0, v0.c0, v0.c0))==((v0.c0, NULL, v0.c0))))OR(CAST(v0.c0 AS BLOB))))AND(CAST(v0.c0 AS NUMERIC)))) ORDER BY CASE (+ (v0.c0))  WHEN QUOTE(v0.c0) THEN STRFTIME(v0.c0, v0.c0, v0.c0) WHEN CAST(NULL AS NUMERIC) THEN (v0.c0 IN ()) WHEN v0.c0 THEN CAST(x'd6c7' AS REAL) ELSE ((v0.c0) IS TRUE) END;
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0, v0.c0, v0.c0))=((v0.c0, NULL, v0.c0))))OR(CAST(v0.c0 AS BLOB))))AND(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0 ORDER BY CASE (+ (v0.c0))  WHEN QUOTE(v0.c0) THEN STRFTIME(v0.c0, v0.c0, v0.c0) WHEN CAST(NULL AS NUMERIC) THEN (v0.c0 IN ()) WHEN v0.c0 THEN CAST(x'd6c7' AS REAL) ELSE ((v0.c0) IS TRUE) END);
SELECT COUNT(*) FROM v0 WHERE ((((((((v0.c0, v0.c0, v0.c0))==((v0.c0, NULL, v0.c0))))OR(CAST(v0.c0 AS BLOB))))AND(CAST(v0.c0 AS NUMERIC)))) ORDER BY CASE (+ (v0.c0))  WHEN QUOTE(v0.c0) THEN STRFTIME(v0.c0, v0.c0, v0.c0) WHEN CAST(NULL AS NUMERIC) THEN (v0.c0 IN ()) WHEN v0.c0 THEN CAST(x'd6c7' AS REAL) ELSE ((v0.c0) IS TRUE) END;
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0, v0.c0, v0.c0))=((v0.c0, NULL, v0.c0))))OR(CAST(v0.c0 AS BLOB))))AND(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0 ORDER BY CASE (+ (v0.c0))  WHEN QUOTE(v0.c0) THEN STRFTIME(v0.c0, v0.c0, v0.c0) WHEN CAST(NULL AS NUMERIC) THEN (v0.c0 IN ()) WHEN v0.c0 THEN CAST(x'd6c7' AS REAL) ELSE ((v0.c0) IS TRUE) END);
SELECT COUNT(*) FROM v0 WHERE ((((((((v0.c0, v0.c0, v0.c0))==((v0.c0, NULL, v0.c0))))OR(CAST(v0.c0 AS BLOB))))AND(CAST(v0.c0 AS NUMERIC)))) ORDER BY CASE (+ (v0.c0))  WHEN QUOTE(v0.c0) THEN STRFTIME(v0.c0, v0.c0, v0.c0) WHEN CAST(NULL AS NUMERIC) THEN (v0.c0 IN ()) WHEN v0.c0 THEN CAST(x'd6c7' AS REAL) ELSE ((v0.c0) IS TRUE) END;
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((rt0.c2)) BETWEEN (('0.02005887360048675')) AND ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN (('0.02005887360048675')) AND ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((rt0.c2)) BETWEEN (('0.02005887360048675')) AND ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN (('0.02005887360048675')) AND ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((rt0.c2)) BETWEEN (('0.02005887360048675')) AND ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3))))));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (json_valid(UPPER(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((json_valid(UPPER(rt0.c0))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (json_valid(UPPER(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((json_valid(UPPER(rt0.c0))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (json_valid(UPPER(rt0.c0)));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((((CAST(v0.c0 AS REAL))AND(CAST(rt0.c3 AS TEXT))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS REAL))AND(CAST(rt0.c3 AS TEXT))))AND(NULL))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((((CAST(v0.c0 AS REAL))AND(CAST(rt0.c3 AS TEXT))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS REAL))AND(CAST(rt0.c3 AS TEXT))))AND(NULL))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((((CAST(v0.c0 AS REAL))AND(CAST(rt0.c3 AS TEXT))))AND(NULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)+(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)+(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)+(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)+(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)+(vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (LIKELY(DISTINCT v0.c0)) ORDER BY HEX((+ (v0.c0)))  NULLS LAST, (- (rt0.c1)) COLLATE RTRIM DESC  NULLS FIRST, CAST(rt0.c0 AS INTEGER) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT v0.c0)) IS TRUE)  as count FROM v0, rt0 ORDER BY HEX((+ (v0.c0)))  NULLS LAST, (- (rt0.c1)) COLLATE RTRIM DESC  NULLS FIRST, CAST(rt0.c0 AS INTEGER) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (LIKELY(DISTINCT v0.c0)) ORDER BY HEX((+ (v0.c0)))  NULLS LAST, (- (rt0.c1)) COLLATE RTRIM DESC  NULLS FIRST, CAST(rt0.c0 AS INTEGER) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT v0.c0)) IS TRUE)  as count FROM v0, rt0 ORDER BY HEX((+ (v0.c0)))  NULLS LAST, (- (rt0.c1)) COLLATE RTRIM DESC  NULLS FIRST, CAST(rt0.c0 AS INTEGER) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (LIKELY(DISTINCT v0.c0)) ORDER BY HEX((+ (v0.c0)))  NULLS LAST, (- (rt0.c1)) COLLATE RTRIM DESC  NULLS FIRST, CAST(rt0.c0 AS INTEGER) COLLATE NOCASE DESC;
SELECT * FROM rt0 INNER JOIN vt0 ON ((((v0.c0) ISNULL))%(UNLIKELY(vt0.c0))) CROSS JOIN v0 ON CAST(rt0.c3 AS INTEGER) WHERE ((((~ (v0.c0)))<>(CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 END))) ORDER BY (CAST(rt0.c0 AS INTEGER) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0)))!=(CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((v0.c0) ISNULL))%(UNLIKELY(vt0.c0))) CROSS JOIN v0 ON CAST(rt0.c3 AS INTEGER) ORDER BY (CAST(rt0.c0 AS INTEGER) IN ()) DESC);
SELECT * FROM rt0 INNER JOIN vt0 ON ((((v0.c0) ISNULL))%(UNLIKELY(vt0.c0))) CROSS JOIN v0 ON CAST(rt0.c3 AS INTEGER) WHERE ((((~ (v0.c0)))<>(CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 END))) ORDER BY (CAST(rt0.c0 AS INTEGER) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0)))!=(CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((v0.c0) ISNULL))%(UNLIKELY(vt0.c0))) CROSS JOIN v0 ON CAST(rt0.c3 AS INTEGER) ORDER BY (CAST(rt0.c0 AS INTEGER) IN ()) DESC);
SELECT * FROM rt0 INNER JOIN vt0 ON ((((v0.c0) ISNULL))%(UNLIKELY(vt0.c0))) CROSS JOIN v0 ON CAST(rt0.c3 AS INTEGER) WHERE ((((~ (v0.c0)))<>(CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 END))) ORDER BY (CAST(rt0.c0 AS INTEGER) IN ()) DESC;
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c0)OR(((vt0.c0) NOT NULL))))OR(((v0.c0) ISNULL))) WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c0)OR(((vt0.c0) NOT NULL))))OR(((v0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c0)OR(((vt0.c0) NOT NULL))))OR(((v0.c0) ISNULL))) WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c0)OR(((vt0.c0) NOT NULL))))OR(((v0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c0)OR(((vt0.c0) NOT NULL))))OR(((v0.c0) ISNULL))) WHERE (NULL COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, v0 INNER JOIN rt0 ON '3.vv{t\nCT' WHERE ((('1017455649') NOT BETWEEN (((rt0.c1)IS(vt0.c0))) AND (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((('1017455649') NOT BETWEEN (((rt0.c1)IS(vt0.c0))) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON '3.vv{t\nCT');
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, v0 INNER JOIN rt0 ON '3.vv{t\nCT' WHERE ((('1017455649') NOT BETWEEN (((rt0.c1)IS(vt0.c0))) AND (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((('1017455649') NOT BETWEEN (((rt0.c1)IS(vt0.c0))) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON '3.vv{t\nCT');
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, v0 INNER JOIN rt0 ON '3.vv{t\nCT' WHERE ((('1017455649') NOT BETWEEN (((rt0.c1)IS(vt0.c0))) AND (((vt0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c3 END IN ())) ORDER BY rt0.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c3 END IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c3  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c3 END IN ())) ORDER BY rt0.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c3 END IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c3  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c3 END IN ())) ORDER BY rt0.c3  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (CASE rt0.c2  WHEN v0.c0 THEN '\r覟_o虊o>Vs' END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN v0.c0 THEN '\r覟_o虊o>Vs' END COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (CASE rt0.c2  WHEN v0.c0 THEN '\r覟_o虊o>Vs' END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN v0.c0 THEN '\r覟_o虊o>Vs' END COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (CASE rt0.c2  WHEN v0.c0 THEN '\r覟_o虊o>Vs' END COLLATE BINARY);
SELECT * FROM v0 WHERE (((NULL) NOT BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((((v0.c0)AND(v0.c0)))OR('0.3188304764491474'))))) ORDER BY (((v0.c0 IN ())) NOT BETWEEN (load_extension(v0.c0, x'7056')) AND (0.6859619755462313)) DESC  NULLS LAST, ((v0.c0 COLLATE NOCASE) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((((v0.c0)AND(v0.c0)))OR('0.3188304764491474'))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ())) NOT BETWEEN (load_extension(v0.c0, x'7056')) AND (0.6859619755462313)) DESC  NULLS LAST, ((v0.c0 COLLATE NOCASE) ISNULL)  NULLS LAST);
SELECT * FROM v0 WHERE (((NULL) NOT BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((((v0.c0)AND(v0.c0)))OR('0.3188304764491474'))))) ORDER BY (((v0.c0 IN ())) NOT BETWEEN (load_extension(v0.c0, x'7056')) AND (0.6859619755462313)) DESC  NULLS LAST, ((v0.c0 COLLATE NOCASE) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((((v0.c0)AND(v0.c0)))OR('0.3188304764491474'))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ())) NOT BETWEEN (load_extension(v0.c0, x'7056')) AND (0.6859619755462313)) DESC  NULLS LAST, ((v0.c0 COLLATE NOCASE) ISNULL)  NULLS LAST);
SELECT ALL * FROM rt0, v0 CROSS JOIN vt0 ON '5347979278503056195' WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, v0 CROSS JOIN vt0 ON '5347979278503056195');
SELECT ALL * FROM rt0, v0 CROSS JOIN vt0 ON '5347979278503056195' WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, v0 CROSS JOIN vt0 ON '5347979278503056195');
SELECT ALL * FROM rt0, v0 CROSS JOIN vt0 ON '5347979278503056195' WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END THEN ((rt0.c1) IS FALSE) WHEN ((rt0.c3)-(rt0.c1)) THEN rt0.c0 WHEN ((v0.c0)<=(v0.c0)) THEN CAST(v0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END THEN ((rt0.c1) IS FALSE) WHEN ((rt0.c3)-(rt0.c1)) THEN rt0.c0 WHEN ((v0.c0)<=(v0.c0)) THEN CAST(v0.c0 AS REAL) END) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END THEN ((rt0.c1) IS FALSE) WHEN ((rt0.c3)-(rt0.c1)) THEN rt0.c0 WHEN ((v0.c0)<=(v0.c0)) THEN CAST(v0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END THEN ((rt0.c1) IS FALSE) WHEN ((rt0.c3)-(rt0.c1)) THEN rt0.c0 WHEN ((v0.c0)<=(v0.c0)) THEN CAST(v0.c0 AS REAL) END) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END THEN ((rt0.c1) IS FALSE) WHEN ((rt0.c3)-(rt0.c1)) THEN rt0.c0 WHEN ((v0.c0)<=(v0.c0)) THEN CAST(v0.c0 AS REAL) END);
SELECT * FROM rt0 WHERE ('-1788298155') ORDER BY ((rt0.c1 IN (rt0.c3)) IN (rt0.c3, CAST(rt0.c2 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-1788298155') IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 IN (rt0.c3)) IN (rt0.c3, CAST(rt0.c2 AS INTEGER))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ('-1788298155') ORDER BY ((rt0.c1 IN (rt0.c3)) IN (rt0.c3, CAST(rt0.c2 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-1788298155') IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 IN (rt0.c3)) IN (rt0.c3, CAST(rt0.c2 AS INTEGER))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ('-1788298155') ORDER BY ((rt0.c1 IN (rt0.c3)) IN (rt0.c3, CAST(rt0.c2 AS INTEGER))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((~ (CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((~ (CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((~ (CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((v0.c0)AND(0.6423843070060761)) COLLATE NOCASE RIGHT OUTER JOIN v0 ON ((((((0.18311271563012432)OR(rt0.c3)))OR(vt0.c0)))IS NOT(vt0.c0)) WHERE ((v0.c0 IN (((rt0.c0) NOT NULL)))) ORDER BY (((rt0.c3)>>(rt0.c3)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((v0.c0)AND(0.6423843070060761)) COLLATE NOCASE RIGHT OUTER JOIN v0 ON ((((((0.18311271563012432)OR(rt0.c3)))OR(vt0.c0)))IS NOT(vt0.c0)) ORDER BY (((rt0.c3)>>(rt0.c3)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((v0.c0)AND(0.6423843070060761)) COLLATE NOCASE RIGHT OUTER JOIN v0 ON ((((((0.18311271563012432)OR(rt0.c3)))OR(vt0.c0)))IS NOT(vt0.c0)) WHERE ((v0.c0 IN (((rt0.c0) NOT NULL)))) ORDER BY (((rt0.c3)>>(rt0.c3)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((v0.c0)AND(0.6423843070060761)) COLLATE NOCASE RIGHT OUTER JOIN v0 ON ((((((0.18311271563012432)OR(rt0.c3)))OR(vt0.c0)))IS NOT(vt0.c0)) ORDER BY (((rt0.c3)>>(rt0.c3)) IN ())  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (x'') ORDER BY (- (NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, vt0 ORDER BY (- (NULL)) ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (x'') ORDER BY (- (NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, vt0 ORDER BY (- (NULL)) ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (x'') ORDER BY (- (NULL)) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (CAST(CASE WHEN 0.3784702361799367 THEN vt0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN 0.3784702361799367 THEN vt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CASE WHEN 0.3784702361799367 THEN vt0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN 0.3784702361799367 THEN vt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CASE WHEN 0.3784702361799367 THEN vt0.c0 END AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (HEX(DISTINCT ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))) ORDER BY CASE WHEN LIKELY(rt0.c0) THEN (('')<<(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN LIKELY(rt0.c0) THEN (('')<<(rt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (HEX(DISTINCT ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))) ORDER BY CASE WHEN LIKELY(rt0.c0) THEN (('')<<(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN LIKELY(rt0.c0) THEN (('')<<(rt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (HEX(DISTINCT ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))) ORDER BY CASE WHEN LIKELY(rt0.c0) THEN (('')<<(rt0.c0)) END;
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c2) NOT NULL) IN ((~ (rt0.c2)), rt0.c3)) WHERE ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN 0.28417937445091934 WHEN rt0.c2 THEN rt0.c2 END IN (CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN 0.28417937445091934 WHEN rt0.c2 THEN rt0.c2 END IN (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c2) NOT NULL) IN ((~ (rt0.c2)), rt0.c3)));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c2) NOT NULL) IN ((~ (rt0.c2)), rt0.c3)) WHERE ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN 0.28417937445091934 WHEN rt0.c2 THEN rt0.c2 END IN (CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN 0.28417937445091934 WHEN rt0.c2 THEN rt0.c2 END IN (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c2) NOT NULL) IN ((~ (rt0.c2)), rt0.c3)));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c2) NOT NULL) IN ((~ (rt0.c2)), rt0.c3)) WHERE ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN 0.28417937445091934 WHEN rt0.c2 THEN rt0.c2 END IN (CAST(rt0.c2 AS BLOB))));
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0, '139337500', vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), TRIM(DISTINCT vt0.c0))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) NOTNULL), (((vt0.c0))<((NULL)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0, '139337500', vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), TRIM(DISTINCT vt0.c0))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) NOTNULL), (((vt0.c0))<((NULL))))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0, '139337500', vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), TRIM(DISTINCT vt0.c0))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) NOTNULL), (((vt0.c0))<((NULL)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0, '139337500', vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), TRIM(DISTINCT vt0.c0))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) NOTNULL), (((vt0.c0))<((NULL))))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0, '139337500', vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), TRIM(DISTINCT vt0.c0))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) NOTNULL), (((vt0.c0))<((NULL)))))));
SELECT * FROM v0, vt0, rt0 WHERE (LAST_INSERT_ROWID()) ORDER BY ((rt0.c3) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((rt0.c3) NOTNULL)  NULLS LAST);
SELECT * FROM v0, vt0, rt0 WHERE (LAST_INSERT_ROWID()) ORDER BY ((rt0.c3) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((rt0.c3) NOTNULL)  NULLS LAST);
SELECT * FROM v0, vt0, rt0 WHERE (LAST_INSERT_ROWID()) ORDER BY ((rt0.c3) NOTNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((rt0.c2)=(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)==(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((rt0.c2)=(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)==(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((rt0.c2)=(rt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON x'' WHERE (((CASE WHEN rt0.c3 THEN rt0.c2 END)>=((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c3 THEN rt0.c2 END)>=((NOT (rt0.c1))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON x'');
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON x'' WHERE (((CASE WHEN rt0.c3 THEN rt0.c2 END)>=((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c3 THEN rt0.c2 END)>=((NOT (rt0.c1))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON x'');
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON x'' WHERE (((CASE WHEN rt0.c3 THEN rt0.c2 END)>=((NOT (rt0.c1)))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (CAST(((((vt0.c0)OR(v0.c0)))OR(x'd74f')) AS REAL)) ORDER BY ((0.632834515108305) BETWEEN (((v0.c0)LIKE(vt0.c0))) AND ((((v0.c0))<>((NULL)))))  NULLS LAST, (((((v0.c0)||(vt0.c0))))=((v0.c0 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)OR(v0.c0)))OR(x'd74f')) AS REAL)) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY ((0.632834515108305) BETWEEN (((v0.c0)LIKE(vt0.c0))) AND ((((v0.c0))<>((NULL)))))  NULLS LAST, (((((v0.c0)||(vt0.c0))))=((v0.c0 COLLATE NOCASE)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (CAST(((((vt0.c0)OR(v0.c0)))OR(x'd74f')) AS REAL)) ORDER BY ((0.632834515108305) BETWEEN (((v0.c0)LIKE(vt0.c0))) AND ((((v0.c0))<>((NULL)))))  NULLS LAST, (((((v0.c0)||(vt0.c0))))=((v0.c0 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)OR(v0.c0)))OR(x'd74f')) AS REAL)) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY ((0.632834515108305) BETWEEN (((v0.c0)LIKE(vt0.c0))) AND ((((v0.c0))<>((NULL)))))  NULLS LAST, (((((v0.c0)||(vt0.c0))))=((v0.c0 COLLATE NOCASE)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (CAST(((((vt0.c0)OR(v0.c0)))OR(x'd74f')) AS REAL)) ORDER BY ((0.632834515108305) BETWEEN (((v0.c0)LIKE(vt0.c0))) AND ((((v0.c0))<>((NULL)))))  NULLS LAST, (((((v0.c0)||(vt0.c0))))=((v0.c0 COLLATE NOCASE)))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)-(vt0.c0)) AS REAL)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)!=(vt0.c0)))) DESC  NULLS FIRST, (~ (((vt0.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)-(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)!=(vt0.c0)))) DESC  NULLS FIRST, (~ (((vt0.c0) NOTNULL))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)-(vt0.c0)) AS REAL)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)!=(vt0.c0)))) DESC  NULLS FIRST, (~ (((vt0.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)-(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)!=(vt0.c0)))) DESC  NULLS FIRST, (~ (((vt0.c0) NOTNULL))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)-(vt0.c0)) AS REAL)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)!=(vt0.c0)))) DESC  NULLS FIRST, (~ (((vt0.c0) NOTNULL))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) ELSE NULL END) ORDER BY ((vt0.c0)LIKE(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) ELSE NULL END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)LIKE(vt0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) ELSE NULL END) ORDER BY ((vt0.c0)LIKE(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) ELSE NULL END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)LIKE(vt0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) ELSE NULL END) ORDER BY ((vt0.c0)LIKE(vt0.c0))  NULLS LAST;
SELECT * FROM rt0 INNER JOIN vt0 ON CAST(rt0.c1 AS TEXT) COLLATE NOCASE INNER JOIN v0 ON x'f1df' WHERE ((('1080755907')>>(HEX(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((('1080755907')>>(HEX(v0.c0)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CAST(rt0.c1 AS TEXT) COLLATE NOCASE INNER JOIN v0 ON x'f1df');
SELECT * FROM rt0 INNER JOIN vt0 ON CAST(rt0.c1 AS TEXT) COLLATE NOCASE INNER JOIN v0 ON x'f1df' WHERE ((('1080755907')>>(HEX(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((('1080755907')>>(HEX(v0.c0)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CAST(rt0.c1 AS TEXT) COLLATE NOCASE INNER JOIN v0 ON x'f1df');
SELECT * FROM rt0 INNER JOIN vt0 ON CAST(rt0.c1 AS TEXT) COLLATE NOCASE INNER JOIN v0 ON x'f1df' WHERE ((('1080755907')>>(HEX(v0.c0))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((+ (((v0.c0)<(v0.c0))))) ORDER BY (((v0.c0) NOT NULL) IN ()) ASC  NULLS LAST, CASE WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c0)<(v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0) NOT NULL) IN ()) ASC  NULLS LAST, CASE WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((+ (((v0.c0)<(v0.c0))))) ORDER BY (((v0.c0) NOT NULL) IN ()) ASC  NULLS LAST, CASE WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c0)<(v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0) NOT NULL) IN ()) ASC  NULLS LAST, CASE WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((+ (((v0.c0)<(v0.c0))))) ORDER BY (((v0.c0) NOT NULL) IN ()) ASC  NULLS LAST, CASE WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE (((((((((((rt0.c3) NOT NULL))OR((rt0.c0 IN ()))))AND(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))))AND(((0.5381459128475854)+(rt0.c2)))))OR(((((rt0.c3)AND(rt0.c0)))AND(rt0.c1))))) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3) NOT NULL))OR((rt0.c0 IN ()))))AND(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))))AND(((0.5381459128475854)+(rt0.c2)))))OR(((((rt0.c3)AND(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c3);
SELECT ALL * FROM rt0, v0 WHERE (((((((((((rt0.c3) NOT NULL))OR((rt0.c0 IN ()))))AND(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))))AND(((0.5381459128475854)+(rt0.c2)))))OR(((((rt0.c3)AND(rt0.c0)))AND(rt0.c1))))) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3) NOT NULL))OR((rt0.c0 IN ()))))AND(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))))AND(((0.5381459128475854)+(rt0.c2)))))OR(((((rt0.c3)AND(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c3);
SELECT ALL * FROM rt0, v0 WHERE (((((((((((rt0.c3) NOT NULL))OR((rt0.c0 IN ()))))AND(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))))AND(((0.5381459128475854)+(rt0.c2)))))OR(((((rt0.c3)AND(rt0.c0)))AND(rt0.c1))))) ORDER BY rt0.c3;
SELECT * FROM rt0, v0, vt0 WHERE (NULL) ORDER BY vt0.c0 DESC  NULLS LAST, ((rt0.c3 COLLATE RTRIM) BETWEEN (((vt0.c0)||(rt0.c2))) AND ((vt0.c0 IN (rt0.c1)))) DESC  NULLS FIRST, x'' DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY vt0.c0 DESC  NULLS LAST, ((rt0.c3 COLLATE RTRIM) BETWEEN (((vt0.c0)||(rt0.c2))) AND ((vt0.c0 IN (rt0.c1)))) DESC  NULLS FIRST, x'' DESC);
SELECT * FROM rt0, v0, vt0 WHERE (NULL) ORDER BY vt0.c0 DESC  NULLS LAST, ((rt0.c3 COLLATE RTRIM) BETWEEN (((vt0.c0)||(rt0.c2))) AND ((vt0.c0 IN (rt0.c1)))) DESC  NULLS FIRST, x'' DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY vt0.c0 DESC  NULLS LAST, ((rt0.c3 COLLATE RTRIM) BETWEEN (((vt0.c0)||(rt0.c2))) AND ((vt0.c0 IN (rt0.c1)))) DESC  NULLS FIRST, x'' DESC);
SELECT * FROM rt0, v0, vt0 WHERE (NULL) ORDER BY vt0.c0 DESC  NULLS LAST, ((rt0.c3 COLLATE RTRIM) BETWEEN (((vt0.c0)||(rt0.c2))) AND ((vt0.c0 IN (rt0.c1)))) DESC  NULLS FIRST, x'' DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)==(v0.c0))) IS TRUE)) ORDER BY NULLIF(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((1.080755907E9)<<(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)==(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY NULLIF(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((1.080755907E9)<<(v0.c0))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)==(v0.c0))) IS TRUE)) ORDER BY NULLIF(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((1.080755907E9)<<(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)==(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY NULLIF(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((1.080755907E9)<<(v0.c0))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)==(v0.c0))) IS TRUE)) ORDER BY NULLIF(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((1.080755907E9)<<(v0.c0)));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(0x6a1412a2 AS TEXT)) ORDER BY ((rt0.c3 COLLATE RTRIM)%(((rt0.c2)<<(rt0.c1))))  NULLS FIRST, COALESCE(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))AND('2042588957')))OR(rt0.c2)), ((((rt0.c0)OR(rt0.c3)))OR(0.8282489329345979)), CAST(rt0.c1 AS BLOB), CASE WHEN rt0.c2 THEN rt0.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0X6a1412a2 AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3 COLLATE RTRIM)%(((rt0.c2)<<(rt0.c1))))  NULLS FIRST, COALESCE(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))AND('2042588957')))OR(rt0.c2)), ((((rt0.c0)OR(rt0.c3)))OR(0.8282489329345979)), CAST(rt0.c1 AS BLOB), CASE WHEN rt0.c2 THEN rt0.c0 END) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(0x6a1412a2 AS TEXT)) ORDER BY ((rt0.c3 COLLATE RTRIM)%(((rt0.c2)<<(rt0.c1))))  NULLS FIRST, COALESCE(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))AND('2042588957')))OR(rt0.c2)), ((((rt0.c0)OR(rt0.c3)))OR(0.8282489329345979)), CAST(rt0.c1 AS BLOB), CASE WHEN rt0.c2 THEN rt0.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0X6a1412a2 AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3 COLLATE RTRIM)%(((rt0.c2)<<(rt0.c1))))  NULLS FIRST, COALESCE(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))AND('2042588957')))OR(rt0.c2)), ((((rt0.c0)OR(rt0.c3)))OR(0.8282489329345979)), CAST(rt0.c1 AS BLOB), CASE WHEN rt0.c2 THEN rt0.c0 END) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(0x6a1412a2 AS TEXT)) ORDER BY ((rt0.c3 COLLATE RTRIM)%(((rt0.c2)<<(rt0.c1))))  NULLS FIRST, COALESCE(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))AND('2042588957')))OR(rt0.c2)), ((((rt0.c0)OR(rt0.c3)))OR(0.8282489329345979)), CAST(rt0.c1 AS BLOB), CASE WHEN rt0.c2 THEN rt0.c0 END) ASC;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY -1905643524  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY -1905643524  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY -1905643524  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY -1905643524  NULLS LAST);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c0 END)AND(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)))))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c1 THEN rt0.c0 END)AND(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)))))OR(vt0.c0))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c0 END)AND(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)))))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c1 THEN rt0.c0 END)AND(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)))))OR(vt0.c0))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c0 END)AND(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)))))OR(vt0.c0)));
SELECT COUNT(*) FROM v0 WHERE ((((0.3664497503198394)) BETWEEN ((v0.c0)) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((0.3664497503198394)) BETWEEN ((v0.c0)) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((0.3664497503198394)) BETWEEN ((v0.c0)) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((0.3664497503198394)) BETWEEN ((v0.c0)) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((0.3664497503198394)) BETWEEN ((v0.c0)) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((rt0.c2)))) ORDER BY ((((rt0.c1) BETWEEN (NULL) AND (rt0.c0)))LIKE(((((0Xffffffffe1c53b4a)AND(rt0.c1)))AND(rt0.c1)))) ASC, (((rt0.c2 IN ())) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) BETWEEN (NULL) AND (rt0.c0)))LIKE(((((0Xffffffffe1c53b4a)AND(rt0.c1)))AND(rt0.c1)))) ASC, (((rt0.c2 IN ())) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (rt0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((rt0.c2)))) ORDER BY ((((rt0.c1) BETWEEN (NULL) AND (rt0.c0)))LIKE(((((0Xffffffffe1c53b4a)AND(rt0.c1)))AND(rt0.c1)))) ASC, (((rt0.c2 IN ())) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) BETWEEN (NULL) AND (rt0.c0)))LIKE(((((0Xffffffffe1c53b4a)AND(rt0.c1)))AND(rt0.c1)))) ASC, (((rt0.c2 IN ())) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (rt0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((rt0.c2)))) ORDER BY ((((rt0.c1) BETWEEN (NULL) AND (rt0.c0)))LIKE(((((0Xffffffffe1c53b4a)AND(rt0.c1)))AND(rt0.c1)))) ASC, (((rt0.c2 IN ())) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (rt0.c0))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE CAST(rt0.c0 AS INTEGER)  WHEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN rt0.c2 COLLATE BINARY WHEN 0.28417937445091934 THEN ((rt0.c0)LIKE(rt0.c2)) WHEN (rt0.c2 IN (rt0.c2, rt0.c1)) THEN rt0.c3 END) ORDER BY (((rt0.c3, rt0.c3, rt0.c3)) BETWEEN (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c1))), ((((((((rt0.c0)AND(1573443405)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)), (~ (rt0.c3)))) AND ((rt0.c3 COLLATE NOCASE, rt0.c2 COLLATE RTRIM, ((vt0.c0)%(rt0.c3))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c0 AS INTEGER)  WHEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN rt0.c2 COLLATE BINARY WHEN 0.28417937445091934 THEN ((rt0.c0)LIKE(rt0.c2)) WHEN (rt0.c2 IN (rt0.c2, rt0.c1)) THEN rt0.c3 END) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 ORDER BY (((rt0.c3, rt0.c3, rt0.c3)) BETWEEN (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c1))), ((((((((rt0.c0)AND(1573443405)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)), (~ (rt0.c3)))) AND ((rt0.c3 COLLATE NOCASE, rt0.c2 COLLATE RTRIM, ((vt0.c0)%(rt0.c3))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE CAST(rt0.c0 AS INTEGER)  WHEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN rt0.c2 COLLATE BINARY WHEN 0.28417937445091934 THEN ((rt0.c0)LIKE(rt0.c2)) WHEN (rt0.c2 IN (rt0.c2, rt0.c1)) THEN rt0.c3 END) ORDER BY (((rt0.c3, rt0.c3, rt0.c3)) BETWEEN (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c1))), ((((((((rt0.c0)AND(1573443405)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)), (~ (rt0.c3)))) AND ((rt0.c3 COLLATE NOCASE, rt0.c2 COLLATE RTRIM, ((vt0.c0)%(rt0.c3))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c0 AS INTEGER)  WHEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN rt0.c2 COLLATE BINARY WHEN 0.28417937445091934 THEN ((rt0.c0)LIKE(rt0.c2)) WHEN (rt0.c2 IN (rt0.c2, rt0.c1)) THEN rt0.c3 END) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 ORDER BY (((rt0.c3, rt0.c3, rt0.c3)) BETWEEN (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c1))), ((((((((rt0.c0)AND(1573443405)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)), (~ (rt0.c3)))) AND ((rt0.c3 COLLATE NOCASE, rt0.c2 COLLATE RTRIM, ((vt0.c0)%(rt0.c3))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE CAST(rt0.c0 AS INTEGER)  WHEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN rt0.c2 COLLATE BINARY WHEN 0.28417937445091934 THEN ((rt0.c0)LIKE(rt0.c2)) WHEN (rt0.c2 IN (rt0.c2, rt0.c1)) THEN rt0.c3 END) ORDER BY (((rt0.c3, rt0.c3, rt0.c3)) BETWEEN (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c1))), ((((((((rt0.c0)AND(1573443405)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)), (~ (rt0.c3)))) AND ((rt0.c3 COLLATE NOCASE, rt0.c2 COLLATE RTRIM, ((vt0.c0)%(rt0.c3))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((((((((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(vt0.c0)))OR(v0.c0)))AND((- (rt0.c0)))))OR((((vt0.c0))>=((vt0.c0))))))AND(rt0.c3 COLLATE NOCASE)))AND(((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(vt0.c0)))OR(v0.c0)))AND((- (rt0.c0)))))OR((((vt0.c0))>=((vt0.c0))))))AND(rt0.c3 COLLATE NOCASE)))AND(((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((((((((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(vt0.c0)))OR(v0.c0)))AND((- (rt0.c0)))))OR((((vt0.c0))>=((vt0.c0))))))AND(rt0.c3 COLLATE NOCASE)))AND(((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(vt0.c0)))OR(v0.c0)))AND((- (rt0.c0)))))OR((((vt0.c0))>=((vt0.c0))))))AND(rt0.c3 COLLATE NOCASE)))AND(((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((((((((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(vt0.c0)))OR(v0.c0)))AND((- (rt0.c0)))))OR((((vt0.c0))>=((vt0.c0))))))AND(rt0.c3 COLLATE NOCASE)))AND(((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON CAST((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c1))) AS REAL) WHERE (2.07831201E9);
SELECT SUM(count) FROM (SELECT ALL ((2.07831201E9) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON CAST((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c1))) AS REAL));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON CAST((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c1))) AS REAL) WHERE (2.07831201E9);
SELECT SUM(count) FROM (SELECT ALL ((2.07831201E9) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON CAST((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c1))) AS REAL));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON CAST((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c1))) AS REAL) WHERE (2.07831201E9);
SELECT * FROM rt0, v0, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE ('');
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM);
SELECT ALL * FROM rt0, vt0 WHERE (((- (vt0.c0)) IN (((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c0))))) ORDER BY (CAST(rt0.c1 AS REAL) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((- (vt0.c0)) IN (((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CAST(rt0.c1 AS REAL) IN ())  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((- (vt0.c0)) IN (((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c0))))) ORDER BY (CAST(rt0.c1 AS REAL) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((- (vt0.c0)) IN (((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CAST(rt0.c1 AS REAL) IN ())  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((- (vt0.c0)) IN (((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c0))))) ORDER BY (CAST(rt0.c1 AS REAL) IN ())  NULLS FIRST;
SELECT ALL * FROM rt0, v0, vt0 WHERE ((('')*(((v0.c0)OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((('')*(((v0.c0)OR(rt0.c2))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE ((('')*(((v0.c0)OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((('')*(((v0.c0)OR(rt0.c2))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE ((('')*(((v0.c0)OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))>>(((rt0.c0)/(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))>>(((rt0.c0)/(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))>>(((rt0.c0)/(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))>>(((rt0.c0)/(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))>>(((rt0.c0)/(rt0.c3)))));
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((vt0.c0) IS FALSE))!=(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE))<>(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((vt0.c0) IS FALSE))!=(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE))<>(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((vt0.c0) IS FALSE))!=(rt0.c2 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c1) BETWEEN (((((((((NULL)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(rt0.c2))) AND ((- (rt0.c2))))) ORDER BY CHANGES() ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (((((((((NULL)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(rt0.c2))) AND ((- (rt0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY CHANGES() ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c1) BETWEEN (((((((((NULL)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(rt0.c2))) AND ((- (rt0.c2))))) ORDER BY CHANGES() ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (((((((((NULL)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(rt0.c2))) AND ((- (rt0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY CHANGES() ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c1) BETWEEN (((((((((NULL)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(rt0.c2))) AND ((- (rt0.c2))))) ORDER BY CHANGES() ASC;
SELECT * FROM v0, rt0 NOT INDEXED WHERE (((((('2}!Zꠖ')<<(v0.c0))))<((((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c3)))))) ORDER BY '-346242044' DESC;
SELECT SUM(count) FROM (SELECT ((((((('2}!Zꠖ')<<(v0.c0))))<((((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c3)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY '-346242044' DESC);
SELECT * FROM v0, rt0 NOT INDEXED WHERE (((((('2}!Zꠖ')<<(v0.c0))))<((((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c3)))))) ORDER BY '-346242044' DESC;
SELECT SUM(count) FROM (SELECT ((((((('2}!Zꠖ')<<(v0.c0))))<((((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c3)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY '-346242044' DESC);
SELECT * FROM v0, rt0 NOT INDEXED WHERE (((((('2}!Zꠖ')<<(v0.c0))))<((((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c3)))))) ORDER BY '-346242044' DESC;
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((rt0.c3, v0.c0, vt0.c0)) BETWEEN (((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0))), CASE WHEN rt0.c2 THEN rt0.c0 END, ((rt0.c3)<<(rt0.c0)))) AND ((COALESCE(DISTINCT rt0.c1, rt0.c1), ((rt0.c3)AND(rt0.c1)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, v0.c0, vt0.c0)) BETWEEN (((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0))), CASE WHEN rt0.c2 THEN rt0.c0 END, ((rt0.c3)<<(rt0.c0)))) AND ((COALESCE(DISTINCT rt0.c1, rt0.c1), ((rt0.c3)AND(rt0.c1)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((rt0.c3, v0.c0, vt0.c0)) BETWEEN (((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0))), CASE WHEN rt0.c2 THEN rt0.c0 END, ((rt0.c3)<<(rt0.c0)))) AND ((COALESCE(DISTINCT rt0.c1, rt0.c1), ((rt0.c3)AND(rt0.c1)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, v0.c0, vt0.c0)) BETWEEN (((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0))), CASE WHEN rt0.c2 THEN rt0.c0 END, ((rt0.c3)<<(rt0.c0)))) AND ((COALESCE(DISTINCT rt0.c1, rt0.c1), ((rt0.c3)AND(rt0.c1)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((rt0.c3, v0.c0, vt0.c0)) BETWEEN (((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0))), CASE WHEN rt0.c2 THEN rt0.c0 END, ((rt0.c3)<<(rt0.c0)))) AND ((COALESCE(DISTINCT rt0.c1, rt0.c1), ((rt0.c3)AND(rt0.c1)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((CAST(vt0.c0 AS REAL))+(rt0.c3))) ORDER BY 0X26b76cfe ASC  NULLS LAST, (('-276425265')<(((rt0.c1) BETWEEN (rt0.c1) AND (0.1932789331894338)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))+(rt0.c3))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY 0x26b76cfe ASC  NULLS LAST, (('-276425265')<(((rt0.c1) BETWEEN (rt0.c1) AND (0.1932789331894338)))) DESC);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((CAST(vt0.c0 AS REAL))+(rt0.c3))) ORDER BY 0X26b76cfe ASC  NULLS LAST, (('-276425265')<(((rt0.c1) BETWEEN (rt0.c1) AND (0.1932789331894338)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))+(rt0.c3))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY 0x26b76cfe ASC  NULLS LAST, (('-276425265')<(((rt0.c1) BETWEEN (rt0.c1) AND (0.1932789331894338)))) DESC);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)) AS REAL)) ORDER BY ((rt0.c1 COLLATE RTRIM) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((rt0.c1 COLLATE RTRIM) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)) AS REAL)) ORDER BY ((rt0.c1 COLLATE RTRIM) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((rt0.c1 COLLATE RTRIM) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)) AS REAL)) ORDER BY ((rt0.c1 COLLATE RTRIM) IS FALSE) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS REAL)) NOT NULL)) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (CASE v0.c0  WHEN '-629036686' THEN v0.c0 END) AND (v0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS REAL)) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (CASE v0.c0  WHEN '-629036686' THEN v0.c0 END) AND (v0.c0 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS REAL)) NOT NULL)) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (CASE v0.c0  WHEN '-629036686' THEN v0.c0 END) AND (v0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS REAL)) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (CASE v0.c0  WHEN '-629036686' THEN v0.c0 END) AND (v0.c0 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS REAL)) NOT NULL)) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (CASE v0.c0  WHEN '-629036686' THEN v0.c0 END) AND (v0.c0 COLLATE NOCASE)) ASC;
SELECT * FROM v0 WHERE (((((((((((((v0.c0)AND(v0.c0)))OR(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))OR((~ (v0.c0)))))OR(LOWER(v0.c0))))OR((+ (v0.c0)))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((((((v0.c0)AND(v0.c0)))OR(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))OR((~ (v0.c0)))))OR(LOWER(v0.c0))))OR((+ (v0.c0)))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((((((v0.c0)AND(v0.c0)))OR(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))OR((~ (v0.c0)))))OR(LOWER(v0.c0))))OR((+ (v0.c0)))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((((((v0.c0)AND(v0.c0)))OR(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))OR((~ (v0.c0)))))OR(LOWER(v0.c0))))OR((+ (v0.c0)))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((((((v0.c0)AND(v0.c0)))OR(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))OR((~ (v0.c0)))))OR(LOWER(v0.c0))))OR((+ (v0.c0)))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT * FROM vt0, rt0, v0 WHERE (((rt0.c1)GLOB(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)GLOB(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (((rt0.c1)GLOB(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)GLOB(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (((rt0.c1)GLOB(v0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOTNULL)) ORDER BY (((vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) AND (((- (vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) AND (((- (vt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOTNULL)) ORDER BY (((vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) AND (((- (vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) AND (((- (vt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOTNULL)) ORDER BY (((vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) AND (((- (vt0.c0))))) DESC;
SELECT ALL * FROM v0 WHERE (UPPER(v0.c0));
SELECT SUM(count) FROM (SELECT ((UPPER(v0.c0)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (UPPER(v0.c0));
SELECT SUM(count) FROM (SELECT ((UPPER(v0.c0)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (UPPER(v0.c0));
SELECT COUNT(*) FROM v0, vt0 WHERE ((~ (CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((~ (CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((~ (CAST(v0.c0 AS REAL))));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(NULL COLLATE NOCASE AS INTEGER)) ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(NULL COLLATE NOCASE AS INTEGER)) ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(NULL COLLATE NOCASE AS INTEGER)) ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS TEXT)  NULLS LAST;
SELECT * FROM v0, vt0 WHERE (((0.6416448720795952)||((+ (vt0.c0))))) ORDER BY ((vt0.c0)>=(vt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0.6416448720795952)||((+ (vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c0)>=(vt0.c0)) COLLATE NOCASE ASC);
SELECT * FROM v0, vt0 WHERE (((0.6416448720795952)||((+ (vt0.c0))))) ORDER BY ((vt0.c0)>=(vt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0.6416448720795952)||((+ (vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c0)>=(vt0.c0)) COLLATE NOCASE ASC);
SELECT * FROM v0, vt0 WHERE (((0.6416448720795952)||((+ (vt0.c0))))) ORDER BY ((vt0.c0)>=(vt0.c0)) COLLATE NOCASE ASC;
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) BETWEEN ((v0.c0 IN (v0.c0, v0.c0))) AND (((v0.c0)||(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) BETWEEN ((v0.c0 IN (v0.c0, v0.c0))) AND (((v0.c0)||(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) BETWEEN ((v0.c0 IN (v0.c0, v0.c0))) AND (((v0.c0)||(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) BETWEEN ((v0.c0 IN (v0.c0, v0.c0))) AND (((v0.c0)||(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) BETWEEN ((v0.c0 IN (v0.c0, v0.c0))) AND (((v0.c0)||(v0.c0)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((((rt0.c1)<<(rt0.c2))))>=((((((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0))))) LEFT OUTER JOIN rt0 ON (+ (CAST('' AS TEXT))) WHERE ((((((((((v0.c0)AND('')))OR(v0.c0)))OR(rt0.c1)))AND(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((v0.c0)AND('')))OR(v0.c0)))OR(rt0.c1)))AND(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((((rt0.c1)<<(rt0.c2))))>=((((((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0))))) LEFT OUTER JOIN rt0 ON (+ (CAST('' AS TEXT))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((((rt0.c1)<<(rt0.c2))))>=((((((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0))))) LEFT OUTER JOIN rt0 ON (+ (CAST('' AS TEXT))) WHERE ((((((((((v0.c0)AND('')))OR(v0.c0)))OR(rt0.c1)))AND(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((v0.c0)AND('')))OR(v0.c0)))OR(rt0.c1)))AND(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((((rt0.c1)<<(rt0.c2))))>=((((((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0))))) LEFT OUTER JOIN rt0 ON (+ (CAST('' AS TEXT))));
SELECT COUNT(*) FROM vt0 NOT INDEXED, v0 WHERE ('') ORDER BY CAST(IFNULL(v0.c0, v0.c0) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(IFNULL(v0.c0, v0.c0) AS NUMERIC) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 NOT INDEXED, v0 WHERE ('') ORDER BY CAST(IFNULL(v0.c0, v0.c0) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(IFNULL(v0.c0, v0.c0) AS NUMERIC) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 NOT INDEXED, v0 WHERE ('') ORDER BY CAST(IFNULL(v0.c0, v0.c0) AS NUMERIC) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN (vt0.c0)) IN (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN (vt0.c0)) IN (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN (vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((((vt0.c0) NOT NULL))AND((((v0.c0))=((vt0.c0))))))AND((((vt0.c0, vt0.c0, v0.c0))<=((vt0.c0, v0.c0, v0.c0))))))AND(LOWER(v0.c0))))AND(((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) NOT NULL))AND((((v0.c0))==((vt0.c0))))))AND((((vt0.c0, vt0.c0, v0.c0))<=((vt0.c0, v0.c0, v0.c0))))))AND(LOWER(v0.c0))))AND(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((((vt0.c0) NOT NULL))AND((((v0.c0))=((vt0.c0))))))AND((((vt0.c0, vt0.c0, v0.c0))<=((vt0.c0, v0.c0, v0.c0))))))AND(LOWER(v0.c0))))AND(((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) NOT NULL))AND((((v0.c0))==((vt0.c0))))))AND((((vt0.c0, vt0.c0, v0.c0))<=((vt0.c0, v0.c0, v0.c0))))))AND(LOWER(v0.c0))))AND(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((((vt0.c0) NOT NULL))AND((((v0.c0))=((vt0.c0))))))AND((((vt0.c0, vt0.c0, v0.c0))<=((vt0.c0, v0.c0, v0.c0))))))AND(LOWER(v0.c0))))AND(((v0.c0) NOTNULL))));
SELECT COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN v0 ON '-1342767554' WHERE (((v0.c0)%(rt0.c0 COLLATE NOCASE))) ORDER BY rt0.c1, ((((rt0.c1)AND(rt0.c1)))<<(((rt0.c1)>>(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)%(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN v0 ON '-1342767554' ORDER BY rt0.c1, ((((rt0.c1)AND(rt0.c1)))<<(((rt0.c1)>>(vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN v0 ON '-1342767554' WHERE (((v0.c0)%(rt0.c0 COLLATE NOCASE))) ORDER BY rt0.c1, ((((rt0.c1)AND(rt0.c1)))<<(((rt0.c1)>>(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)%(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN v0 ON '-1342767554' ORDER BY rt0.c1, ((((rt0.c1)AND(rt0.c1)))<<(((rt0.c1)>>(vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN v0 ON '-1342767554' WHERE (((v0.c0)%(rt0.c0 COLLATE NOCASE))) ORDER BY rt0.c1, ((((rt0.c1)AND(rt0.c1)))<<(((rt0.c1)>>(vt0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2)GLOB((NOT (rt0.c1))))) ORDER BY ((rt0.c2 COLLATE RTRIM) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)GLOB((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY ((rt0.c2 COLLATE RTRIM) NOT NULL));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2)GLOB((NOT (rt0.c1))))) ORDER BY ((rt0.c2 COLLATE RTRIM) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)GLOB((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY ((rt0.c2 COLLATE RTRIM) NOT NULL));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2)GLOB((NOT (rt0.c1))))) ORDER BY ((rt0.c2 COLLATE RTRIM) NOT NULL);
SELECT ALL * FROM v0, rt0, vt0 WHERE ((~ (CASE WHEN NULL THEN rt0.c2 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN NULL THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE ((~ (CASE WHEN NULL THEN rt0.c2 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN NULL THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE ((~ (CASE WHEN NULL THEN rt0.c2 ELSE rt0.c2 END)));
SELECT * FROM vt0, rt0 WHERE (((((('1541279610', rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c0, x'e308')) AND ((rt0.c1, vt0.c0, rt0.c2)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((('1541279610', rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c0, x'e308')) AND ((rt0.c1, vt0.c0, rt0.c2)))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((('1541279610', rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c0, x'e308')) AND ((rt0.c1, vt0.c0, rt0.c2)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((('1541279610', rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c0, x'e308')) AND ((rt0.c1, vt0.c0, rt0.c2)))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((('1541279610', rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c0, x'e308')) AND ((rt0.c1, vt0.c0, rt0.c2)))) NOTNULL));
SELECT COUNT(*) FROM v0, rt0, vt0 NOT INDEXED WHERE ((((rt0.c2)) BETWEEN (((~ (v0.c0)))) AND (('')))) ORDER BY ((rt0.c1)IS(((rt0.c2)AND(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN (((~ (v0.c0)))) AND (('')))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((rt0.c1)IS(((rt0.c2)AND(v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0, vt0 NOT INDEXED WHERE ((((rt0.c2)) BETWEEN (((~ (v0.c0)))) AND (('')))) ORDER BY ((rt0.c1)IS(((rt0.c2)AND(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN (((~ (v0.c0)))) AND (('')))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((rt0.c1)IS(((rt0.c2)AND(v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0, vt0 NOT INDEXED WHERE ((((rt0.c2)) BETWEEN (((~ (v0.c0)))) AND (('')))) ORDER BY ((rt0.c1)IS(((rt0.c2)AND(v0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (237725634);
SELECT SUM(count) FROM (SELECT ((237725634) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (237725634);
SELECT SUM(count) FROM (SELECT ((237725634) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (237725634);
SELECT COUNT(*) FROM v0, rt0 WHERE (UNLIKELY(DISTINCT ((v0.c0)<=(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((v0.c0)<=(rt0.c1)))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (UNLIKELY(DISTINCT ((v0.c0)<=(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((v0.c0)<=(rt0.c1)))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (UNLIKELY(DISTINCT ((v0.c0)<=(rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(TRIM(DISTINCT rt0.c1, rt0.c0), rt0.c0 COLLATE NOCASE, (((rt0.c2))>=((rt0.c0))), ((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))) ORDER BY SQLITE_COMPILEOPTION_USED(((rt0.c1)*(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((COALESCE(TRIM(DISTINCT rt0.c1, rt0.c0), rt0.c0 COLLATE NOCASE, (((rt0.c2))>=((rt0.c0))), ((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY SQLITE_COMPILEOPTION_USED(((rt0.c1)*(rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(TRIM(DISTINCT rt0.c1, rt0.c0), rt0.c0 COLLATE NOCASE, (((rt0.c2))>=((rt0.c0))), ((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))) ORDER BY SQLITE_COMPILEOPTION_USED(((rt0.c1)*(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((COALESCE(TRIM(DISTINCT rt0.c1, rt0.c0), rt0.c0 COLLATE NOCASE, (((rt0.c2))>=((rt0.c0))), ((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY SQLITE_COMPILEOPTION_USED(((rt0.c1)*(rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(TRIM(DISTINCT rt0.c1, rt0.c0), rt0.c0 COLLATE NOCASE, (((rt0.c2))>=((rt0.c0))), ((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))) ORDER BY SQLITE_COMPILEOPTION_USED(((rt0.c1)*(rt0.c1)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)) IN ())) ORDER BY (NOT (CASE WHEN rt0.c2 THEN vt0.c0 END)) DESC  NULLS LAST, ((((((vt0.c0)AND(rt0.c2)))OR(rt0.c3))) BETWEEN ((((rt0.c2))<=((rt0.c0)))) AND (((vt0.c0)<>(0.5207389226397972)))) ASC, (((rt0.c2, rt0.c3, rt0.c1)) NOT BETWEEN ((CAST(rt0.c2 AS REAL), ((rt0.c2) BETWEEN ('1080755907') AND (vt0.c0)), 'ೊ4v(e')) AND ((((rt0.c0)-(rt0.c2)), ((rt0.c0)IS(rt0.c2)), ((vt0.c0) NOT NULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (CASE WHEN rt0.c2 THEN vt0.c0 END)) DESC  NULLS LAST, ((((((vt0.c0)AND(rt0.c2)))OR(rt0.c3))) BETWEEN ((((rt0.c2))<=((rt0.c0)))) AND (((vt0.c0)<>(0.5207389226397972)))) ASC, (((rt0.c2, rt0.c3, rt0.c1)) NOT BETWEEN ((CAST(rt0.c2 AS REAL), ((rt0.c2) BETWEEN ('1080755907') AND (vt0.c0)), 'ೊ4v(e')) AND ((((rt0.c0)-(rt0.c2)), ((rt0.c0)IS(rt0.c2)), ((vt0.c0) NOT NULL)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)) IN ())) ORDER BY (NOT (CASE WHEN rt0.c2 THEN vt0.c0 END)) DESC  NULLS LAST, ((((((vt0.c0)AND(rt0.c2)))OR(rt0.c3))) BETWEEN ((((rt0.c2))<=((rt0.c0)))) AND (((vt0.c0)<>(0.5207389226397972)))) ASC, (((rt0.c2, rt0.c3, rt0.c1)) NOT BETWEEN ((CAST(rt0.c2 AS REAL), ((rt0.c2) BETWEEN ('1080755907') AND (vt0.c0)), 'ೊ4v(e')) AND ((((rt0.c0)-(rt0.c2)), ((rt0.c0)IS(rt0.c2)), ((vt0.c0) NOT NULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (CASE WHEN rt0.c2 THEN vt0.c0 END)) DESC  NULLS LAST, ((((((vt0.c0)AND(rt0.c2)))OR(rt0.c3))) BETWEEN ((((rt0.c2))<=((rt0.c0)))) AND (((vt0.c0)<>(0.5207389226397972)))) ASC, (((rt0.c2, rt0.c3, rt0.c1)) NOT BETWEEN ((CAST(rt0.c2 AS REAL), ((rt0.c2) BETWEEN ('1080755907') AND (vt0.c0)), 'ೊ4v(e')) AND ((((rt0.c0)-(rt0.c2)), ((rt0.c0)IS(rt0.c2)), ((vt0.c0) NOT NULL)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)) IN ())) ORDER BY (NOT (CASE WHEN rt0.c2 THEN vt0.c0 END)) DESC  NULLS LAST, ((((((vt0.c0)AND(rt0.c2)))OR(rt0.c3))) BETWEEN ((((rt0.c2))<=((rt0.c0)))) AND (((vt0.c0)<>(0.5207389226397972)))) ASC, (((rt0.c2, rt0.c3, rt0.c1)) NOT BETWEEN ((CAST(rt0.c2 AS REAL), ((rt0.c2) BETWEEN ('1080755907') AND (vt0.c0)), 'ೊ4v(e')) AND ((((rt0.c0)-(rt0.c2)), ((rt0.c0)IS(rt0.c2)), ((vt0.c0) NOT NULL)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((v0.c0)+(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0)+(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((v0.c0)+(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0)+(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((v0.c0)+(v0.c0)))));
SELECT ALL * FROM rt0, v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (v0.c0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)<(rt0.c0)))IS NOT(((rt0.c3) NOT BETWEEN (rt0.c1) AND ('3.vv{t\nCT')))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<(rt0.c0)))IS NOT(((rt0.c3) NOT BETWEEN (rt0.c1) AND ('3.vv{t\nCT'))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)<(rt0.c0)))IS NOT(((rt0.c3) NOT BETWEEN (rt0.c1) AND ('3.vv{t\nCT')))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<(rt0.c0)))IS NOT(((rt0.c3) NOT BETWEEN (rt0.c1) AND ('3.vv{t\nCT'))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)<(rt0.c0)))IS NOT(((rt0.c3) NOT BETWEEN (rt0.c1) AND ('3.vv{t\nCT')))));
SELECT * FROM rt0 WHERE (((((x'd714')AND(((rt0.c0)LIKE(rt0.c0)))))OR(((rt0.c0) NOT BETWEEN ('-974728600') AND (rt0.c0))))) ORDER BY CASE WHEN rt0.c1 THEN rt0.c1 END COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((x'd714')AND(((rt0.c0)LIKE(rt0.c0)))))OR(((rt0.c0) NOT BETWEEN ('-974728600') AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c1 THEN rt0.c1 END COLLATE RTRIM ASC);
SELECT * FROM rt0 WHERE (((((x'd714')AND(((rt0.c0)LIKE(rt0.c0)))))OR(((rt0.c0) NOT BETWEEN ('-974728600') AND (rt0.c0))))) ORDER BY CASE WHEN rt0.c1 THEN rt0.c1 END COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((x'd714')AND(((rt0.c0)LIKE(rt0.c0)))))OR(((rt0.c0) NOT BETWEEN ('-974728600') AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c1 THEN rt0.c1 END COLLATE RTRIM ASC);
SELECT * FROM rt0 WHERE (((((x'd714')AND(((rt0.c0)LIKE(rt0.c0)))))OR(((rt0.c0) NOT BETWEEN ('-974728600') AND (rt0.c0))))) ORDER BY CASE WHEN rt0.c1 THEN rt0.c1 END COLLATE RTRIM ASC;
SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((rt0.c3)||(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c3)||(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((rt0.c3)||(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c3)||(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((rt0.c3)||(rt0.c3)))));
SELECT * FROM rt0, v0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END AS REAL)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END AS REAL)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END AS REAL));
SELECT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((0.16276791023790493)))) ORDER BY CAST(((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((0.16276791023790493)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)) AS BLOB) DESC);
SELECT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((0.16276791023790493)))) ORDER BY CAST(((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((0.16276791023790493)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)) AS BLOB) DESC);
SELECT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((0.16276791023790493)))) ORDER BY CAST(((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)) AS BLOB) DESC;
SELECT * FROM v0, rt0 WHERE (0x5af50338) ORDER BY (CAST(rt0.c1 AS REAL) IN ());
SELECT SUM(count) FROM (SELECT ((0X5af50338) IS TRUE)  as count FROM v0, rt0 ORDER BY (CAST(rt0.c1 AS REAL) IN ()));
SELECT * FROM v0, rt0 WHERE (0x5af50338) ORDER BY (CAST(rt0.c1 AS REAL) IN ());
SELECT SUM(count) FROM (SELECT ((0X5af50338) IS TRUE)  as count FROM v0, rt0 ORDER BY (CAST(rt0.c1 AS REAL) IN ()));
SELECT * FROM v0, rt0 WHERE (0x5af50338) ORDER BY (CAST(rt0.c1 AS REAL) IN ());
SELECT * FROM rt0, v0 WHERE ((NOT (rt0.c2 COLLATE NOCASE))) ORDER BY (((NOT (v0.c0))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((NOT (v0.c0))) IS FALSE)  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((NOT (rt0.c2 COLLATE NOCASE))) ORDER BY (((NOT (v0.c0))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((NOT (v0.c0))) IS FALSE)  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((NOT (rt0.c2 COLLATE NOCASE))) ORDER BY (((NOT (v0.c0))) IS FALSE)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (NULL))) BETWEEN (vt0.c0) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY (NOT ((~ (vt0.c0)))) ASC  NULLS LAST, ((((vt0.c0)>>(vt0.c0)))&(UNLIKELY(DISTINCT vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (NULL))) BETWEEN (vt0.c0) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((~ (vt0.c0)))) ASC  NULLS LAST, ((((vt0.c0)>>(vt0.c0)))&(UNLIKELY(DISTINCT vt0.c0))) ASC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (NULL))) BETWEEN (vt0.c0) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY (NOT ((~ (vt0.c0)))) ASC  NULLS LAST, ((((vt0.c0)>>(vt0.c0)))&(UNLIKELY(DISTINCT vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (NULL))) BETWEEN (vt0.c0) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((~ (vt0.c0)))) ASC  NULLS LAST, ((((vt0.c0)>>(vt0.c0)))&(UNLIKELY(DISTINCT vt0.c0))) ASC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (NULL))) BETWEEN (vt0.c0) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY (NOT ((~ (vt0.c0)))) ASC  NULLS LAST, ((((vt0.c0)>>(vt0.c0)))&(UNLIKELY(DISTINCT vt0.c0))) ASC;
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) NOT NULL))) AND (((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((v0.c0) NOT NULL))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) NOT NULL))) AND (((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((v0.c0) NOT NULL))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) NOT NULL))) AND (((vt0.c0 IN ())))));
SELECT ALL * FROM v0 WHERE (((x'' COLLATE BINARY) NOT BETWEEN (((v0.c0)/(v0.c0))) AND (v0.c0))) ORDER BY json_valid(((('9aEq', v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'' COLLATE BINARY) NOT BETWEEN (((v0.c0)/(v0.c0))) AND (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY json_valid(((('9aEq', v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((x'' COLLATE BINARY) NOT BETWEEN (((v0.c0)/(v0.c0))) AND (v0.c0))) ORDER BY json_valid(((('9aEq', v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'' COLLATE BINARY) NOT BETWEEN (((v0.c0)/(v0.c0))) AND (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY json_valid(((('9aEq', v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((x'' COLLATE BINARY) NOT BETWEEN (((v0.c0)/(v0.c0))) AND (v0.c0))) ORDER BY json_valid(((('9aEq', v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0)))) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c0)|(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)|(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)|(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)|(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)|(vt0.c0))) NOT NULL));
SELECT ALL * FROM v0, vt0 WHERE (CAST(((x'369c1624') BETWEEN (v0.c0) AND (v0.c0)) AS REAL)) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((x'369c1624') BETWEEN (v0.c0) AND (v0.c0)) AS REAL)) IS TRUE)  as count FROM v0, vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (CAST(((x'369c1624') BETWEEN (v0.c0) AND (v0.c0)) AS REAL)) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((x'369c1624') BETWEEN (v0.c0) AND (v0.c0)) AS REAL)) IS TRUE)  as count FROM v0, vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (CAST(((x'369c1624') BETWEEN (v0.c0) AND (v0.c0)) AS REAL)) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON CAST((+ (vt0.c0)) AS REAL) WHERE ((((v0.c0, vt0.c0, v0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), v0.c0, ((((v0.c0)OR(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c0) IS TRUE), (((x'e376')) BETWEEN ((v0.c0)) AND ((NULL))), ((v0.c0)<>(v0.c0)))))) ORDER BY ((((((((NULL)OR('1518309001')))AND(CAST(NULL AS INTEGER))))AND(json_type(v0.c0))))OR(((v0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, vt0.c0, v0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), v0.c0, ((((v0.c0)OR(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c0) IS TRUE), (((x'e376')) BETWEEN ((v0.c0)) AND ((NULL))), ((v0.c0)!=(v0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CAST((+ (vt0.c0)) AS REAL) ORDER BY ((((((((NULL)OR('1518309001')))AND(CAST(NULL AS INTEGER))))AND(json_type(v0.c0))))OR(((v0.c0) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON CAST((+ (vt0.c0)) AS REAL) WHERE ((((v0.c0, vt0.c0, v0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), v0.c0, ((((v0.c0)OR(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c0) IS TRUE), (((x'e376')) BETWEEN ((v0.c0)) AND ((NULL))), ((v0.c0)<>(v0.c0)))))) ORDER BY ((((((((NULL)OR('1518309001')))AND(CAST(NULL AS INTEGER))))AND(json_type(v0.c0))))OR(((v0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, vt0.c0, v0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), v0.c0, ((((v0.c0)OR(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c0) IS TRUE), (((x'e376')) BETWEEN ((v0.c0)) AND ((NULL))), ((v0.c0)!=(v0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CAST((+ (vt0.c0)) AS REAL) ORDER BY ((((((((NULL)OR('1518309001')))AND(CAST(NULL AS INTEGER))))AND(json_type(v0.c0))))OR(((v0.c0) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON CAST((+ (vt0.c0)) AS REAL) WHERE ((((v0.c0, vt0.c0, v0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), v0.c0, ((((v0.c0)OR(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c0) IS TRUE), (((x'e376')) BETWEEN ((v0.c0)) AND ((NULL))), ((v0.c0)<>(v0.c0)))))) ORDER BY ((((((((NULL)OR('1518309001')))AND(CAST(NULL AS INTEGER))))AND(json_type(v0.c0))))OR(((v0.c0) NOT NULL))) ASC;
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c3)) BETWEEN ((((rt0.c3)==(x'')))) AND ((((v0.c0) BETWEEN (rt0.c2) AND (v0.c0))))) LEFT OUTER JOIN v0 ON 0.6184622001462778 WHERE (((rt0.c3)>>(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c3)>>(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c3)) BETWEEN ((((rt0.c3)==(x'')))) AND ((((v0.c0) BETWEEN (rt0.c2) AND (v0.c0))))) LEFT OUTER JOIN v0 ON 0.6184622001462778);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c3)) BETWEEN ((((rt0.c3)==(x'')))) AND ((((v0.c0) BETWEEN (rt0.c2) AND (v0.c0))))) LEFT OUTER JOIN v0 ON 0.6184622001462778 WHERE (((rt0.c3)>>(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c3)>>(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c3)) BETWEEN ((((rt0.c3)==(x'')))) AND ((((v0.c0) BETWEEN (rt0.c2) AND (v0.c0))))) LEFT OUTER JOIN v0 ON 0.6184622001462778);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((rt0.c0)AND((((rt0.c0, rt0.c0, rt0.c3))<=((rt0.c2, NULL, rt0.c1))))))AND(0.9439761592480179)))AND((NOT (rt0.c2)))))AND(CAST(rt0.c1 AS BLOB))) LEFT OUTER JOIN v0 ON ((((v0.c0) IS FALSE)) IS TRUE) WHERE (970714057);
SELECT SUM(count) FROM (SELECT ((970714057) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((rt0.c0)AND((((rt0.c0, rt0.c0, rt0.c3))<=((rt0.c2, NULL, rt0.c1))))))AND(0.9439761592480179)))AND((NOT (rt0.c2)))))AND(CAST(rt0.c1 AS BLOB))) LEFT OUTER JOIN v0 ON ((((v0.c0) IS FALSE)) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((rt0.c0)AND((((rt0.c0, rt0.c0, rt0.c3))<=((rt0.c2, NULL, rt0.c1))))))AND(0.9439761592480179)))AND((NOT (rt0.c2)))))AND(CAST(rt0.c1 AS BLOB))) LEFT OUTER JOIN v0 ON ((((v0.c0) IS FALSE)) IS TRUE) WHERE (970714057);
SELECT SUM(count) FROM (SELECT ((970714057) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((rt0.c0)AND((((rt0.c0, rt0.c0, rt0.c3))<=((rt0.c2, NULL, rt0.c1))))))AND(0.9439761592480179)))AND((NOT (rt0.c2)))))AND(CAST(rt0.c1 AS BLOB))) LEFT OUTER JOIN v0 ON ((((v0.c0) IS FALSE)) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((rt0.c0)AND((((rt0.c0, rt0.c0, rt0.c3))<=((rt0.c2, NULL, rt0.c1))))))AND(0.9439761592480179)))AND((NOT (rt0.c2)))))AND(CAST(rt0.c1 AS BLOB))) LEFT OUTER JOIN v0 ON ((((v0.c0) IS FALSE)) IS TRUE) WHERE (970714057);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN (rt0.c0, rt0.c1)))GLOB(((vt0.c0) ISNULL))) WHERE ((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) COLLATE NOCASE) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN (rt0.c0, rt0.c1)))GLOB(((vt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN (rt0.c0, rt0.c1)))GLOB(((vt0.c0) ISNULL))) WHERE ((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) COLLATE NOCASE) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN (rt0.c0, rt0.c1)))GLOB(((vt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN (rt0.c0, rt0.c1)))GLOB(((vt0.c0) ISNULL))) WHERE ((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) COLLATE NOCASE);
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN v0 ON (~ (JULIANDAY(v0.c0, rt0.c3, rt0.c0, vt0.c0, v0.c0))) WHERE ((((v0.c0 IN ()))OR(rt0.c3 COLLATE BINARY))) ORDER BY CASE WHEN ((((v0.c0)AND(v0.c0)))OR(vt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c3) AND (v0.c0)) WHEN ((vt0.c0)GLOB(vt0.c0)) THEN ((v0.c0) ISNULL) WHEN CASE rt0.c2  WHEN '.4*)\n' THEN x'04e6' ELSE vt0.c0 END THEN rt0.c0 ELSE ((rt0.c2)|(NULL)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))OR(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN v0 ON (~ (JULIANDAY(v0.c0, rt0.c3, rt0.c0, vt0.c0, v0.c0))) ORDER BY CASE WHEN ((((v0.c0)AND(v0.c0)))OR(vt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c3) AND (v0.c0)) WHEN ((vt0.c0)GLOB(vt0.c0)) THEN ((v0.c0) ISNULL) WHEN CASE rt0.c2  WHEN '.4*)\n' THEN x'04e6' ELSE vt0.c0 END THEN rt0.c0 ELSE ((rt0.c2)|(NULL)) END DESC);
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN v0 ON (~ (JULIANDAY(v0.c0, rt0.c3, rt0.c0, vt0.c0, v0.c0))) WHERE ((((v0.c0 IN ()))OR(rt0.c3 COLLATE BINARY))) ORDER BY CASE WHEN ((((v0.c0)AND(v0.c0)))OR(vt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c3) AND (v0.c0)) WHEN ((vt0.c0)GLOB(vt0.c0)) THEN ((v0.c0) ISNULL) WHEN CASE rt0.c2  WHEN '.4*)\n' THEN x'04e6' ELSE vt0.c0 END THEN rt0.c0 ELSE ((rt0.c2)|(NULL)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))OR(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN v0 ON (~ (JULIANDAY(v0.c0, rt0.c3, rt0.c0, vt0.c0, v0.c0))) ORDER BY CASE WHEN ((((v0.c0)AND(v0.c0)))OR(vt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c3) AND (v0.c0)) WHEN ((vt0.c0)GLOB(vt0.c0)) THEN ((v0.c0) ISNULL) WHEN CASE rt0.c2  WHEN '.4*)\n' THEN x'04e6' ELSE vt0.c0 END THEN rt0.c0 ELSE ((rt0.c2)|(NULL)) END DESC);
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN v0 ON (~ (JULIANDAY(v0.c0, rt0.c3, rt0.c0, vt0.c0, v0.c0))) WHERE ((((v0.c0 IN ()))OR(rt0.c3 COLLATE BINARY))) ORDER BY CASE WHEN ((((v0.c0)AND(v0.c0)))OR(vt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c3) AND (v0.c0)) WHEN ((vt0.c0)GLOB(vt0.c0)) THEN ((v0.c0) ISNULL) WHEN CASE rt0.c2  WHEN '.4*)\n' THEN x'04e6' ELSE vt0.c0 END THEN rt0.c0 ELSE ((rt0.c2)|(NULL)) END DESC;
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ((((rt0.c3)<(rt0.c3)))==(((v0.c0)|(vt0.c0)))) FULL OUTER JOIN rt0 ON 649906941 WHERE (CASE WHEN NULL COLLATE BINARY THEN '' WHEN ((v0.c0) BETWEEN (x'') AND (vt0.c0)) THEN CAST(rt0.c2 AS NUMERIC) WHEN CASE vt0.c0  WHEN rt0.c0 THEN x'' ELSE rt0.c0 END THEN (+ (rt0.c3)) END) ORDER BY CASE WHEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN -1.710339897E9 END THEN (((v0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0))) ELSE ((vt0.c0)*(rt0.c3)) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL COLLATE BINARY THEN '' WHEN ((v0.c0) BETWEEN (x'') AND (vt0.c0)) THEN CAST(rt0.c2 AS NUMERIC) WHEN CASE vt0.c0  WHEN rt0.c0 THEN x'' ELSE rt0.c0 END THEN (+ (rt0.c3)) END) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((rt0.c3)<(rt0.c3)))==(((v0.c0)|(vt0.c0)))) FULL OUTER JOIN rt0 ON 649906941 ORDER BY CASE WHEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN -1.710339897E9 END THEN (((v0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0))) ELSE ((vt0.c0)*(rt0.c3)) END DESC);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ((((rt0.c3)<(rt0.c3)))==(((v0.c0)|(vt0.c0)))) FULL OUTER JOIN rt0 ON 649906941 WHERE (CASE WHEN NULL COLLATE BINARY THEN '' WHEN ((v0.c0) BETWEEN (x'') AND (vt0.c0)) THEN CAST(rt0.c2 AS NUMERIC) WHEN CASE vt0.c0  WHEN rt0.c0 THEN x'' ELSE rt0.c0 END THEN (+ (rt0.c3)) END) ORDER BY CASE WHEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN -1.710339897E9 END THEN (((v0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0))) ELSE ((vt0.c0)*(rt0.c3)) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL COLLATE BINARY THEN '' WHEN ((v0.c0) BETWEEN (x'') AND (vt0.c0)) THEN CAST(rt0.c2 AS NUMERIC) WHEN CASE vt0.c0  WHEN rt0.c0 THEN x'' ELSE rt0.c0 END THEN (+ (rt0.c3)) END) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((rt0.c3)<(rt0.c3)))==(((v0.c0)|(vt0.c0)))) FULL OUTER JOIN rt0 ON 649906941 ORDER BY CASE WHEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN -1.710339897E9 END THEN (((v0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0))) ELSE ((vt0.c0)*(rt0.c3)) END DESC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM v0, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ('');
SELECT ALL COUNT(*) FROM v0, rt0 LEFT OUTER JOIN vt0 ON (rt0.c2 IN (rt0.c1, rt0.c2)) COLLATE BINARY WHERE (CAST(v0.c0 AS BLOB)) ORDER BY rt0.c3, CASE ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(v0.c0)))AND(rt0.c0))  WHEN (((rt0.c0))<((v0.c0))) THEN rt0.c0 ELSE 0.3738365995793198 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS BLOB)) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN vt0 ON (rt0.c2 IN (rt0.c1, rt0.c2)) COLLATE BINARY ORDER BY rt0.c3, CASE ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(v0.c0)))AND(rt0.c0))  WHEN (((rt0.c0))<((v0.c0))) THEN rt0.c0 ELSE 0.3738365995793198 END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 LEFT OUTER JOIN vt0 ON (rt0.c2 IN (rt0.c1, rt0.c2)) COLLATE BINARY WHERE (CAST(v0.c0 AS BLOB)) ORDER BY rt0.c3, CASE ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(v0.c0)))AND(rt0.c0))  WHEN (((rt0.c0))<((v0.c0))) THEN rt0.c0 ELSE 0.3738365995793198 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS BLOB)) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN vt0 ON (rt0.c2 IN (rt0.c1, rt0.c2)) COLLATE BINARY ORDER BY rt0.c3, CASE ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(v0.c0)))AND(rt0.c0))  WHEN (((rt0.c0))<((v0.c0))) THEN rt0.c0 ELSE 0.3738365995793198 END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 LEFT OUTER JOIN vt0 ON (rt0.c2 IN (rt0.c1, rt0.c2)) COLLATE BINARY WHERE (CAST(v0.c0 AS BLOB)) ORDER BY rt0.c3, CASE ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(v0.c0)))AND(rt0.c0))  WHEN (((rt0.c0))<((v0.c0))) THEN rt0.c0 ELSE 0.3738365995793198 END ASC  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0)GLOB(vt0.c0)) IN ())) ORDER BY (('') ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)GLOB(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY (('') ISNULL) ASC);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0)GLOB(vt0.c0)) IN ())) ORDER BY (('') ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)GLOB(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY (('') ISNULL) ASC);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0)GLOB(vt0.c0)) IN ())) ORDER BY (('') ISNULL) ASC;
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((((((rt0.c3)AND(v0.c0)))AND(v0.c0)))!=((rt0.c0 IN ())))) ORDER BY ((rt0.c2) NOT NULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)AND(v0.c0)))AND(v0.c0)))<>((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((rt0.c2) NOT NULL) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((((((rt0.c3)AND(v0.c0)))AND(v0.c0)))!=((rt0.c0 IN ())))) ORDER BY ((rt0.c2) NOT NULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)AND(v0.c0)))AND(v0.c0)))<>((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((rt0.c2) NOT NULL) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((((((rt0.c3)AND(v0.c0)))AND(v0.c0)))!=((rt0.c0 IN ())))) ORDER BY ((rt0.c2) NOT NULL) COLLATE NOCASE;
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c3))) NOT BETWEEN ((((rt0.c1))=((rt0.c0)))) AND ((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c3))) NOT BETWEEN ((((rt0.c1))==((rt0.c0)))) AND ((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c3))) NOT BETWEEN ((((rt0.c1))=((rt0.c0)))) AND ((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c3))) NOT BETWEEN ((((rt0.c1))==((rt0.c0)))) AND ((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c3))) NOT BETWEEN ((((rt0.c1))=((rt0.c0)))) AND ((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON ((((((((CAST(v0.c0 AS INTEGER))AND(((rt0.c3) NOTNULL))))AND(((rt0.c3)>(rt0.c3)))))OR(rt0.c2)))AND(IFNULL(DISTINCT vt0.c0, rt0.c3))) FULL OUTER JOIN vt0 ON (NOT (((rt0.c3)|(0x1fc07bbb)))) WHERE ((((rt0.c1)>=(rt0.c3)) IN (((v0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)), (rt0.c2 IN ())))) ORDER BY LIKELY((- (v0.c0))) DESC, ((+ (rt0.c3)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)>=(rt0.c3)) IN (((v0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)), (rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((((((((CAST(v0.c0 AS INTEGER))AND(((rt0.c3) NOTNULL))))AND(((rt0.c3)>(rt0.c3)))))OR(rt0.c2)))AND(IFNULL(DISTINCT vt0.c0, rt0.c3))) FULL OUTER JOIN vt0 ON (NOT (((rt0.c3)|(0x1fc07bbb)))) ORDER BY LIKELY((- (v0.c0))) DESC, ((+ (rt0.c3)) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON ((((((((CAST(v0.c0 AS INTEGER))AND(((rt0.c3) NOTNULL))))AND(((rt0.c3)>(rt0.c3)))))OR(rt0.c2)))AND(IFNULL(DISTINCT vt0.c0, rt0.c3))) FULL OUTER JOIN vt0 ON (NOT (((rt0.c3)|(0x1fc07bbb)))) WHERE ((((rt0.c1)>=(rt0.c3)) IN (((v0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)), (rt0.c2 IN ())))) ORDER BY LIKELY((- (v0.c0))) DESC, ((+ (rt0.c3)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)>=(rt0.c3)) IN (((v0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)), (rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((((((((CAST(v0.c0 AS INTEGER))AND(((rt0.c3) NOTNULL))))AND(((rt0.c3)>(rt0.c3)))))OR(rt0.c2)))AND(IFNULL(DISTINCT vt0.c0, rt0.c3))) FULL OUTER JOIN vt0 ON (NOT (((rt0.c3)|(0x1fc07bbb)))) ORDER BY LIKELY((- (v0.c0))) DESC, ((+ (rt0.c3)) IN ()) DESC  NULLS FIRST);
SELECT * FROM rt0, vt0, v0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS INTEGER));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CASE (NOT (0X45a8bd51))  WHEN rt0.c1 THEN (- (rt0.c0)) ELSE (rt0.c3 IN ()) END) ORDER BY CASE PRINTF(rt0.c0)  WHEN ((v0.c0)<<(rt0.c2)) THEN rt0.c2 COLLATE NOCASE END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (0x45a8bd51))  WHEN rt0.c1 THEN (- (rt0.c0)) ELSE (rt0.c3 IN ()) END) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CASE PRINTF(rt0.c0)  WHEN ((v0.c0)<<(rt0.c2)) THEN rt0.c2 COLLATE NOCASE END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CASE (NOT (0X45a8bd51))  WHEN rt0.c1 THEN (- (rt0.c0)) ELSE (rt0.c3 IN ()) END) ORDER BY CASE PRINTF(rt0.c0)  WHEN ((v0.c0)<<(rt0.c2)) THEN rt0.c2 COLLATE NOCASE END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (0x45a8bd51))  WHEN rt0.c1 THEN (- (rt0.c0)) ELSE (rt0.c3 IN ()) END) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CASE PRINTF(rt0.c0)  WHEN ((v0.c0)<<(rt0.c2)) THEN rt0.c2 COLLATE NOCASE END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CASE (NOT (0X45a8bd51))  WHEN rt0.c1 THEN (- (rt0.c0)) ELSE (rt0.c3 IN ()) END) ORDER BY CASE PRINTF(rt0.c0)  WHEN ((v0.c0)<<(rt0.c2)) THEN rt0.c2 COLLATE NOCASE END ASC  NULLS FIRST;
SELECT * FROM v0 WHERE (MIN(((NULL) IS TRUE), v0.c0 COLLATE RTRIM, (v0.c0 IN ()), (+ (v0.c0)))) ORDER BY ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR('852341263')))AND(CAST(x'4990' AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((MIN(((NULL) IS TRUE), v0.c0 COLLATE RTRIM, (v0.c0 IN ()), (+ (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR('852341263')))AND(CAST(x'4990' AS INTEGER))) ASC);
SELECT * FROM v0 WHERE (MIN(((NULL) IS TRUE), v0.c0 COLLATE RTRIM, (v0.c0 IN ()), (+ (v0.c0)))) ORDER BY ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR('852341263')))AND(CAST(x'4990' AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((MIN(((NULL) IS TRUE), v0.c0 COLLATE RTRIM, (v0.c0 IN ()), (+ (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR('852341263')))AND(CAST(x'4990' AS INTEGER))) ASC);
SELECT * FROM v0 WHERE (MIN(((NULL) IS TRUE), v0.c0 COLLATE RTRIM, (v0.c0 IN ()), (+ (v0.c0)))) ORDER BY ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR('852341263')))AND(CAST(x'4990' AS INTEGER))) ASC;
SELECT * FROM v0 WHERE (CASE WHEN SQLITE_COMPILEOPTION_USED(v0.c0) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN v0.c0 COLLATE RTRIM THEN ((v0.c0) ISNULL) WHEN v0.c0 THEN ((v0.c0)IS NOT(v0.c0)) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN SQLITE_COMPILEOPTION_USED(v0.c0) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN v0.c0 COLLATE RTRIM THEN ((v0.c0) ISNULL) WHEN v0.c0 THEN ((v0.c0)IS NOT(v0.c0)) ELSE x'' END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN SQLITE_COMPILEOPTION_USED(v0.c0) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN v0.c0 COLLATE RTRIM THEN ((v0.c0) ISNULL) WHEN v0.c0 THEN ((v0.c0)IS NOT(v0.c0)) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN SQLITE_COMPILEOPTION_USED(v0.c0) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN v0.c0 COLLATE RTRIM THEN ((v0.c0) ISNULL) WHEN v0.c0 THEN ((v0.c0)IS NOT(v0.c0)) ELSE x'' END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN SQLITE_COMPILEOPTION_USED(v0.c0) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN v0.c0 COLLATE RTRIM THEN ((v0.c0) ISNULL) WHEN v0.c0 THEN ((v0.c0)IS NOT(v0.c0)) ELSE x'' END);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((rt0.c2) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((rt0.c2) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((rt0.c2) ISNULL) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((((vt0.c0)) BETWEEN ((((rt0.c0)+(rt0.c2)))) AND ((((v0.c0)<('!d'))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((rt0.c0)+(rt0.c2)))) AND ((((v0.c0)<('!d')))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((((vt0.c0)) BETWEEN ((((rt0.c0)+(rt0.c2)))) AND ((((v0.c0)<('!d'))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((rt0.c0)+(rt0.c2)))) AND ((((v0.c0)<('!d')))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((((vt0.c0)) BETWEEN ((((rt0.c0)+(rt0.c2)))) AND ((((v0.c0)<('!d'))))));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON ((((x'')OR(CAST(vt0.c0 AS INTEGER))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) WHERE (((0.38594074200146256) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND ('BKR'))) ORDER BY (NOT (vt0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.38594074200146256) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND ('BKR'))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((x'')OR(CAST(vt0.c0 AS INTEGER))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY (NOT (vt0.c0)) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON ((((x'')OR(CAST(vt0.c0 AS INTEGER))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) WHERE (((0.38594074200146256) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND ('BKR'))) ORDER BY (NOT (vt0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.38594074200146256) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND ('BKR'))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((x'')OR(CAST(vt0.c0 AS INTEGER))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY (NOT (vt0.c0)) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON ((((x'')OR(CAST(vt0.c0 AS INTEGER))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) WHERE (((0.38594074200146256) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND ('BKR'))) ORDER BY (NOT (vt0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT * FROM rt0, v0 WHERE ((((rt0.c0)) BETWEEN ((-895252411)) AND ((((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))) ORDER BY (((((rt0.c1))>((rt0.c2)))) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (CASE rt0.c2  WHEN x'' THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE v0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((-895252411)) AND ((((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((rt0.c1))>((rt0.c2)))) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (CASE rt0.c2  WHEN x'' THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE v0.c0 END)) DESC);
SELECT * FROM rt0, v0 WHERE ((((rt0.c0)) BETWEEN ((-895252411)) AND ((((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))) ORDER BY (((((rt0.c1))>((rt0.c2)))) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (CASE rt0.c2  WHEN x'' THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE v0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((-895252411)) AND ((((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((rt0.c1))>((rt0.c2)))) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (CASE rt0.c2  WHEN x'' THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE v0.c0 END)) DESC);
SELECT * FROM rt0, v0 WHERE ((((rt0.c0)) BETWEEN ((-895252411)) AND ((((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))) ORDER BY (((((rt0.c1))>((rt0.c2)))) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (CASE rt0.c2  WHEN x'' THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE v0.c0 END)) DESC;
SELECT * FROM v0, vt0, rt0 WHERE (((((UPPER(rt0.c0))OR(((rt0.c0) ISNULL))))OR(rt0.c1 COLLATE RTRIM))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 END)%(CAST(rt0.c1 AS REAL))) ASC, (+ (rt0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((UPPER(rt0.c0))OR(((rt0.c0) ISNULL))))OR(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 END)%(CAST(rt0.c1 AS REAL))) ASC, (+ (rt0.c2))  NULLS LAST);
SELECT * FROM v0, vt0, rt0 WHERE (((((UPPER(rt0.c0))OR(((rt0.c0) ISNULL))))OR(rt0.c1 COLLATE RTRIM))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 END)%(CAST(rt0.c1 AS REAL))) ASC, (+ (rt0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((UPPER(rt0.c0))OR(((rt0.c0) ISNULL))))OR(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 END)%(CAST(rt0.c1 AS REAL))) ASC, (+ (rt0.c2))  NULLS LAST);
SELECT * FROM v0, vt0, rt0 WHERE (((((UPPER(rt0.c0))OR(((rt0.c0) ISNULL))))OR(rt0.c1 COLLATE RTRIM))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 END)%(CAST(rt0.c1 AS REAL))) ASC, (+ (rt0.c2))  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (x'93ca') ORDER BY ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))<=(CAST(rt0.c1 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'93ca') IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))<=(CAST(rt0.c1 AS NUMERIC)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (x'93ca') ORDER BY ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))<=(CAST(rt0.c1 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'93ca') IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))<=(CAST(rt0.c1 AS NUMERIC)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (x'93ca') ORDER BY ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))<=(CAST(rt0.c1 AS NUMERIC)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c1))) NOT BETWEEN ((rt0.c2 IN ())) AND (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1))) NOT BETWEEN ((rt0.c2 IN ())) AND (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c1))) NOT BETWEEN ((rt0.c2 IN ())) AND (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1))) NOT BETWEEN ((rt0.c2 IN ())) AND (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c1))) NOT BETWEEN ((rt0.c2 IN ())) AND (rt0.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (0.9430513872189399) ORDER BY CAST(vt0.c0 COLLATE RTRIM AS INTEGER) ASC, CAST(((rt0.c2) IS FALSE) AS TEXT) ASC, 0.28224035199755315 DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.9430513872189399) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY CAST(vt0.c0 COLLATE RTRIM AS INTEGER) ASC, CAST(((rt0.c2) IS FALSE) AS TEXT) ASC, 0.28224035199755315 DESC);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (0.9430513872189399) ORDER BY CAST(vt0.c0 COLLATE RTRIM AS INTEGER) ASC, CAST(((rt0.c2) IS FALSE) AS TEXT) ASC, 0.28224035199755315 DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.9430513872189399) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY CAST(vt0.c0 COLLATE RTRIM AS INTEGER) ASC, CAST(((rt0.c2) IS FALSE) AS TEXT) ASC, 0.28224035199755315 DESC);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (0.9430513872189399) ORDER BY CAST(vt0.c0 COLLATE RTRIM AS INTEGER) ASC, CAST(((rt0.c2) IS FALSE) AS TEXT) ASC, 0.28224035199755315 DESC;
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((~ (((((rt0.c3)AND(rt0.c3)))AND(rt0.c2))))) ORDER BY (('')/(((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt0.c3)AND(rt0.c3)))AND(rt0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (('')/(((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((~ (((((rt0.c3)AND(rt0.c3)))AND(rt0.c2))))) ORDER BY (('')/(((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt0.c3)AND(rt0.c3)))AND(rt0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (('')/(((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((~ (((((rt0.c3)AND(rt0.c3)))AND(rt0.c2))))) ORDER BY (('')/(((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((((v0.c0)>(rt0.c0)) IN ())) ORDER BY INSTR(rt0.c1 COLLATE RTRIM, vt0.c0 COLLATE BINARY) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)>(rt0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY INSTR(rt0.c1 COLLATE RTRIM, vt0.c0 COLLATE BINARY) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((((v0.c0)>(rt0.c0)) IN ())) ORDER BY INSTR(rt0.c1 COLLATE RTRIM, vt0.c0 COLLATE BINARY) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)>(rt0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY INSTR(rt0.c1 COLLATE RTRIM, vt0.c0 COLLATE BINARY) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((((v0.c0)>(rt0.c0)) IN ())) ORDER BY INSTR(rt0.c1 COLLATE RTRIM, vt0.c0 COLLATE BINARY) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((NOT (rt0.c0)))-(SQLITE_VERSION())));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0)))-(SQLITE_VERSION()))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((NOT (rt0.c0)))-(SQLITE_VERSION())));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0)))-(SQLITE_VERSION()))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((NOT (rt0.c0)))-(SQLITE_VERSION())));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON TIME((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), LIKELY(DISTINCT vt0.c0), ((vt0.c0) NOTNULL)) WHERE ((((v0.c0)>>(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)>>(vt0.c0)) IN ())) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON TIME((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), LIKELY(DISTINCT vt0.c0), ((vt0.c0) NOTNULL)));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON TIME((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), LIKELY(DISTINCT vt0.c0), ((vt0.c0) NOTNULL)) WHERE ((((v0.c0)>>(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)>>(vt0.c0)) IN ())) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON TIME((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), LIKELY(DISTINCT vt0.c0), ((vt0.c0) NOTNULL)));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON TIME((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), LIKELY(DISTINCT vt0.c0), ((vt0.c0) NOTNULL)) WHERE ((((v0.c0)>>(vt0.c0)) IN ()));
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((((((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))AND(vt0.c0)))OR(rt0.c2))) NOTNULL)) ORDER BY LIKELY(DISTINCT CASE v0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 ELSE x'' END) DESC  NULLS LAST, ((rt0.c2)!=(rt0.c1)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))AND(vt0.c0)))OR(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY LIKELY(DISTINCT CASE v0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 ELSE x'' END) DESC  NULLS LAST, ((rt0.c2)!=(rt0.c1)) COLLATE RTRIM DESC);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((((((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))AND(vt0.c0)))OR(rt0.c2))) NOTNULL)) ORDER BY LIKELY(DISTINCT CASE v0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 ELSE x'' END) DESC  NULLS LAST, ((rt0.c2)!=(rt0.c1)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))AND(vt0.c0)))OR(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY LIKELY(DISTINCT CASE v0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 ELSE x'' END) DESC  NULLS LAST, ((rt0.c2)!=(rt0.c1)) COLLATE RTRIM DESC);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((((((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))AND(vt0.c0)))OR(rt0.c2))) NOTNULL)) ORDER BY LIKELY(DISTINCT CASE v0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 ELSE x'' END) DESC  NULLS LAST, ((rt0.c2)!=(rt0.c1)) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- (CASE rt0.c2  WHEN 0xfffffffffa0c40c2 THEN rt0.c2 ELSE rt0.c2 END))) ORDER BY (~ (((vt0.c0)&(''))))  NULLS FIRST, (- (LIKELY(rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CASE rt0.c2  WHEN 0xfffffffffa0c40c2 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ (((vt0.c0)&(''))))  NULLS FIRST, (- (LIKELY(rt0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- (CASE rt0.c2  WHEN 0xfffffffffa0c40c2 THEN rt0.c2 ELSE rt0.c2 END))) ORDER BY (~ (((vt0.c0)&(''))))  NULLS FIRST, (- (LIKELY(rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CASE rt0.c2  WHEN 0xfffffffffa0c40c2 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ (((vt0.c0)&(''))))  NULLS FIRST, (- (LIKELY(rt0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- (CASE rt0.c2  WHEN 0xfffffffffa0c40c2 THEN rt0.c2 ELSE rt0.c2 END))) ORDER BY (~ (((vt0.c0)&(''))))  NULLS FIRST, (- (LIKELY(rt0.c0)))  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))GLOB((rt0.c2 IN (rt0.c2))))) ORDER BY ((rt0.c3)LIKE(rt0.c2)) COLLATE NOCASE ASC, (NOT (UNICODE(rt0.c3))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC))GLOB((rt0.c2 IN (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c3)LIKE(rt0.c2)) COLLATE NOCASE ASC, (NOT (UNICODE(rt0.c3))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))GLOB((rt0.c2 IN (rt0.c2))))) ORDER BY ((rt0.c3)LIKE(rt0.c2)) COLLATE NOCASE ASC, (NOT (UNICODE(rt0.c3))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC))GLOB((rt0.c2 IN (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c3)LIKE(rt0.c2)) COLLATE NOCASE ASC, (NOT (UNICODE(rt0.c3))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))GLOB((rt0.c2 IN (rt0.c2))))) ORDER BY ((rt0.c3)LIKE(rt0.c2)) COLLATE NOCASE ASC, (NOT (UNICODE(rt0.c3))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))))<>((((vt0.c0)>=(rt0.c0)))))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))))!=((((vt0.c0)>=(rt0.c0)))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))))<>((((vt0.c0)>=(rt0.c0)))))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))))!=((((vt0.c0)>=(rt0.c0)))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))))<>((((vt0.c0)>=(rt0.c0)))))) ORDER BY NULL  NULLS FIRST;
SELECT * FROM vt0, v0 NOT INDEXED WHERE ((((vt0.c0)) NOT BETWEEN ((x'')) AND ((CAST(vt0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((x'')) AND ((CAST(vt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 NOT INDEXED WHERE ((((vt0.c0)) NOT BETWEEN ((x'')) AND ((CAST(vt0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((x'')) AND ((CAST(vt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 NOT INDEXED WHERE ((((vt0.c0)) NOT BETWEEN ((x'')) AND ((CAST(vt0.c0 AS NUMERIC)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) IN (rt0.c2 COLLATE NOCASE, ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) RIGHT OUTER JOIN v0 ON ((vt0.c0) ISNULL) COLLATE NOCASE WHERE (((LOWER(DISTINCT x'')) NOT BETWEEN ((x'' IN ())) AND ((('-879041687') NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT x'')) NOT BETWEEN ((x'' IN ())) AND ((('-879041687') NOT NULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) IN (rt0.c2 COLLATE NOCASE, ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) RIGHT OUTER JOIN v0 ON ((vt0.c0) ISNULL) COLLATE NOCASE);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) IN (rt0.c2 COLLATE NOCASE, ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) RIGHT OUTER JOIN v0 ON ((vt0.c0) ISNULL) COLLATE NOCASE WHERE (((LOWER(DISTINCT x'')) NOT BETWEEN ((x'' IN ())) AND ((('-879041687') NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT x'')) NOT BETWEEN ((x'' IN ())) AND ((('-879041687') NOT NULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) IN (rt0.c2 COLLATE NOCASE, ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) RIGHT OUTER JOIN v0 ON ((vt0.c0) ISNULL) COLLATE NOCASE);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) IN (rt0.c2 COLLATE NOCASE, ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) RIGHT OUTER JOIN v0 ON ((vt0.c0) ISNULL) COLLATE NOCASE WHERE (((LOWER(DISTINCT x'')) NOT BETWEEN ((x'' IN ())) AND ((('-879041687') NOT NULL))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((((((vt0.c0, vt0.c0, v0.c0))>=((vt0.c0, vt0.c0, v0.c0)))))<>((((((((((v0.c0)OR('-334835440')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) WHERE (0.11755334323782385) ORDER BY (((0.6416448720795952)) BETWEEN ((((vt0.c0) NOTNULL))) AND ((vt0.c0)));
SELECT SUM(count) FROM (SELECT ((0.11755334323782385) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((((vt0.c0, vt0.c0, v0.c0))>=((vt0.c0, vt0.c0, v0.c0)))))!=((((((((((v0.c0)OR('-334835440')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) ORDER BY (((0.6416448720795952)) BETWEEN ((((vt0.c0) NOTNULL))) AND ((vt0.c0))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((((((vt0.c0, vt0.c0, v0.c0))>=((vt0.c0, vt0.c0, v0.c0)))))<>((((((((((v0.c0)OR('-334835440')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) WHERE (0.11755334323782385) ORDER BY (((0.6416448720795952)) BETWEEN ((((vt0.c0) NOTNULL))) AND ((vt0.c0)));
SELECT SUM(count) FROM (SELECT ((0.11755334323782385) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((((vt0.c0, vt0.c0, v0.c0))>=((vt0.c0, vt0.c0, v0.c0)))))!=((((((((((v0.c0)OR('-334835440')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) ORDER BY (((0.6416448720795952)) BETWEEN ((((vt0.c0) NOTNULL))) AND ((vt0.c0))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((((((vt0.c0, vt0.c0, v0.c0))>=((vt0.c0, vt0.c0, v0.c0)))))<>((((((((((v0.c0)OR('-334835440')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) WHERE (0.11755334323782385) ORDER BY (((0.6416448720795952)) BETWEEN ((((vt0.c0) NOTNULL))) AND ((vt0.c0)));
SELECT * FROM rt0 WHERE (((((rt0.c1)>(rt0.c1)))*(rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)>(rt0.c1)))*(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)>(rt0.c1)))*(rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)>(rt0.c1)))*(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)>(rt0.c1)))*(rt0.c3 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((((rt0.c0)>=(rt0.c3))) NOTNULL) INNER JOIN rt0 ON '-1856975307' WHERE ((~ ((~ (rt0.c0))))) ORDER BY CASE WHEN 0.059371741737335726 THEN CASE rt0.c3  WHEN rt0.c3 THEN vt0.c0 END ELSE (NOT (rt0.c0)) END DESC  NULLS LAST, (+ (CAST(-624218562 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((~ (rt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((((rt0.c0)>=(rt0.c3))) NOTNULL) INNER JOIN rt0 ON '-1856975307' ORDER BY CASE WHEN 0.059371741737335726 THEN CASE rt0.c3  WHEN rt0.c3 THEN vt0.c0 END ELSE (NOT (rt0.c0)) END DESC  NULLS LAST, (+ (CAST(-624218562 AS BLOB)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((((rt0.c0)>=(rt0.c3))) NOTNULL) INNER JOIN rt0 ON '-1856975307' WHERE ((~ ((~ (rt0.c0))))) ORDER BY CASE WHEN 0.059371741737335726 THEN CASE rt0.c3  WHEN rt0.c3 THEN vt0.c0 END ELSE (NOT (rt0.c0)) END DESC  NULLS LAST, (+ (CAST(-624218562 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((~ (rt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((((rt0.c0)>=(rt0.c3))) NOTNULL) INNER JOIN rt0 ON '-1856975307' ORDER BY CASE WHEN 0.059371741737335726 THEN CASE rt0.c3  WHEN rt0.c3 THEN vt0.c0 END ELSE (NOT (rt0.c0)) END DESC  NULLS LAST, (+ (CAST(-624218562 AS BLOB)))  NULLS FIRST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((((((((0Xffffffffff8fc315) NOTNULL))OR(NULL)))OR(rt0.c3)))OR(((rt0.c3)AND(rt0.c1)))))OR(((v0.c0)LIKE(rt0.c1))))) ORDER BY ((((((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))OR((~ (v0.c0)))))AND(rt0.c3)))OR(rt0.c2)))AND(' R.u{a}'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((0Xffffffffff8fc315) NOTNULL))OR(NULL)))OR(rt0.c3)))OR(((rt0.c3)AND(rt0.c1)))))OR(((v0.c0)LIKE(rt0.c1))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))OR((~ (v0.c0)))))AND(rt0.c3)))OR(rt0.c2)))AND(' R.u{a}'))  NULLS FIRST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((((((((0Xffffffffff8fc315) NOTNULL))OR(NULL)))OR(rt0.c3)))OR(((rt0.c3)AND(rt0.c1)))))OR(((v0.c0)LIKE(rt0.c1))))) ORDER BY ((((((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))OR((~ (v0.c0)))))AND(rt0.c3)))OR(rt0.c2)))AND(' R.u{a}'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((0Xffffffffff8fc315) NOTNULL))OR(NULL)))OR(rt0.c3)))OR(((rt0.c3)AND(rt0.c1)))))OR(((v0.c0)LIKE(rt0.c1))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))OR((~ (v0.c0)))))AND(rt0.c3)))OR(rt0.c2)))AND(' R.u{a}'))  NULLS FIRST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((((((((0Xffffffffff8fc315) NOTNULL))OR(NULL)))OR(rt0.c3)))OR(((rt0.c3)AND(rt0.c1)))))OR(((v0.c0)LIKE(rt0.c1))))) ORDER BY ((((((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))OR((~ (v0.c0)))))AND(rt0.c3)))OR(rt0.c2)))AND(' R.u{a}'))  NULLS FIRST;
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ABS((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, NULL, vt0.c0)))) WHERE (((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))AND(vt0.c0)))OR(rt0.c1)))/((rt0.c3 IN (rt0.c2))))) ORDER BY (NOT (CASE WHEN rt0.c2 THEN rt0.c0 END))  NULLS LAST, LIKELY(x'') DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))AND(vt0.c0)))OR(rt0.c1)))/((rt0.c3 IN (rt0.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ABS((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, NULL, vt0.c0)))) ORDER BY (NOT (CASE WHEN rt0.c2 THEN rt0.c0 END))  NULLS LAST, LIKELY(x'') DESC  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ABS((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, NULL, vt0.c0)))) WHERE (((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))AND(vt0.c0)))OR(rt0.c1)))/((rt0.c3 IN (rt0.c2))))) ORDER BY (NOT (CASE WHEN rt0.c2 THEN rt0.c0 END))  NULLS LAST, LIKELY(x'') DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))AND(vt0.c0)))OR(rt0.c1)))/((rt0.c3 IN (rt0.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ABS((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, NULL, vt0.c0)))) ORDER BY (NOT (CASE WHEN rt0.c2 THEN rt0.c0 END))  NULLS LAST, LIKELY(x'') DESC  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ABS((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, NULL, vt0.c0)))) WHERE (((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))AND(vt0.c0)))OR(rt0.c1)))/((rt0.c3 IN (rt0.c2))))) ORDER BY (NOT (CASE WHEN rt0.c2 THEN rt0.c0 END))  NULLS LAST, LIKELY(x'') DESC  NULLS LAST;
SELECT * FROM vt0, rt0, v0 WHERE ((((rt0.c2 COLLATE RTRIM))=(((((rt0.c2)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) ORDER BY 0.020068226151526702 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 COLLATE RTRIM))==(((((rt0.c2)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY 0.020068226151526702 DESC  NULLS LAST);
SELECT * FROM vt0, rt0, v0 WHERE ((((rt0.c2 COLLATE RTRIM))=(((((rt0.c2)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) ORDER BY 0.020068226151526702 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 COLLATE RTRIM))==(((((rt0.c2)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY 0.020068226151526702 DESC  NULLS LAST);
SELECT * FROM vt0, rt0, v0 WHERE ((((rt0.c2 COLLATE RTRIM))=(((((rt0.c2)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) ORDER BY 0.020068226151526702 DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((rt0.c0)%(((0.18403679317129473)<=(0x61877876)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)%(((0.18403679317129473)<=(0X61877876))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)%(((0.18403679317129473)<=(0x61877876)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)%(((0.18403679317129473)<=(0X61877876))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)%(((0.18403679317129473)<=(0x61877876)))));
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON (+ ((v0.c0 IN ()))) WHERE (CASE WHEN ((v0.c0)>(v0.c0)) THEN ((vt0.c0)==(vt0.c0)) ELSE CASE WHEN vt0.c0 THEN v0.c0 END END) ORDER BY ((((v0.c0)-(v0.c0))) BETWEEN ((((v0.c0, x'', v0.c0))<((v0.c0, vt0.c0, v0.c0)))) AND ((((vt0.c0))!=((vt0.c0))))), ((((((vt0.c0)AND(vt0.c0)))AND(v0.c0))) BETWEEN ((v0.c0 IN (vt0.c0))) AND (((x'28bd') IS FALSE)))  NULLS FIRST, (x'' IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)>(v0.c0)) THEN ((vt0.c0)==(vt0.c0)) ELSE CASE WHEN vt0.c0 THEN v0.c0 END END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (+ ((v0.c0 IN ()))) ORDER BY ((((v0.c0)-(v0.c0))) BETWEEN ((((v0.c0, x'', v0.c0))<((v0.c0, vt0.c0, v0.c0)))) AND ((((vt0.c0))<>((vt0.c0))))), ((((((vt0.c0)AND(vt0.c0)))AND(v0.c0))) BETWEEN ((v0.c0 IN (vt0.c0))) AND (((x'28bd') IS FALSE)))  NULLS FIRST, (x'' IN ())  NULLS LAST);
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON (+ ((v0.c0 IN ()))) WHERE (CASE WHEN ((v0.c0)>(v0.c0)) THEN ((vt0.c0)==(vt0.c0)) ELSE CASE WHEN vt0.c0 THEN v0.c0 END END) ORDER BY ((((v0.c0)-(v0.c0))) BETWEEN ((((v0.c0, x'', v0.c0))<((v0.c0, vt0.c0, v0.c0)))) AND ((((vt0.c0))!=((vt0.c0))))), ((((((vt0.c0)AND(vt0.c0)))AND(v0.c0))) BETWEEN ((v0.c0 IN (vt0.c0))) AND (((x'28bd') IS FALSE)))  NULLS FIRST, (x'' IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)>(v0.c0)) THEN ((vt0.c0)==(vt0.c0)) ELSE CASE WHEN vt0.c0 THEN v0.c0 END END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (+ ((v0.c0 IN ()))) ORDER BY ((((v0.c0)-(v0.c0))) BETWEEN ((((v0.c0, x'', v0.c0))<((v0.c0, vt0.c0, v0.c0)))) AND ((((vt0.c0))<>((vt0.c0))))), ((((((vt0.c0)AND(vt0.c0)))AND(v0.c0))) BETWEEN ((v0.c0 IN (vt0.c0))) AND (((x'28bd') IS FALSE)))  NULLS FIRST, (x'' IN ())  NULLS LAST);
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON (+ ((v0.c0 IN ()))) WHERE (CASE WHEN ((v0.c0)>(v0.c0)) THEN ((vt0.c0)==(vt0.c0)) ELSE CASE WHEN vt0.c0 THEN v0.c0 END END) ORDER BY ((((v0.c0)-(v0.c0))) BETWEEN ((((v0.c0, x'', v0.c0))<((v0.c0, vt0.c0, v0.c0)))) AND ((((vt0.c0))!=((vt0.c0))))), ((((((vt0.c0)AND(vt0.c0)))AND(v0.c0))) BETWEEN ((v0.c0 IN (vt0.c0))) AND (((x'28bd') IS FALSE)))  NULLS FIRST, (x'' IN ())  NULLS LAST;
SELECT ALL * FROM rt0, vt0, v0 WHERE (CASE WHEN (('Z85pr0?3w')AND(rt0.c0)) THEN CAST(rt0.c1 AS BLOB) END) ORDER BY ((((((v0.c0)AND(rt0.c0)))AND(v0.c0)))|(LIKELIHOOD(rt0.c3, 0.75648528212286)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('Z85pr0?3w')AND(rt0.c0)) THEN CAST(rt0.c1 AS BLOB) END) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((((v0.c0)AND(rt0.c0)))AND(v0.c0)))|(LIKELIHOOD(rt0.c3, 0.75648528212286)))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, v0 WHERE (CASE WHEN (('Z85pr0?3w')AND(rt0.c0)) THEN CAST(rt0.c1 AS BLOB) END) ORDER BY ((((((v0.c0)AND(rt0.c0)))AND(v0.c0)))|(LIKELIHOOD(rt0.c3, 0.75648528212286)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('Z85pr0?3w')AND(rt0.c0)) THEN CAST(rt0.c1 AS BLOB) END) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((((v0.c0)AND(rt0.c0)))AND(v0.c0)))|(LIKELIHOOD(rt0.c3, 0.75648528212286)))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, v0 WHERE (CASE WHEN (('Z85pr0?3w')AND(rt0.c0)) THEN CAST(rt0.c1 AS BLOB) END) ORDER BY ((((((v0.c0)AND(rt0.c0)))AND(v0.c0)))|(LIKELIHOOD(rt0.c3, 0.75648528212286)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (NULL);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((v0.c0) IS TRUE) COLLATE BINARY COLLATE BINARY WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((v0.c0) IS TRUE) COLLATE BINARY COLLATE BINARY);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((v0.c0) IS TRUE) COLLATE BINARY COLLATE BINARY WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((v0.c0) IS TRUE) COLLATE BINARY COLLATE BINARY);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((v0.c0) IS TRUE) COLLATE BINARY COLLATE BINARY WHERE (vt0.c0);
SELECT * FROM rt0, vt0 WHERE (LTRIM('-1651458875', rt0.c3) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((LTRIM('-1651458875', rt0.c3) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (LTRIM('-1651458875', rt0.c3) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((LTRIM('-1651458875', rt0.c3) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (LTRIM('-1651458875', rt0.c3) COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c3 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c0 THEN rt0.c3 END AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c3 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c0 THEN rt0.c3 END AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c3 END AS BLOB));
SELECT ALL * FROM v0 WHERE ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ())) ORDER BY ((((((((((v0.c0) IS FALSE))AND(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))AND(SQLITE_COMPILEOPTION_USED(v0.c0))))OR(CAST(v0.c0 AS INTEGER))))OR((v0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0) IS FALSE))AND(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))AND(SQLITE_COMPILEOPTION_USED(v0.c0))))OR(CAST(v0.c0 AS INTEGER))))OR((v0.c0 IN ()))) DESC);
SELECT ALL * FROM v0 WHERE ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ())) ORDER BY ((((((((((v0.c0) IS FALSE))AND(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))AND(SQLITE_COMPILEOPTION_USED(v0.c0))))OR(CAST(v0.c0 AS INTEGER))))OR((v0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0) IS FALSE))AND(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))AND(SQLITE_COMPILEOPTION_USED(v0.c0))))OR(CAST(v0.c0 AS INTEGER))))OR((v0.c0 IN ()))) DESC);
SELECT ALL * FROM v0 WHERE ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ())) ORDER BY ((((((((((v0.c0) IS FALSE))AND(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))AND(SQLITE_COMPILEOPTION_USED(v0.c0))))OR(CAST(v0.c0 AS INTEGER))))OR((v0.c0 IN ()))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((json_quote(vt0.c0))<=(((vt0.c0)||(vt0.c0))))) ORDER BY CAST((((vt0.c0))>=((vt0.c0))) AS BLOB) ASC  NULLS FIRST, 0.9575954545048185 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_quote(vt0.c0))<=(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0))>=((vt0.c0))) AS BLOB) ASC  NULLS FIRST, 0.9575954545048185 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((json_quote(vt0.c0))<=(((vt0.c0)||(vt0.c0))))) ORDER BY CAST((((vt0.c0))>=((vt0.c0))) AS BLOB) ASC  NULLS FIRST, 0.9575954545048185 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_quote(vt0.c0))<=(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0))>=((vt0.c0))) AS BLOB) ASC  NULLS FIRST, 0.9575954545048185 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((json_quote(vt0.c0))<=(((vt0.c0)||(vt0.c0))))) ORDER BY CAST((((vt0.c0))>=((vt0.c0))) AS BLOB) ASC  NULLS FIRST, 0.9575954545048185 ASC  NULLS FIRST;
SELECT * FROM vt0, rt0, v0 WHERE (rt0.c2) ORDER BY (((v0.c0, x'', rt0.c3)) BETWEEN ((CHANGES(), ((rt0.c2)IS(rt0.c0)), vt0.c0)) AND ((HEX(DISTINCT rt0.c1), (NOT (rt0.c3)), LAST_INSERT_ROWID()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((v0.c0, x'', rt0.c3)) BETWEEN ((CHANGES(), ((rt0.c2)IS(rt0.c0)), vt0.c0)) AND ((HEX(DISTINCT rt0.c1), (NOT (rt0.c3)), LAST_INSERT_ROWID()))) ASC);
SELECT * FROM vt0, rt0, v0 WHERE (rt0.c2) ORDER BY (((v0.c0, x'', rt0.c3)) BETWEEN ((CHANGES(), ((rt0.c2)IS(rt0.c0)), vt0.c0)) AND ((HEX(DISTINCT rt0.c1), (NOT (rt0.c3)), LAST_INSERT_ROWID()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((v0.c0, x'', rt0.c3)) BETWEEN ((CHANGES(), ((rt0.c2)IS(rt0.c0)), vt0.c0)) AND ((HEX(DISTINCT rt0.c1), (NOT (rt0.c3)), LAST_INSERT_ROWID()))) ASC);
SELECT * FROM vt0, rt0, v0 WHERE (rt0.c2) ORDER BY (((v0.c0, x'', rt0.c3)) BETWEEN ((CHANGES(), ((rt0.c2)IS(rt0.c0)), vt0.c0)) AND ((HEX(DISTINCT rt0.c1), (NOT (rt0.c3)), LAST_INSERT_ROWID()))) ASC;
SELECT * FROM rt0 WHERE (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE BINARY);
SELECT ALL * FROM v0, vt0 WHERE (0.7151075431349124) ORDER BY (((((vt0.c0 IN (vt0.c0)))AND(((((((((v0.c0)OR(0.16276791023790493)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))))AND(v0.c0 COLLATE BINARY)) ASC  NULLS FIRST, ((LIKELIHOOD(v0.c0, 0.1961230353396023)) IS FALSE);
SELECT SUM(count) FROM (SELECT ((0.7151075431349124) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((vt0.c0 IN (vt0.c0)))AND(((((((((v0.c0)OR(0.16276791023790493)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))))AND(v0.c0 COLLATE BINARY)) ASC  NULLS FIRST, ((LIKELIHOOD(v0.c0, 0.1961230353396023)) IS FALSE));
SELECT ALL * FROM v0, vt0 WHERE (0.7151075431349124) ORDER BY (((((vt0.c0 IN (vt0.c0)))AND(((((((((v0.c0)OR(0.16276791023790493)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))))AND(v0.c0 COLLATE BINARY)) ASC  NULLS FIRST, ((LIKELIHOOD(v0.c0, 0.1961230353396023)) IS FALSE);
SELECT SUM(count) FROM (SELECT ((0.7151075431349124) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((vt0.c0 IN (vt0.c0)))AND(((((((((v0.c0)OR(0.16276791023790493)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))))AND(v0.c0 COLLATE BINARY)) ASC  NULLS FIRST, ((LIKELIHOOD(v0.c0, 0.1961230353396023)) IS FALSE));
SELECT ALL * FROM v0, vt0 WHERE (0.7151075431349124) ORDER BY (((((vt0.c0 IN (vt0.c0)))AND(((((((((v0.c0)OR(0.16276791023790493)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))))AND(v0.c0 COLLATE BINARY)) ASC  NULLS FIRST, ((LIKELIHOOD(v0.c0, 0.1961230353396023)) IS FALSE);
SELECT * FROM vt0 WHERE (((vt0.c0)IS NOT(CAST(vt0.c0 AS BLOB)))) ORDER BY ((((vt0.c0)>(vt0.c0)))IS(((0.0187041195966281) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS NOT(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>(vt0.c0)))IS(((0.0187041195966281) NOTNULL))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0)IS NOT(CAST(vt0.c0 AS BLOB)))) ORDER BY ((((vt0.c0)>(vt0.c0)))IS(((0.0187041195966281) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS NOT(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>(vt0.c0)))IS(((0.0187041195966281) NOTNULL))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0)IS NOT(CAST(vt0.c0 AS BLOB)))) ORDER BY ((((vt0.c0)>(vt0.c0)))IS(((0.0187041195966281) NOTNULL))) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0, v0 WHERE (-1937471943) ORDER BY (((rt0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))) AND ((((((((((v0.c0)OR(rt0.c1)))OR(v0.c0)))OR(rt0.c1)))OR(rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-1937471943) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((rt0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))) AND ((((((((((v0.c0)OR(rt0.c1)))OR(v0.c0)))OR(rt0.c1)))OR(rt0.c1)))))  NULLS FIRST);
SELECT * FROM rt0, vt0, v0 WHERE (-1937471943) ORDER BY (((rt0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))) AND ((((((((((v0.c0)OR(rt0.c1)))OR(v0.c0)))OR(rt0.c1)))OR(rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-1937471943) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((rt0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))) AND ((((((((((v0.c0)OR(rt0.c1)))OR(v0.c0)))OR(rt0.c1)))OR(rt0.c1)))))  NULLS FIRST);
SELECT * FROM rt0, vt0, v0 WHERE (-1937471943) ORDER BY (((rt0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))) AND ((((((((((v0.c0)OR(rt0.c1)))OR(v0.c0)))OR(rt0.c1)))OR(rt0.c1)))))  NULLS FIRST;
SELECT * FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN (((v0.c0)+(v0.c0))) AND (CAST(v0.c0 AS TEXT)))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN (((v0.c0)+(v0.c0))) AND (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY NULL DESC);
SELECT * FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN (((v0.c0)+(v0.c0))) AND (CAST(v0.c0 AS TEXT)))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN (((v0.c0)+(v0.c0))) AND (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY NULL DESC);
SELECT * FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN (((v0.c0)+(v0.c0))) AND (CAST(v0.c0 AS TEXT)))) ORDER BY NULL DESC;
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON v0.c0 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON v0.c0);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON v0.c0 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON v0.c0);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON v0.c0 WHERE ((+ (NULL)));
SELECT COUNT(*) FROM vt0 WHERE ((- (NULL))) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE ((- (NULL))) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE ((- (NULL))) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM;
SELECT COUNT(*) FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN NULL ELSE '0.1549313660288345' END IN ())) ORDER BY ((NULL) NOT BETWEEN ((v0.c0 IN (v0.c0))) AND ((((v0.c0))>((v0.c0))))) DESC  NULLS LAST, '2006802562' ASC;
SELECT SUM(count) FROM (SELECT (((CASE v0.c0  WHEN v0.c0 THEN NULL ELSE '0.1549313660288345' END IN ())) IS TRUE)  as count FROM v0 ORDER BY ((NULL) NOT BETWEEN ((v0.c0 IN (v0.c0))) AND ((((v0.c0))>((v0.c0))))) DESC  NULLS LAST, '2006802562' ASC);
SELECT COUNT(*) FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN NULL ELSE '0.1549313660288345' END IN ())) ORDER BY ((NULL) NOT BETWEEN ((v0.c0 IN (v0.c0))) AND ((((v0.c0))>((v0.c0))))) DESC  NULLS LAST, '2006802562' ASC;
SELECT SUM(count) FROM (SELECT (((CASE v0.c0  WHEN v0.c0 THEN NULL ELSE '0.1549313660288345' END IN ())) IS TRUE)  as count FROM v0 ORDER BY ((NULL) NOT BETWEEN ((v0.c0 IN (v0.c0))) AND ((((v0.c0))>((v0.c0))))) DESC  NULLS LAST, '2006802562' ASC);
SELECT COUNT(*) FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN NULL ELSE '0.1549313660288345' END IN ())) ORDER BY ((NULL) NOT BETWEEN ((v0.c0 IN (v0.c0))) AND ((((v0.c0))>((v0.c0))))) DESC  NULLS LAST, '2006802562' ASC;
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c3)) AND ((rt0.c3, rt0.c3, v0.c0))))IS NOT((((rt0.c1)) NOT BETWEEN ((0.5412989210729061)) AND ((rt0.c3)))))) ORDER BY ((rt0.c1)||(v0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c3)) AND ((rt0.c3, rt0.c3, v0.c0))))IS NOT((((rt0.c1)) NOT BETWEEN ((0.5412989210729061)) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((rt0.c1)||(v0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c3)) AND ((rt0.c3, rt0.c3, v0.c0))))IS NOT((((rt0.c1)) NOT BETWEEN ((0.5412989210729061)) AND ((rt0.c3)))))) ORDER BY ((rt0.c1)||(v0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c3)) AND ((rt0.c3, rt0.c3, v0.c0))))IS NOT((((rt0.c1)) NOT BETWEEN ((0.5412989210729061)) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((rt0.c1)||(v0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c3)) AND ((rt0.c3, rt0.c3, v0.c0))))IS NOT((((rt0.c1)) NOT BETWEEN ((0.5412989210729061)) AND ((rt0.c3)))))) ORDER BY ((rt0.c1)||(v0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN 2042588957 WHEN ((vt0.c0)/(vt0.c0)) THEN ((vt0.c0)<=(vt0.c0)) WHEN vt0.c0 THEN (- (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN 2042588957 WHEN ((vt0.c0)/(vt0.c0)) THEN ((vt0.c0)<=(vt0.c0)) WHEN vt0.c0 THEN (- (vt0.c0)) END);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN 2042588957 WHEN ((vt0.c0)/(vt0.c0)) THEN ((vt0.c0)<=(vt0.c0)) WHEN vt0.c0 THEN (- (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN 2042588957 WHEN ((vt0.c0)/(vt0.c0)) THEN ((vt0.c0)<=(vt0.c0)) WHEN vt0.c0 THEN (- (vt0.c0)) END);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN 2042588957 WHEN ((vt0.c0)/(vt0.c0)) THEN ((vt0.c0)<=(vt0.c0)) WHEN vt0.c0 THEN (- (vt0.c0)) END;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c0, rt0.c3, rt0.c2))<((rt0.c1, rt0.c0, rt0.c2))))LIKE(((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt0.c3, rt0.c2))<((rt0.c1, rt0.c0, rt0.c2))))LIKE(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c0, rt0.c3, rt0.c2))<((rt0.c1, rt0.c0, rt0.c2))))LIKE(((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt0.c3, rt0.c2))<((rt0.c1, rt0.c0, rt0.c2))))LIKE(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c0, rt0.c3, rt0.c2))<((rt0.c1, rt0.c0, rt0.c2))))LIKE(((rt0.c1) NOTNULL))));
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c0) NOTNULL)) BETWEEN ((rt0.c1 IN (x''))) AND (((rt0.c3) NOTNULL)))) ORDER BY CAST(((rt0.c1) ISNULL) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOTNULL)) BETWEEN ((rt0.c1 IN (x''))) AND (((rt0.c3) NOTNULL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((rt0.c1) ISNULL) AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c0) NOTNULL)) BETWEEN ((rt0.c1 IN (x''))) AND (((rt0.c3) NOTNULL)))) ORDER BY CAST(((rt0.c1) ISNULL) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOTNULL)) BETWEEN ((rt0.c1 IN (x''))) AND (((rt0.c3) NOTNULL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((rt0.c1) ISNULL) AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c0) NOTNULL)) BETWEEN ((rt0.c1 IN (x''))) AND (((rt0.c3) NOTNULL)))) ORDER BY CAST(((rt0.c1) ISNULL) AS NUMERIC)  NULLS LAST;
SELECT * FROM rt0, v0, vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN (~ (rt0.c1)) WHEN CASE v0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END THEN CASE vt0.c0  WHEN v0.c0 THEN rt0.c1 END WHEN CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END THEN v0.c0 WHEN 0.5292471396416071 COLLATE BINARY THEN CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN NULL END WHEN (+ (rt0.c3)) THEN (NOT (rt0.c2)) END) ORDER BY (NOT (rt0.c3)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE BINARY THEN (~ (rt0.c1)) WHEN CASE v0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END THEN CASE vt0.c0  WHEN v0.c0 THEN rt0.c1 END WHEN CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END THEN v0.c0 WHEN 0.5292471396416071 COLLATE BINARY THEN CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN NULL END WHEN (+ (rt0.c3)) THEN (NOT (rt0.c2)) END) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (NOT (rt0.c3)) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM rt0, v0, vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN (~ (rt0.c1)) WHEN CASE v0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END THEN CASE vt0.c0  WHEN v0.c0 THEN rt0.c1 END WHEN CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END THEN v0.c0 WHEN 0.5292471396416071 COLLATE BINARY THEN CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN NULL END WHEN (+ (rt0.c3)) THEN (NOT (rt0.c2)) END) ORDER BY (NOT (rt0.c3)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE BINARY THEN (~ (rt0.c1)) WHEN CASE v0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END THEN CASE vt0.c0  WHEN v0.c0 THEN rt0.c1 END WHEN CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END THEN v0.c0 WHEN 0.5292471396416071 COLLATE BINARY THEN CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN NULL END WHEN (+ (rt0.c3)) THEN (NOT (rt0.c2)) END) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (NOT (rt0.c3)) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM rt0, v0, vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN (~ (rt0.c1)) WHEN CASE v0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END THEN CASE vt0.c0  WHEN v0.c0 THEN rt0.c1 END WHEN CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END THEN v0.c0 WHEN 0.5292471396416071 COLLATE BINARY THEN CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN NULL END WHEN (+ (rt0.c3)) THEN (NOT (rt0.c2)) END) ORDER BY (NOT (rt0.c3)) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((vt0.c0)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)))) AND ((TRIM(DISTINCT x'a8f0')))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)))) AND ((TRIM(DISTINCT x'a8f0'))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((vt0.c0)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)))) AND ((TRIM(DISTINCT x'a8f0')))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)))) AND ((TRIM(DISTINCT x'a8f0'))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((vt0.c0)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)))) AND ((TRIM(DISTINCT x'a8f0')))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0)<=(((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)<=(((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0)<=(((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)<=(((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0)<=(((rt0.c2) NOT NULL))));
SELECT * FROM v0, rt0 WHERE ((((+ (rt0.c2)))+('2006802562')));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2)))+('2006802562'))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((+ (rt0.c2)))+('2006802562')));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2)))+('2006802562'))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((+ (rt0.c2)))+('2006802562')));
SELECT COUNT(*) FROM v0, vt0 WHERE (((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (CAST(v0.c0 AS BLOB)) AND ((v0.c0 IN ('803948949')))));
SELECT SUM(count) FROM (SELECT ((((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (CAST(v0.c0 AS BLOB)) AND ((v0.c0 IN ('803948949'))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (CAST(v0.c0 AS BLOB)) AND ((v0.c0 IN ('803948949')))));
SELECT SUM(count) FROM (SELECT ((((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (CAST(v0.c0 AS BLOB)) AND ((v0.c0 IN ('803948949'))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (CAST(v0.c0 AS BLOB)) AND ((v0.c0 IN ('803948949')))));
SELECT * FROM v0 WHERE ((((((('0.9430513872189399')OR('2x!脠磫')))AND(v0.c0))) BETWEEN (((v0.c0)<<(v0.c0))) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ORDER BY (v0.c0 IN (((((v0.c0)OR(v0.c0)))OR(0.6178284126581056)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((('0.9430513872189399')OR('2x!脠磫')))AND(v0.c0))) BETWEEN (((v0.c0)<<(v0.c0))) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 IN (((((v0.c0)OR(v0.c0)))OR(0.6178284126581056)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC);
SELECT * FROM v0 WHERE ((((((('0.9430513872189399')OR('2x!脠磫')))AND(v0.c0))) BETWEEN (((v0.c0)<<(v0.c0))) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ORDER BY (v0.c0 IN (((((v0.c0)OR(v0.c0)))OR(0.6178284126581056)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((('0.9430513872189399')OR('2x!脠磫')))AND(v0.c0))) BETWEEN (((v0.c0)<<(v0.c0))) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 IN (((((v0.c0)OR(v0.c0)))OR(0.6178284126581056)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC);
SELECT * FROM v0 WHERE ((((((('0.9430513872189399')OR('2x!脠磫')))AND(v0.c0))) BETWEEN (((v0.c0)<<(v0.c0))) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ORDER BY (v0.c0 IN (((((v0.c0)OR(v0.c0)))OR(0.6178284126581056)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC;
SELECT * FROM v0, rt0, vt0 WHERE ((((('')+(rt0.c2)))GLOB(((((((((v0.c0)OR(rt0.c1)))AND(v0.c0)))AND(rt0.c0)))OR(rt0.c2))))) ORDER BY ((((rt0.c3)>=(rt0.c0)))LIKE(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) DESC  NULLS FIRST, CAST((~ (v0.c0)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('')+(rt0.c2)))GLOB(((((((((v0.c0)OR(rt0.c1)))AND(v0.c0)))AND(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((rt0.c3)>=(rt0.c0)))LIKE(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) DESC  NULLS FIRST, CAST((~ (v0.c0)) AS BLOB) DESC  NULLS LAST);
SELECT * FROM v0, rt0, vt0 WHERE ((((('')+(rt0.c2)))GLOB(((((((((v0.c0)OR(rt0.c1)))AND(v0.c0)))AND(rt0.c0)))OR(rt0.c2))))) ORDER BY ((((rt0.c3)>=(rt0.c0)))LIKE(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) DESC  NULLS FIRST, CAST((~ (v0.c0)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('')+(rt0.c2)))GLOB(((((((((v0.c0)OR(rt0.c1)))AND(v0.c0)))AND(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((rt0.c3)>=(rt0.c0)))LIKE(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) DESC  NULLS FIRST, CAST((~ (v0.c0)) AS BLOB) DESC  NULLS LAST);
SELECT * FROM v0, rt0, vt0 WHERE ((((('')+(rt0.c2)))GLOB(((((((((v0.c0)OR(rt0.c1)))AND(v0.c0)))AND(rt0.c0)))OR(rt0.c2))))) ORDER BY ((((rt0.c3)>=(rt0.c0)))LIKE(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) DESC  NULLS FIRST, CAST((~ (v0.c0)) AS BLOB) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0) IS TRUE) IN ())) ORDER BY ((CAST(v0.c0 AS INTEGER))<((- (v0.c0))))  NULLS LAST, ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS NOT(((v0.c0) IS FALSE))) DESC, ((((-9.9860286E7)>>(v0.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS INTEGER))<((- (v0.c0))))  NULLS LAST, ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS NOT(((v0.c0) IS FALSE))) DESC, ((((-9.9860286E7)>>(v0.c0))) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0) IS TRUE) IN ())) ORDER BY ((CAST(v0.c0 AS INTEGER))<((- (v0.c0))))  NULLS LAST, ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS NOT(((v0.c0) IS FALSE))) DESC, ((((-9.9860286E7)>>(v0.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS INTEGER))<((- (v0.c0))))  NULLS LAST, ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS NOT(((v0.c0) IS FALSE))) DESC, ((((-9.9860286E7)>>(v0.c0))) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0) IS TRUE) IN ())) ORDER BY ((CAST(v0.c0 AS INTEGER))<((- (v0.c0))))  NULLS LAST, ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS NOT(((v0.c0) IS FALSE))) DESC, ((((-9.9860286E7)>>(v0.c0))) IS FALSE) ASC;
SELECT * FROM rt0 WHERE (0.7497177611081541);
SELECT SUM(count) FROM (SELECT ((0.7497177611081541) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (0.7497177611081541);
SELECT SUM(count) FROM (SELECT ((0.7497177611081541) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (0.7497177611081541);
SELECT COUNT(*) FROM rt0, v0 WHERE ((NOT (((v0.c0) ISNULL)))) ORDER BY CASE WHEN SQLITE_VERSION() THEN ((rt0.c0)GLOB(x'')) WHEN ((x'e54b') NOTNULL) THEN CAST(NULL AS TEXT) WHEN ((rt0.c2)|(rt0.c0)) THEN (x'' IN (rt0.c3, rt0.c2)) ELSE rt0.c2 COLLATE BINARY END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0) ISNULL)))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN SQLITE_VERSION() THEN ((rt0.c0)GLOB(x'')) WHEN ((x'e54b') NOTNULL) THEN CAST(NULL AS TEXT) WHEN ((rt0.c2)|(rt0.c0)) THEN (x'' IN (rt0.c3, rt0.c2)) ELSE rt0.c2 COLLATE BINARY END ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((NOT (((v0.c0) ISNULL)))) ORDER BY CASE WHEN SQLITE_VERSION() THEN ((rt0.c0)GLOB(x'')) WHEN ((x'e54b') NOTNULL) THEN CAST(NULL AS TEXT) WHEN ((rt0.c2)|(rt0.c0)) THEN (x'' IN (rt0.c3, rt0.c2)) ELSE rt0.c2 COLLATE BINARY END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0) ISNULL)))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN SQLITE_VERSION() THEN ((rt0.c0)GLOB(x'')) WHEN ((x'e54b') NOTNULL) THEN CAST(NULL AS TEXT) WHEN ((rt0.c2)|(rt0.c0)) THEN (x'' IN (rt0.c3, rt0.c2)) ELSE rt0.c2 COLLATE BINARY END ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((NOT (((v0.c0) ISNULL)))) ORDER BY CASE WHEN SQLITE_VERSION() THEN ((rt0.c0)GLOB(x'')) WHEN ((x'e54b') NOTNULL) THEN CAST(NULL AS TEXT) WHEN ((rt0.c2)|(rt0.c0)) THEN (x'' IN (rt0.c3, rt0.c2)) ELSE rt0.c2 COLLATE BINARY END ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (((v0.c0)IS(v0.c0))) AND ((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (((v0.c0)IS(v0.c0))) AND ((NOT (v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (((v0.c0)IS(v0.c0))) AND ((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (((v0.c0)IS(v0.c0))) AND ((NOT (v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (((v0.c0)IS(v0.c0))) AND ((NOT (v0.c0)))));
SELECT ALL * FROM v0, vt0, rt0 WHERE (CAST(((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (CAST(((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (CAST(((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)) AS BLOB));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (CAST(rt0.c3 AS INTEGER) IN ()) WHERE ((((((rt0.c2))<=((v0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))<=((v0.c0)))) NOTNULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (CAST(rt0.c3 AS INTEGER) IN ()));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (CAST(rt0.c3 AS INTEGER) IN ()) WHERE ((((((rt0.c2))<=((v0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))<=((v0.c0)))) NOTNULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (CAST(rt0.c3 AS INTEGER) IN ()));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (CAST(rt0.c3 AS INTEGER) IN ()) WHERE ((((((rt0.c2))<=((v0.c0)))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS NUMERIC))));
SELECT * FROM rt0 CROSS JOIN vt0 ON (((rt0.c3)) BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END))) WHERE (((CAST(0.1622475799850971 AS NUMERIC))IS NOT('791908458')));
SELECT SUM(count) FROM (SELECT ((((CAST(0.1622475799850971 AS NUMERIC))IS NOT('791908458'))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((rt0.c3)) BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END))));
SELECT * FROM rt0 CROSS JOIN vt0 ON (((rt0.c3)) BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END))) WHERE (((CAST(0.1622475799850971 AS NUMERIC))IS NOT('791908458')));
SELECT SUM(count) FROM (SELECT ((((CAST(0.1622475799850971 AS NUMERIC))IS NOT('791908458'))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((rt0.c3)) BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END))));
SELECT * FROM rt0 CROSS JOIN vt0 ON (((rt0.c3)) BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END))) WHERE (((CAST(0.1622475799850971 AS NUMERIC))IS NOT('791908458')));
SELECT COUNT(*) FROM rt0 WHERE (LENGTH((((rt0.c3))>((rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((LENGTH((((rt0.c3))>((rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (LENGTH((((rt0.c3))>((rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((LENGTH((((rt0.c3))>((rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (LENGTH((((rt0.c3))>((rt0.c3)))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((v0.c0) ISNULL))LIKE(((rt0.c0)AND(rt0.c0)))) RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE NOCASE)>=(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))) WHERE (CAST(x'' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((v0.c0) ISNULL))LIKE(((rt0.c0)AND(rt0.c0)))) RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE NOCASE)>=(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((v0.c0) ISNULL))LIKE(((rt0.c0)AND(rt0.c0)))) RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE NOCASE)>=(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))) WHERE (CAST(x'' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((v0.c0) ISNULL))LIKE(((rt0.c0)AND(rt0.c0)))) RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE NOCASE)>=(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))));
SELECT * FROM v0 WHERE ((((v0.c0 IN ()))<=(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '1846801500' WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))<=(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '1846801500' WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 IN ()))<=(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '1846801500' WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))<=(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '1846801500' WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 IN ()))<=(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '1846801500' WHEN v0.c0 THEN v0.c0 END)));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON ((x'') IS FALSE) COLLATE BINARY FULL OUTER JOIN vt0 ON rt0.c0 COLLATE NOCASE WHERE (((((0Xfffffffff18d6adc)<(v0.c0)))=(((rt0.c3)+(x'39f7')))));
SELECT SUM(count) FROM (SELECT ALL ((((((0Xfffffffff18d6adc)<(v0.c0)))==(((rt0.c3)+(x'39f7'))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((x'') IS FALSE) COLLATE BINARY FULL OUTER JOIN vt0 ON rt0.c0 COLLATE NOCASE);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON ((x'') IS FALSE) COLLATE BINARY FULL OUTER JOIN vt0 ON rt0.c0 COLLATE NOCASE WHERE (((((0Xfffffffff18d6adc)<(v0.c0)))=(((rt0.c3)+(x'39f7')))));
SELECT SUM(count) FROM (SELECT ALL ((((((0Xfffffffff18d6adc)<(v0.c0)))==(((rt0.c3)+(x'39f7'))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((x'') IS FALSE) COLLATE BINARY FULL OUTER JOIN vt0 ON rt0.c0 COLLATE NOCASE);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON ((x'') IS FALSE) COLLATE BINARY FULL OUTER JOIN vt0 ON rt0.c0 COLLATE NOCASE WHERE (((((0Xfffffffff18d6adc)<(v0.c0)))=(((rt0.c3)+(x'39f7')))));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (json_quote(((rt0.c0) NOT NULL))) ORDER BY CASE WHEN ((rt0.c0)+('Qg\rOp9iUo')) THEN rt0.c1 ELSE ((rt0.c1) IS FALSE) END;
SELECT SUM(count) FROM (SELECT ALL ((json_quote(((rt0.c0) NOT NULL))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CASE WHEN ((rt0.c0)+('Qg\rOp9iUo')) THEN rt0.c1 ELSE ((rt0.c1) IS FALSE) END);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (json_quote(((rt0.c0) NOT NULL))) ORDER BY CASE WHEN ((rt0.c0)+('Qg\rOp9iUo')) THEN rt0.c1 ELSE ((rt0.c1) IS FALSE) END;
SELECT SUM(count) FROM (SELECT ALL ((json_quote(((rt0.c0) NOT NULL))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CASE WHEN ((rt0.c0)+('Qg\rOp9iUo')) THEN rt0.c1 ELSE ((rt0.c1) IS FALSE) END);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (json_quote(((rt0.c0) NOT NULL))) ORDER BY CASE WHEN ((rt0.c0)+('Qg\rOp9iUo')) THEN rt0.c1 ELSE ((rt0.c1) IS FALSE) END;
SELECT ALL * FROM rt0, vt0, v0 WHERE (json_type(v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((json_type(v0.c0)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (json_type(v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((json_type(v0.c0)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (json_type(v0.c0));
SELECT * FROM vt0, v0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.41853710601731764)) BETWEEN (IFNULL(DISTINCT vt0.c0, v0.c0)) AND (((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT vt0.c0, 0.41853710601731764)) BETWEEN (IFNULL(DISTINCT vt0.c0, v0.c0)) AND (((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.41853710601731764)) BETWEEN (IFNULL(DISTINCT vt0.c0, v0.c0)) AND (((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT vt0.c0, 0.41853710601731764)) BETWEEN (IFNULL(DISTINCT vt0.c0, v0.c0)) AND (((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.41853710601731764)) BETWEEN (IFNULL(DISTINCT vt0.c0, v0.c0)) AND (((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((+ ((((649906941)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((((((((CAST(vt0.c0 AS REAL))OR((NOT (x'')))))OR(ABS(DISTINCT '1142875521'))))OR(((vt0.c0)IS(vt0.c0)))))AND(((vt0.c0)<<(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((649906941)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CAST(vt0.c0 AS REAL))OR((NOT (x'')))))OR(ABS(DISTINCT '1142875521'))))OR(((vt0.c0)IS(vt0.c0)))))AND(((vt0.c0)<<(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((+ ((((649906941)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((((((((CAST(vt0.c0 AS REAL))OR((NOT (x'')))))OR(ABS(DISTINCT '1142875521'))))OR(((vt0.c0)IS(vt0.c0)))))AND(((vt0.c0)<<(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((649906941)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CAST(vt0.c0 AS REAL))OR((NOT (x'')))))OR(ABS(DISTINCT '1142875521'))))OR(((vt0.c0)IS(vt0.c0)))))AND(((vt0.c0)<<(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((+ ((((649906941)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((((((((CAST(vt0.c0 AS REAL))OR((NOT (x'')))))OR(ABS(DISTINCT '1142875521'))))OR(((vt0.c0)IS(vt0.c0)))))AND(((vt0.c0)<<(vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (rt0.c3) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY v0.c0 DESC);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (rt0.c3) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY v0.c0 DESC);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (rt0.c3) ORDER BY v0.c0 DESC;
SELECT * FROM rt0 WHERE ((((('yw')<<(rt0.c1)))||(rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((('yw')<<(rt0.c1)))||(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((('yw')<<(rt0.c1)))||(rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((('yw')<<(rt0.c1)))||(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((('yw')<<(rt0.c1)))||(rt0.c1 COLLATE BINARY)));
SELECT ALL * FROM vt0, v0, rt0 WHERE ((NOT (((x'b2bc') NOT NULL)))) ORDER BY ((x'') BETWEEN ((- (rt0.c2))) AND (vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((x'b2bc') NOT NULL)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((x'') BETWEEN ((- (rt0.c2))) AND (vt0.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((NOT (((x'b2bc') NOT NULL)))) ORDER BY ((x'') BETWEEN ((- (rt0.c2))) AND (vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((x'b2bc') NOT NULL)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((x'') BETWEEN ((- (rt0.c2))) AND (vt0.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((NOT (((x'b2bc') NOT NULL)))) ORDER BY ((x'') BETWEEN ((- (rt0.c2))) AND (vt0.c0)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN '-1105775740' THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END)) AND ((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END))) WHERE (-9.9860286E7);
SELECT SUM(count) FROM (SELECT ((-9.9860286E7) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN '-1105775740' THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END)) AND ((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END))));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN '-1105775740' THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END)) AND ((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END))) WHERE (-9.9860286E7);
SELECT SUM(count) FROM (SELECT ((-9.9860286E7) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN '-1105775740' THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END)) AND ((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END))));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN '-1105775740' THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END)) AND ((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END))) WHERE (-9.9860286E7);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CASE ((((rt0.c3)AND(vt0.c0)))AND(rt0.c3))  WHEN LIKELY(rt0.c0) THEN (~ (vt0.c0)) ELSE ((rt0.c1) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c3)AND(vt0.c0)))AND(rt0.c3))  WHEN LIKELY(rt0.c0) THEN (~ (vt0.c0)) ELSE ((rt0.c1) ISNULL) END) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CASE ((((rt0.c3)AND(vt0.c0)))AND(rt0.c3))  WHEN LIKELY(rt0.c0) THEN (~ (vt0.c0)) ELSE ((rt0.c1) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c3)AND(vt0.c0)))AND(rt0.c3))  WHEN LIKELY(rt0.c0) THEN (~ (vt0.c0)) ELSE ((rt0.c1) ISNULL) END) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CASE ((((rt0.c3)AND(vt0.c0)))AND(rt0.c3))  WHEN LIKELY(rt0.c0) THEN (~ (vt0.c0)) ELSE ((rt0.c1) ISNULL) END);
SELECT ALL * FROM rt0, v0 WHERE ((((rt0.c3) BETWEEN (rt0.c1) AND ('-1905643524')) IN (((rt0.c2)||(rt0.c0)), ((rt0.c0)||(rt0.c0))))) ORDER BY (((((((rt0.c0, v0.c0, rt0.c0, rt0.c1, v0.c0))<((rt0.c1, rt0.c3, rt0.c3, rt0.c3, rt0.c2))))OR(rt0.c3)))OR(((rt0.c2)+(rt0.c3)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) BETWEEN (rt0.c1) AND ('-1905643524')) IN (((rt0.c2)||(rt0.c0)), ((rt0.c0)||(rt0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((((rt0.c0, v0.c0, rt0.c0, rt0.c1, v0.c0))<((rt0.c1, rt0.c3, rt0.c3, rt0.c3, rt0.c2))))OR(rt0.c3)))OR(((rt0.c2)+(rt0.c3)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE ((((rt0.c3) BETWEEN (rt0.c1) AND ('-1905643524')) IN (((rt0.c2)||(rt0.c0)), ((rt0.c0)||(rt0.c0))))) ORDER BY (((((((rt0.c0, v0.c0, rt0.c0, rt0.c1, v0.c0))<((rt0.c1, rt0.c3, rt0.c3, rt0.c3, rt0.c2))))OR(rt0.c3)))OR(((rt0.c2)+(rt0.c3)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) BETWEEN (rt0.c1) AND ('-1905643524')) IN (((rt0.c2)||(rt0.c0)), ((rt0.c0)||(rt0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((((rt0.c0, v0.c0, rt0.c0, rt0.c1, v0.c0))<((rt0.c1, rt0.c3, rt0.c3, rt0.c3, rt0.c2))))OR(rt0.c3)))OR(((rt0.c2)+(rt0.c3)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE ((((rt0.c3) BETWEEN (rt0.c1) AND ('-1905643524')) IN (((rt0.c2)||(rt0.c0)), ((rt0.c0)||(rt0.c0))))) ORDER BY (((((((rt0.c0, v0.c0, rt0.c0, rt0.c1, v0.c0))<((rt0.c1, rt0.c3, rt0.c3, rt0.c3, rt0.c2))))OR(rt0.c3)))OR(((rt0.c2)+(rt0.c3)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE ((ABS(DISTINCT v0.c0) IN ())) ORDER BY ((((v0.c0) NOT NULL))<<((+ (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((ABS(DISTINCT v0.c0) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT NULL))<<((+ (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((ABS(DISTINCT v0.c0) IN ())) ORDER BY ((((v0.c0) NOT NULL))<<((+ (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((ABS(DISTINCT v0.c0) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT NULL))<<((+ (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((ABS(DISTINCT v0.c0) IN ())) ORDER BY ((((v0.c0) NOT NULL))<<((+ (v0.c0))));
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) IS TRUE))))AND(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) IS TRUE))))AND(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) IS TRUE))))AND(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) IS TRUE))))AND(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) IS TRUE))))AND(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM v0, rt0 FULL OUTER JOIN vt0 ON (((~ (rt0.c2)))LIKE((((v0.c0)) BETWEEN ((x'')) AND ((v0.c0))))) WHERE (LIKELY((rt0.c3 IN (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((rt0.c3 IN (rt0.c1)))) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN vt0 ON (((~ (rt0.c2)))LIKE((((v0.c0)) BETWEEN ((x'')) AND ((v0.c0))))));
SELECT COUNT(*) FROM v0, rt0 FULL OUTER JOIN vt0 ON (((~ (rt0.c2)))LIKE((((v0.c0)) BETWEEN ((x'')) AND ((v0.c0))))) WHERE (LIKELY((rt0.c3 IN (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((rt0.c3 IN (rt0.c1)))) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN vt0 ON (((~ (rt0.c2)))LIKE((((v0.c0)) BETWEEN ((x'')) AND ((v0.c0))))));
SELECT COUNT(*) FROM v0, rt0 FULL OUTER JOIN vt0 ON (((~ (rt0.c2)))LIKE((((v0.c0)) BETWEEN ((x'')) AND ((v0.c0))))) WHERE (LIKELY((rt0.c3 IN (rt0.c1))));
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c3)||(v0.c0))) NOT BETWEEN (((rt0.c1)|(rt0.c2))) AND (((0.763615030922575) NOT BETWEEN (rt0.c2) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)||(v0.c0))) NOT BETWEEN (((rt0.c1)|(rt0.c2))) AND (((0.763615030922575) NOT BETWEEN (rt0.c2) AND (v0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c3)||(v0.c0))) NOT BETWEEN (((rt0.c1)|(rt0.c2))) AND (((0.763615030922575) NOT BETWEEN (rt0.c2) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)||(v0.c0))) NOT BETWEEN (((rt0.c1)|(rt0.c2))) AND (((0.763615030922575) NOT BETWEEN (rt0.c2) AND (v0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c3)||(v0.c0))) NOT BETWEEN (((rt0.c1)|(rt0.c2))) AND (((0.763615030922575) NOT BETWEEN (rt0.c2) AND (v0.c0)))));
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((~ (rt0.c0))) BETWEEN (CASE vt0.c0  WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 END) AND ((rt0.c1 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c0))) BETWEEN (CASE vt0.c0  WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 END) AND ((rt0.c1 IN (rt0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((~ (rt0.c0))) BETWEEN (CASE vt0.c0  WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 END) AND ((rt0.c1 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c0))) BETWEEN (CASE vt0.c0  WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 END) AND ((rt0.c1 IN (rt0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((~ (rt0.c0))) BETWEEN (CASE vt0.c0  WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 END) AND ((rt0.c1 IN (rt0.c2)))));
SELECT ALL * FROM vt0 WHERE (((vt0.c0)+(vt0.c0 COLLATE BINARY))) ORDER BY ')⁺f%xxUr';
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)+(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY ')⁺f%xxUr');
SELECT ALL * FROM vt0 WHERE (((vt0.c0)+(vt0.c0 COLLATE BINARY))) ORDER BY ')⁺f%xxUr';
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)+(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY ')⁺f%xxUr');
SELECT ALL * FROM vt0 WHERE (((vt0.c0)+(vt0.c0 COLLATE BINARY))) ORDER BY ')⁺f%xxUr';
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(CASE WHEN x'1c11' THEN vt0.c0 END)))AND('b ' COLLATE BINARY))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(CASE WHEN x'1c11' THEN vt0.c0 END)))AND('b ' COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(CASE WHEN x'1c11' THEN vt0.c0 END)))AND('b ' COLLATE BINARY))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(CASE WHEN x'1c11' THEN vt0.c0 END)))AND('b ' COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(CASE WHEN x'1c11' THEN vt0.c0 END)))AND('b ' COLLATE BINARY))) ORDER BY NULL  NULLS FIRST;
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE ((((rt0.c0, v0.c0, rt0.c3)) BETWEEN ((TRIM(DISTINCT rt0.c0), ((rt0.c2)AND(rt0.c3)), (('649555198') NOT BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((0.28417937445091934 COLLATE BINARY, x'', (- (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, v0.c0, rt0.c3)) BETWEEN ((TRIM(DISTINCT rt0.c0), ((rt0.c2)AND(rt0.c3)), (('649555198') NOT BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((0.28417937445091934 COLLATE BINARY, x'', (- (rt0.c2)))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE ((((rt0.c0, v0.c0, rt0.c3)) BETWEEN ((TRIM(DISTINCT rt0.c0), ((rt0.c2)AND(rt0.c3)), (('649555198') NOT BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((0.28417937445091934 COLLATE BINARY, x'', (- (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, v0.c0, rt0.c3)) BETWEEN ((TRIM(DISTINCT rt0.c0), ((rt0.c2)AND(rt0.c3)), (('649555198') NOT BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((0.28417937445091934 COLLATE BINARY, x'', (- (rt0.c2)))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE ((((rt0.c0, v0.c0, rt0.c3)) BETWEEN ((TRIM(DISTINCT rt0.c0), ((rt0.c2)AND(rt0.c3)), (('649555198') NOT BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((0.28417937445091934 COLLATE BINARY, x'', (- (rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((((((((rt0.c1)<>(rt0.c3)))OR((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))))))AND(((vt0.c0)>>(vt0.c0)))))AND((~ (v0.c0)))))OR(json_type(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)<>(rt0.c3)))OR((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))))))AND(((vt0.c0)>>(vt0.c0)))))AND((~ (v0.c0)))))OR(json_type(vt0.c0)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((((((((rt0.c1)<>(rt0.c3)))OR((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))))))AND(((vt0.c0)>>(vt0.c0)))))AND((~ (v0.c0)))))OR(json_type(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)<>(rt0.c3)))OR((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))))))AND(((vt0.c0)>>(vt0.c0)))))AND((~ (v0.c0)))))OR(json_type(vt0.c0)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((((((((rt0.c1)<>(rt0.c3)))OR((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))))))AND(((vt0.c0)>>(vt0.c0)))))AND((~ (v0.c0)))))OR(json_type(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (x'');
SELECT * FROM vt0, v0, rt0 WHERE ((((rt0.c3 IN ())) NOT BETWEEN (((((v0.c0)AND(rt0.c3)))OR(vt0.c0))) AND (((rt0.c0)<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ())) NOT BETWEEN (((((v0.c0)AND(rt0.c3)))OR(vt0.c0))) AND (((rt0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE ((((rt0.c3 IN ())) NOT BETWEEN (((((v0.c0)AND(rt0.c3)))OR(vt0.c0))) AND (((rt0.c0)<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ())) NOT BETWEEN (((((v0.c0)AND(rt0.c3)))OR(vt0.c0))) AND (((rt0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE ((((rt0.c3 IN ())) NOT BETWEEN (((((v0.c0)AND(rt0.c3)))OR(vt0.c0))) AND (((rt0.c0)<>(vt0.c0)))));
SELECT ALL * FROM v0, vt0, rt0 WHERE ((~ ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((v0.c0 IN ())))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((~ ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((v0.c0 IN ())))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((~ ((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)%(CASE 0.8322925286207905  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((TYPEOF(vt0.c0))>(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)%(CASE 0.8322925286207905  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((TYPEOF(vt0.c0))>(vt0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)%(CASE 0.8322925286207905  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((TYPEOF(vt0.c0))>(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)%(CASE 0.8322925286207905  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((TYPEOF(vt0.c0))>(vt0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)%(CASE 0.8322925286207905  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((TYPEOF(vt0.c0))>(vt0.c0))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c1);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (((v0.c0 IN ())) IS FALSE) INNER JOIN vt0 ON ((((rt0.c3)LIKE(v0.c0))) BETWEEN ((rt0.c1 IN (vt0.c0))) AND (((rt0.c2)>=(vt0.c0)))) WHERE (((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (LIKELY(DISTINCT rt0.c2)) AND (CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END))) ORDER BY ((((v0.c0) IS FALSE))&((vt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (LIKELY(DISTINCT rt0.c2)) AND (CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((v0.c0 IN ())) IS FALSE) INNER JOIN vt0 ON ((((rt0.c3)LIKE(v0.c0))) BETWEEN ((rt0.c1 IN (vt0.c0))) AND (((rt0.c2)>=(vt0.c0)))) ORDER BY ((((v0.c0) IS FALSE))&((vt0.c0 IN ()))) DESC  NULLS FIRST);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (((v0.c0 IN ())) IS FALSE) INNER JOIN vt0 ON ((((rt0.c3)LIKE(v0.c0))) BETWEEN ((rt0.c1 IN (vt0.c0))) AND (((rt0.c2)>=(vt0.c0)))) WHERE (((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (LIKELY(DISTINCT rt0.c2)) AND (CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END))) ORDER BY ((((v0.c0) IS FALSE))&((vt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (LIKELY(DISTINCT rt0.c2)) AND (CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((v0.c0 IN ())) IS FALSE) INNER JOIN vt0 ON ((((rt0.c3)LIKE(v0.c0))) BETWEEN ((rt0.c1 IN (vt0.c0))) AND (((rt0.c2)>=(vt0.c0)))) ORDER BY ((((v0.c0) IS FALSE))&((vt0.c0 IN ()))) DESC  NULLS FIRST);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (((v0.c0 IN ())) IS FALSE) INNER JOIN vt0 ON ((((rt0.c3)LIKE(v0.c0))) BETWEEN ((rt0.c1 IN (vt0.c0))) AND (((rt0.c2)>=(vt0.c0)))) WHERE (((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (LIKELY(DISTINCT rt0.c2)) AND (CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END))) ORDER BY ((((v0.c0) IS FALSE))&((vt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2)IS(v0.c0)))>>(x'ddd2')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)IS(v0.c0)))>>(x'ddd2'))) IS TRUE)  as count FROM v0, rt0 NOT INDEXED);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2)IS(v0.c0)))>>(x'ddd2')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)IS(v0.c0)))>>(x'ddd2'))) IS TRUE)  as count FROM v0, rt0 NOT INDEXED);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2)IS(v0.c0)))>>(x'ddd2')));
SELECT * FROM rt0, vt0, v0 WHERE (CAST(NULL AS REAL)) ORDER BY json_patch(LIKE(rt0.c2, v0.c0), NULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS REAL)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY json_patch(LIKE(rt0.c2, v0.c0), NULL) DESC);
SELECT * FROM rt0, vt0, v0 WHERE (CAST(NULL AS REAL)) ORDER BY json_patch(LIKE(rt0.c2, v0.c0), NULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS REAL)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY json_patch(LIKE(rt0.c2, v0.c0), NULL) DESC);
SELECT * FROM rt0, vt0, v0 WHERE (CAST(NULL AS REAL)) ORDER BY json_patch(LIKE(rt0.c2, v0.c0), NULL) DESC;
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON 0.38225728522724645 WHERE (LIKELY(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 END)) ORDER BY CAST(((rt0.c3)!=(vt0.c0)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 END)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON 0.38225728522724645 ORDER BY CAST(((rt0.c3)!=(vt0.c0)) AS NUMERIC) ASC);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON 0.38225728522724645 WHERE (LIKELY(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 END)) ORDER BY CAST(((rt0.c3)!=(vt0.c0)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 END)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON 0.38225728522724645 ORDER BY CAST(((rt0.c3)!=(vt0.c0)) AS NUMERIC) ASC);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON 0.38225728522724645 WHERE (LIKELY(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 END)) ORDER BY CAST(((rt0.c3)!=(vt0.c0)) AS NUMERIC) ASC;
SELECT ALL * FROM v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (v0.c0);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((+ (rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((+ (rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((+ (rt0.c3 COLLATE BINARY)));
SELECT ALL * FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (v0.c0);
SELECT * FROM v0, rt0, vt0 WHERE ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)) IN ())) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)) IN ())) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)) IN ()));
SELECT ALL * FROM v0 WHERE (UPPER(DISTINCT v0.c0));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT v0.c0)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (UPPER(DISTINCT v0.c0));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT v0.c0)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (UPPER(DISTINCT v0.c0));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((rt0.c1)AND(rt0.c3))) BETWEEN (LIKELIHOOD(rt0.c1, 0.015403436908540624)) AND (((rt0.c1)-(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt0.c3))) BETWEEN (LIKELIHOOD(rt0.c1, 0.015403436908540624)) AND (((rt0.c1)-(rt0.c3))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((rt0.c1)AND(rt0.c3))) BETWEEN (LIKELIHOOD(rt0.c1, 0.015403436908540624)) AND (((rt0.c1)-(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt0.c3))) BETWEEN (LIKELIHOOD(rt0.c1, 0.015403436908540624)) AND (((rt0.c1)-(rt0.c3))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((rt0.c1)AND(rt0.c3))) BETWEEN (LIKELIHOOD(rt0.c1, 0.015403436908540624)) AND (((rt0.c1)-(rt0.c3)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c2)GLOB(rt0.c1)) COLLATE BINARY WHERE (((COALESCE(DISTINCT vt0.c0, rt0.c0, vt0.c0, NULL)) NOT BETWEEN (((rt0.c0)AND(rt0.c3))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT vt0.c0, rt0.c0, vt0.c0, NULL)) NOT BETWEEN (((rt0.c0)AND(rt0.c3))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c2)GLOB(rt0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c2)GLOB(rt0.c1)) COLLATE BINARY WHERE (((COALESCE(DISTINCT vt0.c0, rt0.c0, vt0.c0, NULL)) NOT BETWEEN (((rt0.c0)AND(rt0.c3))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT vt0.c0, rt0.c0, vt0.c0, NULL)) NOT BETWEEN (((rt0.c0)AND(rt0.c3))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c2)GLOB(rt0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c2)GLOB(rt0.c1)) COLLATE BINARY WHERE (((COALESCE(DISTINCT vt0.c0, rt0.c0, vt0.c0, NULL)) NOT BETWEEN (((rt0.c0)AND(rt0.c3))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (TYPEOF(rt0.c0)) ORDER BY ((((((((NULL)AND(((rt0.c0)|(rt0.c2)))))AND(rt0.c0 COLLATE BINARY)))OR(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END)))AND(rt0.c3)), ((((rt0.c1)AND(rt0.c3)))||(CASE WHEN rt0.c0 THEN rt0.c3 WHEN x'' THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(rt0.c0)) IS TRUE)  as count FROM rt0 ORDER BY ((((((((NULL)AND(((rt0.c0)|(rt0.c2)))))AND(rt0.c0 COLLATE BINARY)))OR(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END)))AND(rt0.c3)), ((((rt0.c1)AND(rt0.c3)))||(CASE WHEN rt0.c0 THEN rt0.c3 WHEN x'' THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE (TYPEOF(rt0.c0)) ORDER BY ((((((((NULL)AND(((rt0.c0)|(rt0.c2)))))AND(rt0.c0 COLLATE BINARY)))OR(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END)))AND(rt0.c3)), ((((rt0.c1)AND(rt0.c3)))||(CASE WHEN rt0.c0 THEN rt0.c3 WHEN x'' THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(rt0.c0)) IS TRUE)  as count FROM rt0 ORDER BY ((((((((NULL)AND(((rt0.c0)|(rt0.c2)))))AND(rt0.c0 COLLATE BINARY)))OR(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END)))AND(rt0.c3)), ((((rt0.c1)AND(rt0.c3)))||(CASE WHEN rt0.c0 THEN rt0.c3 WHEN x'' THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE (TYPEOF(rt0.c0)) ORDER BY ((((((((NULL)AND(((rt0.c0)|(rt0.c2)))))AND(rt0.c0 COLLATE BINARY)))OR(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END)))AND(rt0.c3)), ((((rt0.c1)AND(rt0.c3)))||(CASE WHEN rt0.c0 THEN rt0.c3 WHEN x'' THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END));
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0)=(vt0.c0)))<(CASE WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY CAST(v0.c0 AS INTEGER), (((+ (v0.c0))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)=(vt0.c0)))<(CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(v0.c0 AS INTEGER), (((+ (v0.c0))) ISNULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0)=(vt0.c0)))<(CASE WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY CAST(v0.c0 AS INTEGER), (((+ (v0.c0))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)=(vt0.c0)))<(CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(v0.c0 AS INTEGER), (((+ (v0.c0))) ISNULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0)=(vt0.c0)))<(CASE WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY CAST(v0.c0 AS INTEGER), (((+ (v0.c0))) ISNULL) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, v0 WHERE ((- (((rt0.c2) NOT BETWEEN (rt0.c3) AND (0.9849506218265089))))) ORDER BY 0.8456382077784035, '0.2911465347901684'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2) NOT BETWEEN (rt0.c3) AND (0.9849506218265089))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY 0.8456382077784035, '0.2911465347901684'  NULLS LAST);
SELECT ALL * FROM rt0, vt0, v0 WHERE ((- (((rt0.c2) NOT BETWEEN (rt0.c3) AND (0.9849506218265089))))) ORDER BY 0.8456382077784035, '0.2911465347901684'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2) NOT BETWEEN (rt0.c3) AND (0.9849506218265089))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY 0.8456382077784035, '0.2911465347901684'  NULLS LAST);
SELECT ALL * FROM rt0, vt0, v0 WHERE ((- (((rt0.c2) NOT BETWEEN (rt0.c3) AND (0.9849506218265089))))) ORDER BY 0.8456382077784035, '0.2911465347901684'  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (- ((((rt0.c1))<((vt0.c0))))) WHERE ((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (- ((((rt0.c1))<((vt0.c0))))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (- ((((rt0.c1))<((vt0.c0))))) WHERE ((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (- ((((rt0.c1))<((vt0.c0))))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (- ((((rt0.c1))<((vt0.c0))))) WHERE ((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ()));
SELECT COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN v0 ON CAST(rt0.c3 AS NUMERIC) COLLATE BINARY WHERE (CAST(CAST(vt0.c0 AS TEXT) AS BLOB)) ORDER BY (((rt0.c0)-(rt0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS BLOB)) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN v0 ON CAST(rt0.c3 AS NUMERIC) COLLATE BINARY ORDER BY (((rt0.c0)-(rt0.c1)) IN ()) DESC);
SELECT COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN v0 ON CAST(rt0.c3 AS NUMERIC) COLLATE BINARY WHERE (CAST(CAST(vt0.c0 AS TEXT) AS BLOB)) ORDER BY (((rt0.c0)-(rt0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS BLOB)) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN v0 ON CAST(rt0.c3 AS NUMERIC) COLLATE BINARY ORDER BY (((rt0.c0)-(rt0.c1)) IN ()) DESC);
SELECT COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN v0 ON CAST(rt0.c3 AS NUMERIC) COLLATE BINARY WHERE (CAST(CAST(vt0.c0 AS TEXT) AS BLOB)) ORDER BY (((rt0.c0)-(rt0.c1)) IN ()) DESC;
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((vt0.c0) NOTNULL)) IS FALSE)) ORDER BY CASE ((rt0.c3)IS(rt0.c2))  WHEN (('Dgc')-(rt0.c2)) THEN rt0.c1 WHEN rt0.c2 THEN ((rt0.c1) BETWEEN (-5.28863505E8) AND (rt0.c1)) WHEN ((rt0.c0)||(v0.c0)) THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c0) NOT BETWEEN (rt0.c1) AND (NULL)) END DESC, rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CASE ((rt0.c3)IS(rt0.c2))  WHEN (('Dgc')-(rt0.c2)) THEN rt0.c1 WHEN rt0.c2 THEN ((rt0.c1) BETWEEN (-5.28863505E8) AND (rt0.c1)) WHEN ((rt0.c0)||(v0.c0)) THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c0) NOT BETWEEN (rt0.c1) AND (NULL)) END DESC, rt0.c1 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((vt0.c0) NOTNULL)) IS FALSE)) ORDER BY CASE ((rt0.c3)IS(rt0.c2))  WHEN (('Dgc')-(rt0.c2)) THEN rt0.c1 WHEN rt0.c2 THEN ((rt0.c1) BETWEEN (-5.28863505E8) AND (rt0.c1)) WHEN ((rt0.c0)||(v0.c0)) THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c0) NOT BETWEEN (rt0.c1) AND (NULL)) END DESC, rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CASE ((rt0.c3)IS(rt0.c2))  WHEN (('Dgc')-(rt0.c2)) THEN rt0.c1 WHEN rt0.c2 THEN ((rt0.c1) BETWEEN (-5.28863505E8) AND (rt0.c1)) WHEN ((rt0.c0)||(v0.c0)) THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c0) NOT BETWEEN (rt0.c1) AND (NULL)) END DESC, rt0.c1 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((vt0.c0) NOTNULL)) IS FALSE)) ORDER BY CASE ((rt0.c3)IS(rt0.c2))  WHEN (('Dgc')-(rt0.c2)) THEN rt0.c1 WHEN rt0.c2 THEN ((rt0.c1) BETWEEN (-5.28863505E8) AND (rt0.c1)) WHEN ((rt0.c0)||(v0.c0)) THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c0) NOT BETWEEN (rt0.c1) AND (NULL)) END DESC, rt0.c1 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) BETWEEN (v0.c0 COLLATE RTRIM) AND (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY ((CAST(NULL AS TEXT)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (LIKELIHOOD(v0.c0, 0.3555917239358378)))  NULLS LAST, ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)-(((v0.c0)<<(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) BETWEEN (v0.c0 COLLATE RTRIM) AND (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(NULL AS TEXT)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (LIKELIHOOD(v0.c0, 0.3555917239358378)))  NULLS LAST, ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)-(((v0.c0)<<(v0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) BETWEEN (v0.c0 COLLATE RTRIM) AND (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY ((CAST(NULL AS TEXT)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (LIKELIHOOD(v0.c0, 0.3555917239358378)))  NULLS LAST, ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)-(((v0.c0)<<(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) BETWEEN (v0.c0 COLLATE RTRIM) AND (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(NULL AS TEXT)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (LIKELIHOOD(v0.c0, 0.3555917239358378)))  NULLS LAST, ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)-(((v0.c0)<<(v0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) BETWEEN (v0.c0 COLLATE RTRIM) AND (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY ((CAST(NULL AS TEXT)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (LIKELIHOOD(v0.c0, 0.3555917239358378)))  NULLS LAST, ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)-(((v0.c0)<<(v0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((- (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((- (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((- (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)));
SELECT * FROM vt0, v0 CROSS JOIN rt0 ON '2078312010' WHERE (((((rt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 CROSS JOIN rt0 ON '2078312010');
SELECT * FROM vt0, v0 CROSS JOIN rt0 ON '2078312010' WHERE (((((rt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 CROSS JOIN rt0 ON '2078312010');
SELECT * FROM vt0, v0 CROSS JOIN rt0 ON '2078312010' WHERE (((((rt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE);
SELECT * FROM v0, rt0, vt0 WHERE ((rt0.c3 IN (rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE ((rt0.c3 IN (rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE ((rt0.c3 IN (rt0.c0)) COLLATE NOCASE);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c3) NOT NULL) IN ((rt0.c0 IN (v0.c0)))) WHERE ((~ (((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c3) NOT NULL) IN ((rt0.c0 IN (v0.c0)))));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c3) NOT NULL) IN ((rt0.c0 IN (v0.c0)))) WHERE ((~ (((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c3) NOT NULL) IN ((rt0.c0 IN (v0.c0)))));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c3) NOT NULL) IN ((rt0.c0 IN (v0.c0)))) WHERE ((~ (((v0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (vt0.c0) AND ((NOT (vt0.c0))))) ORDER BY CAST(((vt0.c0)<>(vt0.c0)) AS REAL) ASC  NULLS FIRST, (~ ((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (vt0.c0) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)!=(vt0.c0)) AS REAL) ASC  NULLS FIRST, (~ ((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (vt0.c0) AND ((NOT (vt0.c0))))) ORDER BY CAST(((vt0.c0)<>(vt0.c0)) AS REAL) ASC  NULLS FIRST, (~ ((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (vt0.c0) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)!=(vt0.c0)) AS REAL) ASC  NULLS FIRST, (~ ((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (vt0.c0) AND ((NOT (vt0.c0))))) ORDER BY CAST(((vt0.c0)<>(vt0.c0)) AS REAL) ASC  NULLS FIRST, (~ ((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0)))));
SELECT * FROM v0, rt0, vt0 WHERE (((rt0.c1 COLLATE BINARY)GLOB(((vt0.c0)OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY)GLOB(((vt0.c0)OR(rt0.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (((rt0.c1 COLLATE BINARY)GLOB(((vt0.c0)OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY)GLOB(((vt0.c0)OR(rt0.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (((rt0.c1 COLLATE BINARY)GLOB(((vt0.c0)OR(rt0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((((CASE vt0.c0  WHEN v0.c0 THEN NULL ELSE rt0.c2 END))<>(((((rt0.c1))<((rt0.c3))))))) ORDER BY ((v0.c0)>=(rt0.c2)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c0  WHEN v0.c0 THEN NULL ELSE rt0.c2 END))<>(((((rt0.c1))<((rt0.c3))))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((v0.c0)>=(rt0.c2)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((((CASE vt0.c0  WHEN v0.c0 THEN NULL ELSE rt0.c2 END))<>(((((rt0.c1))<((rt0.c3))))))) ORDER BY ((v0.c0)>=(rt0.c2)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c0  WHEN v0.c0 THEN NULL ELSE rt0.c2 END))<>(((((rt0.c1))<((rt0.c3))))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((v0.c0)>=(rt0.c2)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((((CASE vt0.c0  WHEN v0.c0 THEN NULL ELSE rt0.c2 END))<>(((((rt0.c1))<((rt0.c3))))))) ORDER BY ((v0.c0)>=(rt0.c2)) COLLATE RTRIM ASC;
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN rt0 ON json_patch(rt0.c1, rt0.c3) COLLATE NOCASE WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)))+(TYPEOF('1573443405'))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)))+(TYPEOF('1573443405')))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN rt0 ON json_patch(rt0.c1, rt0.c3) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN rt0 ON json_patch(rt0.c1, rt0.c3) COLLATE NOCASE WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)))+(TYPEOF('1573443405'))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)))+(TYPEOF('1573443405')))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN rt0 ON json_patch(rt0.c1, rt0.c3) COLLATE NOCASE);
SELECT COUNT(*) FROM v0 WHERE ((+ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ((((vt0.c0)=(vt0.c0)))IS(((v0.c0) NOT NULL))) WHERE (CASE WHEN ((v0.c0)>(vt0.c0)) THEN ((v0.c0)LIKE(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)>(vt0.c0)) THEN ((v0.c0)LIKE(vt0.c0)) END) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((vt0.c0)=(vt0.c0)))IS(((v0.c0) NOT NULL))));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ((((vt0.c0)=(vt0.c0)))IS(((v0.c0) NOT NULL))) WHERE (CASE WHEN ((v0.c0)>(vt0.c0)) THEN ((v0.c0)LIKE(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)>(vt0.c0)) THEN ((v0.c0)LIKE(vt0.c0)) END) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((vt0.c0)=(vt0.c0)))IS(((v0.c0) NOT NULL))));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ((((vt0.c0)=(vt0.c0)))IS(((v0.c0) NOT NULL))) WHERE (CASE WHEN ((v0.c0)>(vt0.c0)) THEN ((v0.c0)LIKE(vt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((rt0.c1)==(rt0.c0)))IS((~ ('-1440730242'))))) ORDER BY ((json_array(rt0.c0, vt0.c0))<<((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)==(rt0.c0)))IS((~ ('-1440730242'))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((json_array(rt0.c0, vt0.c0))<<((rt0.c2 IN ()))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((rt0.c1)==(rt0.c0)))IS((~ ('-1440730242'))))) ORDER BY ((json_array(rt0.c0, vt0.c0))<<((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)==(rt0.c0)))IS((~ ('-1440730242'))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((json_array(rt0.c0, vt0.c0))<<((rt0.c2 IN ()))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((rt0.c1)==(rt0.c0)))IS((~ ('-1440730242'))))) ORDER BY ((json_array(rt0.c0, vt0.c0))<<((rt0.c2 IN ())));
SELECT ALL * FROM rt0 WHERE ((rt0.c2 COLLATE BINARY IN (((rt0.c0) IS FALSE)))) ORDER BY 0.9089005640840512;
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE BINARY IN (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY 0.9089005640840512);
SELECT ALL * FROM rt0 WHERE ((rt0.c2 COLLATE BINARY IN (((rt0.c0) IS FALSE)))) ORDER BY 0.9089005640840512;
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE BINARY IN (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY 0.9089005640840512);
SELECT ALL * FROM rt0 WHERE ((rt0.c2 COLLATE BINARY IN (((rt0.c0) IS FALSE)))) ORDER BY 0.9089005640840512;
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON ((0.18924014639907782) BETWEEN (CASE WHEN NULL THEN vt0.c0 ELSE rt0.c2 END) AND (TYPEOF(rt0.c3))) INNER JOIN rt0 ON CASE ((rt0.c2)||(rt0.c0))  WHEN (((rt0.c0, 21627081, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, vt0.c0, rt0.c1))) THEN rt0.c0 ELSE rt0.c1 COLLATE RTRIM END WHERE ((((rt0.c3, v0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c3) IS TRUE), ((rt0.c3)<(v0.c0)), ((v0.c0) BETWEEN (rt0.c3) AND (-1.10577574E9)))) AND ((json(vt0.c0), UPPER(vt0.c0), CASE rt0.c3  WHEN rt0.c2 THEN 1080755907 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3, v0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c3) IS TRUE), ((rt0.c3)<(v0.c0)), ((v0.c0) BETWEEN (rt0.c3) AND (-1.10577574E9)))) AND ((json(vt0.c0), UPPER(vt0.c0), CASE rt0.c3  WHEN rt0.c2 THEN 1080755907 END)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((0.18924014639907782) BETWEEN (CASE WHEN NULL THEN vt0.c0 ELSE rt0.c2 END) AND (TYPEOF(rt0.c3))) INNER JOIN rt0 ON CASE ((rt0.c2)||(rt0.c0))  WHEN (((rt0.c0, 21627081, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, vt0.c0, rt0.c1))) THEN rt0.c0 ELSE rt0.c1 COLLATE RTRIM END);
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON ((0.18924014639907782) BETWEEN (CASE WHEN NULL THEN vt0.c0 ELSE rt0.c2 END) AND (TYPEOF(rt0.c3))) INNER JOIN rt0 ON CASE ((rt0.c2)||(rt0.c0))  WHEN (((rt0.c0, 21627081, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, vt0.c0, rt0.c1))) THEN rt0.c0 ELSE rt0.c1 COLLATE RTRIM END WHERE ((((rt0.c3, v0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c3) IS TRUE), ((rt0.c3)<(v0.c0)), ((v0.c0) BETWEEN (rt0.c3) AND (-1.10577574E9)))) AND ((json(vt0.c0), UPPER(vt0.c0), CASE rt0.c3  WHEN rt0.c2 THEN 1080755907 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3, v0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c3) IS TRUE), ((rt0.c3)<(v0.c0)), ((v0.c0) BETWEEN (rt0.c3) AND (-1.10577574E9)))) AND ((json(vt0.c0), UPPER(vt0.c0), CASE rt0.c3  WHEN rt0.c2 THEN 1080755907 END)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((0.18924014639907782) BETWEEN (CASE WHEN NULL THEN vt0.c0 ELSE rt0.c2 END) AND (TYPEOF(rt0.c3))) INNER JOIN rt0 ON CASE ((rt0.c2)||(rt0.c0))  WHEN (((rt0.c0, 21627081, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, vt0.c0, rt0.c1))) THEN rt0.c0 ELSE rt0.c1 COLLATE RTRIM END);
SELECT ALL * FROM vt0, v0 NATURAL JOIN rt0 WHERE (ABS(DISTINCT ((v0.c0) IS TRUE))) ORDER BY CAST(rt0.c2 AS TEXT) COLLATE RTRIM, ((((rt0.c3)-(vt0.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((v0.c0) IS TRUE))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN rt0 ORDER BY CAST(rt0.c2 AS TEXT) COLLATE RTRIM, ((((rt0.c3)-(vt0.c0))) NOTNULL) DESC);
SELECT ALL * FROM vt0, v0 NATURAL JOIN rt0 WHERE (ABS(DISTINCT ((v0.c0) IS TRUE))) ORDER BY CAST(rt0.c2 AS TEXT) COLLATE RTRIM, ((((rt0.c3)-(vt0.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((v0.c0) IS TRUE))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN rt0 ORDER BY CAST(rt0.c2 AS TEXT) COLLATE RTRIM, ((((rt0.c3)-(vt0.c0))) NOTNULL) DESC);
SELECT ALL * FROM vt0, v0 NATURAL JOIN rt0 WHERE (ABS(DISTINCT ((v0.c0) IS TRUE))) ORDER BY CAST(rt0.c2 AS TEXT) COLLATE RTRIM, ((((rt0.c3)-(vt0.c0))) NOTNULL) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL))) AND (((NOT (vt0.c0)))))) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '5_29C.id7' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL))) AND (((NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '5_29C.id7' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL))) AND (((NOT (vt0.c0)))))) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '5_29C.id7' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL))) AND (((NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '5_29C.id7' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL))) AND (((NOT (vt0.c0)))))) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '5_29C.id7' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ASC;
SELECT * FROM vt0, v0, rt0 WHERE (((((v0.c0) ISNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN 0.7283744677802587 WHEN v0.c0 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) ISNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN 0.7283744677802587 WHEN v0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (((((v0.c0) ISNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN 0.7283744677802587 WHEN v0.c0 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) ISNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN 0.7283744677802587 WHEN v0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (((((v0.c0) ISNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN 0.7283744677802587 WHEN v0.c0 THEN rt0.c2 END)));
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(v0.c0 AS REAL) THEN v0.c0 ELSE NULL END) ORDER BY ((((vt0.c0)LIKE(v0.c0)))>>(((v0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(v0.c0 AS REAL) THEN v0.c0 ELSE NULL END) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0)LIKE(v0.c0)))>>(((v0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(v0.c0 AS REAL) THEN v0.c0 ELSE NULL END) ORDER BY ((((vt0.c0)LIKE(v0.c0)))>>(((v0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(v0.c0 AS REAL) THEN v0.c0 ELSE NULL END) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0)LIKE(v0.c0)))>>(((v0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(v0.c0 AS REAL) THEN v0.c0 ELSE NULL END) ORDER BY ((((vt0.c0)LIKE(v0.c0)))>>(((v0.c0) NOT NULL)));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON 0.619168863873297 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c3 WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c3 END)GLOB(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c3 WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c3 END)GLOB(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON 0.619168863873297);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON 0.619168863873297 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c3 WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c3 END)GLOB(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c3 WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c3 END)GLOB(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON 0.619168863873297);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON 0.619168863873297 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c3 WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c3 END)GLOB(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT * FROM v0 WHERE ((((v0.c0)) BETWEEN ((CAST(v0.c0 AS INTEGER))) AND (((NOT (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((CAST(v0.c0 AS INTEGER))) AND (((NOT (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0)) BETWEEN ((CAST(v0.c0 AS INTEGER))) AND (((NOT (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((CAST(v0.c0 AS INTEGER))) AND (((NOT (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0)) BETWEEN ((CAST(v0.c0 AS INTEGER))) AND (((NOT (v0.c0))))));
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE ((((vt0.c0)AND(v0.c0)))OR(vt0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN LIKELY(DISTINCT vt0.c0) WHEN UNLIKELY(v0.c0) THEN (vt0.c0 IN ()) WHEN ((vt0.c0)==(v0.c0)) THEN ((vt0.c0)<(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c0)AND(v0.c0)))OR(vt0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN LIKELY(DISTINCT vt0.c0) WHEN UNLIKELY(v0.c0) THEN (vt0.c0 IN ()) WHEN ((vt0.c0)=(v0.c0)) THEN ((vt0.c0)<(vt0.c0)) END) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE ((((vt0.c0)AND(v0.c0)))OR(vt0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN LIKELY(DISTINCT vt0.c0) WHEN UNLIKELY(v0.c0) THEN (vt0.c0 IN ()) WHEN ((vt0.c0)==(v0.c0)) THEN ((vt0.c0)<(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c0)AND(v0.c0)))OR(vt0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN LIKELY(DISTINCT vt0.c0) WHEN UNLIKELY(v0.c0) THEN (vt0.c0 IN ()) WHEN ((vt0.c0)=(v0.c0)) THEN ((vt0.c0)<(vt0.c0)) END) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE ((((vt0.c0)AND(v0.c0)))OR(vt0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN LIKELY(DISTINCT vt0.c0) WHEN UNLIKELY(v0.c0) THEN (vt0.c0 IN ()) WHEN ((vt0.c0)==(v0.c0)) THEN ((vt0.c0)<(vt0.c0)) END);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 THEN (+ (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN (+ (rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 THEN (+ (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN (+ (rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 THEN (+ (rt0.c2)) END);
SELECT COUNT(*) FROM v0 WHERE ((- (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((- (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((- (v0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((CASE WHEN x'' THEN v0.c0 ELSE vt0.c0 END)OR(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)))OR(CAST(v0.c0 AS TEXT))))AND(((vt0.c0)|(vt0.c0)))))AND(vt0.c0 COLLATE BINARY))) ORDER BY (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))>=(-3.3483544E8 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN x'' THEN v0.c0 ELSE vt0.c0 END)OR(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)))OR(CAST(v0.c0 AS TEXT))))AND(((vt0.c0)|(vt0.c0)))))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))>=(-3.3483544E8 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((CASE WHEN x'' THEN v0.c0 ELSE vt0.c0 END)OR(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)))OR(CAST(v0.c0 AS TEXT))))AND(((vt0.c0)|(vt0.c0)))))AND(vt0.c0 COLLATE BINARY))) ORDER BY (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))>=(-3.3483544E8 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN x'' THEN v0.c0 ELSE vt0.c0 END)OR(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)))OR(CAST(v0.c0 AS TEXT))))AND(((vt0.c0)|(vt0.c0)))))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))>=(-3.3483544E8 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((CASE WHEN x'' THEN v0.c0 ELSE vt0.c0 END)OR(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)))OR(CAST(v0.c0 AS TEXT))))AND(((vt0.c0)|(vt0.c0)))))AND(vt0.c0 COLLATE BINARY))) ORDER BY (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))>=(-3.3483544E8 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT * FROM rt0, v0, vt0 WHERE (((rt0.c2)|(v0.c0)) COLLATE BINARY) ORDER BY CAST((((vt0.c0))>((rt0.c1))) AS TEXT), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)|(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CAST((((vt0.c0))>((rt0.c1))) AS TEXT), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END COLLATE BINARY);
SELECT * FROM rt0, v0, vt0 WHERE (((rt0.c2)|(v0.c0)) COLLATE BINARY) ORDER BY CAST((((vt0.c0))>((rt0.c1))) AS TEXT), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)|(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CAST((((vt0.c0))>((rt0.c1))) AS TEXT), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END COLLATE BINARY);
SELECT * FROM rt0, v0, vt0 WHERE (((rt0.c2)|(v0.c0)) COLLATE BINARY) ORDER BY CAST((((vt0.c0))>((rt0.c1))) AS TEXT), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END COLLATE BINARY;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3)OR(rt0.c3)) IN (((NULL) NOT NULL), ((rt0.c2) BETWEEN (-1.028125847E9) AND (rt0.c3))))) ORDER BY NULL ASC, ((rt0.c2)/(rt0.c2)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)OR(rt0.c3)) IN (((NULL) NOT NULL), ((rt0.c2) BETWEEN (-1.028125847E9) AND (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC, ((rt0.c2)/(rt0.c2)) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3)OR(rt0.c3)) IN (((NULL) NOT NULL), ((rt0.c2) BETWEEN (-1.028125847E9) AND (rt0.c3))))) ORDER BY NULL ASC, ((rt0.c2)/(rt0.c2)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)OR(rt0.c3)) IN (((NULL) NOT NULL), ((rt0.c2) BETWEEN (-1.028125847E9) AND (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC, ((rt0.c2)/(rt0.c2)) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3)OR(rt0.c3)) IN (((NULL) NOT NULL), ((rt0.c2) BETWEEN (-1.028125847E9) AND (rt0.c3))))) ORDER BY NULL ASC, ((rt0.c2)/(rt0.c2)) COLLATE NOCASE  NULLS LAST;
