-- Time: 2024/06/09 00:55:28
-- Database: database49
-- Database version: 3.40.0
-- seed value: 3236010549
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=x''; -- 0ms;
INSERT OR FAIL INTO rt0(c0, c1) VALUES (x'', x''); -- 0ms;
ANALYZE rt0; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX NOCASE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 22ms;
UPDATE rt0 SET (c0, c1)=(NULL, NULL); -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(-667912682); -- 0ms;
ANALYZE; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ABORT INTO rt0(c1) VALUES (x''); -- 1ms;
INSERT OR IGNORE INTO rt0 VALUES (x'', NULL, 'Q8QZ27y*7'); -- 0ms;
INSERT OR FAIL INTO rt0(c2, c0) VALUES (209887025, x''); -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c0) VALUES ('', NULL), (NULL, x''), (NULL, 0.284282073393452), (-6.67912682E8, 2.09887025E8), (NULL, 0.06662562020551133); -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES (0xffffffff84f3be69, NULL, 0.10366122133254463); -- 1ms;
PRAGMA secure_delete = true; -- 0ms;
REINDEX; -- 0ms;
PRAGMA short_column_names = false; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '607027308 0 unordered'); -- 0ms;
UPDATE rt0 SET (c0)=(NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=0x242e806c, c2=NULL; -- 0ms;
UPDATE OR FAIL rt0 SET (c1, c0)=(NULL, x'0dde'); -- 1ms;
UPDATE rt0 SET (c1, c2, c1)=('c{_㚧E/xN>', NULL, x''); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(-2138884441) WHERE ((((((((CAST(rt0.c2 AS TEXT))OR(json_extract(3.737255174849352E-4, rt0.c1))))OR(CASE WHEN rt0.c0 THEN rt0.c0 END)))OR(((rt0.c1)+(rt0.c1)))))OR(rt0.c2)); -- 0ms;
UPDATE rt0 SET (c2, c2)=(NULL, '-2064400791') WHERE x''; -- 0ms;
PRAGMA default_cache_size = -1289985407; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ANALYZE rt0; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, x'', x''); -- 3ms;
UPDATE OR IGNORE rt0 SET c2=NULL WHERE COALESCE(DISTINCT '-1357407603', ((rt0.c0)AND(rt0.c2))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
PRAGMA secure_delete; -- 0ms;
PRAGMA main.short_column_names = false; -- 0ms;
ANALYZE rt0; -- 1ms;
ANALYZE rt0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1 UNINDEXED, tokenize=porter, matchinfo=fts3); -- 1ms;
INSERT OR ABORT INTO rt0(c2, c0) VALUES ('715269126', x''); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('585175589'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
CREATE VIEW v0(c0) AS SELECT ALL CASE (rt0.c0 IN ())  WHEN CASE ''  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END THEN (rt0.c0 IN ()) ELSE '' END FROM rt0, vt0 WHERE (((((((x'')AND('-2138884441')))AND(3.737255174849352E-4))) ISNULL)); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 263625764); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 985507670); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)LIKE(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ORDER BY ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR((v0.c0 IN ()))))OR(TYPEOF(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((v0.c0)LIKE(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR((v0.c0 IN ()))))OR(TYPEOF(v0.c0))));
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)LIKE(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ORDER BY ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR((v0.c0 IN ()))))OR(TYPEOF(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((v0.c0)LIKE(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR((v0.c0 IN ()))))OR(TYPEOF(v0.c0))));
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)LIKE(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ORDER BY ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR((v0.c0 IN ()))))OR(TYPEOF(v0.c0)));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CAST(rt0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS REAL)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CAST(rt0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS REAL)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CAST(rt0.c0 AS REAL));
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0))) BETWEEN (vt0.c1 COLLATE BINARY) AND (((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) BETWEEN (vt0.c1 COLLATE BINARY) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0))) BETWEEN (vt0.c1 COLLATE BINARY) AND (((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) BETWEEN (vt0.c1 COLLATE BINARY) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0))) BETWEEN (vt0.c1 COLLATE BINARY) AND (((vt0.c0) NOTNULL))));
SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c1 IN (rt0.c0)))AND(((rt0.c1)<<(rt0.c1)))))OR(rt0.c0 COLLATE NOCASE))) ORDER BY (((NOT (rt0.c1)))*((rt0.c2 IN (rt0.c0)))), (((NOT (rt0.c0))) BETWEEN (((rt0.c2)%(rt0.c2))) AND (((rt0.c0)|(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN (rt0.c0)))AND(((rt0.c1)<<(rt0.c1)))))OR(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((NOT (rt0.c1)))*((rt0.c2 IN (rt0.c0)))), (((NOT (rt0.c0))) BETWEEN (((rt0.c2)%(rt0.c2))) AND (((rt0.c0)|(rt0.c0)))));
SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c1 IN (rt0.c0)))AND(((rt0.c1)<<(rt0.c1)))))OR(rt0.c0 COLLATE NOCASE))) ORDER BY (((NOT (rt0.c1)))*((rt0.c2 IN (rt0.c0)))), (((NOT (rt0.c0))) BETWEEN (((rt0.c2)%(rt0.c2))) AND (((rt0.c0)|(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN (rt0.c0)))AND(((rt0.c1)<<(rt0.c1)))))OR(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((NOT (rt0.c1)))*((rt0.c2 IN (rt0.c0)))), (((NOT (rt0.c0))) BETWEEN (((rt0.c2)%(rt0.c2))) AND (((rt0.c0)|(rt0.c0)))));
SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c1 IN (rt0.c0)))AND(((rt0.c1)<<(rt0.c1)))))OR(rt0.c0 COLLATE NOCASE))) ORDER BY (((NOT (rt0.c1)))*((rt0.c2 IN (rt0.c0)))), (((NOT (rt0.c0))) BETWEEN (((rt0.c2)%(rt0.c2))) AND (((rt0.c0)|(rt0.c0))));
SELECT * FROM v0, vt0, rt0 WHERE (((((((rt0.c2)AND(rt0.c1)))OR(((x'')>>(v0.c0)))))AND(0.8692850449918011)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(rt0.c1)))OR(((x'')>>(v0.c0)))))AND(0.8692850449918011))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (((((((rt0.c2)AND(rt0.c1)))OR(((x'')>>(v0.c0)))))AND(0.8692850449918011)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(rt0.c1)))OR(((x'')>>(v0.c0)))))AND(0.8692850449918011))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (((((((rt0.c2)AND(rt0.c1)))OR(((x'')>>(v0.c0)))))AND(0.8692850449918011)));
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN v0 ON ((rt0.c1)*(rt0.c0)) COLLATE BINARY WHERE ((((((((((((((((rt0.c1))<((rt0.c0))))AND(vt0.c1 COLLATE RTRIM)))OR(rt0.c1)))AND(rt0.c1 COLLATE NOCASE)))AND(json_object(rt0.c0, rt0.c2, rt0.c0, rt0.c0, rt0.c2, vt0.c0))))AND(((((((((rt0.c1)OR(0.9963681050038483)))AND(rt0.c1)))OR('')))OR(rt0.c0)))))OR(CAST(rt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((((((((((((((rt0.c1))<((rt0.c0))))AND(vt0.c1 COLLATE RTRIM)))OR(rt0.c1)))AND(rt0.c1 COLLATE NOCASE)))AND(json_object(rt0.c0, rt0.c2, rt0.c0, rt0.c0, rt0.c2, vt0.c0))))AND(((((((((rt0.c1)OR(0.9963681050038483)))AND(rt0.c1)))OR('')))OR(rt0.c0)))))OR(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN v0 ON ((rt0.c1)*(rt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN v0 ON ((rt0.c1)*(rt0.c0)) COLLATE BINARY WHERE ((((((((((((((((rt0.c1))<((rt0.c0))))AND(vt0.c1 COLLATE RTRIM)))OR(rt0.c1)))AND(rt0.c1 COLLATE NOCASE)))AND(json_object(rt0.c0, rt0.c2, rt0.c0, rt0.c0, rt0.c2, vt0.c0))))AND(((((((((rt0.c1)OR(0.9963681050038483)))AND(rt0.c1)))OR('')))OR(rt0.c0)))))OR(CAST(rt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((((((((((((((rt0.c1))<((rt0.c0))))AND(vt0.c1 COLLATE RTRIM)))OR(rt0.c1)))AND(rt0.c1 COLLATE NOCASE)))AND(json_object(rt0.c0, rt0.c2, rt0.c0, rt0.c0, rt0.c2, vt0.c0))))AND(((((((((rt0.c1)OR(0.9963681050038483)))AND(rt0.c1)))OR('')))OR(rt0.c0)))))OR(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN v0 ON ((rt0.c1)*(rt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN v0 ON ((rt0.c1)*(rt0.c0)) COLLATE BINARY WHERE ((((((((((((((((rt0.c1))<((rt0.c0))))AND(vt0.c1 COLLATE RTRIM)))OR(rt0.c1)))AND(rt0.c1 COLLATE NOCASE)))AND(json_object(rt0.c0, rt0.c2, rt0.c0, rt0.c0, rt0.c2, vt0.c0))))AND(((((((((rt0.c1)OR(0.9963681050038483)))AND(rt0.c1)))OR('')))OR(rt0.c0)))))OR(CAST(rt0.c2 AS REAL))));
SELECT * FROM v0, rt0, vt0 WHERE (CAST((rt0.c0 IN (rt0.c0, rt0.c2)) AS TEXT)) ORDER BY ((vt0.c0)<=(rt0.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN (rt0.c0, rt0.c2)) AS TEXT)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((vt0.c0)<=(rt0.c1)) COLLATE RTRIM);
SELECT * FROM v0, rt0, vt0 WHERE (CAST((rt0.c0 IN (rt0.c0, rt0.c2)) AS TEXT)) ORDER BY ((vt0.c0)<=(rt0.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN (rt0.c0, rt0.c2)) AS TEXT)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((vt0.c0)<=(rt0.c1)) COLLATE RTRIM);
SELECT * FROM v0, rt0, vt0 WHERE (CAST((rt0.c0 IN (rt0.c0, rt0.c2)) AS TEXT)) ORDER BY ((vt0.c0)<=(rt0.c1)) COLLATE RTRIM;
SELECT ALL * FROM v0, rt0 WHERE (((((((v0.c0)OR(rt0.c1)))OR(rt0.c1)))||((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(rt0.c1)))OR(rt0.c1)))||((+ (rt0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((((v0.c0)OR(rt0.c1)))OR(rt0.c1)))||((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(rt0.c1)))OR(rt0.c1)))||((+ (rt0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((((v0.c0)OR(rt0.c1)))OR(rt0.c1)))||((+ (rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (((((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))OR((~ (rt0.c2)))))AND(CAST(rt0.c1 AS INTEGER))))AND(CAST(rt0.c2 AS BLOB))))AND(CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))OR((~ (rt0.c2)))))AND(CAST(rt0.c1 AS INTEGER))))AND(CAST(rt0.c2 AS BLOB))))AND(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))OR((~ (rt0.c2)))))AND(CAST(rt0.c1 AS INTEGER))))AND(CAST(rt0.c2 AS BLOB))))AND(CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))OR((~ (rt0.c2)))))AND(CAST(rt0.c1 AS INTEGER))))AND(CAST(rt0.c2 AS BLOB))))AND(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))OR((~ (rt0.c2)))))AND(CAST(rt0.c1 AS INTEGER))))AND(CAST(rt0.c2 AS BLOB))))AND(CAST(rt0.c1 AS REAL))));
SELECT * FROM rt0, vt0 WHERE ((((rt0.c2)) NOT BETWEEN ((SUBSTR(vt0.c1, rt0.c1))) AND ((((rt0.c1)|(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((SUBSTR(vt0.c1, rt0.c1))) AND ((((rt0.c1)|(rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c2)) NOT BETWEEN ((SUBSTR(vt0.c1, rt0.c1))) AND ((((rt0.c1)|(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((SUBSTR(vt0.c1, rt0.c1))) AND ((((rt0.c1)|(rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c2)) NOT BETWEEN ((SUBSTR(vt0.c1, rt0.c1))) AND ((((rt0.c1)|(rt0.c0))))));
SELECT ALL * FROM rt0, vt0 LEFT OUTER JOIN v0 ON ((((0xffffffffe9b749c8) NOT BETWEEN (v0.c0) AND (rt0.c1)))IS NOT((((('')AND(rt0.c0)))OR(v0.c0)))) WHERE (((((((rt0.c0)/(v0.c0)))OR(((rt0.c2) NOT BETWEEN (v0.c0) AND (vt0.c0)))))AND(((v0.c0)GLOB(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)/(v0.c0)))OR(((rt0.c2) NOT BETWEEN (v0.c0) AND (vt0.c0)))))AND(((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN v0 ON ((((0Xffffffffe9b749c8) NOT BETWEEN (v0.c0) AND (rt0.c1)))IS NOT((((('')AND(rt0.c0)))OR(v0.c0)))));
SELECT ALL * FROM rt0, vt0 LEFT OUTER JOIN v0 ON ((((0xffffffffe9b749c8) NOT BETWEEN (v0.c0) AND (rt0.c1)))IS NOT((((('')AND(rt0.c0)))OR(v0.c0)))) WHERE (((((((rt0.c0)/(v0.c0)))OR(((rt0.c2) NOT BETWEEN (v0.c0) AND (vt0.c0)))))AND(((v0.c0)GLOB(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)/(v0.c0)))OR(((rt0.c2) NOT BETWEEN (v0.c0) AND (vt0.c0)))))AND(((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN v0 ON ((((0Xffffffffe9b749c8) NOT BETWEEN (v0.c0) AND (rt0.c1)))IS NOT((((('')AND(rt0.c0)))OR(v0.c0)))));
SELECT ALL * FROM rt0, vt0 LEFT OUTER JOIN v0 ON ((((0xffffffffe9b749c8) NOT BETWEEN (v0.c0) AND (rt0.c1)))IS NOT((((('')AND(rt0.c0)))OR(v0.c0)))) WHERE (((((((rt0.c0)/(v0.c0)))OR(((rt0.c2) NOT BETWEEN (v0.c0) AND (vt0.c0)))))AND(((v0.c0)GLOB(v0.c0)))));
SELECT * FROM vt0 WHERE (((SUBSTR(vt0.c0, vt0.c1)) BETWEEN (TIME(vt0.c0, vt0.c0, vt0.c1)) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((SUBSTR(vt0.c0, vt0.c1)) BETWEEN (TIME(vt0.c0, vt0.c0, vt0.c1)) AND (x''))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((SUBSTR(vt0.c0, vt0.c1)) BETWEEN (TIME(vt0.c0, vt0.c0, vt0.c1)) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((SUBSTR(vt0.c0, vt0.c1)) BETWEEN (TIME(vt0.c0, vt0.c0, vt0.c1)) AND (x''))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((SUBSTR(vt0.c0, vt0.c1)) BETWEEN (TIME(vt0.c0, vt0.c0, vt0.c1)) AND (x'')));
SELECT * FROM vt0 WHERE (CAST((vt0.c1 IN ()) AS NUMERIC)) ORDER BY LOWER(vt0.c1) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c1 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY LOWER(vt0.c1) COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST((vt0.c1 IN ()) AS NUMERIC)) ORDER BY LOWER(vt0.c1) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c1 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY LOWER(vt0.c1) COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST((vt0.c1 IN ()) AS NUMERIC)) ORDER BY LOWER(vt0.c1) COLLATE RTRIM ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 WHERE (((json_array_length(rt0.c1)) IS TRUE)) ORDER BY (+ (((('')) NOT BETWEEN ((x'')) AND ((v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((json_array_length(rt0.c1)) IS TRUE)) IS TRUE)  as count FROM v0, rt0 ORDER BY (+ (((('')) NOT BETWEEN ((x'')) AND ((v0.c0))))) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((json_array_length(rt0.c1)) IS TRUE)) ORDER BY (+ (((('')) NOT BETWEEN ((x'')) AND ((v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((json_array_length(rt0.c1)) IS TRUE)) IS TRUE)  as count FROM v0, rt0 ORDER BY (+ (((('')) NOT BETWEEN ((x'')) AND ((v0.c0))))) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((json_array_length(rt0.c1)) IS TRUE)) ORDER BY (+ (((('')) NOT BETWEEN ((x'')) AND ((v0.c0))))) DESC;
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (CAST((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) AS REAL)) ORDER BY (((rt0.c2, vt0.c0, rt0.c0)) BETWEEN ((CASE x''  WHEN v0.c0 THEN NULL END, LAST_INSERT_ROWID(), NULL)) AND (((((vt0.c1, '-1216629239', rt0.c1)) BETWEEN ((vt0.c1, rt0.c2, 0.24059400612917703)) AND ((v0.c0, '715269126', v0.c0))), ((((((((rt0.c1)OR(v0.c0)))AND(rt0.c2)))OR(vt0.c1)))OR(v0.c0)), ((v0.c0)|(rt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) AS REAL)) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (((rt0.c2, vt0.c0, rt0.c0)) BETWEEN ((CASE x''  WHEN v0.c0 THEN NULL END, LAST_INSERT_ROWID(), NULL)) AND (((((vt0.c1, '-1216629239', rt0.c1)) BETWEEN ((vt0.c1, rt0.c2, 0.24059400612917703)) AND ((v0.c0, '715269126', v0.c0))), ((((((((rt0.c1)OR(v0.c0)))AND(rt0.c2)))OR(vt0.c1)))OR(v0.c0)), ((v0.c0)|(rt0.c0))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (CAST((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) AS REAL)) ORDER BY (((rt0.c2, vt0.c0, rt0.c0)) BETWEEN ((CASE x''  WHEN v0.c0 THEN NULL END, LAST_INSERT_ROWID(), NULL)) AND (((((vt0.c1, '-1216629239', rt0.c1)) BETWEEN ((vt0.c1, rt0.c2, 0.24059400612917703)) AND ((v0.c0, '715269126', v0.c0))), ((((((((rt0.c1)OR(v0.c0)))AND(rt0.c2)))OR(vt0.c1)))OR(v0.c0)), ((v0.c0)|(rt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) AS REAL)) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (((rt0.c2, vt0.c0, rt0.c0)) BETWEEN ((CASE x''  WHEN v0.c0 THEN NULL END, LAST_INSERT_ROWID(), NULL)) AND (((((vt0.c1, '-1216629239', rt0.c1)) BETWEEN ((vt0.c1, rt0.c2, 0.24059400612917703)) AND ((v0.c0, '715269126', v0.c0))), ((((((((rt0.c1)OR(v0.c0)))AND(rt0.c2)))OR(vt0.c1)))OR(v0.c0)), ((v0.c0)|(rt0.c0))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (CAST((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) AS REAL)) ORDER BY (((rt0.c2, vt0.c0, rt0.c0)) BETWEEN ((CASE x''  WHEN v0.c0 THEN NULL END, LAST_INSERT_ROWID(), NULL)) AND (((((vt0.c1, '-1216629239', rt0.c1)) BETWEEN ((vt0.c1, rt0.c2, 0.24059400612917703)) AND ((v0.c0, '715269126', v0.c0))), ((((((((rt0.c1)OR(v0.c0)))AND(rt0.c2)))OR(vt0.c1)))OR(v0.c0)), ((v0.c0)|(rt0.c0))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (0.6925018307231366 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((0.6925018307231366 COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (0.6925018307231366 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((0.6925018307231366 COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (0.6925018307231366 COLLATE BINARY);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON SQLITE_COMPILEOPTION_USED(CAST(rt0.c1 AS TEXT)) WHERE (LIKELY((+ (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((+ (rt0.c0)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON SQLITE_COMPILEOPTION_USED(CAST(rt0.c1 AS TEXT)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON SQLITE_COMPILEOPTION_USED(CAST(rt0.c1 AS TEXT)) WHERE (LIKELY((+ (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((+ (rt0.c0)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON SQLITE_COMPILEOPTION_USED(CAST(rt0.c1 AS TEXT)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON SQLITE_COMPILEOPTION_USED(CAST(rt0.c1 AS TEXT)) WHERE (LIKELY((+ (rt0.c0))));
SELECT ALL * FROM rt0 WHERE (((rt0.c1) NOTNULL) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOTNULL) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1) NOTNULL) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOTNULL) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1) NOTNULL) COLLATE BINARY COLLATE RTRIM);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((- (CAST(rt0.c2 AS BLOB)))) ORDER BY CAST(CAST(rt0.c2 AS TEXT) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY CAST(CAST(rt0.c2 AS TEXT) AS REAL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((- (CAST(rt0.c2 AS BLOB)))) ORDER BY CAST(CAST(rt0.c2 AS TEXT) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY CAST(CAST(rt0.c2 AS TEXT) AS REAL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((- (CAST(rt0.c2 AS BLOB)))) ORDER BY CAST(CAST(rt0.c2 AS TEXT) AS REAL) ASC  NULLS FIRST;
SELECT ALL * FROM v0, vt0 FULL OUTER JOIN rt0 ON CASE ((v0.c0)%(vt0.c0))  WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((v0.c0))<((vt0.c0))) ELSE ((vt0.c1)>=(vt0.c1)) END WHERE (((((rt0.c0) IS FALSE))LIKE((vt0.c1 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS FALSE))LIKE((vt0.c1 IN (rt0.c2))))) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN rt0 ON CASE ((v0.c0)%(vt0.c0))  WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((v0.c0))<((vt0.c0))) ELSE ((vt0.c1)>=(vt0.c1)) END);
SELECT ALL * FROM v0, vt0 FULL OUTER JOIN rt0 ON CASE ((v0.c0)%(vt0.c0))  WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((v0.c0))<((vt0.c0))) ELSE ((vt0.c1)>=(vt0.c1)) END WHERE (((((rt0.c0) IS FALSE))LIKE((vt0.c1 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS FALSE))LIKE((vt0.c1 IN (rt0.c2))))) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN rt0 ON CASE ((v0.c0)%(vt0.c0))  WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((v0.c0))<((vt0.c0))) ELSE ((vt0.c1)>=(vt0.c1)) END);
SELECT ALL * FROM v0, vt0 FULL OUTER JOIN rt0 ON CASE ((v0.c0)%(vt0.c0))  WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((v0.c0))<((vt0.c0))) ELSE ((vt0.c1)>=(vt0.c1)) END WHERE (((((rt0.c0) IS FALSE))LIKE((vt0.c1 IN (rt0.c2)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0)OR(v0.c0)))) AND ((((v0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((v0.c0)OR(v0.c0)))) AND ((((v0.c0) IS FALSE))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0)OR(v0.c0)))) AND ((((v0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((v0.c0)OR(v0.c0)))) AND ((((v0.c0) IS FALSE))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0)OR(v0.c0)))) AND ((((v0.c0) IS FALSE)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((vt0.c1 COLLATE RTRIM)LIKE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.4542996436631337 END))) ORDER BY SQLITE_SOURCE_ID() DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE RTRIM)LIKE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.4542996436631337 END))) IS TRUE)  as count FROM vt0, v0 ORDER BY SQLITE_SOURCE_ID() DESC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((vt0.c1 COLLATE RTRIM)LIKE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.4542996436631337 END))) ORDER BY SQLITE_SOURCE_ID() DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE RTRIM)LIKE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.4542996436631337 END))) IS TRUE)  as count FROM vt0, v0 ORDER BY SQLITE_SOURCE_ID() DESC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((vt0.c1 COLLATE RTRIM)LIKE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.4542996436631337 END))) ORDER BY SQLITE_SOURCE_ID() DESC;
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)%(((vt0.c1)|(vt0.c0))))) ORDER BY UNLIKELY(DISTINCT vt0.c0) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)%(((vt0.c1)|(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(DISTINCT vt0.c0) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)%(((vt0.c1)|(vt0.c0))))) ORDER BY UNLIKELY(DISTINCT vt0.c0) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)%(((vt0.c1)|(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(DISTINCT vt0.c0) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)%(((vt0.c1)|(vt0.c0))))) ORDER BY UNLIKELY(DISTINCT vt0.c0) COLLATE RTRIM DESC;
SELECT ALL * FROM v0, rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (rt0.c0);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c2)) BETWEEN ((((((rt0.c2)AND(vt0.c0)))AND(rt0.c0)))) AND ((((rt0.c2) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((((rt0.c2)AND(vt0.c0)))AND(rt0.c0)))) AND ((((rt0.c2) NOT NULL))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c2)) BETWEEN ((((((rt0.c2)AND(vt0.c0)))AND(rt0.c0)))) AND ((((rt0.c2) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((((rt0.c2)AND(vt0.c0)))AND(rt0.c0)))) AND ((((rt0.c2) NOT NULL))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c2)) BETWEEN ((((((rt0.c2)AND(vt0.c0)))AND(rt0.c0)))) AND ((((rt0.c2) NOT NULL)))));
SELECT COUNT(*) FROM rt0 WHERE (CAST((NOT (rt0.c0)) AS INTEGER)) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC);
SELECT COUNT(*) FROM rt0 WHERE (CAST((NOT (rt0.c0)) AS INTEGER)) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC);
SELECT COUNT(*) FROM rt0 WHERE (CAST((NOT (rt0.c0)) AS INTEGER)) ORDER BY rt0.c2 DESC;
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY v0.c0 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY v0.c0 COLLATE RTRIM);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY v0.c0 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY v0.c0 COLLATE RTRIM);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY v0.c0 COLLATE RTRIM;
SELECT ALL * FROM v0 WHERE ((((('j,Q6tg|P' COLLATE RTRIM)OR((((v0.c0))!=((v0.c0))))))OR(((v0.c0) IS TRUE)))) ORDER BY CAST(CAST(v0.c0 AS NUMERIC) AS TEXT);
SELECT SUM(count) FROM (SELECT (((((('j,Q6tg|P' COLLATE RTRIM)OR((((v0.c0))<>((v0.c0))))))OR(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY CAST(CAST(v0.c0 AS NUMERIC) AS TEXT));
SELECT ALL * FROM v0 WHERE ((((('j,Q6tg|P' COLLATE RTRIM)OR((((v0.c0))!=((v0.c0))))))OR(((v0.c0) IS TRUE)))) ORDER BY CAST(CAST(v0.c0 AS NUMERIC) AS TEXT);
SELECT SUM(count) FROM (SELECT (((((('j,Q6tg|P' COLLATE RTRIM)OR((((v0.c0))<>((v0.c0))))))OR(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY CAST(CAST(v0.c0 AS NUMERIC) AS TEXT));
SELECT ALL * FROM v0 WHERE ((((('j,Q6tg|P' COLLATE RTRIM)OR((((v0.c0))!=((v0.c0))))))OR(((v0.c0) IS TRUE)))) ORDER BY CAST(CAST(v0.c0 AS NUMERIC) AS TEXT);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0) ISNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) IS FALSE)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0) ISNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) IS FALSE)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0) ISNULL)) IS FALSE));
SELECT COUNT(*) FROM v0 WHERE (CASE '503731830' COLLATE NOCASE  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (~ (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '503731830' COLLATE NOCASE  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (~ (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE '503731830' COLLATE NOCASE  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (~ (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '503731830' COLLATE NOCASE  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (~ (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE '503731830' COLLATE NOCASE  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (~ (v0.c0)) END);
SELECT ALL * FROM vt0, v0 WHERE ((NULL IN ())) ORDER BY (((x'd638ae29')) NOT BETWEEN (((vt0.c1 IN ()))) AND ((vt0.c0 COLLATE BINARY))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY (((x'd638ae29')) NOT BETWEEN (((vt0.c1 IN ()))) AND ((vt0.c0 COLLATE BINARY))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((NULL IN ())) ORDER BY (((x'd638ae29')) NOT BETWEEN (((vt0.c1 IN ()))) AND ((vt0.c0 COLLATE BINARY))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY (((x'd638ae29')) NOT BETWEEN (((vt0.c1 IN ()))) AND ((vt0.c0 COLLATE BINARY))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((NULL IN ())) ORDER BY (((x'd638ae29')) NOT BETWEEN (((vt0.c1 IN ()))) AND ((vt0.c0 COLLATE BINARY))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1))<((rt0.c0))))&(((rt0.c2)==(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))<((rt0.c0))))&(((rt0.c2)==(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1))<((rt0.c0))))&(((rt0.c2)==(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))<((rt0.c0))))&(((rt0.c2)==(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1))<((rt0.c0))))&(((rt0.c2)==(rt0.c2)))));
SELECT ALL * FROM rt0, v0 WHERE (((CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)&(((rt0.c0) NOTNULL)))) ORDER BY ((((((rt0.c0) IS TRUE))OR((~ (rt0.c1)))))OR(v0.c0 COLLATE RTRIM)) DESC, ((((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))<=(rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)&(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((rt0.c0) IS TRUE))OR((~ (rt0.c1)))))OR(v0.c0 COLLATE RTRIM)) DESC, ((((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))<=(rt0.c0)));
SELECT ALL * FROM rt0, v0 WHERE (((CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)&(((rt0.c0) NOTNULL)))) ORDER BY ((((((rt0.c0) IS TRUE))OR((~ (rt0.c1)))))OR(v0.c0 COLLATE RTRIM)) DESC, ((((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))<=(rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)&(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((rt0.c0) IS TRUE))OR((~ (rt0.c1)))))OR(v0.c0 COLLATE RTRIM)) DESC, ((((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))<=(rt0.c0)));
SELECT ALL * FROM rt0, v0 WHERE (((CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)&(((rt0.c0) NOTNULL)))) ORDER BY ((((((rt0.c0) IS TRUE))OR((~ (rt0.c1)))))OR(v0.c0 COLLATE RTRIM)) DESC, ((((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))<=(rt0.c0));
SELECT ALL * FROM vt0, v0, rt0 WHERE (CAST(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(vt0.c1)))OR(x'')) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(vt0.c1)))OR(x'')) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (CAST(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(vt0.c1)))OR(x'')) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(vt0.c1)))OR(x'')) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (CAST(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(vt0.c1)))OR(x'')) AS NUMERIC));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((CASE rt0.c0  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c2 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c2 END) NOTNULL)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((CASE rt0.c0  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c2 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c2 END) NOTNULL)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((CASE rt0.c0  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c2 END) NOTNULL));
SELECT * FROM vt0, v0 WHERE (((v0.c0 COLLATE BINARY)+(CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY)+(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((v0.c0 COLLATE BINARY)+(CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY)+(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((v0.c0 COLLATE BINARY)+(CAST(v0.c0 AS BLOB))));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CAST(vt0.c1 AS TEXT)) ORDER BY (('zU[	BxZ6\n') BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS TEXT)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (('zU[	BxZ6\n') BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CAST(vt0.c1 AS TEXT)) ORDER BY (('zU[	BxZ6\n') BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS TEXT)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (('zU[	BxZ6\n') BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CAST(vt0.c1 AS TEXT)) ORDER BY (('zU[	BxZ6\n') BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT * FROM v0 WHERE ((v0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((v0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((v0.c0 COLLATE BINARY IN ()));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((0.24102043791781835 COLLATE RTRIM IN (vt0.c0))) ORDER BY ((((rt0.c2)<(rt0.c2)))/(CAST(vt0.c0 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((0.24102043791781835 COLLATE RTRIM IN (vt0.c0))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c2)<(rt0.c2)))/(CAST(vt0.c0 AS TEXT))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((0.24102043791781835 COLLATE RTRIM IN (vt0.c0))) ORDER BY ((((rt0.c2)<(rt0.c2)))/(CAST(vt0.c0 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((0.24102043791781835 COLLATE RTRIM IN (vt0.c0))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c2)<(rt0.c2)))/(CAST(vt0.c0 AS TEXT))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((0.24102043791781835 COLLATE RTRIM IN (vt0.c0))) ORDER BY ((((rt0.c2)<(rt0.c2)))/(CAST(vt0.c0 AS TEXT))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c1)AND(rt0.c2)))) AND ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)))) ORDER BY ((rt0.c0 COLLATE NOCASE)||(rt0.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((((rt0.c1)AND(rt0.c2)))) AND ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE NOCASE)||(rt0.c2)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c1)AND(rt0.c2)))) AND ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)))) ORDER BY ((rt0.c0 COLLATE NOCASE)||(rt0.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((((rt0.c1)AND(rt0.c2)))) AND ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE NOCASE)||(rt0.c2)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c1)AND(rt0.c2)))) AND ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)))) ORDER BY ((rt0.c0 COLLATE NOCASE)||(rt0.c2)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('-1216629239') ORDER BY (((rt0.c0)) NOT BETWEEN ((((vt0.c0)||(rt0.c1)))) AND (((rt0.c2 IN ())))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-1216629239') IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((((vt0.c0)||(rt0.c1)))) AND (((rt0.c2 IN ())))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('-1216629239') ORDER BY (((rt0.c0)) NOT BETWEEN ((((vt0.c0)||(rt0.c1)))) AND (((rt0.c2 IN ())))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-1216629239') IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((((vt0.c0)||(rt0.c1)))) AND (((rt0.c2 IN ())))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('-1216629239') ORDER BY (((rt0.c0)) NOT BETWEEN ((((vt0.c0)||(rt0.c1)))) AND (((rt0.c2 IN ())))) DESC  NULLS FIRST;
SELECT * FROM rt0, vt0 NATURAL JOIN v0 WHERE (CAST((((rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN ((vt0.c1, v0.c0, rt0.c0)) AND ((0.7329249657579001, rt0.c2, rt0.c2))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN ((vt0.c1, v0.c0, rt0.c0)) AND ((0.7329249657579001, rt0.c2, rt0.c2))) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN v0);
SELECT * FROM rt0, vt0 NATURAL JOIN v0 WHERE (CAST((((rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN ((vt0.c1, v0.c0, rt0.c0)) AND ((0.7329249657579001, rt0.c2, rt0.c2))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN ((vt0.c1, v0.c0, rt0.c0)) AND ((0.7329249657579001, rt0.c2, rt0.c2))) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN v0);
SELECT * FROM rt0, vt0 NATURAL JOIN v0 WHERE (CAST((((rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN ((vt0.c1, v0.c0, rt0.c0)) AND ((0.7329249657579001, rt0.c2, rt0.c2))) AS BLOB));
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt0 NATURAL JOIN v0 WHERE ((((TRIM(rt0.c0, rt0.c2)))=(((rt0.c0 IN ()))))) ORDER BY CAST(CASE WHEN 0.6925018307231366 THEN v0.c0 END AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((TRIM(rt0.c0, rt0.c2)))=(((rt0.c0 IN ()))))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN v0 ORDER BY CAST(CASE WHEN 0.6925018307231366 THEN v0.c0 END AS INTEGER) ASC);
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt0 NATURAL JOIN v0 WHERE ((((TRIM(rt0.c0, rt0.c2)))=(((rt0.c0 IN ()))))) ORDER BY CAST(CASE WHEN 0.6925018307231366 THEN v0.c0 END AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((TRIM(rt0.c0, rt0.c2)))=(((rt0.c0 IN ()))))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN v0 ORDER BY CAST(CASE WHEN 0.6925018307231366 THEN v0.c0 END AS INTEGER) ASC);
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt0 NATURAL JOIN v0 WHERE ((((TRIM(rt0.c0, rt0.c2)))=(((rt0.c0 IN ()))))) ORDER BY CAST(CASE WHEN 0.6925018307231366 THEN v0.c0 END AS INTEGER) ASC;
SELECT * FROM rt0 WHERE (((HEX(DISTINCT rt0.c2)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT rt0.c2)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((HEX(DISTINCT rt0.c2)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT rt0.c2)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((HEX(DISTINCT rt0.c2)) IS TRUE));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((((json_quote(vt0.c0))OR(rt0.c2 COLLATE RTRIM)))OR('-1289985407')) FULL OUTER JOIN rt0 ON ((CASE WHEN v0.c0 THEN rt0.c2 ELSE vt0.c1 END) IS FALSE) WHERE (CAST(v0.c0 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((((json_quote(vt0.c0))OR(rt0.c2 COLLATE RTRIM)))OR('-1289985407')) FULL OUTER JOIN rt0 ON ((CASE WHEN v0.c0 THEN rt0.c2 ELSE vt0.c1 END) IS FALSE));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((((json_quote(vt0.c0))OR(rt0.c2 COLLATE RTRIM)))OR('-1289985407')) FULL OUTER JOIN rt0 ON ((CASE WHEN v0.c0 THEN rt0.c2 ELSE vt0.c1 END) IS FALSE) WHERE (CAST(v0.c0 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((((json_quote(vt0.c0))OR(rt0.c2 COLLATE RTRIM)))OR('-1289985407')) FULL OUTER JOIN rt0 ON ((CASE WHEN v0.c0 THEN rt0.c2 ELSE vt0.c1 END) IS FALSE));
SELECT * FROM rt0 WHERE ((('')>(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((('')>(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((('')>(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((('')>(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((('')>(rt0.c1)) COLLATE BINARY);
SELECT * FROM rt0 WHERE ((((NOT (rt0.c1))) NOT BETWEEN (((rt0.c2)<<(rt0.c2))) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) ORDER BY ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1 COLLATE BINARY)))AND((NOT (rt0.c2)))), ((('209887025')) NOT BETWEEN ((rt0.c1 COLLATE NOCASE)) AND (((rt0.c2 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c1))) NOT BETWEEN (((rt0.c2)<<(rt0.c2))) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1 COLLATE BINARY)))AND((NOT (rt0.c2)))), ((('209887025')) NOT BETWEEN ((rt0.c1 COLLATE NOCASE)) AND (((rt0.c2 IN ())))) ASC);
SELECT * FROM rt0 WHERE ((((NOT (rt0.c1))) NOT BETWEEN (((rt0.c2)<<(rt0.c2))) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) ORDER BY ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1 COLLATE BINARY)))AND((NOT (rt0.c2)))), ((('209887025')) NOT BETWEEN ((rt0.c1 COLLATE NOCASE)) AND (((rt0.c2 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c1))) NOT BETWEEN (((rt0.c2)<<(rt0.c2))) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1 COLLATE BINARY)))AND((NOT (rt0.c2)))), ((('209887025')) NOT BETWEEN ((rt0.c1 COLLATE NOCASE)) AND (((rt0.c2 IN ())))) ASC);
SELECT * FROM rt0 WHERE ((((NOT (rt0.c1))) NOT BETWEEN (((rt0.c2)<<(rt0.c2))) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) ORDER BY ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1 COLLATE BINARY)))AND((NOT (rt0.c2)))), ((('209887025')) NOT BETWEEN ((rt0.c1 COLLATE NOCASE)) AND (((rt0.c2 IN ())))) ASC;
SELECT ALL * FROM rt0, v0, vt0 WHERE (CAST(rt0.c2 AS TEXT)) ORDER BY TRIM((NOT (v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS TEXT)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY TRIM((NOT (v0.c0))) DESC);
SELECT ALL * FROM rt0, v0, vt0 WHERE (CAST(rt0.c2 AS TEXT)) ORDER BY TRIM((NOT (v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS TEXT)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY TRIM((NOT (v0.c0))) DESC);
SELECT ALL * FROM rt0, v0, vt0 WHERE (CAST(rt0.c2 AS TEXT)) ORDER BY TRIM((NOT (v0.c0))) DESC;
SELECT * FROM v0, vt0, rt0 WHERE ((((rt0.c1 IN ())) BETWEEN (((rt0.c2) IS TRUE)) AND ((~ (vt0.c1))))) ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))) NOTNULL) DESC  NULLS FIRST, (((x'' IN ())) NOTNULL) ASC, (((NOT (v0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) BETWEEN (((rt0.c2) IS TRUE)) AND ((~ (vt0.c1))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))) NOTNULL) DESC  NULLS FIRST, (((x'' IN ())) NOTNULL) ASC, (((NOT (v0.c0))) IS FALSE));
SELECT * FROM v0, vt0, rt0 WHERE ((((rt0.c1 IN ())) BETWEEN (((rt0.c2) IS TRUE)) AND ((~ (vt0.c1))))) ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))) NOTNULL) DESC  NULLS FIRST, (((x'' IN ())) NOTNULL) ASC, (((NOT (v0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) BETWEEN (((rt0.c2) IS TRUE)) AND ((~ (vt0.c1))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))) NOTNULL) DESC  NULLS FIRST, (((x'' IN ())) NOTNULL) ASC, (((NOT (v0.c0))) IS FALSE));
SELECT * FROM v0, vt0, rt0 WHERE ((((rt0.c1 IN ())) BETWEEN (((rt0.c2) IS TRUE)) AND ((~ (vt0.c1))))) ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))) NOTNULL) DESC  NULLS FIRST, (((x'' IN ())) NOTNULL) ASC, (((NOT (v0.c0))) IS FALSE);
SELECT * FROM rt0 WHERE ((((((rt0.c0))>((rt0.c0))))<(((rt0.c0)<>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))>((rt0.c0))))<(((rt0.c0)<>(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c0))>((rt0.c0))))<(((rt0.c0)<>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))>((rt0.c0))))<(((rt0.c0)<>(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c0))>((rt0.c0))))<(((rt0.c0)<>(rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST(vt0.c1 AS REAL)) BETWEEN ((NOT (vt0.c1))) AND ((rt0.c2 IN (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS REAL)) BETWEEN ((NOT (vt0.c1))) AND ((rt0.c2 IN (vt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST(vt0.c1 AS REAL)) BETWEEN ((NOT (vt0.c1))) AND ((rt0.c2 IN (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS REAL)) BETWEEN ((NOT (vt0.c1))) AND ((rt0.c2 IN (vt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST(vt0.c1 AS REAL)) BETWEEN ((NOT (vt0.c1))) AND ((rt0.c2 IN (vt0.c1)))));
SELECT ALL * FROM v0, vt0, rt0 WHERE ('3.737255174849352E-4') ORDER BY ((((vt0.c0)&(v0.c0))) BETWEEN (COALESCE(vt0.c1, rt0.c0)) AND (((vt0.c1)<(3.737255174849352E-4)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('3.737255174849352E-4') IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((vt0.c0)&(v0.c0))) BETWEEN (COALESCE(vt0.c1, rt0.c0)) AND (((vt0.c1)<(3.737255174849352E-4)))) ASC);
SELECT ALL * FROM v0, vt0, rt0 WHERE ('3.737255174849352E-4') ORDER BY ((((vt0.c0)&(v0.c0))) BETWEEN (COALESCE(vt0.c1, rt0.c0)) AND (((vt0.c1)<(3.737255174849352E-4)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('3.737255174849352E-4') IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((vt0.c0)&(v0.c0))) BETWEEN (COALESCE(vt0.c1, rt0.c0)) AND (((vt0.c1)<(3.737255174849352E-4)))) ASC);
SELECT ALL * FROM v0, vt0, rt0 WHERE ('3.737255174849352E-4') ORDER BY ((((vt0.c0)&(v0.c0))) BETWEEN (COALESCE(vt0.c1, rt0.c0)) AND (((vt0.c1)<(3.737255174849352E-4)))) ASC;
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((('953444544') BETWEEN (rt0.c0) AND (((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((('953444544') BETWEEN (rt0.c0) AND (((rt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((('953444544') BETWEEN (rt0.c0) AND (((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((('953444544') BETWEEN (rt0.c0) AND (((rt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((('953444544') BETWEEN (rt0.c0) AND (((rt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(((vt0.c1) NOTNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(((vt0.c1) NOTNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(((vt0.c1) NOTNULL) AS INTEGER));
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST((+ (vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST((+ (vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST((+ (vt0.c1)) AS NUMERIC));
SELECT * FROM rt0, vt0, v0 WHERE (1444518242);
SELECT SUM(count) FROM (SELECT ((1444518242) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (1444518242);
SELECT SUM(count) FROM (SELECT ((1444518242) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (1444518242);
SELECT * FROM v0 WHERE (((((v0.c0)>>(v0.c0)))IS(((v0.c0) BETWEEN (v0.c0) AND (-6.67912682E8))))) ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), v0.c0 COLLATE RTRIM, ((v0.c0)*(0.2345932551600428)))) AND (((v0.c0 IN ()), ((v0.c0) IS FALSE), LIKELY(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>>(v0.c0)))IS(((v0.c0) BETWEEN (v0.c0) AND (-6.67912682E8))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), v0.c0 COLLATE RTRIM, ((v0.c0)*(0.2345932551600428)))) AND (((v0.c0 IN ()), ((v0.c0) IS FALSE), LIKELY(v0.c0))))  NULLS FIRST);
SELECT * FROM v0 WHERE (((((v0.c0)>>(v0.c0)))IS(((v0.c0) BETWEEN (v0.c0) AND (-6.67912682E8))))) ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), v0.c0 COLLATE RTRIM, ((v0.c0)*(0.2345932551600428)))) AND (((v0.c0 IN ()), ((v0.c0) IS FALSE), LIKELY(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>>(v0.c0)))IS(((v0.c0) BETWEEN (v0.c0) AND (-6.67912682E8))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), v0.c0 COLLATE RTRIM, ((v0.c0)*(0.2345932551600428)))) AND (((v0.c0 IN ()), ((v0.c0) IS FALSE), LIKELY(v0.c0))))  NULLS FIRST);
SELECT * FROM v0 WHERE (((((v0.c0)>>(v0.c0)))IS(((v0.c0) BETWEEN (v0.c0) AND (-6.67912682E8))))) ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), v0.c0 COLLATE RTRIM, ((v0.c0)*(0.2345932551600428)))) AND (((v0.c0 IN ()), ((v0.c0) IS FALSE), LIKELY(v0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((('') NOT NULL))<>((('덓u7')>(vt0.c0))))) ORDER BY UPPER(((((rt0.c0)AND(rt0.c2)))OR(vt0.c0))) ASC, (json_object('-667912682', rt0.c0, v0.c0, rt0.c2) IN (0.06662562020551133));
SELECT SUM(count) FROM (SELECT ALL (((((('') NOT NULL))<>((('덓u7')>(vt0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY UPPER(((((rt0.c0)AND(rt0.c2)))OR(vt0.c0))) ASC, (json_object('-667912682', rt0.c0, v0.c0, rt0.c2) IN (0.06662562020551133)));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((('') NOT NULL))<>((('덓u7')>(vt0.c0))))) ORDER BY UPPER(((((rt0.c0)AND(rt0.c2)))OR(vt0.c0))) ASC, (json_object('-667912682', rt0.c0, v0.c0, rt0.c2) IN (0.06662562020551133));
SELECT SUM(count) FROM (SELECT ALL (((((('') NOT NULL))<>((('덓u7')>(vt0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY UPPER(((((rt0.c0)AND(rt0.c2)))OR(vt0.c0))) ASC, (json_object('-667912682', rt0.c0, v0.c0, rt0.c2) IN (0.06662562020551133)));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((('') NOT NULL))<>((('덓u7')>(vt0.c0))))) ORDER BY UPPER(((((rt0.c0)AND(rt0.c2)))OR(vt0.c0))) ASC, (json_object('-667912682', rt0.c0, v0.c0, rt0.c2) IN (0.06662562020551133));
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) IN ()));
SELECT ALL * FROM rt0 WHERE ((NOT (CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT ALL * FROM vt0, v0 INNER JOIN rt0 ON DATETIME('-373863992' COLLATE NOCASE, ((v0.c0) NOT BETWEEN (vt0.c0) AND (NULL)), ((rt0.c2)>>(vt0.c0))) WHERE (((vt0.c1)-((((v0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)-((((v0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON DATETIME('-373863992' COLLATE NOCASE, ((v0.c0) NOT BETWEEN (vt0.c0) AND (NULL)), ((rt0.c2)>>(vt0.c0))));
SELECT ALL * FROM vt0, v0 INNER JOIN rt0 ON DATETIME('-373863992' COLLATE NOCASE, ((v0.c0) NOT BETWEEN (vt0.c0) AND (NULL)), ((rt0.c2)>>(vt0.c0))) WHERE (((vt0.c1)-((((v0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)-((((v0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON DATETIME('-373863992' COLLATE NOCASE, ((v0.c0) NOT BETWEEN (vt0.c0) AND (NULL)), ((rt0.c2)>>(vt0.c0))));
SELECT ALL * FROM vt0, v0 INNER JOIN rt0 ON DATETIME('-373863992' COLLATE NOCASE, ((v0.c0) NOT BETWEEN (vt0.c0) AND (NULL)), ((rt0.c2)>>(vt0.c0))) WHERE (((vt0.c1)-((((v0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)=(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'e75c')) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE NULL END ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)=(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'e75c')) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE NULL END ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)=(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'e75c')) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE NULL END ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)=(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'e75c')) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE NULL END ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)=(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'e75c')) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE NULL END ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)==(((v0.c0)<<(x''))))) ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)==(((v0.c0)<<(x''))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)==(((v0.c0)<<(x''))))) ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)==(((v0.c0)<<(x''))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)==(((v0.c0)<<(x''))))) ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) IS FALSE)  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 CROSS JOIN v0 ON ((CAST(rt0.c1 AS REAL)) NOTNULL) WHERE ((((rt0.c2, rt0.c1, v0.c0)) NOT BETWEEN ((0Xffffffffeadd5dc8, CASE WHEN rt0.c0 THEN v0.c0 END, ((((rt0.c0)OR(v0.c0)))OR(NULL)))) AND ((rt0.c2, CASE rt0.c1  WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c2 END, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c1, v0.c0)) NOT BETWEEN ((0xffffffffeadd5dc8, CASE WHEN rt0.c0 THEN v0.c0 END, ((((rt0.c0)OR(v0.c0)))OR(NULL)))) AND ((rt0.c2, CASE rt0.c1  WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c2 END, rt0.c1)))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN v0 ON ((CAST(rt0.c1 AS REAL)) NOTNULL));
SELECT ALL * FROM rt0, vt0 CROSS JOIN v0 ON ((CAST(rt0.c1 AS REAL)) NOTNULL) WHERE ((((rt0.c2, rt0.c1, v0.c0)) NOT BETWEEN ((0Xffffffffeadd5dc8, CASE WHEN rt0.c0 THEN v0.c0 END, ((((rt0.c0)OR(v0.c0)))OR(NULL)))) AND ((rt0.c2, CASE rt0.c1  WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c2 END, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c1, v0.c0)) NOT BETWEEN ((0xffffffffeadd5dc8, CASE WHEN rt0.c0 THEN v0.c0 END, ((((rt0.c0)OR(v0.c0)))OR(NULL)))) AND ((rt0.c2, CASE rt0.c1  WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c2 END, rt0.c1)))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN v0 ON ((CAST(rt0.c1 AS REAL)) NOTNULL));
SELECT ALL * FROM rt0, vt0 CROSS JOIN v0 ON ((CAST(rt0.c1 AS REAL)) NOTNULL) WHERE ((((rt0.c2, rt0.c1, v0.c0)) NOT BETWEEN ((0Xffffffffeadd5dc8, CASE WHEN rt0.c0 THEN v0.c0 END, ((((rt0.c0)OR(v0.c0)))OR(NULL)))) AND ((rt0.c2, CASE rt0.c1  WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c2 END, rt0.c1))));
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE ((((vt0.c0))<=((vt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<=((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE ((((vt0.c0))<=((vt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<=((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE ((((vt0.c0))<=((vt0.c0))) COLLATE RTRIM);
SELECT * FROM rt0 WHERE (CASE LIKELY(rt0.c1)  WHEN (((rt0.c2, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c0, rt0.c2))) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END ELSE ((rt0.c0) NOT BETWEEN (rt0.c2) AND ('-1216629239')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE LIKELY(rt0.c1)  WHEN (((rt0.c2, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c0, rt0.c2))) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END ELSE ((rt0.c0) NOT BETWEEN (rt0.c2) AND ('-1216629239')) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE LIKELY(rt0.c1)  WHEN (((rt0.c2, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c0, rt0.c2))) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END ELSE ((rt0.c0) NOT BETWEEN (rt0.c2) AND ('-1216629239')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE LIKELY(rt0.c1)  WHEN (((rt0.c2, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c0, rt0.c2))) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END ELSE ((rt0.c0) NOT BETWEEN (rt0.c2) AND ('-1216629239')) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE LIKELY(rt0.c1)  WHEN (((rt0.c2, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c0, rt0.c2))) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END ELSE ((rt0.c0) NOT BETWEEN (rt0.c2) AND ('-1216629239')) END);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) IS TRUE)) ORDER BY ((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))>=((((rt0.c1)) BETWEEN ((rt0.c1)) AND (('IOZ>r&vZE')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))>=((((rt0.c1)) BETWEEN ((rt0.c1)) AND (('IOZ>r&vZE')))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) IS TRUE)) ORDER BY ((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))>=((((rt0.c1)) BETWEEN ((rt0.c1)) AND (('IOZ>r&vZE')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))>=((((rt0.c1)) BETWEEN ((rt0.c1)) AND (('IOZ>r&vZE')))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) IS TRUE)) ORDER BY ((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))>=((((rt0.c1)) BETWEEN ((rt0.c1)) AND (('IOZ>r&vZE')))))  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE ((((+ (rt0.c1))) NOT BETWEEN ((NOT (rt0.c0))) AND (('' IN ())))) ORDER BY CAST(607027308 AS INTEGER);
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1))) NOT BETWEEN ((NOT (rt0.c0))) AND (('' IN ())))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(607027308 AS INTEGER));
SELECT ALL * FROM v0, rt0 WHERE ((((+ (rt0.c1))) NOT BETWEEN ((NOT (rt0.c0))) AND (('' IN ())))) ORDER BY CAST(607027308 AS INTEGER);
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1))) NOT BETWEEN ((NOT (rt0.c0))) AND (('' IN ())))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(607027308 AS INTEGER));
SELECT ALL * FROM v0, rt0 WHERE ((((+ (rt0.c1))) NOT BETWEEN ((NOT (rt0.c0))) AND (('' IN ())))) ORDER BY CAST(607027308 AS INTEGER);
SELECT ALL * FROM vt0, rt0 NATURAL JOIN v0 WHERE (((((((rt0.c0, rt0.c0, rt0.c2))<((rt0.c2, v0.c0, '-1415750495')))))>=(((((rt0.c2, '덓u7', rt0.c1))>((rt0.c0, rt0.c2, vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0, rt0.c0, rt0.c2))<((rt0.c2, v0.c0, '-1415750495')))))>=(((((rt0.c2, '덓u7', rt0.c1))>((rt0.c0, rt0.c2, vt0.c0))))))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED NATURAL JOIN v0);
SELECT ALL * FROM vt0, rt0 NATURAL JOIN v0 WHERE (((((((rt0.c0, rt0.c0, rt0.c2))<((rt0.c2, v0.c0, '-1415750495')))))>=(((((rt0.c2, '덓u7', rt0.c1))>((rt0.c0, rt0.c2, vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0, rt0.c0, rt0.c2))<((rt0.c2, v0.c0, '-1415750495')))))>=(((((rt0.c2, '덓u7', rt0.c1))>((rt0.c0, rt0.c2, vt0.c0))))))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED NATURAL JOIN v0);
SELECT ALL * FROM vt0, rt0 NATURAL JOIN v0 WHERE (((((((rt0.c0, rt0.c0, rt0.c2))<((rt0.c2, v0.c0, '-1415750495')))))>=(((((rt0.c2, '덓u7', rt0.c1))>((rt0.c0, rt0.c2, vt0.c0)))))));
SELECT * FROM vt0, v0, rt0 WHERE (((((((((rt0.c1)OR(1054056862)))AND(vt0.c0)))AND(CASE rt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c0 END)))OR(HEX(vt0.c1)))) ORDER BY CAST(rt0.c0 AS REAL);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)OR(1054056862)))AND(vt0.c0)))AND(CASE rt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c0 END)))OR(HEX(vt0.c1)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY CAST(rt0.c0 AS REAL));
SELECT * FROM vt0, v0, rt0 WHERE (((((((((rt0.c1)OR(1054056862)))AND(vt0.c0)))AND(CASE rt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c0 END)))OR(HEX(vt0.c1)))) ORDER BY CAST(rt0.c0 AS REAL);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)OR(1054056862)))AND(vt0.c0)))AND(CASE rt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c0 END)))OR(HEX(vt0.c1)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY CAST(rt0.c0 AS REAL));
SELECT * FROM vt0, v0, rt0 WHERE (((((((((rt0.c1)OR(1054056862)))AND(vt0.c0)))AND(CASE rt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c0 END)))OR(HEX(vt0.c1)))) ORDER BY CAST(rt0.c0 AS REAL);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((- ((((vt0.c1, vt0.c1, vt0.c0))!=((rt0.c1, rt0.c2, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt0.c1, vt0.c1, vt0.c0))!=((rt0.c1, rt0.c2, rt0.c0)))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((- ((((vt0.c1, vt0.c1, vt0.c0))!=((rt0.c1, rt0.c2, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt0.c1, vt0.c1, vt0.c0))!=((rt0.c1, rt0.c2, rt0.c0)))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((- ((((vt0.c1, vt0.c1, vt0.c0))!=((rt0.c1, rt0.c2, rt0.c0))))));
SELECT * FROM rt0 WHERE ((('-691790329')GLOB(((rt0.c2)==(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((('-691790329')GLOB(((rt0.c2)=(rt0.c2))))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT * FROM rt0 WHERE ((('-691790329')GLOB(((rt0.c2)==(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((('-691790329')GLOB(((rt0.c2)=(rt0.c2))))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT * FROM rt0 WHERE ((('-691790329')GLOB(((rt0.c2)==(rt0.c2)))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT COUNT(*) FROM vt0 WHERE (CASE TRIM(DISTINCT vt0.c1, vt0.c0)  WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c1 COLLATE BINARY ELSE vt0.c1 COLLATE NOCASE END) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(DISTINCT vt0.c1, vt0.c0)  WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c1 COLLATE BINARY ELSE vt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt0 ORDER BY x'' DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE TRIM(DISTINCT vt0.c1, vt0.c0)  WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c1 COLLATE BINARY ELSE vt0.c1 COLLATE NOCASE END) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(DISTINCT vt0.c1, vt0.c0)  WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c1 COLLATE BINARY ELSE vt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt0 ORDER BY x'' DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE TRIM(DISTINCT vt0.c1, vt0.c0)  WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c1 COLLATE BINARY ELSE vt0.c1 COLLATE NOCASE END) ORDER BY x'' DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((TRIM(rt0.c0, vt0.c1))*((+ (x''))))) ORDER BY ((((((rt0.c1)AND(vt0.c0)))AND(v0.c0))) NOT BETWEEN ((((vt0.c1, 0.03711105308763951, rt0.c2)) NOT BETWEEN ((x'', v0.c0, vt0.c0)) AND (('-2138884441', rt0.c0, rt0.c1)))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(rt0.c0, vt0.c1))*((+ (x''))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((((((rt0.c1)AND(vt0.c0)))AND(v0.c0))) NOT BETWEEN ((((vt0.c1, 0.03711105308763951, rt0.c2)) NOT BETWEEN ((x'', v0.c0, vt0.c0)) AND (('-2138884441', rt0.c0, rt0.c1)))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((TRIM(rt0.c0, vt0.c1))*((+ (x''))))) ORDER BY ((((((rt0.c1)AND(vt0.c0)))AND(v0.c0))) NOT BETWEEN ((((vt0.c1, 0.03711105308763951, rt0.c2)) NOT BETWEEN ((x'', v0.c0, vt0.c0)) AND (('-2138884441', rt0.c0, rt0.c1)))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(rt0.c0, vt0.c1))*((+ (x''))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((((((rt0.c1)AND(vt0.c0)))AND(v0.c0))) NOT BETWEEN ((((vt0.c1, 0.03711105308763951, rt0.c2)) NOT BETWEEN ((x'', v0.c0, vt0.c0)) AND (('-2138884441', rt0.c0, rt0.c1)))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((TRIM(rt0.c0, vt0.c1))*((+ (x''))))) ORDER BY ((((((rt0.c1)AND(vt0.c0)))AND(v0.c0))) NOT BETWEEN ((((vt0.c1, 0.03711105308763951, rt0.c2)) NOT BETWEEN ((x'', v0.c0, vt0.c0)) AND (('-2138884441', rt0.c0, rt0.c1)))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC;
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN (NOT (rt0.c1)) THEN rt0.c2 COLLATE NOCASE WHEN (rt0.c0 IN ()) THEN CAST(rt0.c0 AS TEXT) WHEN ((rt0.c2) IS FALSE) THEN (~ (rt0.c2)) END WHERE ((NOT (((rt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM v0 NOT INDEXED LEFT OUTER JOIN rt0 ON CASE WHEN (NOT (rt0.c1)) THEN rt0.c2 COLLATE NOCASE WHEN (rt0.c0 IN ()) THEN CAST(rt0.c0 AS TEXT) WHEN ((rt0.c2) IS FALSE) THEN (~ (rt0.c2)) END);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN (NOT (rt0.c1)) THEN rt0.c2 COLLATE NOCASE WHEN (rt0.c0 IN ()) THEN CAST(rt0.c0 AS TEXT) WHEN ((rt0.c2) IS FALSE) THEN (~ (rt0.c2)) END WHERE ((NOT (((rt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM v0 NOT INDEXED LEFT OUTER JOIN rt0 ON CASE WHEN (NOT (rt0.c1)) THEN rt0.c2 COLLATE NOCASE WHEN (rt0.c0 IN ()) THEN CAST(rt0.c0 AS TEXT) WHEN ((rt0.c2) IS FALSE) THEN (~ (rt0.c2)) END);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN (NOT (rt0.c1)) THEN rt0.c2 COLLATE NOCASE WHEN (rt0.c0 IN ()) THEN CAST(rt0.c0 AS TEXT) WHEN ((rt0.c2) IS FALSE) THEN (~ (rt0.c2)) END WHERE ((NOT (((rt0.c0) IS TRUE))));
SELECT ALL * FROM vt0, v0 WHERE ((((((vt0.c1)OR(v0.c0)))OR(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)OR(v0.c0)))OR(v0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((((vt0.c1)OR(v0.c0)))OR(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)OR(v0.c0)))OR(v0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((((vt0.c1)OR(v0.c0)))OR(v0.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)IS NOT(rt0.c0)))AND(((rt0.c0)||(rt0.c2)))))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)IS NOT(rt0.c0)))AND(((rt0.c0)||(rt0.c2)))))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)IS NOT(rt0.c0)))AND(((rt0.c0)||(rt0.c2)))))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)IS NOT(rt0.c0)))AND(((rt0.c0)||(rt0.c2)))))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)IS NOT(rt0.c0)))AND(((rt0.c0)||(rt0.c2)))))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT * FROM rt0, v0 WHERE (((CAST(rt0.c2 AS NUMERIC))LIKE(((rt0.c1) IS FALSE)))) ORDER BY (((- (rt0.c1)))*(CAST(rt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS NUMERIC))LIKE(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((- (rt0.c1)))*(CAST(rt0.c0 AS BLOB))));
SELECT * FROM rt0, v0 WHERE (((CAST(rt0.c2 AS NUMERIC))LIKE(((rt0.c1) IS FALSE)))) ORDER BY (((- (rt0.c1)))*(CAST(rt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS NUMERIC))LIKE(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((- (rt0.c1)))*(CAST(rt0.c0 AS BLOB))));
SELECT * FROM rt0, v0 WHERE (((CAST(rt0.c2 AS NUMERIC))LIKE(((rt0.c1) IS FALSE)))) ORDER BY (((- (rt0.c1)))*(CAST(rt0.c0 AS BLOB)));
SELECT ALL * FROM vt0, v0 WHERE ((NOT (((v0.c0) BETWEEN (vt0.c1) AND ('209887025')))));
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0) BETWEEN (vt0.c1) AND ('209887025'))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((NOT (((v0.c0) BETWEEN (vt0.c1) AND ('209887025')))));
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0) BETWEEN (vt0.c1) AND ('209887025'))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((NOT (((v0.c0) BETWEEN (vt0.c1) AND ('209887025')))));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (vt0.c1);
SELECT * FROM v0, rt0, vt0 WHERE (((rt0.c2) ISNULL)) ORDER BY (+ (((rt0.c1)IS(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) ISNULL)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (+ (((rt0.c1)IS(rt0.c0))))  NULLS LAST);
SELECT * FROM v0, rt0, vt0 WHERE (((rt0.c2) ISNULL)) ORDER BY (+ (((rt0.c1)IS(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) ISNULL)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (+ (((rt0.c1)IS(rt0.c0))))  NULLS LAST);
SELECT * FROM v0, rt0, vt0 WHERE (((rt0.c2) ISNULL)) ORDER BY (+ (((rt0.c1)IS(rt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE ((x'' IN ()) COLLATE RTRIM) ORDER BY (- (((rt0.c1)GLOB(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY (- (((rt0.c1)GLOB(v0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((x'' IN ()) COLLATE RTRIM) ORDER BY (- (((rt0.c1)GLOB(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY (- (((rt0.c1)GLOB(v0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((x'' IN ()) COLLATE RTRIM) ORDER BY (- (((rt0.c1)GLOB(v0.c0)))) DESC  NULLS LAST;
SELECT * FROM rt0, v0, vt0 WHERE (CAST(rt0.c1 COLLATE BINARY AS REAL)) ORDER BY (((~ (v0.c0))) NOT BETWEEN (CASE WHEN NULL THEN vt0.c0 ELSE NULL END) AND (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN x'3cb26995' WHEN vt0.c0 THEN rt0.c0 END)) ASC  NULLS LAST, (~ (vt0.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((~ (v0.c0))) NOT BETWEEN (CASE WHEN NULL THEN vt0.c0 ELSE NULL END) AND (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN x'3cb26995' WHEN vt0.c0 THEN rt0.c0 END)) ASC  NULLS LAST, (~ (vt0.c1)) ASC  NULLS FIRST);
SELECT * FROM rt0, v0, vt0 WHERE (CAST(rt0.c1 COLLATE BINARY AS REAL)) ORDER BY (((~ (v0.c0))) NOT BETWEEN (CASE WHEN NULL THEN vt0.c0 ELSE NULL END) AND (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN x'3cb26995' WHEN vt0.c0 THEN rt0.c0 END)) ASC  NULLS LAST, (~ (vt0.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((~ (v0.c0))) NOT BETWEEN (CASE WHEN NULL THEN vt0.c0 ELSE NULL END) AND (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN x'3cb26995' WHEN vt0.c0 THEN rt0.c0 END)) ASC  NULLS LAST, (~ (vt0.c1)) ASC  NULLS FIRST);
SELECT * FROM rt0, v0, vt0 WHERE (CAST(rt0.c1 COLLATE BINARY AS REAL)) ORDER BY (((~ (v0.c0))) NOT BETWEEN (CASE WHEN NULL THEN vt0.c0 ELSE NULL END) AND (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN x'3cb26995' WHEN vt0.c0 THEN rt0.c0 END)) ASC  NULLS LAST, (~ (vt0.c1)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON MIN((((vt0.c0, rt0.c2, rt0.c1, rt0.c2, vt0.c1)) NOT BETWEEN ((vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c1)) AND ((vt0.c0, x'', NULL, rt0.c1, vt0.c0))), ((((((((vt0.c0)OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c1)))AND(vt0.c1)), (- (rt0.c1)), CAST(vt0.c1 AS TEXT)) WHERE (((((rt0.c1)||(vt0.c1))) IS FALSE)) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)||(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON MIN((((vt0.c0, rt0.c2, rt0.c1, rt0.c2, vt0.c1)) NOT BETWEEN ((vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c1)) AND ((vt0.c0, x'', NULL, rt0.c1, vt0.c0))), ((((((((vt0.c0)OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c1)))AND(vt0.c1)), (- (rt0.c1)), CAST(vt0.c1 AS TEXT)) ORDER BY rt0.c2 DESC);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON MIN((((vt0.c0, rt0.c2, rt0.c1, rt0.c2, vt0.c1)) NOT BETWEEN ((vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c1)) AND ((vt0.c0, x'', NULL, rt0.c1, vt0.c0))), ((((((((vt0.c0)OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c1)))AND(vt0.c1)), (- (rt0.c1)), CAST(vt0.c1 AS TEXT)) WHERE (((((rt0.c1)||(vt0.c1))) IS FALSE)) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)||(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON MIN((((vt0.c0, rt0.c2, rt0.c1, rt0.c2, vt0.c1)) NOT BETWEEN ((vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c1)) AND ((vt0.c0, x'', NULL, rt0.c1, vt0.c0))), ((((((((vt0.c0)OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c1)))AND(vt0.c1)), (- (rt0.c1)), CAST(vt0.c1 AS TEXT)) ORDER BY rt0.c2 DESC);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON MIN((((vt0.c0, rt0.c2, rt0.c1, rt0.c2, vt0.c1)) NOT BETWEEN ((vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c1)) AND ((vt0.c0, x'', NULL, rt0.c1, vt0.c0))), ((((((((vt0.c0)OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c1)))AND(vt0.c1)), (- (rt0.c1)), CAST(vt0.c1 AS TEXT)) WHERE (((((rt0.c1)||(vt0.c1))) IS FALSE)) ORDER BY rt0.c2 DESC;
SELECT * FROM rt0 WHERE ((NOT (((rt0.c1) BETWEEN (-969348668) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1) BETWEEN (-969348668) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (((rt0.c1) BETWEEN (-969348668) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1) BETWEEN (-969348668) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (((rt0.c1) BETWEEN (-969348668) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<<(((vt0.c1)>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<<(((vt0.c1)>(vt0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<<(((vt0.c1)>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<<(((vt0.c1)>(vt0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<<(((vt0.c1)>(vt0.c0)))));
SELECT * FROM vt0 INNER JOIN rt0 ON ((NULL)IS NOT(highlight(vt0.c1, rt0.c1, vt0.c1, ''))) FULL OUTER JOIN v0 ON (((((((vt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((vt0.c0, vt0.c1, v0.c0))))AND((NOT (vt0.c0)))))AND(((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))) WHERE ((('' COLLATE RTRIM) NOTNULL)) ORDER BY CASE NULL  WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN (+ (0.18970320657058992)) ELSE ((rt0.c0)IS(rt0.c2)) END ASC  NULLS FIRST, (((rt0.c1 IN ())) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('' COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((NULL)IS NOT(highlight(vt0.c1, rt0.c1, vt0.c1, ''))) FULL OUTER JOIN v0 ON (((((((vt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((vt0.c0, vt0.c1, v0.c0))))AND((NOT (vt0.c0)))))AND(((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))) ORDER BY CASE NULL  WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN (+ (0.18970320657058992)) ELSE ((rt0.c0)IS(rt0.c2)) END ASC  NULLS FIRST, (((rt0.c1 IN ())) NOT NULL) DESC  NULLS LAST);
SELECT * FROM vt0 INNER JOIN rt0 ON ((NULL)IS NOT(highlight(vt0.c1, rt0.c1, vt0.c1, ''))) FULL OUTER JOIN v0 ON (((((((vt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((vt0.c0, vt0.c1, v0.c0))))AND((NOT (vt0.c0)))))AND(((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))) WHERE ((('' COLLATE RTRIM) NOTNULL)) ORDER BY CASE NULL  WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN (+ (0.18970320657058992)) ELSE ((rt0.c0)IS(rt0.c2)) END ASC  NULLS FIRST, (((rt0.c1 IN ())) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('' COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((NULL)IS NOT(highlight(vt0.c1, rt0.c1, vt0.c1, ''))) FULL OUTER JOIN v0 ON (((((((vt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((vt0.c0, vt0.c1, v0.c0))))AND((NOT (vt0.c0)))))AND(((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))) ORDER BY CASE NULL  WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN (+ (0.18970320657058992)) ELSE ((rt0.c0)IS(rt0.c2)) END ASC  NULLS FIRST, (((rt0.c1 IN ())) NOT NULL) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN CAST(vt0.c1 AS NUMERIC) WHEN NULLIF(DISTINCT -354591288, x'5b7f') THEN LOWER(vt0.c0) WHEN NULL THEN ((vt0.c1)|(vt0.c0)) END  NULLS LAST, ((((((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)AND((vt0.c0 IN ()))))OR(0.45967705594195063)))AND(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))))AND((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN CAST(vt0.c1 AS NUMERIC) WHEN NULLIF(DISTINCT -354591288, x'5b7f') THEN LOWER(vt0.c0) WHEN NULL THEN ((vt0.c1)|(vt0.c0)) END  NULLS LAST, ((((((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)AND((vt0.c0 IN ()))))OR(0.45967705594195063)))AND(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))))AND((vt0.c0 IN ())))  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN CAST(vt0.c1 AS NUMERIC) WHEN NULLIF(DISTINCT -354591288, x'5b7f') THEN LOWER(vt0.c0) WHEN NULL THEN ((vt0.c1)|(vt0.c0)) END  NULLS LAST, ((((((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)AND((vt0.c0 IN ()))))OR(0.45967705594195063)))AND(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))))AND((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN CAST(vt0.c1 AS NUMERIC) WHEN NULLIF(DISTINCT -354591288, x'5b7f') THEN LOWER(vt0.c0) WHEN NULL THEN ((vt0.c1)|(vt0.c0)) END  NULLS LAST, ((((((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)AND((vt0.c0 IN ()))))OR(0.45967705594195063)))AND(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))))AND((vt0.c0 IN ())))  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c1) ISNULL)) BETWEEN (vt0.c0) AND (((1.444518242E9)/(vt0.c0))))) ORDER BY ((((vt0.c1, vt0.c1, vt0.c0))<>((vt0.c1, vt0.c0, vt0.c0))) IN ()), CAST(UNLIKELY(vt0.c1) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) ISNULL)) BETWEEN (vt0.c0) AND (((1.444518242E9)/(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1, vt0.c1, vt0.c0))!=((vt0.c1, vt0.c0, vt0.c0))) IN ()), CAST(UNLIKELY(vt0.c1) AS TEXT) DESC);
SELECT * FROM vt0 WHERE (((((vt0.c1) ISNULL)) BETWEEN (vt0.c0) AND (((1.444518242E9)/(vt0.c0))))) ORDER BY ((((vt0.c1, vt0.c1, vt0.c0))<>((vt0.c1, vt0.c0, vt0.c0))) IN ()), CAST(UNLIKELY(vt0.c1) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) ISNULL)) BETWEEN (vt0.c0) AND (((1.444518242E9)/(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1, vt0.c1, vt0.c0))!=((vt0.c1, vt0.c0, vt0.c0))) IN ()), CAST(UNLIKELY(vt0.c1) AS TEXT) DESC);
SELECT * FROM vt0 WHERE (((((vt0.c1) ISNULL)) BETWEEN (vt0.c0) AND (((1.444518242E9)/(vt0.c0))))) ORDER BY ((((vt0.c1, vt0.c1, vt0.c0))<>((vt0.c1, vt0.c0, vt0.c0))) IN ()), CAST(UNLIKELY(vt0.c1) AS TEXT) DESC;
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE WHEN (((rt0.c1))<=((rt0.c2))) THEN (v0.c0 IN (rt0.c0)) ELSE (- (rt0.c2)) END) ORDER BY LENGTH(PRINTF(v0.c0, v0.c0, rt0.c2)) DESC  NULLS LAST, (~ (((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c1))<=((rt0.c2))) THEN (v0.c0 IN (rt0.c0)) ELSE (- (rt0.c2)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY LENGTH(PRINTF(v0.c0, v0.c0, rt0.c2)) DESC  NULLS LAST, (~ (((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE WHEN (((rt0.c1))<=((rt0.c2))) THEN (v0.c0 IN (rt0.c0)) ELSE (- (rt0.c2)) END) ORDER BY LENGTH(PRINTF(v0.c0, v0.c0, rt0.c2)) DESC  NULLS LAST, (~ (((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c1))<=((rt0.c2))) THEN (v0.c0 IN (rt0.c0)) ELSE (- (rt0.c2)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY LENGTH(PRINTF(v0.c0, v0.c0, rt0.c2)) DESC  NULLS LAST, (~ (((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE WHEN (((rt0.c1))<=((rt0.c2))) THEN (v0.c0 IN (rt0.c0)) ELSE (- (rt0.c2)) END) ORDER BY LENGTH(PRINTF(v0.c0, v0.c0, rt0.c2)) DESC  NULLS LAST, (~ (((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0))))  NULLS FIRST;
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((- (rt0.c0))))<((((rt0.c0)>(NULL))))) WHERE ((- ((vt0.c0 IN (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- ((vt0.c0 IN (vt0.c1))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((- (rt0.c0))))<((((rt0.c0)>(NULL))))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((- (rt0.c0))))<((((rt0.c0)>(NULL))))) WHERE ((- ((vt0.c0 IN (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- ((vt0.c0 IN (vt0.c1))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((- (rt0.c0))))<((((rt0.c0)>(NULL))))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((- (rt0.c0))))<((((rt0.c0)>(NULL))))) WHERE ((- ((vt0.c0 IN (vt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 AS REAL) COLLATE BINARY) ORDER BY ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0))) BETWEEN (HEX(rt0.c2)) AND (rt0.c0 COLLATE NOCASE))  NULLS LAST, ((rt0.c0)AND(rt0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0))) BETWEEN (HEX(rt0.c2)) AND (rt0.c0 COLLATE NOCASE))  NULLS LAST, ((rt0.c0)AND(rt0.c0 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 AS REAL) COLLATE BINARY) ORDER BY ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0))) BETWEEN (HEX(rt0.c2)) AND (rt0.c0 COLLATE NOCASE))  NULLS LAST, ((rt0.c0)AND(rt0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0))) BETWEEN (HEX(rt0.c2)) AND (rt0.c0 COLLATE NOCASE))  NULLS LAST, ((rt0.c0)AND(rt0.c0 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 AS REAL) COLLATE BINARY) ORDER BY ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0))) BETWEEN (HEX(rt0.c2)) AND (rt0.c0 COLLATE NOCASE))  NULLS LAST, ((rt0.c0)AND(rt0.c0 COLLATE RTRIM)) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS NUMERIC));
SELECT * FROM v0, rt0 WHERE (0.18970320657058992) ORDER BY (((rt0.c2)||(rt0.c0)) IN (((((rt0.c0)OR(rt0.c0)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((0.18970320657058992) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c2)||(rt0.c0)) IN (((((rt0.c0)OR(rt0.c0)))AND(v0.c0)))));
SELECT * FROM v0, rt0 WHERE (0.18970320657058992) ORDER BY (((rt0.c2)||(rt0.c0)) IN (((((rt0.c0)OR(rt0.c0)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((0.18970320657058992) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c2)||(rt0.c0)) IN (((((rt0.c0)OR(rt0.c0)))AND(v0.c0)))));
SELECT * FROM v0, rt0 WHERE (0.18970320657058992) ORDER BY (((rt0.c2)||(rt0.c0)) IN (((((rt0.c0)OR(rt0.c0)))AND(v0.c0))));
SELECT ALL * FROM rt0, vt0 WHERE (((((0Xffffffff84f3be69) NOT BETWEEN (vt0.c0) AND (NULL)))<<((((vt0.c1, rt0.c1, vt0.c1)) BETWEEN ((rt0.c2, rt0.c1, NULL)) AND ((rt0.c1, rt0.c2, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((0Xffffffff84f3be69) NOT BETWEEN (vt0.c0) AND (NULL)))<<((((vt0.c1, rt0.c1, vt0.c1)) BETWEEN ((rt0.c2, rt0.c1, NULL)) AND ((rt0.c1, rt0.c2, rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((0Xffffffff84f3be69) NOT BETWEEN (vt0.c0) AND (NULL)))<<((((vt0.c1, rt0.c1, vt0.c1)) BETWEEN ((rt0.c2, rt0.c1, NULL)) AND ((rt0.c1, rt0.c2, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((0Xffffffff84f3be69) NOT BETWEEN (vt0.c0) AND (NULL)))<<((((vt0.c1, rt0.c1, vt0.c1)) BETWEEN ((rt0.c2, rt0.c1, NULL)) AND ((rt0.c1, rt0.c2, rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((0Xffffffff84f3be69) NOT BETWEEN (vt0.c0) AND (NULL)))<<((((vt0.c1, rt0.c1, vt0.c1)) BETWEEN ((rt0.c2, rt0.c1, NULL)) AND ((rt0.c1, rt0.c2, rt0.c0))))));
SELECT * FROM rt0 INNER JOIN vt0 ON (((((vt0.c1, vt0.c1, 0.797588552105026))!=((rt0.c2, vt0.c0, rt0.c1)))) NOT BETWEEN (LIKELIHOOD(rt0.c1, 0.19870391785239772)) AND (-1289985407)) RIGHT OUTER JOIN v0 ON (CASE WHEN '' THEN vt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN v0.c0 THEN rt0.c0 END IN ((((rt0.c1))<((vt0.c1))))) WHERE (((((+ (v0.c0))))!=((rt0.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (v0.c0))))!=((rt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((((vt0.c1, vt0.c1, 0.797588552105026))!=((rt0.c2, vt0.c0, rt0.c1)))) NOT BETWEEN (LIKELIHOOD(rt0.c1, 0.19870391785239772)) AND (-1289985407)) RIGHT OUTER JOIN v0 ON (CASE WHEN '' THEN vt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN v0.c0 THEN rt0.c0 END IN ((((rt0.c1))<((vt0.c1))))));
SELECT * FROM rt0 INNER JOIN vt0 ON (((((vt0.c1, vt0.c1, 0.797588552105026))!=((rt0.c2, vt0.c0, rt0.c1)))) NOT BETWEEN (LIKELIHOOD(rt0.c1, 0.19870391785239772)) AND (-1289985407)) RIGHT OUTER JOIN v0 ON (CASE WHEN '' THEN vt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN v0.c0 THEN rt0.c0 END IN ((((rt0.c1))<((vt0.c1))))) WHERE (((((+ (v0.c0))))!=((rt0.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (v0.c0))))!=((rt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((((vt0.c1, vt0.c1, 0.797588552105026))!=((rt0.c2, vt0.c0, rt0.c1)))) NOT BETWEEN (LIKELIHOOD(rt0.c1, 0.19870391785239772)) AND (-1289985407)) RIGHT OUTER JOIN v0 ON (CASE WHEN '' THEN vt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN v0.c0 THEN rt0.c0 END IN ((((rt0.c1))<((vt0.c1))))));
SELECT * FROM rt0 INNER JOIN vt0 ON (((((vt0.c1, vt0.c1, 0.797588552105026))!=((rt0.c2, vt0.c0, rt0.c1)))) NOT BETWEEN (LIKELIHOOD(rt0.c1, 0.19870391785239772)) AND (-1289985407)) RIGHT OUTER JOIN v0 ON (CASE WHEN '' THEN vt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN v0.c0 THEN rt0.c0 END IN ((((rt0.c1))<((vt0.c1))))) WHERE (((((+ (v0.c0))))!=((rt0.c1 COLLATE NOCASE))));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((COALESCE(DISTINCT 0.13835450418408302, v0.c0, v0.c0, 0xffffffff808336a7))) AND ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN '-2024875869' THEN NULL END)))) ORDER BY CASE (~ (vt0.c1))  WHEN (vt0.c0 IN (v0.c0, vt0.c0)) THEN vt0.c1 COLLATE RTRIM END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((COALESCE(DISTINCT 0.13835450418408302, v0.c0, v0.c0, 0Xffffffff808336a7))) AND ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN '-2024875869' THEN NULL END)))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE (~ (vt0.c1))  WHEN (vt0.c0 IN (v0.c0, vt0.c0)) THEN vt0.c1 COLLATE RTRIM END DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((COALESCE(DISTINCT 0.13835450418408302, v0.c0, v0.c0, 0xffffffff808336a7))) AND ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN '-2024875869' THEN NULL END)))) ORDER BY CASE (~ (vt0.c1))  WHEN (vt0.c0 IN (v0.c0, vt0.c0)) THEN vt0.c1 COLLATE RTRIM END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((COALESCE(DISTINCT 0.13835450418408302, v0.c0, v0.c0, 0Xffffffff808336a7))) AND ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN '-2024875869' THEN NULL END)))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE (~ (vt0.c1))  WHEN (vt0.c0 IN (v0.c0, vt0.c0)) THEN vt0.c1 COLLATE RTRIM END DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((COALESCE(DISTINCT 0.13835450418408302, v0.c0, v0.c0, 0xffffffff808336a7))) AND ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN '-2024875869' THEN NULL END)))) ORDER BY CASE (~ (vt0.c1))  WHEN (vt0.c0 IN (v0.c0, vt0.c0)) THEN vt0.c1 COLLATE RTRIM END DESC  NULLS LAST;
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((((vt0.c0) NOT NULL)) NOT NULL) CROSS JOIN v0 ON ((((((((LIKELIHOOD(rt0.c1, 0.8040281237718856))OR(CASE WHEN vt0.c0 THEN 1.054056862E9 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE v0.c0 END)))AND(((v0.c0) NOT NULL))))OR(((rt0.c2)LIKE(rt0.c2)))))AND(GLOB(vt0.c1, rt0.c2))) WHERE (((vt0.c0 COLLATE BINARY)*(((v0.c0)>=(v0.c0))))) ORDER BY ((~ ('')) IN (((rt0.c1)<=(rt0.c2)))) ASC  NULLS FIRST, (~ ((- (vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)*(((v0.c0)>=(v0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((vt0.c0) NOT NULL)) NOT NULL) CROSS JOIN v0 ON ((((((((LIKELIHOOD(rt0.c1, 0.8040281237718856))OR(CASE WHEN vt0.c0 THEN 1.054056862E9 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE v0.c0 END)))AND(((v0.c0) NOT NULL))))OR(((rt0.c2)LIKE(rt0.c2)))))AND(GLOB(vt0.c1, rt0.c2))) ORDER BY ((~ ('')) IN (((rt0.c1)<=(rt0.c2)))) ASC  NULLS FIRST, (~ ((- (vt0.c1)))) DESC);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((((vt0.c0) NOT NULL)) NOT NULL) CROSS JOIN v0 ON ((((((((LIKELIHOOD(rt0.c1, 0.8040281237718856))OR(CASE WHEN vt0.c0 THEN 1.054056862E9 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE v0.c0 END)))AND(((v0.c0) NOT NULL))))OR(((rt0.c2)LIKE(rt0.c2)))))AND(GLOB(vt0.c1, rt0.c2))) WHERE (((vt0.c0 COLLATE BINARY)*(((v0.c0)>=(v0.c0))))) ORDER BY ((~ ('')) IN (((rt0.c1)<=(rt0.c2)))) ASC  NULLS FIRST, (~ ((- (vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)*(((v0.c0)>=(v0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((vt0.c0) NOT NULL)) NOT NULL) CROSS JOIN v0 ON ((((((((LIKELIHOOD(rt0.c1, 0.8040281237718856))OR(CASE WHEN vt0.c0 THEN 1.054056862E9 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE v0.c0 END)))AND(((v0.c0) NOT NULL))))OR(((rt0.c2)LIKE(rt0.c2)))))AND(GLOB(vt0.c1, rt0.c2))) ORDER BY ((~ ('')) IN (((rt0.c1)<=(rt0.c2)))) ASC  NULLS FIRST, (~ ((- (vt0.c1)))) DESC);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((((vt0.c0) NOT NULL)) NOT NULL) CROSS JOIN v0 ON ((((((((LIKELIHOOD(rt0.c1, 0.8040281237718856))OR(CASE WHEN vt0.c0 THEN 1.054056862E9 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE v0.c0 END)))AND(((v0.c0) NOT NULL))))OR(((rt0.c2)LIKE(rt0.c2)))))AND(GLOB(vt0.c1, rt0.c2))) WHERE (((vt0.c0 COLLATE BINARY)*(((v0.c0)>=(v0.c0))))) ORDER BY ((~ ('')) IN (((rt0.c1)<=(rt0.c2)))) ASC  NULLS FIRST, (~ ((- (vt0.c1)))) DESC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c0) ORDER BY CASE WHEN (- (rt0.c0)) THEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)) WHEN ((rt0.c1) BETWEEN ('') AND (v0.c0)) THEN (((rt0.c2))>((rt0.c2))) WHEN ((rt0.c2)>=(rt0.c0)) THEN (((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) END;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN (- (rt0.c0)) THEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)) WHEN ((rt0.c1) BETWEEN ('') AND (v0.c0)) THEN (((rt0.c2))>((rt0.c2))) WHEN ((rt0.c2)>=(rt0.c0)) THEN (((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) END);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c0) ORDER BY CASE WHEN (- (rt0.c0)) THEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)) WHEN ((rt0.c1) BETWEEN ('') AND (v0.c0)) THEN (((rt0.c2))>((rt0.c2))) WHEN ((rt0.c2)>=(rt0.c0)) THEN (((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) END;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN (- (rt0.c0)) THEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)) WHEN ((rt0.c1) BETWEEN ('') AND (v0.c0)) THEN (((rt0.c2))>((rt0.c2))) WHEN ((rt0.c2)>=(rt0.c0)) THEN (((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) END);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c0) ORDER BY CASE WHEN (- (rt0.c0)) THEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)) WHEN ((rt0.c1) BETWEEN ('') AND (v0.c0)) THEN (((rt0.c2))>((rt0.c2))) WHEN ((rt0.c2)>=(rt0.c0)) THEN (((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) END;
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN json_quote(v0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN json_quote(v0.c0) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN json_quote(v0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN json_quote(v0.c0) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN json_quote(v0.c0) END);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((+ (((vt0.c1)<=(vt0.c1))))) ORDER BY CASE ((vt0.c1) NOTNULL)  WHEN x'' THEN load_extension(0.8692850449918011, v0.c0) ELSE ((((v0.c0)AND(rt0.c1)))AND(v0.c0)) END, TRIM(DISTINCT UNLIKELY(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c1)<=(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CASE ((vt0.c1) NOTNULL)  WHEN x'' THEN load_extension(0.8692850449918011, v0.c0) ELSE ((((v0.c0)AND(rt0.c1)))AND(v0.c0)) END, TRIM(DISTINCT UNLIKELY(vt0.c0)) DESC);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((+ (((vt0.c1)<=(vt0.c1))))) ORDER BY CASE ((vt0.c1) NOTNULL)  WHEN x'' THEN load_extension(0.8692850449918011, v0.c0) ELSE ((((v0.c0)AND(rt0.c1)))AND(v0.c0)) END, TRIM(DISTINCT UNLIKELY(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c1)<=(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CASE ((vt0.c1) NOTNULL)  WHEN x'' THEN load_extension(0.8692850449918011, v0.c0) ELSE ((((v0.c0)AND(rt0.c1)))AND(v0.c0)) END, TRIM(DISTINCT UNLIKELY(vt0.c0)) DESC);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((+ (((vt0.c1)<=(vt0.c1))))) ORDER BY CASE ((vt0.c1) NOTNULL)  WHEN x'' THEN load_extension(0.8692850449918011, v0.c0) ELSE ((((v0.c0)AND(rt0.c1)))AND(v0.c0)) END, TRIM(DISTINCT UNLIKELY(vt0.c0)) DESC;
SELECT * FROM v0 WHERE ((NOT (((v0.c0)%(v0.c0))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0)%(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0);
SELECT * FROM v0 WHERE ((NOT (((v0.c0)%(v0.c0))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0)%(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0);
SELECT * FROM v0 WHERE ((NOT (((v0.c0)%(v0.c0))))) ORDER BY v0.c0;
SELECT * FROM rt0, vt0, v0 WHERE (((((NULL)OR(CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END)))AND((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END)))AND((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (((((NULL)OR(CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END)))AND((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END)))AND((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (((((NULL)OR(CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END)))AND((NOT (rt0.c1)))));
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((LIKE(vt0.c0, vt0.c1, '9'))) AND ((LENGTH(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((LIKE(vt0.c0, vt0.c1, '9'))) AND ((LENGTH(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((LIKE(vt0.c0, vt0.c1, '9'))) AND ((LENGTH(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((LIKE(vt0.c0, vt0.c1, '9'))) AND ((LENGTH(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((LIKE(vt0.c0, vt0.c1, '9'))) AND ((LENGTH(vt0.c1)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0) ISNULL))OR(((v0.c0) NOT NULL))))OR(((NULL)<(v0.c0))))) ORDER BY v0.c0 DESC, ((v0.c0) BETWEEN (NULL) AND ((NOT (v0.c0)))) DESC, CASE (((('')OR(v0.c0)))OR(v0.c0))  WHEN (((v0.c0))>=((v0.c0))) THEN json_extract(v0.c0, v0.c0) END DESC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) ISNULL))OR(((v0.c0) NOT NULL))))OR(((NULL)<(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC, ((v0.c0) BETWEEN (NULL) AND ((NOT (v0.c0)))) DESC, CASE (((('')OR(v0.c0)))OR(v0.c0))  WHEN (((v0.c0))>=((v0.c0))) THEN json_extract(v0.c0, v0.c0) END DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0) ISNULL))OR(((v0.c0) NOT NULL))))OR(((NULL)<(v0.c0))))) ORDER BY v0.c0 DESC, ((v0.c0) BETWEEN (NULL) AND ((NOT (v0.c0)))) DESC, CASE (((('')OR(v0.c0)))OR(v0.c0))  WHEN (((v0.c0))>=((v0.c0))) THEN json_extract(v0.c0, v0.c0) END DESC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) ISNULL))OR(((v0.c0) NOT NULL))))OR(((NULL)<(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC, ((v0.c0) BETWEEN (NULL) AND ((NOT (v0.c0)))) DESC, CASE (((('')OR(v0.c0)))OR(v0.c0))  WHEN (((v0.c0))>=((v0.c0))) THEN json_extract(v0.c0, v0.c0) END DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0) ISNULL))OR(((v0.c0) NOT NULL))))OR(((NULL)<(v0.c0))))) ORDER BY v0.c0 DESC, ((v0.c0) BETWEEN (NULL) AND ((NOT (v0.c0)))) DESC, CASE (((('')OR(v0.c0)))OR(v0.c0))  WHEN (((v0.c0))>=((v0.c0))) THEN json_extract(v0.c0, v0.c0) END DESC;
SELECT * FROM v0, rt0 WHERE (CASE LIKELIHOOD(rt0.c2, 0.3642060318774668)  WHEN ((v0.c0)IS NOT(rt0.c2)) THEN ((rt0.c0)IS(rt0.c0)) END) ORDER BY (((((rt0.c2)) BETWEEN ((0.019721836930129633)) AND ((rt0.c1)))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE LIKELIHOOD(rt0.c2, 0.3642060318774668)  WHEN ((v0.c0)IS NOT(rt0.c2)) THEN ((rt0.c0)IS(rt0.c0)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((rt0.c2)) BETWEEN ((0.019721836930129633)) AND ((rt0.c1)))) NOTNULL) DESC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (CASE LIKELIHOOD(rt0.c2, 0.3642060318774668)  WHEN ((v0.c0)IS NOT(rt0.c2)) THEN ((rt0.c0)IS(rt0.c0)) END) ORDER BY (((((rt0.c2)) BETWEEN ((0.019721836930129633)) AND ((rt0.c1)))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE LIKELIHOOD(rt0.c2, 0.3642060318774668)  WHEN ((v0.c0)IS NOT(rt0.c2)) THEN ((rt0.c0)IS(rt0.c0)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((rt0.c2)) BETWEEN ((0.019721836930129633)) AND ((rt0.c1)))) NOTNULL) DESC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (CASE LIKELIHOOD(rt0.c2, 0.3642060318774668)  WHEN ((v0.c0)IS NOT(rt0.c2)) THEN ((rt0.c0)IS(rt0.c0)) END) ORDER BY (((((rt0.c2)) BETWEEN ((0.019721836930129633)) AND ((rt0.c1)))) NOTNULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c1) NOTNULL) COLLATE NOCASE) ORDER BY (((('0.03711105308763951') NOT BETWEEN (rt0.c2) AND (v0.c0)))LIKE((rt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY (((('0.03711105308763951') NOT BETWEEN (rt0.c2) AND (v0.c0)))LIKE((rt0.c0 IN ()))) ASC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c1) NOTNULL) COLLATE NOCASE) ORDER BY (((('0.03711105308763951') NOT BETWEEN (rt0.c2) AND (v0.c0)))LIKE((rt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY (((('0.03711105308763951') NOT BETWEEN (rt0.c2) AND (v0.c0)))LIKE((rt0.c0 IN ()))) ASC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c1) NOTNULL) COLLATE NOCASE) ORDER BY (((('0.03711105308763951') NOT BETWEEN (rt0.c2) AND (v0.c0)))LIKE((rt0.c0 IN ()))) ASC;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON ((v0.c0 COLLATE NOCASE)>(TYPEOF(DISTINCT rt0.c0))) WHERE (((((v0.c0)>>(rt0.c2)))IS NOT(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>>(rt0.c2)))IS NOT(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 END))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((v0.c0 COLLATE NOCASE)>(TYPEOF(DISTINCT rt0.c0))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON ((v0.c0 COLLATE NOCASE)>(TYPEOF(DISTINCT rt0.c0))) WHERE (((((v0.c0)>>(rt0.c2)))IS NOT(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>>(rt0.c2)))IS NOT(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 END))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((v0.c0 COLLATE NOCASE)>(TYPEOF(DISTINCT rt0.c0))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON ((v0.c0 COLLATE NOCASE)>(TYPEOF(DISTINCT rt0.c0))) WHERE (((((v0.c0)>>(rt0.c2)))IS NOT(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 END)));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1)*(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) AND ((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)*(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) AND ((- (v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1)*(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) AND ((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)*(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) AND ((- (v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1)*(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) AND ((- (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((v0.c0)OR(v0.c0)))AND(v0.c0))))!=(((NOT (v0.c0)))))) ORDER BY LOWER(DISTINCT CAST(v0.c0 AS NUMERIC)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((v0.c0)OR(v0.c0)))AND(v0.c0))))!=(((NOT (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY LOWER(DISTINCT CAST(v0.c0 AS NUMERIC)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((v0.c0)OR(v0.c0)))AND(v0.c0))))!=(((NOT (v0.c0)))))) ORDER BY LOWER(DISTINCT CAST(v0.c0 AS NUMERIC)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((v0.c0)OR(v0.c0)))AND(v0.c0))))!=(((NOT (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY LOWER(DISTINCT CAST(v0.c0 AS NUMERIC)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((v0.c0)OR(v0.c0)))AND(v0.c0))))!=(((NOT (v0.c0)))))) ORDER BY LOWER(DISTINCT CAST(v0.c0 AS NUMERIC)) ASC  NULLS FIRST;
SELECT * FROM vt0, v0 WHERE (CAST(((((v0.c0)AND(v0.c0)))AND(v0.c0)) AS REAL)) ORDER BY (((('-717819979')-(vt0.c0)))AND(CASE WHEN vt0.c1 THEN 'GU' WHEN vt0.c1 THEN vt0.c0 WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN x'' THEN vt0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c0)AND(v0.c0)))AND(v0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, v0 ORDER BY (((('-717819979')-(vt0.c0)))AND(CASE WHEN vt0.c1 THEN 'GU' WHEN vt0.c1 THEN vt0.c0 WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN x'' THEN vt0.c1 END)) DESC  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (CAST(((((v0.c0)AND(v0.c0)))AND(v0.c0)) AS REAL)) ORDER BY (((('-717819979')-(vt0.c0)))AND(CASE WHEN vt0.c1 THEN 'GU' WHEN vt0.c1 THEN vt0.c0 WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN x'' THEN vt0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c0)AND(v0.c0)))AND(v0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, v0 ORDER BY (((('-717819979')-(vt0.c0)))AND(CASE WHEN vt0.c1 THEN 'GU' WHEN vt0.c1 THEN vt0.c0 WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN x'' THEN vt0.c1 END)) DESC  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (CAST(((((v0.c0)AND(v0.c0)))AND(v0.c0)) AS REAL)) ORDER BY (((('-717819979')-(vt0.c0)))AND(CASE WHEN vt0.c1 THEN 'GU' WHEN vt0.c1 THEN vt0.c0 WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN x'' THEN vt0.c1 END)) DESC  NULLS FIRST;
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) IN ()) WHERE (((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((NULL) BETWEEN (rt0.c1) AND (rt0.c1))) AND ((((rt0.c2, rt0.c2, rt0.c0))>=((rt0.c0, v0.c0, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((NULL) BETWEEN (rt0.c1) AND (rt0.c1))) AND ((((rt0.c2, rt0.c2, rt0.c0))>=((rt0.c0, v0.c0, rt0.c0)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) IN ()));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) IN ()) WHERE (((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((NULL) BETWEEN (rt0.c1) AND (rt0.c1))) AND ((((rt0.c2, rt0.c2, rt0.c0))>=((rt0.c0, v0.c0, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((NULL) BETWEEN (rt0.c1) AND (rt0.c1))) AND ((((rt0.c2, rt0.c2, rt0.c0))>=((rt0.c0, v0.c0, rt0.c0)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) IN ()));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) IN ()) WHERE (((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((NULL) BETWEEN (rt0.c1) AND (rt0.c1))) AND ((((rt0.c2, rt0.c2, rt0.c0))>=((rt0.c0, v0.c0, rt0.c0))))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((CAST(rt0.c0 AS BLOB)))=((CAST(vt0.c0 AS REAL))))) ORDER BY (x'' IN (('1444518242' IN (x'3423')), (NOT (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c0 AS BLOB)))=((CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (x'' IN (('1444518242' IN (x'3423')), (NOT (vt0.c1)))) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((CAST(rt0.c0 AS BLOB)))=((CAST(vt0.c0 AS REAL))))) ORDER BY (x'' IN (('1444518242' IN (x'3423')), (NOT (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c0 AS BLOB)))=((CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (x'' IN (('1444518242' IN (x'3423')), (NOT (vt0.c1)))) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((CAST(rt0.c0 AS BLOB)))=((CAST(vt0.c0 AS REAL))))) ORDER BY (x'' IN (('1444518242' IN (x'3423')), (NOT (vt0.c1)))) ASC;
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((LIKELIHOOD(rt0.c2, 0.4420407037093862))<<(((v0.c0)<(vt0.c0))))) ORDER BY (((rt0.c0)>=(rt0.c2)) IN (((((((((x'')AND('(.Na}d')))AND(x'')))OR(vt0.c0)))AND(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(rt0.c2, 0.4420407037093862))<<(((v0.c0)<(vt0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((rt0.c0)>=(rt0.c2)) IN (((((((((x'')AND('(.Na}d')))AND(x'')))OR(vt0.c0)))AND(NULL)))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((LIKELIHOOD(rt0.c2, 0.4420407037093862))<<(((v0.c0)<(vt0.c0))))) ORDER BY (((rt0.c0)>=(rt0.c2)) IN (((((((((x'')AND('(.Na}d')))AND(x'')))OR(vt0.c0)))AND(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(rt0.c2, 0.4420407037093862))<<(((v0.c0)<(vt0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((rt0.c0)>=(rt0.c2)) IN (((((((((x'')AND('(.Na}d')))AND(x'')))OR(vt0.c0)))AND(NULL)))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((LIKELIHOOD(rt0.c2, 0.4420407037093862))<<(((v0.c0)<(vt0.c0))))) ORDER BY (((rt0.c0)>=(rt0.c2)) IN (((((((((x'')AND('(.Na}d')))AND(x'')))OR(vt0.c0)))AND(NULL))));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (0.06004213392700286) ORDER BY (+ (MIN(vt0.c0, v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((0.06004213392700286) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (+ (MIN(vt0.c0, v0.c0))) DESC);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (0.06004213392700286) ORDER BY (+ (MIN(vt0.c0, v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((0.06004213392700286) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (+ (MIN(vt0.c0, v0.c0))) DESC);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (0.06004213392700286) ORDER BY (+ (MIN(vt0.c0, v0.c0))) DESC;
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CASE ((v0.c0) NOT NULL)  WHEN (~ (v0.c0)) THEN ((x'8584') NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN -761260473 THEN ((vt0.c0) NOTNULL) WHEN CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN NULL THEN vt0.c0 WHEN v0.c0 THEN rt0.c2 END THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) NOT NULL)  WHEN (~ (v0.c0)) THEN ((x'8584') NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN -761260473 THEN ((vt0.c0) NOTNULL) WHEN CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN NULL THEN vt0.c0 WHEN v0.c0 THEN rt0.c2 END THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c0 END END) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CASE ((v0.c0) NOT NULL)  WHEN (~ (v0.c0)) THEN ((x'8584') NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN -761260473 THEN ((vt0.c0) NOTNULL) WHEN CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN NULL THEN vt0.c0 WHEN v0.c0 THEN rt0.c2 END THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) NOT NULL)  WHEN (~ (v0.c0)) THEN ((x'8584') NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN -761260473 THEN ((vt0.c0) NOTNULL) WHEN CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN NULL THEN vt0.c0 WHEN v0.c0 THEN rt0.c2 END THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c0 END END) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CASE ((v0.c0) NOT NULL)  WHEN (~ (v0.c0)) THEN ((x'8584') NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN -761260473 THEN ((vt0.c0) NOTNULL) WHEN CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN NULL THEN vt0.c0 WHEN v0.c0 THEN rt0.c2 END THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c0 END END);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))))OR(((((vt0.c1)OR(rt0.c0)))AND(rt0.c1)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))))OR(((((vt0.c1)OR(rt0.c0)))AND(rt0.c1)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))))OR(((((vt0.c1)OR(rt0.c0)))AND(rt0.c1)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))))OR(((((vt0.c1)OR(rt0.c0)))AND(rt0.c1)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))))OR(((((vt0.c1)OR(rt0.c0)))AND(rt0.c1)))) WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CASE vt0.c1  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END) IS FALSE)) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CASE vt0.c1  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END) IS FALSE)) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CASE vt0.c1  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END) IS FALSE)) ORDER BY v0.c0  NULLS FIRST;
SELECT * FROM vt0, rt0 INNER JOIN v0 ON (((((0x7e18ae48, vt0.c1, vt0.c0, v0.c0, rt0.c2)) BETWEEN ((rt0.c1, vt0.c0, v0.c0, v0.c0, vt0.c1)) AND ((rt0.c0, v0.c0, rt0.c1, rt0.c0, NULL)))) NOTNULL) WHERE ((((((vt0.c0 IN ()))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN x'' THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 ELSE x'' END)))OR(LTRIM(vt0.c0)))) ORDER BY ((((rt0.c2) IS FALSE)) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND ((NULL IN ())))  NULLS LAST, (vt0.c0 IN (rt0.c0, v0.c0)) COLLATE RTRIM  NULLS FIRST, ((((((((((((((((vt0.c1)OR(rt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(((rt0.c1)%(vt0.c1)))))OR((vt0.c0 IN ()))))AND(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(((((v0.c0)OR(rt0.c2)))OR(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN x'' THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 ELSE x'' END)))OR(LTRIM(vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN v0 ON (((((0x7e18ae48, vt0.c1, vt0.c0, v0.c0, rt0.c2)) BETWEEN ((rt0.c1, vt0.c0, v0.c0, v0.c0, vt0.c1)) AND ((rt0.c0, v0.c0, rt0.c1, rt0.c0, NULL)))) NOTNULL) ORDER BY ((((rt0.c2) IS FALSE)) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND ((NULL IN ())))  NULLS LAST, (vt0.c0 IN (rt0.c0, v0.c0)) COLLATE RTRIM  NULLS FIRST, ((((((((((((((((vt0.c1)OR(rt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(((rt0.c1)%(vt0.c1)))))OR((vt0.c0 IN ()))))AND(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(((((v0.c0)OR(rt0.c2)))OR(v0.c0)))) ASC);
SELECT * FROM vt0, rt0 INNER JOIN v0 ON (((((0x7e18ae48, vt0.c1, vt0.c0, v0.c0, rt0.c2)) BETWEEN ((rt0.c1, vt0.c0, v0.c0, v0.c0, vt0.c1)) AND ((rt0.c0, v0.c0, rt0.c1, rt0.c0, NULL)))) NOTNULL) WHERE ((((((vt0.c0 IN ()))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN x'' THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 ELSE x'' END)))OR(LTRIM(vt0.c0)))) ORDER BY ((((rt0.c2) IS FALSE)) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND ((NULL IN ())))  NULLS LAST, (vt0.c0 IN (rt0.c0, v0.c0)) COLLATE RTRIM  NULLS FIRST, ((((((((((((((((vt0.c1)OR(rt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(((rt0.c1)%(vt0.c1)))))OR((vt0.c0 IN ()))))AND(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(((((v0.c0)OR(rt0.c2)))OR(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN x'' THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 ELSE x'' END)))OR(LTRIM(vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN v0 ON (((((0x7e18ae48, vt0.c1, vt0.c0, v0.c0, rt0.c2)) BETWEEN ((rt0.c1, vt0.c0, v0.c0, v0.c0, vt0.c1)) AND ((rt0.c0, v0.c0, rt0.c1, rt0.c0, NULL)))) NOTNULL) ORDER BY ((((rt0.c2) IS FALSE)) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND ((NULL IN ())))  NULLS LAST, (vt0.c0 IN (rt0.c0, v0.c0)) COLLATE RTRIM  NULLS FIRST, ((((((((((((((((vt0.c1)OR(rt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(((rt0.c1)%(vt0.c1)))))OR((vt0.c0 IN ()))))AND(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(((((v0.c0)OR(rt0.c2)))OR(v0.c0)))) ASC);
SELECT * FROM vt0, rt0 INNER JOIN v0 ON (((((0x7e18ae48, vt0.c1, vt0.c0, v0.c0, rt0.c2)) BETWEEN ((rt0.c1, vt0.c0, v0.c0, v0.c0, vt0.c1)) AND ((rt0.c0, v0.c0, rt0.c1, rt0.c0, NULL)))) NOTNULL) WHERE ((((((vt0.c0 IN ()))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN x'' THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 ELSE x'' END)))OR(LTRIM(vt0.c0)))) ORDER BY ((((rt0.c2) IS FALSE)) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND ((NULL IN ())))  NULLS LAST, (vt0.c0 IN (rt0.c0, v0.c0)) COLLATE RTRIM  NULLS FIRST, ((((((((((((((((vt0.c1)OR(rt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(((rt0.c1)%(vt0.c1)))))OR((vt0.c0 IN ()))))AND(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(((((v0.c0)OR(rt0.c2)))OR(v0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) NOT BETWEEN (((rt0.c1)%(x''))) AND (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) NOT BETWEEN (((rt0.c1)%(x''))) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) NOT BETWEEN (((rt0.c1)%(x''))) AND (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) NOT BETWEEN (((rt0.c1)%(x''))) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) NOT BETWEEN (((rt0.c1)%(x''))) AND (((vt0.c0) IS FALSE))));
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c1) NOT NULL), x''))>(((vt0.c1 IN ()), (((vt0.c1))==((vt0.c1))), (vt0.c0 IN ())))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c1) NOT NULL), x''))>(((vt0.c1 IN ()), (((vt0.c1))=((vt0.c1))), (vt0.c0 IN ())))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c1) NOT NULL), x''))>(((vt0.c1 IN ()), (((vt0.c1))==((vt0.c1))), (vt0.c0 IN ())))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c1) NOT NULL), x''))>(((vt0.c1 IN ()), (((vt0.c1))=((vt0.c1))), (vt0.c0 IN ())))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c1) NOT NULL), x''))>(((vt0.c1 IN ()), (((vt0.c1))==((vt0.c1))), (vt0.c0 IN ())))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((~ (rt0.c2)) IN (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt0.c2)) IN (NULL))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((~ (rt0.c2)) IN (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt0.c2)) IN (NULL))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((~ (rt0.c2)) IN (NULL)));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (json_array_length(((v0.c0) ISNULL), ((NULL)<<(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((v0.c0) ISNULL), ((NULL)<<(rt0.c0)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (json_array_length(((v0.c0) ISNULL), ((NULL)<<(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((v0.c0) ISNULL), ((NULL)<<(rt0.c0)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (json_array_length(((v0.c0) ISNULL), ((NULL)<<(rt0.c0))));
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((x'b33d')+(vt0.c0)))>(((((((((rt0.c0)AND(NULL)))AND('-969348668')))AND(v0.c0)))AND(rt0.c1))))) ORDER BY CASE ((rt0.c0)||(v0.c0))  WHEN ((v0.c0)-(vt0.c0)) THEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) END  NULLS FIRST, 0.5627887134663825 ASC;
SELECT SUM(count) FROM (SELECT ((((((x'b33d')+(vt0.c0)))>(((((((((rt0.c0)AND(NULL)))AND('-969348668')))AND(v0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CASE ((rt0.c0)||(v0.c0))  WHEN ((v0.c0)-(vt0.c0)) THEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) END  NULLS FIRST, 0.5627887134663825 ASC);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((x'b33d')+(vt0.c0)))>(((((((((rt0.c0)AND(NULL)))AND('-969348668')))AND(v0.c0)))AND(rt0.c1))))) ORDER BY CASE ((rt0.c0)||(v0.c0))  WHEN ((v0.c0)-(vt0.c0)) THEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) END  NULLS FIRST, 0.5627887134663825 ASC;
SELECT SUM(count) FROM (SELECT ((((((x'b33d')+(vt0.c0)))>(((((((((rt0.c0)AND(NULL)))AND('-969348668')))AND(v0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CASE ((rt0.c0)||(v0.c0))  WHEN ((v0.c0)-(vt0.c0)) THEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) END  NULLS FIRST, 0.5627887134663825 ASC);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((x'b33d')+(vt0.c0)))>(((((((((rt0.c0)AND(NULL)))AND('-969348668')))AND(v0.c0)))AND(rt0.c1))))) ORDER BY CASE ((rt0.c0)||(v0.c0))  WHEN ((v0.c0)-(vt0.c0)) THEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) END  NULLS FIRST, 0.5627887134663825 ASC;
SELECT ALL * FROM vt0 WHERE (((((((((CAST(vt0.c0 AS INTEGER))AND(((vt0.c1) IS TRUE))))OR(CHANGES())))AND(vt0.c1 COLLATE RTRIM)))AND(((vt0.c1) IS FALSE)))) ORDER BY ((x'de73' COLLATE RTRIM)AND(((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt0.c0 AS INTEGER))AND(((vt0.c1) IS TRUE))))OR(CHANGES())))AND(vt0.c1 COLLATE RTRIM)))AND(((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY ((x'de73' COLLATE RTRIM)AND(((vt0.c0) NOTNULL))));
SELECT ALL * FROM vt0 WHERE (((((((((CAST(vt0.c0 AS INTEGER))AND(((vt0.c1) IS TRUE))))OR(CHANGES())))AND(vt0.c1 COLLATE RTRIM)))AND(((vt0.c1) IS FALSE)))) ORDER BY ((x'de73' COLLATE RTRIM)AND(((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt0.c0 AS INTEGER))AND(((vt0.c1) IS TRUE))))OR(CHANGES())))AND(vt0.c1 COLLATE RTRIM)))AND(((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY ((x'de73' COLLATE RTRIM)AND(((vt0.c0) NOTNULL))));
SELECT ALL * FROM vt0 WHERE (((((((((CAST(vt0.c0 AS INTEGER))AND(((vt0.c1) IS TRUE))))OR(CHANGES())))AND(vt0.c1 COLLATE RTRIM)))AND(((vt0.c1) IS FALSE)))) ORDER BY ((x'de73' COLLATE RTRIM)AND(((vt0.c0) NOTNULL)));
SELECT * FROM rt0, vt0 WHERE (UNLIKELY(DISTINCT (((vt0.c1))>=((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT (((vt0.c1))>=((rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (UNLIKELY(DISTINCT (((vt0.c1))>=((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT (((vt0.c1))>=((rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (UNLIKELY(DISTINCT (((vt0.c1))>=((rt0.c0)))));
SELECT * FROM vt0, v0 CROSS JOIN rt0 ON (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN (((vt0.c0) IS FALSE))) WHERE ((~ ((v0.c0 IN (vt0.c0, vt0.c1))))) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((v0.c0 IN (vt0.c0, vt0.c1))))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN rt0 ON (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN (((vt0.c0) IS FALSE))) ORDER BY rt0.c0 ASC);
SELECT * FROM vt0, v0 CROSS JOIN rt0 ON (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN (((vt0.c0) IS FALSE))) WHERE ((~ ((v0.c0 IN (vt0.c0, vt0.c1))))) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((v0.c0 IN (vt0.c0, vt0.c1))))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN rt0 ON (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN (((vt0.c0) IS FALSE))) ORDER BY rt0.c0 ASC);
SELECT * FROM vt0, v0 CROSS JOIN rt0 ON (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN (((vt0.c0) IS FALSE))) WHERE ((~ ((v0.c0 IN (vt0.c0, vt0.c1))))) ORDER BY rt0.c0 ASC;
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (rt0.c2);
SELECT ALL * FROM rt0, vt0, v0 WHERE ((((vt0.c0)-(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)-(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE ((((vt0.c0)-(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)-(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE ((((vt0.c0)-(rt0.c1)) IN ()));
SELECT ALL * FROM v0, rt0 WHERE (v0.c0) ORDER BY CASE (rt0.c2 IN (rt0.c1, '-1310629249'))  WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) THEN NULLIF(DISTINCT rt0.c1, v0.c0) END;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE (rt0.c2 IN (rt0.c1, '-1310629249'))  WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) THEN NULLIF(DISTINCT rt0.c1, v0.c0) END);
SELECT ALL * FROM v0, rt0 WHERE (v0.c0) ORDER BY CASE (rt0.c2 IN (rt0.c1, '-1310629249'))  WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) THEN NULLIF(DISTINCT rt0.c1, v0.c0) END;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE (rt0.c2 IN (rt0.c1, '-1310629249'))  WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) THEN NULLIF(DISTINCT rt0.c1, v0.c0) END);
SELECT ALL * FROM v0, rt0 WHERE (v0.c0) ORDER BY CASE (rt0.c2 IN (rt0.c1, '-1310629249'))  WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) THEN NULLIF(DISTINCT rt0.c1, v0.c0) END;
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (TYPEOF(DISTINCT x'') IN ()) FULL OUTER JOIN vt0 ON (NOT (vt0.c0)) COLLATE BINARY WHERE (((CAST(rt0.c0 AS REAL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS REAL)) ISNULL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (TYPEOF(DISTINCT x'') IN ()) FULL OUTER JOIN vt0 ON (NOT (vt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (TYPEOF(DISTINCT x'') IN ()) FULL OUTER JOIN vt0 ON (NOT (vt0.c0)) COLLATE BINARY WHERE (((CAST(rt0.c0 AS REAL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS REAL)) ISNULL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (TYPEOF(DISTINCT x'') IN ()) FULL OUTER JOIN vt0 ON (NOT (vt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (TYPEOF(DISTINCT x'') IN ()) FULL OUTER JOIN vt0 ON (NOT (vt0.c0)) COLLATE BINARY WHERE (((CAST(rt0.c0 AS REAL)) ISNULL));
SELECT * FROM rt0 WHERE ((~ (x'fe17')));
SELECT SUM(count) FROM (SELECT (((~ (x'fe17'))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ (x'fe17')));
SELECT SUM(count) FROM (SELECT (((~ (x'fe17'))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ (x'fe17')));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON ((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN '1054056862' THEN v0.c0 ELSE v0.c0 END)AND(rt0.c0)))AND(((rt0.c1) ISNULL))) WHERE ((((((rt0.c0)<=(rt0.c1)), v0.c0 COLLATE BINARY, '特r', (~ (rt0.c2)), rt0.c1))<((((rt0.c2)OR(v0.c0)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), 1.7976931348623157E308, ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(v0.c0)), (((rt0.c0))>((v0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)<=(rt0.c1)), v0.c0 COLLATE BINARY, '特r', (~ (rt0.c2)), rt0.c1))<((((rt0.c2)OR(v0.c0)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), 1.7976931348623157E308, ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(v0.c0)), (((rt0.c0))>((v0.c0))))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN '1054056862' THEN v0.c0 ELSE v0.c0 END)AND(rt0.c0)))AND(((rt0.c1) ISNULL))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON ((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN '1054056862' THEN v0.c0 ELSE v0.c0 END)AND(rt0.c0)))AND(((rt0.c1) ISNULL))) WHERE ((((((rt0.c0)<=(rt0.c1)), v0.c0 COLLATE BINARY, '特r', (~ (rt0.c2)), rt0.c1))<((((rt0.c2)OR(v0.c0)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), 1.7976931348623157E308, ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(v0.c0)), (((rt0.c0))>((v0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)<=(rt0.c1)), v0.c0 COLLATE BINARY, '特r', (~ (rt0.c2)), rt0.c1))<((((rt0.c2)OR(v0.c0)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), 1.7976931348623157E308, ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(v0.c0)), (((rt0.c0))>((v0.c0))))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN '1054056862' THEN v0.c0 ELSE v0.c0 END)AND(rt0.c0)))AND(((rt0.c1) ISNULL))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON ((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN '1054056862' THEN v0.c0 ELSE v0.c0 END)AND(rt0.c0)))AND(((rt0.c1) ISNULL))) WHERE ((((((rt0.c0)<=(rt0.c1)), v0.c0 COLLATE BINARY, '特r', (~ (rt0.c2)), rt0.c1))<((((rt0.c2)OR(v0.c0)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), 1.7976931348623157E308, ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(v0.c0)), (((rt0.c0))>((v0.c0)))))));
SELECT COUNT(*) FROM v0, rt0 CROSS JOIN vt0 ON ((((((v0.c0, vt0.c1, x'dd0b', rt0.c0, vt0.c1))<=((vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c0))), LIKE(vt0.c1, v0.c0, '-'), (0X3ed3a19e IN ())))<>((v0.c0 COLLATE BINARY, rt0.c2, x'6e72'))) WHERE (((((rt0.c2)OR(vt0.c0))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (LENGTH(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR(vt0.c0))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (LENGTH(rt0.c1)))) IS TRUE)  as count FROM v0, rt0 CROSS JOIN vt0 ON ((((((v0.c0, vt0.c1, x'dd0b', rt0.c0, vt0.c1))<=((vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c0))), LIKE(vt0.c1, v0.c0, '-'), (0X3ed3a19e IN ())))!=((v0.c0 COLLATE BINARY, rt0.c2, x'6e72'))));
SELECT COUNT(*) FROM v0, rt0 CROSS JOIN vt0 ON ((((((v0.c0, vt0.c1, x'dd0b', rt0.c0, vt0.c1))<=((vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c0))), LIKE(vt0.c1, v0.c0, '-'), (0X3ed3a19e IN ())))<>((v0.c0 COLLATE BINARY, rt0.c2, x'6e72'))) WHERE (((((rt0.c2)OR(vt0.c0))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (LENGTH(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR(vt0.c0))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (LENGTH(rt0.c1)))) IS TRUE)  as count FROM v0, rt0 CROSS JOIN vt0 ON ((((((v0.c0, vt0.c1, x'dd0b', rt0.c0, vt0.c1))<=((vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c0))), LIKE(vt0.c1, v0.c0, '-'), (0X3ed3a19e IN ())))!=((v0.c0 COLLATE BINARY, rt0.c2, x'6e72'))));
SELECT COUNT(*) FROM v0, rt0 CROSS JOIN vt0 ON ((((((v0.c0, vt0.c1, x'dd0b', rt0.c0, vt0.c1))<=((vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c0))), LIKE(vt0.c1, v0.c0, '-'), (0X3ed3a19e IN ())))<>((v0.c0 COLLATE BINARY, rt0.c2, x'6e72'))) WHERE (((((rt0.c2)OR(vt0.c0))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (LENGTH(rt0.c1))));
SELECT * FROM rt0, vt0 WHERE (0.8692850449918011) ORDER BY (vt0.c0 IN (CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((0.8692850449918011) IS TRUE)  as count FROM rt0, vt0 ORDER BY (vt0.c0 IN (CAST(vt0.c0 AS TEXT))));
SELECT * FROM rt0, vt0 WHERE (0.8692850449918011) ORDER BY (vt0.c0 IN (CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((0.8692850449918011) IS TRUE)  as count FROM rt0, vt0 ORDER BY (vt0.c0 IN (CAST(vt0.c0 AS TEXT))));
SELECT * FROM rt0, vt0 WHERE (0.8692850449918011) ORDER BY (vt0.c0 IN (CAST(vt0.c0 AS TEXT)));
SELECT * FROM vt0, rt0, v0 WHERE ((- (((v0.c0)GLOB(vt0.c1))))) ORDER BY CAST(((rt0.c0)/('xCUX}6bC')) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((v0.c0)GLOB(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CAST(((rt0.c0)/('xCUX}6bC')) AS REAL)  NULLS LAST);
SELECT * FROM vt0, rt0, v0 WHERE ((- (((v0.c0)GLOB(vt0.c1))))) ORDER BY CAST(((rt0.c0)/('xCUX}6bC')) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((v0.c0)GLOB(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CAST(((rt0.c0)/('xCUX}6bC')) AS REAL)  NULLS LAST);
SELECT * FROM vt0, rt0, v0 WHERE ((- (((v0.c0)GLOB(vt0.c1))))) ORDER BY CAST(((rt0.c0)/('xCUX}6bC')) AS REAL)  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN CAST(x'' AS TEXT) THEN CASE WHEN vt0.c0 THEN v0.c0 WHEN NULL THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END ELSE vt0.c0 COLLATE RTRIM END) ORDER BY (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(x'' AS TEXT) THEN CASE WHEN vt0.c0 THEN v0.c0 WHEN NULL THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END ELSE vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN CAST(x'' AS TEXT) THEN CASE WHEN vt0.c0 THEN v0.c0 WHEN NULL THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END ELSE vt0.c0 COLLATE RTRIM END) ORDER BY (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(x'' AS TEXT) THEN CASE WHEN vt0.c0 THEN v0.c0 WHEN NULL THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END ELSE vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN CAST(x'' AS TEXT) THEN CASE WHEN vt0.c0 THEN v0.c0 WHEN NULL THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END ELSE vt0.c0 COLLATE RTRIM END) ORDER BY (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((~ (((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))))) ORDER BY vt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))))) ORDER BY vt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))))) ORDER BY vt0.c1 DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS INTEGER))OR(('4⍱+彩Kg' IN ()))))AND((NOT (v0.c0))))) ORDER BY ((x'') NOT BETWEEN (((v0.c0) ISNULL)) AND (CASE v0.c0  WHEN 9.53444544E8 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS INTEGER))OR(('4⍱+彩Kg' IN ()))))AND((NOT (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((x'') NOT BETWEEN (((v0.c0) ISNULL)) AND (CASE v0.c0  WHEN 9.53444544E8 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS INTEGER))OR(('4⍱+彩Kg' IN ()))))AND((NOT (v0.c0))))) ORDER BY ((x'') NOT BETWEEN (((v0.c0) ISNULL)) AND (CASE v0.c0  WHEN 9.53444544E8 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS INTEGER))OR(('4⍱+彩Kg' IN ()))))AND((NOT (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((x'') NOT BETWEEN (((v0.c0) ISNULL)) AND (CASE v0.c0  WHEN 9.53444544E8 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS INTEGER))OR(('4⍱+彩Kg' IN ()))))AND((NOT (v0.c0))))) ORDER BY ((x'') NOT BETWEEN (((v0.c0) ISNULL)) AND (CASE v0.c0  WHEN 9.53444544E8 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END));
SELECT * FROM vt0, rt0 WHERE (vt0.c0) ORDER BY 'VNRI' ASC  NULLS FIRST, vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY 'VNRI' ASC  NULLS FIRST, vt0.c1  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (vt0.c0) ORDER BY 'VNRI' ASC  NULLS FIRST, vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY 'VNRI' ASC  NULLS FIRST, vt0.c1  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (vt0.c0) ORDER BY 'VNRI' ASC  NULLS FIRST, vt0.c1  NULLS LAST;
SELECT ALL * FROM rt0, v0 INNER JOIN vt0 ON 0.019721836930129633 WHERE (((((rt0.c0) IS FALSE))!=((rt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE))!=((rt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM rt0, v0 INNER JOIN vt0 ON 0.019721836930129633);
SELECT ALL * FROM rt0, v0 INNER JOIN vt0 ON 0.019721836930129633 WHERE (((((rt0.c0) IS FALSE))!=((rt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE))!=((rt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM rt0, v0 INNER JOIN vt0 ON 0.019721836930129633);
SELECT ALL * FROM rt0, v0 INNER JOIN vt0 ON 0.019721836930129633 WHERE (((((rt0.c0) IS FALSE))!=((rt0.c0 IN (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((CAST(vt0.c0 AS TEXT))OR(vt0.c0)))AND(((vt0.c1)>(vt0.c1)))))OR((0.7198116941305369 IN ()))))OR(((vt0.c0)||(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt0.c0 AS TEXT))OR(vt0.c0)))AND(((vt0.c1)>(vt0.c1)))))OR((0.7198116941305369 IN ()))))OR(((vt0.c0)||(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((CAST(vt0.c0 AS TEXT))OR(vt0.c0)))AND(((vt0.c1)>(vt0.c1)))))OR((0.7198116941305369 IN ()))))OR(((vt0.c0)||(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt0.c0 AS TEXT))OR(vt0.c0)))AND(((vt0.c1)>(vt0.c1)))))OR((0.7198116941305369 IN ()))))OR(((vt0.c0)||(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((CAST(vt0.c0 AS TEXT))OR(vt0.c0)))AND(((vt0.c1)>(vt0.c1)))))OR((0.7198116941305369 IN ()))))OR(((vt0.c0)||(vt0.c1)))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((((rt0.c0) BETWEEN (rt0.c2) AND (0Xe18ff71))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((((rt0.c0) BETWEEN (rt0.c2) AND (0Xe18ff71)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((((rt0.c0) BETWEEN (rt0.c2) AND (0Xe18ff71))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((((rt0.c0) BETWEEN (rt0.c2) AND (0Xe18ff71)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((((rt0.c0) BETWEEN (rt0.c2) AND (0Xe18ff71))))));
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN v0 ON (((- (vt0.c0)))/(((rt0.c0) NOT NULL))) WHERE ((((vt0.c0 IN ()))>(((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))>(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN v0 ON (((- (vt0.c0)))/(((rt0.c0) NOT NULL))));
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN v0 ON (((- (vt0.c0)))/(((rt0.c0) NOT NULL))) WHERE ((((vt0.c0 IN ()))>(((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))>(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN v0 ON (((- (vt0.c0)))/(((rt0.c0) NOT NULL))));
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN v0 ON (((- (vt0.c0)))/(((rt0.c0) NOT NULL))) WHERE ((((vt0.c0 IN ()))>(((rt0.c1) NOTNULL))));
SELECT ALL COUNT(*) FROM rt0 WHERE (UPPER(DISTINCT (rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (rt0.c1 IN ()))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (UPPER(DISTINCT (rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (rt0.c1 IN ()))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (UPPER(DISTINCT (rt0.c1 IN ())));
SELECT ALL COUNT(*) FROM v0 WHERE (LOWER(DISTINCT ((v0.c0)>>(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((v0.c0)>>(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LOWER(DISTINCT ((v0.c0)>>(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((v0.c0)>>(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LOWER(DISTINCT ((v0.c0)>>(v0.c0))));
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((rt0.c2)=(rt0.c0))) NOTNULL)) ORDER BY ((vt0.c0) BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c2)>(rt0.c1))))  NULLS FIRST, (+ (CAST(vt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)==(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((vt0.c0) BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c2)>(rt0.c1))))  NULLS FIRST, (+ (CAST(vt0.c1 AS NUMERIC))));
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((rt0.c2)=(rt0.c0))) NOTNULL)) ORDER BY ((vt0.c0) BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c2)>(rt0.c1))))  NULLS FIRST, (+ (CAST(vt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)==(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((vt0.c0) BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c2)>(rt0.c1))))  NULLS FIRST, (+ (CAST(vt0.c1 AS NUMERIC))));
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((rt0.c2)=(rt0.c0))) NOTNULL)) ORDER BY ((vt0.c0) BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c2)>(rt0.c1))))  NULLS FIRST, (+ (CAST(vt0.c1 AS NUMERIC)));
SELECT COUNT(*) FROM rt0 WHERE (IFNULL((rt0.c1 IN ()), IFNULL(DISTINCT rt0.c2, '-2024875869'))) ORDER BY ((((json_extract(rt0.c2, rt0.c1, rt0.c2, rt0.c2))OR(UPPER(rt0.c1))))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL((rt0.c1 IN ()), IFNULL(DISTINCT rt0.c2, '-2024875869'))) IS TRUE)  as count FROM rt0 ORDER BY ((((json_extract(rt0.c2, rt0.c1, rt0.c2, rt0.c2))OR(UPPER(rt0.c1))))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)) ASC);
SELECT COUNT(*) FROM rt0 WHERE (IFNULL((rt0.c1 IN ()), IFNULL(DISTINCT rt0.c2, '-2024875869'))) ORDER BY ((((json_extract(rt0.c2, rt0.c1, rt0.c2, rt0.c2))OR(UPPER(rt0.c1))))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL((rt0.c1 IN ()), IFNULL(DISTINCT rt0.c2, '-2024875869'))) IS TRUE)  as count FROM rt0 ORDER BY ((((json_extract(rt0.c2, rt0.c1, rt0.c2, rt0.c2))OR(UPPER(rt0.c1))))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)) ASC);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS NUMERIC) COLLATE BINARY);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((v0.c0)OR(v0.c0))) AND (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(rt0.c2)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((v0.c0)OR(v0.c0))) AND (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(rt0.c2)))OR(v0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((v0.c0)OR(v0.c0))) AND (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(rt0.c2)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((v0.c0)OR(v0.c0))) AND (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(rt0.c2)))OR(v0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((v0.c0)OR(v0.c0))) AND (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(rt0.c2)))OR(v0.c0)))));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((0.7736019033463472) NOT BETWEEN (((rt0.c0)>=(vt0.c1))) AND (((vt0.c1) NOTNULL)))) ORDER BY (CAST(vt0.c1 AS BLOB) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.7736019033463472) NOT BETWEEN (((rt0.c0)>=(vt0.c1))) AND (((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (CAST(vt0.c1 AS BLOB) IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((0.7736019033463472) NOT BETWEEN (((rt0.c0)>=(vt0.c1))) AND (((vt0.c1) NOTNULL)))) ORDER BY (CAST(vt0.c1 AS BLOB) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.7736019033463472) NOT BETWEEN (((rt0.c0)>=(vt0.c1))) AND (((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (CAST(vt0.c1 AS BLOB) IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((0.7736019033463472) NOT BETWEEN (((rt0.c0)>=(vt0.c1))) AND (((vt0.c1) NOTNULL)))) ORDER BY (CAST(vt0.c1 AS BLOB) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT NULL))|(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL))|(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT NULL))|(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL))|(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT NULL))|(rt0.c1 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CASE WHEN '%B[(' THEN CAST('xt0/[jF' AS TEXT) ELSE rt0.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '%B[(' THEN CAST('xt0/[jF' AS TEXT) ELSE rt0.c1 END) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CASE WHEN '%B[(' THEN CAST('xt0/[jF' AS TEXT) ELSE rt0.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '%B[(' THEN CAST('xt0/[jF' AS TEXT) ELSE rt0.c1 END) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CASE WHEN '%B[(' THEN CAST('xt0/[jF' AS TEXT) ELSE rt0.c1 END);
SELECT COUNT(*) FROM vt0, v0 FULL OUTER JOIN rt0 ON (~ ((~ (rt0.c2)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN rt0 ON (~ ((~ (rt0.c2)))));
SELECT COUNT(*) FROM vt0, v0 FULL OUTER JOIN rt0 ON (~ ((~ (rt0.c2)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN rt0 ON (~ ((~ (rt0.c2)))));
SELECT COUNT(*) FROM vt0, v0 FULL OUTER JOIN rt0 ON (~ ((~ (rt0.c2)))) WHERE (NULL);
SELECT * FROM rt0, vt0 WHERE ((x'9bfe' IN ((~ (rt0.c0)), CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((x'9bfe' IN ((~ (rt0.c0)), CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((x'9bfe' IN ((~ (rt0.c0)), CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((x'9bfe' IN ((~ (rt0.c0)), CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((x'9bfe' IN ((~ (rt0.c0)), CAST(vt0.c1 AS TEXT))));
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((v0.c0) NOT BETWEEN (x'') AND (v0.c0))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((((((((rt0.c1)AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c2)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (x'') AND (v0.c0))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((((((((rt0.c1)AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((v0.c0) NOT BETWEEN (x'') AND (v0.c0))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((((((((rt0.c1)AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c2)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (x'') AND (v0.c0))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((((((((rt0.c1)AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((v0.c0) NOT BETWEEN (x'') AND (v0.c0))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((((((((rt0.c1)AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c2)))AND(rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((~ (((vt0.c0)&(vt0.c0))))) ORDER BY (((rt0.c2)) BETWEEN ((((vt0.c1) NOTNULL))) AND ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2)) BETWEEN ((((vt0.c1) NOTNULL))) AND ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((~ (((vt0.c0)&(vt0.c0))))) ORDER BY (((rt0.c2)) BETWEEN ((((vt0.c1) NOTNULL))) AND ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2)) BETWEEN ((((vt0.c1) NOTNULL))) AND ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((~ (((vt0.c0)&(vt0.c0))))) ORDER BY (((rt0.c2)) BETWEEN ((((vt0.c1) NOTNULL))) AND ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, v0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN ((vt0.c0) ISNULL) WHEN (v0.c0 IN (v0.c0)) THEN vt0.c0 WHEN (v0.c0 IN ()) THEN vt0.c0 ELSE COALESCE(vt0.c0, vt0.c0, rt0.c1, x'eb04') END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN ((vt0.c0) ISNULL) WHEN (v0.c0 IN (v0.c0)) THEN vt0.c0 WHEN (v0.c0 IN ()) THEN vt0.c0 ELSE COALESCE(vt0.c0, vt0.c0, rt0.c1, x'eb04') END) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN ((vt0.c0) ISNULL) WHEN (v0.c0 IN (v0.c0)) THEN vt0.c0 WHEN (v0.c0 IN ()) THEN vt0.c0 ELSE COALESCE(vt0.c0, vt0.c0, rt0.c1, x'eb04') END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN ((vt0.c0) ISNULL) WHEN (v0.c0 IN (v0.c0)) THEN vt0.c0 WHEN (v0.c0 IN ()) THEN vt0.c0 ELSE COALESCE(vt0.c0, vt0.c0, rt0.c1, x'eb04') END) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN ((vt0.c0) ISNULL) WHEN (v0.c0 IN (v0.c0)) THEN vt0.c0 WHEN (v0.c0 IN ()) THEN vt0.c0 ELSE COALESCE(vt0.c0, vt0.c0, rt0.c1, x'eb04') END);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((((rt0.c0) IS FALSE))>=(((((vt0.c1)AND(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS FALSE))>=(((((vt0.c1)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((((rt0.c0) IS FALSE))>=(((((vt0.c1)AND(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS FALSE))>=(((((vt0.c1)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((((rt0.c0) IS FALSE))>=(((((vt0.c1)AND(v0.c0)))AND(v0.c0)))));
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((NULL) ISNULL))<>((+ (rt0.c0))))) ORDER BY CAST(((vt0.c1)+(v0.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) ISNULL))<>((+ (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CAST(((vt0.c1)+(v0.c0)) AS TEXT) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((NULL) ISNULL))<>((+ (rt0.c0))))) ORDER BY CAST(((vt0.c1)+(v0.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) ISNULL))<>((+ (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CAST(((vt0.c1)+(v0.c0)) AS TEXT) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((NULL) ISNULL))<>((+ (rt0.c0))))) ORDER BY CAST(((vt0.c1)+(v0.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((rt0.c1)) BETWEEN (((rt0.c2 IN (NULL)))) AND ((((rt0.c0)AND(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (((rt0.c2 IN (NULL)))) AND ((((rt0.c0)AND(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1)) BETWEEN (((rt0.c2 IN (NULL)))) AND ((((rt0.c0)AND(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (((rt0.c2 IN (NULL)))) AND ((((rt0.c0)AND(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1)) BETWEEN (((rt0.c2 IN (NULL)))) AND ((((rt0.c0)AND(rt0.c0))))));
SELECT * FROM vt0, rt0 WHERE (((((~ (rt0.c0)), ((vt0.c1) NOT NULL), LIKELIHOOD(rt0.c1, 0.8201252619115832), (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((0.18093571414568477))), CASE rt0.c2  WHEN rt0.c1 THEN vt0.c1 END))>((((vt0.c0)GLOB(rt0.c1)), (~ (rt0.c1)), TYPEOF(rt0.c0), (- (rt0.c1)), ((rt0.c2)<=(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((~ (rt0.c0)), ((vt0.c1) NOT NULL), LIKELIHOOD(rt0.c1, 0.8201252619115832), (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((0.18093571414568477))), CASE rt0.c2  WHEN rt0.c1 THEN vt0.c1 END))>((((vt0.c0)GLOB(rt0.c1)), (~ (rt0.c1)), TYPEOF(rt0.c0), (- (rt0.c1)), ((rt0.c2)<=(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((~ (rt0.c0)), ((vt0.c1) NOT NULL), LIKELIHOOD(rt0.c1, 0.8201252619115832), (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((0.18093571414568477))), CASE rt0.c2  WHEN rt0.c1 THEN vt0.c1 END))>((((vt0.c0)GLOB(rt0.c1)), (~ (rt0.c1)), TYPEOF(rt0.c0), (- (rt0.c1)), ((rt0.c2)<=(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((~ (rt0.c0)), ((vt0.c1) NOT NULL), LIKELIHOOD(rt0.c1, 0.8201252619115832), (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((0.18093571414568477))), CASE rt0.c2  WHEN rt0.c1 THEN vt0.c1 END))>((((vt0.c0)GLOB(rt0.c1)), (~ (rt0.c1)), TYPEOF(rt0.c0), (- (rt0.c1)), ((rt0.c2)<=(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((~ (rt0.c0)), ((vt0.c1) NOT NULL), LIKELIHOOD(rt0.c1, 0.8201252619115832), (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((0.18093571414568477))), CASE rt0.c2  WHEN rt0.c1 THEN vt0.c1 END))>((((vt0.c0)GLOB(rt0.c1)), (~ (rt0.c1)), TYPEOF(rt0.c0), (- (rt0.c1)), ((rt0.c2)<=(rt0.c0))))));
SELECT ALL * FROM rt0, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (rt0.c2);
SELECT * FROM vt0 WHERE (((SUBSTR(vt0.c1, vt0.c1)) NOT BETWEEN (json_object(NULL, vt0.c0)) AND (((vt0.c0)LIKE(vt0.c0))))) ORDER BY (~ (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((SUBSTR(vt0.c1, vt0.c1)) NOT BETWEEN (json_object(NULL, vt0.c0)) AND (((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT * FROM vt0 WHERE (((SUBSTR(vt0.c1, vt0.c1)) NOT BETWEEN (json_object(NULL, vt0.c0)) AND (((vt0.c0)LIKE(vt0.c0))))) ORDER BY (~ (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((SUBSTR(vt0.c1, vt0.c1)) NOT BETWEEN (json_object(NULL, vt0.c0)) AND (((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('262273605');
SELECT SUM(count) FROM (SELECT ALL (('262273605') IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('262273605');
SELECT SUM(count) FROM (SELECT ALL (('262273605') IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('262273605');
SELECT * FROM rt0, v0 NATURAL JOIN vt0 WHERE (((CAST(rt0.c1 AS TEXT)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN vt0);
SELECT * FROM rt0, v0 NATURAL JOIN vt0 WHERE (((CAST(rt0.c1 AS TEXT)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN vt0);
SELECT * FROM rt0, v0 NATURAL JOIN vt0 WHERE (((CAST(rt0.c1 AS TEXT)) IS FALSE));
SELECT ALL COUNT(*) FROM v0, vt0 INNER JOIN rt0 ON ((CAST(vt0.c0 AS BLOB))OR(((rt0.c1)-(vt0.c1)))) WHERE ((NULL IN ())) ORDER BY UNLIKELY(v0.c0 COLLATE BINARY) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM v0, vt0 INNER JOIN rt0 ON ((CAST(vt0.c0 AS BLOB))OR(((rt0.c1)-(vt0.c1)))) ORDER BY UNLIKELY(v0.c0 COLLATE BINARY) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 INNER JOIN rt0 ON ((CAST(vt0.c0 AS BLOB))OR(((rt0.c1)-(vt0.c1)))) WHERE ((NULL IN ())) ORDER BY UNLIKELY(v0.c0 COLLATE BINARY) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM v0, vt0 INNER JOIN rt0 ON ((CAST(vt0.c0 AS BLOB))OR(((rt0.c1)-(vt0.c1)))) ORDER BY UNLIKELY(v0.c0 COLLATE BINARY) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 INNER JOIN rt0 ON ((CAST(vt0.c0 AS BLOB))OR(((rt0.c1)-(vt0.c1)))) WHERE ((NULL IN ())) ORDER BY UNLIKELY(v0.c0 COLLATE BINARY) DESC;
SELECT COUNT(*) FROM vt0, v0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT NULL)) ORDER BY CASE CASE WHEN rt0.c2 THEN NULL ELSE rt0.c1 END  WHEN rt0.c0 THEN CASE WHEN 2.09887025E8 THEN rt0.c1 END ELSE (- (rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE CASE WHEN rt0.c2 THEN NULL ELSE rt0.c1 END  WHEN rt0.c0 THEN CASE WHEN 2.09887025E8 THEN rt0.c1 END ELSE (- (rt0.c0)) END ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT NULL)) ORDER BY CASE CASE WHEN rt0.c2 THEN NULL ELSE rt0.c1 END  WHEN rt0.c0 THEN CASE WHEN 2.09887025E8 THEN rt0.c1 END ELSE (- (rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE CASE WHEN rt0.c2 THEN NULL ELSE rt0.c1 END  WHEN rt0.c0 THEN CASE WHEN 2.09887025E8 THEN rt0.c1 END ELSE (- (rt0.c0)) END ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT NULL)) ORDER BY CASE CASE WHEN rt0.c2 THEN NULL ELSE rt0.c1 END  WHEN rt0.c0 THEN CASE WHEN 2.09887025E8 THEN rt0.c1 END ELSE (- (rt0.c0)) END ASC;
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((TRIM(DISTINCT vt0.c1))+(((rt0.c1)LIKE(vt0.c1))))) ORDER BY CAST(CASE WHEN vt0.c1 THEN rt0.c1 END AS BLOB), ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)<(((0.5314267659831873) BETWEEN (v0.c0) AND (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt0.c1))+(((rt0.c1)LIKE(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CAST(CASE WHEN vt0.c1 THEN rt0.c1 END AS BLOB), ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)<(((0.5314267659831873) BETWEEN (v0.c0) AND (rt0.c2)))) ASC);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((TRIM(DISTINCT vt0.c1))+(((rt0.c1)LIKE(vt0.c1))))) ORDER BY CAST(CASE WHEN vt0.c1 THEN rt0.c1 END AS BLOB), ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)<(((0.5314267659831873) BETWEEN (v0.c0) AND (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt0.c1))+(((rt0.c1)LIKE(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CAST(CASE WHEN vt0.c1 THEN rt0.c1 END AS BLOB), ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)<(((0.5314267659831873) BETWEEN (v0.c0) AND (rt0.c2)))) ASC);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((TRIM(DISTINCT vt0.c1))+(((rt0.c1)LIKE(vt0.c1))))) ORDER BY CAST(CASE WHEN vt0.c1 THEN rt0.c1 END AS BLOB), ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)<(((0.5314267659831873) BETWEEN (v0.c0) AND (rt0.c2)))) ASC;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY (((rt0.c0, rt0.c0, rt0.c2)) BETWEEN (((rt0.c1 IN ()), (('1054056862')<=(rt0.c2)), (('q2?{*gr') NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((CAST(rt0.c0 AS REAL), CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, rt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0, rt0.c0, rt0.c2)) BETWEEN (((rt0.c1 IN ()), (('1054056862')<=(rt0.c2)), (('q2?{*gr') NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((CAST(rt0.c0 AS REAL), CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, rt0.c2)))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY (((rt0.c0, rt0.c0, rt0.c2)) BETWEEN (((rt0.c1 IN ()), (('1054056862')<=(rt0.c2)), (('q2?{*gr') NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((CAST(rt0.c0 AS REAL), CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, rt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0, rt0.c0, rt0.c2)) BETWEEN (((rt0.c1 IN ()), (('1054056862')<=(rt0.c2)), (('q2?{*gr') NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((CAST(rt0.c0 AS REAL), CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, rt0.c2)))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY (((rt0.c0, rt0.c0, rt0.c2)) BETWEEN (((rt0.c1 IN ()), (('1054056862')<=(rt0.c2)), (('q2?{*gr') NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((CAST(rt0.c0 AS REAL), CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, rt0.c2)))  NULLS LAST;
SELECT ALL * FROM vt0, v0 RIGHT OUTER JOIN rt0 ON CAST(vt0.c1 AS REAL) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN rt0 ON CAST(vt0.c1 AS REAL));
SELECT ALL * FROM vt0, v0 RIGHT OUTER JOIN rt0 ON CAST(vt0.c1 AS REAL) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN rt0 ON CAST(vt0.c1 AS REAL));
SELECT ALL * FROM vt0, v0 RIGHT OUTER JOIN rt0 ON CAST(vt0.c1 AS REAL) WHERE (vt0.c0);
SELECT * FROM vt0, v0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ()));
SELECT ALL * FROM vt0, rt0 CROSS JOIN v0 ON (('!x')<<(((v0.c0) BETWEEN (rt0.c1) AND (vt0.c1)))) WHERE (LIKELIHOOD(((rt0.c2)OR(rt0.c2)), 0.8912955964835827)) ORDER BY UNLIKELY(DISTINCT (vt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((rt0.c2)OR(rt0.c2)), 0.8912955964835827)) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN v0 ON (('!x')<<(((v0.c0) BETWEEN (rt0.c1) AND (vt0.c1)))) ORDER BY UNLIKELY(DISTINCT (vt0.c1 IN ())));
SELECT ALL * FROM vt0, rt0 CROSS JOIN v0 ON (('!x')<<(((v0.c0) BETWEEN (rt0.c1) AND (vt0.c1)))) WHERE (LIKELIHOOD(((rt0.c2)OR(rt0.c2)), 0.8912955964835827)) ORDER BY UNLIKELY(DISTINCT (vt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((rt0.c2)OR(rt0.c2)), 0.8912955964835827)) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN v0 ON (('!x')<<(((v0.c0) BETWEEN (rt0.c1) AND (vt0.c1)))) ORDER BY UNLIKELY(DISTINCT (vt0.c1 IN ())));
SELECT ALL * FROM vt0, rt0 CROSS JOIN v0 ON (('!x')<<(((v0.c0) BETWEEN (rt0.c1) AND (vt0.c1)))) WHERE (LIKELIHOOD(((rt0.c2)OR(rt0.c2)), 0.8912955964835827)) ORDER BY UNLIKELY(DISTINCT (vt0.c1 IN ()));
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((-1.7976931348623157E308) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((NOT (((-1.7976931348623157E308) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((-1.7976931348623157E308) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((NOT (((-1.7976931348623157E308) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((-1.7976931348623157E308) IS FALSE))));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN ())) ORDER BY ((CASE -354591288  WHEN rt0.c0 THEN rt0.c1 END) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN ())) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((CASE -354591288  WHEN rt0.c0 THEN rt0.c1 END) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN ())) ORDER BY ((CASE -354591288  WHEN rt0.c0 THEN rt0.c1 END) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN ())) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((CASE -354591288  WHEN rt0.c0 THEN rt0.c1 END) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN ())) ORDER BY ((CASE -354591288  WHEN rt0.c0 THEN rt0.c1 END) NOTNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (rt0.c2)) COLLATE RTRIM COLLATE RTRIM) ORDER BY ((((((rt0.c1)AND(rt0.c2)))AND('-1776961470'))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c2)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)AND(rt0.c2)))AND('-1776961470'))) ISNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (rt0.c2)) COLLATE RTRIM COLLATE RTRIM) ORDER BY ((((((rt0.c1)AND(rt0.c2)))AND('-1776961470'))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c2)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)AND(rt0.c2)))AND('-1776961470'))) ISNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (rt0.c2)) COLLATE RTRIM COLLATE RTRIM) ORDER BY ((((((rt0.c1)AND(rt0.c2)))AND('-1776961470'))) ISNULL) DESC  NULLS FIRST;
SELECT * FROM rt0, vt0, v0 WHERE ((CASE WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c1 THEN 0Xffffffff9ec83f3f WHEN vt0.c0 THEN rt0.c2 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c1 THEN 0xffffffff9ec83f3f WHEN vt0.c0 THEN rt0.c2 END IN ())) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE ((CASE WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c1 THEN 0Xffffffff9ec83f3f WHEN vt0.c0 THEN rt0.c2 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c1 THEN 0xffffffff9ec83f3f WHEN vt0.c0 THEN rt0.c2 END IN ())) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE ((CASE WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c1 THEN 0Xffffffff9ec83f3f WHEN vt0.c0 THEN rt0.c2 END IN ()));
SELECT * FROM rt0 WHERE ((+ (rt0.c0))) ORDER BY (~ (COALESCE(rt0.c1, rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY (~ (COALESCE(rt0.c1, rt0.c1))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((+ (rt0.c0))) ORDER BY (~ (COALESCE(rt0.c1, rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY (~ (COALESCE(rt0.c1, rt0.c1))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((+ (rt0.c0))) ORDER BY (~ (COALESCE(rt0.c1, rt0.c1))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c2) NOTNULL), (NOT (NULL)), 0X562b2371))!=(((+ (rt0.c2)), LIKE(rt0.c0, rt0.c1, '-'), NULL)))) ORDER BY ((((((rt0.c2)OR(v0.c0)))OR(rt0.c0)))IS(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN '0.7329249657579001' ELSE rt0.c2 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) NOTNULL), (NOT (NULL)), 0x562b2371))<>(((+ (rt0.c2)), LIKE(rt0.c0, rt0.c1, '-'), NULL)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((rt0.c2)OR(v0.c0)))OR(rt0.c0)))IS(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN '0.7329249657579001' ELSE rt0.c2 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c2) NOTNULL), (NOT (NULL)), 0X562b2371))!=(((+ (rt0.c2)), LIKE(rt0.c0, rt0.c1, '-'), NULL)))) ORDER BY ((((((rt0.c2)OR(v0.c0)))OR(rt0.c0)))IS(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN '0.7329249657579001' ELSE rt0.c2 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) NOTNULL), (NOT (NULL)), 0x562b2371))<>(((+ (rt0.c2)), LIKE(rt0.c0, rt0.c1, '-'), NULL)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((rt0.c2)OR(v0.c0)))OR(rt0.c0)))IS(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN '0.7329249657579001' ELSE rt0.c2 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c2) NOTNULL), (NOT (NULL)), 0X562b2371))!=(((+ (rt0.c2)), LIKE(rt0.c0, rt0.c1, '-'), NULL)))) ORDER BY ((((((rt0.c2)OR(v0.c0)))OR(rt0.c0)))IS(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN '0.7329249657579001' ELSE rt0.c2 END)) ASC  NULLS FIRST;
SELECT * FROM rt0, v0, vt0 WHERE (((((rt0.c1)!=(NULL))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)!=(NULL))) IS TRUE)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (((((rt0.c1)!=(NULL))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)!=(NULL))) IS TRUE)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (((((rt0.c1)!=(NULL))) IS TRUE));
SELECT * FROM vt0, rt0, v0 WHERE (((((vt0.c1)IS NOT(vt0.c1)))<<(v0.c0))) ORDER BY ((((rt0.c2)GLOB(rt0.c2))) NOT NULL)  NULLS LAST, -6.96143021E8 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)IS NOT(vt0.c1)))<<(v0.c0))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((rt0.c2)GLOB(rt0.c2))) NOT NULL)  NULLS LAST, -6.96143021E8 DESC  NULLS FIRST);
SELECT * FROM vt0, rt0, v0 WHERE (((((vt0.c1)IS NOT(vt0.c1)))<<(v0.c0))) ORDER BY ((((rt0.c2)GLOB(rt0.c2))) NOT NULL)  NULLS LAST, -6.96143021E8 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)IS NOT(vt0.c1)))<<(v0.c0))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((rt0.c2)GLOB(rt0.c2))) NOT NULL)  NULLS LAST, -6.96143021E8 DESC  NULLS FIRST);
SELECT * FROM vt0, rt0, v0 WHERE (((((vt0.c1)IS NOT(vt0.c1)))<<(v0.c0))) ORDER BY ((((rt0.c2)GLOB(rt0.c2))) NOT NULL)  NULLS LAST, -6.96143021E8 DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 IN (0.7067802342645115, v0.c0)) IN (v0.c0))) ORDER BY ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(((('-2138884441'))<((v0.c0))))))AND(DATE(v0.c0, v0.c0, v0.c0))) ASC, CASE WHEN v0.c0 THEN ((v0.c0)<(v0.c0)) ELSE ((0X5ea18559)IS(v0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN (0.7067802342645115, v0.c0)) IN (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(((('-2138884441'))<((v0.c0))))))AND(DATE(v0.c0, v0.c0, v0.c0))) ASC, CASE WHEN v0.c0 THEN ((v0.c0)<(v0.c0)) ELSE ((0X5ea18559)IS(v0.c0)) END);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 IN (0.7067802342645115, v0.c0)) IN (v0.c0))) ORDER BY ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(((('-2138884441'))<((v0.c0))))))AND(DATE(v0.c0, v0.c0, v0.c0))) ASC, CASE WHEN v0.c0 THEN ((v0.c0)<(v0.c0)) ELSE ((0X5ea18559)IS(v0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN (0.7067802342645115, v0.c0)) IN (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(((('-2138884441'))<((v0.c0))))))AND(DATE(v0.c0, v0.c0, v0.c0))) ASC, CASE WHEN v0.c0 THEN ((v0.c0)<(v0.c0)) ELSE ((0X5ea18559)IS(v0.c0)) END);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 IN (0.7067802342645115, v0.c0)) IN (v0.c0))) ORDER BY ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(((('-2138884441'))<((v0.c0))))))AND(DATE(v0.c0, v0.c0, v0.c0))) ASC, CASE WHEN v0.c0 THEN ((v0.c0)<(v0.c0)) ELSE ((0X5ea18559)IS(v0.c0)) END;
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM rt0, v0 INNER JOIN vt0 ON ((((((((((((((rt0.c1)!=(vt0.c1)))OR(CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN vt0.c1 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN rt0.c2 WHEN NULL THEN rt0.c0 ELSE vt0.c0 END)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (v0.c0)))))OR(NULL)))AND(((v0.c0) IS FALSE))))OR(SQLITE_COMPILEOPTION_GET(vt0.c1))))OR((((('gw')OR(rt0.c1)))OR(vt0.c0)))) WHERE (((((v0.c0)<<(rt0.c0)))<(((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<<(rt0.c0)))<(((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, v0 INNER JOIN vt0 ON ((((((((((((((rt0.c1)<>(vt0.c1)))OR(CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN vt0.c1 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN rt0.c2 WHEN NULL THEN rt0.c0 ELSE vt0.c0 END)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (v0.c0)))))OR(NULL)))AND(((v0.c0) IS FALSE))))OR(SQLITE_COMPILEOPTION_GET(vt0.c1))))OR((((('gw')OR(rt0.c1)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, v0 INNER JOIN vt0 ON ((((((((((((((rt0.c1)!=(vt0.c1)))OR(CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN vt0.c1 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN rt0.c2 WHEN NULL THEN rt0.c0 ELSE vt0.c0 END)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (v0.c0)))))OR(NULL)))AND(((v0.c0) IS FALSE))))OR(SQLITE_COMPILEOPTION_GET(vt0.c1))))OR((((('gw')OR(rt0.c1)))OR(vt0.c0)))) WHERE (((((v0.c0)<<(rt0.c0)))<(((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<<(rt0.c0)))<(((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, v0 INNER JOIN vt0 ON ((((((((((((((rt0.c1)<>(vt0.c1)))OR(CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN vt0.c1 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN rt0.c2 WHEN NULL THEN rt0.c0 ELSE vt0.c0 END)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (v0.c0)))))OR(NULL)))AND(((v0.c0) IS FALSE))))OR(SQLITE_COMPILEOPTION_GET(vt0.c1))))OR((((('gw')OR(rt0.c1)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, v0 INNER JOIN vt0 ON ((((((((((((((rt0.c1)!=(vt0.c1)))OR(CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN vt0.c1 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN rt0.c2 WHEN NULL THEN rt0.c0 ELSE vt0.c0 END)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (v0.c0)))))OR(NULL)))AND(((v0.c0) IS FALSE))))OR(SQLITE_COMPILEOPTION_GET(vt0.c1))))OR((((('gw')OR(rt0.c1)))OR(vt0.c0)))) WHERE (((((v0.c0)<<(rt0.c0)))<(((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2)))));
SELECT ALL * FROM v0 WHERE (((v0.c0) BETWEEN (QUOTE(v0.c0)) AND ((NOT (v0.c0))))) ORDER BY load_extension(v0.c0, (((v0.c0))<(('-1357407603'))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) BETWEEN (QUOTE(v0.c0)) AND ((NOT (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY load_extension(v0.c0, (((v0.c0))<(('-1357407603')))));
SELECT ALL * FROM v0 WHERE (((v0.c0) BETWEEN (QUOTE(v0.c0)) AND ((NOT (v0.c0))))) ORDER BY load_extension(v0.c0, (((v0.c0))<(('-1357407603'))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) BETWEEN (QUOTE(v0.c0)) AND ((NOT (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY load_extension(v0.c0, (((v0.c0))<(('-1357407603')))));
SELECT ALL * FROM v0 WHERE (((v0.c0) BETWEEN (QUOTE(v0.c0)) AND ((NOT (v0.c0))))) ORDER BY load_extension(v0.c0, (((v0.c0))<(('-1357407603'))));
SELECT COUNT(*) FROM v0 NOT INDEXED, vt0 WHERE (CASE NULL  WHEN '-1310629249' THEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) WHEN v0.c0 COLLATE RTRIM THEN (v0.c0 IN ()) WHEN ((vt0.c0) IS FALSE) THEN ((x'') BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY CASE WHEN v0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN '-1310629249' THEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) WHEN v0.c0 COLLATE RTRIM THEN (v0.c0 IN ()) WHEN ((vt0.c0) IS FALSE) THEN ((x'') BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN v0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END COLLATE RTRIM);
SELECT COUNT(*) FROM v0 NOT INDEXED, vt0 WHERE (CASE NULL  WHEN '-1310629249' THEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) WHEN v0.c0 COLLATE RTRIM THEN (v0.c0 IN ()) WHEN ((vt0.c0) IS FALSE) THEN ((x'') BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY CASE WHEN v0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN '-1310629249' THEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) WHEN v0.c0 COLLATE RTRIM THEN (v0.c0 IN ()) WHEN ((vt0.c0) IS FALSE) THEN ((x'') BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN v0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END COLLATE RTRIM);
SELECT COUNT(*) FROM v0 NOT INDEXED, vt0 WHERE (CASE NULL  WHEN '-1310629249' THEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) WHEN v0.c0 COLLATE RTRIM THEN (v0.c0 IN ()) WHEN ((vt0.c0) IS FALSE) THEN ((x'') BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY CASE WHEN v0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END COLLATE RTRIM;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c1)) AND (((((vt0.c0, vt0.c1, vt0.c0))<=((vt0.c1, vt0.c0, vt0.c0))))))) ORDER BY vt0.c1 DESC, CAST(vt0.c1 AS BLOB) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c1)) AND (((((vt0.c0, vt0.c1, vt0.c0))<=((vt0.c1, vt0.c0, vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC, CAST(vt0.c1 AS BLOB) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c1)) AND (((((vt0.c0, vt0.c1, vt0.c0))<=((vt0.c1, vt0.c0, vt0.c0))))))) ORDER BY vt0.c1 DESC, CAST(vt0.c1 AS BLOB) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c1)) AND (((((vt0.c0, vt0.c1, vt0.c0))<=((vt0.c1, vt0.c0, vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC, CAST(vt0.c1 AS BLOB) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c1)) AND (((((vt0.c0, vt0.c1, vt0.c0))<=((vt0.c1, vt0.c0, vt0.c0))))))) ORDER BY vt0.c1 DESC, CAST(vt0.c1 AS BLOB) COLLATE NOCASE DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE (((CASE rt0.c1  WHEN v0.c0 THEN rt0.c0 END) NOT NULL)) ORDER BY CASE CAST(v0.c0 AS BLOB)  WHEN rt0.c2 COLLATE BINARY THEN rt0.c0 ELSE ((rt0.c1)>>(v0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN v0.c0 THEN rt0.c0 END) NOT NULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE CAST(v0.c0 AS BLOB)  WHEN rt0.c2 COLLATE BINARY THEN rt0.c0 ELSE ((rt0.c1)>>(v0.c0)) END DESC);
SELECT COUNT(*) FROM rt0, v0 WHERE (((CASE rt0.c1  WHEN v0.c0 THEN rt0.c0 END) NOT NULL)) ORDER BY CASE CAST(v0.c0 AS BLOB)  WHEN rt0.c2 COLLATE BINARY THEN rt0.c0 ELSE ((rt0.c1)>>(v0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN v0.c0 THEN rt0.c0 END) NOT NULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE CAST(v0.c0 AS BLOB)  WHEN rt0.c2 COLLATE BINARY THEN rt0.c0 ELSE ((rt0.c1)>>(v0.c0)) END DESC);
SELECT COUNT(*) FROM rt0, v0 WHERE (((CASE rt0.c1  WHEN v0.c0 THEN rt0.c0 END) NOT NULL)) ORDER BY CASE CAST(v0.c0 AS BLOB)  WHEN rt0.c2 COLLATE BINARY THEN rt0.c0 ELSE ((rt0.c1)>>(v0.c0)) END DESC;
SELECT ALL * FROM v0, vt0, rt0 WHERE ((((((((vt0.c1)AND(rt0.c2)))OR(rt0.c0))))<>((((rt0.c1)LIKE(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c1)AND(rt0.c2)))OR(rt0.c0))))!=((((rt0.c1)LIKE(rt0.c1)))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((((((((vt0.c1)AND(rt0.c2)))OR(rt0.c0))))<>((((rt0.c1)LIKE(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c1)AND(rt0.c2)))OR(rt0.c0))))!=((((rt0.c1)LIKE(rt0.c1)))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((((((((vt0.c1)AND(rt0.c2)))OR(rt0.c0))))<>((((rt0.c1)LIKE(rt0.c1))))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((x''))<>((UNLIKELY(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((x''))!=((UNLIKELY(rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((x''))<>((UNLIKELY(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((x''))!=((UNLIKELY(rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((x''))<>((UNLIKELY(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)GLOB(rt0.c1)))>((+ (rt0.c0))))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)GLOB(rt0.c1)))>((+ (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)GLOB(rt0.c1)))>((+ (rt0.c0))))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)GLOB(rt0.c1)))>((+ (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)GLOB(rt0.c1)))>((+ (rt0.c0))))) ORDER BY rt0.c2;
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0)<>(v0.c0)))>=((((vt0.c0, '0.6925018307231366', vt0.c1))>=((v0.c0, v0.c0, v0.c0)))))) ORDER BY (((~ (v0.c0)))<>(((vt0.c0)AND(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)!=(v0.c0)))>=((((vt0.c0, '0.6925018307231366', vt0.c1))>=((v0.c0, v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((~ (v0.c0)))!=(((vt0.c0)AND(v0.c0)))) ASC);
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0)<>(v0.c0)))>=((((vt0.c0, '0.6925018307231366', vt0.c1))>=((v0.c0, v0.c0, v0.c0)))))) ORDER BY (((~ (v0.c0)))<>(((vt0.c0)AND(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)!=(v0.c0)))>=((((vt0.c0, '0.6925018307231366', vt0.c1))>=((v0.c0, v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((~ (v0.c0)))!=(((vt0.c0)AND(v0.c0)))) ASC);
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0)<>(v0.c0)))>=((((vt0.c0, '0.6925018307231366', vt0.c1))>=((v0.c0, v0.c0, v0.c0)))))) ORDER BY (((~ (v0.c0)))<>(((vt0.c0)AND(v0.c0)))) ASC;
SELECT COUNT(*) FROM v0, rt0 WHERE ('-685413702');
SELECT SUM(count) FROM (SELECT ALL (('-685413702') IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ('-685413702');
SELECT SUM(count) FROM (SELECT ALL (('-685413702') IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ('-685413702');
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON v0.c0 RIGHT OUTER JOIN v0 ON CAST(((vt0.c1)OR(v0.c0)) AS TEXT) WHERE ((- (vt0.c1))) ORDER BY HEX(((((rt0.c1)AND(x'')))AND(rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((- (vt0.c1))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON v0.c0 RIGHT OUTER JOIN v0 ON CAST(((vt0.c1)OR(v0.c0)) AS TEXT) ORDER BY HEX(((((rt0.c1)AND(x'')))AND(rt0.c0))) ASC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON v0.c0 RIGHT OUTER JOIN v0 ON CAST(((vt0.c1)OR(v0.c0)) AS TEXT) WHERE ((- (vt0.c1))) ORDER BY HEX(((((rt0.c1)AND(x'')))AND(rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((- (vt0.c1))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON v0.c0 RIGHT OUTER JOIN v0 ON CAST(((vt0.c1)OR(v0.c0)) AS TEXT) ORDER BY HEX(((((rt0.c1)AND(x'')))AND(rt0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT NULL))>>(vt0.c0 COLLATE NOCASE))) ORDER BY json(rtreenode(vt0.c0, vt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT NULL))>>(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY json(rtreenode(vt0.c0, vt0.c1)) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT NULL))>>(vt0.c0 COLLATE NOCASE))) ORDER BY json(rtreenode(vt0.c0, vt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT NULL))>>(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY json(rtreenode(vt0.c0, vt0.c1)) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT NULL))>>(vt0.c0 COLLATE NOCASE))) ORDER BY json(rtreenode(vt0.c0, vt0.c1)) DESC;
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c1, vt0.c1, rt0.c0, vt0.c0, vt0.c0))>=((rt0.c1, rt0.c0, rt0.c0, vt0.c1, vt0.c0))))GLOB((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, vt0.c1, rt0.c0, vt0.c0, vt0.c0))>=((rt0.c1, rt0.c0, rt0.c0, vt0.c1, vt0.c0))))GLOB((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c1, vt0.c1, rt0.c0, vt0.c0, vt0.c0))>=((rt0.c1, rt0.c0, rt0.c0, vt0.c1, vt0.c0))))GLOB((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, vt0.c1, rt0.c0, vt0.c0, vt0.c0))>=((rt0.c1, rt0.c0, rt0.c0, vt0.c1, vt0.c0))))GLOB((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c1, vt0.c1, rt0.c0, vt0.c0, vt0.c0))>=((rt0.c1, rt0.c0, rt0.c0, vt0.c1, vt0.c0))))GLOB((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))));
SELECT ALL * FROM v0, vt0, rt0 WHERE (CASE (- (vt0.c0))  WHEN (('-969348668') NOT NULL) THEN COALESCE(DISTINCT vt0.c0, rt0.c2) WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((0.18970320657058992) NOTNULL) WHEN ((vt0.c1)<>(rt0.c1)) THEN CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 ELSE v0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE (- (vt0.c0))  WHEN (('-969348668') NOT NULL) THEN COALESCE(DISTINCT vt0.c0, rt0.c2) WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((0.18970320657058992) NOTNULL) WHEN ((vt0.c1)!=(rt0.c1)) THEN CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 ELSE v0.c0 END END) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (CASE (- (vt0.c0))  WHEN (('-969348668') NOT NULL) THEN COALESCE(DISTINCT vt0.c0, rt0.c2) WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((0.18970320657058992) NOTNULL) WHEN ((vt0.c1)<>(rt0.c1)) THEN CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 ELSE v0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE (- (vt0.c0))  WHEN (('-969348668') NOT NULL) THEN COALESCE(DISTINCT vt0.c0, rt0.c2) WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((0.18970320657058992) NOTNULL) WHEN ((vt0.c1)!=(rt0.c1)) THEN CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 ELSE v0.c0 END END) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (CASE (- (vt0.c0))  WHEN (('-969348668') NOT NULL) THEN COALESCE(DISTINCT vt0.c0, rt0.c2) WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((0.18970320657058992) NOTNULL) WHEN ((vt0.c1)<>(rt0.c1)) THEN CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 ELSE v0.c0 END END);
SELECT * FROM v0, vt0, rt0 WHERE (((SQLITE_COMPILEOPTION_GET(rt0.c0))LIKE(CAST(rt0.c0 AS INTEGER)))) ORDER BY rt0.c0 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_GET(rt0.c0))LIKE(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY rt0.c0 COLLATE BINARY);
SELECT * FROM v0, vt0, rt0 WHERE (((SQLITE_COMPILEOPTION_GET(rt0.c0))LIKE(CAST(rt0.c0 AS INTEGER)))) ORDER BY rt0.c0 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_GET(rt0.c0))LIKE(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY rt0.c0 COLLATE BINARY);
SELECT * FROM v0, vt0, rt0 WHERE (((SQLITE_COMPILEOPTION_GET(rt0.c0))LIKE(CAST(rt0.c0 AS INTEGER)))) ORDER BY rt0.c0 COLLATE BINARY;
SELECT COUNT(*) FROM v0 WHERE ((+ (v0.c0))) ORDER BY ((v0.c0 IN (v0.c0, v0.c0)) IN ())  NULLS FIRST, 'Vo' COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 IN (v0.c0, v0.c0)) IN ())  NULLS FIRST, 'Vo' COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((+ (v0.c0))) ORDER BY ((v0.c0 IN (v0.c0, v0.c0)) IN ())  NULLS FIRST, 'Vo' COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 IN (v0.c0, v0.c0)) IN ())  NULLS FIRST, 'Vo' COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((+ (v0.c0))) ORDER BY ((v0.c0 IN (v0.c0, v0.c0)) IN ())  NULLS FIRST, 'Vo' COLLATE RTRIM  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE (v0.c0 COLLATE NOCASE) ORDER BY ((NULL) BETWEEN (SQLITE_COMPILEOPTION_USED(v0.c0)) AND (((vt0.c1)=(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0 COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY ((NULL) BETWEEN (SQLITE_COMPILEOPTION_USED(v0.c0)) AND (((vt0.c1)==(vt0.c0)))) ASC);
SELECT * FROM v0, vt0 WHERE (v0.c0 COLLATE NOCASE) ORDER BY ((NULL) BETWEEN (SQLITE_COMPILEOPTION_USED(v0.c0)) AND (((vt0.c1)=(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0 COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY ((NULL) BETWEEN (SQLITE_COMPILEOPTION_USED(v0.c0)) AND (((vt0.c1)==(vt0.c0)))) ASC);
SELECT * FROM v0, vt0 WHERE (v0.c0 COLLATE NOCASE) ORDER BY ((NULL) BETWEEN (SQLITE_COMPILEOPTION_USED(v0.c0)) AND (((vt0.c1)=(vt0.c0)))) ASC;
SELECT * FROM v0 WHERE (('' IN ())) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ALL ((('' IN ())) IS TRUE)  as count FROM v0 ORDER BY '' DESC);
SELECT * FROM v0 WHERE (('' IN ())) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ALL ((('' IN ())) IS TRUE)  as count FROM v0 ORDER BY '' DESC);
SELECT * FROM v0 WHERE (('' IN ())) ORDER BY '' DESC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((NOT (CAST(v0.c0 AS REAL)))) ORDER BY (((vt0.c1 IN (''))) ISNULL), ((CASE WHEN vt0.c0 THEN '-761260473' ELSE vt0.c1 END) NOT NULL);
SELECT SUM(count) FROM (SELECT (((NOT (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c1 IN (''))) ISNULL), ((CASE WHEN vt0.c0 THEN '-761260473' ELSE vt0.c1 END) NOT NULL));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((NOT (CAST(v0.c0 AS REAL)))) ORDER BY (((vt0.c1 IN (''))) ISNULL), ((CASE WHEN vt0.c0 THEN '-761260473' ELSE vt0.c1 END) NOT NULL);
SELECT SUM(count) FROM (SELECT (((NOT (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c1 IN (''))) ISNULL), ((CASE WHEN vt0.c0 THEN '-761260473' ELSE vt0.c1 END) NOT NULL));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((NOT (CAST(v0.c0 AS REAL)))) ORDER BY (((vt0.c1 IN (''))) ISNULL), ((CASE WHEN vt0.c0 THEN '-761260473' ELSE vt0.c1 END) NOT NULL);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((- (LIKELY(DISTINCT v0.c0)))) ORDER BY ((((((rt0.c1) BETWEEN (rt0.c2) AND (x'369d')))OR((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))AND(rt0.c1));
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELY(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0, rt0 NOT INDEXED, vt0 ORDER BY ((((((rt0.c1) BETWEEN (rt0.c2) AND (x'369d')))OR((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))AND(rt0.c1)));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((- (LIKELY(DISTINCT v0.c0)))) ORDER BY ((((((rt0.c1) BETWEEN (rt0.c2) AND (x'369d')))OR((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))AND(rt0.c1));
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELY(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0, rt0 NOT INDEXED, vt0 ORDER BY ((((((rt0.c1) BETWEEN (rt0.c2) AND (x'369d')))OR((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))AND(rt0.c1)));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((- (LIKELY(DISTINCT v0.c0)))) ORDER BY ((((((rt0.c1) BETWEEN (rt0.c2) AND (x'369d')))OR((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))AND(rt0.c1));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (((rt0.c2) NOT NULL) IN ()) WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c1)) THEN ((rt0.c1)*(vt0.c0)) ELSE (~ (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c1)) THEN ((rt0.c1)*(vt0.c0)) ELSE (~ (vt0.c1)) END) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((rt0.c2) NOT NULL) IN ()));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (((rt0.c2) NOT NULL) IN ()) WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c1)) THEN ((rt0.c1)*(vt0.c0)) ELSE (~ (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c1)) THEN ((rt0.c1)*(vt0.c0)) ELSE (~ (vt0.c1)) END) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((rt0.c2) NOT NULL) IN ()));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (((rt0.c2) NOT NULL) IN ()) WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c1)) THEN ((rt0.c1)*(vt0.c0)) ELSE (~ (vt0.c1)) END);
SELECT ALL * FROM rt0 WHERE (((TOTAL_CHANGES()) ISNULL));
SELECT SUM(count) FROM (SELECT ((((TOTAL_CHANGES()) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((TOTAL_CHANGES()) ISNULL));
SELECT SUM(count) FROM (SELECT ((((TOTAL_CHANGES()) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((TOTAL_CHANGES()) ISNULL));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c0)<>(rt0.c0)))-(((((((((vt0.c1)AND(rt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)!=(rt0.c0)))-(((((((((vt0.c1)AND(rt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c0)<>(rt0.c0)))-(((((((((vt0.c1)AND(rt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)!=(rt0.c0)))-(((((((((vt0.c1)AND(rt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c0)<>(rt0.c0)))-(((((((((vt0.c1)AND(rt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(rt0.c0)))));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON ((((v0.c0) NOT NULL)) BETWEEN (x'') AND (NULL)) WHERE ((- (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN NULL WHEN x'3607' THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN NULL WHEN x'3607' THEN vt0.c0 END))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((v0.c0) NOT NULL)) BETWEEN (x'') AND (NULL)));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON ((((v0.c0) NOT NULL)) BETWEEN (x'') AND (NULL)) WHERE ((- (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN NULL WHEN x'3607' THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN NULL WHEN x'3607' THEN vt0.c0 END))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((v0.c0) NOT NULL)) BETWEEN (x'') AND (NULL)));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON ((((v0.c0) NOT NULL)) BETWEEN (x'') AND (NULL)) WHERE ((- (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN NULL WHEN x'3607' THEN vt0.c0 END)));
SELECT ALL * FROM vt0, rt0 WHERE (CAST(((0.7571285259786712)=(vt0.c1)) AS BLOB)) ORDER BY ((~ (rt0.c2)) IN ())  NULLS FIRST, (((vt0.c0)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) AND ((CAST(x'' AS NUMERIC)))), ((CAST(vt0.c1 AS BLOB))OR((rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((CAST(((0.7571285259786712)=(vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((~ (rt0.c2)) IN ())  NULLS FIRST, (((vt0.c0)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) AND ((CAST(x'' AS NUMERIC)))), ((CAST(vt0.c1 AS BLOB))OR((rt0.c0 IN ()))));
SELECT ALL * FROM vt0, rt0 WHERE (CAST(((0.7571285259786712)=(vt0.c1)) AS BLOB)) ORDER BY ((~ (rt0.c2)) IN ())  NULLS FIRST, (((vt0.c0)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) AND ((CAST(x'' AS NUMERIC)))), ((CAST(vt0.c1 AS BLOB))OR((rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((CAST(((0.7571285259786712)=(vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((~ (rt0.c2)) IN ())  NULLS FIRST, (((vt0.c0)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) AND ((CAST(x'' AS NUMERIC)))), ((CAST(vt0.c1 AS BLOB))OR((rt0.c0 IN ()))));
SELECT ALL * FROM vt0, rt0 WHERE (CAST(((0.7571285259786712)=(vt0.c1)) AS BLOB)) ORDER BY ((~ (rt0.c2)) IN ())  NULLS FIRST, (((vt0.c0)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) AND ((CAST(x'' AS NUMERIC)))), ((CAST(vt0.c1 AS BLOB))OR((rt0.c0 IN ())));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((((((((((((rt0.c0))!=((v0.c0))))OR(((((((((rt0.c2)OR(rt0.c1)))OR(0.24102043791781835)))OR(v0.c0)))AND(v0.c0)))))AND(QUOTE(v0.c0))))AND(-7.17819979E8)))AND((((rt0.c0))<=((rt0.c0))))))OR(((rt0.c0)AND(rt0.c2)))))OR(rt0.c2 COLLATE NOCASE))) ORDER BY ((((rt0.c2)|(rt0.c1))) NOT BETWEEN (NULL) AND ('-1812441786' COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((((((rt0.c0))!=((v0.c0))))OR(((((((((rt0.c2)OR(rt0.c1)))OR(0.24102043791781835)))OR(v0.c0)))AND(v0.c0)))))AND(QUOTE(v0.c0))))AND(-7.17819979E8)))AND((((rt0.c0))<=((rt0.c0))))))OR(((rt0.c0)AND(rt0.c2)))))OR(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c2)|(rt0.c1))) NOT BETWEEN (NULL) AND ('-1812441786' COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((((((((((((rt0.c0))!=((v0.c0))))OR(((((((((rt0.c2)OR(rt0.c1)))OR(0.24102043791781835)))OR(v0.c0)))AND(v0.c0)))))AND(QUOTE(v0.c0))))AND(-7.17819979E8)))AND((((rt0.c0))<=((rt0.c0))))))OR(((rt0.c0)AND(rt0.c2)))))OR(rt0.c2 COLLATE NOCASE))) ORDER BY ((((rt0.c2)|(rt0.c1))) NOT BETWEEN (NULL) AND ('-1812441786' COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((((((rt0.c0))!=((v0.c0))))OR(((((((((rt0.c2)OR(rt0.c1)))OR(0.24102043791781835)))OR(v0.c0)))AND(v0.c0)))))AND(QUOTE(v0.c0))))AND(-7.17819979E8)))AND((((rt0.c0))<=((rt0.c0))))))OR(((rt0.c0)AND(rt0.c2)))))OR(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c2)|(rt0.c1))) NOT BETWEEN (NULL) AND ('-1812441786' COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((((((((((((rt0.c0))!=((v0.c0))))OR(((((((((rt0.c2)OR(rt0.c1)))OR(0.24102043791781835)))OR(v0.c0)))AND(v0.c0)))))AND(QUOTE(v0.c0))))AND(-7.17819979E8)))AND((((rt0.c0))<=((rt0.c0))))))OR(((rt0.c0)AND(rt0.c2)))))OR(rt0.c2 COLLATE NOCASE))) ORDER BY ((((rt0.c2)|(rt0.c1))) NOT BETWEEN (NULL) AND ('-1812441786' COLLATE BINARY)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN 0.5999301658667096 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN 0.5999301658667096 END) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN 0.5999301658667096 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN 0.5999301658667096 END) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN 0.5999301658667096 END) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((- (vt0.c0)))AND(CAST(vt0.c0 AS TEXT))))OR(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((- (vt0.c0)))AND(CAST(vt0.c0 AS TEXT))))OR(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((- (vt0.c0)))AND(CAST(vt0.c0 AS TEXT))))OR(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((- (vt0.c0)))AND(CAST(vt0.c0 AS TEXT))))OR(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((- (vt0.c0)))AND(CAST(vt0.c0 AS TEXT))))OR(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL) DESC  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE (((CAST(vt0.c0 AS BLOB))!=(((vt0.c0) IS TRUE)))) ORDER BY (((vt0.c0)GLOB(NULL)) IN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)), NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))!=(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c0)GLOB(NULL)) IN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)), NULL)));
SELECT * FROM v0, vt0 WHERE (((CAST(vt0.c0 AS BLOB))!=(((vt0.c0) IS TRUE)))) ORDER BY (((vt0.c0)GLOB(NULL)) IN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)), NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))!=(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c0)GLOB(NULL)) IN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)), NULL)));
SELECT * FROM v0, vt0 WHERE (((CAST(vt0.c0 AS BLOB))!=(((vt0.c0) IS TRUE)))) ORDER BY (((vt0.c0)GLOB(NULL)) IN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)), NULL));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((+ (rt0.c1)) COLLATE BINARY) ORDER BY ((((((v0.c0)OR(rt0.c0)))AND(rt0.c1))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((((((v0.c0)OR(rt0.c0)))AND(rt0.c1))) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((+ (rt0.c1)) COLLATE BINARY) ORDER BY ((((((v0.c0)OR(rt0.c0)))AND(rt0.c1))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((((((v0.c0)OR(rt0.c0)))AND(rt0.c1))) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((+ (rt0.c1)) COLLATE BINARY) ORDER BY ((((((v0.c0)OR(rt0.c0)))AND(rt0.c1))) NOTNULL)  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ((((v0.c0)+(v0.c0)) IN ())) ORDER BY ((((((v0.c0) ISNULL))OR((~ (v0.c0)))))OR((- (v0.c0)))), (v0.c0 IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)+(v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0) ISNULL))OR((~ (v0.c0)))))OR((- (v0.c0)))), (v0.c0 IN ()) ASC);
SELECT ALL * FROM v0 WHERE ((((v0.c0)+(v0.c0)) IN ())) ORDER BY ((((((v0.c0) ISNULL))OR((~ (v0.c0)))))OR((- (v0.c0)))), (v0.c0 IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)+(v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0) ISNULL))OR((~ (v0.c0)))))OR((- (v0.c0)))), (v0.c0 IN ()) ASC);
SELECT ALL * FROM v0 WHERE ((((v0.c0)+(v0.c0)) IN ())) ORDER BY ((((((v0.c0) ISNULL))OR((~ (v0.c0)))))OR((- (v0.c0)))), (v0.c0 IN ()) ASC;
SELECT * FROM rt0, v0, vt0 WHERE ((((rt0.c0 IN (v0.c0)))>=(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (v0.c0)))>=(v0.c0))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE ((((rt0.c0 IN (v0.c0)))>=(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (v0.c0)))>=(v0.c0))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE ((((rt0.c0 IN (v0.c0)))>=(v0.c0)));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON CASE rt0.c0  WHEN rt0.c1 COLLATE RTRIM THEN rt0.c2 WHEN ((vt0.c0) IS TRUE) THEN rt0.c1 COLLATE BINARY WHEN (rt0.c1 IN ()) THEN ((rt0.c2)<(vt0.c1)) END LEFT OUTER JOIN v0 ON UPPER(0.9684159833869205) WHERE (LIKELIHOOD(DISTINCT CAST(rt0.c0 AS NUMERIC), 0.8367143241825191));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CAST(rt0.c0 AS NUMERIC), 0.8367143241825191)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CASE rt0.c0  WHEN rt0.c1 COLLATE RTRIM THEN rt0.c2 WHEN ((vt0.c0) IS TRUE) THEN rt0.c1 COLLATE BINARY WHEN (rt0.c1 IN ()) THEN ((rt0.c2)<(vt0.c1)) END LEFT OUTER JOIN v0 ON UPPER(0.9684159833869205));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON CASE rt0.c0  WHEN rt0.c1 COLLATE RTRIM THEN rt0.c2 WHEN ((vt0.c0) IS TRUE) THEN rt0.c1 COLLATE BINARY WHEN (rt0.c1 IN ()) THEN ((rt0.c2)<(vt0.c1)) END LEFT OUTER JOIN v0 ON UPPER(0.9684159833869205) WHERE (LIKELIHOOD(DISTINCT CAST(rt0.c0 AS NUMERIC), 0.8367143241825191));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CAST(rt0.c0 AS NUMERIC), 0.8367143241825191)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CASE rt0.c0  WHEN rt0.c1 COLLATE RTRIM THEN rt0.c2 WHEN ((vt0.c0) IS TRUE) THEN rt0.c1 COLLATE BINARY WHEN (rt0.c1 IN ()) THEN ((rt0.c2)<(vt0.c1)) END LEFT OUTER JOIN v0 ON UPPER(0.9684159833869205));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON CASE rt0.c0  WHEN rt0.c1 COLLATE RTRIM THEN rt0.c2 WHEN ((vt0.c0) IS TRUE) THEN rt0.c1 COLLATE BINARY WHEN (rt0.c1 IN ()) THEN ((rt0.c2)<(vt0.c1)) END LEFT OUTER JOIN v0 ON UPPER(0.9684159833869205) WHERE (LIKELIHOOD(DISTINCT CAST(rt0.c0 AS NUMERIC), 0.8367143241825191));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)IS('-761260473'))) NOT NULL)) ORDER BY (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))>((((NULL) BETWEEN (vt0.c1) AND (vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS('-761260473'))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))>((((NULL) BETWEEN (vt0.c1) AND (vt0.c0)))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)IS('-761260473'))) NOT NULL)) ORDER BY (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))>((((NULL) BETWEEN (vt0.c1) AND (vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS('-761260473'))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))>((((NULL) BETWEEN (vt0.c1) AND (vt0.c0)))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)IS('-761260473'))) NOT NULL)) ORDER BY (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))>((((NULL) BETWEEN (vt0.c1) AND (vt0.c0)))))  NULLS LAST;
SELECT * FROM rt0, vt0, v0 WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (CAST(NULL AS TEXT));
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND (HEX(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND (HEX(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND (HEX(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND (HEX(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND (HEX(vt0.c0))));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((CAST(vt0.c0 AS TEXT)) IS TRUE) WHERE ((((vt0.c1, vt0.c0, v0.c0)) BETWEEN ((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR('')), (vt0.c0 IN ()), CAST(v0.c0 AS NUMERIC))) AND ((((v0.c0) NOT BETWEEN ('-451535656') AND (vt0.c0)), ((v0.c0)AND(vt0.c0)), ((v0.c0)<=(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c0, v0.c0)) BETWEEN ((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR('')), (vt0.c0 IN ()), CAST(v0.c0 AS NUMERIC))) AND ((((v0.c0) NOT BETWEEN ('-451535656') AND (vt0.c0)), ((v0.c0)AND(vt0.c0)), ((v0.c0)<=(vt0.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((CAST(vt0.c0 AS TEXT)) IS TRUE));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((CAST(vt0.c0 AS TEXT)) IS TRUE) WHERE ((((vt0.c1, vt0.c0, v0.c0)) BETWEEN ((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR('')), (vt0.c0 IN ()), CAST(v0.c0 AS NUMERIC))) AND ((((v0.c0) NOT BETWEEN ('-451535656') AND (vt0.c0)), ((v0.c0)AND(vt0.c0)), ((v0.c0)<=(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c0, v0.c0)) BETWEEN ((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR('')), (vt0.c0 IN ()), CAST(v0.c0 AS NUMERIC))) AND ((((v0.c0) NOT BETWEEN ('-451535656') AND (vt0.c0)), ((v0.c0)AND(vt0.c0)), ((v0.c0)<=(vt0.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((CAST(vt0.c0 AS TEXT)) IS TRUE));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((CAST(vt0.c0 AS TEXT)) IS TRUE) WHERE ((((vt0.c1, vt0.c0, v0.c0)) BETWEEN ((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR('')), (vt0.c0 IN ()), CAST(v0.c0 AS NUMERIC))) AND ((((v0.c0) NOT BETWEEN ('-451535656') AND (vt0.c0)), ((v0.c0)AND(vt0.c0)), ((v0.c0)<=(vt0.c0))))));
SELECT * FROM rt0, vt0 FULL OUTER JOIN v0 ON (((vt0.c0))>=((0.6134538172943534))) WHERE (CAST(rt0.c0 COLLATE NOCASE AS INTEGER)) ORDER BY ((((CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END)AND(((vt0.c0)=(v0.c0)))))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN v0 ON (((vt0.c0))>=((0.6134538172943534))) ORDER BY ((((CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END)AND(((vt0.c0)=(v0.c0)))))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT * FROM rt0, vt0 FULL OUTER JOIN v0 ON (((vt0.c0))>=((0.6134538172943534))) WHERE (CAST(rt0.c0 COLLATE NOCASE AS INTEGER)) ORDER BY ((((CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END)AND(((vt0.c0)=(v0.c0)))))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN v0 ON (((vt0.c0))>=((0.6134538172943534))) ORDER BY ((((CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END)AND(((vt0.c0)=(v0.c0)))))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT * FROM rt0, vt0 FULL OUTER JOIN v0 ON (((vt0.c0))>=((0.6134538172943534))) WHERE (CAST(rt0.c0 COLLATE NOCASE AS INTEGER)) ORDER BY ((((CASE WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END)AND(((vt0.c0)=(v0.c0)))))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKE(NULL, ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))) ORDER BY CASE CAST(rt0.c1 AS TEXT)  WHEN rt0.c1 THEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN '-1630089347' END WHEN -1084351047 THEN rt0.c0 WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c1) ISNULL) ELSE rt0.c2 END  NULLS LAST, CASE WHEN (rt0.c1 IN ()) THEN rt0.c0 COLLATE BINARY WHEN CAST(rt0.c1 AS NUMERIC) THEN json_valid(rt0.c0) WHEN (('')GLOB(rt0.c1)) THEN CAST(rt0.c1 AS NUMERIC) ELSE rt0.c0 END DESC;
SELECT SUM(count) FROM (SELECT ((LIKE(NULL, ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY CASE CAST(rt0.c1 AS TEXT)  WHEN rt0.c1 THEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN '-1630089347' END WHEN -1084351047 THEN rt0.c0 WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c1) ISNULL) ELSE rt0.c2 END  NULLS LAST, CASE WHEN (rt0.c1 IN ()) THEN rt0.c0 COLLATE BINARY WHEN CAST(rt0.c1 AS NUMERIC) THEN json_valid(rt0.c0) WHEN (('')GLOB(rt0.c1)) THEN CAST(rt0.c1 AS NUMERIC) ELSE rt0.c0 END DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKE(NULL, ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))) ORDER BY CASE CAST(rt0.c1 AS TEXT)  WHEN rt0.c1 THEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN '-1630089347' END WHEN -1084351047 THEN rt0.c0 WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c1) ISNULL) ELSE rt0.c2 END  NULLS LAST, CASE WHEN (rt0.c1 IN ()) THEN rt0.c0 COLLATE BINARY WHEN CAST(rt0.c1 AS NUMERIC) THEN json_valid(rt0.c0) WHEN (('')GLOB(rt0.c1)) THEN CAST(rt0.c1 AS NUMERIC) ELSE rt0.c0 END DESC;
SELECT SUM(count) FROM (SELECT ((LIKE(NULL, ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY CASE CAST(rt0.c1 AS TEXT)  WHEN rt0.c1 THEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN '-1630089347' END WHEN -1084351047 THEN rt0.c0 WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c1) ISNULL) ELSE rt0.c2 END  NULLS LAST, CASE WHEN (rt0.c1 IN ()) THEN rt0.c0 COLLATE BINARY WHEN CAST(rt0.c1 AS NUMERIC) THEN json_valid(rt0.c0) WHEN (('')GLOB(rt0.c1)) THEN CAST(rt0.c1 AS NUMERIC) ELSE rt0.c0 END DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKE(NULL, ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))) ORDER BY CASE CAST(rt0.c1 AS TEXT)  WHEN rt0.c1 THEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN '-1630089347' END WHEN -1084351047 THEN rt0.c0 WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c1) ISNULL) ELSE rt0.c2 END  NULLS LAST, CASE WHEN (rt0.c1 IN ()) THEN rt0.c0 COLLATE BINARY WHEN CAST(rt0.c1 AS NUMERIC) THEN json_valid(rt0.c0) WHEN (('')GLOB(rt0.c1)) THEN CAST(rt0.c1 AS NUMERIC) ELSE rt0.c0 END DESC;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c0)<(vt0.c0)))OR((((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))) WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER)) ORDER BY (((((x'')) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c0)<(vt0.c0)))OR((((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))) ORDER BY (((((x'')) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) IS FALSE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c0)<(vt0.c0)))OR((((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))) WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER)) ORDER BY (((((x'')) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c0)<(vt0.c0)))OR((((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))) ORDER BY (((((x'')) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) IS FALSE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c0)<(vt0.c0)))OR((((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))) WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER)) ORDER BY (((((x'')) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) IS FALSE) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((+ (rt0.c1)) COLLATE BINARY) ORDER BY ((rt0.c0)IS NOT(((rt0.c2)LIKE(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c0)IS NOT(((rt0.c2)LIKE(rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((+ (rt0.c1)) COLLATE BINARY) ORDER BY ((rt0.c0)IS NOT(((rt0.c2)LIKE(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c0)IS NOT(((rt0.c2)LIKE(rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((+ (rt0.c1)) COLLATE BINARY) ORDER BY ((rt0.c0)IS NOT(((rt0.c2)LIKE(rt0.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((vt0.c1 COLLATE BINARY)AND(((vt0.c1) IS FALSE))))AND(rt0.c0)))AND(CAST(rt0.c0 AS REAL))))AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1 COLLATE BINARY)AND(((vt0.c1) IS FALSE))))AND(rt0.c0)))AND(CAST(rt0.c0 AS REAL))))AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((vt0.c1 COLLATE BINARY)AND(((vt0.c1) IS FALSE))))AND(rt0.c0)))AND(CAST(rt0.c0 AS REAL))))AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1 COLLATE BINARY)AND(((vt0.c1) IS FALSE))))AND(rt0.c0)))AND(CAST(rt0.c0 AS REAL))))AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((vt0.c1 COLLATE BINARY)AND(((vt0.c1) IS FALSE))))AND(rt0.c0)))AND(CAST(rt0.c0 AS REAL))))AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))));
SELECT * FROM rt0, vt0 FULL OUTER JOIN v0 ON (((((vt0.c0))>((rt0.c0)))) NOT BETWEEN ((vt0.c0 IN ())) AND ((v0.c0 IN ()))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN v0 ON (((((vt0.c0))>((rt0.c0)))) NOT BETWEEN ((vt0.c0 IN ())) AND ((v0.c0 IN ()))));
SELECT * FROM rt0, vt0 FULL OUTER JOIN v0 ON (((((vt0.c0))>((rt0.c0)))) NOT BETWEEN ((vt0.c0 IN ())) AND ((v0.c0 IN ()))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN v0 ON (((((vt0.c0))>((rt0.c0)))) NOT BETWEEN ((vt0.c0 IN ())) AND ((v0.c0 IN ()))));
SELECT * FROM rt0, vt0 FULL OUTER JOIN v0 ON (((((vt0.c0))>((rt0.c0)))) NOT BETWEEN ((vt0.c0 IN ())) AND ((v0.c0 IN ()))) WHERE (x'');
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((vt0.c0 IN ()));
SELECT ALL * FROM v0 WHERE ('4⍱+彩Kg');
SELECT SUM(count) FROM (SELECT (('4⍱+彩Kg') IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ('4⍱+彩Kg');
SELECT SUM(count) FROM (SELECT (('4⍱+彩Kg') IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ('4⍱+彩Kg');
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (CASE (('')<(v0.c0))  WHEN LOWER(DISTINCT vt0.c1) THEN vt0.c1 COLLATE BINARY ELSE (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) END) ORDER BY (((rt0.c2)) BETWEEN ((0.5919981182909367)) AND ((TYPEOF(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE (('')<(v0.c0))  WHEN LOWER(DISTINCT vt0.c1) THEN vt0.c1 COLLATE BINARY ELSE (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) END) IS TRUE)  as count FROM rt0, v0, vt0 NOT INDEXED ORDER BY (((rt0.c2)) BETWEEN ((0.5919981182909367)) AND ((TYPEOF(DISTINCT vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (CASE (('')<(v0.c0))  WHEN LOWER(DISTINCT vt0.c1) THEN vt0.c1 COLLATE BINARY ELSE (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) END) ORDER BY (((rt0.c2)) BETWEEN ((0.5919981182909367)) AND ((TYPEOF(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE (('')<(v0.c0))  WHEN LOWER(DISTINCT vt0.c1) THEN vt0.c1 COLLATE BINARY ELSE (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) END) IS TRUE)  as count FROM rt0, v0, vt0 NOT INDEXED ORDER BY (((rt0.c2)) BETWEEN ((0.5919981182909367)) AND ((TYPEOF(DISTINCT vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (CASE (('')<(v0.c0))  WHEN LOWER(DISTINCT vt0.c1) THEN vt0.c1 COLLATE BINARY ELSE (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) END) ORDER BY (((rt0.c2)) BETWEEN ((0.5919981182909367)) AND ((TYPEOF(DISTINCT vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (TIME(((((vt0.c1)OR(vt0.c1)))AND(x'')), CAST(vt0.c1 AS TEXT), CAST('' AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((TIME(((((vt0.c1)OR(vt0.c1)))AND(x'')), CAST(vt0.c1 AS TEXT), CAST('' AS TEXT))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (TIME(((((vt0.c1)OR(vt0.c1)))AND(x'')), CAST(vt0.c1 AS TEXT), CAST('' AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((TIME(((((vt0.c1)OR(vt0.c1)))AND(x'')), CAST(vt0.c1 AS TEXT), CAST('' AS TEXT))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (TIME(((((vt0.c1)OR(vt0.c1)))AND(x'')), CAST(vt0.c1 AS TEXT), CAST('' AS TEXT)));
SELECT COUNT(*) FROM rt0, v0 INNER JOIN vt0 ON ((v0.c0 COLLATE NOCASE)%((+ (x'7ec3')))) WHERE (x'') ORDER BY 0.02789760284871834  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, v0 INNER JOIN vt0 ON ((v0.c0 COLLATE NOCASE)%((+ (x'7ec3')))) ORDER BY 0.02789760284871834  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 INNER JOIN vt0 ON ((v0.c0 COLLATE NOCASE)%((+ (x'7ec3')))) WHERE (x'') ORDER BY 0.02789760284871834  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, v0 INNER JOIN vt0 ON ((v0.c0 COLLATE NOCASE)%((+ (x'7ec3')))) ORDER BY 0.02789760284871834  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 INNER JOIN vt0 ON ((v0.c0 COLLATE NOCASE)%((+ (x'7ec3')))) WHERE (x'') ORDER BY 0.02789760284871834  NULLS LAST;
SELECT * FROM rt0 WHERE (((((rt0.c0) ISNULL))%(json_array_length('5', rt0.c2)))) ORDER BY CASE WHEN NULL THEN rt0.c0 ELSE '' END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) ISNULL))%(json_array_length('5', rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN NULL THEN rt0.c0 ELSE '' END COLLATE BINARY);
SELECT * FROM rt0 WHERE (((((rt0.c0) ISNULL))%(json_array_length('5', rt0.c2)))) ORDER BY CASE WHEN NULL THEN rt0.c0 ELSE '' END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) ISNULL))%(json_array_length('5', rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN NULL THEN rt0.c0 ELSE '' END COLLATE BINARY);
SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((rt0.c1)=('-173230636'))))) ORDER BY CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) AS INTEGER) DESC  NULLS LAST, (((rt0.c0)) NOT BETWEEN ((CASE rt0.c2  WHEN vt0.c0 THEN -696143021 END)) AND ((((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c1)==('-173230636'))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) AS INTEGER) DESC  NULLS LAST, (((rt0.c0)) NOT BETWEEN ((CASE rt0.c2  WHEN vt0.c0 THEN -696143021 END)) AND ((((rt0.c2) NOT NULL)))));
SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((rt0.c1)=('-173230636'))))) ORDER BY CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) AS INTEGER) DESC  NULLS LAST, (((rt0.c0)) NOT BETWEEN ((CASE rt0.c2  WHEN vt0.c0 THEN -696143021 END)) AND ((((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c1)==('-173230636'))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) AS INTEGER) DESC  NULLS LAST, (((rt0.c0)) NOT BETWEEN ((CASE rt0.c2  WHEN vt0.c0 THEN -696143021 END)) AND ((((rt0.c2) NOT NULL)))));
SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((rt0.c1)=('-173230636'))))) ORDER BY CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) AS INTEGER) DESC  NULLS LAST, (((rt0.c0)) NOT BETWEEN ((CASE rt0.c2  WHEN vt0.c0 THEN -696143021 END)) AND ((((rt0.c2) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((+ (((vt0.c1)>>(rt0.c0))))) ORDER BY ((((vt0.c0) IS TRUE)) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c1)LIKE(vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c1)>>(rt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((((vt0.c0) IS TRUE)) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c1)LIKE(vt0.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((+ (((vt0.c1)>>(rt0.c0))))) ORDER BY ((((vt0.c0) IS TRUE)) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c1)LIKE(vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c1)>>(rt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((((vt0.c0) IS TRUE)) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c1)LIKE(vt0.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((+ (((vt0.c1)>>(rt0.c0))))) ORDER BY ((((vt0.c0) IS TRUE)) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c1)LIKE(vt0.c1)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE ((((- (vt0.c0)))LIKE(((vt0.c0)<>(vt0.c0))))) ORDER BY (((((0.2205963987846482))=((v0.c0))))>=(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))LIKE(((vt0.c0)<>(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((0.2205963987846482))=((v0.c0))))>=(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((- (vt0.c0)))LIKE(((vt0.c0)<>(vt0.c0))))) ORDER BY (((((0.2205963987846482))=((v0.c0))))>=(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))LIKE(((vt0.c0)<>(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((0.2205963987846482))=((v0.c0))))>=(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((- (vt0.c0)))LIKE(((vt0.c0)<>(vt0.c0))))) ORDER BY (((((0.2205963987846482))=((v0.c0))))>=(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0, v0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (NULL) AND (((((((((rt0.c1)AND(rt0.c0)))OR(x'8a6a')))AND(vt0.c1)))OR(rt0.c0))))) ORDER BY v0.c0  NULLS LAST, ((CAST(rt0.c2 AS TEXT))<>((rt0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) NOT BETWEEN (NULL) AND (((((((((rt0.c1)AND(rt0.c0)))OR(x'8a6a')))AND(vt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY v0.c0  NULLS LAST, ((CAST(rt0.c2 AS TEXT))<>((rt0.c1 IN ())))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (NULL) AND (((((((((rt0.c1)AND(rt0.c0)))OR(x'8a6a')))AND(vt0.c1)))OR(rt0.c0))))) ORDER BY v0.c0  NULLS LAST, ((CAST(rt0.c2 AS TEXT))<>((rt0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) NOT BETWEEN (NULL) AND (((((((((rt0.c1)AND(rt0.c0)))OR(x'8a6a')))AND(vt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY v0.c0  NULLS LAST, ((CAST(rt0.c2 AS TEXT))<>((rt0.c1 IN ())))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (NULL) AND (((((((((rt0.c1)AND(rt0.c0)))OR(x'8a6a')))AND(vt0.c1)))OR(rt0.c0))))) ORDER BY v0.c0  NULLS LAST, ((CAST(rt0.c2 AS TEXT))<>((rt0.c1 IN ())))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN '328717602' THEN rt0.c0 ELSE rt0.c1 END IN ())) ORDER BY '*#y%}	,g-'  NULLS FIRST, ((vt0.c1) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN '328717602' THEN rt0.c0 ELSE rt0.c1 END IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY '*#y%}	,g-'  NULLS FIRST, ((vt0.c1) IS FALSE) DESC);
SELECT ALL * FROM rt0, vt0 WHERE ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN '328717602' THEN rt0.c0 ELSE rt0.c1 END IN ())) ORDER BY '*#y%}	,g-'  NULLS FIRST, ((vt0.c1) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN '328717602' THEN rt0.c0 ELSE rt0.c1 END IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY '*#y%}	,g-'  NULLS FIRST, ((vt0.c1) IS FALSE) DESC);
SELECT ALL * FROM rt0, vt0 WHERE ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN '328717602' THEN rt0.c0 ELSE rt0.c1 END IN ())) ORDER BY '*#y%}	,g-'  NULLS FIRST, ((vt0.c1) IS FALSE) DESC;
SELECT ALL * FROM v0, rt0, vt0 WHERE (json_type(rt0.c1) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((json_type(rt0.c1) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (json_type(rt0.c1) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((json_type(rt0.c1) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (json_type(rt0.c1) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1 COLLATE RTRIM)+(((vt0.c1)>(rt0.c0))))) ORDER BY ((((vt0.c0)OR(CASE WHEN rt0.c1 THEN vt0.c1 END)))OR(NULL)) ASC, ((- (rt0.c0)) IN ())  NULLS FIRST, (((NOT (rt0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM)+(((vt0.c1)>(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0)OR(CASE WHEN rt0.c1 THEN vt0.c1 END)))OR(NULL)) ASC, ((- (rt0.c0)) IN ())  NULLS FIRST, (((NOT (rt0.c0))) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1 COLLATE RTRIM)+(((vt0.c1)>(rt0.c0))))) ORDER BY ((((vt0.c0)OR(CASE WHEN rt0.c1 THEN vt0.c1 END)))OR(NULL)) ASC, ((- (rt0.c0)) IN ())  NULLS FIRST, (((NOT (rt0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM)+(((vt0.c1)>(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0)OR(CASE WHEN rt0.c1 THEN vt0.c1 END)))OR(NULL)) ASC, ((- (rt0.c0)) IN ())  NULLS FIRST, (((NOT (rt0.c0))) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1 COLLATE RTRIM)+(((vt0.c1)>(rt0.c0))))) ORDER BY ((((vt0.c0)OR(CASE WHEN rt0.c1 THEN vt0.c1 END)))OR(NULL)) ASC, ((- (rt0.c0)) IN ())  NULLS FIRST, (((NOT (rt0.c0))) NOTNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((rt0.c0 IN ()))||((vt0.c0 IN (x'')))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))||((vt0.c0 IN (x''))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((rt0.c0 IN ()))||((vt0.c0 IN (x'')))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))||((vt0.c0 IN (x''))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((rt0.c0 IN ()))||((vt0.c0 IN (x'')))));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON CASE WHEN ((((vt0.c0)AND(vt0.c1)))OR(rt0.c1)) THEN (rt0.c2 IN ()) ELSE TYPEOF(DISTINCT rt0.c1) END INNER JOIN rt0 ON ((v0.c0) NOTNULL) WHERE (UPPER(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) ORDER BY ((((((rt0.c0)/(rt0.c0)))OR(rt0.c2)))AND(((rt0.c2) BETWEEN (vt0.c0) AND (v0.c0)))) DESC, (((CAST(rt0.c1 AS BLOB), CAST(rt0.c2 AS BLOB), CAST(rt0.c1 AS INTEGER)))>=((((vt0.c1)>>(v0.c0)), CASE WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END, (((rt0.c0, v0.c0, vt0.c0))!=((rt0.c1, rt0.c1, vt0.c1))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON CASE WHEN ((((vt0.c0)AND(vt0.c1)))OR(rt0.c1)) THEN (rt0.c2 IN ()) ELSE TYPEOF(DISTINCT rt0.c1) END INNER JOIN rt0 ON ((v0.c0) NOTNULL) ORDER BY ((((((rt0.c0)/(rt0.c0)))OR(rt0.c2)))AND(((rt0.c2) BETWEEN (vt0.c0) AND (v0.c0)))) DESC, (((CAST(rt0.c1 AS BLOB), CAST(rt0.c2 AS BLOB), CAST(rt0.c1 AS INTEGER)))>=((((vt0.c1)>>(v0.c0)), CASE WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END, (((rt0.c0, v0.c0, vt0.c0))<>((rt0.c1, rt0.c1, vt0.c1))))))  NULLS LAST);
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON CASE WHEN ((((vt0.c0)AND(vt0.c1)))OR(rt0.c1)) THEN (rt0.c2 IN ()) ELSE TYPEOF(DISTINCT rt0.c1) END INNER JOIN rt0 ON ((v0.c0) NOTNULL) WHERE (UPPER(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) ORDER BY ((((((rt0.c0)/(rt0.c0)))OR(rt0.c2)))AND(((rt0.c2) BETWEEN (vt0.c0) AND (v0.c0)))) DESC, (((CAST(rt0.c1 AS BLOB), CAST(rt0.c2 AS BLOB), CAST(rt0.c1 AS INTEGER)))>=((((vt0.c1)>>(v0.c0)), CASE WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END, (((rt0.c0, v0.c0, vt0.c0))!=((rt0.c1, rt0.c1, vt0.c1))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON CASE WHEN ((((vt0.c0)AND(vt0.c1)))OR(rt0.c1)) THEN (rt0.c2 IN ()) ELSE TYPEOF(DISTINCT rt0.c1) END INNER JOIN rt0 ON ((v0.c0) NOTNULL) ORDER BY ((((((rt0.c0)/(rt0.c0)))OR(rt0.c2)))AND(((rt0.c2) BETWEEN (vt0.c0) AND (v0.c0)))) DESC, (((CAST(rt0.c1 AS BLOB), CAST(rt0.c2 AS BLOB), CAST(rt0.c1 AS INTEGER)))>=((((vt0.c1)>>(v0.c0)), CASE WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END, (((rt0.c0, v0.c0, vt0.c0))<>((rt0.c1, rt0.c1, vt0.c1))))))  NULLS LAST);
SELECT * FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (NULL);
SELECT * FROM rt0, vt0 WHERE (x'6144') ORDER BY ((((((((((((CAST(vt0.c0 AS BLOB))OR(((rt0.c0)+(rt0.c2)))))AND(((((rt0.c0)OR(x'')))OR(rt0.c0)))))AND(((vt0.c0) NOTNULL))))AND((+ (NULL)))))OR(x'35f4')))AND(SQLITE_VERSION()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'6144') IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((((CAST(vt0.c0 AS BLOB))OR(((rt0.c0)+(rt0.c2)))))AND(((((rt0.c0)OR(x'')))OR(rt0.c0)))))AND(((vt0.c0) NOTNULL))))AND((+ (NULL)))))OR(x'35f4')))AND(SQLITE_VERSION()))  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (x'6144') ORDER BY ((((((((((((CAST(vt0.c0 AS BLOB))OR(((rt0.c0)+(rt0.c2)))))AND(((((rt0.c0)OR(x'')))OR(rt0.c0)))))AND(((vt0.c0) NOTNULL))))AND((+ (NULL)))))OR(x'35f4')))AND(SQLITE_VERSION()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'6144') IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((((CAST(vt0.c0 AS BLOB))OR(((rt0.c0)+(rt0.c2)))))AND(((((rt0.c0)OR(x'')))OR(rt0.c0)))))AND(((vt0.c0) NOTNULL))))AND((+ (NULL)))))OR(x'35f4')))AND(SQLITE_VERSION()))  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (x'6144') ORDER BY ((((((((((((CAST(vt0.c0 AS BLOB))OR(((rt0.c0)+(rt0.c2)))))AND(((((rt0.c0)OR(x'')))OR(rt0.c0)))))AND(((vt0.c0) NOTNULL))))AND((+ (NULL)))))OR(x'35f4')))AND(SQLITE_VERSION()))  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN rt0 ON ((((vt0.c1) IS FALSE)) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (CAST(rt0.c0 AS BLOB))) WHERE ((~ ((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((- (rt0.c0))))) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN rt0 ON ((((vt0.c1) IS FALSE)) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (CAST(rt0.c0 AS BLOB))));
SELECT COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN rt0 ON ((((vt0.c1) IS FALSE)) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (CAST(rt0.c0 AS BLOB))) WHERE ((~ ((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((- (rt0.c0))))) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN rt0 ON ((((vt0.c1) IS FALSE)) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (CAST(rt0.c0 AS BLOB))));
SELECT COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN rt0 ON ((((vt0.c1) IS FALSE)) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (CAST(rt0.c0 AS BLOB))) WHERE ((~ ((- (rt0.c0)))));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((vt0.c1) NOT NULL))AND('')))AND(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) NOT NULL))AND('')))AND(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((vt0.c1) NOT NULL))AND('')))AND(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) NOT NULL))AND('')))AND(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((vt0.c1) NOT NULL))AND('')))AND(((vt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS NUMERIC)) ORDER BY NULL DESC, ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)*(CASE rt0.c0  WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c0 END)) ASC  NULLS FIRST, '0.019721836930129633' ASC  NULLS LAST, ((((x'83da')||(rt0.c1))) NOT BETWEEN (CASE WHEN vt0.c0 THEN '' END) AND ((rt0.c1 IN (x'c157'))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c1 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL DESC, ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)*(CASE rt0.c0  WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c0 END)) ASC  NULLS FIRST, '0.019721836930129633' ASC  NULLS LAST, ((((x'83da')||(rt0.c1))) NOT BETWEEN (CASE WHEN vt0.c0 THEN '' END) AND ((rt0.c1 IN (x'c157')))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS NUMERIC)) ORDER BY NULL DESC, ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)*(CASE rt0.c0  WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c0 END)) ASC  NULLS FIRST, '0.019721836930129633' ASC  NULLS LAST, ((((x'83da')||(rt0.c1))) NOT BETWEEN (CASE WHEN vt0.c0 THEN '' END) AND ((rt0.c1 IN (x'c157'))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c1 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL DESC, ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)*(CASE rt0.c0  WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c0 END)) ASC  NULLS FIRST, '0.019721836930129633' ASC  NULLS LAST, ((((x'83da')||(rt0.c1))) NOT BETWEEN (CASE WHEN vt0.c0 THEN '' END) AND ((rt0.c1 IN (x'c157')))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS NUMERIC)) ORDER BY NULL DESC, ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)*(CASE rt0.c0  WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c0 END)) ASC  NULLS FIRST, '0.019721836930129633' ASC  NULLS LAST, ((((x'83da')||(rt0.c1))) NOT BETWEEN (CASE WHEN vt0.c0 THEN '' END) AND ((rt0.c1 IN (x'c157'))));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((((((((((((((rt0.c2)AND(-930087749)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(vt0.c1)))AND(rt0.c2))))) LEFT OUTER JOIN rt0 ON ((('')<(rt0.c1)) IN ((vt0.c1 IN (rt0.c1, x'a9442d99')))) WHERE (((((rt0.c0) IS TRUE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM vt0 NOT INDEXED CROSS JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((((((((((((((rt0.c2)AND(-930087749)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(vt0.c1)))AND(rt0.c2))))) LEFT OUTER JOIN rt0 ON ((('')<(rt0.c1)) IN ((vt0.c1 IN (rt0.c1, x'a9442d99')))));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((((((((((((((rt0.c2)AND(-930087749)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(vt0.c1)))AND(rt0.c2))))) LEFT OUTER JOIN rt0 ON ((('')<(rt0.c1)) IN ((vt0.c1 IN (rt0.c1, x'a9442d99')))) WHERE (((((rt0.c0) IS TRUE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM vt0 NOT INDEXED CROSS JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((((((((((((((rt0.c2)AND(-930087749)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(vt0.c1)))AND(rt0.c2))))) LEFT OUTER JOIN rt0 ON ((('')<(rt0.c1)) IN ((vt0.c1 IN (rt0.c1, x'a9442d99')))));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((((((((((((((rt0.c2)AND(-930087749)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(vt0.c1)))AND(rt0.c2))))) LEFT OUTER JOIN rt0 ON ((('')<(rt0.c1)) IN ((vt0.c1 IN (rt0.c1, x'a9442d99')))) WHERE (((((rt0.c0) IS TRUE)) NOT NULL));
SELECT * FROM vt0 WHERE (CAST(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) AS TEXT));
SELECT COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt0 ON rt0.c2 WHERE (CASE (v0.c0 IN (vt0.c1))  WHEN '特r' THEN ((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) WHEN ((v0.c0)OR(rt0.c0)) THEN 'HUz*' WHEN (vt0.c0 IN (vt0.c0)) THEN (((rt0.c2)) BETWEEN ((x'')) AND ((NULL))) WHEN ((('hd'))>((rt0.c2))) THEN (((rt0.c2))=((rt0.c0))) WHEN ((rt0.c0)/(NULL)) THEN 0.23678130201718273 ELSE x'83ac' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (v0.c0 IN (vt0.c1))  WHEN '特r' THEN ((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) WHEN ((v0.c0)OR(rt0.c0)) THEN 'HUz*' WHEN (vt0.c0 IN (vt0.c0)) THEN (((rt0.c2)) BETWEEN ((x'')) AND ((NULL))) WHEN ((('hd'))>((rt0.c2))) THEN (((rt0.c2))=((rt0.c0))) WHEN ((rt0.c0)/(NULL)) THEN 0.23678130201718273 ELSE x'83ac' END) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN vt0 ON rt0.c2);
SELECT COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt0 ON rt0.c2 WHERE (CASE (v0.c0 IN (vt0.c1))  WHEN '特r' THEN ((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) WHEN ((v0.c0)OR(rt0.c0)) THEN 'HUz*' WHEN (vt0.c0 IN (vt0.c0)) THEN (((rt0.c2)) BETWEEN ((x'')) AND ((NULL))) WHEN ((('hd'))>((rt0.c2))) THEN (((rt0.c2))=((rt0.c0))) WHEN ((rt0.c0)/(NULL)) THEN 0.23678130201718273 ELSE x'83ac' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (v0.c0 IN (vt0.c1))  WHEN '特r' THEN ((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) WHEN ((v0.c0)OR(rt0.c0)) THEN 'HUz*' WHEN (vt0.c0 IN (vt0.c0)) THEN (((rt0.c2)) BETWEEN ((x'')) AND ((NULL))) WHEN ((('hd'))>((rt0.c2))) THEN (((rt0.c2))=((rt0.c0))) WHEN ((rt0.c0)/(NULL)) THEN 0.23678130201718273 ELSE x'83ac' END) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN vt0 ON rt0.c2);
SELECT COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt0 ON rt0.c2 WHERE (CASE (v0.c0 IN (vt0.c1))  WHEN '特r' THEN ((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) WHEN ((v0.c0)OR(rt0.c0)) THEN 'HUz*' WHEN (vt0.c0 IN (vt0.c0)) THEN (((rt0.c2)) BETWEEN ((x'')) AND ((NULL))) WHEN ((('hd'))>((rt0.c2))) THEN (((rt0.c2))=((rt0.c0))) WHEN ((rt0.c0)/(NULL)) THEN 0.23678130201718273 ELSE x'83ac' END);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))) AND ((vt0.c1 IN ()))) WHERE ((((v0.c0) IS FALSE) IN (((vt0.c1) NOT NULL)))) ORDER BY CASE WHEN v0.c0 COLLATE BINARY THEN (((vt0.c1, v0.c0, 0X5e0efc68))<=((vt0.c0, -3.54591288E8, v0.c0))) WHEN CASE '93060383'  WHEN NULL THEN vt0.c1 ELSE vt0.c1 END THEN vt0.c1 WHEN ((vt0.c0)&(v0.c0)) THEN (vt0.c1 IN (vt0.c0, vt0.c1)) ELSE ((vt0.c1) NOT NULL) END;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) IS FALSE) IN (((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))) AND ((vt0.c1 IN ()))) ORDER BY CASE WHEN v0.c0 COLLATE BINARY THEN (((vt0.c1, v0.c0, 0x5e0efc68))<=((vt0.c0, -3.54591288E8, v0.c0))) WHEN CASE '93060383'  WHEN NULL THEN vt0.c1 ELSE vt0.c1 END THEN vt0.c1 WHEN ((vt0.c0)&(v0.c0)) THEN (vt0.c1 IN (vt0.c0, vt0.c1)) ELSE ((vt0.c1) NOT NULL) END);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))) AND ((vt0.c1 IN ()))) WHERE ((((v0.c0) IS FALSE) IN (((vt0.c1) NOT NULL)))) ORDER BY CASE WHEN v0.c0 COLLATE BINARY THEN (((vt0.c1, v0.c0, 0X5e0efc68))<=((vt0.c0, -3.54591288E8, v0.c0))) WHEN CASE '93060383'  WHEN NULL THEN vt0.c1 ELSE vt0.c1 END THEN vt0.c1 WHEN ((vt0.c0)&(v0.c0)) THEN (vt0.c1 IN (vt0.c0, vt0.c1)) ELSE ((vt0.c1) NOT NULL) END;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) IS FALSE) IN (((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))) AND ((vt0.c1 IN ()))) ORDER BY CASE WHEN v0.c0 COLLATE BINARY THEN (((vt0.c1, v0.c0, 0x5e0efc68))<=((vt0.c0, -3.54591288E8, v0.c0))) WHEN CASE '93060383'  WHEN NULL THEN vt0.c1 ELSE vt0.c1 END THEN vt0.c1 WHEN ((vt0.c0)&(v0.c0)) THEN (vt0.c1 IN (vt0.c0, vt0.c1)) ELSE ((vt0.c1) NOT NULL) END);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))) AND ((vt0.c1 IN ()))) WHERE ((((v0.c0) IS FALSE) IN (((vt0.c1) NOT NULL)))) ORDER BY CASE WHEN v0.c0 COLLATE BINARY THEN (((vt0.c1, v0.c0, 0X5e0efc68))<=((vt0.c0, -3.54591288E8, v0.c0))) WHEN CASE '93060383'  WHEN NULL THEN vt0.c1 ELSE vt0.c1 END THEN vt0.c1 WHEN ((vt0.c0)&(v0.c0)) THEN (vt0.c1 IN (vt0.c0, vt0.c1)) ELSE ((vt0.c1) NOT NULL) END;
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (x'') ORDER BY CAST(CAST(rt0.c0 AS INTEGER) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY CAST(CAST(rt0.c0 AS INTEGER) AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (x'') ORDER BY CAST(CAST(rt0.c0 AS INTEGER) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY CAST(CAST(rt0.c0 AS INTEGER) AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (x'') ORDER BY CAST(CAST(rt0.c0 AS INTEGER) AS INTEGER)  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (CAST(UPPER(DISTINCT v0.c0) AS REAL)) ORDER BY CASE (((NULL))<((v0.c0)))  WHEN v0.c0 THEN v0.c0 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(DISTINCT v0.c0) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY CASE (((NULL))<((v0.c0)))  WHEN v0.c0 THEN v0.c0 END  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CAST(UPPER(DISTINCT v0.c0) AS REAL)) ORDER BY CASE (((NULL))<((v0.c0)))  WHEN v0.c0 THEN v0.c0 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(DISTINCT v0.c0) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY CASE (((NULL))<((v0.c0)))  WHEN v0.c0 THEN v0.c0 END  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CAST(UPPER(DISTINCT v0.c0) AS REAL)) ORDER BY CASE (((NULL))<((v0.c0)))  WHEN v0.c0 THEN v0.c0 END  NULLS LAST;
SELECT * FROM vt0, v0, rt0 WHERE (((((CAST(x'' AS TEXT))OR((vt0.c0 IN (vt0.c0)))))AND(((rt0.c0) ISNULL)))) ORDER BY ((rt0.c0 COLLATE NOCASE) BETWEEN (vt0.c1 COLLATE BINARY) AND ((((rt0.c2, rt0.c0, rt0.c1))<((rt0.c2, x'703f', rt0.c1))))) ASC  NULLS LAST, (((((~ (vt0.c0)))OR(rt0.c1)))OR(CASE vt0.c0  WHEN '-1631043777' THEN x'bc85' WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN 0.7067802342645115 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(x'' AS TEXT))OR((vt0.c0 IN (vt0.c0)))))AND(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((rt0.c0 COLLATE NOCASE) BETWEEN (vt0.c1 COLLATE BINARY) AND ((((rt0.c2, rt0.c0, rt0.c1))<((rt0.c2, x'703f', rt0.c1))))) ASC  NULLS LAST, (((((~ (vt0.c0)))OR(rt0.c1)))OR(CASE vt0.c0  WHEN '-1631043777' THEN x'bc85' WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN 0.7067802342645115 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 END)));
SELECT * FROM vt0, v0, rt0 WHERE (((((CAST(x'' AS TEXT))OR((vt0.c0 IN (vt0.c0)))))AND(((rt0.c0) ISNULL)))) ORDER BY ((rt0.c0 COLLATE NOCASE) BETWEEN (vt0.c1 COLLATE BINARY) AND ((((rt0.c2, rt0.c0, rt0.c1))<((rt0.c2, x'703f', rt0.c1))))) ASC  NULLS LAST, (((((~ (vt0.c0)))OR(rt0.c1)))OR(CASE vt0.c0  WHEN '-1631043777' THEN x'bc85' WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN 0.7067802342645115 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(x'' AS TEXT))OR((vt0.c0 IN (vt0.c0)))))AND(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((rt0.c0 COLLATE NOCASE) BETWEEN (vt0.c1 COLLATE BINARY) AND ((((rt0.c2, rt0.c0, rt0.c1))<((rt0.c2, x'703f', rt0.c1))))) ASC  NULLS LAST, (((((~ (vt0.c0)))OR(rt0.c1)))OR(CASE vt0.c0  WHEN '-1631043777' THEN x'bc85' WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN 0.7067802342645115 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 END)));
SELECT * FROM vt0, v0, rt0 WHERE (((((CAST(x'' AS TEXT))OR((vt0.c0 IN (vt0.c0)))))AND(((rt0.c0) ISNULL)))) ORDER BY ((rt0.c0 COLLATE NOCASE) BETWEEN (vt0.c1 COLLATE BINARY) AND ((((rt0.c2, rt0.c0, rt0.c1))<((rt0.c2, x'703f', rt0.c1))))) ASC  NULLS LAST, (((((~ (vt0.c0)))OR(rt0.c1)))OR(CASE vt0.c0  WHEN '-1631043777' THEN x'bc85' WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN 0.7067802342645115 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 END));
SELECT ALL * FROM vt0, rt0 WHERE (CAST(((rt0.c1) NOT NULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) NOT NULL) AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(((rt0.c1) NOT NULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) NOT NULL) AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(((rt0.c1) NOT NULL) AS BLOB));
SELECT ALL * FROM vt0 WHERE (((((((((((((((vt0.c1)IS(vt0.c1)))OR(((vt0.c0)>(vt0.c0)))))OR((NOT (vt0.c1)))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(vt0.c1 COLLATE NOCASE)))OR(((vt0.c0) NOTNULL))))AND(((x'')<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c1)IS(vt0.c1)))OR(((vt0.c0)>(vt0.c0)))))OR((NOT (vt0.c1)))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(vt0.c1 COLLATE NOCASE)))OR(((vt0.c0) NOTNULL))))AND(((x'')!=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((((((vt0.c1)IS(vt0.c1)))OR(((vt0.c0)>(vt0.c0)))))OR((NOT (vt0.c1)))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(vt0.c1 COLLATE NOCASE)))OR(((vt0.c0) NOTNULL))))AND(((x'')<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c1)IS(vt0.c1)))OR(((vt0.c0)>(vt0.c0)))))OR((NOT (vt0.c1)))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(vt0.c1 COLLATE NOCASE)))OR(((vt0.c0) NOTNULL))))AND(((x'')!=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((((((vt0.c1)IS(vt0.c1)))OR(((vt0.c0)>(vt0.c0)))))OR((NOT (vt0.c1)))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(vt0.c1 COLLATE NOCASE)))OR(((vt0.c0) NOTNULL))))AND(((x'')<>(vt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (((((NULL)OR(rt0.c1)))OR(((rt0.c0)/(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(rt0.c1)))OR(((rt0.c0)/(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((NULL)OR(rt0.c1)))OR(((rt0.c0)/(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(rt0.c1)))OR(((rt0.c0)/(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((NULL)OR(rt0.c1)))OR(((rt0.c0)/(rt0.c1)))));
SELECT ALL * FROM vt0 INNER JOIN v0 ON CAST(((0.284282073393452) IS FALSE) AS REAL) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CAST(((0.284282073393452) IS FALSE) AS REAL));
SELECT ALL * FROM vt0 INNER JOIN v0 ON CAST(((0.284282073393452) IS FALSE) AS REAL) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CAST(((0.284282073393452) IS FALSE) AS REAL));
SELECT ALL * FROM vt0 INNER JOIN v0 ON CAST(((0.284282073393452) IS FALSE) AS REAL) WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM rt0 WHERE (json_extract(CASE '125579313'  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN x'' ELSE rt0.c1 END, ((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR('-111714455')), ((((rt0.c1)OR(x'')))OR(rt0.c1)), ((rt0.c1)>=('963827331')), ((rt0.c1)OR(x'93be')), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (NULL)))) ORDER BY CAST((rt0.c0 IN ()) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_extract(CASE '125579313'  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN x'' ELSE rt0.c1 END, ((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR('-111714455')), ((((rt0.c1)OR(x'')))OR(rt0.c1)), ((rt0.c1)>=('963827331')), ((rt0.c1)OR(x'93be')), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (NULL)))) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c0 IN ()) AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (json_extract(CASE '125579313'  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN x'' ELSE rt0.c1 END, ((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR('-111714455')), ((((rt0.c1)OR(x'')))OR(rt0.c1)), ((rt0.c1)>=('963827331')), ((rt0.c1)OR(x'93be')), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (NULL)))) ORDER BY CAST((rt0.c0 IN ()) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_extract(CASE '125579313'  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN x'' ELSE rt0.c1 END, ((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR('-111714455')), ((((rt0.c1)OR(x'')))OR(rt0.c1)), ((rt0.c1)>=('963827331')), ((rt0.c1)OR(x'93be')), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (NULL)))) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c0 IN ()) AS NUMERIC) ASC);
SELECT COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt0 ON (- (CAST(0Xffffffffd2a01647 AS INTEGER))) WHERE (((0Xffffffff85dffdae) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((0Xffffffff85dffdae) IS TRUE)) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN vt0 ON (- (CAST(0xffffffffd2a01647 AS INTEGER))));
SELECT COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt0 ON (- (CAST(0Xffffffffd2a01647 AS INTEGER))) WHERE (((0Xffffffff85dffdae) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((0Xffffffff85dffdae) IS TRUE)) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN vt0 ON (- (CAST(0xffffffffd2a01647 AS INTEGER))));
SELECT COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt0 ON (- (CAST(0Xffffffffd2a01647 AS INTEGER))) WHERE (((0Xffffffff85dffdae) IS TRUE));
SELECT * FROM vt0, rt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (x'');
SELECT * FROM v0, vt0 RIGHT OUTER JOIN rt0 ON NULL WHERE (((((rt0.c2)OR((+ (v0.c0)))))OR(((((rt0.c1)AND(vt0.c1)))AND(vt0.c0))))) ORDER BY (((((rt0.c0)AND(vt0.c0))))<>((LIKELY(DISTINCT rt0.c1)))) ASC  NULLS LAST, rt0.c2 DESC, ((((v0.c0)GLOB(vt0.c0))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR((+ (v0.c0)))))OR(((((rt0.c1)AND(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN rt0 ON NULL ORDER BY (((((rt0.c0)AND(vt0.c0))))<>((LIKELY(DISTINCT rt0.c1)))) ASC  NULLS LAST, rt0.c2 DESC, ((((v0.c0)GLOB(vt0.c0))) NOT NULL) ASC  NULLS LAST);
SELECT * FROM v0, vt0 RIGHT OUTER JOIN rt0 ON NULL WHERE (((((rt0.c2)OR((+ (v0.c0)))))OR(((((rt0.c1)AND(vt0.c1)))AND(vt0.c0))))) ORDER BY (((((rt0.c0)AND(vt0.c0))))<>((LIKELY(DISTINCT rt0.c1)))) ASC  NULLS LAST, rt0.c2 DESC, ((((v0.c0)GLOB(vt0.c0))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR((+ (v0.c0)))))OR(((((rt0.c1)AND(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN rt0 ON NULL ORDER BY (((((rt0.c0)AND(vt0.c0))))<>((LIKELY(DISTINCT rt0.c1)))) ASC  NULLS LAST, rt0.c2 DESC, ((((v0.c0)GLOB(vt0.c0))) NOT NULL) ASC  NULLS LAST);
SELECT * FROM v0, vt0 RIGHT OUTER JOIN rt0 ON NULL WHERE (((((rt0.c2)OR((+ (v0.c0)))))OR(((((rt0.c1)AND(vt0.c1)))AND(vt0.c0))))) ORDER BY (((((rt0.c0)AND(vt0.c0))))<>((LIKELY(DISTINCT rt0.c1)))) ASC  NULLS LAST, rt0.c2 DESC, ((((v0.c0)GLOB(vt0.c0))) NOT NULL) ASC  NULLS LAST;
SELECT * FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (NULL);
SELECT * FROM v0 WHERE (((((((v0.c0) NOTNULL))AND((v0.c0 IN ()))))OR((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) NOTNULL))AND((v0.c0 IN ()))))OR((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0) NOTNULL))AND((v0.c0 IN ()))))OR((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) NOTNULL))AND((v0.c0 IN ()))))OR((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0) NOTNULL))AND((v0.c0 IN ()))))OR((v0.c0 IN ()))));
SELECT ALL * FROM v0, rt0, vt0 WHERE (rt0.c1) ORDER BY CASE UPPER(rt0.c2)  WHEN ((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(vt0.c1)) THEN ((((((((rt0.c2)AND(rt0.c0)))AND(x'')))OR(v0.c0)))AND(vt0.c1)) WHEN CAST(rt0.c0 AS NUMERIC) THEN CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN 'VrgArU' WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END WHEN ((rt0.c2)AND(rt0.c1)) THEN ((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY CASE UPPER(rt0.c2)  WHEN ((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(vt0.c1)) THEN ((((((((rt0.c2)AND(rt0.c0)))AND(x'')))OR(v0.c0)))AND(vt0.c1)) WHEN CAST(rt0.c0 AS NUMERIC) THEN CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN 'VrgArU' WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END WHEN ((rt0.c2)AND(rt0.c1)) THEN ((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)) END ASC);
SELECT ALL * FROM v0, rt0, vt0 WHERE (rt0.c1) ORDER BY CASE UPPER(rt0.c2)  WHEN ((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(vt0.c1)) THEN ((((((((rt0.c2)AND(rt0.c0)))AND(x'')))OR(v0.c0)))AND(vt0.c1)) WHEN CAST(rt0.c0 AS NUMERIC) THEN CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN 'VrgArU' WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END WHEN ((rt0.c2)AND(rt0.c1)) THEN ((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY CASE UPPER(rt0.c2)  WHEN ((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(vt0.c1)) THEN ((((((((rt0.c2)AND(rt0.c0)))AND(x'')))OR(v0.c0)))AND(vt0.c1)) WHEN CAST(rt0.c0 AS NUMERIC) THEN CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN 'VrgArU' WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END WHEN ((rt0.c2)AND(rt0.c1)) THEN ((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)) END ASC);
SELECT ALL * FROM v0, rt0, vt0 WHERE (rt0.c1) ORDER BY CASE UPPER(rt0.c2)  WHEN ((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(vt0.c1)) THEN ((((((((rt0.c2)AND(rt0.c0)))AND(x'')))OR(v0.c0)))AND(vt0.c1)) WHEN CAST(rt0.c0 AS NUMERIC) THEN CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN 'VrgArU' WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END WHEN ((rt0.c2)AND(rt0.c1)) THEN ((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)) END ASC;
SELECT ALL * FROM v0 WHERE ('-698785386');
SELECT SUM(count) FROM (SELECT (('-698785386') IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ('-698785386');
SELECT SUM(count) FROM (SELECT (('-698785386') IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ('-698785386');
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON TIME(rt0.c2 COLLATE NOCASE, ((rt0.c2)GLOB(rt0.c2)), ((rt0.c2) ISNULL)) CROSS JOIN v0 ON (CAST(vt0.c1 AS TEXT) IN ()) WHERE ((~ (((v0.c0) NOT NULL)))) ORDER BY (+ (rt0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON TIME(rt0.c2 COLLATE NOCASE, ((rt0.c2)GLOB(rt0.c2)), ((rt0.c2) ISNULL)) CROSS JOIN v0 ON (CAST(vt0.c1 AS TEXT) IN ()) ORDER BY (+ (rt0.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON TIME(rt0.c2 COLLATE NOCASE, ((rt0.c2)GLOB(rt0.c2)), ((rt0.c2) ISNULL)) CROSS JOIN v0 ON (CAST(vt0.c1 AS TEXT) IN ()) WHERE ((~ (((v0.c0) NOT NULL)))) ORDER BY (+ (rt0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON TIME(rt0.c2 COLLATE NOCASE, ((rt0.c2)GLOB(rt0.c2)), ((rt0.c2) ISNULL)) CROSS JOIN v0 ON (CAST(vt0.c1 AS TEXT) IN ()) ORDER BY (+ (rt0.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON TIME(rt0.c2 COLLATE NOCASE, ((rt0.c2)GLOB(rt0.c2)), ((rt0.c2) ISNULL)) CROSS JOIN v0 ON (CAST(vt0.c1 AS TEXT) IN ()) WHERE ((~ (((v0.c0) NOT NULL)))) ORDER BY (+ (rt0.c2 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT NULL)) ORDER BY (NOT (v0.c0)) COLLATE BINARY COLLATE NOCASE DESC  NULLS FIRST, UPPER(DISTINCT (((vt0.c0))<=((vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY (NOT (v0.c0)) COLLATE BINARY COLLATE NOCASE DESC  NULLS FIRST, UPPER(DISTINCT (((vt0.c0))<=((vt0.c1)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT NULL)) ORDER BY (NOT (v0.c0)) COLLATE BINARY COLLATE NOCASE DESC  NULLS FIRST, UPPER(DISTINCT (((vt0.c0))<=((vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY (NOT (v0.c0)) COLLATE BINARY COLLATE NOCASE DESC  NULLS FIRST, UPPER(DISTINCT (((vt0.c0))<=((vt0.c1)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT NULL)) ORDER BY (NOT (v0.c0)) COLLATE BINARY COLLATE NOCASE DESC  NULLS FIRST, UPPER(DISTINCT (((vt0.c0))<=((vt0.c1))));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS INTEGER));
SELECT ALL * FROM v0 WHERE (NULLIF(DISTINCT ((((v0.c0)OR(v0.c0)))OR(v0.c0)), COALESCE(v0.c0, v0.c0, v0.c0, v0.c0))) ORDER BY ((((v0.c0) NOT NULL)) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (v0.c0)) DESC, ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR((~ (v0.c0)))) DESC  NULLS LAST, CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((((v0.c0)OR(v0.c0)))OR(v0.c0)), COALESCE(v0.c0, v0.c0, v0.c0, v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT NULL)) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (v0.c0)) DESC, ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR((~ (v0.c0)))) DESC  NULLS LAST, CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS REAL)  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (NULLIF(DISTINCT ((((v0.c0)OR(v0.c0)))OR(v0.c0)), COALESCE(v0.c0, v0.c0, v0.c0, v0.c0))) ORDER BY ((((v0.c0) NOT NULL)) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (v0.c0)) DESC, ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR((~ (v0.c0)))) DESC  NULLS LAST, CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((((v0.c0)OR(v0.c0)))OR(v0.c0)), COALESCE(v0.c0, v0.c0, v0.c0, v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT NULL)) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (v0.c0)) DESC, ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR((~ (v0.c0)))) DESC  NULLS LAST, CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS REAL)  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (NULLIF(DISTINCT ((((v0.c0)OR(v0.c0)))OR(v0.c0)), COALESCE(v0.c0, v0.c0, v0.c0, v0.c0))) ORDER BY ((((v0.c0) NOT NULL)) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (v0.c0)) DESC, ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR((~ (v0.c0)))) DESC  NULLS LAST, CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS REAL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c0) ORDER BY PRINTF(v0.c0, rt0.c0, v0.c0, rt0.c1, v0.c0) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 NOT INDEXED, v0 ORDER BY PRINTF(v0.c0, rt0.c0, v0.c0, rt0.c1, v0.c0) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c0) ORDER BY PRINTF(v0.c0, rt0.c0, v0.c0, rt0.c1, v0.c0) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 NOT INDEXED, v0 ORDER BY PRINTF(v0.c0, rt0.c0, v0.c0, rt0.c1, v0.c0) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c0) ORDER BY PRINTF(v0.c0, rt0.c0, v0.c0, rt0.c1, v0.c0) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((- (vt0.c1)) COLLATE BINARY) ORDER BY (vt0.c0 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((- (vt0.c1)) COLLATE BINARY) ORDER BY (vt0.c0 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((- (vt0.c1)) COLLATE BINARY) ORDER BY (vt0.c0 IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ('') ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0 ORDER BY vt0.c1);
SELECT ALL COUNT(*) FROM vt0 WHERE ('') ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0 ORDER BY vt0.c1);
SELECT ALL COUNT(*) FROM vt0 WHERE ('') ORDER BY vt0.c1;
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c0))) BETWEEN ('2115546696') AND (((rt0.c0)<=(rt0.c2))))) ORDER BY CAST(rt0.c1 AS REAL);
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c0))) BETWEEN ('2115546696') AND (((rt0.c0)<=(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 AS REAL));
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c0))) BETWEEN ('2115546696') AND (((rt0.c0)<=(rt0.c2))))) ORDER BY CAST(rt0.c1 AS REAL);
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c0))) BETWEEN ('2115546696') AND (((rt0.c0)<=(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 AS REAL));
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c0))) BETWEEN ('2115546696') AND (((rt0.c0)<=(rt0.c2))))) ORDER BY CAST(rt0.c1 AS REAL);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c2))) BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2))) BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c0)AND(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c2))) BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2))) BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c0)AND(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c2))) BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)OR(rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)OR(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)OR(rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)OR(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)OR(rt0.c0)) AS TEXT));
SELECT * FROM v0, rt0, vt0 WHERE (((((rt0.c1)IS(v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)IS(v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (((((rt0.c1)IS(v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)IS(v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (((((rt0.c1)IS(v0.c0))) NOTNULL));
SELECT COUNT(*) FROM v0 NOT INDEXED WHERE (CAST(CAST(v0.c0 AS REAL) AS NUMERIC)) ORDER BY (((v0.c0)) NOT BETWEEN ((NULLIF(v0.c0, v0.c0))) AND (((((('0.5627887134663825')AND(v0.c0)))OR(v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN ((NULLIF(v0.c0, v0.c0))) AND (((((('0.5627887134663825')AND(v0.c0)))OR(v0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM v0 NOT INDEXED WHERE (CAST(CAST(v0.c0 AS REAL) AS NUMERIC)) ORDER BY (((v0.c0)) NOT BETWEEN ((NULLIF(v0.c0, v0.c0))) AND (((((('0.5627887134663825')AND(v0.c0)))OR(v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN ((NULLIF(v0.c0, v0.c0))) AND (((((('0.5627887134663825')AND(v0.c0)))OR(v0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM v0 NOT INDEXED WHERE (CAST(CAST(v0.c0 AS REAL) AS NUMERIC)) ORDER BY (((v0.c0)) NOT BETWEEN ((NULLIF(v0.c0, v0.c0))) AND (((((('0.5627887134663825')AND(v0.c0)))OR(v0.c0)))))  NULLS LAST;
SELECT * FROM rt0 WHERE (((CAST(NULL AS NUMERIC)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CAST(NULL AS NUMERIC)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CAST(NULL AS NUMERIC)) IS TRUE));
SELECT COUNT(*) FROM rt0, v0 NATURAL JOIN vt0 WHERE ((((0.3490238255975838)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((0.3490238255975838)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0, v0 NATURAL JOIN vt0 WHERE ((((0.3490238255975838)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((0.3490238255975838)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0, v0 NATURAL JOIN vt0 WHERE ((((0.3490238255975838)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c1) ORDER BY ((((((((((v0.c0)AND(vt0.c1)))AND(v0.c0)))OR(vt0.c0)))AND(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((((v0.c0)AND(vt0.c1)))AND(v0.c0)))OR(vt0.c0)))AND(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c1) ORDER BY ((((((((((v0.c0)AND(vt0.c1)))AND(v0.c0)))OR(vt0.c0)))AND(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((((v0.c0)AND(vt0.c1)))AND(v0.c0)))OR(vt0.c0)))AND(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c1) ORDER BY ((((((((((v0.c0)AND(vt0.c1)))AND(v0.c0)))OR(vt0.c0)))AND(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (x'9598');
SELECT SUM(count) FROM (SELECT ALL ((x'9598') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'9598');
SELECT SUM(count) FROM (SELECT ALL ((x'9598') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'9598');
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (CAST('mIUURW0' AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST('mIUURW0' AS REAL) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (CAST('mIUURW0' AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST('mIUURW0' AS REAL) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (CAST('mIUURW0' AS REAL) COLLATE BINARY);
SELECT COUNT(*) FROM v0, rt0 WHERE ((NOT ((x'' IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((x'' IN (rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((NOT ((x'' IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((x'' IN (rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((NOT ((x'' IN (rt0.c2)))));
SELECT * FROM v0, rt0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN rt0.c0 WHEN UNLIKELY(0.2345932551600428) THEN (rt0.c2 IN ()) WHEN CASE v0.c0  WHEN rt0.c0 THEN rt0.c2 END THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END ELSE v0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c1 IN ()) THEN rt0.c0 WHEN UNLIKELY(0.2345932551600428) THEN (rt0.c2 IN ()) WHEN CASE v0.c0  WHEN rt0.c0 THEN rt0.c2 END THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END ELSE v0.c0 END) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN rt0.c0 WHEN UNLIKELY(0.2345932551600428) THEN (rt0.c2 IN ()) WHEN CASE v0.c0  WHEN rt0.c0 THEN rt0.c2 END THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END ELSE v0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c1 IN ()) THEN rt0.c0 WHEN UNLIKELY(0.2345932551600428) THEN (rt0.c2 IN ()) WHEN CASE v0.c0  WHEN rt0.c0 THEN rt0.c2 END THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END ELSE v0.c0 END) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN rt0.c0 WHEN UNLIKELY(0.2345932551600428) THEN (rt0.c2 IN ()) WHEN CASE v0.c0  WHEN rt0.c0 THEN rt0.c2 END THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END ELSE v0.c0 END);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON x'' WHERE (vt0.c0) ORDER BY LIKELY(vt0.c0)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON x'' ORDER BY LIKELY(vt0.c0)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON x'' WHERE (vt0.c0) ORDER BY LIKELY(vt0.c0)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON x'' ORDER BY LIKELY(vt0.c0)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON x'' WHERE (vt0.c0) ORDER BY LIKELY(vt0.c0)  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((NULL COLLATE NOCASE) NOT NULL)) ORDER BY rt0.c1 DESC, CASE (((rt0.c1, rt0.c2, rt0.c0))>((v0.c0, v0.c0, v0.c0)))  WHEN ((rt0.c2) BETWEEN ('特R') AND (x'')) THEN rt0.c2 END, ((COALESCE(DISTINCT rt0.c2, rt0.c1))&(v0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c1 DESC, CASE (((rt0.c1, rt0.c2, rt0.c0))>((v0.c0, v0.c0, v0.c0)))  WHEN ((rt0.c2) BETWEEN ('特R') AND (x'')) THEN rt0.c2 END, ((COALESCE(DISTINCT rt0.c2, rt0.c1))&(v0.c0 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((NULL COLLATE NOCASE) NOT NULL)) ORDER BY rt0.c1 DESC, CASE (((rt0.c1, rt0.c2, rt0.c0))>((v0.c0, v0.c0, v0.c0)))  WHEN ((rt0.c2) BETWEEN ('特R') AND (x'')) THEN rt0.c2 END, ((COALESCE(DISTINCT rt0.c2, rt0.c1))&(v0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c1 DESC, CASE (((rt0.c1, rt0.c2, rt0.c0))>((v0.c0, v0.c0, v0.c0)))  WHEN ((rt0.c2) BETWEEN ('特R') AND (x'')) THEN rt0.c2 END, ((COALESCE(DISTINCT rt0.c2, rt0.c1))&(v0.c0 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((NULL COLLATE NOCASE) NOT NULL)) ORDER BY rt0.c1 DESC, CASE (((rt0.c1, rt0.c2, rt0.c0))>((v0.c0, v0.c0, v0.c0)))  WHEN ((rt0.c2) BETWEEN ('特R') AND (x'')) THEN rt0.c2 END, ((COALESCE(DISTINCT rt0.c2, rt0.c1))&(v0.c0 COLLATE RTRIM)) DESC;
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((vt0.c0) IS TRUE)) NOT NULL)) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY rt0.c0  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((vt0.c0) IS TRUE)) NOT NULL)) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY rt0.c0  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((vt0.c0) IS TRUE)) NOT NULL)) ORDER BY rt0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))/(((0.06826771562271705) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))/(((0.06826771562271705) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))/(((0.06826771562271705) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))/(((0.06826771562271705) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))/(((0.06826771562271705) IS FALSE))));
SELECT ALL * FROM vt0, v0, rt0 WHERE (((rt0.c0)&(vt0.c0)) COLLATE NOCASE COLLATE NOCASE) ORDER BY (((((v0.c0)GLOB(rt0.c2))))<>((((vt0.c1)<<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)&(vt0.c0)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (((((v0.c0)GLOB(rt0.c2))))<>((((vt0.c1)<<(rt0.c0))))));
SELECT ALL * FROM vt0, v0, rt0 WHERE (((rt0.c0)&(vt0.c0)) COLLATE NOCASE COLLATE NOCASE) ORDER BY (((((v0.c0)GLOB(rt0.c2))))<>((((vt0.c1)<<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)&(vt0.c0)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (((((v0.c0)GLOB(rt0.c2))))<>((((vt0.c1)<<(rt0.c0))))));
SELECT ALL * FROM vt0, v0, rt0 WHERE (((rt0.c0)&(vt0.c0)) COLLATE NOCASE COLLATE NOCASE) ORDER BY (((((v0.c0)GLOB(rt0.c2))))<>((((vt0.c1)<<(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((CAST(rt0.c1 AS NUMERIC)))=((rt0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c1 AS NUMERIC)))==((rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((CAST(rt0.c1 AS NUMERIC)))=((rt0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c1 AS NUMERIC)))==((rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((CAST(rt0.c1 AS NUMERIC)))=((rt0.c2 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((json_insert(vt0.c1, vt0.c1, rt0.c0))=(((vt0.c0)<(NULL)))) WHERE (((-1225586129) NOT BETWEEN ((rt0.c1 IN (rt0.c2, vt0.c0))) AND (CAST(vt0.c1 AS TEXT)))) ORDER BY ((((((rt0.c0)AND(rt0.c2)))AND(vt0.c1))) BETWEEN ('o*r뗔mclK') AND (((rt0.c1)<(vt0.c1)))) DESC  NULLS FIRST, (((CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((rt0.c2) NOTNULL), ((((((((vt0.c1)OR(rt0.c1)))AND(vt0.c1)))OR(rt0.c2)))OR(rt0.c2))))==((((rt0.c1) IS FALSE), ((rt0.c0)AND(vt0.c0)), CASE vt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN x'' END))) DESC  NULLS LAST, (((- (vt0.c1))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((-1225586129) NOT BETWEEN ((rt0.c1 IN (rt0.c2, vt0.c0))) AND (CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((json_insert(vt0.c1, vt0.c1, rt0.c0))==(((vt0.c0)<(NULL)))) ORDER BY ((((((rt0.c0)AND(rt0.c2)))AND(vt0.c1))) BETWEEN ('o*r뗔mclK') AND (((rt0.c1)<(vt0.c1)))) DESC  NULLS FIRST, (((CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((rt0.c2) NOTNULL), ((((((((vt0.c1)OR(rt0.c1)))AND(vt0.c1)))OR(rt0.c2)))OR(rt0.c2))))=((((rt0.c1) IS FALSE), ((rt0.c0)AND(vt0.c0)), CASE vt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN x'' END))) DESC  NULLS LAST, (((- (vt0.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((json_insert(vt0.c1, vt0.c1, rt0.c0))=(((vt0.c0)<(NULL)))) WHERE (((-1225586129) NOT BETWEEN ((rt0.c1 IN (rt0.c2, vt0.c0))) AND (CAST(vt0.c1 AS TEXT)))) ORDER BY ((((((rt0.c0)AND(rt0.c2)))AND(vt0.c1))) BETWEEN ('o*r뗔mclK') AND (((rt0.c1)<(vt0.c1)))) DESC  NULLS FIRST, (((CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((rt0.c2) NOTNULL), ((((((((vt0.c1)OR(rt0.c1)))AND(vt0.c1)))OR(rt0.c2)))OR(rt0.c2))))==((((rt0.c1) IS FALSE), ((rt0.c0)AND(vt0.c0)), CASE vt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN x'' END))) DESC  NULLS LAST, (((- (vt0.c1))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((-1225586129) NOT BETWEEN ((rt0.c1 IN (rt0.c2, vt0.c0))) AND (CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((json_insert(vt0.c1, vt0.c1, rt0.c0))==(((vt0.c0)<(NULL)))) ORDER BY ((((((rt0.c0)AND(rt0.c2)))AND(vt0.c1))) BETWEEN ('o*r뗔mclK') AND (((rt0.c1)<(vt0.c1)))) DESC  NULLS FIRST, (((CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((rt0.c2) NOTNULL), ((((((((vt0.c1)OR(rt0.c1)))AND(vt0.c1)))OR(rt0.c2)))OR(rt0.c2))))=((((rt0.c1) IS FALSE), ((rt0.c0)AND(vt0.c0)), CASE vt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN x'' END))) DESC  NULLS LAST, (((- (vt0.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((json_insert(vt0.c1, vt0.c1, rt0.c0))=(((vt0.c0)<(NULL)))) WHERE (((-1225586129) NOT BETWEEN ((rt0.c1 IN (rt0.c2, vt0.c0))) AND (CAST(vt0.c1 AS TEXT)))) ORDER BY ((((((rt0.c0)AND(rt0.c2)))AND(vt0.c1))) BETWEEN ('o*r뗔mclK') AND (((rt0.c1)<(vt0.c1)))) DESC  NULLS FIRST, (((CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((rt0.c2) NOTNULL), ((((((((vt0.c1)OR(rt0.c1)))AND(vt0.c1)))OR(rt0.c2)))OR(rt0.c2))))==((((rt0.c1) IS FALSE), ((rt0.c0)AND(vt0.c0)), CASE vt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN x'' END))) DESC  NULLS LAST, (((- (vt0.c1))) IS FALSE);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((((rt0.c1 IN ()))GLOB(((3.737255174849352E-4)<>(vt0.c0))))) ORDER BY (((vt0.c0) IS TRUE) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))GLOB(((3.737255174849352E-4)<>(vt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((vt0.c0) IS TRUE) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((((rt0.c1 IN ()))GLOB(((3.737255174849352E-4)<>(vt0.c0))))) ORDER BY (((vt0.c0) IS TRUE) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))GLOB(((3.737255174849352E-4)<>(vt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((vt0.c0) IS TRUE) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((((rt0.c1 IN ()))GLOB(((3.737255174849352E-4)<>(vt0.c0))))) ORDER BY (((vt0.c0) IS TRUE) IN ()) ASC  NULLS FIRST;
SELECT * FROM v0 WHERE (((((((((((v0.c0)<(v0.c0)))AND((~ (v0.c0)))))AND(v0.c0)))OR(v0.c0 COLLATE RTRIM)))AND(CASE v0.c0  WHEN v0.c0 THEN '209887025' WHEN v0.c0 THEN '-47068515' WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)<(v0.c0)))AND((~ (v0.c0)))))AND(v0.c0)))OR(v0.c0 COLLATE RTRIM)))AND(CASE v0.c0  WHEN v0.c0 THEN '209887025' WHEN v0.c0 THEN '-47068515' WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((((v0.c0)<(v0.c0)))AND((~ (v0.c0)))))AND(v0.c0)))OR(v0.c0 COLLATE RTRIM)))AND(CASE v0.c0  WHEN v0.c0 THEN '209887025' WHEN v0.c0 THEN '-47068515' WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)<(v0.c0)))AND((~ (v0.c0)))))AND(v0.c0)))OR(v0.c0 COLLATE RTRIM)))AND(CASE v0.c0  WHEN v0.c0 THEN '209887025' WHEN v0.c0 THEN '-47068515' WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((((v0.c0)<(v0.c0)))AND((~ (v0.c0)))))AND(v0.c0)))OR(v0.c0 COLLATE RTRIM)))AND(CASE v0.c0  WHEN v0.c0 THEN '209887025' WHEN v0.c0 THEN '-47068515' WHEN v0.c0 THEN v0.c0 END)));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(rt0.c2 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(rt0.c2 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(rt0.c2 AS BLOB) COLLATE RTRIM);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((~ (rt0.c1))) ORDER BY (((v0.c0)-(v0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c1))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((v0.c0)-(v0.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((~ (rt0.c1))) ORDER BY (((v0.c0)-(v0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c1))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((v0.c0)-(v0.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((~ (rt0.c1))) ORDER BY (((v0.c0)-(v0.c0)) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))OR((((rt0.c1, rt0.c2, '2087930299'))<=(('0.03711105308763951', rt0.c2, rt0.c1))))))OR(0.9021855796471328))) ORDER BY (((rt0.c2, rt0.c2, rt0.c1, rt0.c1, rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN (('0.13835450418408302', rt0.c1, ((((((((rt0.c1)OR(x'')))AND(rt0.c2)))OR(rt0.c0)))AND(NULL)), rt0.c1, ((rt0.c2) BETWEEN ('439559141') AND (rt0.c0)), (('')+(rt0.c1)), (((-1.630089347E9)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) AND ((((rt0.c1) IS TRUE), (((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c1))), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)), rt0.c0, (~ (rt0.c2)), ((rt0.c1)<<(rt0.c1)), ((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))OR((((rt0.c1, rt0.c2, '2087930299'))<=(('0.03711105308763951', rt0.c2, rt0.c1))))))OR(0.9021855796471328))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, rt0.c2, rt0.c1, rt0.c1, rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN (('0.13835450418408302', rt0.c1, ((((((((rt0.c1)OR(x'')))AND(rt0.c2)))OR(rt0.c0)))AND(NULL)), rt0.c1, ((rt0.c2) BETWEEN ('439559141') AND (rt0.c0)), (('')+(rt0.c1)), (((-1.630089347E9)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) AND ((((rt0.c1) IS TRUE), (((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c1))), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)), rt0.c0, (~ (rt0.c2)), ((rt0.c1)<<(rt0.c1)), ((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))OR((((rt0.c1, rt0.c2, '2087930299'))<=(('0.03711105308763951', rt0.c2, rt0.c1))))))OR(0.9021855796471328))) ORDER BY (((rt0.c2, rt0.c2, rt0.c1, rt0.c1, rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN (('0.13835450418408302', rt0.c1, ((((((((rt0.c1)OR(x'')))AND(rt0.c2)))OR(rt0.c0)))AND(NULL)), rt0.c1, ((rt0.c2) BETWEEN ('439559141') AND (rt0.c0)), (('')+(rt0.c1)), (((-1.630089347E9)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) AND ((((rt0.c1) IS TRUE), (((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c1))), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)), rt0.c0, (~ (rt0.c2)), ((rt0.c1)<<(rt0.c1)), ((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))OR((((rt0.c1, rt0.c2, '2087930299'))<=(('0.03711105308763951', rt0.c2, rt0.c1))))))OR(0.9021855796471328))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, rt0.c2, rt0.c1, rt0.c1, rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN (('0.13835450418408302', rt0.c1, ((((((((rt0.c1)OR(x'')))AND(rt0.c2)))OR(rt0.c0)))AND(NULL)), rt0.c1, ((rt0.c2) BETWEEN ('439559141') AND (rt0.c0)), (('')+(rt0.c1)), (((-1.630089347E9)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) AND ((((rt0.c1) IS TRUE), (((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c1))), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)), rt0.c0, (~ (rt0.c2)), ((rt0.c1)<<(rt0.c1)), ((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))OR((((rt0.c1, rt0.c2, '2087930299'))<=(('0.03711105308763951', rt0.c2, rt0.c1))))))OR(0.9021855796471328))) ORDER BY (((rt0.c2, rt0.c2, rt0.c1, rt0.c1, rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN (('0.13835450418408302', rt0.c1, ((((((((rt0.c1)OR(x'')))AND(rt0.c2)))OR(rt0.c0)))AND(NULL)), rt0.c1, ((rt0.c2) BETWEEN ('439559141') AND (rt0.c0)), (('')+(rt0.c1)), (((-1.630089347E9)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) AND ((((rt0.c1) IS TRUE), (((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c1))), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)), rt0.c0, (~ (rt0.c2)), ((rt0.c1)<<(rt0.c1)), ((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (rtreenode((NOT (rt0.c1)), CAST(rt0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode((NOT (rt0.c1)), CAST(rt0.c1 AS BLOB))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rtreenode((NOT (rt0.c1)), CAST(rt0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode((NOT (rt0.c1)), CAST(rt0.c1 AS BLOB))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rtreenode((NOT (rt0.c1)), CAST(rt0.c1 AS BLOB)));
SELECT ALL COUNT(*) FROM rt0 WHERE (x'') ORDER BY (rt0.c2 COLLATE BINARY IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 COLLATE BINARY IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'') ORDER BY (rt0.c2 COLLATE BINARY IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 COLLATE BINARY IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'') ORDER BY (rt0.c2 COLLATE BINARY IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (json_array(((((((((vt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(vt0.c0)))AND(rt0.c2)), ((((rt0.c2)AND(vt0.c0)))AND(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((json_array(((((((((vt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(vt0.c0)))AND(rt0.c2)), ((((rt0.c2)AND(vt0.c0)))AND(vt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (json_array(((((((((vt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(vt0.c0)))AND(rt0.c2)), ((((rt0.c2)AND(vt0.c0)))AND(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((json_array(((((((((vt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(vt0.c0)))AND(rt0.c2)), ((((rt0.c2)AND(vt0.c0)))AND(vt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (json_array(((((((((vt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(vt0.c0)))AND(rt0.c2)), ((((rt0.c2)AND(vt0.c0)))AND(vt0.c1))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((((rt0.c0)>>('-667912682'))) NOT NULL) RIGHT OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN '-861569778' ELSE rt0.c2 END)|((vt0.c0 IN ()))) WHERE ((((v0.c0)+(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0)+(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((rt0.c0)>>('-667912682'))) NOT NULL) RIGHT OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN '-861569778' ELSE rt0.c2 END)|((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((((rt0.c0)>>('-667912682'))) NOT NULL) RIGHT OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN '-861569778' ELSE rt0.c2 END)|((vt0.c0 IN ()))) WHERE ((((v0.c0)+(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0)+(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((rt0.c0)>>('-667912682'))) NOT NULL) RIGHT OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN '-861569778' ELSE rt0.c2 END)|((vt0.c0 IN ()))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (x'')))AND(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (x'')))AND(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (x'')))AND(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (x'')))AND(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (x'')))AND(rt0.c1 COLLATE NOCASE)));
SELECT ALL * FROM v0 WHERE (CAST(v0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS TEXT)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(v0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS TEXT)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(v0.c0 AS TEXT));
SELECT ALL * FROM vt0, v0 LEFT OUTER JOIN rt0 ON ((ABS(rt0.c1)) IS FALSE) WHERE (CAST(((vt0.c1) NOTNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) NOTNULL) AS REAL)) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN rt0 ON ((ABS(rt0.c1)) IS FALSE));
SELECT ALL * FROM vt0, v0 LEFT OUTER JOIN rt0 ON ((ABS(rt0.c1)) IS FALSE) WHERE (CAST(((vt0.c1) NOTNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) NOTNULL) AS REAL)) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN rt0 ON ((ABS(rt0.c1)) IS FALSE));
SELECT ALL * FROM vt0, v0 LEFT OUTER JOIN rt0 ON ((ABS(rt0.c1)) IS FALSE) WHERE (CAST(((vt0.c1) NOTNULL) AS REAL));
SELECT * FROM rt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (NULL COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (NULL COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (NULL COLLATE NOCASE COLLATE BINARY);
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ())) ORDER BY CASE vt0.c1  WHEN ((vt0.c1)*(x'')) THEN vt0.c0 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c1  WHEN ((vt0.c1)*(x'')) THEN vt0.c0 END ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ())) ORDER BY CASE vt0.c1  WHEN ((vt0.c1)*(x'')) THEN vt0.c0 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c1  WHEN ((vt0.c1)*(x'')) THEN vt0.c0 END ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ())) ORDER BY CASE vt0.c1  WHEN ((vt0.c1)*(x'')) THEN vt0.c0 END ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c2)IS((((rt0.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))))) CROSS JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))>=(vt0.c0 COLLATE BINARY)) WHERE (0.8533801203274956) ORDER BY ((load_extension(rt0.c2, rt0.c1)) NOT BETWEEN (((v0.c0) NOT NULL)) AND (SQLITE_COMPILEOPTION_GET(rt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.8533801203274956) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c2)IS((((rt0.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))))) CROSS JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))>=(vt0.c0 COLLATE BINARY)) ORDER BY ((load_extension(rt0.c2, rt0.c1)) NOT BETWEEN (((v0.c0) NOT NULL)) AND (SQLITE_COMPILEOPTION_GET(rt0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c2)IS((((rt0.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))))) CROSS JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))>=(vt0.c0 COLLATE BINARY)) WHERE (0.8533801203274956) ORDER BY ((load_extension(rt0.c2, rt0.c1)) NOT BETWEEN (((v0.c0) NOT NULL)) AND (SQLITE_COMPILEOPTION_GET(rt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.8533801203274956) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c2)IS((((rt0.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))))) CROSS JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))>=(vt0.c0 COLLATE BINARY)) ORDER BY ((load_extension(rt0.c2, rt0.c1)) NOT BETWEEN (((v0.c0) NOT NULL)) AND (SQLITE_COMPILEOPTION_GET(rt0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c2)IS((((rt0.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))))) CROSS JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))>=(vt0.c0 COLLATE BINARY)) WHERE (0.8533801203274956) ORDER BY ((load_extension(rt0.c2, rt0.c1)) NOT BETWEEN (((v0.c0) NOT NULL)) AND (SQLITE_COMPILEOPTION_GET(rt0.c0))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN 1728885347 THEN rt0.c2 END)>(((0.48272200675310717)AND(rt0.c1))))) ORDER BY '特r';
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN 1728885347 THEN rt0.c2 END)>(((0.48272200675310717)AND(rt0.c1))))) IS TRUE)  as count FROM rt0, v0 ORDER BY '特r');
SELECT ALL * FROM rt0, v0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN 1728885347 THEN rt0.c2 END)>(((0.48272200675310717)AND(rt0.c1))))) ORDER BY '特r';
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN 1728885347 THEN rt0.c2 END)>(((0.48272200675310717)AND(rt0.c1))))) IS TRUE)  as count FROM rt0, v0 ORDER BY '特r');
SELECT ALL * FROM rt0, v0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN 1728885347 THEN rt0.c2 END)>(((0.48272200675310717)AND(rt0.c1))))) ORDER BY '特r';
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (~ (vt0.c0)) ELSE (((rt0.c2, vt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, v0.c0)) AND ((v0.c0, x'', vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (~ (vt0.c0)) ELSE (((rt0.c2, vt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, v0.c0)) AND ((v0.c0, x'', vt0.c0))) END) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (~ (vt0.c0)) ELSE (((rt0.c2, vt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, v0.c0)) AND ((v0.c0, x'', vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (~ (vt0.c0)) ELSE (((rt0.c2, vt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, v0.c0)) AND ((v0.c0, x'', vt0.c0))) END) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (~ (vt0.c0)) ELSE (((rt0.c2, vt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, v0.c0)) AND ((v0.c0, x'', vt0.c0))) END);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((3.737255174849352E-4) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((3.737255174849352E-4) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((3.737255174849352E-4) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((3.737255174849352E-4) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((3.737255174849352E-4) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (CAST(QUOTE(vt0.c1) AS INTEGER)) ORDER BY ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(QUOTE(vt0.c1) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(QUOTE(vt0.c1) AS INTEGER)) ORDER BY ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(QUOTE(vt0.c1) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(QUOTE(vt0.c1) AS INTEGER)) ORDER BY ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON rt0.c1 WHERE ((v0.c0 COLLATE NOCASE IN ())) ORDER BY CAST(rt0.c2 AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON rt0.c1 ORDER BY CAST(rt0.c2 AS TEXT) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON rt0.c1 WHERE ((v0.c0 COLLATE NOCASE IN ())) ORDER BY CAST(rt0.c2 AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON rt0.c1 ORDER BY CAST(rt0.c2 AS TEXT) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON rt0.c1 WHERE ((v0.c0 COLLATE NOCASE IN ())) ORDER BY CAST(rt0.c2 AS TEXT) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON LIKE(((v0.c0) BETWEEN (vt0.c1) AND (v0.c0)), (((0.037736604237432525, 'Jn콽,	', vt0.c1, vt0.c0, vt0.c1))>((vt0.c0, vt0.c1, v0.c0, 'JR', v0.c0)))) WHERE (((((((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(((v0.c0) ISNULL))))AND(((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))))AND(CASE WHEN v0.c0 THEN vt0.c0 END)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY UNLIKELY(vt0.c1)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(((v0.c0) ISNULL))))AND(((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))))AND(CASE WHEN v0.c0 THEN vt0.c0 END)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON LIKE(((v0.c0) BETWEEN (vt0.c1) AND (v0.c0)), (((0.037736604237432525, 'Jn콽,	', vt0.c1, vt0.c0, vt0.c1))>((vt0.c0, vt0.c1, v0.c0, 'JR', v0.c0)))) ORDER BY UNLIKELY(vt0.c1)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON LIKE(((v0.c0) BETWEEN (vt0.c1) AND (v0.c0)), (((0.037736604237432525, 'Jn콽,	', vt0.c1, vt0.c0, vt0.c1))>((vt0.c0, vt0.c1, v0.c0, 'JR', v0.c0)))) WHERE (((((((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(((v0.c0) ISNULL))))AND(((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))))AND(CASE WHEN v0.c0 THEN vt0.c0 END)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY UNLIKELY(vt0.c1)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(((v0.c0) ISNULL))))AND(((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))))AND(CASE WHEN v0.c0 THEN vt0.c0 END)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON LIKE(((v0.c0) BETWEEN (vt0.c1) AND (v0.c0)), (((0.037736604237432525, 'Jn콽,	', vt0.c1, vt0.c0, vt0.c1))>((vt0.c0, vt0.c1, v0.c0, 'JR', v0.c0)))) ORDER BY UNLIKELY(vt0.c1)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON LIKE(((v0.c0) BETWEEN (vt0.c1) AND (v0.c0)), (((0.037736604237432525, 'Jn콽,	', vt0.c1, vt0.c0, vt0.c1))>((vt0.c0, vt0.c1, v0.c0, 'JR', v0.c0)))) WHERE (((((((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(((v0.c0) ISNULL))))AND(((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))))AND(CASE WHEN v0.c0 THEN vt0.c0 END)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY UNLIKELY(vt0.c1)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON (((v0.c0 IN (rt0.c0)))==((v0.c0 IN ()))) WHERE (IFNULL(DISTINCT (((rt0.c2))<=((rt0.c0))), (((0x5734948e, rt0.c1, rt0.c0)) NOT BETWEEN ((v0.c0, rt0.c0, rt0.c0)) AND ((v0.c0, rt0.c2, rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT (((rt0.c2))<=((rt0.c0))), (((0x5734948e, rt0.c1, rt0.c0)) NOT BETWEEN ((v0.c0, rt0.c0, rt0.c0)) AND ((v0.c0, rt0.c2, rt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((v0.c0 IN (rt0.c0)))==((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON (((v0.c0 IN (rt0.c0)))==((v0.c0 IN ()))) WHERE (IFNULL(DISTINCT (((rt0.c2))<=((rt0.c0))), (((0x5734948e, rt0.c1, rt0.c0)) NOT BETWEEN ((v0.c0, rt0.c0, rt0.c0)) AND ((v0.c0, rt0.c2, rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT (((rt0.c2))<=((rt0.c0))), (((0x5734948e, rt0.c1, rt0.c0)) NOT BETWEEN ((v0.c0, rt0.c0, rt0.c0)) AND ((v0.c0, rt0.c2, rt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((v0.c0 IN (rt0.c0)))==((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON (((v0.c0 IN (rt0.c0)))==((v0.c0 IN ()))) WHERE (IFNULL(DISTINCT (((rt0.c2))<=((rt0.c0))), (((0x5734948e, rt0.c1, rt0.c0)) NOT BETWEEN ((v0.c0, rt0.c0, rt0.c0)) AND ((v0.c0, rt0.c2, rt0.c0)))));
SELECT * FROM v0, vt0 WHERE ((v0.c0 IN (v0.c0)) COLLATE NOCASE COLLATE RTRIM) ORDER BY (((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN (v0.c0)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) IN ()) DESC);
SELECT * FROM v0, vt0 WHERE ((v0.c0 IN (v0.c0)) COLLATE NOCASE COLLATE RTRIM) ORDER BY (((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN (v0.c0)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) IN ()) DESC);
SELECT * FROM v0, vt0 WHERE ((v0.c0 IN (v0.c0)) COLLATE NOCASE COLLATE RTRIM) ORDER BY (((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) IN ()) DESC;
SELECT COUNT(*) FROM vt0, v0 LEFT OUTER JOIN rt0 ON (~ ((vt0.c1 IN ()))) WHERE (COALESCE(DISTINCT (((vt0.c0, 'Ds', vt0.c1)) BETWEEN ((rt0.c2, vt0.c1, rt0.c1)) AND ((v0.c0, '덓u7', rt0.c2))), ((rt0.c1)AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT (((vt0.c0, 'Ds', vt0.c1)) BETWEEN ((rt0.c2, vt0.c1, rt0.c1)) AND ((v0.c0, '덓u7', rt0.c2))), ((rt0.c1)AND(vt0.c0)))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN rt0 ON (~ ((vt0.c1 IN ()))));
SELECT COUNT(*) FROM vt0, v0 LEFT OUTER JOIN rt0 ON (~ ((vt0.c1 IN ()))) WHERE (COALESCE(DISTINCT (((vt0.c0, 'Ds', vt0.c1)) BETWEEN ((rt0.c2, vt0.c1, rt0.c1)) AND ((v0.c0, '덓u7', rt0.c2))), ((rt0.c1)AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT (((vt0.c0, 'Ds', vt0.c1)) BETWEEN ((rt0.c2, vt0.c1, rt0.c1)) AND ((v0.c0, '덓u7', rt0.c2))), ((rt0.c1)AND(vt0.c0)))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN rt0 ON (~ ((vt0.c1 IN ()))));
SELECT COUNT(*) FROM vt0, v0 LEFT OUTER JOIN rt0 ON (~ ((vt0.c1 IN ()))) WHERE (COALESCE(DISTINCT (((vt0.c0, 'Ds', vt0.c1)) BETWEEN ((rt0.c2, vt0.c1, rt0.c1)) AND ((v0.c0, '덓u7', rt0.c2))), ((rt0.c1)AND(vt0.c0))));
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((NULL, ((((0.057113238892344875)OR(vt0.c1)))AND(x'')), ((vt0.c0)/(v0.c0)))) AND (((~ (v0.c0)), x'', '-595124862'))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((NULL, ((((0.057113238892344875)OR(vt0.c1)))AND(x'')), ((vt0.c0)/(v0.c0)))) AND (((~ (v0.c0)), x'', '-595124862')))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((NULL, ((((0.057113238892344875)OR(vt0.c1)))AND(x'')), ((vt0.c0)/(v0.c0)))) AND (((~ (v0.c0)), x'', '-595124862'))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((NULL, ((((0.057113238892344875)OR(vt0.c1)))AND(x'')), ((vt0.c0)/(v0.c0)))) AND (((~ (v0.c0)), x'', '-595124862')))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((NULL, ((((0.057113238892344875)OR(vt0.c1)))AND(x'')), ((vt0.c0)/(v0.c0)))) AND (((~ (v0.c0)), x'', '-595124862'))));
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) THEN LIKELIHOOD(rt0.c1, 0.9558831515311307) ELSE vt0.c1 END WHERE (CASE WHEN NULLIF(0.6088899191320521, rt0.c0) THEN ((vt0.c1)GLOB(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULLIF(0.6088899191320521, rt0.c0) THEN ((vt0.c1)GLOB(rt0.c1)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) THEN LIKELIHOOD(rt0.c1, 0.9558831515311307) ELSE vt0.c1 END);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) THEN LIKELIHOOD(rt0.c1, 0.9558831515311307) ELSE vt0.c1 END WHERE (CASE WHEN NULLIF(0.6088899191320521, rt0.c0) THEN ((vt0.c1)GLOB(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULLIF(0.6088899191320521, rt0.c0) THEN ((vt0.c1)GLOB(rt0.c1)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) THEN LIKELIHOOD(rt0.c1, 0.9558831515311307) ELSE vt0.c1 END);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) THEN LIKELIHOOD(rt0.c1, 0.9558831515311307) ELSE vt0.c1 END WHERE (CASE WHEN NULLIF(0.6088899191320521, rt0.c0) THEN ((vt0.c1)GLOB(rt0.c1)) END);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON 0xffffffffc9762b4b WHERE (((QUOTE(rt0.c2))IS(ABS(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((QUOTE(rt0.c2))IS(ABS(rt0.c2)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON 0Xffffffffc9762b4b);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON 0xffffffffc9762b4b WHERE (((QUOTE(rt0.c2))IS(ABS(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((QUOTE(rt0.c2))IS(ABS(rt0.c2)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON 0Xffffffffc9762b4b);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON 0xffffffffc9762b4b WHERE (((QUOTE(rt0.c2))IS(ABS(rt0.c2))));
SELECT COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN vt0 ON 1258003120 WHERE (((rt0.c1)%(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)%(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt0 ON 1258003120);
SELECT COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN vt0 ON 1258003120 WHERE (((rt0.c1)%(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)%(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt0 ON 1258003120);
SELECT COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN vt0 ON 1258003120 WHERE (((rt0.c1)%(vt0.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0, v0 WHERE (((((0.6767703494621286)<(vt0.c1)))>=(((vt0.c1) IS FALSE)))) ORDER BY (((vt0.c1)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c1 END)) AND ((((vt0.c0)GLOB(vt0.c0))))) ASC, (((v0.c0)) BETWEEN ((json_extract(v0.c0, vt0.c0))) AND ((NULL COLLATE BINARY))) DESC;
SELECT SUM(count) FROM (SELECT ((((((0.6767703494621286)<(vt0.c1)))>=(((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c1)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c1 END)) AND ((((vt0.c0)GLOB(vt0.c0))))) ASC, (((v0.c0)) BETWEEN ((json_extract(v0.c0, vt0.c0))) AND ((NULL COLLATE BINARY))) DESC);
SELECT ALL * FROM vt0, v0 WHERE (((((0.6767703494621286)<(vt0.c1)))>=(((vt0.c1) IS FALSE)))) ORDER BY (((vt0.c1)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c1 END)) AND ((((vt0.c0)GLOB(vt0.c0))))) ASC, (((v0.c0)) BETWEEN ((json_extract(v0.c0, vt0.c0))) AND ((NULL COLLATE BINARY))) DESC;
SELECT SUM(count) FROM (SELECT ((((((0.6767703494621286)<(vt0.c1)))>=(((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c1)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c1 END)) AND ((((vt0.c0)GLOB(vt0.c0))))) ASC, (((v0.c0)) BETWEEN ((json_extract(v0.c0, vt0.c0))) AND ((NULL COLLATE BINARY))) DESC);
SELECT ALL * FROM vt0, v0 WHERE (((((0.6767703494621286)<(vt0.c1)))>=(((vt0.c1) IS FALSE)))) ORDER BY (((vt0.c1)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c1 END)) AND ((((vt0.c0)GLOB(vt0.c0))))) ASC, (((v0.c0)) BETWEEN ((json_extract(v0.c0, vt0.c0))) AND ((NULL COLLATE BINARY))) DESC;
SELECT ALL * FROM rt0, v0, vt0 WHERE ((((rt0.c1)) BETWEEN ((UPPER(vt0.c0))) AND ((((vt0.c0)<=(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((UPPER(vt0.c0))) AND ((((vt0.c0)<=(rt0.c2)))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE ((((rt0.c1)) BETWEEN ((UPPER(vt0.c0))) AND ((((vt0.c0)<=(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((UPPER(vt0.c0))) AND ((((vt0.c0)<=(rt0.c2)))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE ((((rt0.c1)) BETWEEN ((UPPER(vt0.c0))) AND ((((vt0.c0)<=(rt0.c2))))));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((((CASE vt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c2 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)OR(vt0.c0)))AND(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN x'' END))) ORDER BY ((SQLITE_COMPILEOPTION_GET(vt0.c0))||(rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c2 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)OR(vt0.c0)))AND(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN x'' END))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((SQLITE_COMPILEOPTION_GET(vt0.c0))||(rt0.c2)) ASC);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((((CASE vt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c2 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)OR(vt0.c0)))AND(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN x'' END))) ORDER BY ((SQLITE_COMPILEOPTION_GET(vt0.c0))||(rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c2 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)OR(vt0.c0)))AND(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN x'' END))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((SQLITE_COMPILEOPTION_GET(vt0.c0))||(rt0.c2)) ASC);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((((CASE vt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c2 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)OR(vt0.c0)))AND(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN x'' END))) ORDER BY ((SQLITE_COMPILEOPTION_GET(vt0.c0))||(rt0.c2)) ASC;
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CASE WHEN ((rt0.c1) NOTNULL) THEN (vt0.c1 IN ()) WHEN CASE WHEN x'db37' THEN '1698062635' END THEN CAST(vt0.c0 AS NUMERIC) WHEN (vt0.c0 IN ()) THEN (NOT (v0.c0)) END) ORDER BY '-2048918098' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) NOTNULL) THEN (vt0.c1 IN ()) WHEN CASE WHEN x'db37' THEN '1698062635' END THEN CAST(vt0.c0 AS NUMERIC) WHEN (vt0.c0 IN ()) THEN (NOT (v0.c0)) END) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY '-2048918098' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CASE WHEN ((rt0.c1) NOTNULL) THEN (vt0.c1 IN ()) WHEN CASE WHEN x'db37' THEN '1698062635' END THEN CAST(vt0.c0 AS NUMERIC) WHEN (vt0.c0 IN ()) THEN (NOT (v0.c0)) END) ORDER BY '-2048918098' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) NOTNULL) THEN (vt0.c1 IN ()) WHEN CASE WHEN x'db37' THEN '1698062635' END THEN CAST(vt0.c0 AS NUMERIC) WHEN (vt0.c0 IN ()) THEN (NOT (v0.c0)) END) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY '-2048918098' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CASE WHEN ((rt0.c1) NOTNULL) THEN (vt0.c1 IN ()) WHEN CASE WHEN x'db37' THEN '1698062635' END THEN CAST(vt0.c0 AS NUMERIC) WHEN (vt0.c0 IN ()) THEN (NOT (v0.c0)) END) ORDER BY '-2048918098' DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)>=(NULL))) NOT NULL)) ORDER BY ((v0.c0) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>=(NULL))) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) ISNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)>=(NULL))) NOT NULL)) ORDER BY ((v0.c0) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>=(NULL))) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) ISNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)>=(NULL))) NOT NULL)) ORDER BY ((v0.c0) ISNULL) DESC  NULLS FIRST;
SELECT * FROM rt0, vt0 NOT INDEXED, v0 WHERE (((((((((((vt0.c1)LIKE(vt0.c1)))OR(((v0.c0)>(rt0.c1)))))AND(((v0.c0) IS FALSE))))AND((vt0.c0 IN ()))))AND(CAST(NULL AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1)LIKE(vt0.c1)))OR(((v0.c0)>(rt0.c1)))))AND(((v0.c0) IS FALSE))))AND((vt0.c0 IN ()))))AND(CAST(NULL AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0 NOT INDEXED, v0 WHERE (((((((((((vt0.c1)LIKE(vt0.c1)))OR(((v0.c0)>(rt0.c1)))))AND(((v0.c0) IS FALSE))))AND((vt0.c0 IN ()))))AND(CAST(NULL AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1)LIKE(vt0.c1)))OR(((v0.c0)>(rt0.c1)))))AND(((v0.c0) IS FALSE))))AND((vt0.c0 IN ()))))AND(CAST(NULL AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0 NOT INDEXED, v0 WHERE (((((((((((vt0.c1)LIKE(vt0.c1)))OR(((v0.c0)>(rt0.c1)))))AND(((v0.c0) IS FALSE))))AND((vt0.c0 IN ()))))AND(CAST(NULL AS NUMERIC))));
SELECT * FROM vt0 WHERE (((((vt0.c1)||(vt0.c1))) NOT BETWEEN (((vt0.c1) NOTNULL)) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)||(vt0.c1))) NOT BETWEEN (((vt0.c1) NOTNULL)) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)||(vt0.c1))) NOT BETWEEN (((vt0.c1) NOTNULL)) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)||(vt0.c1))) NOT BETWEEN (((vt0.c1) NOTNULL)) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)||(vt0.c1))) NOT BETWEEN (((vt0.c1) NOTNULL)) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CAST(vt0.c1 AS TEXT)) NOT NULL)) ORDER BY ((((CASE vt0.c0  WHEN v0.c0 THEN vt0.c1 ELSE vt0.c0 END)OR(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))AND((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS TEXT)) NOT NULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((CASE vt0.c0  WHEN v0.c0 THEN vt0.c1 ELSE vt0.c0 END)OR(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))AND((+ (vt0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CAST(vt0.c1 AS TEXT)) NOT NULL)) ORDER BY ((((CASE vt0.c0  WHEN v0.c0 THEN vt0.c1 ELSE vt0.c0 END)OR(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))AND((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS TEXT)) NOT NULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((CASE vt0.c0  WHEN v0.c0 THEN vt0.c1 ELSE vt0.c0 END)OR(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))AND((+ (vt0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CAST(vt0.c1 AS TEXT)) NOT NULL)) ORDER BY ((((CASE vt0.c0  WHEN v0.c0 THEN vt0.c1 ELSE vt0.c0 END)OR(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))AND((+ (vt0.c0))));
SELECT ALL COUNT(*) FROM v0 WHERE (((NULL)|(CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((v0.c0)>(v0.c0)))/(((v0.c0)<=(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)|(CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)>(v0.c0)))/(((v0.c0)<=(v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((NULL)|(CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((v0.c0)>(v0.c0)))/(((v0.c0)<=(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)|(CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)>(v0.c0)))/(((v0.c0)<=(v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((NULL)|(CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((v0.c0)>(v0.c0)))/(((v0.c0)<=(v0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c1 COLLATE BINARY)/(((vt0.c1) NOT NULL)))) ORDER BY (((((vt0.c1)IS NOT(v0.c0)), ((v0.c0)=(v0.c0)), (vt0.c0 IN ())))<((x'' COLLATE BINARY, (('ZK_')||(vt0.c0)), CAST(v0.c0 AS INTEGER)))) ASC, (NOT (((vt0.c0)%(v0.c0)))) DESC  NULLS FIRST, CAST(((v0.c0) IS FALSE) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY)/(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((vt0.c1)IS NOT(v0.c0)), ((v0.c0)=(v0.c0)), (vt0.c0 IN ())))<((x'' COLLATE BINARY, (('ZK_')||(vt0.c0)), CAST(v0.c0 AS INTEGER)))) ASC, (NOT (((vt0.c0)%(v0.c0)))) DESC  NULLS FIRST, CAST(((v0.c0) IS FALSE) AS INTEGER));
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c1 COLLATE BINARY)/(((vt0.c1) NOT NULL)))) ORDER BY (((((vt0.c1)IS NOT(v0.c0)), ((v0.c0)=(v0.c0)), (vt0.c0 IN ())))<((x'' COLLATE BINARY, (('ZK_')||(vt0.c0)), CAST(v0.c0 AS INTEGER)))) ASC, (NOT (((vt0.c0)%(v0.c0)))) DESC  NULLS FIRST, CAST(((v0.c0) IS FALSE) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY)/(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((vt0.c1)IS NOT(v0.c0)), ((v0.c0)=(v0.c0)), (vt0.c0 IN ())))<((x'' COLLATE BINARY, (('ZK_')||(vt0.c0)), CAST(v0.c0 AS INTEGER)))) ASC, (NOT (((vt0.c0)%(v0.c0)))) DESC  NULLS FIRST, CAST(((v0.c0) IS FALSE) AS INTEGER));
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c1 COLLATE BINARY)/(((vt0.c1) NOT NULL)))) ORDER BY (((((vt0.c1)IS NOT(v0.c0)), ((v0.c0)=(v0.c0)), (vt0.c0 IN ())))<((x'' COLLATE BINARY, (('ZK_')||(vt0.c0)), CAST(v0.c0 AS INTEGER)))) ASC, (NOT (((vt0.c0)%(v0.c0)))) DESC  NULLS FIRST, CAST(((v0.c0) IS FALSE) AS INTEGER);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN '585175589' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)IS NOT(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN '585175589' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)IS NOT(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN '585175589' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)IS NOT(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN '585175589' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)IS NOT(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN '585175589' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)IS NOT(vt0.c0)));
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN (+ (v0.c0)) THEN vt0.c0 COLLATE RTRIM END) ORDER BY (- (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (v0.c0)) THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, v0 ORDER BY (- (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN (+ (v0.c0)) THEN vt0.c0 COLLATE RTRIM END) ORDER BY (- (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (v0.c0)) THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, v0 ORDER BY (- (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN (+ (v0.c0)) THEN vt0.c0 COLLATE RTRIM END) ORDER BY (- (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 NOT INDEXED, v0, vt0 WHERE ((((v0.c0 IN ()))GLOB(CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN v0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))GLOB(CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN v0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED, v0, vt0 WHERE ((((v0.c0 IN ()))GLOB(CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN v0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))GLOB(CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN v0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED, v0, vt0 WHERE ((((v0.c0 IN ()))GLOB(CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN v0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (-1289985407) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((-1289985407) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY rt0.c2 ASC);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (-1289985407) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((-1289985407) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY rt0.c2 ASC);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (-1289985407) ORDER BY rt0.c2 ASC;
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM WHERE (vt0.c0) ORDER BY ((((vt0.c0)<>(v0.c0))) NOT BETWEEN (((vt0.c0)*(v0.c0))) AND ((vt0.c0 IN (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM ORDER BY ((((vt0.c0)<>(v0.c0))) NOT BETWEEN (((vt0.c0)*(v0.c0))) AND ((vt0.c0 IN (vt0.c1)))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM WHERE (vt0.c0) ORDER BY ((((vt0.c0)<>(v0.c0))) NOT BETWEEN (((vt0.c0)*(v0.c0))) AND ((vt0.c0 IN (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM ORDER BY ((((vt0.c0)<>(v0.c0))) NOT BETWEEN (((vt0.c0)*(v0.c0))) AND ((vt0.c0 IN (vt0.c1)))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM WHERE (vt0.c0) ORDER BY ((((vt0.c0)<>(v0.c0))) NOT BETWEEN (((vt0.c0)*(v0.c0))) AND ((vt0.c0 IN (vt0.c1))));
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) THEN 1935289018 END) ORDER BY CAST(rt0.c1 AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) THEN 1935289018 END) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 AS REAL) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) THEN 1935289018 END) ORDER BY CAST(rt0.c1 AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) THEN 1935289018 END) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 AS REAL) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) THEN 1935289018 END) ORDER BY CAST(rt0.c1 AS REAL) ASC  NULLS LAST;
SELECT ALL * FROM v0, rt0 FULL OUTER JOIN vt0 ON (((v0.c0))<>((rt0.c2))) COLLATE RTRIM WHERE ((+ (((vt0.c0) NOT NULL)))) ORDER BY ((NULL) NOT BETWEEN (NULL) AND ((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN vt0 ON (((v0.c0))!=((rt0.c2))) COLLATE RTRIM ORDER BY ((NULL) NOT BETWEEN (NULL) AND ((rt0.c2 IN ()))));
SELECT ALL * FROM v0, rt0 FULL OUTER JOIN vt0 ON (((v0.c0))<>((rt0.c2))) COLLATE RTRIM WHERE ((+ (((vt0.c0) NOT NULL)))) ORDER BY ((NULL) NOT BETWEEN (NULL) AND ((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN vt0 ON (((v0.c0))!=((rt0.c2))) COLLATE RTRIM ORDER BY ((NULL) NOT BETWEEN (NULL) AND ((rt0.c2 IN ()))));
SELECT ALL * FROM v0, rt0 FULL OUTER JOIN vt0 ON (((v0.c0))<>((rt0.c2))) COLLATE RTRIM WHERE ((+ (((vt0.c0) NOT NULL)))) ORDER BY ((NULL) NOT BETWEEN (NULL) AND ((rt0.c2 IN ())));
SELECT ALL * FROM vt0, rt0 WHERE (((x'')<(CAST(rt0.c1 AS REAL)))) ORDER BY (((rt0.c0)) NOT BETWEEN (((((vt0.c0))<=((rt0.c0))))) AND ((((rt0.c2)GLOB(rt0.c0))))), (NOT (((rt0.c2)<=(vt0.c1)))) ASC, ((((vt0.c1) NOT NULL))||(rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((x'')<(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0)) NOT BETWEEN (((((vt0.c0))<=((rt0.c0))))) AND ((((rt0.c2)GLOB(rt0.c0))))), (NOT (((rt0.c2)<=(vt0.c1)))) ASC, ((((vt0.c1) NOT NULL))||(rt0.c0)));
SELECT ALL * FROM vt0, rt0 WHERE (((x'')<(CAST(rt0.c1 AS REAL)))) ORDER BY (((rt0.c0)) NOT BETWEEN (((((vt0.c0))<=((rt0.c0))))) AND ((((rt0.c2)GLOB(rt0.c0))))), (NOT (((rt0.c2)<=(vt0.c1)))) ASC, ((((vt0.c1) NOT NULL))||(rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((x'')<(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0)) NOT BETWEEN (((((vt0.c0))<=((rt0.c0))))) AND ((((rt0.c2)GLOB(rt0.c0))))), (NOT (((rt0.c2)<=(vt0.c1)))) ASC, ((((vt0.c1) NOT NULL))||(rt0.c0)));
SELECT ALL * FROM vt0, rt0 WHERE (((x'')<(CAST(rt0.c1 AS REAL)))) ORDER BY (((rt0.c0)) NOT BETWEEN (((((vt0.c0))<=((rt0.c0))))) AND ((((rt0.c2)GLOB(rt0.c0))))), (NOT (((rt0.c2)<=(vt0.c1)))) ASC, ((((vt0.c1) NOT NULL))||(rt0.c0));
SELECT * FROM vt0, rt0 RIGHT OUTER JOIN v0 ON (- (((rt0.c0)IS(rt0.c1)))) WHERE ((((v0.c0)<(rt0.c1)) IN ())) ORDER BY 0.18416807765404986 ASC  NULLS FIRST, CASE ((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))  WHEN (((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) THEN (((v0.c0, rt0.c2, rt0.c0))=((vt0.c0, vt0.c0, rt0.c2))) ELSE CAST(rt0.c2 AS REAL) END, CAST(((v0.c0)>(vt0.c0)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)<(rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN v0 ON (- (((rt0.c0)IS(rt0.c1)))) ORDER BY 0.18416807765404986 ASC  NULLS FIRST, CASE ((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))  WHEN (((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) THEN (((v0.c0, rt0.c2, rt0.c0))=((vt0.c0, vt0.c0, rt0.c2))) ELSE CAST(rt0.c2 AS REAL) END, CAST(((v0.c0)>(vt0.c0)) AS TEXT) DESC);
SELECT * FROM vt0, rt0 RIGHT OUTER JOIN v0 ON (- (((rt0.c0)IS(rt0.c1)))) WHERE ((((v0.c0)<(rt0.c1)) IN ())) ORDER BY 0.18416807765404986 ASC  NULLS FIRST, CASE ((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))  WHEN (((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) THEN (((v0.c0, rt0.c2, rt0.c0))=((vt0.c0, vt0.c0, rt0.c2))) ELSE CAST(rt0.c2 AS REAL) END, CAST(((v0.c0)>(vt0.c0)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)<(rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN v0 ON (- (((rt0.c0)IS(rt0.c1)))) ORDER BY 0.18416807765404986 ASC  NULLS FIRST, CASE ((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))  WHEN (((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) THEN (((v0.c0, rt0.c2, rt0.c0))=((vt0.c0, vt0.c0, rt0.c2))) ELSE CAST(rt0.c2 AS REAL) END, CAST(((v0.c0)>(vt0.c0)) AS TEXT) DESC);
SELECT * FROM vt0, rt0 RIGHT OUTER JOIN v0 ON (- (((rt0.c0)IS(rt0.c1)))) WHERE ((((v0.c0)<(rt0.c1)) IN ())) ORDER BY 0.18416807765404986 ASC  NULLS FIRST, CASE ((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))  WHEN (((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) THEN (((v0.c0, rt0.c2, rt0.c0))=((vt0.c0, vt0.c0, rt0.c2))) ELSE CAST(rt0.c2 AS REAL) END, CAST(((v0.c0)>(vt0.c0)) AS TEXT) DESC;
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON 0.5999301658667096 RIGHT OUTER JOIN rt0 ON ((((((rt0.c0)LIKE(rt0.c2)))OR(v0.c0)))OR(CAST(rt0.c1 AS NUMERIC))) WHERE (((((((((((vt0.c1)OR(rt0.c0)))OR(rt0.c1)))OR(vt0.c1)))AND(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1)OR(rt0.c0)))OR(rt0.c1)))OR(vt0.c1)))AND(rt0.c2))) ISNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON 0.5999301658667096 RIGHT OUTER JOIN rt0 ON ((((((rt0.c0)LIKE(rt0.c2)))OR(v0.c0)))OR(CAST(rt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON 0.5999301658667096 RIGHT OUTER JOIN rt0 ON ((((((rt0.c0)LIKE(rt0.c2)))OR(v0.c0)))OR(CAST(rt0.c1 AS NUMERIC))) WHERE (((((((((((vt0.c1)OR(rt0.c0)))OR(rt0.c1)))OR(vt0.c1)))AND(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1)OR(rt0.c0)))OR(rt0.c1)))OR(vt0.c1)))AND(rt0.c2))) ISNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON 0.5999301658667096 RIGHT OUTER JOIN rt0 ON ((((((rt0.c0)LIKE(rt0.c2)))OR(v0.c0)))OR(CAST(rt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON 0.5999301658667096 RIGHT OUTER JOIN rt0 ON ((((((rt0.c0)LIKE(rt0.c2)))OR(v0.c0)))OR(CAST(rt0.c1 AS NUMERIC))) WHERE (((((((((((vt0.c1)OR(rt0.c0)))OR(rt0.c1)))OR(vt0.c1)))AND(rt0.c2))) ISNULL));
SELECT * FROM vt0, v0 WHERE (((vt0.c1 COLLATE NOCASE)+(CASE 0.3490238255975838  WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY ((((v0.c0)*(vt0.c1)))*(CAST(vt0.c0 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE)+(CASE 0.3490238255975838  WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0)*(vt0.c1)))*(CAST(vt0.c0 AS BLOB))) ASC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (((vt0.c1 COLLATE NOCASE)+(CASE 0.3490238255975838  WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY ((((v0.c0)*(vt0.c1)))*(CAST(vt0.c0 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE)+(CASE 0.3490238255975838  WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0)*(vt0.c1)))*(CAST(vt0.c0 AS BLOB))) ASC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (((vt0.c1 COLLATE NOCASE)+(CASE 0.3490238255975838  WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY ((((v0.c0)*(vt0.c1)))*(CAST(vt0.c0 AS BLOB))) ASC  NULLS LAST;
SELECT * FROM v0 CROSS JOIN rt0 ON (~ (vt0.c0 COLLATE RTRIM)) CROSS JOIN vt0 ON (((((v0.c0, rt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c2, vt0.c0)))) IS TRUE) WHERE (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c1 THEN v0.c0 ELSE rt0.c0 END COLLATE RTRIM) ORDER BY (((((((((((((x'' IN (rt0.c2)))OR((((('-402556442')AND(vt0.c0)))AND(-708927214)))))AND(rt0.c0 COLLATE RTRIM)))AND((~ (vt0.c0)))))OR(((rt0.c2)GLOB(v0.c0)))))AND(((vt0.c0) ISNULL))))OR(NULL));
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c1 THEN v0.c0 ELSE rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (~ (vt0.c0 COLLATE RTRIM)) CROSS JOIN vt0 ON (((((v0.c0, rt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c2, vt0.c0)))) IS TRUE) ORDER BY (((((((((((((x'' IN (rt0.c2)))OR((((('-402556442')AND(vt0.c0)))AND(-708927214)))))AND(rt0.c0 COLLATE RTRIM)))AND((~ (vt0.c0)))))OR(((rt0.c2)GLOB(v0.c0)))))AND(((vt0.c0) ISNULL))))OR(NULL)));
SELECT * FROM v0 CROSS JOIN rt0 ON (~ (vt0.c0 COLLATE RTRIM)) CROSS JOIN vt0 ON (((((v0.c0, rt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c2, vt0.c0)))) IS TRUE) WHERE (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c1 THEN v0.c0 ELSE rt0.c0 END COLLATE RTRIM) ORDER BY (((((((((((((x'' IN (rt0.c2)))OR((((('-402556442')AND(vt0.c0)))AND(-708927214)))))AND(rt0.c0 COLLATE RTRIM)))AND((~ (vt0.c0)))))OR(((rt0.c2)GLOB(v0.c0)))))AND(((vt0.c0) ISNULL))))OR(NULL));
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c1 THEN v0.c0 ELSE rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (~ (vt0.c0 COLLATE RTRIM)) CROSS JOIN vt0 ON (((((v0.c0, rt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c2, vt0.c0)))) IS TRUE) ORDER BY (((((((((((((x'' IN (rt0.c2)))OR((((('-402556442')AND(vt0.c0)))AND(-708927214)))))AND(rt0.c0 COLLATE RTRIM)))AND((~ (vt0.c0)))))OR(((rt0.c2)GLOB(v0.c0)))))AND(((vt0.c0) ISNULL))))OR(NULL)));
SELECT * FROM v0 CROSS JOIN rt0 ON (~ (vt0.c0 COLLATE RTRIM)) CROSS JOIN vt0 ON (((((v0.c0, rt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c2, vt0.c0)))) IS TRUE) WHERE (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c1 THEN v0.c0 ELSE rt0.c0 END COLLATE RTRIM) ORDER BY (((((((((((((x'' IN (rt0.c2)))OR((((('-402556442')AND(vt0.c0)))AND(-708927214)))))AND(rt0.c0 COLLATE RTRIM)))AND((~ (vt0.c0)))))OR(((rt0.c2)GLOB(v0.c0)))))AND(((vt0.c0) ISNULL))))OR(NULL));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))>((((vt0.c0))<=((vt0.c1)))))) ORDER BY json_valid(vt0.c0) COLLATE BINARY DESC  NULLS FIRST, (((((vt0.c1)<=(vt0.c0)), vt0.c1 COLLATE NOCASE, (vt0.c1 IN ())))>((((vt0.c1)==(vt0.c0)), CASE WHEN vt0.c1 THEN vt0.c0 END, CAST(vt0.c0 AS BLOB)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))>((((vt0.c0))<=((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY json_valid(vt0.c0) COLLATE BINARY DESC  NULLS FIRST, (((((vt0.c1)<=(vt0.c0)), vt0.c1 COLLATE NOCASE, (vt0.c1 IN ())))>((((vt0.c1)==(vt0.c0)), CASE WHEN vt0.c1 THEN vt0.c0 END, CAST(vt0.c0 AS BLOB)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))>((((vt0.c0))<=((vt0.c1)))))) ORDER BY json_valid(vt0.c0) COLLATE BINARY DESC  NULLS FIRST, (((((vt0.c1)<=(vt0.c0)), vt0.c1 COLLATE NOCASE, (vt0.c1 IN ())))>((((vt0.c1)==(vt0.c0)), CASE WHEN vt0.c1 THEN vt0.c0 END, CAST(vt0.c0 AS BLOB)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))>((((vt0.c0))<=((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY json_valid(vt0.c0) COLLATE BINARY DESC  NULLS FIRST, (((((vt0.c1)<=(vt0.c0)), vt0.c1 COLLATE NOCASE, (vt0.c1 IN ())))>((((vt0.c1)==(vt0.c0)), CASE WHEN vt0.c1 THEN vt0.c0 END, CAST(vt0.c0 AS BLOB)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))>((((vt0.c0))<=((vt0.c1)))))) ORDER BY json_valid(vt0.c0) COLLATE BINARY DESC  NULLS FIRST, (((((vt0.c1)<=(vt0.c0)), vt0.c1 COLLATE NOCASE, (vt0.c1 IN ())))>((((vt0.c1)==(vt0.c0)), CASE WHEN vt0.c1 THEN vt0.c0 END, CAST(vt0.c0 AS BLOB)))) ASC  NULLS FIRST;
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON (NOT (vt0.c0 COLLATE RTRIM)) WHERE (((CASE vt0.c1  WHEN v0.c0 THEN v0.c0 END)%(NULL COLLATE RTRIM))) ORDER BY (((vt0.c1)) BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((('125579313' IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN v0.c0 THEN v0.c0 END)%(NULL COLLATE RTRIM))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (NOT (vt0.c0 COLLATE RTRIM)) ORDER BY (((vt0.c1)) BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((('125579313' IN ()))))  NULLS LAST);
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON (NOT (vt0.c0 COLLATE RTRIM)) WHERE (((CASE vt0.c1  WHEN v0.c0 THEN v0.c0 END)%(NULL COLLATE RTRIM))) ORDER BY (((vt0.c1)) BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((('125579313' IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN v0.c0 THEN v0.c0 END)%(NULL COLLATE RTRIM))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (NOT (vt0.c0 COLLATE RTRIM)) ORDER BY (((vt0.c1)) BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((('125579313' IN ()))))  NULLS LAST);
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON (NOT (vt0.c0 COLLATE RTRIM)) WHERE (((CASE vt0.c1  WHEN v0.c0 THEN v0.c0 END)%(NULL COLLATE RTRIM))) ORDER BY (((vt0.c1)) BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((('125579313' IN ()))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) BETWEEN (json_array_length(v0.c0, v0.c0)) AND (((v0.c0)<=(v0.c0))))) ORDER BY (- (v0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) BETWEEN (json_array_length(v0.c0, v0.c0)) AND (((v0.c0)<=(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (- (v0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) BETWEEN (json_array_length(v0.c0, v0.c0)) AND (((v0.c0)<=(v0.c0))))) ORDER BY (- (v0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) BETWEEN (json_array_length(v0.c0, v0.c0)) AND (((v0.c0)<=(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (- (v0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) BETWEEN (json_array_length(v0.c0, v0.c0)) AND (((v0.c0)<=(v0.c0))))) ORDER BY (- (v0.c0 COLLATE RTRIM));
SELECT ALL * FROM vt0, rt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE v0.c0  WHEN ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN DATETIME(vt0.c1, v0.c0, vt0.c0) ELSE (- (vt0.c0)) END) ORDER BY ((((vt0.c1) NOTNULL))LIKE(CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN DATETIME(vt0.c1, v0.c0, vt0.c0) ELSE (- (vt0.c0)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c1) NOTNULL))LIKE(CAST(vt0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE v0.c0  WHEN ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN DATETIME(vt0.c1, v0.c0, vt0.c0) ELSE (- (vt0.c0)) END) ORDER BY ((((vt0.c1) NOTNULL))LIKE(CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN DATETIME(vt0.c1, v0.c0, vt0.c0) ELSE (- (vt0.c0)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c1) NOTNULL))LIKE(CAST(vt0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE v0.c0  WHEN ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN DATETIME(vt0.c1, v0.c0, vt0.c0) ELSE (- (vt0.c0)) END) ORDER BY ((((vt0.c1) NOTNULL))LIKE(CAST(vt0.c0 AS REAL)));
SELECT ALL * FROM rt0, v0 WHERE (v0.c0) ORDER BY (((rt0.c1)+(rt0.c1)) IN ())  NULLS LAST, CAST(v0.c0 AS TEXT) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c1)+(rt0.c1)) IN ())  NULLS LAST, CAST(v0.c0 AS TEXT) COLLATE BINARY);
SELECT ALL * FROM rt0, v0 WHERE (v0.c0) ORDER BY (((rt0.c1)+(rt0.c1)) IN ())  NULLS LAST, CAST(v0.c0 AS TEXT) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c1)+(rt0.c1)) IN ())  NULLS LAST, CAST(v0.c0 AS TEXT) COLLATE BINARY);
SELECT ALL * FROM rt0, v0 WHERE (v0.c0) ORDER BY (((rt0.c1)+(rt0.c1)) IN ())  NULLS LAST, CAST(v0.c0 AS TEXT) COLLATE BINARY;
SELECT ALL * FROM rt0, vt0 INNER JOIN v0 ON (((vt0.c1)) BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((((((vt0.c0)AND(v0.c0)))OR(vt0.c1))))) WHERE (((rt0.c0) ISNULL)) ORDER BY ((((((((((((rt0.c1)AND(vt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(NULL)))AND(CASE WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)))OR(0.9415786468056113))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) ISNULL)) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON (((vt0.c1)) BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((((((vt0.c0)AND(v0.c0)))OR(vt0.c1))))) ORDER BY ((((((((((((rt0.c1)AND(vt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(NULL)))AND(CASE WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)))OR(0.9415786468056113))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 INNER JOIN v0 ON (((vt0.c1)) BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((((((vt0.c0)AND(v0.c0)))OR(vt0.c1))))) WHERE (((rt0.c0) ISNULL)) ORDER BY ((((((((((((rt0.c1)AND(vt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(NULL)))AND(CASE WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)))OR(0.9415786468056113))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) ISNULL)) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON (((vt0.c1)) BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((((((vt0.c0)AND(v0.c0)))OR(vt0.c1))))) ORDER BY ((((((((((((rt0.c1)AND(vt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(NULL)))AND(CASE WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)))OR(0.9415786468056113))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 INNER JOIN v0 ON (((vt0.c1)) BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((((((vt0.c0)AND(v0.c0)))OR(vt0.c1))))) WHERE (((rt0.c0) ISNULL)) ORDER BY ((((((((((((rt0.c1)AND(vt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(NULL)))AND(CASE WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)))OR(0.9415786468056113))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS INTEGER) COLLATE BINARY);
SELECT * FROM rt0, vt0 LEFT OUTER JOIN v0 ON (((NULL IN ())) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (((vt0.c1) NOT NULL))) WHERE (TIME(((rt0.c0) ISNULL), ((rt0.c2) ISNULL), CAST(rt0.c1 AS INTEGER), (+ (vt0.c1)), (v0.c0 IN (rt0.c0, vt0.c1)), CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 END, -4.7068515E7));
SELECT SUM(count) FROM (SELECT ((TIME(((rt0.c0) ISNULL), ((rt0.c2) ISNULL), CAST(rt0.c1 AS INTEGER), (+ (vt0.c1)), (v0.c0 IN (rt0.c0, vt0.c1)), CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 END, -4.7068515E7)) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN v0 ON (((NULL IN ())) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (((vt0.c1) NOT NULL))));
SELECT * FROM rt0, vt0 LEFT OUTER JOIN v0 ON (((NULL IN ())) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (((vt0.c1) NOT NULL))) WHERE (TIME(((rt0.c0) ISNULL), ((rt0.c2) ISNULL), CAST(rt0.c1 AS INTEGER), (+ (vt0.c1)), (v0.c0 IN (rt0.c0, vt0.c1)), CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 END, -4.7068515E7));
SELECT SUM(count) FROM (SELECT ((TIME(((rt0.c0) ISNULL), ((rt0.c2) ISNULL), CAST(rt0.c1 AS INTEGER), (+ (vt0.c1)), (v0.c0 IN (rt0.c0, vt0.c1)), CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 END, -4.7068515E7)) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN v0 ON (((NULL IN ())) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (((vt0.c1) NOT NULL))));
SELECT * FROM rt0, vt0 LEFT OUTER JOIN v0 ON (((NULL IN ())) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (((vt0.c1) NOT NULL))) WHERE (TIME(((rt0.c0) ISNULL), ((rt0.c2) ISNULL), CAST(rt0.c1 AS INTEGER), (+ (vt0.c1)), (v0.c0 IN (rt0.c0, vt0.c1)), CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 END, -4.7068515E7));
SELECT COUNT(*) FROM rt0, v0 WHERE (((((v0.c0) BETWEEN (rt0.c2) AND (v0.c0)))LIKE(CAST(rt0.c0 AS BLOB)))) ORDER BY (((rt0.c1 IN ()))>=(NULLIF(rt0.c1, rt0.c0))) DESC  NULLS LAST, (((((rt0.c0)AND(rt0.c0)))OR(v0.c0)) IN ())  NULLS LAST, ((((v0.c0 IN ()), (NOT (v0.c0)), ((((v0.c0)OR(rt0.c1)))OR(rt0.c2))))==((((rt0.c0)<>(rt0.c2)), ((((rt0.c1)OR(v0.c0)))AND(rt0.c1)), ((x'd4f724a0')<=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (rt0.c2) AND (v0.c0)))LIKE(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c1 IN ()))>=(NULLIF(rt0.c1, rt0.c0))) DESC  NULLS LAST, (((((rt0.c0)AND(rt0.c0)))OR(v0.c0)) IN ())  NULLS LAST, ((((v0.c0 IN ()), (NOT (v0.c0)), ((((v0.c0)OR(rt0.c1)))OR(rt0.c2))))==((((rt0.c0)!=(rt0.c2)), ((((rt0.c1)OR(v0.c0)))AND(rt0.c1)), ((x'd4f724a0')<=(rt0.c2))))));
SELECT COUNT(*) FROM rt0, v0 WHERE (((((v0.c0) BETWEEN (rt0.c2) AND (v0.c0)))LIKE(CAST(rt0.c0 AS BLOB)))) ORDER BY (((rt0.c1 IN ()))>=(NULLIF(rt0.c1, rt0.c0))) DESC  NULLS LAST, (((((rt0.c0)AND(rt0.c0)))OR(v0.c0)) IN ())  NULLS LAST, ((((v0.c0 IN ()), (NOT (v0.c0)), ((((v0.c0)OR(rt0.c1)))OR(rt0.c2))))==((((rt0.c0)<>(rt0.c2)), ((((rt0.c1)OR(v0.c0)))AND(rt0.c1)), ((x'd4f724a0')<=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (rt0.c2) AND (v0.c0)))LIKE(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c1 IN ()))>=(NULLIF(rt0.c1, rt0.c0))) DESC  NULLS LAST, (((((rt0.c0)AND(rt0.c0)))OR(v0.c0)) IN ())  NULLS LAST, ((((v0.c0 IN ()), (NOT (v0.c0)), ((((v0.c0)OR(rt0.c1)))OR(rt0.c2))))==((((rt0.c0)!=(rt0.c2)), ((((rt0.c1)OR(v0.c0)))AND(rt0.c1)), ((x'd4f724a0')<=(rt0.c2))))));
SELECT COUNT(*) FROM rt0, v0 WHERE (((((v0.c0) BETWEEN (rt0.c2) AND (v0.c0)))LIKE(CAST(rt0.c0 AS BLOB)))) ORDER BY (((rt0.c1 IN ()))>=(NULLIF(rt0.c1, rt0.c0))) DESC  NULLS LAST, (((((rt0.c0)AND(rt0.c0)))OR(v0.c0)) IN ())  NULLS LAST, ((((v0.c0 IN ()), (NOT (v0.c0)), ((((v0.c0)OR(rt0.c1)))OR(rt0.c2))))==((((rt0.c0)<>(rt0.c2)), ((((rt0.c1)OR(v0.c0)))AND(rt0.c1)), ((x'd4f724a0')<=(rt0.c2)))));
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (NOT (v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (NOT (v0.c0 COLLATE BINARY)));
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (NOT (v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (NOT (v0.c0 COLLATE BINARY)));
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (NOT (v0.c0 COLLATE BINARY));
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1)OR(LIKELY(DISTINCT vt0.c0))))OR(NULL))) ORDER BY CAST(vt0.c1 AS INTEGER) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)OR(LIKELY(DISTINCT vt0.c0))))OR(NULL))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(vt0.c1 AS INTEGER) COLLATE BINARY);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1)OR(LIKELY(DISTINCT vt0.c0))))OR(NULL))) ORDER BY CAST(vt0.c1 AS INTEGER) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)OR(LIKELY(DISTINCT vt0.c0))))OR(NULL))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(vt0.c1 AS INTEGER) COLLATE BINARY);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1)OR(LIKELY(DISTINCT vt0.c0))))OR(NULL))) ORDER BY CAST(vt0.c1 AS INTEGER) COLLATE BINARY;
SELECT * FROM v0, rt0, vt0 WHERE (((rt0.c0 COLLATE NOCASE)<<(((v0.c0)LIKE(rt0.c0))))) ORDER BY LIKE((NOT (v0.c0)), IFNULL(5.0373183E8, rt0.c2), '-');
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE)<<(((v0.c0)LIKE(rt0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY LIKE((NOT (v0.c0)), IFNULL(5.0373183E8, rt0.c2), '-'));
SELECT * FROM v0, rt0, vt0 WHERE (((rt0.c0 COLLATE NOCASE)<<(((v0.c0)LIKE(rt0.c0))))) ORDER BY LIKE((NOT (v0.c0)), IFNULL(5.0373183E8, rt0.c2), '-');
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE)<<(((v0.c0)LIKE(rt0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY LIKE((NOT (v0.c0)), IFNULL(5.0373183E8, rt0.c2), '-'));
SELECT * FROM v0, rt0, vt0 WHERE (((rt0.c0 COLLATE NOCASE)<<(((v0.c0)LIKE(rt0.c0))))) ORDER BY LIKE((NOT (v0.c0)), IFNULL(5.0373183E8, rt0.c2), '-');
SELECT ALL * FROM rt0, v0 WHERE (UNICODE((rt0.c2 IN ()))) ORDER BY ((((rt0.c1) NOT NULL)) NOT BETWEEN (v0.c0) AND (((rt0.c0)/(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNICODE((rt0.c2 IN ()))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c1) NOT NULL)) NOT BETWEEN (v0.c0) AND (((rt0.c0)/(rt0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (UNICODE((rt0.c2 IN ()))) ORDER BY ((((rt0.c1) NOT NULL)) NOT BETWEEN (v0.c0) AND (((rt0.c0)/(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNICODE((rt0.c2 IN ()))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c1) NOT NULL)) NOT BETWEEN (v0.c0) AND (((rt0.c0)/(rt0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (UNICODE((rt0.c2 IN ()))) ORDER BY ((((rt0.c1) NOT NULL)) NOT BETWEEN (v0.c0) AND (((rt0.c0)/(rt0.c0))))  NULLS LAST;
SELECT * FROM rt0 WHERE (CAST(((rt0.c2) IS TRUE) AS TEXT)) ORDER BY (((rt0.c2 IN ()))>=(((rt0.c1)<<(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) IS TRUE) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ()))>=(((rt0.c1)<<(rt0.c2))))  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST(((rt0.c2) IS TRUE) AS TEXT)) ORDER BY (((rt0.c2 IN ()))>=(((rt0.c1)<<(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) IS TRUE) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ()))>=(((rt0.c1)<<(rt0.c2))))  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST(((rt0.c2) IS TRUE) AS TEXT)) ORDER BY (((rt0.c2 IN ()))>=(((rt0.c1)<<(rt0.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0))<=((0.387733725604419))) IN ())) ORDER BY ((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOT NULL) DESC, ((((vt0.c0)OR(TYPEOF(vt0.c1))))AND(((vt0.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))<=((0.387733725604419))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOT NULL) DESC, ((((vt0.c0)OR(TYPEOF(vt0.c1))))AND(((vt0.c0) NOT NULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0))<=((0.387733725604419))) IN ())) ORDER BY ((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOT NULL) DESC, ((((vt0.c0)OR(TYPEOF(vt0.c1))))AND(((vt0.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))<=((0.387733725604419))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOT NULL) DESC, ((((vt0.c0)OR(TYPEOF(vt0.c1))))AND(((vt0.c0) NOT NULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0))<=((0.387733725604419))) IN ())) ORDER BY ((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOT NULL) DESC, ((((vt0.c0)OR(TYPEOF(vt0.c1))))AND(((vt0.c0) NOT NULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((- (rt0.c1)))OR((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1)))OR((~ (rt0.c1))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((- (rt0.c1)))OR((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1)))OR((~ (rt0.c1))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((- (rt0.c1)))OR((~ (rt0.c1)))));
SELECT * FROM vt0, rt0, v0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)AND(CAST(v0.c0 AS INTEGER))))AND(CASE vt0.c0  WHEN rt0.c1 THEN '1767282809' END)));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)AND(CAST(v0.c0 AS INTEGER))))AND(CASE vt0.c0  WHEN rt0.c1 THEN '1767282809' END))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)AND(CAST(v0.c0 AS INTEGER))))AND(CASE vt0.c0  WHEN rt0.c1 THEN '1767282809' END)));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)AND(CAST(v0.c0 AS INTEGER))))AND(CASE vt0.c0  WHEN rt0.c1 THEN '1767282809' END))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)AND(CAST(v0.c0 AS INTEGER))))AND(CASE vt0.c0  WHEN rt0.c1 THEN '1767282809' END)));
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS REAL)) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS REAL)) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS REAL)) ORDER BY rt0.c0 DESC;
SELECT * FROM v0, vt0 WHERE (((v0.c0) IS FALSE) COLLATE RTRIM) ORDER BY ((((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))GLOB(v0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))GLOB(v0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((v0.c0) IS FALSE) COLLATE RTRIM) ORDER BY ((((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))GLOB(v0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))GLOB(v0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((v0.c0) IS FALSE) COLLATE RTRIM) ORDER BY ((((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))GLOB(v0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT * FROM v0, rt0, vt0 WHERE (rt0.c1 COLLATE RTRIM) ORDER BY (x'' IN (x'')) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (x'' IN (x'')) DESC);
SELECT * FROM v0, rt0, vt0 WHERE (rt0.c1 COLLATE RTRIM) ORDER BY (x'' IN (x'')) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (x'' IN (x'')) DESC);
SELECT * FROM v0, rt0, vt0 WHERE (rt0.c1 COLLATE RTRIM) ORDER BY (x'' IN (x'')) DESC;
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON (~ (CAST(0.4021604439543792 AS TEXT))) FULL OUTER JOIN rt0 ON (- (CASE WHEN 'G-' THEN vt0.c0 END)) WHERE (((((((vt0.c1)OR(vt0.c1)))OR(rt0.c2))) NOT NULL)) ORDER BY CASE WHEN (((vt0.c1))<=((vt0.c1))) THEN (- (rt0.c0)) ELSE ((((rt0.c0)OR(rt0.c0)))AND(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(vt0.c1)))OR(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (~ (CAST(0.4021604439543792 AS TEXT))) FULL OUTER JOIN rt0 ON (- (CASE WHEN 'G-' THEN vt0.c0 END)) ORDER BY CASE WHEN (((vt0.c1))<=((vt0.c1))) THEN (- (rt0.c0)) ELSE ((((rt0.c0)OR(rt0.c0)))AND(vt0.c0)) END);
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON (~ (CAST(0.4021604439543792 AS TEXT))) FULL OUTER JOIN rt0 ON (- (CASE WHEN 'G-' THEN vt0.c0 END)) WHERE (((((((vt0.c1)OR(vt0.c1)))OR(rt0.c2))) NOT NULL)) ORDER BY CASE WHEN (((vt0.c1))<=((vt0.c1))) THEN (- (rt0.c0)) ELSE ((((rt0.c0)OR(rt0.c0)))AND(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(vt0.c1)))OR(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (~ (CAST(0.4021604439543792 AS TEXT))) FULL OUTER JOIN rt0 ON (- (CASE WHEN 'G-' THEN vt0.c0 END)) ORDER BY CASE WHEN (((vt0.c1))<=((vt0.c1))) THEN (- (rt0.c0)) ELSE ((((rt0.c0)OR(rt0.c0)))AND(vt0.c0)) END);
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON (~ (CAST(0.4021604439543792 AS TEXT))) FULL OUTER JOIN rt0 ON (- (CASE WHEN 'G-' THEN vt0.c0 END)) WHERE (((((((vt0.c1)OR(vt0.c1)))OR(rt0.c2))) NOT NULL)) ORDER BY CASE WHEN (((vt0.c1))<=((vt0.c1))) THEN (- (rt0.c0)) ELSE ((((rt0.c0)OR(rt0.c0)))AND(vt0.c0)) END;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE ((v0.c0) BETWEEN (rt0.c2) AND ('236519281'))  WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) WHEN 40426942 THEN ((((rt0.c1)AND(v0.c0)))OR(rt0.c1)) WHEN ABS(-1558906556) THEN ((v0.c0)<<(rt0.c1)) ELSE rt0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) BETWEEN (rt0.c2) AND ('236519281'))  WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) WHEN 40426942 THEN ((((rt0.c1)AND(v0.c0)))OR(rt0.c1)) WHEN ABS(-1558906556) THEN ((v0.c0)<<(rt0.c1)) ELSE rt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE ((v0.c0) BETWEEN (rt0.c2) AND ('236519281'))  WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) WHEN 40426942 THEN ((((rt0.c1)AND(v0.c0)))OR(rt0.c1)) WHEN ABS(-1558906556) THEN ((v0.c0)<<(rt0.c1)) ELSE rt0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) BETWEEN (rt0.c2) AND ('236519281'))  WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) WHEN 40426942 THEN ((((rt0.c1)AND(v0.c0)))OR(rt0.c1)) WHEN ABS(-1558906556) THEN ((v0.c0)<<(rt0.c1)) ELSE rt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE ((v0.c0) BETWEEN (rt0.c2) AND ('236519281'))  WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) WHEN 40426942 THEN ((((rt0.c1)AND(v0.c0)))OR(rt0.c1)) WHEN ABS(-1558906556) THEN ((v0.c0)<<(rt0.c1)) ELSE rt0.c1 COLLATE BINARY END);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c2)))*((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((0.5502294162266308))))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2)))*((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((0.5502294162266308)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c2)))*((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((0.5502294162266308))))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2)))*((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((0.5502294162266308)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c2)))*((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((0.5502294162266308))))));
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY CAST((NOT (rt0.c0)) AS REAL) DESC, (- (((rt0.c0)|(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY CAST((NOT (rt0.c0)) AS REAL) DESC, (- (((rt0.c0)|(rt0.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY CAST((NOT (rt0.c0)) AS REAL) DESC, (- (((rt0.c0)|(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY CAST((NOT (rt0.c0)) AS REAL) DESC, (- (((rt0.c0)|(rt0.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY CAST((NOT (rt0.c0)) AS REAL) DESC, (- (((rt0.c0)|(rt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON json_patch((v0.c0 IN ()), (rt0.c2 IN ())) WHERE (((rt0.c1)<<(rt0.c0)) COLLATE BINARY) ORDER BY (((rt0.c2 IN ())) NOT BETWEEN (((rt0.c0)-(rt0.c1))) AND ((NOT (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)<<(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON json_patch((v0.c0 IN ()), (rt0.c2 IN ())) ORDER BY (((rt0.c2 IN ())) NOT BETWEEN (((rt0.c0)-(rt0.c1))) AND ((NOT (rt0.c2)))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON json_patch((v0.c0 IN ()), (rt0.c2 IN ())) WHERE (((rt0.c1)<<(rt0.c0)) COLLATE BINARY) ORDER BY (((rt0.c2 IN ())) NOT BETWEEN (((rt0.c0)-(rt0.c1))) AND ((NOT (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)<<(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON json_patch((v0.c0 IN ()), (rt0.c2 IN ())) ORDER BY (((rt0.c2 IN ())) NOT BETWEEN (((rt0.c0)-(rt0.c1))) AND ((NOT (rt0.c2)))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON json_patch((v0.c0 IN ()), (rt0.c2 IN ())) WHERE (((rt0.c1)<<(rt0.c0)) COLLATE BINARY) ORDER BY (((rt0.c2 IN ())) NOT BETWEEN (((rt0.c0)-(rt0.c1))) AND ((NOT (rt0.c2))));
SELECT COUNT(*) FROM vt0 WHERE (((((- (vt0.c1))))==(((((vt0.c1))>((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ((((((- (vt0.c1))))==(((((vt0.c1))>((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((- (vt0.c1))))==(((((vt0.c1))>((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ((((((- (vt0.c1))))==(((((vt0.c1))>((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((- (vt0.c1))))==(((((vt0.c1))>((vt0.c0)))))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) IS FALSE) FULL OUTER JOIN v0 ON (+ (rt0.c0)) WHERE ((((((v0.c0 IN ()))AND(CASE WHEN rt0.c2 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c0 THEN v0.c0 END)))OR(TRIM(DISTINCT rt0.c2, vt0.c0)))) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN ()))AND(CASE WHEN rt0.c2 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c0 THEN v0.c0 END)))OR(TRIM(DISTINCT rt0.c2, vt0.c0)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) IS FALSE) FULL OUTER JOIN v0 ON (+ (rt0.c0)) ORDER BY v0.c0  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) IS FALSE) FULL OUTER JOIN v0 ON (+ (rt0.c0)) WHERE ((((((v0.c0 IN ()))AND(CASE WHEN rt0.c2 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c0 THEN v0.c0 END)))OR(TRIM(DISTINCT rt0.c2, vt0.c0)))) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN ()))AND(CASE WHEN rt0.c2 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c0 THEN v0.c0 END)))OR(TRIM(DISTINCT rt0.c2, vt0.c0)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) IS FALSE) FULL OUTER JOIN v0 ON (+ (rt0.c0)) ORDER BY v0.c0  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) IS FALSE) FULL OUTER JOIN v0 ON (+ (rt0.c0)) WHERE ((((((v0.c0 IN ()))AND(CASE WHEN rt0.c2 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c0 THEN v0.c0 END)))OR(TRIM(DISTINCT rt0.c2, vt0.c0)))) ORDER BY v0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ())) ORDER BY ((((vt0.c0)*(vt0.c0))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)*(vt0.c0))) IS FALSE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ())) ORDER BY ((((vt0.c0)*(vt0.c0))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)*(vt0.c0))) IS FALSE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ())) ORDER BY ((((vt0.c0)*(vt0.c0))) IS FALSE) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c0)), CAST(vt0.c1 AS BLOB), vt0.c0 COLLATE NOCASE))<=(((NOT (vt0.c1)), ((vt0.c1) IS FALSE), ((vt0.c0) BETWEEN ('') AND (vt0.c0)))))) ORDER BY -2.048918098E9, ((vt0.c0) NOT NULL) COLLATE NOCASE COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)OR(vt0.c0)), CAST(vt0.c1 AS BLOB), vt0.c0 COLLATE NOCASE))<=(((NOT (vt0.c1)), ((vt0.c1) IS FALSE), ((vt0.c0) BETWEEN ('') AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY -2.048918098E9, ((vt0.c0) NOT NULL) COLLATE NOCASE COLLATE NOCASE ASC);
SELECT * FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c0)), CAST(vt0.c1 AS BLOB), vt0.c0 COLLATE NOCASE))<=(((NOT (vt0.c1)), ((vt0.c1) IS FALSE), ((vt0.c0) BETWEEN ('') AND (vt0.c0)))))) ORDER BY -2.048918098E9, ((vt0.c0) NOT NULL) COLLATE NOCASE COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)OR(vt0.c0)), CAST(vt0.c1 AS BLOB), vt0.c0 COLLATE NOCASE))<=(((NOT (vt0.c1)), ((vt0.c1) IS FALSE), ((vt0.c0) BETWEEN ('') AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY -2.048918098E9, ((vt0.c0) NOT NULL) COLLATE NOCASE COLLATE NOCASE ASC);
SELECT * FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c0)), CAST(vt0.c1 AS BLOB), vt0.c0 COLLATE NOCASE))<=(((NOT (vt0.c1)), ((vt0.c1) IS FALSE), ((vt0.c0) BETWEEN ('') AND (vt0.c0)))))) ORDER BY -2.048918098E9, ((vt0.c0) NOT NULL) COLLATE NOCASE COLLATE NOCASE ASC;
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0)OR((vt0.c0 IN ()))))AND((NOT (vt0.c1))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY ((((vt0.c0)OR((vt0.c0 IN ()))))AND((NOT (vt0.c1)))));
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0)OR((vt0.c0 IN ()))))AND((NOT (vt0.c1))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY ((((vt0.c0)OR((vt0.c0 IN ()))))AND((NOT (vt0.c1)))));
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0)OR((vt0.c0 IN ()))))AND((NOT (vt0.c1))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS NUMERIC)) ORDER BY ((vt0.c1)&('1445667697'));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)&('1445667697')));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS NUMERIC)) ORDER BY ((vt0.c1)&('1445667697'));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)&('1445667697')));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS NUMERIC)) ORDER BY ((vt0.c1)&('1445667697'));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((rt0.c1 COLLATE NOCASE)<=(TRIM(rt0.c0, vt0.c0)))) ORDER BY ((((((((CASE rt0.c1  WHEN 0.20563572238286532 THEN vt0.c1 ELSE 0x4f1fc01b END)AND(rt0.c1 COLLATE RTRIM)))OR((~ (rt0.c2)))))OR(((((v0.c0)OR(rt0.c1)))AND(rt0.c1)))))OR(((rt0.c1)!=('')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE)<=(TRIM(rt0.c0, vt0.c0)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((((((((CASE rt0.c1  WHEN 0.20563572238286532 THEN vt0.c1 ELSE 0x4f1fc01b END)AND(rt0.c1 COLLATE RTRIM)))OR((~ (rt0.c2)))))OR(((((v0.c0)OR(rt0.c1)))AND(rt0.c1)))))OR(((rt0.c1)!=('')))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((rt0.c1 COLLATE NOCASE)<=(TRIM(rt0.c0, vt0.c0)))) ORDER BY ((((((((CASE rt0.c1  WHEN 0.20563572238286532 THEN vt0.c1 ELSE 0x4f1fc01b END)AND(rt0.c1 COLLATE RTRIM)))OR((~ (rt0.c2)))))OR(((((v0.c0)OR(rt0.c1)))AND(rt0.c1)))))OR(((rt0.c1)!=('')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE)<=(TRIM(rt0.c0, vt0.c0)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((((((((CASE rt0.c1  WHEN 0.20563572238286532 THEN vt0.c1 ELSE 0x4f1fc01b END)AND(rt0.c1 COLLATE RTRIM)))OR((~ (rt0.c2)))))OR(((((v0.c0)OR(rt0.c1)))AND(rt0.c1)))))OR(((rt0.c1)!=('')))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((rt0.c1 COLLATE NOCASE)<=(TRIM(rt0.c0, vt0.c0)))) ORDER BY ((((((((CASE rt0.c1  WHEN 0.20563572238286532 THEN vt0.c1 ELSE 0x4f1fc01b END)AND(rt0.c1 COLLATE RTRIM)))OR((~ (rt0.c2)))))OR(((((v0.c0)OR(rt0.c1)))AND(rt0.c1)))))OR(((rt0.c1)!=('')))) ASC  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE (STRFTIME(0Xffffffffae80dc49 COLLATE NOCASE, UNLIKELY(rt0.c2), (((x'')) NOT BETWEEN ((0x43432d1e)) AND ((v0.c0))))) ORDER BY CAST(CASE WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((STRFTIME(0Xffffffffae80dc49 COLLATE NOCASE, UNLIKELY(rt0.c2), (((x'')) NOT BETWEEN ((0X43432d1e)) AND ((v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(CASE WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END AS BLOB)  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (STRFTIME(0Xffffffffae80dc49 COLLATE NOCASE, UNLIKELY(rt0.c2), (((x'')) NOT BETWEEN ((0x43432d1e)) AND ((v0.c0))))) ORDER BY CAST(CASE WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((STRFTIME(0Xffffffffae80dc49 COLLATE NOCASE, UNLIKELY(rt0.c2), (((x'')) NOT BETWEEN ((0X43432d1e)) AND ((v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(CASE WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END AS BLOB)  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (STRFTIME(0Xffffffffae80dc49 COLLATE NOCASE, UNLIKELY(rt0.c2), (((x'')) NOT BETWEEN ((0x43432d1e)) AND ((v0.c0))))) ORDER BY CAST(CASE WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END AS BLOB)  NULLS FIRST;
SELECT ALL * FROM v0, rt0, vt0 WHERE (CASE WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)) THEN ((0.9415786468056113)AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)) THEN ((0.9415786468056113)AND(vt0.c0)) END) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (CASE WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)) THEN ((0.9415786468056113)AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)) THEN ((0.9415786468056113)AND(vt0.c0)) END) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (CASE WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)) THEN ((0.9415786468056113)AND(vt0.c0)) END);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((~ (rt0.c1)))<=(rt0.c2))) ORDER BY (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (0.7103020336228976))) AND ((((NULL, rt0.c0, vt0.c0, vt0.c1, rt0.c2, 0Xfffffffffd31ca9d, vt0.c1))==((vt0.c1, rt0.c1, rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c0))))) DESC  NULLS LAST, CASE 'Yp,GNh4'  WHEN rt0.c1 THEN rt0.c1 END COLLATE NOCASE DESC, ((rt0.c1 COLLATE NOCASE)>(((vt0.c1)/(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1)))<=(rt0.c2))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (0.7103020336228976))) AND ((((NULL, rt0.c0, vt0.c0, vt0.c1, rt0.c2, 0xfffffffffd31ca9d, vt0.c1))==((vt0.c1, rt0.c1, rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c0))))) DESC  NULLS LAST, CASE 'Yp,GNh4'  WHEN rt0.c1 THEN rt0.c1 END COLLATE NOCASE DESC, ((rt0.c1 COLLATE NOCASE)>(((vt0.c1)/(rt0.c1)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((~ (rt0.c1)))<=(rt0.c2))) ORDER BY (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (0.7103020336228976))) AND ((((NULL, rt0.c0, vt0.c0, vt0.c1, rt0.c2, 0Xfffffffffd31ca9d, vt0.c1))==((vt0.c1, rt0.c1, rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c0))))) DESC  NULLS LAST, CASE 'Yp,GNh4'  WHEN rt0.c1 THEN rt0.c1 END COLLATE NOCASE DESC, ((rt0.c1 COLLATE NOCASE)>(((vt0.c1)/(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1)))<=(rt0.c2))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (0.7103020336228976))) AND ((((NULL, rt0.c0, vt0.c0, vt0.c1, rt0.c2, 0xfffffffffd31ca9d, vt0.c1))==((vt0.c1, rt0.c1, rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c0))))) DESC  NULLS LAST, CASE 'Yp,GNh4'  WHEN rt0.c1 THEN rt0.c1 END COLLATE NOCASE DESC, ((rt0.c1 COLLATE NOCASE)>(((vt0.c1)/(rt0.c1)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((~ (rt0.c1)))<=(rt0.c2))) ORDER BY (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (0.7103020336228976))) AND ((((NULL, rt0.c0, vt0.c0, vt0.c1, rt0.c2, 0Xfffffffffd31ca9d, vt0.c1))==((vt0.c1, rt0.c1, rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c0))))) DESC  NULLS LAST, CASE 'Yp,GNh4'  WHEN rt0.c1 THEN rt0.c1 END COLLATE NOCASE DESC, ((rt0.c1 COLLATE NOCASE)>(((vt0.c1)/(rt0.c1))));
SELECT * FROM v0 WHERE (((((v0.c0 IN ())))=((((v0.c0)/(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 IN ())))=((((v0.c0)/(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0 IN ())))=((((v0.c0)/(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 IN ())))=((((v0.c0)/(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0 IN ())))=((((v0.c0)/(v0.c0))))));
SELECT ALL * FROM v0 INNER JOIN rt0 ON ((((rt0.c1)%(rt0.c1))) NOTNULL) WHERE (CASE ((rt0.c0) IS FALSE)  WHEN (rt0.c2 IN (rt0.c2)) THEN rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) IS FALSE)  WHEN (rt0.c2 IN (rt0.c2)) THEN rt0.c2 END) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((((rt0.c1)%(rt0.c1))) NOTNULL));
SELECT ALL * FROM v0 INNER JOIN rt0 ON ((((rt0.c1)%(rt0.c1))) NOTNULL) WHERE (CASE ((rt0.c0) IS FALSE)  WHEN (rt0.c2 IN (rt0.c2)) THEN rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) IS FALSE)  WHEN (rt0.c2 IN (rt0.c2)) THEN rt0.c2 END) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((((rt0.c1)%(rt0.c1))) NOTNULL));
SELECT ALL * FROM v0 INNER JOIN rt0 ON ((((rt0.c1)%(rt0.c1))) NOTNULL) WHERE (CASE ((rt0.c0) IS FALSE)  WHEN (rt0.c2 IN (rt0.c2)) THEN rt0.c2 END);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c1) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) ISNULL) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c1) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) ISNULL) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c1) ISNULL) IN ()));
SELECT ALL * FROM vt0, v0 WHERE ((~ ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((~ ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((~ ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN ((rt0.c2) NOTNULL) THEN (v0.c0 IN ()) ELSE (~ (rt0.c0)) END WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN ((rt0.c2) NOTNULL) THEN (v0.c0 IN ()) ELSE (~ (rt0.c0)) END);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN ((rt0.c2) NOTNULL) THEN (v0.c0 IN ()) ELSE (~ (rt0.c0)) END WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN ((rt0.c2) NOTNULL) THEN (v0.c0 IN ()) ELSE (~ (rt0.c0)) END);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN ((rt0.c2) NOTNULL) THEN (v0.c0 IN ()) ELSE (~ (rt0.c0)) END WHERE (v0.c0);
SELECT * FROM v0, vt0 WHERE ((((vt0.c1)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((vt0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((vt0.c1)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((vt0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((vt0.c1)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((vt0.c0))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (NOT (vt0.c1)) WHERE ((~ (((rt0.c1)-(rt0.c1))))) ORDER BY ((((rt0.c1)IS(vt0.c1)))>=((((rt0.c0))=((vt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1)-(rt0.c1))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (NOT (vt0.c1)) ORDER BY ((((rt0.c1)IS(vt0.c1)))>=((((rt0.c0))=((vt0.c1))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (NOT (vt0.c1)) WHERE ((~ (((rt0.c1)-(rt0.c1))))) ORDER BY ((((rt0.c1)IS(vt0.c1)))>=((((rt0.c0))=((vt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1)-(rt0.c1))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (NOT (vt0.c1)) ORDER BY ((((rt0.c1)IS(vt0.c1)))>=((((rt0.c0))=((vt0.c1))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (NOT (vt0.c1)) WHERE ((~ (((rt0.c1)-(rt0.c1))))) ORDER BY ((((rt0.c1)IS(vt0.c1)))>=((((rt0.c0))=((vt0.c1))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)LIKE(vt0.c1 COLLATE NOCASE))) ORDER BY ((vt0.c0 COLLATE RTRIM) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)LIKE(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM) IS TRUE));
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)LIKE(vt0.c1 COLLATE NOCASE))) ORDER BY ((vt0.c0 COLLATE RTRIM) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)LIKE(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM) IS TRUE));
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)LIKE(vt0.c1 COLLATE NOCASE))) ORDER BY ((vt0.c0 COLLATE RTRIM) IS TRUE);
SELECT ALL * FROM v0, vt0, rt0 WHERE (CASE WHEN x'5065' THEN ((rt0.c2)=(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'5065' THEN ((rt0.c2)=(rt0.c2)) END) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (CASE WHEN x'5065' THEN ((rt0.c2)=(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'5065' THEN ((rt0.c2)=(rt0.c2)) END) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (CASE WHEN x'5065' THEN ((rt0.c2)=(rt0.c2)) END);
SELECT ALL COUNT(*) FROM v0 WHERE ((((UPPER(DISTINCT v0.c0)))<=(((NOT (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((UPPER(DISTINCT v0.c0)))<=(((NOT (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((UPPER(DISTINCT v0.c0)))<=(((NOT (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((UPPER(DISTINCT v0.c0)))<=(((NOT (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((UPPER(DISTINCT v0.c0)))<=(((NOT (v0.c0))))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(((rt0.c0) IS FALSE) AS NUMERIC)) ORDER BY ((((rt0.c0)IS(rt0.c1))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (rt0.c1 COLLATE RTRIM)) ASC  NULLS LAST, ((((((((((rt0.c2) BETWEEN (0X3ed3a19e) AND (vt0.c0)))AND(((vt0.c1)<(rt0.c2)))))OR((((rt0.c1, vt0.c0, rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((vt0.c1, vt0.c0, rt0.c1, rt0.c1, rt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1, x'', rt0.c1))))))OR(((rt0.c1)LIKE(vt0.c0)))))AND(json_insert(rt0.c2, vt0.c0, rt0.c0)));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0)IS(rt0.c1))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (rt0.c1 COLLATE RTRIM)) ASC  NULLS LAST, ((((((((((rt0.c2) BETWEEN (0X3ed3a19e) AND (vt0.c0)))AND(((vt0.c1)<(rt0.c2)))))OR((((rt0.c1, vt0.c0, rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((vt0.c1, vt0.c0, rt0.c1, rt0.c1, rt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1, x'', rt0.c1))))))OR(((rt0.c1)LIKE(vt0.c0)))))AND(json_insert(rt0.c2, vt0.c0, rt0.c0))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(((rt0.c0) IS FALSE) AS NUMERIC)) ORDER BY ((((rt0.c0)IS(rt0.c1))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (rt0.c1 COLLATE RTRIM)) ASC  NULLS LAST, ((((((((((rt0.c2) BETWEEN (0X3ed3a19e) AND (vt0.c0)))AND(((vt0.c1)<(rt0.c2)))))OR((((rt0.c1, vt0.c0, rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((vt0.c1, vt0.c0, rt0.c1, rt0.c1, rt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1, x'', rt0.c1))))))OR(((rt0.c1)LIKE(vt0.c0)))))AND(json_insert(rt0.c2, vt0.c0, rt0.c0)));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0)IS(rt0.c1))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (rt0.c1 COLLATE RTRIM)) ASC  NULLS LAST, ((((((((((rt0.c2) BETWEEN (0X3ed3a19e) AND (vt0.c0)))AND(((vt0.c1)<(rt0.c2)))))OR((((rt0.c1, vt0.c0, rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((vt0.c1, vt0.c0, rt0.c1, rt0.c1, rt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1, x'', rt0.c1))))))OR(((rt0.c1)LIKE(vt0.c0)))))AND(json_insert(rt0.c2, vt0.c0, rt0.c0))));
SELECT * FROM vt0 WHERE (((((((((((((vt0.c1)AND(vt0.c1)))AND(x'')))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c1)AND(vt0.c1)))AND(x'')))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((((vt0.c1)AND(vt0.c1)))AND(x'')))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c1)AND(vt0.c1)))AND(x'')))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((((vt0.c1)AND(vt0.c1)))AND(x'')))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c1 END, ((((vt0.c1)OR(rt0.c0)))AND(vt0.c1)), rt0.c1))<>(((((vt0.c1, rt0.c2, rt0.c0, vt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, NULL, '1578040424', vt0.c1)) AND ((vt0.c0, vt0.c1, '2112247055', rt0.c1, rt0.c2))), rt0.c1 COLLATE BINARY, CASE WHEN vt0.c1 THEN vt0.c1 END)))) ORDER BY ((vt0.c1 COLLATE NOCASE)%((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c1 END, ((((vt0.c1)OR(rt0.c0)))AND(vt0.c1)), rt0.c1))<>(((((vt0.c1, rt0.c2, rt0.c0, vt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, NULL, '1578040424', vt0.c1)) AND ((vt0.c0, vt0.c1, '2112247055', rt0.c1, rt0.c2))), rt0.c1 COLLATE BINARY, CASE WHEN vt0.c1 THEN vt0.c1 END)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c1 COLLATE NOCASE)%((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c1 END, ((((vt0.c1)OR(rt0.c0)))AND(vt0.c1)), rt0.c1))<>(((((vt0.c1, rt0.c2, rt0.c0, vt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, NULL, '1578040424', vt0.c1)) AND ((vt0.c0, vt0.c1, '2112247055', rt0.c1, rt0.c2))), rt0.c1 COLLATE BINARY, CASE WHEN vt0.c1 THEN vt0.c1 END)))) ORDER BY ((vt0.c1 COLLATE NOCASE)%((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c1 END, ((((vt0.c1)OR(rt0.c0)))AND(vt0.c1)), rt0.c1))<>(((((vt0.c1, rt0.c2, rt0.c0, vt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, NULL, '1578040424', vt0.c1)) AND ((vt0.c0, vt0.c1, '2112247055', rt0.c1, rt0.c2))), rt0.c1 COLLATE BINARY, CASE WHEN vt0.c1 THEN vt0.c1 END)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c1 COLLATE NOCASE)%((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c1 END, ((((vt0.c1)OR(rt0.c0)))AND(vt0.c1)), rt0.c1))<>(((((vt0.c1, rt0.c2, rt0.c0, vt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, NULL, '1578040424', vt0.c1)) AND ((vt0.c0, vt0.c1, '2112247055', rt0.c1, rt0.c2))), rt0.c1 COLLATE BINARY, CASE WHEN vt0.c1 THEN vt0.c1 END)))) ORDER BY ((vt0.c1 COLLATE NOCASE)%((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (0.9963681050038483) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.9963681050038483) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (0.9963681050038483) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.9963681050038483) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (0.9963681050038483) ORDER BY vt0.c1  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0) NOTNULL))));
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN (((vt0.c1, v0.c0, vt0.c0)) BETWEEN ((vt0.c1, -1.73230636E8, v0.c0)) AND ((vt0.c0, 'i\rቈM\rd', vt0.c0))) THEN (((vt0.c0, '-68360380', vt0.c1, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1, v0.c0, vt0.c0))) ELSE RTRIM(v0.c0) END) ORDER BY (NOT (((vt0.c1)>(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c1, v0.c0, vt0.c0)) BETWEEN ((vt0.c1, -1.73230636E8, v0.c0)) AND ((vt0.c0, 'i\rቈM\rd', vt0.c0))) THEN (((vt0.c0, '-68360380', vt0.c1, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1, v0.c0, vt0.c0))) ELSE RTRIM(v0.c0) END) IS TRUE)  as count FROM vt0, v0 ORDER BY (NOT (((vt0.c1)>(vt0.c0)))) ASC);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN (((vt0.c1, v0.c0, vt0.c0)) BETWEEN ((vt0.c1, -1.73230636E8, v0.c0)) AND ((vt0.c0, 'i\rቈM\rd', vt0.c0))) THEN (((vt0.c0, '-68360380', vt0.c1, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1, v0.c0, vt0.c0))) ELSE RTRIM(v0.c0) END) ORDER BY (NOT (((vt0.c1)>(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c1, v0.c0, vt0.c0)) BETWEEN ((vt0.c1, -1.73230636E8, v0.c0)) AND ((vt0.c0, 'i\rቈM\rd', vt0.c0))) THEN (((vt0.c0, '-68360380', vt0.c1, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1, v0.c0, vt0.c0))) ELSE RTRIM(v0.c0) END) IS TRUE)  as count FROM vt0, v0 ORDER BY (NOT (((vt0.c1)>(vt0.c0)))) ASC);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN (((vt0.c1, v0.c0, vt0.c0)) BETWEEN ((vt0.c1, -1.73230636E8, v0.c0)) AND ((vt0.c0, 'i\rቈM\rd', vt0.c0))) THEN (((vt0.c0, '-68360380', vt0.c1, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1, v0.c0, vt0.c0))) ELSE RTRIM(v0.c0) END) ORDER BY (NOT (((vt0.c1)>(vt0.c0)))) ASC;
SELECT * FROM v0 WHERE (((v0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0) NOTNULL));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0) BETWEEN (NULL) AND (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0) BETWEEN (NULL) AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0) BETWEEN (NULL) AND (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0) BETWEEN (NULL) AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0) BETWEEN (NULL) AND (v0.c0)) IN ()));
SELECT COUNT(*) FROM rt0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST((((rt0.c0))>((rt0.c2))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0))>((rt0.c2))) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST((((rt0.c0))>((rt0.c2))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0))>((rt0.c2))) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST((((rt0.c0))>((rt0.c2))) AS NUMERIC));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)GLOB(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)GLOB(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)GLOB(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)GLOB(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)GLOB(rt0.c1)) IN ()));
SELECT COUNT(*) FROM v0, vt0 WHERE ((~ (((vt0.c1)IS NOT(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c1)IS NOT(vt0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((~ (((vt0.c1)IS NOT(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c1)IS NOT(vt0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((~ (((vt0.c1)IS NOT(vt0.c1)))));
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c2) BETWEEN (rt0.c0) AND (0.749909701431325))))) ORDER BY ((LIKELIHOOD('[]', 0.30587274584495117))+((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ASC  NULLS LAST, ((((0.6085709712793801))<=((rt0.c1))) IN ()) ASC, ((rt0.c0)+((((rt0.c0))==((rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2) BETWEEN (rt0.c0) AND (0.749909701431325))))) IS TRUE)  as count FROM rt0 ORDER BY ((LIKELIHOOD('[]', 0.30587274584495117))+((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ASC  NULLS LAST, ((((0.6085709712793801))<=((rt0.c1))) IN ()) ASC, ((rt0.c0)+((((rt0.c0))==((rt0.c2))))));
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c2) BETWEEN (rt0.c0) AND (0.749909701431325))))) ORDER BY ((LIKELIHOOD('[]', 0.30587274584495117))+((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ASC  NULLS LAST, ((((0.6085709712793801))<=((rt0.c1))) IN ()) ASC, ((rt0.c0)+((((rt0.c0))==((rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2) BETWEEN (rt0.c0) AND (0.749909701431325))))) IS TRUE)  as count FROM rt0 ORDER BY ((LIKELIHOOD('[]', 0.30587274584495117))+((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ASC  NULLS LAST, ((((0.6085709712793801))<=((rt0.c1))) IN ()) ASC, ((rt0.c0)+((((rt0.c0))==((rt0.c2))))));
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c2) BETWEEN (rt0.c0) AND (0.749909701431325))))) ORDER BY ((LIKELIHOOD('[]', 0.30587274584495117))+((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ASC  NULLS LAST, ((((0.6085709712793801))<=((rt0.c1))) IN ()) ASC, ((rt0.c0)+((((rt0.c0))==((rt0.c2)))));
SELECT * FROM v0, vt0 WHERE (CAST(((((((((v0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)) AS REAL)) ORDER BY ((((vt0.c1)GLOB(vt0.c1))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((v0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)) AS REAL)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c1)GLOB(vt0.c1))) ISNULL)  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (CAST(((((((((v0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)) AS REAL)) ORDER BY ((((vt0.c1)GLOB(vt0.c1))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((v0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)) AS REAL)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c1)GLOB(vt0.c1))) ISNULL)  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (CAST(((((((((v0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)) AS REAL)) ORDER BY ((((vt0.c1)GLOB(vt0.c1))) ISNULL)  NULLS FIRST;
SELECT * FROM vt0, v0, rt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)OR(((('')) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))))))AND(((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2))))) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)OR(((('')) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))))))AND(((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY rt0.c1 DESC  NULLS FIRST);
SELECT * FROM vt0, v0, rt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)OR(((('')) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))))))AND(((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2))))) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)OR(((('')) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))))))AND(((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY rt0.c1 DESC  NULLS FIRST);
SELECT * FROM vt0, v0, rt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)OR(((('')) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))))))AND(((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2))))) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT ALL * FROM rt0, v0, vt0 WHERE (CASE WHEN (~ (rt0.c0)) THEN ((rt0.c0)||(rt0.c1)) END) ORDER BY ((vt0.c0 COLLATE NOCASE)<(963283946 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (rt0.c0)) THEN ((rt0.c0)||(rt0.c1)) END) IS TRUE)  as count FROM rt0, v0 NOT INDEXED, vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)<(963283946 COLLATE BINARY)) DESC);
SELECT ALL * FROM rt0, v0, vt0 WHERE (CASE WHEN (~ (rt0.c0)) THEN ((rt0.c0)||(rt0.c1)) END) ORDER BY ((vt0.c0 COLLATE NOCASE)<(963283946 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (rt0.c0)) THEN ((rt0.c0)||(rt0.c1)) END) IS TRUE)  as count FROM rt0, v0 NOT INDEXED, vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)<(963283946 COLLATE BINARY)) DESC);
SELECT ALL * FROM rt0, v0, vt0 WHERE (CASE WHEN (~ (rt0.c0)) THEN ((rt0.c0)||(rt0.c1)) END) ORDER BY ((vt0.c0 COLLATE NOCASE)<(963283946 COLLATE BINARY)) DESC;
SELECT * FROM v0 WHERE (((((v0.c0)/(v0.c0)))>=((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)/(v0.c0)))>=((NULL IN ())))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)/(v0.c0)))>=((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)/(v0.c0)))>=((NULL IN ())))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)/(v0.c0)))>=((NULL IN ()))));
SELECT COUNT(*) FROM v0, rt0 NATURAL JOIN vt0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM v0, rt0 NATURAL JOIN vt0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM v0, rt0 NATURAL JOIN vt0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((0.22314730289774953)) BETWEEN ((((v0.c0)==(vt0.c1)))) AND ((rt0.c1))) INNER JOIN v0 ON NULLIF(DISTINCT ((rt0.c2)<<(rt0.c2)), ((v0.c0)/(rt0.c1))) WHERE ((- (((((((((v0.c0)AND(x'3ef70603')))OR(vt0.c0)))AND(vt0.c1)))OR(rt0.c0))))) ORDER BY CAST(((rt0.c2)LIKE(rt0.c2)) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((v0.c0)AND(x'3ef70603')))OR(vt0.c0)))AND(vt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((0.22314730289774953)) BETWEEN ((((v0.c0)=(vt0.c1)))) AND ((rt0.c1))) INNER JOIN v0 ON NULLIF(DISTINCT ((rt0.c2)<<(rt0.c2)), ((v0.c0)/(rt0.c1))) ORDER BY CAST(((rt0.c2)LIKE(rt0.c2)) AS NUMERIC) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((0.22314730289774953)) BETWEEN ((((v0.c0)==(vt0.c1)))) AND ((rt0.c1))) INNER JOIN v0 ON NULLIF(DISTINCT ((rt0.c2)<<(rt0.c2)), ((v0.c0)/(rt0.c1))) WHERE ((- (((((((((v0.c0)AND(x'3ef70603')))OR(vt0.c0)))AND(vt0.c1)))OR(rt0.c0))))) ORDER BY CAST(((rt0.c2)LIKE(rt0.c2)) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((v0.c0)AND(x'3ef70603')))OR(vt0.c0)))AND(vt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((0.22314730289774953)) BETWEEN ((((v0.c0)=(vt0.c1)))) AND ((rt0.c1))) INNER JOIN v0 ON NULLIF(DISTINCT ((rt0.c2)<<(rt0.c2)), ((v0.c0)/(rt0.c1))) ORDER BY CAST(((rt0.c2)LIKE(rt0.c2)) AS NUMERIC) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((- (v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((- (v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((- (v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((- (v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((- (v0.c0))) IS TRUE));
SELECT * FROM vt0, rt0 WHERE ((- (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((- (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((- (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON ((rt0.c0)GLOB(x'36e9')) COLLATE RTRIM CROSS JOIN rt0 ON CAST((vt0.c1 IN ()) AS REAL) WHERE (rt0.c0) ORDER BY (~ (x'5a9a' COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((rt0.c0)GLOB(x'36e9')) COLLATE RTRIM CROSS JOIN rt0 ON CAST((vt0.c1 IN ()) AS REAL) ORDER BY (~ (x'5a9a' COLLATE BINARY)) DESC  NULLS LAST);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON ((rt0.c0)GLOB(x'36e9')) COLLATE RTRIM CROSS JOIN rt0 ON CAST((vt0.c1 IN ()) AS REAL) WHERE (rt0.c0) ORDER BY (~ (x'5a9a' COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((rt0.c0)GLOB(x'36e9')) COLLATE RTRIM CROSS JOIN rt0 ON CAST((vt0.c1 IN ()) AS REAL) ORDER BY (~ (x'5a9a' COLLATE BINARY)) DESC  NULLS LAST);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON ((rt0.c0)GLOB(x'36e9')) COLLATE RTRIM CROSS JOIN rt0 ON CAST((vt0.c1 IN ()) AS REAL) WHERE (rt0.c0) ORDER BY (~ (x'5a9a' COLLATE BINARY)) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE ((NOT ('')) COLLATE BINARY) ORDER BY ((((rt0.c1) NOTNULL))*(((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ('')) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c1) NOTNULL))*(((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((NOT ('')) COLLATE BINARY) ORDER BY ((((rt0.c1) NOTNULL))*(((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ('')) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c1) NOTNULL))*(((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((NOT ('')) COLLATE BINARY) ORDER BY ((((rt0.c1) NOTNULL))*(((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 AS INTEGER) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0)<=(v0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)<=(v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0)<=(v0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)<=(v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0)<=(v0.c0)) AS BLOB));
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((((v0.c0) BETWEEN (v0.c0) AND (NULL)))))) ORDER BY ((v0.c0) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((((v0.c0) BETWEEN (v0.c0) AND (NULL)))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) IS TRUE) DESC);
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((((v0.c0) BETWEEN (v0.c0) AND (NULL)))))) ORDER BY ((v0.c0) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((((v0.c0) BETWEEN (v0.c0) AND (NULL)))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) IS TRUE) DESC);
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((((v0.c0) BETWEEN (v0.c0) AND (NULL)))))) ORDER BY ((v0.c0) IS TRUE) DESC;
SELECT ALL * FROM rt0, vt0 WHERE ('特r');
SELECT SUM(count) FROM (SELECT ALL (('特r') IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ('特r');
SELECT SUM(count) FROM (SELECT ALL (('特r') IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ('特r');
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((vt0.c0)IS NOT(vt0.c0)))AND(v0.c0)))OR(((v0.c0)GLOB(vt0.c1))))) ORDER BY CAST(CAST(v0.c0 AS REAL) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)IS NOT(vt0.c0)))AND(v0.c0)))OR(((v0.c0)GLOB(vt0.c1))))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(CAST(v0.c0 AS REAL) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((vt0.c0)IS NOT(vt0.c0)))AND(v0.c0)))OR(((v0.c0)GLOB(vt0.c1))))) ORDER BY CAST(CAST(v0.c0 AS REAL) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)IS NOT(vt0.c0)))AND(v0.c0)))OR(((v0.c0)GLOB(vt0.c1))))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(CAST(v0.c0 AS REAL) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((vt0.c0)IS NOT(vt0.c0)))AND(v0.c0)))OR(((v0.c0)GLOB(vt0.c1))))) ORDER BY CAST(CAST(v0.c0 AS REAL) AS NUMERIC)  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY ((~ (vt0.c0)) IN (1578040424));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((~ (vt0.c0)) IN (1578040424)));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY ((~ (vt0.c0)) IN (1578040424));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((~ (vt0.c0)) IN (1578040424)));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY ((~ (vt0.c0)) IN (1578040424));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL), HEX(DISTINCT '特r'), CAST(vt0.c0 AS INTEGER))) AND ((((vt0.c1)>=(vt0.c1)), ((vt0.c0)-(vt0.c0)), ((NULL)*(vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL), HEX(DISTINCT '特r'), CAST(vt0.c0 AS INTEGER))) AND ((((vt0.c1)>=(vt0.c1)), ((vt0.c0)-(vt0.c0)), ((NULL)*(vt0.c1))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL), HEX(DISTINCT '特r'), CAST(vt0.c0 AS INTEGER))) AND ((((vt0.c1)>=(vt0.c1)), ((vt0.c0)-(vt0.c0)), ((NULL)*(vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL), HEX(DISTINCT '特r'), CAST(vt0.c0 AS INTEGER))) AND ((((vt0.c1)>=(vt0.c1)), ((vt0.c0)-(vt0.c0)), ((NULL)*(vt0.c1))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL), HEX(DISTINCT '特r'), CAST(vt0.c0 AS INTEGER))) AND ((((vt0.c1)>=(vt0.c1)), ((vt0.c0)-(vt0.c0)), ((NULL)*(vt0.c1))))) ASC;
SELECT * FROM rt0, v0 WHERE (((NULLIF(rt0.c1, rt0.c1))%(((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(rt0.c1, rt0.c1))%(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((NULLIF(rt0.c1, rt0.c1))%(((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(rt0.c1, rt0.c1))%(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((NULLIF(rt0.c1, rt0.c1))%(((v0.c0) NOT NULL))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(((rt0.c1)IS NOT(rt0.c0)) AS INTEGER) WHERE ((((((vt0.c0, vt0.c0, vt0.c1))!=((x'5bb8', rt0.c1, rt0.c0))))GLOB(((rt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c1))<>((x'5bb8', rt0.c1, rt0.c0))))GLOB(((rt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(((rt0.c1)IS NOT(rt0.c0)) AS INTEGER));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(((rt0.c1)IS NOT(rt0.c0)) AS INTEGER) WHERE ((((((vt0.c0, vt0.c0, vt0.c1))!=((x'5bb8', rt0.c1, rt0.c0))))GLOB(((rt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c1))<>((x'5bb8', rt0.c1, rt0.c0))))GLOB(((rt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(((rt0.c1)IS NOT(rt0.c0)) AS INTEGER));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(((rt0.c1)IS NOT(rt0.c0)) AS INTEGER) WHERE ((((((vt0.c0, vt0.c0, vt0.c1))!=((x'5bb8', rt0.c1, rt0.c0))))GLOB(((rt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON TRIM(CAST(v0.c0 AS NUMERIC)) WHERE (rt0.c0) ORDER BY NULLIF((- (rt0.c2)), (rt0.c2 IN (rt0.c2)));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON TRIM(CAST(v0.c0 AS NUMERIC)) ORDER BY NULLIF((- (rt0.c2)), (rt0.c2 IN (rt0.c2))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON TRIM(CAST(v0.c0 AS NUMERIC)) WHERE (rt0.c0) ORDER BY NULLIF((- (rt0.c2)), (rt0.c2 IN (rt0.c2)));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON TRIM(CAST(v0.c0 AS NUMERIC)) ORDER BY NULLIF((- (rt0.c2)), (rt0.c2 IN (rt0.c2))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON TRIM(CAST(v0.c0 AS NUMERIC)) WHERE (rt0.c0) ORDER BY NULLIF((- (rt0.c2)), (rt0.c2 IN (rt0.c2)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1 IN ()))OR(json_array_length(rt0.c2, rt0.c2))))AND(CASE WHEN rt0.c2 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1 IN ()))OR(json_array_length(rt0.c2, rt0.c2))))AND(CASE WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1 IN ()))OR(json_array_length(rt0.c2, rt0.c2))))AND(CASE WHEN rt0.c2 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1 IN ()))OR(json_array_length(rt0.c2, rt0.c2))))AND(CASE WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)<=('#T')))<(((v0.c0)>>('-283254287')))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<=('#T')))<(((v0.c0)>>('-283254287'))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)<=('#T')))<(((v0.c0)>>('-283254287')))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<=('#T')))<(((v0.c0)>>('-283254287'))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)<=('#T')))<(((v0.c0)>>('-283254287')))));
SELECT ALL * FROM vt0, v0 WHERE (NULL) ORDER BY (CAST(vt0.c1 AS TEXT) IN ()) ASC, CASE WHEN ((vt0.c0) NOT NULL) THEN CASE WHEN v0.c0 THEN v0.c0 END WHEN CASE vt0.c1  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c1 END THEN LIKELY(v0.c0) WHEN ((((v0.c0)AND(vt0.c1)))AND(vt0.c1)) THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0 ORDER BY (CAST(vt0.c1 AS TEXT) IN ()) ASC, CASE WHEN ((vt0.c0) NOT NULL) THEN CASE WHEN v0.c0 THEN v0.c0 END WHEN CASE vt0.c1  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c1 END THEN LIKELY(v0.c0) WHEN ((((v0.c0)AND(vt0.c1)))AND(vt0.c1)) THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (NULL) ORDER BY (CAST(vt0.c1 AS TEXT) IN ()) ASC, CASE WHEN ((vt0.c0) NOT NULL) THEN CASE WHEN v0.c0 THEN v0.c0 END WHEN CASE vt0.c1  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c1 END THEN LIKELY(v0.c0) WHEN ((((v0.c0)AND(vt0.c1)))AND(vt0.c1)) THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0 ORDER BY (CAST(vt0.c1 AS TEXT) IN ()) ASC, CASE WHEN ((vt0.c0) NOT NULL) THEN CASE WHEN v0.c0 THEN v0.c0 END WHEN CASE vt0.c1  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c1 END THEN LIKELY(v0.c0) WHEN ((((v0.c0)AND(vt0.c1)))AND(vt0.c1)) THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (NULL) ORDER BY (CAST(vt0.c1 AS TEXT) IN ()) ASC, CASE WHEN ((vt0.c0) NOT NULL) THEN CASE WHEN v0.c0 THEN v0.c0 END WHEN CASE vt0.c1  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c1 END THEN LIKELY(v0.c0) WHEN ((((v0.c0)AND(vt0.c1)))AND(vt0.c1)) THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))AND(((rt0.c2) NOT BETWEEN (vt0.c1) AND (rt0.c2)))))AND(0X44660026 COLLATE BINARY))) ORDER BY (((NOT (rt0.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))AND(((rt0.c2) NOT BETWEEN (vt0.c1) AND (rt0.c2)))))AND(0x44660026 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((NOT (rt0.c0))) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))AND(((rt0.c2) NOT BETWEEN (vt0.c1) AND (rt0.c2)))))AND(0X44660026 COLLATE BINARY))) ORDER BY (((NOT (rt0.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))AND(((rt0.c2) NOT BETWEEN (vt0.c1) AND (rt0.c2)))))AND(0x44660026 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((NOT (rt0.c0))) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))AND(((rt0.c2) NOT BETWEEN (vt0.c1) AND (rt0.c2)))))AND(0X44660026 COLLATE BINARY))) ORDER BY (((NOT (rt0.c0))) ISNULL)  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY json_array(v0.c0, CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, STRFTIME(v0.c0, x'', v0.c0, v0.c0, 0X56199962), v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY json_array(v0.c0, CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, STRFTIME(v0.c0, x'', v0.c0, v0.c0, 0x56199962), v0.c0));
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY json_array(v0.c0, CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, STRFTIME(v0.c0, x'', v0.c0, v0.c0, 0X56199962), v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY json_array(v0.c0, CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, STRFTIME(v0.c0, x'', v0.c0, v0.c0, 0x56199962), v0.c0));
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY json_array(v0.c0, CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, STRFTIME(v0.c0, x'', v0.c0, v0.c0, 0X56199962), v0.c0);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON (- ((((rt0.c0))==((v0.c0))))) INNER JOIN vt0 ON TRIM((((vt0.c1, 0.7067802342645115, vt0.c1))>((rt0.c0, rt0.c0, rt0.c2)))) WHERE (CAST(LIKE(rt0.c1, rt0.c2, '<') AS INTEGER)) ORDER BY (NOT (((vt0.c1) NOT NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(LIKE(rt0.c1, rt0.c2, '<') AS INTEGER)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (- ((((rt0.c0))=((v0.c0))))) INNER JOIN vt0 ON TRIM((((vt0.c1, 0.7067802342645115, vt0.c1))>((rt0.c0, rt0.c0, rt0.c2)))) ORDER BY (NOT (((vt0.c1) NOT NULL))) DESC  NULLS FIRST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON (- ((((rt0.c0))==((v0.c0))))) INNER JOIN vt0 ON TRIM((((vt0.c1, 0.7067802342645115, vt0.c1))>((rt0.c0, rt0.c0, rt0.c2)))) WHERE (CAST(LIKE(rt0.c1, rt0.c2, '<') AS INTEGER)) ORDER BY (NOT (((vt0.c1) NOT NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(LIKE(rt0.c1, rt0.c2, '<') AS INTEGER)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (- ((((rt0.c0))=((v0.c0))))) INNER JOIN vt0 ON TRIM((((vt0.c1, 0.7067802342645115, vt0.c1))>((rt0.c0, rt0.c0, rt0.c2)))) ORDER BY (NOT (((vt0.c1) NOT NULL))) DESC  NULLS FIRST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON (- ((((rt0.c0))==((v0.c0))))) INNER JOIN vt0 ON TRIM((((vt0.c1, 0.7067802342645115, vt0.c1))>((rt0.c0, rt0.c0, rt0.c2)))) WHERE (CAST(LIKE(rt0.c1, rt0.c2, '<') AS INTEGER)) ORDER BY (NOT (((vt0.c1) NOT NULL))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, rt0 WHERE ('0.23678130201718273') ORDER BY (((((((((((((((rt0.c2, v0.c0, rt0.c1)) BETWEEN ((rt0.c0, v0.c0, rt0.c0)) AND ((rt0.c0, rt0.c1, v0.c0))))AND(CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN x'5a01' END)))OR(rt0.c1)))AND(((rt0.c1)==(v0.c0)))))OR(CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN x'' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)))OR(IFNULL(DISTINCT v0.c0, rt0.c2))))OR(((((((((rt0.c2)AND(v0.c0)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('0.23678130201718273') IS TRUE)  as count FROM v0, rt0 ORDER BY (((((((((((((((rt0.c2, v0.c0, rt0.c1)) BETWEEN ((rt0.c0, v0.c0, rt0.c0)) AND ((rt0.c0, rt0.c1, v0.c0))))AND(CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN x'5a01' END)))OR(rt0.c1)))AND(((rt0.c1)=(v0.c0)))))OR(CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN x'' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)))OR(IFNULL(DISTINCT v0.c0, rt0.c2))))OR(((((((((rt0.c2)AND(v0.c0)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, rt0 WHERE ('0.23678130201718273') ORDER BY (((((((((((((((rt0.c2, v0.c0, rt0.c1)) BETWEEN ((rt0.c0, v0.c0, rt0.c0)) AND ((rt0.c0, rt0.c1, v0.c0))))AND(CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN x'5a01' END)))OR(rt0.c1)))AND(((rt0.c1)==(v0.c0)))))OR(CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN x'' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)))OR(IFNULL(DISTINCT v0.c0, rt0.c2))))OR(((((((((rt0.c2)AND(v0.c0)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('0.23678130201718273') IS TRUE)  as count FROM v0, rt0 ORDER BY (((((((((((((((rt0.c2, v0.c0, rt0.c1)) BETWEEN ((rt0.c0, v0.c0, rt0.c0)) AND ((rt0.c0, rt0.c1, v0.c0))))AND(CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN x'5a01' END)))OR(rt0.c1)))AND(((rt0.c1)=(v0.c0)))))OR(CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN x'' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)))OR(IFNULL(DISTINCT v0.c0, rt0.c2))))OR(((((((((rt0.c2)AND(v0.c0)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, rt0 WHERE ('0.23678130201718273') ORDER BY (((((((((((((((rt0.c2, v0.c0, rt0.c1)) BETWEEN ((rt0.c0, v0.c0, rt0.c0)) AND ((rt0.c0, rt0.c1, v0.c0))))AND(CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN x'5a01' END)))OR(rt0.c1)))AND(((rt0.c1)==(v0.c0)))))OR(CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN x'' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)))OR(IFNULL(DISTINCT v0.c0, rt0.c2))))OR(((((((((rt0.c2)AND(v0.c0)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt0, v0 WHERE ((~ ((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, NULL, vt0.c0)) AND ((vt0.c1, v0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, NULL, vt0.c0)) AND ((vt0.c1, v0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((~ ((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, NULL, vt0.c0)) AND ((vt0.c1, v0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, NULL, vt0.c0)) AND ((vt0.c1, v0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((~ ((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, NULL, vt0.c0)) AND ((vt0.c1, v0.c0, vt0.c0))))));
SELECT * FROM v0, rt0, vt0 WHERE (((TRIM(rt0.c0, rt0.c2)) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((TRIM(rt0.c0, rt0.c2)) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (((TRIM(rt0.c0, rt0.c2)) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((TRIM(rt0.c0, rt0.c2)) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (((TRIM(rt0.c0, rt0.c2)) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (rt0.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c2) ISNULL)))<=((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) ISNULL)))<=((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c2) ISNULL)))<=((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) ISNULL)))<=((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c2) ISNULL)))<=((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END))));
SELECT COUNT(*) FROM v0 WHERE (UPPER(DISTINCT CASE 0xffffffffa9f4c9bc  WHEN v0.c0 THEN v0.c0 END)) ORDER BY (((v0.c0 IN ()))LIKE('1128475934')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CASE 0xffffffffa9f4c9bc  WHEN v0.c0 THEN v0.c0 END)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ()))LIKE('1128475934')) DESC);
SELECT COUNT(*) FROM v0 WHERE (UPPER(DISTINCT CASE 0xffffffffa9f4c9bc  WHEN v0.c0 THEN v0.c0 END)) ORDER BY (((v0.c0 IN ()))LIKE('1128475934')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CASE 0xffffffffa9f4c9bc  WHEN v0.c0 THEN v0.c0 END)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ()))LIKE('1128475934')) DESC);
SELECT COUNT(*) FROM v0 WHERE (UPPER(DISTINCT CASE 0xffffffffa9f4c9bc  WHEN v0.c0 THEN v0.c0 END)) ORDER BY (((v0.c0 IN ()))LIKE('1128475934')) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NOT (((rt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NOT (((rt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NOT (((rt0.c0) NOT NULL))));
SELECT * FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT * FROM v0, rt0, vt0 WHERE (rt0.c0 COLLATE BINARY) ORDER BY ((((v0.c0) ISNULL)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE BINARY) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((v0.c0) ISNULL)) IS FALSE) DESC);
SELECT * FROM v0, rt0, vt0 WHERE (rt0.c0 COLLATE BINARY) ORDER BY ((((v0.c0) ISNULL)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE BINARY) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((v0.c0) ISNULL)) IS FALSE) DESC);
SELECT * FROM v0, rt0, vt0 WHERE (rt0.c0 COLLATE BINARY) ORDER BY ((((v0.c0) ISNULL)) IS FALSE) DESC;
SELECT * FROM vt0, v0 WHERE (((((v0.c0)AND(v0.c0)))AND(vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((v0.c0)AND(v0.c0)))AND(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((v0.c0)AND(v0.c0)))AND(vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((v0.c0)AND(v0.c0)))AND(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((v0.c0)AND(v0.c0)))AND(vt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 WHERE (((((- (v0.c0))))<((((v0.c0)&(v0.c0)))))) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((- (v0.c0))))<((((v0.c0)&(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY x'' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((- (v0.c0))))<((((v0.c0)&(v0.c0)))))) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((- (v0.c0))))<((((v0.c0)&(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY x'' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((- (v0.c0))))<((((v0.c0)&(v0.c0)))))) ORDER BY x'' ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((((rt0.c0)IS NOT(v0.c0)))*(((((vt0.c1)AND(v0.c0)))AND(rt0.c1))))) ORDER BY '40426942' ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)IS NOT(v0.c0)))*(((((vt0.c1)AND(v0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY '40426942' ASC);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((((rt0.c0)IS NOT(v0.c0)))*(((((vt0.c1)AND(v0.c0)))AND(rt0.c1))))) ORDER BY '40426942' ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)IS NOT(v0.c0)))*(((((vt0.c1)AND(v0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY '40426942' ASC);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((((rt0.c0)IS NOT(v0.c0)))*(((((vt0.c1)AND(v0.c0)))AND(rt0.c1))))) ORDER BY '40426942' ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1) NOT BETWEEN (NULL) AND (0.6693820185468762)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (NULL) AND (0.6693820185468762)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1) NOT BETWEEN (NULL) AND (0.6693820185468762)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (NULL) AND (0.6693820185468762)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1) NOT BETWEEN (NULL) AND (0.6693820185468762)) COLLATE BINARY);
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((TRIM(v0.c0)) NOT BETWEEN (LTRIM(x'')) AND (((rt0.c0)IS NOT(rt0.c2)))) WHERE ((((v0.c0)OR(v0.c0)) IN ())) ORDER BY ((('-1878549284')<=(v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((((v0.c0)OR(v0.c0)) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((TRIM(v0.c0)) NOT BETWEEN (LTRIM(x'')) AND (((rt0.c0)IS NOT(rt0.c2)))) ORDER BY ((('-1878549284')<=(v0.c0)) IN ()));
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((TRIM(v0.c0)) NOT BETWEEN (LTRIM(x'')) AND (((rt0.c0)IS NOT(rt0.c2)))) WHERE ((((v0.c0)OR(v0.c0)) IN ())) ORDER BY ((('-1878549284')<=(v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((((v0.c0)OR(v0.c0)) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((TRIM(v0.c0)) NOT BETWEEN (LTRIM(x'')) AND (((rt0.c0)IS NOT(rt0.c2)))) ORDER BY ((('-1878549284')<=(v0.c0)) IN ()));
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((TRIM(v0.c0)) NOT BETWEEN (LTRIM(x'')) AND (((rt0.c0)IS NOT(rt0.c2)))) WHERE ((((v0.c0)OR(v0.c0)) IN ())) ORDER BY ((('-1878549284')<=(v0.c0)) IN ());
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((- (vt0.c0)))||(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))||(vt0.c1))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((- (vt0.c0)))||(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))||(vt0.c1))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((- (vt0.c0)))||(vt0.c1)));
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(CASE WHEN v0.c0 THEN vt0.c0 END AS TEXT)) ORDER BY (- (CASE WHEN vt0.c1 THEN vt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN v0.c0 THEN vt0.c0 END AS TEXT)) IS TRUE)  as count FROM v0, vt0 ORDER BY (- (CASE WHEN vt0.c1 THEN vt0.c0 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(CASE WHEN v0.c0 THEN vt0.c0 END AS TEXT)) ORDER BY (- (CASE WHEN vt0.c1 THEN vt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN v0.c0 THEN vt0.c0 END AS TEXT)) IS TRUE)  as count FROM v0, vt0 ORDER BY (- (CASE WHEN vt0.c1 THEN vt0.c0 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(CASE WHEN v0.c0 THEN vt0.c0 END AS TEXT)) ORDER BY (- (CASE WHEN vt0.c1 THEN vt0.c0 END)) DESC  NULLS FIRST;
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((((((NULL)OR(vt0.c0)))OR('355527020'))) BETWEEN (CAST(vt0.c1 AS TEXT)) AND ((rt0.c2 IN (v0.c0)))) RIGHT OUTER JOIN vt0 ON json_quote(rt0.c2) COLLATE NOCASE WHERE (CAST(NULL AS NUMERIC) COLLATE NOCASE COLLATE BINARY) ORDER BY (((((rt0.c0))<((rt0.c2)))) BETWEEN ((~ (rt0.c0))) AND (((rt0.c1) IS TRUE))), ((((((((((rt0.c2)OR(vt0.c1)))OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c2))) IS TRUE)  NULLS LAST, CAST(((vt0.c0)IS NOT(vt0.c0)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((((((NULL)OR(vt0.c0)))OR('355527020'))) BETWEEN (CAST(vt0.c1 AS TEXT)) AND ((rt0.c2 IN (v0.c0)))) RIGHT OUTER JOIN vt0 ON json_quote(rt0.c2) COLLATE NOCASE ORDER BY (((((rt0.c0))<((rt0.c2)))) BETWEEN ((~ (rt0.c0))) AND (((rt0.c1) IS TRUE))), ((((((((((rt0.c2)OR(vt0.c1)))OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c2))) IS TRUE)  NULLS LAST, CAST(((vt0.c0)IS NOT(vt0.c0)) AS BLOB) DESC);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((((((NULL)OR(vt0.c0)))OR('355527020'))) BETWEEN (CAST(vt0.c1 AS TEXT)) AND ((rt0.c2 IN (v0.c0)))) RIGHT OUTER JOIN vt0 ON json_quote(rt0.c2) COLLATE NOCASE WHERE (CAST(NULL AS NUMERIC) COLLATE NOCASE COLLATE BINARY) ORDER BY (((((rt0.c0))<((rt0.c2)))) BETWEEN ((~ (rt0.c0))) AND (((rt0.c1) IS TRUE))), ((((((((((rt0.c2)OR(vt0.c1)))OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c2))) IS TRUE)  NULLS LAST, CAST(((vt0.c0)IS NOT(vt0.c0)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((((((NULL)OR(vt0.c0)))OR('355527020'))) BETWEEN (CAST(vt0.c1 AS TEXT)) AND ((rt0.c2 IN (v0.c0)))) RIGHT OUTER JOIN vt0 ON json_quote(rt0.c2) COLLATE NOCASE ORDER BY (((((rt0.c0))<((rt0.c2)))) BETWEEN ((~ (rt0.c0))) AND (((rt0.c1) IS TRUE))), ((((((((((rt0.c2)OR(vt0.c1)))OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c2))) IS TRUE)  NULLS LAST, CAST(((vt0.c0)IS NOT(vt0.c0)) AS BLOB) DESC);
SELECT ALL * FROM rt0, v0, vt0 WHERE ((((((vt0.c0)AND(v0.c0)))AND(vt0.c1)) IN (rt0.c0, HEX(v0.c0)))) ORDER BY ((((rt0.c0)/(rt0.c1)))|((rt0.c2 IN ())))  NULLS FIRST, (((((v0.c0))<=(('1258003120')))) ISNULL) ASC  NULLS FIRST, ((((v0.c0) NOT NULL))LIKE(((rt0.c2) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)AND(v0.c0)))AND(vt0.c1)) IN (rt0.c0, HEX(v0.c0)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((((rt0.c0)/(rt0.c1)))|((rt0.c2 IN ())))  NULLS FIRST, (((((v0.c0))<=(('1258003120')))) ISNULL) ASC  NULLS FIRST, ((((v0.c0) NOT NULL))LIKE(((rt0.c2) ISNULL))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, v0, vt0 WHERE ((((((vt0.c0)AND(v0.c0)))AND(vt0.c1)) IN (rt0.c0, HEX(v0.c0)))) ORDER BY ((((rt0.c0)/(rt0.c1)))|((rt0.c2 IN ())))  NULLS FIRST, (((((v0.c0))<=(('1258003120')))) ISNULL) ASC  NULLS FIRST, ((((v0.c0) NOT NULL))LIKE(((rt0.c2) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)AND(v0.c0)))AND(vt0.c1)) IN (rt0.c0, HEX(v0.c0)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((((rt0.c0)/(rt0.c1)))|((rt0.c2 IN ())))  NULLS FIRST, (((((v0.c0))<=(('1258003120')))) ISNULL) ASC  NULLS FIRST, ((((v0.c0) NOT NULL))LIKE(((rt0.c2) ISNULL))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, v0, vt0 WHERE ((((((vt0.c0)AND(v0.c0)))AND(vt0.c1)) IN (rt0.c0, HEX(v0.c0)))) ORDER BY ((((rt0.c0)/(rt0.c1)))|((rt0.c2 IN ())))  NULLS FIRST, (((((v0.c0))<=(('1258003120')))) ISNULL) ASC  NULLS FIRST, ((((v0.c0) NOT NULL))LIKE(((rt0.c2) ISNULL))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON (CASE WHEN rt0.c2 THEN v0.c0 END IN ()) WHERE ('953444544');
SELECT SUM(count) FROM (SELECT ALL (('953444544') IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (CASE WHEN rt0.c2 THEN v0.c0 END IN ()));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON (CASE WHEN rt0.c2 THEN v0.c0 END IN ()) WHERE ('953444544');
SELECT SUM(count) FROM (SELECT ALL (('953444544') IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (CASE WHEN rt0.c2 THEN v0.c0 END IN ()));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON (CASE WHEN rt0.c2 THEN v0.c0 END IN ()) WHERE ('953444544');
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON UNLIKELY(DISTINCT CAST(vt0.c1 AS NUMERIC)) WHERE ((((((((v0.c0, v0.c0, v0.c0))==((v0.c0, NULL, vt0.c1))))OR(((((vt0.c1)AND(v0.c0)))OR(vt0.c0)))))OR(((v0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((v0.c0, v0.c0, v0.c0))=((v0.c0, NULL, vt0.c1))))OR(((((vt0.c1)AND(v0.c0)))OR(vt0.c0)))))OR(((v0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON UNLIKELY(DISTINCT CAST(vt0.c1 AS NUMERIC)));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON UNLIKELY(DISTINCT CAST(vt0.c1 AS NUMERIC)) WHERE ((((((((v0.c0, v0.c0, v0.c0))==((v0.c0, NULL, vt0.c1))))OR(((((vt0.c1)AND(v0.c0)))OR(vt0.c0)))))OR(((v0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((v0.c0, v0.c0, v0.c0))=((v0.c0, NULL, vt0.c1))))OR(((((vt0.c1)AND(v0.c0)))OR(vt0.c0)))))OR(((v0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON UNLIKELY(DISTINCT CAST(vt0.c1 AS NUMERIC)));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON UNLIKELY(DISTINCT CAST(vt0.c1 AS NUMERIC)) WHERE ((((((((v0.c0, v0.c0, v0.c0))==((v0.c0, NULL, vt0.c1))))OR(((((vt0.c1)AND(v0.c0)))OR(vt0.c0)))))OR(((v0.c0)<=(vt0.c0)))));
SELECT * FROM vt0, rt0, v0 WHERE ('1258003120') ORDER BY (((((((((NOT (rt0.c2)))OR(x'')))AND((vt0.c0 IN ()))))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)))))OR('')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1258003120') IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((((((((NOT (rt0.c2)))OR(x'')))AND((vt0.c0 IN ()))))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)))))OR('')) ASC  NULLS LAST);
SELECT * FROM vt0, rt0, v0 WHERE ('1258003120') ORDER BY (((((((((NOT (rt0.c2)))OR(x'')))AND((vt0.c0 IN ()))))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)))))OR('')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1258003120') IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((((((((NOT (rt0.c2)))OR(x'')))AND((vt0.c0 IN ()))))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)))))OR('')) ASC  NULLS LAST);
SELECT * FROM vt0, rt0, v0 WHERE ('1258003120') ORDER BY (((((((((NOT (rt0.c2)))OR(x'')))AND((vt0.c0 IN ()))))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)))))OR('')) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ())) ORDER BY CAST(vt0.c0 COLLATE BINARY AS REAL)  NULLS LAST, ('}/Oz8⍱' IN ());
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE BINARY AS REAL)  NULLS LAST, ('}/Oz8⍱' IN ()));
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ())) ORDER BY CAST(vt0.c0 COLLATE BINARY AS REAL)  NULLS LAST, ('}/Oz8⍱' IN ());
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE BINARY AS REAL)  NULLS LAST, ('}/Oz8⍱' IN ()));
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ())) ORDER BY CAST(vt0.c0 COLLATE BINARY AS REAL)  NULLS LAST, ('}/Oz8⍱' IN ());
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((+ (CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((+ (CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((+ (CAST(rt0.c2 AS TEXT))));
SELECT * FROM v0, vt0 WHERE ((((((((((((('1638230667')OR(' i')))AND(vt0.c0)))AND(0.49965532459877793)))OR('1463063694')))OR(((v0.c0) IS FALSE))))AND((~ (vt0.c0))))) ORDER BY ((((vt0.c0)-(vt0.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((((((((((('1638230667')OR(' i')))AND(vt0.c0)))AND(0.49965532459877793)))OR('1463063694')))OR(((v0.c0) IS FALSE))))AND((~ (vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0)-(vt0.c1))) NOT NULL));
SELECT * FROM v0, vt0 WHERE ((((((((((((('1638230667')OR(' i')))AND(vt0.c0)))AND(0.49965532459877793)))OR('1463063694')))OR(((v0.c0) IS FALSE))))AND((~ (vt0.c0))))) ORDER BY ((((vt0.c0)-(vt0.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((((((((((('1638230667')OR(' i')))AND(vt0.c0)))AND(0.49965532459877793)))OR('1463063694')))OR(((v0.c0) IS FALSE))))AND((~ (vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0)-(vt0.c1))) NOT NULL));
SELECT * FROM v0, vt0 WHERE ((((((((((((('1638230667')OR(' i')))AND(vt0.c0)))AND(0.49965532459877793)))OR('1463063694')))OR(((v0.c0) IS FALSE))))AND((~ (vt0.c0))))) ORDER BY ((((vt0.c0)-(vt0.c1))) NOT NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL))<<(0x6d4eaeaa))) ORDER BY ((((vt0.c0)+(vt0.c1)))>=((((vt0.c0))>=((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL))<<(0x6d4eaeaa))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)+(vt0.c1)))>=((((vt0.c0))>=((vt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL))<<(0x6d4eaeaa))) ORDER BY ((((vt0.c0)+(vt0.c1)))>=((((vt0.c0))>=((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL))<<(0x6d4eaeaa))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)+(vt0.c1)))>=((((vt0.c0))>=((vt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL))<<(0x6d4eaeaa))) ORDER BY ((((vt0.c0)+(vt0.c1)))>=((((vt0.c0))>=((vt0.c0))))) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((IFNULL(v0.c0, v0.c0))OR(((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(v0.c0)))AND(((v0.c0)*(v0.c0)))))AND((v0.c0 IN (v0.c0, v0.c0))))) ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOTNULL) ASC  NULLS LAST, ((v0.c0)||(v0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((((((IFNULL(v0.c0, v0.c0))OR(((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(v0.c0)))AND(((v0.c0)*(v0.c0)))))AND((v0.c0 IN (v0.c0, v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOTNULL) ASC  NULLS LAST, ((v0.c0)||(v0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((IFNULL(v0.c0, v0.c0))OR(((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(v0.c0)))AND(((v0.c0)*(v0.c0)))))AND((v0.c0 IN (v0.c0, v0.c0))))) ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOTNULL) ASC  NULLS LAST, ((v0.c0)||(v0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((((((IFNULL(v0.c0, v0.c0))OR(((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(v0.c0)))AND(((v0.c0)*(v0.c0)))))AND((v0.c0 IN (v0.c0, v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOTNULL) ASC  NULLS LAST, ((v0.c0)||(v0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((IFNULL(v0.c0, v0.c0))OR(((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(v0.c0)))AND(((v0.c0)*(v0.c0)))))AND((v0.c0 IN (v0.c0, v0.c0))))) ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOTNULL) ASC  NULLS LAST, ((v0.c0)||(v0.c0)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (TOTAL_CHANGES());
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (vt0.c1);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((TYPEOF(DISTINCT rt0.c1))AND(((0xffffffffee4fb490) IS TRUE))))OR(HEX(DISTINCT vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((TYPEOF(DISTINCT rt0.c1))AND(((0xffffffffee4fb490) IS TRUE))))OR(HEX(DISTINCT vt0.c1)))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((TYPEOF(DISTINCT rt0.c1))AND(((0xffffffffee4fb490) IS TRUE))))OR(HEX(DISTINCT vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((TYPEOF(DISTINCT rt0.c1))AND(((0xffffffffee4fb490) IS TRUE))))OR(HEX(DISTINCT vt0.c1)))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((TYPEOF(DISTINCT rt0.c1))AND(((0xffffffffee4fb490) IS TRUE))))OR(HEX(DISTINCT vt0.c1))));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((((vt0.c0)OR(0.5919981182909367 COLLATE RTRIM)))AND((~ (rt0.c1))))) ORDER BY CAST((((vt0.c0))<=((0.31024604022988445))) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(0.5919981182909367 COLLATE RTRIM)))AND((~ (rt0.c1))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CAST((((vt0.c0))<=((0.31024604022988445))) AS NUMERIC) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((((vt0.c0)OR(0.5919981182909367 COLLATE RTRIM)))AND((~ (rt0.c1))))) ORDER BY CAST((((vt0.c0))<=((0.31024604022988445))) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(0.5919981182909367 COLLATE RTRIM)))AND((~ (rt0.c1))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CAST((((vt0.c0))<=((0.31024604022988445))) AS NUMERIC) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((((vt0.c0)OR(0.5919981182909367 COLLATE RTRIM)))AND((~ (rt0.c1))))) ORDER BY CAST((((vt0.c0))<=((0.31024604022988445))) AS NUMERIC) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (+ ((+ (0.01831057360259558)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (+ ((+ (0.01831057360259558)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (+ ((+ (0.01831057360259558)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (+ ((+ (0.01831057360259558)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (+ ((+ (0.01831057360259558)))) ASC  NULLS FIRST;
SELECT * FROM vt0, rt0, v0 WHERE (json_extract((- (rt0.c2)), (vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((json_extract((- (rt0.c2)), (vt0.c1 IN ()))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (json_extract((- (rt0.c2)), (vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((json_extract((- (rt0.c2)), (vt0.c1 IN ()))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (json_extract((- (rt0.c2)), (vt0.c1 IN ())));
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c0)AND(v0.c0)))OR(0.9415786468056113))) NOT BETWEEN ((~ (0.6289907903775214))) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) ORDER BY (v0.c0 IN ()), ((((((v0.c0)AND(v0.c0)))AND(vt0.c1)))AND(((2.09887025E8)|(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(v0.c0)))OR(0.9415786468056113))) NOT BETWEEN ((~ (0.6289907903775214))) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (v0.c0 IN ()), ((((((v0.c0)AND(v0.c0)))AND(vt0.c1)))AND(((2.09887025E8)|(v0.c0)))) ASC);
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c0)AND(v0.c0)))OR(0.9415786468056113))) NOT BETWEEN ((~ (0.6289907903775214))) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) ORDER BY (v0.c0 IN ()), ((((((v0.c0)AND(v0.c0)))AND(vt0.c1)))AND(((2.09887025E8)|(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(v0.c0)))OR(0.9415786468056113))) NOT BETWEEN ((~ (0.6289907903775214))) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (v0.c0 IN ()), ((((((v0.c0)AND(v0.c0)))AND(vt0.c1)))AND(((2.09887025E8)|(v0.c0)))) ASC);
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c0)AND(v0.c0)))OR(0.9415786468056113))) NOT BETWEEN ((~ (0.6289907903775214))) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) ORDER BY (v0.c0 IN ()), ((((((v0.c0)AND(v0.c0)))AND(vt0.c1)))AND(((2.09887025E8)|(v0.c0)))) ASC;
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((rt0.c1)<<(vt0.c1)) IN ())) ORDER BY LOWER(DISTINCT rt0.c2 COLLATE NOCASE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)<<(vt0.c1)) IN ())) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY LOWER(DISTINCT rt0.c2 COLLATE NOCASE)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((rt0.c1)<<(vt0.c1)) IN ())) ORDER BY LOWER(DISTINCT rt0.c2 COLLATE NOCASE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)<<(vt0.c1)) IN ())) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY LOWER(DISTINCT rt0.c2 COLLATE NOCASE)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((rt0.c1)<<(vt0.c1)) IN ())) ORDER BY LOWER(DISTINCT rt0.c2 COLLATE NOCASE)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((CAST(vt0.c1 AS TEXT) IN ())) ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE NOCASE WHEN 0xffffffffb6f30a2f THEN rt0.c1 COLLATE BINARY WHEN ((x'')IS(rt0.c0)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((rt0.c2)>=(vt0.c1)) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)) WHEN NULL THEN ((0.6358657792283279) NOTNULL) ELSE (~ (vt0.c0)) END  NULLS FIRST, (((((vt0.c1)AND(rt0.c0)))OR(vt0.c1)) IN (rt0.c0));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS TEXT) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE NOCASE WHEN 0xffffffffb6f30a2f THEN rt0.c1 COLLATE BINARY WHEN ((x'')IS(rt0.c0)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((rt0.c2)>=(vt0.c1)) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)) WHEN NULL THEN ((0.6358657792283279) NOTNULL) ELSE (~ (vt0.c0)) END  NULLS FIRST, (((((vt0.c1)AND(rt0.c0)))OR(vt0.c1)) IN (rt0.c0)));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((CAST(vt0.c1 AS TEXT) IN ())) ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE NOCASE WHEN 0xffffffffb6f30a2f THEN rt0.c1 COLLATE BINARY WHEN ((x'')IS(rt0.c0)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((rt0.c2)>=(vt0.c1)) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)) WHEN NULL THEN ((0.6358657792283279) NOTNULL) ELSE (~ (vt0.c0)) END  NULLS FIRST, (((((vt0.c1)AND(rt0.c0)))OR(vt0.c1)) IN (rt0.c0));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS TEXT) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE NOCASE WHEN 0xffffffffb6f30a2f THEN rt0.c1 COLLATE BINARY WHEN ((x'')IS(rt0.c0)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((rt0.c2)>=(vt0.c1)) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)) WHEN NULL THEN ((0.6358657792283279) NOTNULL) ELSE (~ (vt0.c0)) END  NULLS FIRST, (((((vt0.c1)AND(rt0.c0)))OR(vt0.c1)) IN (rt0.c0)));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((CAST(vt0.c1 AS TEXT) IN ())) ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE NOCASE WHEN 0xffffffffb6f30a2f THEN rt0.c1 COLLATE BINARY WHEN ((x'')IS(rt0.c0)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((rt0.c2)>=(vt0.c1)) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)) WHEN NULL THEN ((0.6358657792283279) NOTNULL) ELSE (~ (vt0.c0)) END  NULLS FIRST, (((((vt0.c1)AND(rt0.c0)))OR(vt0.c1)) IN (rt0.c0));
SELECT COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN rt0 ON -1.558906556E9 WHERE ((((vt0.c0 IN (rt0.c1)))/(((((vt0.c0)OR(rt0.c2)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (rt0.c1)))/(((((vt0.c0)OR(rt0.c2)))AND(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN rt0 ON -1.558906556E9);
SELECT COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN rt0 ON -1.558906556E9 WHERE ((((vt0.c0 IN (rt0.c1)))/(((((vt0.c0)OR(rt0.c2)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (rt0.c1)))/(((((vt0.c0)OR(rt0.c2)))AND(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN rt0 ON -1.558906556E9);
SELECT COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN rt0 ON -1.558906556E9 WHERE ((((vt0.c0 IN (rt0.c1)))/(((((vt0.c0)OR(rt0.c2)))AND(vt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((0.02789760284871834, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)), rt0.c2)) AND ((rt0.c2 COLLATE BINARY, ((rt0.c0)|(rt0.c0)), CASE WHEN NULL THEN 0x272313f1 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((0.02789760284871834, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)), rt0.c2)) AND ((rt0.c2 COLLATE BINARY, ((rt0.c0)|(rt0.c0)), CASE WHEN NULL THEN 0x272313f1 END)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((0.02789760284871834, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)), rt0.c2)) AND ((rt0.c2 COLLATE BINARY, ((rt0.c0)|(rt0.c0)), CASE WHEN NULL THEN 0x272313f1 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((0.02789760284871834, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)), rt0.c2)) AND ((rt0.c2 COLLATE BINARY, ((rt0.c0)|(rt0.c0)), CASE WHEN NULL THEN 0x272313f1 END)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((0.02789760284871834, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)), rt0.c2)) AND ((rt0.c2 COLLATE BINARY, ((rt0.c0)|(rt0.c0)), CASE WHEN NULL THEN 0x272313f1 END))));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON TRIM(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)), (((vt0.c0))>=((v0.c0)))) WHERE (((((vt0.c1)<(v0.c0))) ISNULL)) ORDER BY (NOT (((vt0.c1)<=(v0.c0)))) ASC, (((((vt0.c0))==((vt0.c1))))-((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)<(v0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON TRIM(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)), (((vt0.c0))>=((v0.c0)))) ORDER BY (NOT (((vt0.c1)<=(v0.c0)))) ASC, (((((vt0.c0))==((vt0.c1))))-((v0.c0 IN ()))));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON TRIM(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)), (((vt0.c0))>=((v0.c0)))) WHERE (((((vt0.c1)<(v0.c0))) ISNULL)) ORDER BY (NOT (((vt0.c1)<=(v0.c0)))) ASC, (((((vt0.c0))==((vt0.c1))))-((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)<(v0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON TRIM(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)), (((vt0.c0))>=((v0.c0)))) ORDER BY (NOT (((vt0.c1)<=(v0.c0)))) ASC, (((((vt0.c0))==((vt0.c1))))-((v0.c0 IN ()))));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON TRIM(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)), (((vt0.c0))>=((v0.c0)))) WHERE (((((vt0.c1)<(v0.c0))) ISNULL)) ORDER BY (NOT (((vt0.c1)<=(v0.c0)))) ASC, (((((vt0.c0))==((vt0.c1))))-((v0.c0 IN ())));
SELECT * FROM vt0 WHERE (json_patch((vt0.c0 IN ()), -1)) ORDER BY vt0.c0 COLLATE RTRIM ASC  NULLS FIRST, ((((((((((vt0.c1)||(-738528296)))AND(vt0.c1)))OR(((vt0.c0) IS TRUE))))OR((~ (vt0.c0)))))AND((NOT (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_patch((vt0.c0 IN ()), -1)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE RTRIM ASC  NULLS FIRST, ((((((((((vt0.c1)||(-738528296)))AND(vt0.c1)))OR(((vt0.c0) IS TRUE))))OR((~ (vt0.c0)))))AND((NOT (vt0.c1))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (json_patch((vt0.c0 IN ()), -1)) ORDER BY vt0.c0 COLLATE RTRIM ASC  NULLS FIRST, ((((((((((vt0.c1)||(-738528296)))AND(vt0.c1)))OR(((vt0.c0) IS TRUE))))OR((~ (vt0.c0)))))AND((NOT (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_patch((vt0.c0 IN ()), -1)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE RTRIM ASC  NULLS FIRST, ((((((((((vt0.c1)||(-738528296)))AND(vt0.c1)))OR(((vt0.c0) IS TRUE))))OR((~ (vt0.c0)))))AND((NOT (vt0.c1))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (json_patch((vt0.c0 IN ()), -1)) ORDER BY vt0.c0 COLLATE RTRIM ASC  NULLS FIRST, ((((((((((vt0.c1)||(-738528296)))AND(vt0.c1)))OR(((vt0.c0) IS TRUE))))OR((~ (vt0.c0)))))AND((NOT (vt0.c1))))  NULLS FIRST;
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY ((rt0.c0 COLLATE BINARY) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((rt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE BINARY) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((rt0.c0) ISNULL))));
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY ((rt0.c0 COLLATE BINARY) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((rt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE BINARY) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((rt0.c0) ISNULL))));
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY ((rt0.c0 COLLATE BINARY) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((rt0.c0) ISNULL)));
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON x'' WHERE (IFNULL(DISTINCT ((rt0.c2)OR(v0.c0)), (('-1744292356')%(v0.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((rt0.c2)OR(v0.c0)), (('-1744292356')%(v0.c0)))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON x'');
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON x'' WHERE (IFNULL(DISTINCT ((rt0.c2)OR(v0.c0)), (('-1744292356')%(v0.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((rt0.c2)OR(v0.c0)), (('-1744292356')%(v0.c0)))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON x'');
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON x'' WHERE (IFNULL(DISTINCT ((rt0.c2)OR(v0.c0)), (('-1744292356')%(v0.c0))));
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE rtreenode(vt0.c0, vt0.c1)  WHEN vt0.c0 THEN ((vt0.c0) NOTNULL) WHEN 0.7198116941305369 THEN ((((v0.c0)OR(v0.c0)))AND(vt0.c0)) WHEN (~ (vt0.c0)) THEN (+ (v0.c0)) ELSE UPPER(vt0.c1) END) ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (v0.c0))) BETWEEN ((vt0.c1 IN (vt0.c1))) AND (CAST(v0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((CASE rtreenode(vt0.c0, vt0.c1)  WHEN vt0.c0 THEN ((vt0.c0) NOTNULL) WHEN 0.7198116941305369 THEN ((((v0.c0)OR(v0.c0)))AND(vt0.c0)) WHEN (~ (vt0.c0)) THEN (+ (v0.c0)) ELSE UPPER(vt0.c1) END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (v0.c0))) BETWEEN ((vt0.c1 IN (vt0.c1))) AND (CAST(v0.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE rtreenode(vt0.c0, vt0.c1)  WHEN vt0.c0 THEN ((vt0.c0) NOTNULL) WHEN 0.7198116941305369 THEN ((((v0.c0)OR(v0.c0)))AND(vt0.c0)) WHEN (~ (vt0.c0)) THEN (+ (v0.c0)) ELSE UPPER(vt0.c1) END) ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (v0.c0))) BETWEEN ((vt0.c1 IN (vt0.c1))) AND (CAST(v0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((CASE rtreenode(vt0.c0, vt0.c1)  WHEN vt0.c0 THEN ((vt0.c0) NOTNULL) WHEN 0.7198116941305369 THEN ((((v0.c0)OR(v0.c0)))AND(vt0.c0)) WHEN (~ (vt0.c0)) THEN (+ (v0.c0)) ELSE UPPER(vt0.c1) END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (v0.c0))) BETWEEN ((vt0.c1 IN (vt0.c1))) AND (CAST(v0.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE rtreenode(vt0.c0, vt0.c1)  WHEN vt0.c0 THEN ((vt0.c0) NOTNULL) WHEN 0.7198116941305369 THEN ((((v0.c0)OR(v0.c0)))AND(vt0.c0)) WHEN (~ (vt0.c0)) THEN (+ (v0.c0)) ELSE UPPER(vt0.c1) END) ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (v0.c0))) BETWEEN ((vt0.c1 IN (vt0.c1))) AND (CAST(v0.c0 AS INTEGER)));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CASE WHEN json_array(vt0.c0, rt0.c1) THEN rt0.c0 COLLATE NOCASE ELSE highlight(rt0.c2, rt0.c1, rt0.c1, rt0.c1) END) ORDER BY CASE WHEN vt0.c0 THEN v0.c0 COLLATE NOCASE WHEN ((rt0.c1) BETWEEN (vt0.c0) AND (v0.c0)) THEN CAST(vt0.c1 AS REAL) WHEN CAST(rt0.c2 AS INTEGER) THEN ((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_array(vt0.c0, rt0.c1) THEN rt0.c0 COLLATE NOCASE ELSE highlight(rt0.c2, rt0.c1, rt0.c1, rt0.c1) END) IS TRUE)  as count FROM v0 NOT INDEXED, vt0, rt0 ORDER BY CASE WHEN vt0.c0 THEN v0.c0 COLLATE NOCASE WHEN ((rt0.c1) BETWEEN (vt0.c0) AND (v0.c0)) THEN CAST(vt0.c1 AS REAL) WHEN CAST(rt0.c2 AS INTEGER) THEN ((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CASE WHEN json_array(vt0.c0, rt0.c1) THEN rt0.c0 COLLATE NOCASE ELSE highlight(rt0.c2, rt0.c1, rt0.c1, rt0.c1) END) ORDER BY CASE WHEN vt0.c0 THEN v0.c0 COLLATE NOCASE WHEN ((rt0.c1) BETWEEN (vt0.c0) AND (v0.c0)) THEN CAST(vt0.c1 AS REAL) WHEN CAST(rt0.c2 AS INTEGER) THEN ((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_array(vt0.c0, rt0.c1) THEN rt0.c0 COLLATE NOCASE ELSE highlight(rt0.c2, rt0.c1, rt0.c1, rt0.c1) END) IS TRUE)  as count FROM v0 NOT INDEXED, vt0, rt0 ORDER BY CASE WHEN vt0.c0 THEN v0.c0 COLLATE NOCASE WHEN ((rt0.c1) BETWEEN (vt0.c0) AND (v0.c0)) THEN CAST(vt0.c1 AS REAL) WHEN CAST(rt0.c2 AS INTEGER) THEN ((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CASE WHEN json_array(vt0.c0, rt0.c1) THEN rt0.c0 COLLATE NOCASE ELSE highlight(rt0.c2, rt0.c1, rt0.c1, rt0.c1) END) ORDER BY CASE WHEN vt0.c0 THEN v0.c0 COLLATE NOCASE WHEN ((rt0.c1) BETWEEN (vt0.c0) AND (v0.c0)) THEN CAST(vt0.c1 AS REAL) WHEN CAST(rt0.c2 AS INTEGER) THEN ((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)) END  NULLS FIRST;
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((vt0.c1)OR(v0.c0)))LIKE(((v0.c0)-(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)OR(v0.c0)))LIKE(((v0.c0)-(rt0.c2))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((vt0.c1)OR(v0.c0)))LIKE(((v0.c0)-(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)OR(v0.c0)))LIKE(((v0.c0)-(rt0.c2))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((vt0.c1)OR(v0.c0)))LIKE(((v0.c0)-(rt0.c2)))));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((vt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ())) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((vt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ())) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((vt0.c1 IN ()));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ('\rx') ORDER BY (((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((v0.c0 COLLATE NOCASE, CAST(v0.c0 AS TEXT), ((((rt0.c1)OR(rt0.c2)))AND(v0.c0)))) AND ((CAST(NULL AS BLOB), ((((v0.c0)OR(0.9494329564070386)))AND(v0.c0)), ((((v0.c0)AND(rt0.c0)))OR(v0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('\rx') IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((v0.c0 COLLATE NOCASE, CAST(v0.c0 AS TEXT), ((((rt0.c1)OR(rt0.c2)))AND(v0.c0)))) AND ((CAST(NULL AS BLOB), ((((v0.c0)OR(0.9494329564070386)))AND(v0.c0)), ((((v0.c0)AND(rt0.c0)))OR(v0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ('\rx') ORDER BY (((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((v0.c0 COLLATE NOCASE, CAST(v0.c0 AS TEXT), ((((rt0.c1)OR(rt0.c2)))AND(v0.c0)))) AND ((CAST(NULL AS BLOB), ((((v0.c0)OR(0.9494329564070386)))AND(v0.c0)), ((((v0.c0)AND(rt0.c0)))OR(v0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('\rx') IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((v0.c0 COLLATE NOCASE, CAST(v0.c0 AS TEXT), ((((rt0.c1)OR(rt0.c2)))AND(v0.c0)))) AND ((CAST(NULL AS BLOB), ((((v0.c0)OR(0.9494329564070386)))AND(v0.c0)), ((((v0.c0)AND(rt0.c0)))OR(v0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ('\rx') ORDER BY (((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((v0.c0 COLLATE NOCASE, CAST(v0.c0 AS TEXT), ((((rt0.c1)OR(rt0.c2)))AND(v0.c0)))) AND ((CAST(NULL AS BLOB), ((((v0.c0)OR(0.9494329564070386)))AND(v0.c0)), ((((v0.c0)AND(rt0.c0)))OR(v0.c0))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN v0 ON ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)))&((+ (rt0.c0)))) WHERE ((((((~ (x'02e2')))AND(((v0.c0)>>(rt0.c0)))))OR(vt0.c0 COLLATE BINARY))) ORDER BY (((rt0.c2)) BETWEEN (((((rt0.c0))>=((vt0.c1))))) AND ((LIKE(rt0.c0, vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((~ (x'02e2')))AND(((v0.c0)>>(rt0.c0)))))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)))&((+ (rt0.c0)))) ORDER BY (((rt0.c2)) BETWEEN (((((rt0.c0))>=((vt0.c1))))) AND ((LIKE(rt0.c0, vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN v0 ON ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)))&((+ (rt0.c0)))) WHERE ((((((~ (x'02e2')))AND(((v0.c0)>>(rt0.c0)))))OR(vt0.c0 COLLATE BINARY))) ORDER BY (((rt0.c2)) BETWEEN (((((rt0.c0))>=((vt0.c1))))) AND ((LIKE(rt0.c0, vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((~ (x'02e2')))AND(((v0.c0)>>(rt0.c0)))))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)))&((+ (rt0.c0)))) ORDER BY (((rt0.c2)) BETWEEN (((((rt0.c0))>=((vt0.c1))))) AND ((LIKE(rt0.c0, vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN v0 ON ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)))&((+ (rt0.c0)))) WHERE ((((((~ (x'02e2')))AND(((v0.c0)>>(rt0.c0)))))OR(vt0.c0 COLLATE BINARY))) ORDER BY (((rt0.c2)) BETWEEN (((((rt0.c0))>=((vt0.c1))))) AND ((LIKE(rt0.c0, vt0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), (+ (vt0.c1)), CASE 0.3490238255975838  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END))<=((UPPER(vt0.c0), CAST(vt0.c1 AS BLOB), ((vt0.c1)=(vt0.c0)))))  NULLS LAST, CAST(json_extract(vt0.c1, vt0.c0, vt0.c0, vt0.c1) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), (+ (vt0.c1)), CASE 0.3490238255975838  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END))<=((UPPER(vt0.c0), CAST(vt0.c1 AS BLOB), ((vt0.c1)=(vt0.c0)))))  NULLS LAST, CAST(json_extract(vt0.c1, vt0.c0, vt0.c0, vt0.c1) AS TEXT) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), (+ (vt0.c1)), CASE 0.3490238255975838  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END))<=((UPPER(vt0.c0), CAST(vt0.c1 AS BLOB), ((vt0.c1)=(vt0.c0)))))  NULLS LAST, CAST(json_extract(vt0.c1, vt0.c0, vt0.c0, vt0.c1) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), (+ (vt0.c1)), CASE 0.3490238255975838  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END))<=((UPPER(vt0.c0), CAST(vt0.c1 AS BLOB), ((vt0.c1)=(vt0.c0)))))  NULLS LAST, CAST(json_extract(vt0.c1, vt0.c0, vt0.c0, vt0.c1) AS TEXT) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), (+ (vt0.c1)), CASE 0.3490238255975838  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END))<=((UPPER(vt0.c0), CAST(vt0.c1 AS BLOB), ((vt0.c1)=(vt0.c0)))))  NULLS LAST, CAST(json_extract(vt0.c1, vt0.c0, vt0.c0, vt0.c1) AS TEXT) DESC;
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((~ (vt0.c1))) ORDER BY (((rt0.c1) ISNULL) IN ()) DESC  NULLS FIRST, ((rt0.c0 IN ()) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c1))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (((rt0.c1) ISNULL) IN ()) DESC  NULLS FIRST, ((rt0.c0 IN ()) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((~ (vt0.c1))) ORDER BY (((rt0.c1) ISNULL) IN ()) DESC  NULLS FIRST, ((rt0.c0 IN ()) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c1))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (((rt0.c1) ISNULL) IN ()) DESC  NULLS FIRST, ((rt0.c0 IN ()) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((~ (vt0.c1))) ORDER BY (((rt0.c1) ISNULL) IN ()) DESC  NULLS FIRST, ((rt0.c0 IN ()) IN ()) ASC;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)-(rt0.c1)))<((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)-(rt0.c1)))<((- (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)-(rt0.c1)))<((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)-(rt0.c1)))<((- (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)-(rt0.c1)))<((- (rt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((IFNULL(DISTINCT vt0.c0, vt0.c0))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((IFNULL(DISTINCT vt0.c0, vt0.c0))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((IFNULL(DISTINCT vt0.c0, vt0.c0))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((IFNULL(DISTINCT vt0.c0, vt0.c0))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((IFNULL(DISTINCT vt0.c0, vt0.c0))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END))));
SELECT * FROM v0 WHERE (CHAR(((v0.c0)<>(v0.c0)), (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), v0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(((v0.c0)<>(v0.c0)), (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), v0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CHAR(((v0.c0)<>(v0.c0)), (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), v0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(((v0.c0)<>(v0.c0)), (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), v0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CHAR(((v0.c0)<>(v0.c0)), (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), v0.c0 COLLATE NOCASE));
SELECT ALL * FROM rt0, v0, vt0 WHERE ((+ (rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE ((+ (rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE ((+ (rt0.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR((- (vt0.c1)))))AND(((vt0.c1)AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR((- (vt0.c1)))))AND(((vt0.c1)AND(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR((- (vt0.c1)))))AND(((vt0.c1)AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR((- (vt0.c1)))))AND(((vt0.c1)AND(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR((- (vt0.c1)))))AND(((vt0.c1)AND(vt0.c1)))));
SELECT ALL * FROM v0 WHERE (((((((((((((x'3b5f')OR(v0.c0)))OR(v0.c0)))OR(-399078540)))OR(v0.c0)))AND(NULL)))AND(v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((((((x'3b5f')OR(v0.c0)))OR(v0.c0)))OR(-399078540)))OR(v0.c0)))AND(NULL)))AND(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((((((x'3b5f')OR(v0.c0)))OR(v0.c0)))OR(-399078540)))OR(v0.c0)))AND(NULL)))AND(v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((((((x'3b5f')OR(v0.c0)))OR(v0.c0)))OR(-399078540)))OR(v0.c0)))AND(NULL)))AND(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((((((x'3b5f')OR(v0.c0)))OR(v0.c0)))OR(-399078540)))OR(v0.c0)))AND(NULL)))AND(v0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)&((rt0.c1 IN ())))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)&((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)&((rt0.c1 IN ())))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)&((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)&((rt0.c1 IN ())))) ORDER BY NULL ASC;
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CASE ROUND(rt0.c1, rt0.c0)  WHEN v0.c0 THEN x'' ELSE ((vt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) END) ORDER BY ((((rt0.c0) ISNULL)) NOTNULL)  NULLS LAST, LIKELY(vt0.c1 COLLATE NOCASE)  NULLS LAST, ((x'ed0fc39d')>((((v0.c0))=((vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ROUND(rt0.c1, rt0.c0)  WHEN v0.c0 THEN x'' ELSE ((vt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) END) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((rt0.c0) ISNULL)) NOTNULL)  NULLS LAST, LIKELY(vt0.c1 COLLATE NOCASE)  NULLS LAST, ((x'ed0fc39d')>((((v0.c0))==((vt0.c1)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CASE ROUND(rt0.c1, rt0.c0)  WHEN v0.c0 THEN x'' ELSE ((vt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) END) ORDER BY ((((rt0.c0) ISNULL)) NOTNULL)  NULLS LAST, LIKELY(vt0.c1 COLLATE NOCASE)  NULLS LAST, ((x'ed0fc39d')>((((v0.c0))=((vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ROUND(rt0.c1, rt0.c0)  WHEN v0.c0 THEN x'' ELSE ((vt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) END) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((rt0.c0) ISNULL)) NOTNULL)  NULLS LAST, LIKELY(vt0.c1 COLLATE NOCASE)  NULLS LAST, ((x'ed0fc39d')>((((v0.c0))==((vt0.c1)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CASE ROUND(rt0.c1, rt0.c0)  WHEN v0.c0 THEN x'' ELSE ((vt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) END) ORDER BY ((((rt0.c0) ISNULL)) NOTNULL)  NULLS LAST, LIKELY(vt0.c1 COLLATE NOCASE)  NULLS LAST, ((x'ed0fc39d')>((((v0.c0))=((vt0.c1)))))  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE (NULL) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt0 ORDER BY vt0.c1 ASC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (NULL) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt0 ORDER BY vt0.c1 ASC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (NULL) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ('o/') ORDER BY ((CAST(vt0.c1 AS NUMERIC))>=(rt0.c1 COLLATE BINARY))  NULLS FIRST, (((((((((vt0.c1 IN ()))AND((vt0.c1 IN (rt0.c1, rt0.c2)))))AND(((rt0.c0) IS TRUE))))OR(CAST(vt0.c1 AS NUMERIC))))AND(CAST(vt0.c1 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('o/') IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(vt0.c1 AS NUMERIC))>=(rt0.c1 COLLATE BINARY))  NULLS FIRST, (((((((((vt0.c1 IN ()))AND((vt0.c1 IN (rt0.c1, rt0.c2)))))AND(((rt0.c0) IS TRUE))))OR(CAST(vt0.c1 AS NUMERIC))))AND(CAST(vt0.c1 AS BLOB))) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ('o/') ORDER BY ((CAST(vt0.c1 AS NUMERIC))>=(rt0.c1 COLLATE BINARY))  NULLS FIRST, (((((((((vt0.c1 IN ()))AND((vt0.c1 IN (rt0.c1, rt0.c2)))))AND(((rt0.c0) IS TRUE))))OR(CAST(vt0.c1 AS NUMERIC))))AND(CAST(vt0.c1 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('o/') IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(vt0.c1 AS NUMERIC))>=(rt0.c1 COLLATE BINARY))  NULLS FIRST, (((((((((vt0.c1 IN ()))AND((vt0.c1 IN (rt0.c1, rt0.c2)))))AND(((rt0.c0) IS TRUE))))OR(CAST(vt0.c1 AS NUMERIC))))AND(CAST(vt0.c1 AS BLOB))) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ('o/') ORDER BY ((CAST(vt0.c1 AS NUMERIC))>=(rt0.c1 COLLATE BINARY))  NULLS FIRST, (((((((((vt0.c1 IN ()))AND((vt0.c1 IN (rt0.c1, rt0.c2)))))AND(((rt0.c0) IS TRUE))))OR(CAST(vt0.c1 AS NUMERIC))))AND(CAST(vt0.c1 AS BLOB))) ASC;
SELECT ALL * FROM v0, rt0 FULL OUTER JOIN vt0 ON ((((CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)AND(CASE v0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE 0X56199962 END)))AND((((vt0.c0))<>((vt0.c1))))) WHERE ((((NOT (rt0.c0)))<=(((vt0.c0)GLOB(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c0)))<=(((vt0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN vt0 ON ((((CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)AND(CASE v0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE 0X56199962 END)))AND((((vt0.c0))!=((vt0.c1))))));
SELECT ALL * FROM v0, rt0 FULL OUTER JOIN vt0 ON ((((CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)AND(CASE v0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE 0X56199962 END)))AND((((vt0.c0))<>((vt0.c1))))) WHERE ((((NOT (rt0.c0)))<=(((vt0.c0)GLOB(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c0)))<=(((vt0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN vt0 ON ((((CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)AND(CASE v0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE 0X56199962 END)))AND((((vt0.c0))!=((vt0.c1))))));
SELECT ALL * FROM v0, rt0 FULL OUTER JOIN vt0 ON ((((CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)AND(CASE v0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE 0X56199962 END)))AND((((vt0.c0))<>((vt0.c1))))) WHERE ((((NOT (rt0.c0)))<=(((vt0.c0)GLOB(v0.c0)))));
SELECT * FROM v0, vt0, rt0 WHERE (TYPEOF((NOT (rt0.c1)))) ORDER BY (((((((((rt0.c2)AND(rt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((TYPEOF((NOT (rt0.c1)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((((((((rt0.c2)AND(rt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)) IN ()));
SELECT * FROM v0, vt0, rt0 WHERE (TYPEOF((NOT (rt0.c1)))) ORDER BY (((((((((rt0.c2)AND(rt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((TYPEOF((NOT (rt0.c1)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((((((((rt0.c2)AND(rt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)) IN ()));
SELECT * FROM v0, vt0, rt0 WHERE (TYPEOF((NOT (rt0.c1)))) ORDER BY (((((((((rt0.c2)AND(rt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)) IN ());
SELECT * FROM vt0 WHERE (((vt0.c0)AND(json_array_length(vt0.c1, vt0.c1)))) ORDER BY CASE IFNULL(vt0.c0, vt0.c0)  WHEN vt0.c0 COLLATE BINARY THEN (vt0.c1 IN ()) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)AND(json_array_length(vt0.c1, vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY CASE IFNULL(vt0.c0, vt0.c0)  WHEN vt0.c0 COLLATE BINARY THEN (vt0.c1 IN ()) END ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c0)AND(json_array_length(vt0.c1, vt0.c1)))) ORDER BY CASE IFNULL(vt0.c0, vt0.c0)  WHEN vt0.c0 COLLATE BINARY THEN (vt0.c1 IN ()) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)AND(json_array_length(vt0.c1, vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY CASE IFNULL(vt0.c0, vt0.c0)  WHEN vt0.c0 COLLATE BINARY THEN (vt0.c1 IN ()) END ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c0)AND(json_array_length(vt0.c1, vt0.c1)))) ORDER BY CASE IFNULL(vt0.c0, vt0.c0)  WHEN vt0.c0 COLLATE BINARY THEN (vt0.c1 IN ()) END ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON '0.6088899191320521' CROSS JOIN vt0 ON IFNULL(DISTINCT CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, (NULL IN ())) WHERE ((('')AND(rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((('')AND(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON '0.6088899191320521' CROSS JOIN vt0 ON IFNULL(DISTINCT CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, (NULL IN ())));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON '0.6088899191320521' CROSS JOIN vt0 ON IFNULL(DISTINCT CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, (NULL IN ())) WHERE ((('')AND(rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((('')AND(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON '0.6088899191320521' CROSS JOIN vt0 ON IFNULL(DISTINCT CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, (NULL IN ())));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON '0.6088899191320521' CROSS JOIN vt0 ON IFNULL(DISTINCT CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, (NULL IN ())) WHERE ((('')AND(rt0.c0)) COLLATE BINARY);
SELECT * FROM vt0 CROSS JOIN v0 ON ((vt0.c0 COLLATE RTRIM)/(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(v0.c0)))OR(v0.c0)))) WHERE (SQLITE_SOURCE_ID()) ORDER BY (NOT (IFNULL(v0.c0, vt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((vt0.c0 COLLATE RTRIM)/(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(v0.c0)))OR(v0.c0)))) ORDER BY (NOT (IFNULL(v0.c0, vt0.c1))) DESC  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN v0 ON ((vt0.c0 COLLATE RTRIM)/(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(v0.c0)))OR(v0.c0)))) WHERE (SQLITE_SOURCE_ID()) ORDER BY (NOT (IFNULL(v0.c0, vt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((vt0.c0 COLLATE RTRIM)/(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(v0.c0)))OR(v0.c0)))) ORDER BY (NOT (IFNULL(v0.c0, vt0.c1))) DESC  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN v0 ON ((vt0.c0 COLLATE RTRIM)/(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(v0.c0)))OR(v0.c0)))) WHERE (SQLITE_SOURCE_ID()) ORDER BY (NOT (IFNULL(v0.c0, vt0.c1))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)) AS NUMERIC) CROSS JOIN v0 ON 0X3ed3a19e WHERE (CAST(x'' AS BLOB)) ORDER BY CASE '0.7198116941305369' COLLATE NOCASE  WHEN (NOT (rt0.c0)) THEN ((v0.c0)<(rt0.c2)) WHEN CASE rt0.c1  WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c1 END THEN ((rt0.c2)GLOB(rt0.c2)) WHEN (rt0.c0 IN ()) THEN (((v0.c0, rt0.c0, v0.c0))<((rt0.c1, vt0.c0, vt0.c1))) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS BLOB)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)) AS NUMERIC) CROSS JOIN v0 ON 0x3ed3a19e ORDER BY CASE '0.7198116941305369' COLLATE NOCASE  WHEN (NOT (rt0.c0)) THEN ((v0.c0)<(rt0.c2)) WHEN CASE rt0.c1  WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c1 END THEN ((rt0.c2)GLOB(rt0.c2)) WHEN (rt0.c0 IN ()) THEN (((v0.c0, rt0.c0, v0.c0))<((rt0.c1, vt0.c0, vt0.c1))) END DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)) AS NUMERIC) CROSS JOIN v0 ON 0X3ed3a19e WHERE (CAST(x'' AS BLOB)) ORDER BY CASE '0.7198116941305369' COLLATE NOCASE  WHEN (NOT (rt0.c0)) THEN ((v0.c0)<(rt0.c2)) WHEN CASE rt0.c1  WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c1 END THEN ((rt0.c2)GLOB(rt0.c2)) WHEN (rt0.c0 IN ()) THEN (((v0.c0, rt0.c0, v0.c0))<((rt0.c1, vt0.c0, vt0.c1))) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS BLOB)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)) AS NUMERIC) CROSS JOIN v0 ON 0x3ed3a19e ORDER BY CASE '0.7198116941305369' COLLATE NOCASE  WHEN (NOT (rt0.c0)) THEN ((v0.c0)<(rt0.c2)) WHEN CASE rt0.c1  WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c1 END THEN ((rt0.c2)GLOB(rt0.c2)) WHEN (rt0.c0 IN ()) THEN (((v0.c0, rt0.c0, v0.c0))<((rt0.c1, vt0.c0, vt0.c1))) END DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((((((v0.c0)AND(rt0.c0)))AND(v0.c0)))AND(rt0.c1)))AND(v0.c0)))||((((rt0.c2))>=((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)AND(rt0.c0)))AND(v0.c0)))AND(rt0.c1)))AND(v0.c0)))||((((rt0.c2))>=((rt0.c0)))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((((((v0.c0)AND(rt0.c0)))AND(v0.c0)))AND(rt0.c1)))AND(v0.c0)))||((((rt0.c2))>=((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)AND(rt0.c0)))AND(v0.c0)))AND(rt0.c1)))AND(v0.c0)))||((((rt0.c2))>=((rt0.c0)))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((((((v0.c0)AND(rt0.c0)))AND(v0.c0)))AND(rt0.c1)))AND(v0.c0)))||((((rt0.c2))>=((rt0.c0))))));
SELECT * FROM v0 WHERE (((v0.c0 COLLATE BINARY) BETWEEN ((((v0.c0))==((v0.c0)))) AND ((v0.c0 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY) BETWEEN ((((v0.c0))=((v0.c0)))) AND ((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE BINARY) BETWEEN ((((v0.c0))==((v0.c0)))) AND ((v0.c0 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY) BETWEEN ((((v0.c0))=((v0.c0)))) AND ((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE BINARY) BETWEEN ((((v0.c0))==((v0.c0)))) AND ((v0.c0 IN (v0.c0)))));
SELECT * FROM v0, vt0, rt0 WHERE (((((vt0.c0) IS TRUE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM v0 NOT INDEXED, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (((((vt0.c0) IS TRUE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM v0 NOT INDEXED, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (((((vt0.c0) IS TRUE)) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)-(rt0.c2))) BETWEEN (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1))) AND (CASE WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY ((((((((((rt0.c1)OR(rt0.c0)))OR('-1878549284')))AND('')))OR(rt0.c0)))%(((rt0.c1) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)-(rt0.c2))) BETWEEN (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1))) AND (CASE WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c1)OR(rt0.c0)))OR('-1878549284')))AND('')))OR(rt0.c0)))%(((rt0.c1) ISNULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)-(rt0.c2))) BETWEEN (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1))) AND (CASE WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY ((((((((((rt0.c1)OR(rt0.c0)))OR('-1878549284')))AND('')))OR(rt0.c0)))%(((rt0.c1) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)-(rt0.c2))) BETWEEN (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1))) AND (CASE WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c1)OR(rt0.c0)))OR('-1878549284')))AND('')))OR(rt0.c0)))%(((rt0.c1) ISNULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)-(rt0.c2))) BETWEEN (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1))) AND (CASE WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY ((((((((((rt0.c1)OR(rt0.c0)))OR('-1878549284')))AND('')))OR(rt0.c0)))%(((rt0.c1) ISNULL))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((((((NOT (rt0.c1)))AND((0xffffffffee4fb490 IN ()))))AND(x'0c6c')))AND(0.48272200675310717)))AND('')));
SELECT SUM(count) FROM (SELECT (((((((((((NOT (rt0.c1)))AND((0Xffffffffee4fb490 IN ()))))AND(x'0c6c')))AND(0.48272200675310717)))AND(''))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((((((NOT (rt0.c1)))AND((0xffffffffee4fb490 IN ()))))AND(x'0c6c')))AND(0.48272200675310717)))AND('')));
SELECT SUM(count) FROM (SELECT (((((((((((NOT (rt0.c1)))AND((0Xffffffffee4fb490 IN ()))))AND(x'0c6c')))AND(0.48272200675310717)))AND(''))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((((((NOT (rt0.c1)))AND((0xffffffffee4fb490 IN ()))))AND(x'0c6c')))AND(0.48272200675310717)))AND('')));
SELECT ALL * FROM rt0, vt0, v0 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE BINARY) ORDER BY (((rt0.c0)>=(x'431f')) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((rt0.c0)>=(x'431f')) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, v0 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE BINARY) ORDER BY (((rt0.c0)>=(x'431f')) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((rt0.c0)>=(x'431f')) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, v0 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE BINARY) ORDER BY (((rt0.c0)>=(x'431f')) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0) ORDER BY CASE CAST(x'' AS BLOB)  WHEN ((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)) THEN (vt0.c1 IN (vt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE CAST(x'' AS BLOB)  WHEN ((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)) THEN (vt0.c1 IN (vt0.c0)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0) ORDER BY CASE CAST(x'' AS BLOB)  WHEN ((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)) THEN (vt0.c1 IN (vt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE CAST(x'' AS BLOB)  WHEN ((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)) THEN (vt0.c1 IN (vt0.c0)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0) ORDER BY CASE CAST(x'' AS BLOB)  WHEN ((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)) THEN (vt0.c1 IN (vt0.c0)) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c0)*(rt0.c2)))IS(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)*(rt0.c2)))IS(rt0.c1))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c0)*(rt0.c2)))IS(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)*(rt0.c2)))IS(rt0.c1))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c0)*(rt0.c2)))IS(rt0.c1)));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((- (vt0.c0 COLLATE RTRIM))) ORDER BY (((((rt0.c0)) BETWEEN (('-154982015')) AND ((vt0.c0))))OR((vt0.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((((rt0.c0)) BETWEEN (('-154982015')) AND ((vt0.c0))))OR((vt0.c1 IN ()))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((- (vt0.c0 COLLATE RTRIM))) ORDER BY (((((rt0.c0)) BETWEEN (('-154982015')) AND ((vt0.c0))))OR((vt0.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((((rt0.c0)) BETWEEN (('-154982015')) AND ((vt0.c0))))OR((vt0.c1 IN ()))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((- (vt0.c0 COLLATE RTRIM))) ORDER BY (((((rt0.c0)) BETWEEN (('-154982015')) AND ((vt0.c0))))OR((vt0.c1 IN ()))) DESC;
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON CASE json_insert(v0.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c1)  WHEN ((NULL) NOT BETWEEN (vt0.c1) AND (rt0.c2)) THEN (- (rt0.c1)) END INNER JOIN rt0 ON ((((NULL) IS TRUE)) NOT BETWEEN (rt0.c0) AND ((((rt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, v0.c0)) AND ((vt0.c1, rt0.c1, vt0.c1))))) WHERE (((((((((rt0.c2)OR(v0.c0)))AND(v0.c0)))AND(rt0.c0)))AND(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)OR(v0.c0)))AND(v0.c0)))AND(rt0.c0)))AND(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON CASE json_insert(v0.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c1)  WHEN ((NULL) NOT BETWEEN (vt0.c1) AND (rt0.c2)) THEN (- (rt0.c1)) END INNER JOIN rt0 ON ((((NULL) IS TRUE)) NOT BETWEEN (rt0.c0) AND ((((rt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, v0.c0)) AND ((vt0.c1, rt0.c1, vt0.c1))))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON CASE json_insert(v0.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c1)  WHEN ((NULL) NOT BETWEEN (vt0.c1) AND (rt0.c2)) THEN (- (rt0.c1)) END INNER JOIN rt0 ON ((((NULL) IS TRUE)) NOT BETWEEN (rt0.c0) AND ((((rt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, v0.c0)) AND ((vt0.c1, rt0.c1, vt0.c1))))) WHERE (((((((((rt0.c2)OR(v0.c0)))AND(v0.c0)))AND(rt0.c0)))AND(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)OR(v0.c0)))AND(v0.c0)))AND(rt0.c0)))AND(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON CASE json_insert(v0.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c1)  WHEN ((NULL) NOT BETWEEN (vt0.c1) AND (rt0.c2)) THEN (- (rt0.c1)) END INNER JOIN rt0 ON ((((NULL) IS TRUE)) NOT BETWEEN (rt0.c0) AND ((((rt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, v0.c0)) AND ((vt0.c1, rt0.c1, vt0.c1))))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON CASE json_insert(v0.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c1)  WHEN ((NULL) NOT BETWEEN (vt0.c1) AND (rt0.c2)) THEN (- (rt0.c1)) END INNER JOIN rt0 ON ((((NULL) IS TRUE)) NOT BETWEEN (rt0.c0) AND ((((rt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, v0.c0)) AND ((vt0.c1, rt0.c1, vt0.c1))))) WHERE (((((((((rt0.c2)OR(v0.c0)))AND(v0.c0)))AND(rt0.c0)))AND(rt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0, v0 WHERE (((v0.c0)IS NOT(((vt0.c0) BETWEEN (vt0.c1) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)IS NOT(((vt0.c0) BETWEEN (vt0.c1) AND (v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((v0.c0)IS NOT(((vt0.c0) BETWEEN (vt0.c1) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)IS NOT(((vt0.c0) BETWEEN (vt0.c1) AND (v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((v0.c0)IS NOT(((vt0.c0) BETWEEN (vt0.c1) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN v0 ON NULLIF(DISTINCT (('Ed]O2e')>=(vt0.c0)), ((vt0.c0) NOT BETWEEN (v0.c0) AND (0xc829f31))) WHERE (v0.c0) ORDER BY ((CASE WHEN x'' THEN vt0.c1 ELSE 0.8709274432754728 END) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, rt0 INNER JOIN v0 ON NULLIF(DISTINCT (('Ed]O2e')>=(vt0.c0)), ((vt0.c0) NOT BETWEEN (v0.c0) AND (0xc829f31))) ORDER BY ((CASE WHEN x'' THEN vt0.c1 ELSE 0.8709274432754728 END) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN v0 ON NULLIF(DISTINCT (('Ed]O2e')>=(vt0.c0)), ((vt0.c0) NOT BETWEEN (v0.c0) AND (0xc829f31))) WHERE (v0.c0) ORDER BY ((CASE WHEN x'' THEN vt0.c1 ELSE 0.8709274432754728 END) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, rt0 INNER JOIN v0 ON NULLIF(DISTINCT (('Ed]O2e')>=(vt0.c0)), ((vt0.c0) NOT BETWEEN (v0.c0) AND (0xc829f31))) ORDER BY ((CASE WHEN x'' THEN vt0.c1 ELSE 0.8709274432754728 END) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN v0 ON NULLIF(DISTINCT (('Ed]O2e')>=(vt0.c0)), ((vt0.c0) NOT BETWEEN (v0.c0) AND (0xc829f31))) WHERE (v0.c0) ORDER BY ((CASE WHEN x'' THEN vt0.c1 ELSE 0.8709274432754728 END) IS TRUE) ASC;
SELECT ALL * FROM v0 WHERE (((v0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0) IS TRUE));
